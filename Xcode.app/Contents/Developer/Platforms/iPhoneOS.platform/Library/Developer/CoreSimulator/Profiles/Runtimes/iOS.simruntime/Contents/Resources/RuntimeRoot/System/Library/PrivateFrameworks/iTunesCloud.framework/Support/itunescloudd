<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>22A380007</string>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>itunescloudd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.itunescloudd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>itunescloudd</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14E6097d</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.4</string>
<key>DTSDKBuild</key>
<string>20E5212d</string>
<key>DTSDKName</key>
<string>iphonesimulator16.4.internal</string>
<key>DTXcode</key>
<string>1430</string>
<key>DTXcodeBuild</key>
<string>14E6097d</string>
<key>MinimumOSVersion</key>
<string>16.4</string>
<key>NSHumanReadableCopyright</key>
<string>Copyright 
 2020 Apple Inc. All rights reserved.</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>adi-client</key>
<string>409835401</string>
<key>application-identifier</key>
<string>com.apple.itunescloudd</string>
<key>aps-connection-initiate</key>
<true/>
<key>backupd-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>data-allowed-write</string>
<string>spi</string>
</array>
<key>com.apple.PairingManager.Read</key>
<true/>
<key>com.apple.PairingManager.Write</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.accounts.inactive.fullaccess</key>
<true/>
<key>com.apple.atc.private</key>
<true/>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.coremedia.allow-protected-content-playback</key>
<true/>
<key>com.apple.developer.homekit</key>
<true/>
<key>com.apple.developer.networking.multipath</key>
<true/>
<key>com.apple.homekit.private-spi-access</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.networkd.set_source_application</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>CLIENT_ENTITLEMENT</string>
</array>
<key>com.apple.private.FairPlayIOKitUserClient.access</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.cfnetwork.har-capture-amp</key>
<true/>
<key>com.apple.private.corespotlight.internal</key>
<true/>
<key>com.apple.private.corewifi</key>
<true/>
<key>com.apple.private.followup</key>
<true/>
<key>com.apple.private.fpsd.client</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.itunescloudd</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.itunescloudd</string>
</array>
<key>com.apple.private.ids.prefer-infrawifi</key>
<array>
<string>com.apple.private.alloy.itunescloudd</string>
</array>
<key>com.apple.private.ids.self-session</key>
<array>
<string>com.apple.private.alloy.itunescloudd</string>
</array>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.nsurlsession.impersonate</key>
<true/>
<key>com.apple.private.nsurlsession.perform-media-downloads</key>
<true/>
<key>com.apple.private.nsurlsession.set-task-priority</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
<string>kTCCServiceWillow</string>
</array>
<key>com.apple.private.tcc.manager.access.modify</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.tcc.manager.access.read</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.tcc.manager.check-by-audit-token</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.tcc.manager.expiration.delete</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.tcc.manager.expiration.read</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.tcc.manager.get-identity-for-credential</key>
<true/>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.Music</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.aps.itunescloudd</string>
<string>com.apple.private.corewifi-xpc</string>
<string>com.apple.usernotifications.usernotificationservice</string>
<string>com.apple.amsaccountsd.multiuser</string>
<string>com.apple.xpc.amsaccountsd</string>
<string>com.apple.symptom_diagnostics</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.symptoms.NetworkOfInterest</key>
<true/>
<key>com.apple.telephony.cupolicy-rw-access</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>fairplay-client</key>
<string>1445028844</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
</dict>
</plist>
adi-client
40983540100
application-identifier
com.apple.itunescloudd0
aps-connection-initiate
backupd-connection-initiate
0>!com.apple.CommCenter.fine-grained0
data-allowed-write
spi0"
com.apple.PairingManager.Read
com.apple.PairingManager.Write
0/*com.apple.accounts.appleaccount.fullaccess
0+&com.apple.accounts.inactive.fullaccess
com.apple.atc.private
0&!com.apple.authkit.client.internal
094com.apple.coremedia.allow-protected-content-playback
com.apple.developer.homekit
0-(com.apple.developer.networking.multipath
0)$com.apple.homekit.private-spi-access
com.apple.itunesstored.private
com.apple.nano.nanoregistry
0.)com.apple.networkd.set_source_application
com.apple.private.CacheDelete0
CLIENT_ENTITLEMENT050com.apple.private.FairPlayIOKitUserClient.access
0;6com.apple.private.MobileContainerManager.otherIdLookup
0+&com.apple.private.accounts.allaccounts
0)$com.apple.private.applemediaservices
0.)com.apple.private.aps-connection-initiate
00+com.apple.private.cfnetwork.har-capture-amp
0-(com.apple.private.corespotlight.internal
com.apple.private.corewifi
com.apple.private.followup
com.apple.private.fpsd.client
com.apple.private.ids.messaging0&$com.apple.private.alloy.itunescloudd0W-com.apple.private.ids.messaging.high-priority0&$com.apple.private.alloy.itunescloudd0P&com.apple.private.ids.prefer-infrawifi0&$com.apple.private.alloy.itunescloudd0L"com.apple.private.ids.self-session0&$com.apple.private.alloy.itunescloudd0.)com.apple.private.network.socket-delegate
0/*com.apple.private.nsurlsession.impersonate
0;6com.apple.private.nsurlsession.perform-media-downloads
050com.apple.private.nsurlsession.set-task-priority
com.apple.private.tcc.allow0,
kTCCServiceMediaLibrary
kTCCServiceWillow0H+com.apple.private.tcc.manager.access.modify0
kTCCServiceMediaLibrary0F)com.apple.private.tcc.manager.access.read0
kTCCServiceMediaLibrary0O2com.apple.private.tcc.manager.check-by-audit-token0
kTCCServiceMediaLibrary0L/com.apple.private.tcc.manager.expiration.delete0
kTCCServiceMediaLibrary0J-com.apple.private.tcc.manager.expiration.read0
kTCCServiceMediaLibrary0>9com.apple.private.tcc.manager.get-identity-for-credential
0K6com.apple.private.usernotifications.bundle-identifiers0
com.apple.Music0
4com.apple.security.exception.mach-lookup.global-name0
com.apple.aps.itunescloudd
com.apple.private.corewifi-xpc3com.apple.usernotifications.usernotificationservice com.apple.amsaccountsd.multiuser
com.apple.xpc.amsaccountsd
com.apple.symptom_diagnostics0&!com.apple.security.network.client
0'"com.apple.springboard.remote-alert
0)$com.apple.symptoms.NetworkOfInterest
0+&com.apple.telephony.cupolicy-rw-access
com.apple.wifi.manager-access
fairplay-client
14450288440!
keychain-access-groups0
apple
<ffffff
ICDPowerEventLogger
ICDCloudMusicLibraryRequestHandler
ICDCloudMusicLibrarySagaUpdateTaskHelper
ICDCloudMusicLibraryBackgroundTaskScheduler
NSObject
ICDCloudMusicLibraryProgressObserver
ICDCloudMusicLibraryJaliscoUpdateTaskHelper
ICDJaliscoSupportedMediaKindsHandler
ICEnvironmentMonitorObserver
CloudServerOptions
ICUpdateResponse
ICUpdateRequest
UpdateResponseParserDelegate
DKDAAPParserDelegate
PrivacyConsciousDescription
SagaLoadBulkContainerArtworkInfoOperation
JaliscoSetItemPropertyOperation
JaliscoDeauthenticateOperation
SagaCreatePlaylistOperation
SagaSDKCreatePlaylistOperation
ICBulkRemoveRequest
ICBulkRemoveItemRequest
ICBulkRemovePlaylistRequest
JaliscoLoadChapterArtworkOperation
ICDDefaults
BaseRequestHandler
ICMusicLibraryRecommendationResult
ICMusicLibraryArtistAffinityAnalyzer
ICBulkSetContainerPropertyRequest
SagaSubscribedPlaylistUpdater
ContainerCloudIDsParserDelegate
SubscribedContainersUpdateRequiredParserDelegate
ICDServerNotificationsManager
CloudAuthenticateOperation
ICDCloudServiceStatusMonitor
ICCloudServiceStatusRemoteMonitoringService
NSXPCListenerDelegate
SagaFavoriteEntityOperation
ICCloudServerAvailabilityServiceProtocol
ICDNetworkAvailabilityService
ICBulkLyricsInfoRequest
ICBulkLyricsInfoResponse
ICMediaUserStateCenterServerProtocol
ICMediaUserStateCenterClientProtocol
ICDMediaUserStateCenterServer
ICDMediaUserStateCenterServerNotificationsManagerDelegate
JaliscoImporter
ICDLoggable
SagaPublishPlaylistOperation
PublishPlaylistResponseParserDelegate
CloudUserNotificationController
UNUserNotificationCenterDelegatePrivate
UNUserNotificationCenterDelegate
ICCloudContentTasteUpdateResponse
CloudKeepLocalUtilities
CloudLoadBulkArtworkInfoOperation
ICDSaga
ICSetContainerPropertiesResponse
ICSetContainerPropertiesRequest
SetContainerPropertiesResponseParserDelegate
ICFlushPlayActivityEventsOperation
CloudArtworkOperationQueue
SagaCreateGeniusPlaylistOperation
ICCloudServerListenerEndpointServiceProtocol
ICCloudServerProtocol
ICDServer
ICDServerNotificationsManagerDelegate
ICDBackgroundTaskScheduling
ICDHandlerProviding
SagaUnfavoriteEntityOperation
JaliscoArtworkImporter
CloudArtistHeroImageImporter
QueueAwareOperation
DetermineArtistStoreIDLookupTypeOperation
UpdateArtistStoreIDsByBulkLibraryMatchLookupOperation
UpdateArtistStoreIDsByMapOperation
UpdateArtistStoreIDsByLibraryMatchLookupOperation
UpdateArtistArtworkTokensOperation
DownloadArtistHeroImagesOperation
FinishArtistHeroUpdateOperation
ICContentTastePendingChangesCoordinator
ICBulkArtworkInfoRequest
ICBulkItemArtworkInfoRequest
ICBulkPlaylistArtworkInfoRequest
ICBulkArtworkInfoResponse
ICDServerOperationsManager
ICCreateGeniusContainerResponse
ICCreateGeniusContainerRequest
ICPlayActivityFeedSerialization
ICDJaliscoMediaFilter
ICMusicLibraryContentItemSnapshot
ICDAccountManagerState
NSCopying
GeniusAdditions
AMPMusicFeature
ICCloudContentTastePBFuseItemPreference
ICMusicLibraryArtistAffinitySnapshot
CloudLibrary
CloudLibraryConcurrentOperation
SagaSetItemPropertyOperation
SagaRequestHandler
CloudLibraryOperation
NSSecureCoding
NSCoding
SagaUpdateSubscribedPlaylistsOperation
SagaGetGeniusItemsOperation
CloudService
ICAppleMusicAPITokenRequest
CloudGeniusUtilities
CloudGeniusBooleanTransform
CloudGeniusDataTransform
CloudGeniusDateTransform
CloudGeniusHasValueTransform
CloudGeniusNegatedBooleanTransform
CloudGeniusOnlyIfDoesNotHaveValueTransform
CloudGeniusOnlyIfHasValueTransform
CloudGeniusOnlyIfNegatedBooleanTransform
CloudGeniusOnlyIfNonEmptyStringTransform
CloudGeniusOnlyIfNonZeroDoubleTransform
CloudGeniusOnlyIfNonZeroIntegerTransform
CloudMusicSubscriptionStatusServiceListener
ICMusicSubscriptionStatusRemoteRequestingService
ICContentTasteRequestHandler
JaliscoRequestHandler
ICAppleMusicAPITokenResponse
ICDAdditions
ICDResponse
ICDAccountManagerStateChange
ICGetGeniusItemsRequest
ICGetGeniusItemsResponse
ICCloudContentTasteUpdateItem
ICMusicLibraryRecommendationsRequest
SagaImporter
SagaLoadLyricsOperation
ICSubscribedContainersRequest
SagaUpdatePlaylistOperation
SagaSDKUpdatePlaylistOperation
SagaRemovePlaylistOperation
ICCloudContentTasteResponseCacheManager
SagaUploadItemPlayDataOperation
AMPMusicArtistContent
ICMusicLibraryRecommendationController
ICDAAPPropertyInfo
NSError
JaliscoHideItemOperation
ICBulkSetItemPropertyRequest
CloudArtworkImportOperation
CloudAdditions
ICDDeleteOnDeallocTemporaryFile
JaliscoLoadBulkItemArtworkInfoOperation
ICAlbumsRequest
ICPlayActivityServerProtocol
ICPlayActivityServer
ICDEnhancedAudioKeyManager
ICContentKeySessionDelegateProtocol
JaliscoLoadBooksOperation
BooksParserDelegate
ICMediaLibraryAccessPermissionsHelper
MediaLibraryAccessRevocationController
ICAdditions
CloudPendingChangesCoordinator
ICFileAdditions
ICAppleMusicAPITokenError
SagaCloudSDKAddOperation
SagaCloudSDKAddItemToPlaylistOperation
ICAppleMusicAPITokenCollection
AMPMusicArtistNewContentResponse
CloudLibraryOptOutOperation
AMPMusicCatalogContent
DisableCloudLibraryOperation
ICArtistsRequest
ICDHandlerCoordinator
ICDHandlerCoordinating
CloudLibraryConnection
SagaUploadPlaylistArtworkOperation
CloudRemoteRequestOperationExecutionServiceListener
ICRemoteRequestOperationExecutingService
JaliscoUpdateOperation
SagaLoadBulkItemArtworkInfoOperation
ICPlayActivityDebugLogOperation
ICCreateContainerResponse
ICCreateContainerRequest
ICSDKCreateContainerRequest
CreateContainerResponseParserDelegate
JaliscoMediaImporter
AMPMusicArtistNewContentRequest
SubscriptionRequestHandler
SagaCloudAddOperation
SagaCloudAddItemOperation
SagaCloudAddPlaylistOperation
SagaCloudAddItemToPlaylistOperation
CloudArtworkImportRequest
CloudArtworkImporter
MPMediaDownloadObserver
ICDManageableAccount
_MSVAccountInformationProviding
ICDPrivacyPromptOperation
ICDCloudPushNotificationAccountRegistrationState
ICDCloudPushNotificationRegistrationState
CloudPushNotificationController
APSConnectionDelegate
ICItemsRequest
ICUnfavoriteEntityRequest
ICContainersRequest
ICMusicLibraryContentMetadataDescriptor
ICSetAddToPlaylistBehaviorRequest
SagaLibrary
ICDResponseDataParser
AppleMusicAPITokenIDSService
IDSServiceDelegate
CloudBackgroundTaskManager
CloudUpdateLibraryOperation
ICDAccountManager
ICDAccountManaging
ICDMediaUserStateCenterServerNotificationsManager
ICCloudContentTasteUpdateOperation
SagaUploadPlaylistPlayDataOperation
ICDRequest
JaliscoMediaUpdateOperation
ICMusicLibraryRecommendationsResponse
CloudSetAddToPlaylistBehaviorOperation
ICDCloudServiceCapabilitiesRequestOperation
SagaArtworkImporter
ICUpdateContentTasteRequestListener
CloudContentTasteUpdateRequestListener
CloudArtworkImportSetupOperation
SagaSetAlbumItemPropertyOperation
SagaAddItemToPlaylistOperation
SagaSDKAddItemToPlaylistOperation
ICCloudContentTastePBFusePreferences
ICDCloudServiceCapabilitiesRequestContext
JaliscoLibrary
SagaRemoveItemOperation
ICFavoriteEntityResponse
ICFavoriteEntityRequest
FavoriteEntityResponseParserDelegate
ArtistImageRequestHandler
ICAddToLibraryResponse
ICAddToLibraryRequest
AddToLibraryResponseParserDelegate
SagaImportController
SagaImportControllerParserDelegate
ICSDKAddToLibraryResponse
ICSDKAddToLibraryRequest
ICSDKAddToPlaylistRequest
SDKAddToLibraryResponseParserDelegate
_ICDBackgroundTask
ICDBackgroundTaskManager
ICDBackgroundTaskManaging
T@"ICDelegationProviderService",R,N,V_delegationProviderService
APNSToken
T@"NSArray",C,N
DSIDForUserIdentity:outError:
T@"NSDate",C,N,V_expirationDate
MIMEType
T@"NSString",R,N,V_artworkToken
StringAsContentType:
T@?,C,N,V_updateCompletionBlock
T@"<ICDAccountManaging>",R,N
TB,N,V_hasAddToPlaylistBehavior
T@"<ICDAccountManaging>",W,N,V_accountManager
TI,R,N,V_currentPlaylistCloudID
T@"<ICDBackgroundTaskScheduling>",&,N,V_taskScheduler
T@"<ICDHandlerCoordinating>",R,N
_accountManager
T@"<ICDHandlerProviding>",R,W,N,V_handlerProvider
_active
T@"<ICDServerNotificationsManagerDelegate>",R,W,N,V_delegate
_adamId
T@"AMPMusicArtistNewContentResponse",R,N,V_responseModel
_artistContents
T@"AppleMusicAPITokenIDSService",R,N
_bodyDataForItemIDs:useLongIDs:
T@"CloudArtistHeroImageImporter",R,N,V_importer
_center
T@"CloudArtworkImporter",&,N,V_artworkImporter
_currentCloudID
T@"CloudArtworkOperationQueue",&,N,V_artworkDownloadOperationQueue
_developerToken
T@"CloudLibraryConnection",&,N,V_underlyingConnection
_endObservingCloudServiceStatus
T@"CloudMusicSubscriptionStatusServiceListener",R,N
_handleClientConnectionSevered:
T@"CloudPushNotificationController",R,N,V_pushNotificationController
_hasValidPrivilegedCapabilities
T@"CloudUserNotificationController",R,N,V_userNotificationController
_initWithConfiguration:clientIdentity:storeID:sagaID:globalPlaylistID:albumCloudLibraryID:artistCloudLibraryID:entityType:time:
T@"DetermineArtistStoreIDLookupTypeOperation",&,N,V_followupUpdateOpertion
_jaliscoLibrary
T@"ICAppleMusicAPITokenError",&,N,V_error
_method
T@"ICCloudContentTasteUpdateItem",R,N
_operationQueue
T@"ICConnectionConfiguration",&,N,V_configuration
_playlistSagaID
T@"ICConnectionConfiguration",R,C,N
_prepareLibraryForInitialUpdate
T@"ICConnectionConfiguration",R,N,V_configuration
_recoId
T@"ICDAccountManagerState",C,N,V_state
_resetInternalCloudLibraryState
T@"ICDAccountManagerState",R,N,V_finalState
_sagaID
T@"ICDAccountManagerStateChange",C,N,V_stateChange
_serverRevision
T@"ICDCloudServiceStatusMonitor",R,N,V_cloudServiceStatusMonitor
_setupCompleted
T@"ICDEnhancedAudioKeyManager",R,N,V_enhancedAudioKeyManager
_status
T@"ICDMediaUserStateCenterServerNotificationsManager",R,N,V_serverNotificationsManager
_totalItemCount
T@"ICDServer",R,N
_updateSupportedConfigurationsWithAccounts:activeConfiguration:
T@"ICDServerOperationsManager",R,N,V_serverOperationsManager
_values
T@"ICMusicLibraryContentMetadataDescriptor",&,N,V_albumMetadataDescriptor
allHeaderFields
T@"ICMusicLibraryContentMetadataDescriptor",&,N,V_songMetadataDescriptor
allKeys
T@"ICStoreURLRequest",&,N,V_getResultsRequest
anyInLibrary:predicate:options:
T@"ICStoreURLRequest",&,N,V_uploadLibraryRequest
artworkImporter
T@"ICURLSession",R,N,V_URLSession
T@"ICUserIdentity",R,N
baseURL
T@"ICUserIdentityStore",R,N
buildIdentifier
T@"JaliscoArtworkImporter",R,N,V_artworkImporter
cancelOperationsWithCompletion:
T@"JaliscoLoadBooksOperation",R,N,V_operation
clientInterface
T@"ML3MusicLibrary",R,N,V_musicLibrary
cloudPlaylistID
T@"MPMediaDownloadManager",&,N,V_downloadManager
completionBlock
T@"MSVWatchdog",&,N,V_watchdog
connectionQueue
T@"NSArray",&,N,V_albumArtistPersistentIDsToUpdate
containsObject:
T@"NSArray",&,N,V_allGeniusTrackPropertiesWithML3TrackProperties
copyTo:
T@"NSArray",&,N,V_allML3TrackPropertiesWithGeniusTrackProperties
currentGlobalID
T@"NSArray",&,N,V_books
dealloc
T@"NSArray",&,N,V_userStatesCache
defaultRenderer
T@"NSArray",C,N,V_contentTasteItems
downloadManager
T@"NSArray",C,N,V_lyricsInfoDictionaries
execute
T@"NSArray",R,C,N
failedToConnect
T@"NSArray",R,N,V_cloudArtworkInfoDictionaries
handler
T@"NSData",&,N
hasCode
T@"NSData",&,N,V_model
ic_DSID
T@"NSData",R,N,V_responseData
ic_isManageable
T@"NSDate",C,N,V_libraryAddedDate
importItemArtworkForPurchaseHistoryID:configuration:completion:
T@"NSDictionary",&,N,V_adamIDToSagaIDMap
initWithBundleIdentifier:queue:
T@"NSDictionary",&,N,V_globalIDToSagaIDMap
initWithConfiguration:cloudIDs:
T@"NSDictionary",C,N,V_powerEventPayload
initWithItemPurchaseHistoryIDs:
T@"NSDictionary",R,N,V_responseHeaderFields
initWithReason:
T@"NSError",R,N,V_error
initWithStream:
T@"NSMutableArray",&,N,V_artistContents
isEqualToArray:
T@"NSMutableArray",&,N,V_contentFeatures
isInitialUpdate
T@"NSMutableArray",&,N,V_uniqueSongs
isMediaKindDisabledForJaliscoLibrary:clientIdentity:completion:
T@"NSMutableArray",R,N,V_parsedBooks
isSiriInitiated
T@"NSMutableDictionary",&,N,V_artworkDownloadOperationMap
isWatch
T@"NSMutableDictionary",&,N,V_mutableCloudIDToLyricsTokenMap
T@"NSMutableDictionary",R,N
lastKnownExplicitContentAllowed
T@"NSMutableDictionary",R,N,V_mutableCloudIDToLyricsTokenMap
lowercaseString
T@"NSMutableSet",&,N,V_uniqueDatesWithAddedContent
mlModel
T@"NSNumber",&,N,V_authenticateFailureCode
msv_firstWhere:
T@"NSNumber",&,N,V_containerCloudID
networkActivityIndicatorVisible
T@"NSNumber",&,N,V_updateIntervalSeconds
notificationsManagerDidReceiveBuddySetupDoneDarwinNotification:
T@"NSNumber",R,N,V_adamID
T@"NSObject<OS_dispatch_group>",&,N,V_connectionGroup
numberWithLong:
T@"NSObject<OS_dispatch_queue>",&,N,V_artworkDownloadAccessQueue
originalFileURL
T@"NSObject<OS_dispatch_queue>",&,N,V_centerQueue
pendingInvalidationKeyStorePath
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
preflightImport
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
pushEnvironment
T@"NSObject<OS_dispatch_queue>",R,N,V_updateLibraryQueue
release
T@"NSObject<OS_os_log>",R,N
removeObserver:
T@"NSObject<OS_tcc_identity>",R,N,V_clientIdentity
request
T@"NSOperationQueue",R,N,V_backgroundOperationQueue
requestWithURL:
T@"NSOperationQueue",R,N,V_operationQueue
T@"NSSet",C,N,V_supportedConfigurations
T@"NSString",&,N,V_bagProfile
setAlertHeader:
T@"NSString",&,N,V_clientIdentifier
setArtworkDownloadOperationMap:
T@"NSString",&,N,V_cuid
setBool:forKey:
T@"NSString",&,N,V_domain
setCachePolicy:
T@"NSString",&,N,V_key
setCanonicalId:
T@"NSString",&,N,V_name
setCloudAddToPlaylistBehavior:clientIdentity:completionHandler:
T@"NSString",&,N,V_recoId
setContainerID:
T@"NSString",&,N,V_userArtworkToken
setDay:
T@"NSString",C,N
setHomeUserIDs:
T@"NSString",C,N,V_cuid
setJaliscoNeedsUpdateForTokens:
T@"NSString",C,N,V_libraryIdentifier
setLastKnownMusicVideosAllowed:
T@"NSString",C,N,V_powerAssertionIdentifier
setMessageType:
T@"NSString",C,N,V_powerEventEndName
setPayloadDownloadPathOverride:
T@"NSString",C,N,V_requestingBundleID
setRequestPersonalizationStyle:
T@"NSString",C,N,V_token
setStoreAdamID:
T@"NSString",R,C
setUniqueDatesWithAddedContent:
T@"NSString",R,C,N,V_libraryIdentifier
setUploadingLibraryIsSupported:
T@"NSString",R,N
setVppLicensed:
T@"NSString",R,N,V_action
shouldIgnoreDeveloperTokenCache
T@"NSString",R,N,V_currentArtistCloudLibraryID
shufflePlayMode
T@"NSString",R,N,V_currentGlobalPlaylistID
stationStringID
T@"NSString",R,N,V_currentPaginationToken
storefrontCountryCodeDidChange:
T@"NSString",R,N,V_playlistShareURL
stringByResolvingSymlinksInPath
T@"NSURL",&,N,V_artistNameLibraryMatchURL
suspend
T@"NSURL",&,N,V_bulkArtistNameLibraryMatchURL
timeoutInterval
T@"NSURL",C,N,V_payloadDownloadPathOverride
troveID
T@"NSURL",C,N,V_responseDataFileURL
updateLibraryCompletionHandlers
T@"NSUserDefaults",&,N,V_userDefaults
userMonitorWithHomeIdentifiers:
T@"NSXPCConnection",&
version
.cxx_destruct
T@"NSArray",&,N,V_queryStoreIDs
DSID
T@"NSArray",R,N
JSONObjectWithData:options:error:
T@"NSDate",C,N,V_lastPlayedDate
PlayActivityStorageDirectoryPath
T@"SagaImporter",&,N,V_importer
T#,R
TB,N,V_deleteDB
T@"<ICDAccountManaging>",R,N,V_accountManager
TB,N,V_ignoreMinRefreshInterval
T@"<ICDBackgroundTaskManaging>",R,N,V_backgroundTaskManager
T^f,R,N
T@"<ICDBackgroundTaskScheduling>",R,W,N,V_taskScheduler
URLRequestForBaseURL:sessionID:
T@"<ICDHandlerCoordinating>",R,N,V_handlerCoordinator
_action
T@"<ICDMediaUserStateCenterServerNotificationsManagerDelegate>",R,W,N,V_delegate
_adamID
T@"ACAccountStore",R,N,V_accountStore
_amsPushHandler
T@"APSConnection",&,N,V_connection
_bagKey
T@"BaseRequestHandler",R,N
_cachedResponse
T@"CloudArtworkImportSetupOperation",R,N
_clientIdentity
T@"CloudArtworkImporter",R,N,V_artworkImporter
_deferredPushGracePeriodSeconds
T@"CloudLibraryConnection",&,N,V_connection
_domain
T@"CloudLibraryConnection",R,N,V_connection
_expirationDate
T@"CloudPendingChangesCoordinator",R,N,V_pendingChangesCoordinator
_handleFirstUnlockNotification:
T@"CloudRemoteRequestOperationExecutionServiceListener",R,N
_havePendingAutoEnableICMLCheck
T@"DetermineArtistStoreIDLookupTypeOperation",&,N,V_currentUpdateOperation
_isHandlerValid
T@"ICAppleMusicAPITokenCollection",&,N,V_tokenCollection
_lastPlayedDate
T@"ICBook",&,N,V_currentParsingBook
_mutableCloudIDToLyricsTokenMap
T@"ICCloudContentTasteUpdateResponse",R,N,V_contentTasteUpdateResponse
_pendingChanges
T@"ICConnectionConfiguration",C,N,V_activeConfiguration
_preferenceType
T@"ICConnectionConfiguration",R,C,N,V_configuration
_reason
T@"ICDAAPPropertyInfo",R,N
_requestWithURL:URLBagKey:timeoutInterval:additionalBodyFields:
T@"ICDAccountManagerState",R,C,N
_responseDataDestinationFileURL
T@"ICDAccountManagerState",R,N,V_initialState
_seedID
T@"ICDAccountManagerStateChange",R,C,N
_setCachedContentTasteResponse:
T@"ICDDefaults",R,N
_startSemaphore
T@"ICDMediaUserStateCenterServer<ICMediaUserStateCenterServerProtocol>",R,N,V_mediaUserStateCenterServer
_subscriptionStatusFailureCount
T@"ICDNetworkAvailabilityService",R,N,V_networkAvailabilityService
_updateRequired
T@"ICDServerNotificationsManager",R,N,V_serverNotificationsManager
_userHasOptedIn
T@"ICDelegateAccountStoreServiceListener",R,N,V_delegateAccountStoreListener
addFinishBlock:
T@"ICMusicLibraryContentMetadataDescriptor",&,N,V_artistMetadataDescriptor
allItemsQueryWithLibrary:predicate:orderingTerms:usingSections:
T@"ICMusicLibraryRecommendationController",R,N
allowLowAffinityRecommendations
T@"ICStoreURLRequest",&,N,V_updateRequest
arrayForBagKey:
T@"ICURLSession",&,N,V_artworkDownloadSession
asynchronousRequestsAccessQueue
T@"ICUserIdentity",R,C,N,V_userIdentity
base64EncodedStringWithOptions:
T@"ICUserIdentity",R,N,V_userIdentity
bitRate
T@"ICUserIdentityStore",R,N,V_userIdentityStore
cancelAllOperationsAndClearPendingChangesWithCompletionHandler:
T@"JaliscoLibrary",R,N,V_jaliscoLibrary
catalogContents
T@"JaliscoMediaUpdateOperation",&,N,V_updateLibraryOperation
cloudID
T@"MLModel",R,N,V_mlModel
codeMap
T@"MSVWatchdog",&,N,V_artworkDownloadWatchdog
connectionGroup
T@"MediaLibraryAccessRevocationController",R,N
connectionState
T@"NSArray",&,N,V_allGeniusPlaylistPropertiesWithML3ContainerProperties
contentFeatures
T@"NSArray",&,N,V_allML3ContainerPropertiesWithGeniusPlaylistProperties
countOfEntities
T@"NSArray",&,N,V_artistPersistentIDsToUpdate
currentRevision
T@"NSArray",&,N,V_mediaKinds
defaultOverrideHTTPHeaderFields
T@"NSArray",C,N,V_artworkInfoDictionaries
disableCloudLibraryWithClientIdentity:reason:completionHandler:
T@"NSArray",C,N,V_itemIDs
endDate
T@"NSArray",C,N,V_playActivityEvents
existsInLibrary
T@"NSArray",R,C,N,V_playlistCloudIDs
handleNotificationResponse:bag:
T@"NSArray",R,N,V_itemIDs
handlerProvider
T@"NSData",&,N,V_APNSToken
hasName
T@"NSData",C,N,V_bodyData
ic_activeStoreAccountWithError:
T@"NSDate",&,N,V_updateActionTimeStamp
icd_setSagaDatabaseUserVersion:
T@"NSDate",R,N,V_date
initWithAction:
T@"NSDictionary",&,N,V_addedItems
initWithConfiguration:clientIdentity:artistCloudLibraryID:time:
T@"NSDictionary",C,N,V_addedItems
initWithDouble:
T@"NSDictionary",R,N
initWithPersistentID:inLibrary:
T@"NSError",&,N,V_error
initWithRequestContext:notificationType:notificationParameters:
T@"NSMutableArray",&,N,V_activeConnections
isCurrentNetworkLinkHighQuality
T@"NSMutableArray",&,N,V_catalogContents
isInitialImport
T@"NSMutableArray",&,N,V_uniqueAlbums
isInternalBuild
T@"NSMutableArray",R,C,N,V_updateLibraryCompletionHandlers
isProxy
T@"NSMutableArray",R,N,V_subscribedPlaylistCloudIDs
isValid
T@"NSMutableDictionary",&,N,V_codeMap
itemIDs
T@"NSMutableDictionary",&,N,V_valueTypeMap
keyData
T@"NSMutableDictionary",R,N,V_addedItems
lastUpdatedDate
T@"NSMutableDictionary",R,N,V_xpcListeners
machServiceName
T@"NSMutableSet",R,N,V_currentTasks
msv_description
T@"NSNumber",&,N,V_bulkArtistNameLibraryMatchBatchSize
multiArrayValue
T@"NSNumber",&,N,V_dsid
notificationsManager:didReceiveFamilyDeletionEventNotification:
T@"NSNumber",N,V_mergeToCloudLibraryPreference
notificationsManagerDidReceiveMusicSettingsChangedNotification:
T@"NSNumber",R,N,V_score
numberWithBool:
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
onCalloutQueue:
T@"NSObject<OS_dispatch_queue>",&,N,V_asynchronousRequestsAccessQueue
parserDidStart:
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionQueue
performMaintenanceTasksForDatabaseAtPath:withCompletionHandler:
T@"NSObject<OS_dispatch_queue>",R,N
purchasedAdamID
T@"NSObject<OS_dispatch_queue>",R,N,V_startupQueue
queueGroupingID
T@"NSObject<OS_dispatch_source>",R,N,V_sigtermSource
removeDelegate:
T@"NSObject<OS_tcc_identity>",C,N,V_clientIdentity
reportingAdamID
T@"NSOperationQueue",&,N,V_operationQueue
requestURLForBaseURL:sessionID:
T@"NSOperationQueue",R,N,V_internalOperationQueue
results
T@"NSOperationQueue",R,W,N,V_operationQueue
serviceSpaceDidBecomeAvailable:
T@"NSSet",C,N,V_supportedConfigurationsDSIDs
setAccessQueue:
T@"NSString",&,N,V_bagProfileVersion
setArtistPersistentIDsToUpdate:
T@"NSString",&,N,V_clientVersion
setArtworkType:
T@"NSString",&,N,V_developerToken
setBypassCache:
T@"NSString",&,N,V_globalPlaylistID
setCachedContentTasteUpdateResponse:forConnectionConfiguration:
T@"NSString",&,N,V_localizedDescription
setCenterQueue:
T@"NSString",&,N,V_powerAssertionIdentifier
setConnectionCompletionHandler:
T@"NSString",&,N,V_troveID
setContentType:
T@"NSString",&,N,V_userToken
setDebugReason:
T@"NSString",C,N,V_activeConfigurationDSID
setJaliscoLastGeniusUpdateDate:
T@"NSString",C,N,V_currentStoreFrontID
setKey:
T@"NSString",C,N,V_opaqueID
setMaxConcurrentOperationCount:
T@"NSString",C,N,V_powerEventBeginName
setOriginatingClientConnection:
T@"NSString",C,N,V_pushEnvironment
setReleaseDate:
T@"NSString",C,N,V_title
setStateChange:
T@"NSString",C,N,V_troveID
setURL:
T@"NSString",R,C,N
setUniqueSongs:
T@"NSString",R,C,N,V_name
setUserNotificationExtensionId:
T@"NSString",R,N,V_MIMEType
setWithObjects:
T@"NSString",R,N,V_currentAlbumCloudLibraryID
shouldReturnLastKnownStatusOnly
T@"NSString",R,N,V_currentGlobalID
startDictionary
T@"NSString",R,N,V_currentLyricsToken
storeID
T@"NSString",R,N,V_playlistGlobalID
stringByAppendingPathComponent:
T@"NSURL",&,N,V_allArtistImagesMapURL
stringFromDate:
T@"NSURL",&,N,V_assetURL
targets
T@"NSURL",C,N,V_assetURL
tokenCollection
T@"NSURL",C,N,V_responseDataDestinationFileURL
unscheduleSagaDeferredPushUpate
T@"NSUserDefaults",&,N,V_internalDefaults
uploadPlaylistPropertiesWithClientIdentity:minimumTimeInterval:
T@"NSUserDefaults",R,N,V_mediaPlaybackDefaults
userStatesCache
T@"UNUserNotificationCenter",&,N,V_center
T@?,C
T@?,C,N,V_completionHandler
T@?,C,N,V_connectionCompletionHandler
TB,N
TB,N,GisActive,V_active
TB,N,GisCachedResponse,V_cachedResponse
TB,N,GisNetworkActivityIndicatorVisible,V_networkActivityIndicatorVisible
TB,N,GisSetupCompleted,V_setupCompleted
TB,N,GisStartupSequenceCompleted,V_startupSequenceCompleted
TB,N,V_allowNoisyAuthPrompt
TB,N,V_allowsCellularData
TB,N,V_disableActiveLockerAccount
TB,N,V_failedToConnect
TB,N,V_hasArtistAndAlbumData
TB,N,V_havePendingOperationToReloadSecondaryAccountLibraries
TB,N,V_ignoreAccountChanges
TB,N,V_isExplicit
TB,N,V_isExplicitUserAction
TB,N,V_loginRequestInFlight
TB,N,V_parserSuccess
TB,N,V_pinnedOnly
TB,N,V_prohibitArtworkPrefetch
TB,N,V_prohibitLibraryUpload
TB,N,V_removeSourcePurchaseHistoryForMusicTracks
TB,N,V_sagaEnabledOnDevice
TB,N,V_shouldIgnoreDeveloperTokenCache
TB,N,V_shouldIgnoreUserTokenCache
TB,N,V_shouldParseMetadata
TB,N,V_supportsAutomaticEnablingiCloudMusicLibrary
TB,N,V_updateRequired
TB,N,V_uploadingLibraryIsSupported
TB,R
TB,R,N
TB,R,N,GisActive
TB,R,N,GisConcurrent,V_concurrent
TB,R,N,GisInitialImport,V_initialImport
TB,R,N,GisInitialUpdate
TB,R,N,GisManageable
TB,R,N,GisPersistent,V_persistent
TB,R,N,V_isCancelled
TB,R,N,V_shouldProcessSpecificArtists
TB,R,N,V_shouldRestart
TB,R,N,V_updateRequired
TB,R,N,V_useLongIDs
TC,N,V_addToPlaylistBehavior
TC,R,N,V_currentPlaylistKind
TC,R,N,V_itemKind
TI,N,V_containerID
TI,N,V_databaseRevision
TI,N,V_mediaType
TI,N,V_serverRevision
TI,R,N,V_containerID
TI,R,N,V_currentItemCount
TI,R,N,V_databaseID
TI,R,N,V_outputClusterType
TI,R,N,V_processedItemCount
TI,R,N,V_totalItemCount
TQ,N,V_assetFileSize
TQ,N,V_cloudID
TQ,N,V_responseRevisionID
TQ,R
TQ,R,N
TQ,R,N,V_cloudID
TQ,R,N,V_currentAdamID
TQ,R,N,V_currentCloudID
TQ,R,N,V_playlistSagaID
TQ,R,N,V_responseCode
TQ,R,N,V_stateHandle
Td,R,N
Tf,N,V_userRating
Tf,R,N
Tf,R,N,V_progress
Ti,N,V_contentType
Ti,N,V_phase
Tq,N
Tq,N,Sicd_setPreferredVideoQuality:
Tq,N,Sicd_setSagaCloudAddToPlaylistBehavior:
Tq,N,Sicd_setSagaDatabaseUserVersion:
Tq,N,V_adamId
Tq,N,V_allowedRetryCount
Tq,N,V_artworkType
Tq,N,V_canonicalId
Tq,N,V_code
Tq,N,V_contentTasteItem
Tq,N,V_contentTasteType
Tq,N,V_cumulativePlayCount
Tq,N,V_cumulativeSkipCount
Tq,N,V_currentDatabaseRevision
Tq,N,V_enableReason
Tq,N,V_libraryManagementPolicy
Tq,N,V_method
Tq,N,V_playCount
Tq,N,V_playlistPersistentID
Tq,N,V_preferredVideoQuality
Tq,N,V_privacyAcknowledgementPolicy
Tq,N,V_reason
Tq,N,V_releaseDate
Tq,N,V_requestPersonalizationStyle
Tq,N,V_requestReason
Tq,N,V_skipCount
Tq,N,V_status
Tq,N,V_storeAdamID
Tq,N,V_storeID
Tq,N,V_uploadResponseStatus
Tq,N,V_verificationInteractionLevel
Tq,R,N
Tq,R,N,V_artworkType
Tq,R,N,V_computation
Tq,R,N,V_connectionState
Tq,R,N,V_currentCloudID
Tq,R,N,V_entityType
Tq,R,N,V_sourceType
Tq,R,N,V_type
URLAssetWithURL:options:
URLByAppendingPathComponent:
URLByAppendingPathComponent:isDirectory:
URLByAppendingPathExtension:
URLByDeletingLastPathComponent
URLQueryAllowedCharacterSet
URLSession
URLWithString:
URLWithString:relativeToURL:
UTF8String
UUID
UUIDString
_APNSToken
_DAAPMediaKindFromJaliscoSupportedMediaKind:
_HTTPMethodStringForICDRequestMethod:
_ICCloudServerSupportedServiceForXPCListener:
_MIMEType
_URLSession
_accessQueue
_accountRegistrationStates
_accountStore
_actionTimestampMillis
_activeConfiguration
_activeConfigurationDSID
_activeConfigurationsWithCompletion:
_activeConnections
_activeObservationTokenToClientConnectionMapping
_adamIDToSagaIDMap
_addAllStoreArtistIDsToSet:
_addLibraryOperation:priority:noLibraryHandler:
_addPendingChangesForContentTasteUpdateOperation:invalidateLocalCache:
_addSpecificStoreArtistIDsToSet:
_addToPlaylistBehavior
_addedItems
_adjustMergePreferenceWithUserIdentityProperties:
_adjustOperationQueueStatusForMediaDownloads
_affinityAnalyzer
_albumArtistPersistentIDsToUpdate
_albumCloudLibraryID
_albumItemProperties
_albumMetadataDescriptor
_albumPersistentID
_allArtistImagesMapURL
_allGeniusPlaylistPropertiesWithML3ContainerProperties
_allGeniusTrackPropertiesWithML3TrackProperties
_allML3ContainerPropertiesWithGeniusPlaylistProperties
_allML3TrackPropertiesWithGeniusTrackProperties
_allowNoisyAuthPrompt
_allowedRetryCount
_allowsCellularData
_applyServerStateUpdatedWithUserStatesIfNeeded:
_arguments
_artistCloudLibraryID
_artistHeroImageUpdateFinished
_artistMetadataDescriptor
_artistNameLibraryMatchURL
_artistPersistentIDsToUpdate
_artworkDownloadAccessQueue
_artworkDownloadOperationMap
_artworkDownloadOperationQueue
_artworkDownloadSession
_artworkDownloadWatchdog
_artworkImporter
_artworkInfoDictionaries
_artworkToken
_artworkType
_artworkURLForInfoDictionary:
_assetFileSize
_assetURL
_asynchronousRequestsAccessQueue
_authenticateAndStartInitialImportWithMergePreference:userIdentityProperties:enableReason:withCompletionHandler:
_authenticateFailureCode
_autoEnableFailureCount
_autoRetryCloudAuthenticateFailureCount
_backOffIndex
_backgroundOperationQueue
_backgroundTaskManager
_bag
_bagObservationToken
_bagProfile
_bagProfileVersion
_baseBtaJobForDeferredPush
_baseBtaJobForPeriodicPollCellularDataAllowed:
_beginObservingCloudServiceStatus
_bodyData
_bodyDataForAlbumsRequestWithPaginationToken:
_bodyDataForArtistsRequestWithPaginationToken:
_bodyDataForCloudIDs:itemKind:useLongIDs:
_bodyDataForContainerIDs:
_bodyDataForContainerIDs:properties:
_bodyDataForDatabaseRevision:
_bodyDataForDatabaseRevision:adamID:sagaID:playlistGlobalID:referralAlbumAdamID:referralPlaylistGlobalID:
_bodyDataForDatabaseRevision:addToPlaylistBehavior:
_bodyDataForDatabaseRevision:containerID:trackList:properties:
_bodyDataForDatabaseRevision:opaqueID:
_bodyDataForDatabaseRevision:playlistProperties:trackList:
_bodyDataForItemIDs:properties:useLongIDs:
_bodyDataForMetadataFilter:queryFilter:purchaseTokens:includeHiddenItems:includePreorders:paginationToken:
_bodyDataForPlaylistName:seedItemIDs:itemIDs:
_bodyDataForSagaIDs:itemKind:
_bodyDataWithAdditionalBodyFields:
_bodyDataWithStoreID:sagaID:globalPlaylistID:albumCloudLibraryID:artistCloudLibraryID:time:serverDatabaseRevision:
_books
_buildStateChange
_buildUserStateFromUserIdentity:storeRequestContext:tokensDictionary:completion:
_bulkArtistNameLibraryMatchBatchSize
_bulkArtistNameLibraryMatchURL
_bundleID
_cacheDirectoryPath
_cacheMatchedRecommendations:
_callbackQueue
_calloutQueue
_canCompleteStartupSequence
_canEnableCloudMusicLibraryOnPlatformsWithSideLoadedMediaContentWithProperties:includeLocalContentCheck:
_canShowCloudDownloadButtonsDidChangeNotification:
_canShowCloudTracksDidChangeNotification:
_cancelAllContentTasteRequestHandlers
_cancellableCapabilitiesRequestOperations
_canonicalId
_capabilities
_capabilitiesRequestContexts
_catalogContents
_cellularDataAllowed
_cellularDataAllowedForJaliscoApps
_cellularDataAllowedForJaliscoMedia
_cellularDataAllowedForMediaType:
_centerQueue
_chapterArtworkToLoad
_chapterArtworkURLsForData:baseURL:
_chapterDataFromURL:
_checkForRecentRevocations
_claimSingleWriterStatus
_cleanupExpiredApplicationMessages
_clearAllCloudIDs
_clearMLModelCache
_clearRecommendationsData
_clientIdentifier
_clientInfoForCloudDaemonOriginatedMusicKitRequestWithRequestingBundleIdentifier:
_clientInfoForDeveloperTokenRequestWithRequestingApplicationBundleIdentifier:
_clientInfoForUserTokenRequestWithRequestingApplicationBundleIdentifier:
_clientVersion
_cloudArtworkInfoDictionaries
_cloudID
_cloudIDs
_cloudServiceStatusMonitor
_code
_codeMap
_completeStartupSequenceIfNeeded
_completionHandler
_completionHandlers
_computation
_computeLibraryRecommendationWithResponse:completionHandler:
_concurrent
_configuration
_configurationForAccount:baseConfiguration:
_configurationsToActivateForChange:initialSetup:
_configurationsToRemoveForChange:initialSetup:
_connectToLibraryWithCompletionHandler:allowRetry:forceBagReload:
_connection
_connectionCompletionHandler
_connectionGroup
_connectionQueue
_connectionState
_containerCloudID
_containerID
_contentFeatures
_contentTasteItem
_contentTasteItems
_contentTasteRequestHandlerForConfiguration:outError:
_contentTasteRequestHandlerToDSIDMap
_contentTasteType
_contentTasteUpdateResponse
_contentTasteUpdateResponseWithServerResponse:expirationDate:revisionID:isCachedResponse:
_contentType
_continueConnectingToLibraryWithCompletionHandler:
_createAPNSConnectionWithCompletion:
_createApplicationMessagesForResult:artistNewContentResponse:completion:
_createBag
_createLocalNotificationDictionaryForRecommendationResult:storePlatformMetadata:recommendationID:identifier:
_createdOffsetMillis
_criteriaDictionaryWithPostFrequency:
_cuid
_cumulativePlayCount
_cumulativeSkipCount
_currentAPNSToken
_currentAdamID
_currentAlbumCloudLibraryID
_currentArtistCloudLibraryID
_currentDatabaseRevision
_currentGlobalID
_currentGlobalPlaylistID
_currentItemCount
_currentLyricsToken
_currentPaginationToken
_currentParsingBook
_currentPlaylistCloudID
_currentPlaylistKind
_currentRegistrationState
_currentStoreFrontID
_currentTasks
_currentUpdateOperation
_databaseID
_databaseRevision
_date
_deactivateJaliscoLibraryByDeauthenticating:completionHandler:
_deactivateSagaLibraryByDeauthenticating:completionHandler:
_deauthOperationCount
_deauthenticateUnsupportedConfigurationsFromChange:initialSetup:completion:
_debugLogOperationQueue
_defaultContentTasteRefreshIdentifier
_deferredPushActivityCriteriaForTask:startTime:gracePeriod:
_delegate
_delegateAccountStoreListener
_delegationProviderService
_deleteDB
_determineResultsURLWhenReadyWithUpdateID:retryTimeout:responseStatusCode:
_didAdjustMergePreference
_didCompleteAllCapabilitiesAsynchronousRequests
_didCompletePrivacyPromptOperation:withStatus:error:
_didCompleteWithPrivacyPromptStatus:error:
_didEncounterFatalErrorImportingPayload
_didHandleStartupNotificationReason
_didManuallyReloadCloudLibrary
_didReceiveDarwinNotification:
_didReceiveDistributedNotification:withStreamEvent:
_didReceiveTelephonyCenterNotification:
_didSubscriptionStatusLapse
_disableActiveLockerAccount
_dispatchCompletionHandler:withError:
_displayNotificationForBuilder:withReplyBlock:
_downloadManager
_downloadRequestsFromURL:uploadResponsesURL:
_dsid
_enableReason
_enhancedAudioKeyManager
_enqueueCloudUpdateLibraryOperationForReason:
_enqueueFailedOperation:
_enqueuePendingOperation:
_enqueueSubscriptionStatusCheckForReason:
_ensureConnectionWithCompletionHandler:
_ensureDeviceIsRegistered
_ensureMusicSubscriptionKeysAreAvailableForConfiguration:
_ensureSubscriptionInformationIsUpToDateForConfiguration:
_ensureURLResolutionCacheFileExists
_entityType
_error
_excludedKinds
_executeBlockForAllOperations:
_executing
_externalId
_failedToConnect
_failedToPerformAnalysis
_fetchAccountsWithForceRefresh:completion:
_fetchAndCacheLatestAllArtistImagesMap
_fetchRecommendationsSetAndModelWithCompletionHandler:
_fileURL
_finalState
_finished
_flushOperationCount
_flushOperationQueue
_followupUpdateOpertion
_getCurrentSubscriptionStatusForReason:
_getNetworkConstraints
_getPBData:includedContentTasteItemUpdates:fromContentTasteUpdateItems:
_getResultsRequest
_getStoreAdamIDLikedState:playlistGlobalIDLikedState:
_getTokenStatusesForDSIDs:forceRefresh:completion:
_getUserStateFromIdentity:tokensDictionary:completion:
_globalIDToSagaIDMap
_globalPlaylistID
_handleActiveUserIdentityDidChangeNotification:
_handleAllowsExplicitContentChangedNotification:
_handleAllowsMusicVideosChangedNotification:
_handleApplicationRegistration:notificationName:streamEvent:
_handleApplicationRegistrationNotification:
_handleClientConnectionInterrupted:
_handleClientConnectionInvalidated:
_handleCloudAuthenticationDidChangeNotification
_handleCloudLibraryUpdateOperationFinishedWithError:
_handleFamilyContentDeletionEvent:
_handleFamilyContentDeletionNotification:streamEvent:
_handleFlushPlayActivityEvents
_handleFlushRequestNotification:
_handleHomeUserSettingsDidChangeNotification:
_handleITunesStorePushMessage:withCompletionHandler:
_handleInAppMessagesUpdatedPushMessage:
_handleJaliscoDeferredPushUpdateTask:completion:
_handleJaliscoMediaDeferredPushUpdateJobSatisfied:invalidRequest:
_handleJaliscoMediaPeriodicPollJobSatisfied:invalidRequest:
_handleJaliscoPushMessage:withCompletionHandler:
_handleJobNamed:satisfied:invalid:
_handleLibraryAuthServiceTokenDidChangeNotification:
_handleLocalStoreAccountPropertiesDidChangeNotification:
_handleMusicSettingsChangedNotification
_handleMusicSocialPushMessage:withCompletionHandler:
_handleMusicSubscriptionStatusDidChangeNotification:
_handleNewArtistContentResponseNotification:
_handlePlayActivityFlushInternalTestRequestNotification
_handlePrivacyAcknowledgementErrorWithMessage:underlyingError:
_handleRecommendationsResponseModel:completion:
_handleSagaAuthentication:finishedForReason:explicitUserAction:shouldStartInitialImport:completionHandler:
_handleSagaDeferredPushUpdateJobSatisfied:invalidRequest:
_handleSagaDeferredPushUpdateTask:completion:
_handleSagaPushMessage:withCompletionHandler:
_handleSubscriptionStatusDidChangeNotification:
_handleTask:completion:
_handleURLBagProviderDidUpdateBagNotification:
_handleUpdatedBag:
_handleUpdatedSubscriptionStatus:
_handleUserIdentityStoreDidChangeNotification:
_handleUserIdentityStoreLocalStoreAccountPropertiesDidChangeNotification:
_handlerCoordinator
_handlerProvider
_has
_hasAddToPlaylistBehavior
_hasArtistAndAlbumData
_hasInvokedCompletionHandler
_hasStarted
_hasValidCapabilities
_hasValidUserIdentity:forSourceType:
_havePendingCloudUpdateLibraryCheck
_havePendingOperationToReloadSecondaryAccountLibraries
_havePendingSagaUpdate
_havePendingSubscriptionStatusCheck
_hlsKeyRefreshOperationQueue
_homeSharingPrefsNumberForKey:
_identifiersOfApplicationsWithExpiredAccessToMediaLibrary
_identifiersOfApplicationsWithGrantedAccessToMediaLibrary
_identifiersOfApplicationsWithGrantedAccessToMediaLibraryIncludingTCCAcceptanceDates
_identity
_identityProperties
_identityStore
_ignoreAccountChanges
_ignoreMinRefreshInterval
_imageURLFromArtworkInfo:
_importAlbumsFromRevision:toRevision:clientIdentity:baseDirectory:outAlbumsResponseData:outAlbumsResponseDataDestinations:
_importAllItemArtworkWithClientIdentity:
_importArtistsFromRevision:toRevision:clientIdentity:baseDirectory:outArtistsResponseData:outArtistsResponseDataDestinations:
_importHeroImageForArtistType:withPersistentID:clientIdentity:completionHandler:
_importLyricsWithLyricsTokenMap:clientIdentity:
_importOriginalContainerArtworkWithClientIdentity:
_importOriginalItemArtworkWithClientIdentity:
_importOriginalScreenshotsWithClientIdentity:
_importPlaylistsFromRevision:toRevision:clientIdentity:baseDirectory:outPlaylistsResponseData:outPlaylistsResponseDataDestinations:
_importTracksFromRevision:toRevision:clientIdentity:baseDirectory:outItemsResponseData:outTracksResponseDataDestinations:outItemsToLyricsTokenMap:
_importTracksFromRevision:toRevision:clientIdentity:withCompletionHandler:
_importTracksFromRevision:toRevision:withItemsResponse:clientIdentity:
_importer
_init
_initWithAccounts:activeAccount:baseConfiguration:
_initWithConfiguration:pendingChangesCoordinator:
_initWithInitialState:finalState:computation:
_initialImport
_initialState
_initializeAncillaryServices
_initializeBTAHandlers
_initializeMappings
_initiateArtworkUpload
_internalDefaults
_internalOperationQueue
_invalidateLocalCache
_isActive
_isCancelled
_isCellularDataRestrictedDidChangeNotification:
_isClientAllowedToRequestCapabilitiesForConnection:
_isClientAllowedToRequestRestrictedInformationForConnection:
_isEnabledWithURLBag:
_isExplicit
_isExplicitUserAction
_isNativeMusicAppInstalled
_isObservingTCCAccessChangedNotification
_isPendingAuthentication
_isSupportedJaliscoMediaKind:
_isSystemService
_isValidTimeInterval:
_itemIDs
_itemKind
_itemPropertiesCoalescingTimer
_itemPurchaseHistoryIDs
_itemSagaID
_itemSagaIDs
_jaliscoRequestHandler
_jobNameToSelectorMap
_key
_lastSeenDSID
_lastTimePeriodicXPCFired
_latestAllArtistImagesMap
_library
_libraryAddedDate
_libraryIdentifier
_libraryManagementPolicy
_listener
_loadArtworkInfoForSubscriptionPersistentIDs:artworkType:entityType:clientIdentity:completionHandler:
_loadIdentitiesWithCompletion:
_localizedDescription
_lock
_loggable
_loginRequestInFlight
_lyricsInfoDictionaries
_managedHandlerClasses
_mediaContentTasteCacheDirectoryPath
_mediaContentTasteCacheFilePathForAccount:
_mediaFilter
_mediaKinds
_mediaPlaybackDefaults
_mediaType
_mediaUserStateCenterServer
_mergeToCloudLibraryPreference
_migrateToLatestUserVersionForConfigurations:
_ml3ContainerPropertyToGeniusPlaylistPropertyMap
_ml3ContainerPropertyTransformMap
_ml3TrackPropertyToGeniusTrackPropertyMap
_ml3TrackPropertyTransformMap
_mlModel
_model
_musicAppIsInstalled
_musicLibrary
_musicSubscriptionCheckStatus
_name
_networkActivityIndicatorVisible
_networkAvailabilityService
_nextEvaluateSyncRulesOperationTimeKey
_nextEvaluateSyncRulesThrottleOperationTimeKey
_nextFlushPlayActivityFireSyncInterval
_nextJaliscoAppsPollTimeKey
_nextJaliscoMediaPollTimeKey
_notifyObserversForActiveUserIdentityChanged
_numberOfItems
_onQueue_sendRequest:withInternalResponseHandler:
_opaqueID
_operation
_operationIdentifier
_optInMessageContentForPriorityMessageContent:
_optInMessageForPriorityMessage:completion:
_originatingClientConnection
_outputClusterType
_parseAuthorizedAccountTokenWithBytes:length:
_parseBrowseListingWithBytes:length:
_parseBulkCloudArtworkInfoResponseWithBytes:length:
_parseBulkCloudLyricsInfoResponseWithBytes:length:
_parseCloudArtworkInfoResponseWithBytes:length:
_parseCloudLyricsInfoResponseWithBytes:length:
_parseControlInterfacesResponseWithBytes:length:
_parseControlPromptResponseWithBytes:length:
_parseDeletedIDListingWithBytes:length:
_parseDictionaryCollectionWithBytes:length:
_parseEditCommandResponseWithBytes:length:
_parseErrorResponseWithBytes:length:
_parseItemIDArrayWithBytes:length:
_parseItemPropertyCountWithBytes:length:
_parseItemsResponseWithBytes:length:usingHandler:
_parseListingCollectionWithBytes:length:usingHandler:
_parseListingItemWithBytes:length:usingHandler:
_parseLoginResponseWithBytes:length:
_parsePlayStatusResponseWithBytes:length:
_parseResponseCode:bytes:length:usingHandler:
_parseUpdateResponseWithBytes:length:
_parseUpdateTypeWithBytes:length:
_parsedBooks
_parserSuccess
_payloadDownloadPathOverride
_pendingChangesCoordinator
_pendingChangesPath
_performInitialJaliscoImportWithClientIdentity:completion:
_performInitialSagaImportWithClientIdentity:allowingNoisyAuthPrompt:completionHandler:
_performJaliscoImportWithClientIdentity:byAddingMediaKind:completionHandler:
_performPendingOperations
_performPeriodicSubscriptionTasks
_performPrivacyPromptOperation
_performRecommendationsRequest
_performRecommendationsUpdate
_performTokenRequest:completionHandler:
_periodicPollingActivityCriteriaWithRefreshInterval:gracePeriod:
_persistent
_phase
_pinnedOnly
_playActivityEvents
_playCount
_playlistCloudIDs
_playlistGlobalID
_playlistName
_playlistPersistentID
_playlistPropertiesCoalescingTimer
_playlistSagaIDs
_playlistShareURL
_pollingGracePeriodSecondsForRefreshInterval:
_pollingRefreshIntervalSecondsUsingBag:
_postContentTasteChanges:withCompletionHandler:
_postContentTasteChangesForPendingItems
_postLibraryUpdateProgressChangedForLibraryType:
_postPendingContentTasteChangesByAddingChange:completionHandler:
_powerAssertionIdentifier
_powerEventBeginName
_powerEventEndName
_powerEventPayload
_preference
_preferences
_preferredVideoQuality
_prepareArchiveWithContentTasteReponse:
_prepareCachedResponseFromArchiveAtPath:
_prepareCachedResponseFromResponse:byAddingResponseTimeIntervalKey:withResponseTimeInterval:
_prepareContentTasteResponse:withContentTasteItems:fromCachedContentTasteResponseItems:includedContentTasteItems:
_prepareLibraryLoadErrorWithJaliscoError:sagaError:
_preprocessURLResolutionCacheDictionary:
_privacyAcknowledgementPolicy
_privacyIdentifier
_privacyPromptOperation
_privilegedCapabilities
_processActiveConfigurationChange:initialSetup:
_processFavoritedItems:
_processSupportedConfigurationsChange:initialSetup:
_processedItemCount
_progress
_prohibitArtworkPrefetch
_prohibitLibraryUpload
_properties
_purchaseHistoryID
_pushEnvironment
_pushNotificationController
_queryFilterEncodedStringForDAAPNameString:
_queryFilterString
_queryStoreIDs
_queue
_recomputeInUsersLibraryForTrackPids:resetFavoriteState:
_referralAlbumAdamID
_referralPlaylistGlobalID
_refreshCapabilitiesWithPrivacyAcknowledgementPolicy:
_refreshCloudServiceStatus
_refreshIntervalFromBag
_refreshStorefrontCountryCode
_refreshStorefrontIdentifier
_registerAPNSToken:usingRequestContext:withCompletion:
_registerDeviceAndPerformInitialImportWithUserIdentityProperties:cloudLibraryEnableReason:completionHandler:
_registerFailureToRevokeMusicUserTokensForApplicationIdentifier:error:
_registerFailureToRevokeMusicUserTokensForApplicationsWithIdentifiers:error:
_registerMediaKinds:usingRequestContext:withCompletion:
_releaseDate
_reloadSubscriptionStatusAndEnableCloudMusicLibraryWithReason:completionHandler:
_removeAllSubscriptionContentWithCompletion:
_removePendingChangesForContentTasteUpdateOperation:
_removeSourcePurchaseHistoryForMusicTracks
_removeUnavailableSubscriptionAssetsInLibrary:
_replyBlocksForPID
_requestBagWithAsynchronousRequestsGroup:
_requestCapabilities
_requestIdentityPropertiesWithAsynchronousRequestsGroup:
_requestItemProperties
_requestPersonalizationStyle
_requestReason
_requestSubscriptionStatusWithAsynchronousRequestsGroup:
_requestingBundleID
_requestingBundleIdentifierForOriginatingClientConnection:clientInfo:error:
_resizedImageDataFromLocation:
_response
_responseBodyForRequest:retryTimeout:debugName:
_responseCode
_responseData
_responseDataFileURL
_responseExpirationDate
_responseHeaderFields
_responseModel
_responseRevisionID
_restoreCurrentTasks
_retrievePreviousRecommendationMatchesFromCache
_retryEnablingCloudMusicLibraryForReason:
_retryLoadingCloudLibraryForSecondaryAccountsOnAppleTV
_retryQueue
_retryState
_revertFavoritingEntityTypeAlbum
_revertFavoritingEntityTypeArtist
_revertFavoritingEntityTypePlaylist
_revertFavoritingEntityTypeTrack
_revertPendingFavoriteEntityForPermanentlyFailedOperation
_revokeMusicUserTokensForApplicationWithIdentifier:andUserIdentity:withCompletion:
_revokeMusicUserTokensForApplicationsWithIdentifiers:
_runDisableCloudLibraryOperationWithClientIdentity:byDeletingDatabase:disableActiveLockerAccount:removeSourcePurchaseHistory:isHandlerDeactivating:completionHandler:
_runSagaAuthenticateOperationWithClientIdentity:mergePreference:allowNoisyPrompt:cloudLibraryEnableReason:completionHandler:
_runSubscriptionStatusCheckOperationWithReason:completionHandler:
_sagaEnabledOnDevice
_sagaIDs
_sagaImportFailureCount
_sagaRequestHandler
_sanitizedUserStatesForRemoteClientConnection:
_saveCurrentTasks
_savePendingChanges:
_scheduleJobNamed:withStartTime:baseBtaJob:
_scheduleNextPlayActivityFlushOperationWithCriteria:
_schedulePostingContentTasteForFailedItems
_scheduleTask:withStartTime:
_scheduleUpdatingContentTasteWithNewExpirationDate
_score
_seedItemIDs
_sendOptOutWithCUID:troveID:
_serialQueue
_serverDatabaseRevision:
_serverNotificationsManager
_serverOperationsManager
_service
_serviceListener
_serviceName
_setEnabledTopics:
_setHomeSharingPrefsNumber:forKey:
_setLikedState:forEntity:
_setOrRemoveObject:forKey:
_setShadowOperationForRemoteExecution:
_setupCacheDirectoryStructureWithPath:
_setupInternalQueues
_setupKVO
_setupMPMediaLibraryFilteringForConfigurations:
_setupNotifications
_setupSigtermHandler
_setupXPCListenerForService:
_shouldBypassEnforcementOfPrivacyAcknowledgementForClientConnection:forIncomingCloudServiceCapabilitiesRequest:
_shouldHandleDaemonStartupOrAccountChangedNotificationWithProperties:
_shouldIgnoreDeveloperTokenCache
_shouldIgnoreUserTokenCache
_shouldParseMetadata
_shouldProcessSpecificArtists
_shouldRestart
_sigtermSource
_skipCount
_songMetadataDescriptor
_sourceType
_standardBodyDictionaryWithAdditionalFields:
_start
_startAncillaryServices
_startGeniusRequestWithStartDate:retryTimeout:debugName:connectionResponseBlock:
_startObservingRevocations
_startTask:
_startupQueue
_startupSequenceCompleted
_state
_stateChange
_stateDump
_stateHandle
_stop
_stopAncillaryServices
_stopObservingRevocations
_stopTask:
_storeAdamID
_storeID
_storeRequestContext
_storeRequestContextWithIdentity:applicationIdentifier:
_storeRequestContextWithIdentity:clientInfo:
_storefrontCountryCode
_storefrontCountryCodeRequestCompletionHandlers
_storefrontIdentifier
_storefrontIdentifierRequestCompletionHandlers
_subscribedPlaylistCloudIDs
_subscriptionObservationToken
_subscriptionStatusObservationToken
_subscriptionStatusResponse
_supportedConfigurations
_supportedConfigurationsDSIDs
_supportedJaliscoMediaKinds
_supportedJaliscoMediaKindsWithSagaEnabled
_supportedMediaKinds
_supportedMediaKindsDatabasePropertyValue
_supportedMediaKindsHandler
_supportsAutomaticEnablingiCloudMusicLibrary
_syncProgressDictionary
_synchronouslyLoadArtistUpdatePollingFrequencyFromBag
_table
_taskScheduler
_taskWithName:
_tccAccessChangedNotificationToken
_tearDownKVO
_tearDownNotifications
_testNextFlushPlayActivityFireSyncInterval
_throttledDeferredEvaluateKeepLocalTime
_timeIntervalForNextFlushOperationWithReplyBlock:
_timeStamp
_title
_token
_tokenCollection
_trackList
_troveID
_tryEnablingCloudMusicLibraryForReason:completionHandler:
_tryEnablingICMLOnDevicesSupportingSideLoadedContentWithProperties:reason:withCompletionHandler:
_type
_underlyingConnection
_uniqueAlbums
_uniqueDatesWithAddedContent
_uniqueSongs
_unsafeBackend
_unscheduleJobNamed:
_unscheduleTask:
_updateActionTimeStamp
_updateAirPlaySettingsForConfiguration:
_updateAllArtistStoreIDsUsingAllArtistImagesMap:
_updateAllowsExplicitContentSettingForConfiguration:automatically:
_updateCloudLibraryOperation
_updateCloudLibraryQueue
_updateCompletionBlock
_updateContentTasteForGlobalPlaylists:
_updateContentTasteForItem:invalidatingLocalCache:configuration:withCompletionHandler:
_updateContentTasteForMediaItems:
_updateEnhancedAudioAvailabilityIfNeeded
_updateFavoritingEntityTypeAlbumWithAddedItems:
_updateFavoritingEntityTypeArtistWithAddedItems:
_updateFavoritingEntityTypePlaylistWithAddedItems:
_updateFavoritingEntityTypeTrackWithAddedItems:
_updateGlobalPlaylistsFromContainersPayloadAtPath:downloadPathForSubscribedContainersPayload:clientIdentity:
_updateHTTPCookieStoreForContentRestrictions
_updateIntervalSeconds
_updateJaliscoLibraryWithClientIdentity:completion:
_updateLibrary
_updateLibraryCompletionHandlers
_updateLibraryOperation
_updateLibraryQueue
_updateOptInIfNecessary
_updatePushNotificationsRegistration
_updateRegistrationForConfiguration:completion:
_updateRequest
_updateSagaLibraryWithReason:allowNoisyAuthPrompt:forConfiguration:completionHandler:
_updateSpecificArtistStoreIDsUsingAllArtistImagesMap:
_updateStateWithChange:
_updateSupportedConfigurationsDSIDs
_updateTaskHelper
_updateWithBag:error:
_updateWithCapabilities:error:privacyAcknowledgementPolicy:capabilitiesRequestOperation:
_updateWithIdentityProperties:error:
_updateWithStorefrontIdentifier:error:
_updateWithSubscriptionStatusResponse:error:
_uploadArtworkAssetWithInfo:completionHandler:
_uploadArtworkAssetWithInfo:uploadResponsesURL:uploadResponseData:postUploadBackOffDelay:followupDownloadRequestsURL:
_uploadItemPropertiesQueue
_uploadLibrary
_uploadLibraryRequest
_uploadPlaylistPropertiesQueue
_uploadResponseStatus
_uploadingLibraryIsSupported
_urlRequest
_urlResolutionCacheFilePath
_useLongIDs
_userArtworkToken
_userDefaults
_userHasEverToggledOptInSwitch
_userIdentity
_userIdentityForAccount:
_userIdentityStore
_userNotificationController
_userRating
_userStateAccessForConnection:
_userStatesCache
_userStatesChanged:
_userToken
_valueTypeMap
_verificationInteractionLevel
_wasCancelled
_wasRestoredFromCloudBackup:
_watchdog
_workQueue
_wrapAndCacheResponseModelWithCompiledMLModel:
_writeURLResolutionCacheFileUsingBag:
_xpcListeners
_xpcStreamHandlerQueue
absoluteString
acceptsGzipEncoding
accessQueue
accountDSID
accountManager
accountStore
accountlessHandler
action
actionType
active
activeAccount
activeAccountDidChange
activeConfiguration
activeConfigurationChanged
activeConfigurationDSID
activeConnections
activeLockerAccount
activeUser
activityCriteriaForTask:startTimeInSeconds:
adamID
adamIDToSagaIDMap
adamId
addActionDetails:
addArtistContent:
addAsset:shouldPreloadKeys:waitForKeyIdentifiers:
addBackgroundOperation:forLibraryType:priority:
addBackgroundOperation:priority:
addBarrierBlock:
addCatalogContent:
addCloudItemID:idType:
addCompletionHandler:
addContentFeatures:
addContentPages:
addContentParameters:
addDelegate:queue:
addDependency:
addEntriesFromDictionary:
addGeniusPlaylistWithPersistentID:name:seedItemIDs:itemIDs:clientIdentity:completionHandler:
addGeniusPlaylistWithPersistentID:name:seedItemSagaIDs:itemSagaIDs:configuration:completion:
addImages:
addItemWithSagaID:toPlaylistWithPersistentID:clientIdentity:completionHandler:
addItemWithSagaID:toPlaylistWithPersistentID:configuration:completion:
addItemWithSagaID:toPlaylistWithPersistentID:requestingBundleID:clientIdentity:completionHandler:
addMessageActions:
addMessageEntry:completion:
addNonLibraryOwnedPlaylistsWithGlobalIDs:completion:
addObject:
addObjectsFromArray:
addObserver:forKeyPath:options:context:
addObserver:selector:name:object:
addOperation:
addOperation:forLibraryType:priority:
addOperation:priority:
addOperationWithBlock:
addOperations:
addPendingChange:
addStoreItemIDs:andAddTracksToCloudLibrary:withCompletion:
addStoreItemWithAdamID:referral:clientIdentity:completionHandler:
addStoreItemWithAdamID:referral:configuration:completion:
addStoreItemWithAdamID:referral:toPlaylistWithPersistentID:clientIdentity:completionHandler:
addStoreItemWithAdamID:referral:toPlaylistWithPersistentID:configuration:completion:
addStoreItemWithOpaqueID:requestingBundleID:clientIdentity:completionHandler:
addStoreItemWithOpaqueID:toPlaylistWithPersistentID:requestingBundleID:clientIdentity:completionHandler:
addStorePlaylistWithGlobalID:clientIdentity:completionHandler:
addStorePlaylistWithGlobalID:configuration:completion:
addSubrules:
addTarget:
addToPlaylistBehavior
addValue:
addedItems
ageVerificationStateForUserIdentity:
aggregateLibraryRecommendationMetricsFromSnapshots:
album
albumAdamID
albumArtistPersistentIDsToUpdate
albumMetadataDescriptor
allArtistImagesMapCacheFilePathURL
allArtistImagesMapURL
allGeniusPlaylistPropertiesWithML3ContainerProperties
allGeniusTrackPropertiesWithML3TrackProperties
allHTTPHeaderFields
allItems
allML3ContainerPropertiesWithGeniusPlaylistProperties
allML3TrackPropertiesWithGeniusTrackProperties
allMediaDownloadLibraryIdentifiers
allObjects
allStoreAccountsWithError:
allValues
allocWithZone:
allowNoisyAuthPrompt
allowedRetryCount
allowsCellularData
allowsExplicitContent
allowsMusicVideos
alternateDSID
anonymousListener
anyInLibrary:predicate:
anyObject
appendString:
applicationMessage
applyServerStateUpdatedWithUserStates:
apsPayload
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObjects:
arrayWithObjects:count:
artist
artistAdamID
artistContentAtIndex:
artistContentType
artistContents
artistContentsCount
artistMetadataDescriptor
artistName
artistNameLibraryMatchURL
artistPersistentIDsToUpdate
artworkDataSource
artworkDownloadAccessQueue
artworkDownloadOperationMap
artworkDownloadOperationQueue
artworkDownloadSession
artworkDownloadWatchdog
artworkInfoDictionaries
artworkInfos
artworkRelativePathFromToken:
artworkToken
artworkTokenForArtistHeroURL:
artworkTokenForChapterWithItemPID:retrievalTime:
artworkTokenForSource:
artworkType
artworkURLWithSize:cropStyle:format:
artworkURLWithSize:cropStyle:format:preferP3ColorSpace:
assetFileSize
assetURL
attributesOfItemAtPath:error:
audioQualityPreference
auditToken
authenticateFailureCode
authenticateForConfiguration:startInitialImport:enableCloudLibraryPolicy:isExplicitUserAction:completion:
authorizationStatus
autoPlayMode
automaticDownloadMediaKindsForMusic
automaticDownloadsEnabled
autorelease
autoupdatingActiveAccount
autoupdatingSharedLibrary
averagePlaysPerItemAdded
backgroundOperationQueue
backgroundTaskManager
bagForProfile:profileVersion:
bagProfile
bagProfileVersion
becomeActive
becomeInactiveWithDeauthentication:completion:
beginObservingBagWithHandler:
beginObservingCloudServiceStatusWithCompletionHandler:
beginObservingSubscriptionStatusWithHandler:
beginPerformUpdate
beginTransaction
bitDepth
blockOperationWithBlock:
bodyData
bodyDataURL
books
boolForKey:
boolValue
buildFeatures
buildURLRequestWithCompletionHandler:
buildVersion
bulkArtistNameLibraryMatchBatchSize
bulkArtistNameLibraryMatchURL
bulkRefreshWaitInterval
bundleIdentifier
bundleRecordForAuditToken:error:
bypassBagSanityChecks
bytes
cachedResponse
callCompletionHandlers
canShowCloudDownloadButtons
canShowCloudDownloadButtonsWithCompletion:
canShowCloudMusic
canShowCloudMusicWithCompletion:
canShowCloudVideo
canShowCloudVideoWithCompletion:
cancel
cancelAllImports
cancelAllImportsAndWaitForOperationsToFinish:
cancelAllOperations
cancelAllOperationsAndWaitForOperationsToFinish:
cancelArtistHeroImageUpdate
cancelArtistHeroImageUpdateAndWaitForOperationToFinish:
cancelDownloads:
cancelImportOperation:completionHandler:
cancelOperations
cancelOperationsByClass:
cancelOperationsWithCompletionHandler:
cancelPendingChanges
cancelPendingChangesForLibraryType:
cancelPendingChangesWithCompletion:
cancelRequest:
cancellAllOperations
canonicalId
canonicalResponseForResponse:
capabilitiesDidChange:
carrierBundleDeviceIdentifier
catalogContentAtIndex:
catalogContentType
catalogContentsCount
categoryWithIdentifier:actions:intentIdentifiers:options:
center
centerQueue
changeLibraryManagementPolicy:
changeLibraryManagementPolicy:withAccountsStateChange:
channelLayoutDescription
checkInDatabaseConnection:
checkoutReaderConnection
class
cleanupArtworkWithOptions:
cleanupArtworkWithOptions:usingConnection:
clearAllCloudKVSData
clearAllGeniusData
clearArtistContents
clearCatalogContents
clearContentFeatures
clearJaliscoAccountID
clearJaliscoLastExcludedMediaKinds
clearLocationFromLibrary:persistentIDs:disableKeepLocal:usingConnection:
clearNeedsUpdateForTokens
clearSagaCloudAccountID
clearSagaCloudAddToPlaylistBehavior
clearSagaCloudLibraryCUID
clearSagaCloudLibraryTroveID
clearSagaLastGeniusUpdateDate
clearSagaLastItemPlayDataUploadDate
clearSagaLastPlaylistPlayDataUploadDate
clearSagaPrefersToMergeWithCloudLibrary
clearValues
clientIdentifier
clientIdentity
clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:bundleIdentifier:
clientVersion
close
closeFile
cloudAddRequestWithDatabaseID:
cloudAlbumID
cloudArtworkInfoDictionaries
cloudIDToLyricsTokenMap
cloudLibraryStateReason
cloudServiceStatusMonitor
code
codecString
compare:
compare:options:
compileModelAtURL:error:
completionHandler
components:fromDate:
componentsJoinedByString:
componentsSeparatedByString:
componentsWithURL:resolvingAgainstBaseURL:
computation
concurrent
configuration
configurationFromSourceConfiguration:userIdentity:
conformsToProtocol:
connectWithCompletionHandler:
connection
connection:channelSubscriptionsFailedWithFailures:
connection:didChangeConnectedStatus:
connection:didFailToSendOutgoingMessage:error:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didReceivePublicToken:
connection:didReceiveToken:forInfo:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didSendOutgoingMessage:
connectionCompletionHandler
connectionDidReconnect:
constraintsForSystemApplicationType:
containerCloudID
containerID
containerIDs
containerQueryWithContainer:
containerType
containingBundleRecord
contentFeaturesAtIndex:
contentFeaturesCount
contentFeaturesType
contentKeySession:didFinishProcessingKey:withResponse:error:
contentPages
contentParameters
contentTasteItem
contentTasteItems
contentTasteType
contentTasteUpdateOperation:finishedByInvalidatingCache:error:
contentTasteUpdateResponse
contentType
contentTypeAsString:
contentsOfDirectoryAtPath:error:
controllerWithUserIdentity:
cookieWithProperties:
copy
copyItemAtURL:toURL:error:
copyWithBlock:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createCFUserNotification
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createFeatureProviderDictionaryFromNewContentResponse:withLibraryArtistSnapshots:
createFileAtPath:contents:attributes:
createPlaylistWithPersistentID:properties:trackList:clientIdentity:completionHandler:
createPlaylistWithPersistentID:properties:trackList:configuration:completion:
createPlaylistWithPersistentID:properties:trackList:requestingBundleID:clientIdentity:completionHandler:
cuid
cumulativePlayCount
cumulativeSkipCount
currentAdamID
currentAlbumCloudLibraryID
currentArtistCloudLibraryID
currentCloudID
currentConnection
currentDatabaseRevision
currentDeviceInfo
currentGlobalPlaylistID
currentHandler
currentItemCount
currentLocale
currentLyricsToken
currentPaginationToken
currentParsingBook
currentPlaylistCloudID
currentPlaylistKind
currentRunLoop
currentStoreFrontID
currentTasks
currentThermalLevel
currentUpdateOperation
daapQueryFilterString
daemonDefaults
daemonOptionsForConfiguration:
data
dataForKey:
dataUsingEncoding:
dataWithBytes:length:
dataWithContentsOfFile:
dataWithContentsOfURL:options:error:
dataWithJSONObject:options:error:
dataWithPropertyList:format:options:error:
databaseConnectionAllowingWrites:withBlock:
databaseID
databasePath
databaseRevision
date
dateByAddingTimeInterval:
dateFromComponents:
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
daysSinceLastPlayedDate
deauthenticateForConfiguration:completion:
debugDescription
decodeArrayOfObjectsOfClass:forKey:
decodeDoubleForKey:
decodeInt32ForKey:
decodeInt64ForKey:
decodeIntegerForKey:
decodeObjectForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decodeTCCIdentityForKey:
decreasePriority
decreasePriorityForAllOperations
decreaseQualityOfService
defaultCenter
defaultIdentityStore
defaultInfo
defaultManager
defaultMediaLibrary
defaultSession
delegate
delegateAccountStoreListener
delegationProviderService
deleteAllEntitiesFromLibraryWithDeletionType:
deleteAllEntitiesFromLibraryWithDeletionType:usingConnection:
deleteAutomaticDownloadsKey
deleteDB
deleteDatabaseProperty:
deleteFromLibrary
deleteFromLibrary:deletionType:persistentIDs:count:usingConnection:
deleteHandlerForConfiguration:
deleteInteractionsWithGroupIdentifiers:bundleID:protectionClass:completionHandler:
deliverSubscriptionStatusResponse:forRemoteRequestWithUniqueIdentifier:error:
deprioritizeAlbumArtistHeroImageForPersistentID:
deprioritizeAlbumArtistHeroImageForPersistentID:configuration:
deprioritizeArtistHeroImageForPersistentID:
deprioritizeArtistHeroImageForPersistentID:configuration:
deprioritizeContainerArtworkForSagaID:
deprioritizeContainerArtworkForSagaID:configuration:
deprioritizeImportArtworkForCloudID:artworkType:
deprioritizeItemArtworkForPurchaseHistoryID:
deprioritizeItemArtworkForPurchaseHistoryID:configuration:
deprioritizeItemArtworkForSagaID:
deprioritizeItemArtworkForSagaID:configuration:
deprioritizeScreenshotForPurchaseHistoryID:
deprioritizeScreenshotForPurchaseHistoryID:configuration:
deprioritizeScreenshotForSagaID:
deprioritizeScreenshotForSagaID:configuration:
deprioritizeSubscriptionContainerArtworkForPersistentID:
deprioritizeSubscriptionContainerArtworkForPersistentID:configuration:
deprioritizeSubscriptionItemArtworkForPersistentID:
deprioritizeSubscriptionItemArtworkForPersistentID:configuration:
deprioritizeSubscriptionScreenshotForPersistentID:
deprioritizeSubscriptionScreenshotForPersistentID:configuration:
description
descriptionWithLocale:
developerToken
deviceGUID
deviceInfo
deviceMediaLibraryWithUserIdentity:
deviceName
dictionary
dictionaryForBagKey:
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithContentsOfFile:
dictionaryWithContentsOfURL:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
dictionaryWithSharedKeySet:
didChangeValueForKey:
disableActiveLockerAccount
disableCloudLibraryWithReason:completion:
disableLockerAccountWithDSID:completionHandler:
disconnect
displayType
distantPast
domain
doubleValue
downPinCollectionsForClasses:configuration:
downloadManager:didCancelAssets:
downloadManager:didChangeDownloadPausedReasonForAssets:
downloadManager:didEnqueueAssetDownloads:didRemoveAssetDownloads:
downloadManager:didFinishAsset:withError:
downloadManager:didUpdateDownloadProgress:
downloadResourcesForMessageWithIdentifier:bundleIdentifier:completion:
downloaderAccountID
dsid
eTagValueFromContentTasteResponse:
earlierDate:
effectiveBoolValueForSetting:
elementCodeForProperty:
emptyAllTables
enableCloudLibraryWithClientIdentity:startInitialImport:enableCloudLibraryPolicy:isExplicitUserAction:completionHandler:
enableReason
enabledTopics
encodeDouble:forKey:
encodeInt32:forKey:
encodeInt64:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeTCCIdentity:forKey:
encodeWithCoder:
endArray
endObservingBagWithToken:
endObservingCloudServiceStatusWithToken:completionHandler:
endObservingSubscriptionStatusWithToken:
endPerformUpdate
endReasonType
endTransaction
endpoint
enhancedAudioConfiguration
enhancedAudioKeyManager
enhancedAudioSharedContentKeyPath
enqueueBlockForTransactionCommit:
enqueueChildOperation:
enqueueDataRequest:withCompletionHandler:
enqueueDownloadRequest:toDestination:withCompletionHandler:
enqueuerProperties
entityType
enumerateBackgroundOperationsUsingBlock:
enumerateCloudItemIDsUsingBlock:
enumerateDeletedItemsInResponseData:usingHandler:
enumerateHandlersForAccountState:usingBlock:
enumerateItemsInResponseData:usingHandler:
enumerateItemsUsingBlock:
enumerateKeyEntriesUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumerateOperationsUsingBlock:
enumeratePathsToDeleteFromLibrary:persistentIDs:usingBlock:
enumeratePersistentIDsAfterRevision:revisionTrackingCode:maximumRevisionType:forMediaTypes:inUsersLibrary:usingBlock:
enumeratePersistentIDsAndProperties:usingBlock:
enumeratePersistentIDsUsingBlock:
enumerateRawItemsInResponseData:usingHandler:
enumerateRowsWithBlock:
enumeratorAtPath:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
environmentMonitorDidChangeBatteryLevel:
environmentMonitorDidChangeNetworkReachability:
environmentMonitorDidChangeNetworkType:
environmentMonitorDidChangePower:
environmentMonitorDidChangeTelephonyStatus:
environmentMonitorDidChangeThermalLevel:
ephemeralSessionConfiguration
equivalencySourceAdamID
error
errorWithDomain:code:userInfo:
eventDate
eventTimeZone
eventType
exceptionWithName:reason:userInfo:
executeQuery:withParameters:
executeUpdate:
executeUpdate:withParameters:error:
expirationDate
externalID
failureCount
familyID
familyMemberStoreID
favoriteAlbumWithCloudLibraryID:time:completionHandler:
favoriteAlbumWithCloudLibraryID:time:configuration:completionHandler:
favoriteArtistWithCloudLibraryID:time:completionHandler:
favoriteArtistWithCloudLibraryID:time:configuration:completionHandler:
favoriteEntityWithSagaID:entityType:time:completionHandler:
favoriteEntityWithSagaID:entityType:time:configuration:completionHandler:
favoriteEntityWithStoreID:entityType:time:completionHandler:
favoriteEntityWithStoreID:entityType:time:configuration:completionHandler:
favoritePlaylistWithGlobalID:time:completionHandler:
favoritePlaylistWithGlobalID:time:configuration:completionHandler:
featureName
featureValueForName:
fetchConfigurationWithCompletionHandler:
fetchEnhancedAudioOfflineKeys
fetchMissingOfflineKeys
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileHandleForWritingToURL:error:
fileSize
fileURLWithPath:
fileURLWithPath:isDirectory:
fileURLWithPathComponents:
finalState
finish
finishWithError:
finishedUpdateOperationForLibraryType:withResponse:
firstName
firstObject
floatValue
flushPendingPlayActivityEventsWithCompletionHandler:
followupUpdateOpertion
geniusPlaylistPropertyForML3ContainerProperty:
geniusTrackPropertyForML3TrackProperty:
geniusValueForML3ContainerProperty:value:
geniusValueForML3TrackProperty:value:
geniusValueForMLValue:
getAccountNotificationsWithCompletionHandler:
getBagForRequestContext:forceRefetch:withCompletionHandler:
getBagForRequestContext:withCompletionHandler:
getCachedContentTasteResponseForConnectionConfiguration:
getCookieWithName:userIdentifier:
getKeyStatusForAccountUniqueIdentifier:error:
getListenerEndpointForService:completion:
getPlayActivityEvents:storeAccountID:returningError:
getPropertiesForUserIdentity:completionHandler:
getPropertiesForUserIdentity:error:
getResourceValue:forKey:error:
getResultsRequest
getStoreAccounts:returningError:
getSubscriptionStatusForUserIdentity:bypassingCache:withCompletionHandler:
getSubscriptionStatusForUserIdentity:withCompletionHandler:
getSubscriptionStatusWithCompletionHandler:
getTokenStatusForDSIDs:forcingRefresh:completion:
getUserStatesForcingRefresh:withReply:
getValuesForProperties:
getVerificationContextForUserIdentity:error:
globalIDToSagaIDMap
globalPlaylistID
globalSerialQueue
handleAccountStateChange:
handleContentTasteChangedNotification
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleMusicAppInstalled
handleMusicAppRemoved
handleMusicAppRemovedWithCompletion:
handleNotification:
handleSuccess:
handlerCoordinator
handlerForConfiguration:
handlerWithType:configuration:error:
handlers
hasActiveDownloads
hasAdamId
hasAddToPlaylistBehavior
hasArtistAndAlbumData
hasBagProfile
hasBagProfileVersion
hasBeenPreviouslyToggled
hasCanonicalId
hasCapability:
hasClientIdentifier
hasClientVersion
hasContentType
hasDeveloperToken
hasDomain
hasEntities
hasError
hasInfoForProperty:
hasIsExplicit
hasKey
hasLocalizedDescription
hasModel
hasOfflinePlaybackKeys
hasOperationsOfClass:
hasOriginalArtworkForRelativePath:
hasPendingPlayActivityEvents:returningError:
hasPendingPlayEvents
hasPhase
hasProperNetworkConditionsToPlayMedia
hasProperNetworkConditionsToPlayMediaWithCompletion:
hasProperNetworkConditionsToShowCloudMedia
hasProperNetworkConditionsToShowCloudMediaWithCompletion:
hasRecoId
hasReleaseDate
hasShouldIgnoreDeveloperTokenCache
hasShouldIgnoreUserTokenCache
hasSuffix:
hasTokenCollection
hasUserToken
hash
havePendingOperationToReloadSecondaryAccountLibraries
hideItemsWithPurchaseHistoryIDs:clientIdentity:completionHandler:
hideItemsWithPurchaseHistoryIDs:configuration:completion:
homeUserIdentifiers
householdID
iCloudPersonID
ic_URLByAppendingQueryParameters:
ic_arrayValueForKey:
ic_cloudClientErrorWithCode:userInfo:
ic_dataValueForKey:
ic_dictionaryValueForKey:
ic_intValueForKey:
ic_isAutomaticDownloadsEnabledForMediaKindMusic
ic_numberValueForKey:
ic_referencesSameFile:
ic_sharedAccountStore
ic_sharedRequestOperationQueueWithQualityOfService:
ic_storeAccountForStoreAccountID:error:
icd_isConnectionAllowedForService:
icd_isConnectionAllowedForService:validationReason:
icd_preferredVideoQuality
icd_sagaCloudAddToPlaylistBehavior
icd_sagaDatabaseUserVersion
icd_setPreferredVideoQuality:
icd_setSagaCloudAddToPlaylistBehavior:
identifier
identifiers
identityStore
ignoreAccountChanges
ignoreMinRefreshInterval
images
importAlbumArtistHeroImageForPersistentID:clientIdentity:completionHandler:
importAlbumArtistHeroImageForPersistentID:configuration:completion:
importAllItemArtworkAndScreenshotsWithClientIdentity:
importAllItemArtworkWithClientIdentity:
importArtistHeroImageForPersistentID:clientIdentity:completionHandler:
importArtistHeroImageForPersistentID:configuration:completion:
importArtworkForCloudID:artworkType:token:mediaType:allowsCellularData:clientIdentity:completionHandler:
importArtworkTokenForEntityPersistentID:entityType:artworkToken:artworkType:sourceType:usingConnection:
importCloudArtworkForRequests:
importContainerArtworkForPersistentID:clientIdentity:completionHandler:
importContainerArtworkForSagaID:clientIdentity:completionHandler:
importContainerArtworkForSagaID:configuration:completion:
importExistingOriginalArtworkWithArtworkToken:artworkType:sourceType:mediaType:
importItemArtworkForPersistentID:clientIdentity:completionHandler:
importItemArtworkForPurchaseHistoryID:clientIdentity:completionHandler:
importItemArtworkForSagaID:clientIdentity:completionHandler:
importItemArtworkForSagaID:configuration:completion:
importOriginalArtworkFromFileURL:withArtworkToken:artworkType:sourceType:mediaType:
importOriginalArtworkFromImageData:withArtworkToken:artworkType:sourceType:mediaType:
importScreenshotForPersistentID:clientIdentity:completionHandler:
importScreenshotForPurchaseHistoryID:clientIdentity:completionHandler:
importScreenshotForPurchaseHistoryID:configuration:completion:
importScreenshotForSagaID:clientIdentity:completionHandler:
importScreenshotForSagaID:configuration:completion:
importSubscriptionContainerArtworkForPersistentID:configuration:completion:
importSubscriptionItemArtworkForPersistentID:configuration:completion:
importSubscriptionScreenshotForPersistentID:configuration:completion:
importTracksFromRevision:toRevision:clientIdentity:withCompletionHandler:
importTracksUpToRevision:clientIdentity:withCompletionHandler:
importer
includeFlavors
includeHiddenItems
includePreorders
increasePriority
increasePriorityForAllOperations
increaseQualityOfService
incrementRevisionWithLibrary:persistentID:deletionType:revisionType:usingConnection:
init
initWithAccountManager:
initWithAccountManager:handlerCoordinator:
initWithAction:databaseID:databaseRevision:opaqueID:bundleID:
initWithAdamID:date:score:
initWithAdamID:playlistPersistentID:clientIdentity:
initWithAddToPlaylistBehavior:clientIdentity:
initWithApplicationMessage:bundleIdentifier:
initWithArray:
initWithArtworkImporter:clientIdentity:operationQueue:artistPersistentIDsToUpdate:albumArtistPersistentIDsToUpdate:
initWithArtworkResponseDictionary:
initWithArtworkURL:
initWithBase64EncodedString:options:
initWithBlock:
initWithBundleIdentifier:
initWithBundleIdentifier:allowPlaceholder:error:
initWithBytes:length:
initWithBytes:length:encoding:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithBytesNoCopy:length:freeWhenDone:
initWithCUID:troveID:
initWithCalendarIdentifier:
initWithCapacity:
initWithClientIdentity:
initWithClientIdentity:ItemSagaIDs:
initWithClientIdentity:PlaylistSagaIDs:
initWithClientIdentity:SubscribedPlaylistSagaIDs:ignoreMinRefreshInterval:requestReason:
initWithClientIdentity:opaqueID:bundleID:
initWithClientIdentity:opaqueID:bundleID:playlistPersistentID:
initWithClientIdentity:playlistGlobalID:
initWithClientIdentity:playlistPersistentID:
initWithClientIdentity:playlistPersistentID:properties:trackList:
initWithClientIdentity:sagaID:
initWithClientInfo:
initWithClientInfo:options:
initWithCloudIDs:
initWithCode:headerFields:data:MIMEType:error:
initWithCoder:
initWithConfiguration:
initWithConfiguration:CUID:troveID:
initWithConfiguration:adamID:clientIdentity:
initWithConfiguration:adamID:playlistPersistentID:clientIdentity:
initWithConfiguration:adamID:playlistPersistentID:referralAlbumAdamID:clientIdentity:
initWithConfiguration:adamID:playlistPersistentID:referralPlaylistGlobalID:clientIdentity:
initWithConfiguration:adamID:referralAlbumAdamID:clientIdentity:
initWithConfiguration:adamID:referralPlaylistGlobalID:clientIdentity:
initWithConfiguration:bag:
initWithConfiguration:clientIdentity:
initWithConfiguration:clientIdentity:addToPlaylistBehavior:
initWithConfiguration:clientIdentity:albumCloudLibraryID:time:
initWithConfiguration:clientIdentity:albumPersistentID:albumItemProperties:
initWithConfiguration:clientIdentity:dictionary:
initWithConfiguration:clientIdentity:globalPlaylistID:time:
initWithConfiguration:clientIdentity:itemPurchaseHistoryIDs:
initWithConfiguration:clientIdentity:itemSagaIDs:
initWithConfiguration:clientIdentity:opaqueID:bundleID:
initWithConfiguration:clientIdentity:opaqueID:bundleID:playlistPersistentID:
initWithConfiguration:clientIdentity:playlistGlobalID:
initWithConfiguration:clientIdentity:playlistPersistentID:
initWithConfiguration:clientIdentity:playlistPersistentID:properties:trackList:
initWithConfiguration:clientIdentity:playlistPersistentID:properties:trackList:requestingBundleID:
initWithConfiguration:clientIdentity:playlistSagaIDs:
initWithConfiguration:clientIdentity:purchaseHistoryID:properties:
initWithConfiguration:clientIdentity:reason:
initWithConfiguration:clientIdentity:reason:updateTaskHelper:
initWithConfiguration:clientIdentity:sagaID:
initWithConfiguration:clientIdentity:sagaID:entityType:time:
initWithConfiguration:clientIdentity:sagaID:properties:
initWithConfiguration:clientIdentity:sagaIDs:
initWithConfiguration:clientIdentity:seedID:numberOfItems:
initWithConfiguration:clientIdentity:storeID:entityType:time:
initWithConfiguration:clientIdentity:subscribedPlaylistSagaIDs:ignoreMinRefreshInterval:requestReason:
initWithConfiguration:clientIdentity:subscribedPlaylistSagaIDs:ignoreMinRefreshInterval:requestReason:pinnedOnly:
initWithConfiguration:geniusPlaylistPersistentID:playlistName:seedItemIDs:itemIDs:clientIdentity:
initWithConfiguration:itemSagaID:playlistPersistentID:clientIdentity:
initWithConfiguration:itemSagaID:playlistPersistentID:clientIdentity:requestingBundleID:
initWithConfiguration:maxConcurrentRequests:qualityOfService:
initWithConfiguration:mergeToCloudLibraryPreference:allowNoisyAuthPrompt:enableLibraryReason:clientIdentity:
initWithConfiguration:playlistPersistentID:properties:trackList:clientIdentity:
initWithConfiguration:playlistPersistentID:properties:trackList:requestingBundleID:clientIdentity:
initWithConfiguration:prefix:loggable:
initWithConfiguration:progressObserver:
initWithConfiguration:reason:clientIdentity:
initWithConfiguration:reason:supportedMediaKindsHandler:clientIdentity:
initWithConfiguration:sourceType:
initWithConfiguration:updateTaskHelper:
initWithConnection:
initWithConnection:supportedMediaKindsHandler:
initWithContentItemSnapshot:
initWithContentTasteResponse:
initWithContentTasteUpdateItem:invalidateLocalCache:configuration:operationIdentifier:
initWithContentsOfURL:
initWithContentsOfURL:options:error:
initWithData:
initWithData:encoding:
initWithDatabaseID:
initWithDatabaseID:cloudIDs:itemKind:useLongIDs:
initWithDatabaseID:containerIDs:
initWithDatabaseID:containerIDs:properties:
initWithDatabaseID:databaseRevision:adamID:sagaID:playlistGlobalID:containerID:referralAlbumAdamID:referralPlaylistGlobalID:
initWithDatabaseID:databaseRevision:addToPlaylistBehavior:
initWithDatabaseID:databaseRevision:containerID:trackList:properties:
initWithDatabaseID:databaseRevision:playlistProperties:trackList:
initWithDatabaseID:databaseRevision:playlistProperties:trackList:requestingBundleID:
initWithDatabaseID:itemIDs:properties:useLongIDs:
initWithDatabaseID:itemIDs:useLongIDs:
initWithDatabaseID:metadataFilter:queryFilter:purchaseTokens:includeHiddenItems:includePreorders:paginationToken:
initWithDatabaseID:paginationToken:
initWithDatabaseID:playlistName:seedItemIDs:itemIDs:
initWithDatabaseID:sagaIDs:itemKind:
initWithDatabaseID:seedID:numberOfItems:
initWithDatabaseRevision:
initWithDelegate:
initWithDeveloperToken:clientInfo:options:
initWithDeveloperToken:userToken:userTokenFetchingError:
initWithDictionary:
initWithDictionary:error:
initWithDictionaryRepresentation:
initWithDomain:code:userInfo:
initWithDownloaderAccountID:purchaserAccountID:familyID:
initWithEntity:artworkType:
initWithEntityType:
initWithEnvironmentName:namedDelegatePort:queue:
initWithGlobalPlaylistID:contentTaste:configuration:
initWithHandlerProvider:
initWithIdentity:
initWithIdentity:identityStore:clientInfo:
initWithItemSagaID:playlistPersistentID:
initWithKindsToExclude:supportedMediaKindsHandler:
initWithLibraryManagementPolicy:
initWithLibraryManagementPolicy:backgroundTaskScheduler:
initWithLibraryPath:trackData:playlistData:
initWithLibraryPath:trackData:playlistData:artistData:albumData:clientIdentity:
initWithLibraryPath:trackData:playlistData:clientIdentity:
initWithLocaleIdentifier:
initWithLookupItems:
initWithMachServiceName:
initWithMessageUserInfo:
initWithNSError:
initWithName:
initWithNewArtistContentResponseModel:andMLModel:
initWithObjects:
initWithObjectsAndKeys:
initWithOperation:
initWithOptions:
initWithOutputFileHandle:
initWithPath:
initWithPlayActivityTable:
initWithPrivacyIdentifier:
initWithPrivacyIdentifier:identity:
initWithProperties:relationships:
initWithProtobufData:type:isResponse:
initWithPurchaseHistoryID:properties:
initWithRemoteRequestOperationResponse:remoteRequestOperationError:
initWithRequestContext:
initWithRequestContext:allowsExplicitContent:isAutomatic:
initWithRequestContext:keyStore:
initWithRequestContext:mediaKindsToAdd:mediaKindsToRemove:
initWithRequestContext:token:
initWithResponse:data:userInfo:storagePolicy:
initWithSagaID:properties:
initWithSeedID:clientIdentity:numberOfItems:
initWithService:
initWithShape:dataType:error:
initWithSong:
initWithSourceType:configuration:
initWithStartHandler:
initWithStoreID:sagaID:globalPlaylistID:albumCloudLibraryID:artistCloudLibraryID:entityType:time:databaseID:databaseRevision:
initWithStoreID:sagaID:globalPlaylistID:albumCloudLibraryID:artistCloudLibraryID:time:databaseID:databaseRevision:
initWithStoreItemID:mediaContentTasteItem:contentTaste:configuration:timeStamp:
initWithStoreRequestContext:
initWithStoreRequestContext:params:
initWithSubscribedPlaylistCloudIDs:cloudLibraryConnection:
initWithSuiteName:
initWithSystemApplicationType:
initWithTemporaryFileURL:
initWithTitle:andStoreAdamID:
initWithToken:artworkType:musicLibrary:
initWithURL:
initWithURL:append:
initWithURL:requestContext:
initWithURLRequest:requestContext:
initWithURLSession:configuration:cloudID:artworkToken:artworkType:sourceType:clientIdentity:
initWithUnsignedChar:
initWithUnsignedLong:
initWithUnsignedLongLong:
initWithUnsignedShort:
initWithUserIdentity:
initWithUserIdentity:userIdentityStore:
initWithUserIdentity:userIdentityStore:clientIdentity:
initWithUserInteractionLevel:
initWithVerificationContext:
initialImport
initialState
initialUpdate
inputStreamWithData:
inputStreamWithURL:
insertPlayActivityEvent:returningError:
insertPlayActivityEvents:shouldFlush:withCompletionHandler:
insertPropertiesForUserIdentity:andPostAccountChangeNotification:usingBlock:completionHandler:
insertPropertiesForUserIdentity:usingBlock:completionHandler:
instanceMethodForSelector:
int64ForColumnIndex:
int64ValueForBagKey:
int64ValueForFirstRowAndColumn
intForColumnIndex:
intValue
integerForKey:
integerValue
interfaceWithProtocol:
internalDefaults
internalOperationQueue
invalidate
invalidateCachedSubscriptionStatusWithCompletionHandler:
isActive
isActiveLocker
isActiveUser
isAppleTV
isAsynchronous
isAudioAccessory
isCachedResponse
isCancelled
isCellularDataRestrictedForMusic
isCellularDataRestrictedForMusicWithCompletion:
isCellularDataRestrictedForStoreApps
isCellularDataRestrictedForStoreAppsWithCompletion:
isCellularDataRestrictedForVideos
isCellularDataRestrictedForVideosWithCompletion:
isCharging
isConcurrent
isCurrentDeviceValidHomeAccessory
isDeviceClassCUnlocked
isDeviceSetupComplete
isEnablingCloudLibraryDestructive
isEqual:
isEqualToData:
isEqualToNumber:
isEqualToSet:
isEqualToString:
isExecuting
isExplicit
isExplicitSettingEnabled
isExplicitUserAction
isFileURL
isFinished
isIPhone
isIPod
isKindOfClass:
isMac
isManageable
isManagedAppleID
isMatchEnabled
isMediaKindDisabledForJaliscoLibrary:configuration:completion:
isMediaKindDisabledForJaliscoLibrary:withClientIdentity:completionHandler:
isMediaSyncingSupported
isMemberOfClass:
isNSArray__
isNSData__
isNSString__
isNetworkActivityIndicatorVisible
isOffline
isPersistent
isPhoneNumberAccessRestricted
isPrivateListeningEnabled
isPrivateListeningEnabledForCurrentAccessory
isRemoteServerLikelyReachable
isRemoteServerReachable
isSBEnabled
isSagaAuthenticatedForConfiguration:completion:
isSetupCompleted
isSpatialized
isStartupSequenceCompleted
isSuspended
isToggled
isUpdateInProgressWithIsInitialImport:
isUpdatingCloudLibrary
isUpdatingCloudLibraryWithCompletion:
isWiFiAssociated
itemDuration
itemEndTime
itemForIdentifier:
itemKind
itemStartTime
itemType
jaliscoAccountID
jaliscoChangedMediaTypes
jaliscoGetSortedMediaKinds:
jaliscoHasCloudGeniusData
jaliscoLastExcludedMediaKinds
jaliscoLastLibraryUpdateTime
jaliscoLastSupportedMediaKinds
jaliscoLibrary
jaliscoLibraryWithReason:
jaliscoNeedsUpdateForTokens
jaliscoOnDiskDatabaseRevision
kindWithVariants:
knownAccountDSIDs
knownActiveAccountDSID
lastDevicePlaybackDate
lastError
lastKnownLocalStoreAccountProperties
lastKnownMusicSubscriptionType
lastKnownMusicVideosAllowed
lastName
lastObject
lastPathComponent
lastPlayedDate
laterDate:
legacyScore
length
libraryAddedDate
libraryBagKey
libraryContainerPath
libraryDAAPConfiguration
libraryIdentifier
libraryManagementPolicy
lightweightSubscriptionStatus
linkItemAtURL:toURL:error:
listCloudServerOperations
listener:shouldAcceptNewConnection:
loadArtworkInfoForContainerSagaIDs:clientIdentity:completionHandler:
loadArtworkInfoForContainerSagaIDs:configuration:completion:
loadArtworkInfoForPurchaseHistoryIDs:clientIdentity:completionHandler:
loadArtworkInfoForPurchaseHistoryIDs:configuration:completion:
loadArtworkInfoForSagaIDs:clientIdentity:completionHandler:
loadArtworkInfoForSagaIDs:configuration:completion:
loadArtworkInfoForSubscriptionContainerPersistentIDs:clientIdentity:completionHandler:
loadArtworkInfoForSubscriptionContainerPersistentIDs:configuration:completion:
loadArtworkInfoForSubscriptionItemPersistentIDs:clientIdentity:completionHandler:
loadArtworkInfoForSubscriptionItemPersistentIDs:configuration:completion:
loadBooksForStoreIDs:clientIdentity:withCompletionHandler:
loadBooksForStoreIDs:configuration:completion:
loadGeniusItemsForSagaID:clientIdentity:completionHandler:
loadGeniusItemsForSagaID:configuration:completion:
loadIsJaliscoUpdateInProgressForConfiguration:completion:
loadIsSagaUpdateInProgressForConfiguration:completion:
loadIsUpdateInProgressForConfiguration:completion:
loadJaliscoUpdateProgressForConfiguration:completion:
loadLastKnownEnableICMLErrorStatusForConfiguration:completion:
loadLastKnownEnableICMLStatusWithCompletionHandler:
loadMissingArtworkForConfiguration:
loadMissingArtworkWithClientIdentity:
loadSagaUpdateProgressForConfiguration:completion:
loadScreenshotInfoForPurchaseHistoryIDs:clientIdentity:completionHandler:
loadScreenshotInfoForPurchaseHistoryIDs:configuration:completion:
loadScreenshotInfoForSagaIDs:clientIdentity:completionHandler:
loadScreenshotInfoForSagaIDs:configuration:completion:
loadScreenshotInfoForSubscriptionPersistentIDs:clientIdentity:completionHandler:
loadScreenshotInfoForSubscriptionPersistentIDs:configuration:completion:
loadUpdateProgressForConfiguration:completion:
localDatabaseRevision
localStoreAccountProperties
localeWithLocaleIdentifier:
localizedDescription
localizedName
localizedStringForKey:value:table:
logCategory
logCloudAddRequestDescription
logEvent:payload:
loginRequestInFlight
longLongValue
longValue
lyricsDisplayedCharacterCount
lyricsID
lyricsInfoDictionaries
lyricsLanguage
machServiceListener
main
mainScreenSize
manageable
managedConfigurations
mapProperty:toCode:valueType:
mappedDataWithContentsOfTemporaryFileURL:error:
maxRetryCount
maxSupportedSize
maxSyncRetryIntervalSeconds
mediaFilter
mediaFolderPathByAppendingPathComponent:
mediaKinds
mediaLibraryAccessApplicationIdentifiersWithTCCAcceptanceDates
mediaPlaybackDefaults
mediaPlayerBundle
mediaType
mediaUserStateCenterServer
mergeFrom:
mergeToCloudLibraryPreference
messageEntriesForBundleIdentifier:completion:
messageEntryWithIdentifier:bundleIdentifier:completion:
metadataDictionary
metadataFilter
metadataKeys
method
migrateExistingArtworkToken:newArtworkToken:newSourceType:
minusSet:
model
modelWithContentsOfURL:error:
moduleIdentifier
msv_analyticSignature
msv_errorByRemovingUnsafeUserInfo
msv_errorWithDomain:code:debugDescription:
msv_errorWithDomain:code:underlyingError:debugDescription:
msv_map:
msv_uploadTaskWithRequest:fromData:completionHandler:
music
musicLibrary
musicLibraryForUserAccount:
mutableCloudIDToLyricsTokenMap
mutableCopy
name
needsUpdateForTokens
networkAvailabilityService
networkType
newImporter
newWithPersistentID:inLibrary:
nextObject
notificationCenter:didChangeSettings:bag:
notificationWithName:object:userInfo:
notificationsManager:didReceiveActiveUserIdentityDidChangeNotification:
notificationsManager:didReceiveAllowsExplicitContentDidChangeNotification:
notificationsManager:didReceiveAllowsMusicVideosDidChangeNotification:
notificationsManager:didReceiveApplicationInstallationNotification:
notificationsManager:didReceiveAuthServiceTokenDidChangeNotification:
notificationsManager:didReceiveNotificationChangingUserState:
notificationsManager:didReceiveSubscriptionStatusDidChangeNotification:
notificationsManager:didReceiveUserIdentityStoreDidChangeNotification:
notificationsManagerDidReceiveCellularDataRestrictionDidChangeDarwinNotification:
notificationsManagerDidReceiveCloudAuthenticationDidChangeDarwinNotification:
notificationsManagerDidReceiveFirstUnlockNotification:
notificationsManagerDidReceiveLibraryImportDidFinishDarwinNotification:
notificationsManagerDidReceivePhoneNumberChangedNotification:
notificationsManagerDidRecieveICPlayActivityFlushInternalTestRequestNotification:
notifyCloudLibraryAvailabilityDidChange
notifyContentsDidChange
notifyDeviceSetupFinishedWithCompletion:
notifyEntitiesAddedOrRemoved
numberForBagKey:
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedChar:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
objectsPassingTest:
observeValueForKeyPath:ofObject:change:context:
onDiskRevision
opaqueID
open
operation
operationCount
operationIdentifier
operationQueue
operations
originalArtworkDirectory
originatingClientConnection
outputClusterType
outputStreamToFileAtPath:append:
oversizeLogCategory
parse
parseErrorInResponseData:
parseItemWithBytes:length:usingHandler:
parseItemWithBytes:length:valuesOut:valuesCapacity:
parseResponseData:
parsedBodyDictionary
parsedBooks
parser:didEndContainerCode:
parser:didFailWithError:
parser:didFinishWithState:
parser:didParseDataCode:bytes:contentLength:
parser:didStartContainerCode:contentLength:
parser:shouldParseCode:
parser:shouldParseCodeAsContainer:
parserDidCancel:
parserSuccess
path
pathExtension
pathForResourceFileOrFolder:
pathWithComponents:
payloadDownloadPathOverride
pendingBackgroundTasksData
pendingChanges
pendingChangesCoordinator
performBlockAfterDeviceSetup:
performDatabaseTransactionWithBlock:
performImport:fromSource:withProgressBlock:completionHandler:
performInitialLibraryUpdate
performLibraryAnalysisFromResponse:withCompletionHandler:
performLibraryAnalysisWithCompletionHandler:
performRemoteRequestOperationWithExecutionContext:completionHandler:
performRequestOnOperationQueue:withCompletionHandler:
performRequestWithCompletionHandler:
performRequestWithResponseHandler:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performSubscriptionStatusRequest:forUniqueIdentifier:
performSubscriptionStatusRequest:withCompletionHandler:
performSubscriptionStatusRequest:withStatusHandler:
performTransactionWithBlock:
performUpdate
performUpdateWithClientIdentity:error:
performWithResponseHandler:
persistent
persistentID
personalizedContainerID
phase
pinnedOnly
playActivityEvents
playCount
playDataBatchIntervalInMinutes
playbackFormatPreference
playlistCloudIDs
playlistGlobalID
playlistPersistentID
playlistSagaID
playlistShareURL
playlistVersionHash
postNotificationName:object:userInfo:
powerAssertionIdentifier
powerEventBeginName
powerEventEndName
powerEventPayload
predicateMatchingPredicates:
predicateWithProperty:
predicateWithProperty:equalToInt64:
predicateWithProperty:equalToInteger:
predicateWithProperty:equalToValue:
predicateWithProperty:mask:value:
predicateWithProperty:value:comparison:
predicateWithProperty:values:
predictionFromFeatures:error:
preferredVideoQuality
prefetchSKDs
presentWithCompletion:
priority
privacyAcknowledgementPolicy
privacyAcknowledgementRequiredForIdentifier:
privacyAcknowledgementRequiredForMedia
privacyAcknowledgementRequiredForMusic
privacyConsciousDescription
privacyConsciousDictionaryRepresentation
processAddedItems:
processDAAPFileAtURL:
processIdentifier
processInfo
processKeyWithIdentifier:
processPendingChangesUsingLibrary:
processPendingKeyInvalidations
processedItemCount
progress
prohibitArtworkPrefetch
prohibitLibraryUpload
propertyListObjectWithPlayActivityEvent:
propertyListRepresentation
propertyListWithData:options:format:error:
propertySetWithProperties:
providedAudioQuality
publicToken
publishPlaylistWithSagaID:clientIdentity:completionHandler:
publishPlaylistWithSagaID:configuration:completion:
purchaseClientIdentifier
purchaseTokens
purchaserAccountID
pushNotificationController
pushNotificationState
qualityOfService
queryFilter
queryFilterPercentEscaped
queryItemWithName:value:
queryStoreIDs
queryWithLibrary:predicate:
queryWithLibrary:predicate:usingSections:
queue
radioAdamID
raise
raise:format:
rangeOfString:
rePinCollectionsForClasses:configuration:
readFrom:
reason
reasonHintType
recoId
recommendationData
refreshEnhancedAudioSharedKeys
refreshSharedKeys
refreshSubscriptionUsingRequestContext:withCompletionHandler:
registerObserver:
registrationStateForAccountDSID:
releaseDate
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
remoteRequestOperation
removeAllCachedContentTasteResponses
removeAllObjects
removeAllPendingChanges
removeAllPendingChangesWithCompletion:
removeCachedContentTasteResponseForConnectionConfiguration:
removeCharactersInString:
removeContentTasteOperationsForConnectionConfiguration:
removeCookiesWithProperties:
removeFromRunLoop:forMode:
removeItemAtPath:error:
removeItemAtURL:error:
removeItemsWithFamilyAccountID:purchaserAccountID:downloaderAccountID:
removeItemsWithSagaIDs:clientIdentity:completionHandler:
removeItemsWithSagaIDs:configuration:completion:
removeJaliscoLibraryForConfiguration:completion:
removeKeyForIdentifier:
removeLastObject
removeLibraryWithClientIdentity:completion:
removeMessageEntryWithIdentifier:forBundleIdentifier:completion:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectsInArray:
removeObserver:forKeyPath:
removeObserver:forKeyPath:context:
removeObserver:name:object:
removeOrphanedCollectionsInLibrary:usingConnection:
removePendingAddedItemsForPermanentlyFailedOperation
removePendingChanges
removePlayActivityEvents:returningError:
removePlaylistsWithSagaIDs:clientIdentity:completionHandler:
removePlaylistsWithSagaIDs:configuration:completion:
removeSource:usingConnection:withCompletionHandler:
removeSource:withCompletionHandler:
removeSourcePurchaseHistoryForMusicTracks
removeTracksWithPersistentIDs:fromSource:usingConnection:withCompletionHandler:
renewalDate
repeatPlayMode
replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:
requestCapabilitiesWithPrivacyPromptPolicy:completionHandler:
requestDeveloperTokenWithOptions:clientInfo:completionHandler:
requestItem
requestMusicKitTokensWithOptions:clientInfo:completionHandler:
requestPersonalizationStyle
requestReason
requestStorefrontCountryCodeWithCompletionHandler:
requestStorefrontIdentifierWithCompletionHandler:
requestUserTokenForDeveloperToken:options:clientInfo:completionHandler:
requestWithDatabaseID:
requestWithDatabaseID:containerID:
requestWithDatabaseID:containerIDs:
requestWithDatabaseID:containerIDs:properties:
requestWithDatabaseID:databaseRevision:adamID:containerID:referralAlbumAdamID:referralPlaylistGlobalID:
requestWithDatabaseID:databaseRevision:adamID:referralAlbumAdamID:referralPlaylistGlobalID:
requestWithDatabaseID:databaseRevision:addToPlaylistBehavior:
requestWithDatabaseID:databaseRevision:containerID:trackList:properties:
requestWithDatabaseID:databaseRevision:opaqueID:bundleID:
requestWithDatabaseID:databaseRevision:opaqueID:bundleID:containerID:
requestWithDatabaseID:databaseRevision:playlistGlobalID:
requestWithDatabaseID:databaseRevision:playlistProperties:trackList:
requestWithDatabaseID:databaseRevision:playlistProperties:trackList:requestingBundleID:
requestWithDatabaseID:databaseRevision:sagaID:containerID:
requestWithDatabaseID:itemID:
requestWithDatabaseID:itemIDs:
requestWithDatabaseID:itemIDs:properties:useLongIDs:
requestWithDatabaseID:itemIDs:useLongIDs:
requestWithDatabaseID:metadataFilter:queryFilter:purchaseTokens:includeHiddenItems:
requestWithDatabaseID:metadataFilter:queryFilter:purchaseTokens:includeHiddenItems:includePreorders:
requestWithDatabaseID:paginationToken:
requestWithDatabaseID:playlistName:seedItemIDs:itemIDs:
requestWithDatabaseID:seedID:numberOfItems:
requestWithDatabaseRevision:
requestWithURL:cachePolicy:timeoutInterval:
requestingBundleID
requestingBundleIdentifier
requestingBundleVersion
resourceSpecifier
respondsToSelector:
response
responseCode
responseData
responseDataDestinationFileURL
responseDataFileURL
responseHeaderFields
responseModel
responseRevisionID
responseWithCode:headerFields:data:MIMEType:error:
responseWithResponse:
restoredStatedWithFallbackAccounts:
resume
retain
retainCount
revisionTrackingCode
revokeMusicKitUserTokensForUserIdentity:withCompletion:
rootArtworkCacheDirectory
sagaAccountID
sagaCloudAddToPlaylistBehavior
sagaCloudLibraryCUID
sagaCloudLibraryTroveID
sagaDatabaseUserVersion
sagaEnabledOnDevice
sagaLastItemPlayDataUploadDate
sagaLastKnownActiveLockerAccountDSID
sagaLastLibraryUpdateTime
sagaLastPlaylistPlayDataUploadDate
sagaLastSubscribedContainersUpdateTime
sagaNeedsFullUpdateAfterNextUpdate
sagaOnDiskDatabaseRevision
sagaPrefersToMergeWithCloudLibrary
sagaServerRevision
sagaUpdatedSubscribedPlaylistIDs
sampleRate
save
saveCookies:forURL:userIdentifier:
scheduleBackgroundTaskToUpdateLibraryType:
scheduleBackgroundUpdateType:forConfiguration:
scheduleInRunLoop:forMode:
scheduleJaliscoMediaDeferredPushUpate
scheduleJaliscoMediaPeriodicPoll
scheduleRecommendationsRefreshTimer
scheduleSagaDeferredPushUpate
scheduleTaskOfType:forConfiguration:
score
sdk_addItemWithSagaID:toPlaylistWithPersistentID:configuration:completion:
sdk_addStoreItemWithOpaqueID:configuration:completion:
sdk_addStoreItemWithOpaqueID:toPlaylistWithPersistentID:configuration:completion:
sdk_createPlaylistWithPersistentID:properties:trackList:configuration:completion:
sdk_setPlaylistProperties:trackList:forPlaylistPersistentID:configuration:completion:
secondsFromGMT
self
sendProtobuf:toDestinations:priority:options:identifier:error:
sendRequest:withResponseHandler:
serialQueue
server
serverCorrelationKey
serverEnvironment
serverNotificationsManager
serverOperationsManager
serverRevision
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:sentBytes:totalBytes:
service:account:incomingData:fromID:context:
service:account:incomingMessage:fromID:context:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:receivedGroupSessionParticipantDataUpdate:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:activeAccountsChanged:
service:connectedDevicesChanged:
service:devicesChanged:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:linkedDevicesChanged:
service:nearbyDevicesChanged:
serviceAllowedTrafficClassifiersDidReset:
serviceInterface
sessionWithConfiguration:
setAPNSToken:
setAccountManager:
setActionType:
setActive:
setActiveConfiguration:
setActiveConfigurationDSID:
setActiveConnections:
setActiveLocker:
setActiveWatchKitUser:
setAdamID:
setAdamIDToSagaIDMap:
setAdamId:
setAddToPlaylistBehavior:
setAddedItems:
setAdditionalHTTPCookies:
setAgeVerificationRequired:
setAlbumArtistPersistentIDsToUpdate:
setAlbumMetadataDescriptor:
setAlbumProperties:forAlbumPersistentID:configuration:completion:
setAlbumProperties:forItemsWithAlbumPersistentID:clientIdentity:completionHandler:
setAlertMessage:
setAllArtistImagesMapURL:
setAllGeniusPlaylistPropertiesWithML3ContainerProperties:
setAllGeniusTrackPropertiesWithML3TrackProperties:
setAllML3ContainerPropertiesWithGeniusPlaylistProperties:
setAllML3TrackPropertiesWithGeniusTrackProperties:
setAllowNoisyAuthPrompt:
setAllowedRetryCount:
setAllowsCellularAccess:
setAllowsCellularData:
setAllowsExpiredBags:
setAllowsFallbackToExpiredStatus:
setAllowsFallbackToStatusNeedingReload:
setAlternateButtonTitle:
setAlternateDSID:
setAnisetteVersion:
setArtistContents:
setArtistMetadataDescriptor:
setArtistNameLibraryMatchURL:
setArtworkDownloadAccessQueue:
setArtworkDownloadOperationQueue:
setArtworkDownloadSession:
setArtworkDownloadWatchdog:
setArtworkImporter:
setArtworkInfoDictionaries:
setArtworkURL:
setAssetFileSize:
setAssetPrefetchStrategy:
setAssetURL:
setAsynchronousRequestsAccessQueue:
setAuthenticateFailureCode:
setAuthenticationProvider:
setAuthor:
setAutomaticDownloadsEnabled:
setBagProfile:
setBagProfileVersion:
setBaseURL:
setBodyData:
setBooks:
setBulkArtistNameLibraryMatchBatchSize:
setBulkArtistNameLibraryMatchURL:
setCachedResponse:
setCancelOnHTTPErrors:
setCarousel:
setCarrierBundleDeviceID:
setCarrierBundleProvisioningStyle:
setCatalogContents:
setCenter:
setClasses:forSelector:argumentIndex:ofReply:
setClickEvent:
setClientIdentifier:
setClientIdentity:
setClientInfo:
setClientType:
setClientVersion:
setCloudAddToPlaylistBehavior:forConfiguration:completion:
setCloudFilteringType:
setCloudID:
setCloudLibraryStateReason:
setCloudLibrarySyncStatus:
setCode:
setCodeMap:
setComparisonType:
setCompletionBlock:
setCompletionHandler:
setConfiguration:
setConnection:
setConnectionGroup:
setConnectionQueue:
setContainerCloudID:
setContentFeatures:
setContentTaste:forAlbumStoreID:configuration:withCompletionHandler:
setContentTaste:forMediaItem:storeIdentifier:configuration:timeStamp:withCompletionHandler:
setContentTaste:forPlaylistGlobalID:configuration:withCompletionHandler:
setContentTasteItem:
setContentTasteItems:
setContentTasteType:
setCookies:
setCuid:
setCumulativePlayCount:
setCumulativeSkipCount:
setCurrentDatabaseRevision:
setCurrentParsingBook:
setCurrentStoreFrontID:
setCurrentUpdateOperation:
setDataType:
setDatabaseRevision:
setDateFormat:
setDatePurchased:
setDefaultButtonTitle:
setDelegate:
setDeleteDB:
setDeveloperToken:
setDeviceGUID:
setDisableActiveLockerAccount:
setDomain:
setDownloadManager:
setDsid:
setEnableReason:
setEndDate:
setError:
setEventType:
setExpirationDate:
setExportedInterface:
setExportedObject:
setFailedToConnect:
setFilteringDisabled:
setFirstName:
setFollowupUpdateOpertion:
setForceModalAlertAppearance:
setGenre:
setGetResultsRequest:
setGlobalIDToSagaIDMap:
setGlobalPlaylistID:
setGlobalPresentationPolicyGroup:
setHTTPBody:
setHTTPMethod:
setHTTPShouldUsePipelining:
setHasAdamId:
setHasAddToPlaylistBehavior:
setHasArtistAndAlbumData:
setHasCanonicalId:
setHasCloseButton:
setHasCode:
setHasContentType:
setHasIsExplicit:
setHasPhase:
setHasReleaseDate:
setHasShouldIgnoreDeveloperTokenCache:
setHasShouldIgnoreUserTokenCache:
setHavePendingOperationToReloadSecondaryAccountLibraries:
setHour:
setICloudPersonID:
setIdentifier:
setIdentity:
setIdentityStore:
setIgnoreAccountChanges:
setIgnoreMinRefreshInterval:
setIgnoreSystemFilterPredicates:
setImporter:
setImpression:
setImpressionEvent:
setImpressionType:
setInitialImport:
setInteger:forKey:
setInteractionLevel:
setInternalDefaults:
setInterruptionHandler:
setInvalidationHandler:
setIsActive:
setIsExplicit:
setIsExplicitUserAction:
setItemIDs:
setItemIdentifiers:
setItemKind:
setItemProperties:
setItemProperties:forPurchaseHistoryID:clientIdentity:completionHandler:
setItemProperties:forPurchaseHistoryID:configuration:completion:
setItemProperties:forSagaID:clientIdentity:completionHandler:
setItemProperties:forSagaID:configuration:completion:
setItfe:
setJaliscoAccountID:
setJaliscoHasCloudGeniusData:
setJaliscoIsMusicGeniusUserEnabled:
setJaliscoLastLibraryUpdateTime:
setJaliscoLastSupportedMediaKinds:
setJaliscoOnDiskDatabaseRevision:
setKeyProfile:
setKeyServerProtocolType:
setKnownAccountDSIDs:
setKnownActiveAccountDSID:
setLabel:
setLastError:
setLastKnownExplicitContentAllowed:
setLastKnownLocalStoreAccountProperties:
setLastKnownMusicSubscriptionType:
setLastName:
setLastPlayedDate:
setLastUpdatedDate:
setLibraryAddedDate:
setLibraryAuthTokenStatus:
setLibraryBagKey:
setLibraryIdentifier:
setLibraryManagementPolicy:
setLightweightSubscriptionStatus:
setLocalNotification:
setLocale:
setLocalizedDescription:
setLoginRequestInFlight:
setLyricsInfoDictionaries:
setMaxRetryCount:
setMaximumDisplays:
setMediaKinds:
setMediaLibraryAccessApplicationIdentifiersWithTCCAcceptanceDates:
setMediaType:
setMergeToCloudLibraryPreference:
setMessage:
setMessageRemovalPolicy:
setMethod:
setMinute:
setModel:
setMonth:
setMusic:
setMutableCloudIDToLyricsTokenMap:
setName:
setNetworkActivityIndicatorVisible:
setNotification:
setNotificationCategories:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKeyedSubscript:
setOfflineLeaseStopNonceURL:
setOfflineLeaseStopURL:
setOpaqueID:
setOperationQueue:
setPageId:
setPageType:
setParserSuccess:
setPendingBackgroundTasksData:
setPendingMatch:
setPercentEncodedQueryItems:
setPersonalizationStyle:
setPhase:
setPinnedOnly:
setPlayActivityEvents:
setPlayCount:
setPlaylistPersistentID:
setPlaylistProperties:trackList:forPlaylistPersistentID:clientIdentity:completionHandler:
setPlaylistProperties:trackList:forPlaylistPersistentID:clientIdentity:requestingBundleID:completionHandler:
setPlaylistProperties:trackList:forPlaylistPersistentID:configuration:completion:
setPlaylistsAreLibraryOwnedContent:
setPowerAssertionIdentifier:
setPowerEventBeginName:
setPowerEventEndName:
setPowerEventPayload:
setPreferredVideoQuality:
setPreferredVideoQuality:forConfiguration:completion:
setPriority:
setPrivacyAcknowledgementPolicy:
setPrivacyContext:
setPrivateDelegate:
setProgress:
setProhibitArtworkPrefetch:
setProhibitLibraryUpload:
setProtocolVersion:
setPurchaseHistoryID:
setPushEnvironment:
setPushNotificationState:
setQualityOfService:
setQueryStoreIDs:
setQueue:
setQueuePriority:
setReason:
setRecoAlgoId:
setRecoId:
setRedownloadParameters:
setRegistrationState:forAccountDSID:
setRemoteObjectInterface:
setRemoveSourcePurchaseHistoryForMusicTracks:
setRequestContext:
setRequestOfflineKeys:
setRequestReason:
setRequestingBundleID:
setRequestingBundleIdentifier:
setRequestingBundleVersion:
setRequiresDelegate:
setResponseDataDestinationFileURL:
setResponseDataFileURL:
setResponseRevisionID:
setRule:
setRuleOperator:
setSagaAccountID:
setSagaCloudAddToPlaylistBehavior:
setSagaCloudLibraryCUID:
setSagaCloudLibraryTroveID:
setSagaDatabaseUserVersion:
setSagaEnabledOnDevice:
setSagaLastItemPlayDataUploadDate:
setSagaLastKnownActiveLockerAccountDSID:
setSagaLastLibraryUpdateTime:
setSagaLastPlaylistPlayDataUploadDate:
setSagaLastSubscribedContainersUpdateTime:
setSagaNeedsFullUpdateAfterNextUpdate:
setSagaOnDiskDatabaseRevision:
setSagaPrefersToMergeWithCloudLibrary:
setServerRevision:
setSetupAssistantComplete:
setSetupCompleted:
setShouldBypassEnforcementOfPrivacyAcknowledgement:
setShouldDownloadResources:
setShouldExcludeFromBackgroundRefresh:
setShouldIgnoreCache:
setShouldIgnoreDeveloperTokenCache:
setShouldIgnoreUserTokenCache:
setShouldParseMetadata:
setShouldReturnLastKnownStatusOnly:
setShouldUseMescalSigning:
setSkipCount:
setSongMetadataDescriptor:
setStartDate:
setStartupSequenceCompleted:
setState:
setStatus:
setStoreAccountID:
setStoreDialogResponseHandler:
setStoreID:
setStoreRequestContext:
setStorefrontIdentifier:
setSubscriptionStatus:
setSubtitle:
setSupportedConfigurations:
setSupportedConfigurationsDSIDs:
setSupportsAutomaticEnablingiCloudMusicLibrary:
setSuspended:
setTargetId:
setTargetType:
setTaskScheduler:
setTimeZone:
setTimeoutCallback:
setTimeoutInterval:
setTitle:
setToken:
setTokenCollection:
setTracksAreLibraryOwnedContent:
setTriggerCondition:
setTriggerValue:
setTroveID:
setTv:
setType:
setUnderlyingConnection:
setUnderlyingQueue:
setUniqueAlbums:
setUpdateActionTimeStamp:
setUpdateCompletionBlock:
setUpdateIntervalSeconds:
setUpdateLibraryOperation:
setUpdateProgress:forLibraryType:
setUpdateRequest:
setUpdateRequired:
setUploadLibraryRequest:
setUploadResponseStatus:
setUserArtworkToken:
setUserDefaults:
setUserRating:
setUserStatesCache:
setUserToken:
setUsername:
setUsesFallbackCache:
setUsesListeningHistory:
setValue:
setValue:forArgument:
setValue:forDatabaseProperty:
setValue:forHTTPHeaderField:
setValue:forKey:
setValue:forProperty:
setValueTypeMap:
setValues:count:
setValues:forProperties:
setValues:forProperties:forEntityPersistentIDs:inLibrary:usingConnection:
setValues:forProperties:usingConnection:
setVerificationInteractionLevel:
setVppOrganizationDisplayName:
setVppOrganizationID:
setWantsNotificationResponsesDelivered
setWatchdog:
setWithArray:
setWithCapacity:
setWithObject:
setXpab:
setYear:
settingsSwitches
setupCompleted
setupHandlersWithAccountStateChange:
setupInitialJaliscoPoolingForConfiguration:
setupInitialSagaPoolingForConfiguration:
sharedActivityGroupSizeCurrent
sharedActivityGroupSizeMax
sharedBagMonitor
sharedBagProvider
sharedCache
sharedCloudContentTasteResponseCacheManager
sharedConnection
sharedContainerPropertyInfo
sharedContentTasteRequestListener
sharedController
sharedCookieStore
sharedInstance
sharedItemPropertyInfo
sharedKeySetForKeys:
sharedLibraryRecommendationController
sharedManager
sharedMediaLibraryService
sharedMonitor
sharedMonitorForIdentity:
sharedMusicSubscriptionStatusServiceListener
sharedPrivacyInfo
sharedPrivacyInfoForUserIdentity:
sharedProvider
sharedRemoteRequestOperationExecutionServiceListener
sharedRestrictionsMonitor
sharedSecurityInfo
sharedService
sharedSetupOperation
sharedStatusController
sharedTaskManager
shouldAllowDataForCellularNetworkTypes
shouldExcludeFromBackgroundRefresh
shouldForceLibraryRecommendationAnalysis
shouldHandleNotification:
shouldHandleNotificationResponse:
shouldIgnoreUserTokenCache
shouldIncludeMediaKindSongForJaliscoImport
shouldParseMetadata
shouldProcessSpecificArtists
shouldProhibitMusicActionForCurrentNetworkConditions
shouldProhibitMusicActionForCurrentNetworkConditionsWithCompletion:
shouldProhibitStoreAppsActionForCurrentNetworkConditions
shouldProhibitStoreAppsActionForCurrentNetworkConditionsWithCompletion:
shouldProhibitVideosActionForCurrentNetworkConditions
shouldProhibitVideosActionForCurrentNetworkConditionsWithCompletion:
shouldReduceLibraryRecommendationsXPCInterval
shouldRestart
shouldTreatInitialSagaImportAsFailed
shouldTreatSagaAddComputerCallAsFailed
shouldTreatSubscriptionStatusAsExpired
shouldTreatSubscriptionStatusCheckAsIncomplete
shouldUseMescalSigning
sigtermSource
sizeInfo
skipCount
snapshotWithDomain:type:subType:context:triggerThresholdValues:events:completion:
songMetadataDescriptor
sortJaliscoLastSupportedMediaKinds
sortedArrayUsingComparator:
sourceType
specificAccountWithDSID:
standardDefaults
standardUserDefaults
start
startArrayForKey:
startDate
startGeniusRequestWithRetryTimeout:debugName:connectionResponseBlock:
startObservingRevocations
startPeriodicPolling
startService
startSystemService
startSystemXPCService
startingUpdateOperationForLibraryType:isInitialImport:
startupQueue
startupSequenceCompleted
state
stateChange
stateChangeFromState:toState:computation:
stateForAccounts:baseConfiguration:
stateHandle
statementWithPrefix:inParameterCount:
stationHash
stationID
status
statusCode
statusType
stop
stopObservingRevocations
stopService
stopSessionInvalidatingKeys:withCompletion:
stopSystemService
storagePolicy
storeAccountID
storeAdamID
storeFrontID
storeRequestContext
storedConfiguration
storefrontHeaderSuffix
storefrontIdentifier
storefrontIdentifierDidChange:
stringByAddingPercentEncodingWithAllowedCharacters:
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingLastPathComponent
stringByReplacingOccurrencesOfString:withString:
stringByStandardizingPath
stringForBagKey:
stringForColumnIndex:
stringForKey:
stringValue
stringWithContentsOfFile:encoding:error:
stringWithContentsOfURL:encoding:error:
stringWithFormat:
stringWithUTF8String:
subarrayWithRange:
subarraysOfSize:
subdataWithRange:
subscribedPlaylistCloudIDs
subscriptionAdamID
subscriptionStatus
subtitle
superclass
supportedConfigurations
supportedConfigurationsChanged
supportedConfigurationsDSIDs
supportedMediaKinds
supportsAccountlessHandling
supportsAutomaticEnablingiCloudMusicLibrary
supportsSecureCoding
supportsSideLoadedMediaContent
syncMessagesWithCompletion:
synchronizeWithCompletionHandler:
systemReleaseType
systemServiceWithRequestContext:
systemUptime
targetedAudioQuality
taskScheduler
taskWithType:configuration:
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timeZone
timeZoneForSecondsFromGMT:
timeZoneWithAbbreviation:
timedMetadata
title
token
tokenIdentitifer
tokenResult
totalItemCount
trackData
trackForeignPersistentID
trackInfo
type
unarchivedObjectOfClasses:fromData:error:
underlyingConnection
unfavoriteAlbumWithCloudLibraryID:time:completionHandler:
unfavoriteAlbumWithCloudLibraryID:time:configuration:completionHandler:
unfavoriteArtistWithCloudLibraryID:time:completionHandler:
unfavoriteArtistWithCloudLibraryID:time:configuration:completionHandler:
unfavoriteEntityWithSagaID:entityType:time:completionHandler:
unfavoriteEntityWithSagaID:entityType:time:configuration:completionHandler:
unfavoriteEntityWithStoreID:entityType:time:completionHandler:
unfavoriteEntityWithStoreID:entityType:time:configuration:completionHandler:
unfavoritePlaylistWithGlobalID:time:completionHandler:
unfavoritePlaylistWithGlobalID:time:configuration:completionHandler:
uniqueAlbums
uniqueDatesWithAddedContent
uniqueSongs
universalStore
unregisterObserver:
unrestrictedAllItemsQueryWithlibrary:predicate:orderingTerms:
unrestrictedQueryWithLibrary:predicate:orderingTerms:
unscheduleJaliscoMediaDeferredPushUpate
unscheduleJaliscoMediaPeriodicPoll
unsignedCharValue
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsignedLongValue
updateActionTimeStamp
updateArtistHeroImagesForArtistsAddedSinceLastUpdateUsingClientIdentity:
updateArtistHeroImagesForConfiguration:
updateArtistHeroImagesWithClientIdentity:
updateBaseCacheKey
updateBestArtworkTokenForEntityPersistentID:entityType:artworkType:retrievalTime:preserveExistingAvailableToken:usingConnection:
updateBestArtworkTokenForEntityPersistentID:entityType:artworkType:retrievalTime:usingConnection:
updateCloudLibraryProgressWithCompletion:
updateCompletionBlock
updateContentTasteForConnectionConfiguration:invalidateLocalCache:withCompletionHandler:
updateContentTasteForItem:invalidatingLocalCache:completionHandler:
updateContentTasteForMediaItemsAndInvalidateLocalCache:configuration:withCompletionHandler:
updateContentTasteForReason:invalidatingLocalCache:completionHandler:
updateHandlersWithAccountStateChange:
updateIntervalSeconds
updateItemPlayDataWithClientIdentity:completionHandler:
updateJaliscoExcludedMediaKindsWith:excludingMediaKindsInSet:
updateJaliscoLibraryByRemovingMediaKind:withClientIdentity:completionHandler:
updateJaliscoLibraryWithClientIdentity:byAddingMediaKind:completionHandler:
updateJaliscoLibraryWithClientIdentity:forReason:completionHandler:
updateJaliscoLibraryWithReason:forConfiguration:completion:
updateLibraryFromRevision:toRevision:withResponse:clientIdentity:
updateLibraryOperation
updateLibraryQueue
updateLibraryWithClientIdentity:reason:allowNoisyAuthPrompt:isExplicitUserAction:completionHandler:
updateLibraryWithClientIdentity:reason:completionHandler:
updateLibraryWithReason:completionHandler:
updateMessageEntry:completion:
updatePinnedSubscribedPlaylistsWithConfiguration:completion:
updatePlaylistPlayDataWithClientIdentity:completionHandler:
updateProgress
updateProgressForLibraryType:completionHandler:
updateRequest
updateRequired
updateSagaLibraryWithClientIdentity:forReason:allowNoisyAuthPrompt:isExplicitUserAction:completionHandler:
updateSagaLibraryWithReason:forConfiguration:completion:
updateState
updateSubscribedPlaylistsWithSagaIDs:ignoreMinRefreshInterval:configuration:completion:
updateSubscribedPlaylistsWithSagaIDs:ignoreMinRefreshInterval:requestReason:pinnedOnly:clientIdentity:completionHandler:
updateURLMappingsWithCompletion:
uploadArtworkForPlaylistWithPersistentID:clientIdentity:completionHandler:
uploadArtworkForPlaylistWithPersistentID:configuration:completion:
uploadCloudItemPropertiesForConfiguration:completion:
uploadCloudPlaylistPropertiesForConfiguration:completion:
uploadItemPropertiesWithClientIdentity:minimumTimeInterval:
uploadLibraryRequest
uploadResponseStatus
uploadingLibraryIsSupported
urlForBagKey:
urlRequest
urlResponse
useLongIDs
userArtworkToken
userDefaults
userIdentitiesForAllStoreAccountsWithError:
userIdentitiesForManageableAccountsWithError:
userIdentity
userIdentityStore
userInfo
userMonitorWithUserIdentity:fromUserIdentityStore:
userNotificationCenter:didChangeSettings:
userNotificationCenter:didOpenApplicationForResponse:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationController
userRating
userToken
username
validateExpirationForBundleIdentifier:withReplyBlock:
value
valueAtIndex:
valueForDatabaseProperty:
valueForEntitlement:
valueForHTTPHeaderField:
valueForKey:
valueForKeyPath:
valueForProperty:
valueTypeForProperty:
valueTypeMap
values
valuesCount
verificationInteractionLevel
vocalAttenuationAvailability
vocalAttenuationDuration
waitForAllKeysToProcess
waitForLibraryUpdate
waitUntilAllOperationsAreFinished
waitUntilFinished
watchdog
willChangeValueForKey:
write:maxLength:
writeData:
writeData:withCode:
writePropertyList:toStream:format:options:error:
writeSInt64:withCode:
writeString:withCode:
writeTo:
writeToFile:atomically:
writeToFile:options:error:
writeToURL:atomically:
writeToURL:error:
writeUInt32:withCode:
writeUInt64:withCode:
writeUInt8:withCode:
xpcListeners
zone
v32@0:8@16@24
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8q16
v28@0:8q16B24
v32@0:8q16@24
v28@0:8f16q20
v32@0:8q16@"NSDictionary"24
v24@0:8@16
v24@0:8@"ICEnvironmentMonitor"16
@24@0:8@16
v24@0:8@?16
v16@0:8
v48@0:8@16B24q28B36@?40
v40@0:8@16q24@?32
v48@0:8@16q24B32B36@?40
v36@0:8@16q24i32
v32@0:8q16@?24
v40@0:8Q16@24@?32
v24@0:8Q16
v56@0:8q16@24@32@40@?48
v64@0:8q16@24@32@40@48@?56
v40@0:8@16@24@?32
v40@0:8q16@24@?32
v56@0:8q16@24q32@40@?48
v48@0:8Q16q24@32@?40
v56@0:8@16q24@32@40@?48
v56@0:8Q16q24@32@40@?48
v48@0:8q16@24@32@?40
v48@0:8@16@24@32@?40
v56@0:8@16@24q32@40@?48
v64@0:8@16@24q32@40@48@?56
v48@0:8@16Q24@32@?40
v48@0:8@16q24@32@?40
v32@0:8@16@?24
v56@0:8@16B24q28B36@40@?48
v48@0:8q16q24@32@?40
v28@0:8B16@?20
q24@0:8q16
q28@0:8@16B24
q24@0:8@16
v48@0:8@16@24q32@?40
v52@0:8@16@24B32q36@?44
v48@0:8@16B24B28B32B36@?40
v36@0:8@16B24@?28
@32@0:8@16@24
@"SagaRequestHandler"
@"JaliscoRequestHandler"
@"NSObject<OS_dispatch_queue>"
@"NSOperationQueue"
@"NSMutableDictionary"
v20@0:8B16
I16@0:8
v20@0:8I16
C16@0:8
v20@0:8C16
@20@0:8I16
v32@0:8@16q24
B28@0:8@16I24
v32@0:8@16I24I28
v40@0:8@16I24*28I36
v28@0:8@16I24
v24@0:8@"DKDAAPParser"16
v32@0:8@"DKDAAPParser"16q24
v32@0:8@"DKDAAPParser"16@"NSError"24
B28@0:8@"DKDAAPParser"16I24
v32@0:8@"DKDAAPParser"16I24I28
v40@0:8@"DKDAAPParser"16I24*28I36
v28@0:8@"DKDAAPParser"16I24
@32@0:8Q16@24
@48@0:8@16@24Q32@40
@"NSDictionary"
@56@0:8@16@24q32@40@48
@56@0:8@16q24@32@40@48
@40@0:8I16I20@24@32
@"ICCloudItemIDList"
@64@0:8@16q24@32@40@48@56
@"NSString"
@32@0:8I16@20C28
@28@0:8@16C24
@24@0:8I16I20
@28@0:8I16@20
@40@0:8@16@24@32
@"ICURLSession"
q16@0:8
@"NSUserDefaults"
@"ICUserIdentity"
@"ICUserIdentityStore"
@"ICConnectionConfiguration"
@"ML3MusicLibrary"
@"<ICDBackgroundTaskScheduling>"
@"NSNumber"
@"NSDate"
@36@0:8I16@20@28
B32@0:8@16^@24
@"NSArray"
@"CloudLibraryConnection"
@"NSURL"
@"NSMutableArray"
v36@0:8B16@20@28
@"<ICDServerNotificationsManagerDelegate>"
@52@0:8@16@24B32q36@44
B28@0:8@16B24
@40@0:8@16@24^@32
v24@0:8@?<v@?@"NSUUID">16
v32@0:8@"NSUUID"16@?<v@?>24
v32@0:8q16@?<v@?Q@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
v40@0:8Q16@"ICClientInfo"24@?<v@?@"NSString"@"NSError">32
v48@0:8@"NSString"16Q24@"ICClientInfo"32@?<v@?@"NSString"@"NSError">40
v40@0:8Q16@"ICClientInfo"24@?<v@?@"ICMusicKitTokensResponse"@"NSError">32
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v48@0:8Q16@24q32@40
@"<NSCopying>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@56@0:8@16@24q32q40@48
@48@0:8@16@24@32@40
@88@0:8@16@24q32q40@48@56@64q72@80
v24@0:8@?<v@?B>16
@32@0:8I16@20B28
@28@0:8@16B24
v28@0:8B16@?<v@?@"NSArray"@"NSError">20
v24@0:8@"NSArray"16
v32@0:8@"ICDMediaUserStateCenterServerNotificationsManager"16@"NSNotification"24
Q24@0:8@16
@"NSObject<OS_dispatch_semaphore>"
@"ICDMediaUserStateCenterServerNotificationsManager"
@"NSObject<OS_os_log>"16@0:8
v20@0:8f16
v36@0:8I16@20@?28
f16@0:8
@32@0:8@16Q24
@40@0:8@16@24Q32
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
v32@0:8@"UNUserNotificationCenter"16@"UNNotificationSettings"24
v32@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24
@"UNUserNotificationCenter"
@44@0:8I16I20I24@28@36
@"ICPlayActivityTable"
@32@0:8q16@24
B32@0:8@16q24
v32@0:8q16@?<v@?@"NSXPCListenerEndpoint"@"NSError">24
v24@0:8@?<v@?@"NSError">16
v32@0:8Q16@24
v44@0:8@16B24@28@?36
v56@0:8q16q24@32@40@?48
v24@0:8@"ICConnectionConfiguration"16
v40@0:8q16@"ICConnectionConfiguration"24@?<v@?@"NSError">32
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSError"B>24
v48@0:8@"ICConnectionConfiguration"16B24q28B36@?<v@?@"NSError">40
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSError">24
v32@0:8q16@?<v@?@"NSError">24
v40@0:8q16@"ICConnectionConfiguration"24@?<v@?B@"NSError">32
v32@0:8@"ICConnectionConfiguration"16@?<v@?BB>24
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSError"f>24
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSNumber"@"NSError">24
v40@0:8Q16@"ICConnectionConfiguration"24@?<v@?@"NSError">32
v32@0:8Q16@"ICConnectionConfiguration"24
v32@0:8q16@"ICConnectionConfiguration"24
v40@0:8@"NSArray"16@"ICConnectionConfiguration"24@?<v@?@"NSError"@"NSArray">32
v40@0:8Q16@"ICConnectionConfiguration"24@?<v@?@"NSArray"@"NSError">32
v64@0:8q16@"NSString"24@"NSArray"32@"NSArray"40@"ICConnectionConfiguration"48@?<v@?Q@"NSError">56
v56@0:8q16@"NSDictionary"24@"ICCloudItemIDList"32@"ICConnectionConfiguration"40@?<v@?Q@"NSError">48
v56@0:8@"NSDictionary"16@"ICCloudItemIDList"24q32@"ICConnectionConfiguration"40@?<v@?@"NSError">48
v56@0:8q16@"ICCloudAddReferral"24q32@"ICConnectionConfiguration"40@?<v@?@"NSError">48
v48@0:8q16q24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v48@0:8@"NSString"16q24@"ICConnectionConfiguration"32@?<v@?@"NSDictionary"@"NSError">40
v40@0:8q16@"ICConnectionConfiguration"24@?<v@?@"NSString"@"NSString"@"NSError">32
v40@0:8@"NSArray"16@"ICConnectionConfiguration"24@?<v@?@"NSError">32
v44@0:8@"NSArray"16B24@"ICConnectionConfiguration"28@?<v@?@"NSError">36
v48@0:8q16@"ICCloudAddReferral"24@"ICConnectionConfiguration"32@?<v@?@"NSDictionary"@"NSError">40
v40@0:8@"NSString"16@"ICConnectionConfiguration"24@?<v@?@"NSDictionary"@"NSError">32
v48@0:8@"NSDictionary"16Q24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v48@0:8@"NSDictionary"16q24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v40@0:8@"NSArray"16@"ICConnectionConfiguration"24@?<v@?@"NSArray"@"NSError">32
v56@0:8q16q24@"NSDate"32@"ICConnectionConfiguration"40@?<v@?@"NSError">48
v48@0:8@"NSString"16@"NSDate"24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v24@0:8@"ICDServerNotificationsManager"16
v32@0:8@"ICDServerNotificationsManager"16@"NSNotification"24
@40@0:8q16@24^@32
@"BaseRequestHandler"40@0:8q16@"ICConnectionConfiguration"24^@32
v28@0:8@16i24
@24@0:8q16
v48@0:8@16@24@32^v40
v28@0:8@16B24
@"ICDCloudServiceStatusMonitor"
@"ICDNetworkAvailabilityService"
@"ICDServerOperationsManager"
@"ICDServerNotificationsManager"
@"<ICDAccountManaging>"
@"<ICDHandlerCoordinating>"
@"<ICDBackgroundTaskManaging>"
@"ICDelegateAccountStoreServiceListener"
@"ICDelegationProviderService"
@"CloudPushNotificationController"
@"CloudUserNotificationController"
@"ICDMediaUserStateCenterServer<ICMediaUserStateCenterServerProtocol>"
@"ICDEnhancedAudioKeyManager"
@"NSObject<OS_dispatch_source>"
B20@0:8I16
@"MSVWatchdog"
@"DetermineArtistStoreIDLookupTypeOperation"
@"CloudArtworkImporter"
@56@0:8@16@24@32@40@48
@"NSObject<OS_tcc_identity>"
v36@0:8@16B24@28
@36@0:8I16@20C28B32
@32@0:8@16C24B28
@44@0:8I16@20@28@36
@"<ICDJaliscoSupportedMediaKindsHandler>"
@"ICMusicLibraryContentMetadataDescriptor"
@24@0:8^{_NSZone=}16
@"NSSet"
v40@0:8d16@24@?32
v48@0:8@16d24@32@?40
^f16@0:8
f24@0:8Q16
v32@0:8^f16Q24
{?="list"^f"count"Q"size"Q}
{?="actionTimestampMillis"b1"adamId"b1"createdOffsetMillis"b1"preferenceType"b1}
d16@0:8
@"NSMutableSet"
v32@0:8@?16B24B28
@?16@0:8
@"CloudPendingChangesCoordinator"
@"NSObject<OS_dispatch_group>"
@44@0:8@16@24I32@36
v32@0:8@16d24
B24@0:8^B16
v36@0:8@16i24@?28
@"SagaLibrary"
@"SagaArtworkImporter"
@"CloudUpdateLibraryOperation"
@"<ICDCloudMusicLibrarySagaUpdateTaskHelper>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSError"
@44@0:8@16@24B32q36
@52@0:8@16@24@32B40q44
@56@0:8@16@24@32B40q44B52
@36@0:8Q16@24I32
@44@0:8@16@24Q32I40
v44@0:8q16B24@28@?36
@"<ICDHandlerProviding>"
{?="shouldIgnoreDeveloperTokenCache"b1"shouldIgnoreUserTokenCache"b1}
v32@0:8@"ICMusicSubscriptionStatusRequest"16@"NSUUID"24
@"NSXPCListener"
v36@0:8q16B24@?28
@"ICContentTastePendingChangesCoordinator"
@"<ICDCloudMusicLibraryJaliscoUpdateTaskHelper>"
@"JaliscoLibrary"
@"JaliscoArtworkImporter"
@"JaliscoMediaUpdateOperation"
@"ICAppleMusicAPITokenError"
@"ICAppleMusicAPITokenCollection"
B24@0:8q16
B32@0:8q16q24
@56@0:8Q16@24@32@40@48
@"NSData"
@40@0:8@16@24q32
@"ICDAccountManagerState"
@32@0:8I16Q20I28
@56@0:8q16q24q32@40@48
@40@0:8@16q24@32
@"ICStoreRequestContext"
@"AMPMusicArtistNewContentResponse"
v40@0:8I16I20@24@?32
B40@0:8@16@24@32
@64@0:8I16I20@24@32^@40^@48^@56
@56@0:8I16I20@24@32^@40^@48
@48@0:8@16q24@32@40
@64@0:8@16@24q32@40@48@56
@24@0:8Q16
{?="adamId"b1}
@"ICMusicLibraryArtistAffinityAnalyzer"
I24@0:8@16
v36@0:8@16I24q28
@40@0:8I16@20@28B36
@36@0:8@16@24B32
@72@0:8@16@24Q32@40q48q56@64
@"ICURLRequest"
@32@0:8@16^@24
v36@0:8@"NSArray"16B24@?<v@?@"NSError">28
v32@0:8@?16@24
@24@0:8d16
B24@0:8d16
v48@0:8@16@24@32@40
v48@0:8@"ICContentKeySession"16@"NSString"24@"ICSecureKeyDeliveryResponse"32@"NSError"40
@"JaliscoLoadBooksOperation"
@"ICBook"
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v32@0:8@"ICUserIdentity"16@?<v@?@"NSError">24
@40@0:8@16@24#32
i16@0:8
v20@0:8i16
{?="code"b1"phase"b1}
@40@0:8i16i20@24@32
@48@0:8@16@24@32q40
@56@0:8@16@24@32@40q48
@20@0:8i16
i24@0:8@16
{?="adamId"b1"canonicalId"b1"releaseDate"b1"contentType"b1"isExplicit"b1}
@32@0:8q16@"<ICDBackgroundTaskScheduling>"24
v24@0:8@"ICDAccountManagerStateChange"16
v32@0:8@"ICDAccountManagerState"16@?<v@?@"BaseRequestHandler">24
v32@0:8q16@"ICDAccountManagerStateChange"24
@32@0:8@16q24
v52@0:8@16@24@32I40@44
@40@0:8@16d24@32
@48@0:8@16@24d32@40
v32@0:8@"ICRemoteRequestOperationExecutionContext"16@?<v@?@"ICRemoteRequestOperationExecutionResponse">24
I20@0:8I16
@"JaliscoImporter"
@48@0:8I16I20@24@32@40
@"ICDJaliscoMediaFilter"
v56@0:8@16q24q32@40@?48
@48@0:8@16q24q32@40
@40@0:8q16q24@32
@56@0:8@16q24q32q40@48
@56@0:8@16q24q32@40@48
v40@0:8@16@24@32
v40@0:8@"MPMediaDownloadManager"16@"NSArray"24@"NSArray"32
v32@0:8@"MPMediaDownloadManager"16@"NSArray"24
v40@0:8@"MPMediaDownloadManager"16@"NSArray"24@"NSError"32
v64@0:8Q16q24@32I40B44@48@?56
v32@0:8Q16q24
@"CloudArtworkOperationQueue"
@"MPMediaDownloadManager"
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
@"ICDCloudPushNotificationRegistrationState"
@"AMSPushHandler"
@"APSConnection"
@48@0:8I16@20@28@36B44
@52@0:8I16@20@28@36B44B48
@60@0:8I16@20@28@36B44B48@52
@56@0:8@16@24@32B40B44@48
@72@0:8q16q24@32@40@48@56I64I68
@68@0:8q16q24@32@40@48@56I64
@28@0:8I16I20C24
@24@0:8I16C20
@32@0:8@16@?24
Q48@0:8r*16Q24^{?=I*Qq}32Q40
v40@0:8r*16Q24@?32
Q32@0:8r*16Q24
@44@0:8I16r*20Q28@?36
@32@0:8r*16Q24
@40@0:8r*16Q24@?32
@36@0:8r*16I24@?28
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@"IDSService"
v24@0:8B16B20
v40@0:8r*16@24@32
v24@0:8r*16
v32@0:8r*16B24B28
@20@0:8B16
@"NSMapTable"
@48@0:8@16@24q32@40
@40@0:8@16d24o^q32
@"SagaImporter"
@"ICStoreURLRequest"
@"NSArray"16@0:8
@"ICConnectionConfiguration"16@0:8
@"ICDAccountManagerState"16@0:8
@"ICDAccountManagerStateChange"16@0:8
@"ACAccountStore"
@"ICDAccountManagerStateChange"
@"<ICDMediaUserStateCenterServerNotificationsManagerDelegate>"
@44@0:8@16B24@28@36
v40@0:8^@16^@24@32
@44@0:8@16@24Q32B40
v32@0:8^@16^@24
@36@0:8@16B24@28
v48@0:8^@16^@24@32@40
@"ICCloudContentTasteUpdateItem"
@"ICCloudContentTasteUpdateResponse"
@28@0:8@16I24
@"MLModel"
v40@0:8@16q24@32
@"NSXPCConnection"
@"ICDPrivacyPromptOperation"
@"ICURLBag"
@"ICUserIdentityProperties"
@"ICMusicSubscriptionStatusResponse"
v64@0:8q16q24q32@40@48@?56
v36@0:8B16@20@?28
v64@0:8q16q24q32@"ICConnectionConfiguration"40@"NSDate"48@?<v@?@"NSError">56
v48@0:8q16@"NSString"24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v36@0:8B16@"ICConnectionConfiguration"20@?<v@?@"NSError">28
@32@0:8Q16q24
@48@0:8@16Q24q32@40
@56@0:8@16Q24q32@40@48
@80@0:8q16q24@32@40@48q56@64I72I76
@"CloudArtistHeroImageImporter"
@48@0:8I16I20q24q32@40
@52@0:8I16I20q24I32q36@44
@36@0:8I16I20q24I32
@32@0:8I16I20@24
@68@0:8I16I20q24q32@40I48q52@60
@60@0:8I16q20q28@36q44@52
@48@0:8@16I24I28@32@40
@44@0:8I16I20@24@32I40
@32@0:8@"<ICDAccountManaging>"16@"<ICDHandlerCoordinating>"24
@"<ICDAccountManaging>"16@0:8
@"<ICDHandlerCoordinating>"16@0:8
@32@0:8q16q24
@40@0:8@16q24q32
ICDCloudLibraryIsInitialImportKey
ICDCloudLibrarySyncProgressKey
ICDCloudLibrarySagaLibraryUpdateErrorKey
ICDCloudLibraryJaliscoLibraryUpdateErrorKey
ICDCloudMusicLibraryProgressUpdateOperationStatusKey
ICDCloudMusicLibraryProgressPermanentFailureTypeKey
ICDCloudMusicLibraryProgressTemporaryFialureTypeKey
ICDCloudMusicLibraryProgressRequestReasonKey
ICDCloudMusicLibraryProgressWasInitialImportKey
ICDCloudMusicLibraryProgressWasExplicitUserActionKey
EnableCloudLibraryFailureReasonKey
AutoEnableCloudLibraryFailureReasonKey
com.apple.itunescloudd.ICDCloudMusicLibraryRequestHandler.accessQueue
com.apple.itunescloudd.ICDCloudMusicLibraryRequestHandler.calloutQueue
com.apple.itunescloudd.ICDCloudMusicLibraryRequestHandler.operationQueue
com.apple.itunescloudd.ICDCloudMusicLibraryRequestHandler.retryQueue
v20@?0@"NSError"8B16
v16@?0@"CloudAuthenticateOperation"8
com.apple.amp.itunescloudd.JaliscoRequestHandler.%@.deauthenticate
com.apple.itunescloudd.ICDCloudMusicLibraryRequestHandler.jaliscoDeauthenticateOperation
ICDCloudMusicLibraryRequestHandler.m
SagaAuthenticateOperation can only return CloudLibraryOperationStatusSuccess OR CloudLibraryOperationStatusPermanentlyFailed
SagaAuthenticationBug
DuplicateSagaAuthentication
strongAuthenticateOperation
enableReason
Invalid State - We already have a valid SagaRequestHandler (enableReason=%d)
com.apple.itunescloudd.ICDCloudMusicLibraryRequestHandler.cloudAuthenticateOperation
com.apple.itunescloudd.ICDCloudMusicLibraryRequestHandler.sagaDeauthenticateOperation
Jalisco
Unknown
update
<redacted>
developerToken
JaliscoSetItemPropertyOperationPurchaseHistoryIDKey
JaliscoSetItemPropertyOperationPropertiesKey
JaliscoSetItemPropertyOperation - (purchase_history_id = %llu)
JaliscoDeauthenticateOperation
PlaybackIntent
SagaCreatePlaylistOperationPlaylistPersistentIDKey
SagaCreatePlaylistOperationProperties
SagaCreatePlaylistOperationTrackListKey
SagaSDKCreatePlaylistOperationRequestingBundleKey
SagaCreatePlaylistOperation - (playlist persistent-id = %lld)
ICDDefaultsKeyKnowAccountDSIDs
ICDDefaultsKeyKnownActiveAccountDSID
ICDDefaultsKeyPendingBackgroundTasksData
ICDDefaultsKeyLastKnownExplicitContentAllowed
ICDDefaultsKeyLastKnownMusicVideosAllowed
ICDDefaultsKeyLastKnownMusicSubscriptionType
com.apple.itunescloud.daemon
com.apple.itunescloud.daemon.internal
com.apple.%@.global.serial.queue
Implement this class property in subclasses
Implement this class property in subclasses supporting accountless handling
-init is not supported, use handlerForConfiguration: or initWithConfiguration:
<%@ %p: [dsid=%@, active=%d]>
MLCloudNeedsContainerRefetch
iTunes_Control/iTunes/LatestCloudPlayCountChanges.plist
iTunes_Control/iTunes/LatestCloudPlayDateChanges.plist
iTunes_Control/iTunes/LatestCloudSkipCountChanges.plist
iTunes_Control/iTunes/LatestCloudPlayDataChangesDate.plist
MLResetCollectionsOnNextImport
/var/mobile/Media/Purchases
.plist
itemId
com.apple.iTunesStore.downloadInfo
mediaAssetFilename
UPDATE item_store SET store_item_id = ? WHERE item_pid IN (SELECT item_pid FROM item_extra WHERE location = ?)
UPDATE container SET is_src_remote = 2 WHERE cloud_is_subscribed AND is_src_remote = 0
SELECT COUNT() FROM artwork_token WHERE artwork_type = ? AND artwork_token LIKE '%%0x0%%'
MLArtistHeroImageImportDate
DELETE FROM artwork_token WHERE artwork_source_type=%d AND entity_pid
MLEnableICMLConfig
MLActiveAccountDSID
MLAutoEnableICML
LibraryRecommendationArtistAffinity
v32@?0@8@"NSIndexPath"16^B24
v24@?0@"MPModelLibraryResponse"8@"NSError"16
-[ICMusicLibraryArtistAffinityAnalyzer createFeatureProviderDictionaryFromNewContentResponse:withLibraryArtistSnapshots:]
ICMusicLibraryArtistAffinityAnalyzer.m
releaseIx.count == daysWithAdds.count
releaseIx.count == albumCount.count
releaseIx.count == playCount.count
releaseIx.count == daysSinceLastPlay.count
releaseIx.count == playsPerItem.count
days_with_adds
num_albums
num_plays
days_since_last_play
plays_per_item
release_ix
MPModelLibraryRequest
Class getMPModelLibraryRequestClass(void)_block_invoke
MPModelSong
Class getMPModelSongClass(void)_block_invoke
NSString *getMPModelRelationshipSongArtist(void)
MPModelRelationshipSongArtist
MPPropertySet
Class getMPPropertySetClass(void)_block_invoke
NSString *getMPModelPropertyArtistName(void)
MPModelPropertyArtistName
NSString *getMPModelRelationshipSongAlbum(void)
MPModelRelationshipSongAlbum
NSString *getMPModelPropertyAlbumTitle(void)
MPModelPropertyAlbumTitle
NSString *getMPModelPropertySongTitle(void)
MPModelPropertySongTitle
NSString *getMPModelPropertySongPlayCount(void)
MPModelPropertySongPlayCount
NSString *getMPModelPropertySongSkipCount(void)
MPModelPropertySongSkipCount
NSString *getMPModelPropertySongLastDevicePlaybackDate(void)
MPModelPropertySongLastDevicePlaybackDate
NSString *getMPModelPropertySongLibraryAddedDate(void)
MPModelPropertySongLibraryAddedDate
NSString *getMPModelPropertySongUserRating(void)
MPModelPropertySongUserRating
persistent-id
kind
has-subscription-drm
item-name
item-id
playlist-name
playlist-id
playlist-artist-name
playlist-artist-id
artist-name
artist-id
composer-name
composer-id
genre-name
genre-id
compilation
year
duration
track-number
track-count
disc-number
disc-count
store-front-id
added-date
modified-date
purchased-date
released-date
copyright
last-played-date
has-been-played
play-count
skip-count
user-rating
album-rating
item-checked
comment
has-lyrics
lacks-cover-art
cloud-only
beats-per-minute
filename
size
sample-rate
bit-rate
format
audio-codec
audio-codec-sub-type
gapless-heuristic
gapless-encoding-drain
gapless-encoding-delay
gapless-duration
gapless-frame-resynch
normalized-volume
playlist-sort-order
playlist-sort-reversed
description
parent-id
playlist-global-id
items
data
genius-seed-tracks
contentFilter
smartInfo
isDefaultSmartPlaylist
external-vendor-identifier
external-vendor-display-name
external-vendor-container-tag
databases/%u/containers/edit
v32@?0@"NSString"8@16^B24
SagaSubscribedPlaylistUpdater.m
subscribed-containers.daap
ICDServerNotificationsManagerFamilyEventKey
ICDServerNotificationsManagerIsApplicationRegistrationKey
ICDServerNotificationsManagerApplicationRegistrationBundleIDsKey
com.apple.itunescloudd.ICDServerNotificationsManager
com.apple.mobileipod-prefsChanged
com.apple.LaunchServices.applicationRegistered
com.apple.LaunchServices.applicationUnregistered
com.apple.mobileipod.libraryimportdidfinish
com.apple.itunesstored.autodownloaddefaultschange
com.apple.purplebuddy.setupdone
UserInfo
isPlaceholder
bundleIDs
pairs
B24@?0Q8@"NSObject<OS_xpc_object>"16
NSString *getMPRestrictionsMonitorAllowsExplicitContentDidChangeNotification(void)
ICDServerNotificationsManager.m
MPRestrictionsMonitorAllowsExplicitContentDidChangeNotification
NSString *getMPRestrictionsMonitorAllowsMusicVideosDidChangeNotification(void)
MPRestrictionsMonitorAllowsMusicVideosDidChangeNotification
NSString *getMPHomeUserMonitorAllowExplicitSettingDidChangeNotification(void)
MPHomeUserMonitorAllowExplicitSettingDidChangeNotification
CloudAuthenticateOperation
Client is not allowed to request cloud service capabilities.
Client is not allowed to request storefront country code.
Client is not allowed to request storefront identifier.
Client is not allowed to request developer token.
ICDCloudServiceStatusMonitor.m
Both requestingApplicationBundleIdentifier and error are nil. This is unexpected.
Client is not allowed to request user token.
Client is not allowed to request MusicKit tokens.
Failed to fetch developer token.
com.apple.itunesstored.privacy-acknowledged
v32@?0@"ICDCloudServiceCapabilitiesRequestOperation"8Q16^B24
v16@?0@"ICURLBag"8
v32@?0@"NSUUID"8@"NSXPCConnection"16^B24
Found nil storefront identifier from local store account.
%@: Either storefrontCountryCode or finalError are expected to be non-nil at this point.
%@: Either storefrontIdentifier or error are expected to be non-nil at this point.
Failed to retrieve bundle identifier of the requesting application. The requesting application is likely missing the "%@" entitlement.
application-identifier
SagaFavoriteEntityOperationAdamIDKey
SagaFavoriteEntityOperationCloudIDKey
SagaFavoriteEntityOperationCloudAlbumIDKey
SagaFavoriteEntityOperationCloudArtistIDKey
SagaFavoriteEntityOperationGlobalPlaylistIDKey
SagaFavoriteEntityOperationTimeStampKey
SagaFavoriteEntityOperationTypeKey
SagaFavoriteEntityOperation.m
adamID != 0
entityType != ICFavoriteMediaEntityPlaylist
globalPlaylistID.length > 0
sagaID != 0
entityType == ICFavoriteMediaEntitySong || entityType == ICFavoriteMediaEntityPlaylist
albumCloudLibraryID.length > 0
artistCloudLibraryID.length > 0
UPDATE album set cloud_library_id=? where album_pid=?
UPDATE item_artist set cloud_library_id=? where item_artist_pid=?
UPDATE album_artist set cloud_library_id=? where album_artist_pid=?
update item_stats set favorite_state=1, date_favorited=0 where item_pid=?
v24@?0@8^B16
update container set favorite_state=1, date_favorited=0 where container_pid=?
UPDATE album set favorite_state=1, date_favorited=0 where album_pid=?
UPDATE item_artist set favorite_state=1, date_favorited=0 where store_id=?
UPDATE album_artist set favorite_state=1, date_favorited=0 where store_id=?
UPDATE item_artist set favorite_state=1, date_favorited=0 where cloud_library_id=?
UPDATE album_artist set favorite_state=1, date_favorited=0 where cloud_library_id=?
UPDATE item SET keep_local = ? WHERE item_pid = ? AND in_my_library = 1 AND media_type IN (?, ?)
v32@?0@8Q16^B24
databases/%u/extra_data/cloud-lyrics-info
v24@?0@"ICLightweightMusicSubscriptionStatusResponse"8@"NSError"16
v24@?0@"WLKServerConfigurationResponse"8@"NSError"16
@16@?0@"NSUUID"8
itfe
xpAb
v16@?0@"ICMusicUserStateCookies<ICMutableMusicUserStateCookies>"8
v16@?0@"ICMusicUserState<ICMutableMusicUserState>"8
v16@?0@"ICTVUserState<ICMutableTVUserState>"8
v16@?0@"ICMediaUserState<ICMutableMediaUserState>"8
@16@?0@"ICUserIdentity"8
v16@?0@"ICMediaUserState"8
v16@?0@"NSArray"8
v16@?0@"ICMusicLibraryAuthToken<ICMutableMusicLibraryAuthToken>"8
v16@?0@"ICMusicLibraryAuthTokenStatus<ICMutableMusicLibraryAuthTokenStatus>"8
v32@?0@"NSString"8@"ICLibraryAuthServiceClientTokenStatus"16^B24
v24@?0@"ICMediaUserState"8@"NSError"16
B16@?0@"ICMediaUserState"8
@16@?0@"ICMediaUserState"8
com.apple.itunescloudd.private
WLKStoredConfigurationManager
Class getWLKStoredConfigurationManagerClass(void)_block_invoke
ICDMediaUserStateCenterServer.m
void *WatchListKitLibrary(void)
WLKConfigurationManager
Class getWLKConfigurationManagerClass(void)_block_invoke
MSVHasher+Algorithms.h
Cannot obtain hash from unknown hasher algorithm
CloudLibraryStateReasonKey
JaliscoImporterErrorDomain
JaliscoImporter.m
Subclass %@ must implement -%@ defined in %@.
JaliscoImporter
Invalid parameter not satisfying: %@
com.apple.MediaServices
items.daap
includeItemFlavors
%@ %p [dsid=%@]
SagaPublishPlaylistOperation - (playlist cloud id = %llu)
com.apple.itunescloudd.usernotifications
com.apple.Music
music-notification-default
ETag
CloudLoadBulkArtworkInfoOperation.m
CloudIDs must be an array!
%@ - (item count = %lu)
databases/%u/edit
v40@?0@8q16Q24^B32
-init is not supported, use initWithPlayActivityTable
ICFlushPlayActivityEventsOperation.m
initWithPlayActivityController called with nil playActivityTable
com.apple.iTunesCloud.ICFlushPlayActivityEventsOperation.serialQueue
v24@?0@"NSArray"8B16B20
B8@?0
v24@?0@"NSURLRequest"8@"NSError"16
CloudArtworkOperationQueue.m
Only operations of type CloudArtworkImportOperation are supported
v32@?0@"CloudArtworkImportOperation"8Q16^B24
purchase history
cloud
container cloud
cloud (subscription)
container cloud (subscription)
Unknown sourceType/artworkType pair for CloudArtworkOperationQueue addOperations: %ld/%@
Failed to resolve artwork URL for %@ ID: %@
com.apple.itunescloudd.CloudArtworkOperation.bulkArtworkInfoOperation
v32@?0@"NSNumber"8@"NSMutableArray"16^B24
SagaAddPlaylistOperationPlaylistPersistentIDKey
SagaAddPlaylistOperationPlaylistNameKey
SagaAddPlaylistOperationPlaylistSeedItemIDsKey
SagaAddPlaylistOperationPlaylistItemIDsKey
SagaCreateGeniusPlaylistOperation - (playlist_persistent_id  = %lld / playlist_name = %@)
com.apple.mediaplaybackcore
MPCPlaybackPrivateListeningEnabled
iTunesCloudService State
^v17@?0{_MSVLogStateHints=B}8@?<^v@?@"NSDictionary">9
Q8@?0
com.apple.itunescloudd.launched
v32@?0@"NSString"8@"NSXPCListener"16^B24
Attempting to retrieve handler for an unsupported configuration [dsid=%@]
Attempting to retrieve handler for an unsupported configuration
An ICCloudClient (or HSCloudClient) instance is using a signed-out user identity.
Listen to ICActiveUserIdentityDidChangeNotification and either update ICCloudClient with the new active account or recreate it
ICCloudServiceErrorDomain
Unable to get an anonymous listener for %@[%ld] - This usually indicates an attempt to access itunescloudd without the proper entitlements.
com.apple.itunescloudd.xpc
ICDServer.m
We should never get here
unknown
AllowAutoDownloadOnCellular
v32@?0@"ICConnectionConfiguration"8Q16^B24
com.apple.itunescloudd.ICDServer.serial.queue
com.apple.itunescloudd.ICDServer.startup.queue
com.apple.itunescloudd.ICDServer.internal.operation.queue
com.apple.itunescloud.setupcompleted
MPExplicitContentAllowedBoolean
MLLastUploadedExplicitContentAllowedBoolean
com.apple.itunescloudd.setParentalControlRequestOperation
v16@?0@"ICRequestContext"8
v24@?0@"ICMusicSubscriptionStatusResponse"8@"NSError"16
com.apple.itunescloudd.CloudServer.keyRefreshOperation
installed
uninstalled
v32@?0q8Q16^B24
Library/Caches/com.apple.itunesstored/url-resolution.plist
p2-url-resolution
p2-launch-host-suffix-whitelist
p2-launch-apple-store-host-patterns
p2-launch-apple-store-path-patterns
p2-launch-appstore-host-patterns
p2-launch-appstore-path-patterns
p2-launch-ebookstore-host-patterns
p2-launch-ebookstore-path-patterns
p2-launch-mobilestore-host-patterns
p2-launch-mobilestore-path-patterns
vpp-licensing-invitation-url-pattern
com.apple.itunesstored.changed-url-resolution
AppleMusicSubscriber
AppleMusicUndecided
AppleMusicDisabled
p2-url-section-name
MusicNS
_retryLoadingCloudLibraryForSecondaryAccountsOnAppleTV: is only valid for AppleTV.
com.apple.itunescloud.subscription_status_refresh
v24@?0@"ICMediaAPIURLMappingSet"8@"NSError"16
EnhancedAudioAvailable
v16@?0@"NSString"8
Domain
.apple.com
Name
Path
v24@?0@"NSString"8@"NSString"16
https://www.apple.com/
com.apple.airplay
isAppleMusicSubscriber
cloudLibraryIsOn
com.apple.airplay.prefsChanged
MPRestrictionsMonitor
Class getMPRestrictionsMonitorClass(void)_block_invoke
MPMediaQuery
Class getMPMediaQueryClass(void)_block_invoke
MPHomeUserMonitor
Class getMPHomeUserMonitorClass(void)_block_invoke
SagaUnfavoriteEntityOperationAdamIDKey
SagaUnfavoriteEntityOperationCloudIDKey
SagaUnfavoriteEntityOperationCloudAlbumIDKey
SagaUnfavoriteEntityOperationCloudArtistIDKey
SagaUnfavoriteEntityOperationGlobalPlaylistIDKey
SagaUnfavoriteEntityOperationTimeStampKey
SagaUnfavoriteEntityOperationTypeKey
SagaUnfavoriteEntityOperation.m
No purchase_history_artwork_token for purchase_history_id = %llu
No purchase_history_screenshot_token for purchase_history_id = %llu
SELECT DISTINCT (fetchable_artwork_token), purchase_history_id, media_type FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token JOIN item_store ON entity_pid = item_store.item_pid AND entity_type = 0 JOIN item USING (item_pid) WHERE artwork_token IS NULL AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token
AllArtistImagesMapNextUpdateDateKey
AllArtistImagesMapDataDictionaryKey
allArtistImagesMap.plist
com.apple.itunescloudd.cloudartistheroimageimporter.accessqueue
com.apple.itunescloudd.cloudartistheroimageimporter.operationqueue
com.apple.itunescloudd.cloudartistheroimageimporter
v48@?0q8q16i24i28q32^B40
min-artist-update-polling-frequency-secs
SELECT fetchable_artwork_token, store_id FROM best_artwork_token JOIN item_artist ON entity_pid = item_artist_pid AND entity_type = ? WHERE entity_pid = ?
SELECT fetchable_artwork_token, store_id FROM best_artwork_token JOIN album_artist ON entity_pid = album_artist_pid AND entity_type = ? WHERE entity_pid = ?
library-match-rules
artist-image-match-bulk-url
an-batch-size
all-artist-images-map-url
update-interval-seconds
v32@?0@"NSArray"8Q16^B24
artist
v24@?0@"NSString"8^B16
artwork
v24@?0@"<ICStorePlatformResponse>"8@"NSError"16
SELECT store_id FROM item_artist LEFT OUTER JOIN artwork_token ON item_artist_pid = entity_pid AND entity_type = ? AND artwork_type = ? AND artwork_source_type = ? WHERE store_id != 0
SELECT store_id FROM album_artist LEFT OUTER JOIN artwork_token ON album_artist_pid = entity_pid AND entity_type = ? AND artwork_type = ? AND artwork_source_type = ? WHERE store_id != 0
SELECT DISTINCT (fetchable_artwork_token), store_id FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token LEFT OUTER JOIN item_artist ON item_artist_pid = entity_pid WHERE artwork_token IS NULL AND entity_type = ? AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token
SELECT DISTINCT (fetchable_artwork_token), store_id FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token LEFT OUTER JOIN album_artist ON album_artist_pid = entity_pid WHERE artwork_token IS NULL AND entity_type = ? AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token
v32@?0@"NSNumber"8@"NSString"16^B24
CloudArtistHeroImageImporter.m
required-fields
MLArtistHeroImageImportDatabaseRevision
ContentTastePendingChangesCoordinatorContentTasteItemKey
ContentTastePendingChangesCoordinatorInvalidateCacheKey
ContentTastePendingChangesCoordinatorPendingChangesKey
ContentTastePendingChangesCoordinatorOperationIdentifierKey
%lu-ContentTastePendingChanges
com.apple.itunescloudd.contenttastependingchanges.%ld
%@.plist
databases/%u/extra_data/cloud-artwork-info
'%@:%d'
(%@)
ICDServerOperationsManagerOperationNamesKey
ICDServerOperationsManagerBackgroundOperationNamesKey
name=%@, object=%p
com.apple.itunescloudd.ICDServerOperationsManager.serial.queue
com.apple.itunescloudd.ICDServerOperationsManager.operationQueue
com.apple.itunescloudd.ICDServerOperationsManager.backgroundOperationQueue
operationCount
void soft_SBSSetStatusBarShowsActivityForApplication(Boolean, CFStringRef, unsigned int)
ICDServerOperationsManager.m
SBSSetStatusBarShowsActivityForApplication
void *SpringBoardServicesLibrary(void)
dmap.itemid
geniusSeedTrackIDs
events
override-headers
attenuation-available
vocal-attenuation-duration-in-milliseconds
auto-play-mode
build-features
build-version
container-id
container-ids
container-type
device-name
end-position-in-milliseconds
end-reason-type
enqueuer
external-identifier
feature-name
household-id
internal-build
media-duration-in-milliseconds
media-type
offline
personalized-container-id
player
play-mode
private-enabled
queue-grouping-id
event-reason-hint-type
reco-data
repeat-play-mode
bundle-id
bundle-version
sb-enabled
siri-initiated
shuffle-play-mode
source-type
start-position-in-milliseconds
store-front
timed-metadata
milliseconds-since-play
track-info
event-type
shared-activity-devices-current
shared-activity-devices-max
utc-offset-in-seconds
display-type
character-displayed-count
lyric-language
audio-quality-targeted
audio-quality-provided
user-preference-audio-quality
user-preference-playback-format
album-adam-id
artist-adam-id
cloud-album-id
cloud-playlist-id
global-playlist-id
playlist-version-hash
station-hash
station-personalized-id
station-id
auc-adam-id
cloud-id
lyric-id
purchased-adam-id
radio-adam-id
orig-sf-adam-id
reporting-adam-id
subscription-adam-id
audio-sample-rate-in-hz
audio-bit-depth
bit-rate-in-bps
codec
audio-channel-type
playback-format
%llu
11-15
16-20
21-25
CloudTrackDownloadManager.m
%@ - %@ - %@, playCount: %ld
, lastPlayedDate: %@
v32@?0@"<ICDManageableAccount>"8Q16^B24
ICDAccountManagerState %p:
[active dsid=%@]
[no active dsid]
[supported dsids=%@]
[no supported dsids]
v24@?0@"ICConnectionConfiguration"8^B16
SSURLConnectionRequestGeniusAdditionsErrorDomain
server-status-code
status
retry-in-ms
SSURLConnectionRequest+GeniusAdditions
idx (%lu) is out of range (%lu)
value
preference
adam_id
external_id
created_offset_millis
preference_type
action_timestamp_millis
Artist: %@: Score: %f, artistID: %lld, cumulativePlayCount: %ld, cumulativeSkipCount: %ld, playsPerItem: %f, uniqueAlbums: %lu, uniqueSongs: %lu, daysWithAdds: %lu, daysSinceLastPlay: %ld
base-url
CloudLibrary.m
CloudLibrary
I'm abstract, please instantiate a subclass.
com.apple.itunescloudd.%@.connection
com.apple.itunescloudd.asyncrequests
v16@?0@"NSOperation"8
CloudLibrary has no bag key
%@ Ensure Connection
v16@?0@"CloudLibraryConnection"8
Connecting to cloud library
v24@?0@"NSOperation"8^B16
SagaSetItemPropertyOperationSagaIDKey
SagaSetItemPropertyOperationPropertiesKey
SagaSetItemPropertyOperation - (saga_id = %u)
-init is not supported, use +handler
@"NSString"16@?0@"NSString"8
com.apple.itunescloudd.sagaUploadItemPropertiesQueue
com.apple.itunescloudd.sagaUploadPlaylistPropertiesQueue
com.apple.itunescloudd.sagaUpdateLibraryQueue
com.apple.itunescloudd.calloutQueue
SagaRequestHandler.m
MSVDeviceSupportsMultipleLibraries()
com.apple.itunescloudd.SagaRequestHandler.uploadPlayDataOperation
com.apple.itunescloudd.SagaRequestHandler.createPlaylistOperation
com.apple.itunescloudd.SagaRequestHandler.createGeniusPlaylistOperation
com.apple.itunescloudd.SagaRequestHandler.addItemToPlaylistOperation
com.apple.itunescloudd.SagaRequestHandler.updatePlaylistOperation
com.apple.itunescloudd.SagaRequestHandler.publishPlaylistOperation
com.apple.itunescloudd.SagaRequestHandler.removeItemOperation
com.apple.itunescloudd.SagaRequestHandler.removePlaylistOperation
com.apple.itunescloudd.SagaRequestHandler.uploadPlaylistArtworkOperation
com.apple.itunescloudd.SagaRequestHandler.updateSubscribedPlaylistsOperation
com.apple.itunescloudd.SagaRequestHandler.cloudAddOperation
com.apple.itunescloudd.SagaRequestHandler.setAddToPlaylistBehaviorOperation
com.apple.itunescloudd.SagaRequestHandler.setAlbumPropertiesOperation
com.apple.itunescloudd.SagaRequestHandler.loadArtworkInfoOperation
No saga artwork_token for screenshot item with persistent-id = %lld
com.apple.itunescloudd.SagaRequestHandler.getGeniusItemsOperation
daap.incrementplaycount
daap.incrementskipcount
daap.songdateadded
com.apple.itunescloudd.SagaRequestHandler.setItemPropertyOperation
com.apple.itunescloudd.SagaRequestHandler.favoriteEntityOperation
com.apple.itunescloudd.SagaRequestHandler.favoritePlaylistEntityOperation
com.apple.itunescloudd.SagaRequestHandler.favoriteCloudAlbumEntityOperation
com.apple.itunescloudd.SagaRequestHandler.favoriteCloudArtistEntityOperation
com.apple.itunescloudd.SagaRequestHandler.unfavoriteEntityOperation
com.apple.itunescloudd.SagaRequestHandler.unfavoriteCloudAlbumEntityOperation
com.apple.itunescloudd.SagaRequestHandler.unfavoriteCloudArtistEntityOperation
com.apple.itunescloudd.SagaRequestHandler.unfavoriteGlobalPlaylistOperation
Different Cloud IDS
com.apple.itunescloudd.SagaRequestHandler.updateLibraryOperation
com.apple.itunescloudd.sagaUpdateInProgressChanged
configuration
clientIdentity
%@ %p
CloudLibraryOperationStatusPending
CloudLibraryOperationStatusSuccess
CloudLibraryOperationStatusFailed
CloudLibraryOperationStatusPermanentlyFailed
CloudLibraryOperationStatusCancelled
Unknown Cloud Library Operation Status
SagaUpdateSubscribedPlaylistsOperation - (saga_id count = %llu)
SagaGetGeniusItemsOperation - (seed_id = %llu)
com.apple.iTunesCloud.CloudService.operationQueue
auto-update-polling-frequency-secs
subscribed-container-polling-frequency-secs
v24@?0B8B12B16B20
v24@?0Q8@"NSError"16
v32@?0@"NSString"8@"NSString"16@"NSError"24
v24@?0@"NSNumber"8@"NSError"16
Missing add to library capabilities in %ld
update-on-app-focus-enabled
update-polling-frequency-secs
loadBooksForStoreIDs: - Invalid user identity [missing DSID] - userIdentity=%@
Artist images are not supported on this device.
clientIdentifier
clientVersion
bagProfile
bagProfileVersion
shouldIgnoreUserTokenCache
shouldIgnoreDeveloperTokenCache
protocol-version
body.plist
gzip
ICStoreURLRequest *_CloudGeniusUtilitiesCreatePostRequest(NSURL *__strong, NSString *__strong, NSTimeInterval, NSInteger, NSMutableDictionary *__strong, BOOL, BOOL)
CloudGeniusUtilities.m
Must provide either a URL or a URL Bag Key
com.apple.itunescloudd.CloudMusicSubscriptionStatusServiceListener.accessQueue
ICContentTasteRequestHandlerUpdateTaskIdentifier
ICContentTasteRequestHandlerPushTaskIdentifier
ICContentTasteRequestHandlerRetryTaskIdentifier
ICContentTasteRequestHandlerResponseExpiredTaskIdentifier
com.apple.amp.iTunesCloud.ICContentTasteRequestHandler-%lu
%@.default
%@.queue
%@.operationQueue
ICContentTasteRequestHandler.m
content taste change to post cannot be nil
PostPendingContentTasteChanges
MediaContentTasteResponseExpirationTimeKey
com.apple.itunescloudd.JaliscoRequestHandler.updateLibraryQueue
com.apple.itunescloudd.JaliscoRequestHandler.calloutQueue
JaliscoDisabled
Unable update library [no DSID on user identity] - userIdentity=%@ - properties=%@
com.apple.itunescloudd.jaliscoUpdateInProgressChanged
com.apple.itunescloudd.JaliscoRequestHandler.updateLibraryOperation
com.apple.itunescloudd.JaliscoRequestHandler.hideItemOperation
com.apple.itunescloudd.JaliscoRequestHandler.setItemPropertyOperation
com.apple.itunescloudd.JaliscoRequestHandler.loadArtworkInfoOperation
No purchase history artwork_token for screenshot item with persistent-id = %lld
JaliscoRequestHandler.m
com.apple.itunescloudd.JaliscoRequestHandler.loadBooksOperation
tokenCollection
error
TCC not granted
RefuseXPCConnection
processIdentifier
bundleID
serviceName
refusalReason
 [%ld]: %ld bytes (%@)
ICDAccountManagerStateChange %p: %@ -> %@ - [active changed=%u] [supported changed=%u]
databases/%u/getgeniusitems
seed-id
num-items
_ICCloudContentTasteUpdateItemCodingKeyStoreIDKey
_ICCloudContentTasteUpdateItemCodingKeyGlobalPlaylistIDKey
_ICCloudContentTasteUpdateItemCodingKeyItemTypeKey
_ICCloudContentTasteUpdateItemCodingKeyTasteTypeKey
_ICCloudContentTasteUpdateItemCodingKeyTimeStampKey
_ICCloudContentTasteUpdateItemCodingKeyDSIDKey
ICCloudContentTasteUpdateItem (%p) storeID=%lld, DSID=%lld, globalPlaylistID=%@, contentTasteType=%ld, contentTasteItem=%ld, updateTimeStamp=%@
void _MSVHasherAppend64(MSVHasher * _Nonnull, uint64_t)
void _MSVHasher_SipHash_1_3_Append64(MSVHasherSipHash_1_3 *, uint64_t)
MSVHasher+SipHash.h
_MSVHasher_SipHash_1_3_Append64: invalid byte count detected [byteCount & 7, tail == 0]: %lld
_MSVHasher_SipHash_1_3_Append64: invalid byte count detected [byteCount & 3]: %lld
NSUInteger _MSVHashGetHash(MSVHash)
Cannot finalize unknown hasher algorithm
itre
SagaImporterErrorDomain
SagaImporter.m
connection
containers.daap
items_%u.daap
meta
delta
revision-id
v12@?0f8
Artists
Albums
v36@?0@"NSString"8q16B24q28
com.apple.itunescloudd.SagaImporter.loadLyricsOperation
albums_%u.daap
artists_%u.daap
SagaLoadLyricsOperation-bulk (item count = %llu)
com.apple.itunescloudd.SagaLoadLyricsOperation
text-url
databases/%u/subscribed-containers
ICPlaylistUpdateErrorDomain
SagaUpdatePlaylistOperationArchiveVersionKey
SagaUpdatePlaylistOperationPlaylistPersistentIDKey
SagaUpdatePlaylistOperationProperties
SagaUpdatePlaylistOperationTrackListKey
SagaSDKUpdatePlaylistOperationRequestingBundleKey
SagaUpdatePlaylistOperationItemSagaIDsKey
SagaUpdatePlaylistOperationcloudItemIDListKey
SagaUpdatePlaylistOperation - (playlist_persistent_id = %lld)
Updating playlists are only allowed when updating a playlist that your app has created.
SagaRemovePlaylistOperationArchiveVersionKey
SagaRemovePlaylistOperationPlaylistSagaIDsKey
SagaRemovePlaylistOperationPlaylistSagaIDKey
SagaRemovePlaylistOperation - (saga_id count = %llu)
POST
-init is not supported, use sharedCloudContentTasteResponseCacheManager
com.apple.amp.iTunesCloud.ICCloudContentTasteResponseCacheManager.accessQueue
Library/Caches/com.apple.itunescloud/MediaContentTaste
SyncResponse-%llu
SagaUploadItemPlayDataOperation
%@ %@
adamId
name
catalogContent
serializedRecommendationsResponse
modelDataBlob.bin
compiledMLModel.mlmodelc
com.apple.itunescloud.library_recommendations_refresh
min-refresh-freq-in-seconds
com.apple.itunescloudd.ICMusicLibraryRecommendationsHandleNewArtistContentResponseNotification
com.apple.itunescloudd.ICMusicLibraryRecommendationsClearCacheNotification
ICMusicLibraryRecommendationsHandleNewArtistContentFilePath
musicRecommendationsData
matchedAdamIDs
Library_Recommendation
non-subscriber-notification-content-opt-in
com.apple.amp.inappmessages.private
com.apple.itunescloud.ICMusicLibraryRecommendationController.accessQueue
v24@?0@"ICMusicSubscriptionStatusMonitor"8@"ICMusicSubscriptionStatus"16
UserRequestedSubscriptionHidden
com.apple.mobileipod
v24@?0@"ICMusicAccountNotificationsSettingsResponse"8@"NSError"16
v16@?0@"AMPMusicArtistNewContentResponse"8
v16@?0@"ICMusicLibraryRecommendationResult"8
thresholded_score
v16@?0@"NSMutableDictionary"8
propertyKey
v24@?0@"AMPMusicArtistNewContentResponse"8@"NSError"16
MLModel compileModelAtURL failed with error %@
MLModel modelWithContentsOfURL failed with error %@
Caches/com.apple.iTunesCloud/LibraryRecommendations/ResourceCache
page-detail-rule
eventType:page|pageId:%lld
detail-event
isOptedInToNewArtistContent
optin-context
isExplicitContent
is-explicit-rule
false
subscription-status-context
explicitContent
album-detail-segue
click
LibraryContentBannerNonsubscriber
recoId
close-button
impressions
banner
v24@?0@"ICStorePlatformResponse"8@"NSError"16
album-lockup
albumTitle
artistName
non-subscriber-opt-in-message
v24@?0@"ICInAppMessageEntry"8@"NSError"16
NEW_ALBUM_NOTIFICATION_TITLE
NEW_ALBUM_NOTIFICATION_BODY_FORMAT
title
body
alert
_url
https://itunes.apple.com/album/id%lld?itsct=NonSubsNewContentRelease&itscg=10100
actionType
actionUrl
eventType
notificationAction
eventVersion
notificationId
targetType
notification
topic
xp_amp_notifications
notificationType
Content
details
notificationSubtype
NonSubsNewContentRelease
NEW_ALBUM_NOTIFICATION_GOTO_BUTTON_TITLE
goToAlbum
targetId
AmpMusic.Notifications.NewRelease.Buttons.GoToAlbum
button
content-available
ams_%@
_bid
yyyy-MM-dd'T'HH:mm:ssZ
en_US_POSIX
notificationRequest
isExplicit
language
platformId
platformName
ML3StoreItemTrackData
Class getML3StoreItemTrackDataClass(void)_block_invoke
ICMusicLibraryRecommendationController.m
void *MusicLibraryLibrary(void)
ML3MusicLibrary
Class getML3MusicLibraryClass(void)_block_invoke
ML3MutableDatabaseImport
Class getML3MutableDatabaseImportClass(void)_block_invoke
MLMediaLibraryService
Class getMLMediaLibraryServiceClass(void)_block_invoke
com.apple.itunes.cloud-artwork-token
JaliscoHideItemOperationItemPurchaseHistoryIDsKey
JaliscoHideItemOperation - (purchase_history_id count = %llu)
databases/%u/items/edit
<%@: %p cloud_id=%llu, artworkToken=%@, artworkType=%lld, sourceType=%lld>
com.apple.iTunesCloud.itunescloudd.cloudArtworkImportOperation
mediaType
success
noToken
@"NSDictionary"8@?0
noAssetURL
NanoMusicSync
OffPuckDownloads
watchNotCharging
Original artwork found, but failed to import.
Artwork downloaded successfully, but failed to import.
importSuccess
errorstring
isCancelled
_NSDataCloudAdditionsTemporaryFileKey
databases/%u/groups?groupType=albums
play-activity-feed-post-frequency
com.apple.itunescloud.ICPlayActivityFlushInternalTestRequestNotification
Library
com.apple.iTunesCloud
play_activity
-init is not supported, use +sharedInstance
com.apple.itunescloudd.playactivityserver
com.apple.itunescloudd.CloudPlayActivityServer.flushOperationQueue
v16@?0d8
ShouldDebugLogRecordedEvents
com.apple.iTunesCloud.ICPlayActivityController.debugLogOperationQueue
com.apple.itunescloudd.playactivity
will
will not
CloudPlayActivityListenerNextFlushPlayActivityFireDateKey
com.apple.itunescloudd.flushPlayactivityEventsBackgroundTask
com.apple.itunescloudd.ICDEnhancedAudioKeyManager.HLSKeyRefreshOperationQueue
com.apple.itunescloudd.enhancedAudioSharedKeyRefreshOperation
v24@?0@"ICContentKeyStoreEntry"8^B16
v16@?0@"ML3DatabaseConnection"8
com.apple.itunescloudd.enhancedAudioOfflineKeyFetchOperation.%@]
v32@?0@"NSNumber"8@"NSDictionary"16^B24
Key Management
Failed to invalidate key '%@', adamID %@
JaliscoLoadBooksOperation
books.daap
('%@:%d')
dmap.persistentid
com.apple.itunes.itms-songid
daap.songdatepurchased
com.apple.itunes.store.vpp-is-licensed
com.apple.itunes.store.vpp-org-id
com.apple.itunes.store.vpp-org-display-name
com.apple.itunes.item-flavor-listing
com.apple.itunescloudd.tcchelper
com.apple.Music.iOS.VPPA.UnifiedReconsentDialogShown
com.apple.Music.iOS.VPPA.ApprovalButtonSelected
com.apple.Music.iOS.VPPA.CancelButtonSelected
com.apple.itunescloudd.MediaLibraryAccessRevocationController.accessQueue
SBParentalControlsCapabilities
com.apple.springboard
TCC_EXPIRATION_SINGLE_APP_TITLE
TCC_EXPIRATION_MULTIPLE_APPS_TITLE
TCC_EXPIRATION_ACCEPT_BUTTON_TITLE
TCC_EXPIRATION_REJECT_BUTTON_TITLE
guid
com.apple.tcc.access.changed
v12@?0i8
%@-CloudPendingChanges
noDSID
com.apple.itunescloudd.pendingchanges.%@.%@
%@-AddPendingChange
%@-ProcessPendingChanges
%@-RemoveAllPendingChanges
com.apple.itunescloudd
unable to create cache directory
ArtworkDownloads
DeviceClassNumber
ENABLE_SYNC_LIBRARY_FAILED_TOO_MANY_ITEMS_TITLE
ENABLE_SYNC_LIBRARY_FAILED_TOO_MANY_ITEMS_MESSAGE_IPAD
ENABLE_SYNC_LIBRARY_FAILED_TOO_MANY_ITEMS_MESSAGE_IPOD
ENABLE_SYNC_LIBRARY_FAILED_TOO_MANY_ITEMS_MESSAGE_IPHONE
void CloudLibraryUtilitiesShowFailedToEnableCloudLibrarySystemDialog(ICCloudLibraryUtilitiesDisableICMLReason)
CloudLibraryUtilities.m
Either alertHeader or alertMessage is required.
v16@?0@"ICStoreRequestContext"8
cloud-info
cuid
System
Cloud
Sync
Purchase
Store
Subscription
DaapDebugging
Initial
q24@?0@"NSDate"8@"NSDate"16
Revision_%u_to_%u
track_data_%lu.daap
playlist_data_%lu.daap
album_data_%lu.daap
artist_data_%lu.daap
SubscribedPlaylists
SubscribedContainersResponse_%llu
daap_data_%lu.daap
v20@?0@"ICMutableUserIdentityProperties"8B16
v24@?0@"ICMusicSubscriptionStatus"8@"NSError"16
v24@?0B8B12@"NSError"16
MPCloudController
Class getMPCloudControllerClass(void)_block_invoke
Unable to find class %s
domain
code
localizedDescription
phase
NETWORK_FAILED
UNKNOWN_ERROR
NSString *getMPErrorDomain(void)
SagaCloudSDKAddOperation.m
MPErrorDomain
userToken
artistContent
model
cloud-library-opt-out-url
min-itunes-match-compatible-version
itunes-match-protocol-version
contentType
canonicalId
releaseDate
contentFeatures
Album
Song
Playlist
MusicVideo
ArtistUploadedContent
(unknown: %i)
DisableCloudLibraryOperation
com.apple.itunescloudd.DisableCloudLibrary.optOutOperation
v20@?0B8@"NSError"12
MLSyncClientLastSyncedRevision
MLSyncClientSyncAnchor
MLSyncClientGenerationID
MLSyncClientHasPendingAssets
v12@?0B8
PlaybackIntent.Explicit
databases/%u/groups?groupType=artists
com.apple.itunescloudd.ICDHandlerCoordinator.operationQueue
<ICDHandlerCoordinator %p: [policy=%d]>
ICDHandlerCoordinator.m
The method `setupHandlers` must only be called once
com.apple.itunescloudd.ICDHandlerCoordinator.setupHandlersWithAccountStateChange
The method `setupHandlers` must be call prior to attempting to update active configurations
com.apple.itunescloudd.ICDHandlerCoordinator.updateHandlersWithAccountStateChange
The method `setupHandlers` must be call prior to attempting to update handler type
com.apple.itunescloudd.ICDHandlerCoordinator.changeLibraryManagementPolicy
The method _processSupportedConfigurationsChange:initialSetup: is only suitable for parallel multi user setup.
The method _processActiveConfigurationChange:initialSetup: is only suitable for single user and serial multi user setup.
CloudLibraryConnectionRequestForbiddenAdditonalErrorCodeKey
database-id
database-name
com.apple.itunescloudd.CloudLibraryConnection.serial
application/x-dmap-tagged
Client-Cloud-Daap-Version
Client-Cloud-Purchase-DAAP-Version
X-FM-Dsid
Client-Cloud-DAAP-Request-Reason
true
MPPlaybackUserDefaults
Class getMPPlaybackUserDefaultsClass(void)_block_invoke
CloudLibraryConnection.m
cloud-assets-update
SagaUploadPlaylistArtworkOperationPlaylistPersistentIDKey
v16@?0@"NSData"8
cloud-ids
file-size
hash-values
sha256
dsid
troveid
payload
initiate asset change
back-off-delay-in-ms
upload-responses-url
download-requests-url
download requests phase 1 (fetch work items)
actions
action
upload-playlist
assets
upload-info
response-data
v24@?0@"NSURLResponse"8@"NSError"16
token
response-code
upload responses (report work item responses)
download requests phase 2 (fetch work items)
all-work-completed
operations
endpoint
method
requiredHeaders
clientGenerated
date
en_US
EEE',' dd MMM yyyy HH':'mm':'ss 'GMT'
content
byterange
offset
length
v40@?0@"NSURLSessionUploadTask"8@"NSData"16@"NSURLResponse"24@"NSError"32
iTunesCloud
Not enough information to upload artwork asset.
application/x-apple-plist
Content-Type
Content-Encoding
updateplaylistasset.XXXXXX
Cannot append to unknown hasher algorithm
Cannot obtain digest from unknown hasher algorithm
com.apple.itunescloudd.CloudRemoteRequestOperationExecutionServiceListener.accessQueue
JaliscoUpdateOperation.m
JaliscoUpdateOperation
UpdateOperationBegin
UpdateOperationEnd
reason
class
initial
Must Subclass
query
includeHiddenItems
-----------------------------------------
com.apple.PlayActivityFeed
PlayActivityEvents.log
com.apple.amp.itunescloudd
Default
Default_Oversize
Accounts
Artwork
Artwork_Oversize
CloudSync
CloudSync_Oversize
Connections
Connections_Oversize
Downloads
Genius
PurchaseSync
PurchaseSync_Oversize
Push
XPC_Oversize
PlayActivity
PlayActivity_Oversize
ContentTaste
ContentTaste_Oversize
BackgroundTasks
LibraryRecommendations
CloudLibraryCoordinator
UserState
daap.songalbumartist
daap.songalbumuserrating
daap.songartist
daap.songcomment
daap.songcomposer
daap.songcontentrating
daap.songdatemodified
daap.songdateplayed
daap.songdatereleased
daap.songdisccount
daap.songdiscnumber
daap.songexcludefromshuffle
daap.songgenre
daap.songlastskipdate
daap.sortalbum
daap.sortartist
daap.sortcomposer
daap.sortname
daap.songstarttime
daap.songstoptime
daap.songtrackcount
daap.songtracknumber
daap.songyear
daap.songuserplaycount
daap.songuserrating
daap.songuserskipcount
dmap.itemhidden
dmap.itemname
com.apple.itunes.store.episode-screenshot
com.apple.itunes.cloud-purchased-token
com.apple.itunes.content-rating
com.apple.itunes.item-flavor
com.apple.itunes.itms-artistid
com.apple.itunes.itms-composerid
com.apple.itunes.itms-genreid
com.apple.itunes.itms-playlistid
com.apple.itunes.itms-storefrontid
com.apple.itunes.extended-media-kind
daap.songcodecsubtype
daap.songbitrate
daap.songbeatsperminute
daap.songsamplerate
daap.songsize
daap.songlongsize
daap.songrelativevolume
daap.songcontentdescription
daap.songlongcontentdescription
com.apple.itunes.movie-info-xml
com.apple.itunes.item-flavor-id
com.apple.itunes.norm-volume
com.apple.itunes.gapless-heur
com.apple.itunes.gapless-enc-del
com.apple.itunes.gapless-resy
com.apple.itunes.is-hd-video
com.apple.itunes.copyright
com.apple.itunes.drm-user-id
com.apple.itunes.drm-key1-id
com.apple.itunes.drm-versions
com.apple.itunes.drm-platform-id
com.apple.itunes.item-redownload-param
com.apple.itunes.item-redownload-param-2
com.apple.itunes.flat-chapter-data
com.apple.itunes.season-num
com.apple.itunes.xid
com.apple.itunes.series-name
com.apple.itunes.episode-num-str
com.apple.itunes.chapter-metadata-url
com.apple.itunes.collection-description
com.apple.itunes.cloud-lyrics-token
com.apple.itunes.episode-sort
com.apple.itunes.store.playlist-artist-id
com.apple.itunes.mastered-for-itunes
com.apple.itunes.store.subscription-adam-id
com.apple.itunes.store.playback-endpoint
daap.songwork
daap.songmovementname
daap.songmovementcount
daap.songmovementnumber
com.apple.itunes.store.lyrics-available
com.apple.itunes.store.supports-hls-playback
com.apple.itunes.store.ams-show-type
com.apple.itunes.store.ams-episode-type
com.apple.itunes.store.ams-episode-display-label
com.apple.itunes.store.ams-episode-sort-order
com.apple.itunes.store.color-capability
com.apple.itunes.store.hls-color-capability
com.apple.itunes.store.hls-video-quality
com.apple.itunes.store.hls-playback-url
com.apple.itunes.store.audio-capability
com.apple.itunes.store.hls-audio-capability
com.apple.itunes.store.is-preorder
com.apple.itunes.store.expected-release-date
com.apple.itunes.store.time-synced-lyrics-available
com.apple.itunes.store.album-classical-experience-available
com.apple.itunes.store.artist-classical-experience-available
com.apple.itunes.rental-duration
com.apple.itunes.rental-pb-duration
com.apple.itunes.rental-pb-start
com.apple.itunes.rental-start
com.apple.itunes.store.is-premium-rental
com.apple.itunes.display-publication-version
com.apple.itunes.page-progression
com.apple.itunes.store.show-composer-as-artist
com.apple.itunes.store.booklet-item-listing
com.apple.itunes.store.booklet-item
com.apple.itunes.store.booklet-item-name
com.apple.itunes.store.booklet-item-store-id
com.apple.itunes.store.booklet-item-redownload-param
com.apple.itunes.store.booklet-item-size
chapters
chapter-list
nominal-image-resolutions
images
start
v32@?0^{?=I*Qq}8Q16^B24
No subscription artwork_token for item with persistent-id = %lld
No subscription screenshot_token for item with persistent-id = %lld
%@ Unsupported entity type %ld for subscription artwork info
NSDebugDescription
%@ Failed to fetch artwork info lookup for cloud IDs: %@
SELECT DISTINCT (fetchable_artwork_token), subscription_store_item_id, media_type FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token JOIN item_store ON entity_pid = item_store.item_pid AND entity_type = ? JOIN item USING (item_pid) WHERE artwork_token IS NULL AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token
SagaCloudAddItemOperationAdamIDKey
SagaCloudAddPlaylistOperationPlaylistGlobalIDKey
SagaCloudAddItemToPlaylistOperationPlaylistPersistentIDKey
UPDATE item_store set store_saga_id = store_saga_id WHERE item_pid = ?
UPDATE item SET keep_local = ? WHERE item_pid = ? AND in_my_library = 1 AND media_type IN (8, 1032)
v24@?0@"NSNumber"8^B16
CloudArtworkImporter.m
configuration.userIdentity != nil
com.apple.itunescloudd.artworkimporter.artworkDownloadAccessQueue
com.apple.itunescloudd.%@
Request must be of type %@
Suspending
Resuming
MPMediaDownloadManager
Class getMPMediaDownloadManagerClass(void)_block_invoke
artwork_operation(%llu, %ld, %ld)
ML3ArtworkTypeUnknown
ML3ArtworkTypeItem
ML3ArtworkTypeScreenshot
ML3ArtworkTypeChapter
ML3ArtworkTypeArtistHero
ML3ArtworkTypePlaylist
ML3ArtworkSourceTypeUnknown
ML3ArtworkSourceTypeCloud
ML3ArtworkSourceTypeSync
ML3ArtworkSourceTypePurchaseHistory
ML3ArtworkSourceTypeStore
ML3ArtworkSourceTypeSubscriptionStoreContent
Prompting the user to acknowledge the latest privacy policy is not supported on the current platform.
notNeeded
cancelled
accepted
com.apple.aps.itunescloudd
com.apple.sagad
com.apple.jalisco
com.apple.itunesstored
com.apple.music.service
com.apple.music.social
environment
APNSToken
mediaKinds
accountStates
v32@?0@8@16^B24
v32@?0@"NSNumber"8@"ICDCloudPushNotificationAccountRegistrationState"16^B24
com.apple.itunescloudd.NSOperationQueue.CloudPushNotificationController.operationQueue
com.apple.itunescloudd.NSOperationQueue.CloudPushNotificationController.updatePushNotificationsOperationSyncQueue
Ignoring push notification [account is not active] - accountDSID=%lld - activeAccountDSID=%lld
v16@?0@"NSError"8
v24@?0@"ICUserIdentityProperties"8@"NSError"16
v16@?0@"ICAsyncBlockOperation"8
connection=nil
Push environment changed
v24@?0@"ICURLBag"8@"NSError"16
v24@?0@"ICPushNotificationsResponse"8@"NSError"16
media-kinds
com.apple.itunesstored.PlaybackLeaseDidEnd
payloadVersion
song
music-video
feature-movie
tv-episode
book
software
Music
databases/%u/items
<%@: %p storeID=%lld, sagaID=%lld, globalPlaylistID=%@, cloudAlbumID=%@, cloudArtistID=%@ timeStamp=%@>
databases/%u/containers
Title: %@, storeAdamID: %lld
Saga
library-daap
v24@?0r*8Q16
v32@?0@"NSNumber"8Q16^B24
com.apple.itunes.drm-token-request-status
com.apple.itunes.drm-token-data
dmap.serverrevision
daap.baseplaylist
daap.songalbum
daap.songalbumid
daap.songartistid
daap.bookmarkable
daap.songbookmark
daap.songcategory
daap.songcodectype
daap.songcompilation
daap.songdatakind
daap.songdataurl
dmap.itemdateadded
dmap.itemdateplayed
daap.songdescription
daap.songdisabled
daap.songeqpreset
daap.songextradata
dmap.objectextradata
daap.songformat
daap.songgapless
daap.songgrouping
daap.songhasbeenplayed
daap.songkeywords
daap.songpodcasturl
daap.sortalbumartist
daap.sortseriesname
daap.songtime
dacp.protocolversion
dacp.supports-speakerselection
dacp.supports-setuserrating
dmap.containercount
dmap.containeritemid
dmap.databasekind
dmap.itemavailable
dmap.itemcount
dmap.longitemid
dmap.itemkind
dmap.parentcontainerid
dmap.status
dmcp.interfacekind
dmcp.protocolversion
dmcp.supportsbonjoursourcesupdates
dmcp.supportscontrolpromptrequests
dmcp.supportsplaystatusupdates
dmcp.supportsremotelibraryselection
dmcp.supportsvolumecontrol
com.apple.itunes.cloud-artwork-url
com.apple.itunes.drm-key-list-id
com.apple.itunes.drm-key2-id
com.apple.itunes.non-drm-user-id
com.apple.itunes.has-chapter-data
com.apple.itunes.has-video
com.apple.itunes.itunes-machine-id
com.apple.itunes.gapless-dur
com.apple.itunes.gapless-enc-dr
com.apple.itunes.playlist-data
com.apple.itunes.playlist-kind
com.apple.itunes.playlist-sort-is-reversed
com.apple.itunes.playlist-sort
com.apple.itunes.supports-fprap
com.apple.itunes.supported-itunes-extensions
com.apple.itunes.supports-genius-control
com.apple.itunes.store.newsstand-artwork-url
com.apple.itunes.store.product-url
com.apple.jingle.newsstandBindingEdge
com.apple.jingle.newsstandBindingType
com.apple.jingle.AppIconNeedsShine
com.apple.itunes.special-playlist
com.apple.itunes.store.extras-url
com.apple.itunes.publication-version
daap.syncid
daap.albumsyncid
daap.artistsyncid
daap.albumartistsyncid
daap.composersyncid
daap.genresyncid
com.apple.itunes.cloud-match-type
com.apple.itunes.cloud-connect-status
daap.playlistsongs
dmap.itemidlisting
com.apple.itunes.genius-seed-track-id-listing
dmap.dictionary
com.apple.itunescloudd.AppleMusicAPITokenIDSService.accessQueue
v16@?0@"ICAppleMusicAPITokenResponse"8
v28@?0@"ICAppleMusicAPITokenCollection"8@"NSError"16i24
v24@?0@"NSString"8@"NSError"16
com.apple.private.alloy.itunescloudd
requestTokens
com.apple.itunescloudd.deferredPushUpdate.saga
CloudPeriodicPoller - JaliscoMedia - LoadBag
com.apple.itunescloudd.periodicPoll.jaliscoMedia
com.apple.itunescloudd.deferredPushUpdate.jaliscoMedia
com.apple.homesharing
NextEvaluateSyncRulesOperationTime
NextEvaluateSyncRulesThrottleOperationTime
NextJaliscoLibraryPeriodicPollTime
NextJaliscoAppsPeriodicPollTime
cloud-library-update-request
cloud-library-update-check
subscription lapsed
load initial cloud library - isInitialImport
load initial cloud library
DisableLibraryUpload
ForceLibraryUnification
auto-update
incremental
num-tracks
libraryUpdateRequest
v32@?0@"ICURLResponse"8@"NSDictionary"16@"NSError"24
update-id
CloudLibraryUpload.plist
min-compatible-version
%08X%08X
persistent-library-id
should-upload
tracks
%llx
v40@?0q8r^@16Q24^B32
process-playlists
playlists
CloudLibraryUploadResults.plist
v28@?0B8@"NSError"12@"NSData"20
createdBuiltInSmartPlaylists
autoCreatedSmartPlaylistsDeleted
v24@?0@"ICDResponse"8@"NSError"16
Failed to get a database revision during library update operation
MusicShowCloudMediaEnabledSetting
SELECT best_artwork_token.entity_pid FROM best_artwork_token JOIN artwork_token ON best_artwork_token.entity_pid = artwork_token.entity_pid AND best_artwork_token.entity_type = artwork_token.entity_type AND best_artwork_token.available_artwork_token=artwork_token.artwork_token WHERE best_artwork_token.entity_type = ? AND best_artwork_token.artwork_type = ? AND artwork_source_type = ? AND available_artwork_token != ''
determineResultsURL
additional-fields-url
UPDATE item_store SET store_saga_id = 0
UPDATE container SET store_cloud_id = 0
com.apple.itunescloudd.ICDAccountManager.serial.queue
MPHomeMonitor
Class getMPHomeMonitorClass(void)_block_invoke
ICDMediaUserStateCenterServerNotificationsManager.m
NSString *getMPHomeUserMonitorPrivateListeningForCurrentDeviceSettingDidChangeNotification(void)
MPHomeUserMonitorPrivateListeningForCurrentDeviceSettingDidChangeNotification
_MediaContentTasteUpdateResponseTimeIntervalSinceReferenceDate
-init is not supported, use initWithContentTasteUpdateItems:invalidateLocalCache:dsid
com.apple.amp.iTunesCloud.ICUpdateContentTasteOperation.workQueue
If-None-Match
If-Match
application/x-protobuf
v24@?0@"ICURLResponse"8@"NSError"16
B16@?0@"ICCloudContentTasteUpdateItem"8
NonMediaItemStoreAdamIds
longLongValue
store_item_id
subscription_store_item_id
SELECT item_pid, liked_state, store_item_id, subscription_store_item_id, store_saga_id, is_subscription FROM item_store JOIN item_stats USING (item_pid) WHERE 
v32@?0@"ML3DatabaseRow"8@"NSError"16^B24
SELECT album_pid, liked_state, store_playlist_id, item_store.item_pid, item_store.store_saga_id, item_store.is_subscription FROM album JOIN item_store ON (album.representative_item_pid == item_store.ROWID) WHERE item_store.store_playlist_id
v24@?0@"NSArray"8@"NSError"16
SELECT container_pid, liked_state, cloud_global_id FROM container WHERE cloud_global_id
v32@?0@"NSString"8@"NSNumber"16^B24
v24@?0@"NSDictionary"8@"NSError"16
MPMediaLibrary
Class getMPMediaLibraryClass(void)_block_invoke
ICCloudContentTasteUpdateOperation.m
void *MediaPlayerLibrary(void)
SagaUploadPlaylistPlayDataOperation
subclass must implement
 %@ [%@]
session-id
%@=%@
Accept-Encoding
%d.%d
Client-iTunes-Sharing-Version
CloudSetAddToPlaylistBehaviorOperationBehaviorIDKey
CloudSetAddToPlaylistBehaviorOperation - (add to playlist behavior = %@)
Privacy acknowledgement required, but presenting the privacy prompt is not allowed.
v24@?0q8@"NSError"16
Privacy acknowledgement required, but user did not accept latest privacy policy.
Encountered error while performing privacy prompt operation.
No cloud_artwork_token for item saga id = %llu
No cloud_screenshot_token for item saga id = %llu
No cloud_artwork_token for playlist saga id = %llu
SELECT DISTINCT (fetchable_artwork_token), store_saga_id, media_type FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token JOIN item_store ON entity_pid = item_store.item_pid AND entity_type = ? JOIN item USING (item_pid) WHERE artwork_token IS NULL AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token
SELECT DISTINCT (fetchable_artwork_token), store_cloud_id FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token JOIN container ON entity_pid = container_pid AND entity_type = ? WHERE artwork_token IS NULL AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token
v8@?0
com.apple.amp.iTunesCloud.CloudContentTasteUpdateRequestListener.accessQueue
com.apple.amp.iTunesCloud.CloudContentTasteUpdateRequestListener.callbackQueue
com.apple.itunescloud.contenttaste
com.apple.itunesstored.private
v32@?0@"NSNumber"8@"ICContentTasteRequestHandler"16^B24
SagaSetAlbumItemPropertyOperationAlbumPersistentIDKey
SagaSetAlbumItemPropertyOperationAlbumItemPropertiesKey
SagaSetAlbumItemPropertyOperation - (album_persistent_id = %lld)
ItemSagaIDKey
PlaylistPersistentIDKey
RequestingBundleKey
SagaAddItemToPlaylistOperation - (saga_id = %llu)
SagaSDKAddItemToPlaylistOperation - (saga_id = %llu)
preferences
v32@?0@"NSNumber"8@"NSNumber"16^B24
B16@?0@"ML3DatabaseConnection"8
Jalisco-Media
SagaRemoveItemOperationArchiveVersionKey
SagaRemoveItemOperationItemSagaIDsKey
SagaRemoveItemOperationItemSagaIDKey
SagaRemoveItemOperation - (saga_id count = %llu)
databases/%u/add-favorite
ICAddToLibraryRequest.m
You can only send one field (adam-id or playlist-global-id
You can not add a playlist-global-id to a container
databases/%u/containers/%u/cloud-add
databases/%u/cloud-add
adam-id cannot be zero.
cannot specify more than one referral
container-id cannot be zero.
saga-id cannot be zero.
playlist-global-id must be a non-zero length string.
MediaPlayer
Favoriting
v16@?0@"DKDAAPWriter"8
%@.%@
type
config
ICDBackgroundTaskManager - Polling setup - LoadBag
com.apple.itunescloud.ICDBackgroundTaskManager.periodic-poll-activity
v16@?0@"BaseRequestHandler"8
v16@?0@"NSObject<OS_xpc_object>"8
no-name
B24@?0@"_ICDBackgroundTask"8^B16
ICDBackgroundTaskManager.m
More tasks than expected have the same name
purchase-daap
forced-refresh-frequency-minutes
task.configuration.userIdentity.accountDSID != nil
void _MSVHasherAppendBytes(MSVHasher * _Nonnull, const void * _Nonnull, size_t)
NSString * _Nonnull _MSVHashGetDigest(MSVHash)
0123456789abcdef
MSVHash _MSVHasherFinalize(MSVHasher * _Nonnull)
com.apple.itunescloudd.deferredPushUpdate.jalisco
%{public}@ - Handling music app removal
%{public}@ - Handling music app install
%{public}@ - Starting to enable cloud library, start initial import=%{BOOL}u, enableCloudLibraryPolicy=%d, isExplicitUserAction=%{BOOL}u, isPendingAuthentication=%{BOOL}u
%{public}@ - We have a pending saga authenticate operation. Will not try to enable cloud library
%{public}@ - Clearing last known locker account
%{public}@ - performing SagaAuthenticationOperation enableICMLReason=%d
%{public}@ - SagaAuthentication complete. shouldRetry=%{BOOL}u error=%{public}@
%{public}@ - SagaAuthentication complete. shouldRetry=%{BOOL}u
%{public}@ - ICML is already enabled
%{public}@ - Not enabling cloud library. Could not get properties of %{public}@, error=%{public}@
%{public}@ - User is not subscriber, performing Jalisco import. shouldStartInitialImport=%{BOOL}u, enableCloudLibraryPolicy=%d, isExplicitUserAction=%{BOOL}u, isPendingAuthentication=%{BOOL}u
%{public}@ - Jalisco import complete. error=%{public}@
%{public}@ - Jalisco import complete.
%{public}@ - enableCloudLibraryWithClientIdentity called with nothing to enable. enableCloudLibraryPolicy=%d, isPendingAuthentication=%{BOOL}u
%{public}@ - Enqueuing enableCloudLibraryOperation: %{public}@ - shouldStartInitialImport=%{BOOL}u, enableCloudLibraryPolicy=%d, isExplicitUserAction=%{BOOL}u, isPendingAuthentication=%{BOOL}u
%{public}@ - Starting to disable cloud library for reason=%d
%{public}@ - account with DSID (%lld) does not have ICML enabled
Automatic download media kind update task completed error=%{public}@
Automatic download media kind update task completed
%{public}@ - Updating Jalisco library for reason=%d
%{public}@ - Updating Jalisco library for reason=%d, Setting jaliscoNeedsUpdateForTokens=YES
%{public}@ - Will not update Jalisco library for reason=%d as the locker bit was not set.
%{public}@ - Will not update Jalisco library for reason=%d _jaliscoRequestHandler=%p
%{public}@ - Finished disablig cloud library for reason=%d
%{public}@ - isUpdatingCloudLibraryWithCompletion sagaUpdateInProgress=%{BOOL}u, sagaInitialImport=%{BOOL}u, jaliscoUpdateInProgress=%{BOOL}u, jaliscoInitialImport=%{BOOL}u, _havePendingSagaUpdate=%{BOOL}u
%{public}@ - Ignoring request for periodic poll because ICML is not enabled
%{public}@ - Not updating saga library as the handler is nil
%{public}@ - Not updating jalisco library as the handler is nil
%{public}@ - Unsupported request to add background operation (%p) for Jalisco library
%{public}@ - updateProgressForLibraryType for libraryType=%{public}@, progress=%f
%{public}@ - updateProgressForLibraryType for libraryType=%{public}@, jaliscoDatabaseVersion=%d, _havePendingSagaUpdate=%{BOOL}u, _didManuallyReloadCloudLibrary=%{BOOL}u, sagaUpdateProgress=%f, progress=%f
%{public}@ - ignoring importItemArtworkForSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring importScreenshotForSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring importContainerArtworkForSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring deprioritizeItemArtworkForSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring deprioritizeScreenshotForSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring deprioritizeContainerArtworkForSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring createPlaylistWithPersistentID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring publishPlaylistWithSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring removeItemsWithSagaIDs as we don't have a valid SagaRequestHandler
%{public}@ - ignoring removePlaylistsWithSagaIDs as we don't have a valid SagaRequestHandler
%{public}@ - ignoring uploadArtworkForPlaylistWithPersistentID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring addGeniusPlaylistWithPersistentID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring addItemWithSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring addItemWithSagaID with bundleID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring addStoreItemWithAdamID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring addStoreItemWithOpaqueID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring addStorePlaylistWithGlobalID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring setPlaylistProperties as we don't have a valid SagaRequestHandler
%{public}@ - ignoring setPlaylistProperties with bundleID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring setCloudAddToPlaylistBehavior as we don't have a valid SagaRequestHandler
%{public}@ - ignoring setItemProperties as we don't have a valid SagaRequestHandler
%{public}@ - ignoring setAlbumProperties as we don't have a valid SagaRequestHandler
%{public}@ - ignoring updateItemPlayDataWithCompletionHandler as we don't have a valid SagaRequestHandler
%{public}@ - ignoring updatePlaylistPlayDataWithCompletionHandler as we don't have a valid SagaRequestHandler
%{public}@ - ignoring updateSubscribedPlaylistsWithSagaIDs as we don't have a valid SagaRequestHandler
%{public}@ - ignoring loadGeniusItemsForSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring loadArtworkInfoForSagaIDs as we don't have a valid SagaRequestHandler
%{public}@ - ignoring loadArtworkInfoForContainerSagaIDs as we don't have a valid SagaRequestHandler
%{public}@ - ignoring loadScreenshotInfoForSagaIDs as we don't have a valid SagaRequestHandler
%{public}@ - last known error reason enabling iCML=%{public}@
%{public}@ - locker bit is not set, not returning last known error enabling iCML. cloudLibraryStateReason=%{public}@
%{public}@ - could not load user identity properties (error=%{public}@), not returning last known error enabling iCML
%{public}@ - ignoring favoriteEntityWithStoreID=%lld, entityType=%{public}@ as we don't have a valid SagaRequestHandler
%{public}@ - ignoring favoritePlaylistWithGlobalID=%{public}@ as we don't have a valid SagaRequestHandler
%{public}@ - ignoring favoriteAlbumWithCloudLibraryID=%{public}@ as we don't have a valid SagaRequestHandler
%{public}@ - ignoring favoriteArtistWithCloudLibraryID=%{public}@ as we don't have a valid SagaRequestHandler
%{public}@ - ignoring favoriteEntityWithSagaID=%lld, entityType=%{public}@ as we don't have a valid SagaRequestHandler
%{public}@ - ignoring unfavoriteEntityWithStoreID=%lld, entityType=%{public}@ as we don't have a valid SagaRequestHandler
%{public}@ - ignoring unfavoriteEntityWithSagaID=%lld, entityType=%{public}@ as we don't have a valid SagaRequestHandler
%{public}@ - ignoring unfavoriteAlbumWithCloudLibraryID=%{public}@ as we don't have a valid SagaRequestHandler
%{public}@ - ignoring unfavoriteArtistWithCloudLibraryID=%{public}@ as we don't have a valid SagaRequestHandler
%{public}@ - ignoring unfavoritePlaylistWithGlobalID=%{public}@ as we don't have a valid SagaRequestHandler
%{public}@ - ignoring importItemArtworkForPurchaseHistoryID as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring importScreenshotForPurchaseHistoryID as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring deprioritizeItemArtworkForPurchaseHistoryID as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring deprioritizeScreenshotForPurchaseHistoryID as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring removeLibraryWithCompletion as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring setItemProperties as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring loadArtworkInfoForPurchaseHistoryIDs as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring loadScreenshotInfoForPurchaseHistoryIDs as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring isMediaKindDisabledForJaliscoLibrary as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring loadBooksForStoreIDs as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring loadMissingArtwork as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring hideItemsWithPurchaseHistoryIDs as we don't have a valid JaliscoRequestHandler
%{public}@ includeMediaKindSong=%{BOOL}u on non standalone wOS platform
%{public}@ could not load user identity properties. error=%{public}@
%{public}@ - user is a subscriber and locker bit is set. includeMediaKindSong=%{BOOL}u
%{public}@ - user is a subscriber and locker bit is NOT set. includeMediaKindSong=%{BOOL}u
%{public}@ - user is a NOT a subscriber. includeMediaKindSong=%{BOOL}u
%{public}@ Error %{public}@ loading subscription status. includeMediaKindSong=%{BOOL}u
%{public}@ starting update operation for %{public}@ library, initialImport=%{BOOL}u
%{public}@ finished update operation for %{public}@ library, response=%{public}@
%{public}@ - Showing system dialog for enable cloud library error code=%d
%{public}@ - scheduling initial cloud library update
%{public}@ - network reachability changed, _musicSubscriptionCheckStatus = %d. Reloading subscription status
%{public}@ - becomeActive
%{public}@ - initializing JaliscoRequestHandler
%{public}@ - we have a valid JaliscoRequestHandler.
%{public}@ - Start observing subscription status changed notification
%{public}@ - skipping additional subscription status check isPendingAuthentication=%{BOOL}u, isHandlerActive=%{BOOL}u, musicSubscriptionCheckStatus=%d, deauthOperationCount=%d 
%{public}@ - becomeInactiveWithDeauthentication, deauthentication=%{BOOL}u, active=%{BOOL}u
%{public}@ - Finished removing content taste items with error=%{public}@
%{public}@ - Starting to deauthenticate Jalisco library
%{public}@ - Deauthenticating Jalisco library finished with error=%{public}@
%{public}@ - Starting to deauthenticate Saga library
%{public}@ - Deauthenticating Saga library finished with error=%{public}@
%{public}@ - finished deauthenticating
Updating Jalisco Library with reason=%d
Finished updating Jalisco Library with reason=%d, error=%{public}@
Updating Saga Library with reason=%d
Finished updating Saga Library with reason=%d, error=%{public}@
%{public}@ - Updating last known active locker account from %lld to %lld
%{public}@ - Store account ID was removed, deauthenticating if allowed.
%{public}@ - becomeInactiveWithDeauthentication failed [cancelling operations failed] error=%{public}@
%{public}@ - Removing allArtistImagesMapCacheFile due to account change
%{public}@ - Removing purchase history due to account change
%{public}@ - Ignoring native music app check on platforms that support multiple libraries
%{public}@ - Ignoring native music app check on traditional wOS
%{public}@ - Handling subscription status change notification
%{public}@ - Subscription change notification received for another account [no action to take] - handlerDSID=%@ - notificationDSID=%@
%{public}@ - Starting operation to refresh subscription status.
%{public}@ - Not refreshing subscription status. isActiveLocker=%{BOOL}u, loading user identity properties finished with error=%{public}@
%{public}@ - Not refreshing subscription status. isActiveAccount=%{BOOL}u, isActiveLocker=%{BOOL}u, loading user identity properties finished with error=%{public}@
%{public}@ - We already have a pending subscription status check operation.
%{public}@ - Not reloading subscription status as the handler is not active.
%{public}@ - Will retry getting subscription status in %f seconds for reason %d, _subscriptionStatusFailureCount=%ld
%{public}@ maxRetryDelaySeconds=%lu
%{public}@ - Scheduling retry to update cloud libary on %{public}@ (failureCount=%lu, retryDelaySeconds=%lu)
%{public}@ - retrying to enable cloud library for reason=%d
%{public}@ - NOT retrying to update cloud library for reason=%d as the handler is not active
%{public}@ - shouldTreatSubscriptionStatusAsExpired is set. Will force subscription status to be expired
%{public}@ - reloading subscription status. Current status=%d, reason=%d
%{public}@ - finished reloading subscription status for reason=%d, AM=%{BOOL}u, Match=%{BOOL}u, error=%{public}@, subscriptionStatusFailureCount=%d
%{public}@ - shouldTreatSubscriptionStatusCheckAsIncomplete is set. Will treat subscription status check as incomplete
%{public}@ - _musicSubscriptionCheckStatus=%d, subscribedToAppleMusic=%{BOOL}u, subscribedToiTunesMatch=%{BOOL}u, setting userRequestedSubscriptionHidden to 0
%{public}@ - subscription status has changed (old=%d, new=%d)
%{public}@ - subscription status has not changed (status=%d)
%{public}@ - ignoring subscription status change as the handler is not active
%{public}@ - We already have a pending enable ICML operation.
%{public}@ - Will retry enabling iCML in %f seconds.
%{public}@ - Starting retry operation to enable ICML.
%{public}@ - Could not get properties for current user identity - error=%{public}@., _autoEnableFailureCount=%ld
%{public}@ - Finished loading user identity properties with error=%{public}@. account is active=%{BOOL}u. Not loading iCML
%{public}@ - NOT retrying to enable cloud library for reason=%d as the handler is not active
%{public}@ - Checking if ICML can be enabled. includeLocalContentCheck=%{BOOL}u
%{public}@ - DSID (%lld) is already the active locker account
%{public}@ - Cannot enable ICML as the DSID (%lld) is invalid
%{public}@ - Cannot enable ICML as the user manually disabled it
%{public}@ - Error (%{public}@ determining if user manually disabled iCML. Will schedule a retry.
%{public}@ - Cannot enable ICML as there are local destructive changes
%{public}@ - Can conditionally enable ICML as DSID (%lld) is a preexisting store acount
%{public}@ - currentSagaDatabaseVersion=%d, wasRestoredFromCloudBackup=%{BOOL}u
%{public}@ - Active locker account is different from previous locker account - shouldMergeWithCloudLibrary=%d
%{public}@ - Active locker account is the same as previous locker account - shouldMergeWithCloudLibrary=%d
%{public}@ - Found mergePreference on the active locker account - shouldMerge=%d.
%{public}@ - Updating merge preference from %{BOOL}u to %{BOOL}u
%{public}@ - Clearing TroveID and CUID, setting merge preference to %{BOOL}u
%{public}@ - Will not adjust merge preference.
%{public}@ - No changes to process
%{public}@ - previousAccountID=%lld, activeAccountID=%lld, lastKnownActiveLockerAccountID=%lld, currentSagaDatabaseVersion=%d, accountIDWasAdded=%{BOOL}u, accountIDWasChanged=%{BOOL}u, handleReason=%d
%{public}@ - Locker bit set, but the account is not active. Enqueuing a SagaDeauth
%{public}@ - Device is already registered with CUID and TroveID
%{public}@ - Initializing SagaRequestHander ....
%{public}@ - We have a valid SagaRequestHander (%p)....
%{public}@ - Enqueuing SagaDeauth as device registration failed.
%{public}@ - checking to see if iCML can be enabled for reason=%d
%{public}@ - No pending changes to handle. Ignoring reason=%d
%{public}@ - Not enabling ICML (status = %d)
%{public}@ - Will schedule a retry to enable ICML (status = %d)
%{public}@ -  enabling ICML (status = %d)
%{public}@ - Not enabling ICML for reason = %d, status = %d
%{public}@ - Trying to enable cloud library for reason=%d, supportsAutoEnablingLibrary=%{BOOL}u, subscriptionStatus=%d
%{public}@ - Native music app is NOT installed. Not enabling Cloud Music Library
%{public}@ - isActiveLockerAccount=%{BOOL}u, subscriptionStatus=%d. Disabling CloudLibrary as the user is no longer a subscriber
%{public}@ - New account [enabling iCML if possible]
%{public}@ - Preparing to enable Cloud Music Library for reason=%d
%{public}@ - Skipping initial import on non standalone watch for reason=%d
%{public}@ - Not enabling iCML on unsupported platform %{public}@
%{public}@ - Platform %{public}@ doesn't support automatically enabling cloud library
%{public}@ - Unhandled subscription status=%d when trying to enable cloud library
%{public}@ - Error %{public}@ loading user identity properties.
%{public}@ - Enqueueing CloudAuthenticateOperation shouldMerge:%d, allowNoisyPrompt:%{BOOL}u
%{public}@ - Authentication finished for %{public}@ with error=%{public}@, status=%d, authFailureCode=%{public}@
%{public}@ - CloudAuthenticateOperation is nil. Resetting _isPendingAuthentication=%{BOOL}u
%{public}@ - We already have a pending authentication operation. Will not authenticate again.
%{public}@ - We already have a pending deauthentication operation (isHandlerDeactivating=%{BOOL}u, _deauthOperationCount=%d). Will not deauthenticate again.
%{public}@ - Running DisableCloudLibraryOperation deletingDatabase:%{BOOL}u, disableActiveLockerAccount:%{BOOL}u, removeSourcePurchaseHistory=%{BOOL}u, isHandlerDeactivating=%{BOOL}u, _deauthOperationCount=%d
%{public}@ - Cancelling all Jalisco operations.
%{public}@ - Cancelling all Saga operations.
%{public}@ - No valid SagaRequestHandler - not cancelling pending SagaLibrary operations.
%{public}@ - locker bit is set on the account, creating SagaRequestHandler
%{public}@ - locker bit is not set on the account and we have a valid SagaRequestHandler. Removing it now ....
%{public}@ - ignoring store did change notification
%{public}@ - Reload media purchase history
%{public}@ - not reloading media purchase history. jaliscoDatabaseVersion=%d, _jaliscoRequestHandler=%p
%{public}@ - not reloading media purchase history by adding kind=%d, _jaliscoRequestHandler=%p
%{public}@ - performing initial saga update, sagaDatabaseVersion=%d, sagaNeedsFullUpdateAfterNextUpdate=%{BOOL}u
%{public}@ - not performing initial saga import. sagaDatabaseVersion=%d, _sagaRequestHandler=%p
%{public}@ - Posting JALISCO_UPDATE_IN_PROGRESS_CHANGED for libraryType=%{public}@
%{public}@ - Posting SAGA_UPDATE_IN_PROGRESS_CHANGED for libraryType=%{public}@
%{public}@ - Finished reloading media purchase history by adding kind=%d for reason=%d with error=%{public}@, _didManuallyReloadCloudLibrary=%{BOOL}u
%{public}@ - Finished reloading media purchase history for reason=%d with error=%{public}@
%{public}@ - Finished reloading saga library for reason=%d with error=%{public}@
%{public}@ - Will schedule a retry for status=%d, failureCode=%d
Sending set item properties request <%{public}@: %p method=%{public}@ action=%{public}@> for purchase history id: %llu properties: %{public}@
<%{public}@: %p method=%{public}@ action=%{public}@> received response: <%{public}@: %p code=%ld, length=%{bytes}lu>
JaliscoSetItemPropertyOperation failed with error: %{public}@
Not running JaliscoDeauthenticateOperation on wOS platform
Removing purchase history tracks
Clearing purchase history database revision (%ld)
Failed to remove playback intents. err=%{public}@
No purchase history database revision, skipping deauthenticate and clean up.
Cancelling any outstanding jalisco track downloads.
Resetting parent persistent-id to 0 (default root level)
Translated parent persistent-id %lld to cloud-id %lu
Failed to find parent cloud-id for persistent-id %lld
Updating playlist with persistent-id %lld, setting cloud-id to %llu
Triggering playlist artwork upload in case this playlist has user artwork.
Requesting library update because the response contained update-required flag
Skipping library update because the response did not contain update-required flag
Playlist with pid = %lld is not in the database, skipping save to cloud library.
Loading Chapter Artwork with power assertion: %{public}@
Fetching chapter artwork (purchase history ID = %lld, chapter time = %lld): %{public}@
Loading Chapter Artwork Complete, releasing power assertion: %{public}@
ICDDefaults %p - knownActiveAccountDSID: %@
ICDDefaults %p - setKnownAccountDSIDs: %@
ICDDefaults %p - setKnownActiveAccountDSID: %@
ICDDefaults %p - pendingBackgroundTasksData: %@
ICDDefaults %p - setPendingBackgroundTasksData: %@
BaseRequestHandler %p - Deleting handler %p - class=%{public}@ dsid=%{public}@
Migrating to version %ld, from userVersion=%ld, sagaDatabaseRevision=%ld, jaliscoDatabaseRevision=%ld
Current user version: %ld
Setting current user version: %ld
Skipping migration and setting user version to latest: %ld
-[CloudServer _migrateFromUserVersion0to348294]
-[CloudServer _migrateFromUserVersion348294to348295]
-[CloudServer _migrateFromUserVersion348295to366559]
-[CloudServer _migrateFromUserVersion366559to370000]
-[CloudServer _migrateFromUserVersion370000to370100]
Deleting ML database
Removing play data plists
-[CloudServer _migrateFromUserVersion370100to370200]
resetting jalisco and saga revisions to zero
RemoveSource error: %{public}@
updating track with location '%{public}@' to store_item_id=%lld
failed to update track with location '%{public}@'
-[CloudServer _migrateFromUserVersion370200to370300]
-[CloudServer _migrateFromUserVersion370300to370400]
-[CloudServer _migrateFromUserVersion370400to380000]
-[CloudServer _migrateFromUserVersion380000to380010]
-[CloudServer _migrateFromUserVersion380010to380020]
-[CloudServer _migrateFromUserVersion380020to380030]
-[CloudServer _migrateFromUserVersion380030to380040]
Cloud library is enabled, repairing subscribed containers is_src_remote (if any)
Cloud library is NOT enabled, deleting subscribed containers (if any)
-[CloudServer _migrateFromUserVersion380040to380050]
-[CloudServer _migrateFromUserVersion380050to380060]
-[CloudServer _migrateFromUserVersion380060to380070]
-[CloudServer _migrateFromUserVersion380070to380080]
-[CloudServer _migrateFromUserVersion380080to380090]
Detected %lld invalid artist artwork tokens, clearing last artist image import date...
-[CloudServer _migrateFromUserVersion380090to380100]
-[CloudServer _migrateFromUserVersion3800100to380110]
-[CloudServer _migrateFromUserVersion3800110to380115]
Failed to purge artwork_token for movies and tv shows. err=%{public}@
-[CloudServer _migrateFromUserVersion3800110to380120]
-[CloudServer _migrateFromUserVersion3800120to380130]
-[CloudServer _migrateFromUserVersion380130to380140]
-[CloudServer _migrateFromUserVersion380140to380150]
resetting jalisco revisions to zero to force a reset sync
-[CloudServer _migrateFromUserVersion380150to380160]
resetting jalisco revision to zero to force a reset sync
-[CloudServer _migrateFromUserVersion380160to380170]
-[CloudServer _migrateFromUserVersion380170to390000]
Found Automatic Downloads Key in user defaults
Automatic Downloads Key does not exist in user defaults
-[CloudServer _migrateFromUserVersion390000to390010]
Automatic Downloads is enabled on the active account. Setting appropriate user defaults
Could not get active store account, error=%{public}@
-[CloudServer _migrateFromUserVersion390010to390020]
-[CloudServer _migrateFromUserVersion390020to390030]
Resetting sagaOnDiskDatabaseRevision to 1 to update missing cloud_universal_library_id
-[CloudServer _migrateFromUserVersion390030to390040]
Resetting sagaOnDiskDatabaseRevision to 1 to update missing category_type_mask and grouping_sort_key
-[CloudServer _migrateFromUserVersion390040to390050]
Resetting sagaOnDiskDatabaseRevision to 1 to update missing hls fields
-[CloudServer _migrateFromUserVersion390050to390060]
-[CloudServer _migrateFromUserVersion390060to400000]
Resetting sagaOnDiskDatabaseRevision to 1 to update date_modified for subscribed playlists
Will reset date_modified to 0 for playlistPersistenIDs=%{public}@
Migrating to version 400010
Found persisted key '%{public}@' with renewal Date '%{public}@' for song '%{public}@
Purging %lu keys for song '%{public}@': %{public}@
Failed to remove key '%{public}@'. err=%{public}@
Migrating to version 400020
Migrating to version 400025
-[CloudServer _migrateFromUserVersion400025to400030]
Migrating to version 500000
Migrating to version 504000
Error (%{public}@) unarchiving enableICMLConfigData
Found autoEnableICMLConfig=%{public}@
No configuration to determine if iCML should be enabled/disabled
%{public}@ Analyzing %lu user library artists.
%{public}@ MLModel inputs: unique days with added content: %{public}@
%{public}@ MLModel inputs: number of unique albums: %{public}@
%{public}@ MLModel inputs: cumulative song play count: %{public}@
%{public}@ MLModel inputs: number of days since last play: %{public}@
%{public}@ MLModel inputs: average plays per item added: %{public}@
%{public}@ Failed to retrieve library response for artist analysis. err=%{public}@
No DAAP code found for container property: %{public}@
Skipping update for playlist cloud ID: %lu -- time since update = %.fs (min refresh = %llus)
Found %lu subscribed playlists to update for periodic poll.
SagaSubscribedPlaylistUpdater import succeeded: %d
SagaSubscribedPlaylistUpdater import failed: %{public}@
Received non-200 HTTP code: %lu, skipping import.
No playlists to update (based on min refresh interval).
Received distributed notification: %{public}@
Received darwin notification %{public}@
Received unsupported darwin notification %{public}@
Received telephony center notification %{public}@
Ignoring telephony center notification %{public}@ because phone number access is restricted.
First unlock has occured
Subscription status has changed - updating client status
Active user identity has changed.
User identity store has changed.
handleLibraryAuthServiceTokenDidChangeNotification - posting dynamite state change
Cloud authentication status has changed - updating client status
Received music settings changed notification
%{public}@ - Starting authentication - Device registered with CUID and TroveID=%{BOOL}u, canPerformLibraryUpload=%{BOOL}u, requiresDeviceRegistration=%{BOOL}u, enableReason=%d
%{public}@ - Not authenticating ... unable to get properties for specified account
%{public}@ - Not authenticating ... account is not active. DSID=%@
%{public}@ - ICML was manually disabled by the user. Not retrying CloudAuthenticateOperation for reason=%d
%{public}@ - Setting account %{public}@ as the active locker account, dsid=%{public}@, _mergeToCloudLibraryPreference=%d, enableReason=%d finished with error=%{public}@
%{public}@ - shouldTreatSagaAddComputerCallAsFailed is set. Will force SagaAddComputer call to fail.
%{public}@ - Completed authentication completed with status=%d for reason=%d
%{public}@: Registered new cloud service status observer with token: %{public}@.
%{public}@: Tried to remove unknown cloud service status observer with token: %{public}@. Ignoring.
%{public}@: Removed cloud service status observer with token: %{public}@.
%{public}@: %{public}@ originatingClientConnection = %{public}@.
%{public}@: Accepted new client connection: %{public}@.
%{public}@: Client has %{public}@ entitlement. No need to enforce privacy acknowledgement for cloud service capabilities request.
%{public}@: Client connection was interrupted: %{public}@.
%{public}@: Client connection was invalidated: %{public}@.
%{public}@: Found capabilities request operation for severed client connection %{public}@: %{public}@. Cancelling that operation.
%{public}@: Found observation token for severed client connection %{public}@: %{public}@. Forcibly ending observing cloud service status for this observation token.
%{public}@: Handling %{public}@.
%{public}@: Bag was updated: %{public}@.
%{public}@: Subscription status was updated: %{public}@.
%{public}@: Beginning to observe cloud service status.
%{public}@: Stopped observing cloud service status.
%{public}@: Notifying observers of active account changed.
%{public}@: Active account did change. About to notify %llu observer%s.
%{public}@: Notifying client with observation token %{public}@ of updated active account.
%{public}@: Failed to obtain remote proxy to notify of updated active account; error = %{public}@.
%{public}@: Refreshing storefront country code.
%{public}@: No bag was present on the bag monitor.
%{public}@: Requesting bag directly.
%{public}@: Failed to fetch bag with error: %{public}@.
%{public}@: Refreshing storefront identifier.
%{public}@: Encountered error getting properties for active account: %{public}@.
%{public}@: %{public}@
%{public}@: Could not find storefront country code from bag %{public}@; error: %{public}@.
%{public}@: Storefront country code did not change. Skipping invoking observation handlers.
%{public}@: Storefront country code did change: "%{public}@". About to notify %llu observer%s.
%{public}@: Skipping notification of updated storefront country code for client with observation token %{public}@: client connection %{public}@ is not allowed to access restricted information.
%{public}@: Notifying client with observation token %{public}@ of updated storefront country code: "%{public}@".
%{public}@: Failed to obtain remote proxy to notify of updated storefront country code; error = %{public}@.
%{public}@: Could not find valid cloud service capabilities; error: %{public}@.
%{public}@: Cloud service capabilities did not change. Skipping invoking observation handlers.
%{public}@: Cloud service capabilities did change: %{public}@. About to notify %llu observer%s.
%{public}@: Skipping notification of updated cloud service capabilities for client with observation token %{public}@: client connection %{public}@ is not allowed to access capabilities.
%{public}@: Notifying client with observation token %{public}@ of updated cloud service capabilities: %{public}@.
%{public}@: Failed to obtain remote proxy to notify of updated cloud service capabilities; error = %{public}@.
%{public}@: Could not find valid storefront identifier; error: %{public}@.
%{public}@: Storefront identifier did not change. Skipping invoking observation handlers.
%{public}@: Storefront identifier did change: "%{public}@". About to notify %llu observer%s.
%{public}@: Skipping notification of updated storefront identifier for client with observation token %{public}@: client connection %{public}@ is not allowed to access restricted information.
%{public}@: Notifying client with observation token %{public}@ of updated storefront identifier: "%{public}@".
%{public}@: Failed to obtain remote proxy to notify of updated storefront identifier; error = %{public}@.
%{public}@: Failed to retrieve bundle identifier of the requesting application from the audit_token_t; instead, using bundle identifier from %{public}@, i.e. %{public}@.
%{public}@: Failed to retrieve bundle extension record with error: %{public}@.
%{public}@: Requesting application extension %{public}@ (%{public}@) has a containing bundle which is not an application: %{public}@ (%{public}@).
%{public}@: Client is an application extension: %{public}@ (%{public}@). Using bundle identifier "%{public}@" from containing application: %{public}@ (%{public}@).
Sending favorite entity request <%{public}@: %p method=%{public}@ action=%{public}@> for entityType=%{public}@, item storeID:%lld, sagaID:%lld, globalPlaylistID:%{public}@, albumLibraryID=%{public}@, artistLibraryID=%{public}@ timestamp:%{public}@
%{public}@ %{public}@ failed with error: %{public}@
%{public}@ favorite entity permamently failed -- item limit exceeded
%{public}@ Requesting library update because the response contained update-required flag
%{public}@ Skipping library update because the response did not contain update-required flag
%{public}@ Unable to create favorite entity request, skipping...
%{public}@ Operation permanently failed, attempting to remove pending library content...
%{public}@ Processing response for entity type=%{public}@, storeID:%lld, sagaID:%lld, globalPlaylistID:%{public}@, cloudAlbumID=%{public}@, cloudArtistID=%{public}@ with %d added items
%{public}@ Ignoring successful post processing response for favoriting track with sagaID:%lld
%{public}@ Set cloud_library_id=%{public}@ for album with persistentID=%lld with error=%{public}@
%{public}@ Ignoring successful post processing response for favoriting album with sagaID:%{public}@
%{public}@ Ignoring successful post processing response for favoriting playlist with globalPlaylistID:%{public}@, sagaID=%lld
%{public}@ Set cloud_library_id=%{public}@ for item_artist with persistentID=%lld with error=%{public}@
%{public}@ Set cloud_library_id=%{public}@ for album_artist with persistentID=%lld with error=%{public}@
%{public}@ Ignoring successful post processing response for favoriting artist with sagaID:%{public}@
%{public}@ Processing failed response for entity type=%{public}@, storeID:%lld, sagaID:%lld, globalPlaylistID:%{public}@, cloudAlbumID=%{public}@, cloudArtistID=%{public}@
%{public}@ set favorite_state=1, date_favorited=0 for track with persistentID=%lld, storeID:%lld, sagaID:%lld
%{public}@ Could not find track with sagaID:%lld in library
%{public}@ Could not find track with adamID:%lld in library
%{public}@ set favorite_state=1, date_favorited=0 for container with cloudID=%lld, persistentID=%lld with error=%{public}@
%{public}@ Could not find playlist with sagaID:%lld in library
%{public}@ Deleted pending playlist with global id: %{public}@
%{public}@ Failed to delete pending playlist with global id: %{public}@
%{public}@ Could not find a pending playlist to delete with global id: %{public}@
%{public}@ Invalid identifier to favorite entityType=%{public}@, sagaID=%lld, adamID=%lld, gobalPlaylistID=%{public}@
%{public}@ set favorite_state=1, date_favorited=0 for album with persistentID=%lld with error=%{public}@
%{public}@ Could not find album with sagaID=%lld, adamID=%lld
%{public}@ set favorite_state=1, date_favorited=0 for artist with store=%lld with error=%{public}@
%{public}@ set favorite_state=1, date_favorited=0 for album_artist with store=%lld with error=%{public}@
%{public}@ set favorite_state=1, date_favorited=0 for item_artist with cloud_library_id=%{public}@ with error=%{public}@
%{public}@ set favorite_state=1, date_favorited=0 for album_artist with cloud_library_id=%{public}@ with error=%{public}@
%{public}@ set favorite_state=1, date_favorited=0 for track with persistentID=%lld, storeID:%lld, sagaID:%lld finished with status=%{BOOL}u error=%{public}@
%{public}@ Updated in_my_library for track with persistent ID %lld
%{public}@ Failed to update in_my_library for track with persistent ID %lld with error: %{public}@
ICDNetworkAvailabilityService %p - XPC connection from %{public}@[%d]
%{public}@ Received request for user states from client connection %{public}@. forceRefresh=%{BOOL}u
%{public}@ Returning cached user states to client connection %{public}@: %{public}@
%{public}@ Failed to get user states. err=%{public}@
%{public}@ Returning updated user states to client connection %{public}@: %{public}@
%{public}@ Starting server:
%{public}@ Stopping server:
%{public}@ Failed to fetch accounts forcing refresh after user updated notification. err=%{public}@
%{public}@ Updating client connection %{public}@ with user states: %{public}@
%{public}@ _buildUserStateFromUserIdentity: %{public}@
%{public}@ Couldn't fetch subscription status due to privacy restriction - fetching lightweight version instead
%{public}@ Failed to perform lightweight subscription status request. err=%{public}@
%{public}@ Failed to perform subscription status request. err=%{public}@
%{public}@ _fetchAccountsWithForceRefresh: %{BOOL}u
%{public}@ No user identities are found.
%{public}@ _getTokenStatusesForDSIDs:%{public}@, forceRefresh: %{BOOL}u
%{public}@ Failed to fetch token status. err=%{public}@
%{public}@ Fetched token status dictionary: %{public}@
%{public}@ Failed to fetch user state for user %{public}@, refresh triggered by expired token. err=%{public}@
%{public}@ Failed to fetch user state identities, err=%{public}@
%{public}@ Sanitizing user state for client connection %{public}@. hasSiriDataEntitlement=%{BOOL}u
%{public}@: connection invalidated: pid=%u
%{public}@: connection interrupted: pid=%u
%{public}@: Refused new client connection: %{public}@. Entitlements error.
Sending items request <%{public}@: %p method=%{public}@ action=%{public}@> on connection: <%{public}@ %p>
Fetching tracks failed with error: %{public}@
Received playlist globalID: %{public}@ shareURL: %{public}@
SagaPublishPlaylistOperation failed with error: %{public}@
Playlist with cloud id = %llu is not in the database, skipping publish request.
User notification did change settings
DownPinning collection classes %{public}@ and configuration %{public}@
DownPinning %{public}@
RePinning collection classes %{public}@ and configuration %{public}@
RePinning %{public}@
Clearing status for %{public}@
Not performing artwork info operation because power is required
Not performing artwork info operation because of elevated thermal levels
%{public}@ Skipping update because privacy acknowledgement is required
[%{public}@] Loading artwork info for %lu cloud IDs
[%{public}@] flushed %lu play events with result %d isFinalResult: %d
[%{public}@] Unexpected empty store account IDs, finishing.
Found no play activity events for account id: %@ with error: %@
[%{public}@] Adding PAF event %{public}@.
[%{public}@] error (%{public}@ serializing request data (%{public}@).
[%{public}@] error compressing request data
[%{public}@] Flush %d PAF events finished with HTTP code %ld
[%{public}@] MALFORMED PAF EVENTS 
[%{public}@] MALFORMED PAF EVENTS=%{public}@, requestData=%{public}@
[%{public}@] Uploading malformed PAF events
[%{public}@] response is NOT of kind NSHTTPURLResponse
[%{public}@] operation finished with error %{public}@, HTTTP statusCode %ld, parsedResponseBody %{public}@
Failed to remove playActivtyEvents: %@ from table with error: %@
[%{public}@] Failed to resolve a URL request for override headers with error: %{public}@
[%{public}@] Post URL missing from bag
[%{public}@] Failed to load URL bag with error: %{public}@
Determined %lu operations with artworkType=%{public}@ need to resolve artwork URLs before executing.
Sending bulk artwork info request for %lu %{public}@ IDs.
Received %lu artwork info dictionaries for %{public}@ IDs.
Failed to resolve artwork URL for %{public}@ ID: %llu
No store account for source_type %ld, canceling %lu requests
Playlist with pid = %lld is not in the database, skipping add to cloud library.
Starting server...
Stopping server...
Stopped server in %f seconds.
Setting options for apple tv.
Setting options for audio accessory.
Setting options for watch.
Setting options for watch. isMediaSyncingSupported=%{BOOL}u, prohibitLibraryUpload=%{BOOL}u, prohibitArtworkPrefetch =%{BOOL}u, supportsAutomaticEnablingiCloudMusicLibrary=%{BOOL}u
Setting options for phone/ipad/ipod.
Could not get ICML state reason, error=%{public}@
Not allowing automatic enabling of iCML notEnabledInBackup=%{BOOL}u, unsupportedDisposition=%{BOOL}u
isEnablingICMLDestructive=%{BOOL}u, cloudLibraryStateReason=%{public}@, supportsAutomaticEnablingiCloudMusicLibrary=%d
Allowing automatic enabling of iCML, isEnablingICMLDestructive=%{BOOL}u
Refreshing enhanced-audio shared keys
Fetching enhanced-audio offline keys
processing pending key invalidations
ICDServer %p - Attempt to retrieve handler for unsupported configuration [returning nil] - Configuration dsid=%@
ICDServer %p - Unable to get an anonymous listener for %{public}@[%ld] - This usually indicates an attempt to access itunescloudd without the proper entitlements.
CloudService %p Handling notification request that device setup has finished
ICDServer %p - No XPC listener [unknown service]
ICDServer %p - Looking up XPC Listener [%{public}@]
ICDServer %p - Retrieved XPC Listener [%{public}@]
ICDServer %p - Refusing XPC connection %{public}@ from %{public}@[%ld] for service %{public}@[%ld]: not ready.
ICDServer %p - Setting XPC connection %{public}@ from %{public}@[%ld] for service %{public}@[%ld].
ICDServer %p - Refusing XPC connection %{public}@ from %{public}@[%ld] for service %{public}@[%ld].
ICDServer %p - Ignoring notification [Import finished - Not ready]
ICDServer %p - Processing notification [Import finished]
Received library import did finish notification, triggering artist hero update.
ICDServer %p - Ignoring notification [Cellular restriction - Not ready]
ICDServer %p - Processing notification [Cellular restriction]
[CellularDataEnabled] An active account exists, updating Purchase History...
[CellularDataEnabled] An active locker account exists, updating iCloud Music Library...
ICDServer %p - Ignoring notification [Cloud authentication - Not ready]
ICDServer %p - Processing notification [Cloud authentication]
ICDServer %p - Processing notification [Active user identity changed]
ICDServer %p - Processing notification [User identity store changed]
ICDServer %p - Ignoring notification [Allows explicit content - Not ready]
ICDServer %p - Processing notification [Allows explicit content]
Failed to remove explicit playback intents. err=%{public}@
ICDServer %p - Ignoring notification [Allows music videos - Not ready]
ICDServer %p - Processing notification [Allows music videos]
ICDServer %p - Ignoring notification [Subscription status - Not ready]
ICDServer %p - Processing notification [Subscription status]
ICDServer %p - Ignoring notification [Auth service token - Not ready]
ICDServer %p - Processing notification [Auth service token]
ICDServer %p - Ignoring notification [Family deletion event - Not ready]
ICDServer %p - Processing notification [Family deletion event]
ICDServer %p - Ignoring notification [Application install/removal - Not ready]
ICDServer %p - Processing notification [Application install/removal]
ICDServer %p - Ignoring notification [First unlock - Not ready]
ICDServer %p - Processing notification [First unlock]
ICDServer %p - Ignoring notification [Phone number changed - Not ready]
ICDServer %p - Processing notification [Phone number changed]
ICDServer %p - Ignoring notification [Music settings changed - Not ready]
ICDServer %p - Processing notification [Music settings changed]
ICDServer %p - Ignoring notification [Flush Play Activity events request - Not ready]
ICDServer %p - Processing notification [Flush Play Activity events request]
Private listening changed, notifying assistant.
Setting up sigterm handler
Handling SIGTERM event
ICDServer %p - policyType=%d
ICDServer %p - CloudPushNotificationController!
ICDServer %p - _startAncillaryServices begin
ICDServer %p - _startAncillaryServices... 2
ICDServer %p - _startAncillaryServices... 3
ICDServer %p - _startAncillaryServices... 4
ICDServer %p - _startAncillaryServices... 5
ICDServer %p - _startAncillaryServices... 6
ICDServer %p - _startAncillaryServices... 7
ICDServer %p - _startAncillaryServices... 8
ICDServer %p - _startAncillaryServices... 9
ICDServer %p - _startAncillaryServices... 10
ICDServer %p - _startAncillaryServices... 11
ICDServer %p - _startAncillaryServices finished
ICDServer %p - Can complete startup sequence [%{BOOL}u] - deviceUnlocked=%{public}u - deviceSetupComplete=%{public}u
ICDServer %p - _completeStartupSequenceIfNeeded - Nothing to do [blocked]
ICDServer %p - _completeStartupSequenceIfNeeded - Nothing to do [startup sequence completed]
ICDServer %p - Completing server setup ....
ICDServer %p - Server Setup - 2. Services initialized...
ICDServer %p - Server Setup - 3. MediaLibrary filtering setup completed...
ICDServer %p - Server Setup - 4. Services started...
ICDServer %p - Server Setup - 5. Migration completed...
ICDServer %p - Server Setup - 6. Handlers setup...
ICDServer %p - Server Setup - 7. Posting notification that the service is ready
ICDServer %p - Server Setup - 8. Explicit content settings updated...
ICDServer %p - Server Setup - 9. Posting notification that the service is ready
ICDServer %p - Server setup completed
ICDServer %p - _migrateToLatestUserVersion - Migrating library [dsid=%@]
ICDServer %p - _setupMPMediaLibraryFilteringForConfigurations - setting filtering type for default media library]
ICDServer %p - _setupMPMediaLibraryFilteringForConfigurations - setting filtering type for configuration=%{public}@]
ICDServer %p - _updateServerAllowsExplicitContentSettingAutomatically - No action [No active configuration]
ICDServer %p - _updateAllowsExplicitContentSettingAutomatically - userMonitor=nil
ICDServer %p - _updateAllowsExplicitContentSettingAutomatically: userMonitor=%p for dsid=%{private}@ allowExplicit=%{BOOL}u
updating explicit content. dsid=%{private}@, lastWrittenValue=%{BOOL}u, setting allowsExplicitContent=%{BOOL}u
updating explicit content. dsid=%{private}@, lastUploadedValue=%{BOOL}u, setting allowsExplicitContent=%{BOOL}u, automatic=%{BOOL}u
Could not update parental settings to %d - error %{public}@.
parental control settings have not changed - allowExplicitContent %d
User Identity %{public}@ has subscription status %{public}@.
ICDServer %p - _ensureSubscriptionInformationIsUpToDateForConfiguration - No action [No active configuration]
ICDServer %p - _ensureMusicSubscriptionKeysAreAvailableForConfiguration - No action [No active configuration]
Ensuring that we have off-line music subscription keys if the user has a slot
No account properties - skipping subscription key refresh. err=%{public}@
Failed to get current subscription key status - skipping key refresh. err=%{public}@
Offline subscription keys already present for DSID %llu - skipping key refresh
Failed to obtain subscription status - skipping key refresh. err=%{public}@
Subscription not enabled - skipping key refresh
Subscription not enabled - skipping key refresh. status=%{public}@
Subscription refresh complete. status=%{public}@, err=%{public}@
Subscription refresh complete. status=%{public}@
ICDServer %p - Ignoring notification [Account change - Not ready]
ICDServer %p - Processing notification [Account change]
Handling app install changed notification - apps=%{public}@, registration=%{public}@
%{public}@ [Music App Removal] Clearing music preferences
%{public}@ [Music App Removal] %{public}@; Removing cloud music library
%{public}@ [Music App Removal] %{public}@; Removing subscription music
%{public}@ [Music App Removal] %{public}@; Removing other music and music video tracks
%{public}@ [Music App Removal] %{public}@; Found %lu additional tracks to remove from library
%{public}@ [Music App Removal] %{public}@; Failed to allocate pid array - skipping
%{public}@ [Music App Removal] %{public}@; Failed to remove additional tracks
%{public}@ [Music App Removal] %{public}@; Removing empty collections
%{public}@ - [Music App Removal] Failed to remove empty collections
%{public}@ [Music App Removal] %{public}@; Cleaning up artwork
%{public}@ [Music App Removal] %{public}@; Artwork cleanup failed
%{public}@ [Music App Removal] %{public}@; Finished removing all music data
Handling updated bag notification
Checking if url resolution file exists at path '%{public}@'
url resolution file is missing - creating now
Failed to create url resolution file because we couldn't fetch the bag. err=%{public}@
Updating resolution cache file
Failed to update URL resolution cache file. err=%{public}@
Successfully updated URL resolution cache file
ICDServer %p - Starting operation to reload cloud library for secondary accounts]
ICDServer %p - currentPolicy=%d and is not in a supported configuration. Will not attempt to reload cloud library for secondary users]
<Key Refresh> - Setting timer to perform periodic subscription tasks for %llds (value from bag: %llds; bag's server correlation key: %{public}@; server environment: %{public}@).
<Key Refresh> - Performing periodic refresh of subscription status
<Key Refresh> - Skipping periodic subscription refresh because privacy acknowledgement is required
<Key Refresh> - Skipping subscription status refresh [issue retrieving user identities] - error=%{public}@ - userIdentities=%{public}@
<Key Refresh> - Periodic subscription refresh issue for user identity: %@ - error=%{public}@
<Key Refresh> - Periodic subscription refresh complete for user identity: %@
<Key Refresh> - Skipping subscription key refresh complete for user identity: %@ - Subscription status: %{public}@
<Key Refresh> - Refreshing offline HLS keys
<Key Refresh> - Skipping refreshing offline HLS keys because the user is not a subscriber
<Key Refresh> - Skipping offline HLS key refresh because the device does not support it
Updating Media API URL mapping file
Media API URL mapping update completed. err=%{public}@
Updating enhanced audio availability flag
Skipping updating enhanced audio availability because we failed to load the bag. err=%{public}@
Disabling enhanced audio because the configuration is missing
Skipping updating enhanced audio availability because we failed to load subscription status. err=%{public}@
Setting cached enhanced audio availability flag to %{BOOL}u
Failed to obtain subscription status for updating cookies. will be treated as unknown
Removing cookie '%{public}@'
Setting cookie '%{public}@ = %{public}@'
Updating cookie store for content restrictions. explicitContentAllowed=%{BOOL}u, musicVideosAllowed=%{BOOL}u, hasDisabledAppleMusic=%{BOOL}u, isSubscriber=%{BOOL}u
ICDServer %p - _handleFamilyContentDeletionEvent - No action [No active configuration]
Received %llu account pairs for family content removal.
Family content removal (purchaser = %lld, downloader = %lld, family = %lld
ICDServer %p - _updateAirPlaySettingsForConfiguration - No action [No active configuration]
ICDServer %p - Failed to load identity properties. err=%{public}@
Updating AirPlay defaults: isAppleMusicSubscriber=%d, cloudLibraryIsOn=%d
Sending unfavorite entity request <%{public}@: %p method=%{public}@ action=%{public}@> for entityType=%{public}@, item storeID:%lld, sagaID:%lld, globalPlaylistID:%{public}@, albumUniversalLibraryID=%{public}@, artistUniversalLibraryID=%{public}@ timestamp:%{public}@
%{public}@ failed with error: %{public}@
%{public}@ unable to create unfavoriteEntity request, skipping...
%{public}@ permanently failed
Watchdog fired, operation queue contents: %{public}@
Watchdog fired, releasing power assertion: %{public}@
Last artist update time: %{time_t}zd
Elapsed time since last artist hero image update: %g, minimum: %g
Artist hero image update already in progress: scheduling a maximum of one additional update.
Updating all artist hero images...
Skipping update, not enough time has passed since last update.
Searching for artists added since database revision %lld
Found %lu artist(s) and %lu album artist(s) to update
A follow-up artist hero image update already exists, merging artist persistent ids to update.
A follow-up artist hero image update already exists, it should include the specific artist persistent ids.
Artist hero image update already in progress: scheduling a follow-up update.
The artist hero image update that is already in progress will already update all of the requests artists, skipping a follow-up update.
Found zero new artists and zero new album artists to update
Database revision is the same as the last update.
Taking power assertion: %{public}@
Releasing power assertion: %{public}@
Using polling frequency from bag: %ld
Failed to get polling frequency from the URL bag, using default polling frequency: %ld
Failed to receive response for URL bag, using default polling frequency: %ld
Running second artist hero image update
Cancelled after loading URL bag
'an-batch-size' was not in the bag, defaulting to batches of %lld.
'update-interval-seconds' was not in the bag, defaulting to %lld seconds.
Updating artist store IDs using the bulk artist name lookup service (batch size = %@)
Updating artist store IDs using the allArtistImagesMap
Updating artist store IDs using the single artist name lookup service
Failed to load URL bag, skipping artist hero image update
Failed to resolve bulk artist name lookup URL from the library match rules bag, skipping artist hero image upate.
Batching %lu library match requests in to chunks of size %ld.
Bulk library match results: %{public}@
Failed to receive response for bulk artist id look up request after %d seconds, cancelling request
Cancelled after getting latest all artist image map data.
Cancelled after updating album_artist store ids.
allArtistImagesMap.plist (null) needsUpdate: %d
allArtistImagesMap.plist (count = %lu) needsUpdate: %d
Attempting to fetch latest all-artist-images-map
all-artist-images-map-url: %{public}@
Received all artist images map with %lu artist ids.
Failed to fetch all artist images map [HTTP %ld] - error: %{public}@
Failed to receive response for all-artist-images-map after %d seconds, cancelling request
Failed to get 'all-artist-images-map-url'. Cannot fetch map at this time.
Noticed cancel flag while updating artist store ids, stopping...
Cancelled after updating artist store ids.
Noticed cancel flag while updating album_artist store ids, stopping...
Failed to resolve an artist name lookup URL from the library match rules bag, skipping artist hero image upate.
Library match results for '%{public}@': %{public}@
Setting store_id '%lld' for item_artist with name: '%{public}@'
Setting store_id '%lld' for album_artist with name: '%{public}@'
Failed to receive response for artist id look up request after %d seconds, cancelling request
Noticed cancel flag while looking up artist store ids by name, stopping...
Cancelled after looking up artist store ids by name.
Cancelled after gathering artist artwork tokens.
Batching %lu lookup requests in to chunks of size %d.
Sending lookup request: %p
Waiting for lookup request: %p
Received response for lookup request: %p
Failed to receive response for lookup request: %p after %d seconds
Noticed cancel flag while looking up artist hero image URLs, stopping...
Cancelled after looking up artist hero image URLs.
Cancelled while processing artist artwork tokens.
Setting artist hero image artwork_token '%{public}@' for item_artist with pid: %lld (name = %{public}@)
Setting artist hero image artwork_token '%{public}@' for album_artist with pid: %lld (name = %{public}@)
Cancelled after updating artist artwork tokens.
Found %lu artist artwork tokens to download
Creating request for artwork token: %{public}@
Import request for artwork token: %{public}@ failed with error: %{public}@
Found hero image on disk for artwork token: %{public}@, attempting to import into database...
Inserted artist hero image for artwork token: %{public}@
Noticed cancel flag while downloading artist hero images, stopping...
Cancelled after starting downloads for artist hero images.
Enqueued all artist hero images to download.
Updating artist hero images complete.
[Item Artist] Assigned store artist ID %lld to %{public}@
[Item Artist] No store artist id found for: '%{public}@'
[Album Artist] Assigned store artist ID %lld to %{public}@
[Album Artist] No store artist id found for: '%{public}@'
%{public}@ Creating new pending changes coordinator - path=%@
%{public}@ addOrRemovePendingChange: - path=%@
%{public}@ Adding pending changes for operation with operationIdentifier=%{public}@
%{public}@ we already have a pending change for this operation=%p
%{public}@ Removing pending changes for operation with operationIdentifier=%{public}@
%{public}@ Not removing pending changes for operation %p as is no retry identifier
%{public}@ Retrieving pending changes - path=%@
%{public}@ Failed to decode pending changes. err=%{public}@
%{public}@ Failed to decode pending changes archived file with exception: %@
%{public}@ File exists at %{public}@ but we are unable to decode the changes. Clearing all pending changes
%{public}@ Saving pending changes [%lu], [%{public}@] - path=%@
%{public}@ Failed to encode pending changes. err=%{public}@
%{public}@ Adding operation %p (name=%{public}@) with priority %d
%{public}@ Adding background operation %p (name=%{public}@) with priority %d
operations count=%d, backgroundOperations count=%d
cloudServerOperations=%{public}@
%{public}@ - Supported media kinds=%{public}@, Disabled media kinds=%{public}@
%{public}@ - Media importer query filter set to: %{public}@
Cancelling %d downloads
ICDAccountManagerState %p - restoredStatedWithAccountStore: - Restoring from known accounts
ICDAccountManagerState %p - restoredStatedWithAccountStore: - Restoring from all accounts [no known accounts]
ICDAccountManagerState %p - stateForAccounts: active account is not manageable!
ICDAccountManagerState %p - stateForAccounts:baseConfiguration: - activeAccount=%@ - supportedAccounts=%@
ICDAccountManagerState %p - Saving - %@
ICDAccountManagerState %p - Supported configurations is active configuration - dsid=%@
ICDAccountManagerState %p - Supported configurations contains %lu configurations
Sending request for %{public}@ (retryTimeRemaining = %g seconds)
Received error loading %{public}@: %{public}@
Received non-zero status response loading %{public}@: Status=%ld responseURL: %{public}@
Retrying loading %{public}@ in %g seconds
Failed to load %{public}@ after %g seconds
CloudLibrary %p - No active account, returning nil library (which will suspend operation queue).
CloudLibrary %p - Operation of type %{public}@ %p completed with status CloudLibraryOperationStatusSuccess.
CloudLibrary %p - Operation of type %{public}@ %p completed with status CloudLibraryOperationStatusFailed.
CloudLibrary %p - Operation of type %{public}@ %p completed with status CloudLibraryOperationStatusPermanentlyFailed.
CloudLibrary %p - Operation of type %{public}@ %p completed with status CloudLibraryOperationStatusCancelled.
CloudLibrary %p - OPERATION FAILED TO SET STATUS %{public}@ %p
CloudLibrary %p - Background operation of type %{public}@ %p completed with status CloudLibraryOperationStatusSuccess.
CloudLibrary %p - Background operation of type %{public}@ %p completed with status CloudLibraryOperationStatusFailed.
CloudLibrary %p - Background operation of type %{public}@ %p completed with status CloudLibraryOperationStatusPermanentlyFailed.
CloudLibrary %p - Background operation of type %{public}@ %p completed with status CloudLibraryOperationStatusCancelled.
CloudLibrary %p - BACKGROUND OPERATION FAILED TO SET STATUS %{public}@ %p
%{public}@ %p -  decreasePriorityForAllOperations
%{public}@ %p -  Decreasing priority of one of our operations [%{public}@ %p]
%{public}@ %p -  increasePriorityForAllOperations
%{public}@ %p -  Increasing priority of one of our operations [%{public}@ %p]
%{public}@ %p - cancelAllOperations
%{public}@ %p - Cancelling one of our operations [%{public}@ %p]
CloudLibrary %p - Performing pending changes with coordinator: <%{public}@ %p>
CloudLibrary %p - Enqueuing failed operation to the pending changes coordinator: <%{public}@: %p>
CloudLibrary %p - Enqueuing unserviceable operation to the pending changes coordinator: <%{public}@: %p>
CloudLibrary %p - Calling completion block on non-executing, cancelled operation: <%{public}@: %p>
CloudLibrary %p - Connected to library
CloudLibrary %p - Loading URL bag...
CloudLibrary %p - failed to load url bag. err=%{public}@
CloudLibrary %p - Library Bag: %{public}@
CloudLibrary %p - Determined server URL: %{public}@
CloudLibrary %p - No library URL found, invalidating the URL bag and retrying...
CloudLibrary %p - No library URL found.
CloudLibrary %p - No URL bag found
CloudLibrary %p - Service disabled in URL bag.
CloudLibrary %p - Connected to library successfully.
CloudLibrary %p - Failed to connect to library with error: %{public}@
%{public}@ %p -  _executeBlockForAllOperations
%{public}@ %p -  Calling block on one of our operations [%{public}@ %p]
%{public}@ %p -  Ignoring operation which is not ours [%{public}@ %p]
%{public}@ %p -  Calling block on one of our background operations [%{public}@ %p]
%{public}@ %p -  Ignoring background operation which is not ours [%{public}@ %p]
Set item properties response status code: %lu
Set item properties received no response
Set item properties response failed with error: %{public}@
%{public}@ - dealloc
%{public}@ - cancelPendingChangesWithCompletion: - Library=%@ - PendingChangesCoordinator:%@
%{public}@ - cancelOperationsWithCompletion: - Starting...
%{public}@ - cancelOperationsWithCompletion: - Done!
%{public}@ - cancelOperations: - Starting...
%{public}@ - cancelOperations: - _updateCloudLibraryOperation
%{public}@ - cancelOperations: - Done!
%{public}@ - decreasePriorityForAllOperations:
%{public}@ - increasePriorityForAllOperations:
%{public}@ - Updating item play data
%{public}@ - Fetched library DAAP configuration: %{public}@
%{public}@ - Updating playlist play data
%{public}@ = Fetched library DAAP configuration: %{public}@
%{public}@ - Created timer to update item play data
%{public}@ - Uploading item play data since %{time}zd
%{public}@ - Upload item play data operation failed with status: %{public}@
%{public}@ - Skipping item play data upload (minimum time interval not satisfied (%.0f < %.0f)
%{public}@ - Postponing item play data timer due to continued updates
%{public}@ - Created timer to update playlist play data
%{public}@ - Uploading playlist play data since %{time}zd
%{public}@ - Upload playlist play data operation failed with status: %{public}@
%{public}@ - Skipping playlist play data upload (minimum time interval not satisfied (%.0f < %.0f)
%{public}@ - Postponing playlist play data timer due to continued updates
%{public}@ - Creating cloud playlist with initial properties: %{public}@
%{public}@ - ... with cloud tracks: %{public}@
%{public}@ - Creating cloud playlist for %{public}@ with initial properties: %{public}@
%{public}@ - Creating Genius playlist (pid = %lld) with seed ID: %lld
%{public}@ - Adding store item with adam ID: %lld to cloud playlist (pid = %lld, referral albumAdamID = %lld)
%{public}@ - Adding store item with adam ID: %lld to cloud playlist (pid = %lld, referral playlistGlobalID = %{public}@)
%{public}@ - Adding store item with adam ID: %lld to cloud playlist (pid = %lld)
%{public}@ - Adding item with saga ID: %llu to cloud playlist (pid = %lld)
%{public}@ - Adding store item with opaque ID: %{public}@ to cloud playlist (pid = %lld)
%{public}@ - Updating cloud playlist (pid = %lld), setting properties: %{public}@
%{public}@ - Updating cloud playlist (pid = %lld) for %{public}@, setting properties: %{public}@
%{public}@ - Publishing playlist with cloud id = %llu.
%{public}@ - Removing items with cloud ids = %{public}@
%{public}@ - Removing playlists with cloud ids = %{public}@
%{public}@ - Setting artwork on saga playlist (pid = %lld)
%{public}@ - Updating subscribed playlists (reason = %{public}@) with cloud ids = %{public}@
%{public}@ - Received request to add store item with adam ID: %lld (referral albumAdamID = %lld)
%{public}@ - Received request to add store item with adam ID: %lld (referral playlistGlobalID = %{public}@)
%{public}@ - Received request to add store item with adam ID: %lld
%{public}@ - Received request to add store item with opaque ID: %{public}@ from %{public}@
%{public}@ - Received request to add store playlist with global ID: %{public}@
%{public}@ - Setting cloud add to playlist behavior to: %{public}@
%{public}@ - Setting album properties %{public}@ on items with album persistent ID: %lld
%{public}@ - No active locker account, skipping import item artwork for saga ID: %llu
%{public}@ - No active locker account, skipping import screenshot for saga ID: %llu
%{public}@ - No active locker account, skipping import container artwork for saga ID: %llu
%{public}@ - Got load artwork info request for saga IDs: %{public}@
%{public}@ - No WiFi connection, skipping artwork info load.
%{public}@ - Got load artwork info request for container saga IDs: %{public}@
No saga artwork_token for screenshot item with persistent-id = %lld
%{public}@ - Get genius items for saga ID: %llu
%{public}@ - Updating item properties for sagaID %lld. properties=%{public}@
%{public}@ - Issuing immediate property change: %{public}@
%{public}@ - favoriting entity with storeID=%lld, entityType=%{public}@
%{public}@ - favoriting playlist with globalID=%{public}@}
%{public}@ - favoriting entity with cloudID=%lld, entityType=%{public}@
%{public}@ - favoriting album with cloudID=%{public}@}
%{public}@ - favoriting artist with cloudID=%{public}@}
%{public}@ - unfavoriting entity with storeID=%lld, entityType=%{public}@
%{public}@ - unfavoriting entity with cloudID=%lld, entityType=%{public}@
%{public}@ - unfavoriting album with cloudID=%{public}@}
%{public}@ - unfavoriting artist with cloudID=%{public}@}
%{public}@ - unfavoriting playlist with globalPlaylistID=%{public}@}
%{public}@ - Device is plugged in - checking for artwork to download
%{public}@ - Device was unplugged from power - cancelling artwork downloads
%{public}@ - Received request to update cloud library (requestReason = %{public}@), allowNoisyAuthPrompt=%{BOOL}u, isExplicitUserAction=%{BOOL}u
%{public}@ - No WiFi connection, skipping update (requestReason = %{public}@)
%{public}@ - Rescheduling push notification triggered update when WiFi becomes available.
%{public}@ - Skipping update because privacy acknowledgement is required
%{public}@ - Could not initialize saga library
%{public}@ - Could not load user identity properties. error=%{public}@
%{public}@ - Locker bit is not set on the account. Will not updateLibrary for reason=%d, allowNoisyAuthPrompt=%{BOOL}u
%{public}@ - CloudIds are different. oldValue=%{public}@, currentValue=%{public}@}
%{public}@ - Cloud library update already in progress, attaching completion handler.
%{public}@ - Enqueuing update cloud library operation (requestReason = %{public}@)
Not performing artwork update because power is required
%{public}@ - Enqueuing cloud library reset update.
%{public}@ - Posting Saga update in progress changed notification
No subscribed playlist saga ids to update.
Error updating global playlists: %{public}@
CloudService %p - [BecomeActive::Cloud] - Unable to service cloud library request - error=%{public}@.
[BecomeActive::Cloud] Could not get properties for user identity: %{public}@ - error=%{public}@.
[BecomeActive::Cloud] Last library update time: %{time_t}zd
[BecomeActive::Cloud] Elapsed time since last library update: %g, minimum: %g
[BecomeActive::Cloud] Last subscribed containers update time: %{time_t}zd
[BecomeActive::Cloud] Elapsed time since last subscribed containers update: %g, minimum: %g
[BecomeActive::Cloud] Subscribed containers periodic update disabled via bag.
[BecomeActive::Cloud] shouldUpdateAllSubscribedContainers=%{BOOL}u, shouldUpdateSubscribedContainersWithNoLastUpdateTimestamp=%{BOOL}u, shouldUpdateLibrary=%{BOOL}u
[BecomeActive::Cloud] Updating cloud library. databaseRevision=%u, allowNoisyAuthPrompts=%{BOOL}u, reason=%d
[BecomeActive::Cloud] Update saga library completed successfully, updating all subscribed containers...
[BecomeActive::Cloud] Update saga library completed successfully, skipped updating all subscribed containers. Updating all subscribed containers with no last_update now...
[BecomeActive::Cloud] Skipped cloud library update, updating all subscribed containers now...
[BecomeActive::Cloud] Skipped cloud library update and skipped updating all subscribed containers. Updating all subscribed containers with no last_update now...
CloudService %p - updateSagaLibraryWithReason (%d) - Unable to service request for purchases - error=%{public}@
CloudService %p - updateJaliscoLibraryWithReason - Unable to service request for purchases/reason=%d - error=%{public}@
CloudService %p - deauthenticateForConfiguration - Unable to service request for purchases - error=%{public}@
CloudService %p - setCloudAddToPlaylistBehavior (%d) - Unable to service request for purchases - error=%{public}@
CloudService %p - loadIsSagaUpdateInProgressForConfiguration: - Saga initial import: %{BOOL}u. Update in progress: %{BOOL}u
CloudService %p - loadIsSagaUpdateInProgressForConfiguration: - Unable to service cloud library request - error=%{public}@
CloudService %p - loadSagaUpdateProgressForConfiguration: - Saga update progress: %f
CloudService %p - loadSagaUpdateProgressForConfiguration: - Unable to service cloud library request - error=%{public}@
CloudService %p - importItemArtworkForSagaID (sagaID=%lld) - Unable to service request for purchases - error=%{public}@
CloudService %p - importScreenshotForSagaID (sagaID=%lld) - Unable to service request for purchases - error=%{public}@
CloudService %p - importContainerArtworkForSagaID (sagaID=%lld) - Unable to service request for purchases - error=%{public}@
CloudService %p - deprioritizeItemArtworkForSagaID (%llu) - Unable to service cloud library request - error=%{public}@
CloudService %p - deprioritizeScreenshotForSagaID (%llu) - Unable to service cloud library request - error=%{public}@
CloudService %p - deprioritizeContainerArtworkForSagaID (%llu) - Unable to service cloud library request - error=%{public}@
CloudService %p - loadArtworkInfoForSagaIDs: - Sending saga artwork info: %{public}@ - error=%{public}@
CloudService %p - loadArtworkInfoForSagaIDs (%{public}@) - Unable to service cloud library request - error=%{public}@
CloudService %p - loadArtworkInfoForContainerSagaIDs: - Sending saga container artwork info: %{public}@ - error=%{public}@
CloudService %p - loadArtworkInfoForContainerSagaIDs (%{public}@) - Unable to service cloud library request - error=%{public}@
CloudService %p - loadScreenshotInfoForSagaIDs: - Sending saga screenshot artwork info: %{public}@ - error=%{public}@
CloudService %p - loadScreenshotInfoForSagaIDs (%{public}@) - Unable to service cloud library request - error=%{public}@
CloudService %p - loadGeniusItemsForSagaID (%llu) - Unable to service request for cloud library - error=%{public}@
CloudService %p - addGeniusPlaylistWithPersistentID (%lld) - Unable to service request for cloud library - error=%{public}@
CloudService %p - createPlaylistWithPersistentID (%lld, properties=%{public}@): - Unable to service request for cloud library - error=%{public}@
CloudService %p - setPlaylistProperties (properties=%{public}@, forPlaylistPersistentID=%lld) - Unable to service request for purchases - error=%{public}@
CloudService %p - sdk_setPlaylistProperties (properties=%{public}@, forPlaylistPersistentID=%lld) - Unable to service request for purchases - error=%{public}@
CloudService %p - addStoreItemWithAdamIDToPlaylistWithPersistentID (adamID=%lld, persistentID=%lld) - Unable to service request for purchases - error=%{public}@
CloudService %p - addItemWithSagaID (sagaID=%lld, persistentID=%lld) - Unable to service request for purchases - error=%{public}@
CloudService %p - publishPlaylistWithSagaID (%lld) - Unable to service request for cloud library - error=%{public}@
CloudService %p - removePlaylistsWithSagaIDs (%{public}@) - Unable to service request for cloud library - error=%{public}@
CloudService %p - uploadArtworkForPlaylistWithPersistentID (%lld) - Unable to service request for cloud library - error=%{public}@
CloudService %p - updateSubscribedPlaylistsWithSagaIDs (%{public}@) - Unable to service request for cloud library - error=%{public}@
CloudService %p - addStoreItemWithAdamID (%lld) - Unable to service request for cloud library - error=%{public}@
CloudService %p - addStorePlaylistWithGlobalID (%{public}@) - Unable to service request for cloud library - error=%{public}@
CloudService %p - removeItemsWithSagaIDs (%{public}@) - Unable to service request for cloud library - error=%{public}@
CloudService %p - loadLastKnownEnableICMLErrorStatusForConfiguration - Unable to service request for purchases - error=%{public}@
CloudService %p - setItemProperties: (sagaID=%llu, properties=%{public}@) - Unable to service request for purchases - error=%{public}@
CloudService %p - uploadCloudItemPropertiesForConfiguration - Unable to service request for purchases - error=%{public}@
CloudService %p - uploadCloudPlaylistPropertiesForConfiguration - Unable to service request for purchases - error=%{public}@
CloudService %p - setAlbumProperties: (albumID=%llu, properties=%{public}@) - Unable to service request for purchases - error=%{public}@
CloudService %p - sdk_createPlaylistWithPersistentID (%lld, properties=%{public}@) - Unable to service request for cloud library - error=%{public}@
CloudService %p - sdk_addStoreItemWithOpaqueID: - Unable to service request for cloud library - error=%{public}@
CloudService %p - sdk_addItemWithSagaID (sagaID=%lld, persistentID=%lld) - Unable to service request for purchases - error=%{public}@
CloudService %p - favoriteEntityWithStoreID=%lld: - Unable to service request for cloud library - error=%{public}@
CloudService %p - favoritePlaylistWithGlobalID=%{public}@: - Unable to service request for cloud library - error=%{public}@
CloudService %p - favoriteEntityWithSagaID=%lld - Unable to service request for cloud library - error=%{public}@
CloudService %p - favoriteAlbumWithCloudID=%{public}@ - Unable to service request for cloud library - error=%{public}@
CloudService %p - favoriteArtistWithCloudID=%{public}@ - Unable to service request for cloud library - error=%{public}@
CloudService %p - unfavoriteEntityWithStoreID=%lld - Unable to service request for cloud library - error=%{public}@
CloudService %p - unfavoriteEntityWithSagaID=%lld - Unable to service request for cloud library - error=%{public}@
CloudService %p - unfavoriteAlbumWithCloudID=%{public}@ - Unable to service request for cloud library - error=%{public}@
CloudService %p - unfavoriteArtistWithCloudID=%{public}@ - Unable to service request for cloud library - error=%{public}@
CloudService %p - unfavoritePlaylistWithGlobalID=%{public}@ - Unable to service request for cloud library - error=%{public}@
CloudService %p - [BecomeActive::Jalisco] - Unable to service purchase request - error=%{public}@.
[BecomeActive::Jalisco] Last library update time: %{time_t}zd
[BecomeActive::Jalisco] Elapsed time since last library update: %g, minimum: %g
[BecomeActive::Jalisco] Periodic update on app focus disabled via bag.
[BecomeActive::Jalisco] Updating jalisco library...
CloudService %p - removeJaliscoLibraryForConfiguration - Unable to service purchase request - error=%{public}@
CloudService %p - isMediaKindDisabledForJaliscoLibrary: - Unable to service purchase request - error=%{public}@
CloudService %p - loadIsJaliscoUpdateInProgressForConfiguration: - Jalisco initial import: %{BOOL}u. Update in progress: %{BOOL}u
CloudService %p - loadIsJaliscoUpdateInProgressForConfiguration: - Unable to service purchase request - error=%{public}@
CloudService %p - loadSagaUpdateProgressForConfiguration: - Jalisco update progress: %f
CloudService %p - loadJaliscoUpdateProgressForConfiguration: - Unable to service purchase request - error=%{public}@
CloudService %p - importItemArtworkForPurchaseHistoryID(%llu): - Unable to service purchase request - error=%{public}@
CloudService %p - importScreenshotForPurchaseHistoryID(%llu): - Unable to service purchase request - error=%{public}@
CloudService %p - deprioritizeItemArtworkForPurchaseHistoryID(%llu) - Unable to service purchase request - error=%{public}@
CloudService %p - deprioritizeScreenshotForPurchaseHistoryID(%llu) - Unable to service purchase request - error=%{public}@
CloudService %p - Sending purchase history artwork info: %{public}@
CloudService %p - loadArtworkInfoForPurchaseHistoryIDs (%{public}@) Unable to service request for purchases - error=%{public}@
CloudService %p - loadScreenshotInfoForPurchaseHistoryIDs: - Sending purchase history screenshot artwork info: %{public}@ - error=%{public}@
CloudService %p - loadScreenshotInfoForPurchaseHistoryIDs (%{public}@) Unable to service request for purchases - error=%{public}@
CloudService %p - loadBooksForStoreIDs: - Unable to process cloud request [missing DSID]
CloudService %p - loadBooksForStoreIDs %{public}@ - Unable to service request for purchases - error=%{public}@
CloudService %p - hideItemsWithPurchaseHistoryIDs: (purchaseHistoryIDs=%{public}@) - Unable to service request for purchases - error=%{public}@
CloudService %p - setItemProperties: (purchaseHistoryID=%llu, properties=%{public}@) - Unable to service request for purchases - error=%{public}@
CloudService %p - deprioritizeArtistHeroImageForPersistentID: - Unable to service artist image request - error=%{public}@
CloudService %p - deprioritizeAlbumArtistHeroImageForPersistentID: - Unable to service artist image request - error=%{public}@
CloudService %p - updateArtistHeroImagesForConfiguration: - Unable to service artwork request - error=%{public}@
CloudService %p - updateArtistHeroImagesForConfiguration: - Received request to update artist hero images.
CloudService %p - updateArtistHeroImagesForConfiguration: - Skipping artist hero image update (unsupported device)
CloudService %p - %{public}@ - Unable to service artwork request - error=%{public}@
CloudService %p - importArtistHeroImageForPersistentID: - Skipping artist hero import (unsupported device) for persistentID: %lld
CloudService %p - Skipping album artist hero import (unsupported device) for persistentID: %lld
CloudService %p - %{public}@ - Unable to service subscription request - error=%{public}@
CloudService %p - deprioritizeSubscriptionItemArtworkForPersistentID: - Unable to service subscription request - error=%{public}@
CloudService %p - deprioritizeSubscriptionScreenshotForPersistentID: - Unable to service subscription request - error=%{public}@
CloudService %p - loadArtworkInfoForSubscriptionItemPersistentIDs: - Unable to service subscription request - error=%{public}@
CloudService %p - loadArtworkInfoForSubscriptionItemPersistentIDs: - Sending subscription item artwork info: %{public}@ - error=%{public}@
CloudService %p - loadScreenshotInfoForSubscriptionPersistentIDs: - Unable to service request for subscription - error=%{public}@
CloudService %p - loadScreenshotInfoForSubscriptionPersistentIDs: - Sending subscription screenshot artwork info: %{public}@ - error=%{public}@
CloudService %p - loadArtworkInfoForSubscriptionContainerPersistentIDs: - Unable to service request for subscription - error=%{public}@
CloudService %p - loadArtworkInfoForSubscriptionContainerPersistentIDs: - Sending subscription container artwork info: %{public}@ - error=%{public}@
CloudService %p - loadIsUpdateInProgressForConfiguration: Saga [initial import: %{BOOL}u. Update in progress: %{BOOL}u], Jalisco [initial import: %{BOOL}u. Update in progress: %{BOOL}u]
CloudService %p - loadIsUpdateInProgressForConfiguration: - Unable to service purchase request - error=%{public}@
CloudService %p - loadUpdateProgressForConfiguration: - Unable to service purchase request - error=%{public}@
loadMissingArtworkForConfiguration: - Sending request to load missing artwork
CloudService %p - loadMissingArtworkForConfiguration: - Unable to service request for subscription - error=%{public}@
CloudService %p - loadMissingArtworkForConfiguration: - Unable to service request for purchases - error=%{public}@
CloudService %p - Starting to run a subscription status check
CloudService %p - loading subscription status finished with error=%{public}@, not enabling iCML with policy=%d 
CloudService %p - authenticateForConfiguration (startInitialImport=%{BOOL}u, enableCloudLibraryPolicy=%d, isExplicitUserAction=%{BOOL}u) - Unable to service request for cloud library - error=%{public}@
CloudService %p - disableCloudLibraryWithReason (%d) - Unable to service request for cloud library - error=%{public}@
CloudService %p - updatePinnedSubscribedPlaylistsWithConfiguration Unable to service request for cloud library - error=%{public}@
Sending request to update Cloud Library...
Can't update cloud library using current network - skipping
Update Match Library failed with status: %ld
Serializing body dictionary to plist: %{public}@
Compressing plist to path: %{public}@
Failed to serialize body dictionary to plist with error: %{public}@
failed to fetch bag. err=%{public}@
not creating request because url bag key '%{public}@' not found
%{public}@ starting up...
%{public}@ stopping...
%{public}@ Delivering response to remote client for request %@
%{public}@ Failed to obtain remote proxy to deliver subscription status response. error = %{public}@.
%{public}@ - Requesting content taste for invalid reason=%d
%{public}@ - cancelling %d operations and clearing all pending changes
%{public}@  setting criteria to fire next content taste operation
%{public}@  updating criteria to fire next content taste operation at %{public}@
%{public}@  criteria to fire next content taste operation is unchanged
%{public}@  running default task tp update content taste
%{public}@  setting retryState=%d, _backOffIndex%d, backOffSeconds=%d
%{public}@  starting retry operation to post content taste change
%{public}@  we already have a retry operation scheduled
%{public}@ handler is no longer valid. Not running operation=%p
%{public}@ Found %d pending content taste changes to post.
%{public}@ No pending changes for retry task.
%{public}@ change count=%d, contentTasteChange=%{public}@
%{public}@  Operation=%p (identifier=%{public}@ finished with completion=%p, error=%{public}@
%{public}@  response expiration date changed. previous date = %{public}@, updated date = %{public}@
%{public}@  response expiration date changed. old date = %{public}@, new date = %{public}@
%{public}@  retaining _responseExpirationDate=%{public}@
%{public}@  scheduleRetry=%{BOOL}u, isRetryTask=%{BOOL}u, _backOffIndex=%d
%{public}@ - Clearing library for %{public}@
%{public}@ - Clearing library which failed to connect
%{public}@ - Got update library request with reason %{public}@
%{public}@ - Purchase history import disabled via the preference
%{public}@ - No WiFi connection, skipping update (reason = %{public}@)
%{public}@ - Could not initialize jalisco library
%{public}@ - No account DSID - skipping update
%{public}@ - Updating media purchase history - Reason=%{public}@ - isInitialImport=%{BOOL}u - prefetchArtwork=%{BOOL}u, _updateLibraryOperation=%p
%{public}@ - Library update finished.
%{public}@ - Update Jalisco library completed
%{public}@ - Importing artwork and screenshots if relevant [post library update]
%{public}@ - Posting Jalisco update in progress notification
%{public}@ - Update library operation in progress, attaching completion handler.
%{public}@ - Received request to hide purchaseHistoryIDs %{public}@
%{public}@ - Received request to update item with purchaseHistoryID %llu properties: %{public}@
%{public}@ - No active account, skipping import artwork for purchase history ID: %llu
%{public}@ - No active account, skipping import screenshot for purchase history ID: %llu
%{public}@ - Got load artwork info request for %lu purchase history IDs
%{public}@ - No WiFi connection, skipping artwork load.
No purchase history artwork_token for screenshot item with persistent-id = %lld
%{public}@ - Removing purchase history due to user action
%{public}@ - cancelOperationsWithCompletion
%{public}@ - decreasePriorityForAllOperations
%{public}@ - increasePriorityForAllOperations
%{public}@ - Reload media purchase history by adding media kind %d
%{public}@ - Reload media purchase history by removing media kind %d
%{public}@ - Failed to get account properties - DSID=%{public}@ err=%{public}@
%{public}@ - cancelAllOperationsAndWaitForOperationsToFinish - wait=%{BOOL}u
%{public}@ - cancelling _updateLibraryOperation=%p
Incoming XPC connection %{public}@ from %{public}@[%ld] for service %{public}@[%ld].
%{public}@: Client has %{public}@ entitlement. No need to check TCC access for cloud status monitor connection.
Refusing XPC connection %{public}@ from %{public}@[%d] for %{public}@[%ld]: %{public}@.
ICDAccountManagerStateChange %p - configurationChanged: NO [computation option driven]
ICDAccountManagerStateChange %p - Initial configuration [%@] -> Final configuration [%@]
ICDAccountManagerStateChange %p - supportedConfigurationsChanged: NO [computation option driven]
ICDAccountManagerStateChange %p - Initial configurations [%@] -> Final configurations [%@]
%{public}@ Beginning request for AMPMusicArtistNewContentResponse
%{public}@ failed to load bag. err=%{public}@
%{public}@ Executing request for AMPMusicArtistNewContentResponse
%{public}@ Failure to find bag key for artist recommendations url. Bag Key: %{public}@
%{public}@ Sync request failed. err=%{public}@
%{public}@ Sync request failed. Artist new content request returned no data %{public}@
%{public}@ failed to decode response object
Server requested restarting from initial items request, clearing previous pages and trying again...
Failed to remove obsolete items DAAP files with error: %@
Making items request with pagination token: %{public}@
Received non-200 response for items request, failing update from %u to %u
Update from %u to %u was cancelled
Failed to complete items request for update from %u to %u. err=%{public}@
Downloaded items response contains %u tracks -- overall progress = %.0f%% (%u/%u)
Stopping saga import as downloading artists payload failed
Stopping saga import as downloading albums payload failed
Stopping saga import as downloading tracks payload failed
Stopping saga import as downloading playlist payload failed
Stopping saga import as the operation is cancelled
Import failed with error = %{public}@
Found %lu unavailable tracks to unlink with asset protection type = %d
Deleting assets with protection type = %d that are no longer cloud available: %{public}@
Failed to clear location for unavailable tracks with asset protection type = %d
Starting items request from revision:%ul toRevision:%ul
Item update from %u to %u was cancelled
Finished items request from revision:%ul toRevision:%ul with response=%p responseFileCount=%d error=%{public}@
Received non-200 response for container request, failing update from %u to %u
Container update from %u to %u was cancelled
Failed to complete playlist request for update from %u to %u. err=%{public}@
Finished container request from revision:%ul toRevision:%ul with response=%p responseFileCount=%d error=%{public}@
Starting albums request from revision:%ul toRevision:%ul
Server requested restarting from initial albums request, clearing %d previous pages and starting again...
Received non-200 response for albums request, failing update from %u to %u
Album update from %u to %u was cancelled
Failed to complete albums request for update from %u to %u. err=%{public}@
Downloaded albums response contains %u albums -- overall progress = %.0f%% (%u/%u)
Finished albums request from revision:%ul toRevision:%ul with responseData=%p responseFileCount=%d error=%{public}@
Starting artists request from revision:%ul toRevision:%ul
Server requested restarting from initial artists request, clearing %d previous pages and starting again...
Received non-200 response for artists request, failing update from %u to %u
Artist update from %u to %u was cancelled
Failed to complete artists request for update from %u to %u. err=%{public}@
Downloaded artists response contains %u artists -- overall progress = %.0f%% (%u/%u)
Finished artists request from revision:%ul toRevision:%ul with responseData=%p responseFileCount=%d error=%{public}@
Taking power assertion: com.apple.itunescloudd.SagaLoadLyricsOperation
Fetching lyrics for %ld tracks (batch size = %u)
[Bulk] Received %lu lyrics info dictionaries
[Bulk] Loading lyrics from URL '%{public}@'...
[Bulk] Error getting lyrics from %{public}@: %{public}@
[Bulk] Setting lyrics of length: %lu on track with saga ID %lld
[Bulk] No track found for saga ID %lld when attempting to set lyrics.
Releasing power assertion: com.apple.itunescloudd.SagaLoadLyricsOperation
Translated parent persistent-id %llu to cloud-id %llu
Failed to find parent cloud-id for persistent-id %llu
Updating playlist with cloud-id %u, setting trackList: %{public}@ properties: %{public}@
Playlist with pid = %lld does not have a cloud_id in the database, skipping save to cloud library.
Skipping library update because the vendor bundle identifier, %{public}@, did not match the request bundle identifier %{public}@
No playlist saga ids to delete.
Sending delete request <%{public}@: %p method=%{public}@ action=%{public}@> for playlist saga ids: %{public}@
SagaRemovePlaylistOperation failed with error: %{public}@
%{public}@ content taste response for %{public}@ was written to %{public}@ with status=%{BOOL}u
%{public}@ Error %{public}@ creating content taste update directory
%{public}@ Got %lu content taste archives to remove with error %{public}@
%{public}@ Error %{public}@ removing archive at %{public}@
%{public}@ Cached content taste response at %{public}@ was deleted with status=%{BOOL}u, error=%{public}@ 
%{public}@ Could not get DSID for configuration=%p. error=%{public}@
%{public}@ Exception %{public}@ thrown while encoding archive
%{public}@ Exception %{public}@ thrown while decoding archive
Sending item property changes: %{public}@
Bulk set item properties response code: %lu
Bulk set item properties response with error: %{public}@
Play data update succeeded for track with persistent ID: %lld
%{public}@ Starting system service...
%{public}@ Stopping system service...
%{public}@ Forcing library recommendation analysis without a timer.
%{public}@ Scheduling periodic updates every %lld seconds
%{public}@ Failed to create NSData blob from filePath=%{public}@ err=%{public}@
%{public}@ Handle new AMPMusicArtistNewContentResponse from notification finished
%{public}@ Cache Directory URL is nil failed to clear cached recommendations data with path received: %{public}@
%{public}@ Cache Directory URL is nil failed to cache recommendations data with path received: %{public}@
%{public}@ Failed to write to disk the matched recommendations. err=%{public}@
%{public}@ Will not perform recommendations update. The user has disabled Apple Music.
%{public}@ Performing recommendations update on cellular network
%{public}@ User has opted out of artist and shows notifications; recommendations request is skipped.
%{public}@ Updating recommendations
%{public}@ Skipping update because we failed to load account properties. err=%{public}@
%{public}@ Skipping update because the user is not signed in
%{public}@ Skipping update because we failed to obtain the subscription status. err=%{public}@
%{public}@ Skipping update because the user is a subscriber
%{public}@ Library Recommendations Computation Finished
%{public}@ No response model from the server - skipping update
%{public}@ Received New Release Recommendations response, %lu new release albums, recoID: %@.
%{public}@ No recommendations found.
%{public}@ Matched recommendation already created for AdamID: %llu
%{public}@ Failed to remove message %{public}@, err=%{public}@
%{public}@ Removing stale messages for new recommendation update. Removed message: %{public}@
%{public}@ Attempting to create new recommendation message for AdamID: %llu
%{public}@ Beginning Affininity Analysis using MLModel.
%{public}@ No matched results found
%{public}@ Failed to compute scores. err=%{public}@
%{public}@ Found %lu new recommendations: %{public}@
%{public}@ Generated %lu matches, but zero results scored above the model score threshold.
%{public}@ Failed to fetch recommendations model. err=%{public}@
%{public}@ Failed to remove cached MLModel. err=%{public}@
%{public}@ failed to create cache directory structure err=%{public}@
%{public}@ Failed to cache or compile MLModel err=%{public}@
%{public}@ Failed to remove expired message %{public}@
%{public}@ Removed expired message %{public}@
%{public}@ platform lookup failed. err=%@
%{public}@ Unable to create message. There is no store platform data for AdamID: %@
%{public}@ Creating application message for adamID %lld : %{public}@
%{public}@ Failed to serialize local notification data. err=%{public}@
%{public}@ Created new application message %{public}@ for adamID %lld
%{public}@ Failed to save application message %{public}@ for adamID %lld. err=%{public}@
%{public}@ Failed to import lookup responses into media library. err=%{public}@
%{public}@ Unable to retrieve message with identifier %{public}@. err=%{public}@
%{public}@ Unable to get message entries for identifier %{public}@. err=%{public}@
%{public}@ Unable to find priority message.
%{public}@ Unable to update opt-in message entry %{public}@.
%{public}@ Failed to create opt-in message %{public}@. err=%{public}@
%{public}@ Failed to save application message %{public}@. err=%{public}@
%{public}@ Failed to download resources for message %{public}@. err=%{public}@
%{public}@ Failed to remove message with identifier %{public}@. err=%{public}@
No item purchase history ids to delete.
Sending hide items request <%{public}@: %p method=%{public}@ action=%{public}@> for purchase history ids: %{public}@
JaliscoHideItemOperation failed with error: %{public}@
No DAAP code found for item property: %{public}@
Cannot import artwork without artwork token.
Cannot import artwork without an asset URL.
Cannot import artwork on the watch while its not plugged in
Already have original on disk, attempting to import into database...
Not running CloudArtworkImportOperation (%p) as it's is cancelled
Downloading artwork from '%{public}@'
Downloaded artwork successfully from '%{public}@'
Failed to download artwork with HTTP status code %lld (URL = %{public}@)
Finished downloading artwork from '%{public}@' (isCancelled=%{BOOL}u) error=%{public}@
Finished downloading artwork from '%{public}@' (isCancelled=%{BOOL}u)
failed to create image source for resizing image at '%{public}@'
failed to create image destination for resizing image at '%{public}@'
failed to finalize resized image at '%{public}@'
failed to resize image at '%{public}@'
%{public}@ starting ....
%{public}@ stopping ....
%{public}@ starting operation for flush play activity events pendingOperationCount %lld, nextFlushPlayActivityFireSyncInterval %f, _testNextFlushPlayActivityFireSyncInterval %f 
%{public}@ finished flushing play activity events with error %{public}@
%{public}@ Have pending play activity events to flush
%{public}@ Recording play activity events: %@
%{public}@ connection from pid %i was interrupted
%{public}@ connection from pid %i was invalidated
%{public}@ pid %i is not entitled to connect to %s
%{public}@ connection from pid %i %s be accepted
%{public}@ Found postFrequency %f from bag
%{public}@ Did not find postFrequency from bag using default value (%f)
%{public}@ No active user identity - using default value (%f) to update the criteria to flush play activity events
%{public}@ Creating new criteria to fire on %{public}@ with grace period till %{public}@
%{public}@ Not creating a new criteria for flush play activity events nextFlushPlayActivityFireSyncInterval (%f), testNextFlushPlayActivityFireSyncInterval (%f)
%{public}@ Setting criteria to fire the next play activity event on %{public}@
%{public}@ updating current criteria to flush the next play activity event from %{public}@ to %{public}@
%{public}@ Found existing activity to flush play activity events on %{public}@
%{public}@ Loading next play activity flush event to fire on %{public}@
%{public}@ Loading default nextFlushPlayActivityFireSyncInterval to %f
%{public}@ starting xpc activity to flush play activity events
%{public}@ Unknown state
%{public}@ Refreshing shared keys
%{public}@ Failed to fetch the bag. err=%{public}@
%{public}@ Skipping refreshing shared keys because we haven't tried to use them yet
%{public}@ Requesting refresh for key %{public}@
%{public}@ Finished refreshing offline HLS keys
%{public}@ Fetching missing offline keys for downloads
%{public}@ Skipping track '%{public}@' (%llu) because the asset file '%{public}@' doesn't exist or is not a directory
%{public}@ Skipping track '%{public}@' (%llu) because the file '%{public}@' isn't HLS
%{public}@ Skipping track '%{public}@' (%llu) because the failure count of %lu exceeds the retry limit
%{public}@ Found track missing offline key: '%{public}@' (%lld)
%{public}@ Found %lu offline HLS assets to check
%{public}@ Fetching missing offline key for track '%{public}@' (%{public}@)
%{public}@ Fetching offline key for track '%{public}@' (%{public}@)
%{public}@ Finished  track %{public}@ because the file '%{public}@' (%{public}@) isn't HLS
%{public}@ Processing pending key invalidations
%{public}@ Failed to fetch bag to obtain invalidation URLS. err=%{public}@
%{public}@ Finished Invalidating offline keys error=%{public}@
%{public}@ Finished Invalidating offline keys
%{public}@ Failed to invalidate key '%{public}@', adamID=%{public}@
%{public}@ Received wait interval %lu in response to key %{public}@ - cancelling remaining key requests
Sending Books ItemsRequest [<%{public}@: %p method=%{public}@ action=%{public}@>] on Connection: [%p]
Books ItemsRequest retrieved a response: <%{public}@: %p code=%ld, length=%{bytes}lu> -- Code: %d
Books ItemsRequest failed with error: %{public}@
%{public}@ connection from pid %i beginning for service %{public}@.
%{public}@ connection from pid %i was interrupted for service %{public}@.
%{public}@ connection from pid %i was invalidated for service %{public}@.
Can not present dialog for renewing applications, parental controls active
User accepted to renew premissions for all expired bundle identifiers %{public}@
User rejected to renew premissions for all expired bundle identifiers, resetting for %{public}@
Failed to create a CFUserNotification to renew media library access for TCC expiration
%{public}@ Revoking music kit user tokens for application '%{public}@' and user identity %{public}@
Failed to load revocation url from bag. err=%{public}@
%{public}@ Completed revocation of music kit user tokens for application '%{public}@' and user identity %{public}@ error=%{public}@
%{public}@ Completed revocation of music kit user tokens for application '%{public}@' and user identity %{public}@
Revoking Music User Tokens for applications %{public}@ using identity %{public}@.
Failed to revoke Music User Tokens for application %{public}@ with error %{public}@.
Failed to revoke Music User Tokens for applications %{public}@ with error %{public}@.
CloudPendingChangesCoordinator %p - Creating new coordinator - path=%@
CloudPendingChangesCoordinator %p - addPendingChange: - path=%@
CloudPendingChangesCoordinator %p - processPendingChangesUsingLibrary - path=%@ - libraryIdentifier=%@
Processing %lu pending changes...
No pending changes to process.
%lu pending changes failed again, persisting for another time.
CloudPendingChangesCoordinator %p - removeAllPendingChangesWithCompletion - path=%@
CloudPendingChangesCoordinator %p - Retrieving pending changes - path=%@
Failed to decode pending changes. err=%{public}@
Failed to decode pending changes archived file with exception: %@
CloudPendingChangesCoordinator %p - Saving pending changes [%lu] - path=%@
Failed to encode pending changes. err=%{public}@
Device is already registered with CUID and TroveID
Failed to load url bag. err=%{public}@
Failed to register device because url bag is missing the 'cloud-add-computer' key
Sending request to register device
Failed to register device. err=%{public}@
Received response (length = %{bytes}lu)
Register device response: %{public}@
Successfully registered device (CUID: %{public}@, TroveID: %{public}@)
Updating mergeToICMLPreference to %d for activeLockerAccount
CloudLibraryUtilitiesUpdateAccountRemoveEnableICMLErrorReason finished updating (cloudLibraryStateReason=%{public}@) for %{public}@ with error=%{public}@ in %f seconds
Finished updating cloudLibraryStateReason=%{public}@ for %{public}@ with error=%{public}@ in %f seconds
Not updating account with disable iCML reason=%d. wasManuallyDisabled=%{BOOL}u, currentReason=%{public}@
migratorDisposition=%{public}@
preExistingStoreIdentifiers=%{public}@
Failed to load subscription status. error=%{public}@
%{public}@ has AM subscription enabled=%{BOOL}u, Match subscription enabled=%{BOOL}u
sagaOnDiskDatabaseRevision=%d. Loading cloud library for secondary accounts status=%d.
jaliscoOnDiskDatabaseRevision=%d. Loading cloud library for secondary accounts status=%d.
Loading cloud library for secondary accounts status=%d.
Unsupported platform to call CloudLibraryUtilitiesCanLoadICMLForSecondaryAccounts status=%d
Invalid CloudLibraryStateReasonType (%d)
_CloudLibraryUtilitiesUpdateUserIdentityWithReason finished updating (cloudLibraryStateReason=%{public}@) for account [%{public}@] with error=%{public}@ in %f seconds
Sending add item request <%{public}@: %p method=%{public}@ action=%{public}@> for opaqueID: %{public}@
SagaCloudSDKAddOperation failed with error: %{public}@
cloud-add permamently failed -- item limit exceeded
Adding opaqueID %{public}@ to playlist with persistent id %lld (cloud-id %u)
Playlist pid %lld: is_src_remote %d, distinguished_kind %d, created %{public}@
Sending cloud library opt-out for Cloud CUID: %{public}@ TroveID: %{public}@
No Cloud CUID or TroveID, skipping opt-out request.
Cloud library opt-out request failed with non-2xx status code %ld
Cloud library opt-out request failed with error: %{public}@
%{public}@ - Starting to disable cloud library deleteDB=%{BOOL}u, disableActiveLockerAccount=%{BOOL}u, removeSourcePurchaseHistoryForMusicTracks=%{BOOL}u
%{public}@ - Not running DisableCloudLibraryOperation on non standalone wOS platform
%{public}@ - DSID=%{public}@, isActiveLocker=%{BOOL}u
%{public}@ - Removing account %lld as the active locker account finished with error=%{public}@
%{public}@ - Not disabling locker account=%{public}@, _disableActiveLockerAccount=%{BOOL}u, isActiveLocker=%{BOOL}u
%{public}@ - Posting notification [ICCloudClientIsAuthenticatedDidChangeNotification]
%{public}@ - Error (%{public}@) loading account properties. Not removing locker bit from account
%{public}@ - Saga on disk revision: %ld
%{public}@ - Clearing cloud ID for %ld visible playlists.
%{public}@ - Removing %ld remote playlists.
%{public}@ - Removing %ld visible playlists.
%{public}@ - Removing %ld genius mixes.
%{public}@ - Removing saga tracks
%{public}@ - Clearing database revision (%ld)
%{public}@ - Clearing sync database properties to force reset sync.
%{public}@ - Posting cloud library availability did change notification (library became unavailable)
%{public}@ - Removing source purchase history for music and music videos
%{public}@ - Will remove source purchase history for %d tracks
%{public}@ - Finished removing tracks with source purchase history with status=%{BOOL}u, error=%{public}@
%{public}@ - Cancelling any outstanding saga track downloads.
%{public}@ - Clearing saga database properties.
%{public}@ - Deleting database for deauthentication request
%{public}@ - Completed database changes.
%{public}@ - Completed operation.
%{public}@ - setupHandlersWithAccountStateChange
%{public}@ - setupHandlers - No account change on startup [restore - [%@]]
%{public}@ - setupHandlers - Account change on startup [restore - [%@] -> [%@]]
%{public}@ - setupHandlers - Parallel MU setup - State Change=%@
%{public}@ - setupHandlers - Single & Sequential MU setups - State Change=%@
%{public}@ - updateHandlersWithAccountStateChange
%{public}@ - No changes detected - %@
%{public}@ - Change detected: %@
%{public}@ - Supported configurations changed
%{public}@ - Active account changed
%{public}@ - Verifying handlers are active
%{public}@ - activating handler %{public}@
%{public}@ - Changing policy type from %d to %d
%{public}@ - policy type is unchanged (%d)
%{public}@ - Deauthenticating handlers for unsupported accounts
%{public}@ - Unable to deactivate handler with deauthentication [deleting it anyway] - class=%{public}@ dsid=%{public}@ error=%{public}@
%{public}@ - Enabling handlers for supported accounts
%{public}@ - Change processing done [no configurations]
%{public}@ - Handler transition: [%p] -> [%p] - class=%{public}@
%{public}@ - Activating handler %p - class=%{public}@ dsid=%{public}@
%{public}@ - Deactivating handler %p - class=%{public}@ dsid=%{public}@
%{public}@ - Unable to deactivate handler - class=%{public}@ dsid=%{public}@ error=%{public}@
%{public}@ - Handler is no longer active - class=%{public}@ dsid=%{public}@
Sending request: <%{public}@: %p method=%{public}@ action=%{public}@> to URL: %{public}@
Request headers: %{public}@
Downloading response to: %{public}@
Failed to send request to %{public}@. err=%{public}@
Failed to write response data to %{public}@. err=%{public}@
Received request %p response: <%{public}@: %p code=%ld, length=%{bytes}lu>
Response: (HTTP 401) - Not Authenticated
Response: (HTTP 403, DMAP 403) - Request forbidden.
Response: (HTTP 403, DMAP %d) - Cloud DAAP Subscription Lapsed.
Response: (HTTP 403, DMAP %d) - Cloud DAAP Client Expired (client DAAP version is less than the minimum version supported by the server).
Response: (HTTP 403, DMAP %d) - Cloud DAAP Item Limit Exceeded (no additional items may be added to the library).
Response: (HTTP 403, DMAP %d) - Cloud DAAP Temporary Disconnect Requested.
Will retry request in %lu seconds
Response: (HTTP 403, DMAP %lu) - Unknown code.
Response: (HTTP 403) - Response Missing DMAP Status Code
Unhandled Response: (HTTP %lu)
Parsed response data as DMAP error: %{public}@
Unhandled Response: (HTTP %lu)
Raw response data: %{public}@
Received no response for request %p, error %{public}@
Request timed out: %{public}@
Unable to connect, current state: %ld
No library bag key. Failed to determine database ID.
Failed to fetch bag. err=%{public}@
Cloud database: %{public}@ (DatabaseID = %u)
Failed to load database ID, bag library: %{public}@
Playlist with pid = %lld is not in the database, skipping upload of playlist artwork to cloud library.
Playlist with pid = %lld does not have a cloud_id in the database, skipping upload of playlist artwork to cloud library.
Playlist with pid = %lld does not have user set playlist artwork in the database, skipping upload of playlist artwork to cloud library.
SagaUploadPlaylistArtworkOperation failed -- No artwork exists at: %{public}@
SagaUploadPlaylistArtworkOperation failed -- Artwork is zero bytes at: %{public}@
SagaUploadPlaylistArtworkOperation failed -- Missing DSID
SagaUploadPlaylistArtworkOperation failed -- Missing one required parameter: CUID (%{public}@) / TroveID (%{public}@)
SagaUploadPlaylistArtworkOperation cancelled -- After preparing to initiate artwork upload
Failed to get downloadRequestsURL
Failed to get uploadResponsesURL
Backing off before sending downloadRequestsRequest for %u ms
SagaUploadPlaylistArtworkOperation cancelled -- After initiating artwork upload
Received cloudID that does not match the one we initiated the asset upload for: %llu
Work item did not include upload-info and response-data, failing upload
SagaUploadPlaylistArtworkOperation cancelled -- After downloading work items
Uploading artwork asset using info: %{public}@
Artwork upload failed with error: %{public}@
Backing off before sending uploadResponsesRequest for %u ms
Backing off before sending second downloadRequestsRequest for %u ms
Download request phase 2 did not have all-work-completed=true: %{public}@
Received unknown response for download request phase 2: %{public}@
Received http %ld response when uploading artwork asset.
Unknown required client generated header: %{public}@
uploadTask failed: %{public}@. %{public}@
Transmitting image
Not enough information to upload artwork asset.
Received an error loading response for %{public}@: %{public}@
Received response with error: Status-%ld when loading URL: %{public}@
Retrying loading %{public}@ URL in %ld milliseconds
Failed to load %{public}@ URL after %g seconds
failed to fetch bag key '%{public}@. err=%{public}@
Compressing items to upload to path: %{public}@
%{public}@ - Cancelling update...
%{public}@ - Query Filter: %{public}@
%{public}@ - Server database revision: %u
%{public}@ Skipping initial import on non standalone wOS platform
%{public}@ - Received error when doing an update request: %{public}@
%{public}@ - On-disk database revision: %u
%{public}@ - Importer: <%{public}@ %p>
%{public}@ - <%{public}@ %p> required: %gs to process
%{public}@ - On-disk database revision is the same as the server revision, skipping update...
%{public}@ - No database revision to update to.
%{public}@ - No library for import.
%{public}@ - JaliscoNeedsUpdateForTokens is YES, forcing a full token refresh.
%{public}@ - Supported media kinds are different, forcing a full token refresh. lastSupportedMediaKinds=%{public}@, currentSupportedMediaKinds=%{public}@
%{public}@ - Import failed with error = %{public}@
No subscription artwork_token for item with persistent-id = %lld
%{public}@ - Received %lu artwork info lookup dictionaries for lookup operation in  %{public}@ IDs.
%{public}@ - Failed to fetch artwork info lookup in %{public}@ ID: %llu
%{public}@ - Failed to remove the shared enhanced audio keys. err=%{public}@
%{public}@ - Active account is nil, yet there are subscription tracks in the database... removing source now.
%{public}@ - Remove source failed with error: %{public}@
[%{public}@] Sending cloud-add request <%{public}@: %p method=%{public}@ action=%{public}@>
[%{public}@] failed with error: %{public}@
Unable to create cloud-add request, skipping...
Operation permanently failed, attempting to remove pending library content...
Cloud-add request for adam ID = %lld
Updating in_my_library for cloud-add success.
Updating in_my_library for cloud-add failure.
Cloud-add request for playlist global ID = %{public}@
Updating playlist with persistent-id %lld, setting cloud-id to %lld
Deleted pending playlist with global id: %{public}@
Failed to delete pending playlist with global id: %{public}@
Could not find a pending playlist to delete with global id: %{public}@
[SagaCloudAddItemToPlaylistOperation] Adding adam-id %lld to playlist with persistent id %lld (cloud-id %u)
[SagaCloudAddItemToPlaylistOperation] Playlist pid %lld: is_src_remote %d, distinguished_kind %d, created %{time}zd
Cloud-add request for adam ID = %lld / container_pid = %lld
[%{public}@] Found %lu track(s) to update in_my_library (based on album store id)...
[%{public}@] Found %lu track(s) to update in_my_library...
[%{public}@] Updated in_my_library for track with persistent ID %lld
[%{public}@] Failed to update in_my_library for track with persistent ID %lld with error: %{public}@
Boosting priority of artwork download (identifier = '%{public}@' type = %{public}@ source = %{public}@)
Decreasing priority of artwork download (identifier = '%{public}@' type = %{public}@ source = %{public}@)
%{public}@ %s operations in coordination with media downloads
%{public}@: Operation was cancelled upon beginning execution. Aborting.
%{public}@: Request is already finished. Skipping running completion logic a second time.
%{public}@: %{public}@.
%{public}@: Encountered error: %{public}@.
%{public}@: Did complete privacy prompt with status: %{public}@.
%{public}@ received new token '%{public}@'
Received push notification on topic "%{public}@": %{public}@
Push notification came from alternate environment, dropping notification from topic "%{public}@": %{public}@
Ignoring push notification for an account that is not the active account. accountDSID=%lld, activeAccountDSID=%lld
Unknown push topic '%{public}@'
%{public}@ Network reachability changed to available - updating push registration if needed
%{public}@ Updating push notification registration
%{public}@ No APNS token available - skipping registration for now
%{public}@ Finished push registration
%{public}@ We already have an operation enqueued to handle push registration
%{public}@ Failed to fetch bag configuration. error=%{public}@
%{public}@ Creating new APNS connection. %{public}@
%{public}@ Registering for push notifications. environment=%{public}@
%{public}@ Failed to create the push connection
%{public}@ Updating push registration for configuration %{public}@
%{public}@ Failed to get properties for user identity %{public}@. err=%{public}@
%{public}@ Not registering for push notifications because privacy acknowledgement is required for media
%{public}@ Push notification registration up to date for configuration %{public}@
%{public}@ Registering updated push token %{public}@
%{public}@ Finished registering push token. err=%{public}@, statusCode=%d
%{public}@ Registering updated media types: %{public}@
%{public}@ Finished registering push token. err=%{public}@, statusCode=%{public}ld
%{public}@ received accounts changed notification - updating push notifications
%{public}@ Received saga push notification with no DSID - using active account. userInfo=%{public}@
%{public}@ Ignoring saga push message because we failed to load account properties. err=%{public}@
%{public}@ Ignoring saga push message because the account no longer has icml enabled
%{public}@ Ignoring saga push message for an inactive account
%{public}@ Received unhandled saga push action. userInfo=%{public}@
%{public}@ Received jalisco push notification with no DSID - using active account. userInfo=%{public}@
%{public}@ Ignoring jalisco push message because we failed to load account properties. err=%{public}@
%{public}@ Ignoring jalisco push message for an inactive account
Received update request to media types: %{public}@
Ignoring push notification since it did not contain any supported media types
%{public}@ Received unhandled jalisco push action. userInfo=%{public}@
[Lease] - Posting darwin notification for lease end'
Unknown for-you module identifier %d
%{public}@ Received unsupported store push notification - ignoring. userInfo=%{public}@
%{public}@ No aps payload - ignoring push %{public}@
%{public}@Received legacy banner sync payload version - ignoring push %{public}@
%{public}@Received inApp messages push - syncing now
%{public}@Failed to process incoming sync push message. err=%{public}@
%{public}@Received unsupported in-app sync payload version - ignoring push %{public}@
Warning: Invalid response data (code: %08x, length: %lu, encodedLength: %lu)
Unhandled code in response: %c%c%c%c
Login session ID: %lu
Unhandled code in login response: %c%c%c%c
Server revision number: %d
Unhandled code in update response: %c%c%c%c
Unhandled code in authorized account token response: %c%c%c%c
Unhandled code in bulk cloud artwork info response: %c%c%c%c
Unhandled code in bulk cloud lyrics info response: %c%c%c%c
Unhandled code in cloud artwork info response: %c%c%c%c
Unhandled code in control interfaces response: %c%c%c%c
Unhandled code in control prompt response: %c%c%c%c
Unhandled code in deleted item ID listing response: %c%c%c%c
Unhandled code in dictionary collection: %c%c%c%c
Unhandled code in editing command response: %c%c%c%c
Authorized DSIDs revision code: %d
Returned count: %d
Unhandled code in items response: %c%c%c%c
Unhandled code in listing collection response: %c%c%c%c
Unhandled code in browse listing response: %c%c%c%c
Unhandled code in item ID array response: %c%c%c%c
Unhandled code in play status response: %c%c%c%c
Unhandled code in item response: %c%c%c%c (%u bytes long)
%{public}@ Received IDS message %lu:'%{public}s' from ID %{public}@
%{public}@ Successfully sent response message; responseMessageIdentifier = %{public}@.
%{public}@ Failed to send response message with error = %{public}@.
%{public}@ Received IDS message of unknown type %lu:'%{public}s' from ID %{public}@
%{public}@ No client identifier or version was specified in the ICAppleMusicAPITokenRequest instance. Falling back to default client identifier for daemon: %{public}@/%{public}@.
%{public}@ Performing token request %{public}@ and %{public}@.
%{public}@ Reporting completion for token request %{public}@ with response: %{public}@.
%{public}@ Encountered error trying to request Developer Token: %{public}@.
%{public}@ Successfully retrieved Developer Token.
%{public}@ Encountered error trying to request Music User Token: %{public}@.
%{public}@ Started IDS service with name %{public}@.
%{public}@ Stopped IDS service with name %{public}@.
Job Fired: SagaDeferredPushUpate (satisfied = %d)
Saga deferred push update failed with error %{public}@, trying again in an hour.
Saga deferred push update job not satisfied, trying again in an hour.
Job Fired: JaliscoMediaPeriodicPoll (satisfied = %d)
Jalisco media periodic poll update failed with error %{public}@, trying again tomorrow.
Jalisco media periodic poll update job was not satisfied, trying again tomorrow.
Job Fired: JaliscoMediaDeferredPushUpate (satisfied = %d)
Jalisco media deferred push update failed with error %{public}@, trying again in an hour.
Jalisco media deferred push update job was not satisfied, trying again in an hour.
No handler for BTA job named: %{public}s
%{public}@ - Updating cloud library operation (reason = %{public}@), isInitialImport=%{BOOL}u, isExplicitUserAction=%{BOOL}u
%{public}@ - Skipping initial import on non standalone wOS platform
%{public}@ - Preparing for initial library update...
%{public}@ - Failed to register device, bailing on initial library update
%{public}@ - Cancelled after registering device
%{public}@ - self.uploadResponseStatus=%d, treating as a hard failure
%{public}@ - self.uploadResponseStatus=%d, treating as a temporary failure
%{public}@ - Cancelled after uploading library metadata
%{public}@ - Cancelled after preparing library for cloud import
%{public}@ - finished with status=%d, failureReason=%{public}@
%{public}@ - Skipping _uploadLibrary because com.apple.itunescloudd:DisableLibraryUpload is set to YES
%{public}@ - Setting "should-upload" to true because MLCloudLibraryPrefersToMerge is set to YES
%{public}@ - Setting "should-upload" to true because com.apple.itunescloudd:ForceLibraryUnification is set to YES
%{public}@ - Found %lu songs to upload from query: %{public}@
%{public}@ - Error creating updateRequest.
%{public}@ - Sending upload library request: <%{public}@ %p>
%{public}@ - Got upload library response: <%{public}@ %p>
%{public}@ - Upload library response body: %{public}@
%{public}@ - Determined upload URL: %{public}@
%{public}@ - Failed to open file for writing library upload metadata plist with error: %{public}@
%{public}@ - Writing library upload metadata to plist at: %{public}@
%{public}@ - Found %lu playlists to upload from query: %{public}@
%{public}@ - Found zero playlists to upload.
%{public}@ - Determined results URL: %{public}@
%{public}@ - Saved results plist to: %{public}@
%{public}@ - Received empty response when getting match results.
%{public}@ - Importing cloud-ids failed with error: %{public}@
%{public}@ - Failed to import cloud-id mapping.
%{public}@ - Received non-200 response when getting match results: %{public}@ error: %{public}@
%{public}@ - Failed to determined results URL
%{public}@ - Received non-200 response when uploading library: %{public}@ error: %{public}@
%{public}@ - Failed to determined upload URL, skipping upload
%{public}@ - Removing %lu items that do not have a cloud id.
%{public}@ - Removing %lu playlists that do not have a cloud id.
%{public}@ - Server response indicates the subscription has lapsed
%{public}@ - Update response contained add to playlist behavior: %{public}@
%{public}@ - Received error when doing a library update request: %{public}@
%{public}@ - Failed to get a non-zero server database revision.
%{public}@ - On-disk database revision is the same as the server database revision, but force update is TRUE.
%{public}@ - On-disk database revision is the same as the server database revision, skipping update.
%{public}@ - shouldTreatInitialSagaImportAsFailed is set. Will force initial import to fail.
%{public}@ - Setting initial user version: %lli
%{public}@ - Posting cloud library availability did change notification (library became available)
%{public}@ - Triggering post-unification playlist artwork upload for playlist persistentID: %lld
%{public}@ - Error importing cloud library payload. Will treat as permanent failure
%{public}@ - Could not create determineResultsURLRequest
%{public}@ - Determine result URLs response: %{public}@
%{public}@ - Failed to determine result URLs with server status code: %ld response: %{public}@
%{public}@ - Failed to determine result URLs with unknown error: %{public}@
%{public}@ - Clearing temporary item cloud ids.
%{public}@ - Clearing temporary container cloud ids.
%{public}@ - Uploading is not supported, no temporary cloud ids to clear.
ICDAccountManager %p - init - Unable to retrieve accounts [empty accounts for restoration fallback] - error=%{public}@
ICDAccountManager %p - init - _state=%@
ICDAccountManager %p - Unable to update state [No state change built]
ICDAccountManager %p - No account changes detected - %@
ICDAccountManager %p - No state changes detected - %@
ICDAccountManager %p - Changing policy type currentValue=%d, newValue=%d
ICDAccountManager %p - policy type is unchanged currentValue=%d
ICDAccountManager %p - Unable to compute state change [Error retrieving store accounts] - error=%{public}@
%{public}@: Calling delegate to update user state, home user settings changed
%{public}@: Calling delegate to update user state, library authentication token changed
%{public}@: Calling delegate to update user state, store account properties changed
%{public}@: Calling delegate to update user state, identity store changed
%{public}@: Calling delegate to update user state, subscription status changed
%{public}@: Calling delegate to update user state, active user identity changed
%{public}@: Calling delegate to update user state, cloud authentication changed
%{public}@: Calling delegate to update user state, music settings changed
%{public}@: Skipping content tast update because privacy acknowledgement is required
%{public}@ invalidating cached response
%{public}@ preparing cached response with date %{public}@, revisionID %llu
[%{public}@] finished with response=%{public}@, error=%{public}@, responseErrorCode %ld
[%{public}@] Error getting sync url
[%{public}@] Error %{public}@ getting bag for identity %{public}@
[71542113: %{public}@] Adding content taste item=%{public}@. actionTimestampMillis=%lld
%{public}@ prepared %{public}@ content taste update items with expiration date %{public}@, revisionID %llu, isCached %d from server response
Updating content taste for %lu items
Removing [Count:(%lu), items:(%@)] non media items from import list
processing tracks with pendingItemCount: %lu, currentBatchCount: %lu for property: %@
Track with storeItemID: %lld, subscriptionStoreItemID: %lld, persistenID: %lld for property: %@ will be imported to include subscription data source
Track with storeItemID: %lld, subscriptionStoreItemID: %lld, persistenID: %lld for property: %@ has a storeSagaID: %lld and will not be updated
Track with storeItemID: %lld, subscriptionStoreItemID: %lld, persistenID: %lld, liked_state: %lld for property: %@ is imported and has the correct liked state
Track with storeItemID: %lld will be imported
Updated liked state to: %lld for track with persistenID:%lld
Error updating liked state to: %lld for track with persistenID:%lld
processing albums with pendingItemCount: %lu, currentBatchCount: %lu
Album with albumStoreID: %lld, persistenID: %lld will be imported to include subscription data source
Album with storeItemId: %lld, albumPid: %lld, has storeSagaID: %lld and will not be updated
Album with storeItemId: %lld, albumPid: %lld, liked_state: %lld is imported and has the correct liked state
Album with storeItemID: %lld will be imported
Updated liked_state to:%lld for album with albumPid:%lld
Error updating liked_state to:%lld for album with albumPid:%lld
updated [tracks:(%lu) albums:(%lu)] new items to import[count:(%lu) items:(%@)]
Error importing %lu tracks to the library. %@
Imported %lu mediaItems for %lu storeAdamIds
Not updating liked_state for track with persistentID: %lld, storeAdamID: %lld as it has a valid storeSagaID: %lld
StoreAdamIds (%@) are marked as non-importable and will not be retried
Error updating StoreAdamIds (%@) as non-importable
Finished updating media taste for tracks/albums in %f seconds
Updating content taste for %lu global playlists
processing playlists with pendingplayListCount: %lu, currentBatchCount: %lu
Container with PlaylistGlobalId: %@, persistentID: %lld, liked_state: %lld is imported and has the correct liked state
Updated liked_state to:%lld for playlist with playlistID:%lld
Error updating liked_state to:%lld for playlist with playlistID:%lld
Playlist Import [Count:(%lu) - Ids:(%@)]
Error %{public}@ adding global playlists
global playlist %{public}@ was not imported
Finished updating media taste for global playlists in %f seconds
Entity with persistenID: %lld, liked_state: %lld for property: %@ is imported and has the correct liked state
Entity with persistenID: %lld is imported and liked state updated from: %lld to: %lld for property: %@
Entity with persistenID: %lld is imported and liked state could not be updated from: %lld to: %lld for property: %@
Updating liked state for entity with persistenID: %lld of type %@ is not supported
Sending container property changes: %{public}@
Bulk set containers properties response code: %lu
Bulk set containers properties failed with error: %{public}@
Play data update succeeded for container with persistent ID: %lld
Updating using connection: <%{public}@ %p>
Setting initial user version: %lli
Sending request %p to set add to playlist behavior to %{public}@
%p received response status code: %lu
%{public}@: Cancelling %{public}@.
%{public}@: Bypassing enforcement of privacy acknowledgement.
%{public}@: Operation was cancelled right before enqueuing privacy prompt operation: %{public}@. Aborting.
%{public}@: Performing %{public}@.
%{public}@: Requesting bag using %{public}@.
%{public}@: Did complete bag request. Encountered error: %{public}@.
%{public}@: Did complete bag request. Received bag %{public}@ (serverCorrelationKey: %{public}@; serverEnvironment: %{public}@).
%{public}@: Requesting properties for %{public}@.
%{public}@: Did complete user identity properties request. Encountered error: %{public}@.
%{public}@: Did complete user identity properties request.
%{public}@: Requesting subscription status using %{public}@.
%{public}@: Did complete %{public}@. Encountered error: %{public}@.
%{public}@: Did complete %{public}@. Received subscription status response %{public}@.
%{public}@: Did complete request with error: %{public}@.
%{public}@: Did complete request; capabilities: %{public}@.
%{public}@ Music app is installed - starting a content taste update operation
%{public}@ Music app is uninstalled - clearing all content taste handlers
%{public}@ updating content taste for media items
%{public}@ Could not get DSID for configuration=%p, error=%{public}@
%{public}@ Music app is not installed - not running content taste update operation for item %d, id %lld
%{public}@ Cannot update content taste for item type %d with storeId=%lld, configuration=%{public}@
%{public}@ Music app is not installed - not running content taste update operation for playlist %{public}@
%{public}@ Cannot update content taste for item with globalPlaylistID=%{public}@, configuration=%{public}@
%{public}@ Posting content taste for item=%{public}@
%{public}@ got connection request from pid %i
%{public}@ pid %i is not entitled to connect to content taste update service
%{public}@ Could not get DSID from configuration=%p, error=%{public}@
%{public}@ Found %d user identities, error=%{public}@
%{public}@ not processing pending changes as music app is not installed
Setting up artwork cache directory.
Error creating directory. path=%{public}@ error=%{public}@
Error removing item path=%{public}@
Artwork cache setup complete.
No valid album item properties to set, skipping updates to cloud library.
Sending edit request for %lu items
Set album item properties response: %lu
Set album item properties received no response
Set album item properties response with error: %{public}@
Album with pid = %lld has zero tracks with cloud_ids in the database, skipping updates to cloud library.
Album with pid = %lld has zero tracks in the database, skipping updates to cloud library.
Album with pid = %lld is not in the database, skipping updates to cloud library.
Appending cloud-id %lld to playlist with cloud-id %u
Updating playlist with cloud-id %u, setting trackList: %{public}@
Automatic Downloads are %{BOOL}u.
Could not get account for DSID=%lld. Automatic Downloads are %{BOOL}u
Could not get active account. Treating automatic downloads as disabled
Track with cloud-id %lld is already in the library, no updates needed...
Updating track with persistent-id %lld, setting cloud-id to %lld
Found %lu adam ids that didn't map to a track without a cloud-id, attempting with cloud-id now...
Found cloud-id already in library: %lld
The server returned cloud-ids that are not in the database, but should be: %{public}@
No item saga ids to delete.
Sending delete request <%{public}@: %p method=%{public}@ action=%{public}@> for item saga ids: %{public}@
SagaRemoveItemOperation failed with error: %{public}@
Device does not support ArtistImageRequestHandler
Skipping artist hero image update due to insufficient network conditions
ICDBackgroundTaskManager %p - startPeriodicPolling
ICDBackgroundTaskManager %p - startPeriodicPolling - Setting timer to perform periodic poll for %llds (+/- %llds)
ICDBackgroundTaskManager %p - periodicPolling - Ignoring activity [State != Run]
ICDBackgroundTaskManager %p - periodicPolling - Ignoring polling [No configurations]
ICDBackgroundTaskManager %p - periodicPolling - Performing periodic sync
ICDBackgroundTaskManager %p - periodicPolling - Failed to update %@ %p [error] - error=%{public}@
ICDBackgroundTaskManager %p - periodicPolling - Updated %@ %p [no error]
ICDBackgroundTaskManager %p - scheduleTaskOfType:forConfiguration: - newTask=%{public}@ - currentTasks=%@
ICDBackgroundTaskManager %p - scheduleTaskOfType:forConfiguration: - Task already on-going [%{public}@]
ICDBackgroundTaskManager %p - _restoreCurrentTasks - No state to restore
ICDBackgroundTaskManager %p - _restoreCurrentTasks - Restoring current tasks failed - error=%{public}@
ICDBackgroundTaskManager %p - _restoreCurrentTasks - State restored [%lu tasks] - tasks=%@
ICDBackgroundTaskManager %p - _saveCurrentTasks - Saving current tasks failed - error=%{public}@
ICDBackgroundTaskManager %p - _saveCurrentTasks - State saved [%lu tasks] - tasks=%@
ICDBackgroundTaskManager %p - scheduleTask - taskName=%@
ICDBackgroundTaskManager %p - scheduleTask - Unable to perform asynchrounous work [%{public}@]
ICDBackgroundTaskManager %p - scheduleTask - Task failed [%{public}@]
ICDBackgroundTaskManager %p - scheduleTask - Task succeeded [%{public}@]
ICDBackgroundTaskManager %p - scheduleTask - Unable to force task termination [%{public}@]
ICDBackgroundTaskManager %p - Unregistering task: %@
ICDBackgroundTaskManager %p - startPeriodicPolling -  Adjusting bag refresh interval of %lldmin --> 7 days
ICDBackgroundTaskManager %p - Job Fired: sagaDeferredPushUpate [%{public}@]
ICDBackgroundTaskManager %p - sagaDeferredPushUpate - Failed - error=%{public}@
ICDBackgroundTaskManager %p - sagaDeferredPushUpate - Succeeded
ICDBackgroundTaskManager %p - Job Fired: jaliscoDeferredPushUpate [%{public}@]
ICDBackgroundTaskManager %p - jaliscoDeferredPushUpate - Failed - error=%{public}@
ICDBackgroundTaskManager %p - jaliscoDeferredPushUpate - Succeeded
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/PrivateFrameworks/WatchListKit.framework/WatchListKit
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
ttsm
CRea
rsmc
nnac
anac
lnac
spac
hsac
prac
sfac
svac
cvac
saac
raac
efac
evac
uQec
QMec
QNec
iasa
dbmc
sbmc
tbmc
mbmc
gnac
kmmc
csac
tnac
tsac
usac
SGec
pnac
lpac
ttsm
stsm
CRea
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>22A380007</string>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>itunescloudd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.itunescloudd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>itunescloudd</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14E6097d</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.4</string>
<key>DTSDKBuild</key>
<string>20E5212d</string>
<key>DTSDKName</key>
<string>iphonesimulator16.4.internal</string>
<key>DTXcode</key>
<string>1430</string>
<key>DTXcodeBuild</key>
<string>14E6097d</string>
<key>MinimumOSVersion</key>
<string>16.4</string>
<key>NSHumanReadableCopyright</key>
<string>Copyright 
 2020 Apple Inc. All rights reserved.</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>adi-client</key>
<string>409835401</string>
<key>application-identifier</key>
<string>com.apple.itunescloudd</string>
<key>aps-connection-initiate</key>
<true/>
<key>backupd-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>data-allowed-write</string>
<string>spi</string>
</array>
<key>com.apple.PairingManager.Read</key>
<true/>
<key>com.apple.PairingManager.Write</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.accounts.inactive.fullaccess</key>
<true/>
<key>com.apple.atc.private</key>
<true/>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.coremedia.allow-protected-content-playback</key>
<true/>
<key>com.apple.developer.homekit</key>
<true/>
<key>com.apple.developer.networking.multipath</key>
<true/>
<key>com.apple.homekit.private-spi-access</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.networkd.set_source_application</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>CLIENT_ENTITLEMENT</string>
</array>
<key>com.apple.private.FairPlayIOKitUserClient.access</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.cfnetwork.har-capture-amp</key>
<true/>
<key>com.apple.private.corespotlight.internal</key>
<true/>
<key>com.apple.private.corewifi</key>
<true/>
<key>com.apple.private.followup</key>
<true/>
<key>com.apple.private.fpsd.client</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.itunescloudd</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.itunescloudd</string>
</array>
<key>com.apple.private.ids.prefer-infrawifi</key>
<array>
<string>com.apple.private.alloy.itunescloudd</string>
</array>
<key>com.apple.private.ids.self-session</key>
<array>
<string>com.apple.private.alloy.itunescloudd</string>
</array>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.nsurlsession.impersonate</key>
<true/>
<key>com.apple.private.nsurlsession.perform-media-downloads</key>
<true/>
<key>com.apple.private.nsurlsession.set-task-priority</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
<string>kTCCServiceWillow</string>
</array>
<key>com.apple.private.tcc.manager.access.modify</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.tcc.manager.access.read</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.tcc.manager.check-by-audit-token</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.tcc.manager.expiration.delete</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.tcc.manager.expiration.read</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.tcc.manager.get-identity-for-credential</key>
<true/>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.Music</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.aps.itunescloudd</string>
<string>com.apple.private.corewifi-xpc</string>
<string>com.apple.usernotifications.usernotificationservice</string>
<string>com.apple.amsaccountsd.multiuser</string>
<string>com.apple.xpc.amsaccountsd</string>
<string>com.apple.symptom_diagnostics</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.symptoms.NetworkOfInterest</key>
<true/>
<key>com.apple.telephony.cupolicy-rw-access</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>fairplay-client</key>
<string>1445028844</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
</dict>
</plist>
adi-client
40983540100
application-identifier
com.apple.itunescloudd0
aps-connection-initiate
backupd-connection-initiate
0>!com.apple.CommCenter.fine-grained0
data-allowed-write
spi0"
com.apple.PairingManager.Read
com.apple.PairingManager.Write
0/*com.apple.accounts.appleaccount.fullaccess
0+&com.apple.accounts.inactive.fullaccess
com.apple.atc.private
0&!com.apple.authkit.client.internal
094com.apple.coremedia.allow-protected-content-playback
com.apple.developer.homekit
0-(com.apple.developer.networking.multipath
0)$com.apple.homekit.private-spi-access
com.apple.itunesstored.private
com.apple.nano.nanoregistry
0.)com.apple.networkd.set_source_application
com.apple.private.CacheDelete0
CLIENT_ENTITLEMENT050com.apple.private.FairPlayIOKitUserClient.access
0;6com.apple.private.MobileContainerManager.otherIdLookup
0+&com.apple.private.accounts.allaccounts
0)$com.apple.private.applemediaservices
0.)com.apple.private.aps-connection-initiate
00+com.apple.private.cfnetwork.har-capture-amp
0-(com.apple.private.corespotlight.internal
com.apple.private.corewifi
com.apple.private.followup
com.apple.private.fpsd.client
com.apple.private.ids.messaging0&$com.apple.private.alloy.itunescloudd0W-com.apple.private.ids.messaging.high-priority0&$com.apple.private.alloy.itunescloudd0P&com.apple.private.ids.prefer-infrawifi0&$com.apple.private.alloy.itunescloudd0L"com.apple.private.ids.self-session0&$com.apple.private.alloy.itunescloudd0.)com.apple.private.network.socket-delegate
0/*com.apple.private.nsurlsession.impersonate
0;6com.apple.private.nsurlsession.perform-media-downloads
050com.apple.private.nsurlsession.set-task-priority
com.apple.private.tcc.allow0,
kTCCServiceMediaLibrary
kTCCServiceWillow0H+com.apple.private.tcc.manager.access.modify0
kTCCServiceMediaLibrary0F)com.apple.private.tcc.manager.access.read0
kTCCServiceMediaLibrary0O2com.apple.private.tcc.manager.check-by-audit-token0
kTCCServiceMediaLibrary0L/com.apple.private.tcc.manager.expiration.delete0
kTCCServiceMediaLibrary0J-com.apple.private.tcc.manager.expiration.read0
kTCCServiceMediaLibrary0>9com.apple.private.tcc.manager.get-identity-for-credential
0K6com.apple.private.usernotifications.bundle-identifiers0
com.apple.Music0
4com.apple.security.exception.mach-lookup.global-name0
com.apple.aps.itunescloudd
com.apple.private.corewifi-xpc3com.apple.usernotifications.usernotificationservice com.apple.amsaccountsd.multiuser
com.apple.xpc.amsaccountsd
com.apple.symptom_diagnostics0&!com.apple.security.network.client
0'"com.apple.springboard.remote-alert
0)$com.apple.symptoms.NetworkOfInterest
0+&com.apple.telephony.cupolicy-rw-access
com.apple.wifi.manager-access
fairplay-client
14450288440!
keychain-access-groups0
apple
@ffffff
u"A:
")2:C
000 
")%)))'
*1,111.G
HDHHHF$;Ry;;;;
;;;;
ICDPowerEventLogger
ICDCloudMusicLibraryRequestHandler
ICDCloudMusicLibrarySagaUpdateTaskHelper
ICDCloudMusicLibraryBackgroundTaskScheduler
NSObject
ICDCloudMusicLibraryProgressObserver
ICDCloudMusicLibraryJaliscoUpdateTaskHelper
ICDJaliscoSupportedMediaKindsHandler
ICEnvironmentMonitorObserver
CloudServerOptions
ICUpdateResponse
ICUpdateRequest
UpdateResponseParserDelegate
DKDAAPParserDelegate
PrivacyConsciousDescription
SagaLoadBulkContainerArtworkInfoOperation
JaliscoSetItemPropertyOperation
JaliscoDeauthenticateOperation
SagaCreatePlaylistOperation
SagaSDKCreatePlaylistOperation
ICBulkRemoveRequest
ICBulkRemoveItemRequest
ICBulkRemovePlaylistRequest
JaliscoLoadChapterArtworkOperation
ICDDefaults
BaseRequestHandler
ICMusicLibraryRecommendationResult
ICMusicLibraryArtistAffinityAnalyzer
ICBulkSetContainerPropertyRequest
SagaSubscribedPlaylistUpdater
ContainerCloudIDsParserDelegate
SubscribedContainersUpdateRequiredParserDelegate
ICDServerNotificationsManager
CloudAuthenticateOperation
ICDCloudServiceStatusMonitor
ICCloudServiceStatusRemoteMonitoringService
NSXPCListenerDelegate
SagaFavoriteEntityOperation
ICCloudServerAvailabilityServiceProtocol
ICDNetworkAvailabilityService
ICBulkLyricsInfoRequest
ICBulkLyricsInfoResponse
ICMediaUserStateCenterServerProtocol
ICMediaUserStateCenterClientProtocol
ICDMediaUserStateCenterServer
ICDMediaUserStateCenterServerNotificationsManagerDelegate
JaliscoImporter
ICDLoggable
SagaPublishPlaylistOperation
PublishPlaylistResponseParserDelegate
CloudUserNotificationController
UNUserNotificationCenterDelegatePrivate
UNUserNotificationCenterDelegate
ICCloudContentTasteUpdateResponse
CloudKeepLocalUtilities
CloudLoadBulkArtworkInfoOperation
ICDSaga
ICSetContainerPropertiesResponse
ICSetContainerPropertiesRequest
SetContainerPropertiesResponseParserDelegate
ICFlushPlayActivityEventsOperation
CloudArtworkOperationQueue
SagaCreateGeniusPlaylistOperation
ICCloudServerListenerEndpointServiceProtocol
ICCloudServerProtocol
ICDServer
ICDServerNotificationsManagerDelegate
ICDBackgroundTaskScheduling
ICDHandlerProviding
SagaUnfavoriteEntityOperation
JaliscoArtworkImporter
CloudArtistHeroImageImporter
QueueAwareOperation
DetermineArtistStoreIDLookupTypeOperation
UpdateArtistStoreIDsByBulkLibraryMatchLookupOperation
UpdateArtistStoreIDsByMapOperation
UpdateArtistStoreIDsByLibraryMatchLookupOperation
UpdateArtistArtworkTokensOperation
DownloadArtistHeroImagesOperation
FinishArtistHeroUpdateOperation
ICContentTastePendingChangesCoordinator
ICBulkArtworkInfoRequest
ICBulkItemArtworkInfoRequest
ICBulkPlaylistArtworkInfoRequest
ICBulkArtworkInfoResponse
ICDServerOperationsManager
ICCreateGeniusContainerResponse
ICCreateGeniusContainerRequest
ICPlayActivityFeedSerialization
ICDJaliscoMediaFilter
ICMusicLibraryContentItemSnapshot
ICDAccountManagerState
NSCopying
GeniusAdditions
AMPMusicFeature
ICCloudContentTastePBFuseItemPreference
ICMusicLibraryArtistAffinitySnapshot
CloudLibrary
CloudLibraryConcurrentOperation
SagaSetItemPropertyOperation
SagaRequestHandler
CloudLibraryOperation
NSSecureCoding
NSCoding
SagaUpdateSubscribedPlaylistsOperation
SagaGetGeniusItemsOperation
CloudService
ICAppleMusicAPITokenRequest
CloudGeniusUtilities
CloudGeniusBooleanTransform
CloudGeniusDataTransform
CloudGeniusDateTransform
CloudGeniusHasValueTransform
CloudGeniusNegatedBooleanTransform
CloudGeniusOnlyIfDoesNotHaveValueTransform
CloudGeniusOnlyIfHasValueTransform
CloudGeniusOnlyIfNegatedBooleanTransform
CloudGeniusOnlyIfNonEmptyStringTransform
CloudGeniusOnlyIfNonZeroDoubleTransform
CloudGeniusOnlyIfNonZeroIntegerTransform
CloudMusicSubscriptionStatusServiceListener
ICMusicSubscriptionStatusRemoteRequestingService
ICContentTasteRequestHandler
JaliscoRequestHandler
ICAppleMusicAPITokenResponse
ICDAdditions
ICDResponse
ICDAccountManagerStateChange
ICGetGeniusItemsRequest
ICGetGeniusItemsResponse
ICCloudContentTasteUpdateItem
ICMusicLibraryRecommendationsRequest
SagaImporter
SagaLoadLyricsOperation
ICSubscribedContainersRequest
SagaUpdatePlaylistOperation
SagaSDKUpdatePlaylistOperation
SagaRemovePlaylistOperation
ICCloudContentTasteResponseCacheManager
SagaUploadItemPlayDataOperation
AMPMusicArtistContent
ICMusicLibraryRecommendationController
ICDAAPPropertyInfo
NSError
JaliscoHideItemOperation
ICBulkSetItemPropertyRequest
CloudArtworkImportOperation
CloudAdditions
ICDDeleteOnDeallocTemporaryFile
JaliscoLoadBulkItemArtworkInfoOperation
ICAlbumsRequest
ICPlayActivityServerProtocol
ICPlayActivityServer
ICDEnhancedAudioKeyManager
ICContentKeySessionDelegateProtocol
JaliscoLoadBooksOperation
BooksParserDelegate
ICMediaLibraryAccessPermissionsHelper
MediaLibraryAccessRevocationController
ICAdditions
CloudPendingChangesCoordinator
ICFileAdditions
ICAppleMusicAPITokenError
SagaCloudSDKAddOperation
SagaCloudSDKAddItemToPlaylistOperation
ICAppleMusicAPITokenCollection
AMPMusicArtistNewContentResponse
CloudLibraryOptOutOperation
AMPMusicCatalogContent
DisableCloudLibraryOperation
ICArtistsRequest
ICDHandlerCoordinator
ICDHandlerCoordinating
CloudLibraryConnection
SagaUploadPlaylistArtworkOperation
CloudRemoteRequestOperationExecutionServiceListener
ICRemoteRequestOperationExecutingService
JaliscoUpdateOperation
SagaLoadBulkItemArtworkInfoOperation
ICPlayActivityDebugLogOperation
ICCreateContainerResponse
ICCreateContainerRequest
ICSDKCreateContainerRequest
CreateContainerResponseParserDelegate
JaliscoMediaImporter
AMPMusicArtistNewContentRequest
SubscriptionRequestHandler
SagaCloudAddOperation
SagaCloudAddItemOperation
SagaCloudAddPlaylistOperation
SagaCloudAddItemToPlaylistOperation
CloudArtworkImportRequest
CloudArtworkImporter
MPMediaDownloadObserver
ICDManageableAccount
_MSVAccountInformationProviding
ICDPrivacyPromptOperation
ICDCloudPushNotificationAccountRegistrationState
ICDCloudPushNotificationRegistrationState
CloudPushNotificationController
APSConnectionDelegate
ICItemsRequest
ICUnfavoriteEntityRequest
ICContainersRequest
ICMusicLibraryContentMetadataDescriptor
ICSetAddToPlaylistBehaviorRequest
SagaLibrary
ICDResponseDataParser
AppleMusicAPITokenIDSService
IDSServiceDelegate
CloudBackgroundTaskManager
CloudUpdateLibraryOperation
ICDAccountManager
ICDAccountManaging
ICDMediaUserStateCenterServerNotificationsManager
ICCloudContentTasteUpdateOperation
SagaUploadPlaylistPlayDataOperation
ICDRequest
JaliscoMediaUpdateOperation
ICMusicLibraryRecommendationsResponse
CloudSetAddToPlaylistBehaviorOperation
ICDCloudServiceCapabilitiesRequestOperation
SagaArtworkImporter
ICUpdateContentTasteRequestListener
CloudContentTasteUpdateRequestListener
CloudArtworkImportSetupOperation
SagaSetAlbumItemPropertyOperation
SagaAddItemToPlaylistOperation
SagaSDKAddItemToPlaylistOperation
ICCloudContentTastePBFusePreferences
ICDCloudServiceCapabilitiesRequestContext
JaliscoLibrary
SagaRemoveItemOperation
ICFavoriteEntityResponse
ICFavoriteEntityRequest
FavoriteEntityResponseParserDelegate
ArtistImageRequestHandler
ICAddToLibraryResponse
ICAddToLibraryRequest
AddToLibraryResponseParserDelegate
SagaImportController
SagaImportControllerParserDelegate
ICSDKAddToLibraryResponse
ICSDKAddToLibraryRequest
ICSDKAddToPlaylistRequest
SDKAddToLibraryResponseParserDelegate
_ICDBackgroundTask
ICDBackgroundTaskManager
ICDBackgroundTaskManaging
T@"ICDelegationProviderService",R,N,V_delegationProviderService
APNSToken
T@"NSArray",C,N
DSIDForUserIdentity:outError:
T@"NSDate",C,N,V_expirationDate
MIMEType
T@"NSString",R,N,V_artworkToken
StringAsContentType:
T@?,C,N,V_updateCompletionBlock
T@"<ICDAccountManaging>",R,N
TB,N,V_hasAddToPlaylistBehavior
T@"<ICDAccountManaging>",W,N,V_accountManager
TI,R,N,V_currentPlaylistCloudID
T@"<ICDBackgroundTaskScheduling>",&,N,V_taskScheduler
T@"<ICDHandlerCoordinating>",R,N
_accountManager
T@"<ICDHandlerProviding>",R,W,N,V_handlerProvider
_active
T@"<ICDServerNotificationsManagerDelegate>",R,W,N,V_delegate
_adamId
T@"AMPMusicArtistNewContentResponse",R,N,V_responseModel
_artistContents
T@"AppleMusicAPITokenIDSService",R,N
_bodyDataForItemIDs:useLongIDs:
T@"CloudArtistHeroImageImporter",R,N,V_importer
_center
T@"CloudArtworkImporter",&,N,V_artworkImporter
_currentCloudID
T@"CloudArtworkOperationQueue",&,N,V_artworkDownloadOperationQueue
_developerToken
T@"CloudLibraryConnection",&,N,V_underlyingConnection
_endObservingCloudServiceStatus
T@"CloudMusicSubscriptionStatusServiceListener",R,N
_handleClientConnectionSevered:
T@"CloudPushNotificationController",R,N,V_pushNotificationController
_hasValidPrivilegedCapabilities
T@"CloudUserNotificationController",R,N,V_userNotificationController
_initWithConfiguration:clientIdentity:storeID:sagaID:globalPlaylistID:albumCloudLibraryID:artistCloudLibraryID:entityType:time:
T@"DetermineArtistStoreIDLookupTypeOperation",&,N,V_followupUpdateOpertion
_jaliscoLibrary
T@"ICAppleMusicAPITokenError",&,N,V_error
_method
T@"ICCloudContentTasteUpdateItem",R,N
_operationQueue
T@"ICConnectionConfiguration",&,N,V_configuration
_playlistSagaID
T@"ICConnectionConfiguration",R,C,N
_prepareLibraryForInitialUpdate
T@"ICConnectionConfiguration",R,N,V_configuration
_recoId
T@"ICDAccountManagerState",C,N,V_state
_resetInternalCloudLibraryState
T@"ICDAccountManagerState",R,N,V_finalState
_sagaID
T@"ICDAccountManagerStateChange",C,N,V_stateChange
_serverRevision
T@"ICDCloudServiceStatusMonitor",R,N,V_cloudServiceStatusMonitor
_setupCompleted
T@"ICDEnhancedAudioKeyManager",R,N,V_enhancedAudioKeyManager
_status
T@"ICDMediaUserStateCenterServerNotificationsManager",R,N,V_serverNotificationsManager
_totalItemCount
T@"ICDServer",R,N
_updateSupportedConfigurationsWithAccounts:activeConfiguration:
T@"ICDServerOperationsManager",R,N,V_serverOperationsManager
_values
T@"ICMusicLibraryContentMetadataDescriptor",&,N,V_albumMetadataDescriptor
allHeaderFields
T@"ICMusicLibraryContentMetadataDescriptor",&,N,V_songMetadataDescriptor
allKeys
T@"ICStoreURLRequest",&,N,V_getResultsRequest
anyInLibrary:predicate:options:
T@"ICStoreURLRequest",&,N,V_uploadLibraryRequest
artworkImporter
T@"ICURLSession",R,N,V_URLSession
T@"ICUserIdentity",R,N
baseURL
T@"ICUserIdentityStore",R,N
buildIdentifier
T@"JaliscoArtworkImporter",R,N,V_artworkImporter
cancelOperationsWithCompletion:
T@"JaliscoLoadBooksOperation",R,N,V_operation
clientInterface
T@"ML3MusicLibrary",R,N,V_musicLibrary
cloudPlaylistID
T@"MPMediaDownloadManager",&,N,V_downloadManager
completionBlock
T@"MSVWatchdog",&,N,V_watchdog
connectionQueue
T@"NSArray",&,N,V_albumArtistPersistentIDsToUpdate
containsObject:
T@"NSArray",&,N,V_allGeniusTrackPropertiesWithML3TrackProperties
copyTo:
T@"NSArray",&,N,V_allML3TrackPropertiesWithGeniusTrackProperties
currentGlobalID
T@"NSArray",&,N,V_books
dealloc
T@"NSArray",&,N,V_userStatesCache
defaultRenderer
T@"NSArray",C,N,V_contentTasteItems
downloadManager
T@"NSArray",C,N,V_lyricsInfoDictionaries
execute
T@"NSArray",R,C,N
failedToConnect
T@"NSArray",R,N,V_cloudArtworkInfoDictionaries
handler
T@"NSData",&,N
hasCode
T@"NSData",&,N,V_model
ic_DSID
T@"NSData",R,N,V_responseData
ic_isManageable
T@"NSDate",C,N,V_libraryAddedDate
importItemArtworkForPurchaseHistoryID:configuration:completion:
T@"NSDictionary",&,N,V_adamIDToSagaIDMap
initWithBundleIdentifier:queue:
T@"NSDictionary",&,N,V_globalIDToSagaIDMap
initWithConfiguration:cloudIDs:
T@"NSDictionary",C,N,V_powerEventPayload
initWithItemPurchaseHistoryIDs:
T@"NSDictionary",R,N,V_responseHeaderFields
initWithReason:
T@"NSError",R,N,V_error
initWithStream:
T@"NSMutableArray",&,N,V_artistContents
isEqualToArray:
T@"NSMutableArray",&,N,V_contentFeatures
isInitialUpdate
T@"NSMutableArray",&,N,V_uniqueSongs
isMediaKindDisabledForJaliscoLibrary:clientIdentity:completion:
T@"NSMutableArray",R,N,V_parsedBooks
isSiriInitiated
T@"NSMutableDictionary",&,N,V_artworkDownloadOperationMap
isWatch
T@"NSMutableDictionary",&,N,V_mutableCloudIDToLyricsTokenMap
T@"NSMutableDictionary",R,N
lastKnownExplicitContentAllowed
T@"NSMutableDictionary",R,N,V_mutableCloudIDToLyricsTokenMap
lowercaseString
T@"NSMutableSet",&,N,V_uniqueDatesWithAddedContent
mlModel
T@"NSNumber",&,N,V_authenticateFailureCode
msv_firstWhere:
T@"NSNumber",&,N,V_containerCloudID
networkActivityIndicatorVisible
T@"NSNumber",&,N,V_updateIntervalSeconds
notificationsManagerDidReceiveBuddySetupDoneDarwinNotification:
T@"NSNumber",R,N,V_adamID
T@"NSObject<OS_dispatch_group>",&,N,V_connectionGroup
numberWithLong:
T@"NSObject<OS_dispatch_queue>",&,N,V_artworkDownloadAccessQueue
originalFileURL
T@"NSObject<OS_dispatch_queue>",&,N,V_centerQueue
pendingInvalidationKeyStorePath
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
preflightImport
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
pushEnvironment
T@"NSObject<OS_dispatch_queue>",R,N,V_updateLibraryQueue
release
T@"NSObject<OS_os_log>",R,N
removeObserver:
T@"NSObject<OS_tcc_identity>",R,N,V_clientIdentity
request
T@"NSOperationQueue",R,N,V_backgroundOperationQueue
requestWithURL:
T@"NSOperationQueue",R,N,V_operationQueue
T@"NSSet",C,N,V_supportedConfigurations
T@"NSString",&,N,V_bagProfile
setAlertHeader:
T@"NSString",&,N,V_clientIdentifier
setArtworkDownloadOperationMap:
T@"NSString",&,N,V_cuid
setBool:forKey:
T@"NSString",&,N,V_domain
setCachePolicy:
T@"NSString",&,N,V_key
setCanonicalId:
T@"NSString",&,N,V_name
setCloudAddToPlaylistBehavior:clientIdentity:completionHandler:
T@"NSString",&,N,V_recoId
setContainerID:
T@"NSString",&,N,V_userArtworkToken
setDay:
T@"NSString",C,N
setHomeUserIDs:
T@"NSString",C,N,V_cuid
setJaliscoNeedsUpdateForTokens:
T@"NSString",C,N,V_libraryIdentifier
setLastKnownMusicVideosAllowed:
T@"NSString",C,N,V_powerAssertionIdentifier
setMessageType:
T@"NSString",C,N,V_powerEventEndName
setPayloadDownloadPathOverride:
T@"NSString",C,N,V_requestingBundleID
setRequestPersonalizationStyle:
T@"NSString",C,N,V_token
setStoreAdamID:
T@"NSString",R,C
setUniqueDatesWithAddedContent:
T@"NSString",R,C,N,V_libraryIdentifier
setUploadingLibraryIsSupported:
T@"NSString",R,N
setVppLicensed:
T@"NSString",R,N,V_action
shouldIgnoreDeveloperTokenCache
T@"NSString",R,N,V_currentArtistCloudLibraryID
shufflePlayMode
T@"NSString",R,N,V_currentGlobalPlaylistID
stationStringID
T@"NSString",R,N,V_currentPaginationToken
storefrontCountryCodeDidChange:
T@"NSString",R,N,V_playlistShareURL
stringByResolvingSymlinksInPath
T@"NSURL",&,N,V_artistNameLibraryMatchURL
suspend
T@"NSURL",&,N,V_bulkArtistNameLibraryMatchURL
timeoutInterval
T@"NSURL",C,N,V_payloadDownloadPathOverride
troveID
T@"NSURL",C,N,V_responseDataFileURL
updateLibraryCompletionHandlers
T@"NSUserDefaults",&,N,V_userDefaults
userMonitorWithHomeIdentifiers:
T@"NSXPCConnection",&
version
.cxx_destruct
T@"NSArray",&,N,V_queryStoreIDs
DSID
T@"NSArray",R,N
JSONObjectWithData:options:error:
T@"NSDate",C,N,V_lastPlayedDate
PlayActivityStorageDirectoryPath
T@"SagaImporter",&,N,V_importer
T#,R
TB,N,V_deleteDB
T@"<ICDAccountManaging>",R,N,V_accountManager
TB,N,V_ignoreMinRefreshInterval
T@"<ICDBackgroundTaskManaging>",R,N,V_backgroundTaskManager
T^f,R,N
T@"<ICDBackgroundTaskScheduling>",R,W,N,V_taskScheduler
URLRequestForBaseURL:sessionID:
T@"<ICDHandlerCoordinating>",R,N,V_handlerCoordinator
_action
T@"<ICDMediaUserStateCenterServerNotificationsManagerDelegate>",R,W,N,V_delegate
_adamID
T@"ACAccountStore",R,N,V_accountStore
_amsPushHandler
T@"APSConnection",&,N,V_connection
_bagKey
T@"BaseRequestHandler",R,N
_cachedResponse
T@"CloudArtworkImportSetupOperation",R,N
_clientIdentity
T@"CloudArtworkImporter",R,N,V_artworkImporter
_deferredPushGracePeriodSeconds
T@"CloudLibraryConnection",&,N,V_connection
_domain
T@"CloudLibraryConnection",R,N,V_connection
_expirationDate
T@"CloudPendingChangesCoordinator",R,N,V_pendingChangesCoordinator
_handleFirstUnlockNotification:
T@"CloudRemoteRequestOperationExecutionServiceListener",R,N
_havePendingAutoEnableICMLCheck
T@"DetermineArtistStoreIDLookupTypeOperation",&,N,V_currentUpdateOperation
_isHandlerValid
T@"ICAppleMusicAPITokenCollection",&,N,V_tokenCollection
_lastPlayedDate
T@"ICBook",&,N,V_currentParsingBook
_mutableCloudIDToLyricsTokenMap
T@"ICCloudContentTasteUpdateResponse",R,N,V_contentTasteUpdateResponse
_pendingChanges
T@"ICConnectionConfiguration",C,N,V_activeConfiguration
_preferenceType
T@"ICConnectionConfiguration",R,C,N,V_configuration
_reason
T@"ICDAAPPropertyInfo",R,N
_requestWithURL:URLBagKey:timeoutInterval:additionalBodyFields:
T@"ICDAccountManagerState",R,C,N
_responseDataDestinationFileURL
T@"ICDAccountManagerState",R,N,V_initialState
_seedID
T@"ICDAccountManagerStateChange",R,C,N
_setCachedContentTasteResponse:
T@"ICDDefaults",R,N
_startSemaphore
T@"ICDMediaUserStateCenterServer<ICMediaUserStateCenterServerProtocol>",R,N,V_mediaUserStateCenterServer
_subscriptionStatusFailureCount
T@"ICDNetworkAvailabilityService",R,N,V_networkAvailabilityService
_updateRequired
T@"ICDServerNotificationsManager",R,N,V_serverNotificationsManager
_userHasOptedIn
T@"ICDelegateAccountStoreServiceListener",R,N,V_delegateAccountStoreListener
addFinishBlock:
T@"ICMusicLibraryContentMetadataDescriptor",&,N,V_artistMetadataDescriptor
allItemsQueryWithLibrary:predicate:orderingTerms:usingSections:
T@"ICMusicLibraryRecommendationController",R,N
allowLowAffinityRecommendations
T@"ICStoreURLRequest",&,N,V_updateRequest
arrayForBagKey:
T@"ICURLSession",&,N,V_artworkDownloadSession
asynchronousRequestsAccessQueue
T@"ICUserIdentity",R,C,N,V_userIdentity
base64EncodedStringWithOptions:
T@"ICUserIdentity",R,N,V_userIdentity
bitRate
T@"ICUserIdentityStore",R,N,V_userIdentityStore
cancelAllOperationsAndClearPendingChangesWithCompletionHandler:
T@"JaliscoLibrary",R,N,V_jaliscoLibrary
catalogContents
T@"JaliscoMediaUpdateOperation",&,N,V_updateLibraryOperation
cloudID
T@"MLModel",R,N,V_mlModel
codeMap
T@"MSVWatchdog",&,N,V_artworkDownloadWatchdog
connectionGroup
T@"MediaLibraryAccessRevocationController",R,N
connectionState
T@"NSArray",&,N,V_allGeniusPlaylistPropertiesWithML3ContainerProperties
contentFeatures
T@"NSArray",&,N,V_allML3ContainerPropertiesWithGeniusPlaylistProperties
countOfEntities
T@"NSArray",&,N,V_artistPersistentIDsToUpdate
currentRevision
T@"NSArray",&,N,V_mediaKinds
defaultOverrideHTTPHeaderFields
T@"NSArray",C,N,V_artworkInfoDictionaries
disableCloudLibraryWithClientIdentity:reason:completionHandler:
T@"NSArray",C,N,V_itemIDs
endDate
T@"NSArray",C,N,V_playActivityEvents
existsInLibrary
T@"NSArray",R,C,N,V_playlistCloudIDs
handleNotificationResponse:bag:
T@"NSArray",R,N,V_itemIDs
handlerProvider
T@"NSData",&,N,V_APNSToken
hasName
T@"NSData",C,N,V_bodyData
ic_activeStoreAccountWithError:
T@"NSDate",&,N,V_updateActionTimeStamp
icd_setSagaDatabaseUserVersion:
T@"NSDate",R,N,V_date
initWithAction:
T@"NSDictionary",&,N,V_addedItems
initWithConfiguration:clientIdentity:artistCloudLibraryID:time:
T@"NSDictionary",C,N,V_addedItems
initWithDouble:
T@"NSDictionary",R,N
initWithPersistentID:inLibrary:
T@"NSError",&,N,V_error
initWithRequestContext:notificationType:notificationParameters:
T@"NSMutableArray",&,N,V_activeConnections
isCurrentNetworkLinkHighQuality
T@"NSMutableArray",&,N,V_catalogContents
isInitialImport
T@"NSMutableArray",&,N,V_uniqueAlbums
isInternalBuild
T@"NSMutableArray",R,C,N,V_updateLibraryCompletionHandlers
isProxy
T@"NSMutableArray",R,N,V_subscribedPlaylistCloudIDs
isValid
T@"NSMutableDictionary",&,N,V_codeMap
itemIDs
T@"NSMutableDictionary",&,N,V_valueTypeMap
keyData
T@"NSMutableDictionary",R,N,V_addedItems
lastUpdatedDate
T@"NSMutableDictionary",R,N,V_xpcListeners
machServiceName
T@"NSMutableSet",R,N,V_currentTasks
msv_description
T@"NSNumber",&,N,V_bulkArtistNameLibraryMatchBatchSize
multiArrayValue
T@"NSNumber",&,N,V_dsid
notificationsManager:didReceiveFamilyDeletionEventNotification:
T@"NSNumber",N,V_mergeToCloudLibraryPreference
notificationsManagerDidReceiveMusicSettingsChangedNotification:
T@"NSNumber",R,N,V_score
numberWithBool:
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
onCalloutQueue:
T@"NSObject<OS_dispatch_queue>",&,N,V_asynchronousRequestsAccessQueue
parserDidStart:
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionQueue
performMaintenanceTasksForDatabaseAtPath:withCompletionHandler:
T@"NSObject<OS_dispatch_queue>",R,N
purchasedAdamID
T@"NSObject<OS_dispatch_queue>",R,N,V_startupQueue
queueGroupingID
T@"NSObject<OS_dispatch_source>",R,N,V_sigtermSource
removeDelegate:
T@"NSObject<OS_tcc_identity>",C,N,V_clientIdentity
reportingAdamID
T@"NSOperationQueue",&,N,V_operationQueue
requestURLForBaseURL:sessionID:
T@"NSOperationQueue",R,N,V_internalOperationQueue
results
T@"NSOperationQueue",R,W,N,V_operationQueue
serviceSpaceDidBecomeAvailable:
T@"NSSet",C,N,V_supportedConfigurationsDSIDs
setAccessQueue:
T@"NSString",&,N,V_bagProfileVersion
setArtistPersistentIDsToUpdate:
T@"NSString",&,N,V_clientVersion
setArtworkType:
T@"NSString",&,N,V_developerToken
setBypassCache:
T@"NSString",&,N,V_globalPlaylistID
setCachedContentTasteUpdateResponse:forConnectionConfiguration:
T@"NSString",&,N,V_localizedDescription
setCenterQueue:
T@"NSString",&,N,V_powerAssertionIdentifier
setConnectionCompletionHandler:
T@"NSString",&,N,V_troveID
setContentType:
T@"NSString",&,N,V_userToken
setDebugReason:
T@"NSString",C,N,V_activeConfigurationDSID
setJaliscoLastGeniusUpdateDate:
T@"NSString",C,N,V_currentStoreFrontID
setKey:
T@"NSString",C,N,V_opaqueID
setMaxConcurrentOperationCount:
T@"NSString",C,N,V_powerEventBeginName
setOriginatingClientConnection:
T@"NSString",C,N,V_pushEnvironment
setReleaseDate:
T@"NSString",C,N,V_title
setStateChange:
T@"NSString",C,N,V_troveID
setURL:
T@"NSString",R,C,N
setUniqueSongs:
T@"NSString",R,C,N,V_name
setUserNotificationExtensionId:
T@"NSString",R,N,V_MIMEType
setWithObjects:
T@"NSString",R,N,V_currentAlbumCloudLibraryID
shouldReturnLastKnownStatusOnly
T@"NSString",R,N,V_currentGlobalID
startDictionary
T@"NSString",R,N,V_currentLyricsToken
storeID
T@"NSString",R,N,V_playlistGlobalID
stringByAppendingPathComponent:
T@"NSURL",&,N,V_allArtistImagesMapURL
stringFromDate:
T@"NSURL",&,N,V_assetURL
targets
T@"NSURL",C,N,V_assetURL
tokenCollection
T@"NSURL",C,N,V_responseDataDestinationFileURL
unscheduleSagaDeferredPushUpate
T@"NSUserDefaults",&,N,V_internalDefaults
uploadPlaylistPropertiesWithClientIdentity:minimumTimeInterval:
T@"NSUserDefaults",R,N,V_mediaPlaybackDefaults
userStatesCache
T@"UNUserNotificationCenter",&,N,V_center
T@?,C
T@?,C,N,V_completionHandler
T@?,C,N,V_connectionCompletionHandler
TB,N
TB,N,GisActive,V_active
TB,N,GisCachedResponse,V_cachedResponse
TB,N,GisNetworkActivityIndicatorVisible,V_networkActivityIndicatorVisible
TB,N,GisSetupCompleted,V_setupCompleted
TB,N,GisStartupSequenceCompleted,V_startupSequenceCompleted
TB,N,V_allowNoisyAuthPrompt
TB,N,V_allowsCellularData
TB,N,V_disableActiveLockerAccount
TB,N,V_failedToConnect
TB,N,V_hasArtistAndAlbumData
TB,N,V_havePendingOperationToReloadSecondaryAccountLibraries
TB,N,V_ignoreAccountChanges
TB,N,V_isExplicit
TB,N,V_isExplicitUserAction
TB,N,V_loginRequestInFlight
TB,N,V_parserSuccess
TB,N,V_pinnedOnly
TB,N,V_prohibitArtworkPrefetch
TB,N,V_prohibitLibraryUpload
TB,N,V_removeSourcePurchaseHistoryForMusicTracks
TB,N,V_sagaEnabledOnDevice
TB,N,V_shouldIgnoreDeveloperTokenCache
TB,N,V_shouldIgnoreUserTokenCache
TB,N,V_shouldParseMetadata
TB,N,V_supportsAutomaticEnablingiCloudMusicLibrary
TB,N,V_updateRequired
TB,N,V_uploadingLibraryIsSupported
TB,R
TB,R,N
TB,R,N,GisActive
TB,R,N,GisConcurrent,V_concurrent
TB,R,N,GisInitialImport,V_initialImport
TB,R,N,GisInitialUpdate
TB,R,N,GisManageable
TB,R,N,GisPersistent,V_persistent
TB,R,N,V_isCancelled
TB,R,N,V_shouldProcessSpecificArtists
TB,R,N,V_shouldRestart
TB,R,N,V_updateRequired
TB,R,N,V_useLongIDs
TC,N,V_addToPlaylistBehavior
TC,R,N,V_currentPlaylistKind
TC,R,N,V_itemKind
TI,N,V_containerID
TI,N,V_databaseRevision
TI,N,V_mediaType
TI,N,V_serverRevision
TI,R,N,V_containerID
TI,R,N,V_currentItemCount
TI,R,N,V_databaseID
TI,R,N,V_outputClusterType
TI,R,N,V_processedItemCount
TI,R,N,V_totalItemCount
TQ,N,V_assetFileSize
TQ,N,V_cloudID
TQ,N,V_responseRevisionID
TQ,R
TQ,R,N
TQ,R,N,V_cloudID
TQ,R,N,V_currentAdamID
TQ,R,N,V_currentCloudID
TQ,R,N,V_playlistSagaID
TQ,R,N,V_responseCode
TQ,R,N,V_stateHandle
Td,R,N
Tf,N,V_userRating
Tf,R,N
Tf,R,N,V_progress
Ti,N,V_contentType
Ti,N,V_phase
Tq,N
Tq,N,Sicd_setPreferredVideoQuality:
Tq,N,Sicd_setSagaCloudAddToPlaylistBehavior:
Tq,N,Sicd_setSagaDatabaseUserVersion:
Tq,N,V_adamId
Tq,N,V_allowedRetryCount
Tq,N,V_artworkType
Tq,N,V_canonicalId
Tq,N,V_code
Tq,N,V_contentTasteItem
Tq,N,V_contentTasteType
Tq,N,V_cumulativePlayCount
Tq,N,V_cumulativeSkipCount
Tq,N,V_currentDatabaseRevision
Tq,N,V_enableReason
Tq,N,V_libraryManagementPolicy
Tq,N,V_method
Tq,N,V_playCount
Tq,N,V_playlistPersistentID
Tq,N,V_preferredVideoQuality
Tq,N,V_privacyAcknowledgementPolicy
Tq,N,V_reason
Tq,N,V_releaseDate
Tq,N,V_requestPersonalizationStyle
Tq,N,V_requestReason
Tq,N,V_skipCount
Tq,N,V_status
Tq,N,V_storeAdamID
Tq,N,V_storeID
Tq,N,V_uploadResponseStatus
Tq,N,V_verificationInteractionLevel
Tq,R,N
Tq,R,N,V_artworkType
Tq,R,N,V_computation
Tq,R,N,V_connectionState
Tq,R,N,V_currentCloudID
Tq,R,N,V_entityType
Tq,R,N,V_sourceType
Tq,R,N,V_type
URLAssetWithURL:options:
URLByAppendingPathComponent:
URLByAppendingPathComponent:isDirectory:
URLByAppendingPathExtension:
URLByDeletingLastPathComponent
URLQueryAllowedCharacterSet
URLSession
URLWithString:
URLWithString:relativeToURL:
UTF8String
UUID
UUIDString
_APNSToken
_DAAPMediaKindFromJaliscoSupportedMediaKind:
_HTTPMethodStringForICDRequestMethod:
_ICCloudServerSupportedServiceForXPCListener:
_MIMEType
_URLSession
_accessQueue
_accountRegistrationStates
_accountStore
_actionTimestampMillis
_activeConfiguration
_activeConfigurationDSID
_activeConfigurationsWithCompletion:
_activeConnections
_activeObservationTokenToClientConnectionMapping
_adamIDToSagaIDMap
_addAllStoreArtistIDsToSet:
_addLibraryOperation:priority:noLibraryHandler:
_addPendingChangesForContentTasteUpdateOperation:invalidateLocalCache:
_addSpecificStoreArtistIDsToSet:
_addToPlaylistBehavior
_addedItems
_adjustMergePreferenceWithUserIdentityProperties:
_adjustOperationQueueStatusForMediaDownloads
_affinityAnalyzer
_albumArtistPersistentIDsToUpdate
_albumCloudLibraryID
_albumItemProperties
_albumMetadataDescriptor
_albumPersistentID
_allArtistImagesMapURL
_allGeniusPlaylistPropertiesWithML3ContainerProperties
_allGeniusTrackPropertiesWithML3TrackProperties
_allML3ContainerPropertiesWithGeniusPlaylistProperties
_allML3TrackPropertiesWithGeniusTrackProperties
_allowNoisyAuthPrompt
_allowedRetryCount
_allowsCellularData
_applyServerStateUpdatedWithUserStatesIfNeeded:
_arguments
_artistCloudLibraryID
_artistHeroImageUpdateFinished
_artistMetadataDescriptor
_artistNameLibraryMatchURL
_artistPersistentIDsToUpdate
_artworkDownloadAccessQueue
_artworkDownloadOperationMap
_artworkDownloadOperationQueue
_artworkDownloadSession
_artworkDownloadWatchdog
_artworkImporter
_artworkInfoDictionaries
_artworkToken
_artworkType
_artworkURLForInfoDictionary:
_assetFileSize
_assetURL
_asynchronousRequestsAccessQueue
_authenticateAndStartInitialImportWithMergePreference:userIdentityProperties:enableReason:withCompletionHandler:
_authenticateFailureCode
_autoEnableFailureCount
_autoRetryCloudAuthenticateFailureCount
_backOffIndex
_backgroundOperationQueue
_backgroundTaskManager
_bag
_bagObservationToken
_bagProfile
_bagProfileVersion
_baseBtaJobForDeferredPush
_baseBtaJobForPeriodicPollCellularDataAllowed:
_beginObservingCloudServiceStatus
_bodyData
_bodyDataForAlbumsRequestWithPaginationToken:
_bodyDataForArtistsRequestWithPaginationToken:
_bodyDataForCloudIDs:itemKind:useLongIDs:
_bodyDataForContainerIDs:
_bodyDataForContainerIDs:properties:
_bodyDataForDatabaseRevision:
_bodyDataForDatabaseRevision:adamID:sagaID:playlistGlobalID:referralAlbumAdamID:referralPlaylistGlobalID:
_bodyDataForDatabaseRevision:addToPlaylistBehavior:
_bodyDataForDatabaseRevision:containerID:trackList:properties:
_bodyDataForDatabaseRevision:opaqueID:
_bodyDataForDatabaseRevision:playlistProperties:trackList:
_bodyDataForItemIDs:properties:useLongIDs:
_bodyDataForMetadataFilter:queryFilter:purchaseTokens:includeHiddenItems:includePreorders:paginationToken:
_bodyDataForPlaylistName:seedItemIDs:itemIDs:
_bodyDataForSagaIDs:itemKind:
_bodyDataWithAdditionalBodyFields:
_bodyDataWithStoreID:sagaID:globalPlaylistID:albumCloudLibraryID:artistCloudLibraryID:time:serverDatabaseRevision:
_books
_buildStateChange
_buildUserStateFromUserIdentity:storeRequestContext:tokensDictionary:completion:
_bulkArtistNameLibraryMatchBatchSize
_bulkArtistNameLibraryMatchURL
_bundleID
_cacheDirectoryPath
_cacheMatchedRecommendations:
_callbackQueue
_calloutQueue
_canCompleteStartupSequence
_canEnableCloudMusicLibraryOnPlatformsWithSideLoadedMediaContentWithProperties:includeLocalContentCheck:
_canShowCloudDownloadButtonsDidChangeNotification:
_canShowCloudTracksDidChangeNotification:
_cancelAllContentTasteRequestHandlers
_cancellableCapabilitiesRequestOperations
_canonicalId
_capabilities
_capabilitiesRequestContexts
_catalogContents
_cellularDataAllowed
_cellularDataAllowedForJaliscoApps
_cellularDataAllowedForJaliscoMedia
_cellularDataAllowedForMediaType:
_centerQueue
_chapterArtworkToLoad
_chapterArtworkURLsForData:baseURL:
_chapterDataFromURL:
_checkForRecentRevocations
_claimSingleWriterStatus
_cleanupExpiredApplicationMessages
_clearAllCloudIDs
_clearMLModelCache
_clearRecommendationsData
_clientIdentifier
_clientInfoForCloudDaemonOriginatedMusicKitRequestWithRequestingBundleIdentifier:
_clientInfoForDeveloperTokenRequestWithRequestingApplicationBundleIdentifier:
_clientInfoForUserTokenRequestWithRequestingApplicationBundleIdentifier:
_clientVersion
_cloudArtworkInfoDictionaries
_cloudID
_cloudIDs
_cloudServiceStatusMonitor
_code
_codeMap
_completeStartupSequenceIfNeeded
_completionHandler
_completionHandlers
_computation
_computeLibraryRecommendationWithResponse:completionHandler:
_concurrent
_configuration
_configurationForAccount:baseConfiguration:
_configurationsToActivateForChange:initialSetup:
_configurationsToRemoveForChange:initialSetup:
_connectToLibraryWithCompletionHandler:allowRetry:forceBagReload:
_connection
_connectionCompletionHandler
_connectionGroup
_connectionQueue
_connectionState
_containerCloudID
_containerID
_contentFeatures
_contentTasteItem
_contentTasteItems
_contentTasteRequestHandlerForConfiguration:outError:
_contentTasteRequestHandlerToDSIDMap
_contentTasteType
_contentTasteUpdateResponse
_contentTasteUpdateResponseWithServerResponse:expirationDate:revisionID:isCachedResponse:
_contentType
_continueConnectingToLibraryWithCompletionHandler:
_createAPNSConnectionWithCompletion:
_createApplicationMessagesForResult:artistNewContentResponse:completion:
_createBag
_createLocalNotificationDictionaryForRecommendationResult:storePlatformMetadata:recommendationID:identifier:
_createdOffsetMillis
_criteriaDictionaryWithPostFrequency:
_cuid
_cumulativePlayCount
_cumulativeSkipCount
_currentAPNSToken
_currentAdamID
_currentAlbumCloudLibraryID
_currentArtistCloudLibraryID
_currentDatabaseRevision
_currentGlobalID
_currentGlobalPlaylistID
_currentItemCount
_currentLyricsToken
_currentPaginationToken
_currentParsingBook
_currentPlaylistCloudID
_currentPlaylistKind
_currentRegistrationState
_currentStoreFrontID
_currentTasks
_currentUpdateOperation
_databaseID
_databaseRevision
_date
_deactivateJaliscoLibraryByDeauthenticating:completionHandler:
_deactivateSagaLibraryByDeauthenticating:completionHandler:
_deauthOperationCount
_deauthenticateUnsupportedConfigurationsFromChange:initialSetup:completion:
_debugLogOperationQueue
_defaultContentTasteRefreshIdentifier
_deferredPushActivityCriteriaForTask:startTime:gracePeriod:
_delegate
_delegateAccountStoreListener
_delegationProviderService
_deleteDB
_determineResultsURLWhenReadyWithUpdateID:retryTimeout:responseStatusCode:
_didAdjustMergePreference
_didCompleteAllCapabilitiesAsynchronousRequests
_didCompletePrivacyPromptOperation:withStatus:error:
_didCompleteWithPrivacyPromptStatus:error:
_didEncounterFatalErrorImportingPayload
_didHandleStartupNotificationReason
_didManuallyReloadCloudLibrary
_didReceiveDarwinNotification:
_didReceiveDistributedNotification:withStreamEvent:
_didReceiveTelephonyCenterNotification:
_didSubscriptionStatusLapse
_disableActiveLockerAccount
_dispatchCompletionHandler:withError:
_displayNotificationForBuilder:withReplyBlock:
_downloadManager
_downloadRequestsFromURL:uploadResponsesURL:
_dsid
_enableReason
_enhancedAudioKeyManager
_enqueueCloudUpdateLibraryOperationForReason:
_enqueueFailedOperation:
_enqueuePendingOperation:
_enqueueSubscriptionStatusCheckForReason:
_ensureConnectionWithCompletionHandler:
_ensureDeviceIsRegistered
_ensureMusicSubscriptionKeysAreAvailableForConfiguration:
_ensureSubscriptionInformationIsUpToDateForConfiguration:
_ensureURLResolutionCacheFileExists
_entityType
_error
_excludedKinds
_executeBlockForAllOperations:
_executing
_externalId
_failedToConnect
_failedToPerformAnalysis
_fetchAccountsWithForceRefresh:completion:
_fetchAndCacheLatestAllArtistImagesMap
_fetchRecommendationsSetAndModelWithCompletionHandler:
_fileURL
_finalState
_finished
_flushOperationCount
_flushOperationQueue
_followupUpdateOpertion
_getCurrentSubscriptionStatusForReason:
_getNetworkConstraints
_getPBData:includedContentTasteItemUpdates:fromContentTasteUpdateItems:
_getResultsRequest
_getStoreAdamIDLikedState:playlistGlobalIDLikedState:
_getTokenStatusesForDSIDs:forceRefresh:completion:
_getUserStateFromIdentity:tokensDictionary:completion:
_globalIDToSagaIDMap
_globalPlaylistID
_handleActiveUserIdentityDidChangeNotification:
_handleAllowsExplicitContentChangedNotification:
_handleAllowsMusicVideosChangedNotification:
_handleApplicationRegistration:notificationName:streamEvent:
_handleApplicationRegistrationNotification:
_handleClientConnectionInterrupted:
_handleClientConnectionInvalidated:
_handleCloudAuthenticationDidChangeNotification
_handleCloudLibraryUpdateOperationFinishedWithError:
_handleFamilyContentDeletionEvent:
_handleFamilyContentDeletionNotification:streamEvent:
_handleFlushPlayActivityEvents
_handleFlushRequestNotification:
_handleHomeUserSettingsDidChangeNotification:
_handleITunesStorePushMessage:withCompletionHandler:
_handleInAppMessagesUpdatedPushMessage:
_handleJaliscoDeferredPushUpdateTask:completion:
_handleJaliscoMediaDeferredPushUpdateJobSatisfied:invalidRequest:
_handleJaliscoMediaPeriodicPollJobSatisfied:invalidRequest:
_handleJaliscoPushMessage:withCompletionHandler:
_handleJobNamed:satisfied:invalid:
_handleLibraryAuthServiceTokenDidChangeNotification:
_handleLocalStoreAccountPropertiesDidChangeNotification:
_handleMusicSettingsChangedNotification
_handleMusicSocialPushMessage:withCompletionHandler:
_handleMusicSubscriptionStatusDidChangeNotification:
_handleNewArtistContentResponseNotification:
_handlePlayActivityFlushInternalTestRequestNotification
_handlePrivacyAcknowledgementErrorWithMessage:underlyingError:
_handleRecommendationsResponseModel:completion:
_handleSagaAuthentication:finishedForReason:explicitUserAction:shouldStartInitialImport:completionHandler:
_handleSagaDeferredPushUpdateJobSatisfied:invalidRequest:
_handleSagaDeferredPushUpdateTask:completion:
_handleSagaPushMessage:withCompletionHandler:
_handleSubscriptionStatusDidChangeNotification:
_handleTask:completion:
_handleURLBagProviderDidUpdateBagNotification:
_handleUpdatedBag:
_handleUpdatedSubscriptionStatus:
_handleUserIdentityStoreDidChangeNotification:
_handleUserIdentityStoreLocalStoreAccountPropertiesDidChangeNotification:
_handlerCoordinator
_handlerProvider
_has
_hasAddToPlaylistBehavior
_hasArtistAndAlbumData
_hasInvokedCompletionHandler
_hasStarted
_hasValidCapabilities
_hasValidUserIdentity:forSourceType:
_havePendingCloudUpdateLibraryCheck
_havePendingOperationToReloadSecondaryAccountLibraries
_havePendingSagaUpdate
_havePendingSubscriptionStatusCheck
_hlsKeyRefreshOperationQueue
_homeSharingPrefsNumberForKey:
_identifiersOfApplicationsWithExpiredAccessToMediaLibrary
_identifiersOfApplicationsWithGrantedAccessToMediaLibrary
_identifiersOfApplicationsWithGrantedAccessToMediaLibraryIncludingTCCAcceptanceDates
_identity
_identityProperties
_identityStore
_ignoreAccountChanges
_ignoreMinRefreshInterval
_imageURLFromArtworkInfo:
_importAlbumsFromRevision:toRevision:clientIdentity:baseDirectory:outAlbumsResponseData:outAlbumsResponseDataDestinations:
_importAllItemArtworkWithClientIdentity:
_importArtistsFromRevision:toRevision:clientIdentity:baseDirectory:outArtistsResponseData:outArtistsResponseDataDestinations:
_importHeroImageForArtistType:withPersistentID:clientIdentity:completionHandler:
_importLyricsWithLyricsTokenMap:clientIdentity:
_importOriginalContainerArtworkWithClientIdentity:
_importOriginalItemArtworkWithClientIdentity:
_importOriginalScreenshotsWithClientIdentity:
_importPlaylistsFromRevision:toRevision:clientIdentity:baseDirectory:outPlaylistsResponseData:outPlaylistsResponseDataDestinations:
_importTracksFromRevision:toRevision:clientIdentity:baseDirectory:outItemsResponseData:outTracksResponseDataDestinations:outItemsToLyricsTokenMap:
_importTracksFromRevision:toRevision:clientIdentity:withCompletionHandler:
_importTracksFromRevision:toRevision:withItemsResponse:clientIdentity:
_importer
_init
_initWithAccounts:activeAccount:baseConfiguration:
_initWithConfiguration:pendingChangesCoordinator:
_initWithInitialState:finalState:computation:
_initialImport
_initialState
_initializeAncillaryServices
_initializeBTAHandlers
_initializeMappings
_initiateArtworkUpload
_internalDefaults
_internalOperationQueue
_invalidateLocalCache
_isActive
_isCancelled
_isCellularDataRestrictedDidChangeNotification:
_isClientAllowedToRequestCapabilitiesForConnection:
_isClientAllowedToRequestRestrictedInformationForConnection:
_isEnabledWithURLBag:
_isExplicit
_isExplicitUserAction
_isNativeMusicAppInstalled
_isObservingTCCAccessChangedNotification
_isPendingAuthentication
_isSupportedJaliscoMediaKind:
_isSystemService
_isValidTimeInterval:
_itemIDs
_itemKind
_itemPropertiesCoalescingTimer
_itemPurchaseHistoryIDs
_itemSagaID
_itemSagaIDs
_jaliscoRequestHandler
_jobNameToSelectorMap
_key
_lastSeenDSID
_lastTimePeriodicXPCFired
_latestAllArtistImagesMap
_library
_libraryAddedDate
_libraryIdentifier
_libraryManagementPolicy
_listener
_loadArtworkInfoForSubscriptionPersistentIDs:artworkType:entityType:clientIdentity:completionHandler:
_loadIdentitiesWithCompletion:
_localizedDescription
_lock
_loggable
_loginRequestInFlight
_lyricsInfoDictionaries
_managedHandlerClasses
_mediaContentTasteCacheDirectoryPath
_mediaContentTasteCacheFilePathForAccount:
_mediaFilter
_mediaKinds
_mediaPlaybackDefaults
_mediaType
_mediaUserStateCenterServer
_mergeToCloudLibraryPreference
_migrateToLatestUserVersionForConfigurations:
_ml3ContainerPropertyToGeniusPlaylistPropertyMap
_ml3ContainerPropertyTransformMap
_ml3TrackPropertyToGeniusTrackPropertyMap
_ml3TrackPropertyTransformMap
_mlModel
_model
_musicAppIsInstalled
_musicLibrary
_musicSubscriptionCheckStatus
_name
_networkActivityIndicatorVisible
_networkAvailabilityService
_nextEvaluateSyncRulesOperationTimeKey
_nextEvaluateSyncRulesThrottleOperationTimeKey
_nextFlushPlayActivityFireSyncInterval
_nextJaliscoAppsPollTimeKey
_nextJaliscoMediaPollTimeKey
_notifyObserversForActiveUserIdentityChanged
_numberOfItems
_onQueue_sendRequest:withInternalResponseHandler:
_opaqueID
_operation
_operationIdentifier
_optInMessageContentForPriorityMessageContent:
_optInMessageForPriorityMessage:completion:
_originatingClientConnection
_outputClusterType
_parseAuthorizedAccountTokenWithBytes:length:
_parseBrowseListingWithBytes:length:
_parseBulkCloudArtworkInfoResponseWithBytes:length:
_parseBulkCloudLyricsInfoResponseWithBytes:length:
_parseCloudArtworkInfoResponseWithBytes:length:
_parseCloudLyricsInfoResponseWithBytes:length:
_parseControlInterfacesResponseWithBytes:length:
_parseControlPromptResponseWithBytes:length:
_parseDeletedIDListingWithBytes:length:
_parseDictionaryCollectionWithBytes:length:
_parseEditCommandResponseWithBytes:length:
_parseErrorResponseWithBytes:length:
_parseItemIDArrayWithBytes:length:
_parseItemPropertyCountWithBytes:length:
_parseItemsResponseWithBytes:length:usingHandler:
_parseListingCollectionWithBytes:length:usingHandler:
_parseListingItemWithBytes:length:usingHandler:
_parseLoginResponseWithBytes:length:
_parsePlayStatusResponseWithBytes:length:
_parseResponseCode:bytes:length:usingHandler:
_parseUpdateResponseWithBytes:length:
_parseUpdateTypeWithBytes:length:
_parsedBooks
_parserSuccess
_payloadDownloadPathOverride
_pendingChangesCoordinator
_pendingChangesPath
_performInitialJaliscoImportWithClientIdentity:completion:
_performInitialSagaImportWithClientIdentity:allowingNoisyAuthPrompt:completionHandler:
_performJaliscoImportWithClientIdentity:byAddingMediaKind:completionHandler:
_performPendingOperations
_performPeriodicSubscriptionTasks
_performPrivacyPromptOperation
_performRecommendationsRequest
_performRecommendationsUpdate
_performTokenRequest:completionHandler:
_periodicPollingActivityCriteriaWithRefreshInterval:gracePeriod:
_persistent
_phase
_pinnedOnly
_playActivityEvents
_playCount
_playlistCloudIDs
_playlistGlobalID
_playlistName
_playlistPersistentID
_playlistPropertiesCoalescingTimer
_playlistSagaIDs
_playlistShareURL
_pollingGracePeriodSecondsForRefreshInterval:
_pollingRefreshIntervalSecondsUsingBag:
_postContentTasteChanges:withCompletionHandler:
_postContentTasteChangesForPendingItems
_postLibraryUpdateProgressChangedForLibraryType:
_postPendingContentTasteChangesByAddingChange:completionHandler:
_powerAssertionIdentifier
_powerEventBeginName
_powerEventEndName
_powerEventPayload
_preference
_preferences
_preferredVideoQuality
_prepareArchiveWithContentTasteReponse:
_prepareCachedResponseFromArchiveAtPath:
_prepareCachedResponseFromResponse:byAddingResponseTimeIntervalKey:withResponseTimeInterval:
_prepareContentTasteResponse:withContentTasteItems:fromCachedContentTasteResponseItems:includedContentTasteItems:
_prepareLibraryLoadErrorWithJaliscoError:sagaError:
_preprocessURLResolutionCacheDictionary:
_privacyAcknowledgementPolicy
_privacyIdentifier
_privacyPromptOperation
_privilegedCapabilities
_processActiveConfigurationChange:initialSetup:
_processFavoritedItems:
_processSupportedConfigurationsChange:initialSetup:
_processedItemCount
_progress
_prohibitArtworkPrefetch
_prohibitLibraryUpload
_properties
_purchaseHistoryID
_pushEnvironment
_pushNotificationController
_queryFilterEncodedStringForDAAPNameString:
_queryFilterString
_queryStoreIDs
_queue
_recomputeInUsersLibraryForTrackPids:resetFavoriteState:
_referralAlbumAdamID
_referralPlaylistGlobalID
_refreshCapabilitiesWithPrivacyAcknowledgementPolicy:
_refreshCloudServiceStatus
_refreshIntervalFromBag
_refreshStorefrontCountryCode
_refreshStorefrontIdentifier
_registerAPNSToken:usingRequestContext:withCompletion:
_registerDeviceAndPerformInitialImportWithUserIdentityProperties:cloudLibraryEnableReason:completionHandler:
_registerFailureToRevokeMusicUserTokensForApplicationIdentifier:error:
_registerFailureToRevokeMusicUserTokensForApplicationsWithIdentifiers:error:
_registerMediaKinds:usingRequestContext:withCompletion:
_releaseDate
_reloadSubscriptionStatusAndEnableCloudMusicLibraryWithReason:completionHandler:
_removeAllSubscriptionContentWithCompletion:
_removePendingChangesForContentTasteUpdateOperation:
_removeSourcePurchaseHistoryForMusicTracks
_removeUnavailableSubscriptionAssetsInLibrary:
_replyBlocksForPID
_requestBagWithAsynchronousRequestsGroup:
_requestCapabilities
_requestIdentityPropertiesWithAsynchronousRequestsGroup:
_requestItemProperties
_requestPersonalizationStyle
_requestReason
_requestSubscriptionStatusWithAsynchronousRequestsGroup:
_requestingBundleID
_requestingBundleIdentifierForOriginatingClientConnection:clientInfo:error:
_resizedImageDataFromLocation:
_response
_responseBodyForRequest:retryTimeout:debugName:
_responseCode
_responseData
_responseDataFileURL
_responseExpirationDate
_responseHeaderFields
_responseModel
_responseRevisionID
_restoreCurrentTasks
_retrievePreviousRecommendationMatchesFromCache
_retryEnablingCloudMusicLibraryForReason:
_retryLoadingCloudLibraryForSecondaryAccountsOnAppleTV
_retryQueue
_retryState
_revertFavoritingEntityTypeAlbum
_revertFavoritingEntityTypeArtist
_revertFavoritingEntityTypePlaylist
_revertFavoritingEntityTypeTrack
_revertPendingFavoriteEntityForPermanentlyFailedOperation
_revokeMusicUserTokensForApplicationWithIdentifier:andUserIdentity:withCompletion:
_revokeMusicUserTokensForApplicationsWithIdentifiers:
_runDisableCloudLibraryOperationWithClientIdentity:byDeletingDatabase:disableActiveLockerAccount:removeSourcePurchaseHistory:isHandlerDeactivating:completionHandler:
_runSagaAuthenticateOperationWithClientIdentity:mergePreference:allowNoisyPrompt:cloudLibraryEnableReason:completionHandler:
_runSubscriptionStatusCheckOperationWithReason:completionHandler:
_sagaEnabledOnDevice
_sagaIDs
_sagaImportFailureCount
_sagaRequestHandler
_sanitizedUserStatesForRemoteClientConnection:
_saveCurrentTasks
_savePendingChanges:
_scheduleJobNamed:withStartTime:baseBtaJob:
_scheduleNextPlayActivityFlushOperationWithCriteria:
_schedulePostingContentTasteForFailedItems
_scheduleTask:withStartTime:
_scheduleUpdatingContentTasteWithNewExpirationDate
_score
_seedItemIDs
_sendOptOutWithCUID:troveID:
_serialQueue
_serverDatabaseRevision:
_serverNotificationsManager
_serverOperationsManager
_service
_serviceListener
_serviceName
_setEnabledTopics:
_setHomeSharingPrefsNumber:forKey:
_setLikedState:forEntity:
_setOrRemoveObject:forKey:
_setShadowOperationForRemoteExecution:
_setupCacheDirectoryStructureWithPath:
_setupInternalQueues
_setupKVO
_setupMPMediaLibraryFilteringForConfigurations:
_setupNotifications
_setupSigtermHandler
_setupXPCListenerForService:
_shouldBypassEnforcementOfPrivacyAcknowledgementForClientConnection:forIncomingCloudServiceCapabilitiesRequest:
_shouldHandleDaemonStartupOrAccountChangedNotificationWithProperties:
_shouldIgnoreDeveloperTokenCache
_shouldIgnoreUserTokenCache
_shouldParseMetadata
_shouldProcessSpecificArtists
_shouldRestart
_sigtermSource
_skipCount
_songMetadataDescriptor
_sourceType
_standardBodyDictionaryWithAdditionalFields:
_start
_startAncillaryServices
_startGeniusRequestWithStartDate:retryTimeout:debugName:connectionResponseBlock:
_startObservingRevocations
_startTask:
_startupQueue
_startupSequenceCompleted
_state
_stateChange
_stateDump
_stateHandle
_stop
_stopAncillaryServices
_stopObservingRevocations
_stopTask:
_storeAdamID
_storeID
_storeRequestContext
_storeRequestContextWithIdentity:applicationIdentifier:
_storeRequestContextWithIdentity:clientInfo:
_storefrontCountryCode
_storefrontCountryCodeRequestCompletionHandlers
_storefrontIdentifier
_storefrontIdentifierRequestCompletionHandlers
_subscribedPlaylistCloudIDs
_subscriptionObservationToken
_subscriptionStatusObservationToken
_subscriptionStatusResponse
_supportedConfigurations
_supportedConfigurationsDSIDs
_supportedJaliscoMediaKinds
_supportedJaliscoMediaKindsWithSagaEnabled
_supportedMediaKinds
_supportedMediaKindsDatabasePropertyValue
_supportedMediaKindsHandler
_supportsAutomaticEnablingiCloudMusicLibrary
_syncProgressDictionary
_synchronouslyLoadArtistUpdatePollingFrequencyFromBag
_table
_taskScheduler
_taskWithName:
_tccAccessChangedNotificationToken
_tearDownKVO
_tearDownNotifications
_testNextFlushPlayActivityFireSyncInterval
_throttledDeferredEvaluateKeepLocalTime
_timeIntervalForNextFlushOperationWithReplyBlock:
_timeStamp
_title
_token
_tokenCollection
_trackList
_troveID
_tryEnablingCloudMusicLibraryForReason:completionHandler:
_tryEnablingICMLOnDevicesSupportingSideLoadedContentWithProperties:reason:withCompletionHandler:
_type
_underlyingConnection
_uniqueAlbums
_uniqueDatesWithAddedContent
_uniqueSongs
_unsafeBackend
_unscheduleJobNamed:
_unscheduleTask:
_updateActionTimeStamp
_updateAirPlaySettingsForConfiguration:
_updateAllArtistStoreIDsUsingAllArtistImagesMap:
_updateAllowsExplicitContentSettingForConfiguration:automatically:
_updateCloudLibraryOperation
_updateCloudLibraryQueue
_updateCompletionBlock
_updateContentTasteForGlobalPlaylists:
_updateContentTasteForItem:invalidatingLocalCache:configuration:withCompletionHandler:
_updateContentTasteForMediaItems:
_updateEnhancedAudioAvailabilityIfNeeded
_updateFavoritingEntityTypeAlbumWithAddedItems:
_updateFavoritingEntityTypeArtistWithAddedItems:
_updateFavoritingEntityTypePlaylistWithAddedItems:
_updateFavoritingEntityTypeTrackWithAddedItems:
_updateGlobalPlaylistsFromContainersPayloadAtPath:downloadPathForSubscribedContainersPayload:clientIdentity:
_updateHTTPCookieStoreForContentRestrictions
_updateIntervalSeconds
_updateJaliscoLibraryWithClientIdentity:completion:
_updateLibrary
_updateLibraryCompletionHandlers
_updateLibraryOperation
_updateLibraryQueue
_updateOptInIfNecessary
_updatePushNotificationsRegistration
_updateRegistrationForConfiguration:completion:
_updateRequest
_updateSagaLibraryWithReason:allowNoisyAuthPrompt:forConfiguration:completionHandler:
_updateSpecificArtistStoreIDsUsingAllArtistImagesMap:
_updateStateWithChange:
_updateSupportedConfigurationsDSIDs
_updateTaskHelper
_updateWithBag:error:
_updateWithCapabilities:error:privacyAcknowledgementPolicy:capabilitiesRequestOperation:
_updateWithIdentityProperties:error:
_updateWithStorefrontIdentifier:error:
_updateWithSubscriptionStatusResponse:error:
_uploadArtworkAssetWithInfo:completionHandler:
_uploadArtworkAssetWithInfo:uploadResponsesURL:uploadResponseData:postUploadBackOffDelay:followupDownloadRequestsURL:
_uploadItemPropertiesQueue
_uploadLibrary
_uploadLibraryRequest
_uploadPlaylistPropertiesQueue
_uploadResponseStatus
_uploadingLibraryIsSupported
_urlRequest
_urlResolutionCacheFilePath
_useLongIDs
_userArtworkToken
_userDefaults
_userHasEverToggledOptInSwitch
_userIdentity
_userIdentityForAccount:
_userIdentityStore
_userNotificationController
_userRating
_userStateAccessForConnection:
_userStatesCache
_userStatesChanged:
_userToken
_valueTypeMap
_verificationInteractionLevel
_wasCancelled
_wasRestoredFromCloudBackup:
_watchdog
_workQueue
_wrapAndCacheResponseModelWithCompiledMLModel:
_writeURLResolutionCacheFileUsingBag:
_xpcListeners
_xpcStreamHandlerQueue
absoluteString
acceptsGzipEncoding
accessQueue
accountDSID
accountManager
accountStore
accountlessHandler
action
actionType
active
activeAccount
activeAccountDidChange
activeConfiguration
activeConfigurationChanged
activeConfigurationDSID
activeConnections
activeLockerAccount
activeUser
activityCriteriaForTask:startTimeInSeconds:
adamID
adamIDToSagaIDMap
adamId
addActionDetails:
addArtistContent:
addAsset:shouldPreloadKeys:waitForKeyIdentifiers:
addBackgroundOperation:forLibraryType:priority:
addBackgroundOperation:priority:
addBarrierBlock:
addCatalogContent:
addCloudItemID:idType:
addCompletionHandler:
addContentFeatures:
addContentPages:
addContentParameters:
addDelegate:queue:
addDependency:
addEntriesFromDictionary:
addGeniusPlaylistWithPersistentID:name:seedItemIDs:itemIDs:clientIdentity:completionHandler:
addGeniusPlaylistWithPersistentID:name:seedItemSagaIDs:itemSagaIDs:configuration:completion:
addImages:
addItemWithSagaID:toPlaylistWithPersistentID:clientIdentity:completionHandler:
addItemWithSagaID:toPlaylistWithPersistentID:configuration:completion:
addItemWithSagaID:toPlaylistWithPersistentID:requestingBundleID:clientIdentity:completionHandler:
addMessageActions:
addMessageEntry:completion:
addNonLibraryOwnedPlaylistsWithGlobalIDs:completion:
addObject:
addObjectsFromArray:
addObserver:forKeyPath:options:context:
addObserver:selector:name:object:
addOperation:
addOperation:forLibraryType:priority:
addOperation:priority:
addOperationWithBlock:
addOperations:
addPendingChange:
addStoreItemIDs:andAddTracksToCloudLibrary:withCompletion:
addStoreItemWithAdamID:referral:clientIdentity:completionHandler:
addStoreItemWithAdamID:referral:configuration:completion:
addStoreItemWithAdamID:referral:toPlaylistWithPersistentID:clientIdentity:completionHandler:
addStoreItemWithAdamID:referral:toPlaylistWithPersistentID:configuration:completion:
addStoreItemWithOpaqueID:requestingBundleID:clientIdentity:completionHandler:
addStoreItemWithOpaqueID:toPlaylistWithPersistentID:requestingBundleID:clientIdentity:completionHandler:
addStorePlaylistWithGlobalID:clientIdentity:completionHandler:
addStorePlaylistWithGlobalID:configuration:completion:
addSubrules:
addTarget:
addToPlaylistBehavior
addValue:
addedItems
ageVerificationStateForUserIdentity:
aggregateLibraryRecommendationMetricsFromSnapshots:
album
albumAdamID
albumArtistPersistentIDsToUpdate
albumMetadataDescriptor
allArtistImagesMapCacheFilePathURL
allArtistImagesMapURL
allGeniusPlaylistPropertiesWithML3ContainerProperties
allGeniusTrackPropertiesWithML3TrackProperties
allHTTPHeaderFields
allItems
allML3ContainerPropertiesWithGeniusPlaylistProperties
allML3TrackPropertiesWithGeniusTrackProperties
allMediaDownloadLibraryIdentifiers
allObjects
allStoreAccountsWithError:
allValues
allocWithZone:
allowNoisyAuthPrompt
allowedRetryCount
allowsCellularData
allowsExplicitContent
allowsMusicVideos
alternateDSID
anonymousListener
anyInLibrary:predicate:
anyObject
appendString:
applicationMessage
applyServerStateUpdatedWithUserStates:
apsPayload
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObjects:
arrayWithObjects:count:
artist
artistAdamID
artistContentAtIndex:
artistContentType
artistContents
artistContentsCount
artistMetadataDescriptor
artistName
artistNameLibraryMatchURL
artistPersistentIDsToUpdate
artworkDataSource
artworkDownloadAccessQueue
artworkDownloadOperationMap
artworkDownloadOperationQueue
artworkDownloadSession
artworkDownloadWatchdog
artworkInfoDictionaries
artworkInfos
artworkRelativePathFromToken:
artworkToken
artworkTokenForArtistHeroURL:
artworkTokenForChapterWithItemPID:retrievalTime:
artworkTokenForSource:
artworkType
artworkURLWithSize:cropStyle:format:
artworkURLWithSize:cropStyle:format:preferP3ColorSpace:
assetFileSize
assetURL
attributesOfItemAtPath:error:
audioQualityPreference
auditToken
authenticateFailureCode
authenticateForConfiguration:startInitialImport:enableCloudLibraryPolicy:isExplicitUserAction:completion:
authorizationStatus
autoPlayMode
automaticDownloadMediaKindsForMusic
automaticDownloadsEnabled
autorelease
autoupdatingActiveAccount
autoupdatingSharedLibrary
averagePlaysPerItemAdded
backgroundOperationQueue
backgroundTaskManager
bagForProfile:profileVersion:
bagProfile
bagProfileVersion
becomeActive
becomeInactiveWithDeauthentication:completion:
beginObservingBagWithHandler:
beginObservingCloudServiceStatusWithCompletionHandler:
beginObservingSubscriptionStatusWithHandler:
beginPerformUpdate
beginTransaction
bitDepth
blockOperationWithBlock:
bodyData
bodyDataURL
books
boolForKey:
boolValue
buildFeatures
buildURLRequestWithCompletionHandler:
buildVersion
bulkArtistNameLibraryMatchBatchSize
bulkArtistNameLibraryMatchURL
bulkRefreshWaitInterval
bundleIdentifier
bundleRecordForAuditToken:error:
bypassBagSanityChecks
bytes
cachedResponse
callCompletionHandlers
canShowCloudDownloadButtons
canShowCloudDownloadButtonsWithCompletion:
canShowCloudMusic
canShowCloudMusicWithCompletion:
canShowCloudVideo
canShowCloudVideoWithCompletion:
cancel
cancelAllImports
cancelAllImportsAndWaitForOperationsToFinish:
cancelAllOperations
cancelAllOperationsAndWaitForOperationsToFinish:
cancelArtistHeroImageUpdate
cancelArtistHeroImageUpdateAndWaitForOperationToFinish:
cancelDownloads:
cancelImportOperation:completionHandler:
cancelOperations
cancelOperationsByClass:
cancelOperationsWithCompletionHandler:
cancelPendingChanges
cancelPendingChangesForLibraryType:
cancelPendingChangesWithCompletion:
cancelRequest:
cancellAllOperations
canonicalId
canonicalResponseForResponse:
capabilitiesDidChange:
carrierBundleDeviceIdentifier
catalogContentAtIndex:
catalogContentType
catalogContentsCount
categoryWithIdentifier:actions:intentIdentifiers:options:
center
centerQueue
changeLibraryManagementPolicy:
changeLibraryManagementPolicy:withAccountsStateChange:
channelLayoutDescription
checkInDatabaseConnection:
checkoutReaderConnection
class
cleanupArtworkWithOptions:
cleanupArtworkWithOptions:usingConnection:
clearAllCloudKVSData
clearAllGeniusData
clearArtistContents
clearCatalogContents
clearContentFeatures
clearJaliscoAccountID
clearJaliscoLastExcludedMediaKinds
clearLocationFromLibrary:persistentIDs:disableKeepLocal:usingConnection:
clearNeedsUpdateForTokens
clearSagaCloudAccountID
clearSagaCloudAddToPlaylistBehavior
clearSagaCloudLibraryCUID
clearSagaCloudLibraryTroveID
clearSagaLastGeniusUpdateDate
clearSagaLastItemPlayDataUploadDate
clearSagaLastPlaylistPlayDataUploadDate
clearSagaPrefersToMergeWithCloudLibrary
clearValues
clientIdentifier
clientIdentity
clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:bundleIdentifier:
clientVersion
close
closeFile
cloudAddRequestWithDatabaseID:
cloudAlbumID
cloudArtworkInfoDictionaries
cloudIDToLyricsTokenMap
cloudLibraryStateReason
cloudServiceStatusMonitor
code
codecString
compare:
compare:options:
compileModelAtURL:error:
completionHandler
components:fromDate:
componentsJoinedByString:
componentsSeparatedByString:
componentsWithURL:resolvingAgainstBaseURL:
computation
concurrent
configuration
configurationFromSourceConfiguration:userIdentity:
conformsToProtocol:
connectWithCompletionHandler:
connection
connection:channelSubscriptionsFailedWithFailures:
connection:didChangeConnectedStatus:
connection:didFailToSendOutgoingMessage:error:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didReceivePublicToken:
connection:didReceiveToken:forInfo:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didSendOutgoingMessage:
connectionCompletionHandler
connectionDidReconnect:
constraintsForSystemApplicationType:
containerCloudID
containerID
containerIDs
containerQueryWithContainer:
containerType
containingBundleRecord
contentFeaturesAtIndex:
contentFeaturesCount
contentFeaturesType
contentKeySession:didFinishProcessingKey:withResponse:error:
contentPages
contentParameters
contentTasteItem
contentTasteItems
contentTasteType
contentTasteUpdateOperation:finishedByInvalidatingCache:error:
contentTasteUpdateResponse
contentType
contentTypeAsString:
contentsOfDirectoryAtPath:error:
controllerWithUserIdentity:
cookieWithProperties:
copy
copyItemAtURL:toURL:error:
copyWithBlock:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createCFUserNotification
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createFeatureProviderDictionaryFromNewContentResponse:withLibraryArtistSnapshots:
createFileAtPath:contents:attributes:
createPlaylistWithPersistentID:properties:trackList:clientIdentity:completionHandler:
createPlaylistWithPersistentID:properties:trackList:configuration:completion:
createPlaylistWithPersistentID:properties:trackList:requestingBundleID:clientIdentity:completionHandler:
cuid
cumulativePlayCount
cumulativeSkipCount
currentAdamID
currentAlbumCloudLibraryID
currentArtistCloudLibraryID
currentCloudID
currentConnection
currentDatabaseRevision
currentDeviceInfo
currentGlobalPlaylistID
currentHandler
currentItemCount
currentLocale
currentLyricsToken
currentPaginationToken
currentParsingBook
currentPlaylistCloudID
currentPlaylistKind
currentRunLoop
currentStoreFrontID
currentTasks
currentThermalLevel
currentUpdateOperation
daapQueryFilterString
daemonDefaults
daemonOptionsForConfiguration:
data
dataForKey:
dataUsingEncoding:
dataWithBytes:length:
dataWithContentsOfFile:
dataWithContentsOfURL:options:error:
dataWithJSONObject:options:error:
dataWithPropertyList:format:options:error:
databaseConnectionAllowingWrites:withBlock:
databaseID
databasePath
databaseRevision
date
dateByAddingTimeInterval:
dateFromComponents:
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
daysSinceLastPlayedDate
deauthenticateForConfiguration:completion:
debugDescription
decodeArrayOfObjectsOfClass:forKey:
decodeDoubleForKey:
decodeInt32ForKey:
decodeInt64ForKey:
decodeIntegerForKey:
decodeObjectForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decodeTCCIdentityForKey:
decreasePriority
decreasePriorityForAllOperations
decreaseQualityOfService
defaultCenter
defaultIdentityStore
defaultInfo
defaultManager
defaultMediaLibrary
defaultSession
delegate
delegateAccountStoreListener
delegationProviderService
deleteAllEntitiesFromLibraryWithDeletionType:
deleteAllEntitiesFromLibraryWithDeletionType:usingConnection:
deleteAutomaticDownloadsKey
deleteDB
deleteDatabaseProperty:
deleteFromLibrary
deleteFromLibrary:deletionType:persistentIDs:count:usingConnection:
deleteHandlerForConfiguration:
deleteInteractionsWithGroupIdentifiers:bundleID:protectionClass:completionHandler:
deliverSubscriptionStatusResponse:forRemoteRequestWithUniqueIdentifier:error:
deprioritizeAlbumArtistHeroImageForPersistentID:
deprioritizeAlbumArtistHeroImageForPersistentID:configuration:
deprioritizeArtistHeroImageForPersistentID:
deprioritizeArtistHeroImageForPersistentID:configuration:
deprioritizeContainerArtworkForSagaID:
deprioritizeContainerArtworkForSagaID:configuration:
deprioritizeImportArtworkForCloudID:artworkType:
deprioritizeItemArtworkForPurchaseHistoryID:
deprioritizeItemArtworkForPurchaseHistoryID:configuration:
deprioritizeItemArtworkForSagaID:
deprioritizeItemArtworkForSagaID:configuration:
deprioritizeScreenshotForPurchaseHistoryID:
deprioritizeScreenshotForPurchaseHistoryID:configuration:
deprioritizeScreenshotForSagaID:
deprioritizeScreenshotForSagaID:configuration:
deprioritizeSubscriptionContainerArtworkForPersistentID:
deprioritizeSubscriptionContainerArtworkForPersistentID:configuration:
deprioritizeSubscriptionItemArtworkForPersistentID:
deprioritizeSubscriptionItemArtworkForPersistentID:configuration:
deprioritizeSubscriptionScreenshotForPersistentID:
deprioritizeSubscriptionScreenshotForPersistentID:configuration:
description
descriptionWithLocale:
developerToken
deviceGUID
deviceInfo
deviceMediaLibraryWithUserIdentity:
deviceName
dictionary
dictionaryForBagKey:
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithContentsOfFile:
dictionaryWithContentsOfURL:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
dictionaryWithSharedKeySet:
didChangeValueForKey:
disableActiveLockerAccount
disableCloudLibraryWithReason:completion:
disableLockerAccountWithDSID:completionHandler:
disconnect
displayType
distantPast
domain
doubleValue
downPinCollectionsForClasses:configuration:
downloadManager:didCancelAssets:
downloadManager:didChangeDownloadPausedReasonForAssets:
downloadManager:didEnqueueAssetDownloads:didRemoveAssetDownloads:
downloadManager:didFinishAsset:withError:
downloadManager:didUpdateDownloadProgress:
downloadResourcesForMessageWithIdentifier:bundleIdentifier:completion:
downloaderAccountID
dsid
eTagValueFromContentTasteResponse:
earlierDate:
effectiveBoolValueForSetting:
elementCodeForProperty:
emptyAllTables
enableCloudLibraryWithClientIdentity:startInitialImport:enableCloudLibraryPolicy:isExplicitUserAction:completionHandler:
enableReason
enabledTopics
encodeDouble:forKey:
encodeInt32:forKey:
encodeInt64:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeTCCIdentity:forKey:
encodeWithCoder:
endArray
endObservingBagWithToken:
endObservingCloudServiceStatusWithToken:completionHandler:
endObservingSubscriptionStatusWithToken:
endPerformUpdate
endReasonType
endTransaction
endpoint
enhancedAudioConfiguration
enhancedAudioKeyManager
enhancedAudioSharedContentKeyPath
enqueueBlockForTransactionCommit:
enqueueChildOperation:
enqueueDataRequest:withCompletionHandler:
enqueueDownloadRequest:toDestination:withCompletionHandler:
enqueuerProperties
entityType
enumerateBackgroundOperationsUsingBlock:
enumerateCloudItemIDsUsingBlock:
enumerateDeletedItemsInResponseData:usingHandler:
enumerateHandlersForAccountState:usingBlock:
enumerateItemsInResponseData:usingHandler:
enumerateItemsUsingBlock:
enumerateKeyEntriesUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumerateOperationsUsingBlock:
enumeratePathsToDeleteFromLibrary:persistentIDs:usingBlock:
enumeratePersistentIDsAfterRevision:revisionTrackingCode:maximumRevisionType:forMediaTypes:inUsersLibrary:usingBlock:
enumeratePersistentIDsAndProperties:usingBlock:
enumeratePersistentIDsUsingBlock:
enumerateRawItemsInResponseData:usingHandler:
enumerateRowsWithBlock:
enumeratorAtPath:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
environmentMonitorDidChangeBatteryLevel:
environmentMonitorDidChangeNetworkReachability:
environmentMonitorDidChangeNetworkType:
environmentMonitorDidChangePower:
environmentMonitorDidChangeTelephonyStatus:
environmentMonitorDidChangeThermalLevel:
ephemeralSessionConfiguration
equivalencySourceAdamID
error
errorWithDomain:code:userInfo:
eventDate
eventTimeZone
eventType
exceptionWithName:reason:userInfo:
executeQuery:withParameters:
executeUpdate:
executeUpdate:withParameters:error:
expirationDate
externalID
failureCount
familyID
familyMemberStoreID
favoriteAlbumWithCloudLibraryID:time:completionHandler:
favoriteAlbumWithCloudLibraryID:time:configuration:completionHandler:
favoriteArtistWithCloudLibraryID:time:completionHandler:
favoriteArtistWithCloudLibraryID:time:configuration:completionHandler:
favoriteEntityWithSagaID:entityType:time:completionHandler:
favoriteEntityWithSagaID:entityType:time:configuration:completionHandler:
favoriteEntityWithStoreID:entityType:time:completionHandler:
favoriteEntityWithStoreID:entityType:time:configuration:completionHandler:
favoritePlaylistWithGlobalID:time:completionHandler:
favoritePlaylistWithGlobalID:time:configuration:completionHandler:
featureName
featureValueForName:
fetchConfigurationWithCompletionHandler:
fetchEnhancedAudioOfflineKeys
fetchMissingOfflineKeys
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileHandleForWritingToURL:error:
fileSize
fileURLWithPath:
fileURLWithPath:isDirectory:
fileURLWithPathComponents:
finalState
finish
finishWithError:
finishedUpdateOperationForLibraryType:withResponse:
firstName
firstObject
floatValue
flushPendingPlayActivityEventsWithCompletionHandler:
followupUpdateOpertion
geniusPlaylistPropertyForML3ContainerProperty:
geniusTrackPropertyForML3TrackProperty:
geniusValueForML3ContainerProperty:value:
geniusValueForML3TrackProperty:value:
geniusValueForMLValue:
getAccountNotificationsWithCompletionHandler:
getBagForRequestContext:forceRefetch:withCompletionHandler:
getBagForRequestContext:withCompletionHandler:
getCachedContentTasteResponseForConnectionConfiguration:
getCookieWithName:userIdentifier:
getKeyStatusForAccountUniqueIdentifier:error:
getListenerEndpointForService:completion:
getPlayActivityEvents:storeAccountID:returningError:
getPropertiesForUserIdentity:completionHandler:
getPropertiesForUserIdentity:error:
getResourceValue:forKey:error:
getResultsRequest
getStoreAccounts:returningError:
getSubscriptionStatusForUserIdentity:bypassingCache:withCompletionHandler:
getSubscriptionStatusForUserIdentity:withCompletionHandler:
getSubscriptionStatusWithCompletionHandler:
getTokenStatusForDSIDs:forcingRefresh:completion:
getUserStatesForcingRefresh:withReply:
getValuesForProperties:
getVerificationContextForUserIdentity:error:
globalIDToSagaIDMap
globalPlaylistID
globalSerialQueue
handleAccountStateChange:
handleContentTasteChangedNotification
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleMusicAppInstalled
handleMusicAppRemoved
handleMusicAppRemovedWithCompletion:
handleNotification:
handleSuccess:
handlerCoordinator
handlerForConfiguration:
handlerWithType:configuration:error:
handlers
hasActiveDownloads
hasAdamId
hasAddToPlaylistBehavior
hasArtistAndAlbumData
hasBagProfile
hasBagProfileVersion
hasBeenPreviouslyToggled
hasCanonicalId
hasCapability:
hasClientIdentifier
hasClientVersion
hasContentType
hasDeveloperToken
hasDomain
hasEntities
hasError
hasInfoForProperty:
hasIsExplicit
hasKey
hasLocalizedDescription
hasModel
hasOfflinePlaybackKeys
hasOperationsOfClass:
hasOriginalArtworkForRelativePath:
hasPendingPlayActivityEvents:returningError:
hasPendingPlayEvents
hasPhase
hasProperNetworkConditionsToPlayMedia
hasProperNetworkConditionsToPlayMediaWithCompletion:
hasProperNetworkConditionsToShowCloudMedia
hasProperNetworkConditionsToShowCloudMediaWithCompletion:
hasRecoId
hasReleaseDate
hasShouldIgnoreDeveloperTokenCache
hasShouldIgnoreUserTokenCache
hasSuffix:
hasTokenCollection
hasUserToken
hash
havePendingOperationToReloadSecondaryAccountLibraries
hideItemsWithPurchaseHistoryIDs:clientIdentity:completionHandler:
hideItemsWithPurchaseHistoryIDs:configuration:completion:
homeUserIdentifiers
householdID
iCloudPersonID
ic_URLByAppendingQueryParameters:
ic_arrayValueForKey:
ic_cloudClientErrorWithCode:userInfo:
ic_dataValueForKey:
ic_dictionaryValueForKey:
ic_intValueForKey:
ic_isAutomaticDownloadsEnabledForMediaKindMusic
ic_numberValueForKey:
ic_referencesSameFile:
ic_sharedAccountStore
ic_sharedRequestOperationQueueWithQualityOfService:
ic_storeAccountForStoreAccountID:error:
icd_isConnectionAllowedForService:
icd_isConnectionAllowedForService:validationReason:
icd_preferredVideoQuality
icd_sagaCloudAddToPlaylistBehavior
icd_sagaDatabaseUserVersion
icd_setPreferredVideoQuality:
icd_setSagaCloudAddToPlaylistBehavior:
identifier
identifiers
identityStore
ignoreAccountChanges
ignoreMinRefreshInterval
images
importAlbumArtistHeroImageForPersistentID:clientIdentity:completionHandler:
importAlbumArtistHeroImageForPersistentID:configuration:completion:
importAllItemArtworkAndScreenshotsWithClientIdentity:
importAllItemArtworkWithClientIdentity:
importArtistHeroImageForPersistentID:clientIdentity:completionHandler:
importArtistHeroImageForPersistentID:configuration:completion:
importArtworkForCloudID:artworkType:token:mediaType:allowsCellularData:clientIdentity:completionHandler:
importArtworkTokenForEntityPersistentID:entityType:artworkToken:artworkType:sourceType:usingConnection:
importCloudArtworkForRequests:
importContainerArtworkForPersistentID:clientIdentity:completionHandler:
importContainerArtworkForSagaID:clientIdentity:completionHandler:
importContainerArtworkForSagaID:configuration:completion:
importExistingOriginalArtworkWithArtworkToken:artworkType:sourceType:mediaType:
importItemArtworkForPersistentID:clientIdentity:completionHandler:
importItemArtworkForPurchaseHistoryID:clientIdentity:completionHandler:
importItemArtworkForSagaID:clientIdentity:completionHandler:
importItemArtworkForSagaID:configuration:completion:
importOriginalArtworkFromFileURL:withArtworkToken:artworkType:sourceType:mediaType:
importOriginalArtworkFromImageData:withArtworkToken:artworkType:sourceType:mediaType:
importScreenshotForPersistentID:clientIdentity:completionHandler:
importScreenshotForPurchaseHistoryID:clientIdentity:completionHandler:
importScreenshotForPurchaseHistoryID:configuration:completion:
importScreenshotForSagaID:clientIdentity:completionHandler:
importScreenshotForSagaID:configuration:completion:
importSubscriptionContainerArtworkForPersistentID:configuration:completion:
importSubscriptionItemArtworkForPersistentID:configuration:completion:
importSubscriptionScreenshotForPersistentID:configuration:completion:
importTracksFromRevision:toRevision:clientIdentity:withCompletionHandler:
importTracksUpToRevision:clientIdentity:withCompletionHandler:
importer
includeFlavors
includeHiddenItems
includePreorders
increasePriority
increasePriorityForAllOperations
increaseQualityOfService
incrementRevisionWithLibrary:persistentID:deletionType:revisionType:usingConnection:
init
initWithAccountManager:
initWithAccountManager:handlerCoordinator:
initWithAction:databaseID:databaseRevision:opaqueID:bundleID:
initWithAdamID:date:score:
initWithAdamID:playlistPersistentID:clientIdentity:
initWithAddToPlaylistBehavior:clientIdentity:
initWithApplicationMessage:bundleIdentifier:
initWithArray:
initWithArtworkImporter:clientIdentity:operationQueue:artistPersistentIDsToUpdate:albumArtistPersistentIDsToUpdate:
initWithArtworkResponseDictionary:
initWithArtworkURL:
initWithBase64EncodedString:options:
initWithBlock:
initWithBundleIdentifier:
initWithBundleIdentifier:allowPlaceholder:error:
initWithBytes:length:
initWithBytes:length:encoding:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithBytesNoCopy:length:freeWhenDone:
initWithCUID:troveID:
initWithCalendarIdentifier:
initWithCapacity:
initWithClientIdentity:
initWithClientIdentity:ItemSagaIDs:
initWithClientIdentity:PlaylistSagaIDs:
initWithClientIdentity:SubscribedPlaylistSagaIDs:ignoreMinRefreshInterval:requestReason:
initWithClientIdentity:opaqueID:bundleID:
initWithClientIdentity:opaqueID:bundleID:playlistPersistentID:
initWithClientIdentity:playlistGlobalID:
initWithClientIdentity:playlistPersistentID:
initWithClientIdentity:playlistPersistentID:properties:trackList:
initWithClientIdentity:sagaID:
initWithClientInfo:
initWithClientInfo:options:
initWithCloudIDs:
initWithCode:headerFields:data:MIMEType:error:
initWithCoder:
initWithConfiguration:
initWithConfiguration:CUID:troveID:
initWithConfiguration:adamID:clientIdentity:
initWithConfiguration:adamID:playlistPersistentID:clientIdentity:
initWithConfiguration:adamID:playlistPersistentID:referralAlbumAdamID:clientIdentity:
initWithConfiguration:adamID:playlistPersistentID:referralPlaylistGlobalID:clientIdentity:
initWithConfiguration:adamID:referralAlbumAdamID:clientIdentity:
initWithConfiguration:adamID:referralPlaylistGlobalID:clientIdentity:
initWithConfiguration:bag:
initWithConfiguration:clientIdentity:
initWithConfiguration:clientIdentity:addToPlaylistBehavior:
initWithConfiguration:clientIdentity:albumCloudLibraryID:time:
initWithConfiguration:clientIdentity:albumPersistentID:albumItemProperties:
initWithConfiguration:clientIdentity:dictionary:
initWithConfiguration:clientIdentity:globalPlaylistID:time:
initWithConfiguration:clientIdentity:itemPurchaseHistoryIDs:
initWithConfiguration:clientIdentity:itemSagaIDs:
initWithConfiguration:clientIdentity:opaqueID:bundleID:
initWithConfiguration:clientIdentity:opaqueID:bundleID:playlistPersistentID:
initWithConfiguration:clientIdentity:playlistGlobalID:
initWithConfiguration:clientIdentity:playlistPersistentID:
initWithConfiguration:clientIdentity:playlistPersistentID:properties:trackList:
initWithConfiguration:clientIdentity:playlistPersistentID:properties:trackList:requestingBundleID:
initWithConfiguration:clientIdentity:playlistSagaIDs:
initWithConfiguration:clientIdentity:purchaseHistoryID:properties:
initWithConfiguration:clientIdentity:reason:
initWithConfiguration:clientIdentity:reason:updateTaskHelper:
initWithConfiguration:clientIdentity:sagaID:
initWithConfiguration:clientIdentity:sagaID:entityType:time:
initWithConfiguration:clientIdentity:sagaID:properties:
initWithConfiguration:clientIdentity:sagaIDs:
initWithConfiguration:clientIdentity:seedID:numberOfItems:
initWithConfiguration:clientIdentity:storeID:entityType:time:
initWithConfiguration:clientIdentity:subscribedPlaylistSagaIDs:ignoreMinRefreshInterval:requestReason:
initWithConfiguration:clientIdentity:subscribedPlaylistSagaIDs:ignoreMinRefreshInterval:requestReason:pinnedOnly:
initWithConfiguration:geniusPlaylistPersistentID:playlistName:seedItemIDs:itemIDs:clientIdentity:
initWithConfiguration:itemSagaID:playlistPersistentID:clientIdentity:
initWithConfiguration:itemSagaID:playlistPersistentID:clientIdentity:requestingBundleID:
initWithConfiguration:maxConcurrentRequests:qualityOfService:
initWithConfiguration:mergeToCloudLibraryPreference:allowNoisyAuthPrompt:enableLibraryReason:clientIdentity:
initWithConfiguration:playlistPersistentID:properties:trackList:clientIdentity:
initWithConfiguration:playlistPersistentID:properties:trackList:requestingBundleID:clientIdentity:
initWithConfiguration:prefix:loggable:
initWithConfiguration:progressObserver:
initWithConfiguration:reason:clientIdentity:
initWithConfiguration:reason:supportedMediaKindsHandler:clientIdentity:
initWithConfiguration:sourceType:
initWithConfiguration:updateTaskHelper:
initWithConnection:
initWithConnection:supportedMediaKindsHandler:
initWithContentItemSnapshot:
initWithContentTasteResponse:
initWithContentTasteUpdateItem:invalidateLocalCache:configuration:operationIdentifier:
initWithContentsOfURL:
initWithContentsOfURL:options:error:
initWithData:
initWithData:encoding:
initWithDatabaseID:
initWithDatabaseID:cloudIDs:itemKind:useLongIDs:
initWithDatabaseID:containerIDs:
initWithDatabaseID:containerIDs:properties:
initWithDatabaseID:databaseRevision:adamID:sagaID:playlistGlobalID:containerID:referralAlbumAdamID:referralPlaylistGlobalID:
initWithDatabaseID:databaseRevision:addToPlaylistBehavior:
initWithDatabaseID:databaseRevision:containerID:trackList:properties:
initWithDatabaseID:databaseRevision:playlistProperties:trackList:
initWithDatabaseID:databaseRevision:playlistProperties:trackList:requestingBundleID:
initWithDatabaseID:itemIDs:properties:useLongIDs:
initWithDatabaseID:itemIDs:useLongIDs:
initWithDatabaseID:metadataFilter:queryFilter:purchaseTokens:includeHiddenItems:includePreorders:paginationToken:
initWithDatabaseID:paginationToken:
initWithDatabaseID:playlistName:seedItemIDs:itemIDs:
initWithDatabaseID:sagaIDs:itemKind:
initWithDatabaseID:seedID:numberOfItems:
initWithDatabaseRevision:
initWithDelegate:
initWithDeveloperToken:clientInfo:options:
initWithDeveloperToken:userToken:userTokenFetchingError:
initWithDictionary:
initWithDictionary:error:
initWithDictionaryRepresentation:
initWithDomain:code:userInfo:
initWithDownloaderAccountID:purchaserAccountID:familyID:
initWithEntity:artworkType:
initWithEntityType:
initWithEnvironmentName:namedDelegatePort:queue:
initWithGlobalPlaylistID:contentTaste:configuration:
initWithHandlerProvider:
initWithIdentity:
initWithIdentity:identityStore:clientInfo:
initWithItemSagaID:playlistPersistentID:
initWithKindsToExclude:supportedMediaKindsHandler:
initWithLibraryManagementPolicy:
initWithLibraryManagementPolicy:backgroundTaskScheduler:
initWithLibraryPath:trackData:playlistData:
initWithLibraryPath:trackData:playlistData:artistData:albumData:clientIdentity:
initWithLibraryPath:trackData:playlistData:clientIdentity:
initWithLocaleIdentifier:
initWithLookupItems:
initWithMachServiceName:
initWithMessageUserInfo:
initWithNSError:
initWithName:
initWithNewArtistContentResponseModel:andMLModel:
initWithObjects:
initWithObjectsAndKeys:
initWithOperation:
initWithOptions:
initWithOutputFileHandle:
initWithPath:
initWithPlayActivityTable:
initWithPrivacyIdentifier:
initWithPrivacyIdentifier:identity:
initWithProperties:relationships:
initWithProtobufData:type:isResponse:
initWithPurchaseHistoryID:properties:
initWithRemoteRequestOperationResponse:remoteRequestOperationError:
initWithRequestContext:
initWithRequestContext:allowsExplicitContent:isAutomatic:
initWithRequestContext:keyStore:
initWithRequestContext:mediaKindsToAdd:mediaKindsToRemove:
initWithRequestContext:token:
initWithResponse:data:userInfo:storagePolicy:
initWithSagaID:properties:
initWithSeedID:clientIdentity:numberOfItems:
initWithService:
initWithShape:dataType:error:
initWithSong:
initWithSourceType:configuration:
initWithStartHandler:
initWithStoreID:sagaID:globalPlaylistID:albumCloudLibraryID:artistCloudLibraryID:entityType:time:databaseID:databaseRevision:
initWithStoreID:sagaID:globalPlaylistID:albumCloudLibraryID:artistCloudLibraryID:time:databaseID:databaseRevision:
initWithStoreItemID:mediaContentTasteItem:contentTaste:configuration:timeStamp:
initWithStoreRequestContext:
initWithStoreRequestContext:params:
initWithSubscribedPlaylistCloudIDs:cloudLibraryConnection:
initWithSuiteName:
initWithSystemApplicationType:
initWithTemporaryFileURL:
initWithTitle:andStoreAdamID:
initWithToken:artworkType:musicLibrary:
initWithURL:
initWithURL:append:
initWithURL:requestContext:
initWithURLRequest:requestContext:
initWithURLSession:configuration:cloudID:artworkToken:artworkType:sourceType:clientIdentity:
initWithUnsignedChar:
initWithUnsignedLong:
initWithUnsignedLongLong:
initWithUnsignedShort:
initWithUserIdentity:
initWithUserIdentity:userIdentityStore:
initWithUserIdentity:userIdentityStore:clientIdentity:
initWithUserInteractionLevel:
initWithVerificationContext:
initialImport
initialState
initialUpdate
inputStreamWithData:
inputStreamWithURL:
insertPlayActivityEvent:returningError:
insertPlayActivityEvents:shouldFlush:withCompletionHandler:
insertPropertiesForUserIdentity:andPostAccountChangeNotification:usingBlock:completionHandler:
insertPropertiesForUserIdentity:usingBlock:completionHandler:
instanceMethodForSelector:
int64ForColumnIndex:
int64ValueForBagKey:
int64ValueForFirstRowAndColumn
intForColumnIndex:
intValue
integerForKey:
integerValue
interfaceWithProtocol:
internalDefaults
internalOperationQueue
invalidate
invalidateCachedSubscriptionStatusWithCompletionHandler:
isActive
isActiveLocker
isActiveUser
isAppleTV
isAsynchronous
isAudioAccessory
isCachedResponse
isCancelled
isCellularDataRestrictedForMusic
isCellularDataRestrictedForMusicWithCompletion:
isCellularDataRestrictedForStoreApps
isCellularDataRestrictedForStoreAppsWithCompletion:
isCellularDataRestrictedForVideos
isCellularDataRestrictedForVideosWithCompletion:
isCharging
isConcurrent
isCurrentDeviceValidHomeAccessory
isDeviceClassCUnlocked
isDeviceSetupComplete
isEnablingCloudLibraryDestructive
isEqual:
isEqualToData:
isEqualToNumber:
isEqualToSet:
isEqualToString:
isExecuting
isExplicit
isExplicitSettingEnabled
isExplicitUserAction
isFileURL
isFinished
isIPhone
isIPod
isKindOfClass:
isMac
isManageable
isManagedAppleID
isMatchEnabled
isMediaKindDisabledForJaliscoLibrary:configuration:completion:
isMediaKindDisabledForJaliscoLibrary:withClientIdentity:completionHandler:
isMediaSyncingSupported
isMemberOfClass:
isNSArray__
isNSData__
isNSString__
isNetworkActivityIndicatorVisible
isOffline
isPersistent
isPhoneNumberAccessRestricted
isPrivateListeningEnabled
isPrivateListeningEnabledForCurrentAccessory
isRemoteServerLikelyReachable
isRemoteServerReachable
isSBEnabled
isSagaAuthenticatedForConfiguration:completion:
isSetupCompleted
isSpatialized
isStartupSequenceCompleted
isSuspended
isToggled
isUpdateInProgressWithIsInitialImport:
isUpdatingCloudLibrary
isUpdatingCloudLibraryWithCompletion:
isWiFiAssociated
itemDuration
itemEndTime
itemForIdentifier:
itemKind
itemStartTime
itemType
jaliscoAccountID
jaliscoChangedMediaTypes
jaliscoGetSortedMediaKinds:
jaliscoHasCloudGeniusData
jaliscoLastExcludedMediaKinds
jaliscoLastLibraryUpdateTime
jaliscoLastSupportedMediaKinds
jaliscoLibrary
jaliscoLibraryWithReason:
jaliscoNeedsUpdateForTokens
jaliscoOnDiskDatabaseRevision
kindWithVariants:
knownAccountDSIDs
knownActiveAccountDSID
lastDevicePlaybackDate
lastError
lastKnownLocalStoreAccountProperties
lastKnownMusicSubscriptionType
lastKnownMusicVideosAllowed
lastName
lastObject
lastPathComponent
lastPlayedDate
laterDate:
legacyScore
length
libraryAddedDate
libraryBagKey
libraryContainerPath
libraryDAAPConfiguration
libraryIdentifier
libraryManagementPolicy
lightweightSubscriptionStatus
linkItemAtURL:toURL:error:
listCloudServerOperations
listener:shouldAcceptNewConnection:
loadArtworkInfoForContainerSagaIDs:clientIdentity:completionHandler:
loadArtworkInfoForContainerSagaIDs:configuration:completion:
loadArtworkInfoForPurchaseHistoryIDs:clientIdentity:completionHandler:
loadArtworkInfoForPurchaseHistoryIDs:configuration:completion:
loadArtworkInfoForSagaIDs:clientIdentity:completionHandler:
loadArtworkInfoForSagaIDs:configuration:completion:
loadArtworkInfoForSubscriptionContainerPersistentIDs:clientIdentity:completionHandler:
loadArtworkInfoForSubscriptionContainerPersistentIDs:configuration:completion:
loadArtworkInfoForSubscriptionItemPersistentIDs:clientIdentity:completionHandler:
loadArtworkInfoForSubscriptionItemPersistentIDs:configuration:completion:
loadBooksForStoreIDs:clientIdentity:withCompletionHandler:
loadBooksForStoreIDs:configuration:completion:
loadGeniusItemsForSagaID:clientIdentity:completionHandler:
loadGeniusItemsForSagaID:configuration:completion:
loadIsJaliscoUpdateInProgressForConfiguration:completion:
loadIsSagaUpdateInProgressForConfiguration:completion:
loadIsUpdateInProgressForConfiguration:completion:
loadJaliscoUpdateProgressForConfiguration:completion:
loadLastKnownEnableICMLErrorStatusForConfiguration:completion:
loadLastKnownEnableICMLStatusWithCompletionHandler:
loadMissingArtworkForConfiguration:
loadMissingArtworkWithClientIdentity:
loadSagaUpdateProgressForConfiguration:completion:
loadScreenshotInfoForPurchaseHistoryIDs:clientIdentity:completionHandler:
loadScreenshotInfoForPurchaseHistoryIDs:configuration:completion:
loadScreenshotInfoForSagaIDs:clientIdentity:completionHandler:
loadScreenshotInfoForSagaIDs:configuration:completion:
loadScreenshotInfoForSubscriptionPersistentIDs:clientIdentity:completionHandler:
loadScreenshotInfoForSubscriptionPersistentIDs:configuration:completion:
loadUpdateProgressForConfiguration:completion:
localDatabaseRevision
localStoreAccountProperties
localeWithLocaleIdentifier:
localizedDescription
localizedName
localizedStringForKey:value:table:
logCategory
logCloudAddRequestDescription
logEvent:payload:
loginRequestInFlight
longLongValue
longValue
lyricsDisplayedCharacterCount
lyricsID
lyricsInfoDictionaries
lyricsLanguage
machServiceListener
main
mainScreenSize
manageable
managedConfigurations
mapProperty:toCode:valueType:
mappedDataWithContentsOfTemporaryFileURL:error:
maxRetryCount
maxSupportedSize
maxSyncRetryIntervalSeconds
mediaFilter
mediaFolderPathByAppendingPathComponent:
mediaKinds
mediaLibraryAccessApplicationIdentifiersWithTCCAcceptanceDates
mediaPlaybackDefaults
mediaPlayerBundle
mediaType
mediaUserStateCenterServer
mergeFrom:
mergeToCloudLibraryPreference
messageEntriesForBundleIdentifier:completion:
messageEntryWithIdentifier:bundleIdentifier:completion:
metadataDictionary
metadataFilter
metadataKeys
method
migrateExistingArtworkToken:newArtworkToken:newSourceType:
minusSet:
model
modelWithContentsOfURL:error:
moduleIdentifier
msv_analyticSignature
msv_errorByRemovingUnsafeUserInfo
msv_errorWithDomain:code:debugDescription:
msv_errorWithDomain:code:underlyingError:debugDescription:
msv_map:
msv_uploadTaskWithRequest:fromData:completionHandler:
music
musicLibrary
musicLibraryForUserAccount:
mutableCloudIDToLyricsTokenMap
mutableCopy
name
needsUpdateForTokens
networkAvailabilityService
networkType
newImporter
newWithPersistentID:inLibrary:
nextObject
notificationCenter:didChangeSettings:bag:
notificationWithName:object:userInfo:
notificationsManager:didReceiveActiveUserIdentityDidChangeNotification:
notificationsManager:didReceiveAllowsExplicitContentDidChangeNotification:
notificationsManager:didReceiveAllowsMusicVideosDidChangeNotification:
notificationsManager:didReceiveApplicationInstallationNotification:
notificationsManager:didReceiveAuthServiceTokenDidChangeNotification:
notificationsManager:didReceiveNotificationChangingUserState:
notificationsManager:didReceiveSubscriptionStatusDidChangeNotification:
notificationsManager:didReceiveUserIdentityStoreDidChangeNotification:
notificationsManagerDidReceiveCellularDataRestrictionDidChangeDarwinNotification:
notificationsManagerDidReceiveCloudAuthenticationDidChangeDarwinNotification:
notificationsManagerDidReceiveFirstUnlockNotification:
notificationsManagerDidReceiveLibraryImportDidFinishDarwinNotification:
notificationsManagerDidReceivePhoneNumberChangedNotification:
notificationsManagerDidRecieveICPlayActivityFlushInternalTestRequestNotification:
notifyCloudLibraryAvailabilityDidChange
notifyContentsDidChange
notifyDeviceSetupFinishedWithCompletion:
notifyEntitiesAddedOrRemoved
numberForBagKey:
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedChar:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
objectsPassingTest:
observeValueForKeyPath:ofObject:change:context:
onDiskRevision
opaqueID
open
operation
operationCount
operationIdentifier
operationQueue
operations
originalArtworkDirectory
originatingClientConnection
outputClusterType
outputStreamToFileAtPath:append:
oversizeLogCategory
parse
parseErrorInResponseData:
parseItemWithBytes:length:usingHandler:
parseItemWithBytes:length:valuesOut:valuesCapacity:
parseResponseData:
parsedBodyDictionary
parsedBooks
parser:didEndContainerCode:
parser:didFailWithError:
parser:didFinishWithState:
parser:didParseDataCode:bytes:contentLength:
parser:didStartContainerCode:contentLength:
parser:shouldParseCode:
parser:shouldParseCodeAsContainer:
parserDidCancel:
parserSuccess
path
pathExtension
pathForResourceFileOrFolder:
pathWithComponents:
payloadDownloadPathOverride
pendingBackgroundTasksData
pendingChanges
pendingChangesCoordinator
performBlockAfterDeviceSetup:
performDatabaseTransactionWithBlock:
performImport:fromSource:withProgressBlock:completionHandler:
performInitialLibraryUpdate
performLibraryAnalysisFromResponse:withCompletionHandler:
performLibraryAnalysisWithCompletionHandler:
performRemoteRequestOperationWithExecutionContext:completionHandler:
performRequestOnOperationQueue:withCompletionHandler:
performRequestWithCompletionHandler:
performRequestWithResponseHandler:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performSubscriptionStatusRequest:forUniqueIdentifier:
performSubscriptionStatusRequest:withCompletionHandler:
performSubscriptionStatusRequest:withStatusHandler:
performTransactionWithBlock:
performUpdate
performUpdateWithClientIdentity:error:
performWithResponseHandler:
persistent
persistentID
personalizedContainerID
phase
pinnedOnly
playActivityEvents
playCount
playDataBatchIntervalInMinutes
playbackFormatPreference
playlistCloudIDs
playlistGlobalID
playlistPersistentID
playlistSagaID
playlistShareURL
playlistVersionHash
postNotificationName:object:userInfo:
powerAssertionIdentifier
powerEventBeginName
powerEventEndName
powerEventPayload
predicateMatchingPredicates:
predicateWithProperty:
predicateWithProperty:equalToInt64:
predicateWithProperty:equalToInteger:
predicateWithProperty:equalToValue:
predicateWithProperty:mask:value:
predicateWithProperty:value:comparison:
predicateWithProperty:values:
predictionFromFeatures:error:
preferredVideoQuality
prefetchSKDs
presentWithCompletion:
priority
privacyAcknowledgementPolicy
privacyAcknowledgementRequiredForIdentifier:
privacyAcknowledgementRequiredForMedia
privacyAcknowledgementRequiredForMusic
privacyConsciousDescription
privacyConsciousDictionaryRepresentation
processAddedItems:
processDAAPFileAtURL:
processIdentifier
processInfo
processKeyWithIdentifier:
processPendingChangesUsingLibrary:
processPendingKeyInvalidations
processedItemCount
progress
prohibitArtworkPrefetch
prohibitLibraryUpload
propertyListObjectWithPlayActivityEvent:
propertyListRepresentation
propertyListWithData:options:format:error:
propertySetWithProperties:
providedAudioQuality
publicToken
publishPlaylistWithSagaID:clientIdentity:completionHandler:
publishPlaylistWithSagaID:configuration:completion:
purchaseClientIdentifier
purchaseTokens
purchaserAccountID
pushNotificationController
pushNotificationState
qualityOfService
queryFilter
queryFilterPercentEscaped
queryItemWithName:value:
queryStoreIDs
queryWithLibrary:predicate:
queryWithLibrary:predicate:usingSections:
queue
radioAdamID
raise
raise:format:
rangeOfString:
rePinCollectionsForClasses:configuration:
readFrom:
reason
reasonHintType
recoId
recommendationData
refreshEnhancedAudioSharedKeys
refreshSharedKeys
refreshSubscriptionUsingRequestContext:withCompletionHandler:
registerObserver:
registrationStateForAccountDSID:
releaseDate
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
remoteRequestOperation
removeAllCachedContentTasteResponses
removeAllObjects
removeAllPendingChanges
removeAllPendingChangesWithCompletion:
removeCachedContentTasteResponseForConnectionConfiguration:
removeCharactersInString:
removeContentTasteOperationsForConnectionConfiguration:
removeCookiesWithProperties:
removeFromRunLoop:forMode:
removeItemAtPath:error:
removeItemAtURL:error:
removeItemsWithFamilyAccountID:purchaserAccountID:downloaderAccountID:
removeItemsWithSagaIDs:clientIdentity:completionHandler:
removeItemsWithSagaIDs:configuration:completion:
removeJaliscoLibraryForConfiguration:completion:
removeKeyForIdentifier:
removeLastObject
removeLibraryWithClientIdentity:completion:
removeMessageEntryWithIdentifier:forBundleIdentifier:completion:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectsInArray:
removeObserver:forKeyPath:
removeObserver:forKeyPath:context:
removeObserver:name:object:
removeOrphanedCollectionsInLibrary:usingConnection:
removePendingAddedItemsForPermanentlyFailedOperation
removePendingChanges
removePlayActivityEvents:returningError:
removePlaylistsWithSagaIDs:clientIdentity:completionHandler:
removePlaylistsWithSagaIDs:configuration:completion:
removeSource:usingConnection:withCompletionHandler:
removeSource:withCompletionHandler:
removeSourcePurchaseHistoryForMusicTracks
removeTracksWithPersistentIDs:fromSource:usingConnection:withCompletionHandler:
renewalDate
repeatPlayMode
replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:
requestCapabilitiesWithPrivacyPromptPolicy:completionHandler:
requestDeveloperTokenWithOptions:clientInfo:completionHandler:
requestItem
requestMusicKitTokensWithOptions:clientInfo:completionHandler:
requestPersonalizationStyle
requestReason
requestStorefrontCountryCodeWithCompletionHandler:
requestStorefrontIdentifierWithCompletionHandler:
requestUserTokenForDeveloperToken:options:clientInfo:completionHandler:
requestWithDatabaseID:
requestWithDatabaseID:containerID:
requestWithDatabaseID:containerIDs:
requestWithDatabaseID:containerIDs:properties:
requestWithDatabaseID:databaseRevision:adamID:containerID:referralAlbumAdamID:referralPlaylistGlobalID:
requestWithDatabaseID:databaseRevision:adamID:referralAlbumAdamID:referralPlaylistGlobalID:
requestWithDatabaseID:databaseRevision:addToPlaylistBehavior:
requestWithDatabaseID:databaseRevision:containerID:trackList:properties:
requestWithDatabaseID:databaseRevision:opaqueID:bundleID:
requestWithDatabaseID:databaseRevision:opaqueID:bundleID:containerID:
requestWithDatabaseID:databaseRevision:playlistGlobalID:
requestWithDatabaseID:databaseRevision:playlistProperties:trackList:
requestWithDatabaseID:databaseRevision:playlistProperties:trackList:requestingBundleID:
requestWithDatabaseID:databaseRevision:sagaID:containerID:
requestWithDatabaseID:itemID:
requestWithDatabaseID:itemIDs:
requestWithDatabaseID:itemIDs:properties:useLongIDs:
requestWithDatabaseID:itemIDs:useLongIDs:
requestWithDatabaseID:metadataFilter:queryFilter:purchaseTokens:includeHiddenItems:
requestWithDatabaseID:metadataFilter:queryFilter:purchaseTokens:includeHiddenItems:includePreorders:
requestWithDatabaseID:paginationToken:
requestWithDatabaseID:playlistName:seedItemIDs:itemIDs:
requestWithDatabaseID:seedID:numberOfItems:
requestWithDatabaseRevision:
requestWithURL:cachePolicy:timeoutInterval:
requestingBundleID
requestingBundleIdentifier
requestingBundleVersion
resourceSpecifier
respondsToSelector:
response
responseCode
responseData
responseDataDestinationFileURL
responseDataFileURL
responseHeaderFields
responseModel
responseRevisionID
responseWithCode:headerFields:data:MIMEType:error:
responseWithResponse:
restoredStatedWithFallbackAccounts:
resume
retain
retainCount
revisionTrackingCode
revokeMusicKitUserTokensForUserIdentity:withCompletion:
rootArtworkCacheDirectory
sagaAccountID
sagaCloudAddToPlaylistBehavior
sagaCloudLibraryCUID
sagaCloudLibraryTroveID
sagaDatabaseUserVersion
sagaEnabledOnDevice
sagaLastItemPlayDataUploadDate
sagaLastKnownActiveLockerAccountDSID
sagaLastLibraryUpdateTime
sagaLastPlaylistPlayDataUploadDate
sagaLastSubscribedContainersUpdateTime
sagaNeedsFullUpdateAfterNextUpdate
sagaOnDiskDatabaseRevision
sagaPrefersToMergeWithCloudLibrary
sagaServerRevision
sagaUpdatedSubscribedPlaylistIDs
sampleRate
save
saveCookies:forURL:userIdentifier:
scheduleBackgroundTaskToUpdateLibraryType:
scheduleBackgroundUpdateType:forConfiguration:
scheduleInRunLoop:forMode:
scheduleJaliscoMediaDeferredPushUpate
scheduleJaliscoMediaPeriodicPoll
scheduleRecommendationsRefreshTimer
scheduleSagaDeferredPushUpate
scheduleTaskOfType:forConfiguration:
score
sdk_addItemWithSagaID:toPlaylistWithPersistentID:configuration:completion:
sdk_addStoreItemWithOpaqueID:configuration:completion:
sdk_addStoreItemWithOpaqueID:toPlaylistWithPersistentID:configuration:completion:
sdk_createPlaylistWithPersistentID:properties:trackList:configuration:completion:
sdk_setPlaylistProperties:trackList:forPlaylistPersistentID:configuration:completion:
secondsFromGMT
self
sendProtobuf:toDestinations:priority:options:identifier:error:
sendRequest:withResponseHandler:
serialQueue
server
serverCorrelationKey
serverEnvironment
serverNotificationsManager
serverOperationsManager
serverRevision
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:sentBytes:totalBytes:
service:account:incomingData:fromID:context:
service:account:incomingMessage:fromID:context:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:receivedGroupSessionParticipantDataUpdate:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:activeAccountsChanged:
service:connectedDevicesChanged:
service:devicesChanged:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:linkedDevicesChanged:
service:nearbyDevicesChanged:
serviceAllowedTrafficClassifiersDidReset:
serviceInterface
sessionWithConfiguration:
setAPNSToken:
setAccountManager:
setActionType:
setActive:
setActiveConfiguration:
setActiveConfigurationDSID:
setActiveConnections:
setActiveLocker:
setActiveWatchKitUser:
setAdamID:
setAdamIDToSagaIDMap:
setAdamId:
setAddToPlaylistBehavior:
setAddedItems:
setAdditionalHTTPCookies:
setAgeVerificationRequired:
setAlbumArtistPersistentIDsToUpdate:
setAlbumMetadataDescriptor:
setAlbumProperties:forAlbumPersistentID:configuration:completion:
setAlbumProperties:forItemsWithAlbumPersistentID:clientIdentity:completionHandler:
setAlertMessage:
setAllArtistImagesMapURL:
setAllGeniusPlaylistPropertiesWithML3ContainerProperties:
setAllGeniusTrackPropertiesWithML3TrackProperties:
setAllML3ContainerPropertiesWithGeniusPlaylistProperties:
setAllML3TrackPropertiesWithGeniusTrackProperties:
setAllowNoisyAuthPrompt:
setAllowedRetryCount:
setAllowsCellularAccess:
setAllowsCellularData:
setAllowsExpiredBags:
setAllowsFallbackToExpiredStatus:
setAllowsFallbackToStatusNeedingReload:
setAlternateButtonTitle:
setAlternateDSID:
setAnisetteVersion:
setArtistContents:
setArtistMetadataDescriptor:
setArtistNameLibraryMatchURL:
setArtworkDownloadAccessQueue:
setArtworkDownloadOperationQueue:
setArtworkDownloadSession:
setArtworkDownloadWatchdog:
setArtworkImporter:
setArtworkInfoDictionaries:
setArtworkURL:
setAssetFileSize:
setAssetPrefetchStrategy:
setAssetURL:
setAsynchronousRequestsAccessQueue:
setAuthenticateFailureCode:
setAuthenticationProvider:
setAuthor:
setAutomaticDownloadsEnabled:
setBagProfile:
setBagProfileVersion:
setBaseURL:
setBodyData:
setBooks:
setBulkArtistNameLibraryMatchBatchSize:
setBulkArtistNameLibraryMatchURL:
setCachedResponse:
setCancelOnHTTPErrors:
setCarousel:
setCarrierBundleDeviceID:
setCarrierBundleProvisioningStyle:
setCatalogContents:
setCenter:
setClasses:forSelector:argumentIndex:ofReply:
setClickEvent:
setClientIdentifier:
setClientIdentity:
setClientInfo:
setClientType:
setClientVersion:
setCloudAddToPlaylistBehavior:forConfiguration:completion:
setCloudFilteringType:
setCloudID:
setCloudLibraryStateReason:
setCloudLibrarySyncStatus:
setCode:
setCodeMap:
setComparisonType:
setCompletionBlock:
setCompletionHandler:
setConfiguration:
setConnection:
setConnectionGroup:
setConnectionQueue:
setContainerCloudID:
setContentFeatures:
setContentTaste:forAlbumStoreID:configuration:withCompletionHandler:
setContentTaste:forMediaItem:storeIdentifier:configuration:timeStamp:withCompletionHandler:
setContentTaste:forPlaylistGlobalID:configuration:withCompletionHandler:
setContentTasteItem:
setContentTasteItems:
setContentTasteType:
setCookies:
setCuid:
setCumulativePlayCount:
setCumulativeSkipCount:
setCurrentDatabaseRevision:
setCurrentParsingBook:
setCurrentStoreFrontID:
setCurrentUpdateOperation:
setDataType:
setDatabaseRevision:
setDateFormat:
setDatePurchased:
setDefaultButtonTitle:
setDelegate:
setDeleteDB:
setDeveloperToken:
setDeviceGUID:
setDisableActiveLockerAccount:
setDomain:
setDownloadManager:
setDsid:
setEnableReason:
setEndDate:
setError:
setEventType:
setExpirationDate:
setExportedInterface:
setExportedObject:
setFailedToConnect:
setFilteringDisabled:
setFirstName:
setFollowupUpdateOpertion:
setForceModalAlertAppearance:
setGenre:
setGetResultsRequest:
setGlobalIDToSagaIDMap:
setGlobalPlaylistID:
setGlobalPresentationPolicyGroup:
setHTTPBody:
setHTTPMethod:
setHTTPShouldUsePipelining:
setHasAdamId:
setHasAddToPlaylistBehavior:
setHasArtistAndAlbumData:
setHasCanonicalId:
setHasCloseButton:
setHasCode:
setHasContentType:
setHasIsExplicit:
setHasPhase:
setHasReleaseDate:
setHasShouldIgnoreDeveloperTokenCache:
setHasShouldIgnoreUserTokenCache:
setHavePendingOperationToReloadSecondaryAccountLibraries:
setHour:
setICloudPersonID:
setIdentifier:
setIdentity:
setIdentityStore:
setIgnoreAccountChanges:
setIgnoreMinRefreshInterval:
setIgnoreSystemFilterPredicates:
setImporter:
setImpression:
setImpressionEvent:
setImpressionType:
setInitialImport:
setInteger:forKey:
setInteractionLevel:
setInternalDefaults:
setInterruptionHandler:
setInvalidationHandler:
setIsActive:
setIsExplicit:
setIsExplicitUserAction:
setItemIDs:
setItemIdentifiers:
setItemKind:
setItemProperties:
setItemProperties:forPurchaseHistoryID:clientIdentity:completionHandler:
setItemProperties:forPurchaseHistoryID:configuration:completion:
setItemProperties:forSagaID:clientIdentity:completionHandler:
setItemProperties:forSagaID:configuration:completion:
setItfe:
setJaliscoAccountID:
setJaliscoHasCloudGeniusData:
setJaliscoIsMusicGeniusUserEnabled:
setJaliscoLastLibraryUpdateTime:
setJaliscoLastSupportedMediaKinds:
setJaliscoOnDiskDatabaseRevision:
setKeyProfile:
setKeyServerProtocolType:
setKnownAccountDSIDs:
setKnownActiveAccountDSID:
setLabel:
setLastError:
setLastKnownExplicitContentAllowed:
setLastKnownLocalStoreAccountProperties:
setLastKnownMusicSubscriptionType:
setLastName:
setLastPlayedDate:
setLastUpdatedDate:
setLibraryAddedDate:
setLibraryAuthTokenStatus:
setLibraryBagKey:
setLibraryIdentifier:
setLibraryManagementPolicy:
setLightweightSubscriptionStatus:
setLocalNotification:
setLocale:
setLocalizedDescription:
setLoginRequestInFlight:
setLyricsInfoDictionaries:
setMaxRetryCount:
setMaximumDisplays:
setMediaKinds:
setMediaLibraryAccessApplicationIdentifiersWithTCCAcceptanceDates:
setMediaType:
setMergeToCloudLibraryPreference:
setMessage:
setMessageRemovalPolicy:
setMethod:
setMinute:
setModel:
setMonth:
setMusic:
setMutableCloudIDToLyricsTokenMap:
setName:
setNetworkActivityIndicatorVisible:
setNotification:
setNotificationCategories:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKeyedSubscript:
setOfflineLeaseStopNonceURL:
setOfflineLeaseStopURL:
setOpaqueID:
setOperationQueue:
setPageId:
setPageType:
setParserSuccess:
setPendingBackgroundTasksData:
setPendingMatch:
setPercentEncodedQueryItems:
setPersonalizationStyle:
setPhase:
setPinnedOnly:
setPlayActivityEvents:
setPlayCount:
setPlaylistPersistentID:
setPlaylistProperties:trackList:forPlaylistPersistentID:clientIdentity:completionHandler:
setPlaylistProperties:trackList:forPlaylistPersistentID:clientIdentity:requestingBundleID:completionHandler:
setPlaylistProperties:trackList:forPlaylistPersistentID:configuration:completion:
setPlaylistsAreLibraryOwnedContent:
setPowerAssertionIdentifier:
setPowerEventBeginName:
setPowerEventEndName:
setPowerEventPayload:
setPreferredVideoQuality:
setPreferredVideoQuality:forConfiguration:completion:
setPriority:
setPrivacyAcknowledgementPolicy:
setPrivacyContext:
setPrivateDelegate:
setProgress:
setProhibitArtworkPrefetch:
setProhibitLibraryUpload:
setProtocolVersion:
setPurchaseHistoryID:
setPushEnvironment:
setPushNotificationState:
setQualityOfService:
setQueryStoreIDs:
setQueue:
setQueuePriority:
setReason:
setRecoAlgoId:
setRecoId:
setRedownloadParameters:
setRegistrationState:forAccountDSID:
setRemoteObjectInterface:
setRemoveSourcePurchaseHistoryForMusicTracks:
setRequestContext:
setRequestOfflineKeys:
setRequestReason:
setRequestingBundleID:
setRequestingBundleIdentifier:
setRequestingBundleVersion:
setRequiresDelegate:
setResponseDataDestinationFileURL:
setResponseDataFileURL:
setResponseRevisionID:
setRule:
setRuleOperator:
setSagaAccountID:
setSagaCloudAddToPlaylistBehavior:
setSagaCloudLibraryCUID:
setSagaCloudLibraryTroveID:
setSagaDatabaseUserVersion:
setSagaEnabledOnDevice:
setSagaLastItemPlayDataUploadDate:
setSagaLastKnownActiveLockerAccountDSID:
setSagaLastLibraryUpdateTime:
setSagaLastPlaylistPlayDataUploadDate:
setSagaLastSubscribedContainersUpdateTime:
setSagaNeedsFullUpdateAfterNextUpdate:
setSagaOnDiskDatabaseRevision:
setSagaPrefersToMergeWithCloudLibrary:
setServerRevision:
setSetupAssistantComplete:
setSetupCompleted:
setShouldBypassEnforcementOfPrivacyAcknowledgement:
setShouldDownloadResources:
setShouldExcludeFromBackgroundRefresh:
setShouldIgnoreCache:
setShouldIgnoreDeveloperTokenCache:
setShouldIgnoreUserTokenCache:
setShouldParseMetadata:
setShouldReturnLastKnownStatusOnly:
setShouldUseMescalSigning:
setSkipCount:
setSongMetadataDescriptor:
setStartDate:
setStartupSequenceCompleted:
setState:
setStatus:
setStoreAccountID:
setStoreDialogResponseHandler:
setStoreID:
setStoreRequestContext:
setStorefrontIdentifier:
setSubscriptionStatus:
setSubtitle:
setSupportedConfigurations:
setSupportedConfigurationsDSIDs:
setSupportsAutomaticEnablingiCloudMusicLibrary:
setSuspended:
setTargetId:
setTargetType:
setTaskScheduler:
setTimeZone:
setTimeoutCallback:
setTimeoutInterval:
setTitle:
setToken:
setTokenCollection:
setTracksAreLibraryOwnedContent:
setTriggerCondition:
setTriggerValue:
setTroveID:
setTv:
setType:
setUnderlyingConnection:
setUnderlyingQueue:
setUniqueAlbums:
setUpdateActionTimeStamp:
setUpdateCompletionBlock:
setUpdateIntervalSeconds:
setUpdateLibraryOperation:
setUpdateProgress:forLibraryType:
setUpdateRequest:
setUpdateRequired:
setUploadLibraryRequest:
setUploadResponseStatus:
setUserArtworkToken:
setUserDefaults:
setUserRating:
setUserStatesCache:
setUserToken:
setUsername:
setUsesFallbackCache:
setUsesListeningHistory:
setValue:
setValue:forArgument:
setValue:forDatabaseProperty:
setValue:forHTTPHeaderField:
setValue:forKey:
setValue:forProperty:
setValueTypeMap:
setValues:count:
setValues:forProperties:
setValues:forProperties:forEntityPersistentIDs:inLibrary:usingConnection:
setValues:forProperties:usingConnection:
setVerificationInteractionLevel:
setVppOrganizationDisplayName:
setVppOrganizationID:
setWantsNotificationResponsesDelivered
setWatchdog:
setWithArray:
setWithCapacity:
setWithObject:
setXpab:
setYear:
settingsSwitches
setupCompleted
setupHandlersWithAccountStateChange:
setupInitialJaliscoPoolingForConfiguration:
setupInitialSagaPoolingForConfiguration:
sharedActivityGroupSizeCurrent
sharedActivityGroupSizeMax
sharedBagMonitor
sharedBagProvider
sharedCache
sharedCloudContentTasteResponseCacheManager
sharedConnection
sharedContainerPropertyInfo
sharedContentTasteRequestListener
sharedController
sharedCookieStore
sharedInstance
sharedItemPropertyInfo
sharedKeySetForKeys:
sharedLibraryRecommendationController
sharedManager
sharedMediaLibraryService
sharedMonitor
sharedMonitorForIdentity:
sharedMusicSubscriptionStatusServiceListener
sharedPrivacyInfo
sharedPrivacyInfoForUserIdentity:
sharedProvider
sharedRemoteRequestOperationExecutionServiceListener
sharedRestrictionsMonitor
sharedSecurityInfo
sharedService
sharedSetupOperation
sharedStatusController
sharedTaskManager
shouldAllowDataForCellularNetworkTypes
shouldExcludeFromBackgroundRefresh
shouldForceLibraryRecommendationAnalysis
shouldHandleNotification:
shouldHandleNotificationResponse:
shouldIgnoreUserTokenCache
shouldIncludeMediaKindSongForJaliscoImport
shouldParseMetadata
shouldProcessSpecificArtists
shouldProhibitMusicActionForCurrentNetworkConditions
shouldProhibitMusicActionForCurrentNetworkConditionsWithCompletion:
shouldProhibitStoreAppsActionForCurrentNetworkConditions
shouldProhibitStoreAppsActionForCurrentNetworkConditionsWithCompletion:
shouldProhibitVideosActionForCurrentNetworkConditions
shouldProhibitVideosActionForCurrentNetworkConditionsWithCompletion:
shouldReduceLibraryRecommendationsXPCInterval
shouldRestart
shouldTreatInitialSagaImportAsFailed
shouldTreatSagaAddComputerCallAsFailed
shouldTreatSubscriptionStatusAsExpired
shouldTreatSubscriptionStatusCheckAsIncomplete
shouldUseMescalSigning
sigtermSource
sizeInfo
skipCount
snapshotWithDomain:type:subType:context:triggerThresholdValues:events:completion:
songMetadataDescriptor
sortJaliscoLastSupportedMediaKinds
sortedArrayUsingComparator:
sourceType
specificAccountWithDSID:
standardDefaults
standardUserDefaults
start
startArrayForKey:
startDate
startGeniusRequestWithRetryTimeout:debugName:connectionResponseBlock:
startObservingRevocations
startPeriodicPolling
startService
startSystemService
startSystemXPCService
startingUpdateOperationForLibraryType:isInitialImport:
startupQueue
startupSequenceCompleted
state
stateChange
stateChangeFromState:toState:computation:
stateForAccounts:baseConfiguration:
stateHandle
statementWithPrefix:inParameterCount:
stationHash
stationID
status
statusCode
statusType
stop
stopObservingRevocations
stopService
stopSessionInvalidatingKeys:withCompletion:
stopSystemService
storagePolicy
storeAccountID
storeAdamID
storeFrontID
storeRequestContext
storedConfiguration
storefrontHeaderSuffix
storefrontIdentifier
storefrontIdentifierDidChange:
stringByAddingPercentEncodingWithAllowedCharacters:
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingLastPathComponent
stringByReplacingOccurrencesOfString:withString:
stringByStandardizingPath
stringForBagKey:
stringForColumnIndex:
stringForKey:
stringValue
stringWithContentsOfFile:encoding:error:
stringWithContentsOfURL:encoding:error:
stringWithFormat:
stringWithUTF8String:
subarrayWithRange:
subarraysOfSize:
subdataWithRange:
subscribedPlaylistCloudIDs
subscriptionAdamID
subscriptionStatus
subtitle
superclass
supportedConfigurations
supportedConfigurationsChanged
supportedConfigurationsDSIDs
supportedMediaKinds
supportsAccountlessHandling
supportsAutomaticEnablingiCloudMusicLibrary
supportsSecureCoding
supportsSideLoadedMediaContent
syncMessagesWithCompletion:
synchronizeWithCompletionHandler:
systemReleaseType
systemServiceWithRequestContext:
systemUptime
targetedAudioQuality
taskScheduler
taskWithType:configuration:
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timeZone
timeZoneForSecondsFromGMT:
timeZoneWithAbbreviation:
timedMetadata
title
token
tokenIdentitifer
tokenResult
totalItemCount
trackData
trackForeignPersistentID
trackInfo
type
unarchivedObjectOfClasses:fromData:error:
underlyingConnection
unfavoriteAlbumWithCloudLibraryID:time:completionHandler:
unfavoriteAlbumWithCloudLibraryID:time:configuration:completionHandler:
unfavoriteArtistWithCloudLibraryID:time:completionHandler:
unfavoriteArtistWithCloudLibraryID:time:configuration:completionHandler:
unfavoriteEntityWithSagaID:entityType:time:completionHandler:
unfavoriteEntityWithSagaID:entityType:time:configuration:completionHandler:
unfavoriteEntityWithStoreID:entityType:time:completionHandler:
unfavoriteEntityWithStoreID:entityType:time:configuration:completionHandler:
unfavoritePlaylistWithGlobalID:time:completionHandler:
unfavoritePlaylistWithGlobalID:time:configuration:completionHandler:
uniqueAlbums
uniqueDatesWithAddedContent
uniqueSongs
universalStore
unregisterObserver:
unrestrictedAllItemsQueryWithlibrary:predicate:orderingTerms:
unrestrictedQueryWithLibrary:predicate:orderingTerms:
unscheduleJaliscoMediaDeferredPushUpate
unscheduleJaliscoMediaPeriodicPoll
unsignedCharValue
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsignedLongValue
updateActionTimeStamp
updateArtistHeroImagesForArtistsAddedSinceLastUpdateUsingClientIdentity:
updateArtistHeroImagesForConfiguration:
updateArtistHeroImagesWithClientIdentity:
updateBaseCacheKey
updateBestArtworkTokenForEntityPersistentID:entityType:artworkType:retrievalTime:preserveExistingAvailableToken:usingConnection:
updateBestArtworkTokenForEntityPersistentID:entityType:artworkType:retrievalTime:usingConnection:
updateCloudLibraryProgressWithCompletion:
updateCompletionBlock
updateContentTasteForConnectionConfiguration:invalidateLocalCache:withCompletionHandler:
updateContentTasteForItem:invalidatingLocalCache:completionHandler:
updateContentTasteForMediaItemsAndInvalidateLocalCache:configuration:withCompletionHandler:
updateContentTasteForReason:invalidatingLocalCache:completionHandler:
updateHandlersWithAccountStateChange:
updateIntervalSeconds
updateItemPlayDataWithClientIdentity:completionHandler:
updateJaliscoExcludedMediaKindsWith:excludingMediaKindsInSet:
updateJaliscoLibraryByRemovingMediaKind:withClientIdentity:completionHandler:
updateJaliscoLibraryWithClientIdentity:byAddingMediaKind:completionHandler:
updateJaliscoLibraryWithClientIdentity:forReason:completionHandler:
updateJaliscoLibraryWithReason:forConfiguration:completion:
updateLibraryFromRevision:toRevision:withResponse:clientIdentity:
updateLibraryOperation
updateLibraryQueue
updateLibraryWithClientIdentity:reason:allowNoisyAuthPrompt:isExplicitUserAction:completionHandler:
updateLibraryWithClientIdentity:reason:completionHandler:
updateLibraryWithReason:completionHandler:
updateMessageEntry:completion:
updatePinnedSubscribedPlaylistsWithConfiguration:completion:
updatePlaylistPlayDataWithClientIdentity:completionHandler:
updateProgress
updateProgressForLibraryType:completionHandler:
updateRequest
updateRequired
updateSagaLibraryWithClientIdentity:forReason:allowNoisyAuthPrompt:isExplicitUserAction:completionHandler:
updateSagaLibraryWithReason:forConfiguration:completion:
updateState
updateSubscribedPlaylistsWithSagaIDs:ignoreMinRefreshInterval:configuration:completion:
updateSubscribedPlaylistsWithSagaIDs:ignoreMinRefreshInterval:requestReason:pinnedOnly:clientIdentity:completionHandler:
updateURLMappingsWithCompletion:
uploadArtworkForPlaylistWithPersistentID:clientIdentity:completionHandler:
uploadArtworkForPlaylistWithPersistentID:configuration:completion:
uploadCloudItemPropertiesForConfiguration:completion:
uploadCloudPlaylistPropertiesForConfiguration:completion:
uploadItemPropertiesWithClientIdentity:minimumTimeInterval:
uploadLibraryRequest
uploadResponseStatus
uploadingLibraryIsSupported
urlForBagKey:
urlRequest
urlResponse
useLongIDs
userArtworkToken
userDefaults
userIdentitiesForAllStoreAccountsWithError:
userIdentitiesForManageableAccountsWithError:
userIdentity
userIdentityStore
userInfo
userMonitorWithUserIdentity:fromUserIdentityStore:
userNotificationCenter:didChangeSettings:
userNotificationCenter:didOpenApplicationForResponse:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationController
userRating
userToken
username
validateExpirationForBundleIdentifier:withReplyBlock:
value
valueAtIndex:
valueForDatabaseProperty:
valueForEntitlement:
valueForHTTPHeaderField:
valueForKey:
valueForKeyPath:
valueForProperty:
valueTypeForProperty:
valueTypeMap
values
valuesCount
verificationInteractionLevel
vocalAttenuationAvailability
vocalAttenuationDuration
waitForAllKeysToProcess
waitForLibraryUpdate
waitUntilAllOperationsAreFinished
waitUntilFinished
watchdog
willChangeValueForKey:
write:maxLength:
writeData:
writeData:withCode:
writePropertyList:toStream:format:options:error:
writeSInt64:withCode:
writeString:withCode:
writeTo:
writeToFile:atomically:
writeToFile:options:error:
writeToURL:atomically:
writeToURL:error:
writeUInt32:withCode:
writeUInt64:withCode:
writeUInt8:withCode:
xpcListeners
zone
v32@0:8@16@24
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8q16
v28@0:8q16B24
v32@0:8q16@24
v28@0:8f16q20
v32@0:8q16@"NSDictionary"24
v24@0:8@16
v24@0:8@"ICEnvironmentMonitor"16
@24@0:8@16
v24@0:8@?16
v16@0:8
v48@0:8@16B24q28B36@?40
v40@0:8@16q24@?32
v48@0:8@16q24B32B36@?40
v36@0:8@16q24i32
v32@0:8q16@?24
v40@0:8Q16@24@?32
v24@0:8Q16
v56@0:8q16@24@32@40@?48
v64@0:8q16@24@32@40@48@?56
v40@0:8@16@24@?32
v40@0:8q16@24@?32
v56@0:8q16@24q32@40@?48
v48@0:8Q16q24@32@?40
v56@0:8@16q24@32@40@?48
v56@0:8Q16q24@32@40@?48
v48@0:8q16@24@32@?40
v48@0:8@16@24@32@?40
v56@0:8@16@24q32@40@?48
v64@0:8@16@24q32@40@48@?56
v48@0:8@16Q24@32@?40
v48@0:8@16q24@32@?40
v32@0:8@16@?24
v56@0:8@16B24q28B36@40@?48
v48@0:8q16q24@32@?40
v28@0:8B16@?20
q24@0:8q16
q28@0:8@16B24
q24@0:8@16
v48@0:8@16@24q32@?40
v52@0:8@16@24B32q36@?44
v48@0:8@16B24B28B32B36@?40
v36@0:8@16B24@?28
@32@0:8@16@24
@"SagaRequestHandler"
@"JaliscoRequestHandler"
@"NSObject<OS_dispatch_queue>"
@"NSOperationQueue"
@"NSMutableDictionary"
v20@0:8B16
I16@0:8
v20@0:8I16
C16@0:8
v20@0:8C16
@20@0:8I16
v32@0:8@16q24
B28@0:8@16I24
v32@0:8@16I24I28
v40@0:8@16I24*28I36
v28@0:8@16I24
v24@0:8@"DKDAAPParser"16
v32@0:8@"DKDAAPParser"16q24
v32@0:8@"DKDAAPParser"16@"NSError"24
B28@0:8@"DKDAAPParser"16I24
v32@0:8@"DKDAAPParser"16I24I28
v40@0:8@"DKDAAPParser"16I24*28I36
v28@0:8@"DKDAAPParser"16I24
@32@0:8Q16@24
@48@0:8@16@24Q32@40
@"NSDictionary"
@56@0:8@16@24q32@40@48
@56@0:8@16q24@32@40@48
@40@0:8I16I20@24@32
@"ICCloudItemIDList"
@64@0:8@16q24@32@40@48@56
@"NSString"
@32@0:8I16@20C28
@28@0:8@16C24
@24@0:8I16I20
@28@0:8I16@20
@40@0:8@16@24@32
@"ICURLSession"
q16@0:8
@"NSUserDefaults"
@"ICUserIdentity"
@"ICUserIdentityStore"
@"ICConnectionConfiguration"
@"ML3MusicLibrary"
@"<ICDBackgroundTaskScheduling>"
@"NSNumber"
@"NSDate"
@36@0:8I16@20@28
B32@0:8@16^@24
@"NSArray"
@"CloudLibraryConnection"
@"NSURL"
@"NSMutableArray"
v36@0:8B16@20@28
@"<ICDServerNotificationsManagerDelegate>"
@52@0:8@16@24B32q36@44
B28@0:8@16B24
@40@0:8@16@24^@32
v24@0:8@?<v@?@"NSUUID">16
v32@0:8@"NSUUID"16@?<v@?>24
v32@0:8q16@?<v@?Q@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
v40@0:8Q16@"ICClientInfo"24@?<v@?@"NSString"@"NSError">32
v48@0:8@"NSString"16Q24@"ICClientInfo"32@?<v@?@"NSString"@"NSError">40
v40@0:8Q16@"ICClientInfo"24@?<v@?@"ICMusicKitTokensResponse"@"NSError">32
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v48@0:8Q16@24q32@40
@"<NSCopying>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@56@0:8@16@24q32q40@48
@48@0:8@16@24@32@40
@88@0:8@16@24q32q40@48@56@64q72@80
v24@0:8@?<v@?B>16
@32@0:8I16@20B28
@28@0:8@16B24
v28@0:8B16@?<v@?@"NSArray"@"NSError">20
v24@0:8@"NSArray"16
v32@0:8@"ICDMediaUserStateCenterServerNotificationsManager"16@"NSNotification"24
Q24@0:8@16
@"NSObject<OS_dispatch_semaphore>"
@"ICDMediaUserStateCenterServerNotificationsManager"
@"NSObject<OS_os_log>"16@0:8
v20@0:8f16
v36@0:8I16@20@?28
f16@0:8
@32@0:8@16Q24
@40@0:8@16@24Q32
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
v32@0:8@"UNUserNotificationCenter"16@"UNNotificationSettings"24
v32@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24
@"UNUserNotificationCenter"
@44@0:8I16I20I24@28@36
@"ICPlayActivityTable"
@32@0:8q16@24
B32@0:8@16q24
v32@0:8q16@?<v@?@"NSXPCListenerEndpoint"@"NSError">24
v24@0:8@?<v@?@"NSError">16
v32@0:8Q16@24
v44@0:8@16B24@28@?36
v56@0:8q16q24@32@40@?48
v24@0:8@"ICConnectionConfiguration"16
v40@0:8q16@"ICConnectionConfiguration"24@?<v@?@"NSError">32
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSError"B>24
v48@0:8@"ICConnectionConfiguration"16B24q28B36@?<v@?@"NSError">40
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSError">24
v32@0:8q16@?<v@?@"NSError">24
v40@0:8q16@"ICConnectionConfiguration"24@?<v@?B@"NSError">32
v32@0:8@"ICConnectionConfiguration"16@?<v@?BB>24
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSError"f>24
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSNumber"@"NSError">24
v40@0:8Q16@"ICConnectionConfiguration"24@?<v@?@"NSError">32
v32@0:8Q16@"ICConnectionConfiguration"24
v32@0:8q16@"ICConnectionConfiguration"24
v40@0:8@"NSArray"16@"ICConnectionConfiguration"24@?<v@?@"NSError"@"NSArray">32
v40@0:8Q16@"ICConnectionConfiguration"24@?<v@?@"NSArray"@"NSError">32
v64@0:8q16@"NSString"24@"NSArray"32@"NSArray"40@"ICConnectionConfiguration"48@?<v@?Q@"NSError">56
v56@0:8q16@"NSDictionary"24@"ICCloudItemIDList"32@"ICConnectionConfiguration"40@?<v@?Q@"NSError">48
v56@0:8@"NSDictionary"16@"ICCloudItemIDList"24q32@"ICConnectionConfiguration"40@?<v@?@"NSError">48
v56@0:8q16@"ICCloudAddReferral"24q32@"ICConnectionConfiguration"40@?<v@?@"NSError">48
v48@0:8q16q24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v48@0:8@"NSString"16q24@"ICConnectionConfiguration"32@?<v@?@"NSDictionary"@"NSError">40
v40@0:8q16@"ICConnectionConfiguration"24@?<v@?@"NSString"@"NSString"@"NSError">32
v40@0:8@"NSArray"16@"ICConnectionConfiguration"24@?<v@?@"NSError">32
v44@0:8@"NSArray"16B24@"ICConnectionConfiguration"28@?<v@?@"NSError">36
v48@0:8q16@"ICCloudAddReferral"24@"ICConnectionConfiguration"32@?<v@?@"NSDictionary"@"NSError">40
v40@0:8@"NSString"16@"ICConnectionConfiguration"24@?<v@?@"NSDictionary"@"NSError">32
v48@0:8@"NSDictionary"16Q24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v48@0:8@"NSDictionary"16q24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v40@0:8@"NSArray"16@"ICConnectionConfiguration"24@?<v@?@"NSArray"@"NSError">32
v56@0:8q16q24@"NSDate"32@"ICConnectionConfiguration"40@?<v@?@"NSError">48
v48@0:8@"NSString"16@"NSDate"24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v24@0:8@"ICDServerNotificationsManager"16
v32@0:8@"ICDServerNotificationsManager"16@"NSNotification"24
@40@0:8q16@24^@32
@"BaseRequestHandler"40@0:8q16@"ICConnectionConfiguration"24^@32
v28@0:8@16i24
@24@0:8q16
v48@0:8@16@24@32^v40
v28@0:8@16B24
@"ICDCloudServiceStatusMonitor"
@"ICDNetworkAvailabilityService"
@"ICDServerOperationsManager"
@"ICDServerNotificationsManager"
@"<ICDAccountManaging>"
@"<ICDHandlerCoordinating>"
@"<ICDBackgroundTaskManaging>"
@"ICDelegateAccountStoreServiceListener"
@"ICDelegationProviderService"
@"CloudPushNotificationController"
@"CloudUserNotificationController"
@"ICDMediaUserStateCenterServer<ICMediaUserStateCenterServerProtocol>"
@"ICDEnhancedAudioKeyManager"
@"NSObject<OS_dispatch_source>"
B20@0:8I16
@"MSVWatchdog"
@"DetermineArtistStoreIDLookupTypeOperation"
@"CloudArtworkImporter"
@56@0:8@16@24@32@40@48
@"NSObject<OS_tcc_identity>"
v36@0:8@16B24@28
@36@0:8I16@20C28B32
@32@0:8@16C24B28
@44@0:8I16@20@28@36
@"<ICDJaliscoSupportedMediaKindsHandler>"
@"ICMusicLibraryContentMetadataDescriptor"
@24@0:8^{_NSZone=}16
@"NSSet"
v40@0:8d16@24@?32
v48@0:8@16d24@32@?40
^f16@0:8
f24@0:8Q16
v32@0:8^f16Q24
{?="list"^f"count"Q"size"Q}
{?="actionTimestampMillis"b1"adamId"b1"createdOffsetMillis"b1"preferenceType"b1}
d16@0:8
@"NSMutableSet"
v32@0:8@?16B24B28
@?16@0:8
@"CloudPendingChangesCoordinator"
@"NSObject<OS_dispatch_group>"
@44@0:8@16@24I32@36
v32@0:8@16d24
B24@0:8^B16
v36@0:8@16i24@?28
@"SagaLibrary"
@"SagaArtworkImporter"
@"CloudUpdateLibraryOperation"
@"<ICDCloudMusicLibrarySagaUpdateTaskHelper>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSError"
@44@0:8@16@24B32q36
@52@0:8@16@24@32B40q44
@56@0:8@16@24@32B40q44B52
@36@0:8Q16@24I32
@44@0:8@16@24Q32I40
v44@0:8q16B24@28@?36
@"<ICDHandlerProviding>"
{?="shouldIgnoreDeveloperTokenCache"b1"shouldIgnoreUserTokenCache"b1}
v32@0:8@"ICMusicSubscriptionStatusRequest"16@"NSUUID"24
@"NSXPCListener"
v36@0:8q16B24@?28
@"ICContentTastePendingChangesCoordinator"
@"<ICDCloudMusicLibraryJaliscoUpdateTaskHelper>"
@"JaliscoLibrary"
@"JaliscoArtworkImporter"
@"JaliscoMediaUpdateOperation"
@"ICAppleMusicAPITokenError"
@"ICAppleMusicAPITokenCollection"
B24@0:8q16
B32@0:8q16q24
@56@0:8Q16@24@32@40@48
@"NSData"
@40@0:8@16@24q32
@"ICDAccountManagerState"
@32@0:8I16Q20I28
@56@0:8q16q24q32@40@48
@40@0:8@16q24@32
@"ICStoreRequestContext"
@"AMPMusicArtistNewContentResponse"
v40@0:8I16I20@24@?32
B40@0:8@16@24@32
@64@0:8I16I20@24@32^@40^@48^@56
@56@0:8I16I20@24@32^@40^@48
@48@0:8@16q24@32@40
@64@0:8@16@24q32@40@48@56
@24@0:8Q16
{?="adamId"b1}
@"ICMusicLibraryArtistAffinityAnalyzer"
I24@0:8@16
v36@0:8@16I24q28
@40@0:8I16@20@28B36
@36@0:8@16@24B32
@72@0:8@16@24Q32@40q48q56@64
@"ICURLRequest"
@32@0:8@16^@24
v36@0:8@"NSArray"16B24@?<v@?@"NSError">28
v32@0:8@?16@24
@24@0:8d16
B24@0:8d16
v48@0:8@16@24@32@40
v48@0:8@"ICContentKeySession"16@"NSString"24@"ICSecureKeyDeliveryResponse"32@"NSError"40
@"JaliscoLoadBooksOperation"
@"ICBook"
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v32@0:8@"ICUserIdentity"16@?<v@?@"NSError">24
@40@0:8@16@24#32
i16@0:8
v20@0:8i16
{?="code"b1"phase"b1}
@40@0:8i16i20@24@32
@48@0:8@16@24@32q40
@56@0:8@16@24@32@40q48
@20@0:8i16
i24@0:8@16
{?="adamId"b1"canonicalId"b1"releaseDate"b1"contentType"b1"isExplicit"b1}
@32@0:8q16@"<ICDBackgroundTaskScheduling>"24
v24@0:8@"ICDAccountManagerStateChange"16
v32@0:8@"ICDAccountManagerState"16@?<v@?@"BaseRequestHandler">24
v32@0:8q16@"ICDAccountManagerStateChange"24
@32@0:8@16q24
v52@0:8@16@24@32I40@44
@40@0:8@16d24@32
@48@0:8@16@24d32@40
v32@0:8@"ICRemoteRequestOperationExecutionContext"16@?<v@?@"ICRemoteRequestOperationExecutionResponse">24
I20@0:8I16
@"JaliscoImporter"
@48@0:8I16I20@24@32@40
@"ICDJaliscoMediaFilter"
v56@0:8@16q24q32@40@?48
@48@0:8@16q24q32@40
@40@0:8q16q24@32
@56@0:8@16q24q32q40@48
@56@0:8@16q24q32@40@48
v40@0:8@16@24@32
v40@0:8@"MPMediaDownloadManager"16@"NSArray"24@"NSArray"32
v32@0:8@"MPMediaDownloadManager"16@"NSArray"24
v40@0:8@"MPMediaDownloadManager"16@"NSArray"24@"NSError"32
v64@0:8Q16q24@32I40B44@48@?56
v32@0:8Q16q24
@"CloudArtworkOperationQueue"
@"MPMediaDownloadManager"
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
@"ICDCloudPushNotificationRegistrationState"
@"AMSPushHandler"
@"APSConnection"
@48@0:8I16@20@28@36B44
@52@0:8I16@20@28@36B44B48
@60@0:8I16@20@28@36B44B48@52
@56@0:8@16@24@32B40B44@48
@72@0:8q16q24@32@40@48@56I64I68
@68@0:8q16q24@32@40@48@56I64
@28@0:8I16I20C24
@24@0:8I16C20
@32@0:8@16@?24
Q48@0:8r*16Q24^{?=I*Qq}32Q40
v40@0:8r*16Q24@?32
Q32@0:8r*16Q24
@44@0:8I16r*20Q28@?36
@32@0:8r*16Q24
@40@0:8r*16Q24@?32
@36@0:8r*16I24@?28
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@"IDSService"
v24@0:8B16B20
v40@0:8r*16@24@32
v24@0:8r*16
v32@0:8r*16B24B28
@20@0:8B16
@"NSMapTable"
@48@0:8@16@24q32@40
@40@0:8@16d24o^q32
@"SagaImporter"
@"ICStoreURLRequest"
@"NSArray"16@0:8
@"ICConnectionConfiguration"16@0:8
@"ICDAccountManagerState"16@0:8
@"ICDAccountManagerStateChange"16@0:8
@"ACAccountStore"
@"ICDAccountManagerStateChange"
@"<ICDMediaUserStateCenterServerNotificationsManagerDelegate>"
@44@0:8@16B24@28@36
v40@0:8^@16^@24@32
@44@0:8@16@24Q32B40
v32@0:8^@16^@24
@36@0:8@16B24@28
v48@0:8^@16^@24@32@40
@"ICCloudContentTasteUpdateItem"
@"ICCloudContentTasteUpdateResponse"
@28@0:8@16I24
@"MLModel"
v40@0:8@16q24@32
@"NSXPCConnection"
@"ICDPrivacyPromptOperation"
@"ICURLBag"
@"ICUserIdentityProperties"
@"ICMusicSubscriptionStatusResponse"
v64@0:8q16q24q32@40@48@?56
v36@0:8B16@20@?28
v64@0:8q16q24q32@"ICConnectionConfiguration"40@"NSDate"48@?<v@?@"NSError">56
v48@0:8q16@"NSString"24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v36@0:8B16@"ICConnectionConfiguration"20@?<v@?@"NSError">28
@32@0:8Q16q24
@48@0:8@16Q24q32@40
@56@0:8@16Q24q32@40@48
@80@0:8q16q24@32@40@48q56@64I72I76
@"CloudArtistHeroImageImporter"
@48@0:8I16I20q24q32@40
@52@0:8I16I20q24I32q36@44
@36@0:8I16I20q24I32
@32@0:8I16I20@24
@68@0:8I16I20q24q32@40I48q52@60
@60@0:8I16q20q28@36q44@52
@48@0:8@16I24I28@32@40
@44@0:8I16I20@24@32I40
@32@0:8@"<ICDAccountManaging>"16@"<ICDHandlerCoordinating>"24
@"<ICDAccountManaging>"16@0:8
@"<ICDHandlerCoordinating>"16@0:8
@32@0:8q16q24
@40@0:8@16q24q32
ICDCloudLibraryIsInitialImportKey
ICDCloudLibrarySyncProgressKey
ICDCloudLibrarySagaLibraryUpdateErrorKey
ICDCloudLibraryJaliscoLibraryUpdateErrorKey
ICDCloudMusicLibraryProgressUpdateOperationStatusKey
ICDCloudMusicLibraryProgressPermanentFailureTypeKey
ICDCloudMusicLibraryProgressTemporaryFialureTypeKey
ICDCloudMusicLibraryProgressRequestReasonKey
ICDCloudMusicLibraryProgressWasInitialImportKey
ICDCloudMusicLibraryProgressWasExplicitUserActionKey
CloudLibraryStateReasonKey
EnableCloudLibraryFailureReasonKey
AutoEnableCloudLibraryFailureReasonKey
com.apple.itunescloudd.ICDCloudMusicLibraryRequestHandler.accessQueue
com.apple.itunescloudd.ICDCloudMusicLibraryRequestHandler.calloutQueue
com.apple.itunescloudd.ICDCloudMusicLibraryRequestHandler.operationQueue
com.apple.itunescloudd.ICDCloudMusicLibraryRequestHandler.retryQueue
v20@?0@"NSError"8B16
v16@?0@"CloudAuthenticateOperation"8
com.apple.amp.itunescloudd.JaliscoRequestHandler.%@.deauthenticate
com.apple.itunescloudd.ICDCloudMusicLibraryRequestHandler.jaliscoDeauthenticateOperation
UserRequestedSubscriptionHidden
com.apple.mobileipod
ICDCloudMusicLibraryRequestHandler.m
SagaAuthenticateOperation can only return CloudLibraryOperationStatusSuccess OR CloudLibraryOperationStatusPermanentlyFailed
SagaAuthenticationBug
DuplicateSagaAuthentication
strongAuthenticateOperation
enableReason
Invalid State - We already have a valid SagaRequestHandler (enableReason=%d)
com.apple.itunescloudd.ICDCloudMusicLibraryRequestHandler.cloudAuthenticateOperation
com.apple.itunescloudd.ICDCloudMusicLibraryRequestHandler.sagaDeauthenticateOperation
Jalisco
Saga
Unknown
update
<redacted>
developerToken
userToken
%@ %@
JaliscoSetItemPropertyOperationPurchaseHistoryIDKey
JaliscoSetItemPropertyOperationPropertiesKey
JaliscoSetItemPropertyOperation - (purchase_history_id = %llu)
POST
JaliscoDeauthenticateOperation
PlaybackIntent
PlaybackIntent.Explicit
com.apple.Music
SagaCreatePlaylistOperationPlaylistPersistentIDKey
SagaCreatePlaylistOperationProperties
SagaCreatePlaylistOperationTrackListKey
SagaSDKCreatePlaylistOperationRequestingBundleKey
SagaCreatePlaylistOperation - (playlist persistent-id = %lld)
databases/%u/edit
com.apple.itunescloudd.%@
ICDDefaultsKeyKnowAccountDSIDs
ICDDefaultsKeyKnownActiveAccountDSID
ICDDefaultsKeyPendingBackgroundTasksData
ICDDefaultsKeyLastKnownExplicitContentAllowed
ICDDefaultsKeyLastKnownMusicVideosAllowed
ICDDefaultsKeyLastKnownMusicSubscriptionType
com.apple.itunescloud.daemon
com.apple.itunescloud.daemon.internal
com.apple.%@.global.serial.queue
Implement this class property in subclasses
Implement this class property in subclasses supporting accountless handling
-init is not supported, use handlerForConfiguration: or initWithConfiguration:
<%@ %p: [dsid=%@, active=%d]>
MLCloudNeedsContainerRefetch
iTunes_Control/iTunes/LatestCloudPlayCountChanges.plist
iTunes_Control/iTunes/LatestCloudPlayDateChanges.plist
iTunes_Control/iTunes/LatestCloudSkipCountChanges.plist
iTunes_Control/iTunes/LatestCloudPlayDataChangesDate.plist
MLResetCollectionsOnNextImport
/var/mobile/Media/Purchases
.plist
itemId
com.apple.iTunesStore.downloadInfo
mediaAssetFilename
UPDATE item_store SET store_item_id = ? WHERE item_pid IN (SELECT item_pid FROM item_extra WHERE location = ?)
UPDATE container SET is_src_remote = 2 WHERE cloud_is_subscribed AND is_src_remote = 0
SELECT COUNT() FROM artwork_token WHERE artwork_type = ? AND artwork_token LIKE '%%0x0%%'
MLArtistHeroImageImportDate
DELETE FROM artwork_token WHERE artwork_source_type=%d AND entity_pid
MLEnableICMLConfig
MLActiveAccountDSID
MLAutoEnableICML
LibraryRecommendationArtistAffinity
v32@?0@8@"NSIndexPath"16^B24
v24@?0@"MPModelLibraryResponse"8@"NSError"16
-[ICMusicLibraryArtistAffinityAnalyzer createFeatureProviderDictionaryFromNewContentResponse:withLibraryArtistSnapshots:]
ICMusicLibraryArtistAffinityAnalyzer.m
releaseIx.count == daysWithAdds.count
releaseIx.count == albumCount.count
releaseIx.count == playCount.count
releaseIx.count == daysSinceLastPlay.count
releaseIx.count == playsPerItem.count
days_with_adds
num_albums
num_plays
days_since_last_play
plays_per_item
release_ix
%llu
MPModelLibraryRequest
Class getMPModelLibraryRequestClass(void)_block_invoke
Unable to find class %s
MPModelSong
Class getMPModelSongClass(void)_block_invoke
NSString *getMPModelRelationshipSongArtist(void)
MPModelRelationshipSongArtist
MPPropertySet
Class getMPPropertySetClass(void)_block_invoke
NSString *getMPModelPropertyArtistName(void)
MPModelPropertyArtistName
NSString *getMPModelRelationshipSongAlbum(void)
MPModelRelationshipSongAlbum
NSString *getMPModelPropertyAlbumTitle(void)
MPModelPropertyAlbumTitle
NSString *getMPModelPropertySongTitle(void)
MPModelPropertySongTitle
NSString *getMPModelPropertySongPlayCount(void)
MPModelPropertySongPlayCount
NSString *getMPModelPropertySongSkipCount(void)
MPModelPropertySongSkipCount
NSString *getMPModelPropertySongLastDevicePlaybackDate(void)
MPModelPropertySongLastDevicePlaybackDate
NSString *getMPModelPropertySongLibraryAddedDate(void)
MPModelPropertySongLibraryAddedDate
NSString *getMPModelPropertySongUserRating(void)
MPModelPropertySongUserRating
persistent-id
kind
has-subscription-drm
item-name
item-id
playlist-name
playlist-id
playlist-artist-name
playlist-artist-id
artist-name
artist-id
composer-name
composer-id
genre-name
genre-id
compilation
year
duration
track-number
track-count
disc-number
disc-count
store-front-id
added-date
modified-date
purchased-date
released-date
copyright
last-played-date
has-been-played
play-count
skip-count
user-rating
album-rating
item-checked
comment
has-lyrics
lacks-cover-art
cloud-only
beats-per-minute
filename
size
sample-rate
bit-rate
format
audio-codec
audio-codec-sub-type
gapless-heuristic
gapless-encoding-drain
gapless-encoding-delay
gapless-duration
gapless-frame-resynch
normalized-volume
playlist-sort-order
playlist-sort-reversed
description
parent-id
playlist-global-id
items
data
genius-seed-tracks
contentFilter
smartInfo
isDefaultSmartPlaylist
external-vendor-identifier
external-vendor-display-name
external-vendor-container-tag
databases/%u/containers/edit
v32@?0@"NSString"8@16^B24
SagaSubscribedPlaylistUpdater.m
Invalid parameter not satisfying: %@
connection
com.apple.MediaServices
subscribed-containers.daap
com.apple.itunescloud.ICPlayActivityFlushInternalTestRequestNotification
ICDServerNotificationsManagerFamilyEventKey
ICDServerNotificationsManagerIsApplicationRegistrationKey
ICDServerNotificationsManagerApplicationRegistrationBundleIDsKey
com.apple.itunescloudd.ICDServerNotificationsManager
com.apple.LaunchServices.applicationRegistered
com.apple.LaunchServices.applicationUnregistered
com.apple.mobileipod.libraryimportdidfinish
com.apple.itunesstored.autodownloaddefaultschange
com.apple.purplebuddy.setupdone
UserInfo
isPlaceholder
bundleIDs
pairs
B24@?0Q8@"NSObject<OS_xpc_object>"16
NSString *getMPRestrictionsMonitorAllowsExplicitContentDidChangeNotification(void)
ICDServerNotificationsManager.m
MPRestrictionsMonitorAllowsExplicitContentDidChangeNotification
NSString *getMPRestrictionsMonitorAllowsMusicVideosDidChangeNotification(void)
MPRestrictionsMonitorAllowsMusicVideosDidChangeNotification
NSString *getMPHomeUserMonitorAllowExplicitSettingDidChangeNotification(void)
MPHomeUserMonitorAllowExplicitSettingDidChangeNotification
CloudAuthenticateOperation
Client is not allowed to request cloud service capabilities.
Client is not allowed to request storefront country code.
Client is not allowed to request storefront identifier.
Client is not allowed to request developer token.
ICDCloudServiceStatusMonitor.m
Both requestingApplicationBundleIdentifier and error are nil. This is unexpected.
Client is not allowed to request user token.
Client is not allowed to request MusicKit tokens.
Failed to fetch developer token.
com.apple.itunesstored.privacy-acknowledged
v32@?0@"ICDCloudServiceCapabilitiesRequestOperation"8Q16^B24
v16@?0@"ICURLBag"8
v32@?0@"NSUUID"8@"NSXPCConnection"16^B24
Found nil storefront identifier from local store account.
%@: Either storefrontCountryCode or finalError are expected to be non-nil at this point.
%@: Either storefrontIdentifier or error are expected to be non-nil at this point.
Failed to retrieve bundle identifier of the requesting application. The requesting application is likely missing the "%@" entitlement.
application-identifier
SagaFavoriteEntityOperationAdamIDKey
SagaFavoriteEntityOperationCloudIDKey
SagaFavoriteEntityOperationCloudAlbumIDKey
SagaFavoriteEntityOperationCloudArtistIDKey
SagaFavoriteEntityOperationGlobalPlaylistIDKey
SagaFavoriteEntityOperationTimeStampKey
SagaFavoriteEntityOperationTypeKey
SagaFavoriteEntityOperation.m
adamID != 0
entityType != ICFavoriteMediaEntityPlaylist
globalPlaylistID.length > 0
sagaID != 0
entityType == ICFavoriteMediaEntitySong || entityType == ICFavoriteMediaEntityPlaylist
albumCloudLibraryID.length > 0
artistCloudLibraryID.length > 0
UPDATE album set cloud_library_id=? where album_pid=?
UPDATE item_artist set cloud_library_id=? where item_artist_pid=?
UPDATE album_artist set cloud_library_id=? where album_artist_pid=?
update item_stats set favorite_state=1, date_favorited=0 where item_pid=?
v24@?0@8^B16
update container set favorite_state=1, date_favorited=0 where container_pid=?
UPDATE album set favorite_state=1, date_favorited=0 where album_pid=?
UPDATE item_artist set favorite_state=1, date_favorited=0 where store_id=?
UPDATE album_artist set favorite_state=1, date_favorited=0 where store_id=?
UPDATE item_artist set favorite_state=1, date_favorited=0 where cloud_library_id=?
UPDATE album_artist set favorite_state=1, date_favorited=0 where cloud_library_id=?
UPDATE item_store set store_saga_id = store_saga_id WHERE item_pid = ?
UPDATE item SET keep_local = ? WHERE item_pid = ? AND in_my_library = 1 AND media_type IN (?, ?)
v32@?0@8Q16^B24
databases/%u/extra_data/cloud-lyrics-info
v24@?0@"ICLightweightMusicSubscriptionStatusResponse"8@"NSError"16
v24@?0@"WLKServerConfigurationResponse"8@"NSError"16
@16@?0@"NSUUID"8
itfe
xpAb
v16@?0@"ICMusicUserStateCookies<ICMutableMusicUserStateCookies>"8
v16@?0@"ICMusicUserState<ICMutableMusicUserState>"8
v16@?0@"ICTVUserState<ICMutableTVUserState>"8
v16@?0@"ICMediaUserState<ICMutableMediaUserState>"8
@16@?0@"ICUserIdentity"8
v16@?0@"ICMediaUserState"8
v16@?0@"NSArray"8
v16@?0@"ICMusicLibraryAuthToken<ICMutableMusicLibraryAuthToken>"8
v16@?0@"ICMusicLibraryAuthTokenStatus<ICMutableMusicLibraryAuthTokenStatus>"8
v32@?0@"NSString"8@"ICLibraryAuthServiceClientTokenStatus"16^B24
v24@?0@"ICMediaUserState"8@"NSError"16
B16@?0@"ICMediaUserState"8
@16@?0@"ICMediaUserState"8
com.apple.itunescloudd.private
WLKStoredConfigurationManager
Class getWLKStoredConfigurationManagerClass(void)_block_invoke
ICDMediaUserStateCenterServer.m
void *WatchListKitLibrary(void)
WLKConfigurationManager
Class getWLKConfigurationManagerClass(void)_block_invoke
MSVHasher+Algorithms.h
Cannot obtain hash from unknown hasher algorithm
JaliscoImporterErrorDomain
JaliscoImporter.m
Subclass %@ must implement -%@ defined in %@.
JaliscoImporter
items.daap
includeItemFlavors
delta
revision-id
%@ %p [dsid=%@]
SagaPublishPlaylistOperation - (playlist cloud id = %llu)
com.apple.itunescloudd.usernotifications
music-notification-default
Music
ETag
CloudLoadBulkArtworkInfoOperation.m
CloudIDs must be an array!
%@ - (item count = %lu)
v40@?0@8q16Q24^B32
-init is not supported, use initWithPlayActivityTable
ICFlushPlayActivityEventsOperation.m
initWithPlayActivityController called with nil playActivityTable
com.apple.iTunesCloud.ICFlushPlayActivityEventsOperation.serialQueue
v24@?0@"NSArray"8B16B20
B8@?0
v24@?0@"NSURLRequest"8@"NSError"16
CloudArtworkOperationQueue.m
Only operations of type CloudArtworkImportOperation are supported
v32@?0@"CloudArtworkImportOperation"8Q16^B24
purchase history
cloud
container cloud
cloud (subscription)
container cloud (subscription)
Unknown sourceType/artworkType pair for CloudArtworkOperationQueue addOperations: %ld/%@
Failed to resolve artwork URL for %@ ID: %@
com.apple.itunescloudd.CloudArtworkOperation.bulkArtworkInfoOperation
v32@?0@"NSNumber"8@"NSMutableArray"16^B24
SagaAddPlaylistOperationPlaylistPersistentIDKey
SagaAddPlaylistOperationPlaylistNameKey
SagaAddPlaylistOperationPlaylistSeedItemIDsKey
SagaAddPlaylistOperationPlaylistItemIDsKey
SagaCreateGeniusPlaylistOperation - (playlist_persistent_id  = %lld / playlist_name = %@)
com.apple.mediaplaybackcore
MPCPlaybackPrivateListeningEnabled
iTunesCloudService State
^v17@?0{_MSVLogStateHints=B}8@?<^v@?@"NSDictionary">9
Q8@?0
com.apple.itunescloudd.launched
v32@?0@"NSString"8@"NSXPCListener"16^B24
Attempting to retrieve handler for an unsupported configuration [dsid=%@]
Attempting to retrieve handler for an unsupported configuration
An ICCloudClient (or HSCloudClient) instance is using a signed-out user identity.
Listen to ICActiveUserIdentityDidChangeNotification and either update ICCloudClient with the new active account or recreate it
ICCloudServiceErrorDomain
Unable to get an anonymous listener for %@[%ld] - This usually indicates an attempt to access itunescloudd without the proper entitlements.
com.apple.itunescloudd.xpc
ICDServer.m
We should never get here
unknown
AllowAutoDownloadOnCellular
com.apple.itunesstored
v32@?0@"ICConnectionConfiguration"8Q16^B24
com.apple.itunescloudd.ICDServer.serial.queue
com.apple.itunescloudd.ICDServer.startup.queue
com.apple.itunescloudd.ICDServer.internal.operation.queue
com.apple.itunescloud.setupcompleted
MPExplicitContentAllowedBoolean
MLLastUploadedExplicitContentAllowedBoolean
com.apple.itunescloudd.setParentalControlRequestOperation
v16@?0@"ICRequestContext"8
v24@?0@"ICMusicSubscriptionStatusResponse"8@"NSError"16
com.apple.itunescloudd.CloudServer.keyRefreshOperation
installed
uninstalled
v32@?0q8Q16^B24
Library/Caches/com.apple.itunesstored/url-resolution.plist
p2-url-resolution
p2-launch-host-suffix-whitelist
p2-launch-apple-store-host-patterns
p2-launch-apple-store-path-patterns
p2-launch-appstore-host-patterns
p2-launch-appstore-path-patterns
p2-launch-ebookstore-host-patterns
p2-launch-ebookstore-path-patterns
p2-launch-mobilestore-host-patterns
p2-launch-mobilestore-path-patterns
vpp-licensing-invitation-url-pattern
com.apple.itunesstored.changed-url-resolution
AppleMusicSubscriber
AppleMusicUndecided
AppleMusicDisabled
p2-url-section-name
MusicNS
_retryLoadingCloudLibraryForSecondaryAccountsOnAppleTV: is only valid for AppleTV.
com.apple.itunescloud.subscription_status_refresh
v24@?0@"ICMediaAPIURLMappingSet"8@"NSError"16
EnhancedAudioAvailable
v16@?0@"NSString"8
Domain
.apple.com
Name
Path
v24@?0@"NSString"8@"NSString"16
https://www.apple.com/
com.apple.airplay
isAppleMusicSubscriber
cloudLibraryIsOn
com.apple.airplay.prefsChanged
MPRestrictionsMonitor
Class getMPRestrictionsMonitorClass(void)_block_invoke
MPMediaQuery
Class getMPMediaQueryClass(void)_block_invoke
MPHomeUserMonitor
Class getMPHomeUserMonitorClass(void)_block_invoke
SagaUnfavoriteEntityOperationAdamIDKey
SagaUnfavoriteEntityOperationCloudIDKey
SagaUnfavoriteEntityOperationCloudAlbumIDKey
SagaUnfavoriteEntityOperationCloudArtistIDKey
SagaUnfavoriteEntityOperationGlobalPlaylistIDKey
SagaUnfavoriteEntityOperationTimeStampKey
SagaUnfavoriteEntityOperationTypeKey
SagaUnfavoriteEntityOperation.m
No purchase_history_artwork_token for purchase_history_id = %llu
No purchase_history_screenshot_token for purchase_history_id = %llu
SELECT DISTINCT (fetchable_artwork_token), purchase_history_id, media_type FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token JOIN item_store ON entity_pid = item_store.item_pid AND entity_type = 0 JOIN item USING (item_pid) WHERE artwork_token IS NULL AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token
AllArtistImagesMapNextUpdateDateKey
AllArtistImagesMapDataDictionaryKey
allArtistImagesMap.plist
com.apple.itunescloudd.cloudartistheroimageimporter.accessqueue
com.apple.itunescloudd.cloudartistheroimageimporter.operationqueue
operationCount
com.apple.itunescloudd.cloudartistheroimageimporter
v48@?0q8q16i24i28q32^B40
min-artist-update-polling-frequency-secs
SELECT fetchable_artwork_token, store_id FROM best_artwork_token JOIN item_artist ON entity_pid = item_artist_pid AND entity_type = ? WHERE entity_pid = ?
SELECT fetchable_artwork_token, store_id FROM best_artwork_token JOIN album_artist ON entity_pid = album_artist_pid AND entity_type = ? WHERE entity_pid = ?
library-match-rules
artist-image-match-bulk-url
an-batch-size
all-artist-images-map-url
update-interval-seconds
v32@?0@"NSArray"8Q16^B24
artist
v24@?0@"NSString"8^B16
artwork
v24@?0@"<ICStorePlatformResponse>"8@"NSError"16
SELECT store_id FROM item_artist LEFT OUTER JOIN artwork_token ON item_artist_pid = entity_pid AND entity_type = ? AND artwork_type = ? AND artwork_source_type = ? WHERE store_id != 0
SELECT store_id FROM album_artist LEFT OUTER JOIN artwork_token ON album_artist_pid = entity_pid AND entity_type = ? AND artwork_type = ? AND artwork_source_type = ? WHERE store_id != 0
SELECT DISTINCT (fetchable_artwork_token), store_id FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token LEFT OUTER JOIN item_artist ON item_artist_pid = entity_pid WHERE artwork_token IS NULL AND entity_type = ? AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token
SELECT DISTINCT (fetchable_artwork_token), store_id FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token LEFT OUTER JOIN album_artist ON album_artist_pid = entity_pid WHERE artwork_token IS NULL AND entity_type = ? AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token
v32@?0@"NSNumber"8@"NSString"16^B24
CloudArtistHeroImageImporter.m
required-fields
MLArtistHeroImageImportDatabaseRevision
ContentTastePendingChangesCoordinatorContentTasteItemKey
ContentTastePendingChangesCoordinatorInvalidateCacheKey
ContentTastePendingChangesCoordinatorPendingChangesKey
ContentTastePendingChangesCoordinatorOperationIdentifierKey
noDSID
%lu-ContentTastePendingChanges
com.apple.itunescloudd.contenttastependingchanges.%ld
%@.plist
databases/%u/extra_data/cloud-artwork-info
com.apple.itunes.extended-media-kind
'%@:%d'
(%@)
ICDServerOperationsManagerOperationNamesKey
ICDServerOperationsManagerBackgroundOperationNamesKey
name=%@, object=%p
com.apple.itunescloudd.ICDServerOperationsManager.serial.queue
com.apple.itunescloudd.ICDServerOperationsManager.operationQueue
com.apple.itunescloudd.ICDServerOperationsManager.backgroundOperationQueue
void soft_SBSSetStatusBarShowsActivityForApplication(Boolean, CFStringRef, unsigned int)
ICDServerOperationsManager.m
SBSSetStatusBarShowsActivityForApplication
void *SpringBoardServicesLibrary(void)
dmap.itemid
geniusSeedTrackIDs
events
override-headers
attenuation-available
vocal-attenuation-duration-in-milliseconds
auto-play-mode
build-features
build-version
container-id
container-ids
container-type
device-name
dsid
end-position-in-milliseconds
end-reason-type
enqueuer
external-identifier
feature-name
guid
household-id
internal-build
type
media-duration-in-milliseconds
media-type
offline
personalized-container-id
player
play-mode
private-enabled
queue-grouping-id
event-reason-hint-type
reco-data
repeat-play-mode
bundle-id
bundle-version
sb-enabled
siri-initiated
shuffle-play-mode
source-type
start-position-in-milliseconds
store-front
timed-metadata
milliseconds-since-play
track-info
event-type
shared-activity-devices-current
shared-activity-devices-max
utc-offset-in-seconds
display-type
character-displayed-count
lyric-language
audio-quality-targeted
audio-quality-provided
user-preference-audio-quality
user-preference-playback-format
album-adam-id
artist-adam-id
cloud-album-id
cloud-playlist-id
global-playlist-id
playlist-version-hash
station-hash
station-personalized-id
station-id
auc-adam-id
cloud-id
lyric-id
purchased-adam-id
radio-adam-id
orig-sf-adam-id
reporting-adam-id
subscription-adam-id
audio-sample-rate-in-hz
audio-bit-depth
bit-rate-in-bps
codec
audio-channel-type
playback-format
11-15
16-20
21-25
CloudTrackDownloadManager.m
%@ - %@ - %@, playCount: %ld
, lastPlayedDate: %@
v32@?0@"<ICDManageableAccount>"8Q16^B24
ICDAccountManagerState %p:
[active dsid=%@]
[no active dsid]
[supported dsids=%@]
[no supported dsids]
v24@?0@"ICConnectionConfiguration"8^B16
SSURLConnectionRequestGeniusAdditionsErrorDomain
server-status-code
status
retry-in-ms
SSURLConnectionRequest+GeniusAdditions
idx (%lu) is out of range (%lu)
value
preference
adam_id
external_id
created_offset_millis
preference_type
action_timestamp_millis
Artist: %@: Score: %f, artistID: %lld, cumulativePlayCount: %ld, cumulativeSkipCount: %ld, playsPerItem: %f, uniqueAlbums: %lu, uniqueSongs: %lu, daysWithAdds: %lu, daysSinceLastPlay: %ld
base-url
CloudLibrary.m
CloudLibrary
I'm abstract, please instantiate a subclass.
com.apple.itunescloudd.%@.connection
com.apple.itunescloudd.asyncrequests
v16@?0@"NSOperation"8
CloudLibrary has no bag key
%@ Ensure Connection
v16@?0@"CloudLibraryConnection"8
Connecting to cloud library
v24@?0@"NSOperation"8^B16
SagaSetItemPropertyOperationSagaIDKey
SagaSetItemPropertyOperationPropertiesKey
SagaSetItemPropertyOperation - (saga_id = %u)
-init is not supported, use +handler
@"NSString"16@?0@"NSString"8
com.apple.itunescloudd.sagaUploadItemPropertiesQueue
com.apple.itunescloudd.sagaUploadPlaylistPropertiesQueue
com.apple.itunescloudd.sagaUpdateLibraryQueue
com.apple.itunescloudd.calloutQueue
SagaRequestHandler.m
MSVDeviceSupportsMultipleLibraries()
com.apple.itunescloudd.SagaRequestHandler.uploadPlayDataOperation
com.apple.itunescloudd.SagaRequestHandler.createPlaylistOperation
com.apple.itunescloudd.SagaRequestHandler.createGeniusPlaylistOperation
com.apple.itunescloudd.SagaRequestHandler.addItemToPlaylistOperation
com.apple.itunescloudd.SagaRequestHandler.updatePlaylistOperation
com.apple.itunescloudd.SagaRequestHandler.publishPlaylistOperation
com.apple.itunescloudd.SagaRequestHandler.removeItemOperation
com.apple.itunescloudd.SagaRequestHandler.removePlaylistOperation
com.apple.itunescloudd.SagaRequestHandler.uploadPlaylistArtworkOperation
com.apple.itunescloudd.SagaRequestHandler.updateSubscribedPlaylistsOperation
com.apple.itunescloudd.SagaRequestHandler.cloudAddOperation
com.apple.itunescloudd.SagaRequestHandler.setAddToPlaylistBehaviorOperation
com.apple.itunescloudd.SagaRequestHandler.setAlbumPropertiesOperation
com.apple.itunescloudd.SagaRequestHandler.loadArtworkInfoOperation
No saga artwork_token for screenshot item with persistent-id = %lld
NSDebugDescription
com.apple.itunescloudd.SagaRequestHandler.getGeniusItemsOperation
daap.incrementplaycount
daap.incrementskipcount
daap.songdateadded
com.apple.itunescloudd.SagaRequestHandler.setItemPropertyOperation
com.apple.itunescloudd.SagaRequestHandler.favoriteEntityOperation
com.apple.itunescloudd.SagaRequestHandler.favoritePlaylistEntityOperation
com.apple.itunescloudd.SagaRequestHandler.favoriteCloudAlbumEntityOperation
com.apple.itunescloudd.SagaRequestHandler.favoriteCloudArtistEntityOperation
com.apple.itunescloudd.SagaRequestHandler.unfavoriteEntityOperation
com.apple.itunescloudd.SagaRequestHandler.unfavoriteCloudAlbumEntityOperation
com.apple.itunescloudd.SagaRequestHandler.unfavoriteCloudArtistEntityOperation
com.apple.itunescloudd.SagaRequestHandler.unfavoriteGlobalPlaylistOperation
Different Cloud IDS
com.apple.itunescloudd.SagaRequestHandler.updateLibraryOperation
com.apple.itunescloudd.sagaUpdateInProgressChanged
configuration
clientIdentity
%@ %p
CloudLibraryOperationStatusPending
CloudLibraryOperationStatusSuccess
CloudLibraryOperationStatusFailed
CloudLibraryOperationStatusPermanentlyFailed
CloudLibraryOperationStatusCancelled
Unknown Cloud Library Operation Status
SagaUpdateSubscribedPlaylistsOperation - (saga_id count = %llu)
SagaGetGeniusItemsOperation - (seed_id = %llu)
com.apple.iTunesCloud.CloudService.operationQueue
auto-update-polling-frequency-secs
subscribed-container-polling-frequency-secs
v24@?0B8B12B16B20
v24@?0Q8@"NSError"16
v32@?0@"NSString"8@"NSString"16@"NSError"24
v24@?0@"NSNumber"8@"NSError"16
Missing add to library capabilities in %ld
update-on-app-focus-enabled
update-polling-frequency-secs
loadBooksForStoreIDs: - Invalid user identity [missing DSID] - userIdentity=%@
Artist images are not supported on this device.
clientIdentifier
clientVersion
bagProfile
bagProfileVersion
shouldIgnoreUserTokenCache
shouldIgnoreDeveloperTokenCache
protocol-version
min-compatible-version
body.plist
application/x-apple-plist
Content-Type
gzip
Content-Encoding
ICStoreURLRequest *_CloudGeniusUtilitiesCreatePostRequest(NSURL *__strong, NSString *__strong, NSTimeInterval, NSInteger, NSMutableDictionary *__strong, BOOL, BOOL)
CloudGeniusUtilities.m
Must provide either a URL or a URL Bag Key
com.apple.itunescloudd.CloudMusicSubscriptionStatusServiceListener.accessQueue
ICContentTasteRequestHandlerUpdateTaskIdentifier
ICContentTasteRequestHandlerPushTaskIdentifier
ICContentTasteRequestHandlerRetryTaskIdentifier
ICContentTasteRequestHandlerResponseExpiredTaskIdentifier
com.apple.amp.iTunesCloud.ICContentTasteRequestHandler-%lu
%@.default
%@.queue
%@.operationQueue
ICContentTasteRequestHandler.m
content taste change to post cannot be nil
PostPendingContentTasteChanges
MediaContentTasteResponseExpirationTimeKey
com.apple.itunescloudd.JaliscoRequestHandler.updateLibraryQueue
com.apple.itunescloudd.JaliscoRequestHandler.calloutQueue
com.apple.homesharing
JaliscoDisabled
Unable update library [no DSID on user identity] - userIdentity=%@ - properties=%@
com.apple.itunescloudd.jaliscoUpdateInProgressChanged
com.apple.itunescloudd.JaliscoRequestHandler.updateLibraryOperation
com.apple.itunescloudd.JaliscoRequestHandler.hideItemOperation
com.apple.itunescloudd.JaliscoRequestHandler.setItemPropertyOperation
com.apple.itunescloudd.JaliscoRequestHandler.loadArtworkInfoOperation
No purchase history artwork_token for screenshot item with persistent-id = %lld
JaliscoRequestHandler.m
com.apple.itunescloudd.JaliscoRequestHandler.loadBooksOperation
tokenCollection
error
TCC not granted
RefuseXPCConnection
processIdentifier
bundleID
serviceName
refusalReason
 [%ld]: %ld bytes (%@)
ICDAccountManagerStateChange %p: %@ -> %@ - [active changed=%u] [supported changed=%u]
databases/%u/getgeniusitems
seed-id
num-items
dmap.longitemid
_ICCloudContentTasteUpdateItemCodingKeyStoreIDKey
_ICCloudContentTasteUpdateItemCodingKeyGlobalPlaylistIDKey
_ICCloudContentTasteUpdateItemCodingKeyItemTypeKey
_ICCloudContentTasteUpdateItemCodingKeyTasteTypeKey
_ICCloudContentTasteUpdateItemCodingKeyTimeStampKey
_ICCloudContentTasteUpdateItemCodingKeyDSIDKey
ICCloudContentTasteUpdateItem (%p) storeID=%lld, DSID=%lld, globalPlaylistID=%@, contentTasteType=%ld, contentTasteItem=%ld, updateTimeStamp=%@
void _MSVHasherAppend64(MSVHasher * _Nonnull, uint64_t)
Cannot append to unknown hasher algorithm
void _MSVHasher_SipHash_1_3_Append64(MSVHasherSipHash_1_3 *, uint64_t)
MSVHasher+SipHash.h
_MSVHasher_SipHash_1_3_Append64: invalid byte count detected [byteCount & 7, tail == 0]: %lld
_MSVHasher_SipHash_1_3_Append64: invalid byte count detected [byteCount & 3]: %lld
NSUInteger _MSVHashGetHash(MSVHash)
Cannot finalize unknown hasher algorithm
itre
SagaImporterErrorDomain
SagaImporter.m
containers.daap
items_%u.daap
meta
daap.playlistsongs
v12@?0f8
Artists
Albums
v36@?0@"NSString"8q16B24q28
com.apple.itunescloudd.SagaImporter.loadLyricsOperation
albums_%u.daap
artists_%u.daap
SagaLoadLyricsOperation-bulk (item count = %llu)
com.apple.itunescloudd.SagaLoadLyricsOperation
dmap.dictionary
text-url
databases/%u/subscribed-containers
ICPlaylistUpdateErrorDomain
SagaUpdatePlaylistOperationArchiveVersionKey
SagaUpdatePlaylistOperationPlaylistPersistentIDKey
SagaUpdatePlaylistOperationProperties
SagaUpdatePlaylistOperationTrackListKey
SagaSDKUpdatePlaylistOperationRequestingBundleKey
SagaUpdatePlaylistOperationItemSagaIDsKey
SagaUpdatePlaylistOperationcloudItemIDListKey
SagaUpdatePlaylistOperation - (playlist_persistent_id = %lld)
Updating playlists are only allowed when updating a playlist that your app has created.
SagaRemovePlaylistOperationArchiveVersionKey
SagaRemovePlaylistOperationPlaylistSagaIDsKey
SagaRemovePlaylistOperationPlaylistSagaIDKey
SagaRemovePlaylistOperation - (saga_id count = %llu)
-init is not supported, use sharedCloudContentTasteResponseCacheManager
com.apple.amp.iTunesCloud.ICCloudContentTasteResponseCacheManager.accessQueue
Library/Caches/com.apple.itunescloud/MediaContentTaste
SyncResponse-%llu
SagaUploadItemPlayDataOperation
adamId
name
catalogContent
serializedRecommendationsResponse
modelDataBlob.bin
compiledMLModel.mlmodelc
com.apple.itunescloud.library_recommendations_refresh
min-refresh-freq-in-seconds
com.apple.itunescloudd.ICMusicLibraryRecommendationsHandleNewArtistContentResponseNotification
com.apple.itunescloudd.ICMusicLibraryRecommendationsClearCacheNotification
ICMusicLibraryRecommendationsHandleNewArtistContentFilePath
musicRecommendationsData
matchedAdamIDs
Library_Recommendation
non-subscriber-notification-content-opt-in
com.apple.amp.inappmessages.private
com.apple.itunescloud.ICMusicLibraryRecommendationController.accessQueue
v24@?0@"ICMusicSubscriptionStatusMonitor"8@"ICMusicSubscriptionStatus"16
v24@?0@"ICMusicAccountNotificationsSettingsResponse"8@"NSError"16
v16@?0@"AMPMusicArtistNewContentResponse"8
v16@?0@"ICMusicLibraryRecommendationResult"8
thresholded_score
v16@?0@"NSMutableDictionary"8
propertyKey
v24@?0@"AMPMusicArtistNewContentResponse"8@"NSError"16
MLModel compileModelAtURL failed with error %@
MLModel modelWithContentsOfURL failed with error %@
Caches/com.apple.iTunesCloud/LibraryRecommendations/ResourceCache
page-detail-rule
eventType:page|pageId:%lld
detail-event
isOptedInToNewArtistContent
true
optin-context
isExplicitContent
is-explicit-rule
false
subscription-status-context
explicitContent
album-detail-segue
click
LibraryContentBannerNonsubscriber
recoId
close-button
impressions
banner
v24@?0@"ICStorePlatformResponse"8@"NSError"16
album-lockup
albumTitle
artistName
non-subscriber-opt-in-message
v24@?0@"ICInAppMessageEntry"8@"NSError"16
NEW_ALBUM_NOTIFICATION_TITLE
NEW_ALBUM_NOTIFICATION_BODY_FORMAT
title
body
alert
_url
https://itunes.apple.com/album/id%lld?itsct=NonSubsNewContentRelease&itscg=10100
actionType
actionUrl
eventType
notificationAction
eventVersion
notificationId
targetType
notification
topic
xp_amp_notifications
notificationType
Content
details
notificationSubtype
NonSubsNewContentRelease
NEW_ALBUM_NOTIFICATION_GOTO_BUTTON_TITLE
goToAlbum
targetId
AmpMusic.Notifications.NewRelease.Buttons.GoToAlbum
button
content-available
ams_%@
_bid
yyyy-MM-dd'T'HH:mm:ssZ
en_US_POSIX
notificationRequest
isExplicit
language
platformId
platformName
ML3StoreItemTrackData
Class getML3StoreItemTrackDataClass(void)_block_invoke
ICMusicLibraryRecommendationController.m
void *MusicLibraryLibrary(void)
ML3MusicLibrary
Class getML3MusicLibraryClass(void)_block_invoke
ML3MutableDatabaseImport
Class getML3MutableDatabaseImportClass(void)_block_invoke
MLMediaLibraryService
Class getMLMediaLibraryServiceClass(void)_block_invoke
dmap.itemhidden
com.apple.itunes.cloud-artwork-token
JaliscoHideItemOperationItemPurchaseHistoryIDsKey
JaliscoHideItemOperation - (purchase_history_id count = %llu)
databases/%u/items/edit
<%@: %p cloud_id=%llu, artworkToken=%@, artworkType=%lld, sourceType=%lld>
com.apple.iTunesCloud.itunescloudd.cloudArtworkImportOperation
mediaType
success
noToken
@"NSDictionary"8@?0
noAssetURL
NanoMusicSync
OffPuckDownloads
watchNotCharging
Original artwork found, but failed to import.
Artwork downloaded successfully, but failed to import.
importSuccess
errorstring
isCancelled
_NSDataCloudAdditionsTemporaryFileKey
databases/%u/groups?groupType=albums
play-activity-feed-post-frequency
Library
com.apple.iTunesCloud
play_activity
-init is not supported, use +sharedInstance
com.apple.itunescloudd.playactivityserver
com.apple.itunescloudd.CloudPlayActivityServer.flushOperationQueue
v16@?0d8
ShouldDebugLogRecordedEvents
com.apple.PlayActivityFeed
com.apple.iTunesCloud.ICPlayActivityController.debugLogOperationQueue
com.apple.itunesstored.private
com.apple.itunescloudd.playactivity
will
will not
CloudPlayActivityListenerNextFlushPlayActivityFireDateKey
com.apple.itunescloudd.flushPlayactivityEventsBackgroundTask
com.apple.itunescloudd.ICDEnhancedAudioKeyManager.HLSKeyRefreshOperationQueue
com.apple.itunescloudd.enhancedAudioSharedKeyRefreshOperation
v24@?0@"ICContentKeyStoreEntry"8^B16
v16@?0@"ML3DatabaseConnection"8
com.apple.itunescloudd.enhancedAudioOfflineKeyFetchOperation.%@]
v32@?0@"NSNumber"8@"NSDictionary"16^B24
Key Management
Failed to invalidate key '%@', adamID %@
JaliscoLoadBooksOperation
books.daap
('%@:%d')
dmap.persistentid
com.apple.itunes.itms-songid
dmap.itemname
daap.songartist
daap.songgenre
daap.songdatepurchased
com.apple.itunes.cloud-artwork-url
com.apple.itunes.store.vpp-is-licensed
com.apple.itunes.store.vpp-org-id
com.apple.itunes.store.vpp-org-display-name
com.apple.itunes.item-flavor-listing
com.apple.itunes.item-flavor
com.apple.itunes.item-redownload-param-2
com.apple.itunescloudd.tcchelper
com.apple.Music.iOS.VPPA.UnifiedReconsentDialogShown
com.apple.Music.iOS.VPPA.ApprovalButtonSelected
com.apple.Music.iOS.VPPA.CancelButtonSelected
com.apple.itunescloudd.MediaLibraryAccessRevocationController.accessQueue
SBParentalControlsCapabilities
com.apple.springboard
TCC_EXPIRATION_SINGLE_APP_TITLE
TCC_EXPIRATION_MULTIPLE_APPS_TITLE
TCC_EXPIRATION_ACCEPT_BUTTON_TITLE
TCC_EXPIRATION_REJECT_BUTTON_TITLE
com.apple.tcc.access.changed
v12@?0i8
%@-CloudPendingChanges
com.apple.itunescloudd.pendingchanges.%@.%@
%@-AddPendingChange
%@-ProcessPendingChanges
%@-RemoveAllPendingChanges
com.apple.itunescloudd
unable to create cache directory
ArtworkDownloads
DeviceClassNumber
ENABLE_SYNC_LIBRARY_FAILED_TOO_MANY_ITEMS_TITLE
ENABLE_SYNC_LIBRARY_FAILED_TOO_MANY_ITEMS_MESSAGE_IPAD
ENABLE_SYNC_LIBRARY_FAILED_TOO_MANY_ITEMS_MESSAGE_IPOD
ENABLE_SYNC_LIBRARY_FAILED_TOO_MANY_ITEMS_MESSAGE_IPHONE
void CloudLibraryUtilitiesShowFailedToEnableCloudLibrarySystemDialog(ICCloudLibraryUtilitiesDisableICMLReason)
CloudLibraryUtilities.m
Either alertHeader or alertMessage is required.
v16@?0@"ICStoreRequestContext"8
cloud-info
cuid
troveid
System
Cloud
Sync
Purchase
Store
Subscription
DaapDebugging
Initial
q24@?0@"NSDate"8@"NSDate"16
Revision_%u_to_%u
track_data_%lu.daap
playlist_data_%lu.daap
album_data_%lu.daap
artist_data_%lu.daap
SubscribedPlaylists
SubscribedContainersResponse_%llu
daap_data_%lu.daap
v20@?0@"ICMutableUserIdentityProperties"8B16
v24@?0@"ICMusicSubscriptionStatus"8@"NSError"16
v24@?0B8B12@"NSError"16
MPCloudController
Class getMPCloudControllerClass(void)_block_invoke
domain
code
localizedDescription
phase
NETWORK_FAILED
UNKNOWN_ERROR
NSString *getMPErrorDomain(void)
SagaCloudSDKAddOperation.m
MPErrorDomain
artistContent
model
cloud-library-opt-out-url
min-itunes-match-compatible-version
itunes-match-protocol-version
contentType
canonicalId
releaseDate
contentFeatures
Album
Song
Playlist
MusicVideo
ArtistUploadedContent
(unknown: %i)
DisableCloudLibraryOperation
com.apple.itunescloudd.DisableCloudLibrary.optOutOperation
MLSyncClientLastSyncedRevision
MLSyncClientSyncAnchor
MLSyncClientGenerationID
MLSyncClientHasPendingAssets
v12@?0B8
databases/%u/groups?groupType=artists
com.apple.itunescloudd.ICDHandlerCoordinator.operationQueue
<ICDHandlerCoordinator %p: [policy=%d]>
ICDHandlerCoordinator.m
The method `setupHandlers` must only be called once
com.apple.itunescloudd.ICDHandlerCoordinator.setupHandlersWithAccountStateChange
The method `setupHandlers` must be call prior to attempting to update active configurations
com.apple.itunescloudd.ICDHandlerCoordinator.updateHandlersWithAccountStateChange
The method `setupHandlers` must be call prior to attempting to update handler type
com.apple.itunescloudd.ICDHandlerCoordinator.changeLibraryManagementPolicy
The method _processSupportedConfigurationsChange:initialSetup: is only suitable for parallel multi user setup.
The method _processActiveConfigurationChange:initialSetup: is only suitable for single user and serial multi user setup.
CloudLibraryConnectionRequestForbiddenAdditonalErrorCodeKey
database-id
database-name
com.apple.itunescloudd.CloudLibraryConnection.serial
application/x-dmap-tagged
Client-Cloud-Daap-Version
Client-Cloud-Purchase-DAAP-Version
X-FM-Dsid
Client-Cloud-DAAP-Request-Reason
MPPlaybackUserDefaults
Class getMPPlaybackUserDefaultsClass(void)_block_invoke
CloudLibraryConnection.m
cloud-assets-update
SagaUploadPlaylistArtworkOperationPlaylistPersistentIDKey
v16@?0@"NSData"8
cloud-ids
file-size
hash-values
sha256
payload
initiate asset change
back-off-delay-in-ms
upload-responses-url
download-requests-url
download requests phase 1 (fetch work items)
actions
action
upload-playlist
assets
upload-info
response-data
v24@?0@"NSURLResponse"8@"NSError"16
token
response-code
upload responses (report work item responses)
download requests phase 2 (fetch work items)
all-work-completed
operations
endpoint
method
requiredHeaders
clientGenerated
date
en_US
EEE',' dd MMM yyyy HH':'mm':'ss 'GMT'
content
byterange
offset
length
v40@?0@"NSURLSessionUploadTask"8@"NSData"16@"NSURLResponse"24@"NSError"32
iTunesCloud
Not enough information to upload artwork asset.
updateplaylistasset.XXXXXX
Cannot obtain digest from unknown hasher algorithm
com.apple.itunescloudd.CloudRemoteRequestOperationExecutionServiceListener.accessQueue
JaliscoUpdateOperation.m
JaliscoUpdateOperation
UpdateOperationBegin
UpdateOperationEnd
reason
class
initial
Must Subclass
query
includeHiddenItems
-----------------------------------------
PlayActivityEvents.log
com.apple.amp.itunescloudd
Default
Default_Oversize
Accounts
Artwork
Artwork_Oversize
CloudSync
CloudSync_Oversize
Connections
Connections_Oversize
Downloads
Genius
PurchaseSync
PurchaseSync_Oversize
Push
XPC_Oversize
PlayActivity
PlayActivity_Oversize
ContentTaste
ContentTaste_Oversize
BackgroundTasks
LibraryRecommendations
CloudLibraryCoordinator
UserState
daap.songalbumartist
daap.songalbum
daap.songalbumuserrating
daap.songcomment
daap.songcompilation
daap.songcomposer
daap.songcontentrating
daap.songdatemodified
daap.songdateplayed
daap.songdatereleased
daap.songdisabled
daap.songdisccount
daap.songdiscnumber
daap.songexcludefromshuffle
daap.songgrouping
daap.songlastskipdate
daap.sortalbumartist
daap.sortalbum
daap.sortartist
daap.sortcomposer
daap.sortname
daap.songstarttime
daap.songstoptime
daap.songtrackcount
daap.songtracknumber
daap.songyear
daap.songuserplaycount
daap.songuserrating
daap.songuserskipcount
dmap.itemavailable
com.apple.itunes.store.episode-screenshot
com.apple.itunes.cloud-purchased-token
com.apple.itunes.content-rating
com.apple.itunes.itms-artistid
com.apple.itunes.itms-composerid
com.apple.itunes.itms-genreid
com.apple.itunes.itms-playlistid
com.apple.itunes.itms-storefrontid
daap.songcodectype
daap.songcodecsubtype
daap.songbitrate
daap.songbeatsperminute
daap.songsamplerate
daap.songformat
daap.songsize
daap.songlongsize
daap.songtime
daap.songrelativevolume
daap.songdatakind
daap.songdataurl
daap.songcontentdescription
daap.songlongcontentdescription
com.apple.itunes.movie-info-xml
com.apple.itunes.item-flavor-id
com.apple.itunes.norm-volume
com.apple.itunes.has-video
com.apple.itunes.gapless-heur
com.apple.itunes.gapless-enc-del
com.apple.itunes.gapless-enc-dr
com.apple.itunes.gapless-dur
com.apple.itunes.gapless-resy
com.apple.itunes.is-hd-video
com.apple.itunes.copyright
com.apple.itunes.drm-user-id
com.apple.itunes.non-drm-user-id
com.apple.itunes.drm-key1-id
com.apple.itunes.drm-key2-id
com.apple.itunes.drm-versions
com.apple.itunes.drm-platform-id
com.apple.itunes.item-redownload-param
com.apple.itunes.has-chapter-data
com.apple.itunes.flat-chapter-data
com.apple.itunes.season-num
com.apple.itunes.xid
com.apple.itunes.series-name
com.apple.itunes.episode-num-str
com.apple.itunes.chapter-metadata-url
com.apple.itunes.collection-description
com.apple.itunes.cloud-lyrics-token
com.apple.itunes.episode-sort
com.apple.itunes.store.extras-url
com.apple.itunes.store.playlist-artist-id
com.apple.itunes.mastered-for-itunes
com.apple.itunes.store.subscription-adam-id
com.apple.itunes.store.playback-endpoint
daap.songwork
daap.songmovementname
daap.songmovementcount
daap.songmovementnumber
com.apple.itunes.store.lyrics-available
com.apple.itunes.store.supports-hls-playback
com.apple.itunes.store.ams-show-type
com.apple.itunes.store.ams-episode-type
com.apple.itunes.store.ams-episode-display-label
com.apple.itunes.store.ams-episode-sort-order
com.apple.itunes.store.color-capability
com.apple.itunes.store.hls-color-capability
com.apple.itunes.store.hls-video-quality
com.apple.itunes.store.hls-playback-url
com.apple.itunes.store.audio-capability
com.apple.itunes.store.hls-audio-capability
com.apple.itunes.store.is-preorder
com.apple.itunes.store.expected-release-date
com.apple.itunes.store.time-synced-lyrics-available
com.apple.itunes.store.album-classical-experience-available
com.apple.itunes.store.artist-classical-experience-available
com.apple.itunes.rental-duration
com.apple.itunes.rental-pb-duration
com.apple.itunes.rental-pb-start
com.apple.itunes.rental-start
com.apple.itunes.store.is-premium-rental
com.apple.itunes.publication-version
com.apple.itunes.display-publication-version
com.apple.itunes.page-progression
com.apple.itunes.store.show-composer-as-artist
com.apple.itunes.store.booklet-item-listing
com.apple.itunes.store.booklet-item
com.apple.itunes.store.booklet-item-name
com.apple.itunes.store.booklet-item-store-id
com.apple.itunes.store.booklet-item-redownload-param
com.apple.itunes.store.booklet-item-size
chapters
chapter-list
nominal-image-resolutions
images
start
v32@?0^{?=I*Qq}8Q16^B24
No subscription artwork_token for item with persistent-id = %lld
No subscription screenshot_token for item with persistent-id = %lld
%@ Unsupported entity type %ld for subscription artwork info
%@ Failed to fetch artwork info lookup for cloud IDs: %@
SELECT DISTINCT (fetchable_artwork_token), subscription_store_item_id, media_type FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token JOIN item_store ON entity_pid = item_store.item_pid AND entity_type = ? JOIN item USING (item_pid) WHERE artwork_token IS NULL AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token
v20@?0B8@"NSError"12
SagaCloudAddItemOperationAdamIDKey
SagaCloudAddPlaylistOperationPlaylistGlobalIDKey
SagaCloudAddItemToPlaylistOperationPlaylistPersistentIDKey
UPDATE item SET keep_local = ? WHERE item_pid = ? AND in_my_library = 1 AND media_type IN (8, 1032)
v24@?0@"NSNumber"8^B16
CloudArtworkImporter.m
configuration.userIdentity != nil
com.apple.itunescloudd.artworkimporter.artworkDownloadAccessQueue
Request must be of type %@
Suspending
Resuming
MPMediaDownloadManager
Class getMPMediaDownloadManagerClass(void)_block_invoke
artwork_operation(%llu, %ld, %ld)
ML3ArtworkTypeUnknown
ML3ArtworkTypeItem
ML3ArtworkTypeScreenshot
ML3ArtworkTypeChapter
ML3ArtworkTypeArtistHero
ML3ArtworkTypePlaylist
ML3ArtworkSourceTypeUnknown
ML3ArtworkSourceTypeCloud
ML3ArtworkSourceTypeSync
ML3ArtworkSourceTypePurchaseHistory
ML3ArtworkSourceTypeStore
ML3ArtworkSourceTypeSubscriptionStoreContent
Prompting the user to acknowledge the latest privacy policy is not supported on the current platform.
notNeeded
cancelled
accepted
com.apple.aps.itunescloudd
com.apple.sagad
com.apple.jalisco
com.apple.music.service
com.apple.music.social
environment
APNSToken
mediaKinds
accountStates
v32@?0@8@16^B24
v32@?0@"NSNumber"8@"ICDCloudPushNotificationAccountRegistrationState"16^B24
com.apple.itunescloudd.NSOperationQueue.CloudPushNotificationController.operationQueue
com.apple.itunescloudd.NSOperationQueue.CloudPushNotificationController.updatePushNotificationsOperationSyncQueue
Ignoring push notification [account is not active] - accountDSID=%lld - activeAccountDSID=%lld
v16@?0@"NSError"8
v24@?0@"ICUserIdentityProperties"8@"NSError"16
v16@?0@"ICAsyncBlockOperation"8
connection=nil
Push environment changed
v24@?0@"ICURLBag"8@"NSError"16
v24@?0@"ICPushNotificationsResponse"8@"NSError"16
media-kinds
com.apple.itunesstored.PlaybackLeaseDidEnd
payloadVersion
song
music-video
feature-movie
tv-episode
book
software
databases/%u/items
<%@: %p storeID=%lld, sagaID=%lld, globalPlaylistID=%@, cloudAlbumID=%@, cloudArtistID=%@ timeStamp=%@>
databases/%u/containers
Title: %@, storeAdamID: %lld
library-daap
v24@?0r*8Q16
v32@?0@"NSNumber"8Q16^B24
com.apple.itunes.drm-token-request-status
com.apple.itunes.drm-token-data
dmap.serverrevision
daap.baseplaylist
daap.songalbumid
daap.songartistid
daap.bookmarkable
daap.songbookmark
daap.songcategory
dmap.itemdateadded
dmap.itemdateplayed
daap.songdescription
daap.songeqpreset
daap.songextradata
dmap.objectextradata
daap.songgapless
daap.songhasbeenplayed
daap.songkeywords
daap.songpodcasturl
daap.sortseriesname
dacp.protocolversion
dacp.supports-speakerselection
dacp.supports-setuserrating
dmap.containercount
dmap.containeritemid
dmap.databasekind
dmap.itemcount
dmap.itemkind
dmap.parentcontainerid
dmap.status
dmcp.interfacekind
dmcp.protocolversion
dmcp.supportsbonjoursourcesupdates
dmcp.supportscontrolpromptrequests
dmcp.supportsplaystatusupdates
dmcp.supportsremotelibraryselection
dmcp.supportsvolumecontrol
com.apple.itunes.drm-key-list-id
com.apple.itunes.itunes-machine-id
com.apple.itunes.playlist-data
com.apple.itunes.playlist-kind
com.apple.itunes.playlist-sort-is-reversed
com.apple.itunes.playlist-sort
com.apple.itunes.supports-fprap
com.apple.itunes.supported-itunes-extensions
com.apple.itunes.supports-genius-control
com.apple.itunes.store.newsstand-artwork-url
com.apple.itunes.store.product-url
com.apple.jingle.newsstandBindingEdge
com.apple.jingle.newsstandBindingType
com.apple.jingle.AppIconNeedsShine
com.apple.itunes.special-playlist
daap.syncid
daap.albumsyncid
daap.artistsyncid
daap.albumartistsyncid
daap.composersyncid
daap.genresyncid
com.apple.itunes.cloud-match-type
com.apple.itunes.cloud-connect-status
dmap.itemidlisting
com.apple.itunes.genius-seed-track-id-listing
com.apple.itunescloudd.AppleMusicAPITokenIDSService.accessQueue
v16@?0@"ICAppleMusicAPITokenResponse"8
v28@?0@"ICAppleMusicAPITokenCollection"8@"NSError"16i24
v24@?0@"NSString"8@"NSError"16
com.apple.private.alloy.itunescloudd
requestTokens
com.apple.itunescloudd.deferredPushUpdate.saga
CloudPeriodicPoller - JaliscoMedia - LoadBag
purchase-daap
forced-refresh-frequency-minutes
com.apple.itunescloudd.periodicPoll.jaliscoMedia
com.apple.itunescloudd.deferredPushUpdate.jaliscoMedia
NextEvaluateSyncRulesOperationTime
NextEvaluateSyncRulesThrottleOperationTime
NextJaliscoLibraryPeriodicPollTime
NextJaliscoAppsPeriodicPollTime
cloud-library-update-request
cloud-library-update-check
subscription lapsed
load initial cloud library - isInitialImport
load initial cloud library
DisableLibraryUpload
ForceLibraryUnification
auto-update
incremental
num-tracks
libraryUpdateRequest
v32@?0@"ICURLResponse"8@"NSDictionary"16@"NSError"24
update-id
CloudLibraryUpload.plist
%08X%08X
persistent-library-id
should-upload
tracks
%llx
v40@?0q8r^@16Q24^B32
process-playlists
playlists
CloudLibraryUploadResults.plist
v28@?0B8@"NSError"12@"NSData"20
createdBuiltInSmartPlaylists
autoCreatedSmartPlaylistsDeleted
v24@?0@"ICDResponse"8@"NSError"16
Failed to get a database revision during library update operation
MusicShowCloudMediaEnabledSetting
com.apple.mobileipod-prefsChanged
SELECT best_artwork_token.entity_pid FROM best_artwork_token JOIN artwork_token ON best_artwork_token.entity_pid = artwork_token.entity_pid AND best_artwork_token.entity_type = artwork_token.entity_type AND best_artwork_token.available_artwork_token=artwork_token.artwork_token WHERE best_artwork_token.entity_type = ? AND best_artwork_token.artwork_type = ? AND artwork_source_type = ? AND available_artwork_token != ''
determineResultsURL
additional-fields-url
UPDATE item_store SET store_saga_id = 0
UPDATE container SET store_cloud_id = 0
com.apple.itunescloudd.ICDAccountManager.serial.queue
MPHomeMonitor
Class getMPHomeMonitorClass(void)_block_invoke
ICDMediaUserStateCenterServerNotificationsManager.m
NSString *getMPHomeUserMonitorPrivateListeningForCurrentDeviceSettingDidChangeNotification(void)
MPHomeUserMonitorPrivateListeningForCurrentDeviceSettingDidChangeNotification
_MediaContentTasteUpdateResponseTimeIntervalSinceReferenceDate
-init is not supported, use initWithContentTasteUpdateItems:invalidateLocalCache:dsid
com.apple.amp.iTunesCloud.ICUpdateContentTasteOperation.workQueue
If-None-Match
If-Match
application/x-protobuf
v24@?0@"ICURLResponse"8@"NSError"16
B16@?0@"ICCloudContentTasteUpdateItem"8
NonMediaItemStoreAdamIds
longLongValue
store_item_id
subscription_store_item_id
SELECT item_pid, liked_state, store_item_id, subscription_store_item_id, store_saga_id, is_subscription FROM item_store JOIN item_stats USING (item_pid) WHERE 
v32@?0@"ML3DatabaseRow"8@"NSError"16^B24
SELECT album_pid, liked_state, store_playlist_id, item_store.item_pid, item_store.store_saga_id, item_store.is_subscription FROM album JOIN item_store ON (album.representative_item_pid == item_store.ROWID) WHERE item_store.store_playlist_id
v24@?0@"NSArray"8@"NSError"16
SELECT container_pid, liked_state, cloud_global_id FROM container WHERE cloud_global_id
v32@?0@"NSString"8@"NSNumber"16^B24
v24@?0@"NSDictionary"8@"NSError"16
MPMediaLibrary
Class getMPMediaLibraryClass(void)_block_invoke
ICCloudContentTasteUpdateOperation.m
void *MediaPlayerLibrary(void)
SagaUploadPlaylistPlayDataOperation
subclass must implement
 %@ [%@]
session-id
%@=%@
Accept-Encoding
%d.%d
Client-iTunes-Sharing-Version
CloudSetAddToPlaylistBehaviorOperationBehaviorIDKey
CloudSetAddToPlaylistBehaviorOperation - (add to playlist behavior = %@)
Privacy acknowledgement required, but presenting the privacy prompt is not allowed.
v24@?0q8@"NSError"16
Privacy acknowledgement required, but user did not accept latest privacy policy.
Encountered error while performing privacy prompt operation.
No cloud_artwork_token for item saga id = %llu
No cloud_screenshot_token for item saga id = %llu
No cloud_artwork_token for playlist saga id = %llu
SELECT DISTINCT (fetchable_artwork_token), store_saga_id, media_type FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token JOIN item_store ON entity_pid = item_store.item_pid AND entity_type = ? JOIN item USING (item_pid) WHERE artwork_token IS NULL AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token
SELECT DISTINCT (fetchable_artwork_token), store_cloud_id FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token JOIN container ON entity_pid = container_pid AND entity_type = ? WHERE artwork_token IS NULL AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token
v8@?0
com.apple.amp.iTunesCloud.CloudContentTasteUpdateRequestListener.accessQueue
com.apple.amp.iTunesCloud.CloudContentTasteUpdateRequestListener.callbackQueue
com.apple.itunescloud.contenttaste
v32@?0@"NSNumber"8@"ICContentTasteRequestHandler"16^B24
SagaSetAlbumItemPropertyOperationAlbumPersistentIDKey
SagaSetAlbumItemPropertyOperationAlbumItemPropertiesKey
SagaSetAlbumItemPropertyOperation - (album_persistent_id = %lld)
ItemSagaIDKey
PlaylistPersistentIDKey
RequestingBundleKey
SagaAddItemToPlaylistOperation - (saga_id = %llu)
SagaSDKAddItemToPlaylistOperation - (saga_id = %llu)
preferences
v32@?0@"NSNumber"8@"NSNumber"16^B24
B16@?0@"ML3DatabaseConnection"8
Jalisco-Media
SagaRemoveItemOperationArchiveVersionKey
SagaRemoveItemOperationItemSagaIDsKey
SagaRemoveItemOperationItemSagaIDKey
SagaRemoveItemOperation - (saga_id count = %llu)
databases/%u/add-favorite
ICAddToLibraryRequest.m
You can only send one field (adam-id or playlist-global-id
You can not add a playlist-global-id to a container
databases/%u/containers/%u/cloud-add
databases/%u/cloud-add
adam-id cannot be zero.
cannot specify more than one referral
container-id cannot be zero.
saga-id cannot be zero.
playlist-global-id must be a non-zero length string.
MediaPlayer
Favoriting
v16@?0@"DKDAAPWriter"8
%@.%@
config
ICDBackgroundTaskManager - Polling setup - LoadBag
com.apple.itunescloud.ICDBackgroundTaskManager.periodic-poll-activity
v16@?0@"BaseRequestHandler"8
v16@?0@"NSObject<OS_xpc_object>"8
no-name
B24@?0@"_ICDBackgroundTask"8^B16
ICDBackgroundTaskManager.m
More tasks than expected have the same name
task.configuration.userIdentity.accountDSID != nil
void _MSVHasherAppendBytes(MSVHasher * _Nonnull, const void * _Nonnull, size_t)
NSString * _Nonnull _MSVHashGetDigest(MSVHash)
0123456789abcdef
MSVHash _MSVHasherFinalize(MSVHasher * _Nonnull)
com.apple.itunescloudd.deferredPushUpdate.jalisco
%{public}@ - Handling music app removal
%{public}@ - Handling music app install
%{public}@ - Starting to enable cloud library, start initial import=%{BOOL}u, enableCloudLibraryPolicy=%d, isExplicitUserAction=%{BOOL}u, isPendingAuthentication=%{BOOL}u
%{public}@ - We have a pending saga authenticate operation. Will not try to enable cloud library
%{public}@ - Clearing last known locker account
%{public}@ - performing SagaAuthenticationOperation enableICMLReason=%d
%{public}@ - SagaAuthentication complete. shouldRetry=%{BOOL}u error=%{public}@
%{public}@ - SagaAuthentication complete. shouldRetry=%{BOOL}u
%{public}@ - ICML is already enabled
%{public}@ - Not enabling cloud library. Could not get properties of %{public}@, error=%{public}@
%{public}@ - User is not subscriber, performing Jalisco import. shouldStartInitialImport=%{BOOL}u, enableCloudLibraryPolicy=%d, isExplicitUserAction=%{BOOL}u, isPendingAuthentication=%{BOOL}u
%{public}@ - Jalisco import complete. error=%{public}@
%{public}@ - Jalisco import complete.
%{public}@ - enableCloudLibraryWithClientIdentity called with nothing to enable. enableCloudLibraryPolicy=%d, isPendingAuthentication=%{BOOL}u
%{public}@ - Enqueuing enableCloudLibraryOperation: %{public}@ - shouldStartInitialImport=%{BOOL}u, enableCloudLibraryPolicy=%d, isExplicitUserAction=%{BOOL}u, isPendingAuthentication=%{BOOL}u
%{public}@ - Starting to disable cloud library for reason=%d
%{public}@ - account with DSID (%lld) does not have ICML enabled
Automatic download media kind update task completed error=%{public}@
Automatic download media kind update task completed
%{public}@ - Updating Jalisco library for reason=%d
%{public}@ - Updating Jalisco library for reason=%d, Setting jaliscoNeedsUpdateForTokens=YES
%{public}@ - Will not update Jalisco library for reason=%d as the locker bit was not set.
%{public}@ - Will not update Jalisco library for reason=%d _jaliscoRequestHandler=%p
%{public}@ - Finished disablig cloud library for reason=%d
%{public}@ - isUpdatingCloudLibraryWithCompletion sagaUpdateInProgress=%{BOOL}u, sagaInitialImport=%{BOOL}u, jaliscoUpdateInProgress=%{BOOL}u, jaliscoInitialImport=%{BOOL}u, _havePendingSagaUpdate=%{BOOL}u
%{public}@ - Ignoring request for periodic poll because ICML is not enabled
%{public}@ - Not updating saga library as the handler is nil
%{public}@ - Not updating jalisco library as the handler is nil
%{public}@ - Unsupported request to add background operation (%p) for Jalisco library
%{public}@ - updateProgressForLibraryType for libraryType=%{public}@, progress=%f
%{public}@ - updateProgressForLibraryType for libraryType=%{public}@, jaliscoDatabaseVersion=%d, _havePendingSagaUpdate=%{BOOL}u, _didManuallyReloadCloudLibrary=%{BOOL}u, sagaUpdateProgress=%f, progress=%f
%{public}@ - ignoring importItemArtworkForSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring importScreenshotForSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring importContainerArtworkForSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring deprioritizeItemArtworkForSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring deprioritizeScreenshotForSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring deprioritizeContainerArtworkForSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring createPlaylistWithPersistentID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring publishPlaylistWithSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring removeItemsWithSagaIDs as we don't have a valid SagaRequestHandler
%{public}@ - ignoring removePlaylistsWithSagaIDs as we don't have a valid SagaRequestHandler
%{public}@ - ignoring uploadArtworkForPlaylistWithPersistentID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring addGeniusPlaylistWithPersistentID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring addItemWithSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring addItemWithSagaID with bundleID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring addStoreItemWithAdamID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring addStoreItemWithOpaqueID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring addStorePlaylistWithGlobalID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring setPlaylistProperties as we don't have a valid SagaRequestHandler
%{public}@ - ignoring setPlaylistProperties with bundleID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring setCloudAddToPlaylistBehavior as we don't have a valid SagaRequestHandler
%{public}@ - ignoring setItemProperties as we don't have a valid SagaRequestHandler
%{public}@ - ignoring setAlbumProperties as we don't have a valid SagaRequestHandler
%{public}@ - ignoring updateItemPlayDataWithCompletionHandler as we don't have a valid SagaRequestHandler
%{public}@ - ignoring updatePlaylistPlayDataWithCompletionHandler as we don't have a valid SagaRequestHandler
%{public}@ - ignoring updateSubscribedPlaylistsWithSagaIDs as we don't have a valid SagaRequestHandler
%{public}@ - ignoring loadGeniusItemsForSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring loadArtworkInfoForSagaIDs as we don't have a valid SagaRequestHandler
%{public}@ - ignoring loadArtworkInfoForContainerSagaIDs as we don't have a valid SagaRequestHandler
%{public}@ - ignoring loadScreenshotInfoForSagaIDs as we don't have a valid SagaRequestHandler
%{public}@ - last known error reason enabling iCML=%{public}@
%{public}@ - locker bit is not set, not returning last known error enabling iCML. cloudLibraryStateReason=%{public}@
%{public}@ - could not load user identity properties (error=%{public}@), not returning last known error enabling iCML
%{public}@ - ignoring favoriteEntityWithStoreID=%lld, entityType=%{public}@ as we don't have a valid SagaRequestHandler
%{public}@ - ignoring favoritePlaylistWithGlobalID=%{public}@ as we don't have a valid SagaRequestHandler
%{public}@ - ignoring favoriteAlbumWithCloudLibraryID=%{public}@ as we don't have a valid SagaRequestHandler
%{public}@ - ignoring favoriteArtistWithCloudLibraryID=%{public}@ as we don't have a valid SagaRequestHandler
%{public}@ - ignoring favoriteEntityWithSagaID=%lld, entityType=%{public}@ as we don't have a valid SagaRequestHandler
%{public}@ - ignoring unfavoriteEntityWithStoreID=%lld, entityType=%{public}@ as we don't have a valid SagaRequestHandler
%{public}@ - ignoring unfavoriteEntityWithSagaID=%lld, entityType=%{public}@ as we don't have a valid SagaRequestHandler
%{public}@ - ignoring unfavoriteAlbumWithCloudLibraryID=%{public}@ as we don't have a valid SagaRequestHandler
%{public}@ - ignoring unfavoriteArtistWithCloudLibraryID=%{public}@ as we don't have a valid SagaRequestHandler
%{public}@ - ignoring unfavoritePlaylistWithGlobalID=%{public}@ as we don't have a valid SagaRequestHandler
%{public}@ - ignoring importItemArtworkForPurchaseHistoryID as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring importScreenshotForPurchaseHistoryID as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring deprioritizeItemArtworkForPurchaseHistoryID as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring deprioritizeScreenshotForPurchaseHistoryID as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring removeLibraryWithCompletion as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring setItemProperties as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring loadArtworkInfoForPurchaseHistoryIDs as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring loadScreenshotInfoForPurchaseHistoryIDs as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring isMediaKindDisabledForJaliscoLibrary as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring loadBooksForStoreIDs as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring loadMissingArtwork as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring hideItemsWithPurchaseHistoryIDs as we don't have a valid JaliscoRequestHandler
%{public}@ includeMediaKindSong=%{BOOL}u on non standalone wOS platform
%{public}@ could not load user identity properties. error=%{public}@
%{public}@ - user is a subscriber and locker bit is set. includeMediaKindSong=%{BOOL}u
%{public}@ - user is a subscriber and locker bit is NOT set. includeMediaKindSong=%{BOOL}u
%{public}@ - user is a NOT a subscriber. includeMediaKindSong=%{BOOL}u
%{public}@ Error %{public}@ loading subscription status. includeMediaKindSong=%{BOOL}u
%{public}@ starting update operation for %{public}@ library, initialImport=%{BOOL}u
%{public}@ finished update operation for %{public}@ library, response=%{public}@
%{public}@ - Showing system dialog for enable cloud library error code=%d
%{public}@ - scheduling initial cloud library update
%{public}@ - network reachability changed, _musicSubscriptionCheckStatus = %d. Reloading subscription status
%{public}@ - becomeActive
%{public}@ - initializing JaliscoRequestHandler
%{public}@ - we have a valid JaliscoRequestHandler.
%{public}@ - Start observing subscription status changed notification
%{public}@ - skipping additional subscription status check isPendingAuthentication=%{BOOL}u, isHandlerActive=%{BOOL}u, musicSubscriptionCheckStatus=%d, deauthOperationCount=%d 
%{public}@ - becomeInactiveWithDeauthentication, deauthentication=%{BOOL}u, active=%{BOOL}u
%{public}@ - Finished removing content taste items with error=%{public}@
%{public}@ - Starting to deauthenticate Jalisco library
%{public}@ - Deauthenticating Jalisco library finished with error=%{public}@
%{public}@ - Starting to deauthenticate Saga library
%{public}@ - Deauthenticating Saga library finished with error=%{public}@
%{public}@ - finished deauthenticating
Updating Jalisco Library with reason=%d
Finished updating Jalisco Library with reason=%d, error=%{public}@
Updating Saga Library with reason=%d
Finished updating Saga Library with reason=%d, error=%{public}@
%{public}@ - Updating last known active locker account from %lld to %lld
%{public}@ - Store account ID was removed, deauthenticating if allowed.
%{public}@ - becomeInactiveWithDeauthentication failed [cancelling operations failed] error=%{public}@
%{public}@ - Removing allArtistImagesMapCacheFile due to account change
%{public}@ - Removing purchase history due to account change
%{public}@ - Ignoring native music app check on platforms that support multiple libraries
%{public}@ - Ignoring native music app check on traditional wOS
%{public}@ - Handling subscription status change notification
%{public}@ - Subscription change notification received for another account [no action to take] - handlerDSID=%@ - notificationDSID=%@
%{public}@ - Starting operation to refresh subscription status.
%{public}@ - Not refreshing subscription status. isActiveLocker=%{BOOL}u, loading user identity properties finished with error=%{public}@
%{public}@ - Not refreshing subscription status. isActiveAccount=%{BOOL}u, isActiveLocker=%{BOOL}u, loading user identity properties finished with error=%{public}@
%{public}@ - We already have a pending subscription status check operation.
%{public}@ - Not reloading subscription status as the handler is not active.
%{public}@ - Will retry getting subscription status in %f seconds for reason %d, _subscriptionStatusFailureCount=%ld
%{public}@ maxRetryDelaySeconds=%lu
%{public}@ - Scheduling retry to update cloud libary on %{public}@ (failureCount=%lu, retryDelaySeconds=%lu)
%{public}@ - retrying to enable cloud library for reason=%d
%{public}@ - NOT retrying to update cloud library for reason=%d as the handler is not active
%{public}@ - shouldTreatSubscriptionStatusAsExpired is set. Will force subscription status to be expired
%{public}@ - reloading subscription status. Current status=%d, reason=%d
%{public}@ - finished reloading subscription status for reason=%d, AM=%{BOOL}u, Match=%{BOOL}u, error=%{public}@, subscriptionStatusFailureCount=%d
%{public}@ - shouldTreatSubscriptionStatusCheckAsIncomplete is set. Will treat subscription status check as incomplete
%{public}@ - _musicSubscriptionCheckStatus=%d, subscribedToAppleMusic=%{BOOL}u, subscribedToiTunesMatch=%{BOOL}u, setting userRequestedSubscriptionHidden to 0
%{public}@ - subscription status has changed (old=%d, new=%d)
%{public}@ - subscription status has not changed (status=%d)
%{public}@ - ignoring subscription status change as the handler is not active
%{public}@ - We already have a pending enable ICML operation.
%{public}@ - Will retry enabling iCML in %f seconds.
%{public}@ - Starting retry operation to enable ICML.
%{public}@ - Could not get properties for current user identity - error=%{public}@., _autoEnableFailureCount=%ld
%{public}@ - Finished loading user identity properties with error=%{public}@. account is active=%{BOOL}u. Not loading iCML
%{public}@ - NOT retrying to enable cloud library for reason=%d as the handler is not active
%{public}@ - Checking if ICML can be enabled. includeLocalContentCheck=%{BOOL}u
%{public}@ - DSID (%lld) is already the active locker account
%{public}@ - Cannot enable ICML as the DSID (%lld) is invalid
%{public}@ - Cannot enable ICML as the user manually disabled it
%{public}@ - Error (%{public}@ determining if user manually disabled iCML. Will schedule a retry.
%{public}@ - Cannot enable ICML as there are local destructive changes
%{public}@ - Can conditionally enable ICML as DSID (%lld) is a preexisting store acount
%{public}@ - currentSagaDatabaseVersion=%d, wasRestoredFromCloudBackup=%{BOOL}u
%{public}@ - Active locker account is different from previous locker account - shouldMergeWithCloudLibrary=%d
%{public}@ - Active locker account is the same as previous locker account - shouldMergeWithCloudLibrary=%d
%{public}@ - Found mergePreference on the active locker account - shouldMerge=%d.
%{public}@ - Updating merge preference from %{BOOL}u to %{BOOL}u
%{public}@ - Clearing TroveID and CUID, setting merge preference to %{BOOL}u
%{public}@ - Will not adjust merge preference.
%{public}@ - No changes to process
%{public}@ - previousAccountID=%lld, activeAccountID=%lld, lastKnownActiveLockerAccountID=%lld, currentSagaDatabaseVersion=%d, accountIDWasAdded=%{BOOL}u, accountIDWasChanged=%{BOOL}u, handleReason=%d
%{public}@ - Locker bit set, but the account is not active. Enqueuing a SagaDeauth
%{public}@ - Device is already registered with CUID and TroveID
%{public}@ - Initializing SagaRequestHander ....
%{public}@ - We have a valid SagaRequestHander (%p)....
%{public}@ - Enqueuing SagaDeauth as device registration failed.
%{public}@ - checking to see if iCML can be enabled for reason=%d
%{public}@ - No pending changes to handle. Ignoring reason=%d
%{public}@ - Not enabling ICML (status = %d)
%{public}@ - Will schedule a retry to enable ICML (status = %d)
%{public}@ -  enabling ICML (status = %d)
%{public}@ - Not enabling ICML for reason = %d, status = %d
%{public}@ - Trying to enable cloud library for reason=%d, supportsAutoEnablingLibrary=%{BOOL}u, subscriptionStatus=%d
%{public}@ - Native music app is NOT installed. Not enabling Cloud Music Library
%{public}@ - isActiveLockerAccount=%{BOOL}u, subscriptionStatus=%d. Disabling CloudLibrary as the user is no longer a subscriber
%{public}@ - New account [enabling iCML if possible]
%{public}@ - Preparing to enable Cloud Music Library for reason=%d
%{public}@ - Skipping initial import on non standalone watch for reason=%d
%{public}@ - Not enabling iCML on unsupported platform %{public}@
%{public}@ - Platform %{public}@ doesn't support automatically enabling cloud library
%{public}@ - Unhandled subscription status=%d when trying to enable cloud library
%{public}@ - Error %{public}@ loading user identity properties.
%{public}@ - Enqueueing CloudAuthenticateOperation shouldMerge:%d, allowNoisyPrompt:%{BOOL}u
%{public}@ - Authentication finished for %{public}@ with error=%{public}@, status=%d, authFailureCode=%{public}@
%{public}@ - CloudAuthenticateOperation is nil. Resetting _isPendingAuthentication=%{BOOL}u
%{public}@ - We already have a pending authentication operation. Will not authenticate again.
%{public}@ - We already have a pending deauthentication operation (isHandlerDeactivating=%{BOOL}u, _deauthOperationCount=%d). Will not deauthenticate again.
%{public}@ - Running DisableCloudLibraryOperation deletingDatabase:%{BOOL}u, disableActiveLockerAccount:%{BOOL}u, removeSourcePurchaseHistory=%{BOOL}u, isHandlerDeactivating=%{BOOL}u, _deauthOperationCount=%d
%{public}@ - Cancelling all Jalisco operations.
%{public}@ - Cancelling all Saga operations.
%{public}@ - No valid SagaRequestHandler - not cancelling pending SagaLibrary operations.
%{public}@ - locker bit is set on the account, creating SagaRequestHandler
%{public}@ - locker bit is not set on the account and we have a valid SagaRequestHandler. Removing it now ....
%{public}@ - ignoring store did change notification
%{public}@ - Reload media purchase history
%{public}@ - not reloading media purchase history. jaliscoDatabaseVersion=%d, _jaliscoRequestHandler=%p
%{public}@ - not reloading media purchase history by adding kind=%d, _jaliscoRequestHandler=%p
%{public}@ - performing initial saga update, sagaDatabaseVersion=%d, sagaNeedsFullUpdateAfterNextUpdate=%{BOOL}u
%{public}@ - not performing initial saga import. sagaDatabaseVersion=%d, _sagaRequestHandler=%p
%{public}@ - Posting JALISCO_UPDATE_IN_PROGRESS_CHANGED for libraryType=%{public}@
%{public}@ - Posting SAGA_UPDATE_IN_PROGRESS_CHANGED for libraryType=%{public}@
%{public}@ - Finished reloading media purchase history by adding kind=%d for reason=%d with error=%{public}@, _didManuallyReloadCloudLibrary=%{BOOL}u
%{public}@ - Finished reloading media purchase history for reason=%d with error=%{public}@
%{public}@ - Finished reloading saga library for reason=%d with error=%{public}@
%{public}@ - Will schedule a retry for status=%d, failureCode=%d
Sending set item properties request <%{public}@: %p method=%{public}@ action=%{public}@> for purchase history id: %llu properties: %{public}@
<%{public}@: %p method=%{public}@ action=%{public}@> received response: <%{public}@: %p code=%ld, length=%{bytes}lu>
JaliscoSetItemPropertyOperation failed with error: %{public}@
Not running JaliscoDeauthenticateOperation on wOS platform
Removing purchase history tracks
Clearing purchase history database revision (%ld)
Failed to remove playback intents. err=%{public}@
No purchase history database revision, skipping deauthenticate and clean up.
Cancelling any outstanding jalisco track downloads.
Resetting parent persistent-id to 0 (default root level)
Translated parent persistent-id %lld to cloud-id %lu
Failed to find parent cloud-id for persistent-id %lld
Updating playlist with persistent-id %lld, setting cloud-id to %llu
Triggering playlist artwork upload in case this playlist has user artwork.
Requesting library update because the response contained update-required flag
Skipping library update because the response did not contain update-required flag
Playlist with pid = %lld is not in the database, skipping save to cloud library.
Loading Chapter Artwork with power assertion: %{public}@
Fetching chapter artwork (purchase history ID = %lld, chapter time = %lld): %{public}@
Loading Chapter Artwork Complete, releasing power assertion: %{public}@
ICDDefaults %p - knownActiveAccountDSID: %@
ICDDefaults %p - setKnownAccountDSIDs: %@
ICDDefaults %p - setKnownActiveAccountDSID: %@
ICDDefaults %p - pendingBackgroundTasksData: %@
ICDDefaults %p - setPendingBackgroundTasksData: %@
BaseRequestHandler %p - Deleting handler %p - class=%{public}@ dsid=%{public}@
Migrating to version %ld, from userVersion=%ld, sagaDatabaseRevision=%ld, jaliscoDatabaseRevision=%ld
Current user version: %ld
Setting current user version: %ld
Skipping migration and setting user version to latest: %ld
-[CloudServer _migrateFromUserVersion0to348294]
-[CloudServer _migrateFromUserVersion348294to348295]
-[CloudServer _migrateFromUserVersion348295to366559]
-[CloudServer _migrateFromUserVersion366559to370000]
-[CloudServer _migrateFromUserVersion370000to370100]
Deleting ML database
Removing play data plists
-[CloudServer _migrateFromUserVersion370100to370200]
resetting jalisco and saga revisions to zero
RemoveSource error: %{public}@
updating track with location '%{public}@' to store_item_id=%lld
failed to update track with location '%{public}@'
-[CloudServer _migrateFromUserVersion370200to370300]
-[CloudServer _migrateFromUserVersion370300to370400]
-[CloudServer _migrateFromUserVersion370400to380000]
-[CloudServer _migrateFromUserVersion380000to380010]
-[CloudServer _migrateFromUserVersion380010to380020]
-[CloudServer _migrateFromUserVersion380020to380030]
-[CloudServer _migrateFromUserVersion380030to380040]
Cloud library is enabled, repairing subscribed containers is_src_remote (if any)
Cloud library is NOT enabled, deleting subscribed containers (if any)
-[CloudServer _migrateFromUserVersion380040to380050]
-[CloudServer _migrateFromUserVersion380050to380060]
-[CloudServer _migrateFromUserVersion380060to380070]
-[CloudServer _migrateFromUserVersion380070to380080]
-[CloudServer _migrateFromUserVersion380080to380090]
Detected %lld invalid artist artwork tokens, clearing last artist image import date...
-[CloudServer _migrateFromUserVersion380090to380100]
-[CloudServer _migrateFromUserVersion3800100to380110]
-[CloudServer _migrateFromUserVersion3800110to380115]
Failed to purge artwork_token for movies and tv shows. err=%{public}@
-[CloudServer _migrateFromUserVersion3800110to380120]
-[CloudServer _migrateFromUserVersion3800120to380130]
-[CloudServer _migrateFromUserVersion380130to380140]
-[CloudServer _migrateFromUserVersion380140to380150]
resetting jalisco revisions to zero to force a reset sync
-[CloudServer _migrateFromUserVersion380150to380160]
resetting jalisco revision to zero to force a reset sync
-[CloudServer _migrateFromUserVersion380160to380170]
-[CloudServer _migrateFromUserVersion380170to390000]
Found Automatic Downloads Key in user defaults
Automatic Downloads Key does not exist in user defaults
-[CloudServer _migrateFromUserVersion390000to390010]
Automatic Downloads is enabled on the active account. Setting appropriate user defaults
Could not get active store account, error=%{public}@
-[CloudServer _migrateFromUserVersion390010to390020]
-[CloudServer _migrateFromUserVersion390020to390030]
Resetting sagaOnDiskDatabaseRevision to 1 to update missing cloud_universal_library_id
-[CloudServer _migrateFromUserVersion390030to390040]
Resetting sagaOnDiskDatabaseRevision to 1 to update missing category_type_mask and grouping_sort_key
-[CloudServer _migrateFromUserVersion390040to390050]
Resetting sagaOnDiskDatabaseRevision to 1 to update missing hls fields
-[CloudServer _migrateFromUserVersion390050to390060]
-[CloudServer _migrateFromUserVersion390060to400000]
Resetting sagaOnDiskDatabaseRevision to 1 to update date_modified for subscribed playlists
Will reset date_modified to 0 for playlistPersistenIDs=%{public}@
Migrating to version 400010
Found persisted key '%{public}@' with renewal Date '%{public}@' for song '%{public}@
Purging %lu keys for song '%{public}@': %{public}@
Failed to remove key '%{public}@'. err=%{public}@
Migrating to version 400020
Migrating to version 400025
-[CloudServer _migrateFromUserVersion400025to400030]
Migrating to version 500000
Migrating to version 504000
Error (%{public}@) unarchiving enableICMLConfigData
Found autoEnableICMLConfig=%{public}@
No configuration to determine if iCML should be enabled/disabled
%{public}@ Analyzing %lu user library artists.
%{public}@ MLModel inputs: unique days with added content: %{public}@
%{public}@ MLModel inputs: number of unique albums: %{public}@
%{public}@ MLModel inputs: cumulative song play count: %{public}@
%{public}@ MLModel inputs: number of days since last play: %{public}@
%{public}@ MLModel inputs: average plays per item added: %{public}@
%{public}@ Failed to retrieve library response for artist analysis. err=%{public}@
No DAAP code found for container property: %{public}@
Skipping update for playlist cloud ID: %lu -- time since update = %.fs (min refresh = %llus)
Found %lu subscribed playlists to update for periodic poll.
SagaSubscribedPlaylistUpdater import succeeded: %d
SagaSubscribedPlaylistUpdater import failed: %{public}@
Received non-200 HTTP code: %lu, skipping import.
No playlists to update (based on min refresh interval).
Received distributed notification: %{public}@
Received darwin notification %{public}@
Received unsupported darwin notification %{public}@
Received telephony center notification %{public}@
Ignoring telephony center notification %{public}@ because phone number access is restricted.
First unlock has occured
Subscription status has changed - updating client status
Active user identity has changed.
User identity store has changed.
handleLibraryAuthServiceTokenDidChangeNotification - posting dynamite state change
Cloud authentication status has changed - updating client status
Received music settings changed notification
%{public}@ - Starting authentication - Device registered with CUID and TroveID=%{BOOL}u, canPerformLibraryUpload=%{BOOL}u, requiresDeviceRegistration=%{BOOL}u, enableReason=%d
%{public}@ - Not authenticating ... unable to get properties for specified account
%{public}@ - Not authenticating ... account is not active. DSID=%@
%{public}@ - ICML was manually disabled by the user. Not retrying CloudAuthenticateOperation for reason=%d
%{public}@ - Setting account %{public}@ as the active locker account, dsid=%{public}@, _mergeToCloudLibraryPreference=%d, enableReason=%d finished with error=%{public}@
%{public}@ - shouldTreatSagaAddComputerCallAsFailed is set. Will force SagaAddComputer call to fail.
%{public}@ - Completed authentication completed with status=%d for reason=%d
%{public}@: Registered new cloud service status observer with token: %{public}@.
%{public}@: Tried to remove unknown cloud service status observer with token: %{public}@. Ignoring.
%{public}@: Removed cloud service status observer with token: %{public}@.
%{public}@: %{public}@ originatingClientConnection = %{public}@.
%{public}@: Accepted new client connection: %{public}@.
%{public}@: Client has %{public}@ entitlement. No need to enforce privacy acknowledgement for cloud service capabilities request.
%{public}@: Client connection was interrupted: %{public}@.
%{public}@: Client connection was invalidated: %{public}@.
%{public}@: Found capabilities request operation for severed client connection %{public}@: %{public}@. Cancelling that operation.
%{public}@: Found observation token for severed client connection %{public}@: %{public}@. Forcibly ending observing cloud service status for this observation token.
%{public}@: Handling %{public}@.
%{public}@: Bag was updated: %{public}@.
%{public}@: Subscription status was updated: %{public}@.
%{public}@: Beginning to observe cloud service status.
%{public}@: Stopped observing cloud service status.
%{public}@: Notifying observers of active account changed.
%{public}@: Active account did change. About to notify %llu observer%s.
%{public}@: Notifying client with observation token %{public}@ of updated active account.
%{public}@: Failed to obtain remote proxy to notify of updated active account; error = %{public}@.
%{public}@: Refreshing storefront country code.
%{public}@: No bag was present on the bag monitor.
%{public}@: Requesting bag directly.
%{public}@: Failed to fetch bag with error: %{public}@.
%{public}@: Refreshing storefront identifier.
%{public}@: Encountered error getting properties for active account: %{public}@.
%{public}@: %{public}@
%{public}@: Could not find storefront country code from bag %{public}@; error: %{public}@.
%{public}@: Storefront country code did not change. Skipping invoking observation handlers.
%{public}@: Storefront country code did change: "%{public}@". About to notify %llu observer%s.
%{public}@: Skipping notification of updated storefront country code for client with observation token %{public}@: client connection %{public}@ is not allowed to access restricted information.
%{public}@: Notifying client with observation token %{public}@ of updated storefront country code: "%{public}@".
%{public}@: Failed to obtain remote proxy to notify of updated storefront country code; error = %{public}@.
%{public}@: Could not find valid cloud service capabilities; error: %{public}@.
%{public}@: Cloud service capabilities did not change. Skipping invoking observation handlers.
%{public}@: Cloud service capabilities did change: %{public}@. About to notify %llu observer%s.
%{public}@: Skipping notification of updated cloud service capabilities for client with observation token %{public}@: client connection %{public}@ is not allowed to access capabilities.
%{public}@: Notifying client with observation token %{public}@ of updated cloud service capabilities: %{public}@.
%{public}@: Failed to obtain remote proxy to notify of updated cloud service capabilities; error = %{public}@.
%{public}@: Could not find valid storefront identifier; error: %{public}@.
%{public}@: Storefront identifier did not change. Skipping invoking observation handlers.
%{public}@: Storefront identifier did change: "%{public}@". About to notify %llu observer%s.
%{public}@: Skipping notification of updated storefront identifier for client with observation token %{public}@: client connection %{public}@ is not allowed to access restricted information.
%{public}@: Notifying client with observation token %{public}@ of updated storefront identifier: "%{public}@".
%{public}@: Failed to obtain remote proxy to notify of updated storefront identifier; error = %{public}@.
%{public}@: Failed to retrieve bundle identifier of the requesting application from the audit_token_t; instead, using bundle identifier from %{public}@, i.e. %{public}@.
%{public}@: Failed to retrieve bundle extension record with error: %{public}@.
%{public}@: Requesting application extension %{public}@ (%{public}@) has a containing bundle which is not an application: %{public}@ (%{public}@).
%{public}@: Client is an application extension: %{public}@ (%{public}@). Using bundle identifier "%{public}@" from containing application: %{public}@ (%{public}@).
Sending favorite entity request <%{public}@: %p method=%{public}@ action=%{public}@> for entityType=%{public}@, item storeID:%lld, sagaID:%lld, globalPlaylistID:%{public}@, albumLibraryID=%{public}@, artistLibraryID=%{public}@ timestamp:%{public}@
%{public}@ %{public}@ failed with error: %{public}@
%{public}@ favorite entity permamently failed -- item limit exceeded
%{public}@ Requesting library update because the response contained update-required flag
%{public}@ Skipping library update because the response did not contain update-required flag
%{public}@ Unable to create favorite entity request, skipping...
%{public}@ Operation permanently failed, attempting to remove pending library content...
%{public}@ Processing response for entity type=%{public}@, storeID:%lld, sagaID:%lld, globalPlaylistID:%{public}@, cloudAlbumID=%{public}@, cloudArtistID=%{public}@ with %d added items
%{public}@ Ignoring successful post processing response for favoriting track with sagaID:%lld
%{public}@ Set cloud_library_id=%{public}@ for album with persistentID=%lld with error=%{public}@
%{public}@ Ignoring successful post processing response for favoriting album with sagaID:%{public}@
%{public}@ Ignoring successful post processing response for favoriting playlist with globalPlaylistID:%{public}@, sagaID=%lld
%{public}@ Set cloud_library_id=%{public}@ for item_artist with persistentID=%lld with error=%{public}@
%{public}@ Set cloud_library_id=%{public}@ for album_artist with persistentID=%lld with error=%{public}@
%{public}@ Ignoring successful post processing response for favoriting artist with sagaID:%{public}@
%{public}@ Processing failed response for entity type=%{public}@, storeID:%lld, sagaID:%lld, globalPlaylistID:%{public}@, cloudAlbumID=%{public}@, cloudArtistID=%{public}@
%{public}@ set favorite_state=1, date_favorited=0 for track with persistentID=%lld, storeID:%lld, sagaID:%lld
%{public}@ Could not find track with sagaID:%lld in library
%{public}@ Could not find track with adamID:%lld in library
%{public}@ set favorite_state=1, date_favorited=0 for container with cloudID=%lld, persistentID=%lld with error=%{public}@
%{public}@ Could not find playlist with sagaID:%lld in library
%{public}@ Deleted pending playlist with global id: %{public}@
%{public}@ Failed to delete pending playlist with global id: %{public}@
%{public}@ Could not find a pending playlist to delete with global id: %{public}@
%{public}@ Invalid identifier to favorite entityType=%{public}@, sagaID=%lld, adamID=%lld, gobalPlaylistID=%{public}@
%{public}@ set favorite_state=1, date_favorited=0 for album with persistentID=%lld with error=%{public}@
%{public}@ Could not find album with sagaID=%lld, adamID=%lld
%{public}@ set favorite_state=1, date_favorited=0 for artist with store=%lld with error=%{public}@
%{public}@ set favorite_state=1, date_favorited=0 for album_artist with store=%lld with error=%{public}@
%{public}@ set favorite_state=1, date_favorited=0 for item_artist with cloud_library_id=%{public}@ with error=%{public}@
%{public}@ set favorite_state=1, date_favorited=0 for album_artist with cloud_library_id=%{public}@ with error=%{public}@
%{public}@ set favorite_state=1, date_favorited=0 for track with persistentID=%lld, storeID:%lld, sagaID:%lld finished with status=%{BOOL}u error=%{public}@
%{public}@ Updated in_my_library for track with persistent ID %lld
%{public}@ Failed to update in_my_library for track with persistent ID %lld with error: %{public}@
ICDNetworkAvailabilityService %p - XPC connection from %{public}@[%d]
%{public}@ Received request for user states from client connection %{public}@. forceRefresh=%{BOOL}u
%{public}@ Returning cached user states to client connection %{public}@: %{public}@
%{public}@ Failed to get user states. err=%{public}@
%{public}@ Returning updated user states to client connection %{public}@: %{public}@
%{public}@ Starting server:
%{public}@ Stopping server:
%{public}@ Failed to fetch accounts forcing refresh after user updated notification. err=%{public}@
%{public}@ Updating client connection %{public}@ with user states: %{public}@
%{public}@ _buildUserStateFromUserIdentity: %{public}@
%{public}@ Couldn't fetch subscription status due to privacy restriction - fetching lightweight version instead
%{public}@ Failed to perform lightweight subscription status request. err=%{public}@
%{public}@ Failed to perform subscription status request. err=%{public}@
%{public}@ _fetchAccountsWithForceRefresh: %{BOOL}u
%{public}@ No user identities are found.
%{public}@ _getTokenStatusesForDSIDs:%{public}@, forceRefresh: %{BOOL}u
%{public}@ Failed to fetch token status. err=%{public}@
%{public}@ Fetched token status dictionary: %{public}@
%{public}@ Failed to fetch user state for user %{public}@, refresh triggered by expired token. err=%{public}@
%{public}@ Failed to fetch user state identities, err=%{public}@
%{public}@ Sanitizing user state for client connection %{public}@. hasSiriDataEntitlement=%{BOOL}u
%{public}@: connection invalidated: pid=%u
%{public}@: connection interrupted: pid=%u
%{public}@: Refused new client connection: %{public}@. Entitlements error.
Sending items request <%{public}@: %p method=%{public}@ action=%{public}@> on connection: <%{public}@ %p>
Fetching tracks failed with error: %{public}@
Received playlist globalID: %{public}@ shareURL: %{public}@
SagaPublishPlaylistOperation failed with error: %{public}@
Playlist with cloud id = %llu is not in the database, skipping publish request.
User notification did change settings
DownPinning collection classes %{public}@ and configuration %{public}@
DownPinning %{public}@
RePinning collection classes %{public}@ and configuration %{public}@
RePinning %{public}@
Clearing status for %{public}@
Not performing artwork info operation because power is required
Not performing artwork info operation because of elevated thermal levels
%{public}@ Skipping update because privacy acknowledgement is required
[%{public}@] Loading artwork info for %lu cloud IDs
[%{public}@] flushed %lu play events with result %d isFinalResult: %d
[%{public}@] Unexpected empty store account IDs, finishing.
Found no play activity events for account id: %@ with error: %@
[%{public}@] Adding PAF event %{public}@.
[%{public}@] error (%{public}@ serializing request data (%{public}@).
[%{public}@] error compressing request data
[%{public}@] Flush %d PAF events finished with HTTP code %ld
[%{public}@] MALFORMED PAF EVENTS 
[%{public}@] MALFORMED PAF EVENTS=%{public}@, requestData=%{public}@
[%{public}@] Uploading malformed PAF events
[%{public}@] response is NOT of kind NSHTTPURLResponse
[%{public}@] operation finished with error %{public}@, HTTTP statusCode %ld, parsedResponseBody %{public}@
Failed to remove playActivtyEvents: %@ from table with error: %@
[%{public}@] Failed to resolve a URL request for override headers with error: %{public}@
[%{public}@] Post URL missing from bag
[%{public}@] Failed to load URL bag with error: %{public}@
Determined %lu operations with artworkType=%{public}@ need to resolve artwork URLs before executing.
Sending bulk artwork info request for %lu %{public}@ IDs.
Received %lu artwork info dictionaries for %{public}@ IDs.
Failed to resolve artwork URL for %{public}@ ID: %llu
No store account for source_type %ld, canceling %lu requests
Playlist with pid = %lld is not in the database, skipping add to cloud library.
Starting server...
Stopping server...
Stopped server in %f seconds.
Setting options for apple tv.
Setting options for audio accessory.
Setting options for watch.
Setting options for watch. isMediaSyncingSupported=%{BOOL}u, prohibitLibraryUpload=%{BOOL}u, prohibitArtworkPrefetch =%{BOOL}u, supportsAutomaticEnablingiCloudMusicLibrary=%{BOOL}u
Setting options for phone/ipad/ipod.
Could not get ICML state reason, error=%{public}@
Not allowing automatic enabling of iCML notEnabledInBackup=%{BOOL}u, unsupportedDisposition=%{BOOL}u
isEnablingICMLDestructive=%{BOOL}u, cloudLibraryStateReason=%{public}@, supportsAutomaticEnablingiCloudMusicLibrary=%d
Allowing automatic enabling of iCML, isEnablingICMLDestructive=%{BOOL}u
Refreshing enhanced-audio shared keys
Fetching enhanced-audio offline keys
processing pending key invalidations
ICDServer %p - Attempt to retrieve handler for unsupported configuration [returning nil] - Configuration dsid=%@
ICDServer %p - Unable to get an anonymous listener for %{public}@[%ld] - This usually indicates an attempt to access itunescloudd without the proper entitlements.
CloudService %p Handling notification request that device setup has finished
ICDServer %p - No XPC listener [unknown service]
ICDServer %p - Looking up XPC Listener [%{public}@]
ICDServer %p - Retrieved XPC Listener [%{public}@]
ICDServer %p - Refusing XPC connection %{public}@ from %{public}@[%ld] for service %{public}@[%ld]: not ready.
ICDServer %p - Setting XPC connection %{public}@ from %{public}@[%ld] for service %{public}@[%ld].
ICDServer %p - Refusing XPC connection %{public}@ from %{public}@[%ld] for service %{public}@[%ld].
ICDServer %p - Ignoring notification [Import finished - Not ready]
ICDServer %p - Processing notification [Import finished]
Received library import did finish notification, triggering artist hero update.
ICDServer %p - Ignoring notification [Cellular restriction - Not ready]
ICDServer %p - Processing notification [Cellular restriction]
[CellularDataEnabled] An active account exists, updating Purchase History...
[CellularDataEnabled] An active locker account exists, updating iCloud Music Library...
ICDServer %p - Ignoring notification [Cloud authentication - Not ready]
ICDServer %p - Processing notification [Cloud authentication]
ICDServer %p - Processing notification [Active user identity changed]
ICDServer %p - Processing notification [User identity store changed]
ICDServer %p - Ignoring notification [Allows explicit content - Not ready]
ICDServer %p - Processing notification [Allows explicit content]
Failed to remove explicit playback intents. err=%{public}@
ICDServer %p - Ignoring notification [Allows music videos - Not ready]
ICDServer %p - Processing notification [Allows music videos]
ICDServer %p - Ignoring notification [Subscription status - Not ready]
ICDServer %p - Processing notification [Subscription status]
ICDServer %p - Ignoring notification [Auth service token - Not ready]
ICDServer %p - Processing notification [Auth service token]
ICDServer %p - Ignoring notification [Family deletion event - Not ready]
ICDServer %p - Processing notification [Family deletion event]
ICDServer %p - Ignoring notification [Application install/removal - Not ready]
ICDServer %p - Processing notification [Application install/removal]
ICDServer %p - Ignoring notification [First unlock - Not ready]
ICDServer %p - Processing notification [First unlock]
ICDServer %p - Ignoring notification [Phone number changed - Not ready]
ICDServer %p - Processing notification [Phone number changed]
ICDServer %p - Ignoring notification [Music settings changed - Not ready]
ICDServer %p - Processing notification [Music settings changed]
ICDServer %p - Ignoring notification [Flush Play Activity events request - Not ready]
ICDServer %p - Processing notification [Flush Play Activity events request]
Private listening changed, notifying assistant.
Setting up sigterm handler
Handling SIGTERM event
ICDServer %p - policyType=%d
ICDServer %p - CloudPushNotificationController!
ICDServer %p - _startAncillaryServices begin
ICDServer %p - _startAncillaryServices... 2
ICDServer %p - _startAncillaryServices... 3
ICDServer %p - _startAncillaryServices... 4
ICDServer %p - _startAncillaryServices... 5
ICDServer %p - _startAncillaryServices... 6
ICDServer %p - _startAncillaryServices... 7
ICDServer %p - _startAncillaryServices... 8
ICDServer %p - _startAncillaryServices... 9
ICDServer %p - _startAncillaryServices... 10
ICDServer %p - _startAncillaryServices... 11
ICDServer %p - _startAncillaryServices finished
ICDServer %p - Can complete startup sequence [%{BOOL}u] - deviceUnlocked=%{public}u - deviceSetupComplete=%{public}u
ICDServer %p - _completeStartupSequenceIfNeeded - Nothing to do [blocked]
ICDServer %p - _completeStartupSequenceIfNeeded - Nothing to do [startup sequence completed]
ICDServer %p - Completing server setup ....
ICDServer %p - Server Setup - 2. Services initialized...
ICDServer %p - Server Setup - 3. MediaLibrary filtering setup completed...
ICDServer %p - Server Setup - 4. Services started...
ICDServer %p - Server Setup - 5. Migration completed...
ICDServer %p - Server Setup - 6. Handlers setup...
ICDServer %p - Server Setup - 7. Posting notification that the service is ready
ICDServer %p - Server Setup - 8. Explicit content settings updated...
ICDServer %p - Server Setup - 9. Posting notification that the service is ready
ICDServer %p - Server setup completed
ICDServer %p - _migrateToLatestUserVersion - Migrating library [dsid=%@]
ICDServer %p - _setupMPMediaLibraryFilteringForConfigurations - setting filtering type for default media library]
ICDServer %p - _setupMPMediaLibraryFilteringForConfigurations - setting filtering type for configuration=%{public}@]
ICDServer %p - _updateServerAllowsExplicitContentSettingAutomatically - No action [No active configuration]
ICDServer %p - _updateAllowsExplicitContentSettingAutomatically - userMonitor=nil
ICDServer %p - _updateAllowsExplicitContentSettingAutomatically: userMonitor=%p for dsid=%{private}@ allowExplicit=%{BOOL}u
updating explicit content. dsid=%{private}@, lastWrittenValue=%{BOOL}u, setting allowsExplicitContent=%{BOOL}u
updating explicit content. dsid=%{private}@, lastUploadedValue=%{BOOL}u, setting allowsExplicitContent=%{BOOL}u, automatic=%{BOOL}u
Could not update parental settings to %d - error %{public}@.
parental control settings have not changed - allowExplicitContent %d
User Identity %{public}@ has subscription status %{public}@.
ICDServer %p - _ensureSubscriptionInformationIsUpToDateForConfiguration - No action [No active configuration]
ICDServer %p - _ensureMusicSubscriptionKeysAreAvailableForConfiguration - No action [No active configuration]
Ensuring that we have off-line music subscription keys if the user has a slot
No account properties - skipping subscription key refresh. err=%{public}@
Failed to get current subscription key status - skipping key refresh. err=%{public}@
Offline subscription keys already present for DSID %llu - skipping key refresh
Failed to obtain subscription status - skipping key refresh. err=%{public}@
Subscription not enabled - skipping key refresh
Subscription not enabled - skipping key refresh. status=%{public}@
Subscription refresh complete. status=%{public}@, err=%{public}@
Subscription refresh complete. status=%{public}@
ICDServer %p - Ignoring notification [Account change - Not ready]
ICDServer %p - Processing notification [Account change]
Handling app install changed notification - apps=%{public}@, registration=%{public}@
%{public}@ [Music App Removal] Clearing music preferences
%{public}@ [Music App Removal] %{public}@; Removing cloud music library
%{public}@ [Music App Removal] %{public}@; Removing subscription music
%{public}@ [Music App Removal] %{public}@; Removing other music and music video tracks
%{public}@ [Music App Removal] %{public}@; Found %lu additional tracks to remove from library
%{public}@ [Music App Removal] %{public}@; Failed to allocate pid array - skipping
%{public}@ [Music App Removal] %{public}@; Failed to remove additional tracks
%{public}@ [Music App Removal] %{public}@; Removing empty collections
%{public}@ - [Music App Removal] Failed to remove empty collections
%{public}@ [Music App Removal] %{public}@; Cleaning up artwork
%{public}@ [Music App Removal] %{public}@; Artwork cleanup failed
%{public}@ [Music App Removal] %{public}@; Finished removing all music data
Handling updated bag notification
Checking if url resolution file exists at path '%{public}@'
url resolution file is missing - creating now
Failed to create url resolution file because we couldn't fetch the bag. err=%{public}@
Updating resolution cache file
Failed to update URL resolution cache file. err=%{public}@
Successfully updated URL resolution cache file
ICDServer %p - Starting operation to reload cloud library for secondary accounts]
ICDServer %p - currentPolicy=%d and is not in a supported configuration. Will not attempt to reload cloud library for secondary users]
<Key Refresh> - Setting timer to perform periodic subscription tasks for %llds (value from bag: %llds; bag's server correlation key: %{public}@; server environment: %{public}@).
<Key Refresh> - Performing periodic refresh of subscription status
<Key Refresh> - Skipping periodic subscription refresh because privacy acknowledgement is required
<Key Refresh> - Skipping subscription status refresh [issue retrieving user identities] - error=%{public}@ - userIdentities=%{public}@
<Key Refresh> - Periodic subscription refresh issue for user identity: %@ - error=%{public}@
<Key Refresh> - Periodic subscription refresh complete for user identity: %@
<Key Refresh> - Skipping subscription key refresh complete for user identity: %@ - Subscription status: %{public}@
<Key Refresh> - Refreshing offline HLS keys
<Key Refresh> - Skipping refreshing offline HLS keys because the user is not a subscriber
<Key Refresh> - Skipping offline HLS key refresh because the device does not support it
Updating Media API URL mapping file
Media API URL mapping update completed. err=%{public}@
Updating enhanced audio availability flag
Skipping updating enhanced audio availability because we failed to load the bag. err=%{public}@
Disabling enhanced audio because the configuration is missing
Skipping updating enhanced audio availability because we failed to load subscription status. err=%{public}@
Setting cached enhanced audio availability flag to %{BOOL}u
Failed to obtain subscription status for updating cookies. will be treated as unknown
Removing cookie '%{public}@'
Setting cookie '%{public}@ = %{public}@'
Updating cookie store for content restrictions. explicitContentAllowed=%{BOOL}u, musicVideosAllowed=%{BOOL}u, hasDisabledAppleMusic=%{BOOL}u, isSubscriber=%{BOOL}u
ICDServer %p - _handleFamilyContentDeletionEvent - No action [No active configuration]
Received %llu account pairs for family content removal.
Family content removal (purchaser = %lld, downloader = %lld, family = %lld
ICDServer %p - _updateAirPlaySettingsForConfiguration - No action [No active configuration]
ICDServer %p - Failed to load identity properties. err=%{public}@
Updating AirPlay defaults: isAppleMusicSubscriber=%d, cloudLibraryIsOn=%d
Sending unfavorite entity request <%{public}@: %p method=%{public}@ action=%{public}@> for entityType=%{public}@, item storeID:%lld, sagaID:%lld, globalPlaylistID:%{public}@, albumUniversalLibraryID=%{public}@, artistUniversalLibraryID=%{public}@ timestamp:%{public}@
%{public}@ failed with error: %{public}@
%{public}@ unable to create unfavoriteEntity request, skipping...
%{public}@ permanently failed
Watchdog fired, operation queue contents: %{public}@
Watchdog fired, releasing power assertion: %{public}@
Last artist update time: %{time_t}zd
Elapsed time since last artist hero image update: %g, minimum: %g
Artist hero image update already in progress: scheduling a maximum of one additional update.
Updating all artist hero images...
Skipping update, not enough time has passed since last update.
Searching for artists added since database revision %lld
Found %lu artist(s) and %lu album artist(s) to update
A follow-up artist hero image update already exists, merging artist persistent ids to update.
A follow-up artist hero image update already exists, it should include the specific artist persistent ids.
Artist hero image update already in progress: scheduling a follow-up update.
The artist hero image update that is already in progress will already update all of the requests artists, skipping a follow-up update.
Found zero new artists and zero new album artists to update
Database revision is the same as the last update.
Taking power assertion: %{public}@
Releasing power assertion: %{public}@
Using polling frequency from bag: %ld
Failed to get polling frequency from the URL bag, using default polling frequency: %ld
Failed to receive response for URL bag, using default polling frequency: %ld
Running second artist hero image update
Cancelled after loading URL bag
'an-batch-size' was not in the bag, defaulting to batches of %lld.
'update-interval-seconds' was not in the bag, defaulting to %lld seconds.
Updating artist store IDs using the bulk artist name lookup service (batch size = %@)
Updating artist store IDs using the allArtistImagesMap
Updating artist store IDs using the single artist name lookup service
Failed to load URL bag, skipping artist hero image update
Failed to resolve bulk artist name lookup URL from the library match rules bag, skipping artist hero image upate.
Batching %lu library match requests in to chunks of size %ld.
Bulk library match results: %{public}@
Failed to receive response for bulk artist id look up request after %d seconds, cancelling request
Cancelled after getting latest all artist image map data.
Cancelled after updating album_artist store ids.
allArtistImagesMap.plist (null) needsUpdate: %d
allArtistImagesMap.plist (count = %lu) needsUpdate: %d
Attempting to fetch latest all-artist-images-map
all-artist-images-map-url: %{public}@
Received all artist images map with %lu artist ids.
Failed to fetch all artist images map [HTTP %ld] - error: %{public}@
Failed to receive response for all-artist-images-map after %d seconds, cancelling request
Failed to get 'all-artist-images-map-url'. Cannot fetch map at this time.
Noticed cancel flag while updating artist store ids, stopping...
Cancelled after updating artist store ids.
Noticed cancel flag while updating album_artist store ids, stopping...
Failed to resolve an artist name lookup URL from the library match rules bag, skipping artist hero image upate.
Library match results for '%{public}@': %{public}@
Setting store_id '%lld' for item_artist with name: '%{public}@'
Setting store_id '%lld' for album_artist with name: '%{public}@'
Failed to receive response for artist id look up request after %d seconds, cancelling request
Noticed cancel flag while looking up artist store ids by name, stopping...
Cancelled after looking up artist store ids by name.
Cancelled after gathering artist artwork tokens.
Batching %lu lookup requests in to chunks of size %d.
Sending lookup request: %p
Waiting for lookup request: %p
Received response for lookup request: %p
Failed to receive response for lookup request: %p after %d seconds
Noticed cancel flag while looking up artist hero image URLs, stopping...
Cancelled after looking up artist hero image URLs.
Cancelled while processing artist artwork tokens.
Setting artist hero image artwork_token '%{public}@' for item_artist with pid: %lld (name = %{public}@)
Setting artist hero image artwork_token '%{public}@' for album_artist with pid: %lld (name = %{public}@)
Cancelled after updating artist artwork tokens.
Found %lu artist artwork tokens to download
Creating request for artwork token: %{public}@
Import request for artwork token: %{public}@ failed with error: %{public}@
Found hero image on disk for artwork token: %{public}@, attempting to import into database...
Inserted artist hero image for artwork token: %{public}@
Noticed cancel flag while downloading artist hero images, stopping...
Cancelled after starting downloads for artist hero images.
Enqueued all artist hero images to download.
Updating artist hero images complete.
[Item Artist] Assigned store artist ID %lld to %{public}@
[Item Artist] No store artist id found for: '%{public}@'
[Album Artist] Assigned store artist ID %lld to %{public}@
[Album Artist] No store artist id found for: '%{public}@'
%{public}@ Creating new pending changes coordinator - path=%@
%{public}@ addOrRemovePendingChange: - path=%@
%{public}@ Adding pending changes for operation with operationIdentifier=%{public}@
%{public}@ we already have a pending change for this operation=%p
%{public}@ Removing pending changes for operation with operationIdentifier=%{public}@
%{public}@ Not removing pending changes for operation %p as is no retry identifier
%{public}@ Retrieving pending changes - path=%@
%{public}@ Failed to decode pending changes. err=%{public}@
%{public}@ Failed to decode pending changes archived file with exception: %@
%{public}@ File exists at %{public}@ but we are unable to decode the changes. Clearing all pending changes
%{public}@ Saving pending changes [%lu], [%{public}@] - path=%@
%{public}@ Failed to encode pending changes. err=%{public}@
%{public}@ Adding operation %p (name=%{public}@) with priority %d
%{public}@ Adding background operation %p (name=%{public}@) with priority %d
operations count=%d, backgroundOperations count=%d
cloudServerOperations=%{public}@
%{public}@ - Supported media kinds=%{public}@, Disabled media kinds=%{public}@
%{public}@ - Media importer query filter set to: %{public}@
Cancelling %d downloads
ICDAccountManagerState %p - restoredStatedWithAccountStore: - Restoring from known accounts
ICDAccountManagerState %p - restoredStatedWithAccountStore: - Restoring from all accounts [no known accounts]
ICDAccountManagerState %p - stateForAccounts: active account is not manageable!
ICDAccountManagerState %p - stateForAccounts:baseConfiguration: - activeAccount=%@ - supportedAccounts=%@
ICDAccountManagerState %p - Saving - %@
ICDAccountManagerState %p - Supported configurations is active configuration - dsid=%@
ICDAccountManagerState %p - Supported configurations contains %lu configurations
Sending request for %{public}@ (retryTimeRemaining = %g seconds)
Received error loading %{public}@: %{public}@
Received non-zero status response loading %{public}@: Status=%ld responseURL: %{public}@
Retrying loading %{public}@ in %g seconds
Failed to load %{public}@ after %g seconds
CloudLibrary %p - No active account, returning nil library (which will suspend operation queue).
CloudLibrary %p - Operation of type %{public}@ %p completed with status CloudLibraryOperationStatusSuccess.
CloudLibrary %p - Operation of type %{public}@ %p completed with status CloudLibraryOperationStatusFailed.
CloudLibrary %p - Operation of type %{public}@ %p completed with status CloudLibraryOperationStatusPermanentlyFailed.
CloudLibrary %p - Operation of type %{public}@ %p completed with status CloudLibraryOperationStatusCancelled.
CloudLibrary %p - OPERATION FAILED TO SET STATUS %{public}@ %p
CloudLibrary %p - Background operation of type %{public}@ %p completed with status CloudLibraryOperationStatusSuccess.
CloudLibrary %p - Background operation of type %{public}@ %p completed with status CloudLibraryOperationStatusFailed.
CloudLibrary %p - Background operation of type %{public}@ %p completed with status CloudLibraryOperationStatusPermanentlyFailed.
CloudLibrary %p - Background operation of type %{public}@ %p completed with status CloudLibraryOperationStatusCancelled.
CloudLibrary %p - BACKGROUND OPERATION FAILED TO SET STATUS %{public}@ %p
%{public}@ %p -  decreasePriorityForAllOperations
%{public}@ %p -  Decreasing priority of one of our operations [%{public}@ %p]
%{public}@ %p -  increasePriorityForAllOperations
%{public}@ %p -  Increasing priority of one of our operations [%{public}@ %p]
%{public}@ %p - cancelAllOperations
%{public}@ %p - Cancelling one of our operations [%{public}@ %p]
CloudLibrary %p - Performing pending changes with coordinator: <%{public}@ %p>
CloudLibrary %p - Enqueuing failed operation to the pending changes coordinator: <%{public}@: %p>
CloudLibrary %p - Enqueuing unserviceable operation to the pending changes coordinator: <%{public}@: %p>
CloudLibrary %p - Calling completion block on non-executing, cancelled operation: <%{public}@: %p>
CloudLibrary %p - Connected to library
CloudLibrary %p - Loading URL bag...
CloudLibrary %p - failed to load url bag. err=%{public}@
CloudLibrary %p - Library Bag: %{public}@
CloudLibrary %p - Determined server URL: %{public}@
CloudLibrary %p - No library URL found, invalidating the URL bag and retrying...
CloudLibrary %p - No library URL found.
CloudLibrary %p - No URL bag found
CloudLibrary %p - Service disabled in URL bag.
CloudLibrary %p - Connected to library successfully.
CloudLibrary %p - Failed to connect to library with error: %{public}@
%{public}@ %p -  _executeBlockForAllOperations
%{public}@ %p -  Calling block on one of our operations [%{public}@ %p]
%{public}@ %p -  Ignoring operation which is not ours [%{public}@ %p]
%{public}@ %p -  Calling block on one of our background operations [%{public}@ %p]
%{public}@ %p -  Ignoring background operation which is not ours [%{public}@ %p]
Set item properties response status code: %lu
Set item properties received no response
Set item properties response failed with error: %{public}@
%{public}@ - dealloc
%{public}@ - cancelPendingChangesWithCompletion: - Library=%@ - PendingChangesCoordinator:%@
%{public}@ - cancelOperationsWithCompletion: - Starting...
%{public}@ - cancelOperationsWithCompletion: - Done!
%{public}@ - cancelOperations: - Starting...
%{public}@ - cancelOperations: - _updateCloudLibraryOperation
%{public}@ - cancelOperations: - Done!
%{public}@ - decreasePriorityForAllOperations:
%{public}@ - increasePriorityForAllOperations:
%{public}@ - Updating item play data
%{public}@ - Fetched library DAAP configuration: %{public}@
%{public}@ - Updating playlist play data
%{public}@ = Fetched library DAAP configuration: %{public}@
%{public}@ - Created timer to update item play data
%{public}@ - Uploading item play data since %{time}zd
%{public}@ - Upload item play data operation failed with status: %{public}@
%{public}@ - Skipping item play data upload (minimum time interval not satisfied (%.0f < %.0f)
%{public}@ - Postponing item play data timer due to continued updates
%{public}@ - Created timer to update playlist play data
%{public}@ - Uploading playlist play data since %{time}zd
%{public}@ - Upload playlist play data operation failed with status: %{public}@
%{public}@ - Skipping playlist play data upload (minimum time interval not satisfied (%.0f < %.0f)
%{public}@ - Postponing playlist play data timer due to continued updates
%{public}@ - Creating cloud playlist with initial properties: %{public}@
%{public}@ - ... with cloud tracks: %{public}@
%{public}@ - Creating cloud playlist for %{public}@ with initial properties: %{public}@
%{public}@ - Creating Genius playlist (pid = %lld) with seed ID: %lld
%{public}@ - Adding store item with adam ID: %lld to cloud playlist (pid = %lld, referral albumAdamID = %lld)
%{public}@ - Adding store item with adam ID: %lld to cloud playlist (pid = %lld, referral playlistGlobalID = %{public}@)
%{public}@ - Adding store item with adam ID: %lld to cloud playlist (pid = %lld)
%{public}@ - Adding item with saga ID: %llu to cloud playlist (pid = %lld)
%{public}@ - Adding store item with opaque ID: %{public}@ to cloud playlist (pid = %lld)
%{public}@ - Updating cloud playlist (pid = %lld), setting properties: %{public}@
%{public}@ - Updating cloud playlist (pid = %lld) for %{public}@, setting properties: %{public}@
%{public}@ - Publishing playlist with cloud id = %llu.
%{public}@ - Removing items with cloud ids = %{public}@
%{public}@ - Removing playlists with cloud ids = %{public}@
%{public}@ - Setting artwork on saga playlist (pid = %lld)
%{public}@ - Updating subscribed playlists (reason = %{public}@) with cloud ids = %{public}@
%{public}@ - Received request to add store item with adam ID: %lld (referral albumAdamID = %lld)
%{public}@ - Received request to add store item with adam ID: %lld (referral playlistGlobalID = %{public}@)
%{public}@ - Received request to add store item with adam ID: %lld
%{public}@ - Received request to add store item with opaque ID: %{public}@ from %{public}@
%{public}@ - Received request to add store playlist with global ID: %{public}@
%{public}@ - Setting cloud add to playlist behavior to: %{public}@
%{public}@ - Setting album properties %{public}@ on items with album persistent ID: %lld
%{public}@ - No active locker account, skipping import item artwork for saga ID: %llu
%{public}@ - No active locker account, skipping import screenshot for saga ID: %llu
%{public}@ - No active locker account, skipping import container artwork for saga ID: %llu
%{public}@ - Got load artwork info request for saga IDs: %{public}@
%{public}@ - No WiFi connection, skipping artwork info load.
%{public}@ - Got load artwork info request for container saga IDs: %{public}@
No saga artwork_token for screenshot item with persistent-id = %lld
%{public}@ - Get genius items for saga ID: %llu
%{public}@ - Updating item properties for sagaID %lld. properties=%{public}@
%{public}@ - Issuing immediate property change: %{public}@
%{public}@ - favoriting entity with storeID=%lld, entityType=%{public}@
%{public}@ - favoriting playlist with globalID=%{public}@}
%{public}@ - favoriting entity with cloudID=%lld, entityType=%{public}@
%{public}@ - favoriting album with cloudID=%{public}@}
%{public}@ - favoriting artist with cloudID=%{public}@}
%{public}@ - unfavoriting entity with storeID=%lld, entityType=%{public}@
%{public}@ - unfavoriting entity with cloudID=%lld, entityType=%{public}@
%{public}@ - unfavoriting album with cloudID=%{public}@}
%{public}@ - unfavoriting artist with cloudID=%{public}@}
%{public}@ - unfavoriting playlist with globalPlaylistID=%{public}@}
%{public}@ - Device is plugged in - checking for artwork to download
%{public}@ - Device was unplugged from power - cancelling artwork downloads
%{public}@ - Received request to update cloud library (requestReason = %{public}@), allowNoisyAuthPrompt=%{BOOL}u, isExplicitUserAction=%{BOOL}u
%{public}@ - No WiFi connection, skipping update (requestReason = %{public}@)
%{public}@ - Rescheduling push notification triggered update when WiFi becomes available.
%{public}@ - Skipping update because privacy acknowledgement is required
%{public}@ - Could not initialize saga library
%{public}@ - Could not load user identity properties. error=%{public}@
%{public}@ - Locker bit is not set on the account. Will not updateLibrary for reason=%d, allowNoisyAuthPrompt=%{BOOL}u
%{public}@ - CloudIds are different. oldValue=%{public}@, currentValue=%{public}@}
%{public}@ - Cloud library update already in progress, attaching completion handler.
%{public}@ - Enqueuing update cloud library operation (requestReason = %{public}@)
Not performing artwork update because power is required
%{public}@ - Enqueuing cloud library reset update.
%{public}@ - Posting Saga update in progress changed notification
No subscribed playlist saga ids to update.
Error updating global playlists: %{public}@
CloudService %p - [BecomeActive::Cloud] - Unable to service cloud library request - error=%{public}@.
[BecomeActive::Cloud] Could not get properties for user identity: %{public}@ - error=%{public}@.
[BecomeActive::Cloud] Last library update time: %{time_t}zd
[BecomeActive::Cloud] Elapsed time since last library update: %g, minimum: %g
[BecomeActive::Cloud] Last subscribed containers update time: %{time_t}zd
[BecomeActive::Cloud] Elapsed time since last subscribed containers update: %g, minimum: %g
[BecomeActive::Cloud] Subscribed containers periodic update disabled via bag.
[BecomeActive::Cloud] shouldUpdateAllSubscribedContainers=%{BOOL}u, shouldUpdateSubscribedContainersWithNoLastUpdateTimestamp=%{BOOL}u, shouldUpdateLibrary=%{BOOL}u
[BecomeActive::Cloud] Updating cloud library. databaseRevision=%u, allowNoisyAuthPrompts=%{BOOL}u, reason=%d
[BecomeActive::Cloud] Update saga library completed successfully, updating all subscribed containers...
[BecomeActive::Cloud] Update saga library completed successfully, skipped updating all subscribed containers. Updating all subscribed containers with no last_update now...
[BecomeActive::Cloud] Skipped cloud library update, updating all subscribed containers now...
[BecomeActive::Cloud] Skipped cloud library update and skipped updating all subscribed containers. Updating all subscribed containers with no last_update now...
CloudService %p - updateSagaLibraryWithReason (%d) - Unable to service request for purchases - error=%{public}@
CloudService %p - updateJaliscoLibraryWithReason - Unable to service request for purchases/reason=%d - error=%{public}@
CloudService %p - deauthenticateForConfiguration - Unable to service request for purchases - error=%{public}@
CloudService %p - setCloudAddToPlaylistBehavior (%d) - Unable to service request for purchases - error=%{public}@
CloudService %p - loadIsSagaUpdateInProgressForConfiguration: - Saga initial import: %{BOOL}u. Update in progress: %{BOOL}u
CloudService %p - loadIsSagaUpdateInProgressForConfiguration: - Unable to service cloud library request - error=%{public}@
CloudService %p - loadSagaUpdateProgressForConfiguration: - Saga update progress: %f
CloudService %p - loadSagaUpdateProgressForConfiguration: - Unable to service cloud library request - error=%{public}@
CloudService %p - importItemArtworkForSagaID (sagaID=%lld) - Unable to service request for purchases - error=%{public}@
CloudService %p - importScreenshotForSagaID (sagaID=%lld) - Unable to service request for purchases - error=%{public}@
CloudService %p - importContainerArtworkForSagaID (sagaID=%lld) - Unable to service request for purchases - error=%{public}@
CloudService %p - deprioritizeItemArtworkForSagaID (%llu) - Unable to service cloud library request - error=%{public}@
CloudService %p - deprioritizeScreenshotForSagaID (%llu) - Unable to service cloud library request - error=%{public}@
CloudService %p - deprioritizeContainerArtworkForSagaID (%llu) - Unable to service cloud library request - error=%{public}@
CloudService %p - loadArtworkInfoForSagaIDs: - Sending saga artwork info: %{public}@ - error=%{public}@
CloudService %p - loadArtworkInfoForSagaIDs (%{public}@) - Unable to service cloud library request - error=%{public}@
CloudService %p - loadArtworkInfoForContainerSagaIDs: - Sending saga container artwork info: %{public}@ - error=%{public}@
CloudService %p - loadArtworkInfoForContainerSagaIDs (%{public}@) - Unable to service cloud library request - error=%{public}@
CloudService %p - loadScreenshotInfoForSagaIDs: - Sending saga screenshot artwork info: %{public}@ - error=%{public}@
CloudService %p - loadScreenshotInfoForSagaIDs (%{public}@) - Unable to service cloud library request - error=%{public}@
CloudService %p - loadGeniusItemsForSagaID (%llu) - Unable to service request for cloud library - error=%{public}@
CloudService %p - addGeniusPlaylistWithPersistentID (%lld) - Unable to service request for cloud library - error=%{public}@
CloudService %p - createPlaylistWithPersistentID (%lld, properties=%{public}@): - Unable to service request for cloud library - error=%{public}@
CloudService %p - setPlaylistProperties (properties=%{public}@, forPlaylistPersistentID=%lld) - Unable to service request for purchases - error=%{public}@
CloudService %p - sdk_setPlaylistProperties (properties=%{public}@, forPlaylistPersistentID=%lld) - Unable to service request for purchases - error=%{public}@
CloudService %p - addStoreItemWithAdamIDToPlaylistWithPersistentID (adamID=%lld, persistentID=%lld) - Unable to service request for purchases - error=%{public}@
CloudService %p - addItemWithSagaID (sagaID=%lld, persistentID=%lld) - Unable to service request for purchases - error=%{public}@
CloudService %p - publishPlaylistWithSagaID (%lld) - Unable to service request for cloud library - error=%{public}@
CloudService %p - removePlaylistsWithSagaIDs (%{public}@) - Unable to service request for cloud library - error=%{public}@
CloudService %p - uploadArtworkForPlaylistWithPersistentID (%lld) - Unable to service request for cloud library - error=%{public}@
CloudService %p - updateSubscribedPlaylistsWithSagaIDs (%{public}@) - Unable to service request for cloud library - error=%{public}@
CloudService %p - addStoreItemWithAdamID (%lld) - Unable to service request for cloud library - error=%{public}@
CloudService %p - addStorePlaylistWithGlobalID (%{public}@) - Unable to service request for cloud library - error=%{public}@
CloudService %p - removeItemsWithSagaIDs (%{public}@) - Unable to service request for cloud library - error=%{public}@
CloudService %p - loadLastKnownEnableICMLErrorStatusForConfiguration - Unable to service request for purchases - error=%{public}@
CloudService %p - setItemProperties: (sagaID=%llu, properties=%{public}@) - Unable to service request for purchases - error=%{public}@
CloudService %p - uploadCloudItemPropertiesForConfiguration - Unable to service request for purchases - error=%{public}@
CloudService %p - uploadCloudPlaylistPropertiesForConfiguration - Unable to service request for purchases - error=%{public}@
CloudService %p - setAlbumProperties: (albumID=%llu, properties=%{public}@) - Unable to service request for purchases - error=%{public}@
CloudService %p - sdk_createPlaylistWithPersistentID (%lld, properties=%{public}@) - Unable to service request for cloud library - error=%{public}@
CloudService %p - sdk_addStoreItemWithOpaqueID: - Unable to service request for cloud library - error=%{public}@
CloudService %p - sdk_addItemWithSagaID (sagaID=%lld, persistentID=%lld) - Unable to service request for purchases - error=%{public}@
CloudService %p - favoriteEntityWithStoreID=%lld: - Unable to service request for cloud library - error=%{public}@
CloudService %p - favoritePlaylistWithGlobalID=%{public}@: - Unable to service request for cloud library - error=%{public}@
CloudService %p - favoriteEntityWithSagaID=%lld - Unable to service request for cloud library - error=%{public}@
CloudService %p - favoriteAlbumWithCloudID=%{public}@ - Unable to service request for cloud library - error=%{public}@
CloudService %p - favoriteArtistWithCloudID=%{public}@ - Unable to service request for cloud library - error=%{public}@
CloudService %p - unfavoriteEntityWithStoreID=%lld - Unable to service request for cloud library - error=%{public}@
CloudService %p - unfavoriteEntityWithSagaID=%lld - Unable to service request for cloud library - error=%{public}@
CloudService %p - unfavoriteAlbumWithCloudID=%{public}@ - Unable to service request for cloud library - error=%{public}@
CloudService %p - unfavoriteArtistWithCloudID=%{public}@ - Unable to service request for cloud library - error=%{public}@
CloudService %p - unfavoritePlaylistWithGlobalID=%{public}@ - Unable to service request for cloud library - error=%{public}@
CloudService %p - [BecomeActive::Jalisco] - Unable to service purchase request - error=%{public}@.
[BecomeActive::Jalisco] Last library update time: %{time_t}zd
[BecomeActive::Jalisco] Elapsed time since last library update: %g, minimum: %g
[BecomeActive::Jalisco] Periodic update on app focus disabled via bag.
[BecomeActive::Jalisco] Updating jalisco library...
CloudService %p - removeJaliscoLibraryForConfiguration - Unable to service purchase request - error=%{public}@
CloudService %p - isMediaKindDisabledForJaliscoLibrary: - Unable to service purchase request - error=%{public}@
CloudService %p - loadIsJaliscoUpdateInProgressForConfiguration: - Jalisco initial import: %{BOOL}u. Update in progress: %{BOOL}u
CloudService %p - loadIsJaliscoUpdateInProgressForConfiguration: - Unable to service purchase request - error=%{public}@
CloudService %p - loadSagaUpdateProgressForConfiguration: - Jalisco update progress: %f
CloudService %p - loadJaliscoUpdateProgressForConfiguration: - Unable to service purchase request - error=%{public}@
CloudService %p - importItemArtworkForPurchaseHistoryID(%llu): - Unable to service purchase request - error=%{public}@
CloudService %p - importScreenshotForPurchaseHistoryID(%llu): - Unable to service purchase request - error=%{public}@
CloudService %p - deprioritizeItemArtworkForPurchaseHistoryID(%llu) - Unable to service purchase request - error=%{public}@
CloudService %p - deprioritizeScreenshotForPurchaseHistoryID(%llu) - Unable to service purchase request - error=%{public}@
CloudService %p - Sending purchase history artwork info: %{public}@
CloudService %p - loadArtworkInfoForPurchaseHistoryIDs (%{public}@) Unable to service request for purchases - error=%{public}@
CloudService %p - loadScreenshotInfoForPurchaseHistoryIDs: - Sending purchase history screenshot artwork info: %{public}@ - error=%{public}@
CloudService %p - loadScreenshotInfoForPurchaseHistoryIDs (%{public}@) Unable to service request for purchases - error=%{public}@
CloudService %p - loadBooksForStoreIDs: - Unable to process cloud request [missing DSID]
CloudService %p - loadBooksForStoreIDs %{public}@ - Unable to service request for purchases - error=%{public}@
CloudService %p - hideItemsWithPurchaseHistoryIDs: (purchaseHistoryIDs=%{public}@) - Unable to service request for purchases - error=%{public}@
CloudService %p - setItemProperties: (purchaseHistoryID=%llu, properties=%{public}@) - Unable to service request for purchases - error=%{public}@
CloudService %p - deprioritizeArtistHeroImageForPersistentID: - Unable to service artist image request - error=%{public}@
CloudService %p - deprioritizeAlbumArtistHeroImageForPersistentID: - Unable to service artist image request - error=%{public}@
CloudService %p - updateArtistHeroImagesForConfiguration: - Unable to service artwork request - error=%{public}@
CloudService %p - updateArtistHeroImagesForConfiguration: - Received request to update artist hero images.
CloudService %p - updateArtistHeroImagesForConfiguration: - Skipping artist hero image update (unsupported device)
CloudService %p - %{public}@ - Unable to service artwork request - error=%{public}@
CloudService %p - importArtistHeroImageForPersistentID: - Skipping artist hero import (unsupported device) for persistentID: %lld
CloudService %p - Skipping album artist hero import (unsupported device) for persistentID: %lld
CloudService %p - %{public}@ - Unable to service subscription request - error=%{public}@
CloudService %p - deprioritizeSubscriptionItemArtworkForPersistentID: - Unable to service subscription request - error=%{public}@
CloudService %p - deprioritizeSubscriptionScreenshotForPersistentID: - Unable to service subscription request - error=%{public}@
CloudService %p - loadArtworkInfoForSubscriptionItemPersistentIDs: - Unable to service subscription request - error=%{public}@
CloudService %p - loadArtworkInfoForSubscriptionItemPersistentIDs: - Sending subscription item artwork info: %{public}@ - error=%{public}@
CloudService %p - loadScreenshotInfoForSubscriptionPersistentIDs: - Unable to service request for subscription - error=%{public}@
CloudService %p - loadScreenshotInfoForSubscriptionPersistentIDs: - Sending subscription screenshot artwork info: %{public}@ - error=%{public}@
CloudService %p - loadArtworkInfoForSubscriptionContainerPersistentIDs: - Unable to service request for subscription - error=%{public}@
CloudService %p - loadArtworkInfoForSubscriptionContainerPersistentIDs: - Sending subscription container artwork info: %{public}@ - error=%{public}@
CloudService %p - loadIsUpdateInProgressForConfiguration: Saga [initial import: %{BOOL}u. Update in progress: %{BOOL}u], Jalisco [initial import: %{BOOL}u. Update in progress: %{BOOL}u]
CloudService %p - loadIsUpdateInProgressForConfiguration: - Unable to service purchase request - error=%{public}@
CloudService %p - loadUpdateProgressForConfiguration: - Unable to service purchase request - error=%{public}@
loadMissingArtworkForConfiguration: - Sending request to load missing artwork
CloudService %p - loadMissingArtworkForConfiguration: - Unable to service request for subscription - error=%{public}@
CloudService %p - loadMissingArtworkForConfiguration: - Unable to service request for purchases - error=%{public}@
CloudService %p - Starting to run a subscription status check
CloudService %p - loading subscription status finished with error=%{public}@, not enabling iCML with policy=%d 
CloudService %p - authenticateForConfiguration (startInitialImport=%{BOOL}u, enableCloudLibraryPolicy=%d, isExplicitUserAction=%{BOOL}u) - Unable to service request for cloud library - error=%{public}@
CloudService %p - disableCloudLibraryWithReason (%d) - Unable to service request for cloud library - error=%{public}@
CloudService %p - updatePinnedSubscribedPlaylistsWithConfiguration Unable to service request for cloud library - error=%{public}@
Sending request to update Cloud Library...
Can't update cloud library using current network - skipping
Update Match Library failed with status: %ld
Serializing body dictionary to plist: %{public}@
Compressing plist to path: %{public}@
Failed to serialize body dictionary to plist with error: %{public}@
failed to fetch bag. err=%{public}@
not creating request because url bag key '%{public}@' not found
%{public}@ starting up...
%{public}@ stopping...
%{public}@ Delivering response to remote client for request %@
%{public}@ Failed to obtain remote proxy to deliver subscription status response. error = %{public}@.
%{public}@ - Requesting content taste for invalid reason=%d
%{public}@ - cancelling %d operations and clearing all pending changes
%{public}@  setting criteria to fire next content taste operation
%{public}@  updating criteria to fire next content taste operation at %{public}@
%{public}@  criteria to fire next content taste operation is unchanged
%{public}@  running default task tp update content taste
%{public}@  setting retryState=%d, _backOffIndex%d, backOffSeconds=%d
%{public}@  starting retry operation to post content taste change
%{public}@  we already have a retry operation scheduled
%{public}@ handler is no longer valid. Not running operation=%p
%{public}@ Found %d pending content taste changes to post.
%{public}@ No pending changes for retry task.
%{public}@ change count=%d, contentTasteChange=%{public}@
%{public}@  Operation=%p (identifier=%{public}@ finished with completion=%p, error=%{public}@
%{public}@  response expiration date changed. previous date = %{public}@, updated date = %{public}@
%{public}@  response expiration date changed. old date = %{public}@, new date = %{public}@
%{public}@  retaining _responseExpirationDate=%{public}@
%{public}@  scheduleRetry=%{BOOL}u, isRetryTask=%{BOOL}u, _backOffIndex=%d
%{public}@ - Clearing library for %{public}@
%{public}@ - Clearing library which failed to connect
%{public}@ - Got update library request with reason %{public}@
%{public}@ - Purchase history import disabled via the preference
%{public}@ - No WiFi connection, skipping update (reason = %{public}@)
%{public}@ - Could not initialize jalisco library
%{public}@ - No account DSID - skipping update
%{public}@ - Updating media purchase history - Reason=%{public}@ - isInitialImport=%{BOOL}u - prefetchArtwork=%{BOOL}u, _updateLibraryOperation=%p
%{public}@ - Library update finished.
%{public}@ - Update Jalisco library completed
%{public}@ - Importing artwork and screenshots if relevant [post library update]
%{public}@ - Posting Jalisco update in progress notification
%{public}@ - Update library operation in progress, attaching completion handler.
%{public}@ - Received request to hide purchaseHistoryIDs %{public}@
%{public}@ - Received request to update item with purchaseHistoryID %llu properties: %{public}@
%{public}@ - No active account, skipping import artwork for purchase history ID: %llu
%{public}@ - No active account, skipping import screenshot for purchase history ID: %llu
%{public}@ - Got load artwork info request for %lu purchase history IDs
%{public}@ - No WiFi connection, skipping artwork load.
No purchase history artwork_token for screenshot item with persistent-id = %lld
%{public}@ - Removing purchase history due to user action
%{public}@ - cancelOperationsWithCompletion
%{public}@ - decreasePriorityForAllOperations
%{public}@ - increasePriorityForAllOperations
%{public}@ - Reload media purchase history by adding media kind %d
%{public}@ - Reload media purchase history by removing media kind %d
%{public}@ - Failed to get account properties - DSID=%{public}@ err=%{public}@
%{public}@ - cancelAllOperationsAndWaitForOperationsToFinish - wait=%{BOOL}u
%{public}@ - cancelling _updateLibraryOperation=%p
Incoming XPC connection %{public}@ from %{public}@[%ld] for service %{public}@[%ld].
%{public}@: Client has %{public}@ entitlement. No need to check TCC access for cloud status monitor connection.
Refusing XPC connection %{public}@ from %{public}@[%d] for %{public}@[%ld]: %{public}@.
ICDAccountManagerStateChange %p - configurationChanged: NO [computation option driven]
ICDAccountManagerStateChange %p - Initial configuration [%@] -> Final configuration [%@]
ICDAccountManagerStateChange %p - supportedConfigurationsChanged: NO [computation option driven]
ICDAccountManagerStateChange %p - Initial configurations [%@] -> Final configurations [%@]
%{public}@ Beginning request for AMPMusicArtistNewContentResponse
%{public}@ failed to load bag. err=%{public}@
%{public}@ Executing request for AMPMusicArtistNewContentResponse
%{public}@ Failure to find bag key for artist recommendations url. Bag Key: %{public}@
%{public}@ Sync request failed. err=%{public}@
%{public}@ Sync request failed. Artist new content request returned no data %{public}@
%{public}@ failed to decode response object
Server requested restarting from initial items request, clearing previous pages and trying again...
Failed to remove obsolete items DAAP files with error: %@
Making items request with pagination token: %{public}@
Received non-200 response for items request, failing update from %u to %u
Update from %u to %u was cancelled
Failed to complete items request for update from %u to %u. err=%{public}@
Downloaded items response contains %u tracks -- overall progress = %.0f%% (%u/%u)
Stopping saga import as downloading artists payload failed
Stopping saga import as downloading albums payload failed
Stopping saga import as downloading tracks payload failed
Stopping saga import as downloading playlist payload failed
Stopping saga import as the operation is cancelled
Import failed with error = %{public}@
Found %lu unavailable tracks to unlink with asset protection type = %d
Deleting assets with protection type = %d that are no longer cloud available: %{public}@
Failed to clear location for unavailable tracks with asset protection type = %d
Starting items request from revision:%ul toRevision:%ul
Item update from %u to %u was cancelled
Finished items request from revision:%ul toRevision:%ul with response=%p responseFileCount=%d error=%{public}@
Received non-200 response for container request, failing update from %u to %u
Container update from %u to %u was cancelled
Failed to complete playlist request for update from %u to %u. err=%{public}@
Finished container request from revision:%ul toRevision:%ul with response=%p responseFileCount=%d error=%{public}@
Starting albums request from revision:%ul toRevision:%ul
Server requested restarting from initial albums request, clearing %d previous pages and starting again...
Received non-200 response for albums request, failing update from %u to %u
Album update from %u to %u was cancelled
Failed to complete albums request for update from %u to %u. err=%{public}@
Downloaded albums response contains %u albums -- overall progress = %.0f%% (%u/%u)
Finished albums request from revision:%ul toRevision:%ul with responseData=%p responseFileCount=%d error=%{public}@
Starting artists request from revision:%ul toRevision:%ul
Server requested restarting from initial artists request, clearing %d previous pages and starting again...
Received non-200 response for artists request, failing update from %u to %u
Artist update from %u to %u was cancelled
Failed to complete artists request for update from %u to %u. err=%{public}@
Downloaded artists response contains %u artists -- overall progress = %.0f%% (%u/%u)
Finished artists request from revision:%ul toRevision:%ul with responseData=%p responseFileCount=%d error=%{public}@
Taking power assertion: com.apple.itunescloudd.SagaLoadLyricsOperation
Fetching lyrics for %ld tracks (batch size = %u)
[Bulk] Received %lu lyrics info dictionaries
[Bulk] Loading lyrics from URL '%{public}@'...
[Bulk] Error getting lyrics from %{public}@: %{public}@
[Bulk] Setting lyrics of length: %lu on track with saga ID %lld
[Bulk] No track found for saga ID %lld when attempting to set lyrics.
Releasing power assertion: com.apple.itunescloudd.SagaLoadLyricsOperation
Translated parent persistent-id %llu to cloud-id %llu
Failed to find parent cloud-id for persistent-id %llu
Updating playlist with cloud-id %u, setting trackList: %{public}@ properties: %{public}@
Playlist with pid = %lld does not have a cloud_id in the database, skipping save to cloud library.
Skipping library update because the vendor bundle identifier, %{public}@, did not match the request bundle identifier %{public}@
No playlist saga ids to delete.
Sending delete request <%{public}@: %p method=%{public}@ action=%{public}@> for playlist saga ids: %{public}@
SagaRemovePlaylistOperation failed with error: %{public}@
%{public}@ content taste response for %{public}@ was written to %{public}@ with status=%{BOOL}u
%{public}@ Error %{public}@ creating content taste update directory
%{public}@ Got %lu content taste archives to remove with error %{public}@
%{public}@ Error %{public}@ removing archive at %{public}@
%{public}@ Cached content taste response at %{public}@ was deleted with status=%{BOOL}u, error=%{public}@ 
%{public}@ Could not get DSID for configuration=%p. error=%{public}@
%{public}@ Exception %{public}@ thrown while encoding archive
%{public}@ Exception %{public}@ thrown while decoding archive
Sending item property changes: %{public}@
Bulk set item properties response code: %lu
Bulk set item properties response with error: %{public}@
Play data update succeeded for track with persistent ID: %lld
%{public}@ Starting system service...
%{public}@ Stopping system service...
%{public}@ Forcing library recommendation analysis without a timer.
%{public}@ Scheduling periodic updates every %lld seconds
%{public}@ Failed to create NSData blob from filePath=%{public}@ err=%{public}@
%{public}@ Handle new AMPMusicArtistNewContentResponse from notification finished
%{public}@ Cache Directory URL is nil failed to clear cached recommendations data with path received: %{public}@
%{public}@ Cache Directory URL is nil failed to cache recommendations data with path received: %{public}@
%{public}@ Failed to write to disk the matched recommendations. err=%{public}@
%{public}@ Will not perform recommendations update. The user has disabled Apple Music.
%{public}@ Performing recommendations update on cellular network
%{public}@ User has opted out of artist and shows notifications; recommendations request is skipped.
%{public}@ Updating recommendations
%{public}@ Skipping update because we failed to load account properties. err=%{public}@
%{public}@ Skipping update because the user is not signed in
%{public}@ Skipping update because we failed to obtain the subscription status. err=%{public}@
%{public}@ Skipping update because the user is a subscriber
%{public}@ Library Recommendations Computation Finished
%{public}@ No response model from the server - skipping update
%{public}@ Received New Release Recommendations response, %lu new release albums, recoID: %@.
%{public}@ No recommendations found.
%{public}@ Matched recommendation already created for AdamID: %llu
%{public}@ Failed to remove message %{public}@, err=%{public}@
%{public}@ Removing stale messages for new recommendation update. Removed message: %{public}@
%{public}@ Attempting to create new recommendation message for AdamID: %llu
%{public}@ Beginning Affininity Analysis using MLModel.
%{public}@ No matched results found
%{public}@ Failed to compute scores. err=%{public}@
%{public}@ Found %lu new recommendations: %{public}@
%{public}@ Generated %lu matches, but zero results scored above the model score threshold.
%{public}@ Failed to fetch recommendations model. err=%{public}@
%{public}@ Failed to remove cached MLModel. err=%{public}@
%{public}@ failed to create cache directory structure err=%{public}@
%{public}@ Failed to cache or compile MLModel err=%{public}@
%{public}@ Failed to remove expired message %{public}@
%{public}@ Removed expired message %{public}@
%{public}@ platform lookup failed. err=%@
%{public}@ Unable to create message. There is no store platform data for AdamID: %@
%{public}@ Creating application message for adamID %lld : %{public}@
%{public}@ Failed to serialize local notification data. err=%{public}@
%{public}@ Created new application message %{public}@ for adamID %lld
%{public}@ Failed to save application message %{public}@ for adamID %lld. err=%{public}@
%{public}@ Failed to import lookup responses into media library. err=%{public}@
%{public}@ Unable to retrieve message with identifier %{public}@. err=%{public}@
%{public}@ Unable to get message entries for identifier %{public}@. err=%{public}@
%{public}@ Unable to find priority message.
%{public}@ Unable to update opt-in message entry %{public}@.
%{public}@ Failed to create opt-in message %{public}@. err=%{public}@
%{public}@ Failed to save application message %{public}@. err=%{public}@
%{public}@ Failed to download resources for message %{public}@. err=%{public}@
%{public}@ Failed to remove message with identifier %{public}@. err=%{public}@
No item purchase history ids to delete.
Sending hide items request <%{public}@: %p method=%{public}@ action=%{public}@> for purchase history ids: %{public}@
JaliscoHideItemOperation failed with error: %{public}@
No DAAP code found for item property: %{public}@
Cannot import artwork without artwork token.
Cannot import artwork without an asset URL.
Cannot import artwork on the watch while its not plugged in
Already have original on disk, attempting to import into database...
Not running CloudArtworkImportOperation (%p) as it's is cancelled
Downloading artwork from '%{public}@'
Downloaded artwork successfully from '%{public}@'
Failed to download artwork with HTTP status code %lld (URL = %{public}@)
Finished downloading artwork from '%{public}@' (isCancelled=%{BOOL}u) error=%{public}@
Finished downloading artwork from '%{public}@' (isCancelled=%{BOOL}u)
failed to create image source for resizing image at '%{public}@'
failed to create image destination for resizing image at '%{public}@'
failed to finalize resized image at '%{public}@'
failed to resize image at '%{public}@'
%{public}@ starting ....
%{public}@ stopping ....
%{public}@ starting operation for flush play activity events pendingOperationCount %lld, nextFlushPlayActivityFireSyncInterval %f, _testNextFlushPlayActivityFireSyncInterval %f 
%{public}@ finished flushing play activity events with error %{public}@
%{public}@ Have pending play activity events to flush
%{public}@ Recording play activity events: %@
%{public}@ connection from pid %i was interrupted
%{public}@ connection from pid %i was invalidated
%{public}@ pid %i is not entitled to connect to %s
%{public}@ connection from pid %i %s be accepted
%{public}@ Found postFrequency %f from bag
%{public}@ Did not find postFrequency from bag using default value (%f)
%{public}@ No active user identity - using default value (%f) to update the criteria to flush play activity events
%{public}@ Creating new criteria to fire on %{public}@ with grace period till %{public}@
%{public}@ Not creating a new criteria for flush play activity events nextFlushPlayActivityFireSyncInterval (%f), testNextFlushPlayActivityFireSyncInterval (%f)
%{public}@ Setting criteria to fire the next play activity event on %{public}@
%{public}@ updating current criteria to flush the next play activity event from %{public}@ to %{public}@
%{public}@ Found existing activity to flush play activity events on %{public}@
%{public}@ Loading next play activity flush event to fire on %{public}@
%{public}@ Loading default nextFlushPlayActivityFireSyncInterval to %f
%{public}@ starting xpc activity to flush play activity events
%{public}@ Unknown state
%{public}@ Refreshing shared keys
%{public}@ Failed to fetch the bag. err=%{public}@
%{public}@ Skipping refreshing shared keys because we haven't tried to use them yet
%{public}@ Requesting refresh for key %{public}@
%{public}@ Finished refreshing offline HLS keys
%{public}@ Fetching missing offline keys for downloads
%{public}@ Skipping track '%{public}@' (%llu) because the asset file '%{public}@' doesn't exist or is not a directory
%{public}@ Skipping track '%{public}@' (%llu) because the file '%{public}@' isn't HLS
%{public}@ Skipping track '%{public}@' (%llu) because the failure count of %lu exceeds the retry limit
%{public}@ Found track missing offline key: '%{public}@' (%lld)
%{public}@ Found %lu offline HLS assets to check
%{public}@ Fetching missing offline key for track '%{public}@' (%{public}@)
%{public}@ Fetching offline key for track '%{public}@' (%{public}@)
%{public}@ Finished  track %{public}@ because the file '%{public}@' (%{public}@) isn't HLS
%{public}@ Processing pending key invalidations
%{public}@ Failed to fetch bag to obtain invalidation URLS. err=%{public}@
%{public}@ Finished Invalidating offline keys error=%{public}@
%{public}@ Finished Invalidating offline keys
%{public}@ Failed to invalidate key '%{public}@', adamID=%{public}@
%{public}@ Received wait interval %lu in response to key %{public}@ - cancelling remaining key requests
Sending Books ItemsRequest [<%{public}@: %p method=%{public}@ action=%{public}@>] on Connection: [%p]
Books ItemsRequest retrieved a response: <%{public}@: %p code=%ld, length=%{bytes}lu> -- Code: %d
Books ItemsRequest failed with error: %{public}@
%{public}@ connection from pid %i beginning for service %{public}@.
%{public}@ connection from pid %i was interrupted for service %{public}@.
%{public}@ connection from pid %i was invalidated for service %{public}@.
Can not present dialog for renewing applications, parental controls active
User accepted to renew premissions for all expired bundle identifiers %{public}@
User rejected to renew premissions for all expired bundle identifiers, resetting for %{public}@
Failed to create a CFUserNotification to renew media library access for TCC expiration
%{public}@ Revoking music kit user tokens for application '%{public}@' and user identity %{public}@
Failed to load revocation url from bag. err=%{public}@
%{public}@ Completed revocation of music kit user tokens for application '%{public}@' and user identity %{public}@ error=%{public}@
%{public}@ Completed revocation of music kit user tokens for application '%{public}@' and user identity %{public}@
Revoking Music User Tokens for applications %{public}@ using identity %{public}@.
Failed to revoke Music User Tokens for application %{public}@ with error %{public}@.
Failed to revoke Music User Tokens for applications %{public}@ with error %{public}@.
CloudPendingChangesCoordinator %p - Creating new coordinator - path=%@
CloudPendingChangesCoordinator %p - addPendingChange: - path=%@
CloudPendingChangesCoordinator %p - processPendingChangesUsingLibrary - path=%@ - libraryIdentifier=%@
Processing %lu pending changes...
No pending changes to process.
%lu pending changes failed again, persisting for another time.
CloudPendingChangesCoordinator %p - removeAllPendingChangesWithCompletion - path=%@
CloudPendingChangesCoordinator %p - Retrieving pending changes - path=%@
Failed to decode pending changes. err=%{public}@
Failed to decode pending changes archived file with exception: %@
CloudPendingChangesCoordinator %p - Saving pending changes [%lu] - path=%@
Failed to encode pending changes. err=%{public}@
Device is already registered with CUID and TroveID
Failed to load url bag. err=%{public}@
Failed to register device because url bag is missing the 'cloud-add-computer' key
Sending request to register device
Failed to register device. err=%{public}@
Received response (length = %{bytes}lu)
Register device response: %{public}@
Successfully registered device (CUID: %{public}@, TroveID: %{public}@)
Updating mergeToICMLPreference to %d for activeLockerAccount
CloudLibraryUtilitiesUpdateAccountRemoveEnableICMLErrorReason finished updating (cloudLibraryStateReason=%{public}@) for %{public}@ with error=%{public}@ in %f seconds
Finished updating cloudLibraryStateReason=%{public}@ for %{public}@ with error=%{public}@ in %f seconds
Not updating account with disable iCML reason=%d. wasManuallyDisabled=%{BOOL}u, currentReason=%{public}@
migratorDisposition=%{public}@
preExistingStoreIdentifiers=%{public}@
Failed to load subscription status. error=%{public}@
%{public}@ has AM subscription enabled=%{BOOL}u, Match subscription enabled=%{BOOL}u
sagaOnDiskDatabaseRevision=%d. Loading cloud library for secondary accounts status=%d.
jaliscoOnDiskDatabaseRevision=%d. Loading cloud library for secondary accounts status=%d.
Loading cloud library for secondary accounts status=%d.
Unsupported platform to call CloudLibraryUtilitiesCanLoadICMLForSecondaryAccounts status=%d
Invalid CloudLibraryStateReasonType (%d)
_CloudLibraryUtilitiesUpdateUserIdentityWithReason finished updating (cloudLibraryStateReason=%{public}@) for account [%{public}@] with error=%{public}@ in %f seconds
Sending add item request <%{public}@: %p method=%{public}@ action=%{public}@> for opaqueID: %{public}@
SagaCloudSDKAddOperation failed with error: %{public}@
cloud-add permamently failed -- item limit exceeded
Adding opaqueID %{public}@ to playlist with persistent id %lld (cloud-id %u)
Playlist pid %lld: is_src_remote %d, distinguished_kind %d, created %{public}@
Sending cloud library opt-out for Cloud CUID: %{public}@ TroveID: %{public}@
No Cloud CUID or TroveID, skipping opt-out request.
Cloud library opt-out request failed with non-2xx status code %ld
Cloud library opt-out request failed with error: %{public}@
%{public}@ - Starting to disable cloud library deleteDB=%{BOOL}u, disableActiveLockerAccount=%{BOOL}u, removeSourcePurchaseHistoryForMusicTracks=%{BOOL}u
%{public}@ - Not running DisableCloudLibraryOperation on non standalone wOS platform
%{public}@ - DSID=%{public}@, isActiveLocker=%{BOOL}u
%{public}@ - Removing account %lld as the active locker account finished with error=%{public}@
%{public}@ - Not disabling locker account=%{public}@, _disableActiveLockerAccount=%{BOOL}u, isActiveLocker=%{BOOL}u
%{public}@ - Posting notification [ICCloudClientIsAuthenticatedDidChangeNotification]
%{public}@ - Error (%{public}@) loading account properties. Not removing locker bit from account
%{public}@ - Saga on disk revision: %ld
%{public}@ - Clearing cloud ID for %ld visible playlists.
%{public}@ - Removing %ld remote playlists.
%{public}@ - Removing %ld visible playlists.
%{public}@ - Removing %ld genius mixes.
%{public}@ - Removing saga tracks
%{public}@ - Clearing database revision (%ld)
%{public}@ - Clearing sync database properties to force reset sync.
%{public}@ - Posting cloud library availability did change notification (library became unavailable)
%{public}@ - Removing source purchase history for music and music videos
%{public}@ - Will remove source purchase history for %d tracks
%{public}@ - Finished removing tracks with source purchase history with status=%{BOOL}u, error=%{public}@
%{public}@ - Cancelling any outstanding saga track downloads.
%{public}@ - Clearing saga database properties.
%{public}@ - Deleting database for deauthentication request
%{public}@ - Completed database changes.
%{public}@ - Completed operation.
%{public}@ - setupHandlersWithAccountStateChange
%{public}@ - setupHandlers - No account change on startup [restore - [%@]]
%{public}@ - setupHandlers - Account change on startup [restore - [%@] -> [%@]]
%{public}@ - setupHandlers - Parallel MU setup - State Change=%@
%{public}@ - setupHandlers - Single & Sequential MU setups - State Change=%@
%{public}@ - updateHandlersWithAccountStateChange
%{public}@ - No changes detected - %@
%{public}@ - Change detected: %@
%{public}@ - Supported configurations changed
%{public}@ - Active account changed
%{public}@ - Verifying handlers are active
%{public}@ - activating handler %{public}@
%{public}@ - Changing policy type from %d to %d
%{public}@ - policy type is unchanged (%d)
%{public}@ - Deauthenticating handlers for unsupported accounts
%{public}@ - Unable to deactivate handler with deauthentication [deleting it anyway] - class=%{public}@ dsid=%{public}@ error=%{public}@
%{public}@ - Enabling handlers for supported accounts
%{public}@ - Change processing done [no configurations]
%{public}@ - Handler transition: [%p] -> [%p] - class=%{public}@
%{public}@ - Activating handler %p - class=%{public}@ dsid=%{public}@
%{public}@ - Deactivating handler %p - class=%{public}@ dsid=%{public}@
%{public}@ - Unable to deactivate handler - class=%{public}@ dsid=%{public}@ error=%{public}@
%{public}@ - Handler is no longer active - class=%{public}@ dsid=%{public}@
Sending request: <%{public}@: %p method=%{public}@ action=%{public}@> to URL: %{public}@
Request headers: %{public}@
Downloading response to: %{public}@
Failed to send request to %{public}@. err=%{public}@
Failed to write response data to %{public}@. err=%{public}@
Received request %p response: <%{public}@: %p code=%ld, length=%{bytes}lu>
Response: (HTTP 401) - Not Authenticated
Response: (HTTP 403, DMAP 403) - Request forbidden.
Response: (HTTP 403, DMAP %d) - Cloud DAAP Subscription Lapsed.
Response: (HTTP 403, DMAP %d) - Cloud DAAP Client Expired (client DAAP version is less than the minimum version supported by the server).
Response: (HTTP 403, DMAP %d) - Cloud DAAP Item Limit Exceeded (no additional items may be added to the library).
Response: (HTTP 403, DMAP %d) - Cloud DAAP Temporary Disconnect Requested.
Will retry request in %lu seconds
Response: (HTTP 403, DMAP %lu) - Unknown code.
Response: (HTTP 403) - Response Missing DMAP Status Code
Unhandled Response: (HTTP %lu)
Parsed response data as DMAP error: %{public}@
Unhandled Response: (HTTP %lu)
Raw response data: %{public}@
Received no response for request %p, error %{public}@
Request timed out: %{public}@
Unable to connect, current state: %ld
No library bag key. Failed to determine database ID.
Failed to fetch bag. err=%{public}@
Cloud database: %{public}@ (DatabaseID = %u)
Failed to load database ID, bag library: %{public}@
Playlist with pid = %lld is not in the database, skipping upload of playlist artwork to cloud library.
Playlist with pid = %lld does not have a cloud_id in the database, skipping upload of playlist artwork to cloud library.
Playlist with pid = %lld does not have user set playlist artwork in the database, skipping upload of playlist artwork to cloud library.
SagaUploadPlaylistArtworkOperation failed -- No artwork exists at: %{public}@
SagaUploadPlaylistArtworkOperation failed -- Artwork is zero bytes at: %{public}@
SagaUploadPlaylistArtworkOperation failed -- Missing DSID
SagaUploadPlaylistArtworkOperation failed -- Missing one required parameter: CUID (%{public}@) / TroveID (%{public}@)
SagaUploadPlaylistArtworkOperation cancelled -- After preparing to initiate artwork upload
Failed to get downloadRequestsURL
Failed to get uploadResponsesURL
Backing off before sending downloadRequestsRequest for %u ms
SagaUploadPlaylistArtworkOperation cancelled -- After initiating artwork upload
Received cloudID that does not match the one we initiated the asset upload for: %llu
Work item did not include upload-info and response-data, failing upload
SagaUploadPlaylistArtworkOperation cancelled -- After downloading work items
Uploading artwork asset using info: %{public}@
Artwork upload failed with error: %{public}@
Backing off before sending uploadResponsesRequest for %u ms
Backing off before sending second downloadRequestsRequest for %u ms
Download request phase 2 did not have all-work-completed=true: %{public}@
Received unknown response for download request phase 2: %{public}@
Received http %ld response when uploading artwork asset.
Unknown required client generated header: %{public}@
uploadTask failed: %{public}@. %{public}@
Transmitting image
Not enough information to upload artwork asset.
Received an error loading response for %{public}@: %{public}@
Received response with error: Status-%ld when loading URL: %{public}@
Retrying loading %{public}@ URL in %ld milliseconds
Failed to load %{public}@ URL after %g seconds
failed to fetch bag key '%{public}@. err=%{public}@
Compressing items to upload to path: %{public}@
%{public}@ - Cancelling update...
%{public}@ - Query Filter: %{public}@
%{public}@ - Server database revision: %u
%{public}@ Skipping initial import on non standalone wOS platform
%{public}@ - Received error when doing an update request: %{public}@
%{public}@ - On-disk database revision: %u
%{public}@ - Importer: <%{public}@ %p>
%{public}@ - <%{public}@ %p> required: %gs to process
%{public}@ - On-disk database revision is the same as the server revision, skipping update...
%{public}@ - No database revision to update to.
%{public}@ - No library for import.
%{public}@ - JaliscoNeedsUpdateForTokens is YES, forcing a full token refresh.
%{public}@ - Supported media kinds are different, forcing a full token refresh. lastSupportedMediaKinds=%{public}@, currentSupportedMediaKinds=%{public}@
%{public}@ - Import failed with error = %{public}@
No subscription artwork_token for item with persistent-id = %lld
%{public}@ - Received %lu artwork info lookup dictionaries for lookup operation in  %{public}@ IDs.
%{public}@ - Failed to fetch artwork info lookup in %{public}@ ID: %llu
%{public}@ - Failed to remove the shared enhanced audio keys. err=%{public}@
%{public}@ - Active account is nil, yet there are subscription tracks in the database... removing source now.
%{public}@ - Remove source failed with error: %{public}@
[%{public}@] Sending cloud-add request <%{public}@: %p method=%{public}@ action=%{public}@>
[%{public}@] failed with error: %{public}@
Unable to create cloud-add request, skipping...
Operation permanently failed, attempting to remove pending library content...
Cloud-add request for adam ID = %lld
Updating in_my_library for cloud-add success.
Updating in_my_library for cloud-add failure.
Cloud-add request for playlist global ID = %{public}@
Updating playlist with persistent-id %lld, setting cloud-id to %lld
Deleted pending playlist with global id: %{public}@
Failed to delete pending playlist with global id: %{public}@
Could not find a pending playlist to delete with global id: %{public}@
[SagaCloudAddItemToPlaylistOperation] Adding adam-id %lld to playlist with persistent id %lld (cloud-id %u)
[SagaCloudAddItemToPlaylistOperation] Playlist pid %lld: is_src_remote %d, distinguished_kind %d, created %{time}zd
Cloud-add request for adam ID = %lld / container_pid = %lld
[%{public}@] Found %lu track(s) to update in_my_library (based on album store id)...
[%{public}@] Found %lu track(s) to update in_my_library...
[%{public}@] Updated in_my_library for track with persistent ID %lld
[%{public}@] Failed to update in_my_library for track with persistent ID %lld with error: %{public}@
Boosting priority of artwork download (identifier = '%{public}@' type = %{public}@ source = %{public}@)
Decreasing priority of artwork download (identifier = '%{public}@' type = %{public}@ source = %{public}@)
%{public}@ %s operations in coordination with media downloads
%{public}@: Operation was cancelled upon beginning execution. Aborting.
%{public}@: Request is already finished. Skipping running completion logic a second time.
%{public}@: %{public}@.
%{public}@: Encountered error: %{public}@.
%{public}@: Did complete privacy prompt with status: %{public}@.
%{public}@ received new token '%{public}@'
Received push notification on topic "%{public}@": %{public}@
Push notification came from alternate environment, dropping notification from topic "%{public}@": %{public}@
Ignoring push notification for an account that is not the active account. accountDSID=%lld, activeAccountDSID=%lld
Unknown push topic '%{public}@'
%{public}@ Network reachability changed to available - updating push registration if needed
%{public}@ Updating push notification registration
%{public}@ No APNS token available - skipping registration for now
%{public}@ Finished push registration
%{public}@ We already have an operation enqueued to handle push registration
%{public}@ Failed to fetch bag configuration. error=%{public}@
%{public}@ Creating new APNS connection. %{public}@
%{public}@ Registering for push notifications. environment=%{public}@
%{public}@ Failed to create the push connection
%{public}@ Updating push registration for configuration %{public}@
%{public}@ Failed to get properties for user identity %{public}@. err=%{public}@
%{public}@ Not registering for push notifications because privacy acknowledgement is required for media
%{public}@ Push notification registration up to date for configuration %{public}@
%{public}@ Registering updated push token %{public}@
%{public}@ Finished registering push token. err=%{public}@, statusCode=%d
%{public}@ Registering updated media types: %{public}@
%{public}@ Finished registering push token. err=%{public}@, statusCode=%{public}ld
%{public}@ received accounts changed notification - updating push notifications
%{public}@ Received saga push notification with no DSID - using active account. userInfo=%{public}@
%{public}@ Ignoring saga push message because we failed to load account properties. err=%{public}@
%{public}@ Ignoring saga push message because the account no longer has icml enabled
%{public}@ Ignoring saga push message for an inactive account
%{public}@ Received unhandled saga push action. userInfo=%{public}@
%{public}@ Received jalisco push notification with no DSID - using active account. userInfo=%{public}@
%{public}@ Ignoring jalisco push message because we failed to load account properties. err=%{public}@
%{public}@ Ignoring jalisco push message for an inactive account
Received update request to media types: %{public}@
Ignoring push notification since it did not contain any supported media types
%{public}@ Received unhandled jalisco push action. userInfo=%{public}@
[Lease] - Posting darwin notification for lease end'
Unknown for-you module identifier %d
%{public}@ Received unsupported store push notification - ignoring. userInfo=%{public}@
%{public}@ No aps payload - ignoring push %{public}@
%{public}@Received legacy banner sync payload version - ignoring push %{public}@
%{public}@Received inApp messages push - syncing now
%{public}@Failed to process incoming sync push message. err=%{public}@
%{public}@Received unsupported in-app sync payload version - ignoring push %{public}@
Warning: Invalid response data (code: %08x, length: %lu, encodedLength: %lu)
Unhandled code in response: %c%c%c%c
Login session ID: %lu
Unhandled code in login response: %c%c%c%c
Server revision number: %d
Unhandled code in update response: %c%c%c%c
Unhandled code in authorized account token response: %c%c%c%c
Unhandled code in bulk cloud artwork info response: %c%c%c%c
Unhandled code in bulk cloud lyrics info response: %c%c%c%c
Unhandled code in cloud artwork info response: %c%c%c%c
Unhandled code in control interfaces response: %c%c%c%c
Unhandled code in control prompt response: %c%c%c%c
Unhandled code in deleted item ID listing response: %c%c%c%c
Unhandled code in dictionary collection: %c%c%c%c
Unhandled code in editing command response: %c%c%c%c
Authorized DSIDs revision code: %d
Returned count: %d
Unhandled code in items response: %c%c%c%c
Unhandled code in listing collection response: %c%c%c%c
Unhandled code in browse listing response: %c%c%c%c
Unhandled code in item ID array response: %c%c%c%c
Unhandled code in play status response: %c%c%c%c
Unhandled code in item response: %c%c%c%c (%u bytes long)
%{public}@ Received IDS message %lu:'%{public}s' from ID %{public}@
%{public}@ Successfully sent response message; responseMessageIdentifier = %{public}@.
%{public}@ Failed to send response message with error = %{public}@.
%{public}@ Received IDS message of unknown type %lu:'%{public}s' from ID %{public}@
%{public}@ No client identifier or version was specified in the ICAppleMusicAPITokenRequest instance. Falling back to default client identifier for daemon: %{public}@/%{public}@.
%{public}@ Performing token request %{public}@ and %{public}@.
%{public}@ Reporting completion for token request %{public}@ with response: %{public}@.
%{public}@ Encountered error trying to request Developer Token: %{public}@.
%{public}@ Successfully retrieved Developer Token.
%{public}@ Encountered error trying to request Music User Token: %{public}@.
%{public}@ Started IDS service with name %{public}@.
%{public}@ Stopped IDS service with name %{public}@.
Job Fired: SagaDeferredPushUpate (satisfied = %d)
Saga deferred push update failed with error %{public}@, trying again in an hour.
Saga deferred push update job not satisfied, trying again in an hour.
Job Fired: JaliscoMediaPeriodicPoll (satisfied = %d)
Jalisco media periodic poll update failed with error %{public}@, trying again tomorrow.
Jalisco media periodic poll update job was not satisfied, trying again tomorrow.
Job Fired: JaliscoMediaDeferredPushUpate (satisfied = %d)
Jalisco media deferred push update failed with error %{public}@, trying again in an hour.
Jalisco media deferred push update job was not satisfied, trying again in an hour.
No handler for BTA job named: %{public}s
%{public}@ - Updating cloud library operation (reason = %{public}@), isInitialImport=%{BOOL}u, isExplicitUserAction=%{BOOL}u
%{public}@ - Skipping initial import on non standalone wOS platform
%{public}@ - Preparing for initial library update...
%{public}@ - Failed to register device, bailing on initial library update
%{public}@ - Cancelled after registering device
%{public}@ - self.uploadResponseStatus=%d, treating as a hard failure
%{public}@ - self.uploadResponseStatus=%d, treating as a temporary failure
%{public}@ - Cancelled after uploading library metadata
%{public}@ - Cancelled after preparing library for cloud import
%{public}@ - finished with status=%d, failureReason=%{public}@
%{public}@ - Skipping _uploadLibrary because com.apple.itunescloudd:DisableLibraryUpload is set to YES
%{public}@ - Setting "should-upload" to true because MLCloudLibraryPrefersToMerge is set to YES
%{public}@ - Setting "should-upload" to true because com.apple.itunescloudd:ForceLibraryUnification is set to YES
%{public}@ - Found %lu songs to upload from query: %{public}@
%{public}@ - Error creating updateRequest.
%{public}@ - Sending upload library request: <%{public}@ %p>
%{public}@ - Got upload library response: <%{public}@ %p>
%{public}@ - Upload library response body: %{public}@
%{public}@ - Determined upload URL: %{public}@
%{public}@ - Failed to open file for writing library upload metadata plist with error: %{public}@
%{public}@ - Writing library upload metadata to plist at: %{public}@
%{public}@ - Found %lu playlists to upload from query: %{public}@
%{public}@ - Found zero playlists to upload.
%{public}@ - Determined results URL: %{public}@
%{public}@ - Saved results plist to: %{public}@
%{public}@ - Received empty response when getting match results.
%{public}@ - Importing cloud-ids failed with error: %{public}@
%{public}@ - Failed to import cloud-id mapping.
%{public}@ - Received non-200 response when getting match results: %{public}@ error: %{public}@
%{public}@ - Failed to determined results URL
%{public}@ - Received non-200 response when uploading library: %{public}@ error: %{public}@
%{public}@ - Failed to determined upload URL, skipping upload
%{public}@ - Removing %lu items that do not have a cloud id.
%{public}@ - Removing %lu playlists that do not have a cloud id.
%{public}@ - Server response indicates the subscription has lapsed
%{public}@ - Update response contained add to playlist behavior: %{public}@
%{public}@ - Received error when doing a library update request: %{public}@
%{public}@ - Failed to get a non-zero server database revision.
%{public}@ - On-disk database revision is the same as the server database revision, but force update is TRUE.
%{public}@ - On-disk database revision is the same as the server database revision, skipping update.
%{public}@ - shouldTreatInitialSagaImportAsFailed is set. Will force initial import to fail.
%{public}@ - Setting initial user version: %lli
%{public}@ - Posting cloud library availability did change notification (library became available)
%{public}@ - Triggering post-unification playlist artwork upload for playlist persistentID: %lld
%{public}@ - Error importing cloud library payload. Will treat as permanent failure
%{public}@ - Could not create determineResultsURLRequest
%{public}@ - Determine result URLs response: %{public}@
%{public}@ - Failed to determine result URLs with server status code: %ld response: %{public}@
%{public}@ - Failed to determine result URLs with unknown error: %{public}@
%{public}@ - Clearing temporary item cloud ids.
%{public}@ - Clearing temporary container cloud ids.
%{public}@ - Uploading is not supported, no temporary cloud ids to clear.
ICDAccountManager %p - init - Unable to retrieve accounts [empty accounts for restoration fallback] - error=%{public}@
ICDAccountManager %p - init - _state=%@
ICDAccountManager %p - Unable to update state [No state change built]
ICDAccountManager %p - No account changes detected - %@
ICDAccountManager %p - No state changes detected - %@
ICDAccountManager %p - Changing policy type currentValue=%d, newValue=%d
ICDAccountManager %p - policy type is unchanged currentValue=%d
ICDAccountManager %p - Unable to compute state change [Error retrieving store accounts] - error=%{public}@
%{public}@: Calling delegate to update user state, home user settings changed
%{public}@: Calling delegate to update user state, library authentication token changed
%{public}@: Calling delegate to update user state, store account properties changed
%{public}@: Calling delegate to update user state, identity store changed
%{public}@: Calling delegate to update user state, subscription status changed
%{public}@: Calling delegate to update user state, active user identity changed
%{public}@: Calling delegate to update user state, cloud authentication changed
%{public}@: Calling delegate to update user state, music settings changed
%{public}@: Skipping content tast update because privacy acknowledgement is required
%{public}@ invalidating cached response
%{public}@ preparing cached response with date %{public}@, revisionID %llu
[%{public}@] finished with response=%{public}@, error=%{public}@, responseErrorCode %ld
[%{public}@] Error getting sync url
[%{public}@] Error %{public}@ getting bag for identity %{public}@
[71542113: %{public}@] Adding content taste item=%{public}@. actionTimestampMillis=%lld
%{public}@ prepared %{public}@ content taste update items with expiration date %{public}@, revisionID %llu, isCached %d from server response
Updating content taste for %lu items
Removing [Count:(%lu), items:(%@)] non media items from import list
processing tracks with pendingItemCount: %lu, currentBatchCount: %lu for property: %@
Track with storeItemID: %lld, subscriptionStoreItemID: %lld, persistenID: %lld for property: %@ will be imported to include subscription data source
Track with storeItemID: %lld, subscriptionStoreItemID: %lld, persistenID: %lld for property: %@ has a storeSagaID: %lld and will not be updated
Track with storeItemID: %lld, subscriptionStoreItemID: %lld, persistenID: %lld, liked_state: %lld for property: %@ is imported and has the correct liked state
Track with storeItemID: %lld will be imported
Updated liked state to: %lld for track with persistenID:%lld
Error updating liked state to: %lld for track with persistenID:%lld
processing albums with pendingItemCount: %lu, currentBatchCount: %lu
Album with albumStoreID: %lld, persistenID: %lld will be imported to include subscription data source
Album with storeItemId: %lld, albumPid: %lld, has storeSagaID: %lld and will not be updated
Album with storeItemId: %lld, albumPid: %lld, liked_state: %lld is imported and has the correct liked state
Album with storeItemID: %lld will be imported
Updated liked_state to:%lld for album with albumPid:%lld
Error updating liked_state to:%lld for album with albumPid:%lld
updated [tracks:(%lu) albums:(%lu)] new items to import[count:(%lu) items:(%@)]
Error importing %lu tracks to the library. %@
Imported %lu mediaItems for %lu storeAdamIds
Not updating liked_state for track with persistentID: %lld, storeAdamID: %lld as it has a valid storeSagaID: %lld
StoreAdamIds (%@) are marked as non-importable and will not be retried
Error updating StoreAdamIds (%@) as non-importable
Finished updating media taste for tracks/albums in %f seconds
Updating content taste for %lu global playlists
processing playlists with pendingplayListCount: %lu, currentBatchCount: %lu
Container with PlaylistGlobalId: %@, persistentID: %lld, liked_state: %lld is imported and has the correct liked state
Updated liked_state to:%lld for playlist with playlistID:%lld
Error updating liked_state to:%lld for playlist with playlistID:%lld
Playlist Import [Count:(%lu) - Ids:(%@)]
Error %{public}@ adding global playlists
global playlist %{public}@ was not imported
Finished updating media taste for global playlists in %f seconds
Entity with persistenID: %lld, liked_state: %lld for property: %@ is imported and has the correct liked state
Entity with persistenID: %lld is imported and liked state updated from: %lld to: %lld for property: %@
Entity with persistenID: %lld is imported and liked state could not be updated from: %lld to: %lld for property: %@
Updating liked state for entity with persistenID: %lld of type %@ is not supported
Sending container property changes: %{public}@
Bulk set containers properties response code: %lu
Bulk set containers properties failed with error: %{public}@
Play data update succeeded for container with persistent ID: %lld
Updating using connection: <%{public}@ %p>
Setting initial user version: %lli
Sending request %p to set add to playlist behavior to %{public}@
%p received response status code: %lu
%{public}@: Cancelling %{public}@.
%{public}@: Bypassing enforcement of privacy acknowledgement.
%{public}@: Operation was cancelled right before enqueuing privacy prompt operation: %{public}@. Aborting.
%{public}@: Performing %{public}@.
%{public}@: Requesting bag using %{public}@.
%{public}@: Did complete bag request. Encountered error: %{public}@.
%{public}@: Did complete bag request. Received bag %{public}@ (serverCorrelationKey: %{public}@; serverEnvironment: %{public}@).
%{public}@: Requesting properties for %{public}@.
%{public}@: Did complete user identity properties request. Encountered error: %{public}@.
%{public}@: Did complete user identity properties request.
%{public}@: Requesting subscription status using %{public}@.
%{public}@: Did complete %{public}@. Encountered error: %{public}@.
%{public}@: Did complete %{public}@. Received subscription status response %{public}@.
%{public}@: Did complete request with error: %{public}@.
%{public}@: Did complete request; capabilities: %{public}@.
%{public}@ Music app is installed - starting a content taste update operation
%{public}@ Music app is uninstalled - clearing all content taste handlers
%{public}@ updating content taste for media items
%{public}@ Could not get DSID for configuration=%p, error=%{public}@
%{public}@ Music app is not installed - not running content taste update operation for item %d, id %lld
%{public}@ Cannot update content taste for item type %d with storeId=%lld, configuration=%{public}@
%{public}@ Music app is not installed - not running content taste update operation for playlist %{public}@
%{public}@ Cannot update content taste for item with globalPlaylistID=%{public}@, configuration=%{public}@
%{public}@ Posting content taste for item=%{public}@
%{public}@ got connection request from pid %i
%{public}@ pid %i is not entitled to connect to content taste update service
%{public}@ Could not get DSID from configuration=%p, error=%{public}@
%{public}@ Found %d user identities, error=%{public}@
%{public}@ not processing pending changes as music app is not installed
Setting up artwork cache directory.
Error creating directory. path=%{public}@ error=%{public}@
Error removing item path=%{public}@
Artwork cache setup complete.
No valid album item properties to set, skipping updates to cloud library.
Sending edit request for %lu items
Set album item properties response: %lu
Set album item properties received no response
Set album item properties response with error: %{public}@
Album with pid = %lld has zero tracks with cloud_ids in the database, skipping updates to cloud library.
Album with pid = %lld has zero tracks in the database, skipping updates to cloud library.
Album with pid = %lld is not in the database, skipping updates to cloud library.
Appending cloud-id %lld to playlist with cloud-id %u
Updating playlist with cloud-id %u, setting trackList: %{public}@
Automatic Downloads are %{BOOL}u.
Could not get account for DSID=%lld. Automatic Downloads are %{BOOL}u
Could not get active account. Treating automatic downloads as disabled
Track with cloud-id %lld is already in the library, no updates needed...
Updating track with persistent-id %lld, setting cloud-id to %lld
Found %lu adam ids that didn't map to a track without a cloud-id, attempting with cloud-id now...
Found cloud-id already in library: %lld
The server returned cloud-ids that are not in the database, but should be: %{public}@
No item saga ids to delete.
Sending delete request <%{public}@: %p method=%{public}@ action=%{public}@> for item saga ids: %{public}@
SagaRemoveItemOperation failed with error: %{public}@
Device does not support ArtistImageRequestHandler
Skipping artist hero image update due to insufficient network conditions
ICDBackgroundTaskManager %p - startPeriodicPolling
ICDBackgroundTaskManager %p - startPeriodicPolling - Setting timer to perform periodic poll for %llds (+/- %llds)
ICDBackgroundTaskManager %p - periodicPolling - Ignoring activity [State != Run]
ICDBackgroundTaskManager %p - periodicPolling - Ignoring polling [No configurations]
ICDBackgroundTaskManager %p - periodicPolling - Performing periodic sync
ICDBackgroundTaskManager %p - periodicPolling - Failed to update %@ %p [error] - error=%{public}@
ICDBackgroundTaskManager %p - periodicPolling - Updated %@ %p [no error]
ICDBackgroundTaskManager %p - scheduleTaskOfType:forConfiguration: - newTask=%{public}@ - currentTasks=%@
ICDBackgroundTaskManager %p - scheduleTaskOfType:forConfiguration: - Task already on-going [%{public}@]
ICDBackgroundTaskManager %p - _restoreCurrentTasks - No state to restore
ICDBackgroundTaskManager %p - _restoreCurrentTasks - Restoring current tasks failed - error=%{public}@
ICDBackgroundTaskManager %p - _restoreCurrentTasks - State restored [%lu tasks] - tasks=%@
ICDBackgroundTaskManager %p - _saveCurrentTasks - Saving current tasks failed - error=%{public}@
ICDBackgroundTaskManager %p - _saveCurrentTasks - State saved [%lu tasks] - tasks=%@
ICDBackgroundTaskManager %p - scheduleTask - taskName=%@
ICDBackgroundTaskManager %p - scheduleTask - Unable to perform asynchrounous work [%{public}@]
ICDBackgroundTaskManager %p - scheduleTask - Task failed [%{public}@]
ICDBackgroundTaskManager %p - scheduleTask - Task succeeded [%{public}@]
ICDBackgroundTaskManager %p - scheduleTask - Unable to force task termination [%{public}@]
ICDBackgroundTaskManager %p - Unregistering task: %@
ICDBackgroundTaskManager %p - startPeriodicPolling -  Adjusting bag refresh interval of %lldmin --> 7 days
ICDBackgroundTaskManager %p - Job Fired: sagaDeferredPushUpate [%{public}@]
ICDBackgroundTaskManager %p - sagaDeferredPushUpate - Failed - error=%{public}@
ICDBackgroundTaskManager %p - sagaDeferredPushUpate - Succeeded
ICDBackgroundTaskManager %p - Job Fired: jaliscoDeferredPushUpate [%{public}@]
ICDBackgroundTaskManager %p - jaliscoDeferredPushUpate - Failed - error=%{public}@
ICDBackgroundTaskManager %p - jaliscoDeferredPushUpate - Succeeded
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/PrivateFrameworks/WatchListKit.framework/WatchListKit
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
ttsm
CRea
rsmc
nnac
anac
lnac
spac
hsac
prac
sfac
svac
cvac
saac
raac
efac
evac
uQec
QMec
QNec
iasa
dbmc
sbmc
tbmc
mbmc
gnac
kmmc
csac
tnac
tsac
usac
SGec
pnac
lpac
ttsm
stsm
CRea
