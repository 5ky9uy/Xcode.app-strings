DADBuddyStateObserver: Dealloc.
DADBuddyStateObserver: Start observing buddy finished notification.
DADBuddyStateObserver: Already observing.
DADBuddyStateObserver: Received buddy finished notification.
DADBuddyStateObserver: Failed to observe buddy finished notification. Doing periodic polling as a fallback.
DADBuddyStateObserver: Stop observing buddy finished notification.
DADBuddyStateObserver: Cancelling polling timer.
DADBuddyStateObserver: Cancelling notification observer.
DADBuddyStateObserver: Polling buddy status.
DADBuddyStateObserver: Buddy finished. Stop observing and call handler.
DADBuddyStateObserver: Already stopped. Will skip calling handler.
Registering concerned cal party: %@
XXXXXXXXXX: Received reminders database did change.
XXXXXXXXXX: DADREMLocalDBWatcher: DATransaction starting, ID: %@
Reachability changed notification %@
Registered for wake notification
IONotificationPortGetRunLoopSource returned NULL, can't register for wake notification
IORegisterForSystemPower returned MACH_PORT_NULL, can't register for wake notification
DADAgentManager: Fetching active agents. count = %d, agents = %@
loadAgents: Cannot get REM store when DA loads agents.
loadAgents: ERROR: Can't load agent for this AC account because does not have an account identifier! {acAccount: %@}.
XXXXXXXXXX: loadAgents: Skip loading agent for this AC account because it is not enabled for reminders {acAccount: %@ %@}.
XXXXXXXXXX: loadAgents: Skip loading agent for this AC account because it is a delegate {acAccount: %@ %@}.
ERROR: loadAgents: Could not fetch accounts with exteranl identifiers to load agents (error: %@, identifiers: %@)
XXXXXXXXXX: loadAgents: Skip loading agent for this AC account because REM account is missing {acAccount: %@ %@}.
loadAgents: Not creating an agent for account info %@ (%{public}@), it refused to init itself
loadAgents: Creating an agent for account info %@ (%{public}@)
loadAgents: Loading up agent %@ for account "%{public}@" (%@) (%{public}@)
loadAgents: Not loading an agent for account "%{public}@" (%@) (%{public}@), because agentClass is nil
loadAgents: Not loading an agent for account "%{public}@" (%@) (%{public}@), because it is disabled
DADAgentManager: loadAgents: Settings active agents. count = %d, agents = %@
Error when cleaning up client restrictions for persistentUUID %@.  Error %@
DADAgentManager: Clearing active agents. previous count = %d, previous agents = %@
Tearing down connection cache
Tore down connection cache
Handling power change call with messageType %d
Did not start monitoring folder ids %@, because the agent said "nope"
Did not start monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not stop monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not suspend monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not resume monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
DA is NOT removing orphan accounts, because we're in a holding pattern.
DA is NOT removing orphan accounts, because some joker told us not to in behavior options
DA is NOT removing orphan accounts, because the rem_storeProvider doesn't support it
DA is NOT removing orphan accounts, because there was an error communicating with account store in -accountTypeWithAccountTypeIdentifier {error: %@}
DA is NOT removing orphan accounts, because there was an error communicating with account store in -accountsWithAccountType {error: %@}
ClearOrphanStores : ===== Starting CalDAV Orphan Store Cleanup ======
ClearOrphanStores : ACCOUNTDCOERROR Removing calendar store, as its account id %@ isn't one of the account ids I know about: %@ | %@
Failed to save changes when trying to clear orphaned stores: %@
Failed to fetch accounts when trying to clear orphaned stores: %@
ClearOrphanStores : ===== End CalDAV Orphan Store Cleanup ======
DAAgentManager: Device PastBuddy is %d
Can't start yet, device is still in buddy
DAAgentManager: NO startAgentWhenSystemReadyBlock defined. This will not load any agents
DAAgentManager: System Ready Calling Load Agents Block
DAAgentManager: System Not Yet Ready. We are Not Loading Agents
DAAgentManager: Clearing disableMonitoringAgentsTokens and Loading Agents
Failed to register CT server notification %@ (domain: %d error: %d).
Failed to create CT server connection
User allowed cellular-data for BundleID %{public}@
Loading our agents
Removing CFURLCache entries
XPC: Received darwin notification: %{public}@
XPC: Received PCPreferencesDidChangeNotification due to user change
Agents loaded and monitoring.  They are %@
DAAgentManager: System Not Yet Ready. We will Register for BuddyFinished Notification
REGISTER FOR BUDDY
DAAgentManager: Received buddy finished notification.
EXITING REGISTER FOR BUDDY
UNREGISTER FOR BUDDY
EXITING UNREGISTER FOR BUDDY
Agents awaiting shut down are %@
Stopping our agents (which are %@)
Stopping agent %@
Agent %@ has stopped monitoring
agentsAwaitingShutdown count is now %lu
Still waiting for %lu agents to shut down.  Spinning a run loop. Outstanding agents are %@
Run Loop finished.  Active Agent count is now %ld.
Agents stopped and saved
Ignoring call to enableMonitoringAgentsWithToken: with unrecognized token %d
DADAgentManager asked to enableMonitoringAgents. New count = %d
DADAgentManager disableMonitoringAgents reached 0. Start Loading Agents..
DADAgentManager asked to disableMonitoringAgents. New count = %d
DADAgentManager disableMonitoringAgents reached 1. Stop Loading Agents..
Found an EAS Account %@
unable to signal launchd to keep dataaccessd alive: errno %d
unable to cleanup launchd semaphore so that dataaccessd can be pressured exit: errno %d
Signal USR1 (30) received.  Exit if xpc transaction count is 0.
The xpc transaction count is %d. Do nothing.
QUIT received.  Shutting down.
HUP received.  HUP is currently unused.  Ignoring.
USR2 received.  Dumping our state.
Initiating DA Shutdown...
UserManagementFramework: Ending Switch Task For %@
Add Force Logout Timer in %d seconds
No Active Agents to sync.
EAS Accounts Found. Forcing Logout without manual sync
UserManagement. Switch Tasks already pending. NOOP
UserManagementFramework: Creating Switch Tasks For Pending Transcation Count %d
UserManagementFramework: No Pending Transcation Count. Exiting without blocking logout.
All Transactions Finished. Initiating DA Shutdown
DADMain waitForSystemAvailability - remMigrationContext.isDatabaseMigrated is NO. Block in background to wait for migration to finish...
DADMain waitForSystemAvailability - Done waiting for migration finishes.
Device is a %@AppleInternal install
Enabling CFNetwork diagnostics
Received notificaion "%@" indicating a language change.  Going to exit to pick up new locale support
DADREMShareResponseDelegate: Could not get an account with the ID %@
DADREMShareResponseDelegate finished with optional error %@
DADREMShareResponseDelegate finished, but could not find an account with the ID %@
Missing required container identifier
Forcing APS environment to %@
Setting our enabled APS topics to %@
Wrapper %@ is in state %d and its last push registration time was %@ (%f)
No public token. We won't be re-registering our tokens with the server
Timer fired. Re-registering everything with APS
Push registration failed for delegate %@. Falling back to poll.
Resuming XPC Activties for polling
Suspending topic "%@" for delegate %@
Resuming XPC Fetch Activities for polling
Resuming topic "%@" for delegate %@
Account %@ : Resuming Push Delegate's PC style changed from %d to %d
Account %@ : Suspending push and resuming XPC Activity for polling
Our push setting was not changed from current value: %d. Doing nothing and hoping for the best.
Received token %@ from APS. Registering all delegates with their servers
Received a message from APS for topic %@ with user info %@.
Collection keys in push user info is %@.
Received an APS push for %@ but we don't have any enabled delegates registered for that topic.
Enabled waiters: 
Suspended waiters: 
Waiter %@: %@
Registering delegate %@ for PC notifications
Begin Unregistering delegate %@ for all PC and APS notifications
Unregistering delegate %@ for all PC and APS notifications
Shutdown: Wrapper %@ Leaving push topics regiestered. delegate %@ for all PC and APS notifications
Delegate %@ was unregistered, but it was never registered
Registering daily refresh xpc activity.
Updating criteria for daily refresh xpc activity.
Unregistering daily refresh xpc activity.
Registering delegate %@ for topic %@ in environment %@
Delegate is not set to push, so putting it on the suspended queue
Removing refresh manager delegate for account %@ from topic %@
Delegate %@ tried to unregister for the topic %@, but that delegate is not registered with the refresh manager
No more delegates for any topic. Tearing down APS
Setting ourself enabled for these APS topics: %@
Resuming account %@ for polling
Delegate %@ finished a refresh but it is not registered with the refresh manager
Delegate %@ told us to retry a refresh later but it is not registered with the refresh manager
The token registration session became invalid for account ID %@: %@
Token registration session became invalid for account %@
The token registration task failed to load for account ID %@: %@
Token registration task finished for account %@
The server accepted our push token request (status %d)
The server returned a status of %d to our token registration request. Falling back to PC. Server response headers are %@
The server returned a response of "%@"
Can authenticate against protection space %@? %@
Cancelling authentication because it's already failed
Received an authentication challenge for account %@ method %@
Responding to authentication challenge with username %@ and password
Token registration - Continuing without credential for challenge
Token registration - Waiting for runloop callback to decide what to do
Can't send a token registration for %@ because it doesn't implement serverTokenRegistrationURL.
Registering token %@ with the server at %@
XPC: Cancelling Retry Activity For Account %@ AccountID: %s
%@: Stopping XPC Activities for Refreshing Collections
%@: Cancelling pending Token Registration request
Don't start fetch because either DAAccount is nil or account description is nil
XPC: Registering Fetch Activity For Account %@ AccountID %s, Interval %lld
Updating criteria for fetch xpc activity for account %@ accountID %@
XPC: Successfully set XPC activity state to XPC_ACTIVITY_STATE_CONTINUE for account %@
Start fetching in automatically mode for account %@
XPC: Failed to set XPC activity state to XPC_ACTIVITY_STATE_CONTINUE for account %@
XPC: Performing Fetch Activity For Account %@ AccountID %s, Interval %lld
XPC: Manual Sync Fetch Activity For Account %@ AccountID %s, Interval %lld
XPC: Starting a Temp Sync Fetch Activity before Transitioning to Push For Account %@ AccountID %s, Interval %lld
XPC: Cancelling Fetch Activity For Account %@ AccountID: %s
Performing token registration request for %@ with watched collections %@
Retry activity  fired for delegate %@
Daily refresh activity fired for delegate %@
Setting a timer to refresh the collections %@ for delegate %@ after %f seconds
The options task timer fired, but the task manager is modal. We'll wait until it drops modal before tearing down this task.
We weren't able to reach the server at %@ within %lf seconds. Bailing out of this refresh early.
Ignoring probe request for "%@" as we already have one outstanding
The babysitter has put this account in timeout, so giving up on this probe sync. %@
Probing the host at %@ to see if we have a good enough network connection. We'll wait up to %lf seconds.
Account "%@" couldn't reach the server at %@: %@
We were able to reach the server at %@. Continuing with the refresh
v12@?0i8
v8@?0
buddyDidFinishHandler
T@?,C,N,V_buddyDidFinishHandler
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/ReminderKit-107.1/DataAccess/ReminderKitAdditions/DADREMLocalDBWatcher.m
<Unknown File>
Someone registered themselves for the Reminders notification more than once.  Why?  Bad guy %@
<%@: %p - accountID: %@, displayName: %@, protocolVersion: %@>
account
T@"DAAccount",&,N,V_account
lastRetryTimeout
Td,N,V_lastRetryTimeout
syncWhenReachable
TB,N,V_syncWhenReachable
networkReachableBlock
T@?,C,N,V_networkReachableBlock
isWaitingForPassword
TB,N,V_isWaitingForPassword
isMonitoring
TB,N,V_isMonitoring
trustHandler
T@"DATrustHandler",R,N
rem_localDBWatcher
T@"DADREMLocalDBWatcher",&,N
addressBook
T^v,R,N,V_addressBook
activeAgentsQueue
Reminders/DataAccess
AccountInformation.plist
DAAgentClass
Identifier
com.apple.eas.account
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/ReminderKit-107.1/DataAccess/DataAccess/DADAgentManager.m
When clearing orphaned stores, we have an account with no accountID.  That's bad.  account: %@
com.apple.dataaccess.ctdatapolicychangeq
com.apple.dataaccessd
v24@?0^{__CFString=}8^{__CFDictionary=}16
kCTPerAppNetworkDataAccessPolicyChangedNotification
com.apple.notifyd.matching
v16@?0@"NSObject<OS_xpc_object>"8
PCPreferencesDidChangeNotification
v16@?0@"DAAgent"8
disableMonitoringAgents
PastBuddy: %@
=======
XXX: startAgentsWhenSystemReadyBlock is non-nil
=======
Somebody isn't maintaining their account setup correctly
subCalHandlers
T@"NSMutableArray",&,N,V_subCalHandlers
nextDisableMonitoringAgentsToken
TQ,N,V_nextDisableMonitoringAgentsToken
disableMonitoringAgentsTokens
T@"NSMutableDictionary",R,N,V_disableMonitoringAgentsTokens
activeAgents
T@"NSArray",R,N
Library/Preferences/com.apple.dataaccess.activesync
DA-Blocking Task
LogoutReceived
com.apple.language.changed
com.apple.purplebuddy.LanguageResetReady
com.apple.crash_mover
com.apple.dataaccessd.dadOperation
com.apple.dataaccessd.dadHighAvailability
CFNETWORK_DIAGNOSTICS
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
userSwitchTasks
T@"NSArray",&,N,V_userSwitchTasks
Received notificaion "%@" indicating a language change.  Going to exit to pick up new locale support
<%@: %p> { Folder %@, hasRemoteChanges: %d, isInitialUberSync %d isResyncAfterConnectionFailed %d actions %@ }
folder
T@"DAFolder",&,N,V_folder
hasRemoteChanges
TB,N,V_hasRemoteChanges
isInitialUberSync
TB,N,V_isInitialUberSync
actions
T@"NSArray",&,N,V_actions
isResyncAfterConnectionFailed
TB,N,V_isResyncAfterConnectionFailed
isResyncAfterServerError
TB,N,V_isResyncAfterServerError
containsPostponedActions
TB,N,V_containsPostponedActions
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/ReminderKit-107.1/DataAccess/ReminderKitAdditions/DADREMShareResponseDelegate.m
finishWithError: should be implemented in the subclass
accountID
T@"NSString",&,N,V_accountID
finished
TB,N,V_finished
delegateID
T@"NSString",&,N,V_delegateID
remXPCCompletion
T@?,C,N,V_remXPCCompletion
@"NSString"16@?0@"DAAccount"8
MobileCalDAVAccount
calendarID
T@"NSString",&,N,V_calendarID
shareID
T@"NSString",&,N,V_shareID
com.apple.dataaccess
CardDAV-changehistory
os_log
T@"NSObject<OS_os_log>",R,N
contactStore
T@"CNContactStore",R,N,V_contactStore
com.apple.dataaccessd.darefresh.pcqueue
DARefreshManager enabled wrappers:
Topic "%@" {
DARefreshManager suspended wrappers:
DARefreshManager wrappers:
production
development
demo
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/ReminderKit-107.1/DataAccess/DataAccess/DARefreshManager.m
Couldn't come up with an env string for DAEnvString %@
com.apple.aps.remindd.dataaccess
com.apple.aps.remindd.dataaccess.dev
com.apple.aps.remindd.dataaccess.demo
1051051051051051051051051051051051051051051051051051051051051050
Delegate %@ tried to register for a nil topic.
enabledTopicWrappersByEnv
T@"NSMutableDictionary",&,N,V_enabledTopicWrappersByEnv
suspendedTopicWrappersByEnv
T@"NSMutableDictionary",&,N,V_suspendedTopicWrappersByEnv
wrappers
T@"NSMutableSet",&,N,V_wrappers
wrappersForDailyRefresh
T@"NSMutableSet",&,N,V_wrappersForDailyRefresh
dailyRefreshInitialized
TB,N,V_dailyRefreshInitialized
connection
T@"APSConnection",&,N,V_connection
apsConnections
T@"NSMutableDictionary",&,N,V_apsConnections
tokenRegistrationTimer
T@"NSTimer",&,N,V_tokenRegistrationTimer
pcQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_pcQueue
persistAPSAfterShutdown
TB,N,V_persistAPSAfterShutdown
com.apple.dataaccess.dataaccessd.dailyrefresh
%@?token=%@&key=%@
POST
User-Agent
wrapper
T@"DARefreshWrapper",W,N,V_wrapper
onBehalfOfBundleIdentifier
T@"NSString",&,N,V_onBehalfOfBundleIdentifier
token
T@"NSData",W,N,V_token
pushKey
T@"NSString",W,N,V_pushKey
hsa2Session
T@"AKAppleIDSession",&,N,V_hsa2Session
delegate
T@"<DATokenRegistrationDelegate>",W,N,V_delegate
request
T@"NSMutableURLRequest",&,N,V_request
session
T@"NSURLSession",&,N,V_session
task
T@"NSURLSessionDataTask",&,N,V_task
rem_userNotificationPresentingProvider
T@"<DADREMUserNotificationPresentingProvider>",&,N
com.apple.remindd.dataaccess.retry.%@
Push
Poll
Manual
UNKNOWN!
com.apple.remindd.dataaccess.fetch.%@
<DARefreshWrapper 
 for delegate %@
: Push state %d, style %@
, last registration: %@
, %ld outstanding token registrations
tokenRegistrations
T@"NSMutableSet",&,N,V_tokenRegistrations
refreshReason
Ti,N,V_refreshReason
refreshCollections
T@"NSMutableSet",&,N,V_refreshCollections
fetchInterval
Tq,N,V_fetchInterval
T@"<DARefreshManagerDelegate>",W,N,V_delegate
pushState
Ti,N,V_pushState
pushRegistrationTime
T@"NSDate",&,N,V_pushRegistrationTime
curStyle
Ti,N,V_curStyle
rem_storeProvider
T@"<DADREMStoreProvider>",&,N
%@Probe
optionsProbe
T@"CoreDAVOptionsTask",&,N,V_optionsProbe
optionsTimeoutTimer
T@"NSTimer",&,N,V_optionsTimeoutTimer
unregisterClientWithIdentifier: is abstract
registerClientWithIdentifier: is abstract
identifiersOfAllRegisterdClients: is abstract
DaemonAdditions
DADBuddyStateObserver
DADREMLocalDBWatcher
DAAgent
DARefreshManagerDelegateSupport
REMLocalDBWatcher
DADaemonPowerAssertionManager
_DAChangeHistoryABLegacyClerk
DADAgentManager
DADMain
UMUserSwitchStakeholder
NSObject
DATransactionMonitorDelegate
DAFolderSyncRequest
DADREMXPCPerformerDelegate
DADREMShareResponseDelegate
DAEventsCalendarSharingResponseConsumer
_DAChangeHistoryContactsClerk
DARefreshManager
DATokenRegistrationRequest
NSURLSessionDelegate
NSURLSessionTaskDelegate
NSURLSessionDataDelegate
REMUserNotificationPresentingProvider
DARefreshWrapper
DATokenRegistrationDelegate
REMStoreProvider
DACoreDAVAgent
DABabysittable
DAChangeHistoryClerk
deviceWillSleep
deviceDidWake
init
stopWithAssertQueue:
dealloc
isRunning
UTF8String
buddyDidFinish
createPeriodicPollingTimer
checkBuddyStatus
hasPassedBuddy
stop
buddyDidFinishHandler
isSetupUser
initWithQueue:
start
.cxx_destruct
setBuddyDidFinishHandler:
_buddyStatePollingTimer
_queue
_notifyToken
_buddyDidFinishHandler
mapTableWithWeakToStrongObjects
objectForKey:
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
copy
setObject:forKey:
removeObjectForKey:
transactionId
objectEnumerator
nextObject
sharedDBWatcher
registerConcernedRemindersParty:withChangedBlock:
removeConcernedRemindersParty:
remindersDatabaseDidChange
_concernedRemindersPartyToBlockMap
setAccount:
addToCoreDAVLoggingDelegates
account
trustHandler
stateString
name
isEqualToString:
userInfo
objectForKeyedSubscript:
boolValue
syncWhenReachable
networkReachableBlock
setSyncWhenReachable:
setNetworkReachableBlock:
sharedNetworkObserver
_reachabilityChanged:
addNetworkReachableObserver:selector:
removeNetworkReachableObserver:
setIsMonitoring:
allKeys
monitorFoldersWithIDs:
resumeMonitoringFoldersWithIDs:
shutdown
removeFromCoreDAVLoggingDelegates
accountID
accountDescription
protocolVersion
stringWithFormat:
initWithAccount:
observeReachabilityWithBlock:
stopObservingReachability
startMonitoring
monitorFoldersWithSyncKeyMap:
resumeMonitoringFoldersWithSyncKeyMap:
requestAgentStopMonitoringWithCompletionBlock:
refreshFolderListRequireChangedFolders:isUserRequested:
syncFolderIDs:forDataclasses:isUserRequested:
processMeetingRequestDatas:deliveryIdsToClear:deliveryIdsToSoftClear:inFolderWithId:callback:
getDAAccount
description
isMonitoring
lastRetryTimeout
setLastRetryTimeout:
isWaitingForPassword
setIsWaitingForPassword:
_isMonitoring
_syncWhenReachable
_isWaitingForPassword
_account
_lastRetryTimeout
_networkReachableBlock
saveXpcActivity:
sharedInstance
backingAccountInfo
agentClassForACAccount:
agentClass
rem_localDBWatcher
setRem_localDBWatcher:
addressBook
asSource
initWithAddressBook:
unregisterClientWithIdentifier:forContainer:
registerClientWithIdentifier:forContainer:
identifiersOfAllRegisterdClients
_addressBook
sharedRunLoop
getCFRunLoop
count
activeAgents
countByEnumeratingWithState:objects:count:
objectAtIndexedSubscript:
stringByAppendingPathComponent:
defaultManager
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
array
rem_storeProvider
rem_storeForDataAccess
dictionary
_leafAccountTypes
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
identifier
isEnabledToSyncDataclass:
accountProperties
valueForKey:
fetchAccountsWithExternalIdentifiers:error:
localizedDescription
daemonAppropriateAccountClassForACAccount:
alloc
initWithBackingAccountInfo:
addObject:
sharedKeychain
removePersistentCredentials
isDisabled
_accountInfoPath
initWithContentsOfFile:
containsObject:
sharedConnection
applyRestrictionDictionary:clientType:clientUUID:localizedClientDescription:localizedWarningMessage:outRestrictionChanged:outEffectiveSettingsChanged:outError:
removeOrphanedClientRestrictionsWithCompletion:
persistentUUID
dictionaryWithObjects:forKeys:count:
writeToFile:atomically:
sharedManager
_deviceDidWake
_deviceWillSleep
stopMonitoringFoldersWithIDs:
suspendMonitoringFoldersWithIDs:
isInHoldingPattern
orphanCheckEnabled
rem_supportsClearingOrphanedStores
accountTypeWithAccountTypeIdentifier:error:
accountsWithAccountType:options:error:
isEnabledForDataclass:
fetchAccountsWithError:
rem_saveRequestForDataAccess
externalIdentifier
type
updateAccount:
removeFromStore
saveSynchronouslyWithError:
unregisterForBuddy
disableMonitoringAgentsTokens
removeAllObjects
_loadAndStartMonitoringAgents
sharedMain
_handleCellularDataUsageChangedNotification
addToOperationsQueueDisabledCheckAndGoBlock:wrappedBlock:
onBehalfOfBundleIdentifier
enabledDataclassesBitmask
updateContentsOfAllFoldersForAccountID:andDataclasses:isUserRequested:
loadAgents
_clearOrphanedStores
keychainAccessibilityType
password
pushPreferenceDidChange
establishAllApsConnections
_registerForCTDataUsageNotificaiton
_systemMayNowBeReady
registerForBuddy
_resetMonitoringRequestsAndLoadAgents
mutableCopy
removeObject:
saveAndReleaseAgents
numberWithUnsignedInteger:
_addAccountAggdEntries
nextDisableMonitoringAgentsToken
setNextDisableMonitoringAgentsToken:
initWithLabel:
setObject:forKeyedSubscript:
_stopMonitoringAndSaveAgents
enabledForAnyDADataclasses:
initWithCapacity:
accountTypeIdentifier
numberWithBool:
stringByAppendingString:
sharedPowerAssertionManager
sharedBabysitter
statusReport
waiterID
accountWithIDShouldContinue:
setSyncingAllowed:
setProtocolVersion:
resetStatusReport
arrayWithCapacity:
dictionaryRepresentation
initWithObjects:
intersectsSet:
enabledDataclasses
_hasDataclassWeCareAbout:
agentWithAccountID:
accountWithAccountID:
accountWithAccountID:andClassName:
_configFileForAgent:
currentPolicyKeyForAccount:
requestPolicyUpdateForAccount:
startMonitoringAccountID:syncKeyMap:
stopMonitoringAccountID:folderIDs:
suspendMonitoringAccountID:folderIDs:
resumeMonitoringAccountID:syncKeyMap:
enableMonitoringAgentsWithToken:
disableMonitoringAgents
updateFolderListForAccountID:andDataclasses:requireChangedFolders:isUserRequested:
updateContentsOfFolders:forAccountID:andDataclasses:isUserRequested:
updateContentsOfAllFoldersForAccountIDs:
activeAccountBundleIDs
hasEASAccountConfigured
processMeetingRequestDatas:deliveryIdsToClear:deliveryIdsToSoftClear:inFolderWithId:forAccountWithId:callback:
getStatusReportDictsWithCompletionBlock:
addPendingAccountSetup
removePendingAccountSetup
hasPendingAccountSetup
hasActiveAccounts
enableActiveSync
disableActiveSync
upgradeAccountsInSimulator
subCalHandlers
setSubCalHandlers:
_activeAgents
_activeAgentsQueue
_watchedIDs
_pmNotifier
_pmPort
_pmRunLoopSource
_startAgentsWhenSystemReadyBlock
_CTCellularUsagePolicyNotificationQ
_ctServerConnection
_pendingAccountSetupCount
_buddyStateObserver
_subCalHandlers
_nextDisableMonitoringAgentsToken
_disableMonitoringAgentsTokens
fileSystemRepresentation
sharedTransactionMonitor
transactionCount
setPersistAPSAfterShutdown:
shutdownDAD
disable
userSwitchTasks
bundleID
_setRunLoopStopped:
_shutdownDaemon
invalidate
dateWithTimeIntervalSinceNow:
_forceShutdownTimerFired:
initWithFireDate:interval:target:selector:userInfo:repeats:
mainRunLoop
addTimer:forMode:
taskWithName:reason:forBundleID:
begin
arrayWithObjects:count:
setUserSwitchTasks:
setTransactionMonitorDelegate:
_forceShutdownDaemonOnLogoutInTimeInterval:
addSignalHandler
registerUserSwitchStakeHolder:
addLanguageChangeHandler
isDatabaseMigrated
isAppleInternalInstall
CFNetworkLogging
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
willSwitchUser
didFinishAllXPCTransactions
waitForSystemAvailabilityWithCompletionBlock:completionQueue:
_configureAggdLogging
_delayedShutdownTimer
_forceShutdownTimer
_runLoopStoppedRef
_userSwitchTasks
setFolder:
setHasRemoteChanges:
setIsInitialUberSync:
setIsResyncAfterConnectionFailed:
setIsResyncAfterServerError:
folder
hasRemoteChanges
isInitialUberSync
isResyncAfterConnectionFailed
actions
initWithFolder:hasRemoteChanges:isInitialUberSync:
setActions:
isResyncAfterServerError
containsPostponedActions
setContainsPostponedActions:
_hasRemoteChanges
_isInitialUberSync
_isResyncAfterConnectionFailed
_isResyncAfterServerError
_containsPostponedActions
_folder
_actions
setAccountID:
da_newGUID
setDelegateID:
initWithAccountID:
finishWithError:
finished
setFinished:
delegateID
remXPCCompletion
setRemXPCCompletion:
_finished
_accountID
_delegateID
_remXPCCompletion
setCalendarID:
respondToShareRequestForCalendar:withResponse:consumer:
_doResponseWithBlock:
reportShareRequestAsJunkForCalendar:consumer:
setShareID:
errorWithDomain:code:userInfo:
shareID
domain
code
cancelShareResponseInstance:error:
shareResponseFinishedWithError:
initWithAccountID:calendarID:
respondToShareRequestWithResponse:
reportAsJunk
calendarID
_calendarID
_shareID
asContainer
os_log
contactStore
unregisterChangeHistoryClientIdentifier:forContainerIdentifier:error:
registerChangeHistoryClientIdentifier:forContainerIdentifier:error:
initWithContactStore:
_contactStore
_tearDownAllApsConnections
setDelegate:
string
appendString:
allValues
appendFormat:
_apsEnvStringForDAEnvString:
_portNameForEnvironmentName:
initWithEnvironmentName:namedDelegatePort:queue:
APSEnv
setEnabledTopics:
da_dataWithHexString:
delegate
pushState
pushRegistrationTime
timeIntervalSinceNow
performTokenRegistrationRequestsWithToken:onBehalfOf:
_connectionForEnv:
_registerAPSTopicsForDelegates:withConnection:
_registerAPSTopics
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
scheduleIdentifier
_currentTruePCStyleForDelegate:
setPushState:
startFetchActivityForPush
_enabledTopicsForWrapper:
setPushRegistrationTime:
startFetchActivityForSystemPCStyle
_suspendedTopicsForWrapper:
curStyle
_resumeTopicsForSuspendedDelegate:
isSetToSystemFetchInterval
_suspendTopicsForDelegate:
setCurStyle:
setWithObject:
watchedCollections
refreshCollections:withReason:
_refreshWrapperForDelegate:
_unregisterTopicLocked:forDelegate:inEnvironment:
stopCollectionsRefresh
dailyRefreshActivityFired
_dailyRefreshActivityFired
connection:didReceivePublicToken:
_wrapperIsSuspended:
_fakeTokenReceive
performSelector:withObject:afterDelay:
_unregisterWrapper:forTopic:inTopicDictionary:
addObjectsFromArray:
_tearDownAPS
retryCollections:after:reason:
_overriddenPCStyleForWrapper:
_pushRegistrationForDelegateFailed:
connection:didReceiveMessageForTopic:userInfo:
_performBlockOnRefreshManagerThread:
registerDelegate:
unregisterDelegate:
startDailyRefreshActivityForWrapper:
endDailyRefreshActivityForWrapper:
registerTopic:forDelegate:inEnvironment:
unregisterTopic:forDelegate:inEnvironment:
delegateDidCompleteRefresh:
retryRefreshForDelegate:withCollections:after:originalRefreshReason:
pushTokenForEnvironment:
persistAPSAfterShutdown
enabledTopicWrappersByEnv
setEnabledTopicWrappersByEnv:
suspendedTopicWrappersByEnv
setSuspendedTopicWrappersByEnv:
wrappers
setWrappers:
wrappersForDailyRefresh
setWrappersForDailyRefresh:
dailyRefreshInitialized
setDailyRefreshInitialized:
connection
setConnection:
apsConnections
setApsConnections:
tokenRegistrationTimer
setTokenRegistrationTimer:
pcQueue
setPcQueue:
_persistAPSAfterShutdown
_dailyRefreshInitialized
_enabledTopicWrappersByEnv
_suspendedTopicWrappersByEnv
_wrappers
_wrappersForDailyRefresh
_connection
_apsConnections
_tokenRegistrationTimer
_pcQueue
setWrapper:
setToken:
setPushKey:
setOnBehalfOfBundleIdentifier:
initWithToken:pushKey:wrapper:onBehalfOf:
session
invalidateAndCancel
setTask:
setRequest:
wrapper
tokenRegistrationRequest:finishedWithError:
_handleAuthenticationChallenge:completionHandler:
finishTasksAndInvalidate
statusCode
date
cancelFetchActivity
allHeaderFields
bytes
length
initWithBytes:length:encoding:
protectionSpace
authenticationMethod
previousFailureCount
proposedCredential
_canAuthenticateAgainstProtectionSpace:
_reallyHandleAuthenticationChallenge:completionHandler:
username
credentialWithUser:password:persistence:
handleTrustChallenge:forAccount:completionHandler:
serverTokenRegistrationURL
token
da_lowercaseHexStringWithoutSpaces
absoluteString
stringByAddingPercentEscapes
pushKey
URLWithString:
requestWithURL:cachePolicy:timeoutInterval:
request
setHTTPMethod:
setValue:forHTTPHeaderField:
getAppleIDSession
defaultSessionConfiguration
set_appleIDContext:
set_sourceApplicationBundleIdentifier:
setURLCache:
setDiscretionary:
sessionWithConfiguration:delegate:delegateQueue:
setSession:
dataTaskWithRequest:
task
resume
requestWithToken:pushKey:wrapper:onBehalfOf:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
cancel
sendRegistrationRequestForAccount:
hsa2Session
setHsa2Session:
_delegate
_wrapper
_onBehalfOfBundleIdentifier
_token
_pushKey
_request
_session
_task
_hsa2Session
rem_userNotificationPresentingProvider
setRem_userNotificationPresentingProvider:
setTokenRegistrations:
retryActivityIdentifier
cancelRetryActivity
cancelDailyRefreshActivity
cancelAllTokenRegistrations
fetchActivityIdentifier
fetchInterval
_fetchActivityCriteriaWithInterval:
_fetchActivityCriteriaInOnPowerMode
XPCActivityIntervalFromSystemSetting
setFetchInterval:
startFetchActivityWithInterval:
_stringForStyle:
tokenRegistrations
startDailyRefreshActivity
refreshCollections
refreshReason
setRefreshReason:
setRefreshCollections:
_retryActivityFired
_pushState
_curStyle
_refreshReason
_pushRegistrationTime
_tokenRegistrations
_refreshCollections
_fetchInterval
setRem_storeProvider:
optionsTimeoutTimer
setOptionsTimeoutTimer:
_cancelOptionsTimer
finishCoreDAVTaskWithError:
taskManager
activeModalTask
principalURL
defaultDAVProbeTimeout
optionsProbe
setOptionsProbe:
registerAccount:forOperationWithName:
initWithURL:
setAccountInfoProvider:
error
host
unregisterAccount:forOperationWithName:
setCompletionBlock:
_serverProbeTimedOut
submitQueuedCoreDAVTask:
_probeAndSyncWithBlock:
_optionsProbe
_optionsTimeoutTimer
exceptionWithName:reason:userInfo:
clerkWithContactStore:
clerkWithAddressBook:
v16@0:8
B16@0:8
@24@0:8@16
v20@0:8B16
@?16@0:8
v24@0:8@?16
@"NSObject<OS_dispatch_source>"
@"NSObject<OS_dispatch_queue>"
@16@0:8
v32@0:8@16@?24
v24@0:8@16
@"NSMapTable"
B24@0:8@16
v24@0:8B16B20
v36@0:8@16q24B32
v56@0:8@16@24@32@40@?48
d16@0:8
v24@0:8d16
@"DAAccount"
#16@0:8
@24@0:8^v16
v32@0:8@16@24
^v16@0:8
@32@0:8@16@24
B32@0:8@16@24
v24@0:8Q16
Q16@0:8
B40@0:8@16q24B32B36
B44@0:8@16@24q32B40
B36@0:8@16q24B32
v64@0:8@16@24@32@40@48@?56
@"NSArray"
@"NSMutableDictionary"
^{IONotificationPort=}
^{__CFRunLoopSource=}
^{__CTServerConnection=}
@"DADBuddyStateObserver"
@"NSMutableArray"
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v20@0:8i16
v32@0:8@?16@?24
v32@0:8@?16@24
@"NSTimer"
@32@0:8@16B24B28
@"DAFolder"
@"NSString"
v24@0:8@"NSError"16
v24@0:8q16
@"CNContactStore"
i24@0:8@16
v40@0:8@16@24@32
v44@0:8@16@24d32i40
@"NSMutableSet"
@"APSConnection"
@48@0:8@16@24@32@40
v40@0:8@16@24@?32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@"<DATokenRegistrationDelegate>"
@"DARefreshWrapper"
@"NSData"
@"NSMutableURLRequest"
@"NSURLSession"
@"NSURLSessionDataTask"
@"AKAppleIDSession"
v32@0:8@"DATokenRegistrationRequest"16@"NSError"24
r*16@0:8
@20@0:8i16
q16@0:8
@24@0:8q16
v28@0:8@16i24
v36@0:8@16d24i32
i16@0:8
@"<DARefreshManagerDelegate>"
@"NSDate"
@"CoreDAVOptionsTask"
