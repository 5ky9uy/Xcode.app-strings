[%@] region: %@  language: %@  URL: %@  description: %@
region
language
URLString
calendarDescription
%@.%@.%u
Users
Groups
Resources
Locations
DataAccessMonitoredFolderUpdated
DataAccessMonitoringConnectionFailed
<%@: %p> Account ID: %@, data class: %ld
-[DADownloadContext initWithAttachmentUUID:accountID:queue:downloadProgressBlock:completionBlock:]
DADConnection.m
attachmentUUID
accountID
v8@?0
-[DASharedCalendarContext initWithCalendarID:accountID:queue:completionBlock:]
calendarID
v16@?0@"<DAESubscribedCalendarDownloadDelegate>"8
v16@?0@"NSObject<OS_xpc_object>"8
B24@?0r*8@"NSObject<OS_xpc_object>"16
root
<redacted>
-[DADConnection watchFoldersWithKeys:forAccountID:persistent:]
-[DADConnection resumeWatchingFoldersWithKeys:forAccountID:]
-[DADConnection suspendWatchingFoldersWithKeys:forAccountID:]
-[DADConnection stopWatchingFoldersWithKeys:forAccountID:]
start
stop
-[DADConnection _requestDaemonChangeAgentMonitoringStatus:withToken:waitForReply:]
-[DADConnection handleAccountChange:callback:]_block_invoke
v16@?0@"NSDictionary"8
-[DADConnection statusReports]_block_invoke
update
retrieve
v24@?0@"NSString"8@"NSString"16
v32@?0@"NSString"8@"NSArray"16^B24
Should never call -init on DADConnection.  Use +sharedConnection... instead.
com.apple.dataaccess.muckingWithConn
com.apple.dataaccess.muckingWithInFlightCollections
UIApplicationWillEnterForegroundNotification
ESDConnection
Class getESDConnectionClass(void)_block_invoke
Unable to find class %s
void *ExchangeSyncExpressLibrary(void)
title
notes
color
refreshInterval
subscriptionID
subscriptionURL
subscriptionICSData
oofState:%d startTime:%@ endTime:%@ message:%@ externalState:%d externalMessage:%@
en_US_POSIX
yyyy'-'MM'-'dd'T'HH':'mm':'ss'.000Z'
DAErrorDomain
SubCalURLRequestErrorDomain
SubCalRefreshTaskError
SubCalValidationTaskError
DAUnderlyingStatusCodeKey
com.apple.dataaccess.dataaccessd
DAAccountConfigChanged
com.apple.dataaccess.dataaccessd.shutdown
DAChangedFolders
DAChangedAccountID
ASPolicyKey
ASPolicyErrorKey
ASPolicyErrorCodeKey
ASPolicyKeyChangedNotification
ASClientAccountDumpStatusNotification
kDAEMessageNameKey
kDAEMeetingRequestDatasKey
kDAEMeetingRequestIdsToClearKey
kDAEMeetingRequestIdsToSoftClearKey
kDAEMonitoredFolderIdsAddedKey
kDAEMonitoredFolderIdsDeletedKey
kDAEMonitoredFolderIdsTagKey
kDAEAccountIdKey
kDAEInvalidAccountIDKey
kDAEPolicyKeyKey
kDAEPolicyErrorCodeKey
kDAEStatusKey
kDAESearchIDKey
kDAESearchQueryKey
kDAESearchResultsKey
kDAEStatusReportsKey
kDAEDataclassesBitmaskKey
kDAEFolderIDKey
kDAEFolderNameKey
kDAEFolderIDsKey
kDAEFolderSyncItemsCountKey
kDAEPersistentMonitoringKey
kDAEIsUserRequestedKey
kDAERequireChangedFoldersKey
kDAEURLStringKey
kDAEFolderChangeDataKey
kDAETaskIDKey
kDAEErrorDataKey
kDAEAttachmentUUIDKey
kDAEAttachmentDownloadIdKey
kDAEAttachmentIdsKey
kDAEDownloadedBytesKey
kDAEUploadedBytesKey
kDAETotalBytesKey
kDAESharedCalendarReponseTypeKey
kDAESharedCalendarResponseCalendarIDKey
kDAESharedCalendarActionIdKey
kDAEOfficeHoursDataKey
kDAEOfficeHoursRequestIdKey
kDAEAgentMonitoringNeedsReply
kDAEAgentMonitoringToken
kDAEHandleAccountChangeDataKey
kDAEActiveSyncDeviceIdentifierKey
kDAEOofSettingsRequestKey
kDAEOofSettingsResultKey
kDAEOofIsUpdateKey
kDAEOofRequestIDKey
kDAEIsOofSupportedKey
kDAEStartDateKey
kDAEEndDateKey
kDAEIgnoredEventIDKey
kDAEAddressesKey
kDAECalendarAvailabilityRequestIDKey
kDAECalendarAvailabilityResultsKey
kDAEGrantedDelegatesListRequestIDKey
kDAEGrantedDelegatesListResultsKey
kDAEGrantedDelegateKey
kDAEUpdateGrantedDelegatePermissionRequestIDKey
kDAESubCalDownloadURLKey
kDAESubCalDownloadRequestIDKey
kDAESubCalDownloadSummaryDataKey
kDAESubCalUsernameKey
kDAESubCalPasswordKey
kDAECalendarDirectorySearchTermsKey
kDAECalendarDirectorySearchRecordTypesKey
kDAECalendarDirectorySearchResultLimitKey
kDAECalendarDirectorySearchIDKey
kDAECalendarDirectorySearchResultsKey
kDAECalendarDirectorySearchExceededResultLimitKey
kDAEGroupExpansionIDKey
kDAEGroupExpansionPrincipalPathKey
kDAEAccountServerHostKey
kDAEAccountServerPortKey
kDAEAccountServerUseSSLKey
kDAEAccountOwnerAddressesKey
kDAEAccountOwnerPreferredAddressKey
kDAEBeginMonitoringFolders
kDAEStopMonitoringFolders
kDAEResumeMonitoringFolders
kDAESuspendMonitoringFolders
kDAEStartMonitoringAgents
kDAEStopMonitoringAgents
kDAEHandleAccountChange
kDAEGetCurrentPolicyKey
kDAERequestPolicyUpdate
kDAERequestFolderContentsUpdate
kDAERequestAllFolderContentsUpdate
kDAERequestFolderListUpdate
kDAEOpenServerContactsSearch
kDAECancelServerContactsSearch
kDAEProcessMeetingRequests
kDAEAsyncProcessMeetingRequests
kDAEResetCertWarnings
kDAESetFolderIdsThatExternalClientsCareAbout
kDAEReportFolderItemsSyncResult
kDAEHandleURL
kDAEProcessFolderChange
kDAERemoveStoresForAccountWithID
kDAEGetStatusReports
kDAERegisterForInterrogation
kDAEResetThrottleTimers
kDAEBeginDownloadingAttachment
kDAECancelDownloadingAttachment
kDAERespondToSharedCalendar
kDAEReportSharedCalendarAsJunk
kDAEFetchOfficeHours
kDAESetOfficeHours
kDAEFillOutEASTimeZoneInfo
kDAEGetActiveSyncDeviceIdentifier
kDAEOofSettings
kDAEIsOofSettingsSupported
kDAERequestCalendarAvailability
kDAECancelCalendarAvailabilityRequest
kDAEPerformCalendarDirectorySearch
kDAECancelCalendarDirectorySearch
kDAEPerformGroupExpansion
kDAERequestCalendarExternalIdentification
kDAERequestGrantedDelegatesList
kDAECancelGrantedDelegatesListRequest
kDAEUpdateGrantedDelegatePermissionRequest
kDAEDownloadSubscribedCalendar
kDAECancelDownloadSubscribedCalendar
kDAESetPasswordForSubscribedCalendar
kDAEReportSubscribedCalendarAsJunk
kDAECheckSubscribedCalendarIsJunk
kDAECheckSubscribedCalendarIsJunkIdKey
kDAECheckSubscribedCalendarJunkStatusKey
kDAECheckSubscribedCalendarIsJunkFinished
kDAEFetchHolidayCalendars
kDAEFetchHolidayCalendarsIdKey
kDAEFetchHolidayCalendarsReturnedResults
kDAEFetchHolidayCalendarsResultsKey
kDAEFetchHolidayCalendarsResults_FetchResultsKey
kDAEFetchHolidayCalendarsFinished
kDAEFetchHolidayCalendarsRetryThrottleTime
kDAEManageCalDAVServerSimulator
kDAEFoldersUpdated
kDAEPolicyKeyChanged
kDAELogDataAccessStatus
kDAEServerContactsSearchQueryFinished
kDAEFolderChangeFinished
kDAEGetStatusReportsFromClient
kDAEAttachmentDownloadProgress
kDAEAttachmentDownloadFinished
kDAECalendarShareResponseFinished
kDAEOfficeHoursRequestFinished
kDAEOofSettingsFinished
kDAECalendarAvailabilityRequestReturnedResults
kDAECalendarAvailabilityRequestFinished
kDAEGrantedDelegatesListRequestFinished
kDAEUpdateGrantedDelegatePermissionRequestFinished
kDAECalendarDirectorySearchReturnedResults
kDAECalendarDirectorySearchFinished
kDAEGroupExpansionFinished
kDAEDownloadSubscribedCalendarProgress
kDAEDownloadSubscribedCalendarFinished
kDAEDownloadSubscribedCalendarPasswordRequired
TEXT
HTML
kDASettingsOofKey
kDASettingsOofStateKey
kDASettingsStartTimeKey
kDASettingsEndTimeKey
kDASettingsOofMessagesKey
kDASettingsAudienceKey
kDASettingsEnabledKey
kDASettingsReplyMessageKey
kDASettingsBodyTypeKey
kDASettingsOofInternalMessageKey
kDASettingsOofExternalStateKey
kDASettingsOofExternalMessageKey
kDAEServerSimulatorHostnameKey
kDAEServerSimulatorActionKey
kDAEServerSimulatorActionBegin
kDAEServerSimulatorActionEnd
logName
logDirectory
maxLogFileSize
maxLogFileCount
wantsCompressedFiles
consoleUsesRealLevels
maxConsoleLevel
maxLogFileLevel
createFileLogFormatBlock
createConsoleLogFormatBlock
createLogFormatBlock
didCreateNewFileBlock
willLogToConsoleBlock
willLogToFileBlock
consoleLevelDefaultsDomain
consoleLevelDefaultsKey
logFileLevelDefaultsDomain
logFileLevelDefaultsKey
enableNewlines
DACPLoggingAddCustomLogConfiguration
DACPLogging.m
facilityStrings
CFArrayGetCount(facilityStrings)
CFNumberGetValue(maxLogFileSizeObj, kCFNumberSInt64Type, &maxLogFileSize)
CFNumberGetValue(maxLogFileCountObj, kCFNumberSInt32Type, &maxLogFileCount)
CFNumberGetValue(maxConsoleLevelObj, kCFNumberSInt32Type, &maxConsoleLevel)
CFNumberGetValue(maxLogFileLevelObj, kCFNumberSInt32Type, &maxLogFileLevel)
maxLogFileSize >= -2
maxLogFileCount >= -2
maxConsoleLevel >= -2
maxLogFileLevel >= -2
.GlobalPreferences
DACPLoggingUnobfuscate
com.apple.DACPLogging.callbackQueue
_maxLogFileLevel
settings != globalSettings
_maxLogFileSize
_maxLogFileCount
_wantsCompressedFiles
_enableNewlines
com.apple.DACPLogging.workQueue
_workQueueSlurpToFileUUID
slurpeeChars
UTF-16 Bytes: 
%04x 
pid_%d
%@/Library/Logs/CrashReporter/DataAccess
com.apple.managedconfiguration.defaultsdidchange
v12@?0i8
com.apple.AppSupport.loggingDefaultsChanged
com.apple.DACPLogging.recomputeQueue
com.apple.DACPLogging.configurationQueue
_maxConsoleLevel
DAShouldLogPassword
DALoggingwithCategory
DALogging.m
category < DACategoryCount
com.apple.dataaccess
CalDAV
LDAP
PubCal
SubCal
CardDAV
IMAPNotes
CoreDAV
Accounts
General
dataaccess
DAOutputLevel
DALogLevel
DAAccountMigration
^{__CFString=}76@?0i8^{__CFDate=}12^{__CFString=}20^{__CFString=}28r*36r*44Q52^v60^{__CFString=}68
Unknown
Emerg
Alert
Crit 
Error
Warn 
Note 
Info 
Debug
%@|%@|%d|%p|%@|%@|%s|%s:%lu| %@
%@|%@|%d|%p|%@|%@|%@
%p|%@|%@|%s|%s:%lu| %@
%p|%@|%@|%@
Could not create a date formatter
yyyy-MM-dd HH:mm:ss.SSS
IMAP
EASPARSING
displayName
preferredUserAddress
permission
_????_??_??_??_??_???????.log
_????_??_??_??_??_???????.log.gz
%@%@
%@/%s
q24@?0@8@16
%@/.%@
%@/%@_%@.log
%@/%@-latest.log
mobile
private
Library
Logs
fileOpsQueue
yyyy_MM_dd_HH_mm_ssZZZ
ChangeType
AccountIdentifier
AccountTypeIdentifier
OldAccountProperties
Username
Password
OldUsername
OldPassword
ModifiedDataClasses
ClientName
<DAAccountChangeInfo: changeType = %@, accountIdentifier = %@, accountTypeIdentifier = %@, oldAccountProperties = %@, username = %@, password = %@, oldUsername = %@, oldPassword = %@, modifiedDataClasses = %@, clientName = %@>
<keys = %@>
<%d values>
Delete
Modify
CalDAVAccountModifiedByDataAccess
<DASearchQuery %p>: "%@" range: {%ld, %ld}, timeLimit: %d
<DASearchQuery %p>: range: {%ld, %ld}, timeLimit: %d
DAAccountSavePreflighted
DAAccountDoNotSaveReason
kDAAccountIdentifiersToIgnoreForUniquenessCheck
DAAccountPrincipalPath
SubscribedCalendars
com.apple.ical.urlsubscribe.filteralarms
subscription_url
SubCalInsecureConnectionApproved
DACardDAVAccountDSID
SearchResultsData
<%@ %p> %@ %@ (%@): %@
DisplayNameKey
FirstNameKey
LastNameKey
EmailAddressKey
WorkPhoneKey
MobilePhoneKey
CompanyKey
TitleKey
AliasKey
HomePhoneKey
OfficeKey
ServerSourceKey
RecordNameKey
FaxPhoneKey
DepartmentKey
StreetKey
CityKey
StateKey
ZipKey
CountryKey
JpegPhotoKey
ImServiceKey
ImUsernameKey
UriKey
BuildingNameKey
AppleFloorKey
PagerNumberKey
PostalAddressKey
HomePostalAddressKey
PrincipalPathKey
PreferredUserAddressKey
CUAddressesKey
IPhone
MainPhone
WorkFaxPhone
IdentifierOnServerKey
enabled
startDay
endDate
com.apple.calendar.DataAccessExpress
CalDAVOfficeHour
%@ <%p> {%@, %@, %@}
disabled
CalDAVOfficeHour.m
Office hours array must contain seven items
SearchString
RangeLoc
RangeLength
TimeLimit
ContactSearchBase
ContactSearchScope
ContactSearchIncludePhotos
MessageSearchCollectionID
MessageSearchBodyType
MessageSearchTruncationSize
MessageSearchAllOrNone
MessageSearchPriorToDate
MessageSearchMIMESupport
MessageSearchDeepTraversal
MessageSearchRebuildResults
subject
from
participants
recipients
freetext
sent
received
attachment
hasattachment
category
isread
%@ %p: %@
DASRPersistentUUID
DASRDisplayName
DASRAccountType
DASRTimeSpan
DASRTimeInNetworking
DASRAverageHBI
DASRSuccessfulRequests
DASRFailedNetworkRequests
DASRFailedProtocolRequests
DASRUploadedElements
DASRDownloadedElements
DASRFalseMoreAvailableCount
DASRProtocolVersion
DASRSyncingAllowed
DASRLastSuccessNetworkRequestDate
DASRLastFailedNetworkRequestDate
DASRPingGoingOut
DASRPingReceivedNetworkTraffic
DASRPingNewDataWaitingToBeSynced
Please use the appropriate designated initializer for this class.
DAECalendarAvailabilitySpan.m
Invalid parameter not satisfying: %@
startDate != nil
endDate != nil
'startDate' must not be after 'endDate'
startDate: [%@] endDate: [%@], type: [%@]
startDate
type
Busy
Free
NoData
OutOfOffice
Tentative
Unavailable
[%@] displayName: [%@] preferredAddress: [%@] principalPath: [%@]
firstName
lastName
preferredAddress
principalPath
DAFolderChange.m
Only email folder manipulation is allowed at this time
Add change types require a parent id
Add change types require a display name
Modify change types require a folder id
Modify change types require a display name
Can't handle folder change type %ld
70FB9178-576E-4CAA-A08E-F68D57BFD01E
Don't push changes to the temp inbox
%@ %p: changeType %ld folderId %@ parentFolderId %@ displayName %@ dataclass %ld
Who does non-keyed coding nowadays?
DAFCChangeType
DAFCFolderId
DAFCParentFolderId
DAFCDisplayName
DAFCDataclass
DAFCRenameOnCollision
com.apple.dataaccess.BehaviorOptionsChanged
EASParsingLogEnabled
com.apple.DataAccess.BehaviorOptions
BehaviorOptions
com.apple.ManagedConfiguration.profileListChanged
GetOptionsIgnoresCommands
RefreshThrottleTime
IgnoreBadLDAPCerts
DefaultEASTaskTimeout
DAVProbeTimeout
WhitelistedEASProtocols
EnableCookies
multitasking
RemindersForAll
PromptForAllCerts
EnableServerTrustProcessing
CompressRequests
ThunderhillBeta
PerfLogging
CFNetworkLogging
APSEnv
DAAPSEnv
AllIMAPServersSupportNotesSearch
CompletelyIgnoreNotes
WriteOutBrokenCancelationRequests
SendMeCardEverywhere
DAInHoldingPattern
EnableAutomaticAttachmentDownloads
BabysitterEnabled
AlwaysUseCalendarHomeSync
UseContactsFramework
EarlyPingEnabled
CustomAutoDV2UserAgentEnabled
HolidayCalendarURL
https://caldav.icloud.com/.well-known/calendarsearchdav
HolidayCalendarRefreshInterval
ReleaseType
Internal
NumForgivable401s
OrphanCheckEnabled
Download of attachment UUID %@ for accountID %@ progress: %lld bytes of %lld
Download of attachment UUID %@ for account %@ completed.
Share of calendar ID %@ for account %@ completed.
Fetch of office hours for account %{public}@ completed.
Setting of office hours for account %{public}@ completed.
Removing ALL search queries
Failing all folder changes
Removing all attachment downloads
Removing all calendar availability lookups
Removing all granted delegates list requests
Removing all update-granted-delegate-permission requests
Removing all calendar search requests
Removing all group expansions
Removing all share requests
Removing all settings requests
Removing all office hours requests
Removing all subscribed calendar downloads
Remove all subscribed calendar junk checks
Remove all holiday calendar fetches
Daemon died, cleaning up.
LOOK AT ME!!!! dataaccessd couldn't be started.  We won't try again.  If you're seeing this, get ready for some pain
Couldn't create a connection to [%@]
Couldn't create a connection to endpoint: [%@]
Unable to read data to decode error: %@
Swallowing decoder exception of %@, treating as null data
Received request ID [%@] for request with attributes: [%@].  Associated context: [%@]
Malformed callback message from dataaccess daemon: bad account id (%@)
Malformed callback message from dataaccess daemon: no folders (%@)
doServerContactsSearchQueryFinishedWithStatus called back with status %@
Removing query %@ for key %@
Unable to read data to decode search results: %@
Could not deserialize search results from the xpc message
Search results: %@
received results for an unknown search query
folderChange finished with status %@, error %@
Removing folder change %@ for key %@
received results for an unknown folderChange
_oofSettingsRequestsFinished called back with status %@
Removing from inflight dictionary: oof settings request %@ for key %@
Oof settings request results: %@
Status missing from the xpc message
received results for an unknown oof settings request
unable to unarchive results: %@
Unsupported XPC reply type. Reply Type: %@
XPC call performed in: %s
Retry watchFoldersWithSyncKeyMap on exchangesyncd for accountID %@
[DADConnection resumeWatchingFoldersWithKeys:forAccountID] called without a connection. Will not resume.
Retry resumeWatchingFoldersWithSyncKeyMap on exchangesyncd for accountID %@
Retry suspendWatchingFoldersWithKeys on exchangesyncd for accountID %@
Retry stopWatchingFoldersWithKeys on exchangesyncd for accountID %@
XPC Reply Failure. Status Code: %@
Send current policy key to exchangesyncd for accountID %@
Requesting that DataAccess %@ monitoring agents.
Server error in %s communicating with daemon: %@
Handling account change: %{public}@
No change info given
No account identifier given
Failed to encode account change info: %@
updateFolderListForAccountID %@, dataclasses %lx, requireChangedFolders %d, isUserRequested %d
Update folder list on exchangesyncd for accountID %@
updateContentsOfFoldersWithKeys %@ for account id %@, dataclasses 0x%lx isUserRequested %d
Update contents of folders on exchangesyncd for accountID %@
updateContentsOfAllFoldersForAccountID %@, dataclasses 0x%lxx isUserRequested %d
Update contents of all folders on exchangesyncd for accountID %@
nil accountID passed to performServerContactsSearch. Refusing to attempt search
nil search string passed to performServerContactsSearch. Refusing to attempt search
Setting search query %@ for key %@
The accountID %@ is invalid for dataaccessd
Perform server contact search on exchangesyncd for accountID %@
Cancelling search task %p
Removing search query for key %@
Cancel server contact search on exchangesyncd for searchID %@
Process meeting request on exchangesyncd for accountID %@
Async process meeting request on exchangesyncd for accountID %@
Set folder IDs that external clients care about on exchangesyncd for accountID %@
Report folder items sync success on exchangesyncd for accountID %@
Requesting download of attachment UUID %@ for accountID %@
Download context %@ set up for downloading attachment UUID %@ on accountID %@
Begin download attachment on exchangesyncd for accountID %@
Cancelling Download of attachment with downloadID %@
Canceling downloading attachments on exchangesyncd for downloadIDs %@
Requesting share response %ld for calendar %@ for accountID %@
Not continuing with respondToSharedCalendarInvite. Given calendarId or accountId is nil.
Share request %@ set up for sharing calendar id %@ on accountID %@
Reporting calendar %@ for accountID %@ as junk
Not continuing with reportSharedCalendarInviteAsJunkForCalendarWithID. Given calendarId or accountId is nil.
Fetching office hours for accountID %{public}@
Office hours fetch request %{public}@ set up for accountID %{public}@
Setting office hours for accountID %{public}@
Office hours set request %{public}@ set up for accountID %{public}@
Marking a subscription calendar as junk
Checking whether a subscription calendar is junk
Not continuing with checkSubscriptionCalendarIsJunk. Given urlString is nil.
Check junk request %@ set up for subscribed calendar URL %@
Fetching list of available holiday calendars
Not continuing with fetchAvailableHolidayCalendarsWithResultsBlock. completionBlock is null.
Not continuing with fetchAvailableHolidayCalendarsWithResultsBlock. resultsBlock is null.
Holiday calendar fetch request set up: %@
Process folder change on exchangesyncd for accountID %@
Sending message: kDAERegisterForInterrogation
Fill out current EAS timezone info on exchangesyncd
Get active sync device identifier on exchangesyncd
nil accountID passed to performASSettingsRequest. Cannot continue.
Adding to inflight dictionary: oof %@ request %@ for key %@
Retrieve OOF settings on exchangesyncd for accountID %@
Update OOF settings on exchangesyncd for accountID %@
Checking OOF supported on exchangesyncd for accountID %@
Invalid 'accountID' provided: [%@].
Invalid 'startDate' [%@] and/or 'endDate' [%@] provided.
No 'addresses' provided.
Will not issue calendar availability request.
Preparing calendar availability request.  accountID: [%@] startDate: [%@] endDate: [%@] ignoredEventID: [%@] addresses: [%@]
Retry request calendar availability on exchangesyncd for accountID %@
nil 'requestID' provided.  Will not cancel any calendar availability requests.
Retry canceling calendar availability request on exchangesyncd for requestID %@
Unable to decode results: %@
Error unarchiving subcal summary data: %@
Error unarchiving subcal download error: %@
Preparing granted delegates list request for accountID: [%@]
Preparing update granted delegate permission for accountID: [%@], delegate uri: %@, permission: %ld
Unable to encode granted delegate with URI: %@
Exchange delegates are not supported on this platform
No 'terms' provided.
No 'recordTypes' provided.
Will not issue calendar directory search.
Preparing calendar directory search.  accountID: [%@] recordTypes:[%@] resultLimit: [%lu] terms: [%@]
Received search ID [%@] for search with attributes: [%@].  Associated context: [%@]
Retry calendar directory search on exchangesyncd for accountID %@
nil 'searchID' provided.  Will not cancel any calendar directory searches.
Cancelled calendar directory search with ID: [%@].
Retry canceling calendar directory search on exchangesyncd for searchID %@
No 'principalPath' provided.
Will not do group expansion.
Preparing group expansion.  accountID: [%@]  principalPath: [%@]
in _resetCertWarningsForAccount, _accountIdsWithAlreadyResetCerts is %@
in %s, _accountIdsWithAlreadyResetThrottleTimers is %@
Resetting shouldResetCertWarnings and throttle timers
unknown request sent to connection.
request: %@
Could not create a new log file setting.
Cannot allocate global log settings.
Could not create a copy of the log file settings.
Cannot append data to log file because workSettings is NULL.
Cannot append data to log file because shared work settings is NULL. Facilities: %@
Can't append data to log file, even after retrying. Giving up. Facilities: %@
Could not get file UUID.
Got UUID: %@
Can't slurp lookaside file into log file, even after retrying. Giving up. Facilities: %@
Could not allocate buffer for logging.
Cannot encode string into UTF-8.
Re-reading all defaults values.
Recomputed max accepted logging level. New max: %d
Rereading configuration for %@
Defaults domain %@ and key %@ cannot be converted into an integer.
Defaults domain %@ and key %@ is not a number.
Rejecting domain %@ key %@ value of %d.
Leaking old createFileLogFormatBlock because it was set after logging has begun for facilities %@
Leaking old createConsoleLogFormatBlock because it was set after logging has begun for facilities %@
The log file has been deleted before we had a chance to open it.
Opened existing log file for writing: %@
FD: %d
Watching file: %@, FD: %d
Created new dispatch source %p
Received file event for file %@
Log file has been deleted: %@
Closing FD %d
Closing file at %@, FD %d
The file at path %@ is not a directory.
Cannot create directory %@. Error: %@
Created directory at path: %@
Cannot create temporary linked file at %@
Cannot link file to path %@
Created new log file %@.
The name of the symlink file clashes with an existing file: %@
Created symlink link: %@. Destination: %@
Could not chmod symlink to latest log file. Error code: %d - message: %s. Symlink: %@
Could not create symlink to latest log file: %@
Checking size of log file at path %@
Cannot get attributes of file at path %@. Error: %@
Compressing file at %@
Could not move compressed file from %@ to %@. Error: %@
Could not compress file. Status: %d
Handling getUUIDForPath
Testing requested log folder %@
Matched client home directory: %s
Requested path into client home directory: %@
Log folder: 
 must begin with /Library/Logs in the user
s home directory.
The path %@ does not begin with the caller's home directory.
Resolved log file folder to %@
Could not create directory %@. Error: %@
Folder path %@ does not refer to a directory.
Get UUID for for folder resulted in an error. Folder: %@. Basename: %@.
Handling logData
Cannot find UUID. Asking client to retry.
Log data resulted in an error. UUID: %@.
Handling slurpFile
Slurp to file UUID resulted in an error. UUID: %@.
Missing account identifier when attempting to decode DAAccountChangeInfo
Missing account type identifier when attempting to decode DAAccountChangeInfo
Discarding overly-complex recurrence for AVAILABLE, iCal doesn't understand it.
Discarding non-recurring AVAILABLE, iCal doesn't understand it.
Discarding non-same-day AVAILABLE, iCal doesn't understand it.
Discarding non-current VAVAILABILITY, iCal doesn't understand it.
Why are we combining status reports for different accounts? %@ vs. %@
Protocol version is updated to %@
Bumping behavior token number
Turning off cookie support because we are running on older hardware
Due to a profile setting, we are forcing cookies to be %@abled
DA is in a holding pattern.  We will not be syncing any time soon
Device is a %@customer install
softlink:o:path:/System/Library/PrivateFrameworks/ExchangeSyncExpress.framework/ExchangeSyncExpress
DAEGrantedDelegatesListContext
DAEHolidayCalendarFetchResult
NSSecureCoding
NSCoding
DATrafficLogFilename
DADAMContainerIDCacheKey
NSCopying
DADownloadContext
DASharedCalendarContext
DAOfficeHoursContext
DAEGroupExpansionContext
DACheckSubscribedCalendarIsJunkContext
DAHolidayCalendarsFetchContext
DADConnection
DAESubscribedCalendarSummary
DAECalendarAvailabilityContext
DAOofParams
DAOofSettingsInfo
DAECalendarDirectorySearchContext
DAAccountExternalIdentificationInfo
DAEGrantedDelegate
DACPLogShared
DACPLogDFile
DAAccountChangeInfo
DAESubscriptionCalendarDownloadContext
DASearchQuery
DASharedAccountProperties
DAContactSearchResultElement
DAContactsSearchQuery
CalDAVOfficeHour
DAMailboxSearchQuery
DAStatusReport
DADisableableObject
DAECalendarAvailabilitySpan
DAECalendarDirectorySearchResult
DAFolderChange
DAEUpdateGrantedDelegatePermissionContext
DABehaviorOptions
init
initWithResultsBlock:
finishedWithResults:error:
.cxx_destruct
_resultsBlock
description
region
language
URLString
calendarDescription
initWithFormat:
decodeObjectOfClass:forKey:
setRegion:
setLanguage:
setURLString:
setCalendarDescription:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
_URLString
_region
_language
_calendarDescription
T@"NSString",&,N,V_URLString
T@"NSString",&,N,V_region
T@"NSString",&,N,V_language
T@"NSString",&,N,V_calendarDescription
mainBundle
processInfo
filenameWithBasename:bundle:processInfo:uid:
bundleIdentifier
processName
stringWithFormat:
filenameWithBasename:
accountID
isEqualToString:
dataclass
hash
allocWithZone:
initWithAccountID:andDataclass:
copyWithZone:
isEqual:
_accountID
_dataclass
T@"NSString",R,N,V_accountID
Tq,R,N,V_dataclass
copy
initWithAttachmentUUID:accountID:queue:downloadProgressBlock:completionBlock:
updateProgressDownloadedByteCount:totalByteCount:
finishedWithError:
attachmentUUID
queue
progressBlock
completionBlock
_attachmentUUID
_queue
_progressBlock
_completionBlock
T@"NSString",R,N,V_attachmentUUID
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@?,R,C,N,V_progressBlock
T@?,R,C,N,V_completionBlock
shouldSyncCalendar
sharedConnection
arrayWithObjects:count:
updateContentsOfFoldersWithKeys:forAccountID:andDataclass:isUserRequested:
initWithCalendarID:accountID:queue:completionBlock:
calendarID
setShouldSyncCalendar:
_shouldSyncCalendar
_calendarID
T@"NSString",R,N,V_calendarID
TB,N,V_shouldSyncCalendar
fetchCompletionBlock
setCompletionBlock
finishFetchWithOfficeHours:error:
finishSetWithError:
isFetch
abortWithError:
setAccountID:
setQueue:
setFetchCompletionBlock:
setSetCompletionBlock:
_fetchCompletionBlock
_setCompletionBlock
TB,R,N
T@"NSString",C,N,V_accountID
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@?,C,N,V_fetchCompletionBlock
T@?,C,N,V_setCompletionBlock
initWithCompletionBlock:
principalPath
results
setResults:
_principalPath
_results
T@"NSString",R,N,V_principalPath
T@"NSDictionary",&,N,V_results
urlString
junkStatus
initWithURLString:completionBlock:
setJunkStatus:
_urlString
_junkStatus
T@"NSString",R,N,V_urlString
Tq,N,V_junkStatus
initWithResultsBlock:completionBlock:
resultsReturned:
resultsBlock
T@?,R,C,N,V_resultsBlock
allValues
removeAllObjects
sendFinishedToConsumerWithError:
errorWithDomain:code:userInfo:
makeObjectsPerformSelector:withObject:
countByEnumeratingWithState:objects:count:
consumer
folderChange:finishedWithStatus:error:
finishedWithError:exceededResultLimit:
oofRequestInfo:finishedWithResult:error:
subscribedCalendarFailedWithError:
asyncCallOutToDelegate:
_tearDownInFlightObjects
defaultCenter
postNotificationName:object:
setRegistered:
_initializeConnection
UTF8String
_initializeXPCConnection:
_serverDiedWithReason:
_dispatchMessage:
initForReadingFromData:error:
setWithObjects:
decodeObjectOfClasses:forKey:
dictionaryWithDictionary:
objectForKeyedSubscript:
setObject:forKeyedSubscript:
_dictionarySuitableForLogging:
dictionaryWithObjects:forKeys:count:
postNotificationName:object:userInfo:
removeObjectForKey:
sendResultsToConsumer:
intValue
decodedErrorFromData:
setFolderId:
setDisplayName:
count
dictionaryRepresentation
addObject:
_createReplyToRequest:withProperties:
longLongValue
officeHoursFromData:
boolValue
initWithDictionary:
integerValue
unarchivedObjectOfClasses:fromData:error:
objectForKey:
_init
reallyRegisterForInterrogation
watchFoldersWithKeys:forAccountID:persistent:
_resetCertWarningsForAccountId:andDataclasses:isUserRequested:
numberWithBool:
_connection
_checkInvalidIdExistsInXPCRely:
_validateXPCReply:
resumeWatchingFoldersWithKeys:forAccountID:
suspendWatchingFoldersWithKeys:forAccountID:
stopWatchingFoldersWithKeys:forAccountID:
requestPolicyUpdateForAccountID:
currentPolicyKeyForAccountID:
dictionaryWithObject:forKey:
numberWithUnsignedInteger:
_requestDaemonChangeAgentMonitoringStatus:withToken:waitForReply:
_nextStopMonitoringStatusToken
accountIdentifier
archivedDataWithRootObject:requiringSecureCoding:error:
_resetThrottleTimersForAccountId:
numberWithInteger:
updateFolderListForAccountID:andDataclasses:requireChangedFolders:isUserRequested:
updateContentsOfFoldersWithKeys:forAccountID:andDataclasses:isUserRequested:
updateContentsOfAllFoldersForAccountID:andDataclasses:isUserRequested:
updateFolderListForAccountID:andDataclasses:isUserRequested:
updateContentsOfAllFoldersForAccountID:andDataclass:isUserRequested:
searchString
setSearchID:
performServerContactsSearch:forAccountWithID:
searchID
length
setState:
setConsumer:
cancelServerContactsSearch:
processMeetingRequests:deliveryIdsToClear:deliveryIdsToSoftClear:inFolderWithId:forAccountWithId:
asyncProcessMeetingRequests:deliveryIdsToClear:deliveryIdsToSoftClear:inFolderWithId:forAccountWithId:
setFolderIdsThatExternalClientsCareAboutAdded:deleted:foldersTag:forAccountID:
reportFolderItemsSyncSuccess:forFolderWithID:withItemsCount:andAccountWithID:
absoluteString
_sendXPCMessageSynchronous:withParameters:handlerBlock:
beginDownloadingAttachmentWithUUID:accountID:queue:progressBlock:completionBlock:
archivedDataWithRootObject:
_cancelDownloadsWithIDs:error:
cancelDownloadingAttachmentWithDownloadID:error:
dataFromOfficeHours:
processFolderChange:forAccountWithID:
registered
fillOutCurrentEASTimeZoneInfo
activeSyncDeviceIdentifier
setRequestID:
retrieveOofSettingsRequest:forAccountWithID:
updateOofSettingsRequest:forAccountWithID:
isOofSettingsSupportedForAccountWithID:completionBlock:
compare:
setObject:forKey:
_logRequestID:forRequestAttributes:associatedContext:
requestCalendarAvailabilityWithAccountID:startDate:endDate:ignoredEventID:addresses:resultsBlock:completionBlock:
cancelCalendarAvailabilityRequestWithID:
setDelegate:
callOutToDelegate:
subscribedCalendarProgressedTo:totalBytes:
unarchivedObjectOfClass:fromData:error:
subscribedCalendarDidFinishLoading:
cancelDownloadingSubscriptionCalendarWithDownloadID:
subscribedCalendarRequiresPassword:withContinuation:
permission
allObjects
performCalendarDirectorySearchWithAccountID:terms:recordTypes:resultLimit:resultsBlock:completionBlock:
cancelCalendarDirectorySearchWithID:
initWithCapacity:
initWithArray:
enumerateKeysAndObjectsUsingBlock:
exceptionWithName:reason:userInfo:
raise
_registerForAppResumedNotification
removeObserver:
dealloc
containsObject:
resetTimersAndWarnings
addObserver:selector:name:object:
_foldersUpdated:
_policyKeyChanged:
_logDataAccessStatus:
_serverContactsSearchQueryFinished:
_folderChangeFinished:
_getStatusReportsFromClient:
_downloadProgress:
_downloadFinished:
_shareResponseFinished:
_officeHoursRequestFinished:
_oofSettingsRequestsFinished:
_calendarAvailabilityRequestReturnedResults:
_calendarAvailabilityRequestFinished:
_grantedDelegatesListRequestFinished:
_updateGrantedDelegatePermissionRequestFinished:
_calendarDirectorySearchReturnedResults:
_calendarDirectorySearchFinished:
_groupExpansionFinished:
_downloadSubscribedCalendarProgress:
_downloadSubscribedCalendarFinished:
_downloadSubscribedCalendarRequiresPassword:
_subscriptionCalendarJunkCheckFinished:
_holidayCalendarFetchReturnedResults:
_holidayCalendarFetchFinished:
setShouldIgnoreAccountChanges
_initializeConnectionWithXPCEndpoint:
watchFoldersWithKeys:forAccountID:
requestDaemonStartMonitoringAgentsWithToken:
requestDaemonStopMonitoringAgents
requestDaemonStartMonitoringAgentsSyncWithToken:
requestDaemonStopMonitoringAgentsSync
handleAccountChange:callback:
updateFolderListForAccountID:andDataclasses:
updateContentsOfFoldersWithKeys:forAccountID:andDataclass:
updateContentsOfAllFoldersForAccountID:andDataclass:
handleURL:
respondToSharedCalendarInvite:forCalendarWithID:accountID:queue:completionBlock:
reportSharedCalendarInviteAsJunkForCalendarWithID:accountID:queue:completionBlock:
fetchOfficeHoursForAccountWithID:queue:completionBlock:
setOfficeHours:forAccountWithID:queue:completionBlock:
reportSubscriptionCalendarAsJunk:
checkSubscriptionCalendarIsJunk:queue:completionBlock:
fetchAvailableHolidayCalendarsWithResultsBlock:completionBlock:queue:
statusReports
registerForInterrogationWithBlock:
_performOofSettingsRequest:forAccountWithID:forUpdate:
downloadSubscribedCalendarWithURL:queue:delegate:
validateCandidateSubscriptionURLWithICloud:queue:completionBlock:
requestGrantedDelegatesListForAccountID:resultsBlock:
cancelGrantedDelegatesListRequestWithID:
updateGrantedDelegateForAccountID:grantedDelegate:action:resultsBlock:
addExchangeDelegateWithName:emailAddress:toAccountWithID:completion:
removeExchangeDelegateWithSourceID:fromParentAccountWithID:completion:
performGroupExpansionWithAccountID:principalPath:completionBlock:
beginCalDAVServerSimulationWithHostname:
endCalDAVServerSimulationWithHostname:
_conn
_muckingWithConn
_muckingWithInFlightCollections
_accountIdsWithAlreadyResetCerts
_accountIdsWithAlreadyResetThrottleTimers
_statusReportBlock
_inFlightSearchQueries
_inFlightFolderChanges
_inFlightAttachmentDownloads
_inFlightCalendarAvailabilityRequests
_inFlightCalendarDirectorySearches
_inFlightGroupExpansions
_inFlightShareRequests
_inFlightOofSettingsRequests
_inFlightOfficeHoursRequests
_inFlightGrantedDelegatesListRequests
_inFlightUpdateGrantedDelegatePermissionRequests
_inFlightSubscribedCalendarDownloads
_inFlightSubscribedCalendarJunkChecks
_inFlightHolidayCalendarFetches
_registered
TB,N,V_registered
currentHandler
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
decodeDoubleForKey:
encodeDouble:forKey:
title
setTitle:
notes
setNotes:
color
setColor:
refreshInterval
setRefreshInterval:
subscriptionID
setSubscriptionID:
data
setData:
subscriptionURL
setSubscriptionURL:
_title
_notes
_color
_refreshInterval
_subscriptionID
_data
_subscriptionURL
T@"NSString",&,N,V_title
T@"NSString",&,N,V_notes
T@"NSString",&,N,V_color
Td,N,V_refreshInterval
T@"NSString",&,N,V_subscriptionID
T@"NSData",&,N,V_data
T@"NSURL",&,N,V_subscriptionURL
oofState
startTime
endTime
message
externalState
externalMessage
setOofState:
setStartTime:
setEndTime:
setMessage:
setExternalState:
setExternalMessage:
numberWithInt:
initWithLocaleIdentifier:
setLocale:
setDateFormat:
timeZoneForSecondsFromGMT:
setTimeZone:
stringFromDate:
dictionaryRepresentationForASSettingTask
isEnabled
enableOof:From:to:withMessage:
_oofState
_externalState
_startTime
_endTime
_message
_externalMessage
Ti,N,V_oofState
T@"NSDate",&,N,V_startTime
T@"NSDate",&,N,V_endTime
T@"NSString",&,N,V_message
Ti,N,V_externalState
T@"NSString",&,N,V_externalMessage
requestID
_requestID
_consumer
T@"NSString",&,N,V_requestID
T@"<DAOofResponseDelegate>",W,N,V_consumer
shared
_getUUIDForFolder:baseName:
_logData:UUID:startNewFile:sizeCheck:wantsCompressed:maxFileCount:outDidCreateNewFile:outNewFilePath:
_slurpToFileUUID:slurpeeFileDescriptor:prefix:suffix:startNewFile:sizeCheck:wantsCompressed:maxLogFileCount:outDidCreateNewFile:outNewFilePath:
initWithHost:port:useSSL:ownerAddresses:preferredOwnerAddress:
host
port
useSSL
ownerAddresses
preferredOwnerAddress
_useSSL
_host
_port
_ownerAddresses
_preferredOwnerAddress
T@"NSString",R,C,N,V_host
Tq,R,N,V_port
TB,R,N,V_useSSL
T@"NSArray",R,C,N,V_ownerAddresses
T@"NSString",R,C,N,V_preferredOwnerAddress
standardUserDefaults
boolForKey:
DAManagedDefaultForKey:
isAppleInternalInstall
currentLocale
initWithObjects:
decodeIntegerForKey:
encodeInteger:forKey:
setUri:
displayName
preferredUserAddress
setPreferredUserAddress:
setPermission:
_uri
_displayName
_preferredUserAddress
_permission
T@"NSString",C,N,V_uri
T@"NSString",C,N,V_displayName
T@"NSString",C,N,V_preferredUserAddress
Tq,N,V_permission
DACPLogMakeUUID
subarrayWithRange:
objectAtIndexedSubscript:
DACPLogSubarrayFromIndexToEndOfArray:
DACPLogArrayBeginsWithArray:
array
fileSystemRepresentation
sortUsingComparator:
_filePathsMatchingPattern:
lastObject
_getLatestMatchingFilePath
_beginWatchingFile
_startNewFile
defaultManager
fileExistsAtPath:
_closeFileWithFileEventDispatchSource:
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createFileAtPath:contents:attributes:
date
lastPathComponent
_openFileOutDidCreateNewFile:outNewFilePath:
bytes
attributesOfItemAtPath:error:
fileSize
stringByAppendingPathExtension:
stringByAppendingPathComponent:
moveItemAtPath:toPath:error:
removeItemAtPath:error:
addObjectsFromArray:
initWithFolder:baseName:
logData:outDidCreateNewFile:outNewFilePath:
startNewFile
checkForMaximumFileSize:wantsCompressed:outDidCreateNewFile:outNewFilePath:
cullFilesMaxFileCount:
folder
baseName
UUID
_folder
_baseName
_UUID
_path
_fileEventDispatchSource
_fileWasDeleted
T@"NSString",R,&,N,V_folder
T@"NSString",R,&,N,V_baseName
T@"NSString",R,&,N,V_UUID
pathComponents
_array:beginsWithArray:outRemainingArray:
arrayWithCapacity:
pathWithComponents:
isEqualToArray:
arrayByAddingObjectsFromArray:
characterAtIndex:
substringToIndex:
dataUsingEncoding:
initWithFileDescriptor:closeOnDealloc:
readDataToEndOfFile
readDataOfLength:
T@"DACPLogShared",R
_UUIDToFileMap
setDateStyle:
decodeIntForKey:
setWithArray:
initWithChangeType:accountIdentifier:accountTypeIdentifier:oldAccountProperties:username:password:oldUsername:oldPassword:modifiedDataClasses:clientName:
changeType
encodeInt:forKey:
accountTypeIdentifier
oldAccountProperties
username
password
oldUsername
oldPassword
modifiedDataClasses
clientName
_stringForChangeType:
allKeys
redactedDescription
_changeType
_accountIdentifier
_accountTypeIdentifier
_oldAccountProperties
_username
_password
_oldUsername
_oldPassword
_modifiedDataClasses
_clientName
TQ,R,N,V_changeType
T@"NSString",R,C,N,V_accountIdentifier
T@"NSString",R,C,N,V_accountTypeIdentifier
T@"NSDictionary",R,C,N,V_oldAccountProperties
T@"NSString",R,C,N,V_username
T@"NSString",R,C,N,V_password
T@"NSString",R,C,N,V_oldUsername
T@"NSString",R,C,N,V_oldPassword
T@"NSSet",R,C,N,V_modifiedDataClasses
T@"NSString",R,C,N,V_clientName
delegate
_delegate
T@"<DAESubscribedCalendarDownloadDelegate>",&,N,V_delegate
initWithSearchString:consumer:
setSearchString:
setRange:
setTimeLimit:
setSearchPredicate:
range
timeLimit
unsignedIntValue
state
searchQuery:returnedResults:
searchQuery:finishedWithError:
searchQueryWithSearchString:consumer:
initWithSearchString:predicate:consumer:
initWithDictionaryRepresentation:consumer:
isQueryRunning
maxResults
setMaxResults:
searchPredicate
_timeLimit
_searchString
_searchPredicate
_searchID
_state
_range
T@"NSString",C,N,V_searchString
T@"NSPredicate",C,N,V_searchPredicate
T@"NSString",C,N,V_searchID
TQ,N,V_state
T{_NSRange=QQ},N,V_range
TI,N
Ti,N,V_timeLimit
T@"<DASearchQueryConsumer>",W,N,V_consumer
leafAccountTypes
mutableCopy
removeObject:
parentAccountTypes
leafAccountTypesToCheckForEquality
DAAccountSavePreflighted
DAAccountDoNotSaveReason
DAAccountIdentifiersToIgnoreForUniquenessCheck
DAAccountPrincipalPath
CalDAVSubscribedCalendarsKey
SubCalFilterAlarmsKey
SubCalSubscriptionURLKey
SubCalTitleKey
SubCalInsecureConnectionApproved
DACardDAVAccountDSID
firstName
lastName
emailAddress
workPhone
mobilePhone
company
alias
homePhone
office
serverSource
recordName
faxPhone
department
street
city
country
jpegPhoto
isEqualToData:
imService
imUsername
buildingName
appleFloor
pagerNumber
postalAddress
homePostalAddress
iPhone
mainPhone
workFaxPhone
cuAddresses
isEqualToDAContactSearchResultElement:
identifierOnServer
setFirstName:
setLastName:
setEmailAddress:
setWorkPhone:
setMobilePhone:
setCompany:
setAlias:
setHomePhone:
setOffice:
setServerSource:
setRecordName:
setFaxPhone:
setDepartment:
setStreet:
setCity:
setZip:
setCountry:
setJpegPhoto:
setImService:
setImUsername:
setBuildingName:
setAppleFloor:
setPagerNumber:
setPostalAddress:
setHomePostalAddress:
setPrincipalPath:
setCuAddresses:
setIPhone:
setMainPhone:
setWorkFaxPhone:
setIdentifierOnServer:
_firstName
_lastName
_emailAddress
_workPhone
_mobilePhone
_company
_homePhone
_alias
_office
_serverSource
_recordName
_faxPhone
_department
_street
_city
_zip
_country
_jpegPhoto
_imService
_imUsername
_buildingName
_appleFloor
_pagerNumber
_postalAddress
_homePostalAddress
_cuAddresses
_iPhone
_mainPhone
_workFaxPhone
_identifierOnServer
T@"NSString",C,N,V_firstName
T@"NSString",C,N,V_lastName
T@"NSString",C,N,V_emailAddress
T@"NSString",C,N,V_workPhone
T@"NSString",C,N,V_mobilePhone
T@"NSString",C,N,V_company
T@"NSString",C,N,V_title
T@"NSString",C,N,V_homePhone
T@"NSString",C,N,V_alias
T@"NSString",C,N,V_office
T@"NSString",C,N,V_serverSource
T@"NSString",C,N,V_recordName
T@"NSString",C,N,V_faxPhone
T@"NSString",C,N,V_department
T@"NSString",C,N,V_street
T@"NSString",C,N,V_city
T@"NSString",C,N,V_state
T@"NSString",C,N,V_zip
T@"NSString",C,N,V_country
T@"NSData",C,N,V_jpegPhoto
T@"NSString",C,N,V_imService
T@"NSString",C,N,V_imUsername
T@"NSString",C,N,V_buildingName
T@"NSString",C,N,V_appleFloor
T@"NSString",C,N,V_pagerNumber
T@"NSString",C,N,V_postalAddress
T@"NSString",C,N,V_homePostalAddress
T@"NSString",C,N,V_principalPath
T@"NSArray",C,N,V_cuAddresses
T@"NSString",C,N,V_iPhone
T@"NSString",C,N,V_mainPhone
T@"NSString",C,N,V_workFaxPhone
T@"NSString",&,N,V_identifierOnServer
initWithSearchString:searchBase:searchScope:consumer:
setSearchBase:
setSearchScope:
setIncludePhotos:
searchBase
searchScope
includePhotos
contactsSearchQueryWithSearchString:searchBase:searchScope:consumer:
calendarInitiated
setCalendarInitiated:
_includePhotos
_calendarInitiated
_searchBase
_searchScope
T@"NSString",C,N,V_searchBase
T@"NSString",C,N,V_searchScope
TB,N,V_includePhotos
TB,N,V_calendarInitiated
decodeBoolForKey:
enabled
encodeBool:forKey:
startDate
endDate
initWithData:options:error:
officeHoursFromICS:
calendar
components
dtstart
systemDateForDate:options:
dtend
duration
timeInterval
dateByAddingTimeInterval:
systemCalendarForDate:options:
components:fromDate:
weekday
rrule
byday
objectAtIndex:
setEnabled:
dateFromComponents:
laterDate:
setStartDate:
earlierDate:
setEndDate:
logHandle
icsFromOfficeHours:
ICSDataWithOptions:
initWithCalendarIdentifier:
timeZoneWithName:
handleFailureInMethod:object:file:lineNumber:description:
_gregorianGMTCalendar
year
month
hour
minute
second
initWithYear:month:day:hour:minute:second:timeZone:
value
initWithWeekday:
arrayByAddingObject:
setByday:
makeUID
setUid:
setDtstamp:
setDtstart:
setDtend:
arrayWithObject:
setRrule:
setYear:
setMonth:
setDay:
defaultTimeZone
initWithFrequency:
setComponents:
setComponents:options:
initWithCalendar:
_enabled
_startDate
_endDate
TB,N,V_enabled
T@"NSDateComponents",C,N,V_startDate
T@"NSDateComponents",C,N,V_endDate
setBodyType:
setTruncationSize:
setAllOrNone:
setMIMESupport:
setDeepTraversal:
setRebuildResults:
setCollectionID:
setPriorToDate:
collectionID
bodyType
truncationSize
numberWithLongLong:
allOrNone
MIMESupport
deepTraversal
rebuildResults
priorToDate
mailboxSearchQueryWithSearchString:consumer:
mailboxSearchQueryWithSearchString:predicate:consumer:
_allOrNone
_deepTraversal
_rebuildResults
_bodyType
_MIMESupport
_collectionID
_truncationSize
_priorToDate
T@"NSString",&,N,V_collectionID
Ti,N,V_bodyType
Tq,N,V_truncationSize
TB,N,V_allOrNone
T@"NSDate",&,N,V_priorToDate
Ti,N,V_MIMESupport
TB,N,V_deepTraversal
TB,N,V_rebuildResults
setCreationDate:
setPersistentUUID:
setAccountType:
setTimeSpan:
setTimeInNetworking:
setAverageHBI:
setSuccessfulRequests:
setFailedNetworkRequests:
setFailedProtocolRequests:
setDownloadedElements:
setUploadedElements:
setFalseMoreAvailableCount:
setProtocolVersion:
setSyncingAllowed:
setLastSuccessDate:
setLastFailureDate:
dictionary
persistentUUID
accountType
timeSpan
timeInNetworking
averageHBI
successfulRequests
failedNetworkRequests
failedProtocolRequests
downloadedElements
uploadedElements
protocolVersion
falseMoreAvailableCount
syncingAllowed
lastSuccessDate
lastFailureDate
doubleValue
numberWithDouble:
isEqualToDate:
timeIntervalSinceDate:
noteSuccessfulRequestWithNumDownloadedElements:numUploadedElements:
initWithDictionaryRepresentation:
mergeStatusReport:
noteSuccessfulRequestWithNumDownloadedElements:
noteFailedNetworkRequest
noteFailedProtocolRequest
noteNewHBIDataPoint:
noteTimeSpentInNetworking:
noteFalseMoreAvailableResponse
creationDate
numHBIDataPoints
setNumHBIDataPoints:
_syncingAllowed
_numHBIDataPoints
_persistentUUID
_accountType
_timeSpan
_timeInNetworking
_averageHBI
_successfulRequests
_failedNetworkRequests
_failedProtocolRequests
_downloadedElements
_uploadedElements
_falseMoreAvailableCount
_protocolVersion
_lastSuccessDate
_lastFailureDate
_creationDate
T@"NSDate",&,N,V_creationDate
Ti,N,V_numHBIDataPoints
T@"NSDate",&,N,V_lastSuccessDate
T@"NSDate",&,N,V_lastFailureDate
T@"NSString",&,N,V_persistentUUID
T@"NSString",&,N,V_displayName
T@"NSString",&,N,V_accountType
T@"NSNumber",&,N,V_timeSpan
T@"NSNumber",&,N,V_timeInNetworking
T@"NSNumber",&,N,V_averageHBI
T@"NSNumber",&,N,V_successfulRequests
T@"NSNumber",&,N,V_failedNetworkRequests
T@"NSNumber",&,N,V_failedProtocolRequests
T@"NSNumber",&,N,V_downloadedElements
T@"NSNumber",&,N,V_uploadedElements
T@"NSNumber",&,N,V_falseMoreAvailableCount
T@"NSString",&,N,V_protocolVersion
TB,N,V_syncingAllowed
disable
isDisabled
setIsDisabled:
_isDisabled
TB,N,V_isDisabled
initWithStartDate:endDate:type:
initWithInteger:
type
_type
Tq,R,N,V_type
T@"NSDate",R,N,V_startDate
T@"NSDate",R,N,V_endDate
preferredAddress
setPreferredAddress:
_preferredAddress
T@"NSString",&,N,V_firstName
T@"NSString",&,N,V_lastName
T@"NSString",&,N,V_preferredAddress
T@"NSString",&,N,V_principalPath
setChangeType:
setParentFolderId:
setDataclass:
folderId
parentFolderId
allowsKeyedCoding
setRenameOnCollision:
renameOnCollision
initFolderChangeWithChangeType:folderId:parentFolderId:displayName:dataclass:consumer:
taskId
setTaskId:
_renameOnCollision
_taskId
_folderId
_parentFolderId
TQ,N,V_changeType
T@"NSString",&,N,V_folderId
T@"NSString",&,N,V_parentFolderId
Tq,N,V_dataclass
TI,N,V_taskId
TB,N,V_renameOnCollision
T@"<DAFolderChangeConsumer>",W,N,V_consumer
_startListeningForNotifications
_shouldForceCookies:
useContactsFramework
URLWithString:
initialize
ignoreSupportedCommands
refreshThrottleTime
ignoreBadLDAPCerts
defaultEASTaskTimeoutOutWasFound:
defaultDAVProbeTimeout
whitelistedEASProtocols
cookiesEnabled
calDAVRemindersForAll
promptForAllCerts
enablePromptForServerTrust
compressRequests
useThunderhillBetaServers
perfLogging
CFNetworkLogging
APSEnv
allIMAPServersSupportNotesSearch
completelyIgnoreNotes
writeOutBrokenCancelationRequests
sendMeCardEverywhere
isInHoldingPattern
enableAutomaticAttachmentDownloads
babysitterEnabled
alwaysUseCalendarHomeSync
useContactsFramerwork
earlyPingEnabled
customAutoDV2UserAgentEnabled
holidayCalendarURL
holidayCalendarRefreshInterval
isCustomerInstall
numForgivable401s
isEASParsingLogEnabled
orphanCheckEnabled
addDAManagedDefaults:
removeDAManagedDefaults:
@24@0:8@?16
v32@0:8@16@24
v16@0:8
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
@"NSString"
@44@0:8@16@24@32I40
@24@0:8^{_NSZone=}16
@32@0:8@16q24
B24@0:8@16
Q16@0:8
q16@0:8
@56@0:8@16@24@32@?40@?48
v32@0:8q16q24
@?16@0:8
@"NSObject<OS_dispatch_queue>"
@48@0:8@16@24@32@?40
v20@0:8B16
v24@0:8@?16
@"NSDictionary"
@32@0:8@16@?24
v24@0:8q16
@32@0:8@?16@?24
v40@0:8@16@24@32
@32@0:8@16@24
B32@0:8@16@24
B36@0:8@16@24B32
v32@0:8B16Q20B28
v24@0:8Q16
v32@0:8@16@?24
B40@0:8@16q24B32B36
B36@0:8@16q24B32
B44@0:8@16@24q32B40
B32@0:8@16q24
B40@0:8@16@24q32
B56@0:8@16@24@32@40@48
v56@0:8@16@24@32@40@48
B48@0:8@16@24@32@40
v44@0:8B16@20Q28@36
v36@0:8B16@20@?28
v56@0:8q16@24@32@40@?48
v48@0:8@16@24@32@?40
v40@0:8@16@24@?32
v40@0:8@?16@?24@32
B24@0:8@?16
@72@0:8@16@24@32@40@48@?56@?64
@40@0:8@16@24@32
@48@0:8@16@24q32@?40
@64@0:8@16@24@32Q40@?48@?56
v36@0:8@16q24B32
@"NSObject<OS_xpc_object>"
@"NSMutableSet"
@"NSMutableDictionary"
d16@0:8
v24@0:8d16
@"NSData"
@"NSURL"
v44@0:8B16@20@28@36
i16@0:8
v20@0:8i16
@"NSDate"
@"<DAOofResponseDelegate>"
v28@0:8@16B24
@52@0:8@16q24B32@36@44
@"NSArray"
@24@0:8Q16
v32@0:8^B16^@24
B40@0:8@16^B24^@32
v44@0:8q16B24^B28^@36
@"NSObject<OS_dispatch_source>"
B40@0:8@16@24^@32
B72@0:8@16@24B32q36B44q48^B56^@64
B80@0:8@16i24@28@36B44q48B56i60^B64^@72
@96@0:8Q16@24@32@40@48@56@64@72@80@88
@"NSSet"
@"<DAESubscribedCalendarDownloadDelegate>"
I16@0:8
v20@0:8I16
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
@"NSPredicate"
@"<DASearchQueryConsumer>"
{_NSRange="location"Q"length"Q}
@48@0:8@16@24@32@40
@"NSDateComponents"
v24@0:8i16i20
@"NSNumber"
@40@0:8@16@24q32
@64@0:8Q16@24@32@40q48@56
@"<DAFolderChangeConsumer>"
d24@0:8^B16
B24@0:8^B16
[%@] region: %@  language: %@  URL: %@  description: %@
region
language
URLString
calendarDescription
%@.%@.%u
Users
Groups
Resources
Locations
DataAccessMonitoredFolderUpdated
DataAccessMonitoringConnectionFailed
<%@: %p> Account ID: %@, data class: %ld
-[DADownloadContext initWithAttachmentUUID:accountID:queue:downloadProgressBlock:completionBlock:]
DADConnection.m
attachmentUUID
accountID
v8@?0
-[DASharedCalendarContext initWithCalendarID:accountID:queue:completionBlock:]
calendarID
v16@?0@"<DAESubscribedCalendarDownloadDelegate>"8
v16@?0@"NSObject<OS_xpc_object>"8
B24@?0r*8@"NSObject<OS_xpc_object>"16
root
<redacted>
-[DADConnection watchFoldersWithKeys:forAccountID:persistent:]
-[DADConnection resumeWatchingFoldersWithKeys:forAccountID:]
-[DADConnection suspendWatchingFoldersWithKeys:forAccountID:]
-[DADConnection stopWatchingFoldersWithKeys:forAccountID:]
start
stop
-[DADConnection _requestDaemonChangeAgentMonitoringStatus:withToken:waitForReply:]
-[DADConnection handleAccountChange:callback:]_block_invoke
v16@?0@"NSDictionary"8
-[DADConnection statusReports]_block_invoke
update
retrieve
v24@?0@"NSString"8@"NSString"16
v32@?0@"NSString"8@"NSArray"16^B24
Should never call -init on DADConnection.  Use +sharedConnection... instead.
com.apple.dataaccess.muckingWithConn
com.apple.dataaccess.muckingWithInFlightCollections
UIApplicationWillEnterForegroundNotification
ESDConnection
Class getESDConnectionClass(void)_block_invoke
Unable to find class %s
void *ExchangeSyncExpressLibrary(void)
title
notes
color
refreshInterval
subscriptionID
subscriptionURL
subscriptionICSData
oofState:%d startTime:%@ endTime:%@ message:%@ externalState:%d externalMessage:%@
en_US_POSIX
yyyy'-'MM'-'dd'T'HH':'mm':'ss'.000Z'
DAErrorDomain
SubCalURLRequestErrorDomain
SubCalRefreshTaskError
SubCalValidationTaskError
DAUnderlyingStatusCodeKey
com.apple.dataaccess.dataaccessd
DAAccountConfigChanged
com.apple.dataaccess.dataaccessd.shutdown
DAChangedFolders
DAChangedAccountID
ASPolicyKey
ASPolicyErrorKey
ASPolicyErrorCodeKey
ASPolicyKeyChangedNotification
ASClientAccountDumpStatusNotification
kDAEMessageNameKey
kDAEMeetingRequestDatasKey
kDAEMeetingRequestIdsToClearKey
kDAEMeetingRequestIdsToSoftClearKey
kDAEMonitoredFolderIdsAddedKey
kDAEMonitoredFolderIdsDeletedKey
kDAEMonitoredFolderIdsTagKey
kDAEAccountIdKey
kDAEInvalidAccountIDKey
kDAEPolicyKeyKey
kDAEPolicyErrorCodeKey
kDAEStatusKey
kDAESearchIDKey
kDAESearchQueryKey
kDAESearchResultsKey
kDAEStatusReportsKey
kDAEDataclassesBitmaskKey
kDAEFolderIDKey
kDAEFolderNameKey
kDAEFolderIDsKey
kDAEFolderSyncItemsCountKey
kDAEPersistentMonitoringKey
kDAEIsUserRequestedKey
kDAERequireChangedFoldersKey
kDAEURLStringKey
kDAEFolderChangeDataKey
kDAETaskIDKey
kDAEErrorDataKey
kDAEAttachmentUUIDKey
kDAEAttachmentDownloadIdKey
kDAEAttachmentIdsKey
kDAEDownloadedBytesKey
kDAEUploadedBytesKey
kDAETotalBytesKey
kDAESharedCalendarReponseTypeKey
kDAESharedCalendarResponseCalendarIDKey
kDAESharedCalendarActionIdKey
kDAEOfficeHoursDataKey
kDAEOfficeHoursRequestIdKey
kDAEAgentMonitoringNeedsReply
kDAEAgentMonitoringToken
kDAEHandleAccountChangeDataKey
kDAEActiveSyncDeviceIdentifierKey
kDAEOofSettingsRequestKey
kDAEOofSettingsResultKey
kDAEOofIsUpdateKey
kDAEOofRequestIDKey
kDAEIsOofSupportedKey
kDAEStartDateKey
kDAEEndDateKey
kDAEIgnoredEventIDKey
kDAEAddressesKey
kDAECalendarAvailabilityRequestIDKey
kDAECalendarAvailabilityResultsKey
kDAEGrantedDelegatesListRequestIDKey
kDAEGrantedDelegatesListResultsKey
kDAEGrantedDelegateKey
kDAEUpdateGrantedDelegatePermissionRequestIDKey
kDAESubCalDownloadURLKey
kDAESubCalDownloadRequestIDKey
kDAESubCalDownloadSummaryDataKey
kDAESubCalUsernameKey
kDAESubCalPasswordKey
kDAECalendarDirectorySearchTermsKey
kDAECalendarDirectorySearchRecordTypesKey
kDAECalendarDirectorySearchResultLimitKey
kDAECalendarDirectorySearchIDKey
kDAECalendarDirectorySearchResultsKey
kDAECalendarDirectorySearchExceededResultLimitKey
kDAEGroupExpansionIDKey
kDAEGroupExpansionPrincipalPathKey
kDAEAccountServerHostKey
kDAEAccountServerPortKey
kDAEAccountServerUseSSLKey
kDAEAccountOwnerAddressesKey
kDAEAccountOwnerPreferredAddressKey
kDAEBeginMonitoringFolders
kDAEStopMonitoringFolders
kDAEResumeMonitoringFolders
kDAESuspendMonitoringFolders
kDAEStartMonitoringAgents
kDAEStopMonitoringAgents
kDAEHandleAccountChange
kDAEGetCurrentPolicyKey
kDAERequestPolicyUpdate
kDAERequestFolderContentsUpdate
kDAERequestAllFolderContentsUpdate
kDAERequestFolderListUpdate
kDAEOpenServerContactsSearch
kDAECancelServerContactsSearch
kDAEProcessMeetingRequests
kDAEAsyncProcessMeetingRequests
kDAEResetCertWarnings
kDAESetFolderIdsThatExternalClientsCareAbout
kDAEReportFolderItemsSyncResult
kDAEHandleURL
kDAEProcessFolderChange
kDAERemoveStoresForAccountWithID
kDAEGetStatusReports
kDAERegisterForInterrogation
kDAEResetThrottleTimers
kDAEBeginDownloadingAttachment
kDAECancelDownloadingAttachment
kDAERespondToSharedCalendar
kDAEReportSharedCalendarAsJunk
kDAEFetchOfficeHours
kDAESetOfficeHours
kDAEFillOutEASTimeZoneInfo
kDAEGetActiveSyncDeviceIdentifier
kDAEOofSettings
kDAEIsOofSettingsSupported
kDAERequestCalendarAvailability
kDAECancelCalendarAvailabilityRequest
kDAEPerformCalendarDirectorySearch
kDAECancelCalendarDirectorySearch
kDAEPerformGroupExpansion
kDAERequestCalendarExternalIdentification
kDAERequestGrantedDelegatesList
kDAECancelGrantedDelegatesListRequest
kDAEUpdateGrantedDelegatePermissionRequest
kDAEDownloadSubscribedCalendar
kDAECancelDownloadSubscribedCalendar
kDAESetPasswordForSubscribedCalendar
kDAEReportSubscribedCalendarAsJunk
kDAECheckSubscribedCalendarIsJunk
kDAECheckSubscribedCalendarIsJunkIdKey
kDAECheckSubscribedCalendarJunkStatusKey
kDAECheckSubscribedCalendarIsJunkFinished
kDAEFetchHolidayCalendars
kDAEFetchHolidayCalendarsIdKey
kDAEFetchHolidayCalendarsReturnedResults
kDAEFetchHolidayCalendarsResultsKey
kDAEFetchHolidayCalendarsResults_FetchResultsKey
kDAEFetchHolidayCalendarsFinished
kDAEFetchHolidayCalendarsRetryThrottleTime
kDAEManageCalDAVServerSimulator
kDAEFoldersUpdated
kDAEPolicyKeyChanged
kDAELogDataAccessStatus
kDAEServerContactsSearchQueryFinished
kDAEFolderChangeFinished
kDAEGetStatusReportsFromClient
kDAEAttachmentDownloadProgress
kDAEAttachmentDownloadFinished
kDAECalendarShareResponseFinished
kDAEOfficeHoursRequestFinished
kDAEOofSettingsFinished
kDAECalendarAvailabilityRequestReturnedResults
kDAECalendarAvailabilityRequestFinished
kDAEGrantedDelegatesListRequestFinished
kDAEUpdateGrantedDelegatePermissionRequestFinished
kDAECalendarDirectorySearchReturnedResults
kDAECalendarDirectorySearchFinished
kDAEGroupExpansionFinished
kDAEDownloadSubscribedCalendarProgress
kDAEDownloadSubscribedCalendarFinished
kDAEDownloadSubscribedCalendarPasswordRequired
TEXT
HTML
kDASettingsOofKey
kDASettingsOofStateKey
kDASettingsStartTimeKey
kDASettingsEndTimeKey
kDASettingsOofMessagesKey
kDASettingsAudienceKey
kDASettingsEnabledKey
kDASettingsReplyMessageKey
kDASettingsBodyTypeKey
kDASettingsOofInternalMessageKey
kDASettingsOofExternalStateKey
kDASettingsOofExternalMessageKey
kDAEServerSimulatorHostnameKey
kDAEServerSimulatorActionKey
kDAEServerSimulatorActionBegin
kDAEServerSimulatorActionEnd
logName
logDirectory
maxLogFileSize
maxLogFileCount
wantsCompressedFiles
consoleUsesRealLevels
maxConsoleLevel
maxLogFileLevel
createFileLogFormatBlock
createConsoleLogFormatBlock
createLogFormatBlock
didCreateNewFileBlock
willLogToConsoleBlock
willLogToFileBlock
consoleLevelDefaultsDomain
consoleLevelDefaultsKey
logFileLevelDefaultsDomain
logFileLevelDefaultsKey
enableNewlines
DACPLoggingAddCustomLogConfiguration
DACPLogging.m
facilityStrings
CFArrayGetCount(facilityStrings)
CFNumberGetValue(maxLogFileSizeObj, kCFNumberSInt64Type, &maxLogFileSize)
CFNumberGetValue(maxLogFileCountObj, kCFNumberSInt32Type, &maxLogFileCount)
CFNumberGetValue(maxConsoleLevelObj, kCFNumberSInt32Type, &maxConsoleLevel)
CFNumberGetValue(maxLogFileLevelObj, kCFNumberSInt32Type, &maxLogFileLevel)
maxLogFileSize >= -2
maxLogFileCount >= -2
maxConsoleLevel >= -2
maxLogFileLevel >= -2
.GlobalPreferences
DACPLoggingUnobfuscate
com.apple.DACPLogging.callbackQueue
_maxLogFileLevel
settings != globalSettings
_maxLogFileSize
_maxLogFileCount
_wantsCompressedFiles
_enableNewlines
com.apple.DACPLogging.workQueue
_workQueueSlurpToFileUUID
slurpeeChars
UTF-16 Bytes: 
%04x 
pid_%d
%@/Library/Logs/CrashReporter/DataAccess
com.apple.managedconfiguration.defaultsdidchange
v12@?0i8
com.apple.AppSupport.loggingDefaultsChanged
com.apple.DACPLogging.recomputeQueue
com.apple.DACPLogging.configurationQueue
_maxConsoleLevel
DAShouldLogPassword
DALoggingwithCategory
DALogging.m
category < DACategoryCount
com.apple.dataaccess
CalDAV
LDAP
PubCal
SubCal
CardDAV
IMAPNotes
CoreDAV
Accounts
General
dataaccess
DAOutputLevel
DALogLevel
DAAccountMigration
^{__CFString=}76@?0i8^{__CFDate=}12^{__CFString=}20^{__CFString=}28r*36r*44Q52^v60^{__CFString=}68
Unknown
Emerg
Alert
Crit 
Error
Warn 
Note 
Info 
Debug
%@|%@|%d|%p|%@|%@|%s|%s:%lu| %@
%@|%@|%d|%p|%@|%@|%@
%p|%@|%@|%s|%s:%lu| %@
%p|%@|%@|%@
Could not create a date formatter
yyyy-MM-dd HH:mm:ss.SSS
IMAP
EASPARSING
displayName
preferredUserAddress
permission
_????_??_??_??_??_???????.log
_????_??_??_??_??_???????.log.gz
%@%@
%@/%s
q24@?0@8@16
%@/.%@
%@/%@_%@.log
%@/%@-latest.log
mobile
private
Library
Logs
fileOpsQueue
yyyy_MM_dd_HH_mm_ssZZZ
ChangeType
AccountIdentifier
AccountTypeIdentifier
OldAccountProperties
Username
Password
OldUsername
OldPassword
ModifiedDataClasses
ClientName
<DAAccountChangeInfo: changeType = %@, accountIdentifier = %@, accountTypeIdentifier = %@, oldAccountProperties = %@, username = %@, password = %@, oldUsername = %@, oldPassword = %@, modifiedDataClasses = %@, clientName = %@>
<keys = %@>
<%d values>
Delete
Modify
CalDAVAccountModifiedByDataAccess
<DASearchQuery %p>: "%@" range: {%ld, %ld}, timeLimit: %d
<DASearchQuery %p>: range: {%ld, %ld}, timeLimit: %d
DAAccountSavePreflighted
DAAccountDoNotSaveReason
kDAAccountIdentifiersToIgnoreForUniquenessCheck
DAAccountPrincipalPath
SubscribedCalendars
com.apple.ical.urlsubscribe.filteralarms
subscription_url
SubCalInsecureConnectionApproved
DACardDAVAccountDSID
SearchResultsData
<%@ %p> %@ %@ (%@): %@
DisplayNameKey
FirstNameKey
LastNameKey
EmailAddressKey
WorkPhoneKey
MobilePhoneKey
CompanyKey
TitleKey
AliasKey
HomePhoneKey
OfficeKey
ServerSourceKey
RecordNameKey
FaxPhoneKey
DepartmentKey
StreetKey
CityKey
StateKey
ZipKey
CountryKey
JpegPhotoKey
ImServiceKey
ImUsernameKey
UriKey
BuildingNameKey
AppleFloorKey
PagerNumberKey
PostalAddressKey
HomePostalAddressKey
PrincipalPathKey
PreferredUserAddressKey
CUAddressesKey
IPhone
MainPhone
WorkFaxPhone
IdentifierOnServerKey
enabled
startDay
endDate
com.apple.calendar.DataAccessExpress
CalDAVOfficeHour
%@ <%p> {%@, %@, %@}
disabled
CalDAVOfficeHour.m
Office hours array must contain seven items
SearchString
RangeLoc
RangeLength
TimeLimit
ContactSearchBase
ContactSearchScope
ContactSearchIncludePhotos
MessageSearchCollectionID
MessageSearchBodyType
MessageSearchTruncationSize
MessageSearchAllOrNone
MessageSearchPriorToDate
MessageSearchMIMESupport
MessageSearchDeepTraversal
MessageSearchRebuildResults
subject
from
participants
recipients
freetext
sent
received
attachment
hasattachment
category
isread
%@ %p: %@
DASRPersistentUUID
DASRDisplayName
DASRAccountType
DASRTimeSpan
DASRTimeInNetworking
DASRAverageHBI
DASRSuccessfulRequests
DASRFailedNetworkRequests
DASRFailedProtocolRequests
DASRUploadedElements
DASRDownloadedElements
DASRFalseMoreAvailableCount
DASRProtocolVersion
DASRSyncingAllowed
DASRLastSuccessNetworkRequestDate
DASRLastFailedNetworkRequestDate
DASRPingGoingOut
DASRPingReceivedNetworkTraffic
DASRPingNewDataWaitingToBeSynced
Please use the appropriate designated initializer for this class.
DAECalendarAvailabilitySpan.m
Invalid parameter not satisfying: %@
startDate != nil
endDate != nil
'startDate' must not be after 'endDate'
startDate: [%@] endDate: [%@], type: [%@]
startDate
type
Busy
Free
NoData
OutOfOffice
Tentative
Unavailable
[%@] displayName: [%@] preferredAddress: [%@] principalPath: [%@]
firstName
lastName
preferredAddress
principalPath
DAFolderChange.m
Only email folder manipulation is allowed at this time
Add change types require a parent id
Add change types require a display name
Modify change types require a folder id
Modify change types require a display name
Can't handle folder change type %ld
70FB9178-576E-4CAA-A08E-F68D57BFD01E
Don't push changes to the temp inbox
%@ %p: changeType %ld folderId %@ parentFolderId %@ displayName %@ dataclass %ld
Who does non-keyed coding nowadays?
DAFCChangeType
DAFCFolderId
DAFCParentFolderId
DAFCDisplayName
DAFCDataclass
DAFCRenameOnCollision
com.apple.dataaccess.BehaviorOptionsChanged
EASParsingLogEnabled
com.apple.DataAccess.BehaviorOptions
BehaviorOptions
com.apple.ManagedConfiguration.profileListChanged
GetOptionsIgnoresCommands
RefreshThrottleTime
IgnoreBadLDAPCerts
DefaultEASTaskTimeout
DAVProbeTimeout
WhitelistedEASProtocols
EnableCookies
multitasking
RemindersForAll
PromptForAllCerts
EnableServerTrustProcessing
CompressRequests
ThunderhillBeta
PerfLogging
CFNetworkLogging
APSEnv
DAAPSEnv
AllIMAPServersSupportNotesSearch
CompletelyIgnoreNotes
WriteOutBrokenCancelationRequests
SendMeCardEverywhere
DAInHoldingPattern
EnableAutomaticAttachmentDownloads
BabysitterEnabled
AlwaysUseCalendarHomeSync
UseContactsFramework
EarlyPingEnabled
CustomAutoDV2UserAgentEnabled
HolidayCalendarURL
https://caldav.icloud.com/.well-known/calendarsearchdav
HolidayCalendarRefreshInterval
ReleaseType
Internal
NumForgivable401s
OrphanCheckEnabled
Download of attachment UUID %@ for accountID %@ progress: %lld bytes of %lld
Download of attachment UUID %@ for account %@ completed.
Share of calendar ID %@ for account %@ completed.
Fetch of office hours for account %{public}@ completed.
Setting of office hours for account %{public}@ completed.
Removing ALL search queries
Failing all folder changes
Removing all attachment downloads
Removing all calendar availability lookups
Removing all granted delegates list requests
Removing all update-granted-delegate-permission requests
Removing all calendar search requests
Removing all group expansions
Removing all share requests
Removing all settings requests
Removing all office hours requests
Removing all subscribed calendar downloads
Remove all subscribed calendar junk checks
Remove all holiday calendar fetches
Daemon died, cleaning up.
LOOK AT ME!!!! dataaccessd couldn't be started.  We won't try again.  If you're seeing this, get ready for some pain
Couldn't create a connection to [%@]
Couldn't create a connection to endpoint: [%@]
Unable to read data to decode error: %@
Swallowing decoder exception of %@, treating as null data
Received request ID [%@] for request with attributes: [%@].  Associated context: [%@]
Malformed callback message from dataaccess daemon: bad account id (%@)
Malformed callback message from dataaccess daemon: no folders (%@)
doServerContactsSearchQueryFinishedWithStatus called back with status %@
Removing query %@ for key %@
Unable to read data to decode search results: %@
Could not deserialize search results from the xpc message
Search results: %@
received results for an unknown search query
folderChange finished with status %@, error %@
Removing folder change %@ for key %@
received results for an unknown folderChange
_oofSettingsRequestsFinished called back with status %@
Removing from inflight dictionary: oof settings request %@ for key %@
Oof settings request results: %@
Status missing from the xpc message
received results for an unknown oof settings request
unable to unarchive results: %@
Unsupported XPC reply type. Reply Type: %@
XPC call performed in: %s
Retry watchFoldersWithSyncKeyMap on exchangesyncd for accountID %@
[DADConnection resumeWatchingFoldersWithKeys:forAccountID] called without a connection. Will not resume.
Retry resumeWatchingFoldersWithSyncKeyMap on exchangesyncd for accountID %@
Retry suspendWatchingFoldersWithKeys on exchangesyncd for accountID %@
Retry stopWatchingFoldersWithKeys on exchangesyncd for accountID %@
XPC Reply Failure. Status Code: %@
Send current policy key to exchangesyncd for accountID %@
Requesting that DataAccess %@ monitoring agents.
Server error in %s communicating with daemon: %@
Handling account change: %{public}@
No change info given
No account identifier given
Failed to encode account change info: %@
updateFolderListForAccountID %@, dataclasses %lx, requireChangedFolders %d, isUserRequested %d
Update folder list on exchangesyncd for accountID %@
updateContentsOfFoldersWithKeys %@ for account id %@, dataclasses 0x%lx isUserRequested %d
Update contents of folders on exchangesyncd for accountID %@
updateContentsOfAllFoldersForAccountID %@, dataclasses 0x%lxx isUserRequested %d
Update contents of all folders on exchangesyncd for accountID %@
nil accountID passed to performServerContactsSearch. Refusing to attempt search
nil search string passed to performServerContactsSearch. Refusing to attempt search
Setting search query %@ for key %@
The accountID %@ is invalid for dataaccessd
Perform server contact search on exchangesyncd for accountID %@
Cancelling search task %p
Removing search query for key %@
Cancel server contact search on exchangesyncd for searchID %@
Process meeting request on exchangesyncd for accountID %@
Async process meeting request on exchangesyncd for accountID %@
Set folder IDs that external clients care about on exchangesyncd for accountID %@
Report folder items sync success on exchangesyncd for accountID %@
Requesting download of attachment UUID %@ for accountID %@
Download context %@ set up for downloading attachment UUID %@ on accountID %@
Begin download attachment on exchangesyncd for accountID %@
Cancelling Download of attachment with downloadID %@
Canceling downloading attachments on exchangesyncd for downloadIDs %@
Requesting share response %ld for calendar %@ for accountID %@
Not continuing with respondToSharedCalendarInvite. Given calendarId or accountId is nil.
Share request %@ set up for sharing calendar id %@ on accountID %@
Reporting calendar %@ for accountID %@ as junk
Not continuing with reportSharedCalendarInviteAsJunkForCalendarWithID. Given calendarId or accountId is nil.
Fetching office hours for accountID %{public}@
Office hours fetch request %{public}@ set up for accountID %{public}@
Setting office hours for accountID %{public}@
Office hours set request %{public}@ set up for accountID %{public}@
Marking a subscription calendar as junk
Checking whether a subscription calendar is junk
Not continuing with checkSubscriptionCalendarIsJunk. Given urlString is nil.
Check junk request %@ set up for subscribed calendar URL %@
Fetching list of available holiday calendars
Not continuing with fetchAvailableHolidayCalendarsWithResultsBlock. completionBlock is null.
Not continuing with fetchAvailableHolidayCalendarsWithResultsBlock. resultsBlock is null.
Holiday calendar fetch request set up: %@
Process folder change on exchangesyncd for accountID %@
Sending message: kDAERegisterForInterrogation
Fill out current EAS timezone info on exchangesyncd
Get active sync device identifier on exchangesyncd
nil accountID passed to performASSettingsRequest. Cannot continue.
Adding to inflight dictionary: oof %@ request %@ for key %@
Retrieve OOF settings on exchangesyncd for accountID %@
Update OOF settings on exchangesyncd for accountID %@
Checking OOF supported on exchangesyncd for accountID %@
Invalid 'accountID' provided: [%@].
Invalid 'startDate' [%@] and/or 'endDate' [%@] provided.
No 'addresses' provided.
Will not issue calendar availability request.
Preparing calendar availability request.  accountID: [%@] startDate: [%@] endDate: [%@] ignoredEventID: [%@] addresses: [%@]
Retry request calendar availability on exchangesyncd for accountID %@
nil 'requestID' provided.  Will not cancel any calendar availability requests.
Retry canceling calendar availability request on exchangesyncd for requestID %@
Unable to decode results: %@
Error unarchiving subcal summary data: %@
Error unarchiving subcal download error: %@
Preparing granted delegates list request for accountID: [%@]
Preparing update granted delegate permission for accountID: [%@], delegate uri: %@, permission: %ld
Unable to encode granted delegate with URI: %@
Exchange delegates are not supported on this platform
No 'terms' provided.
No 'recordTypes' provided.
Will not issue calendar directory search.
Preparing calendar directory search.  accountID: [%@] recordTypes:[%@] resultLimit: [%lu] terms: [%@]
Received search ID [%@] for search with attributes: [%@].  Associated context: [%@]
Retry calendar directory search on exchangesyncd for accountID %@
nil 'searchID' provided.  Will not cancel any calendar directory searches.
Cancelled calendar directory search with ID: [%@].
Retry canceling calendar directory search on exchangesyncd for searchID %@
No 'principalPath' provided.
Will not do group expansion.
Preparing group expansion.  accountID: [%@]  principalPath: [%@]
in _resetCertWarningsForAccount, _accountIdsWithAlreadyResetCerts is %@
in %s, _accountIdsWithAlreadyResetThrottleTimers is %@
Resetting shouldResetCertWarnings and throttle timers
unknown request sent to connection.
request: %@
Could not create a new log file setting.
Cannot allocate global log settings.
Could not create a copy of the log file settings.
Cannot append data to log file because workSettings is NULL.
Cannot append data to log file because shared work settings is NULL. Facilities: %@
Can't append data to log file, even after retrying. Giving up. Facilities: %@
Could not get file UUID.
Got UUID: %@
Can't slurp lookaside file into log file, even after retrying. Giving up. Facilities: %@
Could not allocate buffer for logging.
Cannot encode string into UTF-8.
Re-reading all defaults values.
Recomputed max accepted logging level. New max: %d
Rereading configuration for %@
Defaults domain %@ and key %@ cannot be converted into an integer.
Defaults domain %@ and key %@ is not a number.
Rejecting domain %@ key %@ value of %d.
Leaking old createFileLogFormatBlock because it was set after logging has begun for facilities %@
Leaking old createConsoleLogFormatBlock because it was set after logging has begun for facilities %@
The log file has been deleted before we had a chance to open it.
Opened existing log file for writing: %@
FD: %d
Watching file: %@, FD: %d
Created new dispatch source %p
Received file event for file %@
Log file has been deleted: %@
Closing FD %d
Closing file at %@, FD %d
The file at path %@ is not a directory.
Cannot create directory %@. Error: %@
Created directory at path: %@
Cannot create temporary linked file at %@
Cannot link file to path %@
Created new log file %@.
The name of the symlink file clashes with an existing file: %@
Created symlink link: %@. Destination: %@
Could not chmod symlink to latest log file. Error code: %d - message: %s. Symlink: %@
Could not create symlink to latest log file: %@
Checking size of log file at path %@
Cannot get attributes of file at path %@. Error: %@
Compressing file at %@
Could not move compressed file from %@ to %@. Error: %@
Could not compress file. Status: %d
Handling getUUIDForPath
Testing requested log folder %@
Matched client home directory: %s
Requested path into client home directory: %@
Log folder: 
 must begin with /Library/Logs in the user
s home directory.
The path %@ does not begin with the caller's home directory.
Resolved log file folder to %@
Could not create directory %@. Error: %@
Folder path %@ does not refer to a directory.
Get UUID for for folder resulted in an error. Folder: %@. Basename: %@.
Handling logData
Cannot find UUID. Asking client to retry.
Log data resulted in an error. UUID: %@.
Handling slurpFile
Slurp to file UUID resulted in an error. UUID: %@.
Missing account identifier when attempting to decode DAAccountChangeInfo
Missing account type identifier when attempting to decode DAAccountChangeInfo
Discarding overly-complex recurrence for AVAILABLE, iCal doesn't understand it.
Discarding non-recurring AVAILABLE, iCal doesn't understand it.
Discarding non-same-day AVAILABLE, iCal doesn't understand it.
Discarding non-current VAVAILABILITY, iCal doesn't understand it.
Why are we combining status reports for different accounts? %@ vs. %@
Protocol version is updated to %@
Bumping behavior token number
Turning off cookie support because we are running on older hardware
Due to a profile setting, we are forcing cookies to be %@abled
DA is in a holding pattern.  We will not be syncing any time soon
Device is a %@customer install
softlink:o:path:/System/Library/PrivateFrameworks/ExchangeSyncExpress.framework/ExchangeSyncExpress
DAEGrantedDelegatesListContext
DAEHolidayCalendarFetchResult
NSSecureCoding
NSCoding
DATrafficLogFilename
DADAMContainerIDCacheKey
NSCopying
DADownloadContext
DASharedCalendarContext
DAOfficeHoursContext
DAEGroupExpansionContext
DACheckSubscribedCalendarIsJunkContext
DAHolidayCalendarsFetchContext
DADConnection
DAESubscribedCalendarSummary
DAECalendarAvailabilityContext
DAOofParams
DAOofSettingsInfo
DAECalendarDirectorySearchContext
DAAccountExternalIdentificationInfo
DAEGrantedDelegate
DACPLogShared
DACPLogDFile
DAAccountChangeInfo
DAESubscriptionCalendarDownloadContext
DASearchQuery
DASharedAccountProperties
DAContactSearchResultElement
DAContactsSearchQuery
CalDAVOfficeHour
DAMailboxSearchQuery
DAStatusReport
DADisableableObject
DAECalendarAvailabilitySpan
DAECalendarDirectorySearchResult
DAFolderChange
DAEUpdateGrantedDelegatePermissionContext
DABehaviorOptions
encodeInt:forKey:
readDataOfLength:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
array
mutableCopy
substringToIndex:
encodeDouble:forKey:
encodeBool:forKey:
moveItemAtPath:toPath:error:
archivedDataWithRootObject:requiringSecureCoding:error:
setDtstart:
raise
subscribedCalendarRequiresPassword:withContinuation:
setYear:
countByEnumeratingWithState:objects:count:
month
rrule
archivedDataWithRootObject:
decodeObjectOfClasses:forKey:
calendar
initWithObjects:
setDtstamp:
subscribedCalendarProgressedTo:totalBytes:
fileSystemRepresentation
count
decodeObjectOfClass:forKey:
bytes
setDtend:
initWithLocaleIdentifier:
allowsKeyedCoding
subscribedCalendarFailedWithError:
oofRequestInfo:finishedWithResult:error:
fileSize
initWithInteger:
copy
processName
decodeIntegerForKey:
setByday:
byday
earlierDate:
unsignedIntValue
subscribedCalendarDidFinishLoading:
minute
fileExistsAtPath:isDirectory:
containsObject:
decodeIntForKey:
initWithFrequency:
setWithObjects:
allocWithZone:
duration
subarrayWithRange:
bundleIdentifier
fileExistsAtPath:
setWithArray:
URLWithString:
isEqualToString:
processInfo
unarchivedObjectOfClasses:fromData:error:
decodeDoubleForKey:
dtstart
allValues
isEqualToDate:
components:fromDate:
year
stringWithUTF8String:
initWithFormat:
hour
makeUID
unarchivedObjectOfClass:fromData:error:
decodeBoolForKey:
dtend
boolValue
stringWithFormat:
components
isEqualToData:
allObjects
makeObjectsPerformSelector:withObject:
initWithFileDescriptor:closeOnDealloc:
boolForKey:
stringFromDate:
setUid:
dateFromComponents:
compare:
doubleValue
allKeys
dateByAddingTimeInterval:
setDay:
weekday
stringByAppendingPathExtension:
setObject:forKeyedSubscript:
setRrule:
timeZoneWithName:
isEqualToArray:
removeObserver:
initWithData:options:error:
mainBundle
objectForKeyedSubscript:
setObject:forKey:
stringByAppendingPathComponent:
setDateStyle:
handleFailureInMethod:object:file:lineNumber:description:
timeZoneForSecondsFromGMT:
setMonth:
date
removeObjectForKey:
longLongValue
addObserver:selector:name:object:
objectForKey:
dictionaryWithObjects:forKeys:count:
value
setDateFormat:
removeObject:
addObjectsFromArray:
handleFailureInFunction:file:lineNumber:description:
objectAtIndexedSubscript:
dictionaryWithObject:forKey:
integerValue
postNotificationName:object:userInfo:
dataUsingEncoding:
objectAtIndex:
removeItemAtPath:error:
setTimeZone:
addObject:
timeIntervalSinceDate:
attributesOfItemAtPath:error:
initWithCapacity:
dictionaryWithDictionary:
exceptionWithName:reason:userInfo:
intValue
postNotificationName:object:
initWithCalendarIdentifier:
length
folderChange:finishedWithStatus:error:
removeAllObjects
initWithYear:month:day:hour:minute:second:timeZone:
ICSDataWithOptions:
numberWithUnsignedInteger:
timeInterval
characterAtIndex:
UTF8String
errorWithDomain:code:userInfo:
dictionary
numberWithLongLong:
initWithWeekday:
enumerateKeysAndObjectsUsingBlock:
second
laterDate:
initWithCalendar:
currentLocale
systemDateForDate:options:
setLocale:
numberWithInteger:
arrayWithObjects:count:
arrayWithObject:
currentHandler
standardUserDefaults
numberWithInt:
setComponents:options:
systemCalendarForDate:options:
numberWithDouble:
lastPathComponent
defaultTimeZone
arrayWithCapacity:
setComponents:
sortUsingComparator:
initWithArray:
pathWithComponents:
encodeObject:forKey:
lastObject
searchQuery:returnedResults:
absoluteString
arrayByAddingObjectsFromArray:
defaultManager
numberWithBool:
pathComponents
encodeInteger:forKey:
readDataToEndOfFile
createFileAtPath:contents:attributes:
arrayByAddingObject:
searchQuery:finishedWithError:
initForReadingFromData:error:
defaultCenter
init
initWithResultsBlock:
finishedWithResults:error:
.cxx_destruct
_resultsBlock
description
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
URLString
setURLString:
region
setRegion:
language
setLanguage:
calendarDescription
setCalendarDescription:
_URLString
_region
_language
_calendarDescription
T@"NSString",&,N,V_URLString
T@"NSString",&,N,V_region
T@"NSString",&,N,V_language
T@"NSString",&,N,V_calendarDescription
filenameWithBasename:
filenameWithBasename:bundle:processInfo:uid:
copyWithZone:
initWithAccountID:andDataclass:
isEqual:
hash
accountID
dataclass
_accountID
_dataclass
T@"NSString",R,N,V_accountID
Tq,R,N,V_dataclass
initWithAttachmentUUID:accountID:queue:downloadProgressBlock:completionBlock:
updateProgressDownloadedByteCount:totalByteCount:
finishedWithError:
attachmentUUID
queue
progressBlock
completionBlock
_attachmentUUID
_queue
_progressBlock
_completionBlock
T@"NSString",R,N,V_attachmentUUID
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@?,R,C,N,V_progressBlock
T@?,R,C,N,V_completionBlock
initWithCalendarID:accountID:queue:completionBlock:
calendarID
shouldSyncCalendar
setShouldSyncCalendar:
_shouldSyncCalendar
_calendarID
T@"NSString",R,N,V_calendarID
TB,N,V_shouldSyncCalendar
isFetch
finishFetchWithOfficeHours:error:
finishSetWithError:
abortWithError:
setAccountID:
setQueue:
fetchCompletionBlock
setFetchCompletionBlock:
setCompletionBlock
setSetCompletionBlock:
_fetchCompletionBlock
_setCompletionBlock
TB,R,N
T@"NSString",C,N,V_accountID
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@?,C,N,V_fetchCompletionBlock
T@?,C,N,V_setCompletionBlock
initWithCompletionBlock:
principalPath
results
setResults:
_principalPath
_results
T@"NSString",R,N,V_principalPath
T@"NSDictionary",&,N,V_results
initWithURLString:completionBlock:
urlString
junkStatus
setJunkStatus:
_urlString
_junkStatus
T@"NSString",R,N,V_urlString
Tq,N,V_junkStatus
initWithResultsBlock:completionBlock:
resultsReturned:
resultsBlock
T@?,R,C,N,V_resultsBlock
sendFinishedToConsumerWithError:
dealloc
resetTimersAndWarnings
_dictionarySuitableForLogging:
_logRequestID:forRequestAttributes:associatedContext:
sharedConnection
setShouldIgnoreAccountChanges
_nextStopMonitoringStatusToken
_tearDownInFlightObjects
_serverDiedWithReason:
_connection
_initializeConnection
_initializeConnectionWithXPCEndpoint:
_initializeXPCConnection:
_createReplyToRequest:withProperties:
decodedErrorFromData:
_policyKeyChanged:
_foldersUpdated:
_logDataAccessStatus:
_serverContactsSearchQueryFinished:
_folderChangeFinished:
_getStatusReportsFromClient:
_downloadProgress:
_downloadFinished:
_shareResponseFinished:
_officeHoursRequestFinished:
_oofSettingsRequestsFinished:
_subscriptionCalendarJunkCheckFinished:
_holidayCalendarFetchReturnedResults:
_holidayCalendarFetchFinished:
watchFoldersWithKeys:forAccountID:
_checkInvalidIdExistsInXPCRely:
watchFoldersWithKeys:forAccountID:persistent:
resumeWatchingFoldersWithKeys:forAccountID:
suspendWatchingFoldersWithKeys:forAccountID:
stopWatchingFoldersWithKeys:forAccountID:
_validateXPCReply:
requestPolicyUpdateForAccountID:
currentPolicyKeyForAccountID:
_requestDaemonChangeAgentMonitoringStatus:withToken:waitForReply:
requestDaemonStartMonitoringAgentsWithToken:
requestDaemonStopMonitoringAgents
requestDaemonStartMonitoringAgentsSyncWithToken:
requestDaemonStopMonitoringAgentsSync
handleAccountChange:callback:
updateFolderListForAccountID:andDataclasses:requireChangedFolders:isUserRequested:
updateFolderListForAccountID:andDataclasses:isUserRequested:
updateContentsOfFoldersWithKeys:forAccountID:andDataclasses:isUserRequested:
updateContentsOfFoldersWithKeys:forAccountID:andDataclass:isUserRequested:
updateContentsOfAllFoldersForAccountID:andDataclasses:isUserRequested:
updateContentsOfAllFoldersForAccountID:andDataclass:isUserRequested:
updateFolderListForAccountID:andDataclasses:
updateContentsOfFoldersWithKeys:forAccountID:andDataclass:
updateContentsOfAllFoldersForAccountID:andDataclass:
performServerContactsSearch:forAccountWithID:
cancelServerContactsSearch:
processMeetingRequests:deliveryIdsToClear:deliveryIdsToSoftClear:inFolderWithId:forAccountWithId:
asyncProcessMeetingRequests:deliveryIdsToClear:deliveryIdsToSoftClear:inFolderWithId:forAccountWithId:
setFolderIdsThatExternalClientsCareAboutAdded:deleted:foldersTag:forAccountID:
reportFolderItemsSyncSuccess:forFolderWithID:withItemsCount:andAccountWithID:
handleURL:
_sendXPCMessageSynchronous:withParameters:handlerBlock:
beginDownloadingAttachmentWithUUID:accountID:queue:progressBlock:completionBlock:
_cancelDownloadsWithIDs:error:
cancelDownloadingAttachmentWithDownloadID:error:
respondToSharedCalendarInvite:forCalendarWithID:accountID:queue:completionBlock:
reportSharedCalendarInviteAsJunkForCalendarWithID:accountID:queue:completionBlock:
fetchOfficeHoursForAccountWithID:queue:completionBlock:
setOfficeHours:forAccountWithID:queue:completionBlock:
reportSubscriptionCalendarAsJunk:
checkSubscriptionCalendarIsJunk:queue:completionBlock:
fetchAvailableHolidayCalendarsWithResultsBlock:completionBlock:queue:
processFolderChange:forAccountWithID:
statusReports
reallyRegisterForInterrogation
registerForInterrogationWithBlock:
fillOutCurrentEASTimeZoneInfo
activeSyncDeviceIdentifier
_performOofSettingsRequest:forAccountWithID:forUpdate:
retrieveOofSettingsRequest:forAccountWithID:
updateOofSettingsRequest:forAccountWithID:
isOofSettingsSupportedForAccountWithID:completionBlock:
requestCalendarAvailabilityWithAccountID:startDate:endDate:ignoredEventID:addresses:resultsBlock:completionBlock:
cancelCalendarAvailabilityRequestWithID:
_calendarAvailabilityRequestReturnedResults:
_calendarAvailabilityRequestFinished:
downloadSubscribedCalendarWithURL:queue:delegate:
cancelDownloadingSubscriptionCalendarWithDownloadID:
_downloadSubscribedCalendarProgress:
_downloadSubscribedCalendarFinished:
_downloadSubscribedCalendarRequiresPassword:
validateCandidateSubscriptionURLWithICloud:queue:completionBlock:
requestGrantedDelegatesListForAccountID:resultsBlock:
cancelGrantedDelegatesListRequestWithID:
_grantedDelegatesListRequestFinished:
updateGrantedDelegateForAccountID:grantedDelegate:action:resultsBlock:
addExchangeDelegateWithName:emailAddress:toAccountWithID:completion:
removeExchangeDelegateWithSourceID:fromParentAccountWithID:completion:
_updateGrantedDelegatePermissionRequestFinished:
performCalendarDirectorySearchWithAccountID:terms:recordTypes:resultLimit:resultsBlock:completionBlock:
cancelCalendarDirectorySearchWithID:
_calendarDirectorySearchReturnedResults:
_calendarDirectorySearchFinished:
performGroupExpansionWithAccountID:principalPath:completionBlock:
_groupExpansionFinished:
_init
_resetCertWarningsForAccountId:andDataclasses:isUserRequested:
_resetThrottleTimersForAccountId:
_registerForAppResumedNotification
_dispatchMessage:
beginCalDAVServerSimulationWithHostname:
endCalDAVServerSimulationWithHostname:
registered
setRegistered:
_conn
_muckingWithConn
_muckingWithInFlightCollections
_accountIdsWithAlreadyResetCerts
_accountIdsWithAlreadyResetThrottleTimers
_statusReportBlock
_inFlightSearchQueries
_inFlightFolderChanges
_inFlightAttachmentDownloads
_inFlightCalendarAvailabilityRequests
_inFlightCalendarDirectorySearches
_inFlightGroupExpansions
_inFlightShareRequests
_inFlightOofSettingsRequests
_inFlightOfficeHoursRequests
_inFlightGrantedDelegatesListRequests
_inFlightUpdateGrantedDelegatePermissionRequests
_inFlightSubscribedCalendarDownloads
_inFlightSubscribedCalendarJunkChecks
_inFlightHolidayCalendarFetches
_registered
TB,N,V_registered
title
setTitle:
notes
setNotes:
color
setColor:
refreshInterval
setRefreshInterval:
subscriptionID
setSubscriptionID:
data
setData:
subscriptionURL
setSubscriptionURL:
_title
_notes
_color
_refreshInterval
_subscriptionID
_data
_subscriptionURL
T@"NSString",&,N,V_title
T@"NSString",&,N,V_notes
T@"NSString",&,N,V_color
Td,N,V_refreshInterval
T@"NSString",&,N,V_subscriptionID
T@"NSData",&,N,V_data
T@"NSURL",&,N,V_subscriptionURL
initWithDictionary:
dictionaryRepresentation
dictionaryRepresentationForASSettingTask
isEnabled
enableOof:From:to:withMessage:
oofState
setOofState:
startTime
setStartTime:
endTime
setEndTime:
message
setMessage:
externalState
setExternalState:
externalMessage
setExternalMessage:
_oofState
_externalState
_startTime
_endTime
_message
_externalMessage
Ti,N,V_oofState
T@"NSDate",&,N,V_startTime
T@"NSDate",&,N,V_endTime
T@"NSString",&,N,V_message
Ti,N,V_externalState
T@"NSString",&,N,V_externalMessage
requestID
setRequestID:
consumer
setConsumer:
_requestID
_consumer
T@"NSString",&,N,V_requestID
T@"<DAOofResponseDelegate>",W,N,V_consumer
finishedWithError:exceededResultLimit:
initWithHost:port:useSSL:ownerAddresses:preferredOwnerAddress:
host
port
useSSL
ownerAddresses
preferredOwnerAddress
_useSSL
_host
_port
_ownerAddresses
_preferredOwnerAddress
T@"NSString",R,C,N,V_host
Tq,R,N,V_port
TB,R,N,V_useSSL
T@"NSArray",R,C,N,V_ownerAddresses
T@"NSString",R,C,N,V_preferredOwnerAddress
setUri:
displayName
setDisplayName:
preferredUserAddress
setPreferredUserAddress:
permission
setPermission:
_uri
_displayName
_preferredUserAddress
_permission
T@"NSString",C,N,V_uri
T@"NSString",C,N,V_displayName
T@"NSString",C,N,V_preferredUserAddress
Tq,N,V_permission
DACPLogMakeUUID
DACPLogSubarrayFromIndexToEndOfArray:
DACPLogArrayBeginsWithArray:
initWithFolder:baseName:
_filePathsMatchingPattern:
_getLatestMatchingFilePath
_openFileOutDidCreateNewFile:outNewFilePath:
_beginWatchingFile
_closeFileWithFileEventDispatchSource:
_startNewFile
logData:outDidCreateNewFile:outNewFilePath:
startNewFile
checkForMaximumFileSize:wantsCompressed:outDidCreateNewFile:outNewFilePath:
cullFilesMaxFileCount:
folder
baseName
UUID
_folder
_baseName
_UUID
_path
_fileEventDispatchSource
_fileWasDeleted
T@"NSString",R,&,N,V_folder
T@"NSString",R,&,N,V_baseName
T@"NSString",R,&,N,V_UUID
shared
T@"DACPLogShared",R
_array:beginsWithArray:outRemainingArray:
_getUUIDForFolder:baseName:
_logData:UUID:startNewFile:sizeCheck:wantsCompressed:maxFileCount:outDidCreateNewFile:outNewFilePath:
_slurpToFileUUID:slurpeeFileDescriptor:prefix:suffix:startNewFile:sizeCheck:wantsCompressed:maxLogFileCount:outDidCreateNewFile:outNewFilePath:
_UUIDToFileMap
_stringForChangeType:
initWithChangeType:accountIdentifier:accountTypeIdentifier:oldAccountProperties:username:password:oldUsername:oldPassword:modifiedDataClasses:clientName:
redactedDescription
changeType
accountIdentifier
accountTypeIdentifier
oldAccountProperties
username
password
oldUsername
oldPassword
modifiedDataClasses
clientName
_changeType
_accountIdentifier
_accountTypeIdentifier
_oldAccountProperties
_username
_password
_oldUsername
_oldPassword
_modifiedDataClasses
_clientName
TQ,R,N,V_changeType
T@"NSString",R,C,N,V_accountIdentifier
T@"NSString",R,C,N,V_accountTypeIdentifier
T@"NSDictionary",R,C,N,V_oldAccountProperties
T@"NSString",R,C,N,V_username
T@"NSString",R,C,N,V_password
T@"NSString",R,C,N,V_oldUsername
T@"NSString",R,C,N,V_oldPassword
T@"NSSet",R,C,N,V_modifiedDataClasses
T@"NSString",R,C,N,V_clientName
callOutToDelegate:
asyncCallOutToDelegate:
delegate
setDelegate:
_delegate
T@"<DAESubscribedCalendarDownloadDelegate>",&,N,V_delegate
searchQueryWithSearchString:consumer:
initWithSearchString:consumer:
initWithSearchString:predicate:consumer:
initWithDictionaryRepresentation:consumer:
isQueryRunning
sendResultsToConsumer:
maxResults
setMaxResults:
searchString
setSearchString:
searchPredicate
setSearchPredicate:
range
setRange:
timeLimit
setTimeLimit:
searchID
setSearchID:
state
setState:
_timeLimit
_searchString
_searchPredicate
_searchID
_state
_range
T@"NSString",C,N,V_searchString
T@"NSPredicate",C,N,V_searchPredicate
T@"NSString",C,N,V_searchID
TQ,N,V_state
T{_NSRange=QQ},N,V_range
TI,N
Ti,N,V_timeLimit
T@"<DASearchQueryConsumer>",W,N,V_consumer
parentAccountTypes
leafAccountTypes
leafAccountTypesToCheckForEquality
DAAccountSavePreflighted
DAAccountDoNotSaveReason
DAAccountIdentifiersToIgnoreForUniquenessCheck
DAAccountPrincipalPath
CalDAVSubscribedCalendarsKey
SubCalFilterAlarmsKey
SubCalSubscriptionURLKey
SubCalTitleKey
SubCalInsecureConnectionApproved
DACardDAVAccountDSID
isEqualToDAContactSearchResultElement:
firstName
setFirstName:
lastName
setLastName:
emailAddress
setEmailAddress:
workPhone
setWorkPhone:
mobilePhone
setMobilePhone:
company
setCompany:
homePhone
setHomePhone:
alias
setAlias:
office
setOffice:
serverSource
setServerSource:
recordName
setRecordName:
faxPhone
setFaxPhone:
department
setDepartment:
street
setStreet:
city
setCity:
setZip:
country
setCountry:
jpegPhoto
setJpegPhoto:
imService
setImService:
imUsername
setImUsername:
buildingName
setBuildingName:
appleFloor
setAppleFloor:
pagerNumber
setPagerNumber:
postalAddress
setPostalAddress:
homePostalAddress
setHomePostalAddress:
setPrincipalPath:
cuAddresses
setCuAddresses:
iPhone
setIPhone:
mainPhone
setMainPhone:
workFaxPhone
setWorkFaxPhone:
identifierOnServer
setIdentifierOnServer:
_firstName
_lastName
_emailAddress
_workPhone
_mobilePhone
_company
_homePhone
_alias
_office
_serverSource
_recordName
_faxPhone
_department
_street
_city
_zip
_country
_jpegPhoto
_imService
_imUsername
_buildingName
_appleFloor
_pagerNumber
_postalAddress
_homePostalAddress
_cuAddresses
_iPhone
_mainPhone
_workFaxPhone
_identifierOnServer
T@"NSString",C,N,V_firstName
T@"NSString",C,N,V_lastName
T@"NSString",C,N,V_emailAddress
T@"NSString",C,N,V_workPhone
T@"NSString",C,N,V_mobilePhone
T@"NSString",C,N,V_company
T@"NSString",C,N,V_title
T@"NSString",C,N,V_homePhone
T@"NSString",C,N,V_alias
T@"NSString",C,N,V_office
T@"NSString",C,N,V_serverSource
T@"NSString",C,N,V_recordName
T@"NSString",C,N,V_faxPhone
T@"NSString",C,N,V_department
T@"NSString",C,N,V_street
T@"NSString",C,N,V_city
T@"NSString",C,N,V_state
T@"NSString",C,N,V_zip
T@"NSString",C,N,V_country
T@"NSData",C,N,V_jpegPhoto
T@"NSString",C,N,V_imService
T@"NSString",C,N,V_imUsername
T@"NSString",C,N,V_buildingName
T@"NSString",C,N,V_appleFloor
T@"NSString",C,N,V_pagerNumber
T@"NSString",C,N,V_postalAddress
T@"NSString",C,N,V_homePostalAddress
T@"NSString",C,N,V_principalPath
T@"NSArray",C,N,V_cuAddresses
T@"NSString",C,N,V_iPhone
T@"NSString",C,N,V_mainPhone
T@"NSString",C,N,V_workFaxPhone
T@"NSString",&,N,V_identifierOnServer
contactsSearchQueryWithSearchString:searchBase:searchScope:consumer:
initWithSearchString:searchBase:searchScope:consumer:
searchBase
setSearchBase:
searchScope
setSearchScope:
includePhotos
setIncludePhotos:
calendarInitiated
setCalendarInitiated:
_includePhotos
_calendarInitiated
_searchBase
_searchScope
T@"NSString",C,N,V_searchBase
T@"NSString",C,N,V_searchScope
TB,N,V_includePhotos
TB,N,V_calendarInitiated
logHandle
officeHoursFromData:
officeHoursFromICS:
dataFromOfficeHours:
_gregorianGMTCalendar
icsFromOfficeHours:
enabled
setEnabled:
startDate
setStartDate:
endDate
setEndDate:
_enabled
_startDate
_endDate
TB,N,V_enabled
T@"NSDateComponents",C,N,V_startDate
T@"NSDateComponents",C,N,V_endDate
mailboxSearchQueryWithSearchString:consumer:
mailboxSearchQueryWithSearchString:predicate:consumer:
collectionID
setCollectionID:
bodyType
setBodyType:
truncationSize
setTruncationSize:
allOrNone
setAllOrNone:
priorToDate
setPriorToDate:
MIMESupport
setMIMESupport:
deepTraversal
setDeepTraversal:
rebuildResults
setRebuildResults:
_allOrNone
_deepTraversal
_rebuildResults
_bodyType
_MIMESupport
_collectionID
_truncationSize
_priorToDate
T@"NSString",&,N,V_collectionID
Ti,N,V_bodyType
Tq,N,V_truncationSize
TB,N,V_allOrNone
T@"NSDate",&,N,V_priorToDate
Ti,N,V_MIMESupport
TB,N,V_deepTraversal
TB,N,V_rebuildResults
initWithDictionaryRepresentation:
mergeStatusReport:
timeSpan
noteSuccessfulRequestWithNumDownloadedElements:numUploadedElements:
noteSuccessfulRequestWithNumDownloadedElements:
noteFailedNetworkRequest
noteFailedProtocolRequest
noteNewHBIDataPoint:
noteTimeSpentInNetworking:
noteFalseMoreAvailableResponse
persistentUUID
setPersistentUUID:
accountType
setAccountType:
setTimeSpan:
timeInNetworking
setTimeInNetworking:
averageHBI
setAverageHBI:
successfulRequests
setSuccessfulRequests:
failedNetworkRequests
setFailedNetworkRequests:
failedProtocolRequests
setFailedProtocolRequests:
downloadedElements
setDownloadedElements:
uploadedElements
setUploadedElements:
falseMoreAvailableCount
setFalseMoreAvailableCount:
protocolVersion
setProtocolVersion:
syncingAllowed
setSyncingAllowed:
lastSuccessDate
setLastSuccessDate:
lastFailureDate
setLastFailureDate:
creationDate
setCreationDate:
numHBIDataPoints
setNumHBIDataPoints:
_syncingAllowed
_numHBIDataPoints
_persistentUUID
_accountType
_timeSpan
_timeInNetworking
_averageHBI
_successfulRequests
_failedNetworkRequests
_failedProtocolRequests
_downloadedElements
_uploadedElements
_falseMoreAvailableCount
_protocolVersion
_lastSuccessDate
_lastFailureDate
_creationDate
T@"NSDate",&,N,V_creationDate
Ti,N,V_numHBIDataPoints
T@"NSDate",&,N,V_lastSuccessDate
T@"NSDate",&,N,V_lastFailureDate
T@"NSString",&,N,V_persistentUUID
T@"NSString",&,N,V_displayName
T@"NSString",&,N,V_accountType
T@"NSNumber",&,N,V_timeSpan
T@"NSNumber",&,N,V_timeInNetworking
T@"NSNumber",&,N,V_averageHBI
T@"NSNumber",&,N,V_successfulRequests
T@"NSNumber",&,N,V_failedNetworkRequests
T@"NSNumber",&,N,V_failedProtocolRequests
T@"NSNumber",&,N,V_downloadedElements
T@"NSNumber",&,N,V_uploadedElements
T@"NSNumber",&,N,V_falseMoreAvailableCount
T@"NSString",&,N,V_protocolVersion
TB,N,V_syncingAllowed
disable
isDisabled
setIsDisabled:
_isDisabled
TB,N,V_isDisabled
initWithStartDate:endDate:type:
type
_type
Tq,R,N,V_type
T@"NSDate",R,N,V_startDate
T@"NSDate",R,N,V_endDate
preferredAddress
setPreferredAddress:
_preferredAddress
T@"NSString",&,N,V_firstName
T@"NSString",&,N,V_lastName
T@"NSString",&,N,V_preferredAddress
T@"NSString",&,N,V_principalPath
initFolderChangeWithChangeType:folderId:parentFolderId:displayName:dataclass:consumer:
setChangeType:
folderId
setFolderId:
parentFolderId
setParentFolderId:
setDataclass:
taskId
setTaskId:
renameOnCollision
setRenameOnCollision:
_renameOnCollision
_taskId
_folderId
_parentFolderId
TQ,N,V_changeType
T@"NSString",&,N,V_folderId
T@"NSString",&,N,V_parentFolderId
Tq,N,V_dataclass
TI,N,V_taskId
TB,N,V_renameOnCollision
T@"<DAFolderChangeConsumer>",W,N,V_consumer
_startListeningForNotifications
initialize
ignoreSupportedCommands
refreshThrottleTime
ignoreBadLDAPCerts
defaultEASTaskTimeoutOutWasFound:
defaultDAVProbeTimeout
whitelistedEASProtocols
_shouldForceCookies:
cookiesEnabled
calDAVRemindersForAll
promptForAllCerts
enablePromptForServerTrust
compressRequests
useThunderhillBetaServers
perfLogging
CFNetworkLogging
APSEnv
allIMAPServersSupportNotesSearch
completelyIgnoreNotes
writeOutBrokenCancelationRequests
sendMeCardEverywhere
isInHoldingPattern
enableAutomaticAttachmentDownloads
babysitterEnabled
alwaysUseCalendarHomeSync
useContactsFramerwork
useContactsFramework
earlyPingEnabled
customAutoDV2UserAgentEnabled
holidayCalendarURL
holidayCalendarRefreshInterval
isCustomerInstall
isAppleInternalInstall
numForgivable401s
isEASParsingLogEnabled
orphanCheckEnabled
DAManagedDefaultForKey:
addDAManagedDefaults:
removeDAManagedDefaults:
@24@0:8@?16
v32@0:8@16@24
v16@0:8
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
@"NSString"
@44@0:8@16@24@32I40
@24@0:8^{_NSZone=}16
@32@0:8@16q24
B24@0:8@16
Q16@0:8
q16@0:8
@56@0:8@16@24@32@?40@?48
v32@0:8q16q24
@?16@0:8
@"NSObject<OS_dispatch_queue>"
@48@0:8@16@24@32@?40
v20@0:8B16
v24@0:8@?16
@"NSDictionary"
@32@0:8@16@?24
v24@0:8q16
@32@0:8@?16@?24
v40@0:8@16@24@32
@32@0:8@16@24
B32@0:8@16@24
B36@0:8@16@24B32
v32@0:8B16Q20B28
v24@0:8Q16
v32@0:8@16@?24
B40@0:8@16q24B32B36
B36@0:8@16q24B32
B44@0:8@16@24q32B40
B32@0:8@16q24
B40@0:8@16@24q32
B56@0:8@16@24@32@40@48
v56@0:8@16@24@32@40@48
B48@0:8@16@24@32@40
v44@0:8B16@20Q28@36
v36@0:8B16@20@?28
v56@0:8q16@24@32@40@?48
v48@0:8@16@24@32@?40
v40@0:8@16@24@?32
v40@0:8@?16@?24@32
B24@0:8@?16
@72@0:8@16@24@32@40@48@?56@?64
@40@0:8@16@24@32
@48@0:8@16@24q32@?40
@64@0:8@16@24@32Q40@?48@?56
v36@0:8@16q24B32
@"NSObject<OS_xpc_object>"
@"NSMutableSet"
@"NSMutableDictionary"
d16@0:8
v24@0:8d16
@"NSData"
@"NSURL"
v44@0:8B16@20@28@36
i16@0:8
v20@0:8i16
@"NSDate"
@"<DAOofResponseDelegate>"
v28@0:8@16B24
@52@0:8@16q24B32@36@44
@"NSArray"
@24@0:8Q16
v32@0:8^B16^@24
B40@0:8@16^B24^@32
v44@0:8q16B24^B28^@36
@"NSObject<OS_dispatch_source>"
B40@0:8@16@24^@32
B72@0:8@16@24B32q36B44q48^B56^@64
B80@0:8@16i24@28@36B44q48B56i60^B64^@72
@96@0:8Q16@24@32@40@48@56@64@72@80@88
@"NSSet"
@"<DAESubscribedCalendarDownloadDelegate>"
I16@0:8
v20@0:8I16
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
@"NSPredicate"
@"<DASearchQueryConsumer>"
{_NSRange="location"Q"length"Q}
@48@0:8@16@24@32@40
@"NSDateComponents"
v24@0:8i16i20
@"NSNumber"
@40@0:8@16@24q32
@64@0:8Q16@24@32@40q48@56
@"<DAFolderChangeConsumer>"
d24@0:8^B16
B24@0:8^B16
