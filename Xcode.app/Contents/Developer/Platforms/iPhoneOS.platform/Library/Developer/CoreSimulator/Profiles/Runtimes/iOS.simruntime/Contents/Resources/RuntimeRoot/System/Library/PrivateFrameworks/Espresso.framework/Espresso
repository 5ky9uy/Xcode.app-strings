@(#)PROGRAM:Espresso  PROJECT:Espresso-235
>N8Espresso17MetalLowmemEngine11pool_kernelE
N8Espresso17MetalLowmemEngine10lrn_kernelE
N8Espresso17MetalLowmemEngine13concat_kernelE
N8Espresso17MetalLowmemEngine17metal_lowmem_baseE
N8Espresso17MetalLowmemEngine18elementwise_kernelE
N8Espresso17MetalLowmemEngine12split_kernelE
N8Espresso17MetalLowmemEngine14softmax_kernelE
N8Espresso17MetalLowmemEngine15upsample_kernelE
N8Espresso17MetalLowmemEngine22general_padding_kernelE
N8Espresso17MetalLowmemEngine16batchnorm_kernelE
N8Espresso17MetalLowmemEngine20flatten_kernel_metalE
N8Espresso17MetalLowmemEngine17crop_kernel_metalE
N8Espresso17MetalLowmemEngine17activation_kernelE
N8Espresso17MetalLowmemEngine12slice_kernelE
N8Espresso17MetalLowmemEngine26spatial_transformer_kernelE
N8Espresso17MetalLowmemEngine17transplant_kernelE
N8Espresso21kernel_with_uniforms_INS_16batchnorm_paramsENS_29abstract_kernel_with_weights_EEE
N8Espresso21kernel_with_uniforms_INS_20convolution_uniformsENS_29abstract_kernel_with_weights_EEE
N8Espresso4blobIfLi1EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobItLi4EEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso31dump_network_layers_blobs_stateENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso19blob_storage_memoryENS_9allocatorIS2_EEEE
?N8Espresso23pass_params_batch_splitE
N8Espresso16pass_batch_splitE
NSt3__120__shared_ptr_pointerIPN8Espresso3netE12noop_deleterNS_9allocatorIS2_EEEE
12noop_deleter
NSt3__120__shared_ptr_emplaceIN8Espresso44pass_update_absolute_indexes_after_transformENS_9allocatorIS2_EEEE
N8Espresso5layerE
N8Espresso9factory_tINS_6SerDes13layer_io_baseEEE
NSt3__120__shared_ptr_emplaceIN8Espresso9factory_tINS1_6SerDes13layer_io_baseEEENS_9allocatorIS5_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso5layerENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23rule_convolution_groupsENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27pass_constant_if_conditionsENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceI19rule_fuse_bias_convNS_9allocatorIS1_EEEE
19rule_fuse_bias_conv
NSt3__120__shared_ptr_emplaceIN8Espresso12graph_node_tINS1_26generic_convolution_kernelEEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso12graph_node_tINS1_26generic_elementwise_kernelEEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso12graph_node_tINS1_28generic_load_constant_kernelEEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_emplaceI28rule_fuse_bias_inner_productNS_9allocatorIS1_EEEE
28rule_fuse_bias_inner_product
NSt3__120__shared_ptr_emplaceIN8Espresso12graph_node_tINS1_28generic_inner_product_kernelEEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_emplaceI20rule_fuse_scale_convNS_9allocatorIS1_EEEE
20rule_fuse_scale_conv
NSt3__120__shared_ptr_emplaceI17rule_fuse_bn_convNS_9allocatorIS1_EEEE
17rule_fuse_bn_conv
NSt3__120__shared_ptr_emplaceIN8Espresso12graph_node_tINS1_24generic_batchnorm_kernelEEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_emplaceI31rule_add_auto_context_transfersNS_9allocatorIS1_EEEE
31rule_add_auto_context_transfers
NSt3__120__shared_ptr_emplaceIN8Espresso12graph_node_tINS1_11base_kernelEEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_emplaceI20rule_input_underflowNS_9allocatorIS1_EEEE
20rule_input_underflow
NSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
yE>NSt3__117bad_function_callE
NSt3__120__shared_ptr_emplaceIN8Espresso29espresso_training_data_sourceENS_9allocatorIS2_EEEE
NSt3__110__function6__funcIZ46-[ETTaskDefinition saveNetwork:inplace:error:]E3$_0NS_9allocatorIS2_EEFvRNS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS3_IcEEEENS_10shared_ptrIN8Espresso23abstract_blob_containerEEEEEEEE
NSt3__110__function6__baseIFvRNS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrIN8Espresso23abstract_blob_containerEEEEEEEE
Z46-[ETTaskDefinition saveNetwork:inplace:error:]E3$_0
NSt3__110__function6__funcIZ57-[ETTaskDefinition saveTrainingNetwork:checkpoint:error:]E3$_1NS_9allocatorIS2_EEFvRNS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS3_IcEEEENS_10shared_ptrIN8Espresso23abstract_blob_containerEEEEEEEE
Z57-[ETTaskDefinition saveTrainingNetwork:checkpoint:error:]E3$_1
N8Espresso28pass_transpose_inner_productE
N8Espresso32analysis_transpose_inner_productE
NSt3__120__shared_ptr_emplaceIN8Espresso28pass_transpose_inner_productENS_9allocatorIS2_EEEE
N8Espresso32universal_dropout_augment_kernelE
N8Espresso20kernel_with_uniformsINS_22dropout_augment_paramsEEE
N8Espresso21kernel_with_uniforms_INS_22dropout_augment_paramsENS_11base_kernelEEE
N8Espresso37universal_dropout_augment_join_kernelE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIhLi1EEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceINS_26linear_congruential_engineIjLj48271ELj0ELj2147483647EEENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24rule_add_dropout_augmentENS_9allocatorIS2_EEEE
N8Espresso24rule_add_dropout_augmentE
NSt3__120__shared_ptr_emplaceIN8Espresso24rule_add_dropout_augment8status_tENS_9allocatorIS3_EEEE
N8Espresso24rule_add_dropout_augment8status_tE
NSt3__120__shared_ptr_emplaceIN8Espresso29rule_add_dropout_augment_joinENS_9allocatorIS2_EEEE
N8Espresso29rule_add_dropout_augment_joinE
N8Espresso28pass_rpn_tracker_merge_convsE
N8Espresso32analysis_rpn_tracker_merge_convsE
NSt3__120__shared_ptr_emplaceIN8Espresso28pass_rpn_tracker_merge_convsENS_9allocatorIS2_EEEE
N8Espresso13CPUFP16Engine13blob_cpu_fp16E
N13EspressoLight14espresso_errorE
N13EspressoLight22abstract_espresso_planE
N8Espresso22abstract_context_metalE
N8Espresso20abstract_batch_metalE
?N8Espresso12net_compilerE
N8Espresso26net_compiler_segment_basedE
N8Espresso30pass_blob_name_indexing_resultE
N8Espresso23pass_blob_name_indexingE
N8Espresso32pass_global_name_indexing_resultE
N8Espresso25pass_global_name_indexingE
N8Espresso27pass_constant_if_conditionsE
N8Espresso34pass_constant_if_conditions_resultE
N8Espresso9factory_tINS_6SerDes21generic_serdes_objectEEE
NSt3__120__shared_ptr_emplaceIN8Espresso9factory_tINS1_6SerDes21generic_serdes_objectEEENS_9allocatorIS5_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18pass_reset_pre_ssaENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13interpreter_tENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso30pass_blob_name_indexing_resultENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso32pass_global_name_indexing_resultENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso34pass_constant_if_conditions_resultENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17net_fast_reshaperENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso11basic_block11instructionENS_9allocatorIS3_EEEE
NSt3__110__function6__funcIZNK8Espresso11basic_block31is_blob_defined_in_predecessorsERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_13unordered_mapIS9_PS3_NS_4hashIS9_EENS_8equal_toIS9_EENS7_INS_4pairISA_SD_EEEEEEE3$_0NS7_ISO_EEFvRKNS3_11walk_statusEEEE
NSt3__110__function6__baseIFvRKN8Espresso11basic_block11walk_statusEEEE
ZNK8Espresso11basic_block31is_blob_defined_in_predecessorsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_13unordered_mapIS7_PS0_NS1_4hashIS7_EENS1_8equal_toIS7_EENS5_INS1_4pairIS8_SB_EEEEEEE3$_0
N8Espresso24rnn_arch_kernel_montrealE
N8Espresso13montreal_baseE
N8Espresso21kernel_with_uniforms_INS_15rnn_arch_paramsENS_35abstract_kernel_with_named_weights_EEE
NSt3__120__shared_ptr_emplaceIN8Espresso8blob_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIfLi1EEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24rnn_arch_kernel_montrealENS_9allocatorIS2_EEEE
N8Espresso6SerDes23serdes_object_json_objcE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes23serdes_object_json_objcENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine22blob_container_optionsENS_9allocatorIS3_EEEE
N8Espresso29bahdanau_attention_kernel_cpuE
N8Espresso25self_attention_kernel_cpuE
N8Espresso34abstract_kernel_with_named_weightsINS_27bahdanau_attention_params_tEEE
N8Espresso21kernel_with_uniforms_INS_27bahdanau_attention_params_tENS_35abstract_kernel_with_named_weights_EEE
N8Espresso34abstract_kernel_with_named_weightsINS_23self_attention_params_tEEE
N8Espresso44pass_update_absolute_indexes_after_transformE
N8Espresso48analysis_update_absolute_indexes_after_transformE
NSt3__120__shared_ptr_emplaceIN8Espresso23pass_blob_name_indexingENS_9allocatorIS2_EEEE
?N8Espresso4blobIjLi1EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIiLi1EEENS_9allocatorIS3_EEEE
MbP?
?N13EspressoLight17espresso_root_objE
N13EspressoLight13espresso_planE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine7contextENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso8V9Engine7contextENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20espresso_plan_tracerENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso32pass_multi_head_prune_undeclaredENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN13EspressoLight11plan_task_tENS_9allocatorIS2_EEEE
NSt3__110__function6__funcIZN13EspressoLight13espresso_plan10submit_gpuEPU28objcproto17OS_dispatch_queue8NSObjectPvS7_U13block_pointerFvP21espresso_error_info_tEE3$_2NS_9allocatorISC_EEFvRKN8Espresso17execution_error_tEEEE
NSt3__110__function6__baseIFvRKN8Espresso17execution_error_tEEEE
ZN13EspressoLight13espresso_plan10submit_gpuEPU28objcproto17OS_dispatch_queue8NSObjectPvS4_U13block_pointerFvP21espresso_error_info_tEE3$_2
NSt3__120__shared_ptr_emplaceIN8Espresso10profiler_tENS_9allocatorIS2_EEEE
N8Espresso13CPUFP16Engine22convolution_kernel_cpuE
N8Espresso13CPUFP16Engine15pool_kernel_cpuE
N8Espresso13CPUFP16Engine14lrn_kernel_cpuE
N8Espresso13CPUFP16Engine18softmax_kernel_cpuE
N8Espresso13CPUFP16Engine17concat_kernel_cpuE
N8Espresso13CPUFP16Engine22elementwise_kernel_cpuE
N8Espresso13CPUFP16Engine16split_kernel_cpuE
N8Espresso13CPUFP16Engine19upsample_kernel_cpuE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobItLi3EEENS_9allocatorIS3_EEEE
N8Espresso4blobItLi3EEE
N8Espresso8blob_cpuE
N8Espresso10engine_cpuE
N8Espresso9batch_cpuE
N8Espresso11context_cpuE
N8Espresso4blobIfLi4EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIiLi4EEENS_9allocatorIS3_EEEE
N8Espresso4blobIiLi4EEE
N8Espresso4blobIhLi4EEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine13blob_cpu_fp16ENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22convolution_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso10BNNSEngine18convolution_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso10BNNSEngine11pool_kernelENS_9allocatorIS3_EEEE
N8Espresso10BNNSEngine16base_bnns_kernelINS_19generic_pool_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14lrn_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine14lrn_kernel_cpuENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18softmax_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine18softmax_kernel_cpuENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24inner_product_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17concat_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine17concat_kernel_cpuENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso19upsample_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine19upsample_kernel_cpuENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22elementwise_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine22elementwise_kernel_cpuENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso16split_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine16split_kernel_cpuENS_9allocatorIS3_EEEE
N8Espresso27convolution_kernel_cpu_baseINS_28generic_deconvolution_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso16axpby_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21activation_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20batchnorm_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14rnn_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17reduce_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27context_transfer_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso12rnn_arch_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26general_padding_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20transpose_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18reshape_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15tile_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18flatten_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23l2_normalize_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27sequence_reverse_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26sequence_concat_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26sequence_repeat_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15crop_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso31prediction_smoothing_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18dropout_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso25space_to_depth_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso16slice_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20broadcast_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15cast_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24compute_stats_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17lambda_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26patch_extractor_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26crop_and_resize_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27dynamic_quantize_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso29dynamic_dequantize_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27quantized_gather_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso30spatial_transformer_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20cf_branch_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18cf_jump_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18cf_call_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20cf_return_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20get_shape_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15topk_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17gather_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso25general_concat_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso16alloc_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23store_global_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso16cf_if_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18cf_loop_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17cf_for_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17cf_end_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18cf_else_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15copy_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18scatter_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22load_random_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23batch_matmul_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27matrix_band_part_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15fill_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26tensor_zero_pad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23array_gather_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22multinomial_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26instancenorm_1d_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26generic_phi_virtual_kernelENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21gumbel_max_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18builtin_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24general_slice_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso19stack_nd_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso19split_nd_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21softmax_nd_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26sliding_windows_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22reverse_seq_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24cross_entropy_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14sgd_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15adam_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso34non_maximum_suppression_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20gather_nd_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21scatter_nd_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18nonzero_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso30precompiled_segment_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18one_hot_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17cumsum_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17dev_op_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso31sparse_inner_product_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27convolution_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso35convolution_weights_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20pool_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21nonlinearity_grad_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22concat_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso28softmax_loss_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15bias_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20bias_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso25batchnorm_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso28l2_normalize_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso29inner_product_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso37inner_product_weights_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27elementwise_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23dropout_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24grid_sampling_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso28local_correlation_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso29bahdanau_attention_kernel_cpuENS_9allocatorIS2_EEEE
N8Espresso34composed_kernel_with_named_weightsINS_27bahdanau_attention_params_tEEE
NSt3__120__shared_ptr_emplaceIN8Espresso25self_attention_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18loopkit_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17pool3d_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso37hierarchical_inner_product_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17conv3d_kernel_cpuENS_9allocatorIS2_EEEE
N8Espresso22conv3d_kernel_cpu_baseINS_21generic_conv3d_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18argsort_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23slice_update_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26static_quantize_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso28static_dequantize_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso33fused_convolution_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso35fused_inner_product_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso19deconv3d_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso11context_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso9batch_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIaLi4EEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIaLi2EEENS_9allocatorIS3_EEEE
N8Espresso4blobIaLi2EEE
MbP?
NSt3__120__shared_ptr_emplaceIN8Espresso20multikey_data_sourceENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso10solver_sgdENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso12scoped_timerENS_9allocatorIS2_EEEE
N8Espresso16pass_bind_labelsE
N8Espresso17MetalLowmemEngine29convolution_grad_kernel_metalE
N8Espresso17MetalLowmemEngine29convolution_kernel_metal_baseINS_31generic_convolution_grad_kernelEEE
N8Espresso17MetalLowmemEngine37convolution_weights_grad_kernel_metalE
N8Espresso17MetalLowmemEngine22bias_grad_kernel_metalE
N8Espresso17MetalLowmemEngine22pool_grad_kernel_metalE
N8Espresso17MetalLowmemEngine27batchnorm_grad_kernel_metalE
N8Espresso17MetalLowmemEngine25nonlinearity_kernel_metalE
N8Espresso17MetalLowmemEngine23nonlinearity_grad_metalE
N8Espresso17MetalLowmemEngine24concat_grad_kernel_metalE
N8Espresso17MetalLowmemEngine29elementwise_grad_kernel_metalE
N8Espresso17MetalLowmemEngine18axpby_kernel_metalE
N8Espresso17MetalLowmemEngine31inner_product_grad_kernel_metalE
N8Espresso17MetalLowmemEngine39inner_product_weights_grad_kernel_metalE
N8Espresso18loopkit_kernel_cpuE
NSt3__120__shared_ptr_emplaceIN8Espresso22generic_loopkit_kernel10raii_dylibENS_9allocatorIS3_EEEE
N8Espresso17cf_for_kernel_cpuE
N8Espresso31cf_kernel_with_br_label_to_bindE
N8Espresso20cf_branch_kernel_cpuE
N8Espresso18cf_jump_kernel_cpuE
N8Espresso18cf_call_kernel_cpuE
N8Espresso20cf_return_kernel_cpuE
N8Espresso20get_shape_kernel_cpuE
N8Espresso16alloc_kernel_cpuE
N8Espresso22load_global_kernel_cpuE
N8Espresso23store_global_kernel_cpuE
N8Espresso16cf_if_kernel_cpuE
N8Espresso18cf_loop_kernel_cpuE
N8Espresso18cf_else_kernel_cpuE
N8Espresso17cf_end_kernel_cpuE
N8Espresso18builtin_kernel_cpuE
N8Espresso20kernel_with_uniformsINS_16cf_jump_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16cf_jump_params_tENS_11base_kernelEEE
N8Espresso20kernel_with_uniformsINS_14cf_if_params_tEEE
N8Espresso21kernel_with_uniforms_INS_14cf_if_params_tENS_11base_kernelEEE
N8Espresso21kernel_with_uniforms_INS_16cf_loop_params_tENS_11base_kernelEEE
N8Espresso20kernel_with_uniformsINS_15cf_for_params_tEEE
N8Espresso20kernel_with_uniformsINS_16cf_else_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16cf_else_params_tENS_11base_kernelEEE
NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15return_status_tENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20blob_container_arrayENS_9allocatorIS2_EEEE
N8Espresso32pass_multi_head_prune_undeclaredE
N8Espresso36analysis_multi_head_prune_undeclaredE
NSt3__120__shared_ptr_emplaceIN8Espresso36analysis_multi_head_prune_undeclaredENS_9allocatorIS2_EEEE
N8Espresso18pass_unpack_layersE
N8Espresso27analysis_pass_unpack_layersE
NSt3__120__shared_ptr_emplaceIN8Espresso27analysis_pass_unpack_layersENS_9allocatorIS2_EEEE
N8Espresso17MetalLowmemEngine32generic_wg_transform_4_in_kernelE
N8Espresso17MetalLowmemEngine33generic_wg_transform_4_out_kernelE
>N8Espresso17MetalLowmemEngine20inner_product_kernelE
N8Espresso4blobItLi2EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIfLi2EEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine14blob_containerENS_9allocatorIS3_EEEE
N8Espresso23convolution_grad_kernelE
N8Espresso31convolution_weights_grad_kernelE
N8Espresso16pool_grad_kernelE
N8Espresso17nonlinearity_gradE
N8Espresso25inner_product_grad_kernelE
N8Espresso33inner_product_weights_grad_kernelE
N8Espresso29fused_convolution_grad_kernelE
N8Espresso31fused_inner_product_grad_kernelE
NSt3__120__shared_ptr_emplaceIN8Espresso18pass_unpack_layersENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26pass_params_graph_coloringENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso40abstract_blob_container_options_aliasingENS_9allocatorIS2_EEEE
N8Espresso18wrong_context_typeE
N8Espresso16wrong_batch_typeE
N8Espresso23abstract_blob_containerE
N8Espresso14abstract_batchE
N8Espresso16abstract_contextE
N8Espresso31abstract_blob_container_optionsE
N8Espresso15abstract_engineE
N8Espresso40abstract_blob_container_options_aliasingE
N8Espresso11base_kernelE
N8Espresso19switch_engine_batchE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIfLi4EEENS_9allocatorIS3_EEEE
N8Espresso24pass_find_shared_weightsE
N8Espresso28analysis_find_shared_weightsE
NSt3__120__shared_ptr_emplaceIN8Espresso24pass_find_shared_weightsENS_9allocatorIS2_EEEE
N8Espresso13interpreter_tE
NSt3__123enable_shared_from_thisIN8Espresso13interpreter_tEEE
NSt3__120__shared_ptr_emplaceIN8Espresso19interpreter_state_tENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23per_network_phi_state_tENS_9allocatorIS2_EEEE
N8Espresso23pass_control_flow_graphE
N8Espresso18control_flow_graphE
NSt3__120__shared_ptr_emplaceIN8Espresso18control_flow_graphENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso11basic_blockENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso16pass_bind_labelsENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23pass_control_flow_graphENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13pass_make_ssaENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22pass_tag_dynamic_blobsENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20pass_block_transformENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24pass_re_lower_to_networkENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13pass_livenessENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15pass_allocationENS_9allocatorIS2_EEEE
NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__120__shared_ptr_emplaceIN8Espresso10engine_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso10BNNSEngine6engineENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14QuantSimEngine6engineENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine6engineENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15DummyBNNSEngine6engineENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine6engineENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso8IREngine6engineENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine6engineENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso8V9Engine6engineENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso12brick_kernelENS_9allocatorIS2_EEEE
N8Espresso21kernel_with_uniforms_INS_12brick_paramsENS_35abstract_kernel_with_named_weights_EEE
NSt3__120__shared_ptr_emplaceIN8Espresso23abstract_engine_factoryENS_9allocatorIS2_EEEE
N8Espresso14factory_objectE
N8Espresso17generic_factory_tE
=fff?
N8Espresso6SerDes21generic_serdes_objectE
36rule_remove_fused_conv_ip_activation
19rule_bake_batchnorm
N36rule_remove_fused_conv_ip_activation8status_tE
N19rule_bake_batchnorm8status_tE
NSt3__120__shared_ptr_emplaceIN8Espresso26network_optimization_graphENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN36rule_remove_fused_conv_ip_activation8status_tENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN19rule_bake_batchnorm8status_tENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceI36rule_remove_fused_conv_ip_activationNS_9allocatorIS1_EEEE
NSt3__120__shared_ptr_emplaceI19rule_bake_batchnormNS_9allocatorIS1_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso3netENS_9allocatorIS2_EEEE
CNSt3__110__function6__funcIPFhmPKhENS_9allocatorIS5_EES4_EE
NSt3__110__function6__baseIFhmPKhEEE
PFhmPKhE
FhmPKhE
NSt3__110__function6__funcINS_6__bindIRFhhmPKhEJRhRKNS_12placeholders4__phILi1EEERKNS9_ILi2EEEEEENS_9allocatorISG_EEFhmS4_EEE
NSt3__16__bindIRFhhmPKhEJRhRKNS_12placeholders4__phILi1EEERKNS7_ILi2EEEEEE
NSt3__118__weak_result_typeIPFhhmPKhEEE
N8Espresso4blobItLi1EEE
N8Espresso20pass_block_transformE
N8Espresso24analysis_block_transformE
N8Espresso4passE
N8Espresso15analysis_resultE
N8Espresso16pass_params_baseE
N8Espresso8net_passE
?N8Espresso34dispatch_error_fallback_at_c_levelE
N8Espresso30dispatch_error_use_mps_buffersE
N8Espresso29dispatch_error_use_cpu_scriptE
NSt3__120__shared_ptr_emplaceIN8Espresso27kernels_validation_status_tENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27cpu_context_transfer_algo_tENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13net_info_ir_tENS_9allocatorIS2_EEEE
N8Espresso13pass_livenessE
N8Espresso17analysis_livenessE
NSt3__120__shared_ptr_emplaceIN8Espresso17analysis_livenessENS_9allocatorIS2_EEEE
?333333
?33333
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIN6vision3DCN11boundingboxELi2EEENS_9allocatorIS6_EEEE
N8Espresso4blobIN6vision3DCN11boundingboxELi2EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIiLi2EEENS_9allocatorIS3_EEEE
N8Espresso4blobIiLi2EEE
N8Espresso37hierarchical_inner_product_kernel_cpuE
N8Espresso4blobIiLi1EEE
@NSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE
NSt3__113basic_filebufIcNS_11char_traitsIcEEEE
NSt3__120__shared_ptr_emplaceINS_19basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEE
NSt3__110__function6__funcIPFvRKNS_10shared_ptrIN8Espresso14abstract_batchEEERKNS3_5layerEENS_9allocatorISC_EESB_EE
NSt3__110__function6__baseIFvRKNS_10shared_ptrIN8Espresso14abstract_batchEEERKNS3_5layerEEEE
PFvRKNSt3__110shared_ptrIN8Espresso14abstract_batchEEERKNS1_5layerEE
FvRKNSt3__110shared_ptrIN8Espresso14abstract_batchEEERKNS1_5layerEE
NSt3__120__shared_ptr_emplaceIN8Espresso17blob_storage_mmapENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso31analysis_multi_head_program_genENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27pass_multi_head_program_genENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso3net31info_needed_to_reload_network_tENS_9allocatorIS3_EEEE
NSt3__114basic_ofstreamIcNS_11char_traitsIcEEEE
NSt3__110__function6__funcIZN8Espresso19dump_network_layersENS_10shared_ptrINS2_3netEEEiRNS2_31dump_network_layers_blobs_stateERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE3$_2NSB_ISG_EEFvRNS_4pairISD_NS3_INS2_23abstract_blob_containerEEEEEEEE
ZN8Espresso19dump_network_layersENSt3__110shared_ptrINS_3netEEEiRNS_31dump_network_layers_blobs_stateERKNS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE3$_2
NSt3__110__function6__funcIZL24EspressoWrap__Net__touchP17EspressoWrap__NetE3$_0NS_9allocatorIS4_EEFvRNS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEENS_10shared_ptrIN8Espresso23abstract_blob_containerEEEEEEEE
ZL24EspressoWrap__Net__touchP17EspressoWrap__NetE3$_0
NSt3__120__shared_ptr_emplaceIN8Espresso9quantizerENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17dataset_estimatorENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23pass_params_batch_splitENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24pass_params_sgd_hoistingENS_9allocatorIS2_EEEE
N8Espresso8V9Engine25v9_wg_transform_in_kernelE
N8Espresso8V9Engine26v9_wg_transform_out_kernelE
N8Espresso8V9Engine21v9_elementwise_kernelE
N8Espresso8V9Engine16v9_concat_kernelE
N8Espresso8V9Engine18v9_upsample_kernelE
N8Espresso8V9Engine19v9_batchnorm_kernelE
N8Espresso8V9Engine14v9_pool_kernelE
N8Espresso8V9Engine23v9_inner_product_kernelE
N8Espresso8V9Engine17v9_softmax_kernelE
N8Espresso8V9Engine17v9_flatten_kernelE
N8Espresso8V9Engine20v9_activation_kernelE
N8Espresso8V9Engine25v9_general_padding_kernelE
N8Espresso8V9Engine13v9_lrn_kernelE
N8Espresso8V9Engine15v9_split_kernelE
N8Espresso8V9Engine14v9_crop_kernelE
N8Espresso8V9Engine15v9_noise_kernelE
N8Espresso21kernel_with_uniforms_INS_22inner_product_uniformsENS_29abstract_kernel_with_weights_EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobItLi1EEENS_9allocatorIS3_EEEE
N8Espresso27pass_multi_head_program_genE
N8Espresso31analysis_multi_head_program_genE
N8Espresso23graph_optimization_ruleE
N8Espresso30graph_optimization_rule_simpleE
N8Espresso23rule_convolution_groupsE
N8Espresso20rule_inception_blockE
N8Espresso22rule_1x1_inceptionlikeE
N8Espresso20_rule_bake_batchnormE
N8Espresso30graph_optimization_rule_statusE
N8Espresso20rule_inception_block8status_tE
N8Espresso22rule_1x1_inceptionlike8status_tE
N8Espresso23rule_convolution_groups8status_tE
N8Espresso20_rule_bake_batchnorm8status_tE
NSt3__120__shared_ptr_emplaceIN8Espresso23rule_convolution_groups8status_tENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20rule_inception_block8status_tENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22rule_1x1_inceptionlike8status_tENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20_rule_bake_batchnorm8status_tENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18sequential_builderENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso30graph_optimization_rule_statusENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22dropout_augment_lowmemENS_9allocatorIS2_EEEE
coarse_bit_scaleN8Espresso16pass_wavernn_aneE
N8Espresso20analysis_wavernn_aneE
NSt3__120__shared_ptr_emplaceIN8Espresso16pass_wavernn_aneENS_9allocatorIS2_EEEE
N8Espresso8V9Engine14blob_containerE
N8Espresso30gradient_not_implemented_errorE
N8Espresso20dummy_blob_containerE
N8Espresso8IREngine14blob_containerE
N8Espresso14DummyMPSEngine14blob_containerE
N8Espresso15DummyBNNSEngine14blob_containerE
N8Espresso21DummyMPSBuffersEngine14blob_containerE
N8Espresso14DummyMPSEngine50generic_inner_product_kernel_with_null_set_weightsE
N8Espresso14DummyMPSEngine12slice_kernelE
N8Espresso14DummyMPSEngine13reduce_kernelE
N8Espresso14DummyMPSEngine13concat_kernelE
N8Espresso14DummyMPSEngine14softmax_kernelE
N8Espresso14DummyMPSEngine20inner_product_kernelE
N8Espresso14DummyMPSEngine14flatten_kernelE
N8Espresso14DummyMPSEngine12split_kernelE
N8Espresso14DummyMPSEngine17activation_kernelE
N8Espresso14DummyMPSEngine20grid_sampling_kernelE
N8Espresso14DummyMPSEngine24local_correlation_kernelE
N8Espresso14DummyMPSEngine18elementwise_kernelE
N8Espresso14DummyMPSEngine17softmax_nd_kernelE
N8Espresso14DummyMPSEngine6engineE
N8Espresso15DummyBNNSEngine6engineE
N8Espresso8IREngine6engineE
N8Espresso21DummyMPSBuffersEngine19batch_matmul_kernelE
N8Espresso21DummyMPSBuffersEngine14reshape_kernelE
N8Espresso21DummyMPSBuffersEngine20inner_product_kernelE
N8Espresso21DummyMPSBuffersEngine13reduce_kernelE
N8Espresso21DummyMPSBuffersEngine13concat_kernelE
N8Espresso21DummyMPSBuffersEngine17activation_kernelE
N8Espresso21DummyMPSBuffersEngine18elementwise_kernelE
N8Espresso21DummyMPSBuffersEngine14softmax_kernelE
N8Espresso21DummyMPSBuffersEngine20general_slice_kernelE
N8Espresso21DummyMPSBuffersEngine15split_nd_kernelE
N8Espresso21DummyMPSBuffersEngine11tile_kernelE
N8Espresso21DummyMPSBuffersEngine16gather_nd_kernelE
N8Espresso21DummyMPSBuffersEngine11fill_kernelE
N8Espresso21DummyMPSBuffersEngine6engineE
N8Espresso21kernel_with_uniforms_INS_22general_slice_params_tENS_11base_kernelEEE
N8Espresso27convolution_kernel_cpu_baseINS_26generic_convolution_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15pool_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine14softmax_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine20inner_product_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine17activation_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24deconvolution_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine12split_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine14flatten_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine18elementwise_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine13concat_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine12slice_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine13reduce_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21transplant_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine20grid_sampling_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine24local_correlation_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine17softmax_nd_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine14blob_containerENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15DummyBNNSEngine14blob_containerENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso8IREngine14blob_containerENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine14softmax_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine20inner_product_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine18elementwise_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine17activation_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine13concat_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine13reduce_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18squeeze_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22load_global_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine19batch_matmul_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine14reshape_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22expand_dims_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso16range_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine20general_slice_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine15split_nd_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine11tile_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine16gather_nd_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine11fill_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine14blob_containerENS_9allocatorIS3_EEEE
N8Espresso14QuantSimEngine7contextE
N8Espresso14QuantSimEngine14blob_containerE
N8Espresso14QuantSimEngine6engineE
NSt3__120__shared_ptr_emplaceIN8Espresso14QuantSimEngine14blob_containerENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14QuantSimEngine7contextENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso15pool_kernel_cpuENS2_11pool_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso15pool_kernel_cpuENS0_11pool_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelI27wrapper_kernel_with_weightsIN8Espresso22convolution_kernel_cpuENS3_20convolution_uniformsEES5_ENS_9allocatorIS7_EEEE
14wrapper_kernelI27wrapper_kernel_with_weightsIN8Espresso22convolution_kernel_cpuENS1_20convolution_uniformsEES3_E
27wrapper_kernel_with_weightsIN8Espresso22convolution_kernel_cpuENS0_20convolution_uniformsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelI27wrapper_kernel_with_weightsIN8Espresso24deconvolution_kernel_cpuENS3_20convolution_uniformsEES5_ENS_9allocatorIS7_EEEE
14wrapper_kernelI27wrapper_kernel_with_weightsIN8Espresso24deconvolution_kernel_cpuENS1_20convolution_uniformsEES3_E
27wrapper_kernel_with_weightsIN8Espresso24deconvolution_kernel_cpuENS0_20convolution_uniformsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelI27wrapper_kernel_with_weightsIN8Espresso24inner_product_kernel_cpuENS3_22inner_product_uniformsEES5_ENS_9allocatorIS7_EEEE
14wrapper_kernelI27wrapper_kernel_with_weightsIN8Espresso24inner_product_kernel_cpuENS1_22inner_product_uniformsEES3_E
27wrapper_kernel_with_weightsIN8Espresso24inner_product_kernel_cpuENS0_22inner_product_uniformsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso22elementwise_kernel_cpuENS2_18elementwise_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso22elementwise_kernel_cpuENS0_18elementwise_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso18flatten_kernel_cpuENS2_14flatten_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso18flatten_kernel_cpuENS0_14flatten_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso18softmax_kernel_cpuENS2_14softmax_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso18softmax_kernel_cpuENS0_14softmax_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso17concat_kernel_cpuENS2_13concat_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso17concat_kernel_cpuENS0_13concat_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso18reshape_kernel_cpuENS2_14reshape_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso18reshape_kernel_cpuENS0_14reshape_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso21activation_kernel_cpuENS2_17activation_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso21activation_kernel_cpuENS0_17activation_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso20batchnorm_kernel_cpuENS2_16batchnorm_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso20batchnorm_kernel_cpuENS0_16batchnorm_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso26general_padding_kernel_cpuENS2_22general_padding_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso26general_padding_kernel_cpuENS0_22general_padding_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso19upsample_kernel_cpuENS2_22upsample_kernel_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso19upsample_kernel_cpuENS0_22upsample_kernel_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso16slice_kernel_cpuENS2_14slice_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso16slice_kernel_cpuENS0_14slice_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso15crop_kernel_cpuENS2_11crop_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso15crop_kernel_cpuENS0_11crop_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso17reduce_kernel_cpuENS2_15reduce_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso17reduce_kernel_cpuENS0_15reduce_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso15copy_kernel_cpuENS2_13copy_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso15copy_kernel_cpuENS0_13copy_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso25general_concat_kernel_cpuENS2_23general_concat_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso25general_concat_kernel_cpuENS0_23general_concat_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso20transpose_kernel_cpuENS2_18transpose_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso20transpose_kernel_cpuENS0_18transpose_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso15cast_kernel_cpuENS2_13cast_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso15cast_kernel_cpuENS0_13cast_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso15tile_kernel_cpuENS2_13tile_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso15tile_kernel_cpuENS0_13tile_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso27quantized_gather_kernel_cpuENS2_25quantized_gather_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso27quantized_gather_kernel_cpuENS0_25quantized_gather_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso30spatial_transformer_kernel_cpuENS2_28spatial_transformer_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso30spatial_transformer_kernel_cpuENS0_28spatial_transformer_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso20cf_branch_kernel_cpuENS2_18cf_branch_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso20cf_branch_kernel_cpuENS0_18cf_branch_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso18cf_jump_kernel_cpuENS2_16cf_jump_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso18cf_jump_kernel_cpuENS0_16cf_jump_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso18cf_call_kernel_cpuENS2_16cf_call_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso18cf_call_kernel_cpuENS0_16cf_call_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso20cf_return_kernel_cpuENS2_18cf_return_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso20cf_return_kernel_cpuENS0_18cf_return_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso20get_shape_kernel_cpuENS2_18get_shape_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso20get_shape_kernel_cpuENS0_18get_shape_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso15topk_kernel_cpuENS2_13topk_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso15topk_kernel_cpuENS0_13topk_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso17gather_kernel_cpuENS2_15gather_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso17gather_kernel_cpuENS0_15gather_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso16alloc_kernel_cpuENS2_14alloc_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso16alloc_kernel_cpuENS0_14alloc_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso27dynamic_quantize_kernel_cpuENS2_25dynamic_quantize_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso27dynamic_quantize_kernel_cpuENS0_25dynamic_quantize_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso29dynamic_dequantize_kernel_cpuENS2_27dynamic_dequantize_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso29dynamic_dequantize_kernel_cpuENS0_27dynamic_dequantize_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso22load_global_kernel_cpuENS2_20load_global_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso22load_global_kernel_cpuENS0_20load_global_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso23store_global_kernel_cpuENS2_21store_global_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso23store_global_kernel_cpuENS0_21store_global_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso16cf_if_kernel_cpuENS2_14cf_if_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso16cf_if_kernel_cpuENS0_14cf_if_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso18cf_loop_kernel_cpuENS2_16cf_loop_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso18cf_loop_kernel_cpuENS0_16cf_loop_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso17cf_for_kernel_cpuENS2_15cf_for_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso17cf_for_kernel_cpuENS0_15cf_for_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso17cf_end_kernel_cpuENS2_15cf_end_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso17cf_end_kernel_cpuENS0_15cf_end_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso18cf_else_kernel_cpuENS2_16cf_else_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso18cf_else_kernel_cpuENS0_16cf_else_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso18scatter_kernel_cpuENS2_16scatter_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso18scatter_kernel_cpuENS0_16scatter_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso22load_random_kernel_cpuENS2_20load_random_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso22load_random_kernel_cpuENS0_20load_random_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso16range_kernel_cpuENS2_14range_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso16range_kernel_cpuENS0_14range_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso23batch_matmul_kernel_cpuENS2_21batch_matmul_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso23batch_matmul_kernel_cpuENS0_21batch_matmul_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso27matrix_band_part_kernel_cpuENS2_25matrix_band_part_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso27matrix_band_part_kernel_cpuENS0_25matrix_band_part_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso15fill_kernel_cpuENS2_13fill_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso15fill_kernel_cpuENS0_13fill_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso26tensor_zero_pad_kernel_cpuENS2_24tensor_zero_pad_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso26tensor_zero_pad_kernel_cpuENS0_24tensor_zero_pad_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso18squeeze_kernel_cpuENS2_16squeeze_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso18squeeze_kernel_cpuENS0_16squeeze_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso22expand_dims_kernel_cpuENS2_20expand_dims_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso22expand_dims_kernel_cpuENS0_20expand_dims_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso23array_gather_kernel_cpuENS2_21array_gather_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso23array_gather_kernel_cpuENS0_21array_gather_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso22multinomial_kernel_cpuENS2_20multinomial_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso22multinomial_kernel_cpuENS0_20multinomial_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso26instancenorm_1d_kernel_cpuENS2_24instancenorm_1d_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso26instancenorm_1d_kernel_cpuENS0_24instancenorm_1d_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso26generic_phi_virtual_kernelENS2_20phi_virtual_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso26generic_phi_virtual_kernelENS0_20phi_virtual_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso21gumbel_max_kernel_cpuENS2_19gumbel_max_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso21gumbel_max_kernel_cpuENS0_19gumbel_max_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso18builtin_kernel_cpuENS2_16builtin_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso18builtin_kernel_cpuENS0_16builtin_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso21transplant_kernel_cpuENS2_19transplant_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso21transplant_kernel_cpuENS0_19transplant_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso24general_slice_kernel_cpuENS2_22general_slice_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso24general_slice_kernel_cpuENS0_22general_slice_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso19stack_nd_kernel_cpuENS2_17stack_nd_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso19stack_nd_kernel_cpuENS0_17stack_nd_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso19split_nd_kernel_cpuENS2_17split_nd_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso19split_nd_kernel_cpuENS0_17split_nd_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso21softmax_nd_kernel_cpuENS2_19softmax_nd_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso21softmax_nd_kernel_cpuENS0_19softmax_nd_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso26sliding_windows_kernel_cpuENS2_24sliding_windows_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso26sliding_windows_kernel_cpuENS0_24sliding_windows_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso22reverse_seq_kernel_cpuENS2_20reverse_seq_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso22reverse_seq_kernel_cpuENS0_20reverse_seq_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso24cross_entropy_kernel_cpuENS2_22cross_entropy_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso24cross_entropy_kernel_cpuENS0_22cross_entropy_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso14sgd_kernel_cpuENS2_12sgd_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso14sgd_kernel_cpuENS0_12sgd_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso15adam_kernel_cpuENS2_13adam_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso15adam_kernel_cpuENS0_13adam_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso34non_maximum_suppression_kernel_cpuENS2_32non_maximum_suppression_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso34non_maximum_suppression_kernel_cpuENS0_32non_maximum_suppression_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso20gather_nd_kernel_cpuENS2_18gather_nd_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso20gather_nd_kernel_cpuENS0_18gather_nd_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso21scatter_nd_kernel_cpuENS2_19scatter_nd_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso21scatter_nd_kernel_cpuENS0_19scatter_nd_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso18nonzero_kernel_cpuENS2_16nonzero_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso18nonzero_kernel_cpuENS0_16nonzero_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso30precompiled_segment_kernel_cpuENS2_28precompiled_segment_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso30precompiled_segment_kernel_cpuENS0_28precompiled_segment_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso18one_hot_kernel_cpuENS2_16one_hot_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso18one_hot_kernel_cpuENS0_16one_hot_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso17cumsum_kernel_cpuENS2_15cumsum_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso17cumsum_kernel_cpuENS0_15cumsum_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso17dev_op_kernel_cpuENS2_15dev_op_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso17dev_op_kernel_cpuENS0_15dev_op_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso31sparse_inner_product_kernel_cpuENS2_29sparse_inner_product_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso31sparse_inner_product_kernel_cpuENS0_29sparse_inner_product_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso24grid_sampling_kernel_cpuENS2_22grid_sampling_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso24grid_sampling_kernel_cpuENS0_22grid_sampling_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso28local_correlation_kernel_cpuENS2_26local_correlation_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso28local_correlation_kernel_cpuENS0_26local_correlation_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso29bahdanau_attention_kernel_cpuENS2_27bahdanau_attention_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso29bahdanau_attention_kernel_cpuENS0_27bahdanau_attention_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso25self_attention_kernel_cpuENS2_23self_attention_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso25self_attention_kernel_cpuENS0_23self_attention_params_tEE
N8Espresso34composed_kernel_with_named_weightsINS_23self_attention_params_tEEE
N8Espresso21kernel_with_uniforms_INS_23self_attention_params_tENS_35abstract_kernel_with_named_weights_EEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso17pool3d_kernel_cpuENS2_15pool3d_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso17pool3d_kernel_cpuENS0_15pool3d_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso17conv3d_kernel_cpuENS2_15conv3d_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso17conv3d_kernel_cpuENS0_15conv3d_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso18argsort_kernel_cpuENS2_16argsort_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso18argsort_kernel_cpuENS0_16argsort_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso23slice_update_kernel_cpuENS2_21slice_update_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso23slice_update_kernel_cpuENS0_21slice_update_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso26static_quantize_kernel_cpuENS2_24static_quantize_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso26static_quantize_kernel_cpuENS0_24static_quantize_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso28static_dequantize_kernel_cpuENS2_26static_dequantize_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso28static_dequantize_kernel_cpuENS0_26static_dequantize_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso33fused_convolution_grad_kernel_cpuENS2_31fused_convolution_grad_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso33fused_convolution_grad_kernel_cpuENS0_31fused_convolution_grad_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso35fused_inner_product_grad_kernel_cpuENS2_33fused_inner_product_grad_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso35fused_inner_product_grad_kernel_cpuENS0_33fused_inner_product_grad_params_tEE
NSt3__120__shared_ptr_emplaceIN8Espresso33generic_load_constant_kernel_implENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso36generic_context_transfer_kernel_implENS_9allocatorIS2_EEEE
N8Espresso4blobItLi4EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIhLi4EEENS_9allocatorIS3_EEEE
N8Espresso4blobIaLi4EEE
?N8Espresso27convolution_grad_kernel_cpuE
N8Espresso35convolution_weights_grad_kernel_cpuE
N8Espresso20pool_grad_kernel_cpuE
N8Espresso21nonlinearity_grad_cpuE
N8Espresso22concat_grad_kernel_cpuE
N8Espresso28softmax_loss_grad_kernel_cpuE
N8Espresso15bias_kernel_cpuE
N8Espresso20bias_grad_kernel_cpuE
N8Espresso25batchnorm_grad_kernel_cpuE
N8Espresso28l2_normalize_grad_kernel_cpuE
N8Espresso29inner_product_grad_kernel_cpuE
N8Espresso37inner_product_weights_grad_kernel_cpuE
N8Espresso27elementwise_grad_kernel_cpuE
N8Espresso23dropout_grad_kernel_cpuE
N8Espresso21kernel_with_uniforms_INS_11pool_paramsENS_11base_kernelEEE
N8Espresso4blobIfLi3EEE
N8Espresso15pass_debug_modeE
N8Espresso19analysis_debug_modeE
NSt3__120__shared_ptr_emplaceIN8Espresso15pass_debug_modeENS_9allocatorIS2_EEEE
L=33s?
=fff?fff?o
:14et_data_source
NSt3__120__shared_ptr_emplaceIN8Espresso16gradient_builderENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso19weights_initializerENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceI14et_data_sourceNS_9allocatorIS1_EEEE
?N8Espresso8V9Engine14v9_conv_kernelE
NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIhLi6EEENS_9allocatorIS3_EEEE
N8Espresso4blobIhLi6EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIfLi6EEENS_9allocatorIS3_EEEE
@N8Espresso26generic_convolution_kernelE
N8Espresso28abstract_kernel_with_weightsINS_20convolution_uniformsEEE
N8Espresso29abstract_kernel_with_weights_E
N8Espresso35abstract_kernel_with_named_weights_E
N8Espresso34abstract_kernel_with_weights_grad_E
N8Espresso12no_op_kernelE
N8Espresso20kernel_with_uniformsINS_23no_op_kernel_parametersEEE
N8Espresso21kernel_with_uniforms_INS_23no_op_kernel_parametersENS_11base_kernelEEE
N8Espresso18generic_lrn_kernelE
N8Espresso20kernel_with_uniformsINS_10lrn_paramsEEE
N8Espresso21kernel_with_uniforms_INS_10lrn_paramsENS_11base_kernelEEE
N8Espresso19generic_pool_kernelE
N8Espresso28abstract_kernel_with_weightsINS_11pool_paramsEEE
N8Espresso22generic_softmax_kernelE
N8Espresso20kernel_with_uniformsINS_14softmax_paramsEEE
N8Espresso21kernel_with_uniforms_INS_14softmax_paramsENS_11base_kernelEEE
N8Espresso28generic_inner_product_kernelE
N8Espresso28abstract_kernel_with_weightsINS_22inner_product_uniformsEEE
N8Espresso21generic_concat_kernelE
N8Espresso20kernel_with_uniformsINS_13concat_paramsEEE
N8Espresso21kernel_with_uniforms_INS_13concat_paramsENS_11base_kernelEEE
N8Espresso23generic_upsample_kernelE
N8Espresso20kernel_with_uniformsINS_22upsample_kernel_paramsEEE
N8Espresso21kernel_with_uniforms_INS_22upsample_kernel_paramsENS_11base_kernelEEE
N8Espresso26generic_elementwise_kernelE
N8Espresso20kernel_with_uniformsINS_18elementwise_paramsEEE
N8Espresso21kernel_with_uniforms_INS_18elementwise_paramsENS_11base_kernelEEE
N8Espresso20generic_split_kernelE
N8Espresso20kernel_with_uniformsINS_12split_paramsEEE
N8Espresso21kernel_with_uniforms_INS_12split_paramsENS_11base_kernelEEE
N8Espresso30generic_general_padding_kernelE
N8Espresso20kernel_with_uniformsINS_22general_padding_paramsEEE
N8Espresso21kernel_with_uniforms_INS_22general_padding_paramsENS_11base_kernelEEE
N8Espresso19generic_crop_kernelE
N8Espresso20kernel_with_uniformsINS_11crop_paramsEEE
N8Espresso21kernel_with_uniforms_INS_11crop_paramsENS_11base_kernelEEE
N8Espresso28generic_deconvolution_kernelE
N8Espresso31generic_convolution_grad_kernelE
N8Espresso33abstract_kernel_with_weights_gradINS_20convolution_uniformsEEE
N8Espresso21kernel_with_uniforms_INS_20convolution_uniformsENS_34abstract_kernel_with_weights_grad_EEE
N8Espresso39generic_convolution_weights_grad_kernelE
N8Espresso24generic_pool_grad_kernelE
N8Espresso20kernel_with_uniformsINS_11pool_paramsEEE
N8Espresso26generic_concat_grad_kernelE
N8Espresso32generic_softmax_loss_grad_kernelE
N8Espresso25generic_activation_kernelE
N8Espresso20kernel_with_uniformsINS_17activation_paramsEEE
N8Espresso21kernel_with_uniforms_INS_17activation_paramsENS_11base_kernelEEE
N8Espresso30generic_activation_grad_kernelE
N8Espresso19generic_bias_kernelE
N8Espresso28abstract_kernel_with_weightsINS_11bias_paramsEEE
N8Espresso21kernel_with_uniforms_INS_11bias_paramsENS_29abstract_kernel_with_weights_EEE
N8Espresso24generic_bias_grad_kernelE
N8Espresso33abstract_kernel_with_weights_gradINS_11bias_paramsEEE
N8Espresso21kernel_with_uniforms_INS_11bias_paramsENS_34abstract_kernel_with_weights_grad_EEE
N8Espresso24generic_batchnorm_kernelE
N8Espresso28abstract_kernel_with_weightsINS_16batchnorm_paramsEEE
N8Espresso29generic_batchnorm_grad_kernelE
N8Espresso33abstract_kernel_with_weights_gradINS_16batchnorm_paramsEEE
N8Espresso21kernel_with_uniforms_INS_16batchnorm_paramsENS_34abstract_kernel_with_weights_grad_EEE
N8Espresso27generic_l2_normalize_kernelE
N8Espresso20kernel_with_uniformsINS_14l2_norm_paramsEEE
N8Espresso21kernel_with_uniforms_INS_14l2_norm_paramsENS_11base_kernelEEE
N8Espresso32generic_l2_normalize_grad_kernelE
N8Espresso33generic_inner_product_grad_kernelE
N8Espresso33abstract_kernel_with_weights_gradINS_22inner_product_uniformsEEE
N8Espresso21kernel_with_uniforms_INS_22inner_product_uniformsENS_34abstract_kernel_with_weights_grad_EEE
N8Espresso41generic_inner_product_weights_grad_kernelE
N8Espresso31generic_elementwise_grad_kernelE
N8Espresso22generic_dropout_kernelE
N8Espresso20kernel_with_uniformsINS_14dropout_paramsEEE
N8Espresso21kernel_with_uniforms_INS_14dropout_paramsENS_11base_kernelEEE
N8Espresso27generic_dropout_grad_kernelE
N8Espresso20generic_axpby_kernelE
N8Espresso20kernel_with_uniformsINS_12axpby_paramsEEE
N8Espresso21kernel_with_uniforms_INS_12axpby_paramsENS_11base_kernelEEE
N8Espresso28generic_load_constant_kernelE
N8Espresso28abstract_kernel_with_weightsINS_20load_constant_paramsEEE
N8Espresso21kernel_with_uniforms_INS_20load_constant_paramsENS_29abstract_kernel_with_weights_EEE
N8Espresso31generic_context_transfer_kernelE
N8Espresso20kernel_with_uniformsINS_23context_transfer_paramsEEE
N8Espresso21kernel_with_uniforms_INS_23context_transfer_paramsENS_11base_kernelEEE
N8Espresso33generic_load_constant_kernel_implE
N8Espresso36generic_context_transfer_kernel_implE
N8Espresso22generic_reshape_kernelE
N8Espresso20kernel_with_uniformsINS_14reshape_paramsEEE
N8Espresso21kernel_with_uniforms_INS_14reshape_paramsENS_11base_kernelEEE
N8Espresso19generic_tile_kernelE
N8Espresso20kernel_with_uniformsINS_13tile_params_tEEE
N8Espresso21kernel_with_uniforms_INS_13tile_params_tENS_11base_kernelEEE
N8Espresso22generic_flatten_kernelE
N8Espresso20kernel_with_uniformsINS_14flatten_paramsEEE
N8Espresso21kernel_with_uniforms_INS_14flatten_paramsENS_11base_kernelEEE
N8Espresso21generic_reduce_kernelE
N8Espresso20kernel_with_uniformsINS_15reduce_params_tEEE
N8Espresso21kernel_with_uniforms_INS_15reduce_params_tENS_11base_kernelEEE
N8Espresso24generic_transpose_kernelE
N8Espresso20kernel_with_uniformsINS_18transpose_params_tEEE
N8Espresso21kernel_with_uniforms_INS_18transpose_params_tENS_11base_kernelEEE
N8Espresso18generic_rnn_kernelE
N8Espresso34abstract_kernel_with_named_weightsINS_10rnn_paramsEEE
N8Espresso35generic_prediction_smoothing_kernelE
N8Espresso20kernel_with_uniformsINS_27prediction_smoothing_paramsEEE
N8Espresso21kernel_with_uniforms_INS_27prediction_smoothing_paramsENS_11base_kernelEEE
N8Espresso29generic_space_to_depth_kernelE
N8Espresso20kernel_with_uniformsINS_23space_to_depth_params_tEEE
N8Espresso21kernel_with_uniforms_INS_23space_to_depth_params_tENS_11base_kernelEEE
N8Espresso20generic_slice_kernelE
N8Espresso20kernel_with_uniformsINS_14slice_params_tEEE
N8Espresso21kernel_with_uniforms_INS_14slice_params_tENS_11base_kernelEEE
N8Espresso24generic_broadcast_kernelE
N8Espresso20kernel_with_uniformsINS_18broadcast_params_tEEE
N8Espresso21kernel_with_uniforms_INS_18broadcast_params_tENS_11base_kernelEEE
N8Espresso19generic_cast_kernelE
N8Espresso20kernel_with_uniformsINS_13cast_params_tEEE
N8Espresso21kernel_with_uniforms_INS_13cast_params_tENS_11base_kernelEEE
N8Espresso28generic_compute_stats_kernelE
N8Espresso20kernel_with_uniformsINS_22compute_stats_params_tEEE
N8Espresso21kernel_with_uniforms_INS_22compute_stats_params_tENS_11base_kernelEEE
N8Espresso30generic_patch_extractor_kernelE
N8Espresso20kernel_with_uniformsINS_24patch_extractor_params_tEEE
N8Espresso21kernel_with_uniforms_INS_24patch_extractor_params_tENS_11base_kernelEEE
N8Espresso30generic_crop_and_resize_kernelE
N8Espresso20kernel_with_uniformsINS_24crop_and_resize_params_tEEE
N8Espresso21kernel_with_uniforms_INS_24crop_and_resize_params_tENS_11base_kernelEEE
N8Espresso31generic_dynamic_quantize_kernelE
N8Espresso20kernel_with_uniformsINS_25dynamic_quantize_params_tEEE
N8Espresso21kernel_with_uniforms_INS_25dynamic_quantize_params_tENS_11base_kernelEEE
N8Espresso31generic_quantized_gather_kernelE
N8Espresso28abstract_kernel_with_weightsINS_25quantized_gather_params_tEEE
N8Espresso21kernel_with_uniforms_INS_25quantized_gather_params_tENS_29abstract_kernel_with_weights_EEE
N8Espresso24generic_cf_branch_kernelE
N8Espresso20kernel_with_uniformsINS_18cf_branch_params_tEEE
N8Espresso21kernel_with_uniforms_INS_18cf_branch_params_tENS_11base_kernelEEE
N8Espresso33generic_dynamic_dequantize_kernelE
N8Espresso20kernel_with_uniformsINS_27dynamic_dequantize_params_tEEE
N8Espresso21kernel_with_uniforms_INS_27dynamic_dequantize_params_tENS_11base_kernelEEE
N8Espresso34generic_spatial_transformer_kernelE
N8Espresso20kernel_with_uniformsINS_28spatial_transformer_params_tEEE
N8Espresso21kernel_with_uniforms_INS_28spatial_transformer_params_tENS_11base_kernelEEE
N8Espresso22generic_cf_call_kernelE
N8Espresso20kernel_with_uniformsINS_16cf_call_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16cf_call_params_tENS_11base_kernelEEE
N8Espresso24generic_cf_return_kernelE
N8Espresso20kernel_with_uniformsINS_18cf_return_params_tEEE
N8Espresso21kernel_with_uniforms_INS_18cf_return_params_tENS_11base_kernelEEE
N8Espresso24generic_get_shape_kernelE
N8Espresso20kernel_with_uniformsINS_18get_shape_params_tEEE
N8Espresso21kernel_with_uniforms_INS_18get_shape_params_tENS_11base_kernelEEE
N8Espresso19generic_topk_kernelE
N8Espresso20kernel_with_uniformsINS_13topk_params_tEEE
N8Espresso21kernel_with_uniforms_INS_13topk_params_tENS_11base_kernelEEE
N8Espresso21generic_gather_kernelE
N8Espresso20kernel_with_uniformsINS_15gather_params_tEEE
N8Espresso21kernel_with_uniforms_INS_15gather_params_tENS_11base_kernelEEE
N8Espresso29generic_general_concat_kernelE
N8Espresso20kernel_with_uniformsINS_23general_concat_params_tEEE
N8Espresso21kernel_with_uniforms_INS_23general_concat_params_tENS_11base_kernelEEE
N8Espresso20generic_alloc_kernelE
N8Espresso20kernel_with_uniformsINS_14alloc_params_tEEE
N8Espresso21kernel_with_uniforms_INS_14alloc_params_tENS_11base_kernelEEE
N8Espresso26generic_load_global_kernelE
N8Espresso20kernel_with_uniformsINS_20load_global_params_tEEE
N8Espresso21kernel_with_uniforms_INS_20load_global_params_tENS_11base_kernelEEE
N8Espresso27generic_store_global_kernelE
N8Espresso20kernel_with_uniformsINS_21store_global_params_tEEE
N8Espresso21kernel_with_uniforms_INS_21store_global_params_tENS_11base_kernelEEE
N8Espresso22generic_cf_jump_kernelE
N8Espresso20generic_cf_if_kernelE
N8Espresso22generic_cf_loop_kernelE
N8Espresso20kernel_with_uniformsINS_16cf_loop_params_tEEE
N8Espresso21generic_cf_for_kernelE
N8Espresso21kernel_with_uniforms_INS_15cf_for_params_tENS_11base_kernelEEE
N8Espresso21generic_cf_end_kernelE
N8Espresso20kernel_with_uniformsINS_15cf_end_params_tEEE
N8Espresso21kernel_with_uniforms_INS_15cf_end_params_tENS_11base_kernelEEE
N8Espresso22generic_cf_else_kernelE
N8Espresso19generic_copy_kernelE
N8Espresso20kernel_with_uniformsINS_13copy_params_tEEE
N8Espresso21kernel_with_uniforms_INS_13copy_params_tENS_11base_kernelEEE
N8Espresso22generic_scatter_kernelE
N8Espresso20kernel_with_uniformsINS_16scatter_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16scatter_params_tENS_11base_kernelEEE
N8Espresso26generic_load_random_kernelE
N8Espresso20kernel_with_uniformsINS_20load_random_params_tEEE
N8Espresso21kernel_with_uniforms_INS_20load_random_params_tENS_11base_kernelEEE
N8Espresso20generic_range_kernelE
N8Espresso20kernel_with_uniformsINS_14range_params_tEEE
N8Espresso21kernel_with_uniforms_INS_14range_params_tENS_11base_kernelEEE
N8Espresso31generic_matrix_band_part_kernelE
N8Espresso20kernel_with_uniformsINS_25matrix_band_part_params_tEEE
N8Espresso21kernel_with_uniforms_INS_25matrix_band_part_params_tENS_11base_kernelEEE
N8Espresso27generic_batch_matmul_kernelE
N8Espresso20kernel_with_uniformsINS_21batch_matmul_params_tEEE
N8Espresso21kernel_with_uniforms_INS_21batch_matmul_params_tENS_11base_kernelEEE
N8Espresso19generic_fill_kernelE
N8Espresso20kernel_with_uniformsINS_13fill_params_tEEE
N8Espresso21kernel_with_uniforms_INS_13fill_params_tENS_11base_kernelEEE
N8Espresso30generic_tensor_zero_pad_kernelE
N8Espresso20kernel_with_uniformsINS_24tensor_zero_pad_params_tEEE
N8Espresso21kernel_with_uniforms_INS_24tensor_zero_pad_params_tENS_11base_kernelEEE
N8Espresso22generic_squeeze_kernelE
N8Espresso20kernel_with_uniformsINS_16squeeze_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16squeeze_params_tENS_11base_kernelEEE
N8Espresso26generic_expand_dims_kernelE
N8Espresso20kernel_with_uniformsINS_20expand_dims_params_tEEE
N8Espresso21kernel_with_uniforms_INS_20expand_dims_params_tENS_11base_kernelEEE
N8Espresso27generic_array_gather_kernelE
N8Espresso20kernel_with_uniformsINS_21array_gather_params_tEEE
N8Espresso21kernel_with_uniforms_INS_21array_gather_params_tENS_11base_kernelEEE
N8Espresso26generic_multinomial_kernelE
N8Espresso20kernel_with_uniformsINS_20multinomial_params_tEEE
N8Espresso21kernel_with_uniforms_INS_20multinomial_params_tENS_11base_kernelEEE
N8Espresso30generic_instancenorm_1d_kernelE
N8Espresso20kernel_with_uniformsINS_24instancenorm_1d_params_tEEE
N8Espresso21kernel_with_uniforms_INS_24instancenorm_1d_params_tENS_11base_kernelEEE
N8Espresso26generic_phi_virtual_kernelE
N8Espresso20kernel_with_uniformsINS_20phi_virtual_params_tEEE
N8Espresso21kernel_with_uniforms_INS_20phi_virtual_params_tENS_11base_kernelEEE
N8Espresso25generic_gumbel_max_kernelE
N8Espresso20kernel_with_uniformsINS_19gumbel_max_params_tEEE
N8Espresso21kernel_with_uniforms_INS_19gumbel_max_params_tENS_11base_kernelEEE
N8Espresso22generic_builtin_kernelE
N8Espresso20kernel_with_uniformsINS_16builtin_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16builtin_params_tENS_11base_kernelEEE
N8Espresso25generic_transplant_kernelE
N8Espresso28abstract_kernel_with_weightsINS_19transplant_params_tEEE
N8Espresso21kernel_with_uniforms_INS_19transplant_params_tENS_29abstract_kernel_with_weights_EEE
N8Espresso28generic_general_slice_kernelE
N8Espresso20kernel_with_uniformsINS_22general_slice_params_tEEE
N8Espresso23generic_stack_nd_kernelE
N8Espresso20kernel_with_uniformsINS_17stack_nd_params_tEEE
N8Espresso21kernel_with_uniforms_INS_17stack_nd_params_tENS_11base_kernelEEE
N8Espresso23generic_split_nd_kernelE
N8Espresso20kernel_with_uniformsINS_17split_nd_params_tEEE
N8Espresso21kernel_with_uniforms_INS_17split_nd_params_tENS_11base_kernelEEE
N8Espresso25generic_softmax_nd_kernelE
N8Espresso20kernel_with_uniformsINS_19softmax_nd_params_tEEE
N8Espresso21kernel_with_uniforms_INS_19softmax_nd_params_tENS_11base_kernelEEE
N8Espresso30generic_sliding_windows_kernelE
N8Espresso20kernel_with_uniformsINS_24sliding_windows_params_tEEE
N8Espresso21kernel_with_uniforms_INS_24sliding_windows_params_tENS_11base_kernelEEE
N8Espresso26generic_reverse_seq_kernelE
N8Espresso20kernel_with_uniformsINS_20reverse_seq_params_tEEE
N8Espresso21kernel_with_uniforms_INS_20reverse_seq_params_tENS_11base_kernelEEE
N8Espresso28generic_cross_entropy_kernelE
N8Espresso20kernel_with_uniformsINS_22cross_entropy_params_tEEE
N8Espresso21kernel_with_uniforms_INS_22cross_entropy_params_tENS_11base_kernelEEE
N8Espresso38generic_non_maximum_suppression_kernelE
N8Espresso20kernel_with_uniformsINS_32non_maximum_suppression_params_tEEE
N8Espresso21kernel_with_uniforms_INS_32non_maximum_suppression_params_tENS_11base_kernelEEE
N8Espresso18generic_sgd_kernelE
N8Espresso20kernel_with_uniformsINS_12sgd_params_tEEE
N8Espresso21kernel_with_uniforms_INS_12sgd_params_tENS_11base_kernelEEE
N8Espresso19generic_adam_kernelE
N8Espresso20kernel_with_uniformsINS_13adam_params_tEEE
N8Espresso21kernel_with_uniforms_INS_13adam_params_tENS_11base_kernelEEE
N8Espresso25generic_scatter_nd_kernelE
N8Espresso20kernel_with_uniformsINS_19scatter_nd_params_tEEE
N8Espresso21kernel_with_uniforms_INS_19scatter_nd_params_tENS_11base_kernelEEE
N8Espresso24generic_gather_nd_kernelE
N8Espresso20kernel_with_uniformsINS_18gather_nd_params_tEEE
N8Espresso21kernel_with_uniforms_INS_18gather_nd_params_tENS_11base_kernelEEE
N8Espresso22generic_nonzero_kernelE
N8Espresso20kernel_with_uniformsINS_16nonzero_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16nonzero_params_tENS_11base_kernelEEE
N8Espresso34generic_precompiled_segment_kernelE
N8Espresso20kernel_with_uniformsINS_28precompiled_segment_params_tEEE
N8Espresso21kernel_with_uniforms_INS_28precompiled_segment_params_tENS_11base_kernelEEE
N8Espresso22generic_one_hot_kernelE
N8Espresso20kernel_with_uniformsINS_16one_hot_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16one_hot_params_tENS_11base_kernelEEE
N8Espresso21generic_cumsum_kernelE
N8Espresso20kernel_with_uniformsINS_15cumsum_params_tEEE
N8Espresso21kernel_with_uniforms_INS_15cumsum_params_tENS_11base_kernelEEE
N8Espresso21generic_dev_op_kernelE
N8Espresso20kernel_with_uniformsINS_15dev_op_params_tEEE
N8Espresso21kernel_with_uniforms_INS_15dev_op_params_tENS_11base_kernelEEE
N8Espresso35generic_sparse_inner_product_kernelE
N8Espresso28abstract_kernel_with_weightsINS_29sparse_inner_product_params_tEEE
N8Espresso21kernel_with_uniforms_INS_29sparse_inner_product_params_tENS_29abstract_kernel_with_weights_EEE
N8Espresso23generic_rnn_arch_kernelE
N8Espresso34abstract_kernel_with_named_weightsINS_15rnn_arch_paramsEEE
N8Espresso31generic_sequence_reverse_kernelE
N8Espresso20kernel_with_uniformsINS_23sequence_reverse_paramsEEE
N8Espresso21kernel_with_uniforms_INS_23sequence_reverse_paramsENS_11base_kernelEEE
N8Espresso30generic_sequence_concat_kernelE
N8Espresso20kernel_with_uniformsINS_22sequence_concat_paramsEEE
N8Espresso21kernel_with_uniforms_INS_22sequence_concat_paramsENS_11base_kernelEEE
N8Espresso30generic_sequence_repeat_kernelE
N8Espresso20kernel_with_uniformsINS_22sequence_repeat_paramsEEE
N8Espresso21kernel_with_uniforms_INS_22sequence_repeat_paramsENS_11base_kernelEEE
N8Espresso28generic_grid_sampling_kernelE
N8Espresso20kernel_with_uniformsINS_22grid_sampling_params_tEEE
N8Espresso21kernel_with_uniforms_INS_22grid_sampling_params_tENS_11base_kernelEEE
N8Espresso32generic_local_correlation_kernelE
N8Espresso20kernel_with_uniformsINS_26local_correlation_params_tEEE
N8Espresso21kernel_with_uniforms_INS_26local_correlation_params_tENS_11base_kernelEEE
N8Espresso33generic_bahdanau_attention_kernelE
N8Espresso29generic_self_attention_kernelE
N8Espresso22generic_loopkit_kernelE
N8Espresso20kernel_with_uniformsINS_16loopkit_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16loopkit_params_tENS_11base_kernelEEE
N8Espresso21generic_conv3d_kernelE
N8Espresso28abstract_kernel_with_weightsINS_15conv3d_params_tEEE
N8Espresso21kernel_with_uniforms_INS_15conv3d_params_tENS_29abstract_kernel_with_weights_EEE
N8Espresso21generic_pool3d_kernelE
N8Espresso20kernel_with_uniformsINS_15pool3d_params_tEEE
N8Espresso21kernel_with_uniforms_INS_15pool3d_params_tENS_11base_kernelEEE
N8Espresso41generic_hierarchical_inner_product_kernelE
N8Espresso20kernel_with_uniformsINS_22inner_product_uniformsEEE
N8Espresso21kernel_with_uniforms_INS_22inner_product_uniformsENS_11base_kernelEEE
N8Espresso22generic_argsort_kernelE
N8Espresso20kernel_with_uniformsINS_16argsort_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16argsort_params_tENS_11base_kernelEEE
N8Espresso27generic_slice_update_kernelE
N8Espresso20kernel_with_uniformsINS_21slice_update_params_tEEE
N8Espresso21kernel_with_uniforms_INS_21slice_update_params_tENS_11base_kernelEEE
N8Espresso30generic_static_quantize_kernelE
N8Espresso20kernel_with_uniformsINS_24static_quantize_params_tEEE
N8Espresso21kernel_with_uniforms_INS_24static_quantize_params_tENS_11base_kernelEEE
N8Espresso32generic_static_dequantize_kernelE
N8Espresso34abstract_kernel_with_named_weightsINS_26static_dequantize_params_tEEE
N8Espresso21kernel_with_uniforms_INS_26static_dequantize_params_tENS_35abstract_kernel_with_named_weights_EEE
N8Espresso37generic_fused_convolution_grad_kernelE
N8Espresso20kernel_with_uniformsINS_31fused_convolution_grad_params_tEEE
N8Espresso39generic_fused_inner_product_grad_kernelE
N8Espresso20kernel_with_uniformsINS_33fused_inner_product_grad_params_tEEE
N8Espresso21kernel_with_uniforms_INS_33fused_inner_product_grad_params_tENS_11base_kernelEEE
N8Espresso23generic_deconv3d_kernelE
N8Espresso33generic_wg_transform_4_in_kernel_E
N8Espresso20kernel_with_uniformsINS_19wg_transform_paramsEEE
N8Espresso21kernel_with_uniforms_INS_19wg_transform_paramsENS_11base_kernelEEE
N8Espresso34generic_wg_transform_4_out_kernel_E
N8Espresso28abstract_kernel_with_weightsINS_19wg_transform_paramsEEE
N8Espresso21kernel_with_uniforms_INS_19wg_transform_paramsENS_29abstract_kernel_with_weights_EEE
N8Espresso40generic_wg_transform_weights_3x3_kernel_E
N8Espresso28generic_rnn_arch_kernel_implE
N8Espresso31generic_meta_convolution_kernelE
N8Espresso21generic_lambda_kernelE
N8Espresso20kernel_with_uniformsINS_15lambda_params_tEEE
N8Espresso21kernel_with_uniforms_INS_15lambda_params_tENS_11base_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso12no_op_kernelENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIfLi5EEENS_9allocatorIS3_EEEE
N8Espresso4blobIfLi5EEE
N8Espresso4blobIfLi6EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobItLi2EEENS_9allocatorIS3_EEEE
NSt3__110__function6__funcIZN8Espresso37generic_fused_convolution_grad_kernel6unpackERNS2_14unpack_optionsEE3$_0NS_9allocatorIS6_EEFNS_12basic_stringIcNS_11char_traitsIcEENS7_IcEEEES5_RKSD_EEE
NSt3__110__function6__baseIFNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERN8Espresso14unpack_optionsERKS7_EEE
ZN8Espresso37generic_fused_convolution_grad_kernel6unpackERNS_14unpack_optionsEE3$_0
NSt3__110__function6__funcIZN8Espresso39generic_fused_inner_product_grad_kernel6unpackERNS2_14unpack_optionsEE3$_1NS_9allocatorIS6_EEFNS_12basic_stringIcNS_11char_traitsIcEENS7_IcEEEES5_RKSD_EEE
ZN8Espresso39generic_fused_inner_product_grad_kernel6unpackERNS_14unpack_optionsEE3$_1
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIhLi2EEENS_9allocatorIS3_EEEE
pBN8Espresso11batch_metalE
N8Espresso13context_metalE
NSt3__120__shared_ptr_emplaceIN8Espresso11batch_metalENS_9allocatorIS2_EEEE
N8Espresso21sgd_optimizer_builderE
N8Espresso17optimizer_builderE
N8Espresso22adam_optimizer_builderE
N8Espresso8V9Engine19v9_depthwise_kernelE
N8Espresso17reduce_kernel_cpuE
N8Espresso14rnn_kernel_cpuE
N8Espresso21kernel_with_uniforms_INS_10rnn_paramsENS_35abstract_kernel_with_named_weights_EEE
N8Espresso18pass_reset_pre_ssaE
N8Espresso22analysis_reset_pre_ssaE
N8Espresso20abstract_data_sourceE
N8Espresso20multikey_data_sourceE
N8Espresso17async_data_sourceE
N8Espresso24simple_blobs_data_sourceE
N8Espresso25f4_blob_async_data_sourceE
N8Espresso23image_async_data_sourceE
N8Espresso24mxnet_imagebinary_readerE
NSt3__120__shared_ptr_emplaceIN8Espresso17async_data_source6priv_tENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceINS_24uniform_int_distributionIiEENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso25f4_blob_async_data_sourceENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23image_async_data_sourceENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24simple_blobs_data_sourceENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24mxnet_imagebinary_readerENS_9allocatorIS2_EEEE
N8Espresso17blob_storage_rootE
N8Espresso14blob_rtti_rootE
N8Espresso6SerDes13layer_io_baseE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_12no_op_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_12no_op_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_convolution_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_convolution_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_18generic_lrn_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_18generic_lrn_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_pool_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_pool_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_softmax_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_softmax_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_28generic_inner_product_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_28generic_inner_product_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_38generic_inner_product_quantized_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_38generic_inner_product_quantized_kernelEEE
N8Espresso38generic_inner_product_quantized_kernelE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_concat_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_concat_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_23generic_upsample_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_23generic_upsample_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_elementwise_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_elementwise_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_20generic_split_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_20generic_split_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_28generic_deconvolution_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_28generic_deconvolution_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_31generic_convolution_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_31generic_convolution_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_39generic_convolution_weights_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_39generic_convolution_weights_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_pool_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_pool_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_concat_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_concat_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_32generic_softmax_loss_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_32generic_softmax_loss_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_25generic_activation_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_25generic_activation_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_activation_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_activation_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_bias_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_bias_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_bias_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_bias_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_batchnorm_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_batchnorm_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_29generic_batchnorm_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_29generic_batchnorm_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_27generic_l2_normalize_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_27generic_l2_normalize_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_32generic_l2_normalize_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_32generic_l2_normalize_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_33generic_inner_product_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_33generic_inner_product_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_41generic_inner_product_weights_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_41generic_inner_product_weights_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_31generic_elementwise_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_31generic_elementwise_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_dropout_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_dropout_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_27generic_dropout_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_27generic_dropout_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_20generic_axpby_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_20generic_axpby_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_28generic_load_constant_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_28generic_load_constant_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_31generic_context_transfer_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_31generic_context_transfer_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_reshape_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_reshape_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_tile_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_tile_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_reduce_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_reduce_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_18generic_rnn_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_18generic_rnn_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_23generic_rnn_arch_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_23generic_rnn_arch_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_general_padding_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_general_padding_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_transpose_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_transpose_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_flatten_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_flatten_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_sequence_concat_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_sequence_concat_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_31generic_sequence_reverse_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_31generic_sequence_reverse_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_sequence_repeat_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_sequence_repeat_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_crop_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_crop_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_35generic_prediction_smoothing_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_35generic_prediction_smoothing_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_29generic_space_to_depth_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_29generic_space_to_depth_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_20generic_slice_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_20generic_slice_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_broadcast_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_broadcast_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_cast_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_cast_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_28generic_compute_stats_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_28generic_compute_stats_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_lambda_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_lambda_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_patch_extractor_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_patch_extractor_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_crop_and_resize_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_crop_and_resize_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_31generic_dynamic_quantize_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_31generic_dynamic_quantize_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_33generic_dynamic_dequantize_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_33generic_dynamic_dequantize_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_31generic_quantized_gather_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_31generic_quantized_gather_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_34generic_spatial_transformer_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_34generic_spatial_transformer_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_cf_branch_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_cf_branch_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_cf_jump_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_cf_jump_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_cf_call_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_cf_call_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_cf_return_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_cf_return_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_get_shape_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_get_shape_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_topk_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_topk_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_gather_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_gather_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_29generic_general_concat_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_29generic_general_concat_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_20generic_alloc_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_20generic_alloc_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_load_global_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_load_global_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_27generic_store_global_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_27generic_store_global_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_20generic_cf_if_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_20generic_cf_if_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_cf_loop_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_cf_loop_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_cf_for_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_cf_for_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_cf_end_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_cf_end_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_cf_else_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_cf_else_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_copy_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_copy_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_scatter_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_scatter_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_load_random_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_load_random_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_20generic_range_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_20generic_range_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_27generic_batch_matmul_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_27generic_batch_matmul_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_31generic_matrix_band_part_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_31generic_matrix_band_part_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_fill_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_fill_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_tensor_zero_pad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_tensor_zero_pad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_squeeze_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_squeeze_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_expand_dims_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_expand_dims_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_27generic_array_gather_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_27generic_array_gather_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_multinomial_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_multinomial_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_instancenorm_1d_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_instancenorm_1d_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_phi_virtual_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_phi_virtual_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_25generic_gumbel_max_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_25generic_gumbel_max_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_builtin_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_builtin_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_25generic_transplant_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_25generic_transplant_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_28generic_general_slice_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_28generic_general_slice_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_23generic_stack_nd_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_23generic_stack_nd_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_23generic_split_nd_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_23generic_split_nd_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_25generic_softmax_nd_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_25generic_softmax_nd_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_sliding_windows_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_sliding_windows_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_reverse_seq_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_reverse_seq_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_28generic_cross_entropy_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_28generic_cross_entropy_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_38generic_non_maximum_suppression_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_38generic_non_maximum_suppression_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_18generic_sgd_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_18generic_sgd_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_adam_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_adam_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_gather_nd_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_gather_nd_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_25generic_scatter_nd_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_25generic_scatter_nd_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_nonzero_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_nonzero_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_34generic_precompiled_segment_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_34generic_precompiled_segment_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_one_hot_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_one_hot_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_cumsum_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_cumsum_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_dev_op_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_dev_op_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_35generic_sparse_inner_product_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_35generic_sparse_inner_product_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_28generic_grid_sampling_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_28generic_grid_sampling_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_32generic_local_correlation_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_32generic_local_correlation_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_33generic_bahdanau_attention_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_33generic_bahdanau_attention_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_29generic_self_attention_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_29generic_self_attention_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_loopkit_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_loopkit_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_pool3d_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_pool3d_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_41generic_hierarchical_inner_product_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_41generic_hierarchical_inner_product_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_conv3d_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_conv3d_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_argsort_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_argsort_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_27generic_slice_update_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_27generic_slice_update_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_static_quantize_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_static_quantize_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_32generic_static_dequantize_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_32generic_static_dequantize_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_37generic_fused_convolution_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_37generic_fused_convolution_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_39generic_fused_inner_product_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_39generic_fused_inner_product_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_23generic_deconv3d_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_23generic_deconv3d_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_33generic_wg_transform_4_in_kernel_EEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_33generic_wg_transform_4_in_kernel_EEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_34generic_wg_transform_4_out_kernel_EEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_34generic_wg_transform_4_out_kernel_EEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_31generic_meta_convolution_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_31generic_meta_convolution_kernelEEE
p@N8Espresso17MetalLowmemEngine23meta_convolution_kernelE
N8Espresso19blob_storage_memoryE
N8Espresso21blob_storage_abstractE
N8Espresso17blob_storage_mmapE
N8Espresso8V9Engine7contextE
N8Espresso8V9Engine5batchE
N8Espresso8V9Engine6engineE
NSt3__120__shared_ptr_emplaceIN8Espresso8V9Engine5batchENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso8V9Engine25v9_wg_transform_in_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso8V9Engine14v9_conv_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso8V9Engine26v9_wg_transform_out_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso8V9Engine19v9_depthwise_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso8V9Engine14v9_pool_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso8V9Engine13v9_lrn_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso8V9Engine17v9_softmax_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso8V9Engine23v9_inner_product_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso8V9Engine16v9_concat_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso8V9Engine18v9_upsample_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso8V9Engine20v9_activation_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso8V9Engine25v9_general_padding_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso8V9Engine14v9_crop_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso8V9Engine15v9_split_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso8V9Engine19v9_batchnorm_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso8V9Engine17v9_flatten_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso8V9Engine21v9_elementwise_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso8V9Engine15v9_noise_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso8V9Engine14blob_containerENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14wisdom_managerENS_9allocatorIS2_EEEE
N8Espresso24pass_re_lower_to_networkE
N8Espresso28analysis_re_lower_to_networkE
N8Espresso22pass_tag_dynamic_blobsE
N8Espresso26analysis_tag_dynamic_blobsE
NSt3__120__shared_ptr_emplaceIN8Espresso26analysis_tag_dynamic_blobsENS_9allocatorIS2_EEEE
@N8Espresso17MetalLowmemEngine42convolution_kernel_metal_base_with_weightsINS_26generic_convolution_kernelEEE
N8Espresso17MetalLowmemEngine29convolution_kernel_metal_baseINS_26generic_convolution_kernelEEE
N8Espresso17MetalLowmemEngine24convolution_kernel_metalE
N8Espresso19abstract_executor_tE
NSt3__120__shared_ptr_emplaceIN8Espresso16confusion_matrixENS_9allocatorIS2_EEEE
N8Espresso26pass_params_graph_coloringE
N8Espresso28analysis_pass_graph_coloringE
N8Espresso19pass_graph_coloringE
NSt3__110__function6__funcIZL45alias_blob_loaded_from_or_stored_to_to_globalRN8Espresso3netERKNS2_30pass_blob_name_indexing_resultERKNS2_32pass_global_name_indexing_resultERKNS_13unordered_mapIiNS_13unordered_setIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEEESE_SG_NSH_INS_4pairIKiSJ_EEEEEEE3$_2NSH_ISR_EEFvRNSK_INS_12basic_stringIcNS_11char_traitsIcEENSH_IcEEEENS_10shared_ptrINS2_23abstract_blob_containerEEEEEEEE
ZL45alias_blob_loaded_from_or_stored_to_to_globalRN8Espresso3netERKNS_30pass_blob_name_indexing_resultERKNS_32pass_global_name_indexing_resultERKNSt3__113unordered_mapIiNS8_13unordered_setIiNS8_4hashIiEENS8_8equal_toIiEENS8_9allocatorIiEEEESC_SE_NSF_INS8_4pairIKiSH_EEEEEEE3$_2
NSt3__110__function6__funcIZN8Espresso24force_aliased_blob_index45map_global_to_blob_loaded_from_or_store_to_itERNS_13unordered_mapIiiNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiiEEEEEEE3$_0NS9_ISG_EEFvRNSA_INS_12basic_stringIcNS_11char_traitsIcEENS9_IcEEEENS_10shared_ptrINS2_23abstract_blob_containerEEEEEEEE
ZN8Espresso24force_aliased_blob_index45map_global_to_blob_loaded_from_or_store_to_itERNSt3__113unordered_mapIiiNS1_4hashIiEENS1_8equal_toIiEENS1_9allocatorINS1_4pairIKiiEEEEEEE3$_0
NSt3__120__shared_ptr_emplaceIN8Espresso28analysis_pass_graph_coloringENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso25pass_global_name_indexingENS_9allocatorIS2_EEEE
N8Espresso20pass_make_fully_convE
N8Espresso24analysis_make_fully_convE
NSt3__120__shared_ptr_emplaceIN8Espresso20pass_make_fully_convENS_9allocatorIS2_EEEE
?N8Espresso12rnn_arch_cpuE
N8Espresso27sequence_reverse_kernel_cpuE
N8Espresso26sequence_concat_kernel_cpuE
N8Espresso26sequence_repeat_kernel_cpuE
NSt3__120__shared_ptr_emplaceIN8Espresso24quantized_weights_helperENS_9allocatorIS2_EEEE
N8Espresso4blobIfLi2EEE
N8Espresso20blob_container_arrayE
N8Espresso17MetalLowmemEngine10rnn_kernelE
N13EspressoLight19espresso_nitro_planE
NSt3__120__shared_ptr_emplaceIN5nitro13nitro_programENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_pointerIPdNS_14default_deleteIA_dEENS_9allocatorIdEEEE
NSt3__114default_deleteIA_fEE
NSt3__121__basic_string_commonILb1EEE
NSt3__114default_deleteIA_iEE
NSt3__120__shared_ptr_emplaceIN8Espresso13network_shapeENS_9allocatorIS2_EEEE
N8Espresso18pass_lstm_atomizerE
N8Espresso22analysis_lstm_atomizerE
NSt3__110__function6__funcIZN8Espresso16util_unroll_loopERNS2_3netEbbE3$_2NS_9allocatorIS5_EEFvPS3_mEEE
NSt3__110__function6__baseIFvPN8Espresso3netEmEEE
ZN8Espresso16util_unroll_loopERNS_3netEbbE3$_2
NSt3__120__shared_ptr_emplaceIN8Espresso18pass_lstm_atomizerENS_9allocatorIS2_EEEE
N8Espresso15pass_allocationE
N8Espresso19analysis_allocationE
N8Espresso4blobIsLi2EEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine33generic_wg_transform_4_out_kernelENS_9allocatorIS3_EEEE
N8Espresso22device_not_found_errorE
N8Espresso19espresso_error_baseE
N8Espresso21invalid_context_errorE
N8Espresso19invalid_state_errorE
N8Espresso22invalid_argument_errorE
N8Espresso24invalid_blob_shape_errorE
N8Espresso21not_implemented_errorE
N8Espresso31unsupported_configuration_errorE
N8Espresso12memory_errorE
N8Espresso8io_errorE
N8Espresso13generic_errorE
N8Espresso13pass_make_ssaE
N8Espresso17analysis_make_ssaE
NSt3__120__shared_ptr_emplaceIN8Espresso17analysis_make_ssaENS_9allocatorIS2_EEEE
CN8Espresso24inner_product_kernel_cpuE
N8Espresso20batchnorm_kernel_cpuE
N8Espresso22convolution_kernel_cpuE
N8Espresso17pool3d_kernel_cpuE
N8Espresso15pool_kernel_cpuE
N8Espresso14lrn_kernel_cpuE
N8Espresso18softmax_kernel_cpuE
N8Espresso17concat_kernel_cpuE
N8Espresso19upsample_kernel_cpuE
N8Espresso22elementwise_kernel_cpuE
N8Espresso16split_kernel_cpuE
N8Espresso26general_padding_kernel_cpuE
N8Espresso15crop_kernel_cpuE
N8Espresso21activation_kernel_cpuE
N8Espresso16axpby_kernel_cpuE
N8Espresso27context_transfer_kernel_cpuE
N8Espresso18reshape_kernel_cpuE
N8Espresso15tile_kernel_cpuE
N8Espresso18flatten_kernel_cpuE
N8Espresso20transpose_kernel_cpuE
N8Espresso23l2_normalize_kernel_cpuE
N8Espresso24deconvolution_kernel_cpuE
N8Espresso31prediction_smoothing_kernel_cpuE
N8Espresso18dropout_kernel_cpuE
N8Espresso25space_to_depth_kernel_cpuE
N8Espresso16slice_kernel_cpuE
N8Espresso20broadcast_kernel_cpuE
N8Espresso15cast_kernel_cpuE
N8Espresso24compute_stats_kernel_cpuE
N8Espresso17lambda_kernel_cpuE
N8Espresso26patch_extractor_kernel_cpuE
N8Espresso26crop_and_resize_kernel_cpuE
N8Espresso15topk_kernel_cpuE
N8Espresso17gather_kernel_cpuE
N8Espresso27dynamic_quantize_kernel_cpuE
N8Espresso29dynamic_dequantize_kernel_cpuE
N8Espresso27quantized_gather_kernel_cpuE
N8Espresso25general_concat_kernel_cpuE
N8Espresso30spatial_transformer_kernel_cpuE
N8Espresso15copy_kernel_cpuE
N8Espresso18scatter_kernel_cpuE
N8Espresso22load_random_kernel_cpuE
N8Espresso16range_kernel_cpuE
N8Espresso27matrix_band_part_kernel_cpuE
N8Espresso15fill_kernel_cpuE
N8Espresso23batch_matmul_kernel_cpuE
N8Espresso26tensor_zero_pad_kernel_cpuE
N8Espresso18squeeze_kernel_cpuE
N8Espresso22expand_dims_kernel_cpuE
N8Espresso23array_gather_kernel_cpuE
N8Espresso22multinomial_kernel_cpuE
N8Espresso26instancenorm_1d_kernel_cpuE
N8Espresso21gumbel_max_kernel_cpuE
N8Espresso21transplant_kernel_cpuE
N8Espresso24general_slice_kernel_cpuE
N8Espresso19stack_nd_kernel_cpuE
N8Espresso19split_nd_kernel_cpuE
N8Espresso21softmax_nd_kernel_cpuE
N8Espresso26sliding_windows_kernel_cpuE
N8Espresso22reverse_seq_kernel_cpuE
N8Espresso24cross_entropy_kernel_cpuE
N8Espresso14sgd_kernel_cpuE
N8Espresso15adam_kernel_cpuE
N8Espresso34non_maximum_suppression_kernel_cpuE
N8Espresso20gather_nd_kernel_cpuE
N8Espresso21scatter_nd_kernel_cpuE
N8Espresso18nonzero_kernel_cpuE
N8Espresso30precompiled_segment_kernel_cpuE
N8Espresso18one_hot_kernel_cpuE
N8Espresso17cumsum_kernel_cpuE
N8Espresso31sparse_inner_product_kernel_cpuE
N8Espresso17dev_op_kernel_cpuE
N8Espresso24grid_sampling_kernel_cpuE
N8Espresso18argsort_kernel_cpuE
N8Espresso28local_correlation_kernel_cpuE
N8Espresso17conv3d_kernel_cpuE
N8Espresso23slice_update_kernel_cpuE
N8Espresso26static_quantize_kernel_cpuE
N8Espresso28static_dequantize_kernel_cpuE
N8Espresso33fused_convolution_grad_kernel_cpuE
N8Espresso35fused_inner_product_grad_kernel_cpuE
N8Espresso19deconv3d_kernel_cpuE
N8Espresso22conv3d_kernel_cpu_baseINS_23generic_deconv3d_kernelEEE
N8Espresso21kernel_with_uniforms_INS_11pool_paramsENS_29abstract_kernel_with_weights_EEE
N8Espresso21kernel_with_uniforms_INS_31fused_convolution_grad_params_tENS_11base_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24argmax_tree_approximatorENS_9allocatorIS2_EEEE
N8Espresso4blobIhLi2EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIsLi2EEENS_9allocatorIS3_EEEE
N8Espresso4blobIcLi4EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIaLi1EEENS_9allocatorIS3_EEEE
N8Espresso4blobIsLi1EEE
NSt3__120__shared_ptr_emplaceIN8Espresso31abstract_blob_container_optionsENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIfLi3EEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18dropout_kernel_cpu14random_state_tENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20espresso_async_cacheENS_9allocatorIS2_EEEE
N8Espresso19regularizer_builderE
N8Espresso32regularizer_with_factors_builderE
N8Espresso22l2_regularizer_builderE
N8Espresso29espresso_training_data_sourceE
?N8Espresso28pass_style_transfer_two_netsE
N8Espresso43pass_style_transfer_parameterize_transplantE
N8Espresso40pass_style_transfer_two_nets_onlyanepartE
N8Espresso32analysis_style_transfer_two_netsE
NSt3__120__shared_ptr_emplaceIN8Espresso40pass_style_transfer_two_nets_onlyanepartENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso28pass_style_transfer_two_netsENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso43pass_style_transfer_parameterize_transplantENS_9allocatorIS2_EEEE
?N8Espresso17MetalLowmemEngine6engineE
N8Espresso17MetalLowmemEngine7contextE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine23meta_convolution_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine24convolution_kernel_metalENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine11pool_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine20inner_product_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine14softmax_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine18elementwise_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine13concat_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine10lrn_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine15upsample_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine12split_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine12slice_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso32universal_dropout_augment_kernelENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso37universal_dropout_augment_join_kernelENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine10rnn_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine16batchnorm_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine22general_padding_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine20flatten_kernel_metalENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine17crop_kernel_metalENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine32generic_wg_transform_4_in_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine17activation_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine26spatial_transformer_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine17transplant_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine29convolution_grad_kernel_metalENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine37convolution_weights_grad_kernel_metalENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine22bias_grad_kernel_metalENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine22pool_grad_kernel_metalENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine25nonlinearity_kernel_metalENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine23nonlinearity_grad_metalENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine24concat_grad_kernel_metalENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine27batchnorm_grad_kernel_metalENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine31inner_product_grad_kernel_metalENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine39inner_product_weights_grad_kernel_metalENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine29elementwise_grad_kernel_metalENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17MetalLowmemEngine18axpby_kernel_metalENS_9allocatorIS3_EEEE
N8Espresso17MetalLowmemEngine22blob_container_optionsE
N8Espresso17MetalLowmemEngine14blob_containerE
N8Espresso24pass_params_sgd_hoistingE
N8Espresso17pass_sgd_hoistingE
N8Espresso10BNNSEngine18convolution_kernelE
N8Espresso10BNNSEngine16base_bnns_kernelINS_26generic_convolution_kernelEEE
N8Espresso10BNNSEngine11pool_kernelE
N8Espresso10BNNSEngine14softmax_kernelE
N8Espresso10BNNSEngine20inner_product_kernelE
N8Espresso10BNNSEngine16transpose_kernelE
N8Espresso10BNNSEngine23dynamic_quantize_kernelE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine22convolution_kernel_cpuENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine15pool_kernel_cpuENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIcLi4EEENS_9allocatorIS3_EEEE
N8Espresso4blobIaLi1EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIsLi1EEENS_9allocatorIS3_EEEE
N8Espresso12brick_kernelE
N8Espresso34abstract_kernel_with_named_weightsINS_12brick_paramsEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_12brick_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_12brick_kernelEEE
St8__nestedISt9exceptionE
N8Espresso4blobIhLi1EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIjLi1EEENS_9allocatorIS3_EEEE
N8Espresso10BNNSEngine6engineE
N8Espresso10BNNSEngine7contextE
NSt3__120__shared_ptr_emplaceIN8Espresso10BNNSEngine14softmax_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso10BNNSEngine20inner_product_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso10BNNSEngine16transpose_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso10BNNSEngine23dynamic_quantize_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23convolution_grad_kernelENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso31convolution_weights_grad_kernelENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso16pool_grad_kernelENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17nonlinearity_gradENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso25inner_product_grad_kernelENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso33inner_product_weights_grad_kernelENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso29fused_convolution_grad_kernelENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso31fused_inner_product_grad_kernelENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso10BNNSEngine7contextENS_9allocatorIS3_EEEE
?UUU?
333333
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIDv4_hLi2EEENS_9allocatorIS4_EEEE
N8Espresso4blobIDv4_hLi2EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIhLi3EEENS_9allocatorIS3_EEEE
N8Espresso4blobIhLi3EEE
NSt3__120__shared_ptr_emplaceIN8Espresso20fast_pyramid_resizerENS_9allocatorIS2_EEEE
NSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__114default_deleteIA_dEE
NSt3__120__shared_ptr_emplaceIN8Espresso16network_ensembleENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN5nitro11nitro_classENS_9allocatorIS2_EEEE
NSt3__110__function6__funcIZN5nitro13nitro_program4loadERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_13PrimitiveTypeEE3$_2NS7_ISD_EEFNS2_14nitro_variableERNS_6vectorISF_NS7_ISF_EEEEEEE
NSt3__110__function6__baseIFN5nitro14nitro_variableERNS_6vectorIS3_NS_9allocatorIS3_EEEEEEE
NSt3__120__shared_ptr_pointerIPfNS_14default_deleteIfEENS_9allocatorIfEEEE
NSt3__114default_deleteIfEE
ZN5nitro13nitro_program4loadERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_13PrimitiveTypeEE3$_2
NSt3__120__shared_ptr_emplaceIN5nitro14nitro_instanceENS_9allocatorIS2_EEEE
SNSt3__120__shared_ptr_pointerIPfNS_14default_deleteIA_fEENS_9allocatorIfEEEE
NSt3__120__shared_ptr_pointerIPhNS_14default_deleteIA_hEENS_9allocatorIhEEEE
NSt3__114default_deleteIA_hEE
NSt3__120__shared_ptr_pointerIPiNS_14default_deleteIA_iEENS_9allocatorIiEEEE
NSt3__120__shared_ptr_pointerIPDhNS_14default_deleteIA_DhEENS_9allocatorIDhEEEE
NSt3__114default_deleteIA_DhEE
NSt3__120__shared_ptr_emplaceIN5nitro19nitro_function_bodyENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN5nitro4impl16delayed_variableENS_9allocatorIS3_EEEE
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval18exec_function_bodyERKNS_6vectorINS_10unique_ptrINS2_2ir4NODEENS_14default_deleteIS8_EEEENS_9allocatorISB_EEEEE3$_0NSC_ISH_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
NSt3__110__function6__baseIFN5nitro14nitro_variableERNS2_4impl10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval18exec_function_bodyERKNSt3__16vectorINS2_10unique_ptrINS_2ir4NODEENS2_14default_deleteIS6_EEEENS2_9allocatorIS9_EEEEE3$_0
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir6DEFVAREE3$_2NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir6DEFVAREE3$_2
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir6SYMBOLEE3$_3NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir6SYMBOLEE3$_3
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir6MEMBEREE3$_4NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir6MEMBEREE3$_4
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir14BINARYOPERATOREE3$_5NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir14BINARYOPERATOREE3$_5
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir14BINARYOPERATOREE3$_6NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir14BINARYOPERATOREE3$_6
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir14BINARYOPERATOREE3$_7NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir14BINARYOPERATOREE3$_7
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir14BINARYOPERATOREE3$_8NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir14BINARYOPERATOREE3$_8
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir14BINARYOPERATOREE3$_9NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir14BINARYOPERATOREE3$_9
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir14BINARYOPERATOREE4$_10NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir14BINARYOPERATOREE4$_10
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir14BINARYOPERATOREE4$_11NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir14BINARYOPERATOREE4$_11
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir14BINARYOPERATOREE4$_12NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir14BINARYOPERATOREE4$_12
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir14BINARYOPERATOREE4$_13NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir14BINARYOPERATOREE4$_13
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir14BINARYOPERATOREE4$_14NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir14BINARYOPERATOREE4$_14
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir14BINARYOPERATOREE4$_15NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir14BINARYOPERATOREE4$_15
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir14BINARYOPERATOREE4$_16NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir14BINARYOPERATOREE4$_16
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir14BINARYOPERATOREE4$_17NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir14BINARYOPERATOREE4$_17
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir14BINARYOPERATOREE4$_18NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir14BINARYOPERATOREE4$_18
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir13UNARYOPERATOREE4$_20NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir13UNARYOPERATOREE4$_20
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir13UNARYOPERATOREE4$_21NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir13UNARYOPERATOREE4$_21
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir4CALLEE4$_23NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir4CALLEE4$_23
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir4CALLEE4$_24NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir4CALLEE4$_24
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir10MAKEOBJECTEE4$_25NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir10MAKEOBJECTEE4$_25
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir5WHILEEE4$_26NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir5WHILEEE4$_26
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir3FOREE4$_27NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir3FOREE4$_27
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir7FOREACHEE4$_28NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir7FOREACHEE4$_28
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir2IFEE4$_29NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir2IFEE4$_29
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir8INDEXGETEE4$_30NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir8INDEXGETEE4$_30
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir8INDEXPUTEE4$_31NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir8INDEXPUTEE4$_31
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir6ASSIGNEE4$_32NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir6ASSIGNEE4$_32
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir6ASSIGNEE4$_33NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir6ASSIGNEE4$_33
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir4DICTEE4$_34NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir4DICTEE4$_34
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir4LISTEE4$_35NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir4LISTEE4$_35
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir5TUPLEEE4$_36NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir5TUPLEEE4$_36
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir8TUPLEGETEE4$_37NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir8TUPLEGETEE4$_37
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir4THISEE4$_38NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir4THISEE4$_38
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir6RETURNEE4$_39NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir6RETURNEE4$_39
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir5BREAKEE4$_40NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir5BREAKEE4$_40
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval4execERKNS2_2ir8CONTINUEEE4$_41NS_9allocatorIS9_EEFNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval4execERKNS_2ir8CONTINUEEE4$_41
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval14exec_referenceERKNS2_2ir6SYMBOLEE4$_43NS_9allocatorIS9_EEFRNS2_14nitro_variableERNS3_10nitro_evalEEEE
NSt3__110__function6__baseIFRN5nitro14nitro_variableERNS2_4impl10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval14exec_referenceERKNS_2ir6SYMBOLEE4$_43
NSt3__110__function6__funcIZN5nitro4impl15nitro_lazy_eval14exec_referenceERKNS2_2ir6MEMBEREE4$_44NS_9allocatorIS9_EEFRNS2_14nitro_variableERNS3_10nitro_evalEEEE
ZN5nitro4impl15nitro_lazy_eval14exec_referenceERKNS_2ir6MEMBEREE4$_44
N5nitro2ir4NODEE
N5nitro2ir6DEFVARE
N5nitro2ir9NodeMixinINS0_6DEFVAREEE
N5nitro2ir5VALUEE
N5nitro2ir9NodeMixinINS0_5VALUEEEE
N5nitro2ir6SYMBOLE
N5nitro2ir9NodeMixinINS0_6SYMBOLEEE
N5nitro2ir5DEFUNE
N5nitro2ir9NodeMixinINS0_5DEFUNEEE
N5nitro2ir12DEFMEMBERFUNE
N5nitro2ir9NodeMixinINS0_12DEFMEMBERFUNEEE
N5nitro2ir8DEFCLASSE
N5nitro2ir9NodeMixinINS0_8DEFCLASSEEE
N5nitro2ir6MEMBERE
N5nitro2ir9NodeMixinINS0_6MEMBEREEE
N5nitro2ir14BINARYOPERATORE
N5nitro2ir9NodeMixinINS0_14BINARYOPERATOREEE
N5nitro2ir13UNARYOPERATORE
N5nitro2ir9NodeMixinINS0_13UNARYOPERATOREEE
N5nitro2ir4CALLE
N5nitro2ir9NodeMixinINS0_4CALLEEE
N5nitro2ir10MAKEOBJECTE
N5nitro2ir9NodeMixinINS0_10MAKEOBJECTEEE
N5nitro2ir5WHILEE
N5nitro2ir9NodeMixinINS0_5WHILEEEE
N5nitro2ir3FORE
N5nitro2ir9NodeMixinINS0_3FOREEE
N5nitro2ir7FOREACHE
N5nitro2ir9NodeMixinINS0_7FOREACHEEE
N5nitro2ir2IFE
N5nitro2ir9NodeMixinINS0_2IFEEE
N5nitro2ir8INDEXGETE
N5nitro2ir9NodeMixinINS0_8INDEXGETEEE
N5nitro2ir8INDEXPUTE
N5nitro2ir9NodeMixinINS0_8INDEXPUTEEE
N5nitro2ir4HINTE
N5nitro2ir9NodeMixinINS0_4HINTEEE
N5nitro2ir6ASSIGNE
N5nitro2ir9NodeMixinINS0_6ASSIGNEEE
N5nitro2ir4LISTE
N5nitro2ir9NodeMixinINS0_4LISTEEE
N5nitro2ir4DICTE
N5nitro2ir9NodeMixinINS0_4DICTEEE
N5nitro2ir5TUPLEE
N5nitro2ir9NodeMixinINS0_5TUPLEEEE
N5nitro2ir8TUPLEGETE
N5nitro2ir9NodeMixinINS0_8TUPLEGETEEE
N5nitro2ir4THISE
N5nitro2ir9NodeMixinINS0_4THISEEE
N5nitro2ir6RETURNE
N5nitro2ir9NodeMixinINS0_6RETURNEEE
N5nitro2ir5BREAKE
N5nitro2ir9NodeMixinINS0_5BREAKEEE
N5nitro2ir8CONTINUEE
N5nitro2ir9NodeMixinINS0_8CONTINUEEEE
NSt3__120__shared_ptr_emplaceIN5nitro10tuple_typeENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN5nitro9list_typeENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN5nitro9dict_typeENS_9allocatorIS2_EEEE
NSt3__110__function6__funcIZN5nitro14nitro_builtinsL16wrap_ft_functionENS_8functionIFNS2_13flexible_typeERS5_EEEE4$_39NS_9allocatorIS9_EEFNS2_14nitro_variableERNS_6vectorISC_NSA_ISC_EEEEEEE
ZN5nitro14nitro_builtinsL16wrap_ft_functionENSt3__18functionIFNS_13flexible_typeERS3_EEEE4$_39
NSt3__110__function6__funcIZN5nitro14nitro_builtinsL16wrap_ft_functionENS_8functionIFNS2_13flexible_typeERS5_S6_EEEE4$_40NS_9allocatorIS9_EEFNS2_14nitro_variableERNS_6vectorISC_NSA_ISC_EEEEEEE
ZN5nitro14nitro_builtinsL16wrap_ft_functionENSt3__18functionIFNS_13flexible_typeERS3_S4_EEEE4$_40
NSt3__110__function6__funcIZN5nitro14nitro_builtinsL16wrap_ft_functionENS_8functionIFNS2_13flexible_typeERS5_S6_S6_EEEE4$_41NS_9allocatorIS9_EEFNS2_14nitro_variableERNS_6vectorISC_NSA_ISC_EEEEEEE
ZN5nitro14nitro_builtinsL16wrap_ft_functionENSt3__18functionIFNS_13flexible_typeERS3_S4_S4_EEEE4$_41
NSt3__110__function6__funcIZN5nitro14nitro_builtinsL16wrap_ft_functionENS_8functionIFNS2_13flexible_typeERS5_S6_S6_S6_S6_EEEE4$_43NS_9allocatorIS9_EEFNS2_14nitro_variableERNS_6vectorISC_NSA_ISC_EEEEEEE
ZN5nitro14nitro_builtinsL16wrap_ft_functionENSt3__18functionIFNS_13flexible_typeERS3_S4_S4_S4_S4_EEEE4$_43
NSt3__110__function6__funcIZN5nitro14nitro_builtinsL16wrap_ft_functionENS_8functionIFNS2_13flexible_typeERS5_S6_S6_S6_EEEE4$_42NS_9allocatorIS9_EEFNS2_14nitro_variableERNS_6vectorISC_NSA_ISC_EEEEEEE
ZN5nitro14nitro_builtinsL16wrap_ft_functionENSt3__18functionIFNS_13flexible_typeERS3_S4_S4_S4_EEEE4$_42
NSt3__110__function6__funcIPFN5nitro13flexible_typeERKS3_ENS_9allocatorIS7_EEFS3_RS3_EEE
NSt3__110__function6__baseIFN5nitro13flexible_typeERS3_EEE
PFN5nitro13flexible_typeERKS0_E
FN5nitro13flexible_typeERKS0_E
NSt3__110__function6__funcIPFN5nitro13flexible_typeES3_RKS3_ENS_9allocatorIS7_EEFS3_RS3_SA_EEE
NSt3__110__function6__baseIFN5nitro13flexible_typeERS3_S4_EEE
PFN5nitro13flexible_typeES0_RKS0_E
FN5nitro13flexible_typeES0_RKS0_E
NSt3__110__function6__funcIPFN5nitro13flexible_typeERKS3_S5_ENS_9allocatorIS7_EEFS3_RS3_SA_EEE
PFN5nitro13flexible_typeERKS0_S2_E
FN5nitro13flexible_typeERKS0_S2_E
NSt3__110__function6__funcIPFN5nitro13flexible_typeERKS3_S5_RS3_ENS_9allocatorIS8_EEFS3_S6_S6_S6_EEE
NSt3__110__function6__baseIFN5nitro13flexible_typeERS3_S4_S4_EEE
PFN5nitro13flexible_typeERKS0_S2_RS0_E
FN5nitro13flexible_typeERKS0_S2_RS0_E
NSt3__110__function6__funcIPFN5nitro13flexible_typeERS3_ENS_9allocatorIS6_EES5_EE
PFN5nitro13flexible_typeERS0_E
FN5nitro13flexible_typeERS0_E
NSt3__110__function6__funcIPFN5nitro13flexible_typeERKS3_S5_S5_ENS_9allocatorIS7_EEFS3_RS3_SA_SA_EEE
PFN5nitro13flexible_typeERKS0_S2_S2_E
FN5nitro13flexible_typeERKS0_S2_S2_E
NSt3__110__function6__funcIZN5nitro14nitro_builtins17register_builtinsERNS2_23nitro_execution_contextEE4$_21NS_9allocatorIS6_EEFNS2_14nitro_variableERNS_6vectorIS9_NS7_IS9_EEEEEEE
ZN5nitro14nitro_builtins17register_builtinsERNS_23nitro_execution_contextEE4$_21
NSt3__110__function6__funcIPFN5nitro14nitro_variableERKNS_6vectorIS3_NS_9allocatorIS3_EEEEENS5_ISB_EEFS3_RS7_EEE
PFN5nitro14nitro_variableERKNSt3__16vectorIS0_NS1_9allocatorIS0_EEEEE
FN5nitro14nitro_variableERKNSt3__16vectorIS0_NS1_9allocatorIS0_EEEEE
NSt3__110__function6__funcIPFN5nitro13flexible_typeERKS3_S5_S5_S5_S5_ENS_9allocatorIS7_EEFS3_RS3_SA_SA_SA_SA_EEE
NSt3__110__function6__baseIFN5nitro13flexible_typeERS3_S4_S4_S4_S4_EEE
PFN5nitro13flexible_typeERKS0_S2_S2_S2_S2_E
FN5nitro13flexible_typeERKS0_S2_S2_S2_S2_E
NSt3__110__function6__funcIPFN5nitro13flexible_typeERKS3_S5_S5_S5_ENS_9allocatorIS7_EEFS3_RS3_SA_SA_SA_EEE
NSt3__110__function6__baseIFN5nitro13flexible_typeERS3_S4_S4_S4_EEE
PFN5nitro13flexible_typeERKS0_S2_S2_S2_E
FN5nitro13flexible_typeERKS0_S2_S2_S2_E
avg_pool_f16_pack
avg_pool_f32_pack
max_pool_f16_pack
max_pool_f32_pack
Inconsistent state
l2_pool_f16_pack
l2_pool_f32_pack
Kernel not found
Invalid texture
lrn_across_channel_%@_pack4
lrn_across_channel_%@_pack4_size_5
lrn_across_channel_%@_pack4_size_7
concat_kernel_singe_channel
concat_kernel_f32
concat_kernel_f16
concat_kernel_f32_%dinputs
concat_kernel_f16_%dinputs
legacy_cut_mode=1 deprecated
slice_n_f32_pack4
slice_n_f16_pack4
split_one_channel
slice_f32_pack4
slice_f16_pack4
elementwise_sigmoid_f32_pack4
elementwise_sigmoid_f16_pack4
softmax_f16_f16_packed
softmax_f16_packed
softmax_f32_packed
Invalid shape
upsample_f16
upsample_f32
upsample_bilinear_f16
upsample_bilinear_f32
upsample_bilinear_nonlegacy_f16
upsapmle_bilinear_nonlegacy_f32
Mode not supported: 
general_padding_padding_f32
general_padding_padding_f16
Unexpected null pointer: bn_params
Invalid shape (k)
Invalid shape (n)
Invalid shape (w)
Invalid shape (h)
Not implemented: only instance norm was implemented
batchnorm_training_kernel
instancenorm_inference_kernel
Texture not found for mean output
Texture not found for ivar output
bn_to_transplant_kernel
kernel not found for mean/ivar output
batchnorm_inference_kernel
flatten_nchw
flatten_nhwc
Invalid flatten mode: 
params_prelu
softplus_alphas
softplus_betas
Unknown weight name
Error allocating memory
shape mismatch
activation_
linear
relu
thresholded_relu
relu_clamped
leaky_relu
tanh
scaled_tanh
sigmoid
hard_sigmoid
softplus
softsign
prelu
parametric_softplus
rectilinear
step
gelu
fast_gelu1
fast_gelu2
leaky_relu_clamped
Unsupported activation type
_pack4
_f32
_f16
Dynamic slice on metal
Invalid axis passed to slice kernel.
TARR_slice_x
TARR_slice_y
slice_k_fast
slice_k_slow
TARR_slice_n
TARR_slice_seq
Slice kernel not found: 
spatial_transformer_kernel: requires two inputs
Inconsistent state in spatial_transformer_kernel: src_cpu_blob ptr is nil
Inconsistent state in spatial_transformer_kernel: theta_blob ptr is nil
Inconsistent state in spatial_transformer_kernel: dst_blob ptr is nil
spatial_transformer_kernel: dst width must be greater than 1
spatial_transformer_kernel: dst height must be greater than 1
general_spatial_transformer_affine_f32
general_spatial_transformer_affine_f16
Linear homography methods not implemented as metal kernel for spatial transformer.
Spatial transformer metal kernel not found
transplant kernel must have two outputs!
transplant kernel must have two inputs!
transplant kernel does not support n > 1
batchnorm_params
shifts
TARR_transplant_f32_pack4
TARR_transplant_f16_pack4
Invalid weights name found for transplant kernel.
No batchnorm params in transplant kernel
No shifts data in transplant kernel
Error allocating memory.
batchnorm coefficients required for transplant kernel
shifts required for transplant kernel
kernel not found in transplant_kernel
Invalid rank: 
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
pool
not implemented
Undefined weights 
Unexpected not-implemented function 
concat
elementwise
split
softmax
upsample
crop_and_resize
general_padding
batchnorm
flatten
crop
activation
convolution
space_to_depth
slice
spatial_transformer
transplant
v16@?0r^{shared_ptr<Espresso::abstract_batch>=^{abstract_batch}^{__shared_weak_count}}8
Error loading file: %s
Error mapping file: %s
path
T@"NSString",&,V_path
basePtr
T*,V_basePtr
kind
image
tensor
Invalid attachment kind %s
file
offset
size
filePath
T@"NSString",&,V_filePath
rawPointer
T^v,V_rawPointer
TQ,V_offset
TQ,V_size
disabled
TB,V_disabled
inputs
outputs
ground_truths
function_name
inputAttachments
T@"NSMutableDictionary",&,V_inputAttachments
outputAttachments
T@"NSMutableDictionary",&,V_outputAttachments
groundTruthAttachments
T@"NSMutableDictionary",&,V_groundTruthAttachments
T@"NSString",&,V_function_name
inputAttachmentNames
T@"NSArray",R
outputAttachmentNames
groundTruthAttachmentNames
json
frames
Missing frames key
format not supported
dataFrames
T@"NSMutableArray",&,V_dataFrames
mappedFiles
T@"NSMutableDictionary",&,V_mappedFiles
baseFilename
T@"NSString",&,V_baseFilename
Unsupported number of channels: %d
shape
row_bytes
nChannels
Ti,V_nChannels
shape must have 1,2,3,4, or 5 entries.
Failed to obtain blob size, Blob copy terminated
index
TQ,V_index
name
T@"NSString",&,V_name
reference_buffer
T{?=^v^v[4Q][4Q]QQQQQQQQQQi},V_reference_buffer
computed_buffer
T{?=^v^v[4Q][4Q]QQQQQQQQQQi},V_computed_buffer
computed_pb
T^{__CVBuffer=},V_computed_pb
groundtruth_buffer
T{?=^v^v[4Q][4Q]QQQQQQQQQQi},V_groundtruth_buffer
v8@?0
ESPRESSO_DATAFRAME_USE_CVPIXELBUFFERS
Unable to perform dynamic/static check, bind as static blob in default
ret: %d
outputMatchingBuffers
T@"NSArray",&,V_outputMatchingBuffers
use_cvpixelbuffer
Ti,N,V_use_cvpixelbuffer
/split
/accum
before run_on_network, set_options needs to be called to set p as pass_params_batch_splitting
only accumulation_type::mean is supported.
start = %d, end = %d
Only cond number produced by single stream is supported
num_splits %lu does not devide batch_size %lu
cf_for
for_batch_split
/plus
cf_end
/in_loop/end
for_batch_split_end
/aggregated
/out_loop
cf_if
unordered_map::at: key not found
Cannot find layer %s
Only support single if inside the transformation region
It's not valid to have a cond number to be split
Analysis missing: 
Analysis mismatch: 
Null analysis
 -> 
 (kx=
 ky=
 ng=
:blob_type(
layer_io not found for %s
{shared_ptr<Espresso::generic_factory_t>=^{generic_factory_t}^{__shared_weak_count}}8@?0
layer_io_base
fuse_biases error
fuse_batchnorm error
fold_batchnorm error
v16@?0^{fuse_vertical_state<Espresso::generic_general_padding_kernel, Espresso::generic_convolution_kernel>={shared_ptr<Espresso::generic_general_padding_kernel>=^{generic_general_padding_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::generic_convolution_kernel>=^{generic_convolution_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}ii^{net}}8
v16@?0^{fuse_vertical_state<Espresso::generic_general_padding_kernel, Espresso::generic_pool_kernel>={shared_ptr<Espresso::generic_general_padding_kernel>=^{generic_general_padding_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::generic_pool_kernel>=^{generic_pool_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}ii^{net}}8
WARNING: Asymmetric quantization will use more inference memory on NE. Please use it only if symmetric quantization doesn't yield good results for  your  model.
convert_hx_weights_to_peace
conv_groups
explicit_padding
transpose_chain
dequantize
transpose_inner_product
eltwise_mulc_max_to_leaky_relu
add_compress_sparse_property
compress_sparse
transformer
fuse_log_softmax_multinomial_to_gumbel_max
low_precision_accumulation_fc
squeeze_devop
experimental.ane.dev_op_override
is_output
w_f16_t
deconvolution
Warning: padding deconvolution %s in SAME mode will not be pad-invariant for all resolutions
[convert_to_explicit_padding] Shape for blob %s (%d %d %d %d %d) -> (%d %d %d %d %d)
v16@?0^{fuse_vertical_state<Espresso::generic_transpose_kernel, Espresso::generic_transpose_kernel>={shared_ptr<Espresso::generic_transpose_kernel>=^{generic_transpose_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::generic_transpose_kernel>=^{generic_transpose_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}ii^{net}}8
v16@?0^{fuse_vertical_3_state<Espresso::generic_transpose_kernel, Espresso::generic_flatten_kernel, Espresso::generic_inner_product_kernel>={shared_ptr<Espresso::generic_transpose_kernel>=^{generic_transpose_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::generic_flatten_kernel>=^{generic_flatten_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::generic_inner_product_kernel>=^{generic_inner_product_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}iii^{net}}8
v16@?0^{single_match_state<Espresso::generic_inner_product_kernel>={shared_ptr<Espresso::generic_inner_product_kernel>=^{generic_inner_product_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}i^{net}}8
@lrelu
Invalid template net
graph_templates/tf_normalization_transformer/model.espresso.net
src=%d target=%d type=%s
%d %d
instancenorm_1d
wGamma
wBeta
v16@?0^{fuse_vertical_3_state<Espresso::generic_reshape_kernel, Espresso::generic_activation_kernel, Espresso::generic_reshape_kernel>={shared_ptr<Espresso::generic_reshape_kernel>=^{generic_reshape_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::generic_activation_kernel>=^{generic_activation_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::generic_reshape_kernel>=^{generic_reshape_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}iii^{net}}8
v16@?0^{fuse_vertical_state<Espresso::generic_reshape_kernel, Espresso::generic_reshape_kernel>={shared_ptr<Espresso::generic_reshape_kernel>=^{generic_reshape_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::generic_reshape_kernel>=^{generic_reshape_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}ii^{net}}8
@gumbel_max
gumbel_max
{vector<std::__1::shared_ptr<Espresso::graph_optimization_rule>, std::__1::allocator<std::__1::shared_ptr<Espresso::graph_optimization_rule> > >=^{shared_ptr<Espresso::graph_optimization_rule>}^{shared_ptr<Espresso::graph_optimization_rule>}{__compressed_pair<std::__1::shared_ptr<Espresso::graph_optimization_rule> *, std::__1::allocator<std::__1::shared_ptr<Espresso::graph_optimization_rule> > >=^{shared_ptr<Espresso::graph_optimization_rule>}}}24@?0{shared_ptr<Espresso::network_optimization_graph>=^{network_optimization_graph}^{__shared_weak_count}}8
conv
bias
const
B16@?0^{generic_elementwise_kernel=^^?{shared_ptr<Espresso::abstract_context>=^{abstract_context}^{__shared_weak_count}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}iiiii{map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > > > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > >, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{shared_ptr<Espresso::SerDes::generic_serdes_object>=^{generic_serdes_object}^{__shared_weak_count}}{unordered_map<std::__1::basic_string<char>, int, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, int> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{elementwise_params=iifffiBiiIIII}}8
inner_product
scale
_pre_act
_act
context_transfer
_ctx
__fix__underflow___
v16@?0^{single_match_state<Espresso::generic_convolution_kernel>={shared_ptr<Espresso::generic_convolution_kernel>=^{generic_convolution_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}i^{net}}8
v16@?0^{single_match_state<Espresso::generic_deconvolution_kernel>={shared_ptr<Espresso::generic_deconvolution_kernel>=^{generic_deconvolution_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}i^{net}}8
map::at:  key not found
string to be split cannot be empty or nullptr
blobs
T{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}},V_blobs
networkPointer
T{shared_ptr<Espresso::net>=^{net}^{__shared_weak_count}},V_networkPointer
Invalid decompression algorithm %c
Block size too big %lld
Mismatching decompression size %zu %zu
Batch
Epoch
EspressoError
Unimplemented: unable to load updatable model w/ context: ANE
unsupported configuration: GPU not supported on this platform
Queried tensor '%s' not found in network
number tensors from data provider == %lu < number of requested tensors == %lu
tensor of name %s not provided by data provider
inconsistent shape of tensor %s between tensor in network and tensor provided by data loader: %s vs %s
Training Graph:
Src[%d]: %@ (layer[%d]) [w:%d,h:%d,k:%d,n:%d,seq:%d,rank:%d,platform:%d,computePath:%d]... 
data at 0: %f
%@: layer[%d], kernel type: %@, layerPlatform: %d, layerComputePlatform: %d
Dst[%d]: %@ (layer[%d]) [w:%d,h:%d,k:%d,n:%d,seq:%d,rank:%d,platform:%d,computePath:%d]... 
data at 0: %f
Batch size can't be 0/
is_training
end_training
compute_gradient
end_compute_gradient
do_optimization_update
end_optimization_update
No network made from call to load_network
.espresso.net
_updatable.espresso.net
Found Espresso network (model_updatable.espresso.net) has no training graph
globals_container_net
_auxiliary_output
_mse-int1
_mse-int2
_mse-int3
_l2/mse-sub
_l2/mse-add
_l2/mse-pow
reduce
_l2/mse-reduce
loss name %@ does not exist
loss type not supported: %d
layer_type
layer_name
layer_idx
Invalid optimizer type, optimizer must be of type SGD or Adam
MultiGPU not supported yet
training control variable '%s' not found
Initializer '%s' not found
Failed to setup inputs %@
Failed to run inference on the network %@
Failed to train on the network %@
Use saveTrainingNetwork for ETTaskDefinition created by initWithTrainingModelDefinition
training
Failed to save the network %@
Failed to save the training network %@
Missing inference layer %s
Currently only supports networks where only inner product and convolution layers have weights
Failed to load inference network at %@
.bin
Unable to find layer named: %@
kETLayerParameterTypeSparseWeightsCOO has to have rank 1 and its length must be a multiple of 3
Trying to set sparse weights for non-sparse layer %@ with type %s
Unable to set tensor named %@, no variable tensor with that name found.
Trying to set tensor %@ failed, tensor must be of type: kETDataTypeFloat32.
Trying to set tensor %@ failed, provided tensor must be of shape: %@, (found: %@).
Trying to set tensor %@ failed, provided tensor must have strides: %@ (found: %@).
inferenceGraphNetPtr
T{shared_ptr<Espresso::net>=^{net}^{__shared_weak_count}},V_inferenceGraphNetPtr
trainingGraphNetPtr
T{shared_ptr<Espresso::net>=^{net}^{__shared_weak_count}},V_trainingGraphNetPtr
inferenceModel
T@"ETModelDefinition",&,N,V_inferenceModel
optimizer
T@"ETOptimizerDefinition",&,N,V_optimizer
platform
TQ,N,V_platform
taskState
T@"ETTaskState",&,N,V_taskState
beta1_accum
beta2_accum
v16@?0^{single_match_state<Espresso::generic_rnn_arch_kernel_impl>={shared_ptr<Espresso::generic_rnn_arch_kernel_impl>=^{generic_rnn_arch_kernel_impl}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}i^{net}}8
W_t_x
W_t_x_reverse
W_x_reverse
W_t_h
W_t_h_reverse
W_h_reverse
w_f32_t
Invalid parameter
Invalid parameter: 
invalid argument
v9_dropout_multiply
cp not supported
dropout_multiply
not supported
top not found 
invalid batch_n 
_dropout_augment
dropout_augment
_prob
_uncertainty
dropout_augment_join
_dropout_augment_join
pass_rpn_tracker_merge_convs: merging %zu x-correlations
_single_conv
rpn_tracker_merge_convs
__copy_from_raw not defined for platform 
engine
experimental_mode
settings
config
v9_optimizations_disabled_bitfield
v9_force_instancenorm_subsampling
averagegputime
com.apple.EspressoImage2ImageQ
loaded wisdom: %s %@
C,48,K,32,X,3,Y,3,G,1,W,60,H,60,S,2,V,2,
2,2,4,8,4,4,4,1,373,266874
C,3,K,8,X,3,Y,3,G,1,W,480,H,480,S,1,V,2,
2,2,4,8,8,4,1,1,505,198463
C,32,K,16,X,3,Y,3,G,1,W,120,H,120,S,2,V,2,
2,3,8,8,4,4,4,1,425,313282
C,4,K,16,X,3,Y,3,G,1,W,480,H,480,S,1,V,2,
1,3,4,8,8,4,1,1,1434,185696
C,4,K,3,X,3,Y,3,G,1,W,480,H,480,S,1,V,2,
2,3,4,4,8,4,1,1,329,153726
C,16,K,6,X,3,Y,3,G,1,W,240,H,240,S,1,V,2,
2,2,8,4,4,4,2,1,438,228955
C,16,K,32,X,3,Y,3,G,1,W,240,H,240,S,1,V,2,
2,2,8,8,4,4,2,1,1567,339139
C,32,K,48,X,3,Y,3,G,1,W,120,H,120,S,1,V,2,
2,3,8,8,4,4,4,1,1072,371568
C,48,K,48,X,3,Y,3,G,1,W,60,H,60,S,1,V,2,
1,3,8,8,4,4,2,1,489,305395
C,16,K,24,X,3,Y,3,G,1,W,240,H,240,S,1,V,0,
1,3,8,8,4,4,2,1,1263,315846
C,24,K,32,X,3,Y,3,G,1,W,120,H,120,S,1,V,0,
1,2,4,8,2,2,2,1,976,204123
C,24,K,16,X,3,Y,3,G,1,W,120,H,120,S,2,V,0,
2,3,4,8,2,2,2,1,722,138148
C,16,K,6,X,3,Y,3,G,1,W,240,H,240,S,1,V,0,
2,2,8,4,4,4,2,1,788,127419
C,32,K,24,X,3,Y,3,G,1,W,60,H,60,S,2,V,0,
1,3,8,4,4,2,4,1,171,291385
C,4,K,16,X,3,Y,3,G,1,W,480,H,480,S,1,V,0,
1,2,4,8,8,4,1,1,1744,152655
C,32,K,32,X,3,Y,3,G,1,W,60,H,60,S,1,V,0,
1,3,8,4,4,4,4,1,214,310579
C,4,K,3,X,3,Y,3,G,1,W,480,H,480,S,1,V,0,
2,3,4,4,8,4,1,1,694,72938
C,3,K,8,X,3,Y,3,G,1,W,480,H,480,S,1,V,0,
2,3,4,8,8,4,1,1,497,201632
C,16,K,24,X,1,Y,1,G,1,W,60,H,60,S,1,V,2,
1,3,8,4,4,4,2,1,622,163354
C,32,K,32,X,1,Y,1,G,1,W,15,H,15,S,1,V,2,
1,3,8,4,2,2,2,1,100,167087
2,3,4,4,8,4,1,1,700,72389
2,3,4,8,2,2,2,1,723,137977
2,2,8,4,2,2,2,1,679,147881
1,3,8,4,4,2,4,1,176,282115
1,2,4,8,8,4,1,1,1748,152364
2,3,4,8,8,4,1,1,498,200874
C,24,K,32,X,1,Y,1,G,1,W,30,H,30,S,1,V,2,
1,2,8,8,8,4,1,1,316,159707
Inconsistent state: 0 blob
noise
noise_const
load_constant
add_noise
data0
data0_plus_noise
data3
data1
data2
Tweaking %@ = %f
saturation
gamma
brightness
contrast
old_frame_scale
hq_scaling
Tweaking hq: %d
instancenorm_subsampling
Tweaking subsample: %d
winograd
Tweaking wg: %d
v16@?0^{?=ii*}8
linear_resize_t2d
shader not found
temporal_alpha
%d:%d_
image2image_postprocessing_blend_texarray
image2image_postprocessing_blend
process_output
process_output_t2d
output_texture_array_to_texture
wisdom count=%d
/tmp/wisdom.plist
[Tuning] %@ %d (%d x %d)
WG-tuning %s %d %d
ilayer=%d (%d %d %d -> %d %d %d) C=%d
data
ilayer=%d wg=%d dt=%.4f speedup=%.2f (%d %d %d -> %d %d %d)
rotation_degrees
Ti,N,V_rotation_degrees
flip_y
Ti,N,V_flip_y
data0__small
data2__small
input binding for data0 failed.
input binding for data2 failed.
input binding for data0__small failed.
input binding for data2__small failed.
plan execution failed...
espresso.locker_disabled
Unexpected type for 
error loading file: 
Error reading file statistics of 
File
not a regular file
failed to memory map file: 
 error: 
file does not contain encrypted model header
unrecognized magic word in the encrypted model header
unsupported major version = 
file does not contain any payload, sizeOfHeader = 
illegal value for original file size = 
illegal value for number of encrypted pages = 
illegal number of encrypted bytes, encrypted pages = 
failed to setup decryption path due to error: 
outputName
T@"NSString",&,V_outputName
inputName
T@"NSString",R,V_inputName
targetInputName
T@"NSString",R,V_targetInputName
lossOutputName
T@"NSString",R,V_lossOutputName
mode
TQ,R,V_mode
received wrong object, expected net_info_ir_t
expected network to be valid object in profiler
bind_external_input
bind_external_output
input_raw_ptr
output_raw_ptr
set_input_raw_ptr
set_output_raw_ptr
bind_dyn_output
unbind
submit
bind_input_vimagebuffer_XYZA8
bind_input_vimagebuffer_argb8
bind_input_cvpixelbuffer
__main__
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
objectType
bounds
T{CGRect={CGPoint=dd}{CGSize=dd}}
center
T{CGPoint=dd}
confidence
Tf,Vconfidence
Tq,VobjectType
T{CGRect={CGPoint=dd}{CGSize=dd}},Vbounds
T{CGPoint=dd},Vcenter
[retry]: %s err=%s
 [Exception from Layer: 
fast_reshape
sequence_concat
Invalid bottom shape for layer: 
Invalid top shape for layer: 
%.3f 
 %.3f 
 %.3f %s
async
Configuration: %s, the blob %s is not an input
Implementation for set_priority must be overriden                                     for every engine that has a runtime compiler
Implementation for clear_priority must be overriden                                     for every engine that has a runtime compiler
 [Exception from layer 
get_intermediate_buffer_handle() not implemented for the current compiler
compilation_cache_exists() not implemented for the current compiler
compilation_cache_purge() not implemented for the current compiler
to_fallback
visit_order
any_fallback
unsupported
kernel_validation_status
input_shapes
espresso
Unsupported scripting engine 
Deprecated. Use the corresponding function in gradient_builder
A global can be loaded by at most one load constant kernel
blob %s is not input of layer %s
@bindglobal@
index >= blob_shapes.size() %zu %zu
pass_global_name_indexing_result not synced
%*s %*s %*s %*s %*s %*s %*s %*s %-*s Aliased
Size (Bytes)
Rank
Name
%*zu %*zu %*d %*d %*d %*d %*d %*d %-*s %-*s
[Blobs Summary] %zu Bytes of Max Memory for %zu Blobs
[Blobs Summary] %zu Bytes of Memory with Aliasing for %zu Blobs
def %s %s (
): -> 
basic_block_head
<basic_block_head>
<segment_head 
<segment_end>
cf_else
%.4zu: %s
%%%s = 
%s(%s) @%s,%s %s
cf_loop
end %s
constant_if_condition
constant_blobs
B16@?0Q8
interpreter is needed by load_global layers
layer %s is not a load_global layer
phi_virtual
generic_serdes_object
Unsupported nonlinearity 
b_reverse
p_reverse
Unexpected weight name 
_reverse
Missing weight
Not implemented rnn cell mode: 
Cannot create number
null W_h
null W_x
null W_h_rev
null p
null p_rev
maximum sequence length exceeded
Batch size != 1 not supported
rnn_arch
{shared_ptr<Espresso::base_kernel>=^{base_kernel}^{__shared_weak_count}}28@?0r^{shared_ptr<Espresso::abstract_context>=^{abstract_context}^{__shared_weak_count}}8r^v16i24
Unexpected size s=
/blob=
kMRLModelParameterSizeKey
/System/Library/PrivateFrameworks/Montreal.framework/Montreal
kMRLModelParametersKey
MRLModelCreate
MRLModelStateCreate
MRLModelStateReset
MRLModelStateRelease
MRLModelRelease
MRLModelSetMaxSequenceLength
MRLModelRecognizeVectors
MRLModelStatePieceSize
MRLModelStatePieceData
MRLModelStateRestore
MRLModelRecognizeVectorsIncremental
MRLModelStateSave
{shared_ptr<Espresso::factory_object>=^{factory_object}^{__shared_weak_count}}8@?0
Deserialization tag "
" not found
Deserialization tag %s not found
Error reading the input file as JSON. Error: %s
The top level object in the JSON input must be a dictionary
Invalid stream passed to deserialize
Error allocating memory for deserialization
Error reading deserialization input
bahdanau_attention: Layer supposed to be unpacked on CPU engine
W_query
W_key
query_fc
key_fc
v_fc
transpose
v_fc_t
value_t
raw_score
batch_matmul
weighed_avg
weighted_avg
weighted_avg_t
self_attention: Layer supposed to be unpacked on CPU engine
W_value
b_query
b_key
b_value
self_attention_kernel_cpu: requires 3 bottoms
value_fc
reshape
query_reshape
query_reshaped
key_reshape
key_reshaped
value_reshape
value_reshaped
query_t
key_t
get_shape
raw_score_shape
fill
mask_fill
eps_fill
matrix_band_part
mask
masking
raw_score_for_eps
masking_eps
masked_raw_score
scaled_raw_score
context_t
context
bahdanau_attention
self_attention
src_
dst_
Not supported
invalid parameter
post_scale
W_S8
hx_extra_f
parameters
T@"NSDictionary",R,V_parameters
espresso.force_engine
Espresso cannot find available METAL engine.
Espresso compiled without CUDNN engine.
Espresso compiled without MPS engine.
Espresso compiled without HX engine.
Espresso compiled without HX CVA engine.
Unsupported engine type
Invalid platform enum 
Could not create context
Low priority mode not supported on this platform
espresso.force_dtype
Null path
Compute path 
 not supported.
The context is invalid.
Cannot load network '
Cannot load network.
Inconsistent phase of espresso_plan: %d
Invalid network_index.
Null network found.
Blob '
' not found.
Setting the priority is not supported on this engine.
Setting the execution queue is not supported on this engine.
network_version
Empty espresso_plan.
[espresso] Dumping to %s
Cannot write to path 
multi_head_prune
compiler must exist for network executing on ANE
com.apple.espresso.execution
Dump_directory detected, IR already generated during plan_build
Invalid network index
No outputs declared
No inputs declared
Inconsistent phase of espresso_plan: 
bind_input on subnetwork
Input not declared 
bind_output on subnetwork
Binding buffers cannot be done while a plan is being executed.
Output not declared
Output not declared 
Blob not found.
Input not declared
%s not declared: %s
Output
Input
Mismatching w: client:%d != internal:%d
Mismatching h: client:%d != internal:%d
Mismatching k: client:%d != internal:%d
Mismatching n: client:%d != internal:%d
Mismatching seq: client:%d != internal:%d
Invalid X-dimension 
Invalid Y-dimension 
Invalid K-dimension 
Invalid N-dimension 
Null image buffer
Null image buffer data
Blob null. 
Not implemented.
Only one of cvpixelbuffer and tex must be set
Image pre-processing were pre-compiled, cannot change them now
Pixel buffer must not be null.
Buffer with null data in blob 
Null cvbuffer or tex in 
CVPixelBuffer input not supported on pre-TibO
hose_fd is supported for main function only
subnetwork with name %s does not exist
The plan must have at least one network to execute.
submit with arguments requires context_metal
Espresso compiled without required engine for this API.
Invalid network
capi
NONE
first
n_runs
[espresso_plan::perfbench] avg runtime (ms) = %.2f
Missing input shape: 
A plan cannot be cleaned while it is being executed.
ESPRESSO_STATUS_SUCCESS
ESPRESSO_STATUS_ERROR_GENERIC
ESPRESSO_STATUS_ERROR_IO
ESPRESSO_STATUS_ERROR_PARSE
ESPRESSO_STATUS_ERROR_MEMORY
ESPRESSO_STATUS_ERROR_INVALID_STATE
ESPRESSO_STATUS_ERROR_INVALID_ARGUMENT
ESPRESSO_STATUS_ERROR_INVALID_BLOB_SHAPE
ESPRESSO_STATUS_ERROR_INVALID_BLOB_NAME
ESPRESSO_STATUS_ERROR_NOT_IMPLEMENTED
ESPRESSO_STATUS_ERROR_COMPUTATION_KILLED
A plan cannot be destroyed while it is being executed.
mode_flags
format_flags ESPRESSO_BIND_FORMAT_NCHW_INTERNAL_STORAGE
Wrong argument passed to espresso_plan_get_last_error.
The priority passed is not a valid value.
Unexpected null network
Unexpected null context
ESPRESSO_LITE_TEST_VECTORS
Cannot create directory: 
blobs.bin
test_vector.json
test_vector.plist
Cannot create file: 
binary_file
Cannot write file: 
__raw__
no_alpha_premultiply
code.nitroir
Inconsistent phase of espresso_plan
Inconsistent phase of src espresso_plan
com.espresso.multi_buffers_ane_q
Conv fp16 weights not set
shuffled weights not supported
[%d,%d,%d,%d,%d], [%d,%d,%d,%d,%d]
Elwise Op not implemented
axpby
nonlinearity
tile
l2_normalize
sequence_reverse
sequence_repeat
prediction_smoothing
dropout
broadcast
cast
compute_stats
lambda
patch_extractor
dynamic_quantize
dynamic_dequantize
quantized_gather
cf_branch
cf_jump
cf_call
cf_return
topk
gather
general_concat
alloc
load_global
store_global
copy
scatter
load_random
range
tensor_zero_pad
squeeze
expand_dims
array_gather
multinomial
builtin
general_slice
stack_nd
split_nd
softmax_nd
sliding_windows
reverse_seq
cross_entropy
adam
non_maximum_suppression
gather_nd
scatter_nd
nonzero
precompiled_segment
one_hot
cumsum
dev_op
sparse_inner_product
convolution_grad
convolution_weights_grad
pool_grad
nonlinearity_grad
activation_grad
concat_grad
softmax_loss_grad
bias_grad
batchnorm_grad
l2_normalize_grad
inner_product_grad
inner_product_weights_grad
elementwise_grad
dropout_grad
grid_sampling
local_correlation
loopkit
pool3d
hierarchical_inner_product
conv3d
argsort
slice_update
static_quantize
static_dequantize
fused_convolution_grad
fused_inner_product_grad
deconv3d
convert_float32_to_float16
convert_float16_to_float32
copy_float32_to_float32
ESPRESSO_SKIP_REPORT_BENCHMARK_RESULT
result/add/json/
Espresso
commitid
branch
project
executable
compute_path
benchmark
environment
result_time
result_nerr
result_psnr
result_aerr
result_dcos10
result_mem
result_ioaccel_mem
result_power
result_top1
result_top5
aux0
aux1
aux2
aux3
[report_benchmark_result] t=%.2fms psnr=%.2f %s@%s
POST
application/json; charset=utf-8
Content-Type
[report_benchmark_result] %s error=%s
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
http://polluce.apple.com:18888/
ESPRESSO_PERF_SERVER
hw.model
kern.osversion
machdep.cpu.brand_string
layerNames
T@"NSArray",R,V_layerNames
T@"NSArray",R,V_inputs
T@"NSArray",R,V_outputs
trainingInputs
T@"NSArray",R,V_trainingInputs
trainingOutputs
T@"NSArray",R,V_trainingOutputs
modelURL
T@"NSURL",R,V_modelURL
isTrainingGlobalName
T@"NSString",R,V_isTrainingGlobalName
initializer
T@"NSString",R,V_initializer
Inconsistent state: estimate_stats or load_stats must be called first
per_ch_qscale
per_ch_qbias
v16@?0^{vector<Espresso::map_with_ordered_keys<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::allocator<Espresso::map_with_ordered_keys<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >=^{map_with_ordered_keys<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >}^{map_with_ordered_keys<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >}{__compressed_pair<Espresso::map_with_ordered_keys<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > *, std::__1::allocator<Espresso::map_with_ordered_keys<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >=^{map_with_ordered_keys<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >}}}8
hx_bias
hx_scaleout
hx_shiftout
hx_kernel
hx_scale_shift
No hx_scale_shift for %s (type %s)
ESPRESSO_QUANTIZER_SYMMETRIC
Expect two inputs, only detected one.
multiple inputs should have the same numerical properties
Cannot find convolution weights. The model needs to be in float32 or float16
Not implemented
Outputs window not supported
not impl
v24@?0{shared_ptr<Espresso::blob<float, 4> >=^{blob<float, 4>}^{__shared_weak_count}}8
Loading network '%s'
Err=%s
[trainer::trainer] Loading network %s pl=%d cp=%d
Can't load network: %s
Can't load network: 
[trainer::trainer input] %s %d %d %d (%d -> %d)
Invalid option
bwd.espresso.net
disabled DUMPING Ffor fp16 %s %d
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Sim/CVML_Espresso-235/EspressoTrain/EspressoTrain/EspressoTrain.mm
backprop
Training over %zu samples (%d epochs) (%zu batches)
Epoch:%zu. LR decay lr=%f
Loss: %.4e (%.4e) (%zu/%zu/%zu)
dt=%.2f (%.2f/s)
fwd_
Dumping to: %s
labels
Stack not empty after end of pass head=%zu size=%zu
Else at end of program
Unbound branch at end of program
Cannot find the label to bind
[Espresso] uninitialized network
Null blob: 
[Espresso] wrong number of images in image batch
[Espresso] wrong image size
[Espresso] emtpy image
[Espresso] wrong number of input channels while binding XYZA image: it should be at least 2
[Espresso] wrong number of input channels in image
[Espresso] unexpected null
[Espresso] blob not found:
[Espresso] wrong image size 
Espresso: wrong_batch_type
morechan_
convolution_
grad_convolution_
_backwardstride
convolution_grad_kernel not configured
Compute path no supported 
transpose_conv_weights_f32
transpose_conv_weights_f16
conv_weights_grad_f32
conv_weights_grad_f16
bias_grad_f32_11
bias_grad_f16_11
grad_avg_pool_f16_pack
grad_avg_pool_f32_pack
grad_max_pool_f16_pack
grad_max_pool_f32_pack
relu_
tanh_
relu_grad_
tanh_grad_
copy_
axpby_C%d_A%d_B%d
Incompatible operands CP x=
axpby_
tex2d_MatrixMultiplyT_f32
tex2d_MatrixMultiplyT_f32_2x1batch
tex2d_MatrixMultiplyT_f32_4x1batch
innerprod_weights_grad_
Espresso: wrong_context_type
Fail to load function '%s' from dylib %s
dylib not loaded
cannot load shape info
Frameworks/LoopKitGeneratedKernels.framework/LoopKitGeneratedKernels
Cannot find bundle
Cannot load dylib %s
Null interpreter state
Null interpreter
missing condition blob
Wrong number of arguments: %zu != %zu
Null blob found
Wrong number of returned blobs
alloc_kernel_cpu: invalid rank
load_global called with no output blobs
load_global: undefined global %s
store_global called with no input blobs
the axis to be iterate on must agree for all input blobs
slice_step %d doesn't devide corresponding dim %d
cf_for_kernel_cpu: Invalid number of top blobs: %zu
missing output blob
bound_output
breakpoint
Invalid builtin: %s
Unexpected size 
Invalid shape: 
k%dx%d_w%dx%d
_array
wg_transform4_in_%@
out_scale
hx_in_scales
wg_transform4_out_%@
bias buffer not set
bias buffer too small
Kernel size not supported 
Shape mismatch
wg_tx_in
wg_tx_out
wg_tx_transform_weights
brick
class_name
type
debug_info
hint_fallback_from_metal
hint_fallback_from_cpu
attributes
_ctx_tx_to_fallback_
_ctx_tx_to_default_
_ctx_tx_fallback__
_ctx_tx_default__
Op not available: 
tex2d_MatrixMultiply_f32
tex2d_MatrixMultiply_f32_2x1batch
tex2d_MatrixMultiply_f32_4x1batch
texarray_MatrixMultiply_f32
texarray_MatrixMultiply_f32_2x1batch
texarray_MatrixMultiply_f32_4x1batch
buff_MatrixMultiply_f16_g1
embedding_lookup_f16
invalid share_weights parameter
W_f16
BNNS Error %d
activation_grad for activation mode %d is not implemented
BNNS Error
network not prepared for reshape_networks
nitro
[ESPRESSO_MEMORY_VERBOSE] Input: %s -> %d
[ESPRESSO_MEMORY_VERBOSE] %s %s -> %d
blob not found in gc
[ESPRESSO_MEMORY_VERBOSE] max size for color %d %.3fMB (%d %d %d %d)
Logic error in NetReshape, color 
only root module can have globals
Negative input shape: %s
Prevented shape_network stack overflow.
Failed in 2nd reshape after missing custom layer info.
FP32
FP16
com.espresso.random
random_seed
build_grads_for_inputs not implemented
com.apple.espresso
Batch index > 0 not supported
Invalid source CVPixelBufferRef.
kCVPixelFormatType_OneComponent8 supported only for single channel inputs
CVPixelBuffer format must be Planar8 or 32BGRA
__copy_from_MTLTexture not supported with engine.
input_names and inputs_backpropable should be of same length
pass_find_shared_weights: shared identical weights for %zu layers
espresso.interpreter.verbose
missing src %s
missing dst %s
[interpreter_t] top.inetwork=%zu >= networks.size()=%zu
Cannot find network %s
prepare_basic_block %zu %zu
Phi kernel expected to have output
%zu: resolved_dim=%lld current_dim=%lld changed=%d
_@ssa_version_
metal
kernel not found '
' on platform 
com.apple.espresso.factorylock
data error
  >> SubLandmark
FaceLandmark
pool5_student
prob_student
    dcn lndmrk skip! No face %e
landmarks_p0_
landmarks_p1_
landmarks_p3_
landmarks_8c_
NP %@
landmarks_8c_.espresso.local.bin
faceDetector-current.bin
landmarks_p0_.espresso.local.bin
landmarks_p1_.espresso.local.bin
landmarks_p3_.espresso.local.bin
newface
T{CGRect={CGPoint=dd}{CGSize=dd}},V_newface
pool3d_kernel_cpu: Null top blob
pool3d_kernel_cpu: Null bottom blob
Unsupported Pool3D mode.
gradient_builder can be created only for networks on IR platform
unfuse has_prelu is not implemented
_pre_activation
_activation
Can't find CPU weights
Can't find GPU weights
___tx_cpu_
_diff
_nonlin_diff
_nonlin
_dbn
_dbias
_bias
forward pass with %zu inputs: inner product at layer %d has %zu inputs, needs two or more for gradient computation.
/grad
_mask_i32
_mask_f32
_split
gradient_start
input name %s doesn't exist in the network
Gradient for variable %s is not generated
ESPRESSO_ENGINE_MAX_VAL is not the right engine
Not supported engine: 
Not supported storage_type: 
Unsupported quantized weight memory type: 
Not supported: 
Not supported compute_path: 
Invalid quantization parameters
BNNS de-quantization error
FP16 BNNS Dequantizer only available for uint8/int8
Unable to extend signed int weights to unsigned char
W_u8
W_U8
W8_minmax
q_u8_range
Mismatching legacy ranges size %d != %d
Unrecognizable weight name
Mismatching size %d != %d, n_elements=%d n_bits=%d
lut_to_
lut_to_float32
Mismatching lut_to_float32 linear size %d != %d
lut_to_int8
Mismatching lut_to_int8 size %d != %d
lut_to_uint8
Mismatching lut_to_uint8 %d != %d
Mismatching per_ch_qscale size %d != %d
Mismatching per_ch_qbias size %d != %d
EspressoPass_%s
Pass not found %s
Invalid pass %s
espresso.engine_availability_reordering
The network bounces between the ANE and GPU/CPU or between GPU & CPU too often. Please consider running the network on a different engine or change the architecture.
experimental.ane.use_faux_dispatch
com.espresso.dispatch_version
com.espresso.dispatch_avoid_gpu
com.espresso.dispatch_avoid_cpu
ESPRESSO_DISPATCH_VERSION
com.apple.espresso.dispatch_allow_loop_accelerate
Dynamic loop detected, Please change to use CPU backend for performance boost
The network falls back to GPU too often. Please consider running the network on GPU or change the architecture.
The network falls back to CPU too often. Please consider running the network on CPU or change the architecture.
espresso.mps_fallback_to_cpu_no_bnns
Setting: espresso.mps_fallback_to_cpu_no_bnns
espresso.metal_lowmem_conservative_context_transfer
fillFaceList
mergeFaceList
Tile Dimension
Confidence Threshold
Pre training tile crop size
Mininum bounding box threshold
DCNEspressoOverfeatDetector
enet
T@"EspressoFDOverfeatNetwork",&,N,V_enet
confidenceThreshold
Td,N,V_confidenceThreshold
minBoundingBoxThreshold
Td,N,V_minBoundingBoxThreshold
index %d > %d
scatter_index
hierarchical_inner_product_kernel_cpu: invalid cluster index %d > %zu
.net
.weights
error loading binserializer.
.shape
.espresso.shape
bottom
info_needed_to_reload is absent
script
external_networks
subnetworks
Error reading layer shapes
layer_shapes
global_shapes
Invalid blob_storage_write_version: 
properties
format_version
transform_params
numerical_parameters
numerical_properties
configurations
analyses
share_weights_from_layer_named
layer_io not found for '
blob_biases
blob_shuffled_weights
blob_weights
blob_weights_f16
quantization_lut_weights_blob
quantization_lut_blob
quantization_ranges_blob
blob_batchnorm_params
constant_blob
weights
Invalid source layer %s
layers
storage
Can't find blob id 
Error reading blob id 
.espresso.weights
internal image library not available
load_network_layers_and_exit does not support binserializer.
espresso network does not end in .espresso.net
Could not create filestream from json.
metal_flushes
Missing weights path %s
Legacy metal engine Deprecated. It will removed soon
true
Load: unable to find implementation of class
 platform=
meta_convolution
Unsupported weights format
has_batch_norm
innerproduct_layer_quantized
Unmaintained layer
multi_head
skip_script_setup
per_network_configuration
Cannot find key: 
 idx=
Possibly no valid devices found
Invalid shape length cannot be > 5!
No global with name %s
global already exists: %s
variables and gradients don't match
verbose
no_opt
no_optimization
convert_weights_to_fp16
quantize_conv_weights_u8
quantize_fc_weights_u8
quantize_min_psnr
quantize_u8_allow_asymmetric
min_num_params_for_quant
custom_optimizations
EspressoWrap__Net__forward_n_times
quant_relax_factor
ane_a0_mode_no_mixed_precision
hx_compatibility
no_fuse_transform_params
dont_merge_stats_elementwise
dont_merge_stats_concat
discard_original_weights
quant_stats_sigma
minmax_momentum
quant_stats_sigma_per_blob
scale_search_strategy_per_blob
skip_quantization_for_blobs
mean
only accumulation_type == mean is supported
Null file pointer
sample%d
v9_wg_transform4_in_%@_%@
Missing batch_meanvar_buffer
v9_wg_transform4_out_%@_%@
bias buffer too small: 
WG_TX_IN,
WG_TX_OUT,
v9_elementwise_add
v9_elementwise_addc
v9_elementwise_mulc
v9_concat_
Concat: inconsistent shape
v9_concat_2in_3ch
v9_upsample_tex_nearest
v9_upsample_nearest
v9_batchnorm_training_kernel_tex8
v9_batchnorm_training_kernel
_inference
v9_instancenorm_inference_kernel_tex8
v9_instancenorm_inference_kernel
v9_batchnorm_inference_kernel
v9_pool
v9_pool_buff
Stride changed between invokations of inner product.
Invalid alignment in inner product.
v9_inner_product_kernel_width_aligned_16
v9_inner_product_kernel_width_aligned_8
v9_inner_product_kernel_generic
v9_softmax_4
v9_flatten_nchw
v9_flatten_nhwc
v9_activation_relu
v9_activation_none
v9_activation_leaky_relu
v9_activation_tanh
v9_general_padding_8
v9_general_padding_4
LRN with size!=(3,5,7) not implemented
v9_lrn_anysize_4
image2image_noise_f
espresso.no_mh
multi_head_merge_group_prefixes
multi_head_always_compute_outputs
Cannot find output %s
mh_control@
_end
_builtin
Inconsistent status
_conv_group
inception_
_fused
not implemented!
Invalid kernel: use fold_batchnorm first
fold_transform_params: Only available for VALID convolutions
blob shape not found: 
Fold concat: layer not supported! 
__tx__smooth
_cpu
is_memory_tight
Ti,V_is_memory_tight
%s error %lld:%s in %s @ %s:%d
CVML_status espresso_vision_compute_batch(EspressoNetwork *__strong, EspressoContext *__strong, int, int, const vImage_Buffer *, int, const int, float *, const VimageParams *, bool)
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Sim/CVML_Espresso-235/Espresso/Source/VisionObjCHelper/EspressoVisionMore.mm
EspressoVisionBlob espresso_vision_classify_descriptor_handler(EspressoNetwork *__strong, EspressoVisionBlob)
NSData *espresso_vision_classify_descriptor_handler_nsdata(EspressoNetwork *__strong, NSData *__strong)
/tmp/
hidden_state
input
/new_input.espresso.net
/tmp.espresso.net
validation_failed after splitting inner product
/pre_loop.espresso.net
validation_failed after split to slice
/loop_net.espresso.net
unroll_loop
/unrolled_net.espresso.net
unrolled
validation_failed after loop unroll
find_shared_weights
ESPRESSO_PASS_WAVERNN_NORANDOM
EnableSingleChannelEWOpCopyRemoval,EnableAggressiveTensorCaching
anec_flags
hint_no_mutable_weights
experimental.ane.skip_network_transform_pre_allocation
experimental.ane.use_high_precision_activations
coarse_bit_scaled
fine_bit_scaled
coarse_bit_scaled_concat
out_coarse_bit_scaled
fine_bit_scaled_concat
out_fine_bit_scaled
hidden_state_out
out_hidden_state
output_new_hidden
in_fine_bit_scaled
in_coarse_bit_scaled
initial_inner_product_to_add: i=%d start_ch=%d nB=%d nC=%d
__tmp_
__add
consumer k=%s consumer_of_constant=%zu ilayer=%zu
%s %d
Cannot insert inner_product kernel
input_concat
O2__rand_v
O4__rand_v
gumbel_noise_2
gumbel_noise_4
Input inner product not found
ESPRESSO_N_ITERS
max_iter
loop
loop_cond
loop_if
O2_rand_sliced
O2__rand
O4_rand_sliced
O4__rand
i_inc
loop_if_jump
loop_if_end
__rand
__plus_rand
__argmax
v16@?0^{single_match_state<Espresso::generic_gumbel_max_kernel>={shared_ptr<Espresso::generic_gumbel_max_kernel>=^{generic_gumbel_max_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}i^{net}}8
make_shape_from_2d_to_4d
%s: slice %d
__slice_
v16@?0^{single_match_state<Espresso::generic_split_kernel>={shared_ptr<Espresso::generic_split_kernel>=^{generic_split_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}i^{net}}8
%s rank=%d (%d %d %d %d)
v16@?0^{single_match_state<Espresso::generic_slice_kernel>={shared_ptr<Espresso::generic_slice_kernel>=^{generic_slice_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}i^{net}}8
v16@?0^{single_match_state<Espresso::generic_load_constant_kernel>={shared_ptr<Espresso::generic_load_constant_kernel>=^{generic_load_constant_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}i^{net}}8
blob missing: %s
[Espresso::net_bench] blob: %s
err: %.4e
psnr: %.2f
maxreldiff=%.2f
avg1: %.4e avgr: %.4e
TODO Error aliasing %s %d
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Sim/CVML_Espresso-235/AltEngines/Spectre/V9/v9_blob_container.mm
Error creating texture 
v9_host_io_float_to_half
v9_host_io_half_to_float
load_
store_
init_
gradient not implemented for layer 
 of type 
 at index 
DummyMPSEngine
DummyBNNS
IREngine
DummyMPSBuffersEngine
QUANT_SIM
post scale dim != 1 or channel size
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Sim/CVML_Espresso-235/AltEngines/ANESimEngine/QuantSimEngine.mm
ane_bias
ane_acc_bias_shift
I/O error
Binserializer error 
Align error
T{shared_ptr<Espresso::net>=^{net}^{__shared_weak_count}},R,V_net
layers_size
T@"EspressoContext",R
T{shared_ptr<Espresso::abstract_context>=^{abstract_context}^{__shared_weak_count}},R,V_ctx
Ti,R
associated_forward_kernel not configured
Grad of L2 pooling not implemented, %s:%d
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Sim/CVML_Espresso-235/EspressoCore/KernelsCPU_Backward.mm
activation_grad_cpu for activation mode %d is not implemented
softmax_loss_grad_kernel needs 3 inputs: y, label, dy
batchnorm_grad for training && training_instancenorm != MVA_NONE is not supported now
batchnorm_grad for inference mode batchnorm needs batchnorm_coefs as the second input
ESPRESSO_PASS_DEBUG_MODE_LAYERS
batch_size
TI,V_batch_size
Tf,V_lr
lr_decay_epoch
Tf,V_lr_decay_epoch
momentum
Tf,V_momentum
weight_decay
Tf,V_weight_decay
variable index == %d is not implemented
network should have 1 input and 1 output
layer with name %s not found
network
T{shared_ptr<Espresso::net>=^{net}^{__shared_weak_count}},V_network
all_variables
T@"NSMutableArray",&,V_all_variables
T{shared_ptr<Espresso::gradient_builder>=^{gradient_builder}^{__shared_weak_count}},V_gb
label
input_size
Ti,V_input_size
hidden_size
Ti,V_hidden_size
output_size
Ti,V_output_size
model
T@"ETModelDef",W,N,V_model
TQ,N,V_kind
T@"NSString",&,N,V_name
layerName
T@"NSString",&,N,V_layerName
initializationMode
TQ,V_initializationMode
initializationAlpha
Tf,V_initializationAlpha
initializationBeta
Tf,V_initializationBeta
v48@?0{vImage_Buffer=^vQQQ}8@"NSString"40
/System/Library/Frameworks/Vision.framework/Versions/A/Resources/scene-descriptor.bin:apple_scenes
ESPRESSO_ROOT
/espresso_test_data/EspressoTrainTestData/networks/inception_v3_keras1/arch.json.espresso.net
rotation_range
Tf,V_rotation_range
horizontal_flip
Tf,V_horizontal_flip
zoom_range
Tf,V_zoom_range
shear_range
Tf,V_shear_range
contrast_range
Tf,V_contrast_range
brightness_range
Tf,V_brightness_range
nAugmentations
Ti,V_nAugmentations
doBatchnormTuning
Ti,V_doBatchnormTuning
descriptors_mem_cache_size
TQ,V_descriptors_mem_cache_size
descriptors_file_cache_size
TQ,V_descriptors_file_cache_size
Error with image folder %@
jpeg
imagesDir
T@"NSString",&,N,V_imagesDir
folderToImages
T@"NSMutableDictionary",&,N,V_folderToImages
imageFileNames
T@"NSArray",&,N,V_imageFileNames
classNames
T@"NSMutableArray",&,N,V_classNames
pathToClassIndex
T@"NSMutableDictionary",&,N,V_pathToClassIndex
numberOfClasses
Ti,V_numberOfClasses
balanceClassesForTraining
TB,V_balanceClassesForTraining
Index of %s out of range %d
only support blob whose n dimension == batch size or 1
------------------------------------------
Size of et_data_source is null
Layer %s for variable %s cannot be found
ET initialization method %@ not imeplemented
input_blob: 
, batch_size: 
label blob of name %s already exists with inconsistant shape
prediction
ET loss %@ not imeplemented
learning_rate
/tmp/descriptors/train/
Loss: %.4e (%.4e) (%zu/%d/%zu)
%zu epochs in: %.3f s
losses
/tmp/descriptors/test/
T@"ETModelDef",&,N,V_model
T@"ETOptimizerDef",&,N,V_optimizer
extractor
T@"ETImageDescriptorExtractor",&,N,V_extractor
dumpData
TB,N,V_dumpData
class_names
T@"NSArray",V_class_names
TQ,V_mode
loss_name
T@"NSString",&,V_loss_name
output_name
T@"NSString",&,V_output_name
label_name
T@"NSString",&,V_label_name
label_shape
T@"NSArray",&,V_label_shape
custom_network_path
T@"NSString",&,V_custom_network_path
[uniform] n=%zu %f %f
[xavier] fan_in=%f %f %f
weights not set!
biases not set!
max number of threadgroups 
w texture not created
Not implemented/deprecated
%d:%d_%d_
v9_dequantize_range
v9_dequantize_range_nkfirst
tot parameters % 4 == 0 for quantized conv
_weights_type
_image_type
_tex_mode
_accum_mode
_accum_bits
v9_conv
Invalid call
!!! you should not read this !!!
the hash is already used in the file
memory allocation error
invalid blob ID
invalid data type
undexpected null pointer
internal error
not implemented error
iterative_grow can only be used with b.n_samples==1
_bnrenorm_tmp
Inconsistent state: no inputs to BN
%s %d - %f (%f) %f (%f)
/tmp/bn_
delta_moving_average: min=%.4e max=%.4e avg=%.4e
feed_data_source_to_network: empty network array
feed_data_source_to_network: null data source
feed_data_source_to_network: networks have different batch size
Invalid context: memory aliasing optimizations must be disabled (network_allocate_using_reshape_graph_coloring)
Input blob 
 missing from data_source
entries
entries_per_ch
Cannot serialize to JSON. Error: %s
Cannot write to: %s
Cannot load to: %s
Cannot de-serialize from JSON. Error: %s
min_val
max_val
stddev
mean_sq
n_samples
/grad@
at least one input needed for softmax
softmax loss gradient: invalid number of output grad: %zu != 1
softmax loss gradient: invalid number of inputs: %zu != 2
softmax gradient with is_log_softmax
/mul
/reduce
/sub
To compute cross entropy, softmax kernel needs 2 inputs
in order to take gradient of a training mode batchnorm layer, 3 inputs (x, gamma, beta) are needed
in order to take gradient of a inference mode batchnorm layer, 2 inputs (x, batchnorm_corf) are needed
It's invalid to take gradient wrt batchnorm coefficient of inference mode batchnorm
inference mode batchnorm has at most 2 inputs
Shape mismatch: n 
Input tensor rank to conv3d must be 5
No input given to activation layer.
Activation layer does not produce any outputs.
Invalid configuration : Global 3d pooling with non-zero padding.
Unsupported top shape style.
No input given to pooling layer.
generic_upsample_kernel: fractional scaling factor not supported in the nearest neighbor mode
generic_upsample_kernel: fractional scaling factor cannot be used in legacy mode
generic_upsample_kernel: fractional scaling factor is too small, output shape is 0
generic_split_kernel: Number of top blobs in split kernel does not evenly divide n axis
generic_split_kernel: Number of top blobs (%d) in split kernel does not evenly divide width axis (%d, %d, %d, %d).
generic_split_kernel: Number of top blobs in split kernel does not evenly divide channels axis.
generic_pool_grad_kernel: need the input blob of corresponding pool kernel as the second input to compute the top shape
No input given to elementwise layer.
elementwise op 
:sign
:cos
:sin
elementwise if
grad of elementwise if with broadcast
:true
:not
:false
elementwise: inputs must have same rank as output
elementwise min/max
grad of elementwise min/max with alpha != 1 or beta != 0
grad of elementwise min/max with broadcast
:greater
:less
elementwise div
elementwise subtract
/pow
Backward not supported for elementwise operation %d
Unexpected null blobs
Incompatible operands
Invalid dst shape %d negatives
Mismatch between input rank & target rank %d %d
generic_reshape_kernel: Invalid bottom shape (%s) for reshape to (%s)
generic_reshape_kernel: Invalid bottom shape (%d %d %d %d %d) for reshape to (%d %d %d %d %d)
Invalid argument
reshape gradient for dynamic_shape is not supported
Invalid rank and axis pair %d %zu
_reshaped
_reshape
Unsupported flatten param
W_embedding_in
b_embedding_in
W_embedding_out
b_embedding_out
W_embedding_in_write
b_embedding_in_write
W_embedding_out_tree
b_embedding_out_tree
label_embedding_out_tree
Unexpected input batch_n 
Unexpected input size w=
input_embedding_size must be > 0 in seq2seq mode
Not impl
argmax
x_p_tmp
ifog
generic_crop_and_resize_kernel: requires either one or two inputs
generic_crop_and_resize_kernel: RoI input's batch dimension must be 1. Instead it is %d.
generic_crop_and_resize_kernel: RoI input's height dimension must be 1. Instead it is %d.
generic_crop_and_resize_kernel: RoI input's width dimension must be 1. Instead it is %d.
generic_crop_and_resize_kernel: RoI input's channel dimension must be either 4 or 5. Instead it is %d.
generic_patch_extractor_kernel: requires at least one input
generic_patch_extractor_kernel: sparse mode requires two inputs
generic_patch_extractor_kernel: invalid axis=
get_homography_from_4_source_points not implemented
generic_patch_extractor_kernel: invalid dense_stride_x
generic_patch_extractor_kernel: invalid dense_stride_y
generic_spatial_transformer_kernel: requires two inputs
generic_spatial_transformer_kernel: invalid axis=%d
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Sim/CVML_Espresso-235/EspressoCore/KernelInterfaces.mm
Invalid block_size 
Shape error b.k=
Zero shape error
Invalid axis 
Invalid start 
Unsupported slice mode
Invalid slice end=
 start=
 dim=
 dim_orig=
@container
l2 normalize
Bcast shape error 1 != w: %d
Bcast shape error 1 != h: %d
Bcast shape error 1 != k: %d
Bcast shape error 1 != n: %d
Bcast shape error 1 != seq: %d
matrix_band_part takes exactly one input blob.
Rank of the input must be atleast 2 for matrix_band_part
Only 2d matrices are supported by matrix_band_part
/broadcasted
reduce_grad with mode other than REDUCE_MODE_SUM and REDUCE_MODE_AVG is not implemented
generic_squeeze_kernel: one input required
Invalid axis %d for rank %zu
Cannot squeeze a dimension whose value is not 1: shape[%d]=%d
All the values in the 'axes' parameter of squeeze kernel must be unique
All the values in the 'axes' parameter of expand_dims kernel must be unique
generic_load_constant_kernel must have a blob set
generic_load_constant_kernel wrong size
not a load_constant kernel
Invalid configuration
Invalid configuration dst=
 src=
do_scale must be true to backprop dropout op
final
No input given to transpose layer.
Qscale
Qbias
Qrow_sums
biases
Invalid axis argument in topk_kernel_cpu.
generic_general_concat_kernel: axis out of bounds
axis %d not implemented
constant_pad_kernel: values in pads cannot be both positive when 'pad_to_given_size_mode' flag is set.
generic_batch_matmul_kernel: two inputs required
generic_batch_matmul_kernel: not implemented for 4D+ tensors
generic_batch_matmul_kernel: seq dimensions do not match
generic_batch_matmul_kernel: not compatible for multiplication
:init
Failed to create load_constant kernel to host gradient of array_gather
generic_multinomial_kernel: one input blob required
generic_gumbel_max_kernel: atleast one input blob required
generic_gumbel_max_kernel: random uniform input (%d, %d, %d, %d, %d) should have the shape (%d, %d, %d)
generic_gumbel_max_kernel: random uniform input (%d, %d, %d) doesn't match logits (%d, %d) batch size
generic_gumbel_max_kernel: random uniform input (%d, %d, %d) doesn't have required samples i.e. %d != %d
generic_gumbel_max_kernel: random uniform input (%d, %d, %d) doesn't match logits (%d, %d) class size
Unrecognized weights in generic transplant kernel.
generic_transplant_kernel: expected 2 bottom blobs, got %d
generic_general_slice_kernel: atleast one bottom blob required
generic_sliding_windows_kernel: atleast one bottom blob required
generic_reverse_seq_kernel: atleast two bottom blobs required
gather_nd_kernel: two inputs required
gather_nd_kernel: In TF_GATHER_ND mode, invalid indices. indices.shape[-1] <= params.rank
gather_nd_kernel: In TF_GATHER mode, Invalid value of the argument 'axis'.
gather_nd_kernel: In TORCH_GATHER mode, Invalid value of the argument 'axis'.
gather_nd_kernel: In TORCH_GATHER mode, inputs should have the same rank.
gather_nd_kernel: In TORCH_GATHER mode, Invalid input shapes. Shapes can only differ in axis dimension.
gather_nd_kernel: Invalid MODE
scatter_nd_kernel: three inputs required
scatter_nd_kernel: In TF_SCATTER_ND mode, invalid indices. indices.shape[-1] <= params.rank
scatter_nd_kernel: In TF_SCATTER_ND mode, rank of indices tensor needs to be >= 2.
scatter_nd_kernel: In TF_SCATTER_ND mode, invalid shape of UPDATES tensor.
scatter_nd_kernel: In TF_SCATTER mode, Invalid value of the argument 'axis'.
scatter_nd_kernel: In TF_SCATTER mode, invalid shape of UPDATES tensor.
scatter_nd_kernel: In TORCH_SCATTER mode, Invalid value of the argument 'axis'.
scatter_nd_kernel: In TORCH_SCATTER mode, inputs should have the same rank.
scatter_nd_kernel: In TORCH_SCATTER mode, Invalid input shapes. For REF and INDICES tensor, shapes can only differ in axis dimension.
scatter_nd_kernel: In TORCH_SCATTER mode, Invalid input shapes. INDICES and UPDATES tensor should have the same shape.
scatter_nd_kernel: Invalid MODE
generic_split_nd_kernel: atleast one bottom blob required
generic_split_nd_kernel: Invalid value of the argument 'axis'.
non_maximum_suppression_kernel: must have at least 2 inputs.
non_maximum_suppression_kernel: first two inputs must have rank 3.
non_maximum_suppression_kernel: invalid input shape.
Invalid enum
invalid value
W_x_8bit
W_x_int8
W_8bit
W_h_8bit
W_h_int8
_Qbias
_Qrow_sums
_Qscale
W_p_8bit
W_p_int8
Invalid cell mode 
Invalid value 
_quant_input
ifog_h
generic_rnn_arch_kernel_impl: LSTM weights not set
weights not set
GRU Not implemented
Mismatching size w:
Mismatching size h:
Mismatching size n:
Mismatching size seq:
Unsupported number of inputs
generic_bahdanau_attention_kernel: Needs 3 bottom blobs
generic_self_attention_kernel: Needs 3 bottom blobs
%s should have exactly %d %s%s
output
Cannot broadcast blobs
:broadcasted
no_op
%s needs at least 2 inputs for gradients, got %zu
fused_
_grad
_weights_grad
has_data_grad is false
has_weights_grad is false
has_bias_grad is false
cached
T@"EspressoMetalKernelsCache",W,V_cached
v24@?0@"<MTLSharedEvent>"8Q16
sync_point not allowed without command queue
set_priority not allowed without command queue
Failed to create new command queue
Low priority not supported
Espresso: Not a metal batch
v16@?0@"<MTLCommandBuffer>"8
Can't find metal device
Espresso: can't create metal command queue
Metal device not found.
%@; code=%d
Unspecified metal error
/updated_opcode_
/updated
write/
step_global
optimizer_builder can be created only for networks on IR platform
/neg
sgd_step/
/momentum
/decayed
/step
sgd_update/
sgd_optimizer
/res
/scale
/variance
/squered
/bias_correction
/rsqrt
/adam_step
adam_update/
/var
adam_optimizer
v9_depthwise_kernel_dumb
v9_depthwise_kernel_multiplier1_3x3filter_shuffle_load_by8channels
v9_depthwise_kernel_multiplier1_by8channels
Axis not supported
Only reduce on single axis is supported
Invalid axis
[matrix_vector_mult_batched] Mismatch 
GRU not implemented
image_buffers
T{map<std::__1::basic_string<char>, vImage_Buffer, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, vImage_Buffer> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, vImage_Buffer>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, vImage_Buffer>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, vImage_Buffer> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, vImage_Buffer>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, vImage_Buffer>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}},V_image_buffers
float_buffers
T{map<std::__1::basic_string<char>, float_buffer_t, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, float_buffer_t> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, float_buffer_t>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float_buffer_t>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, float_buffer_t> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, float_buffer_t>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float_buffer_t>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}},V_float_buffers
channels need to be 1, 3, or 4 but got %lu
network_wants_bgr
TB,R,N,V_network_wants_bgr
bias_r
Tf,R,N,V_bias_r
bias_g
Tf,R,N,V_bias_g
bias_b
Tf,R,N,V_bias_b
Tf,R,N,V_scale
channels
TQ,R,N,V_channels
height
TQ,R,N,V_height
width
TQ,R,N,V_width
Cannot load image with path %s
Ready not called!
Data Inconsistency
Empty blobs
Inconsistent dimensions
Can't load 
Can't load JSON 
chunks
chunk size mismatch
shuffle chunks! %d
path=%s
shuffle %d!
[loaded chunk] id=%zu/%zu (perm=%zu chunks=%zu)
Xshuffle! %d
size mismatch
[image_async_data_source] %s (%d %d %d)
category: %s
[image_async_data_source] images=%zu 0=%s
[image_async_data_source] shuffling
[multikey_data_source] loading '%s'
shuffle_seed
type %@ %@
type not supported 
MXNet Image Binary Reader not found at load time
load_data_source: Loading single image not implemented
load_data_source: unrecognized type: 
Functionality disabled in production mode
com.apple.espresso.async_data_source.queued_samples_lock
com.apple.espresso.async_data_source.loading_queue
Memory allocation error %d: %zu bytes
com.apple.espresso.memdbgq
[mem] tot=%.3fM max=%.3f
inner_product_quantized
dequantize_range_f32
dequantize_range_f16
convolution_kernel_cpu: Null top blob
convolution_kernel_cpu: Null bottom blob
activation %d fused into convolution is not supported
Integer multiplication overflow between size %lu and size %d
dataStorage
T{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}},V_dataStorage
blobShapes
T{unordered_map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}},V_blobShapes
number_of_data_points
TQ,V_number_of_data_points
batchSize
TQ,V_batchSize
nonBatchBlobNames
T{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}},V_nonBatchBlobNames
Unsupported version 
; likely because weights file is corrupt
Unexpected end of weight file
Error loading file: 
mmap error: 
Can't open for writing: 
DOWG
v16@?0^{fuse_vertical_state<Espresso::V9Engine::v9_general_padding_kernel, Espresso::V9Engine::v9_conv_kernel>={shared_ptr<Espresso::V9Engine::v9_general_padding_kernel>=^{v9_general_padding_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::V9Engine::v9_conv_kernel>=^{v9_conv_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}ii^{net}}8
v16@?0^{fuse_vertical_state<Espresso::V9Engine::v9_general_padding_kernel, Espresso::V9Engine::v9_depthwise_kernel>={shared_ptr<Espresso::V9Engine::v9_general_padding_kernel>=^{v9_general_padding_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::V9Engine::v9_depthwise_kernel>=^{v9_depthwise_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}ii^{net}}8
v16@?0^{fuse_vertical_state<Espresso::V9Engine::v9_upsample_kernel, Espresso::V9Engine::v9_conv_kernel>={shared_ptr<Espresso::V9Engine::v9_upsample_kernel>=^{v9_upsample_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::V9Engine::v9_conv_kernel>=^{v9_conv_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}ii^{net}}8
v16@?0^{fuse_vertical_state<Espresso::V9Engine::v9_conv_kernel, Espresso::V9Engine::v9_activation_kernel>={shared_ptr<Espresso::V9Engine::v9_conv_kernel>=^{v9_conv_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::V9Engine::v9_activation_kernel>=^{v9_activation_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}ii^{net}}8
B16@?0^{v9_batchnorm_kernel=^^?{shared_ptr<Espresso::abstract_context>=^{abstract_context}^{__shared_weak_count}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}iiiii{map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > > > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > >, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{shared_ptr<Espresso::SerDes::generic_serdes_object>=^{generic_serdes_object}^{__shared_weak_count}}{unordered_map<std::__1::basic_string<char>, int, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, int> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> > > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{batchnorm_params=iiiffBBiiifIIIIfiif}{shared_ptr<Espresso::quantized_weights_helper>=^{quantized_weights_helper}^{__shared_weak_count}}{v9_bn_params=iiiiiiiiifiif}@@@@@f{shared_ptr<Espresso::blob<float, 1> >=^{blob<float, 1>}^{__shared_weak_count}}B}8
_pre_instancenorm
WGWIN
_1x1
v16@?0^{single_match_state<Espresso::V9Engine::v9_conv_kernel>={shared_ptr<Espresso::V9Engine::v9_conv_kernel>=^{v9_conv_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}i^{net}}8
v16@?0^{fuse_vertical_state<Espresso::V9Engine::v9_batchnorm_kernel, Espresso::V9Engine::v9_wg_transform_in_kernel>={shared_ptr<Espresso::V9Engine::v9_batchnorm_kernel>=^{v9_batchnorm_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::V9Engine::v9_wg_transform_in_kernel>=^{v9_wg_transform_in_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}ii^{net}}8
convolution_3x3_tex3d_f32_nopad
convolution_5x5_tex3d_f32_nopad
convolution_7x7_tex3d_f32_nopad
convolution_11x11_tex3d_f32_nopad
convolution_1x1_tex3d_f32_nopad
convolution_2x2_tex3d_f32_nopad
convolution_4x4_tex3d_f32_nopad
convolution_8x8_tex3d_f32_nopad
convolution_9x9_tex3d_f32_nopad
convolution_3x3_tex3d_f32
convolution_5x5_tex3d_f32
convolution_7x7_tex3d_f32
convolution_11x11_tex3d_f32
convolution_1x1_tex3d_f32
convolution_2x2_tex3d_f32
convolution_4x4_tex3d_f32
convolution_8x8_tex3d_f32
convolution_9x9_tex3d_f32
_groups
cool_%@
_ncc
morechan_t1x2%@xy_%@
morechan_t1x2%@y_%@
morechan_t1x2%@x_%@
morechan_t2x2
morechan_t1x2
fourchan_
%@%@xy_%@
%@%@y_%@
%@%@x_%@
shaders disabled
use_4chan
kernel_elements_per_thread
block_size_x
block_size_y
use_manypar
cost
use_smem
_nopad
err(4z)
err(3z)
morechan_t1x1%@%@_%@
morechan_t1x2%@%@_%@
morechan_t2x2%@%@_%@
morechan_t2x3%@%@_%@
err(ket8)
err(ket9)
load_wisdom_parameterset: kernel name was not reset: 
quantized_lut_
quantized_range8bit_
moreparallelism_
kernel disabled
half
none
validation
Testing over %zu samples (%zu batches)
ValBatch %d/%d (%d)
Data 
 not found in dset
%d: %d %d %d %d - %d %d %d %d
null prob_h
gt: %d pred: [%d %.2f %.2e] [%d %d %d %d]
gt: %d pred: [%d %.2f] [%d]
%d;%d;%f;%f;%f
Top 1: %.4f; Top 5: %.4f Count: %d
PR P=%.4f R=%.4f F1=%.4f Count: %d (tp=%d fp=%d fn=%d tn=%d)
%4d | 
%4d 
fn:%4d
prec:
%.3f
recall:
%.3f
%.3f
top1
top5
count
time
acc_
EspressoValidation
date
aliased blob %s has different shape from blob aliased to %s
force_aliased blob %d is not colored
code %d is not a valid graph coloring method
string property pass_graph_coloring must be a string of integer. Got %s
pass_graph_coloring
options are not set for pass_graph_coloring
_argv
_shape_argv
_dim_argv
loopkit_func_t %d
loopkit func of type %d fail to evaluate. exit code = %d
compute_path_to_lk_type for compute path %s
v16@?0^{single_match_state<Espresso::generic_pool_kernel>={shared_ptr<Espresso::generic_pool_kernel>=^{generic_pool_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}i^{net}}8
v16@?0^{single_match_state<Espresso::generic_elementwise_kernel>={shared_ptr<Espresso::generic_elementwise_kernel>=^{generic_elementwise_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}i^{net}}8
start
Ti,R,N,V_size
Ti,R,N,V_start
stepSize
Ti,R,N,V_stepSize
_per_ch_qscale
_per_ch_qbias
_lut_to_float32
Mismatched sequence lengths in sequence concat.
alpha
beta
nonlinearity_type
nonlinearity_alpha
nonlinearity_beta
quantization_mode
quantization_scale_x
quantization_scale_x_reverse
quantization_scale_h
quantization_scale_h_reverse
quantization_simple_mode
internal_nonlinearity_type
internal_nonlinearity_alpha
internal_nonlinearity_beta
lstm_forget_bias
lstm_has_peepholes
encoder_output_sequence
arch
encoder_bidirectional_mode
internal_nonlinearity_second_type
internal_nonlinearity_second_alpha
internal_nonlinearity_second_beta
nonlinearity_bidir_type
nonlinearity_bidir_alpha
nonlinearity_bidir_beta
internal_nonlinearity_bidir_type
internal_nonlinearity_bidir_alpha
internal_nonlinearity_bidir_beta
internal_nonlinearity_second_bidir_type
internal_nonlinearity_second_bidir_alpha
internal_nonlinearity_second_bidir_beta
bias_vector_flag
forget_bias
cell_clip_threshold
coupled_input_forget
max_batch_size
nd_mode
dynamic_length
override_eng
simple_concat
n_repetitions
blob_container_array_put: Invalid value of rank %d
blob_container_array_scatter: Invalid number of value blobs %ld != %ld
blob_container_array_get: Blob of shape (%d, %d, %d, %d, %d) %d cannot hold gathered blob of shape (%d, %d, %d, %d, %d) %d
blob_container_array_gather: Blob shape not compatible for gathering blob array
wisdom_path
styles
do_blend
blend_alpha
grayscale_i0
grayscale_i1
noise_strength
noise_speed
color_transfer_mode
width_fast
height_fast
width_capture
height_capture
width_miniature
height_miniature
width_fullscreen
height_fullscreen
width_hd
height_hd
dyn_noise
high_quality_scaling
preprocessing_bias_b
preprocessing_bias_g
preprocessing_bias_r
preprocessing_scale
preprocessing_old_frame_bias_scale
Failed to lock pixel buffer
Failed to find preprocessing parameters for image, must specify: scale, R,G,B biases, and whether the network's input is expecting BGR color interleaving.
is_network_bgr
Failed to find one or more of the following pre-processing params by key (each is required): scale, bias_r, bias_g, bias_b, network_wants_bgr.
CVPixelBuffer provided must be of an interleaved pixel format (must not be planar)
CVPixelBuffer must be one of: kCVPixelFormatType_OneComponent8, kCVPixelFormatType_32ARGB, kCVPixelFormatType_32BGRA
    
Tensor w/ data pointer: %p: data: %@. 
Shape: %@, Strides: %@,Contiguous Size: %lu
imageBuffer
T{vImage_Buffer=^vQQQ},V_imageBuffer
allocatedImageData
T{vector<std::__1::shared_ptr<unsigned char>, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >=^{shared_ptr<unsigned char>}^{shared_ptr<unsigned char>}{__compressed_pair<std::__1::shared_ptr<unsigned char> *, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >=^{shared_ptr<unsigned char>}}},V_allocatedImageData
float_buffer
T{float_buffer_t=^fQB},V_float_buffer
blob
T{shared_ptr<Espresso::blob<float, 4> >=^{blob<float, 4>}^{__shared_weak_count}},V_blob
dataPointer
T^v,N,V_dataPointer
dataArray
T@"NSArray",&,N,V_dataArray
TQ,N,V_type
T@"NSArray",&,N,V_shape
strides
T@"NSArray",&,N,V_strides
maxNumberOfElements
T@"NSNumber",&,N,V_maxNumberOfElements
Seq error
rnn_set_seq
Program has already been loaded
/code.nitroir
Invalid stage: %d, allowed=%d,%d
Invalid stage: %d, allowed=%d
Invalid storage_type %d
The network did not produce an output named %s
Unidentified type of output.
ESPRESSO_BIND_PTR_USE_EXTERNAL must be used for dynamic networks
ESPRESSO_BIND_PTR_DYNAMIC_OUTPUT must be used for dynamic networks
Check failed (
Nitro/EspressoNitro/src/numerics/ndarray.hpp
last_index() + m_start <= elements.size()
operator()
LOG_FATAL encountered
same_shape(other)
Assertion failed: (
int(nc.m_primitive)
int(primitive_type_to_enum<T>::value)
Nitro/EspressoNitro/src/numerics/ndarray_detail.hpp
false
[sequential_builder::add_kernel] %s %s dbg: %s
[sequential_builder::add_kernel_dbg] %s %s dbg: %s
shape of input %s missed
[sequential_builder::add_layer_from_network] %s -> %s
op_of_type_
constant_like_op/
constant_op/
/reduce_(
placeholder/
shape of blob %s is missing
post_compile
_unroll_
sorted
LSTM_ANE
LSTM_GPU
__conv_transpose
W_X_batch
check
add_gates
gate_tmp_
gate_
act_
mul_fc
act__f
mul_ig
act__i
act__g
add_c
tanh_c
mul_otanhc
act__o
inext
jnext
jump
end_if
end_loop
__conv_reshape
__concat
pre-setup
ane_compiler_batch
__rev__
util_chain_concats
v16@?0^{single_match_state<Espresso::generic_fill_kernel>={shared_ptr<Espresso::generic_fill_kernel>=^{generic_fill_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}i^{net}}8
make_shape_from_4d_to_conv
__unroll_
Mismatch between lengths of shape and strides
Invalid multi_index
Invalid shapes for broadcasting
generic_general_slice: Mismatch between the input rank and the number of elements in begin_ids
generic_general_slice: Mismatch between the input rank and the number of elements in end_ids
generic_general_slice: Mismatch between the input rank and the number of elements in begin_masks
generic_general_slice: Mismatch between the input rank and the number of elements in end_masks
generic_general_slice: Mismatch between the input rank and the number of elements in squeeze_masks
generic_general_slice: Mismatch between the input rank and the number of elements in strides
generic_general_slice: Invalid values %d in begin_ids for input_shape %d
generic_general_slice: Invalid values in end_ids
generic_general_slice: Invalid values in strides
generic_general_slice: Invalid values in arguments (begin_ids, end_ids, strides)
general_slice_kernel_cpu: Invalid values in begin_ids
general_slice_kernel_cpu: Invalid values in end_ids
general_slice_kernel_cpu: Invalid values in arguments (begin_ids, end_ids, strides)
Invalid shape of first argument.
Invalid shape of second argument.
Invalid rank of output.
Invalid rank of output
Incompatible shapes for matrix multiplication.
Invalid value of the argument 'axis'.
BroadcastTo layer: Invalid target shape.
BroadcastTo layer: Invalid shapes for broadcasting.
Stack_nd layer: Invalid shapes of input tensors.
Stack_nd layer: Invalid rank of output tensor.
Stack_nd layer: Invalid value of the argument 'axis'.
Split layer: Invalid number or size of splits.
Mismatch between ranks of input and output tensors.
Sliding Windows Layer: Mismatch between ranks of input and output tensors.
Sliding Windows Layer: Window size can't be less than 1
Sliding Windows Layer: Step can't be less than 1
Sliding Windows Layer: Invalid value of the argument 'axis'.
Sliding Windows Layer: Window Size can't be larger than the dimension length.
Sliding Windows Layer: Invalid values in arguments (axis, window_size, step)
Reverse_seq Layer: Invalid value of the argument 'batch_axis'.
Reverse_seq Layer: Invalid value of the argument 'seq_axis'.
Reverse_seq Layer: batch_axis: %d should be strictly less than seq_axis: %d
Reverse_seq Layer: seq_lengths should be a vector of length equal to batch dimension of input.
Reverse_seq Layer: each seq_lengths element should be <= sequence dimension of input.
Quantizing FC %s (%d x %d = %.2fk)
dont_quantize
ip: %s
FC_INT8_INT8
 PSNR=%.2f (s %e b %e)
mkdir -p 
dump: %s
Min PSNR=%.2f
W_int16
invalid state
conv: %s
compressing %s (%ld)
channels_per_chunk=%d
maxerr=%e mM=%e %e cmM=%e %e
Channel for chunk %d/%d: %d - %d. C=%d %e - %e
setting ranges %d
[Quant] PSNR %s (%s): %.3f (min=%.3f)
Total size of AUX lut tables/ranges %.4f MB
early exit iter=%d
Skipping quantization for depth-wise convs. workaround for rdr38565288
"Device not found"
"Invalid context"
"Invalid state"
"Invalid argument"
"Invalid blob shape"
"Not implemented"
"Unsupported configuration"
"Memory error"
"I/O error"
"Generic error"
Espresso exception: 
 [Thrown from: 
Cannot do pass_make_ssa without an interpreter
phi_
Conv weights not set 
convolution has fp16 weights; must use fp32 weights for training.
convolution layer is missing weights.
W_uint8
W_int8
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Sim/CVML_Espresso-235/EspressoCore/KernelsCPU.mm
tree_W
tree_b
tree_map_to_index
tree_cluster_end
block_starts
block_cols
sparse_weights_f32
sparse_weights_f16
Unsupported activation fn with quantized weights and lookup
Leaky relu not supported with quant weights
inconsistent state!
missing param: wQscale
missing param: wQbias
missing param: wQrow_sums
missing param: weights_8bit
missing param: weights_int16
FC weights not set
Invalid rank
Mismatching batch size: %zu / %zu
A dynamic quantized inner product layer's activation function should be moved to the folowing dynamic_dequantize layer
experimental_sgemv_float_xint8
Kaldi float in8 sgemv inner product to compile with BNNS
Quantization not supported 
inner product has fp16 weights; must use fp32 weights for training.
inner product layer is missing weights
Blob of wrong type (bottom)
Blob of wrong type (top)
Unknown mode in upsample_kernel_cpu.
elementwise_kernel_cpu: Cannot broadcast [%d, %d, %d, %d, %d] and [%d, %d, %d, %d, %d]
ELEMENTWISE_OPERATION_INTERNAL_MUL_XYKN not implemented
operation %d does not support broadcasting
Blob of wrong type
3 inputs (x, gamma, beta) are needed if training && training_instancenorm == MVA_NONE
3 outputs (y, x_mean, sqrt(x_var + eps) are needed if training && training_instancenorm == MVA_NONE
MVA_L2 not supported
BN: Invalid K dimension %d / %d / %d
batchnorm_coefs is neither provided as a second input nor set as kernel property
:sigma
Not implemented %d
ESPRESSO_DEBUG_FUSED_GRU
activation_kernel_cpu: BNNSFunctionGRUFusedGates call failed
PReLU params not set
Softplus weights not set
Incompatible operands CP
dynamic reshape requires interpreter
Reshape: invalid input blob
Invalid dst shape
reshape mismatching size: %d %d %d %d %d -> %d %d %d %d %d
Reshape: invalid blob configuration
Flatten: invalid blob configuration
Reshape: invalid mode %d
tile_kernel_cpu: dynamic parameters require interpreter
Flatten: invalid mode %d
l2_normalize: invalid blob configuration
Insufficient bottom blobs
broadcast_kernel_cpu: dynamic parameters require interpreter
broadcast_kernel_cpu: invalid rank
broadcast_kernel_cpu: Blob with full 5d shape is required as fill argument
cast_kernel_cpu: mismatching input blobs
cast_kernel_cpu missing mode
Invalid mode
generic_crop_and_resize_kernel: Inconsistent state
generic_crop_and_resize_kernel: crop indices must be of size 4 or 5
generic_crop_and_resize_kernel: output width does not match the kernel target width parameter
generic_crop_and_resize_kernel: output heigth does not match the kernel target height parameter
generic_crop_and_resize_kernel: zero output width
generic_crop_and_resize_kernel: zero output height
generic_crop_and_resize_kernel: zero input width
generic_crop_and_resize_kernel: zero input height
generic_crop_and_resize_kernel: RoI batch id greater than input batch size
generic_crop_and_resize_kernel: Invalid crop index mode
generic_crop_and_resize_kernel: Invalid grid sampling mode
dynamic topk requires interpreter
topk kernel: computed output shape along specified axis is not equal to num_k
Invalid number of bottom blobs
Q_meta
spatial_transformer_kernel_cpu: requires two inputs
Invalid state: blob_f4::ptr image in spatial_transformer_kernel_cpu is null
Invalid state: blob_f4::ptr ocrop in spatial_transformer_kernel_cpu is null
output dimensions ocrop_w, ocrop_h must both be greater than 1 for spatial_transformer_kernel_cpu.
Invalid state: blob_f4::ptr coordinates in spatial_transformer_kernel_cpu is null
Invalid mode argument in spatial_transformer_kernel_cpu.
Copy: mismatching blob count
scatter_kernel_cpu: Invalid index %d into input (%d, %d, %d, %d, %d)
scatter_kernel_cpu: Invalid number of value blobs %ld != %ld
scatter_kernel_cpu: coords.shape[%d] = %d != slice.shape[%d] = %d
scatter_kernel_cpu: Invalid shape of value blob
scatter_kernel_cpu: Invalid number of value blobs %ld < %ld
scatter_kernel_cpu: Invalid shape of input blob
load_random_kernel_cpu: dynamic shape mode not supported without interpreter
Invalid random distribution: %D
v16@?0^{blob<float, 4>=^^?[4i]^fB{shared_ptr<Espresso::blob_storage_root>=^{blob_storage_root}^{__shared_weak_count}}}8
dynamic range requires interpreter
range_kernel_cpu: [%d, %d, %d, %d, %d] != [1, 1, 1, 1, 1]
Rank of the input must be atleast 2 for matrix_band_part_kernel_cpu
Only 2d matrices are supported by matrix_band_part_kernel_cpu
fill_kernel_cpu: dynamic parameters require interpreter
fill_kernel_cpu: invalid rank
Blob with full 5d shape is required as fill argument
batch_matmul_kernel_cpu: Channel mode not available for 4D+ tensors
batch_matmul_kernel_cpu: Sequence dimensions do not match
Not compatible for multiplication
Invalid pad tensor dimensions: %zu for input of rank:%zu
Output tensor rank: %zu is not equal to input rank: %zu
tensor_pad kernel must have atleast two inputs
Invalid pad tensor dimensions: %zu
Invalid index %d into axis of size %d
array_gather does not support indexing into 5D blobs
multinomial requires one input blob
instancenorm_1d_kernel_cpu: missing param wGamma
instancenorm_1d_kernel_cpu: missing param wBeta
instancenorm_1d_kernel_cpu: wGamma (%d) size is less than input blob (%d, %d, %d, %d) size
instancenorm_1d_kernel_cpu: wBeta (%d) size is less than input blob (%d, %d, %d, %d) size
instancenorm_1d_kernel_cpu: inner dimension must have size > 1
gumbel-max requires atleast one input blob
transplant kernel needs two src blobs
transplant kernel produces two dst blobs.
transplant kernel requires batchnorm coefs
transplant_kernel_cpu: weights (shift data) not found.
transplant does not support n > 1 or seq > 1
invalid mode selected for transplant
general_slice_kernel_cpu: atleast one bottom blob required
general_slice_kernel_cpu: dynamic parameters require interpreter
cross_entropy: output should be reduced to a scalar
cross_entropy needs 2 inputs: probability and label as class indices
cross_entropy: only REDUCE_MODE_AVG and REDUCE_MODE_SUM are supported
Invalid number of inputs to adam kernel
lr = %f < 0
eps = %f < 0
beta1 = %f not in [0, 1)
beta2 = %f not in [0, 1)
non_maximum_suppression_kernel: there must be 4 output blobs.
num_boxes_pre_nms should be 0 or greater than max_boxes
gather_nd_kernel_cpu: two inputs required
gather_nd_kernel: In TF_GATHER_ND mode, Invalid index %d into axis of size %d
gather_nd_kernel: In TF_GATHER mode, Invalid index %d into axis of size %d
gather_nd_kernel: In TORCH_GATHER mode, Invalid index %d into axis of size %d
scatter_nd_kernel_cpu: three inputs required.
scatter_nd_kernel: In TF_SCATTER_ND mode, Invalid index %d into axis of size %d
scatter_nd_kernel: Invalid accumulation mode.
scatter_nd_kernel: In TF_SCATTER mode, Invalid index %d into axis of size %d
scatter_nd_kernel: In TORCH_SCATTER mode, Invalid index %d into axis of size %d
dynamic one_hot requires interpreter
one_hot_kernel_cpu: [%d, %d, %d, %d, %d] != [1, 1, 1, 1, 1]
cumsum_kernel_cpu: [%d, %d, %d, %d, %d] != [1, 1, 1, 1, 1]
cumsum_kernel requires 2 input blobs.
Incorrect format size combination: format=%s, nB=%d, nC=%d, nnz=%d
%d %d
axis should be non-negative and smaller than rank of input
inputs' ranks do not match
stride = %d <= 0 is not allowed
invalide input shapes: %s, %s for stride = %d, start = %d, end = %d, axis = %d
input shapes at axis %d != p.axis = %d do not match %d vs %d
static_dequantize_kernel_cpu: no bottom specified
fused_convolution_grad: Layer supposed to be unpacked on CPU engine
fused_inner_product_grad: Layer supposed to be unpacked on CPU engine
Cannot multiply matrices with sizes [%d, %d] and [%d, %d]
unsupported update operation %d
blob to copy has different total dim from required shape
Missing weights
v16@?0Q8
ESPRESSO_CPU_FORCE_CHUNK_SIZE
regularizer_builder can be created only for networks on IR platform
/regularized
factors must have either exactly 1 element or save number of elements as variables
/reg_grad_diff
per_variable_loss needs to be implemented to call add_regularization_loss
variable_gradient_diff needs to be implemented to call modify_gradient
Size of data source is 0
not getting data for tensor '%s' at index %lu
data provider should provide tensor with batch size 1, instead of %d
5d tensor not supported yet
.espresso.bin
.espresso.
test_data
test_data.json.bin
test_data.json
regression_conf.json
Cannot create file: %s
tolerance
tol_relerr
tol_aerr
tol_psnr
data_frames_file
default
tests
Invalid state: network not added
net is null in tracer.
Cannot write file: %s
Invalid state: No frames exists in the trace
ESPRESSO_TUNELOG
[wisdom_trainer2] Tuning %s (%s)
saving %s (tuned=%.2f untuned=%.2f x=%.4f)
tuned= %.2f
untuned= %.2f
speedup= %.4fx
key = %s
Cached %s
%d:%s
%d:error: %s
diff
e=%.4e
sum=%.4f
nans=%.2f (E)
%d,%s,%.2f,%.2f
e=%.2f
%.4f
%.2f
%d:%s
%.4f
%.2f *
Cannot load wisdom
[wisdom_trainer::train] error!
[wisdom::log_parameterset] %s
device_key
optimal_parameters
bench.txt
%d;%d;%s
network_name
layer_id
device_id
version
uploading!
[upload_jsdata] %s resp=%@ err=%@
device
netname
wisdom_string
wisdom_level
time_ms
gflops
error
learningRate
decayRate
beta1
beta2
epsilon
Tq,R,V_type
optimizationParameters
T@"NSDictionary",R,N,V_optimizationParameters
rec file %@ does not exist
cannot initialize rec file %@
cannot allocate memory for labels (%ld bytes)
recFileHandle
T@"NSFileHandle",&,V_recFileHandle
recordHeader
T{_mxnetTools_recordHeader_t_=II},V_recordHeader
imageHeader
T{_mxnetTools_imageHeader_t_=If{_mxnetTools_imageID_t_=[2Q]}},V_imageHeader
currentOffset
TQ,V_currentOffset
labelsPrivate
T@"NSMutableArray",&,V_labelsPrivate
__small
__mean
__ivar
__transplant
__bias
__scale
pass_style_transfer_two_nets: intermediate 0
__tmp
__tmp2
__small__bias
__mul
__small__scale
__lrelu
v16@?0^{single_match_state<Espresso::generic_batchnorm_kernel>={shared_ptr<Espresso::generic_batchnorm_kernel>=^{generic_batchnorm_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}i^{net}}8
pass_style_transfer_two_nets: intermediate 1
v16@?0^{single_match_state<Espresso::generic_general_padding_kernel>={shared_ptr<Espresso::generic_general_padding_kernel>=^{generic_general_padding_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}i^{net}}8
pass_style_transfer_two_nets
ESPRESSO_RESHAPE_TWO_NETS
ESPRESSO_TWO_NETS_SMALL_RES
ESPRESSO_TWO_NETS_LARGE_RES
ESPRESSO_SHIFTS
Found non-batchnorm kernel producing input for transplant kernel. Aborting.
__mul_c
__add_c
fused_relu
fused_tanh
has_biases
has_8bit_weights
do_ncc
n_groups
n_parallel
start_channel_bottom
start_channel_top
total_channel_top
stride_x
stride_y
pad_l
pad_r
pad_t
pad_b
pad_value
pad_mode
pad_fill_mode
leaky_relu_alpha
deconv_out_width
deconv_out_height
dilation_x
dilation_y
low_precision_accumulation
hint_use_winograd_win_size
stride_t
fused_activation_mode
fused_activation_alpha
fused_activation_beta
pad_pad_mode
no_padding
total_pad_w
total_pad_h
stride
avg_or_max
size_x
size_y
average_count_exclude_padding
top_shape_style
force_num_channels
total_channel_bottom
compute_argmax_mask
is_global
size_t
padding
padding_x
padding_y
use_perceptio_version
strict_zero_padding
local_size
is_plain_sigmoid
is_log_softmax
softmax_cross_entropy_loss
reduce_cross_entropy
has_relu
has_tanh
has_prelu
is_lookup
add_to_output
use_raw_buffers
tanh_alpha
tanh_beta
argmax_tree_n_clusters
argmax_tree_n_clusters_keep
sparse_block_size_x
sparse_block_size_y
compute_every
is_lookup_rounds_to_nearest
_rank
force_num_channels_of_first_blob
n_outputs
legacy_cut_mode
axis
scaling_factor_x
scaling_factor_y
align_corners
is_legacy_mode
fractional_scaling_factor_x
fractional_scaling_factor_y
use_fractional_scale_factors
scaling_factor
operation
no_broadcast
is_relu
is_tanh
leaky_alpha
ignore_b
start_fuse_z_0
start_fuse_z_1
start_fuse_z_2
start_fuse_z_3
normalization_mode
nd_rank
naive_backward
training_eps
training_momentum
training_instancenorm
training_subsampling
generate_mean_ivar
regularization_eps
training_mean
training_std
p_reject
seed
reseed_each_launch
do_scale
dst_platform_id
src_platform_id
src_compute_path
dst_compute_path
dst_w
dst_h
dst_k
dst_n
dst_seq
dst_nd_rank
dynamic_shape
rank_preserving_mode
center_mean
bias_a
use_direct_cvpixelbuffer
qspec.ratio_to_float_model
qspec.is_signed
qspec.compute_path
interleave_factor
supported_4cc_formats
rnn_nonlinearity
seq2seq
input_embedding_size
output_embedding_size
input_read_onehot
input_read_symbol
input_read_symbol_onehot
input_max_len
output_max_len
input_stop_symbol
output_start_symbol
output_stop_symbol
beamsearch_width
output_embedding_tree
axis_mode
use_version
nd_axis
pad.l
pad.r
pad.t
pad.b
pad.value
pad.pad_mode
pad.fill_mode
dst_offset_x
dst_offset_y
src_crop_w
src_crop_h
src_offset_x
src_offset_y
axis_w
axis_h
axis_k
axis_n
axis_seq
block_size
reverse
pixel_shuffle
static_size
ndlayers_impl
destination_compute_path
network_filename
gradient_network_filename
target_size_w
target_size_h
dense_start_x
dense_start_y
dense_stride_x
dense_stride_y
dense_size_x
dense_size_y
unnormalized_coordinates
grid_sampling_mode
crop_index_mode
spatial_scale
normalized_crop_indices
position_sensitive
sample_ratio
simple_mode
nRow
nCol
target_layer_condition_true
target_layer_condition_false
cf_stack_depth
w_quantization_scale
target_snetwork
num_k
single_axis_topk
do_bottomk
global_name
array_mode
rank
delete_after_load
only_size
has_enumerate
slice_step
accumulate
simple_scatter
distribution
out_w
out_h
out_k
out_n
out_seq
num_tops
num_lower
num_upper
invert
value
channel_mode
transpose_x
transpose_y
pads_
pad_to_given_size_mode
size_of_axes
axes_
squeeze_all
simple_gather
num_samples
tf_layernorm
biased_std
eps_in_square_root
deterministic
temperature
use_bnns
builtin_name
sarg0
sarg1
sarg2
sarg3
iarg0
iarg1
iarg2
iarg3
farg0
farg1
farg2
farg3
begin_w
begin_h
begin_k
begin_n
begin_seq
begin_mask_w
begin_mask_h
begin_mask_k
begin_mask_n
begin_mask_seq
end_w
end_h
end_k
end_n
end_seq
end_mask_w
end_mask_h
end_mask_k
end_mask_n
end_mask_seq
stride_w
stride_h
stride_k
stride_n
stride_seq
squeeze_mask_w
squeeze_mask_h
squeeze_mask_k
squeeze_mask_n
squeeze_mask_seq
num_splits
begin_
batch_axis
seq_axis
reduce_mode
max_boxes
iou_threshold
score_threshold
per_class_suppression
num_boxes_pre_nms
has_momentum
num_variables
accumulation_mode
depth
on_value
off_value
exclusive
bottom_shapes
top_shapes
kernel_size
win_size
absolute_coordinates
normalized_coordinates
window_x
window_y
encoder_hidden_size
decoder_hidden_size
vdim
num_attn_heads
func_name
custom_dylib_path
num_outputs
input_args_idx
ascending
pooling_mode
pad_front
pad_back
deconv_out_depth
dilation_t
has_data_grad
has_weights_grad
has_bias_grad
32BGRA
OneComponent16Half
OneComponent32Half
AGX_32BGRA
AGX_OneComponent16Half
AGX_OneComponent8
Unsupported pixel format %d
Unsupported pixel format %s
T2D_
TARR_
Device not found in wisdom file
Wisdom file not available (%s)
Could not parse wisdom file (%s): %s
METAL_LOWMEM
float16
float32
float64
BinSerializer error %d:%s in %s @ %s:%d
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Sim/CVML_Espresso-235/Espresso/Source/BinSerializer/Custom_BinSerializer_Core.cpp
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_freadInBytes(FILE *, const char *, bool, void **, size_t *)
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_fwrite(FILE *, const char *, Espresso::BinSerializer::BinSerializer_dataType, const void *, size_t)
async_cache: Failed to create a dispatch queue
async_cache: no blob provided
async block timed out
T@"NSArray",&,V_layerNames
com.apple.espresso.trace
com.apple.espresso.trace.path
%@/pid_%d_plan_%d
Buffer mismatch
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Sim/CVML_Espresso-235/AltEngines/MetalLowmemEngine/MetalLowmemEngine/BlobContainer.mm
TODO skipping copy for sint texture %s %d
_texarray
write_tex2d_4h_unpacked
write_tex2d_4_8norm_unpacked
write_tex2d_4f_unpacked
read_tex2d_4f
read_tex2d_4h
read_tex2d_4_8norm
_unpacked
com.apple.espresso.EspressoMetalKernelsCache
T3D_
/Frameworks/Espresso.framework/default.metallib
/Frameworks/ExternalLibraryWrapper.framework/default.metallib
/Espresso.framework/default.metallib
/Contents/Frameworks/Espresso.framework/Versions/Current/Resources/default.metallib
/Resources/default.metallib
/default.metallib
Espresso: Failed creating a default shader library! GPU mode won't work
espressotrain.metallib
%@%s
>> ERROR: Failed creating a new function w constants %s err=%@ e1=%@!
>> ERROR: Failed creating a compute kernel: %@ %s
>> ERROR: Failed creating a new function %s %@!
>> ERROR: Failed creating a compute kernel: %@ %s %@
m_kernelCache
T@"NSDictionary",&,V_m_kernelCache
kernelPrefix
T@"NSString",&,N,V_kernelPrefix
sgd_update_diff/
store_global does not have exactly one input
start_t
Td,V_start_t
end_t
Td,V_end_t
error_public
T@"NSArray",&,V_error_public
error_private
T@"NSArray",&,V_error_private
supported
TB,V_supported
exists
TB,V_exists
has_perf_warning
TB,V_has_perf_warning
internal_layer
TB,V_internal_layer
T@"NSString",&,V_type
debug_name
T@"NSString",&,V_debug_name
selected_runtime_engine
Ti,V_selected_runtime_engine
main_engine_support
T@"EspressoProfilingLayerSupportInfo",&,V_main_engine_support
per_platform_support
T@"NSDictionary",&,V_per_platform_support
runtimes
T@"NSArray",&,V_runtimes
average_runtime
Td,V_average_runtime
T@"NSMutableArray",&,V_layers
network_at_path
T@"NSString",&,V_network_at_path
bnns_filters_ref.size() != n_groups
Failed to create BNNS Filter for Convolution Layer
v84@?0Q8Q16Q24i32Q36Q44^{?=II[8Q][8Q]^vI^vIff}52^{?=II[8Q][8Q]^vI^vIff}60^{?=II[8Q][8Q]^vI^vIff}68^{?=II[8Q][8Q]^vI^vIff}76
Failed to create BNNS Filter for Fully Connected Layer
Only fp32 and fp16 are supported
Null output blobs
Conv weights not set
L2 pooling is not supported on BNNS engine
fallback kernel not available
bnns failure
inconsistent state! Expected inner product with 8bit clip input quantization
BNNS Runtime Error 
Unsupported compute path: %d %d
BNNS FP16 not implemented
com.apple.Espresso.registerBrickLock
Brick ObjC class: '
' not found
Don't know what to do.
parameters_json
Ti,V_width
Ti,V_height
Ti,V_channels
batch
Ti,V_batch
sequence
Ti,V_sequence
Ti,V_rank
T@"EspressoBrickTensorShape",&,V_shape
T^f,V_rawPointer
texture
T@"<MTLTexture>",&,V_texture
BNNS
com.apple.espresso.cpu_queue_0
processBlob
> processPyramid
>> CPU layers
>> GPU layers
fc4-conv_student
>> prob
You ended up in an unsupported path, the legacy low memory mode
basename
T@"NSString",&,N,V_basename
T@"NSString",&,N,V_weights
scaleConfig
Ti,N,V_scaleConfig
Ti,N,V_mode
cpin
Ti,N,V_cpin
context_metal
T{shared_ptr<Espresso::abstract_context>=^{abstract_context}^{__shared_weak_count}},N,V_context_metal
context_cpu
T{shared_ptr<Espresso::abstract_context>=^{abstract_context}^{__shared_weak_count}},N,V_context_cpu
useGPUScaler
TB,N,V_useGPUScaler
scalingMode
Ti,N,V_scalingMode
maxScale
Tf,N,V_maxScale
forceMaxNScales
Ti,N,V_forceMaxNScales
> buildPyramid
HINT
/_nespresso
/_coreml
/networks.espresso.net
.meta
.mlmodelc
.mlmodelc/model.espresso.net
/program.nitro
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Sim/CVML_Espresso-235/Nitro/EspressoNitro/src/nitro_program/nitro_program.mm
Argument 
 not provided
fin.good()
m_inputs.count(function)
Nitro/EspressoNitro/src/interpreter/nitro_variable.hpp
m_instance == nullptr
retlist.size()
m_outputs[function].size()
params[0].is_value()
is_valid()
espresso_buffer_pack_tensor_shape(&buffer, rank, shape.data()) == ESPRESSO_STATUS_SUCCESS
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Sim/CVML_Espresso-235/Nitro/EspressoNitro/src/interpreter/nitro_class.cpp
m_original_class->m_functions.count(name)
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Sim/CVML_Espresso-235/Nitro/EspressoNitro/src/numerics/ndarray.cpp
compute_broadcast
shapes canot be broadcasted
range_in.size()
shape.size()
range[i].end
shape[i]
range[i].start
permute.size()
permute_sort[i]
arr.shape().size()
outshape.size()
arr.shape()[i]
outshape[i]
arrs[arrid].num_elem()
contiguous_copy_size[arrid] * ncopies
Nitro/EspressoNitro/src/numerics/ndarray_container.hpp
m_shape.size()
num_unknown
num_elem() % new_numel
new_numel
num_elem()
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Sim/CVML_Espresso-235/Nitro/EspressoNitro/src/interpreter/nitro_function.cpp
m_body->m_args.size()
m_body->m_input_types.size()
args.size()
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Sim/CVML_Espresso-235/Nitro/EspressoNitro/src/interpreter/nitro_lazy_eval_impl.cpp
exec
 binary operator not implemented
 unary operator not implemented
Nitro/EspressoNitro/src/interpreter/nitro_lazy_eval_impl.hpp
Node type not implemented
Nitro/EspressoNitro/src/interpreter/syntax_tree_visit.hpp
Unknown node type encountered in visitor
m_instance != nullptr
function 
 not found
class 
cond.is_value()
 is not an iterable type
iterator.is_value()
integer
array
ndarray
dictionary
undefined
leftvar.is_value()
idxvar.is_value()
valuevar.is_value()
Op invalid to use as an LHS
TRUE
FALSE
THIS
BREAK
CONTINUE
DEFVAR
DEFUN
DEFMEMBERFUN
DEFCLASS
MEMBER
CALL
MAKE_OBJECT
WHILE
FOREACH
INDEX_GET
INDEX_PUT
ASSIGN
LIST
DICT
TUPLE
RETURN
TUPLE_GET
Unparseable: 
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Sim/CVML_Espresso-235/Nitro/EspressoNitro/src/interpreter/syntax_tree.cpp
!sexp.is_value
s.is_value
s.is_string_value
Cannot parse empty SExp node
sexp.children[0].is_string_value
sexp.children.size()
sexp.children[0].string_value
"DEFVAR"
"DEFUN"
"DEFMEMBERFUN"
"DEFCLASS"
"MEMBER"
sexp.children[2].is_string_value
str_to_binary_op.count(op)
sexp.children[2].is_value
bool
uint
int8
int16
int32
int64
uint8
uint16
uint32
uint64
float
fp32
fp64
list
dict
string
tuple
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Sim/CVML_Espresso-235/Nitro/EspressoNitro/src/interpreter/parse_types.cpp
parse_type_internal
Unrecognized expression 
TYPE
t.children[1].children.size()
params.children.size()
Unrecognized expression
"TYPE"
DEBUG:    
INFO:     
PROGRESS: 
WARNING:  
ERROR:    
FATAL:    
%c[%d;%dm
%c[0m
%s(%s:%d): 
Stack
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Sim/CVML_Espresso-235/Nitro/EspressoNitro/src/interpreter/builtin_operations.cpp
Stacking of invalid types
nv.size()
nda.num_elem()
a.get_type() == flex_type_enum::INTEGER || a.get_type() == flex_type_enum::FLOAT
Nitro/EspressoNitro/src/flexible_type/flexible_type_detail.hpp
u.num_elem()
t.num_elem()
splitdim
tensor.shape().size()
tensor.shape()[splitdim]
bias.shape().size()
bias.shape()[0]
ret_tensor.shape()[ret_tensor.shape().size() - 1]
var[i].is_value()
convert_slice_array_to_list
We can only slice with list or ndarray indices
Check failed: 
Invalid slice specification
assertion failure
fbeginmask.get_type() == flex_type_enum::LIST
fendmask.get_type() == flex_type_enum::LIST
maskidx
slice_tensor.size()
right_aligned_i
reverse_input_shape.size()
Unsupported type for All operation
Unsupported type for ExpandDims operation
Unexpected number of arguments for Matmul
Invalid conversion: 
 cannot be interpreted as a float
 cannot be interpreted as an integer
is_full()
shape[batchdim]
seqlen.size()
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Sim/CVML_Espresso-235/Nitro/EspressoNitro/src/model_metadata/model_metadata.mm
%*[^(]%*[^_]%127[^)+]
%127s
backtrace.%d
Unable to open output backtrace file.
Pointers
------------
Demangled
-------------------------------------------------------
Unable to print back trace on termination
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Sim/CVML_Espresso-235/Nitro/EspressoNitro/src/flexible_type/flexible_type.cpp
Unexpected type!
Invalid type conversion
int(f.get_type())
int(flex_type_enum::LIST)
fl.size()
v.size()
inner.size()
Not deserializable
EspressoDataFrameStorage: load %@
Wrong number of channels in vImage
Could not create pixelbuffer
Cannot bind input image: %s
Cannot get buffer size
Cannot get copy size
Cannot bind input: %s
bindInputsFromFrame try %zu/%zu
Direct binding of tensor attachments is not implemented
Wrong type of attachment %@
Input reshape plan clean failed
Input reshape plan build failed
Cannot find inputs: 
%s (%d, %d, %d, %d, %d)[%d] 
Cannot bind output: %s
Could not get blob dimensions
Depth and Batch number must be 1
Bind direct cvpixelbuffer failed
Error binding inputs
Error binding static outputs
Execution error: %s
Error binding dynamic outputs
run_pass_on_network %s
Warning: padding deconvolution %s in SAME mode will not be pad-invariant for all resolutions
Warning: deconvolution is specifying manual output size via deconv_out_width/deconv_out_height and that is not compatible with multple resolutions. Ignoring that deconv_out_width/deconv_out_height
[convert_to_explicit_padding] Shape mismatch for blob %s (%d %d %d %d %d) -> (%d %d %d %d %d)
Unsupported Engine type %d.
Cannot create context, Caught exception: %s
Hardware does not support ANE_RUNTIME - cannot use TwoNetsStyleTransfer
[profiler_t::static_entries] Network size %lu fallback size %lu
Failed to find layer %s in tmp ir
[profiler_t::get_result] %llu
%.3f
identify_segments, logic error: is_context_transfer=%d is_default_context_layer=%d is_last_layer=%d ilayer=%zu
identify_segments: isegment %zu (%zu %zu)
input %zu %s
output %zu %s
Precompilation info not found for engine: %s
[net::setup_script] %s
Creating plan %zu
Forcing compute path %d
dispatch_error_fallback_at_c_level
Dispatch failed for network %s, and the plan already contained %zu networks
dispatch_error_use_cpu_script
Espresso CPU context forcing FP32 compute path.
dispatch_error_use_mps_buffers
[change_input_shapes] index=%d/%d name=%s w=%d h=%d k=%d n=%d seq=%d
[Espresso::handle_ex_] exception=%s
Unsupported blob storage type %d
Creating context %zu eng=%d dev=%d
espresso_plan_add_network plan=%zu path=%s cp=%d
Destroying plan %zu
Destroying context %zu
blob: %s
error %s
Creating test vectors context %zu
[configuration] %s %d %d %d %d %d, rank=%d
[configuration (default)] %s %d %d %d %d %d, rank=%d
IntermediateSharing espresso_will_share_intermediate_buffer_with_existing_plan (1/3) %s %llu
IntermediateSharing espresso_plan_share_intermediate_buffer (1/3) %llu %llu
espresso_destroy_singletons called without calling espresso_create_singletons first
The client use of the API is invalid and dangerous.
ESPRESSO_ENGINE_METAL_MPS_BUFFERS forcing FP32 compute path.
[Espresso::handle_ex_plan] exception=%s status=%d
[Espresso::handle_ex_plan] exception=%s
Shape computation issue: %s at layer %zu
TODO: Blob shape not found:%s layer:%d j=%d
[quantizer::estimate_stats] no_mixed_precision=1
[quantizer::estimate_stats] %s: min=%.2e max=%.2e avg=%.3e scale=%.3f signed=%d
No top
No bottom
Detected Elementwise with non-linear operations not supported for quantization. Please check precision
Detected Activation with non-linear modes not supported for quantization. Please check precision
Detected softmax kernel not supported for quantization. Please check precision
Detected softmax_nd kernel not supported for quantization. Please check precision
sample=%d blob_name=%s psnr=%.2f maxabs=%.3e maxrel=%.3f q=%.2e ref=%.2e
Stats for PSNR
psnr: blob=%s mean=%.2f stddev=%.2f min=%.2f max=%.2f
Stats for MAXABSDIFF
maxabsdiff: blob=%s mean=%.2e stddev=%.2e min=%.2e max=%.2e
Stats for MAXRELDIFF
maxreldiff_stat: blob=%s mean=%.2e stddev=%.2e min=%.2e max=%.2e
high bias shift %d
low bias shift %d
Ignoring custom dylib: loading disabled in production
raii_dylib: %s
dl error: %s
Interpreter not set
Cannot find network's plan, must be using C++ interface: assuming all outputs to be bound
Breakpoint layer: Invalid state, no espresso_plan available in network
No bottom blobs to breakpoint layer
No breakpoint block set
pass_multi_head_prune_undeclared output=%s declared=%d
[cpu_context_transfer_algo] Needs fallback: Layer %d: %s (%s)
[cpu_context_transfer_algo] disabled all_next
[cpu_context_transfer_algo] cost_single: %.2f > cost_all_next: %.2f
[cpu_context_transfer_algo] # top_blobs_of_default_ctx_layers: %zu %s
[cpu_context_transfer_algo] # bottom_blobs_of_default_ctx_layers: %zu %s
[cpu_context_transfer_algo] Fallback segment %d: %d-%d
[cpu_context_transfer_algo] remap_fallback_bottom: ilayer=%d %s -> %s
[cpu_context_transfer_algo] remap_default_bottom: ilayer=%d %s -> %s
[cpu_context_transfer_algo] Inserting context transfer to fallback after layer %d (%s):  %s -> %s
[cpu_context_transfer_algo] Inserting context transfer to default after layer %d (%s): %s -> %s
[cpu_context_transfer_algo] Inserting %d ctx transfers in total
layer %zu (%s) not available (%d %d)
Cannot find any kernel for layer %zu (%s)
Error in estimated_compute_resources %s
assign_to_fallback_context_v2: disconnected graph_position=%d ilayer=%d
No fallback needed: %d
Kernel validation warning (Engine: %s) %s (%s) @ %zu: %s
GColor segment=%d blob=%s color=%d
Fail fast reshape (input) %s new=%lld old=%lld
[reshape] max color = %d tot_est_size = %.3f
option %s does not exist in generic options
Kernel validation warning %s (%s) @ %zu: %s
pass_find_shared_weights: sharing weights to layer %zu from %zu
%zu: %%%s = %s(%s) @%d count=%zu
%zu: __forward_segment isegment=%d end=%zu
blob[0]=%.3f blob[-1]=%.3f avg=%e platform=%d
aborting execution in debug mode
restore phi blobs
prepare_basic_block error
resizing: ilayer=%zu itop=%zu old_dim=%lld new_dim=%lld
resolve_virtual_phi: idx=%zu ts=%zu v=%.2f X
blobs to backprop through: 
swap_zero_to_first_position_anec_format: %zu
Configuring LUT before setting bitdepth. Cannot check size.
Restoring network precompilation info
[run_dispatch_v2] The network bounces between the ANE and GPU/CPU or between GPU & CPU too often. Please consider running the network on a different engine or change the architecture.
Missing precompilation info. Fallback to full dispatch.
[run_dispatch_v2] Both avoid_cpu and avoid_gpu were set! resetting them to false.
[run_dispatch_v2] fb_gpu=(%d %.3f) fb_cpu=(%d %.3f)
[run_dispatch_v2] selected gpu
[run_dispatch_v2] The network falls back to GPU too often. Please consider running the network on GPU or change the architecture.
[run_dispatch_v2] selected cpu
[run_dispatch_v2] The network falls back to CPU too often. Please consider running the network on CPU or change the architecture.
[run_dispatch_v2] bouncing_often=%d cost=%f n_bounces=%zu bounce_ratio=%f
[run_dispatch_v2] fb_gpu_cpu=(%d %.3f)
Error while restoring network precompilation info %s
Loaded network: '%s' pf=%d cp=%d
Cannot find engine for: %d
Will flush after layer %s
Could not find these layers to flush:
  %s
Cannot find engine: %s err=%s
Cannot load configurations
Sharing weights from layer %zu to layer %zu
Error: %s
EspressoWrap__Net__set_script_json error: %s
pass_multi_head_program_gen ioutput=%zu name=%s
pass_multi_head_program_gen: merge_group.size()=%zu
pass_multi_head_program_gen: cf_if ilayer=%zu outputs_per_layer[ilayer].size()=%zu
pass_multi_head_program_gen: cf_end ilayer=%zu type=%s
pass_multi_head_program_gen: cf_end after_ilayer=%d type=%s
fold_transform_params should only be used for VALID convolutions
[Espresso::fold_transform_params] %f %f %f %f %f
Invalid layer name %s passed to weightsForLayer; returning nullptr.
weights not found for layer name %s passed to weightForLayer; returning nullptr.
biases not found for layer name %s passed to biasesForLayer; returning nullptr.
[ETImageDescriptorExtractor] input=%s output=%s (%zu %zu %zu)
Epoch:%zu. LR decay lr=%f
[dataset_estimator::estimate] batch: %d / %d
[dataset_estimator::estimate] blob not found in network: %s
Blob copy not implemented
generic_elementwise_kernel not able to broadcast following blob shapes: 
[%d, %d, %d, %d, %d]
Metal batch: sync_wait_for_scheduled completed
Metal batch: sync_wait completed
Cannot create command buffer on this batch, batch_metal required (layer %s)
network_ensemble slow reshape %s
Creating nitro plan %zu
unroll_loop: constant=%s
pass_lstm_atomizer: ilayer=%zu in_seq=%d, in_batch=%d, in_ch=%d
concat_chain: bottom=%s on_left=%d empty=%d
concat_chain: last_top=%s
Unroll: %zu %s %s
adding phi: pl=%d kernel_type=%s kernel_name=%s top=%s k->original_blob_name=%s
pass_make_ssa: phi simplify iteration
pass_make_ssa: block=%s original_blob=%s phi=%s versions=%zu
pass_make_ssa: block=%s original_blob=%s version=%s not reachable from phi=%s
pass_make_ssa: removing phi=%s bottom_names.size()=%zu
inner_product_kernel_cpu: layer %s cached for %d uses
Error reading source directory: %s
Error creating directory: %s
Tracer cannot write file: %s
Test data written to: %s
async_cache: Invalidating cache, cached blob size (%zu) < requested blob size (%zu)
Plan tracer added to dump at: %s
Failed to find layer name %s for platform %d
No entry found for %s; creating dictionary.
[Nitro]: Shape query for variable type not supported so using unknown shape
EspressoDataFrameMappedFile
EspressoDataFrameAttachment
EspressoDataFrame
EspressoDataFrameStorage
EspressoDataFrameImageAttachment
EspressoDataFrameTensorAttachment
EspressoDataFrameStorageExecutorMatchingBufferSet
EspressoDataFrameExecutor
EspressoDataFrameStorageExecutor
ETTaskState
ETTaskDefinition
ETTaskContext
EspressoPass_transpose_inner_product_weights
EspressoPass_rpn_tracker_merge_convs
EspressoImage2Image
TwoNetsStyleTransfer
ETLossDefinition
EspressoFaceDetectedObject
ExternalDetectedObject
NSObject
ETLayerInitializationParameters
ETModelDefinition
EspressoPass_multi_head_prune_undeclared
EspressoPass_find_shared_weights
EspressoFaceLandmarkDetector
EspressoOJBC
EspressoCustomPass
EspressoDCNEspressoOverfeatDetector
EspressoPass_multi_head_program_gen
EspressoMetalSingleton
EspressoPass_wavernn_ane
EspressoNetwork
EspressoContext
EspressoPass_debug_mode
ETDataPoint
ETOptimizerDef
ETOptimizerDefSGD
ETModelDef
ETModelDefMLP
ETModelDefLeNet
ETOpaqueCopy
ETVariable
ETImageDescriptorExtractor
ETModelWithExtractor
ETDataSourceFromFolderData
ETDataSource
ETDataSourceBlobF4
ETDataSourceBuf
ETDataSourceWithExtractor
ETDataSourceWithCache
ETTask
ETTaskClassifier
ETLossConfig
EspressoSharedKernelCacheEntry
ETDataPointDictionary
ETImagePreprocessParams
ETImagePreprocessor
ETImageFolderDataProvider
ETDataProvider
_ETBufferDataSource
EspressoPass_make_fully_conv
MLRangeBrickTest
EspressoBrick
ETDataTensor
EspressoPass_lstm_atomizer
ETOptimizerDefinition
Espresso_mxnetTools_ImageBinaryRecordReader
EspressoPass_style_transfer_two_nets_onlyanepart
EspressoPass_style_transfer_two_nets
EspressoPass_style_transfer_parameterize_transplant
ETVariablesDefinition
EspressoMetalKernelsCache
EspressoProfilingLayerRuntime
EspressoProfilingLayerSupportInfo
EspressoProfilingLayerInfo
EspressoProfilingNetworkInfo
EspressoBrickRegistry
EspressoBrickTensorShape
EspressoBrickTensor
EspressoBrickTensorCPU
EspressoBrickTensorMetal
EspressoFDOverfeatNetwork
newBufferWithBytes:length:options:
pixelFormat
stringByAppendingString:
setComputePipelineState:
setTexture:atIndex:
setBuffer:offset:atIndex:
dispatchThreadgroups:threadsPerThreadgroup:
stringWithFormat:
setBytes:length:atIndex:
setConstantValue:type:atIndex:
maxTotalThreadsPerThreadgroup
threadExecutionWidth
setThreadgroupMemoryLength:atIndex:
setPurgeableState:
setLabel:
setSamplerState:atIndex:
arrayLength
appendString:
setNormalizedCoordinates:
setRAddressMode:
setSAddressMode:
setTAddressMode:
newSamplerStateWithDescriptor:
newBufferWithLength:options:
contents
UTF8String
computeCommandEncoder
endEncoding
appendFormat:
init
setBasePtr:
dealloc
initWithPath:
path
setPath:
basePtr
.cxx_destruct
file_id
length
_path
_basePtr
objectForKeyedSubscript:
isEqualToString:
loadFromDict:frameStorage:
unsignedLongValue
mappedFiles
objectForKey:
hasPrefix:
baseFilename
stringByDeletingLastPathComponent
stringByAppendingPathComponent:
setObject:forKeyedSubscript:
setFilePath:
setOffset:
setSize:
offset
setRawPointer:
fromDict:frameStorage:
disabled
setDisabled:
filePath
rawPointer
size
_disabled
_filePath
_rawPointer
_offset
_size
allKeys
countByEnumeratingWithState:objects:count:
getInputAttachment:
getOutputAttachment:
getGroundTruthAttachment:
getFunctionName
inputAttachmentNames
groundTruthAttachmentNames
outputAttachmentNames
inputAttachments
setInputAttachments:
outputAttachments
setOutputAttachments:
groundTruthAttachments
setGroundTruthAttachments:
function_name
setFunction_name:
_inputAttachments
_outputAttachments
_groundTruthAttachments
_function_name
setDataFrames:
setMappedFiles:
setBaseFilename:
pathExtension
dataWithContentsOfFile:
JSONObjectWithData:options:error:
dataFrames
addObject:
stringWithUTF8String:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
count
objectAtIndexedSubscript:
dataFrameStorageFromPath:error:
numberOfDataFrames
dataFrameAtIndex:
_dataFrames
_mappedFiles
_baseFilename
intValue
createCVPixelBufferFromvImage:withPixelFormat:
copyAsImageGrayscaleOrBGRA
nChannels
setNChannels:
buffer
_nChannels
unsignedLongLongValue
copyFromCVPixelBuffer:
copyAsEspressoBuffer
index
setIndex:
name
setName:
reference_buffer
setReference_buffer:
computed_buffer
setComputed_buffer:
computed_pb
setComputed_pb:
groundtruth_buffer
setGroundtruth_buffer:
_index
_name
_computed_pb
_reference_buffer
_computed_buffer
_groundtruth_buffer
use_cvpixelbuffer
useCVPixelBuffersForOutputs:
useCVPixelBuffers
bindInput:fromImageAttachment:toNetwork:
bindInput:fromTensorAttachment:toNetwork:
setOutputMatchingBuffers:
bindOutputsFromFrame:toNetwork:executionStatus:
cStringUsingEncoding:
outputMatchingBuffers
freeTemporaryResources
bindInputsFromFrame:toNetwork:
bindOutputsFromFrame:toNetwork:referenceNetwork:
bindOutputsFromFrame:toNetwork:
setUse_cvpixelbuffer:
.cxx_construct
pointers_to_free
pixelbuffers_to_release
_use_cvpixelbuffer
_outputMatchingBuffers
executeDataFrameStorage:withNetwork:block:blockPrepareForIndex:
executeDataFrameStorage:withNetwork:referenceNetwork:block:blockPrepareForIndex:
executeDataFrameStorage:withNetwork:block:
processInfo
environment
initWithBlobMap:
initWithNetwork:
blobs
setBlobs:
networkPointer
setNetworkPointer:
_networkPointer
_blobs
bytes
dataWithLength:
mutableBytes
context_for_runtime_platform:
trainingGraphNetPtr
setTrainingGraphNetPtr:
inferenceGraphNetPtr
setInferenceGraphNetPtr:
shareWeights
layerNames
containsObject:
setupShapes:forBlobs:withError:
setInferenceModel:
setOptimizer:
optimizationParameters
unsignedIntegerValue
modelURL
stringByReplacingOccurrencesOfString:withString:
defaultManager
fileExistsAtPath:
arrayWithCapacity:
lossOutputName
setupInputOutputShapes:
reloadOnRuntimePlatform:
mode
inputName
targetInputName
numberWithUnsignedLong:
type
floatValue
inputs
outputs
trainingInputs
trainingOutputs
isTrainingGlobalName
initializer
initWithCapacity:
numberOfDataPoints
initWithBlobShapes:numberOfDataPoints:batchSize:error:
checkShapes:withSample:withError:
dataAtIndex:key:
prepareForEpoch
privateDoTrainingOnData:forNumberOfEpochs:withCallback:error:
setInferenceNetworkWeights:error:
taskState
getTensorNamed:
shape
integerValue
dataPointer
setTensorNamed:withValue:error:
initWithBlobContainer:
isEqual:
strides
doInferenceOnData:error:
saveNetwork:inplace:error:
description
initWithModelDefinition:lossDefinition:variablesDefinition:optimizerDefinition:forPlatform:error:
initWithTrainingModelDefinition:forPlatform:error:
namesVectorToFoundationArray:
doTrainingOnData:forNumberOfEpochs:withCallback:error:
saveTrainingNetwork:checkpoint:error:
setWeightsOfInferenceNetworkLoadedFrom:AndSaveTo:error:
dataTypeForParameterOfType:fromLayerNamed:
getParameterOfType:forLayerNamed:error:
setParameterOfType:forLayerNamed:withValue:error:
platformForLayerNamed:error:
inferenceModel
optimizer
platform
setPlatform:
setTaskState:
inference_layer_index
varsDef
runtimePlatform
precision
batchSize
training_control_name
training_control_end_name
gradient_control_name
gradient_control_end_name
optimizer_control_name
optimizer_control_end_name
infInputNames
infOutputNames
trainInputNames
trainOutputNames
infInputBlobShapes
trainInputBlobShapes
infOutputBlobShapes
trainOutputBlobShapes
_inferenceModel
_optimizer
_platform
_taskState
_inferenceGraphNetPtr
_trainingGraphNetPtr
runOnNetwork:
newBufferWithBytesNoCopy:length:options:deallocator:
stringValue
loadStylesConfigAtPath:
unsignedIntValue
dictionaryWithContentsOfFile:
numberWithDouble:
device
newCommandQueue
supportsFeatureSet:
setupWithQueue:
width
height
addNoiseLayer
_resetTemporalState
texture2DDescriptorWithPixelFormat:width:height:mipmapped:
setResourceOptions:
setUsage:
newTextureWithDescriptor:
load:resolutionPreset:
lastPathComponent
wasReshaped
_reshapeToResolutionPreset:
resolutionForPreset:
_reshapeToWidth:andHeight:
encodeToCommandBuffer:sourceTexture:destinationTexture:cropRect:
setStorageMode:
blitCommandEncoder
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
submitToQueueWithSourceTexture:destinationTexture:cropRect:
reload
rotation_degrees
flip_y
postProcess:cameraSourceTexture:inputTexture:destinationTexture:
textureType
commandBuffer
simpleLinearResize:sourceTexture:destinationTexture:
commit
waitUntilCompleted
_tune
reshapeToResolutionPreset:
styleName
tweak:value:
tune
aggregateWisdom:
newOutputTexture
setBackgroundGPUPriority:
setGPUPriority:
GPUEndTime
GPUStartTime
getEspressoNetwork
setDefaultOption:toValue:
loadStylesConfigAtDefaultsKey:
getStylesKeys
featureVersion
gpuSync:tex:
tuneNetworks:
tuneNetworksWGWindowSize:
getInternalDataForKey:
initWithQueue:
resetTemporalState
load:
reshapeToResolutionPreset:aspectRatio:
reshapeToWidth:andHeight:
encodeToCommandBuffer:sourceTexture:destinationTexture:cropRect:destinationRect:
submitToQueueWithSourceTexture:destinationTexture:
benchmark
setRotation_degrees:
setFlip_y:
plan
output_layer_name
queue
dispatch_queue
is_temporal_model
dim_small
defaultWidth
defaultHeight
scale_ratio
smallOldResultTexture
tweaks
current_postprocessing_settings
noise_k
noise_load_constant_kernel
currentNetworkPath
currentResolutionPreset
precomputed_noise
tmpDestinationTexture
_rotation_degrees
_flip_y
supportsANE
load:outputName:
widthSmall
widthBig
heightSmall
heightBig
executeSyncWithImage:smallImage:
dim_data0
dim_data0__small
dim_data2
dim_data2__small
result
boolValue
initWithMode:inputName:targetName:lossOutputName:
crossEntropyLossWithInputName:targetInputName:lossOutputName:
L2LossWithInputName:targetInputName:lossOutputName:
BuiltInLoss:
outputName
setOutputName:
_inputName
_targetInputName
_lossOutputName
_mode
_outputName
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
objectType
setObjectType:
bounds
setBounds:
center
setCenter:
initWithOptionsXloc:yloc:size:confidence:
confidence
setConfidence:
shortValue
unsignedShortValue
longLongValue
doubleValue
numberWithInteger:
numberWithUnsignedInteger:
numberWithShort:
numberWithUnsignedShort:
numberWithLongLong:
numberWithUnsignedLongLong:
numberWithBool:
numberWithFloat:
initWithBytesNoCopy:length:freeWhenDone:
localizedDescription
dictionaryWithDictionary:
dataWithJSONObject:options:error:
initWithMode:parameters:error:
parameters
_parameters
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
numberWithInt:
writeToFile:atomically:
componentsSeparatedByString:
arrayWithObjects:count:
URLWithString:
requestWithURL:
setHTTPMethod:
setValue:forHTTPHeaderField:
setHTTPBody:
sharedSession
dataTaskWithRequest:completionHandler:
resume
initWithInferenceNetworkPath:inferenceInputs:inferenceOutputs:error:
initWithInferenceNetworkPath:error:
initWithTrainingNetworkPath:inferenceInputs:inferenceOutputs:trainingInputs:trainingOutputs:trainingControlVariableName:withInitializer:error:
_layerNames
_inputs
_outputs
_trainingInputs
_trainingOutputs
_modelURL
_isTrainingGlobalName
_initializer
bundleForClass:
executablePath
registerBrickClass:
detectInImageRect:face:sublandmark:
setNewface:
extractSubLandmarksFromCrop192:centers192:
commonInit:context:platform:computePath:
mainBundle
pathForResource:ofType:
detect:face:sublandmark:doFaceRectFix:
initWithNetworkAtPath:context:platform:computePath:
initWithNetworkAtPath:contextObjC:platform:computePath:
newface
crop_scaled
crop_192
net_detect
nets_sub_landmark
_newface
strideConfiguration
maxScale
getNumScales
resizerAtIndex:
probBlobForScale:
boxBlobForScale:
getScale:
computeBBoxUsingProb:box:andScalefactor:padX:padY:
array
fillFaceList
mergeFaceList
shared
is_memory_tight
reset
commonInit
getFacesFromNetworkResultOriginalWidth:originalHeight:
initWithOptions:
compareObject:withObject:error:
getDescription
enet
setEnet:
confidenceThreshold
setConfidenceThreshold:
minBoundingBoxThreshold
setMinBoundingBoxThreshold:
tileSizeScaleFactor
tileDimension
localFaceMerging
face_list
_enet
_confidenceThreshold
_minBoundingBoxThreshold
dataWithBytes:length:
objectAtIndex:
dataUsingEncoding:allowLossyConversion:
valueForKey:
setIs_memory_tight:
_is_memory_tight
getBytes:length:
dataWithBytesNoCopy:length:freeWhenDone:
setHeight:
setWidth:
setPixelFormat:
setTextureType:
newTextureWithDescriptor:offset:bytesPerRow:
initWithContext:
initWithJSFile:context:computePath:
initWithJSFile:binSerializerId:context:computePath:
layers_size
wipe_layers_blobs
_net
initWithPlatform:
initWithDevice:andWisdomParams:
initWithNetworkContext:
set_priority:low_priority_max_ms_per_command_buffer:gpu_priority:
_ctx
iterateBuffersByKey:
setImage:forKey:
setData:size:forKey:freeWhenDone:
imageWithKey:
bufferWithKey:
getSampleData
image_buffers
buffers
setBatch_size:
batch_size
_batch_size
setLr:
setLr_decay_epoch:
setMomentum:
setWeight_decay:
lr_decay_epoch
momentum
weight_decay
_lr_decay_epoch
_momentum
_weight_decay
setGb:
setNetwork:
setAll_variables:
initWithModelDef:
setLayerName:
setKind:
setInitializationMode:
all_variables
setupVariablesDef
transformForTraining:
network
layerForName:
variableForLayer:kind:
updateWithData:
variables
layerName
kind
topNamesForLayerIndex:
weightsForLayer:
biasesForLayer:
updateLayer:withWeights:length:
updateLayer:withBiases:length:
randomizeWeightsForLayer:withSeed:
variableNameForLayer:kind:
configureLayersToTrain:reinitializeVariables:
layer_variable_names
_all_variables
_network
hidden_size
input_size
output_size
buildNetwork
setInput_size:
setHidden_size:
setOutput_size:
_input_size
_hidden_size
_output_size
initWithAbstractBlobContainer:
getBlob
blob
setModel:
model
copyData
getOpaqueCopy
swapWithOpaqueCopy:
initializationMode
initializationAlpha
setInitializationAlpha:
initializationBeta
setInitializationBeta:
_initializationAlpha
_initializationBeta
_kind
_layerName
_initializationMode
_model
extractDescriptorForDataPoint:freeWhenDone:
VisionSceneNet_iOS10_Extractor
inception_v3_Extractor
passthroughExtractor
VisionSmartCamNet_iOS11_Extractor
extractForDataPoint:
cropResizeInputImage:
numberOfChannels
rotation_range
setRotation_range:
horizontal_flip
setHorizontal_flip:
zoom_range
setZoom_range:
shear_range
setShear_range:
contrast_range
setContrast_range:
brightness_range
setBrightness_range:
nAugmentations
setNAugmentations:
doBatchnormTuning
setDoBatchnormTuning:
descriptors_mem_cache_size
setDescriptors_mem_cache_size:
descriptors_file_cache_size
setDescriptors_file_cache_size:
_plan
_inputBlob
_outputBlob
_targetWidth
_targetHeight
_inputShape
_rotation_range
_horizontal_flip
_zoom_range
_shear_range
_contrast_range
_brightness_range
_nAugmentations
_doBatchnormTuning
_descriptors_mem_cache_size
_descriptors_file_cache_size
setBalanceClassesForTraining:
contentsOfDirectoryAtPath:error:
lowercaseString
arrayWithArray:
balanceClassesForTraining
classNames
folderToImages
bufferWithPath:
imageFileNames
dataPointAtIndex:
initWithFolder:balanceClassesForTraining:
numberOfClasses
setNumberOfClasses:
imagesDir
setImagesDir:
setFolderToImages:
setImageFileNames:
setClassNames:
pathToClassIndex
setPathToClassIndex:
_balanceClassesForTraining
_numberOfClasses
_imagesDir
_folderToImages
_imageFileNames
_classNames
_pathToClassIndex
addBlob:forKey:
setBlobs:numberOfDataPoints:nonBatches:
number_of_data_points
initWithDataSource:extractor:
_source
_extractor
initWithDataSource:
initWithDataSource:dumpPath:
_cache
dump_path
dump_descriptors
setDumpData:
initWithModelDef:optimizerDef:extractor:needWeightsInitialization:
setExtractor:
initWithModelDef:optimizerDef:lossConfig:extractor:
label_name
label_shape
output_name
loss_name
reinitializeVariables
extractor
fit:numberOfBatches:withProgress:
dumpData
date
timeIntervalSince1970
mutableCopy
runBatches:numberOfBatches:outputNames:batchCallback:
saveNetwork:revertToInferenceMode:
initWithModelDef:optimizerDef:extractor:
initWithModelDef:optimizerDef:lossConfig:
fit:numberOfEpochs:withProgress:
evaluate:
fit:numberOfBatches:outputNames:batchCallback:
fit:numberOfEpochs:outputNames:batchCallback:
runInference:outputNames:batchCallback:
saveNetwork:
moveToGPU:error:
_dumpData
softmaxCrossEntropyLoss
setLabel_name:
setLoss_name:
setOutput_name:
class_names
setClass_names:
_class_names
setMode:
L2Loss
setLabel_shape:
custom_network_path
setCustom_network_path:
_loss_name
_output_name
_label_name
_label_shape
_custom_network_path
cached
setCached:
_cached
newSharedEvent
notifyListener:atValue:block:
encodeSignalEvent:value:
newCommandQueueWithMaxCommandBufferCount:
waitUntilScheduled
status
kernelEndTime
kernelStartTime
addCompletedHandler:
initWithDevice:
kernelForFunction:cacheString:withConstants:
error
code
setObject:atIndexedSubscript:
dataForKey:error:
dataArrayForKey:error:
setImage_buffers:
float_buffers
setFloat_buffers:
_image_buffers
_float_buffers
initWithHeight:Width:NumChannels:Scale:BiasR:BiasG:BiasB:NetworkWantBGR:
network_wants_bgr
bias_r
bias_g
bias_b
scale
channels
_network_wants_bgr
_bias_r
_bias_g
_bias_b
_scale
_channels
_height
_width
loadSrcBufferWithCGImage:
preprocess
initWithData:type:shape:strides:
tensorWithCGImage:
initWithImagePreprocessParams:
tensorWithPath:
param
imageBlob
imageShape
bytesPerPixel
bitsPerComponent
colorSpace
targetBuffer
srcBuffer
currentSrcBufferSize
dataPointAtIndex:error:
initWithFolder:forImageTensor:andLabelTensor:shuffleBeforeEachEpoch:shuffleRandomSeed:withImagePreprocessParams:
samples
classes
labelBlob
imageTensorName
labelTensorName
labelShape
randomgen
imageProcessor
shuffleBeforeEpoch
blobShapes
setMaxNumberOfElements:
dataStorage
setDataStorage:
setBlobShapes:
setNumber_of_data_points:
setBatchSize:
nonBatchBlobNames
setNonBatchBlobNames:
_number_of_data_points
_batchSize
_nonBatchBlobNames
_dataStorage
_blobShapes
setKernelPrefix:
copy
dateWithTimeIntervalSinceNow:
setDateStyle:
setTimeStyle:
stringFromDate:
setChannels:
setBatch:
setSequence:
setRank:
setupForInputShapes:withParameters:
initWithParameters:
hasGPUSupport
setMappedWeights:sizeInBytes:
computeOnCPUWithInputTensors:outputTensors:
encodeToMetalCommandBuffer:inputTensors:outputTensors:
hasDynamicOutputShape:
computeDynamicOutputShape:
start
stepSize
_start
_stepSize
dataArray
float_buffer
initWithCVPixelBuffer:imageParameters:error:
setDataPointer:
setDataArray:
setType:
setShape:
setStrides:
maxNumberOfElements
imageBuffer
setImageBuffer:
allocatedImageData
setAllocatedImageData:
setFloat_buffer:
setBlob:
_dataPointer
_dataArray
_type
_shape
_strides
_maxNumberOfElements
_blob
_allocatedImageData
_float_buffer
_imageBuffer
copyItemAtPath:toPath:error:
removeItemAtPath:error:
numberWithUnsignedInt:
lastObject
addEntriesFromDictionary:
initWithOptimizationAlgorithm:parameters:error:
_optimizationParameters
fileHandleForReadingAtPath:
nextRecordAndError:
setCurrentOffset:
recFileHandle
currentOffset
seekToFileOffset:
imageHeader
readDataOfLength:
offsetInFile
recordHeader
initWithRecFile:error:
seekRecordWithID:error:
imageData
labels
imageID
setRecFileHandle:
setRecordHeader:
setImageHeader:
labelsPrivate
setLabelsPrivate:
_recFileHandle
_recordHeader
_currentOffset
_labelsPrivate
_imageHeader
resourcePath
initForLayers:error:
setLayerNames:
currentDirectoryPath
processIdentifier
setArrayLength:
shouldUseTexArray
wasSetup
newLibraryWithFile:error:
bundlePath
newDefaultLibrary
addLibraryAtPath:
lazySetup
stringByAppendingFormat:
m_kernelCache
newFunctionWithName:constantValues:error:
setComputeFunction:
newComputePipelineStateWithDescriptor:options:reflection:error:
setM_kernelCache:
newFunctionWithName:
newComputePipelineStateWithFunction:error:
loadLibraryNamed:
kernelForFunction:
kernelPrefix
m_ShaderLibrary
m_DefaultLibrary
_device
isSupportingiOSGPUFamilyV2
dictionary_write_queue
auxLibraries
m_kernelCache_rw
setup_mutex
_kernelPrefix
_m_kernelCache
start_t
setStart_t:
end_t
setEnd_t:
_start_t
_end_t
error_public
setError_public:
error_private
setError_private:
supported
setSupported:
exists
setExists:
has_perf_warning
setHas_perf_warning:
internal_layer
setInternal_layer:
_supported
_exists
_has_perf_warning
_internal_layer
_error_public
_error_private
debug_name
setDebug_name:
selected_runtime_engine
setSelected_runtime_engine:
main_engine_support
setMain_engine_support:
per_platform_support
setPer_platform_support:
runtimes
setRuntimes:
average_runtime
setAverage_runtime:
_selected_runtime_engine
_debug_name
_main_engine_support
_per_platform_support
_runtimes
_average_runtime
layers
setLayers:
network_at_path
setNetwork_at_path:
_layers
_network_at_path
defaultCStringEncoding
stringWithCString:encoding:
setObject:forKey:
initWithDictionary:
dataUsingEncoding:
batch
sequence
rank
_batch
_sequence
_rank
texture
setTexture:
_texture
basename
weights
scaleConfig
cpin
autoSetupNetBaseName:weights:scaleConfig:setupMode:computePath:autoAspectRatio:forceReset:useLowPriorityMode:gpuPriority:
setBasename:
setWeights:
setScaleConfig:
setCpin:
retryLoadingCaffeNet:name:weights:context:cp:
setup_retile
setMaxScale:
generatePyramid:tex:
processPyramid:
processBlobNoRotation:tex:doBGRA2RGBA:
processPyramid:gpu_resizer:
forward_cpu_network_at_index:pyr:
needRetiling:
retile_and_forward_espresso_gpu_network_at_index:net:pyr:
default_retile_outputs
retile_and_forward_espresso_network_at_index:net:pyr:
resizerCount
gpu_net:
cpu_net:
autoResizeForAspectRatio:useLowPriorityMode:gpuPriority:
wipeLayersMemory
processBlob:tex:
processVimageNoRotation:tex:doBGRA2RGBA:
storeDataForPruning:prob:
errorForLayers
setContextMetal:
setContextCpu:
useGPUScaler
setUseGPUScaler:
scalingMode
setScalingMode:
forceMaxNScales
setForceMaxNScales:
context_metal
setContext_metal:
context_cpu
setContext_cpu:
gpu_nets
ecpu_nets
net_scales
full_scales
scalesc
resizers_for_batching
n_resizers_for_batching
probBlobs
boxBlobs
_errorForLayers
cropDims
strideConf
retile_stride
retile_tile_sz
retile_n_outputs_v
tile_w_1
tile_h_1
cpu_queue_0
cpu_semaphore
_useGPUScaler
_scalingMode
_maxScale
_forceMaxNScales
_scaleConfig
_cpin
_basename
_weights
_context_metal
_context_cpu
@24@0:8@16
v16@0:8
@16@0:8
v24@0:8@16
*16@0:8
v24@0:8*16
@"NSString"
@32@0:8@16@24
v32@0:8@16@24
B16@0:8
v20@0:8B16
^v16@0:8
v24@0:8^v16
Q16@0:8
v24@0:8Q16
@"NSMutableDictionary"
@32@0:8@16^@24
@24@0:8Q16
@"NSMutableArray"
^{__CVBuffer=}52@0:8{vImage_Buffer=^vQQQ}16I48
{vImage_Buffer=^vQQQ}16@0:8
i16@0:8
v20@0:8i16
{vImage_Buffer="data"^v"height"Q"width"Q"rowBytes"Q}
{?=^v^v[4Q][4Q]QQQQQQQQQQi}24@0:8^{__CVBuffer=}16
{?=^v^v[4Q][4Q]QQQQQQQQQQi}16@0:8
{?="data"^v"reserved"^v"dim"[4Q]"stride"[4Q]"width"Q"height"Q"channels"Q"batch_number"Q"sequence_length"Q"stride_width"Q"stride_height"Q"stride_channels"Q"stride_batch_number"Q"stride_sequence_length"Q"storage_type"i}
v184@0:8{?=^v^v[4Q][4Q]QQQQQQQQQQi}16
^{__CVBuffer=}16@0:8
v24@0:8^{__CVBuffer=}16
^{__CVBuffer=}
B20@0:8B16
i48@0:8@16@24{?=^vi}32
i40@0:8@16{?=^vi}24
i56@0:8@16{?=^vi}24{?=^vi}40
i44@0:8@16{?=^vi}24i40
{vector<void *, std::__1::allocator<void *> >="__begin_"^^v"__end_"^^v"__end_cap_"{__compressed_pair<void **, std::__1::allocator<void *> >="__value_"^^v}}
{vector<__CVBuffer *, std::__1::allocator<__CVBuffer *> >="__begin_"^^{__CVBuffer}"__end_"^^{__CVBuffer}"__end_cap_"{__compressed_pair<__CVBuffer **, std::__1::allocator<__CVBuffer *> >="__value_"^^{__CVBuffer}}}
@"NSArray"
v56@0:8@16{?=^vi}24@?40@?48
v72@0:8@16{?=^vi}24{?=^vi}40@?56@?64
v48@0:8@16{?=^vi}24@?40
@24@0:8^{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16
@32@0:8{shared_ptr<Espresso::net>=^{net}^{__shared_weak_count}}16
{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16@0:8
v56@0:8{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16
{shared_ptr<Espresso::net>=^{net}^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<Espresso::net>=^{net}^{__shared_weak_count}}16
{shared_ptr<Espresso::net>="__ptr_"^{net}"__cntrl_"^{__shared_weak_count}}
{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >="__table_"{__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >="__value_"f}}}
B40@0:8@16@24^@32
B36@0:8@16B24^@28
B40@0:8@"NSString"16@"ETDataTensor"24^@32
@"ETDataTensor"24@0:8@"NSString"16
@"<ETDataProvider>"32@0:8@"<ETDataProvider>"16^@24
B36@0:8@"NSString"16B24^@28
{shared_ptr<Espresso::abstract_context>=^{abstract_context}^{__shared_weak_count}}24@0:8^@16
v24@0:8^@16
v40@0:8^{unordered_map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16@24^@32
v40@0:8r^{unordered_map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16r^{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}24^@32
@64@0:8@16@24@32@40Q48^@56
@40@0:8@16Q24^@32
@40@0:8{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}16
B48@0:8@16Q24@32^@40
B40@0:8{shared_ptr<Espresso::net>=^{net}^{__shared_weak_count}}16^@32
Q32@0:8Q16@24
@40@0:8Q16@24^@32
B48@0:8Q16@24@32^@40
Q32@0:8@16^@24
{unordered_map<std::__1::basic_string<char>, unsigned long, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >="__table_"{__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::hash<std::__1::basic_string<char> >, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::equal_to<std::__1::basic_string<char> >, true> >="__value_"f}}}
@"ETVariablesDefinition"
{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >="__r_"{__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >="__value_"{__rep=""(?="__l"{__long="__cap_"Q"__size_"Q"__data_"*}"__s"{__short=""(?="__size_"C"__lx"c)"__data_"[23c]}"__r"{__raw="__words"[3Q]})}}}
{unordered_map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >="__table_"{__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true> >="__value_"f}}}
@"ETModelDefinition"
@"ETOptimizerDefinition"
@"ETTaskState"
B24@0:8^{net={weak_ptr<Espresso::net>=^{net}^{__shared_weak_count}}{shared_ptr<Espresso::abstract_context>=^{abstract_context}^{__shared_weak_count}}{vector<std::__1::shared_ptr<Espresso::layer>, std::__1::allocator<std::__1::shared_ptr<Espresso::layer> > >=^{shared_ptr<Espresso::layer>}^{shared_ptr<Espresso::layer>}{__compressed_pair<std::__1::shared_ptr<Espresso::layer> *, std::__1::allocator<std::__1::shared_ptr<Espresso::layer> > >=^{shared_ptr<Espresso::layer>}}}{unordered_map<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > > >={__hash_table<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::hash<unsigned long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::equal_to<unsigned long>, true> >=f}}}{unordered_map<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > > >={__hash_table<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::hash<unsigned long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::equal_to<unsigned long>, true> >=f}}}{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container>, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}iB{network_shape={map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}{map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, bool> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, bool>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, bool> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, bool>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, bool> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, bool>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, bool> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, bool>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{map<std::__1::basic_string<char>, Espresso::vimage2espresso_param, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::vimage2espresso_param> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, Espresso::vimage2espresso_param>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::vimage2espresso_param>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Espresso::vimage2espresso_param> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Espresso::vimage2espresso_param>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::vimage2espresso_param>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{map<std::__1::basic_string<char>, Espresso::blob_numerical_properties, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::blob_numerical_properties> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, Espresso::blob_numerical_properties>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::blob_numerical_properties>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Espresso::blob_numerical_properties> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Espresso::blob_numerical_properties>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::blob_numerical_properties>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{map<Espresso::platform, std::__1::map<std::__1::basic_string<char>, Espresso::blob_numerical_properties, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::blob_numerical_properties> > >, std::__1::less<Espresso::platform>, std::__1::allocator<std::__1::pair<const Espresso::platform, std::__1::map<std::__1::basic_string<char>, Espresso::blob_numerical_properties, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::blob_numerical_properties> > > > > >={__tree<std::__1::__value_type<Espresso::platform, std::__1::map<std::__1::basic_string<char>, Espresso::blob_numerical_properties, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::blob_numerical_properties> > > >, std::__1::__map_value_compare<Espresso::platform, std::__1::__value_type<Espresso::platform, std::__1::map<std::__1::basic_string<char>, Espresso::blob_numerical_properties, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::blob_numerical_properties> > > >, std::__1::less<Espresso::platform>, true>, std::__1::allocator<std::__1::__value_type<Espresso::platform, std::__1::map<std::__1::basic_string<char>, Espresso::blob_numerical_properties, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::blob_numerical_properties> > > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<Espresso::platform, std::__1::map<std::__1::basic_string<char>, Espresso::blob_numerical_properties, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::blob_numerical_properties> > > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<Espresso::platform, std::__1::__value_type<Espresso::platform, std::__1::map<std::__1::basic_string<char>, Espresso::blob_numerical_properties, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::blob_numerical_properties> > > >, std::__1::less<Espresso::platform>, true> >=Q}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}iB{map<int, bool, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, bool> > >={__tree<std::__1::__value_type<int, bool>, std::__1::__map_value_compare<int, std::__1::__value_type<int, bool>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, bool> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, bool>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, bool>, std::__1::less<int>, true> >=Q}}}{shared_ptr<Espresso::net_compiler>=^{net_compiler}^{__shared_weak_count}}B{shared_ptr<Espresso::blob_storage_abstract>=^{blob_storage_abstract}^{__shared_weak_count}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}{shared_ptr<Espresso::kernels_validation_status_t>=^{kernels_validation_status_t}^{__shared_weak_count}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{map<std::__1::basic_string<char>, Espresso::net_configuration, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::net_configuration> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, Espresso::net_configuration>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::net_configuration>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Espresso::net_configuration> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Espresso::net_configuration>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::net_configuration>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{net_configuration={vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}{map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}{unordered_set<std::__1::shared_ptr<Espresso::abstract_blob_container>, std::__1::hash<std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::equal_to<std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::allocator<std::__1::shared_ptr<Espresso::abstract_blob_container> > >={__hash_table<std::__1::shared_ptr<Espresso::abstract_blob_container>, std::__1::hash<std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::equal_to<std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::allocator<std::__1::shared_ptr<Espresso::abstract_blob_container> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<std::__1::shared_ptr<Espresso::abstract_blob_container> > >=Q}{__compressed_pair<float, std::__1::equal_to<std::__1::shared_ptr<Espresso::abstract_blob_container> > >=f}}}{unordered_map<unsigned long, Espresso::net::basic_block_t, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, Espresso::net::basic_block_t> > >={__hash_table<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, std::__1::hash<unsigned long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, std::__1::equal_to<unsigned long>, true> >=f}}}{unordered_map<std::__1::basic_string<char>, unsigned long, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{shared_ptr<Espresso::abstract_executor_t>=^{abstract_executor_t}^{__shared_weak_count}}{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net>, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{unordered_map<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{weak_ptr<Espresso::net>=^{net}^{__shared_weak_count}}{shared_ptr<Espresso::per_network_phi_state_t>=^{per_network_phi_state_t}^{__shared_weak_count}}{unordered_map<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result>, std::__1::hash<std::__1::type_index>, std::__1::equal_to<std::__1::type_index>, std::__1::allocator<std::__1::pair<const std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> > > >={__hash_table<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, std::__1::__unordered_map_hasher<std::__1::type_index, std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, std::__1::hash<std::__1::type_index>, true>, std::__1::__unordered_map_equal<std::__1::type_index, std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, std::__1::equal_to<std::__1::type_index>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::type_index, std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, std::__1::hash<std::__1::type_index>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::type_index, std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, std::__1::equal_to<std::__1::type_index>, true> >=f}}}{shared_ptr<Espresso::net_fast_reshaper>=^{net_fast_reshaper}^{__shared_weak_count}}{unordered_map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}^{abstract_espresso_plan}i{shared_ptr<Espresso::abstract_context>=^{abstract_context}^{__shared_weak_count}}QBBB{shared_ptr<Espresso::net::info_needed_to_reload_network_t>=^{info_needed_to_reload_network_t}^{__shared_weak_count}}{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container>, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}}16
B24@0:8@16
{?=^vi}16@0:8
i24@0:8@16
i32@0:8@16q24
i24@0:8q16
{pair<int, int>=ii}24@0:8q16
i28@0:8q16f24
i24@0:8i16i20
i136@0:8@16@24@32{?={?=QQQ}{?=QQQ}}40{?={?=QQQ}{?=QQQ}}88
i32@0:8@16@24
v28@0:8@16f24
i80@0:8@16@24{?={?=QQQ}{?=QQQ}}32
i88@0:8@16@24@32{?={?=QQQ}{?=QQQ}}40
v40@0:8@16@24@32
v48@0:8@16@24@32@40
v24@0:8^{wisdom_trainer2=iiiBfff{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}B{map<std::__1::basic_string<char>, std::__1::vector<int, std::__1::allocator<int> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<int, std::__1::allocator<int> > > > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<int, std::__1::allocator<int> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<int, std::__1::allocator<int> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<int, std::__1::allocator<int> > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<int, std::__1::allocator<int> > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<int, std::__1::allocator<int> > >, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}^{__sFILE}i}16
f16@0:8
{?="plan"^v"network_index"i}
@"<MTLCommandQueue>"
@"<MTLDevice>"
@"NSObject<OS_dispatch_queue>"
[5Q]
@"<MTLTexture>"
{map<std::__1::basic_string<char>, float, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, float> > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, float> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, float>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"Q}}}
{postprocessing_settings_t="name"{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >="__r_"{__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >="__value_"{__rep=""(?="__l"{__long="__cap_"Q"__size_"Q"__data_"*}"__s"{__short=""(?="__size_"C"__lx"c)"__data_"[23c]}"__r"{__raw="__words"[3Q]})}}}"network"{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >="__r_"{__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >="__value_"{__rep=""(?="__l"{__long="__cap_"Q"__size_"Q"__data_"*}"__s"{__short=""(?="__size_"C"__lx"c)"__data_"[23c]}"__r"{__raw="__words"[3Q]})}}}"do_blend"i"blend_alpha"f"grayscale_i0"i"grayscale_i1"i"temporal_alpha"f"gamma"f"saturation"f"contrast"f"brightness"f"color_transfer_mode"i"width"i"height"i"width_fast"i"height_fast"i"width_capture"i"height_capture"i"width_miniature"i"height_miniature"i"width_fullscreen"i"height_fullscreen"i"width_hd"i"height_hd"i"old_frame_scale"f"noise_strength"f"dyn_noise"i"noise_speed"f"preprocessing_bias_b"f"preprocessing_bias_g"f"preprocessing_bias_r"f"preprocessing_scale"f"preprocessing_old_frame_bias_scale"f"high_quality_scaling"B}
{shared_ptr<Espresso::V9Engine::v9_noise_kernel>="__ptr_"^{v9_noise_kernel}"__cntrl_"^{__shared_weak_count}}
{shared_ptr<Espresso::generic_load_constant_kernel>="__ptr_"^{generic_load_constant_kernel}"__cntrl_"^{__shared_weak_count}}
{shared_ptr<Espresso::blob<float, 1> >="__ptr_"^{blob<float, 1>}"__cntrl_"^{__shared_weak_count}}
^{__IOSurface=}32@0:8^{__CVBuffer=}16^{__CVBuffer=}24
^{__IOSurface=}
@40@0:8@16@24@32
@48@0:8Q16@24@32@40
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
q16@0:8
v24@0:8q16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
@32@0:8f16f20f24f28
v20@0:8f16
{CGPoint="x"d"y"d}
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"NSDictionary"
@48@0:8@16@24@32^@40
@80@0:8@16@24@32@40@48@56@64^@72
@"NSURL"
{vector<FaceLandmarkDetectorPoint, std::__1::allocator<FaceLandmarkDetectorPoint> >=^{FaceLandmarkDetectorPoint}^{FaceLandmarkDetectorPoint}{__compressed_pair<FaceLandmarkDetectorPoint *, std::__1::allocator<FaceLandmarkDetectorPoint> >=^{FaceLandmarkDetectorPoint}}}56@0:8{vImage_Buffer=^vQQQ}16^{vector<FaceLandmarkDetectorPoint, std::__1::allocator<FaceLandmarkDetectorPoint> >=^{FaceLandmarkDetectorPoint}^{FaceLandmarkDetectorPoint}{__compressed_pair<FaceLandmarkDetectorPoint *, std::__1::allocator<FaceLandmarkDetectorPoint> >=^{FaceLandmarkDetectorPoint}}}48
{vector<FaceLandmarkDetectorPoint, std::__1::allocator<FaceLandmarkDetectorPoint> >=^{FaceLandmarkDetectorPoint}^{FaceLandmarkDetectorPoint}{__compressed_pair<FaceLandmarkDetectorPoint *, std::__1::allocator<FaceLandmarkDetectorPoint> >=^{FaceLandmarkDetectorPoint}}}88@0:8{vImage_Buffer=^vQQQ}16{CGRect={CGPoint=dd}{CGSize=dd}}48B80B84
{vector<FaceLandmarkDetectorPoint, std::__1::allocator<FaceLandmarkDetectorPoint> >=^{FaceLandmarkDetectorPoint}^{FaceLandmarkDetectorPoint}{__compressed_pair<FaceLandmarkDetectorPoint *, std::__1::allocator<FaceLandmarkDetectorPoint> >=^{FaceLandmarkDetectorPoint}}}84@0:8{vImage_Buffer=^vQQQ}16{CGRect={CGPoint=dd}{CGSize=dd}}48B80
@48@0:8@16{shared_ptr<Espresso::abstract_context>=^{abstract_context}^{__shared_weak_count}}24i40i44
@40@0:8@16@24i32i36
v48@0:8@16{shared_ptr<Espresso::abstract_context>=^{abstract_context}^{__shared_weak_count}}24i40i44
{vector<std::__1::shared_ptr<Espresso::net>, std::__1::allocator<std::__1::shared_ptr<Espresso::net> > >="__begin_"^{shared_ptr<Espresso::net>}"__end_"^{shared_ptr<Espresso::net>}"__end_cap_"{__compressed_pair<std::__1::shared_ptr<Espresso::net> *, std::__1::allocator<std::__1::shared_ptr<Espresso::net> > >="__value_"^{shared_ptr<Espresso::net>}}}
@24@0:8f16f20
v60@0:8{shared_ptr<Espresso::blob<float, 3> >=^{blob<float, 3>}^{__shared_weak_count}}16{shared_ptr<Espresso::blob<float, 3> >=^{blob<float, 3>}^{__shared_weak_count}}32f48f52f56
d40@0:8@16@24^@32
d16@0:8
v24@0:8d16
^{FaceList={list<vision::DCN::boundingbox, std::__1::allocator<vision::DCN::boundingbox> >={__list_node_base<vision::DCN::boundingbox, void *>=^{__list_node_base<vision::DCN::boundingbox, void *>}^{__list_node_base<vision::DCN::boundingbox, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<vision::DCN::boundingbox, void *> > >=Q}}}
@"EspressoFDOverfeatNetwork"
@36@0:8r*16@24i32
@44@0:8r*16r*24@32i40
@32@0:8{shared_ptr<Espresso::abstract_context>=^{abstract_context}^{__shared_weak_count}}16
@20@0:8i16
v28@0:8B16f20I24
{shared_ptr<Espresso::abstract_context>=^{abstract_context}^{__shared_weak_count}}16@0:8
{shared_ptr<Espresso::abstract_context>="__ptr_"^{abstract_context}"__cntrl_"^{__shared_weak_count}}
v24@0:8@?16
v56@0:8{vImage_Buffer=^vQQQ}16@48
v44@0:8^f16Q24@32B40
{vImage_Buffer=^vQQQ}24@0:8@16
^f24@0:8@16
{map<std::__1::basic_string<char>, vImage_Buffer, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, vImage_Buffer> > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, vImage_Buffer>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, vImage_Buffer>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, vImage_Buffer> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, vImage_Buffer>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, vImage_Buffer>, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"Q}}}
{map<std::__1::basic_string<char>, ETDataPoint_buffer, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, ETDataPoint_buffer> > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, ETDataPoint_buffer>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, ETDataPoint_buffer>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, ETDataPoint_buffer> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, ETDataPoint_buffer>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, ETDataPoint_buffer>, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"Q}}}
I16@0:8
v20@0:8I16
{shared_ptr<std::__1::basic_string<char> >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{__shared_weak_count}}20@0:8i16
^{layer=^^?ii{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{shared_ptr<Espresso::base_kernel>=^{base_kernel}^{__shared_weak_count}}{layer_data={vector<std::__1::shared_ptr<Espresso::abstract_blob_container>, std::__1::allocator<std::__1::shared_ptr<Espresso::abstract_blob_container> > >=^{shared_ptr<Espresso::abstract_blob_container>}^{shared_ptr<Espresso::abstract_blob_container>}{__compressed_pair<std::__1::shared_ptr<Espresso::abstract_blob_container> *, std::__1::allocator<std::__1::shared_ptr<Espresso::abstract_blob_container> > >=^{shared_ptr<Espresso::abstract_blob_container>}}}}{layer_data={vector<std::__1::shared_ptr<Espresso::abstract_blob_container>, std::__1::allocator<std::__1::shared_ptr<Espresso::abstract_blob_container> > >=^{shared_ptr<Espresso::abstract_blob_container>}^{shared_ptr<Espresso::abstract_blob_container>}{__compressed_pair<std::__1::shared_ptr<Espresso::abstract_blob_container> *, std::__1::allocator<std::__1::shared_ptr<Espresso::abstract_blob_container> > >=^{shared_ptr<Espresso::abstract_blob_container>}}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}B{function<void (const std::__1::shared_ptr<Espresso::abstract_batch> &, const Espresso::layer &)>={__value_func<void (const std::__1::shared_ptr<Espresso::abstract_batch> &, const Espresso::layer &)>={type=[32C]}^{__base<void (const std::__1::shared_ptr<Espresso::abstract_batch> &, const Espresso::layer &)>}}}Q{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}}24@0:8@16
{shared_ptr<Espresso::blob<float, 2> >=^{blob<float, 2>}^{__shared_weak_count}}24@0:8@16
{shared_ptr<Espresso::blob<float, 1> >=^{blob<float, 1>}^{__shared_weak_count}}24@0:8@16
v48@0:8@16{shared_ptr<float>=^f^{__shared_weak_count}}24Q40
@32@0:8@16Q24
i28@0:8@16B24
{shared_ptr<Espresso::gradient_builder>=^{gradient_builder}^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<Espresso::gradient_builder>=^{gradient_builder}^{__shared_weak_count}}16
{map<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"Q}}}
{shared_ptr<Espresso::gradient_builder>="__ptr_"^{gradient_builder}"__cntrl_"^{__shared_weak_count}}
@24@0:8^{shared_ptr<Espresso::abstract_blob_container>=^{abstract_blob_container}^{__shared_weak_count}}16
r^{shared_ptr<Espresso::abstract_blob_container>=^{abstract_blob_container}^{__shared_weak_count}}16@0:8
{shared_ptr<Espresso::abstract_blob_container>="__ptr_"^{abstract_blob_container}"__cntrl_"^{__shared_weak_count}}
@"ETModelDef"
{vImage_Buffer=^vQQQ}48@0:8{vImage_Buffer=^vQQQ}16
^f52@0:8{vImage_Buffer=^vQQQ}16B48
@"ETDataPoint"20@0:8i16
@28@0:8@16B24
{map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"Q}}}
v36@0:8r^{map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16i24r^{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}28
^f32@0:8Q16r^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}24
{map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 2> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 2> > > > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 2> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 2> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 2> > > > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 2> > >, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 2> > >, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"Q}}}
@"<ETDataSource>"
@"ETImageDescriptorExtractor"
{map<int, ETDataPoint *, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, ETDataPoint *> > >="__tree_"{__tree<std::__1::__value_type<int, ETDataPoint *>, std::__1::__map_value_compare<int, std::__1::__value_type<int, ETDataPoint *>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, ETDataPoint *> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, ETDataPoint *>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, ETDataPoint *>, std::__1::less<int>, true> >="__value_"Q}}}
@44@0:8@16@24@32B40
{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}16@0:8
@48@0:8@16@24@32@40
f36@0:8@16i24@?28
f36@0:8@16I24@?28
B44@0:8@16I24@28@?36
B44@0:8@16i24@28@?36
B40@0:8@16@24@?32
v28@0:8@16B24
B28@0:8i16^@20
@"ETOptimizerDef"
@"EspressoMetalKernelsCache"
B56@0:8{vImage_Buffer=^vQQQ}16@48
B44@0:8^f16Q24@32B40
^f32@0:8@16^@24
{map<std::__1::basic_string<char>, vImage_Buffer, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, vImage_Buffer> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, vImage_Buffer>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, vImage_Buffer>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, vImage_Buffer> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, vImage_Buffer>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, vImage_Buffer>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16@0:8
v40@0:8{map<std::__1::basic_string<char>, vImage_Buffer, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, vImage_Buffer> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, vImage_Buffer>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, vImage_Buffer>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, vImage_Buffer> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, vImage_Buffer>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, vImage_Buffer>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16
{map<std::__1::basic_string<char>, float_buffer_t, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, float_buffer_t> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, float_buffer_t>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float_buffer_t>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, float_buffer_t> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, float_buffer_t>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float_buffer_t>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16@0:8
v40@0:8{map<std::__1::basic_string<char>, float_buffer_t, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, float_buffer_t> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, float_buffer_t>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float_buffer_t>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, float_buffer_t> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, float_buffer_t>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float_buffer_t>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16
{map<std::__1::basic_string<char>, float_buffer_t, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, float_buffer_t> > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, float_buffer_t>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float_buffer_t>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, float_buffer_t> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, float_buffer_t>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float_buffer_t>, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"Q}}}
@60@0:8Q16Q24Q32f40f44f48f52B56
@24@0:8^{CGImage=}16
v24@0:8^{CGImage=}16
{vimage2espresso_param="scale"f"center_mean"i"is_image_bgr"i"is_network_bgr"i"bias_r"f"bias_g"f"bias_b"f"bias_a"f"metal_output_plane"i"width"I"height"I"rowbytes"I"scaleXY""translateXY""rotate_deg"i"use_direct_cvpixelbuffer"i"no_alpha_premultiply"i}
{shared_ptr<Espresso::blob_cpu>="__ptr_"^{blob_cpu}"__cntrl_"^{__shared_weak_count}}
^{CGColorSpace=}
@32@0:8Q16^@24
@"NSDictionary"32@0:8Q16^@24
@60@0:8@16@24@32B40@44@52
{vector<std::__1::pair<NSString *, unsigned long>, std::__1::allocator<std::__1::pair<NSString *, unsigned long> > >="__begin_"^{pair<NSString *, unsigned long>}"__end_"^{pair<NSString *, unsigned long>}"__end_cap_"{__compressed_pair<std::__1::pair<NSString *, unsigned long> *, std::__1::allocator<std::__1::pair<NSString *, unsigned long> > >="__value_"^{pair<NSString *, unsigned long>}}}
{vector<NSString *, std::__1::allocator<NSString *> >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<NSString *__strong *, std::__1::allocator<NSString *> >="__value_"^@}}
{linear_congruential_engine<unsigned int, 48271, 0, 2147483647>="__x_"I}
@"ETImagePreprocessor"
@48@0:8r^{unordered_map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16Q24Q32^@40
{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16@0:8
v56@0:8{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16
{unordered_map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16@0:8
v56@0:8{unordered_map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16
v40@0:8{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}16
{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >="__begin_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}"__end_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}"__end_cap_"{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >="__value_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}
{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > > > >="__table_"{__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > > > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::hash<std::__1::basic_string<char> >, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >="__value_"f}}}
v32@0:8^v16Q24
B24@0:8Q16
@"NSArray"32@0:8@"NSArray"16@"NSDictionary"24
@24@0:8@"NSDictionary"16
v32@0:8@"NSArray"16@"NSArray"24
v40@0:8@"<MTLCommandBuffer>"16@"NSArray"24@"NSArray"32
@"NSArray"24@0:8@"NSArray"16
@48@0:8^v16Q24@32@40
@40@0:8^{__CVBuffer=}16@24^@32
@32@0:8{shared_ptr<Espresso::abstract_blob_container>=^{abstract_blob_container}^{__shared_weak_count}}16
v48@0:8{vImage_Buffer=^vQQQ}16
{vector<std::__1::shared_ptr<unsigned char>, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >=^{shared_ptr<unsigned char>}^{shared_ptr<unsigned char>}{__compressed_pair<std::__1::shared_ptr<unsigned char> *, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >=^{shared_ptr<unsigned char>}}}16@0:8
v40@0:8{vector<std::__1::shared_ptr<unsigned char>, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >=^{shared_ptr<unsigned char>}^{shared_ptr<unsigned char>}{__compressed_pair<std::__1::shared_ptr<unsigned char> *, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >=^{shared_ptr<unsigned char>}}}16
{float_buffer_t=^fQB}16@0:8
v40@0:8{float_buffer_t=^fQB}16
{shared_ptr<Espresso::blob<float, 4> >=^{blob<float, 4>}^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<Espresso::blob<float, 4> >=^{blob<float, 4>}^{__shared_weak_count}}16
@"NSNumber"
{shared_ptr<Espresso::blob<float, 4> >="__ptr_"^{blob<float, 4>}"__cntrl_"^{__shared_weak_count}}
{vector<std::__1::shared_ptr<unsigned char>, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >="__begin_"^{shared_ptr<unsigned char>}"__end_"^{shared_ptr<unsigned char>}"__end_cap_"{__compressed_pair<std::__1::shared_ptr<unsigned char> *, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >="__value_"^{shared_ptr<unsigned char>}}}
{float_buffer_t="ptr"^f"size"Q"free_when_done"B}
@40@0:8q16@24^@32
B32@0:8^{_mxnetTools_imageID_t_=[2Q]}16^@24
B24@0:8^@16
{_mxnetTools_imageID_t_=[2Q]}16@0:8
{_mxnetTools_recordHeader_t_=II}16@0:8
v24@0:8{_mxnetTools_recordHeader_t_=II}16
{_mxnetTools_imageHeader_t_=If{_mxnetTools_imageID_t_=[2Q]}}16@0:8
v40@0:8{_mxnetTools_imageHeader_t_=If{_mxnetTools_imageID_t_=[2Q]}}16
@"NSFileHandle"
{_mxnetTools_recordHeader_t_="magic"I"lrecord"I}
{_mxnetTools_imageHeader_t_="flag"I"label"f"imageID"{_mxnetTools_imageID_t_="ID"[2Q]}}
@24@0:8r*16
@40@0:8r*16r*24@32
@"<MTLLibrary>"
{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}
@"EspressoProfilingLayerSupportInfo"
v24@0:8#16
@"EspressoBrickTensorShape"
^f16@0:8
v24@0:8^f16
{shared_ptr<Espresso::fast_pyramid_resizer>=^{fast_pyramid_resizer}^{__shared_weak_count}}20@0:8i16
{shared_ptr<Espresso::net>=^{net}^{__shared_weak_count}}20@0:8i16
d20@0:8i16
{net_strides_configuration=i{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}}16@0:8
v28@0:8f16B20I24
v60@0:8@16@24i32i36i40f44B48B52I56
v60@0:8^{shared_ptr<Espresso::net>=^{net}^{__shared_weak_count}}16@24@32{shared_ptr<Espresso::abstract_context>=^{abstract_context}^{__shared_weak_count}}40i56
{shared_ptr<Espresso::blob<float, 3> >=^{blob<float, 3>}^{__shared_weak_count}}20@0:8i16
v32@0:8r^{shared_ptr<Espresso::blob<unsigned char __attribute__((ext_vector_type(4))), 2> >=^{blob<unsigned char __attribute__((ext_vector_type(4))), 2>}^{__shared_weak_count}}16@24
v36@0:8r^{vImage_Buffer=^vQQQ}16@24B32
v36@0:8r^{shared_ptr<Espresso::blob<unsigned char __attribute__((ext_vector_type(4))), 2> >=^{blob<unsigned char __attribute__((ext_vector_type(4))), 2>}^{__shared_weak_count}}16@24B32
v32@0:8{shared_ptr<Espresso::fast_pyramid_resizer>=^{fast_pyramid_resizer}^{__shared_weak_count}}16
v40@0:8{shared_ptr<Espresso::fast_pyramid_resizer>=^{fast_pyramid_resizer}^{__shared_weak_count}}16@32
v36@0:8i16r^{shared_ptr<Espresso::net>=^{net}^{__shared_weak_count}}20r^{shared_ptr<Espresso::fast_pyramid_resizer>=^{fast_pyramid_resizer}^{__shared_weak_count}}28
v28@0:8i16r^{shared_ptr<Espresso::fast_pyramid_resizer>=^{fast_pyramid_resizer}^{__shared_weak_count}}20
v36@0:8{shared_ptr<Espresso::blob<float, 4> >=^{blob<float, 4>}^{__shared_weak_count}}16f32
B20@0:8i16
v32@0:8{shared_ptr<Espresso::abstract_context>=^{abstract_context}^{__shared_weak_count}}16
{vector<std::__1::pair<unsigned long long, unsigned long long>, std::__1::allocator<std::__1::pair<unsigned long long, unsigned long long> > >="__begin_"^{pair<unsigned long long, unsigned long long>}"__end_"^{pair<unsigned long long, unsigned long long>}"__end_cap_"{__compressed_pair<std::__1::pair<unsigned long long, unsigned long long> *, std::__1::allocator<std::__1::pair<unsigned long long, unsigned long long> > >="__value_"^{pair<unsigned long long, unsigned long long>}}}
{vector<double, std::__1::allocator<double> >="__begin_"^d"__end_"^d"__end_cap_"{__compressed_pair<double *, std::__1::allocator<double> >="__value_"^d}}
{vector<std::__1::shared_ptr<Espresso::fast_pyramid_resizer>, std::__1::allocator<std::__1::shared_ptr<Espresso::fast_pyramid_resizer> > >="__begin_"^{shared_ptr<Espresso::fast_pyramid_resizer>}"__end_"^{shared_ptr<Espresso::fast_pyramid_resizer>}"__end_cap_"{__compressed_pair<std::__1::shared_ptr<Espresso::fast_pyramid_resizer> *, std::__1::allocator<std::__1::shared_ptr<Espresso::fast_pyramid_resizer> > >="__value_"^{shared_ptr<Espresso::fast_pyramid_resizer>}}}
{vector<std::__1::shared_ptr<Espresso::blob<float, 3> >, std::__1::allocator<std::__1::shared_ptr<Espresso::blob<float, 3> > > >="__begin_"^{shared_ptr<Espresso::blob<float, 3> >}"__end_"^{shared_ptr<Espresso::blob<float, 3> >}"__end_cap_"{__compressed_pair<std::__1::shared_ptr<Espresso::blob<float, 3> > *, std::__1::allocator<std::__1::shared_ptr<Espresso::blob<float, 3> > > >="__value_"^{shared_ptr<Espresso::blob<float, 3> >}}}
{pair<unsigned long long, unsigned long long>="first"Q"second"Q}
{net_strides_configuration="num_layer"i"kernel_size"{vector<int, std::__1::allocator<int> >="__begin_"^i"__end_"^i"__end_cap_"{__compressed_pair<int *, std::__1::allocator<int> >="__value_"^i}}"stride"{vector<int, std::__1::allocator<int> >="__begin_"^i"__end_"^i"__end_cap_"{__compressed_pair<int *, std::__1::allocator<int> >="__value_"^i}}"pad"{vector<int, std::__1::allocator<int> >="__begin_"^i"__end_"^i"__end_cap_"{__compressed_pair<int *, std::__1::allocator<int> >="__value_"^i}}}
{vector<int, std::__1::allocator<int> >="__begin_"^i"__end_"^i"__end_cap_"{__compressed_pair<int *, std::__1::allocator<int> >="__value_"^i}}
@"NSObject<OS_dispatch_semaphore>"
