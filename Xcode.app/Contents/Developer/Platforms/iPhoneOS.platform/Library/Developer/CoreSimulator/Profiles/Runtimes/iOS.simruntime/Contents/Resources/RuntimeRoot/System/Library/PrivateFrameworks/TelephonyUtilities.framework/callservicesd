%@ %@
debugKey
debugData
CSDTransactionManager
TUCallCenter_allCalls
com.apple.calls.callservicesd.
%@:%@
handleCallStatusChanged
handleSessionStateChanged
%@-%@
com.apple.telephonyutilities.callservicesdaemon.csdavconference
@"<CSDAVConferenceProvider>"24@?0@"NSUUID"8@"NSObject<OS_dispatch_queue>"16
<%@ %p state=%d conference=%@>
v24@?0@"NSDictionary"8@"NSError"16
<%@ %p caller=%d capabilities=%@ deviceRole=%d>
TUCallUserActivityCTInfoKey
TUCallUserActivityServiceKey
kCTCallDirection
kCTCallDirectionOutgoing
kCTCallDirectionIncoming
kCTCallPhoneNumber
com.apple.coretelephony
version
identifier
handle
avcData
isMomentsAvailable
v24@?0@"NSString"8d16
ADClientSetValueForDistributionKey
AggregateDictionary
%@.%@.%f
com.apple.backboard.proximity.changed
CSDProximityController.m
Invalid parameter not satisfying: %@
callCenterObserver != nil
interfaceOrientationObserver != nil
routeController != nil
proximitySensorCoveredObserver != nil
queue != nil
voiceOverObserver != nil
v16@?0@"FBSOrientationUpdate"8
B8@?0
v12@?0i8
ConferenceID:
kCMSessionAudioCategory_PlayAndRecord_NoBluetooth
MediaExperience
kCMSessionAudioMode_VoiceChat
kCMSessionAudioMode_VideoChat
idx (%tu) is out of range (%tu)
call_uuid
provider_id
is_incoming
is_held
has_connected
has_ended
is_currently_grouped
duration_ms
setup_time_ms
connection_time_ms
features
end_reason
face_time_transport_type
telephony_transport_type
provider_error_code
is_relay
provider_ended_reason
has_started_connecting
ids_link_type
relay_device_route_change
CSDIDSLinkTypeNone
CSDIDSLinkTypeMagnet
CSDIDSLinkTypeInfraWifi
CSDIDSLinkTypeQuickRelayWiFi
CSDIDSLinkTypeQuickRelayWWAN
CSDIDSLinkTypeUnknown
CSDIDSLinkTypeIPsec
CSDIDSLinkTypeSPP
(unknown: %i)
IMDaemonDidConnectNotification
IMAVCore
IMAVChatStateChangedNotification
IMAVChatParticipantReceivedFirstFrameNotification
IMAVChatParticipantInvitationDeliveredNotification
IMAVChatParticipantCallInfoChangedNotification
IMAVChatConferenceIDChangedNotification
IMAVChatConferenceMetadataUpdatedNotification
IMAVChatMayRequireBreakBeforeMakeChangedNotification
IMAVChatParticipantInFrequencyChangedNotification
IMAVChatParticipantOutFrequencyChangedNotification
IMAVController
IMPreferredAccountForService
IMCore
IMAVChat
_NSStringDescriptionForIMAVChatEndedReason
CALL_FAILED_NO_NETWORK_CONNECTION_TITLE
ALERT_VIDEO_FAILED_NO_LOCAL_NETWORK_WLAN_MESSAGE
CALL_FAILED_NO_LOCAL_NETWORK_WLAN_MESSAGE
ALERT_VIDEO_FAILED_NO_LOCAL_NETWORK_WIFI_MESSAGE
CALL_FAILED_NO_LOCAL_NETWORK_WIFI_MESSAGE
ALERT_VIDEO_FAILED_NO_LOCAL_WLAN_MESSAGE
CALL_FAILED_NO_LOCAL_WLAN_MESSAGE
ALERT_VIDEO_FAILED_NO_LOCAL_WIFI_MESSAGE
CALL_FAILED_NO_LOCAL_WIFI_MESSAGE
ALERT_VIDEO_FAILED_TITLE
CALL_FAILED_TITLE
ALERT_VIDEO_FAILED_BAD_NONCE_TIMESTAMP
CALL_FAILED_BAD_NONCE_TIMESTAMP
ALERT_VIDEO_FAILED_UPDATE_LOCATION_MESSAGE
CALL_FAILED_UPDATE_LOCATION_MESSAGE
ALERT_VIDEO_FAILED_REGION_INFO_INSUFFICIENT
CALL_FAILED_REGION_INFO_INSUFFICIENT
ALERT_VIDEO_FAILED_REMOTE_INCOMPATIBLE_MESSAGE_%@_NUMBER
ALERT_VIDEO_FAILED_REMOTE_INCOMPATIBLE_MESSAGE_%@_NAME
ALERT_VIDEO_NOT_AVAILABLE_TITLE
CALL_NOT_AVAILABLE_TITLE
ALERT_VIDEO_FAILED_NOT_AVAILABLE_MESSAGE_%@_NUMBER
CALL_FAILED_%@_NOT_AVAILABLE_MESSAGE_NUMBER
ALERT_VIDEO_FAILED_NOT_AVAILABLE_MESSAGE_%@_NAME
CALL_FAILED_%@_NOT_AVAILABLE_MESSAGE_NAME
@"<CSDAVCSession>"32@?0@"NSString"8@"<CSDAVCSessionDelegate>"16@"NSObject<OS_dispatch_queue>"24
<%@ %p
 UUID=%@
 groupUUID=%@
 messagesGroupUUID=%@
 state=%ld
 avcSessionToken=%ld
 avcSessionIdentifier=%@
 isLocallyCreated=%d
 hasJoined=%d]
 isUplinkMuted=%d
 isAudioEnabled=%d
 isVideoEnabled=%d
 localMember=%@
 debugLink=%@
 remoteMembers=%@
 memberIdentifiers=%@
 activeRemoteParticipants=%@
 conversationReport=%@
Calling -[CSDConversation leave]
DEBUG_LINK_BASE_URL
facetime-debug://debug
Cleaning up from AVCSession failure.
Timed out waiting for sessions to end in leaving state (left conversation for reason: %@). Please file a bug on [TelephonyUtilities | New Bugs] so we can direct it to the appropriate team.
NSErrorUserInfoDetailedError
AVCSession started but we weren't trying to join the conversation.
AVCSession failed to start.
CSDRelayIDSActiveAccountsChanged
CSDRelayPairedDeviceConnectedNotification
com.apple.private.alloy.phonecontinuity
supportsHolding
supportsGrouping
supportsUngrouping
supportsDTMF
supportsUnambiguousMultiPartyState
supportsAddCall
supportsSendingToVoicemail
destinationID
uniqueProxyIdentifier
sourceIdentifier
wantsHoldMusic
dtmfKey
disconnectedReason
v32@?0@"NSString"8@16^B24
NoAction
IncomingCall
DialCall
CallDialed
AnswerCall
CallAnsweredElsewhere
CallDisconnected
PlayDTMFToneForKey
CallConnected
DisconnectCall
PullRelayingCalls
HoldCall
UnholdCall
GroupCall
UngroupCall
ResetWantsHoldMusic
SwapCalls
UpdateCallModel
DeviceUnavailable
EndActiveAndAnswer
EndHeldAndAnswer
DisconnectCurrentCallAndActivateHeld
DisconnectAllCalls
ResetState
HardPauseDigitsAvailability
SendHardPauseDigits
UpdateRemoteCallState
SuppressRingtone
RequestCallContext
CallStartedConnecting
PushHostedCalls
PullHostedCalls
PushRelayingCalls
UpdateCallContext
NeedsManualInCallSoundsChange
InvitationSent
HoldActiveAndAnswer
UpdateCallDisplayContext
SetUplinkMuted
UpdateRemoteUplinkMuted
UpdateSystemVolume
UpdateSupportsTTYWithVoice
SetTTYType
RequestAction
UpdateRoutes
PickRoute
DowngradeToAudio
value
normalizedValue
isoCountryCode
None
Generic
PhoneNumber
EmailAddress
com.apple.telephonyutilities.callservicesd.FaceTimeProvider
com.apple.request.hipuncap
v16@?0@?<v@?>8
gk-invitation-break-before-make-timeout
StoreDemoMode
com.apple.demo-settings
RetailDemoNotification
CALL_ENDED
CALL_ENDED_DEMO_EXPLANATION
ShouldSuppress
ShouldAllow
com.apple.telephonyutilities.callservicesd.statusbarmanager
v16@?0@"STCallingStatusDomainUserInteraction"8
InCallService
hasAdoptedModernInCallAPI
v16@?0@"STMutableCallingStatusDomainData"8
CSDCarrierBundlePhoneNumberProviderController
B24@?0@"CSDCarrierBundlePhoneNumberProvider"8@"NSDictionary"16
SilenceUnknownCallersOverrideList
timestamp
bundle_id
failure_reason
action_type
provider_was_reset
CSDRelayIDSDualSession.m
Use another initializer instead
forceBTClassic
non-nil
com.apple.telephonyutilities.callservicesd.thumpercapabilitiesmonitor
NPSDomainAccessor
NanoPreferencesSync
thumperCallingAllowedOnDefaultPairedDevice
thumperCallingCapabilitiesStates
PreviousDefaultPairedDeviceUniqueID
uniqueIDOverride
com.apple.telephonyutilities.callservicesd.thumperpushhandler.secondarydevicethumpersupported
THUMPER_CALLING
NOT_NOW
TURN_ON
MAKE_RECEIVE_THUMPER_CELLULAR_FOR_CARRIER_%@
MAKE_RECEIVE_THUMPER_FOR_CARRIER_%@
MAKE_RECEIVE_THUMPER_CELLULAR
MAKE_RECEIVE_THUMPER
v16@?0@"IMUserNotification"8
com.apple.telephonyutilities.callservicesd.thumperpushhandler.secondarydevicethumperenabled
THUMPER_EMERGENCY_ADDRESS_INFO_TITLE
THUMPER_EMERGENCY_ADDRESS_INFO_MESSAGE
PREFERENCES_BUTTON_TITLE
PSFaceTimeSettingsDetail
Preferences
<%@ %p invite=%d suppressUI=%d videoEnabled=%d wantsStagingArea=%d shouldShowDebugOverlay=%d upgrade=%d momentsAvailable=%d upgradeSessionUUID=%@>
com.apple.telephonyutilities.callservicesd.accountscontroller
    faceTimeIDMatchesAppleID: %@
    faceTimeAudioAvailability: %ld
    faceTimeVideoAvailability: %ld
    outgoingCallerID: %@
B24@?0@"NSString"8^B16
B32@?0@"NSString"8Q16^B24
IMStringIsPhoneNumber
IMFoundation
CSDPauseDigits.m
%s is not available. Use a designated initializer instead.
-[CSDPauseDigits init]
<%@ %p digits=%@ isHardPause=%d>
com.apple.telephonyutilities.callservicesd.callprovidermanagerxpcserver
v16@?0@"CSDClient"8
com.apple.telephonyutilities.callservicesdaemon.callprovidermanager
v24@?0@"CSDClient"8@"<TUCallProviderManagerXPCClient>"16
com.apple.private.alloy.facetime.video
@"CSDAVConference"8@?0
CSDIDSChat.m
Cannot create an incoming chat with an outgoing session: %@
Cannot create an outgoing chat with an incoming session: %@
disableFaceTimeKeyExchange
Unknown
Invite
<%@ %p 
%@=%@
protoCallModelState
protoService
protoWantsHoldMusic
protoCannotBeAnswered
protoDTMFKey
protoDisconnectedReason
OBSOLETE_conferenceIdentifier
protoVoicemail
callerNameFromNetwork
protoCall
hardPauseDigits
hardPauseState
receivedMessageType
protoProtocolVersion
protoShouldSuppressRingtone
dummyPayload
hostCallCreationTime
messageSendTime
protoNeedsManualInCallSounds
protoCannotRelayAudioOrVideoOnPairedDevice
protoExpectedEndpointOnMessagingDevice
contactIdentifier
protoCallCapabilitiesState
protoSoundRegion
protoEmergency
otherUniqueProxyIdentifiers
protoCallModel
protoSOS
protoDisplayContext
inviteData
protoProvider
protoVideo
protoUplinkMuted
protoRemoteUplinkMuted
systemVolume
localSenderIdentityUUIDString
localSenderIdentityAccountUUIDString
protoTTYType
protoSupportsTTYWithVoice
requestActionType
routes
route
endpointIDSDestinationURIs
protoPriority
protoOriginatingUIType
%@.%@.%p
idx (%lu) is out of range (%lu)
localizedName
bundleURLString
maximumCallGroups
maximumCallsPerCallGroup
supportsAudioOnly
supportsAudioAndVideo
supportsEmergency
supportsVoicemail
ringtoneSoundURLString
originalRingtoneSoundURLString
handoffIdentifier
protoSupportedHandleType
emergencyLabeledHandles
supportsRecents
prioritizedSenderIdentities
emergencyHandles
    dialingIDSDevice: %@
@"CSDMessagingRelayMessage"8@?0
v20@?0i8^B12
v20@?0B8@"NSDictionary"12
com.apple.notifyd.matching
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.telephonyutilities.callservicesd.kFZACAppBundleIdentifierLaunchNotification
com.apple.distnoted.matching
com.apple.callhistory.save.distributed.notification
com.apple.telephonyutilities.callservicesdaemon.app-installed
com.apple.telephonyutilities.callservicesdaemon.app-uninstalled
com.apple.CTTelephonyCenter
com.apple.telephonyutilities.callservicesd.reportingcontroller
proximity-sensor
com.apple.telephonyutilities.callservicesdaemon.connectionrequest
com.apple.telephonyutilities.callservicesd.calls
com.apple.language.changed
availability
CSDMomentsAvailabilityUnknown
CSDMomentsAvailabilityUnavailable
CSDMomentsAvailabilityRestricted
CSDMomentsAvailabilityAvailable
CSDIDSPendingChatKey
CSDIDSPendingCallKey
CSDIDSPendingChatUUIDKey
CSDIDSPendingMessageDidReceiveInviteNotification
CSDIDSPendingMessageDidReceiveCancelNotification
CSDGroupIDSPendingMessageDidReceiveInviteNotification
@"<CSDIDSDualSessionProvider>"24@?0@"IDSSession"8@"NSObject<OS_dispatch_queue>"16
NetworkAvailabilityCheckOverrideValue
allowed
ignored
audio
CADisplay
QuartzCore
SKEBlob
mediaBlob
callInfoBlob
CSDIDSDualSessionStateChangedNotification
CSDIDSDualSession.m
-[CSDIDSDualSession init]
%@ isInitiator=%d state=%d remoteProtocolVersion=%@>
com.apple.telephonyutilities.callservicesd.awdreporter
v20@?0I8@"PBCodable"12
@"PBCodable"8@?0
v12@?0I8
kCallSubType
kCallSubTypeWifi
kCallSubTypeVoLTE
kCallSubTypeTelephony
%@=%ld
@"NSString"16@?0@"NSString"8
CSDFaceTimeIDSProviderDelegate.m
%s is not available. Use an available initializer instead.
-[CSDFaceTimeIDSProviderDelegate init]
@"<CSDIDSService>"12@?0B8
B16@?0@"IDSAccount"8
@"<CSDIDSDualSessionProvider>"40@?0@"IDSAccount"8@"NSSet"16@"NSDictionary"24@"NSObject<OS_dispatch_queue>"32
@"<CSDIDSChat>"48@?0@"CSDExternalIDSDualSession"8@"NSUUID"16@"TUHandle"24B32B36@"NSUUID"40
CSDFileTransferringMetadataKeyIsDirectory
CSDFileTransferringMetadataKeyUserData
com.apple.telephonyutilities.callservicesd.csdfiletransfercontroller
v16@?0@"NSURL"8
directory
file
v16@?0@"IMFileCopier"8
CSDCallSourceFetcher.m
%s is not available. Use another initializer instead.
-[CSDCallSourceFetcher init]
iPod
IPOD
iPad
IPAD
iPhone
IPHONE
THUMPER_SERVICE_NAME
ENTER_CODE_FOR_%@
ALLOW
CANCEL
PrimaryDeviceNotification
THUMPER_PUSH_HANDLER_CONSENT_ALERT_MESSAGE
THUMPER_PUSH_HANDLER_CONSENT_ALERT_TITLE
THUMPER_PUSH_HANDLER_CONSENT_ALERT_ENABLE
THUMPER_PUSH_HANDLER_CONSENT_ALERT_CANCEL
SecondaryDeviceNotification
RECEIVE_THUMPER_CALLS_FROM_PHONE_NUMBER_ENTER_CODE_%@_%@
THUMPER_PIN_EXCHANGE_REQUEST_FAILED_TITLE
THUMPER_PIN_EXCHANGE_REQUEST_FAILED_MESSAGE
protoStatus
protoConferenced
protoTimeConnected
protoOutgoing
protoHasSentInvitation
kCMSessionAudioMode_RemoteVoiceChat
com.apple.telephonyutilities.callservicesd.callhistorymanagerxpcserver
com.apple.telephonyutilities.callservicesdaemon.callhistorymanager
-[CSDCallHistoryManagerXPCServer updateOutgoingLocalParticipantUUID:forCallsWithOutgoingLocalParticipantUUID:]
CSDPauseDigitsQueue.m
-[CSDPauseDigitsQueue init]
 baseDestinationID=%@
 originalPauseDigitsString=%@
 pauseDigits=%@
** TUAssertion failure: %@
callservicesd is attempting to create an XPC client for itself.
CSDXPCClient.m
%@ entitlementCapabilities=%@
RTTTelephonyUtilities
RTTUtilities
CSDIDSInitialLinkTypeKey
CSDIDSInputAudioPowerSpectrumTokenKey
CSDIDSOutputAudioPowerSpectrumTokenKey
members
message
messagesGroupUUIDString
messagesGroupName
PHPhotoLibrary
Photos
PHAssetCreationRequest
PHAssetResourceCreationOptions
CallState
status
bundleID
providerIdentifier
providerContext
hostedOnCurrentDevice
endpointOnCurrentDevice
callStart
callStop
callForegrounded
callBackgrounded
CSDFaceTimeProviderDelegate.m
-[CSDFaceTimeProviderDelegate init]
-[CSDVoIPApplication init] is not supported. Use -[CSDVoIPApplication initWithBundleIdentifier:] instead
CSDVoIPApplication.m
13.0
com.apple.developer.pushkit.unrestricted-voip
com.apple.developer.pushkit.unrestricted-voip-regulatory
<%@ %p bundleIdentifier=%@ environment=%@ client=%@ token=%@ pendingMessageContextCount=%lu>
namePrefix
givenName
middleName
familyName
nameSuffix
nickname
phoneticRepresentation
v20@?0i8q12
FACETIME_VIDEO_DURATION_PREAMBLE
FACETIME_AUDIO_DURATION_PREAMBLE
DURATION_PREAMBLE
CSDRelayConferenceLocalFrequencyChangedNotification
CSDRelayConferenceRemoteFrequencyChangedNotification
CSDRelayConferenceLocalMeterLevelChangedNotification
CSDRelayConferenceRemoteMeterLevelChangedNotification
CSDRelayConferenceMutedChangedNotification
CSDRelayConferenceSendingAudioChangedNotification
CSDRelayConferenceConnectionWillCloseNotification
CSDRelayConferenceConnectionDidCloseNotification
CSDRelayConferenceConnectionDidReceiveDataNotification
CSDRelayConferenceConnectionDidReceiveDataNotificationDataKey
com.apple.telephonyutilities
Conference cleaned up before handling a didStart with error: %@
CallServices
CSDSandboxExtensionDirectory.m
-[CSDSandboxExtensionDirectory init]
com.apple.MobileAsset.ProductKit
Identifier
DA3CF105-9C79-4988-959F-D597CFD9F0DE
VERSION
v16@?0q8
CSDPinExchangeCompressedDataKey
CSDPinExchangeActionKey
CSDPinExchangeCallerIDKey
CSDPinExchangePinKey
CSDPinExchangeActionRequestPIN
CSDPinExchangeActionSendPIN
CSDPinExchangeActionOneTimeReminder
CSDPinExchangeActionApproved
CSDPinExchangeActionUnapproved
CSDPinExchangeActionCancelledPrimary
CSDPinExchangeActionCancelledSecondary
v20@?0B8@"NSString"12
com.apple.telephonyutilities.callservicesd.pinexchangeerror
INCORRECT_PIN_ENTERED
THUMPER_MISMATCHED_ACCOUNTS
MAX_SLOTS_FILLED
completion_time_ms
state
com.apple.telephonyutilities.callservicesd.callcapabilities
com.apple.telephonyutilities.callservicesdaemon.callcapabilities
State: %@
Telephony capabilities: %@
Accounts controller: %@
Paired Host Device State: %@
v24@?0@"CSDClient"8@"<TUCallCapabilitiesXPCClient>"16
-[CSDCallCapabilities setRelayCallingEnabled:]
-[CSDCallCapabilities setRelayCallingEnabled:forDeviceWithID:]
-[CSDCallCapabilities setWiFiCallingEnabled:forSenderIdentityWithUUID:]
-[CSDCallCapabilities setWiFiCallingRoamingEnabled:forSenderIdentityWithUUID:]
-[CSDCallCapabilities setVoLTECallingEnabled:forSenderIdentityWithUUID:]
-[CSDCallCapabilities setThumperCallingEnabled:forSenderIdentityWithUUID:]
-[CSDCallCapabilities setThumperCallingAllowed:onSecondaryDeviceWithID:forSenderIdentityWithUUID:]
-[CSDCallCapabilities setThumperCallingAllowedOnDefaultPairedDevice:forSenderIdentityWithUUID:]
-[CSDCallCapabilities endEmergencyCallbackMode]
-[CSDCallCapabilities invalidateAndRefreshWiFiCallingProvisioningURLForSenderIdentityWithUUID:]
-[CSDCallCapabilities invalidateAndRefreshThumperCallingProvisioningURLForSenderIdentityWithUUID:]
-[CSDCallCapabilities requestPinFromPrimaryDevice]
-[CSDCallCapabilities cancelPinRequestFromPrimaryDevice]
disableSupportsPrimaryCalling
forceSupportsPrimaryCalling
telephony
disableSupportsBasebandCalling
forceSupportsBasebandCalling
disableSupportsCellularData
forceSupportsCellularData
disableDisplayingTelephonyCallSupport
forceDisplayingTelephonyCallSupport
disableDisplayingFaceTimeAudioCallSupport
forceDisplayingFaceTimeAudioCallSupport
disableDisplayingFaceTimeVideoCallSupport
forceDisplayingFaceTimeVideoCallSupport
disableCanEnableWiFiCalling
forceCanEnableWiFiCalling
disableCanEnableVoLTECalling
forceCanEnableVoLTECalling
disableCanEnableThumperCalling
forceCanEnableThumperCalling
q24@?0@"TUCloudCallingDevice"8@"TUCloudCallingDevice"16
relayCallingDisabled
relayCallingDisabledForDeviceID
pairedHostDeviceState
CSDCallMayRequireBreakBeforeMakeChangedNotification
CSDCallHasStartedOutgoingChangedNotification
CSDCallHasAudioInterruptionChangedNotification
CSDCallAudioInterruptionPropertiesChangedNotification
CSDCallLocalPreviewStoppedNotification
CSDCallsWillEnterBackgroundNotification
CSDCallEnteredForegroundNotification
CSDCallRemoteParticipantJoinedNotification
CSDCallRemoteParticipantLeftNotification
CSDCallMetricsKnownContact
CSDCallMetricsSiriSuggested
CSDCallMetricsReturnedCall
CSDCallMetricsOwnNumber
CSDCallMetricsVerifiedAppleCare
CSDCallMetricsCarrierNumber
CSDCall.m
dialRequest is invalid: %@
SFCoordinatedAlertRequest
Sharing
v28@?0@"NSError"8B16@"NSDictionary"20
CSDRouteManagerPreferredRouteChangedNotification
com.apple.telephonyutilities.callservicesd.routemanager
AVSystemController_PickableRoutesDidChangeNotification
Celestial
AVSystemController_PreferredExternalRouteDidChangeNotification
AVSystemController_CarPlayIsConnectedDidChangeNotification
AVAudioSessionMediaServicesWereResetNotification
AVFoundation
PhoneCall
StarkCapability
AVSystemController
AVSystemController_CarPlayIsConnectedAttribute
UUIDString
groupUUIDString
locallyCreated
initiator
localMember
remoteMembers
activeRemoteParticipants
debugLink
reportData
timebase
com.apple.telephonyutilities.callservicesd.conversationmanager
@"CSDIDSGroupSessionProvider"48@?0@"NSString"8@"NSArray"16@"NSString"24@"IDSAccount"32@"NSObject<OS_dispatch_queue>"40
@"CSDConversation"88@?0@"NSUUID"8@"NSUUID"16@"NSUUID"24B32@"TUConversationMember"36@"TUHandle"44@"NSSet"52@"CSDIDSGroupSession"60@"NSObject<OS_dispatch_queue>"68B76@"TUConversationReport"80
B40@?0@"NSData"8@"IDSAccount"16@"NSSet"24@"NSString"32
@"NSSet"8@?0
@"TUHandle"8@?0
v76@?0@"NSUUID"8@"NSUUID"16@"NSUUID"24B32@"TUConversationMember"36@"TUHandle"44@"NSArray"52@"NSArray"60@"TUConversationReport"68
v32@?0@"NSUUID"8@"CSDConversation"16^B24
-[CSDConversationManager processJoinUpdate:]
-[CSDConversationManager processUpdateMembersUpdate:]
This call's call history identifier is nil
CHRecentCall_CSD.m
!(call_category == %@ && service_provider == %@)
protocolVersion
messageType
callService
latencyMs
CSDRelayDeviceRouteTypeMac
CSDRelayDeviceRouteTypeiPhone
CSDRelayDeviceRouteTypeiPad
CSDRelayDeviceRouteTypeiPod
CSDRelayDeviceRouteTypeWatch
CSDRelayDeviceRouteTypeAudioAccessory
voip
com.apple.developer.networking.networkextension
app-push-provider
protoWantsVideo
OBSOLETE_protoMomentsAvailable
protoSenderMuteUplink
protoShouldSuppressInCallUI
protoMomentsV2Available
protoUpgradeSessionUUID
B16@?0@"TURoute"8
<%@ %p category=%@ mode=%@>
v32@?0@"TURoute"8Q16^B24
v24@?0@"TURoute"8^B16
com.apple.private.alloy.facetime.audio
call_info
call_info_source
call_directory_provider_bundle_id
CSDCallInfoSourceNone
CSDCallInfoSourceContacts
CSDCallInfoSourceMaps
CSDCallInfoSourceSuggestions
CSDCallInfoSourceCallDirectory
CSDCallInfoSourceLocation
faceTimeAudioAvailable
faceTimeVideoAvailable
00000000-0000-0000-0000-000000000000
com.apple.telephonyutilities.callservicesd.incomingcallfilter
@"CXCallDirectoryStore"8@?0
-[CSDIncomingCallFilter _callFilterBlock]_block_invoke
/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-1308.80.17.3.1/TUCallServicesDaemon/CSDIncomingCallFilter.m
provider
q24@?0@"NSString"8@"NSString"16
%ld%@
callerId
CSDIDSSession.m
-[CSDIDSSession init]
<%@ %p %@>
UUID=%@
name
protoPersonNameComponents
suggestedName
label
companyName
mapName
location
contactName
contactLabel
callDirectoryLabel
callDirectoryLocalizedExtensionContainingAppName
callDirectoryExtensionIdentifier
contactIdentifiers
com.apple.telephonyutilities.callservicesd.useractivitycommunicator
announcements
com.apple.private.alloy.phone.auth
-[CSDIDSGroupSession addMembers:toExistingMembers:activeParticipants:triggeredLocally:conversationReport:]
v24@?0@"CSDClient"8@"<TUCallServicesXPCClient>"16
com.apple.telephonyutilities.callservicesdaemon.callstatecontroller
registerSecureMicrophoneEngagedHandler:
7UhDrmrZozgwO+3AgUbHxw
%@-%d
B16@?0@"CSDClient"8
NRPairedDeviceRegistry
NanoRegistry
282F1EE6-A144-4106-AFFB-2BDB5B59FD0D
com.apple.telephonyutilities.callservicesdaemon.voicemailcallended
callsToHold
callsToUnhold
callsToDisconnect
v16@?0@"TUCall"8
-[CSDCallStateController dialWithRequest:reply:]
-[CSDCallStateController dialWithRequest:displayContext:]
-[CSDCallStateController answerCallWithRequest:]
-[CSDCallStateController holdCallWithUniqueProxyIdentifier:]
-[CSDCallStateController unholdCallWithUniqueProxyIdentifier:]
-[CSDCallStateController disconnectCallWithUniqueProxyIdentifier:]
-[CSDCallStateController groupCallWithUniqueProxyIdentifier:withOtherCallWithUniqueProxyIdentifier:]
-[CSDCallStateController ungroupCallWithUniqueProxyIdentifier:]
-[CSDCallStateController swapCalls]
-[CSDCallStateController playDTMFToneForCallWithUniqueProxyIdentifier:key:]
-[CSDCallStateController disconnectCurrentCallAndActivateHeld]
-[CSDCallStateController disconnectAllCalls]
-[CSDCallStateController setTTYType:forCallWithUniqueProxyIdentifier:]
-[CSDCallStateController pullRelayingCallsFromClient]
-[CSDCallStateController pushRelayingCallsToHostWithSourceIdentifier:]
-[CSDCallStateController pullCallFromClientUsingHandoffActivityUserInfo:reply:]
-[CSDCallStateController sendMMIOrUSSDCodeWithRequest:]
-[CSDCallStateController setUplinkMuted:forCallWithUniqueProxyIdentifier:]
-[CSDCallStateController setDownlinkMuted:forCallWithUniqueProxyIdentifier:]
-[CSDCallStateController setIsSendingVideo:forCallWithUniqueProxyIdentifier:]
-[CSDCallStateController pushHostedCallsToDestination:]
-[CSDCallStateController pullHostedCallsFromPairedHostDevice]
-[CSDCallStateController sendHardPauseDigitsForCallWithUniqueProxyIdentifier:]
-[CSDCallStateController updateCallWithProxy:]
-[CSDCallStateController enteredForegroundForCallWithUniqueProxyIdentifier:]
-[CSDCallStateController willEnterBackgroundForAllCalls]
-[CSDCallStateController enteredBackgroundForAllCalls]
-[CSDCallStateController setRemoteVideoPresentationSizeForCallWithUniqueProxyIdentifier:size:]
-[CSDCallStateController setRemoteVideoPresentationStateForCallWithUniqueProxyIdentifier:presentationState:]
-[CSDCallStateController shouldSuppressInCallStatusBar:]
-[CSDCallStateController shouldAllowRingingCallStatusIndicator:]
v24@?0@"NSUserActivity"8@"NSError"16
-[CSDCallStateController activateInCallUIWithActivityContinuationIdentifier:]
-[CSDCallStateController joinConversationWithRequest:]
-[CSDCallStateController setCurrentAudioInputDeviceToDeviceWithUID:]
-[CSDCallStateController setCurrentAudioOutputDeviceToDeviceWithUID:]
-[CSDCallStateController localRoutesByUniqueIdentifier:]
-[CSDCallStateController pairedHostDeviceRoutesByUniqueIdentifier:]
-[CSDCallStateController pickLocalRouteWithUniqueIdentifier:shouldWaitUntilAvailable:]
-[CSDCallStateController pickPairedHostDeviceRouteWithUniqueIdentifier:shouldWaitUntilAvailable:]
-[CSDCallStateController containsRestrictedHandle:forBundleIdentifier:performSynchronously:reply:]
-[CSDCallStateController policyForAddresses:forBundleIdentifier:reply:]
-[CSDCallStateController willRestrictAddresses:forBundleIdentifier:reply:]
-[CSDCallStateController shouldRestrictAddresses:forBundleIdentifier:performSynchronously:reply:]
-[CSDCallStateController isUnknownAddress:normalizedAddress:forBundleIdentifier:reply:]
-[CSDCallStateController filterStatusForAddresses:forBundleIdentifier:reply:]
B24@?0@"TUCall"8@"NSDictionary"16
originating_process_id
timed_out
actions
com.apple.telephonyutilities.callservicesd.voipapplicationcontroller
com.apple.callkit.networkextension.voip
com.apple.networkextension.voip.launch
com.apple.telephonyutilities.callservicesdaemon.voip
com.apple.pushkit.launch.voip
com.apple.telephonyutilities.callservicesd.csdvoipapplicationcontroller.daily
bundleIDs
aps-environment
CSDVoIPApplicationKillCounts
%@.%@
com.apple.telephonyutilities.callservicesdaemon.voip.push
com.apple.telephonyutilities.callservicesdaemon.voip.push.development
 identifier=%lu
 handle=%@
 isMuted=%d
 isMomentsAvailable=%d
 streamToken=%ld
 avcIdentifier=%@
<%@: %p %@>
object=%@ processIdentifier=%d processName=%@ processBundleIdentifier=%@
com.apple.telephonyutilities.callservicesd.conversationmanagerxpcserver
com.apple.telephonyutilities.callservicesdaemon.conversationmanager
CSDConversationManagerClientsShouldConnectNotification
v24@?0@"CSDClient"8@"<TUConversationManagerXPCClient>"16
com.apple.telephonyutilities.callservicesd.callprovidermanager
Cannot launch app for dial request with a system provider: %@
Cannot launch app for invalid dial request: %@
NSSet<NSString *> *_INSupportedIntentsByExtensions(NSArray<LSPlugInKitProxy *> *__strong, NSError *__autoreleasing *)
CSDCallProviderManager.m
INSupportedIntentsByExtensions
void *IntentsLibrary(void)
/System/Library/Frameworks/Intents.framework/Intents
/System/Library/Frameworks/Intents.framework/Contents/MacOS/Intents
v48@?0@"NSUUID"8B16B20@"NSUUID"24@"TUHandle"32@"NSString"40
Invitation
Upgrade
AddMember
ResendAVCBlobRequest
ResendAVCBlobResponse
RespondedElsewhere
DebugLinkCreated
incomingCallRaiseToAnswerEnabledKey
CMGestureManager
CoreMotion
v24@?0@"CSDIDSTransport"8@"NSDictionary"16
SBSLaunchApplicationWithIdentifier
SpringBoardServices
access-calls
modify-calls
modify-status-bar
access-call-capabilities
modify-call-capabilities
access-call-history
modify-call-history
access-moments
modify-moments
modify-usernotifications
modify-reports
Entitlement check: In %s, client %@ lacks capability '%@'
com.apple.telephonyutilities.suppressringtone
<%@ %p activityType=%@ dynamicIdentifier=%@ activityUserInfo=%@>
registeredProviders
registeredProvidersVersion
registeredRelayProviders
Ringtones
com.apple.LaunchServices.applicationUnregistered
com.apple.telephonyutilities.callservicesd.csdmomentsreportingsession
CSDMomentsReportingSession.m
-[CSDMomentsReportingSession init]
self
shouldTraceSignposts
@"AVCSession"32@?0@"NSString"8@"NSObject<NSCopying>"16@"NSObject<OS_dispatch_queue>"24
CSDAVCSessionError
CSDExternalIDSDualSession.m
<display_name>
CELLULAR_SETTINGS
prefs:root=MOBILE_DATA_SETTINGS_ID
WLAN_SETTINGS
WIFI_SETTINGS
prefs:root=WIFI
SETTINGS
prefs:root=General&path=DATE_AND_TIME
prefs:root=FACETIME&path=LOCATION&guid=%@
%s is unavailable, call another initializer instead.
-[CSDRelayConferenceConnection init]
CSDRelayConferenceConnection.m
 identifier=%@
 transport=%@
 isHost=%d
 isUsingBaseband=%d
 isAudioDisabled=%d
 receivedSuccessfulDidStart=%d
 isPreparedToStop=%d
<%@ %p>
    Are capabilities valid: %@
    Sender identity capabilities: %@
    Emergency callback capabilities: %@
    Thumper local device ID: %@
    Thumper local accounts: %@
    Thumper secondary accounts: %@
disabled
q24@?0@"CSDThumperAccount"8@"CSDThumperAccount"16
uniqueIdentifier
deviceType
protoCurrentlyPicked
protoGuest
protoSupportsRelay
AirPods
BeatsSolo
BeatsX
Powerbeats
BeatsStudio
HomePod
iMac
MacBook
MacMini
MacPro
Watch
HomePodStereoPair
iPadPro
PowerbeatsPro
BeatsSoloPro
AirPodsPro
Powerbeats4
HeadPods
BeatsX2
HomePodMini
HomePodMiniStereoPair
v16@?0B8B12
activeParticipants
conversationGroupUUIDString
addedMembers
com.apple.calls.callservicesd
Default
calls
CSDFaceTimeIMAccountCallerIDChangedNotification
lastKnownFaceTimeCallerID
com.apple.telephonyutilities.callservicesd
com.apple.telephonyutilities.callservicesd.facetimeimaccount
v16@?0^{__CFDictionary=}8
ambiguityState
swappable
mergeable
holdAllowed
addCallAllowed
takingCallsPrivateAllowed
hardPauseAvailable
endAndAnswerAllowed
holdAndAnswerAllowed
sendToVoicemailAllowed
protoUUID
localizedShortName
accountUUIDString
v32@?0@"NSString"8@"NSString"16@"NSDictionary"24
Unknown Dial Failure for Conversation
Unknown Call Failure for Conversation
Mediaserverd crash
No AVC error reason given
AVC session did not start
AVC audio client did not start
AVC blob recovery timeout
CallUUID
RelayFailedConferenceFailed
RelayFailedNoRelayDevice
ComponentCrashed
RelayFailedRelayDeviceRelayNotEnabled
NoLocalLink
CallFailed
DialFailed
AccountUnsupported
NetworkUnsupported
ProviderCrashed
MediaStartFailed
MediaServerCrashed
NoReason
Disconnected
ReceiverDeclined
LocalUnanswered
RemoteUnanswered
InitiatorCancelled
CouldNotConnect
RemoteEnded
NoLocalData
NoRemoteData
FailedToOpenSocket
LocalHangup
RemoteHangup
NoLocalNetwork
MissingRemoteInfo
NoRemoteNetwork
EncryptionSetupFailed
EncryptionFailed
DecryptionFailed
SystemInternalError
NoRemotePackets
ReceiverBusy
SystemUnsupported
QRConfigurationError
SKEConfigurationError
QRAllocbindTimeout
QRUnallocbindTimeout
QRConnectedTimeout
AcceptedElsewhere
DeclinedElsewhere
AliasDeactivated
AllocatorParseError
AllocatorInvalidField
AllocatorInternalError
AllocatorServerBusy
AllocatorMissingKey
AllocatorBadSignature
AllocatorUnknownError
InitialMkMDistributionFailure
JoinNotificationDistributionFailure
QRAllocateRequestTimeout
AbortedByCaller
AbortedByReceiver
ReceiverOffline
HostHangup
Shutdown
LocalNetworkUnsupported
RemoteNetworkUnsupported
SystemComponentCrashed
CouldNotInvite
CouldNotRespond
CouldNotCancel
CouldNotSendUpdate
CouldNotSendAVMessage
CallLocalUnanswered
CallRemoteUnanswered
CallDeclinedElsewhere
CallFiltered
RemoteUserDoesNotExist
RemoteUserIncompatible
LocalUserIncompatible
CallerAccountInvalid
CallerAccountNeedsUpdate
Call Failure
com.apple.telephonyutilities.callservicesdaemon.reportingcontroller
A910C931-A590-41EF-A783-910BFBE500B3
com.apple.telephonyutilities.callservicesd.callhistorymanager
outgoingLocalParticipantUUID == %@
CSDIDSDeviceListChangedNotification
CSDIDSServiceCallerIDChangedNotification
CSDIDSService.m
All CSDIDSService subclasses must override +sharedInstance
com.apple.telephonyutilities.callservicesd.%@
    devices: %@
    availableOutgoingRelayCallerIDs: %@
    defaultPairedDevice: %@
    pairedDevice: %@
    telephonyCapableDeviceExists: %@
    relayCapableDeviceExists: %@
", "
pairedDeviceUniqueIDOverride
AudioAccessory
v24@?0@"CSDIDSTransport"8@"NSData"16
com.apple.callservicesdaemon.csdmomentscontroller
PreserveFaceTimePhotosFiles
CSDMomentsControllerStartedRemoteCaptureNotification
CSDMomentsControllerStartedLocalVideoCaptureNotification
CSDMomentsControllerStoppedLocalVideoCaptureNotification
CSDMomentsControllerMetadataKeyTransactionID
heic
lp_image
lp_movie
com.apple.telephonyutilities.callservicesd.csdmomentscontroller
@"<CSDAVCMoments>"40@?0q8@"NSString"16@"<CSDAVCMomentsDelegate>"24@"NSObject<OS_dispatch_queue>"32
com.apple.telephonyutilities.callservicesdaemon.momentscontroller
Could not start request for mediaType: %d streamToken: %ld. -[AVCMoments newRequestWithMediaType:] returned nil.
Could not start request for mediaType: %d streamToken: %ld. No session has been registered for requested stream token.
Asked to start moments request with invalid media type %d
Asked to start moments request but moments is disabled by server bag
-[CSDMomentsController startRequestWithMediaType:forStreamToken:requesteeID:reply:]
Could not find request for transaction ID %@
-[CSDMomentsController endRequestWithTransactionID:reply:]
-[CSDMomentsController registerStreamToken:requesterID:remoteIDSDestinations:remoteMomentsAvailable:reply:]
-[CSDMomentsController unregisterStreamToken:reply:]
v24@?0@"CSDClient"8@"<TUMomentsControllerXPCClient>"16
v16@?0@"NSString"8
v24@?0@"NSString"8@"NSError"16
@"TUICFQueryResult"24@?0@"NSString"8@"NSString"16
B20@?0@"TUCallProvider"8B16
B16@?0@"CSDCall"8
Not allowing requested %@ because user intent could not be reasonably validated to gain access to the microphone while in the background.
v16@?0@"CXCallSource"8
We have an active XPC connection but no corresponding CSDClient
CSDClientManager.m
B24@?0@8@"NSDictionary"16
com.apple.TUCallCenter
CSDCallDataSource.m
All CSDCallDataSource subclasses must override +callClass
 string=%@
 pid=%d
 statusBarStyleOverrides=%d
CSDVoIPApplicationMessageTransportTypeUnknown
CSDVoIPApplicationMessageTransportTypeNetworkExtension
CSDVoIPApplicationMessageTransportTypePushKit
<%@ %p type=%d
 socket=%d
 destination=%@
 initialLinkType=%lu
 remoteDestination=%@
 remoteDeviceUniqueIdentifier=%@
com.apple.telephonyutilities.callservicesd.calldirectorymaintenance.daily
extensionsChangedForCallDirectoryExtensionManager-%lu
CXCallDirectoryNSExtensionManagerDelegate
join
viewCall
FaceTime
Phone
callBack
sendMessage
com.apple.InCallService
MPVoicemailDeleteMessageBulletinBoardActionIdentifier
MPCallBulletinBoardActionIdentifier
callservicesd launched
CSDIDSDualSessionProvider
v20@0:8B16
v24@0:8q16
v20@0:8I16
T@"<CSDIDSDualSessionProviderDelegate>",N,W
endedReason
TI,N,R
shouldUseSocketForTransport
TB,N,R
socket
Ti,N,R
destination
T@"NSString",N,R
initialLinkType
audioEnabled
TB,N
invitationTimeout
Tq,N
@"<CSDIDSDualSessionProviderDelegate>"16@0:8
v24@0:8@"<CSDIDSDualSessionProviderDelegate>"16
@"NSString"16@0:8
v24@0:8@"NSDictionary"16
v24@0:8@"NSData"16
v32@0:8@"NSData"16@"NSSet"24
v28@0:8@"NSData"16B24
CSDIDSChat
v32@0:8@16@?24
v32@0:8{CGSize=dd}16
v20@0:8i16
T@"<CSDIDSChatDelegate>",N,W
UUID
T@"NSUUID",N,R
sessionUUID
T@"TUHandle",N,R
hasSentInvitation
dateStartedConnecting
T@"NSDate",N,R
dateConnected
dateEnded
outgoing
video
mayRequireBreakBeforeMake
videoStreamToken
inputAudioPowerSpectrumToken
outputAudioPowerSpectrumToken
crossDeviceIdentifier
remoteFromID
failureContext
T@"CXCallFailureContext",N,R
upgradeSessionUUID
T@"NSUUID",N,C
muted
sendingAudio
sendingAudioData
sendingVideo
relaying
remoteUplinkMuted
remoteMomentsAvailable
shouldSuppressInCallUI
localSenderIdentityUUID
@"<CSDIDSChatDelegate>"16@0:8
v24@0:8@"<CSDIDSChatDelegate>"16
@"NSUUID"16@0:8
@"TUHandle"16@0:8
@"NSDate"16@0:8
@"CXCallFailureContext"16@0:8
v24@0:8@"NSUUID"16
v32@0:8@"<CXVideoAspectRatioDescriptor>"16@?<v@?@"NSArray"B>24
v24@0:8@"<CXVideoAspectRatioDescriptor>"16
CSDCallCenterObserver
@24@0:8@16
T@"<CSDCallCenterObserverDelegate>",N,&
triggers
T@"<TUCallContainerPrivate>",N,R
@"<CSDCallCenterObserverDelegate>"16@0:8
v24@0:8@"<CSDCallCenterObserverDelegate>"16
@?<v@?@"CSDCall"Q>16@0:8
v24@0:8@?<v@?@"CSDCall"Q>16
@"<TUCallContainerPrivate>"16@0:8
@"TUConversation"24@0:8@"TUCall"16
TUCallContainerPrivate
@32@0:8@?16@?24
_allCalls
T@"NSArray",N,R
displayedCall
T@"TUCall",N,R
conferenceCall
frontmostCall
frontmostAudioOrVideoCall
existingCallsHaveMultipleProviders
@"NSArray"16@0:8
@"TUCall"32@0:8@?<B@?@"TUCall">16@?<q@?@@>24
@"TUCall"16@0:8
CSDCallCenterObserverDelegate
v32@0:8@"<CSDCallCenterObserver>"16@"CSDCall"24
v24@0:8@"<CSDCallCenterObserver>"16
CSDDirtyCallManager
@?<v@?@"CSDCall">16@0:8
v24@0:8@?<v@?@"CSDCall">16
v24@0:8@"CSDCall"16
OS_nw_activity
B36@0:8@16@24B32
B32@0:8@16@24
q32@0:8@16@24
B40@0:8@16@24@32
B24@0:8@"TUHandle"16
B36@0:8@"TUHandle"16@"NSString"24B32
B24@0:8@"TUCall"16
B24@0:8@"CSDCall"16
B36@0:8@"NSSet"16@"NSString"24B32
B32@0:8@"NSSet"16@"NSString"24
q32@0:8@"NSSet"16@"NSString"24
B40@0:8@"NSString"16@"NSString"24@"NSString"32
CSDAVCMoments
@48@0:8q16@24@32@40
@32@0:8C16C20@24
T@"<CSDAVCMomentsDelegate>",N,R
streamToken
capabilities
activeRequestCount
pendingRequestCount
@"<CSDAVCMomentsDelegate>"16@0:8
@48@0:8q16@"NSString"24@"<CSDAVCMomentsDelegate>"32@"OS_dispatch_queue"40
@"<CSDAVCMomentsRequest>"32@0:8C16C20@"NSString"24
CSDTTYProviderObserver
transportMethod
TUFeatureFlags
nonInterruptingCalls
siriGroupFaceTime
CSDAVCMomentsDelegate
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v28@0:8@"<CSDAVCMoments>"16I24
v40@0:8@"<CSDAVCMoments>"16@"<CSDAVCMomentsRequest>"24@"NSError"32
v56@0:8@"<CSDAVCMoments>"16@"<CSDAVCMomentsRequest>"24@"NSURL"32@"NSURL"40@"NSError"48
v24@0:8@"<CSDAVCMoments>"16
CSDManagedDeviceMonitorDelegate
v24@0:8@"TUCall"16
CSDAVCMomentsRequest
C16@0:8
transactionID
mediaType
TC,N,R
requesterID
requesteeID
IDSCTSIM
SIMIdentifier
phoneNumber
isDefaultVoiceSIM
slot
mobileCountryCode
mobileNetworkCode
CNKeyDescriptor
CSDIDSSessionProvider
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
hash
T#,N,R
debugDescription
B24@0:8@"Protocol"16
TUCallContainer
@24@0:8@?16
@20@0:8i16
Q24@0:8@?16
B24@0:8@?16
B20@0:8i16
currentCalls
currentVideoCalls
currentAudioAndVideoCalls
incomingCalls
displayedCalls
displayedAudioAndVideoCalls
conferenceParticipantCalls
callsHostedElsewhere
callsWithAnEndpointElsewhere
callsHostedOrAnEndpointElsewhere
callsOnDefaultPairedDevice
incomingCall
incomingVideoCall
activeVideoCall
currentVideoCall
currentCallCount
currentVideoCallCount
currentAudioAndVideoCallCount
callCountOnDefaultPairedDevice
hasCurrentCalls
hasCurrentAudioCalls
hasCurrentVideoCalls
anyCallIsHostedOnCurrentDevice
anyCallIsEndpointOnCurrentDevice
currentCallGroups
currentAudioAndVideoCallGroups
callGroupsOnDefaultPairedDevice
@"NSArray"24@0:8@?<B@?@"TUCall">16
@"NSArray"20@0:8i16
@"NSArray"24@0:8@"NSUUID"16
@"TUCall"24@0:8@?<B@?@"TUCall">16
@"TUCall"20@0:8i16
@"TUCall"24@0:8@"NSString"16
@"TUCall"24@0:8@"NSArray"16
Q24@0:8@?<B@?@"TUCall">16
B24@0:8@?<B@?@"TUCall">16
NSSecureCoding
supportsSecureCoding
NSCopying
@24@0:8^{_NSZone=}16
NSCoding
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
_TtC13callservicesd28AnyAudioInterruptionProvider
boxed
_beginOrUpdate
_end
_resetState
_activeDescriptor
_TtC13callservicesd17BlockedCallFilter
callservicesd.BlockedCallFilter
init()
CSDTinCanIDSProviderDelegate
@40@0:8@16@24@32
isAccountActive
isDestinationValid
destinationsGenerator
outgoingSessionProviderGenerator
outgoingChatGenerator
contactsDataProvider
com.apple.telephonyutilities.callservicesd.TinCan
@"<CSDIDSChat>"36@?0@"CSDExternalIDSDualSession"8@"TUHandle"16B24@"NSDictionary"28
callservicesd.TinCanIDSProviderDelegate
init(capabilities:queue:)
CSDMessagingCallMessage could not be read
Received TinCan message: %@
TinCan message was of unknown type %@: %@
Could not find chat for set muted action  %@. All chats: %@
Sending TinCan message for sender mute uplink: %@
Failing action: %@ since its not relaying
Could not find chat for set relaying action  %@. All chats: %@
Cannot start TinCan IDS chat using service %@ because account is not active
Cannot start TinCan IDS chat using handle because IDS destination was invalid
Created TinCan session to destinations %@ with options: %@
Starting TinCan IDS chat: %@
v20@?0@"NSArray"8B16
Tried to make an outgoing call when we already had a ringing call with the same destination
TinCan IDS chat was canceled
SenderMuteUplink
Server bag does not support quick relay since current version is unspecified
qr-invitations-enabled
Server bag does not support quick relay since minimum version is unspecified
quickRelaySupported
CSDFaceTimeIDSProviderDelegateServerBag
loaded
B24@0:8@16
Q16@0:8
superclass
description
CSDUserIntentManager
v24@0:8@16
privateAPIValidator
$__lazy_storage_$_applicationStateValidator
donatedIntentValidator
backgroundBluetoothAccessValidator
mediaRemoteStateValidator
Validating intent for call source: %@ callSourceHasReasonableUserIntent: %@ isUserIntentConfident: %@ (%@)
Unable to play system notification sound due to iOS version.
Playing alert for background mic access: %@
callservicesd.UserIntentManager
Enabling file protection class for conversation persistence storage
Cannot cast value: %@ to type: %@
CSDEmergencyCallbackCapabilities
_emergencyCallbackPossible
emergencyCallbackCapabilitiesDidChange
preventDetachAfterEmergencyCallTimeoutDeterminationHandler
dispatchAfterHandler
dispatchCancelHandler
callCenterObserver
preventDetachAfterEmergencyCallTimeoutWorkItem
emergencyCallbackPossible
callservicesd.EmergencyCallbackCapabilities
v24@?0@"CSDCall"8Q16
Starting prevent detach after emergency call timer with timeout of %d seconds. Marking emergency callback possible
Prevent detach after emergency call timer fired. Marking emergency callback as no longer possible
_CTServerConnectionCarrierSettingsCopyValue - encountered error %d %d
PreventDetachAfterEmergencyCallTimer
@?<v@?>16@0:8
v24@0:8@?<v@?>16
CSDPowerAssertionManager
powerAssertion
powerAssertionDescription
devices
routeController
acquirePowerAssertionHandler
releasePowerAssertionHandler
com.apple.telephonyUtilities.callservicesd.HomePodRelay
B16@?0@"TUCall"8
PowerAssertionManager: Call relayed to HomePod, call=%@
releasing PowerAssertion %@
acquired PowerAssertion %@
_TtC13callservicesd32AudioInterruptionProviderFactory
AudioAccessory5,1
HoldMusicDescriptor()
callservicesd
silenceUnknownCallersEnabled
maxJunkLevel
v24@0:8Q16
v24@0:8@?16
callContainerClosure
notificationCenter
T@"<CSDCallCenterObserverDelegate>",N,W,Vdelegate
TQ,N,Vtriggers
Call not specified in notification %@
Received notification %@ for unrecognized trigger
TQ,N
NSObject
#16@0:8
group-facetime-invite
group-facetime-participant-join
group-facetime-moments-request
_TtC13callservicesd33GroupFaceTimeNotificationProvider
conversationManager
ftNetworkSupport
notificationIdentifiersByConversationUUID
carPlayNotificationIdentifiersByConversationUUID
postedParticipantJoinIdentifiers
localizeConversationName
localizeHandleName
notificationType
categories
replace
removeNotification
updateBadgeValue
Unknown notification response received
TelephonyUtilities
No notification for conversation UUID %@
GFT_PARTICIPANT_JOINED
Ignoring adding notification request %@ since valid network is not reachable
JOIN_FACETIME_CALL
Handling notification %@
Did not find expected pending chat information
momentsStartedRemoteCapture received invalid notification object: %@
could not find conversation for notification stream token: %@
could not find participant for participant in conversation: %@ for requesterID: %@
FACETIME_PHOTO_SUCCESS_REMOTE_CAPTURE
FACETIME_PHOTO_NOTIFICATION_TITLE
callservicesd/GroupFaceTimeNotificationProvider.swift
TUConversationManagerDelegate
v24@0:8@"TUConversationManager"16
v32@0:8@"TUConversationManager"16@"TUConversation"24
_TtC13callservicesd29SoundDescriptorActionResolver
deviceIsHomePod
CSDFaceTimeLivePhotosIDSService
@16@0:8
sharedInstance
T@"CSDFaceTimeLivePhotosIDSService",N,R
@32@0:8@16@24
com.apple.private.alloy.facetime.lp
remoteParticipantHandles
activeParticipantHandles
notificationProviderIdentifier
T@"NSArray",N,C
T@"NSString",N,C
_TtC13callservicesd33AVAudioClientInterruptionProvider
activeDescriptor
Setting audio session properties: %@
Starting audio session
v20@?0B8@"NSError"12
Failed to start audio session: %@
Successfully started audio session
kAUVoiceIOProperty_OperationMode
kCMSessionProperty_CreateSpeakerDevice
kCMSessionProperty_InitiationDescription
kCMSessionProperty_ClientPriority
kCMSessionProperty_AudioMode
kCMSessionProperty_AudioCategory
CSDFaceTimeMultiwayIDSService
T@"CSDFaceTimeMultiwayIDSService",N,R
com.apple.private.alloy.facetime.multi
_TtC13callservicesd34AVAudioSessionInterruptionProvider
audioSession
isLocal
_activationContext
Setting audio activation context: %@ for provider %@
Error setting audio activation context to %@ for provider %@: %@
Successfully set audio activation context
Error overriding output audio port to AVAudioSessionPortOverrideNone: %@
Deactivating and setting audio interruption priority: %ld for provider %@
Error deactivating and setting audio interruption priority to %ld for provider %@: %@
Successfully deactivated and set audio interruption priority
Setting audio interruption priority: %ld for provider %@ category %@ mode %@
Error setting audio interruption priority to %ld for provider %@: %@
Successfully set audio interruption priority
Setting audio active: %@ options: %ld for provider %@ category %@ mode %@
Error setting audio active to %@ for provider %@: %@
Did not deactivate audio successfully, but error code was %d so assuming success
Successfully set audio active: %@ options: %ld
Setting audio category: %@ mode: %@ for provider %@
Error setting audio category to %@ and mode to %@ for provider %@: %@
Successfully set audio mode
.foregroundRunning
.backgroundRunning
.backgroundSuspended
CSDProcessObserver
i16@0:8
@?16@0:8
v16@0:8
processInfoByBundleIdentifier
applicationMonitor
processStateChanged
currentProcessIdentifier
T@?,N,C
v8@?0
v16@?0@"NSDictionary"8
callservicesd.ProcessObserver
CSDProcessObserverProtocol
@?<v@?iq>16@0:8
v24@0:8@?<v@?iq>16
@"NSArray"24@0:8@"NSString"16
@"NSDictionary"24@0:8@"NSString"16
v32@0:8@"NSString"16@?<v@?@"NSDictionary">24
facetime-invite-first-unlock
_TtC13callservicesd28FaceTimeNotificationProvider
openURL
%@ does not handle response with identifier %@
Did not find expected pending chat uuid information
FACETIME_AUDIO_SERVICE
FACETIME_SERVICE
FACETIME_%@_CALL_FIRST_UNLOCK_%@_BODY
FACETIME_CALL_FIRST_UNLOCK_TITLE_%@
callservicesd.FaceTimeNotificationProvider
blocked by screen time
allowed when downtime expires
allowed when app limits expire
CSDSharedConversationServerBag
activeParticipantPruningTimeout
TQ,N,R
sessionCleanupTimeout
AVCBlobRecoveryGracePeriod
AVCBlobRecoveryTimeout
rebroadcastTimeThreshold
activeParticipantRefreshDelay
automaticUpgradingEnabled
maxActiveParticipantFetchRetries
debugContextVersion
debug-context-version
Server bag does not have a value for %@, so returning the default one of %@ seconds.
Got %@ from server bag with a value of: %@
qr-active-participant-fetch-retries
qr-session-ft-upgrade-enabled
qr-session-participant-refresh-delay
qr-session-rebroadcast-threshold
qr-session-avc-blob-recovery-timeout
qr-session-avc-blob-recovery-grace-period
qr-session-cleanup-timeout
qr-participant-prune-timeout
CSDConversationServerBag
@32@0:8:16@24
routesDidChangeHandler
didPickRouteHandler
didDeselectAllRoutesHandler
supportsPrimaryCalling
hasRelayiCloudAccount
idsDeviceForIDSDeviceIdentifier
queue
nearbyDeviceMonitor
idsDeviceDestinationResolver
nearbyDeviceRoutes
activeRelayClientTransport
currentCallsSupportNearbyDevices
route: %@
Could not find route to pick for %@. All nearby device routes: %@
Error activating companion link client: %@
callservicesd.NearbyDeviceRouteProvider
callChanged
dirtyCallsArray
dirtyCallsSet
callservicesd.DirtyCallManager
Adding call %@ to dirty calls pool
Asked to dispatch drain the pool
Draining pool with dirty calls: %@
v16@?0@"CSDCall"8
CSDDuetDonater
v40@0:8@16@24Q32
maxDuration
unknownShortCallSignal
knownCallerSignal
junkCallSignal
silenceUnknownCallersEnabledObserver
B16@0:8
callservicesd.DuetDonater
v16@?0@"NSError"8
donate junkCallSignal event call=%@ error=%@
donate known caller mode event context=%@ error=%@
donate unknownShortCallSignal event call=%@ error=%@
donated call context data=%@ for call=%@
com.apple.telephonyUtilities.unknownShortCall
com.apple.telephonyUtilities.knownCallerMode
com.apple.telephonyUtilities.junkCallReceived
v36@0:8@16@24B32
v44@0:8@16@24@32B40
dataSource
T@"<CSDReporterDataSource>",N,W
@"<CSDReporterDataSource>"16@0:8
v24@0:8@"<CSDReporterDataSource>"16
v40@0:8@"CSDReportingController"16@"CSDCall"24Q32
v32@0:8@"CSDReportingController"16@"CSDCall"24
v24@0:8@"CSDReportingController"16
v36@0:8@"CSDReportingController"16@"CSDMessagingRelayMessage"24B32
v32@0:8@"CSDReportingController"16@"CXTransactionGroup"24
v40@0:8@"CSDReportingController"16@"CXAction"24@"CSDCall"32
v32@0:8@"CSDReportingController"16@"CSDMomentsUsageReport"24
v40@0:8@"CSDReportingController"16@"TURoute"24@"CSDCall"32
v32@0:8@"CSDReportingController"16@"TUConversation"24
v40@0:8@"CSDReportingController"16@"NSArray"24@"TUConversation"32
v32@0:8@"CSDReportingController"16@"CSDIDSChat"24
v40@0:8@"CSDReportingController"16@"NSArray"24@"NSUUID"32
v32@0:8@"CSDReportingController"16@"NSString"24
v44@0:8@"CSDReportingController"16@"NSUUID"24@"RTCSecureHierarchyToken"32B40
_TtC13callservicesd23EmptyDescriptorProvider
CSDCallController
callStateController
dataSources
dirtyCallManager
T@"CSDCallStateController",N,W,VcallStateController
callContainer
callservicesd.CallController
v16@?0@"NSArray"8
resolver
audioInterruptionProviderPool
ringtoneProvider
soundProvider
holdMusicProvider
discoveryModeProvider
deferredEndWorkItem
pendingExpeditedEndInterruptionUUIDs
endInterruptionDelay
mediaServicesWereResetObserver
audioSessionInterruptionObserver
audioController
callservicesd.CSDAudioController
callUUID: %@
Attempted to expedite deferred end interruption block prematurely, so pending the UUID %@
Expediting deferred end interruption work item
com.apple.telephonyutilities.callservicesd.audiocontroller
v16@?0@"NSNotification"8
notification: %@
Other interruption ended so re-interrupting if necessary
Resetting state
Stopping audio session
resolutionChangedHandler closure invoked
oldDescriptor: %@ descriptor: %@
Ending interruption immediately since there is no longer a resolved descriptor
Stopping sound playback
Ending discovery mode
An end interruption was deferred but we were asked to update to a new descriptor, so canceling the deferred end
Deferring end interruption by %.2f sec, since descriptor has an interruption deferred end descriptor and there is no pending expedited end interruption
Ending interruption immediately, since descriptor has an interruption deferred end descriptor and there is a pending expedite for UUID %@
Decreasing priority of other AVAudioSession interruption provider %@ to Default
updating mic attribution %@
No provider returned for descriptor %@
No existing proxy AVAudioSession interruption provider for ID %u, creating a new one
Created AVAudioSession interruption provider %@
Starting discovery mode
Asked to begin or update playback of hold music but new descriptor is equal to activeDescriptor so doing nothing
speechSynthesizerEventHandler invoked
Hold music provider speech synthesizer finished utterance, but hold music provider is no longer active, so not invoking playback continuation
Hold music provider speech synthesizer finished utterance, and hold music provider is still active, so invoking playback continuation
Sound playback completed and we had a deferred end descriptor, so expediting end interruption for call with UUID %@
Requested to end playback, stopping alert: %@
factory
localAVAudioSessionInterruptionProvider
proxyAVAudioSessionInterruptionProvidersByAudioSessionID
avAudioClientInterruptionProvider
CSDMomentsUsageReport
d16@0:8
@52@0:8i16q20q28d36d44
photoRequestSuccessCount
photoRequestFailureCount
medianRequestDuration
meanRequestDuration
Ti,N,R,Vavailability
Tq,N,R,VphotoRequestSuccessCount
Tq,N,R,VphotoRequestFailureCount
Td,N,R,VmedianRequestDuration
Td,N,R,VmeanRequestDuration
callservicesd.MomentsUsageReport
MomentsUsageReport (Availability: 
_TtC13callservicesd37RingtoneProviderAlertPlaybackObserver
didBeginPlaying
_TtC13callservicesd16RingtoneProvider
contactStore
currentAlert
endedPlayingSemaphore
alertGenerator
playbackObserverGenerator
Alert configuration has changed, but unable to create TLAlert using configuration %@
Alert configuration has changed, playing alert %@
Requested to begin or update playback, but alert configuration is unchanged so doing nothing
Playback finished with completion type %@ for alert %@
Playback failed for alert %@: %@
Started playing alert: %@
Setting shouldIgnoreRingerSwitch: %@
Setting externalToneFileURL: %@
Setting vibrationIdentifier: %@
Setting toneIdentifier: %@
From provider, using externalToneFileURL %@
From activity alert %@, using tone %@, vibration %@, bypass ringer %@
Contact retrieval failed for contact identifier %@: %@
v24@?0q8@"NSError"16
TLAlertPlaybackObserver
v24@0:8@"TLAlert"16
CSDTinCanIDSService
T@"CSDTinCanIDSService",N,R
com.apple.private.alloy.tincan.audio
moments-disabled
moments-request-timeout
callservicesd1
momentsDisabled
momentsRequestTimeout
Td,N,R
CSDMomentsServerBag
@24@0:8:16
multiwayconference
telephonyutilities
com.apple.telephonyutilites.facetime
com.apple.telephonyutilites.phone
CSDRTCReporter
v32@0:8@16@24
relayDeviceRouteChangesByCallUUID
groupUUIDToConversationReportingSessions
groupUUIDToConversationInfo
callUUIDToCallReportingSessions
callUUIDtoConversationUUID
conversationGroupUUIDToCallUUID
callUUIDtoConversationGroupUUID
uuidToNWActivity
uuidToNWActivityConnecting
idsSessionUUIDToChatUUIDs
appleIDUtilities
callservicesd.RTCReporter
bundleIdentifier
RTCReporter: Reporting message with session %@ userInfo %@
RTCReporter: Error while sending message with error: %@
RTCReporter: Failed to create reporting session with sessionInfo: %@, userInfo: %@
RTCReporter: Created reporting session %@ with sessionInfo: %@, userInfo: %@
RTCReporter: Did not recieve any backends
RTCReporter: Received backends %@
RTCReporter: received an IDS metrics report for IDS session %@ corresponding to call %@
RTCReporter: recorded mapping for IDS session %@ corresponding to call %@
RTCReporter: Creating conversation reporting session for conversation uuid %@
RTCReporter: converstation reporting session exists for uuid %@
RTCReporter: Creating call reporting session for 1:1 FT call UUID %@
RTCReporter: one-to-one call reporting session already exists for uuid %@
RTCReporter: Creating multiway call %@ reporting session for conversation UUID %@
RTCReporter: multiway call reporting session already exists for uuid %@
CSDReporter
_TtC13callservicesd14RTCCSDCallInfo
callUUID
durationMs
bucketedDuration
endReason
providerErrorCode
providerEndedReason
setupTimeMs
connectionTimeMs
relay
incoming
connected
currentlyGrouped
relayDeviceRouteChanges
filteredOutReason
verficationStatus
knownCallerStatus
isOwnNumber
isConversation
returnedCall
isSiriSuggested
isKnownContact
isVerifiedAppleCare
isSignedIntoiCloud
junkConfidence
identificationCategory
isKnownCaller
callservicesd.RTCCSDCallInfo
canReceiveRelayedCalls
CSDMomentsControllerLocalCapabilities
enabled
regionBlocked
CSDMomentsNotification
@32@0:8Q16@24
TQ,N,R,VstreamToken
callservicesd.MomentsNotification
com.apple.mobilephone
CHRecentCallIdentifier
CNContactIdentifier
TUDialRequestURL
_TtC13callservicesd31CallHistoryNotificationProvider
callHistoryDataSource
callProviderManager
recentCallByNotificationIdentifier
supportedMediaTypes
supportedProviders
mostRecentCallDate
callHistoryDatabaseChangedNotifyToken
inCallServiceProcessObserver
supportsDisplayingFaceTimeAudioCalls
dialRecentCall
[WARN] Could not find recent call with identifier: %@
%@ count: %d isAmbiguous: %d
allowOutgoingCallsWhenLocked
ACTION_TITLE_CALL_BACK
ACTION_TITLE_SEND_MESSAGE
InCallService changed to non-running state (%@); updating posted notifications
Determining state of InCallService before checking whether to post new CallHistory notifications
Skipping update of call history notification; InCallService process state is foreground running. %@
Could not retrieve date of most recent call for notification provider %@
Notifiction provider %@ found missed calls %@
Adding notification request %@ for missed call %@
Recent call was a silenced unknown caller; displaying notification as an alert (%@)
MISSED_CALL_MESSAGE
MISSED_FACETIME_VIDEO_CALL
MISSED_FACETIME_AUDIO_CALL
Updating call history badge count for notification provider %@
Most recent call date is now %@ for notification provider %@
Call history database changed
Performed dial request: %@
Performing dial request: %@ ended in error: %@
Failed to open URL %@#. Error %@
notificationType: 
supportedMediaTypes: 
supportedProviders: 
callservicesd/CallHistoryNotificationProvider.swift
CSDCallFilter
CSDCallFilterManager
filters
senderIdentityClient
%@ shouldBlock=%d shouldAllow=%d
%@ Allowing call through since there aren't any unknown call filters
callservicesd.CallFilterManager
SoundDescriptor(
_TtC13callservicesd17HoldMusicProvider
speechSynthesizerEventHandler
speechSynthesizer
audioPlayer
canceled speech synthesizer utterance
finished speech synthesizer utterance
No audio player could be created, so unable to begin playing hold music
Failed to start playing hold music
Successfully started playing hold music
Error retrieving file URL for hold music sound file
Error creating AVAudioPlayer with fileURL %@: %@
Created hold music audio player with URL %@
started speech synthesizer utterance
ANSWER_AND_HOLD_OUTGOING_MESSAGE
Speaking utterance %@
Ending hold music
Ending hold message
AVSpeechSynthesizerDelegate
v48@0:8@16{_NSRange=QQ}24@40
v32@0:8@"AVSpeechSynthesizer"16@"AVSpeechUtterance"24
v48@0:8@"AVSpeechSynthesizer"16{_NSRange=QQ}24@"AVSpeechUtterance"40
CSDCarPlayManager
carSessionQueue
carSessionStatus
carPlayScreenConnectionChanged
isCarPlayConnected
com.apple.calls.queues.carSessionStatus
v12@?0B8
CARSessionObserving
v24@0:8@"CARSession"16
v32@0:8@"CARSession"16@"CARSessionConfiguration"24
_TtC13callservicesd22RTCCSDRelayDeviceRoute
type
failed
callservicesd.RTCCSDRelayDeviceRoute
CSDMomentsControllerSession
moments
remoteIDSDestinations
isRegistered
activeRequestsByTransactionID
T@"<CSDAVCMoments>",N,R,Vmoments
T@"NSDictionary",N,C
TB,N,VisRegistered
callservicesd.MomentsControllerSession
MomentsControllerSession: no streamtoken found
MomentsControllerSession: FaceTime 1:1
MomentsControllerSession: GroupFaceTime
remoteIDSDestinations=
activeRequestsByTransactionID=
_TtC13callservicesd17UnknownCallFilter
%@ this is not a telephony provider call; call filter will allow call %@
%@ call does not have a valid handle, by definition this is an unknown caller call %@
%@ shouldFilterIncoming call=%@ unknownCaller=%d isSilenceUnknownCallersEnabled=%d shouldBlockJunk=%d
%@ maxJunkLevel: %d
%@ isSilenceUnknownCallersEnabled: %d
CSDContactsCallFilter
appleCareHandles
carrierBundleController
%@ null call handle, should not reach here: call=%@
%@ Found contact (%@) or suggested contact (%@) or isVerifiedAppleCare (%@) or isCarrierBundlePhoneNumber (%@)
%@ Did not find contact or suggested contact; call filter will not allow call %@
%@ call filter will allow call %@
%@ Contact fetch failed with the following error %@
CSDRouteController
v28@0:8@16B24
_routesByUniqueIdentifier
routeWasPickedHandler
timedOutPickingRouteHandler
routeProviders
pendingRouteContext
pickWhenAvailableRouteIdentifier
pendingPickedRouteTimeout
routesByUniqueIdentifier
T@"NSDictionary",N,R
callservicesd.RouteController
routes: %@
Stopping waiting for route identifier %@ to become available
Could not find route to pick with unique identifier %@. All routes: %@
Will pick route identifier %@ when it becomes available to pick
Clearing out pickWhenAvailable route identifier %@ because user is picking available route %@
Timed out waiting for route to become picked: %@
Updated routes from %@ to %@
pickWhenAvailable route identifier %@ did become available, picking now...
Route identifier %@ did not become available in %@ seconds
v16@?0@"TURoute"8
com.apple.telephonyutilities.callservicesd.pairedhostdeviceroutecontroller
com.apple.telephonyutilities.callservicesd.localroutecontroller
Updating activeRelayClientTransport to %@
Updating nearby device routes using devices: %@
Current calls do not support nearby devices (%@) or device doesn't support primary calling (%@)
Could not convert NearbyDevice to NearbyDeviceRoute: %@
filtering out device: %@
v16@?0@"RPCompanionLinkDevice"8
v20@?0@"RPCompanionLinkDevice"8I16
Device changed: %@
Lost nearby device: %@
Found nearby device: %@
Local device updated
callservicesd/TUCallContainerProtocol_CSD.swift
Fatal error
Call is not a CSDCall: 
CSDTinCanIDSProviderDelegateCapabilities
cellularDataAllowed
CSDIDSProviderDelegateCapabilities
wiFiAvailable
wiFiAllowed
cellularDataAvailable
cellularDataPreferred
q16@0:8
activeConversationsListKey
CSDConversationPersistenceController
storage
Removing active conversation with cache key: %@
Adding active conversation with cache key: %@
Expected an active conversation for key %@ but found nothing. Cleaning up cached conversation.
Cannot create CSDMessagingConversation from data in cache for key: %@. Cleaning up cached conversation
Missing fields on conversation from cache %@. Cleaning up cached conversation.
Removing conversation with UUID: %@ from cache.
Error creating CSDMessagingConversation to cache from conversation with UUID: %@.
Caching conversation with UUID: %@
Missing fields on conversation from cache %@. Returning a nil conversation.
callservicesd.ConversationPersistenceController
AudioDescriptor(
interruptionDescriptor: 
interruptionDeferredEndDescriptor: 
ringtoneDescriptor: 
soundDescriptorAction: 
holdMusicDescriptor: 
discoveryModeDescriptor: 
_TtC13callservicesd29PairedHostDeviceRouteProvider
pairedHostDeviceRoutes
Could not find route to pick for %@. All paired host device routes: %@
callservicesd.PairedHostDeviceRouteProvider
RingtoneDescriptor(
contactIdentifier=
providerRingtoneSoundURL=
CSDIDSPendingChat
@36@0:8@16B24@28
isVideo
TB,N,R,VisVideo
T@"TUHandle",N,R,Vhandle
CSDGroupIDSPendingChat
callservicesd.GroupIDSPendingChat
callservicesd.IDSPendingChat
_TtC13callservicesd13AudioResolver
ttyProviderObserver
localAudioSystemProvider
deviceSupportsRingtone
featureFlags
soundDescriptorActionResolver
resolvedDescriptor
resolutionChangedHandler
Unable to create interruption descriptor for call %@
Not creating interruption for call: %@, deviceSupportsRingtone: %@ shouldSuppressRingtone: %@  holdMusicDescriptor: %@
Other session requested no ringtone interruption, ending currentDescriptor(context:) method for call %@
CSDFaceTimeIDSProviderDelegateCapabilities
momentsAvailable
items
timeProvider
_TtC13callservicesd23LocalAudioRouteProvider
audioRoutes
callAudioCategory
callAudioMode
lastUserPickedRoute
callAudioInterruptionState
hasActiveAudioSession
Could not find route to pick for %@. All audio routes: %@
Failed to pick audio route %@: %@
Call does not have audio interruption so setting prematurely selected audio route to %@
callservicesd.LocalAudioRouteProvider
Updating audio information using call: %@; callHasAudioInterruption: %@
Audio category change from %@ -> %@ mode %@ -> %@ does not require route re-pick
Re-picking last user picked route: %@
Audio category change from %@ -> %@ mode %@ -> %@ currentlyPickedRoute: %@ shouldPickLastUserPickedRoute: %@
Updated audio routes: %@
Clearing last user picked route
Unable to create audio route from route dictionary: %@
Picking prematurely selected audio route now that audio interruption has begun: %@
TUAudioSystemControllerDelegate
nearbyDeviceProvider
devicesChangedHandler
devicesByEffectiveIdentifier
callservicesd.NearbyDeviceMonitor
AudioInterruptionDescriptor(
activationContext=
MIC_ACCESS_TELEPHONE_CALL
MIC_ACCESS_FACETIME_CALL
CXAudioSessionActivationStateObserver
Vv20@0:8B16
CSDUserNotificationController
callFilterManager
phoneNotificationCenter
faceTimeNotificationCenter
providersByIdentifier
providers
clientManager
v40@0:8@16@24@?32
v40@0:8q16@24@?32
Received response %@
Could not find notification provider for action
callservicesd.UserNotificationController
com.apple.telephonyutilities.callservicesd.usernotificationcontroller
com.apple.facetime
Creating XPC endpoint for User notifications
Loaded user notification controller
com.apple.telephonyutilities.callservicesdaemon.usernotificationprovider
Started broadcasting User notifications mach service with %@
Setting badge string to %@ on notificationCenter %@ for notification type %@
APPLICATION_BADGE_UNKNOWN
APPLICATION_BADGE_UNKNOWN_COUNT
Successfully set badge string to %@
Error setting badge string to %@
Replacing notification with identifier %@ from %@
Successfully replaced notification with identifier: %@
Error while replacing notification: %@
Removing notification with identifier %@ from %@
Not posting notification since it is restricted by the call filter
Adding notification request %@ to %@
Successfully posted notification with identifier: %@
Error while posting notification: %@
UNUserNotificationCenterDelegate
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
TUUserNotificationsProviderXPCServer
Vv40@0:8q16@24@?32
Vv40@0:8q16@"NSString"24@?<v@?@"NSError">32
_TtC13callservicesd21DiscoveryModeProvider
nonvisualvoicemail
VMVoicemailIdentifier
voicemailDuration
_TtC13callservicesd29VoicemailNotificationProvider
telephonyClient
voicemailDataSource
postedVoicemailIdentifiers
pendingVoicemailIdentifiers
mostRecentVoicemailDate
mostRecentNonVisualVoicemailDate
localizeVoicemailName
callbackVoicemail
unsubscribedVoicemailInfoForUUID
Could not find voicemail with identifier: %lu
No current unsubscribed voicemail info, attempting to update...
Subscribed to enhanced voicemail; unread message count is %lu
v36@?0B8@"NSNumber"12@"NSString"20@"NSError"28
Updating voicemail info for uuid %@ to available: %@, count: %@
ACTION_TITLE_VOICEMAIL_MESSAGE_DELETE
Subscription status changed: %@
Removing all voicemail notifications. Current notification identifiers: %@
Online status changed: %@
Voicemails changed: %@
Could not retrieve date of most recent voicemail for notification provider %@
Voicemail is not subscribed
Voicemail store changed, and we found the following voicemail messages we were waiting for: %@
Retrieving messages delivered after %@
Received %lu new voicemails since date %@
Voicemail store changed, but we did not find any voicemail messages we were waiting for. Waiting for: %@
Asked to post %lu voicemails
Adding notification with count: %lu
NEW_VOICEMAIL_FORMAT
[WARN] Could not generate dial request URL for voicemail: %@
Attempt to create a notification attachment for file at %@ failed with error %@
Most recent voicemail date is now %@ for notification provider %@
Voicemail is not MWI - Ignoring voicemailInfoAvailableNotification
Handling voicemailInfoAvailableNotification voicemailInfo: %@, context: %@
callservicesd/VoicemailNotificationProvider.swift
B16@?0@"VMVoicemail"8
Retrieving voicemail messages failed with error %@
Retrieving inbox voicemail messages failed with error %@
CoreTelephonyClientVoicemailDelegate
v24@0:8@"CTXPCServiceSubscriptionContext"16
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTVoicemailInfoType"24
CSDCallHistoryCallFilter
usTollFreePrefixes
callHistoryManager
%@ Could not create call history handle from call %@
%@ Found call history call; call filter will allow call %@
%@ Did not find call history call; call filter will not allow call %@
%@ Fetching call history calls matching predicate %@
CSDOwnNumberCallFilter
idsCTAdapter
%@ Call is not the same number as subscriber; OwnNumberCallFilter will allow call %@
%@ Call is the same number as subscriber; OwnNumberCallFilter will not allow call %@
%@ call is verified; will allow call %@
DiscoveryModeDescriptor()
_TtC13callservicesd13SoundProvider
player
Asked to begin or update playback of sound with descriptor %@ but no TUCallSoundPlayerDescriptor could be determined, so not playing
Attempt to play call sound player descriptor %@ returned false
Asked to begin or update playback of sound but new descriptor is equal to activeDescriptor so doing nothing
AudioInterruptionDeferredEndDescriptor(
_TtC13callservicesd22RTCCSDConversationInfo
uuid
startDate
conversationID
endDate
duration
maximumMemberCount
initialMemberCount
finalMemberCount
maxNumberOfParticipants
AVCBlobRecoveryAttempts
AVCBlobRecoveryTimeouts
callservicesd.RTCCSDConversationInfo
_TtC13callservicesd13CSDAVCMoments
I16@0:8
T@"<CSDAVCMomentsDelegate>",N,W,Vdelegate
Tq,N,R
v28@0:8@16I24
v48@0:8@16@24@32@40
callservicesd.CSDAVCMoments
AVCMomentsDelegate
v28@0:8@"AVCMoments"16I24
v40@0:8@"AVCMoments"16@"AVCMomentsRequest"24@"NSError"32
v56@0:8@"AVCMoments"16@"AVCMomentsRequest"24@"NSURL"32@"NSURL"40@"NSError"48
v48@0:8@"AVCMoments"16@"AVCMomentsRequest"24@"NSURL"32@"NSError"40
v24@0:8@"AVCMoments"16
CSDManagedDeviceMonitor
delegate
T@"<CSDManagedDeviceMonitorDelegate>",N,&
@"<CSDManagedDeviceMonitorDelegate>"16@0:8
v24@0:8@"<CSDManagedDeviceMonitorDelegate>"16
CSDKeychainPasswordItem
@24@0:8^@16
B32@0:8@16^@24
B24@0:8^@16
service
accessGroup
account
callservicesd.KeychainPasswordItem
Successfully deleted item from keychain
No item found. Added new item to keychain
Saved item to keychain
CSDScreenTimeCallFilter
providerManager
conversationsForBundleIdentifier
synchronousConversationsForBundleIdentifier
contextsForCallIdentifier
observationForCallIdentifier
delegateQueue
T@"<CSDManagedDeviceMonitorDelegate>",N,W,Vdelegate
Screen time: Filter status is %@ for addresses %@ with bundle identifier: %@
Screen time: Policy %@ for handles: %@ with existing conversation: %@ with bundle identifier: %@
Screen time: Policy %@ for handles: %@ (%@) with bundle identifier: %@
Screen time: Timed out creating conversation
Screen time: Created synchronous conversation %@ for bundle identifier: %@. All synchronous conversations: %@
Screen time: Adding conversation for bundle identifier: %@ provider: %@
Screen time: Conversation for providers: %@
Screen time: Handling call remote participants changed: %@
Screen time: Stopped monitoring screen time context for call %@. Remaining contexts are %@
Screen time: Started monitoring screen time context %@. All contexts are %@
Screen time: Conversation context for call: %@ changed to %@
callservicesd.ScreenTimeCallFilter
init(queue:)
Screen time: Handling active participants changed for conversation: %@
Screen time: Could not find call in all calls: %@
Screen time: Found call for conversation, updating call
CSDCallProviderManagerDelegate
v24@0:8@"CSDCallProviderManager"16
CSDMomentsRequest
avcRequest
session
T@"<CSDAVCMomentsRequest>",N,R,VavcRequest
T@"CSDMomentsControllerSession",N,R,Vsession
callservicesd.MomentsRequest
description
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
setDebugKey:
setDebugData:
allocWithZone:
init
copyWithZone:
isMemberOfClass:
isEqual:
hash
hasDebugKey
hasDebugData
readFrom:
writeTo:
copyTo:
mergeFrom:
debugKey
debugData
.cxx_destruct
_debugData
_debugKey
TB,R,N
T@"NSString",&,N,V_debugKey
T@"NSData",&,N,V_debugData
callStateController
relayMessagingController
callController
sharedInstance
_allCalls
allCalls
setCallStateController:
_callStateController
T@"CSDCallStateController",&,N,V_callStateController
T@"CSDRelayMessagingController",R,N
T@"CSDCallController",R,N
T@"NSArray",R,N
initWithCallCenterObserver:
setTriggers:
setDelegate:
_updateCurrentOrientationValue
setOrientationEventsEnabled:
setPassiveOrientationEvents:
defaultCenter
removeObserver:
dealloc
accelerometer
currentDeviceOrientation
setCurrentOrientation:
provider
isSystemProvider
isVideo
callStatus
callCenterObserver
callContainer
currentVideoCalls
countByEnumeratingWithState:objects:count:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
accelerometer:didAccelerateWithTimeStamp:x:y:z:eventType:
accelerometer:didChangeDeviceOrientation:
callCenterObserver:callChanged:
callsChangedForCallCenterObserver:
setCallCenterObserver:
currentOrientation
_accelerometer
_callCenterObserver
_currentOrientation
T@"<CSDCallCenterObserver>",&,N,V_callCenterObserver
Tq,N,V_currentOrientation
T@"BKSAccelerometer",R,N,V_accelerometer
sharedInstanceWithQueue:
initWithQueue:
strongToStrongObjectsMapTable
handleCallStatusChanged:
addObserver:selector:name:object:
handleSessionStateChanged:
beginTransactionIfNecessaryForObject:withReason:
endTransactionIfNecessaryForObject:
queue
openTransactions
objectForKey:
stringByAppendingFormat:
UTF8String
count
removeObjectForKey:
object
status
state
T@"CSDTransactionManager",R,N
_openTransactions
_queue
T@"NSMapTable",R,N,V_openTransactions
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
initWithFormat:arguments:
simulateCrashReportWithReason:pid:code:
simulateCrashReportFromPID:withKillCode:usingReasonWithFormat:
simulateCrashReportWithFormat:
bundleIdentifier
invalidate
name
initWithBundleIdentifier:flags:reason:name:withHandler:
setProcessAssertion:
processAssertionNameForBundleIdentifier:
initWithBundleIdentifier:flags:reason:name:
isEqualToString:
processAssertionWithBundleIdentifier:
initWithBundleIdentifier:
acquireWithCompletionHandler:
processAssertion
_bundleIdentifier
_processAssertion
T@"BKSProcessAssertion",&,N,V_processAssertion
T@"NSString",R,C,N,V_bundleIdentifier
initWithClientUUID:serialQueue:
startedCapturingLocalVideo:
stoppedCapturingLocalVideo:
conferenceProvider
setState:
setConfiguration:
conferenceProviderCreationBlock
configuration
clientUUID
setConferenceProvider:
deviceRole
reportingHierarchyToken
initializeNewCallWithDeviceRole:reportingHierarchyToken:
requiresInviteDictionary
localPortraitAspectRatio
localLandscapeAspectRatio
setLocalPortraitAspectRatio:localLandscapeAspectRatio:
setLocalInviteDictionary:
_sendDelegateFinishedPreparing
_setEndedWithReason:error:
remoteInviteDictionary
callID
inviteDictionaryForCallID:remoteInviteDictionary:nonCellularCandidateTimeout:block:queue:
type
isCaller
capabilities
socket
startConnectionAsCaller:capabilities:socket:error:
destination
startConnectionAsCaller:remoteInviteDictionary:capabilities:destination:error:
date
timeIntervalSince1970
_setUpDidStartTimeout
_stop
capturingLocalVideo
stop
setCapturingLocalVideo:
cancel
sendData:
setPeerReportingIdentifier:sessionIdentifier:
setEndedReason:
setEndedError:
_sendDelegateEndedWithReason:error:
inputAudioPowerSpectrumToken
outputAudioPowerSpectrumToken
setRemoteInviteDictionary:
setCaller:
setDateStartedConnecting:
setDateConnected:
setDateEnded:
_isMuted
isMicrophoneMuted
setMicrophoneMuted:
_sendDelegateMutedChanged
_isSendingAudio
isAudioPaused
setAudioPaused:
isSendingAudio
_isSendingAudioData
setSendingAudio:
_isSendingVideo
_isSendingVideoExpected
boolValue
isVideoPaused
setVideoPaused:
numberWithBool:
setSendingVideoExpected:
isVideoPausedToStart
setIsVideoPausedToStart:
updateCapabilities:
setCapabilities:
setRemoteVideoPresentationSize:
setRemoteVideoPresentationState:
connectionTimeout
setDeviceRole:
delegate
delegateQueue
conferenceFinishedPreparing:
_performDelegateCallback:
conferenceStarted:
conference:endedWithReason:error:
connectionClosedForConference:
mutedChangedForConference:
sendingAudioChangedForConference:
receivedFirstRemoteFrameForConference:
remoteVideoPausedForConference:
conference:remoteMediaStalled:
conference:inputFrequencyLevelChangedTo:
conference:outputFrequencyLevelChangedTo:
conference:inputLevelChangedTo:
conference:outputLevelChangedTo:
conference:changedBytesOfDataUsed:
conference:didReceiveData:forCallID:
code
_sendDelegateStarted
_endedReasonForDidStopError:error:
objectForKeyedSubscript:
integerValue
_sendDelegateBytesOfDataUsageChanged:
_sendDelegateConnectionClosed
copy
_sendDelegateInputFrequencyLevelChanged:
_sendDelegateOutputFrequencyLevelChanged:
_sendDelegateInputLevelChanged:
_sendDelegateOutputLevelChanged:
_sendDelegateSendingAudioChanged
setHasReceivedFirstRemoteFrame:
_sendDelegateReceivedFirstRemoteFrame
setRemoteVideoPaused:
_sendDelegateRemoteVideoPaused
_sendDelegateRemoteMediaStalled:
_sendDelegateReceivedData:forCallID:
conferenceProvider:didStartSession:error:
conferenceProvider:didStopWithError:callMetadata:
connectionClosedForConferenceProvider:
serverDiedForConferenceProvider:
conferenceProvider:updateInputFrequencyLevel:
conferenceProvider:updateOutputFrequencyLevel:
conferenceProvider:updateInputLevel:
conferenceProvider:updateOutputLevel:
conferenceProvider:didPauseAudio:error:
conferenceProvider:didPauseVideo:error:
conferenceProviderReceivedFirstRemoteFrame:
conferenceProvider:remoteVideoPaused:
conferenceProvider:remoteMediaStalled:
conferenceProvider:didReceiveData:forCallID:
prepareWithConfiguration:
startConnectionWithTransport:
setRemoteIDSDestinationURI:crossDeviceIdentifier:
setDelegateQueue:
localInviteDictionary
setConnectionTimeout:
endedReason
endedError
dateStartedConnecting
dateConnected
dateEnded
isMuted
setMuted:
isSendingAudioData
setSendingAudioData:
hasReceivedFirstRemoteFrame
isSendingVideo
setSendingVideo:
isRemoteVideoPaused
remoteVideoPresentationSize
remoteVideoPresentationState
T@"<CSDAVConferenceDelegate>",W,N
T@"NSObject<OS_dispatch_queue>",&,N
T@"NSDictionary",R,C,N
T@"NSDictionary",C,N
Tq,R,N
caller
TB,N,GisCaller
Td,N
Ti,N
Ti,R,N
T@"NSError",R,N
T@"NSDate",R,N
muted
TB,N,GisMuted
sendingAudio
TB,N,GisSendingAudio
sendingAudioData
TB,N,GisSendingAudioData
sendingVideo
TB,N,GisSendingVideo
remoteVideoPaused
TB,R,N,GisRemoteVideoPaused
T{CGSize=dd},N
TI,N
isSendingVideoExpected
setQueue:
setConferenceProviderCreationBlock:
_hasReceivedFirstRemoteFrame
_remoteVideoPaused
_capturingLocalVideo
_state
_remoteVideoPresentationState
_delegate
_delegateQueue
_connectionTimeout
_dateConnected
_dateEnded
_dateStartedConnecting
_sendingVideoExpected
_localInviteDictionary
_endedReason
_endedError
_configuration
_conferenceProvider
_conferenceProviderCreationBlock
_remoteVideoPresentationSize
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSDictionary",C,N,V_localInviteDictionary
Ti,N,V_state
Tq,N,V_endedReason
T@"NSError",&,N,V_endedError
T@"NSDate",&,N,V_dateStartedConnecting
T@"NSDate",&,N,V_dateConnected
T@"NSDate",&,N,V_dateEnded
TB,N,V_hasReceivedFirstRemoteFrame
TB,N,GisRemoteVideoPaused,V_remoteVideoPaused
TB,N,V_capturingLocalVideo
T@"CSDAVConferenceConfiguration",&,N,V_configuration
T@"<CSDAVConferenceProvider>",&,N,V_conferenceProvider
T@?,C,N,V_conferenceProviderCreationBlock
sendingVideoExpected
T@"NSNumber",&,N,GisSendingVideoExpected,V_sendingVideoExpected
T@"<CSDAVConferenceDelegate>",W,N,V_delegate
T@"NSObject<OS_dispatch_queue>",&,N,V_delegateQueue
Td,N,V_connectionTimeout
T{CGSize=dd},N,V_remoteVideoPresentationSize
TI,N,V_remoteVideoPresentationState
setClientUUID:
setReportingHierarchyToken:
setRequiresInviteDictionary:
setLocalLandscapeAspectRatio:
setLocalPortraitAspectRatio:
_caller
_requiresInviteDictionary
_capabilities
_clientUUID
_reportingHierarchyToken
_remoteInviteDictionary
_localLandscapeAspectRatio
_localPortraitAspectRatio
TB,N,GisCaller,V_caller
T@"VCCapabilities",&,N,V_capabilities
T@"NSUUID",&,N,V_clientUUID
T@"RTCSecureHierarchyToken",&,N,V_reportingHierarchyToken
TB,N,V_requiresInviteDictionary
T@"NSDictionary",C,N,V_remoteInviteDictionary
T{CGSize=dd},N,V_localLandscapeAspectRatio
T{CGSize=dd},N,V_localPortraitAspectRatio
initWithDictionaryRepresentation:
UUID
UUIDString
initWithHandoffIdentifier:
setOutgoing:
initWithType:value:
setRemoteHandle:
setContext:
mutableCopy
context
isOutgoing
setObject:forKeyedSubscript:
remoteHandle
value
initWithHandoffActivityUserInfo:
handoffActivityUserInfo
providerIdentifierForHandoffActivityUserInfo:
numberWithUnsignedInt:
numberWithUnsignedLongLong:
setHandle:
setAvcData:
setVersion:
setHasVersion:
hasVersion
setIdentifier:
setHasIdentifier:
hasIdentifier
hasHandle
hasAvcData
setIsMomentsAvailable:
setHasIsMomentsAvailable:
hasIsMomentsAvailable
version
identifier
handle
avcData
isMomentsAvailable
_identifier
_avcData
_handle
_version
_isMomentsAvailable
_has
TB,N
TI,N,V_version
TQ,N,V_identifier
T@"CSDMessagingHandle",&,N,V_handle
T@"NSData",&,N,V_avcData
TB,N,V_isMomentsAvailable
protoProtocolVersion
setProtoProtocolVersion:
protoWantsVideo
setProtoWantsVideo:
protoSenderMuteUplink
setProtoSenderMuteUplink:
protoMomentsV2Available
setProtoMomentsV2Available:
protoShouldSuppressInCallUI
setProtoShouldSuppressInCallUI:
setProtocolVersion:
protocolVersion
wantsVideo
setWantsVideo:
senderMuteUplink
setSenderMuteUplink:
setMomentsAvailable:
shouldSuppressInCallUI
setShouldSuppressInCallUI:
addProtocolVersion
momentsAvailable
TB,N,GisMomentsAvailable
callStatusChanged:
callContinuityChanged:
shouldSuppressRingtoneChanged:
callStartedConnecting:
callConnected:
providerManager
addDelegate:queue:
updateCallHandoffRegistration
updateAppHistoryActivityForCall
updateHandoffActivityState
updateSuppressRingtoneActivityListeningState
supportsPrimaryCalling
activityCommunicator
stopListeningForActivityType:
providers
handoffIdentifiers
listenForActivityType:dynamicIdentifier:
currentCalls
firstObject
isHostedOnCurrentDevice
isEndpointOnCurrentDevice
handoffDynamicIdentifier
activityWithType:dynamicIdentifier:userInfo:
handoffActivity
endHandoffActivity
broadcastActivity:
setHandoffActivity:
stopBroadcastingActivity:
wasDeclined
startSuppressRingtoneActivityBroadcastingForCall:
broadcastActivity:withTimeout:shouldPrioritize:
shouldSuppressRingtone
callPassingTest:
currentAudioAndVideoCalls
localizedLabel
isoCountryCode
arrayWithCapacity:
addObject:
displayName
dictionaryWithCapacity:
appHistoryActivityWithTitle:subtitle:keywords:userInfo:
startSuppressRingtoneActivityBroadcastingIfNecessaryForCallWithStatusChange:
ringtoneSuppressedRemotely
componentsSeparatedByString:
lastObject
audioAndVideoCallsWithStatus:
suppressRingtoneDueToRemoteSuppression
providersChangedForProviderManager:
receivedBroadcastedActivityType:dynamicIdentifier:
T@"CSDUserActivityManager",R,N
setActivityCommunicator:
_activityCommunicator
_handoffActivity
T@"CSDUserActivityCommunicator",&,N,V_activityCommunicator
T@"CSDUserActivity",&,N,V_handoffActivity
initWithUUIDString:
csd_UUIDv5ForString:
csd_UUIDv5
T@"NSUUID",R,N
messageSendTime
typeString
uniqueProxyIdentifier
appendFormat:
block
reportingController:statusChangedForCall:totalCallCount:
reportingController:callEnteredForeground:
allCallsBackgroundedForReportingController:
reportingController:relayMessageReceived:fromPairedDevice:
reportingController:transactionGroupCompleted:
reportingController:providerFailedWithAction:forCall:
reportingController:capturedMomentsUsageReport:
reportingController:pickedRoute:forCall:
reportingController:timedOutPickingRoute:forCall:
reportingController:addedActiveConversation:
reportingController:stateChangedForConversation:
reportingController:removedActiveConversation:
reportingController:activeRemoteParticipantsChangedForConversation:
reportingController:remoteMembersChangedForConversation:
reportingController:debugLinkChangedForConversation:
reportingController:AVCBlobRecoveryStartedForConversation:
reportingController:AVCBlobRecoveryTimedOutForConversation:
reportingController:receivedReports:forConversation:
reportingController:receivedChat:
reportingController:receivedReports:forSessionWithUUID:
reportingController:voipAppFailedToPostIncomingCall:
reportingController:voipAppBecameDisabledFromLaunching:
reportingController:voipPushDroppedOnTheFloor:
reportingController:createOneToOneFTReportingSessionForCallWithUUID:withReportingHierarchyToken:withVideo:
reportingController:createConversationReportingSessionForConversation:
dataSource
setDataSource:
T@"<CSDReporterDataSource>",W,N
setBlock:
_block
T@?,C,N,V_block
routeController
initWithNotificationName:queue:
initWithRouteController:callCenterObserver:interfaceOrientationObserver:proximitySensorCoveredObserver:queue:voiceOverObserver:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
orientation
setInterfaceOrientationPortrait:
setHandler:
activeInterfaceOrientationWithCompletion:
addDelegate:
voiceOverObserver
isEnabled
shouldRouteToSpeakerWithProximity
proximitySensorCoveredObserver
setProximitySensorCovered:
setCallback:
beginObserving
updateProximitySensorState
setProximitySensorEnabled:
shouldEnableProximitySensor
proximityDetectionMode
setProximityDetectionMode:
proximityChangeHandler
updateVoiceOverRoutingForCurrentProximityState
isProximitySensorCovered
voiceOverRunningDeterminationHandler
anyCallPassesTest:
pickedRoute
isSpeaker
receiverRoute
pickRoute:
isReceiver
voiceOverTouchShouldRouteToSpeakerDeterminationHandler
speakerRoute
currentCallCount
supportsCurrentPlatform
isInterfaceOrientationPortrait
isRTT
isTTY
routesChangedForRouteController:
initWithQueue:voiceOverObserver:
isProximitySensorEnabled
interfaceOrientationObserver
setVoiceOverRunningDeterminationHandler:
setVoiceOverTouchShouldRouteToSpeakerDeterminationHandler:
setProximityChangeHandler:
_proximitySensorCovered
_interfaceOrientationPortrait
_proximityDetectionMode
_routeController
_interfaceOrientationObserver
_proximitySensorCoveredObserver
_voiceOverObserver
_voiceOverRunningDeterminationHandler
_voiceOverTouchShouldRouteToSpeakerDeterminationHandler
_proximityChangeHandler
T@"<CSDCallCenterObserver>",R,N,V_callCenterObserver
T@"TURouteController",R,N,V_routeController
T@"<CSDOrientationObserver>",R,N,V_interfaceOrientationObserver
T@"<TUNotifyObserver>",R,N,V_proximitySensorCoveredObserver
T@"<CSDVoiceOverObserver>",R,N,V_voiceOverObserver
Ti,N,V_proximityDetectionMode
proximitySensorCovered
TB,N,GisProximitySensorCovered,V_proximitySensorCovered
interfaceOrientationPortrait
TB,N,GisInterfaceOrientationPortrait,V_interfaceOrientationPortrait
proximitySensorEnabled
TB,R,N,GisProximitySensorEnabled
T@?,C,N,V_voiceOverRunningDeterminationHandler
T@?,C,N,V_voiceOverTouchShouldRouteToSpeakerDeterminationHandler
T@?,C,N,V_proximityChangeHandler
handler
T@?,C,N
conferenceID
hasPrefix:
length
substringFromIndex:
GUID
dataUploaded
dataDownloaded
initWithIDSChat:
setFaceTimeTransportType:
isRemoteMomentsAvailable
setRemoteMomentsAvailable:
otherIMHandle
initWithDestinationID:
setHasVideo:
setSupportsHolding:
setSupportsGrouping:
setSupportsUngrouping:
setSupportsDTMF:
setRequiresInCallSounds:
setCrossDeviceIdentifier:
setAudioInterruptionProvider:
setAudioInterruptionOperationMode:
setAudioCategory:
setAudioMode:
hasVideo
debugLink
setShouldShowDebugOverlay:
numberWithInteger:
initWithFaceTimeIDSChat:
initWithIMAVChat:
initWithTUConversation:
faceTimeTransportType
Tq,N
remoteMomentsAvailable
TB,R,N,GisRemoteMomentsAvailable
exceptionWithName:reason:userInfo:
raise
removeAllObjects
objectAtIndex:
numberWithLongLong:
initWithCapacity:
addRelayDeviceRouteChange:
setCallUuid:
setProviderId:
featuresCount
clearFeatures
featuresAtIndex:
addFeatures:
relayDeviceRouteChangesCount
clearRelayDeviceRouteChanges
relayDeviceRouteChangeAtIndex:
relayDeviceRouteChangeType
hasCallUuid
hasProviderId
setIsIncoming:
setHasIsIncoming:
hasIsIncoming
setIsHeld:
setHasIsHeld:
hasIsHeld
setHasConnected:
setHasHasConnected:
hasHasConnected
setHasEnded:
setHasHasEnded:
hasHasEnded
setIsCurrentlyGrouped:
setHasIsCurrentlyGrouped:
hasIsCurrentlyGrouped
setDurationMs:
setHasDurationMs:
hasDurationMs
setSetupTimeMs:
setHasSetupTimeMs:
hasSetupTimeMs
setConnectionTimeMs:
setHasConnectionTimeMs:
hasConnectionTimeMs
features
setFeatures:count:
setEndReason:
setHasEndReason:
hasEndReason
setHasFaceTimeTransportType:
hasFaceTimeTransportType
setTelephonyTransportType:
setHasTelephonyTransportType:
hasTelephonyTransportType
setProviderErrorCode:
setHasProviderErrorCode:
hasProviderErrorCode
setIsRelay:
setHasIsRelay:
hasIsRelay
setProviderEndedReason:
setHasProviderEndedReason:
hasProviderEndedReason
setHasStartedConnecting:
setHasHasStartedConnecting:
hasHasStartedConnecting
idsLinkType
setIdsLinkType:
setHasIdsLinkType:
hasIdsLinkType
idsLinkTypeAsString:
StringAsIdsLinkType:
callUuid
providerId
isIncoming
isHeld
hasConnected
hasEnded
isCurrentlyGrouped
durationMs
setupTimeMs
connectionTimeMs
endReason
telephonyTransportType
providerErrorCode
isRelay
providerEndedReason
hasStartedConnecting
relayDeviceRouteChanges
setRelayDeviceRouteChanges:
_features
_connectionTimeMs
_durationMs
_endReason
_providerEndedReason
_providerErrorCode
_setupTimeMs
_callUuid
_faceTimeTransportType
_idsLinkType
_providerId
_relayDeviceRouteChanges
_telephonyTransportType
_hasConnected
_hasEnded
_hasStartedConnecting
_isCurrentlyGrouped
_isHeld
_isIncoming
_isRelay
T@"NSString",&,N,V_callUuid
T@"NSString",&,N,V_providerId
TB,N,V_isIncoming
TB,N,V_isHeld
TB,N,V_hasConnected
TB,N,V_hasEnded
TB,N,V_isCurrentlyGrouped
TQ,N,V_durationMs
TQ,N,V_setupTimeMs
TQ,N,V_connectionTimeMs
TQ,R,N
T^I,R,N
TQ,N,V_endReason
TI,N,V_faceTimeTransportType
TI,N,V_telephonyTransportType
Tq,N,V_providerErrorCode
TB,N,V_isRelay
Tq,N,V_providerEndedReason
TB,N,V_hasStartedConnecting
Ti,N,V_idsLinkType
T@"NSMutableArray",&,N,V_relayDeviceRouteChanges
orderedSet
supportsDisplayingFaceTimeAudioCalls
supportsDisplayingFaceTimeVideoCalls
daemonConnected:
handleChatStateChanged:
handleChatFirstRemoteFrameArrived:
handleChatInvitationSent:
handleChatCallInfoChangedNotification:
handleChatConferenceIDChangedNotification:
handleChatConferenceMetadataUpdated:
handleChatMayRequireBreakBeforeMakeChanged:
handleChatInFrequencyChangedNotification:
handleChatOutFrequencyChangedNotification:
setIMAVCapabilities:toCaps:
setupIMAVController
setBlockIncomingInvitationsDuringCall:
setBlockMultipleIncomingInvitations:
_requestPendingInvites
requestPendingACInvitations
requestPendingVCInvitations
cachedChats
chatWithUUID:
removeObject:
_endChatWithUUID:withEndedReason:
endChatWithReason:
facetimeService
callService
isRegistered
imHandleWithID:
arrayWithObjects:count:
callUUID
initOutgoingTo:isVideo:isRelayed:GUID:
setConnectionTimeoutTime:
faceTimeProvider
isUpgrade
setInvitationTimeoutTime:
_setLocalLandscapeAspectRatio:localPortraitAspectRatio:forChat:
invite:additionalPeers:excludingPushTokens:
registerChat:
isComplete
reportCallWithUUID:updated:
fulfill
faceTimeDemuxerDelegate
providerDelegate:callWithUUID:startedConnectingAtDate:
reportOutgoingCallWithUUID:connectedAtDate:
pendingCallActionsOfClass:withCallUUID:
fulfillWithDateConnected:
fail
trace:
_updateProviderForConnectingChat:
_updateProviderForConnectedChat:
_updateProviderForEndedChat:
failureContextForChat:
providerDelegate:callWithUUID:endedAtDate:withReason:failureContext:
setFailureReason:
supportsWLAN
allowAnyNetwork
supportsNonWiFiCalling
supportsNonWiFiFaceTime
localizedStringForKey:value:table:
setTitle:
setMessage:
setHasWiFiSettingsRemediation:
setHasCellularSettingsRemediation:
setHasDateAndTimeSettingsRemediation:
setHasLocationSettingsRemediation:
destinationIdIsPhoneNumber
isLocalParticipant
avChat
reportOutgoingCallWithUUID:sentInvitationAtDate:
_activeCallID
setVideoStreamToken:
reportCallWithUUID:crossDeviceIdentifier:changedBytesOfDataUsed:
mayRequireBreakBeforeMake
setMayRequireBreakBeforeMake:
inFrequencyLevel
reportCallWithUUID:changedFrequencyData:forDirection:
outFrequencyLevel
declineInvitationWithResponse:
reportNewIncomingCallWithUUID:update:completion:
setProvider:
_setUpListeners
endChat
downgradeToAudio
setIsSendingVideo:
acceptInvitation
isOnHold
setIsSendingAudio:
videoPresentationSize
videoPresentationState
IMAVChatRemoteVideoPresentationStateFromCXVideoPresentationState:
isRelaying
setRelayed:
setMute:
invitedToIMAVChat:
createdOutgoingIMAVChat:
inviteFailedFromIMHandle:reason:
providerDidReset:
providerDidBegin:
provider:executeTransaction:
provider:performStartCallAction:
provider:performAnswerCallAction:
provider:performEndCallAction:
provider:performSetHeldCallAction:
provider:performSetMutedCallAction:
provider:performSetGroupCallAction:
provider:performPlayDTMFCallAction:
provider:timedOutPerformingAction:
provider:didActivateAudioSession:
provider:didDeactivateAudioSession:
provider:performSendMMIOrUSSDCodeAction:
provider:performJoinCallAction:
provider:performSetTTYTypeCallAction:
provider:performSetSendingVideoCallAction:
provider:performSetRelayingCallAction:
provider:performPullCallAction:
provider:performSetVideoPresentationSizeCallAction:
provider:performSetVideoPresentationStateCallAction:
isManagingCallWithUUID:
upgradeSessionUUIDForCallWithUUID:
hasCallStartedConnectingWithUUID:
endCallWithUUIDAsAnsweredElsewhere:
endCallWithUUIDAsDeclinedElsewhere:
endCallWithUUID:
inviteIMAVPeersWithAction:additionalPeers:tokensToExclude:
setFaceTimeDemuxerDelegate:
setCachedChats:
_faceTimeDemuxerDelegate
_provider
_cachedChats
T@"CXProvider",&,N,V_provider
T@"NSMutableOrderedSet",&,N,V_cachedChats
T@"<CSDFaceTimeProviderDelegateManagerDelegate>",W,N,V_faceTimeDemuxerDelegate
initWithName:
faceTimeIMAccountCallerIDChanged:
callerID
callerIDByUpdatingState
postNotificationName:object:
setCallerID:
_callerID
T@"NSString",C,N,V_callerID
distantPast
setRemoteMembers:
newHierarchyTokenFromParentToken:
setReportingHierarchySubToken:
reportingHierarchySubToken
initWithTransportToken:delegate:queue:reportingHierarchyToken:
requestActiveParticipants
groupUUID
messagesGroupUUID
avcSessionToken
avcSessionIdentifier
isLocallyCreated
hasJoined
isUplinkMuted
isAudioEnabled
isVideoEnabled
localMember
remoteMembers
memberIdentifiers
allObjects
componentsJoinedByString:
activeRemoteParticipants
conversationReport
appendString:
activeRemoteParticipantsByIdentifier
allValues
setWithArray:
initWithUUID:groupUUID:
setMessagesGroupUUID:
setAvcSessionToken:
setAvcSessionIdentifier:
setAudioEnabled:
setVideoEnabled:
setLocallyCreated:
setHasJoined:
initiator
setInitiator:
messagesGroupName
setMessagesGroupName:
maxVideoDecodesAllowed
setMaxVideoDecodesAllowed:
setLocalMember:
setConversationReport:
setDebugLink:
setWithCapacity:
tuConversationParticipant
setActiveRemoteParticipants:
avcSession
sessionIdentifier
sessionToken
idsSession
localParticipantIdentifier
isAudioReady
setRemoteMemberHandles:
localParticipantData
initWithIdentifier:handle:avcData:
setUplinkMuted:
expectedAudioEnabled
setExpectedAudioEnabled:
expectedVideoEnabled
setExpectedVideoEnabled:
expectedVideoPaused
setExpectedVideoPaused:
setRelaying:
removeParticipant:
allowsVideo
addParticipant:withVideoEnabled:
setServerProvidedParticipantIdentifiers:
_refreshActiveParticipantsList
serverBag
rebroadcastTimeThreshold
setRebroadcastTimeThreshold:
conversation:addedActiveParticipant:
conversationChanged:
_cancelInFlightAVCBlobRecoveryIfNecessary
isEqualToHandle:
conversation:removedActiveParticipant:
beginParticipantUpdates
videoQuality
visibility
prominence
participantIdentifier
setVideoQuality:visibility:prominence:forParticipantWithIdentifier:
commitParticipantUpdates
remoteMemberHandles
containsObject:
initWithHandle:
isJoined
unionSet:
addMembers:toExistingMembers:activeParticipants:triggeredLocally:conversationReport:
localCapabilities
idsDestination
avcSessionCreationBlock
setAvcSession:
setAvcSessionInProgress:
wantsStagingArea
shouldShowDebugOverlay
setByAddingObject:
joinUsingContext:localParticipantAVCData:members:conversationReport:
_reportConversationFailedWithProviderEndedReason:
sendLocalParticipantData:
setAudioReady:
_startAVCSessionIfNecessary
_beginTimeoutForLeavingConversationWithReason:
unsignedIntegerValue
setDownlinkMuted:forParticipantWithIdentifier:
leave
setAudioAndVideoMuted:forParticipantWithIdentifier:
isEqualToSet:
URLFragmentAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
objectAtIndexedSubscript:
queryItemWithName:value:
setQueryItems:
absoluteString
stringByReplacingOccurrencesOfString:withString:
base64StringForDebugKey:
tu_URLSafeBase64EncodedString
debugLinkBaseURLString
initWithString:
debugLinkFragmentForBase64Key:base64Data:
setFragment:
initWithURL:resolvingAgainstBaseURL:
scheme
setScheme:
host
setHost:
path
setPath:
avcSessionInProgress
start
_cancelTimeoutForLeavingConversation
timeoutBlock
setTimeoutBlock:
sessionCleanupTimeout
activeParticipantDestinationsByIdentifier
inflightAVCBlobRecoveryBlocksByIdentifier
AVCBlobRecoveryGracePeriod
tuConversation
avcBlobRecoveryStartedForConversation:
avcBlobRecoveryTimedOutForConversation:
AVCBlobRecoveryTimeout
conversation:requestAVCBlobForParticipantDestination:completion:
allKeys
serverProvidedParticipantIdentifiers
isWaitingToPruneParticipants
setWaitingToPruneParticipants:
activeParticipantPruningTimeout
removeParticipantWithIdentifier:fromHandle:
participantRefreshBlock
setParticipantRefreshBlock:
activeParticipantRefreshDelay
conversation:failedWithContext:
setMemberIdentifiers:
setStreamToken:
restart
setActiveIDSDestination:
isFromStorage
conversationInvalidated:
setFromStorage:
setActiveParticipantDestinationsByIdentifier:
_requestAVCBlobsIfNecessary
_pruneRemoteParticipantsIfNecessary
reportsReceived:forConversation:
userInfo
intValue
_errorToAVCProviderEndedReason:defaultProviderReason:
lastRebroadcastTime
timeIntervalSinceDate:
setLastRebroadcastTime:
broadcastLocalParticipantData
_cleanUpFromAVCSessionFailure
conversation:updatedActiveParticipant:
setAudioPriority:
setVideoPriority:
conversation:mediaPrioritiesChangedForParticipant:
session:receivedActiveParticipantDestinationsByIdentifier:
session:didJoinGroup:participantIdentifiers:error:
session:didLeaveGroupWithError:
sessionDidTerminate:
session:endedWithError:reason:
session:didReceiveReport:
session:didStart:error:
session:didDetectError:
session:didStopWithError:
session:changedLocalAudioEnabled:didSucceed:error:
session:changedLocalVideoEnabled:didSucceed:error:
session:changedLocalVideoPaused:didSucceed:error:
serverDisconnectedForSession:
remoteParticipantWithIdentifier:updatedAudioEnabled:streamToken:
remoteParticipantWithIdentifier:updatedVideoEnabled:streamToken:
remoteParticipantWithIdentifier:updatedAudioEnabled:updatedVideoEnabled:streamToken:
remoteParticipantWithIdentifier:didChangeAudioPriority:videoPriority:
initWithUUID:groupUUID:messagesGroupUUID:locallyCreated:localMember:initiator:remoteMembers:groupSession:serialQueue:fromStorage:conversationReport:
localConversationParticipant
addActiveParticipant:
updateParticipantPresentationContexts:
addRemoteMembers:triggeredLocally:
joinUsingContext:
startAudio
setRemoteParticipantsDownlinkMuted:
isRepresentedByRemoteMembers:
containsMemberWithHandle:
setDebugLinkForKey:data:
updateDebugLinkWithContext
setServerBag:
setAvcSessionCreationBlock:
_relaying
_fromStorage
_locallyCreated
_hasJoined
_waitingToPruneParticipants
_avcSessionInProgress
_memberIdentifiers
_UUID
_groupUUID
_messagesGroupUUID
_initiator
_localMember
_remoteMembers
_messagesGroupName
_conversationReport
_activeRemoteParticipantsByIdentifier
_idsSession
_avcSession
_expectedAudioEnabled
_expectedVideoEnabled
_expectedVideoPaused
_activeParticipantDestinationsByIdentifier
_serverProvidedParticipantIdentifiers
_lastRebroadcastTime
_rebroadcastTimeThreshold
_remoteMemberHandles
_serverBag
_avcSessionCreationBlock
_reportingHierarchySubToken
_inflightAVCBlobRecoveryBlocksByIdentifier
_timeoutBlock
_participantRefreshBlock
_debugLink
Tq,N,V_state
TB,N,GhasJoined,V_hasJoined
T@"NSMutableDictionary",R,N,V_activeRemoteParticipantsByIdentifier
T@"CSDIDSGroupSession",R,N,V_idsSession
T@"<CSDAVCSession>",&,N,V_avcSession
T@"NSNumber",&,N,V_expectedAudioEnabled
T@"NSNumber",&,N,V_expectedVideoEnabled
T@"NSNumber",&,N,V_expectedVideoPaused
T@"NSDictionary",C,N,V_activeParticipantDestinationsByIdentifier
T@"NSSet",C,N,V_serverProvidedParticipantIdentifiers
waitingToPruneParticipants
TB,N,GisWaitingToPruneParticipants,V_waitingToPruneParticipants
T@"NSDate",C,N,V_lastRebroadcastTime
TQ,N,V_rebroadcastTimeThreshold
T@"NSSet",C,N,V_remoteMembers
T@"NSSet",C,N,V_remoteMemberHandles
T@"<CSDConversationServerBag>",&,N,V_serverBag
T@?,C,N,V_avcSessionCreationBlock
T@"NSObject",&,N,V_reportingHierarchyToken
T@"NSObject",&,N,V_reportingHierarchySubToken
T@"NSMutableDictionary",R,C,N,V_inflightAVCBlobRecoveryBlocksByIdentifier
T@?,C,N,V_timeoutBlock
T@?,C,N,V_participantRefreshBlock
TB,N,V_avcSessionInProgress
T@"NSURL",C,N,V_debugLink
T@"<CSDConversationDelegate>",W,N,V_delegate
T@"NSUUID",R,N,V_UUID
T@"NSUUID",R,N,V_groupUUID
T@"NSUUID",R,N,V_messagesGroupUUID
audioReady
TB,R,N,GisAudioReady
locallyCreated
TB,R,N,GisLocallyCreated,V_locallyCreated
T@"TUHandle",R,N,V_initiator
T@"TUConversationMember",R,N,V_localMember
T@"NSSet",R,C,N
fromStorage
TB,N,GisFromStorage,V_fromStorage
T@"NSString",C,N,V_messagesGroupName
T@"CSDConversationParticipant",R,N
T@"NSSet",C,N,V_memberIdentifiers
T@"TUConversation",R,C,N
uplinkMuted
TB,N,GisUplinkMuted
videoEnabled
TB,N,GisVideoEnabled
audioEnabled
TB,N,GisAudioEnabled
videoPaused
TB,N,GisVideoPaused
relaying
TB,N,GisRelaying,V_relaying
T@"TUConversationReport",R,N,V_conversationReport
handleActiveAccountsChanged:
_handlePairedDeviceChangedFrom:to:
setHasSupportsHolding:
hasSupportsHolding
setHasSupportsGrouping:
hasSupportsGrouping
setHasSupportsUngrouping:
hasSupportsUngrouping
setHasSupportsDTMF:
hasSupportsDTMF
setSupportsUnambiguousMultiPartyState:
setHasSupportsUnambiguousMultiPartyState:
hasSupportsUnambiguousMultiPartyState
setSupportsAddCall:
setHasSupportsAddCall:
hasSupportsAddCall
setSupportsSendingToVoicemail:
setHasSupportsSendingToVoicemail:
hasSupportsSendingToVoicemail
supportsHolding
supportsGrouping
supportsUngrouping
supportsDTMF
supportsUnambiguousMultiPartyState
supportsAddCall
supportsSendingToVoicemail
_supportsAddCall
_supportsDTMF
_supportsGrouping
_supportsHolding
_supportsSendingToVoicemail
_supportsUnambiguousMultiPartyState
_supportsUngrouping
TB,N,V_supportsHolding
TB,N,V_supportsGrouping
TB,N,V_supportsUngrouping
TB,N,V_supportsDTMF
TB,N,V_supportsUnambiguousMultiPartyState
TB,N,V_supportsAddCall
TB,N,V_supportsSendingToVoicemail
callWithUniqueProxyIdentifier:
initWithRelayMessage:outgoing:
setCallDelegatesIfNeeded:
hostCallCreationTime
setHostCreationTime:
setHostMessageSendTime:
setClientMessageReceiveTime:
cannotBeAnswered
setEndpointOnCurrentDevice:
cannotRelayAudioOrVideoOnPairedDevice
setCannotRelayAudioOrVideo:
propertiesChangedForCall:
displayContext
displayContextByMergingWithDisplayContext:
setDisplayContext:
updateWithRelayMessage:
callsHostedElsewhere
setLocallyDisconnectedWithReasonIfNone:
disconnectedReason
setLocallyDisconnectedWithReasonIfNone:stopConference:
stopConferenceForIdentifier:
setLocallyConnected
callModel
setModel:
setWantsHoldMusic:
protoCalls
isEqualToCall:
updateRelayCall:
initWithUniqueProxyIdentifier:endpointOnCurrentDevice:
hardPauseDigits
setHardPauseDigits:
hardPauseDigitsState
setHardPauseDigitsState:
setLocallyConnecting
hasCurrentCalls
pullRemotelyHostedCallsForMessage:completion:
callCapabilitiesState
updatePairedHostDeviceCallCapabilitiesState:
callProviderManager
tuProviders
registerPairedHostDeviceProviders:
needsManualInCallSounds
setNeedsManualInCallSounds:
soundRegion
setSoundRegion:
setLocallyHasSentInvitation
tuHandle
isTinCanProvider
remoteUplinkMutedSetTime
isRemoteUplinkMuted
setRemoteUplinkMuted:
setRemoteUplinkMutedSetTime:
routes
tuRoute
pairedHostDeviceRouteController
handleUpdatedPairedHostDeviceRoutes:
supportsTTYWithVoice
setSupportsTTYWithVoice:
initWithIdentifier:
inviteData
relayInviteDictionary
becomeEndpointForPullFromRemoteDevice
prepareConferenceConnection:remoteInviteDictionary:completion:
handleIncomingCallMessageFromHost:fromPairedDevice:
handleCallDialedMessageFromHost:fromPairedDevice:
handleCallAnsweredElsewhereMessageFromHost:fromPairedDevice:
handleCallDisconnectedMessageFromHost:
handleCallConnectedMessageFromHost:
handlePullRelayingCallsMessageFromHost:fromPairedDevice:
handleResetWantsHoldMusicFromHost:
handleUpdateCallModelMessageFromHost:
handleDeviceUnavailableMessageFromHost:
handleResetStateMessageFromHost:fromPairedDevice:
handleHardPauseDigitsAvailabilityMessageFromHost:
handleUpdateRemoteCallStateMessageFromHost:
handleCallStartedConnectingMessageFromHost:
handlePushHostedCallsMessageFromHost:completion:
handleUpdateCallContextAvailableMessageFromHost:
handleNeedsManualInCallSoundsChangeMessageFromHost:
handleInvitationSentMessageFromHost:
handleUpdateCallDisplayContextMessageFromHost:
handleUpdateRemoteUplinkMutedMessageFromHost:
handleUpdateRoutesMessageFromHost:
handleUpdateSupportsTTYWithVoiceMessageFromHost:
initWithType:
setDestinationID:
setService:
setUniqueProxyIdentifier:
setSourceIdentifier:
setDTMFKey:
setDisconnectedReason:
enumerateKeysAndObjectsUsingBlock:
setType:
pairedDeviceExists
setMessageSendTime:
receivedMessageType
tuProvider
initWithProvider:
setVideo:
sourceIdentifier
setAudioSourceIdentifier:
isVoicemail
setDialType:
isEmergency
isSOS
setSOS:
localSenderIdentityUUID
setLocalSenderIdentityUUID:
localSenderIdentityAccountUUID
setLocalSenderIdentityAccountUUID:
telephonyProvider
senderIdentityForAccountUUID:
ttyType
setTtyType:
originatingUIType
setOriginatingUIType:
contactIdentifier
setContactIdentifier:
protoService
setProtoService:
protoWantsHoldMusic
setProtoWantsHoldMusic:
protoDisconnectedReason
setProtoDisconnectedReason:
protoCannotBeAnswered
setProtoCannotBeAnswered:
protoDTMFKey
bytes
dataWithBytes:length:
setProtoDTMFKey:
protoVoicemail
setProtoVoicemail:
hardPauseState
setHardPauseState:
protoShouldSuppressRingtone
setProtoShouldSuppressRingtone:
protoNeedsManualInCallSounds
setProtoNeedsManualInCallSounds:
protoCannotRelayAudioOrVideoOnPairedDevice
setProtoCannotRelayAudioOrVideoOnPairedDevice:
protoExpectedEndpointOnMessagingDevice
setProtoExpectedEndpointOnMessagingDevice:
initWithCallCapabilitiesState:
setProtoCallCapabilitiesState:
protoCallCapabilitiesState
protoEmergency
setProtoEmergency:
protoSOS
setProtoSOS:
protoUplinkMuted
setProtoUplinkMuted:
protoRemoteUplinkMuted
setProtoRemoteUplinkMuted:
protoCallModel
protoCallModelState
holdAllowed
mergeable
takingCallsPrivateAllowed
ambiguityState
addCallAllowed
sendToVoicemailAllowed
setProtoCallModel:
setProtoCallModelState:
setAmbiguityState:
setSwappable:
setMergeable:
setHoldAllowed:
setAddCallAllowed:
setTakingCallsPrivateAllowed:
setHardPauseAvailable:
setEndAndAnswerAllowed:
isHoldAndAnswerAllowed
setHoldAndAnswerAllowed:
setSendToVoicemailAllowed:
initWithCall:
addProtoCall:
handleWithTUHandle:
destinationID
destinationIdIsEmailAddress
setProviders:
protoProvider
service
providerWithService:video:
setProtoProvider:
serviceForProvider:video:
hasProtoVideo
protoVideo
setProtoVideo:
protoDisplayContext
initWithCallDisplayContext:
setProtoDisplayContext:
endpointIDSDestinationURIs
destinationWithURI:
destinationWithDestinations:
destinationURIs
setEndpointIDSDestinationURIs:
localSenderIdentityUUIDString
setLocalSenderIdentityUUIDString:
localSenderIdentityAccountUUIDString
setLocalSenderIdentityAccountUUIDString:
remoteParticipantHandles
addRemoteParticipantHandles:
protoTTYType
setProtoTTYType:
protoSupportsTTYWithVoice
setProtoSupportsTTYWithVoice:
setProtoPriority:
protoOriginatingUIType
setProtoOriginatingUIType:
initWithDictionary:
initWithType:uniqueProxyIdentifier:
receivedMessageTypeString
dialRequest
wantsHoldMusic
setCannotBeAnswered:
DTMFKey
setVoicemail:
customizeForProtocolVersion:
setShouldSuppressRingtone:
setCannotRelayAudioOrVideoOnPairedDevice:
isExpectedEndpointOnMessagingDevice
setExpectedEndpointOnMessagingDevice:
setCallCapabilitiesState:
setEmergency:
setCallModel:
addCall:
setTuHandle:
setTuProviders:
setTuProvider:
setTuProvider:isVideo:
endpointIDSDestination
setEndpointIDSDestination:
remoteParticipantTUHandles
setRemoteParticipantTUHandles:
priority
setPriority:
T@"NSString",R,C,N
T@"TUDialRequest",R,N
TC,N
voicemail
TB,N,GisVoicemail
expectedEndpointOnMessagingDevice
TB,N,GisExpectedEndpointOnMessagingDevice
T@"TUCallCapabilitiesState",&,N
emergency
TB,N,GisEmergency
TB,N,GisSOS,SsetSOS:
T@"TUCallModel",&,N
T@"TUHandle",&,N
T@"NSArray",&,N
video
TB,N,GisVideo
T@"TUCallProvider",&,N
T@"TUCallDisplayContext",&,N
remoteUplinkMuted
TB,N,GisRemoteUplinkMuted
T@"IDSDestination",&,N
T@"NSUUID",&,N
T@"NSSet",C,N
setValue:
setNormalizedValue:
setIsoCountryCode:
setHasType:
hasType
typeAsString:
StringAsType:
hasValue
hasNormalizedValue
hasIsoCountryCode
normalizedValue
_isoCountryCode
_normalizedValue
_type
_value
Ti,N,V_type
T@"NSString",&,N,V_value
T@"NSString",&,N,V_normalizedValue
T@"NSString",&,N,V_isoCountryCode
conversationID
setConversationID:
timebase
timeIntervalSinceReferenceDate
setTimebase:
hasConversationID
initWithTimeIntervalSince1970:
initWithConversationID:timebase:
initWithTUConversationReport:
tuConversationReport
T@"TUConversationReport",R,C,N
callUpdateWithDefaultValuesSet
systemMuteStatusChanged:
sanitizedCallUpdate
updateWithCallUpdate:
baseDestinationID
initWithDialRequest:
endpointOnCurrentDevice
initOutgoingWithUniqueProxyIdentifier:backingCallSourceIdentifier:callUpdate:isVideo:endpointOnCurrentDevice:
initWithStartCallAction:
initWithJoinConversationRequest:
usesSystemMuting
sharedAudioSystemController
setUnderlyingUplinkMuted:
propertiesChanged
backingCallSource
displayCallSourceIdentifier
mergedCallUpdate
updateWithUpdate:
hasSet
model
verificationStatus
setVerificationStatus:
identificationCategory
setIdentificationCategory:
junkConfidence
setJunkConfidence:
handleUpdatedPropertiesAfterChangesInBlock:
hasStartedOutgoing
isTelephonyProvider
failureContext
failureReason
setProviderFailureReasonIfNecessary:
endedReasonUserInfoForCall:
localizedCallerName
crossDeviceIdentifier
callHistoryIdentifier
pauseDigitsQueue
originalPauseDigitsString
stringByAppendingString:
isUsingBaseband
isWiFiCallingCurrentlyAvailable
isBlocked
videoStreamToken
ISOCountryCode
senderIdentityForUUID:
accountUUID
activeRemoteParticipantHandles
tuHandlesWithHandles:
audioInterruptionProvider
audioInterruptionOperationMode
audioInterruptionProviderType
audioSessionID
retrieveSessionWithID:
audioCategory
proxyAVAudioSession
category
audioMode
mode
requiresInCallSounds
inCallSoundRegion
handoffContext
handoffIdentifier
prefersExclusiveAccessToCellularNetwork
isMutuallyExclusiveCall
providerCallDelegate
backingCallSourceIdentifier
providerWithIdentifier:
backingProvider
nextPauseDigits
isHardPause
digits
hasQueuedHardPauseDigits
isUnderlyingUplinkMuted
isDownlinkMuted
processIdentifier
auditToken
providerContext
callGroupUUID
_sendSoftPauseDigitsIfNecessary
uniqueProxyIdentifierUUID
initWithCallUUID:relaying:
performCallAction:forCall:
setTTYType:
isVideoUpgradeFromCall:
initWithCallUUID:handle:
setRelay:
setUpgrade:
isRedial
setRetry:
dialType
dialWithRequest:displayContext:
callSourceForDialRequest:
setBackingCallSource:
startCallActionWithDialRequest:
performStartCallAction:forCall:
callSourceForJoinConversationRequest:
setWantsStagingArea:
initWithCallUUID:groupUUID:
answerWithRequest:
pauseVideoToStart
initWithCallUUID:
behavior
isConversation
setDowngradeToAudio:
hold
_setIsOnHold:
unhold
initWithCallUUID:onHold:
dequeueAllPauseDigits
groupWithOtherCall:
initWithCallUUID:callUUIDToGroupWith:
ungroup
disconnectWithReason:
setFailureContext:
initWithCallUUID:sendingVideo:
initWithCallUUID:muted:
initWithCallUUID:ttyType:
setDownlinkMuted:
_sendDTMFDigits:type:
stringWithCharacters:length:
initWithCallUUID:videoPresentationSize:
initWithCallUUID:videoPresentationState:
dequeueNextPauseDigits
initWithCallUUID:digits:type:
isConnected
handleAudioSessionActivationStateChangedTo:
pauseDigitsQueueChanged:
initIncomingWithBackingCallSource:UUID:update:
initOutgoingWithDialRequest:
initOutgoingWithRequestedStartCallAction:backingCallSource:
initOutgoingWithJoinConversationRequest:
initWithHandoffContext:backingCallSource:
canBeControlledByCallSource:
updateForDisconnection
endedReasonUserInfo
callerNameFromNetwork
isThirdPartyVideo
displayProvider
callStatusFromUnderlyingSource
callRelaySupport
providerProcessIdentifier
providerAuditToken
initialLinkType
setHeld:
setCallGroupUUID:
joinConversationWithRequest:
sendHardPauseDigits
playRemoteDTMFToneForKey:
setProviderCallDelegate:
setDisplayCallSourceIdentifier:
setMergedCallUpdate:
setPauseDigitsQueue:
_outgoing
_wantsStagingArea
_video
_held
_sendingVideo
_underlyingUplinkMuted
_ttyType
_callGroupUUID
_providerCallDelegate
_backingCallSource
_failureContext
_backingCallSourceIdentifier
_displayCallSourceIdentifier
_mergedCallUpdate
_pauseDigitsQueue
T@"NSString",R,C,N,V_backingCallSourceIdentifier
T@"CXCallSource",&,N,V_backingCallSource
T@"NSString",C,N,V_displayCallSourceIdentifier
T@"CXCallUpdate",&,N,V_mergedCallUpdate
T@"CSDPauseDigitsQueue",&,N,V_pauseDigitsQueue
TB,N,GisVideo,V_video
TB,N,V_wantsStagingArea
T@"AVAudioSession",R,N
T@"<CSDProviderCallDelegate>",W,N,V_providerCallDelegate
held
TB,N,GisHeld,V_held
Ti,N,V_ttyType
T@"NSUUID",C,N,V_callGroupUUID
TB,N,V_sendingVideo
underlyingUplinkMuted
TB,N,GisUnderlyingUplinkMuted,V_underlyingUplinkMuted
T@"CXCallFailureContext",&,N,V_failureContext
handleCallHasStartedOutgoingChangedNotification:
handleCallStatusChangedNotification:
handleCallStartedConnectingNotification:
handleCallConnectedNotification:
handleCallMayRequireBreakBeforeMakeChangedNotification:
handleCallWantsHoldMusicChangedNotification:
callIsOnHoldChangedNotification:
breakBeforeMakeTimeout
_handleCallHasStartedOutgoingChanged:
_handleCallStatusChanged:
_handleCallStartedConnecting:
_handleCallConnected:
_handleCallMayRequireBreakBeforeMakeChanged:
_handleCallWantsHoldMusicChanged:
callCenter
senderIdentityCapabilitiesWithUUID:
supportsSimultaneousVoiceAndData
nonWifiFaceTimeAvailable
wiFiActiveAndReachable
doubleValue
_handleAudioReadyForCall:
_setUpCallDurationLimitIfNecessary
_updateCallMutingForHoldMusic
disconnectCall:
wantsBreakBeforeMakeForCall:
_disconnectOrPullExistingCallsForCallIfNecessary:
_pushCallToAlternateDestinationIfNecessary:
_notifyCLTMOfIncomingCall
unsuppressRingtoneIfNecessary
setHeySiriEnabled:
disconnectActiveCallsBasedOnCallStatusForCall:
enableEmergencyModeIfNecessaryForCall:
_setUpBreakBeforeMakeTimeoutIfNecessaryForCall:
sharedMonitor
enableEmergencyModeWithError:
requestCLTMThrottleUncapToken
pullRelayingCallsFromClient
pushHostedCallsToDestination:
endpointRapportMediaSystemIdentifier
endpointRapportEffectiveIdentifier
pickRouteForRapportDeviceWithMediaSystemIdentifier:effectiveIdentifier:
setUpBreakBeforeMakeTimeout
routeManager
isCarPlayRouteAvailable
uplinkWasExplicitlyMuted
hasRestrictionsInRetailEnvironment
callDurationLimitTimer
_handleCallDurationTimerFired
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setCallDurationLimitTimer:
callsPassingTest:
userNotificationWithIdentifier:title:message:defaultButton:alternateButton:otherButton:
setUsesNotificationCenter:
setRepresentedApplicationBundle:
addUserNotification:listener:completionHandler:
isAudioMutedForHoldMusic
setAudioMutedForHoldMusic:
Td,R,N
initWithCallCenter:
setRequestCLTMThrottleUncapToken:
setSetUpBreakBeforeMakeTimeout:
_audioMutedForHoldMusic
_requestCLTMThrottleUncapToken
_callDurationLimitTimer
_setUpBreakBeforeMakeTimeout
T@"NSTimer",&,V_callDurationLimitTimer
audioMutedForHoldMusic
TB,N,GisAudioMutedForHoldMusic,V_audioMutedForHoldMusic
Ti,N,V_requestCLTMThrottleUncapToken
T@"TUCallCenter",R,N
T@"<TUCallContainerPrivate>",R,N
T@"CSDRouteManager",R,N
T@?,C,N,V_setUpBreakBeforeMakeTimeout
deviceType
initWithResolver:withSystemStatusPublisher:queue:
ringingCallAttributions
ringingVideoConferenceAttributions
resolvedDescriptor
openInCallServiceByURL
resolvedCall
openVoIPAppWithBundleIdentifier:
handleUserInteractionsWithBlock:
updateStatusBar
hasAdoptedModernInCallAPI
updateSystemStatus
updateAssertion
resolver
updateAttributionsForDescriptor:
systemStatusPublisher
statusBarStyleOverrides
attributionWithAuditToken:
setWithObject:
setRingingCallAttributions:
setActiveCallAttributions:
setRingingVideoConferenceAttributions:
setActiveVideoConferenceAttributions:
updateVolatileDataWithBlock:
inCallStatusBarAssertionWithDescriptor:
assertion
statusString
setStatusString:
setAssertion:
acquireWithHandler:invalidationHandler:
_supportslaunchingInCallApplicationForIncomingCall
faceTimeShowInCallUIURL
dictionaryWithObjects:forKeys:count:
setFrontBoardOptions:
defaultWorkspace
openApplicationWithBundleIdentifier:configuration:completionHandler:
isDeviceSupported
resolutionChangedForResolver:
deviceSupported
TB,R,N,GisDeviceSupported
setResolver:
_resolver
_assertion
_systemStatusPublisher
T@"<CSDStatusBarResolver>",&,N,V_resolver
T@"SBSStatusBarStyleOverridesAssertion",&,N,V_assertion
T@"STCallingStatusDomainPublisher",R,N,V_systemStatusPublisher
assertionWithStatusBarStyleOverrides:forPID:exclusive:showsWhenForeground:
setName:
modelIdentifier
setModelIdentifier:
uniqueIDOverride
setUniqueID:
linkedUserURIs
setLinkedUserURIs:
isDefaultPairedDevice
setDefaultPairedDevice:
supportsRestrictingSecondaryCalling
setSupportsRestrictingSecondaryCalling:
initWithIDSDevice:
initWithUUID:carrierPhoneNumbers:
uuid
carrierPhoneNumbers
_uuid
_carrierPhoneNumbers
T@"NSUUID",R,C,N,V_uuid
T@"NSArray",R,C,N,V_carrierPhoneNumbers
fetchServiceProviders
predicateWithBlock:
filteredArrayUsingPredicate:
didChangeServiceProvidersForCarrierBundlePhoneNumberProviderController:
carrierBundleController
activeSubscriptions
carrierNumbersForSubscriptionContext:
arrayOfStringsForKeyHierarchy:subscriptionContext:error:
initWithBundleType:
telephonyClient
copyCarrierBundleValue:keyHierarchy:bundleType:error:
objectForKeyHierarchy:subscriptionContext:error:
setServiceProviders:
telephonyController:didChangeActiveSubscriptions:
telephonyController:didChangeSubscriptions:
carrierBundleController:carrierBundleDidChangeForSubscriptionContext:
carrierBundleController:operatorBundleDidChangeForSubscriptionContext:
serviceProviders
serviceProvidersWithCarrierNumbers
_serviceProviders
_carrierBundleController
T@"TPSCarrierBundleController",R,N,V_carrierBundleController
T@"NSArray",C,N,V_serviceProviders
T@"<CSDCarrierBundlePhoneNumberProviderControllerDelegate>",W,N,V_delegate
T@"NSArray",R,C,N
setBundleId:
setTimestamp:
setHasTimestamp:
hasTimestamp
hasBundleId
setHasFailureReason:
hasFailureReason
setActionType:
setHasActionType:
hasActionType
setProviderWasReset:
setHasProviderWasReset:
hasProviderWasReset
timestamp
bundleId
actionType
providerWasReset
_actionType
_failureReason
_timestamp
_bundleId
_providerWasReset
TQ,N,V_timestamp
T@"NSString",&,N,V_bundleId
TQ,N,V_failureReason
TQ,N,V_actionType
TB,N,V_providerWasReset
setUpSession
session
groupID
participantDestinationIDs
account
initWithAccount:options:
setSession:
setDelegate:queue:
sessionEndedReason
sessionID
setPreferences:
joinWithOptions:
setParticipantDestinationIDs:
updateMembers:withContext:triggeredLocally:
updateParticipantData:withContext:
leaveGroupSession
sessionProviderDidTerminate:
sessionProvider:endedWithReason:error:
participantIDs
sessionProvider:didJoinGroupWithParticipantIdentifiers:localParticipantIdentifier:error:
sessionProvider:didLeaveGroupWithError:
sessionProvider:didReceiveActiveParticipants:success:
sessionProvider:didReceiveReport:
groupSessionDidTerminate:
groupSessionEnded:withReason:error:
sessionDidJoinGroup:participantsInfo:error:
sessionDidJoinGroup:participantInfo:error:
sessionDidJoinGroup:participantUpdate:error:
sessionDidLeaveGroup:error:
session:participantDidJoinGroupWithInfo:
session:participantDidLeaveGroupWithInfo:
session:didReceiveActiveParticipants:success:
session:didReceivePluginAllocationInfo:
session:receivedInvitationAcceptFromID:
session:receivedInvitationDeclineFromID:
session:receivedInvitationCancelFromID:
sessionStarted:
sessionEnded:
sessionEnded:withReason:error:
session:didReceiveData:
session:receivedInvitationAcceptFromID:withData:
session:receivedInvitationDeclineFromID:withData:
session:receivedInvitationCancelFromID:withData:
session:receivedSessionMessageFromID:withData:
session:receivedSessionEndFromID:withData:
session:invitationSentToTokens:
session:invitationSentToTokens:shouldBreakBeforeMake:
updateParticipantDestinationIDs:withContextData:triggeredLocally:
sendParticipantData:
T@"<CSDIDSGroupSessionProviderDelegate>",W,N
TI,R,N
initWithGroupID:participantDestinationIDs:callerID:account:queue:
_session
_participantDestinationIDs
_groupID
_account
T@"IDSGroupSession",&,N,V_session
T@"NSString",R,C,N,V_groupID
T@"IDSAccount",R,N,V_account
T@"NSString",R,C,N,V_callerID
T@"NSArray",C,N,V_participantDestinationIDs
T@"<CSDIDSGroupSessionProviderDelegate>",W,N,V_delegate
data
setData:
completion
setCompletion:
_data
_completion
T@"NSData",&,N,V_data
T@?,C,N,V_completion
initWithSessionProvider:isInitiator:remoteProtocolVersion:
array
sessionProvider
setStreamPreferences:
initWithSessionProvider:isInitiator:remoteDestination:remoteDevice:remoteProtocolVersion:identifiers:
numberWithInt:
runBlocksPendingTransportAvailability:
removePendingData
transport
remoteDestination
setRemoteDestination:
remoteDevice
setRemoteDevice:
identifiers
addObjectsFromArray:
allIdentifiers
blocksPendingTransportAvailability
performBlockOnTransportAvailability:
hasStarted
hasReceivedAccept
isInitiator
acceptPayloadData
runBlocksPendingTransportAvailabilityIfNecessary:
pendingData
sendData:waitUntilConnected:completion:
pendData:completion:
sendData:toDestinations:
_sendInvitationWithData:declineOnError:alwaysSendData:
_acceptInvitationWithData:alwaysSendData:
_cancelInvitationWithData:reason:alwaysSendData:
_declineInvitationWithData:alwaysSendData:
sessionProviderStarted:
sendPendingData
setHasStarted:
setHasReceivedAccept:
setAcceptPayloadData:
deviceForFromID:
session:receivedInvitationAcceptWithData:fromDestination:device:
session:receivedInvitationCancelWithData:fromDestination:device:
session:receivedInvitationDeclineWithData:fromDestination:device:
session:receivedData:fromDestination:device:
initAsInitiatorWithSessionProvider:identifiers:
initAsReceiverWithSessionProvider:remoteDestination:remoteDevice:remoteProtocolVersion:identifiers:
hasIdentifier:
addIdentifier:
addIdentifiers:
removeIdentifier:
removeIdentifiers:
mergeSession:
sendData:toDestinations:completion:
sendDataAndSendInvitationIfNecessary:declineOnError:
sendDataAndAcceptInvitationIfNecessary:
sendDataAndCancelInvitationIfNecessary:
sendDataAndDeclineInvitationIfNecessary:
prepareToEnd
sessionProvider:receivedInvitationAcceptFromID:withData:
sessionProvider:receivedInvitationCancelFromID:withData:
sessionProvider:receivedInvitationDeclineFromID:withData:
sessionProvider:receivedSessionMessageFromID:withData:
_hasStarted
_hasReceivedAccept
_remoteDestination
_remoteDevice
_pendingData
_identifiers
_blocksPendingTransportAvailability
_acceptPayloadData
T@"IDSDestination",&,N,V_remoteDestination
T@"IDSDevice",&,N,V_remoteDevice
T@"NSMutableArray",R,N,V_pendingData
T@"NSMutableSet",R,N,V_identifiers
T@"NSMutableArray",R,N,V_blocksPendingTransportAvailability
TB,N,V_hasStarted
TB,N,V_hasReceivedAccept
T@"NSData",C,N,V_acceptPayloadData
T@"<CSDRelayIDSDualSessionDelegate>",W,N,V_delegate
handleIDSDeviceListChangedNotification:
_updateDefaultPairedDeviceUniqueIDDefault
_updateThumperCallingPreferences
_checkIfDevicesShouldBeUnenrolled
initWithDomain:
domainAccessor
boolForKey:keyExistsAndHasValidFormat:
setBool:forKey:
synchronize
removeReminderNotificationOnSecondaryDevice
showEmergencyAddressDisclaimerOnSecondaryDevice
removeEmergencyAddressDisclaimerOnSecondaryDevice
areCTCapabilitiesValid
thumperCallingCapabilitiesStateByUUID
publiclyAccessibleCopy
accountID
thumperCapabilitiesStatesForPreferenceKey:
isAssociated
isSupported
supportsDefaultPairedDevice
enrollDefaultPairedDeviceForAccountID:
unenrollDefaultPairedDeviceForAccountID:
showReminderNotificationOnSecondaryDevice
saveThumperCapabilitiesStates:forPreferenceKey:
defaultPairedDevice
removeThumperRegisteredDeviceID:forThumperAccountID:
enrollDefaultPairedDevice
devices
valueForKey:
localThumperAccounts
allowedSecondaryDeviceIDs
secondaryThumperAccounts
csd_unknownContextInfoForAccountID:
supportsThumperCallingOverCellularData
countForIdentifier:
response
requestPinFromPrimaryDevice
removeNotificationsForServiceIdentifier:
preferencesURL
archivedDataWithError:
unarchivedObjectFromData:error:
thumperCallingCapabilitiesStateForAccountID:
shouldEnrollDefaultPairedDeviceForAccountID:
addThumperRegisteredDeviceID:forThumperAccountID:
shouldUnenrollDefaultPairedDeviceForAccountID:
isThumperRegisteredDeviceID:forThumperAccountID:
thumperCallingAllowedOnDefaultPairedDeviceDefault
didChangeTelephonyCallingSupport
didChangeFaceTimeAudioCallingSupport
didChangeFaceTimeVideoCallingSupport
didChangeFaceTimeCallingAvailability
didChangeRelayCallingCapabilities
didChangeRelayCallingAvailability
didChangeOutgoingRelayCallerID
didChangeCloudCallingDevices
didAddCapabilitiesForSenderIdentityWithUUID:
didRemoveCapabilitiesForSenderIdentityWithUUID:
didChangeVoLTECallingCapabilitiesForSenderIdentityWithUUID:
didChangeWiFiCallingCapabilitiesForSenderIdentityWithUUID:
didChangeThumperCallingCapabilitiesForSenderIdentityWithUUID:
didChangeWiFiCallingProvisionalURLForSenderIdentityWithUUID:
didChangeThumperCallingProvisionalURLForSenderIdentityWithUUID:
didChangeEmergencyCallbackMode
didChangeEmergencyCallbackPossible
didChangeRelayCallingFeatures
updateState
setThumperCallingAllowedOnDefaultPairedDeviceDefault:
_thumperIsNoLongerSupportedForAccountID:
_thumperIsNowEnabledForAccountID:
_thumperIsNoLongerEnabledForAccountID:
setDomainAccessor:
_dataSource
_domainAccessor
T@"NPSDomainAccessor",&,N,V_domainAccessor
T@"<CSDThumperCapabilitiesMonitorDataSource>",W,N,V_dataSource
isInvitation
upgradeSessionUUID
setInvitation:
setUpgradeSessionUUID:
_invitation
_shouldSuppressInCallUI
_videoEnabled
_shouldShowDebugOverlay
_upgrade
_momentsAvailable
_upgradeSessionUUID
invitation
TB,N,GisInvitation,V_invitation
TB,N,V_shouldSuppressInCallUI
TB,N,GisVideoEnabled,V_videoEnabled
TB,N,V_shouldShowDebugOverlay
upgrade
TB,N,GisUpgrade,V_upgrade
TB,N,GisInitiator,V_initiator
TB,N,GisMomentsAvailable,V_momentsAvailable
T@"NSUUID",C,N,V_messagesGroupUUID
T@"NSUUID",C,N,V_upgradeSessionUUID
addServiceDelegate:queue:
devicesChanged:
callerIDChanged:
addListenerID:forService:
serviceAvailabilityChanged:
_faceTimeAudioAvailability
_faceTimeVideoAvailability
_updateOutgoingCallerID
removeListenerID:forService:
faceTimeIDMatchesAppleID
outgoingCallerID
accountsChanged
updateOutgoingCallerIDAndSendDelegateCallbacksIfNecessary
faceTimeAvailabilityChanged
iCloudAccount
isActive
profileID
isEqualToIgnoringCase:
availabilityForListenerID:forService:
outgoingCallerIDChanged
isValidOutgoingCallerID:
availableOutgoingRelayCallerIDs
objectsPassingTest:
anyObject
vettedAliases
indexesOfObjectsPassingTest:
firstIndex
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:account:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:
service:account:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:messageContext:
service:account:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:
service:account:incomingTopLevelMessage:fromID:messageContext:
service:token:time:error:
service:didFlushCacheForRemoteURI:fromURI:guid:
service:didHintCheckingTransportLogWithReason:
isFaceTimeAudioAvailable
isFaceTimeVideoAvailable
setOutgoingCallerID:
_outgoingCallerID
T@"NSString",C,N,V_outgoingCallerID
T@"<CSDAccountsControllerDelegate>",W,N,V_delegate
faceTimeAudioAvailable
TB,R,N,GisFaceTimeAudioAvailable
faceTimeVideoAvailable
TB,R,N,GisFaceTimeVideoAvailable
shouldUseSocketForTransport
setIsAudioEnabled:
invitationTimeOut
setInvitationTimeOut:
sendSessionMessage:
sendSessionMessage:toDestinations:
sendInvitationWithData:declineOnError:
acceptInvitationWithData:
cancelInvitationWithData:
cancelInvitationWithRemoteEndedReasonOverride:
declineInvitationWithData:
reconnectSession
endSession
reportsReceived:forSessionWithUUID:
sessionProvider:invitationSentToPushTokens:shouldBreakBeforeMake:
invitationTimeout
setInvitationTimeout:
T@"<CSDIDSDualSessionProviderDelegate>",W,N
initWithSession:queue:
T@"IDSSession",R,N,V_session
T@"<CSDIDSDualSessionProviderDelegate>",W,N,V_delegate
initWithDigits:isHardPause:
setDigits:
setHardPause:
_hardPause
_digits
T@"NSString",C,N,V_digits
hardPause
TB,N,GisHardPause,V_hardPause
accountType
aliasStrings
regionBasePhoneNumber
csd_ISOCountryCode
label
setLabel:
initWithHandle:label:isSuggested:
tuLabeledHandle
handleWithTULabeledHandle:
T@"TULabeledHandle",R,N
initWithSerialQueue:
callProviderManagerClientXPCInterface
clientManager
setRemoteObjectInterface:
callProviderManagerServerXPCInterface
setExportedInterface:
setExportedObject:
setRequiredConnectionCapability:
setInterruptionHandler:
setInvalidationHandler:
asynchronousExportedObjectProxy
setAsynchronousServer:
synchronousExportedObjectProxy
setSynchronousServer:
startListeningOnMachServiceWithName:
isRemote
providersByIdentifierForRemoteClients:
localProvidersByIdentifierForRemoteClients:
pairedHostDeviceProvidersByIdentifierForRemoteClients:
currentClient
providersByIdentifierForClient:
localProvidersByIdentifierForClient:
pairedHostDeviceProvidersByIdentifierForClient:
donateUserIntentForProviderWithIdentifier:
launchAppForDialRequest:completion:
addLocalClientObject:
removeLocalClientObject:
updateProvidersByIdentifier:localProvidersByIdentifier:pairedHostDeviceProvidersByIdentifier:
performBlockOnClients:coalescedByIdentifier:
providersByIdentifier:
launchAppForDialRequest:reply:
registerClient:
unregisterClient:
initWithProviderManager:
_clientManager
_providerManager
T@"CSDClientManager",R,N,V_clientManager
T@"CSDCallProviderManager",R,N,V_providerManager
tuConversationMember
memberWithTUConversationMember:
T@"TUConversationMember",R,N
csd_applicationRecordForBundleIdentifier:
machOUUIDs
initWithSession:remoteHandle:wantsVideo:
createOneToOneFTReportingSessionForCallWithUUID:withReportingHierarchyToken:withVideo:
conference
dateReceivedFirstRemoteFrame
hasSentInvitation
invitedPushTokens
underlyingErrorCode
remoteFromID
chatEnded:
localPortraitAspectRatioForChat:
setIsKeyExchangeEnabled:
setIsVideoEnabled:
setIsDuplexAudioOnly:
setIsRelayForced:
setIsRelayEnabled:
shouldStartAudioPaused
setIsAudioPausedToStart:
shouldStartVideoPaused
_setLocalAspectRatiosForVideoAspectRatioDescriptor:
setInviteCompletion:
prepareConference
cancelInvitationWithReason:
declineInvitation
cancelOrDeclineInvitation
_handlePushTokensInvited:didSendInvitation:didCancelInvitation:
setShouldStartAudioPaused:
setShouldStartVideoPaused:
chatStartedConnecting:
conferenceCreationBlock
setConference:
faceTimeAppUUID
inviteCompletion
setInvitedPushTokens:
setHasSentInvitation:
chatSentInvitation:
_setDateEndedIfNecessary
initWithData:
_stripPotentialTokenURIWithToken:
faceTimeInviteDictionary
hasProtoUpgradeSessionUUID
protoUpgradeSessionUUID
hasProtoWantsVideo
isWiFiAllowedForChat:
setWiFiAllowed:
isCellularDataAllowedForChat:
setCellularDataAllowed:
isCellularDataPreferredForChat:
setCellularDataPreferred:
initWithFaceTimeInviteDictionary:
setInviteData:
setProtoUpgradeSessionUUID:
isMomentsAvailableForChat:
sendInvitationWithData:
chatConnected:
setDateReceivedFirstRemoteFrame:
chat:inputFrequencyLevelChangedTo:
chat:outputFrequencyLevelChangedTo:
chat:inputLevelChangedTo:
chat:outputLevelChangedTo:
chat:changedBytesOfDataUsed:
chat:receivedData:
session:endedWithReason:
session:invitationSentToPushTokens:shouldBreakBeforeMake:
session:receivedInvitationAcceptWithData:
session:receivedInvitationDeclineWithData:
session:receivedInvitationCancelWithData:
session:receivedData:
startWithVideoAspectRatioDescriptor:inviteCompletion:
answerWithVideoAspectRatioDescriptor:
cancelInvitationWithAnsweredElsewhere
cancelInvitationWithDeclinedElsewhere
sendDataUnreliably:
sessionUUID
T@"<CSDIDSChatDelegate>",W,N
T@"NSString",R,N
T@"TUHandle",R,N
outgoing
TB,R,N,GisOutgoing
T@"CXCallFailureContext",R,N
connected
TB,R,N,GisConnected
T@"NSUUID",C,N
TB,N,GisRelaying
TB,N,GisRemoteMomentsAvailable
initIncomingWithSession:remoteHandle:wantsVideo:remoteInviteDictionary:
initOutgoingWithSession:UUID:remoteHandle:wantsVideo:isRelaying:
setConferenceCreationBlock:
_remoteUplinkMuted
_remoteMomentsAvailable
_muted
_shouldStartAudioPaused
_shouldStartVideoPaused
_mayRequireBreakBeforeMake
_hasSentInvitation
_localSenderIdentityUUID
_conference
_dateReceivedFirstRemoteFrame
_invitedPushTokens
_inviteCompletion
_conferenceCreationBlock
T@"<CSDAVConference>",&,N,V_conference
T@"CSDExternalIDSDualSession",R,N,V_session
TB,N,V_shouldStartAudioPaused
TB,N,V_shouldStartVideoPaused
TB,N,V_mayRequireBreakBeforeMake
TB,N,V_hasSentInvitation
T@"NSDate",&,N,V_dateReceivedFirstRemoteFrame
T@"NSDictionary",R,C,N,V_remoteInviteDictionary
T@"NSArray",C,N,V_invitedPushTokens
T@?,C,N,V_inviteCompletion
T@?,C,N,V_conferenceCreationBlock
T@"<CSDIDSChatDelegate>",W,N,V_delegate
T@"TUHandle",R,N,V_handle
TB,R,N,GisOutgoing,V_outgoing
TB,N,GisMuted,V_muted
TB,N,GisRemoteUplinkMuted,V_remoteUplinkMuted
TB,N,GisRemoteMomentsAvailable,V_remoteMomentsAvailable
T@"NSUUID",C,N,V_localSenderIdentityUUID
setMutuallyExclusiveCall:
initWithTinCanIDSChat:
isCSCallingAvailable
setCsCallingAvailable:
isVoLTECallingAvailable
setVoLTECallingAvailable:
isWifiCallingAvailable
setWiFiCallingAvailable:
isEmergencyCallingOnWifiAllowed
setWiFiEmergencyCallingAllowed:
isEmergencyCallingOnWifiAvailable
setWiFiEmergencyCallingAvailable:
isWiFiCallingAvailable
isWiFiEmergencyCallingAllowed
isWiFiEmergencyCallingAvailable
callCapabilitiesForCTCallCapabilities:
callCapabilitiesForCallManagementStateInfo:
_csCallingAvailable
_voLTECallingAvailable
_wiFiCallingAvailable
_wiFiEmergencyCallingAllowed
_wiFiEmergencyCallingAvailable
csCallingAvailable
TB,N,GisCSCallingAvailable,V_csCallingAvailable
voLTECallingAvailable
TB,N,GisVoLTECallingAvailable,V_voLTECallingAvailable
wiFiCallingAvailable
TB,N,GisWiFiCallingAvailable,V_wiFiCallingAvailable
wiFiEmergencyCallingAllowed
TB,N,GisWiFiEmergencyCallingAllowed,V_wiFiEmergencyCallingAllowed
wiFiEmergencyCallingAvailable
TB,N,GisWiFiEmergencyCallingAvailable,V_wiFiEmergencyCallingAvailable
numberWithDouble:
numberWithFloat:
addOtherUniqueProxyIdentifiers:
addProviders:
addRoutes:
addEndpointIDSDestinationURIs:
setOBSOLETEConferenceIdentifier:
setCallerNameFromNetwork:
protoCallsCount
clearProtoCalls
protoCallAtIndex:
setDummyPayload:
otherUniqueProxyIdentifiersCount
clearOtherUniqueProxyIdentifiers
otherUniqueProxyIdentifiersAtIndex:
providersCount
clearProviders
providersAtIndex:
remoteParticipantHandlesCount
clearRemoteParticipantHandles
remoteParticipantHandlesAtIndex:
routesCount
clearRoutes
routesAtIndex:
setRoute:
endpointIDSDestinationURIsCount
clearEndpointIDSDestinationURIs
endpointIDSDestinationURIsAtIndex:
protoCallType
otherUniqueProxyIdentifiersType
providersType
remoteParticipantHandlesType
routesType
endpointIDSDestinationURIsType
hasUniqueProxyIdentifier
hasDestinationID
hasSourceIdentifier
hasProtoCallModelState
setHasProtoService:
hasProtoService
setHasProtoWantsHoldMusic:
hasProtoWantsHoldMusic
setHasProtoCannotBeAnswered:
hasProtoCannotBeAnswered
hasProtoDTMFKey
setHasProtoDisconnectedReason:
hasProtoDisconnectedReason
hasOBSOLETEConferenceIdentifier
setHasProtoVoicemail:
hasProtoVoicemail
hasCallerNameFromNetwork
hasHardPauseDigits
setHasHardPauseState:
hasHardPauseState
setReceivedMessageType:
setHasReceivedMessageType:
hasReceivedMessageType
receivedMessageTypeAsString:
StringAsReceivedMessageType:
setHasProtoProtocolVersion:
hasProtoProtocolVersion
setHasProtoShouldSuppressRingtone:
hasProtoShouldSuppressRingtone
hasDummyPayload
setHostCallCreationTime:
setHasHostCallCreationTime:
hasHostCallCreationTime
setHasMessageSendTime:
hasMessageSendTime
setHasProtoNeedsManualInCallSounds:
hasProtoNeedsManualInCallSounds
setHasProtoCannotRelayAudioOrVideoOnPairedDevice:
hasProtoCannotRelayAudioOrVideoOnPairedDevice
setHasProtoExpectedEndpointOnMessagingDevice:
hasProtoExpectedEndpointOnMessagingDevice
hasContactIdentifier
hasProtoCallCapabilitiesState
setProtoSoundRegion:
setHasProtoSoundRegion:
hasProtoSoundRegion
setHasProtoEmergency:
hasProtoEmergency
hasProtoCallModel
setHasProtoSOS:
hasProtoSOS
hasProtoDisplayContext
hasInviteData
hasProtoProvider
setHasProtoVideo:
setHasProtoUplinkMuted:
hasProtoUplinkMuted
setHasProtoRemoteUplinkMuted:
hasProtoRemoteUplinkMuted
setSystemVolume:
setHasSystemVolume:
hasSystemVolume
hasLocalSenderIdentityUUIDString
hasLocalSenderIdentityAccountUUIDString
setHasProtoTTYType:
hasProtoTTYType
setHasProtoSupportsTTYWithVoice:
hasProtoSupportsTTYWithVoice
requestActionType
setRequestActionType:
setHasRequestActionType:
hasRequestActionType
requestActionTypeAsString:
StringAsRequestActionType:
hasRoute
setHasProtoPriority:
hasProtoPriority
setHasProtoOriginatingUIType:
hasProtoOriginatingUIType
oBSOLETEConferenceIdentifier
setProtoCalls:
dummyPayload
protoSoundRegion
otherUniqueProxyIdentifiers
setOtherUniqueProxyIdentifiers:
systemVolume
setRemoteParticipantHandles:
setRoutes:
route
protoPriority
_hostCallCreationTime
_messageSendTime
_callerNameFromNetwork
_contactIdentifier
_destinationID
_dummyPayload
_endpointIDSDestinationURIs
_hardPauseDigits
_hardPauseState
_inviteData
_localSenderIdentityAccountUUIDString
_localSenderIdentityUUIDString
_oBSOLETEConferenceIdentifier
_otherUniqueProxyIdentifiers
_protoCallCapabilitiesState
_protoCallModel
_protoCallModelState
_protoCalls
_protoDTMFKey
_protoDisconnectedReason
_protoDisplayContext
_protoOriginatingUIType
_protoPriority
_protoProtocolVersion
_protoProvider
_protoService
_protoSoundRegion
_protoTTYType
_providers
_receivedMessageType
_remoteParticipantHandles
_requestActionType
_route
_routes
_sourceIdentifier
_systemVolume
_uniqueProxyIdentifier
_protoCannotBeAnswered
_protoCannotRelayAudioOrVideoOnPairedDevice
_protoEmergency
_protoExpectedEndpointOnMessagingDevice
_protoNeedsManualInCallSounds
_protoRemoteUplinkMuted
_protoSOS
_protoShouldSuppressRingtone
_protoSupportsTTYWithVoice
_protoUplinkMuted
_protoVideo
_protoVoicemail
_protoWantsHoldMusic
T@"NSString",&,N,V_uniqueProxyIdentifier
T@"NSString",&,N,V_destinationID
T@"NSString",&,N,V_sourceIdentifier
T@"CSDMessagingCallModelState",&,N,V_protoCallModelState
TI,N,V_protoService
TB,N,V_protoWantsHoldMusic
TB,N,V_protoCannotBeAnswered
T@"NSData",&,N,V_protoDTMFKey
TI,N,V_protoDisconnectedReason
T@"NSString",&,N,V_oBSOLETEConferenceIdentifier
TB,N,V_protoVoicemail
T@"NSString",&,N,V_callerNameFromNetwork
T@"NSMutableArray",&,N,V_protoCalls
T@"NSString",&,N,V_hardPauseDigits
TI,N,V_hardPauseState
Ti,N,V_receivedMessageType
TI,N,V_protoProtocolVersion
TB,N,V_protoShouldSuppressRingtone
T@"NSData",&,N,V_dummyPayload
Td,N,V_hostCallCreationTime
Td,N,V_messageSendTime
TB,N,V_protoNeedsManualInCallSounds
TB,N,V_protoCannotRelayAudioOrVideoOnPairedDevice
TB,N,V_protoExpectedEndpointOnMessagingDevice
T@"NSString",&,N,V_contactIdentifier
T@"CSDMessagingCallCapabilitiesState",&,N,V_protoCallCapabilitiesState
TI,N,V_protoSoundRegion
TB,N,V_protoEmergency
T@"NSMutableArray",&,N,V_otherUniqueProxyIdentifiers
T@"CSDMessagingCallModel",&,N,V_protoCallModel
TB,N,V_protoSOS
T@"NSMutableArray",&,N,V_providers
T@"CSDMessagingCallDisplayContext",&,N,V_protoDisplayContext
T@"CSDMessagingAVConferenceInviteData",&,N,V_inviteData
T@"CSDMessagingCallProvider",&,N,V_protoProvider
TB,N,V_protoVideo
TB,N,V_protoUplinkMuted
TB,N,V_protoRemoteUplinkMuted
Tf,N,V_systemVolume
T@"NSString",&,N,V_localSenderIdentityUUIDString
T@"NSMutableArray",&,N,V_remoteParticipantHandles
T@"NSString",&,N,V_localSenderIdentityAccountUUIDString
TI,N,V_protoTTYType
TB,N,V_protoSupportsTTYWithVoice
Ti,N,V_requestActionType
T@"NSMutableArray",&,N,V_routes
T@"CSDMessagingRoute",&,N,V_route
T@"NSMutableArray",&,N,V_endpointIDSDestinationURIs
TI,N,V_protoPriority
TI,N,V_protoOriginatingUIType
serviceForClientIdentifier:
_callFilterIdentifier
sourceWithDestinationIdentifier:
setSource:
behaviorResolutionService
resolveBehaviorForEventDetails:error:
interruptionSuppression
setFilterBlock:
isDestinationIDAllowedThroughDoNotDisturb:
networkCountryCode
_behaviorResolutionService
T@"DNDEventBehaviorResolutionService",R,N,V_behaviorResolutionService
addHandoffIdentifier:
addEmergencyLabeledHandles:
addPrioritizedSenderIdentities:
addEmergencyHandles:
setLocalizedName:
setBundleURLString:
setRingtoneSoundURLString:
setOriginalRingtoneSoundURLString:
handoffIdentifiersCount
clearHandoffIdentifiers
handoffIdentifierAtIndex:
protoSupportedHandleTypesCount
clearProtoSupportedHandleTypes
protoSupportedHandleTypeAtIndex:
addProtoSupportedHandleType:
emergencyLabeledHandlesCount
clearEmergencyLabeledHandles
emergencyLabeledHandlesAtIndex:
prioritizedSenderIdentitiesCount
clearPrioritizedSenderIdentities
prioritizedSenderIdentitiesAtIndex:
emergencyHandlesCount
clearEmergencyHandles
emergencyHandlesAtIndex:
handoffIdentifierType
emergencyLabeledHandlesType
prioritizedSenderIdentitiesType
emergencyHandlesType
hasLocalizedName
hasBundleURLString
setMaximumCallGroups:
setHasMaximumCallGroups:
hasMaximumCallGroups
setMaximumCallsPerCallGroup:
setHasMaximumCallsPerCallGroup:
hasMaximumCallsPerCallGroup
setSupportsAudioOnly:
setHasSupportsAudioOnly:
hasSupportsAudioOnly
setSupportsAudioAndVideo:
setHasSupportsAudioAndVideo:
hasSupportsAudioAndVideo
setSupportsEmergency:
setHasSupportsEmergency:
hasSupportsEmergency
setSupportsVoicemail:
setHasSupportsVoicemail:
hasSupportsVoicemail
hasRingtoneSoundURLString
hasOriginalRingtoneSoundURLString
protoSupportedHandleTypes
setProtoSupportedHandleTypes:count:
setSupportsRecents:
setHasSupportsRecents:
hasSupportsRecents
localizedName
bundleURLString
maximumCallGroups
maximumCallsPerCallGroup
supportsAudioOnly
supportsAudioAndVideo
supportsEmergency
supportsVoicemail
ringtoneSoundURLString
originalRingtoneSoundURLString
setHandoffIdentifiers:
emergencyLabeledHandles
setEmergencyLabeledHandles:
supportsRecents
prioritizedSenderIdentities
setPrioritizedSenderIdentities:
emergencyHandles
setEmergencyHandles:
_protoSupportedHandleTypes
_bundleURLString
_emergencyHandles
_emergencyLabeledHandles
_handoffIdentifiers
_localizedName
_maximumCallGroups
_maximumCallsPerCallGroup
_originalRingtoneSoundURLString
_prioritizedSenderIdentities
_ringtoneSoundURLString
_supportsAudioAndVideo
_supportsAudioOnly
_supportsEmergency
_supportsRecents
_supportsVoicemail
T@"NSString",&,N,V_identifier
T@"NSString",&,N,V_localizedName
T@"NSString",&,N,V_bundleURLString
TI,N,V_maximumCallGroups
TI,N,V_maximumCallsPerCallGroup
TB,N,V_supportsAudioOnly
TB,N,V_supportsAudioAndVideo
TB,N,V_supportsEmergency
TB,N,V_supportsVoicemail
T@"NSString",&,N,V_ringtoneSoundURLString
T@"NSString",&,N,V_originalRingtoneSoundURLString
T@"NSMutableArray",&,N,V_handoffIdentifiers
T@"NSMutableArray",&,N,V_emergencyLabeledHandles
TB,N,V_supportsRecents
T@"NSMutableArray",&,N,V_prioritizedSenderIdentities
T@"NSMutableArray",&,N,V_emergencyHandles
initWithQueue:callContainer:sessionMessenger:
_handleConferenceConnectionWillClose:
_handleConferenceConnectionDidClose:
_handleConferenceConnectionDidReceiveData:
dialingIDSDevice
sessionMessenger
prepareConnectedSessionsToEnd
endEndingSessions
clientMessagingDelegate
commonMessagingDelegate
handleSetUplinkMutedMessage:
setDialingIDSDevice:
isPairedDevice
outgoingRelayCallerID
_stripFZIDPrefix
deviceWithActiveSession
pairedDevice
identifiersForSessionInvitationWithMessage:
initWithRelayInviteDictionary:
sendMessage:andAcceptInvitationIfNecessaryForIdentifier:
cancelOrDeclineInvitationForIdentifier:
dateCreated
pairedDeviceMessenger
sendMessage:completionHandler:
sendMessage:andStartSessionIfNecessaryForIdentifier:toDevicesSupportingProvider:withTimeout:
prepareConferenceForCall:remoteInviteDictionary:completion:
sendMessage:forIdentifier:customizedForRemoteProtocolVersion:completionHandler:
_shouldSendToPairedIDSDevice
sendMessage:andCancelOrDeclineInvitationIfNecessaryForIdentifier:
sendMessage:wantsAcknowledgement:completionHandler:
sendMessage:forIdentifier:
sendData:throughConferenceForIdentifier:
sendMessage:forIdentifier:customizedForRemoteProtocolVersion:waitUntilConnected:completionHandler:
sendDialCallFailedForUniqueProxyIdentifier:withDisconnectedReason:
deviceForService:
isGuest
canReceiveMessagesForCallProvider:
sendCallAnsweredElsewhereMessageToClientForCall:
hostMessagingDelegate
sendMessage:andStartSessionIfNecessaryForIdentifiers:toDestination:timeout:completionHandler:
pushHostedCallsForRemoteInviteDictionary:destination:completion:
initWithTURoute:
_updateDialingIDSDevice
sendMessage:andStartSessionIfNecessaryForIdentifier:toDestination:timeout:completionHandler:
disconnectCall:withReason:
cannotRelayAudioOrVideo
sessionProtocolVersionForIdentifier:
callWithStatus:
isFaceTimeProvider
sendHoldCallMessageToHostForCall:
sendAnswerCallMessageToHostForCall:
sendMessage:timeout:wantsAcknowledgement:maximumRetryAttempts:completionHandler:
sendMessage:forIdentifier:toDestinations:
canReceiveRelayedCalls
shouldProcessRelayMessageOfType:
reportRelayMessageReceived:fromPairedDevice:
shouldScreenTimeRestrictMessage:
sendDialCallFailedForScreenTimeForUniqueProxyIdentifier:
_handleRetrievedLocalInviteDictionary:forMessage:
handleDialCallMessageFromClient:destination:completion:
handleAnswerCallMessageFromClient:destination:
handlePlayDTMFToneForKeyMessage:
handleHoldCallMessageFromClient:
handleUnholdCallMessageFromClient:
handleGroupCallMessageFromClient:
handleUngroupCallMessageFromClient:
handleDisconnectCallMessageFromClient:
handleSwapCallsMessageFromClient:
handleEndActiveAndAnswerMessageFromClient:
handleEndHeldAndAnswerMessageFromClient:
handleDisconnectCurrentCallAndActivateHeldMessageFromClient:
handleDisconnectAllCallsMessageFromClient:
handleSendHardPauseDigitsMessageFromClient:
handleSuppressRingtoneMessage:
handleRequestCallContextMessageFromClient:
handlePullHostedCallsMessageFromClient:destination:completion:
handlePushRelayingCallsMessageFromClient:
handleHoldActiveAndAnswerMessageFromClient:
handleUpdateSystemVolumeMessageFromHost:
handleSetTTYTypeMessage:
handleRequestActionMessage:
handlePickRouteMessageFromClient:
shouldDeclineSessionInviteWithMessageWhenRelayIsDisabled:
_callsWithUniqueProxyIdentifiers:
messagingConnectionEndedForCalls:didStartConnecting:
messagingConnectionFailedForCalls:didStartConnecting:
messagingConnectionCouldNotEstablishLinkForCalls:didStartConnecting:
_shouldDeclineSessionInviteWithMessage:
allowCallForDestinationID:providerIdentifier:
allowCallForDestinationID
shouldPreferRelayOverDirectSecondaryCallingForProvider:isVideo:
isDirectTelephonyCallingCurrentlyAvailable
isDirectFaceTimeAudioCallingCurrentlyAvailable
isDirectFaceTimeVideoCallingCurrentlyAvailable
callFilterController
shouldRestrictAddresses:forBundleIdentifier:performSynchronously:
bundleIdentifierForProvider:
performBlockOnTransportAvailability:forIdentifier:
prepareSessionToEndForIdentifier:
messenger:handledMessage:fromDestination:device:
messengerConnectionEnded:forIdentifiers:didStartConnecting:
messengerConnectionFailed:forIdentifiers:didStartConnecting:
messengerConnectionCouldNotEstablishLink:forIdentifiers:didStartConnecting:
shouldDeclineSecondSessionInviteWithMessage:
shouldIgnoreSessionInviteWithMessage:fromDestination:
timeoutForInvitationWithMessage:
_relayInvitationTimeoutForTimeout:
sendIncomingCallMessageToClientForCall:cannotBeAnswered:cannotRelayAudioOrVideoOnPairedDevice:
sendCallDialedMessageToClientForCall:
sendCallDisconnectedMessageToClientForCall:
sendCallConnectedMessageToClientForCall:
sendResetWantsHoldMusicMessageToClientForCall:
sendUpdateCallDisplayContextMessageToClientForCall:
sendUpdateRemoteUplinkMutedCallMessageToClientForCall:
sendUpdateSupportsTTYWithVoiceCallMessageToClientForCall:
sendUpdateCallModelMessageToClientForCall:
sendDeviceUnavailableMessageToClientForUniqueProxyIdentifier:
sendPullRelayingCallsMessageToClient
sendResetStateMessageToClient
sendHardPauseAvailabilityMessageToClientForState:digits:
sendUpdateRemoteCallStateMessageToClient
sendCallStartedConnectingMessageToClientForCall:
sendDialCallFailedForUniqueProxyIdentifier:
sendPushCallsMessageToClientDestination:
sendUpdateCallContextMessageToClientForCallProviderManager:
sendNeedsManualInCallSoundsChangeMessageToClientForCall:
sendInvitationSentMessageToClientForCall:
sendUpdateRoutesMessageToClientForRoutes:
sendDialCallMessageToHostForCall:completionHandler:
sendDisconnectCallMessageToHostForCall:
sendUnholdCallMessageToHostForCall:
sendGroupCallMessageToHostForCall:otherCall:
sendUngroupCallMessageToHostForCall:
sendSwapCallsMessageToHost
sendEndActiveAndAnswerCallMessageToHostForCall:
sendEndHeldAndAnswerCallMessageToHostForCall:
sendHoldActiveAndAnswerCallMessageToHostForCall:
sendDisconnectCurrentCallAndActivateHeldMessageToHostForDisconnectedCall:
sendDisconnectAllCallsMessageToHostForDisconnectedCall:
sendSendHardPauseDigitsMessageToHostForCall:
sendRequestCallStateMessageToHost
sendPullCallsMessageToHost
sendPushRelayingCallsMessageToHostForSourceIdentifier:
sendUpdateRemoteUplinkMutedCallMessageToHostForCall:
sendPickRouteMessageToHostForRoute:
sendPlayDTMFToneForKeyMessageForCall:DTMFKey:
sendSetTTYTypeCallMessageForCall:ttyType:
sendSetUplinkMutedCallMessageForCall:uplinkMuted:
sendSuppressRingtoneMessageForCall:
sendUpdateSystemVolumeForCall:volume:
requestAnswerForRequest:forCall:
prepareToDisconnectMessagingConnectionForCall:
disconnectMessagingConnectionForCall:
setClientMessagingDelegate:
setHostMessagingDelegate:
setCommonMessagingDelegate:
_clientMessagingDelegate
_hostMessagingDelegate
_commonMessagingDelegate
_sessionMessenger
_pairedDeviceMessenger
_dialingIDSDevice
_callCenter
T@"CSDRelayIDSSessionMessenger",R,N,V_sessionMessenger
T@"CSDRelayPairedDeviceMessenger",R,N,V_pairedDeviceMessenger
T@"IDSDevice",&,N,V_dialingIDSDevice
T@"<TUCallContainerPrivate>",R,N,V_callCenter
T@"<CSDRelayMessagingControllerDelegate>",W,N,V_delegate
T@"<CSDRelayMessagingControllerClientMessagingDelegate>",W,N,V_clientMessagingDelegate
T@"<CSDRelayMessagingControllerHostMessagingDelegate>",W,N,V_hostMessagingDelegate
T@"<CSDRelayMessagingControllerCommonMessagingDelegate>",W,N,V_commonMessagingDelegate
setMediaBlob:
setCallInfoBlob:
setSKEBlob:
mediaBlob
callInfoBlob
sKEBlob
_setUpSandbox
recentsController
clearNotificationsIfNecessary
voipApplicationController
handleApplicationUninstalledNotification:
setSignalHandlerDispatchSources:
_observeSignal:usingHandler:
setUserConfiguration:
updateConversationDebugLinksWithContext
initWithQueue:updateBlock:
setMobileAssetManager:
setDeviceLockStateObserver:
deviceLockStateObserver
perform
mobileAssetManager
getDebugContextInformation
performBlockAfterFirstUnlock:
setVoiceOverObserver:
setCallStateMonitor:
setRelayMessagingController:
addReporter:
isFaceTimePhotosXPCServiceEnabled
setMomentsController:
momentsController
setStatusBarManager:
setCallDirectoryManager:
setVoipApplicationController:
setRelayClientController:
relayClientController
setRelayHostController:
relayHostController
setRelayCommonController:
relayCommonController
setProximityController:
setRaiseToAnswerController:
initWithVoiceOverObserver:
setAudioController:
audioController
_setUpLanguageChangeListener
callFilterManager
initWithCallFilterManager:
signalHandlerDispatchSources
string
stringWithUTF8String:
_setUpTemporaryDirectory
userConfiguration
propertiesDidChangeForConfiguration:
callStateMonitor
callDirectoryManager
userNotificationController
setUserNotificationController:
orientationMonitor
setOrientationMonitor:
proximityController
raiseToAnswerController
powerAssertionManager
setPowerAssertionManager:
statusBarManager
_callStateMonitor
_relayMessagingController
_relayClientController
_relayHostController
_relayCommonController
_callDirectoryManager
_voipApplicationController
_momentsController
_userConfiguration
_userNotificationController
_signalHandlerDispatchSources
_deviceLockStateObserver
_orientationMonitor
_proximityController
_raiseToAnswerController
_powerAssertionManager
_audioController
_statusBarManager
_mobileAssetManager
T@"CSDCallStateMonitor",&,N,V_callStateMonitor
T@"CSDRelayMessagingController",&,N,V_relayMessagingController
T@"CSDRelayClientController",&,N,V_relayClientController
T@"CSDRelayHostController",&,N,V_relayHostController
T@"CSDRelayCommonController",&,N,V_relayCommonController
T@"CSDCallDirectoryManager",&,N,V_callDirectoryManager
T@"CSDVoIPApplicationController",&,N,V_voipApplicationController
T@"CSDMomentsController",&,N,V_momentsController
T@"TUUserConfiguration",&,N,V_userConfiguration
T@"CSDUserNotificationController",&,N,V_userNotificationController
T@"CSDVoiceOverObserver",&,N,V_voiceOverObserver
T@"NSMutableArray",&,N,V_signalHandlerDispatchSources
T@"CSDDeviceLockStateObserver",&,N,V_deviceLockStateObserver
T@"CSDOrientationMonitor",&,N,V_orientationMonitor
T@"CSDProximityController",&,N,V_proximityController
T@"CSDRaiseToAnswerController",&,N,V_raiseToAnswerController
T@"CSDPowerAssertionManager",&,N,V_powerAssertionManager
T@"CSDAudioController",&,N,V_audioController
T@"CSDStatusBarManager",&,N,V_statusBarManager
T@"MobileAssetManager",&,N,V_mobileAssetManager
availability
setAvailability:
setHasAvailability:
hasAvailability
availabilityAsString:
StringAsAvailability:
setPhotoRequestSuccessCount:
setHasPhotoRequestSuccessCount:
hasPhotoRequestSuccessCount
setPhotoRequestFailureCount:
setHasPhotoRequestFailureCount:
hasPhotoRequestFailureCount
setMedianRequestDuration:
setHasMedianRequestDuration:
hasMedianRequestDuration
setMeanRequestDuration:
setHasMeanRequestDuration:
hasMeanRequestDuration
photoRequestSuccessCount
photoRequestFailureCount
medianRequestDuration
meanRequestDuration
_meanRequestDuration
_medianRequestDuration
_availability
_photoRequestFailureCount
_photoRequestSuccessCount
Ti,N,V_availability
TI,N,V_photoRequestSuccessCount
TI,N,V_photoRequestFailureCount
Td,N,V_medianRequestDuration
Td,N,V_meanRequestDuration
initWithCapabilities:queue:
tu_defaults
boolForKey:
mutableChats
phoneNumberWithDigits:countryCode:
unformattedInternationalRepresentation
isWiFiAvailable
isWiFiAllowed
isCellularDataAvailable
isCellularDataAllowed
shouldOverrideNetworkAsAvailable
handleWithDestinationID:
serviceIdentifier
containsString:
initWithUUID:isVideo:handle:
shouldAcceptIncomingInvite
callUpdateForPendingChat:
reportCallWithUUID:endedAtDate:reason:
setRequiresAuthentication:
incomingSessionProviderGenerator
initAsReceiverWithSessionProvider:remoteFromID:remoteProtocolVersion:
waitingChatWithHandle:isOutgoing:
caseInsensitiveCompare:
incomingChatGenerator
callUpdateForChat:
loginID
updateCacheWithChat:
providerDidBegin
TUCallRemoteVideoPresentationStateFromCXVideoPresentationState:
isCellularDataPreferred
mainDisplay
bounds
reportCallWithUUID:changedMeterLevel:forDirection:
handleByFullyQualifyingHandle:usingCountryCode:
chats
setProviderDidBegin:
setIncomingSessionProviderGenerator:
setIncomingChatGenerator:
_shouldOverrideNetworkAsAvailable
_mutableChats
_providerDidBegin
_incomingSessionProviderGenerator
_incomingChatGenerator
T@"<CSDIDSProviderDelegateCapabilities>",R,N,V_capabilities
T@"NSMutableOrderedSet",R,N,V_mutableChats
TB,R,N,V_shouldOverrideNetworkAsAvailable
T@?,C,N,V_providerDidBegin
T@?,C,N,V_incomingSessionProviderGenerator
T@?,C,N,V_incomingChatGenerator
hasSKEBlob
hasMediaBlob
hasCallInfoBlob
_callInfoBlob
_mediaBlob
_sKEBlob
T@"NSData",&,N,V_sKEBlob
T@"NSData",&,N,V_mediaBlob
T@"NSData",&,N,V_callInfoBlob
initWithSessionProvider:
propertiesDescription
remoteProtocolVersionNumber
setRemoteProtocolVersionNumber:
initWithSocket:
initWithDestination:
setInitialLinkType:
initAsInitiatorWithSessionProvider:
initAsReceiverWithSessionProvider:remoteProtocolVersion:
remoteProtocolVersion
setReceiverProtocolVersion:
sendInvitation
cancelInvitation
_remoteProtocolVersionNumber
_sessionProvider
T@"NSNumber",&,N,V_remoteProtocolVersionNumber
Ti,N,V_endedReason
T@"<CSDIDSDualSessionProvider>",R,N,V_sessionProvider
T@"<CSDIDSDualSessionDelegate>",W,N,V_delegate
TB,R,N,GisInitiator,V_initiator
T@"CSDIDSTransport",R,N
initWithComponentId:andBlockOnConfiguration:
serverConnection
newMetricContainerWithIdentifier:
setMetric:
submitMetric:
_setUpQueriableMetrics
_awdRelayMessageTypeForMessageType:
setMessageType:
_awdCallServiceForProvider:video:
setCallService:
setLatencyMs:
reportMetricId:usingBlock:
_awdCallInfoForCall:
_awdCallInfoSourceForDisplayContext:
callDirectoryLabel
callDirectoryExtensionIdentifier
setCallInfo:
setCallInfoSource:
setCallDirectoryProviderBundleId:
callSources
transactionForCallSource:
actions
_awdActionTypeForAction:
_awdActionStateForState:
_awdFailureReasonForAction:
commitDate
setCompletionTimeMs:
addActions:
setFailed:
setTimedOut:
_awdMomentsAvailabilityForAvailability:
supportsRelay
relayDeviceRouteChangesByCallUUID
_awdDeviceRouteForRoute:
_handleQueriedCurrentCallsMetricWithMetricId:
registerQueriableMetric:callback:
calls
setCalls:
isConnecting
isConferenced
callDuration
dateSentInvitation
_awdFaceTimeTransportTypeForFaceTimeTransportType:
_awdTelephonyTransportTypeForTelephonyCallSubType:
_awdLinkTypeForIDSInitialLinkType:
contactName
mapName
suggestedName
location
waitForCurrentReportingOperationsToComplete
setServerConnection:
_serverConnection
_relayDeviceRouteChangesByCallUUID
T@"AWDServerConnection",&,N,V_serverConnection
T@"NSMutableDictionary",R,N,V_relayDeviceRouteChangesByCallUUID
T@"<CSDReporterDataSource>",W,N,V_dataSource
T@"<CSDRelayIDSMessengerDelegate>",W,N,V_delegate
doesNotRecognizeSelector:
phoneNumberMCCToISOCountryCodeTransformBlock
initWithAccountID:primaryDeviceID:phoneNumberURI:availableDeviceSlots:allowedSecondaryDeviceIDs:
primaryDeviceID
phoneNumberURI
availableDeviceSlots
isEqualToAccount:
setPhoneNumberMCCToISOCountryCodeTransformBlock:
mutableCopyWithZone:
containsRegisteredDeviceID:
setAccountID:
setPrimaryDeviceID:
setPhoneNumberURI:
setAvailableDeviceSlots:
setAllowedSecondaryDeviceIDs:
_accountID
_primaryDeviceID
_phoneNumberURI
_availableDeviceSlots
_allowedSecondaryDeviceIDs
T@"NSString",C,N,V_accountID
T@"NSString",C,N,V_primaryDeviceID
T@"NSString",C,N,V_phoneNumberURI
Tq,N,V_availableDeviceSlots
T@"NSSet",C,N,V_allowedSecondaryDeviceIDs
T@"NSString",C,D,N
Tq,D,N
T@"NSSet",C,D,N
isLoaded
startBagLoad
canSend
initWithAccount:destinations:options:
accounts
isAccountActive
isQuickRelaySupported
facetimeIDSServiceGenerator
accountWithUUID:service:
IDSFormattedDestinationID
isRetry
outgoingSessionProviderGenerator
outgoingChatGenerator
initWithAction:
providerDelegate:requestedTransaction:completion:
ISOCountryCodeForChat:
setISOCountryCode:
callForConversation:withSessionToken:
canUpgradeChat:
upgradeChatIfNecessary:
isEqualToData:
chatsPendingUpgrade
instancesRespondToSelector:
chatReceived:
setAccounts:
telephonySenderIdentities
updateProviderConfigurationWithAccounts:senderIdentities:
setTelephonySenderIdentities:
matchingSim
SIMIdentifier
updateProviderConfigurationWithAccounts:
inviteIDSPeersWithAction:additionalPeers:completion:
upgradeCallForConversation:withSessionToken:
ISOCountryCodeForCallWithUUID:
isUpgradingCallWithUUID:
updateProviderConfigurationWithSenderIdentities:
setFacetimeIDSServiceGenerator:
setIsAccountActive:
setOutgoingSessionProviderGenerator:
setOutgoingChatGenerator:
upgradeTimeout
setUpgradeTimeout:
_accounts
_callProviderManager
_telephonySenderIdentities
_chatsPendingUpgrade
_facetimeIDSServiceGenerator
_isAccountActive
_outgoingSessionProviderGenerator
_outgoingChatGenerator
_upgradeTimeout
T@"NSSet",C,N,V_accounts
T@"TUCallProviderManager",R,N,V_callProviderManager
T@"<CSDFaceTimeIDSProviderDelegateCapabilities>",R,N,V_capabilities
T@"NSOrderedSet",C,N,V_telephonySenderIdentities
T@"NSMutableSet",R,N,V_chatsPendingUpgrade
T@"<CSDFaceTimeIDSProviderDelegateServerBag>",&,N,V_serverBag
T@?,C,N,V_facetimeIDSServiceGenerator
T@?,C,N,V_isAccountActive
T@?,C,N,V_outgoingSessionProviderGenerator
T@?,C,N,V_outgoingChatGenerator
Td,N,V_upgradeTimeout
initWithUniqueProxyIdentifier:
setBehavior:
playLocalDTMFToneForKey:
uplinkMutedSetTime
setUplinkMutedSetTime:
setActiveCategoryVolume:
handleRequestedAnswerMessage:withBehavior:
transferFileAtTemporaryURL:toDestinations:withMetadata:
URLByDeletingLastPathComponent
defaultManager
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
fileExistsAtPath:isDirectory:
performFileCopierOperation:onInputURL:outputURL:completion:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
clientFileURLByIdentifier
cleanUpTemporaryFileIfExistsForClientFileURL:
fileTransferer:didTransferFileAtURL:successfully:
temporaryFileURLByClientFileURL
zipDirectoryAtURL:completion:
copyFileAtURL:toTemporaryFileWithName:
fileTransferer:didReceiveResourcesAtURL:withMetadata:isZipped:fromIDSDestination:
stringByAppendingPathComponent:
fileURLWithPath:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
URLByAppendingPathComponent:
copyItemAtURL:toURL:error:
renamedResourceURL:withName:
moveItemAtURL:toURL:error:
pathComponents
removeLastObject
fileURLWithPathComponents:
removeItemAtURL:error:
stringByAppendingPathExtension:
didErrorOccur
cleanup
initWithInputURL:outputURL:identifier:operation:completionBlock:queue:
deleteContentsAtURL:
renameResourceAtURL:toResourceWithName:
transferFileAtURL:toDestinations:withMetadata:
unzipArchiveAtURL:completion:
T@"<CSDFileTransferringDelegate>",W,N
_service
_clientFileURLByIdentifier
_temporaryFileURLByClientFileURL
T@"IDSService",&,N,V_service
T@"NSMutableDictionary",R,N,V_clientFileURLByIdentifier
T@"NSMutableDictionary",R,N,V_temporaryFileURLByClientFileURL
T@"<CSDFileTransferringDelegate>",W,N,V_delegate
initWithSerialQueue:timeout:
serialQueue
callSourceWithIdentifier:
_waitForCallSourceWithIdentifier:completion:
pendingCompletions
timeout
fetchCallSourceForIdentifier:completion:
handleCallSourcesChanged
setSerialQueue:
setTimeout:
setPendingCompletions:
_serialQueue
_timeout
_pendingCompletions
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
Td,N,V_timeout
T@"NSMutableDictionary",&,N,V_pendingCompletions
T@"<CSDCallSourceFetcherDataSource>",W,N,V_dataSource
rangeOfString:
normalizedDeviceType
setRelayCallingEnabled:forDeviceWithID:
setThumperCallingAllowed:onSecondaryDeviceWithID:forSenderIdentityWithUUID:
setThumperCallingAllowed:onSecondaryDeviceWithID:
updateUINotification
arrayWithObject:
dictionaryWithObjectsAndKeys:
userNotificationWithIdentifier:timeout:alertLevel:displayFlags:displayInformation:
responseInformation
setRelayCallingEnabled:
setThumperCallingEnabled:
supportsPhoneCalls
uriForFromID:
ctServiceType
serviceDescription
displayPinMessageForDevice:completionHandler:
enrollDevice:forSenderIdentityUUID:
unenrollDevice:
displayServiceConfirmationWithCompletionHandler:
displayPinRequestFailure
displayIncomingPinCode:fromID:completionHandler:
pinCodeEnteredSuccessfully:cancelled:onPrimaryDevice:
resetOneTimeMessage
_thumperCallingAllowedOnDefaultPairedDeviceDefault
TB,N,V_thumperCallingAllowedOnDefaultPairedDeviceDefault
setProtoStatus:
setHasProtoStatus:
hasProtoStatus
setProtoConferenced:
setHasProtoConferenced:
hasProtoConferenced
setProtoTimeConnected:
setHasProtoTimeConnected:
hasProtoTimeConnected
setProtoOutgoing:
setHasProtoOutgoing:
hasProtoOutgoing
setProtoHasSentInvitation:
setHasProtoHasSentInvitation:
hasProtoHasSentInvitation
protoStatus
protoConferenced
protoTimeConnected
protoOutgoing
protoHasSentInvitation
_protoTimeConnected
_protoStatus
_protoConferenced
_protoHasSentInvitation
_protoOutgoing
TI,N,V_protoStatus
TB,N,V_protoConferenced
Td,N,V_protoTimeConnected
TB,N,V_protoOutgoing
TB,N,V_protoHasSentInvitation
setBackingProvider:
canBeAnsweredWithAudioOrVideoRelayWithRequest:
canOnlyBeAnsweredWithoutAudioOrVideoRelayWithRequest:
hasRelaySupport:
relayDelegate
relayCall:didGroupWithOtherCall:
relayCallDidUngroup:
isMutedForIdentifier:
setMuted:forIdentifier:
isSendingAudioForIdentifier:
setSendingAudio:forIdentifier:
inputAudioPowerSpectrumTokenForIdentifier:
outputAudioPowerSpectrumTokenForIdentifier:
setCallStatus:
relayCallDidDial:
relayCall:didAnswerWithRequest:
relayCallDidDisconnect:
relayCallConferenceDidStartSuccessfullyForIncomingAnsweredCall:
relayCallConferenceFailedToStart:
relayCallConferenceDidStop:cleanly:error:
startConferenceForIdentifier:usingTransport:remoteInviteDictionary:didStartHandler:didStopHandler:
relayCallConferenceDidStartSuccessfullyForOutgoingDialedCall:
relayCallConferenceDidStartSuccessfullyForPulledCall:
relayCallDidHold:
relayCallDidUnhold:
relayCall:didPlayLocalDTMFToneForKey:
relayCallDidSendHardPauseDigits:
relayCallDidBecomeEndpointForPull:
dateStartedOutgoing
setDateStartedOutgoing:
setDateSentInvitation:
prepareToStopConferenceForIdentifier:
canBeAnsweredWithRequest:
startConferenceForAnsweredCallWithTransport:remoteInviteDictionary:
startConferenceForDialedCallWithTransport:remoteInviteDictionary:
startConferenceForPulledCallWithTransport:remoteInviteDictionary:
stopConference
setLocallyHasStartedOutgoing
setRelayDelegate:
_voicemail
_emergency
_sos
_needsManualInCallSounds
_uplinkMuted
_supportsTTYWithVoice
_cannotRelayAudioOrVideo
_callStatus
_originatingUIType
_backingProvider
_displayContext
_initialLinkType
_localSenderIdentityAccountUUID
_relayDelegate
T@"<CSDRelayCallDelegate>",W,N,V_relayDelegate
T@"TUHandle",&,N,V_handle
T@"NSString",C,N,V_isoCountryCode
Ti,N,V_callStatus
T@"TUCallProvider",&,N,V_backingProvider
TB,N,GisOutgoing,V_outgoing
TB,N,GisVoicemail,V_voicemail
TB,N,GisEmergency,V_emergency
TB,N,GisSOS,SsetSOS:,V_sos
T@"NSString",C,N,V_callerNameFromNetwork
TB,N,V_needsManualInCallSounds
T@"TUCallDisplayContext",C,N,V_displayContext
TB,N,V_cannotRelayAudioOrVideo
TQ,N,V_initialLinkType
T@"NSUUID",&,N,V_localSenderIdentityUUID
T@"NSUUID",&,N,V_localSenderIdentityAccountUUID
T@"NSSet",C,N,V_remoteParticipantHandles
TB,N,V_supportsTTYWithVoice
Ti,N,V_originatingUIType
callHistoryManagerClientXPCInterface
callHistoryManagerServerXPCInterface
callHistoryManager
updateOutgoingLocalParticipantUUID:forCallsWithOutgoingLocalParticipantUUID:
recentCallsDidChangeForCallHistoryManager:
initWithManager:
_callHistoryManager
T@"CSDCallHistoryManager",R,N,V_callHistoryManager
_parsePauseDigitsFromDestinationID:
pauseDigits
removeObjectAtIndex:
characterSetWithCharactersInString:
formUnionWithCharacterSet:
rangeOfCharacterFromSet:options:range:
substringWithRange:
characterAtIndex:
characterIsMember:
insertObject:atIndex:
setBaseDestinationID:
setOriginalPauseDigitsString:
setPauseDigits:
_baseDestinationID
_originalPauseDigitsString
_pauseDigits
T@"NSString",C,N,V_baseDestinationID
T@"NSString",C,N,V_originalPauseDigitsString
T@"NSMutableArray",&,N,V_pauseDigits
T@"<CSDPauseDigitsQueueDelegate>",W,N,V_delegate
T@"CSDPauseDigits",R,N
initWithObject:queue:
processName
processBundleIdentifier
valueForEntitlement:
entitledCapabilities
connection
remoteObjectProxy
addBarrierBlock:
initWithConnection:queue:
objectForBlock
performBlockAfterCoalescing:
isEntitledForCapability:
_processIdentifier
_processName
_processBundleIdentifier
_entitledCapabilities
T@"NSXPCConnection",R,N
T@"NSSet",R,C,N,V_entitledCapabilities
sharedUtilityProvider
utilityProvider
currentPreferredTransportMethod
transportMethod
T@"RTTTelephonyUtilities",R,N
bundleURL
ringtoneSoundURL
originalRingtoneSoundURL
supportedHandleTypes
setSupportedHandleTypes:
setEmergencyTUHandles:
setEmergencyTULabeledHandles:
setPrioritizedTUSenderIdentities:
URLWithString:
setBundleURL:
isFileURL
bundleWithURL:
setBundleIdentifier:
setRingtoneSoundURL:
setOriginalRingtoneSoundURL:
emergencyTUHandles
emergencyTULabeledHandles
prioritizedTUSenderIdentities
unsignedIntValue
orderedSetWithCapacity:
tuSenderIdentity
initWithTUSenderIdentity:
T@"TUCallProvider",R,C,N
T@"NSArray",C,N
T@"NSOrderedSet",C,N,SsetPrioritizedTUSenderIdentities:
removeServiceDelegate:
identifiersWaitingForAcknowledgement
pairedDeviceUniqueIDOverrideExists
_sendMessageOptionsWithTimeout:wantsAcknowledgement:
sendData:toDestinations:priority:options:identifier:error:
_retryReliableMessageWithIdentifierIfNecessary:message:timeout:maximumRetryAttempts:
setIdentifiersWaitingForAcknowledgement:
_identifiersWaitingForAcknowledgement
T@"NSMutableSet",&,N,V_identifiersWaitingForAcknowledgement
givenName
setGivenName:
middleName
setMiddleName:
familyName
setFamilyName:
namePrefix
setNamePrefix:
nameSuffix
setNameSuffix:
nickname
setNickname:
phoneticRepresentation
setPhoneticRepresentation:
initWithPersonNameComponents:
personNameComponents
T@"NSPersonNameComponents",R,C,N
setRemoteIDSDestination:
setInputAudioPowerSpectrumToken:
setOutputAudioPowerSpectrumToken:
numberWithUnsignedInteger:
remoteIDSDestination
T@"CXCallUpdate",R,C,N
addMembers:
membersCount
clearMembers
membersAtIndex:
setMessagesGroupUUIDString:
membersType
hasMessage
hasMessagesGroupUUIDString
hasMessagesGroupName
members
setMembers:
message
messagesGroupUUIDString
_members
_message
_messagesGroupUUIDString
T@"NSMutableArray",&,N,V_members
T@"CSDMessagingConversationMessage",&,N,V_message
T@"NSString",&,N,V_messagesGroupUUIDString
T@"NSString",&,N,V_messagesGroupName
sharedPhotoLibrary
creationRequestForAsset
setShouldMoveFile:
addResourceWithType:fileURL:options:
placeholderForCreatedAsset
localIdentifier
performChanges:completionHandler:
saveLivePhotoWithPhotoURL:videoURL:completion:
saveVideoWithURL:completion:
callStateContext
_registerCallStopEvent
_registerCallStartEventForCall:
visibilityContext
_registerCallBackgroundedEvent
_registerCallForegroundedEventForCall:
eventBlock
_contextDictionaryWithCall:
setCallStateContext:
_registerEventWithContext:status:
setVisibilityContext:
_bundleIdentifierForCall:
setEventBlock:
_eventBlock
_callStateContext
_visibilityContext
T@"NSDictionary",&,N,V_callStateContext
T@"NSDictionary",&,N,V_visibilityContext
T@?,C,N,V_eventBlock
initWithContactsDataSource:
initWithReportingController:
initWithConversationManager:
initWithConversationManager:queue:
beginListeningOnService:
providerConfiguration
initWithIdentifier:callSource:configuration:
conversationManagerXPCServer
setSupportsVideo:
setWithObjects:
faceTimeIDSProviderDelegate
conversationManager
updateDebugLinksWithContext
reportAudioFinishedForCallWithUUID:
reportOutgoingCallWithUUID:startedConnectingAtDate:
faceTimeIMAVProviderDelegate
reportCallWithUUID:failedAtDate:withContext:
reportCallWithUUID:endedAtDate:privateReason:
deferReportingAudioFinishedForCallWithUUID:
requestTransaction:completion:
faceTimeConversationProviderDelegate
contactsDataProvider
labeledHandlesForContactWithIdentifier:
isSuggested
providerDelegate:requestedUpgradeToExistingCallForConversation:withSessionToken:completion:
initWithCallSource:queue:
_contactsDataProvider
_conversationManager
_conversationManagerXPCServer
_faceTimeIDSProviderDelegate
_faceTimeIMAVProviderDelegate
_faceTimeConversationProviderDelegate
T@"TUContactsDataProvider",R,N,V_contactsDataProvider
T@"CSDConversationManager",R,N,V_conversationManager
T@"CSDConversationManagerXPCServer",R,N,V_conversationManagerXPCServer
T@"CSDFaceTimeIDSProviderDelegate",R,N,V_faceTimeIDSProviderDelegate
T@"CSDFaceTimeIMAVProviderDelegate",R,N,V_faceTimeIMAVProviderDelegate
T@"CSDFaceTimeConversationProviderDelegate",R,N,V_faceTimeConversationProviderDelegate
T@"CXProvider",R,N,V_provider
initWithMessage:assertion:applicationShouldPostIncomingCall:
applicationShouldPostIncomingCall
_applicationShouldPostIncomingCall
TB,R,N,V_applicationShouldPostIncomingCall
T@"BKSProcessAssertion",R,N,V_assertion
T@"CSDVoIPApplicationMessage",R,N,V_message
SDKVersion
entitlements
objectForKey:ofClass:
environment
client
token
pendingMessageContexts
applicationRecord
csd_hasVoIPBackgroundMode
csd_hasVoIPNetworkExtensionEntitlement
_deliverTokenToApplication
_deliverPendingPayloadsToApplication
setToken:
voipRegistrationSucceededWithDeviceToken:
voipPayloadReceived:mustPostCall:withCompletionHandler:
voipPayloadReceived:withCompletionHandler:
voipRegistrationFailed
transportType
voipNetworkExtensionPayloadReceived:mustPostCall:withCompletionHandler:
voipNetworkExtensionRegistrationFailed
payload
initWithBundleIdentifier:queue:
hasVoIPBackgroundMode
hasVoIPNetworkExtensionEntitlement
setClient:
deliverToken:
deliverMessage:withAssertion:applicationShouldPostIncomingCall:
setEnvironment:
requiresStrictPolicyEnforcement
_requiresStrictPolicyEnforcement
_token
_environment
_client
_applicationRecord
_pendingMessageContexts
T@"LSApplicationRecord",R,N,V_applicationRecord
T@"NSMutableArray",R,N,V_pendingMessageContexts
T@"NSData",C,N,V_token
T@"NSString",C,N,V_environment
T@"CSDClient",&,N,V_client
TB,R,N,V_requiresStrictPolicyEnforcement
compare:options:
hasNamePrefix
hasGivenName
hasMiddleName
hasFamilyName
hasNameSuffix
hasNickname
hasPhoneticRepresentation
_familyName
_givenName
_middleName
_namePrefix
_nameSuffix
_nickname
_phoneticRepresentation
T@"NSString",&,N,V_namePrefix
T@"NSString",&,N,V_givenName
T@"NSString",&,N,V_middleName
T@"NSString",&,N,V_familyName
T@"NSString",&,N,V_nameSuffix
T@"NSString",&,N,V_nickname
T@"CSDMessagingPersonNameComponents",&,N,V_phoneticRepresentation
initWithCallCenterObserver:inCallServiceProcessObserver:springBoardProcessObserver:callCenter:queue:
stringWithCString:encoding:
updateStatusBarSuppressionState:
updateRingingStatusIndicatorAllowState:
springBoardProcessObserver
processIdentifiersForBundleIdentifier:
handleSpringBoardPIDChanged:
setProcessStateChanged:
processStatesForBundleIdentifier:completion:
inCallServiceProcessObserver
setInCallServiceProcessState:
updateResolvedDescriptor
inCallServiceProcessState
springBoardPID
setSpringBoardPID:
inCallServiceWantsStatusBarSuppressionState
setInCallServiceWantsStatusBarSuppressionState:
setInCallServiceAllowsRingingStatusIndicator:
inCallServiceAllowsRingingStatusIndicator
inCallServiceWantsStatusBarSuppression
_statusBarStringForCall:
_processIdentifierForCall:
setProcessIdentifier:
_statusBarStyleOverrideForCall:
setStatusBarStyleOverrides:
setAuditToken:
setIsSystemProvider:
setResolvedDescriptor:
callDurationUpdateTimer
setCallDurationUpdateTimer:
callDurationString
currentCallsHaveMixedProviders
currentProcessIdentifier
T@"<CSDStatusBarResolverDelegate>",W,N
T@"CSDCall",R
T@"CSDStatusBarDescriptor",R,N
_inCallServiceAllowsRingingStatusIndicator
_inCallServiceProcessObserver
_springBoardProcessObserver
_callDurationUpdateTimer
_resolvedDescriptor
_inCallServiceWantsStatusBarSuppressionState
_inCallServiceProcessState
_springBoardPID
T@"<CSDProcessObserverProtocol>",R,N,V_inCallServiceProcessObserver
T@"<CSDProcessObserverProtocol>",R,N,V_springBoardProcessObserver
T@"NSTimer",&,N,V_callDurationUpdateTimer
T@"CSDStatusBarDescriptor",&,N,V_resolvedDescriptor
TQ,N,V_inCallServiceWantsStatusBarSuppressionState
Tq,N,V_inCallServiceProcessState
T@"NSNumber",N,V_springBoardPID
T@"TUCallCenter",R,N,V_callCenter
TB,N,V_inCallServiceAllowsRingingStatusIndicator
T@"<CSDStatusBarResolverDelegate>",W,N,V_delegate
uplinkMutedStatusChanged:
activeConferenceConnectionForIdentifier:
conferenceConnections
isPreparedToStop
setDidPrepareHandler:
invokeDidPrepareIfNecessary:
_prepareConferenceForConferenceConnection:remoteInviteDictionary:
setTransport:
setDidStartHandler:
setDidStopHandler:
activeConference
setConferenceActiveForIdentifier:
invokeDidStartIfNecessary:error:
isHost
setUsingBaseband:
setAudioDisabled:
isAudioDisabled
updateConferenceForIdentifier:isUsingBaseband:disableAudio:
setPreparedToStop:
_conferenceConnectionsForConference:
prepareToStopTimeout
_cleanUpAllConferenceConnectionsForConference:withError:
conferenceConnectionForIdentifier:
_cleanUpConferenceConnection:error:
errorWithDomain:code:userInfo:
invokeDidStopIfNecessary:error:
_stopConference:
conferencesAwaitingConnectionClose
_postDidCloseNotificationForConference:
postNotificationName:object:userInfo:
closeConnectionTimeout
_postDidCloseNotificationForConferenceIfNecessary:
T@"CSDRelayConferenceInterface",R,N
setConferenceConnections:
setConferencesAwaitingConnectionClose:
setCloseConnectionTimeout:
setPrepareToStopTimeout:
_conferenceConnections
_conferencesAwaitingConnectionClose
_closeConnectionTimeout
_prepareToStopTimeout
T@"NSMutableArray",&,N,V_conferenceConnections
T@"NSMutableSet",&,N,V_conferencesAwaitingConnectionClose
T@"<CSDAVConference>",R,N
Td,N,V_closeConnectionTimeout
Td,N,V_prepareToStopTimeout
URLForDirectory:inDomain:appropriateForURL:create:error:
URLByAppendingPathComponent:isDirectory:
URLByStandardizingPath
initWithName:fileManager:error:
lastPathComponent
urlForFilename:
fileManager
fileExistsAtPath:
getResourceValue:forKey:error:
initWithDomain:code:userInfo:
minusSet:
initWithName:error:
createLinkIfNecessaryWithFilename:toURL:error:
removeLinksForFilenamesNotInArray:error:
setURL:
setFileManager:
_URL
_fileManager
T@"NSFileManager",&,N,V_fileManager
T@"NSURL",&,N,V_URL
debugContextState
setDebugContextState:
debugContextVersion
setWaitSeconds:
waitSeconds
performBlock:afterDelay:
longLongValue
tryDownloadCatalog
setDiscretionary:
tryQueryMetadata
performBlock:updateWaitTime:
startCatalogDownload:options:then:
addKeyValuePair:with:
returnTypes:
results
setDebugAsset:
debugAsset
wasLocal
tryCopyAsset
tryDownloadAsset
queryMetaData:
setCanUseLocalCacheServer:
startDownload:then:
getLocalUrl
copyAssetFromSource:toDestination:
updateBlock
T@"MobileAssetManager",R,N
getDebugContextInformationIfNecessary
accessorLock
setUpdateBlock:
_accessorLock
_debugAsset
_debugContextState
_waitSeconds
_updateBlock
T{os_unfair_lock_s=I},R,N,V_accessorLock
T@?,C,N,V_updateBlock
T@"MAAsset",&,N,V_debugAsset
TQ,N,V_debugContextState
Td,N,V_waitSeconds
accountsSupportSecondaryCalling
displayMismatchedAccountsNotification
pinExchangeDelegate
sendIDSAction:toDevice:
allIDSTelephonyDevices
uniqueID
idsDeviceFromUniqueID:
sendApprovalDisplayPinToDevice:
removeErrorNotifications
_numberForKey:
numberFromString:
isEqualToNumber:
displayPinErrorNotification
sendApprovalResponseToDevice:enteredCorrectly:wasCancelled:
pendingCodesToDevicesForApproval
randomSixDigitCode
sendIDSAction:toDevices:
_FTCopyGzippedData
dictionaryWithObject:forKey:
__imSetFromArray
sendMessage:fromAccount:toDestinations:priority:options:identifier:error:
setOutgoingPinRequestIdentifier:
displayErrorNotificationWithMessage:
_FTDecompressData
isHSATrusted
outgoingPinRequestIdentifier
normalizedPhoneNumberHandleForValue:isoCountryCode:
isRelayCallingEnabledForDeviceWithID:
sendPinCodeAndPromptForResponseToDevice:forSenderIdentityUUID:
cancelPinRequests
handlePINCodeEnteredSuccessfully:canceled:fromDevice:isPrimaryDevice:
initWithDelegate:
requestPinFromDevice:
displaySlotsFullNotification
setPendingCodesToDevicesForApproval:
setPinExchangeDelegate:
_pendingCodesToDevicesForApproval
_pinExchangeDelegate
_outgoingPinRequestIdentifier
T@"NSMutableDictionary",&,V_pendingCodesToDevicesForApproval
T@"<CSDPinExchangeDelegate>",&,V_pinExchangeDelegate
T@"NSString",C,V_outgoingPinRequestIdentifier
setHasCompletionTimeMs:
hasCompletionTimeMs
setHasState:
hasState
completionTimeMs
_completionTimeMs
TQ,N,V_completionTimeMs
TI,N,V_state
TI,N,V_failureReason
initWithRelayService:thumperService:
callCapabilitiesClientXPCInterface
callCapabilitiesServerXPCInterface
initWithBundleIdentifiers:queue:
processObserver
clients
deviceListChanged:
deviceCapabilityChanged:
_initializePairedHostDeviceState
_updateState
thumperCapabilitiesMonitor
telephonyCallCapabilities
accountsController
pairedHostDeviceState
xpcListener
capabilityStateUpdated:
_isWatchDevice
setPairedHostDeviceState:
_updateDynamicCapabilitiesAndUpdateClients
_updateClientsWithState
_savePairedHostDeviceState
_setRelayCallingEnabled:
_setRelayCallingEnabled:forDeviceWithID:
_setWiFiCallingEnabled:forSenderIdentityWithUUID:
_setWiFiCallingRoamingEnabled:forSenderIdentityWithUUID:
_setVoLTECallingEnabled:forSenderIdentityWithUUID:
_setThumperCallingEnabled:forSenderIdentityWithUUID:
_setThumperCallingAllowed:onSecondaryDeviceWithID:forSenderIdentityWithUUID:
_setThumperCallingAllowedOnDefaultPairedDevice:forSenderIdentityWithUUID:
endEmergencyCallbackMode
invalidateAndRefreshWiFiCallingCapabilitiesForSenderIdentityWithUUID:
invalidateAndRefreshThumperCallingCapabilitiesForSenderIdentityWithUUID:
_primaryThumperAccountRequiringAvailableDeviceSlots
thumperService
deviceWithUniqueID:
thumperPinExchangeController
_updateHostingAndDisplayingSupport
senderIdentityCapabilitiesStateByUUID
thumperCallingCapabilitiesState
secondaryThumperAccountForAccountID:
senderIdentityUUID
approvedSecondaryDeviceIDs
_updateCallAvailability
_updateRelayCapabilities
_updateCTCapabilities
_supportsPrimaryCalling
setSupportsPrimaryCalling:
_supportsBasebandCalling
setSupportsBasebandCalling:
_supportsCellularData
setSupportsCellularData:
_supportsDisplayingTelephonyCalls
setSupportsDisplayingTelephonyCalls:
_supportsDisplayingFaceTimeAudioCalls
setSupportsDisplayingFaceTimeAudioCalls:
_supportsDisplayingFaceTimeVideoCalls
setSupportsDisplayingFaceTimeVideoCalls:
isTelephonyDevice
_defaultOverrideForDisableDefault:forceDefault:
supportsCellularData
inProcess_isCallingSupported
faceTimeSupported
setFaceTimeAudioAvailable:
setFaceTimeVideoAvailable:
areCapabilitiesValid
setCtCapabilitiesValid:
isEmergencyCallbackModeEnabled
setEmergencyCallbackModeEnabled:
isEmergencyCallbackPossible
setEmergencyCallbackPossible:
wiFiCallingCapabilitiesState
setSupported:
voLTECallingCapabilitiesState
_supportsThumperCallingUsingSenderIdentityCapabilitiesState:
_isThumperCallingAllowedForCurrentDeviceUsingSenderIdentityCapabilitiesState:
setApproved:
isRelayCallingEnabled
isApproved
setEnabled:
supportsBasebandCalling
setSupportsSimultaneousVoiceAndData:
setSenderIdentityCapabilitiesStateByUUID:
_primaryThumperAccountRequiringMatchingCallerID
isThumperCallingSupportedForAccountID:
setThumperCallingAssociatedAccountID:
setWiFiCallingEnabled:forSenderIdentityWithUUID:
setVoLTECallingEnabled:forSenderIdentityWithUUID:
isRoamingEnabled
setWiFiCallingRoamingEnabled:forSenderIdentityWithUUID:
setThumperCallingEnabled:forSenderIdentityWithUUID:
cloudCallingDevices
telephonySubscriptionLabelIdentifierForSenderIdentityUUID:
isServiceEnabledForTelephonySubscriptionLabelIdentifier:
supportsRelayCalling
localDeviceID
_primaryThumperAccountRequiringMatchingCallerID:requiringAvailableDeviceSlots:
primaryThumperAccountUsingDevices:outgoingCallerIDURI:requireMatchingCallerIDURI:requireAvailableDeviceSlots:
_supportsRelayCalling
setSupportsRelayCalling:
_accountsMatchForSecondaryCalling
setAccountsMatchForSecondaryCalling:
relayService
setRelayCallingFeaturesEnabled:
isNearby
setRelayCallingAvailability:
setSupportsFaceTimeAudioRelayCalling:
setSupportsFaceTimeVideoRelayCalling:
setAccountsSupportSecondaryCalling:
_isAudioAccessoryDevice
_relayCallingEnabledDefault
accountsMatchForSecondaryCalling
_deviceExistsThatSupportsRelayCallingWithoutLocalRelayCallingEnabled
setSupportsTelephonyRelayCalling:
_relayCallingDisabledForDeviceIDDefault
setRelayCallingDisabledForDeviceID:
setOutgoingRelayCallerID:
_cloudCallingDevices
setCloudCallingDevices:
defaultPairedDeviceExists
telephonyCapableDeviceExists
relayCapableDeviceExists
compare:
sortedArrayUsingComparator:
supportsRelayCallingWithoutLocalRelayCallingEnabled
_setRelayCallingEnabledDefault:
relayCallingDisabledForDeviceID
_setRelayCallingEnabledDefault:forDeviceWithID:
setThumperCallingAllowedOnDefaultPairedDevice:forSenderIdentityWithUUID:
invalidateAndRefreshWiFiCallingProvisioningURLForSenderIdentityWithUUID:
invalidateAndRefreshThumperCallingProvisioningURLForSenderIdentityWithUUID:
cancelPinRequestFromPrimaryDevice
callCapabilitiesState:
telephonyCallCapabilitiesChanged
T@"CSDCallCapabilities",R,N
thumperPushHandler
_xpcListener
_processObserver
_accountsController
_telephonyCallCapabilities
_thumperPushHandler
_thumperPinExchangeController
_thumperCapabilitiesMonitor
_relayService
_thumperService
_pairedHostDeviceState
T@"NSXPCListener",R,N,V_xpcListener
T@"<CSDProcessObserverProtocol>",R,N,V_processObserver
T@"CSDAccountsController",R,N,V_accountsController
T@"CSDTelephonyCallCapabilities",R,N,V_telephonyCallCapabilities
T@"CSDThumperPushHandler",R,N,V_thumperPushHandler
T@"CSDPinExchangeController",R,N,V_thumperPinExchangeController
T@"CSDThumperCapabilitiesMonitor",R,N,V_thumperCapabilitiesMonitor
T@"<CSDIDSService>",R,N,V_relayService
T@"<CSDIDSService>",R,N,V_thumperService
T@"TUCallCapabilitiesState",&,N,V_state
T@"TUCallCapabilitiesState",&,N,V_pairedHostDeviceState
T@"TUCallCapabilitiesState",R,N
isValid
setDialRequest:
isDialAssisted
setWasDialAssisted:
audioSourceIdentifier
initWithDisplayContext:call:serialQueue:
setDynamicDisplayContext:
dynamicDisplayContext
setCompletionHandler:
relayClientTransport
transitionStatus
setTransitionStatus:
wasDialAssisted
faceTimeIDStatus
setFaceTimeIDStatus:
isKnownCaller
setUplinkWasExplicitlyMuted:
shouldOverrideCallStatus
callStatusFromOverride
_refreshFaceTimeIDSStatusIfNecessary
faceTimeIDStatusRefreshed
setFaceTimeIDStatusRefreshed:
currentIDStatusForDestination:service:listenerID:queue:completionBlock:
initWithCall:contactIdentifier:serialQueue:
initWithUUID:
setOnHold:
setProviderIdentifier:
setHostedOnCurrentDevice:
hasAudioInterruption
setHasAudioInterruption:
displayContextChanged:
disconnect
updateWithProxyCall:
setRelayClientTransport:
setIsKnownCaller:
silencingUserInfo
cxCall
hasAudioFinished
setHasAudioFinished:
bytesOfDataUsed
setBytesOfDataUsed:
expectedRelayClientDestination
setExpectedRelayClientDestination:
setSilencingUserInfo:
_isKnownCaller
_uplinkWasExplicitlyMuted
_hasAudioInterruption
_hasAudioFinished
_faceTimeIDStatusRefreshed
_junkConfidence
_identificationCategory
_dialRequest
_dateStartedOutgoing
_bytesOfDataUsed
_uplinkMutedSetTime
_remoteUplinkMutedSetTime
_activeRemoteParticipants
_relayClientTransport
_expectedRelayClientDestination
_dynamicDisplayContext
_silencingUserInfo
T@"TUDialRequest",&,N,V_dialRequest
T@"TUDynamicCallDisplayContext",&,N,V_dynamicDisplayContext
TB,N,V_faceTimeIDStatusRefreshed
T@"NSMutableDictionary",&,N,V_silencingUserInfo
T@"<CSDCallDelegate>",W,N,V_delegate
T@"CSDCallDataSource",W,N,V_dataSource
T@"NSDate",&,N,V_dateStartedOutgoing
TB,N,V_uplinkWasExplicitlyMuted
TB,N,V_isSendingAudio
TB,N,V_hasAudioInterruption
TB,N,V_hasAudioFinished
T{?=[8I]},R,N
T@"CXCall",R,N
Tq,N,V_bytesOfDataUsed
TQ,R,N,V_initialLinkType
Tq,N,V_identificationCategory
Tq,N,V_junkConfidence
TB,N,V_isKnownCaller
Td,N,V_uplinkMutedSetTime
Td,N,V_remoteUplinkMutedSetTime
T@"NSSet",C,N,V_activeRemoteParticipants
T@"CSDIDSTransport",&,N,V_relayClientTransport
T@"IDSDestination",&,N,V_expectedRelayClientDestination
audioDeviceController
_initializeAudioRouteCollections
_initializeAutomaticCarDNDStatusIfNecessary
_updatePickableRoutes
_updateCarPlayDeviceConnected
pickableRoutesDidChangeNotification:
preferredExternalRouteDidChangeNotification:
carPlayIsConnectedChanged:
mediaServicesWereResetNotification:
_audioRouteCollectionForCall:
isAnyRouteAvailableWithUniqueIdentifier:
isCarPlayDeviceConnected
_isAnyAudioDevicePreferred
isAnyPreferredRouteAvailable
audioRouteCollections
preferredRoute
isAnyPreferredRouteAvailableAndActive
preferredAndActiveRoute
isAnyRouteAvailableWithBluetoothEndpointType:
isAnyRouteAvailableWithOtherConnectedDevices
_postNotificationName:
updatePickableRoutes
initWithCategory:mode:
isPreferredDevice
setAudioRouteCollections:
automaticCarDNDStatus
fetchAutomaticDNDAssertionWithReply:
setCarModeActive:
setStatusChangeObserver:
setAutomaticCarDNDStatus:
sharedAVSystemController
attributeForKey:
setCarPlayDeviceConnected:
audioDeviceControllerDeviceListChanged:
isAnyRouteAvailableWithUniqueIdentifier:forCall:
isAnyPreferredRouteAvailableForCall:
preferredRouteForCall:
isAnyPreferredRouteAvailableAndActiveForCall:
preferredAndActiveRouteForCall:
isAnyVehicleRouteAvailableForCall:
isAnyPreferredRouteAvailableForAnyCall
isAnyPreferredRouteAvailableAndActiveForAnyCall
isCarModeActive
isAnyVehicleRouteAvailableForAnyCall
isAnyRouteAvailableWithOtherConnectedDevicesForAnyCall
isAnyBluetoothHeadphoneRouteAvailableForAnyCall
anyPreferredRouteAvailableForAnyCall
TB,R,N,GisAnyPreferredRouteAvailableForAnyCall
anyPreferredRouteAvailableAndActiveForAnyCall
TB,R,N,GisAnyPreferredRouteAvailableAndActiveForAnyCall
carModeActive
TB,R,N,GisCarModeActive
carPlayRouteAvailable
TB,R,N,GisCarPlayRouteAvailable
anyVehicleRouteAvailableForAnyCall
TB,R,N,GisAnyVehicleRouteAvailableForAnyCall
anyRouteAvailableWithOtherConnectedDevicesForAnyCall
TB,R,N,GisAnyRouteAvailableWithOtherConnectedDevicesForAnyCall
anyBluetoothHeadphoneRouteAvailableForAnyCall
TB,R,N,GisAnyBluetoothHeadphoneRouteAvailableForAnyCall
_carPlayDeviceConnected
_carModeActive
_audioRouteCollections
_automaticCarDNDStatus
T@"NSDictionary",C,N,V_audioRouteCollections
carPlayDeviceConnected
TB,N,GisCarPlayDeviceConnected,V_carPlayDeviceConnected
T@"CARAutomaticDNDStatus",&,N,V_automaticCarDNDStatus
TB,N,GisCarModeActive,V_carModeActive
initWithUUID:andAccountID:andSlot:
slotID
csd_isTelephony
csd_isThumper
csd_isUnknown
csd_telephony
TB,R,N,Gcsd_isTelephony
csd_thumper
TB,R,N,Gcsd_isThumper
csd_unknown
TB,R,N,Gcsd_isUnknown
addRemoteMembers:
addActiveRemoteParticipants:
setUUIDString:
setGroupUUIDString:
remoteMembersCount
clearRemoteMembers
remoteMembersAtIndex:
activeRemoteParticipantsCount
clearActiveRemoteParticipants
activeRemoteParticipantsAtIndex:
setReportData:
remoteMembersType
activeRemoteParticipantsType
hasUUIDString
hasGroupUUIDString
setHasLocallyCreated:
hasLocallyCreated
hasInitiator
hasLocalMember
hasDebugLink
hasReportData
uUIDString
groupUUIDString
reportData
_groupUUIDString
_reportData
_uUIDString
T@"NSString",&,N,V_uUIDString
T@"NSString",&,N,V_groupUUIDString
TB,N,V_locallyCreated
T@"CSDMessagingHandle",&,N,V_initiator
T@"CSDMessagingConversationMember",&,N,V_localMember
T@"NSMutableArray",&,N,V_remoteMembers
T@"NSMutableArray",&,N,V_activeRemoteParticipants
T@"CSDMessagingDebugLink",&,N,V_debugLink
T@"CSDMessagingConversationReport",&,N,V_reportData
setHasTimebase:
hasTimebase
_timebase
_conversationID
T@"NSString",&,N,V_conversationID
Td,N,V_timebase
initWithQueue:reportingController:persistenceController:
weakToStrongObjectsMapTable
retreiveActiveConversations
sendData:fromAccount:toDestinations:priority:options:identifier:error:
aliases
activeLocalHandles
idsDestinations
groupSessionProviderCreationBlock
accountWithCallerID:
initWithGroupSessionProvider:
conversationCreationBlock
reportingController
createConversationReportingSession:
mutableConversationsByUUID
persistenceController
updateConversation:
conversationWithGroupUUID:
createConversationWithUUID:groupUUID:messagesGroupUUID:locallyCreated:localMember:initiator:remoteMembers:fromStorage:conversationReport:
delegateToQueue
conversationManager:conversation:receivedMessage:fromHandle:withUpdate:
setConversationGroupUUIDString:
participantWithCSDConversationParticipant:
addActiveParticipants:
sendDataBlock
activeParticipants
csdConversationParticipant
conversationsByUUIDIncludingStorageConversations:
conversationWithGroupUUID:orRepresentedByRemoteMembers:
enumerateActiveConversations:
removeAllConversations
localCallerID
createConversationIfNecessaryWithUUID:groupUUID:messagesGroupUUID:locallyCreated:localMember:remoteMembers:
conversationManager:conversationChanged:
removeConversation:
conversationManager:conversation:addedActiveParticipant:
conversationManager:conversation:removedActiveParticipant:
conversationManager:conversation:mediaPrioritiesDidChangeForParticipant:
conversationManager:conversation:failedWithContext:
initWithUUID:handle:
outgoingResponseIdentifier
hasConversationGroupUUIDString
conversationGroupUUIDString
normalizedHandleWithDestinationID:
processDebugKey:debugData:conversationUUID:
notifyDelegatesOfMessage:fromHandle:forConversation:withUpdate:
handleConversation:receivedAVCBlobRequest:fromHandle:
handleConversation:receivedAVCBlobResponse:fromHandle:
processGroupSessionParticipantUpdate:
participantDestinationID
participantUpdateType
processJoinUpdate:
handleParticipantWithIdentifier:leftConversationWithGroupUUID:fromHandle:
processUpdateMembersUpdate:
processParticipantDataUpdate:
clientContextData
participantData
handleParticipants:joinedConversationWithUpdate:joinContext:
tuConversationMembers
addedMembers
maximumNumberOfInvitedMembers
conversarionWithGroupUUID:orMemberIdentifiers:orRemoteMembers:
fromServer
transitionConversationWithUUID:toNewGroupUUID:remoteMembers:localMember:fromHandle:
senderIdentityUUIDForCallerIDHandle:
conversationRepresentedByRemoteMembers:
conversationsByGroupUUID
conversationsByUUID
removeDelegate:
findOrCreateConversationWithGroupUUID:messagesGroupUUID:remoteMembers:localMember:
joinExistingConversationWithUUID:context:
startAudioForConversationWithUUID:
leaveConversationWithUUID:
leaveAllConversations
setUplinkMuted:forConversationWithUUID:
setVideoEnabled:forConversationWithUUID:
setVideoPaused:forConversationWithUUID:
setRelaying:forConversationWithUUID:
isConversationWithUUIDRelaying:
addRemoteMembers:toConversationWithUUID:
updateParticipantPresentationContexts:onConversationWithUUID:
buzzMember:conversationUUID:
setDownlinkMuted:forRemoteParticipantsOnConversationWithUUID:
setMessagesGroupName:onConversationWithUUID:
setDelegateToQueue:
lockStateObserver
setCallProviderManager:
setGroupSessionProviderCreationBlock:
setConversationCreationBlock:
setSendDataBlock:
setActiveLocalHandles:
setLocalCallerID:
_mutableConversationsByUUID
_delegateToQueue
_persistenceController
_lockStateObserver
_reportingController
_groupSessionProviderCreationBlock
_conversationCreationBlock
_sendDataBlock
_activeLocalHandles
_localCallerID
T@"CSDIDSService",&,N,V_service
T@"NSMutableDictionary",R,N,V_mutableConversationsByUUID
T@"NSMapTable",&,N,V_delegateToQueue
T@"CSDConversationPersistenceController",R,N,V_persistenceController
T@"CSDDeviceLockStateObserver",R,N,V_lockStateObserver
T@"TUCallProviderManager",&,N,V_callProviderManager
T@"CSDReportingController",R,N,V_reportingController
T@?,C,N,V_groupSessionProviderCreationBlock
T@?,C,N,V_conversationCreationBlock
T@?,C,N,V_sendDataBlock
T@?,C,N,V_activeLocalHandles
T@?,C,N,V_localCallerID
setLocalParticipantUUID:
setCallerId:
handleTypeForTUHandle:
setHandleType:
setUniqueId:
setDuration:
setMediaType:
setServiceProvider:
dateWithTimeIntervalSinceNow:
setDate:
setRead:
setDisconnectedCause:
filteredOutReason
setFilteredOutReason:
isJunk
setCallerNetworkName:
setCallerIdAvailability:
setTimeToEstablish:
providerForRecentCall:
predicateWithFormat:
predicateForFilteringOutFaceTimeAudioCalls
localParticipantUUID
outgoingLocalParticipantUUID
setOutgoingLocalParticipantUUID:
normalizedEmailAddressHandleForValue:
normalizedGenericHandleForValue:
setHasProtocolVersion:
hasProtocolVersion
setHasMessageType:
hasMessageType
setHasCallService:
hasCallService
setHasLatencyMs:
hasLatencyMs
messageType
latencyMs
_latencyMs
_protocolVersion
_callService
_messageType
TQ,N,V_protocolVersion
Ti,N,V_messageType
TI,N,V_callService
TQ,N,V_latencyMs
setHasFailed:
hasFailed
failed
_failed
TB,N,V_failed
initWithBundleIdentifier:allowPlaceholder:error:
UIBackgroundModes
objectForKey:ofClass:valuesOfClass:
executableURL
T@"NSString",R
T@"NSURL",R
setHasProtoWantsVideo:
setOBSOLETEProtoMomentsAvailable:
setHasOBSOLETEProtoMomentsAvailable:
hasOBSOLETEProtoMomentsAvailable
setHasProtoSenderMuteUplink:
hasProtoSenderMuteUplink
setHasProtoShouldSuppressInCallUI:
hasProtoShouldSuppressInCallUI
setHasProtoMomentsV2Available:
hasProtoMomentsV2Available
oBSOLETEProtoMomentsAvailable
_protoUpgradeSessionUUID
_oBSOLETEProtoMomentsAvailable
_protoMomentsV2Available
_protoSenderMuteUplink
_protoShouldSuppressInCallUI
_protoWantsVideo
TB,N,V_protoWantsVideo
TB,N,V_oBSOLETEProtoMomentsAvailable
TB,N,V_protoSenderMuteUplink
TB,N,V_protoShouldSuppressInCallUI
TB,N,V_protoMomentsV2Available
T@"NSString",&,N,V_protoUpgradeSessionUUID
supportsPreferredAndActive
isPreferredAndActive
isPreferred
setCategory:
setMode:
_routePassingTest:
_anyRoutePassesTest:
isWirelessHeadset
isAirTunes
isCarAudio
isBluetooth
bluetoothEndpointType
uniqueIdentifier
identifiersOfOtherConnectedDevices
enumerateObjectsUsingBlock:
enumerateRoutesInvokingBlock:forRoutesPassingTest:
isReceiverRouteAvailable
isSpeakerRouteAvailable
isWirelessHeadsetRouteAvailable
isAirTunesRouteAvailable
isCarAudioRouteAvailable
isBluetoothRouteAvailable
_setRoutesFromRouteDictionaries:
_category
_mode
T@"NSString",&,N,V_category
T@"NSString",&,N,V_mode
T@"NSArray",C,N,V_routes
receiverRouteAvailable
TB,R,N,GisReceiverRouteAvailable
speakerRouteAvailable
TB,R,N,GisSpeakerRouteAvailable
wirelessHeadsetAvailable
TB,R,N,GisWirelessHeadsetRouteAvailable
airTunesRouteAvailable
TB,R,N,GisAirTunesRouteAvailable
carAudioRouteAvailable
TB,R,N,GisCarAudioRouteAvailable
bluetoothRouteAvailable
TB,R,N,GisBluetoothRouteAvailable
T@"TURoute",R,N
hasCallInfo
callInfoSource
setHasCallInfoSource:
hasCallInfoSource
callInfoSourceAsString:
StringAsCallInfoSource:
hasCallDirectoryProviderBundleId
callInfo
callDirectoryProviderBundleId
_callDirectoryProviderBundleId
_callInfo
_callInfoSource
T@"AWDCSDCallStatus",&,N,V_callInfo
Ti,N,V_callInfoSource
T@"NSString",&,N,V_callDirectoryProviderBundleId
setHasFaceTimeAudioAvailable:
hasFaceTimeAudioAvailable
setHasFaceTimeVideoAvailable:
hasFaceTimeVideoAvailable
_faceTimeAudioAvailable
_faceTimeVideoAvailable
TB,N,V_faceTimeAudioAvailable
TB,N,V_faceTimeVideoAvailable
setStatus:
setConferenced:
dateWithTimeIntervalSinceReferenceDate:
conferenced
TB,N,GisConferenced
TB,N,GisOutgoing
T@"NSDate",&,N
acquireProcessAssertionForBundleIdentifier:completion:
processAssertions
countForObject:
invalidateProcessAssertionForBundleIdentifier:completion:
acquireProcessAssertionForBundleIdentifier:
invalidateProcessAssertionForBundleIdentifier:
setProcessAssertions:
_processAssertions
T@"NSCountedSet",&,N,V_processAssertions
initForReadingWithError:
initWithDataSource:deviceLockObserver:callCenterObserver:callDirectoryStoreBuilder:queue:
_callFilterBlock
emergencyProvider
setCallDirectoryStore:
callDirectoryAllowsCallFromSourceAddress:
_doNotDisturbAllowsCallFromSourceAddress:providerIdentifier:
isOnEmergencyCall
emergencyProviderIdentifier
callDirectoryAllowsCallFromSourceAddress:countryCode:
callDirectoryStore
_callDirectoryPhoneNumberVariantsForSourceAddress:countryCode:
containsBlockingEntryForEnabledExtensionWithPhoneNumberInArray:error:
initWithDigits:countryCode:
callDirectorySanitizer
canonicalizedPhoneNumber:
ITUCountryCodeForISOCountryCode:
setOnEmergencyCall:
twoTimeCallthroughInterval
setTwoTimeCallthroughInterval:
deviceLockObserver
_onEmergencyCall
_twoTimeCallthroughInterval
_callDirectoryStore
_emergencyProviderIdentifier
_deviceLockObserver
_callDirectorySanitizer
T@"CSDIncomingCallFilterDataSource",&,N,V_dataSource
onEmergencyCall
TB,N,GisOnEmergencyCall,V_onEmergencyCall
T@"NSString",R,C,N,V_emergencyProviderIdentifier
T@"<CSDDeviceLockStateObserver>",R,N,V_deviceLockObserver
T@"CXCallDirectorySanitizer",R,N,V_callDirectorySanitizer
T@"CXCallDirectoryStore",&,N,V_callDirectoryStore
Td,N,V_twoTimeCallthroughInterval
accountStore
aa_primaryAppleAccount
username
isSignedIntoiCloud
_accountStore
T@"ACAccountStore",R,N,V_accountStore
signedIntoiCloud
TB,R,N,GisSignedIntoiCloud
initWithCallCenterObserver:transactionManager:queue:
_callHistoryChanged:
_addPendingCallToCallHistory:
_callConnected:
_handleCallHistoryChanged
_markReadRecentCallsMatchingHandle:
recentsManager
predicateForCallsWithStatusRead:
callsWithPredicate:limit:offset:batchSize:
clearReadNotificationsIgnoringHandleIds:
cachedCalls
updateBytesOfDataUsedFor:with:
_callHistoryTransactionObjectWithIdentifier:
_endTransactionForObjectAfterCallHistoryDatabaseChanges:
addToCallHistory:
transactionObjectsAwaitingCallHistory
transactionManager
predicateForCallsWithRemoteParticipantCount:
predicateForCallsWithRemoteParticipantHandle:
andPredicateWithSubpredicates:
predicateFormat
setRead:forCallsWithPredicate:completion:
isEqualToCallProvider:
predicateForCallsWithAnyServiceProviders:
notPredicateWithSubpredicate:
deleteCallsWithPredicate:completion:
_canAddCallToCallHistory:
_addCallToCallHistory:
updateBytesOfDataUsed:forCallWithUniqueProxyIdentifier:callHistoryIdentifier:
incomingCallFilter
_incomingCallFilter
_transactionManager
_recentsManager
_transactionObjectsAwaitingCallHistory
_cachedCalls
T@"<CSDTransactionManager>",R,N,V_transactionManager
T@"CHManager",R,N,V_recentsManager
T@"<CSDUserNotificationDelegate>",R,W,N,V_delegate
T@"NSMutableArray",R,N,V_transactionObjectsAwaitingCallHistory
T@"NSMutableDictionary",R,N,V_cachedCalls
T@"CSDIncomingCallFilter",R,N,V_incomingCallFilter
preferences
_updateSessionPreferences
_preferences
T@"<CSDIDSSessionProvider>",R,N,V_sessionProvider
T@"NSMutableDictionary",R,N,V_preferences
wiFiAllowed
TB,N,GisWiFiAllowed
cellularDataAllowed
TB,N,GisCellularDataAllowed
cellularDataPreferred
TB,N,GisCellularDataPreferred
addContactIdentifiers:
setProtoPersonNameComponents:
setSuggestedName:
setCompanyName:
setMapName:
setLocation:
setContactName:
setContactLabel:
setCallDirectoryLabel:
setCallDirectoryLocalizedExtensionContainingAppName:
setCallDirectoryExtensionIdentifier:
contactIdentifiersCount
clearContactIdentifiers
contactIdentifiersAtIndex:
contactIdentifiersType
hasName
hasProtoPersonNameComponents
hasSuggestedName
hasLabel
hasCompanyName
hasMapName
hasLocation
hasContactName
hasContactLabel
hasCallDirectoryLabel
hasCallDirectoryLocalizedExtensionContainingAppName
hasCallDirectoryExtensionIdentifier
protoPersonNameComponents
companyName
contactLabel
callDirectoryLocalizedExtensionContainingAppName
contactIdentifiers
setContactIdentifiers:
_callDirectoryExtensionIdentifier
_callDirectoryLabel
_callDirectoryLocalizedExtensionContainingAppName
_companyName
_contactIdentifiers
_contactLabel
_contactName
_label
_location
_mapName
_name
_protoPersonNameComponents
_suggestedName
T@"NSString",&,N,V_name
T@"CSDMessagingPersonNameComponents",&,N,V_protoPersonNameComponents
T@"NSString",&,N,V_suggestedName
T@"NSString",&,N,V_label
T@"NSString",&,N,V_companyName
T@"NSString",&,N,V_mapName
T@"NSString",&,N,V_location
T@"NSString",&,N,V_contactName
T@"NSString",&,N,V_contactLabel
T@"NSString",&,N,V_callDirectoryLabel
T@"NSString",&,N,V_callDirectoryLocalizedExtensionContainingAppName
T@"NSString",&,N,V_callDirectoryExtensionIdentifier
T@"NSMutableArray",&,N,V_contactIdentifiers
setActivityQueue:
setBestAppSuggestionManager:
bestAppSuggestionManager
broadcastActivity:withTimeout:
_broadcastActivity:withTimeout:shouldPrioritize:
_stopBroadcastingActivity:
_listenForActivityType:dynamicIdentifier:
_stopListeningForActivityType:
activityQueue
userActivity
becomeCurrent
_updateCurrentlyBroadcastedActivity
registerActivityType:dynamicIdentifier:
activityTypeRequiresBestAppSuggestionListener:
startListeningForBestAppSuggestions
unregisterActivityType:dynamicIdentifier:
stopListeningForBestAppSuggestions
activityType
activityTypeForUserActivityTypeString:
dynamicIdentifier
bestAppSuggestionMayHaveChanged
bestAppSuggestionChanged:
bestAppSuggestionChanged:withAdditionalSuggestions:
connectionInterrupted
currentlyBroadcastedActivity
setCurrentlyBroadcastedActivity:
_activityQueue
_currentlyBroadcastedActivity
_bestAppSuggestionManager
T@"NSMutableOrderedSet",&,N,V_activityQueue
T@"CSDUserActivity",&,N,V_currentlyBroadcastedActivity
T@"UABestAppSuggestionManager",&,N,V_bestAppSuggestionManager
T@"<CSDUserActivityCommunicatorDelegate>",W,N,V_delegate
announceCalls
initWithSuiteName:
setAnnounceCalls:
T@"TUUserConfiguration",R,N,V_userConfiguration
setTuConversationMembers:
numberWithLong:
addAddedMembers:
setJoined:
participantPushToken
participantURI
setLocalParticipantIdentifier:
setRetryCount:
idsDestinationForActiveParticipant:
retryCount
maxActiveParticipantFetchRetries
_joined
_localParticipantIdentifier
_retryCount
T@"<CSDIDSGroupSessionProvider>",R,N,V_sessionProvider
joined
TB,N,GisJoined,V_joined
TQ,N,V_localParticipantIdentifier
TQ,N,V_retryCount
T@"<CSDIDSGroupSessionDelegate>",W,N,V_delegate
initWithCallStateController:queue:
setProviderManager:
setRelayCallDataSource:
initWithDataSources:queue:
updateClientsWithCall:
updateAudioArbitration
setCallChanged:
callServicesClientXPCInterface
callServicesServerXPCInterface
wantsCallDisconnectionOnInvalidation
disconnectAllCalls
wantsCallStopStreamingOnInvalidation
_launchInCallApplicationForExistingCall
setCarPlayScreenConnectionChanged:
sharedInstanceWithQueue:server:shouldRegister:
callServicesInterface
registerWithCompletionHandler:
_handleRelayCallingChanged
makeLocalRouteController
localRouteController
routesByUniqueIdentifier
handleLocalRoutesByUniqueIdentifierUpdated:
handleRoutesByUniqueIdentifierUpdated:
setRoutesDidChangeHandler:
reportRouteWasPicked:
setRouteWasPickedHandler:
reportTimedOutPickingRoute:
setTimedOutPickingRouteHandler:
makePairedHostDeviceRouteController
handlePairedHostDeviceRoutesByUniqueIdentifierUpdated:
_handleCallStatusChangedNotification:
_handleCSDRelayIDSActiveAccountsChanged:
_handleCSDRelayPairedDeviceConnectedNotification:
_handlePreferredRouteChangedNotification:
_handleCallStartedOutgoingNotification:
_handleCallStartedConnectingNotification:
_handleCallConnectedNotification:
_handleNeedsManualInCallSoundsChangedNotification:
_handleCallWantsHoldMusicChangedNotification:
_handleCallShouldSuppressRingtoneChangedNotification:
_handleCallModelChangedNotification:
_handleResetCallStateNotification:
_handleHardPauseStateChangedNotification:
_handleCallIsUsingBasebandChangedNotification:
_handleInvitationSentNotification:
_handleCallDisplayContextChangedNotification:
_handleUpdateRemoteUplinkMutedChangedNotification:
_handleTUCallSupportsTTYWithVoiceChangedNotification:
_handleTUCallTTYTypeChangedNotification:
_handleCarPlayControlEventNotification:
_handleAudioSessionInterruptionNotification:
shouldHandleSecureMicrophoneEvents
performDisconnectAllCalls
callHistoryManagerXPCServer
callProviderManagerXPCServer
providerCallDataSource
supportsRelayingToOtherDevices
areRelayCallingFeaturesEnabled
_requestCallStateFromHost
callsWithAnEndpointElsewhere
carPlayManager
isCarPlayConnected
shouldHandleCarPlayControlEvents
_answerIncomingCallAsConversation:
_answerIncomingCall:withBehavior:
disconnectCurrentCallAndActivateHeld
swapCalls
unholdCall:
holdCall:
activeConversationForCall:
initWithConversation:
setUUID:
joinConversationWithConversationRequest:
faceTimeLaunchForIncomingCallURL
currentProxyCalls
proxyCallWithCall:
wantsCallNotificationsDisabledWhileSuspended
isProcessSuspended
eligibleCallsByFilteringCalls:forClient:
isCallEligible:forClient:
handleCurrentCallsChanged:callDisconnected:
performBlockOnClients:
handleFrequencyChangedTo:inDirection:forCallsWithUniqueProxyIdentifiers:
wantsFrequencyChangeNotifications
arrayByApplyingSelector:
filterClientsUsingPredicate:andPerformBlock:coalescedByIdentifier:
handleMeterLevelChangedTo:inDirection:forCallsWithUniqueProxyIdentifiers:
resetCallProvisionalStates
sendClientsNotificationName:forCall:userInfo:
handleNotificationName:forCallWithUniqueProxyIdentifier:userInfo:
_launchInCallApplicationForIncomingCallIfNecessary:
_handleRingingCallStatusChangeForHostedCall:
_handleSendingCallStatusChangeForHostedCall:
_launchInCallApplicationForOutgoingConversationIfNecessary:
_launchInCallApplicationForOutgoingCallIfNecessary:
_handleDisconnectedCallStatusChangeForHostedCall:
_handleDisconnectedCallStatusChangeForVoicemailCall
_updateRoutesForDisconnectedCall
_handleActiveCallStatusChangeForHostedCall:
_handleHeldCallStatusChangeForHostedCall:
_handleConnectingCallStatusChangeForHostedCall:
_endProxyCallsForConnectingVideoCall
_handleConnectedCallStatusChangeForHostedCall:
performPushHostedCallsToDestination:
performPullRelayingCallsFromClientAndUpdateEndpoint:updateExpectedDestination:
getActivePairedDevice
supportsCapability:
shouldRelayToOtherDevices
_nonRingingCallExistsOnThisDevice
clearState
registerCall:
relayCallDataSource
relayCallDelegate
outgoingCallFromDialRequest:
dateAnsweredOrDialed
dateDialed
setDateAnsweredOrDialed:
callWithCallUUID:
callsWithGroupUUID:
holdCalls:whileUnholdingCalls:
groupCalls:withCalls:
ungroupCall:fromOtherCallsInGroup:
addCalls:forIdentifier:
dataSources
callsForDataSource:identifier:
performEndActiveAndAnswerCall:withRequest:
performEndHeldAndAnswerCall:withRequest:
performHoldActiveAndAnswerCall:withRequest:
performAnswerCallAsVideoUpgrade:withRequest:
performAnswerCallAsAudioDowngrade:withRequest:
callWithUniqueProxyIdentifier:fromCallsToAnswer:
disconnectCalls:whileHoldingCalls:andUnholdingCalls:andUngroupingCalls:
answerCall:withRequest:whileDisconnectingActiveCalls:
answerCall:withRequest:whileDisconnectingHeldCalls:andHoldingCalls:
currentlyPickedRouteIdForCategory:andMode:
sourceIdentifierForRouteID:
answerCall:withRequest:whileHoldingActiveCalls:
disconnectCall:whileUngroupingCall:
disconnectAllCalls:
sendMMIOrUSSDCodeWithRequest:
setTTYType:forCalls:
setUplinkMuted:forCalls:
pullCallWithHandoffActivityUserInfo:completion:
allCallsPassTest:
callForClient:usingCall:
currentCallsForClient:
_dial:displayContext:completion:
performDialCall:displayContext:
performAnswerCall:withRequest:
performHoldCall:
performUnholdCall:
performDisconnectCall:
performGroupCall:withCall:
performUngroupCall:
performSwapCalls
performPlayDTMFToneForCall:key:
performDisconnectCurrentCallAndActivateHeld
performSetTTYType:forCall:
performPushRelayingCallsToHostWithSourceIdentifier:
performPullCallFromClientUsingHandoffActivityUserInfo:completion:
performSendMMIOrUSSDCodeWithRequest:
performSetUplinkMuted:forCall:
isInCallUIActive
performPullHostedCallsFromPairedHostDevice
performUpdateCallWithProxy:
reportCallEnteredForeground:
reportAllCallsBackgrounded
_fetchUserActivityWithUUID:completionHandler:
performJoinConversation:
setCurrentAudioInputDeviceToDeviceWithUID:
setCurrentAudioOutputDeviceToDeviceWithUID:
pickRouteWithUniqueIdentifier:shouldWaitUntilAvailable:
containsOutgoingRestrictedHandle:forBundleIdentifier:performSynchronously:
policyForAddresses:forBundleIdentifier:
willRestrictAddresses:forBundleIdentifier:
isUnknownAddress:normalizedAddress:forBundleIdentifier:
filterStatusForAddresses:withBundleIdentifier:
_handleMessagingConnectionEndForCalls:withDisconnectedReason:didStartConnecting:
processStatesForBundleIdentifier:
answerCallWithRequest:
holdCallWithUniqueProxyIdentifier:
unholdCallWithUniqueProxyIdentifier:
disconnectCallWithUniqueProxyIdentifier:
groupCallWithUniqueProxyIdentifier:withOtherCallWithUniqueProxyIdentifier:
ungroupCallWithUniqueProxyIdentifier:
playDTMFToneForCallWithUniqueProxyIdentifier:key:
setTTYType:forCallWithUniqueProxyIdentifier:
pushRelayingCallsToHostWithSourceIdentifier:
pullHostedCallsFromPairedHostDevice
sendHardPauseDigitsForCallWithUniqueProxyIdentifier:
updateCallWithProxy:
enteredForegroundForCallWithUniqueProxyIdentifier:
willEnterBackgroundForAllCalls
enteredBackgroundForAllCalls
setRemoteVideoPresentationSizeForCallWithUniqueProxyIdentifier:size:
setRemoteVideoPresentationStateForCallWithUniqueProxyIdentifier:presentationState:
setUplinkMuted:forCallWithUniqueProxyIdentifier:
setDownlinkMuted:forCallWithUniqueProxyIdentifier:
setIsSendingVideo:forCallWithUniqueProxyIdentifier:
shouldSuppressInCallStatusBar:
shouldAllowRingingCallStatusIndicator:
activateInCallUIWithActivityContinuationIdentifier:
requestInitialState:
dialWithRequest:reply:
pullCallFromClientUsingHandoffActivityUserInfo:reply:
reportLocalPreviewStoppedForCallWithUniqueProxyIdentifier:
setClientCapabilities:
localRoutesByUniqueIdentifier:
pairedHostDeviceRoutesByUniqueIdentifier:
pickLocalRouteWithUniqueIdentifier:shouldWaitUntilAvailable:
pickPairedHostDeviceRouteWithUniqueIdentifier:shouldWaitUntilAvailable:
willRestrictAddresses:forBundleIdentifier:reply:
containsRestrictedHandle:forBundleIdentifier:performSynchronously:reply:
shouldRestrictAddresses:forBundleIdentifier:performSynchronously:reply:
filterStatusForAddresses:forBundleIdentifier:reply:
policyForAddresses:forBundleIdentifier:reply:
isUnknownAddress:normalizedAddress:forBundleIdentifier:reply:
updateClientsWithFrequency:inDirection:forCalls:
updateClientsWithMeterLevel:inDirection:forCalls:
resetClientCallProvisionalStates
sendClientsNotificationName:
sendClientsNotificationName:forCall:
_handleFaceTimeAvailabilityChangedNotification:
isTrackingVoIPCallForBundleIdentifier:
audioArbitrationController
setAudioArbitrationController:
carPlayHardwareControlsBroadcaster
clientInvalidationHandler
setClientInvalidationHandler:
setShouldHandleSecureMicrophoneEvents:
_callController
_recentsController
_audioArbitrationController
_localRouteController
_pairedHostDeviceRouteController
_callHistoryManagerXPCServer
_callProviderManagerXPCServer
_relayCallDataSource
_relayCallDelegate
_carPlayHardwareControlsBroadcaster
_carPlayManager
_clientInvalidationHandler
_providerCallDataSource
_shouldHandleSecureMicrophoneEvents
T@"CSDCallHistoryManagerXPCServer",R,N,V_callHistoryManagerXPCServer
T@"CSDCallProviderManagerXPCServer",R,N,V_callProviderManagerXPCServer
T@"CSDRelayCallDataSource",R,N,V_relayCallDataSource
T@"CSDRelayCallDelegate",R,N,V_relayCallDelegate
T@"TUCarPlayHardwareControlsBroadcaster",R,N,V_carPlayHardwareControlsBroadcaster
T@"CSDCarPlayManager",R,N,V_carPlayManager
T@?,C,N,V_clientInvalidationHandler
T@"CSDProviderCallDataSource",R,N,V_providerCallDataSource
T@"NSNumber",&,N,V_shouldHandleSecureMicrophoneEvents
T@"CSDCallProviderManager",R,N,V_callProviderManager
T@"CSDCallController",R,N,V_callController
T@"CSDRecentsController",R,N,V_recentsController
T@"CSDAudioArbitrationController",&,N,V_audioArbitrationController
T@"CSDRouteController",R,N,V_localRouteController
T@"CSDRouteController",R,N,V_pairedHostDeviceRouteController
setOriginatingProcessId:
actionsCount
clearActions
actionsAtIndex:
actionsType
hasOriginatingProcessId
setHasTimedOut:
hasTimedOut
originatingProcessId
timedOut
setActions:
_actions
_originatingProcessId
_timedOut
T@"NSString",&,N,V_originatingProcessId
TB,N,V_timedOut
T@"NSMutableArray",&,N,V_actions
_handleDeviceFirstUnlockNotification
initWithNotifyObserver:queue:
hasBeenUnlocked
hasBeenUnlockedBlock
setHasBeenUnlocked:
_refreshHasBeenUnlocked
notifyObserver
endObserving
firstUnlockCallbacks
isObserving
setHasBeenUnlockedBlock:
setFirstUnlockCallbacks:
setNotifyObserver:
_hasBeenUnlocked
_hasBeenUnlockedBlock
_firstUnlockCallbacks
_notifyObserver
T@"NSMutableArray",&,N,V_firstUnlockCallbacks
TB,N,V_hasBeenUnlocked
T@"<TUNotifyObserver>",&,N,V_notifyObserver
T@?,C,N,V_hasBeenUnlockedBlock
setPersonNameComponents:
T@"TUCallDisplayContext",R,N
initWithBundleIDs:states:
setApplicationState:forBundleIdentifier:
applicationStateForBundleIdentifier:
bundleIdentifierToApplicationState
arrayByAddingObject:
applicationStateMonitor
updateInterestedBundleIDs:states:
fetchApplicationStateForBundleIdentifier:
applicationStateForApplication:
isRunningForVoIPApplication:
isRunningForegroundForVoIPApplication:
addVoIPApplication:
removeVoIPApplication:
_bundleIdentifierToApplicationState
_applicationStateMonitor
T@"NSMutableDictionary",R,N,V_bundleIdentifierToApplicationState
T@"BKSApplicationStateMonitor",R,N,V_applicationStateMonitor
bundleIdentifierToVoIPApplication
setNetworkExtensionClientManager:
interfaceWithProtocol:
networkExtensionClientManager
registerVoIPNetworkExtension
unregisterVoIPNetworkExtension
setPushKitClientManager:
pushKitClientManager
voipRegister
voipUnregister
_apsConnectionForEnvironment:
_removeAllApplicationsFromKillCountsDictionary
removeOutstandingMessagesForBundleIdentifier:
_findOrCreateApplicationWithBundleIdentifier:
_removeApplicationFromKillCountsDictionary:
_unregisterPushKitApplication:inEnvironment:
developmentConnection
productionConnection
removeFromRunLoop
_registerNetworkExtensionApplicationWithBundleIdentifier:client:
_unregisterNetworkExtensionApplication:
_registerPushKitApplicationWithBundleIdentifier:client:environment:
topicFromBundleId:
requestTokenForTopic:identifier:
bundleIdFromTopic:
voipAppFailedToPostIncomingCall:
voipAppBecameDisabledFromLaunching:
topic
initWithTransportType:payload:
openApplicationWithBundleIdentifier:message:
applicationMonitor
_createAPSConnectionForEnvironment:namedDelegatePort:
initWithEnvironmentName:namedDelegatePort:queue:
enabledTopics
_setEnabledTopics:
_removeTopic:fromConnection:
invalidateTokenForTopic:identifier:
outstandingMessages
_isApplicationPreventedFromBeingLaunched:
voipPushDroppedOnTheFloor:
_appHasOngoingCall:
containsAnyOutstandingMessageForBundleIdentifier:
addOutstandingMessage:forBundleIdentifier:
acquire
containsOutstandingMessage:forBundleIdentifier:
identityForEmbeddedApplicationIdentifier:
predicateMatchingIdentity:
setReportType:
setExceptionDomain:
setExceptionCode:
initWithPredicate:context:
execute:
_incrementKillCountForApplication:
cx_errorWithCode:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
networkExtensionMessageControllerHost:didReceiveIncomingMessage:forBundleIdentifier:
notificationServiceExtensionHost:didReceiveIncomingMessage:forBundleIdentifier:reply:
noteReportedNewIncomingVoIPCallForBundleIdentifier:
setProductionConnection:
setDevelopmentConnection:
networkExtensionMessageHost
nseMessageHost
setBundleIdentifierToVoIPApplication:
_networkExtensionClientManager
_pushKitClientManager
_productionConnection
_developmentConnection
_networkExtensionMessageHost
_nseMessageHost
_bundleIdentifierToVoIPApplication
_applicationMonitor
_outstandingMessages
T@"CSDClientManager",&,N,V_networkExtensionClientManager
T@"CSDClientManager",&,N,V_pushKitClientManager
T@"APSConnection",&,N,V_productionConnection
T@"APSConnection",&,N,V_developmentConnection
T@"CXNetworkExtensionMessageControllerHost",R,N,V_networkExtensionMessageHost
T@"CXNotificationServiceExtensionVoIPXPCHost",R,N,V_nseMessageHost
T@"NSMutableDictionary",&,N,V_bundleIdentifierToVoIPApplication
T@"CSDVoIPApplicationMonitor",R,N,V_applicationMonitor
T@"NSMutableDictionary",R,N,V_outstandingMessages
T@"CSDCallStateController",W,N,V_callStateController
streamToken
avcIdentifier
initWithIdentifier:handle:
audioPriority
videoPriority
setAvcIdentifier:
activeIDSDestination
isEqualToParticipant:
initWithIDSDictionaryRepresentation:
idsDictionaryRepresentation
_audioEnabled
_streamToken
_audioPriority
_videoPriority
_avcIdentifier
_activeIDSDestination
TQ,R,N,V_identifier
T@"TUHandle",R,C,N,V_handle
T@"NSData",R,C,N,V_avcData
TB,N,GisAudioEnabled,V_audioEnabled
Tq,N,V_streamToken
Tq,N,V_audioPriority
Tq,N,V_videoPriority
T@"NSString",C,N,V_avcIdentifier
T@"NSString",C,N,V_activeIDSDestination
T@"TUConversationParticipant",R,C,N
dataSourceToIdentifierToCalls
setDataSourceToIdentifierToCalls:
_dataSourceToIdentifierToCalls
T@"NSMapTable",&,N,V_dataSourceToIdentifierToCalls
sandboxExtensionHandle
setSandboxExtensionHandle:
iconTemplateImageData
setIconTemplateImageData:
supportsVideo
includesCallsInRecents
setAudioSessionID:
supportedTUHandleTypes
setSupportsCurrentPlatform:
initWithCallSource:configuration:
identifiersWithPendingCoalescingBlocks
blockToExecuteAfterPendingCoalescingBlocksByIdentifier
performBlock:coalescedByIdentifier:
processInfo
mainBundle
processHandle
identifierWithPid:
handleForIdentifier:error:
setProcessHandle:
currentState
taskState
performBlock:
setObject:
setIdentifiersWithPendingCoalescingBlocks:
setBlockToExecuteAfterPendingCoalescingBlocksByIdentifier:
_object
_identifiersWithPendingCoalescingBlocks
_blockToExecuteAfterPendingCoalescingBlocksByIdentifier
_processHandle
T@,&,N,V_object
T@"NSMutableSet",&,N,V_identifiersWithPendingCoalescingBlocks
T@"NSMutableDictionary",&,N,V_blockToExecuteAfterPendingCoalescingBlocksByIdentifier
T@"RBSProcessHandle",&,N,V_processHandle
T@,R,N
remote
TB,R,N,GisRemote
T@"TUCallServicesClientCapabilities",&,N,V_capabilities
processSuspended
TB,R,N,GisProcessSuspended
accountDescription
shortLabel
initWithUUID:accountUUID:localizedName:localizedShortName:handle:
T@"TUSenderIdentity",R,N
conversationManagerClientXPCInterface
conversationManagerServerXPCInterface
notifyClientsToConnectIfNecessary
updateConversationsByGroupUUID:
mediaPrioritiesChangedForConversation:
updateConversationWithUUID:participantPresentationContexts:
conversationsByGroupUUID:
setDownlinkMuted:forRemoteParticipantsInConversationWithUUID:
clientsShouldConnectToken
setClientsShouldConnectToken:
_clientsShouldConnectToken
Ti,N,V_clientsShouldConnectToken
initWithDataSource:serialQueue:
retrieveSavedProvidersByIdentifier
localProvidersByIdentifier
registeredLocalProvidersByIdentifier
addEntriesFromDictionary:
pairedHostDeviceProvidersByIdentifier
registeredPairedHostDeviceProvidersByIdentifier
_unregisterUninstalledProvidersAndNotify:
_updateProvidersByIdentifierAndNotify:
isRelayCallingGuaranteed
setProvidersByIdentifier:
isProviderInstalled:
setRegisteredLocalProvidersByIdentifier:
userIntentManager
donateUserIntentForCallProviderIdentifier:
providersByIdentifier
_providersByIdentifierByFilteringForRemoteClientsFromProvidersByIdentifier:
uniqueRingtoneSoundLinkFilenameWithOriginalFilename:
isSymbolicLinkAtURL:
createLinkIfNecessaryWithFilename:toURL:
removeLinksForFilenamesNotInArray:
setRegisteredPairedHostDeviceProvidersByIdentifier:
_donateUserIntentForProviderWithIdentifier:
validateUserIntentForCallSource:
providerIdentifiersForExistingCalls
isDevicePasscodeLocked
dialAssistedDialRequestForDialRequest:
appShouldUseDeprecatedCallingIntents:
userActivityUsingDeprecatedCallingIntents:
openUserActivity:usingApplicationWithBundleIdentifier:options:completion:
compatibilityObject
plugInKitPlugins
relayCallingStateChangedForDataSource:
installedProvidersChangedForDataSource:
registerLocalProvider:
_userIntentManager
_localProvidersByIdentifier
_pairedHostDeviceProvidersByIdentifier
_providersByIdentifier
T@"<CSDCallProviderManagerDataSource>",R,N,V_dataSource
T@"NSMutableDictionary",R,N,V_localProvidersByIdentifier
T@"NSMutableDictionary",R,N,V_pairedHostDeviceProvidersByIdentifier
T@"NSDictionary",C,N,V_providersByIdentifier
T@"CSDUserIntentManager",R,N,V_userIntentManager
handleFailureInFunction:file:lineNumber:description:
initWithQueue:conversationManager:networkSupport:serverBag:
callUUIDsByConversationUUID
conversationUUIDsByCallUUID
_isWaitingToJoinForConversationUUID:
conversationUUIDsWaitingToJoin
conversationUUIDsAwaitingActiveAudioSession
startAudioForConversationsIfNecessary
usesAudioSession
isAudioSessionActive
cleanUpConversationIfNecessaryForConversationUUID:failureContext:
setCallUUID:forConversationUUID:
setConversationUUID:forCallUUID:
setWaitingToJoin:forConversationUUID:
pendingTransactions
cleanupConversationWithCallUUID:
handleInvitationMessage:forConversation:fromHandle:
handleUpgradeMessage:forConversation:fromHandle:withUpdate:
handleRespondedElsewhereMessage:forConversation:fromHandle:
handleDebugLinkCreatedMessage:forConversation:fromHandle:withUpdate:
isAutomaticUpgradingEnabled
participantUpdateSubtype
handles
declineCallWithGroupUUID:onOtherDevicesWithReason:
reportNewIncomingCallForConversation:fromHandle:
allAliases
handleRespondedElsewhereMessage:forConversation:fromHandle:withAliases:
networkSupport
validNetworkReachable
activeRemoteParticipantCXHandles
setActiveRemoteParticipantHandles:
fullfillPendingJoinActionsForCallUUIDIfNecessary:
handleMessage:forConversation:fromHandle:withUpdate:
enqueueConversationWaitingForAudioWithConversationUUID:
hasActiveAudioSession
setAudioSessionActive:
callUUIDForConversationUUID:
conversationUUIDForCallUUID:
isWaitingToJoinForConversationUUID:
_audioSessionActive
_callUUIDsByConversationUUID
_conversationUUIDsByCallUUID
_conversationUUIDsWaitingToJoin
_networkSupport
_conversationUUIDsAwaitingActiveAudioSession
T@"NSMutableDictionary",R,N,V_callUUIDsByConversationUUID
T@"NSMutableDictionary",R,N,V_conversationUUIDsByCallUUID
T@"NSMutableSet",R,N,V_conversationUUIDsWaitingToJoin
T@"FTNetworkSupport",R,N,V_networkSupport
audioSessionActive
TB,N,GisAudioSessionActive,V_audioSessionActive
T@"NSMutableSet",R,N,V_conversationUUIDsAwaitingActiveAudioSession
T@"<CSDConversationServerBag>",R,N,V_serverBag
initWithPriority:
setDetectingRaiseToAnswer:
incomingCall
answerCall:
isGestureServiceAvailable
isRaiseToEarGestureSupported
raiseToEarGestureManager
gestureHandler
raiseToEarGestureHandler
setGestureHandler:
isRaiseToEarGestureEnabled
updateDetectingRaiseToAnswer
isDetectingRaiseToAnswer
setRaiseToEarGestureManager:
_raiseToEarGestureManager
_raiseToEarGestureHandler
T@"CMGestureManager",&,N,V_raiseToEarGestureManager
T@?,R,C,N,V_raiseToEarGestureHandler
detectingRaiseToAnswer
TB,N,GisDetectingRaiseToAnswer
handlesWithTUHandles:
_conferenceTransport:didStopForCall:cleanly:error:
isEqualToTransport:
_launchInCallApplicationForOutgoingCallOnHostIfNecessary
dialWithRequest:completion:
anyCallIsEndpointOnCurrentDevice
setPauseVideoToStart:
_answerHostedCall:completionHandler:
groupCall:withOtherCall:
ungroupCall:
endActiveAndAnswerCall:
endHeldAndAnswerCall:
holdActiveAndAnswerCall:
_userActivityTypeStringForActivityType:
_initWithTypeIdentifier:suggestedActionType:options:
_setContentType:
setExpirationDate:
setEligibleForSearch:
setEligibleForPublicIndexing:
setEligibleForHandoff:
_setSubtitle:
_setContentUserAction:
setKeywords:
setUserActivity:
setUserInfo:
_initWithUserActivityType:dynamicActivityType:options:
setDynamicIdentifier:
_registerUserActivityType:dynamicActivityType:
_unregisterUserActivityType:dynamicActivityType:
_userActivity
_dynamicIdentifier
T@"NSUserActivity",&,N,V_userActivity
T@"NSString",&,N,V_dynamicIdentifier
handleApplicationUnregisteredNotification:
relayCallingAvailability
defaultProviders
_providersForPreferenceKey:
_saveProviders:forPreferenceKey:
openUserActivity:withApplicationProxy:options:completionHandler:
attributesOfItemAtPath:error:
ringtonesSandboxExtensionDirectory
applicationState
isInstalled
setProviderIdentifiersForExistingCalls:
T@"<CSDCallProviderManagerDataSourceDelegate>",W,N
relayCallingGuaranteed
TB,R,N,GisRelayCallingGuaranteed
devicePasscodeLocked
TB,R,N,GisDevicePasscodeLocked
_ringtonesSandboxExtensionDirectory
_providerIdentifiersForExistingCalls
T@"CSDSandboxExtensionDirectory",R,N,V_ringtonesSandboxExtensionDirectory
T@"CSDCallCenterObserver",R,N,V_callCenterObserver
T@"NSSet",C,N,V_providerIdentifiersForExistingCalls
T@"<CSDCallProviderManagerDataSourceDelegate>",W,N,V_delegate
requestTimeoutBlockByTransactionID
requestStartDateByTransactionID
reportDataCollectionCompleteIfNecessary
photoRequestDurations
setHasCleanedUp:
hasCleanedUp
fuzzyPhotoRequestSuccessCount
fuzzyPhotoRequestFailureCount
initWithAvailability:photoRequestSuccessCount:photoRequestFailureCount:medianRequestDuration:meanRequestDuration:
momentsReportingSession:didGenerateUsageReport:
bucketedInteger:
medianFromNumbers:
meanFromDoubleNumbers:
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
initWithStreamToken:
registeredStreamWithAvailability:
didStartRequestWithTransactionID:
didReceiveResultsWithTransactionID:
didCleanUp
_hasCleanedUp
_requestTimeoutBlockByTransactionID
_requestStartDateByTransactionID
_photoRequestDurations
TQ,N,V_photoRequestSuccessCount
TQ,N,V_photoRequestFailureCount
TB,N,V_hasCleanedUp
T@"NSMutableDictionary",R,N,V_requestTimeoutBlockByTransactionID
T@"NSMutableDictionary",R,N,V_requestStartDateByTransactionID
T@"NSMutableArray",R,N,V_photoRequestDurations
T@"<CSDMomentsReportingSessionDelegate>",W,N,V_delegate
Tq,R,N,V_streamToken
shouldTraceSingposts
defaultConfiguration
initWithTransportToken:configuration:delegate:queue:
initWithSessionCreationBlock:transportToken:delegate:queue:reportingHierarchyToken:
negotiationData
isAudioMuted
setAudioMuted:
setSessionMode:
updateConfiguration:
remoteParticipantsByIdentifier
initWithParticipantID:data:delegate:queue:
addParticipant:
pendingRemovedParticipantsByID
setVideoQuality:
setVisibilityIndex:
setProminenceIndex:
beginParticipantConfiguration
endParticipantConfiguration
setHasCalledStop:
hasCalledStop
participantID
videoToken
participant:audioEnabled:didSucceed:error:
participant:videoEnabled:didSucceed:error:
participant:remoteAudioEnabledDidChange:
participant:remoteVideoEnabledDidChange:
participant:audioPaused:didSucceed:error:
participant:videoPaused:didSucceed:error:
participant:remoteAudioPausedDidChange:
participant:remoteVideoPausedDidChange:
participant:mediaPrioritiesDidChange:
participant:spatialAudioSourceIDDidChange:
sessionServerDidDisconnect:
session:addParticipant:didSucceed:error:
session:removeParticipant:didSucceed:error:
session:didUpdate:configuration:error:
session:audioEnabled:didSucceed:error:
session:videoEnabled:didSucceed:error:
session:audioPaused:didSucceed:error:
session:videoPaused:didSucceed:error:
session:frequencyLevelsDidChange:
session:mediaPrioritiesDidChange:
setAudioEnabled:forParticipantWithIdentifier:
setVideoEnabled:forParticipantWithIdentifier:
T@"NSData",R,C,N
TB,N,GisAudioReady
T@"AVCSessionConfiguration",R,N
_audioReady
_hasCalledStop
_remoteParticipantsByIdentifier
_pendingRemovedParticipantsByID
T@"AVCSession",R,N,V_session
T@"<CSDAVCSessionDelegate>",R,W,N,V_delegate
T@"NSMutableDictionary",R,N,V_remoteParticipantsByIdentifier
T@"NSMutableDictionary",R,N,V_pendingRemovedParticipantsByID
TB,N,V_hasCalledStop
TB,N,GisAudioReady,V_audioReady
initWithSessionProvider:isInitiator:remoteFromID:remoteProtocolVersion:
receivedInvitationAccept
setReceivedInvitationAccept:
setRemoteFromID:
_receivedInvitationAccept
_remoteFromID
T@"NSString",C,N,V_remoteFromID
TB,N,V_receivedInvitationAccept
title
hasCellularSettingsRemediation
hasWiFiSettingsRemediation
hasDateAndTimeSettingsRemediation
hasLocationSettingsRemediation
didPrepareHandler
didStartHandler
setReceivedSuccessfulDidStart:
didStopHandler
receivedSuccessfulDidStart
_host
_usingBaseband
_audioDisabled
_receivedSuccessfulDidStart
_preparedToStop
_transport
_didPrepareHandler
_didStartHandler
_didStopHandler
TB,N,V_receivedSuccessfulDidStart
T@"NSString",C,N,V_identifier
T@"CSDIDSTransport",&,N,V_transport
TB,N,GisHost,V_host
usingBaseband
TB,N,GisUsingBaseband,V_usingBaseband
audioDisabled
TB,N,GisAudioDisabled,V_audioDisabled
T@"VCCapabilities",R,C,N
preparedToStop
TB,N,GisPreparedToStop,V_preparedToStop
T@?,C,N,V_didPrepareHandler
T@?,C,N,V_didStartHandler
T@?,C,N,V_didStopHandler
initWithQueue:shouldRegisterForECBMNotification:
initWithQueue:coreTelephonyClient:emergencyCallbackCapabilities:
setEmergencyCallbackCapabilitiesDidChange:
emergencyCallbackCapabilities
localThumperDeviceID
emergencyCallbackPossible
_subscriptionWithUUID:
coreTelephonyClient
setSubscription:capability:enabled:info:
subscriptions
lastSavedAccountIDByCapability
associatedThumperAccountID
setCapability:enabled:info:
addSecondaryThumperDeviceWithIDSDeviceIdentifier:toSubscription:
removeSecondaryThumperDeviceWithIDSDeviceIdentifier:fromSubscription:
invalidateProvisioningURL
recheckAccountStatusForSubscription:capability:
labelID
csCallingCapabilitiesState
setCurrentlyAvailable:
setEmergencySupported:
setEmergencyCurrentlyAvailable:
initWithCapabilityInfo:
setVoLTECallingCapabilitiesState:
setWiFiCallingCapabilitiesState:
setAssociated:
telephonySubscriptions
preferredVoiceSubscriptionUUID
setSupportsDefaultPairedDevice:
setThumperCallingCapabilitiesState:
_updateSystemCapabilitiesStateForSubscription:capabilitiesState:
_updateCallCapabilitiesForSubscription:capabilitiesState:
_updateThumperAccountState
_updateSubscriptions
_senderIdentityCapabilitiesStateForSubscription:
initWithSenderIdentityUUID:
setApprovedSecondaryDeviceIDs:
setLocalDeviceID:
setByAddingObjectsFromSet:
setSubscriptions:
_updateEmergencyCallbackModeEnabledState
callCapabilitiesForSubscription:
setCallCapabilities:forSenderIdentityCapabilitiesState:
capabilityInfoForSubscription:capability:
setCapabilityInfo:forSubscription:senderIdentityCapabilitiesState:
systemCapabilitiesForSubscription:
thumperDeviceInfo
setCapabilitiesValid:
uppercaseString
setLocalThumperDeviceID:
setLocalThumperAccounts:
setSecondaryThumperAccounts:
setAssociatedThumperAccountID:
shouldUpdateSubscriptions
isEqualToArray:
subscriptionsDidChangeForClient:
client:subscription:callCapabilitiesDidChange:
client:capabilitiesDidChange:
client:subscription:capabilitiesDidChange:
emergencyCallbackModeDidChangeForAllSubscriptionsForClient:
invalidateAndRefreshVoLTECallingCapabilitiesForSenderIdentityWithUUID:
secondaryThumperAccountForRegisteredDeviceID:
_capabilitiesValid
_emergencyCallbackModeEnabled
_secondaryThumperAccounts
_senderIdentityCapabilitiesStateByUUID
_localThumperDeviceID
_subscriptions
_lastSavedAccountIDByCapability
_coreTelephonyClient
_emergencyCallbackCapabilities
_localThumperAccounts
capabilitiesValid
TB,N,GareCapabilitiesValid,V_capabilitiesValid
T@"NSSet",C,N,V_subscriptions
T@"NSDictionary",C,N,V_senderIdentityCapabilitiesStateByUUID
T@"NSMutableDictionary",R,N,V_lastSavedAccountIDByCapability
T@"CSDCoreTelephonyClient",R,N,V_coreTelephonyClient
T@"<CSDEmergencyCallbackCapabilities>",R,N,V_emergencyCallbackCapabilities
T@"NSString",C,N
T@"NSString",C,N,V_localThumperDeviceID
T@"NSArray",C,N,V_localThumperAccounts
T@"NSArray",C,N,V_secondaryThumperAccounts
emergencyCallbackModeEnabled
TB,N,GisEmergencyCallbackModeEnabled,V_emergencyCallbackModeEnabled
T@"<CSDTelephonyCallCapabilitiesDelegate>",W,N,V_delegate
TB,R,N,GisEmergencyCallbackPossible
setUniqueIdentifier:
hasUniqueIdentifier
setDeviceType:
setHasDeviceType:
hasDeviceType
deviceTypeAsString:
StringAsDeviceType:
setProtoCurrentlyPicked:
setHasProtoCurrentlyPicked:
hasProtoCurrentlyPicked
setProtoGuest:
setHasProtoGuest:
hasProtoGuest
setProtoSupportsRelay:
setHasProtoSupportsRelay:
hasProtoSupportsRelay
protoCurrentlyPicked
protoGuest
protoSupportsRelay
_deviceType
_uniqueIdentifier
_protoCurrentlyPicked
_protoGuest
_protoSupportsRelay
T@"NSString",&,N,V_uniqueIdentifier
Ti,N,V_deviceType
TB,N,V_protoCurrentlyPicked
TB,N,V_protoGuest
TB,N,V_protoSupportsRelay
dtmfSoundPlayer
attemptToPlayKey:
_setAllCallsToHeldExceptCall:
_dtmfSoundPlayer
T@"TUDTMFSoundPlayer",R,N,V_dtmfSoundPlayer
activeParticipantsCount
clearActiveParticipants
activeParticipantsAtIndex:
addedMembersCount
clearAddedMembers
addedMembersAtIndex:
activeParticipantsType
addedMembersType
setHasShouldSuppressInCallUI:
hasShouldSuppressInCallUI
setHasDisconnectedReason:
hasDisconnectedReason
setActiveParticipants:
setAddedMembers:
_activeParticipants
_addedMembers
_conversationGroupUUIDString
_disconnectedReason
T@"NSMutableArray",&,N,V_activeParticipants
T@"NSString",&,N,V_conversationGroupUUIDString
T@"NSMutableArray",&,N,V_addedMembers
TI,N,V_disconnectedReason
setTURouteDeviceType:
isCurrentlyPicked
setCurrentlyPicked:
setGuest:
setSupportsRelay:
initWithUniqueIdentifier:name:
tuRouteDeviceType
Tq,N,SsetTURouteDeviceType:
currentlyPicked
TB,N,GisCurrentlyPicked
guest
TB,N,GisGuest
addCalls:
callsCount
clearCalls
callsAtIndex:
callsType
_calls
T@"NSMutableArray",&,N,V_calls
imDaemonDidConnect:
connectToDaemon
initWithService:account:accessGroup:
_initializeLastKnownCallerID
faceTimeIMAccount
hasAlias:
addAlias:
validationStatusForAlias:
validationErrorReasonForAlias:
setDisplayName:
displayNameChanged:
preferredAccountChanged:
keychainItem
readPasswordAndReturnError:
_saveLastKnownFaceTimeCallerID
removeCallerIDFromPreferences
savePassword:error:
T@"CSDFaceTimeIMAccount",R,N
updateCallerID:
_keychainItem
T@"CSDKeychainPasswordItem",R,N,V_keychainItem
mockCallFromBlock:
updateWithCall:
setMockBackingProvider:
setMockDisplayProvider:
setMockHandle:
setMockCallStatus:
setMockUniqueProxyIdentifier:
setMockCallUUID:
setMockHostedOnCurrentDevice:
setMockCallerNameFromNetwork:
setMockUsingBaseband:
setMockVoicemail:
setMockContactIdentifiers:
setMockNeedsManualInCallSounds:
setMockPrefersExclusiveAccessToCellularNetwork:
setMockTTYType:
setMockSupportsTTYWithVoice:
setMockIsThirdPartyVideo:
setMockVideoStreamToken:
setMockDateConnected:
hostOnCurrentDevice
setMockEndpointOnCurrentDevice:
mockCall
setMockService:
setMockIsVideo:
setMockIsVideoPaused:
setMockBlocked:
setMockCallDuration:
setMockEmergency:
setMockOutgoing:
setMockConferenced:
setMockDisconnectedReason:
setMockLocalizedLabel:
setMockCompanyName:
setMockBytesOfDataUsed:
subtype
setMockSubtype:
setMockAudioCategory:
setMockAudioMode:
setMockCallGroupUUID:
setMockProviderContext:
setMockProviderErrorCode:
setMockDisplayContext:
setMockHasStartedOutgoing:
setMockHasSentInvitation:
setMockConnecting:
setMockConnected:
setMockUplinkWasExplicitlyMuted:
setMockMayRequireBreakBeforeMake:
setMockAudioInterruptionProviderType:
setMockDisplayName:
setMockDateCreated:
setMockProviderProcessIdentifier:
audioInterruptionActivationStateObserver
setMockAudioInterruptionActivationStateObserver:
setMockBackingCallSource:
setMockInitialLinkType:
setMockCallRelaySupport:
setMockShouldSuppressInCallUI:
setMockJunkConfidence:
setMockKnownCaller:
_mockIsVideo
_mockIsVideoPaused
_mockHostedOnCurrentDevice
_mockEndpointOnCurrentDevice
_mockBlocked
_mockVoicemail
_mockEmergency
_mockSOS
_mockOutgoing
_mockConferenced
_mockUsingBaseband
_mockSupportsTTYWithVoice
_mockNeedsManualInCallSounds
_mockHasStartedOutgoing
_mockHasSentInvitation
_mockConnecting
_mockConnected
_mockUplinkMuted
_mockUplinkWasExplicitlyMuted
_mockMayRequireBreakBeforeMake
_mockPrefersExclusiveAccessToCellularNetwork
_mockIsThirdPartyVideo
_mockShouldSuppressInCallUI
_mockKnownCaller
_mockService
_mockCallStatus
_mockTTYType
_mockDisconnectedReason
_mockSubtype
_mockProviderProcessIdentifier
_mockCallRelaySupport
_mockUniqueProxyIdentifier
_mockCallDuration
_mockHandle
_mockLocalizedLabel
_mockCompanyName
_mockCallUUID
_mockCallerNameFromNetwork
_mockBytesOfDataUsed
_mockAudioCategory
_mockAudioMode
_mockCallGroupUUID
_mockBackingProvider
_mockDisplayProvider
_mockProviderContext
_mockProviderErrorCode
_mockDisplayContext
_mockVideoStreamToken
_mockAudioInterruptionProviderType
_mockDisplayName
_mockContactIdentifiers
_mockDateCreated
_mockDateConnected
_mockAudioInterruptionActivationStateObserver
_mockBackingCallSource
_mockInitialLinkType
_mockJunkConfidence
mockService
Ti,N,Gservice,V_mockService
mockCallStatus
Ti,N,GcallStatus,V_mockCallStatus
mockUniqueProxyIdentifier
T@"NSString",C,N,GuniqueProxyIdentifier,V_mockUniqueProxyIdentifier
mockIsVideo
TB,N,GisVideo,V_mockIsVideo
mockIsVideoPaused
TB,N,GisVideoPaused,V_mockIsVideoPaused
mockHostedOnCurrentDevice
TB,N,GisHostedOnCurrentDevice,V_mockHostedOnCurrentDevice
mockEndpointOnCurrentDevice
TB,N,GisEndpointOnCurrentDevice,V_mockEndpointOnCurrentDevice
mockBlocked
TB,N,GisBlocked,V_mockBlocked
mockVoicemail
TB,N,GisVoicemail,V_mockVoicemail
mockCallDuration
Td,N,GcallDuration,V_mockCallDuration
mockEmergency
TB,N,GisEmergency,V_mockEmergency
mockSOS
TB,N,GisSOS,SsetSOS:,V_mockSOS
mockOutgoing
TB,N,GisOutgoing,V_mockOutgoing
mockConferenced
TB,N,GisConferenced,V_mockConferenced
mockUsingBaseband
TB,N,GisUsingBaseband,V_mockUsingBaseband
mockTTYType
Ti,N,GttyType,V_mockTTYType
mockSupportsTTYWithVoice
TB,N,GsupportsTTYWithVoice,V_mockSupportsTTYWithVoice
mockDisconnectedReason
Ti,N,GdisconnectedReason,V_mockDisconnectedReason
mockHandle
T@"TUHandle",&,N,Ghandle,V_mockHandle
mockLocalizedLabel
T@"NSString",C,N,GlocalizedLabel,V_mockLocalizedLabel
mockCompanyName
T@"NSString",C,N,GcompanyName,V_mockCompanyName
mockCallUUID
T@"NSString",C,N,GcallUUID,V_mockCallUUID
mockCallerNameFromNetwork
T@"NSString",C,N,GcallerNameFromNetwork,V_mockCallerNameFromNetwork
mockBytesOfDataUsed
Tq,N,GbytesOfDataUsed,V_mockBytesOfDataUsed
mockSubtype
Ti,N,Gsubtype,V_mockSubtype
mockNeedsManualInCallSounds
TB,N,GneedsManualInCallSounds,V_mockNeedsManualInCallSounds
mockAudioCategory
T@"NSString",C,N,GaudioCategory,V_mockAudioCategory
mockAudioMode
T@"NSString",C,N,GaudioMode,V_mockAudioMode
mockCallGroupUUID
T@"NSUUID",C,N,GcallGroupUUID,V_mockCallGroupUUID
mockBackingProvider
T@"TUCallProvider",C,N,GbackingProvider,V_mockBackingProvider
mockDisplayProvider
T@"TUCallProvider",C,N,GdisplayProvider,V_mockDisplayProvider
mockProviderContext
T@"NSDictionary",C,N,GproviderContext,V_mockProviderContext
mockProviderErrorCode
Tq,N,GproviderErrorCode,V_mockProviderErrorCode
mockDisplayContext
T@"TUCallDisplayContext",C,N,GdisplayContext,V_mockDisplayContext
mockHasStartedOutgoing
TB,N,GhasStartedOutgoing,V_mockHasStartedOutgoing
mockHasSentInvitation
TB,N,GhasSentInvitation,V_mockHasSentInvitation
mockConnecting
TB,N,GisConnecting,V_mockConnecting
mockConnected
TB,N,GisConnected,V_mockConnected
mockUplinkMuted
TB,N,GisUplinkMuted,SsetUplinkMuted:,V_mockUplinkMuted
mockUplinkWasExplicitlyMuted
TB,N,GuplinkWasExplicitlyMuted,V_mockUplinkWasExplicitlyMuted
mockVideoStreamToken
Tq,N,GvideoStreamToken,V_mockVideoStreamToken
mockMayRequireBreakBeforeMake
TB,N,GmayRequireBreakBeforeMake,V_mockMayRequireBreakBeforeMake
mockAudioInterruptionProviderType
Tq,N,GaudioInterruptionProviderType,V_mockAudioInterruptionProviderType
mockDisplayName
T@"NSString",C,N,GdisplayName,V_mockDisplayName
mockPrefersExclusiveAccessToCellularNetwork
TB,N,GprefersExclusiveAccessToCellularNetwork,V_mockPrefersExclusiveAccessToCellularNetwork
mockContactIdentifiers
T@"NSArray",C,N,GcontactIdentifiers,V_mockContactIdentifiers
mockDateCreated
T@"NSDate",&,N,GdateCreated,V_mockDateCreated
mockDateConnected
T@"NSDate",&,N,GdateConnected,V_mockDateConnected
mockProviderProcessIdentifier
Ti,N,GproviderProcessIdentifier,V_mockProviderProcessIdentifier
mockAudioInterruptionActivationStateObserver
T@"<CXAudioSessionActivationStateObserver>",&,N,GaudioInterruptionActivationStateObserver,V_mockAudioInterruptionActivationStateObserver
mockBackingCallSource
T@"CXCallSource",&,N,GbackingCallSource,V_mockBackingCallSource
mockIsThirdPartyVideo
TB,N,GisThirdPartyVideo,V_mockIsThirdPartyVideo
mockInitialLinkType
TQ,N,GinitialLinkType,V_mockInitialLinkType
mockCallRelaySupport
Ti,N,GcallRelaySupport,V_mockCallRelaySupport
mockShouldSuppressInCallUI
TB,N,GshouldSuppressInCallUI,V_mockShouldSuppressInCallUI
mockJunkConfidence
Tq,N,GjunkConfidence,V_mockJunkConfidence
mockKnownCaller
TB,N,GisKnownCaller,V_mockKnownCaller
initWithObjectsAndKeys:
ctEmergencyCallbackModeStatusChangedWithUserInfo:
getActiveContexts:
_isNSErrorFatal:
activeContexts
voicePreferred
_isCTErrorFatal:
getPhoneServicesDeviceInfo:
getCallCapabilities:error:
context:getCapability:status:with:
context:getSystemCapabilities:
setLegacyCapability:enabled:capabilityInformation:
context:setCapability:enabled:with:
context:addPhoneServicesDevice:withCompletion:
context:removePhoneServicesDevice:withCompletion:
context:recheckPhoneServicesAccountStatus:
mobileCountryCodeForSubscription:error:
mobileNetworkCodeForSubscription:error:
ISOCountryCodeForMobileCountryCode:mobileNetworkCode:
mobileCodesToISOCountryCode
copyMobileCountryCode:error:
copyMobileNetworkCode:error:
domain
setActiveContexts:
subscriptionInfoDidChange
activeSubscriptionsDidChange
simLessSubscriptionsDidChange
dualSimCapabilityDidChange
context:capabilitiesChanged:
phoneServicesCapabilitiesChanged:
ISOCountryCodeForSubscriptionUUID:
T@"<CSDCoreTelephonyClientDelegate>",W,N
TB,R,N,GisEmergencyCallbackModeEnabled
T@"NSUUID",R,C,N
legacySystemCapabilities
legacyAddSecondaryThumperDeviceWithIDSDeviceIdentifier:
legacyRemoveSecondaryThumperDeviceWithIDSDeviceIdentifier:
legacyRecheckAccountStatusForCapability:
callCapabilitiesChanged:capabilities:
_activeContexts
_mobileCodesToISOCountryCode
T@"CoreTelephonyClient",R,N,V_client
T@"CTXPCContexts",C,N,V_activeContexts
T@"NSMutableDictionary",R,N,V_mobileCodesToISOCountryCode
T@"<CSDCoreTelephonyClientDelegate>",W,N,V_delegate
setHasAmbiguityState:
hasAmbiguityState
setHasSwappable:
hasSwappable
setHasMergeable:
hasMergeable
setHasHoldAllowed:
hasHoldAllowed
setHasAddCallAllowed:
hasAddCallAllowed
setHasTakingCallsPrivateAllowed:
hasTakingCallsPrivateAllowed
setHasHardPauseAvailable:
hasHardPauseAvailable
setHasEndAndAnswerAllowed:
hasEndAndAnswerAllowed
setHasHoldAndAnswerAllowed:
hasHoldAndAnswerAllowed
setHasSendToVoicemailAllowed:
hasSendToVoicemailAllowed
swappable
hardPauseAvailable
endAndAnswerAllowed
holdAndAnswerAllowed
_ambiguityState
_addCallAllowed
_endAndAnswerAllowed
_hardPauseAvailable
_holdAllowed
_holdAndAnswerAllowed
_mergeable
_sendToVoicemailAllowed
_swappable
_takingCallsPrivateAllowed
TI,N,V_ambiguityState
TB,N,V_swappable
TB,N,V_mergeable
TB,N,V_holdAllowed
TB,N,V_addCallAllowed
TB,N,V_takingCallsPrivateAllowed
TB,N,V_hardPauseAvailable
TB,N,V_endAndAnswerAllowed
TB,N,V_holdAndAnswerAllowed
TB,N,V_sendToVoicemailAllowed
setAccountUUID:
localizedShortName
setLocalizedShortName:
protoUUID
setProtoUUID:
accountUUIDString
setAccountUUIDString:
hasProtoUUID
hasLocalizedShortName
hasAccountUUIDString
_accountUUIDString
_localizedShortName
_protoUUID
T@"NSString",&,N,V_protoUUID
T@"NSString",&,N,V_localizedShortName
T@"NSString",&,N,V_accountUUIDString
initWithQueue:block:
stringRepresentationForTUCallDisconnectedReason:
stringForSignatureType:
stringForIDSSessionEndedReason:
stringForIMAVChatEndedReason:
reportingControllerServerXPCInterface
reporters
currentAudioAndVideoCallCount
reportingSessionByStreamToken
registeredStream:withAvailability:
didCleanUpForStream:
didStartRequestForStream:withTransactionID:
didReceiveResultsForStream:withTransactionID:
activeConversations
conversationUUIDs
conversationsChangedForConversationManager:
conversationManager:stateChangedForConversation:
conversationManager:localVideoToggledForConversation:
conversationManager:remoteMembersChangedForConversation:
conversationManager:activeRemoteParticipantsChangedForConversation:
conversationManager:debugLinkChangedForConversation:
conversationManager:removedActiveConversation:
conversationManager:addedActiveConversation:
serverDisconnectedForConversationManager:
momentsController:registeredStream:withAvailability:
momentsController:didCleanUpForStream:
momentsController:didStartRequestForStream:withTransactionID:
momentsController:didReceiveResultsForStream:withTransactionID:
T@"CSDReportingController",R,N
reportTransactionGroupCompleted:
reportProviderFailedWithAction:forCall:
registeredStream:withAvailability:reply:
didCleanUpForStream:reply:
didStartRequestForStream:withTransactionID:reply:
didReceiveResultsForStream:withTransactionID:reply:
setReporters:
_reporters
_reportingSessionByStreamToken
_conversationUUIDs
T@"NSMutableArray",&,N,V_reporters
T@"NSMutableDictionary",R,N,V_reportingSessionByStreamToken
T@"NSMutableSet",R,N,V_conversationUUIDs
updateEnabled
handleAXSVoiceOverTouchEnabledNotification:
performAsynchronousBlock:
removeObserver:name:object:
performSynchronousBlock:
voiceOverObserver:didChangeEnabled:
enabled
TB,R,N,GisEnabled
_enabled
T@"NSMapTable",R,N,V_delegateToQueue
TB,N,GisEnabled,V_enabled
tu_UUIDv5ForString:namespaceUUID:
initWithCHManager:
initWithCHManager:queue:
handleCallHistoryDatabaseChangedNotification:
chManager
setOutgoingLocalParticipantUUID:forRecentCallsMatchingPredicate:
_chManager
T@"<CSDCHManager>",R,N,V_chManager
initWithService:
initWithName:service:
_update
idsService
anyActiveAccount
accountMatchingSimIdentifier:
accountForTelephonySubscriptionLabelIdentifier:
accountInfo
telephoneNumber
countryCode
T@"IDSDevice",R,N
T@"NSSet",R,N
T@"IDSAccount",R,N
T@"CSDIDSService",R,N
idsDeviceID
update
setIdsService:
setTelephonyCapableDeviceExists:
setRelayCapableDeviceExists:
setDevices:
setPairedDevice:
setAvailableOutgoingRelayCallerIDs:
_telephonyCapableDeviceExists
_relayCapableDeviceExists
_callerIDByUpdatingState
_idsService
_devices
_pairedDevice
_defaultPairedDevice
_availableOutgoingRelayCallerIDs
T@"IDSService",&,N,V_idsService
TB,N,V_telephonyCapableDeviceExists
TB,N,V_relayCapableDeviceExists
T@"NSArray",&,N,V_devices
T@"IDSDevice",&,N,V_pairedDevice
T@"IDSDevice",&,N,V_defaultPairedDevice
T@"NSSet",&,N,V_availableOutgoingRelayCallerIDs
T@"NSString",R,C,N,V_name
T@"IDSService",R,N
T@"NSString",R,C,N,V_callerIDByUpdatingState
pairedDeviceUniqueIDOverride
isWatchDevice
isAudioAccessoryDevice
isDeviceInAltMode
TB,R,N,GisPairedDevice
audioAccessoryDevice
TB,R,N,GisAudioAccessoryDevice
deviceInAltMode
TB,R,N,GisDeviceInAltMode
activeSessionForIdentifier:
currentSession
_createSessionToDevices:
_createSessionToDestinations:
initWithAccount:destinations:transportType:
sessions
_createSessionToAllDevicesSupportingProvider:
destinationWithActiveSession
_startSession:withMessage:identifiers:timeout:declineOnError:
_sendMessage:andCancelInvitationIfNecessaryForSession:
_sendMessage:andDeclineInvitationIfNecessaryForSession:
sendMessage:forIdentifier:toDestinations:customizedForRemoteProtocolVersion:waitUntilConnected:completionHandler:
sendMessage:customizedForRemoteProtocolVersion:completionHandler:
sessionForIdentifier:
_destroySession:
waitingSession
acceptInvitationForIdentifier:
setSessions:
_sessions
T@"IDSDestination",R,N
T@"CSDRelayIDSDualSession",R,N
T@"NSMutableArray",&,N,V_sessions
T@"<CSDRelayIDSSessionMessengerDelegate>",W,D,N
initWithQueue:fileTransferController:mediaAssetManager:callCenterObserver:
initWithStreamToken:requesterID:delegate:dispatchQueue:
momentsControllerClientXPCInterface
momentsControllerServerXPCInterface
handleClientDisconnected:
streamTokensByCSDClient
unregisterStreamToken:
isMomentsDisabled
isFaceTimePhotosAvailable
sessionsByToken
moments
newRequestWithMediaType:mode:requesteeID:
transactionID
initWithAVCRequest:session:
setActiveRequest:forTransactionID:
_startTimeoutForMomentsRequestWithTransactionID:
startWithError:
sessionForTransactionID:
activeRequestsByTransactionID
avcRequest
endWithError:
availabilityWithRemoteAvailable:
momentsGenerator
initWithMoments:remoteIDSDestinations:callCenterObserver:
setRemoteIDSDestinations:
initWithAvailability:supportedMediaTypes:
cleanUpForMomentIfNecessary:
didUpdateCapabilities:forVideoStreamToken:
mediaType
requesterID
willCaptureRemoteRequestFromRequesterID:
initWithStreamToken:requesterID:
remoteRequesterIDSDestinationFor:
remoteIDSDestinations
pathExtension
lowercaseString
URLByAppendingPathExtension:
_transferFileAtURL:forSession:request:
_handleReceivedVideoURL:
remoteRequesteeIDSDestinationFor:
fileTransferController
_handleReceivedResourcesAtDirectoryURL:
removeActiveRequestForTransactionID:
shouldPreserveMomentsFile
setIsRegistered:
activeRequestCount
pendingRequestCount
contentsOfDirectoryAtURL:
urlFromResources:withExtension:
initWithPhotosAppAssetIdentifier:
handleRequestResultWithMomentDescriptor:
_saveLivePhotoWithPhotoURL:videoURL:completion:
_saveVideoWithURL:completion:
mediaAssetManager
momentsRequestTimeout
didReceiveLocallyRequestedMomentDescriptor:
isRegionBlocked
setLocalCapabilities:
moments:capabilitiesDidChange:
moments:didFinishRequest:error:
moments:didStartProcessingRequest:error:
moments:didEndProcessingRequest:stillImageURL:movieURL:error:
momentsServerDidDisconnect:
registerXPCClientWithReply:
registerStreamToken:requesterID:remoteIDSDestinations:remoteMomentsAvailable:reply:
unregisterStreamToken:reply:
startRequestWithMediaType:forStreamToken:requesteeID:reply:
endRequestWithTransactionID:reply:
T@"<CSDMomentsControllerLocalCapabilities>",&,N
faceTimePhotosAvailable
TB,R,N,GisFaceTimePhotosAvailable
momentsClient
setMomentsGenerator:
_fileTransferController
_mediaAssetManager
_sessionsByToken
_streamTokensByCSDClient
_momentsClient
_momentsGenerator
T@"<CSDFileTransferring>",R,N,V_fileTransferController
T@"<CSDMediaAssetManaging>",R,N,V_mediaAssetManager
T@"NSMutableDictionary",R,N,V_sessionsByToken
T@"NSMapTable",R,N,V_streamTokensByCSDClient
T@"<TUMomentsControllerXPCClient>",R,N,V_momentsClient
T@"<CSDMomentsServerBag>",&,N,V_serverBag
T@?,C,N,V_momentsGenerator
T@"<CSDMomentsControllerDelegate>",W,N,V_delegate
initWithClientUUID:transportType:
isInputFrequencyMeteringEnabled
setInputFrequencyMeteringEnabled:
isOutputFrequencyMeteringEnabled
setOutputFrequencyMeteringEnabled:
getIsSendingAudio:callID:error:
setSendingAudio:callID:error:
getIsAudioPaused:callID:error:
setPauseAudio:callID:error:
getIsVideoPaused:callID:error:
setPauseVideo:callID:error:
setConferenceVisualRectangle:forCallID:
setConferenceState:forCallID:
videoDeviceController
setPeerReportingIdentifier:sessionIdentifier:forCallID:
setCallID:
startConnectionWithCallID:inviteData:isCaller:capabilities:destination:error:
startConnectionWithCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:error:
stopCallID:
cancelCallID:
updateCapabilities:forCallID:
sendData:forCallID:encrypted:
conference:withCallID:remoteMediaStalled:
conference:didStartSession:withUserInfo:
conference:didStopWithCallID:error:
conference:updateInputFrequencyLevel:
conference:updateOutputFrequencyLevel:
conference:receivedFirstRemoteFrameForCallID:
conference:remoteScreenAttributesChanged:callID:
conference:remoteVideoAttributesChanged:callID:
conference:remoteAudioPaused:callID:
conference:remoteVideoPaused:callID:
serverDiedForConference:
conference:inititiateRelayRequest:requestDict:
conference:sendRelayUpdate:updateDict:
conference:cancelRelayRequest:requestDict:
conference:videoQualityNotificationForCallID:isDegraded:isRemote:
conference:withCallID:networkHint:
conference:localIPChange:withCallID:
conference:didStartSession:withCallID:error:
conference:didStopWithCallID:error:callMetadata:
conference:withCallID:isSendingAudio:error:
conference:withCallID:didPauseAudio:error:
conference:withCallID:didPauseVideo:error:
conference:didReceiveARPLData:withCallID:
conference:didChangeLocalVariablesForCallID:
conference:remoteAudioEnabled:forCallID:
conference:localAudioEnabled:forCallID:error:
conference:remoteCallingModeChanged:forCallID:
conference:reinitializeCallForCallID:
conference:closeConnectionForCallID:
conference:updateInputMeterLevel:
conference:updateOutputMeterLevel:
conference:isRemoteAudioBelowThreshold:
T@"<CSDAVConferenceProviderDelegate>",W,N
inputFrequencyMeteringEnabled
TB,N,GisInputFrequencyMeteringEnabled
outputFrequencyMeteringEnabled
TB,N,GisOutputFrequencyMeteringEnabled
microphoneMuted
TB,N,GisMicrophoneMuted
audioPaused
TB,N,GisAudioPaused
_callID
_videoDeviceController
T@"AVConference",R,N,V_conference
Tq,N,V_callID
T@"TUVideoDeviceController",R,N,V_videoDeviceController
T@"<CSDAVConferenceProviderDelegate>",W,N,Vdelegate
call
setCall:
completionHandler
_call
_completionHandler
T@"CSDProviderCall",&,N,V_call
T@?,C,N,V_completionHandler
initWithCallProviderManager:delegate:queue:
initWithFilters:
shouldFilterIncomingCall:
shouldDisconnectCall:
initWithDelegate:queue:
initWithCalls:delegate:queue:
addCallSource:
shouldTrackCall:
callControllerHost
addOrUpdateCall:
removeCall:
startTrackingCall:
processAssertionManager
managedDeviceMonitor
startMonitoring:
stopTrackingCall:
callSourceManager
failOutstandingActionsForCallWithUUID:
stopMonitoring:
callGroupUUIDToCalls
faceTimeProviderDelegate
setDeferCommittingTransactions:
_commitUncommittedTransactions
commitUncommittedTransactions
allActions
_endCall:
cx_incomingCallErrorWithCode:
dateStarted
callUUIDToGroupWith
_callWithUUID:
_providerForCallSource:
_callWithUUID:controllableByCallSource:
_relayCallWithUUID:
_actionRequiresReasonableUserIntent:
cx_requestTransactionErrorWithCode:
_callGroupsWithBackingCallSource:
_shouldAllowRequestedAction:forCallSource:shouldValidateUserIntent:error:
_shouldAllowRequestedTransaction:forCallSource:error:
_performRequestedTransaction:onCallSource:
_callWithUUID:backingCallSource:
addAction:toUncommittedTransactionForCallSource:
_addSupplementalActionsForRequestedTransaction:onCallSource:
answerCall:withRequest:whileDisconnectingCalls:andHoldingCalls:
_deferCommittingTransactionsUntilAfterRunningBlock:
setCode:
setSenderIdentityUUID:
setHandoffContext:
pendingPulledCallContexts
telephonyCallSource
faceTimeCallSource
tinCanCallSource
deferCommittingTransactions
currentCallGroups
_ISOCountryCodeForCall:
_ISOCountryCodeForCallWithUUID:provider:callUpdate:
_endMutuallyExclusiveCalls:
dndAllowsCall
isFromBlockList
shouldPreferRelayOverDirectSecondaryCalling
requiresAuthentication
pendingCallsToChatUUIDs
shouldFilterCall
callSource:reportedCallWithUUID:endedAtDate:privateReason:failureContext:
expediteDeferredEndInterruptionForCallWithUUID:
handleFrequencyDataChanged:inDirection:forCalls:
handleMeterLevelChanged:inDirection:forCalls:
handleBytesOfDataUsedChanged:forCallWithUniqueProxyIdentifier:callHistoryIdentifier:
_processRequestedTransaction:fromCallSource:completion:
_allowRevertingStateForCompletedTransactionGroup:
_processCompletedCallAction:forCall:allowRevertingState:
callSourceFetcher
shouldDisconnectCallForDowntime
screenTimeCallFilter
callClass
callControllerHost:clientWithIdentifier:requestedTransaction:completion:
managedDeviceStateChangedFor:
callSource:registeredWithConfiguration:
callSource:reportedNewIncomingCallWithUUID:update:completion:
callSource:reportedCallWithUUID:updated:
callSource:reportedOutgoingCallWithUUID:sentInvitationAtDate:
callSource:reportedOutgoingCallWithUUID:startedConnectingAtDate:
callSource:reportedOutgoingCallWithUUID:connectedAtDate:
callSource:reportedAudioFinishedForCallWithUUID:
callSource:reportedCallWithUUID:changedFrequencyData:forDirection:
callSource:reportedCallWithUUID:changedMeterLevel:forDirection:
callSource:reportedCallWithUUID:crossDeviceIdentifier:changedBytesOfDataUsed:
callSource:requestedTransaction:completion:
callSourceManager:completedTransactionGroup:
callSourcesChangedForCallSourceManager:
callSource:shouldProcessAction:error:
performCallActions:forCall:
setCallFilterManager:
tinCanProviderDelegate
setScreenTimeCallFilter:
setRouteManager:
setDndAllowsCall:
setShouldPreferRelayOverDirectSecondaryCalling:
setShouldFilterCall:
setShouldDisconnectCallForDowntime:
_deferCommittingTransactions
_callFilterManager
_processAssertionManager
_callSourceManager
_callControllerHost
_faceTimeCallSource
_faceTimeProviderDelegate
_tinCanCallSource
_tinCanProviderDelegate
_callSourceFetcher
_screenTimeCallFilter
_managedDeviceMonitor
_pendingCallsToChatUUIDs
_pendingPulledCallContexts
_routeManager
_dndAllowsCall
_shouldPreferRelayOverDirectSecondaryCalling
_shouldFilterCall
_shouldDisconnectCallForDowntime
T@"CSDVoIPProcessAssertionManager",R,N,V_processAssertionManager
T@"CXCallSourceManager",R,N,V_callSourceManager
T@"CXCallControllerHost",R,N,V_callControllerHost
TB,N,V_deferCommittingTransactions
T@"CXCallSource",R,N
T@"CXInProcessCallSource",R,N,V_faceTimeCallSource
T@"CSDFaceTimeProviderDelegate",R,N,V_faceTimeProviderDelegate
T@"CXInProcessCallSource",R,N,V_tinCanCallSource
T@"<CXProviderDelegatePrivate>",R,N,V_tinCanProviderDelegate
T@"CSDCallSourceFetcher",R,N,V_callSourceFetcher
T@"CSDCallFilterManager",&,N,V_callFilterManager
T@"CSDScreenTimeCallFilter",&,N,V_screenTimeCallFilter
T@"<CSDManagedDeviceMonitor>",R,N,V_managedDeviceMonitor
T@"NSMutableDictionary",R,N,V_pendingCallsToChatUUIDs
T@"NSMutableDictionary",R,N,V_pendingPulledCallContexts
T@"CSDRelayCallDataSource",W,N,V_relayCallDataSource
T@"<CSDRouteManager>",&,N,V_routeManager
T@?,C,N,V_dndAllowsCall
T@?,C,N,V_supportsPrimaryCalling
T@?,C,N,V_shouldPreferRelayOverDirectSecondaryCalling
T@?,C,N,V_shouldFilterCall
T@?,C,N,V_shouldDisconnectCallForDowntime
T@"CSDCallProviderManager",&,N,V_providerManager
queueContext
initWithExportedObject:
setClientManager:
setSynchronous:
clientsByObject
currentConnection
requiredConnectionCapability
setMachServiceName:
initWithMachServiceName:
setXpcListener:
resume
setAsynchronousExportedObjectProxy:
setSynchronousExportedObjectProxy:
addClient:
removeClient:
clientsPassingTest:
_performBlock:onClients:coalescedByIdentifier:
filterClientsUsingPredicate:andPerformBlock:
performBlockOnQueue:andWait:
remoteObjectInterface
exportedInterface
exportedObject
interruptionHandler
_connectionEndedHandlerForXPCClient:withCustomBlock:
invalidationHandler
_setQueue:
setTarget:
invoke
_updatedQOSBlockForBlock:
retainArguments
machServiceName
_xpcClientForConnection:
isClientAllowed:
listener:shouldAcceptNewConnection:
clientsEntitledForCapability:
filterClientsEntitledForCapability:andPerformBlock:
performBlockOnQueue:
_performBlock:onClients:
handleInvocation:synchronously:
_remoteObjectInterface
_exportedInterface
_interruptionHandler
_invalidationHandler
_asynchronousExportedObjectProxy
_synchronousExportedObjectProxy
_exportedObject
_requiredConnectionCapability
_clientsByObject
_machServiceName
T^v,R,N
T@"NSMapTable",R,N,V_clientsByObject
T@"NSString",&,N,V_machServiceName
T@"NSXPCListener",&,N,V_xpcListener
T@,&,N,V_asynchronousExportedObjectProxy
T@,&,N,V_synchronousExportedObjectProxy
T@"CSDClient",R,N
T@"NSXPCInterface",&,N,V_remoteObjectInterface
T@"NSXPCInterface",&,N,V_exportedInterface
T@,&,N,V_exportedObject
T@?,C,N,V_interruptionHandler
T@?,C,N,V_invalidationHandler
T@"NSString",C,N,V_requiredConnectionCapability
methodSignatureForSelector:
isSynchronous
forwardInvocation:
_synchronous
T@"CSDClientManager",W,N,V_clientManager
synchronous
TB,N,GisSynchronous,V_synchronous
T@,R,N,V_exportedObject
strongToWeakObjectsMapTable
currentCallSet
uniqueProxyIdentifierToCallTableSemaphore
uniqueProxyIdentifierToCallTable
_postClientNotificationName:forCall:userInfo:
T#,R,N
shouldRegisterCall:
postClientNotificationName:
postClientNotificationName:forCall:
postClientNotificationName:forCall:userInfo:
setUniqueProxyIdentifierToCallTable:
setUniqueProxyIdentifierToCallTableSemaphore:
setCurrentCallSet:
_uniqueProxyIdentifierToCallTable
_uniqueProxyIdentifierToCallTableSemaphore
_currentCallSet
T@"NSMapTable",&,N,V_uniqueProxyIdentifierToCallTable
T@"NSObject<OS_dispatch_semaphore>",&,N,V_uniqueProxyIdentifierToCallTableSemaphore
T@"NSMutableOrderedSet",&,N,V_currentCallSet
T@"CSDCallStateController",R,W,N,V_callStateController
T@"NSOrderedSet",R,C,N
handleLocalFrequencyChanged:
handleRemoteFrequencyChanged:
handleLocalMeterLevelChanged:
handleRemoteMeterLevelChanged:
handleMutedChanged:
handleSendingAudioChanged:
floatValue
isEqualToDescriptor:
_isSystemProvider
_statusBarStyleOverrides
_statusString
_auditToken
T@"NSString",C,N,V_statusString
Ti,N,V_processIdentifier
TB,N,V_isSystemProvider
T{?=[8I]},N,V_auditToken
Ti,N,V_statusBarStyleOverrides
csd_stringWithCSDVoIPApplicationMessageTransportType:
isEqualToMessage:
isEqualToDictionary:
_payload
_transportType
T@"NSDictionary",R,C,N,V_payload
Tq,R,N,V_transportType
_socket
_destination
Ti,R,N,V_type
Ti,R,N,V_socket
T@"NSString",R,C,N,V_destination
setManager:
beginMatchingExtensions
beginDailyMaintenanceWithActivity:
manager
compactStoreWithCompletionHandler:
countOfNotificationsReceived
setCountOfNotificationsReceived:
synchronizeExtensionsWithCompletionHandler:
callDirectoryNSExtensionManager:extensionsChanged:
nsExtensionManager
_manager
_nsExtensionManager
_countOfNotificationsReceived
T@"CXCallDirectoryManager",&,N,V_manager
T@"CXCallDirectoryNSExtensionManager",R,N,V_nsExtensionManager
TQ,N,V_countOfNotificationsReceived
currentRunLoop
triggers
callChanged
callPassingTest:sortedUsingComparator:
displayedCall
conferenceCall
frontmostCall
frontmostAudioOrVideoCall
existingCallsHaveMultipleProviders
add:
containsRestrictedHandle:
containsRecentsRestrictedHandle:
isUnknownCall:
nonInterruptingCalls
siriGroupFaceTime
requesteeID
rejectWithError:
phoneNumber
isDefaultVoiceSIM
slot
mobileCountryCode
mobileNetworkCode
incomingCalls
displayedCalls
displayedAudioAndVideoCalls
conferenceParticipantCalls
callsHostedOrAnEndpointElsewhere
callsOnDefaultPairedDevice
callsWithStatus:
incomingVideoCall
activeVideoCall
currentVideoCall
videoCallWithStatus:
audioOrVideoCallWithStatus:
displayedCallFromCalls:
countOfCallsPassingTest:
currentVideoCallCount
callCountOnDefaultPairedDevice
hasCurrentAudioCalls
hasCurrentVideoCalls
anyCallIsHostedOnCurrentDevice
allCallsAreOfService:
currentAudioAndVideoCallGroups
callGroupsOnDefaultPairedDevice
supportsSecureCoding
encodeWithCoder:
initWithCoder:
initWithCapabilities:callSource:queue:
setIncludesCallsInRecents:
tinCanProvider
setTopic:
setShouldIgnoreRingerSwitch:
alertWithConfiguration:
play
emergencyCallbackCapabilitiesDidChange
destinationWithDevice:
silenceUnknownCallersEnabled
maxJunkLevel
integerForKey:
handleTrigger:
momentsStartedRemoteCapture:
handlePendingMessageDidReceiveInviteNotification:
executeFetchRequest:
contactStore
actionWithIdentifier:title:options:
categoryWithIdentifier:actions:intentIdentifiers:options:
setCategoryIdentifier:
setBody:
setNotificationProviderIdentifier:
requestWithIdentifier:content:trigger:
setDestinations:
setDefaultActionURL:
setSound:
setActiveParticipantHandles:
setSubtitle:
soundWithAlertType:
setAlertTopic:
setThreadIdentifier:
setShouldSuppressDefaultAction:
activeParticipantHandles
notificationProviderIdentifier
content
setShouldIgnoreDowntime:
trigger
destinations
requestWithIdentifier:content:trigger:destinations:
notification
request
actionIdentifier
setAudioSessionProperties:
startAudioSessionWithCompletionHandler:
opaqueSessionID
setActivationContext:error:
overrideOutputAudioPort:error:
interruptionPriority
deactivateAndSetInterruptionPriority:error:
setInterruptionPriority:error:
setActive:withOptions:error:
setCategory:mode:options:error:
processStateChanged
processStatesForCallSource:
mostElevatedApplicationStateForPID:
applicationInfoForApplication:
handlePendingMessageDidReceiveCancelNotification:
allowContactsOnly
initWithIdentifier:context:
donateSignalWithCompletion:
userContext
keyPathForActiveCall
setObject:forContextualKeyPath:responseQueue:withCompletion:
calleeHandleKey
calleeContactIDKey
bundleIDKey
initWithCalls:
otherSessionsRequestNoRingtoneInterruption
pickRoute:error:
getPickableRoutesForCategory:mode:completion:
bestGuessPickableRoutesForAnyCall
pickableRoutesForTTY
mainQueue
addObserverForName:object:queue:usingBlock:
stopAudioSession
resetAudioSessionOutputPortOverride
stopPlaying
setCurrentAttributionKey:andApp:
alertDidBeginPlaying:
setShouldRepeat:
setExternalToneFileURL:
setVibrationIdentifier:
setToneIdentifier:
sound
vibration
ignoreMute
unifiedContactWithIdentifier:keysToFetch:error:
callAlert
playWithCompletionHandler:
setPlaybackObserver:
sendMessageWithDictionary:error:
initWithChar:
initWithInteger:
initWithBool:
initWithSessionInfo:userInfo:frameworksToCheck:
startConfigurationWithCompletionHandler:
JSONObjectWithData:options:error:
__swift_objectForKeyedSubscript:
isFaceTimePhotosRestricted
isFaceTimePhotosEnabled
isPermittedToUseBluetoothAccessories
isPermittedToUsePrivateAPI
handleCallHistoryDatabaseChanged
predicateForCallsWithAnyMediaTypes:
setShouldAuthenticateDefaultAction:
setShouldBackgroundDefaultAction:
defaultActionURL
disconnectedCause
setPerformDialAssist:
setPerformLocalDialAssist:
setDialAssisted:
predicateForCallsBetweenStartDate:endDate:
callerNetworkName
callerNameForDisplay
callerIdIsBlocked
uniqueId
callCountWithPredicate:
speechSynthesizer:didStartSpeechUtterance:
speechSynthesizer:didFinishSpeechUtterance:
speechSynthesizer:didCancelSpeechUtterance:
URLForResource:withExtension:
setMixToUplink:
setNumberOfLoops:
setVolume:
initWithContentsOfURL:error:
setUsesApplicationAudioSession:
audioQueueFlags
setAudioQueueFlags:
setRate:
speakUtterance:
isPlaying
isSpeaking
stopSpeakingAtBoundary:
speechSynthesizer:didPauseSpeechUtterance:
speechSynthesizer:didContinueSpeechUtterance:
speechSynthesizer:willSpeakRangeOfSpeechString:utterance:
carPlayScreenConnectionChanged
sessionDidConnect:
sessionDidDisconnect:
setSessionObserver:
waitForSessionInitialization
startedConnectionAttemptOnTransport:
cancelledConnectionAttemptOnTransport:
session:didUpdateConfiguration:
setActiveRequestsByTransactionID:
suggestedNamesForDestinationID:onlySignificant:error:
__swift_setObject:forKeyedSubscript:
localSenderIdentity
contains:
initWithKeysToFetch:
predicateForContactsMatchingHandleStrings:
setPredicate:
executeFetchRequest:error:
storeWithOptions:
routesDidChangeHandler
routeWasPickedHandler
timedOutPickingRouteHandler
audioRouteInformationChangedWithNotification:
audioInterruptionPropertiesChangedWithNotification:
activateWithCompletion:
idsDeviceIdentifier
publicIdentifier
destinationWithRapportPublicIdentifier:
mediaSystemIdentifier
flags
effectiveIdentifier
mediaSystemName
localDevice
setLocalDeviceUpdatedHandler:
setDeviceFoundHandler:
setDeviceLostHandler:
setDeviceChangedHandler:
setFlags:
dataActiveAndReachable
wifiAllowedForBundleId:
cellularDataEnabledForBundleId:
initWithArray:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
momentCapturedForStreamToken:requesterID:reply:
userNotificationProviderServerXPCInterface
voicemailsChangedWithNotification:
onlineStatusChangedWithNotification:
subscriptionStateChangedWithNotification:
setBadgeString:withCompletionHandler:
removeDeliveredNotificationsWithIdentifiers:
replaceContentForRequestWithIdentifier:replacementContent:completionHandler:
addNotificationRequest:withCompletionHandler:
setNotificationCategories:
setWantsNotificationResponsesDelivered
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
voicemailInfoAvailableNotification:voicemailInfo:
getSubscriptionInfoWithError:
getVoicemailInfo:completion:
setAttachments:
hasAudio
setAudio:
attachmentWithIdentifier:URL:options:error:
isVoiceMailMWI
available
trashVoicemail:
countOfVoicemailsPassingTest:
mailboxType
isRead
messagesForMailboxType:limit:offset:error:
messagesForMailboxType:read:limit:offset:error:
dataForVoicemailWithIdentifier:
isTranscriptionEnabled
isSubscribed
isOnline
isMessageWaiting
callbackDestinationID
senderDestinationID
contacts
transcriptionState
dataURL
duration
voicemailDatabaseReset:
predicateForCallsWithStatusOriginated:
predicateForCallsWithRemoteParticipantHandleValue:
orPredicateWithSubpredicates:
predicateForCallsWithRemoteParticipantHandleNormalizedValue:
initWithType:value:normalizedValue:
currentSIMsWithError:
initWithSoundType:provider:video:region:
attemptToPlayDescriptor:completion:
moments:didEndProcessingRequest:url:error:
deleteItemAndReturnError:
handleCallRemoteParticipantsChanged:
allowableByContactsHandles:
shouldBeAllowedByScreenTimeWhenLimited
shouldBeAllowedDuringGeneralScreenTime
allowedByScreenTime
applicationCurrentlyLimited
initSynchronouslyWithBundleIdentifier:
allowedByContactsHandle
CSDMessagingDebugLink
NSCopying
CSDRelayController
CSDOrientationMonitor
BKSAccelerometerDelegate
NSObject
CSDCallCenterObserverDelegate
CSDTransactionManager
CSDCrashReporter
CSDVoIPProcessAssertion
CSDAVConference
CSDAVConferenceProviderDelegate
CSDAVConferenceConfiguration
CSDMessagingConversationParticipant
Additions
CSDUserActivityManager
TUCallProviderManagerDelegate
CSDUserActivityCommunicatorDelegate
CSDAggregateDictionaryReporter
CSDReporter
CSDProximityController
TURouteControllerDelegate
CSDOrientationObserver
FaceTime
AWDCSDCallStatus
CSDFaceTimeIMAVProviderDelegate
IMAVControllerDelegate
CSDDualFaceTimeProviderDelegate
CSDFaceTimeProviderDelegate
CXProviderDelegatePrivate
CXProviderDelegate
CSDFaceTimeIDSService
CSDConversation
CSDIDSGroupSessionDelegate
CSDAVCSessionDelegate
CSDRelayIDSService
CSDMessagingCallModel
CSDRelayClientController
CSDRelayMessagingControllerClientMessagingDelegate
CSDMessagingHandle
CSDProviderCall
CSDPauseDigitsQueueDelegate
CSDCallStateMonitor
CSDStatusBarManager
CSDStatusBarResolverDelegate
CSDAdditions
CSDCarrierBundlePhoneNumberProvider
CSDCarrierBundlePhoneNumberProviderController
TPSCarrierBundleControllerDelegate
TPSTelephonyControllerDelegate
TPSControllerDelegate
AWDCSDOtherFailureReport
CSDIDSGroupSessionProvider
IDSGroupSessionDelegate
IDSSessionDelegatePrivate
IDSSessionDelegate
CSDIDSSessionProvider
CSDRelayIDSDualSessionData
CSDRelayIDSDualSession
CSDThumperCapabilitiesMonitor
TUCallCapabilitiesDelegatePrivate
TUCallCapabilitiesDelegate
CSDConversationJoinContext
CSDAccountsController
IDSServiceDelegatePrivate
IDSServiceDelegate
CSDIDSDualSessionProvider
CSDPauseDigits
CSDCallProviderManagerXPCServer
TUCallProviderManagerXPCServer
CSDCallProviderManagerDelegate
CSDFaceTimeVideoIDSService
CSDIDSChat
CSDIDSDualSessionDelegate
CSDAVConferenceDelegate
TinCan
CSDCTCallCapabilities
CSDMessagingRelayMessage
CSDIncomingCallFilterDataSource
CSDMessagingCallProvider
CSDRelayMessagingController
CSDRelayIDSMessengerDelegate
CSDRelayIDSSessionMessengerDelegate
CSDDaemon
TUConfigurationDelegate
TUDelegate
AWDCSDMomentsReport
CSDAbstractIDSProviderDelegate
CSDIDSChatDelegate
CSDMessagingAVConferenceInviteData
CSDIDSDualSession
CSDIDSDualSessionProviderDelegate
CSDAWDReporter
CSDRelayIDSMessenger
CSDThumperAccount
NSMutableCopying
CSDMutableThumperAccount
CSDFaceTimeIDSProviderDelegate
CSDRelayCommonController
CSDRelayMessagingControllerCommonMessagingDelegate
CSDFileTransferController
CSDFileTransferring
CSDCallSourceFetcher
CSDThumperPushHandlerAdditions
CSDThumperPushHandler
CSDPinExchangeDelegate
CSDMessagingCall
CSDRelayCall
CSDCallHistoryManagerXPCServer
CSDCallHistoryManagerDelegate
TUCallHistoryManagerXPCServer
CSDPauseDigitsQueue
CSDXPCClient
CSDTTYProviderObserver
CSDRelayPairedDeviceMessenger
CSDMessagingConversationParticipantDidJoinContext
CSDMediaAssetManager
CSDMediaAssetManaging
CSDPowerLogReporter
CSDFaceTimeProviderDelegateManagerDelegate
CSDVoIPApplicationMessageContext
PKVoIPXPCClient
CXNetworkExtensionVoIPXPCClient
CSDVoIPApplication
CSDMessagingPersonNameComponents
CSDStatusBarResolver
CSDRelayConferenceInterface
CSDSandboxExtensionDirectory
MobileAssetManager
CSDPinExchangeController
AWDCSDCallAction
CSDCallCapabilities
TUCallCapabilitiesXPCServer
TUCallCapabilitiesXPCServerActions
CSDAccountsControllerDelegate
CSDTelephonyCallCapabilitiesDelegate
CSDThumperCapabilitiesMonitorDataSource
CSDCall
TUDynamicCallDisplayContextDelegate
CXAudioSessionActivationStateObserver
CSDRouteManager
TUAudioDeviceControllerDelegate
CSDMessagingConversationMember
CSDMessagingConversation
CSDMessagingConversationReport
CSDConversationManager
CSDConversationDelegate
CSDCHRecentCall
AWDCSDRelayMessageReceived
AWDCSDRelayDeviceRoute
CSDApplicationRecord
CSDMessagingCallMessage
CSDAudioRouteCollection
CSDFaceTimeAudioIDSService
VoIPApplicationAdditions
AWDCSDCallEnd
CSDMessagingCallCapabilitiesState
CSDVoIPProcessAssertionManager
CSDIncomingCallFilter
CSDAppleIDUtilities
CSDRecentsController
CSDIDSSession
CSDMessagingCallDisplayContext
CSDUserActivityCommunicator
UABestAppSuggestionManagerDelegate
CSDUserConfigurationMigrator
CSDThumperIDSService
CSDIDSGroupSession
CSDIDSGroupSessionProviderDelegate
CSDCallStateController
TUCallServicesXPCServer
TUCallCenterXPCServer
TUCallServicesProxyCallActions
TUCallServicesClientCapabilitiesXPCServer
TUAudioDeviceControllerXPCServer
TURouteControllerXPCServer
TUCallFilterControllerXPCServer
CSDRelayMessagingControllerDelegate
CSDCallDelegate
AWDCSDCallTransactionComplete
CSDDeviceLockStateObserver
CSDVoIPApplicationMonitor
CXNetworkExtensionVoIPXPCServer
PKVoIPXPCServer
CSDVoIPApplicationController
APSConnectionDelegate
CXNetworkExtensionMessageControllerHostDelegate
CXNotificationServiceExtensionHostDelegate
CSDConversationParticipant
CSDCallDataSourceMap
CSDMessagingLabeledHandle
CSDClient
CSDConversationManagerXPCServer
TUConversationManagerXPCServer
TUConversationMediaControllerXPCServer
CSDConversationManagerDelegate
CSDCallProviderManager
CSDCallProviderManagerDataSourceDelegate
CSDFaceTimeConversationProviderDelegate
CSDRaiseToAnswerController
CSDRelayHostController
CSDRelayMessagingControllerHostMessagingDelegate
CSDUserActivity
CSDCallProviderManagerDataSource
CSDMomentsReportingSession
CSDSignposts
CSDAVCSession
AVCSessionParticipantDelegate
AVCSessionDelegate
CSDExternalIDSDualSession
CSDRelayConferenceConnection
CSDTelephonyCallCapabilities
CSDCoreTelephonyClientDelegate
CSDMessagingRoute
CSDRelayCallDelegate
CSDMessagingConversationMessage
AWDCSDCurrentCalls
CSDFaceTimeIMAccount
CSDMockCall
CSDCoreTelephonyClient
CoreTelephonyClientDelegate
CoreTelephonyClientCapabilitiesDelegate
CSDMessagingCallModelState
CSDMessagingSenderIdentity
CSDABCReporter
CSDReportingController
CSDMomentsReportingSessionDelegate
TUConversationManagerDelegate
CSDReporterDataSource
CSDMomentsControllerDelegate
CSDVoiceOverObserver
CSDCallHistoryManager
CSDIDSService
Messaging
CSDRelayIDSSessionMessenger
CSDRelayIDSDualSessionDelegate
CSDMomentsController
CSDFileTransferringDelegate
CSDAVCMomentsDelegate
TUMomentsControllerXPCServer
CSDAVConferenceProvider
AVConferenceDelegate
CSDPulledCallContext
CSDProviderCallDataSource
CXCallControllerHostDelegate
CSDCallSourceFetcherDataSource
CSDManagedDeviceMonitorDelegate
CXCallSourceManagerDelegate
CXCallSourceUpdates
CSDProviderCallDelegate
CSDClientManager
NSXPCListenerDelegate
CSDClientManagerExportedObjectProxy
CSDCallDataSource
CSDRelayCallDataSource
CSDStatusBarDescriptor
CSDVoIPApplicationMessage
CSDVoIPApplicationMessageAdditions
CSDIDSTransport
CSDCallDirectoryManager
CXCallDirectoryNSExtensionManagerDelegate
@24@0:8^{_NSZone=}16
B16@0:8
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
v16@0:8
@"NSData"
@"NSString"
@"CSDCallStateController"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v48@0:8@16d24f32f36f40i44
v32@0:8@16q24
v48@0:8@"BKSAccelerometer"16d24f32f36f40i44
v32@0:8@"BKSAccelerometer"16q24
v32@0:8@16@24
v32@0:8@"<CSDCallCenterObserver>"16@"CSDCall"24
v24@0:8@"<CSDCallCenterObserver>"16
@24@0:8@16
v20@0:8B16
q16@0:8
v24@0:8q16
@"BKSAccelerometer"
@"<CSDCallCenterObserver>"
v32@0:8@16@"NSString"24
@"NSMapTable"
@"NSObject<OS_dispatch_queue>"
v32@0:8@16i24I28
v32@0:8i16I20@24
v24@0:8@?16
@"BKSProcessAssertion"
v36@0:8@16B24@28
v40@0:8@16@24@32
v28@0:8@16f24
v28@0:8@16B24
v40@0:8@16@24q32
v36@0:8@"<CSDAVConferenceProvider>"16B24@"NSError"28
v40@0:8@"<CSDAVConferenceProvider>"16@"NSError"24@"NSDictionary"32
v24@0:8@"<CSDAVConferenceProvider>"16
v32@0:8@"<CSDAVConferenceProvider>"16@"NSData"24
v28@0:8@"<CSDAVConferenceProvider>"16f24
v28@0:8@"<CSDAVConferenceProvider>"16B24
v40@0:8@"<CSDAVConferenceProvider>"16@"NSData"24q32
d16@0:8
v24@0:8d16
i16@0:8
v20@0:8i16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
I16@0:8
v20@0:8I16
v24@0:8@"CSDAVConferenceConfiguration"16
v24@0:8@"CSDIDSTransport"16
v24@0:8@"VCCapabilities"16
v24@0:8@"NSData"16
v32@0:8@"NSString"16@"NSString"24
@"<CSDAVConferenceDelegate>"16@0:8
v24@0:8@"<CSDAVConferenceDelegate>"16
@"NSObject<OS_dispatch_queue>"16@0:8
v24@0:8@"NSObject<OS_dispatch_queue>"16
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@"NSError"16@0:8
@"NSDate"16@0:8
v32@0:8q16@24
v20@0:8f16
q32@0:8@16^@24
@?16@0:8
@"<CSDAVConferenceDelegate>"
@"NSDate"
@"NSNumber"
@"NSDictionary"
@"NSError"
@"CSDAVConferenceConfiguration"
@"<CSDAVConferenceProvider>"
{CGSize="width"d"height"d}
@"VCCapabilities"
@"NSUUID"
@"RTCSecureHierarchyToken"
v24@0:8Q16
@"CSDMessagingHandle"
{?="identifier"b1"version"b1"isMomentsAvailable"b1}
v24@0:8@"TUCallProviderManager"16
v28@0:8I16@20
v28@0:8I16@"NSString"20
@"CSDUserActivityCommunicator"
@"CSDUserActivity"
v40@0:8@16@24Q32
v36@0:8@16@24B32
v44@0:8@16@24@32B40
v40@0:8@"CSDReportingController"16@"CSDCall"24Q32
v32@0:8@"CSDReportingController"16@"CSDCall"24
v24@0:8@"CSDReportingController"16
v36@0:8@"CSDReportingController"16@"CSDMessagingRelayMessage"24B32
v32@0:8@"CSDReportingController"16@"CXTransactionGroup"24
v40@0:8@"CSDReportingController"16@"CXAction"24@"CSDCall"32
v32@0:8@"CSDReportingController"16@"CSDMomentsUsageReport"24
v40@0:8@"CSDReportingController"16@"TURoute"24@"CSDCall"32
v32@0:8@"CSDReportingController"16@"TUConversation"24
v40@0:8@"CSDReportingController"16@"NSArray"24@"TUConversation"32
v32@0:8@"CSDReportingController"16@"CSDIDSChat"24
v40@0:8@"CSDReportingController"16@"NSArray"24@"NSUUID"32
v32@0:8@"CSDReportingController"16@"NSString"24
v44@0:8@"CSDReportingController"16@"NSUUID"24@"RTCSecureHierarchyToken"32B40
@"<CSDReporterDataSource>"16@0:8
v24@0:8@"<CSDReporterDataSource>"16
v24@0:8@"TURouteController"16
@32@0:8@16@24
@64@0:8@16@24@32@40@48@56
@"TURouteController"
@"<CSDOrientationObserver>"
@"<TUNotifyObserver>"
@"<CSDVoiceOverObserver>"
v24@0:8@?<v@?@"FBSOrientationUpdate">16
@?<v@?@"FBSOrientationUpdate">16@0:8
^I16@0:8
I24@0:8Q16
v32@0:8^I16Q24
@20@0:8i16
i24@0:8@16
@24@0:8Q16
{?="list"^I"count"Q"size"Q}
@"NSMutableArray"
{?="connectionTimeMs"b1"durationMs"b1"endReason"b1"providerEndedReason"b1"providerErrorCode"b1"setupTimeMs"b1"faceTimeTransportType"b1"idsLinkType"b1"telephonyTransportType"b1"hasConnected"b1"hasEnded"b1"hasStartedConnecting"b1"isCurrentlyGrouped"b1"isHeld"b1"isIncoming"b1"isRelay"b1}
v24@0:8@"IMAVChat"16
v32@0:8@"IMHandle"16q24
B32@0:8@16@24
v24@0:8@"CXProvider"16
B32@0:8@"CXProvider"16@"CXTransaction"24
v32@0:8@"CXProvider"16@"CXStartCallAction"24
v32@0:8@"CXProvider"16@"CXAnswerCallAction"24
v32@0:8@"CXProvider"16@"CXEndCallAction"24
v32@0:8@"CXProvider"16@"CXSetHeldCallAction"24
v32@0:8@"CXProvider"16@"CXSetMutedCallAction"24
v32@0:8@"CXProvider"16@"CXSetGroupCallAction"24
v32@0:8@"CXProvider"16@"CXPlayDTMFCallAction"24
v32@0:8@"CXProvider"16@"CXAction"24
v32@0:8@"CXProvider"16@"AVAudioSession"24
v32@0:8@"CXProvider"16@"CXSendMMIOrUSSDCodeAction"24
v32@0:8@"CXProvider"16@"CXJoinCallAction"24
v32@0:8@"CXProvider"16@"CXSetTTYTypeCallAction"24
v32@0:8@"CXProvider"16@"CXSetSendingVideoCallAction"24
v32@0:8@"CXProvider"16@"CXSetRelayingCallAction"24
v32@0:8@"CXProvider"16@"CXPullCallAction"24
v32@0:8@"CXProvider"16@"CXSetVideoPresentationSizeCallAction"24
v32@0:8@"CXProvider"16@"CXSetVideoPresentationStateCallAction"24
B24@0:8@"NSUUID"16
@"NSUUID"24@0:8@"NSUUID"16
v24@0:8@"NSUUID"16
v28@0:8@16I24
v56@0:8{CGSize=dd}16{CGSize=dd}32@48
I24@0:8q16
@"<CSDFaceTimeProviderDelegateManagerDelegate>"
@"CXProvider"
@"NSMutableOrderedSet"
v44@0:8@16B24@28@36
v36@0:8@16@24I32
v32@0:8@"CSDIDSGroupSession"16@"NSDictionary"24
v44@0:8@"CSDIDSGroupSession"16B24@"NSSet"28@"NSError"36
v32@0:8@"CSDIDSGroupSession"16@"NSError"24
v24@0:8@"CSDIDSGroupSession"16
v36@0:8@"CSDIDSGroupSession"16@"NSError"24I32
v32@0:8@"CSDIDSGroupSession"16@"NSArray"24
v40@0:8@16B24B28@32
v36@0:8Q16B24q28
v40@0:8Q16B24B28q32
v40@0:8Q16q24q32
v36@0:8@"<CSDAVCSession>"16B24@"NSError"28
v32@0:8@"<CSDAVCSession>"16@"NSError"24
v40@0:8@"<CSDAVCSession>"16B24B28@"NSError"32
v24@0:8@"<CSDAVCSession>"16
@96@0:8@16@24@32B40@44@52@60@68@76B84@88
v32@0:8Q16@24
i28@0:8@16i24
@"NSSet"
@"<CSDConversationDelegate>"
@"TUHandle"
@"TUConversationMember"
@"TUConversationReport"
@"NSMutableDictionary"
@"CSDIDSGroupSession"
@"<CSDAVCSession>"
@"<CSDConversationServerBag>"
@"NSObject"
@"NSURL"
{?="supportsAddCall"b1"supportsDTMF"b1"supportsGrouping"b1"supportsHolding"b1"supportsSendingToVoicemail"b1"supportsUnambiguousMultiPartyState"b1"supportsUngrouping"b1}
v32@0:8@16@?24
v28@0:8@"CSDMessagingRelayMessage"16B24
v24@0:8@"CSDMessagingRelayMessage"16
v32@0:8@"CSDMessagingRelayMessage"16@?<v@?@"NSDictionary">24
@28@0:8i16@20
C16@0:8
v20@0:8C16
{?="type"b1}
v24@0:8@"CSDPauseDigitsQueue"16
@28@0:8@16B24
@40@0:8@16@24@32
@48@0:8@16@24@32B40B44
{?=[8I]}16@0:8
Vv20@0:8B16
@"<CSDProviderCallDelegate>"
@"CXCallSource"
@"CXCallFailureContext"
@"CXCallUpdate"
@"CSDPauseDigitsQueue"
@"NSTimer"
v24@0:8@"<CSDStatusBarResolver>"16
@"<CSDStatusBarResolver>"
@"SBSStatusBarStyleOverridesAssertion"
@"STCallingStatusDomainPublisher"
@"NSArray"
v32@0:8@"TPSTelephonyController"16@"NSOrderedSet"24
v32@0:8@"TPSCarrierBundleController"16@"CTXPCServiceSubscriptionContext"24
@40@0:8@16@24^@32
@"<CSDCarrierBundlePhoneNumberProviderControllerDelegate>"
@"TPSCarrierBundleController"
{?="actionType"b1"failureReason"b1"timestamp"b1"providerWasReset"b1}
v36@0:8@16I24@28
v24@0:8@"IDSGroupSession"16
v36@0:8@"IDSGroupSession"16I24@"NSError"28
v40@0:8@"IDSGroupSession"16@"NSArray"24@"NSError"32
v40@0:8@"IDSGroupSession"16@"NSDictionary"24@"NSError"32
v40@0:8@"IDSGroupSession"16@"IDSGroupSessionParticipantUpdate"24@"NSError"32
v32@0:8@"IDSGroupSession"16@"NSError"24
v32@0:8@"IDSGroupSession"16@"NSDictionary"24
v36@0:8@"IDSGroupSession"16@"NSArray"24B32
v32@0:8@"IDSGroupSession"16@"NSArray"24
v32@0:8@"IDSSession"16@"NSString"24
v24@0:8@"IDSSession"16
v36@0:8@"IDSSession"16I24@"NSError"28
v32@0:8@"NSString"16@"NSData"24
v32@0:8@"IDSSession"16@"NSArray"24
v40@0:8@"IDSSession"16@"NSString"24@"NSData"32
v32@0:8@"IDSSession"16@"NSSet"24
v36@0:8@"IDSSession"16@"NSSet"24B32
v36@0:8@"NSArray"16@"NSData"24B32
@"<CSDIDSGroupSessionProviderDelegate>"16@0:8
v24@0:8@"<CSDIDSGroupSessionProviderDelegate>"16
@"NSArray"16@0:8
@56@0:8@16@24@32@40@48
@"IDSGroupSession"
@"<CSDIDSGroupSessionProviderDelegate>"
@"IDSAccount"
@36@0:8@16B24@28
@60@0:8@16B24@28@36@44@52
@52@0:8@16@24@32i40@44
v36@0:8@16B24@?28
v40@0:8@16@24@?32
@"<CSDRelayIDSDualSessionDelegate>"
@"IDSDestination"
@"IDSDevice"
@"NSMutableSet"
v32@0:8@16^{__CFString=}24
@24@0:8^{__CFString=}16
@"<CSDThumperCapabilitiesMonitorDataSource>"
@"NPSDomainAccessor"
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v68@0:8@16@24@32@40q48@56B64
v76@0:8@16@24@32@40q48@56B64@68
v72@0:8@16@24@32@40@48@56@64
v48@0:8@16@24d32@40
v68@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40q48@"NSError"56B64
v76@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40q48@"NSError"56B64@"IDSMessageContext"68
v72@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@"NSArray"48@"NSArray"56@"NSDictionary"64
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@48
v48@0:8@"IDSService"16@"NSString"24d32@"NSError"40
v48@0:8@"IDSService"16@"NSString"24@"NSString"32@"NSString"40
v32@0:8@"IDSService"16q24
@"<CSDAccountsControllerDelegate>"
v32@0:8@"NSData"16@"NSSet"24
v28@0:8@"NSData"16B24
@"<CSDIDSDualSessionProviderDelegate>"16@0:8
v24@0:8@"<CSDIDSDualSessionProviderDelegate>"16
@"<CSDIDSDualSessionProviderDelegate>"
@"IDSSession"
Vv24@0:8@?16
Vv24@0:8@16
Vv32@0:8@16@?24
Vv24@0:8@?<v@?@"NSDictionary"@"NSDictionary"@"NSDictionary">16
Vv24@0:8@"NSString"16
Vv32@0:8@"TUDialRequest"16@?<v@?@"NSError">24
v24@0:8@"<TUCallProviderManagerXPCClient>"16
v24@0:8@"CSDCallProviderManager"16
@"CSDClientManager"
@"CSDCallProviderManager"
v28@0:8@16i24
v28@0:8@"CSDIDSDualSession"16i24
v24@0:8@"CSDIDSDualSession"16
v36@0:8@"CSDIDSDualSession"16@"NSArray"24B32
v32@0:8@"CSDIDSDualSession"16@"NSData"24
v40@0:8@16q24@32
v24@0:8@"<CSDAVConference>"16
v40@0:8@"<CSDAVConference>"16q24@"NSError"32
v28@0:8@"<CSDAVConference>"16B24
v32@0:8@"<CSDAVConference>"16@"NSData"24
v28@0:8@"<CSDAVConference>"16f24
v32@0:8@"<CSDAVConference>"16q24
v40@0:8@"<CSDAVConference>"16@"NSData"24q32
v32@0:8@"<CXVideoAspectRatioDescriptor>"16@?<v@?@"NSArray"B>24
v24@0:8@"<CXVideoAspectRatioDescriptor>"16
@"<CSDIDSChatDelegate>"16@0:8
v24@0:8@"<CSDIDSChatDelegate>"16
@"NSUUID"16@0:8
@"TUHandle"16@0:8
@"CXCallFailureContext"16@0:8
@36@0:8@16@24B32
@44@0:8@16@24B32@36
v32@0:8@16B24B28
@"<CSDIDSChatDelegate>"
@"CSDExternalIDSDualSession"
@"<CSDAVConference>"
f16@0:8
@"CSDMessagingAVConferenceInviteData"
@"CSDMessagingCallCapabilitiesState"
@"CSDMessagingCallModel"
@"CSDMessagingCallModelState"
@"CSDMessagingCallDisplayContext"
@"CSDMessagingCallProvider"
@"CSDMessagingRoute"
{?="hostCallCreationTime"b1"messageSendTime"b1"hardPauseState"b1"protoDisconnectedReason"b1"protoOriginatingUIType"b1"protoPriority"b1"protoProtocolVersion"b1"protoService"b1"protoSoundRegion"b1"protoTTYType"b1"receivedMessageType"b1"requestActionType"b1"systemVolume"b1"type"b1"protoCannotBeAnswered"b1"protoCannotRelayAudioOrVideoOnPairedDevice"b1"protoEmergency"b1"protoExpectedEndpointOnMessagingDevice"b1"protoNeedsManualInCallSounds"b1"protoRemoteUplinkMuted"b1"protoSOS"b1"protoShouldSuppressRingtone"b1"protoSupportsTTYWithVoice"b1"protoUplinkMuted"b1"protoVideo"b1"protoVoicemail"b1"protoWantsHoldMusic"b1}
v24@0:8@?<q@?@"NSString"@"NSString">16
B24@0:8@"NSString"16
@"DNDEventBehaviorResolutionService"
{?="maximumCallGroups"b1"maximumCallsPerCallGroup"b1"supportsAudioAndVideo"b1"supportsAudioOnly"b1"supportsEmergency"b1"supportsRecents"b1"supportsVoicemail"b1}
v48@0:8@"CSDRelayIDSMessenger"16@"CSDMessagingRelayMessage"24@"IDSDestination"32@"IDSDevice"40
v36@0:8@"CSDRelayIDSMessenger"16@"NSArray"24B32
q24@0:8@16
B24@0:8@"CSDMessagingRelayMessage"16
B32@0:8@"CSDMessagingRelayMessage"16@"IDSDestination"24
q24@0:8@"CSDMessagingRelayMessage"16
@"NSArray"24@0:8@"CSDMessagingRelayMessage"16
q24@0:8q16
v28@0:8i16@20
v28@0:8@16C24
B20@0:8i16
v32@0:8@?16@24
@"<CSDRelayMessagingControllerDelegate>"
@"<CSDRelayMessagingControllerClientMessagingDelegate>"
@"<CSDRelayMessagingControllerHostMessagingDelegate>"
@"<CSDRelayMessagingControllerCommonMessagingDelegate>"
@"CSDRelayIDSSessionMessenger"
@"CSDRelayPairedDeviceMessenger"
@"<TUCallContainerPrivate>"
v24@0:8@"TUConfiguration"16
v28@0:8i16@?20
@"CSDCallStateMonitor"
@"CSDRelayMessagingController"
@"CSDRelayClientController"
@"CSDRelayHostController"
@"CSDRelayCommonController"
@"CSDCallDirectoryManager"
@"CSDVoIPApplicationController"
@"CSDMomentsController"
@"TUUserConfiguration"
@"CSDUserNotificationController"
@"CSDVoiceOverObserver"
@"CSDDeviceLockStateObserver"
@"CSDOrientationMonitor"
@"CSDProximityController"
@"CSDRaiseToAnswerController"
@"CSDPowerAssertionManager"
@"CSDAudioController"
@"CSDStatusBarManager"
@"MobileAssetManager"
{?="meanRequestDuration"b1"medianRequestDuration"b1"timestamp"b1"availability"b1"photoRequestFailureCount"b1"photoRequestSuccessCount"b1}
{CGSize=dd}24@0:8@16
B24@0:8@"<CSDIDSChat>"16
{CGSize=dd}24@0:8@"<CSDIDSChat>"16
v24@0:8@"<CSDIDSChat>"16
v32@0:8@"<CSDIDSChat>"16@"NSData"24
v28@0:8@"<CSDIDSChat>"16f24
v32@0:8@"<CSDIDSChat>"16q24
i24@0:8q16
@"<CSDIDSProviderDelegateCapabilities>"
v40@0:8@"<CSDIDSDualSessionProvider>"16@"NSString"24@"NSData"32
v24@0:8@"<CSDIDSDualSessionProvider>"16
v36@0:8@"<CSDIDSDualSessionProvider>"16@"NSSet"24B32
v36@0:8@"<CSDIDSDualSessionProvider>"16I24@"NSError"28
@28@0:8@16i24
v32@0:8@16i24B28
@"<CSDIDSDualSessionDelegate>"
@"<CSDIDSDualSessionProvider>"
i20@0:8i16
i28@0:8@16B24
i24@0:8Q16
v28@0:8I16@?20
@"<CSDReporterDataSource>"
@"AWDServerConnection"
@"<CSDRelayIDSMessengerDelegate>"
@56@0:8@16@24@32q40@48
@"TUCallProviderManager"
@"<CSDFaceTimeIDSProviderDelegateCapabilities>"
@"NSOrderedSet"
@"<CSDFaceTimeIDSProviderDelegateServerBag>"
v40@0:8@"NSURL"16@"NSSet"24@"NSDictionary"32
v32@0:8@"NSURL"16@?<v@?@"NSURL">24
@"<CSDFileTransferringDelegate>"16@0:8
v24@0:8@"<CSDFileTransferringDelegate>"16
v48@0:8Q16@24@32@?40
@"<CSDFileTransferringDelegate>"
@"IDSService"
@32@0:8@16d24
@"<CSDCallSourceFetcherDataSource>"
r^{__CFString=}16@0:8
v32@0:8B16B20@24
v32@0:8@"IDSDevice"16@?<v@?B@"NSString">24
v32@0:8@"IDSDevice"16@"NSUUID"24
v24@0:8@"IDSDevice"16
v24@0:8@?<v@?B>16
v40@0:8@"NSNumber"16@"NSString"24@?<v@?B>32
v32@0:8B16B20@"IDSDevice"24
{?="protoTimeConnected"b1"protoDisconnectedReason"b1"protoOriginatingUIType"b1"protoService"b1"protoSoundRegion"b1"protoStatus"b1"protoTTYType"b1"protoConferenced"b1"protoEmergency"b1"protoHasSentInvitation"b1"protoNeedsManualInCallSounds"b1"protoOutgoing"b1"protoSOS"b1"protoShouldSuppressRingtone"b1"protoSupportsTTYWithVoice"b1"protoUplinkMuted"b1"protoVideo"b1"protoVoicemail"b1"protoWantsHoldMusic"b1}
v24@0:8i16B20
@"TUCallProvider"
@"TUCallDisplayContext"
@"<CSDRelayCallDelegate>"
v24@0:8@"CSDCallHistoryManager"16
Vv32@0:8@16@24
Vv32@0:8@"NSUUID"16@"NSUUID"24
v24@0:8@"<TUCallHistoryManagerXPCClient>"16
@"CSDCallHistoryManager"
@"<CSDPauseDigitsQueueDelegate>"
@28@0:8d16B24
v48@0:8@16@24d32Q40
v52@0:8@16d24B32Q36@?44
@"CSDMessagingConversationMessage"
{?="version"b1"isMomentsAvailable"b1}
v40@0:8@"NSURL"16@"NSURL"24@?<v@?@"NSString"@"NSError">32
v32@0:8@"NSURL"16@?<v@?@"NSString"@"NSError">24
v56@0:8@16@24@32q40@48
v48@0:8@16@24@32@?40
v40@0:8@"<CSDDualFaceTimeProviderDelegate>"16@"NSUUID"24@"NSDate"32
v56@0:8@"<CSDDualFaceTimeProviderDelegate>"16@"NSUUID"24@"NSDate"32q40@"CXCallFailureContext"48
v40@0:8@"<CSDDualFaceTimeProviderDelegate>"16@"CXTransaction"24@?<v@?@"NSError">32
v48@0:8@"<CSDFaceTimeProviderDelegate>"16@"TUConversation"24@"NSData"32@?<v@?@"NSUUID"BB@"NSUUID"@"TUHandle"@"NSString">40
@"TUContactsDataProvider"
@"CSDConversationManager"
@"CSDConversationManagerXPCServer"
@"CSDFaceTimeIDSProviderDelegate"
@"CSDFaceTimeIMAVProviderDelegate"
@"CSDFaceTimeConversationProviderDelegate"
@"CSDVoIPApplicationMessage"
v36@0:8@"NSDictionary"16B24@?<v@?>28
v32@0:8@"NSDictionary"16@?<v@?>24
@"CSDClient"
@"LSApplicationRecord"
@"CSDMessagingPersonNameComponents"
@"<CSDStatusBarResolverDelegate>"16@0:8
v24@0:8@"<CSDStatusBarResolverDelegate>"16
@"CSDCall"16@0:8
@"CSDStatusBarDescriptor"16@0:8
@"<CSDStatusBarResolverDelegate>"
@"<CSDProcessObserverProtocol>"
@"CSDStatusBarDescriptor"
@"TUCallCenter"
v28@0:8B16@20
v56@0:8@16@24@32@?40@?48
@32@0:8@16^@24
B32@0:8@16^@24
@"NSFileManager"
@32@0:8@16@?24
v28@0:8@?16B24
v32@0:8@?16d24
{os_unfair_lock_s=I}16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"MAAsset"
v36@0:8B16B20@24B32
@"<CSDPinExchangeDelegate>"
{?="actionType"b1"completionTimeMs"b1"failureReason"b1"state"b1}
Vv28@0:8B16@20
Vv36@0:8B16@20@28
Vv28@0:8B16@"NSString"20
Vv28@0:8B16@"NSUUID"20
Vv36@0:8B16@"NSString"20@"NSUUID"28
Vv24@0:8@"NSUUID"16
Vv24@0:8@?<v@?@"TUCallCapabilitiesState">16
v24@0:8@"<TUCallCapabilitiesXPCClient>"16
@"CSDThumperAccount"24@0:8@"NSString"16
@"TUThumperCTCapabilitiesState"24@0:8@"NSString"16
B32@0:8@"NSString"16@"NSString"24
C32@0:8@16@24
v36@0:8B16@20@28
@24@0:8B16B20
@"NSXPCListener"
@"CSDAccountsController"
@"CSDTelephonyCallCapabilities"
@"CSDThumperPushHandler"
@"CSDPinExchangeController"
@"CSDThumperCapabilitiesMonitor"
@"<CSDIDSService>"
@"TUCallCapabilitiesState"
v24@0:8@"TUDynamicCallDisplayContext"16
@"<CSDCallDelegate>"
@"CSDCallDataSource"
@"TUDialRequest"
@"CSDIDSTransport"
@"TUDynamicCallDisplayContext"
v24@0:8@"TUAudioDeviceController"16
B32@0:8@"NSString"16@"TUCall"24
B24@0:8@"TUCall"16
@"TURoute"24@0:8@"TUCall"16
@"CARAutomaticDNDStatus"
{?="version"b1}
@"CSDMessagingDebugLink"
@"CSDMessagingConversationMember"
@"CSDMessagingConversationReport"
{?="version"b1"locallyCreated"b1}
{?="timebase"b1}
v24@0:8@"CSDConversation"16
v32@0:8@"CSDConversation"16@"CXCallFailureContext"24
v32@0:8@"CSDConversation"16@"CSDConversationParticipant"24
v40@0:8@"CSDConversation"16@"NSString"24@?<v@?B>32
@80@0:8@16@24@32B40@44@52@60B68@72
@60@0:8@16@24@32B40@44@52
@20@0:8B16
@48@0:8@16@24@32@40
v40@0:8Q16@24@32
@"CSDIDSService"
@"CSDConversationPersistenceController"
@"CSDReportingController"
{?="latencyMs"b1"protocolVersion"b1"timestamp"b1"callService"b1"messageType"b1}
{?="type"b1"failed"b1}
@"NSURL"16@0:8
{?="protoProtocolVersion"b1"type"b1"oBSOLETEProtoMomentsAvailable"b1"protoMomentsV2Available"b1"protoSenderMuteUplink"b1"protoShouldSuppressInCallUI"b1"protoWantsVideo"b1}
B24@0:8q16
v32@0:8@?16@?24
@24@0:8@?16
B24@0:8@?16
@"AWDCSDCallStatus"
{?="timestamp"b1"callInfoSource"b1}
{?="faceTimeAudioAvailable"b1"faceTimeVideoAvailable"b1}
@"NSCountedSet"
@56@0:8@16@24@32@?40@48
@"CXCallDirectoryStore"
@"CSDIncomingCallFilterDataSource"
@"<CSDDeviceLockStateObserver>"
@"CXCallDirectorySanitizer"
@"ACAccountStore"
v40@0:8q16@24@32
@"CSDIncomingCallFilter"
@"<CSDTransactionManager>"
@"CHManager"
@"<CSDUserNotificationDelegate>"
@"<CSDIDSSessionProvider>"
v24@0:8@"UABestAppSuggestion"16
v32@0:8@"UABestAppSuggestion"16@"NSSet"24
v32@0:8@16d24
v36@0:8@16d24B32
@"<CSDUserActivityCommunicatorDelegate>"
@"UABestAppSuggestionManager"
v48@0:8@16@24Q32@40
v36@0:8@"<CSDIDSGroupSessionProvider>"16I24@"NSError"28
v24@0:8@"<CSDIDSGroupSessionProvider>"16
v48@0:8@"<CSDIDSGroupSessionProvider>"16@"NSDictionary"24Q32@"NSError"40
v32@0:8@"<CSDIDSGroupSessionProvider>"16@"NSError"24
v36@0:8@"<CSDIDSGroupSessionProvider>"16@"NSArray"24B32
v32@0:8@"<CSDIDSGroupSessionProvider>"16@"NSArray"24
@"<CSDIDSGroupSessionDelegate>"
@"<CSDIDSGroupSessionProvider>"
Vv28@0:8@16C24
Vv28@0:8i16@20
Vv40@0:8@16{CGSize=dd}24
Vv28@0:8@16i24
Vv24@0:8@"TUAnswerRequest"16
Vv32@0:8@"NSString"16@"NSString"24
Vv28@0:8@"NSString"16C24
Vv28@0:8i16@"NSString"20
Vv24@0:8@"IDSDestination"16
Vv24@0:8@"TUProxyCall"16
Vv40@0:8@"NSString"16{CGSize=dd}24
Vv28@0:8@"NSString"16i24
Vv24@0:8@"TUDialRequest"16
Vv24@0:8@?<v@?@"NSArray">16
Vv32@0:8@"TUDialRequest"16@"TUCallDisplayContext"24
Vv32@0:8@"TUDialRequest"16@?<v@?@"TUCall"@"NSArray">24
Vv24@0:8@"TUJoinConversationRequest"16
Vv32@0:8@"NSDictionary"16@?<v@?@"TUCall"@"NSArray">24
Vv24@0:8@"TUCallServicesClientCapabilities"16
Vv28@0:8@16B24
Vv24@0:8@?<v@?@"NSDictionary">16
Vv28@0:8@"NSString"16B24
Vv40@0:8@16@24@?32
Vv44@0:8@16@24B32@?36
Vv48@0:8@16@24@32@?40
Vv40@0:8@"NSSet"16@"NSString"24@?<v@?B>32
Vv44@0:8@"TUHandle"16@"NSString"24B32@?<v@?B>36
Vv44@0:8@"NSSet"16@"NSString"24B32@?<v@?B>36
Vv40@0:8@"NSSet"16@"NSString"24@?<v@?Q>32
Vv40@0:8@"NSSet"16@"NSString"24@?<v@?@"NSDictionary">32
Vv48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?B>40
v28@0:8@"NSArray"16B24
@"CSDCallController"16@0:8
v24@0:8@"CSDCall"16
v36@0:8@16i24@28
v32@0:8f16i20@24
v24@0:8B16B20
@"CSDCallController"
@"CSDRecentsController"
@"CSDAudioArbitrationController"
@"CSDRouteController"
@"CSDCallHistoryManagerXPCServer"
@"CSDCallProviderManagerXPCServer"
@"CSDRelayCallDataSource"
@"CSDRelayCallDelegate"
@"TUCarPlayHardwareControlsBroadcaster"
@"CSDCarPlayManager"
@"CSDProviderCallDataSource"
{?="completionTimeMs"b1"timestamp"b1"failed"b1"timedOut"b1}
v24@0:8@?<v@?>16
@"BKSApplicationStateMonitor"
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v40@0:8@"CXNetworkExtensionMessageControllerHost"16@"NSDictionary"24@"NSString"32
v48@0:8@"CXNotificationServiceExtensionVoIPXPCHost"16@"NSDictionary"24@"NSString"32@?<v@?@"NSError">40
@"APSConnection"
@"CXNetworkExtensionMessageControllerHost"
@"CXNotificationServiceExtensionVoIPXPCHost"
@"CSDVoIPApplicationMonitor"
@40@0:8Q16@24@32
@"TUCallServicesClientCapabilities"
@"RBSProcessHandle"
Vv32@0:8@"NSUUID"16@"NSArray"24
Vv32@0:8@"NSSet"16@"NSUUID"24
Vv32@0:8@"TUConversationMember"16@"NSUUID"24
v24@0:8@"<TUConversationManagerXPCClient>"16
v32@0:8@"CSDConversationManager"16@"TUConversation"24
v40@0:8@"CSDConversationManager"16@"TUConversation"24@"TUConversationParticipant"32
v56@0:8@"CSDConversationManager"16@"TUConversation"24@"CSDMessagingConversationMessage"32@"TUHandle"40@"<CSDGroupSessionParticipantUpdateProtocol>"48
v40@0:8@"CSDConversationManager"16@"TUConversation"24@"CXCallFailureContext"32
v24@0:8@"<CSDCallProviderManagerDataSource>"16
@"CSDUserIntentManager"
@"<CSDCallProviderManagerDataSource>"
@"FTNetworkSupport"
@"CMGestureManager"
v40@0:8@"CSDMessagingRelayMessage"16@"IDSDestination"24@?<v@?B@"NSDictionary">32
v32@0:8@"CSDMessagingRelayMessage"16@"IDSDestination"24
v40@0:8@"CSDMessagingRelayMessage"16@"IDSDestination"24@?<v@?@"NSDictionary">32
v40@0:8@"NSDictionary"16@"IDSDestination"24@?<v@?@"NSDictionary">32
v44@0:8@16@24B32@36
@36@0:8I16@20@28
B20@0:8I16
I24@0:8@16
@20@0:8I16
@"NSUserActivity"
@"TUDialRequest"24@0:8@"TUDialRequest"16
v48@0:8@"NSUserActivity"16@"NSString"24@"NSDictionary"32@?<v@?B@"NSError">40
B24@0:8@"NSURL"16
@"NSURL"32@0:8@"NSString"16@"NSURL"24
v24@0:8@"NSArray"16
B24@0:8@"TUCallProvider"16
@"<CSDCallProviderManagerDataSourceDelegate>"16@0:8
v24@0:8@"<CSDCallProviderManagerDataSourceDelegate>"16
@"NSSet"16@0:8
v32@0:8@16r^{__CFString=}24
@24@0:8r^{__CFString=}16
@"<CSDCallProviderManagerDataSourceDelegate>"
@"CSDSandboxExtensionDirectory"
@"CSDCallCenterObserver"
d24@0:8@16
Q24@0:8Q16
@24@0:8q16
@"<CSDMomentsReportingSessionDelegate>"
v32@0:8@16Q24
v40@0:8@"AVCSessionParticipant"16B24B28@"NSError"32
v28@0:8@"AVCSessionParticipant"16B24
v32@0:8@"AVCSessionParticipant"16@"NSDictionary"24
v32@0:8@"AVCSessionParticipant"16Q24
v36@0:8@"AVCSession"16B24@"NSError"28
v32@0:8@"AVCSession"16@"NSError"24
v24@0:8@"AVCSession"16
v44@0:8@"AVCSession"16@"AVCSessionParticipant"24B32@"NSError"36
v44@0:8@"AVCSession"16B24@"AVCSessionConfiguration"28@"NSError"36
v40@0:8@"AVCSession"16B24B28@"NSError"32
v32@0:8@"AVCSession"16@"NSData"24
v32@0:8@"AVCSession"16@"NSDictionary"24
v28@0:8B16Q20
v48@0:8Q16@24@32Q40
v28@0:8@"CSDConversationParticipant"16B24
v24@0:8@"CSDConversationParticipant"16
v48@0:8Q16@"NSNumber"24@"NSNumber"32Q40
@"NSData"16@0:8
@56@0:8@?16@24@32@40@48
@"AVCSession"
@"<CSDAVCSessionDelegate>"
@44@0:8@16B24@28@36
@36@0:8@16@24i32
v24@0:8@"<CSDCoreTelephonyClient>"16
v40@0:8@"<CSDCoreTelephonyClient>"16@"CTXPCContextInfo"24@"CSDCTCallCapabilities"32
v32@0:8@"<CSDCoreTelephonyClient>"16@"NSDictionary"24
v40@0:8@"<CSDCoreTelephonyClient>"16@"CTXPCContextInfo"24@"NSDictionary"32
@40@0:8@16@24B32B36
@"<CSDTelephonyCallCapabilitiesDelegate>"
@"CSDCoreTelephonyClient"
@"<CSDEmergencyCallbackCapabilities>"
{?="deviceType"b1"protoCurrentlyPicked"b1"protoGuest"b1"protoSupportsRelay"b1}
v24@0:8@"CSDRelayCall"16
v32@0:8@"CSDRelayCall"16@"TUAnswerRequest"24
v32@0:8@"CSDRelayCall"16@"TUCall"24
v28@0:8@"CSDRelayCall"16C24
v36@0:8@"CSDRelayCall"16B24@"NSError"28
@"TUDTMFSoundPlayer"
{?="disconnectedReason"b1"type"b1"version"b1"shouldSuppressInCallUI"b1}
{?="timestamp"b1}
@"CSDKeychainPasswordItem"
@"<CXAudioSessionActivationStateObserver>"
B24@0:8{?=ii}16
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSDictionary"24
@"CSDCTCallCapabilities"24@0:8@"CTXPCContextInfo"16
@"NSDictionary"32@0:8@"CTXPCContextInfo"16@"NSString"24
@"NSDictionary"24@0:8@"CTXPCContextInfo"16
v36@0:8@"NSString"16B24@"NSDictionary"28
v44@0:8@"CTXPCContextInfo"16@"NSString"24B32@"NSDictionary"36
v32@0:8@"NSString"16@"CTXPCContextInfo"24
v32@0:8@"CTXPCContextInfo"16@"NSString"24
@"NSString"24@0:8@"NSUUID"16
@"<CSDCoreTelephonyClientDelegate>"16@0:8
v24@0:8@"<CSDCoreTelephonyClientDelegate>"16
@"<CSDCoreTelephonyClientDelegate>"
@"CoreTelephonyClient"
@"CTXPCContexts"
{?="ambiguityState"b1"addCallAllowed"b1"endAndAnswerAllowed"b1"hardPauseAvailable"b1"holdAllowed"b1"holdAndAnswerAllowed"b1"mergeable"b1"sendToVoicemailAllowed"b1"swappable"b1"takingCallsPrivateAllowed"b1}
v32@0:8@"CSDMomentsReportingSession"16@"CSDMomentsUsageReport"24
v24@0:8@"TUConversationManager"16
v32@0:8@"TUConversationManager"16@"TUConversation"24
v36@0:8@16q24i32
v36@0:8@"CSDMomentsController"16q24i32
v32@0:8@"CSDMomentsController"16q24
v40@0:8@"CSDMomentsController"16q24@"NSString"32
v28@0:8q16i24
v36@0:8q16i24@?28
v32@0:8q16@?24
v40@0:8q16@24@?32
@"<CSDCHManager>"
@"IDSDevice"24@0:8@"NSString"16
v32@0:8@"<IDSServiceDelegatePrivate>"16@"NSObject<OS_dispatch_queue>"24
v24@0:8@"<IDSServiceDelegatePrivate>"16
@"IDSDevice"16@0:8
@"IDSAccount"16@0:8
v48@0:8@"CSDIDSDualSession"16@"NSData"24@"IDSDestination"32@"IDSDevice"40
v52@0:8@16@24@32q40B48
v48@0:8@16@24@32q40
v56@0:8@16@24@32q40@?48
v40@0:8@16@?24@?32
v48@0:8@16@24@?32@?40
v52@0:8@16@24@?32B40@?44
v60@0:8@16@24@32@?40B48@?52
v52@0:8@"<CSDFileTransferring>"16@"NSURL"24@"NSDictionary"32B40@"NSString"44
v36@0:8@"<CSDFileTransferring>"16@"NSURL"24B32
v28@0:8@"<CSDAVCMoments>"16I24
v40@0:8@"<CSDAVCMoments>"16@"<CSDAVCMomentsRequest>"24@"NSError"32
v56@0:8@"<CSDAVCMoments>"16@"<CSDAVCMomentsRequest>"24@"NSURL"32@"NSURL"40@"NSError"48
v24@0:8@"<CSDAVCMoments>"16
Vv52@0:8q16@24@32B40@?44
Vv32@0:8q16@?24
Vv44@0:8i16q20@28@?36
Vv24@0:8@?<v@?>16
Vv52@0:8q16@"NSString"24@"NSDictionary"32B40@?<v@?@"TUMomentsCapabilities"@"NSError">44
Vv32@0:8q16@?<v@?@"NSError">24
Vv44@0:8i16q20@"NSString"28@?<v@?@"NSString"@"NSError">36
Vv32@0:8@"NSString"16@?<v@?@"NSError">24
v24@0:8@"<TUMomentsControllerXPCClient>"16
i20@0:8B16
@"<CSDMomentsControllerDelegate>"
@"<CSDFileTransferring>"
@"<CSDMediaAssetManaging>"
@"<TUMomentsControllerXPCClient>"
@"<CSDMomentsServerBag>"
v36@0:8@16q24B32
v36@0:8@16B24q28
v40@0:8@16q24B32B36
v44@0:8@16B24q28@36
v48@0:8@16q24@32@40
v44@0:8@16q24B32@36
v32@0:8@16B24I28
v40@0:8@16B24I28@32
v32@0:8@16I24I28
v36@0:8@"AVConference"16q24B32
v36@0:8@"AVConference"16B24@"NSDictionary"28
v40@0:8@"AVConference"16q24@"NSError"32
v32@0:8@"AVConference"16@"NSData"24
v32@0:8@"AVConference"16q24
v40@0:8@"AVConference"16@"VideoAttributes"24q32
v36@0:8@"AVConference"16B24q28
v24@0:8@"AVConference"16
v40@0:8@"AVConference"16q24@"NSDictionary"32
v40@0:8@"AVConference"16q24B32B36
v40@0:8@"AVConference"16@"NSData"24q32
v44@0:8@"AVConference"16B24q28@"NSError"36
v48@0:8@"AVConference"16q24@"NSError"32@"NSDictionary"40
v44@0:8@"AVConference"16q24B32@"NSError"36
v32@0:8@"AVConference"16B24I28
v40@0:8@"AVConference"16B24I28@"NSError"32
v32@0:8@"AVConference"16I24I28
v28@0:8@"AVConference"16I24
v28@0:8@"AVConference"16f24
v28@0:8@"AVConference"16B24
v48@0:8{CGSize=dd}16{CGSize=dd}32
B28@0:8i16@20
B52@0:8B16@20@28@36^@44
B40@0:8B16@20i28^@32
v56@0:8q16@24d32@?40@48
B28@0:8i16@"RTCSecureHierarchyToken"20
B52@0:8B16@"NSDictionary"20@"VCCapabilities"28@"NSString"36^@44
B40@0:8B16@"VCCapabilities"20i28^@32
v56@0:8q16@"NSDictionary"24d32@?<v@?@"NSDictionary"@"NSError">40@"NSObject<OS_dispatch_queue>"48
@"<CSDAVConferenceProviderDelegate>"16@0:8
v24@0:8@"<CSDAVConferenceProviderDelegate>"16
@"<CSDAVConferenceProviderDelegate>"
@"AVConference"
@"TUVideoDeviceController"
@"CSDProviderCall"
v48@0:8@"CXCallControllerHost"16@"NSString"24@"CXTransaction"32@?<v@?@"NSError">40
@"CXCallSource"24@0:8@"NSString"16
v24@0:8@"TUCall"16
v44@0:8@16@24f32q36
v32@0:8@"CXCallSource"16@"CXProviderConfiguration"24
v48@0:8@"CXCallSource"16@"NSUUID"24@"CXCallUpdate"32@?<v@?@"NSError">40
v40@0:8@"CXCallSource"16@"NSUUID"24@"CXCallUpdate"32
v56@0:8@"CXCallSource"16@"NSUUID"24@"NSDate"32q40@"CXCallFailureContext"48
v40@0:8@"CXCallSource"16@"NSUUID"24@"NSDate"32
v32@0:8@"CXCallSource"16@"NSUUID"24
v48@0:8@"CXCallSource"16@"NSUUID"24@"NSData"32q40
v44@0:8@"CXCallSource"16@"NSUUID"24f32q36
v48@0:8@"CXCallSource"16@"NSUUID"24@"NSString"32q40
v40@0:8@"CXCallSource"16@"CXTransaction"24@?<v@?@"NSError">32
B40@0:8@16@24^@32
v32@0:8@"CXCallSourceManager"16@"CXTransactionGroup"24
v24@0:8@"CXCallSourceManager"16
B40@0:8@"CXCallSource"16@"CXAction"24^@32
@"CXCallSource"24@0:8@"TUDialRequest"16
@"CXCallSource"24@0:8@"TUJoinConversationRequest"16
@"TUCallProvider"24@0:8@"NSString"16
v32@0:8@"CXCallAction"16@"CSDProviderCall"24
v32@0:8@"NSArray"16@"CSDProviderCall"24
v32@0:8@"CXStartCallAction"16@"CSDProviderCall"24
B44@0:8@16@24B32^@36
B36@0:8@16@24B32
@"CSDCallFilterManager"
@"CSDVoIPProcessAssertionManager"
@"CXCallSourceManager"
@"CXCallControllerHost"
@"CXInProcessCallSource"
@"CSDFaceTimeProviderDelegate"
@"<CXProviderDelegatePrivate>"
@"CSDCallSourceFetcher"
@"CSDScreenTimeCallFilter"
@"<CSDManagedDeviceMonitor>"
@"<CSDRouteManager>"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v40@0:8@?16@?24@32
^v16@0:8
v40@0:8@?16@24@32
@?32@0:8@16@?24
@?24@0:8@?16
@"NSXPCInterface"
@"NSObject<OS_dispatch_semaphore>"
v48@0:8{?=[8I]}16
{?="val"[8I]}
@32@0:8q16@24
v32@0:8@"CXCallDirectoryNSExtensionManager"16@"NSArray"24
@"CXCallDirectoryManager"
@"CXCallDirectoryNSExtensionManager"
enabled: %d
accelerometer orientation changed to %ld
Beginning transaction for %@. Transaction count is now %lu. Added transaction: %@
Ending transaction for %@. Transaction count is now %lu. Ended transaction: %@
CSD encountered a fault with reason: %@
Invalidating process assertion for %@
Preparing conference with configuration: %@
Initializing new callID with device role %d
Fetched local invite dictionary: %@
Error fetching local invite dictionary %@: %@
Fetching local invite dictionary using remote invite dictionary %@
Failed to initialize a new call with device role %d.
Failed to create an AVConference instance. This usually happens when the AVConference SPI can't communicate with mediaserverd over XPC
[WARN] Attempted to prepare conference which has already started preparing (state=%d)
transport: %@ self.configuration: %@
Successfully started connection with configuration=%@ (timestamp: %f)
Failed to start connection with configuration=%@: %@
[WARN] Attempted to start conference which has not been prepared (state=%d)
[WARN] Conference does not exist
Delaying stop on conference...
Calling stop on conference %@
Calling cancel on conference %@
[WARN] Attempted to cancel a conference that has already started connecting: %@
Setting remote invite dictionary from %@ to %@
Setting caller from %d to %d
Attempting to set state to %d, which precedes current state %d
Setting microphoneMuted to %d for %@
Setting sendingAudio to %d
Setting sendingAudioData to %d
Setting conferenceProvider videoPaused to %d
Setting sendingVideo to %d
State is %d, updating isVideoPausedToStart from %d to %d
Updating capabilities from: %@ to %@
Setting remoteVideoPresentationSize from %@ to %@
Setting remoteVideoPresentationState from %d to %d
Conference didStart timeout fired
Updating device role from %d to %d
conference=%@ didStartSession=%d error=%@
Successfully started session
Session is connected, setting videoPaused to expected value: %d
[WARN] Session is already past Connected state, not sending delegate started
Failed to start session. error=%@
didStopError=%@ callMetadata=%@
AVConference stopped in failure: %{public}@
Sending delegate bytesOfDataUsageChanged: %ld
didPauseAudio=%d error=%@
didPauseVideo=%d error=%@
Not setting sendingVideoExpected to nil since our state is %d
Video was set to didPauseVideo: %d sendingVideoExpected: %@. Setting sendingVideo to sendingVideoExpected
remoteVideoPaused=%d
remoteMediaStalled=%d
Server died for conference provider %@
Registering to handle call handoff activity type with dynamic identifier %@ for provider %@
Frontmost call is hosted here ...
... and it is an endpoint here ...
... and we are a secondary device ...
... using a broadcast activity with dynamic identifier: %@.
[WARN] ... but no dynamic identifier could be found (%d) or no handoff user info exists (%d). Not broadcasting frontmost call
... but we are a primary device. Not broadcasting frontmost call
... and it is being relayed elsewhere. Using a local activity
Beginning handoff activity %@ for call %@
Ending handoff activity: %@
Broadcasting suppress ringtone activity for declined call: %@
Began app history activity %@ for call %@
Broadcasting suppress ringtone activity for call that suppressed its ringtone: %@
Broadcasting suppress ringtone activity for incoming call that started connecting: %@
Received broadcast for activity type %d and destination ID %@. Suppressing ringtone due to remote suppression for call %@
Received broadcast for activity type %d but ignoring it because its destination ID (%@) does not match this ringing call's desination ID (%@)
Calling ADClientSetValueForDistributionKey() with key %@ and value %f
Asking BackBoard to set the proximity detection mode to (%u).
Handling proximity sensor covered changed to %d
VoiceOver is enabled and the proximity sensor is covered, changing the audio route from speaker to receiver.
VoiceOver is enabled and the proximity sensor is uncovered, changing the audio route from receiver to speaker.
Proximity detection should be %d since isReceiver: %d, isSpeaker: %d, isVoiceOverRunning: %d
Proximity detection should be %d since isEndpointOnCurrentDevice: %d, isInterfaceOrientationPortrait: %d, isRTT: %d, isTTY: %d
[WARN] Tried to get the call history identifier for this call (%@) but no conference ID was available (%@), we'll fall back to another method (GUID = %@). This call may now not sync properly between devices.
This chat's conferenceID and GUID are nil or empty, we cannot create a safe call history identifier
[WARN] Could not weak link notification string '%@'. Not observing notifications for it.
Calling endChatWithReason on chat %@ with reason %ld
Asked to end chat with UUID: %@, reason: (%ld) but could not find it
Using account %@
Inviting additional peers %@, excluding push tokens %@
Registering imav chat %@
Could not initiate FaceTime call - No chat returned for handle %@ with account %@
Could not initiate FaceTime call - No IM handle returned for handle %@ with account %@
Could not initiate FaceTime Call - Account %@ not registered
Legacy chat with matching UUID connected; attempting to fulfill pending answer call action %@
Legacy chat did not provide a connection date; Could not fulfill answer call action %@
[WARN] No pending answer call actions found with UUID: %@
Failing answer call action for chat because it ended before connecting: %@
Using call ended reason remote hangup because ended reason is %@
Using call ended reason answered elsewhere because ended reason is %@
Using call ended reason declined elsewhere because ended reason is %@
Using call ended reason unanswered because ended reason is %@
Using call ended reason failed because ended reason is %@
Incoming call was denied with error %@ so declining chat with IMAVResponseFilteredCall: %@
Calling acceptInvitation on chat %@
Not accepting invitation to chat %@ since it is already Connected
Calling endChat on chat %@
Calling setIsSendingAudio with %d for chat %@
Not holding chat %@ since it is not yet Connected
Calling setIsSendingVideo with %d for chat %@
Calling setRemoteVideoPresentationSize with %@ for call %@
Calling setRemoteVideoPresentationState with %ld for chat %@
Calling setRelayed with %d for chat %@
Calling setMuted with %d for chat %@
Requesting remote active participants for cached conversation with UUID: %@
Setting audioEnabled to %d
Setting videoEnabled to %d
Setting videoPaused to %d
Adding participant: %@
Removing active participant and replacing it with one with the same identifier but a newer AVC data blob.
[WARN] Conversation already contains participant with no change in AVC data: %@
Removing participant with identifier: %lu  handle: %@
 Found matching handle %lu: %@
[WARN] removeParticipantWithIdentifier:fromHandle: Not removing participant handle (%@) didn't match, with identifier %lu: %@
[WARN] removeParticipantWithIdentifier:fromHandle: Could not find participant with identifier %lu: %@
remoteMembers: %@ triggeredLocally: %d
Conversation %@ already contains member with handle %@, filtering out.
[WARN] No new members were added to conversation: %@
self: %@ context: %@
Creating CSDAVCSession with transport token %@
Not joining IDS group session because wantsStagingArea or shouldShowDebugOverlay is true, instead moving to preparing state
Failed to create CSDAVCSession
[WARN] Not joining conversation because it isn't waiting or preparing: %@
[WARN] Not sending local participant data, no AVCSession: %@
[WARN] Not starting audio for conversation because it isn't joining: %@
self: %@
Leaving CSDIDSGroupSession: %@
[WARN] Not leaving conversation because it isn't joining/joined: %@
Updated debug link with context for conversation %@
Starting %@
Skipped starting session since session start is already in progress %@
[WARN] Timed out waiting for session to stop after %@, moving to waiting state and cleaning up.
Timed out waiting for conversation to leave, but it's not in state leaving (instead is in %i).
Timed out requesting AVC blob for participant with identifier: %@
Replacing existing recovery timeout for participant with identifier %lu
Setting up AVC blob recovery timeout for participant with identifier %lu
Cancelling in flight AVC blob recovery for participant with identifier %lu
Pruning remote participants as necessary, current server identifiers: %@
didJoinGroup: %d error: %@
Failed to join group: %@
CSDIDSGroupSession %@ failed to leave group for conversation %@: %@
error: %@
Invalidating cached conversation: %@, no remote active participants were found.
Activating cached conversation with UUID: %@ since %lu remote participants were still found to be active.
AVCProviderEndReason=%d error.code=%d detailedError=%d
AVCProviderEndReason=%d, this should not happen
No error with a failed start from AVC using %d
didStart: %d error: %@
Found expectedVideoEnabled: %@, updating value to match state
Not in the joining state so not moving to joined
Failed to start CSDAVCSession: %@
didDetectError: %@
Rebroadcasting AVC data to other members of this group to attempt to recover from error (last rebroadcast time was %f).
Not attempting to rebroadcast message since state was not in join (was %d)
AVCSession %@ stopped in failure for conversation %@: %@
CSDAVCSession %@ server did disconnect for conversation %@
changedLocalAudioEnabled=%d
Failed to set localAudioEnabled (%d): didSucceed (%d): error: %@
Audio was set to audioEnabled: %d self.expectedAudioEnabled.boolValue: %@. Setting audioEnabled to self.expectedAudioEnabled.boolValue
changedLocalVideoEnabled=%d
Failed to set localVideoEnabled (%d): didSucceed (%d): error: %@
[WARN] Skipping to set localVideoEnabled (%d) error: %@
Video was set to videoEnabled: %d self.expectedVideoEnabled.boolValue: %@. Setting videoEnabled to self.expectedVideoEnabled.boolValue
changedLocalVideoPaused=%d
Failed to set localVideoPaused (%d): didSucceed (%d): error: %@
Video paused was set to videoPaused: %d self.expectedVideoPaused.boolValue: %@. Setting videoPaused to self.expectedVideoPaused.boolValue
[WARN] Unknown participant with identifier: %lu activeRemoteParticipants: %@
Ignoring %@ message because we already have a call with this uniqueProxyIdentifier: %@
We already have a call for this %@ message: %@. Updating it with new values
Creating new call for %@ message
[WARN] Ignoring %@ message because no call exists for %@ and the message is not from the paired device
[WARN] Could not find call with uniqueProxyIdentifier %@. All current calls: %@
Call answered elsewhere message had no uniqueProxyIdentifier set. Using current calls
Resetting call %@ with protoCall %@
Not resetting call %@ with protoCall %@ because they are equal
Creating new call with protoCall %@
Existing call no longer exists and is not sending: %@
handleUpdateRemoteCallStateMessageFromHost %@
Updating call %@ with protoCall %@
Not updating call %@ with protoCall %@ because they are equal
[WARN] Received %@ message, but we already have some calls
Ignoring %@ because messageSendTime (%f) <= call.remoteUplinkMutedSetTime (%f)
Pulling remotely hosted call: %@
Failed to prepare conference for pull message %@ and call %@
Fetching localSenderIdenity for localSenderIdentityAccountUUID %@
Replacing hardPauseDigits '%@' with '%@' since protocolVersion is %d
Replacing soundRegion %ld with %ld since protocolVersion is %d
Created pause digits queue: %@
Setting disconnected reason to dial failed because call is outgoing but has not started outgoing
Setting disconnected reason to remote hangup because ended reason is %ld
Setting disconnected reason to remote hangup because call has started connecting and ended reason is %ld
Setting disconnected reason to remote hangup because outgoing call has not started connecting and ended reason is %ld but call is a telephony call
Setting disconnected reason to remote unavailable because outgoing call has not started connecting and ended reason is %ld
Setting disconnected reason to answered elsewhere because ended reason is %ld
Setting disconnected reason to declined elsewhere because ended reason is %ld
Setting disconnected reason to handed off because ended reason is %ld
Setting disconnected reason to user busy because ended reason is %ld
Setting disconnected reason to call failed because failure reason is %ld
Setting disconnected reason to account unsupported because failure reason is %ld
Setting disconnected reason to network unsupported because failure reason is %ld
Setting disconnected reason to provider crashed because failure reason is %ld
Setting disconnected reason to media start failed because failure reason is %ld
Setting disconnected reason to media server crashed because failure reason is %ld
Setting disconnected reason to other secondary device in use because failure reason is %ld
Setting disconnected reason to call failed because ended reason is %ld
Failed to find a call source to dial with for dial request: %@
for call: %@ pauseDigitsQueue: %@
[WARN] Next pause digits are not hard pause
[WARN] No next pause digits exist
for call: %@ key: %d
for call: %@ remoteVideoPresentationSize: %@
for call: %@ remoteVideoPresentationState: %d
Dequeueing next pause digits
Sending pause digits: %@ type: %ld
Found queued soft pause digits: %@
for pauseDigitsQueue: %@
Break before make timeout: %lfs
Determined wants break before make is %@ (supportsSimultaneousVoiceAndData: %@, nonWifiFaceTimeAvailable: %@, wiFiActiveAndReachable: %@) for call %@
Could not determine whether device wants break before make; could not obtain sender identity capabilities for call %@
Could not determine whether device wants break before make; could not obtain local sender identity for call %@
Call started outgoing: %@
Disconnecting video call because another call started outgoing: %@
Disconnecting call using the baseband because a video call started outgoing and wantsBreakBeforeMake=YES: %@
All calls ended. Setting uplink and downlink muted to NO
Call started connecting: %@
%@ is handling %@
Video call connected: %@
Disconnecting current call because another video call connected: %@
Ending current active call %@ because call %@ is going to go active
Reporting emergency call to screen time
There was an error enabling emergency mode. Enabled successfully (%d) Error: %@
Posting CLTM notification %@ and setting state to %llu
Requesting to pull call %@ because its continuity state is different from call %@
Disconnecting call %@ because its continuity state is different from call %@
An endpointIDSDestination %@ is present for call %@ so pushing all hosted calls to that destination
An endpointRapportMediaSystemIdentifier="%@" or endpointRapportEffectiveIdentifier="%@" is present on dial request for call %@ so attempting to pick matching route
Setting up break before make timeout for call: %@
Disconnecting call because video call is still sending and break before make timeout fired: %@
CarPlay is not connected; muting uplink for RTT call %@
CarPlay is connected; unmuting uplink for RTT call %@
Setting uplink muted for TinCan call %@
[WARN] Store demo mode enabled. Limiting certain calls
Starting call duration limit timer as we are in a retail environment
Stopping call duration limit timer
Disconnecting restricted calls because the limited call duration timer fired: %@
Found active call needing hold music: %@
Hold music enabled - call is active so muting uplink and downlink
Hold music disabled - unmuting uplink and downlink
Created status bar assertion %@ with pid %d and statusString %@
Successfully acquired status bar assertion: %@
Failed to acquire status bar assertion: %@
Status bar assertion invalidated: %@
Invalidating status bar assertion: %@
TUOpenURLWithCompletion result: %@, error: %@
Encountered error while opening URL: %@
Punching out to app with bundle identifier %@
Successfully launched application with bundle identifier %@
Attempt to open application with bundle identifier %@ failed with error %@
added service provider uuid=%@ carrierPhoneNumbers=%@
Retrieved carrier phone number '%@' for subscription %@
Retrieving carrier phone number for subscription %@ failed with error %@
Carrier bundle changed for subscription context %@
Creating IDSGroupSession with options: %@
preferences: %@
options: %@
participantDestinationIDs: %@ contextData: %@ triggeredLocally: %d
Sending participantData: %@
session: %@
self: %@ not running pending blocks yet because self.hasStarted=%d self.hasReceivedAccept=%d self.isInitiator=%d
self: %@ running block %@ with transport %@ and %@ accept payload data
self: %@ pending block on transport availability: %@
[WARN] Transport availability block timed out: %@
Session %@ is not connected and waitUntilConnected is YES. Pending data
Session %@ is not connected but waitUntilConnected is NO. Sending data
Session %@ is connected. Sending data
Session %@ is ending/ended. Dropping data on the floor
self: %@ destinations: %@
Session %@ is waiting. Sending data
Session %@ is not waiting. Dropping data on the floor
self: %@ data: %@
Setting session %@ to ending for prepareToEnd
Not setting session %@ to ending for prepareToEnd because session is not connected
Received invitation ACCEPT with data for session %@ from (fromID=%@) destination %@ device %@
Received invitation CANCEL with data for session %@ from (fromID=%@) destination %@ device %@
Received invitation DECLINE with data for session %@ from (fromID=%@) destination %@ device %@
Received session MESSAGE for session %@ from (fromID=%@) destination %@ device %@
thumperCallingAllowedOnDefaultPairedDeviceDefault keyExists: %d isAllowed: %d
Setting %@ default to %d
Error synchronizing NPS defaults: %@
Dismissing Thumper available notification on secondary device for account ID %@
Displaying Thumper enabled disclaimer on secondary device for account ID %@
Dismissing Thumper enabled disclaimer on secondary device for account ID %@
Could not obtain Thumper account identifier for sender identity UUID %@ from data source capabilities state %@
Comparing cached Thumper capabilities state %@ with data source capabilities state %@
Should show Thumper available notification for account ID %@
Default paired device unique ID was %@ and is now %@
Check if devices should be enrolled now that the default paired device changed.
Checking to see if any devices have been removed from this iCloud account.
Device with the uniqueID %@ will be unpaired from Thumper because it is no longer on the IDSService.
%@ is handling add capabilities for sender identity UUID %@
Thumper calling preferences update initiated by add capabilities for sender identity UUID %@
Skipping Thumper preferences update; Thumper capabilities state does not exist for UUID %@
%@ is handling remove capabilities for sender identity UUID %@
Thumper calling preferences update initiated by remove capabilities for sender identity UUID %@
Skipping Thumper calling preferences update; unknown context info found for sender identity UUID %@
%@ is handling change Thumper calling capabilities for sender identity with UUID %@
Show a reminder to the user that thumper is now available.
User requested to Turn On Thumper calling
[WARN] Not adding user notification because we are already displaying one
Removing existing reminder notification
Show a disclaimer to the user about their emergency address info now that thumper is enabled.
Emergency Address disclaimer: Preferences button pressed, open URL (%@).
Removing existing emergency address disclaimer
Archiving Thumper capabilities state object failed with error %@
Unarchiving Thumper capabilities state object failed with error %@
Archived object was of unexpected class %@: %@
Prefereces object was of unexpected class %@: %@
Initializing %@
FaceTime Audio availability is %ld. FaceTime Video availability is %ld
Initialized %@
Active accounts changed for service %@: %@
Received caller ID changed notification: %@
Received service availability changed notification: %@
Received devices changed notification: %@
FaceTime iCloud account is %@ (isActive=%d, profileID=%@) and relay iCloud account is %@ (isActive=%d, profileID=%@)
FaceTime caller ID %@ is not a valid outgoing relay caller ID
Attempting to find a valid outgoing caller ID in set of available outgoing caller IDs %@
Selected outgoing caller ID %@ from list of available outgoing caller IDs %@
Could not automatically select an outgoing caller ID; multiple telephone numbers are listed in the set of available outgoing caller IDs %@
Attempting to find a valid outgoing caller ID in list of vetted account aliases %@
Selected outgoing caller ID %@ from list of vetted account aliases %@
Could not automatically select an outgoing caller ID; multiple telephone numbers are listed in the set of vetted account aliases IDs %@
Outgoing Caller ID is %@
streamPreferences: %@
XPC connection interrupted from client %@
XPC connection invalidated from client %@
callProviderIdentifier: %@
dialRequest: %@
Could not determine UUID for FaceTime app bundle identifier %@
Setting disconnected reason to call failed because invitation was sent but no push tokens were available to receive the invitation for call %@
Setting disconnected reason to call failed because CSDIDSDualSession ended reason is %ld for call %@
Using call ended reason answered elsewhere because CSDIDSDualSession ended reason is %ld
Using call ended reason declined elsewhere because CSDIDSDualSession ended reason is %ld
Using call ended reason unanswered because CSDIDSDualSession ended reason is %ld
Using call ended reason remote ended because CSDIDSDualSession ended reason is %ld
Setting disconnected reason to call failed because CSDAVConference ended reason is %ld for call %@
Using call ended reason remote ended because CSDAVConference ended reason is %ld
Setting local portrait aspect ratio %@ and local landscape aspect ratio %@
[WARN] Disabling key exchange because %@ default is set to YES
videoAspectRatioDescriptor: %@
Canceling session
Declining session
Stopping conference
Ending session
for call %@
Setting isSendingAudio to %d for chat %@
Conference has not been created yet. Updating shouldStartAudioPaused to %d
Setting isSendingAudioData to %d for chat %@
Setting isSendingVideo to %d for chat %@
Conference has not been created yet. Updating shouldStartVideoPaused to %d
Setting relaying from %d to %d for chat %@
transport: %@
sessionStarted: %@
Not starting connection because conference state is %d
session %@ invitationSentToPushTokens %@ shouldBreakBeforeMake %d
session %@ endedWithReason %d
session %@ receivedInvitationAcceptWithData %@
[WARN] Ignoring invitation accept since chat is incoming %@
[WARN] Ignoring invitation accept since there is no remote from ID set on the session.
Dropping invitation accept since there is no remote push token provided.
Dropping invitation accept since the remote push token was not one of the ones we invited.
[WARN] Ignoring incoming accept since accompanying message was nil
[WARN] Ignoring incoming message since message with type=%@ was not invite.
Error while creating UUID from protoUUID: %@
[WARN] Not setting upgradeSessionUUID for message: %@ self.upgradeSessionUUID: %@
Not starting connecting because session state is %d and conference state is %d
session %@ receivedInvitationDeclineWithData %@
session %@ receivedInvitationCancelWithData %@
session %@ receivedData (data is %@)
message: %@
[WARN] First frame not received after %f seconds for %@
reason=%ld error=%@
Remote media stalled for chat: %@. Reconnecting IDS session.
[WARN] Error encountered resolving behavior via DND. Defaulting isDestinationIDAllowedThroughDoNotDisturb to YES. error=%@
Handling %@ by preparing connected sessions to end
Handling %@ by ending ending sessions
CSDMessagingCallMessage could not be read
Handling %@ with message: %@ latency: %llu
CSDMessagingCallMessage is of unsupported type: %d
Updating dialingIDSDevice using device list %@
A paired device exists, so using that as the dialing device: %@
[WARN] We found two devices with matching linkedUserURIs (arbitrarily choosing the first): %@ and %@
A device exists with a linkedUserURI that matches Caller ID %@, so using that as the dialing device: %@
[WARN] Could not find a dialingIDSDevice. No paired devices exist and no devices that support phone calls and have a linkedUserURI for %@ exist.
Could not retrieve local invite dictionary for message: %@
(IDSMessaging Host->Client) sendIncomingCallMessageToClientForCall: %@
Call cannot be answered. Only notifying the paired device
[WARN] Failed to prepare conference for call %@. Not sending incoming call message to relay clients
Not sending out incoming call invitation because call is no longer ringing: %@
(IDSMessaging Host->Client) sendCallDialedMessageToClientForCall: %@
(IDSMessaging Host->Client) sendCallAnsweredElsewhereMessageToClientForCall: %@
(IDSMessaging Host->Client) sendCallDisconnectedMessageToClientForCall: %@
(IDSMessaging Host->Client) sendCallConnectedMessageToClientForCall: %@
(IDSMessaging Host->Client) sendResetWantsHoldMusicMessageToClientForCall: %@
(IDSMessaging Host->Client) sendUpdateCallDisplayContextMessageToClientForCall: %@
(IDSMessaging Host->Client) sendUpdateRemoteUplinkMutedCallMessageToClientForCall: %@
(IDSMessaging Host->Client) sendUpdateSupportsTTYWithVoiceCallMessageToClientForCall: %@
(IDSMessaging Host->Client) sendUpdateCallModelMessageToClientForCall: %@
(IDSMessaging Host->Client) sendDeviceUnavailableMessageToClient
(IDSMessaging Host->Client) sendPullRelayingCallsMessageToClient
(IDSMessaging Host->Client) sendResetStateMessageToClient
(IDSMessaging Host->Client) sendHardPauseAvailabilityMessageToClientForState %d digits: %@
(IDSMessaging Host->Client) sendUpdateRemoteCallStateMessageToClient
(IDSMessaging Host->Client) sendCallStartedConnectingMessageToClientForCall: %@
(IDSMessaging Host->Client) sendDialCallFailedForUniqueProxyIdentifier: %@
(IDSMessaging Host->Client) sendDialCallFailedForScreenTimeForUniqueProxyIdentifier: %@
(IDSMessaging Host->Client) sendPushCallsMessageToClientDestination: %@
Allowing call: %@ to be pushed to destination: %@
Skipping call: %@ to track for pushing to destination: %@
Found no calls to send sendPushCallsMessageToClientDestination
(IDSMessaging Host->Client) Sending UpdateCallContext message: %@
(IDSMessaging Host->Client) sendNeedsManualInCallSoundsChangeMessageToClientForCall: %@
(IDSMessaging Host->Client) sendInvitationSentMessageToClientForCall: %@
(IDSMessaging Host->Client) sendUpdateRoutesMessageToClientForRoutes: %@
(IDSMessaging Client->Host) sendDialCallMessageToHostForCall: %@
No dialing IDS device found. If we aren't already in a session, this dial call attempt will fail.
Failed to prepare conference for call %@. Disconnecting call with conference failed
Not sending out dial call invitation because call is no longer sending: %@
(IDSMessaging Client->Host) sendAnswerCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendDisconnectCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendHoldCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendUnholdCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendGroupCallMessageToHostForCall: %@ otherCall: %@
(IDSMessaging Client->Host) sendUngroupCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendSwapCallsMessageToHost
(IDSMessaging Client->Host) sendEndActiveAndAnswerCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendEndHeldAndAnswerCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendHoldActiveAndAnswerCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendDisconnectCurrentCallAndActivateHeldToHost
(IDSMessaging Client->Host) sendDisconnectAllCallsToHost
(IDSMessaging Client->Host) sendSendHardPauseDigitsMessageToHost
(IDSMessaging Client->Host) sendRequestCallStateMessageToHost
(IDSMessaging Client->Host) sendPullCallsMessageToHost
[WARN] Failed to prepare conference while pulling calls
(IDSMessaging Client->Host) sendPushRelayingCallsMessageToHostForSourceIdentifier: %@
(IDSMessaging Host->Client) sendUpdateRemoteUplinkMutedCallMessageToHostForCall: %@
(IDSMessaging Host->Client) sendPickRouteMessageToHostForRoute: %@
(IDSMessaging Client<->Host) sendSetTTYTypeCallMessageForCall: %@ ttyType: %d
(IDSMessaging Client<->Host) sendSetUplinkMutedCallMessageForCall: %@ uplinkMuted: %d
(IDSMessaging Client<->Host) sendSuppressRingtoneMessageForCall
(IDSMessaging Client<->Host) sendUpdateSystemVolumeForCall: %@
[WARN] We determined that device is null and destination: %@ is not guest. Ignoring incoming message: %@
Handle incoming %@ message: %@
[WARN] We determined that device: %@ cannot process messages for provider %@. Ignoring incoming message: %@
[WARN] Screen Time restricted the call for dial call message with destinationID %@ and provider: %@ is emergency: (%d)
[WARN] Ignoring %@ relay message since our device does not suppport processing messages of that type.
Messaging device can't receive relayed calls ...
... and we were told to decline the session invite. Declining incoming %@ message: %@
... and we were told not to decline the session invite. Ignoring incoming %@ message: %@
[WARN] Setting should ignore session to YES for %@ message because message is from a guest destination and this device is not an AudioAccessory
Query result: %@ for handle: %@ provider: %@
[WARN] Setting should ignore session to YES because TUICFInterface allowCall = NO for destinationID %@ and provider %@
[WARN] Setting should ignore session to YES because a call exists with sending status: %@
[WARN] Setting should ignore session to YES because screen time filtered message for destinationID %@ and provider %@ with emergency (%d)
[WARN] Setting should ignore session to YES because relay is not preferred, message provider is Telephony, and isDirectTelephonyCallingCurrentlyAvailable is YES
[WARN] Setting should ignore session to YES because relay is not preferred, message provider is FaceTime Audio, and isDirectFaceTimeAudioCallingCurrentlyAvailable is YES
[WARN] Setting should ignore session to YES because relay is not preferred, message provider is FaceTime Video, and isDirectFaceTimeVideoCallingCurrentlyAvailable is YES
[WARN] Setting should ignore session to YES because relay is not preferred, message provider is TinCan, and isDirectFaceTimeAudioCallingCurrentlyAvailable is YES
[WARN] Setting should ignore session to YES because no calls exist with an endpoint on the current device: %@
Initializing CSDDaemon
Launched by IMDaemon notification
Launched by application installed notification
Launched by application uninstalled notification
Could not create notification for XPC event %@
Caught SIGINFO. Dumping debug info.
Caught SIGUSR1
Caught SIGUSR2
Created call center: %@
Performing user configuration migration
Did not find default to enable LivePhotoXPCService - using old moments stack
Initialized CSDDaemon
Calling xpc_transaction_exit_clean() due to language change
failed to initialize temporary directory (%d): %s
failed to resolve temporary directory (%d): %s
User configuration changed
Used country code '%@' to determine international phone number representation: %@
Determined that invite should be %@ - (isWiFiAvailable=%d isWiFiAllowed=%d isCellularDataAvailable=%d isCellularDataAllowed=%d shouldOverrideNetworkAsAvailable=%d)
Invite received for service %@ account %@ from (fromID=%@) with context: %@
Recieved pending message of type %ld
Incoming call was denied with error %@ so ignoring chat: %@
Not handling pending message of type: %ld
Invite received for session %@ account %@ from (fromID=%@) with data: %@
Declining this invite because we found a sending chat with the same destination: %@
Incoming call was denied with error %@ so declining chat: %@
Ignoring incoming invite since shouldAcceptIncomingInvite is %d
Ignoring incoming invite since message with type=%@ was not an invite.
[WARN] Ignoring incoming invite since accompanying message was nil
provider: %@
Calling answer on chat %@
Not accepting invitation to call %@ since it is already Connected
Calling end on chat %@
Setting sendingAudio to YES for chat %@
Setting sendingAudio to NO for chat %@
Chat with matching UUID connected; attempting to fulfill pending answer call action %@
Chat did not provide a connection date; Failing answer call action %@
Failing answer call action for call because it disconnected before connecting: %@
[WARN] called for session %@ that was not the initiator (%d) or that already had a version set (%d)
Session %@ is waiting. Sending invitation
Session %@ is not waiting. Not sending invitation
Session %@ is waiting. Accepting invitation
Session %@ is not waiting. Not accepting invitation
Session %@ is waiting. Canceling invitation
[WARN] Asked to cancel invitation with non-nil data and a concrete cancel reason, but that combination is unsupported
Session %@ is not waiting. Not canceling invitation
Session %@ is waiting. Declining invitation
Session %@ is not waiting. Not declining invitation
Session %@ started (shouldUseSocketForTransport: %d socket: %d, destination: %@)
Received invitation SENT for session %@ with tokens %@ shouldBreakBeforeMake %d
Session %@ ended with reason %d: %@
Session %@ appears to have ended with an unanswered reason: %d
Session %@ appears to have ended with a local hangup reason: %d
Session %@ appears to have ended with a remote hangup reason: %d
Session %@ appears to have ended with an accepted elsewhere reason: %d
Session %@ appears to have ended with a declined elsewhere reason: %d
Session %@ appears to have ended with a fatal reason: %d
Session %@ appears to have ended due to mismatched networks reason: %d
Received invitation ACCEPT with data for session %@ from %@
Received invitation CANCEL with data for session %@ from %@
Received invitation DECLINE with data for session %@ from %@
Received session MESSAGE for session %@ from %@
Got metric container for metricId=%lu
Skipping reporting for metricId=%lu since no metric container was provided
Generated end call metric=%@
Found matching account: %@ for uuid: %@
Found matching account: %@ for uuid: %@ but it was not active and cannot be used for FaceTime.
[WARN] Server bag does not support quick relay
Server bag is not loaded. Assuming we can make a FaceTime call over quick relay
Starting FaceTime IDS chat using account: %@ destinations: %@ options: %@
Cannot start FaceTime IDS chat using handle %@ because IDS destination was '%@'
Cannot start FaceTime IDS chat using service %@ because account is not active: %@
Tried to make an outgoing call when we already had a ringing call with the same destination: %@
Requesting transaction to answer already-ringing call
Requested transaction to answer already-ringing call with UUID %@ failed with error %@
Successfully requested transaction to answer already-ringing call
[WARN] Not attempting to use IDSSession for outgoing FT call because server bag does not allow quick relay invitations
[WARN] Found a chat to upgrade: %@
Unable to convert to remoteIDSToken: %@
Unable to find existing chat for conversation: %@
Found existing chat: %@ for conversation: %@
[WARN] Failing action %@ we determined that chat %@ cannot be upgraded.
%@ Auto-upgrading because chatToUpgrade is %@, isConnected: %d, isVideo: %d, isSendingVideo: %d, isSendingAudio: %d isChatPendingUpgrade: %d
Upgrading chat: %@
Ending chat that is being upgraded: %@
[WARN] Could not find chat with UUID %@. All chats: %@
Matching sender identities %@ to IDS accounts %@
Updating FaceTime provider with configuration %@
service: %@ activeAccountsChanged: %@
Ignoring %@ because messageSendTime (%f) <= call.uplinkMutedSetTime (%f)
[WARN] Ignoring received request action message because it has a request action type we don't know how to handle: %@
transferFileAtURL: %@, destinations: %@
placing unzip results into folder %@
new directory urls: %@, unzippedDirectoryURL: %@
Error retrieving contents of directory at URL %@: %@
temporaryClientFileURL: %@, destinations: %@
Sending resource at URL %@ to destinations %@ with metadata %@
Successfully started sending resource with identifier %@
Failed to start sending resource with identifier %@: %@
%@ doesn't exist at client file url: %@
incomingResourceURL: %@ metadata: %@ fromID: %@
Copied resource to temporary URL: %@
successfully sent file with identifier: %@
failed to send file with identifier: %@, error: %@
[WARN] Unexpected nil clientFileURL for service: %@, account: %@, identifier: %@, didSendWithSuccess: %d, error: %@, clientFileURLByIdentifier: %@
Failed to copy URL at %@ to %@: %@
Failed to create directory at URL %@: %@
Error moving url %@ to %@: %@
Deleted contents at URL: %@
Failed to delete contents at URL %@: %@
Zipping directory at URL: %@, output to: %@
Error zipping directory at URL %@ to output URL %@
operation: %ld, inputURL: %@, outputURL: %@
Error occurred during IMFileCopierOperation type %ld on inputURL %@ and outputURL %@
completed operation: %ld, inputURL: %@, outputURL: %@
deleting temporary file at URL: %@
Calling fetch completion block for call source with identifier %@
Waiting for call source with identifier %@
[WARN] Timed out waiting for call source with identifier %@ to check in
[WARN] Couldn't identify device type based on model identifier (%@)
Enabling relay calling on secondary device %@.
Activating Thumper calling on secondary device %@ for telephony subscription with UUID %@.
User notification has been completed with response %lu and entered PIN %@
Showing service confirmation dialog to user
Requesting pin from iPhone
Canceling pin request from iPhone
PIN code entered with success=%d cancelled=%d
Device Pin Exchange received an incoming approval request
[WARN] We received an incoming pin code alert from a non-telephony device: %@
User tapped cancel on the Pin Display Alert
Request for pin exchange failed
[WARN] Ignoring request to group call because it is already grouped: %@
[WARN] Ignoring request to ungroup call because it isn't grouped: %@
Setting uplinkMuted to %d for call %@
Started conference successfully for answered relay call %@
[WARN] Failed to start conference connection when answering call %@: %@
Conference connection stopped (cleanly=%d) for answered call %@: %@
Started conference successfully for dialed relay call %@
[WARN] Failed to start conference connection when dialing call %@: %@
Conference connection stopped (cleanly=%d) for dialed call %@: %@
Started conference successfully for pulled relay call %@
Failed to start conference connection when pulling call %@: %@
Conference connection stopped (cleanly=%d) for pulled call %@: %@
[WARN] Ignoring request to hold call because it is already held: %@
[WARN] Ignoring request to unhold call because it isn't held: %@
Entitlement for key '%@' is non-nil but is of class %@ rather than an NSArray (%@), so assuming process %@ has no entitlements
[WARN] Cannot create emergencyTUHandle from CSDMessagingHandle %@
[WARN] Cannot create emergencyTULabeledHandle from CSDMessagingLabeledHandle %@
Received acknowledgement for message with identifier: %@. Removing from waiting messages.
[WARN] Received acknowledgement for unknown message with identifier: %@
Received successful didSend for message with identifier %@ using account %@
Received unsuccessful didSend for message with identifier %@ using account %@: %@
Incoming message of type %@ from destination %@ device %@: %@
[WARN] Received message %@ from device %@ but it is not the default paired device
[WARN] No device found for fromID %@. All devices: %@
[WARN] Removing IDSSendMessageOptionForceLocalDeliveryKey key from sendMessage options because pairedDeviceUniqueIDOverride exists
Not attempting retry since message is no longer waiting for acknowledgement: %@
[WARN] Not attempting retry since we are out of retry attempts for %@ message with identifier: %@
Retrying message send with identifier: %@
Sending %@ message with identifier %@ and options %@ to destinations %@: %@
Successfully sent %@ message
Setting up reliable message delivery for %@ message with identifier: %@ and retry attempts left: %lu
Failed to send %@ message: %@
[WARN] No paired device, so unable to send message %@
photoURL: %@ videoURL: %@
saved photo with localIdentifier: %@ error: %@
saveVideoWithURL: %@
Saved video with localIdentifier: %@ error: %@
providerDelegate: %@ callUUID: %@ dateStartedConnecting: %@
providerDelegate: %@ callUUID: %@ dateEnded: %@ endedReason: %ld failureContext: %@
Ending call with UUID %@ on other provider delegate %@ because ended reason was %ld
providerDelegate: %@ transaction: %@
[WARN] action: %@
Adding additional peers to invite: %@
Invited push tokens via IDS: %@ wasCanceled: %d
Could not initiate FaceTime call - No IDS or IMAV call returned for handle %@
Not sending IMAV invites because IDS session was canceled
[WARN] Failing join call action since it does not meet join call action requirements
[WARN] Failing join call action since we are already pending a join on this same call UUID elsewhere.
Updated to action: %@
Found a IMAV chat that is being tracked for action: %@
[WARN] No provider delegate is managing call for action %@
Asked to deliver token %@ to application %@
Asked to deliver message %p to application %@
Delivering token %@ to application %@
Pending token delivery until a connection exists
Delivering %lu payload(s) to application %@
Invalidating process assertion for bundle identifier %@ from completion handler
[WARN] Message transport type is unknown; cannot deliver message %@
Pending payload deliveries until a connection exists
Initialized inCallServiceWantsStatusBarSuppressionState to %llu
Initialized inCallServiceAllowsRingingStatusIndicator to %d
[WARN] InCallService has multiple process identifiers: %@
InCallService process state is now %ld
Initialized inCallServiceProcessState to %ld
Started tracking SpringBoard process with PID %@
SpringBoard process has changed PID from %@ to %@
SpringBoard process changed PID, updating inCallServiceWantsStatusBarSuppressionState to 0
inCallServiceWantsStatusBarSuppressionState is now %llu
inCallServiceAllowsRingingStatusIndicator is now %d
Setting muted to %d for %@
[WARN] setMuted:forIdentifier: no conference connection found for identifier %@. All conference connections: %@
Setting sending audio to %d for %@
[WARN] setSendingAudio:forIdentifier: no conference connection found for identifier %@. All conference connections: %@
Asked to prepare conference connection %@ remoteInviteDictionary %@
Not preparing a new conference because another conference already exists: %@
Attempted to prepare a new conference connection with the same identifier as an existing conference connection: %@
Asked to start conference for identifier %@
We already have an active conference. Invoking this conference connection's didStart immediately
Did not find conference connection to start for identifier %@. All conference connections: %@
Asked to send data to conference for identifier %@
Asked to update conference for identifier %@ with isUsingBaseband=%d disableAudio=%d
Updating device role for identifier %@ to %d
Did not find conference connection for identifier %@. All conference connections: %@
Setting conference connection active: %@
Asked to prepare to stop conference for identifier %@
Pausing audio and setting up timeout for conference connection: %@
It's been %fs since asked to prepare to stop conference and conference connection still exists: %@. Forcefully cleaning up all conference connections for conference %@
Asked to stop conference for identifier %@
Cleaning up conference connection %@
Also cleaning up conference connection which is already prepared to stop %@
Posting %@
reason: %ld error: %@
Relay conference ended in failure (reason: %ld): %@
Setting up close connection timeout because conference ended reason was normal
[WARN] Timed out waiting for conference %@ to close connection after receiving end
[WARN] Unable to get URL for filename '%@'
[WARN] Unable to get standardized URL for URL '%@'
Debug context is not enabled
Debug context has been configured
Downloading debug context information
Catalog does not exist on MobileAsset, retrying tomorrow
[WARN] Failed to download ProductKit catalog; result code: %ld
[WARN] Failed to query debug context assets; result code: %ld
Debug context asset does not exist on MobileAsset, retrying tomorrow
[WARN] Failed to download debug context asset; result code: %ld
Saved debug context asset to filesystem
MobileAssetManager retrying in %f seconds
[WARN] Failed to copy asset from %@ to %@; error: %@
Setting up Pin Exchange controller
Requesting PIN from device %@
[WARN] accountsSupportSecondaryCalling=NO. Displaying mismatched accounts notification
Canceling all PIN requests
[WARN] Could not find device for unique ID %@
The entered PIN code is correct
Activated Thumper for requesting device %@
[WARN] The entered PIN code is incorrect, could not register device.
The user entered no code... or the code entered was not an NSString
We were unable to send the PIN to the other device to be displayed, Sorry
Sending a PIN code to device %@ to display to enroll them into Thumper
[WARN] Ignoring request to send PIN code because we already have one pending for device with unique ID %@
Could not obtain caller ID from Thumper IDS service %@
Sending IDS action %@ to device %@ with message %@
Thumper IDS action sent to device with success: %@ error: %@ identifier: %@
[WARN] Displaying PIN error notification
[WARN] Displaying mismatched accounts notification
[WARN] Displaying slots full notification
Received message for service %@ from device %@ (isHSATrusted=%d): %@
Ignoring pin request: There is already a pending pin request that has not yet completed.
One sender identity exists; continuing Thumper registration using UUID %@
Multiple sender identities exist; checking whether caller ID %@ matches a sender identity in %@
[WARN] Aborting Thumper registration; multiple sender identities exist but caller ID not supplied
Aborting Thumper registration; could not obtain sender identities from call provider %@.
Device requesting PIN is HSA trusted. Forgoing PIN exchange and enrolling the device immediately
Received request to enroll device %@ in Thumper for sender identity with UUID %@
[WARN] Aborting Thumper registration; could not obtain sender identity UUID.
Received didSendWithSuccess=YES for message with identifier %@
Received didSendWithSuccess=NO for message with identifier %@: %@
InCallService has changed process state to %ld
InCallService has been suspended; invalidating its XPC client connections.
Initialized capability state: %@
Updating clients with new call capabilities state: %@
Updating paired host device state
TUCallCapabilitiesXPCServer - callCapabilitiesState request from %@
TUCallCapabilitiesXPCServer - setRelayCallingEnabled: %d
TUCallCapabilitiesXPCServer - setRelayCallingEnabled: %d forDeviceWithID: %@
TUCallCapabilitiesXPCServer - setWiFiCallingEnabled: %d senderIdentityUUID: %@
TUCallCapabilitiesXPCServer - setWiFiCallingRoamingEnabled: %d senderIdentityUUID: %@
TUCallCapabilitiesXPCServer - setVoLTECallingEnabled: %d senderIdentityUUID: %@
TUCallCapabilitiesXPCServer - setThumperCallingEnabled: %d senderIdentityUUID: %@
TUCallCapabilitiesXPCServer - setThumperCallingAllowed: %d secondaryDeviceID: %@ senderIdentityUUID: %@
TUCallCapabilitiesXPCServer - setThumperCallingAllowedOnDefaultPairedDevice: %d senderIdentityUUID: %@
TUCallCapabilitiesXPCServer - endEmergencyCallbackMode
TUCallCapabilitiesXPCServer - invalidateAndRefreshWiFiCallingProvisioningURLForSenderIdentityUUID: %@
TUCallCapabilitiesXPCServer - invalidateAndRefreshThumperCallingProvisioningURLForSenderIdentityUUID: %@
TUCallCapabilitiesXPCServer - requestPinFromPrimaryDevice
Using the following account for the PIN request: %@
No device found for account %@. All accounts: %@
[WARN] No primary Thumper account found for PIN request. This should only happen because an account exists but has no empty device slots. All accounts: %@
TUCallCapabilitiesXPCServer - cancelPinRequestFromPrimaryDevice
Received device list changed notification: %@
Received device capability changed notification: %@
Received accounts changed delegate callback
Received FaceTime availability changed delegate callback
Received outgoingCallerIDChanged delegate callback
Disabling Thumper for subscription with UUID %@
Received telephonyCallCapabilitiesChanged delegate callback
[WARN] Disabling support because %@ was set to YES
[WARN] Enabling support because %@ was set to YES
Found primary Thumper account ID %@
Thumper calling is not supported for account ID %@
Setting associated Thumper account ID %@
_setWiFiCallingEnabled: asking to change value from %d to %d
_setWiFiCallingEnabled: not updating value. Is currently %d and asked to set to %d
_setVoLTECallingEnabled: asking to change value from %d to %d
_setVoLTECallingEnabled: not updating value. Is currently %d and asked to set to %d
_setWiFiCallingRoamingEnabled: asking to change value from %d to %d
_setWiFiCallingRoamingEnabled: not updating value. Is currently %d and asked to set to %d
_setThumperCallingEnabled: asking to change value from %d to %d
_setThumperCallingEnabled: not updating value. Is currently %d and asked to set to %d
Changing Thumper calling allowed value from %d to %d on secondary device ID %@
[WARN] Not changing Thumper calling allowed value. No device slots remain for this device. Displaying notification to the user
[WARN] Could not set Thumper calling allowed for secondary device with identifier %@; unable to retrieve local Thumper account from call capabilities %@
[WARN] Could not retrieve account ID from Thumper capabilities %@
_setThumperCallingAllowed: not updating value. Is currently %d and asked to set to %d on secondary device ID %@
[WARN] Could not find Thumper capabilities for sender identity UUID %@
[WARN] No cloud calling device appears to be a default paired device: %@. Ignoring setThumperCallingAllowedOnDefaultPairedDevice request
[WARN] Could not obtain UUID from sender identity capabilities state %@
defaultPairedDeviceExists: %d
telephonyDeviceExists: %d, relayCapableDeviceExists: %d, defaultPairedDeviceExists: %d
_setRelayCallingEnabledDefault: changing value to %d
_setRelayCallingEnabled: Changing value from %d to %d
_setRelayCallingEnabled: Not updating value. Is currently %d and asked to set to %d
setRelayCallingEnabledDefault:forDeviceWithID: changing value to %d for %@
_setRelayCallingEnabled:forDeviceWithID: Changing value from %d to %d for %@
_setRelayCallingEnabled:forDeviceWithID: Not updating value. Is currently %d and asked to set to %d for %@
Initialized pairedHostDeviceState: %@
[WARN] Could not de-serialize pairedHostDeviceStateData %@
[WARN] Saved pairedHostDeviceStateData was not an NSData type (class=%@): %@
No saved paired host device state found
Initializing new paired host device state with all values set to NO
_supportslaunchingInCallApplicationForIncomingCall: %d
dialRequest: %@ displayContext: %@
Coordinated alert request came back with bestIsMe: %d info: %@ error: %@
Starting coordinated alert request to determine ringtone un-suppression: %@
faceTimeIDSStatus for destinationID: %@ is: %@
Invalidating display context for %@
Posting %@ because relayClientTransport changed from %@ to %@ for %@
Posting %@ because mayRequireBreakBeforeMake changed from %d to %d for %@
Posting %@ because hasStartedOutgoing changed from %d to %d for %@
Posting %@ because hasAudioInterruption changed from %d to %d for %@
activeRemoteParticipants changed from %@ to %@ for %@
Pickable Routes Changed: %@
Preferred external route changed: %@
CarPlay is connected changed: %@
Media services were reset: %@
Audio device list changed
[WARN] No audio route collection found in audioRouteCollections: %@ for audio category %@ and audio mode %@ for call %@
Found preferred AVAudioDevice: %@
Requesting initial state of CarKit's DND assertion
Received initial CarKit DND assertion: %d
Unable to fetch CarKit DND assertion: %@
Updating isCarModeActive to %d
[WARN] Timeout occured fetching CarPlay do not disturb status.
Updating isCarPlayDeviceConnected to %d
Device first unlock block invoked, attempting to retrieve active conversations
Sent message with identifier %@ to %@
Error sending message: %@
Using local callerID: %@
UUID: %@ groupUUD: %@ localMember: %@ remoteMembers: %@ fromStorage: %d conversationReport: %@
Could not find caller ID when creating conversation
UUID: %@ groupUUD: %@ localMember: %@ remoteMembers: %@
Transitioning conversation %@ to new groupUUID: %@ remoteMembers: %@ localMember: %@
[WARN] Ignoring request to transition to new group UUID since an existing conversation does not exist.
[WARN] Cannot transition to a different group UUID that does not have the same set of remote members.
[WARN] Dropping request to transition since sender is not in the members list that was given.
Sending message: %@ from account: %@ with caller ID: %@
[WARN] No local participant for conversation: %@
[WARN] handleConversation:receivedAVCBlobResponse:fromHandle: %@ <!===> %@
[WARN] handleConversation:receivedAVCBlobResponse:fromHandle: Could not find participant in message: %@
[WARN] Not adding cached conversation with UUID %@ because we already added equivalent conversation with UUID %@
Reviving cached conversation with groupUUID: %@ messagesGroupUUID: %@ remoteMembers: %@
shouldClearDefaults: %d - Removing all conversations
groupUUID: %@ messagesGroupUUID: %@ remoteMembers: %@
Activating cached conversation from storage with UUID: %@ as someone seems to be interested in it.
No conversation currently exists to join, so creating a new one
[WARN] Supplied local member: %@ contains no active handles: %@
Unable to create local member. Caller ID: %@
UUID: %@ context: %@
[WARN] Could not find conversation with UUID: %@
Ignoring request to join conversation with UUID: %@ since conversation is already joined
[WARN] Leaving existing conversation with UUID: %@ in favor of new conversation with UUID: %@
UUID: %@
[WARN] Could not find conversation with UUID %@. All conversations: %@
conversationUUID: %@ remoteMembers: %@
[WARN] Could not find conversation with conversationUUID %@. All conversations: %@
conversationUUID: %@ presentationContexts: %@
conversationUUID: %@ member: %@
conversationUUID: %@ downlinkMuted: %d
conversationUUID: %@ messagesGroupName: %@
conversation: %@
Removing conversation: %@
conversation: %@ participant: %@
Requesting AVC blob for %@
[WARN] service:account:incomingData:fromID:context: Empty from ID. Dropping message.
Received message with identifier %@ from %@
[WARN] service:account:incomingData:fromID:context: Empty data. Dropping message.
[WARN] service:account:incomingData:fromID:context: Empty CSDMessagingConversationMessage. Dropping message.
[WARN] service:account:incomingData:fromID:context: Could not create group UUID from string. Dropping message.
[WARN] service:account:incomingData:fromID:context: Empty destinationID after IDSCopyRawAddressForDestination. Dropping message.
[WARN] service:account:incomingData:fromID:context: Could not create TUHandle from destinationID. Dropping message.
[WARN] No conversation found for groupUUID %@
Looking for handle: %@ in existingConversation: %@
 => Matched handle: %@
 => Matched handle to self: %@
[WARN] Could not find matching handle: %@  in existingConversation: %@. Dropping message.
[WARN] processGroupSessionParticipantUpdate: Empty groupSessionParticipantUpdate
[WARN] processGroupSessionParticipantUpdate: Empty groupSessionParticipantUpdate.participantDestinationID
Group session participant update received: %@ participantIdentifiers: %@
[WARN] Received unknown participant update message
%s Received participant join context: %@
[WARN] processJoinUpdate: Empty handle
processJoinUpdate: Received nil when trying to convert data to participant join context
[WARN] processUpdateMembersUpdate: Empty updateMembersUpdate.clientContextData
Received nil when trying to convert data to participant join context
[WARN] processParticipantDataUpdate: Empty participantDataUpdate.groupUUID
[WARN] processParticipantDataUpdate: Empty participantDataUpdate.participantDestinationID
[WARN] processParticipantDataUpdate: Empty handle
[WARN] processParticipantDataUpdate: Empty participant
[WARN] Could not find conversation with groupUUID %@. All conversations: %@
[WARN] handleParticipants:joinedConversationWithUpdate:joinContext: Empty joinContext
[WARN] handleParticipants:joinedConversationWithUpdate:joinContext: Empty participantUpdate.groupUUID
[WARN] Empty destinationID after IDSCopyRawAddressForDestination. Dropping message.
[WARN] Could not create TUHandle from destinationID. Dropping message.
[WARN] Dropping join update since sender is not in the members list that was given.
Not notifying delegate of add message since member is already part of conversation
Received local member: %@
[WARN] Dropping conversation with groupUUID %@ since it has %tu remote members which is greater than the maximum allowed of %tu.
[WARN] We received a message from %@, which was in the remote members list given in the message, but not in the existing conversation: %@. Dropping message.
Ignoring message for group UUID %@
Activating cached conversation with UUID: %@ since participants are joining.
Could not find local member from activeLocalHandles: %@, remoteMembers: %@
Received empty set for remote members
Participant with identifier: %lu left conversation with groupUUID: %@
[WARN] handleParticipantWithIdentifier:leftConversationWithGroupUUID: empty groupUUID
[WARN] Could not find conversation for group UUID %@
Attempt to retrieve application record for bundle identifier %@ failed with error: %@
[WARN] Unable to create audio route from route dictionary: %@
Issuing request to acquire process assertion for bundle identifier: %@
Acquiring process assertion for bundle identifier %@
Acquired initial process assertion for bundle identifier %@
Failed to acquire process assertion for bundle identifier %@
Incremented count of process assertion for bundle identifier %@ to %lu
Received request to invalidate process assertion with bundle identifier: %@
Decremented count of process assertion for bundle identifier %@ to %lu
Initialized CXCallDirectoryStore for reading
Unable to initialize CXCallDirectoryStore for reading: %@
Device first unlock block invoked, attempting to initialize CXCallDirectoryStore...
Incoming call filter block called with sourceAddress: %@ providerIdentifier: %@
Blocking call with sourceAddress %@ since callDirectoryAllowsCallFromSourceAddress returned NO
Disallowing call with sourceAddress %@ since _doNotDisturbAllowsCallFromSourceAddress returned NO
DND - onEmergencyCall: %d providerIdentifier: %@
Not allowing call because DND is enabled for %@
phoneNumberVariants: %@
Error checking if call directory database contains blocking entry for source address %@: %@
Disallowing call from source address %@ since blocked by call directory
Call history changed: %@
Call connected. Marking all calls as read.
bytesOfDataUsed: %ld uniqueProxyIdentifier: %@ callHistoryIdentifier: %@
Call still exists so updating its bytes of data used: %@
No call still exists so updating bytes of data used via CHManager
Writing recent call to history: %@
Writing recent pending call to history: %@
Adding transaction object to transactionObjectsAwaitingCallHistory: %@
[WARN] Ending transaction for %@ because we timed out waiting for a call history database changed notification
Set %ld recent calls as read using matching predicate '%@'.
Deleted %ld recent calls matching predicate %@
self: %@ wiFiAllowed: %d
self: %@ cellularDataAllowed: %d
self: %@ cellularDataPreferred: %d
self: %@ clientUUID: %@
Updated currently broadcasted activity to %@
Queueing activity at beginning of queue: %@ (timeout: %f)
Queueing activity at end of queue: %@ (timeout: %f)
Dequeueing activity: %@
Registered to listen for activity type %d and dynamic identifier %@ and started listening for best app suggestions
Registered to listen for activity type %d and dynamic identifier %@
Unregistered to listen for activity type %d and stopped listening for best app suggestions
Unregistered to listen for activity type %d
Best app suggestion changed to %@
Firing delegate callback with activity type %d (userActivityType=%@) and dynamicIdentifier %@
Migrator is looking for Announce Calls setting in %@
Migrator found legacy Announce Calls setting %@
Migrator did not find an Announce Calls setting in %@
Joining with participantJoinContext: %@
%s: conversationReport = %@
sessionProvider: %@ reason: %d error: %@
sessionProvider: %@ participantIDs: %@ localParticipantID: %lu error: %@
sessionProvider: %@ error: %@
sessionProviderDidTerminate: %@
sessionProvider: %@ activeParticipants: %@ success: %d
[WARN] Received an error for active remote participants
[WARN] Retrying requestActiveParticipants, retry_count=%lu
[WARN] Not retrying requestActiveParticipants, max retry count (%lu) reached
XPC connection invalidated from client: %@ capabilities: %@
Disconnecting all calls because wantsCallDisconnectionOnInvalidation=YES for %@
Setting isSendingVideo:NO on call: %@ because wantsCallStopStreamingOnInvalidation=YES for %@
CarPlay screen is now %d
Received AVAudioClient secure microphone interruption
AVAudioClient does not respond to secure mic selector
Relay capabilities enabled
Relay capabilities disabled
Disconnecting relaying call because relay calling is no longer enabled: %@
Disconnecting call being relayed elsewhere because relay calling is no longer enabled: %@
Received AudioSession Interruption notification: %@
Determined that audio interruption was caused due to built in mic muted, ending all calls
Received hardware control: %@
Updating calls in response to hardware control: incomingCall %@, activeCall %@, heldCall %@
Answering incoming call: %@, %@
Answering incoming call as conversation: %@, %@
Opening URL for incoming call: %@
Encountered error while opening URL: %@ for call: %@
Disconnecting call because there wont be a UI to host the call: %@
Opening URL: %@ for outgoing call
Disconnecting proxy call because a video call started connecting: %@
Updating clients with call: %@
Ignoring call update for client %@ because it's suspended
Updating client %@ with disconnected call: %@ calls: %@
Updating client %@ with calls: %@
notification: %@
Pushing all calls to device with destination %@ because no preferred route is active and we found a call hosted here with its expected endpoint on another device: %@
Pulling all calls from relay client device because a preferred route is active and we found a call with an endpoint elsewhere: %@
Non-ringing call found on device: %@. All calls: %@
Ignoring ringing call status change for call %@ because relay calling is disabled (%d) or this call doesn't support relaying call state (%d) or a vehicle route is available (%d) or call is TTY (%d) or call is conversation (%d) or shouldRelayTinCanCall (%d)
Not sending out call started connecting message because call is already disconnected: %@
Not sending out call connected message because call is already disconnected: %@
Sending voicemail call ended notification %@
Received nil call from outgoingCallFromProxyCall: for dial request %@ and displayContext %@
current calls are %@
[WARN] Ignoring request to performUngroupCall because the call is not grouped
[WARN] Ignoring request to performSwapCalls because either there is no active call (%d), there is no held call (%d), or an active call exists that cannot be held (%d)
An endpointRapportMediaSystemIdentifier="%@" or endpointRapportEffectiveIdentifier="%@" is present on answer request for call %@ so attempting to pick matching route
Performing end active calls and answer ringing call %@ for answer request %@
Aborting end active calls and answer ringing call; answer request does not specify a call to answer.
Aborting end active calls and answer ringing call; could not find any ringing calls to answer.
Aborting end active calls and answer ringing call; could not find ringing call with identifier %@
Aborting end active calls and answer ringing call; ringing call %@ is not the same as the specified call %@
Aborting end active calls and answer ringing call; ringing call %@ does not contain a data source.
Performing end held calls and answer ringing call %@ for answer request %@
Aborting end held calls and answer ringing call; answer request does not specify a call to answer.
Aborting end held calls and answer ringing call; could not find any ringing calls to answer.
Aborting end held calls and answer ringing call; could not find ringing call with identifier %@
Aborting end held calls and answer ringing call; ringing call %@ is not the same as the specified call %@
Aborting end held calls and answer ringing call; ringing call %@ does not contain a data source.
Performing hold active calls and answer ringing call %@ for answer request %@
Aborting hold active calls and answer ringing call; answer request does not specify a call to answer.
Aborting hold active calls and answer ringing call; could not find any ringing calls to answer.
Aborting hold active calls and answer ringing call; could not find ringing call with identifier %@
Aborting hold active calls and answer ringing call; ringing call %@ is not the same as the specified call %@
Aborting hold active calls and answer ringing call; ringing call %@ does not contain a data source.
Changed sourceIdentifier of answerRequest to %@
   ... sending calls were found so adding them to list of calls to disconnect: %@
   ... and adding held calls to the list of calls to unhold: %@
   ... and not unholding held calls because there are active calls %@ or ringing calls %@
   ... no sending calls were found so adding all active calls to list of calls to disconnect: %@
   ... no sending or active calls were found so adding all held calls to list of calls to disconnect: %@
   ... and moving call %@ from call to unhold to call to disconnect because a disconnected call from the same provider doesn't support unambiguous multi-party state: %@
Handoff context did not include any handoff payload. Assuming this is for a relay call
[WARN] Ignoring request to performPushHostedCallsToDestination %@ because not all calls are hosted here and relayable. All calls: %@
[WARN] Ignoring request to performPullHostedCallsFromPairedHostDevice because not all calls are not hosted here and not an endpoint here and relayable. All calls: %@
[WARN] Ignoring request to performPullHostedCallsFromPairedHostDevice because no paired device exists
Disconnecting call with disconnected reason %d: %@
Disconnecting call normally since it was outgoing (%d) or was never connecting to relay (%d): %@
Dialed call: %@
answerRequest: %@
Attempting to answer a Walkie-Talkie call whose endpoint is not Apple Watch; aborting answer request %@ for call %@
Performing answer request %@ for call %@
[WARN] Could not find call for uniqueProxyIdentifier %@. All calls: %@
uniqueProxyIdentifier: %@
uniqueProxyIdentifier: %@ otherUniqueProxyIdentifier: %@
[WARN] Asked to group call with data source %@ with another call with a different data source %@
[WARN] Could not find call for uniqueProxyIdentifier %@ (%d) or could not find call for otherUniqueProxyIdentifier %@ (%d)
uniqueProxyIdentifier: %@ key: %d
sourceIdentifier: %@
userInfo: %@
uplinkMuted: %d
downlinkMuted: %d
isSendingVideo: %d
Not updating isSendingVideo: %d since not showing in-call ui
destination: %@
proxyCall: %@
uniqueProxyIdentifier: %@ size: %@
uniqueProxyIdentifier: %@ presentationState: %d
shouldSuppressInCallStatusBar: %@
shouldAllowRingingCallStatusIndicator: %@
Processing SpringBoard request to continue user activity with identifier: %@
Initiating request to pull call for user activity %@
Lauching in-call application; pulled call with identifier %@ for user activity %@
Failed to pull call for user activity %@
Retrieving user activity with identifier %@ failed with error %@
request: %@
deviceUID: %@
uniqueIdentifier: %@
clientCapabilities: %@
Messaging connection ended for calls %@. Disconnecting calls that are an endpoint here but are not hosted here.
Messaging connection failed for calls %@. Disconnecting calls that are hosted here and an endpoint elsewhere or that are an endpoint here and hosted elsewhere.
Messaging connection could not establish link for calls %@. Disconnecting calls that are hosted here and an endpoint elsewhere or that are an endpoint here and hosted elsewhere.
uniqueProxyIdentifier %@
hasBeenUnlocked changing from %d to %d
Device has been unlocked, so invoking block immediately
Device has not been unlocked, so storing block to be performed upon first unlock
Device has not been unlocked and is not yet observing device lock changes, so beginning to observe device lock changes
Could not obtain application state from user info dictionary %@
Could not obtain bundle identifier from user info dictionary %@
[WARN] Could not obtain bundle identifier from VoIP application %@
Handling %@
Received request to register VoIP Network Extension for client process with bundle identifier %@
Registering VoIP Network Extension for application with bundle identifier %@
[WARN] Ignoring request to register VoIP Network Extension; could not obtain a bundle identifier from client process %@
[WARN] Aborting register request for VoIP Network Extension; entitlement was not found on client %@
Received request to unregister VoIP Network Extension for client process with bundle identifier %@
Unregistering VoIP Network Extension for client process with bundle identifier %@
[WARN] Ignoring request to unregister VoIP Network Extension; could not obtain a bundle identifier from client process %@
[WARN] Aborting unregister request for VoIP Network Extension; entitlement was not found on client %@
Asked to register bundle ID %@ with APS environment %@ for VoIP
[WARN] Ignoring voipRegister request because either no bundleIdentifier could be determined (%d) or no environment could be determined (%d)
Asked to unregister bundle ID %@ with APS environment %@ from VoIP
[WARN] Ignoring voipUnregister request because either no bundleIdentifier could be determined (%d) or no environment could be determined (%d)
for connection: %@ publicToken: %@
Requesting token for topic %@ for bundle ID %@
[WARN] No environment found for connection %@
for connection: %@ token: %@ topic: %@ identifier: %@
Resetting all CSDVoIPApplicationController kill counts
for connection: %@ message: %@
Received incoming APS message from application with bundle identifier %@ and topic %@
[WARN] No APS connection found for environment %@
Registering client process %@ with bundle identifier %@ for NetworkExtension VoIP
Aborting NetworkExtension VoIP registration; application with bundle identifier %@ does not have the required entitlement and background mode (VoIP Background Mode: %d, VoIP Network Extension Entitlement: %d)
Unregistering application %@ from NetworkExtension VoIP
Registering client process %@ with bundle identifier %@ for PushKit VoIP in environment %@
Environment was %@ but is now %@. Flushing out old registration with previous environment
Aborting PushKit VoIP registration; application with bundle identifier %@ because it lacks the VoIP background mode (%d) or no APS connection exists for the environment (%d)
Requesting token for topic %@
Setting enabled topics from %@ to %@
Unregistering application %@ from PushKit VoIP in environment %@
Supplied environment was nil. Inferring it as %@
Disabling topic %@ and invalidating its token for connection %@
Disabling topic %@ and invalidating its token for all connections
Received incoming network extension message from application with bundle identifier %@
Application %@ will not be launched because it failed to report an incoming call too many times or repeatedly crashed. However because the app is foreground, delivering VOIP payload anyway.
Application %@ will not be launched because it failed to report an incoming call too many times (or repeatedly crashed.)
Application %@ is not running. Will attempt to open the application and acquire a process assertion
Dropping incoming message because the bundle ID failed to launch
Dropping incoming message because the bundle ID did not launch in time
Successfully opened application
Successfully took out process assertion
Dropping incoming message because the process assertion could not be acquired
Invalidating process assertion for bundle ID %@ from timeout
Killing VoIP app %@ because it failed to post an incoming call in time.
Unable to terminate %@ with error %@
[WARN] No existing VoIP application found for bundle ID %@
Aborting request application with bundle identifier %@ does not have the required background mode (VoIP Background Mode: %d)
Device first unlock block invoked, attempting to retrieve saved providers
Loaded registered local providers: %@
Loaded registered relay providers: %@
Updating current providers to %@
Unregistering provider because its application is no longer installed: %@
Donating user intent to call provider with identifier: %@
Releasing sandboxExtensionHandle for provider: %@
[WARN] Skipping Sandboxing URL as the passed in URL turns out to be a symbolic link: %@
Updating provider from %@ to %@
Updating relay provider from %@ to %@
Device is passcode locked (%d) or existing call has different provider (%d). Indicating activity should open in background.
Device is NOT passcode locked. Indicating activity should open in foreground.
Opening user activity %@ for bundle identifier %@ with options %@
Successfully opened user activity %@ for bundle identifier %@
Failed to open user activity %@ for bundle identifier %@: %@
Could not get LSApplicationRecord for app %{public}@ to determine intent support. Using %{public}@.
App %{public}@ supports %{public}@.
[WARN] App %{public}@ does not support %{public}@, using deprecated %{public}@ and %{public}@.
App %{public}@ does not declare support for any dialing intents. Using %{public}@ or %{public}@. Error: %@
Timed out waiting for audio session to become active for conversationUUID: %@
Starting audio for conversaton with conversationUUID %@
Reporting call failure for conversation with conversationUUID %@ and callUUID %@
Received %@ conversation message for %@
[WARN] Not handling upgrade message for conversation since upgrades are currently disabled.
[WARN] Not upgrading conversation since there was no join update attached.
[WARN] Not upgrading conversation since the join update has an incorrect subtype.
[WARN] Not upgrading conversation as message is missing upgrade token.
[WARN] Not upgrading conversation as message is missing remote token.
Error while creating UUID from %@
[WARN] Did not receive protoUpgradeSessionUUID part of message %@
Current callUUID: %@, upgradeSessionUUID: %@, conversationUpgradeSessionUUID: %@, existingHandle: %@, upgradeMessageHandle: %@, participantDestination: %@, fromDestination: %@
Determined that current uplink is muted - muting conversation %@
Ignoring incoming invitation message for %@ since we are already tracking this with call %@
[WARN] Ignoring respodneded elsewhere message since it was not sent from a valid handle.
[WARN] Ignoring responded elsewhere message since it came from a handle that does not belong to our aliases: %@.
[WARN] Ignoring message that we've responded elsewhere for conversation %@ since the conversation is already joining or is joined.
Not reporting call since validNetworkReachable is false
Ending ringing call for conversation with UUID: %@
Could not report new multiway call from %@: %@
Successfully sent message with identifier: %@ handle:%@ account: %@
Unable to report call update since its nil for conversation: %@
Conversation with UUID %@ failed with context: %@
Joining conversation for answer call action: %@
No conversation with UUID: %@
[WARN] Skipping member with handle %@ because it already exists in seen handles: %@
Setting uplinkMuted for action: %@ conversation: %@
[WARN] Could not find conversation for end call action call UUID %@. self.conversationUUIDsByCallUUID: %@ self.conversationManager.conversationsByUUID: %@
Found an extra conversation that needs to be cleaned up: %@
[WARN] Asked to clean up conversation from our list but could not find it in conversation manager list: %@ callUUID: %@
[WARN] Cannot enable video because conversations do not allow video on this device
[WARN] Could not find conversation for set video presentation state action call UUID %@. self.conversationUUIDsByCallUUID: %@ self.conversationManager.conversationsByUUID: %@
action: %@
[WARN] Could not find conversation for relaying call action call UUID %@. self.conversationUUIDsByCallUUID: %@ self.conversationManager.conversationsByUUID: %@
Raise to ear gesture detected, answering incoming call.
Failed to start conference connection for answered call %@: %@. Disconnecting call with relay failed
Transport did not become available for answered call %@
Conference connection ended for call %@. Disconnecting call normally
Conference connection failed for call %@: %@. Disconnecting call with relay failed
Not disconnecting call because this conference transport is %@ but the call's current relay client transport is %@
Received did stop for call that is already disconnecting/disconnected
_launchInCallApplicationForOutgoingCallOnHostIfNecessary
For received dial call message, the dial request is SOS, so disconnecting all existing calls immediately.
Dialing without relay because cannotRelayAudioOrVideoOnPairedDevice is set (%d) or a preferred route is active (%d)
Nil call returned when dialing call. Notifying client of failed dial call for %@
Dialing with relay. isTinCanProivder: %d, message.hasSourceIdentifier: %d, message.cannotRelayAudioOrVideoOnPairedDevice: %d, isAnyPreferredRouteAvailable: %d
Nil call returned when dialing call. Notifying client of failed dial call for %@ 
Failed to start conference connection for dialed call uniqueProxyIdentifier %@: %@.
Conference connection stopped (cleanly=%d) for dialed call uniqueProxyIdentifier %@: %@
[WARN] Received %@ message, but the transport didn't become available
[WARN] Received %@ message, but we already have some non-relaying calls. Sending device busy message.
Answering without relay because wantsHoldMusic is set (%d) or cannotRelayAudioOrVideoOnPairedDevice is set (%d)
[WARN] Could not find call with other uniqueProxyIdentifier %@. All current calls: %@
No other unique proxy identifiers included. Assuming legacy behavior
[WARN] Could not find another call to group with. All calls: %@
No call was specified with SendHardPauseDigits message...
...so sending hard pause digits for call %@
...and no hosted call was found with TUHardPauseDigitsStateDigitsAvailable, so not sending hard pause digits
Setting sourceIdentifier to %@ for all calls before pulling
Opening URL for handled pushRelayingCalls message from client: %@
[WARN] Could not find any audio route with source identifier %@. Ignoring push relaying calls request
[WARN] Asked to pull relaying calls from client when no calls with an endpoint elsewhere exist. All calls: %@
Pushing hosted call: %@
Conference did not start successfully when pushing call. Resetting endpointOnCurrent device to YES for %@
Socket did not become available when pushing call. Resetting endpointOnCurrent device to YES for %@
Failed to prepare conference for pushing hosted call %@
[WARN] %@
[WARN] Bad activity type: %d
Registering for %@ user activity type and dynamic identifier %@
[WARN] Asked to register for activity type %d, but that is not supported
Unregistering for %@ user activity type and dynamic identifier %@
[WARN] Asked to unregister for activity type %d, but that is not supported
Error creating '%@' sandbox extension directory: %@
[WARN] Not loading registered providers because current registered providers version is %ld and minimum version is %d
registeredLocalProvidersByIdentifier: %@
registeredPairedHostDeviceProvidersByIdentifier: %@
Error while querying file attributes: %@
Error creating link to source URL '%@' with filename '%@': %@
Error removing links for filenames not in array (%@): %@
Could not deserialize data to TUCallProvider instance: %@
Registered providers object was of unexpected class %@: %@
Request timed out for transaction ID: %@
[WARN] Received results for timed out transaction with ID %@
Updating session to videoEnabled=NO after creation since current device does not support video
Received nil AVCSession creation block
audioEnabled: %d
videoEnabled: %d
videoPaused: %d
relaying: %d
addParticipant: %@ videoEnabled: %d
[WARN] Ignoring request to add participant %@ because they're already in the conversation
removeParticipant: %@
[WARN] Could not find participant %lu in the active participant list, but they're in the list of pending removals
[WARN] Could not find participant with identifier %lu all participants: %@
identifier: %lu downlinkMuted: %d
Unknown participant identifier %lu current participants: %@
identifier: %lu audioEnabled: %d
identifier: %lu videoEnabled: %d
identifier: %lu audioAndVideoMuted: %d
identifier: %lu videoQuality: %lu visibility: %lu prominence: %lu
AVCSession %@ server did disconnect
addParticipant: %@ didSucceed: %d error: %@
Active remote participants: %@
Failed to add participant %@: %@
removeParticipant: %@ didSucceed: %d error: %@
Failed to remove participant %@: %@
didUpdate: %d configuration: %@ error: %@
Failed to update session with configuration %@: %@
audioEnabled: %d didSucceed: %d error: %@
Failed to set local audio enabled (%d): %@
videoEnabled: %d didSucceed: %d error: %@
Failed to set local video enabled (%d): %@
videoPaused: %d didSucceed: %d error: %@
Failed to set local video paused (%d): %@
participant: %@ remoteAudioEnabledDidChange: %d
participant: %@ remoteVideoEnabledDidChange: %d
self: %@ reason: %d
[WARN] Ignoring invitation accept since we have previously processed one.
Secondary Thumper accounts changed from %@ to %@
Attempting to find primary Thumper account in accounts: %@ devices: %@ outgoingCallerIDURI: %@
Found default paired device; setting primary Thumper account to %@
Found matching outgoing caller ID %@; setting primary Thumper account to %@
No primary Thumper account found for outgoingRelayCallerID %@ but requireMatchingCallerID is NO. Arbitrarily choosing last Thumper account from list: %@
[WARN] Could not find subscription with UUID %@. All subscriptions: %@
Associated Thumper account ID changed from "%@" to "%@"
Comparing specified Thumper account ID %@ to cached associated Thumper account ID %@
Sending CommCenter a request to set associated Thumper account ID to "%@"
Received request to set capability information %@ capabilityInfo for subscription %@
Updating VoLTE capability state with %@
Updating VoWiFi capability state with %@
Updating Thumper capability state with %@
Retrieved new telephony call capabilities for subscription %@: %@
Retrieved new system capabilities for subscription %@: %@
Setting new emergency callback mode %@.
Updating Thumper account state with %@
Updated local Thumper device ID to %@
[WARN] Could not initialize Thumper account with Thumper account dictionary: %@
Updated local Thumper accounts to %@
Updated secondary Thumper accounts to %@
Found associated Thumper account ID; updated associated Thumper account ID to %@
Found matching secondary Thumper account; updated associated Thumper account ID to %@
Subscriptions changed for client: %@
Subscription cache requires an update; associated Thumper account ID changed
Subscription cache requires an update; secondary Thumper accounts changed
Determined if endpoint should be on current device: %@; hasRelaySupport: %@, anyOtherCallHasAnEndpointElsewhere: %@, relayCall.isSOS: %@
Asked to dial call %@ but the host was unavailable
Asked to dial call %@ but the session was unavailable
[WARN] Transport did not become available when dialing call %@
Setting endpoint elsewhere for call because it can't be answered with audio or video relay: %@
Transport did not become available when answering call %@
Transport did not become available when pulling call. Resetting endpointOnCurrent device to NO for %@
Opening URL for handled pushHostedCalls message from host: %@
Disconnecting call with conference failed disconnected reason: %@
Not disconnecting call for failed conference start because it is not an endpoint here: %@
Not disconnecting call for conference didStop because it is not an endpoint here: %@
Adding %@ as an alias on account %@
Failed to add alias %@ to account %@. Validation status: %ld, validation error reason: %ld, vetted aliases: %@
Updating display name to %@ on account %@
Received IMDaemon connected notification: %@
Received display name changed notification: %@
Received preferred account changed notification: %@
Loaded last known FaceTime caller ID as %@
[WARN] Could not find lastKnownFaceTimeCallerID in keychain, error: %@
Querying Preferences to see if it exists
Found lastKnownFaceTimeCallerID: %@ in Preferences
[WARN] lastKnownFaceTimeCallerID not found in Preferences either
Removing callerID Preferences value
Saving last known FaceTime caller ID as %@
Error while saving _callerID %@
FaceTime callerID changed from %@ to %@
Failed to get active contexts from client %@: %@
Error getting emergency callback mode (domain=%d, code=%d)
Failed to get Thumper device info: %@
Failed to get call capabilities: %@
Failed to get capability info for subscription %@: %@
Failed to get system capabilities for subscription %@: %@
Calling -[CoreTelephonyClient context:setCapability:enabled:with:completion:] with capability: %@ enabled: %d info: %@
Failed to set enabled=%d for capability %@ with info %@: %@
Calling -[CoreTelephonyClient context:addPhoneServicesDevice:withCompletion:] with idsDeviceIdentifier: %@
Failed to add secondary Thumper device with IDS device identifier %@: %@
Calling -[CoreTelephonyClient context:removePhoneServicesDevice:withCompletion:] with idsDeviceIdentifier: %@
Failed to remove secondary Thumper device with IDS device identifier %@: %@
Calling -[CoreTelephonyClient context:recheckPhoneServicesAccountStatus:] with capability: %@
Calling _CTServerConnectionEnableEmergencyCallBackMode() with %@
Calling _CTServerConnectionSetCapabilityExtended() with capability: %@ value: %d capabilityInformation: %@
Error setting capability for %@ calling (domain=%d, code=%d)
Error getting system capabilities (domain=%d, code=%d)
Calling _CTServerConnectionPhoneServicesAddDevice() with capability: %@ idsDeviceIdentifier: %@
Error adding device for %@ calling (domain=%d, code=%d)
Calling _CTServerConnectionPhoneServicesRemoveDevice() with capability: %@ idsDeviceIdentifier: %@
Error removing device for %@ calling (domain=%d, code=%d)
Calling _CTServerConnectionPhoneServicesAccountStatusChanged() and _CTServerConnectionSendBarrier() with capability: %@
Retrieved mobile country code %@ and mobile network code %@ for subscription %@
Failed to get mobile network code for subscription %@: %@
Failed to get mobile country code for subscription %@: %@
Could not find a subscription matching the specified UUID %@
Error getting ISO country code (domain=%d, code=%d)
Retrieved ISO country code %@ for mobile country code %@ and mobile network code %@
Received delegate callback callCapabilitiesChanged: with context: %@ info: %@
Received context:capabilitiesChanged: with context: %@ info: %@
%@ is handling phoneServicesCapabilitiesChanged: with userInfo %@
Received kCTEmergencyCallBackModeStatusNotification with userInfo %@
Call status changed for call: %@
for call: %@
for message: %@
transactionGroup: %@
with action: %@ for call %@
route: %@
call: %@
reporter: %@
chat=%@
blob recovery started for conversation %@
blob recovery timed out for conversation %@
VoIP app %@ failed to post incoming call
VoIP app %@ no longer eligible to launch
VoIP push for app %@ dropped on the floor
Reporting %@
%@ is handling %@.
%@ initialized for service %@ with the following devices: %@
Determining country code using account info %@
%@: Active accounts changed
%@: Devices changed
%@: Nearby devices changed
%@ updated state: defaultPairedDeviceExists=%d, pairedDeviceExists=%d, telephonyCapableDeviceExists=%d, relayCapableDeviceExists=%d, availableOutgoingRelayCallerIDs=%@ deviceNames="%@"
[WARN] Could not find session for identifier %@ to perform block on transport availability for. Dropping this block on the floor
No devices found that support call provider %@. Not creating a session.
Creating session to devices: %@
[WARN] destination for device returned a nil value, so we are going to skip creating a session to it: %@
Creating session to destinations: %@
Would have created a session to an empty destination set. Returning a nil session
Destroying session %@
Asked to prepare session to end for identifier %@
Asked to prepare connected sessions to end
Accepting session for identifier %@
Canceling/declining session for identifier %@
Asked to end ending sessions
sendMessageAndStartSessionIfNecessary for service %@ and message type %@: %@
Not starting a new session for identifier %@ because an active session for the identifier already exists: %@
No session exists. Starting a new one by inviting all devices that support provider %@
A session exists with a destination/device that supports provider %@: %@
We'll send this message via the existing session
Starting another session to the device
Starting another session to the destination
[WARN] A session exists, but it's with a device that doesn't support provider %@. Not starting a new session
Did not create session
sendMessageAndStartSessionIfNecessary for message type %@: %@
No IDSSession exists. Starting a new one by inviting to destination %@
[WARN] No IDSSession exists, and given device is nil. We can't start this session
A session exists: %@
Sending the message through the existing session
Starting a new session to the destination of the device with an active session
[WARN] Cannot start a new session, no valid destination
sendMessage:andAcceptInvitationIfNecessaryForIdentifier for identifier %@ and message type %@: %@
Session for identifier is %@
A current session already exists: %@
Sending the message through the current session
Sending the message through the current session and declining this one %@
No current session already exists, so sending the message through this session %@
Could not determine session to accept for identifier %@ and message %@. All sessions: %@
sendMessage:andCancelOrDeclineInvitationIfNecessaryForIdentifier for identifier %@ and message type %@: %@
Session has multiple identifiers: %@. Removing identifier %@ and not canceling/declining
_sendMessage:andCancelInvitationIfNecessaryForIdentifier for session %@ and message type %@: %@
_sendMessage:andDeclineInvitationIfNecessaryForIdentifier for session %@ and message type %@: %@
for message type: %@ identifier: %@ destinations: %@ waitUntilConnected: %d: %@
sendMessage through session %@ for message type %@ to destinations %@: %@
sendMessage through session %@ for message type %@: %@
Not sending message because protocolVersionCustomizationBlock's preventMessageSend was set to YES for message type %@: %@
No session available to send message type %@: %@
Invite received for session %@ from (fromID=%@) destination %@ device %@ with message %@ (timestamp: %f)
... and it's from the same destination that we have an active session with (%d) or it's from the same device that we have an active session with (%d) or we don't have a session (%d)
... so we are going to handle the session's message
... but we were told to ignore the invite
... but there was no accompanying message so just ignoring the invite
... but it is from a different device than the one that we have an active session with
... and we were told to decline the invite
... and we were NOT told to decline the invite, so just ignoring it
Session ended with reason %d
Notifying delegate of connection end
[WARN] Notifying delegate of connection failure
[WARN] Notifying delegate that connection could not establish link
Not notifying delegate of messenger connection end because a different active session with the same identifier exists: %@
Received invitation accept with no data payload.
Received invitation cancel with no data payload. Assuming the invitation was answered elsewhere
Received invitation decline with no data payload. Assuming invitation was accepted by sending a message through another session
videoStreamToken: %ld
Moments XPC connection interrupted from client %@
Moments XPC connection invalidated from client %@
handle disconnect for client: %@
mediaType: %d, token: %ld localVideoRecordingEnabled: %d
Successfully started AVCMomentsRequest: %@, transactionID %@
Failed to start AVCMomentsRequest: %@, error: %@
transactionID: %@
Successfully ended request %@
Failed to end request %@: %@
Registering stream token %ld, requesterID %@ and remoteIDSDestinations %@ with new moments object
Registered new moments object %@ with supported media types: %@
unexpected supportedMediaTypes: %@, moments: %@, streamToken: %ld
[WARN] FaceTime Photos availability is %d but remoteIDSDestination is nil so changing availability to Unavailabile
FaceTime Photos is not available. Availability is %d
updating remoteIDSDestinations and returning registered session: %@ for streamToken: %ld
Asked to unregister stream token: %ld
didFinish request: %@, error: %@
new capabilities: %u
didStartProcessing request: %@
Received moments didStartProcessingRequest but moments is disabled by server bag or default
Failed to start processing request: %@
didEndProcessing request: %@, stillImageURL: %@ movieURL: %@
Ignoring processing end of request because moments is disabled by server bag or default
Failed to find session for moments stream token: %ldl
failed to find remoteIDSDestination from request: %@ in session remoteIDSDestinations: %@
Did not receive both parts of Live Photo for request: %@
Media files for Live Photo do not have the correct path extensions. stillImageURL: %@ movieURL: %@
Received an error staging the still photo: %@
Did not receive movie URL for request: %@
Received an invalid request transaction ID: %@
Received an error creating the temporary directory: %@
Received an error staging the movie file: %@
moment server disconnected: %@
url: %@ metadata: %@ isZipped: %d fromIDSDestination: %@
session: %@ request: %@ remoteIDSDestination: %@
Unzipped resource to URL: %@
Failed to unzip file at URL %@
Received non-zipped resource at %@
Received moments resource from IDS destination %@ but expected %@
Could not convert remote IDS destination %@ (token=%@) and/or from IDS destination %@ (token=%@) to token data
Received moments resource with unknown transaction ID %@. All sessions: %@
Received moments resource with missing transaction ID in metadata: %@
Received moments resource but moments is disabled by server bag or default
file url: %@ was not sent successfully
Preserving file at URL: %@
Could not retrieve contents of dictionary at URL %@: %@
Unregistering stream token: %ld
Cleaning up state for moment: %@
Delaying cleanup because moment is still registered (%d) or has outstanding requests (%lu)
url: %@ session: %@ request: %@
url: %@
Could not determine both photo URL and video URL from contents of directory: %@
Resources directory URL %@ does not exist
_handleReceivedVideoURL: %@
saving live photo with photo url: %@ video url: %@
Error saving resources with photo url: %@ video url: %@
Saving video with url: %@
Error saving resources with video url: %@
[WARN] Timeout reached for active request for transaction ID %@
momentDescriptor: %@
Initializing AVConference with client UUID %@
[WARN] Error calling getIsSendingAudio: %@
[WARN] Error calling setSendingAudio: %@
[WARN] Error calling getIsAudioPaused: %@
Setting pause audio to %d for %@
[WARN] Error calling setPauseAudio: %@
[WARN] Error calling getIsVideoPaused: %@
Setting pause video to %d for %@
[WARN] Error calling setPauseVideo: %@
Setting conference visual rectangle of size %@ for %@
Setting conference state %@ for %@
Setting local portrait aspect ratio %@ and local landscape aspect ratio %@ for %@
Setting peer reporting identifer %@ and session identifier %@ for %@
Failed to initialize a new call with device role %d. Got callID=%ld
Starting AVConference connection with isCaller=%d callID=%ld remoteInviteDictionary=%@ capabilities=%@ destination=%@
Starting AVConference connection with isCaller=%d callID=%ld capabilities=%@ socket=%d
Stopping AVConference with callID=%ld
Canceling AVConference with callID=%ld
conference=%@ didStartSession=%d userInfo=%@
callID=%ld error=%@
callID=%ld error=%@ callMetadata=%@
callID=%ld
screenAttributes=%@ callID=%ld
videoAttributes=%@ callID=%ld
callID=%ld didPauseAudio=%d error=%@
didPause=%d callID=%ld
callID=%ld didPauseVideo=%d error=%@
[WARN] callID=%ld isStalled=%d
AVConference server died
callID=%ld parameters=%@
callID=%ld isDegraded=%d isRemoteVideo=%d
[WARN] callID=%ld isNetworkBad=%d
callID=%ld didReceiveData=%@
Ignoring to add %@ call since it is TinCan.
[WARN] Ending mutually exclusive call with uPI %@ because we have a newer incoming call that can not co-exist with it.
_endMutuallyExclusiveCalls: update=%@
Found multiple existing mutually exclusive calls.  Ending call %@
Ignoring mutually exclusive update
_endMutuallyExclusiveCalls: mutuallyExclusiveCall=%@, error=%@
Start call action fulfilled: %@
Start call action failed: %@
Join call action fulfilled: %@
Join call action failed: %@
Answer call action fulfilled: %@
Answer call action failed: %@
End call action fulfilled: %@
End call action failed: %@
Set held call action fulfilled: %@
[WARN] Set held call action failed but reverting state is allowed: %@
Set held call action failed and reverting state is not allowed: %@
Set group call action fulfilled: %@
Could not find call to group with for set group call action: %@. All call: %@
[WARN] Set group call action failed but reverting state is allowed: %@
Play DTMF call action fulfilled: %@
Play DTMF call action failed: %@
Set sending video call action fulfilled: %@
Set sending video call action failed: %@
Set muted call action fulfilled: %@
Set muted call action failed: %@
Set tty call action fulfilled: %@
Set tty call action failed: %@
Set relaying call action failed: %@
[WARN] Set relaying call action failed: %@
Action fulfilled: %@
Action failed: %@
[WARN] Not allowing requested %@ because user intent could not be validated for call source with identifier: %@
[WARN] Not allowing requested start call action because a call with same UUID already exists callWithUUID: %@, relayCallWithUUID: %@
[WARN] Not allowing requested start call action because call source %@ is at the maximum call group count of %lu: %@
[WARN] Not allowing requested action because no call was found to group with for action %@ and call source %@. All calls: %@
[WARN] Not allowing requested answer call action because a relay call with same UUID already exists: %@
[WARN] Not allowing requested action because no call was found for call UUID %@ and call source %@. All calls: %@
[WARN] Not allowing requested action because action is not allowed to be requested: %@
[WARN] Not allowing requested transaction because it is empty: %@
Allowing requested transaction: %@
[WARN] Not allowing requested transaction: %@
Dialing new call due to requested start call action: %@
Adding supplemental set held call action for existing call %@
Could not serialize handoffActivityUserInfo into a CXHandoffContext: %@
[WARN] Could not determine call source for dial request: %@. All call sources: %@
Asked to perform action %@ for call %@
Sending %@ for existing call with uniqueProxyIdentifierUUID=%@ callGroupsAllowsHold=%d supportsHolding=%d
Asked to perform start call action %@ for call %@
Call source %@ registered with configuration %@
Error while determining process action for callSource: %@, action: %@
Received add incoming call request from call source %@ with UUID %@ update %@
Query result: %@ for handle: %@ callSource: %@
[WARN] Returning error for add incoming call request because it was on the block list
[WARN] Returning error for add incoming call request because call did not pass DND filter. CarMode (%d) BT Audio Route (%d), CarPlay (%d)
[WARN] Returning error for add incoming call request because it is a video call and we are not connected to CarPlay (%d) and Car Mode is active (%d)
[WARN] Returning error for add incoming call request because it is a direct call to a secondary device and relay calling is preferred over direct calling
[WARN] Update requires additional authentication before it can be answered
[WARN] There is an error: %@, but we are still asked to report call to clients
[WARN] Ignoring add incoming call request because a call already exists with the same UUID: existingCall: %@, relayCallWithUUID: %@
Call source %@ updated call with UUID %@ with update %@
[WARN] Sending %@ for existing call with uniqueProxyIdentifierUUID=%@ since it cannot co-exist with ongoing calls.
[WARN] No call found for call source %@ and UUID %@. All calls: %@
Call source %@ ended call with UUID %@ with ended at date %@ with reason %ld failure context %@
[WARN] Deferring acknowledgement of VoIP call with UUID %@ ended until minimum ring duration has passed
Setting callGroupUUID to nil for orphaned grouped call %@
[WARN] Call %@ already has a date ended
Call source %@ sent invitation for outgoing call with UUID %@ at date %@
[WARN] Call %@ already has a date started outgoing
[WARN] Call %@ is not outgoing
Call source %@ started connecting call with UUID %@ at date %@
[WARN] Call %@ already has a date started connecting
Call source %@ connected outgoing call with UUID %@ at date %@
[WARN] Call %@ already has a date connected
Call source %@ finished audio for call with UUID %@
Found call %@ for UUID %@, so setting hasAudioFinished
Did not find a call for UUID %@, so expediting deferred end interruption instead
Call source %@ received call with UUID: %@ crossDeviceIdentifier %@ bytesOfDataUsed %ld
Call source %@ received requested transaction %@
Call source manager %@ completed transaction group %@
Pull call action fulfilled: %@
Pull call action failed: %@
Could not find pulled call context for completed pull call action %@. All contexts: %@
Call action completed for call: %@
[WARN] Could not find call for completed call action: %@. All calls: %@
Action completed: %@
Call sources changed: %@
Ending call %@ since its backing call source %@ is no longer connected
Call controller host %@ requested transaction %@ for connection with identifier: %@
Using call source %@ for requested transaction %@
[WARN] Not allowing requested transaction because no call source was found. All call sources: %@
Marking all calls as changed because providers changed
Handling managed device policy changed for call: %@
Managed device policy no longer allowed, disconnecting: %@
machServiceName: %@ newConnection: %@
Accepting XPC client for %@: %@
Rejecting client for %@ because it lacks the %@ capability: %@
Started tracking call: %@
Stopped tracking call: %@
Asked to answer call %@ while disconnecting calls %@ and holding calls %@
Asked to hold calls %@ while unholding calls %@
Asked to group calls %@ with calls %@
Asked to ungroup call %@ from other calls in group %@
Asked to disconnect call %@ while ungrouping call %@
Asked to disconnect all calls %@
Asked to disconnect calls %@ while holding calls %@ and unholding calls %@ and ungrouping calls %@
Asked to set TTY type to %d for calls %@
Asked to set uplink muted to %d for calls %@
handleCallStatusChanged %@
bytesOfDataUsed: %ld callHistoryIdentifier: %@
[WARN] Invalid TUHandle generated from CXLabelHandle %@
[WARN] Invalid TULabeledHandle generated from CXLabelHandle %@
[WARN] Invalid TUSenderIdentity generated from CXSenderIdentity %@
Asked to hold relay calls %@ while unholding relay calls %@
Asked to answer relay call %@ while disconnecting active relay calls %@
[WARN] Ignoring request to answer call because canBeAnswered is NO: %@
Asked to answer relay call %@ while disconnecting held relay calls %@ and holding relay calls %@
Asked to answer relay call %@ while holding relay calls %@
Asked to group relay calls %@ with relay calls %@
Asked to ungroup relay call %@ from other relay calls in group %@
Asked to disconnect relay call %@ while ungrouping relay call %@
Asked to disconnect relay calls %@
Asked to disconnect relay calls %@ while holding relay calls %@ and unholding relay calls %@ and ungrouping calls %@
Received notification: %@
Device first unlock block invoked, initializing CXCallDirectoryManager...
XPC activity checked in. Criteria: %@
Setting activity state to XPC_ACTIVITY_STATE_CONTINUE
Error setting activity state to XPC_ACTIVITY_STATE_CONTINUE
Beginning daily maintenance with activity %@
Successfully compacted store
Error compacting store: %@
Setting activity state to XPC_ACTIVITY_STATE_DONE
Error setting activity state to XPC_ACTIVITY_STATE_DONE
Error synchronizing call directory extensions: %@
Successfully synchronized call directory extensions
Extensions changed for Call Directory NSExtensionManager %@, but we do not have a CXCallDirectoryManager (perhaps because device is not yet unlocked) so cannot synchronize
^*A{
?__C
CHRecentCallMediaType
TUMomentsAvailability
Triggers
NCSDCallCenterObserverTriggers
TURouteDeviceType
CTError
TUCallVerificationStatus
TUCallFilteredOutReason
VMMailboxType
HandleType
NCXHandleType
TUCallStatus
Name
NNSNotificationName
AVAudioSessionPriority
CSDAudioInterruptionProviderType
RPDeviceChangeFlags
CHHandleType
CHRecentCallTTYType
TUHandleType
MRPlaybackState
TUCallSoundRegion
TUCallSoundPlayerSoundType
AXSDefaultRouteForCall
CSDAudioInterruptionOperationMode
Mode
NAVAudioSessionMode
Category
NAVAudioSessionCategory
Foundation
CallKit
callservicesd
AudioInterruptionProvider
AnyAudioInterruptionProvider
AudioInterruptionPriorityProvider
AudioInterruptionProviderSetActiveOptions
AudioInterruptionProviderIdentifier
AudioInterruptionPriority
DescriptorResolver
DescriptorType
BlockedCallFilter
TinCanIDSProviderDelegate
UserIntentManager
NSUserDefaults
ConversationPersistenceStorage
EmergencyCallbackCapabilities
PowerAssertionManager
AudioInterruptionProviderFactoryProtocol
AVAudioSessionInterruptionProviderType AVAudioClientInterruptionProviderType
AudioInterruptionProviderFactory
NearbyDeviceRoute
ChangeTrackingDescriptorResolver
UpdateContext
HoldMusicDescriptor
CallCenterObserver
callservicesd
GroupFaceTimeNotificationProvider
SoundDescriptorActionResolver
FaceTimeLivePhotosIDSService
UNNotificationResponse
callservicesd
UserNotificationProvider
UserNotificationResponse
NotificationType
AVAudioClientInterruptionProvider
FaceTimeMultiwayIDSService
AVAudioSessionInterruptionProvider
callservicesd
ProcessState
ProcessObserver
callservicesd
FaceTimeNotificationProvider
FilterStatus
NSNumberConvertible
SharedConversationServerBag
CSDIDSService
IDSDeviceDestinationResolver
NearbyDeviceRouteProvider
DirtyCallManager
DuetDonater
allowContactsOnly
DescriptorProvider
DescriptorType
EmptyDescriptorProvider
EmptyDescriptor
CallController
TUAudioSystemController
LocalAudioSystemProvider
AudioActivationContext
SoundDescriptorAction
AudioController
CSDAudioController
AudioInterruptionProviderPool
MomentsUsageReport
TLAlert
callservicesd
RingtoneProviderAlertPlaybackObserver
RingtoneProviderAlert
RingtoneProviderProtocol
RingtoneProvider
RouteProvider
DeselectableRouteProvider
PairedHostDeviceRouteTrackingRouteProvider
TinCanIDSService
RTCReporter
RTCReporterInfo
RTCCSDCallInfo
CodingKeys
MomentsControllerLocalCapabilities
UserIntentValidator
BackgroundBluetoothAccessValidator
DonatedIntentValidator
ApplicationStateValidator
PrivateAPIValidator
MediaRemoteStateValidator
UserIntentValidationResult
MomentsNotification
MbP?
CHManager
CHRecentCall
callservicesd
CallHistoryDataSource
RecentCall
CallHistoryNotificationProvider
CallFilterManager
SoundDescriptor
?callservicesd
HoldMusicProviderProtocol
HoldMusicProvider
SpeechSynthesizerEvent
callservicesd
CarPlayManager
RTCCSDRelayDeviceRoute
RTCCSDAudioRouteType
CodingKeys
MomentsControllerSession
UnknownCallFilter
ContactsCallFilter
RouteController
PendingRouteContext
TinCanIDSProviderDelegateCapabilities
IDSProviderDelegateCapabilities
ConversationPersistenceController
AudioDescriptor
PairedHostDeviceRouteProvider
RingtoneDescriptor
IDSPendingChat
GroupIDSPendingChat
DescriptorTrackingProvider
AudioResolverProtocol
AudioResolver
Context
FaceTimeIDSProviderDelegateCapabilities
Cache
CacheItem
callservicesd
LocalAudioRouteProvider
CallAudioInterruptionState
RPCompanionLinkClient
RPCompanionLinkDevice
NearbyDevice
NearbyDeviceProvider
DeviceType
NearbyDeviceMonitor
CSDCall
AudioInterruptionActivationStateObserver
AudioInterruptionDescriptor
ProviderType
UNUserNotificationCenter
callservicesd
UserNotificationCenter
UserNotificationController
DiscoveryModeProviderProtocol
DiscoveryModeProvider
VMVoicemail
VMVoicemailManager
callservicesd
VoicemailDataSource
Voicemail
VoicemailNotificationProvider
CallHistoryCallFilter
OwnNumberCallFilter
DiscoveryModeDescriptor
SoundProviderProtocol
SoundProvider
AudioInterruptionDeferredEndDescriptor
RTCCSDConversationInfo
CodingKeys
callservicesd
CSDAVCMoments
KeychainPasswordItem
KeychainError
ASCIIStringConvertible
?ScreenTimeCallFilter
allowedByScreenTime
MomentsRequest
softlink:r:path:/System/Library/Frameworks/Intents.framework/Intents
$sSY
$ss25ExpressibleByArrayLiteralP
$ss10SetAlgebraP
$ss9OptionSetP
So8NSStringC
$ss21_ObjectiveCBridgeableP
$s13callservicesd25AudioInterruptionProviderP
14DescriptorType
Sgyc
$s13callservicesd33AudioInterruptionPriorityProviderP
$s13callservicesd18DescriptorProviderP
x2id_t
$s13callservicesd18DescriptorResolverP
So8NSObjectC
So17OS_dispatch_queueC
So30CSDAbstractIDSProviderDelegateC
SbSo17CXStartCallActionC_
ShySSGSo17CXStartCallActionC_
So22TUContactsDataProviderCtc
So25CSDIDSDualSessionProvider_p
_ShySSGSDySSypGSo17OS_dispatch_queueCtc
So10CSDIDSChat_pSo25CSDExternalIDSDualSessionC_
So17CXStartCallActionCS2btc
So22TUContactsDataProviderC
So19CXInProcessProviderC
So25CSDExternalIDSDualSessionCSo8TUHandleCSbSo12NSDictionaryCSo10CSDIDSChat_pIeyByyyya_
So25CSDExternalIDSDualSessionCSo8TUHandleCSbSDySS
GSo10CSDIDSChat_pIegggygo_
So10CSDIDSChat_p
SaySo10CSDIDSChat_pG
ySS_yptG
ShySSG
SDySSypG
So17CXStartCallActionC
ypSg
ySS_SSG
ySSG
$s13callservicesd30ConversationPersistenceStorageP
$s13callservicesd37EmergencyCallbackCapabilitiesProtocolP
yycSg
yyXlGSgGc
ySi_So17OS_dispatch_queueC
So21CSDCallCenterObserver_p
SgXw
IeyB_
So16IMPowerAssertionCSg
So21CSDCallCenterObserver_pSg
So17TURouteControllerCSg
SgXw
$s13callservicesd40AudioInterruptionProviderFactoryProtocolP
37AVAudioClientInterruptionProviderType
38AVAudioSessionInterruptionProviderType
So14IDSDestinationC
$s13callservicesd32ChangeTrackingDescriptorResolverP
$s13callservicesd26CallCenterObserverProtocolP
$s13callservicesd26CallCenterObserverDelegateP
So22TUCallContainerPrivate_pyc
So20NSNotificationCenterC
So29CSDCallCenterObserverDelegate_pSgXw
ySo7CSDCallC_
tcSg
So7CSDCallC
IeyByy_
So21TUConversationManagerC
So16FTNetworkSupportC
SSSo14TUConversationCc
SSSo8TUHandleCc
ShySo22UNNotificationCategoryCG
ySo21UNNotificationRequestCcSg
ySS_So21UNNotificationContentCtcSg
ySScSg
ySo20UNNotificationActionCG
ySo25TUConversationParticipantC_G
10descriptor_t
SgSo7CSDCallC_
So7CSDCallC
SgIeggyr_
So21CSDFaceTimeIDSServiceC
$s13callservicesd24UserNotificationProviderP
$s13callservicesd24UserNotificationResponseP
SaySSG
So21OS_dispatch_semaphoreC
_pSg
So14AVAudioSessionC
So14AVAudioSessionCSg
$s13callservicesd23ProcessObserverProtocolP
SDySSSDy
So26BKSApplicationStateMonitorC
tcSg
_SitG
ySSG
ySSSo8NSNumberCG
ySSSo21STConversationContextCG
ySSSo14STConversationCG
ShySo22UNNotificationCategoryCGG
_Sb9available_Si5counttt
Sb9available_Si5counttG
SiGIegg_
ySSypG
SS_ypt
SgXw
ySo21RPCompanionLinkDeviceCG
ySSSaySo9CNContactCGG
yS2SG
So12NSDictionaryCIeyBy_
IeyByy_
ySS_SSGt
ySS_SSGG
$s13callservicesd10CallFilterP
$s13callservicesd19NSNumberConvertibleP
$s13callservicesd28IDSDeviceDestinationResolverP
Sbyc
So9IDSDeviceCSgSSc
So15CSDIDSTransportCSg
ySo7TURouteCG
ySo8NSNumberCG
ySS_SSGG
yypG
ySo8TUHandleCG
ySuG
ySi5count_Sb11isAmbiguoustG
ySo13CSDCallFilter_pG
So13CSDCallFilter_p
ySaySo7TURouteCGG
SaySo7TURouteCG
ySaySo7CSDCallCGG
SaySo7CSDCallCG
$s13callservicesd24DirtyCallManagerProtocolP
ySo7CSDCallCcSg
ShySo7CSDCallCG
So7CSDCallCIeyBy_
So7CSDCallC
So12TUCallCenterC
SDyS2SGSg
So6TUCallCSg
So14NSUserDefaultsC
So14NSUserDefaultsC
ySbGIeggn_
So22CSDCallStateControllerCSgXw
SaySo17CSDCallDataSourceCG
So19CSDDirtyCallManager_p
SgXw
$s13callservicesd24LocalAudioSystemProviderP
SSSg
SS3key_yp5valuetSg
ySSSDy
ySSyXlG
ySSSo7TURouteCG
ySSSo21RPCompanionLinkDeviceCG
So12RTCReportingCG
So14OS_nw_activity_pG
_AAt
38AVAudioSessionInterruptionProviderType
37AVAudioClientInterruptionProviderType
yq_q0_q1_G
Sdyc
GSgXw
_pSg
$s13callservicesd21RingtoneProviderAlertP
$s13callservicesd24RingtoneProviderProtocolP
So14CNContactStoreC
_pSg
_pSgSo20TLAlertConfigurationCc
ySo15CNKeyDescriptor_pG
So15CNKeyDescriptor_p
$s13callservicesd13RouteProviderP
$s13callservicesd25DeselectableRouteProviderP
$s13callservicesd029PairedHostDeviceRouteTrackingE8ProviderP
SDySSSay
So12RTCReportingCG
So14OS_nw_activity_pG
So19CSDAppleIDUtilitiesC
ySS_SStG
SDyS2SG
SS3key_yp5valuet
3key_yp5valuetSg
SayypG
SaySDySSypGG
So10CSDIDSChatC
So14TUConversationC
So7TURouteC
So23RTCSecureHierarchyTokenC
$s13callservicesd15RTCReporterInfoP
SiSg
SbSg
$s13callservicesd19UserIntentValidatorP
ySS_SSGSg
z_Xx
_pXp
$s13callservicesd21CallHistoryDataSourceP
$s13callservicesd10RecentCallP
So21TUCallProviderManagerC
SDySS
_pcSg
_pSg
ySo11NSPredicateCG
ySo22UNNotificationCategoryCG
ySSG
ySo8TUHandleCG
ySuG
ySo24UNNotificationAttachmentCG
Ieg_
So13TUDialRequestC
So7NSErrorCSg
So7CSDCallCSg
ySo7CSDCallCSgG
ySo12TUAudioRouteCG
ySbG
ySo7CSDCallCG
ySo7CSDCallCG
ShySo8CHHandleCGSg
ShySo8CHHandleCG
SaySo13CSDCallFilter_pG
So22TUSenderIdentityClientC
So14TUCallProviderC
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
$s13callservicesd25HoldMusicProviderProtocolP
So19AVSpeechSynthesizerCSg
So13AVAudioPlayerCSg
SgXw
So16CARSessionStatusC
ySbcSg
SgXw
IeyBy_
So13CSDAVCMoments_p
SDySS
So38TUContactsDataProviderAppleCareHandlesC
So45CSDCarrierBundlePhoneNumberProviderControllerC
SDySSSaySo9CNContactCGG
SDySSSo7TURouteCG
ySo7TURouteCcSg
So7TURouteCIeyBy_
SgXw
SgXwz_Xx
ySo21RPCompanionLinkClientCG
ySo21RPCompanionLinkClientCG
ySo21RPCompanionLinkClientCGSgXw
SaySo21RPCompanionLinkDeviceCG
ySo21RPCompanionLinkClientCGSgXw
So21RPCompanionLinkDeviceCIegn_
So21RPCompanionLinkDeviceC
Iegny_
So21RPCompanionLinkDeviceC
So7CSDCallCSbIggd_
So6TUCallCSbIggd_
A2ASgSbSo20TUConversationMemberCSo8TUHandleCSayADGSaySo26CSDConversationParticipantCGSo0A6ReportCIegnnnyggggg_
SaySo30CSDMessagingConversationMemberCG
SaySo35CSDMessagingConversationParticipantCG
So15CSDConversationC
ShySo26CSDConversationParticipantCG
ShySo20TUConversationMemberCG
So6NSUUIDCA2BSg
So20TUConversationMemberCSo8TUHandleCSo7NSArrayCAJSo0B6ReportCIeyByyyyyyyyy_
So8TUHandleC
$s13callservicesd26DescriptorTrackingProviderP
$s13callservicesd21AudioResolverProtocolP
14DescriptorType
So22CSDTTYProviderObserver_p
So14TUFeatureFlags_p
Sg_ABtcSg
SgXw
SDyx
yx_xGG
qd__
SaySo12TUAudioRouteCG
So12TUAudioRouteCSg
So12TUAudioRouteC
SaySo12TUAudioRouteCGz_Xx
So21RPCompanionLinkClientC
$s13callservicesd20NearbyDeviceProviderP
$s13callservicesd12NearbyDeviceP
10DeviceType
SDySS10DeviceType
$s13callservicesd40AudioInterruptionActivationStateObserverP
G10identifier_t
$s13callservicesd22UserNotificationCenterP
SDySS
So16CSDClientManagerCyyXlyXlGSg
So22UNNotificationResponseC
_ShySo22UNNotificationCategoryCGtG
SgXw
SgXwz_Xx
So16CSDClientManagerC
So21UNNotificationRequestC
SgXw
$s13callservicesd29DiscoveryModeProviderProtocolP
$s13callservicesd19VoicemailDataSourceP
$s13callservicesd9VoicemailP
So19CoreTelephonyClientC
ShySuG
Sb9available_Si5counttG
_pSg
3key_Sb9available_Si5countt5valuetSg
3key_Sb9available_Si5countt5valuet
ShySo8TUHandleCG
SaySo8TUHandleCG
So9CHManagerC
So12IDSCTAdapterC
So8IDSCTSIM_p
$s13callservicesd21SoundProviderProtocolP
So17TUCallSoundPlayerC
SdSg
So10AVCMomentsCSg
So21CSDAVCMomentsDelegate_pSgXw
$s13callservicesd28ManagedDeviceMonitorDelegateP
$s13callservicesd20ManagedDeviceMonitorP
SDySSyXlG
6status_t
$s13callservicesd22ASCIIStringConvertibleP
So31CSDManagedDeviceMonitorDelegate_pSgXw
So22CSDCallProviderManagerC
SDySSSo14STConversationCG
SDySSSo21STConversationContextCG
SDySS
ySo8TUHandleC_G
So14STConversationCSg
So14STConversationCSgz_Xx
So21STConversationContextC
SgXw
SgXwz_Xx
So6TUCallC
So21STConversationContextC
ySbGIeggn_
ySbG
SaySo6TUCallCG
ySo20TUConversationMemberC_G
So20CSDAVCMomentsRequest_p
domain
error
rawValue
RawValue
ArrayLiteralElement
Element
_rawValue
_ObjectiveCType
boxed
_beginOrUpdate
_end
_resetState
_activeDescriptor
rawValue
ArrayLiteralElement
RawValue
Element
DescriptorType
default
high
proxy
local
queue
isAccountActive
isDestinationValid
destinationsGenerator
outgoingSessionProviderGenerator
outgoingChatGenerator
contactsDataProvider
queue
queue
privateAPIValidator
$__lazy_storage_$_applicationStateValidator
donatedIntentValidator
backgroundBluetoothAccessValidator
mediaRemoteStateValidator
_emergencyCallbackPossible
emergencyCallbackCapabilitiesDidChange
preventDetachAfterEmergencyCallTimeoutDeterminationHandler
dispatchAfterHandler
dispatchCancelHandler
queue
callCenterObserver
preventDetachAfterEmergencyCallTimeoutWorkItem
powerAssertion
powerAssertionDescription
devices
callCenterObserver
routeController
acquirePowerAssertionHandler
releasePowerAssertionHandler
AVAudioSessionInterruptionProviderType
AVAudioClientInterruptionProviderType
uniqueIdentifier
name
deviceType
isCurrentlyPicked
idsDestination
callContainerClosure
notificationCenter
delegate
triggers
callChanged
queue
conversationManager
ftNetworkSupport
notificationIdentifiersByConversationUUID
carPlayNotificationIdentifiersByConversationUUID
postedParticipantJoinIdentifiers
openURL
localizeConversationName
localizeHandleName
notificationType
categories
replace
removeNotification
updateBadgeValue
callCenterObserver
deviceIsHomePod
FaceTime
Phone
RawValue
activeDescriptor
DescriptorType
audioSession
isLocal
_activationContext
activeDescriptor
DescriptorType
RawValue
queue
processInfoByBundleIdentifier
applicationMonitor
processStateChanged
updateBadgeValue
queue
openURL
localizeHandleName
notificationType
categories
replace
removeNotification
RawValue
routesDidChangeHandler
didPickRouteHandler
didDeselectAllRoutesHandler
supportsPrimaryCalling
hasRelayiCloudAccount
idsDeviceForIDSDeviceIdentifier
queue
callCenterObserver
nearbyDeviceMonitor
idsDeviceDestinationResolver
nearbyDeviceRoutes
activeRelayClientTransport
currentCallsSupportNearbyDevices
callChanged
queue
dirtyCallsArray
dirtyCallsSet
queue
maxDuration
unknownShortCallSignal
knownCallerSignal
junkCallSignal
silenceUnknownCallersEnabledObserver
DescriptorType
callStateController
callChanged
dataSources
dirtyCallManager
callOutgoing
accessibilityDefaultRoute
audioSourceKey
beginOrUpdate
preserve
queue
resolver
audioInterruptionProviderPool
ringtoneProvider
soundProvider
holdMusicProvider
discoveryModeProvider
notificationCenter
deferredEndWorkItem
pendingExpeditedEndInterruptionUUIDs
endInterruptionDelay
mediaServicesWereResetObserver
audioSessionInterruptionObserver
audioController
factory
localAVAudioSessionInterruptionProvider
proxyAVAudioSessionInterruptionProvidersByAudioSessionID
avAudioClientInterruptionProvider
availability
photoRequestSuccessCount
photoRequestFailureCount
medianRequestDuration
meanRequestDuration
didBeginPlaying
contactStore
currentAlert
endedPlayingSemaphore
alertGenerator
playbackObserverGenerator
DescriptorType
queue
relayDeviceRouteChangesByCallUUID
groupUUIDToConversationReportingSessions
groupUUIDToConversationInfo
callUUIDToCallReportingSessions
callUUIDtoConversationUUID
conversationGroupUUIDToCallUUID
callUUIDtoConversationGroupUUID
uuidToNWActivity
uuidToNWActivityConnecting
idsSessionUUIDToChatUUIDs
appleIDUtilities
callUUID
durationMs
bucketedDuration
endReason
providerErrorCode
providerEndedReason
setupTimeMs
connectionTimeMs
relay
incoming
connected
currentlyGrouped
relayDeviceRouteChanges
filteredOutReason
verficationStatus
knownCallerStatus
isOwnNumber
isConversation
returnedCall
isSiriSuggested
isKnownContact
isVerifiedAppleCare
isSignedIntoiCloud
junkConfidence
identificationCategory
isKnownCaller
timeout
isAmbiguous
processObserver
donatedIntentCache
validator
isValid
streamToken
requesterID
queue
callHistoryDataSource
callProviderManager
recentCallByNotificationIdentifier
supportedMediaTypes
supportedProviders
mostRecentCallDate
callHistoryDatabaseChangedNotifyToken
inCallServiceProcessObserver
supportsDisplayingFaceTimeAudioCalls
openURL
dialRecentCall
notificationType
replace
removeNotification
updateBadgeValue
filters
senderIdentityClient
soundType
provider
isVideo
region
uuid
speechSynthesizerEventHandler
activeDescriptor
speechSynthesizer
audioPlayer
finishedUtterance
startedUtterance
canceledUtterance
DescriptorType
carSessionQueue
carSessionStatus
carPlayScreenConnectionChanged
type
failed
iPhone
iPad
iPod
watch
audioAccessory
RawValue
moments
remoteIDSDestinations
isRegistered
activeRequestsByTransactionID
callCenterObserver
contactStore
appleCareHandles
carrierBundleController
_routesByUniqueIdentifier
routesDidChangeHandler
routeWasPickedHandler
timedOutPickingRouteHandler
queue
routeProviders
pendingRouteContext
pickWhenAvailableRouteIdentifier
pendingPickedRouteTimeout
route
routeProvider
queue
storage
interruptionDescriptor
interruptionDeferredEndDescriptor
ringtoneDescriptor
soundDescriptorAction
holdMusicDescriptor
discoveryModeDescriptor
queue
routesDidChangeHandler
pairedHostDeviceRoutes
contactIdentifier
providerRingtoneSoundURL
uuid
isVideo
handle
queue
callCenterObserver
ttyProviderObserver
localAudioSystemProvider
deviceSupportsRingtone
featureFlags
soundDescriptorActionResolver
resolvedDescriptor
resolutionChangedHandler
DescriptorType
UpdateContext
call
triggers
items
timeProvider
expiration
item
routesDidChangeHandler
audioRoutes
queue
localAudioSystemProvider
callCenterObserver
ttyProviderObserver
callAudioCategory
callAudioMode
lastUserPickedRoute
callAudioInterruptionState
inactiveWithPrematurelySelectedRoute
inactive
active
DeviceType
queue
nearbyDeviceProvider
devicesChangedHandler
devicesByEffectiveIdentifier
providerType
category
mode
activationContext
priority
wantsHoldMusic
operationMode
activationStateObserver
callProviderMicAttributionKey
avAudioSession
avAudioClient
callFilterManager
phoneNotificationCenter
faceTimeNotificationCenter
providersByIdentifier
queue
providers
clientManager
DescriptorType
queue
telephonyClient
voicemailDataSource
postedVoicemailIdentifiers
pendingVoicemailIdentifiers
mostRecentVoicemailDate
mostRecentNonVisualVoicemailDate
localizeVoicemailName
callbackVoicemail
openURL
unsubscribedVoicemailInfoForUUID
notificationType
replace
removeNotification
updateBadgeValue
usTollFreePrefixes
callHistoryManager
idsCTAdapter
activeDescriptor
player
DescriptorType
callUUID
uuid
startDate
conversationID
endDate
duration
maximumMemberCount
initialMemberCount
finalMemberCount
maxNumberOfParticipants
AVCBlobRecoveryAttempts
AVCBlobRecoveryTimeouts
moments
delegate
service
accessGroup
account
unhandledError
noPassword
unexpectedPasswordData
unexpectedItemData
delegate
providerManager
conversationsForBundleIdentifier
synchronousConversationsForBundleIdentifier
contextsForCallIdentifier
observationForCallIdentifier
delegateQueue
avcRequest
session
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>Application-Group</key>
<array>
<string>com.apple.callhistory</string>
</array>
<key>BuildMachineOSBuild</key>
<string>20A241111</string>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>callservicesd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.TelephonyUtilities</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>callservicesd</string>
<key>CFBundlePackageType</key>
<string>FMWK</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>18E178</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>14.5</string>
<key>DTSDKBuild</key>
<string>18E178</string>
<key>DTSDKName</key>
<string>iphonesimulator14.5.internal</string>
<key>DTXcode</key>
<string>1240</string>
<key>DTXcodeBuild</key>
<string>12E6178j</string>
<key>LSBackgroundOnly</key>
<true/>
<key>MinimumOSVersion</key>
<string>14.5</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.telephonyutilities.callservicesd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>development</string>
<key>com.apple.CallHistory.sync.allow</key>
<true/>
<key>com.apple.CallKit.call-directory</key>
<array>
<string>synchronize-extensions</string>
<string>compact-store</string>
<string>query-identification-entries</string>
</array>
<key>com.apple.CallKit.call-directory.extension-host</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>phone</string>
<string>voice</string>
<string>identity</string>
<string>data-usage</string>
<string>data-allowed</string>
<string>data-allowed-write</string>
<string>carrier-space</string>
<string>carrier-settings</string>
</array>
<key>com.apple.CompanionLink</key>
<true/>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.FaceTime.CallLaunch</key>
<true/>
<key>com.apple.FaceTime.NoPrompt</key>
<true/>
<key>com.apple.assistant.settings</key>
<true/>
<key>com.apple.backboardd.launchapplications</key>
<true/>
<key>com.apple.backboardd.proximityDetection</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coreduetd.context</key>
<true/>
<key>com.apple.coremedia.allow-protected-content-playback</key>
<true/>
<key>com.apple.coremedia.captureassertionservice</key>
<array>
<string>modify-assertion</string>
</array>
<key>com.apple.coretelephony.Calls.allow</key>
<true/>
<key>com.apple.developer.notificationcenter-identifiers</key>
<array>
<string>com.apple.facetime</string>
<string>com.apple.Photos</string>
</array>
<key>com.apple.duet.expertcenter.consumer</key>
<true/>
<key>com.apple.imagent</key>
<true/>
<key>com.apple.imagent.av</key>
<true/>
<key>com.apple.multitasking.termination</key>
<true/>
<key>com.apple.multitasking.voipassertions</key>
<true/>
<key>com.apple.private.CallHistory.read-write</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.aps-client-cert-access</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.phoneNumberResolver</string>
<string>com.apple.MobileAsset.ProductKit</string>
</array>
<key>com.apple.private.attentionawareness</key>
<true/>
<key>com.apple.private.attentionawareness.poll</key>
<true/>
<key>com.apple.private.carkit.dnd</key>
<true/>
<key>com.apple.private.contacts</key>
<true/>
<key>com.apple.private.coreaudio.borrowaudiosession.allow</key>
<true/>
<key>com.apple.private.coremedia.interruptions.phonecallpriority.allow</key>
<true/>
<key>com.apple.private.coreservices.canalwaysadvertise</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.coreservices.canopenactivity</key>
<true/>
<key>com.apple.private.coreservices.lsuseractivityd.LSAlwaysPick</key>
<true/>
<key>com.apple.private.coreservices.lsuseractivityd.bestappsuggestion</key>
<true/>
<key>com.apple.private.dmd.emergency-mode</key>
<true/>
<key>com.apple.private.dmd.policy</key>
<true/>
<key>com.apple.private.donotdisturb.behavior.resolution.client-identifiers</key>
<array>
<string>com.apple.telephonyutilities.callservicesd</string>
</array>
<key>com.apple.private.hid.client.event-monitor</key>
<true/>
<key>com.apple.private.icfcallserver</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.facetime.multi</string>
<string>com.apple.private.alloy.facetime.video</string>
<string>com.apple.private.alloy.facetime.lp</string>
<string>com.apple.private.alloy.phonecontinuity</string>
<string>com.apple.ess</string>
<string>com.apple.private.alloy.phone.auth</string>
<string>com.apple.private.alloy.facetime.audio</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.facetime.multi</string>
<string>com.apple.private.alloy.facetime.video</string>
<string>com.apple.private.alloy.facetime.lp</string>
<string>com.apple.private.alloy.phonecontinuity</string>
<string>com.apple.private.alloy.phone.auth</string>
<string>com.apple.private.alloy.facetime.audio</string>
</array>
<key>com.apple.private.ids.remoteurlconnection</key>
<true/>
<key>com.apple.private.ids.self-session</key>
<array>
<string>com.apple.private.alloy.facetime.multi</string>
<string>com.apple.private.alloy.phonecontinuity</string>
<string>com.apple.private.alloy.facetime.video</string>
<string>com.apple.private.alloy.facetime.audio</string>
<string>com.apple.private.alloy.tincan.audio</string>
</array>
<key>com.apple.private.ids.session</key>
<array>
<string>com.apple.private.alloy.facetime.multi</string>
<string>com.apple.private.alloy.phonecontinuity</string>
<string>com.apple.private.alloy.facetime.video</string>
<string>com.apple.private.alloy.facetime.audio</string>
<string>com.apple.private.alloy.tincan.audio</string>
</array>
<key>com.apple.private.ids.session-private</key>
<array>
<string>com.apple.private.alloy.facetime.multi</string>
<string>com.apple.private.alloy.phonecontinuity</string>
<string>com.apple.private.alloy.facetime.video</string>
<string>com.apple.private.alloy.facetime.audio</string>
<string>com.apple.private.alloy.tincan.audio</string>
</array>
<key>com.apple.private.imavcore.imavagent</key>
<true/>
<key>com.apple.private.imcore.imremoteurlconnection</key>
<true/>
<key>com.apple.private.lockdown.finegrained-get</key>
<array>
<string>NULL/ActivationState</string>
</array>
<key>com.apple.private.necp.match</key>
<true/>
<key>com.apple.private.notificationcenter-system</key>
<array>
<dict>
<key>identifier</key>
<string>com.apple.SystemNote</string>
</dict>
</array>
<key>com.apple.private.notificationcenter.internalpushclient</key>
<true/>
<key>com.apple.private.notificationcenterui.alerts</key>
<true/>
<key>com.apple.private.rtcreportingd</key>
<true/>
<key>com.apple.private.screen-time</key>
<true/>
<key>com.apple.private.security.storage.CallHistory</key>
<true/>
<key>com.apple.private.security.storage.Messages</key>
<true/>
<key>com.apple.private.security.storage.Voicemail</key>
<true/>
<key>com.apple.private.suggestions.contacts</key>
<true/>
<key>com.apple.private.system-keychain</key>
<true/>
<key>com.apple.private.tcc.allow.overridable</key>
<array>
<string>kTCCServiceMediaLibrary</string>
<string>kTCCServicePhotos</string>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceMicrophone</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.facetime</string>
<string>com.apple.mobilephone</string>
</array>
<key>com.apple.runningboard.process-state</key>
<true/>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.InCallService</string>
<string>com.apple.suggestions</string>
<string>com.apple.ScreenTimeAgent</string>
<string>com.apple.VideoConference</string>
</array>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>RootDomainUserClient</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.network.server</key>
<true/>
<key>com.apple.security.personal-information.addressbook</key>
<true/>
<key>com.apple.security.temporary-exception.shared-preference.read-only</key>
<array>
<string>com.apple.suggestions</string>
</array>
<key>com.apple.siri.external_request</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.shortcutitems.fullaccess</key>
<true/>
<key>com.apple.springboard.statusbarstyleoverrides</key>
<true/>
<key>com.apple.symptom_diagnostics.report</key>
<true/>
<key>com.apple.systemstatus.activityattribution</key>
<true/>
<key>com.apple.systemstatus.publisher.domains</key>
<array>
<string>calling</string>
</array>
<key>com.apple.videoconference.allow-conferencing</key>
<true/>
<key>com.apple.visualvoicemail.client</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>callservicesd</string>
</array>
</dict>
</plist>
+1800
+1888
+1877
+1866
+1855
+1844
