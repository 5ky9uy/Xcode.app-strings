callStateController
relayMessagingController
callController
sharedInstance
_allCalls
allCalls
.cxx_destruct
setCallStateController:
_callStateController
init
initWithCallCenterObserver:
setTriggers:
setDelegate:
_updateCurrentOrientationValue
setOrientationEventsEnabled:
setPassiveOrientationEvents:
defaultCenter
removeObserver:
dealloc
accelerometer
currentDeviceOrientation
setCurrentOrientation:
provider
isSystemProvider
isVideo
callStatus
callCenterObserver
callContainer
currentVideoCalls
countByEnumeratingWithState:objects:count:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
accelerometer:didAccelerateWithTimeStamp:x:y:z:eventType:
accelerometer:didChangeDeviceOrientation:
callCenterObserver:callChanged:
callsChangedForCallCenterObserver:
setCallCenterObserver:
currentOrientation
_currentOrientation
_accelerometer
_callCenterObserver
sharedInstanceWithQueue:
alloc
initWithQueue:
handleCallStatusChanged:
addObserver:selector:name:object:
handleSessionStateChanged:
beginTransactionIfNecessaryForObject:
endTransactionIfNecessaryForObject:
queue
objectsWithTransactions
containsObject:
addObject:
count
beginTransaction
removeObject:
endTransaction
object
status
state
_objectsWithTransactions
_queue
initWithFormat:arguments:
simulateCrashReportWithFormat:
bundleIdentifier
invalidate
name
initWithBundleIdentifier:flags:reason:name:withHandler:
setProcessAssertion:
processAssertionNameForBundleIdentifier:
initWithBundleIdentifier:flags:reason:name:
stringWithFormat:
isEqualToString:
processAssertionWithBundleIdentifier:
initWithBundleIdentifier:
acquireWithCompletionHandler:
processAssertion
_bundleIdentifier
_processAssertion
initWithClientUUID:serialQueue:
conferenceProvider
setState:
setConfiguration:
conferenceProviderCreationBlock
configuration
clientUUID
setConferenceProvider:
deviceRole
initializeNewCallWithDeviceRole:
requiresInviteDictionary
localPortraitAspectRatio
localLandscapeAspectRatio
setLocalPortraitAspectRatio:localLandscapeAspectRatio:
setLocalInviteDictionary:
_sendDelegateFinishedPreparing
_setEndedWithReason:error:
remoteInviteDictionary
callID
inviteDictionaryForCallID:remoteInviteDictionary:nonCellularCandidateTimeout:block:queue:
type
isCaller
capabilities
socket
startConnectionAsCaller:capabilities:socket:error:
destination
startConnectionAsCaller:remoteInviteDictionary:capabilities:destination:error:
date
timeIntervalSince1970
_setUpDidStartTimeout
stop
cancel
sendData:
setPeerReportingIdentifier:sessionIdentifier:
setEndedReason:
setEndedError:
_sendDelegateEndedWithReason:error:
inputAudioPowerSpectrumToken
outputAudioPowerSpectrumToken
setRemoteInviteDictionary:
setCaller:
setDateStartedConnecting:
setDateConnected:
setDateEnded:
_isMuted
isMicrophoneMuted
setMicrophoneMuted:
_sendDelegateMutedChanged
_isSendingAudio
isAudioPaused
setAudioPaused:
isSendingAudio
_isSendingAudioData
setSendingAudio:
_isSendingVideo
expectedIsSendingVideo
boolValue
isVideoPaused
setVideoPaused:
numberWithBool:
setExpectedIsSendingVideo:
setCapabilities:
updateCapabilities:
setRemoteVideoPresentationSize:
setRemoteVideoPresentationState:
connectionTimeout
setDeviceRole:
delegate
delegateQueue
conferenceFinishedPreparing:
_performDelegateCallback:
conferenceStarted:
conference:endedWithReason:error:
connectionClosedForConference:
mutedChangedForConference:
sendingAudioChangedForConference:
receivedFirstRemoteFrameForConference:
remoteVideoPausedForConference:
conference:remoteMediaStalled:
conference:inputFrequencyLevelChangedTo:
conference:outputFrequencyLevelChangedTo:
conference:inputLevelChangedTo:
conference:outputLevelChangedTo:
conference:changedBytesOfDataUsed:
conference:didReceiveData:forCallID:
code
_sendDelegateStarted
_endedReasonForDidStopError:error:
objectForKeyedSubscript:
integerValue
_sendDelegateBytesOfDataUsageChanged:
_sendDelegateConnectionClosed
copy
_sendDelegateInputFrequencyLevelChanged:
_sendDelegateOutputFrequencyLevelChanged:
_sendDelegateInputLevelChanged:
_sendDelegateOutputLevelChanged:
_sendDelegateSendingAudioChanged
setHasReceivedFirstRemoteFrame:
_sendDelegateReceivedFirstRemoteFrame
setRemoteVideoPaused:
_sendDelegateRemoteVideoPaused
_sendDelegateRemoteMediaStalled:
_sendDelegateReceivedData:forCallID:
conferenceProvider:didStartSession:error:
conferenceProvider:didStopWithError:callMetadata:
connectionClosedForConferenceProvider:
serverDiedForConferenceProvider:
conferenceProvider:updateInputFrequencyLevel:
conferenceProvider:updateOutputFrequencyLevel:
conferenceProvider:updateInputLevel:
conferenceProvider:updateOutputLevel:
conferenceProvider:didPauseAudio:error:
conferenceProvider:didPauseVideo:error:
conferenceProviderReceivedFirstRemoteFrame:
conferenceProvider:remoteVideoPaused:
conferenceProvider:remoteMediaStalled:
conferenceProvider:didReceiveData:forCallID:
prepareWithConfiguration:
startConnectionWithTransport:
setRemoteIDSDestinationURI:crossDeviceIdentifier:
setDelegateQueue:
localInviteDictionary
setConnectionTimeout:
endedReason
endedError
dateStartedConnecting
dateConnected
dateEnded
isMuted
setMuted:
isSendingAudioData
setSendingAudioData:
hasReceivedFirstRemoteFrame
isSendingVideo
setSendingVideo:
isRemoteVideoPaused
remoteVideoPresentationSize
remoteVideoPresentationState
setQueue:
setConferenceProviderCreationBlock:
_hasReceivedFirstRemoteFrame
_remoteVideoPaused
_state
_remoteVideoPresentationState
_delegate
_delegateQueue
_connectionTimeout
_localInviteDictionary
_endedReason
_endedError
_dateStartedConnecting
_dateConnected
_dateEnded
_configuration
_conferenceProvider
_conferenceProviderCreationBlock
_expectedIsSendingVideo
_remoteVideoPresentationSize
setClientUUID:
setRequiresInviteDictionary:
setLocalLandscapeAspectRatio:
setLocalPortraitAspectRatio:
_caller
_requiresInviteDictionary
_capabilities
_clientUUID
_remoteInviteDictionary
_localLandscapeAspectRatio
_localPortraitAspectRatio
initWithDictionaryRepresentation:
UUID
UUIDString
initWithHandoffIdentifier:
setOutgoing:
initWithType:value:
setRemoteHandle:
setContext:
dictionaryRepresentation
mutableCopy
context
isOutgoing
setObject:forKeyedSubscript:
remoteHandle
value
numberWithInt:
initWithHandoffActivityUserInfo:
handoffActivityUserInfo
providerIdentifierForHandoffActivityUserInfo:
dictionary
numberWithUnsignedInt:
setObject:forKey:
numberWithUnsignedLongLong:
setHandle:
setAvcData:
allocWithZone:
copyWithZone:
mergeFrom:
setVersion:
setHasVersion:
hasVersion
setIdentifier:
setHasIdentifier:
hasIdentifier
hasHandle
hasAvcData
setIsMomentsAvailable:
setHasIsMomentsAvailable:
hasIsMomentsAvailable
readFrom:
writeTo:
copyTo:
version
identifier
handle
avcData
isMomentsAvailable
_identifier
_avcData
_handle
_version
_isMomentsAvailable
_has
protoProtocolVersion
setProtoProtocolVersion:
protoWantsVideo
setProtoWantsVideo:
protoSenderMuteUplink
setProtoSenderMuteUplink:
protoMomentsV2Available
setProtoMomentsV2Available:
protoShouldSuppressInCallUI
setProtoShouldSuppressInCallUI:
setProtocolVersion:
protocolVersion
wantsVideo
setWantsVideo:
senderMuteUplink
setSenderMuteUplink:
setMomentsAvailable:
shouldSuppressInCallUI
setShouldSuppressInCallUI:
addProtocolVersion
callStatusChanged:
callContinuityChanged:
shouldSuppressRingtoneChanged:
callStartedConnecting:
callConnected:
providerManager
addDelegate:queue:
updateCallHandoffRegistration
updateAppHistoryActivityForCall
updateHandoffActivityState
updateSuppressRingtoneActivityListeningState
supportsPrimaryCalling
activityCommunicator
stopListeningForActivityType:
providers
handoffIdentifiers
listenForActivityType:dynamicIdentifier:
currentCalls
firstObject
isHostedOnCurrentDevice
isEndpointOnCurrentDevice
handoffDynamicIdentifier
activityWithType:dynamicIdentifier:userInfo:
handoffActivity
endHandoffActivity
broadcastActivity:
setHandoffActivity:
stopBroadcastingActivity:
wasDeclined
startSuppressRingtoneActivityBroadcastingForCall:
broadcastActivity:withTimeout:shouldPrioritize:
shouldSuppressRingtone
callPassingTest:
currentAudioAndVideoCalls
localizedLabel
isoCountryCode
arrayWithCapacity:
displayName
dictionaryWithCapacity:
appHistoryActivityWithTitle:subtitle:keywords:userInfo:
startSuppressRingtoneActivityBroadcastingIfNecessaryForCallWithStatusChange:
ringtoneSuppressedRemotely
componentsSeparatedByString:
lastObject
audioAndVideoCallsWithStatus:
suppressRingtoneDueToRemoteSuppression
providersChangedForProviderManager:
receivedBroadcastedActivityType:dynamicIdentifier:
setActivityCommunicator:
_activityCommunicator
_handoffActivity
initWithUUIDString:
csd_UUIDv5ForString:
csd_UUIDv5
messageSendTime
typeString
uniqueProxyIdentifier
appendFormat:
block
reportingController:statusChangedForCall:totalCallCount:
reportingController:callEnteredForeground:
allCallsBackgroundedForReportingController:
reportingController:relayMessageReceived:fromPairedDevice:
reportingController:transactionGroupCompleted:
reportingController:providerFailedWithAction:forCall:
reportingController:capturedMomentsUsageReport:
reportingController:pickedRoute:forCall:
reportingController:timedOutPickingRoute:forCall:
reportingController:addedActiveConversation:
reportingController:stateChangedForConversation:
reportingController:removedActiveConversation:
reportingController:activeRemoteParticipantsChangedForConversation:
reportingController:remoteMembersChangedForConversation:
reportingController:AVCBlobRecoveryStartedForConversation:
reportingController:AVCBlobRecoveryTimedOutForConversation:
reportingController:receivedReports:forConversation:
reportingController:receivedChat:
reportingController:receivedReports:forSessionWithUUID:
dataSource
setDataSource:
setBlock:
_block
routeController
initWithNotificationName:queue:
initWithRouteController:callCenterObserver:interfaceOrientationObserver:proximitySensorCoveredObserver:queue:
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
orientation
setInterfaceOrientationPortrait:
setHandler:
activeInterfaceOrientationWithCompletion:
addDelegate:
proximitySensorCoveredObserver
setProximitySensorCovered:
setCallback:
beginObserving
updateProximitySensorState
setProximitySensorEnabled:
shouldEnableProximitySensor
proximityDetectionMode
setProximityDetectionMode:
proximityChangeHandler
updateVoiceOverRoutingForCurrentProximityState
isProximitySensorCovered
voiceOverRunningDeterminationHandler
anyCallPassesTest:
pickedRoute
isSpeaker
receiverRoute
pickRoute:
isReceiver
voiceOverTouchShouldRouteToSpeakerDeterminationHandler
speakerRoute
currentCallCount
supportsCurrentPlatform
isInterfaceOrientationPortrait
isRTT
isTTY
routesChangedForRouteController:
isProximitySensorEnabled
interfaceOrientationObserver
setVoiceOverRunningDeterminationHandler:
setVoiceOverTouchShouldRouteToSpeakerDeterminationHandler:
setProximityChangeHandler:
_proximitySensorCovered
_interfaceOrientationPortrait
_proximityDetectionMode
_routeController
_interfaceOrientationObserver
_proximitySensorCoveredObserver
_voiceOverRunningDeterminationHandler
_voiceOverTouchShouldRouteToSpeakerDeterminationHandler
_proximityChangeHandler
handler
conferenceID
hasPrefix:
length
substringFromIndex:
GUID
dataUploaded
dataDownloaded
initWithIDSChat:
setFaceTimeTransportType:
isRemoteMomentsAvailable
setRemoteMomentsAvailable:
otherIMHandle
initWithDestinationID:
setHasVideo:
setSupportsHolding:
setSupportsGrouping:
setSupportsUngrouping:
setSupportsDTMF:
setRequiresInCallSounds:
setCrossDeviceIdentifier:
setAudioInterruptionProvider:
setAudioInterruptionOperationMode:
setAudioCategory:
setAudioMode:
hasVideo
numberWithInteger:
initWithFaceTimeIDSChat:
initWithIMAVChat:
initWithTUConversation:
faceTimeTransportType
exceptionWithName:reason:userInfo:
raise
removeAllObjects
objectAtIndex:
numberWithLongLong:
initWithCapacity:
addRelayDeviceRouteChange:
setCallUuid:
setProviderId:
featuresCount
clearFeatures
featuresAtIndex:
addFeatures:
relayDeviceRouteChangesCount
clearRelayDeviceRouteChanges
relayDeviceRouteChangeAtIndex:
relayDeviceRouteChangeType
hasCallUuid
hasProviderId
setIsIncoming:
setHasIsIncoming:
hasIsIncoming
setIsHeld:
setHasIsHeld:
hasIsHeld
setHasConnected:
setHasHasConnected:
hasHasConnected
setHasEnded:
setHasHasEnded:
hasHasEnded
setIsCurrentlyGrouped:
setHasIsCurrentlyGrouped:
hasIsCurrentlyGrouped
setDurationMs:
setHasDurationMs:
hasDurationMs
setSetupTimeMs:
setHasSetupTimeMs:
hasSetupTimeMs
setConnectionTimeMs:
setHasConnectionTimeMs:
hasConnectionTimeMs
features
setFeatures:count:
setEndReason:
setHasEndReason:
hasEndReason
setHasFaceTimeTransportType:
hasFaceTimeTransportType
setTelephonyTransportType:
setHasTelephonyTransportType:
hasTelephonyTransportType
setProviderErrorCode:
setHasProviderErrorCode:
hasProviderErrorCode
setIsRelay:
setHasIsRelay:
hasIsRelay
setProviderEndedReason:
setHasProviderEndedReason:
hasProviderEndedReason
setHasStartedConnecting:
setHasHasStartedConnecting:
hasHasStartedConnecting
idsLinkType
setIdsLinkType:
setHasIdsLinkType:
hasIdsLinkType
idsLinkTypeAsString:
StringAsIdsLinkType:
callUuid
providerId
isIncoming
isHeld
hasConnected
hasEnded
isCurrentlyGrouped
durationMs
setupTimeMs
connectionTimeMs
endReason
telephonyTransportType
providerErrorCode
isRelay
providerEndedReason
hasStartedConnecting
relayDeviceRouteChanges
setRelayDeviceRouteChanges:
_features
_connectionTimeMs
_durationMs
_endReason
_providerEndedReason
_providerErrorCode
_setupTimeMs
_callUuid
_faceTimeTransportType
_idsLinkType
_providerId
_relayDeviceRouteChanges
_telephonyTransportType
_hasConnected
_hasEnded
_hasStartedConnecting
_isCurrentlyGrouped
_isHeld
_isIncoming
_isRelay
orderedSet
supportsDisplayingFaceTimeAudioCalls
supportsDisplayingFaceTimeVideoCalls
daemonConnected:
handleChatStateChanged:
handleChatFirstRemoteFrameArrived:
handleChatInvitationSent:
handleChatCallInfoChangedNotification:
handleChatConferenceIDChangedNotification:
handleChatConferenceMetadataUpdated:
handleChatMayRequireBreakBeforeMakeChanged:
handleChatInFrequencyChangedNotification:
handleChatOutFrequencyChangedNotification:
setIMAVCapabilities:toCaps:
setupIMAVController
setBlockIncomingInvitationsDuringCall:
setBlockMultipleIncomingInvitations:
_requestPendingInvites
requestPendingACInvitations
requestPendingVCInvitations
cachedChats
chatWithUUID:
_endChatWithUUID:withEndedReason:
endChatWithReason:
facetimeService
callService
isRegistered
imHandleWithID:
arrayWithObjects:count:
callUUID
initOutgoingTo:isVideo:isRelayed:GUID:
setConnectionTimeoutTime:
faceTimeProvider
isUpgrade
setInvitationTimeoutTime:
_setLocalLandscapeAspectRatio:localPortraitAspectRatio:forChat:
invite:additionalPeers:excludingPushTokens:
isComplete
reportCallWithUUID:updated:
fulfill
faceTimeDemuxerDelegate
providerDelegate:callWithUUID:startedConnectingAtDate:
reportOutgoingCallWithUUID:connectedAtDate:
pendingCallActionsOfClass:withCallUUID:
fulfillWithDateConnected:
fail
trace:
registerChat:
_updateProviderForConnectingChat:
_updateProviderForConnectedChat:
_updateProviderForEndedChat:
failureContextForChat:
providerDelegate:callWithUUID:endedAtDate:withReason:failureContext:
setFailureReason:
supportsWLAN
allowAnyNetwork
supportsNonWiFiCalling
supportsNonWiFiFaceTime
localizedStringForKey:value:table:
setTitle:
setMessage:
setHasWiFiSettingsRemediation:
setHasCellularSettingsRemediation:
setHasDateAndTimeSettingsRemediation:
setHasLocationSettingsRemediation:
destinationIdIsPhoneNumber
isLocalParticipant
avChat
reportOutgoingCallWithUUID:sentInvitationAtDate:
_activeCallID
setVideoStreamToken:
reportCallWithUUID:crossDeviceIdentifier:changedBytesOfDataUsed:
mayRequireBreakBeforeMake
setMayRequireBreakBeforeMake:
inFrequencyLevel
reportCallWithUUID:changedFrequencyData:forDirection:
outFrequencyLevel
declineInvitationWithResponse:
reportNewIncomingCallWithUUID:update:completion:
setProvider:
_setUpListeners
endChat
downgradeToAudio
setIsSendingVideo:
acceptInvitation
isOnHold
setIsSendingAudio:
videoPresentationSize
videoPresentationState
IMAVChatRemoteVideoPresentationStateFromCXVideoPresentationState:
isRelaying
setRelayed:
setMute:
invitedToIMAVChat:
createdOutgoingIMAVChat:
inviteFailedFromIMHandle:reason:
providerDidReset:
providerDidBegin:
provider:executeTransaction:
provider:performStartCallAction:
provider:performAnswerCallAction:
provider:performEndCallAction:
provider:performSetHeldCallAction:
provider:performSetMutedCallAction:
provider:performSetGroupCallAction:
provider:performPlayDTMFCallAction:
provider:timedOutPerformingAction:
provider:didActivateAudioSession:
provider:didDeactivateAudioSession:
provider:performSendMMIOrUSSDCodeAction:
provider:performJoinCallAction:
provider:performSetTTYTypeCallAction:
provider:performSetSendingVideoCallAction:
provider:performSetRelayingCallAction:
provider:performPullCallAction:
provider:performSetVideoPresentationSizeCallAction:
provider:performSetVideoPresentationStateCallAction:
isManagingCallWithUUID:
upgradeSessionUUIDForCallWithUUID:
hasCallStartedConnectingWithUUID:
endCallWithUUIDAsAnsweredElsewhere:
endCallWithUUIDAsDeclinedElsewhere:
inviteIMAVPeersWithAction:additionalPeers:tokensToExclude:
setFaceTimeDemuxerDelegate:
setCachedChats:
_faceTimeDemuxerDelegate
_provider
_cachedChats
initWithService:
faceTimeIMAccountCallerIDChanged:
callerID
callerIDByUpdatingState
postNotificationName:object:
setCallerID:
_callerID
distantPast
setRemoteMembers:
newHierarchyTokenFromParentToken:
reportingHierarchyToken
setReportingHierarchySubToken:
reportingHierarchySubToken
initWithTransportToken:delegate:queue:reportingHierarchyToken:
requestActiveParticipants
groupUUID
messagesGroupUUID
avcSessionToken
avcSessionIdentifier
isLocallyCreated
isUplinkMuted
isAudioEnabled
isVideoEnabled
localMember
remoteMembers
memberIdentifiers
allObjects
componentsJoinedByString:
activeRemoteParticipants
appendString:
activeRemoteParticipantsByIdentifier
allValues
setWithArray:
initWithUUID:groupUUID:
setMessagesGroupUUID:
setAvcSessionToken:
setAvcSessionIdentifier:
setAudioEnabled:
setVideoEnabled:
setLocallyCreated:
initiator
setInitiator:
messagesGroupName
setMessagesGroupName:
maxVideoDecodesAllowed
setMaxVideoDecodesAllowed:
setReportingHierarchyToken:
setWithCapacity:
tuConversationParticipant
setActiveRemoteParticipants:
avcSession
sessionIdentifier
sessionToken
idsSession
localParticipantIdentifier
isAudioReady
setRemoteMemberHandles:
localParticipantData
initWithIdentifier:handle:avcData:
setUplinkMuted:
expectedAudioEnabled
setExpectedAudioEnabled:
expectedVideoEnabled
setExpectedVideoEnabled:
expectedVideoPaused
setExpectedVideoPaused:
setRelaying:
numberWithUnsignedInteger:
removeParticipant:
allowsVideo
addParticipant:withVideoEnabled:
setServerProvidedParticipantIdentifiers:
_refreshActiveParticipantsList
serverBag
rebroadcastTimeThreshold
setRebroadcastTimeThreshold:
conversation:addedActiveParticipant:
conversationChanged:
_cancelInFlightAVCBlobRecoveryIfNecessary
isEqualToHandle:
conversation:removedActiveParticipant:
beginParticipantUpdates
videoQuality
visibility
prominence
participantIdentifier
setVideoQuality:visibility:prominence:forParticipantWithIdentifier:
commitParticipantUpdates
remoteMemberHandles
initWithHandle:
isJoined
unionSet:
addMembers:toExistingMembers:activeParticipants:triggeredLocally:
localCapabilities
isEnabled
idsDestination
avcSessionCreationBlock
setAvcSession:
setAvcSessionInProgress:
wantsStagingArea
setByAddingObject:
joinUsingContext:localParticipantAVCData:members:
_reportConversationFailedWithProviderEndedReason:
sendLocalParticipantData:
setAudioReady:
_startAVCSessionIfNecessary
_beginTimeoutForLeavingConversationWithReason:
unsignedIntegerValue
setDownlinkMuted:forParticipantWithIdentifier:
leave
isEqualToSet:
avcSessionInProgress
start
_cancelTimeoutForLeavingConversation
timeoutBlock
setTimeoutBlock:
sessionCleanupTimeout
activeParticipantDestinationsByIdentifier
inflightAVCBlobRecoveryBlocksByIdentifier
AVCBlobRecoveryGracePeriod
tuConversation
avcBlobRecoveryStartedForConversation:
avcBlobRecoveryTimedOutForConversation:
AVCBlobRecoveryTimeout
conversation:requestAVCBlobForParticipantDestination:completion:
allKeys
serverProvidedParticipantIdentifiers
isWaitingToPruneParticipants
setWaitingToPruneParticipants:
activeParticipantPruningTimeout
numberWithUnsignedLong:
removeParticipantWithIdentifier:fromHandle:
participantRefreshBlock
setParticipantRefreshBlock:
activeParticipantRefreshDelay
conversation:failedWithContext:
setMemberIdentifiers:
setStreamToken:
restart
setActiveIDSDestination:
isFromStorage
conversationInvalidated:
setFromStorage:
setActiveParticipantDestinationsByIdentifier:
_requestAVCBlobsIfNecessary
_pruneRemoteParticipantsIfNecessary
reportsReceived:forConversation:
lastRebroadcastTime
timeIntervalSinceDate:
setLastRebroadcastTime:
broadcastLocalParticipantData
_cleanUpFromAVCSessionFailure
conversation:updatedActiveParticipant:
setAudioPriority:
setVideoPriority:
conversation:mediaPrioritiesChangedForParticipant:
session:receivedActiveParticipantDestinationsByIdentifier:
session:didJoinGroup:participantIdentifiers:error:
session:didLeaveGroupWithError:
sessionDidTerminate:
session:endedWithError:reason:
session:didReceiveReport:
session:didStart:error:
session:didDetectError:
session:didStopWithError:
session:changedLocalAudioEnabled:didSucceed:error:
session:changedLocalVideoEnabled:didSucceed:error:
session:changedLocalVideoPaused:didSucceed:error:
serverDisconnectedForSession:
remoteParticipantWithIdentifier:updatedAudioEnabled:streamToken:
remoteParticipantWithIdentifier:updatedVideoEnabled:streamToken:
remoteParticipantWithIdentifier:didChangeAudioPriority:videoPriority:
initWithUUID:groupUUID:messagesGroupUUID:locallyCreated:localMember:initiator:remoteMembers:groupSession:serialQueue:fromStorage:
localConversationParticipant
addActiveParticipant:
updateParticipantPresentationContexts:
addRemoteMembers:triggeredLocally:
joinUsingContext:
startAudio
isRepresentedByRemoteMembers:
setServerBag:
setAvcSessionCreationBlock:
_relaying
_fromStorage
_locallyCreated
_waitingToPruneParticipants
_avcSessionInProgress
_memberIdentifiers
_UUID
_groupUUID
_messagesGroupUUID
_initiator
_localMember
_remoteMembers
_messagesGroupName
_activeRemoteParticipantsByIdentifier
_idsSession
_avcSession
_expectedAudioEnabled
_expectedVideoEnabled
_expectedVideoPaused
_activeParticipantDestinationsByIdentifier
_serverProvidedParticipantIdentifiers
_lastRebroadcastTime
_rebroadcastTimeThreshold
_remoteMemberHandles
_serverBag
_avcSessionCreationBlock
_reportingHierarchyToken
_reportingHierarchySubToken
_inflightAVCBlobRecoveryBlocksByIdentifier
_timeoutBlock
_participantRefreshBlock
serviceName
setHasSupportsHolding:
hasSupportsHolding
setHasSupportsGrouping:
hasSupportsGrouping
setHasSupportsUngrouping:
hasSupportsUngrouping
setHasSupportsDTMF:
hasSupportsDTMF
setSupportsUnambiguousMultiPartyState:
setHasSupportsUnambiguousMultiPartyState:
hasSupportsUnambiguousMultiPartyState
setSupportsAddCall:
setHasSupportsAddCall:
hasSupportsAddCall
setSupportsSendingToVoicemail:
setHasSupportsSendingToVoicemail:
hasSupportsSendingToVoicemail
supportsHolding
supportsGrouping
supportsUngrouping
supportsDTMF
supportsUnambiguousMultiPartyState
supportsAddCall
supportsSendingToVoicemail
_supportsAddCall
_supportsDTMF
_supportsGrouping
_supportsHolding
_supportsSendingToVoicemail
_supportsUnambiguousMultiPartyState
_supportsUngrouping
callWithUniqueProxyIdentifier:
initWithRelayMessage:outgoing:
setCallDelegatesIfNeeded:
hostCallCreationTime
setHostCreationTime:
setHostMessageSendTime:
setClientMessageReceiveTime:
cannotBeAnswered
setEndpointOnCurrentDevice:
cannotRelayAudioOrVideoOnPairedDevice
setCannotRelayAudioOrVideo:
propertiesChangedForCall:
displayContext
displayContextByMergingWithDisplayContext:
setDisplayContext:
updateWithRelayMessage:
callsHostedElsewhere
setLocallyDisconnectedWithReasonIfNone:
disconnectedReason
setLocallyDisconnectedWithReasonIfNone:stopConference:
stopConferenceForIdentifier:
setLocallyConnected
callModel
setModel:
setWantsHoldMusic:
protoCalls
isEqualToCall:
updateRelayCall:
initWithUniqueProxyIdentifier:endpointOnCurrentDevice:
hardPauseDigits
setHardPauseDigits:
hardPauseDigitsState
setHardPauseDigitsState:
setLocallyConnecting
hasCurrentCalls
pullRemotelyHostedCallsForMessage:completion:
callCapabilitiesState
updatePairedHostDeviceCallCapabilitiesState:
callProviderManager
tuProviders
registerPairedHostDeviceProviders:
needsManualInCallSounds
setNeedsManualInCallSounds:
soundRegion
setSoundRegion:
setLocallyHasSentInvitation
tuHandle
isTinCanProvider
remoteUplinkMutedSetTime
isRemoteUplinkMuted
setRemoteUplinkMuted:
setRemoteUplinkMutedSetTime:
routes
tuRoute
pairedHostDeviceRouteController
handleUpdatedPairedHostDeviceRoutes:
supportsTTYWithVoice
setSupportsTTYWithVoice:
initWithIdentifier:
inviteData
relayInviteDictionary
becomeEndpointForPullFromRemoteDevice
prepareConferenceConnection:remoteInviteDictionary:completion:
handleIncomingCallMessageFromHost:fromPairedDevice:
handleCallDialedMessageFromHost:fromPairedDevice:
handleCallAnsweredElsewhereMessageFromHost:fromPairedDevice:
handleCallDisconnectedMessageFromHost:
handleCallConnectedMessageFromHost:
handlePullRelayingCallsMessageFromHost:fromPairedDevice:
handleResetWantsHoldMusicFromHost:
handleUpdateCallModelMessageFromHost:
handleDeviceUnavailableMessageFromHost:
handleResetStateMessageFromHost:fromPairedDevice:
handleHardPauseDigitsAvailabilityMessageFromHost:
handleUpdateRemoteCallStateMessageFromHost:
handleCallStartedConnectingMessageFromHost:
handlePushHostedCallsMessageFromHost:completion:
handleUpdateCallContextAvailableMessageFromHost:
handleNeedsManualInCallSoundsChangeMessageFromHost:
handleInvitationSentMessageFromHost:
handleUpdateCallDisplayContextMessageFromHost:
handleUpdateRemoteUplinkMutedMessageFromHost:
handleUpdateRoutesMessageFromHost:
handleUpdateSupportsTTYWithVoiceMessageFromHost:
intValue
initWithType:
setDestinationID:
setService:
setUniqueProxyIdentifier:
setSourceIdentifier:
setDTMFKey:
setDisconnectedReason:
enumerateKeysAndObjectsUsingBlock:
setType:
pairedDeviceExists
setMessageSendTime:
receivedMessageType
tuProvider
initWithProvider:
setVideo:
sourceIdentifier
setAudioSourceIdentifier:
isVoicemail
setDialType:
isEmergency
isSOS
setSOS:
localSenderIdentityUUID
setLocalSenderIdentityUUID:
localSenderIdentityAccountUUID
setLocalSenderIdentityAccountUUID:
telephonyProvider
senderIdentityForAccountUUID:
ttyType
setTtyType:
contactIdentifier
setContactIdentifier:
protoService
setProtoService:
protoWantsHoldMusic
setProtoWantsHoldMusic:
protoDisconnectedReason
setProtoDisconnectedReason:
protoCannotBeAnswered
setProtoCannotBeAnswered:
protoDTMFKey
bytes
dataWithBytes:length:
setProtoDTMFKey:
protoVoicemail
setProtoVoicemail:
hardPauseState
setHardPauseState:
protoShouldSuppressRingtone
setProtoShouldSuppressRingtone:
protoNeedsManualInCallSounds
setProtoNeedsManualInCallSounds:
protoCannotRelayAudioOrVideoOnPairedDevice
setProtoCannotRelayAudioOrVideoOnPairedDevice:
protoExpectedEndpointOnMessagingDevice
setProtoExpectedEndpointOnMessagingDevice:
initWithCallCapabilitiesState:
setProtoCallCapabilitiesState:
protoCallCapabilitiesState
protoEmergency
setProtoEmergency:
protoSOS
setProtoSOS:
protoUplinkMuted
setProtoUplinkMuted:
protoRemoteUplinkMuted
setProtoRemoteUplinkMuted:
protoCallModel
protoCallModelState
holdAllowed
mergeable
takingCallsPrivateAllowed
ambiguityState
addCallAllowed
sendToVoicemailAllowed
setProtoCallModel:
setProtoCallModelState:
setAmbiguityState:
setSwappable:
setMergeable:
setHoldAllowed:
setAddCallAllowed:
setTakingCallsPrivateAllowed:
setHardPauseAvailable:
setEndAndAnswerAllowed:
isHoldAndAnswerAllowed
setHoldAndAnswerAllowed:
setSendToVoicemailAllowed:
initWithCall:
addProtoCall:
handleWithTUHandle:
destinationID
destinationIdIsEmailAddress
setProviders:
protoProvider
service
providerWithService:video:
setProtoProvider:
serviceForProvider:video:
hasProtoVideo
protoVideo
setProtoVideo:
protoDisplayContext
initWithCallDisplayContext:
setProtoDisplayContext:
endpointIDSDestinationURIs
destinationWithURI:
destinationWithDestinations:
destinationURIs
setEndpointIDSDestinationURIs:
localSenderIdentityUUIDString
setLocalSenderIdentityUUIDString:
localSenderIdentityAccountUUIDString
setLocalSenderIdentityAccountUUIDString:
remoteParticipantHandles
addRemoteParticipantHandles:
protoTTYType
setProtoTTYType:
protoSupportsTTYWithVoice
setProtoSupportsTTYWithVoice:
initWithDictionary:
initWithType:uniqueProxyIdentifier:
receivedMessageTypeString
dialRequest
wantsHoldMusic
setCannotBeAnswered:
DTMFKey
setVoicemail:
customizeForProtocolVersion:
setShouldSuppressRingtone:
setCannotRelayAudioOrVideoOnPairedDevice:
isExpectedEndpointOnMessagingDevice
setExpectedEndpointOnMessagingDevice:
setCallCapabilitiesState:
setEmergency:
setCallModel:
addCall:
setTuHandle:
setTuProviders:
setTuProvider:
setTuProvider:isVideo:
endpointIDSDestination
setEndpointIDSDestination:
remoteParticipantTUHandles
setRemoteParticipantTUHandles:
setValue:
setHasType:
hasType
typeAsString:
StringAsType:
hasValue
_type
_value
callUpdateWithDefaultValuesSet
systemMuteStatusChanged:
sanitizedCallUpdate
updateWithCallUpdate:
baseDestinationID
initWithDialRequest:
endpointOnCurrentDevice
initOutgoingWithUniqueProxyIdentifier:backingCallSourceIdentifier:callUpdate:isVideo:endpointOnCurrentDevice:
initWithStartCallAction:
initWithJoinConversationRequest:
usesSystemMuting
sharedAudioSystemController
setUnderlyingUplinkMuted:
propertiesChanged
backingCallSource
displayCallSourceIdentifier
mergedCallUpdate
updateWithUpdate:
hasSet
model
verificationStatus
setVerificationStatus:
handleUpdatedPropertiesAfterChangesInBlock:
hasStartedOutgoing
isTelephonyProvider
failureContext
failureReason
endedReasonUserInfoForCall:
localizedCallerName
crossDeviceIdentifier
callHistoryIdentifier
pauseDigitsQueue
originalPauseDigitsString
stringByAppendingString:
isUsingBaseband
isWiFiCallingCurrentlyAvailable
isBlocked
videoStreamToken
ISOCountryCode
senderIdentityForUUID:
accountUUID
activeRemoteParticipantHandles
tuHandlesWithHandles:
audioInterruptionProvider
audioInterruptionOperationMode
audioInterruptionProviderType
audioSessionID
retrieveSessionWithID:
audioCategory
proxyAVAudioSession
category
audioMode
mode
requiresInCallSounds
inCallSoundRegion
handoffContext
handoffIdentifier
prefersExclusiveAccessToCellularNetwork
providerCallDelegate
backingCallSourceIdentifier
providerWithIdentifier:
backingProvider
nextPauseDigits
isHardPause
digits
hasQueuedHardPauseDigits
sendingVideo
isUnderlyingUplinkMuted
isDownlinkMuted
isConversation
processIdentifier
providerContext
callGroupUUID
_sendSoftPauseDigitsIfNecessary
uniqueProxyIdentifierUUID
initWithCallUUID:relaying:
performCallAction:forCall:
setTTYType:
isVideoUpgradeFromCall:
initWithCallUUID:handle:
setRelay:
setUpgrade:
isRedial
setRetry:
dialType
dialWithRequest:displayContext:
callSourceForDialRequest:
setBackingCallSource:
startCallActionWithDialRequest:
performStartCallAction:forCall:
callSourceForJoinConversationRequest:
setWantsStagingArea:
initWithCallUUID:groupUUID:
answerWithRequest:
pauseVideoToStart
initWithCallUUID:
behavior
setDowngradeToAudio:
hold
_setIsOnHold:
unhold
initWithCallUUID:onHold:
dequeueAllPauseDigits
groupWithOtherCall:
initWithCallUUID:callUUIDToGroupWith:
ungroup
disconnectWithReason:
initWithCallUUID:sendingVideo:
initWithCallUUID:muted:
initWithCallUUID:ttyType:
setDownlinkMuted:
_sendDTMFDigits:type:
stringWithCharacters:length:
initWithCallUUID:videoPresentationSize:
initWithCallUUID:videoPresentationState:
dequeueNextPauseDigits
initWithCallUUID:digits:type:
isConnected
handleAudioSessionActivationStateChangedTo:
pauseDigitsQueueChanged:
initIncomingWithBackingCallSource:UUID:update:
initOutgoingWithDialRequest:
initOutgoingWithRequestedStartCallAction:backingCallSource:
initOutgoingWithJoinConversationRequest:
initWithHandoffContext:backingCallSource:
canBeControlledByCallSource:
updateForDisconnection
endedReasonUserInfo
callerNameFromNetwork
isThirdPartyVideo
displayProvider
callStatusFromUnderlyingSource
callRelaySupport
providerProcessIdentifier
initialLinkType
setHeld:
setCallGroupUUID:
setFailureContext:
joinConversationWithRequest:
sendHardPauseDigits
playRemoteDTMFToneForKey:
setProviderCallDelegate:
setDisplayCallSourceIdentifier:
setMergedCallUpdate:
setPauseDigitsQueue:
_outgoing
_wantsStagingArea
_video
_held
_sendingVideo
_underlyingUplinkMuted
_ttyType
_callGroupUUID
_providerCallDelegate
_backingCallSource
_failureContext
_backingCallSourceIdentifier
_displayCallSourceIdentifier
_mergedCallUpdate
_pauseDigitsQueue
handleCallHasStartedOutgoingChangedNotification:
handleCallStatusChangedNotification:
handleCallStartedConnectingNotification:
handleCallConnectedNotification:
handleCallMayRequireBreakBeforeMakeChangedNotification:
handleCallWantsHoldMusicChangedNotification:
UTF8String
breakBeforeMakeTimeout
_handleCallHasStartedOutgoingChanged:
_handleCallStatusChanged:
_handleCallStartedConnecting:
_handleCallConnected:
_handleCallMayRequireBreakBeforeMakeChanged:
_handleCallWantsHoldMusicChanged:
callCenter
wantsBreakBeforeMake
nonWifiFaceTimeAvailable
wiFiActiveAndReachable
objectForKey:
doubleValue
_handleAudioReadyForCall:
_setUpCallDurationLimitIfNecessary
_updateCallMutingForHoldMusic
sharedMonitor
enableEmergencyModeWithError:
disconnectCall:
_disconnectOrPullExistingCallsForCallIfNecessary:
_pushCallToAlternateDestinationIfNecessary:
_notifyCLTMOfIncomingCall
unsuppressRingtoneIfNecessary
setHeySiriEnabled:
_setUpBreakBeforeMakeTimeoutIfNecessaryForCall:
requestCLTMThrottleUncapToken
pullRelayingCallsFromClient
pushHostedCallsToDestination:
endpointRapportMediaSystemIdentifier
endpointRapportEffectiveIdentifier
pickRouteForRapportDeviceWithMediaSystemIdentifier:effectiveIdentifier:
setUpBreakBeforeMakeTimeout
routeManager
isCarPlayRouteAvailable
uplinkWasExplicitlyMuted
hasRestrictionsInRetailEnvironment
callDurationLimitTimer
_handleCallDurationTimerFired
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setCallDurationLimitTimer:
callsPassingTest:
userNotificationWithIdentifier:title:message:defaultButton:alternateButton:otherButton:
setUsesNotificationCenter:
setRepresentedApplicationBundle:
addUserNotification:listener:completionHandler:
isAudioMutedForHoldMusic
setAudioMutedForHoldMusic:
initWithCallCenter:
setRequestCLTMThrottleUncapToken:
setSetUpBreakBeforeMakeTimeout:
_audioMutedForHoldMusic
_requestCLTMThrottleUncapToken
_callDurationLimitTimer
_setUpBreakBeforeMakeTimeout
deviceType
initWithResolver:queue:
updateAssertion
resolver
resolvedDescriptor
inCallStatusBarAssertionWithDescriptor:
assertion
statusString
setStatusString:
setAssertion:
acquireWithHandler:invalidationHandler:
isDeviceSupported
resolutionChangedForResolver:
setResolver:
applicationStateMonitor
setApplicationStateMonitor:
_resolver
_assertion
_applicationStateMonitor
inCallUIWantsStatusBarSuppression
statusBarStyleOverrides
assertionWithStatusBarStyleOverrides:forPID:exclusive:showsWhenForeground:
setName:
modelIdentifier
setModelIdentifier:
uniqueIDOverride
setUniqueID:
linkedUserURIs
setLinkedUserURIs:
isDefaultPairedDevice
setDefaultPairedDevice:
supportsRestrictingSecondaryCalling
setSupportsRestrictingSecondaryCalling:
initWithIDSDevice:
setBundleId:
setTimestamp:
setHasTimestamp:
hasTimestamp
hasBundleId
setHasFailureReason:
hasFailureReason
setActionType:
setHasActionType:
hasActionType
setProviderWasReset:
setHasProviderWasReset:
hasProviderWasReset
timestamp
bundleId
actionType
providerWasReset
_actionType
_failureReason
_timestamp
_bundleId
_providerWasReset
setUpSession
session
groupID
participantDestinationIDs
dictionaryWithObjects:forKeys:count:
account
initWithAccount:options:
setSession:
setDelegate:queue:
sessionEndedReason
sessionID
setPreferences:
joinWithOptions:
setParticipantDestinationIDs:
updateMembers:withContext:triggeredLocally:
updateParticipantData:withContext:
leaveGroupSession
sessionProviderDidTerminate:
sessionProvider:endedWithReason:error:
participantIDs
sessionProvider:didJoinGroupWithParticipantIdentifiers:localParticipantIdentifier:error:
sessionProvider:didLeaveGroupWithError:
sessionProvider:didReceiveActiveParticipants:success:
sessionProvider:didReceiveReport:
groupSessionDidTerminate:
groupSessionEnded:withReason:error:
sessionDidJoinGroup:participantsInfo:error:
sessionDidJoinGroup:participantInfo:error:
sessionDidJoinGroup:participantUpdate:error:
sessionDidLeaveGroup:error:
session:participantDidJoinGroupWithInfo:
session:participantDidLeaveGroupWithInfo:
session:didReceiveActiveParticipants:success:
session:receivedInvitationAcceptFromID:
session:receivedInvitationDeclineFromID:
session:receivedInvitationCancelFromID:
sessionStarted:
sessionEnded:
sessionEnded:withReason:error:
session:didReceiveData:
session:receivedInvitationAcceptFromID:withData:
session:receivedInvitationDeclineFromID:withData:
session:receivedInvitationCancelFromID:withData:
session:receivedSessionMessageFromID:withData:
session:receivedSessionEndFromID:withData:
session:invitationSentToTokens:
session:invitationSentToTokens:shouldBreakBeforeMake:
updateParticipantDestinationIDs:withContextData:triggeredLocally:
sendParticipantData:
initWithGroupID:participantDestinationIDs:callerID:account:queue:
_session
_participantDestinationIDs
_groupID
_account
data
setData:
completion
setCompletion:
_data
_completion
initWithSessionProvider:isInitiator:remoteProtocolVersion:
array
sessionProvider
setStreamPreferences:
initWithSessionProvider:isInitiator:remoteDestination:remoteDevice:remoteProtocolVersion:identifiers:
runBlocksPendingTransportAvailability:
removePendingData
transport
remoteDestination
setRemoteDestination:
remoteDevice
setRemoteDevice:
identifiers
addObjectsFromArray:
allIdentifiers
blocksPendingTransportAvailability
performBlockOnTransportAvailability:
hasStarted
hasReceivedAccept
isInitiator
acceptPayloadData
runBlocksPendingTransportAvailabilityIfNecessary:
pendingData
sendData:waitUntilConnected:completion:
pendData:completion:
sendData:toDestinations:
_sendInvitationWithData:declineOnError:alwaysSendData:
_acceptInvitationWithData:alwaysSendData:
_cancelInvitationWithData:reason:alwaysSendData:
_declineInvitationWithData:alwaysSendData:
sessionProviderStarted:
sendPendingData
setHasStarted:
setHasReceivedAccept:
setAcceptPayloadData:
deviceForFromID:
session:receivedInvitationAcceptWithData:fromDestination:device:
session:receivedInvitationCancelWithData:fromDestination:device:
session:receivedInvitationDeclineWithData:fromDestination:device:
session:receivedData:fromDestination:device:
initAsInitiatorWithSessionProvider:identifiers:
initAsReceiverWithSessionProvider:remoteDestination:remoteDevice:remoteProtocolVersion:identifiers:
hasIdentifier:
addIdentifier:
addIdentifiers:
removeIdentifier:
removeIdentifiers:
mergeSession:
sendData:toDestinations:completion:
sendDataAndSendInvitationIfNecessary:declineOnError:
sendDataAndAcceptInvitationIfNecessary:
sendDataAndCancelInvitationIfNecessary:
sendDataAndDeclineInvitationIfNecessary:
prepareToEnd
sessionProvider:receivedInvitationAcceptFromID:withData:
sessionProvider:receivedInvitationCancelFromID:withData:
sessionProvider:receivedInvitationDeclineFromID:withData:
sessionProvider:receivedSessionMessageFromID:withData:
_hasStarted
_hasReceivedAccept
_remoteDestination
_remoteDevice
_pendingData
_identifiers
_blocksPendingTransportAvailability
_acceptPayloadData
handleIDSDeviceListChangedNotification:
_updateDefaultPairedDeviceUniqueIDDefault
_updateThumperCallingPreferences
_checkIfDevicesShouldBeUnenrolled
initWithDomain:
domainAccessor
boolForKey:keyExistsAndHasValidFormat:
setBool:forKey:
synchronize
isThumperCallingEnabled
secondaryThumperAccountForAccountID:
phoneNumberURI
_stripFZIDPrefix
showReminderNotificationOnSecondaryDevice
removeReminderNotificationOnSecondaryDevice
showEmergencyAddressDisclaimerOnSecondaryDevice
removeEmergencyAddressDisclaimerOnSecondaryDevice
areCTCapabilitiesValid
thumperCallingCapabilitiesStateByUUID
publiclyAccessibleCopy
accountID
thumperCapabilitiesStatesForPreferenceKey:
isSupported
supportsDefaultPairedDevice
caseInsensitiveCompare:
enrollDefaultPairedDeviceForAccountID:
unenrollDefaultPairedDeviceForAccountID:
_thumperIsNowSupportedForAccountID:
_thumperIsNoLongerSupportedForAccountID:
_thumperIsNowEnabledForAccountID:
_thumperIsNoLongerEnabledForAccountID:
saveThumperCapabilitiesStates:forPreferenceKey:
defaultPairedDevice
removeThumperRegisteredDeviceID:forThumperAccountID:
enrollDefaultPairedDevice
devices
valueForKey:
localThumperAccounts
allowedSecondaryDeviceIDs
supportsThumperCallingOverCellularData
countForIdentifier:
response
requestPinFromPrimaryDevice
removeNotificationsForServiceIdentifier:
preferencesURL
archivedDataWithError:
unarchivedObjectFromData:error:
thumperCallingCapabilitiesStateForAccountID:
shouldEnrollDefaultPairedDeviceForAccountID:
addThumperRegisteredDeviceID:forThumperAccountID:
shouldUnenrollDefaultPairedDeviceForAccountID:
isThumperRegisteredDeviceID:forThumperAccountID:
thumperCallingAllowedOnDefaultPairedDeviceDefault
didChangeTelephonyCallingSupport
didChangeFaceTimeAudioCallingSupport
didChangeFaceTimeVideoCallingSupport
didChangeFaceTimeCallingAvailability
didChangeRelayCallingCapabilities
didChangeRelayCallingAvailability
didChangeOutgoingRelayCallerID
didChangeCloudCallingDevices
didAddCapabilitiesForSenderIdentityWithUUID:
didRemoveCapabilitiesForSenderIdentityWithUUID:
didChangeVoLTECallingCapabilitiesForSenderIdentityWithUUID:
didChangeWiFiCallingCapabilitiesForSenderIdentityWithUUID:
didChangeThumperCallingCapabilitiesForSenderIdentityWithUUID:
didChangeWiFiCallingProvisionalURLForSenderIdentityWithUUID:
didChangeThumperCallingProvisionalURLForSenderIdentityWithUUID:
didChangeEmergencyCallbackMode
didChangeEmergencyCallbackPossible
didChangeRelayCallingFeatures
updateState
setThumperCallingAllowedOnDefaultPairedDeviceDefault:
setDomainAccessor:
_dataSource
_domainAccessor
isInvitation
upgradeSessionUUID
setInvitation:
setUpgradeSessionUUID:
_invitation
_shouldSuppressInCallUI
_videoEnabled
_upgrade
_momentsAvailable
_upgradeSessionUUID
addServiceDelegate:queue:
devicesChanged:
callerIDChanged:
addListenerID:forService:
serviceAvailabilityChanged:
_faceTimeAudioAvailability
_faceTimeVideoAvailability
_updateOutgoingCallerID
removeListenerID:forService:
faceTimeIDMatchesAppleID
outgoingCallerID
accountsChanged
updateOutgoingCallerIDAndSendDelegateCallbacksIfNecessary
faceTimeAvailabilityChanged
iCloudAccount
isActive
profileID
isEqualToIgnoringCase:
availabilityForListenerID:forService:
outgoingCallerIDChanged
availableOutgoingRelayCallerIDs
vettedAliases
localizedCaseInsensitiveCompare:
sortedArrayUsingSelector:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:account:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:
service:account:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:messageContext:
service:account:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:
service:account:incomingTopLevelMessage:fromID:messageContext:
service:token:time:error:
service:didFlushCacheForRemoteURI:fromURI:guid:
service:didHintCheckingTransportLogWithReason:
isFaceTimeAudioAvailable
isFaceTimeVideoAvailable
setOutgoingCallerID:
_outgoingCallerID
shouldUseSocketForTransport
setIsAudioEnabled:
invitationTimeOut
setInvitationTimeOut:
sendSessionMessage:
sendSessionMessage:toDestinations:
sendInvitationWithData:declineOnError:
acceptInvitationWithData:
cancelInvitationWithData:
cancelInvitationWithRemoteEndedReasonOverride:
declineInvitationWithData:
reconnectSession
endSession
reportsReceived:forSessionWithUUID:
sessionProvider:invitationSentToPushTokens:shouldBreakBeforeMake:
invitationTimeout
setInvitationTimeout:
initWithSession:queue:
initWithDigits:isHardPause:
setDigits:
setHardPause:
_hardPause
_digits
label
setLabel:
initWithHandle:label:isSuggested:
tuLabeledHandle
handleWithTULabeledHandle:
initWithSerialQueue:
callProviderManagerClientXPCInterface
clientManager
setRemoteObjectInterface:
callProviderManagerServerXPCInterface
setExportedInterface:
setExportedObject:
setRequiredConnectionCapability:
setInterruptionHandler:
setInvalidationHandler:
asynchronousExportedObjectProxy
setAsynchronousServer:
synchronousExportedObjectProxy
setSynchronousServer:
startListeningOnMachServiceWithName:
isRemote
providersByIdentifierForRemoteClients:
localProvidersByIdentifierForRemoteClients:
pairedHostDeviceProvidersByIdentifierForRemoteClients:
currentClient
providersByIdentifierForClient:
localProvidersByIdentifierForClient:
pairedHostDeviceProvidersByIdentifierForClient:
launchAppForDialRequest:completion:
addLocalClientObject:
removeLocalClientObject:
updateProvidersByIdentifier:localProvidersByIdentifier:pairedHostDeviceProvidersByIdentifier:
performBlockOnClients:coalescedByIdentifier:
providersByIdentifier:
launchAppForDialRequest:reply:
registerClient:
unregisterClient:
initWithProviderManager:
_clientManager
_providerManager
tuConversationMember
memberWithTUConversationMember:
applicationProxyForIdentifier:
machOUUIDs
initWithSession:remoteHandle:wantsVideo:
conference
dateReceivedFirstRemoteFrame
hasSentInvitation
invitedPushTokens
underlyingErrorCode
remoteFromID
chatEnded:
localPortraitAspectRatioForChat:
setIsKeyExchangeEnabled:
setIsVideoEnabled:
setIsDuplexAudioOnly:
setIsRelayForced:
setIsRelayEnabled:
shouldStartAudioPaused
setIsAudioPausedToStart:
shouldStartVideoPaused
setIsVideoPausedToStart:
_setLocalAspectRatiosForVideoAspectRatioDescriptor:
setInviteCompletion:
prepareConference
cancelInvitationWithReason:
declineInvitation
cancelOrDeclineInvitation
_handlePushTokensInvited:didSendInvitation:didCancelInvitation:
setShouldStartAudioPaused:
setShouldStartVideoPaused:
chatStartedConnecting:
conferenceCreationBlock
setConference:
faceTimeAppUUID
inviteCompletion
setInvitedPushTokens:
setHasSentInvitation:
chatSentInvitation:
_setDateEndedIfNecessary
initWithData:
_stripPotentialTokenURIWithToken:
faceTimeInviteDictionary
hasProtoUpgradeSessionUUID
protoUpgradeSessionUUID
hasProtoWantsVideo
isWiFiAllowedForChat:
setWiFiAllowed:
isCellularDataAllowedForChat:
setCellularDataAllowed:
isCellularDataPreferredForChat:
setCellularDataPreferred:
initWithFaceTimeInviteDictionary:
setInviteData:
setProtoUpgradeSessionUUID:
isMomentsAvailableForChat:
sendInvitationWithData:
chatConnected:
setDateReceivedFirstRemoteFrame:
chat:inputFrequencyLevelChangedTo:
chat:outputFrequencyLevelChangedTo:
chat:inputLevelChangedTo:
chat:outputLevelChangedTo:
chat:changedBytesOfDataUsed:
chat:receivedData:
session:endedWithReason:
session:invitationSentToPushTokens:shouldBreakBeforeMake:
session:receivedInvitationAcceptWithData:
session:receivedInvitationDeclineWithData:
session:receivedInvitationCancelWithData:
session:receivedData:
startWithVideoAspectRatioDescriptor:inviteCompletion:
answerWithVideoAspectRatioDescriptor:
cancelInvitationWithAnsweredElsewhere
cancelInvitationWithDeclinedElsewhere
sendDataUnreliably:
sessionUUID
initIncomingWithSession:remoteHandle:wantsVideo:remoteInviteDictionary:
initOutgoingWithSession:UUID:remoteHandle:wantsVideo:isRelaying:
setConferenceCreationBlock:
_remoteUplinkMuted
_remoteMomentsAvailable
_muted
_shouldStartAudioPaused
_shouldStartVideoPaused
_mayRequireBreakBeforeMake
_hasSentInvitation
_localSenderIdentityUUID
_conference
_dateReceivedFirstRemoteFrame
_invitedPushTokens
_inviteCompletion
_conferenceCreationBlock
initWithTinCanIDSChat:
isCSCallingAvailable
setCsCallingAvailable:
isVoLTECallingAvailable
setVoLTECallingAvailable:
isWifiCallingAvailable
setWiFiCallingAvailable:
isEmergencyCallingOnWifiAllowed
setWiFiEmergencyCallingAllowed:
isEmergencyCallingOnWifiAvailable
setWiFiEmergencyCallingAvailable:
isWiFiCallingAvailable
isWiFiEmergencyCallingAllowed
isWiFiEmergencyCallingAvailable
callCapabilitiesForCTCallCapabilities:
callCapabilitiesForCallManagementStateInfo:
_csCallingAvailable
_voLTECallingAvailable
_wiFiCallingAvailable
_wiFiEmergencyCallingAllowed
_wiFiEmergencyCallingAvailable
numberWithDouble:
numberWithFloat:
addOtherUniqueProxyIdentifiers:
addProviders:
addRoutes:
addEndpointIDSDestinationURIs:
setOBSOLETEConferenceIdentifier:
setCallerNameFromNetwork:
protoCallsCount
clearProtoCalls
protoCallAtIndex:
setDummyPayload:
otherUniqueProxyIdentifiersCount
clearOtherUniqueProxyIdentifiers
otherUniqueProxyIdentifiersAtIndex:
providersCount
clearProviders
providersAtIndex:
remoteParticipantHandlesCount
clearRemoteParticipantHandles
remoteParticipantHandlesAtIndex:
routesCount
clearRoutes
routesAtIndex:
setRoute:
endpointIDSDestinationURIsCount
clearEndpointIDSDestinationURIs
endpointIDSDestinationURIsAtIndex:
setIsoCountryCode:
protoCallType
otherUniqueProxyIdentifiersType
providersType
remoteParticipantHandlesType
routesType
endpointIDSDestinationURIsType
hasUniqueProxyIdentifier
hasDestinationID
hasSourceIdentifier
hasProtoCallModelState
setHasProtoService:
hasProtoService
setHasProtoWantsHoldMusic:
hasProtoWantsHoldMusic
setHasProtoCannotBeAnswered:
hasProtoCannotBeAnswered
hasProtoDTMFKey
setHasProtoDisconnectedReason:
hasProtoDisconnectedReason
hasOBSOLETEConferenceIdentifier
setHasProtoVoicemail:
hasProtoVoicemail
hasCallerNameFromNetwork
hasHardPauseDigits
setHasHardPauseState:
hasHardPauseState
setReceivedMessageType:
setHasReceivedMessageType:
hasReceivedMessageType
receivedMessageTypeAsString:
StringAsReceivedMessageType:
setHasProtoProtocolVersion:
hasProtoProtocolVersion
setHasProtoShouldSuppressRingtone:
hasProtoShouldSuppressRingtone
hasDummyPayload
setHostCallCreationTime:
setHasHostCallCreationTime:
hasHostCallCreationTime
setHasMessageSendTime:
hasMessageSendTime
setHasProtoNeedsManualInCallSounds:
hasProtoNeedsManualInCallSounds
setHasProtoCannotRelayAudioOrVideoOnPairedDevice:
hasProtoCannotRelayAudioOrVideoOnPairedDevice
setHasProtoExpectedEndpointOnMessagingDevice:
hasProtoExpectedEndpointOnMessagingDevice
hasContactIdentifier
hasProtoCallCapabilitiesState
setProtoSoundRegion:
setHasProtoSoundRegion:
hasProtoSoundRegion
setHasProtoEmergency:
hasProtoEmergency
hasProtoCallModel
setHasProtoSOS:
hasProtoSOS
hasProtoDisplayContext
hasInviteData
hasProtoProvider
setHasProtoVideo:
setHasProtoUplinkMuted:
hasProtoUplinkMuted
setHasProtoRemoteUplinkMuted:
hasProtoRemoteUplinkMuted
setSystemVolume:
setHasSystemVolume:
hasSystemVolume
hasLocalSenderIdentityUUIDString
hasLocalSenderIdentityAccountUUIDString
setHasProtoTTYType:
hasProtoTTYType
setHasProtoSupportsTTYWithVoice:
hasProtoSupportsTTYWithVoice
requestActionType
setRequestActionType:
setHasRequestActionType:
hasRequestActionType
requestActionTypeAsString:
StringAsRequestActionType:
hasRoute
hasIsoCountryCode
oBSOLETEConferenceIdentifier
setProtoCalls:
dummyPayload
protoSoundRegion
otherUniqueProxyIdentifiers
setOtherUniqueProxyIdentifiers:
systemVolume
setRemoteParticipantHandles:
setRoutes:
route
_hostCallCreationTime
_messageSendTime
_callerNameFromNetwork
_contactIdentifier
_destinationID
_dummyPayload
_endpointIDSDestinationURIs
_hardPauseDigits
_hardPauseState
_inviteData
_isoCountryCode
_localSenderIdentityAccountUUIDString
_localSenderIdentityUUIDString
_oBSOLETEConferenceIdentifier
_otherUniqueProxyIdentifiers
_protoCallCapabilitiesState
_protoCallModel
_protoCallModelState
_protoCalls
_protoDTMFKey
_protoDisconnectedReason
_protoDisplayContext
_protoProtocolVersion
_protoProvider
_protoService
_protoSoundRegion
_protoTTYType
_providers
_receivedMessageType
_remoteParticipantHandles
_requestActionType
_route
_routes
_sourceIdentifier
_systemVolume
_uniqueProxyIdentifier
_protoCannotBeAnswered
_protoCannotRelayAudioOrVideoOnPairedDevice
_protoEmergency
_protoExpectedEndpointOnMessagingDevice
_protoNeedsManualInCallSounds
_protoRemoteUplinkMuted
_protoSOS
_protoShouldSuppressRingtone
_protoSupportsTTYWithVoice
_protoUplinkMuted
_protoVideo
_protoVoicemail
_protoWantsHoldMusic
serviceForClientIdentifier:
_callFilterIdentifier
sourceWithDestinationIdentifier:
setSource:
behaviorResolutionService
resolveBehaviorForEventDetails:error:
interruptionSuppression
setFilterBlock:
isDestinationIDAllowedThroughDoNotDisturb:
networkCountryCode
_behaviorResolutionService
addHandoffIdentifier:
addEmergencyLabeledHandles:
addPrioritizedSenderIdentities:
addEmergencyHandles:
setLocalizedName:
setBundleURLString:
setRingtoneSoundURLString:
setOriginalRingtoneSoundURLString:
handoffIdentifiersCount
clearHandoffIdentifiers
handoffIdentifierAtIndex:
protoSupportedHandleTypesCount
clearProtoSupportedHandleTypes
protoSupportedHandleTypeAtIndex:
addProtoSupportedHandleType:
emergencyLabeledHandlesCount
clearEmergencyLabeledHandles
emergencyLabeledHandlesAtIndex:
prioritizedSenderIdentitiesCount
clearPrioritizedSenderIdentities
prioritizedSenderIdentitiesAtIndex:
emergencyHandlesCount
clearEmergencyHandles
emergencyHandlesAtIndex:
handoffIdentifierType
emergencyLabeledHandlesType
prioritizedSenderIdentitiesType
emergencyHandlesType
hasLocalizedName
hasBundleURLString
setMaximumCallGroups:
setHasMaximumCallGroups:
hasMaximumCallGroups
setMaximumCallsPerCallGroup:
setHasMaximumCallsPerCallGroup:
hasMaximumCallsPerCallGroup
setSupportsAudioOnly:
setHasSupportsAudioOnly:
hasSupportsAudioOnly
setSupportsAudioAndVideo:
setHasSupportsAudioAndVideo:
hasSupportsAudioAndVideo
setSupportsEmergency:
setHasSupportsEmergency:
hasSupportsEmergency
setSupportsVoicemail:
setHasSupportsVoicemail:
hasSupportsVoicemail
hasRingtoneSoundURLString
hasOriginalRingtoneSoundURLString
protoSupportedHandleTypes
setProtoSupportedHandleTypes:count:
setSupportsRecents:
setHasSupportsRecents:
hasSupportsRecents
localizedName
bundleURLString
maximumCallGroups
maximumCallsPerCallGroup
supportsAudioOnly
supportsAudioAndVideo
supportsEmergency
supportsVoicemail
ringtoneSoundURLString
originalRingtoneSoundURLString
setHandoffIdentifiers:
emergencyLabeledHandles
setEmergencyLabeledHandles:
supportsRecents
prioritizedSenderIdentities
setPrioritizedSenderIdentities:
emergencyHandles
setEmergencyHandles:
_protoSupportedHandleTypes
_bundleURLString
_emergencyHandles
_emergencyLabeledHandles
_handoffIdentifiers
_localizedName
_maximumCallGroups
_maximumCallsPerCallGroup
_originalRingtoneSoundURLString
_prioritizedSenderIdentities
_ringtoneSoundURLString
_supportsAudioAndVideo
_supportsAudioOnly
_supportsEmergency
_supportsRecents
_supportsVoicemail
_handleConferenceConnectionWillClose:
_handleConferenceConnectionDidClose:
_handleConferenceConnectionDidReceiveData:
dialingIDSDevice
sessionMessenger
prepareConnectedSessionsToEnd
endEndingSessions
userInfo
clientMessagingDelegate
commonMessagingDelegate
handleSetUplinkMutedMessage:
setDialingIDSDevice:
isPairedDevice
outgoingRelayCallerID
deviceWithActiveSession
pairedDevice
identifiersForSessionInvitationWithMessage:
initWithRelayInviteDictionary:
sendMessage:andAcceptInvitationIfNecessaryForIdentifier:
cancelOrDeclineInvitationForIdentifier:
dateCreated
pairedDeviceMessenger
sendMessage:completionHandler:
sendMessage:andStartSessionIfNecessaryForIdentifier:toDevicesSupportingProvider:withTimeout:
prepareConferenceForCall:remoteInviteDictionary:completion:
sendMessage:forIdentifier:customizedForRemoteProtocolVersion:completionHandler:
_shouldSendToPairedIDSDevice
sendMessage:andCancelOrDeclineInvitationIfNecessaryForIdentifier:
sendMessage:forIdentifier:
sendData:throughConferenceForIdentifier:
sendMessage:forIdentifier:customizedForRemoteProtocolVersion:waitUntilConnected:completionHandler:
hostMessagingDelegate
sendMessage:andStartSessionIfNecessaryForIdentifiers:toDestination:timeout:completionHandler:
pushHostedCallsForRemoteInviteDictionary:destination:completion:
initWithTURoute:
_updateDialingIDSDevice
sendMessage:andStartSessionIfNecessaryForIdentifier:toDestination:timeout:completionHandler:
disconnectCall:withReason:
cannotRelayAudioOrVideo
sessionProtocolVersionForIdentifier:
callWithStatus:
isFaceTimeProvider
sendHoldCallMessageToHostForCall:
sendAnswerCallMessageToHostForCall:
sendMessage:timeout:completionHandler:
setWithObject:
sendMessage:forIdentifier:toDestinations:
canReceiveRelayedCalls
reportRelayMessageReceived:fromPairedDevice:
_handleRetrievedLocalInviteDictionary:forMessage:
handleDialCallMessageFromClient:destination:completion:
handleAnswerCallMessageFromClient:destination:
handlePlayDTMFToneForKeyMessage:
handleHoldCallMessageFromClient:
handleUnholdCallMessageFromClient:
handleGroupCallMessageFromClient:
handleUngroupCallMessageFromClient:
handleDisconnectCallMessageFromClient:
handleSwapCallsMessageFromClient:
handleEndActiveAndAnswerMessageFromClient:
handleEndHeldAndAnswerMessageFromClient:
handleDisconnectCurrentCallAndActivateHeldMessageFromClient:
handleDisconnectAllCallsMessageFromClient:
handleSendHardPauseDigitsMessageFromClient:
handleSuppressRingtoneMessage:
handleRequestCallContextMessageFromClient:
handlePullHostedCallsMessageFromClient:destination:completion:
handlePushRelayingCallsMessageFromClient:
handleHoldActiveAndAnswerMessageFromClient:
handleUpdateSystemVolumeMessageFromHost:
handleSetTTYTypeMessage:
handleRequestActionMessage:
handlePickRouteMessageFromClient:
shouldDeclineSessionInviteWithMessageWhenRelayIsDisabled:
_callsWithUniqueProxyIdentifiers:
messagingConnectionEndedForCalls:didStartConnecting:
messagingConnectionFailedForCalls:didStartConnecting:
messagingConnectionCouldNotEstablishLinkForCalls:didStartConnecting:
_shouldDeclineSessionInviteWithMessage:
isGuest
allowCallForDestinationID:providerIdentifier:isFromBlockList:
shouldPreferRelayOverDirectSecondaryCallingForProvider:isVideo:
isDirectTelephonyCallingCurrentlyAvailable
isDirectFaceTimeAudioCallingCurrentlyAvailable
isDirectFaceTimeVideoCallingCurrentlyAvailable
performBlockOnTransportAvailability:forIdentifier:
prepareSessionToEndForIdentifier:
messenger:handledMessage:fromDestination:device:
messengerConnectionEnded:forIdentifiers:didStartConnecting:
messengerConnectionFailed:forIdentifiers:didStartConnecting:
messengerConnectionCouldNotEstablishLink:forIdentifiers:didStartConnecting:
shouldDeclineSecondSessionInviteWithMessage:
shouldIgnoreSessionInviteWithMessage:fromDestination:
timeoutForInvitationWithMessage:
_relayInvitationTimeoutForTimeout:
sendIncomingCallMessageToClientForCall:cannotBeAnswered:cannotRelayAudioOrVideoOnPairedDevice:
sendCallDialedMessageToClientForCall:
sendCallAnsweredElsewhereMessageToClientForCall:
sendCallDisconnectedMessageToClientForCall:
sendCallConnectedMessageToClientForCall:
sendResetWantsHoldMusicMessageToClientForCall:
sendUpdateCallDisplayContextMessageToClientForCall:
sendUpdateRemoteUplinkMutedCallMessageToClientForCall:
sendUpdateSupportsTTYWithVoiceCallMessageToClientForCall:
sendUpdateCallModelMessageToClientForCall:
sendDeviceUnavailableMessageToClientForUniqueProxyIdentifier:
sendPullRelayingCallsMessageToClient
sendResetStateMessageToClient
sendHardPauseAvailabilityMessageToClientForState:digits:
sendUpdateRemoteCallStateMessageToClient
sendCallStartedConnectingMessageToClientForCall:
sendDialCallFailedForUniqueProxyIdentifier:
sendPushCallsMessageToClientDestination:
sendUpdateCallContextMessageToClientForCallProviderManager:
sendNeedsManualInCallSoundsChangeMessageToClientForCall:
sendInvitationSentMessageToClientForCall:
sendUpdateRoutesMessageToClientForRoutes:
sendDialCallMessageToHostForCall:completionHandler:
sendDisconnectCallMessageToHostForCall:
sendUnholdCallMessageToHostForCall:
sendGroupCallMessageToHostForCall:otherCall:
sendUngroupCallMessageToHostForCall:
sendSwapCallsMessageToHost
sendEndActiveAndAnswerCallMessageToHostForCall:
sendEndHeldAndAnswerCallMessageToHostForCall:
sendHoldActiveAndAnswerCallMessageToHostForCall:
sendDisconnectCurrentCallAndActivateHeldMessageToHostForDisconnectedCall:
sendDisconnectAllCallsMessageToHostForDisconnectedCall:
sendSendHardPauseDigitsMessageToHostForCall:
sendRequestCallStateMessageToHost
sendPullCallsMessageToHost
sendPushRelayingCallsMessageToHostForSourceIdentifier:
sendUpdateRemoteUplinkMutedCallMessageToHostForCall:
sendPickRouteMessageToHostForRoute:
sendPlayDTMFToneForKeyMessageForCall:DTMFKey:
sendSetTTYTypeCallMessageForCall:ttyType:
sendSetUplinkMutedCallMessageForCall:uplinkMuted:
sendSuppressRingtoneMessageForCall:
sendUpdateSystemVolumeForCall:volume:
requestAnswerForRequest:forCall:
prepareToDisconnectMessagingConnectionForCall:
disconnectMessagingConnectionForCall:
setClientMessagingDelegate:
setHostMessagingDelegate:
setCommonMessagingDelegate:
_clientMessagingDelegate
_hostMessagingDelegate
_commonMessagingDelegate
_sessionMessenger
_pairedDeviceMessenger
_dialingIDSDevice
setMediaBlob:
setCallInfoBlob:
setSKEBlob:
mediaBlob
callInfoBlob
sKEBlob
_setUpSandbox
recentsController
clearNotificationsIfNecessary
voipApplicationController
handleApplicationUninstalledNotification:
setSignalHandlerDispatchSources:
_observeSignal:usingHandler:
setCallStateMonitor:
setRelayMessagingController:
addReporter:
setMomentsController:
momentsController
setStatusBarManager:
setCallDirectoryManager:
setVoipApplicationController:
setRelayClientController:
relayClientController
setRelayHostController:
relayHostController
setRelayCommonController:
relayCommonController
setProximityController:
setRaiseToAnswerController:
setAudioController:
audioController
_setUpLanguageChangeListener
callFilterManager
initWithCallFilterManager:
signalHandlerDispatchSources
string
_setUpTemporaryDirectory
callStateMonitor
callDirectoryManager
userNotificationController
setUserNotificationController:
orientationMonitor
setOrientationMonitor:
proximityController
raiseToAnswerController
statusBarManager
_callStateMonitor
_relayMessagingController
_relayClientController
_relayHostController
_relayCommonController
_callDirectoryManager
_voipApplicationController
_momentsController
_userNotificationController
_signalHandlerDispatchSources
_orientationMonitor
_proximityController
_raiseToAnswerController
_audioController
_statusBarManager
availability
setAvailability:
setHasAvailability:
hasAvailability
availabilityAsString:
StringAsAvailability:
setPhotoRequestSuccessCount:
setHasPhotoRequestSuccessCount:
hasPhotoRequestSuccessCount
setPhotoRequestFailureCount:
setHasPhotoRequestFailureCount:
hasPhotoRequestFailureCount
setMedianRequestDuration:
setHasMedianRequestDuration:
hasMedianRequestDuration
setMeanRequestDuration:
setHasMeanRequestDuration:
hasMeanRequestDuration
photoRequestSuccessCount
photoRequestFailureCount
medianRequestDuration
meanRequestDuration
_meanRequestDuration
_medianRequestDuration
_availability
_photoRequestFailureCount
_photoRequestSuccessCount
initWithCapabilities:queue:
tu_defaults
boolForKey:
mutableChats
phoneNumberWithDigits:countryCode:
unformattedInternationalRepresentation
isWiFiAvailable
isWiFiAllowed
isCellularDataAvailable
isCellularDataAllowed
shouldOverrideNetworkAsAvailable
handleWithDestinationID:
serviceIdentifier
containsString:
initWithUUID:isVideo:handle:
shouldAcceptIncomingInvite
callUpdateForPendingChat:
uuid
reportCallWithUUID:endedAtDate:reason:
setRequiresAuthentication:
incomingSessionProviderGenerator
initAsReceiverWithSessionProvider:remoteFromID:remoteProtocolVersion:
waitingChatWithHandle:isOutgoing:
incomingChatGenerator
callUpdateForChat:
loginID
updateCacheWithChat:
providerDidBegin
TUCallRemoteVideoPresentationStateFromCXVideoPresentationState:
isCellularDataPreferred
mainDisplay
bounds
reportCallWithUUID:changedMeterLevel:forDirection:
handleByFullyQualifyingHandle:usingCountryCode:
chats
setProviderDidBegin:
setIncomingSessionProviderGenerator:
setIncomingChatGenerator:
_shouldOverrideNetworkAsAvailable
_mutableChats
_providerDidBegin
_incomingSessionProviderGenerator
_incomingChatGenerator
hasSKEBlob
hasMediaBlob
hasCallInfoBlob
_callInfoBlob
_mediaBlob
_sKEBlob
initWithSessionProvider:
propertiesDescription
remoteProtocolVersionNumber
setRemoteProtocolVersionNumber:
initWithSocket:
initWithDestination:
setInitialLinkType:
initAsInitiatorWithSessionProvider:
initAsReceiverWithSessionProvider:remoteProtocolVersion:
remoteProtocolVersion
setReceiverProtocolVersion:
sendInvitation
cancelInvitation
_remoteProtocolVersionNumber
_sessionProvider
initWithComponentId:andBlockOnConfiguration:
serverConnection
newMetricContainerWithIdentifier:
setMetric:
submitMetric:
_setUpQueriableMetrics
_awdRelayMessageTypeForMessageType:
setMessageType:
_awdCallServiceForProvider:video:
setCallService:
setLatencyMs:
reportMetricId:usingBlock:
_awdCallInfoForCall:
_awdCallInfoSourceForDisplayContext:
callDirectoryLabel
callDirectoryExtensionIdentifier
setCallInfo:
setCallInfoSource:
setCallDirectoryProviderBundleId:
callSources
transactionForCallSource:
actions
_awdActionTypeForAction:
_awdActionStateForState:
_awdFailureReasonForAction:
commitDate
setCompletionTimeMs:
addActions:
setFailed:
setTimedOut:
_awdMomentsAvailabilityForAvailability:
supportsRelay
relayDeviceRouteChangesByCallUUID
_awdDeviceRouteForRoute:
_handleQueriedCurrentCallsMetricWithMetricId:
registerQueriableMetric:callback:
calls
setCalls:
isConnecting
isConferenced
callDuration
dateSentInvitation
_awdFaceTimeTransportTypeForFaceTimeTransportType:
_awdTelephonyTransportTypeForTelephonyCallSubType:
_awdLinkTypeForIDSInitialLinkType:
contactName
mapName
suggestedName
location
waitForCurrentReportingOperationsToComplete
setServerConnection:
_serverConnection
_relayDeviceRouteChangesByCallUUID
doesNotRecognizeSelector:
phoneNumberMCCToISOCountryCodeTransformBlock
initWithAccountID:primaryDeviceID:phoneNumberURI:availableDeviceSlots:allowedSecondaryDeviceIDs:
primaryDeviceID
availableDeviceSlots
isEqualToAccount:
setPhoneNumberMCCToISOCountryCodeTransformBlock:
mutableCopyWithZone:
setAccountID:
setPrimaryDeviceID:
setPhoneNumberURI:
setAvailableDeviceSlots:
setAllowedSecondaryDeviceIDs:
_accountID
_primaryDeviceID
_phoneNumberURI
_availableDeviceSlots
_allowedSecondaryDeviceIDs
isLoaded
startBagLoad
initWithAccount:destinations:options:
chatReceived:
accounts
isQuickRelaySupported
accountWithUUID:service:
isAccountActive
countryCode
IDSFormattedDestinationID
isRetry
outgoingSessionProviderGenerator
outgoingChatGenerator
initWithAction:
providerDelegate:requestedTransaction:completion:
callForConversation:withSessionToken:
canUpgradeChat:
upgradeChatIfNecessary:
isEqualToData:
chatsPendingUpgrade
instancesRespondToSelector:
setAccounts:
telephonySenderIdentities
updateProviderConfigurationWithAccounts:senderIdentities:
setTelephonySenderIdentities:
updateProviderConfigurationWithAccounts:
inviteIDSPeersWithAction:additionalPeers:completion:
upgradeCallForConversation:withSessionToken:
isUpgradingCallWithUUID:
updateProviderConfigurationWithSenderIdentities:
setIsAccountActive:
setOutgoingSessionProviderGenerator:
setOutgoingChatGenerator:
upgradeTimeout
setUpgradeTimeout:
_accounts
_callProviderManager
_telephonySenderIdentities
_chatsPendingUpgrade
_isAccountActive
_outgoingSessionProviderGenerator
_outgoingChatGenerator
_upgradeTimeout
initWithUniqueProxyIdentifier:
setBehavior:
playLocalDTMFToneForKey:
uplinkMutedSetTime
setUplinkMutedSetTime:
setActiveCategoryVolume:
handleRequestedAnswerMessage:withBehavior:
lastPathComponent
copyFileAtURL:toTemporaryFileWithName:
transferFileAtTemporaryURL:toDestinations:withMetadata:
URLByDeletingLastPathComponent
defaultManager
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
path
fileExistsAtPath:isDirectory:
performFileCopierOperation:onInputURL:outputURL:completion:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
clientFileURLByIdentifier
cleanUpTemporaryFileIfExistsForClientFileURL:
fileTransferer:didTransferFileAtURL:successfully:
temporaryFileURLByClientFileURL
zipDirectoryAtURL:completion:
fileTransferer:didReceiveResourcesAtURL:withMetadata:isZipped:fromIDSDestination:
stringByAppendingPathComponent:
fileURLWithPath:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
URLByAppendingPathComponent:
copyItemAtURL:toURL:error:
renamedResourceURL:withName:
moveItemAtURL:toURL:error:
pathComponents
removeLastObject
fileURLWithPathComponents:
removeItemAtURL:error:
stringByAppendingPathExtension:
didErrorOccur
cleanup
initWithInputURL:outputURL:identifier:operation:completionBlock:queue:
deleteContentsAtURL:
renameResourceAtURL:toResourceWithName:
transferFileAtURL:toDestinations:withMetadata:
unzipArchiveAtURL:completion:
_service
_clientFileURLByIdentifier
_temporaryFileURLByClientFileURL
initWithSerialQueue:timeout:
serialQueue
callSourceWithIdentifier:
_waitForCallSourceWithIdentifier:completion:
pendingCompletions
timeout
fetchCallSourceForIdentifier:completion:
handleCallSourcesChanged
setSerialQueue:
setTimeout:
setPendingCompletions:
_serialQueue
_timeout
_pendingCompletions
rangeOfString:
normalizedDeviceType
setRelayCallingEnabled:forDeviceWithID:
setThumperCallingAllowed:onSecondaryDeviceWithID:forSenderIdentityWithUUID:
setThumperCallingAllowed:onSecondaryDeviceWithID:
updateUINotification
stringByAppendingFormat:
arrayWithObject:
dictionaryWithObjectsAndKeys:
userNotificationWithIdentifier:timeout:alertLevel:displayFlags:displayInformation:
responseInformation
setRelayCallingEnabled:
setThumperCallingEnabled:
supportsPhoneCalls
uriForFromID:
ctServiceType
serviceDescription
displayPinMessageForDevice:completionHandler:
enrollDevice:forSenderIdentityUUID:
unenrollDevice:
displayServiceConfirmationWithCompletionHandler:
displayPinRequestFailure
displayIncomingPinCode:fromID:completionHandler:
pinCodeEnteredSuccessfully:cancelled:onPrimaryDevice:
resetOneTimeMessage
_thumperCallingAllowedOnDefaultPairedDeviceDefault
setProtoStatus:
setHasProtoStatus:
hasProtoStatus
setProtoConferenced:
setHasProtoConferenced:
hasProtoConferenced
setProtoTimeConnected:
setHasProtoTimeConnected:
hasProtoTimeConnected
setProtoOutgoing:
setHasProtoOutgoing:
hasProtoOutgoing
setProtoHasSentInvitation:
setHasProtoHasSentInvitation:
hasProtoHasSentInvitation
protoStatus
protoConferenced
protoTimeConnected
protoOutgoing
protoHasSentInvitation
_protoTimeConnected
_protoStatus
_protoConferenced
_protoHasSentInvitation
_protoOutgoing
setBackingProvider:
canBeAnsweredWithAudioOrVideoRelayWithRequest:
canOnlyBeAnsweredWithoutAudioOrVideoRelayWithRequest:
hasRelaySupport:
relayDelegate
relayCall:didGroupWithOtherCall:
relayCallDidUngroup:
isMutedForIdentifier:
setMuted:forIdentifier:
isSendingAudioForIdentifier:
setSendingAudio:forIdentifier:
inputAudioPowerSpectrumTokenForIdentifier:
outputAudioPowerSpectrumTokenForIdentifier:
setCallStatus:
relayCallDidDial:
relayCall:didAnswerWithRequest:
relayCallDidDisconnect:
relayCallConferenceDidStartSuccessfullyForIncomingAnsweredCall:
relayCallConferenceFailedToStart:
relayCallConferenceDidStop:cleanly:error:
startConferenceForIdentifier:usingTransport:remoteInviteDictionary:didStartHandler:didStopHandler:
relayCallConferenceDidStartSuccessfullyForOutgoingDialedCall:
relayCallConferenceDidStartSuccessfullyForPulledCall:
relayCallDidHold:
relayCallDidUnhold:
relayCall:didPlayLocalDTMFToneForKey:
relayCallDidSendHardPauseDigits:
relayCallDidBecomeEndpointForPull:
dateStartedOutgoing
setDateStartedOutgoing:
setDateSentInvitation:
prepareToStopConferenceForIdentifier:
canBeAnsweredWithRequest:
startConferenceForAnsweredCallWithTransport:remoteInviteDictionary:
startConferenceForDialedCallWithTransport:remoteInviteDictionary:
startConferenceForPulledCallWithTransport:remoteInviteDictionary:
stopConference
setLocallyHasStartedOutgoing
setRelayDelegate:
_voicemail
_emergency
_sos
_needsManualInCallSounds
_uplinkMuted
_supportsTTYWithVoice
_cannotRelayAudioOrVideo
_callStatus
_backingProvider
_displayContext
_initialLinkType
_localSenderIdentityAccountUUID
_relayDelegate
callHistoryManagerClientXPCInterface
callHistoryManagerServerXPCInterface
callHistoryManager
updateOutgoingLocalParticipantUUID:forCallsWithOutgoingLocalParticipantUUID:
recentCallsDidChangeForCallHistoryManager:
initWithManager:
_callHistoryManager
_parsePauseDigitsFromDestinationID:
pauseDigits
removeObjectAtIndex:
characterSetWithCharactersInString:
formUnionWithCharacterSet:
rangeOfCharacterFromSet:options:range:
substringWithRange:
characterAtIndex:
characterIsMember:
insertObject:atIndex:
setBaseDestinationID:
setOriginalPauseDigitsString:
setPauseDigits:
_baseDestinationID
_originalPauseDigitsString
_pauseDigits
initWithObject:queue:
processName
processBundleIdentifier
valueForEntitlement:
entitledCapabilities
connection
remoteObjectProxy
addBarrierBlock:
initWithConnection:queue:
objectForBlock
performBlockAfterCoalescing:
isEntitledForCapability:
_processIdentifier
_processName
_processBundleIdentifier
_entitledCapabilities
sharedUtilityProvider
utilityProvider
currentPreferredTransportMethod
transportMethod
bundleURL
absoluteString
ringtoneSoundURL
originalRingtoneSoundURL
supportedHandleTypes
setSupportedHandleTypes:
setEmergencyTUHandles:
setEmergencyTULabeledHandles:
setPrioritizedTUSenderIdentities:
URLWithString:
setBundleURL:
isFileURL
bundleWithURL:
setBundleIdentifier:
setRingtoneSoundURL:
setOriginalRingtoneSoundURL:
emergencyTUHandles
emergencyTULabeledHandles
prioritizedTUSenderIdentities
unsignedIntValue
orderedSetWithCapacity:
tuSenderIdentity
initWithTUSenderIdentity:
removeServiceDelegate:
pairedDeviceUniqueIDOverrideExists
removeObjectForKey:
_sendMessageOptionsWithTimeout:
sendData:toDestinations:priority:options:identifier:error:
givenName
setGivenName:
middleName
setMiddleName:
familyName
setFamilyName:
namePrefix
setNamePrefix:
nameSuffix
setNameSuffix:
nickname
setNickname:
phoneticRepresentation
setPhoneticRepresentation:
initWithPersonNameComponents:
personNameComponents
setRemoteIDSDestination:
setInputAudioPowerSpectrumToken:
setOutputAudioPowerSpectrumToken:
remoteIDSDestination
addMembers:
membersCount
clearMembers
membersAtIndex:
setMessagesGroupUUIDString:
membersType
hasMessage
hasMessagesGroupUUIDString
hasMessagesGroupName
members
setMembers:
message
messagesGroupUUIDString
_members
_message
_messagesGroupUUIDString
sharedPhotoLibrary
creationRequestForAsset
setShouldMoveFile:
addResourceWithType:fileURL:options:
placeholderForCreatedAsset
localIdentifier
performChanges:completionHandler:
saveLivePhotoWithPhotoURL:videoURL:completion:
callStateContext
_registerCallStopEvent
_registerCallStartEventForCall:
visibilityContext
_registerCallBackgroundedEvent
_registerCallForegroundedEventForCall:
eventBlock
_contextDictionaryWithCall:
setCallStateContext:
_registerEventWithContext:status:
setVisibilityContext:
_bundleIdentifierForCall:
setEventBlock:
_eventBlock
_callStateContext
_visibilityContext
initWithContactsDataSource:
initWithConversationManager:
initWithConversationManager:queue:
beginListeningOnService:
providerConfiguration
initWithIdentifier:callSource:configuration:
conversationManagerXPCServer
initWithLocalizedName:
setSupportsVideo:
setWithObjects:
faceTimeIDSProviderDelegate
reportAudioFinishedForCallWithUUID:
reportOutgoingCallWithUUID:startedConnectingAtDate:
faceTimeIMAVProviderDelegate
reportCallWithUUID:failedAtDate:withContext:
reportCallWithUUID:endedAtDate:privateReason:
deferReportingAudioFinishedForCallWithUUID:
requestTransaction:completion:
faceTimeConversationProviderDelegate
contactsDataProvider
labeledHandlesForContactWithIdentifier:
isSuggested
providerDelegate:requestedUpgradeToExistingCallForConversation:withSessionToken:completion:
initWithCallSource:queue:
conversationManager
_contactsDataProvider
_conversationManager
_conversationManagerXPCServer
_faceTimeIDSProviderDelegate
_faceTimeIMAVProviderDelegate
_faceTimeConversationProviderDelegate
initWithPayload:assertion:applicationShouldPostIncomingCall:
payload
setPayload:
applicationShouldPostIncomingCall
_applicationShouldPostIncomingCall
_payload
sdkVersion
initWithBundleIDs:states:
applicationStateForApplication:
_updateIsRunningForApplicationState:
environment
client
isRunning
token
pendingMessageContexts
applicationProxy
UIBackgroundModes
_deliverTokenToApplication
_deliverPendingPayloadsToApplication
setToken:
voipRegistrationSucceededWithDeviceToken:
voipPayloadReceived:mustPostCall:withCompletionHandler:
setRunningForeground:
setRunning:
initWithBundleIdentifier:queue:
hasVoIPEntitlement
setClient:
deliverToken:
deliverPayload:withAssertion:applicationShouldPostIncomingCall:
setEnvironment:
isRunningForeground
requiresStrictPolicyEnforcement
_running
_runningForeground
_requiresStrictPolicyEnforcement
_token
_environment
_client
_applicationProxy
_pendingMessageContexts
compare:options:
hasNamePrefix
hasGivenName
hasMiddleName
hasFamilyName
hasNameSuffix
hasNickname
hasPhoneticRepresentation
_familyName
_givenName
_middleName
_namePrefix
_nameSuffix
_nickname
_phoneticRepresentation
initWithCallCenterObserver:processObserver:callCenter:queue:
stringWithCString:encoding:
updateStatusBarSuppressionState:
processObserver
processIdentifierForBundleIdentifier:
setInCallServiceApplicationState:
updateResolvedDescriptor
setApplicationStateChanged:
currentApplicationStateForBundleIdentifier:completion:
setInCallServiceWantsStatusBarSuppressionState:
inCallServiceWantsStatusBarSuppressionState
resolvedCall
_statusBarStringForCall:
_processIdentifierForCall:
setProcessIdentifier:
_statusBarStyleOverrideForCall:
setStatusBarStyleOverrides:
inCallServiceWantsStatusBarSuppression
setInCallUIWantsStatusBarSuppression:
setResolvedDescriptor:
callDurationUpdateTimer
setCallDurationUpdateTimer:
inCallServiceApplicationState
isRunningForApplicationState:
callDurationString
currentCallsHaveMixedProviders
currentProcessIdentifier
_inCallServiceApplicationState
_processObserver
_callDurationUpdateTimer
_resolvedDescriptor
_inCallServiceWantsStatusBarSuppressionState
_callCenter
uplinkMutedStatusChanged:
activeConferenceConnectionForIdentifier:
conferenceConnections
isPreparedToStop
setDidPrepareHandler:
invokeDidPrepareIfNecessary:
_prepareConferenceForConferenceConnection:remoteInviteDictionary:
setTransport:
setDidStartHandler:
setDidStopHandler:
activeConference
setConferenceActiveForIdentifier:
invokeDidStartIfNecessary:error:
isHost
setUsingBaseband:
setAudioDisabled:
isAudioDisabled
updateConferenceForIdentifier:isUsingBaseband:disableAudio:
setPreparedToStop:
_conferenceConnectionsForConference:
prepareToStopTimeout
_cleanUpAllConferenceConnectionsForConference:withError:
conferenceConnectionForIdentifier:
_cleanUpConferenceConnection:error:
errorWithDomain:code:userInfo:
invokeDidStopIfNecessary:error:
_stopConference:
conferencesAwaitingConnectionClose
_postDidCloseNotificationForConference:
postNotificationName:object:userInfo:
closeConnectionTimeout
_postDidCloseNotificationForConferenceIfNecessary:
setConferenceConnections:
setConferencesAwaitingConnectionClose:
setCloseConnectionTimeout:
setPrepareToStopTimeout:
_conferenceConnections
_conferencesAwaitingConnectionClose
_closeConnectionTimeout
_prepareToStopTimeout
URLForDirectory:inDomain:appropriateForURL:create:error:
URLByAppendingPathComponent:isDirectory:
URLByStandardizingPath
initWithName:fileManager:error:
urlForFilename:
fileManager
fileExistsAtPath:
getResourceValue:forKey:error:
initWithDomain:code:userInfo:
minusSet:
initWithName:error:
createLinkIfNecessaryWithFilename:toURL:error:
removeLinksForFilenamesNotInArray:error:
setURL:
setFileManager:
_URL
_fileManager
accountsSupportSecondaryCalling
displayMismatchedAccountsNotification
pinExchangeDelegate
sendIDSAction:toDevice:
allIDSTelephonyDevices
uniqueID
idsDeviceFromUniqueID:
sendApprovalDisplayPinToDevice:
removeErrorNotifications
_numberForKey:
numberFromString:
isEqualToNumber:
displayPinErrorNotification
sendApprovalResponseToDevice:enteredCorrectly:wasCancelled:
pendingCodesToDevicesForApproval
randomSixDigitCode
sendIDSAction:toDevices:
_FTCopyGzippedData
dictionaryWithObject:forKey:
__imSetFromArray
sendMessage:fromAccount:toDestinations:priority:options:identifier:error:
setOutgoingPinRequestIdentifier:
displayErrorNotificationWithMessage:
_FTDecompressData
isHSATrusted
outgoingPinRequestIdentifier
isRelayCallingEnabledForDeviceWithID:
sendPinCodeAndPromptForResponseToDevice:forSenderIdentityUUID:
cancelPinRequests
handlePINCodeEnteredSuccessfully:canceled:fromDevice:isPrimaryDevice:
initWithDelegate:
requestPinFromDevice:
displaySlotsFullNotification
setPendingCodesToDevicesForApproval:
setPinExchangeDelegate:
_pendingCodesToDevicesForApproval
_pinExchangeDelegate
_outgoingPinRequestIdentifier
setHasCompletionTimeMs:
hasCompletionTimeMs
setHasState:
hasState
completionTimeMs
_completionTimeMs
initWithRelayService:thumperService:
callCapabilitiesClientXPCInterface
callCapabilitiesServerXPCInterface
initWithBundleIdentifiers:queue:
clients
deviceListChanged:
deviceCapabilityChanged:
_initializePairedHostDeviceState
_updateState
thumperCapabilitiesMonitor
telephonyCallCapabilities
accountsController
pairedHostDeviceState
xpcListener
capabilityStateUpdated:
_isWatchDevice
setPairedHostDeviceState:
_updateDynamicCapabilitiesAndUpdateClients
_updateClientsWithState
_savePairedHostDeviceState
_setRelayCallingEnabled:
_setRelayCallingEnabled:forDeviceWithID:
_setWiFiCallingEnabled:forSenderIdentityWithUUID:
_setWiFiCallingRoamingEnabled:forSenderIdentityWithUUID:
_setVoLTECallingEnabled:forSenderIdentityWithUUID:
_setThumperCallingEnabled:forSenderIdentityWithUUID:
_setThumperCallingAllowed:onSecondaryDeviceWithID:forSenderIdentityWithUUID:
_setThumperCallingAllowedOnDefaultPairedDevice:forSenderIdentityWithUUID:
endEmergencyCallbackMode
invalidateAndRefreshWiFiCallingCapabilitiesForSenderIdentityWithUUID:
invalidateAndRefreshThumperCallingCapabilitiesForSenderIdentityWithUUID:
_primaryThumperAccountRequiringAvailableDeviceSlots
thumperService
deviceWithUniqueID:
thumperPinExchangeController
thumperAccounts
_updateHostingAndDisplayingSupport
senderIdentityCapabilitiesStateByUUID
approvedSecondaryDeviceIDs
thumperCallingCapabilitiesState
_updateCallAvailability
_updateRelayCapabilities
_updateCTCapabilities
_supportsPrimaryCalling
setSupportsPrimaryCalling:
_supportsBasebandCalling
setSupportsBasebandCalling:
_supportsCellularData
setSupportsCellularData:
_supportsDisplayingTelephonyCalls
setSupportsDisplayingTelephonyCalls:
_supportsDisplayingFaceTimeAudioCalls
setSupportsDisplayingFaceTimeAudioCalls:
_supportsDisplayingFaceTimeVideoCalls
setSupportsDisplayingFaceTimeVideoCalls:
isTelephonyDevice
_defaultOverrideForDisableDefault:forceDefault:
supportsCellularData
inProcess_isCallingSupported
faceTimeSupported
setFaceTimeAudioAvailable:
setFaceTimeVideoAvailable:
areCapabilitiesValid
setCtCapabilitiesValid:
isEmergencyCallbackModeEnabled
setEmergencyCallbackModeEnabled:
isEmergencyCallbackPossible
setEmergencyCallbackPossible:
wiFiCallingCapabilitiesState
setSupported:
voLTECallingCapabilitiesState
_supportsThumperCallingUsingSenderIdentityCapabilitiesState:
_isThumperCallingAllowedForCurrentDeviceUsingSenderIdentityCapabilitiesState:
setApproved:
isRelayCallingEnabled
isApproved
setEnabled:
supportsBasebandCalling
setSupportsSimultaneousVoiceAndData:
setSenderIdentityCapabilitiesStateByUUID:
_primaryThumperAccountRequiringMatchingCallerID
isThumperCallingSupportedForAccountID:
_setThumperCallingAssociatedAccountID:
setWiFiCallingEnabled:forSenderIdentityWithUUID:
setVoLTECallingEnabled:forSenderIdentityWithUUID:
isRoamingEnabled
setWiFiCallingRoamingEnabled:forSenderIdentityWithUUID:
setThumperCallingEnabled:forSenderIdentityWithUUID:
setThumperCallingAssociatedAccountID:
cloudCallingDevices
senderIdentityUUID
telephonySubscriptionLabelIdentifierForSenderIdentityUUID:
isServiceEnabledForTelephonySubscriptionLabelIdentifier:
supportsRelayCalling
localDeviceID
_primaryThumperAccountRequiringMatchingCallerID:requiringAvailableDeviceSlots:
primaryThumperAccountUsingDevices:outgoingCallerIDURI:requireMatchingCallerIDURI:requireAvailableDeviceSlots:
_supportsRelayCalling
setSupportsRelayCalling:
_accountsMatchForSecondaryCalling
setAccountsMatchForSecondaryCalling:
relayService
setRelayCallingFeaturesEnabled:
isNearby
setRelayCallingAvailability:
setSupportsFaceTimeAudioRelayCalling:
setSupportsFaceTimeVideoRelayCalling:
setAccountsSupportSecondaryCalling:
_isAudioAccessoryDevice
_relayCallingEnabledDefault
accountsMatchForSecondaryCalling
_deviceExistsThatSupportsRelayCallingWithoutLocalRelayCallingEnabled
setSupportsTelephonyRelayCalling:
_relayCallingDisabledForDeviceIDDefault
setRelayCallingDisabledForDeviceID:
setOutgoingRelayCallerID:
_cloudCallingDevices
setCloudCallingDevices:
defaultPairedDeviceExists
telephonyCapableDeviceExists
relayCapableDeviceExists
compare:
sortedArrayUsingComparator:
supportsRelayCallingWithoutLocalRelayCallingEnabled
_setRelayCallingEnabledDefault:
relayCallingDisabledForDeviceID
_setRelayCallingEnabledDefault:forDeviceWithID:
setThumperCallingAllowedOnDefaultPairedDevice:forSenderIdentityWithUUID:
invalidateAndRefreshWiFiCallingProvisioningURLForSenderIdentityWithUUID:
invalidateAndRefreshThumperCallingProvisioningURLForSenderIdentityWithUUID:
cancelPinRequestFromPrimaryDevice
callCapabilitiesState:
telephonyCallCapabilitiesChanged
_primaryThumperAccount
_supportslaunchingInCallApplicationForIncomingCall
thumperPushHandler
_xpcListener
_accountsController
_telephonyCallCapabilities
_thumperPushHandler
_thumperPinExchangeController
_thumperCapabilitiesMonitor
_relayService
_thumperService
_pairedHostDeviceState
isValid
setDialRequest:
isDialAssisted
setWasDialAssisted:
audioSourceIdentifier
initWithDisplayContext:call:serialQueue:
setDynamicDisplayContext:
dynamicDisplayContext
setCompletionHandler:
relayClientTransport
transitionStatus
setTransitionStatus:
wasDialAssisted
faceTimeIDStatus
setFaceTimeIDStatus:
setUplinkWasExplicitlyMuted:
shouldOverrideCallStatus
callStatusFromOverride
_refreshFaceTimeIDSStatusIfNecessary
faceTimeIDStatusRefreshed
setFaceTimeIDStatusRefreshed:
currentIDStatusForDestination:service:listenerID:queue:completionBlock:
initWithCall:contactIdentifier:serialQueue:
initWithUUID:
setOnHold:
setHostedOnCurrentDevice:
hasAudioInterruption
setHasAudioInterruption:
displayContextChanged:
disconnect
updateWithProxyCall:
setRelayClientTransport:
silencingUserInfo
cxCall
hasAudioFinished
setHasAudioFinished:
bytesOfDataUsed
setBytesOfDataUsed:
expectedRelayClientDestination
setExpectedRelayClientDestination:
setSilencingUserInfo:
_uplinkWasExplicitlyMuted
_hasAudioInterruption
_hasAudioFinished
_faceTimeIDStatusRefreshed
_dialRequest
_dateStartedOutgoing
_bytesOfDataUsed
_uplinkMutedSetTime
_remoteUplinkMutedSetTime
_activeRemoteParticipants
_relayClientTransport
_expectedRelayClientDestination
_dynamicDisplayContext
_silencingUserInfo
_initializeAudioRouteCollections
_updatePickableRoutes
_updateCarPlayDeviceConnected
audioDeviceController
pickableRoutesDidChangeNotification:
preferredExternalRouteDidChangeNotification:
carPlayIsConnectedChanged:
mediaServicesWereResetNotification:
_audioRouteCollectionForCall:
isAnyRouteAvailableWithUniqueIdentifier:
isCarPlayDeviceConnected
_isAnyAudioDevicePreferred
isAnyPreferredRouteAvailable
audioRouteCollections
preferredRoute
isAnyPreferredRouteAvailableAndActive
preferredAndActiveRoute
isAnyRouteAvailableWithBluetoothEndpointType:
isAnyRouteAvailableWithOtherConnectedDevices
_initializeAutomaticCarDNDStatusIfNecessary
_postNotificationName:
updatePickableRoutes
initWithCategory:mode:
isPreferredDevice
setAudioRouteCollections:
setAutomaticCarDNDStatus:
automaticCarDNDStatus
setCarModeActive:
fetchAutomaticDNDAssertionWithReply:
setStatusChangeObserver:
sharedAVSystemController
attributeForKey:
setCarPlayDeviceConnected:
audioDeviceControllerDeviceListChanged:
isAnyRouteAvailableWithUniqueIdentifier:forCall:
isAnyPreferredRouteAvailableForCall:
preferredRouteForCall:
isAnyPreferredRouteAvailableAndActiveForCall:
preferredAndActiveRouteForCall:
isAnyVehicleRouteAvailableForCall:
isAnyPreferredRouteAvailableForAnyCall
isAnyPreferredRouteAvailableAndActiveForAnyCall
isCarModeActive
isAnyVehicleRouteAvailableForAnyCall
isAnyRouteAvailableWithOtherConnectedDevicesForAnyCall
isAnyBluetoothHeadphoneRouteAvailableForAnyCall
_carPlayDeviceConnected
_carModeActive
_audioRouteCollections
_automaticCarDNDStatus
initWithUUID:andAccountID:andSlot:
slotID
csd_isTelephony
csd_isThumper
csd_isUnknown
csd_unknownContextInfoForAccountID:
addRemoteMembers:
addActiveRemoteParticipants:
setUUIDString:
setGroupUUIDString:
setLocalMember:
remoteMembersCount
clearRemoteMembers
remoteMembersAtIndex:
activeRemoteParticipantsCount
clearActiveRemoteParticipants
activeRemoteParticipantsAtIndex:
remoteMembersType
activeRemoteParticipantsType
hasUUIDString
hasGroupUUIDString
setHasLocallyCreated:
hasLocallyCreated
hasInitiator
hasLocalMember
uUIDString
groupUUIDString
locallyCreated
_groupUUIDString
_uUIDString
weakToStrongObjectsMapTable
retreiveActiveConversations
performBlockAfterFirstUnlock:
sendData:fromAccount:toDestinations:priority:options:identifier:error:
aliases
activeLocalHandles
anyObject
idsDestinations
groupSessionProviderCreationBlock
accountWithCallerID:
initWithGroupSessionProvider:
conversationCreationBlock
mutableConversationsByUUID
persistenceController
updateConversation:
conversationWithGroupUUID:
createConversationWithUUID:groupUUID:messagesGroupUUID:locallyCreated:localMember:initiator:remoteMembers:fromStorage:
delegateToQueue
conversationManager:conversation:receivedMessage:fromHandle:withUpdate:
setConversationGroupUUIDString:
participantWithCSDConversationParticipant:
addActiveParticipants:
sendDataBlock
activeParticipants
csdConversationParticipant
enumerateActiveConversations:
removeAllConversations
conversationWithGroupUUID:orRepresentedByRemoteMembers:
localCallerID
createConversationIfNecessaryWithUUID:groupUUID:messagesGroupUUID:locallyCreated:localMember:remoteMembers:
removeConversation:
conversationManager:conversationChanged:
conversationManager:conversation:addedActiveParticipant:
conversationManager:conversation:removedActiveParticipant:
conversationManager:conversation:mediaPrioritiesDidChangeForParticipant:
conversationManager:conversation:failedWithContext:
initWithUUID:handle:
outgoingResponseIdentifier
hasConversationGroupUUIDString
conversationGroupUUIDString
notifyDelegatesOfMessage:fromHandle:forConversation:withUpdate:
handleConversation:receivedAVCBlobRequest:fromHandle:
handleConversation:receivedAVCBlobResponse:fromHandle:
processGroupSessionParticipantUpdate:
participantDestinationID
participantUpdateType
processJoinUpdate:
handleParticipantWithIdentifier:leftConversationWithGroupUUID:fromHandle:
processUpdateMembersUpdate:
processParticipantDataUpdate:
clientContextData
participantData
handleParticipants:joinedConversationWithUpdate:joinContext:
tuConversationMembers
addedMembers
conversarionWithGroupUUID:orMemberIdentifiers:orRemoteMembers:
fromServer
transitionConversationWithUUID:toNewGroupUUID:remoteMembers:localMember:
senderIdentityUUIDForCallerIDHandle:
conversationRepresentedByRemoteMembers:
conversationsByGroupUUID
conversationsByUUID
removeDelegate:
findOrCreateConversationWithGroupUUID:messagesGroupUUID:remoteMembers:localMember:
joinExistingConversationWithUUID:context:
startAudioForConversationWithUUID:
leaveConversationWithUUID:
leaveAllConversations
setUplinkMuted:forConversationWithUUID:
setVideoEnabled:forConversationWithUUID:
setVideoPaused:forConversationWithUUID:
setRelaying:forConversationWithUUID:
isConversationWithUUIDRelaying:
addRemoteMembers:toConversationWithUUID:
updateParticipantPresentationContexts:onConversationWithUUID:
buzzMember:conversationUUID:
setMessagesGroupName:onConversationWithUUID:
setDelegateToQueue:
lockStateObserver
setCallProviderManager:
setGroupSessionProviderCreationBlock:
setConversationCreationBlock:
setSendDataBlock:
setActiveLocalHandles:
setLocalCallerID:
_mutableConversationsByUUID
_delegateToQueue
_persistenceController
_lockStateObserver
_groupSessionProviderCreationBlock
_conversationCreationBlock
_sendDataBlock
_activeLocalHandles
_localCallerID
localSenderIdentity
setLocalParticipantUUID:
setCallerId:
handleTypeForTUHandle:
setHandleType:
setUniqueId:
setDuration:
setServiceProvider:
setMediaType:
dateWithTimeIntervalSinceNow:
setDate:
setRead:
setCallerNetworkName:
setCallerIdAvailability:
setTimeToEstablish:
providerForRecentCall:
predicateWithFormat:
predicateForFilteringOutFaceTimeAudioCalls
localParticipantUUID
outgoingLocalParticipantUUID
setOutgoingLocalParticipantUUID:
initWithType:value:normalizedValue:
setHasProtocolVersion:
hasProtocolVersion
setHasMessageType:
hasMessageType
setHasCallService:
hasCallService
setHasLatencyMs:
hasLatencyMs
messageType
latencyMs
_latencyMs
_protocolVersion
_callService
_messageType
setHasFailed:
hasFailed
failed
_failed
setHasProtoWantsVideo:
setOBSOLETEProtoMomentsAvailable:
setHasOBSOLETEProtoMomentsAvailable:
hasOBSOLETEProtoMomentsAvailable
setHasProtoSenderMuteUplink:
hasProtoSenderMuteUplink
setHasProtoShouldSuppressInCallUI:
hasProtoShouldSuppressInCallUI
setHasProtoMomentsV2Available:
hasProtoMomentsV2Available
oBSOLETEProtoMomentsAvailable
_protoUpgradeSessionUUID
_oBSOLETEProtoMomentsAvailable
_protoMomentsV2Available
_protoSenderMuteUplink
_protoShouldSuppressInCallUI
_protoWantsVideo
faceTimeAudioAvailable
faceTimeVideoAvailable
supportsPreferredAndActive
isPreferredAndActive
isPreferred
setCategory:
setMode:
_routePassingTest:
_anyRoutePassesTest:
isWirelessHeadset
isAirTunes
isCarAudio
isBluetooth
bluetoothEndpointType
uniqueIdentifier
identifiersOfOtherConnectedDevices
enumerateObjectsUsingBlock:
enumerateRoutesInvokingBlock:forRoutesPassingTest:
isReceiverRouteAvailable
isSpeakerRouteAvailable
isWirelessHeadsetRouteAvailable
isAirTunesRouteAvailable
isCarAudioRouteAvailable
isBluetoothRouteAvailable
_setRoutesFromRouteDictionaries:
_category
_mode
hasCallInfo
callInfoSource
setHasCallInfoSource:
hasCallInfoSource
callInfoSourceAsString:
StringAsCallInfoSource:
hasCallDirectoryProviderBundleId
callInfo
callDirectoryProviderBundleId
_callDirectoryProviderBundleId
_callInfo
_callInfoSource
setHasFaceTimeAudioAvailable:
hasFaceTimeAudioAvailable
setHasFaceTimeVideoAvailable:
hasFaceTimeVideoAvailable
_faceTimeAudioAvailable
_faceTimeVideoAvailable
setStatus:
setConferenced:
dateWithTimeIntervalSinceReferenceDate:
timeIntervalSinceReferenceDate
processAssertions
countForObject:
acquireProcessAssertionForBundleIdentifier:
invalidateProcessAssertionForBundleIdentifier:
setProcessAssertions:
_processAssertions
initForReadingWithError:
initWithDataSource:deviceLockObserver:callCenterObserver:callDirectoryStoreBuilder:queue:
_callFilterBlock
emergencyProvider
setCallDirectoryStore:
callDirectoryAllowsCallFromSourceAddress:
_doNotDisturbAllowsCallFromSourceAddress:providerIdentifier:
isOnCall
isOnEmergencyCall
emergencyProviderIdentifier
callDirectoryAllowsCallFromSourceAddress:countryCode:
callDirectoryStore
_callDirectoryPhoneNumberVariantsForSourceAddress:countryCode:
containsBlockingEntryForEnabledExtensionWithPhoneNumberInArray:error:
initWithDigits:countryCode:
callDirectorySanitizer
canonicalizedPhoneNumber:
ITUCountryCodeForISOCountryCode:
setOnCall:
setOnEmergencyCall:
twoTimeCallthroughInterval
setTwoTimeCallthroughInterval:
deviceLockObserver
_onCall
_onEmergencyCall
_twoTimeCallthroughInterval
_callDirectoryStore
_emergencyProviderIdentifier
_deviceLockObserver
_callDirectorySanitizer
accountStore
aa_primaryAppleAccount
username
isSignedIntoiCloud
_accountStore
initWithCallCenterObserver:transactionManager:queue:
_callHistoryChanged:
_addPendingCallToCallHistory:
_callConnected:
_handleCallHistoryChanged
normalizedPhoneNumberHandleForValue:isoCountryCode:
_markReadRecentCallsMatchingHandle:
recentsManager
predicateForCallsWithStatusRead:
callsWithPredicate:limit:offset:batchSize:
clearReadNotificationsIgnoringHandleIds:
cachedCalls
updateBytesOfDataUsedFor:with:
_callHistoryTransactionObjectWithIdentifier:
_endTransactionForObjectAfterCallHistoryDatabaseChanges:
addToCallHistory:
transactionObjectsAwaitingCallHistory
transactionManager
predicateForCallsWithRemoteParticipantCount:
predicateForCallsWithRemoteParticipantHandle:
andPredicateWithSubpredicates:
predicateFormat
setRead:forCallsWithPredicate:completion:
isEqualToCallProvider:
predicateForCallsWithAnyServiceProviders:
notPredicateWithSubpredicate:
deleteCallsWithPredicate:completion:
_canAddCallToCallHistory:
_addCallToCallHistory:
updateBytesOfDataUsed:forCallWithUniqueProxyIdentifier:callHistoryIdentifier:
incomingCallFilter
_incomingCallFilter
_transactionManager
_recentsManager
_transactionObjectsAwaitingCallHistory
_cachedCalls
preferences
_updateSessionPreferences
_preferences
setProtoPersonNameComponents:
setSuggestedName:
setCompanyName:
setMapName:
setLocation:
setContactName:
setContactLabel:
setCallDirectoryLabel:
setCallDirectoryLocalizedExtensionContainingAppName:
setCallDirectoryExtensionIdentifier:
hasName
hasProtoPersonNameComponents
hasSuggestedName
hasLabel
hasCompanyName
hasMapName
hasLocation
hasContactName
hasContactLabel
hasCallDirectoryLabel
hasCallDirectoryLocalizedExtensionContainingAppName
hasCallDirectoryExtensionIdentifier
protoPersonNameComponents
companyName
contactLabel
callDirectoryLocalizedExtensionContainingAppName
_callDirectoryExtensionIdentifier
_callDirectoryLabel
_callDirectoryLocalizedExtensionContainingAppName
_companyName
_contactLabel
_contactName
_label
_location
_mapName
_name
_protoPersonNameComponents
_suggestedName
setActivityQueue:
setBestAppSuggestionManager:
bestAppSuggestionManager
broadcastActivity:withTimeout:
_broadcastActivity:withTimeout:shouldPrioritize:
_stopBroadcastingActivity:
_listenForActivityType:dynamicIdentifier:
_stopListeningForActivityType:
activityQueue
userActivity
becomeCurrent
_updateCurrentlyBroadcastedActivity
registerActivityType:dynamicIdentifier:
activityTypeRequiresBestAppSuggestionListener:
startListeningForBestAppSuggestions
unregisterActivityType:dynamicIdentifier:
stopListeningForBestAppSuggestions
activityType
activityTypeForUserActivityTypeString:
dynamicIdentifier
bestAppSuggestionMayHaveChanged
bestAppSuggestionChanged:
bestAppSuggestionChanged:withAdditionalSuggestions:
connectionInterrupted
currentlyBroadcastedActivity
setCurrentlyBroadcastedActivity:
_activityQueue
_currentlyBroadcastedActivity
_bestAppSuggestionManager
setTuConversationMembers:
numberWithLong:
addAddedMembers:
setJoined:
participantPushToken
participantURI
setLocalParticipantIdentifier:
idsDestinationForActiveParticipant:
_joined
_localParticipantIdentifier
initWithCallStateController:queue:
setProviderManager:
initWithDataSources:queue:
updateClientsWithCall:
setCallChanged:
callServicesClientXPCInterface
callServicesServerXPCInterface
wantsCallDisconnectionOnInvalidation
disconnectAllCalls
sharedInstanceWithQueue:server:shouldRegister:
callServicesInterface
registerWithCompletionHandler:
_handleRelayCallingChanged
makeLocalRouteController
localRouteController
routesByUniqueIdentifier
handleLocalRoutesByUniqueIdentifierUpdated:
handleRoutesByUniqueIdentifierUpdated:
setRoutesDidChangeHandler:
reportRouteWasPicked:
setRouteWasPickedHandler:
reportTimedOutPickingRoute:
setTimedOutPickingRouteHandler:
makePairedHostDeviceRouteController
handlePairedHostDeviceRoutesByUniqueIdentifierUpdated:
_handleCallStatusChangedNotification:
_handlePreferredRouteChangedNotification:
_handleCallStartedOutgoingNotification:
_handleCallStartedConnectingNotification:
_handleCallConnectedNotification:
_handleNeedsManualInCallSoundsChangedNotification:
_handleCallWantsHoldMusicChangedNotification:
_handleCallShouldSuppressRingtoneChangedNotification:
_handleCallModelChangedNotification:
_handleResetCallStateNotification:
_handleHardPauseStateChangedNotification:
_handleCallIsUsingBasebandChangedNotification:
_handleInvitationSentNotification:
_handleCallDisplayContextChangedNotification:
_handleUpdateRemoteUplinkMutedChangedNotification:
_handleTUCallSupportsTTYWithVoiceChangedNotification:
_handleTUCallTTYTypeChangedNotification:
_handleCarPlayControlEventNotification:
callHistoryManagerXPCServer
callProviderManagerXPCServer
providerCallDataSource
supportsRelayingToOtherDevices
areRelayCallingFeaturesEnabled
_requestCallStateFromHost
callsWithAnEndpointElsewhere
_answerIncomingCall:withBehavior:
_answerIncomingCallAsConversation:
disconnectCurrentCallAndActivateHeld
swapCalls
unholdCall:
holdCall:
activeConversationForCall:
initWithConversation:
setUUID:
joinConversationWithConversationRequest:
faceTimeLaunchForIncomingCallURL
faceTimeShowInCallUIURL
currentProxyCalls
proxyCallWithCall:
eligibleCallsByFilteringCalls:forClient:
isCallEligible:forClient:
handleCurrentCallsChanged:callDisconnected:
performBlockOnClients:
handleFrequencyChangedTo:inDirection:forCallsWithUniqueProxyIdentifiers:
wantsFrequencyChangeNotifications
arrayByApplyingSelector:
filterClientsUsingPredicate:andPerformBlock:coalescedByIdentifier:
handleMeterLevelChangedTo:inDirection:forCallsWithUniqueProxyIdentifiers:
resetCallProvisionalStates
sendClientsNotificationName:forCall:userInfo:
handleNotificationName:forCallWithUniqueProxyIdentifier:userInfo:
_launchInCallApplicationForIncomingCallIfNecessary:
_handleRingingCallStatusChangeForHostedCall:
_handleSendingCallStatusChangeForHostedCall:
_launchInCallApplicationForOutgoingConversationIfNecessary:
_launchInCallApplicationForOutgoingCallIfNecessary:
_handleDisconnectedCallStatusChangeForHostedCall:
_handleDisconnectedCallStatusChangeForVoicemailCall
_handleActiveCallStatusChangeForHostedCall:
_handleHeldCallStatusChangeForHostedCall:
_handleConnectingCallStatusChangeForHostedCall:
_endProxyCallsForConnectingVideoCall
_handleConnectedCallStatusChangeForHostedCall:
performPushHostedCallsToDestination:
performPullRelayingCallsFromClientAndUpdateEndpoint:updateExpectedDestination:
getActivePairedDevice
supportsCapability:
shouldRelayToOtherDevices
_nonRingingCallExistsOnThisDevice
registerCall:
relayCallDataSource
relayCallDelegate
outgoingCallFromDialRequest:
dateAnsweredOrDialed
dateDialed
setDateAnsweredOrDialed:
callWithCallUUID:
callsWithGroupUUID:
holdCalls:whileUnholdingCalls:
groupCalls:withCalls:
ungroupCall:fromOtherCallsInGroup:
addCalls:forIdentifier:
dataSources
callsForDataSource:identifier:
performEndActiveAndAnswerCall:withRequest:
performEndHeldAndAnswerCall:withRequest:
performHoldActiveAndAnswerCall:withRequest:
performAnswerCallAsVideoUpgrade:withRequest:
performAnswerCallAsAudioDowngrade:withRequest:
answerCall:withRequest:whileDisconnectingActiveCalls:
disconnectCalls:whileHoldingCalls:andUnholdingCalls:andUngroupingCalls:
answerCall:withRequest:whileDisconnectingHeldCalls:andHoldingCalls:
currentlyPickedRouteIdForCategory:andMode:
sourceIdentifierForRouteID:
answerCall:withRequest:whileHoldingActiveCalls:
disconnectCall:whileUngroupingCall:
disconnectAllCalls:
sendMMIOrUSSDCodeWithRequest:
setTTYType:forCalls:
setUplinkMuted:forCalls:
pullCallWithHandoffActivityUserInfo:completion:
allCallsPassTest:
callForClient:usingCall:
currentCallsForClient:
_dial:displayContext:completion:
performDialCall:displayContext:
performAnswerCall:withRequest:
performHoldCall:
performUnholdCall:
performDisconnectCall:
performGroupCall:withCall:
performUngroupCall:
performSwapCalls
performPlayDTMFToneForCall:key:
performDisconnectCurrentCallAndActivateHeld
performDisconnectAllCalls
performSetTTYType:forCall:
performPushRelayingCallsToHostWithSourceIdentifier:
performPullCallFromClientUsingHandoffActivityUserInfo:completion:
performSendMMIOrUSSDCodeWithRequest:
performSetUplinkMuted:forCall:
performPullHostedCallsFromPairedHostDevice
performUpdateCallWithProxy:
reportCallEnteredForeground:
reportAllCallsBackgrounded
performJoinConversation:
setCurrentAudioInputDeviceToDeviceWithUID:
setCurrentAudioOutputDeviceToDeviceWithUID:
pickRouteWithUniqueIdentifier:
containsOutgoingRestrictedHandle:forBundleIdentifier:
policyForAddresses:forBundleIdentifier:
willRestrictAddresses:forBundleIdentifier:
shouldRestrictAddresses:forBundleIdentifier:
isUnknownAddress:normalizedAddress:forBundleIdentifier:
predicateWithBlock:
filteredArrayUsingPredicate:
_handleMessagingConnectionEndForCalls:withDisconnectedReason:didStartConnecting:
answerCallWithRequest:
holdCallWithUniqueProxyIdentifier:
unholdCallWithUniqueProxyIdentifier:
disconnectCallWithUniqueProxyIdentifier:
groupCallWithUniqueProxyIdentifier:withOtherCallWithUniqueProxyIdentifier:
ungroupCallWithUniqueProxyIdentifier:
playDTMFToneForCallWithUniqueProxyIdentifier:key:
setTTYType:forCallWithUniqueProxyIdentifier:
pushRelayingCallsToHostWithSourceIdentifier:
pullHostedCallsFromPairedHostDevice
sendHardPauseDigitsForCallWithUniqueProxyIdentifier:
updateCallWithProxy:
enteredForegroundForCallWithUniqueProxyIdentifier:
willEnterBackgroundForAllCalls
enteredBackgroundForAllCalls
setRemoteVideoPresentationSizeForCallWithUniqueProxyIdentifier:size:
setRemoteVideoPresentationStateForCallWithUniqueProxyIdentifier:presentationState:
setUplinkMuted:forCallWithUniqueProxyIdentifier:
setDownlinkMuted:forCallWithUniqueProxyIdentifier:
shouldSuppressInCallStatusBar:
requestInitialState:
dialWithRequest:reply:
pullCallFromClientUsingHandoffActivityUserInfo:reply:
reportLocalPreviewStoppedForCallWithUniqueProxyIdentifier:
setClientCapabilities:
localRoutesByUniqueIdentifier:
pairedHostDeviceRoutesByUniqueIdentifier:
pickLocalRouteWithUniqueIdentifier:
pickPairedHostDeviceRouteWithUniqueIdentifier:
willRestrictAddresses:forBundleIdentifier:reply:
containsRestrictedHandle:forBundleIdentifier:reply:
shouldRestrictAddresses:forBundleIdentifier:reply:
policyForAddresses:forBundleIdentifier:reply:
isUnknownAddress:normalizedAddress:forBundleIdentifier:reply:
updateClientsWithFrequency:inDirection:forCalls:
updateClientsWithMeterLevel:inDirection:forCalls:
resetClientCallProvisionalStates
sendClientsNotificationName:
sendClientsNotificationName:forCall:
_handleFaceTimeAvailabilityChangedNotification:
isTrackingVoIPCallForBundleIdentifier:
carPlayHardwareControlsBroadcaster
_callController
_recentsController
_localRouteController
_pairedHostDeviceRouteController
_callHistoryManagerXPCServer
_callProviderManagerXPCServer
_relayCallDataSource
_providerCallDataSource
_relayCallDelegate
_carPlayHardwareControlsBroadcaster
setOriginatingProcessId:
actionsCount
clearActions
actionsAtIndex:
actionsType
hasOriginatingProcessId
setHasTimedOut:
hasTimedOut
originatingProcessId
timedOut
setActions:
_actions
_originatingProcessId
_timedOut
_handleDeviceFirstUnlockNotification
initWithNotifyObserver:queue:
hasBeenUnlocked
hasBeenUnlockedBlock
setHasBeenUnlocked:
_refreshHasBeenUnlocked
notifyObserver
endObserving
firstUnlockCallbacks
isObserving
setHasBeenUnlockedBlock:
setFirstUnlockCallbacks:
setNotifyObserver:
_hasBeenUnlocked
_hasBeenUnlockedBlock
_firstUnlockCallbacks
_notifyObserver
setPersonNameComponents:
setBundleIdentifierToVoIPApplication:
setClientManager:
voipPayloadReceived:withCompletionHandler:
voipRegistrationFailed
interfaceWithProtocol:
voipRegister
voipUnregister
_removeAllApplicationsFromKillCountsDictionary
bundleIdentifierToVoIPApplication
_apsConnectionForEnvironment:
_pruneOutstandingPushesForBundleIdentifier:
_findOrCreateApplicationWithBundleIdentifier:
_removeApplicationFromKillCountsDictionary:
_unregisterApplication:inEnvironment:
developmentConnection
removeFromRunLoop
productionConnection
_registerApplicationWithBundleIdentifier:client:environment:
topicFromBundleId:
requestTokenForTopic:identifier:
bundleIdFromTopic:
outstandingVoIPPushes
topic
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
_isApplicationPreventedFromBeingLaunched:
_appHasOngoingCall:
openApplication:options:withResult:
acquire
_apsMessageIsStillOutstanding:
identityForEmbeddedApplicationIdentifier:
setReportType:
setExceptionDomain:
setExceptionCode:
initWithProcessIdentity:context:
execute:
_incrementKillCountForApplication:
_createAPSConnectionForEnvironment:namedDelegatePort:
initWithEnvironmentName:namedDelegatePort:queue:
enabledTopics
arrayByAddingObject:
setEnabledTopics:
_removeTopic:fromConnection:
invalidateTokenForTopic:identifier:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
noteReportedNewIncomingVoIPCallForBundleIdentifier:
setProductionConnection:
setDevelopmentConnection:
_productionConnection
_developmentConnection
_bundleIdentifierToVoIPApplication
_outstandingVoIPPushes
streamToken
avcIdentifier
initWithIdentifier:handle:
audioPriority
videoPriority
setAvcIdentifier:
activeIDSDestination
isEqualToParticipant:
initWithIDSDictionaryRepresentation:
idsDictionaryRepresentation
_audioEnabled
_streamToken
_audioPriority
_videoPriority
_avcIdentifier
_activeIDSDestination
strongToStrongObjectsMapTable
dataSourceToIdentifierToCalls
setDataSourceToIdentifierToCalls:
_dataSourceToIdentifierToCalls
iconTemplateImageData
setIconTemplateImageData:
supportsVideo
includesCallsInRecents
setAudioSessionID:
supportedTUHandleTypes
setSupportsCurrentPlatform:
initWithCallSource:configuration:
identifiersWithPendingCoalescingBlocks
blockToExecuteAfterPendingCoalescingBlocksByIdentifier
performBlock:coalescedByIdentifier:
processInfo
mainBundle
performBlock:
setObject:
setIdentifiersWithPendingCoalescingBlocks:
setBlockToExecuteAfterPendingCoalescingBlocksByIdentifier:
_object
_identifiersWithPendingCoalescingBlocks
_blockToExecuteAfterPendingCoalescingBlocksByIdentifier
accountDescription
shortLabel
initWithUUID:accountUUID:localizedName:localizedShortName:handle:
conversationManagerClientXPCInterface
conversationManagerServerXPCInterface
notifyClientsToConnectIfNecessary
updateConversationsByGroupUUID:
mediaPrioritiesChangedForConversation:
updateConversationWithUUID:participantPresentationContexts:
conversationsByGroupUUID:
clientsShouldConnectToken
setClientsShouldConnectToken:
_clientsShouldConnectToken
initWithDataSource:serialQueue:
localProvidersByIdentifier
registeredLocalProvidersByIdentifier
addEntriesFromDictionary:
pairedHostDeviceProvidersByIdentifier
registeredPairedHostDeviceProvidersByIdentifier
_unregisterUninstalledProvidersAndNotify:
_updateProvidersByIdentifierAndNotify:
isRelayCallingGuaranteed
setProvidersByIdentifier:
isProviderInstalled:
setRegisteredLocalProvidersByIdentifier:
providersByIdentifier
_providersByIdentifierByFilteringForRemoteClientsFromProvidersByIdentifier:
uniqueRingtoneSoundLinkFilenameWithOriginalFilename:
isSymbolicLinkAtURL:
createLinkIfNecessaryWithFilename:toURL:
removeLinksForFilenamesNotInArray:
setRegisteredPairedHostDeviceProvidersByIdentifier:
providerIdentifiersForExistingCalls
isDevicePasscodeLocked
dialAssistedDialRequestForDialRequest:
appShouldUseDeprecatedCallingIntents:
userActivityUsingDeprecatedCallingIntents:
openUserActivity:usingApplicationWithBundleIdentifier:options:completion:
plugInKitPlugins
relayCallingStateChangedForDataSource:
installedProvidersChangedForDataSource:
registerLocalProvider:
_localProvidersByIdentifier
_pairedHostDeviceProvidersByIdentifier
_providersByIdentifier
conversationUUIDsAwaitingActiveAudioSession
startAudioForConversationsIfNecessary
cleanUpConversationIfNecessaryForConversationUUID:failureReason:failureContext:
usesAudioSession
isAudioSessionActive
callUUIDsByConversationUUID
conversationUUIDsByCallUUID
conversationUUIDsWaitingToJoin
pendingTransactions
handleInvitationMessage:forConversation:fromHandle:
handleUpgradeMessage:forConversation:fromHandle:withUpdate:
handleRespondedElsewhereMessage:forConversation:fromHandle:
isAutomaticUpgradingEnabled
participantUpdateSubtype
handles
declineCallWithGroupUUID:onOtherDevicesWithReason:
reportNewIncomingCallForConversation:fromHandle:
allAliases
handleRespondedElsewhereMessage:forConversation:fromHandle:withAliases:
activeRemoteParticipantCXHandles
setActiveRemoteParticipantHandles:
fullfillPendingJoinActionsForCallUUIDIfNecessary:
handleMessage:forConversation:fromHandle:withUpdate:
enqueueConversationWaitingForAudioWithConversationUUID:
setAudioSessionActive:
_audioSessionActive
_conversationUUIDsAwaitingActiveAudioSession
_callUUIDsByConversationUUID
_conversationUUIDsByCallUUID
_conversationUUIDsWaitingToJoin
handleWithType:value:
initWithPriority:
setDetectingRaiseToAnswer:
incomingCall
answerCall:
isGestureServiceAvailable
isRaiseToEarGestureSupported
raiseToEarGestureManager
gestureHandler
raiseToEarGestureHandler
setGestureHandler:
isRaiseToEarGestureEnabled
updateDetectingRaiseToAnswer
isDetectingRaiseToAnswer
setRaiseToEarGestureManager:
_raiseToEarGestureManager
_raiseToEarGestureHandler
handlesWithTUHandles:
_conferenceTransport:didStopForCall:cleanly:error:
isEqualToTransport:
_launchInCallApplicationForOutgoingCallOnHostIfNecessary
dialWithRequest:completion:
anyCallIsEndpointOnCurrentDevice
setHost:
setPauseVideoToStart:
_answerHostedCall:completionHandler:
groupCall:withOtherCall:
ungroupCall:
endActiveAndAnswerCall:
endHeldAndAnswerCall:
holdActiveAndAnswerCall:
_userActivityTypeStringForActivityType:
_initWithTypeIdentifier:suggestedActionType:options:
_setContentType:
setExpirationDate:
setEligibleForSearch:
setEligibleForPublicIndexing:
setEligibleForHandoff:
_setSubtitle:
_setContentUserAction:
setKeywords:
setUserActivity:
setUserInfo:
_initWithUserActivityType:dynamicActivityType:options:
setDynamicIdentifier:
_registerUserActivityType:dynamicActivityType:
_unregisterUserActivityType:dynamicActivityType:
_userActivity
_dynamicIdentifier
handleApplicationUnregisteredNotification:
relayCallingAvailability
defaultProviders
_providersForPreferenceKey:
_saveProviders:forPreferenceKey:
defaultWorkspace
openUserActivity:withApplicationProxy:options:completionHandler:
attributesOfItemAtPath:error:
ringtonesSandboxExtensionDirectory
appState
isInstalled
setProviderIdentifiersForExistingCalls:
_ringtonesSandboxExtensionDirectory
_providerIdentifiersForExistingCalls
requestTimeoutBlockByTransactionID
requestStartDateByTransactionID
reportDataCollectionCompleteIfNecessary
photoRequestDurations
setHasCleanedUp:
hasCleanedUp
fuzzyPhotoRequestSuccessCount
fuzzyPhotoRequestFailureCount
initWithAvailability:photoRequestSuccessCount:photoRequestFailureCount:medianRequestDuration:meanRequestDuration:
momentsReportingSession:didGenerateUsageReport:
bucketedInteger:
medianFromNumbers:
meanFromDoubleNumbers:
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
objectAtIndexedSubscript:
initWithStreamToken:
registeredStreamWithAvailability:
didStartRequestWithTransactionID:
didReceiveResultsWithTransactionID:
didCleanUp
_hasCleanedUp
_requestTimeoutBlockByTransactionID
_requestStartDateByTransactionID
_photoRequestDurations
shouldTraceSingposts
defaultConfiguration
initWithTransportToken:configuration:delegate:queue:
setMaxRemoteParticipants:
negotiationData
isAudioMuted
setAudioMuted:
setSessionMode:
updateConfiguration:
remoteParticipantsByIdentifier
initWithParticipantID:data:delegate:queue:
addParticipant:
setVideoQuality:
setVisibilityIndex:
setProminenceIndex:
beginParticipantConfiguration
endParticipantConfiguration
participantID
videoToken
sessionServerDidDisconnect:
session:addParticipant:didSucceed:error:
session:removeParticipant:didSucceed:error:
session:didUpdate:configuration:error:
session:audioEnabled:didSucceed:error:
session:videoEnabled:didSucceed:error:
session:audioPaused:didSucceed:error:
session:videoPaused:didSucceed:error:
session:frequencyLevelsDidChange:
participant:audioEnabled:didSucceed:error:
participant:videoEnabled:didSucceed:error:
participant:remoteAudioEnabledDidChange:
participant:remoteVideoEnabledDidChange:
participant:audioPaused:didSucceed:error:
participant:videoPaused:didSucceed:error:
participant:remoteAudioPausedDidChange:
participant:remoteVideoPausedDidChange:
participant:mediaPrioritiesDidChange:
participant:prominenceDidChange:
participant:spatialAudioSourceIDDidChange:
setAudioEnabled:forParticipantWithIdentifier:
setVideoEnabled:forParticipantWithIdentifier:
_audioReady
_remoteParticipantsByIdentifier
initWithSessionProvider:isInitiator:remoteFromID:remoteProtocolVersion:
receivedInvitationAccept
setReceivedInvitationAccept:
setRemoteFromID:
_receivedInvitationAccept
_remoteFromID
title
stringByReplacingOccurrencesOfString:withString:
hasCellularSettingsRemediation
hasWiFiSettingsRemediation
hasDateAndTimeSettingsRemediation
hasLocationSettingsRemediation
didPrepareHandler
didStartHandler
setReceivedSuccessfulDidStart:
didStopHandler
receivedSuccessfulDidStart
_host
_usingBaseband
_audioDisabled
_receivedSuccessfulDidStart
_preparedToStop
_transport
_didPrepareHandler
_didStartHandler
_didStopHandler
initWithQueue:shouldRegisterForECBMNotification:
initWithQueue:coreTelephonyClient:emergencyCallbackCapabilities:
setEmergencyCallbackCapabilitiesDidChange:
emergencyCallbackCapabilities
localThumperDeviceID
secondaryThumperAccounts
emergencyCallbackPossible
_subscriptionWithUUID:
coreTelephonyClient
setSubscription:capability:enabled:info:
subscriptions
lastSavedAccountIDByCapability
setCapability:enabled:info:
addSecondaryThumperDeviceWithIDSDeviceIdentifier:toSubscription:
removeSecondaryThumperDeviceWithIDSDeviceIdentifier:fromSubscription:
invalidateProvisioningURL
recheckAccountStatusForSubscription:capability:
labelID
csCallingCapabilitiesState
setCurrentlyAvailable:
setEmergencySupported:
setEmergencyCurrentlyAvailable:
initWithCapabilityInfo:
setVoLTECallingCapabilitiesState:
setWiFiCallingCapabilitiesState:
telephonySubscriptions
preferredVoiceSubscriptionUUID
setSupportsDefaultPairedDevice:
setThumperCallingCapabilitiesState:
_updateCallCapabilitiesForSubscription:capabilitiesState:
_updateThumperAccountState
_updateSubscriptions
initWithSenderIdentityUUID:
_updateCapabilityInfoForSubscription:capabilitiesState:
_updateSystemCapabilitiesStateForSubscription:capabilitiesState:
setApprovedSecondaryDeviceIDs:
setLocalDeviceID:
setByAddingObjectsFromSet:
setSubscriptions:
_updateEmergencyCallbackModeEnabledState
callCapabilitiesForSubscription:
setCallCapabilities:forSenderIdentityCapabilitiesState:
capabilityInfoForSubscription:capability:
setCapabilityInfo:forSubscription:senderIdentityCapabilitiesState:
systemCapabilitiesForSubscription:
thumperDeviceInfo
setCapabilitiesValid:
uppercaseString
setLocalThumperDeviceID:
setLocalThumperAccounts:
setSecondaryThumperAccounts:
setThumperAccounts:
isEqualToArray:
subscriptionsDidChangeForClient:
client:subscription:callCapabilitiesDidChange:
client:capabilitiesDidChange:
client:subscription:capabilitiesDidChange:
emergencyCallbackModeDidChangeForAllSubscriptionsForClient:
invalidateAndRefreshVoLTECallingCapabilitiesForSenderIdentityWithUUID:
_capabilitiesValid
_emergencyCallbackModeEnabled
_senderIdentityCapabilitiesStateByUUID
_localThumperDeviceID
_thumperAccounts
_subscriptions
_lastSavedAccountIDByCapability
_coreTelephonyClient
_emergencyCallbackCapabilities
_localThumperAccounts
_secondaryThumperAccounts
setUniqueIdentifier:
hasUniqueIdentifier
setDeviceType:
setHasDeviceType:
hasDeviceType
deviceTypeAsString:
StringAsDeviceType:
setProtoCurrentlyPicked:
setHasProtoCurrentlyPicked:
hasProtoCurrentlyPicked
setProtoGuest:
setHasProtoGuest:
hasProtoGuest
setProtoSupportsRelay:
setHasProtoSupportsRelay:
hasProtoSupportsRelay
protoCurrentlyPicked
protoGuest
protoSupportsRelay
_deviceType
_uniqueIdentifier
_protoCurrentlyPicked
_protoGuest
_protoSupportsRelay
dtmfSoundPlayer
attemptToPlayKey:
_setAllCallsToHeldExceptCall:
_dtmfSoundPlayer
activeParticipantsCount
clearActiveParticipants
activeParticipantsAtIndex:
addedMembersCount
clearAddedMembers
addedMembersAtIndex:
activeParticipantsType
addedMembersType
setHasShouldSuppressInCallUI:
hasShouldSuppressInCallUI
setHasDisconnectedReason:
hasDisconnectedReason
setActiveParticipants:
setAddedMembers:
_activeParticipants
_addedMembers
_conversationGroupUUIDString
_disconnectedReason
setTURouteDeviceType:
isCurrentlyPicked
setCurrentlyPicked:
setGuest:
setSupportsRelay:
initWithUniqueIdentifier:name:
tuRouteDeviceType
addCalls:
callsCount
clearCalls
callsAtIndex:
callsType
_calls
imDaemonDidConnect:
connectToDaemon
initWithService:account:accessGroup:
_initializeLastKnownCallerID
faceTimeIMAccount
hasAlias:
addAlias:
validationStatusForAlias:
validationErrorReasonForAlias:
setDisplayName:
displayNameChanged:
preferredAccountChanged:
keychainItem
readPasswordAndReturnError:
_saveLastKnownFaceTimeCallerID
removeCallerIDFromPreferences
savePassword:error:
updateCallerID:
_keychainItem
mockCallFromBlock:
updateWithCall:
setMockBackingProvider:
setMockDisplayProvider:
setMockHandle:
setMockCallStatus:
setMockUniqueProxyIdentifier:
setMockCallUUID:
setMockHostedOnCurrentDevice:
setMockCallerNameFromNetwork:
setMockUsingBaseband:
setMockVoicemail:
setMockContactIdentifier:
setMockNeedsManualInCallSounds:
setMockPrefersExclusiveAccessToCellularNetwork:
setMockTTYType:
setMockSupportsTTYWithVoice:
setMockIsThirdPartyVideo:
setMockDateConnected:
hostOnCurrentDevice
setMockEndpointOnCurrentDevice:
mockCall
setMockService:
setMockIsVideo:
setMockBlocked:
setMockCallDuration:
setMockEmergency:
setMockOutgoing:
setMockConferenced:
setMockDisconnectedReason:
setMockLocalizedLabel:
setMockCompanyName:
setMockBytesOfDataUsed:
subtype
setMockSubtype:
setMockAudioCategory:
setMockAudioMode:
setMockCallGroupUUID:
setMockProviderContext:
setMockProviderErrorCode:
setMockDisplayContext:
setMockHasStartedOutgoing:
setMockHasSentInvitation:
setMockConnecting:
setMockConnected:
setMockUplinkWasExplicitlyMuted:
setMockMayRequireBreakBeforeMake:
setMockAudioInterruptionProviderType:
setMockDisplayName:
setMockDateCreated:
setMockProviderProcessIdentifier:
audioInterruptionActivationStateObserver
setMockAudioInterruptionActivationStateObserver:
setMockBackingCallSource:
setMockInitialLinkType:
setMockCallRelaySupport:
setMockShouldSuppressInCallUI:
_mockIsVideo
_mockHostedOnCurrentDevice
_mockEndpointOnCurrentDevice
_mockBlocked
_mockVoicemail
_mockEmergency
_mockSOS
_mockOutgoing
_mockConferenced
_mockUsingBaseband
_mockSupportsTTYWithVoice
_mockNeedsManualInCallSounds
_mockHasStartedOutgoing
_mockHasSentInvitation
_mockConnecting
_mockConnected
_mockUplinkMuted
_mockUplinkWasExplicitlyMuted
_mockMayRequireBreakBeforeMake
_mockPrefersExclusiveAccessToCellularNetwork
_mockIsThirdPartyVideo
_mockShouldSuppressInCallUI
_mockService
_mockCallStatus
_mockTTYType
_mockDisconnectedReason
_mockSubtype
_mockProviderProcessIdentifier
_mockCallRelaySupport
_mockUniqueProxyIdentifier
_mockCallDuration
_mockHandle
_mockLocalizedLabel
_mockCompanyName
_mockCallUUID
_mockCallerNameFromNetwork
_mockBytesOfDataUsed
_mockAudioCategory
_mockAudioMode
_mockCallGroupUUID
_mockBackingProvider
_mockDisplayProvider
_mockProviderContext
_mockProviderErrorCode
_mockDisplayContext
_mockAudioInterruptionProviderType
_mockDisplayName
_mockContactIdentifier
_mockDateCreated
_mockDateConnected
_mockAudioInterruptionActivationStateObserver
_mockBackingCallSource
_mockInitialLinkType
initWithObjectsAndKeys:
ctEmergencyCallbackModeStatusChangedWithUserInfo:
getActiveContexts:
_isNSErrorFatal:
activeContexts
voicePreferred
_isCTErrorFatal:
getPhoneServicesDeviceInfo:
getCallCapabilities:error:
context:getCapability:status:with:
context:getSystemCapabilities:
setLegacyCapability:enabled:capabilityInformation:
context:setCapability:enabled:with:
context:addPhoneServicesDevice:withCompletion:
context:removePhoneServicesDevice:withCompletion:
context:recheckPhoneServicesAccountStatus:
mobileCountryCodeForSubscription:error:
mobileNetworkCodeForSubscription:error:
ISOCountryCodeForMobileCountryCode:mobileNetworkCode:
mobileCodesToISOCountryCode
copyMobileCountryCode:error:
copyMobileNetworkCode:error:
domain
setActiveContexts:
subscriptionInfoDidChange
activeSubscriptionsDidChange
simLessSubscriptionsDidChange
dualSimCapabilityDidChange
context:capabilitiesChanged:
phoneServicesCapabilitiesChanged:
ISOCountryCodeForSubscriptionUUID:
legacySystemCapabilities
legacyAddSecondaryThumperDeviceWithIDSDeviceIdentifier:
legacyRemoveSecondaryThumperDeviceWithIDSDeviceIdentifier:
legacyRecheckAccountStatusForCapability:
callCapabilitiesChanged:capabilities:
_activeContexts
_mobileCodesToISOCountryCode
setHasAmbiguityState:
hasAmbiguityState
setHasSwappable:
hasSwappable
setHasMergeable:
hasMergeable
setHasHoldAllowed:
hasHoldAllowed
setHasAddCallAllowed:
hasAddCallAllowed
setHasTakingCallsPrivateAllowed:
hasTakingCallsPrivateAllowed
setHasHardPauseAvailable:
hasHardPauseAvailable
setHasEndAndAnswerAllowed:
hasEndAndAnswerAllowed
setHasHoldAndAnswerAllowed:
hasHoldAndAnswerAllowed
setHasSendToVoicemailAllowed:
hasSendToVoicemailAllowed
swappable
hardPauseAvailable
endAndAnswerAllowed
holdAndAnswerAllowed
_ambiguityState
_addCallAllowed
_endAndAnswerAllowed
_hardPauseAvailable
_holdAllowed
_holdAndAnswerAllowed
_mergeable
_sendToVoicemailAllowed
_swappable
_takingCallsPrivateAllowed
setAccountUUID:
localizedShortName
setLocalizedShortName:
protoUUID
setProtoUUID:
accountUUIDString
setAccountUUIDString:
hasProtoUUID
hasLocalizedShortName
hasAccountUUIDString
_accountUUIDString
_localizedShortName
_protoUUID
initWithQueue:block:
stringRepresentationForTUCallDisconnectedReason:
stringForSignatureType:
stringForIDSSessionEndedReason:
stringForIMAVChatEndedReason:
reporters
currentAudioAndVideoCallCount
reportingSessionByStreamToken
activeConversations
conversationUUIDs
conversationsChangedForConversationManager:
conversationManager:stateChangedForConversation:
conversationManager:localVideoToggledForConversation:
conversationManager:remoteMembersChangedForConversation:
conversationManager:activeRemoteParticipantsChangedForConversation:
conversationManager:removedActiveConversation:
serverDisconnectedForConversationManager:
momentsController:registeredStream:withAvailability:
momentsController:didCleanUpForStream:
momentsController:didStartRequestForStream:withTransactionID:
momentsController:didReceiveResultsForStream:withTransactionID:
reportTransactionGroupCompleted:
reportProviderFailedWithAction:forCall:
setReporters:
_reporters
_reportingSessionByStreamToken
_conversationUUIDs
tu_UUIDv5ForString:namespaceUUID:
initWithCHManager:
initWithCHManager:queue:
handleCallHistoryDatabaseChangedNotification:
performSynchronousBlock:
chManager
setOutgoingLocalParticipantUUID:forRecentCallsMatchingPredicate:
_chManager
setIdsService:
_update
idsService
aliasStrings
accountMatchingSimIdentifier:
accountForTelephonySubscriptionLabelIdentifier:
accountInfo
accountType
telephoneNumber
regionBasePhoneNumber
idsDeviceID
update
setTelephonyCapableDeviceExists:
setRelayCapableDeviceExists:
setDevices:
setPairedDevice:
setAvailableOutgoingRelayCallerIDs:
_telephonyCapableDeviceExists
_relayCapableDeviceExists
_callerIDByUpdatingState
_idsService
_devices
_pairedDevice
_defaultPairedDevice
_availableOutgoingRelayCallerIDs
pairedDeviceUniqueIDOverride
isWatchDevice
isAudioAccessoryDevice
canReceiveMessagesForCallProvider:
activeSessionForIdentifier:
currentSession
_createSessionToDevices:
_createSessionToDestinations:
initWithAccount:destinations:transportType:
sessions
_createSessionToAllDevicesSupportingProvider:
destinationWithActiveSession
_startSession:withMessage:identifiers:timeout:declineOnError:
_sendMessage:andCancelInvitationIfNecessaryForSession:
_sendMessage:andDeclineInvitationIfNecessaryForSession:
sendMessage:forIdentifier:toDestinations:customizedForRemoteProtocolVersion:waitUntilConnected:completionHandler:
sendMessage:customizedForRemoteProtocolVersion:completionHandler:
sessionForIdentifier:
_destroySession:
waitingSession
acceptInvitationForIdentifier:
setSessions:
_sessions
initWithQueue:fileTransferController:mediaAssetManager:
initWithStreamToken:requesterID:delegate:dispatchQueue:
momentsControllerClientXPCInterface
momentsControllerServerXPCInterface
handleClientDisconnected:
streamTokensByCSDClient
unregisterStreamToken:
isMomentsDisabled
sessionsByToken
moments
newRequestWithMediaType:requesteeID:
transactionID
initWithAVCRequest:session:
setActiveRequest:forTransactionID:
_startTimeoutForMomentsRequestWithTransactionID:
startWithError:
sessionForTransactionID:
activeRequestsByTransactionID
avcRequest
endWithError:
availabilityWithRemoteAvailable:
momentsGenerator
initWithMoments:remoteIDSDestinations:
setRemoteIDSDestinations:
initWithAvailability:supportedMediaTypes:
cleanUpForMomentIfNecessary:
didUpdateCapabilities:forVideoStreamToken:
requesterID
willCaptureRemoteRequestFromRequesterID:
initWithStreamToken:requesterID:
remoteRequesterIDSDestinationFor:
_transferFileAtURL:forSession:request:
remoteIDSDestinations
remoteRequesteeIDSDestinationFor:
fileTransferController
_handleReceivedResourcesAtDirectoryURL:
removeActiveRequestForTransactionID:
shouldPreserveMomentsFile
pathExtension
setIsRegistered:
activeRequestCount
pendingRequestCount
contentsOfDirectoryAtURL:
urlFromResources:withExtension:
initWithPhotosAppAssetIdentifier:
handleRequestResultWithMomentDescriptor:
_saveLivePhotoWithPhotoURL:videoURL:completion:
mediaAssetManager
momentsRequestTimeout
didReceiveLocallyRequestedMomentDescriptor:
isRegionBlocked
isFaceTimePhotosAvailable
setLocalCapabilities:
moments:capabilitiesDidChange:
moments:didFinishRequest:error:
moments:didStartProcessingRequest:error:
moments:didEndProcessingRequest:url:error:
momentsServerDidDisconnect:
registerXPCClientWithReply:
registerStreamToken:requesterID:remoteIDSDestinations:remoteMomentsAvailable:reply:
unregisterStreamToken:reply:
startRequestWithMediaType:forStreamToken:requesteeID:reply:
endRequestWithTransactionID:reply:
momentsClient
setMomentsGenerator:
_fileTransferController
_mediaAssetManager
_sessionsByToken
_streamTokensByCSDClient
_momentsClient
_momentsGenerator
initWithClientUUID:transportType:
isInputFrequencyMeteringEnabled
setInputFrequencyMeteringEnabled:
isOutputFrequencyMeteringEnabled
setOutputFrequencyMeteringEnabled:
getIsSendingAudio:callID:error:
setSendingAudio:callID:error:
getIsAudioPaused:callID:error:
setPauseAudio:callID:error:
getIsVideoPaused:callID:error:
setPauseVideo:callID:error:
setConferenceVisualRectangle:forCallID:
setConferenceState:forCallID:
videoDeviceController
setPeerReportingIdentifier:sessionIdentifier:forCallID:
setCallID:
startConnectionWithCallID:inviteData:isCaller:capabilities:destination:error:
startConnectionWithCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:error:
stopCallID:
cancelCallID:
updateCapabilities:forCallID:
sendData:forCallID:encrypted:
conference:withCallID:remoteMediaStalled:
conference:didStartSession:withUserInfo:
conference:didStopWithCallID:error:
conference:updateInputFrequencyLevel:
conference:updateOutputFrequencyLevel:
conference:receivedFirstRemoteFrameForCallID:
conference:remoteScreenAttributesChanged:callID:
conference:remoteVideoAttributesChanged:callID:
conference:remoteAudioPaused:callID:
conference:remoteVideoPaused:callID:
serverDiedForConference:
conference:inititiateRelayRequest:requestDict:
conference:sendRelayUpdate:updateDict:
conference:cancelRelayRequest:requestDict:
conference:videoQualityNotificationForCallID:isDegraded:isRemote:
conference:withCallID:networkHint:
conference:localIPChange:withCallID:
conference:didStartSession:withCallID:error:
conference:didStopWithCallID:error:callMetadata:
conference:withCallID:isSendingAudio:error:
conference:withCallID:didPauseAudio:error:
conference:withCallID:didPauseVideo:error:
conference:didReceiveARPLData:withCallID:
conference:didChangeLocalVariablesForCallID:
conference:remoteAudioEnabled:forCallID:
conference:localAudioEnabled:forCallID:error:
conference:remoteCallingModeChanged:forCallID:
conference:reinitializeCallForCallID:
conference:closeConnectionForCallID:
conference:updateInputMeterLevel:
conference:updateOutputMeterLevel:
conference:isRemoteAudioBelowThreshold:
_callID
_videoDeviceController
call
setCall:
completionHandler
_call
_completionHandler
initWithCallProviderManager:delegate:queue:
initWithFilters:
shouldFilterIncomingCall:
shouldDisconnectCall:
initWithDelegate:queue:
initWithCalls:delegate:queue:
addCallSource:
shouldTrackCall:
callControllerHost
addOrUpdateCall:
removeCall:
startTrackingCall:
processAssertionManager
managedDeviceMonitor
startMonitoring:
stopTrackingCall:
callSourceManager
failOutstandingActionsForCallWithUUID:
stopMonitoring:
callGroupUUIDToCalls
setDeferCommittingTransactions:
_commitUncommittedTransactions
commitUncommittedTransactions
allActions
dateStarted
callUUIDToGroupWith
_callWithUUID:
_providerForCallSource:
_callWithUUID:controllableByCallSource:
_callGroupsWithBackingCallSource:
cx_requestTransactionErrorWithCode:
_shouldAllowRequestedTransaction:forCallSource:error:
_performRequestedTransaction:onCallSource:
addAction:toUncommittedTransactionForCallSource:
_addSupplementalActionsForRequestedTransaction:onCallSource:
answerCall:withRequest:whileDisconnectingCalls:andHoldingCalls:
_deferCommittingTransactionsUntilAfterRunningBlock:
setCode:
setSenderIdentityUUID:
setHandoffContext:
pendingPulledCallContexts
telephonyCallSource
faceTimeCallSource
tinCanCallSource
deferCommittingTransactions
currentCallGroups
faceTimeProviderDelegate
_ISOCountryCodeForProvider:callUpdate:
setISOCountryCode:
priority
dndAllowsCall
cx_incomingCallErrorWithCode:
shouldPreferRelayOverDirectSecondaryCalling
requiresAuthentication
pendingCallsToChatUUIDs
shouldFilterCall
setFilteredOutReason:
_callWithUUID:backingCallSource:
callSource:reportedCallWithUUID:endedAtDate:privateReason:failureContext:
expediteDeferredEndInterruptionForCallWithUUID:
handleFrequencyDataChanged:inDirection:forCalls:
handleMeterLevelChanged:inDirection:forCalls:
handleBytesOfDataUsedChanged:forCallWithUniqueProxyIdentifier:callHistoryIdentifier:
_allowRevertingStateForCompletedTransactionGroup:
_processCompletedCallAction:forCall:allowRevertingState:
callSourceFetcher
_processRequestedTransaction:fromCallSource:completion:
shouldDisconnectCallForDowntime
screenTimeCallFilter
callClass
callControllerHost:clientWithIdentifier:requestedTransaction:completion:
managedDeviceStateChangedFor:
callSource:registeredWithConfiguration:
callSource:reportedNewIncomingCallWithUUID:update:completion:
callSource:reportedCallWithUUID:updated:
callSource:reportedOutgoingCallWithUUID:sentInvitationAtDate:
callSource:reportedOutgoingCallWithUUID:startedConnectingAtDate:
callSource:reportedOutgoingCallWithUUID:connectedAtDate:
callSource:reportedAudioFinishedForCallWithUUID:
callSource:reportedCallWithUUID:changedFrequencyData:forDirection:
callSource:reportedCallWithUUID:changedMeterLevel:forDirection:
callSource:reportedCallWithUUID:crossDeviceIdentifier:changedBytesOfDataUsed:
callSource:requestedTransaction:completion:
callSourceManager:completedTransactionGroup:
callSourcesChangedForCallSourceManager:
performCallActions:forCall:
setCallFilterManager:
tinCanProviderDelegate
setScreenTimeCallFilter:
setRouteManager:
setDndAllowsCall:
setShouldPreferRelayOverDirectSecondaryCalling:
setShouldFilterCall:
setShouldDisconnectCallForDowntime:
_deferCommittingTransactions
_callFilterManager
_processAssertionManager
_callSourceManager
_callControllerHost
_faceTimeCallSource
_faceTimeProviderDelegate
_tinCanCallSource
_tinCanProviderDelegate
_callSourceFetcher
_screenTimeCallFilter
_managedDeviceMonitor
_pendingCallsToChatUUIDs
_pendingPulledCallContexts
_routeManager
_dndAllowsCall
_shouldPreferRelayOverDirectSecondaryCalling
_shouldFilterCall
_shouldDisconnectCallForDowntime
queueContext
initWithExportedObject:
setSynchronous:
clientsByObject
currentConnection
requiredConnectionCapability
setMachServiceName:
initWithMachServiceName:
setXpcListener:
resume
setAsynchronousExportedObjectProxy:
setSynchronousExportedObjectProxy:
addClient:
removeClient:
clientsPassingTest:
_performBlock:onClients:coalescedByIdentifier:
filterClientsUsingPredicate:andPerformBlock:
performBlockOnQueue:andWait:
remoteObjectInterface
exportedInterface
exportedObject
interruptionHandler
_connectionEndedHandlerForXPCClient:withCustomBlock:
invalidationHandler
_setQueue:
setTarget:
invoke
_updatedQOSBlockForBlock:
retainArguments
machServiceName
_xpcClientForConnection:
isClientAllowed:
listener:shouldAcceptNewConnection:
clientsEntitledForCapability:
filterClientsEntitledForCapability:andPerformBlock:
performBlockOnQueue:
_performBlock:onClients:
handleInvocation:synchronously:
_remoteObjectInterface
_exportedInterface
_interruptionHandler
_invalidationHandler
_asynchronousExportedObjectProxy
_synchronousExportedObjectProxy
_exportedObject
_requiredConnectionCapability
_clientsByObject
_machServiceName
methodSignatureForSelector:
isSynchronous
forwardInvocation:
_synchronous
strongToWeakObjectsMapTable
currentCallSet
uniqueProxyIdentifierToCallTableSemaphore
uniqueProxyIdentifierToCallTable
_postClientNotificationName:forCall:userInfo:
shouldRegisterCall:
postClientNotificationName:
postClientNotificationName:forCall:
postClientNotificationName:forCall:userInfo:
setUniqueProxyIdentifierToCallTable:
setUniqueProxyIdentifierToCallTableSemaphore:
setCurrentCallSet:
_uniqueProxyIdentifierToCallTable
_uniqueProxyIdentifierToCallTableSemaphore
_currentCallSet
getValue:
handleLocalFrequencyChanged:
handleRemoteFrequencyChanged:
handleLocalMeterLevelChanged:
handleRemoteMeterLevelChanged:
handleMutedChanged:
handleSendingAudioChanged:
floatValue
isEqualToDescriptor:
_inCallUIWantsStatusBarSuppression
_statusBarStyleOverrides
_statusString
_socket
_destination
setManager:
beginMatchingExtensions
beginDailyMaintenanceWithActivity:
manager
compactStoreWithCompletionHandler:
countOfNotificationsReceived
setCountOfNotificationsReceived:
synchronizeExtensionsWithCompletionHandler:
callDirectoryNSExtensionManager:extensionsChanged:
nsExtensionManager
_manager
_nsExtensionManager
_countOfNotificationsReceived
currentRunLoop
containsRestrictedHandle:
containsRecentsRestrictedHandle:
isUnknownCall:
initWithCapabilities:callSource:queue:
setIncludesCallsInRecents:
tinCanProvider
initWithSuiteName:
emergencyCallbackCapabilitiesDidChange
destinationWithDevice:
allowContactsOnly
triggers
callChanged
handleTrigger:
momentsStartedRemoteCapture:
handlePendingMessageDidReceiveInviteNotification:
executeFetchRequest:
contactStore
actionWithIdentifier:title:options:
categoryWithIdentifier:actions:intentIdentifiers:options:
setCategoryIdentifier:
setBody:
requestWithIdentifier:content:trigger:
setDestinations:
setSound:
setSubtitle:
setDefaultActionURL:
soundWithAlertType:
setAlertTopic:
setThreadIdentifier:
setShouldSuppressDefaultAction:
incomingVideoCall
displayedCalls
activeVideoCall
hasCurrentVideoCalls
hasCurrentAudioCalls
content
setShouldIgnoreDowntime:
trigger
destinations
requestWithIdentifier:content:trigger:destinations:
notification
request
actionIdentifier
stopAudioSession
resetAudioSessionOutputPortOverride
setAudioSessionProperties:
startAudioSessionWithCompletionHandler:
setActivationContext:error:
overrideOutputAudioPort:error:
interruptionPriority
deactivateAndSetInterruptionPriority:error:
setInterruptionPriority:error:
setActive:withOptions:error:
opaqueSessionID
setCategory:mode:options:error:
applicationStateChanged
currentApplicationStateForProcessIdentifier:completion:
applicationInfoForApplication:
updateInterestedBundleIDs:states:
applicationInfoForPID:completion:
handlePendingMessageDidReceiveCancelNotification:
activateWithCompletion:
frontmostAudioOrVideoCall
idsDeviceIdentifier
publicIdentifier
destinationWithRapportPublicIdentifier:
add:
initWithIdentifier:context:
donateSignalWithCompletion:
__swift_objectForKeyedSubscript:
initWithCalls:
mainQueue
addObserverForName:object:queue:usingBlock:
stopPlaying
alertDidBeginPlaying:
setShouldRepeat:
setShouldIgnoreRingerSwitch:
setExternalToneFileURL:
setVibrationIdentifier:
setToneIdentifier:
sound
vibration
ignoreMute
unifiedContactWithIdentifier:keysToFetch:error:
callAlert
alertWithConfiguration:
playWithCompletionHandler:
setPlaybackObserver:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
sendMessageWithDictionary:error:
initWithChar:
initWithInteger:
initWithBool:
initWithSessionInfo:userInfo:frameworksToCheck:
startConfigurationWithCompletionHandler:
JSONObjectWithData:options:error:
filteredOutReason
isFaceTimePhotosRestricted
isFaceTimePhotosEnabled
handleCallHistoryDatabaseChanged
predicateForCallsWithAnyMediaTypes:
setPerformDialAssist:
setPerformLocalDialAssist:
mediaType
setDialAssisted:
setShouldAuthenticateDefaultAction:
setShouldBackgroundDefaultAction:
disconnectedCause
normalizedValue
predicateForCallsBetweenStartDate:endDate:
callerNetworkName
callerNameForDisplay
callerIdIsBlocked
uniqueId
callCountWithPredicate:
speechSynthesizer:didStartSpeechUtterance:
speechSynthesizer:didFinishSpeechUtterance:
speechSynthesizer:didCancelSpeechUtterance:
isPlaying
isSpeaking
stopSpeakingAtBoundary:
play
URLForResource:withExtension:
setMixToUplink:
setNumberOfLoops:
setVolume:
initWithContentsOfURL:error:
audioQueueFlags
setAudioQueueFlags:
initWithString:
setRate:
speakUtterance:
speechSynthesizer:didPauseSpeechUtterance:
speechSynthesizer:didContinueSpeechUtterance:
speechSynthesizer:willSpeakRangeOfSpeechString:utterance:
setActiveRequestsByTransactionID:
requesteeID
__swift_setObject:forKeyedSubscript:
initWithKeysToFetch:
predicateForContactsMatchingHandleStrings:
setPredicate:
executeFetchRequest:error:
storeWithOptions:
routesDidChangeHandler
routeWasPickedHandler
timedOutPickingRouteHandler
dataActiveAndReachable
wifiAllowedForBundleId:
initWithArray:
audioRouteInformationChangedWithNotification:
frontmostCall
currentVideoCall
pickRoute:error:
getPickableRoutesForCategory:mode:completion:
bestGuessPickableRoutesForAnyCall
pickableRoutesForTTY
localDevice
flags
setLocalDeviceUpdatedHandler:
setDeviceFoundHandler:
setDeviceLostHandler:
setDeviceChangedHandler:
setFlags:
effectiveIdentifier
mediaSystemIdentifier
mediaSystemName
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
handleCNDowntimeWhitelistDidChangeWithNotification:
setBadgeString:withCompletionHandler:
removeDeliveredNotificationsWithIdentifiers:
addNotificationRequest:withCompletionHandler:
setNotificationCategories:
setWantsNotificationResponsesDelivered
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
voicemailInfoAvailableNotification:voicemailInfo:
voicemailsChangedWithNotification:
onlineStatusChangedWithNotification:
subscriptionStateChangedWithNotification:
getSubscriptionInfoWithError:
getVoicemailInfo:completion:
attachmentWithIdentifier:URL:options:error:
setAttachments:
isVoiceMailMWI
contacts
trashVoicemail:
messageCountForMailboxType:read:error:
messagesForMailboxType:limit:offset:error:
messagesForMailboxType:read:limit:offset:error:
isTranscriptionEnabled
isSubscribed
isOnline
isMessageWaiting
transcriptionState
dataURL
duration
senderDestinationID
voicemailDatabaseReset:
predicateForCallsWithStatusOriginated:
predicateForCallsWithRemoteParticipantHandleValue:
orPredicateWithSubpredicates:
predicateForCallsWithRemoteParticipantHandleNormalizedValue:
normalizedGenericHandleForValue:
normalizedEmailAddressHandleForValue:
initWithSoundType:provider:video:region:
attemptToPlayDescriptor:completion:
rejectWithError:
deleteItemAndReturnError:
handleCallRemoteParticipantsChanged:
allowableByContactsHandles:
allowedByScreenTime
shouldBeAllowedByScreenTimeWhenLimited
allowedByContactsHandle
CSDRelayController
CSDOrientationMonitor
BKSAccelerometerDelegate
NSObject
CSDCallCenterObserverDelegate
CSDTransactionManager
CSDCrashReporter
CSDVoIPProcessAssertion
CSDAVConference
CSDAVConferenceProviderDelegate
CSDAVConferenceConfiguration
CSDMessagingConversationParticipant
NSCopying
Additions
CSDUserActivityManager
TUCallProviderManagerDelegate
CSDUserActivityCommunicatorDelegate
CSDAggregateDictionaryReporter
CSDReporter
CSDProximityController
TURouteControllerDelegate
CSDOrientationObserver
FaceTime
AWDCSDCallStatus
CSDFaceTimeIMAVProviderDelegate
IMAVControllerDelegate
CSDDualFaceTimeProviderDelegate
CSDFaceTimeProviderDelegate
CXProviderDelegatePrivate
CXProviderDelegate
CSDFaceTimeIDSService
CSDConversation
CSDIDSGroupSessionDelegate
CSDAVCSessionDelegate
CSDRelayIDSService
CSDMessagingCallModel
CSDRelayClientController
CSDRelayMessagingControllerClientMessagingDelegate
CSDMessagingHandle
CSDProviderCall
CSDPauseDigitsQueueDelegate
CSDCallStateMonitor
CSDStatusBarManager
CSDStatusBarResolverDelegate
CSDAdditions
AWDCSDOtherFailureReport
CSDIDSGroupSessionProvider
IDSGroupSessionDelegate
IDSSessionDelegatePrivate
IDSSessionDelegate
CSDIDSSessionProvider
CSDRelayIDSDualSessionData
CSDRelayIDSDualSession
CSDThumperCapabilitiesMonitor
TUCallCapabilitiesDelegatePrivate
TUCallCapabilitiesDelegate
CSDConversationJoinContext
CSDAccountsController
IDSServiceDelegatePrivate
IDSServiceDelegate
CSDIDSDualSessionProvider
CSDPauseDigits
CSDCallProviderManagerXPCServer
TUCallProviderManagerXPCServer
CSDCallProviderManagerDelegate
CSDFaceTimeVideoIDSService
CSDIDSChat
CSDIDSDualSessionDelegate
CSDAVConferenceDelegate
TinCan
CSDCTCallCapabilities
CSDMessagingRelayMessage
CSDIncomingCallFilterDataSource
CSDMessagingCallProvider
CSDRelayMessagingController
CSDRelayIDSMessengerDelegate
CSDRelayIDSSessionMessengerDelegate
CSDDaemon
AWDCSDMomentsReport
CSDAbstractIDSProviderDelegate
CSDIDSChatDelegate
CSDMessagingAVConferenceInviteData
CSDIDSDualSession
CSDIDSDualSessionProviderDelegate
CSDAWDReporter
CSDRelayIDSMessenger
CSDThumperAccount
NSMutableCopying
CSDMutableThumperAccount
CSDFaceTimeIDSProviderDelegate
CSDRelayCommonController
CSDRelayMessagingControllerCommonMessagingDelegate
CSDFileTransferController
CSDFileTransferring
CSDCallSourceFetcher
CSDThumperPushHandlerAdditions
CSDThumperPushHandler
CSDPinExchangeDelegate
CSDMessagingCall
CSDRelayCall
CSDCallHistoryManagerXPCServer
CSDCallHistoryManagerDelegate
TUCallHistoryManagerXPCServer
CSDPauseDigitsQueue
CSDXPCClient
CSDTTYProviderObserver
CSDRelayPairedDeviceMessenger
CSDMessagingConversationParticipantDidJoinContext
CSDMediaAssetManager
CSDMediaAssetManaging
CSDPowerLogReporter
CSDFaceTimeProviderDelegateManagerDelegate
CSDVoIPApplicationMessageContext
CSDVoIPApplication
CSDMessagingPersonNameComponents
CSDStatusBarResolver
CSDRelayConferenceInterface
CSDSandboxExtensionDirectory
CSDPinExchangeController
AWDCSDCallAction
CSDCallCapabilities
TUCallCapabilitiesXPCServer
TUCallCapabilitiesXPCServerActions
CSDAccountsControllerDelegate
CSDTelephonyCallCapabilitiesDelegate
CSDThumperCapabilitiesMonitorDataSource
CSDCall
TUDynamicCallDisplayContextDelegate
CXAudioSessionActivationStateObserver
CSDRouteManager
TUAudioDeviceControllerDelegate
CSDMessagingConversationMember
CSDMessagingConversation
CSDConversationManager
CSDConversationDelegate
CSDCHRecentCall
AWDCSDRelayMessageReceived
AWDCSDRelayDeviceRoute
CSDMessagingCallMessage
CSDAudioRouteCollection
CSDFaceTimeAudioIDSService
AWDCSDCallEnd
CSDMessagingCallCapabilitiesState
CSDVoIPProcessAssertionManager
CSDIncomingCallFilter
CSDAppleIDUtilities
CSDRecentsController
CSDIDSSession
CSDMessagingCallDisplayContext
CSDUserActivityCommunicator
UABestAppSuggestionManagerDelegate
CSDThumperIDSService
CSDIDSGroupSession
CSDIDSGroupSessionProviderDelegate
CSDCallStateController
TUCallServicesXPCServer
TUCallCenterXPCServer
TUCallServicesProxyCallActions
TUCallServicesClientCapabilitiesXPCServer
TUAudioDeviceControllerXPCServer
TURouteControllerXPCServer
TUCallFilterControllerXPCServer
CSDRelayMessagingControllerDelegate
CSDCallDelegate
AWDCSDCallTransactionComplete
CSDDeviceLockStateObserver
PKVoIPXPCClient
PKVoIPXPCServer
CSDVoIPApplicationController
APSConnectionDelegate
CSDConversationParticipant
CSDCallDataSourceMap
CSDMessagingLabeledHandle
CSDClient
CSDConversationManagerXPCServer
TUConversationManagerXPCServer
TUConversationMediaControllerXPCServer
CSDConversationManagerDelegate
CSDCallProviderManager
CSDCallProviderManagerDataSourceDelegate
CSDFaceTimeConversationProviderDelegate
CSDRaiseToAnswerController
CSDRelayHostController
CSDRelayMessagingControllerHostMessagingDelegate
CSDUserActivity
CSDCallProviderManagerDataSource
CSDMomentsReportingSession
CSDSignposts
CSDAVCSession
AVCSessionDelegate
AVCSessionParticipantDelegate
CSDExternalIDSDualSession
CSDRelayConferenceConnection
CSDTelephonyCallCapabilities
CSDCoreTelephonyClientDelegate
CSDMessagingRoute
CSDRelayCallDelegate
CSDMessagingConversationMessage
AWDCSDCurrentCalls
CSDFaceTimeIMAccount
CSDMockCall
CSDCoreTelephonyClient
CoreTelephonyClientDelegate
CoreTelephonyClientCapabilitiesDelegate
CSDMessagingCallModelState
CSDMessagingSenderIdentity
CSDABCReporter
CSDReportingController
CSDMomentsReportingSessionDelegate
TUConversationManagerDelegate
CSDReporterDataSource
CSDMomentsControllerDelegate
CSDCallHistoryManager
CSDIDSService
Messaging
CSDRelayIDSSessionMessenger
CSDRelayIDSDualSessionDelegate
CSDMomentsController
CSDFileTransferringDelegate
CSDAVCMomentsDelegate
TUMomentsControllerXPCServer
CSDAVConferenceProvider
AVConferenceDelegate
CSDPulledCallContext
CSDProviderCallDataSource
CXCallControllerHostDelegate
CSDCallSourceFetcherDataSource
CSDManagedDeviceMonitorDelegate
CXCallSourceManagerDelegate
CXCallSourceUpdates
CSDProviderCallDelegate
CSDClientManager
NSXPCListenerDelegate
CSDClientManagerExportedObjectProxy
CSDCallDataSource
CSDRelayCallDataSource
CSDStatusBarDescriptor
CSDIDSTransport
CSDCallDirectoryManager
CXCallDirectoryNSExtensionManagerDelegate
@16@0:8
v16@0:8
v24@0:8@16
@"CSDCallStateController"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v48@0:8@16d24f32f36f40i44
v28@0:8@16i24
v48@0:8@"BKSAccelerometer"16d24f32f36f40i44
v28@0:8@"BKSAccelerometer"16i24
v32@0:8@16@24
v32@0:8@"<CSDCallCenterObserver>"16@"CSDCall"24
v24@0:8@"<CSDCallCenterObserver>"16
@24@0:8@16
v20@0:8B16
i16@0:8
v20@0:8i16
@"BKSAccelerometer"
@"<CSDCallCenterObserver>"
@"NSMutableSet"
@"NSObject<OS_dispatch_queue>"
v24@0:8@?16
@"NSString"
@"BKSProcessAssertion"
v36@0:8@16B24@28
v40@0:8@16@24@32
v28@0:8@16f24
v28@0:8@16B24
v40@0:8@16@24q32
v36@0:8@"<CSDAVConferenceProvider>"16B24@"NSError"28
v40@0:8@"<CSDAVConferenceProvider>"16@"NSError"24@"NSDictionary"32
v24@0:8@"<CSDAVConferenceProvider>"16
v32@0:8@"<CSDAVConferenceProvider>"16@"NSData"24
v28@0:8@"<CSDAVConferenceProvider>"16f24
v28@0:8@"<CSDAVConferenceProvider>"16B24
v40@0:8@"<CSDAVConferenceProvider>"16@"NSData"24q32
q16@0:8
d16@0:8
v24@0:8d16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
I16@0:8
v20@0:8I16
v24@0:8@"CSDAVConferenceConfiguration"16
v24@0:8@"CSDIDSTransport"16
v24@0:8@"VCCapabilities"16
v24@0:8@"NSData"16
v32@0:8@"NSString"16@"NSString"24
@"<CSDAVConferenceDelegate>"16@0:8
v24@0:8@"<CSDAVConferenceDelegate>"16
@"NSObject<OS_dispatch_queue>"16@0:8
v24@0:8@"NSObject<OS_dispatch_queue>"16
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@"NSError"16@0:8
@"NSDate"16@0:8
v32@0:8q16@24
v20@0:8f16
v24@0:8q16
v32@0:8@16q24
q32@0:8@16^@24
@?16@0:8
@"<CSDAVConferenceDelegate>"
@"NSDictionary"
@"NSError"
@"NSDate"
@"CSDAVConferenceConfiguration"
@"<CSDAVConferenceProvider>"
@"NSNumber"
{CGSize="width"d"height"d}
@"VCCapabilities"
@"NSUUID"
@24@0:8^{_NSZone=}16
v24@0:8Q16
@"NSData"
@"CSDMessagingHandle"
{?="identifier"b1"version"b1"isMomentsAvailable"b1}
v24@0:8@"TUCallProviderManager"16
v28@0:8I16@20
v28@0:8I16@"NSString"20
@"CSDUserActivityCommunicator"
@"CSDUserActivity"
v40@0:8@16@24Q32
v36@0:8@16@24B32
v40@0:8@"CSDReportingController"16@"CSDCall"24Q32
v32@0:8@"CSDReportingController"16@"CSDCall"24
v24@0:8@"CSDReportingController"16
v36@0:8@"CSDReportingController"16@"CSDMessagingRelayMessage"24B32
v32@0:8@"CSDReportingController"16@"CXTransactionGroup"24
v40@0:8@"CSDReportingController"16@"CXAction"24@"CSDCall"32
v32@0:8@"CSDReportingController"16@"CSDMomentsUsageReport"24
v40@0:8@"CSDReportingController"16@"TURoute"24@"CSDCall"32
v32@0:8@"CSDReportingController"16@"TUConversation"24
v40@0:8@"CSDReportingController"16@"NSArray"24@"TUConversation"32
v32@0:8@"CSDReportingController"16@"CSDIDSChat"24
v40@0:8@"CSDReportingController"16@"NSArray"24@"NSUUID"32
@"<CSDReporterDataSource>"16@0:8
v24@0:8@"<CSDReporterDataSource>"16
v24@0:8@"TURouteController"16
@56@0:8@16@24@32@40@48
@"TURouteController"
@"<CSDOrientationObserver>"
@"<TUNotifyObserver>"
v24@0:8@?<v@?@"FBSOrientationUpdate">16
@?<v@?@"FBSOrientationUpdate">16@0:8
^I16@0:8
I24@0:8Q16
v32@0:8^I16Q24
@20@0:8i16
i24@0:8@16
@24@0:8Q16
{?="list"^I"count"Q"size"Q}
@"NSMutableArray"
{?="connectionTimeMs"b1"durationMs"b1"endReason"b1"providerEndedReason"b1"providerErrorCode"b1"setupTimeMs"b1"faceTimeTransportType"b1"idsLinkType"b1"telephonyTransportType"b1"hasConnected"b1"hasEnded"b1"hasStartedConnecting"b1"isCurrentlyGrouped"b1"isHeld"b1"isIncoming"b1"isRelay"b1}
v24@0:8@"IMAVChat"16
v32@0:8@"IMHandle"16q24
B32@0:8@16@24
v24@0:8@"CXProvider"16
B32@0:8@"CXProvider"16@"CXTransaction"24
v32@0:8@"CXProvider"16@"CXStartCallAction"24
v32@0:8@"CXProvider"16@"CXAnswerCallAction"24
v32@0:8@"CXProvider"16@"CXEndCallAction"24
v32@0:8@"CXProvider"16@"CXSetHeldCallAction"24
v32@0:8@"CXProvider"16@"CXSetMutedCallAction"24
v32@0:8@"CXProvider"16@"CXSetGroupCallAction"24
v32@0:8@"CXProvider"16@"CXPlayDTMFCallAction"24
v32@0:8@"CXProvider"16@"CXAction"24
v32@0:8@"CXProvider"16@"AVAudioSession"24
v32@0:8@"CXProvider"16@"CXSendMMIOrUSSDCodeAction"24
v32@0:8@"CXProvider"16@"CXJoinCallAction"24
v32@0:8@"CXProvider"16@"CXSetTTYTypeCallAction"24
v32@0:8@"CXProvider"16@"CXSetSendingVideoCallAction"24
v32@0:8@"CXProvider"16@"CXSetRelayingCallAction"24
v32@0:8@"CXProvider"16@"CXPullCallAction"24
v32@0:8@"CXProvider"16@"CXSetVideoPresentationSizeCallAction"24
v32@0:8@"CXProvider"16@"CXSetVideoPresentationStateCallAction"24
B24@0:8@"NSUUID"16
@"NSUUID"24@0:8@"NSUUID"16
v24@0:8@"NSUUID"16
v28@0:8@16I24
v56@0:8{CGSize=dd}16{CGSize=dd}32@48
I24@0:8q16
@"<CSDFaceTimeProviderDelegateManagerDelegate>"
@"CXProvider"
@"NSMutableOrderedSet"
v44@0:8@16B24@28@36
v36@0:8@16@24I32
v32@0:8@"CSDIDSGroupSession"16@"NSDictionary"24
v44@0:8@"CSDIDSGroupSession"16B24@"NSSet"28@"NSError"36
v32@0:8@"CSDIDSGroupSession"16@"NSError"24
v24@0:8@"CSDIDSGroupSession"16
v36@0:8@"CSDIDSGroupSession"16@"NSError"24I32
v32@0:8@"CSDIDSGroupSession"16@"NSArray"24
v40@0:8@16B24B28@32
v36@0:8Q16B24q28
v40@0:8Q16q24q32
v36@0:8@"<CSDAVCSession>"16B24@"NSError"28
v32@0:8@"<CSDAVCSession>"16@"NSError"24
v40@0:8@"<CSDAVCSession>"16B24B28@"NSError"32
v24@0:8@"<CSDAVCSession>"16
@88@0:8@16@24@32B40@44@52@60@68@76B84
v32@0:8Q16@24
@"NSSet"
@"<CSDConversationDelegate>"
@"TUHandle"
@"TUConversationMember"
@"NSMutableDictionary"
@"CSDIDSGroupSession"
@"<CSDAVCSession>"
@"<CSDConversationServerBag>"
@"NSObject"
{?="supportsAddCall"b1"supportsDTMF"b1"supportsGrouping"b1"supportsHolding"b1"supportsSendingToVoicemail"b1"supportsUnambiguousMultiPartyState"b1"supportsUngrouping"b1}
v32@0:8@16@?24
v28@0:8@"CSDMessagingRelayMessage"16B24
v24@0:8@"CSDMessagingRelayMessage"16
v32@0:8@"CSDMessagingRelayMessage"16@?<v@?@"NSDictionary">24
@28@0:8i16@20
C16@0:8
v20@0:8C16
{?="type"b1}
v24@0:8@"CSDPauseDigitsQueue"16
@28@0:8@16B24
@40@0:8@16@24@32
@48@0:8@16@24@32B40B44
@32@0:8@16@24
Vv20@0:8B16
@"<CSDProviderCallDelegate>"
@"CXCallSource"
@"CXCallFailureContext"
@"CXCallUpdate"
@"CSDPauseDigitsQueue"
@"NSTimer"
v24@0:8@"<CSDStatusBarResolver>"16
@"<CSDStatusBarResolver>"
@"SBSStatusBarStyleOverridesAssertion"
@"BKSApplicationStateMonitor"
{?="actionType"b1"failureReason"b1"timestamp"b1"providerWasReset"b1}
v36@0:8@16I24@28
v24@0:8@"IDSGroupSession"16
v36@0:8@"IDSGroupSession"16I24@"NSError"28
v40@0:8@"IDSGroupSession"16@"NSArray"24@"NSError"32
v40@0:8@"IDSGroupSession"16@"NSDictionary"24@"NSError"32
v40@0:8@"IDSGroupSession"16@"IDSGroupSessionParticipantUpdate"24@"NSError"32
v32@0:8@"IDSGroupSession"16@"NSError"24
v32@0:8@"IDSGroupSession"16@"NSDictionary"24
v36@0:8@"IDSGroupSession"16@"NSArray"24B32
v32@0:8@"IDSGroupSession"16@"NSArray"24
v32@0:8@"IDSSession"16@"NSString"24
v24@0:8@"IDSSession"16
v36@0:8@"IDSSession"16I24@"NSError"28
v32@0:8@"NSString"16@"NSData"24
v32@0:8@"IDSSession"16@"NSArray"24
v40@0:8@"IDSSession"16@"NSString"24@"NSData"32
v32@0:8@"IDSSession"16@"NSSet"24
v36@0:8@"IDSSession"16@"NSSet"24B32
v36@0:8@"NSArray"16@"NSData"24B32
@"<CSDIDSGroupSessionProviderDelegate>"16@0:8
v24@0:8@"<CSDIDSGroupSessionProviderDelegate>"16
@"NSArray"16@0:8
@"IDSGroupSession"
@"<CSDIDSGroupSessionProviderDelegate>"
@"NSArray"
@"IDSAccount"
@36@0:8@16B24@28
@60@0:8@16B24@28@36@44@52
@52@0:8@16@24@32i40@44
v36@0:8@16B24@?28
v40@0:8@16@24@?32
@"<CSDRelayIDSDualSessionDelegate>"
@"IDSDestination"
@"IDSDevice"
v32@0:8@16^{__CFString=}24
@24@0:8^{__CFString=}16
@"<CSDThumperCapabilitiesMonitorDataSource>"
@"NPSDomainAccessor"
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v68@0:8@16@24@32@40q48@56B64
v76@0:8@16@24@32@40q48@56B64@68
v72@0:8@16@24@32@40@48@56@64
v48@0:8@16@24d32@40
v68@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40q48@"NSError"56B64
v76@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40q48@"NSError"56B64@"IDSMessageContext"68
v72@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@"NSArray"48@"NSArray"56@"NSDictionary"64
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@48
v48@0:8@"IDSService"16@"NSString"24d32@"NSError"40
v48@0:8@"IDSService"16@"NSString"24@"NSString"32@"NSString"40
v32@0:8@"IDSService"16q24
@"<CSDAccountsControllerDelegate>"
v32@0:8@"NSData"16@"NSSet"24
v28@0:8@"NSData"16B24
@"<CSDIDSDualSessionProviderDelegate>"16@0:8
v24@0:8@"<CSDIDSDualSessionProviderDelegate>"16
@"<CSDIDSDualSessionProviderDelegate>"
@"IDSSession"
Vv24@0:8@?16
Vv32@0:8@16@?24
Vv24@0:8@?<v@?@"NSDictionary"@"NSDictionary"@"NSDictionary">16
Vv32@0:8@"TUDialRequest"16@?<v@?@"NSError">24
v24@0:8@"<TUCallProviderManagerXPCClient>"16
v24@0:8@"CSDCallProviderManager"16
@"CSDClientManager"
@"CSDCallProviderManager"
v28@0:8@"CSDIDSDualSession"16i24
v24@0:8@"CSDIDSDualSession"16
v36@0:8@"CSDIDSDualSession"16@"NSArray"24B32
v32@0:8@"CSDIDSDualSession"16@"NSData"24
v40@0:8@16q24@32
v24@0:8@"<CSDAVConference>"16
v40@0:8@"<CSDAVConference>"16q24@"NSError"32
v28@0:8@"<CSDAVConference>"16B24
v32@0:8@"<CSDAVConference>"16@"NSData"24
v28@0:8@"<CSDAVConference>"16f24
v32@0:8@"<CSDAVConference>"16q24
v40@0:8@"<CSDAVConference>"16@"NSData"24q32
v32@0:8@"<CXVideoAspectRatioDescriptor>"16@?<v@?@"NSArray"B>24
v24@0:8@"<CXVideoAspectRatioDescriptor>"16
@"<CSDIDSChatDelegate>"16@0:8
v24@0:8@"<CSDIDSChatDelegate>"16
@"NSUUID"16@0:8
@"TUHandle"16@0:8
@"CXCallFailureContext"16@0:8
@36@0:8@16@24B32
@44@0:8@16@24B32@36
v32@0:8@16B24B28
@"<CSDIDSChatDelegate>"
@"CSDExternalIDSDualSession"
@"<CSDAVConference>"
f16@0:8
@"CSDMessagingAVConferenceInviteData"
@"CSDMessagingCallCapabilitiesState"
@"CSDMessagingCallModel"
@"CSDMessagingCallModelState"
@"CSDMessagingCallDisplayContext"
@"CSDMessagingCallProvider"
@"CSDMessagingRoute"
{?="hostCallCreationTime"b1"messageSendTime"b1"hardPauseState"b1"protoDisconnectedReason"b1"protoProtocolVersion"b1"protoService"b1"protoSoundRegion"b1"protoTTYType"b1"receivedMessageType"b1"requestActionType"b1"systemVolume"b1"type"b1"protoCannotBeAnswered"b1"protoCannotRelayAudioOrVideoOnPairedDevice"b1"protoEmergency"b1"protoExpectedEndpointOnMessagingDevice"b1"protoNeedsManualInCallSounds"b1"protoRemoteUplinkMuted"b1"protoSOS"b1"protoShouldSuppressRingtone"b1"protoSupportsTTYWithVoice"b1"protoUplinkMuted"b1"protoVideo"b1"protoVoicemail"b1"protoWantsHoldMusic"b1}
v24@0:8@?<q@?@"NSString"@"NSString">16
B24@0:8@"NSString"16
@"DNDEventBehaviorResolutionService"
{?="maximumCallGroups"b1"maximumCallsPerCallGroup"b1"supportsAudioAndVideo"b1"supportsAudioOnly"b1"supportsEmergency"b1"supportsRecents"b1"supportsVoicemail"b1}
v48@0:8@"CSDRelayIDSMessenger"16@"CSDMessagingRelayMessage"24@"IDSDestination"32@"IDSDevice"40
v36@0:8@"CSDRelayIDSMessenger"16@"NSArray"24B32
q24@0:8@16
B24@0:8@"CSDMessagingRelayMessage"16
B32@0:8@"CSDMessagingRelayMessage"16@"IDSDestination"24
q24@0:8@"CSDMessagingRelayMessage"16
@"NSArray"24@0:8@"CSDMessagingRelayMessage"16
q24@0:8q16
v28@0:8i16@20
v28@0:8@16C24
v32@0:8@?16@24
@"<CSDRelayMessagingControllerDelegate>"
@"<CSDRelayMessagingControllerClientMessagingDelegate>"
@"<CSDRelayMessagingControllerHostMessagingDelegate>"
@"<CSDRelayMessagingControllerCommonMessagingDelegate>"
@"CSDRelayIDSSessionMessenger"
@"CSDRelayPairedDeviceMessenger"
v28@0:8i16@?20
@"CSDCallStateMonitor"
@"CSDRelayMessagingController"
@"CSDRelayClientController"
@"CSDRelayHostController"
@"CSDRelayCommonController"
@"CSDCallDirectoryManager"
@"CSDVoIPApplicationController"
@"CSDMomentsController"
@"CSDUserNotificationController"
@"CSDOrientationMonitor"
@"CSDProximityController"
@"CSDRaiseToAnswerController"
@"CSDAudioController"
@"CSDStatusBarManager"
{?="meanRequestDuration"b1"medianRequestDuration"b1"timestamp"b1"availability"b1"photoRequestFailureCount"b1"photoRequestSuccessCount"b1}
{CGSize=dd}24@0:8@16
B24@0:8@"<CSDIDSChat>"16
{CGSize=dd}24@0:8@"<CSDIDSChat>"16
v24@0:8@"<CSDIDSChat>"16
v32@0:8@"<CSDIDSChat>"16@"NSData"24
v28@0:8@"<CSDIDSChat>"16f24
v32@0:8@"<CSDIDSChat>"16q24
i24@0:8q16
@"<CSDIDSProviderDelegateCapabilities>"
v40@0:8@"<CSDIDSDualSessionProvider>"16@"NSString"24@"NSData"32
v24@0:8@"<CSDIDSDualSessionProvider>"16
v36@0:8@"<CSDIDSDualSessionProvider>"16@"NSSet"24B32
v36@0:8@"<CSDIDSDualSessionProvider>"16I24@"NSError"28
@28@0:8@16i24
v32@0:8@16i24B28
@"<CSDIDSDualSessionDelegate>"
@"<CSDIDSDualSessionProvider>"
i20@0:8i16
i28@0:8@16B24
i24@0:8Q16
v28@0:8I16@?20
@"<CSDReporterDataSource>"
@"AWDServerConnection"
@"<CSDRelayIDSMessengerDelegate>"
@56@0:8@16@24@32q40@48
@"TUCallProviderManager"
@"<CSDFaceTimeIDSProviderDelegateCapabilities>"
@"NSOrderedSet"
@"<CSDFaceTimeIDSProviderDelegateServerBag>"
v40@0:8@"NSURL"16@"NSSet"24@"NSDictionary"32
v32@0:8@"NSURL"16@?<v@?@"NSURL">24
@"<CSDFileTransferringDelegate>"16@0:8
v24@0:8@"<CSDFileTransferringDelegate>"16
v48@0:8Q16@24@32@?40
@"<CSDFileTransferringDelegate>"
@"IDSService"
@32@0:8@16d24
@"<CSDCallSourceFetcherDataSource>"
r^{__CFString=}16@0:8
v32@0:8B16B20@24
v32@0:8@"IDSDevice"16@?<v@?B@"NSString">24
v32@0:8@"IDSDevice"16@"NSUUID"24
v24@0:8@"IDSDevice"16
v24@0:8@?<v@?B>16
v40@0:8@"NSNumber"16@"NSString"24@?<v@?B>32
v32@0:8B16B20@"IDSDevice"24
{?="protoTimeConnected"b1"protoDisconnectedReason"b1"protoService"b1"protoSoundRegion"b1"protoStatus"b1"protoTTYType"b1"protoConferenced"b1"protoEmergency"b1"protoHasSentInvitation"b1"protoNeedsManualInCallSounds"b1"protoOutgoing"b1"protoSOS"b1"protoShouldSuppressRingtone"b1"protoSupportsTTYWithVoice"b1"protoUplinkMuted"b1"protoVideo"b1"protoVoicemail"b1"protoWantsHoldMusic"b1}
v24@0:8i16B20
@"TUCallProvider"
@"TUCallDisplayContext"
@"<CSDRelayCallDelegate>"
v24@0:8@"CSDCallHistoryManager"16
Vv32@0:8@16@24
Vv32@0:8@"NSUUID"16@"NSUUID"24
v24@0:8@"<TUCallHistoryManagerXPCClient>"16
@"CSDCallHistoryManager"
@"<CSDPauseDigitsQueueDelegate>"
@24@0:8d16
v40@0:8@16d24@?32
@"CSDMessagingConversationMessage"
{?="version"b1"isMomentsAvailable"b1}
v40@0:8@"NSURL"16@"NSURL"24@?<v@?@"NSString"@"NSError">32
v56@0:8@16@24@32q40@48
v48@0:8@16@24@32@?40
v40@0:8@"<CSDDualFaceTimeProviderDelegate>"16@"NSUUID"24@"NSDate"32
v56@0:8@"<CSDDualFaceTimeProviderDelegate>"16@"NSUUID"24@"NSDate"32q40@"CXCallFailureContext"48
v40@0:8@"<CSDDualFaceTimeProviderDelegate>"16@"CXTransaction"24@?<v@?@"NSError">32
v48@0:8@"<CSDFaceTimeProviderDelegate>"16@"TUConversation"24@"NSData"32@?<v@?@"NSUUID"BB@"NSUUID"@"TUHandle"@"NSString">40
@"TUContactsDataProvider"
@"CSDConversationManager"
@"CSDConversationManagerXPCServer"
@"CSDFaceTimeIDSProviderDelegate"
@"CSDFaceTimeIMAVProviderDelegate"
@"CSDFaceTimeConversationProviderDelegate"
@"CSDClient"
@"LSApplicationProxy"
@"CSDMessagingPersonNameComponents"
B20@0:8I16
@"<CSDStatusBarResolverDelegate>"16@0:8
v24@0:8@"<CSDStatusBarResolverDelegate>"16
@"CSDStatusBarDescriptor"16@0:8
@48@0:8@16@24@32@40
@"<CSDStatusBarResolverDelegate>"
@"<CSDProcessObserverProtocol>"
@"CSDStatusBarDescriptor"
@"TUCallCenter"
v28@0:8B16@20
v56@0:8@16@24@32@?40@?48
@40@0:8@16@24^@32
@32@0:8@16^@24
B32@0:8@16^@24
@"NSURL"
@"NSFileManager"
v36@0:8B16B20@24B32
@"<CSDPinExchangeDelegate>"
{?="actionType"b1"completionTimeMs"b1"failureReason"b1"state"b1}
Vv28@0:8B16@20
Vv36@0:8B16@20@28
Vv24@0:8@16
Vv28@0:8B16@"NSString"20
Vv28@0:8B16@"NSUUID"20
Vv36@0:8B16@"NSString"20@"NSUUID"28
Vv24@0:8@"NSUUID"16
Vv24@0:8@?<v@?@"TUCallCapabilitiesState">16
v24@0:8@"<TUCallCapabilitiesXPCClient>"16
@"CSDThumperAccount"24@0:8@"NSString"16
@"TUThumperCTCapabilitiesState"24@0:8@"NSString"16
B32@0:8@"NSString"16@"NSString"24
C32@0:8@16@24
v36@0:8B16@20@28
@24@0:8B16B20
@"NSXPCListener"
@"CSDAccountsController"
@"CSDTelephonyCallCapabilities"
@"CSDThumperPushHandler"
@"CSDPinExchangeController"
@"CSDThumperCapabilitiesMonitor"
@"<CSDIDSService>"
@"TUCallCapabilitiesState"
v24@0:8@"TUDynamicCallDisplayContext"16
@"<CSDCallDelegate>"
@"CSDCallDataSource"
@"TUDialRequest"
@"CSDIDSTransport"
@"TUDynamicCallDisplayContext"
v24@0:8@"TUAudioDeviceController"16
B32@0:8@"NSString"16@"TUCall"24
B24@0:8@"TUCall"16
@"TURoute"24@0:8@"TUCall"16
@"CARAutomaticDNDStatus"
{?="version"b1}
@"CSDMessagingConversationMember"
{?="version"b1"locallyCreated"b1}
v24@0:8@"CSDConversation"16
v32@0:8@"CSDConversation"16@"CXCallFailureContext"24
v32@0:8@"CSDConversation"16@"CSDConversationParticipant"24
v40@0:8@"CSDConversation"16@"NSString"24@?<v@?B>32
@72@0:8@16@24@32B40@44@52@60B68
@60@0:8@16@24@32B40@44@52
v40@0:8Q16@24@32
@"CSDIDSService"
@"NSMapTable"
@"CSDConversationPersistenceController"
@"CSDDeviceLockStateObserver"
{?="latencyMs"b1"protocolVersion"b1"timestamp"b1"callService"b1"messageType"b1}
{?="type"b1"failed"b1}
{?="protoProtocolVersion"b1"type"b1"oBSOLETEProtoMomentsAvailable"b1"protoMomentsV2Available"b1"protoSenderMuteUplink"b1"protoShouldSuppressInCallUI"b1"protoWantsVideo"b1}
B24@0:8q16
v32@0:8@?16@?24
@24@0:8@?16
B24@0:8@?16
@"AWDCSDCallStatus"
{?="timestamp"b1"callInfoSource"b1}
{?="faceTimeAudioAvailable"b1"faceTimeVideoAvailable"b1}
@"NSCountedSet"
@56@0:8@16@24@32@?40@48
@"CXCallDirectoryStore"
@"CSDIncomingCallFilterDataSource"
@"<CSDDeviceLockStateObserver>"
@"CXCallDirectorySanitizer"
@"ACAccountStore"
v40@0:8q16@24@32
@"CSDIncomingCallFilter"
@"<CSDTransactionManager>"
@"CHManager"
@"<CSDUserNotificationDelegate>"
@"<CSDIDSSessionProvider>"
v24@0:8@"UABestAppSuggestion"16
v32@0:8@"UABestAppSuggestion"16@"NSSet"24
v32@0:8@16d24
v36@0:8@16d24B32
@"<CSDUserActivityCommunicatorDelegate>"
@"UABestAppSuggestionManager"
v48@0:8@16@24Q32@40
v36@0:8@"<CSDIDSGroupSessionProvider>"16I24@"NSError"28
v24@0:8@"<CSDIDSGroupSessionProvider>"16
v48@0:8@"<CSDIDSGroupSessionProvider>"16@"NSDictionary"24Q32@"NSError"40
v32@0:8@"<CSDIDSGroupSessionProvider>"16@"NSError"24
v36@0:8@"<CSDIDSGroupSessionProvider>"16@"NSArray"24B32
v32@0:8@"<CSDIDSGroupSessionProvider>"16@"NSArray"24
v44@0:8@16@24@32B40
@"<CSDIDSGroupSessionDelegate>"
@"<CSDIDSGroupSessionProvider>"
Vv28@0:8@16C24
Vv28@0:8i16@20
Vv40@0:8@16{CGSize=dd}24
Vv28@0:8@16i24
Vv24@0:8@"TUAnswerRequest"16
Vv24@0:8@"NSString"16
Vv32@0:8@"NSString"16@"NSString"24
Vv28@0:8@"NSString"16C24
Vv28@0:8i16@"NSString"20
Vv24@0:8@"IDSDestination"16
Vv24@0:8@"TUProxyCall"16
Vv40@0:8@"NSString"16{CGSize=dd}24
Vv28@0:8@"NSString"16i24
Vv24@0:8@"TUDialRequest"16
Vv24@0:8@?<v@?@"NSArray">16
Vv32@0:8@"TUDialRequest"16@"TUCallDisplayContext"24
Vv32@0:8@"TUDialRequest"16@?<v@?@"TUCall"@"NSArray">24
Vv24@0:8@"TUJoinConversationRequest"16
Vv32@0:8@"NSDictionary"16@?<v@?@"TUCall"@"NSArray">24
Vv24@0:8@"TUCallServicesClientCapabilities"16
Vv24@0:8@?<v@?@"NSDictionary">16
Vv40@0:8@16@24@?32
Vv48@0:8@16@24@32@?40
Vv40@0:8@"NSSet"16@"NSString"24@?<v@?B>32
Vv40@0:8@"TUHandle"16@"NSString"24@?<v@?B>32
Vv40@0:8@"NSSet"16@"NSString"24@?<v@?@"NSDictionary">32
Vv48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?B>40
v28@0:8@"NSArray"16B24
@"CSDCallController"16@0:8
v24@0:8@"CSDCall"16
v36@0:8@16i24@28
v32@0:8f16i20@24
v24@0:8B16B20
@"CSDCallController"
@"CSDRecentsController"
@"CSDRouteController"
@"CSDCallHistoryManagerXPCServer"
@"CSDCallProviderManagerXPCServer"
@"CSDRelayCallDataSource"
@"CSDProviderCallDataSource"
@"CSDRelayCallDelegate"
@"TUCarPlayHardwareControlsBroadcaster"
{?="completionTimeMs"b1"timestamp"b1"failed"b1"timedOut"b1}
v24@0:8@?<v@?>16
v36@0:8@"NSDictionary"16B24@?<v@?>28
v32@0:8@"NSDictionary"16@?<v@?>24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
@"APSConnection"
@40@0:8Q16@24@32
@"TUCallServicesClientCapabilities"
Vv32@0:8@"NSUUID"16@"NSArray"24
Vv32@0:8@"NSSet"16@"NSUUID"24
Vv32@0:8@"TUConversationMember"16@"NSUUID"24
v24@0:8@"<TUConversationManagerXPCClient>"16
v32@0:8@"CSDConversationManager"16@"TUConversation"24
v40@0:8@"CSDConversationManager"16@"TUConversation"24@"TUConversationParticipant"32
v56@0:8@"CSDConversationManager"16@"TUConversation"24@"CSDMessagingConversationMessage"32@"TUHandle"40@"<CSDGroupSessionParticipantUpdateProtocol>"48
v40@0:8@"CSDConversationManager"16@"TUConversation"24@"CXCallFailureContext"32
v24@0:8@"<CSDCallProviderManagerDataSource>"16
@20@0:8B16
@"<CSDCallProviderManagerDataSource>"
@"CMGestureManager"
v40@0:8@"CSDMessagingRelayMessage"16@"IDSDestination"24@?<v@?B@"NSDictionary">32
v32@0:8@"CSDMessagingRelayMessage"16@"IDSDestination"24
v40@0:8@"CSDMessagingRelayMessage"16@"IDSDestination"24@?<v@?@"NSDictionary">32
v40@0:8@"NSDictionary"16@"IDSDestination"24@?<v@?@"NSDictionary">32
v44@0:8@16@24B32@36
@36@0:8I16@20@28
I24@0:8@16
@20@0:8I16
@"NSUserActivity"
@"TUDialRequest"24@0:8@"TUDialRequest"16
v48@0:8@"NSUserActivity"16@"NSString"24@"NSDictionary"32@?<v@?B@"NSError">40
B24@0:8@"NSURL"16
@"NSURL"32@0:8@"NSString"16@"NSURL"24
v24@0:8@"NSArray"16
B24@0:8@"TUCallProvider"16
@"<CSDCallProviderManagerDataSourceDelegate>"16@0:8
v24@0:8@"<CSDCallProviderManagerDataSourceDelegate>"16
@"NSSet"16@0:8
v32@0:8@16r^{__CFString=}24
@24@0:8r^{__CFString=}16
@"<CSDCallProviderManagerDataSourceDelegate>"
@"CSDSandboxExtensionDirectory"
@"CSDCallCenterObserver"
d24@0:8@16
Q24@0:8Q16
@24@0:8q16
@"<CSDMomentsReportingSessionDelegate>"
v36@0:8@"AVCSession"16B24@"NSError"28
v32@0:8@"AVCSession"16@"NSError"24
v24@0:8@"AVCSession"16
v44@0:8@"AVCSession"16@"AVCSessionParticipant"24B32@"NSError"36
v44@0:8@"AVCSession"16B24@"AVCSessionConfiguration"28@"NSError"36
v40@0:8@"AVCSession"16B24B28@"NSError"32
v32@0:8@"AVCSession"16@"NSData"24
v32@0:8@16Q24
v40@0:8@"AVCSessionParticipant"16B24B28@"NSError"32
v28@0:8@"AVCSessionParticipant"16B24
v32@0:8@"AVCSessionParticipant"16@"NSDictionary"24
v32@0:8@"AVCSessionParticipant"16Q24
v28@0:8B16Q20
v48@0:8Q16@24@32Q40
v28@0:8@"CSDConversationParticipant"16B24
v24@0:8@"CSDConversationParticipant"16
v48@0:8Q16@"NSNumber"24@"NSNumber"32Q40
@"NSData"16@0:8
@"AVCSession"
@"<CSDAVCSessionDelegate>"
@44@0:8@16B24@28@36
@36@0:8@16@24i32
v24@0:8@"<CSDCoreTelephonyClient>"16
v40@0:8@"<CSDCoreTelephonyClient>"16@"CTXPCContextInfo"24@"CSDCTCallCapabilities"32
v32@0:8@"<CSDCoreTelephonyClient>"16@"NSDictionary"24
v40@0:8@"<CSDCoreTelephonyClient>"16@"CTXPCContextInfo"24@"NSDictionary"32
@40@0:8@16@24B32B36
@"<CSDTelephonyCallCapabilitiesDelegate>"
@"CSDCoreTelephonyClient"
@"<CSDEmergencyCallbackCapabilities>"
{?="deviceType"b1"protoCurrentlyPicked"b1"protoGuest"b1"protoSupportsRelay"b1}
v24@0:8@"CSDRelayCall"16
v32@0:8@"CSDRelayCall"16@"TUAnswerRequest"24
v32@0:8@"CSDRelayCall"16@"TUCall"24
v28@0:8@"CSDRelayCall"16C24
v36@0:8@"CSDRelayCall"16B24@"NSError"28
@"TUDTMFSoundPlayer"
{?="disconnectedReason"b1"type"b1"version"b1"shouldSuppressInCallUI"b1}
{?="timestamp"b1}
@"CSDKeychainPasswordItem"
@"<CXAudioSessionActivationStateObserver>"
B24@0:8{?=ii}16
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSDictionary"24
@"CSDCTCallCapabilities"24@0:8@"CTXPCContextInfo"16
@"NSDictionary"32@0:8@"CTXPCContextInfo"16@"NSString"24
@"NSDictionary"24@0:8@"CTXPCContextInfo"16
v36@0:8@"NSString"16B24@"NSDictionary"28
v44@0:8@"CTXPCContextInfo"16@"NSString"24B32@"NSDictionary"36
v32@0:8@"NSString"16@"CTXPCContextInfo"24
v32@0:8@"CTXPCContextInfo"16@"NSString"24
@"NSString"24@0:8@"NSUUID"16
@"<CSDCoreTelephonyClientDelegate>"16@0:8
v24@0:8@"<CSDCoreTelephonyClientDelegate>"16
@"<CSDCoreTelephonyClientDelegate>"
@"CoreTelephonyClient"
@"CTXPCContexts"
{?="ambiguityState"b1"addCallAllowed"b1"endAndAnswerAllowed"b1"hardPauseAvailable"b1"holdAllowed"b1"holdAndAnswerAllowed"b1"mergeable"b1"sendToVoicemailAllowed"b1"swappable"b1"takingCallsPrivateAllowed"b1}
@32@0:8@16@?24
v32@0:8@"CSDMomentsReportingSession"16@"CSDMomentsUsageReport"24
v24@0:8@"TUConversationManager"16
v32@0:8@"TUConversationManager"16@"TUConversation"24
v36@0:8@16q24i32
v36@0:8@"CSDMomentsController"16q24i32
v32@0:8@"CSDMomentsController"16q24
v40@0:8@"CSDMomentsController"16q24@"NSString"32
@"TUConversationManager"
@"<CSDCHManager>"
@"IDSDevice"24@0:8@"NSString"16
v32@0:8@"<IDSServiceDelegatePrivate>"16@"NSObject<OS_dispatch_queue>"24
v24@0:8@"<IDSServiceDelegatePrivate>"16
@"IDSDevice"16@0:8
v48@0:8@"CSDIDSDualSession"16@"NSData"24@"IDSDestination"32@"IDSDevice"40
v52@0:8@16@24@32q40B48
v48@0:8@16@24@32q40
v56@0:8@16@24@32q40@?48
v40@0:8@16@?24@?32
v48@0:8@16@24@?32@?40
v52@0:8@16@24@?32B40@?44
v60@0:8@16@24@32@?40B48@?52
v52@0:8@"<CSDFileTransferring>"16@"NSURL"24@"NSDictionary"32B40@"NSString"44
v36@0:8@"<CSDFileTransferring>"16@"NSURL"24B32
v28@0:8@"<CSDAVCMoments>"16I24
v40@0:8@"<CSDAVCMoments>"16@"<CSDAVCMomentsRequest>"24@"NSError"32
v48@0:8@"<CSDAVCMoments>"16@"<CSDAVCMomentsRequest>"24@"NSURL"32@"NSError"40
v24@0:8@"<CSDAVCMoments>"16
Vv52@0:8q16@24@32B40@?44
Vv32@0:8q16@?24
Vv44@0:8i16q20@28@?36
Vv24@0:8@?<v@?>16
Vv52@0:8q16@"NSString"24@"NSDictionary"32B40@?<v@?@"TUMomentsCapabilities"@"NSError">44
Vv32@0:8q16@?<v@?@"NSError">24
Vv44@0:8i16q20@"NSString"28@?<v@?@"NSString"@"NSError">36
Vv32@0:8@"NSString"16@?<v@?@"NSError">24
v24@0:8@"<TUMomentsControllerXPCClient>"16
i20@0:8B16
@"<CSDMomentsControllerDelegate>"
@"<CSDFileTransferring>"
@"<CSDMediaAssetManaging>"
@"<TUMomentsControllerXPCClient>"
@"<CSDMomentsServerBag>"
v36@0:8@16q24B32
v36@0:8@16B24q28
v40@0:8@16q24B32B36
v44@0:8@16B24q28@36
v48@0:8@16q24@32@40
v44@0:8@16q24B32@36
v32@0:8@16B24I28
v40@0:8@16B24I28@32
v32@0:8@16I24I28
v36@0:8@"AVConference"16q24B32
v36@0:8@"AVConference"16B24@"NSDictionary"28
v40@0:8@"AVConference"16q24@"NSError"32
v32@0:8@"AVConference"16@"NSData"24
v32@0:8@"AVConference"16q24
v40@0:8@"AVConference"16@"VideoAttributes"24q32
v36@0:8@"AVConference"16B24q28
v24@0:8@"AVConference"16
v40@0:8@"AVConference"16q24@"NSDictionary"32
v40@0:8@"AVConference"16q24B32B36
v40@0:8@"AVConference"16@"NSData"24q32
v44@0:8@"AVConference"16B24q28@"NSError"36
v48@0:8@"AVConference"16q24@"NSError"32@"NSDictionary"40
v44@0:8@"AVConference"16q24B32@"NSError"36
v32@0:8@"AVConference"16B24I28
v40@0:8@"AVConference"16B24I28@"NSError"32
v32@0:8@"AVConference"16I24I28
v28@0:8@"AVConference"16I24
v28@0:8@"AVConference"16f24
v28@0:8@"AVConference"16B24
v48@0:8{CGSize=dd}16{CGSize=dd}32
B20@0:8i16
B52@0:8B16@20@28@36^@44
B40@0:8B16@20i28^@32
v56@0:8q16@24d32@?40@48
B52@0:8B16@"NSDictionary"20@"VCCapabilities"28@"NSString"36^@44
B40@0:8B16@"VCCapabilities"20i28^@32
v56@0:8q16@"NSDictionary"24d32@?<v@?@"NSDictionary"@"NSError">40@"NSObject<OS_dispatch_queue>"48
@"<CSDAVConferenceProviderDelegate>"16@0:8
v24@0:8@"<CSDAVConferenceProviderDelegate>"16
@"<CSDAVConferenceProviderDelegate>"
@"AVConference"
@"TUVideoDeviceController"
@"CSDProviderCall"
v48@0:8@"CXCallControllerHost"16@"NSString"24@"CXTransaction"32@?<v@?@"NSError">40
@"CXCallSource"24@0:8@"NSString"16
v24@0:8@"TUCall"16
v44@0:8@16@24f32q36
v32@0:8@"CXCallSource"16@"CXProviderConfiguration"24
v48@0:8@"CXCallSource"16@"NSUUID"24@"CXCallUpdate"32@?<v@?@"NSError">40
v40@0:8@"CXCallSource"16@"NSUUID"24@"CXCallUpdate"32
v56@0:8@"CXCallSource"16@"NSUUID"24@"NSDate"32q40@"CXCallFailureContext"48
v40@0:8@"CXCallSource"16@"NSUUID"24@"NSDate"32
v32@0:8@"CXCallSource"16@"NSUUID"24
v48@0:8@"CXCallSource"16@"NSUUID"24@"NSData"32q40
v44@0:8@"CXCallSource"16@"NSUUID"24f32q36
v48@0:8@"CXCallSource"16@"NSUUID"24@"NSString"32q40
v40@0:8@"CXCallSource"16@"CXTransaction"24@?<v@?@"NSError">32
v32@0:8@"CXCallSourceManager"16@"CXTransactionGroup"24
v24@0:8@"CXCallSourceManager"16
@"CXCallSource"24@0:8@"TUDialRequest"16
@"CXCallSource"24@0:8@"TUJoinConversationRequest"16
@"TUCallProvider"24@0:8@"NSString"16
v32@0:8@"CXCallAction"16@"CSDProviderCall"24
v32@0:8@"NSArray"16@"CSDProviderCall"24
v32@0:8@"CXStartCallAction"16@"CSDProviderCall"24
B40@0:8@16@24^@32
@"CSDCallFilterManager"
@"CSDVoIPProcessAssertionManager"
@"CXCallSourceManager"
@"CXCallControllerHost"
@"CXInProcessCallSource"
@"CSDFaceTimeProviderDelegate"
@"<CXProviderDelegatePrivate>"
@"CSDCallSourceFetcher"
@"CSDScreenTimeCallFilter"
@"<CSDManagedDeviceMonitor>"
@"<CSDRouteManager>"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v40@0:8@?16@?24@32
^v16@0:8
v28@0:8@?16B24
v40@0:8@?16@24@32
@?32@0:8@16@?24
@?24@0:8@?16
@"NSXPCInterface"
@"NSObject<OS_dispatch_semaphore>"
v32@0:8@"CXCallDirectoryNSExtensionManager"16@"NSArray"24
@"CXCallDirectoryManager"
@"CXCallDirectoryNSExtensionManager"
T@"CSDCallStateController",&,N,V_callStateController
relayMessagingController
T@"CSDRelayMessagingController",R,N
callController
T@"CSDCallController",R,N
allCalls
T@"NSArray",R,N
hash
TQ,R
T#,R
T@"NSString",R,C
T@"<CSDCallCenterObserver>",&,N,V_callCenterObserver
currentOrientation
Ti,N,V_currentOrientation
accelerometer
T@"BKSAccelerometer",R,N,V_accelerometer
T@"CSDTransactionManager",R,N
objectsWithTransactions
T@"NSMutableSet",R,N,V_objectsWithTransactions
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
%@-%@
processAssertion
T@"BKSProcessAssertion",&,N,V_processAssertion
bundleIdentifier
T@"NSString",R,C,N,V_bundleIdentifier
com.apple.telephonyutilities.callservicesdaemon.csdavconference
@"<CSDAVConferenceProvider>"24@?0@"NSUUID"8@"NSObject<OS_dispatch_queue>"16
<%@ %p state=%d conference=%@>
v24@?0@"NSDictionary"8@"NSError"16
T@"<CSDAVConferenceDelegate>",W,N
delegateQueue
T@"NSObject<OS_dispatch_queue>",&,N
localInviteDictionary
T@"NSDictionary",R,C,N
remoteInviteDictionary
T@"NSDictionary",C,N
callID
Tq,R,N
caller
TB,N,GisCaller
connectionTimeout
Td,N
deviceRole
Ti,N
state
Ti,R,N
endedError
T@"NSError",R,N
T@"NSDate",R,N
dateConnected
dateEnded
TB,N,GisMuted
TB,N,GisSendingAudio
TB,N,GisSendingAudioData
hasReceivedFirstRemoteFrame
TB,R,N
sendingVideo
TB,N,GisSendingVideo
remoteVideoPaused
TB,R,N,GisRemoteVideoPaused
remoteVideoPresentationSize
T{CGSize=dd},N
remoteVideoPresentationState
TI,N
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSDictionary",C,N,V_localInviteDictionary
Ti,N,V_state
Tq,N,V_endedReason
T@"NSError",&,N,V_endedError
T@"NSDate",&,N,V_dateStartedConnecting
T@"NSDate",&,N,V_dateConnected
T@"NSDate",&,N,V_dateEnded
TB,N,V_hasReceivedFirstRemoteFrame
TB,N,GisRemoteVideoPaused,V_remoteVideoPaused
configuration
T@"CSDAVConferenceConfiguration",&,N,V_configuration
conferenceProvider
T@"<CSDAVConferenceProvider>",&,N,V_conferenceProvider
conferenceProviderCreationBlock
T@?,C,N,V_conferenceProviderCreationBlock
expectedIsSendingVideo
T@"NSNumber",&,N,V_expectedIsSendingVideo
T@"<CSDAVConferenceDelegate>",W,N,V_delegate
T@"NSObject<OS_dispatch_queue>",&,N,V_delegateQueue
Td,N,V_connectionTimeout
T{CGSize=dd},N,V_remoteVideoPresentationSize
TI,N,V_remoteVideoPresentationState
<%@ %p caller=%d capabilities=%@ deviceRole=%d>
TB,N,GisCaller,V_caller
capabilities
T@"VCCapabilities",&,N,V_capabilities
clientUUID
T@"NSUUID",&,N,V_clientUUID
requiresInviteDictionary
TB,N,V_requiresInviteDictionary
T@"NSDictionary",C,N,V_remoteInviteDictionary
localLandscapeAspectRatio
T{CGSize=dd},N,V_localLandscapeAspectRatio
localPortraitAspectRatio
T{CGSize=dd},N,V_localPortraitAspectRatio
TUCallUserActivityCTInfoKey
TUCallUserActivityServiceKey
kCTCallDirection
kCTCallDirectionOutgoing
kCTCallDirectionIncoming
kCTCallPhoneNumber
com.apple.coretelephony
handoffActivityUserInfo
%@ %@
version
identifier
handle
avcData
isMomentsAvailable
hasVersion
TI,N,V_version
hasIdentifier
TQ,N,V_identifier
hasHandle
T@"CSDMessagingHandle",&,N,V_handle
hasAvcData
T@"NSData",&,N,V_avcData
hasIsMomentsAvailable
TB,N,V_isMomentsAvailable
protocolVersion
senderMuteUplink
TB,N,GisMomentsAvailable
T@"CSDUserActivityManager",R,N
activityCommunicator
T@"CSDUserActivityCommunicator",&,N,V_activityCommunicator
handoffActivity
T@"CSDUserActivity",&,N,V_handoffActivity
csd_UUIDv5
T@"NSUUID",R,N
v24@?0@"NSString"8d16
ADClientSetValueForDistributionKey
AggregateDictionary
%@.%@.%f
dataSource
T@"<CSDReporterDataSource>",W,N
block
T@?,C,N,V_block
com.apple.backboard.proximity.changed
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-1096.3.2/TUCallServicesDaemon/CSDProximityController.m
<Unknown File>
Invalid parameter not satisfying: %@
callCenterObserver != nil
interfaceOrientationObserver != nil
routeController != nil
proximitySensorCoveredObserver != nil
queue != nil
v16@?0@"FBSOrientationUpdate"8
B8@?0
v12@?0i8
T@"<CSDCallCenterObserver>",R,N,V_callCenterObserver
routeController
T@"TURouteController",R,N,V_routeController
interfaceOrientationObserver
T@"<CSDOrientationObserver>",R,N,V_interfaceOrientationObserver
proximitySensorCoveredObserver
T@"<TUNotifyObserver>",R,N,V_proximitySensorCoveredObserver
proximityDetectionMode
Ti,N,V_proximityDetectionMode
proximitySensorCovered
TB,N,GisProximitySensorCovered,V_proximitySensorCovered
interfaceOrientationPortrait
TB,N,GisInterfaceOrientationPortrait,V_interfaceOrientationPortrait
proximitySensorEnabled
TB,R,N,GisProximitySensorEnabled
voiceOverRunningDeterminationHandler
T@?,C,N,V_voiceOverRunningDeterminationHandler
voiceOverTouchShouldRouteToSpeakerDeterminationHandler
T@?,C,N,V_voiceOverTouchShouldRouteToSpeakerDeterminationHandler
proximityChangeHandler
T@?,C,N,V_proximityChangeHandler
handler
T@?,C,N
ConferenceID:
kCMSessionAudioCategory_PlayAndRecord_NoBluetooth
MediaExperience
kCMSessionAudioMode_VoiceChat
kCMSessionAudioMode_VideoChat
faceTimeTransportType
Tq,N
TB,R,N,GisRemoteMomentsAvailable
idx (%tu) is out of range (%tu)
call_uuid
provider_id
is_incoming
is_held
has_connected
has_ended
is_currently_grouped
duration_ms
setup_time_ms
connection_time_ms
features
end_reason
face_time_transport_type
telephony_transport_type
provider_error_code
is_relay
provider_ended_reason
has_started_connecting
ids_link_type
relay_device_route_change
hasCallUuid
callUuid
T@"NSString",&,N,V_callUuid
hasProviderId
providerId
T@"NSString",&,N,V_providerId
hasIsIncoming
isIncoming
TB,N,V_isIncoming
hasIsHeld
isHeld
TB,N,V_isHeld
hasHasConnected
hasConnected
TB,N,V_hasConnected
hasHasEnded
hasEnded
TB,N,V_hasEnded
hasIsCurrentlyGrouped
isCurrentlyGrouped
TB,N,V_isCurrentlyGrouped
hasDurationMs
TQ,N,V_durationMs
hasSetupTimeMs
TQ,N,V_setupTimeMs
hasConnectionTimeMs
TQ,N,V_connectionTimeMs
featuresCount
TQ,R,N
T^I,R,N
hasEndReason
endReason
TQ,N,V_endReason
hasFaceTimeTransportType
TI,N,V_faceTimeTransportType
hasTelephonyTransportType
telephonyTransportType
TI,N,V_telephonyTransportType
hasProviderErrorCode
Tq,N,V_providerErrorCode
hasIsRelay
isRelay
TB,N,V_isRelay
hasProviderEndedReason
Tq,N,V_providerEndedReason
hasHasStartedConnecting
hasStartedConnecting
TB,N,V_hasStartedConnecting
hasIdsLinkType
idsLinkType
Ti,N,V_idsLinkType
T@"NSMutableArray",&,N,V_relayDeviceRouteChanges
CSDIDSLinkTypeNone
CSDIDSLinkTypeMagnet
CSDIDSLinkTypeInfraWifi
CSDIDSLinkTypeQuickRelayWiFi
CSDIDSLinkTypeQuickRelayWWAN
CSDIDSLinkTypeUnknown
CSDIDSLinkTypeIPsec
CSDIDSLinkTypeSPP
(unknown: %i)
IMDaemonDidConnectNotification
IMAVCore
IMAVChatStateChangedNotification
IMAVChatParticipantReceivedFirstFrameNotification
IMAVChatParticipantInvitationDeliveredNotification
IMAVChatParticipantCallInfoChangedNotification
IMAVChatConferenceIDChangedNotification
IMAVChatConferenceMetadataUpdatedNotification
IMAVChatMayRequireBreakBeforeMakeChangedNotification
IMAVChatParticipantInFrequencyChangedNotification
IMAVChatParticipantOutFrequencyChangedNotification
IMAVController
IMPreferredAccountForService
IMCore
IMAVChat
_NSStringDescriptionForIMAVChatEndedReason
CALL_FAILED_NO_NETWORK_CONNECTION_TITLE
ALERT_VIDEO_FAILED_NO_LOCAL_NETWORK_WLAN_MESSAGE
CALL_FAILED_NO_LOCAL_NETWORK_WLAN_MESSAGE
ALERT_VIDEO_FAILED_NO_LOCAL_NETWORK_WIFI_MESSAGE
CALL_FAILED_NO_LOCAL_NETWORK_WIFI_MESSAGE
ALERT_VIDEO_FAILED_NO_LOCAL_WLAN_MESSAGE
CALL_FAILED_NO_LOCAL_WLAN_MESSAGE
ALERT_VIDEO_FAILED_NO_LOCAL_WIFI_MESSAGE
CALL_FAILED_NO_LOCAL_WIFI_MESSAGE
ALERT_VIDEO_FAILED_TITLE
CALL_FAILED_TITLE
ALERT_VIDEO_FAILED_BAD_NONCE_TIMESTAMP
CALL_FAILED_BAD_NONCE_TIMESTAMP
ALERT_VIDEO_FAILED_UPDATE_LOCATION_MESSAGE
CALL_FAILED_UPDATE_LOCATION_MESSAGE
ALERT_VIDEO_FAILED_REGION_INFO_INSUFFICIENT
CALL_FAILED_REGION_INFO_INSUFFICIENT
ALERT_VIDEO_FAILED_REMOTE_INCOMPATIBLE_MESSAGE_%@_NUMBER
ALERT_VIDEO_FAILED_REMOTE_INCOMPATIBLE_MESSAGE_%@_NAME
ALERT_VIDEO_NOT_AVAILABLE_TITLE
CALL_NOT_AVAILABLE_TITLE
ALERT_VIDEO_FAILED_NOT_AVAILABLE_MESSAGE_%@_NUMBER
CALL_FAILED_%@_NOT_AVAILABLE_MESSAGE_NUMBER
ALERT_VIDEO_FAILED_NOT_AVAILABLE_MESSAGE_%@_NAME
CALL_FAILED_%@_NOT_AVAILABLE_MESSAGE_NAME
provider
T@"CXProvider",&,N,V_provider
cachedChats
T@"NSMutableOrderedSet",&,N,V_cachedChats
faceTimeDemuxerDelegate
T@"<CSDFaceTimeProviderDelegateManagerDelegate>",W,N,V_faceTimeDemuxerDelegate
callerID
T@"NSString",C,N,V_callerID
@"<CSDAVCSession>"32@?0@"NSString"8@"<CSDAVCSessionDelegate>"16@"NSObject<OS_dispatch_queue>"24
<%@ %p
 UUID=%@
 groupUUID=%@
 messagesGroupUUID=%@
 state=%ld
 avcSessionToken=%ld
 avcSessionIdentifier=%@
 isLocallyCreated=%d
 isUplinkMuted=%d
 isAudioEnabled=%d
 isVideoEnabled=%d
 localMember=%@
 remoteMembers=%@
 memberIdentifiers=%@
 activeRemoteParticipants=%@
Calling -[CSDConversation leave]
Cleaning up from AVCSession failure.
Timed out waiting for sessions to end in leaving state (left conversation for reason: %@). Please file a bug on [TelephonyUtilities | New Bugs] so we can direct it to the appropriate team.
v12@?0B8
AVCSession started but we weren't trying to join the conversation.
AVCSession failed to start.
Tq,N,V_state
activeRemoteParticipantsByIdentifier
T@"NSMutableDictionary",R,N,V_activeRemoteParticipantsByIdentifier
idsSession
T@"CSDIDSGroupSession",R,N,V_idsSession
avcSession
T@"<CSDAVCSession>",&,N,V_avcSession
expectedAudioEnabled
T@"NSNumber",&,N,V_expectedAudioEnabled
expectedVideoEnabled
T@"NSNumber",&,N,V_expectedVideoEnabled
expectedVideoPaused
T@"NSNumber",&,N,V_expectedVideoPaused
activeParticipantDestinationsByIdentifier
T@"NSDictionary",C,N,V_activeParticipantDestinationsByIdentifier
serverProvidedParticipantIdentifiers
T@"NSSet",C,N,V_serverProvidedParticipantIdentifiers
waitingToPruneParticipants
TB,N,GisWaitingToPruneParticipants,V_waitingToPruneParticipants
lastRebroadcastTime
T@"NSDate",C,N,V_lastRebroadcastTime
TQ,N,V_rebroadcastTimeThreshold
remoteMembers
T@"NSSet",C,N,V_remoteMembers
remoteMemberHandles
T@"NSSet",C,N,V_remoteMemberHandles
serverBag
T@"<CSDConversationServerBag>",&,N,V_serverBag
avcSessionCreationBlock
T@?,C,N,V_avcSessionCreationBlock
reportingHierarchyToken
T@"NSObject",&,N,V_reportingHierarchyToken
reportingHierarchySubToken
T@"NSObject",&,N,V_reportingHierarchySubToken
inflightAVCBlobRecoveryBlocksByIdentifier
T@"NSMutableDictionary",R,C,N,V_inflightAVCBlobRecoveryBlocksByIdentifier
timeoutBlock
T@?,C,N,V_timeoutBlock
participantRefreshBlock
T@?,C,N,V_participantRefreshBlock
avcSessionInProgress
TB,N,V_avcSessionInProgress
T@"<CSDConversationDelegate>",W,N,V_delegate
UUID
T@"NSUUID",R,N,V_UUID
T@"NSUUID",R,N,V_groupUUID
messagesGroupUUID
T@"NSUUID",R,N,V_messagesGroupUUID
avcSessionToken
localParticipantIdentifier
audioReady
TB,R,N,GisAudioReady
locallyCreated
TB,R,N,GisLocallyCreated,V_locallyCreated
initiator
T@"TUHandle",R,N,V_initiator
localMember
T@"TUConversationMember",R,N,V_localMember
activeRemoteParticipants
T@"NSSet",R,C,N
fromStorage
TB,N,GisFromStorage,V_fromStorage
messagesGroupName
T@"NSString",C,N,V_messagesGroupName
localConversationParticipant
T@"CSDConversationParticipant",R,N
memberIdentifiers
T@"NSSet",C,N,V_memberIdentifiers
tuConversation
T@"TUConversation",R,C,N
uplinkMuted
TB,N,GisUplinkMuted
videoEnabled
TB,N,GisVideoEnabled
audioEnabled
TB,N,GisAudioEnabled
videoPaused
TB,N,GisVideoPaused
TB,N,GisRelaying,V_relaying
com.apple.private.alloy.phonecontinuity
supportsHolding
supportsGrouping
supportsUngrouping
supportsDTMF
supportsUnambiguousMultiPartyState
supportsAddCall
supportsSendingToVoicemail
hasSupportsHolding
TB,N,V_supportsHolding
hasSupportsGrouping
TB,N,V_supportsGrouping
hasSupportsUngrouping
TB,N,V_supportsUngrouping
hasSupportsDTMF
TB,N,V_supportsDTMF
hasSupportsUnambiguousMultiPartyState
TB,N,V_supportsUnambiguousMultiPartyState
hasSupportsAddCall
TB,N,V_supportsAddCall
hasSupportsSendingToVoicemail
TB,N,V_supportsSendingToVoicemail
destinationID
uniqueProxyIdentifier
sourceIdentifier
wantsHoldMusic
dtmfKey
disconnectedReason
v32@?0@"NSString"8@16^B24
typeString
T@"NSString",R,C,N
receivedMessageTypeString
dialRequest
T@"TUDialRequest",R,N
cannotBeAnswered
DTMFKey
TC,N
voicemail
TB,N,GisVoicemail
hardPauseDigitsState
shouldSuppressRingtone
needsManualInCallSounds
soundRegion
cannotRelayAudioOrVideoOnPairedDevice
expectedEndpointOnMessagingDevice
TB,N,GisExpectedEndpointOnMessagingDevice
callCapabilitiesState
T@"TUCallCapabilitiesState",&,N
emergency
TB,N,GisEmergency
TB,N,GisSOS,SsetSOS:
callModel
T@"TUCallModel",&,N
tuHandle
T@"TUHandle",&,N
tuProviders
T@"NSArray",&,N
TB,N,GisVideo
tuProvider
T@"TUCallProvider",&,N
displayContext
T@"TUCallDisplayContext",&,N
TB,N,GisRemoteUplinkMuted
endpointIDSDestination
T@"IDSDestination",&,N
T@"NSUUID",&,N
localSenderIdentityAccountUUID
remoteParticipantTUHandles
T@"NSSet",C,N
ttyType
supportsTTYWithVoice
NoAction
IncomingCall
DialCall
CallDialed
AnswerCall
CallAnsweredElsewhere
CallDisconnected
PlayDTMFToneForKey
CallConnected
DisconnectCall
PullRelayingCalls
HoldCall
UnholdCall
GroupCall
UngroupCall
ResetWantsHoldMusic
SwapCalls
UpdateCallModel
DeviceUnavailable
EndActiveAndAnswer
EndHeldAndAnswer
DisconnectCurrentCallAndActivateHeld
DisconnectAllCalls
ResetState
HardPauseDigitsAvailability
SendHardPauseDigits
UpdateRemoteCallState
SuppressRingtone
RequestCallContext
CallStartedConnecting
PushHostedCalls
PullHostedCalls
PushRelayingCalls
UpdateCallContext
NeedsManualInCallSoundsChange
InvitationSent
HoldActiveAndAnswer
UpdateCallDisplayContext
SetUplinkMuted
UpdateRemoteUplinkMuted
UpdateSystemVolume
UpdateSupportsTTYWithVoice
SetTTYType
RequestAction
UpdateRoutes
PickRoute
value
hasType
Ti,N,V_type
hasValue
T@"NSString",&,N,V_value
None
Generic
PhoneNumber
EmailAddress
backingCallSourceIdentifier
T@"NSString",R,C,N,V_backingCallSourceIdentifier
backingCallSource
T@"CXCallSource",&,N,V_backingCallSource
displayCallSourceIdentifier
T@"NSString",C,N,V_displayCallSourceIdentifier
mergedCallUpdate
T@"CXCallUpdate",&,N,V_mergedCallUpdate
pauseDigitsQueue
T@"CSDPauseDigitsQueue",&,N,V_pauseDigitsQueue
TB,N,GisVideo,V_video
wantsStagingArea
TB,N,V_wantsStagingArea
proxyAVAudioSession
T@"AVAudioSession",R,N
providerCallDelegate
T@"<CSDProviderCallDelegate>",W,N,V_providerCallDelegate
held
TB,N,GisHeld,V_held
Ti,N,V_ttyType
callGroupUUID
T@"NSUUID",C,N,V_callGroupUUID
TB,N,V_sendingVideo
underlyingUplinkMuted
TB,N,GisUnderlyingUplinkMuted,V_underlyingUplinkMuted
T@"CXCallFailureContext",&,N,V_failureContext
com.apple.request.hipuncap
v16@?0@?<v@?>8
gk-invitation-break-before-make-timeout
StoreDemoMode
com.apple.demo-settings
RetailDemoNotification
CALL_ENDED
CALL_ENDED_DEMO_EXPLANATION
breakBeforeMakeTimeout
Td,R,N
callDurationLimitTimer
T@"NSTimer",&,V_callDurationLimitTimer
audioMutedForHoldMusic
TB,N,GisAudioMutedForHoldMusic,V_audioMutedForHoldMusic
requestCLTMThrottleUncapToken
Ti,N,V_requestCLTMThrottleUncapToken
callCenter
T@"TUCallCenter",R,N
T@"<TUCallContainerPrivate>",R,N
routeManager
T@"CSDRouteManager",R,N
wantsBreakBeforeMake
setUpBreakBeforeMakeTimeout
T@?,C,N,V_setUpBreakBeforeMakeTimeout
ShouldSuppress
com.apple.telephonyutilities.callservicesd.statusbarmanager
deviceSupported
TB,R,N,GisDeviceSupported
resolver
T@"<CSDStatusBarResolver>",&,N,V_resolver
assertion
T@"SBSStatusBarStyleOverridesAssertion",&,N,V_assertion
applicationStateMonitor
T@"BKSApplicationStateMonitor",&,N,V_applicationStateMonitor
timestamp
bundle_id
failure_reason
action_type
provider_was_reset
hasTimestamp
TQ,N,V_timestamp
hasBundleId
bundleId
T@"NSString",&,N,V_bundleId
hasFailureReason
failureReason
TQ,N,V_failureReason
hasActionType
actionType
TQ,N,V_actionType
hasProviderWasReset
providerWasReset
TB,N,V_providerWasReset
T@"<CSDIDSGroupSessionProviderDelegate>",W,N
participantDestinationIDs
T@"NSArray",R,C,N
TI,R,N
destination
T@"IDSGroupSession",&,N,V_session
groupID
T@"NSString",R,C,N,V_groupID
account
T@"IDSAccount",R,N,V_account
T@"NSString",R,C,N,V_callerID
T@"NSArray",C,N,V_participantDestinationIDs
T@"<CSDIDSGroupSessionProviderDelegate>",W,N,V_delegate
data
T@"NSData",&,N,V_data
completion
T@?,C,N,V_completion
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-1096.3.2/TUCallServicesDaemon/CSDRelayIDSDualSession.m
Use another initializer instead
forceBTClassic
non-nil
remoteDestination
T@"IDSDestination",&,N,V_remoteDestination
remoteDevice
T@"IDSDevice",&,N,V_remoteDevice
pendingData
T@"NSMutableArray",R,N,V_pendingData
identifiers
T@"NSMutableSet",R,N,V_identifiers
blocksPendingTransportAvailability
T@"NSMutableArray",R,N,V_blocksPendingTransportAvailability
hasStarted
TB,N,V_hasStarted
hasReceivedAccept
TB,N,V_hasReceivedAccept
acceptPayloadData
T@"NSData",C,N,V_acceptPayloadData
T@"<CSDRelayIDSDualSessionDelegate>",W,N,V_delegate
allIdentifiers
com.apple.telephonyutilities.callservicesd.thumpercapabilitiesmonitor
NPSDomainAccessor
NanoPreferencesSync
thumperCallingAllowedOnDefaultPairedDevice
thumperCallingCapabilitiesStates
PreviousDefaultPairedDeviceUniqueID
uniqueIDOverride
com.apple.telephonyutilities.callservicesd.thumperpushhandler.secondarydevicethumpersupported
THUMPER_CALLING
NOT_NOW
TURN_ON
MAKE_RECEIVE_THUMPER_CELLULAR_FOR_CARRIER_%@
MAKE_RECEIVE_THUMPER_FOR_CARRIER_%@
MAKE_RECEIVE_THUMPER_CELLULAR
MAKE_RECEIVE_THUMPER
v16@?0@"IMUserNotification"8
com.apple.telephonyutilities.callservicesd.thumperpushhandler.secondarydevicethumperenabled
THUMPER_EMERGENCY_ADDRESS_INFO_TITLE
THUMPER_EMERGENCY_ADDRESS_INFO_MESSAGE
PREFERENCES_BUTTON_TITLE
PSFaceTimeSettingsDetail
Preferences
domainAccessor
T@"NPSDomainAccessor",&,N,V_domainAccessor
T@"<CSDThumperCapabilitiesMonitorDataSource>",W,N,V_dataSource
<%@ %p invite=%d suppressUI=%d videoEnabled=%d wantsStagingArea=%d upgrade=%d momentsAvailable=%d upgradeSessionUUID=%@>
invitation
TB,N,GisInvitation,V_invitation
TB,N,V_shouldSuppressInCallUI
TB,N,GisVideoEnabled,V_videoEnabled
upgrade
TB,N,GisUpgrade,V_upgrade
TB,N,GisInitiator,V_initiator
TB,N,GisMomentsAvailable,V_momentsAvailable
T@"NSUUID",C,N,V_messagesGroupUUID
T@"NSUUID",C,N,V_upgradeSessionUUID
com.apple.telephonyutilities.callservicesd.accountscontroller
    faceTimeIDMatchesAppleID: %@
    faceTimeAudioAvailability: %ld
    faceTimeVideoAvailability: %ld
    outgoingCallerID: %@
IMStringIsPhoneNumber
IMFoundation
outgoingCallerID
T@"NSString",C,N,V_outgoingCallerID
T@"<CSDAccountsControllerDelegate>",W,N,V_delegate
faceTimeIDMatchesAppleID
faceTimeAudioAvailable
TB,R,N,GisFaceTimeAudioAvailable
faceTimeVideoAvailable
TB,R,N,GisFaceTimeVideoAvailable
T@"<CSDIDSDualSessionProviderDelegate>",W,N
shouldUseSocketForTransport
socket
initialLinkType
invitationTimeout
T@"IDSSession",R,N,V_session
T@"<CSDIDSDualSessionProviderDelegate>",W,N,V_delegate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-1096.3.2/TUCallServicesDaemon/CSDPauseDigits.m
%s is not available. Use a designated initializer instead.
-[CSDPauseDigits init]
<%@ %p digits=%@ isHardPause=%d>
digits
T@"NSString",C,N,V_digits
hardPause
TB,N,GisHardPause,V_hardPause
tuLabeledHandle
T@"TULabeledHandle",R,N
com.apple.telephonyutilities.callservicesd.callprovidermanagerxpcserver
v16@?0@"CSDClient"8
com.apple.telephonyutilities.callservicesdaemon.callprovidermanager
v24@?0@"CSDClient"8@"<TUCallProviderManagerXPCClient>"16
clientManager
T@"CSDClientManager",R,N,V_clientManager
providerManager
T@"CSDCallProviderManager",R,N,V_providerManager
com.apple.private.alloy.facetime.video
tuConversationMember
T@"TUConversationMember",R,N
@"CSDAVConference"8@?0
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-1096.3.2/TUCallServicesDaemon/CSDIDSChat.m
Cannot create an incoming chat with an outgoing session: %@
Cannot create an outgoing chat with an incoming session: %@
disableFaceTimeKeyExchange
T@"<CSDIDSChatDelegate>",W,N
sessionUUID
T@"NSString",R,N
T@"TUHandle",R,N
outgoing
TB,R,N,GisOutgoing
T@"CXCallFailureContext",R,N
TB,R,N,GisConnected
T@"NSUUID",C,N
TB,N,GisRelaying
TB,N,GisRemoteMomentsAvailable
conference
T@"<CSDAVConference>",&,N,V_conference
T@"CSDExternalIDSDualSession",R,N,V_session
shouldStartAudioPaused
TB,N,V_shouldStartAudioPaused
shouldStartVideoPaused
TB,N,V_shouldStartVideoPaused
TB,N,V_mayRequireBreakBeforeMake
TB,N,V_hasSentInvitation
dateReceivedFirstRemoteFrame
T@"NSDate",&,N,V_dateReceivedFirstRemoteFrame
T@"NSDictionary",R,C,N,V_remoteInviteDictionary
invitedPushTokens
T@"NSArray",C,N,V_invitedPushTokens
inviteCompletion
T@?,C,N,V_inviteCompletion
conferenceCreationBlock
T@?,C,N,V_conferenceCreationBlock
T@"<CSDIDSChatDelegate>",W,N,V_delegate
T@"TUHandle",R,N,V_handle
TB,R,N,GisOutgoing,V_outgoing
TB,N,GisMuted,V_muted
TB,N,GisRemoteUplinkMuted,V_remoteUplinkMuted
TB,N,GisRemoteMomentsAvailable,V_remoteMomentsAvailable
T@"NSUUID",C,N,V_localSenderIdentityUUID
Unknown
Invite
<%@ %p 
%@=%@
csCallingAvailable
TB,N,GisCSCallingAvailable,V_csCallingAvailable
voLTECallingAvailable
TB,N,GisVoLTECallingAvailable,V_voLTECallingAvailable
wiFiCallingAvailable
TB,N,GisWiFiCallingAvailable,V_wiFiCallingAvailable
wiFiEmergencyCallingAllowed
TB,N,GisWiFiEmergencyCallingAllowed,V_wiFiEmergencyCallingAllowed
wiFiEmergencyCallingAvailable
TB,N,GisWiFiEmergencyCallingAvailable,V_wiFiEmergencyCallingAvailable
protoCallModelState
protoService
protoWantsHoldMusic
protoCannotBeAnswered
protoDTMFKey
protoDisconnectedReason
OBSOLETE_conferenceIdentifier
protoVoicemail
callerNameFromNetwork
protoCall
hardPauseDigits
hardPauseState
receivedMessageType
protoProtocolVersion
protoShouldSuppressRingtone
dummyPayload
hostCallCreationTime
messageSendTime
protoNeedsManualInCallSounds
protoCannotRelayAudioOrVideoOnPairedDevice
protoExpectedEndpointOnMessagingDevice
contactIdentifier
protoCallCapabilitiesState
protoSoundRegion
protoEmergency
otherUniqueProxyIdentifiers
protoCallModel
protoSOS
protoDisplayContext
inviteData
protoProvider
protoVideo
protoUplinkMuted
protoRemoteUplinkMuted
systemVolume
localSenderIdentityUUIDString
localSenderIdentityAccountUUIDString
protoTTYType
protoSupportsTTYWithVoice
requestActionType
routes
route
endpointIDSDestinationURIs
isoCountryCode
hasUniqueProxyIdentifier
T@"NSString",&,N,V_uniqueProxyIdentifier
hasDestinationID
T@"NSString",&,N,V_destinationID
hasSourceIdentifier
T@"NSString",&,N,V_sourceIdentifier
hasProtoCallModelState
T@"CSDMessagingCallModelState",&,N,V_protoCallModelState
hasProtoService
TI,N,V_protoService
hasProtoWantsHoldMusic
TB,N,V_protoWantsHoldMusic
hasProtoCannotBeAnswered
TB,N,V_protoCannotBeAnswered
hasProtoDTMFKey
T@"NSData",&,N,V_protoDTMFKey
hasProtoDisconnectedReason
TI,N,V_protoDisconnectedReason
hasOBSOLETEConferenceIdentifier
oBSOLETEConferenceIdentifier
T@"NSString",&,N,V_oBSOLETEConferenceIdentifier
hasProtoVoicemail
TB,N,V_protoVoicemail
hasCallerNameFromNetwork
T@"NSString",&,N,V_callerNameFromNetwork
protoCalls
T@"NSMutableArray",&,N,V_protoCalls
hasHardPauseDigits
T@"NSString",&,N,V_hardPauseDigits
hasHardPauseState
TI,N,V_hardPauseState
hasReceivedMessageType
Ti,N,V_receivedMessageType
hasProtoProtocolVersion
TI,N,V_protoProtocolVersion
hasProtoShouldSuppressRingtone
TB,N,V_protoShouldSuppressRingtone
hasDummyPayload
T@"NSData",&,N,V_dummyPayload
hasHostCallCreationTime
Td,N,V_hostCallCreationTime
hasMessageSendTime
Td,N,V_messageSendTime
hasProtoNeedsManualInCallSounds
TB,N,V_protoNeedsManualInCallSounds
hasProtoCannotRelayAudioOrVideoOnPairedDevice
TB,N,V_protoCannotRelayAudioOrVideoOnPairedDevice
hasProtoExpectedEndpointOnMessagingDevice
TB,N,V_protoExpectedEndpointOnMessagingDevice
hasContactIdentifier
T@"NSString",&,N,V_contactIdentifier
hasProtoCallCapabilitiesState
T@"CSDMessagingCallCapabilitiesState",&,N,V_protoCallCapabilitiesState
hasProtoSoundRegion
TI,N,V_protoSoundRegion
hasProtoEmergency
TB,N,V_protoEmergency
T@"NSMutableArray",&,N,V_otherUniqueProxyIdentifiers
hasProtoCallModel
T@"CSDMessagingCallModel",&,N,V_protoCallModel
hasProtoSOS
TB,N,V_protoSOS
T@"NSMutableArray",&,N,V_providers
hasProtoDisplayContext
T@"CSDMessagingCallDisplayContext",&,N,V_protoDisplayContext
hasInviteData
T@"CSDMessagingAVConferenceInviteData",&,N,V_inviteData
hasProtoProvider
T@"CSDMessagingCallProvider",&,N,V_protoProvider
hasProtoVideo
TB,N,V_protoVideo
hasProtoUplinkMuted
TB,N,V_protoUplinkMuted
hasProtoRemoteUplinkMuted
TB,N,V_protoRemoteUplinkMuted
hasSystemVolume
Tf,N,V_systemVolume
hasLocalSenderIdentityUUIDString
T@"NSString",&,N,V_localSenderIdentityUUIDString
T@"NSMutableArray",&,N,V_remoteParticipantHandles
hasLocalSenderIdentityAccountUUIDString
T@"NSString",&,N,V_localSenderIdentityAccountUUIDString
hasProtoTTYType
TI,N,V_protoTTYType
hasProtoSupportsTTYWithVoice
TB,N,V_protoSupportsTTYWithVoice
hasRequestActionType
Ti,N,V_requestActionType
T@"NSMutableArray",&,N,V_routes
hasRoute
T@"CSDMessagingRoute",&,N,V_route
T@"NSMutableArray",&,N,V_endpointIDSDestinationURIs
hasIsoCountryCode
T@"NSString",&,N,V_isoCountryCode
%@.%@.%p
behaviorResolutionService
T@"DNDEventBehaviorResolutionService",R,N,V_behaviorResolutionService
networkCountryCode
localizedName
bundleURLString
maximumCallGroups
maximumCallsPerCallGroup
supportsAudioOnly
supportsAudioAndVideo
supportsEmergency
supportsVoicemail
ringtoneSoundURLString
originalRingtoneSoundURLString
handoffIdentifier
protoSupportedHandleType
emergencyLabeledHandles
supportsRecents
prioritizedSenderIdentities
emergencyHandles
T@"NSString",&,N,V_identifier
hasLocalizedName
T@"NSString",&,N,V_localizedName
hasBundleURLString
T@"NSString",&,N,V_bundleURLString
hasMaximumCallGroups
TI,N,V_maximumCallGroups
hasMaximumCallsPerCallGroup
TI,N,V_maximumCallsPerCallGroup
hasSupportsAudioOnly
TB,N,V_supportsAudioOnly
hasSupportsAudioAndVideo
TB,N,V_supportsAudioAndVideo
hasSupportsEmergency
TB,N,V_supportsEmergency
hasSupportsVoicemail
TB,N,V_supportsVoicemail
hasRingtoneSoundURLString
T@"NSString",&,N,V_ringtoneSoundURLString
hasOriginalRingtoneSoundURLString
T@"NSString",&,N,V_originalRingtoneSoundURLString
handoffIdentifiers
T@"NSMutableArray",&,N,V_handoffIdentifiers
protoSupportedHandleTypesCount
protoSupportedHandleTypes
T@"NSMutableArray",&,N,V_emergencyLabeledHandles
hasSupportsRecents
TB,N,V_supportsRecents
T@"NSMutableArray",&,N,V_prioritizedSenderIdentities
T@"NSMutableArray",&,N,V_emergencyHandles
    dialingIDSDevice: %@
@"CSDMessagingRelayMessage"8@?0
v20@?0i8^B12
v20@?0B8@"NSDictionary"12
sessionMessenger
T@"CSDRelayIDSSessionMessenger",R,N,V_sessionMessenger
pairedDeviceMessenger
T@"CSDRelayPairedDeviceMessenger",R,N,V_pairedDeviceMessenger
dialingIDSDevice
T@"IDSDevice",&,N,V_dialingIDSDevice
T@"<CSDRelayMessagingControllerDelegate>",W,N,V_delegate
clientMessagingDelegate
T@"<CSDRelayMessagingControllerClientMessagingDelegate>",W,N,V_clientMessagingDelegate
hostMessagingDelegate
T@"<CSDRelayMessagingControllerHostMessagingDelegate>",W,N,V_hostMessagingDelegate
commonMessagingDelegate
T@"<CSDRelayMessagingControllerCommonMessagingDelegate>",W,N,V_commonMessagingDelegate
relayInviteDictionary
faceTimeInviteDictionary
com.apple.notifyd.matching
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.telephonyutilities.callservicesd.kFZACAppBundleIdentifierLaunchNotification
com.apple.distnoted.matching
com.apple.callhistory.save.distributed.notification
com.apple.telephonyutilities.callservicesdaemon.app-installed
com.apple.telephonyutilities.callservicesdaemon.app-uninstalled
com.apple.CTTelephonyCenter
com.apple.telephonyutilities.callservicesd.reportingcontroller
proximity-sensor
com.apple.telephonyutilities.callservicesdaemon.connectionrequest
com.apple.telephonyutilities.callservicesd.calls
com.apple.language.changed
callStateMonitor
T@"CSDCallStateMonitor",&,N,V_callStateMonitor
T@"CSDRelayMessagingController",&,N,V_relayMessagingController
relayClientController
T@"CSDRelayClientController",&,N,V_relayClientController
relayHostController
T@"CSDRelayHostController",&,N,V_relayHostController
relayCommonController
T@"CSDRelayCommonController",&,N,V_relayCommonController
callDirectoryManager
T@"CSDCallDirectoryManager",&,N,V_callDirectoryManager
voipApplicationController
T@"CSDVoIPApplicationController",&,N,V_voipApplicationController
momentsController
T@"CSDMomentsController",&,N,V_momentsController
userNotificationController
T@"CSDUserNotificationController",&,N,V_userNotificationController
signalHandlerDispatchSources
T@"NSMutableArray",&,N,V_signalHandlerDispatchSources
orientationMonitor
T@"CSDOrientationMonitor",&,N,V_orientationMonitor
proximityController
T@"CSDProximityController",&,N,V_proximityController
raiseToAnswerController
T@"CSDRaiseToAnswerController",&,N,V_raiseToAnswerController
T@"CSDAudioController",&,N,V_audioController
statusBarManager
T@"CSDStatusBarManager",&,N,V_statusBarManager
availability
hasAvailability
Ti,N,V_availability
hasPhotoRequestSuccessCount
TI,N,V_photoRequestSuccessCount
hasPhotoRequestFailureCount
TI,N,V_photoRequestFailureCount
hasMedianRequestDuration
Td,N,V_medianRequestDuration
hasMeanRequestDuration
Td,N,V_meanRequestDuration
CSDMomentsAvailabilityUnknown
CSDMomentsAvailabilityUnavailable
CSDMomentsAvailabilityRestricted
CSDMomentsAvailabilityAvailable
CSDIDSPendingChatKey
CSDIDSPendingCallKey
CSDIDSPendingChatUUIDKey
CSDIDSPendingMessageDidReceiveInviteNotification
CSDIDSPendingMessageDidReceiveCancelNotification
CSDGroupIDSPendingMessageDidReceiveInviteNotification
@"<CSDIDSDualSessionProvider>"24@?0@"IDSSession"8@"NSObject<OS_dispatch_queue>"16
NetworkAvailabilityCheckOverrideValue
allowed
ignored
audio
CADisplay
QuartzCore
T@"<CSDIDSProviderDelegateCapabilities>",R,N,V_capabilities
mutableChats
T@"NSMutableOrderedSet",R,N,V_mutableChats
shouldOverrideNetworkAsAvailable
TB,R,N,V_shouldOverrideNetworkAsAvailable
providerDidBegin
T@?,C,N,V_providerDidBegin
incomingSessionProviderGenerator
T@?,C,N,V_incomingSessionProviderGenerator
incomingChatGenerator
T@?,C,N,V_incomingChatGenerator
SKEBlob
mediaBlob
callInfoBlob
hasSKEBlob
sKEBlob
T@"NSData",&,N,V_sKEBlob
hasMediaBlob
T@"NSData",&,N,V_mediaBlob
hasCallInfoBlob
T@"NSData",&,N,V_callInfoBlob
CSDIDSDualSessionStateChangedNotification
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-1096.3.2/TUCallServicesDaemon/CSDIDSDualSession.m
-[CSDIDSDualSession init]
%@ isInitiator=%d state=%d remoteProtocolVersion=%@>
remoteProtocolVersionNumber
T@"NSNumber",&,N,V_remoteProtocolVersionNumber
Ti,N,V_endedReason
sessionProvider
T@"<CSDIDSDualSessionProvider>",R,N,V_sessionProvider
T@"<CSDIDSDualSessionDelegate>",W,N,V_delegate
underlyingErrorCode
TB,R,N,GisInitiator,V_initiator
transport
T@"CSDIDSTransport",R,N
remoteProtocolVersion
com.apple.telephonyutilities.callservicesd.awdreporter
v20@?0I8@"PBCodable"12
@"PBCodable"8@?0
v12@?0I8
kCallSubType
kCallSubTypeWifi
kCallSubTypeVoLTE
kCallSubTypeTelephony
serverConnection
T@"AWDServerConnection",&,N,V_serverConnection
T@"NSMutableDictionary",R,N,V_relayDeviceRouteChangesByCallUUID
T@"<CSDReporterDataSource>",W,N,V_dataSource
T@"<CSDRelayIDSMessengerDelegate>",W,N,V_delegate
%@=%ld
@"NSString"16@?0@"NSString"8
phoneNumberMCCToISOCountryCodeTransformBlock
accountID
T@"NSString",C,N,V_accountID
primaryDeviceID
T@"NSString",C,N,V_primaryDeviceID
phoneNumberURI
T@"NSString",C,N,V_phoneNumberURI
availableDeviceSlots
Tq,N,V_availableDeviceSlots
allowedSecondaryDeviceIDs
T@"NSSet",C,N,V_allowedSecondaryDeviceIDs
dictionaryRepresentation
T@"NSString",C,D,N
Tq,D,N
T@"NSSet",C,D,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-1096.3.2/TUCallServicesDaemon/CSDFaceTimeIDSProviderDelegate.m
%s is not available. Use an available initializer instead.
-[CSDFaceTimeIDSProviderDelegate init]
B16@?0@"IDSAccount"8
@"<CSDIDSDualSessionProvider>"40@?0@"IDSAccount"8@"NSSet"16@"NSDictionary"24@"NSObject<OS_dispatch_queue>"32
@"<CSDIDSChat>"48@?0@"CSDExternalIDSDualSession"8@"NSUUID"16@"TUHandle"24B32B36@"NSUUID"40
accounts
T@"NSSet",C,N,V_accounts
T@"TUCallProviderManager",R,N,V_callProviderManager
T@"<CSDFaceTimeIDSProviderDelegateCapabilities>",R,N,V_capabilities
telephonySenderIdentities
T@"NSOrderedSet",C,N,V_telephonySenderIdentities
chatsPendingUpgrade
T@"NSMutableSet",R,N,V_chatsPendingUpgrade
T@"<CSDFaceTimeIDSProviderDelegateServerBag>",&,N,V_serverBag
T@?,C,N,V_isAccountActive
T@?,C,N,V_outgoingSessionProviderGenerator
T@?,C,N,V_outgoingChatGenerator
upgradeTimeout
Td,N,V_upgradeTimeout
CSDFileTransferringMetadataKeyIsDirectory
CSDFileTransferringMetadataKeyUserData
com.apple.telephonyutilities.callservicesd.csdfiletransfercontroller
v16@?0@"NSURL"8
directory
file
v16@?0@"IMFileCopier"8
T@"<CSDFileTransferringDelegate>",W,N
T@"IDSService",&,N,V_service
clientFileURLByIdentifier
T@"NSMutableDictionary",R,N,V_clientFileURLByIdentifier
temporaryFileURLByClientFileURL
T@"NSMutableDictionary",R,N,V_temporaryFileURLByClientFileURL
T@"<CSDFileTransferringDelegate>",W,N,V_delegate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-1096.3.2/TUCallServicesDaemon/CSDCallSourceFetcher.m
%s is not available. Use another initializer instead.
-[CSDCallSourceFetcher init]
serialQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
timeout
Td,N,V_timeout
pendingCompletions
T@"NSMutableDictionary",&,N,V_pendingCompletions
T@"<CSDCallSourceFetcherDataSource>",W,N,V_dataSource
iPod
IPOD
iPad
IPAD
iPhone
IPHONE
THUMPER_SERVICE_NAME
ENTER_CODE_FOR_%@
ALLOW
CANCEL
PrimaryDeviceNotification
THUMPER_PUSH_HANDLER_CONSENT_ALERT_MESSAGE
THUMPER_PUSH_HANDLER_CONSENT_ALERT_TITLE
THUMPER_PUSH_HANDLER_CONSENT_ALERT_ENABLE
THUMPER_PUSH_HANDLER_CONSENT_ALERT_CANCEL
SecondaryDeviceNotification
RECEIVE_THUMPER_CALLS_FROM_PHONE_NUMBER_ENTER_CODE_%@_%@
THUMPER_PIN_EXCHANGE_REQUEST_FAILED_TITLE
THUMPER_PIN_EXCHANGE_REQUEST_FAILED_MESSAGE
thumperCallingAllowedOnDefaultPairedDeviceDefault
TB,N,V_thumperCallingAllowedOnDefaultPairedDeviceDefault
protoStatus
protoConferenced
protoTimeConnected
protoOutgoing
protoHasSentInvitation
hasProtoStatus
TI,N,V_protoStatus
hasProtoConferenced
TB,N,V_protoConferenced
hasProtoTimeConnected
Td,N,V_protoTimeConnected
hasProtoOutgoing
TB,N,V_protoOutgoing
hasProtoHasSentInvitation
TB,N,V_protoHasSentInvitation
kCMSessionAudioMode_RemoteVoiceChat
relayDelegate
T@"<CSDRelayCallDelegate>",W,N,V_relayDelegate
T@"TUHandle",&,N,V_handle
T@"NSString",C,N,V_isoCountryCode
callStatus
Ti,N,V_callStatus
backingProvider
T@"TUCallProvider",&,N,V_backingProvider
TB,N,GisOutgoing,V_outgoing
TB,N,GisVoicemail,V_voicemail
TB,N,GisEmergency,V_emergency
TB,N,GisSOS,SsetSOS:,V_sos
T@"NSString",C,N,V_callerNameFromNetwork
TB,N,V_needsManualInCallSounds
T@"TUCallDisplayContext",C,N,V_displayContext
cannotRelayAudioOrVideo
TB,N,V_cannotRelayAudioOrVideo
TQ,N,V_initialLinkType
T@"NSUUID",&,N,V_localSenderIdentityUUID
T@"NSUUID",&,N,V_localSenderIdentityAccountUUID
T@"NSSet",C,N,V_remoteParticipantHandles
TB,N,V_supportsTTYWithVoice
com.apple.telephonyutilities.callservicesd.callhistorymanagerxpcserver
com.apple.telephonyutilities.callservicesdaemon.callhistorymanager
-[CSDCallHistoryManagerXPCServer updateOutgoingLocalParticipantUUID:forCallsWithOutgoingLocalParticipantUUID:]
T@"CSDCallHistoryManager",R,N,V_callHistoryManager
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-1096.3.2/TUCallServicesDaemon/CSDPauseDigitsQueue.m
-[CSDPauseDigitsQueue init]
 baseDestinationID=%@
 originalPauseDigitsString=%@
 pauseDigits=%@
baseDestinationID
T@"NSString",C,N,V_baseDestinationID
originalPauseDigitsString
T@"NSString",C,N,V_originalPauseDigitsString
pauseDigits
T@"NSMutableArray",&,N,V_pauseDigits
T@"<CSDPauseDigitsQueueDelegate>",W,N,V_delegate
nextPauseDigits
T@"CSDPauseDigits",R,N
hasQueuedHardPauseDigits
** TUAssertion failure: %@
callservicesd is attempting to create an XPC client for itself.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-1096.3.2/TUCallServicesDaemon/CSDXPCClient.m
%@ entitlementCapabilities=%@
connection
T@"NSXPCConnection",R,N
entitledCapabilities
T@"NSSet",R,C,N,V_entitledCapabilities
RTTTelephonyUtilities
RTTUtilities
transportMethod
utilityProvider
T@"RTTTelephonyUtilities",R,N
T@"TUCallProvider",R,C,N
supportedHandleTypes
emergencyTUHandles
T@"NSArray",C,N
emergencyTULabeledHandles
prioritizedTUSenderIdentities
T@"NSOrderedSet",C,N,SsetPrioritizedTUSenderIdentities:
personNameComponents
T@"NSPersonNameComponents",R,C,N
CSDIDSInitialLinkTypeKey
CSDIDSInputAudioPowerSpectrumTokenKey
CSDIDSOutputAudioPowerSpectrumTokenKey
sanitizedCallUpdate
T@"CXCallUpdate",R,C,N
remoteIDSDestination
members
message
messagesGroupUUIDString
T@"NSMutableArray",&,N,V_members
hasMessage
T@"CSDMessagingConversationMessage",&,N,V_message
hasMessagesGroupUUIDString
T@"NSString",&,N,V_messagesGroupUUIDString
hasMessagesGroupName
T@"NSString",&,N,V_messagesGroupName
PHPhotoLibrary
PHAssetCreationRequest
PHAssetResourceCreationOptions
CallState
status
bundleID
providerIdentifier
providerContext
hostedOnCurrentDevice
endpointOnCurrentDevice
callStart
callStop
callForegrounded
callBackgrounded
callStateContext
T@"NSDictionary",&,N,V_callStateContext
visibilityContext
T@"NSDictionary",&,N,V_visibilityContext
eventBlock
T@?,C,N,V_eventBlock
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-1096.3.2/TUCallServicesDaemon/CSDFaceTimeProviderDelegate.m
-[CSDFaceTimeProviderDelegate init]
T@"TUContactsDataProvider",R,N,V_contactsDataProvider
T@"CSDConversationManager",R,N,V_conversationManager
conversationManagerXPCServer
T@"CSDConversationManagerXPCServer",R,N,V_conversationManagerXPCServer
faceTimeIDSProviderDelegate
T@"CSDFaceTimeIDSProviderDelegate",R,N,V_faceTimeIDSProviderDelegate
faceTimeIMAVProviderDelegate
T@"CSDFaceTimeIMAVProviderDelegate",R,N,V_faceTimeIMAVProviderDelegate
faceTimeConversationProviderDelegate
T@"CSDFaceTimeConversationProviderDelegate",R,N,V_faceTimeConversationProviderDelegate
T@"CXProvider",R,N,V_provider
payload
T@"NSDictionary",C,N,V_payload
T@"BKSProcessAssertion",&,N,V_assertion
applicationShouldPostIncomingCall
TB,R,N,V_applicationShouldPostIncomingCall
-[CSDVoIPApplication init] is not supported. Use -[CSDVoIPApplication initWithBundleIdentifier:] instead
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-1096.3.2/TUCallServicesDaemon/CSDVoIPApplication.m
13.0
<%@ %p bundleIdentifier=%@ environment=%@ client=%@ isRunning=%d token=%@ pendingMessageContextCount=%lu>
voip
applicationProxy
T@"LSApplicationProxy",R,N,V_applicationProxy
pendingMessageContexts
T@"NSMutableArray",R,N,V_pendingMessageContexts
T@"BKSApplicationStateMonitor",R,N,V_applicationStateMonitor
token
T@"NSData",C,N,V_token
running
TB,N,GisRunning,V_running
runningForeground
TB,N,GisRunningForeground,V_runningForeground
environment
T@"NSString",C,N,V_environment
client
T@"CSDClient",&,N,V_client
hasVoIPEntitlement
requiresStrictPolicyEnforcement
TB,R,N,V_requiresStrictPolicyEnforcement
namePrefix
givenName
middleName
familyName
nameSuffix
nickname
phoneticRepresentation
hasNamePrefix
T@"NSString",&,N,V_namePrefix
hasGivenName
T@"NSString",&,N,V_givenName
hasMiddleName
T@"NSString",&,N,V_middleName
hasFamilyName
T@"NSString",&,N,V_familyName
hasNameSuffix
T@"NSString",&,N,V_nameSuffix
hasNickname
T@"NSString",&,N,V_nickname
hasPhoneticRepresentation
T@"CSDMessagingPersonNameComponents",&,N,V_phoneticRepresentation
v16@?0i8I12
FACETIME_VIDEO_DURATION_PREAMBLE
FACETIME_AUDIO_DURATION_PREAMBLE
DURATION_PREAMBLE
T@"<CSDStatusBarResolverDelegate>",W,N
T@"CSDStatusBarDescriptor",R,N
processObserver
T@"<CSDProcessObserverProtocol>",R,N,V_processObserver
callDurationUpdateTimer
T@"NSTimer",&,N,V_callDurationUpdateTimer
T@"CSDStatusBarDescriptor",&,N,V_resolvedDescriptor
inCallServiceWantsStatusBarSuppression
inCallServiceWantsStatusBarSuppressionState
TQ,N,V_inCallServiceWantsStatusBarSuppressionState
inCallServiceApplicationState
TI,N,V_inCallServiceApplicationState
T@"TUCallCenter",R,N,V_callCenter
T@"<CSDStatusBarResolverDelegate>",W,N,V_delegate
CSDRelayConferenceLocalFrequencyChangedNotification
CSDRelayConferenceRemoteFrequencyChangedNotification
CSDRelayConferenceLocalMeterLevelChangedNotification
CSDRelayConferenceRemoteMeterLevelChangedNotification
CSDRelayConferenceMutedChangedNotification
CSDRelayConferenceSendingAudioChangedNotification
CSDRelayConferenceConnectionWillCloseNotification
CSDRelayConferenceConnectionDidCloseNotification
CSDRelayConferenceConnectionDidReceiveDataNotification
CSDRelayConferenceConnectionDidReceiveDataNotificationDataKey
com.apple.telephonyutilities
Conference cleaned up before handling a didStart with error: %@
T@"CSDRelayConferenceInterface",R,N
conferenceConnections
T@"NSMutableArray",&,N,V_conferenceConnections
conferencesAwaitingConnectionClose
T@"NSMutableSet",&,N,V_conferencesAwaitingConnectionClose
activeConference
T@"<CSDAVConference>",R,N
closeConnectionTimeout
Td,N,V_closeConnectionTimeout
prepareToStopTimeout
Td,N,V_prepareToStopTimeout
CallServices
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-1096.3.2/TUCallServicesDaemon/CSDSandboxExtensionDirectory.m
-[CSDSandboxExtensionDirectory init]
fileManager
T@"NSFileManager",&,N,V_fileManager
T@"NSURL",&,N,V_URL
name
CSDPinExchangeCompressedDataKey
CSDPinExchangeActionKey
CSDPinExchangeCallerIDKey
CSDPinExchangePinKey
CSDPinExchangeActionRequestPIN
CSDPinExchangeActionSendPIN
CSDPinExchangeActionOneTimeReminder
CSDPinExchangeActionApproved
CSDPinExchangeActionUnapproved
CSDPinExchangeActionCancelledPrimary
CSDPinExchangeActionCancelledSecondary
v20@?0B8@"NSString"12
com.apple.telephonyutilities.callservicesd.pinexchangeerror
INCORRECT_PIN_ENTERED
THUMPER_MISMATCHED_ACCOUNTS
MAX_SLOTS_FILLED
pendingCodesToDevicesForApproval
T@"NSMutableDictionary",&,V_pendingCodesToDevicesForApproval
pinExchangeDelegate
T@"<CSDPinExchangeDelegate>",&,V_pinExchangeDelegate
outgoingPinRequestIdentifier
T@"NSString",C,V_outgoingPinRequestIdentifier
completion_time_ms
hasCompletionTimeMs
completionTimeMs
TQ,N,V_completionTimeMs
hasState
TI,N,V_state
TI,N,V_failureReason
com.apple.telephonyutilities.callservicesd.callcapabilities
com.apple.telephonyutilities.callservicesdaemon.callcapabilities
State: %@
Telephony capabilities: %@
Accounts controller: %@
Paired Host Device State: %@
v24@?0@"CSDClient"8@"<TUCallCapabilitiesXPCClient>"16
-[CSDCallCapabilities setRelayCallingEnabled:]
-[CSDCallCapabilities setRelayCallingEnabled:forDeviceWithID:]
-[CSDCallCapabilities setWiFiCallingEnabled:forSenderIdentityWithUUID:]
-[CSDCallCapabilities setWiFiCallingRoamingEnabled:forSenderIdentityWithUUID:]
-[CSDCallCapabilities setVoLTECallingEnabled:forSenderIdentityWithUUID:]
-[CSDCallCapabilities setThumperCallingEnabled:forSenderIdentityWithUUID:]
-[CSDCallCapabilities setThumperCallingAllowed:onSecondaryDeviceWithID:forSenderIdentityWithUUID:]
-[CSDCallCapabilities setThumperCallingAllowedOnDefaultPairedDevice:forSenderIdentityWithUUID:]
-[CSDCallCapabilities endEmergencyCallbackMode]
-[CSDCallCapabilities invalidateAndRefreshWiFiCallingProvisioningURLForSenderIdentityWithUUID:]
-[CSDCallCapabilities invalidateAndRefreshThumperCallingProvisioningURLForSenderIdentityWithUUID:]
-[CSDCallCapabilities requestPinFromPrimaryDevice]
-[CSDCallCapabilities cancelPinRequestFromPrimaryDevice]
disableSupportsPrimaryCalling
forceSupportsPrimaryCalling
telephony
disableSupportsBasebandCalling
forceSupportsBasebandCalling
disableSupportsCellularData
forceSupportsCellularData
disableDisplayingTelephonyCallSupport
forceDisplayingTelephonyCallSupport
disableDisplayingFaceTimeAudioCallSupport
forceDisplayingFaceTimeAudioCallSupport
disableDisplayingFaceTimeVideoCallSupport
forceDisplayingFaceTimeVideoCallSupport
disableCanEnableWiFiCalling
forceCanEnableWiFiCalling
disableCanEnableVoLTECalling
forceCanEnableVoLTECalling
disableCanEnableThumperCalling
forceCanEnableThumperCalling
q24@?0@"TUCloudCallingDevice"8@"TUCloudCallingDevice"16
relayCallingDisabled
relayCallingDisabledForDeviceID
pairedHostDeviceState
localThumperAccounts
thumperCallingCapabilitiesStateByUUID
T@"CSDCallCapabilities",R,N
xpcListener
T@"NSXPCListener",R,N,V_xpcListener
accountsController
T@"CSDAccountsController",R,N,V_accountsController
telephonyCallCapabilities
T@"CSDTelephonyCallCapabilities",R,N,V_telephonyCallCapabilities
thumperPushHandler
T@"CSDThumperPushHandler",R,N,V_thumperPushHandler
thumperPinExchangeController
T@"CSDPinExchangeController",R,N,V_thumperPinExchangeController
thumperCapabilitiesMonitor
T@"CSDThumperCapabilitiesMonitor",R,N,V_thumperCapabilitiesMonitor
relayService
T@"<CSDIDSService>",R,N,V_relayService
thumperService
T@"<CSDIDSService>",R,N,V_thumperService
T@"TUCallCapabilitiesState",&,N,V_state
T@"TUCallCapabilitiesState",&,N,V_pairedHostDeviceState
T@"TUCallCapabilitiesState",R,N
CSDCallMayRequireBreakBeforeMakeChangedNotification
CSDCallHasStartedOutgoingChangedNotification
CSDCallHasAudioInterruptionChangedNotification
CSDCallLocalPreviewStoppedNotification
CSDCallsWillEnterBackgroundNotification
CSDCallEnteredForegroundNotification
CSDCallRemoteParticipantJoinedNotification
CSDCallRemoteParticipantLeftNotification
CSDCallMetricsKnownContact
CSDCallMetricsSiriSuggested
CSDCallMetricsReturnedCall
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-1096.3.2/TUCallServicesDaemon/CSDCall.m
dialRequest is invalid: %@
SFCoordinatedAlertRequest
Sharing
v28@?0@"NSError"8B16@"NSDictionary"20
v16@?0q8
T@"TUDialRequest",&,N,V_dialRequest
dynamicDisplayContext
T@"TUDynamicCallDisplayContext",&,N,V_dynamicDisplayContext
faceTimeIDStatusRefreshed
TB,N,V_faceTimeIDStatusRefreshed
uplinkWasExplicitlyMuted
TB,N,V_uplinkWasExplicitlyMuted
silencingUserInfo
T@"NSMutableDictionary",&,N,V_silencingUserInfo
T@"<CSDCallDelegate>",W,N,V_delegate
T@"CSDCallDataSource",W,N,V_dataSource
callStatusFromUnderlyingSource
hasStartedOutgoing
dateStartedOutgoing
T@"NSDate",&,N,V_dateStartedOutgoing
shouldOverrideCallStatus
callStatusFromOverride
isSendingAudio
TB,N,V_isSendingAudio
audioInterruptionProviderType
audioInterruptionOperationMode
hasAudioInterruption
TB,N,V_hasAudioInterruption
hasAudioFinished
TB,N,V_hasAudioFinished
handoffDynamicIdentifier
providerProcessIdentifier
cxCall
T@"CXCall",R,N
bytesOfDataUsed
Tq,N,V_bytesOfDataUsed
TQ,R,N,V_initialLinkType
uplinkMutedSetTime
Td,N,V_uplinkMutedSetTime
remoteUplinkMutedSetTime
Td,N,V_remoteUplinkMutedSetTime
T@"NSSet",C,N,V_activeRemoteParticipants
relayClientTransport
T@"CSDIDSTransport",&,N,V_relayClientTransport
expectedRelayClientDestination
T@"IDSDestination",&,N,V_expectedRelayClientDestination
CSDRouteManagerPreferredRouteChangedNotification
com.apple.telephonyutilities.callservicesd.routemanager
AVSystemController_PickableRoutesDidChangeNotification
Celestial
AVSystemController_PreferredExternalRouteDidChangeNotification
AVSystemController_CarPlayIsConnectedDidChangeNotification
AVAudioSessionMediaServicesWereResetNotification
AVFoundation
PhoneCall
StarkCapability
AVSystemController
AVSystemController_CarPlayIsConnectedAttribute
anyPreferredRouteAvailableForAnyCall
TB,R,N,GisAnyPreferredRouteAvailableForAnyCall
anyPreferredRouteAvailableAndActiveForAnyCall
TB,R,N,GisAnyPreferredRouteAvailableAndActiveForAnyCall
carModeActive
TB,R,N,GisCarModeActive
carPlayRouteAvailable
TB,R,N,GisCarPlayRouteAvailable
anyVehicleRouteAvailableForAnyCall
TB,R,N,GisAnyVehicleRouteAvailableForAnyCall
anyRouteAvailableWithOtherConnectedDevicesForAnyCall
TB,R,N,GisAnyRouteAvailableWithOtherConnectedDevicesForAnyCall
anyBluetoothHeadphoneRouteAvailableForAnyCall
TB,R,N,GisAnyBluetoothHeadphoneRouteAvailableForAnyCall
audioRouteCollections
T@"NSDictionary",C,N,V_audioRouteCollections
carPlayDeviceConnected
TB,N,GisCarPlayDeviceConnected,V_carPlayDeviceConnected
automaticCarDNDStatus
T@"CARAutomaticDNDStatus",&,N,V_automaticCarDNDStatus
TB,N,GisCarModeActive,V_carModeActive
csd_telephony
TB,R,N,Gcsd_isTelephony
csd_thumper
TB,R,N,Gcsd_isThumper
csd_unknown
TB,R,N,Gcsd_isUnknown
UUIDString
groupUUIDString
hasUUIDString
uUIDString
T@"NSString",&,N,V_uUIDString
hasGroupUUIDString
T@"NSString",&,N,V_groupUUIDString
hasLocallyCreated
TB,N,V_locallyCreated
hasInitiator
T@"CSDMessagingHandle",&,N,V_initiator
hasLocalMember
T@"CSDMessagingConversationMember",&,N,V_localMember
T@"NSMutableArray",&,N,V_remoteMembers
T@"NSMutableArray",&,N,V_activeRemoteParticipants
com.apple.telephonyutilities.callservicesd.conversationmanager
@"CSDIDSGroupSessionProvider"48@?0@"NSString"8@"NSArray"16@"NSString"24@"IDSAccount"32@"NSObject<OS_dispatch_queue>"40
@"CSDConversation"80@?0@"NSUUID"8@"NSUUID"16@"NSUUID"24B32@"TUConversationMember"36@"TUHandle"44@"NSSet"52@"CSDIDSGroupSession"60@"NSObject<OS_dispatch_queue>"68B76
B40@?0@"NSData"8@"IDSAccount"16@"NSSet"24@"NSString"32
@"NSSet"8@?0
@"TUHandle"8@?0
v68@?0@"NSUUID"8@"NSUUID"16@"NSUUID"24B32@"TUConversationMember"36@"TUHandle"44@"NSArray"52@"NSArray"60
v32@?0@"NSUUID"8@"CSDConversation"16^B24
T@"CSDIDSService",&,N,V_service
mutableConversationsByUUID
T@"NSMutableDictionary",R,N,V_mutableConversationsByUUID
delegateToQueue
T@"NSMapTable",&,N,V_delegateToQueue
persistenceController
T@"CSDConversationPersistenceController",R,N,V_persistenceController
lockStateObserver
T@"CSDDeviceLockStateObserver",R,N,V_lockStateObserver
T@"TUCallProviderManager",&,N,V_callProviderManager
groupSessionProviderCreationBlock
T@?,C,N,V_groupSessionProviderCreationBlock
conversationCreationBlock
T@?,C,N,V_conversationCreationBlock
sendDataBlock
T@?,C,N,V_sendDataBlock
activeLocalHandles
T@?,C,N,V_activeLocalHandles
localCallerID
T@?,C,N,V_localCallerID
conversationsByGroupUUID
conversationsByUUID
USER_LABEL_PRIMARY
This call's call history identifier is nil
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-1096.3.2/TUCallServicesDaemon/CallHistory/CHRecentCall_CSD.m
!(call_category == %@ && service_provider == %@)
localParticipantUUID
outgoingLocalParticipantUUID
messageType
callService
latencyMs
hasProtocolVersion
TQ,N,V_protocolVersion
hasMessageType
Ti,N,V_messageType
hasCallService
TI,N,V_callService
hasLatencyMs
TQ,N,V_latencyMs
hasFailed
TB,N,V_failed
CSDRelayDeviceRouteTypeMac
CSDRelayDeviceRouteTypeiPhone
CSDRelayDeviceRouteTypeiPad
CSDRelayDeviceRouteTypeiPod
CSDRelayDeviceRouteTypeWatch
CSDRelayDeviceRouteTypeAudioAccessory
protoWantsVideo
OBSOLETE_protoMomentsAvailable
protoSenderMuteUplink
protoShouldSuppressInCallUI
protoMomentsV2Available
protoUpgradeSessionUUID
hasProtoWantsVideo
TB,N,V_protoWantsVideo
hasOBSOLETEProtoMomentsAvailable
oBSOLETEProtoMomentsAvailable
TB,N,V_oBSOLETEProtoMomentsAvailable
hasProtoSenderMuteUplink
TB,N,V_protoSenderMuteUplink
hasProtoShouldSuppressInCallUI
TB,N,V_protoShouldSuppressInCallUI
hasProtoMomentsV2Available
TB,N,V_protoMomentsV2Available
hasProtoUpgradeSessionUUID
T@"NSString",&,N,V_protoUpgradeSessionUUID
B16@?0@"TURoute"8
<%@ %p category=%@ mode=%@>
v32@?0@"TURoute"8Q16^B24
v24@?0@"TURoute"8^B16
category
T@"NSString",&,N,V_category
mode
T@"NSString",&,N,V_mode
T@"NSArray",C,N,V_routes
receiverRouteAvailable
TB,R,N,GisReceiverRouteAvailable
speakerRouteAvailable
TB,R,N,GisSpeakerRouteAvailable
wirelessHeadsetAvailable
TB,R,N,GisWirelessHeadsetRouteAvailable
airTunesRouteAvailable
TB,R,N,GisAirTunesRouteAvailable
carAudioRouteAvailable
TB,R,N,GisCarAudioRouteAvailable
bluetoothRouteAvailable
TB,R,N,GisBluetoothRouteAvailable
isAnyPreferredRouteAvailable
preferredRoute
T@"TURoute",R,N
isAnyPreferredRouteAvailableAndActive
preferredAndActiveRoute
isAnyRouteAvailableWithOtherConnectedDevices
com.apple.private.alloy.facetime.audio
call_info
call_info_source
call_directory_provider_bundle_id
hasCallInfo
callInfo
T@"AWDCSDCallStatus",&,N,V_callInfo
hasCallInfoSource
callInfoSource
Ti,N,V_callInfoSource
hasCallDirectoryProviderBundleId
callDirectoryProviderBundleId
T@"NSString",&,N,V_callDirectoryProviderBundleId
CSDCallInfoSourceNone
CSDCallInfoSourceContacts
CSDCallInfoSourceMaps
CSDCallInfoSourceSuggestions
CSDCallInfoSourceCallDirectory
CSDCallInfoSourceLocation
hasFaceTimeAudioAvailable
TB,N,V_faceTimeAudioAvailable
hasFaceTimeVideoAvailable
TB,N,V_faceTimeVideoAvailable
00000000-0000-0000-0000-000000000000
conferenced
TB,N,GisConferenced
TB,N,GisOutgoing
T@"NSDate",&,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-1096.3.2/TUCallServicesDaemon/CSDVoIPProcessAssertionManager.m
%s is unavailable
-[CSDVoIPProcessAssertionManager init]
processAssertions
T@"NSCountedSet",&,N,V_processAssertions
com.apple.telephonyutilities.callservicesd.incomingcallfilter
@"CXCallDirectoryStore"8@?0
-[CSDIncomingCallFilter _callFilterBlock]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-1096.3.2/TUCallServicesDaemon/CSDIncomingCallFilter.m
q24@?0@"NSString"8@"NSString"16
%ld%@
T@"CSDIncomingCallFilterDataSource",&,N,V_dataSource
onCall
TB,N,GisOnCall,V_onCall
onEmergencyCall
TB,N,GisOnEmergencyCall,V_onEmergencyCall
emergencyProviderIdentifier
T@"NSString",R,C,N,V_emergencyProviderIdentifier
deviceLockObserver
T@"<CSDDeviceLockStateObserver>",R,N,V_deviceLockObserver
callDirectorySanitizer
T@"CXCallDirectorySanitizer",R,N,V_callDirectorySanitizer
callDirectoryStore
T@"CXCallDirectoryStore",&,N,V_callDirectoryStore
twoTimeCallthroughInterval
Td,N,V_twoTimeCallthroughInterval
accountStore
T@"ACAccountStore",R,N,V_accountStore
signedIntoiCloud
TB,R,N,GisSignedIntoiCloud
callerId
%@:%@
transactionManager
T@"<CSDTransactionManager>",R,N,V_transactionManager
recentsManager
T@"CHManager",R,N,V_recentsManager
T@"<CSDUserNotificationDelegate>",R,W,N,V_delegate
transactionObjectsAwaitingCallHistory
T@"NSMutableArray",R,N,V_transactionObjectsAwaitingCallHistory
cachedCalls
T@"NSMutableDictionary",R,N,V_cachedCalls
incomingCallFilter
T@"CSDIncomingCallFilter",R,N,V_incomingCallFilter
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-1096.3.2/TUCallServicesDaemon/CSDIDSSession.m
-[CSDIDSSession init]
<%@ %p %@>
UUID=%@
T@"<CSDIDSSessionProvider>",R,N,V_sessionProvider
preferences
T@"NSMutableDictionary",R,N,V_preferences
propertiesDescription
TB,N,GisWiFiAllowed
TB,N,GisCellularDataAllowed
TB,N,GisCellularDataPreferred
protoPersonNameComponents
suggestedName
label
companyName
mapName
location
contactName
contactLabel
callDirectoryLabel
callDirectoryLocalizedExtensionContainingAppName
callDirectoryExtensionIdentifier
hasName
T@"NSString",&,N,V_name
hasProtoPersonNameComponents
T@"CSDMessagingPersonNameComponents",&,N,V_protoPersonNameComponents
hasSuggestedName
T@"NSString",&,N,V_suggestedName
hasLabel
T@"NSString",&,N,V_label
hasCompanyName
T@"NSString",&,N,V_companyName
hasMapName
T@"NSString",&,N,V_mapName
hasLocation
T@"NSString",&,N,V_location
hasContactName
T@"NSString",&,N,V_contactName
hasContactLabel
T@"NSString",&,N,V_contactLabel
hasCallDirectoryLabel
T@"NSString",&,N,V_callDirectoryLabel
hasCallDirectoryLocalizedExtensionContainingAppName
T@"NSString",&,N,V_callDirectoryLocalizedExtensionContainingAppName
hasCallDirectoryExtensionIdentifier
T@"NSString",&,N,V_callDirectoryExtensionIdentifier
com.apple.telephonyutilities.callservicesd.useractivitycommunicator
activityQueue
T@"NSMutableOrderedSet",&,N,V_activityQueue
currentlyBroadcastedActivity
T@"CSDUserActivity",&,N,V_currentlyBroadcastedActivity
bestAppSuggestionManager
T@"UABestAppSuggestionManager",&,N,V_bestAppSuggestionManager
T@"<CSDUserActivityCommunicatorDelegate>",W,N,V_delegate
com.apple.private.alloy.phone.auth
T@"<CSDIDSGroupSessionProvider>",R,N,V_sessionProvider
joined
TB,N,GisJoined,V_joined
TQ,N,V_localParticipantIdentifier
T@"<CSDIDSGroupSessionDelegate>",W,N,V_delegate
idsDestination
v24@?0@"CSDClient"8@"<TUCallServicesXPCClient>"16
com.apple.telephonyutilities.callservicesdaemon.callstatecontroller
%@-%d
B16@?0@"CSDClient"8
NRPairedDeviceRegistry
NanoRegistry
282F1EE6-A144-4106-AFFB-2BDB5B59FD0D
com.apple.telephonyutilities.callservicesdaemon.voicemailcallended
callsToHold
callsToUnhold
callsToDisconnect
callsToAnswer
-[CSDCallStateController dialWithRequest:reply:]
-[CSDCallStateController dialWithRequest:displayContext:]
-[CSDCallStateController answerCallWithRequest:]
-[CSDCallStateController holdCallWithUniqueProxyIdentifier:]
-[CSDCallStateController unholdCallWithUniqueProxyIdentifier:]
-[CSDCallStateController disconnectCallWithUniqueProxyIdentifier:]
-[CSDCallStateController groupCallWithUniqueProxyIdentifier:withOtherCallWithUniqueProxyIdentifier:]
-[CSDCallStateController ungroupCallWithUniqueProxyIdentifier:]
-[CSDCallStateController swapCalls]
-[CSDCallStateController playDTMFToneForCallWithUniqueProxyIdentifier:key:]
-[CSDCallStateController disconnectCurrentCallAndActivateHeld]
-[CSDCallStateController disconnectAllCalls]
-[CSDCallStateController setTTYType:forCallWithUniqueProxyIdentifier:]
-[CSDCallStateController pullRelayingCallsFromClient]
-[CSDCallStateController pushRelayingCallsToHostWithSourceIdentifier:]
-[CSDCallStateController pullCallFromClientUsingHandoffActivityUserInfo:reply:]
-[CSDCallStateController sendMMIOrUSSDCodeWithRequest:]
-[CSDCallStateController setUplinkMuted:forCallWithUniqueProxyIdentifier:]
-[CSDCallStateController setDownlinkMuted:forCallWithUniqueProxyIdentifier:]
-[CSDCallStateController pushHostedCallsToDestination:]
-[CSDCallStateController pullHostedCallsFromPairedHostDevice]
-[CSDCallStateController sendHardPauseDigitsForCallWithUniqueProxyIdentifier:]
-[CSDCallStateController updateCallWithProxy:]
-[CSDCallStateController enteredForegroundForCallWithUniqueProxyIdentifier:]
-[CSDCallStateController willEnterBackgroundForAllCalls]
-[CSDCallStateController enteredBackgroundForAllCalls]
-[CSDCallStateController setRemoteVideoPresentationSizeForCallWithUniqueProxyIdentifier:size:]
-[CSDCallStateController setRemoteVideoPresentationStateForCallWithUniqueProxyIdentifier:presentationState:]
-[CSDCallStateController shouldSuppressInCallStatusBar:]
-[CSDCallStateController joinConversationWithRequest:]
-[CSDCallStateController setCurrentAudioInputDeviceToDeviceWithUID:]
-[CSDCallStateController setCurrentAudioOutputDeviceToDeviceWithUID:]
-[CSDCallStateController localRoutesByUniqueIdentifier:]
-[CSDCallStateController pairedHostDeviceRoutesByUniqueIdentifier:]
-[CSDCallStateController pickLocalRouteWithUniqueIdentifier:]
-[CSDCallStateController pickPairedHostDeviceRouteWithUniqueIdentifier:]
-[CSDCallStateController containsRestrictedHandle:forBundleIdentifier:reply:]
-[CSDCallStateController policyForAddresses:forBundleIdentifier:reply:]
-[CSDCallStateController willRestrictAddresses:forBundleIdentifier:reply:]
-[CSDCallStateController shouldRestrictAddresses:forBundleIdentifier:reply:]
-[CSDCallStateController isUnknownAddress:normalizedAddress:forBundleIdentifier:reply:]
B24@?0@"TUCall"8@"NSDictionary"16
shouldRelayToOtherDevices
callHistoryManagerXPCServer
T@"CSDCallHistoryManagerXPCServer",R,N,V_callHistoryManagerXPCServer
callProviderManagerXPCServer
T@"CSDCallProviderManagerXPCServer",R,N,V_callProviderManagerXPCServer
relayCallDataSource
T@"CSDRelayCallDataSource",R,N,V_relayCallDataSource
providerCallDataSource
T@"CSDProviderCallDataSource",R,N,V_providerCallDataSource
relayCallDelegate
T@"CSDRelayCallDelegate",R,N,V_relayCallDelegate
carPlayHardwareControlsBroadcaster
T@"TUCarPlayHardwareControlsBroadcaster",R,N,V_carPlayHardwareControlsBroadcaster
T@"CSDCallProviderManager",R,N,V_callProviderManager
T@"CSDCallController",R,N,V_callController
recentsController
T@"CSDRecentsController",R,N,V_recentsController
localRouteController
T@"CSDRouteController",R,N,V_localRouteController
pairedHostDeviceRouteController
T@"CSDRouteController",R,N,V_pairedHostDeviceRouteController
originating_process_id
timed_out
actions
hasOriginatingProcessId
originatingProcessId
T@"NSString",&,N,V_originatingProcessId
hasTimedOut
timedOut
TB,N,V_timedOut
T@"NSMutableArray",&,N,V_actions
firstUnlockCallbacks
T@"NSMutableArray",&,N,V_firstUnlockCallbacks
hasBeenUnlocked
TB,N,V_hasBeenUnlocked
notifyObserver
T@"<TUNotifyObserver>",&,N,V_notifyObserver
hasBeenUnlockedBlock
T@?,C,N,V_hasBeenUnlockedBlock
T@"TUCallDisplayContext",R,N
com.apple.telephonyutilities.callservicesd.voipapplicationcontroller
com.apple.telephonyutilities.callservicesd.csdvoipapplicationcontroller.daily
com.apple.telephonyutilities.callservicesdaemon.voip
com.apple.pushkit.launch.voip
bundleIDs
aps-environment
-[CSDVoIPApplicationController _pruneOutstandingPushesForBundleIdentifier:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-1096.3.2/TUCallServicesDaemon/CSDVoIPApplicationController.m
B32@?0@"APSMessage"8Q16^B24
CSDVoIPApplicationKillCounts
%@.%@
com.apple.telephonyutilities.callservicesdaemon.voip.push
com.apple.telephonyutilities.callservicesdaemon.voip.push.development
T@"CSDClientManager",&,N,V_clientManager
productionConnection
T@"APSConnection",&,N,V_productionConnection
developmentConnection
T@"APSConnection",&,N,V_developmentConnection
bundleIdentifierToVoIPApplication
T@"NSMutableDictionary",&,N,V_bundleIdentifierToVoIPApplication
outstandingVoIPPushes
T@"NSMutableArray",R,N,V_outstandingVoIPPushes
T@"CSDCallStateController",W,N,V_callStateController
 identifier=%lu
 handle=%@
 isMuted=%d
 isMomentsAvailable=%d
 streamToken=%ld
 avcIdentifier=%@
TQ,R,N,V_identifier
T@"TUHandle",R,C,N,V_handle
T@"NSData",R,C,N,V_avcData
TB,N,GisAudioEnabled,V_audioEnabled
Tq,N,V_streamToken
audioPriority
Tq,N,V_audioPriority
videoPriority
Tq,N,V_videoPriority
avcIdentifier
T@"NSString",C,N,V_avcIdentifier
activeIDSDestination
T@"NSString",C,N,V_activeIDSDestination
tuConversationParticipant
T@"TUConversationParticipant",R,C,N
idsDictionaryRepresentation
dataSourceToIdentifierToCalls
T@"NSMapTable",&,N,V_dataSourceToIdentifierToCalls
dataSources
<%@: %p %@>
object=%@ processIdentifier=%d processName=%@ processBundleIdentifier=%@
object
T@,&,N,V_object
identifiersWithPendingCoalescingBlocks
T@"NSMutableSet",&,N,V_identifiersWithPendingCoalescingBlocks
blockToExecuteAfterPendingCoalescingBlocksByIdentifier
T@"NSMutableDictionary",&,N,V_blockToExecuteAfterPendingCoalescingBlocksByIdentifier
objectForBlock
T@,R,N
processIdentifier
processName
processBundleIdentifier
remote
TB,R,N,GisRemote
T@"TUCallServicesClientCapabilities",&,N,V_capabilities
tuSenderIdentity
T@"TUSenderIdentity",R,N
com.apple.telephonyutilities.callservicesd.conversationmanagerxpcserver
com.apple.telephonyutilities.callservicesdaemon.conversationmanager
CSDConversationManagerClientsShouldConnectNotification
v24@?0@"CSDClient"8@"<TUConversationManagerXPCClient>"16
InCallService
FaceTime
clientsShouldConnectToken
Ti,N,V_clientsShouldConnectToken
com.apple.telephonyutilities.callservicesd.callprovidermanager
Cannot launch app for dial request with a system provider: %@
Cannot launch app for invalid dial request: %@
T@"<CSDCallProviderManagerDataSource>",R,N,V_dataSource
localProvidersByIdentifier
T@"NSMutableDictionary",R,N,V_localProvidersByIdentifier
pairedHostDeviceProvidersByIdentifier
T@"NSMutableDictionary",R,N,V_pairedHostDeviceProvidersByIdentifier
providersByIdentifier
T@"NSDictionary",C,N,V_providersByIdentifier
INSupportedIntentsByExtensions
/System/Library/Frameworks/Intents.framework/Intents
v48@?0@"NSUUID"8B16B20@"NSUUID"24@"TUHandle"32@"NSString"40
audioSessionActive
TB,N,GisAudioSessionActive,V_audioSessionActive
conversationUUIDsAwaitingActiveAudioSession
T@"NSMutableSet",R,N,V_conversationUUIDsAwaitingActiveAudioSession
callUUIDsByConversationUUID
T@"NSMutableDictionary",R,N,V_callUUIDsByConversationUUID
conversationUUIDsByCallUUID
T@"NSMutableDictionary",R,N,V_conversationUUIDsByCallUUID
conversationUUIDsWaitingToJoin
T@"NSMutableSet",R,N,V_conversationUUIDsWaitingToJoin
Invitation
Upgrade
AddMember
ResendAVCBlobRequest
ResendAVCBlobResponse
RespondedElsewhere
incomingCallRaiseToAnswerEnabledKey
CMGestureManager
CoreMotion
isRaiseToEarGestureSupported
isRaiseToEarGestureEnabled
raiseToEarGestureManager
T@"CMGestureManager",&,N,V_raiseToEarGestureManager
raiseToEarGestureHandler
T@?,R,C,N,V_raiseToEarGestureHandler
detectingRaiseToAnswer
TB,N,GisDetectingRaiseToAnswer
v24@?0@"CSDIDSTransport"8@"NSDictionary"16
SBSLaunchApplicationWithIdentifier
SpringBoardServices
access-calls
modify-calls
modify-status-bar
access-call-capabilities
modify-call-capabilities
access-call-history
modify-call-history
access-moments
modify-moments
Entitlement check: In %s, client %@ lacks capability '%@'
com.apple.telephonyutilities.suppressringtone
<%@ %p activityType=%@ dynamicIdentifier=%@ activityUserInfo=%@>
userActivity
T@"NSUserActivity",&,N,V_userActivity
dynamicIdentifier
T@"NSString",&,N,V_dynamicIdentifier
registeredProviders
registeredProvidersVersion
registeredRelayProviders
Ringtones
com.apple.LaunchServices.applicationUnregistered
T@"<CSDCallProviderManagerDataSourceDelegate>",W,N
relayCallingGuaranteed
TB,R,N,GisRelayCallingGuaranteed
registeredLocalProvidersByIdentifier
registeredPairedHostDeviceProvidersByIdentifier
devicePasscodeLocked
TB,R,N,GisDevicePasscodeLocked
providerIdentifiersForExistingCalls
ringtonesSandboxExtensionDirectory
T@"CSDSandboxExtensionDirectory",R,N,V_ringtonesSandboxExtensionDirectory
T@"CSDCallCenterObserver",R,N,V_callCenterObserver
T@"NSSet",C,N,V_providerIdentifiersForExistingCalls
T@"<CSDCallProviderManagerDataSourceDelegate>",W,N,V_delegate
com.apple.telephonyutilities.callservicesd.csdmomentsreportingsession
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-1096.3.2/TUCallServicesDaemon/CSDMomentsReportingSession.m
-[CSDMomentsReportingSession init]
self
TQ,N,V_photoRequestSuccessCount
TQ,N,V_photoRequestFailureCount
hasCleanedUp
TB,N,V_hasCleanedUp
requestTimeoutBlockByTransactionID
T@"NSMutableDictionary",R,N,V_requestTimeoutBlockByTransactionID
requestStartDateByTransactionID
T@"NSMutableDictionary",R,N,V_requestStartDateByTransactionID
photoRequestDurations
T@"NSMutableArray",R,N,V_photoRequestDurations
T@"<CSDMomentsReportingSessionDelegate>",W,N,V_delegate
Tq,R,N,V_streamToken
shouldTraceSignposts
localParticipantData
T@"NSData",R,C,N
sessionIdentifier
sessionToken
maxVideoDecodesAllowed
TB,N,GisAudioReady
defaultConfiguration
T@"AVCSessionConfiguration",R,N
T@"AVCSession",R,N,V_session
T@"<CSDAVCSessionDelegate>",R,W,N,V_delegate
remoteParticipantsByIdentifier
T@"NSMutableDictionary",R,N,V_remoteParticipantsByIdentifier
TB,N,GisAudioReady,V_audioReady
csdConversationParticipant
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-1096.3.2/TUCallServicesDaemon/CSDExternalIDSDualSession.m
T@"NSString",C,N,V_remoteFromID
receivedInvitationAccept
TB,N,V_receivedInvitationAccept
<display_name>
CELLULAR_SETTINGS
prefs:root=MOBILE_DATA_SETTINGS_ID
WLAN_SETTINGS
WIFI_SETTINGS
prefs:root=WIFI
SETTINGS
prefs:root=General&path=DATE_AND_TIME
prefs:root=FACETIME&path=LOCATION&guid=%@
%s is unavailable, call another initializer instead.
-[CSDRelayConferenceConnection init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-1096.3.2/TUCallServicesDaemon/CSDRelayConferenceConnection.m
 identifier=%@
 transport=%@
 isHost=%d
 isUsingBaseband=%d
 isAudioDisabled=%d
 receivedSuccessfulDidStart=%d
 isPreparedToStop=%d
receivedSuccessfulDidStart
TB,N,V_receivedSuccessfulDidStart
T@"NSString",C,N,V_identifier
T@"CSDIDSTransport",&,N,V_transport
host
TB,N,GisHost,V_host
usingBaseband
TB,N,GisUsingBaseband,V_usingBaseband
audioDisabled
TB,N,GisAudioDisabled,V_audioDisabled
T@"VCCapabilities",R,C,N
preparedToStop
TB,N,GisPreparedToStop,V_preparedToStop
didPrepareHandler
T@?,C,N,V_didPrepareHandler
didStartHandler
T@?,C,N,V_didStartHandler
didStopHandler
T@?,C,N,V_didStopHandler
<%@ %p>
    Are capabilities valid: %@
    Sender identity capabilities: %@
    Emergency callback capabilities: %@
    Thumper local device ID: %@
    Thumper local accounts: %@
    Thumper secondary accounts: %@
    Thumper accounts: %@
disabled
q24@?0@"CSDThumperAccount"8@"CSDThumperAccount"16
capabilitiesValid
TB,N,GareCapabilitiesValid,V_capabilitiesValid
subscriptions
T@"NSSet",C,N,V_subscriptions
senderIdentityCapabilitiesStateByUUID
T@"NSDictionary",C,N,V_senderIdentityCapabilitiesStateByUUID
lastSavedAccountIDByCapability
T@"NSMutableDictionary",R,N,V_lastSavedAccountIDByCapability
coreTelephonyClient
T@"CSDCoreTelephonyClient",R,N,V_coreTelephonyClient
emergencyCallbackCapabilities
T@"<CSDEmergencyCallbackCapabilities>",R,N,V_emergencyCallbackCapabilities
localThumperDeviceID
T@"NSString",C,N,V_localThumperDeviceID
T@"NSArray",C,N,V_localThumperAccounts
secondaryThumperAccounts
T@"NSArray",C,N,V_secondaryThumperAccounts
thumperAccounts
T@"NSArray",C,N,V_thumperAccounts
emergencyCallbackModeEnabled
TB,N,GisEmergencyCallbackModeEnabled,V_emergencyCallbackModeEnabled
T@"<CSDTelephonyCallCapabilitiesDelegate>",W,N,V_delegate
TB,R,N,GisEmergencyCallbackPossible
uniqueIdentifier
deviceType
protoCurrentlyPicked
protoGuest
protoSupportsRelay
hasUniqueIdentifier
T@"NSString",&,N,V_uniqueIdentifier
hasDeviceType
Ti,N,V_deviceType
hasProtoCurrentlyPicked
TB,N,V_protoCurrentlyPicked
hasProtoGuest
TB,N,V_protoGuest
hasProtoSupportsRelay
TB,N,V_protoSupportsRelay
AirPods
BeatsSolo
BeatsX
Powerbeats
BeatsStudio
HomePod
iMac
MacBook
MacMini
MacPro
Watch
HomePodStereoPair
iPadPro
Powerbeats2
v16@?0B8B12
dtmfSoundPlayer
T@"TUDTMFSoundPlayer",R,N,V_dtmfSoundPlayer
activeParticipants
conversationGroupUUIDString
addedMembers
hasShouldSuppressInCallUI
T@"NSMutableArray",&,N,V_activeParticipants
hasConversationGroupUUIDString
T@"NSString",&,N,V_conversationGroupUUIDString
T@"NSMutableArray",&,N,V_addedMembers
hasDisconnectedReason
TI,N,V_disconnectedReason
tuRoute
tuRouteDeviceType
Tq,N,SsetTURouteDeviceType:
currentlyPicked
TB,N,GisCurrentlyPicked
guest
TB,N,GisGuest
supportsRelay
com.apple.calls.callservicesd
Default
calls
T@"NSMutableArray",&,N,V_calls
CSDFaceTimeIMAccountCallerIDChangedNotification
lastKnownFaceTimeCallerID
com.apple.telephonyutilities.callservicesd
com.apple.telephonyutilities.callservicesd.facetimeimaccount
T@"CSDFaceTimeIMAccount",R,N
keychainItem
T@"CSDKeychainPasswordItem",R,N,V_keychainItem
callerIDByUpdatingState
mockService
Ti,N,Gservice,V_mockService
mockCallStatus
Ti,N,GcallStatus,V_mockCallStatus
mockUniqueProxyIdentifier
T@"NSString",C,N,GuniqueProxyIdentifier,V_mockUniqueProxyIdentifier
mockIsVideo
TB,N,GisVideo,V_mockIsVideo
mockHostedOnCurrentDevice
TB,N,GisHostedOnCurrentDevice,V_mockHostedOnCurrentDevice
mockEndpointOnCurrentDevice
TB,N,GisEndpointOnCurrentDevice,V_mockEndpointOnCurrentDevice
mockBlocked
TB,N,GisBlocked,V_mockBlocked
mockVoicemail
TB,N,GisVoicemail,V_mockVoicemail
mockCallDuration
Td,N,GcallDuration,V_mockCallDuration
mockEmergency
TB,N,GisEmergency,V_mockEmergency
mockSOS
TB,N,GisSOS,SsetSOS:,V_mockSOS
mockOutgoing
TB,N,GisOutgoing,V_mockOutgoing
mockConferenced
TB,N,GisConferenced,V_mockConferenced
mockUsingBaseband
TB,N,GisUsingBaseband,V_mockUsingBaseband
mockTTYType
Ti,N,GttyType,V_mockTTYType
mockSupportsTTYWithVoice
TB,N,GsupportsTTYWithVoice,V_mockSupportsTTYWithVoice
mockDisconnectedReason
Ti,N,GdisconnectedReason,V_mockDisconnectedReason
mockHandle
T@"TUHandle",&,N,Ghandle,V_mockHandle
mockLocalizedLabel
T@"NSString",C,N,GlocalizedLabel,V_mockLocalizedLabel
mockCompanyName
T@"NSString",C,N,GcompanyName,V_mockCompanyName
mockCallUUID
T@"NSString",C,N,GcallUUID,V_mockCallUUID
mockCallerNameFromNetwork
T@"NSString",C,N,GcallerNameFromNetwork,V_mockCallerNameFromNetwork
mockBytesOfDataUsed
Tq,N,GbytesOfDataUsed,V_mockBytesOfDataUsed
mockSubtype
Ti,N,Gsubtype,V_mockSubtype
mockNeedsManualInCallSounds
TB,N,GneedsManualInCallSounds,V_mockNeedsManualInCallSounds
mockAudioCategory
T@"NSString",C,N,GaudioCategory,V_mockAudioCategory
mockAudioMode
T@"NSString",C,N,GaudioMode,V_mockAudioMode
mockCallGroupUUID
T@"NSUUID",C,N,GcallGroupUUID,V_mockCallGroupUUID
mockBackingProvider
T@"TUCallProvider",C,N,GbackingProvider,V_mockBackingProvider
mockDisplayProvider
T@"TUCallProvider",C,N,GdisplayProvider,V_mockDisplayProvider
mockProviderContext
T@"NSDictionary",C,N,GproviderContext,V_mockProviderContext
mockProviderErrorCode
Tq,N,GproviderErrorCode,V_mockProviderErrorCode
mockDisplayContext
T@"TUCallDisplayContext",C,N,GdisplayContext,V_mockDisplayContext
mockHasStartedOutgoing
TB,N,GhasStartedOutgoing,V_mockHasStartedOutgoing
mockHasSentInvitation
TB,N,GhasSentInvitation,V_mockHasSentInvitation
mockConnecting
TB,N,GisConnecting,V_mockConnecting
mockConnected
TB,N,GisConnected,V_mockConnected
mockUplinkMuted
TB,N,GisUplinkMuted,SsetUplinkMuted:,V_mockUplinkMuted
mockUplinkWasExplicitlyMuted
TB,N,GuplinkWasExplicitlyMuted,V_mockUplinkWasExplicitlyMuted
mockMayRequireBreakBeforeMake
TB,N,GmayRequireBreakBeforeMake,V_mockMayRequireBreakBeforeMake
mockAudioInterruptionProviderType
Tq,N,GaudioInterruptionProviderType,V_mockAudioInterruptionProviderType
mockDisplayName
T@"NSString",C,N,GdisplayName,V_mockDisplayName
mockPrefersExclusiveAccessToCellularNetwork
TB,N,GprefersExclusiveAccessToCellularNetwork,V_mockPrefersExclusiveAccessToCellularNetwork
mockContactIdentifier
T@"NSString",C,N,GcontactIdentifier,V_mockContactIdentifier
mockDateCreated
T@"NSDate",&,N,GdateCreated,V_mockDateCreated
mockDateConnected
T@"NSDate",&,N,GdateConnected,V_mockDateConnected
mockProviderProcessIdentifier
Ti,N,GproviderProcessIdentifier,V_mockProviderProcessIdentifier
mockAudioInterruptionActivationStateObserver
T@"<CXAudioSessionActivationStateObserver>",&,N,GaudioInterruptionActivationStateObserver,V_mockAudioInterruptionActivationStateObserver
mockBackingCallSource
T@"CXCallSource",&,N,GbackingCallSource,V_mockBackingCallSource
mockIsThirdPartyVideo
TB,N,GisThirdPartyVideo,V_mockIsThirdPartyVideo
mockInitialLinkType
TQ,N,GinitialLinkType,V_mockInitialLinkType
mockCallRelaySupport
Ti,N,GcallRelaySupport,V_mockCallRelaySupport
mockShouldSuppressInCallUI
TB,N,GshouldSuppressInCallUI,V_mockShouldSuppressInCallUI
v16@?0^{__CFDictionary=}8
T@"<CSDCoreTelephonyClientDelegate>",W,N
TB,R,N,GisEmergencyCallbackModeEnabled
preferredVoiceSubscriptionUUID
T@"NSUUID",R,C,N
telephonySubscriptions
thumperDeviceInfo
T@"CoreTelephonyClient",R,N,V_client
activeContexts
T@"CTXPCContexts",C,N,V_activeContexts
mobileCodesToISOCountryCode
T@"NSMutableDictionary",R,N,V_mobileCodesToISOCountryCode
T@"<CSDCoreTelephonyClientDelegate>",W,N,V_delegate
activeRemoteParticipantCXHandles
ambiguityState
swappable
mergeable
holdAllowed
addCallAllowed
takingCallsPrivateAllowed
hardPauseAvailable
endAndAnswerAllowed
holdAndAnswerAllowed
sendToVoicemailAllowed
hasAmbiguityState
TI,N,V_ambiguityState
hasSwappable
TB,N,V_swappable
hasMergeable
TB,N,V_mergeable
hasHoldAllowed
TB,N,V_holdAllowed
hasAddCallAllowed
TB,N,V_addCallAllowed
hasTakingCallsPrivateAllowed
TB,N,V_takingCallsPrivateAllowed
hasHardPauseAvailable
TB,N,V_hardPauseAvailable
hasEndAndAnswerAllowed
TB,N,V_endAndAnswerAllowed
hasHoldAndAnswerAllowed
TB,N,V_holdAndAnswerAllowed
hasSendToVoicemailAllowed
TB,N,V_sendToVoicemailAllowed
accountUUID
protoUUID
localizedShortName
accountUUIDString
hasProtoUUID
T@"NSString",&,N,V_protoUUID
hasLocalizedShortName
T@"NSString",&,N,V_localizedShortName
hasAccountUUIDString
T@"NSString",&,N,V_accountUUIDString
v32@?0@"NSString"8@"NSString"16@"NSDictionary"24
CallUUID
RelayFailedConferenceFailed
RelayFailedNoRelayDevice
ComponentCrashed
RelayFailedRelayDeviceRelayNotEnabled
NoLocalLink
CallFailed
DialFailed
AccountUnsupported
NetworkUnsupported
ProviderCrashed
MediaStartFailed
MediaServerCrashed
NoReason
Disconnected
ReceiverDeclined
LocalUnanswered
RemoteUnanswered
InitiatorCancelled
CouldNotConnect
RemoteEnded
NoLocalData
NoRemoteData
FailedToOpenSocket
LocalHangup
RemoteHangup
NoLocalNetwork
MissingRemoteInfo
NoRemoteNetwork
EncryptionSetupFailed
EncryptionFailed
DecryptionFailed
SystemInternalError
NoRemotePackets
ReceiverBusy
SystemUnsupported
QRConfigurationError
SKEConfigurationError
QRAllocbindTimeout
QRUnallocbindTimeout
QRConnectedTimeout
AcceptedElsewhere
DeclinedElsewhere
AliasDeactivated
AllocatorParseError
AllocatorInvalidField
AllocatorInternalError
AllocatorServerBusy
AllocatorMissingKey
AllocatorBadSignature
AllocatorUnknownError
InitialMkMDistributionFailure
JoinNotificationDistributionFailure
AbortedByCaller
AbortedByReceiver
ReceiverOffline
HostHangup
Shutdown
LocalNetworkUnsupported
RemoteNetworkUnsupported
SystemComponentCrashed
CouldNotInvite
CouldNotRespond
CouldNotCancel
CouldNotSendUpdate
CouldNotSendAVMessage
CallLocalUnanswered
CallRemoteUnanswered
CallDeclinedElsewhere
CallFiltered
RemoteUserDoesNotExist
RemoteUserIncompatible
LocalUserIncompatible
CallerAccountInvalid
CallerAccountNeedsUpdate
Call Failure
tuConversationMembers
T@"CSDReportingController",R,N
reporters
T@"NSMutableArray",&,N,V_reporters
reportingSessionByStreamToken
T@"NSMutableDictionary",R,N,V_reportingSessionByStreamToken
conversationUUIDs
T@"NSMutableSet",R,N,V_conversationUUIDs
T@"TUConversationManager",R,N,V_conversationManager
A910C931-A590-41EF-A783-910BFBE500B3
com.apple.telephonyutilities.callservicesd.callhistorymanager
outgoingLocalParticipantUUID == %@
T@"NSMapTable",R,N,V_delegateToQueue
chManager
T@"<CSDCHManager>",R,N,V_chManager
CSDIDSDeviceListChangedNotification
CSDIDSServiceCallerIDChangedNotification
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-1096.3.2/TUCallServicesDaemon/CSDIDSService.m
All CSDIDSService subclasses must override +sharedInstance
com.apple.telephonyutilities.callservicesd.%@
All CSDIDSService subclasses must override -serviceName
    devices: %@
    availableOutgoingRelayCallerIDs: %@
    defaultPairedDevice: %@
    pairedDevice: %@
    telephonyCapableDeviceExists: %@
    relayCapableDeviceExists: %@
", "
allAliases
devices
countryCode
telephonyCapableDeviceExists
relayCapableDeviceExists
defaultPairedDeviceExists
pairedDeviceExists
defaultPairedDevice
T@"IDSDevice",R,N
pairedDevice
availableOutgoingRelayCallerIDs
T@"NSSet",R,N
T@"CSDIDSService",R,N
idsService
T@"IDSService",&,N,V_idsService
TB,N,V_telephonyCapableDeviceExists
TB,N,V_relayCapableDeviceExists
T@"NSArray",&,N,V_devices
T@"IDSDevice",&,N,V_pairedDevice
T@"IDSDevice",&,N,V_defaultPairedDevice
T@"NSSet",&,N,V_availableOutgoingRelayCallerIDs
serviceName
T@"IDSAccount",R,N
T@"IDSService",R,N
T@"NSString",R,C,N,V_callerIDByUpdatingState
pairedDeviceUniqueIDOverride
AudioAccessory
TB,R,N,GisPairedDevice
audioAccessoryDevice
TB,R,N,GisAudioAccessoryDevice
supportsRestrictingSecondaryCalling
supportsRelayCallingWithoutLocalRelayCallingEnabled
pairedDeviceUniqueIDOverrideExists
v24@?0@"CSDIDSTransport"8@"NSData"16
destinationWithActiveSession
T@"IDSDestination",R,N
waitingSession
T@"CSDRelayIDSDualSession",R,N
currentSession
sessions
T@"NSMutableArray",&,N,V_sessions
T@"<CSDRelayIDSSessionMessengerDelegate>",W,D,N
deviceWithActiveSession
com.apple.callservicesdaemon.csdmomentscontroller
PreserveFaceTimePhotosFiles
CSDMomentsControllerStartedRemoteCaptureNotification
CSDMomentsControllerMetadataKeyTransactionID
heic
com.apple.telephonyutilities.callservicesd.csdmomentscontroller
@"<CSDAVCMoments>"40@?0q8@"NSString"16@"<CSDAVCMomentsDelegate>"24@"NSObject<OS_dispatch_queue>"32
com.apple.telephonyutilities.callservicesdaemon.momentscontroller
Could not start request for mediaType: %d streamToken: %ld. -[AVCMoments newRequestWithMediaType:] returned nil.
Could not start request for mediaType: %d streamToken: %ld. No session has been registered for requested stream token.
Asked to start moments request with invalid media type %d
Asked to start moments request but moments is disabled by server bag
-[CSDMomentsController startRequestWithMediaType:forStreamToken:requesteeID:reply:]
Could not find request for transaction ID %@
-[CSDMomentsController endRequestWithTransactionID:reply:]
-[CSDMomentsController registerStreamToken:requesterID:remoteIDSDestinations:remoteMomentsAvailable:reply:]
-[CSDMomentsController unregisterStreamToken:reply:]
v24@?0@"CSDClient"8@"<TUMomentsControllerXPCClient>"16
v16@?0@"NSString"8
v24@?0@"NSString"8@"NSError"16
localCapabilities
T@"<CSDMomentsControllerLocalCapabilities>",&,N
faceTimePhotosAvailable
TB,R,N,GisFaceTimePhotosAvailable
fileTransferController
T@"<CSDFileTransferring>",R,N,V_fileTransferController
mediaAssetManager
T@"<CSDMediaAssetManaging>",R,N,V_mediaAssetManager
sessionsByToken
T@"NSMutableDictionary",R,N,V_sessionsByToken
streamTokensByCSDClient
T@"NSMapTable",R,N,V_streamTokensByCSDClient
momentsClient
T@"<TUMomentsControllerXPCClient>",R,N,V_momentsClient
T@"<CSDMomentsServerBag>",&,N,V_serverBag
momentsGenerator
T@?,C,N,V_momentsGenerator
T@"<CSDMomentsControllerDelegate>",W,N,V_delegate
T@"<CSDAVConferenceProviderDelegate>",W,N
inputFrequencyMeteringEnabled
TB,N,GisInputFrequencyMeteringEnabled
outputFrequencyMeteringEnabled
TB,N,GisOutputFrequencyMeteringEnabled
microphoneMuted
TB,N,GisMicrophoneMuted
audioPaused
TB,N,GisAudioPaused
T@"AVConference",R,N,V_conference
Tq,N,V_callID
videoDeviceController
T@"TUVideoDeviceController",R,N,V_videoDeviceController
T@"<CSDAVConferenceProviderDelegate>",W,N,Vdelegate
call
T@"CSDProviderCall",&,N,V_call
completionHandler
T@?,C,N,V_completionHandler
B32@?0@"NSString"8@"NSString"16^B24
B20@?0@"TUCallProvider"8B16
B16@?0@"CSDCall"8
v16@?0@"CXCallSource"8
processAssertionManager
T@"CSDVoIPProcessAssertionManager",R,N,V_processAssertionManager
callSourceManager
T@"CXCallSourceManager",R,N,V_callSourceManager
callControllerHost
T@"CXCallControllerHost",R,N,V_callControllerHost
deferCommittingTransactions
TB,N,V_deferCommittingTransactions
telephonyCallSource
T@"CXCallSource",R,N
faceTimeCallSource
T@"CXInProcessCallSource",R,N,V_faceTimeCallSource
faceTimeProviderDelegate
T@"CSDFaceTimeProviderDelegate",R,N,V_faceTimeProviderDelegate
tinCanCallSource
T@"CXInProcessCallSource",R,N,V_tinCanCallSource
tinCanProviderDelegate
T@"<CXProviderDelegatePrivate>",R,N,V_tinCanProviderDelegate
callSourceFetcher
T@"CSDCallSourceFetcher",R,N,V_callSourceFetcher
T@"CSDCallFilterManager",&,N,V_callFilterManager
screenTimeCallFilter
T@"CSDScreenTimeCallFilter",&,N,V_screenTimeCallFilter
managedDeviceMonitor
T@"<CSDManagedDeviceMonitor>",R,N,V_managedDeviceMonitor
pendingCallsToChatUUIDs
T@"NSMutableDictionary",R,N,V_pendingCallsToChatUUIDs
pendingPulledCallContexts
T@"NSMutableDictionary",R,N,V_pendingPulledCallContexts
T@"<CSDRouteManager>",&,N,V_routeManager
dndAllowsCall
T@?,C,N,V_dndAllowsCall
T@?,C,N,V_supportsPrimaryCalling
shouldPreferRelayOverDirectSecondaryCalling
T@?,C,N,V_shouldPreferRelayOverDirectSecondaryCalling
shouldFilterCall
T@?,C,N,V_shouldFilterCall
shouldDisconnectCallForDowntime
T@?,C,N,V_shouldDisconnectCallForDowntime
T@"CSDCallProviderManager",&,N,V_providerManager
We have an active XPC connection but no corresponding CSDClient
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-1096.3.2/TUCallServicesDaemon/CSDClientManager.m
B24@?0@8@"NSDictionary"16
queueContext
T^v,R,N
clientsByObject
T@"NSMapTable",R,N,V_clientsByObject
machServiceName
T@"NSString",&,N,V_machServiceName
T@"NSXPCListener",&,N,V_xpcListener
asynchronousExportedObjectProxy
T@,&,N,V_asynchronousExportedObjectProxy
synchronousExportedObjectProxy
T@,&,N,V_synchronousExportedObjectProxy
clients
currentClient
T@"CSDClient",R,N
remoteObjectInterface
T@"NSXPCInterface",&,N,V_remoteObjectInterface
exportedInterface
T@"NSXPCInterface",&,N,V_exportedInterface
exportedObject
T@,&,N,V_exportedObject
interruptionHandler
T@?,C,N,V_interruptionHandler
invalidationHandler
T@?,C,N,V_invalidationHandler
requiredConnectionCapability
T@"NSString",C,N,V_requiredConnectionCapability
T@"CSDClientManager",W,N,V_clientManager
synchronous
TB,N,GisSynchronous,V_synchronous
T@,R,N,V_exportedObject
com.apple.TUCallCenter
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-1096.3.2/TUCallServicesDaemon/CSDCallDataSource.m
All CSDCallDataSource subclasses must override +callClass
callClass
T#,R,N
uniqueProxyIdentifierToCallTable
T@"NSMapTable",&,N,V_uniqueProxyIdentifierToCallTable
uniqueProxyIdentifierToCallTableSemaphore
T@"NSObject<OS_dispatch_semaphore>",&,N,V_uniqueProxyIdentifierToCallTableSemaphore
currentCallSet
T@"NSMutableOrderedSet",&,N,V_currentCallSet
T@"CSDCallStateController",R,W,N,V_callStateController
supportedTUHandleTypes
T@"NSOrderedSet",R,C,N
 string=%@
 pid=%d
 suppress=%d
 statusBarStyleOverrides=%d
statusString
T@"NSString",C,N,V_statusString
Ti,N,V_processIdentifier
inCallUIWantsStatusBarSuppression
TB,N,V_inCallUIWantsStatusBarSuppression
statusBarStyleOverrides
Ti,N,V_statusBarStyleOverrides
<%@ %p type=%d
 socket=%d
 destination=%@
 initialLinkType=%lu
 remoteDestination=%@
 remoteDeviceUniqueIdentifier=%@
Ti,R,N,V_type
Ti,R,N,V_socket
T@"NSString",R,C,N,V_destination
com.apple.telephonyutilities.callservicesd.calldirectorymaintenance.daily
extensionsChangedForCallDirectoryExtensionManager-%lu
manager
T@"CXCallDirectoryManager",&,N,V_manager
nsExtensionManager
T@"CXCallDirectoryNSExtensionManager",R,N,V_nsExtensionManager
countOfNotificationsReceived
TQ,N,V_countOfNotificationsReceived
join
viewCall
callBack
sendMessage
MPVoicemailDeleteMessageBulletinBoardActionIdentifier
callservicesd launched
_TtC13callservicesd28AnyAudioInterruptionProvider
boxed
_beginOrUpdate
_end
_resetState
_activeDescriptor
_TtC13callservicesd17BlockedCallFilter
B40@0:8@16@24@32
callservicesd.BlockedCallFilter
init()
B24@0:8@"TUHandle"16
B32@0:8@"TUHandle"16@"NSString"24
B24@0:8@"TUCall"16
B24@0:8@"CSDCall"16
B32@0:8@"NSSet"16@"NSString"24
B40@0:8@"NSString"16@"NSString"24@"NSString"32
CSDTinCanIDSProviderDelegate
@40@0:8@16@24@32
isAccountActive
isDestinationValid
destinationsGenerator
outgoingSessionProviderGenerator
outgoingChatGenerator
contactsDataProvider
com.apple.telephonyutilities.callservicesd.TinCan
@"<CSDIDSChat>"36@?0@"CSDExternalIDSDualSession"8@"TUHandle"16B24@"NSDictionary"28
TelephonyUtilities
callservicesd.TinCanIDSProviderDelegate
init(capabilities:queue:)
CSDMessagingCallMessage could not be read
Received TinCan message: %@
TinCan message was of unknown type %@: %@
Could not find chat for set muted action  %@. All chats: %@
Sending TinCan message for sender mute uplink: %@
Cannot start TinCan IDS chat using service %@ because account is not active
Cannot start TinCan IDS chat using handle because IDS destination was invalid
Created TinCan session to destinations %@ with options: %@
Starting TinCan IDS chat: %@
v20@?0@"NSArray"8B16
Tried to make an outgoing call when we already had a ringing call with the same destination
TinCan IDS chat was canceled
CSDIDSChat
B16@0:8
v20@0:8B16
Q16@0:8
v32@0:8@16@?24
v32@0:8{CGSize=dd}16
v20@0:8i16
delegate
T@"<CSDIDSChatDelegate>",N,W
T@"NSUUID",N,R
T@"NSString",N,R
T@"TUHandle",N,R
hasSentInvitation
dateStartedConnecting
T@"NSDate",N,R
video
TB,N
mayRequireBreakBeforeMake
videoStreamToken
inputAudioPowerSpectrumToken
outputAudioPowerSpectrumToken
crossDeviceIdentifier
remoteFromID
endedReason
failureContext
T@"CXCallFailureContext",N,R
upgradeSessionUUID
T@"NSUUID",N,C
muted
sendingAudio
sendingAudioData
relaying
remoteUplinkMuted
remoteMomentsAvailable
shouldSuppressInCallUI
localSenderIdentityUUID
@"<CSDIDSChatDelegate>"16@0:8
v24@0:8@"<CSDIDSChatDelegate>"16
@"NSUUID"16@0:8
@"NSString"16@0:8
@"TUHandle"16@0:8
@"NSDate"16@0:8
@"CXCallFailureContext"16@0:8
v24@0:8@"NSUUID"16
v32@0:8@"<CXVideoAspectRatioDescriptor>"16@?<v@?@"NSArray"B>24
v24@0:8@"<CXVideoAspectRatioDescriptor>"16
v24@0:8@"NSData"16
^@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
superclass
debugDescription
B24@0:8@"Protocol"16
SenderMuteUplink
Server bag does not support quick relay since current version is unspecified
qr-invitations-enabled
Server bag does not support quick relay since minimum version is unspecified
quickRelaySupported
TB,N,R
CSDFaceTimeIDSProviderDelegateServerBag
loaded
B24@0:8@16
Enabling file protection class for conversation persistence storage
Cannot cast value: %@ to type: %@
CSDEmergencyCallbackCapabilities
_emergencyCallbackPossible
emergencyCallbackCapabilitiesDidChange
preventDetachAfterEmergencyCallTimeoutDeterminationHandler
dispatchAfterHandler
dispatchCancelHandler
callCenterObserver
preventDetachAfterEmergencyCallTimeoutWorkItem
emergencyCallbackPossible
callservicesd.EmergencyCallbackCapabilities
v24@?0@"CSDCall"8Q16
Starting prevent detach after emergency call timer with timeout of %d seconds. Marking emergency callback possible
Prevent detach after emergency call timer fired. Marking emergency callback as no longer possible
_CTServerConnectionCarrierSettingsCopyValue - encountered error %d %d
PreventDetachAfterEmergencyCallTimer
@?<v@?>16@0:8
v24@0:8@?<v@?>16
_TtC13callservicesd32AudioInterruptionProviderFactory
callservicesd
allowContactsOnly
CSDCallCenterObserver
v24@0:8Q16
@?16@0:8
callContainerClosure
notificationCenter
triggers
T@"<CSDCallCenterObserverDelegate>",N,W,Vdelegate
TQ,N,Vtriggers
T@"<TUCallContainerPrivate>",N,R
Call not specified in notification %@
Received notification %@ for unrecognized trigger
T@"<CSDCallCenterObserverDelegate>",N,&
TQ,N
@"<CSDCallCenterObserverDelegate>"16@0:8
v24@0:8@"<CSDCallCenterObserverDelegate>"16
@?<v@?@"CSDCall"Q>16@0:8
v24@0:8@?<v@?@"CSDCall"Q>16
@"<TUCallContainerPrivate>"16@0:8
CSDCallCenterObserverDelegate
v32@0:8@"<CSDCallCenterObserver>"16@"CSDCall"24
v24@0:8@"<CSDCallCenterObserver>"16
q16@0:8
#16@0:8
^v16@0:8
T#,N,R
group-facetime-invite
group-facetime-participant-join
group-facetime-blocked-member-added
group-facetime-moments-request
_TtC13callservicesd33GroupFaceTimeNotificationProvider
conversationManager
notificationIdentifiersByConversationUUID
carPlayNotificationIdentifiersByConversationUUID
postedParticipantJoinIdentifiers
checkedBlockedHandlesByConversationUUID
openURL
localizeConversationName
localizeHandleName
notificationType
categories
removeNotification
updateBadgeValue
Unknown notification response received
No notification for conversation UUID %@
GFT_PARTICIPANT_BLOCKED_ADDED
GFT_PARTICIPANT_JOINED
JOIN_FACETIME_CALL
Handling notification %@
Did not find expected pending chat information
momentsStartedRemoteCapture received invalid notification object: %@
could not find conversation for notification stream token: %@
could not find participant for participant in conversation: %@ for requesterID: %@
FACETIME_PHOTO_SUCCESS_REMOTE_CAPTURE
FACETIME_PHOTO_NOTIFICATION_TITLE
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-1096.3.2/TUCallServicesDaemon/Notifications/Providers/GroupFaceTimeNotificationProvider.swift
Fatal error
TUConversationManagerDelegate
v24@0:8@"TUConversationManager"16
v32@0:8@"TUConversationManager"16@"TUConversation"24
_TtC13callservicesd29SoundDescriptorActionResolver
deviceIsHomePod
CSDFaceTimeLivePhotosIDSService
@16@0:8
sharedInstance
T@"CSDFaceTimeLivePhotosIDSService",N,R
com.apple.private.alloy.facetime.lp
remoteParticipantHandles
T@"NSArray",N,R
T@"NSArray",N,C
_TtC13callservicesd33AVAudioClientInterruptionProvider
activeDescriptor
Resetting state
Stopping audio session
Setting audio session properties: %@
Starting audio session
v20@?0B8@"NSError"12
Failed to start audio session: %@
Successfully started audio session
kAUVoiceIOProperty_OperationMode
kCMSessionProperty_CreateSpeakerDevice
kCMSessionProperty_InitiationDescription
kCMSessionProperty_ClientPriority
kCMSessionProperty_AudioMode
kCMSessionProperty_AudioCategory
CSDFaceTimeMultiwayIDSService
T@"CSDFaceTimeMultiwayIDSService",N,R
com.apple.private.alloy.facetime.multi
_TtC13callservicesd34AVAudioSessionInterruptionProvider
audioSession
isLocal
_activationContext
Setting audio activation context: %@ for provider %@
Error setting audio activation context to %@ for provider %@: %@
Successfully set audio activation context
Error overriding output audio port to AVAudioSessionPortOverrideNone: %@
Deactivating and setting audio interruption priority: %ld for provider %@
Error deactivating and setting audio interruption priority to %ld for provider %@: %@
Successfully deactivated and set audio interruption priority
Setting audio interruption priority: %ld for provider %@
Error setting audio interruption priority to %ld for provider %@: %@
Successfully set audio interruption priority
Setting audio active: %@ options: %ld for provider %@
Error setting audio active to %@ for provider %@: %@
Did not deactivate audio successfully, but error code was %d so assuming success
Successfully set audio active: %@ options: %ld
Setting audio category: %@ mode: %@ for provider %@
Error setting audio category to %@ and mode to %@ for provider %@: %@
Successfully set audio mode
CSDProcessObserver
v24@0:8@?16
@24@0:8@16
v28@0:8i16@?20
i24@0:8@16
processIdentifierByBundleIdentifier
applicationMonitor
applicationStateChanged
currentProcessIdentifier
Ti,N,R
T@?,N,C
v16@?0@"NSDictionary"8
callservicesd.ProcessObserver
CSDProcessObserverProtocol
i24@0:8@"NSString"16
@?<v@?iI>16@0:8
v24@0:8@?<v@?iI>16
v28@0:8i16@?<v@?I>20
v32@0:8@"NSString"16@?<v@?I>24
facetime-invite-first-unlock
_TtC13callservicesd28FaceTimeNotificationProvider
%@ does not handle response with identifier %@
Did not find expected pending chat uuid information
FACETIME_SERVICE
FACETIME_AUDIO_SERVICE
FACETIME_%@_CALL_FIRST_UNLOCK_%@_BODY
FACETIME_CALL_FIRST_UNLOCK_TITLE_%@
callservicesd.FaceTimeNotificationProvider
CSDCallFilter
CSDSharedConversationServerBag
activeParticipantPruningTimeout
TQ,N,R
sessionCleanupTimeout
AVCBlobRecoveryGracePeriod
AVCBlobRecoveryTimeout
rebroadcastTimeThreshold
activeParticipantRefreshDelay
automaticUpgradingEnabled
qr-session-ft-upgrade-enabled
Server bag does not have a value for %@, so returning the default one of %@ seconds.
Got %@ from server bag with a value of: %@
qr-session-participant-refresh-delay
qr-session-rebroadcast-threshold
qr-session-avc-blob-recovery-timeout
qr-session-avc-blob-recovery-grace-period
qr-session-cleanup-timeout
qr-participant-prune-timeout
CSDConversationServerBag
routesDidChangeHandler
didPickRouteHandler
didDeselectAllRoutesHandler
supportsPrimaryCalling
hasRelayiCloudAccount
idsDeviceForIDSDeviceIdentifier
queue
nearbyDeviceMonitor
idsDeviceDestinationResolver
nearbyDeviceRoutes
activeRelayClientTransport
currentCallsSupportNearbyDevices
route: %@
Could not find route to pick for %@. All nearby device routes: %@
v16@?0@"NSError"8
Updating activeRelayClientTransport to %@
Error activating companion link client: %@
Updating nearby device routes using devices: %@
Current calls do not support nearby devices (%@) or device doesn't support primary calling (%@)
Could not convert NearbyDevice to NearbyDeviceRoute: %@
callservicesd.NearbyDeviceRouteProvider
CSDDirtyCallManager
callChanged
dirtyCallsArray
dirtyCallsSet
callservicesd.DirtyCallManager
Adding call %@ to dirty calls pool
Asked to dispatch drain the pool
Draining pool with dirty calls: %@
v16@?0@"CSDCall"8
@?<v@?@"CSDCall">16@0:8
v24@0:8@?<v@?@"CSDCall">16
v24@0:8@"CSDCall"16
CSDDuetDonater
v40@0:8@16@24Q32
maxDuration
unknownShortCallSignal
knownCallerSignal
shouldOnlyAllowContactsObserver
callservicesd.DuetDonater
donate known caller mode event context=%@ error=%@
donate unknownShortCallSignal event call=%@ error=%@
com.apple.telephonyUtilities.unknownShortCall
com.apple.telephonyUtilities.knownCallerMode
CSDReporter
v32@0:8@16@24
v36@0:8@16@24B32
v40@0:8@16@24@32
T@"<CSDReporterDataSource>",N,W
@"<CSDReporterDataSource>"16@0:8
v24@0:8@"<CSDReporterDataSource>"16
v40@0:8@"CSDReportingController"16@"CSDCall"24Q32
v32@0:8@"CSDReportingController"16@"CSDCall"24
v24@0:8@"CSDReportingController"16
v36@0:8@"CSDReportingController"16@"CSDMessagingRelayMessage"24B32
v32@0:8@"CSDReportingController"16@"CXTransactionGroup"24
v40@0:8@"CSDReportingController"16@"CXAction"24@"CSDCall"32
v40@0:8@"CSDReportingController"16@"TURoute"24@"CSDCall"32
v32@0:8@"CSDReportingController"16@"TUConversation"24
v40@0:8@"CSDReportingController"16@"NSArray"24@"TUConversation"32
v32@0:8@"CSDReportingController"16@"CSDIDSChat"24
v40@0:8@"CSDReportingController"16@"NSArray"24@"NSUUID"32
CSDCallController
@32@0:8@16@24
callStateController
dirtyCallManager
T@"CSDCallStateController",N,W,VcallStateController
callContainer
callservicesd.CallController
audioInterruptionProviderPool
ringtoneProvider
soundProvider
holdMusicProvider
discoveryModeProvider
deferredEndWorkItem
pendingExpeditedEndInterruptionUUIDs
endInterruptionDelay
mediaServicesWereResetObserver
audioSessionInterruptionObserver
audioController
v16@?0@"NSNotification"8
notification: %@
Other interruption ended so re-interrupting if necessary
resolutionChangedHandler closure invoked
oldDescriptor: %@ descriptor: %@
Ending interruption immediately since there is no longer a resolved descriptor
An end interruption was deferred but we were asked to update to a new descriptor, so canceling the deferred end
Sound playback completed and we had a deferred end descriptor, so expediting end interruption for call with UUID %@
callUUID: %@
Attempted to expedite deferred end interruption block prematurely, so pending the UUID %@
Expediting deferred end interruption work item
Asked to begin or update playback of hold music but new descriptor is equal to activeDescriptor so doing nothing
speechSynthesizerEventHandler invoked
Hold music provider speech synthesizer finished utterance, but hold music provider is no longer active, so not invoking playback continuation
Hold music provider speech synthesizer finished utterance, and hold music provider is still active, so invoking playback continuation
Starting discovery mode
Deferring end interruption by %.2f sec, since descriptor has an interruption deferred end descriptor and there is no pending expedited end interruption
Ending interruption immediately, since descriptor has an interruption deferred end descriptor and there is a pending expedite for UUID %@
Stopping sound playback
Ending discovery mode
OS_dispatch_queue
com.apple.telephonyutilities.callservicesd.audiocontroller
factory
localAVAudioSessionInterruptionProvider
proxyAVAudioSessionInterruptionProvidersByAudioSessionID
avAudioClientInterruptionProvider
Decreasing priority of other AVAudioSession interruption provider %@ to Default
No provider returned for descriptor %@
No existing proxy AVAudioSession interruption provider for ID %u, creating a new one
Created AVAudioSession interruption provider %@
CSDMomentsUsageReport
d16@0:8
@52@0:8i16q20q28d36d44
photoRequestSuccessCount
photoRequestFailureCount
medianRequestDuration
meanRequestDuration
Ti,N,R,Vavailability
Tq,N,R,VphotoRequestSuccessCount
Tq,N,R,VphotoRequestFailureCount
Td,N,R,VmedianRequestDuration
Td,N,R,VmeanRequestDuration
callservicesd.MomentsUsageReport
MomentsUsageReport (Availability: 
_TtC13callservicesd37RingtoneProviderAlertPlaybackObserver
didBeginPlaying
_TtC13callservicesd16RingtoneProvider
contactStore
currentAlert
endedPlayingSemaphore
alertGenerator
playbackObserverGenerator
Requested to end playback, stopping alert: %@
Alert configuration has changed, but unable to create TLAlert using configuration %@
Alert configuration has changed, playing alert %@
Requested to begin or update playback, but alert configuration is unchanged so doing nothing
Playback finished with completion type %@ for alert %@
Playback failed for alert %@: %@
Started playing alert: %@
Setting shouldIgnoreRingerSwitch: %@
Setting externalToneFileURL: %@
Setting vibrationIdentifier: %@
Setting toneIdentifier: %@
From provider, using externalToneFileURL %@
From activity alert %@, using tone %@, vibration %@, bypass ringer %@
Contact retrieval failed for contact identifier %@: %@
v24@?0q8@"NSError"16
TLAlertPlaybackObserver
v24@0:8@"TLAlert"16
CNKeyDescriptor
NSSecureCoding
supportsSecureCoding
NSCopying
@24@0:8^v16
NSCoding
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
CSDTinCanIDSService
T@"CSDTinCanIDSService",N,R
com.apple.private.alloy.tincan.audio
moments-disabled
moments-request-timeout
callservicesd1
momentsDisabled
momentsRequestTimeout
Td,N,R
CSDMomentsServerBag
^@24@0:8:16
multiwayconference
onewayconference
telephonyutilities
com.apple.telephonyutilites.phone
CSDRTCReporter
relayDeviceRouteChangesByCallUUID
groupUUIDToConversationReportingSessions
groupUUIDToConversationInfo
uuidToCallReportingSessions
sessionUUIDToChats
appleIDUtilities
callservicesd.RTCReporter
Reporting message with userInfo %@
Error while sending message with error: %@
Failed to create reporting session with sessionInfo: %@, userInfo: %@
Created reporting session %@ with sessionInfo: %@, userInfo: %@
v16@?0@"NSArray"8
Did not recieve any backends
Received backends %@
_TtC13callservicesd14RTCCSDCallInfo
callUUID
groupUUID
durationMs
providerErrorCode
providerEndedReason
setupTimeMs
connectionTimeMs
relay
incoming
connected
currentlyGrouped
relayDeviceRouteChanges
filteredOutReason
verficationStatus
knownCallerStatus
returnedCall
isSiriSuggested
isKnownContact
isSignedIntoiCloud
callservicesd.RTCCSDCallInfo
com.apple.telephonyutilities.callservicesd.FaceTimeProvider
Posting notification for blocked handle %@
canReceiveRelayedCalls
CSDMomentsControllerLocalCapabilities
enabled
regionBlocked
CSDMomentsNotification
@32@0:8Q16@24
requesterID
TQ,N,R,VstreamToken
callservicesd.MomentsNotification
CHRecentCallIdentifier
CNContactIdentifier
_TtC13callservicesd31CallHistoryNotificationProvider
callHistoryDataSource
callProviderManager
recentCallByNotificationIdentifier
supportedMediaTypes
supportedProviders
mostRecentCallDate
supportsDisplayingFaceTimeAudioCalls
dialRecentCall
description
[WARN] Could not find recent call with identifier: %@
allowOutgoingCallsWhenLocked
com.apple.mobilephone
ACTION_TITLE_CALL_BACK
ACTION_TITLE_SEND_MESSAGE
v16@?0@"TUCall"8
Dialed call: %@
Most recent call date is now %@ for notification provider %@
notificationType: 
supportedMediaTypes: 
supportedProviders: 
Call history database changed
Could not retrieve date of most recent call for notification provider %@
MISSED_CALL_MESSAGE
MISSED_FACETIME_VIDEO_CALL
MISSED_FACETIME_AUDIO_CALL
Updating call history badge count for notification provider %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-1096.3.2/TUCallServicesDaemon/Notifications/Providers/CallHistoryNotificationProvider.swift
CSDCallFilterManager
filters
senderIdentityClient
callservicesd.CallFilterManager
_TtC13callservicesd17HoldMusicProvider
speechSynthesizerEventHandler
speechSynthesizer
audioPlayer
Ending hold music
Ending hold message
canceled speech synthesizer utterance
finished speech synthesizer utterance
No audio player could be created, so unable to begin playing hold music
Failed to start playing hold music
Successfully started playing hold music
Error retrieving file URL for hold music sound file
Error creating AVAudioPlayer with fileURL %@: %@
Created hold music audio player with URL %@
started speech synthesizer utterance
ANSWER_AND_HOLD_OUTGOING_MESSAGE
Speaking utterance %@
AVSpeechSynthesizerDelegate
v48@0:8@16{_NSRange=QQ}24@40
v32@0:8@"AVSpeechSynthesizer"16@"AVSpeechUtterance"24
v48@0:8@"AVSpeechSynthesizer"16{_NSRange=QQ}24@"AVSpeechUtterance"40
_TtC13callservicesd22RTCCSDRelayDeviceRoute
type
failed
callservicesd.RTCCSDRelayDeviceRoute
CSDMomentsControllerSession
remoteIDSDestinations
isRegistered
activeRequestsByTransactionID
T@"<CSDAVCMoments>",N,R,Vmoments
T@"NSDictionary",N,C
TB,N,VisRegistered
callservicesd.MomentsControllerSession
remoteIDSDestinations=
activeRequestsByTransactionID=
CSDAVCMoments
@48@0:8q16@24@32@40
@28@0:8C16@20
T@"<CSDAVCMomentsDelegate>",N,R
streamToken
Tq,N,R
TI,N,R
activeRequestCount
pendingRequestCount
@"<CSDAVCMomentsDelegate>"16@0:8
@48@0:8q16@"NSString"24@"<CSDAVCMomentsDelegate>"32@"OS_dispatch_queue"40
@"<CSDAVCMomentsRequest>"28@0:8C16@"NSString"20
NSObject
^@32@0:8:16@24
_TtC13callservicesd17UnknownCallFilter
%@ filtering is disabled; call filter will allow call %@
CSDContactsCallFilter
Found contact (%@) or suggested contact (%@); call filter will allow call %@
Did not find contact or suggested contact; call filter will not allow call %@
Contact fetch failed with the following error %@
CSDRouteController
v24@0:8@16
_routesByUniqueIdentifier
routeWasPickedHandler
timedOutPickingRouteHandler
routeProviders
pendingRouteContext
routesByUniqueIdentifier
T@"NSDictionary",N,R
callservicesd.RouteController
routes: %@
Could not find route to pick with unique identifier %@. All routes: %@
Timed out waiting for route to become picked: %@
Updated routes from %@ to %@
v16@?0@"TURoute"8
com.apple.telephonyutilities.callservicesd.pairedhostdeviceroutecontroller
com.apple.telephonyutilities.callservicesd.localroutecontroller
B16@?0@"TUCall"8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-1096.3.2/TUCallServicesDaemon/TUCallContainerProtocol_CSD.swift
Call is not a CSDCall: 
CSDIDSProviderDelegateCapabilities
wiFiAvailable
wiFiAllowed
cellularDataAvailable
cellularDataAllowed
cellularDataPreferred
activeConversationsListKey
CSDConversationPersistenceController
storage
callservicesd.ConversationPersistenceController
Expected an active conversation for key %@ but found nothing. Cleaning up cached conversation.
Cannot create CSDMessagingConversation from data in cache for key: %@. Cleaning up cached conversation
Missing fields on conversation from cache %@. Cleaning up cached conversation.
Removing active conversation with cache key: %@
Removing conversation with UUID: %@ from cache.
Error creating CSDMessagingConversation to cache from conversation with UUID: %@.
Caching conversation with UUID: %@
Adding active conversation with cache key: %@
Missing fields on conversation from cache %@. Returning a nil conversation.
interruptionDescriptor: 
interruptionDeferredEndDescriptor: 
ringtoneDescriptor: 
soundDescriptorAction: 
holdMusicDescriptor: 
discoveryModeDescriptor: 
_TtC13callservicesd29PairedHostDeviceRouteProvider
pairedHostDeviceRoutes
Could not find route to pick for %@. All paired host device routes: %@
callservicesd.PairedHostDeviceRouteProvider
contactIdentifier=
providerRingtoneSoundURL=
CSDIDSPendingChat
@36@0:8@16B24@28
isVideo
TB,N,R,VisVideo
T@"TUHandle",N,R,Vhandle
CSDGroupIDSPendingChat
callservicesd.GroupIDSPendingChat
callservicesd.IDSPendingChat
_TtC13callservicesd13AudioResolver
ttyProviderObserver
deviceSupportsRingtone
soundDescriptorActionResolver
resolvedDescriptor
resolutionChangedHandler
Unable to create interruption descriptor for call %@
CSDFaceTimeIDSProviderDelegateCapabilities
momentsAvailable
_TtC13callservicesd23LocalAudioRouteProvider
v16@0:8
audioRoutes
localAudioSystemProvider
callAudioCategory
callAudioMode
callAudioInterruptionState
Could not find route to pick for %@. All audio routes: %@
Failed to pick audio route %@: %@
Call does not have audio interruption so setting prematurely selected audio route to %@
Updating audio information using call: %@
Picking prematurely selected audio route now that audio interruption has begun: %@
Updated audio routes: %@
Unable to create audio route from route dictionary: %@
callservicesd.LocalAudioRouteProvider
nearbyDeviceProvider
devicesChangedHandler
devicesByEffectiveIdentifier
callservicesd.NearbyDeviceMonitor
v16@?0@"RPCompanionLinkDevice"8
v20@?0@"RPCompanionLinkDevice"8I16
Device changed: %@
Lost nearby device: %@
Found nearby device: %@
Local device updated
activationContext=
CXAudioSessionActivationStateObserver
CSDUserNotificationController
callFilterManager
phoneNotificationCenter
faceTimeNotificationCenter
providersByActionIdentifier
providers
v40@0:8@16@24@?32
Received %@
Ignoring %@
Received response %@
Could not find notification provider for action
callservicesd.UserNotificationController
com.apple.telephonyutilities.callservicesd.usernotificationcontroller
com.apple.facetime
Loaded user notification controller
Setting badge string to %@ on %@
APPLICATION_BADGE_UNKNOWN
APPLICATION_BADGE_UNKNOWN_COUNT
Successfully set badge string to %@
Error setting badge string to %@
count isAmbiguous 
Removing notification with identifier %@ from %@
Adding notification request %@ to %@
Successfully posted notification with identifier: %@
Error while posting notification: %@
UNUserNotificationCenterDelegate
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
_TtC13callservicesd21DiscoveryModeProvider
new-voicemail-no-caller-id
new-voicemail-no-visual-voicemail
nonvisualvoicemail
VMVoicemailIdentifier
voicemailDuration
_TtC13callservicesd29VoicemailNotificationProvider
telephonyClient
voicemailDataSource
postedVoicemailIdentifiers
pendingVoicemailIdentifiers
mostRecentVoicemail
mostRecentNonVisualVoicemailDate
localizeVoicemailName
callbackVoicemail
$__lazy_storage_$_unsubscribedVoicemailCheck
Could not find voicemail with identifier: %lu
v36@?0B8@"NSNumber"12@"NSString"20@"NSError"28
ACTION_TITLE_VOICEMAIL_MESSAGE_DELETE
Subscription status changed: %@
Removing all voicemail notifications. Current notification identifiers: %@
Online status changed: %@
Voicemails changed: %@
Voicemail is not subscribed
Voicemail store changed, and we found the following voicemail messages we were waiting for: %@
Retrieving messages delivered after %@
Received %lu new voicemails since last message %@
Voicemail store changed, but we did not find any voicemail messages we were waiting for. Waiting for: %@
Asked to post %lu voicemails
Adding notification with count: %lu
Could not copy voicemail audio file to temporary directory
Could not create notification attachment for voicemail %@
NEW_VOICEMAIL_FORMAT
Most recent voicemail is now %@
Voicemail is not MWI - Ignoring voicemailInfoAvailableNotification
Handling voicemailInfoAvailableNotification voicemailInfo: %@, context: %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-1096.3.2/TUCallServicesDaemon/Notifications/Providers/VoicemailNotificationProvider.swift
Retrieving voicemail messages failed with error %@
Retrieving inbox voicemail messages failed with error %@
CoreTelephonyClientVoicemailDelegate
v24@0:8@"CTXPCServiceSubscriptionContext"16
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTVoicemailInfoType"24
CSDCallHistoryCallFilter
callHistoryManager
Could not create call history handle from call %@
Found call history call; call filter will allow call %@
Did not find call history call; call filter will not allow call %@
Fetching call history calls matching predicate %@
_TtC13callservicesd13SoundProvider
player
Asked to begin or update playback of sound with descriptor %@ but no TUCallSoundPlayerDescriptor could be determined, so not playing
Attempt to play call sound player descriptor %@ returned false
Asked to begin or update playback of sound but new descriptor is equal to activeDescriptor so doing nothing
_TtC13callservicesd22RTCCSDConversationInfo
uuid
startDate
endDate
duration
maximumMemberCount
initialMemberCount
finalMemberCount
maxNumberOfParticipants
AVCBlobRecoveryAttempts
AVCBlobRecoveryTimeouts
callservicesd.RTCCSDConversationInfo
_TtC13callservicesd13CSDAVCMoments
I16@0:8
i16@0:8
moments
T@"<CSDAVCMomentsDelegate>",N,W,Vdelegate
v28@0:8@16I24
v48@0:8@16@24@32@40
callservicesd.CSDAVCMoments
CSDAVCMomentsRequest
C16@0:8
transactionID
mediaType
TC,N,R
requesteeID
AVCMomentsDelegate
v28@0:8@"AVCMoments"16I24
v40@0:8@"AVCMoments"16@"AVCMomentsRequest"24@"NSError"32
v48@0:8@"AVCMoments"16@"AVCMomentsRequest"24@"NSURL"32@"NSError"40
v24@0:8@"AVCMoments"16
CSDManagedDeviceMonitorDelegate
v24@0:8@"TUCall"16
CSDManagedDeviceMonitor
T@"<CSDManagedDeviceMonitorDelegate>",N,&
@"<CSDManagedDeviceMonitorDelegate>"16@0:8
v24@0:8@"<CSDManagedDeviceMonitorDelegate>"16
CSDKeychainPasswordItem
@24@0:8^@16
B32@0:8@16^@24
B24@0:8^@16
service
accessGroup
callservicesd.KeychainPasswordItem
Successfully deleted item from keychain
OS_os_log
No item found. Added new item to keychain
Saved item to keychain
CSDScreenTimeCallFilter
B32@0:8@16@24
conversationsForBundleIdentifier
contextsForCallIdentifier
observationForCallIdentifier
T@"<CSDManagedDeviceMonitorDelegate>",N,W,Vdelegate
handleCallRemoteParticipantsChanged: %@
Conversation context for call: %@ changed to %d
v8@?0
callservicesd.ScreenTimeCallFilter
CSDCallProviderManagerDelegate
v24@0:8@"CSDCallProviderManager"16
CSDMomentsRequest
avcRequest
session
T@"<CSDAVCMomentsRequest>",N,R,VavcRequest
T@"CSDMomentsControllerSession",N,R,Vsession
callservicesd.MomentsRequest
enabled: %d
accelerometer orientation changed to %d
Beginning transaction for %@. Transaction count is now %lu
Ending transaction for %@. Transaction count is now %lu
CSD encountered a fault with reason: %@
Invalidating process assertion for %@
Preparing conference with configuration: %@
Initializing new callID with device role %d
Fetched local invite dictionary: %@
Error fetching local invite dictionary %@: %@
Fetching local invite dictionary using remote invite dictionary %@
Failed to initialize a new call with device role %d.
Failed to create an AVConference instance. This usually happens when the AVConference SPI can't communicate with mediaserverd over XPC
[WARN] Attempted to prepare conference which has already started preparing (state=%d)
transport: %@ self.configuration: %@
Successfully started connection with configuration=%@ (timestamp: %f)
Failed to start connection with configuration=%@: %@
[WARN] Attempted to start conference which has not been prepared (state=%d)
[WARN] Conference does not exist
Calling stop on conference %@
Calling cancel on conference %@
[WARN] Attempted to cancel a conference that has already started connecting: %@
Setting remote invite dictionary from %@ to %@
Setting caller from %d to %d
Attempting to set state to %d, which precedes current state %d
Setting microphoneMuted to %d for %@
Setting sendingAudio to %d
Setting sendingAudioData to %d
Setting sendingVideo to %d
Setting conferenceProvider videoPaused to %d
Updating capabilities from: %@ to %@
Setting remoteVideoPresentationSize from %@ to %@
Setting remoteVideoPresentationState from %d to %d
Conference didStart timeout fired
Updating device role from %d to %d
conference=%@ didStartSession=%d error=%@
Successfully started session
Session is connected, setting videoPaused to expected value: %d
[WARN] Session is already past Connected state, not sending delegate started
Failed to start session. error=%@
didStopError=%@ callMetadata=%@
AVConference stopped in failure: %{public}@
Sending delegate bytesOfDataUsageChanged: %ld
didPauseAudio=%d error=%@
didPauseVideo=%d error=%@
Not setting expectedIsSendingVideo to nil since our state is %d
Video was set to didPauseVideo: %d expectedIsSendingVideo: %@. Setting sendingVideo to expectedIsSendingVideo
remoteVideoPaused=%d
remoteMediaStalled=%d
Server died for conference provider %@
Registering to handle call handoff activity type with dynamic identifier %@ for provider %@
Frontmost call is hosted here ...
... and it is an endpoint here ...
... and we are a secondary device ...
... using a broadcast activity with dynamic identifier: %@.
[WARN] ... but no dynamic identifier could be found (%d) or no handoff user info exists (%d). Not broadcasting frontmost call
... but we are a primary device. Not broadcasting frontmost call
... and it is being relayed elsewhere. Using a local activity
Beginning handoff activity %@ for call %@
Ending handoff activity: %@
Broadcasting suppress ringtone activity for declined call: %@
Began app history activity %@ for call %@
Broadcasting suppress ringtone activity for call that suppressed its ringtone: %@
Broadcasting suppress ringtone activity for incoming call that started connecting: %@
Received broadcast for activity type %d and destination ID %@. Suppressing ringtone due to remote suppression for call %@
Received broadcast for activity type %d but ignoring it because its destination ID (%@) does not match this ringing call's desination ID (%@)
Calling ADClientSetValueForDistributionKey() with key %@ and value %f
Asking BackBoard to set the proximity detection mode to (%u).
Handling proximity sensor covered changed to %d
VoiceOver is enabled and the proximity sensor is covered, changing the audio route from speaker to receiver.
VoiceOver is enabled and the proximity sensor is uncovered, changing the audio route from receiver to speaker.
Proximity detection should be %d since isReceiver: %d, isSpeaker: %d, isVoiceOverRunning: %d
Proximity detection should be %d since isEndpointOnCurrentDevice: %d, isInterfaceOrientationPortrait: %d, isRTT: %d, isTTY: %d
[WARN] Tried to get the call history identifier for this call (%@) but no conference ID was available (%@), we'll fall back to another method (GUID = %@). This call may now not sync properly between devices.
This chat's conferenceID and GUID are nil or empty, we cannot create a safe call history identifier
[WARN] Could not weak link notification string '%@'. Not observing notifications for it.
Calling endChatWithReason on chat %@ with reason %ld
Using account %@
Inviting additional peers %@, excluding push tokens %@
Could not initiate FaceTime call - No chat returned for handle %@ with account %@
Could not initiate FaceTime call - No IM handle returned for handle %@ with account %@
Could not initiate FaceTime Call - Account %@ not registered
Fulfilling pending answer call action because a chat with matching UUID connected: %@
[WARN] No pending answer call actions found with UUID: %@
Failing answer call action for chat because it ended before connecting: %@
Using call ended reason remote hangup because ended reason is %@
Using call ended reason answered elsewhere because ended reason is %@
Using call ended reason declined elsewhere because ended reason is %@
Using call ended reason unanswered because ended reason is %@
Using call ended reason failed because ended reason is %@
Incoming call was denied with error %@ so declining chat with IMAVResponseFilteredCall: %@
Calling acceptInvitation on chat %@
Not accepting invitation to chat %@ since it is already Connected
Calling endChat on chat %@
Calling setIsSendingAudio with %d for chat %@
Not holding chat %@ since it is not yet Connected
Calling setIsSendingVideo with %d for chat %@
Calling setRemoteVideoPresentationSize with %@ for call %@
Calling setRemoteVideoPresentationState with %ld for chat %@
Calling setRelayed with %d for chat %@
Calling setMuted with %d for chat %@
Requesting remote active participants for cached conversation with UUID: %@
Setting audioEnabled to %d
Setting videoEnabled to %d
Setting videoPaused to %d
Adding participant: %@
Removing active participant and replacing it with one with the same identifier but a newer AVC data blob.
[WARN] Conversation already contains participant with no change in AVC data: %@
Removing participant with identifier: %lu  handle: %@
 Found matching handle %lu: %@
[WARN] removeParticipantWithIdentifier:fromHandle: Not removing participant handle (%@) didn't match, with identifier %lu: %@
[WARN] removeParticipantWithIdentifier:fromHandle: Could not find participant with identifier %lu: %@
remoteMembers: %@ triggeredLocally: %d
Conversation %@ already contains member with handle %@, filtering out.
[WARN] No new members were added to conversation: %@
self: %@ context: %@
Creating CSDAVCSession with transport token %@
Not joining IDS group session because wantsStagingArea is true, instead moving to preparing state
Failed to create CSDAVCSession
[WARN] Not joining conversation because it isn't waiting or preparing: %@
[WARN] Not sending local participant data, no AVCSession: %@
[WARN] Not starting audio for conversation because it isn't joining: %@
self: %@
Leaving CSDIDSGroupSession: %@
[WARN] Not leaving conversation because it isn't joining/joined: %@
Starting %@
Skipped starting session since session start is already in progress %@
[WARN] Timed out waiting for session to stop after %@, moving to waiting state and cleaning up.
Timed out waiting for conversation to leave, but it's not in state leaving (instead is in %i).
Timed out requesting AVC blob for participant with identifier: %@
Replacing existing recovery timeout for participant with identifier %lu
Setting up AVC blob recovery timeout for participant with identifier %lu
Cancelling in flight AVC blob recovery for participant with identifier %lu
Pruning remote participants as necessary, current server identifiers: %@
didJoinGroup: %d error: %@
Failed to join group: %@
CSDIDSGroupSession %@ failed to leave group for conversation %@: %@
error: %@
Invalidating cached conversation: %@, no remote active participants were found.
Activating cached conversation with UUID: %@ since %lu remote participants were still found to be active.
didStart: %d error: %@
Not in the joining state so not moving to joined
Failed to start CSDAVCSession: %@
didDetectError: %@
Rebroadcasting AVC data to other members of this group to attempt to recover from error (last rebroadcast time was %f).
Not attempting to rebroadcast message since state was not in join (was %d)
AVCSession %@ stopped in failure for conversation %@: %@
CSDAVCSession %@ server did disconnect for conversation %@
changedLocalAudioEnabled=%d
Failed to set localAudioEnabled (%d): didSucceed (%d): error: %@
Audio was set to audioEnabled: %d self.expectedAudioEnabled.boolValue: %@. Setting audioEnabled to self.expectedAudioEnabled.boolValue
changedLocalVideoEnabled=%d
Failed to set localVideoEnabled (%d): didSucceed (%d): error: %@
Video was set to videoEnabled: %d self.expectedVideoEnabled.boolValue: %@. Setting videoEnabled to self.expectedVideoEnabled.boolValue
changedLocalVideoPaused=%d
Failed to set localVideoPaused (%d): didSucceed (%d): error: %@
Video paused was set to videoPaused: %d self.expectedVideoPaused.boolValue: %@. Setting videoPaused to self.expectedVideoPaused.boolValue
[WARN] Unknown participant with identifier: %lu activeRemoteParticipants: %@
Ignoring %@ message because we already have a call with this uniqueProxyIdentifier: %@
We already have a call for this %@ message: %@. Updating it with new values
Creating new call for %@ message
[WARN] Ignoring %@ message because no call exists for %@ and the message is not from the paired device
[WARN] Could not find call with uniqueProxyIdentifier %@. All current calls: %@
Call answered elsewhere message had no uniqueProxyIdentifier set. Using current calls
Resetting call %@ with protoCall %@
Not resetting call %@ with protoCall %@ because they are equal
Creating new call with protoCall %@
Existing call no longer exists and is not sending: %@
Updating call %@ with protoCall %@
Not updating call %@ with protoCall %@ because they are equal
Not updating remote call state for call because it is an endpoint here: %@
[WARN] Received %@ message, but we already have some calls
Ignoring %@ because messageSendTime (%f) <= call.remoteUplinkMutedSetTime (%f)
Pulling remotely hosted call: %@
Failed to prepare conference for pull message %@ and call %@
Fetching localSenderIdenity for localSenderIdentityAccountUUID %@
Replacing hardPauseDigits '%@' with '%@' since protocolVersion is %d
Replacing soundRegion %ld with %ld since protocolVersion is %d
Created pause digits queue: %@
Setting disconnected reason to dial failed because call is outgoing but has not started outgoing
Setting disconnected reason to remote hangup because ended reason is %ld
Setting disconnected reason to remote hangup because call has started connecting and ended reason is %ld
Setting disconnected reason to remote hangup because outgoing call has not started connecting and ended reason is %ld but call is a telephony call
Setting disconnected reason to remote unavailable because outgoing call has not started connecting and ended reason is %ld
Setting disconnected reason to answered elsewhere because ended reason is %ld
Setting disconnected reason to declined elsewhere because ended reason is %ld
Setting disconnected reason to handed off because ended reason is %ld
Setting disconnected reason to user busy because ended reason is %ld
Setting disconnected reason to call failed because failure reason is %ld
Setting disconnected reason to account unsupported because failure reason is %ld
Setting disconnected reason to network unsupported because failure reason is %ld
Setting disconnected reason to provider crashed because failure reason is %ld
Setting disconnected reason to media start failed because failure reason is %ld
Setting disconnected reason to media server crashed because failure reason is %ld
Setting disconnected reason to other secondary device in use because failure reason is %ld
Setting disconnected reason to call failed because ended reason is %ld
Failed to find a call source to dial with for dial request: %@
for call: %@ pauseDigitsQueue: %@
[WARN] Next pause digits are not hard pause
[WARN] No next pause digits exist
for call: %@ key: %d
for call: %@ remoteVideoPresentationSize: %@
for call: %@ remoteVideoPresentationState: %d
Dequeueing next pause digits
Sending pause digits: %@ type: %ld
Found queued soft pause digits: %@
for pauseDigitsQueue: %@
Break before make timeout: %lfs
Call started outgoing: %@
Reporting emergency call to screen time
There was an error enabling emergency mode. Enabled successfully (%d) Error: %@
Disconnecting video call because another call started outgoing: %@
Disconnecting call using the baseband because a video call started outgoing and wantsBreakBeforeMake=YES: %@
All calls ended. Setting uplink and downlink muted to NO
Call started connecting: %@
Video call connected: %@
Disconnecting current call because another video call connected: %@
Posting CLTM notification %@ and setting state to %llu
Requesting to pull call %@ because its continuity state is different from call %@
Disconnecting call %@ because its continuity state is different from call %@
An endpointIDSDestination %@ is present for call %@ so pushing all hosted calls to that destination
An endpointRapportMediaSystemIdentifier="%@" or endpointRapportEffectiveIdentifier="%@" is present on dial request for call %@ so attempting to pick matching route
Setting up break before make timeout for call: %@
Disconnecting call because video call is still sending and break before make timeout fired: %@
CarPlay is not connected; muting uplink for RTT call %@
CarPlay is connected; unmuting uplink for RTT call %@
Setting uplink muted for TinCan call %@
[WARN] Store demo mode enabled. Limiting certain calls
Starting call duration limit timer as we are in a retail environment
Stopping call duration limit timer
Disconnecting restricted calls because the limited call duration timer fired: %@
Found active call needing hold music: %@
Hold music enabled - call is active so muting uplink and downlink
Hold music disabled - unmuting uplink and downlink
Created status bar assertion %@ with pid %d and statusString %@
Successfully acquired status bar assertion: %@
Failed to acquire status bar assertion: %@
Status bar assertion invalidated: %@
Invalidating status bar assertion: %@
Creating IDSGroupSession with options: %@
preferences: %@
options: %@
participantDestinationIDs: %@ contextData: %@ triggeredLocally: %d
Sending participantData: %@
session: %@
self: %@ not running pending blocks yet because self.hasStarted=%d self.hasReceivedAccept=%d self.isInitiator=%d
self: %@ running block %@ with transport %@ and %@ accept payload data
self: %@ pending block on transport availability: %@
[WARN] Transport availability block timed out: %@
Session %@ is not connected and waitUntilConnected is YES. Pending data
Session %@ is not connected but waitUntilConnected is NO. Sending data
Session %@ is connected. Sending data
Session %@ is ending/ended. Dropping data on the floor
self: %@ destinations: %@
Session %@ is waiting. Sending data
Session %@ is not waiting. Dropping data on the floor
self: %@ data: %@
Setting session %@ to ending for prepareToEnd
Not setting session %@ to ending for prepareToEnd because session is not connected
Received invitation ACCEPT with data for session %@ from (fromID=%@) destination %@ device %@
Received invitation CANCEL with data for session %@ from (fromID=%@) destination %@ device %@
Received invitation DECLINE with data for session %@ from (fromID=%@) destination %@ device %@
Received session MESSAGE for session %@ from (fromID=%@) destination %@ device %@
thumperCallingAllowedOnDefaultPairedDeviceDefault keyExists: %d isAllowed: %d
Setting %@ default to %d
Error synchronizing NPS defaults: %@
Posting Thumper available notification on secondary device for account %@.
Not posting Thumper available notification on secondary device; Thumper service caller ID %@ does match match caller ID from Thumper account %@
Not posting Thumper available notification on secondary device; Could not retrieve Thumper account with identifier %@
Not posting Thumper available notification on secondary device; Thumper is already enabled for account with identifier %@.
Dismissing Thumper available notification on secondary device for account ID %@
Displaying Thumper enabled disclaimer on secondary device for account ID %@
Dismissing Thumper enabled disclaimer on secondary device for account ID %@
Could not obtain Thumper account identifier for sender identity UUID %@ from data source capabilities state %@
Comparing cached Thumper capabilities state %@ with data source capabilities state %@
Default paired device unique ID was %@ and is now %@
Check if devices should be enrolled now that the default paired device changed.
Checking to see if any devices have been removed from this iCloud account.
Device with the uniqueID %@ will be unpaired from Thumper because it is no longer on the IDSService.
Show a reminder to the user that thumper is now available.
User requested to Turn On Thumper calling
[WARN] Not adding user notification because we are already displaying one
Removing existing reminder notification
Show a disclaimer to the user about their emergency address info now that thumper is enabled.
Emergency Address disclaimer: Preferences button pressed, open URL (%@).
Removing existing emergency address disclaimer
Archiving Thumper capabilities state object failed with error %@
Unarchiving Thumper capabilities state object failed with error %@
Archived object was of unexpected class %@: %@
Prefereces object was of unexpected class %@: %@
Initializing %@
FaceTime Audio availability is %ld. FaceTime Video availability is %ld
Initialized %@
Active accounts changed for service %@: %@
Received caller ID changed notification: %@
Received service availability changed notification: %@
Received devices changed notification: %@
FaceTime iCloud account is %@ (isActive=%d, profileID=%@) and relay iCloud account is %@ (isActive=%d, profileID=%@)
Choosing outgoingRelayCallerID based on FaceTime caller ID %@ and available outgoing relay caller IDs %@
Outgoing Caller ID %@ does not appear to be a phone number (%d) or is not in our list of available outgoing relay Caller IDs (%d). Sorting the aliases and picking the first one that satisfies the aforementioned requirements: %@
No aliases appear to be a phone number either and exist in our list of available outgoing relay Caller IDs. Sorting the available outgoing relay Caller IDs and picking the first one: %@
Outgoing Caller ID is %@
streamPreferences: %@
XPC connection interrupted from client %@
XPC connection invalidated from client %@
dialRequest: %@
Could not determine UUID for FaceTime app bundle identifier %@
Setting disconnected reason to call failed because invitation was sent but no push tokens were available to receive the invitation for call %@
Setting disconnected reason to call failed because CSDIDSDualSession ended reason is %ld for call %@
Using call ended reason answered elsewhere because CSDIDSDualSession ended reason is %ld
Using call ended reason declined elsewhere because CSDIDSDualSession ended reason is %ld
Using call ended reason unanswered because CSDIDSDualSession ended reason is %ld
Using call ended reason remote ended because CSDIDSDualSession ended reason is %ld
Setting disconnected reason to call failed because CSDAVConference ended reason is %ld for call %@
Using call ended reason remote ended because CSDAVConference ended reason is %ld
Setting local portrait aspect ratio %@ and local landscape aspect ratio %@
[WARN] Disabling key exchange because %@ default is set to YES
videoAspectRatioDescriptor: %@
Canceling session
Declining session
Stopping conference
Ending session
for call %@
Setting isSendingAudio to %d for chat %@
Conference has not been created yet. Updating shouldStartAudioPaused to %d
Setting isSendingAudioData to %d for chat %@
Setting isSendingVideo to %d for chat %@
Conference has not been created yet. Updating shouldStartVideoPaused to %d
Setting relaying from %d to %d for chat %@
transport: %@
sessionStarted: %@
Not starting connection because conference state is %d
session %@ invitationSentToPushTokens %@ shouldBreakBeforeMake %d
session %@ endedWithReason %d
session %@ receivedInvitationAcceptWithData %@
[WARN] Ignoring invitation accept since chat is incoming %@
[WARN] Ignoring invitation accept since there is no remote from ID set on the session.
Dropping invitation accept since there is no remote push token provided.
Dropping invitation accept since the remote push token was not one of the ones we invited.
[WARN] Ignoring incoming accept since accompanying message was nil
[WARN] Ignoring incoming message since message with type=%@ was not invite.
Error while creating UUID from protoUUID: %@
[WARN] Not setting upgradeSessionUUID for message: %@ self.upgradeSessionUUID: %@
Not starting connecting because session state is %d and conference state is %d
session %@ receivedInvitationDeclineWithData %@
session %@ receivedInvitationCancelWithData %@
session %@ receivedData (data is %@)
message: %@
[WARN] First frame not received after %f seconds for %@
reason=%ld error=%@
Remote media stalled for chat: %@. Reconnecting IDS session.
[WARN] Error encountered resolving behavior via DND. Defaulting isDestinationIDAllowedThroughDoNotDisturb to YES. error=%@
Handling %@ by preparing connected sessions to end
Handling %@ by ending ending sessions
CSDMessagingCallMessage could not be read
Handling %@ with message: %@ latency: %llu
CSDMessagingCallMessage is of unsupported type: %d
Updating dialingIDSDevice using device list %@
A paired device exists, so using that as the dialing device: %@
[WARN] We found two devices with matching linkedUserURIs (arbitrarily choosing the first): %@ and %@
A device exists with a linkedUserURI that matches Caller ID %@, so using that as the dialing device: %@
[WARN] Could not find a dialingIDSDevice. No paired devices exist and no devices that support phone calls and have a linkedUserURI for %@ exist.
Could not retrieve local invite dictionary for message: %@
(IDSMessaging Host->Client) sendIncomingCallMessageToClientForCall: %@
Call cannot be answered. Only notifying the paired device
[WARN] Failed to prepare conference for call %@. Not sending incoming call message to relay clients
Not sending out incoming call invitation because call is no longer ringing: %@
(IDSMessaging Host->Client) sendCallDialedMessageToClientForCall: %@
(IDSMessaging Host->Client) sendCallAnsweredElsewhereMessageToClientForCall: %@
(IDSMessaging Host->Client) sendCallDisconnectedMessageToClientForCall: %@
(IDSMessaging Host->Client) sendCallConnectedMessageToClientForCall: %@
(IDSMessaging Host->Client) sendResetWantsHoldMusicMessageToClientForCall: %@
(IDSMessaging Host->Client) sendUpdateCallDisplayContextMessageToClientForCall: %@
(IDSMessaging Host->Client) sendUpdateRemoteUplinkMutedCallMessageToClientForCall: %@
(IDSMessaging Host->Client) sendUpdateSupportsTTYWithVoiceCallMessageToClientForCall: %@
(IDSMessaging Host->Client) sendUpdateCallModelMessageToClientForCall: %@
(IDSMessaging Host->Client) sendDeviceUnavailableMessageToClient
(IDSMessaging Host->Client) sendPullRelayingCallsMessageToClient
(IDSMessaging Host->Client) sendResetStateMessageToClient
(IDSMessaging Host->Client) sendHardPauseAvailabilityMessageToClientForState %d digits: %@
(IDSMessaging Host->Client) sendUpdateRemoteCallStateMessageToClient
(IDSMessaging Host->Client) sendCallStartedConnectingMessageToClientForCall: %@
(IDSMessaging Host->Client) sendDialCallFailedForUniqueProxyIdentifier: %@
(IDSMessaging Host->Client) sendPushCallsMessageToClientDestination: %@
(IDSMessaging Host->Client) Sending UpdateCallContext message: %@
(IDSMessaging Host->Client) sendNeedsManualInCallSoundsChangeMessageToClientForCall: %@
(IDSMessaging Host->Client) sendInvitationSentMessageToClientForCall: %@
(IDSMessaging Host->Client) sendUpdateRoutesMessageToClientForRoutes: %@
(IDSMessaging Client->Host) sendDialCallMessageToHostForCall: %@
No dialing IDS device found. If we aren't already in a session, this dial call attempt will fail.
Failed to prepare conference for call %@. Disconnecting call with conference failed
Not sending out dial call invitation because call is no longer sending: %@
(IDSMessaging Client->Host) sendAnswerCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendDisconnectCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendHoldCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendUnholdCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendGroupCallMessageToHostForCall: %@ otherCall: %@
(IDSMessaging Client->Host) sendUngroupCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendSwapCallsMessageToHost
(IDSMessaging Client->Host) sendEndActiveAndAnswerCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendEndHeldAndAnswerCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendHoldActiveAndAnswerCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendDisconnectCurrentCallAndActivateHeldToHost
(IDSMessaging Client->Host) sendDisconnectAllCallsToHost
(IDSMessaging Client->Host) sendSendHardPauseDigitsMessageToHost
(IDSMessaging Client->Host) sendRequestCallStateMessageToHost
(IDSMessaging Client->Host) sendPullCallsMessageToHost
[WARN] Failed to prepare conference while pulling calls
(IDSMessaging Client->Host) sendPushRelayingCallsMessageToHostForSourceIdentifier: %@
(IDSMessaging Host->Client) sendUpdateRemoteUplinkMutedCallMessageToHostForCall: %@
(IDSMessaging Host->Client) sendPickRouteMessageToHostForRoute: %@
(IDSMessaging Client<->Host) sendSetTTYTypeCallMessageForCall: %@ ttyType: %d
(IDSMessaging Client<->Host) sendSetUplinkMutedCallMessageForCall: %@ uplinkMuted: %d
(IDSMessaging Client<->Host) sendSuppressRingtoneMessageForCall
(IDSMessaging Client<->Host) sendUpdateSystemVolumeForCall: %@
Handle incoming %@ message: %@
Messaging device can't receive relayed calls ...
... and we were told to decline the session invite. Declining incoming %@ message: %@
... and we were told not to decline the session invite. Ignoring incoming %@ message: %@
[WARN] Setting should ignore session to YES for %@ message because message is from a guest destination and this device is not an AudioAccessory
[WARN] Setting should ignore session to YES because TUICFInterface allowCall = NO for destinationID %@ and provider %@
[WARN] Setting should ignore session to YES because a call exists with sending status: %@
[WARN] Setting should ignore session to YES because relay is not preferred, message provider is Telephony, and isDirectTelephonyCallingCurrentlyAvailable is YES
[WARN] Setting should ignore session to YES because relay is not preferred, message provider is FaceTime Audio, and isDirectFaceTimeAudioCallingCurrentlyAvailable is YES
[WARN] Setting should ignore session to YES because relay is not preferred, message provider is FaceTime Video, and isDirectFaceTimeVideoCallingCurrentlyAvailable is YES
[WARN] Setting should ignore session to YES because relay is not preferred, message provider is TinCan, and isDirectFaceTimeAudioCallingCurrentlyAvailable is YES
[WARN] Setting should ignore session to YES because no calls exist with an endpoint on the current device: %@
Initializing CSDDaemon
Launched by IMDaemon notification
Launched by application installed notification
Launched by application uninstalled notification
Could not create notification for XPC event %@
Caught SIGINFO. Dumping debug info.
Caught SIGUSR1
Caught SIGUSR2
Created call center: %@
Initialized CSDDaemon
Calling xpc_transaction_exit_clean() due to language change
failed to initialize temporary directory (%d): %s
failed to resolve temporary directory (%d): %s
Used country code '%@' to determine international phone number representation: %@
Determined that invite should be %@ - (isWiFiAvailable=%d isWiFiAllowed=%d isCellularDataAvailable=%d isCellularDataAllowed=%d shouldOverrideNetworkAsAvailable=%d)
Invite received for service %@ account %@ from (fromID=%@) with context: %@
Recieved pending message of type %ld
Incoming call was denied with error %@ so ignoring chat: %@
Not handling pending message of type: %ld
Invite received for session %@ account %@ from (fromID=%@) with data: %@
Declining this invite because we found a sending chat with the same destination: %@
Ignoring incoming invite since shouldAcceptIncomingInvite is %d
Ignoring incoming invite since message with type=%@ was not an invite.
[WARN] Ignoring incoming invite since accompanying message was nil
provider: %@
Calling answer on chat %@
Not accepting invitation to call %@ since it is already Connected
Calling end on chat %@
Setting sendingAudio to YES for chat %@
Setting sendingAudio to NO for chat %@
Failing answer call action for call because it disconnected before connecting: %@
[WARN] called for session %@ that was not the initiator (%d) or that already had a version set (%d)
Session %@ is waiting. Sending invitation
Session %@ is not waiting. Not sending invitation
Session %@ is waiting. Accepting invitation
Session %@ is not waiting. Not accepting invitation
Session %@ is waiting. Canceling invitation
[WARN] Asked to cancel invitation with non-nil data and a concrete cancel reason, but that combination is unsupported
Session %@ is not waiting. Not canceling invitation
Session %@ is waiting. Declining invitation
Session %@ is not waiting. Not declining invitation
Session %@ started (shouldUseSocketForTransport: %d socket: %d, destination: %@)
Received invitation SENT for session %@ with tokens %@ shouldBreakBeforeMake %d
Session %@ ended with reason %d: %@
Session %@ appears to have ended with an unanswered reason: %d
Session %@ appears to have ended with a local hangup reason: %d
Session %@ appears to have ended with a remote hangup reason: %d
Session %@ appears to have ended with an accepted elsewhere reason: %d
Session %@ appears to have ended with a declined elsewhere reason: %d
Session %@ appears to have ended with a fatal reason: %d
Session %@ appears to have ended due to mismatched networks reason: %d
Received invitation ACCEPT with data for session %@ from %@
Received invitation CANCEL with data for session %@ from %@
Received invitation DECLINE with data for session %@ from %@
Received session MESSAGE for session %@ from %@
Got metric container for metricId=%lu
Skipping reporting for metricId=%lu since no metric container was provided
Generated end call metric=%@
Found matching account: %@ for uuid: %@
[WARN] Server bag does not support quick relay
Server bag is not loaded. Assuming we can make a FaceTime call over quick relay
Starting FaceTime IDS chat using account: %@ destinations: %@ options: %@
Cannot start FaceTime IDS chat using handle %@ because IDS destination was '%@'
Cannot start FaceTime IDS chat using service %@ because account is not active: %@
Tried to make an outgoing call when we already had a ringing call with the same destination: %@
Requesting transaction to answer already-ringing call
Error requesting transaction to answer already-ringing call: %@
Successfully requested transaction to answer already-ringing call
[WARN] Not attempting to use IDSSession for outgoing FT call because server bag does not allow quick relay invitations
[WARN] Found a chat to upgrade: %@
Unable to convert to remoteIDSToken: %@
Unable to find existing chat for conversation: %@
Found existing chat: %@ for conversation: %@
[WARN] Failing action %@ we determined that chat %@ cannot be upgraded.
%@ Auto-upgrading because chatToUpgrade is %@, isConnected: %d, isVideo: %d, isSendingVideo: %d, isSendingAudio: %d isChatPendingUpgrade: %d
Upgrading chat: %@
Ending chat that is being upgraded: %@
[WARN] Could not find chat with UUID %@. All chats: %@
Matching sender identities %@ to IDS accounts %@
Updating FaceTime provider with configuration %@
service: %@ activeAccountsChanged: %@
Ignoring %@ because messageSendTime (%f) <= call.uplinkMutedSetTime (%f)
[WARN] Ignoring received request action message because it has a request action type we don't know how to handle: %@
transferFileAtURL: %@, destinations: %@
placing unzip results into folder %@
new directory urls: %@, unzippedDirectoryURL: %@
Error retrieving contents of directory at URL %@: %@
temporaryClientFileURL: %@, destinations: %@
Sending resource at URL %@ to destinations %@ with metadata %@
Successfully started sending resource with identifier %@
Failed to start sending resource with identifier %@: %@
%@ doesn't exist at client file url: %@
incomingResourceURL: %@ metadata: %@ fromID: %@
Copied resource to temporary URL: %@
successfully sent file with identifier: %@
failed to send file with identifier: %@, error: %@
[WARN] Unexpected nil clientFileURL for service: %@, account: %@, identifier: %@, didSendWithSuccess: %d, error: %@, clientFileURLByIdentifier: %@
Failed to copy URL at %@ to %@: %@
Failed to create directory at URL %@: %@
Error moving url %@ to %@: %@
Deleted contents at URL: %@
Failed to delete contents at URL %@: %@
Zipping directory at URL: %@, output to: %@
Error zipping directory at URL %@ to output URL %@
operation: %ld, inputURL: %@, outputURL: %@
Error occurred during IMFileCopierOperation type %ld on inputURL %@ and outputURL %@
completed operation: %ld, inputURL: %@, outputURL: %@
deleting temporary file at URL: %@
Calling fetch completion block for call source with identifier %@
Waiting for call source with identifier %@
[WARN] Timed out waiting for call source with identifier %@ to check in
[WARN] Couldn't identify device type based on model identifier (%@)
Enabling relay calling on secondary device %@.
Activating Thumper calling on secondary device %@ for telephony subscription with UUID %@.
User notification has been completed with response %lu and entered PIN %@
Showing service confirmation dialog to user
Requesting pin from iPhone
Canceling pin request from iPhone
PIN code entered with success=%d cancelled=%d
Device Pin Exchange received an incoming approval request
[WARN] We received an incoming pin code alert from a non-telephony device: %@
User tapped cancel on the Pin Display Alert
Request for pin exchange failed
[WARN] Ignoring request to group call because it is already grouped: %@
[WARN] Ignoring request to ungroup call because it isn't grouped: %@
Setting uplinkMuted to %d for call %@
Started conference successfully for answered relay call %@
[WARN] Failed to start conference connection when answering call %@: %@
Conference connection stopped (cleanly=%d) for answered call %@: %@
Started conference successfully for dialed relay call %@
[WARN] Failed to start conference connection when dialing call %@: %@
Conference connection stopped (cleanly=%d) for dialed call %@: %@
Started conference successfully for pulled relay call %@
Failed to start conference connection when pulling call %@: %@
Conference connection stopped (cleanly=%d) for pulled call %@: %@
[WARN] Ignoring request to hold call because it is already held: %@
[WARN] Ignoring request to unhold call because it isn't held: %@
Entitlement for key '%@' is non-nil but is of class %@ rather than an NSArray (%@), so assuming process %@ has no entitlements
Received successful didSend for message with identifier %@ using account %@
Received unsuccessful didSend for message with identifier %@ using account %@: %@
Incoming message of type %@ from destination %@ device %@: %@
[WARN] Received message %@ from device %@ but it is not the default paired device
[WARN] No device found for fromID %@. All devices: %@
[WARN] Removing IDSSendMessageOptionForceLocalDeliveryKey key from sendMessage options because pairedDeviceUniqueIDOverride exists
Sending %@ message with identifier %@ and options %@ to destinations %@: %@
Successfully sent %@ message
Failed to send %@ message: %@
[WARN] No paired device, so unable to send message %@
photoURL: %@ videoURL: %@
saved photo with localIdentifier: %@ error: %@
providerDelegate: %@ callUUID: %@ dateStartedConnecting: %@
providerDelegate: %@ callUUID: %@ dateEnded: %@ endedReason: %ld failureContext: %@
Ending call with UUID %@ on other provider delegate %@ because ended reason was %ld
providerDelegate: %@ transaction: %@
[WARN] action: %@
Adding additional peers to invite: %@
Invited push tokens via IDS: %@ wasCanceled: %d
Could not initiate FaceTime call - No IDS or IMAV call returned for handle %@
Not sending IMAV invites because IDS session was canceled
[WARN] Failing join call action since we are already pending a join on this same call UUID elsewhere.
Updated to action: %@
[WARN] No provider delegate is managing call for action %@
Updated isRunning for %@ because new application state is %d
Asked to deliver token %@ to application %@
Asked to deliver payload %p to application %@
Delivering token %@ to application %@
Pending token delivery until a connection exists
Delivering %lu payload(s) to application %@
Invalidating process assertion for bundle ID %@ from completion handler
Pending payload deliveries until a connection exists
Initialized inCallServiceWantsStatusBarSuppressionState to %llu
inCallServiceApplicationState is now %d
Initialized inCallServiceApplicationState to %d
inCallServiceWantsStatusBarSuppressionState is now %llu
Setting muted to %d for %@
[WARN] setMuted:forIdentifier: no conference connection found for identifier %@. All conference connections: %@
Setting sending audio to %d for %@
[WARN] setSendingAudio:forIdentifier: no conference connection found for identifier %@. All conference connections: %@
Asked to prepare conference connection %@ remoteInviteDictionary %@
Not preparing a new conference because another conference already exists: %@
Attempted to prepare a new conference connection with the same identifier as an existing conference connection: %@
Asked to start conference for identifier %@
We already have an active conference. Invoking this conference connection's didStart immediately
Did not find conference connection to start for identifier %@. All conference connections: %@
Asked to send data to conference for identifier %@
Asked to update conference for identifier %@ with isUsingBaseband=%d disableAudio=%d
Updating device role for identifier %@ to %d
Did not find conference connection for identifier %@. All conference connections: %@
Setting conference connection active: %@
Asked to prepare to stop conference for identifier %@
Pausing audio and setting up timeout for conference connection: %@
It's been %fs since asked to prepare to stop conference and conference connection still exists: %@. Forcefully cleaning up all conference connections for conference %@
Asked to stop conference for identifier %@
Cleaning up conference connection %@
Posting %@
reason: %ld error: %@
Relay conference ended in failure (reason: %ld): %@
Setting up close connection timeout because conference ended reason was normal
[WARN] Timed out waiting for conference %@ to close connection after receiving end
[WARN] Unable to get URL for filename '%@'
[WARN] Unable to get standardized URL for URL '%@'
Setting up Pin Exchange controller
Requesting PIN from device %@
[WARN] accountsSupportSecondaryCalling=NO. Displaying mismatched accounts notification
Canceling all PIN requests
[WARN] Could not find device for unique ID %@
The entered PIN code is correct
Activated Thumper for requesting device %@
[WARN] The entered PIN code is incorrect, could not register device.
The user entered no code... or the code entered was not an NSString
We were unable to send the PIN to the other device to be displayed, Sorry
Sending a PIN code to device %@ to display to enroll them into Thumper
[WARN] Ignoring request to send PIN code because we already have one pending for device with unique ID %@
Could not obtain caller ID from Thumper IDS service %@
Sending IDS action %@ to device %@ with message %@
Thumper IDS action sent to device with success: %@ error: %@ identifier: %@
[WARN] Displaying PIN error notification
[WARN] Displaying mismatched accounts notification
[WARN] Displaying slots full notification
Received message for service %@ from device %@ (isHSATrusted=%d): %@
Ignoring pin request: There is already a pending pin request that has not yet completed.
One sender identity exists; continuing Thumper registration using UUID %@
Multiple sender identities exist; checking whether caller ID %@ matches a sender identity in %@
[WARN] Aborting Thumper registration; multiple sender identities exist but caller ID not supplied
Aborting Thumper registration; could not obtain sender identities from call provider %@.
Device requesting PIN is HSA trusted. Forgoing PIN exchange and enrolling the device immediately
Received request to enroll device %@ in Thumper for sender identity with UUID %@
[WARN] Aborting Thumper registration; could not obtain sender identity UUID.
Received didSendWithSuccess=YES for message with identifier %@
Received didSendWithSuccess=NO for message with identifier %@: %@
InCallService has changed application state to %d
InCallService has been suspended; invalidating its XPC client connections.
Initialized capability state: %@
Updating clients with new call capabilities state: %@
Updating paired host device state
TUCallCapabilitiesXPCServer - callCapabilitiesState request from %@
TUCallCapabilitiesXPCServer - setRelayCallingEnabled: %d
TUCallCapabilitiesXPCServer - setRelayCallingEnabled: %d forDeviceWithID: %@
TUCallCapabilitiesXPCServer - setWiFiCallingEnabled: %d senderIdentityUUID: %@
TUCallCapabilitiesXPCServer - setWiFiCallingRoamingEnabled: %d senderIdentityUUID: %@
TUCallCapabilitiesXPCServer - setVoLTECallingEnabled: %d senderIdentityUUID: %@
TUCallCapabilitiesXPCServer - setThumperCallingEnabled: %d senderIdentityUUID: %@
TUCallCapabilitiesXPCServer - setThumperCallingAllowed: %d secondaryDeviceID: %@ senderIdentityUUID: %@
TUCallCapabilitiesXPCServer - setThumperCallingAllowedOnDefaultPairedDevice: %d senderIdentityUUID: %@
TUCallCapabilitiesXPCServer - endEmergencyCallbackMode
TUCallCapabilitiesXPCServer - invalidateAndRefreshWiFiCallingProvisioningURLForSenderIdentityUUID: %@
TUCallCapabilitiesXPCServer - invalidateAndRefreshThumperCallingProvisioningURLForSenderIdentityUUID: %@
TUCallCapabilitiesXPCServer - requestPinFromPrimaryDevice
Using the following account for the PIN request: %@
No device found for account %@. All accounts: %@
[WARN] No primary Thumper account found for PIN request. This should only happen because an account exists but has no empty device slots. All accounts: %@
TUCallCapabilitiesXPCServer - cancelPinRequestFromPrimaryDevice
Received device list changed notification: %@
Received device capability changed notification: %@
Received accounts changed delegate callback
Received FaceTime availability changed delegate callback
Received outgoingCallerIDChanged delegate callback
Received telephonyCallCapabilitiesChanged delegate callback
[WARN] Disabling support because %@ was set to YES
[WARN] Enabling support because %@ was set to YES
_setWiFiCallingEnabled: asking to change value from %d to %d
_setWiFiCallingEnabled: not updating value. Is currently %d and asked to set to %d
_setVoLTECallingEnabled: asking to change value from %d to %d
_setVoLTECallingEnabled: not updating value. Is currently %d and asked to set to %d
_setWiFiCallingRoamingEnabled: asking to change value from %d to %d
_setWiFiCallingRoamingEnabled: not updating value. Is currently %d and asked to set to %d
_setThumperCallingEnabled: asking to change value from %d to %d
_setThumperCallingEnabled: not updating value. Is currently %d and asked to set to %d
_setThumperCallingAssociatedAccountID: asking to set account ID to %@
Changing Thumper calling allowed value from %d to %d on secondary device ID %@
[WARN] Not changing Thumper calling allowed value. No device slots remain for this device. Displaying notification to the user
[WARN] Could not set Thumper calling allowed for secondary device with identifier %@; unable to retrieve local Thumper account from call capabilities %@
[WARN] Could not retrieve account ID from Thumper capabilities %@
_setThumperCallingAllowed: not updating value. Is currently %d and asked to set to %d on secondary device ID %@
[WARN] Could not find Thumper capabilities for sender identity UUID %@
[WARN] No cloud calling device appears to be a default paired device: %@. Ignoring setThumperCallingAllowedOnDefaultPairedDevice request
[WARN] Could not obtain UUID from sender identity capabilities state %@
defaultPairedDeviceExists: %d
telephonyDeviceExists: %d, relayCapableDeviceExists: %d, defaultPairedDeviceExists: %d
_setRelayCallingEnabledDefault: changing value to %d
_setRelayCallingEnabled: Changing value from %d to %d
_setRelayCallingEnabled: Not updating value. Is currently %d and asked to set to %d
setRelayCallingEnabledDefault:forDeviceWithID: changing value to %d for %@
_setRelayCallingEnabled:forDeviceWithID: Changing value from %d to %d for %@
_setRelayCallingEnabled:forDeviceWithID: Not updating value. Is currently %d and asked to set to %d for %@
Initialized pairedHostDeviceState: %@
[WARN] Could not de-serialize pairedHostDeviceStateData %@
[WARN] Saved pairedHostDeviceStateData was not an NSData type (class=%@): %@
No saved paired host device state found
Initializing new paired host device state with all values set to NO
_supportslaunchingInCallApplicationForIncomingCall: %d
dialRequest: %@ displayContext: %@
Coordinated alert request came back with bestIsMe: %d info: %@ error: %@
Starting coordinated alert request to determine ringtone un-suppression: %@
faceTimeIDSStatus for destinationID: %@ is: %@
Invalidating display context for %@
Posting %@ because relayClientTransport changed from %@ to %@ for %@
Posting %@ because mayRequireBreakBeforeMake changed from %d to %d for %@
Posting %@ because hasStartedOutgoing changed from %d to %d for %@
Posting %@ because hasAudioInterruption changed from %d to %d for %@
activeRemoteParticipants changed from %@ to %@ for %@
Pickable Routes Changed: %@
Preferred external route changed: %@
CarPlay is connected changed: %@
Media services were reset: %@
Audio device list changed
[WARN] No audio route collection found in audioRouteCollections: %@ for audio category %@ and audio mode %@ for call %@
Found preferred AVAudioDevice: %@
Requesting initial state of CarKit's DND assertion
Received initial CarKit DND assertion: %d
Unable to fetch CarKit DND assertion: %@
Updating isCarModeActive to %d
Updating isCarPlayDeviceConnected to %d
Device first unlock block invoked, attempting to retrieve active conversations
Sent message with identifier %@ to %@
Error sending message: %@
Using local callerID: %@
UUID: %@ groupUUD: %@ localMember: %@ remoteMembers: %@ fromStorage: %d
Could not find caller ID when creating conversation
UUID: %@ groupUUD: %@ localMember: %@ remoteMembers: %@
Transitioning conversation %@ to new groupUUID: %@ remoteMembers: %@ localMember: %@
Sending message: %@ from account: %@ with caller ID: %@
[WARN] No local participant for conversation: %@
[WARN] handleConversation:receivedAVCBlobResponse:fromHandle: %@ <!===> %@
[WARN] handleConversation:receivedAVCBlobResponse:fromHandle: Could not find participant in message: %@
Reviving cached conversation with groupUUID: %@ messagesGroupUUID: %@ remoteMembers: %@
shouldClearDefaults: %d - Removing all conversations
groupUUID: %@ messagesGroupUUID: %@ remoteMembers: %@
Activating cached conversation from storage with UUID: %@ as someone seems to be interested in it.
No conversation currently exists to join, so creating a new one
[WARN] Supplied local member: %@ contains no active handles: %@
Unable to create local member. Caller ID: %@
UUID: %@ context: %@
[WARN] Could not find conversation with UUID: %@
Ignoring request to join conversation with UUID: %@ since conversation is already joined
[WARN] Leaving existing conversation with UUID: %@ in favor of new conversation with UUID: %@
UUID: %@
[WARN] Could not find conversation with UUID %@. All conversations: %@
conversationUUID: %@ remoteMembers: %@
[WARN] Could not find conversation with conversationUUID %@. All conversations: %@
conversationUUID: %@ presentationContexts: %@
conversationUUID: %@ member: %@
conversationUUID: %@ messagesGroupName: %@
conversation: %@
Removing conversation: %@
conversation: %@ participant: %@
Requesting AVC blob for %@
[WARN] service:account:incomingData:fromID:context: Empty from ID. Dropping message.
Received message with identifier %@ from %@
[WARN] service:account:incomingData:fromID:context: Empty data. Dropping message.
[WARN] service:account:incomingData:fromID:context: Empty CSDMessagingConversationMessage. Dropping message.
[WARN] service:account:incomingData:fromID:context: Could not create group UUID from string. Dropping message.
[WARN] service:account:incomingData:fromID:context: Empty destinationID after IDSCopyRawAddressForDestination. Dropping message.
[WARN] service:account:incomingData:fromID:context: Could not create TUHandle from destinationID. Dropping message.
[WARN] No conversation found for groupUUID %@
Looking for handle: %@ in existingConversation: %@
 => Matched handle: %@
[WARN] Could not find matching handle: %@  in existingConversation: %@. Dropping message.
[WARN] processGroupSessionParticipantUpdate: Empty groupSessionParticipantUpdate
[WARN] processGroupSessionParticipantUpdate: Empty groupSessionParticipantUpdate.participantDestinationID
Group session participant update received: %@ participantIdentifiers: %@
[WARN] Received unknown participant update message
Received participant join context: %@
[WARN] processJoinUpdate: Empty handle
processJoinUpdate: Received nil when trying to convert data to participant join context
[WARN] processUpdateMembersUpdate: Empty updateMembersUpdate.clientContextData
Received nil when trying to convert data to participant join context
[WARN] processParticipantDataUpdate: Empty participantDataUpdate.groupUUID
[WARN] processParticipantDataUpdate: Empty participantDataUpdate.participantDestinationID
[WARN] processParticipantDataUpdate: Empty handle
[WARN] processParticipantDataUpdate: Empty participant
[WARN] Could not find conversation with groupUUID %@. All conversations: %@
[WARN] handleParticipants:joinedConversationWithUpdate:joinContext: Empty joinContext
[WARN] handleParticipants:joinedConversationWithUpdate:joinContext: Empty participantUpdate.groupUUID
Not notifying delegate of add message since member is already part of conversation
Received local member: %@
Ignoring message for group UUID %@
Activating cached conversation with UUID: %@ since participants are joining.
Could not find local member from activeLocalHandles: %@
Received empty set for remote members
Participant with identifier: %lu left conversation with groupUUID: %@
[WARN] handleParticipantWithIdentifier:leftConversationWithGroupUUID: empty groupUUID
[WARN] Could not find conversation for group UUID %@
[WARN] Unable to create audio route from route dictionary: %@
bundleIdentifier: %@
Acquiring process assertion for bundle identifier %@
Acquired process assertion for bundle identifier %@
Failed to acquire process assertion for bundle identifier %@
Incremented count of process assertion for bundle identifier %@ to %lu
Decremented count of process assertion for bundle identifier %@ to %lu
Initialized CXCallDirectoryStore for reading
Unable to initialize CXCallDirectoryStore for reading: %@
Device first unlock block invoked, attempting to initialize CXCallDirectoryStore...
Incoming call filter block called with sourceAddress: %@ providerIdentifier: %@
Blocking call with sourceAddress %@ since callDirectoryAllowsCallFromSourceAddress returned NO
Disallowing call with sourceAddress %@ since _doNotDisturbAllowsCallFromSourceAddress returned NO
DND - onCall: %d onEmergencyCall: %d
Not allowing call because DND is enabled for %@
phoneNumberVariants: %@
Error checking if call directory database contains blocking entry for source address %@: %@
Disallowing call from source address %@ since blocked by call directory
Call history changed: %@
Call connected. Marking all calls as read.
bytesOfDataUsed: %ld uniqueProxyIdentifier: %@ callHistoryIdentifier: %@
Call still exists so updating its bytes of data used: %@
No call still exists so updating bytes of data used via CHManager
Writing recent call to history: %@
Writing recent pending call to history: %@
Adding transaction object to transactionObjectsAwaitingCallHistory: %@
[WARN] Ending transaction for %@ because we timed out waiting for a call history database changed notification
Set %ld recent calls as read using matching predicate '%@'.
Deleted %ld recent calls matching predicate %@
call: %@
self: %@ wiFiAllowed: %d
self: %@ cellularDataAllowed: %d
self: %@ cellularDataPreferred: %d
self: %@ clientUUID: %@
Updated currently broadcasted activity to %@
Queueing activity at beginning of queue: %@ (timeout: %f)
Queueing activity at end of queue: %@ (timeout: %f)
Dequeueing activity: %@
Registered to listen for activity type %d and dynamic identifier %@ and started listening for best app suggestions
Registered to listen for activity type %d and dynamic identifier %@
Unregistered to listen for activity type %d and stopped listening for best app suggestions
Unregistered to listen for activity type %d
Best app suggestion changed to %@
Firing delegate callback with activity type %d (userActivityType=%@) and dynamicIdentifier %@
Joining with participantJoinContext: %@
sessionProvider: %@ reason: %d error: %@
sessionProvider: %@ participantIDs: %@ localParticipantID: %lu error: %@
sessionProvider: %@ error: %@
sessionProviderDidTerminate: %@
sessionProvider: %@ activeParticipants: %@ success: %d
[WARN] Received an error for active remote participants
XPC connection invalidated from client: %@ capabilities: %@
Disconnecting all calls because wantsCallDisconnectionOnInvalidation=YES for %@
Relay capabilities enabled
Relay capabilities disabled
Disconnecting relaying call because relay calling is no longer enabled: %@
Disconnecting call being relayed elsewhere because relay calling is no longer enabled: %@
Received hardware control: %@
Updating calls in response to hardware control: incomingCall %@, activeCall %@, heldCall %@
Answering incoming call: %@, %@
Answering incoming call as conversation: %@, %@
Opening URL for incoming call: %@
TUOpenURLWithCompletion result: %@, error: %@
Encountered error while opening URL: %@ for call: %@
Disconnecting call because there wont be a UI to host the call: %@
Opening URL: %@ for outgoing call
Disconnecting proxy call because a video call started connecting: %@
Updating clients with call: %@
Updating client %@ with disconnected call: %@ calls: %@
Updating client %@ with calls: %@
notification: %@
%@ is handling %@
Pushing all calls to device with destination %@ because no preferred route is active and we found a call hosted here with its expected endpoint on another device: %@
Pulling all calls from relay client device because a preferred route is active and we found a call with an endpoint elsewhere: %@
Non-ringing call found on device: %@. All calls: %@
Ignoring ringing call status change for call %@ because relay calling is disabled (%d) or this call doesn't support relaying call state (%d) or a vehicle route is available (%d) or call is TTY (%d) or call is conversation (%d) or shouldRelayTinCanCall (%d)
Not sending out call started connecting message because call is already disconnected: %@
Not sending out call connected message because call is already disconnected: %@
Sending voicemail call ended notification %@
Received nil call from outgoingCallFromProxyCall: for dial request %@ and displayContext %@
current calls are %@
[WARN] Ignoring request to performUngroupCall because the call is not grouped
[WARN] Ignoring request to performSwapCalls because either there is no active call (%d), there is no held call (%d), or an active call exists that cannot be held (%d)
An endpointRapportMediaSystemIdentifier="%@" or endpointRapportEffectiveIdentifier="%@" is present on answer request for call %@ so attempting to pick matching route
Changed sourceIdentifier of answerRequest to %@
   ... sending calls were found so adding them to list of calls to disconnect: %@
   ... no sending calls were found so adding all active calls to list of calls to disconnect: %@
   ... and adding held calls to the list of calls to unhold: %@
   ... no sending or active calls were found so adding all held calls to list of calls to disconnect: %@
   ... and moving call %@ from call to unhold to call to disconnect because a disconnected call from the same provider doesn't support unambiguous multi-party state: %@
Handoff context did not include any handoff payload. Assuming this is for a relay call
[WARN] Ignoring request to performPushHostedCallsToDestination %@ because not all calls are hosted here and relayable. All calls: %@
[WARN] Ignoring request to performPullHostedCallsFromPairedHostDevice because not all calls are not hosted here and not an endpoint here and relayable. All calls: %@
[WARN] Ignoring request to performPullHostedCallsFromPairedHostDevice because no paired device exists
Disconnecting call with disconnected reason %d: %@
Disconnecting call normally since it was outgoing (%d) or was never connecting to relay (%d): %@
Dialed call: %@
answerRequest: %@
[WARN] Could not find call for uniqueProxyIdentifier %@. All calls: %@
uniqueProxyIdentifier: %@
uniqueProxyIdentifier: %@ otherUniqueProxyIdentifier: %@
[WARN] Asked to group call with data source %@ with another call with a different data source %@
[WARN] Could not find call for uniqueProxyIdentifier %@ (%d) or could not find call for otherUniqueProxyIdentifier %@ (%d)
uniqueProxyIdentifier: %@ key: %d
sourceIdentifier: %@
userInfo: %@
uplinkMuted: %d
downlinkMuted: %d
destination: %@
proxyCall: %@
uniqueProxyIdentifier: %@ size: %@
uniqueProxyIdentifier: %@ presentationState: %d
shouldSuppressInCallStatusBar: %@
request: %@
deviceUID: %@
uniqueIdentifier: %@
clientCapabilities: %@
Messaging connection ended for calls %@. Disconnecting calls that are an endpoint here but are not hosted here.
Messaging connection failed for calls %@. Disconnecting calls that are hosted here and an endpoint elsewhere or that are an endpoint here and hosted elsewhere.
Messaging connection could not establish link for calls %@. Disconnecting calls that are hosted here and an endpoint elsewhere or that are an endpoint here and hosted elsewhere.
uniqueProxyIdentifier %@
hasBeenUnlocked changing from %d to %d
Device has been unlocked, so invoking block immediately
Device has not been unlocked, so storing block to be performed upon first unlock
Device has not been unlocked and is not yet observing device lock changes, so beginning to observe device lock changes
Handling %@
Asked to register bundle ID %@ with APS environment %@ for VoIP
[WARN] Ignoring voipRegister request because either no bundleIdentifier could be determined (%d) or no environment could be determined (%d)
Asked to unregister bundle ID %@ with APS environment %@ from VoIP
[WARN] Ignoring voipUnregister request because either no bundleIdentifier could be determined (%d) or no environment could be determined (%d)
for connection: %@ publicToken: %@
Requesting token for topic %@ for bundle ID %@
[WARN] No environment found for connection %@
for connection: %@ token: %@ topic: %@ identifier: %@
Resetting all CSDVoIPApplicationController kill counts
for connection: %@ message: %@
Incoming message has topic: %@ bundleID: %@
Application %@ will not be launched because it failed to report an incoming call too many times or repeatedly crashed. However because the app is foreground, delivering VOIP payload anyway.
Application %@ will not be launched because it failed to report an incoming call too many times (or repeatedly crashed.)
Application %@ is not running. Will attempt to open the application and acquire a process assertion
Error opening bundle ID %@: %@
Dropping incoming message because the bundle ID failed to launch
Dropping incoming message because the bundle ID did not launch in time
Successfully opened application
Successfully took out process assertion
Dropping incoming message because the process assertion could not be acquired
Invalidating process assertion for bundle ID %@ from timeout
Killing VoIP app %@ because it failed to post an incoming call in time.
Unable to terminate %@ with error %@
[WARN] No existing VoIP application found for bundle ID %@
[WARN] No APS connection found for environment %@
Registering application with bundle ID %@ and client %@ in environment %@
Not registering bundle ID %@ because it is not entitled (%d) or no APS connection exists for the environment (%d)
Environment was %@ but is now %@. Flushing out old registration with previous environment
Requesting token for topic %@
Setting enabled topics from %@ to %@
Unregistering application %@ in environment %@
Supplied environment was nil. Inferring it as %@
Disabling topic %@ and invalidating its token for connection %@
Disabling topic %@ and invalidating its token for all connections
Loaded registered local providers: %@
Loaded registered relay providers: %@
Updating current providers to %@
Unregistering provider because its application is no longer installed: %@
[WARN] Skipping Sandboxing URL as the passed in URL turns out to be a symbolic link: %@
Updating provider from %@ to %@
Updating relay provider from %@ to %@
Device is passcode locked (%d) or existing call has different provider (%d). Indicating activity should open in background.
Device is NOT passcode locked. Indicating activity should open in foreground.
Opening user activity %@ for bundle identifier %@ with options %@
Successfully opened user activity %@ for bundle identifier %@
Failed to open user activity %@ for bundle identifier %@: %@
Could not get LSApplicationProxy for app %{public}@ to determine intent support. Using %{public}@.
App %{public}@ supports %{public}@.
[WARN] App %{public}@ does not support %{public}@, using deprecated %{public}@ and %{public}@.
App %{public}@ does not declare support for any dialing intents. Using %{public}@. Error: %@
Timed out waiting for audio session to become active for conversationUUID: %@
Starting audio for conversaton with conversationUUID %@
Reporting call failure for conversation with conversationUUID %@ and callUUID %@
Received %@ conversation message for %@
[WARN] Not handling upgrade message for conversation since upgrades are currently disabled.
[WARN] Not upgrading conversation since there was no join update attached.
[WARN] Not upgrading conversation since the join update has an incorrect subtype.
[WARN] Not upgrading conversation as message is missing upgrade token.
[WARN] Not upgrading conversation as message is missing remote token.
Error while creating UUID from %@
[WARN] Did not receive protoUpgradeSessionUUID part of message %@
Current callUUID: %@, upgradeSessionUUID: %@, conversationUpgradeSessionUUID: %@, existingHandle: %@, upgradeMessageHandle: %@, participantDestination: %@, fromDestination: %@
Determined that current uplink is muted - muting conversation %@
Ignoring incoming invitation message for %@ since we are already tracking this with call %@
[WARN] Ignoring respodneded elsewhere message since it was not sent from a valid handle.
[WARN] Ignoring responded elsewhere message since it came from a handle that does not belong to our aliases: %@.
[WARN] Ignoring message that we've responded elsewhere for conversation %@ since the conversation is already joining or is joined.
Ending ringing call for conversation with UUID: %@
Could not report new multiway call from %@: %@
Successfully sent message with identifier: %@
Conversation with UUID %@ failed with context: %@
Joining conversation for answer call action: %@
No conversation with UUID: %@
[WARN] Skipping member with handle %@ because it already exists in seen handles: %@
Setting uplinkMuted for action: %@ conversation: %@
[WARN] Could not find conversation for end call action call UUID %@. self.conversationUUIDsByCallUUID: %@ self.conversationManager.conversationsByUUID: %@
[WARN] Could not find conversation for set video presentation state action call UUID %@. self.conversationUUIDsByCallUUID: %@ self.conversationManager.conversationsByUUID: %@
action: %@
[WARN] Could not find conversation for relaying call action call UUID %@. self.conversationUUIDsByCallUUID: %@ self.conversationManager.conversationsByUUID: %@
Raise to ear gesture detected, answering incoming call.
Failed to start conference connection for answered call %@: %@. Disconnecting call with relay failed
Transport did not become available for answered call %@
Conference connection ended for call %@. Disconnecting call normally
Conference connection failed for call %@: %@. Disconnecting call with relay failed
Not disconnecting call because this conference transport is %@ but the call's current relay client transport is %@
Received did stop for call that is already disconnecting/disconnected
_launchInCallApplicationForOutgoingCallOnHostIfNecessary
Dialing without relay because cannotRelayAudioOrVideoOnPairedDevice is set (%d) or a preferred route is active (%d)
Nil call returned when dialing call. Notifying client of failed dial call for %@
Nil call returned when dialing call. Notifying client of failed dial call for %@ 
Failed to start conference connection for dialed call uniqueProxyIdentifier %@: %@.
Conference connection stopped (cleanly=%d) for dialed call uniqueProxyIdentifier %@: %@
[WARN] Received %@ message, but the transport didn't become available
[WARN] Received %@ message, but we already have some non-relaying calls. Sending device busy message.
Answering without relay because wantsHoldMusic is set (%d) or cannotRelayAudioOrVideoOnPairedDevice is set (%d)
[WARN] Could not find call with other uniqueProxyIdentifier %@. All current calls: %@
No other unique proxy identifiers included. Assuming legacy behavior
[WARN] Could not find another call to group with. All calls: %@
No call was specified with SendHardPauseDigits message...
...so sending hard pause digits for call %@
...and no hosted call was found with TUHardPauseDigitsStateDigitsAvailable, so not sending hard pause digits
Setting sourceIdentifier to %@ for all calls before pulling
Opening URL for handled pushRelayingCalls message from client: %@
[WARN] Could not find any audio route with source identifier %@. Ignoring push relaying calls request
[WARN] Asked to pull relaying calls from client when no calls with an endpoint elsewhere exist. All calls: %@
Pushing hosted call: %@
Conference did not start successfully when pushing call. Resetting endpointOnCurrent device to YES for %@
Socket did not become available when pushing call. Resetting endpointOnCurrent device to YES for %@
Failed to prepare conference for pushing hosted call %@
[WARN] %@
[WARN] Bad activity type: %d
Registering for %@ user activity type and dynamic identifier %@
[WARN] Asked to register for activity type %d, but that is not supported
Unregistering for %@ user activity type and dynamic identifier %@
[WARN] Asked to unregister for activity type %d, but that is not supported
Error creating '%@' sandbox extension directory: %@
[WARN] Not loading registered providers because current registered providers version is %ld and minimum version is %d
registeredLocalProvidersByIdentifier: %@
registeredPairedHostDeviceProvidersByIdentifier: %@
Error while querying file attributes: %@
Error creating link to source URL '%@' with filename '%@': %@
Error removing links for filenames not in array (%@): %@
Could not deserialize data to TUCallProvider instance: %@
Registered providers object was of unexpected class %@: %@
Request timed out for transaction ID: %@
[WARN] Received results for timed out transaction with ID %@
Received nil AVCSession from -[AVCSession initWithTransportToken:configuration:delegate:queue:]
audioEnabled: %d
videoEnabled: %d
videoPaused: %d
relaying: %d
participant: %@ videoEnabled: %d
participant: %@
[WARN] Could not find participant with identifier %lu all participants: %@
identifier: %lu downlinkMuted: %d
Unknown participant identifier %lu current participants: %@
identifier: %lu audioEnabled: %d
identifier: %lu videoEnabled: %d
identifier: %lu videoQuality: %lu visibility: %lu prominence: %lu
AVCSession %@ server did disconnect
participant: %@ didSucceed: %d error: %@
Failed to add participant %@: %@
Failed to remove participant %@: %@
didUpdate: %d configuration: %@ error: %@
Failed to update session with configuration %@: %@
audioEnabled: %d didSucceed: %d error: %@
Failed to set local audio enabled (%d): %@
videoEnabled: %d didSucceed: %d error: %@
Failed to set local video enabled (%d): %@
videoPaused: %d didSucceed: %d error: %@
Failed to set local video paused (%d): %@
participant: %@ remoteAudioEnabledDidChange: %d
participant: %@ remoteVideoEnabledDidChange: %d
self: %@ reason: %d
[WARN] Ignoring invitation accept since we have previously processed one.
No primary Thumper account found for outgoingRelayCallerID %@ but requireMatchingCallerID is NO. Arbitrarily choosing last Thumper account from list: %@
[WARN] Could not find subscription with UUID %@. All subscriptions: %@
Received request to set capability information %@ capabilityInfo for subscription %@
Updating VoLTE capability state with %@
Updating VoWiFi capability state with %@
Updating Thumper capability state with %@
Retrieved new telephony call capabilities for subscription %@: %@
Retrieved new system capabilities for subscription %@: %@
Setting new emergency callback mode %@.
Updating Thumper account state with %@
Updated local Thumper device ID to %@
[WARN] Could not initialize Thumper account with Thumper account dictionary: %@
Updated local Thumper accounts to %@
Updated secondary Thumper accounts to %@
Updated Thumper accounts to %@
Subscriptions changed for client: %@
This call can't relay audio/video (%d) or another call already has an endpoint elsewhere (%d). Setting endpoint to be elsewhere and not attempting to start a conference
Asked to dial call %@ but the host was unavailable
Asked to dial call %@ but the session was unavailable
[WARN] Transport did not become available when dialing call %@
Setting endpoint elsewhere for call because it can't be answered with audio or video relay: %@
Transport did not become available when answering call %@
Transport did not become available when pulling call. Resetting endpointOnCurrent device to NO for %@
Opening URL for handled pushHostedCalls message from host: %@
Disconnecting call with conference failed disconnected reason: %@
Not disconnecting call for failed conference start because it is not an endpoint here: %@
Not disconnecting call for conference didStop because it is not an endpoint here: %@
Adding %@ as an alias on account %@
Failed to add alias %@ to account %@. Validation status: %ld, validation error reason: %ld, vetted aliases: %@
Updating display name to %@ on account %@
Received IMDaemon connected notification: %@
Received display name changed notification: %@
Received preferred account changed notification: %@
Loaded last known FaceTime caller ID as %@
[WARN] Could not find lastKnownFaceTimeCallerID in keychain, error: %@
Querying Preferences to see if it exists
Found lastKnownFaceTimeCallerID: %@ in Preferences
[WARN] lastKnownFaceTimeCallerID not found in Preferences either
Removing callerID Preferences value
Saving last known FaceTime caller ID as %@
Error while saving _callerID %@
FaceTime callerID changed from %@ to %@
Failed to get active contexts from client %@: %@
Error getting emergency callback mode (domain=%d, code=%d)
Failed to get Thumper device info: %@
Failed to get call capabilities: %@
Failed to get capability info for subscription %@: %@
Failed to get system capabilities for subscription %@: %@
Calling -[CoreTelephonyClient context:setCapability:enabled:with:completion:] with capability: %@ enabled: %d info: %@
Failed to set enabled=%d for capability %@ with info %@: %@
Calling -[CoreTelephonyClient context:addPhoneServicesDevice:withCompletion:] with idsDeviceIdentifier: %@
Failed to add secondary Thumper device with IDS device identifier %@: %@
Calling -[CoreTelephonyClient context:removePhoneServicesDevice:withCompletion:] with idsDeviceIdentifier: %@
Failed to remove secondary Thumper device with IDS device identifier %@: %@
Calling -[CoreTelephonyClient context:recheckPhoneServicesAccountStatus:] with capability: %@
Calling _CTServerConnectionEnableEmergencyCallBackMode() with %@
Calling _CTServerConnectionSetCapabilityExtended() with capability: %@ value: %d capabilityInformation: %@
Error setting capability for %@ calling (domain=%d, code=%d)
Error getting system capabilities (domain=%d, code=%d)
Calling _CTServerConnectionPhoneServicesAddDevice() with capability: %@ idsDeviceIdentifier: %@
Error adding device for %@ calling (domain=%d, code=%d)
Calling _CTServerConnectionPhoneServicesRemoveDevice() with capability: %@ idsDeviceIdentifier: %@
Error removing device for %@ calling (domain=%d, code=%d)
Calling _CTServerConnectionPhoneServicesAccountStatusChanged() and _CTServerConnectionSendBarrier() with capability: %@
Retrieved mobile country code %@ and mobile network code %@ for subscription %@
Failed to get mobile network code for subscription %@: %@
Failed to get mobile country code for subscription %@: %@
Could not find a subscription matching the specified UUID %@
Error getting ISO country code (domain=%d, code=%d)
Retrieved ISO country code %@ for mobile country code %@ and mobile network code %@
Received delegate callback callCapabilitiesChanged: with context: %@ info: %@
Received context:capabilitiesChanged: with context: %@ info: %@
%@ is handling phoneServicesCapabilitiesChanged: with userInfo %@
Received kCTEmergencyCallBackModeStatusNotification with userInfo %@
Call status changed for call: %@
for call: %@
for message: %@
transactionGroup: %@
with action: %@ for call %@
route: %@
reports=%@ conversation=%@
session UUID=%@ reports=%@
chat=%@
blob recovery started for conversation %@
blob recovery timed out for conversation %@
Reporting %@
%@ is handling %@.
%@ initialized for service %@ with the following devices: %@
Determining country code using account info %@
%@: Active accounts changed
%@: Devices changed
%@: Nearby devices changed
%@ updated state: defaultPairedDeviceExists=%d, pairedDeviceExists=%d, telephonyCapableDeviceExists=%d, relayCapableDeviceExists=%d, availableOutgoingRelayCallerIDs=%@ deviceNames="%@"
[WARN] Could not find session for identifier %@ to perform block on transport availability for. Dropping this block on the floor
No devices found that support call provider %@. Not creating a session.
Creating session to devices: %@
[WARN] destination for device returned a nil value, so we are going to skip creating a session to it: %@
Creating session to destinations: %@
Would have created a session to an empty destination set. Returning a nil session
Destroying session %@
Asked to prepare session to end for identifier %@
Asked to prepare connected sessions to end
Accepting session for identifier %@
Canceling/declining session for identifier %@
Asked to end ending sessions
sendMessageAndStartSessionIfNecessary for service %@ and message type %@: %@
Not starting a new session for identifier %@ because an active session for the identifier already exists: %@
No session exists. Starting a new one by inviting all devices that support provider %@
A session exists with a destination/device that supports provider %@: %@
We'll send this message via the existing session
Starting another session to the device
Starting another session to the destination
[WARN] A session exists, but it's with a device that doesn't support provider %@. Not starting a new session
Did not create session
sendMessageAndStartSessionIfNecessary for message type %@: %@
No IDSSession exists. Starting a new one by inviting to destination %@
[WARN] No IDSSession exists, and given device is nil. We can't start this session
A session exists: %@
Sending the message through the existing session
Starting a new session to the destination of the device with an active session
sendMessage:andAcceptInvitationIfNecessaryForIdentifier for identifier %@ and message type %@: %@
Session for identifier is %@
A current session already exists: %@
Sending the message through the current session
Sending the message through the current session and declining this one %@
No current session already exists, so sending the message through this session %@
Could not determine session to accept for identifier %@ and message %@. All sessions: %@
sendMessage:andCancelOrDeclineInvitationIfNecessaryForIdentifier for identifier %@ and message type %@: %@
Session has multiple identifiers: %@. Removing identifier %@ and not canceling/declining
_sendMessage:andCancelInvitationIfNecessaryForIdentifier for session %@ and message type %@: %@
_sendMessage:andDeclineInvitationIfNecessaryForIdentifier for session %@ and message type %@: %@
for message type: %@ identifier: %@ destinations: %@ waitUntilConnected: %d: %@
sendMessage through session %@ for message type %@ to destinations %@: %@
sendMessage through session %@ for message type %@: %@
Not sending message because protocolVersionCustomizationBlock's preventMessageSend was set to YES for message type %@: %@
No session available to send message type %@: %@
Invite received for session %@ from (fromID=%@) destination %@ device %@ with message %@ (timestamp: %f)
... and it's from the same destination that we have an active session with (%d) or it's from the same device that we have an active session with (%d) or we don't have a session (%d)
... so we are going to handle the session's message
... but we were told to ignore the invite
... but there was no accompanying message so just ignoring the invite
... but it is from a different device than the one that we have an active session with
... and we were told to decline the invite
... and we were NOT told to decline the invite, so just ignoring it
Session ended with reason %d
Notifying delegate of connection end
[WARN] Notifying delegate of connection failure
[WARN] Notifying delegate that connection could not establish link
Not notifying delegate of messenger connection end because a different active session with the same identifier exists: %@
Received invitation accept with no data payload.
Received invitation cancel with no data payload. Assuming the invitation was answered elsewhere
Received invitation decline with no data payload. Assuming invitation was accepted by sending a message through another session
videoStreamToken: %ld
Moments XPC connection interrupted from client %@
Moments XPC connection invalidated from client %@
handle disconnect for client: %@
mediaType: %d, token: %ld
Successfully started AVCMomentsRequest: %@, transactionID %@
Failed to start AVCMomentsRequest: %@, error: %@
transactionID: %@
Successfully ended request %@
Failed to end request %@: %@
Registering stream token %ld, requesterID %@ and remoteIDSDestinations %@ with new moments object
Registered new moments object %@ with supported media types: %@
unexpected supportedMediaTypes: %@, moments: %@, streamToken: %ld
[WARN] FaceTime Photos availability is %d but remoteIDSDestination is nil so changing availability to Unavailabile
FaceTime Photos is not available. Availability is %d
updating remoteIDSDestinations and returning registered session: %@ for streamToken: %ld
Asked to unregister stream token: %ld
didFinish request: %@, error: %@
new capabilities: %u
didStartProcessing request: %@
Failed to start processing request: %@
Ignoring processing start of request because moments is disabled by server bag
didEndProcessing request: %@, url: %@
failed to find remoteIDSDestination from request: %@ in session remoteIDSDestinations: %@
Failed to end processing request: %@
Ignoring processing end of request because moments is disabled by server bag
moment server disconnected: %@
url: %@ metadata: %@ isZipped: %d fromIDSDestination: %@
session: %@ request: %@ remoteIDSDestination: %@
Unzipped resource to URL: %@
Failed to unzip file at URL %@
Received non-zipped resource at %@
Received moments resource from IDS destination %@ but expected %@
Could not convert remote IDS destination %@ (token=%@) and/or from IDS destination %@ (token=%@) to token data
Received moments resource with unknown transaction ID %@. All sessions: %@
Received moments resource with missing transaction ID in metadata: %@
Received moments resource but moments is disabled by server bag
file url: %@ was not sent successfully
Preserving file at URL: %@
Could not retrieve contents of dictionary at URL %@: %@
Unregistering stream token: %ld
Cleaning up state for moment: %@
Delaying cleanup because moment is still registered (%d) or has outstanding requests (%lu)
url: %@ session: %@ request: %@
url: %@
Could not determine both photo URL and video URL from contents of directory: %@
Resources directory URL %@ does not exist
saving live photo with photo url: %@ video url: %@
Error saving resources with photo url: %@ video url: %@
[WARN] Timeout reached for active request for transaction ID %@
momentDescriptor: %@
Initializing AVConference with client UUID %@
[WARN] Error calling getIsSendingAudio: %@
[WARN] Error calling setSendingAudio: %@
[WARN] Error calling getIsAudioPaused: %@
Setting pause audio to %d for %@
[WARN] Error calling setPauseAudio: %@
[WARN] Error calling getIsVideoPaused: %@
Setting pause video to %d for %@
[WARN] Error calling setPauseVideo: %@
Setting conference visual rectangle of size %@ for %@
Setting conference state %@ for %@
Setting local portrait aspect ratio %@ and local landscape aspect ratio %@ for %@
Setting peer reporting identifer %@ and session identifier %@ for %@
Failed to initialize a new call with device role %d. Got callID=%ld
Starting AVConference connection with isCaller=%d callID=%ld remoteInviteDictionary=%@ capabilities=%@ destination=%@
Starting AVConference connection with isCaller=%d callID=%ld capabilities=%@ socket=%d
Stopping AVConference with callID=%ld
Canceling AVConference with callID=%ld
conference=%@ didStartSession=%d userInfo=%@
callID=%ld error=%@
callID=%ld error=%@ callMetadata=%@
callID=%ld
screenAttributes=%@ callID=%ld
videoAttributes=%@ callID=%ld
callID=%ld didPauseAudio=%d error=%@
didPause=%d callID=%ld
callID=%ld didPauseVideo=%d error=%@
[WARN] callID=%ld isStalled=%d
AVConference server died
callID=%ld parameters=%@
callID=%ld isDegraded=%d isRemoteVideo=%d
[WARN] callID=%ld isNetworkBad=%d
callID=%ld didReceiveData=%@
Start call action fulfilled: %@
Start call action failed: %@
Join call action fulfilled: %@
Join call action failed: %@
Answer call action fulfilled: %@
Answer call action failed: %@
End call action fulfilled: %@
End call action failed: %@
Set held call action fulfilled: %@
[WARN] Set held call action failed but reverting state is allowed: %@
Set held call action failed and reverting state is not allowed: %@
Set group call action fulfilled: %@
Could not find call to group with for set group call action: %@. All call: %@
[WARN] Set group call action failed but reverting state is allowed: %@
Play DTMF call action fulfilled: %@
Play DTMF call action failed: %@
Set sending video call action fulfilled: %@
Set sending video call action failed: %@
Set muted call action fulfilled: %@
Set muted call action failed: %@
Set tty call action fulfilled: %@
Set tty call action failed: %@
Action fulfilled: %@
Action failed: %@
[WARN] Not allowing requested start call action because call source %@ is at the maximum call group count of %lu: %@
[WARN] Not allowing requested start call action because call with same UUID already exists: %@
[WARN] Not allowing requested transaction because no call was found for call UUID %@ and call source %@. All calls: %@
[WARN] Not allowing requested transaction because action is not allowed to be requested: %@
[WARN] Not allowing requested transaction because it is empty: %@
Allowing requested transaction: %@
[WARN] Not allowing requested transaction: %@
Dialing new call due to requested start call action: %@
Adding supplemental set held call action for existing call %@
Could not serialize handoffActivityUserInfo into a CXHandoffContext: %@
[WARN] Could not determine call source for dial request: %@. All call sources: %@
Asked to perform action %@ for call %@
Asked to perform start call action %@ for call %@
Sending %@ for existing call with uniqueProxyIdentifierUUID=%@ callGroupsAllowsHold=%d supportsHolding=%d
Call source %@ registered with configuration %@
Received add incoming call request from call source %@ with UUID %@ update %@
[WARN] Returning error for add incoming call request because it was on the block list
[WARN] Returning error for add incoming call request because call did not pass DND filter. CarMode (%d) BT Audio Route (%d), CarPlay (%d)
[WARN] Returning error for add incoming call request because it is a video call and we are not connected to CarPlay (%d) and Car Mode is active (%d)
[WARN] Returning error for add incoming call request because it is a direct call to a secondary device and relay calling is preferred over direct calling
[WARN] Update requires additional authentication before it can be answered
[WARN] There is an error: %@, but we are still asked to report call to clients
[WARN] Ignoring add incoming call request because a call already exists with the same call UUID: %@
Call source %@ updated call with UUID %@ with update %@
[WARN] No call found for call source %@ and UUID %@. All calls: %@
Call source %@ ended call with UUID %@ with ended at date %@ with reason %ld failure context %@
[WARN] Deferring acknowledgement of VoIP call with UUID %@ ended until minimum ring duration has passed
Setting callGroupUUID to nil for orphaned grouped call %@
[WARN] Call %@ already has a date ended
Call source %@ sent invitation for outgoing call with UUID %@ at date %@
[WARN] Call %@ already has a date started outgoing
[WARN] Call %@ is not outgoing
Call source %@ started connecting call with UUID %@ at date %@
[WARN] Call %@ already has a date started connecting
Call source %@ connected outgoing call with UUID %@ at date %@
[WARN] Call %@ already has a date connected
Call source %@ finished audio for call with UUID %@
Found call %@ for UUID %@, so setting hasAudioFinished
Did not find a call for UUID %@, so expediting deferred end interruption instead
Call source %@ received call with UUID: %@ crossDeviceIdentifier %@ bytesOfDataUsed %ld
Call source %@ received requested transaction %@
Call source manager %@ completed transaction group %@
Pull call action fulfilled: %@
Pull call action failed: %@
Could not find pulled call context for completed pull call action %@. All contexts: %@
Call action completed for call: %@
[WARN] Could not find call for completed call action: %@. All calls: %@
Action completed: %@
Call sources changed: %@
Ending call %@ since its backing call source %@ is no longer connected
Call controller host %@ requested transaction %@ for connection with identifier: %@
Using call source %@ for requested transaction %@
[WARN] Not allowing requested transaction because no call source was found. All call sources: %@
Marking all calls as changed because providers changed
Handling managed device policy changed for call: %@
Managed device policy no longer allowed, disconnecting: %@
machServiceName: %@ newConnection: %@
Accepting XPC client for %@: %@
Rejecting client for %@ because it lacks the %@ capability: %@
Started tracking call: %@
Stopped tracking call: %@
Asked to answer call %@ while disconnecting calls %@ and holding calls %@
Asked to hold calls %@ while unholding calls %@
Asked to group calls %@ with calls %@
Asked to ungroup call %@ from other calls in group %@
Asked to disconnect call %@ while ungrouping call %@
Asked to disconnect all calls %@
Asked to disconnect calls %@ while holding calls %@ and unholding calls %@ and ungrouping calls %@
Asked to set TTY type to %d for calls %@
Asked to set uplink muted to %d for calls %@
handleCallStatusChanged %@
bytesOfDataUsed: %ld callHistoryIdentifier: %@
[WARN] Invalid TUHandle generated from CXLabelHandle %@
[WARN] Invalid TULabeledHandle generated from CXLabelHandle %@
[WARN] Invalid TUSenderIdentity generated from CXSenderIdentity %@
Asked to hold relay calls %@ while unholding relay calls %@
Asked to answer relay call %@ while disconnecting active relay calls %@
[WARN] Ignoring request to answer call because canBeAnswered is NO: %@
Asked to answer relay call %@ while disconnecting held relay calls %@ and holding relay calls %@
Asked to answer relay call %@ while holding relay calls %@
Asked to group relay calls %@ with relay calls %@
Asked to ungroup relay call %@ from other relay calls in group %@
Asked to disconnect relay call %@ while ungrouping relay call %@
Asked to disconnect relay calls %@
Asked to disconnect relay calls %@ while holding relay calls %@ and unholding relay calls %@ and ungrouping calls %@
Received notification: %@
Device first unlock block invoked, initializing CXCallDirectoryManager...
XPC activity checked in. Criteria: %@
Setting activity state to XPC_ACTIVITY_STATE_CONTINUE
Error setting activity state to XPC_ACTIVITY_STATE_CONTINUE
Beginning daily maintenance with activity %@
Successfully compacted store
Error compacting store: %@
Setting activity state to XPC_ACTIVITY_STATE_DONE
Error setting activity state to XPC_ACTIVITY_STATE_DONE
Error synchronizing call directory extensions: %@
Successfully synchronized call directory extensions
Extensions changed for Call Directory NSExtensionManager %@, but we do not have a CXCallDirectoryManager (perhaps because device is not yet unlocked) so cannot synchronize
?__C
CHRecentCallMediaType
TUMomentsAvailability
Triggers
NCSDCallCenterObserverTriggers
CTError
TUCallVerificationStatus
TUCallFilteredOutReason
VMMailboxType
HandleType
NCXHandleType
Name
NNSNotificationName
TUCallDisconnectedReason
CSDAudioInterruptionProviderType
CHRecentCallTTYType
UNNotificationDestinations
TUHandleType
UNNotificationCategoryOptions
UNNotificationActionOptions
AVAudioSessionPriority
TUCallSoundRegion
TUCallSoundPlayerSoundType
TURouteDeviceType
AXSDefaultRouteForCall
CSDAudioInterruptionOperationMode
Mode
NAVAudioSessionMode
Category
NAVAudioSessionCategory
AVFoundation
Foundation
CallKit
callservicesd
AudioInterruptionProvider
AnyAudioInterruptionProvider
AudioInterruptionPriorityProvider
AudioInterruptionProviderSetActiveOptions
AudioInterruptionProviderIdentifier
AudioInterruptionPriority
DescriptorResolver
DescriptorType
BlockedCallFilter
TinCanIDSProviderDelegate
ConversationPersistenceStorage
NSUserDefaults
EmergencyCallbackCapabilities
AudioInterruptionProviderFactoryProtocol
AVAudioSessionInterruptionProviderType AVAudioClientInterruptionProviderType
AudioInterruptionProviderFactory
NearbyDeviceRoute
ChangeTrackingDescriptorResolver
UpdateContext
HoldMusicDescriptor
CallCenterObserver
callservicesd
GroupFaceTimeNotificationProvider
SoundDescriptorActionResolver
FaceTimeLivePhotosIDSService
callservicesd
UserNotificationProvider
UserNotificationResponse
NotificationType
UNNotificationResponse
AVAudioClientInterruptionProvider
FaceTimeMultiwayIDSService
AVAudioSessionInterruptionProvider
ProcessObserver
callservicesd
FaceTimeNotificationProvider
NSNumberConvertible
SharedConversationServerBag
IDSDeviceDestinationResolver
NearbyDeviceRouteProvider
CSDIDSService
DirtyCallManager
DuetDonater
allowContactsOnly
DescriptorProvider
DescriptorType
CallController
AudioActivationContext
SoundDescriptorAction
AudioController
CSDAudioController
AudioInterruptionProviderPool
MomentsUsageReport
callservicesd
RingtoneProviderAlertPlaybackObserver
RingtoneProviderAlert
RingtoneProviderProtocol
RingtoneProvider
TLAlert
RouteProvider
DeselectableRouteProvider
PairedHostDeviceRouteTrackingRouteProvider
TinCanIDSService
RTCReporter
RTCReporterInfo
RTCCSDCallInfo
$s13callservicesd14RTCCSDCallInfoC10CodingKeys33_84004992077CE2C2154A7FA3E5FAC51BLLO
CodingKeys
BlockedHandleNotificationHandler
MomentsControllerLocalCapabilities
MomentsNotification
callservicesd
CallHistoryDataSource
RecentCall
CallHistoryNotificationProvider
CHManager
CHRecentCall
CallFilterManager
SoundDescriptor
callservicesd
HoldMusicProviderProtocol
HoldMusicProvider
SpeechSynthesizerEvent
RTCCSDRelayDeviceRoute
RTCCSDAudioRouteType
$s13callservicesd22RTCCSDRelayDeviceRouteC10CodingKeys33_CD795C12D16D48C515D70EC2AB04A902LLO
CodingKeys
MomentsControllerSession
UnknownCallFilter
ContactsCallFilter
RouteController
$s13callservicesd15RouteControllerC07PendingB7Context33_32B9A98993BD67CD3170F2EAE9C76ADBLLV
PendingRouteContext
IDSProviderDelegateCapabilities
ConversationPersistenceController
AudioDescriptor
PairedHostDeviceRouteProvider
RingtoneDescriptor
IDSPendingChat
GroupIDSPendingChat
DescriptorTrackingProvider
AudioResolverProtocol
AudioResolver
Context
FaceTimeIDSProviderDelegateCapabilities
callservicesd
LocalAudioSystemProvider
LocalAudioRouteProvider
$s13callservicesd23LocalAudioRouteProviderC04CallC17InterruptionState33_6BD6E311DAED01995C4BD9EFC77AC0B5LLO
CallAudioInterruptionState
TUAudioSystemController
NearbyDevice
NearbyDeviceProvider
DeviceType
NearbyDeviceMonitor
RPCompanionLinkClient
RPCompanionLinkDevice
AudioInterruptionActivationStateObserver
AudioInterruptionDescriptor
ProviderType
CSDCall
callservicesd
UserNotificationCenter
UserNotificationController
UNUserNotificationCenter
DiscoveryModeProviderProtocol
DiscoveryModeProvider
callservicesd
VoicemailDataSource
Voicemail
VoicemailNotificationProvider
VMVoicemail
VMVoicemailManager
CallHistoryCallFilter
DiscoveryModeDescriptor
SoundProviderProtocol
SoundProvider
AudioInterruptionDeferredEndDescriptor
RTCCSDConversationInfo
$s13callservicesd22RTCCSDConversationInfoC10CodingKeys025_308A57FFDC1DF57F6F5D8482I6AC5D6BLLO
CodingKeys
callservicesd
CSDAVCMoments
KeychainPasswordItem
KeychainError
ASCIIStringConvertible
ScreenTimeCallFilter
allowedByScreenTime
MomentsRequest
So23TUCallFilteredOutReasonV
So24TUCallVerificationStatusV
So7CTErrora
s5Int32V
So29CSDCallCenterObserverTriggersV
So21TUMomentsAvailabilityV
So21CHRecentCallMediaTypeV
So22AVAudioSessionCategorya
So8NSStringC
So18AVAudioSessionModea
So33CSDAudioInterruptionOperationModeV
So22AXSDefaultRouteForCalla
s6UInt32V
So17TURouteDeviceTypeV
So017TUCallSoundPlayerB4TypeV
So17TUCallSoundRegionV
So22AVAudioSessionPriorityV
So27UNNotificationActionOptionsV
So29UNNotificationCategoryOptionsV
So12TUHandleTypeV
So26UNNotificationDestinationsV
So19CHRecentCallTTYTypeV
So32CSDAudioInterruptionProviderTypeV
So24TUCallDisconnectedReasonV
So18NSNotificationNamea
So12CXHandleTypeV
So13VMMailboxTypeV
So19RPDeviceChangeFlagsV
$sSY
$ss25ExpressibleByArrayLiteralP
$ss10SetAlgebraP
$ss9OptionSetP
$ss21_ObjectiveCBridgeableP
$s13callservicesd25AudioInterruptionProviderP
13callservicesd27AudioInterruptionDescriptorV
14DescriptorType13callservicesd0A8ProviderPQz
y13callservicesd27AudioInterruptionDescriptorVc
13callservicesd27AudioInterruptionDescriptorVSgyc
$s13callservicesd33AudioInterruptionPriorityProviderP
13callservicesd41AudioInterruptionProviderSetActiveOptionsV
13callservicesd33AVAudioClientInterruptionProviderC
13callservicesd27AudioInterruptionDescriptorVIegn_
13callservicesd34AVAudioSessionInterruptionProviderC
13callservicesd25AudioInterruptionPriorityO
13callservicesd35AudioInterruptionProviderIdentifierO
x2id_t
13callservicesd28AnyAudioInterruptionProviderC
$s13callservicesd18DescriptorProviderP
$s13callservicesd18DescriptorResolverP
So8NSObjectC
So17OS_dispatch_queueC
So30CSDAbstractIDSProviderDelegateC
Sb13callservicesd16TinCanIDSServiceCc
SbSo17CXStartCallActionC_13callservicesd16TinCanIDSServiceCtc
ShySSGSo17CXStartCallActionC_13callservicesd16TinCanIDSServiceCSo22TUContactsDataProviderCtc
So25CSDIDSDualSessionProvider_p13callservicesd16TinCanIDSServiceC_ShySSGSDySSypGSo17OS_dispatch_queueCtc
So10CSDIDSChat_pSo25CSDExternalIDSDualSessionC_10Foundation4UUIDVSo17CXStartCallActionCS2btc
So22TUContactsDataProviderC
13callservicesd25TinCanIDSProviderDelegateC
So19CXInProcessProviderC
So25CSDExternalIDSDualSessionCSo8TUHandleCSbSo12NSDictionaryCSo10CSDIDSChat_pIeyByyyya_
So25CSDExternalIDSDualSessionCSo8TUHandleCSbSDySS10Foundation4DataVGSo10CSDIDSChat_pIegggygo_
So17CXStartCallActionC
$s13callservicesd30ConversationPersistenceStorageP
$s13callservicesd37EmergencyCallbackCapabilitiesProtocolP
yycSg
So7CTErroraSpys9UnmanagedVyyXlGSgGc
ySi_So17OS_dispatch_queueC8Dispatch0D8WorkItemCtc
y8Dispatch0A8WorkItemCc
So21CSDCallCenterObserver_p
8Dispatch0A8WorkItemCSg
13callservicesd29EmergencyCallbackCapabilitiesCSgXw
13callservicesd29EmergencyCallbackCapabilitiesC
IeyB_
$s13callservicesd40AudioInterruptionProviderFactoryProtocolP
37AVAudioClientInterruptionProviderType
38AVAudioSessionInterruptionProviderType
13callservicesd32AudioInterruptionProviderFactoryC
13callservicesd17NearbyDeviceRouteV
So14IDSDestinationC
$s13callservicesd32ChangeTrackingDescriptorResolverP
13callservicesd19HoldMusicDescriptorV
$s13callservicesd26CallCenterObserverProtocolP
$s13callservicesd26CallCenterObserverDelegateP
So22TUCallContainerPrivate_pyc
So20NSNotificationCenterC
So29CSDCallCenterObserverDelegate_pSgXw
ySo7CSDCallC_So0A22CenterObserverTriggersVtcSg
So7CSDCallCSo0A22CenterObserverTriggersVIeyByy_
So21TUConversationManagerC
SDy10Foundation4UUIDVSSG
ShySuG
SDy10Foundation4UUIDVShySo8TUHandleCGG
y10Foundation3URLVcSg
SSSo14TUConversationCc
SSSo8TUHandleCc
13callservicesd16NotificationTypeO
ShySo22UNNotificationCategoryCG
ySo21UNNotificationRequestCcSg
ySScSg
13callservicesd24UserNotificationResponse_p
13callservicesd24UserNotificationResponse_pz_Xx
13callservicesd33GroupFaceTimeNotificationProviderC
10Foundation12NotificationVz_Xx
So7CSDCallCSo0A22CenterObserverTriggersV13callservicesd21SoundDescriptorActionOSgIeggyr_
So21CSDFaceTimeIDSServiceC
$s13callservicesd24UserNotificationProviderP
$s13callservicesd24UserNotificationResponseP
13callservicesd27AudioInterruptionDescriptorVSg
So21OS_dispatch_semaphoreC
So14AVAudioSessionC
13callservicesd22AudioActivationContextVSg
$s13callservicesd23ProcessObserverProtocolP
SDySSs5Int32VG
So26BKSApplicationStateMonitorC
ys5Int32V_s6UInt32VtcSg
13callservicesd15ProcessObserverCSgXw
So8NSNumberC
13callservicesd15ProcessObserverC
SDys11AnyHashableVypGSg
s6UInt32VIeyBy_
s6UInt32VIegy_
s5Int32Vs6UInt32VIeyByy_
13callservicesd28FaceTimeNotificationProviderC
$s13callservicesd10CallFilterP
$s13callservicesd19NSNumberConvertibleP
$s13callservicesd28IDSDeviceDestinationResolverP
y13callservicesd17NearbyDeviceRouteVc
Sbyc
So9IDSDeviceCSgSSc
13callservicesd19NearbyDeviceMonitorCyxG
Shy13callservicesd17NearbyDeviceRouteVG
So15CSDIDSTransportCSg
13callservicesd25NearbyDeviceRouteProviderCySo21RPCompanionLinkClientCG
13callservicesd25NearbyDeviceRouteProviderCySo21RPCompanionLinkClientCGSgXw
$s13callservicesd24DirtyCallManagerProtocolP
ySo7CSDCallCcSg
SaySo7CSDCallCG
ShySo7CSDCallCG
13callservicesd16DirtyCallManagerC
So7CSDCallCIeyBy_
10Foundation21NSKeyValueObservationCSg
13callservicesd11DuetDonaterC
So7CSDCallC
s5Error_pSg
So14NSUserDefaultsC
So14NSUserDefaultsC10Foundation24NSKeyValueObservedChangeVySbGIeggn_
So22CSDCallStateControllerCSgXw
SaySo17CSDCallDataSourceCG
So19CSDDirtyCallManager_p
13callservicesd14CallControllerCSgXw
13callservicesd22AudioActivationContextV
SSSg
13callservicesd21SoundDescriptorActionO
13callservicesd15SoundDescriptorV10descriptor_t
38AVAudioSessionInterruptionProviderType13callservicesd05AudiocD15FactoryProtocolPQy_
37AVAudioClientInterruptionProviderType13callservicesd05AudiocD15FactoryProtocolPQy_
13callservicesd29AudioInterruptionProviderPoolCyq_q0_q1_G
Shy10Foundation4UUIDVG
Sdyc
ypSg
y13callservicesd13AudioResolverCAB0B27InterruptionProviderFactoryCAB014AVAudioSessiondE0CAB0g6ClientdE0CAB08RingtoneE0CAB05SoundE0CAB09HoldMusicE0CAB013DiscoveryModeE0CG
13callservicesd15AudioControllerCyAA0B8ResolverCAA0B27InterruptionProviderFactoryCAA014AVAudioSessioneF0CAA0h6ClienteF0CAA08RingtoneF0CAA05SoundF0CAA09HoldMusicF0CAA013DiscoveryModeF0CGSgXw
13callservicesd15AudioControllerCyAA0B8ResolverCAA0B27InterruptionProviderFactoryCAA014AVAudioSessioneF0CAA0h6ClienteF0CAA08RingtoneF0CAA05SoundF0CAA09HoldMusicF0CAA013DiscoveryModeF0CG
13callservicesd15AudioDescriptorVSgz_Xx
13callservicesd13SoundProviderC
13callservicesd17HoldMusicProviderC
13callservicesd21DiscoveryModeProviderC
13callservicesd15SoundDescriptorVz_Xx
13callservicesd15AudioDescriptorVz_Xx
10Foundation4UUIDVz_Xx
13callservicesd17HoldMusicProviderC22SpeechSynthesizerEventO
13callservicesd16RingtoneProviderC
13callservicesd18RingtoneDescriptorVz_Xx
38AVAudioSessionInterruptionProviderType13callservicesd05AudiocD15FactoryProtocolPQz
37AVAudioClientInterruptionProviderType13callservicesd05AudiocD15FactoryProtocolPQz
SDys6UInt32Vq_G
$s13callservicesd21RingtoneProviderAlertP
$s13callservicesd24RingtoneProviderProtocolP
13callservicesd18RingtoneDescriptorV
So14CNContactStoreC
_pSg
_pSgSo20TLAlertConfigurationCc
13callservicesd21RingtoneProviderAlert_p
$s13callservicesd13RouteProviderP
$s13callservicesd25DeselectableRouteProviderP
$s13callservicesd029PairedHostDeviceRouteTrackingE8ProviderP
SDySSSay13callservicesd22RTCCSDRelayDeviceRouteCGG
SDy10Foundation4UUIDVSo12RTCReportingCG
SDy10Foundation4UUIDV13callservicesd22RTCCSDConversationInfoCG
SDySSSo12RTCReportingCG
SDy10Foundation4UUIDVSo10CSDIDSChatCG
So19CSDAppleIDUtilitiesC
13callservicesd11RTCReporterC
SaySDySSypGG
So10CSDIDSChatC
So14TUConversationC
So7TURouteC
$s13callservicesd15RTCReporterInfoP
SiSg
Say13callservicesd22RTCCSDRelayDeviceRouteCGSg
So23TUCallFilteredOutReasonVSg
So24TUCallVerificationStatusVSg
SbSg
$s13callservicesd32BlockedHandleNotificationHandlerP
$s13callservicesd21CallHistoryDataSourceP
$s13callservicesd10RecentCallP
So21TUCallProviderManagerC
SDySS
SaySo21CHRecentCallMediaTypeVG
SaySSG
10Foundation4DateVSg
y10Foundation3URLVc
_pcSg
13callservicesd31CallHistoryNotificationProviderC
13callservicesd31CallHistoryNotificationProviderCSgXw
SaySo13CSDCallFilter_pG
So22TUSenderIdentityClientC
13callservicesd15SoundDescriptorV
So14TUCallProviderC
10Foundation4UUIDVSg
$s13callservicesd25HoldMusicProviderProtocolP
13callservicesd19HoldMusicDescriptorVSg
So19AVSpeechSynthesizerCSg
So13AVAudioPlayerCSg
13callservicesd17HoldMusicProviderCSgXw
13callservicesd22RTCCSDRelayDeviceRouteC011RTCCSDAudioD4TypeO
So13CSDAVCMoments_p
SDyS2SG
SDySS13callservicesd14MomentsRequestCG
13callservicesd17UnknownCallFilterC
SDySSSo7TURouteCG
ySo7TURouteCcSg
Say13callservicesd13RouteProvider_pG
13callservicesd13RouteProvider_p
13callservicesd15RouteControllerC
SaySo7TURouteCG
So7TURouteCIeyBy_
13callservicesd15RouteControllerCSgXw
13callservicesd15RouteControllerCSgXwz_Xx
So7CSDCallCSbIggd_
So6TUCallCSbIggd_
13callservicesd31IDSProviderDelegateCapabilitiesC
13callservicesd30ConversationPersistenceStorage_p
So6NSUUIDCA2BSg10ObjectiveC8ObjCBoolVSo20TUConversationMemberCSo8TUHandleCSo7NSArrayCALIeyByyyyyyyy_
13callservicesd33ConversationPersistenceControllerC
10Foundation4UUIDVA2CSgSbSo20TUConversationMemberCSo8TUHandleCSayAFGSaySo26CSDConversationParticipantCGIegnnnygggg_
So15CSDConversationC
13callservicesd15AudioDescriptorV
13callservicesd38AudioInterruptionDeferredEndDescriptorVSg
13callservicesd18RingtoneDescriptorVSg
13callservicesd23DiscoveryModeDescriptorVSg
10Foundation3URLVSg
10Foundation4UUIDV
So8TUHandleC
$s13callservicesd26DescriptorTrackingProviderP
$s13callservicesd21AudioResolverProtocolP
14DescriptorType13callservicesd0A8ResolverPQz
So22CSDTTYProviderObserver_p
13callservicesd29SoundDescriptorActionResolverC
13callservicesd15AudioDescriptorVSg
y13callservicesd15AudioDescriptorVSg_ADtcSg
13callservicesd13AudioResolverC7ContextV
13callservicesd13AudioResolverC
13callservicesd13AudioResolverCSgXw
$s13callservicesd24LocalAudioSystemProviderP
SaySo12TUAudioRouteCG
So12TUAudioRouteC
13callservicesd23LocalAudioRouteProviderC
SaySo12TUAudioRouteCGz_Xx
So21RPCompanionLinkDeviceC
$s13callservicesd12NearbyDeviceP
$s13callservicesd20NearbyDeviceProviderP
10DeviceType
SDySS10DeviceType
13callservicesd19NearbyDeviceMonitorCySo21RPCompanionLinkClientCGSgXw
So21RPCompanionLinkDeviceCIegn_
So21RPCompanionLinkDeviceCSo19RPDeviceChangeFlagsVIegny_
10DeviceType13callservicesd06NearbyA8ProviderPQzz_So21RPCompanionLinkClientC_AbCRzlXX
13callservicesd19NearbyDeviceMonitorCySo21RPCompanionLinkClientCG
So21RPCompanionLinkClientC
$s13callservicesd40AudioInterruptionActivationStateObserverP
13callservicesd27AudioInterruptionDescriptorV12ProviderTypeO
So18AVAudioSessionModeaSg
13callservicesd40AudioInterruptionActivationStateObserver_pSg
13callservicesd35AudioInterruptionProviderIdentifierOys6UInt32VG10identifier_t
$s13callservicesd22UserNotificationCenterP
13callservicesd17CallFilterManagerC
SDySS13callservicesd24UserNotificationProvider_pG
Say13callservicesd24UserNotificationProvider_pG
So22UNNotificationResponseC
13callservicesd26UserNotificationControllerC
Ieg_
13callservicesd26UserNotificationControllerCSgXw
13callservicesd26UserNotificationControllerCSgXwz_Xx
13callservicesd22UserNotificationCenter_p
13callservicesd24UserNotificationProvider_p
So21UNNotificationRequestC
$s13callservicesd29DiscoveryModeProviderProtocolP
13callservicesd23DiscoveryModeDescriptorV
$s13callservicesd19VoicemailDataSourceP
$s13callservicesd9VoicemailP
So19CoreTelephonyClientC
ShySSG
_pSg
Sb_SitycSg
13callservicesd29VoicemailNotificationProviderC
Siz_Xx
Sbz_Xx
10Foundation4DateVz_Xx
So9CHManagerC
$s13callservicesd21SoundProviderProtocolP
13callservicesd15SoundDescriptorVSg
So17TUCallSoundPlayerC
13callservicesd38AudioInterruptionDeferredEndDescriptorV
10Foundation4DateV
SdSg
So10AVCMomentsCSg
So21CSDAVCMomentsDelegate_pSgXw
$s13callservicesd28ManagedDeviceMonitorDelegateP
$s13callservicesd20ManagedDeviceMonitorP
13callservicesd20KeychainPasswordItemC0B5ErrorO
s5Int32V6status_t
$s13callservicesd22ASCIIStringConvertibleP
So31CSDManagedDeviceMonitorDelegate_pSgXw
So22CSDCallProviderManagerC
SDySSSo14STConversationCG
SDySSSo21STConversationContextCG
SDySS10Foundation21NSKeyValueObservationCG
So17OS_dispatch_queueCSg
So21STConversationContextC
13callservicesd20ScreenTimeCallFilterCSgXw
13callservicesd20ScreenTimeCallFilterCSgXwz_Xx
So6TUCallC
So21STConversationContextC10Foundation24NSKeyValueObservedChangeVySbGIeggn_
13callservicesd20ScreenTimeCallFilterC
So20CSDAVCMomentsRequest_p
13callservicesd24MomentsControllerSessionC
domain
error
rawValue
_rawValue
RawValue
ArrayLiteralElement
Element
_ObjectiveCType
boxed
_beginOrUpdate
_end
_resetState
_activeDescriptor
rawValue
default
high
proxy
local
ArrayLiteralElement
RawValue
Element
DescriptorType
queue
isAccountActive
isDestinationValid
destinationsGenerator
outgoingSessionProviderGenerator
outgoingChatGenerator
contactsDataProvider
queue
_emergencyCallbackPossible
emergencyCallbackCapabilitiesDidChange
preventDetachAfterEmergencyCallTimeoutDeterminationHandler
dispatchAfterHandler
dispatchCancelHandler
queue
callCenterObserver
preventDetachAfterEmergencyCallTimeoutWorkItem
AVAudioSessionInterruptionProviderType
AVAudioClientInterruptionProviderType
uniqueIdentifier
name
deviceType
isCurrentlyPicked
idsDestination
callContainerClosure
notificationCenter
delegate
triggers
callChanged
queue
conversationManager
notificationIdentifiersByConversationUUID
carPlayNotificationIdentifiersByConversationUUID
postedParticipantJoinIdentifiers
checkedBlockedHandlesByConversationUUID
openURL
localizeConversationName
localizeHandleName
notificationType
categories
removeNotification
updateBadgeValue
callCenterObserver
deviceIsHomePod
FaceTime
Phone
activeDescriptor
DescriptorType
audioSession
isLocal
_activationContext
activeDescriptor
DescriptorType
queue
processIdentifierByBundleIdentifier
applicationMonitor
applicationStateChanged
updateBadgeValue
queue
openURL
localizeHandleName
notificationType
categories
removeNotification
routesDidChangeHandler
didPickRouteHandler
didDeselectAllRoutesHandler
supportsPrimaryCalling
hasRelayiCloudAccount
idsDeviceForIDSDeviceIdentifier
queue
callCenterObserver
nearbyDeviceMonitor
idsDeviceDestinationResolver
nearbyDeviceRoutes
activeRelayClientTransport
currentCallsSupportNearbyDevices
callChanged
queue
dirtyCallsArray
dirtyCallsSet
queue
maxDuration
unknownShortCallSignal
knownCallerSignal
shouldOnlyAllowContactsObserver
callStateController
callChanged
dataSources
dirtyCallManager
callOutgoing
accessibilityDefaultRoute
audioSourceKey
beginOrUpdate
preserve
queue
resolver
audioInterruptionProviderPool
ringtoneProvider
soundProvider
holdMusicProvider
discoveryModeProvider
notificationCenter
deferredEndWorkItem
pendingExpeditedEndInterruptionUUIDs
endInterruptionDelay
mediaServicesWereResetObserver
audioSessionInterruptionObserver
audioController
factory
localAVAudioSessionInterruptionProvider
proxyAVAudioSessionInterruptionProvidersByAudioSessionID
avAudioClientInterruptionProvider
availability
photoRequestSuccessCount
photoRequestFailureCount
medianRequestDuration
meanRequestDuration
didBeginPlaying
contactStore
currentAlert
endedPlayingSemaphore
alertGenerator
playbackObserverGenerator
DescriptorType
queue
relayDeviceRouteChangesByCallUUID
groupUUIDToConversationReportingSessions
groupUUIDToConversationInfo
uuidToCallReportingSessions
sessionUUIDToChats
appleIDUtilities
callUUID
groupUUID
durationMs
endReason
providerErrorCode
providerEndedReason
setupTimeMs
connectionTimeMs
relay
incoming
connected
currentlyGrouped
relayDeviceRouteChanges
filteredOutReason
verficationStatus
knownCallerStatus
returnedCall
isSiriSuggested
isKnownContact
isSignedIntoiCloud
streamToken
requesterID
queue
callHistoryDataSource
callProviderManager
recentCallByNotificationIdentifier
supportedMediaTypes
supportedProviders
mostRecentCallDate
supportsDisplayingFaceTimeAudioCalls
openURL
dialRecentCall
notificationType
removeNotification
updateBadgeValue
filters
senderIdentityClient
soundType
provider
isVideo
region
uuid
speechSynthesizerEventHandler
activeDescriptor
speechSynthesizer
audioPlayer
finishedUtterance
startedUtterance
canceledUtterance
DescriptorType
type
failed
iPhone
iPad
iPod
watch
audioAccessory
RawValue
moments
remoteIDSDestinations
isRegistered
activeRequestsByTransactionID
contactStore
_routesByUniqueIdentifier
routesDidChangeHandler
routeWasPickedHandler
timedOutPickingRouteHandler
queue
routeProviders
pendingRouteContext
route
routeProvider
queue
storage
interruptionDescriptor
interruptionDeferredEndDescriptor
ringtoneDescriptor
soundDescriptorAction
holdMusicDescriptor
discoveryModeDescriptor
queue
routesDidChangeHandler
pairedHostDeviceRoutes
contactIdentifier
providerRingtoneSoundURL
uuid
isVideo
handle
queue
callCenterObserver
ttyProviderObserver
deviceSupportsRingtone
soundDescriptorActionResolver
resolvedDescriptor
resolutionChangedHandler
call
triggers
DescriptorType
UpdateContext
routesDidChangeHandler
audioRoutes
queue
localAudioSystemProvider
callCenterObserver
callAudioCategory
callAudioMode
callAudioInterruptionState
inactiveWithPrematurelySelectedRoute
inactive
active
queue
nearbyDeviceProvider
devicesChangedHandler
devicesByEffectiveIdentifier
DeviceType
providerType
category
mode
activationContext
priority
wantsHoldMusic
operationMode
activationStateObserver
avAudioSession
avAudioClient
callFilterManager
phoneNotificationCenter
faceTimeNotificationCenter
providersByActionIdentifier
queue
providers
DescriptorType
queue
telephonyClient
voicemailDataSource
postedVoicemailIdentifiers
pendingVoicemailIdentifiers
mostRecentVoicemail
mostRecentNonVisualVoicemailDate
localizeVoicemailName
callbackVoicemail
openURL
$__lazy_storage_$_unsubscribedVoicemailCheck
notificationType
removeNotification
updateBadgeValue
callHistoryManager
activeDescriptor
player
DescriptorType
callUUID
uuid
groupUUID
startDate
endDate
duration
maximumMemberCount
initialMemberCount
finalMemberCount
maxNumberOfParticipants
AVCBlobRecoveryAttempts
AVCBlobRecoveryTimeouts
moments
delegate
service
accessGroup
account
unhandledError
noPassword
unexpectedPasswordData
unexpectedItemData
delegate
providerManager
conversationsForBundleIdentifier
contextsForCallIdentifier
observationForCallIdentifier
delegateQueue
avcRequest
session
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>Application-Group</key>
<array>
<string>com.apple.callhistory</string>
</array>
<key>BuildMachineOSBuild</key>
<string>18A391011</string>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>callservicesd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.TelephonyUtilities</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>callservicesd</string>
<key>CFBundlePackageType</key>
<string>FMWK</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string></string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>13.0</string>
<key>DTSDKBuild</key>
<string>17A521z</string>
<key>DTSDKName</key>
<string>iphonesimulator13.0.internal</string>
<key>DTXcode</key>
<string>1100</string>
<key>DTXcodeBuild</key>
<string>11M335w</string>
<key>LSBackgroundOnly</key>
<true/>
<key>MinimumOSVersion</key>
<string>13.0</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
<integer>4</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.telephonyutilities.callservicesd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>development</string>
<key>com.apple.CallHistory.sync.allow</key>
<true/>
<key>com.apple.CallKit.call-directory</key>
<array>
<string>synchronize-extensions</string>
<string>compact-store</string>
<string>query-identification-entries</string>
</array>
<key>com.apple.CallKit.call-directory.extension-host</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>phone</string>
<string>voice</string>
<string>identity</string>
<string>data-usage</string>
<string>data-allowed</string>
<string>data-allowed-write</string>
<string>carrier-space</string>
<string>carrier-settings</string>
</array>
<key>com.apple.CompanionLink</key>
<true/>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.FaceTime.CallLaunch</key>
<true/>
<key>com.apple.FaceTime.NoPrompt</key>
<true/>
<key>com.apple.backboardd.launchapplications</key>
<true/>
<key>com.apple.backboardd.proximityDetection</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coreduetd.context</key>
<true/>
<key>com.apple.coremedia.allow-protected-content-playback</key>
<true/>
<key>com.apple.coremedia.captureassertionservice</key>
<array>
<string>modify-assertion</string>
</array>
<key>com.apple.coretelephony.Calls.allow</key>
<true/>
<key>com.apple.developer.notificationcenter-identifiers</key>
<array>
<string>com.apple.facetime</string>
<string>com.apple.Photos</string>
</array>
<key>com.apple.duet.expertcenter.consumer</key>
<true/>
<key>com.apple.imagent</key>
<true/>
<key>com.apple.imagent.av</key>
<true/>
<key>com.apple.multitasking.termination</key>
<true/>
<key>com.apple.multitasking.voipassertions</key>
<true/>
<key>com.apple.private.CallHistory.read-write</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.aps-client-cert-access</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.attentionawareness</key>
<true/>
<key>com.apple.private.attentionawareness.poll</key>
<true/>
<key>com.apple.private.carkit.dnd</key>
<true/>
<key>com.apple.private.contacts</key>
<true/>
<key>com.apple.private.coreaudio.borrowaudiosession.allow</key>
<true/>
<key>com.apple.private.coremedia.interruptions.phonecallpriority.allow</key>
<true/>
<key>com.apple.private.coreservices.canalwaysadvertise</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.coreservices.canopenactivity</key>
<true/>
<key>com.apple.private.coreservices.lsuseractivityd.LSAlwaysPick</key>
<true/>
<key>com.apple.private.coreservices.lsuseractivityd.bestappsuggestion</key>
<true/>
<key>com.apple.private.dmd.emergency-mode</key>
<true/>
<key>com.apple.private.dmd.policy</key>
<true/>
<key>com.apple.private.donotdisturb.behavior.resolution.client-identifiers</key>
<array>
<string>com.apple.telephonyutilities.callservicesd</string>
</array>
<key>com.apple.private.hid.client.event-monitor</key>
<true/>
<key>com.apple.private.icfcallserver</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.facetime.multi</string>
<string>com.apple.private.alloy.facetime.video</string>
<string>com.apple.private.alloy.facetime.lp</string>
<string>com.apple.private.alloy.phonecontinuity</string>
<string>com.apple.ess</string>
<string>com.apple.private.alloy.phone.auth</string>
<string>com.apple.private.alloy.facetime.audio</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.facetime.multi</string>
<string>com.apple.private.alloy.facetime.video</string>
<string>com.apple.private.alloy.facetime.lp</string>
<string>com.apple.private.alloy.phonecontinuity</string>
<string>com.apple.private.alloy.phone.auth</string>
<string>com.apple.private.alloy.facetime.audio</string>
</array>
<key>com.apple.private.ids.self-session</key>
<array>
<string>com.apple.private.alloy.facetime.multi</string>
<string>com.apple.private.alloy.phonecontinuity</string>
<string>com.apple.private.alloy.facetime.video</string>
<string>com.apple.private.alloy.facetime.audio</string>
<string>com.apple.private.alloy.tincan.audio</string>
</array>
<key>com.apple.private.ids.session</key>
<array>
<string>com.apple.private.alloy.facetime.multi</string>
<string>com.apple.private.alloy.phonecontinuity</string>
<string>com.apple.private.alloy.facetime.video</string>
<string>com.apple.private.alloy.facetime.audio</string>
<string>com.apple.private.alloy.tincan.audio</string>
</array>
<key>com.apple.private.ids.session-private</key>
<array>
<string>com.apple.private.alloy.facetime.multi</string>
<string>com.apple.private.alloy.phonecontinuity</string>
<string>com.apple.private.alloy.facetime.video</string>
<string>com.apple.private.alloy.facetime.audio</string>
<string>com.apple.private.alloy.tincan.audio</string>
</array>
<key>com.apple.private.imavcore.imavagent</key>
<true/>
<key>com.apple.private.lockdown.finegrained-get</key>
<array>
<string>NULL/ActivationState</string>
</array>
<key>com.apple.private.notificationcenter-system</key>
<array>
<dict>
<key>identifier</key>
<string>com.apple.SystemNote</string>
</dict>
</array>
<key>com.apple.private.notificationcenter.internalpushclient</key>
<true/>
<key>com.apple.private.notificationcenterui.alerts</key>
<true/>
<key>com.apple.private.rtcreportingd</key>
<true/>
<key>com.apple.private.screen-time</key>
<true/>
<key>com.apple.private.security.storage.CallHistory</key>
<true/>
<key>com.apple.private.security.storage.Voicemail</key>
<true/>
<key>com.apple.private.suggestions.contacts</key>
<true/>
<key>com.apple.private.system-keychain</key>
<true/>
<key>com.apple.private.tcc.allow.overridable</key>
<array>
<string>kTCCServiceMediaLibrary</string>
<string>kTCCServicePhotos</string>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceMicrophone</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.facetime</string>
<string>com.apple.mobilephone</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.suggestions</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.network.server</key>
<true/>
<key>com.apple.security.personal-information.addressbook</key>
<true/>
<key>com.apple.security.temporary-exception.shared-preference.read-only</key>
<array>
<string>com.apple.suggestions</string>
</array>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.shortcutitems.fullaccess</key>
<true/>
<key>com.apple.springboard.statusbarstyleoverrides</key>
<true/>
<key>com.apple.symptom_diagnostics.report</key>
<true/>
<key>com.apple.videoconference.allow-conferencing</key>
<true/>
<key>com.apple.visualvoicemail.client</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>callservicesd</string>
</array>
</dict>
</plist>
