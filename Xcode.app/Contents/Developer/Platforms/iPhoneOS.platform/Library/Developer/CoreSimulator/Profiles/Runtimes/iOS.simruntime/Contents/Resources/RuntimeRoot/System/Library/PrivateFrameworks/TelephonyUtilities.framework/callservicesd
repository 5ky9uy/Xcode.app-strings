DTMFKey
AVCBlobRecoveryGracePeriod
T@"<CPSystemStateObserver>",R,N
FTUserScore
T@"<CSDReporterDataSource>",W,N
GUID
T@"CSDCallFilterController",R,N
IDSFormattedDestinationID
T@"CSDIDSService",&,N,V_service
IMDaemonConnected
T@"CSDMessagingConversationJoinedMetadata",&,N,V_joinedMetadata
ISOCountryCodeForCallWithUUID:
T@"CXCallSource",&,N,GbackingCallSource,V_mockBackingCallSource
ISOCountryCodeForMobileCountryCode:mobileNetworkCode:
T@"NSArray",&,N
ITUCountryCodeForISOCountryCode:
T@"NSArray",R,N
SDKVersion
T@"NSMutableArray",&,N,V_routes
SIMIdentifier
T@"NSMutableDictionary",&,N,V_bundleIdentifierToVoIPApplication
StringAsEnclosedEncryptedType:
T@"NSNumber",N,V_springBoardPID
StringAsLeaveReason:
T@"NSSet",C,N,V_rejectedMembers
StringAsReceivedMessageType:
T@"NSSet",R,C,N
StringAsType:
T@"NSString",C,N,V_remoteFromID
T#,R
T@"NSValue",&,N
T@"<CSDAVCMomentsDelegate>",R,W,N
T@"TUCallCapabilitiesState",&,N
T@"<CSDAVCSessionDelegate>",R,W,N,V_delegate
T@"TURoute",R,N
T@"<CSDAVConference>",R,N
T@?,C,N
T@"<CSDAVConferenceDelegate>",W,N,V_delegate
T@?,C,N,V_incomingChatGenerator
T@"<CSDAVConferenceProviderDelegate>",W,N
TB,N,GisAudioReady,V_audioReady
T@"<CSDAccountsControllerDelegate>",W,N,V_delegate
TB,N,GisOutgoing,V_mockOutgoing
T@"<CSDCHManager>",R,N,V_chManager
TB,N,GmayRequireBreakBeforeMake,V_mockMayRequireBreakBeforeMake
T@"<CSDCallCenterObserver>",R,N,V_callCenterObserver
TB,N,V_protoSOS
T@"<CSDCallContainer>",R,N,V_callCenter
TB,N,V_relayCapableDeviceExists
T@"<CSDCallHistoryControllerDelegate>",&,N,V_delegate
TB,N,V_shouldCheckAllGenerators
T@"<CSDCallProviderManagerDataSourceDelegate>",W,N
TB,N,V_supportsContinuationOnTV
T@"<CSDCallSourceFetcherDataSource>",W,N,V_dataSource
TB,R,N,GisCarPlayRouteAvailable
T@"<CSDConduitIDSProxy>",W,N,V_messageProxy
TB,R,N,GisCellularDataPreferred
T@"<CSDConversationInvitationResolving>",&,N,V_invitationResolver
TB,R,N,GisPseudonym,V_pseudonym
T@"<CSDConversationProviderDelegate>",R,N,V_delegate
TI,N,V_maximumCallsPerCallGroup
T@"<CSDConversationServerBag>",R,N,V_serverBag
TQ,N,V_photoRequestFailureCount
T@"<CSDCoreTelephonyClientDelegate>",W,N,V_delegate
TQ,N,V_rebroadcastTimeThreshold
T@"<CSDEmergencyCallbackCapabilities>",R,N,V_emergencyCallbackCapabilities
TUCallRemoteVideoPresentationStateFromCXVideoPresentationState:
T@"<CSDFaceTimeIDSProviderDelegateServerBag>",&,N,V_serverBag
T^v,R,N
T@"<CSDFileTransferring>",R,N,V_fileTransferController
Td,N,V_timebase
T@"<CSDFileTransferringDelegate>",W,N,V_delegate
T@"<CSDIDSChatDelegate>",W,N,V_delegate
_activeContexts
T@"<CSDIDSDualSessionProvider>",R,N,V_sessionProvider
_ambiguityState
T@"<CSDIDSDualSessionProviderDelegate>",W,N,V_delegate
_approverHandle
T@"<CSDIDSGroupSessionProvider>",R,N,V_sessionProvider
_avLess
T@"<CSDIDSGroupSessionProviderDelegate>",W,N,V_delegate
_callConnected:
T@"<CSDIDSService>",&,N,V_service
_callDataSource
T@"<CSDIDSService>",R,N,V_thumperService
_callID
T@"<CSDIDSSessionProvider>",R,N,V_sessionProvider
_carPlayManager
T@"<CSDMomentsControllerDelegate>",W,N,V_delegate
_client
T@"<CSDMomentsReportingSessionDelegate>",W,N,V_delegate
_conversationProviderIdentifier
T@"<CSDParticipantUpdateSanitizer>",&,N,V_participantUpdateSanitizer
_currentCallSet
T@"<CSDPinExchangeDelegate>",&,V_pinExchangeDelegate
_digits
T@"<CSDProcessObserverProtocol>",R,N,V_processObserver
_domainAccessor
T@"<CSDProviderCallDelegate>",W,N,V_providerCallDelegate
_expectedRelayClientDestination
T@"<CSDRelayCallDelegate>",W,N,V_relayDelegate
_failureContext
T@"<CSDRelayIDSMessengerDelegate>",W,N,V_delegate
_handlePushTokensInvited:didSendInvitation:didCancelInvitation:
T@"<CSDRelayMessagingControllerClientMessagingDelegate>",W,N,V_clientMessagingDelegate
_invitedHandles
T@"<CSDRelayMessagingControllerDelegate>",W,N,V_delegate
_isSendingVideo
T@"<CSDRouteManager>",&,N,V_routeManager
_isoCountryCode
T@"<CSDStatusBarResolverDelegate>",W,N
_joinedFromLink
T@"<CSDTelephonyCallCapabilitiesDelegate>",W,N,V_delegate
_junkConfidence
T@"<CSDTransactionManager>",R,N,V_transactionManager
_leaveConversation:withContext:
T@"<CSDUserActivityCommunicatorDelegate>",W,N,V_delegate
_locallyCreated
T@"<CSDUserNotificationDelegate>",R,W,N,V_delegate
_mockConnecting
T@"<CSDVoucherManager>",&,N,V_voucherManager
_notifyObserver
T@"<CXProviderDelegatePrivate>",R,N,V_tinCanProviderDelegate
_object
T@"<TUConversationLinkDescriptorDataSourceDelegate>",&,N
_pendingMembers
T@"<TUFeatureFlags>",R,N,V_featureFlags
_phoneNumberURI
T@"<TUNotifyObserver>",&,N,V_coveredNotifyObserver
_preparedToStop
T@"ACAccountStore",R,N,V_accountStore
_protoEmergency
T@"APSConnection",&,N,V_productionConnection
_protoVoicemail
T@"AVCScreenCapture",&,N,V_avcScreenCapture
_recentsManager
T@"AVConference",R,N,V_conference
_registerCallStartEventForCall:
T@"BKSApplicationStateMonitor",R,N,V_applicationStateMonitor
_removedMembers
T@"BKSProcessAssertion",R,N,V_assertion
_reportConversationFailedWithFailureReason:providerEndedReason:
T@"CHManager",R,N,V_recentsManager
_sendDelegateInputLevelChanged:
T@"CPActivityAuthorizationManager",&,N,V_activityAuthorizationManager
_sender
T@"CPActivitySessionManager",&,N,V_activitySessionManager
_setRelayCallingEnabledDefault:
T@"CPApplicationMonitor",R,N,V_applicationMonitor
_socket
T@"CPApplicationPolicyManager",&,N,V_applicationPolicyManager
_supportsMessagesGroupProviding
T@"CPBiomeSessionDonator",R,N,V_cpBiomeStreamDonator
_thumperService
T@"CPSystemStateObserver",&,N,V_sharePlaySystemStateObserver
_upgradeTimeout
T@"CSDAccountsController",R,N,V_accountsController
account
T@"CSDAudioController",&,N,V_audioController
accountsChanged
T@"CSDCallCapabilities",R,N
acquire
T@"CSDCallController",R,N
activateLink:completionHandler:
T@"CSDCallDataSource",W,N,V_dataSource
activeVideoCall
T@"CSDCallFilterController",&,N,V_callFilterController
activitySession
T@"CSDCallHistoryController",R,N,V_callHistoryController
addOtherUniqueProxyIdentifiers:
T@"CSDCallHistoryManager",R,N,V_callHistoryManager
addPrioritizedSenderIdentities:
T@"CSDCallProviderManager",&,N,V_callProviderManager
allKeys
T@"CSDCallProviderManager",R,N,V_providerManager
allowAnyNetwork
T@"CSDCallSourceFetcher",R,N,V_callSourceFetcher
applicationStateForApplication:
T@"CSDCallStateController",R,W,N,V_callStateController
assumedIdentity
T@"CSDCallStateMonitor",&,N,V_callStateMonitor
audioController
T@"CSDClient",&,N,V_networkExtensionClient
avModeAsString:
T@"CSDClient",R,N
avcData
T@"CSDClientManager",&,N,V_networkExtensionClientManager
base64EncodedStringWithOptions:
T@"CSDClientManager",R,N,V_clientManager
bundleURLString
T@"CSDConversationLinkGeneratorDescriptor",R,N
callCenterObserver:callChanged:
T@"CSDConversationManager",R,N,V_conversationManager
callSource:reportedCallWithUUID:changedMeterLevel:forDirection:
T@"CSDConversationParticipant",&,N,V_splitSessionSecondary
callerIDAccount
T@"CSDConversationPersistenceController",R,N,V_persistenceController
canUpgradeChat:
T@"CSDConversationProviderManager",R,N
cellularDataEnabledForBundleId:
T@"CSDConversationProviderManager",R,N,V_providerManager
clearEndpointIDSDestinationURIs
T@"CSDCoreTelephonyClient",R,N,V_coreTelephonyClient
clearPseudonyms
T@"CSDDeviceLockStateObserver",R,N,V_lockStateObserver
clientsByObject
T@"CSDFaceTimeConversationProviderDelegate",&,N,V_faceTimeConversationProviderDelegate
conference:inputLevelChangedTo:
T@"CSDFaceTimeIMAVProviderDelegate",&,N,V_faceTimeIMAVProviderDelegate
connectToDaemon
T@"CSDFaceTimeInviteDemuxer",&,N,V_faceTimeInviteDemuxer
containsString:
T@"CSDFaceTimeProviderDelegate",R,N,V_faceTimeProviderDelegate
context
T@"CSDHandoffAudioController",&,N,V_handoffAudioController
conversationConnectionDidStart:
T@"CSDIDSGroupSession",R,N,V_idsSession
conversationOneToOneModeEnabled
T@"CSDIDSTransport",&,N,V_relayClientTransport
copyTo:
T@"CSDIDSTransport",R,N
covered
T@"CSDIncomingCallFilterDataSource",&,N,V_dataSource
currentCalendar
T@"CSDLetMeInRequestorKeyAgreement",&,N,V_letMeInKeyAgreement
currentlyPicked
T@"CSDMessagingCallCapabilitiesState",&,N,V_protoCallCapabilitiesState
dataURL
T@"CSDMessagingCallModel",&,N,V_protoCallModel
defaultBehavior
T@"CSDMessagingCallProvider",&,N,V_protoProvider
deliverMessage:withAssertion:applicationShouldPostIncomingCall:
T@"CSDMessagingConversationActivityContext",&,N,V_activityContext
deviceInAltMode
T@"CSDMessagingConversationActivitySceneAssociationBehavior",&,N,V_sceneAssociationBehavior
devices
T@"CSDMessagingConversationActivitySession",&,N,V_stagedActivitySession
dialWithRequest:displayContext:
T@"CSDMessagingConversationLinkGeneratorDescriptor",&,N,V_generatorDescriptor
didStartHandler
T@"CSDMessagingConversationMessage",&,N,V_message
dtmfSoundPlayer
T@"CSDMessagingConversationParticipantAssociation",&,N,V_association
emergencyLabeledHandlesAtIndex:
T@"CSDMessagingConversationReport",&,N,V_reportData
T@"CSDMessagingHandle",&,N,V_associatedPseudonym
endpointIDSDestinationURIsCount
T@"CSDMessagingHandle",&,N,V_handle
faceTimeAppUUID
T@"CSDMessagingHandle",&,N,V_lightweightPrimary
failureExpected
T@"CSDMessagingHandle",&,N,V_primaryHandle
firewallManager
T@"CSDMessagingLinkSyncRecoverMessage",&,N,V_recoverMessage
generateDescriptorInfosAtIndex:
T@"CSDMessagingPersonNameComponents",&,N,V_phoneticRepresentation
gftDowngradeToOneToOneAvailable
T@"CSDMessagingRoute",&,N,V_route
groupUUIDString
T@"CSDMomentsController",&,N,V_momentsController
handleScreenShareMessage:forConversation:fromHandle:withUpdate:
T@"CSDNeighborhoodActivityConduitXPCServer",R,N,V_conduitXPCServer
handoffActivity
T@"CSDPauseDigits",R,N
hasBeenUnlocked
T@"CSDPendingMembershipTracker",&,N,V_pendingMembershipTracker
hasContactLabel
T@"CSDProviderCall",&,N,V_call
hasDummyPayload
T@"CSDProviderCallDataSource",W,N,V_callDataSource
hasLink
T@"CSDProximityController",&,N,V_proximityController
hasOBSOLETEConferenceIdentifier
T@"CSDRaiseToAnswerController",&,N,V_raiseToAnswerController
hasProtoNeedsManualInCallSounds
T@"CSDRelayCallDataSource",R,N,V_relayCallDataSource
hasProtoTTYType
T@"CSDRelayCallDelegate",R,N,V_relayCallDelegate
hasSystemVolume
T@"CSDRelayCommonController",&,N,V_relayCommonController
hasVideoEnabled
T@"CSDRelayHostController",&,N,V_relayHostController
imHandleWithID:
T@"CSDRelayIDSSessionMessenger",R,N,V_sessionMessenger
initOutgoingWithUniqueProxyIdentifier:backingCallSourceIdentifier:callUpdate:isVideo:endpointOnCurrentDevice:originatingUIType:
T@"CSDRelayMessagingController",R,N
initWithCallUUID:sharingScreen:
T@"CSDReportingController",R,N
initWithDataSource:parentQueue:
T@"CSDRouteController",R,N,V_localRouteController
initWithDelegate:delegateQueue:
T@"CSDRouteManager",R,N
initWithHandle:
T@"CSDScreenSharingActivityManager",R,N,V_screenSharingActivityManager
initWithSocket:
T@"CSDSharedConversationServerBag",&,N,V_serverBag
initialLinkType
T@"CSDTelephonyCallCapabilities",R,N,V_telephonyCallCapabilities
isAVLessCapable
T@"CSDThumperPushHandler",R,N,V_thumperPushHandler
isAudioDisabled
T@"CSDUserActivity",&,N,V_currentlyBroadcastedActivity
isCellularDataPreferredForChat:
T@"CSDUserActivity",R,N
isDownlinkMuted
T@"CSDUserIntentManager",R,N,V_userIntentManager
isEqualToArray:
T@"CSDVoIPApplicationController",&,N,V_voipApplicationController
isFromBlockList
T@"CSDVoIPApplicationMonitor",R,N,V_applicationMonitor
isHomePodFamily
T@"CSDVoiceOverObserver",&,N,V_voiceOverObserver
isInternational
T@"CXAbstractProviderSource",&,N,V_providerSource
isMuted
T@"CXCallControllerHost",R,N,V_callControllerHost
isRegionBlocked
T@"CXCallDirectoryNSExtensionManager",R,N,V_nsExtensionManager
isRetry
T@"CXCallDirectoryStore",&,N,V_callDirectoryStore
isSharingScreen
T@"CXCallFailureContext",R,N
isValid
T@"CXCallSource",R,N
isVideo
T@"CXCallUpdate",&,N,V_mergedCallUpdate
isWiFiCallingCurrentlyAvailable
T@"CXInProcessCallSource",R,N,V_faceTimeCallSource
isWirelessHeadsetRouteAvailable
T@"CXJoinCallAction",R,N
lightweightPrimaryParticipantID
T@"CXNotificationServiceExtensionVoIPXPCHost",R,N,V_nseMessageHost
localLightweightSecondaryMember
T@"CXProvider",R,N,V_provider
lowercaseString
T@"CoreTelephonyClient",R,N,V_telephonyClient
manager
T@"FBSOpenApplicationService",R,N,V_service
mediaSystemName
T@"FTNetworkSupport",R,N,V_networkSupport
members
T@"IDSAccount",R,N,V_account
message
T@"IDSDestination",&,N
microphoneMuted
T@"IDSDestination",&,N,V_remoteDestination
mockCallWithNotificationCenter:
T@"IDSDevice",&,N,V_defaultPairedDevice
mockConferenced
T@"IDSDevice",&,N,V_pairedDevice
mockDisplayName
T@"IDSDevice",R,N
mockPTT
T@"IDSIDQueryController",&,N,V_idsQueryController
mockUplinkMuted
T@"IDSService",R,N
moments
T@"LSApplicationRecord",R,N
momentsController:didReceiveResultsForStream:withTransactionID:
T@"NSArray",&,N,V_currentParticipantPresentationContexts
multiwayBlocked
T@"NSArray",C,N,GcontactIdentifiers,V_mockContactIdentifiers
nextPauseDigits
T@"NSArray",C,N,V_localThumperAccounts
notifyDelegatesOfMessage:fromHandle:forConversation:withUpdate:
T@"NSArray",C,N,V_routes
numberWithBool:
T@"NSArray",C,N,V_serviceProviders
observerToQueue
T@"NSArray",R,C,N
opaqueSessionID
T@"NSCountedSet",&,N,V_processAssertions
otherUniqueProxyIdentifiersType
T@"NSData",&,N,V_avcData
participantAssociationWithTUConversationParticipantAssociation:
T@"NSData",&,N,V_conversationMessageBytes
payload
T@"NSData",&,N,V_dummyPayload
perform
T@"NSData",&,N,V_image
performPlayDTMFToneForCall:key:
T@"NSData",&,N,V_metadata
T@"NSData",&,N,V_privateKey
preferredAndActiveRouteForCall:
T@"NSData",&,N,V_publicKey
primaryDeviceID
T@"NSData",&,N,V_unsafeData
processObserver
T@"NSData",C,N,V_voipToken
protoCallsCount
T@"NSData",R,C,N,V_avcData
protocolVersion
T@"NSDate",&,N
provider:performPullCallAction:
T@"NSDate",&,N,GdateCreated,V_mockDateCreated
providerManager
T@"NSDate",&,N,V_dateEnded
pseudonymURIMap
T@"NSDate",&,N,V_dateStartedConnecting
registerClient:
T@"NSDate",C,N,V_lastRebroadcastTime
relayCall:didAnswerWithRequest:
T@"NSDate",R,N,V_dateCreated
relayCallingDisabledForDeviceID
T@"NSDictionary",&,N,V_visibilityContext
remoteParticipantForIdentifier:
T@"NSDictionary",C,N,GproviderContext,V_mockProviderContext
remoteVideoPausedForConference:
T@"NSDictionary",C,N,V_activeParticipantDestinationsByIdentifier
removeObserver:
T@"NSDictionary",C,N,V_localInviteDictionary
request
T@"NSDictionary",C,N,V_remoteInviteDictionary
requiresStrictPolicyEnforcement
T@"NSDictionary",R,C,N
retainArguments
T@"NSDictionary",R,C,N,V_remoteInviteDictionary
T@"NSError",&,N,V_endedError
saveImageToDisk
T@"NSMapTable",&,N,V_dataSourceToIdentifierToCalls
sendMessagesForInvalidatedLink:
T@"NSMapTable",&,N,V_observerToQueue
serverTimestamp
T@"NSMapTable",R,N,V_clientsByObject
serviceProvider
T@"NSMapTable",R,N,V_openTransactions
session
T@"NSMutableArray",&,N,V_activeLightweightParticipants
session:didLeaveGroupWithError:
T@"NSMutableArray",&,N,V_activeRemoteParticipants
session:invitationSentToTokens:
T@"NSMutableArray",&,N,V_addedMembers
sessionStarted:
T@"NSMutableArray",&,N,V_contactIdentifiers
T@"NSMutableArray",&,N,V_emergencyLabeledHandles
setAssociation:
T@"NSMutableArray",&,N,V_firstUnlockCallbacks
setAudioPaused:
T@"NSMutableArray",&,N,V_generatorDescriptors
setCachedChats:
T@"NSMutableArray",&,N,V_invitationPreferences
setCategory:mode:options:error:
T@"NSMutableArray",&,N,V_lightweightMembers
setConferenced:
T@"NSMutableArray",&,N,V_members
setConversationGridDisplayMode:
T@"NSMutableArray",&,N,V_otherUniqueProxyIdentifiers
setConversationProviderManager:
T@"NSMutableArray",&,N,V_prioritizedSenderIdentities
setDialRequest:
T@"NSMutableArray",&,N,V_providers
setEmergencyCurrentlyAvailable:
T@"NSMutableArray",&,N,V_remoteMembers
setEnvironment:
T@"NSMutableArray",&,N,V_removedMembers
setFacetimeIDSServiceGenerator:
T@"NSMutableArray",&,N,V_sessions
setFileManager:
T@"NSMutableArray",C,N,V_memberHandlesAwaitingInvitesToLink
setFromStorage:
T@"NSMutableArray",R,N,V_captureSessionQueue
setHandoffRecipientParticipant:
T@"NSMutableArray",R,N,V_pendingData
setHasMaximumCallsPerCallGroup:
T@"NSMutableArray",R,N,V_photoRequestDurations
setHasReceivedFirstRemoteFrame:
T@"NSMutableArray",R,N,V_transactionObjectsAwaitingCallHistory
setHasShouldCheckAllGenerators:
T@"NSMutableDictionary",&,N,V_audioRoutesByParticipantIdentifier
setHasTimebase:
T@"NSMutableDictionary",&,N,V_listeningIdentifiersByActivityType
setIDSAliasingSalt:onContainer:
T@"NSMutableDictionary",&,N,V_pendingConversationParticipantsByIdentifier
setJoiningConversationWithLink:
T@"NSMutableDictionary",&,N,V_silencingUserInfo
setLightweight:
T@"NSMutableDictionary",R,C,N,V_inflightAVCBlobRecoveryBlocksByIdentifier
setLocalMember:
T@"NSMutableDictionary",R,N,V_bundleIdentifierToApplicationState
setMixToUplink:
T@"NSMutableDictionary",R,N,V_cachedCalls
setMockBlocked:
T@"NSMutableDictionary",R,N,V_clientFileURLByIdentifier
setMockIsVideo:
T@"NSMutableDictionary",R,N,V_delayedActionsByCallUUID
setMockService:
T@"NSMutableDictionary",R,N,V_localProvidersByIdentifier
setMockTTYType:
T@"NSMutableDictionary",R,N,V_mutableConversationsByUUID
setOtherUniqueProxyIdentifiers:
T@"NSMutableDictionary",R,N,V_mutablePseudonymsByCallUUID
setPreferences:
T@"NSMutableDictionary",R,N,V_mutableSendDataCallbacksByRequestIdentifiers
setProtoShouldSuppressInCallUI:
T@"NSMutableDictionary",R,N,V_pairedHostDeviceProvidersByIdentifier
setProtoStatus:
T@"NSMutableDictionary",R,N,V_pendingPulledCallContexts
setRemoteProtocolVersionNumber:
T@"NSMutableDictionary",R,N,V_pidToCachedProviderIdentifiers
setSOS:
T@"NSMutableDictionary",R,N,V_pidToProviderIdentifiers
setScreenEnabled:screenShareAttributes:forConversationWithUUID:
T@"NSMutableDictionary",R,N,V_providerIdentifierToProvider
setSerialQueue:
T@"NSMutableDictionary",R,N,V_remoteParticipantsByIdentifier
setSessionMode:
T@"NSMutableDictionary",R,N,V_requestStartDateByTransactionID
setSetUpBreakBeforeMakeTimeout:
T@"NSMutableDictionary",R,N,V_screenCaptureQueue
setSoundRegion:
T@"NSMutableDictionary",R,N,V_temporaryFileURLByClientFileURL
setSupportsDefaultPairedDevice:
T@"NSMutableOrderedSet",&,N,V_activityQueue
setTimedOutPickingRouteHandler:
T@"NSMutableOrderedSet",&,N,V_currentCallSet
setUPlusOneScrenShareAvailable:
T@"NSMutableSet",&,N,V_conferencesAwaitingConnectionClose
setUplinkMuted:
T@"NSMutableSet",&,N,V_identifiersWithPendingCoalescingBlocks
setVideoPaused:
T@"NSMutableSet",&,N,V_pendingAllowedMembers
setWiFiEmergencyCallingAllowed:
T@"NSMutableSet",R,N,V_callUUIDsUpgradedForAVMode
setXpcListener:
T@"NSMutableSet",R,N,V_conversationUUIDs
shouldDisplaySystemCallControls
T@"NSMutableSet",R,N,V_conversationUUIDsUpgradedFromAVLess
shouldIgnoreBenignErrorOnStart:
T@"NSMutableSet",R,N,V_conversationUUIDsWaitingToJoin
shouldPreferRelayOverDirectSecondaryCallingForProvider:isVideo:
T@"NSMutableSet",R,N,V_mutableConversationsRequestingUpgrade
T@"NSNumber",&,N,V_expectedAudioEnabled
speakUtterance:
T@"NSNumber",&,N,V_expectedScreenEnabled
startWhenStaged
T@"NSNumber",&,N,V_expectedVideoPaused
stringByAppendingPathComponent:
T@"NSNumber",&,N,V_remoteProtocolVersionNumber
stringForIDSSessionEndedReason:
T@"NSNumber",C,N
supportsAVMode:
T@"NSObject",&,N,V_reportingHierarchySubToken
supportsHolding
T@"NSObject<OS_dispatch_queue>",&,N
supportsRinging
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
telephoneNumber
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
temporaryFileURLByClientFileURL
T@"NSObject<OS_dispatch_source>",&,N,V_pendingConversationCleanupTimer
timeout
T@"NSObject<OS_dispatch_source>",&,V_callDurationLimitTimer
trashVoicemail:
T@"NSOrderedSet",C,N,V_telephonySenderIdentities
ttyType
T@"NSPersonNameComponents",R,C,N
tuRoute
T@"NSSet",&,N,V_invitationPreferences
typedIdentifier
T@"NSSet",C,N,SsetTUInvitationPreferences:
unarchivedObjectFromData:error:
T@"NSSet",C,N,V_activeRemoteParticipants
ungroup
T@"NSSet",C,N,V_invitationPreferences
updateAppHistoryActivityForCall
T@"NSSet",C,N,V_lightweightMembers
updateConversationsByGroupUUID:
T@"NSSet",C,N,V_otherInvitedHandles
updateWithCall:
T@"NSSet",C,N,V_pendingMembers
uppercaseString
T@"NSSet",C,N,V_remoteMemberHandles
urlForFilename:
T@"NSSet",C,N,V_remoteParticipantHandles
utilityProvider
T@"NSSet",C,N,V_subscriptions
virtualParticipantsByPluginName
T@"NSSet",R,N
wasDialAssisted
.cxx_destruct
StringAsAvMode:
AVCBlobRecoveryTimeout
T@"<CSDOrientationObserver>",R,N,V_interfaceOrientationObserver
FZIDType
T@"AVCSessionConfiguration",R,N
T@"CSDConversationNoticeManager",R,N,V_conversationNoticeManger
IMAVChatRemoteVideoPresentationStateFromCXVideoPresentationState:
T@"CSDIDSService",C,N,V_service
ISOCountryCode
T@"CSDPinExchangeController",R,N,V_thumperPinExchangeController
ISOCountryCodeForChat:
T@"IDSService",R,N,V_idsService
ISOCountryCodeForSubscriptionUUID:
T@"NSArray",C,N
JSONObjectWithData:options:error:
T@"NSError",R,N
SHA1HexString
T@"NSMutableArray",R,N,V_pendingNetworkExtensionMessageContexts
StringAsDeviceType:
T@"NSNumber",&,N,GisSendingVideoExpected,V_sendingVideoExpected
StringAsHandleType:
T@"NSSet",C,D,N
StringAsLinkLifetimeScope:
T@"NSSet",C,N,V_serverProvidedLightweightParticipantIdentifiers
StringAsRequestActionType:
T@"NSString",&,N,V_contactLabel
StringAsValidationSource:
T@"NSString",R,C,N,V_identifier
T#,R,N
T@"STCallingStatusDomainCallDescriptor",&,N,V_currentDescriptor
T@"<CSDAVCSession>",&,N,V_avcSession
T@"TUCallCapabilitiesState",R,N
T@"<CSDAVConference>",&,N,V_conference
T@,&,N,V_object
T@"<CSDAVConferenceDelegate>",W,N
T@?,C,N,V_block
T@"<CSDAVConferenceProvider>",&,N,V_conferenceProvider
T@?,C,N,V_outgoingChatGenerator
T@"<CSDAVConferenceProviderDelegate>",W,N,Vdelegate
TB,N,GisInvitation,V_invitation
T@"<CSDCHManager>",&,N,V_chManager
TB,N,GisWaitingToPruneParticipants,V_waitingToPruneParticipants
T@"<CSDCallCenterObserver>",&,N,V_callCenterObserver
TB,N,V_isScreenSharingAvailable
T@"<CSDCallContainer>",R,N
TB,N,V_receivedInvitationAccept
T@"<CSDCallDelegate>",W,N,V_delegate
TB,N,V_requiresInviteDictionary
T@"<CSDCallProviderManagerDataSource>",R,N,V_dataSource
TB,N,V_supportsClientAssertions
T@"<CSDCallProviderManagerDataSourceDelegate>",W,N,V_delegate
TB,N,V_uplinkWasExplicitlyMuted
T@"<CSDCarrierBundlePhoneNumberProviderControllerDelegate>",W,N,V_delegate
TB,R,N,GisCellularDataAvailable
T@"<CSDConversationDelegate>",W,N,V_delegate
TB,R,N,GisInitiator,V_initiator
T@"<CSDConversationNoticeDelegate>",R,W,N,V_delegate
TB,R,N,GisSpeakerRouteAvailable
T@"<CSDConversationServerBag>",&,N,V_serverBag
TI,N,V_sharePlayProtocolVersion
T@"<CSDCoreTelephonyClientDelegate>",W,N
TQ,N,V_photoRequestSuccessCount
T@"<CSDDeviceLockStateObserver>",R,N,V_deviceLockObserver
TQ,N,V_sharePlayProtocolVersion
T@"<CSDFaceTimeIDSProviderDelegateCapabilities>",R,N,V_capabilities
T^I,R,N
T@"<CSDFaceTimeProviderDelegateManagerDelegate>",W,N,V_faceTimeDemuxerDelegate
Td,N,V_remoteUplinkMutedSetTime
T@"<CSDFileTransferringDelegate>",W,N
Ti,R,N,V_socket
T@"<CSDIDSChatDelegate>",W,N
T@"<CSDIDSDualSessionDelegate>",W,N,V_delegate
_addCallAllowed
T@"<CSDIDSDualSessionProviderDelegate>",W,N
_applicationLaunchPolicyManager
T@"<CSDIDSGroupSessionDelegate>",W,N,V_delegate
_audioVideoMode
T@"<CSDIDSGroupSessionProviderDelegate>",W,N
_avMode
T@"<CSDIDSProviderDelegateCapabilities>",R,N,V_capabilities
_callController
T@"<CSDIDSService>",R,N,V_relayService
_callHistoryControllerXPCServer
T@"<CSDIDSServiceDependencies>",R,N
_caller
T@"<CSDMediaAssetManaging>",R,N,V_mediaAssetManager
_checkInMessage
T@"<CSDMomentsControllerLocalCapabilities>",&,N
_conversationID
T@"<CSDMomentsServerBag>",&,N,V_serverBag
_conversationUUIDsWaitingToJoin
T@"<CSDPauseDigitsQueueDelegate>",W,N,V_delegate
_didStopHandler
T@"<CSDProcessObserverProtocol>",R,N,V_inCallServiceProcessObserver
_displayContext
T@"<CSDProcessObserverProtocol>",R,N,V_springBoardProcessObserver
_expanseEnabled
T@"<CSDProximitySensorObserver>",R,N,V_proximitySensorObserver
_exportedObject
T@"<CSDRelayIDSDualSessionDelegate>",W,N,V_delegate
_handle
T@"<CSDRelayIDSSessionMessengerDelegate>",W,D,N
_hardPauseState
T@"<CSDRelayMessagingControllerCommonMessagingDelegate>",W,N,V_commonMessagingDelegate
_isSendingAudio
T@"<CSDRelayMessagingControllerHostMessagingDelegate>",W,N,V_hostMessagingDelegate
_isSystemProviderForIdentifier:
T@"<CSDStatusBarResolver>",&,N,V_resolver
_joined
T@"<CSDStatusBarResolverDelegate>",W,N,V_delegate
_joinedMetadata
T@"<CSDThumperCapabilitiesMonitorDataSource>",W,N,V_dataSource
_lastSavedAccountIDByCapability
T@"<CSDUserActivityCommunicatorDelegate>",W,N
_localSenderIdentityAccountUUID
T@"<CSDUserActivityCommunicatorProtocol>",&,N,V_activityCommunicator
_mockCallStatus
T@"<CSDVoiceOverObserver>",R,N,V_voiceOverObserver
_networkSupport
T@"<CXAudioSessionActivationStateObserver>",&,N,GaudioInterruptionActivationStateObserver,V_mockAudioInterruptionActivationStateObserver
_nseMessageHost
T@"<IDSServicePseudonymDelegate>",&,N,V_delegate
_originalRingtoneSoundURLString
T@"<TUFeatureFlags>",&,N,V_featureFlags
_pendingRemovedParticipantsByID
T@"<TUMomentsControllerXPCClient>",R,N,V_momentsClient
_pidToCachedProviderIdentifiers
T@"<TUNotifyObserver>",&,N,V_notifyObserver
_protoCallModel
T@"APSConnection",&,N,V_developmentConnection
_protoSupportsEmergencyFallback
T@"AVAudioSession",R,N
_providerSource
T@"AVCSession",R,N,V_session
_recoverMessage
T@"BKSAccelerometer",R,N,V_accelerometer
_remoteParticipantsByIdentifier
T@"BKSProcessAssertion",&,N,V_processAssertion
_report
T@"CARAutomaticDNDStatus",&,N,V_automaticCarDNDStatus
_routes
T@"CMGestureManager",&,N,V_raiseToEarGestureManager
_sendSoftPauseDigitsIfNecessary
T@"CPActivityAuthorizationManager",R,N
_setLocalLandscapeAspectRatio:localPortraitAspectRatio:forChat:
T@"CPApplicationController",R,N,V_cpApplicationController
_setUpListeners
T@"CPApplicationPolicyManager",&,N,V_applicationLaunchPolicyManager
_springBoardPID
T@"CPAudioRoutePolicyManager",&,N,V_audioRoutePolicyManager
_synchronousExportedObjectProxy
T@"CPConversationManagerHost",R,N,V_conversationManagerHost
_update
T@"CSDAVConferenceConfiguration",&,N,V_configuration
_voucherManager
T@"CSDAudioArbitrationController",&,N,V_audioArbitrationController
accountController:accountAdded:
T@"CSDCall",R
accountsSupportSecondaryCalling
T@"CSDCallCenterObserver",R,N,V_callCenterObserver
actions
T@"CSDCallController",R,N,V_callController
activeParticipantPruningTimeout
T@"CSDCallDirectoryManager",&,N,V_callDirectoryManager
activityContext
T@"CSDCallHistoryController",&,N,V_callHistoryController
addIdentifiers:
T@"CSDCallHistoryControllerXPCServer",R,N,V_callHistoryControllerXPCServer
addParticipant:
T@"CSDCallHistoryManagerXPCServer",R,N,V_callHistoryManagerXPCServer
aliases
T@"CSDCallProviderManager",R,N,V_callProviderManager
allParticipantsSupportSharePlay
T@"CSDCallProviderManagerXPCServer",R,N,V_callProviderManagerXPCServer
answerCall:withRequest:whileDisconnectingCalls:andHoldingCalls:
T@"CSDCallStateController",&,N,V_callStateController
arrayWithArray:
T@"CSDCallStateController",W,N,V_callStateController
asynchronousExportedObjectProxy
T@"CSDCarPlayManager",R,N,V_carPlayManager
audioQueueFlags
T@"CSDClient",&,N,V_pushKitClient
availableOutgoingRelayCallerIDs
T@"CSDClient",W,N,V_sessionApprovalClient
avcSessionToken
T@"CSDClientManager",&,N,V_pushKitClientManager
bestAppSuggestionMayHaveChanged
T@"CSDClientManager",W,N,V_clientManager
bytesOfDataUsed
T@"CSDConversationLinkManager",&,N,V_linkManager
callGroupsOnDefaultPairedDevice
T@"CSDConversationManagerXPCServer",R,N,V_conversationManagerXPCServer
callWithStatus:
T@"CSDConversationParticipant",R,N
canSend
T@"CSDConversationProviderManager",&,N,V_conversationProviderManager
cancelInvitationWithLocalHangup
T@"CSDConversationProviderManager",R,N,V_conversationProviderManager
cleanup
T@"CSDConversationProviderManagerXPCServer",R,N,V_conversationProviderManagerXPCServer
clearProtoCalls
T@"CSDDeviceLockStateObserver",&,N,V_deviceLockStateObserver
clients
T@"CSDExternalIDSDualSession",R,N,V_session
conduit
T@"CSDFaceTimeIDSProviderDelegate",&,N,V_faceTimeIDSProviderDelegate
conferenceProviderCreationBlock
T@"CSDFaceTimeIMAccount",R,N
containsObject:
T@"CSDFaceTimeInviteDemuxer",R,N,V_faceTimeInviteDemuxer
content
T@"CSDGFTServiceConversationProviderDelegate",&,N,V_groupFaceTimeServiceProviderDelegate
conversation:failedWithContext:
T@"CSDIDSFirewallManager",&,N,V_firewallManager
conversationManager:reportedNewIncomingConversation:fromHandle:
T@"CSDIDSService",R,N
conversationWithGroupUUID:orRepresentedByRemoteMembers:andLink:
T@"CSDIDSTransport",&,N,V_transport
countForObject:
T@"CSDIncomingCallFilter",R,N,V_incomingCallFilter
csd_isTelephony
T@"CSDKeychainPasswordItem",R,N,V_keychainItem
currentPreferredTransportMethod
T@"CSDMessagingAVConferenceInviteData",&,N,V_inviteData
dataForVoicemailWithIdentifier:
T@"CSDMessagingCallDisplayContext",&,N,V_protoDisplayContext
dealloc
T@"CSDMessagingCallModelState",&,N,V_protoCallModelState
delegateToQueue
T@"CSDMessagingConversationActivity",&,N,V_activity
destinationURIs
T@"CSDMessagingConversationActivityMetadata",&,N,V_activityMetadata
deviceSupported
T@"CSDMessagingConversationActivitySession",&,N,V_activitySession
devicesChanged:
T@"CSDMessagingConversationLink",&,N,V_link
didChangeThumperCallingProvisionalURLForSenderIdentityWithUUID:
T@"CSDMessagingConversationMember",&,N,V_localMember
disconnectCall:
T@"CSDMessagingConversationParticipant",&,N,V_sender
eligibleForCall
T@"CSDMessagingConversationParticipantAssociation",&,N,V_participantAssociation
enabled
T@"CSDMessagingEncryptedConversationMessage",&,N,V_encryptedMessage
endChat
T@"CSDMessagingHandle",&,N,V_fromHandle
expanseProvider
T@"CSDMessagingHandle",&,N,V_initiator
facetimeService
T@"CSDMessagingHandle",&,N,V_originatorHandle
filters
T@"CSDMessagingLinkSyncCheckInMessage",&,N,V_checkInMessage
fulfill
T@"CSDMessagingLinkSyncUpdateMessage",&,N,V_updateMessage
getIsSendingAudio:callID:error:
T@"CSDMessagingPersonNameComponents",&,N,V_protoPersonNameComponents
groupID
T@"CSDMessagingVoucher",&,N,V_associationVoucher
handleInvocation:synchronously:
T@"CSDNeighborhoodActivityConduit",R,N,V_conduit
handles
T@"CSDOrientationMonitor",&,N,V_orientationMonitor
hardPauseDigits
T@"CSDPauseDigitsQueue",&,N,V_pauseDigitsQueue
hasCallInfoBlob
T@"CSDPowerAssertionManager",&,N,V_powerAssertionManager
hasCurrentCalls
T@"CSDProviderCallDataSource",R,N,V_providerCallDataSource
hasGenerateDescriptorVersionSum
T@"CSDProviderDisplayMonitor",R,N,V_providerDisplayMonitor
hasName
T@"CSDProximitySensorObserver",&,N,V_proximitySensorObserver
hasProtoDTMFKey
T@"CSDRecentsController",R,N,V_recentsController
hasProtoService
T@"CSDRelayCallDataSource",W,N,V_relayCallDataSource
hasSupportsDTMF
T@"CSDRelayClientController",&,N,V_relayClientController
hasType
T@"CSDRelayConferenceInterface",R,N
idsDestinations
T@"CSDRelayIDSDualSession",R,N
imageTranscoder
T@"CSDRelayMessagingController",&,N,V_relayMessagingController
initWithAction:
T@"CSDRelayPairedDeviceMessenger",R,N,V_pairedDeviceMessenger
initWithClientUUID:serialQueue:
T@"CSDReportingController",R,N,V_reportingController
initWithDataSource:serialQueue:
T@"CSDRouteController",R,N,V_pairedHostDeviceRouteController
initWithDomain:
T@"CSDSandboxExtensionDirectory",R,N,V_ringtonesSandboxExtensionDirectory
initWithName:fileManager:error:
T@"CSDSecureImageTranscoder",&,N,V_imageTranscoder
initWithString:
T@"CSDStatusBarManager",&,N,V_statusBarManager
invokeDidStopIfNecessary:error:
T@"CSDThumperCapabilitiesMonitor",R,N,V_thumperCapabilitiesMonitor
isAccountActive
T@"CSDTransactionManager",R,N
isCarModeActive
T@"CSDUserActivity",&,N,V_handoffActivity
isConversationWithUUIDRelaying:
T@"CSDUserActivityManager",R,N
isEmergencyCallingOnWifiAllowed
T@"CSDUserNotificationController",&,N,V_userNotificationController
isEquivalentToConversationLink:
T@"CSDVoIPApplicationMessage",R,N,V_message
isGuest
T@"CSDVoIPProcessAssertionManager",R,N,V_processAssertionManager
isInputFrequencyMeteringEnabled
T@"CTXPCContexts",C,N,V_activeContexts
isMirageEnabled
T@"CXCall",R,N
isProxy
T@"CXCallDirectoryManager",&,N,V_manager
isRelay
T@"CXCallDirectorySanitizer",R,N,V_callDirectorySanitizer
isScreenEnabled
T@"CXCallFailureContext",&,N,V_failureContext
isUsingBaseband
T@"CXCallSource",&,N,V_backingCallSource
isValidLocalHandle:forProvider:
T@"CXCallSourceManager",R,N,V_callSourceManager
isWiFiAvailable
T@"CXCallUpdate",R,C,N
isWiFiEmergencyCallingAvailable
T@"CXInProcessCallSource",R,N,V_tinCanCallSource
labelID
T@"CXNetworkExtensionMessageControllerHost",R,N,V_networkExtensionMessageHost
localIdentifier
T@"CXProvider",&,N,V_provider
loginID
T@"CoreTelephonyClient",R,N,V_client
machServiceName
T@"DNDEventBehaviorResolutionService",R,N,V_behaviorResolutionService
mapName
T@"FTDeviceSupport",&,N,V_deviceSupport
memberWithTUConversationMember:
T@"IDSAccount",R,N
membersAtIndex:
T@"IDSAccountController",R,N,V_accountController
messageSendTime
T@"IDSDestination",&,N,V_expectedRelayClientDestination
mirageAvailable
T@"IDSDestination",R,N
mockCompanyName
T@"IDSDevice",&,N,V_dialingIDSDevice
mockDateCreated
T@"IDSDevice",&,N,V_remoteDevice
mockKnownCaller
T@"IDSGroupSession",&,N,V_session
mockSOS
T@"IDSService",&,N,V_service
modelIdentifier
T@"IDSSession",R,N,V_session
moments:didFinishRequest:error:
T@"NPSDomainAccessor",&,N,V_domainAccessor
momentsDisabled
T@"NSArray",&,N,V_devices
nearbyTVDevices
T@"NSArray",C,N,V_invitedPushTokens
normalizedValue
T@"NSArray",C,N,V_participantDestinationIDs
T@"NSArray",C,N,V_secondaryThumperAccounts
numberWithLong:
T@"NSArray",C,N,V_supportedMediaTypes
onEmergencyCall
T@"NSArray",R,C,N,V_carrierPhoneNumbers
options
T@"NSData",&,N,V_applicationContext
pairedHostDeviceRouteController
T@"NSData",&,N,V_callInfoBlob
participantData
T@"NSData",&,N,V_data
pendingConversationCleanupTimer
T@"NSData",&,N,V_encryptedData
performDialCall:displayContext:
T@"NSData",&,N,V_mediaBlob
performStartCallAction:forCall:
T@"NSData",&,N,V_mirageHandshakeData
predicateFormat
T@"NSData",&,N,V_protoDTMFKey
preferredBroadcastingAttributes
T@"NSData",&,N,V_sKEBlob
prioritizedSenderIdentitiesType
T@"NSData",C,N,V_acceptPayloadData
processStateChangedWithBundleID
T@"NSData",R,C,N
protoWantsVideo
T@"NSData",R,N
provider:performJoinCallAction:
T@"NSDate",&,N,GdateConnected,V_mockDateConnected
providerContext
T@"NSDate",&,N,V_dateConnected
providersByIdentifierForClient:
T@"NSDate",&,N,V_dateReceivedFirstRemoteFrame
pseudonymsCount
T@"NSDate",&,N,V_dateStartedOutgoing
rejectedMembers
T@"NSDate",R,N
relayCallConferenceDidStartSuccessfullyForIncomingAnsweredCall:
T@"NSDictionary",&,N,V_callStateContext
release
T@"NSDictionary",C,N
remoteParticipantWithIdentifier:updatedAudioPaused:streamToken:
T@"NSDictionary",C,N,V_activeLightweightParticipantDestinationsByIdentifier
removeDelegate:
T@"NSDictionary",C,N,V_audioRouteCollections
representsTransitionFromPending
T@"NSDictionary",C,N,V_providersByIdentifier
requestStartDateByTransactionID
T@"NSDictionary",C,N,V_senderIdentityCapabilitiesStateByUUID
restart
T@"NSDictionary",R,C,N,V_payload
routeController
T@"NSDictionary",R,N
sKEBlob
T@"NSFileManager",&,N,V_fileManager
sendApprovalDisplayPinToDevice:
T@"NSMapTable",&,N,V_delegateToQueue
sendPendingData
T@"NSMapTable",&,N,V_uniqueProxyIdentifierToCallTable
service
T@"NSMapTable",R,N,V_delegateToQueue
serviceSpaceDidBecomeAvailable:
T@"NSMapTable",R,N,V_streamTokensByCSDClient
session:changedBytesOfDataUsed:
T@"NSMutableArray",&,N,V_activeParticipants
session:didUpdateConfiguration:
T@"NSMutableArray",&,N,V_activitySessions
sessionProvider
T@"NSMutableArray",&,N,V_conferenceConnections
sessionsByToken
T@"NSMutableArray",&,N,V_emergencyHandles
setAccountUUID:
T@"NSMutableArray",&,N,V_endpointIDSDestinationURIs
setAttachments:
T@"NSMutableArray",&,N,V_generateDescriptorInfos
setBool:forKey:
T@"NSMutableArray",&,N,V_handoffIdentifiers
setCallChanged:
T@"NSMutableArray",&,N,V_invitedHandles
setCompanyName:
T@"NSMutableArray",&,N,V_links
setContactName:
T@"NSMutableArray",&,N,V_otherInvitedHandles
setConversationGroupUUIDString:
T@"NSMutableArray",&,N,V_pauseDigits
setDeferCommittingTransactions:
T@"NSMutableArray",&,N,V_protoCalls
setDisplayName:
T@"NSMutableArray",&,N,V_pseudonyms
setEndedReason:
T@"NSMutableArray",&,N,V_remoteParticipantHandles
setFaceTimeIDSProviderDelegate:
T@"NSMutableArray",&,N,V_reporters
setFallbackURL:
T@"NSMutableArray",&,N,V_signalHandlerDispatchSources
setFilterBlock:
T@"NSMutableArray",R,N,V_blocksPendingTransportAvailability
setGeneratorID:
T@"NSMutableArray",R,N,V_filters
setHasIsScreenSharingAvailable:
T@"NSMutableArray",R,N,V_pendingPushKitVoIPMessageContexts
setHasProtoSOS:
T@"NSMutableArray",R,N,V_sessionUpdateCompletionQueue
setHasSharePlayProtocolVersion:
T@"NSMutableDictionary",&,N,V_activeLightweightParticipantsByIdentifier
setHasSupportsContinuationOnTV:
T@"NSMutableDictionary",&,N,V_blockToExecuteAfterPendingCoalescingBlocksByIdentifier
setHoldAllowed:
T@"NSMutableDictionary",&,N,V_pendingCompletions
setIsActivated:
T@"NSMutableDictionary",&,N,V_pendingKickedMembersByIdentifier
setLeaveReason:
T@"NSMutableDictionary",&,V_pendingCodesToDevicesForApproval
setLinkManager:
T@"NSMutableDictionary",R,N,V_activeRemoteParticipantsByIdentifier
setLocalParticipantAssociation:
T@"NSMutableDictionary",R,N,V_cachedCallUUIDsToConversationAVMode
setMixingVoiceWithMediaEnabled:
T@"NSMutableDictionary",R,N,V_callUUIDsByConversationUUID
setMockEndpointOnCurrentDevice:
T@"NSMutableDictionary",R,N,V_conversationUUIDsByCallUUID
setMockNeedsManualInCallSounds:
T@"NSMutableDictionary",R,N,V_lastSavedAccountIDByCapability
setMockSubtype:
T@"NSMutableDictionary",R,N,V_mobileCodesToISOCountryCode
setMostRecentBestAppSuggestion:
T@"NSMutableDictionary",R,N,V_mutablePendingConversationsByPseudonym
setPauseDigits:
T@"NSMutableDictionary",R,N,V_mutablePseudonymsByRequestIdentifiers
setPrioritizedSenderIdentities:
T@"NSMutableDictionary",R,N,V_outstandingMessages
setProtoShouldSuppressRingtone:
T@"NSMutableDictionary",R,N,V_pendingCallsToChatUUIDs
setRelayCallingFeaturesEnabled:
T@"NSMutableDictionary",R,N,V_pendingRemovedParticipantsByID
setRemoteVideoPresentationSize:
T@"NSMutableDictionary",R,N,V_pidToProcessHandle
setScaleFactor:
T@"NSMutableDictionary",R,N,V_preferences
setScreenToken:
T@"NSMutableDictionary",R,N,V_recentlyDeletedCallUUIDsByConversationUUID
setServiceName:
T@"NSMutableDictionary",R,N,V_reportingSessionByStreamToken
setSessionUUID:
T@"NSMutableDictionary",R,N,V_requestTimeoutBlockByTransactionID
setShouldSuppressDefaultAction:
T@"NSMutableDictionary",R,N,V_sessionsByToken
setStreamToken:
T@"NSMutableDictionary",R,N,V_virtualParticipantsByPluginName
setSynchronous:
T@"NSMutableOrderedSet",&,N,V_cachedChats
setTuProviders:
T@"NSMutableOrderedSet",R,N,V_mutableChats
setURL:
T@"NSMutableSet",&,N,V_identifiersWaitingForAcknowledgement
setUsesApplicationAudioSession:
T@"NSMutableSet",&,N,V_kickedParticipants
setWiFiAllowed:
T@"NSMutableSet",&,N,V_recentlyLeftParticipantIdentifiers
setWithObjects:
T@"NSMutableSet",R,N,V_chatsPendingUpgrade
sharePlayDiscoverabilityEnabled
T@"NSMutableSet",R,N,V_conversationUUIDsAwaitingActiveAudioSession
shouldForceVerificationFailures
T@"NSMutableSet",R,N,V_conversationUUIDsWaitingForRemoteJoin
shouldOpenInCallServiceForCall:
T@"NSMutableSet",R,N,V_identifiers
siriDisplayName
T@"NSNumber",&,N
spatialPosition
T@"NSNumber",&,N,V_expectedAudioPaused
startCallActionWithDialRequest:
T@"NSNumber",&,N,V_expectedVideoEnabled
startWithError:
T@"NSNumber",&,N,V_mostRecentCompletedOneToOneEnabledValue
stringByAppendingPathExtension:
T@"NSNumber",&,N,V_shouldHandleSecureMicrophoneEvents
subtype
T@"NSNumber",R,C,N
supportsAddCall
T@"NSObject",&,N,V_reportingHierarchyToken
supportsRecents
T@"NSObject<OS_dispatch_queue>",&,N,V_delegateQueue
switchToSpeakerRouteIfNecessary
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
telephonyClient
T@"NSObject<OS_dispatch_semaphore>",&,N,V_uniqueProxyIdentifierToCallTableSemaphore
thumperCallingCapabilitiesState
T@"NSObject<OS_dispatch_source>",&,N,V_timeoutTimer
transportMethod
T@"NSOrderedSet",C,N,SsetPrioritizedTUSenderIdentities:
trigger
T@"NSOrderedSet",R,C,N
tuLabeledHandle
T@"NSSet",&,N,V_availableOutgoingRelayCallerIDs
tu_predicateForConversationLinkDescriptorsWithOriginatorHandle:
T@"NSSet",C,N
uPlusNDowngrade
T@"NSSet",C,N,V_accounts
unenrollDevice:
T@"NSSet",C,N,V_allowedSecondaryDeviceIDs
unknownProvider
T@"NSSet",C,N,V_kickedMembers
updateCallerID:
T@"NSSet",C,N,V_memberIdentifiers
updateStatusBar
T@"NSSet",C,N,V_pendingMemberHandles
upgrade
T@"NSSet",C,N,V_providerIdentifiersForExistingCalls
T@"NSSet",C,N,V_remoteMembers
urlFromResources:withExtension:
T@"NSSet",C,N,V_serverProvidedParticipantIdentifiers
version
T@"NSSet",R,C,N,V_entitledCapabilities
vouchingEnabled
T@"NSString",&,N,V_accountUUIDString
T@"NSString",&,N,V_actionDescription
T@"NSString",&,N,V_activityIdentifier
T@"NSString",&,N,V_audioRouteUniqueIdentifier
T@"NSString",&,N,V_avcIdentifier
T@"NSString",&,N,V_bundleIdentifier
T@"NSString",&,N,V_bundleURLString
T@"NSString",&,N,V_callDirectoryExtensionIdentifier
T@"NSString",&,N,V_callDirectoryLabel
T@"NSString",&,N,V_callDirectoryLocalizedExtensionContainingAppName
T@"NSString",&,N,V_callerNameFromNetwork
T@"NSString",&,N,V_category
T@"NSString",&,N,V_collaborationIdentifier
T@"NSString",&,N,V_companyName
T@"NSString",&,N,V_completedDescription
T@"NSString",&,N,V_contactIdentifier
T@"NSString",&,N,V_contactName
T@"NSString",&,N,V_contextIdentifier
T@"NSString",&,N,V_conversationGroupUUIDString
T@"NSString",&,N,V_conversationID
T@"NSString",&,N,V_conversationProviderIdentifier
T@"NSString",&,N,V_destinationID
T@"NSString",&,N,V_dynamicIdentifier
T@"NSString",&,N,V_fallbackApplicationName
T@"NSString",&,N,V_fallbackURL
T@"NSString",&,N,V_familyName
T@"NSString",&,N,V_generatorID
T@"NSString",&,N,V_givenName
T@"NSString",&,N,V_groupUUIDString
T@"NSString",&,N,V_hardPauseDigits
T@"NSString",&,N,V_highlightIdentifier
T@"NSString",&,N,V_identifier
T@"NSString",&,N,V_identifierUUIDString
T@"NSString",&,N,V_isoCountryCode
T@"NSString",&,N,V_label
T@"NSString",&,N,V_letMeInDelegationHandle
T@"NSString",&,N,V_letMeInDelegationUUID
T@"NSString",&,N,V_linkName
T@"NSString",&,N,V_localSenderIdentityAccountUUIDString
T@"NSString",&,N,V_localSenderIdentityUUIDString
T@"NSString",&,N,V_localizedName
T@"NSString",&,N,V_localizedServiceName
T@"NSString",&,N,V_localizedShortName
T@"NSString",&,N,V_location
T@"NSString",&,N,V_machServiceName
T@"NSString",&,N,V_mapName
T@"NSString",&,N,V_messagesGroupName
T@"NSString",&,N,V_messagesGroupUUIDString
T@"NSString",&,N,V_middleName
T@"NSString",&,N,V_mode
T@"NSString",&,N,V_name
T@"NSString",&,N,V_namePrefix
T@"NSString",&,N,V_nameSuffix
T@"NSString",&,N,V_nickname
T@"NSString",&,N,V_oBSOLETEConferenceIdentifier
T@"NSString",&,N,V_ongoingDescription
T@"NSString",&,N,V_originalRingtoneSoundURLString
T@"NSString",&,N,V_primaryAvcIdentifier
T@"NSString",&,N,V_protoUUID
T@"NSString",&,N,V_protoUpgradeSessionUUID
T@"NSString",&,N,V_providerIdentifier
T@"NSString",&,N,V_pseudonym
T@"NSString",&,N,V_ringtoneSoundURLString
T@"NSString",&,N,V_sourceIdentifier
T@"NSString",&,N,V_subtitle
T@"NSString",&,N,V_suggestedName
T@"NSString",&,N,V_targetContentIdentifier
T@"NSString",&,N,V_title
T@"NSString",&,N,V_tokenPrefixedURI
T@"NSString",&,N,V_uUIDString
T@"NSString",&,N,V_uniqueIdentifier
T@"NSString",&,N,V_uniqueProxyIdentifier
T@"NSString",&,N,V_value
T@"NSString",C,D,N
T@"NSString",C,N
T@"NSString",C,N,GaudioCategory,V_mockAudioCategory
T@"NSString",C,N,GaudioMode,V_mockAudioMode
T@"NSString",C,N,GcallUUID,V_mockCallUUID
T@"NSString",C,N,GcallerNameFromNetwork,V_mockCallerNameFromNetwork
T@"NSString",C,N,GcompanyName,V_mockCompanyName
T@"NSString",C,N,GdisplayName,V_mockDisplayName
T@"NSString",C,N,GlocalizedLabel,V_mockLocalizedLabel
T@"NSString",C,N,GuniqueProxyIdentifier,V_mockUniqueProxyIdentifier
T@"NSString",C,N,V_accountID
T@"NSString",C,N,V_activeIDSDestination
T@"NSString",C,N,V_avcIdentifier
T@"NSString",C,N,V_baseDestinationID
T@"NSString",C,N,V_callerID
T@"NSString",C,N,V_callerNameFromNetwork
T@"NSString",C,N,V_collaborationIdentifier
T@"NSString",C,N,V_currentlyTrackedA2DPRouteIdentifier
T@"NSString",C,N,V_digits
T@"NSString",C,N,V_environment
T@"NSString",C,N,V_identifier
T@"NSString",C,N,V_isoCountryCode
T@"NSString",C,N,V_localThumperDeviceID
T@"NSString",C,N,V_messagesGroupName
T@"NSString",C,N,V_originalPauseDigitsString
T@"NSString",C,N,V_outgoingCallerID
T@"NSString",C,N,V_phoneNumberURI
T@"NSString",C,N,V_primaryDeviceID
T@"NSString",C,N,V_requiredConnectionCapability
T@"NSString",C,V_outgoingPinRequestIdentifier
T@"NSString",R
T@"NSString",R,C
T@"NSString",R,C,N
T@"NSString",R,C,N,V_bundleIdentifier
T@"NSString",R,C,N,V_callerID
T@"NSString",R,C,N,V_destination
T@"NSString",R,C,N,V_emergencyProviderIdentifier
T@"NSString",R,C,N,V_groupID
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_providerIdentifier
T@"NSString",R,C,N,V_pseudonymFeatureID
T@"NSString",R,C,N,V_senderCorrelationIdentifier
T@"NSString",R,N
T@"NSTimer",&,N,V_callDurationUpdateTimer
T@"NSURL",&,N,V_URL
T@"NSURL",R
T@"NSUUID",&,N
T@"NSUUID",&,N,V_clientUUID
T@"NSUUID",&,N,V_conversationGroupUUID
T@"NSUUID",&,N,V_localSenderIdentityAccountUUID
T@"NSUUID",&,N,V_localSenderIdentityUUID
T@"NSUUID",&,N,V_messagesGroupUUID
T@"NSUUID",C,N
T@"NSUUID",C,N,GcallGroupUUID,V_mockCallGroupUUID
T@"NSUUID",C,N,V_callGroupUUID
T@"NSUUID",C,N,V_localSenderIdentityUUID
T@"NSUUID",C,N,V_messagesGroupUUID
T@"NSUUID",C,N,V_upgradeSessionUUID
T@"NSUUID",R,C,N
T@"NSUUID",R,C,N,V_uuid
T@"NSUUID",R,N
T@"NSUUID",R,N,V_UUID
T@"NSUUID",R,N,V_groupUUID
T@"NSUUID",R,N,V_temporaryGroupUUID
T@"NSUUID",R,N,V_uuid
T@"NSUserActivity",&,N,V_userActivity
T@"NSXPCConnection",R,N
T@"NSXPCInterface",&,N,V_exportedInterface
T@"NSXPCInterface",&,N,V_remoteObjectInterface
T@"NSXPCListener",&,N,V_xpcListener
T@"NSXPCListener",R,N,V_xpcListener
T@"RBSAssertion",&,N,V_processAssertion
T@"RBSProcessHandle",&,N,V_processHandle
T@"RTCSecureHierarchyToken",&,N,V_reportingHierarchyToken
T@"RTTTelephonyUtilities",R,N
T@"STCallingStatusDomainCallDescriptor",&,N,V_resolvedDescriptor
T@"STCallingStatusDomainCallDescriptor",R,N
T@"STCallingStatusDomainPublisher",R,N,V_systemStatusPublisher
T@"TUCall",R,&,N
T@"TUCall",R,N
T@"TUCallCapabilitiesState",&,N,V_pairedHostDeviceState
T@"TUCallCapabilitiesState",&,N,V_state
T@"TUCallCenter",R,N
T@"TUCallCenter",R,N,V_callCenter
T@"TUCallCenter",W,N,V_callCenter
T@"TUCallDisplayContext",&,N
T@"TUCallDisplayContext",C,N,GdisplayContext,V_mockDisplayContext
T@"TUCallDisplayContext",C,N,V_displayContext
T@"TUCallDisplayContext",R,N
T@"TUCallModel",&,N
T@"TUCallProvider",&,N
T@"TUCallProvider",&,N,V_provider
T@"TUCallProvider",C,N,Gprovider,V_mockProvider
T@"TUCallProvider",R,C,N
T@"TUCallProvider",R,N
T@"TUCallProviderManager",&,N,V_callProviderManager
T@"TUCallProviderManager",R,N,V_callProviderManager
T@"TUCallScreenShareAttributes",&,N,GscreenShareAttributes,V_mockScreenShareAttributes
T@"TUCallScreenShareAttributes",N,V_screenShareAttributes
T@"TUCallScreenShareAttributes",R,N
T@"TUCallServicesClientCapabilities",&,N,V_capabilities
T@"TUConversation",R,C,N
T@"TUConversation",R,N
T@"TUConversationActivity",C,N,V_activity
T@"TUConversationActivity",R,N
T@"TUConversationActivityContext",R,N
T@"TUConversationActivitySession",&,N,V_stagedActivitySession
T@"TUConversationActivitySession",R,N
T@"TUConversationHandoffEligibility",C,N,V_handoffEligibility
T@"TUConversationInvitationPreference",R,N
T@"TUConversationLink",&,N,V_link
T@"TUConversationLink",R,C,N
T@"TUConversationLink",R,N
T@"TUConversationLinkDescriptor",R,N
T@"TUConversationManager",R,N,V_conversationManager
T@"TUConversationMember",&,N,V_localLightweightSecondaryMember
T@"TUConversationMember",R,N
T@"TUConversationMember",R,N,V_localMember
T@"TUConversationParticipant",R,C,N
T@"TUConversationParticipant",R,N
T@"TUConversationParticipantAssociation",C,N,V_association
T@"TUConversationParticipantAssociation",C,N,V_localParticipantAssociation
T@"TUConversationParticipantAssociation",C,N,V_participantAssociation
T@"TUConversationParticipantAssociation",R,C,N
T@"TUConversationParticipantCapabilities",C,N,V_capabilities
T@"TUConversationProvider",&,N,V_provider
T@"TUConversationProvider",R,C,N,V_tuProvider
T@"TUConversationReport",R,C,N
T@"TUConversationReport",R,N,V_report
T@"TUDTMFSoundPlayer",R,N,V_dtmfSoundPlayer
T@"TUDelegateController",R,N,V_delegateController
T@"TUDelegateController<CSDCallHistoryManagerDelegate>",R,N,V_delegateController
T@"TUDialRequest",&,N,V_dialRequest
T@"TUDialRequest",R,N
T@"TUDynamicCallDisplayContext",&,N,V_dynamicDisplayContext
T@"TUFeatureFlags",R,N,V_featureFlags
T@"TUHandle",&,N
T@"TUHandle",&,N,Ghandle,V_mockHandle
T@"TUHandle",&,N,V_approverHandle
T@"TUHandle",&,N,V_handle
T@"TUHandle",R,C,N,V_handle
T@"TUHandle",R,N
T@"TUHandle",R,N,V_handle
T@"TUHandle",R,N,V_initiator
T@"TUHardwareControlsBroadcaster",R,N,V_hardwareControlsBroadcaster
T@"TULabeledHandle",R,N
T@"TUParticipant",C,N,V_activeRemoteParticipant
T@"TURouteController",R,N,V_routeController
T@"TUSenderIdentity",R,N
T@"TUUserConfiguration",&,N,V_userConfiguration
T@"TUUserConfiguration",R,N,V_userConfiguration
T@"TUVideoDeviceController",R,N,V_videoDeviceController
T@"TUVoucher",R,N
T@"UABestAppSuggestion",&,N,V_mostRecentBestAppSuggestion
T@"UABestAppSuggestionManager",&,N,V_bestAppSuggestionManager
T@"VCCapabilities",&,N,V_capabilities
T@"VCCapabilities",R,C,N
T@,&,N,V_asynchronousExportedObjectProxy
T@,&,N,V_exportedObject
T@,&,N,V_synchronousExportedObjectProxy
T@,R,N
T@,R,N,V_exportedObject
T@?,C,N,V_activeLocalHandles
T@?,C,N,V_activeLocalHandlesForProvider
T@?,C,N,V_allowsScreenSharingBlock
T@?,C,N,V_avcSessionCreationBlock
T@?,C,N,V_avcSessionParticipantCreationBlock
T@?,C,N,V_beginListeningBlock
T@?,C,N,V_clientInvalidationHandler
T@?,C,N,V_completion
T@?,C,N,V_completionHandler
T@?,C,N,V_conferenceCreationBlock
T@?,C,N,V_conferenceProviderCreationBlock
T@?,C,N,V_conversationCreationBlock
T@?,C,N,V_didPrepareHandler
T@?,C,N,V_didStartHandler
T@?,C,N,V_didStopHandler
T@?,C,N,V_dndAllowsCall
T@?,C,N,V_downgradeToOneToOneAfterDelayBlock
T@?,C,N,V_eventBlock
T@?,C,N,V_facetimeIDSServiceGenerator
T@?,C,N,V_groupSessionProviderCreationBlock
T@?,C,N,V_hasBeenUnlockedBlock
T@?,C,N,V_imAccountForActionBlock
T@?,C,N,V_incomingSessionProviderGenerator
T@?,C,N,V_interruptionHandler
T@?,C,N,V_invalidationHandler
T@?,C,N,V_inviteCompletion
T@?,C,N,V_isAccountActive
T@?,C,N,V_localCallerID
T@?,C,N,V_localCallerIDForProvider
T@?,C,N,V_lockdownModeEnabled
T@?,C,N,V_mirageHandshakeBlobCreationBlock
T@?,C,N,V_momentsGenerator
T@?,C,N,V_outgoingSessionProviderGenerator
T@?,C,N,V_participantRefreshBlock
T@?,C,N,V_providerDidBegin
T@?,C,N,V_proximityChangeHandler
T@?,C,N,V_sendDataBlock
T@?,C,N,V_setUpBreakBeforeMakeTimeout
T@?,C,N,V_shouldFilterCall
T@?,C,N,V_shouldPreferRelayOverDirectSecondaryCalling
T@?,C,N,V_supportsPrimaryCalling
T@?,C,N,V_timeoutBlock
T@?,C,N,V_voiceOverRunningDeterminationHandler
T@?,C,N,V_voiceOverTouchShouldRouteToSpeakerDeterminationHandler
T@?,R,C,N,V_captureSessionCreationBlock
T@?,R,C,N,V_raiseToEarGestureHandler
TB,N
TB,N,GareCapabilitiesValid,V_capabilitiesValid
TB,N,GhasBeenRedirected,V_mockHasBeenRedirected
TB,N,GhasJoined,V_hasJoined
TB,N,GhasSentInvitation,V_mockHasSentInvitation
TB,N,GhasStartedOutgoing,V_mockHasStartedOutgoing
TB,N,GisAudioDisabled,V_audioDisabled
TB,N,GisAudioEnabled
TB,N,GisAudioEnabled,V_audioEnabled
TB,N,GisAudioMutedForHoldMusic,V_audioMutedForHoldMusic
TB,N,GisAudioPaused
TB,N,GisAudioPaused,V_audioPaused
TB,N,GisAudioReady
TB,N,GisAudioSessionActive,V_audioSessionActive
TB,N,GisBlocked,V_mockBlocked
TB,N,GisCSCallingAvailable,V_csCallingAvailable
TB,N,GisCaller
TB,N,GisCaller,V_caller
TB,N,GisCarModeActive,V_carModeActive
TB,N,GisCarPlayDeviceConnected,V_carPlayDeviceConnected
TB,N,GisCellularDataAllowed
TB,N,GisCellularDataPreferred
TB,N,GisConferenced
TB,N,GisConferenced,V_mockConferenced
TB,N,GisConnected,V_mockConnected
TB,N,GisConnecting,V_mockConnecting
TB,N,GisConversation,V_mockConversation
TB,N,GisCovered,V_covered
TB,N,GisCurrentlyPicked
TB,N,GisDetectingRaiseToAnswer
TB,N,GisEmergency
TB,N,GisEmergency,V_emergency
TB,N,GisEmergency,V_mockEmergency
TB,N,GisEmergencyCallbackModeEnabled,V_emergencyCallbackModeEnabled
TB,N,GisEnabled,V_enabled
TB,N,GisEndpointOnCurrentDevice,V_endpointOnCurrentDevice
TB,N,GisEndpointOnCurrentDevice,V_mockEndpointOnCurrentDevice
TB,N,GisExpectedEndpointOnMessagingDevice
TB,N,GisFailureExpected
TB,N,GisFailureExpected,V_failureExpected
TB,N,GisFailureExpected,V_mockFailureExpected
TB,N,GisFromStorage,V_fromStorage
TB,N,GisGFTDowngradeToOneToOneAvailable,V_gftDowngradeToOneToOneAvailable
TB,N,GisGuest
TB,N,GisGuestModeEnabled,V_guestModeEnabled
TB,N,GisHardPause,V_hardPause
TB,N,GisHeld,V_held
TB,N,GisHost,V_host
TB,N,GisHostedOnCurrentDevice,V_mockHostedOnCurrentDevice
TB,N,GisIMDaemonConnected,V_IMDaemonConnected
TB,N,GisInitiator,V_initiator
TB,N,GisInputFrequencyMeteringEnabled
TB,N,GisInterfaceOrientationPortrait,V_interfaceOrientationPortrait
TB,N,GisJoined,V_joined
TB,N,GisKnownCaller,V_mockKnownCaller
TB,N,GisLightweight,V_lightweight
TB,N,GisLocalAccountHandle,V_localAccountHandle
TB,N,GisLocalClientActive,V_localClientActive
TB,N,GisMicrophoneMuted
TB,N,GisMirageAvailable,V_mirageAvailable
TB,N,GisMomentsAvailable
TB,N,GisMomentsAvailable,V_momentsAvailable
TB,N,GisMuted
TB,N,GisMuted,V_muted
TB,N,GisOnEmergencyCall,V_onEmergencyCall
TB,N,GisOneToOneModeEnabled
TB,N,GisOneToOneModeEnabled,V_oneToOneModeEnabled
TB,N,GisOutgoing
TB,N,GisOutgoing,V_outgoing
TB,N,GisOutputFrequencyMeteringEnabled
TB,N,GisPTT,V_mockPTT
TB,N,GisPreparedToStop,V_preparedToStop
TB,N,GisProximitySensorCovered,V_proximitySensorCovered
TB,N,GisRelaying
TB,N,GisRelaying,V_relaying
TB,N,GisRemoteAudioEnabled,V_remoteAudioEnabled
TB,N,GisRemoteMomentsAvailable
TB,N,GisRemoteMomentsAvailable,V_remoteMomentsAvailable
TB,N,GisRemoteUplinkMuted
TB,N,GisRemoteUplinkMuted,V_remoteUplinkMuted
TB,N,GisRemoteVideoEnabled,V_remoteVideoEnabled
TB,N,GisRemoteVideoPaused,V_remoteVideoPaused
TB,N,GisSOS,SsetSOS:
TB,N,GisSOS,SsetSOS:,V_mockSOS
TB,N,GisSOS,SsetSOS:,V_sos
TB,N,GisScreenEnabled,V_screenEnabled
TB,N,GisSendingAudio
TB,N,GisSendingAudioData
TB,N,GisSendingVideo
TB,N,GisSharingScreen,V_mockSharingScreen
TB,N,GisSynchronous,V_synchronous
TB,N,GisThirdPartyVideo,V_mockIsThirdPartyVideo
TB,N,GisUPlusNDowngradeAvailable,V_uPlusNDowngradeAvailable
TB,N,GisUPlusOneScreenShareAvailable,V_uPlusOneScrenShareAvailable
TB,N,GisUnderlyingUplinkMuted,V_underlyingUplinkMuted
TB,N,GisUpgrade,V_upgrade
TB,N,GisUplinkMuted
TB,N,GisUplinkMuted,SsetUplinkMuted:,V_mockUplinkMuted
TB,N,GisUplinkMuted,V_uplinkMuted
TB,N,GisUsingBaseband,V_mockUsingBaseband
TB,N,GisUsingBaseband,V_usingBaseband
TB,N,GisVideo
TB,N,GisVideo,V_mockIsVideo
TB,N,GisVideo,V_video
TB,N,GisVideoEnabled
TB,N,GisVideoEnabled,V_videoEnabled
TB,N,GisVideoPaused
TB,N,GisVideoPaused,V_mockIsVideoPaused
TB,N,GisVideoPaused,V_videoPaused
TB,N,GisVoLTECallingAvailable,V_voLTECallingAvailable
TB,N,GisVoicemail
TB,N,GisVoicemail,V_mockVoicemail
TB,N,GisVoicemail,V_voicemail
TB,N,GisWiFiAllowed
TB,N,GisWiFiCallingAvailable,V_wiFiCallingAvailable
TB,N,GisWiFiEmergencyCallingAllowed,V_wiFiEmergencyCallingAllowed
TB,N,GisWiFiEmergencyCallingAvailable,V_wiFiEmergencyCallingAvailable
TB,N,GisWindowed
TB,N,GneedsManualInCallSounds,V_mockNeedsManualInCallSounds
TB,N,GprefersExclusiveAccessToCellularNetwork,V_mockPrefersExclusiveAccessToCellularNetwork
TB,N,GshouldSuppressInCallUI,V_mockShouldSuppressInCallUI
TB,N,GsupportsTTYWithVoice,V_mockSupportsTTYWithVoice
TB,N,GuplinkWasExplicitlyMuted,V_mockUplinkWasExplicitlyMuted
TB,N,V_addCallAllowed
TB,N,V_avcSessionInProgress
TB,N,V_cannotRelayAudioOrVideo
TB,N,V_capturingLocalVideo
TB,N,V_deferCommittingTransactions
TB,N,V_endAndAnswerAllowed
TB,N,V_faceTimeAudioAvailable
TB,N,V_faceTimeIDStatusRefreshed
TB,N,V_faceTimeVideoAvailable
TB,N,V_forceExpanseEnabled
TB,N,V_guestModeEnabled
TB,N,V_hardPauseAvailable
TB,N,V_hasAudioFinished
TB,N,V_hasAudioInterruption
TB,N,V_hasBeenUnlocked
TB,N,V_hasCalledStop
TB,N,V_hasCleanedUp
TB,N,V_hasConnected
TB,N,V_hasReceivedAccept
TB,N,V_hasReceivedFirstRemoteFrame
TB,N,V_hasReceivedLetMeInRequest
TB,N,V_hasSentInvitation
TB,N,V_hasStarted
TB,N,V_hasStartedConnecting
TB,N,V_holdAllowed
TB,N,V_holdAndAnswerAllowed
TB,N,V_ignoreLMIRequests
TB,N,V_isActivated
TB,N,V_isGFTDowngradeToOneToOneAvailable
TB,N,V_isGondolaCallingAvailable
TB,N,V_isKnownCaller
TB,N,V_isLetMeInApproved
TB,N,V_isLightweight
TB,N,V_isMirageAvailable
TB,N,V_isMomentsAvailable
TB,N,V_isSendingAudio
TB,N,V_isSystemActivity
TB,N,V_isUPlusNDowngradeAvailable
TB,N,V_isUPlusOneScreenSharingAvailable
TB,N,V_joinedFromLink
TB,N,V_locallyCreated
TB,N,V_mayRequireBreakBeforeMake
TB,N,V_mergeable
TB,N,V_mockSupportsEmergencyFallback
TB,N,V_needsManualInCallSounds
TB,N,V_oBSOLETEProtoMomentsAvailable
TB,N,V_protoCannotBeAnswered
TB,N,V_protoCannotRelayAudioOrVideoOnPairedDevice
TB,N,V_protoConferenced
TB,N,V_protoCurrentlyPicked
TB,N,V_protoEmergency
TB,N,V_protoExpectedEndpointOnMessagingDevice
TB,N,V_protoFailureExpected
TB,N,V_protoGuest
TB,N,V_protoHasSentInvitation
TB,N,V_protoMomentsV2Available
TB,N,V_protoNeedsManualInCallSounds
TB,N,V_protoOutgoing
TB,N,V_protoRemoteUplinkMuted
TB,N,V_protoSenderMuteUplink
TB,N,V_protoShouldSuppressInCallUI
TB,N,V_protoShouldSuppressRingtone
TB,N,V_protoSupportsEmergencyFallback
TB,N,V_protoSupportsRelay
TB,N,V_protoSupportsTTYWithVoice
TB,N,V_protoUplinkMuted
TB,N,V_protoVideo
TB,N,V_protoVoicemail
TB,N,V_protoWantsHoldMusic
TB,N,V_protoWantsVideo
TB,N,V_receivedSuccessfulDidStart
TB,N,V_representsTransitionFromPending
TB,N,V_sendToVoicemailAllowed
TB,N,V_sendingVideo
TB,N,V_shouldAcceptDateConnectedProviderUpdates
TB,N,V_shouldAssociateScene
TB,N,V_shouldStartAudioPaused
TB,N,V_shouldStartVideoPaused
TB,N,V_shouldSuppressInCallUI
TB,N,V_supportsAddCall
TB,N,V_supportsAudioAndVideo
TB,N,V_supportsAudioOnly
TB,N,V_supportsDTMF
TB,N,V_supportsEmergency
TB,N,V_supportsEmergencyFallback
TB,N,V_supportsGrouping
TB,N,V_supportsHolding
TB,N,V_supportsLeaveContext
TB,N,V_supportsMessagesGroupProviding
TB,N,V_supportsRecents
TB,N,V_supportsSendingToVoicemail
TB,N,V_supportsTTYWithVoice
TB,N,V_supportsUnambiguousMultiPartyState
TB,N,V_supportsUngrouping
TB,N,V_supportsVoicemail
TB,N,V_swappable
TB,N,V_takingCallsPrivateAllowed
TB,N,V_telephonyCapableDeviceExists
TB,N,V_thumperCallingAllowedOnDefaultPairedDeviceDefault
TB,N,V_video
TB,N,V_videoEnabled
TB,N,V_wantsStagingArea
TB,R
TB,R,N
TB,R,N,Gcsd_isTelephony
TB,R,N,Gcsd_isThumper
TB,R,N,Gcsd_isUnknown
TB,R,N,GisAVLess
TB,R,N,GisAVLess,V_avLess
TB,R,N,GisAirTunesRouteAvailable
TB,R,N,GisAnyBluetoothHeadphoneRouteAvailableForAnyCall
TB,R,N,GisAnyVehicleRouteAvailableForAnyCall
TB,R,N,GisAudioAccessoryDevice
TB,R,N,GisAudioReady
TB,R,N,GisAutomaticUpgradingEnabled
TB,R,N,GisBluetoothRouteAvailable
TB,R,N,GisCaptioningEnable,V_captioningEnabled
TB,R,N,GisCarAudioRouteAvailable
TB,R,N,GisCarModeActive
TB,R,N,GisCellularDataAllowed
TB,R,N,GisConnected
TB,R,N,GisCovered
TB,R,N,GisDeviceInAltMode
TB,R,N,GisDevicePasscodeLocked
TB,R,N,GisDeviceSupported
TB,R,N,GisEligibleForCall
TB,R,N,GisEligibleRouteAvailable
TB,R,N,GisEmergencyCallbackModeEnabled
TB,R,N,GisEmergencyCallbackPossible
TB,R,N,GisEnabled
TB,R,N,GisExpanseConduitProxyEnabled
TB,R,N,GisExpanseProvider,V_expanseProvider
TB,R,N,GisFaceTimeAudioAvailable
TB,R,N,GisFaceTimePhotosAvailable
TB,R,N,GisFaceTimeVideoAvailable
TB,R,N,GisGFTDowngradeToOneToOneAvailable
TB,R,N,GisGuestModeSupported
TB,R,N,GisInEarAudioRouteAvailable
TB,R,N,GisLoaded
TB,R,N,GisLocallyCreated,V_locallyCreated
TB,R,N,GisMirageEnabled
TB,R,N,GisModernGFTEnabled
TB,R,N,GisMomentsAvailable
TB,R,N,GisMomentsDisabled
TB,R,N,GisOneToOneHandoffOngoing
TB,R,N,GisOneToOneModeEnabled,V_oneToOneModeEnabled
TB,R,N,GisOutgoing
TB,R,N,GisOutgoing,V_outgoing
TB,R,N,GisPairedDevice
TB,R,N,GisProcessSuspended
TB,R,N,GisProximitySensorEnabled
TB,R,N,GisQuickRelaySupported
TB,R,N,GisReceiverRouteAvailable
TB,R,N,GisRegionBlocked
TB,R,N,GisRelayCallingGuaranteed
TB,R,N,GisRemote
TB,R,N,GisRemoteMomentsAvailable
TB,R,N,GisRemoteVideoPaused
TB,R,N,GisScreenEnabled
TB,R,N,GisScreenSharingAvailable
TB,R,N,GisSharePlayAvailable
TB,R,N,GisSharePlayVersionCheckEnabled
TB,R,N,GisSignedIntoiCloud
TB,R,N,GisUPlusNDowngradeAvailable
TB,R,N,GisVideo,V_video
TB,R,N,GisWiFiAllowed
TB,R,N,GisWiFiAvailable
TB,R,N,GisWirelessHeadsetRouteAvailable
TB,R,N,V_applicationShouldPostIncomingCall
TB,R,N,V_ignoresBluetoothDeviceUID
TB,R,N,V_isLightweightMember
TB,R,N,V_isOneToOneModeEnabled
TB,R,N,V_mediaPlaybackOnExternalDevice
TB,R,N,V_mixesVoiceWithMedia
TB,R,N,V_shouldOverrideNetworkAsAvailable
TB,R,N,V_shouldUseIDSDemuxer
TB,R,N,V_supportsLinks
TB,R,N,V_supportsSharePlay
TB,R,N,V_supportsVideo
TC,N
TC,N,V_captureCapabilities
TC,R,N
TI,N
TI,N,V_ambiguityState
TI,N,V_disconnectedReason
TI,N,V_generatorVersion
TI,N,V_hardPauseState
TI,N,V_maximumCallGroups
TI,N,V_notificationStyles
TI,N,V_options
TI,N,V_preferredBroadcastingAttributes
TI,N,V_protoDisconnectedReason
TI,N,V_protoOriginatingUIType
TI,N,V_protoPriority
TI,N,V_protoProtocolVersion
TI,N,V_protoService
TI,N,V_protoSoundRegion
TI,N,V_protoStatus
TI,N,V_protoTTYType
TI,N,V_remoteVideoPresentationState
TI,N,V_version
TI,R,N
TQ,N,GinitialLinkType,V_mockInitialLinkType
TQ,N,V_audioVideoMode
TQ,N,V_avMode
TQ,N,V_countOfNotificationsReceived
TQ,N,V_generateDescriptorVersionSum
TQ,N,V_identifier
TQ,N,V_initialLinkType
TQ,N,V_kickMemberRetryCount
TQ,N,V_leaveReason
TQ,N,V_lightweightPrimaryParticipantID
TQ,N,V_lightweightRetryCount
TQ,N,V_localParticipantIdentifier
TQ,N,V_primaryIdentifier
TQ,N,V_retryCount
TQ,R
TQ,R,N
TQ,R,N,V_identifier
TQ,R,N,V_initialLinkType
TS,N,V_localParticipantType
TTRBannerEnabled
Td,N
Td,N,GcallDuration,V_mockCallDuration
Td,N,V_closeConnectionTimeout
Td,N,V_connectionTimeout
Td,N,V_creationDateEpochTime
Td,N,V_hostCallCreationTime
Td,N,V_messageSendTime
Td,N,V_prepareToStopTimeout
Td,N,V_protoTimeConnected
Td,N,V_pseudonymExpirationDateEpochTime
Td,N,V_timeout
Td,N,V_timestampAsTimeIntervalSinceReferenceDate
Td,N,V_twoTimeCallthroughInterval
Td,N,V_updatedDateEpochTime
Td,N,V_upgradeTimeout
Td,N,V_uplinkMutedSetTime
Td,R,N
Tf,N,V_systemVolume
Ti,N
Ti,N,GcallRelaySupport,V_mockCallRelaySupport
Ti,N,GcallStatus,V_mockCallStatus
Ti,N,GdisconnectedReason,V_mockDisconnectedReason
Ti,N,Gservice,V_mockService
Ti,N,Gsubtype,V_mockSubtype
Ti,N,GttyType,V_mockTTYType
Ti,N,V_avMode
Ti,N,V_availability
Ti,N,V_callStatus
Ti,N,V_clientsShouldConnectToken
Ti,N,V_deviceType
Ti,N,V_enclosedEncryptedType
Ti,N,V_endedReason
Ti,N,V_handleType
Ti,N,V_leaveReason
Ti,N,V_linkLifetimeScope
Ti,N,V_lockStateNotificationToken
Ti,N,V_originatingUIType
Ti,N,V_proximityDetectionMode
Ti,N,V_receivedMessageType
Ti,N,V_requestActionType
Ti,N,V_requestBlobRecoveryOptions
Ti,N,V_requestCLTMThrottleUncapToken
Ti,N,V_state
Ti,N,V_ttyType
Ti,N,V_type
Ti,N,V_validationSource
Ti,R,N
Ti,R,N,V_originatingUIType
Ti,R,N,V_type
Tq,D,N
Tq,N
Tq,N,GaudioInterruptionProviderType,V_mockAudioInterruptionProviderType
Tq,N,GbytesOfDataUsed,V_mockBytesOfDataUsed
Tq,N,GjunkConfidence,V_mockJunkConfidence
Tq,N,GproviderErrorCode,V_mockProviderErrorCode
Tq,N,GvideoStreamToken,V_mockVideoStreamToken
Tq,N,SsetTURouteDeviceType:
Tq,N,V_audioPriority
Tq,N,V_availableDeviceSlots
Tq,N,V_bluetoothAudioFormat
Tq,N,V_bytesOfDataUsed
Tq,N,V_callID
Tq,N,V_captionsToken
Tq,N,V_currentOrientation
Tq,N,V_endedReason
Tq,N,V_identificationCategory
Tq,N,V_inCallServiceProcessState
Tq,N,V_junkConfidence
Tq,N,V_letMeInRequestState
Tq,N,V_screenToken
Tq,N,V_state
Tq,N,V_streamToken
Tq,N,V_transmissionMode
Tq,N,V_transmissionState
Tq,N,V_videoPriority
Tq,R,N
Tq,R,N,V_streamToken
Tq,R,N,V_transportType
T{CGRect={CGPoint=dd}{CGSize=dd}},N
T{CGSize=dd},N
T{CGSize=dd},N,V_localLandscapeAspectRatio
T{CGSize=dd},N,V_localPortraitAspectRatio
T{CGSize=dd},N,V_remoteVideoPresentationSize
T{os_unfair_lock_s=I},R,N,V_accessorLock
UIBackgroundModes
URIWithPrefixedURI:
URIWithUnprefixedURI:
URLByAppendingPathComponent:
URLByAppendingPathComponent:isDirectory:
URLByAppendingPathExtension:
URLByDeletingLastPathComponent
URLByStandardizingPath
URLForDirectory:inDomain:appropriateForURL:create:error:
URLForResource:withExtension:
URLWithString:
UTF8String
UUID
UUIDString
_FTCopyGzippedData
_FTDecompressData
_FTOptionallyDecompressData
_IMDaemonConnected
_ISOCountryCodeForCall:
_ISOCountryCodeForCallWithUUID:provider:callUpdate:
_URL
_UUID
__imArrayByApplyingBlock:
__imHexString
__imSetFromArray
__swift_objectForKeyedSubscript:
__swift_setObject:forKeyedSubscript:
_accelerometer
_acceptInvitationWithData:alwaysSendData:
_acceptPayloadData
_accessorLock
_account
_accountController
_accountID
_accountStore
_accountUUIDString
_accounts
_accountsController
_accountsMatchForSecondaryCalling
_actionDescription
_actionRequiresReasonableUserIntent:
_activeCallID
_activeIDSDestination
_activeLightweightParticipantDestinationsByIdentifier
_activeLightweightParticipants
_activeLightweightParticipantsByIdentifier
_activeLocalHandles
_activeLocalHandlesForProvider
_activeParticipantDestinationsByIdentifier
_activeParticipants
_activeRemoteParticipant
_activeRemoteParticipants
_activeRemoteParticipantsByIdentifier
_activity
_activityAuthorizationManager
_activityCommunicator
_activityContext
_activityIdentifier
_activityMetadata
_activityQueue
_activitySession
_activitySessionManager
_activitySessions
_addCallToCallHistory:
_addParticipantsWaitingToBeAddedToAVCSession
_addPendingCallToCallHistory:
_addRemoteParticipantToAVCSessionIfPossible:
_addSupplementalActionsForRequestedTransaction:onCallSource:
_addedMembers
_allCalls
_allowMember:
_allowRevertingStateForCompletedTransactionGroup:
_allowedSecondaryDeviceIDs
_allowsScreenSharingBlock
_answerHostedCall:completionHandler:
_answerIncomingCall:withBehavior:
_answerIncomingCallAsConversation:
_anyRoutePassesTest:
_appHasOngoingCall:
_appearsToBeDSID
_applicationContext
_applicationMonitor
_applicationPolicyManager
_applicationShouldPostIncomingCall
_applicationStateMonitor
_apsConnectionForEnvironment:
_assertion
_associatedPseudonym
_association
_associationVoucher
_asynchronousExportedObjectProxy
_audioArbitrationController
_audioController
_audioDisabled
_audioEnabled
_audioMutedForHoldMusic
_audioPaused
_audioPriority
_audioReady
_audioRouteCollectionForCall:
_audioRouteCollections
_audioRoutePolicyManager
_audioRouteUniqueIdentifier
_audioRoutesByParticipantIdentifier
_audioSessionActive
_automaticCarDNDStatus
_availability
_availableDeviceSlots
_availableOutgoingRelayCallerIDs
_avcData
_avcIdentifier
_avcScreenCapture
_avcSession
_avcSessionCreationBlock
_avcSessionInProgress
_avcSessionParticipantCreationBlock
_backingCallSource
_baseDestinationID
_beginListeningBlock
_beginTimeoutForLeavingConversationWithReason:
_behaviorResolutionService
_bestAppSuggestionManager
_block
_blockToExecuteAfterPendingCoalescingBlocksByIdentifier
_blocksPendingTransportAvailability
_bluetoothAudioFormat
_broadcastActivity:withTimeout:shouldPrioritize:
_bundleIdentifier
_bundleIdentifierForCall:
_bundleIdentifierToApplicationState
_bundleIdentifierToVoIPApplication
_bundleURLString
_bytesOfDataUsed
_cachedCallUUIDsToConversationAVMode
_cachedCalls
_cachedChats
_call
_callCenter
_callCenterObserver
_callControllerHost
_callDirectoryExtensionIdentifier
_callDirectoryLabel
_callDirectoryLocalizedExtensionContainingAppName
_callDirectoryManager
_callDirectoryPhoneNumberVariantsForSourceAddress:countryCode:
_callDirectorySanitizer
_callDirectoryStore
_callDurationLimitTimer
_callDurationUpdateTimer
_callFilterBlock
_callFilterController
_callFilterIdentifier
_callGroupUUID
_callGroupsWithBackingCallSource:
_callHistoryChanged:
_callHistoryController
_callHistoryManager
_callHistoryManagerXPCServer
_callHistoryTransactionObjectWithIdentifier:
_callInfoBlob
_callProviderManager
_callProviderManagerXPCServer
_callSourceFetcher
_callSourceManager
_callStateContext
_callStateController
_callStateMonitor
_callStatus
_callUUIDsByConversationUUID
_callUUIDsUpgradedForAVMode
_callWithUUID:
_callWithUUID:backingCallSource:
_callWithUUID:controllableByCallSource:
_callerID
_callerNameFromNetwork
_callsWithUniqueProxyIdentifiers:
_canAddCallToCallHistory:
_cancelInFlightAVCBlobRecoveryIfNecessary
_cancelInvitationWithData:reason:alwaysSendData:
_cancelTimeoutForLeavingConversation
_cannotRelayAudioOrVideo
_capabilities
_capabilitiesValid
_captioningEnabled
_captionsToken
_captureCapabilities
_captureSessionCreationBlock
_captureSessionQueue
_capturingLocalVideo
_carModeActive
_carPlayDeviceConnected
_carrierPhoneNumbers
_category
_chManager
_chatsPendingUpgrade
_checkIfDevicesShouldBeUnenrolled
_cleanCallMediaCache
_cleanUpAllConferenceConnectionsForConference:withError:
_cleanUpConferenceConnection:error:
_cleanUpFromAVCSessionFailure
_clientFileURLByIdentifier
_clientInvalidationHandler
_clientManager
_clientMessagingDelegate
_clientUUID
_clientsByObject
_clientsShouldConnectToken
_closeConnectionTimeout
_cloudCallingDevices
_collaborationIdentifier
_commitUncommittedTransactions
_commonMessagingDelegate
_companyName
_completedDescription
_completion
_completionHandler
_conduit
_conduitXPCServer
_conference
_conferenceConnections
_conferenceConnectionsForConference:
_conferenceCreationBlock
_conferenceProvider
_conferenceProviderCreationBlock
_conferenceTransport:didStopForCall:cleanly:error:
_conferencesAwaitingConnectionClose
_configuration
_connectionEndedHandlerForXPCClient:withCustomBlock:
_connectionTimeout
_contactIdentifier
_contactIdentifiers
_contactLabel
_contactName
_contextDictionaryWithCall:
_contextIdentifier
_conversationCreationBlock
_conversationGroupUUID
_conversationGroupUUIDString
_conversationManager
_conversationManagerHost
_conversationManagerXPCServer
_conversationMessageBytes
_conversationNoticeManger
_conversationProviderForCall:
_conversationProviderManager
_conversationProviderManagerXPCServer
_conversationUUIDs
_conversationUUIDsAwaitingActiveAudioSession
_conversationUUIDsByCallUUID
_conversationUUIDsUpgradedFromAVLess
_conversationUUIDsWaitingForRemoteJoin
_coreTelephonyClient
_countOfNotificationsReceived
_covered
_coveredNotifyObserver
_cpApplicationController
_cpBiomeStreamDonator
_createAPSConnectionForEnvironment:namedDelegatePort:
_createDelayedActionListIfNecessary:
_createSessionToAllDevicesSupportingProvider:
_createSessionToDestinations:
_createSessionToDevices:
_creationDateEpochTime
_csCallingAvailable
_currentDescriptor
_currentOrientation
_currentParticipantPresentationContexts
_currentlyBroadcastedActivity
_currentlyTrackedA2DPRouteIdentifier
_data
_dataSource
_dataSourceToIdentifierToCalls
_dateConnected
_dateCreated
_dateEnded
_dateReceivedFirstRemoteFrame
_dateStartedConnecting
_dateStartedOutgoing
_declineInvitationWithData:alwaysSendData:
_defaultOverrideForDisableDefault:forceDefault:
_defaultPairedDevice
_deferCommittingTransactions
_deferCommittingTransactionsUntilAfterRunningBlock:
_delayedActionsByCallUUID
_delegate
_delegateController
_delegateQueue
_delegateToQueue
_deliverMessageContext:
_deliverPendingNetworkExtensionPayloadsToApplication
_deliverPendingPushKitPayloadsToApplication
_deliverVoIPTokenToApplication
_destination
_destinationID
_destroySession:
_developmentConnection
_deviceExistsThatSupportsRelayCallingWithoutLocalRelayCallingEnabled
_deviceLockObserver
_deviceLockStateObserver
_deviceSupport
_deviceType
_devices
_dial:displayContext:completion:
_dialRequest
_dialingIDSDevice
_didPrepareHandler
_didStartHandler
_disconnectOrPullExistingCallsForCallIfNecessary:
_disconnectedReason
_displaySharePlayUnableToStartWithMessage:
_dndAllowsCall
_doNotDisturbAllowsCallFromSourceAddress:providerIdentifier:
_donateUserIntentForProviderWithIdentifier:
_downgradeToOneToOneAfterDelayBlock
_dtmfSoundPlayer
_dummyPayload
_dynamicDisplayContext
_dynamicIdentifier
_emergency
_emergencyCallbackCapabilities
_emergencyCallbackModeEnabled
_emergencyHandles
_emergencyLabeledHandles
_emergencyProviderIdentifier
_enabled
_enclosedEncryptedType
_encryptedData
_encryptedMessage
_endAndAnswerAllowed
_endCall:
_endChatWithUUID:withEndedReason:
_endMutuallyExclusiveCalls:
_endProxyCallsForConnectingVideoCall
_endTransactionForObjectAfterCallHistoryDatabaseChanges:
_endedError
_endedReason
_endedReasonForDidStopError:error:
_endpointIDSDestinationURIs
_endpointOnCurrentDevice
_entitledCapabilities
_environment
_errorToAVCProviderEndedReason:defaultProviderReason:
_eventBlock
_expanseProvider
_expectedAudioEnabled
_expectedAudioPaused
_expectedScreenEnabled
_expectedVideoEnabled
_expectedVideoPaused
_exportedInterface
_faceTimeAudioAvailability
_faceTimeAudioAvailable
_faceTimeCallSource
_faceTimeConversationProviderDelegate
_faceTimeDemuxerDelegate
_faceTimeIDSProviderDelegate
_faceTimeIDStatusRefreshed
_faceTimeIMAVProviderDelegate
_faceTimeInviteDemuxer
_faceTimeProviderDelegate
_faceTimeVideoAvailability
_faceTimeVideoAvailable
_facetimeIDSServiceGenerator
_failConversation:failureReason:providerEndedReason:
_failureExpected
_fallbackApplicationName
_fallbackURL
_familyName
_featureFlags
_fetchUserActivityWithUUID:completionHandler:
_fileManager
_fileTransferController
_filter:withClient:
_filters
_findOrCreateApplicationWithBundleIdentifier:
_findPendingConversationWithCallUUID:
_firewallManager
_firstUnlockCallbacks
_forceExpanseEnabled
_fromHandle
_fromStorage
_generateDescriptorInfos
_generateDescriptorVersionSum
_generatorDescriptor
_generatorDescriptors
_generatorID
_generatorVersion
_getActivatedLinkWithHandle:updateGroupUUID:updateInvitedHandles:
_gftDowngradeToOneToOneAvailable
_givenName
_groupFaceTimeServiceProviderDelegate
_groupID
_groupSessionProviderCreationBlock
_groupUUID
_groupUUIDString
_guestModeEnabled
_handleActiveCallStatusChangeForHostedCall:
_handleAudioReadyForCall:
_handleAudioSessionInterruptionNotification:
_handleCSDRelayIDSActiveAccountsChanged:
_handleCSDRelayPairedDeviceConnectedNotification:
_handleCallChanged:
_handleCallConnected:
_handleCallConnectedNotification:
_handleCallDisplayContextChangedNotification:
_handleCallDurationTimerFired
_handleCallHasStartedOutgoingChanged:
_handleCallHistoryChanged
_handleCallIsUsingBasebandChangedNotification:
_handleCallMayRequireBreakBeforeMakeChanged:
_handleCallModelChangedNotification:
_handleCallShouldSuppressRingtoneChangedNotification:
_handleCallStartedConnecting:
_handleCallStartedConnectingNotification:
_handleCallStartedOutgoingNotification:
_handleCallStatusChanged:
_handleCallStatusChangedNotification:
_handleCallWantsHoldMusicChanged:
_handleCallWantsHoldMusicChangedNotification:
_handleCarPlayControlEventNotification:
_handleConferenceConnectionDidClose:
_handleConferenceConnectionDidReceiveData:
_handleConferenceConnectionWillClose:
_handleConnectedCallStatusChangeForHostedCall:
_handleConnectingCallStatusChangeForHostedCall:
_handleDeviceFirstUnlockNotification
_handleDisconnectedCallStatusChangeForHostedCall:
_handleDisconnectedCallStatusChangeForVoicemailCall
_handleFaceTimeAvailabilityChangedNotification:
_handleFailureExpectedChangedNotification:
_handleHardPauseStateChangedNotification:
_handleHeldCallStatusChangeForHostedCall:
_handleInvitationSentNotification:
_handleLockStateChanged
_handleMessagingConnectionEndForCalls:withDisconnectedReason:didStartConnecting:
_handleMixesVoiceWithMediaChangedNotification:
_handleNeedsManualInCallSoundsChangedNotification:
_handlePairedDeviceChangedFrom:to:
_handlePreferredRouteChangedNotification:
_handleReceivedResourcesAtDirectoryURL:
_handleReceivedVideoURL:
_handleRelayCallingChanged
_handleResetCallStateNotification:
_handleRetrievedLocalInviteDictionary:forMessage:
_handleRingingCallStatusChangeForHostedCall:
_handleSendingCallStatusChangeForHostedCall:
_handleSupportsEmergencyFallbackChangedNotification:
_handleTUCallSupportsTTYWithVoiceChangedNotification:
_handleTUCallTTYTypeChangedNotification:
_handleType
_handleUpdateRemoteUplinkMutedChangedNotification:
_handoffActivity
_handoffAudioController
_handoffEligibility
_handoffIdentifiers
_hardPause
_hardPauseAvailable
_hardPauseDigits
_hardwareControlsBroadcaster
_has
_hasAudioFinished
_hasAudioInterruption
_hasBeenUnlocked
_hasBeenUnlockedBlock
_hasCalledStop
_hasCleanedUp
_hasConnected
_hasJoined
_hasReceivedAccept
_hasReceivedFirstRemoteFrame
_hasReceivedLetMeInRequest
_hasSentInvitation
_hasStarted
_hasStartedConnecting
_held
_highlightIdentifier
_holdAllowed
_holdAndAnswerAllowed
_host
_hostCallCreationTime
_hostMessagingDelegate
_identificationCategory
_identifier
_identifierUUIDString
_identifiers
_identifiersForCalls:
_identifiersWaitingForAcknowledgement
_identifiersWithPendingCoalescingBlocks
_idsQueryController
_idsService
_idsSession
_ignoreLMIRequests
_ignoresBluetoothDeviceUID
_imAccountForActionBlock
_image
_imageTranscoder
_imageURL
_inCallServiceProcessObserver
_inCallServiceProcessState
_incomingCallFilter
_incomingChatGenerator
_incomingPendingConversationsByGroupUUID
_incomingSessionProviderGenerator
_incrementKillCountForApplication:
_inflightAVCBlobRecoveryBlocksByIdentifier
_initWithTypeIdentifier:suggestedActionType:options:
_initWithUserActivityType:dynamicActivityType:options:
_initialLinkType
_initializeAudioRouteCollections
_initializeAutomaticCarDNDStatusIfNecessary
_initializeLastKnownCallerID
_initializePairedHostDeviceState
_initiator
_interfaceOrientationObserver
_interfaceOrientationPortrait
_interruptionHandler
_invalidationHandler
_invitation
_invitationPreferences
_invitationResolver
_inviteCompletion
_inviteData
_invitedPushTokens
_isAccountActive
_isActivated
_isAnyAudioDevicePreferred
_isApplicationPreventedFromBeingLaunched:
_isAudioAccessoryDevice
_isCTErrorFatal:
_isEmergencyDialRequest:
_isGFTDowngradeToOneToOneAvailable
_isGondolaCallingAvailable
_isKnownCaller
_isLetMeInApproved
_isLightweight
_isLightweightMember
_isMirageAvailable
_isMomentsAvailable
_isMuted
_isNSErrorFatal:
_isOneToOneModeEnabled
_isScreenSharingAvailable
_isSendingAudioData
_isSendingVideoExpected
_isSystemActivity
_isThumperCallingAllowedForCurrentDeviceUsingSenderIdentityCapabilitiesState:
_isUPlusNDowngradeAvailable
_isUPlusOneScreenSharingAvailable
_isWaitingToJoinForConversationUUID:
_isWatchDevice
_keychainItem
_kickMemberRetryCount
_kickedMembers
_kickedParticipants
_label
_lastRebroadcastTime
_launchApplicationDueToActivityCreation:
_launchApplicationForActivityIfNecessary:
_launchApplicationForActivityIfNecessary:shouldForeground:
_launchApplicationsForActivitiesIfNecessary
_launchApplicationsForActivitiesIfNecessary:
_launchInCallApplicationForAnsweringCallIfNecessary:
_launchInCallApplicationForCall:withURL:
_launchInCallApplicationForExistingCall
_launchInCallApplicationForIncomingCallIfNecessary:
_launchInCallApplicationForOutgoingCallIfNecessary:
_launchInCallApplicationForOutgoingCallOnHostIfNecessary
_launchInCallApplicationForOutgoingConversationIfNecessary:
_leaveConversation:
_leaveReason
_letMeInDelegationHandle
_letMeInDelegationUUID
_letMeInKeyAgreement
_letMeInRequestState
_lightweight
_lightweightMembers
_lightweightPrimary
_lightweightPrimaryParticipantID
_lightweightRetryCount
_link
_linkLifetimeScope
_linkManager
_linkName
_links
_linksEnabled
_listenForActivityType:dynamicIdentifier:
_listeningIdentifiersByActivityType
_localAccountHandle
_localCallerID
_localCallerIDForProvider
_localClientActive
_localInviteDictionary
_localLandscapeAspectRatio
_localLightweightSecondaryMember
_localMember
_localParticipantAssociation
_localParticipantIdentifier
_localParticipantType
_localPortraitAspectRatio
_localProviderForCallSource:
_localProvidersByIdentifier
_localRouteController
_localSenderIdentityAccountUUIDString
_localSenderIdentityUUID
_localSenderIdentityUUIDString
_localThumperAccounts
_localThumperDeviceID
_localizedName
_localizedServiceName
_localizedShortName
_location
_lockStateNotificationToken
_lockStateObserver
_lockdownModeEnabled
_machServiceName
_manager
_mapName
_markReadRecentCallsMatchingHandle:
_maximumCallGroups
_maximumCallsPerCallGroup
_mayRequireBreakBeforeMake
_mediaAssetManager
_mediaBlob
_mediaPlaybackOnExternalDevice
_memberHandlesAwaitingInvitesToLink
_memberIdentifiers
_members
_mergeable
_mergedCallUpdate
_message
_messageProxy
_messageSendTime
_messagesGroupName
_messagesGroupUUID
_messagesGroupUUIDString
_metadata
_middleName
_mirageAvailable
_mirageHandshakeBlobCreationBlock
_mirageHandshakeData
_mixesVoiceWithMedia
_mobileCodesToISOCountryCode
_mockAudioCategory
_mockAudioInterruptionActivationStateObserver
_mockAudioInterruptionProviderType
_mockAudioMode
_mockBackingCallSource
_mockBlocked
_mockBytesOfDataUsed
_mockCallDuration
_mockCallGroupUUID
_mockCallRelaySupport
_mockCallUUID
_mockCallerNameFromNetwork
_mockCompanyName
_mockConferenced
_mockConnected
_mockContactIdentifiers
_mockConversation
_mockDateConnected
_mockDateCreated
_mockDisconnectedReason
_mockDisplayContext
_mockDisplayName
_mockEmergency
_mockEndpointOnCurrentDevice
_mockFailureExpected
_mockHandle
_mockHasBeenRedirected
_mockHasSentInvitation
_mockHasStartedOutgoing
_mockHostedOnCurrentDevice
_mockInitialLinkType
_mockIsThirdPartyVideo
_mockIsVideo
_mockIsVideoPaused
_mockJunkConfidence
_mockKnownCaller
_mockLocalizedLabel
_mockMayRequireBreakBeforeMake
_mockNeedsManualInCallSounds
_mockOutgoing
_mockPTT
_mockPrefersExclusiveAccessToCellularNetwork
_mockProvider
_mockProviderContext
_mockProviderErrorCode
_mockSOS
_mockScreenShareAttributes
_mockService
_mockSharingScreen
_mockShouldSuppressInCallUI
_mockSubtype
_mockSupportsEmergencyFallback
_mockSupportsTTYWithVoice
_mockTTYType
_mockUniqueProxyIdentifier
_mockUplinkMuted
_mockUplinkWasExplicitlyMuted
_mockUsingBaseband
_mockVideoStreamToken
_mockVoicemail
_mode
_momentsAvailable
_momentsClient
_momentsController
_momentsGenerator
_mostRecentBestAppSuggestion
_mostRecentCompletedOneToOneEnabledValue
_mutableChats
_mutableConversationsByUUID
_mutableConversationsRequestingUpgrade
_mutablePendingConversationsByPseudonym
_mutablePseudonymsByCallUUID
_mutablePseudonymsByRequestIdentifiers
_mutableSendDataCallbacksByRequestIdentifiers
_muted
_name
_namePrefix
_nameSuffix
_needsManualInCallSounds
_networkExtensionClient
_networkExtensionClientManager
_networkExtensionMessageHost
_nickname
_nonRingingCallExistsOnThisDevice
_noteAction:onHandle:completionHandle:
_notificationStyles
_notifyCLTMOfIncomingCall
_nsExtensionManager
_numberForKey:
_oBSOLETEConferenceIdentifier
_oBSOLETEProtoMomentsAvailable
_observeSignal:usingHandler:
_observerToQueue
_onEmergencyCall
_oneToOneModeEnabled
_ongoingDescription
_openTransactions
_options
_orientationMonitor
_originalPauseDigitsString
_originatingUIType
_originatorHandle
_otherInvitedHandles
_otherUniqueProxyIdentifiers
_outgoing
_outgoingCallerID
_outgoingChatGenerator
_outgoingPinRequestIdentifier
_outgoingSessionProviderGenerator
_outstandingMessages
_pairedDevice
_pairedDeviceMessenger
_pairedHostDeviceProvidersByIdentifier
_pairedHostDeviceRouteController
_pairedHostDeviceState
_parsePauseDigitsFromDestinationID:
_participantAssociation
_participantDestinationIDs
_participantRefreshBlock
_participantUpdateSanitizer
_pauseDigits
_pauseDigitsQueue
_payload
_pendingAllowedMembers
_pendingCallsToChatUUIDs
_pendingCodesToDevicesForApproval
_pendingCompletions
_pendingConversationCleanupTimer
_pendingConversationParticipantsByIdentifier
_pendingData
_pendingKickedMembersByIdentifier
_pendingMemberHandles
_pendingMembershipTracker
_pendingNetworkExtensionMessageContexts
_pendingPulledCallContexts
_pendingPushKitVoIPMessageContexts
_performBlock:onClients:
_performBlock:onClients:coalescedByIdentifier:
_performDelegateCallback:
_performRequestedTransaction:onCallSource:
_persistenceController
_phoneticRepresentation
_photoRequestDurations
_photoRequestFailureCount
_photoRequestSuccessCount
_pidToProcessHandle
_pidToProviderIdentifiers
_pinExchangeDelegate
_postClientNotificationName:forCall:userInfo:
_postDidCloseNotificationForConference:
_postDidCloseNotificationForConferenceIfNecessary:
_postNotificationName:
_powerAssertionManager
_preferences
_preferredBroadcastingAttributes
_prepareConferenceForConferenceConnection:remoteInviteDictionary:
_prepareToStopTimeout
_primaryAvcIdentifier
_primaryDeviceID
_primaryHandle
_primaryIdentifier
_primaryThumperAccountRequiringAvailableDeviceSlots
_primaryThumperAccountRequiringMatchingCallerID
_primaryThumperAccountRequiringMatchingCallerID:requiringAvailableDeviceSlots:
_prioritizedSenderIdentities
_privateKey
_processAssertion
_processAssertionManager
_processAssertions
_processBundleIdentifier
_processCompletedCallAction:forCall:allowRevertingState:
_processDelayedActionList:provider:
_processHandle
_processIdentifier
_processName
_processObserver
_processRequestedTransaction:fromCallSource:completion:
_productionConnection
_protoCallCapabilitiesState
_protoCallModelState
_protoCalls
_protoCannotBeAnswered
_protoCannotRelayAudioOrVideoOnPairedDevice
_protoConferenced
_protoCurrentlyPicked
_protoDTMFKey
_protoDisconnectedReason
_protoDisplayContext
_protoExpectedEndpointOnMessagingDevice
_protoFailureExpected
_protoGuest
_protoHasSentInvitation
_protoMomentsV2Available
_protoNeedsManualInCallSounds
_protoOriginatingUIType
_protoOutgoing
_protoPersonNameComponents
_protoPriority
_protoProtocolVersion
_protoProvider
_protoRemoteUplinkMuted
_protoSOS
_protoSenderMuteUplink
_protoService
_protoShouldSuppressInCallUI
_protoShouldSuppressRingtone
_protoSoundRegion
_protoStatus
_protoSupportedHandleTypes
_protoSupportsRelay
_protoSupportsTTYWithVoice
_protoTTYType
_protoTimeConnected
_protoUUID
_protoUpgradeSessionUUID
_protoUplinkMuted
_protoVideo
_protoWantsHoldMusic
_protoWantsVideo
_provider
_providerCallDataSource
_providerCallDelegate
_providerDidBegin
_providerDisplayMonitor
_providerForCallSource:
_providerIdentifier
_providerIdentifierToProvider
_providerIdentifiersForExistingCalls
_providerManager
_providers
_providersByIdentifier
_providersByIdentifierByFilteringForRemoteClientsFromProvidersByIdentifier:
_providersForPreferenceKey:
_proximityChangeHandler
_proximityController
_proximityDetectionMode
_proximitySensorCovered
_proximitySensorObserver
_pruneRemoteParticipantsIfNecessary
_pruneUninstalledAppPushTopics
_pruneUninstalledAppPushTopicsForConnection:
_pseudonym
_pseudonymExpirationDateEpochTime
_pseudonymFeatureID
_pseudonyms
_publicKey
_pushCallToAlternateDestinationIfNecessary:
_pushKitClient
_pushKitClientManager
_queue
_raiseToAnswerController
_raiseToEarGestureHandler
_raiseToEarGestureManager
_rebroadcastTimeThreshold
_receivedInvitationAccept
_receivedMessageType
_receivedSuccessfulDidStart
_recentlyDeletedCallUUIDsByConversationUUID
_recentlyLeftParticipantIdentifiers
_recentsController
_refreshFaceTimeIDSStatusIfNecessary
_refreshHasBeenUnlocked
_registerCallBackgroundedEvent
_registerCallForegroundedEventForCall:
_registerCallStopEvent
_registerEventWithContext:status:
_registerForPushTokenWithType:client:
_registerNetworkExtensionApplicationWithBundleIdentifier:client:
_registerPluginsIfNecessary
_registerPushApplicationWithBundleIdentifier:client:environment:pushType:
_registerUserActivityType:dynamicActivityType:
_rejectedMembers
_relayCallDataSource
_relayCallDelegate
_relayCallWithUUID:
_relayCallingDisabledForDeviceIDDefault
_relayCallingEnabledDefault
_relayCapableDeviceExists
_relayClientController
_relayClientTransport
_relayCommonController
_relayDelegate
_relayHostController
_relayInvitationTimeoutForTimeout:
_relayMessagingController
_relayService
_relaying
_remoteAudioEnabled
_remoteDestination
_remoteDevice
_remoteFromID
_remoteInviteDictionary
_remoteMemberHandles
_remoteMembers
_remoteMomentsAvailable
_remoteObjectInterface
_remoteParticipantHandles
_remoteProtocolVersionNumber
_remoteUplinkMuted
_remoteUplinkMutedSetTime
_remoteVideoEnabled
_remoteVideoPaused
_remoteVideoPresentationSize
_remoteVideoPresentationState
_removeAllApplicationsFromKillCountsDictionary
_removeApplicationFromKillCountsDictionary:
_removePendingConversationWithPseudonym:
_removeTopic:fromConnection:
_reportConversationFailedWithProviderEndedReason:
_reportData
_reporters
_reportingController
_reportingHierarchySubToken
_reportingHierarchyToken
_reportingSessionByStreamToken
_representsTransitionFromPending
_requestAVCBlobsIfNecessary
_requestActionType
_requestBlobRecoveryOptions
_requestCLTMThrottleUncapToken
_requestCallStateFromHost
_requestPendingInvites
_requestStartDateByTransactionID
_requestTimeoutBlockByTransactionID
_requiredConnectionCapability
_requiresInviteDictionary
_resetCache
_resolvedDescriptor
_resolver
_retryCount
_retryReliableMessageWithIdentifierIfNecessary:message:timeout:maximumRetryAttempts:
_ringingTimerForCallWithIdentifier:
_ringtoneSoundURLString
_ringtonesSandboxExtensionDirectory
_route
_routeController
_routeManager
_routePassingTest:
_runCallbackIfNecessaryForMessage:
_sKEBlob
_saveLastKnownFaceTimeCallerID
_saveLivePhotoWithPhotoURL:videoURL:completion:
_savePairedHostDeviceState
_saveProviders:forPreferenceKey:
_saveVideoWithURL:completion:
_sceneAssociationBehavior
_screenCaptureQueue
_screenEnabled
_screenShareAttributes
_screenSharingActivityManager
_screenToken
_secondaryThumperAccounts
_sendDTMFDigits:type:
_sendDataBlock
_sendDelegateBytesOfDataUsageChanged:
_sendDelegateConnectionClosed
_sendDelegateEndedWithReason:error:
_sendDelegateFinishedPreparing
_sendDelegateInputFrequencyLevelChanged:
_sendDelegateMutedChanged
_sendDelegateOutputFrequencyLevelChanged:
_sendDelegateOutputLevelChanged:
_sendDelegateReceivedData:forCallID:
_sendDelegateReceivedFirstRemoteFrame
_sendDelegateRemoteMediaStalled:
_sendDelegateRemoteVideoPaused
_sendDelegateSendingAudioChanged
_sendDelegateStarted
_sendDelegationMessageTo:conversation:link:transactionUUID:forMember:withMessage:
_sendInvitationWithData:declineOnError:alwaysSendData:
_sendMessage:andCancelInvitationIfNecessaryForSession:
_sendMessage:andDeclineInvitationIfNecessaryForSession:
_sendMessageOptionsWithTimeout:wantsAcknowledgement:
_sendToVoicemailAllowed
_senderCorrelationIdentifier
_senderIdentityCapabilitiesStateByUUID
_senderIdentityCapabilitiesStateForSubscription:
_sendingVideo
_sendingVideoExpected
_serialQueue
_serverBag
_serverProvidedLightweightParticipantIdentifiers
_serverProvidedParticipantIdentifiers
_service
_service:account:incomingData:fromID:context:attemptCount:
_serviceProviders
_session
_sessionApprovalClient
_sessionMessenger
_sessionProvider
_sessionUpdateCompletionQueue
_sessions
_sessionsByToken
_setAllCallsToHeldExceptCall:
_setContentType:
_setContentUserAction:
_setDateEndedIfNecessary
_setEnabledTopics:
_setEndedWithReason:error:
_setIsOnHold:
_setLocalAspectRatiosForVideoAspectRatioDescriptor:
_setQueue:
_setRelayCallingEnabled:
_setRelayCallingEnabled:forDeviceWithID:
_setRelayCallingEnabledDefault:forDeviceWithID:
_setRoutesFromRouteDictionaries:
_setSubtitle:
_setThumperCallingAllowed:onSecondaryDeviceWithID:forSenderIdentityWithUUID:
_setThumperCallingAllowedOnDefaultPairedDevice:forSenderIdentityWithUUID:
_setThumperCallingEnabled:forSenderIdentityWithUUID:
_setUpBreakBeforeMakeTimeout
_setUpBreakBeforeMakeTimeoutIfNecessaryForCall:
_setUpCallDurationLimitIfNecessary
_setUpDidStartTimeout
_setUpLanguageChangeListener
_setUpSandbox
_setUpTemporaryDirectory
_setVoLTECallingEnabled:forSenderIdentityWithUUID:
_setWiFiCallingEnabled:forSenderIdentityWithUUID:
_setWiFiCallingRoamingEnabled:forSenderIdentityWithUUID:
_sharePlayProtocolVersion
_sharePlaySystemStateObserver
_sharingScreen
_shouldAcceptDateConnectedProviderUpdates
_shouldAllowRequestedAction:forCallSource:shouldValidateUserIntent:error:
_shouldAllowRequestedTransaction:forCallSource:error:
_shouldAssociateScene
_shouldBlockIfScreenSharing
_shouldCheckAllGenerators
_shouldDeclineSessionInviteWithMessage:
_shouldFilterCall
_shouldHandleSecureMicrophoneEvents
_shouldLaunchInCallApplicationForProviderOfCall:
_shouldOverrideNetworkAsAvailable
_shouldPreferRelayOverDirectSecondaryCalling
_shouldSend:
_shouldSendToPairedIDSDevice
_shouldStartAudioPaused
_shouldStartVideoPaused
_shouldSuppressInCallUI
_shouldUseIDSDemuxer
_signalHandlerDispatchSources
_silencingUserInfo
_sos
_sourceIdentifier
_splitSessionSecondary
_springBoardProcessObserver
_stableExpanseIdentifier
_stagedActivitySession
_startAVCSessionIfNecessary
_startIDSSessionWithContext:
_startSession:withMessage:identifiers:timeout:declineOnError:
_startTimeoutForMomentsRequestWithTransactionID:
_state
_statusBarManager
_stop
_stopBroadcastingActivity:
_stopConference:
_stopListeningForActivityType:dynamicIdentifier:
_stopListeningForActivityType:matchingDynamicIdentifierSubstring:
_stopListeningForBestAppSuggestionIfAppropriate
_streamToken
_streamTokensByCSDClient
_stringForKey:
_stripFZIDPrefix
_stripPotentialTokenURIWithToken:
_subscriptionWithUUID:
_subscriptions
_subtitle
_suggestedName
_supportedMediaTypes
_supportsAddCall
_supportsAudioAndVideo
_supportsAudioOnly
_supportsBasebandCalling
_supportsCellularData
_supportsClientAssertions
_supportsContinuationOnTV
_supportsDTMF
_supportsDisplayingFaceTimeAudioCalls
_supportsDisplayingFaceTimeVideoCalls
_supportsDisplayingTelephonyCalls
_supportsEmergency
_supportsEmergencyFallback
_supportsGrouping
_supportsHolding
_supportsLeaveContext
_supportsLinks
_supportsPrimaryCalling
_supportsRecents
_supportsRelayCalling
_supportsSendingToVoicemail
_supportsSharePlay
_supportsTTYWithVoice
_supportsThumperCallingUsingSenderIdentityCapabilitiesState:
_supportsUnambiguousMultiPartyState
_supportsUngrouping
_supportsVideo
_supportsVoicemail
_supportslaunchingInCallApplicationForIncomingCall
_swappable
_synchronous
_systemStatusPublisher
_systemVolume
_takingCallsPrivateAllowed
_targetContentIdentifier
_telephonyCallCapabilities
_telephonyCapableDeviceExists
_telephonyClient
_telephonySenderIdentities
_temporaryFileURLByClientFileURL
_temporaryGroupUUID
_thumperCallingAllowedOnDefaultPairedDeviceDefault
_thumperCapabilitiesMonitor
_thumperIsNoLongerEnabledForAccountID:
_thumperIsNoLongerSupportedForAccountID:
_thumperIsNowEnabledForAccountID:
_thumperPinExchangeController
_thumperPushHandler
_timebase
_timeout
_timeoutBlock
_timeoutTimer
_timestampAsTimeIntervalSinceReferenceDate
_tinCanCallSource
_tinCanProviderDelegate
_title
_tokenPrefixedURI
_trackListenedActivityType:dynamicIdentifier:
_transactionManager
_transactionObjectsAwaitingCallHistory
_transferFileAtURL:forSession:request:
_transmissionMode
_transmissionState
_transport
_transportType
_ttyType
_tuProvider
_twoTimeCallthroughInterval
_type
_uPlusNDowngradeAvailable
_uPlusOneScrenShareAvailable
_uUIDString
_underlyingUplinkMuted
_uniqueIdentifier
_uniqueProxyIdentifier
_uniqueProxyIdentifierToCallTable
_uniqueProxyIdentifierToCallTableSemaphore
_unregisterForPushTokenWithType:client:
_unregisterPushApplication:inEnvironment:pushType:destroyApp:
_unregisterUninstalledProvidersAndNotify:
_unregisterUserActivityType:dynamicActivityType:
_unsafeData
_untrackListenedActivityType:dynamicIdentifier:
_untrackListenedActivityType:matchingDynamicIdentifierSubstring:
_updateBluetoothAudioFormatIfNecessaryDueToMVMChange:
_updateCTCapabilities
_updateCallAvailability
_updateCallCapabilitiesForSubscription:capabilitiesState:
_updateCallMutingForHoldMusic
_updateCarPlayDeviceConnected
_updateClientsWithState
_updateCurrentOrientationValue
_updateCurrentlyBroadcastedActivity
_updateDefaultPairedDeviceUniqueIDDefault
_updateDialingIDSDevice
_updateDynamicCapabilitiesAndUpdateClients
_updateEmergencyCallbackModeEnabledState
_updateHostingAndDisplayingSupport
_updateMessage
_updateOutgoingCallerID
_updateParticipantTypesForAddedParticipant:
_updatePickableRoutes
_updateProviderForConnectedChat:
_updateProviderForConnectingChat:
_updateProviderForEndedChat:
_updateProvidersByIdentifierAndNotify:
_updateRelayCapabilities
_updateRoutesForDisconnectedCall
_updateSessionPreferences
_updateState
_updateSubscriptions
_updateSystemCapabilitiesStateForSubscription:capabilitiesState:
_updateThumperAccountState
_updateThumperCallingPreferences
_updatedDateEpochTime
_updatedQOSBlockForBlock:
_upgrade
_upgradeSessionUUID
_uplinkMuted
_uplinkMutedSetTime
_uplinkWasExplicitlyMuted
_userActivity
_userActivityTypeStringForActivityType:
_userConfiguration
_userIntentManager
_userNotificationController
_usingBaseband
_uuid
_validationSource
_value
_version
_video
_videoDeviceController
_videoEnabled
_videoPaused
_videoPriority
_virtualParticipantsByPluginName
_visibilityContext
_voLTECallingAvailable
_voiceOverObserver
_voiceOverRunningDeterminationHandler
_voiceOverTouchShouldRouteToSpeakerDeterminationHandler
_voicemail
_voipApplicationController
_voipToken
_waitForCallSourceWithIdentifier:completion:
_waitingToPruneParticipants
_wantsStagingArea
_wiFiCallingAvailable
_wiFiEmergencyCallingAllowed
_wiFiEmergencyCallingAvailable
_xpcClientForConnection:
_xpcListener
aTVHandoff
aa_primaryAppleAccount
absoluteString
accelerometer
accelerometer:didAccelerateWithTimeStamp:x:y:z:eventType:
accelerometer:didChangeDeviceOrientation:
acceptInvitation
acceptInvitationForIdentifier:
acceptInvitationWithData:
acceptPayloadData
accessorLock
account:aliasesChanged:
account:displayNameChanged:
account:loginChanged:
account:profileChanged:
account:pseudonymsChanged:
account:registrationStatusInfoChanged:
account:vettedAliasesChanged:
accountController
accountController:accountDisabled:
accountController:accountEnabled:
accountController:accountRemoved:
accountController:accountUpdated:
accountDescription
accountForTelephonySubscriptionLabelIdentifier:
accountID
accountISOCountryCodeForSubscriptionUUID:
accountInfo
accountMatchingSimIdentifier:
accountStore
accountType
accountUUID
accountUUIDString
accountWithCallerID:
accountWithUUID:service:
accounts
accountsController
accountsMatchForSecondaryCalling
acquireAssertionIfNecessary
acquireProcessAssertionForBundleIdentifier:
acquireProcessAssertionForBundleIdentifier:completion:
acquireWithCompletionHandler:
acquireWithError:
actionDescription
actionIdentifier
actionWithIdentifier:title:options:
actionWithIdentifier:title:options:icon:
activateConversationNoticeWithActionURL:bundleIdentifier:
activateInCallUIWithActivityContinuationIdentifier:
activateLinkForPseudonym:completionHandler:
activateLinkForPseudonym:updateGroupUUID:updateInvitedHandles:
activateWithCompletion:
activatedConversationLinks
activatedConversationLinks:
activatedLinks
activatedLinksWithCompletionHandler:
activeAccountsChangedForService:
activeApprovedConversationWithLink:
activeConference
activeConferenceConnectionForIdentifier:
activeContexts
activeConversation
activeConversationForCall:
activeConversationForCall:backedByGroupSession:
activeConversations
activeDevices
activeIDSDestination
activeInterfaceOrientationWithCompletion:
activeLightweightParticipantDestinationsByIdentifier
activeLightweightParticipants
activeLightweightParticipantsAtIndex:
activeLightweightParticipantsByIdentifier
activeLightweightParticipantsCount
activeLightweightParticipantsType
activeLocalHandles
activeLocalHandlesForProvider
activeParticipantDestinationsByIdentifier
activeParticipantHandles
activeParticipantRefreshDelay
activeParticipants
activeParticipantsAtIndex:
activeParticipantsCount
activeParticipantsType
activeRemoteParticipant
activeRemoteParticipantCXHandles
activeRemoteParticipantForCallUpdate:
activeRemoteParticipantHandles
activeRemoteParticipants
activeRemoteParticipantsAtIndex:
activeRemoteParticipantsByIdentifier
activeRemoteParticipantsCount
activeRemoteParticipantsType
activeRequestCount
activeRequestsByTransactionID
activeSessionForIdentifier:
activeSplitSessionTVDevice
activeSplitSessionTVDeviceWithCompletion:
activeSubscriptionsDidChange
activity
activityAuthorizationManager
activityAuthorizedBundleIdentifierState
activityAuthorizedBundleIdentifierState:
activityAuthorizedBundleIdentifiers
activityCommunicator
activityContextWithTUActivityContext:
activityIdentifier
activityIdentifierBundleIDMapping
activityMetadata
activityMetadataWithDataBlob:
activityQueue
activitySessionManager
activitySessionManager:activeRemoteParticipantWithParticipantIdentifier:bundleIdentifier:
activitySessionManager:activeRemoteParticipantWithParticipantIdentifier:bundleIdentifier:completionHandler:
activitySessionManager:activityChangedOnSession:
activitySessionManager:activitySessionAssociatedSceneChanged:
activitySessionManager:activitySessionChanged:
activitySessionManager:activitySessionIsJoinable:
activitySessionManager:activitySessionRemoved:userOriginated:
activitySessionManager:activitySessionStateChanged:oldState:
activitySessionManager:fetchDataCryptorForTopic:completionHandler:
activitySessionManager:localParticipantWithParticipantIdentifier:bundleIdentifier:
activitySessionManager:receivedActivitySessionEvent:
activitySessionManager:requestEncryptionKeysForParticipants:topicName:
activitySessionManager:requestForegroundPresentationForActivity:
activitySessionManager:sessionUnjoined:startDate:endDate:
activitySessionManagerRequestedCallTypeStringForLogging:
activitySessionWithCSDConversationActivitySession:fromConversation:
activitySessionWithCSDConversationActivitySession:fromConversation:forStorage:
activitySessionWithTUConversationActivitySession:fromConversation:
activitySessionWithTUConversationActivitySession:fromConversation:forStorage:
activitySessions
activitySessionsAtIndex:
activitySessionsCount
activitySessionsType
activityType
activityTypeForUserActivityTypeString:
activityTypeRequiresBestAppSuggestionListener:
activityTypeSupportsDynamicIdentifierRegistration:
activityWithCSDConversationActivity:fromConversation:forStorage:
activityWithCSDConversationActivity:handle:
activityWithTUConversationActivity:
activityWithType:dynamicIdentifier:userInfo:
add:
addAction:toUncommittedTransactionForCallSource:
addActiveLightweightParticipants:
addActiveParticipant:
addActiveParticipants:
addActiveRemoteParticipants:
addActivitySessions:
addAddedMembers:
addAlias:
addAliasesToConversationContainer:forBundleIdentifier:
addAliasesToConversationContainer:withSalt:
addBarrierBlock:
addBlockToCaptureSessionQueue:
addCall:
addCallAllowed
addCallDescriptor:
addCallFilter:
addCallSource:
addCalls:forIdentifier:
addClient:
addContactIdentifiers:
addConversationLinkDescriptors:completion:
addConversationLinkDescriptors:error:
addDelegate:
addDelegate:queue:
addDelegate:withQueue:
addEmergencyHandles:
addEmergencyLabeledHandles:
addEndpointIDSDestinationURIs:
addEntriesFromDictionary:
addFirewallEntriesForHandleToDate:
addFirewallEntriesForHandles:lastSeenDate:
addFirewallEntryForHandle:lastSeenDate:
addGenerateDescriptorInfos:
addGeneratorDescriptors:
addHandoffIdentifier:
addIdentifier:
addInvitationPreferences:
addInvitedHandles:
addInvitedHandles:pseudonym:completionHandler:
addInvitedMemberHandles:toConversationLink:completionHandler:
addInvitedMemberHandlesFromAddedRemoteMembers:toConversationLink:
addLightweightMembers:
addLink:
addListenerID:forService:
addLocalClientObject:
addMembers:
addMembers:toExistingMembers:activeParticipants:activitySessions:link:otherInvitedHandles:report:invitationPreferences:requiredCapabilities:messagesGroupUUID:messagesGroupName:addingFromLetMeIn:triggeredLocally:highlightIdentifier:stagedActivitySession:avMode:
addMembers:toExistingMembers:participantDestinationIDs:webDestinationIDs:activeParticipants:activitySessions:link:otherInvitedHandles:report:invitationPreferences:
addNotificationRequest:withCompletionHandler:
addObject:
addObjectsFromArray:
addObserver:queue:
addObserver:selector:name:object:
addObserver:withQueue:
addObserverForName:object:queue:usingBlock:
addOrUpdateCall:
addOrUpdateConversationLinkDescriptors:completion:
addOrUpdateConversationLinkDescriptors:error:
addOtherInvitedHandles:
addOutstandingMessage:forBundleIdentifier:
addParticipant:withVideoEnabled:screenEnabled:
addPendingMembers:triggeredLocally:
addProtoCall:
addProtoSupportedHandleType:
addProtocolVersion
addProviders:
addPseudonym:
addPseudonym:forCallUUID:
addRegistrationDelegate:queue:
addRemoteMembers:
addRemoteMembers:otherInvitedHandles:invitationPreferences:addingFromLetMeIn:triggeredLocally:
addRemoteMembers:otherInvitedHandles:toConversationWithUUID:
addRemoteMembers:otherInvitedHandles:triggeredLocally:
addRemoteMembers:toConversation:
addRemoteMembers:toConversationWithUUID:
addRemoteParticipantHandles:
addRemovedMembers:
addReporter:
addRequiredCapabilities:requiredLackOfCapabilities:
addResourceWithType:fileURL:options:
addRoutes:
addSecondaryThumperDeviceWithIDSDeviceIdentifier:toSubscription:
addServiceDelegate:queue:
addTVAsActiveParticipant
addThumperRegisteredDeviceID:forThumperAccountID:
addToCallHistory:
addUserInfoEntriesFromDictionary:
addUserNotification:listener:completionHandler:
addVirtualParticipant:
addVoIPApplication:
addedMembers
addedMembersAtIndex:
addedMembersCount
addedMembersType
airTunesRouteAvailable
alertDidBeginPlaying:
alertWithConfiguration:
aliasStrings
allActions
allActiveConversationParticipantsSupportSharePlay
allAliases
allCallHistoryDeleted
allCalls
allCallsAreOfService:
allCallsBackgroundedForReportingController:
allCallsPassTest:
allConversationHandoffDynamicIdentifierPossibilitiesForGroupUUID:participantIdentifier:
allIDSTelephonyDevices
allIdentifiers
allObjects
allTUConversationMembers
allValues
allocWithZone:
allowCallForDestinationID
allowCallForDestinationID:providerIdentifier:
allowContactsOnly
allowMember:
allowParticipants:
allowScreenSharing
allowSharePlay
allowedSecondaryDeviceIDs
allowsScreenSharing
allowsScreenSharingBlock
allowsVideo
ambiguityState
ams_activeiCloudAccount
ams_activeiTunesAccount
ams_altDSID
ams_sharedAccountStore
andPredicateWithSubpredicates:
announceCalls
answerCall:
answerCall:withRequest:whileDisconnectingActiveCalls:
answerCall:withRequest:whileDisconnectingHeldCalls:andHoldingCalls:
answerCall:withRequest:whileHoldingActiveCalls:
answerCallWithRequest:
answerWithRequest:
answerWithVideoAspectRatioDescriptor:
anyActiveAccount
anyActiveParticipantHasAV
anyBluetoothHeadphoneRouteAvailableForAnyCall
anyCallIsEndpointOnCurrentDevice
anyCallIsHostedOnCurrentDevice
anyCallPassesTest:
anyObject
anyVehicleRouteAvailableForAnyCall
appHistoryActivityWithTitle:subtitle:keywords:userInfo:
appShouldUseDeprecatedCallingIntents:
appendFormat:
appendString:
applicationContext
applicationInfoForApplication:
applicationLaunchPolicyManager
applicationMonitor
applicationPolicyManager
applicationPolicyManager:authorizationChangedForBundleIdentifier:
applicationRecord
applicationShouldPostIncomingCall
applicationState
applicationStateForBundleIdentifier:
applicationStateMonitor
approvePendingMember:forConversationUUID:
approveSplitSessionFor:from:pullContext:completion:
approveSplitSessionForConversation:requestedFromDevice:pullContext:completion:
approvedSecondaryDeviceIDs
approverHandle
archivedDataWithError:
archivedDataWithRootObject:requiringSecureCoding:error:
areCTCapabilitiesValid
areCapabilitiesValid
areRelayCallingFeaturesEnabled
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayByApplyingSelector:
arrayOfStringsForKeyHierarchy:subscriptionContext:error:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
assertion
associateCallUUID:withConversationUUID:waitingToJoin:
associatedPseudonym
associatedThumperAccountID
association
associationAVCIdentifier
associationIdentifier
associationVoucher
attachmentWithIdentifier:URL:options:error:
attemptToPlayDescriptor:completion:
attemptToPlayKey:
attributeForKey:
attributeWithDomain:name:
attributes
attributesOfItemAtPath:error:
audioAccessoryDevice
audioAndVideoCallsWithStatus:
audioArbitrationController
audioCategory
audioDeviceController
audioDeviceControllerDeviceListChanged:
audioDeviceControllerMutedTalkerDidEnd:
audioDeviceControllerMutedTalkerDidStart:
audioDisabled
audioEnabled
audioInterruptionActivationStateObserver
audioInterruptionOperationMode
audioInterruptionPropertiesChangedWithNotification:
audioInterruptionProvider
audioInterruptionProviderType
audioMode
audioMutedForHoldMusic
audioOrVideoCallWithStatus:
audioPaused
audioPolicyManager:sharePlayAllowedStateChanged:
audioPriority
audioReady
audioRouteCollections
audioRouteInformationChangedWithNotification:
audioRoutePolicyManager
audioRouteUniqueIdentifier
audioRoutesByParticipantIdentifier
audioSessionActive
audioSessionID
audioSourceIdentifier
audioVideoMode
authorizedBundleIdentifiers
autoSharePlayEnabled
automaticCarDNDStatus
automaticUpgradingEnabled
autorelease
avChat
avLess
avLessSharePlayEnabled
avMode
availability
availabilityForListenerID:forService:
availabilityWithRemoteAvailable:
available
availableDeviceSlots
avcBlobRecoveryStartedForConversation:
avcBlobRecoveryTimedOutForConversation:
avcBlobRequestMessageRetryFailedForConversation:
avcBlobRequestMessageRetryStartedForConversation:
avcBlobRequestMessageRetrySucceededForConversation:
avcCameraSelectionEnabled
avcIdentifier
avcRequest
avcScreenCapture
avcScreenCaptureConfigurationForScreenAttributes:
avcSession
avcSessionCreationBlock
avcSessionIdentifier
avcSessionInProgress
avcSessionParticipantCreationBlock
backingCallSource
baseDestinationID
becomeCurrent
becomeEndpointForPullFromRemoteDevice
beginDailyMaintenanceWithActivity:
beginListeningBlock
beginListeningOnService:
beginMatchingExtensions
beginObserving
beginParticipantConfiguration
beginParticipantUpdates
beginTransactionIfNecessaryForObject:withReason:
behavior
behaviorResolutionService
bestAppSuggestionChanged:
bestAppSuggestionChanged:withAdditionalSuggestions:
bestAppSuggestionManager
bestGuessPickableRoutesForAnyCall
block
blockToExecuteAfterPendingCoalescingBlocksByIdentifier
blocksPendingTransportAvailability
bluetoothAudioFormat
bluetoothEndpointType
bluetoothRouteAvailable
boolForKey:
boolForKey:keyExistsAndHasValidFormat:
boolValue
bounds
breakBeforeMakeTimeout
broadcastActivity:
broadcastActivity:withTimeout:
broadcastActivity:withTimeout:shouldPrioritize:
broadcastAttributes:
broadcastData:onConversation:
broadcastData:onConversation:additionalOptions:
broadcastFile:onConversation:additionalOptions:
broadcastImageForSession:onConversation:
broadcastLightweightEndorsementForAddedMembers:onConversation:
broadcastLocalParticipantData
bucketedInteger:
bundleIDKey
bundleIdFromTopic:
bundleIdentifier
bundleIdentifierForProvider:
bundleIdentifierToApplicationState
bundleIdentifierToVoIPApplication
bundleRecordWithApplicationIdentifier:error:
bundleURL
bundleWithURL:
buzzMember:conversationUUID:
bytes
cachedCallUUIDsToConversationAVMode
cachedCalls
cachedChats
call
callAlert
callCapabilitiesChanged:capabilities:
callCapabilitiesClientXPCInterface
callCapabilitiesForCTCallCapabilities:
callCapabilitiesForCallManagementStateInfo:
callCapabilitiesForSubscription:
callCapabilitiesServerXPCInterface
callCapabilitiesState
callCapabilitiesState:
callCenter
callCenterObserver
callChanged
callClass
callConnected:
callContainer
callContinuityChanged:
callController
callControllerHost
callControllerHost:clientWithIdentifier:requestedTransaction:completion:
callCountOnDefaultPairedDevice
callCountWithPredicate:
callDataSource
callDirectoryAllowsCallFromSourceAddress:
callDirectoryAllowsCallFromSourceAddress:countryCode:
callDirectoryExtensionIdentifier
callDirectoryLabel
callDirectoryLocalizedExtensionContainingAppName
callDirectoryManager
callDirectoryNSExtensionManager:extensionsChanged:
callDirectorySanitizer
callDirectoryStore
callDuration
callDurationLimitTimer
callDurationUpdateTimer
callFilterController
callForClient:usingCall:
callForConversation:withSessionToken:
callGroupUUID
callGroupUUIDToCalls
callHistoryController
callHistoryControllerClientXPCInterface
callHistoryControllerServerXPCInterface
callHistoryControllerXPCServer
callHistoryIdentifier
callHistoryManager
callHistoryManagerClientXPCInterface
callHistoryManagerServerXPCInterface
callHistoryManagerXPCServer
callID
callInfoBlob
callInteractionsDidChangeForManager:
callIsOnHoldChangedNotification:
callIsSendingVideoChanged:
callIsUplinkMutedChanged:
callModel
callPassingTest:
callPassingTest:sortedUsingComparator:
callProviderManager
callProviderManagerClientXPCInterface
callProviderManagerServerXPCInterface
callProviderManagerXPCServer
callProviderSupportsSystemControls
callRelaySupport
callScreenShareAttributesForAction:
callService
callServicesClientXPCInterface
callServicesInterface
callServicesServerXPCInterface
callSource:registeredWithConfiguration:
callSource:reportedAudioFinishedForCallWithUUID:
callSource:reportedCallWithUUID:changedFrequencyData:forDirection:
callSource:reportedCallWithUUID:crossDeviceIdentifier:changedBytesOfDataUsed:
callSource:reportedCallWithUUID:endedAtDate:privateReason:failureContext:
callSource:reportedCallWithUUID:updated:
callSource:reportedNewIncomingCallWithUUID:update:completion:
callSource:reportedNewOutgoingCallWithUUID:update:
callSource:reportedOutgoingCallWithUUID:connectedAtDate:
callSource:reportedOutgoingCallWithUUID:sentInvitationAtDate:
callSource:reportedOutgoingCallWithUUID:startedConnectingAtDate:
callSource:requestedTransaction:completion:
callSource:shouldProcessAction:error:
callSourceFetcher
callSourceForDialRequest:
callSourceForJoinConversationRequest:
callSourceManager
callSourceManager:completedTransactionGroup:
callSourceWithIdentifier:
callSources
callSourcesChangedForCallSourceManager:
callStartedConnecting:
callStateContext
callStateController
callStateMonitor
callStatus
callStatusChanged:
callStatusFromOverride
callStatusFromUnderlyingSource
callStatusSupportsSystemControls
callTypeForJoinContext:
callUUID
callUUIDForConversationUUID:
callUUIDToGroupWith
callUUIDsByConversationUUID
callUUIDsUpgradedForAVMode
callUpdateForChat:
callUpdateForPendingChat:
callUpdateWithDefaultValuesSet
callWithCallUUID:
callWithUniqueProxyIdentifier:
callWithUniqueProxyIdentifier:fromCallsToAnswer:
callbackDestinationID
callbackISOCountryCode
calleeContactIDsKey
calleeHandlesKey
caller
callerID
callerIDChanged:
callerIDForLocalMember:
callerIDForLocalMember:forProvider:
callerIDHandleForSenderIdentityUUID:
callerIdIsBlocked
callerNameFromNetwork
callerNetworkName
calls
callsChangedForCallCenterObserver:
callsForDataSource:identifier:
callsHostedElsewhere
callsHostedOrAnEndpointElsewhere
callsOnDefaultPairedDevice
callsPassingTest:
callsWithAnEndpointElsewhere
callsWithGroupUUID:
callsWithPredicate:limit:offset:batchSize:
callsWithStatus:
canApproveSessions
canBeAnsweredWithAudioOrVideoRelayWithRequest:
canBeAnsweredWithRequest:
canCreateConversations
canOnlyBeAnsweredWithoutAudioOrVideoRelayWithRequest:
canReceiveMessagesForCallProvider:
canReceiveRelayedCalls
cancel
cancelCallID:
cancelInvitation
cancelInvitationWithAnsweredElsewhere
cancelInvitationWithData:
cancelInvitationWithDeclinedElsewhere
cancelInvitationWithReason:
cancelInvitationWithRemoteEndedReasonOverride:
cancelOrDeclineInvitation
cancelOrDeclineInvitationForIdentifier:
cancelPinRequestFromPrimaryDevice
cancelPinRequests
cancelSplitSessionApproval
cancelledConnectionAttemptOnTransport:
cannotBeAnswered
cannotRelayAudioOrVideo
cannotRelayAudioOrVideoOnPairedDevice
canonicalizedPhoneNumber:
capabilities
capabilitiesValid
capabilityInfoForSubscription:capability:
capabilitySendMessageOptions
capabilityStateUpdated:
captionDraggingEnabled
captioningEnabled
captionsToken
captureCapabilities
captureSessionCreationBlock
captureSessionQueue
capturingLocalVideo
carAudioRouteAvailable
carModeActive
carPlayDeviceConnected
carPlayIsConnectedChanged:
carPlayManager
carPlayRouteAvailable
carPlayScreenConnectionChanged
carrierBundleChange:
carrierNumbersForSubscriptionContext:
carrierPhoneNumbers
caseInsensitiveCompare:
category
categoryWithIdentifier:actions:intentIdentifiers:hiddenPreviewsBodyPlaceholder:options:
categoryWithIdentifier:actions:intentIdentifiers:options:
cellularDataAllowed
cellularDataAvailable
cellularDataPreferred
chManager
changeType
characterAtIndex:
characterIsMember:
characterSetWithCharactersInString:
chat:changedBytesOfDataUsed:
chat:inputFrequencyLevelChangedTo:
chat:inputLevelChangedTo:
chat:outputFrequencyLevelChangedTo:
chat:outputLevelChangedTo:
chat:receivedData:
chatConnected:
chatEnded:
chatReceived:
chatSentInvitation:
chatStartedConnecting:
chatWithUUID:
chats
chatsPendingUpgrade
checkInMessage
checkLinkValidity:completionHandler:
checkLinkValidityWithPseudonym:completionHandler:
checkValidityForPseudonymString:completion:
checkValidityForSelfPseudonymString:
class
cleanUpConversationIfNecessaryForConversationUUID:failureContext:
cleanUpForMomentIfNecessary:
cleanUpIDSSessionState
cleanUpTemporaryFileIfExistsForClientFileURL:
cleanupConversationWithCallUUID:
cleanupExpiredPendingConversations
clearActiveLightweightParticipants
clearActiveParticipants
clearActiveRemoteParticipants
clearActivitySessions
clearAddedMembers
clearContactIdentifiers
clearEmergencyHandles
clearEmergencyLabeledHandles
clearGenerateDescriptorInfos
clearGeneratorDescriptors
clearHandoffIdentifiers
clearInvitationPreferences
clearInvitedHandles
clearLightweightMembers
clearLinks
clearMembers
clearNotificationsIfNecessary
clearOtherInvitedHandles
clearOtherUniqueProxyIdentifiers
clearPendingMembershipFor:
clearPrioritizedSenderIdentities
clearProtoSupportedHandleTypes
clearProviders
clearReadNotificationsIgnoringHandleIds:
clearRemoteMembers
clearRemoteParticipantHandles
clearRemovedMembers
clearRoutes
clearState
client
client:capabilitiesDidChange:
client:subscription:callCapabilitiesDidChange:
client:subscription:capabilitiesDidChange:
clientAudioSessionID
clientContextData
clientFileURLByIdentifier
clientInvalidationHandler
clientManager
clientMessagingDelegate
clientUUID
clientsEntitledForCapability:
clientsPassingTest:
clientsShouldConnectToken
closeConnectionTimeout
cloudCallingDevices
code
collaborationIdentifier
commitParticipantUpdates
commitUncommittedTransactions
commonMessagingDelegate
compactStoreWithCompletionHandler:
companyName
compare:
compare:options:
compatibilityObject
completedDescription
completion
completionHandler
componentsJoinedByString:
componentsSeparatedByString:
conduitXPCServer
conference
conference:cancelRelayRequest:requestDict:
conference:changedBytesOfDataUsed:
conference:closeConnectionForCallID:
conference:didChangeLocalVariablesForCallID:
conference:didReceiveARPLData:withCallID:
conference:didReceiveData:forCallID:
conference:didStartSession:withCallID:error:
conference:didStartSession:withUserInfo:
conference:didStopWithCallID:error:
conference:didStopWithCallID:error:callMetadata:
conference:endedWithReason:error:
conference:inititiateRelayRequest:requestDict:
conference:inputFrequencyLevelChangedTo:
conference:isRemoteAudioBelowThreshold:
conference:localAudioEnabled:forCallID:error:
conference:localIPChange:withCallID:
conference:outputFrequencyLevelChangedTo:
conference:outputLevelChangedTo:
conference:receivedFirstRemoteFrameForCallID:
conference:reinitializeCallForCallID:
conference:remoteAudioEnabled:forCallID:
conference:remoteAudioPaused:callID:
conference:remoteCallingModeChanged:forCallID:
conference:remoteMediaStalled:
conference:remoteScreenAttributesChanged:callID:
conference:remoteVideoAttributesChanged:callID:
conference:remoteVideoPaused:callID:
conference:sendRelayUpdate:updateDict:
conference:updateInputFrequencyLevel:
conference:updateInputMeterLevel:
conference:updateOutputFrequencyLevel:
conference:updateOutputMeterLevel:
conference:videoQualityNotificationForCallID:isDegraded:isRemote:
conference:withCallID:didPauseAudio:error:
conference:withCallID:didPauseVideo:error:
conference:withCallID:isSendingAudio:error:
conference:withCallID:networkHint:
conference:withCallID:remoteMediaStalled:
conferenceCall
conferenceConnectionForIdentifier:
conferenceConnections
conferenceCreationBlock
conferenceFinishedPreparing:
conferenceID
conferenceParticipantCalls
conferenceProvider
conferenceProvider:didPauseAudio:error:
conferenceProvider:didPauseVideo:error:
conferenceProvider:didReceiveData:forCallID:
conferenceProvider:didStartSession:error:
conferenceProvider:didStopWithError:callMetadata:
conferenceProvider:remoteMediaStalled:
conferenceProvider:remoteVideoPaused:
conferenceProvider:updateInputFrequencyLevel:
conferenceProvider:updateInputLevel:
conferenceProvider:updateOutputFrequencyLevel:
conferenceProvider:updateOutputLevel:
conferenceProviderReceivedFirstRemoteFrame:
conferenceStarted:
conferenced
conferencesAwaitingConnectionClose
configuration
configurationForDefaultMainDisplayMonitor
conformsToProtocol:
connected
connection
connection:channelSubscriptionsFailedWithFailures:
connection:didChangeConnectedStatus:
connection:didFailToSendOutgoingMessage:error:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didReceivePublicToken:
connection:didReceiveToken:forInfo:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didSendOutgoingMessage:
connectionClosedForConference:
connectionClosedForConferenceProvider:
connectionDidReconnect:
connectionInterrupted
connectionTimeout
constitutesLetMeInApproval
contactForDestinationId:keysToFetch:
contactForIdentifier:keysToFetch:
contactIdentifier
contactIdentifiers
contactIdentifiersAtIndex:
contactIdentifiersCount
contactIdentifiersType
contactLabel
contactName
contactStore
contacts
contactsByHandleForCalls:keyDescriptors:error:
contains:
containsAnyOutstandingMessageForBundleIdentifier:
containsBlockingEntryForEnabledExtensionWithPhoneNumberInArray:error:
containsMemberWithHandle:
containsOutgoingRestrictedHandle:forBundleIdentifier:performSynchronously:
containsOutstandingMessage:forBundleIdentifier:
containsRecentsRestrictedHandle:
containsRegisteredDeviceID:
containsRemoteParticipantWithIdentifier:
containsRestrictedHandle:
containsRestrictedHandle:forBundleIdentifier:performSynchronously:reply:
contentByUpdatingWithProvider:error:
contentsOfDirectoryAtURL:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
context:addPhoneServicesDevice:withCompletion:
context:capabilitiesChanged:
context:getCapability:status:with:
context:getSystemCapabilities:
context:recheckPhoneServicesAccountStatus:
context:removePhoneServicesDevice:withCompletion:
context:setCapability:enabled:with:
contextIdentifier
continueHandoffAudioRouteForIdentifier:
continueHandoffAudioRouteNotification
continueHandoffForConversationWithEligibility:
continuityCaptureEnabled
controlFlags
conversation:activityChangedOnSession:
conversation:activitySessionChanged:
conversation:activitySessionRemoved:userOriginated:
conversation:addedActiveParticipant:
conversation:addedMembers:triggeredLocally:
conversation:addedMembersLocally:
conversation:appLaunchState:forActivitySession:
conversation:buzzedMember:
conversation:changedBytesOfDataUsed:
conversation:didChangeLocalParticipant:
conversation:didChangeSceneAssociationForActivitySession:
conversation:didChangeStateForActivitySession:
conversation:mediaPrioritiesChangedForParticipant:
conversation:participant:addedNotice:
conversation:receivedActivitySessionEvent:
conversation:remoteParticipantWithIdentifier:updatedAudioEnabled:
conversation:remoteParticipantWithIdentifier:updatedVideoEnabled:
conversation:removedActiveParticipant:withLeaveReason:
conversation:requestBlobRecoveryForParticipantDestination:completion:
conversation:screenSharingChangedForParticipant:
conversation:sendDeclineMessageToParticipantDestination:
conversation:updatedActiveParticipant:
conversation:updatedActiveParticipantWithScreenSharing:
conversationChanged:
conversationCreationBlock
conversationDidTriggerJoin:
conversationFailureContext
conversationGroupUUID
conversationGroupUUIDString
conversationHandoffEnabled
conversationID
conversationInvalidated:
conversationLink
conversationLinkBaseURL
conversationLinkDescriptorCountWithPredicate:completion:
conversationLinkDescriptorCountWithPredicate:error:
conversationLinkDescriptorDataSourceDelegate
conversationLinkDescriptorsWithGroupUUIDs:error:
conversationLinkDescriptorsWithPredicate:limit:offset:completion:
conversationLinkDescriptorsWithPredicate:limit:offset:error:
conversationLinkForGroupUUID:
conversationLinkForPseudonym:
conversationManager
conversationManager:activatedConversationLinksChanged:
conversationManager:activeRemoteParticipantsChangedForConversation:
conversationManager:activeRemoteParticipantsChangedForConversation:fromOldConversation:
conversationManager:activityAuthorizationChangedForBundleIdentifier:
conversationManager:activitySessionsChangedForConversation:
conversationManager:activitySessionsChangedForConversation:fromOldConversation:
conversationManager:addedActivatedLink:
conversationManager:addedActiveConversation:
conversationManager:avModeChanged:toAVMode:forConversation:
conversationManager:avModeChanged:toAVMode:forParticipantWithHandle:forConversation:
conversationManager:avModeChangedForConversation:
conversationManager:avModeChangedForConversation:fromOldConversation:
conversationManager:changedActivityAuthorizationForBundleIdentifier:
conversationManager:connectionDidStartForConversation:
conversationManager:conversation:addedActiveParticipant:
conversationManager:conversation:addedMembersLocally:
conversationManager:conversation:appLaunchState:forActivitySession:
conversationManager:conversation:buzzedMember:
conversationManager:conversation:changedBytesOfDataUsed:
conversationManager:conversation:didChangeSceneAssociationForActivitySession:
conversationManager:conversation:didChangeStateForActivitySession:
conversationManager:conversation:failedWithContext:
conversationManager:conversation:launchStateChanged:forActivitySession:
conversationManager:conversation:mediaPrioritiesDidChangeForParticipant:
conversationManager:conversation:participant:addedNotice:
conversationManager:conversation:receivedActivitySessionEvent:
conversationManager:conversation:receivedMessage:fromHandle:withUpdate:
conversationManager:conversation:remoteParticipantWithIdentifier:updatedAudioEnabled:
conversationManager:conversation:remoteParticipantWithIdentifier:updatedVideoEnabled:
conversationManager:conversation:removedActiveParticipant:
conversationManager:conversation:removedActiveParticipant:withReason:
conversationManager:conversation:requestedScreenShareForParticipant:
conversationManager:conversation:screenSharingChangedForParticipant:
conversationManager:conversation:updatedMessagesGroupPhoto:
conversationManager:conversationChanged:
conversationManager:conversationScreenSharingChanged:forParticipant:
conversationManager:conversationUpdateMessagesGroupPhoto:
conversationManager:conversationUpdatedMessagesGroupName:
conversationManager:conversationUpdatedMessagesGroupName:fromOldConversation:
conversationManager:conversationUpdatedMessagesGroupUUID:
conversationManager:didChangeActivatedLinks:
conversationManager:handoffEligibilityChangedForConversation:
conversationManager:handoffEligibilityChangedToConversation:fromPreviousConversation:
conversationManager:ignoreLMIRequestsChangedForConversation:
conversationManager:joinConversationWithRequest:
conversationManager:kickedMembersChangedForConversation:
conversationManager:kickedMembersChangedForConversation:fromOldConversation:
conversationManager:letMeInRequestStateChangedForConversation:
conversationManager:letMeInRequestStateChangedForConversation:fromOldConversation:
conversationManager:linkChangedForConversation:
conversationManager:linkChangedForConversation:fromOldConversation:
conversationManager:linkInvitedMemberHandlesChangedForConversation:
conversationManager:linkInvitedMemberHandlesChangedForConversation:fromOldConversation:
conversationManager:localVideoToggledForConversation:
conversationManager:localVideoToggledForConversation:fromOldConversation:
conversationManager:migratingFromConversation:toConversation:
conversationManager:oneToOneModeChangedForConversation:
conversationManager:oneToOneModeChangedForConversation:fromOldConversation:
conversationManager:otherInvitedHandlesChangedForConversation:
conversationManager:otherInvitedHandlesChangedForConversation:fromOldConversation:
conversationManager:pendingMembersChangedForConversation:
conversationManager:pendingMembersChangedForConversation:fromOldConversation:
conversationManager:rejectedMembersChangedForConversation:
conversationManager:rejectedMembersChangedForConversation:fromOldConversation:
conversationManager:remoteMembersChangedForConversation:
conversationManager:remoteMembersChangedForConversation:fromOldConversation:
conversationManager:remoteScreenShareAttributesChanged:isLocallySharing:
conversationManager:remoteScreenShareEndedWithReason:
conversationManager:removedActiveConversation:
conversationManager:removedConversationWithUUID:
conversationManager:reportedHandedOffConversation:replacedByIdentifier:localizedHandoffRecipientDeviceCategory:
conversationManager:reportedInvalidLinkForPendingConversation:
conversationManager:reportedLetMeInRejectedForPendingConversation:
conversationManager:resolvedAudioVideoModeChangedForConversation:
conversationManager:resolvedAudioVideoModeChangedForConversation:fromOldConversation:
conversationManager:screenSharingAllowedChanged:
conversationManager:screenSharingAvailableChanged:
conversationManager:sharePlayAllowedChanged:
conversationManager:sharePlayAvailableChanged:
conversationManager:stateChangedForConversation:
conversationManager:stateChangedForConversation:fromOldConversation:
conversationManager:systemActivitySessionsChangedForConversation:
conversationManager:systemActivitySessionsChangedForConversation:fromOldConversation:
conversationManager:trackedPendingMember:forConversationLink:
conversationManager:updateIncomingPendingConversationsByGroupUUID:
conversationManager:updatedIncomingPendingConversations:
conversationManagerClientXPCInterface
conversationManagerHost
conversationManagerServerXPCInterface
conversationManagerXPCServer
conversationMessageBytes
conversationNoticeManger
conversationProviderForIdentifier:
conversationProviderForIdentifier:completionHandler:
conversationProviderIdentifier
conversationProviderManager
conversationProviderManagerClientXPCInterface
conversationProviderManagerServerXPCInterface
conversationProviderManagerXPCServer
conversationProviders:
conversationRepresentedByRemoteMembers:andLink:
conversationStateSupportsSystemControls
conversationUUIDForCallUUID:
conversationUUIDs
conversationUUIDsAwaitingActiveAudioSession
conversationUUIDsByCallUUID
conversationUUIDsUpgradedFromAVLess
conversationUUIDsWaitingForRemoteJoin
conversationUUIDsWaitingToJoin
conversationUpdatedMessagesGroupPhoto:
conversationWithGroupUUID:
conversationWithGroupUUID:andProvider:
conversationWithGroupUUID:orMemberIdentifiers:orRemoteMembers:andLink:andVideo:
conversationsByGroupUUID
conversationsByGroupUUID:
conversationsByUUID
conversationsByUUIDIncludingStorageConversations:
conversationsChangedForConversationManager:
copy
copyCarrierBundleValue:keyHierarchy:bundleType:error:
copyFileAtURL:toTemporaryFileWithName:
copyItemAtURL:toURL:error:
copyMobileCountryCode:error:
copyMobileNetworkCode:error:
copyMobileSubscriberCountryCode:error:
copyMobileSubscriberIsoCountryCode:error:
copyWithZone:
coreTelephonyClient
count
countByEnumeratingWithState:objects:count:
countForIdentifier:
countOfCallsPassingTest:
countOfNotificationsReceived
countOfVoicemailsPassingTest:
countryCode
coveredNotifyObserver
cpApplicationController
cpBiomeStreamDonator
createActivitySession:
createActivitySession:onConversation:fromHandle:
createActivitySession:onConversationWithUUID:
createActivitySession:onConversationWithUUID:withCompletion:
createActivitySessionOnConversation:
createActivitySessionWithTuActivitySession:
createAliasForParticipantID:salt:
createCPActivitySessionForActivitySession:onConversationWithUUID:
createConversationIfNecessaryWithUUID:groupUUID:messagesGroupUUID:locallyCreated:localMember:remoteMembers:pendingMembers:otherInvitedHandles:remotePushTokens:lightweightMembers:link:activity:avMode:provider:
createConversationReportingSession:
createConversationWithUUID:groupUUID:messagesGroupUUID:locallyCreated:localMember:initiator:remoteMembers:pendingMembers:otherInvitedHandles:remotePushTokens:lightweightMembers:activity:link:report:fromStorage:avMode:provider:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createLinkIfNecessaryWithFilename:toURL:
createLinkIfNecessaryWithFilename:toURL:error:
createOneToOneFTReportingSessionForCallWithUUID:withReportingHierarchyToken:withVideo:
createProcessMonitorIfNecessary:forClient:
createSelectiveSharingSessionIfNecessary
createStagedActivitySessionForActivity:
createdOutgoingIMAVChat:
creationDate
creationDateEpochTime
creationRequestForAsset
crossDeviceIdentifier
csCallingAvailable
csCallingCapabilitiesState
csdConversationLinkGeneratorDescriptor
csdConversationParticipant
csd_ISOCountryCode
csd_UUIDv5
csd_UUIDv5ForString:
csd_aliasStrings
csd_applicationRecordForApplicationIdentifier:
csd_applicationRecordForBundleIdentifier:
csd_callbackHandle
csd_destinationForAlias:
csd_hasVoIPBackgroundMode
csd_hasVoIPNetworkExtensionEntitlement
csd_isExpired
csd_isSymbolicLink
csd_isThumper
csd_isUnknown
csd_localizedDeviceCategory
csd_pseudonym
csd_senderHandle
csd_stringWithCSDVoIPApplicationMessageTransportType:
csd_telephony
csd_thumper
csd_unknown
csd_unknownContextInfoForAccountID:
ctEmergencyCallbackModeStatusChangedWithUserInfo:
ctServiceType
currentAudioAndVideoCallCount
currentAudioAndVideoCallGroups
currentAudioAndVideoCalls
currentCallCount
currentCallGroups
currentCallSet
currentCalls
currentCallsForClient:
currentClient
currentConnection
currentDescriptor
currentDeviceFamily
currentDeviceOrientation
currentHandler
currentIDStatusForDestination:service:listenerID:queue:completionBlock:
currentIDStatusForDestinations:service:listenerID:queue:completionBlock:
currentLayout
currentOrientation
currentParticipantPresentationContexts
currentProcessIdentifier
currentProxyCalls
currentRemoteDevicesForDestinations:service:listenerID:queue:completionBlock:
currentRunLoop
currentSIMsWithError:
currentServerTimeDate
currentSession
currentState
currentVideoCall
currentVideoCallCount
currentVideoCalls
currentlyBroadcastedActivity
currentlyPickedRouteIdForCategory:andMode:
currentlyTrackedA2DPRouteIdentifier
customizeForProtocolVersion:
cxCall
cxScreenShareAttributesForCallAttributes:
cx_errorWithCode:
cx_incomingCallErrorWithCode:
cx_requestTransactionErrorWithCode:
daemonConnected:
data
dataActiveAndReachable
dataDownloaded
dataSource
dataSourceToIdentifierToCalls
dataSources
dataUploaded
dataUsingEncoding:
dataWithBytes:length:
dataWithContentsOfURL:
dataWithPropertyList:format:options:error:
date
dateAnsweredOrDialed
dateByAddingUnit:value:toDate:options:
dateConnected
dateCreated
dateDialed
dateEnded
dateInitiatedLetMeIn
dateReceivedFirstRemoteFrame
dateReceivedLetMeIn
dateSentInvitation
dateStarted
dateStartedConnecting
dateStartedOutgoing
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
deactivateAndSetInterruptionPriority:error:
debugDescription
declineConversation:reason:destinations:
declineInvitation
declineInvitationWithData:
declineInvitationWithResponse:
declineRemoteDevicesForConversation:reason:
declineRemoteMembersForConversation:reason:
decryptLetMeInRequest:pseudonym:fromHandle:completionHandler:
decryptLetMeInResponse:pseudonym:requestorKeyAgreement:
defaultActionURL
defaultAttributes
defaultCenter
defaultConfiguration
defaultDisplayScale
defaultManager
defaultPairedDevice
defaultPairedDeviceExists
defaultProviders
defaultScaleFactor
defaultScreenShareAttributes
defaultSessionMode
defaultWorkspace
deferCommittingTransactions
deferReportingAudioFinishedForCallWithUUID:
delayedActionsByCallUUID
delegate
delegateController
delegateQueue
deleteCallsWithPredicate:completion:
deleteContentsAtURL:
deleteItemAndReturnError:
deliverVoIPToken:
dequeueAllPauseDigits
dequeueNextPauseDigits
deregisterHandoffIdentifiersForConversation:
description
descriptorForRequiredKeysForStyle:
destination
destinationDevice
destinationID
destinationIDsCanUseV2Blobs:
destinationIdIsEmailAddress
destinationIdIsPhoneNumber
destinationIdIsPseudonym
destinationIdIsTemporary
destinationWithActiveSession
destinationWithDestinations:
destinationWithDevice:
destinationWithRapportPublicIdentifier:
destinationWithStringURI:isLightWeight:
destinationWithTUConversationMember:
destinationWithTUConversationParticipant:
destinationWithURI:
destinations
detectingRaiseToAnswer
developmentConnection
deviceCapabilityChanged:
deviceDestinationsWithCapability:localHandle:
deviceFamily
deviceForFromID:
deviceForService:
deviceListChanged:
deviceLockObserver
deviceLockStateObserver
devicePasscodeLocked
deviceRole
deviceSupport
deviceType
deviceTypeAsString:
deviceWithActiveSession
deviceWithUniqueID:
devicesWithCapability:
dialAssistedDialRequestForDialRequest:
dialRequest
dialType
dialWithRequest:completion:
dialWithRequest:reply:
dialingIDSDevice
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithDictionary:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
didAddCapabilitiesForSenderIdentityWithUUID:
didChangeCloudCallingDevices
didChangeEmergencyCallbackMode
didChangeEmergencyCallbackPossible
didChangeFaceTimeAudioCallingSupport
didChangeFaceTimeCallingAvailability
didChangeFaceTimeVideoCallingSupport
didChangeOutgoingRelayCallerID
didChangeRelayCallingAvailability
didChangeRelayCallingCapabilities
didChangeRelayCallingFeatures
didChangeServiceProvidersForCarrierBundlePhoneNumberProviderController:
didChangeTelephonyCallingSupport
didChangeThumperCallingCapabilitiesForSenderIdentityWithUUID:
didChangeVoLTECallingCapabilitiesForSenderIdentityWithUUID:
didChangeWiFiCallingCapabilitiesForSenderIdentityWithUUID:
didChangeWiFiCallingProvisionalURLForSenderIdentityWithUUID:
didCleanUp
didCleanUpForStream:
didCleanUpForStream:reply:
didEndSession:startDate:endDate:
didErrorOccur
didPrepareHandler
didReceiveLocallyRequestedMomentDescriptor:
didReceiveResultsForStream:withTransactionID:
didReceiveResultsForStream:withTransactionID:reply:
didReceiveResultsWithTransactionID:
didRemoveCapabilitiesForSenderIdentityWithUUID:
didStartRequestForStream:withTransactionID:
didStartRequestForStream:withTransactionID:reply:
didStartRequestWithTransactionID:
didStopHandler
didUpdateCapabilities:forVideoStreamToken:
digits
disconnect
disconnectActiveCallsBasedOnCallStatusForCall:
disconnectAllCalls
disconnectAllCalls:
disconnectAllCallsBesides:
disconnectCall:whileUngroupingCall:
disconnectCall:withReason:
disconnectCallWithUniqueProxyIdentifier:
disconnectCalls:whileHoldingCalls:andUnholdingCalls:andUngroupingCalls:
disconnectCurrentCallAndActivateHeld
disconnectMessagingConnectionForCall:
disconnectTV:completion:
disconnectTVDevice:completion:
disconnectWithReason:
disconnectedCause
disconnectedReason
displayContext
displayContextByMergingWithDisplayContext:
displayContextChanged:
displayErrorNotificationWithMessage:
displayFirstName
displayHandoffEligibleNearbyByURL
displayID
displayIncomingPinCode:fromID:completionHandler:
displayMismatchedAccountsNotification
displayName
displayNameChanged:
displayPinErrorNotification
displayPinMessageForDevice:completionHandler:
displayPinRequestFailure
displayScale
displayServiceConfirmationWithCompletionHandler:
displaySharePlayUnableToStartAlert
displaySlotsFullNotification
displaySystemCallControlsByURL
displayedAudioAndVideoCalls
displayedCall
displayedCallFromCalls:
displayedCalls
distantPast
dndAllowsCall
doesHandle:correspondToConversationProvider:completionHandler:
doesNotRecognizeSelector:
domain
domainAccessor
donateBiomeSignalIfNecessary
donateEntries:withCompletion:
donateHandles:
donateSignalWithCompletion:
donateUserIntentForCallProviderIdentifier:
donateUserIntentForProviderWithIdentifier:
doubleForKey:
doubleValue
downgradeToAudio
downgradeToOneToOneAfterDelayBlock
dualSimCapabilityDidChange
dummyPayload
duration
dynamicDisplayContext
dynamicIdentifier
dynamicIdentifierForConversation:uplinkMuted:sendingVideo:
effectiveIdentifier
elements
eligibleCallsByFilteringCalls:forClient:
eligibleRouteAvailable
emergency
emergencyCallbackCapabilities
emergencyCallbackCapabilitiesDidChange
emergencyCallbackModeDidChangeForAllSubscriptionsForClient:
emergencyCallbackModeEnabled
emergencyCallbackPossible
emergencyHandles
emergencyHandlesAtIndex:
emergencyHandlesCount
emergencyHandlesType
emergencyLabeledHandles
emergencyLabeledHandlesCount
emergencyLabeledHandlesType
emergencyProvider
emergencyProviderIdentifier
emergencyTUHandles
emergencyTULabeledHandles
enableEmergencyModeIfNecessaryForCall:
enableEmergencyModeWithError:
enabledTopics
enclosedEncryptedType
enclosedEncryptedTypeAsString:
encodeWithCoder:
encryptLetMeInRequest:link:completionHandler:
encryptLetMeInResponse:pseudonym:responseKeyData:
encryptedData
encryptedMessage
endActiveAndAnswerCall:
endActivitySession:onConversationWithUUID:
endAndAnswerAllowed
endCallWithUUID:
endCallWithUUIDAsAnsweredElsewhere:
endCallWithUUIDAsDeclinedElsewhere:
endCallWithUUIDAsLocalHangup:
endChatWithReason:
endEmergencyCallbackMode
endEndingSessions
endHandoffActivity
endHeldAndAnswerCall:
endObserving
endParticipantConfiguration
endRequestWithTransactionID:reply:
endSession
endTransactionIfNecessaryForObject:
endWithError:
endedError
endedReason
endedReasonUserInfo
endedReasonUserInfoForCall:
endpointIDSDestination
endpointIDSDestinationURIs
endpointIDSDestinationURIsAtIndex:
endpointIDSDestinationURIsType
endpointOnCurrentDevice
endpointRapportEffectiveIdentifier
endpointRapportMediaSystemIdentifier
enqueueConversationWaitingForAudioWithConversationUUID:
enqueueOrStartAudioForConversationUUID:
enrollDefaultPairedDevice
enrollDefaultPairedDeviceForAccountID:
enrollDevice:forSenderIdentityUUID:
enteredBackgroundForAllCalls
enteredForegroundForCallWithUniqueProxyIdentifier:
entitledCapabilities
entitlements
enumerateActiveConversations:
enumerateDelegatesUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumerateRoutesInvokingBlock:forRoutesPassingTest:
environment
errorForDisabledPseudonyms
errorForUnregisteredProviderIdentifier:
errorWithDomain:code:userInfo:
eventBlock
exceptionWithName:reason:userInfo:
executableURL
execute:
executeFetchRequest:
executeFetchRequest:error:
executeSessionDidStart
existingCallsHaveMultipleProviders
expanseBTSwitchingEnabled
expanseConduitProxyEnabled
expanseEnabled
expectedAudioEnabled
expectedAudioPaused
expectedEndpointOnMessagingDevice
expectedRelayClientDestination
expectedScreenEnabled
expectedVideoEnabled
expectedVideoPaused
expediteDeferredEndInterruptionForCallWithUUID:
expirationDate
exportedInterface
exportedObject
faceTimeAppViewLinkDetailsURLForPseudonym:
faceTimeAudioAvailable
faceTimeAvailabilityChanged
faceTimeCallSource
faceTimeConversationProviderDelegate
faceTimeDemuxerDelegate
faceTimeIDMatchesAppleID
faceTimeIDSProviderDelegate
faceTimeIDStatus
faceTimeIDStatusRefreshed
faceTimeIMAVProviderDelegate
faceTimeIMAccount
faceTimeIMAccountCallerIDChanged:
faceTimeInviteDemuxer
faceTimeInviteDictionary
faceTimeLaunchForIncomingCallURL
faceTimeMultiwayAvailabilityForDestination:
faceTimeNeedsBackgroundLaunchURL
faceTimePhotosAvailable
faceTimeProvider
faceTimeProviderDelegate
faceTimeShowHandoffEligibleNearbyURL
faceTimeShowInCallUIURL
faceTimeShowSystemCallControlsURL
faceTimeSupported
faceTimeTransportType
faceTimeVideoAvailable
facetimeIDSServiceGenerator
fail
failOutstandingActionsForCallWithUUID:
failureContext
failureContextForChat:
failureReason
fallbackApplicationName
fallbackURL
familyName
featureFlags
fetchApplicationStateForBundleIdentifier:
fetchAutomaticDNDAssertionWithReply:
fetchCallSourceForIdentifier:completion:
fetchCurrentProcessStatesForBundleIdentifier:
fetchCurrentProcessStatesForBundleIdentifier:completion:
fetchServiceProviders
fetchUpcomingNoticeFromQueue
fetchUpcomingNoticeWithCompletionHandler:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileManager
fileTransferController
fileTransferer:didReceiveResourcesAtURL:withMetadata:isZipped:fromIDSDestination:
fileTransferer:didTransferFileAtURL:successfully:
fileURLWithPath:
fileURLWithPath:isDirectory:
fileURLWithPathComponents:
filterClientsEntitledForCapability:andPerformBlock:
filterClientsUsingPredicate:andPerformBlock:
filterClientsUsingPredicate:andPerformBlock:coalescedByIdentifier:
filterGFTaaSCalls
filterStatusForAddresses:forBundleIdentifier:reply:
filterStatusForAddresses:withBundleIdentifier:
filteredArrayUsingPredicate:
filteredOutReason
findConversationLinkMatchingPseudonym:
findOrCreateConversationWithGroupUUID:messagesGroupUUID:remoteMembers:otherInvitedHandles:localMember:remotePushTokens:link:activity:avMode:conversationProvider:
firstIndex
firstObject
firstUnlockCallbacks
flags
floatValue
forceExpanseEnabled
formUnionWithCharacterSet:
forwardInvocation:
frameRate
fromHandle
fromID
fromServer
fromServerStorage
fromStorage
frontmostAudioOrVideoCall
frontmostCall
ftvSpatialAudioEnabled
fulfillWithDateConnected:
fullfillPendingJoinActionsForCallUUIDIfNecessary:
fuzzyPhotoRequestFailureCount
fuzzyPhotoRequestSuccessCount
gameCenterSharePlayIntegration
generateAllInactiveLinks
generateAllInactiveLinksFor:
generateDescriptorInfos
generateDescriptorInfosCount
generateDescriptorInfosType
generateDescriptorVersionSum
generateInactiveLinkFor:afterActivation:
generateLinkForConversationUUID:completionHandler:
generateLinkWithGroupUUID:invitedHandles:originatorHandle:linkLifetimeScope:completionHandler:
generateLinkWithInvitedHandles:originatorHandle:linkLifetimeScope:completionHandler:
generateLinkWithInvitedMemberHandles:linkLifetimeScope:completionHandler:
generatePreviewImageFromData:completionHandler:
generatePseudonymHandleForConversationProvider:expiryDuration:URI:completionHandler:
generatePseudonymHandleForConversationWithExpiryDuration:URI:completionHandler:
generatorDescriptor
generatorDescriptorWithCSDConversationLinkGeneratorDescriptor:
generatorDescriptors
generatorDescriptorsAtIndex:
generatorDescriptorsCount
generatorDescriptorsType
generatorID
generatorVersion
gestureHandler
getActiveContexts:
getActiveLinksWithCreatedOnly:completionHandler:
getActivePairedDevice
getCallCapabilities:error:
getDeliveredNotificationsWithCompletionHandler:
getInactiveLinkForHandle:
getInactiveLinkForHandle:completionHandler:
getInactiveLinkWithCompletionHandler:
getIsAudioPaused:callID:error:
getIsVideoPaused:callID:error:
getLatestRemoteScreenShareAttributesWithCompletionHandler:
getLinkDescriptorWithPseudonym:includeInactive:completionHandler:
getMessagesGroupDetailsForConversationUUID:completionHandler:
getMessagesGroupDetailsForMessagesGroupUUID:completionHandler:
getParticipantIDForAlias:salt:completionHandler:
getPhoneServicesDeviceInfo:
getPickableRoutesForCategory:mode:completion:
getResourceValue:forKey:error:
getScreenSharingAvailableWithCompletionHandler:
getSharePlayAvailableWithCompletionHandler:
getSubscriptionInfoWithError:
getVoicemailInfo:completion:
gftDowngradeToOneToOne
gftaasPseudonymsEnabled:
givenName
greenTeaHandoffTimeout
greenTeaLinksEnabled
groupActivitiesReportsReceived:forConversation:
groupCall:withOtherCall:
groupCallWithUniqueProxyIdentifier:withOtherCallWithUniqueProxyIdentifier:
groupCalls:withCalls:
groupFaceTimeServiceProviderDelegate
groupFacetimeAsAServiceEnabled
groupIDKey
groupNameKey
groupSessionDidTerminate:
groupSessionEnded:withReason:error:
groupSessionProviderCreationBlock
groupUUID
groupWithOtherCall:
guest
guestModeEnabled
guestModeSupported
handle
handleAXSVoiceOverTouchEnabledNotification:
handleActiveAccountsChanged:
handleAnswerCallMessageFromClient:destination:device:
handleApplicationUninstalledNotification:
handleApplicationUnregisteredNotification:
handleAudioInterruptionPropertiesChanged:
handleAudioSessionActivationStateChangedTo:
handleByFullyQualifyingHandle:usingCountryCode:
handleBytesOfDataUsedChanged:forCallWithUniqueProxyIdentifier:callHistoryIdentifier:
handleCallAnsweredElsewhereMessageFromHost:fromPairedDevice:
handleCallConnectedMessageFromHost:
handleCallConnectedNotification:
handleCallDialedMessageFromHost:fromPairedDevice:
handleCallDisconnectedMessageFromHost:
handleCallHasStartedOutgoingChangedNotification:
handleCallHistoryDatabaseChangedNotification:
handleCallHistoryDatabaseChangedWithNotification:
handleCallMayRequireBreakBeforeMakeChangedNotification:
handleCallOneToOneModeChangedNotification:
handleCallSourcesChanged
handleCallStartedConnectingMessageFromHost:
handleCallStartedConnectingNotification:
handleCallStatusChanged:
handleCallStatusChangedNotification:
handleCallUpgradedToVideoNotification:
handleCallWantsHoldMusicChangedNotification:
handleChatCallInfoChangedNotification:
handleChatConferenceIDChangedNotification:
handleChatConferenceMetadataUpdated:
handleChatFirstRemoteFrameArrived:
handleChatInFrequencyChangedNotification:
handleChatInvitationSent:
handleChatMayRequireBreakBeforeMakeChanged:
handleChatOutFrequencyChangedNotification:
handleChatStateChanged:
handleClientDisconnected:
handleContinueHandoffAudioRouteNotification:
handleConversation:addHighlight:fromHandle:
handleConversation:participantUpdateMessage:fromNormalizedHandle:
handleConversation:receivedActivitySession:fromHandle:
handleConversation:receivedBlobRecoveryRequest:fromHandle:
handleConversation:receivedBlobRecoveryResponse:fromHandle:
handleConversation:receivedEndorsementForMember:fromHandle:
handleConversation:registerMessagesGroupUUIDMessage:fromNormalizedHandle:
handleConversation:removeActivitySession:fromHandle:
handleConversation:removeHighlight:fromHandle:
handleConversation:updateActivity:fromHandle:
handleConversation:updateActivityImage:fromHandle:
handleConversation:updateGuestMode:fromHandle:
handleConversationHandoffRecommendationChangedNotification:
handleConversationHandoffRouteIdentifierChangedNotification:
handleCurrentCallsChanged:callDisconnected:
handleDeclineMessage:forConversation:fromHandle:withUpdate:
handleDelegatedPendingMember:forConversation:withGroupUUID:from:transactionUUID:
handleDeviceUnavailableMessageFromHost:
handleDialCallMessageFromClient:destination:device:completion:
handleDisconnectAllCallsMessageFromClient:
handleDisconnectCallMessageFromClient:
handleDisconnectCurrentCallAndActivateHeldMessageFromClient:
handleEncryptedLetMeInRequest:fromHandle:context:
handleEncryptedLetMeInResponse:fromHandle:context:
handleEncryptedMessageWithin:fromHandle:context:
handleEndActiveAndAnswerMessageFromClient:
handleEndHeldAndAnswerMessageFromClient:
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleForIdentifier:error:
handleFrequencyChangedTo:inDirection:forCallsWithUniqueProxyIdentifiers:
handleFrequencyDataChanged:inDirection:forCalls:
handleGroupCallMessageFromClient:
handleHardPauseDigitsAvailabilityMessageFromHost:
handleHoldActiveAndAnswerMessageFromClient:
handleHoldCallMessageFromClient:
handleIDSDeviceListChangedNotification:
handleIncomingCallMessageFromHost:fromPairedDevice:
handleInvitationMessage:forConversation:fromHandle:
handleInvitationMessageForLetMeIn:forConversation:pendingConversation:link:fromHandle:
handleInvitationSentMessageFromHost:
handleLocalApprovalOfMember:forConversation:
handleLocalFrequencyChanged:
handleLocalMeterLevelChanged:
handleLocalRejectionOfMember:forConversation:
handleLocalRoutesByUniqueIdentifierUpdated:
handleMessage:forConversation:fromHandle:withUpdate:
handleMeterLevelChanged:inDirection:forCalls:
handleMeterLevelChangedTo:inDirection:forCallsWithUniqueProxyIdentifiers:
handleMutedChanged:
handleNeedsManualInCallSoundsChangeMessageFromHost:
handleNewPendingMember:responseKey:forConversation:withLink:dateInitiatedLMI:
handleNicknameUpdateMessage:forConversation:fromHandle:withUpdate:
handleNotificationName:forCallWithUniqueProxyIdentifier:userInfo:
handlePINCodeEnteredSuccessfully:canceled:fromDevice:isPrimaryDevice:
handlePairedHostDeviceRoutesByUniqueIdentifierUpdated:
handleParticipantWithIdentifier:leftConversationWithGroupUUID:fromHandle:withGroupSessionUpdate:
handleParticipants:joinedConversationWithUpdate:joinContext:fromHandle:
handlePendingMessageDidReceiveCancelNotification:
handlePendingMessageDidReceiveInviteNotification:
handlePickRouteMessageFromClient:
handlePlayDTMFToneForKeyMessage:
handlePullHostedCallsMessageFromClient:destination:completion:
handlePullRelayingCallsMessageFromHost:fromPairedDevice:
handlePushHostedCallsMessageFromHost:completion:
handlePushRelayingCallsMessageFromClient:
handleReceivedLMIDelegateMessage:fromHandle:
handleReceivedLetMeInRequest:toPseudonym:fromHandle:responseKeyData:dateInitiated:
handleReceivedLetMeInResponse:pendingConversation:fromHandle:
handleReceivedLinkCreatedOrChangedMessage:fromHandle:
handleReceivedLinkInvalidatedMessage:fromHandle:
handleReceivedUpdateJoinedMetadataMessage:fromHandle:
handleReceivedVideoUpgradeMessage:forConversation:fromHandle:
handleRemoteApprovalOfMember:forConversation:from:transactionUUID:
handleRemoteFrequencyChanged:
handleRemoteMeterLevelChanged:
handleRemoteRejectionOfMember:forConversation:from:transactionUUID:
handleRemoveMembersMessage:forConversation:
handleRemovedLinkDescriptors:
handleRequestActionMessage:
handleRequestCallContextMessageFromClient:
handleRequestResultWithMomentDescriptor:
handleRequestedAnswerMessage:withBehavior:
handleResetStateMessageFromHost:fromPairedDevice:
handleResetWantsHoldMusicFromHost:
handleRespondedElsewhereMessage:forConversation:fromHandle:
handleRespondedElsewhereMessage:forConversation:fromHandle:withAliases:
handleRoutesByUniqueIdentifierUpdated:
handleSendHardPauseDigitsMessageFromClient:
handleSendingAudioChanged:
handleSessionStateChanged:
handleSetTTYTypeMessage:
handleSetUplinkMutedMessage:
handleSharePlayTrigger:
handleSpringBoardPIDChanged:
handleSuppressRingtoneMessage:
handleSwapCallsMessageFromClient:
handleTrigger:
handleType
handleTypeAsString:
handleTypeForTUHandle:
handleUngroupCallMessageFromClient:
handleUnholdCallMessageFromClient:
handleUpdateCallContextAvailableMessageFromHost:
handleUpdateCallDisplayContextMessageFromHost:
handleUpdateCallModelMessageFromHost:
handleUpdateFailureExpectedMessageFromHost:
handleUpdateRemoteCallStateMessageFromHost:
handleUpdateRemoteUplinkMutedMessageFromHost:
handleUpdateRoutesMessageFromHost:
handleUpdateSupportsEmergencyFallbackMessageFromHost:
handleUpdateSupportsTTYWithVoiceMessageFromHost:
handleUpdateSystemVolumeMessageFromHost:
handleUpdatedPairedHostDeviceRoutes:
handleUpdatedPropertiesAfterChangesInBlock:
handleUpgradeMessage:forConversation:fromHandle:withUpdate:
handleUserInteractionsWithBlock:
handleWithDestinationID:
handleWithTUHandle:
handleWithTULabeledHandle:
handlesWithTUHandles:
handoffActivityUserInfo
handoffAudioController
handoffAudioDeviceTimeout
handoffContext
handoffDynamicIdentifier
handoffEligibility
handoffEligibleConversation
handoffIdentifier
handoffIdentifierAtIndex:
handoffIdentifierType
handoffIdentifiers
handoffIdentifiersCount
handoffRecipientParticipant
handoffUPlusOneLeaveDelay
handoffUPlusOneLeaveTimeout
hardPause
hardPauseAvailable
hardPauseDigitsState
hardPauseState
hardwareControlsBroadcaster
hasAccountUUIDString
hasActionDescription
hasActiveAccounts
hasActiveAudioSession
hasActivity
hasActivityContext
hasActivityIdentifier
hasActivityMetadata
hasActivitySession
hasAddCallAllowed
hasAlias:
hasAmbiguityState
hasApplicationContext
hasAssociatedPseudonym
hasAssociation
hasAssociationVoucher
hasAudio
hasAudioFinished
hasAudioInterruption
hasAudioRouteUniqueIdentifier
hasAvMode
hasAvcData
hasAvcIdentifier
hasBeenExpiredForAtLeast:
hasBeenRedirected
hasBeenUnlockedBlock
hasBundleIdentifier
hasBundleURLString
hasCallDirectoryExtensionIdentifier
hasCallDirectoryLabel
hasCallDirectoryLocalizedExtensionContainingAppName
hasCallStartedConnectingWithUUID:
hasCalledStop
hasCallerNameFromNetwork
hasCellularSettingsRemediation
hasCheckInMessage
hasCleanedUp
hasCollaborationIdentifier
hasCompanyName
hasCompletedDescription
hasConnected
hasContactIdentifier
hasContactName
hasContextIdentifier
hasConversationGroupUUIDString
hasConversationID
hasConversationMessageBytes
hasConversationProviderIdentifier
hasCreationDateEpochTime
hasCurrentAudioCalls
hasCurrentVideoCalls
hasDateAndTimeSettingsRemediation
hasDestinationID
hasDeviceType
hasDisconnectedReason
hasEnclosedEncryptedType
hasEncryptedData
hasEncryptedMessage
hasEndAndAnswerAllowed
hasEnded
hasFaceTimeAudioAvailable
hasFaceTimeVideoAvailable
hasFallbackApplicationName
hasFallbackURL
hasFamilyName
hasFromHandle
hasGeneratorDescriptor
hasGeneratorID
hasGeneratorVersion
hasGivenName
hasGroupUUIDString
hasGuestModeEnabled
hasHandle
hasHandleType
hasHardPauseAvailable
hasHardPauseDigits
hasHardPauseState
hasHighlightIdentifier
hasHoldAllowed
hasHoldAndAnswerAllowed
hasHostCallCreationTime
hasIdentifier
hasIdentifier:
hasIdentifierUUIDString
hasImage
hasInitiator
hasInviteData
hasIsActivated
hasIsGFTDowngradeToOneToOneAvailable
hasIsGondolaCallingAvailable
hasIsLetMeInApproved
hasIsLightweight
hasIsMirageAvailable
hasIsMomentsAvailable
hasIsScreenSharingAvailable
hasIsSystemActivity
hasIsUPlusNDowngradeAvailable
hasIsUPlusOneScreenSharingAvailable
hasIsoCountryCode
hasJoined
hasJoinedMetadata
hasLabel
hasLeaveReason
hasLetMeInDelegationHandle
hasLetMeInDelegationUUID
hasLightweightPrimary
hasLightweightPrimaryParticipantID
hasLinkLifetimeScope
hasLinkName
hasLocalMember
hasLocalSenderIdentityAccountUUIDString
hasLocalSenderIdentityUUIDString
hasLocalizedName
hasLocalizedServiceName
hasLocalizedShortName
hasLocallyCreated
hasLocation
hasLocationSettingsRemediation
hasMapName
hasMaximumCallGroups
hasMaximumCallsPerCallGroup
hasMediaBlob
hasMergeable
hasMessage
hasMessageSendTime
hasMessagesGroupName
hasMessagesGroupUUIDString
hasMetadata
hasMiddleName
hasMirageHandshakeData
hasNamePrefix
hasNameSuffix
hasNickname
hasNotificationStyles
hasOBSOLETEProtoMomentsAvailable
hasOngoingDescription
hasOptions
hasOriginalRingtoneSoundURLString
hasOriginatorHandle
hasParticipantAssociation
hasPhoneticRepresentation
hasPreferredBroadcastingAttributes
hasPrefix:
hasPrimaryAvcIdentifier
hasPrimaryHandle
hasPrimaryIdentifier
hasPrivateKey
hasProtoCallCapabilitiesState
hasProtoCallModel
hasProtoCallModelState
hasProtoCannotBeAnswered
hasProtoCannotRelayAudioOrVideoOnPairedDevice
hasProtoConferenced
hasProtoCurrentlyPicked
hasProtoDisconnectedReason
hasProtoDisplayContext
hasProtoEmergency
hasProtoExpectedEndpointOnMessagingDevice
hasProtoFailureExpected
hasProtoGuest
hasProtoHasSentInvitation
hasProtoMomentsV2Available
hasProtoOriginatingUIType
hasProtoOutgoing
hasProtoPersonNameComponents
hasProtoPriority
hasProtoProtocolVersion
hasProtoProvider
hasProtoRemoteUplinkMuted
hasProtoSOS
hasProtoSenderMuteUplink
hasProtoShouldSuppressInCallUI
hasProtoShouldSuppressRingtone
hasProtoSoundRegion
hasProtoStatus
hasProtoSupportsEmergencyFallback
hasProtoSupportsRelay
hasProtoSupportsTTYWithVoice
hasProtoTimeConnected
hasProtoUUID
hasProtoUpgradeSessionUUID
hasProtoUplinkMuted
hasProtoVideo
hasProtoVoicemail
hasProtoWantsHoldMusic
hasProtoWantsVideo
hasProviderIdentifier
hasPseudonym
hasPseudonymExpirationDateEpochTime
hasPublicKey
hasQueuedHardPauseDigits
hasReceivedAccept
hasReceivedFirstRemoteFrame
hasReceivedLetMeInRequest
hasReceivedMessageType
hasRecoverMessage
hasRelaySupport:
hasReportData
hasRequestActionType
hasRequestBlobRecoveryOptions
hasRestrictionsInRetailEnvironment
hasRingtoneSoundURLString
hasRoute
hasSKEBlob
hasSceneAssociationBehavior
hasSendToVoicemailAllowed
hasSender
hasSentInvitation
hasSet
hasSharePlayProtocolVersion
hasShouldAssociateScene
hasShouldCheckAllGenerators
hasShouldSuppressInCallUI
hasSourceIdentifier
hasStagedActivitySession
hasStarted
hasStartedConnecting
hasStartedOutgoing
hasSubtitle
hasSuggestedName
hasSupportsAddCall
hasSupportsAudioAndVideo
hasSupportsAudioOnly
hasSupportsContinuationOnTV
hasSupportsEmergency
hasSupportsGrouping
hasSupportsHolding
hasSupportsLeaveContext
hasSupportsRecents
hasSupportsSendingToVoicemail
hasSupportsUnambiguousMultiPartyState
hasSupportsUngrouping
hasSupportsVoicemail
hasSwappable
hasTakingCallsPrivateAllowed
hasTargetContentIdentifier
hasTimebase
hasTimestampAsTimeIntervalSinceReferenceDate
hasTitle
hasTokenPrefixedURI
hasUUIDString
hasUniqueIdentifier
hasUniqueProxyIdentifier
hasUnsafeData
hasUpdateMessage
hasUpdatedDateEpochTime
hasValidationSource
hasValue
hasVersion
hasVideo
hasVoIPBackgroundMode
hasVoIPNetworkExtensionEntitlement
hasWiFiSettingsRemediation
hash
held
highlightIdentifier
hold
holdActiveAndAnswerCall:
holdAllowed
holdAndAnswerAllowed
holdCall:
holdCallWithUniqueProxyIdentifier:
holdCalls:whileUnholdingCalls:
host
hostCallCreationTime
hostMessagingDelegate
hostOnCurrentDevice
iCloudAccount
iconTemplateImageData
iconWithSystemImageName:
identificationCategory
identifier
identifierUUIDString
identifierWithPid:
identifiers
identifiersForSessionInvitationWithMessage:
identifiersWaitingForAcknowledgement
identifiersWithPendingCoalescingBlocks
identities
identityForEmbeddedApplicationIdentifier:
idsDestination
idsDestinationForActiveParticipant:
idsDeviceFromUniqueID:
idsDeviceID
idsDeviceIdentifier
idsDictionaryRepresentation
idsFirewallBatchSize
idsFirewallCHExpiryTimeDays
idsFromID
idsPeersForHandle:video:completionHandler:
idsQueryController
idsReportsReceived:forConversation:
idsReportsReceived:forSessionWithUUID:
idsService
idsSession
ignoreLMIRequests
ignoreMute
ignoresBluetoothDeviceUID
imAccountForActionBlock
imDaemonDidConnect:
image
imageData
imageURL
imageURLForCXSandboxExtendedURL:
inCallServiceProcessObserver
inCallServiceProcessState
inCallSoundRegion
inEarAudioRouteAvailable
inFrequencyLevel
inProcess_isCallingSupported
inactiveLinkCacheLimit
inactiveLinkPseudonymExpiry
includeMetricsReport:onConversationWithUUID:
includesCallsInRecents
incomingCall
incomingCallFilter
incomingCallInvitationPreferences
incomingCalls
incomingChatGenerator
incomingPendingConversations
incomingPendingConversationsByGroupUUID
incomingPendingConversationsByGroupUUID:
incomingSessionProviderGenerator
incomingVideoCall
indexesOfObjectsPassingTest:
individualAudioVideoToggleEnabled
inflightAVCBlobRecoveryBlocksByIdentifier
init
initAsInitiatorWithSessionProvider:
initAsInitiatorWithSessionProvider:identifiers:
initAsReceiverWithSessionProvider:remoteDestination:remoteDevice:remoteProtocolVersion:identifiers:
initAsReceiverWithSessionProvider:remoteFromID:remoteProtocolVersion:
initAsReceiverWithSessionProvider:remoteProtocolVersion:
initFileURLWithPath:
initForReadingWithError:
initIncomingWithBackingCallSource:UUID:update:
initIncomingWithSession:remoteHandle:wantsVideo:remoteInviteDictionary:
initOutgoingTo:isVideo:isRelayed:GUID:
initOutgoingWithDialRequest:
initOutgoingWithJoinConversationRequest:
initOutgoingWithRequestedStartCallAction:backingCallSource:
initOutgoingWithSession:UUID:remoteHandle:wantsVideo:isRelaying:
initOutgoingWithUpdate:callUUID:backingCallSource:isExpanseProvider:
initWithAVCRequest:session:
initWithAccount:destinations:options:
initWithAccount:destinations:transportType:
initWithAccount:options:
initWithAccountID:primaryDeviceID:phoneNumberURI:availableDeviceSlots:allowedSecondaryDeviceIDs:
initWithActivity:locallyInitiated:timestamp:isFirstJoin:
initWithActivity:uuid:locallyInitiated:timestamp:isFirstJoin:
initWithApplicationController:queue:
initWithArray:
initWithAttributes:
initWithAvailability:photoRequestSuccessCount:photoRequestFailureCount:medianRequestDuration:meanRequestDuration:
initWithAvailability:supportedMediaTypes:
initWithBool:
initWithBundleIDs:states:
initWithBundleIdentifier:
initWithBundleIdentifier:allowPlaceholder:error:
initWithBundleIdentifier:flags:reason:name:
initWithBundleIdentifier:flags:reason:name:withHandler:
initWithBundleIdentifier:metadata:applicationContext:activityIdentifier:
initWithBundleIdentifier:metadata:applicationContext:uuid:activityIdentifier:fallbackApplicationName:
initWithBundleIdentifier:pid:
initWithBundleIdentifiers:queue:
initWithBundleType:
initWithBytesNoCopy:length:freeWhenDone:
initWithCHManager:
initWithCHManager:queue:
initWithCall:
initWithCall:contactIdentifier:serialQueue:
initWithCallCapabilitiesState:
initWithCallCenter:
initWithCallCenterObserver:
initWithCallCenterObserver:inCallServiceProcessObserver:springBoardProcessObserver:callCenter:featureFlags:queue:
initWithCallCenterObserver:transactionManager:queue:
initWithCallDisplayContext:
initWithCallFilterController:
initWithCallHistoryController:
initWithCallSource:configuration:
initWithCallSource:queue:
initWithCallSource:queue:featureFlags:shouldUseIDSDemuxer:
initWithCallStateController:queue:
initWithCallType:callState:copresenceActivityType:
initWithCallUUID:
initWithCallUUID:attributes:
initWithCallUUID:callUUIDToGroupWith:
initWithCallUUID:digits:type:
initWithCallUUID:groupUUID:
initWithCallUUID:handle:
initWithCallUUID:muted:
initWithCallUUID:onHold:
initWithCallUUID:relaying:
initWithCallUUID:sendingVideo:
initWithCallUUID:ttyType:
initWithCallUUID:videoEnabled:
initWithCallUUID:videoPresentationSize:
initWithCallUUID:videoPresentationState:
initWithCalls:
initWithCapabilities:callSource:queue:
initWithCapabilities:queue:
initWithCapabilityInfo:
initWithCapacity:
initWithCategory:mode:
initWithChar:
initWithClientUUID:transportType:
initWithCoder:
initWithConduit:
initWithConfiguration:
initWithConfiguration:callSource:
initWithConnection:queue:
initWithContactProvider:
initWithContactsDataSource:
initWithContentsOfURL:error:
initWithContentsOfURL:options:error:
initWithContext:linkMetadata:fallbackURL:invitationURL:supportsContinuationOnTV:title:subTitle:imageData:preferredBroadcastingAttributes:sceneAssociationBehavior:
initWithContextIdentifier:actionDescription:ongoingDescription:completedDescription:
initWithConversation:
initWithConversationID:timebase:
initWithConversationLink:localMember:queue:
initWithConversationLink:otherInvitedHandles:sendLetMeInRequest:
initWithConversationManager:featureFlags:
initWithConversationManager:queue:invitationResolver:
initWithConversationProviderManager:
initWithData:
initWithDataSource:
initWithDataSource:deviceLockObserver:callCenterObserver:callDirectoryStoreBuilder:queue:
initWithDataSource:queue:appPolicyManager:
initWithDataSource:serialQueue:featureFlags:
initWithDataSources:queue:
initWithDelegate:
initWithDelegate:queue:
initWithDelegate:withConfig:
initWithDescriptor:
initWithDestination:
initWithDestinationID:
initWithDialRequest:
initWithDictionary:
initWithDictionaryRepresentation:
initWithDigits:countryCode:
initWithDigits:isHardPause:
initWithDisplayContext:call:serialQueue:
initWithDomain:code:userInfo:
initWithEncryptedMessage:enclosedType:link:
initWithEnvironmentName:namedDelegatePort:queue:
initWithExplanation:target:attributes:
initWithExportedObject:
initWithFaceTimeIDSChat:
initWithFaceTimeInviteDictionary:
initWithFeatureFlags:
initWithFormat:arguments:
initWithGroupID:participantDestinationIDs:callerID:account:queue:isOneToOneModeEnabled:isLightweightMember:avLess:
initWithGroupSessionProvider:
initWithGroupSessionProvider:featureFlags:
initWithGroupUUID:originator:pseudonym:publicKey:
initWithHandle:label:isSuggested:
initWithHandle:nickname:
initWithHandle:nickname:joinedFromLetMeIn:
initWithHandle:tokenPrefixedURI:data:encryptedData:
initWithHandleType:notificationStyles:
initWithHandoffActivityUserInfo:
initWithHandoffContext:backingCallSource:
initWithHandoffIdentifier:
initWithIDSChat:
initWithIDSDevice:
initWithIDSDictionaryRepresentation:
initWithIMAVChat:
initWithIdentifier:
initWithIdentifier:bundleIdentifier:
initWithIdentifier:bundleIdentifier:fallbackLocalizedName:
initWithIdentifier:context:
initWithIdentifier:groupUUID:activities:applicationController:delegate:queue:systemStateObserver:
initWithIdentifier:handle:
initWithIdentifier:handle:avcData:
initWithIdentifier:handle:avcData:senderCorrelationIdentifier:
initWithIdentifier:handle:senderCorrelationIdentifier:
initWithIdentifier:pluginName:
initWithIdentifier:revision:handle:
initWithIdentifier:version:
initWithIdsService:
initWithInputURL:outputURL:identifier:operation:completionBlock:queue:
initWithInt:
initWithInteger:
initWithJoinConversationRequest:
initWithKeysToFetch:
initWithLeaveReason:
initWithLimit:timeLimit:
initWithLongLong:
initWithMachServiceName:
initWithManager:
initWithMessage:assertion:applicationShouldPostIncomingCall:
initWithMetadata:applicationContext:uuid:activityIdentifier:
initWithMoments:remoteIDSDestinations:callCenterObserver:
initWithName:
initWithName:error:
initWithName:knownIdentifiers:deviceModel:capabilities:
initWithName:service:
initWithName:service:queryController:
initWithNotificationCenter:
initWithNotificationName:queue:callback:
initWithNotifyObserver:queue:
initWithObject:queue:
initWithObjectsAndKeys:
initWithParticipantID:data:delegate:queue:
initWithPersonNameComponents:
initWithPhotosAppAssetIdentifier:
initWithPredicate:context:
initWithPrefixedURI:
initWithPriority:
initWithProvider:
initWithProviderIdentifier:
initWithProviderManager:
initWithPseudonym:publicKey:groupUUID:originatorHandle:
initWithPseudonym:publicKey:groupUUID:originatorHandle:creationDate:expirationDate:invitedMemberHandles:locallyCreated:linkName:linkLifetimeScope:
initWithQueue:
initWithQueue:UUID:groupUUID:groupSession:messagesGroupUUID:locallyCreated:localMember:initiator:remoteMembers:pendingMembers:otherInvitedHandles:lightweightMembers:activity:link:report:fromStorage:avMode:applicationController:
initWithQueue:UUID:groupUUID:groupSession:messagesGroupUUID:locallyCreated:localMember:initiator:remoteMembers:pendingMembers:otherInvitedHandles:lightweightMembers:activity:link:report:fromStorage:avMode:applicationController:featureFlags:systemStateObserver:applicationPolicyManager:
initWithQueue:activityCommunicator:callCenter:featureFlags:
initWithQueue:block:
initWithQueue:callContainer:sessionMessenger:
initWithQueue:conversationManager:callCenter:
initWithQueue:conversationManager:networkSupport:serverBag:featureFlags:invitationResolver:
initWithQueue:coreTelephonyClient:emergencyCallbackCapabilities:
initWithQueue:featureFlags:
initWithQueue:fileTransferController:mediaAssetManager:callCenterObserver:
initWithQueue:proximitySensorObserver:voiceOverObserver:
initWithQueue:reportingController:persistenceController:linkManager:cpApplicationController:invitationResolver:pendingMembershipTracker:featureFlags:applicationPolicyManager:
initWithQueue:reportingController:persistenceController:linkManager:invitationResolver:pendingMembershipTracker:featureFlags:
initWithQueue:routeController:callCenterObserver:interfaceOrientationObserver:proximitySensorObserver:voiceOverObserver:
initWithQueue:shouldRegisterForECBMNotification:
initWithRelayInviteDictionary:
initWithRelayMessage:outgoing:
initWithRelayService:thumperService:
initWithRemoteMembers:otherInvitedHandles:
initWithReportingController:cpApplicationController:invitationResolver:
initWithRequiredCapabilities:requiredMissingCapabilities:
initWithResolver:withSystemStatusPublisher:queue:
initWithSenderIdentityUUID:
initWithSerialQueue:
initWithSerialQueue:timeout:
initWithService:
initWithService:account:accessGroup:
initWithService:chManager:featureFlags:serverBag:queue:
initWithService:queue:
initWithServiceName:
initWithSession:queue:
initWithSession:remoteHandle:wantsVideo:
initWithSessionCreationBlock:transportToken:delegate:queue:reportingHierarchyToken:avMode:videoEnabled:captureSessionCreationBlock:
initWithSessionInfo:userInfo:frameworksToCheck:
initWithSessionProvider:
initWithSessionProvider:isInitiator:remoteDestination:remoteDevice:remoteProtocolVersion:identifiers:
initWithSessionProvider:isInitiator:remoteFromID:remoteProtocolVersion:
initWithSessionProvider:isInitiator:remoteProtocolVersion:
initWithSessionUUID:originator:type:
initWithSet:
initWithSoundType:provider:video:region:
initWithSourceVersion:
initWithStartCallAction:
initWithStreamToken:
initWithStreamToken:requesterID:
initWithStreamToken:requesterID:delegate:dispatchQueue:
initWithSuiteName:
initWithTUConversation:
initWithTUConversationReport:
initWithTURoute:
initWithTUSenderIdentity:
initWithTargetContentIdentifier:shouldAssociateScene:
initWithTimeIntervalSince1970:
initWithTimeIntervalSinceReferenceDate:
initWithTinCanIDSChat:
initWithTransportToken:configuration:delegate:queue:
initWithTransportToken:delegate:queue:reportingHierarchyToken:oneToOneModeEnabled:avMode:videoEnabled:report:serviceName:
initWithTransportType:payload:
initWithType:
initWithType:groupUUID:link:
initWithType:uniqueProxyIdentifier:
initWithType:value:
initWithType:value:normalizedValue:
initWithType:value:siriDisplayName:
initWithURI:andLastSeenDate:
initWithUUID:
initWithUUID:accountUUID:ISOCountryCode:localizedName:localizedShortName:localizedServiceName:handle:
initWithUUID:andAccountID:andSlot:
initWithUUID:carrierPhoneNumbers:
initWithUUID:description:serviceName:isoCountryCode:handle:shortLabel:
initWithUUID:groupUUID:
initWithUUID:groupUUID:provider:
initWithUUID:handle:
initWithUUID:isVideo:handle:
initWithUUIDString:
initWithUniqueIdentifier:name:
initWithUniqueProxyIdentifier:
initWithUniqueProxyIdentifier:configuration:
initWithUniqueProxyIdentifier:endpointOnCurrentDevice:
initWithUniqueProxyIdentifier:endpointOnCurrentDevice:notificationCenter:
initWithUnprefixedURI:
initWithUnsignedLongLong:
initWithVoiceOverObserver:
initWithVoucherManager:
initializeNewCallWithDeviceRole:reportingHierarchyToken:
initiateModernFTInviteForAction:destinations:excludedIMAVDestinations:joinCallActionToFulfill:
initiatePendingConversationForLink:localMember:isVideoEnabled:
initiator
inputAudioPowerSpectrumToken
inputAudioPowerSpectrumTokenForIdentifier:
inputFrequencyMeteringEnabled
insertObject:atIndex:
installedProvidersChangedForDataSource:
instancesRespondToSelector:
intValue
integerForKey:
integerForKey:error:
integerValue
intent
interaction
interfaceOrientationObserver
interfaceOrientationPortrait
interfaceWithProtocol:
interruptionHandler
interruptionPriority
interruptionSuppression
invalidate
invalidateAndRefreshThumperCallingCapabilitiesForSenderIdentityWithUUID:
invalidateAndRefreshThumperCallingProvisioningURLForSenderIdentityWithUUID:
invalidateAndRefreshVoLTECallingCapabilitiesForSenderIdentityWithUUID:
invalidateAndRefreshWiFiCallingCapabilitiesForSenderIdentityWithUUID:
invalidateAndRefreshWiFiCallingProvisioningURLForSenderIdentityWithUUID:
invalidateLink:userInteraction:completionHandler:
invalidateLinkWithPseudonym:userInteraction:completionHandler:
invalidateProcessAssertionForBundleIdentifier:
invalidateProcessAssertionForBundleIdentifier:completion:
invalidateProvisioningURL
invalidateTokenForTopic:identifier:
invalidationHandler
invitation
invitationPreferenceWithTUConversationInvitationPreference:
invitationPreferences
invitationPreferencesAtIndex:
invitationPreferencesCount
invitationPreferencesType
invitationResolver
invitationTimeOut
invitationTimeout
invite:additionalPeers:excludingPushTokens:
inviteCompletion
inviteData
inviteDictionaryForCallID:remoteInviteDictionary:nonCellularCandidateTimeout:block:queue:
inviteFailedFromIMHandle:reason:
inviteIDSPeersWithAction:destinations:joinCallActionToFulfill:completion:
inviteIMAVPeersWithAction:tokensToExclude:joinCallActionToFulfill:
inviteTV:toConversation:completion:
inviteTVDevice:toConversation:completion:
invitedHandles
invitedHandlesAtIndex:
invitedHandlesCount
invitedHandlesType
invitedMemberHandles
invitedPushTokens
invitedToIMAVChat:
invoke
invokeDidPrepareIfNecessary:
invokeDidStartIfNecessary:error:
isA2DPRoute
isAVLess
isActivated
isActive
isAirTunes
isAirTunesRouteAvailable
isAnyBluetoothHeadphoneRouteAvailableForAnyCall
isAnyOtherAccountDeviceActive
isAnyPreferredRouteAvailableAndActive
isAnyRouteAvailableWithBluetoothEndpointType:
isAnyRouteAvailableWithUniqueIdentifier:
isAnyRouteAvailableWithUniqueIdentifier:forCall:
isAnyVehicleRouteAvailableForAnyCall
isAnyVehicleRouteAvailableForCall:
isApproved
isAssociated
isAudioAccessoryDevice
isAudioEnabled
isAudioMuted
isAudioMutedForHoldMusic
isAudioPaused
isAudioReady
isAudioSessionActive
isAutomaticUpgradingEnabled
isBeforeDate:
isBlocked
isBluetooth
isBluetoothLE
isBluetoothRouteAvailable
isCSCallingAvailable
isCallEligible:forClient:
isCaller
isCaptioningEnable
isCarAudio
isCarAudioRouteAvailable
isCarPlayConnected
isCarPlayDeviceConnected
isCarPlayRouteAvailable
isCellularDataAllowed
isCellularDataAllowedForChat:
isCellularDataAvailable
isCellularDataPreferred
isClientAllowed:
isComplete
isConferenced
isConnected
isConnecting
isConversation
isCovered
isCurrentlyPicked
isDefaultPairedDevice
isDefaultProvider
isDefaultVoiceSIM
isDestinationIDAllowedThroughDoNotDisturb:providerIdentifier:
isDetectingRaiseToAnswer
isDeviceInAltMode
isDevicePasscodeLocked
isDeviceSupported
isDialAssisted
isDirectFaceTimeAudioCallingCurrentlyAvailable
isDirectFaceTimeVideoCallingCurrentlyAvailable
isDirectTelephonyCallingCurrentlyAvailable
isEligibleForCall
isEligibleForHandoff
isEligibleRouteAvailable
isEligibleRouteAvailableForCall:
isEmergency
isEmergencyCallbackModeEnabled
isEmergencyCallbackPossible
isEmergencyCallingOnWifiAvailable
isEnabled
isEndpointOnCurrentDevice
isEntitledForCapability:
isEqual:
isEqualToAccount:
isEqualToCall:
isEqualToCallProvider:
isEqualToCapabilities:
isEqualToConversationLink:
isEqualToConversationProvider:
isEqualToData:
isEqualToHandle:
isEqualToIgnoringCase:
isEqualToMessage:
isEqualToNumber:
isEqualToParticipant:
isEqualToSet:
isEqualToString:
isEqualToTransport:
isEquivalentToDeviceHandle:
isEquivalentToHandle:
isEquivalentToPseudonym:andPublicKey:
isExhausted
isExpanseConduitProxyEnabled
isExpanseProvider
isExpectedEndpointOnMessagingDevice
isFaceTimeAudioAvailable
isFaceTimePhotosAvailable
isFaceTimePhotosEnabled
isFaceTimePhotosRestricted
isFaceTimePhotosXPCServiceEnabled
isFaceTimeProvider
isFaceTimeVideoAvailable
isFailureExpected
isFileURL
isFromStorage
isGFTDowngradeToOneToOneAvailable
isGestureServiceAvailable
isGondolaCallingAvailable
isGreenTea
isGuestModeEnabled
isGuestModeSupported
isHSATrusted
isHandleLocalPseudonym:provider:
isHandleStringLocalPseudonym:
isHandleStringLocalPseudonym:provider:
isHardPause
isHeld
isHoldAndAnswerAllowed
isHost
isHostedOnCurrentDevice
isIMDaemonConnected
isInCallUIActive
isInCanvas
isInEarAudioRouteAvailable
isIncoming
isIncomingCommunicationBlockedForHandle:
isInitiator
isInstalled
isInterfaceOrientationPortrait
isInvitation
isJoined
isJoiningConversationWithLink
isJunk
isKindOfClass:
isKnownCaller
isLetMeIn
isLetMeInApproved
isLightweight
isLightweightMember
isLightweightPrimaryInitiated
isLoaded
isLocalAccountHandle
isLocalClientActive
isLocalParticipant
isLocallyCreated
isLocallyInitiated
isManagingCallWithUUID:
isManagingPendingConversationForCallWithUUID:
isMediaAllowedForChat:
isMemberOfClass:
isMessageWaiting
isMicrophoneMuted
isMirageAvailable
isModernGFTEnabled
isMomentsAvailable
isMomentsAvailableForChat:
isMomentsDisabled
isMutedForIdentifier:
isMutuallyExclusiveCall
isNearby
isObserving
isOnEmergencyCall
isOnHold
isOneToOneEnabled
isOneToOneHandoffOngoing
isOneToOneModeEnabled
isOnline
isOutgoing
isOutputFrequencyMeteringEnabled
isPTT
isPairedDevice
isPendingConversation
isPermittedToUseBluetoothAccessories
isPermittedToUsePrivateAPI
isPhoneCallAudioCategory:
isPlaceholderActivity
isPlaying
isPreferred
isPreferredAndActive
isPreferredDevice
isPreparedToStop
isPrimary
isProcessSuspended
isProviderForeground:
isProviderInstalled:
isProximitySensorCovered
isProximitySensorEnabled
isPseudonym
isPseudonymHandleForProvider:completionHandler:
isQuickRelaySupported
isRTT
isRaiseToEarGestureEnabled
isRaiseToEarGestureSupported
isRead
isReceiver
isReceiverRouteAvailable
isRedial
isRegistered
isRelayCallingEnabled
isRelayCallingEnabledForDeviceWithID:
isRelayCallingGuaranteed
isRelaying
isRemote
isRemoteAudioEnabled
isRemoteMomentsAvailable
isRemoteScreenEnabledForParticipant:
isRemoteUplinkMuted
isRemoteVideoEnabled
isRemoteVideoPaused
isRepresentedByRemoteMembers:andLink:
isRoamingEnabled
isRunningForegroundForVoIPApplication:
isSOS
isScreenSharingActivity
isScreenSharingAvailable
isSendingAudio
isSendingAudioData
isSendingAudioForIdentifier:
isSendingVideo
isSendingVideoExpected
isServiceEnabledForTelephonySubscriptionLabelIdentifier:
isSharePlayAvailable
isSharePlayVersionCheckEnabled
isSignedIntoiCloud
isSignificantChangeFromAttributes:
isSilenceUnknownFaceTimeCallersEnabled
isSilenceUnknownTelephonyCallersEnabled
isSpeaker
isSpeakerRouteAvailable
isSpeaking
isStaticActivity
isSubscribed
isSupported
isSymbolicLinkAtURL:
isSynchronous
isSystemActivity
isSystemProvider
isTTY
isTelephonyDevice
isTelephonyProvider
isThirdPartyVideo
isThumperCallingSupportedForAccountID:
isThumperRegisteredDeviceID:forThumperAccountID:
isTinCanProvider
isTrackingVoIPCallForBundleIdentifier:
isTranscriptionEnabled
isUPlusNDowngradeAvailable
isUPlusOneScreenShareAvailable
isUPlusOneScreenSharingAvailable
isUnansweredOutgoingOneToOneConversation:
isUnderlyingUplinkMuted
isUnknownAddress:normalizedAddress:forBundleIdentifier:
isUnknownAddress:normalizedAddress:forBundleIdentifier:reply:
isUnknownCall:
isUpgrade
isUpgradingCallWithUUID:
isUplinkMuted
isUsingAirplay
isValidLocalHandle:
isValidLocalHandle:activeLocalHandles:provider:
isValidOutgoingCallerID:
isValidated
isVideoEnabled
isVideoPaused
isVideoPausedToStart
isVideoUpgradeFromCall:
isVisible
isVoLTECallingAvailable
isVoiceMailMWI
isVoicemail
isWaitingForRemoteJoinForConversationUUID:
isWaitingToJoinForConversationUUID:
isWaitingToPruneParticipants
isWatchDevice
isWebCapableFaceTimeAvailableForDestination:
isWiFiAllowed
isWiFiAllowedForChat:
isWiFiCallingAvailable
isWiFiEmergencyCallingAllowed
isWifiCallingAvailable
isWindowed
isWiredHeadphones
isWiredHeadset
isWirelessHeadset
isoCountryCode
item
joinCallAction
joinCallActivity
joinConversationWithConversationRequest:
joinConversationWithRequest:
joinExistingConversationWithUUID:context:
joinRequestForApplicableConversationWithHandoffEligibility:
joinUsingContext:
joinUsingContext:localParticipantAVCData:members:otherInvitedHandles:participantDestinationIDs:link:report:stagedActivitySession:mirageHandshakeBlob:activitySession:
joinWithOptions:
joined
joinedFromLetMeIn
joinedFromLink
joinedMetadata
junkConfidence
keyEnumerator
keyPathForActiveCall
keychainItem
kickMember:
kickMember:conversation:
kickMember:conversationUUID:
kickMemberRetryCount
kickParticipants:
kickedMembers
kickedParticipants
knownIdentifiersByHandleType
label
labeledHandlesForContactWithIdentifier:
lastObject
lastPathComponent
lastRebroadcastTime
lastSavedAccountIDByCapability
latestRecentOutgoingFacetimeCallWithRemoteParticipantHandle:sinceDate:noDeletedCallsPredicate:
latestRemoteAttributes
launchAppForActivitySession:options:completion:
launchAppForDialRequest:completion:
launchAppForDialRequest:reply:
launchApplicationForActivitySessionUUID:completionHandler:
launchApplicationForActivitySessionUUID:forceBackground:completionHandler:
launchScreenSharingAppIfNecessary
leave
leaveAVLessConversationsIfNecessaryForCall:
leaveActivitySession:onConversationWithUUID:
leaveActivitySessionWithUUID:
leaveAllConversations
leaveConversation:withCallUUID:reason:
leaveConversationForCallUUID:endedReason:
leaveConversationWithUUID:
leaveConversationWithUUID:withContext:
leaveGroupSession
leaveGroupSessionWithContext:
leaveGroupSessionWithOptions:
leaveReason
leaveReasonAsString:
leaveUsingContext:
leaveWithOptions:
legacyAddSecondaryThumperDeviceWithIDSDeviceIdentifier:
legacyRecheckAccountStatusForCapability:
legacyRemoveSecondaryThumperDeviceWithIDSDeviceIdentifier:
legacySystemCapabilities
length
letMeInDelegationHandle
letMeInDelegationUUID
letMeInKeyAgreement
letMeInRequestNotificationTimeout
letMeInRequestRecoveryTimeout
letMeInRequestState
letMeInResponseInvitationPreferences
lightweight
lightweightMembers
lightweightMembersAtIndex:
lightweightMembersCount
lightweightMembersType
lightweightPrimary
lightweightPrimaryParticipantIdentifier
lightweightRetryCount
link
linkAtIndex:
linkLifetimeScope
linkLifetimeScopeAsString:
linkManager
linkManager:removedLinkDescriptorsFromIDSSignal:
linkManager:removedLinkDescriptorsFromValidityCheck:
linkManager:updatedLinkDescriptorsFromIDSSignal:
linkManager:updatedLinkDescriptorsFromSync:
linkName
linkPseudonymExpiry
linkSyncRecoverFailureLimit
linkSyncRecoverTimeLimit
linkSyncStateIncludeLinks:WithCompletion:
linkSyncStateWithIncludeLinks:completion:
linkType
linkWithTUConversationLink:includeGroupUUID:
linkedUserURIs
links
linksCount
listenForActivityType:dynamicIdentifier:
listener:shouldAcceptNewConnection:
listeningIdentifiersByActivityType
livePhotoXPCServiceEnabled
loaded
localAccountHandle
localBundleIDForActivityIdentifier:
localCallerID
localCallerIDForProvider
localCapabilities
localClientActive
localConversationParticipantWithDataToSendToDestinationIDs:
localDevice
localDeviceID
localDeviceUniqueID
localInviteDictionary
localLandscapeAspectRatio
localMember
localMemberForProvider:fromHandle:members:lightweightMembers:activeLocalHandles:
localParticipant
localParticipantAssociation
localParticipantData
localParticipantDataToSendToDestinationIDs:
localParticipantDataWithVersion:
localParticipantIdentifier
localParticipantType
localParticipantUUID
localPortraitAspectRatio
localPortraitAspectRatioForChat:
localProvider
localProviderWithIdentifier:
localProvidersByIdentifier
localProvidersByIdentifierForClient:
localProvidersByIdentifierForRemoteClients:
localRouteController
localRoutesByUniqueIdentifier:
localSenderIdentity
localSenderIdentityAccountUUID
localSenderIdentityAccountUUIDString
localSenderIdentityUUID
localSenderIdentityUUIDString
localThumperAccounts
localThumperDeviceID
localizedCallerImageURL
localizedCallerName
localizedDeviceCategory
localizedFailureReason
localizedHandoffRecipientDeviceCategory
localizedLabel
localizedName
localizedServiceName
localizedShortName
localizedStringForKey:value:table:
locallyCreated
location
lockStateNotificationToken
lockStateObserver
lockdownModeEnabled
machOUUIDs
mailboxType
mainBundle
mainDisplay
mainQueue
makeLocalRouteController
makePairedHostDeviceRouteController
manageDesignatedMembers:withType:
mapTableWithKeyOptions:valueOptions:
matchesDefaultProviderIdentifier:
matchingSim
maxActiveParticipantFetchRetries
maxJunkLevel
maxKickMemberRetries
maxRemoteMirageParticipants
maxVideoDecodesAllowed
maximumCallGroups
maximumCallsPerCallGroup
maximumNumberOfInvitedMembers
mayRequireBreakBeforeMake
maybeAddComplementaryAssociationVoucherFor:toLocalMemberOf:completion:
meanFromDoubleNumbers:
meanRequestDuration
mediaAssetManager
mediaBlob
mediaPlaybackOnExternalDevice
mediaPrioritiesChangedForConversation:
mediaRouteIdentifier
mediaServicesWereResetNotification:
mediaSystemIdentifier
mediaType
medianFromNumbers:
medianRequestDuration
memberExistsForParticipantDestination:groupSessionParticipantUpdate:
memberExistsForParticipantDestination:members:
memberHandlesAwaitingInvitesToLink
memberHandlesEligibleForLinkApproval
memberIdentifiers
memberWithHandle:
membersCount
membersType
mergeFrom:
mergeSession:
mergeable
mergedCallUpdate
messageProxy
messageRetryFailedForConversation:
messageRetryIntervalMillis
messageRetryMaxAttempts
messageRetryStartedForConversation:
messageRetrySucceededForConversation:
messagesForMailboxType:limit:offset:error:
messagesForMailboxType:read:limit:offset:error:
messagesGroupName
messagesGroupUUID
messagesGroupUUIDString
messagingConnectionCouldNotEstablishLinkForCalls:didStartConnecting:
messagingConnectionEndedForCalls:didStartConnecting:
messagingConnectionFailedForCalls:didStartConnecting:
messagingHandleTypeFor:
messenger
messenger:handledMessage:fromDestination:device:
messengerConnectionCouldNotEstablishLink:forIdentifiers:didStartConnecting:
messengerConnectionEnded:forIdentifiers:didStartConnecting:
messengerConnectionFailed:forIdentifiers:didStartConnecting:
metadata
methodSignatureForSelector:
middleName
migrateAnnounceCalls
migrateConversationLinkBaseURL
minusSet:
mirageEnabled
mirageHandshakeBlobCreationBlock
mirageHandshakeData
mixesVoiceWithMedia
mobileCodesToISOCountryCode
mobileCountryCode
mobileCountryCodeForSubscription:error:
mobileNetworkCode
mobileNetworkCodeForSubscription:error:
mochiEnabled
mockAudioCategory
mockAudioInterruptionActivationStateObserver
mockAudioInterruptionProviderType
mockAudioMode
mockBackingCallSource
mockBlocked
mockBytesOfDataUsed
mockCall
mockCallDuration
mockCallFromBlock:
mockCallGroupUUID
mockCallRelaySupport
mockCallStatus
mockCallUUID
mockCallWithNotificationCenter:fromBlock:
mockCallerNameFromNetwork
mockConnected
mockConnecting
mockContactIdentifiers
mockConversation
mockDateConnected
mockDisconnectedReason
mockDisplayContext
mockEmergency
mockEndpointOnCurrentDevice
mockFailureExpected
mockHandle
mockHasBeenRedirected
mockHasSentInvitation
mockHasStartedOutgoing
mockHostedOnCurrentDevice
mockInitialLinkType
mockIsThirdPartyVideo
mockIsVideo
mockIsVideoPaused
mockJunkConfidence
mockLocalizedLabel
mockMayRequireBreakBeforeMake
mockNeedsManualInCallSounds
mockOutgoing
mockPrefersExclusiveAccessToCellularNetwork
mockProvider
mockProviderContext
mockProviderErrorCode
mockScreenShareAttributes
mockService
mockSharingScreen
mockShouldSuppressInCallUI
mockSubtype
mockSupportsEmergencyFallback
mockSupportsTTYWithVoice
mockTTYType
mockUniqueProxyIdentifier
mockUplinkWasExplicitlyMuted
mockUsingBaseband
mockVideoStreamToken
mockVoicemail
mode
model
modernGFTEnabled
momentCapturedForStreamToken:requesterID:reply:
moments:capabilitiesDidChange:
moments:didEndProcessingRequest:stillImageURL:movieURL:error:
moments:didEndProcessingRequest:url:error:
moments:didStartProcessingRequest:error:
momentsAvailable
momentsClient
momentsController
momentsController:didCleanUpForStream:
momentsController:didStartRequestForStream:withTransactionID:
momentsController:registeredStream:withAvailability:
momentsControllerClientXPCInterface
momentsControllerServerXPCInterface
momentsGenerator
momentsReportingSession:didGenerateUsageReport:
momentsRequestTimeout
momentsServerDidDisconnect:
momentsStartedRemoteCapture:
monitorForDeath:
monitorWithConfiguration:
mostElevatedApplicationStateForPID:
mostRecentBestAppSuggestion
mostRecentCompletedOneToOneEnabledValue
moveItemAtURL:toURL:error:
multiwaySupported
mutableChats
mutableConversationsByUUID
mutableConversationsRequestingUpgrade
mutableCopy
mutableCopyWithZone:
mutablePendingConversationsByPseudonym
mutablePseudonymsByCallUUID
mutablePseudonymsByRequestIdentifiers
mutableSendDataCallbacksByRequestIdentifiers
muteSessionInput:error:
muted
mutedChangedForConference:
name
namePrefix
nameSuffix
nearbyTVDevicesWithCompletion:
needsManualInCallSounds
negotiationDataForProtocolVersion:
neighborhoodActivityClientXPCInterface
neighborhoodActivityConduitTimeout
neighborhoodActivityServerXPCInterface
networkCountryCode
networkExtensionClient
networkExtensionClientManager
networkExtensionMessageControllerHost:didReceiveIncomingMessage:forBundleIdentifier:
networkExtensionMessageControllerHost:didReceiveIncomingPushToTalkMessage:forBundleIdentifier:
networkExtensionMessageHost
networkSupport
newHierarchyTokenFromParentToken:
newProcessAssertion
newRequestWithMediaType:mode:requesteeID:
nickname
nonInterruptingCalls
nonWifiFaceTimeAvailable
normalizedDeviceType
normalizedEmailAddressHandleForValue:
normalizedGenericHandleForValue:
normalizedHandleWithDestinationID:
normalizedPhoneNumberHandleForValue:isoCountryCode:
notPredicateWithSubpredicate:
noteApprovedHandle:completionHandle:
noteDismissedHandle:completionHandle:
noteItem:
noteReportedNewIncomingVoIPCallForBundleIdentifier:
noticeManager:conversation:participant:addedNotice:
notification
notificationCenter
notificationDisplayInformationForAudioPolicyManager:activity:conversation:
notificationProviderIdentifier
notificationServiceExtensionHost:didReceiveIncomingMessage:forBundleIdentifier:reply:
notificationStyles
notificationStylesByHandleType
notificationThreadIdentifier
notifyClientsOfConversationsByGroupUUIDUpdate
notifyClientsToConnectIfNecessary
notifyDelegatesOfAVModeChanged:toAVMode:forConversation:
notifyDelegatesOfChangedLink:conversation:
notifyDelegatesOfChangedLinkDescriptors:
notifyDelegatesOfInvalidLinkForPendingConversation:
notifyDelegatesOfLetMeInRejectedForPendingConversation:
notifyDelegatesOfNewConversation:fromHandle:
notifyDelegatesOfRemoteScreenShareAttributes:isLocallySharing:
notifyDelegatesOfRemoteScreenShareEndedWithReason:
notifyDelegatesOfRemovedConversationWithUUID:
notifyDelegatesOfTrackedPendingMember:forConversationLink:
notifyDelegatesOfUpdatePendingConversations
notifyObserver
nsExtensionManager
nseMessageHost
numberFromString:
numberValue
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
oBSOLETEConferenceIdentifier
oBSOLETEProtoMomentsAvailable
object
objectAtIndex:
objectAtIndexedSubscript:
objectForBlock
objectForKey:
objectForKey:ofClass:
objectForKey:ofClass:valuesOfClass:
objectForKeyHierarchy:subscriptionContext:error:
objectForKeyedSubscript:
objectsPassingTest:
offrampEnabled
oneToOneHandoffOngoing
oneToOneModeEnabled
ongoingDescription
onlineStatusChangedWithNotification:
openApplication:withOptions:completion:
openApplicationWithBundleIdentifier:configuration:completionHandler:
openApplicationWithBundleIdentifier:message:
openInCallServiceByURL
openTransactions
openUIServiceWithURL:
openUserActivity:usingApplicationRecord:configuration:completionHandler:
openUserActivity:usingApplicationWithBundleIdentifier:frontBoardOptions:completion:
openVoIPApplicationForCall:
optionsWithDictionary:
orPredicateWithSubpredicates:
orderedSet
orderedSetWithCapacity:
orientation
orientationMonitor
originalPauseDigitsString
originalResolution
originalRingtoneSoundURL
originalRingtoneSoundURLString
originalTimestamp
originatingDeviceType
originatingUIType
originator
originatorHandle
originatorTUHandle
otherIMHandle
otherInvitedHandles
otherInvitedHandlesAtIndex:
otherInvitedHandlesCount
otherInvitedHandlesType
otherInvitedTUHandles
otherSessionsRequestNoRingtoneInterruption
otherUniqueProxyIdentifiers
otherUniqueProxyIdentifiersAtIndex:
otherUniqueProxyIdentifiersCount
outFrequencyLevel
outgoing
outgoingCallFromDialRequest:
outgoingCallerID
outgoingCallerIDChanged
outgoingChatGenerator
outgoingLocalParticipantUUID
outgoingPinRequestIdentifier
outgoingRelayCallerID
outgoingResponseIdentifier
outgoingSessionProviderGenerator
outputAudioPowerSpectrumToken
outputAudioPowerSpectrumTokenForIdentifier:
outputFrequencyMeteringEnabled
outstandingMessages
overrideOutputAudioPort:error:
pairedDevice
pairedDeviceExists
pairedDeviceMessenger
pairedDeviceUniqueIDOverride
pairedDeviceUniqueIDOverrideExists
pairedHostDeviceProvidersByIdentifier
pairedHostDeviceProvidersByIdentifierForClient:
pairedHostDeviceProvidersByIdentifierForRemoteClients:
pairedHostDeviceRoutesByUniqueIdentifier:
pairedHostDeviceState
participant:audioEnabled:didSucceed:error:
participant:audioPaused:didSucceed:error:
participant:mediaPrioritiesDidChange:
participant:mediaStateDidChange:forMediaType:didSucceed:error:
participant:remoteAudioEnabledDidChange:
participant:remoteAudioPausedDidChange:
participant:remoteMediaStateDidChange:forMediaType:
participant:remoteScreenEnabledDidChange:
participant:remoteVideoEnabledDidChange:
participant:remoteVideoPausedDidChange:
participant:screenEnabled:didSucceed:error:
participant:spatialAudioSourceIDDidChange:
participant:videoEnabled:didSucceed:error:
participant:videoPaused:didSucceed:error:
participantAssociation
participantDestinationID
participantDestinationIDs
participantGroupUUID
participantID
participantIDForAlias:salt:
participantIDForAlias:salt:completion:
participantIDs
participantIdentifier
participantPushToken
participantRefreshBlock
participantURI
participantUpdateSanitizer
participantUpdateSubtype
participantUpdateType
participantUpdatedForSession:
participantWithCSDConversationJoinContext:
participantWithCSDConversationParticipant:
path
pathComponents
pathExtension
pauseDigits
pauseDigitsQueue
pauseDigitsQueueChanged:
pauseVideoToStart
pendData:completion:
pendingAllowedMembers
pendingCallActionsOfClass:withCallUUID:
pendingCallsToChatUUIDs
pendingCodesToDevicesForApproval
pendingCompletions
pendingConversationParticipantsByIdentifier
pendingConversationUUIDForCallWithUUID:
pendingConversationUUIDWithPseudonym:
pendingConversationWithPseudonym:
pendingData
pendingKickedMembersByIdentifier
pendingMemberHandles
pendingMembers
pendingMembersByGroup
pendingMembershipTracker
pendingMembershipTracker:didTrack:forGroupUUID:
pendingMembershipTracker:willAdd:to:using:
pendingMembershipTracker:willNotAdd:to:using:
pendingNetworkExtensionMessageContexts
pendingPulledCallContexts
pendingPushKitVoIPMessageContexts
pendingRemovedParticipantsByID
pendingRequestCount
pendingTransactions
performAnswerCall:withRequest:
performAnswerCallAsAudioDowngrade:withRequest:
performAnswerCallAsVideoUpgrade:withRequest:
performAsynchronousBlock:
performBlock:
performBlock:coalescedByIdentifier:
performBlockAfterCoalescing:
performBlockAfterFirstUnlock:
performBlockOnClients:
performBlockOnClients:coalescedByIdentifier:
performBlockOnQueue:
performBlockOnQueue:andWait:
performBlockOnTransportAvailability:
performBlockOnTransportAvailability:forIdentifier:
performBlockWithClients:
performCallAction:forCall:
performCallActions:forCall:
performChanges:completionHandler:
performDisconnectAllCalls
performDisconnectCall:
performDisconnectCurrentCallAndActivateHeld
performEndActiveAndAnswerCall:withRequest:
performEndHeldAndAnswerCall:withRequest:
performFileCopierOperation:onInputURL:outputURL:completion:
performGroupCall:withCall:
performHoldActiveAndAnswerCall:withRequest:
performHoldCall:
performJoinCallAction:
performJoinConversation:
performPullCallFromClientUsingHandoffActivityUserInfo:completion:
performPullHostedCallsFromPairedHostDevice
performPullRelayingCallsFromClientAndUpdateEndpoint:updateExpectedDestination:
performPushHostedCallsToDestination:
performPushRelayingCallsToHostWithSourceIdentifier:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performSendMMIOrUSSDCodeWithRequest:
performSetTTYType:forCall:
performSetUplinkMuted:forCall:
performSwapCalls
performSynchronousBlock:
performUngroupCall:
performUnholdCall:
performUpdateCallWithProxy:
permitJoin
persistenceController
personFromContact:
personNameComponents
phoneNumber
phoneNumberMCCToISOCountryCodeTransformBlock
phoneNumberURI
phoneNumberWithDigits:countryCode:
phoneServicesCapabilitiesChanged:
phoneticRepresentation
photoRequestDurations
photoRequestFailureCount
photoRequestSuccessCount
pickInitiatorFromParticipants:forUpdate:
pickLocalRouteWithUniqueIdentifier:shouldWaitUntilAvailable:
pickPairedHostDeviceRouteWithUniqueIdentifier:shouldWaitUntilAvailable:
pickRoute:
pickRoute:error:
pickRouteForRapportDeviceWithMediaSystemIdentifier:effectiveIdentifier:
pickRouteWithUniqueIdentifier:shouldWaitUntilAvailable:
pickableRoutesDidChangeNotification:
pickableRoutesForTTY
pickedRoute
pidToCachedProviderIdentifiers
pidToProcessHandle
pidToProviderIdentifiers
pinCodeEnteredSuccessfully:cancelled:onPrimaryDevice:
pinExchangeDelegate
placeholderForCreatedAsset
play
playDTMFToneForCallWithUniqueProxyIdentifier:key:
playLocalDTMFToneForKey:
playRemoteDTMFToneForKey:
playWithCompletionHandler:
plistRepresentation
plugInKitPlugins
pluginName
policyForAddresses:forBundleIdentifier:reply:
postClientNotificationName:
postClientNotificationName:forCall:
postClientNotificationName:forCall:userInfo:
postEndEventForSession:originator:conversation:
postNotificationName:object:
postNotificationName:object:userInfo:
postSessionStartedForSession:originator:conversation:
postUserNotificationForUnsupportedScreenSharingActivity:alternateReponseHandler:
powerAssertionManager
predicateForCallsBetweenStartDate:endDate:
predicateForCallsLessThanDate:
predicateForCallsWithAnyMediaTypes:
predicateForCallsWithAnyServiceProviders:
predicateForCallsWithRemoteParticipantCount:
predicateForCallsWithRemoteParticipantHandle:
predicateForCallsWithRemoteParticipantHandleNormalizedValue:
predicateForCallsWithRemoteParticipantHandleValue:
predicateForCallsWithServiceProvider:
predicateForCallsWithStatusOriginated:
predicateForCallsWithStatusRead:
predicateForCallsWithUniqueID:
predicateForContactsMatchingHandleStrings:
predicateForFilteringOutFaceTimeAudioCalls
predicateForInEarAudioRoute
predicateForPreferredRoute
predicateForUpgrade
predicateMatchingIdentity:
predicateWithBlock:
predicateWithFormat:
preferences
preferencesURL
preferredAccountChanged:
preferredAndActiveRoute
preferredExternalRouteDidChangeNotification:
preferredRoute
preferredRouteForCall:
preferredVoiceSubscriptionUUID
prefersExclusiveAccessToCellularNetwork
prefixedURI
prepareAdditionOfActiveParticipant:toInvitedMembersForLinkOnConversation:
prepareConference
prepareConferenceConnection:remoteInviteDictionary:completion:
prepareConferenceForCall:remoteInviteDictionary:completion:
prepareConnectedSessionsToEnd
prepareSessionToEndForIdentifier:
prepareToDisconnectMessagingConnectionForCall:
prepareToEnd
prepareToStopConferenceForIdentifier:
prepareToStopTimeout
prepareWithConfiguration:
preparedToStop
presentDismissalAlertForActivitySessionWithUUID:
presentDismissalAlertForActivitySessionWithUUID:onConversationWithUUID:
presentSessionDismissalAlertForActivitySessionUUID:allowingCancellation:completionHandler:
presentationInfo
presentationLayoutForGridDisplayMode:
presentationRect
presentationState
presentationStateForConversationWithUUID:
primaryAvcIdentifier
primaryHandle
primaryIdentifier
primaryThumperAccountUsingDevices:outgoingCallerIDURI:requireMatchingCallerIDURI:requireAvailableDeviceSlots:
prioritizedSenderIdentities
prioritizedSenderIdentitiesAtIndex:
prioritizedSenderIdentitiesCount
prioritizedTUSenderIdentities
priority
privateKey
proceedToJoinForConversation:action:
proceedToNewPendingConversationForLink:action:
processAssertion
processAssertionManager
processAssertionNameForBundleIdentifier:
processAssertionWithBundleIdentifier:
processAssertions
processBundleIdentifier
processGroupSessionParticipantUpdate:context:
processHandle
processIdentifier
processIdentifiersForBundleIdentifier:
processInfo
processJoinUpdate:fromHandle:senderCorrelationIdentifier:
processName
processParticipantDataUpdate:fromHandle:
processProxiedGroupUpdate:
processProxiedMessage:fromID:context:
processProxiedResource:metadata:fromID:context:
processStateChanged
processStatesForBundleIdentifier:
processStatesForBundleIdentifier:completion:
processStatesForCallSource:
processStatusChangeAsHandedOffIfNecessaryForCall:
processSuspended
processUpdateMembersUpdate:fromHandle:
processUpdatedNickname:forHandle:conversationUUID:
productionConnection
profileID
prominence
properties
propertiesChanged
propertiesChangedForCall:
propertiesDescription
propertiesDidChangeForConfiguration:
protoCallAtIndex:
protoCallCapabilitiesState
protoCallModel
protoCallModelState
protoCallType
protoCalls
protoCannotBeAnswered
protoCannotRelayAudioOrVideoOnPairedDevice
protoConferenced
protoCurrentlyPicked
protoDTMFKey
protoDisconnectedReason
protoDisplayContext
protoEmergency
protoExpectedEndpointOnMessagingDevice
protoFailureExpected
protoGuest
protoHasSentInvitation
protoMomentsV2Available
protoNeedsManualInCallSounds
protoOriginatingUIType
protoOutgoing
protoPersonNameComponents
protoPriority
protoProtocolVersion
protoProvider
protoRemoteUplinkMuted
protoSOS
protoSenderMuteUplink
protoService
protoShouldSuppressInCallUI
protoShouldSuppressRingtone
protoSoundRegion
protoStatus
protoSupportedHandleTypeAtIndex:
protoSupportedHandleTypes
protoSupportedHandleTypesCount
protoSupportsEmergencyFallback
protoSupportsRelay
protoSupportsTTYWithVoice
protoTTYType
protoTimeConnected
protoUUID
protoUpgradeSessionUUID
protoUplinkMuted
protoVideo
protoVoicemail
protoWantsHoldMusic
provider
provider:didActivateAudioSession:
provider:didDeactivateAudioSession:
provider:executeTransaction:
provider:performAnswerCallAction:
provider:performEnableVideoCallAction:
provider:performEndCallAction:
provider:performJoinCallAction:shouldUseIDSDemuxer:
provider:performPlayDTMFCallAction:
provider:performSendMMIOrUSSDCodeAction:
provider:performSetGroupCallAction:
provider:performSetHeldCallAction:
provider:performSetMutedCallAction:
provider:performSetRelayingCallAction:
provider:performSetScreenShareAttributesCallAction:
provider:performSetSendingVideoCallAction:
provider:performSetSharingScreenCallAction:
provider:performSetTTYTypeCallAction:
provider:performSetVideoPresentationSizeCallAction:
provider:performSetVideoPresentationStateCallAction:
provider:performStartCallAction:
provider:performStartCallAction:shouldUseIDSDemuxer:
provider:timedOutPerformingAction:
providerCallDataSource
providerCallDelegate
providerConfiguration
providerDelegate:callWithUUID:connectedAtDate:
providerDelegate:callWithUUID:endedAtDate:withReason:failureContext:
providerDelegate:callWithUUID:startedConnectingAtDate:
providerDelegate:endOtherProvidersCallWithUUID:
providerDelegate:isExclusivelyManagingCallWithUUID:
providerDelegate:isManagingCallWithUUID:
providerDelegate:requestedTransaction:completion:
providerDelegate:requestedUpgradeToExistingCallForConversation:withSessionToken:completion:
providerDidBegin
providerDidBegin:
providerDidReset:
providerDisplayMonitor
providerEndedReason
providerErrorCode
providerForIdentifier:
providerForRecentCall:
providerIdentifier
providerIdentifierForHandoffActivityUserInfo:
providerIdentifierToProvider
providerIdentifiersForClient:
providerIdentifiersForExistingCalls
providerSource
providerWithIdentifier:
providerWithService:video:
providers
providersAtIndex:
providersByIdentifier
providersByIdentifier:
providersByIdentifierForRemoteClients:
providersChangedForProviderManager:
providersCount
providersType
provisionPseudonymForHandle:featureID:scopeID:expiryDuration:allowedServices:completionHandler:
provisionPseudonymForURI:withProperties:completion:
proximityChangeHandler
proximityController
proximityDetectionMode
proximitySensorCovered
proximitySensorEnabled
proximitySensorObserver
proximitySensorObserver:didChangeCovered:
proxyAVAudioSession
proxyCallWithCall:
proxyGroupUpdate:forConversationManager:
pseudonym
pseudonymAtIndex:
pseudonymExpirationDateEpochTime
pseudonymFeatureID
pseudonymForPseudonymString:
pseudonymForPseudonymURI:
pseudonymPropertiesWithFeatureID:scopeID:expiryDurationInSeconds:
pseudonymType
pseudonyms
pseudonymsByCallUUID
pseudonymsByCallUUID:
publicIdentifier
publicIntentAction
publicKey
publiclyAccessibleCopy
pullCallFromClientUsingHandoffActivityUserInfo:reply:
pullCallWithHandoffActivityUserInfo:completion:
pullHostedCallsFromPairedHostDevice
pullRelayingCallsFromClient
pullRemotelyHostedCallsForMessage:completion:
pushEnvironmentAccordingToLaunchServices
pushHostedCallsForRemoteInviteDictionary:destination:completion:
pushHostedCallsToDestination:
pushKitClient
pushKitClientManager
pushRelayingCallsToHostWithSourceIdentifier:
pushToken
pushTokenForSelf
qrPluginEncryptionEnabled
queryHasWebOnlyEndpointsForDestinations:completionBlock:
queue
queueAddParticipantRetryBlock:withVideoEnabled:screenEnabled:
queueContext
queueItemType
queuedActivitiesOfType:
quickRelaySupported
raise
raise:format:
raiseToAnswerController
raiseToEarGestureHandler
raiseToEarGestureManager
randomSixDigitCode
rangeOfCharacterFromSet:options:range:
rangeOfString:
readFrom:
readPasswordAndReturnError:
rebroadcastTimeThreshold
receivedBroadcastedActivityType:dynamicIdentifier:originatingDeviceType:
receivedFirstRemoteFrameForConference:
receivedInvitationAccept
receivedLetMeInRequestForConversation:
receivedMessageType
receivedMessageTypeAsString:
receivedMessageTypeString
receivedSuccessfulDidStart
receivedTrackedPendingMember:forConversationLink:
receiverRoute
receiverRouteAvailable
recentCallsDeleted:
recentCallsDidChangeForCallHistoryManager:
recentlyDeletedCallUUIDsByConversationUUID
recentlyLeftParticipantIdentifiers
recentsController
recentsManager
recheckAccountStatusForSubscription:capability:
reconnect
reconnectSession
reconnectUPlusOneSession
recoverLinksForPseudonyms:
recoverMessage
rectValue
reducedInfoMembers:
refreshActiveConversations
refreshActiveParticipantsList
refreshDataCryptors
refreshIDStatusForDestination:service:listenerID:queue:completionBlock:
refreshRegistrationForAccount:
regionBasePhoneNumber
regionBlocked
registerActivityType:dynamicIdentifier:
registerCall:
registerChat:
registerConversationProvider:completionHandler:
registerEventID:options:handler:
registerForCallbacksForProvider:completionHandler:
registerForSecureMicEvents
registerLocalProvider:
registerMessagesGroupAssociation
registerMessagesGroupUUIDForConversationUUID:
registerPairedHostDeviceProviders:
registerPluginWithOptions:
registerRequestID:options:handler:
registerSecureMicrophoneEngagedHandler:
registerSplitSessionApprovalEnabled:
registerStreamToken:requesterID:remoteIDSDestinations:remoteMomentsAvailable:reply:
registerVoIPNetworkExtension
registerWithCompletionHandler:
registerWithIDSWithCompletionHandler:
registerXPCClientWithReply:
registeredLocalProvidersByIdentifier
registeredPairedHostDeviceProvidersByIdentifier
registeredStream:withAvailability:
registeredStream:withAvailability:reply:
registeredStreamWithAvailability:
rejectPendingMember:forConversationUUID:
rejectWithError:
relativePath
relayCall:didGroupWithOtherCall:
relayCall:didPlayLocalDTMFToneForKey:
relayCallConferenceDidStartSuccessfullyForOutgoingDialedCall:
relayCallConferenceDidStartSuccessfullyForPulledCall:
relayCallConferenceDidStop:cleanly:error:
relayCallConferenceFailedToStart:
relayCallDataSource
relayCallDelegate
relayCallDidBecomeEndpointForPull:
relayCallDidDial:
relayCallDidDisconnect:
relayCallDidHold:
relayCallDidSendHardPauseDigits:
relayCallDidUngroup:
relayCallDidUnhold:
relayCallingAvailability
relayCallingGuaranteed
relayCallingStateChangedForDataSource:
relayCapableDeviceExists
relayClientController
relayClientTransport
relayCommonController
relayDelegate
relayHostController
relayInviteDictionary
relayMessagingController
relayService
relaying
remote
remoteAudioEnabled
remoteDestination
remoteDevice
remoteFromID
remoteHandle
remoteIDSDestination
remoteIDSDestinations
remoteInviteDictionary
remoteMemberForHandle:
remoteMemberHandles
remoteMembers
remoteMembersAtIndex:
remoteMembersCount
remoteMembersType
remoteMomentsAvailable
remoteObjectInterface
remoteObjectProxy
remoteParticipantForHandle:
remoteParticipantForLightweightParticipantHandle:
remoteParticipantHandles
remoteParticipantHandlesAtIndex:
remoteParticipantHandlesCount
remoteParticipantHandlesType
remoteParticipantTUHandles
remoteParticipantWithIdentifier:didChangeAudioPriority:videoPriority:
remoteParticipantWithIdentifier:updatedAudioEnabled:streamToken:screenToken:captionsToken:
remoteParticipantWithIdentifier:updatedAudioEnabled:updatedVideoEnabled:streamToken:screenToken:captionsToken:
remoteParticipantWithIdentifier:updatedRemoteAudioEnabled:
remoteParticipantWithIdentifier:updatedRemoteVideoEnabled:
remoteParticipantWithIdentifier:updatedScreenEnabled:streamToken:screenToken:captionsToken:
remoteParticipantWithIdentifier:updatedVideoEnabled:streamToken:screenToken:captionsToken:
remoteParticipantsByIdentifier
remoteProtocolVersion
remoteProtocolVersionNumber
remotePushTokens
remoteRequesteeIDSDestinationFor:
remoteRequesterIDSDestinationFor:
remoteScreenEnabled
remoteScreenShareAttributesChanged:isLocallySharing:
remoteScreenShareEndedWithReason:
remoteUplinkMuted
remoteUplinkMutedSetTime
remoteVideoEnabled
remoteVideoPaused
remoteVideoPresentationSize
remoteVideoPresentationState
removeActiveAudioSessionObjectForConversationWithUUID:
removeActiveRequestForTransactionID:
removeActivitySessionIfNecessary
removeActivitySessionWithUUID:usingHandle:
removeActivitySessionWithUUID:usingTerminatingHandle:
removeAllConversations
removeAllEntries:
removeAllFirewallEntries
removeAllObjects
removeAllPendingConversations
removeCall:
removeCallDescriptor:
removeCallFilter:
removeCallerIDFromPreferences
removeClient:
removeConversation:
removeConversationLinkDescriptorsWithPredicate:userInteraction:completion:
removeConversationLinkDescriptorsWithPredicate:userInteraction:error:
removeConversationNoticeWithUUID:
removeConversationWithUUID:
removeDeliveredNotificationsWithIdentifiers:
removeEmergencyAddressDisclaimerOnSecondaryDevice
removeEntries:withCompletion:
removeErrorNotifications
removeFirewallEntries:
removeFromRunLoop
removeIdentifier:
removeIdentifiers:
removeItemAtPath:error:
removeItemAtURL:error:
removeLastObject
removeLink:userInteraction:completionHandler:
removeLinksForFilenamesNotInArray:
removeLinksForFilenamesNotInArray:error:
removeListenerID:forService:
removeLocalClientObject:
removeMembers:fromExistingMembers:activeParticipants:triggeredLocally:
removeNonIndefiniteLinks
removeNotificationsForServiceIdentifier:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectsInArray:
removeObserver:name:object:
removeOutstandingMessagesForBundleIdentifier:
removeParticipant:
removeParticipantWithIdentifier:fromHandle:withReason:
removeParticipantsForMember:
removePendingConversationWithPseudonym:
removePendingData
removePendingMemberMatchingActiveParticipant:conversation:
removePendingMembers:triggeredLocally:
removePseudonym:forCallUUID:
removeRegistrationDelegate:
removeReminderNotificationOnSecondaryDevice
removeRemoteMembers:fromConversationWithUUID:
removeRemoteMembers:triggeredLocally:
removeRequiredCapabilities:requiredLackOfCapabilities:
removeSecondaryThumperDeviceWithIDSDeviceIdentifier:fromSubscription:
removeServiceDelegate:
removeThumperRegisteredDeviceID:forThumperAccountID:
removeVirtualParticipant:
removeVoIPApplication:
removedMembers
removedMembersAtIndex:
removedMembersCount
removedMembersType
renameResourceAtURL:toResourceWithName:
renamedResourceURL:withName:
renewLink:expirationDate:reason:completionHandler:
renewLinkWithPseudonym:expirationDate:completionHandler:
renewPseudonym:expirationDate:completionHandler:
renewPseudonym:forUpdatedExpiryEpoch:completion:
renewPseudonymHandle:expirationDate:completionHandler:
renewPseudonymHandle:forConversationProvider:expirationDate:completionHandler:
renewPseudonymString:expirationDate:completionHandler:
replaceContentForRequestWithIdentifier:replacementContent:completionHandler:
report
reportAction:ofTempURI:fromURI:withCompletion:
reportAllCallsBackgrounded
reportAudioFinishedForCallWithUUID:
reportCallEnteredForeground:
reportCallWithUUID:changedFrequencyData:forDirection:
reportCallWithUUID:changedMeterLevel:forDirection:
reportCallWithUUID:crossDeviceIdentifier:changedBytesOfDataUsed:
reportCallWithUUID:endedAtDate:privateReason:
reportCallWithUUID:endedAtDate:reason:
reportCallWithUUID:failedAtDate:withContext:
reportCallWithUUID:updated:
reportData
reportDataCollectionCompleteIfNecessary
reportLocalPreviewStoppedForCallWithUniqueProxyIdentifier:
reportNewIncomingCallForConversation:fromHandle:
reportNewIncomingCallForConversation:fromHandle:callUUID:
reportNewIncomingCallWithUUID:update:completion:
reportNewOutgoingCallWithUUID:update:
reportOutgoingCallWithUUID:connectedAtDate:
reportOutgoingCallWithUUID:sentInvitationAtDate:
reportOutgoingCallWithUUID:startedConnectingAtDate:
reportProviderFailedWithAction:forCall:
reportRelayMessageReceived:fromPairedDevice:
reportRouteWasPicked:
reportTimedOutPickingRoute:
reportTransactionGroupCompleted:
reporters
reportingController
reportingController:AVCBlobRecoveryStartedForConversation:
reportingController:AVCBlobRecoveryTimedOutForConversation:
reportingController:activeRemoteParticipantsChangedForConversation:
reportingController:addedActivatedLink:
reportingController:addedActiveConversation:
reportingController:avcBlobRequestMessageRetryFailedForConversation:
reportingController:avcBlobRequestMessageRetryStartedForConversation:
reportingController:avcBlobRequestMessageRetrySucceededForConversation:
reportingController:callEnteredForeground:
reportingController:callUUID:withUserScore:
reportingController:capturedMomentsUsageReport:
reportingController:createConversationReportingSessionForConversation:
reportingController:createOneToOneFTReportingSessionForCallWithUUID:withReportingHierarchyToken:withVideo:
reportingController:didEndSession:startDate:endDate:
reportingController:letMeInRequestStateChangedForConversation:
reportingController:messageRetryFailedForConversation:
reportingController:messageRetryStartedForConversation:
reportingController:messageRetrySucceededForConversation:
reportingController:pickedRoute:forCall:
reportingController:providerFailedWithAction:forCall:
reportingController:receivedChat:
reportingController:receivedGroupActivitesReports:forConversation:
reportingController:receivedIDSChat:
reportingController:receivedIDSReports:forConversation:
reportingController:receivedIDSReports:forSessionWithUUID:
reportingController:receivedLetMeInRequestForConversation:
reportingController:receivedReports:forConversation:
reportingController:receivedReports:forSessionWithUUID:
reportingController:relayMessageReceived:fromPairedDevice:
reportingController:remoteMembersChangedForConversation:
reportingController:removedActiveConversation:
reportingController:sentLetMeInResponseForConversation:isApproved:
reportingController:stateChangedForConversation:
reportingController:statusChangedForCall:totalCallCount:
reportingController:timedOutPickingRoute:forCall:
reportingController:transactionGroupCompleted:
reportingController:transitionAttemptForConversation:
reportingController:voipAppBecameDisabledFromLaunching:
reportingController:voipAppFailedToPostIncomingCall:
reportingController:voipPushDroppedOnTheFloor:
reportingControllerServerXPCInterface
reportingHierarchySubToken
reportingHierarchyToken
reportingSessionByStreamToken
requestA2DPOverIncomingCalls
requestActionType
requestActionTypeAsString:
requestActiveParticipants
requestActivityAuthorizationForApplicationWithBundleIdentifier:overrides:completionHandler:
requestAnswerForRequest:forCall:
requestAuthorizationForApplicationLaunchWithActivity:completionHandler:
requestAuthorizationForApplicationWithBundleIdentifier:preparing:overrides:completionHandler:
requestBlobRecoveryOptions
requestCLTMThrottleUncapToken
requestDataCryptorForTopic:completionHandler:
requestEncryptionKeyForParticipants:
requestEncryptionKeyForParticipants:topic:
requestInitialState:
requestLetMeInApprovalForPseudonym:
requestPendingACInvitations
requestPendingVCInvitations
requestPinFromDevice:
requestPinFromPrimaryDevice
requestTimeoutBlockByTransactionID
requestTokenForTopic:identifier:
requestTransaction:completion:
requestVideoUpgradeForCallWithUniqueProxyIdentifier:
requestWithIdentifier:content:trigger:
requestWithIdentifier:content:trigger:destinations:
requesteeID
requesterID
requiredCapabilities
requiredConnectionCapability
requiredIDStatusForDestinations:service:listenerID:queue:completionBlock:
requiredLackOfCapabilities
requiresAuthentication
requiresInCallSounds
requiresInviteDictionary
resetAudioSessionOutputPortOverride
resetCallProvisionalStates
resetClientCallProvisionalStates
resetNonScreenSharingSessions
resetOneTimeMessage
resetSelectiveSharingSessionContent
resetSessions
resignCurrent
resolutionChangedForResolver:
resolveBehaviorForEventDetails:error:
resolvedAVLessConversation
resolvedAudioVideoMode
resolvedCall
resolvedConversation
resolvedDescriptor
resolvedHandoffEligibleConversation
resolver
respondsToSelector:
response
responseInformation
resume
retain
retainCount
retreiveActiveConversations
retrieveFirewallAndAddEntries:
retrieveFirewallWithQueue:completion:
retrievePendingMembersFor:
retrieveSavedProvidersByIdentifier
retrieveSessionWithID:
retryCount
revision
reviveOrInvalidateCachedConversationIfNecessary
revokeBackgroundAuthorizationForBundleID:
revokeBackgroundPipAuthorizationsForBundleID:
revokePseudonym:completion:
revokePseudonym:completionHandler:
revokePseudonymHandle:completionHandler:
revokePseudonymHandle:forConversationProvider:completionHandler:
revokePseudonymString:completionHandler:
ringtoneSoundURL
ringtoneSoundURLString
ringtoneSuppressedRemotely
ringtonesSandboxExtensionDirectory
route
routeIdentifierChangedNotification
routeManager
routeWasPickedHandler
routes
routesAtIndex:
routesByUniqueIdentifier
routesChangedForRouteController:
routesCount
routesDidChangeHandler
routesType
runBlocksPendingTransportAvailability:
runBlocksPendingTransportAvailabilityIfNecessary:
sandboxExtendedImageURL
sandboxExtensionHandle
sanitize:completion:
sanitizeAndProcessParticipantUpdate:context:
sanitizeJoinConversationRequest:
sanitizedCallUpdate
sanitizedCopy
saveLivePhotoWithPhotoURL:videoURL:completion:
savePassword:error:
saveThumperCapabilitiesStates:forPreferenceKey:
saveVideoWithURL:completion:
scaleFactor
sceneAssociationBehavior
scheduleConversationLinkCheckInInitial:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
screenCapture:didStart:withError:
screenCapture:didStop:withError:
screenCaptureKitEnabled
screenCaptureQueue
screenEnabled
screenShareAttributes
screenSharingActivityManager
screenSharingActivityManager:invalidatedSessionWithReason:wasLocallySharing:
screenSharingActivityManager:receivedUpdatedRemoteAttributes:isLocallySharing:
screenSharingAvailable
screenSharingAvailableChanged:
screenSharingCALayerHostMode
screenSharingDeskViewEnabled
screenSharingDeskViewSqueegeeEnabled
screenToken
secondaryThumperAccountForAccountID:
secondaryThumperAccountForRegisteredDeviceID:
secondaryThumperAccounts
selectiveSharingSessionUUID
self
sendAnswerCallMessageToHostForCall:
sendApprovalResponseToDevice:enteredCorrectly:wasCancelled:
sendCallAnsweredElsewhereMessageToClientForCall:
sendCallConnectedMessageToClientForCall:
sendCallDialedMessageToClientForCall:
sendCallDisconnectedMessageToClientForCall:
sendCallStartedConnectingMessageToClientForCall:
sendClientsNotificationName:
sendClientsNotificationName:forCall:
sendClientsNotificationName:forCall:userInfo:
sendData:
sendData:forCallID:encrypted:
sendData:fromAccount:toDestinations:priority:options:identifier:error:
sendData:onConversation:toDestinationID:
sendData:onConversation:toDestinationID:fromMember:
sendData:onConversation:toDestinationID:fromMember:additionalOptions:isBlobResponse:callback:
sendData:onConversation:toHandle:
sendData:onConversation:toHandle:isBlobResponse:
sendData:onConversation:toMember:
sendData:onConversation:toMember:additionalOptions:
sendData:throughConferenceForIdentifier:
sendData:toDestinations:
sendData:toDestinations:completion:
sendData:toDestinations:priority:options:identifier:error:
sendData:waitUntilConnected:completion:
sendDataAndAcceptInvitationIfNecessary:
sendDataAndCancelInvitationIfNecessary:
sendDataAndDeclineInvitationIfNecessary:
sendDataAndSendInvitationIfNecessary:declineOnError:
sendDataBlock
sendDataUnreliably:
sendDelegationMessageTo:conversation:link:transactionUUID:forMember:
sendDelegationResponseMessageTo:conversation:transactionUUID:forMember:withResponse:
sendDeviceUnavailableMessageToClientForUniqueProxyIdentifier:
sendDialCallFailedForScreenTimeForUniqueProxyIdentifier:
sendDialCallFailedForUniqueProxyIdentifier:
sendDialCallFailedForUniqueProxyIdentifier:withDisconnectedReason:
sendDialCallMessageToHostForCall:completionHandler:
sendDisconnectAllCallsMessageToHostForDisconnectedCall:
sendDisconnectCallMessageToHostForCall:
sendDisconnectCurrentCallAndActivateHeldMessageToHostForDisconnectedCall:
sendEndActiveAndAnswerCallMessageToHostForCall:
sendEndHeldAndAnswerCallMessageToHostForCall:
sendEventID:event:destinationID:options:completion:
sendGroupCallMessageToHostForCall:otherCall:
sendHardPauseAvailabilityMessageToClientForState:digits:
sendHardPauseDigits
sendHardPauseDigitsForCallWithUniqueProxyIdentifier:
sendHoldActiveAndAnswerCallMessageToHostForCall:
sendHoldCallMessageToHostForCall:
sendIDSAction:toDevice:
sendIDSAction:toDevices:
sendIncomingCallMessageToClientForCall:cannotBeAnswered:cannotRelayAudioOrVideoOnPairedDevice:
sendInvitation
sendInvitationMessageToMember:forConversation:includeAllAttributes:invitationPreferences:additionalOptions:
sendInvitationSentMessageToClientForCall:
sendInvitationWithData:
sendInvitationWithData:declineOnError:
sendLetMeInRequest
sendLetMeInResponseToPendingMember:forConversation:usingResponseKeyData:approved:callback:
sendLocalParticipantData:
sendMMIOrUSSDCodeWithRequest:
sendManualLaunchAttemptEventWithActivitySession:
sendManualLaunchNeededEventWithActivitySession:
sendMessage:andAcceptInvitationIfNecessaryForIdentifier:
sendMessage:andCancelOrDeclineInvitationIfNecessaryForIdentifier:
sendMessage:andStartSessionIfNecessaryForIdentifier:toDestination:timeout:completionHandler:
sendMessage:andStartSessionIfNecessaryForIdentifier:toDevicesSupportingProvider:withTimeout:
sendMessage:andStartSessionIfNecessaryForIdentifiers:toDestination:timeout:completionHandler:
sendMessage:completionHandler:
sendMessage:customizedForRemoteProtocolVersion:completionHandler:
sendMessage:forConversation:withActivitySession:
sendMessage:forConversation:withActivitySession:additionalOptions:
sendMessage:forIdentifier:
sendMessage:forIdentifier:customizedForRemoteProtocolVersion:completionHandler:
sendMessage:forIdentifier:customizedForRemoteProtocolVersion:waitUntilConnected:completionHandler:
sendMessage:forIdentifier:toDestinations:
sendMessage:forIdentifier:toDestinations:customizedForRemoteProtocolVersion:waitUntilConnected:completionHandler:
sendMessage:fromAccount:toDestinations:priority:options:identifier:error:
sendMessage:timeout:wantsAcknowledgement:maximumRetryAttempts:completionHandler:
sendMessage:wantsAcknowledgement:completionHandler:
sendMessageWithDictionary:error:
sendMessagesForCreatedOrChangedLink:conversation:messageType:
sendNeedsManualInCallSoundsChangeMessageToClientForCall:
sendParticipantData:
sendPickRouteMessageToHostForRoute:
sendPinCodeAndPromptForResponseToDevice:forSenderIdentityUUID:
sendPlayDTMFToneForKeyMessageForCall:DTMFKey:
sendPullCallsMessageToHost
sendPullRelayingCallsMessageToClient
sendPushCallsMessageToClientDestination:
sendPushRelayingCallsMessageToHostForSourceIdentifier:
sendRequestCallStateMessageToHost
sendRequestID:request:destinationID:options:responseHandler:
sendResetStateMessageToClient
sendResetWantsHoldMusicMessageToClientForCall:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
sendSendHardPauseDigitsMessageToHostForCall:
sendSessionMessage:
sendSessionMessage:toDestinations:
sendSessionServerTerminatedEventWithActivitySession:code:
sendSetTTYTypeCallMessageForCall:ttyType:
sendSetUplinkMutedCallMessageForCall:uplinkMuted:
sendSuppressRingtoneMessageForCall:
sendSwapCallsMessageToHost
sendToVoicemailAllowed
sendUngroupCallMessageToHostForCall:
sendUnholdCallMessageToHostForCall:
sendUpdateCallContextMessageToClientForCallProviderManager:
sendUpdateCallDisplayContextMessageToClientForCall:
sendUpdateCallModelMessageToClientForCall:
sendUpdateFailureExpectedMessageToClientForCall:
sendUpdateRemoteCallStateMessageToClient
sendUpdateRemoteUplinkMutedCallMessageToClientForCall:
sendUpdateRemoteUplinkMutedCallMessageToHostForCall:
sendUpdateRoutesMessageToClientForRoutes:
sendUpdateSupportsEmergencyFallbackToClientForCall:
sendUpdateSupportsTTYWithVoiceCallMessageToClientForCall:
sendUpdateSystemVolumeForCall:volume:
sendUserScoreToRTCReporting:withScore:
sendVideoUpgradeMessageforConversationWithUUID:
sender
senderCorrelationIdentifier
senderDestinationID
senderISOCountryCode
senderIdentityCapabilitiesStateByUUID
senderIdentityCapabilitiesWithUUID:
senderIdentityForAccountUUID:
senderIdentityForUUID:
senderIdentityUUID
senderIdentityUUIDForCallerIDHandle:
senderMuteUplink
sendingAudio
sendingAudioChangedForConference:
sendingAudioData
sendingVideo
sendingVideoExpected
sentLetMeInRequestForConversation:isApproved:
serialQueue
serializedData
serverBag
serverDate
serverDidDisconnect:
serverDiedForConference:
serverDiedForConferenceProvider:
serverDisconnectedForConversationManager:
serverDisconnectedForSession:
serverProvidedLightweightParticipantIdentifiers
serverProvidedParticipantIdentifiers
serverReceivedTime
service:account:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:sentBytes:totalBytes:
service:account:incomingData:fromID:context:
service:account:incomingMessage:fromID:context:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingTopLevelMessage:fromID:messageContext:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:
service:account:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:messageContext:
service:account:receivedGroupSessionParticipantDataUpdate:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:activeAccountsChanged:
service:connectedDevicesChanged:
service:devicesChanged:
service:didFlushCacheForRemoteURI:fromURI:guid:
service:didHintCheckingTransportLogWithReason:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:didUpdatePseudonymsWithChanges:
service:linkedDevicesChanged:
service:nearbyDevicesChanged:
service:pseudonymRemoved:
service:pseudonymUpdated:
service:token:time:error:
serviceAllowedTrafficClassifiersDidReset:
serviceAvailabilityChanged:
serviceDescription
serviceForClientIdentifier:
serviceForProvider:
serviceForProvider:video:
serviceIdentifier
serviceName
serviceProviders
serviceProvidersWithCarrierNumbers
serviceStatus
session:addParticipant:didSucceed:error:
session:audioEnabled:didSucceed:error:
session:audioPaused:didSucceed:error:
session:changedLocalAudioEnabled:didSucceed:error:
session:changedLocalAudioPaused:didSucceed:error:
session:changedLocalVideoEnabled:didSucceed:error:
session:changedLocalVideoPaused:didSucceed:error:
session:changedOneToOneModeEnabled:didSucceed:error:
session:changedScreenEnabled:didSucceed:error:
session:conversationParticipantWithParticipantIdentifier:
session:didDetectError:
session:didJoinGroup:participantIdentifiers:error:
session:didReceiveActiveLightweightParticipants:success:
session:didReceiveActiveParticipants:success:
session:didReceiveBlockedParticipantIDs:withCode:isTruncated:
session:didReceiveBlockedParticipantIDs:withCode:withType:isTruncated:
session:didReceiveData:
session:didReceiveData:dataType:forParticipant:
session:didReceiveDataBlob:forParticipant:
session:didReceiveKickedParticipantIDs:withCode:withType:isTruncated:
session:didReceiveLocalParticipantType:error:
session:didReceiveParticipantIDs:withCode:managementType:
session:didReceivePluginAllocationInfo:
session:didReceiveQueryBlockedParticipantIDs:withCode:isTruncated:
session:didReceiveReport:
session:didReceiveServerErrorCode:
session:didRegisterPluginAllocationInfo:
session:didRemoveParticipantIDs:withCode:isTruncated:
session:didStart:error:
session:didStopWithError:
session:didStopWithError:metadata:
session:didUnregisterPluginAllocationInfo:
session:didUpdate:configuration:error:
session:downlinkRateAdaptationInfoDidChange:
session:endedWithError:reason:
session:endedWithReason:
session:frequencyLevelsDidChange:
session:invitationSentToPushTokens:shouldBreakBeforeMake:
session:invitationSentToTokens:shouldBreakBeforeMake:
session:mediaPrioritiesDidChange:
session:mediaStateDidChange:forMediaType:didSucceed:error:
session:oneToOneEnabled:didSucceed:error:
session:participantDidJoinGroupWithInfo:
session:participantDidLeaveGroupWithInfo:
session:receivedActiveLightweightParticipantDestinationsByIdentifier:
session:receivedActiveParticipantDestinationsByIdentifier:
session:receivedData:
session:receivedData:fromDestination:device:
session:receivedInvitationAcceptFromID:
session:receivedInvitationAcceptFromID:withData:
session:receivedInvitationAcceptWithData:
session:receivedInvitationAcceptWithData:fromDestination:device:
session:receivedInvitationCancelFromID:
session:receivedInvitationCancelFromID:withData:
session:receivedInvitationCancelWithData:
session:receivedInvitationCancelWithData:fromDestination:device:
session:receivedInvitationDeclineFromID:
session:receivedInvitationDeclineFromID:withData:
session:receivedInvitationDeclineWithData:
session:receivedInvitationDeclineWithData:fromDestination:device:
session:receivedSessionEndFromID:withData:
session:receivedSessionMessageFromID:withData:
session:removeParticipant:didSucceed:error:
session:screenCaptureDidStart:withError:
session:screenEnabled:didSucceed:error:
session:uplinkRateAdaptationInfoDidChange:
session:videoEnabled:didSucceed:error:
session:videoPaused:didSucceed:error:
sessionApprovalClient
sessionCleanupTimeout
sessionDidConnect:
sessionDidDisconnect:
sessionDidJoinGroup:participantInfo:error:
sessionDidJoinGroup:participantUpdate:error:
sessionDidJoinGroup:participantsInfo:error:
sessionDidLeaveGroup:error:
sessionDidReceiveKeyUpdate:
sessionDidReceiveParticipantUpgrade:participantType:error:
sessionDidTerminate:
sessionEnded:
sessionEnded:withReason:error:
sessionEndedReason
sessionForIdentifier:
sessionForTransactionID:
sessionID
sessionIDAliasWithSalt:
sessionIdentifier
sessionMessenger
sessionProtocolVersionForIdentifier:
sessionProvider:didJoinGroupWithParticipantIdentifiers:localParticipantIdentifier:error:
sessionProvider:didLeaveGroupWithError:
sessionProvider:didReceiveActiveLightweightParticipants:success:
sessionProvider:didReceiveActiveParticipants:success:
sessionProvider:didReceiveData:dataType:forParticipant:
sessionProvider:didReceiveDataBlob:forParticipant:
sessionProvider:didReceiveKickedParticipantIDs:withCode:withType:isTruncated:
sessionProvider:didReceiveLocalParticipantType:error:
sessionProvider:didReceiveReport:
sessionProvider:didReceiveServerErrorCode:
sessionProvider:didRegisterPluginAllocationInfo:
sessionProvider:didUnregisterPluginAllocationInfo:
sessionProvider:endedWithReason:error:
sessionProvider:invitationSentToPushTokens:shouldBreakBeforeMake:
sessionProvider:receivedInvitationAcceptFromID:withData:
sessionProvider:receivedInvitationCancelFromID:withData:
sessionProvider:receivedInvitationDeclineFromID:withData:
sessionProvider:receivedSessionMessageFromID:withData:
sessionProviderDidReceiveKeyUpdate:
sessionProviderDidTerminate:
sessionProviderStarted:
sessionServerDidDisconnect:
sessionShouldReconnect:
sessionToken
sessionUUID
sessionUpdateCompletionQueue
sessiondidReceiveKeyUpdate:
sessions
setAcceptPayloadData:
setAccount:
setAccountID:
setAccountUUIDString:
setAccounts:
setAccountsMatchForSecondaryCalling:
setAccountsSupportSecondaryCalling:
setActionDescription:
setActionURL:
setActivated:
setActivated:withRevision:forConversationLinkDescriptorsWithPredicate:completion:
setActivated:withRevision:forConversationLinkDescriptorsWithPredicate:error:
setActivationContext:error:
setActive:withOptions:error:
setActiveCategoryVolume:
setActiveContexts:
setActiveIDSDestination:
setActiveLightweightParticipantDestinationsByIdentifier:
setActiveLightweightParticipants:
setActiveLightweightParticipantsByIdentifier:
setActiveLocalHandles:
setActiveLocalHandlesForProvider:
setActiveParticipantDestinationsByIdentifier:
setActiveParticipantHandles:
setActiveParticipants:
setActiveRemoteParticipant:
setActiveRemoteParticipantHandles:
setActiveRemoteParticipants:
setActiveRequest:forTransactionID:
setActiveRequestsByTransactionID:
setActivity:
setActivityAuthorization:forBundleID:
setActivityAuthorization:forBundleIdentifier:
setActivityAuthorizationManager:
setActivityCommunicator:
setActivityContext:
setActivityIdentifier:
setActivityMetadata:
setActivityQueue:
setActivitySession:
setActivitySessionManager:
setActivitySessions:
setAddCallAllowed:
setAddedMembers:
setAlertTopic:
setAllowedSecondaryDeviceIDs:
setAllowsScreenSharingBlock:
setAmbiguityState:
setAnnounceCalls:
setApplicationContext:
setApplicationLaunchPolicyManager:
setApplicationPolicyManager:
setApplicationState:forBundleIdentifier:
setApproved:
setApprovedSecondaryDeviceIDs:
setApproverHandle:
setAssociated:
setAssociatedPseudonym:
setAssociatedThumperAccountID:
setAssociationAVCIdentifier:
setAssociationIdentifier:
setAssociationVoucher:
setAssumedIdentity:
setAsynchronousExportedObjectProxy:
setAsynchronousServer:
setAttribute:forKey:error:
setAttributes:
setAudio:
setAudioAndVideoMuted:forParticipantWithIdentifier:
setAudioArbitrationController:
setAudioCategory:
setAudioController:
setAudioDisabled:
setAudioEnabled:
setAudioEnabled:forParticipantWithIdentifier:
setAudioEnabled:forRemoteParticipantWithIdentifier:conversationUUID:
setAudioInterruptionOperationMode:
setAudioInterruptionProvider:
setAudioMode:
setAudioMuted:
setAudioMutedForHoldMusic:
setAudioPaused:forConversationWithUUID:
setAudioPaused:forParticipantWithIdentifier:
setAudioPriority:
setAudioQueueFlags:
setAudioReady:
setAudioRouteCollections:
setAudioRoutePolicyManager:
setAudioRouteUniqueIdentifier:
setAudioRoutesByParticipantIdentifier:
setAudioSessionActive:
setAudioSessionID:
setAudioSessionProperties:
setAudioSourceIdentifier:
setAudioVideoMode:
setAuthCompletionHandler:
setAuthorization:forBundleID:
setAutoSharePlayEnabled:
setAutomaticCarDNDStatus:
setAvMode:
setAvailability:
setAvailableDeviceSlots:
setAvailableOutgoingRelayCallerIDs:
setAvcData:
setAvcIdentifier:
setAvcScreenCapture:
setAvcSession:
setAvcSessionCreationBlock:
setAvcSessionIdentifier:
setAvcSessionInProgress:
setAvcSessionParticipantCreationBlock:
setAvcSessionToken:
setBackingCallSource:
setBadgeString:withCompletionHandler:
setBaseDestinationID:
setBeginListeningBlock:
setBehavior:
setBestAppSuggestionManager:
setBlock:
setBlockIncomingInvitationsDuringCall:
setBlockMultipleIncomingInvitations:
setBlockToExecuteAfterPendingCoalescingBlocksByIdentifier:
setBluetoothAudioFormat:
setBluetoothAudioFormatForCallWithUniqueProxyIdentifier:bluetoothAudioFormat:
setBody:
setBundleID:
setBundleIdentifier:
setBundleIdentifierToVoIPApplication:
setBundleURL:
setBundleURLString:
setByAddingObjectsFromSet:
setBytesOfDataUsed:
setCall:
setCallCapabilities:forSenderIdentityCapabilitiesState:
setCallCapabilitiesState:
setCallCenter:
setCallCenterObserver:
setCallDataSource:
setCallDelegatesIfNeeded:
setCallDirectoryExtensionIdentifier:
setCallDirectoryLabel:
setCallDirectoryLocalizedExtensionContainingAppName:
setCallDirectoryManager:
setCallDirectoryStore:
setCallDurationLimitTimer:
setCallDurationUpdateTimer:
setCallFilterController:
setCallGroupUUID:
setCallHistoryController:
setCallID:
setCallInfoBlob:
setCallModel:
setCallProviderManager:
setCallStateContext:
setCallStateController:
setCallStateMonitor:
setCallStatus:
setCallUUID:forConversationUUID:
setCallback:
setCaller:
setCallerID:
setCallerId:
setCallerIdAvailability:
setCallerNameFromNetwork:
setCannotBeAnswered:
setCannotRelayAudioOrVideo:
setCannotRelayAudioOrVideoOnPairedDevice:
setCapabilities:
setCapabilitiesValid:
setCapability:enabled:info:
setCapabilityInfo:forSubscription:senderIdentityCapabilitiesState:
setCaptionsToken:
setCaptureCapabilities:
setCapturingLocalVideo:
setCarModeActive:
setCarPlayDeviceConnected:
setCarPlayScreenConnectionChanged:
setCategory:
setCategoryIdentifier:
setCellularDataAllowed:
setCellularDataPreferred:
setChManager:
setCheckInMessage:
setClientCapabilities:
setClientInvalidationHandler:
setClientManager:
setClientMessageReceiveTime:
setClientMessagingDelegate:
setClientUUID:
setClientsShouldConnectToken:
setCloseConnectionTimeout:
setCloudCallingDevices:
setCode:
setCollaborationIdentifier:
setCommonMessagingDelegate:
setCompletedDescription:
setCompletion:
setCompletionHandler:
setConference:
setConferenceActiveForIdentifier:
setConferenceConnections:
setConferenceCreationBlock:
setConferenceProvider:
setConferenceProviderCreationBlock:
setConferenceState:forCallID:
setConferenceVisualRectangle:forCallID:
setConferencesAwaitingConnectionClose:
setConfiguration:
setConnectionTimeout:
setConnectionTimeoutTime:
setContactIdentifier:
setContactIdentifiers:
setContactLabel:
setContext:
setContextIdentifier:
setControlFlags:
setConversation:
setConversationCreationBlock:
setConversationFailureContext:
setConversationGroupUUID:
setConversationID:
setConversationLink:allowUpdate:
setConversationLink:forConversation:replyToCompletionHandler:
setConversationLinkBaseURL:
setConversationLinkDescriptorDataSourceDelegate:
setConversationMessageBytes:
setConversationProviderIdentifier:
setConversationTimeBase:
setConversationUUID:forCallUUID:
setCountOfNotificationsReceived:
setCovered:
setCoveredNotifyObserver:
setCreationDate:
setCreationDateEpochTime:
setCrossDeviceIdentifier:
setCsCallingAvailable:
setCtCapabilitiesValid:
setCurrentAttributionKey:andApp:
setCurrentAudioInputDeviceToDeviceWithUID:
setCurrentAudioOutputDeviceToDeviceWithUID:
setCurrentCallSet:
setCurrentDescriptor:
setCurrentOrientation:
setCurrentParticipantPresentationContexts:
setCurrentlyAvailable:
setCurrentlyBroadcastedActivity:
setCurrentlyPicked:
setCurrentlyTrackedA2DPRouteIdentifier:
setDTMFKey:
setData:
setDataSource:
setDataSourceToIdentifierToCalls:
setDate:
setDateAnsweredOrDialed:
setDateConnected:
setDateEnded:
setDateInitiatedLetMeIn:
setDateReceivedFirstRemoteFrame:
setDateReceivedLetMeIn:
setDateSentInvitation:
setDateStartedConnecting:
setDateStartedOutgoing:
setDefaultActionURL:
setDefaultPairedDevice:
setDelegate:
setDelegate:queue:
setDelegateQueue:
setDelegateToQueue:
setDestinationDevice:
setDestinationID:
setDestinations:
setDetectingRaiseToAnswer:
setDevelopmentConnection:
setDeviceChangedHandler:
setDeviceFamily:
setDeviceFoundHandler:
setDeviceLockStateObserver:
setDeviceLostHandler:
setDeviceRole:
setDeviceSupport:
setDeviceType:
setDevices:
setDialAssisted:
setDialType:
setDialingIDSDevice:
setDidPrepareHandler:
setDidStartHandler:
setDidStopHandler:
setDigits:
setDisconnectedCause:
setDisconnectedReason:
setDisplayContext:
setDisplayID:
setDisplayScale:
setDndAllowsCall:
setDomainAccessor:
setDowngradeToAudio:
setDowngradeToOneToOneAfterDelayBlock:
setDownlinkMuted:
setDownlinkMuted:forCallWithUniqueProxyIdentifier:
setDownlinkMuted:forParticipantWithIdentifier:
setDownlinkMuted:forRemoteParticipantsInConversationWithUUID:
setDownlinkMuted:forRemoteParticipantsOnConversationWithUUID:
setDummyPayload:
setDuration:
setDynamicDisplayContext:
setDynamicIdentifier:
setEligibleForHandoff:
setEligibleForPublicIndexing:
setEligibleForSearch:
setEmergency:
setEmergencyCallbackCapabilitiesDidChange:
setEmergencyCallbackModeEnabled:
setEmergencyCallbackPossible:
setEmergencyHandles:
setEmergencyLabeledHandles:
setEmergencySupported:
setEmergencyTUHandles:
setEmergencyTULabeledHandles:
setEnableCriticalReliability:
setEnabled:
setEnclosedEncryptedType:
setEncryptedData:
setEncryptedMessage:
setEndAndAnswerAllowed:
setEndedError:
setEndpointIDSDestination:
setEndpointIDSDestinationURIs:
setEndpointOnCurrentDevice:
setEventBlock:
setExceptionCode:
setExceptionDomain:
setExpectedAudioEnabled:
setExpectedAudioPaused:
setExpectedEndpointOnMessagingDevice:
setExpectedRelayClientDestination:
setExpectedScreenEnabled:
setExpectedVideoEnabled:
setExpectedVideoPaused:
setExpirationDate:
setExpirationDate:withRevision:forConversationLinkDescriptorsWithPredicate:completion:
setExpirationDate:withRevision:forConversationLinkDescriptorsWithPredicate:error:
setExportedInterface:
setExportedObject:
setExternalToneFileURL:
setFaceTimeAudioAvailable:
setFaceTimeConversationProviderDelegate:
setFaceTimeDemuxerDelegate:
setFaceTimeIDStatus:
setFaceTimeIDStatusRefreshed:
setFaceTimeIMAVProviderDelegate:
setFaceTimeInviteDemuxer:
setFaceTimeTransportType:
setFaceTimeVideoAvailable:
setFailureContext:
setFailureExpected:
setFailureReason:
setFallbackApplicationName:
setFamilyName:
setFeatureFlags:
setFilteredOutReason:
setFirewallManager:
setFirstUnlockCallbacks:
setFlags:
setForceExpanseEnabled:
setFrameRate:
setFromHandle:
setFrontBoardOptions:
setGenerateDescriptorInfos:
setGenerateDescriptorVersionSum:
setGeneratorDescriptor:
setGeneratorDescriptors:
setGeneratorVersion:
setGestureHandler:
setGftDowngradeToOneToOneAvailable:
setGivenName:
setGondolaCallingAvailable:
setGridDisplayMode:
setGridDisplayMode:forConversationWithUUID:
setGroupFaceTimeServiceProviderDelegate:
setGroupSessionProviderCreationBlock:
setGroupUUID:
setGroupUUIDString:
setGuest:
setGuestModeEnabled:
setHandedOff:
setHandle:
setHandleType:
setHandler:
setHandoffActivity:
setHandoffAudioController:
setHandoffContext:
setHandoffEligibility:
setHandoffIdentifiers:
setHardPause:
setHardPauseAvailable:
setHardPauseDigits:
setHardPauseDigitsState:
setHardPauseState:
setHasAddCallAllowed:
setHasAmbiguityState:
setHasAudioFinished:
setHasAudioInterruption:
setHasAvMode:
setHasBeenUnlocked:
setHasBeenUnlockedBlock:
setHasCalledStop:
setHasCellularSettingsRemediation:
setHasCleanedUp:
setHasConnected:
setHasCreationDateEpochTime:
setHasDateAndTimeSettingsRemediation:
setHasDeviceType:
setHasDisconnectedReason:
setHasEnclosedEncryptedType:
setHasEndAndAnswerAllowed:
setHasEnded:
setHasFaceTimeAudioAvailable:
setHasFaceTimeVideoAvailable:
setHasGenerateDescriptorVersionSum:
setHasGeneratorVersion:
setHasGuestModeEnabled:
setHasHandleType:
setHasHardPauseAvailable:
setHasHardPauseState:
setHasHoldAllowed:
setHasHoldAndAnswerAllowed:
setHasHostCallCreationTime:
setHasIdentifier:
setHasIsActivated:
setHasIsGFTDowngradeToOneToOneAvailable:
setHasIsGondolaCallingAvailable:
setHasIsLetMeInApproved:
setHasIsLightweight:
setHasIsMirageAvailable:
setHasIsMomentsAvailable:
setHasIsSystemActivity:
setHasIsUPlusNDowngradeAvailable:
setHasIsUPlusOneScreenSharingAvailable:
setHasJoined:
setHasLeaveReason:
setHasLightweightPrimaryParticipantID:
setHasLinkLifetimeScope:
setHasLocallyCreated:
setHasLocationSettingsRemediation:
setHasMaximumCallGroups:
setHasMergeable:
setHasMessageSendTime:
setHasNotificationStyles:
setHasOBSOLETEProtoMomentsAvailable:
setHasOptions:
setHasPreferredBroadcastingAttributes:
setHasPrimaryIdentifier:
setHasProtoCannotBeAnswered:
setHasProtoCannotRelayAudioOrVideoOnPairedDevice:
setHasProtoConferenced:
setHasProtoCurrentlyPicked:
setHasProtoDisconnectedReason:
setHasProtoEmergency:
setHasProtoExpectedEndpointOnMessagingDevice:
setHasProtoFailureExpected:
setHasProtoGuest:
setHasProtoHasSentInvitation:
setHasProtoMomentsV2Available:
setHasProtoNeedsManualInCallSounds:
setHasProtoOriginatingUIType:
setHasProtoOutgoing:
setHasProtoPriority:
setHasProtoProtocolVersion:
setHasProtoRemoteUplinkMuted:
setHasProtoSenderMuteUplink:
setHasProtoService:
setHasProtoShouldSuppressInCallUI:
setHasProtoShouldSuppressRingtone:
setHasProtoSoundRegion:
setHasProtoStatus:
setHasProtoSupportsEmergencyFallback:
setHasProtoSupportsRelay:
setHasProtoSupportsTTYWithVoice:
setHasProtoTTYType:
setHasProtoTimeConnected:
setHasProtoUplinkMuted:
setHasProtoVideo:
setHasProtoVoicemail:
setHasProtoWantsHoldMusic:
setHasProtoWantsVideo:
setHasPseudonymExpirationDateEpochTime:
setHasReceivedAccept:
setHasReceivedLetMeInRequest:
setHasReceivedMessageType:
setHasRequestActionType:
setHasRequestBlobRecoveryOptions:
setHasSendToVoicemailAllowed:
setHasSentInvitation:
setHasShouldAssociateScene:
setHasShouldSuppressInCallUI:
setHasStarted:
setHasStartedConnecting:
setHasSupportsAddCall:
setHasSupportsAudioAndVideo:
setHasSupportsAudioOnly:
setHasSupportsDTMF:
setHasSupportsEmergency:
setHasSupportsGrouping:
setHasSupportsHolding:
setHasSupportsLeaveContext:
setHasSupportsRecents:
setHasSupportsSendingToVoicemail:
setHasSupportsUnambiguousMultiPartyState:
setHasSupportsUngrouping:
setHasSupportsVoicemail:
setHasSwappable:
setHasSystemVolume:
setHasTakingCallsPrivateAllowed:
setHasTimestampAsTimeIntervalSinceReferenceDate:
setHasType:
setHasUpdatedDateEpochTime:
setHasValidationSource:
setHasVersion:
setHasVideo:
setHasVideoEnabled:
setHasWiFiSettingsRemediation:
setHeld:
setHeySiriEnabled:
setHighlightIdentifier:
setHoldAndAnswerAllowed:
setHost:
setHostCallCreationTime:
setHostCreationTime:
setHostMessageSendTime:
setHostMessagingDelegate:
setHostProcessAttribution:error:
setHostedOnCurrentDevice:
setIMAVCapabilities:toCaps:
setIMDaemonConnected:
setISOCountryCode:
setIconTemplateImageData:
setIdentificationCategory:
setIdentifier:
setIdentifierUUIDString:
setIdentifiersWaitingForAcknowledgement:
setIdentifiersWithPendingCoalescingBlocks:
setIdsAliasingSalt:
setIdsQueryController:
setIgnoreLMIRequests:
setIgnoreLetMeInRequests:forConversationUUID:
setIgnoreStartPreview:
setIgnoresBluetoothDeviceUID:
setImAccountForActionBlock:
setImage:
setImageData:
setImageTranscoder:
setImageURL:
setInCallServiceProcessState:
setIncludeLocalContacts:
setIncludesCallsInRecents:
setIncomingChatGenerator:
setIncomingSessionProviderGenerator:
setInitialLinkType:
setInitiator:
setInputAudioPowerSpectrumToken:
setInputFrequencyMeteringEnabled:
setInteger:forKey:
setInteger:forKey:error:
setInterfaceOrientationPortrait:
setInterruptionHandler:
setInterruptionLevel:
setInterruptionPriority:error:
setInvalidationHandler:
setInvitation:
setInvitationPreferences:
setInvitationResolver:
setInvitationTimeOut:
setInvitationTimeout:
setInvitationTimeoutTime:
setInviteCompletion:
setInviteData:
setInvitedHandles:
setInvitedHandles:withRevision:forConversationLinkDescriptorsWithPredicate:completion:
setInvitedHandles:withRevision:forConversationLinkDescriptorsWithPredicate:error:
setInvitedMemberHandles:
setInvitedPushTokens:
setIsAccountActive:
setIsAnyOtherAccountDeviceActive:
setIsAudioEnabled:
setIsAudioPausedToStart:
setIsDuplexAudioOnly:
setIsGFTDowngradeToOneToOneAvailable:
setIsGondolaCallingAvailable:
setIsKeyExchangeEnabled:
setIsKnownCaller:
setIsLetMeInApproved:
setIsLightweight:
setIsLightweightMember:
setIsLightweightPrimaryInitiated:
setIsLocallyInitiated:
setIsMirageAvailable:
setIsMomentsAvailable:
setIsOtherInvitedHandle:
setIsRegistered:
setIsRelayEnabled:
setIsRelayForced:
setIsScreenSharingAvailable:
setIsSendingAudio:
setIsSendingVideo:
setIsSendingVideo:forCallWithUniqueProxyIdentifier:
setIsSystemActivity:
setIsUPlusNDowngradeAvailable:
setIsUPlusOneScreenSharingAvailable:
setIsVideoEnabled:
setIsVideoPausedToStart:
setIsWindowed:
setIsoCountryCode:
setItem:
setJoinCallActivity:
setJoined:
setJoinedFromLetMeIn:
setJoinedFromLink:
setJoinedMetadata:
setJunkConfidence:
setKeywords:
setKickMemberRetryCount:
setKickedMembers:
setKickedParticipants:
setLabel:
setLastRebroadcastTime:
setLegacyCapability:enabled:capabilityInformation:
setLetMeIn:
setLetMeInDelegationHandle:
setLetMeInDelegationUUID:
setLetMeInKeyAgreement:
setLetMeInRequestState:
setLightweightMembers:
setLightweightPrimary:
setLightweightPrimaryParticipantID:
setLightweightPrimaryParticipantIdentifier:
setLightweightRetryCount:
setLink:
setLinkLifetimeScope:
setLinkName:
setLinkName:forConversationLink:completionHandler:
setLinkName:forLink:completionHandler:
setLinkedUserURIs:
setLinks:
setListeningIdentifiersByActivityType:
setLocalAccountHandle:
setLocalCallerID:
setLocalCallerIDForProvider:
setLocalCapabilities:
setLocalClientActive:
setLocalDeviceID:
setLocalDeviceUpdatedHandler:
setLocalInviteDictionary:
setLocalLandscapeAspectRatio:
setLocalLightweightSecondaryMember:
setLocalParticipantAudioVideoMode:
setLocalParticipantAudioVideoMode:forConversationUUID:
setLocalParticipantIdentifier:
setLocalParticipantType:
setLocalParticipantUUID:
setLocalPortraitAspectRatio:
setLocalPortraitAspectRatio:localLandscapeAspectRatio:
setLocalSenderIdentityAccountUUID:
setLocalSenderIdentityAccountUUIDString:
setLocalSenderIdentityUUID:
setLocalSenderIdentityUUIDString:
setLocalThumperAccounts:
setLocalThumperDeviceID:
setLocalizedHandoffRecipientDeviceCategory:
setLocalizedName:
setLocalizedServiceName:
setLocalizedShortName:
setLocallyConnected
setLocallyConnecting
setLocallyCreated:
setLocallyDisconnectedWithReasonIfNone:
setLocallyDisconnectedWithReasonIfNone:stopConference:
setLocallyHasSentInvitation
setLocallyHasStartedOutgoing
setLocation:
setLockStateNotificationToken:
setLockdownModeEnabled:
setMXSessionProperty:value:error:
setMachServiceName:
setManager:
setMapName:
setMaxVideoDecodesAllowed:
setMaximumCallGroups:
setMaximumCallsPerCallGroup:
setMayRequireBreakBeforeMake:
setMediaBlob:
setMediaPlaybackOnExternalDevice:
setMediaType:
setMemberHandlesAwaitingInvitesToLink:
setMemberIdentifiers:
setMembers:
setMergeable:
setMergedCallUpdate:
setMessage:
setMessageProxy:
setMessageSendTime:
setMessagesGroupName:
setMessagesGroupName:onConversationWithUUID:
setMessagesGroupUUID:
setMessagesGroupUUIDString:
setMessenger:
setMetadata:
setMicrophoneMuted:
setMiddleName:
setMirageAvailable:
setMirageEnabled:
setMirageHandshakeBlobCreationBlock:
setMirageHandshakeData:
setMixesVoiceWithMedia:
setMixesVoiceWithMedia:forCallWithUniqueProxyIdentifier:
setMockAudioCategory:
setMockAudioInterruptionActivationStateObserver:
setMockAudioInterruptionProviderType:
setMockAudioMode:
setMockBackingCallSource:
setMockBytesOfDataUsed:
setMockCallDuration:
setMockCallGroupUUID:
setMockCallRelaySupport:
setMockCallStatus:
setMockCallUUID:
setMockCallerNameFromNetwork:
setMockCompanyName:
setMockConferenced:
setMockConnected:
setMockConnecting:
setMockContactIdentifiers:
setMockConversation:
setMockDateConnected:
setMockDateCreated:
setMockDisconnectedReason:
setMockDisplayContext:
setMockDisplayName:
setMockEmergency:
setMockFailureExpected:
setMockHandle:
setMockHasBeenRedirected:
setMockHasSentInvitation:
setMockHasStartedOutgoing:
setMockHostedOnCurrentDevice:
setMockInitialLinkType:
setMockIsThirdPartyVideo:
setMockIsVideoPaused:
setMockJunkConfidence:
setMockKnownCaller:
setMockLocalizedLabel:
setMockMayRequireBreakBeforeMake:
setMockOutgoing:
setMockPTT:
setMockPrefersExclusiveAccessToCellularNetwork:
setMockProvider:
setMockProviderContext:
setMockProviderErrorCode:
setMockScreenShareAttributes:
setMockSharingScreen:
setMockShouldSuppressInCallUI:
setMockSupportsEmergencyFallback:
setMockSupportsTTYWithVoice:
setMockUniqueProxyIdentifier:
setMockUplinkWasExplicitlyMuted:
setMockUsingBaseband:
setMockVideoStreamToken:
setMockVoicemail:
setMode:
setModel:
setModelIdentifier:
setMomentsAvailable:
setMomentsController:
setMomentsGenerator:
setMostRecentCompletedOneToOneEnabledValue:
setMute:
setMuted:
setMuted:forIdentifier:
setMutuallyExclusiveCall:
setName:
setName:withRevision:forConversationLinkDescriptorsWithPredicate:completion:
setName:withRevision:forConversationLinkDescriptorsWithPredicate:error:
setNamePrefix:
setNameSuffix:
setNeedsManualInCallSounds:
setNeedsSave:
setNetworkExtensionClient:
setNetworkExtensionClientManager:
setNickname:
setNotificationCategories:
setNotificationProviderIdentifier:
setNotificationStyles:
setNotificationStylesByHandleType:
setNotifyObserver:
setNumberOfLoops:
setOBSOLETEConferenceIdentifier:
setOBSOLETEProtoMomentsAvailable:
setObject:
setObject:forContextualKeyPath:responseQueue:withCompletion:
setObject:forKey:
setObject:forKeyedSubscript:
setObserverToQueue:
setOnEmergencyCall:
setOnHold:
setOneToOneEnabled:
setOneToOneHandoffOngoing:
setOneToOneModeEnabled:
setOneToOneModeEnabled:withCompletionBlock:
setOngoingDescription:
setOptions:
setOrientationEventsEnabled:
setOrientationMonitor:
setOriginalPauseDigitsString:
setOriginalResolution:
setOriginalRingtoneSoundURL:
setOriginalRingtoneSoundURLString:
setOriginatingDeviceType:
setOriginatingUIType:
setOriginator:
setOriginatorHandle:
setOtherInvitedHandles:
setOtherInvitedTUHandles:
setOutgoing:
setOutgoingCallerID:
setOutgoingChatGenerator:
setOutgoingLocalParticipantUUID:
setOutgoingLocalParticipantUUID:forRecentCallsMatchingPredicate:
setOutgoingPinRequestIdentifier:
setOutgoingRelayCallerID:
setOutgoingSessionProviderGenerator:
setOutputAudioPowerSpectrumToken:
setOutputFrequencyMeteringEnabled:
setPairedDevice:
setPairedHostDeviceState:
setParticipantAssociation:
setParticipantAudioVideoMode:forParticipant:
setParticipantDestinationIDs:
setParticipantGroupUUID:
setParticipantRefreshBlock:
setParticipantType:forLocalConversationParticipant:
setParticipantType:forLocalMemberDestination:
setParticipantType:forRemoteConversationMemberDestinations:
setParticipantType:forRemoteMemberDestinations:
setParticipantUpdateSanitizer:
setPassiveOrientationEvents:
setPasswordType:
setPauseAudio:callID:error:
setPauseDigitsQueue:
setPauseVideo:callID:error:
setPauseVideoToStart:
setPeerReportingIdentifier:sessionIdentifier:
setPeerReportingIdentifier:sessionIdentifier:forCallID:
setPendingAllowedMembers:
setPendingCodesToDevicesForApproval:
setPendingCompletions:
setPendingConversation:
setPendingConversationCleanupTimer:
setPendingConversationParticipantsByIdentifier:
setPendingKickedMembersByIdentifier:
setPendingMemberHandles:
setPendingMembers:
setPendingMembershipTracker:
setPerformDialAssist:
setPerformLocalDialAssist:
setPersonNameComponents:
setPhoneNumberMCCToISOCountryCodeTransformBlock:
setPhoneNumberURI:
setPhoneticRepresentation:
setPhotoRequestFailureCount:
setPhotoRequestSuccessCount:
setPinExchangeDelegate:
setPlaybackObserver:
setPowerAssertionManager:
setPredicate:
setPreferredBroadcastingAttributes:
setPrepareToStopTimeout:
setPreparedToStop:
setPresentationInfo:
setPresentationRect:
setPresentationRect:forConversationWithUUID:
setPresentationState:
setPresentationState:forConversationWithUUID:
setPrimary:
setPrimaryAvcIdentifier:
setPrimaryDeviceID:
setPrimaryHandle:
setPrimaryIdentifier:
setPrioritizedTUSenderIdentities:
setPriority:
setPrivateKey:
setProcessAssertion:
setProcessAssertions:
setProcessHandle:
setProcessStateChanged:
setProcessStateChangedWithBundleID:
setProductionConnection:
setProminenceIndex:
setPromptForPasswordHandler:
setProtoCallCapabilitiesState:
setProtoCallModel:
setProtoCallModelState:
setProtoCalls:
setProtoCannotBeAnswered:
setProtoCannotRelayAudioOrVideoOnPairedDevice:
setProtoConferenced:
setProtoCurrentlyPicked:
setProtoDTMFKey:
setProtoDisconnectedReason:
setProtoDisplayContext:
setProtoEmergency:
setProtoExpectedEndpointOnMessagingDevice:
setProtoFailureExpected:
setProtoGuest:
setProtoHasSentInvitation:
setProtoMomentsV2Available:
setProtoNeedsManualInCallSounds:
setProtoOriginatingUIType:
setProtoOutgoing:
setProtoPersonNameComponents:
setProtoPriority:
setProtoProtocolVersion:
setProtoProvider:
setProtoRemoteUplinkMuted:
setProtoSOS:
setProtoSenderMuteUplink:
setProtoService:
setProtoSoundRegion:
setProtoSupportedHandleTypes:count:
setProtoSupportsEmergencyFallback:
setProtoSupportsRelay:
setProtoSupportsTTYWithVoice:
setProtoTTYType:
setProtoTimeConnected:
setProtoUUID:
setProtoUpgradeSessionUUID:
setProtoUplinkMuted:
setProtoVideo:
setProtoVoicemail:
setProtoWantsHoldMusic:
setProtoWantsVideo:
setProtocolVersion:
setProvider:
setProviderCallDelegate:
setProviderDidBegin:
setProviderEndedReason:
setProviderErrorCode:
setProviderFailureReasonIfNecessary:
setProviderIdentifier:
setProviderIdentifiersForExistingCalls:
setProviderSource:
setProviders:
setProvidersByIdentifier:
setProximityChangeHandler:
setProximityController:
setProximityDetectionMode:
setProximitySensorCovered:
setProximitySensorEnabled:
setProximitySensorObserver:
setPseudonym:
setPseudonymExpirationDateEpochTime:
setPseudonymFeatureID:
setPseudonyms:
setPublicKey:
setPushKitClient:
setPushKitClientManager:
setQueue:
setQueueItemType:
setRaiseToAnswerController:
setRaiseToEarGestureManager:
setRate:
setRead:
setRead:forCallsWithPredicate:completion:
setRebroadcastTimeThreshold:
setReceivedInvitationAccept:
setReceivedMessageType:
setReceivedSuccessfulDidStart:
setReceiverProtocolVersion:
setRecentlyLeftParticipantIdentifiers:
setRecoverMessage:
setRegisteredLocalProvidersByIdentifier:
setRegisteredPairedHostDeviceProvidersByIdentifier:
setRejectedMembers:
setRelay:
setRelayCallDataSource:
setRelayCallingAvailability:
setRelayCallingDisabledForDeviceID:
setRelayCallingEnabled:
setRelayCallingEnabled:forDeviceWithID:
setRelayCapableDeviceExists:
setRelayClientController:
setRelayClientTransport:
setRelayCommonController:
setRelayDelegate:
setRelayHostController:
setRelayMessagingController:
setRelayed:
setRelaying:
setRelaying:forConversationWithUUID:
setRemoteAudioEnabled:
setRemoteDestination:
setRemoteDevice:
setRemoteFromID:
setRemoteHandle:
setRemoteIDSDestination:
setRemoteIDSDestinationURI:crossDeviceIdentifier:
setRemoteIDSDestinations:
setRemoteInviteDictionary:
setRemoteMemberHandles:
setRemoteMembers:
setRemoteMomentsAvailable:
setRemoteObjectInterface:
setRemoteParticipantHandles:
setRemoteParticipantTUHandles:
setRemoteParticipantsDownlinkMuted:
setRemotePushTokens:
setRemoteUplinkMuted:
setRemoteUplinkMutedSetTime:
setRemoteVideoEnabled:
setRemoteVideoPaused:
setRemoteVideoPresentationSizeForCallWithUniqueProxyIdentifier:size:
setRemoteVideoPresentationState:
setRemoteVideoPresentationStateForCallWithUniqueProxyIdentifier:presentationState:
setRemovedMembers:
setReport:
setReportData:
setReportType:
setReporters:
setReportingHierarchySubToken:
setReportingHierarchyToken:
setRepresentedApplicationBundle:
setRepresentsTransitionFromPending:
setRequestActionType:
setRequestBlobRecoveryOptions:
setRequestCLTMThrottleUncapToken:
setRequiredCapabilities:requiredLackOfCapabilities:
setRequiredConnectionCapability:
setRequiresAuthentication:
setRequiresInCallSounds:
setRequiresInviteDictionary:
setResolvedDescriptor:
setResolver:
setRetry:
setRetryCount:
setRingtoneSoundURL:
setRingtoneSoundURLString:
setRoute:
setRouteManager:
setRouteWasPickedHandler:
setRoutes:
setRoutesDidChangeHandler:
setSKEBlob:
setSandboxExtensionHandle:
setSceneAssociationBehavior:
setScreenCaptureDisplayID:
setScreenEnabled:
setScreenEnabled:attributes:
setScreenEnabled:forConversationWithUUID:
setScreenEnabled:forParticipantWithIdentifier:
setScreenEnabled:withScreenShareAttributes:forConversationWithUUID:
setScreenShareAttributes:
setScreenShareAttributes:forConversationWithUUID:
setScreenShareAttributesForCallWithUniqueProxyIdentifier:attributes:
setScreenSharingAvailable:
setSecondaryThumperAccounts:
setSelectiveScreenUUID:
setSendDataBlock:
setSendToVoicemailAllowed:
setSender:
setSenderIdentityCapabilitiesStateByUUID:
setSenderIdentityUUID:
setSenderMuteUplink:
setSendingAudio:
setSendingAudio:callID:error:
setSendingAudio:forIdentifier:
setSendingAudioData:
setSendingVideo:
setSendingVideoExpected:
setServerBag:
setServerProvidedLightweightParticipantIdentifiers:
setServerProvidedParticipantIdentifiers:
setService:
setServiceProvider:
setServiceProviders:
setSession:
setSessionApprovalClient:
setSessionEventType:
setSessionObserver:
setSessions:
setSharePlayProtocolVersion:
setSharePlaySystemStateObserver:
setSharingScreen:
setSharingScreen:attributes:
setSharingScreen:attributes:forCallWithUniqueProxyIdentifier:
setSharingScreen:forCallWithUniqueProxyIdentifier:
setShouldAcceptDateConnectedProviderUpdates:
setShouldAssociateScene:
setShouldAuthenticateDefaultAction:
setShouldBackgroundDefaultAction:
setShouldCheckAllGenerators:
setShouldFilterCall:
setShouldHandleSecureMicrophoneEvents:
setShouldIgnoreDowntime:
setShouldIgnoreRingerSwitch:
setShouldMoveFile:
setShouldPreferRelayOverDirectSecondaryCalling:
setShouldRepeat:
setShouldStartAudioPaused:
setShouldStartVideoPaused:
setShouldSuppressInCallUI:
setShouldSuppressRingtone:
setSignalHandlerDispatchSources:
setSilencingUserInfo:
setSiriDisplayName:
setSound:
setSourceIdentifier:
setSplitSessionSecondary:
setSpringBoardPID:
setStagedActivitySession:
setStagedActivitySessionForActivitySession:
setStartWhenStaged:
setState:
setStatus:
setStatusBarManager:
setStatusChangeObserver:
setStreamPreferences:
setString:forKey:error:
setStyle:
setSubscription:capability:enabled:info:
setSubscriptions:
setSubtitle:
setSuggestedName:
setSupported:
setSupportedHandleTypes:
setSupportedMediaTypes:
setSupportsAddCall:
setSupportsAudioAndVideo:
setSupportsAudioOnly:
setSupportsBasebandCalling:
setSupportsCellularData:
setSupportsClientAssertions:
setSupportsContinuationOnTV:
setSupportsCurrentPlatform:
setSupportsDTMF:
setSupportsDisplayingFaceTimeAudioCalls:
setSupportsDisplayingFaceTimeVideoCalls:
setSupportsDisplayingTelephonyCalls:
setSupportsEmergency:
setSupportsEmergencyFallback:
setSupportsFaceTimeAudioRelayCalling:
setSupportsFaceTimeVideoRelayCalling:
setSupportsGrouping:
setSupportsHolding:
setSupportsLeaveContext:
setSupportsMessagesGroupProviding:
setSupportsPrimaryCalling:
setSupportsRecents:
setSupportsRelay:
setSupportsRelayCalling:
setSupportsRestrictingSecondaryCalling:
setSupportsRinging:
setSupportsSendingToVoicemail:
setSupportsSimultaneousVoiceAndData:
setSupportsTTYWithVoice:
setSupportsTelephonyRelayCalling:
setSupportsUnambiguousMultiPartyState:
setSupportsUngrouping:
setSupportsVideo:
setSupportsVoicemail:
setSwappable:
setSynchronousExportedObjectProxy:
setSynchronousServer:
setSystemActivity:
setSystemActivitySessions:
setSystemVolume:
setTTYType:
setTTYType:forCallWithUniqueProxyIdentifier:
setTTYType:forCalls:
setTUInvitationPreferences:
setTURouteDeviceType:
setTakingCallsPrivateAllowed:
setTarget:
setTargetContentIdentifier:
setTelephonyCapableDeviceExists:
setTelephonySenderIdentities:
setThreadIdentifier:
setThumperCallingAllowed:onSecondaryDeviceWithID:
setThumperCallingAllowed:onSecondaryDeviceWithID:forSenderIdentityWithUUID:
setThumperCallingAllowedOnDefaultPairedDevice:forSenderIdentityWithUUID:
setThumperCallingAllowedOnDefaultPairedDeviceDefault:
setThumperCallingAssociatedAccountID:
setThumperCallingCapabilitiesState:
setThumperCallingEnabled:
setThumperCallingEnabled:forSenderIdentityWithUUID:
setTimeToEstablish:
setTimebase:
setTimeout:
setTimeoutBlock:
setTimeoutTimer:
setTimestamp:
setTimestampAsTimeIntervalSinceReferenceDate:
setTitle:
setTokenPrefixedURI:
setToneIdentifier:
setTopic:
setTransitionStatus:
setTransmissionMode:
setTransmissionState:
setTransport:
setTriggers:
setTrustedFromHandle:
setTtyType:
setTuConversationMembers:
setTuHandle:
setTuProvider:
setTuProvider:isVideo:
setTwoTimeCallthroughInterval:
setType:
setUPlusNDowngradeAvailable:
setUPlusOneScreenShareAvailable:
setUUID:
setUUIDString:
setUnderlyingUplinkMuted:
setUniqueID:
setUniqueId:
setUniqueIdentifier:
setUniqueProxyIdentifier:
setUniqueProxyIdentifierToCallTable:
setUniqueProxyIdentifierToCallTableSemaphore:
setUnreliableMessengerConfig:
setUnsafeData:
setUpBreakBeforeMakeTimeout
setUpSession
setUpdateMessage:
setUpdatedDateEpochTime:
setUpgrade:
setUpgradeSessionUUID:
setUpgradeTimeout:
setUplinkMuted:forCallWithUniqueProxyIdentifier:
setUplinkMuted:forCalls:
setUplinkMuted:forConversationWithUUID:
setUplinkMuted:forPendingConversationWithUUID:
setUplinkMutedSetTime:
setUplinkWasExplicitlyMuted:
setUserActivity:
setUserConfiguration:
setUserInfo:
setUserNotificationController:
setUsesNotificationCenter:
setUsingAirplay:forActivitySessionUUID:
setUsingAirplay:forActivitySessionWithUUID:
setUsingAirplay:onActivitySession:onConversationWithUUID:
setUsingBaseband:
setValidationSource:
setValue:
setVerificationStatus:
setVersion:
setVibrationIdentifier:
setVideo:
setVideo:forConversationWithUUID:
setVideoEnabled:
setVideoEnabled:forConversationWithUUID:
setVideoEnabled:forParticipantWithIdentifier:
setVideoEnabled:forPendingConversationWithUUID:
setVideoEnabled:forRemoteParticipantWithIdentifier:conversationUUID:
setVideoPaused:forConversationWithUUID:
setVideoPositionalInfo:
setVideoPriority:
setVideoQuality:
setVideoQuality:visibility:prominence:spatialPosition:isInCanvas:forParticipantWithIdentifier:
setVideoStreamToken:
setVirtualParticipantConfig:
setVirtualParticipants:
setVisibilityContext:
setVisibilityIndex:
setVoLTECallingAvailable:
setVoLTECallingCapabilitiesState:
setVoLTECallingEnabled:forSenderIdentityWithUUID:
setVoiceOverObserver:
setVoiceOverRunningDeterminationHandler:
setVoiceOverTouchShouldRouteToSpeakerDeterminationHandler:
setVoicemail:
setVoipApplicationController:
setVoipToken:
setVolume:
setVoucherManager:
setWaitingForRemoteJoin:forConversationUUID:
setWaitingToJoin:forConversationUUID:
setWaitingToPruneParticipants:
setWantsCallDisconnectionOnInvalidation:
setWantsHoldMusic:
setWantsNotificationResponsesDelivered
setWantsStagingArea:
setWantsVideo:
setWasDialAssisted:
setWiFiCallingAvailable:
setWiFiCallingCapabilitiesState:
setWiFiCallingEnabled:forSenderIdentityWithUUID:
setWiFiCallingRoamingEnabled:forSenderIdentityWithUUID:
setWiFiEmergencyCallingAvailable:
setWindowUUID:
setWindowed:
setWithArray:
setWithCapacity:
setWithObject:
setWithSet:
setupIMAVController
setupNewAVCSession:
setupPendingConversationCleanupTimer
sharePlayAvailable
sharePlayAvailableChanged:
sharePlayDisabled
sharePlayProtocolVersion
sharePlaySupported
sharePlaySystemStateObserver
sharePlayVersionCheckEnabled
sharePlayWithAirplayEnabled
sharedAVSystemController
sharedAudioSystemController
sharedInstance
sharedInstanceWithQueue:
sharedInstanceWithQueue:server:shouldRegister:
sharedManager
sharedMonitor
sharedPhotoLibrary
sharedPrivacyManager
sharedUtilityProvider
shortLabel
shouldAcceptDateConnectedProviderUpdates
shouldAcceptIncomingInvite
shouldAcceptMembershipUpdateFromHandle:joinContext:participantUpdate:existingConversation:
shouldAcceptMessageFromHandle:messageContext:message:existingConversation:
shouldAllowRingingCallStatusIndicator:
shouldAssociateScene
shouldAutoLaunchAppForActivity:onConversation:
shouldBlockNonEmergencyCalls
shouldCheckAllGenerators
shouldDeclineSecondSessionInviteWithMessage:
shouldDeclineSessionInviteWithMessageWhenRelayIsDisabled:
shouldDisableOneToOneModeForScreenShare
shouldDisplayHandoffEligibleConversationControls
shouldEnableProximitySensor
shouldEnrollDefaultPairedDeviceForAccountID:
shouldFilterCall
shouldFilterClient:
shouldFilterIncomingCall:
shouldHandleCarPlayControlEvents
shouldHandleProvider:
shouldHandleProviderWithIdentifier:
shouldHandleSecureMicrophoneEvents
shouldHandleUpdateForProvider:
shouldIgnoreIDSMessage:fromID:context:
shouldIgnoreIDSResource:metadata:fromID:context:
shouldIgnoreSessionInviteWithMessage:fromDestination:
shouldOverrideCallStatus
shouldOverrideNetworkAsAvailable
shouldPreferRelayOverDirectSecondaryCalling
shouldPreserveMomentsFile
shouldProcessRelayMessageOfType:
shouldRegisterCall:
shouldRelayToOtherDevices
shouldRestrictAddresses:forBundleIdentifier:performSynchronously:
shouldRestrictAddresses:forBundleIdentifier:performSynchronously:reply:
shouldRouteToSpeakerWithProximity
shouldScreenTimeRestrictMessage:
shouldSendCall:forClient:
shouldShowInvitationRingingUIForConversation:handle:
shouldShowInvitationRingingUIForConversation:handle:invitationMessagePreferences:
shouldShowInvitationUserNotificationForConversation:handle:
shouldStartAudioPaused
shouldStartRingingTimeoutForConversation:handle:
shouldStartVideoPaused
shouldSuppressInCallStatusBar:
shouldSuppressInCallUI
shouldSuppressRingtone
shouldSuppressRingtoneChanged:
shouldTraceSingposts
shouldTrackCall:
shouldUnenrollDefaultPairedDeviceForAccountID:
shouldUpdateSubscriptions
shouldUseIDSDemuxer
shouldUseSocketForTransport
showEmergencyAddressDisclaimerOnSecondaryDevice
showReminderNotificationOnSecondaryDevice
sign:as:completion:
signData:withAlgorithm:completion:
signalHandlerDispatchSources
signedIntoiCloud
silenceUnknownCallersEnabled
silenceUnknownFaceTimeCallersEnabled
silencingUserInfo
simLessSubscriptionsDidChange
simulateCrashReportFromPID:withKillCode:usingReasonWithFormat:
simulateCrashReportWithFormat:
simulateCrashReportWithReason:pid:code:
simulateInternationalCall
slot
slotID
socket
sortDescriptorWithKey:ascending:
sortUsingSelector:
sortedArrayUsingComparator:
sortedArrayUsingDescriptors:
sound
soundRegion
soundWithAlertType:
sourceIdentifier
sourceIdentifierForRouteID:
sourceVersion
spatialAudioSourceIdentifier
spatialAudioSourceIdentifierForIdentifier:
speakerRoute
speakerRouteAvailable
speechSynthesizer:didCancelSpeechUtterance:
speechSynthesizer:didContinueSpeechUtterance:
speechSynthesizer:didFinishSpeechUtterance:
speechSynthesizer:didPauseSpeechUtterance:
speechSynthesizer:didStartSpeechUtterance:
speechSynthesizer:willSpeakRangeOfSpeechString:utterance:
splitSessionEnded:
splitSessionSecondary
splitSessionStarted:
springBoardPID
springBoardProcessObserver
stableBundleIdentifierForLocalBundleIdentifier:
stagedActivitySession
standardInvitationPreferencesForLink
standardUserDefaults
start
startActivitySessionFor:with:
startAudio
startAudioForConversationWithUUID:
startAudioForConversationsIfNecessary
startAudioSessionWithCompletionHandler:
startBagLoad
startCapture
startConferenceForAnsweredCallWithTransport:remoteInviteDictionary:
startConferenceForDialedCallWithTransport:remoteInviteDictionary:
startConferenceForIdentifier:usingTransport:remoteInviteDictionary:didStartHandler:didStopHandler:
startConferenceForPulledCallWithTransport:remoteInviteDictionary:
startConfigurationWithCompletionHandler:
startConnectionAsCaller:capabilities:socket:error:
startConnectionAsCaller:remoteInviteDictionary:capabilities:destination:error:
startConnectionWithCallID:inviteData:isCaller:capabilities:destination:error:
startConnectionWithCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:error:
startConnectionWithTransport:
startListeningForBestAppSuggestions
startListeningOnMachServiceWithName:
startObservingSessions
startOutgoingOneToOneTimeoutIfNecessary:
startRequestWithMediaType:forStreamToken:requesteeID:reply:
startSuppressRingtoneActivityBroadcastingForCall:
startSuppressRingtoneActivityBroadcastingIfNecessaryForCallWithStatusChange:
startTrackingCall:
startTrackingClient:forProviderIdentifier:
startWithVideoAspectRatioDescriptor:inviteCompletion:
startedCapturingLocalVideo:
startedConnectionAttemptOnTransport:
state
status
statusBarManager
stop
stopActivitySession
stopAudioSession
stopBroadcastingActivity:
stopCallID:
stopCapture
stopConference
stopConferenceForIdentifier:
stopListeningForActivityType:dynamicIdentifier:
stopListeningForActivityType:matchingDynamicIdentifierSubstring:
stopListeningForBestAppSuggestions
stopPlaying
stopSelectiveSharingSession
stopSpeakingAtBoundary:
stopTrackingCall:
stopTrackingPendingMember:forConversation:triggeredLocally:
stoppedCapturingLocalVideo:
stoppedReceivingActivityType:dynamicIdentifier:
storageGuid
storeReceivedLink:fromHandle:isUpdate:completionHandler:
storeWithOptions:
streamToken
streamTokenForStreamGroupID:
streamTokensByCSDClient
string
stringByAppendingFormat:
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:
stringForIMAVChatEndedReason:
stringForKey:
stringForKey:error:
stringForSignatureType:
stringFromContact:style:
stringGUID
stringRepresentationForTUCallDisconnectedReason:
stringValue
stringWithCString:encoding:
stringWithCharacters:length:
stringWithFormat:
stringWithUTF8String:
strongToStrongObjectsMapTable
strongToWeakObjectsMapTable
style
subTitle
subscriptionInfoDidChange
subscriptionStateChangedWithNotification:
subscriptions
subscriptionsDidChangeForClient:
subscriptionsInUse
substringFromIndex:
substringToIndex:
substringWithRange:
subtitle
suggestedName
suggestedNamesForDestinationID:onlySignificant:error:
suggestionsReloadForSelectedRecipients
superclass
supportedHandleTypes
supportedMediaTypes
supportedTUHandleTypes
supportsAudioAndVideo
supportsAudioOnly
supportsBasebandCalling
supportsCapability:
supportsCellularData
supportsClientAssertions
supportsContinuationOnTV
supportsConversations
supportsCurrentPlatform
supportsDTMF
supportsDefaultPairedDevice
supportsDisplayingFaceTimeAudioCalls
supportsDisplayingFaceTimeVideoCalls
supportsEmergency
supportsEmergencyFallback
supportsGrouping
supportsLeaveContext
supportsLinks
supportsMessagesGroupProviding
supportsNonWiFiCalling
supportsNonWiFiFaceTime
supportsPhoneCalls
supportsPrimaryCalling
supportsRelay
supportsRelayCalling
supportsRelayCallingWithoutLocalRelayCallingEnabled
supportsRelayingToOtherDevices
supportsRestrictingSecondaryCalling
supportsScreenSharing
supportsSecureCoding
supportsSendingToVoicemail
supportsSharePlay
supportsSimultaneousVoiceAndData
supportsTTYWithVoice
supportsThumperCallingOverCellularData
supportsUnambiguousMultiPartyState
supportsUngrouping
supportsVideo
supportsVoicemail
supportsWLAN
suppressRingtoneDueToRemoteSuppression
swapCalls
swappable
switchBackToOneToOneIfPossible
switchBackToOneToOneIfPossibleUsingDelay:
switchBluetoothAudioFormats
synchronize
synchronizeExtensionsWithCompletionHandler:
synchronous
synchronousExportedObjectProxy
systemCapabilitiesForSubscription:
systemMuteStatusChanged:
systemStateObserver:screenSharingAllowedStateChanged:
systemStateObserver:sharePlayAllowedStateChanged:
systemStatusPublisher
systemVolume
takingCallsPrivateAllowed
targetContentIdentifier
targetWithPid:
taskState
telephonyCallCapabilities
telephonyCallCapabilitiesChanged
telephonyCallSource
telephonyCapableDeviceExists
telephonyProvider
telephonySenderIdentities
telephonySubscriptionLabelIdentifierForSenderIdentityUUID:
telephonySubscriptions
temporaryDirectory
temporaryFilePath
temporaryGroupUUID
terminatingHandle
thumperCallingAllowedOnDefaultPairedDeviceDefault
thumperCallingCapabilitiesStateByUUID
thumperCallingCapabilitiesStateForAccountID:
thumperCapabilitiesMonitor
thumperCapabilitiesStatesForPreferenceKey:
thumperDeviceInfo
thumperPinExchangeController
thumperPushHandler
thumperService
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timebase
timedOutPickingRouteHandler
timeoutBlock
timeoutForInvitationWithMessage:
timeoutTimer
timestamp
timestampAsTimeIntervalSinceReferenceDate
tinCanCallSource
tinCanProvider
tinCanProviderDelegate
title
toID
tokenPrefixedURI
topic
topicFromBundleId:forType:
trace:
transactionID
transactionManager
transactionObjectsAwaitingCallHistory
transcriptionState
transferFileAtSandboxExtendedURL:toDestinations:withMetadata:
transferFileAtTemporaryURL:toDestinations:withMetadata:
transferFileAtURL:toDestinations:withMetadata:
transitionAttemptForConversation:
transitionStatus
transmissionMode
transmissionState
transport
transportType
triggerEndInterruptionForAudioSessionID:
triggers
trustedFromHandle
tryPassword:
tuActivity
tuActivitySessions
tuAssociationForHandle:
tuConversation
tuConversationActivity
tuConversationActivityContext
tuConversationActivitySession
tuConversationLink
tuConversationLinkDescriptor
tuConversationMember
tuConversationMembers
tuConversationParticipant
tuConversationParticipantAssociation
tuConversationProvider
tuConversationProviderForIdentifier:
tuConversationReport
tuHandle
tuHandleType
tuHandlesWithHandles:
tuInvitationPreference
tuInvitationPreferences
tuLightweightMembers
tuProvider
tuProviders
tuRouteDeviceType
tuScreenShareAttributesForScreenAttributes:
tuSenderIdentity
tuSystemActivitySessions
tuVoucher
tu_UUIDv5ForString:namespaceUUID:
tu_contactStoreConfigurationForBundleIdentifier:
tu_contactsForContactHandles:keyDescriptors:error:
tu_contactsForHandles:keyDescriptors:error:
tu_containsObjectPassingTest:
tu_conversationHandoffDynamicIdentifierForEligibility:
tu_conversationHandoffDynamicIdentifierWithGroupUUID:participantIdentifier:uplinkMuted:sendingVideo:
tu_dataForAuditToken:
tu_defaults
tu_enumeratorForChangeHistoryFetchRequest:error:
tu_firstObjectPassingTest:
tu_handoffEligibility
tu_predicateForConversationLinkDescriptorsIsDeleted:
tu_predicateForConversationLinkDescriptorsWithActivated:
tu_predicateForConversationLinkDescriptorsWithExpirationDateAfter:
tu_predicateForConversationLinkDescriptorsWithGroupUUID:
tu_predicateForConversationLinkDescriptorsWithPrivateKey:
tu_predicateForConversationLinkDescriptorsWithPseudonym:
tvDeviceAppeared:
tvDeviceDisappeared:
twoTimeCallthroughInterval
type
typeAsString:
typeString
uNNotificationsMacOSEnabled
uPlusNDowngradeAvailable
uPlusOneScreenSharing
uPlusOneScrenShareAvailable
uUIDString
underLimitForItem:
underlyingErrorCode
underlyingUplinkMuted
unenrollDefaultPairedDeviceForAccountID:
unformattedInternationalRepresentation
ungroupCall:
ungroupCall:fromOtherCallsInGroup:
ungroupCallWithUniqueProxyIdentifier:
unhold
unholdCall:
unholdCallWithUniqueProxyIdentifier:
unifiedContactWithIdentifier:keysToFetch:error:
unifiedContactsMatchingPredicate:keysToFetch:error:
unionSet:
uniqueID
uniqueIDOverride
uniqueId
uniqueIdentifier
uniqueProxyIdentifier
uniqueProxyIdentifierToCallTable
uniqueProxyIdentifierToCallTableSemaphore
uniqueProxyIdentifierUUID
uniqueRingtoneSoundLinkFilenameWithOriginalFilename:
unregisterActivityType:dynamicIdentifier:
unregisterClient:
unregisterStreamToken:
unregisterStreamToken:reply:
unreliableMessengerConfig
unreliableMessengerEnabled
unsafeData
unsetVoIPToken
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsuppressRingtoneIfNecessary
unzipArchiveAtURL:completion:
update
updateActivatedConversationLinks:
updateActivityAuthorizedBundleIdentifierState:
updateActivityImage:
updateActivitySessionWithUUID:activity:
updateAllowedHandlesForConversation:
updateAttributionsForDescriptor:
updateAudioArbitration
updateAudioVideoHandoffPreferencesForCall:
updateBytesOfDataUsed:forCallWithUniqueProxyIdentifier:callHistoryIdentifier:
updateBytesOfDataUsedFor:with:
updateCacheWithChat:
updateCallHandoffRegistration
updateCallWithProxy:
updateCapabilities:
updateCapabilities:forCallID:
updateClientsWithCall:
updateClientsWithFrequency:inDirection:forCalls:
updateClientsWithMeterLevel:inDirection:forCalls:
updateConferenceForIdentifier:isUsingBaseband:disableAudio:
updateConfiguration:
updateConversation:
updateConversationHandoffEligibility:
updateConversationParticipantToHaveMatchingSiriDisplayName:
updateConversationWithUUID:participantPresentationContexts:
updateCovered
updateDetectingRaiseToAnswer
updateEnabled
updateFirewallWithCallHistoryIfNecessary
updateForDisconnection
updateHandoffActivityStateForCall:
updateHandoffAdvertisementForCall:
updateHandoffAdvertisementForConversation:fromOldConversation:
updateHandoffAdvertisementForConversation:fromOldConversation:uplinkMuted:sendingVideo:
updateHandoffRegistrationForConversation:fromOldConversation:
updateIncomingPendingConversationsByGroupUUID:
updateInterestedBundleIDs:states:
updateLetMeInRequestState:addLink:forConversationWithUUID:
updateLightweightMember:
updateLocalAspectRatiosForOneToOneModeEnabled:
updateLocalMemberNickname:conversationUUID:
updateMemberValidationSource:source:
updateMembers:withContext:messagingCapabilities:triggeredLocally:
updateMembers:withContext:triggeredLocally:
updateMessage
updateMessagesGroupName:
updateMessagesGroupName:onConversationWithUUID:
updateMessagesGroupPhotoOnConversationWithUUID:
updateNetworkCriticalStateIfNecessary
updateOutgoingCallerIDAndSendDelegateCallbacksIfNecessary
updateOutgoingLocalParticipantUUID:forCallsWithOutgoingLocalParticipantUUID:
updatePairedHostDeviceCallCapabilitiesState:
updateParticipantData:withContext:
updateParticipantDestinationIDs:withContextData:requiredCapabilities:requiredLackOfCapabilities:triggeredLocally:
updateParticipantDestinationIDs:withContextData:triggeredLocally:
updateParticipantPresentationContexts:
updateParticipantPresentationContexts:onConversationWithUUID:
updateParticipantType:members:withContext:triggeredLocally:
updateParticipantsWithDestinationIdentifiers:
updatePickableRoutes
updatePropertiesForVideo:
updateProviderConfigurationWithAccounts:
updateProviderConfigurationWithAccounts:senderIdentities:
updateProviderConfigurationWithSenderIdentities:
updateProvidersByIdentifier:localProvidersByIdentifier:pairedHostDeviceProvidersByIdentifier:
updateProximitySensorState
updateRelayCall:
updateRemoteMember:
updateResolvedDescriptor
updateScreenEnabledForRemoteParticipants:
updateState
updateSuppressRingtoneActivityListeningState
updateUINotification
updateVirtualParticipantIdentifier:
updateVoiceOverRoutingForCurrentProximityState
updateVolatileDataWithBlock:
updateWithCallUpdate:
updateWithCallUpdate:notifyDelegate:
updateWithProxyCall:
updateWithRelayMessage:
updateWithUpdate:
updatedDateEpochTime
upgradeCallForConversation:withSessionToken:
upgradeChatIfNecessary:
upgradeSessionUUID
upgradeSessionUUIDForCallWithUUID:
upgradeTimeout
uplinkMuted
uplinkMutedSetTime
uplinkMutedStatusChanged:
uplinkWasExplicitlyMuted
uriForFromID:
userActivity
userActivityUsingDeprecatedCallingIntents:
userConfiguration
userContext
userInfo
userIntentManager
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationController
userNotificationProviderServerXPCInterface
userNotificationWithIdentifier:timeout:alertLevel:displayFlags:displayInformation:
userNotificationWithIdentifier:title:message:defaultButton:alternateButton:otherButton:
username
usesAudioSession
usesSystemMuting
usingBaseband
uuid
validNetworkReachable
validRemoteParticipantHandles
validateAllLinks
validateUserIntentForCallSource:
validationErrorReasonForAlias:
validationSource
validationSourceAsString:
validationStatusForAlias:
value
valueForCapability:
valueForEntitlement:
valueForKey:
valueWithRect:
verificationStatus
verifiedIdentity
verify:completion:
verifyActivitySessionOriginatorFromHandle:message:
verifyAllLightweightmembersAssociated:remoteMembers:
verifyBlobResponseFromHandle:message:existingConversation:
verifyEndorseRepresentsMemberFromHandle:message:existingConversation:
verifyGroupSessionParticipantUpdateAllowedFromHandle:participantUpdate:message:existingConversation:lightweightMembers:
verifyKickMemberPermittedFromHandle:message:
verifyLightweightMessageTypeFromHandle:message:existingConversation:
verifyMessageIntentKeyFromContext:message:
verifySignedData:matchesExpectedData:withTokenURI:forAlgorithm:completion:
vettedAliases
vibration
video
videoCallWithStatus:
videoDeviceController
videoEnabled
videoPaused
videoPresentationSize
videoPresentationState
videoPriority
videoQuality
videoStreamToken
videoToken
virtualParticipantConfig
virtualParticipants
visibility
visibilityContext
voLTECallingAvailable
voLTECallingCapabilitiesState
voiceOverObserver
voiceOverObserver:didChangeEnabled:
voiceOverRunningDeterminationHandler
voiceOverTouchShouldRouteToSpeakerDeterminationHandler
voicePreferred
voicemail
voicemailDatabaseReset:
voicemailInfoAvailableNotification:voicemailInfo:
voicemailStartCallIntentByHandleForHandles:
voicemailsChangedWithNotification:
voipAppBecameDisabledFromLaunching:
voipAppFailedToPostIncomingCall:
voipApplicationController
voipNetworkExtensionPayloadReceived:mustPostCall:withCompletionHandler:
voipNetworkExtensionRegistrationFailed
voipPayloadReceived:mustPostCall:withCompletionHandler:
voipPushDroppedOnTheFloor:
voipRegister
voipRegistrationFailed
voipRegistrationSucceededWithDeviceToken:
voipToken
voipUnregister
voucherManager
voucherWithTUVoucher:
waitForSessionInitialization
waitingChatWithHandle:isOutgoing:
waitingSession
waitingToPruneParticipants
wantsBreakBeforeMakeForCall:
wantsCallDisconnectionOnInvalidation
wantsCallNotificationsDisabledWhileSuspended
wantsCallStopStreamingOnInvalidation
wantsFrequencyChangeNotifications
wantsHoldMusic
wantsLeaveOnInvalidation
wantsStagingArea
wantsVideo
wasDeclined
weakToStrongObjectsMapTable
webNicknameLengthLimit
wiFiActiveAndReachable
wiFiAllowed
wiFiAvailable
wiFiCallingAvailable
wiFiCallingCapabilitiesState
wiFiEmergencyCallingAllowed
wiFiEmergencyCallingAvailable
wifiAllowedForBundleId:
willCaptureRemoteRequestFromRequesterID:
willEnterBackgroundForAllCalls
willRestrictAddresses:forBundleIdentifier:
willRestrictAddresses:forBundleIdentifier:reply:
windowUUID
windowed
wirelessHeadsetAvailable
writeTo:
writeToFile:options:error:
xpcListener
zipDirectoryAtURL:completion:
zone
Additions
CSDMessagingConversationParticipantAssociation
NSCopying
CSDMessagingLinkSyncRecoverMessage
CSDMessagingEncryptedConversationMessage
CSDMessagingConversationLink
CSDRelayController
CSDOrientationMonitor
BKSAccelerometerDelegate
NSObject
CSDCallCenterObserverDelegate
CSDTransactionManager
CSDCrashReporter
CSDVoIPProcessAssertion
CSDAVConference
CSDAVConferenceProviderDelegate
CSDAVConferenceConfiguration
CSDMessagingConversationParticipant
CSDUserActivityManager
TUCallProviderManagerDelegate
CSDUserActivityCommunicatorDelegate
TUConversationManagerDelegate
CSDUnknownCallFilter
CSDCallFilter
CSDAggregateDictionaryReporter
CSDReporter
CSDProximityController
CSDProximitySensorObserverDelegate
TUDelegate
TURouteControllerDelegate
FaceTime
CSDFaceTimeIMAVProviderDelegate
IMAVControllerDelegate
CSDDualFaceTimeProviderDelegate
CSDFaceTimeProviderDelegate
CXProviderDelegatePrivate
CXProviderDelegate
CSDCallHistoryControllerXPCServer
TUCallHistoryControllerXPCServer
CSDFaceTimeIDSService
CSDConversation
CSDIDSGroupSessionDelegate
CPActivitySessionManagerDelegate
CPAudioPolicyStateObserver
CSDAVCSessionDelegate
CSDRelayIDSService
CSDMessagingCallModel
CSDRelayClientController
CSDRelayMessagingControllerClientMessagingDelegate
CSDMessagingHandle
CSDMessagingConversationJoinedMetadata
CSDProviderCall
CSDPauseDigitsQueueDelegate
CSDCallStateMonitor
CSDPendingConversation
CSDStatusBarManager
CSDStatusBarResolverDelegate
CSDNeighborhoodActivityConduitXPCServer
CSDNeighborhoodActivityConduitDelegate
TUNeighborhoodActivityConduitXPCServer
CSDAdditions
CSDCarrierBundlePhoneNumberProvider
CSDCarrierBundlePhoneNumberProviderController
CoreTelephonyClientDelegate
CSDIDSGroupSessionProvider
IDSGroupSessionDelegate
IDSSessionDelegatePrivate
IDSSessionDelegate
CSDIDSSessionProvider
CSDRelayIDSDualSessionData
CSDRelayIDSDualSession
CSDCallHistoryController
CSDMessagingLinkSyncMessage
CSDThumperCapabilitiesMonitor
TUCallCapabilitiesDelegatePrivate
TUCallCapabilitiesDelegate
CSDConversationJoinContext
CSDAccountsController
IDSServiceDelegatePrivate
IDSServiceDelegate
CSDIDSDualSessionProvider
CSDPauseDigits
CSDConversationProviderManagerXPCServer
TUConversationProviderManagerXPCServer
CSDCallProviderManagerXPCServer
TUCallProviderManagerXPCServer
CSDCallProviderManagerDelegate
CSDFaceTimeVideoIDSService
CSDIDSChat
CSDIDSDualSessionDelegate
CSDAVConferenceDelegate
CSDMessagingConversationActivityContext
CSDCallDirectoryManager
CXCallDirectoryNSExtensionManagerDelegate
TinCan
CSDCTCallCapabilities
CSDMessagingRelayMessage
CSDIncomingCallFilterDataSource
CSDMessagingCallProvider
CSDRelayMessagingController
CSDRelayIDSMessengerDelegate
CSDRelayIDSSessionMessengerDelegate
CSDDaemon
TUConfigurationDelegate
CSDAbstractIDSProviderDelegate
CSDIDSChatDelegate
CSDMessagingAVConferenceInviteData
CSDIDSDualSession
CSDIDSDualSessionProviderDelegate
CSDRelayIDSMessenger
CSDThumperAccount
NSMutableCopying
CSDMutableThumperAccount
CSDFaceTimeIDSProviderDelegate
CSDRelayCommonController
CSDRelayMessagingControllerCommonMessagingDelegate
CSDFileTransferController
CSDFileTransferring
CSDCallSourceFetcher
CSDThumperPushHandlerAdditions
CSDThumperPushHandler
CSDPinExchangeDelegate
CSDMessagingCall
CSDRelayCall
CSDCallHistoryManagerXPCServer
CSDCallHistoryManagerDelegate
TUCallHistoryManagerXPCServer
CSDPauseDigitsQueue
CSDXPCClient
CSDConversationLeaveContext
CSDTTYProviderObserver
CSDRelayPairedDeviceMessenger
CSDMessagingConversationActivitySceneAssociationBehavior
CSDProviderCallConfiguration
CSDMessagingConversationParticipantDidJoinContext
CSDMediaAssetManager
CSDMediaAssetManaging
CSDPowerLogReporter
CSDFaceTimeProviderDelegateManagerDelegate
CSDVoIPApplicationMessageContext
PKVoIPXPCClient
CXNetworkExtensionVoIPXPCClient
CSDVoIPApplication
CSDMessagingConversationActivitySession
CSDMessagingPersonNameComponents
CSDMessagingLinkSyncUpdateMessage
CSDStatusBarResolver
CSDRelayConferenceInterface
CSDSandboxExtensionDirectory
CSDPinExchangeController
CSDMessagingMemberAssociationClaim
CSDCallCapabilities
TUCallCapabilitiesXPCServer
TUCallCapabilitiesXPCServerActions
CSDAccountsControllerDelegate
CSDTelephonyCallCapabilitiesDelegate
CSDThumperCapabilitiesMonitorDataSource
CSDBlockedCallFilter
CSDCall
TUDynamicCallDisplayContextDelegate
CXAudioSessionActivationStateObserver
CSDRouteManager
TUAudioDeviceControllerDelegate
CSDMessagingConversationMember
CSDMessagingConversation
CSDMessagingConversationReport
CSDConversationManager
CSDConversationDelegate
CSDPendingMembershipTrackerMessenger
CSDPendingMembershipTrackerDelegate
CSDConversationNoticeDelegate
CSDConversationLinkManagerDelegate
CSDScreenSharingActivityManagerDelegate
CPApplicationPolicyManagerDelegate
CPSystemStateObserverObserver
CPConversationManagerDataSource
CSDMessagingVoucher
CSDCHRecentCall
CSDApplicationRecord
CSDMessagingCallMessage
CSDAudioRouteCollection
CSDFaceTimeAudioIDSService
CSDMessagingConversationActivity
CSDMessagingConversationInvitationPreference
VoIPApplicationAdditions
CSDMessagingCallCapabilitiesState
CSDVoIPProcessAssertionManager
CSDIncomingCallFilter
CSDAppleIDUtilities
CSDRecentsController
CSDMessagingConversationLinkGeneratorDescriptor
CSDIDSSession
CSDMessagingCallDisplayContext
CSDUserActivityCommunicator
UABestAppSuggestionManagerDelegate
CSDUserActivityCommunicatorProtocol
CSDUserConfigurationMigrator
CSDThumperIDSService
CSDIDSGroupSession
CSDIDSGroupSessionProviderDelegate
CSDCallStateController
TUCallServicesXPCServer
TUCallCenterXPCServer
TUCallServicesProxyCallActions
TUCallServicesClientCapabilitiesXPCServer
TUAudioDeviceControllerXPCServer
TURouteControllerXPCServer
TUCallFilterControllerXPCServer
CSDRelayMessagingControllerDelegate
CSDCallDelegate
CSDDeviceLockStateObserver
CSDVoIPApplicationMonitor
CXNetworkExtensionVoIPXPCServer
PKVoIPXPCServer
CSDVoIPApplicationController
APSConnectionDelegate
CXNetworkExtensionMessageControllerHostDelegate
CXNotificationServiceExtensionHostDelegate
CSDConversationNoticeManager
CSDConversationParticipant
CSDCallDataSourceMap
CSDMessagingLabeledHandle
CSDClient
CSDMessagingConversationActivityMetadata
CSDIDSFirewallManager
CSDCallHistoryControllerDelegate
CSDConversationManagerXPCServer
TUConversationManagerXPCServer
TUConversationMediaControllerXPCServer
TUConversationMessagesGroupProviderXPCServer
CSDConversationManagerDelegate
CSDCallProviderManager
CSDCallProviderManagerDataSourceDelegate
CSDFaceTimeConversationProviderDelegate
CSDRaiseToAnswerController
CSDGFTServiceConversationProviderDelegate
CSDRelayHostController
CSDRelayMessagingControllerHostMessagingDelegate
CSDUserActivity
CSDCallProviderManagerDataSource
CSDMomentsReportingSession
CSDSignposts
CSDAVCSession
AVCSessionParticipantDelegate
AVCScreenCaptureDelegate
AVCSessionDelegate
AVCRateAdaptationDelegate
CSDExternalIDSDualSession
CSDRelayConferenceConnection
CSDTelephonyCallCapabilities
CSDCoreTelephonyClientDelegate
CSDMessagingRoute
CSDConversationProviderManager
CSDRelayCallDelegate
CSDMessagingConversationMessage
CSDMessagingLinkSyncCheckInGeneratorDescriptorInfo
CSDMessagingConversationParticipantDidLeaveContext
CSDFaceTimeIMAccount
IDSAccountRegistrationDelegate
CSDMockCall
CSDCoreTelephonyClient
CoreTelephonyClientCapabilitiesDelegate
CSDMessagingCallModelState
CSDMessagingSenderIdentity
CSDABCReporter
CSDReportingController
CSDMomentsReportingSessionDelegate
CSDReporterDataSource
CSDMomentsControllerDelegate
CSDVoiceOverObserver
CSDCallFilterController
CSDMessagingLinkSyncCheckInMessage
CSDCallHistoryManager
CSDConversationProvider
CSDIDSService
IDSAccountControllerDelegate
Messaging
CSDRelayIDSSessionMessenger
CSDRelayIDSDualSessionDelegate
CSDMomentsController
CSDFileTransferringDelegate
CSDAVCMomentsDelegate
TUMomentsControllerXPCServer
CSDAVConferenceProvider
AVConferenceDelegate
CSDPulledCallContext
CSDProviderCallDataSource
CXCallControllerHostDelegate
CSDCallSourceFetcherDataSource
CXCallSourceManagerDelegate
CXCallSourceUpdates
CSDProviderCallDelegate
CSDClientManager
NSXPCListenerDelegate
CSDClientManagerExportedObjectProxy
CSDCallDataSource
CSDProximitySensorObserver
CSDAbstractFaceTimeConversationProviderDelegate
CSDAbstractFaceTimeConversationProviderDelegateProtocol
CSDRelayCallDataSource
CSDVoIPApplicationMessage
CSDVoIPApplicationMessageAdditions
CSDIDSTransport
CSDCallContainer
CSDConversationServerBag
TUConversationLinkDescriptorDataSource
TUVouchingEnablement
CSDIDSPushHandler
OS_nw_activity
TUScreenShareAttributes
CSDAVCMoments
TUFeatureFlags
CSDAVCMomentsRequest
TUContactsDataSource
OS_dispatch_source_timer
IDSCTSIM
CNKeyDescriptor
OS_xpc_object
TUCallContainer
TUCallContainerPrivate
NSSecureCoding
OS_dispatch_source
NSCoding
CSDFaceTimeIDSProviderDelegateServerBag
CARSessionObserving
CSDConduitIDSProxy
TLAlertPlaybackObserver
IDSServicePseudonymDelegate
CSDMomentsServerBag
CSDMomentsControllerLocalCapabilities
CHCallInteractionManagerDelegate
CHDelegate
AVSpeechSynthesizerDelegate
CSDIDSProviderDelegateCapabilities
CSDFaceTimeIDSProviderDelegateCapabilities
TUAudioSystemControllerDelegate
UNUserNotificationCenterDelegate
TUUserNotificationsProviderXPCServer
CoreTelephonyClientVoicemailDelegate
AVCMomentsDelegate
@16@0:8
@24@0:8@16
@24@0:8^{_NSZone=}16
v20@0:8I16
v20@0:8B16
B16@0:8
v24@0:8Q16
B24@0:8@16
v24@0:8@16
Q16@0:8
I16@0:8
v16@0:8
@"NSString"
{?="identifier"b1"version"b1}
#16@0:8
@24@0:8Q16
@"NSMutableArray"
{?="version"b1}
@"NSData"
@36@0:8i16@20@28
@36@0:8@16i24@28
@28@0:8@16B24
v24@0:8d16
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
d16@0:8
@"CSDMessagingConversationLinkGeneratorDescriptor"
@"CSDMessagingHandle"
{?="creationDateEpochTime"b1"pseudonymExpirationDateEpochTime"b1"linkLifetimeScope"b1"isActivated"b1}
@"CSDCallStateController"
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v48@0:8@16d24f32f36f40i44
v32@0:8@16q24
v48@0:8@"BKSAccelerometer"16d24f32f36f40i44
v32@0:8@"BKSAccelerometer"16q24
v32@0:8@16@24
v32@0:8@"<CSDCallCenterObserver>"16@"CSDCall"24
v24@0:8@"<CSDCallCenterObserver>"16
q16@0:8
v24@0:8q16
@"BKSAccelerometer"
@"<CSDCallCenterObserver>"
v32@0:8@16@"NSString"24
@"NSMapTable"
@"NSObject<OS_dispatch_queue>"
v32@0:8@16i24I28
v32@0:8i16I20@24
v24@0:8@?16
@"BKSProcessAssertion"
v36@0:8@16B24@28
v40@0:8@16@24@32
v28@0:8@16f24
v28@0:8@16B24
v40@0:8@16@24q32
v36@0:8@"<CSDAVConferenceProvider>"16B24@"NSError"28
v40@0:8@"<CSDAVConferenceProvider>"16@"NSError"24@"NSDictionary"32
v24@0:8@"<CSDAVConferenceProvider>"16
v32@0:8@"<CSDAVConferenceProvider>"16@"NSData"24
v28@0:8@"<CSDAVConferenceProvider>"16f24
v28@0:8@"<CSDAVConferenceProvider>"16B24
v40@0:8@"<CSDAVConferenceProvider>"16@"NSData"24q32
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
v24@0:8@"CSDAVConferenceConfiguration"16
v24@0:8@"CSDIDSTransport"16
v24@0:8@"VCCapabilities"16
v24@0:8@"NSData"16
v32@0:8@"NSString"16@"NSString"24
@"<CSDAVConferenceDelegate>"16@0:8
v24@0:8@"<CSDAVConferenceDelegate>"16
@"NSObject<OS_dispatch_queue>"16@0:8
v24@0:8@"NSObject<OS_dispatch_queue>"16
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@"NSError"16@0:8
@"NSDate"16@0:8
v32@0:8q16@24
v20@0:8f16
q32@0:8@16^@24
@?16@0:8
@"<CSDAVConferenceDelegate>"
@"NSDate"
@"NSNumber"
@"NSDictionary"
@"NSError"
@"CSDAVConferenceConfiguration"
@"<CSDAVConferenceProvider>"
{CGSize="width"d"height"d}
@"VCCapabilities"
@"NSUUID"
@"RTCSecureHierarchyToken"
@"CSDMessagingConversationParticipantAssociation"
{?="identifier"b1"avMode"b1"options"b1"sharePlayProtocolVersion"b1"version"b1"guestModeEnabled"b1"isGFTDowngradeToOneToOneAvailable"b1"isGondolaCallingAvailable"b1"isLightweight"b1"isMirageAvailable"b1"isMomentsAvailable"b1"isScreenSharingAvailable"b1"isUPlusNDowngradeAvailable"b1"isUPlusOneScreenSharingAvailable"b1"supportsLeaveContext"b1}
i24@0:8q16
@32@0:8@16Q24
v24@0:8@"TUCallProviderManager"16
v36@0:8I16@20@28
v28@0:8I16@20
v36@0:8I16@"NSString"20@"NSString"28
v28@0:8I16@"NSString"20
v44@0:8@16@24Q32B40
v48@0:8@16@24@32@40
v48@0:8@16@24Q32@40
v36@0:8@16@24B32
v24@0:8@"TUConversationManager"16
v32@0:8@"TUConversationManager"16@"TUConversation"24
v40@0:8@"TUConversationManager"16@"TUConversation"24@"TUConversation"32
v32@0:8@"TUConversationManager"16@"NSArray"24
v40@0:8@"TUConversationManager"16@"TUConversation"24@"TUConversationParticipant"32
v40@0:8@"TUConversationManager"16@"TUConversation"24@"TUConversationActivityEvent"32
v44@0:8@"TUConversationManager"16@"TUConversation"24Q32B40
v32@0:8@"TUConversationManager"16@"NSString"24
v48@0:8@"TUConversationManager"16@"TUConversation"24@"TUConversationParticipant"32@"TUConversationNotice"40
v40@0:8@"TUConversationManager"16@"TUConversation"24@"NSSet"32
v40@0:8@"TUConversationManager"16@"TUConversation"24@"TUConversationMember"32
v40@0:8@"TUConversationManager"16@"TUConversation"24@"NSData"32
v40@0:8@"TUConversationManager"16@"TUConversationMember"24@"TUConversationLink"32
v48@0:8@"TUConversationManager"16@"TUConversation"24Q32@"TUConversationActivitySession"40
v36@0:8@"TUConversationManager"16@"<TUScreenShareAttributes>"24B32
v32@0:8@"TUConversationManager"16@"NSError"24
v40@0:8@"TUConversationManager"16@"TUConversation"24@"TUConversationActivitySession"32
v28@0:8@"TUConversationManager"16B24
@48@0:8@16@24@32@40
v40@0:8@16@24B32B36
@32@0:8@16B24B28
@"<CSDUserActivityCommunicatorProtocol>"
@"TUCallCenter"
@"CSDUserActivity"
@"<TUFeatureFlags>"
B36@0:8@16@24B32
q32@0:8@16@24
B40@0:8@16@24@32
B32@0:8@16@24
B24@0:8@"TUHandle"16
B36@0:8@"TUHandle"16@"NSString"24B32
q32@0:8@"NSArray"16@"NSString"24
B24@0:8@"CSDCall"16
B40@0:8@"NSString"16@"NSString"24@"NSString"32
B36@0:8@"NSArray"16@"NSString"24B32
B32@0:8@"NSArray"16@"NSString"24
v40@0:8@16@24Q32
v36@0:8@16@24i32
v44@0:8@16@24@32B40
v40@0:8@"CSDReportingController"16@"CSDCall"24Q32
v32@0:8@"CSDReportingController"16@"CSDCall"24
v24@0:8@"CSDReportingController"16
v36@0:8@"CSDReportingController"16@"CSDMessagingRelayMessage"24B32
v32@0:8@"CSDReportingController"16@"CXTransactionGroup"24
v40@0:8@"CSDReportingController"16@"CXAction"24@"CSDCall"32
v32@0:8@"CSDReportingController"16@"CSDMomentsUsageReport"24
v40@0:8@"CSDReportingController"16@"TURoute"24@"CSDCall"32
v36@0:8@"CSDReportingController"16@"NSString"24i32
v32@0:8@"CSDReportingController"16@"TUConversation"24
v40@0:8@"CSDReportingController"16@"NSArray"24@"TUConversation"32
v40@0:8@"CSDReportingController"16@"NSArray"24@"NSUUID"32
v32@0:8@"CSDReportingController"16@"CSDIDSChat"24
v32@0:8@"CSDReportingController"16@"NSString"24
v44@0:8@"CSDReportingController"16@"NSUUID"24@"RTCSecureHierarchyToken"32B40
v48@0:8@"CSDReportingController"16@"TUConversationActivitySession"24@"NSDate"32@"NSDate"40
v32@0:8@"CSDReportingController"16@"TUConversationLink"24
v36@0:8@"CSDReportingController"16@"TUConversation"24B32
@"<CSDReporterDataSource>"16@0:8
v24@0:8@"<CSDReporterDataSource>"16
v28@0:8@"<CSDProximitySensorObserver>"16B24
v24@0:8@"TURouteController"16
@40@0:8@16@24@32
@64@0:8@16@24@32@40@48@56
@"TURouteController"
@"<CSDOrientationObserver>"
@"<CSDProximitySensorObserver>"
@"<CSDVoiceOverObserver>"
v24@0:8@"IMAVChat"16
v32@0:8@"IMHandle"16q24
v24@0:8@"CXProvider"16
B32@0:8@"CXProvider"16@"CXTransaction"24
v32@0:8@"CXProvider"16@"CXStartCallAction"24
v32@0:8@"CXProvider"16@"CXAnswerCallAction"24
v32@0:8@"CXProvider"16@"CXEndCallAction"24
v32@0:8@"CXProvider"16@"CXSetHeldCallAction"24
v32@0:8@"CXProvider"16@"CXSetMutedCallAction"24
v32@0:8@"CXProvider"16@"CXSetGroupCallAction"24
v32@0:8@"CXProvider"16@"CXPlayDTMFCallAction"24
v32@0:8@"CXProvider"16@"CXAction"24
v32@0:8@"CXProvider"16@"AVAudioSession"24
v32@0:8@"CXProvider"16@"CXSendMMIOrUSSDCodeAction"24
v32@0:8@"CXProvider"16@"CXJoinCallAction"24
v32@0:8@"CXProvider"16@"CXSetTTYTypeCallAction"24
v32@0:8@"CXProvider"16@"CXSetSendingVideoCallAction"24
v32@0:8@"CXProvider"16@"CXSetSharingScreenCallAction"24
v32@0:8@"CXProvider"16@"CXSetScreenShareAttributesCallAction"24
v32@0:8@"CXProvider"16@"CXEnableVideoCallAction"24
v32@0:8@"CXProvider"16@"CXSetRelayingCallAction"24
v32@0:8@"CXProvider"16@"CXPullCallAction"24
v32@0:8@"CXProvider"16@"CXSetVideoPresentationSizeCallAction"24
v32@0:8@"CXProvider"16@"CXSetVideoPresentationStateCallAction"24
B24@0:8@"NSUUID"16
@"NSUUID"24@0:8@"NSUUID"16
v24@0:8@"NSUUID"16
v28@0:8@16I24
v56@0:8{CGSize=dd}16{CGSize=dd}32@48
I24@0:8q16
{os_unfair_lock_s=I}16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"<CSDFaceTimeProviderDelegateManagerDelegate>"
@"CXProvider"
@"NSMutableOrderedSet"
Vv24@0:8@16
Vv24@0:8@"NSArray"16
v24@0:8@"<TUCallHistoryControllerXPCClient>"16
@"CSDCallHistoryController"
@"CSDClientManager"
v44@0:8@16B24@28@36
v36@0:8@16@24I32
v36@0:8@16S24@28
v44@0:8@16@24I32S36B40
v44@0:8@16@24S32@36
v32@0:8@"CSDIDSGroupSession"16@"NSDictionary"24
v44@0:8@"CSDIDSGroupSession"16B24@"NSSet"28@"NSError"36
v32@0:8@"CSDIDSGroupSession"16@"NSError"24
v24@0:8@"CSDIDSGroupSession"16
v36@0:8@"CSDIDSGroupSession"16@"NSError"24I32
v36@0:8@"CSDIDSGroupSession"16S24@"NSError"28
v32@0:8@"CSDIDSGroupSession"16@"NSArray"24
v44@0:8@"CSDIDSGroupSession"16@"NSArray"24I32S36B40
v40@0:8@"CSDIDSGroupSession"16@"NSData"24@"IDSGroupSessionActiveParticipant"32
v44@0:8@"CSDIDSGroupSession"16@"NSData"24S32@"IDSGroupSessionActiveParticipant"36
v28@0:8@"CSDIDSGroupSession"16I24
v40@0:8@16@24@?32
@40@0:8@16Q24@32
v48@0:8@16Q24@32@?40
v32@0:8@"<CPActivitySessionManager>"16@"TUConversationActivitySession"24
B32@0:8@"<CPActivitySessionManager>"16@"TUConversationActivitySession"24
v32@0:8@"<CPActivitySessionManager>"16@"TUConversationActivityEvent"24
v40@0:8@"<CPActivitySessionManager>"16@"NSString"24@?<v@?@>32
v40@0:8@"<CPActivitySessionManager>"16@"NSArray"24@"NSString"32
@"TUConversationParticipant"40@0:8@"<CPActivitySessionManager>"16Q24@"NSString"32
v48@0:8@"<CPActivitySessionManager>"16Q24@"NSString"32@?<v@?@"TUConversationParticipant">40
@"NSString"24@0:8@"<CPActivitySessionManager>"16
v48@0:8@"<CPActivitySessionManager>"16@"TUConversationActivitySession"24@"NSDate"32@"NSDate"40
v36@0:8@"<CPActivitySessionManager>"16@"TUConversationActivitySession"24B32
v40@0:8@"<CPActivitySessionManager>"16@"TUConversationActivitySession"24Q32
v28@0:8@"<CPAudioRoutePolicyManager>"16B24
v40@0:8@16B24B28@32
v52@0:8Q16B24q28q36q44
v56@0:8Q16B24B28q32q40q48
v36@0:8Q16B24q28
v40@0:8Q16q24q32
v28@0:8Q16B24
v36@0:8@"<CSDAVCSession>"16B24@"NSError"28
v32@0:8@"<CSDAVCSession>"16@"NSError"24
v40@0:8@"<CSDAVCSession>"16B24B28@"NSError"32
v32@0:8@"<CSDAVCSession>"16q24
@"CSDConversationParticipant"32@0:8@"<CSDAVCSession>"16Q24
v24@0:8@"<CSDAVCSession>"16
@152@0:8@16@24@32@40@48B56@60@68@76@84@92@100@108@116@124B132Q136@144
@176@0:8@16@24@32@40@48B56@60@68@76@84@92@100@108@116@124B132Q136@144@152@160@168
v28@0:8B16@20
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v32@0:8Q16@24
v40@0:8Q16@24Q32
v48@0:8@16@24@32B40B44
B28@0:8@16B24
@20@0:8B16
v28@0:8B16Q20
v32@0:8q16Q24
v28@0:8S16@20
i28@0:8@16i24
v32@0:8@16@?24
@"NSSet"
@"<CSDConversationDelegate>"
@"TUConversationLink"
@"TUConversationMember"
@"TUHandle"
@"NSArray"
@"TUConversationActivitySession"
@"CPActivitySessionManager"
@"TUConversationReport"
@"TUConversationParticipantAssociation"
@"TUConversationHandoffEligibility"
@"NSMutableDictionary"
@"NSMutableSet"
@"CSDIDSGroupSession"
@"TUVideoDeviceController"
@"CSDFaceTimeInviteDemuxer"
@"CSDConversationParticipant"
@"CPApplicationPolicyManager"
@"CPAudioRoutePolicyManager"
@"CPSystemStateObserver"
@"<CSDConversationServerBag>"
@"NSObject"
@"TUCallScreenShareAttributes"
@"TUConversationProvider"
@"CXCallFailureContext"
@"<CSDAVCSession>"
@"FTDeviceSupport"
{?="supportsAddCall"b1"supportsDTMF"b1"supportsGrouping"b1"supportsHolding"b1"supportsSendingToVoicemail"b1"supportsUnambiguousMultiPartyState"b1"supportsUngrouping"b1}
v28@0:8@"CSDMessagingRelayMessage"16B24
v24@0:8@"CSDMessagingRelayMessage"16
v32@0:8@"CSDMessagingRelayMessage"16@?<v@?@"NSDictionary">24
@28@0:8i16@20
C16@0:8
v20@0:8C16
{?="type"b1}
@"CSDMessagingConversationParticipant"
v24@0:8@"CSDPauseDigitsQueue"16
@32@0:8@16@24
@52@0:8@16@24@32B40B44i48
@44@0:8@16@24@32B40
@"TUParticipant"
@"NSURL"
@"<CSDProviderCallDelegate>"
@"CXCallSource"
@"CXAbstractProviderSource"
@"CSDProviderDisplayMonitor"
@"CXCallUpdate"
@"CSDPauseDigitsQueue"
@"TUUserConfiguration"
@"NSObject<OS_dispatch_source>"
@"CSDLetMeInRequestorKeyAgreement"
v24@0:8@"<CSDStatusBarResolver>"16
@"<CSDStatusBarResolver>"
@"STCallingStatusDomainPublisher"
@"STCallingStatusDomainCallDescriptor"
v48@0:8@16@24q32@?40
v24@0:8@"TUNearbyDeviceHandle"16
v48@0:8@"TUConversation"16@"TUNearbyDeviceHandle"24q32@?<v@?B@"NSError">40
v24@0:8@?<v@?@"NSSet"@"NSError">16
v24@0:8@?<v@?@"TUNearbyDeviceHandle"@"NSError">16
v40@0:8@"TUNearbyDeviceHandle"16@"NSUUID"24@?<v@?B@"NSError">32
v32@0:8@"TUNearbyDeviceHandle"16@?<v@?B@"NSError">24
v24@0:8@"<TUNeighborhoodActivityConduitXPCClient>"16
@"CSDNeighborhoodActivityConduit"
@"CSDClient"
@40@0:8@16@24^@32
@"<CSDCarrierBundlePhoneNumberProviderControllerDelegate>"
@"CoreTelephonyClient"
v36@0:8@16I24@28
v40@0:8@16@24I32B36
v40@0:8@16@24I32S36
v24@0:8@"IDSGroupSession"16
v36@0:8@"IDSGroupSession"16I24@"NSError"28
v40@0:8@"IDSGroupSession"16@"NSArray"24@"NSError"32
v40@0:8@"IDSGroupSession"16@"NSDictionary"24@"NSError"32
v40@0:8@"IDSGroupSession"16@"IDSGroupSessionParticipantUpdate"24@"NSError"32
v32@0:8@"IDSGroupSession"16@"NSError"24
v32@0:8@"IDSGroupSession"16@"NSDictionary"24
v36@0:8@"IDSGroupSession"16@"NSArray"24B32
v40@0:8@"IDSGroupSession"16@"NSArray"24I32B36
v44@0:8@"IDSGroupSession"16@"NSArray"24I32S36B40
v36@0:8@"IDSGroupSession"16S24@"NSError"28
v40@0:8@"IDSGroupSession"16@"NSArray"24I32S36
v32@0:8@"IDSGroupSession"16@"NSArray"24
v40@0:8@"IDSGroupSession"16@"NSData"24@"IDSGroupSessionActiveParticipant"32
v44@0:8@"IDSGroupSession"16@"NSData"24S32@"IDSGroupSessionActiveParticipant"36
v28@0:8@"IDSGroupSession"16I24
v32@0:8@"IDSSession"16@"NSString"24
v24@0:8@"IDSSession"16
v36@0:8@"IDSSession"16I24@"NSError"28
v32@0:8@"NSString"16@"NSData"24
v32@0:8@"IDSSession"16@"NSArray"24
v40@0:8@"IDSSession"16@"NSString"24@"NSData"32
v32@0:8@"IDSSession"16@"NSSet"24
v36@0:8@"IDSSession"16@"NSSet"24B32
v52@0:8@16@24@32@40B48
Q32@0:8Q16@24
v40@0:8Q16@24@?32
v36@0:8@"NSArray"16@"NSData"24B32
v52@0:8@"NSArray"16@"NSData"24@"NSArray"32@"NSArray"40B48
v24@0:8@"NSArray"16
v32@0:8@"NSString"16@?<v@?@>24
v32@0:8@"NSArray"16@"NSString"24
v32@0:8@"TUConversationActivitySessionContainer"16@"NSData"24
Q32@0:8Q16@"NSData"24
v40@0:8Q16@"NSData"24@?<v@?Q>32
v32@0:8@"NSSet"16@"NSSet"24
v28@0:8S16@"<IDSDestinationProtocol>"20
v28@0:8S16@"NSArray"20
@"<CSDIDSGroupSessionProviderDelegate>"16@0:8
v24@0:8@"<CSDIDSGroupSessionProviderDelegate>"16
@"NSArray"16@0:8
@"NSSet"16@0:8
@68@0:8@16@24@32@40@48B56B60B64
@"IDSGroupSession"
@"<CSDIDSGroupSessionProviderDelegate>"
@"IDSAccount"
@36@0:8@16B24@28
@60@0:8@16B24@28@36@44@52
@52@0:8@16@24@32i40@44
v36@0:8@16B24@?28
@"<CSDRelayIDSDualSessionDelegate>"
@"IDSDestination"
@"IDSDevice"
@"<CSDCallHistoryControllerDelegate>"
@"CSDMessagingLinkSyncCheckInMessage"
@"CSDMessagingLinkSyncRecoverMessage"
@"CSDMessagingLinkSyncUpdateMessage"
{?="type"b1"version"b1}
v32@0:8@16^{__CFString=}24
@24@0:8^{__CFString=}16
@"<CSDThumperCapabilitiesMonitorDataSource>"
@"NPSDomainAccessor"
@"TUConversationActivity"
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v68@0:8@16@24@32@40q48@56B64
v76@0:8@16@24@32@40q48@56B64@68
v72@0:8@16@24@32@40@48@56@64
v48@0:8@16@24d32@40
v68@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40q48@"NSError"56B64
v76@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40q48@"NSError"56B64@"IDSMessageContext"68
v72@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@"NSArray"48@"NSArray"56@"NSDictionary"64
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@48
v48@0:8@"IDSService"16@"NSString"24d32@"NSError"40
v48@0:8@"IDSService"16@"NSString"24@"NSString"32@"NSString"40
v32@0:8@"IDSService"16q24
@"<CSDAccountsControllerDelegate>"
v32@0:8@"NSData"16@"NSSet"24
v28@0:8@"NSData"16B24
@"<CSDIDSDualSessionProviderDelegate>"16@0:8
v24@0:8@"<CSDIDSDualSessionProviderDelegate>"16
@"<CSDIDSDualSessionProviderDelegate>"
@"IDSSession"
Vv32@0:8@16@?24
Vv24@0:8@?16
Vv48@0:8@16d24@32@?40
Vv48@0:8@16@24@32@?40
Vv40@0:8@16@24@?32
Vv32@0:8@"NSString"16@?<v@?@"TUConversationProvider">24
Vv24@0:8@?<v@?@"NSArray">16
Vv32@0:8@"NSString"16@?<v@?@"NSError">24
Vv32@0:8@"TUConversationProvider"16@?<v@?@"NSError">24
Vv48@0:8@"TUConversationProvider"16d24@"NSString"32@?<v@?@"TUHandle"@"NSDate"@"NSError">40
Vv48@0:8@"TUHandle"16@"TUConversationProvider"24@"NSDate"32@?<v@?B@"NSDate"@"NSError">40
Vv40@0:8@"TUHandle"16@"TUConversationProvider"24@?<v@?B@"NSError">32
v24@0:8@"<TUConversationProviderManagerXPCClient>"16
@"TUConversationManager"
@"CSDConversationProviderManager"
Vv24@0:8@?<v@?@"NSDictionary"@"NSDictionary"@"NSDictionary">16
Vv24@0:8@"NSString"16
Vv32@0:8@"TUDialRequest"16@?<v@?@"NSError">24
v24@0:8@"<TUCallProviderManagerXPCClient>"16
v24@0:8@"CSDCallProviderManager"16
@"CSDCallProviderManager"
v28@0:8@16i24
v28@0:8@"CSDIDSDualSession"16i24
v24@0:8@"CSDIDSDualSession"16
v36@0:8@"CSDIDSDualSession"16@"NSArray"24B32
v32@0:8@"CSDIDSDualSession"16@"NSData"24
v40@0:8@16q24@32
v24@0:8@"<CSDAVConference>"16
v40@0:8@"<CSDAVConference>"16q24@"NSError"32
v28@0:8@"<CSDAVConference>"16B24
v32@0:8@"<CSDAVConference>"16@"NSData"24
v28@0:8@"<CSDAVConference>"16f24
v32@0:8@"<CSDAVConference>"16q24
v40@0:8@"<CSDAVConference>"16@"NSData"24q32
v32@0:8@"<CXVideoAspectRatioDescriptor>"16@?<v@?@"NSArray"B>24
v24@0:8@"<CXVideoAspectRatioDescriptor>"16
@"<CSDIDSChatDelegate>"16@0:8
v24@0:8@"<CSDIDSChatDelegate>"16
@"NSUUID"16@0:8
@"TUHandle"16@0:8
@"CXCallFailureContext"16@0:8
@36@0:8@16@24B32
@44@0:8@16@24B32@36
@48@0:8@16@24@32B40B44
v32@0:8@16B24B28
@"<CSDIDSChatDelegate>"
@"CSDExternalIDSDualSession"
@"<CSDAVConference>"
v32@0:8@"CXCallDirectoryNSExtensionManager"16@"NSArray"24
@"<CSDDeviceLockStateObserver>"
@"CXCallDirectoryManager"
@"CXCallDirectoryNSExtensionManager"
f16@0:8
@"CSDMessagingAVConferenceInviteData"
@"CSDMessagingCallCapabilitiesState"
@"CSDMessagingCallModel"
@"CSDMessagingCallModelState"
@"CSDMessagingCallDisplayContext"
@"CSDMessagingCallProvider"
@"CSDMessagingRoute"
{?="hostCallCreationTime"b1"messageSendTime"b1"hardPauseState"b1"protoDisconnectedReason"b1"protoOriginatingUIType"b1"protoPriority"b1"protoProtocolVersion"b1"protoService"b1"protoSoundRegion"b1"protoTTYType"b1"receivedMessageType"b1"requestActionType"b1"systemVolume"b1"type"b1"protoCannotBeAnswered"b1"protoCannotRelayAudioOrVideoOnPairedDevice"b1"protoEmergency"b1"protoExpectedEndpointOnMessagingDevice"b1"protoFailureExpected"b1"protoNeedsManualInCallSounds"b1"protoRemoteUplinkMuted"b1"protoSOS"b1"protoShouldSuppressRingtone"b1"protoSupportsEmergencyFallback"b1"protoSupportsTTYWithVoice"b1"protoUplinkMuted"b1"protoVideo"b1"protoVoicemail"b1"protoWantsHoldMusic"b1}
v24@0:8@?<q@?@"NSString"@"NSString">16
B32@0:8@"NSString"16@"NSString"24
@"DNDEventBehaviorResolutionService"
@"TUCallProviderManager"
^I16@0:8
I24@0:8Q16
v32@0:8^I16Q24
{?="list"^I"count"Q"size"Q}
{?="maximumCallGroups"b1"maximumCallsPerCallGroup"b1"supportsAudioAndVideo"b1"supportsAudioOnly"b1"supportsEmergency"b1"supportsRecents"b1"supportsVoicemail"b1}
v48@0:8@"CSDRelayIDSMessenger"16@"CSDMessagingRelayMessage"24@"IDSDestination"32@"IDSDevice"40
v36@0:8@"CSDRelayIDSMessenger"16@"NSArray"24B32
q24@0:8@16
B24@0:8@"CSDMessagingRelayMessage"16
B32@0:8@"CSDMessagingRelayMessage"16@"IDSDestination"24
q24@0:8@"CSDMessagingRelayMessage"16
@"NSArray"24@0:8@"CSDMessagingRelayMessage"16
q24@0:8q16
v28@0:8i16@20
v28@0:8@16C24
B20@0:8i16
v32@0:8@?16@24
@"<CSDRelayMessagingControllerDelegate>"
@"<CSDRelayMessagingControllerClientMessagingDelegate>"
@"<CSDRelayMessagingControllerHostMessagingDelegate>"
@"<CSDRelayMessagingControllerCommonMessagingDelegate>"
@"CSDRelayIDSSessionMessenger"
@"CSDRelayPairedDeviceMessenger"
@"<CSDCallContainer>"
v24@0:8@"TUConfiguration"16
v28@0:8i16@?20
@"CSDConversationProviderManagerXPCServer"
@"CSDCallStateMonitor"
@"CSDRelayMessagingController"
@"CSDRelayClientController"
@"CSDRelayHostController"
@"CSDRelayCommonController"
@"CSDCallDirectoryManager"
@"CSDVoIPApplicationController"
@"CSDMomentsController"
@"CSDUserNotificationController"
@"CSDVoiceOverObserver"
@"CSDDeviceLockStateObserver"
@"CSDOrientationMonitor"
@"CSDProximityController"
@"CSDProximitySensorObserver"
@"CSDRaiseToAnswerController"
@"CSDPowerAssertionManager"
@"CSDAudioController"
@"CSDHandoffAudioController"
@"CSDStatusBarManager"
{CGSize=dd}24@0:8@16
B24@0:8@"<CSDIDSChat>"16
{CGSize=dd}24@0:8@"<CSDIDSChat>"16
v24@0:8@"<CSDIDSChat>"16
v32@0:8@"<CSDIDSChat>"16@"NSData"24
v28@0:8@"<CSDIDSChat>"16f24
v32@0:8@"<CSDIDSChat>"16q24
@"<CSDIDSProviderDelegateCapabilities>"
v40@0:8@"<CSDIDSDualSessionProvider>"16@"NSString"24@"NSData"32
v24@0:8@"<CSDIDSDualSessionProvider>"16
v36@0:8@"<CSDIDSDualSessionProvider>"16@"NSSet"24B32
v36@0:8@"<CSDIDSDualSessionProvider>"16I24@"NSError"28
@28@0:8@16i24
v32@0:8@16i24B28
@"<CSDIDSDualSessionDelegate>"
@"<CSDIDSDualSessionProvider>"
@"<CSDRelayIDSMessengerDelegate>"
@56@0:8@16@24@32q40@48
v48@0:8@16@24@32@?40
@"<CSDFaceTimeIDSProviderDelegateCapabilities>"
@"NSOrderedSet"
@"<CSDFaceTimeIDSProviderDelegateServerBag>"
v40@0:8@"NSURL"16@"NSSet"24@"NSDictionary"32
v32@0:8@"NSURL"16@?<v@?@"NSURL">24
@"<CSDFileTransferringDelegate>"16@0:8
v24@0:8@"<CSDFileTransferringDelegate>"16
v48@0:8Q16@24@32@?40
@"<CSDFileTransferringDelegate>"
@"IDSService"
@32@0:8@16d24
@"<CSDCallSourceFetcherDataSource>"
r^{__CFString=}16@0:8
v32@0:8B16B20@24
v32@0:8@"IDSDevice"16@?<v@?B@"NSString">24
v32@0:8@"IDSDevice"16@"NSUUID"24
v24@0:8@"IDSDevice"16
v24@0:8@?<v@?B>16
v40@0:8@"NSNumber"16@"NSString"24@?<v@?B>32
v32@0:8B16B20@"IDSDevice"24
{?="protoTimeConnected"b1"protoDisconnectedReason"b1"protoOriginatingUIType"b1"protoService"b1"protoSoundRegion"b1"protoStatus"b1"protoTTYType"b1"protoConferenced"b1"protoEmergency"b1"protoFailureExpected"b1"protoHasSentInvitation"b1"protoNeedsManualInCallSounds"b1"protoOutgoing"b1"protoSOS"b1"protoShouldSuppressRingtone"b1"protoSupportsEmergencyFallback"b1"protoSupportsTTYWithVoice"b1"protoUplinkMuted"b1"protoVideo"b1"protoVoicemail"b1"protoWantsHoldMusic"b1}
v24@0:8i16B20
@"TUCallProvider"
@"TUCallDisplayContext"
@"<CSDRelayCallDelegate>"
v24@0:8@"CSDCallHistoryManager"16
Vv32@0:8@16@24
Vv32@0:8@"NSUUID"16@"NSUUID"24
v24@0:8@"<TUCallHistoryManagerXPCClient>"16
@"CSDCallHistoryManager"
@"<CSDPauseDigitsQueueDelegate>"
@"RBSAssertion"
@28@0:8d16B24
v48@0:8@16@24d32Q40
v52@0:8@16d24B32Q36@?44
{?="shouldAssociateScene"b1}
@"CSDMessagingConversationActivitySession"
@"CSDMessagingConversationMessage"
{?="sharePlayProtocolVersion"b1"version"b1"isGFTDowngradeToOneToOneAvailable"b1"isGondolaCallingAvailable"b1"isLightweight"b1"isMirageAvailable"b1"isMomentsAvailable"b1"isScreenSharingAvailable"b1"isUPlusNDowngradeAvailable"b1"isUPlusOneScreenSharingAvailable"b1"supportsLeaveContext"b1"video"b1"videoEnabled"b1}
v40@0:8@"NSURL"16@"NSURL"24@?<v@?@"NSString"@"NSError">32
v32@0:8@"NSURL"16@?<v@?@"NSString"@"NSError">24
v56@0:8@16@24@32q40@48
v40@0:8@"<CSDFaceTimeProviderDelegate>"16@"NSUUID"24@"NSDate"32
v56@0:8@"<CSDFaceTimeProviderDelegate>"16@"NSUUID"24@"NSDate"32q40@"CXCallFailureContext"48
v40@0:8@"<CSDDualFaceTimeProviderDelegate>"16@"CXTransaction"24@?<v@?@"NSError">32
v48@0:8@"<CSDFaceTimeProviderDelegate>"16@"TUConversation"24@"NSData"32@?<v@?@"NSUUID"BBB@"NSUUID"@"TUHandle"@"NSString">40
B32@0:8@"<CSDFaceTimeProviderDelegate>"16@"NSUUID"24
@"CSDConversationManagerXPCServer"
@"CPConversationManagerHost"
@"CPBiomeSessionDonator"
@"CPApplicationMonitor"
@"CSDNeighborhoodActivityConduitXPCServer"
@"CSDIDSFirewallManager"
@"CSDFaceTimeIDSProviderDelegate"
@"CSDFaceTimeIMAVProviderDelegate"
@"CSDFaceTimeConversationProviderDelegate"
@"CSDGFTServiceConversationProviderDelegate"
@"CSDConversationManager"
@"CSDProviderCallDataSource"
@"CSDVoIPApplicationMessage"
v36@0:8@"NSDictionary"16B24@?<v@?>28
@"CSDMessagingConversationActivity"
{?="creationDateEpochTime"b1}
@"CSDMessagingPersonNameComponents"
@"<CSDStatusBarResolverDelegate>"16@0:8
v24@0:8@"<CSDStatusBarResolverDelegate>"16
@"CSDCall"16@0:8
@"TUConversation"16@0:8
@"STCallingStatusDomainCallDescriptor"16@0:8
@"<CSDStatusBarResolverDelegate>"
@"<CSDProcessObserverProtocol>"
@"NSTimer"
v56@0:8@16@24@32@?40@?48
@32@0:8@16^@24
B32@0:8@16^@24
@"NSFileManager"
v36@0:8B16B20@24B32
@"<CSDPinExchangeDelegate>"
{?="primaryIdentifier"b1"type"b1"version"b1}
Vv20@0:8B16
Vv28@0:8B16@20
Vv36@0:8B16@20@28
Vv28@0:8B16@"NSString"20
Vv28@0:8B16@"NSUUID"20
Vv36@0:8B16@"NSString"20@"NSUUID"28
Vv24@0:8@"NSUUID"16
Vv24@0:8@?<v@?@"TUCallCapabilitiesState">16
v24@0:8@"<TUCallCapabilitiesXPCClient>"16
@"CSDThumperAccount"24@0:8@"NSString"16
@"TUThumperCTCapabilitiesState"24@0:8@"NSString"16
C32@0:8@16@24
v36@0:8B16@20@28
@24@0:8B16B20
@"NSXPCListener"
@"CSDAccountsController"
@"CSDTelephonyCallCapabilities"
@"CSDThumperPushHandler"
@"CSDPinExchangeController"
@"CSDThumperCapabilitiesMonitor"
@"<CSDIDSService>"
@"TUCallCapabilitiesState"
v24@0:8@"TUDynamicCallDisplayContext"16
Vv24@0:8@"NSNumber"16
@"<CSDCallDelegate>"
@"CSDCallDataSource"
@"TUDialRequest"
@"CSDIDSTransport"
@"TUDynamicCallDisplayContext"
v24@0:8@"TUAudioDeviceController"16
B32@0:8@"NSString"16@"TUCall"24
@"TURoute"24@0:8@"TUCall"16
B24@0:8@"TUCall"16
@"CARAutomaticDNDStatus"
@"CSDMessagingVoucher"
{?="lightweightPrimaryParticipantID"b1"validationSource"b1"version"b1}
@"CSDMessagingConversationLink"
@"CSDMessagingConversationMember"
@"CSDMessagingConversationReport"
{?="avMode"b1"version"b1"locallyCreated"b1}
{?="timebase"b1}
v36@0:8@16Q24B32
v40@0:8@16Q24@32
v24@0:8@"CSDConversation"16
v32@0:8@"CSDConversation"16@"TUConversationParticipant"24
v32@0:8@"CSDConversation"16@"CXCallFailureContext"24
v32@0:8@"CSDConversation"16@"CSDConversationParticipant"24
v40@0:8@"CSDConversation"16@"CSDConversationParticipant"24Q32
v40@0:8@"CSDConversation"16@"NSString"24@?<v@?B>32
v32@0:8@"CSDConversation"16@"NSString"24
v32@0:8@"CSDConversation"16@"TUConversationActivityEvent"24
v36@0:8@"CSDConversation"16Q24B32
v32@0:8@"CSDConversation"16@"TUConversationActivitySession"24
v40@0:8@"CSDConversation"16Q24@"TUConversationActivitySession"32
v32@0:8@"CSDConversation"16q24
v36@0:8@"CSDConversation"16@"NSSet"24B32
v36@0:8@"CSDConversation"16@"TUConversationActivitySession"24B32
v56@0:8@"NSSet"16@"CSDConversation"24@"TUConversationLink"32@"NSUUID"40@"TUConversationMember"48
v52@0:8@"NSSet"16@"CSDConversation"24@"NSUUID"32@"TUConversationMember"40B48
v48@0:8@"CSDPendingMembershipTracker"16@"TUConversationMember"24@"CSDConversation"32@"NSData"40
v40@0:8@"CSDPendingMembershipTracker"16@"TUConversationMember"24@"NSUUID"32
v48@0:8@"CSDConversationNoticeManager"16@"CSDConversation"24@"TUConversationParticipant"32@"TUConversationNotice"40
v32@0:8@"CSDConversationLinkManager"16@"NSArray"24
v36@0:8@"CSDScreenSharingActivityManager"16@"<TUScreenShareAttributes>"24B32
v36@0:8@"CSDScreenSharingActivityManager"16@"NSError"24B32
v32@0:8@"<CPApplicationPolicyManager>"16@"NSString"24
v28@0:8@"<CPSystemStateObserver>"16B24
v32@0:8@"NSSet"16@"NSUUID"24
v40@0:8@"TUConversationActivity"16@"NSUUID"24@?<v@?@"TUConversationActivitySession">32
v28@0:8B16@"NSString"20
v32@0:8@"TUConversationActivitySession"16@"NSUUID"24
v40@0:8@"NSString"16@"CPAuthorizationRequestOverrides"24@?<v@?B@"NSError">32
v32@0:8@"NSArray"16@"NSUUID"24
v32@0:8@"TUConversationMember"16@"NSUUID"24
v28@0:8B16@"NSUUID"20
v24@0:8@"NSString"16
v32@0:8@"<CPConversationManagerDataSourceObserver>"16@"NSObject<OS_dispatch_queue>"24
v32@0:8@"TUConversationActivitySessionContainer"16@"NSString"24
v32@0:8@"NSDictionary"16@"NSUUID"24
@"CPActivityAuthorizationManager"16@0:8
@"<CPSystemStateObserver>"16@0:8
@72@0:8@16@24@32@40@48@56@64
@88@0:8@16@24@32@40@48@56@64@72@80
@56@0:8@16@24@32@40@48
@144@0:8@16@24@32B40@44@52@60@68@76@84@92@100@108@116B124Q128@136
@124@0:8@16@24@32B40@44@52@60@68@76@84@92@100Q108@116
@52@0:8@16@24@32@40B48
v40@0:8Q16Q24@32
B36@0:8@16@24i32
B68@0:8@16@24@32@40@48B56@?60
B48@0:8@16@24@32@40
B44@0:8@16@24@32B40
B56@0:8@16@24@32@40@48
@96@0:8@16@24@32@40@48@56@64@72Q80@88
v52@0:8@16@24@32B40@?44
v40@0:8q16@24@32
v52@0:8@16@24B32@36@44
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
v36@0:8B16Q20@28
v28@0:8B16@?20
v40@0:8@16q24@?32
v48@0:8@16@24Q32@?40
v64@0:8@16@24@32@40@48Q56
v48@0:8Q16@24@32@40
@"CSDPendingMembershipTracker"
@"CSDScreenSharingActivityManager"
@"CSDConversationPersistenceController"
@"CSDConversationLinkManager"
@"CSDReportingController"
@"CSDConversationNoticeManager"
@"CSDSharedConversationServerBag"
@"<CSDConversationInvitationResolving>"
@"<CSDVoucherManager>"
@"<CSDParticipantUpdateSanitizer>"
@"CSDIDSService"
@"CSDSecureImageTranscoder"
@"CPApplicationController"
@"CPActivityAuthorizationManager"
@"<CSDConduitIDSProxy>"
@"NSURL"16@0:8
{?="protoProtocolVersion"b1"type"b1"oBSOLETEProtoMomentsAvailable"b1"protoMomentsV2Available"b1"protoSenderMuteUplink"b1"protoShouldSuppressInCallUI"b1"protoWantsVideo"b1}
B24@0:8q16
v32@0:8@?16@?24
@24@0:8@?16
B24@0:8@?16
@"CSDMessagingConversationActivityContext"
@"CSDMessagingConversationActivityMetadata"
{?="timestampAsTimeIntervalSinceReferenceDate"b1"updatedDateEpochTime"b1"isSystemActivity"b1}
{?="handleType"b1"notificationStyles"b1"version"b1}
{?="faceTimeAudioAvailable"b1"faceTimeVideoAvailable"b1}
@"NSCountedSet"
@56@0:8@16@24@32@?40@48
@"CXCallDirectoryStore"
@"CSDIncomingCallFilterDataSource"
@"CXCallDirectorySanitizer"
@"ACAccountStore"
@"CSDIncomingCallFilter"
@"<CSDTransactionManager>"
@"CHManager"
@"<CSDUserNotificationDelegate>"
@"TUFeatureFlags"
{?="generatorVersion"b1}
@"<CSDIDSSessionProvider>"
v24@0:8@"UABestAppSuggestion"16
v32@0:8@"UABestAppSuggestion"16@"NSSet"24
@20@0:8I16
v32@0:8@16d24
v36@0:8@16d24B32
@"NSSet"20@0:8I16
v24@0:8@"CSDUserActivity"16
v32@0:8@"CSDUserActivity"16d24
v36@0:8@"CSDUserActivity"16d24B32
@"CSDUserActivity"16@0:8
@"<CSDUserActivityCommunicatorDelegate>"16@0:8
v24@0:8@"<CSDUserActivityCommunicatorDelegate>"16
@28@0:8I16@20
@"<CSDUserActivityCommunicatorDelegate>"
@"UABestAppSuggestionManager"
@"UABestAppSuggestion"
v36@0:8@"<CSDIDSGroupSessionProvider>"16I24@"NSError"28
v24@0:8@"<CSDIDSGroupSessionProvider>"16
v48@0:8@"<CSDIDSGroupSessionProvider>"16@"NSDictionary"24Q32@"NSError"40
v32@0:8@"<CSDIDSGroupSessionProvider>"16@"NSError"24
v36@0:8@"<CSDIDSGroupSessionProvider>"16@"NSArray"24B32
v32@0:8@"<CSDIDSGroupSessionProvider>"16@"NSArray"24
v44@0:8@"<CSDIDSGroupSessionProvider>"16@"NSArray"24I32S36B40
v32@0:8@"<CSDIDSGroupSessionProvider>"16@"NSDictionary"24
v36@0:8@"<CSDIDSGroupSessionProvider>"16S24@"NSError"28
v40@0:8@"<CSDIDSGroupSessionProvider>"16@"NSData"24@"IDSGroupSessionActiveParticipant"32
v44@0:8@"<CSDIDSGroupSessionProvider>"16@"NSData"24S32@"IDSGroupSessionActiveParticipant"36
v28@0:8@"<CSDIDSGroupSessionProvider>"16I24
v96@0:8@16@24@32@40@48@56@64@72@80@88
v136@0:8@16@24@32@40@48@56@64@72@80@88@96B104B108@112@120Q128
Q24@0:8@16
S16@0:8
v20@0:8S16
@"<CSDIDSGroupSessionDelegate>"
@"<CSDIDSGroupSessionProvider>"
Vv28@0:8@16C24
Vv28@0:8i16@20
Vv40@0:8@16{CGSize=dd}24
Vv28@0:8@16i24
Vv32@0:8@16q24
Vv24@0:8@"TUAnswerRequest"16
Vv32@0:8@"NSString"16@"NSString"24
Vv28@0:8@"NSString"16C24
Vv28@0:8i16@"NSString"20
Vv24@0:8@"IDSDestination"16
Vv24@0:8@"TUProxyCall"16
Vv40@0:8@"NSString"16{CGSize=dd}24
Vv28@0:8@"NSString"16i24
Vv24@0:8@"TUDialRequest"16
Vv32@0:8@"NSString"16@"TUCallScreenShareAttributes"24
Vv36@0:8B16@"TUCallScreenShareAttributes"20@"NSString"28
Vv32@0:8@"NSString"16q24
Vv32@0:8@"TUDialRequest"16@"TUCallDisplayContext"24
Vv32@0:8@"TUDialRequest"16@?<v@?@"TUCall"@"NSArray">24
Vv24@0:8@"TUJoinConversationRequest"16
Vv32@0:8@"NSDictionary"16@?<v@?@"TUCall"@"NSArray">24
Vv24@0:8@"TUCallServicesClientCapabilities"16
Vv28@0:8@16B24
Vv24@0:8@?<v@?@"NSDictionary">16
Vv28@0:8@"NSString"16B24
Vv44@0:8@16@24B32@?36
Vv40@0:8@"NSSet"16@"NSString"24@?<v@?B>32
Vv44@0:8@"TUHandle"16@"NSString"24B32@?<v@?B>36
Vv44@0:8@"NSSet"16@"NSString"24B32@?<v@?B>36
Vv40@0:8@"NSSet"16@"NSString"24@?<v@?Q>32
Vv40@0:8@"NSSet"16@"NSString"24@?<v@?@"NSDictionary">32
Vv48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?B>40
v28@0:8@"NSArray"16B24
@"CSDCallController"16@0:8
v24@0:8@"CSDCall"16
v36@0:8@16i24@28
v32@0:8f16i20@24
v24@0:8B16B20
@"CSDCallController"
@"CSDRecentsController"
@"CSDAudioArbitrationController"
@"CSDRouteController"
@"CSDCallHistoryManagerXPCServer"
@"CSDCallProviderManagerXPCServer"
@"CSDRelayCallDataSource"
@"CSDRelayCallDelegate"
@"TUHardwareControlsBroadcaster"
@"CSDCarPlayManager"
@"CSDCallHistoryControllerXPCServer"
v24@0:8@?<v@?>16
@"<TUNotifyObserver>"
@"BKSApplicationStateMonitor"
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
v40@0:8@"CXNetworkExtensionMessageControllerHost"16@"NSDictionary"24@"NSString"32
v48@0:8@"CXNotificationServiceExtensionVoIPXPCHost"16@"NSDictionary"24@"NSString"32@?<v@?@"NSError">40
v44@0:8@16@24@32i40
v40@0:8@16@24i32B36
@"APSConnection"
@"CXNetworkExtensionMessageControllerHost"
@"CXNotificationServiceExtensionVoIPXPCHost"
@"CSDVoIPApplicationMonitor"
@"<CSDConversationNoticeDelegate>"
@"FBSOpenApplicationService"
@48@0:8Q16@24@32@40
@40@0:8Q16@24@32
@"TUConversationParticipantCapabilities"
@"TUCallServicesClientCapabilities"
@"RBSProcessHandle"
@"CSDMessagingConversationActivitySceneAssociationBehavior"
{?="preferredBroadcastingAttributes"b1"supportsContinuationOnTV"b1}
@"<CSDCHManager>"
Vv32@0:8@"NSUUID"16@"NSArray"24
Vv32@0:8@"NSUUID"16@?<v@?@"NSString"@"NSString"@"NSError">24
Vv40@0:8@16@24@32
Vv36@0:8@16B24@?28
Vv36@0:8B16Q20@28
Vv32@0:8Q16@24
Vv28@0:8B16@?20
Vv40@0:8@16q24@?32
Vv48@0:8@16@24Q32@?40
Vv24@0:8@?<v@?@"NSSet">16
Vv40@0:8@"NSSet"16@"NSSet"24@"NSUUID"32
Vv32@0:8@"TUConversationActivitySession"16@"NSUUID"24
Vv32@0:8@"TUConversationActivity"16@"NSUUID"24
Vv32@0:8@"NSUUID"16@?<v@?@"NSError">24
Vv36@0:8@"NSUUID"16B24@?<v@?@"NSError">28
Vv36@0:8B16@"TUConversationActivitySession"20@"NSUUID"28
Vv36@0:8B16Q20@"NSUUID"28
Vv32@0:8@"TUConversationMember"16@"NSUUID"24
Vv32@0:8@"NSString"16@"NSUUID"24
Vv32@0:8Q16@"NSUUID"24
Vv24@0:8@?<v@?B>16
Vv24@0:8@?<v@?@"<TUScreenShareAttributes>">16
Vv28@0:8B16@?<v@?@"NSSet"@"NSError">20
Vv32@0:8@"NSUUID"16@?<v@?@"TUConversationLink"@"NSError">24
Vv40@0:8@"NSSet"16q24@?<v@?@"TUConversationLink"@"NSError">32
Vv40@0:8@"NSSet"16@"TUConversationLink"24@?<v@?@"TUConversationLink"@"NSError">32
Vv36@0:8@"TUConversationLink"16B24@?<v@?B@"NSError">28
Vv48@0:8@"TUConversationLink"16@"NSDate"24Q32@?<v@?B@"NSError">40
Vv32@0:8@"TUConversationLink"16@?<v@?B@"NSDate"@"NSError">24
Vv24@0:8@?<v@?@"TUConversationLink"@"NSError">16
Vv32@0:8@"TUConversationLink"16@?<v@?B@"NSError">24
Vv40@0:8@"NSString"16@"TUConversationLink"24@?<v@?@"TUConversationLink"@"NSError">32
Vv28@0:8B16@?<v@?@"NSString">20
Vv36@0:8B16@"TUScreenShareAttributes"20@"NSUUID"28
Vv32@0:8@"NSURL"16@24
Vv24@0:8@?<v@?@"TUConversationNotice"@"NSError">16
v24@0:8@"<TUConversationManagerXPCClient>"16
v48@0:8@16@24@32Q40
v56@0:8@16Q24Q32@40@48
v48@0:8@16Q24Q32@40
v32@0:8@"CSDConversationManager"16@"TUConversation"24
v32@0:8@"CSDConversationManager"16@"TUJoinConversationRequest"24
v40@0:8@"CSDConversationManager"16@"TUConversation"24@"TUConversationParticipant"32
v32@0:8@"CSDConversationManager"16@"NSUUID"24
v48@0:8@"CSDConversationManager"16@"TUConversation"24@"TUConversationParticipant"32Q40
v56@0:8@"CSDConversationManager"16@"TUConversation"24@"CSDMessagingConversationMessage"32@"TUHandle"40@"<CSDGroupSessionParticipantUpdateProtocol>"48
v40@0:8@"CSDConversationManager"16@"TUConversation"24@"CXCallFailureContext"32
v40@0:8@"CSDConversationManager"16@"TUConversation"24@"TUHandle"32
v32@0:8@"CSDConversationManager"16@"NSArray"24
v40@0:8@"CSDConversationManager"16@"TUConversation"24@"TUConversationActivityEvent"32
v44@0:8@"CSDConversationManager"16@"TUConversation"24Q32B40
v48@0:8@"CSDConversationManager"16@"TUConversation"24@"TUConversationParticipant"32@"TUConversationNotice"40
v40@0:8@"CSDConversationManager"16@"TUConversation"24@"NSSet"32
v40@0:8@"CSDConversationManager"16@"TUConversation"24@"TUConversationMember"32
v48@0:8@"CSDConversationManager"16@"TUConversation"24Q32@"TUConversationActivitySession"40
v40@0:8@"CSDConversationManager"16@"TUConversation"24q32
v32@0:8@"CSDConversationManager"16@"NSString"24
v40@0:8@"CSDConversationManager"16@"TUConversationMember"24@"TUConversationLink"32
v32@0:8@"CSDConversationManager"16@"NSDictionary"24
v48@0:8@"CSDConversationManager"16@"TUConversation"24Q32@"NSString"40
v56@0:8@"CSDConversationManager"16Q24Q32@"TUHandle"40@"TUConversation"48
v48@0:8@"CSDConversationManager"16Q24Q32@"TUConversation"40
v40@0:8@"CSDConversationManager"16@"TUConversation"24@"TUConversationActivitySession"32
v36@0:8@"CSDConversationManager"16@"<TUScreenShareAttributes>"24B32
v32@0:8@"CSDConversationManager"16@"NSError"24
v28@0:8@"CSDConversationManager"16B24
B24@0:8@"TUConversationProvider"16
v24@0:8@"<CSDCallProviderManagerDataSource>"16
@"CSDUserIntentManager"
@"<CSDCallProviderManagerDataSource>"
v40@0:8@16q24q32
@"CMGestureManager"
v40@0:8@"CSDMessagingRelayMessage"16@"IDSDestination"24@"IDSDevice"32
v48@0:8@"CSDMessagingRelayMessage"16@"IDSDestination"24@"IDSDevice"32@?<v@?B@"NSDictionary">40
v40@0:8@"CSDMessagingRelayMessage"16@"IDSDestination"24@?<v@?@"NSDictionary">32
v40@0:8@"NSDictionary"16@"IDSDestination"24@?<v@?@"NSDictionary">32
v44@0:8@16@24B32@36
@36@0:8I16@20@28
B20@0:8I16
I24@0:8@16
@"NSUserActivity"
@"TUDialRequest"24@0:8@"TUDialRequest"16
v48@0:8@"NSUserActivity"16@"NSString"24@"NSDictionary"32@?<v@?B@"NSError">40
B24@0:8@"NSURL"16
@"NSURL"32@0:8@"NSString"16@"NSURL"24
B24@0:8@"TUCallProvider"16
@"<CSDCallProviderManagerDataSourceDelegate>"16@0:8
v24@0:8@"<CSDCallProviderManagerDataSourceDelegate>"16
v32@0:8@16r^{__CFString=}24
@24@0:8r^{__CFString=}16
@"<CSDCallProviderManagerDataSourceDelegate>"
@"CSDSandboxExtensionDirectory"
@"CSDCallCenterObserver"
d24@0:8@16
Q24@0:8Q16
@24@0:8q16
@"<CSDMomentsReportingSessionDelegate>"
v44@0:8@16I24I28B32@36
v32@0:8@16I24I28
v32@0:8@16Q24
v40@0:8@"AVCSessionParticipant"16B24B28@"NSError"32
v28@0:8@"AVCSessionParticipant"16B24
v32@0:8@"AVCSessionParticipant"16@"NSDictionary"24
v44@0:8@"AVCSessionParticipant"16I24I28B32@"NSError"36
v32@0:8@"AVCSessionParticipant"16I24I28
v32@0:8@"AVCSessionParticipant"16Q24
v36@0:8@"AVCScreenCapture"16B24@"NSError"28
v24@0:8@"AVCScreenCapture"16
v32@0:8@"AVCSession"16@"NSDictionary"24
v36@0:8@"AVCSession"16B24@"NSError"28
v24@0:8@"AVCSession"16
v44@0:8@"AVCSession"16@"AVCSessionParticipant"24B32@"NSError"36
v44@0:8@"AVCSession"16B24@"AVCSessionConfiguration"28@"NSError"36
v40@0:8@"AVCSession"16B24B28@"NSError"32
v44@0:8@"AVCSession"16I24I28B32@"NSError"36
v32@0:8@"AVCSession"16@"NSData"24
v32@0:8@"AVCSession"16@"NSError"24
v40@0:8@"AVCSession"16@"NSError"24@"NSDictionary"32
B24@0:8Q16
v84@0:8Q16@24@32{CGRect={CGPoint=dd}{CGSize=dd}}40B72Q76
@"NSData"24@0:8Q16
v24@0:8@"<TUScreenShareAttributes>"16
v28@0:8B16@"<TUScreenShareAttributes>"20
v32@0:8@"CSDConversationParticipant"16B24B28
v24@0:8@"CSDConversationParticipant"16
v84@0:8Q16@"NSNumber"24@"NSNumber"32{CGRect={CGPoint=dd}{CGSize=dd}}40B72Q76
@"NSData"16@0:8
@76@0:8@?16@24@32@40@48Q56B64@?68
@80@0:8@16@24@32@40B48Q52B60@64@72
@"AVCSession"
@"<CSDAVCSessionDelegate>"
@"AVCScreenCapture"
@44@0:8@16B24@28@36
@36@0:8@16@24i32
v24@0:8@"<CSDCoreTelephonyClient>"16
v40@0:8@"<CSDCoreTelephonyClient>"16@"CTXPCContextInfo"24@"CSDCTCallCapabilities"32
v32@0:8@"<CSDCoreTelephonyClient>"16@"NSDictionary"24
v40@0:8@"<CSDCoreTelephonyClient>"16@"CTXPCContextInfo"24@"NSDictionary"32
@40@0:8@16@24B32B36
@"<CSDTelephonyCallCapabilitiesDelegate>"
@"CSDCoreTelephonyClient"
@"<CSDEmergencyCallbackCapabilities>"
{?="deviceType"b1"protoCurrentlyPicked"b1"protoGuest"b1"protoSupportsRelay"b1}
v48@0:8@16d24@32@?40
@"TUCallProvider"24@0:8@"NSString"16
v24@0:8@"CSDRelayCall"16
v32@0:8@"CSDRelayCall"16@"TUAnswerRequest"24
v32@0:8@"CSDRelayCall"16@"TUCall"24
v28@0:8@"CSDRelayCall"16C24
v36@0:8@"CSDRelayCall"16B24@"NSError"28
@"TUDTMFSoundPlayer"
@"CSDMessagingEncryptedConversationMessage"
@"CSDMessagingConversationJoinedMetadata"
{?="avMode"b1"disconnectedReason"b1"enclosedEncryptedType"b1"requestBlobRecoveryOptions"b1"type"b1"version"b1"guestModeEnabled"b1"isLetMeInApproved"b1"shouldSuppressInCallUI"b1}
{?="generateDescriptorVersionSum"b1"version"b1}
{?="leaveReason"b1"version"b1}
v32@0:8@"NSString"16@"NSDictionary"24
v32@0:8@"NSString"16@"NSArray"24
@"CSDKeychainPasswordItem"
@32@0:8@16@?24
@"<CXAudioSessionActivationStateObserver>"
B24@0:8{?=ii}16
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSDictionary"24
@"CSDCTCallCapabilities"24@0:8@"CTXPCContextInfo"16
@"NSDictionary"32@0:8@"CTXPCContextInfo"16@"NSString"24
@"NSDictionary"24@0:8@"CTXPCContextInfo"16
v36@0:8@"NSString"16B24@"NSDictionary"28
v44@0:8@"CTXPCContextInfo"16@"NSString"24B32@"NSDictionary"36
v32@0:8@"NSString"16@"CTXPCContextInfo"24
v32@0:8@"CTXPCContextInfo"16@"NSString"24
@"NSString"24@0:8@"NSUUID"16
@"<CSDCoreTelephonyClientDelegate>"16@0:8
v24@0:8@"<CSDCoreTelephonyClientDelegate>"16
@"<CSDCoreTelephonyClientDelegate>"
@"CTXPCContexts"
{?="ambiguityState"b1"addCallAllowed"b1"endAndAnswerAllowed"b1"hardPauseAvailable"b1"holdAllowed"b1"holdAndAnswerAllowed"b1"mergeable"b1"sendToVoicemailAllowed"b1"swappable"b1"takingCallsPrivateAllowed"b1}
v32@0:8@"CSDMomentsReportingSession"16@"CSDMomentsUsageReport"24
v36@0:8@16q24i32
v36@0:8@"CSDMomentsController"16q24i32
v32@0:8@"CSDMomentsController"16q24
v40@0:8@"CSDMomentsController"16q24@"NSString"32
v28@0:8q16i24
v36@0:8q16i24@?28
v32@0:8q16@?24
v40@0:8q16@24@?32
{?="version"b1"shouldCheckAllGenerators"b1}
@"TUDelegateController<CSDCallHistoryManagerDelegate>"
v40@0:8d16@24@?32
@"<CSDConversationProviderDelegate>"
v32@0:8@"IDSAccountController"16@"IDSAccount"24
B72@0:8@16@24@32q40@48^@56^@64
@"IDSDevice"24@0:8@"NSString"16
@"NSArray"24@0:8@"NSString"16
@"NSArray"32@0:8@"NSString"16@"TUHandle"24
v32@0:8@"<IDSServiceDelegatePrivate>"16@"NSObject<OS_dispatch_queue>"24
v24@0:8@"<IDSServiceDelegatePrivate>"16
B24@0:8@"NSString"16
v32@0:8@"TUHandle"16@"NSDate"24
v32@0:8@"NSArray"16@"NSDate"24
v24@0:8@"NSSet"16
B72@0:8@"NSData"16@"IDSAccount"24@"NSSet"32q40@"NSDictionary"48^@56^@64
@"<CSDIDSServiceDependencies>"16@0:8
@"IDSDevice"16@0:8
@"IDSAccount"16@0:8
v64@0:8@16@24@32d40@48@?56
@"IDSAccountController"
@"IDSIDQueryController"
@"<IDSServicePseudonymDelegate>"
v48@0:8@"CSDIDSDualSession"16@"NSData"24@"IDSDestination"32@"IDSDevice"40
v52@0:8@16@24@32q40B48
v48@0:8@16@24@32q40
v56@0:8@16@24@32q40@?48
v40@0:8@16@?24@?32
v48@0:8@16@24@?32@?40
v52@0:8@16@24@?32B40@?44
v60@0:8@16@24@32@?40B48@?52
v52@0:8@"<CSDFileTransferring>"16@"NSURL"24@"NSDictionary"32B40@"NSString"44
v36@0:8@"<CSDFileTransferring>"16@"NSURL"24B32
v28@0:8@"<CSDAVCMoments>"16I24
v40@0:8@"<CSDAVCMoments>"16@"<CSDAVCMomentsRequest>"24@"NSError"32
v56@0:8@"<CSDAVCMoments>"16@"<CSDAVCMomentsRequest>"24@"NSURL"32@"NSURL"40@"NSError"48
v24@0:8@"<CSDAVCMoments>"16
Vv52@0:8q16@24@32B40@?44
Vv32@0:8q16@?24
Vv44@0:8i16q20@28@?36
Vv24@0:8@?<v@?>16
Vv52@0:8q16@"NSString"24@"NSDictionary"32B40@?<v@?@"TUMomentsCapabilities"@"NSError">44
Vv32@0:8q16@?<v@?@"NSError">24
Vv44@0:8i16q20@"NSString"28@?<v@?@"NSString"@"NSError">36
v24@0:8@"<TUMomentsControllerXPCClient>"16
i20@0:8B16
@"<CSDMomentsControllerDelegate>"
@"<CSDFileTransferring>"
@"<CSDMediaAssetManaging>"
@"<TUMomentsControllerXPCClient>"
@"<CSDMomentsServerBag>"
v36@0:8@16q24B32
v36@0:8@16B24q28
v40@0:8@16q24B32B36
v44@0:8@16B24q28@36
v48@0:8@16q24@32@40
v44@0:8@16q24B32@36
v32@0:8@16B24I28
v40@0:8@16B24I28@32
v36@0:8@"AVConference"16q24B32
v36@0:8@"AVConference"16B24@"NSDictionary"28
v40@0:8@"AVConference"16q24@"NSError"32
v32@0:8@"AVConference"16@"NSData"24
v32@0:8@"AVConference"16q24
v40@0:8@"AVConference"16@"VideoAttributes"24q32
v36@0:8@"AVConference"16B24q28
v24@0:8@"AVConference"16
v40@0:8@"AVConference"16q24@"NSDictionary"32
v40@0:8@"AVConference"16q24B32B36
v40@0:8@"AVConference"16@"NSData"24q32
v44@0:8@"AVConference"16B24q28@"NSError"36
v48@0:8@"AVConference"16q24@"NSError"32@"NSDictionary"40
v44@0:8@"AVConference"16q24B32@"NSError"36
v32@0:8@"AVConference"16B24I28
v40@0:8@"AVConference"16B24I28@"NSError"32
v32@0:8@"AVConference"16I24I28
v28@0:8@"AVConference"16I24
v28@0:8@"AVConference"16f24
v28@0:8@"AVConference"16B24
v48@0:8{CGSize=dd}16{CGSize=dd}32
B28@0:8i16@20
B52@0:8B16@20@28@36^@44
B40@0:8B16@20i28^@32
v56@0:8q16@24d32@?40@48
B28@0:8i16@"RTCSecureHierarchyToken"20
B52@0:8B16@"NSDictionary"20@"VCCapabilities"28@"NSString"36^@44
B40@0:8B16@"VCCapabilities"20i28^@32
v56@0:8q16@"NSDictionary"24d32@?<v@?@"NSDictionary"@"NSError">40@"NSObject<OS_dispatch_queue>"48
@"<CSDAVConferenceProviderDelegate>"16@0:8
v24@0:8@"<CSDAVConferenceProviderDelegate>"16
@"<CSDAVConferenceProviderDelegate>"
@"AVConference"
@"CSDProviderCall"
v48@0:8@"CXCallControllerHost"16@"NSString"24@"CXTransaction"32@?<v@?@"NSError">40
@"CXCallSource"24@0:8@"NSString"16
v44@0:8@16@24f32q36
v32@0:8@"CXCallSource"16@"CXProviderConfiguration"24
v48@0:8@"CXCallSource"16@"NSUUID"24@"CXCallUpdate"32@?<v@?@"NSError">40
v40@0:8@"CXCallSource"16@"NSUUID"24@"CXCallUpdate"32
v56@0:8@"CXCallSource"16@"NSUUID"24@"NSDate"32q40@"CXCallFailureContext"48
v40@0:8@"CXCallSource"16@"NSUUID"24@"NSDate"32
v32@0:8@"CXCallSource"16@"NSUUID"24
v48@0:8@"CXCallSource"16@"NSUUID"24@"NSData"32q40
v44@0:8@"CXCallSource"16@"NSUUID"24f32q36
v48@0:8@"CXCallSource"16@"NSUUID"24@"NSString"32q40
v40@0:8@"CXCallSource"16@"CXTransaction"24@?<v@?@"NSError">32
B40@0:8@16@24^@32
v32@0:8@"CXCallSourceManager"16@"CXTransactionGroup"24
v24@0:8@"CXCallSourceManager"16
B40@0:8@"CXCallSource"16@"CXAction"24^@32
@"CXCallSource"24@0:8@"TUDialRequest"16
@"CXCallSource"24@0:8@"TUJoinConversationRequest"16
v32@0:8@"CXCallAction"16@"CSDProviderCall"24
v32@0:8@"NSArray"16@"CSDProviderCall"24
v32@0:8@"CXStartCallAction"16@"CSDProviderCall"24
B44@0:8@16@24B32^@36
@"CSDFaceTimeProviderDelegate"
@"CSDCallFilterController"
@"CXCallControllerHost"
@"CXInProcessCallSource"
@"<CXProviderDelegatePrivate>"
@"CSDCallSourceFetcher"
@"CXCallSourceManager"
@"CSDVoIPProcessAssertionManager"
@"<CSDRouteManager>"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v40@0:8@?16@?24@32
^v16@0:8
v28@0:8@?16B24
v40@0:8@?16@24@32
@?32@0:8@16@?24
@?24@0:8@?16
@"NSXPCInterface"
@"NSObject<OS_dispatch_semaphore>"
v32@0:8@"<CSDProximitySensorObserverDelegate>"16@"NSObject<OS_dispatch_queue>"24
v24@0:8@"<CSDProximitySensorObserverDelegate>"16
@"TUDelegateController"
@"FTNetworkSupport"
@32@0:8q16@24
@"NSString"24@0:8@"NSString"16
Q32@0:8@16^@24
@48@0:8@16Q24Q32^@40
v48@0:8@16Q24Q32@?40
Q36@0:8@16B24^@28
Q44@0:8B16q20@28^@36
v44@0:8B16q20@28@?36
Q48@0:8@16q24@32^@40
v48@0:8@16q24@32@?40
B32@0:8@"NSArray"16^@24
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
Q32@0:8@"NSPredicate"16^@24
v32@0:8@"NSPredicate"16@?<v@?Q@"NSError">24
@"NSArray"48@0:8@"NSPredicate"16Q24Q32^@40
v48@0:8@"NSPredicate"16Q24Q32@?<v@?@"NSArray"@"NSError">40
Q36@0:8@"NSPredicate"16B24^@28
v36@0:8@"NSPredicate"16B24@?<v@?Q@"NSError">28
Q44@0:8B16q20@"NSPredicate"28^@36
v44@0:8B16q20@"NSPredicate"28@?<v@?Q@"NSError">36
Q48@0:8@"NSDate"16q24@"NSPredicate"32^@40
v48@0:8@"NSDate"16q24@"NSPredicate"32@?<v@?Q@"NSError">40
Q48@0:8@"NSSet"16q24@"NSPredicate"32^@40
v48@0:8@"NSSet"16q24@"NSPredicate"32@?<v@?Q@"NSError">40
Q48@0:8@"NSString"16q24@"NSPredicate"32^@40
v48@0:8@"NSString"16q24@"NSPredicate"32@?<v@?Q@"NSError">40
@"<TUConversationLinkDescriptorDataSourceDelegate>"16@0:8
v24@0:8@"<TUConversationLinkDescriptorDataSourceDelegate>"16
B24@0:8@"<TUScreenShareAttributes>"16
@24@0:8@"<TUScreenShareAttributes>"16
@"NSNumber"16@0:8
v24@0:8@"NSNumber"16
@"NSValue"16@0:8
v24@0:8@"NSValue"16
@48@0:8q16@24@32@40
@32@0:8C16C20@24
@48@0:8q16@"NSString"24@"<CSDAVCMomentsDelegate>"32@"OS_dispatch_queue"40
@"<CSDAVCMomentsRequest>"32@0:8C16C20@"NSString"24
@"<CSDAVCMomentsDelegate>"16@0:8
B24@0:8^@16
r^v24@0:8@16
@"NSDictionary"40@0:8@"NSArray"16@"NSArray"24^@32
@"CNContact"40@0:8@"NSString"16@"NSArray"24^@32
@"NSArray"40@0:8@"NSPredicate"16@"NSArray"24^@32
r^v24@0:8@"CNContact"16
@"CNFetchResult"32@0:8@"CNChangeHistoryFetchRequest"16^@24
@"CNContact"32@0:8@"NSString"16@"NSArray"24
Q24@0:8@?16
@"NSArray"24@0:8@?<B@?@"TUCall">16
@"NSArray"20@0:8i16
@"NSArray"24@0:8@"NSUUID"16
@"TUCall"24@0:8@?<B@?@"TUCall">16
@"TUCall"20@0:8i16
@"TUCall"24@0:8@"NSString"16
@"TUCall"24@0:8@"NSArray"16
Q24@0:8@?<B@?@"TUCall">16
B24@0:8@?<B@?@"TUCall">16
@"TUCall"16@0:8
@32@0:8@?16@?24
@"TUCall"32@0:8@?<B@?@"TUCall">16@?<q@?@@>24
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v24@0:8@"CARSession"16
v32@0:8@"CARSession"16@"CARSessionConfiguration"24
B40@0:8@"NSData"16@"NSString"24@"IDSMessageContext"32
B48@0:8@"NSURL"16@"NSDictionary"24@"NSString"32@"IDSMessageContext"40
v32@0:8@"<CSDGroupSessionParticipantUpdateProtocol>"16@"CSDConversationManager"24
v24@0:8@"TLAlert"16
v32@0:8@"CSDIDSService"16@"IDSPseudonym"24
v24@0:8@"CSDIDSService"16
v24@0:8@"<CHCallInteractionManager>"16
v48@0:8@16{_NSRange=QQ}24@40
v32@0:8@"AVSpeechSynthesizer"16@"AVSpeechUtterance"24
v48@0:8@"AVSpeechSynthesizer"16{_NSRange=QQ}24@"AVSpeechUtterance"40
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
Vv40@0:8q16@24@?32
Vv40@0:8q16@"NSString"24@?<v@?@"NSError">32
v24@0:8@"CTXPCServiceSubscriptionContext"16
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTVoicemailInfoType"24
v28@0:8@"AVCMoments"16I24
v40@0:8@"AVCMoments"16@"AVCMomentsRequest"24@"NSError"32
v56@0:8@"AVCMoments"16@"AVCMomentsRequest"24@"NSURL"32@"NSURL"40@"NSError"48
v48@0:8@"AVCMoments"16@"AVCMomentsRequest"24@"NSURL"32@"NSError"40
v24@0:8@"AVCMoments"16
%@ %@
avcIdentifier
pseudonym
publicKey
conversationMessageBytes
privateKey
invitedHandles
creationDateEpochTime
groupUUIDString
originatorHandle
pseudonymExpirationDateEpochTime
isActivated
generatorDescriptor
linkName
linkLifetimeScope
Indefinite
CallDuration
(unknown: %i)
CSDTransactionManager
TUCallCenter_allCalls
com.apple.calls.callservicesd.
%@:%@
handleCallStatusChanged
handleSessionStateChanged
%@-%@
com.apple.telephonyutilities.callservicesdaemon.csdavconference
@"<CSDAVConferenceProvider>"24@?0@"NSUUID"8@"NSObject<OS_dispatch_queue>"16
<%@ %p state=%d conference=%@>
v24@?0@"NSDictionary"8@"NSError"16
<%@ %p caller=%d capabilities=%@ deviceRole=%d>
TUCallUserActivityCTInfoKey
TUCallUserActivityServiceKey
kCTCallDirection
kCTCallDirectionOutgoing
kCTCallDirectionIncoming
kCTCallPhoneNumber
com.apple.coretelephony
handle
avcData
isMomentsAvailable
isScreenSharingAvailable
isGondolaCallingAvailable
isMirageAvailable
isLightweight
sharePlayProtocolVersion
options
isGFTDowngradeToOneToOneAvailable
guestModeEnabled
association
isUPlusNDowngradeAvailable
avMode
isUPlusOneScreenSharingAvailable
mirageHandshakeData
supportsLeaveContext
None
Audio
Video
B8@?0
-[CSDUserActivityManager conversationManager:activeRemoteParticipantsChangedForConversation:fromOldConversation:]
-[CSDUserActivityManager conversationManager:addedActiveConversation:]
v24@?0@"NSString"8d16
ADClientSetValueForDistributionKey
AggregateDictionary
%@.%@.%f
ForceDisableCallProximity
com.apple.mobilephone.talking-with-phone-away-from-face-without-speaker
CSDProximityController.m
Invalid parameter not satisfying: %@
callCenterObserver != nil
interfaceOrientationObserver != nil
routeController != nil
proximitySensorObserver != nil
queue != nil
voiceOverObserver != nil
v16@?0@"FBSOrientationUpdate"8
v12@?0i8
ConferenceID:
kMXSessionAudioCategory_PlayAndRecord_NoBluetooth
MediaExperience
kMXSessionAudioMode_VoiceChat
kMXSessionAudioMode_VideoChat
@"IMAccount"16@?0@"CXStartCallAction"8
IMPreferredAccountForService
IMCore
IMDaemonDidConnectNotification
IMAVCore
IMAVChatStateChangedNotification
IMAVChatParticipantReceivedFirstFrameNotification
IMAVChatParticipantInvitationDeliveredNotification
IMAVChatParticipantCallInfoChangedNotification
IMAVChatConferenceIDChangedNotification
IMAVChatConferenceMetadataUpdatedNotification
IMAVChatMayRequireBreakBeforeMakeChangedNotification
IMAVChatParticipantInFrequencyChangedNotification
IMAVChatParticipantOutFrequencyChangedNotification
IMAVController
IMAVChat
_NSStringDescriptionForIMAVChatEndedReason
CALL_FAILED_NO_NETWORK_CONNECTION_TITLE
ALERT_VIDEO_FAILED_NO_LOCAL_NETWORK_WLAN_MESSAGE
CALL_FAILED_NO_LOCAL_NETWORK_WLAN_MESSAGE
ALERT_VIDEO_FAILED_NO_LOCAL_NETWORK_WIFI_MESSAGE
CALL_FAILED_NO_LOCAL_NETWORK_WIFI_MESSAGE
ALERT_VIDEO_FAILED_NO_LOCAL_WLAN_MESSAGE
CALL_FAILED_NO_LOCAL_WLAN_MESSAGE
ALERT_VIDEO_FAILED_NO_LOCAL_WIFI_MESSAGE
CALL_FAILED_NO_LOCAL_WIFI_MESSAGE
ALERT_VIDEO_FAILED_TITLE
CALL_FAILED_TITLE
ALERT_VIDEO_FAILED_BAD_NONCE_TIMESTAMP
CALL_FAILED_BAD_NONCE_TIMESTAMP
ALERT_VIDEO_FAILED_UPDATE_LOCATION_MESSAGE
CALL_FAILED_UPDATE_LOCATION_MESSAGE
ALERT_VIDEO_FAILED_REGION_INFO_INSUFFICIENT
CALL_FAILED_REGION_INFO_INSUFFICIENT
ALERT_VIDEO_FAILED_REMOTE_INCOMPATIBLE_MESSAGE_%@_NUMBER
ALERT_VIDEO_FAILED_REMOTE_INCOMPATIBLE_MESSAGE_%@_NAME
ALERT_VIDEO_NOT_AVAILABLE_TITLE
CALL_NOT_AVAILABLE_TITLE
ALERT_VIDEO_FAILED_NOT_AVAILABLE_MESSAGE_%@_NUMBER
CALL_FAILED_%@_NOT_AVAILABLE_MESSAGE_NUMBER
ALERT_VIDEO_FAILED_NOT_AVAILABLE_MESSAGE_%@_NAME
CALL_FAILED_%@_NOT_AVAILABLE_MESSAGE_NAME
com.apple.telephonyutilities.callservicesd.callhistorycontrollerxpcserver
v16@?0@"CSDClient"8
com.apple.telephonyutilities.callservicesdaemon.callhistorycontroller
CSDCallHistoryControllerClientsShouldConnectNotification
MaxRemoteMirageParticipantsOverride
@"<CSDAVCSession>"48@?0@"NSString"8@"<CSDAVCSessionDelegate>"16@"NSObject<OS_dispatch_queue>"24B32B36@"TUConversationReport"40
@"NSData"8@?0
<%@ %p
 UUID=%@
 groupUUID=%@
 link=%@
 messagesGroupUUID=%@
 state=%ld
 hasReceivedLetMeInRequest=%ld
 letMeInRequestState=%ld
 ignoreLMIRequests=%d
 avcSessionToken=%ld
 avcSessionIdentifier=%@
 isLocallyCreated=%d
 hasJoined=%d
 isUplinkMuted=%d
 video=%d
 isAudioEnabled=%d
 isVideoEnabled=%d
 isScreenEnabled=%d
 oneToOneModeEnabled=%d
 localMember=%@
 remoteMembers=%@
 pendingMembers=%@
 kickedMembers=%@
 rejectedMembers=%@
 otherInvitedHandles=%@
 lightweightMembers=%@
 memberIdentifiers=%@
 activeRemoteParticipants=%@
 activeLightweightParticipants=%@
 report=%@
 virtualParticipants=%@
 provider=%@
 tuActivitySessions=%@
 tuSystemActivitySessions=%@
 handoffEligibility=%@
 splitSessionSecondary=%@
 localLightweightSecondaryMember=%@
 invitationPreferences=%@
 avMode=%ld
Attempting to add lightweight participant with invalid AVMode. Please file a bug to [FaceTime | (New Bugs)]
PubSub
CADisplay
QuartzCore
Trying to setup new AVCSession without tearing down previous session first. Please file a bug to [FaceTime Core - TelephonyUtilities | All].
Calling -[CSDConversation leave]
B16@?0@"CSDConversationParticipant"8
Cleaning up from AVCSession failure.
Timed out waiting for sessions to end in leaving state (left conversation for reason: %@). Please file a bug on [TelephonyUtilities | New Bugs] so we can direct it to the appropriate team.
B16@?0@"TUConversationMember"8
NSErrorUserInfoDetailedError
-[CSDConversation executeSessionDidStart]
CSDConversation.m
self.avcSession != nil
AVCSession started but we weren't trying to join the conversation.
AVCSession failed to start.
%@.%@
v16@?0@"IMUserNotification"8
v16@?0Q8
CSDRelayIDSActiveAccountsChanged
CSDRelayPairedDeviceConnectedNotification
com.apple.private.alloy.phonecontinuity
supportsHolding
supportsGrouping
supportsUngrouping
supportsDTMF
supportsUnambiguousMultiPartyState
supportsAddCall
supportsSendingToVoicemail
destinationID
uniqueProxyIdentifier
sourceIdentifier
wantsHoldMusic
dtmfKey
disconnectedReason
v32@?0@"NSString"8@16^B24
NoAction
IncomingCall
DialCall
CallDialed
AnswerCall
CallAnsweredElsewhere
CallDisconnected
PlayDTMFToneForKey
CallConnected
DisconnectCall
PullRelayingCalls
HoldCall
UnholdCall
GroupCall
UngroupCall
ResetWantsHoldMusic
SwapCalls
UpdateCallModel
DeviceUnavailable
EndActiveAndAnswer
EndHeldAndAnswer
DisconnectCurrentCallAndActivateHeld
DisconnectAllCalls
ResetState
HardPauseDigitsAvailability
SendHardPauseDigits
UpdateRemoteCallState
SuppressRingtone
RequestCallContext
CallStartedConnecting
PushHostedCalls
PullHostedCalls
PushRelayingCalls
UpdateCallContext
NeedsManualInCallSoundsChange
InvitationSent
HoldActiveAndAnswer
UpdateCallDisplayContext
SetUplinkMuted
UpdateRemoteUplinkMuted
UpdateSystemVolume
UpdateSupportsTTYWithVoice
SetTTYType
RequestAction
UpdateRoutes
PickRoute
DowngradeToAudio
UpdateFailureExpected
UpdateSupportsEmergencyFallback
value
isoCountryCode
Generic
PhoneNumber
EmailAddress
sender
audioRouteUniqueIdentifier
com.apple.telephonyutilities.callservicesd.FaceTimeProvider
/stock
com.apple.request.hipuncap
com.apple.springboard.passcodeLockedOrBlocked
v16@?0@?<v@?>8
gk-invitation-break-before-make-timeout
StoreDemoMode
com.apple.demo-settings
RetailDemoNotification
CALL_ENDED
CALL_ENDED_DEMO_EXPLANATION
 temporaryGroupUUID=%@
 conversationGroupUUID=%@
 approverHandle=%@
 isVideo=%d
ShouldSuppress
ShouldAllow
com.apple.telephonyutilities.callservicesd.statusbarmanager
v16@?0@"STCallingStatusDomainUserInteraction"8
v16@?0@"STMutableCallingStatusDomainData"8
com.apple.callservicesd.neighborhoodConduit.xpcServer
com.apple.telephonyutilities.callservicesdaemon.neighborhood-activities
v24@?0@"CSDClient"8@"<TUNeighborhoodActivityConduitXPCClient>"16
v16@?0@"<TUNeighborhoodActivityConduitXPCClient>"8
CSDCarrierBundlePhoneNumberProviderController
B24@?0@"CSDCarrierBundlePhoneNumberProvider"8@"NSDictionary"16
SilenceUnknownCallersOverrideList
CSDRelayIDSDualSession.m
Use another initializer instead
forceBTClassic
non-nil
updateMessage
checkInMessage
recoverMessage
Unknown
Update
CheckIn
Recover
com.apple.telephonyutilities.callservicesd.thumpercapabilitiesmonitor
NPSDomainAccessor
NanoPreferencesSync
thumperCallingAllowedOnDefaultPairedDevice
thumperCallingCapabilitiesStates
PreviousDefaultPairedDeviceUniqueID
uniqueIDOverride
com.apple.telephonyutilities.callservicesd.thumperpushhandler.secondarydevicethumpersupported
THUMPER_CALLING
NOT_NOW
TURN_ON
MAKE_RECEIVE_THUMPER_CELLULAR_FOR_CARRIER_%@
MAKE_RECEIVE_THUMPER_FOR_CARRIER_%@
MAKE_RECEIVE_THUMPER_CELLULAR
MAKE_RECEIVE_THUMPER
com.apple.telephonyutilities.callservicesd.thumperpushhandler.secondarydevicethumperenabled
THUMPER_EMERGENCY_ADDRESS_INFO_TITLE
THUMPER_EMERGENCY_ADDRESS_INFO_MESSAGE
PREFERENCES_BUTTON_TITLE
PSFaceTimeSettingsDetail
Preferences
<%@ %p 
%@=%d
%@=%@
%@=%lu
com.apple.telephonyutilities.callservicesd.accountscontroller
    faceTimeIDMatchesAppleID: %@
    faceTimeAudioAvailability: %ld
    faceTimeVideoAvailability: %ld
    outgoingCallerID: %@
B24@?0@"NSString"8^B16
B32@?0@"NSString"8Q16^B24
IMStringIsPhoneNumber
IMFoundation
CSDPauseDigits.m
%s is not available. Use a designated initializer instead.
-[CSDPauseDigits init]
<%@ %p digits=%@ isHardPause=%d>
com.apple.telephonyutilities.callservicesd.conversationprovidermanagerxpcserver
com.apple.telephonyutilities.callservicesdaemon.conversationprovidermanager
CSDConversationProviderManagerClientsShouldConnectNotification
com.apple.telephonyutilities.callservicesd.callprovidermanagerxpcserver
com.apple.telephonyutilities.callservicesdaemon.callprovidermanager
v24@?0@"CSDClient"8@"<TUCallProviderManagerXPCClient>"16
com.apple.private.alloy.facetime.video
@"CSDAVConference"8@?0
CSDIDSChat.m
Cannot create an incoming chat with an outgoing session: %@
Cannot create an outgoing chat with an incoming session: %@
disableFaceTimeKeyExchange
Invite
contextIdentifier
actionDescription
ongoingDescription
completedDescription
com.apple.telephonyutilities.callservicesd.calldirectorymaintenance.daily
v16@?0@"NSObject<OS_xpc_object>"8
extensionsChangedForCallDirectoryExtensionManager-%lu
CXCallDirectoryNSExtensionManagerDelegate
protoCallModelState
protoService
protoWantsHoldMusic
protoCannotBeAnswered
protoDTMFKey
protoDisconnectedReason
OBSOLETE_conferenceIdentifier
protoVoicemail
callerNameFromNetwork
protoCall
hardPauseDigits
hardPauseState
receivedMessageType
protoProtocolVersion
protoShouldSuppressRingtone
dummyPayload
hostCallCreationTime
messageSendTime
protoNeedsManualInCallSounds
protoCannotRelayAudioOrVideoOnPairedDevice
protoExpectedEndpointOnMessagingDevice
contactIdentifier
protoCallCapabilitiesState
protoSoundRegion
protoEmergency
otherUniqueProxyIdentifiers
protoCallModel
protoSOS
protoDisplayContext
inviteData
protoProvider
protoVideo
protoUplinkMuted
protoRemoteUplinkMuted
systemVolume
localSenderIdentityUUIDString
localSenderIdentityAccountUUIDString
protoTTYType
protoSupportsTTYWithVoice
requestActionType
routes
route
endpointIDSDestinationURIs
protoPriority
protoOriginatingUIType
protoFailureExpected
protoSupportsEmergencyFallback
%@.%@.%p
idx (%lu) is out of range (%lu)
localizedName
bundleURLString
maximumCallGroups
maximumCallsPerCallGroup
supportsAudioOnly
supportsAudioAndVideo
supportsEmergency
supportsVoicemail
ringtoneSoundURLString
originalRingtoneSoundURLString
handoffIdentifier
protoSupportedHandleType
emergencyLabeledHandles
supportsRecents
prioritizedSenderIdentities
emergencyHandles
    dialingIDSDevice: %@
@"CSDMessagingRelayMessage"8@?0
v20@?0i8^B12
v20@?0B8@"NSDictionary"12
com.apple.notifyd.matching
com.apple.telephonyutilities.callservicesd.kFZACAppBundleIdentifierLaunchNotification
com.apple.distnoted.matching
com.apple.callhistory.save.distributed.notification
com.apple.telephonyutilities.callservicesdaemon.app-installed
com.apple.telephonyutilities.callservicesdaemon.app-uninstalled
com.apple.CTTelephonyCenter
com.apple.telephonyutilities.callservicesd.reportingcontroller
proximity-sensor
com.apple.telephonyutilities.callservicesdaemon.connectionrequest
com.apple.telephonyutilities.callservicesd.calls
com.apple.language.changed
CSDIDSPendingChatKey
CSDIDSPendingCallKey
CSDIDSPendingChatUUIDKey
CSDIDSPendingMessageDidReceiveInviteNotification
CSDIDSPendingMessageDidReceiveCancelNotification
CSDGroupIDSPendingMessageDidReceiveInviteNotification
@"<CSDIDSDualSessionProvider>"24@?0@"IDSSession"8@"NSObject<OS_dispatch_queue>"16
NetworkAvailabilityCheckOverrideValue
allowed
ignored
audio
SKEBlob
mediaBlob
callInfoBlob
CSDIDSDualSessionStateChangedNotification
CSDIDSDualSession.m
-[CSDIDSDualSession init]
%@ isInitiator=%d state=%d remoteProtocolVersion=%@>
%@=%ld
@"NSString"16@?0@"NSString"8
CSDFaceTimeIDSProviderDelegate.m
%s is not available. Use an available initializer instead.
-[CSDFaceTimeIDSProviderDelegate init]
@"<CSDIDSService>"12@?0B8
B16@?0@"IDSAccount"8
@"<CSDIDSDualSessionProvider>"40@?0@"IDSAccount"8@"NSSet"16@"NSDictionary"24@"NSObject<OS_dispatch_queue>"32
@"<CSDIDSChat>"48@?0@"CSDExternalIDSDualSession"8@"NSUUID"16@"TUHandle"24B32B36@"NSUUID"40
CSDFileTransferringMetadataKeyIsDirectory
CSDFileTransferringMetadataKeyUserData
com.apple.telephonyutilities.callservicesd.csdfiletransfercontroller
v16@?0@"NSURL"8
directory
file
v16@?0@"IMFileCopier"8
CSDCallSourceFetcher.m
%s is not available. Use another initializer instead.
-[CSDCallSourceFetcher init]
iPod
IPOD
iPad
IPAD
iPhone
IPHONE
THUMPER_SERVICE_NAME
ENTER_CODE_FOR_%@
ALLOW
CANCEL
PrimaryDeviceNotification
THUMPER_PUSH_HANDLER_CONSENT_ALERT_MESSAGE
THUMPER_PUSH_HANDLER_CONSENT_ALERT_TITLE
THUMPER_PUSH_HANDLER_CONSENT_ALERT_ENABLE
THUMPER_PUSH_HANDLER_CONSENT_ALERT_CANCEL
SecondaryDeviceNotification
RECEIVE_THUMPER_CALLS_FROM_PHONE_NUMBER_ENTER_CODE_%@_%@
THUMPER_PIN_EXCHANGE_REQUEST_FAILED_TITLE
THUMPER_PIN_EXCHANGE_REQUEST_FAILED_MESSAGE
protoStatus
protoConferenced
protoTimeConnected
protoOutgoing
protoHasSentInvitation
kMXSessionAudioMode_RemoteVoiceChat
com.apple.telephonyutilities.callservicesd.callhistorymanagerxpcserver
com.apple.telephonyutilities.callservicesdaemon.callhistorymanager
-[CSDCallHistoryManagerXPCServer updateOutgoingLocalParticipantUUID:forCallsWithOutgoingLocalParticipantUUID:]
CSDPauseDigitsQueue.m
-[CSDPauseDigitsQueue init]
 baseDestinationID=%@
 originalPauseDigitsString=%@
 pauseDigits=%@
** TUAssertion failure: %@
callservicesd is attempting to create an XPC client for itself.
CSDXPCClient.m
%@ entitlementCapabilities=%@
IPCHack
UI process assertion for message handling
RTTTelephonyUtilities
RTTUtilities
targetContentIdentifier
shouldAssociateScene
CSDIDSInitialLinkTypeKey
CSDIDSInputAudioPowerSpectrumTokenKey
CSDIDSOutputAudioPowerSpectrumTokenKey
%s: parameter '%@' cannot be nil
-[CSDProviderCallConfiguration initWithProviderIdentifier:]
providerIdentifier
message
messagesGroupUUIDString
messagesGroupName
activitySession
video
otherInvitedHandles
lightweightMembers
videoEnabled
participantAssociation
collaborationIdentifier
PHPhotoLibrary
Photos
PHAssetCreationRequest
PHAssetResourceCreationOptions
CallState
status
bundleID
providerContext
hostedOnCurrentDevice
endpointOnCurrentDevice
callStart
callStop
callForegrounded
callBackgrounded
GroupSessionEventEnded
timestamp
timestampEnd
CSDFaceTimeProviderDelegate.m
-[CSDFaceTimeProviderDelegate init]
v16@?0@"CSDIDSService"8
v24@?0@"NSArray"8@"NSArray"16
-[CSDVoIPApplication init] is not supported. Use -[CSDVoIPApplication initWithBundleIdentifier:] instead
CSDVoIPApplication.m
<%@ %p bundleIdentifier=%@ environment=%@ pushKitClient=%@ networkExtensionClient=%@ token=%@ pendingPKMessageContextCount=%lu pendingNetworkExtensionContextsCount=%lu>
aps-environment
com.apple.developer.pushkit.unrestricted-voip
com.apple.developer.pushkit.unrestricted-voip-regulatory
com.apple.developer.pushkit.unrestricted-voip.ptt
com.apple.developer.pushkit.unrestricted-voip.temporary
13.0
15.0
15.4
identifierUUIDString
activity
givenName
middleName
nameSuffix
phoneticRepresentation
link
v20@?0i8q12
v16@?0@"TUConversation"8
-[CSDStatusBarResolver conversationManager:removedActiveConversation:]
-[CSDStatusBarResolver conversationManager:addedActiveConversation:]
-[CSDStatusBarResolver conversationManager:stateChangedForConversation:]
-[CSDStatusBarResolver conversationManager:activitySessionsChangedForConversation:]
-[CSDStatusBarResolver conversationManager:activeRemoteParticipantsChangedForConversation:]
-[CSDStatusBarResolver conversationManager:localVideoToggledForConversation:]
-[CSDStatusBarResolver conversationManager:handoffEligibilityChangedForConversation:]
CSDRelayConferenceLocalFrequencyChangedNotification
CSDRelayConferenceRemoteFrequencyChangedNotification
CSDRelayConferenceLocalMeterLevelChangedNotification
CSDRelayConferenceRemoteMeterLevelChangedNotification
CSDRelayConferenceMutedChangedNotification
CSDRelayConferenceSendingAudioChangedNotification
CSDRelayConferenceConnectionWillCloseNotification
CSDRelayConferenceConnectionDidCloseNotification
CSDRelayConferenceConnectionDidReceiveDataNotification
CSDRelayConferenceConnectionDidReceiveDataNotificationDataKey
com.apple.telephonyutilities
Conference cleaned up before handling a didStart with error: %@
CallServices
Images
CSDSandboxExtensionDirectory.m
-[CSDSandboxExtensionDirectory init]
CSDPinExchangeCompressedDataKey
CSDPinExchangeActionKey
CSDPinExchangeCallerIDKey
CSDPinExchangePinKey
CSDPinExchangeActionRequestPIN
CSDPinExchangeActionSendPIN
CSDPinExchangeActionOneTimeReminder
CSDPinExchangeActionApproved
CSDPinExchangeActionUnapproved
CSDPinExchangeActionCancelledPrimary
CSDPinExchangeActionCancelledSecondary
v20@?0B8@"NSString"12
com.apple.telephonyutilities.callservicesd.pinexchangeerror
INCORRECT_PIN_ENTERED
THUMPER_MISMATCHED_ACCOUNTS
MAX_SLOTS_FILLED
primaryHandle
primaryIdentifier
primaryAvcIdentifier
associatedPseudonym
conversationGroupUUIDString
com.apple.telephonyutilities.callservicesd.callcapabilities
com.apple.telephonyutilities.callservicesdaemon.callcapabilities
State: %@
Telephony capabilities: %@
Accounts controller: %@
Paired Host Device State: %@
v24@?0@"CSDClient"8@"<TUCallCapabilitiesXPCClient>"16
-[CSDCallCapabilities setRelayCallingEnabled:]
-[CSDCallCapabilities setRelayCallingEnabled:forDeviceWithID:]
-[CSDCallCapabilities setWiFiCallingEnabled:forSenderIdentityWithUUID:]
-[CSDCallCapabilities setWiFiCallingRoamingEnabled:forSenderIdentityWithUUID:]
-[CSDCallCapabilities setVoLTECallingEnabled:forSenderIdentityWithUUID:]
-[CSDCallCapabilities setThumperCallingEnabled:forSenderIdentityWithUUID:]
-[CSDCallCapabilities setThumperCallingAllowed:onSecondaryDeviceWithID:forSenderIdentityWithUUID:]
-[CSDCallCapabilities setThumperCallingAllowedOnDefaultPairedDevice:forSenderIdentityWithUUID:]
-[CSDCallCapabilities endEmergencyCallbackMode]
-[CSDCallCapabilities invalidateAndRefreshWiFiCallingProvisioningURLForSenderIdentityWithUUID:]
-[CSDCallCapabilities invalidateAndRefreshThumperCallingProvisioningURLForSenderIdentityWithUUID:]
-[CSDCallCapabilities requestPinFromPrimaryDevice]
-[CSDCallCapabilities cancelPinRequestFromPrimaryDevice]
disableSupportsPrimaryCalling
forceSupportsPrimaryCalling
telephony
disableSupportsBasebandCalling
forceSupportsBasebandCalling
disableSupportsCellularData
forceSupportsCellularData
disableDisplayingTelephonyCallSupport
forceDisplayingTelephonyCallSupport
disableDisplayingFaceTimeAudioCallSupport
forceDisplayingFaceTimeAudioCallSupport
disableDisplayingFaceTimeVideoCallSupport
forceDisplayingFaceTimeVideoCallSupport
disableCanEnableWiFiCalling
forceCanEnableWiFiCalling
disableCanEnableVoLTECalling
forceCanEnableVoLTECalling
disableCanEnableThumperCalling
forceCanEnableThumperCalling
q24@?0@"TUCloudCallingDevice"8@"TUCloudCallingDevice"16
relayCallingDisabled
relayCallingDisabledForDeviceID
pairedHostDeviceState
CSDSharePlayMediaDidHandoffNotification
CSDSharePlayRemoteActivityDidChangeNotification
CSDCallMayRequireBreakBeforeMakeChangedNotification
CSDCallHasStartedOutgoingChangedNotification
CSDCallHasAudioInterruptionChangedNotification
CSDCallAudioInterruptionPropertiesChangedNotification
CSDCallLocalPreviewStoppedNotification
CSDCallsWillEnterBackgroundNotification
CSDCallEnteredForegroundNotification
CSDCallRemoteParticipantJoinedNotification
CSDCallRemoteParticipantLeftNotification
CSDCallOneToOneModeChangedNotification
CSDMediaPlaybackOnExternalDeviceChangedNotification
CSDCallTransmissionStateChangedNotification
CSDCallMetricsKnownContact
CSDCallMetricsSiriSuggested
CSDCallMetricsReturnedCall
CSDCallMetricsOwnNumber
CSDCallMetricsVerifiedAppleCare
CSDCallMetricsCarrierNumber
CSDCallAudioInterruptionProviderUserInfoKey
CSDCallAudioInterruptionProviderUserInfoAVAudioClient
CSDCallAudioInterruptionProviderUserInfoAVAudioSession
CSDCall.m
dialRequest is invalid: %@
SFCoordinatedAlertRequest
Sharing
v28@?0@"NSError"8B16@"NSDictionary"20
v16@?0q8
CSDRouteManagerPreferredRouteChangedNotification
com.apple.telephonyutilities.callservicesd.routemanager
AVAudioSessionMediaServicesWereResetNotification
AVFoundation
PhoneCall
StarkCapability
lightweightPrimary
lightweightPrimaryParticipantID
validationSource
associationVoucher
Endorsement
Vouched
UUIDString
locallyCreated
initiator
localMember
remoteMembers
activeRemoteParticipants
activitySessions
reportData
conversationProviderIdentifier
activeLightweightParticipants
highlightIdentifier
stagedActivitySession
conversationID
timebase
com.apple.telephonyutilities.callservicesd.conversationmanager
@"CSDIDSGroupSessionProvider"64@?0@"NSString"8@"NSArray"16@"NSString"24@"IDSAccount"32@"NSObject<OS_dispatch_queue>"40B48@"TUConversationMember"52B60
@"CSDConversation"136@?0@"NSObject<OS_dispatch_queue>"8@"NSUUID"16@"NSUUID"24@"CSDIDSGroupSession"32@"NSUUID"40B48@"TUConversationMember"52@"TUHandle"60@"NSSet"68@"NSSet"76@"NSSet"84@"NSSet"92@"TUConversationActivity"100@"TUConversationLink"108@"TUConversationReport"116B124Q128
B72@?0@"NSData"8@"IDSAccount"16@"NSSet"24@"TUConversationMember"32@"NSDictionary"40^@48@?<v@?>56@"TUConversationProvider"64
@"NSSet"16@?0@"TUConversationProvider"8
@"NSSet"8@?0
@"TUHandle"8@?0
@"TUHandle"16@?0@"TUConversationProvider"8
self-token:
token:
v32@?0@"CSDMessagingConversationMessage"8@"NSData"16@"NSError"24
v24@?0@"TUConversationLinkDescriptor"8@"NSError"16
v24@?0@"TUConversationLink"8@"NSError"16
v132@?0@"NSUUID"8@"NSUUID"16@"NSUUID"24B32@"TUConversationMember"36@"TUHandle"44@"NSArray"52@"NSArray"60@"NSArray"68@"NSArray"76@"TUConversationLink"84@"TUConversationReport"92@"NSArray"100@"NSString"108@"CSDMessagingConversationActivitySession"116Q124
v32@?0@"NSUUID"8@"CSDConversation"16^B24
v32@?0@"CSDMessagingEncryptedConversationMessage"8@"CSDLetMeInRequestorKeyAgreement"16@"NSError"24
v24@?0@"TUVoucher"8@"NSError"16
SHAREPLAY_INCOMPATIBLE_MESSAGE
SHAREPLAY_INCOMPATIBLE_TITLE
Failed to find conversation with activitySession
SharePlay not allowed
v24@?0@"NSSet"8@"NSError"16
v16@?0@"IDSGroupSessionParticipantUpdate"8
Invitation
Upgrade
AddMember
BlobRecoveryRequest
BlobRecoveryResponse
RespondedElsewhere
AddActivitySession
Decline
LetMeInRequest
LinkCreated
NicknameUpdated
EncryptedConversationMessage
LetMeInDelegation
LetMeInDelegationResponse
LetMeInResponse
RemoveMember
RemoveActivitySession
RequestVideoUpgrade
UpdateActivity
LinkInvalidated
AddLightweightMember
LinkChanged
UpdateActivityImage
GuestModeUpdated
Endorse
AddHighlight
RemoveHighlight
UpdateJoinedMetadata
ParticipantUpdated
RegisterMessagesGroupUUID
tokenPrefixedURI
unsafeData
encryptedData
This call's call history identifier is nil
CHRecentCall_CSD.m
!(call_category == %@ && service_provider == %@)
voip
com.apple.developer.networking.networkextension
app-push-provider
protoWantsVideo
OBSOLETE_protoMomentsAvailable
protoSenderMuteUplink
protoShouldSuppressInCallUI
protoMomentsV2Available
protoUpgradeSessionUUID
B16@?0@"TURoute"8
<%@ %p category=%@ mode=%@>
v32@?0@"TURoute"8Q16^B24
v24@?0@"TURoute"8^B16
com.apple.private.alloy.facetime.audio
applicationContext
activityIdentifier
activityContext
updatedDateEpochTime
fallbackApplicationName
activityMetadata
isSystemActivity
timestampAsTimeIntervalSinceReferenceDate
fromHandle
handleType
notificationStyles
faceTimeAudioAvailable
faceTimeVideoAvailable
00000000-0000-0000-0000-000000000000
com.apple.telephonyutilities.callservicesd.incomingcallfilter
@"CXCallDirectoryStore"8@?0
q24@?0@"NSString"8@"NSString"16
%ld%@
callerId
generatorID
generatorVersion
CSDIDSSession.m
-[CSDIDSSession init]
<%@ %p %@>
UUID=%@
name
protoPersonNameComponents
suggestedName
label
companyName
mapName
location
contactName
contactLabel
callDirectoryLabel
callDirectoryLocalizedExtensionContainingAppName
callDirectoryExtensionIdentifier
contactIdentifiers
com.apple.telephonyutilities.callservicesd.useractivitycommunicator
announcements
GondolaLinkOverrideBaseURL
com.apple.private.alloy.phone.auth
-[CSDIDSGroupSession addMembers:toExistingMembers:activeParticipants:activitySessions:link:otherInvitedHandles:report:invitationPreferences:requiredCapabilities:messagesGroupUUID:messagesGroupName:addingFromLetMeIn:triggeredLocally:highlightIdentifier:stagedActivitySession:avMode:]
v24@?0@"CSDClient"8@"<TUCallServicesXPCClient>"16
com.apple.telephonyutilities.callservicesdaemon.callstatecontroller
7UhDrmrZozgwO+3AgUbHxw
%@-%d
B16@?0@"CSDClient"8
NRPairedDeviceRegistry
NanoRegistry
282F1EE6-A144-4106-AFFB-2BDB5B59FD0D
com.apple.telephonyutilities.callservicesdaemon.voicemailcallended
v32@?0@"NSString"8Q16^B24
callsToHold
callsToUnhold
callsToDisconnect
v16@?0@"TUCall"8
-[CSDCallStateController dialWithRequest:reply:]
-[CSDCallStateController dialWithRequest:displayContext:]
-[CSDCallStateController answerCallWithRequest:]
-[CSDCallStateController holdCallWithUniqueProxyIdentifier:]
-[CSDCallStateController unholdCallWithUniqueProxyIdentifier:]
-[CSDCallStateController requestVideoUpgradeForCallWithUniqueProxyIdentifier:]
-[CSDCallStateController disconnectCallWithUniqueProxyIdentifier:]
-[CSDCallStateController groupCallWithUniqueProxyIdentifier:withOtherCallWithUniqueProxyIdentifier:]
-[CSDCallStateController ungroupCallWithUniqueProxyIdentifier:]
-[CSDCallStateController swapCalls]
-[CSDCallStateController playDTMFToneForCallWithUniqueProxyIdentifier:key:]
-[CSDCallStateController disconnectCurrentCallAndActivateHeld]
-[CSDCallStateController disconnectAllCalls]
-[CSDCallStateController setTTYType:forCallWithUniqueProxyIdentifier:]
-[CSDCallStateController pullRelayingCallsFromClient]
-[CSDCallStateController pushRelayingCallsToHostWithSourceIdentifier:]
-[CSDCallStateController pullCallFromClientUsingHandoffActivityUserInfo:reply:]
-[CSDCallStateController sendMMIOrUSSDCodeWithRequest:]
-[CSDCallStateController setUplinkMuted:forCallWithUniqueProxyIdentifier:]
-[CSDCallStateController setDownlinkMuted:forCallWithUniqueProxyIdentifier:]
-[CSDCallStateController setIsSendingVideo:forCallWithUniqueProxyIdentifier:]
-[CSDCallStateController setMixesVoiceWithMedia:forCallWithUniqueProxyIdentifier:]
-[CSDCallStateController setSharingScreen:forCallWithUniqueProxyIdentifier:]
-[CSDCallStateController pushHostedCallsToDestination:]
-[CSDCallStateController pullHostedCallsFromPairedHostDevice]
-[CSDCallStateController sendHardPauseDigitsForCallWithUniqueProxyIdentifier:]
-[CSDCallStateController updateCallWithProxy:]
-[CSDCallStateController enteredForegroundForCallWithUniqueProxyIdentifier:]
-[CSDCallStateController willEnterBackgroundForAllCalls]
-[CSDCallStateController enteredBackgroundForAllCalls]
-[CSDCallStateController setRemoteVideoPresentationSizeForCallWithUniqueProxyIdentifier:size:]
-[CSDCallStateController setRemoteVideoPresentationStateForCallWithUniqueProxyIdentifier:presentationState:]
-[CSDCallStateController setScreenShareAttributesForCallWithUniqueProxyIdentifier:attributes:]
-[CSDCallStateController setSharingScreen:attributes:forCallWithUniqueProxyIdentifier:]
-[CSDCallStateController setBluetoothAudioFormatForCallWithUniqueProxyIdentifier:bluetoothAudioFormat:]
-[CSDCallStateController shouldSuppressInCallStatusBar:]
-[CSDCallStateController shouldAllowRingingCallStatusIndicator:]
v24@?0@"NSUserActivity"8@"NSError"16
-[CSDCallStateController activateInCallUIWithActivityContinuationIdentifier:]
-[CSDCallStateController joinConversationWithRequest:]
-[CSDCallStateController setCurrentAudioInputDeviceToDeviceWithUID:]
-[CSDCallStateController setCurrentAudioOutputDeviceToDeviceWithUID:]
-[CSDCallStateController localRoutesByUniqueIdentifier:]
-[CSDCallStateController pairedHostDeviceRoutesByUniqueIdentifier:]
-[CSDCallStateController pickLocalRouteWithUniqueIdentifier:shouldWaitUntilAvailable:]
-[CSDCallStateController pickPairedHostDeviceRouteWithUniqueIdentifier:shouldWaitUntilAvailable:]
-[CSDCallStateController containsRestrictedHandle:forBundleIdentifier:performSynchronously:reply:]
-[CSDCallStateController policyForAddresses:forBundleIdentifier:reply:]
-[CSDCallStateController willRestrictAddresses:forBundleIdentifier:reply:]
-[CSDCallStateController shouldRestrictAddresses:forBundleIdentifier:performSynchronously:reply:]
-[CSDCallStateController isUnknownAddress:normalizedAddress:forBundleIdentifier:reply:]
-[CSDCallStateController filterStatusForAddresses:forBundleIdentifier:reply:]
B24@?0@"TUCall"8@"NSDictionary"16
com.apple.telephonyutilities.callservicesd.voipapplicationcontroller
com.apple.callkit.networkextension.voip
com.apple.networkextension.voip.launch
com.apple.telephonyutilities.callservicesdaemon.voip
com.apple.pushkit.launch.voip
com.apple.telephonyutilities.callservicesd.csdvoipapplicationcontroller.daily
bundleIDs
CSDVoIPApplicationKillCounts
com.apple.telephonyutilities.callservicesdaemon.voip.push
com.apple.telephonyutilities.callservicesdaemon.voip.push.development
v24@?0@"BSProcessHandle"8@"NSError"16
 identifier=%llu
 handle=%@
 hasAVCData=%@
 isMuted=%d
 isMomentsAvailable=%d
 streamToken=%ld
 screenToken=%ld
 captionsToken=%ld
 avcIdentifier=%@
 capabilities=%@
 isAudioPaused=%d
 isRemoteAudioEnabled=%d
 isRemoteVideoEnabled=%d
 isLightweight=%d
 isLocalAccountHandle=%d
 association=%@
 isGuestModeEnabled=%d
 senderCorrelationIdentifier=%@
<%@: %p %@>
object=%@ processIdentifier=%d processName=%@ processBundleIdentifier=%@
fallbackURL
supportsContinuationOnTV
title
subtitle
image
preferredBroadcastingAttributes
sceneAssociationBehavior
kLastIDSFirewallVersionDefaultsKey
unique_id != %@
v24@?0@"CHHandle"8^B16
com.apple.telephonyutilities.callservicesd.conversationmanagerxpcserver
com.apple.telephonyutilities.callservicesdaemon.conversationmanager
CSDConversationManagerClientsShouldConnectNotification
-[CSDConversationManagerXPCServer createActivitySession:onConversationWithUUID:]
v16@?0@"TUConversationActivitySession"8
-[CSDConversationManagerXPCServer setUsingAirplay:onActivitySession:onConversationWithUUID:]
Conversation is not associated with a Messages group
No messages group details provider available
v24@?0@"CSDClient"8@"<TUConversationManagerXPCClient>"16
com.apple.telephonyutilities.callservicesd.callprovidermanager
Cannot launch app for dial request with a system provider: %@
Cannot launch app for invalid dial request: %@
NSSet<NSString *> *_INSupportedIntentsByExtensions(NSArray<LSPlugInKitProxy *> *__strong, NSError *__autoreleasing *)
CSDCallProviderManager.m
INSupportedIntentsByExtensions
void *IntentsLibrary(void)
v52@?0@"NSUUID"8B16B20B24@"NSUUID"28@"TUHandle"36@"NSString"44
incomingCallRaiseToAnswerEnabledKey
CMGestureManager
CoreMotion
v24@?0@"CSDIDSTransport"8@"NSDictionary"16
SBSLaunchApplicationWithIdentifier
SpringBoardServices
access-calls
modify-calls
modify-status-bar
access-call-capabilities
modify-call-capabilities
access-call-history
modify-call-history
access-moments
modify-moments
modify-usernotifications
modify-reports
override-activity-verification
register-gft-service
needs-ui-assertion
access-media-priorities
modify-activity-session-airplay
Entitlement check: In %s, client %@ lacks capability '%@'
CSDUserActivityConversationHandoffRecommendationChangedNotification
com.apple.telephonyutilities.suppressringtone
 activityType=%@
 dynamicIdentifier=%@
 activityUserInfo=%@
registeredProviders
registeredProvidersVersion
registeredRelayProviders
Ringtones
com.apple.LaunchServices.applicationUnregistered
com.apple.telephonyutilities.callservicesd.csdmomentsreportingsession
CSDMomentsReportingSession.m
-[CSDMomentsReportingSession init]
self
shouldTraceSignposts
@"AVCSessionParticipant"16@?0@"CSDConversationParticipant"8
@"AVCSession"32@?0@"NSString"8@"NSObject<NSCopying>"16@"NSObject<OS_dispatch_queue>"24
@"AVCScreenCapture"16@?0@"AVCScreenCaptureConfiguration"8
GKVoiceChatServiceErrorDomain
Stop called on a starting session
CSDAVCSessionError
avcKeySessionSentBytes
avcKeySessionReceivedBytes
CSDExternalIDSDualSession.m
<display_name>
CELLULAR_SETTINGS
prefs:root=MOBILE_DATA_SETTINGS_ID
WLAN_SETTINGS
WIFI_SETTINGS
prefs:root=WIFI
SETTINGS
prefs:root=General&path=DATE_AND_TIME
prefs:root=FACETIME&path=LOCATION&guid=%@
%s is unavailable, call another initializer instead.
-[CSDRelayConferenceConnection init]
CSDRelayConferenceConnection.m
 identifier=%@
 transport=%@
 isHost=%d
 isUsingBaseband=%d
 isAudioDisabled=%d
 receivedSuccessfulDidStart=%d
 isPreparedToStop=%d
<%@ %p>
    Are capabilities valid: %@
    Sender identity capabilities: %@
    Emergency callback capabilities: %@
    Thumper local device ID: %@
    Thumper local accounts: %@
    Thumper secondary accounts: %@
disabled
q24@?0@"CSDThumperAccount"8@"CSDThumperAccount"16
uniqueIdentifier
deviceType
protoCurrentlyPicked
protoGuest
protoSupportsRelay
AirPods
BeatsSolo
BeatsX
Powerbeats
BeatsStudio
HomePod
iMac
MacBook
MacMini
MacPro
Watch
HomePodStereoPair
iPadPro
PowerbeatsPro
BeatsSoloPro
AirPodsPro
Powerbeats4
HeadPods
BeatsX2
HomePodMini
HomePodMiniStereoPair
BeatsStudioBuds
BeatsFitPro
AirPods3
B620
B620StereoPair
B698
CSDConversationProviderManager
Already registered provider for identifier: %@
Did not register GFT Provider with identifier: %@
Pseudonym creation is not enabled
v24@?0@"RBSProcessHandle"8@"RBSProcessExitContext"16
v16@?0B8B12
shouldSuppressInCallUI
activeParticipants
addedMembers
isLetMeInApproved
encryptedMessage
letMeInDelegationHandle
letMeInDelegationUUID
enclosedEncryptedType
invitationPreferences
removedMembers
joinedMetadata
requestBlobRecoveryOptions
generateDescriptorVersionSum
@16@?0@"NSDictionary"8
Default
IDSMessageProxy
Voicemail
Reporting
leaveReason
Unspecified
Handoff
CSDFaceTimeIMAccountCallerIDChangedNotification
lastKnownFaceTimeCallerID
com.apple.telephonyutilities.callservicesd
com.apple.telephonyutilities.callservicesd.facetimeimaccount
v16@?0^{__CFDictionary=}8
ambiguityState
swappable
mergeable
holdAllowed
addCallAllowed
takingCallsPrivateAllowed
hardPauseAvailable
endAndAnswerAllowed
holdAndAnswerAllowed
sendToVoicemailAllowed
protoUUID
localizedShortName
accountUUIDString
localizedServiceName
v32@?0@"NSString"8@"NSString"16@"NSDictionary"24
nilCallProvider
CallUUID
Unknown Dial Failure for Conversation
Unknown Call Failure for Conversation
Mediaserverd crash
No AVC error reason given
AVC session did not start
AVC audio client did not start
AVC blob recovery timeout
RelayFailedConferenceFailed
RelayFailedNoRelayDevice
ComponentCrashed
RelayFailedRelayDeviceRelayNotEnabled
NoLocalLink
CallFailed
DialFailed
AccountUnsupported
NetworkUnsupported
ProviderCrashed
MediaStartFailed
MediaServerCrashed
NoReason
Disconnected
ReceiverDeclined
LocalUnanswered
RemoteUnanswered
InitiatorCancelled
CouldNotConnect
RemoteEnded
NoLocalData
NoRemoteData
FailedToOpenSocket
LocalHangup
RemoteHangup
NoLocalNetwork
MissingRemoteInfo
NoRemoteNetwork
EncryptionSetupFailed
EncryptionFailed
DecryptionFailed
SystemInternalError
NoRemotePackets
ReceiverBusy
SystemUnsupported
QRConfigurationError
SKEConfigurationError
QRAllocbindTimeout
QRUnallocbindTimeout
QRConnectedTimeout
AcceptedElsewhere
DeclinedElsewhere
AliasDeactivated
AllocatorParseError
AllocatorInvalidField
AllocatorInternalError
AllocatorServerBusy
AllocatorMissingKey
AllocatorBadSignature
AllocatorRateLimitExceeded
AllocatorUnknownError
InitialMkMDistributionFailure
JoinNotificationDistributionFailure
QRAllocateRequestTimeout
IdleClient
ParticipantBlockedListed
AllocatorBlockUPlusOneSession
AbortedByCaller
AbortedByReceiver
ReceiverOffline
HostHangup
Shutdown
LocalNetworkUnsupported
RemoteNetworkUnsupported
SystemComponentCrashed
CouldNotInvite
CouldNotRespond
CouldNotCancel
CouldNotSendUpdate
CouldNotSendAVMessage
CallLocalUnanswered
CallRemoteUnanswered
CallDeclinedElsewhere
CallFiltered
RemoteUserDoesNotExist
RemoteUserIncompatible
LocalUserIncompatible
CallerAccountInvalid
CallerAccountNeedsUpdate
Call Failure
com.apple.telephonyutilities.callservicesdaemon.reportingcontroller
B16@?0@"<CSDCallFilter>"8
shouldCheckAllGenerators
generatorDescriptors
generateDescriptorInfos
A910C931-A590-41EF-A783-910BFBE500B3
com.apple.telephonyutilities.callservicesd.callhistorymanager
outgoingLocalParticipantUUID == %@
v32@?0@"<CSDCallHistoryManagerDelegate>"8@"NSObject<OS_dispatch_queue>"16^B24
CSDIDSDeviceListChangedNotification
CSDIDSServiceCallerIDChangedNotification
CSDIDSServiceQueryListenerID
CSDIDSService.m
All CSDIDSService subclasses must override +sharedInstance
com.apple.telephonyutilities.callservicesd.%@
    devices: %@
    availableOutgoingRelayCallerIDs: %@
    defaultPairedDevice: %@
    pairedDevice: %@
    telephonyCapableDeviceExists: %@
    relayCapableDeviceExists: %@
v32@?0@"TUHandle"8@"NSDate"16^B24
v24@?0@"IDSFirewall"8@"NSError"16
", "
pairedDeviceUniqueIDOverride
AudioAccessory
v24@?0@"CSDIDSTransport"8@"NSData"16
com.apple.callservicesdaemon.csdmomentscontroller
PreserveFaceTimePhotosFiles
CSDMomentsControllerStartedRemoteCaptureNotification
CSDMomentsControllerStartedLocalVideoCaptureNotification
CSDMomentsControllerStoppedLocalVideoCaptureNotification
CSDMomentsControllerMetadataKeyTransactionID
heic
lp_image
lp_movie
com.apple.telephonyutilities.callservicesd.csdmomentscontroller
@"<CSDAVCMoments>"40@?0q8@"NSString"16@"<CSDAVCMomentsDelegate>"24@"NSObject<OS_dispatch_queue>"32
com.apple.telephonyutilities.callservicesdaemon.momentscontroller
Could not start request for mediaType: %d streamToken: %ld. -[AVCMoments newRequestWithMediaType:] returned nil.
Could not start request for mediaType: %d streamToken: %ld. No session has been registered for requested stream token.
Asked to start moments request with invalid media type %d
Asked to start moments request but moments is disabled by server bag
-[CSDMomentsController startRequestWithMediaType:forStreamToken:requesteeID:reply:]
Could not find request for transaction ID %@
-[CSDMomentsController endRequestWithTransactionID:reply:]
-[CSDMomentsController registerStreamToken:requesterID:remoteIDSDestinations:remoteMomentsAvailable:reply:]
-[CSDMomentsController unregisterStreamToken:reply:]
v24@?0@"CSDClient"8@"<TUMomentsControllerXPCClient>"16
v16@?0@"NSString"8
v24@?0@"NSString"8@"NSError"16
@"TUICFQueryResult"24@?0@"NSString"8@"NSString"16
B20@?0@"TUCallProvider"8B16
B16@?0@"CSDCall"8
FACETIME
com.apple.telephonyutilities.callservicesd.TinCan
Not allowing requested %@ because user intent could not be reasonably validated to gain access to the microphone while in the background.
v16@?0@"CXCallSource"8
com.apple.Superbox
We have an active XPC connection but no corresponding CSDClient
CSDClientManager.m
B24@?0@8@"NSDictionary"16
com.apple.TUCallCenter
CSDCallDataSource.m
All CSDCallDataSource subclasses must override +callClass
com.apple.backboard.proximity.changed
v32@?0@"<CSDProximitySensorObserverDelegate>"8@"NSObject<OS_dispatch_queue>"16^B24
CSDVoIPApplicationMessageTransportTypeUnknown
CSDVoIPApplicationMessageTransportTypeNetworkExtension
CSDVoIPApplicationMessageTransportTypePushKitVoIP
<%@ %p type=%d
 socket=%d
 destination=%@
 initialLinkType=%lu
 remoteDestination=%@
 remoteDeviceUniqueIdentifier=%@
callservicesd launched
join
viewCall
requestScreenShare
continueActivity
viewLinkDetails
continueHandoff
let-me-join
FaceTime
Phone
com.apple.TVWatchList
com.apple.TVMusic
com.apple.mobilenotes
callBack
sendMessage
deviceFamily
style
displayScale
scaleFactor
originalWidth
originalHeight
isWindowed
com.apple.InCallService
MPVoicemailDeleteMessageBulletinBoardActionIdentifier
MPCallBulletinBoardActionIdentifier
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
GeneratorDescriptor
RTCCSDRelayDeviceRoute
AnyAudioInterruptionProvider
AVAudioSessionInterruptionProvider
CSDCallCenterObserver
@?16@0:8
T@"<CSDCallCenterObserverDelegate>",N,&
triggers
T@"<CSDCallContainer>",N,R
@"<CSDCallCenterObserverDelegate>"16@0:8
v24@0:8@"<CSDCallCenterObserverDelegate>"16
@?<v@?@"CSDCall"Q>16@0:8
v24@0:8@?<v@?@"CSDCall"Q>16
@"<CSDCallContainer>"16@0:8
@"TUConversation"24@0:8@"TUCall"16
CSDCallCenterObserverDelegate
v32@0:8@"<CSDCallCenterObserver>"16@"CSDCall"24
v24@0:8@"<CSDCallCenterObserver>"16
CSDConversationInvitationResolving
B40@0:8@16@24@32
B32@0:8@"TUConversation"16@"TUHandle"24
B40@0:8@"TUConversation"16@"TUHandle"24@"NSSet"32
CSDPendingMembershipTrackerMessenger
v56@0:8@16@24@32@40@48
v52@0:8@16@24@32@40B48
v56@0:8@"NSSet"16@"CSDConversation"24@"TUConversationLink"32@"NSUUID"40@"TUConversationMember"48
v52@0:8@"NSSet"16@"CSDConversation"24@"NSUUID"32@"TUConversationMember"40B48
CSDPendingMembershipTrackerDelegate
v48@0:8@16@24@32@40
v40@0:8@16@24@32
v48@0:8@"CSDPendingMembershipTracker"16@"TUConversationMember"24@"CSDConversation"32@"NSData"40
v40@0:8@"CSDPendingMembershipTracker"16@"TUConversationMember"24@"NSUUID"32
CSDDirtyCallManager
@?<v@?@"CSDCall">16@0:8
v24@0:8@?<v@?@"CSDCall">16
v24@0:8@"CSDCall"16
CSDConversationLinkManagerDelegate
v32@0:8@"CSDConversationLinkManager"16@"NSArray"24
CSDScreenSharingActivityManagerDelegate
v36@0:8@16@24B32
v36@0:8@"CSDScreenSharingActivityManager"16@"<TUScreenShareAttributes>"24B32
v36@0:8@"CSDScreenSharingActivityManager"16@"NSError"24B32
CSDVoucherManager
v40@0:8@16@24@?32
v40@0:8@"NSData"16@"TUHandle"24@?<v@?@"TUVoucher"@"NSError">32
v32@0:8@"TUVoucher"16@?<v@?B@"NSError">24
CSDNeighborhoodActivityConduitDelegate
v48@0:8@16@24q32@?40
v24@0:8@"TUNearbyDeviceHandle"16
v48@0:8@"TUConversation"16@"TUNearbyDeviceHandle"24q32@?<v@?B@"NSError">40
_TtC13callservicesd28AnyAudioInterruptionProvider
boxed
_beginOrUpdate
_end
_resetState
_activeDescriptor
Sending updated policy for %s: %{bool}d
Sending policy infos: %s
No policy info to send, skipping
CSDTinCanIDSProviderDelegate
@40@0:8@16@24@32
isAccountActive
isDestinationValid
destinationsGenerator
outgoingSessionProviderGenerator
outgoingChatGenerator
contactsDataProvider
@"<CSDIDSChat>"36@?0@"CSDExternalIDSDualSession"8@"TUHandle"16B24@"NSDictionary"28
callservicesd.TinCanIDSProviderDelegate
init(capabilities:queue:)
CSDMessagingCallMessage could not be read
Received TinCan message: %@
TinCan message was of unknown type %@: %@
Could not find chat for set muted action  %@. All chats: %@
Sending TinCan message for sender mute uplink: %@
Failing action: %@ since its not relaying
Could not find chat for set relaying action  %@. All chats: %@
Cannot start TinCan IDS chat using service %@ because account is not active
Cannot start TinCan IDS chat using handle because IDS destination was invalid
Created TinCan session to destinations %@ with options: %@
Starting TinCan IDS chat: %@
v20@?0@"NSArray"8B16
Tried to make an outgoing call when we already had a ringing call with the same destination
TinCan IDS chat was canceled
SenderMuteUplink
Server bag does not support quick relay since current version is unspecified
qr-invitations-enabled
Server bag does not support quick relay since minimum version is unspecified
quickRelaySupported
TB,N,R
CSDUserIntentManager
v24@0:8@16
privateAPIValidator
$__lazy_storage_$_applicationStateValidator
donatedIntentValidator
backgroundBluetoothAccessValidator
mediaRemoteStateValidator
Validating intent for call source: %@ callSourceHasReasonableUserIntent: %@ isUserIntentConfident: %@ (%@)
Playing alert for background mic access: %@
callservicesd.UserIntentManager
init()
Enabling file protection class for conversation persistence storage
Cannot cast value: %@ to type: %@
CSDEmergencyCallbackCapabilities
_emergencyCallbackPossible
emergencyCallbackCapabilitiesDidChange
preventDetachAfterEmergencyCallTimeoutDeterminationHandler
dispatchAfterHandler
dispatchCancelHandler
callCenterObserver
preventDetachAfterEmergencyCallTimeoutWorkItem
emergencyCallbackPossible
callservicesd.EmergencyCallbackCapabilities
v24@?0@"CSDCall"8Q16
Starting prevent detach after emergency call timer with timeout of %d seconds. Marking emergency callback possible
Prevent detach after emergency call timer fired. Marking emergency callback as no longer possible
_CTServerConnectionCarrierSettingsCopyValue - encountered error %d %d
PreventDetachAfterEmergencyCallTimer
@?<v@?>16@0:8
v24@0:8@?<v@?>16
_TtC13callservicesdP33_7D766AEB715565F6893650EFEF7EA3D422OneShotCancellationBox
lock
state
CSDCarPlayManager
carSessionQueue
carSessionStatus
carPlayScreenConnectionChanged
isCarPlayConnected
com.apple.calls.queues.carSessionStatus
v12@?0B8
CSDPowerAssertionManager
powerAssertion
powerAssertionDescription
acquirePowerAssertionHandler
releasePowerAssertionHandler
com.apple.telephonyUtilities.callservicesd.HomePodRelay
B16@?0@"TUCall"8
PowerAssertionManager: Call relayed to HomePod, call=%@
releasing PowerAssertion %@
acquired PowerAssertion %@
_TtC13callservicesd32ConversationLinkSyncMessageQueue
intervalCalculator
actionByType
ConversationLinkSync: enqueue action {messageType: %@, destinations: %@, mode: %@, hasExisting: %@}
ConversationLinkSync: Scheduled action {interval: %@}
_TtC13callservicesd32AudioInterruptionProviderFactory
AudioAccessory5,1
AudioAccessory6,1
callservicesd.LetMeInRequestorKeyAgreement
CSDLetMeInRequestorKeyAgreement
B16@0:8
v16@0:8
localKey
requestKey
responseKey
isExhausted
Failed to derive let me in requestor's public key from the locally-generated private key.
Failed to retrieve combined data from encrypted LMI response.
CSDProviderDisplayMonitor
@28@0:8@16i24
provider
displayLayoutMonitor
$__lazy_storage_$_processObserver
isVisible
callservicesd.ProviderDisplayMonitor
com.apple.telephonyutilities.callservicesd.providerdisplaymonitor
HoldMusicDescriptor()
callservicesd
silenceUnknownCallersEnabled
silenceUnknownFaceTimeCallersEnabled
maxJunkLevel
Q16@0:8
v24@0:8Q16
v24@0:8@?16
callContainerClosure
notificationCenter
T@"<CSDCallCenterObserverDelegate>",N,W,Vdelegate
TQ,N,Vtriggers
Could not retrieve conversation from notification %@
Could not retrieve call with conversation group UUID %@
Received notification %@ for unrecognized trigger
Call not specified in notification %@
TQ,N
_TtC13callservicesd33GroupFaceTimeNotificationProvider
conversationManager
ftNetworkSupport
invitationResolver
notificationIdentifiersByConversationUUID
carPlayNotificationIdentifiersByConversationUUID
faceTimeNotificationCenter
conversationServerBag
facetimeIsShowingOnScreen
openURL
unlockAndOpenSensitiveURL
localizeConversationName
localizeHandleName
localizeHandleNameWithConversation
notificationType
categories
replace
removeNotification
updateBadgeValue
Unknown notification response received
continueActivity action for notification: %@
Ignoring notification response %@ because a pseudonym is missing/could not be typecasted in userInfo
Failed to construct FaceTime app URL to view link details
Launching FaceTime for notification response via url %@
handoffDynamicIdentifier
Ignoring notification response %@ because a handoff dynamic identifier is missing/could not be typecasted in userInfo
MAYBE_NICKNAME_%@
TelephonyUtilities
group-facetime-invite
group-facetime-participant-join
ACCEPT_SHARE_SCREEN_REQUEST
group-facetime-participant-screenshare-request
group-facetime-moments-request
group-facetime-let-me-in-approved
VIEW_LINK_DETAILS
group-facetime-let-me-in-request-pre-conversation
group-facetime-handoff-eligibility
Replacing handoff eligible nearby notification from old conversation UUID %@ to new conversation UUID %@
conversation-handoff-nearby
Not posting handoff nearby notification for conversation %@ because it did not have handoff eligibility
FACETIME_AUDIO_SERVICE
MOVE_CALL_TO_THIS
Posting notification request %@ for handoff eligible conversation UUID %@ nearby
FACETIME_SERVICE
Not posting user notification for handoff eligible conversation %@ because there's already a local non-waiting conversation
Ignoring adding notification request %@ since valid network is not reachable
Handoff eligibility changed for %@
Removing handoff eligible nearby notification for conversation UUID %@
In response to conversations changed, we determined that we should post an invite notification for conversation UUID %@
Posting notification request for conversation UUID %@ with content %@
JOIN_FACETIME_CALL
GFT_PARTICIPANT_REQUESTING_SHARE_SCREEN
Removing handoff notification as there are no handoff-eligible conversations left
No notification for conversation UUID %@
Tracked pending member changed, but not a locally owned link -- ignoring %@ %@
Failed to determine conversation link for pending member notification with conversation %@ and conversationLink %@
Not posting pending member notification becaue Group FaceTime is not supported (GreenTea device or doesn't support multiway)
GFT_LET_ME_IN_REQUESTED
authorizationRequest-
v16@?0@"NSArray"8
Time since LMI initiated for member %@ is %.2f seconds
Skip posting pending member notification because hasJoined: %{BOOL}d, ignoreLMIRequests: %{BOOL}d for conversation: %@
Replacing notification id %@ with content %@
Not posting LMI approval notification because the conversation is currently showing on screen
GFT_LET_ME_IN_GRANTED
Removing invite notification for conversation UUID %@ with notification identifier
Conversation UUID %@ had a state change, and we determined that we should post an invite notification
Handling notification for pending message did receive invite: %@
Did not find expected pending chat information
momentsStartedRemoteCapture received invalid notification object: %@
could not find conversation for notification stream token: %@
FACETIME_PHOTO_SUCCESS_REMOTE_CAPTURE
FACETIME_PHOTO_NOTIFICATION_TITLE
could not find participant for participant in conversation: %@ for requesterID: %@
Handle momentsStartedRemoteCapture in-app
could not find conversation or call for notification stream token: %@
com.apple.facetime
callservicesd/GroupFaceTimeNotificationProvider.swift
_TtC13callservicesd29SoundDescriptorActionResolver
deviceIsHomePod
playersForSounds
Error creating audio player for %@ sound: %@
CSDFaceTimeLivePhotosIDSService
@16@0:8
sharedInstance
T@"CSDFaceTimeLivePhotosIDSService",N,R
com.apple.private.alloy.facetime.lp
remoteParticipantHandles
activeParticipantHandles
notificationProviderIdentifier
T@"NSString",N,R
T@"NSArray",N,C
T@"NSString",N,C
_TtC13callservicesd33AVAudioClientInterruptionProvider
activeDescriptor
Setting audio session properties: %@
Setting audio mixing: %@
Setting mode to A2DP: %@
Starting audio session
v20@?0B8@"NSError"12
Setting descriptor to be active since it requested an expedited activation: %@
Failed to start audio session: %@
Successfully started audio session
kAUVoiceIOProperty_OperationMode
kAUVoiceIOProperty_MediaPlaybackOnExternalDevice
kMXSessionProperty_PrefersToPlayDuringWombat
kMXSession_HostProcessAttributionKey_BundleID
kMXSession_HostProcessAttributionKey_AuditToken
kMXSessionProperty_HostProcessAttribution
kMXSessionProperty_CreateSpeakerDevice
kMXSessionProperty_InitiationDescription
kMXSessionProperty_ClientPriority
kMXSessionProperty_AudioMode
kMXSessionProperty_AudioCategory
CSDFaceTimeMultiwayIDSService
T@"CSDFaceTimeMultiwayIDSService",N,R
com.apple.private.alloy.facetime.multi
_TtC13callservicesd33ConversationLinkSyncIDSInteractor
delegate
knownDestinations
ConversationLinkSync: Ignoring devicesChanged signal from IDSService because destinations are the same {service: %@}
callservicesd.ConversationLinkSyncIDSInteractor
ConversationLinkSync: Incoming sync message, invalid fromID -- dropping {fromID: %@}
ConversationLinkSync: Incoming sync message, invalid destinationID -- dropping {fromID: %@}
ConversationLinkSync: Incoming sync message, unknown destinationID -- dropping {destinationID: %@, self.service.allAliases: %@}
ConversationLinkSync: Incoming sync message, invalid data -- dropping {data: %@}
ConversationLinkSync: Incoming sync message, data no protobuf -- dropping
ConversationLinkSync: Incoming sync message, processing {fromID: %@, destinationID: %@}
ConversationLinkSync: Incoming sync message, type was unknown {syncMessage: %@}
ConversationLinkSync: Incoming sync message, type was recover but message was missing recoverMessage {syncMessage: %@}
ConversationLinkSync: Incoming sync message, type was update but message was missing updateMessage {syncMessage: %@}
ConversationLinkSync: Incoming sync message, type was checkIn but message was missing checkInMessage {syncMessage: %@}
_TtC13callservicesd34AVAudioSessionInterruptionProvider
audioSession
isLocal
_activationContext
Setting audio activation context: %@ for provider %@
Error setting audio activation context to %@ for provider %@: %@
Successfully set audio activation context
Error overriding output audio port to AVAudioSessionPortOverrideNone: %@
Deactivating and setting audio interruption priority: %ld for provider %@
Error deactivating and setting audio interruption priority to %ld for provider %@: %@
Successfully deactivated and set audio interruption priority
Setting audio interruption priority: %ld for provider %@ category %@ mode %@
Error setting audio interruption priority to %ld for provider %@: %@
Successfully set audio interruption priority
Setting audio active: %@ options: %ld for provider %@ category %@ mode %@
Error setting audio active to %@ for provider %@: %@
Did not deactivate audio successfully, but error code was %d so assuming success
Successfully set audio active: %@ options: %ld
Requesting audio session be attributed to %@
Requesting audio session enable audio during Wombat
Setting audio category: %@ mode: %@ for provider %@
Error setting audio category to %@ and mode to %@ for provider %@: %@
Successfully set audio mode
.foregroundRunning
.backgroundRunning
.backgroundSuspended
CSDProcessObserver
@32@0:8@16@24
i16@0:8
processInfoByBundleIdentifier
applicationMonitor
processStateChanged
processStateChangedWithBundleID
currentProcessIdentifier
Ti,N,R
T@?,N,C
v16@?0@"NSDictionary"8
callservicesd.ProcessObserver
v28@?0@"NSString"8i16q20
CSDProcessObserverProtocol
@?<v@?iq>16@0:8
v24@0:8@?<v@?iq>16
@?<v@?@"NSString"iq>16@0:8
v24@0:8@?<v@?@"NSString"iq>16
@"NSArray"24@0:8@"NSString"16
@"NSDictionary"24@0:8@"NSString"16
v32@0:8@"NSString"16@?<v@?@"NSDictionary">24
_TtC13callservicesd28FaceTimeNotificationProvider
%@ does not handle response with identifier %@
Handling notification %@
Did not find expected pending chat uuid information
facetime-invite-first-unlock
FACETIME_%@_CALL_FIRST_UNLOCK_%@_BODY
FACETIME_CALL_FIRST_UNLOCK_TITLE_%@
callservicesd.FaceTimeNotificationProvider
CSDSharedConversationServerBag
d16@0:8
B24@0:8@16
fitnessPlusAppBundleID
fitnessPlusDaemonBundleID
activeParticipantPruningTimeout
TQ,N,R
sessionCleanupTimeout
greenTeaHandoffTimeout
AVCBlobRecoveryGracePeriod
AVCBlobRecoveryTimeout
rebroadcastTimeThreshold
activeParticipantRefreshDelay
automaticUpgradingEnabled
modernGFTEnabled
sharePlayVersionCheckEnabled
maxActiveParticipantFetchRetries
maxKickMemberRetries
linkPseudonymExpiry
inactiveLinkPseudonymExpiry
inactiveLinkCacheLimit
webNicknameLengthLimit
linkSyncRecoverFailureLimit
linkSyncRecoverTimeLimit
letMeInRequestNotificationTimeout
letMeInRequestRecoveryTimeout
activityIdentifierBundleIDMapping
T@"NSDictionary",N,R
idsFirewallCHExpiryTimeDays
idsFirewallBatchSize
handoffAudioDeviceTimeout
messageRetryMaxAttempts
messageRetryIntervalMillis
expanseConduitProxyEnabled
gftDowngradeToOneToOneAvailable
maxRemoteMirageParticipants
uPlusNDowngradeAvailable
neighborhoodActivityConduitTimeout
guestModeSupported
handoffUPlusOneLeaveTimeout
handoffUPlusOneLeaveDelay
activity-identifier-to-bundleIDs
Server bag does not have a value for %@, so returning the default one of %@ seconds.
Got %@ from server bag with a value of: %@
com.apple.tv.watch-together
com.apple.music.listenTogether
com.apple.notes.collaborate-activity
com.apple.Fitness
com.apple.fitcored.session
gftaas-pseudonyms-enabled-%@
guest-mode-supported
neighborhood-activity-conduit-timeout
qr-session-uPlusN-downgrade-available
max-remote-mirage-participants
qr-session-gft-downgrade-available
expanse-conduit-proxy-enabled
receive-message-retry-interval-millis
receive-message-retry-max-attempts
Couldn't find bundleID %@ in activityIdentifierMap %@
No bundleID specified, but fallback is specified
let-me-in-request-recovery-timeout
let-me-in-request-notification-timeout
link-sync-recover-time-limit
link-sync-recover-failure-limit
web-nickname-length-limit
inactive-link-cache-limit
inactive-link-pseudonym-expiry
link-pseudonym-expiry
qr-kick-member-retries
qr-active-participant-fetch-retries
shareplay-version-check-enabled
qr-session-supports-modern-gft
qr-session-ft-upgrade-enabled
qr-session-participant-refresh-delay
qr-session-rebroadcast-threshold
qr-session-avc-blob-recovery-timeout
qr-session-avc-blob-recovery-grace-period
greentea-handoff-timeout
qr-session-cleanup-timeout
qr-participant-prune-timeout
v32@0:8@16@24
routesDidChangeHandler
didPickRouteHandler
didDeselectAllRoutesHandler
supportsPrimaryCalling
hasRelayiCloudAccount
idsDeviceForIDSDeviceIdentifier
queue
nearbyDeviceMonitor
idsDeviceDestinationResolver
nearbyDeviceRoutes
activeRelayClientTransport
currentCallsSupportNearbyDevices
route: %@
Could not find route to pick for %@. All nearby device routes: %@
Updating activeRelayClientTransport to %@
Updating nearby device routes using devices: %@
Current calls do not support nearby devices (%@) or device doesn't support primary calling (%@)
Could not convert NearbyDevice to NearbyDeviceRoute: %@
filtering out device: %@
Error activating companion link client: %@
callservicesd.NearbyDeviceRouteProvider
callChanged
dirtyCallsArray
dirtyCallsSet
callservicesd.DirtyCallManager
Adding call %@ to dirty calls pool
Asked to dispatch drain the pool
Draining pool with dirty calls: %@
v16@?0@"CSDCall"8
CSDPendingMembershipTracker
messenger
storage
T@"<CSDPendingMembershipTrackerMessenger>",N,W,Vmessenger
T@"<CSDPendingMembershipTrackerDelegate>",N,W,Vdelegate
_TtC13callservicesd37MemoryPendingMembershipTrackerStorage
underlyingStorage
_TtC13callservicesdP33_29A092E378431E19BF8C7D5BE1CFB24A26SharedPendingMembershipBag
Removed group from pending membership tracker storage {underlyingStorage: %@}
Remoted info from pending membership tracker storage {underlyingStorage: %@}
Added info to pending membership tracker storage {underlyingStorage: %@}
No info matching local user action -- ignoring {uuid: %@, handle: %@}
Processing local user action for pending member {info: %@, action: %@, member: %@, conversation.groupUUID: %@}
Local user action for pending member attempted, disabled -- ignoring
No info matching remote user action -- ignoring {uuid: %@, handle: %@}
Processing remote user action for pending member {info: %@, action: %@, member: %@, from: %@, transactionUUID: %@, conversation.groupUUID: %@}
Client remote action does not match what we expect -- ignoring {sender: %@, from: %@, info.transactionUUID: %@, transactionUUID: %@}
Hosted remote action does not match what we expect -- ignoring {expectedDestinations: %@, from: %@, info.transactionUUID: %@, transactionUUID: %@}
Hosted remote action is from a kicked handle -- ignoring {kickedHandles: %@, from: %@, info.transactionUUID: %@, transactionUUID: %@}
Remote user action for pending member attempted, disabled -- ignoring
lmi-delegation-disabled
Issue storing delegated pending membership info -- aborting {error: %@}
Attempting to track delegated pending member, disabled -- ignoring
Neither a conversation nor a link with handles was specified -- ignoring
Issue storing pending membership info -- aborting {error: %@}
Track pending member, delegation disabled
Filtered in the following active handles from list of members eligible for link approval: %@
active handles: %@
members eligible for link approval: %@
Attempting to track pending member, disabled -- ignoring
No handed off info for device target for IDS proxying
New participant IDs: %s
New joinContext: %@
Lightweight primary: %s
Protobuf member: %@
Adding split-session target to member list of proxied update
Inspecting join context for target %@: %@
Asked to proxy IDS session group participant update
Ignoring IDS session group participant update coming from proxy target
_TtC13callservicesd15IDSMessageProxy
subject
target
buffer
proxiedMessageCount
buffering
B48@0:8@16@24@32@40
Sending RPC event: %s %s
IDS resource proxy: failed to read from resource URL. Error=%s
Unexpected error preserving %s as %s: %s
Existing IDS proxy timer found. Canceling it and making a new one.
Setting IDS proxy timeout of %ld seconds
Timing out IDS proxy
Cleaning up IDS proxy
Feature has been disabled by the server.
Creating IDS message proxy
IDS message proxy already exists
No handedoff info for device targeted for IDS proxying
Asked to proxy IDS resource at %s from %s, guid %{private,mask.hash}s
Ignoring message ID %{private,mask.hash}s, sender is our proxy target.
Asked to proxy IDS message from %s, guid %{private,mask.hash}s
_TtCC13callservicesd20CompanionLinkManager24AuthenticationController
clientsPendingAuthentication
v16@?0I8i12
v16@?0@"NSError"8
Started CompanionLink for device authentication
Failed to start CompanionLink for device authentication: %s
Successfully authenticated device %@
Error authenticating device: %s
v8@?0
Unable to prompt for password entry - no destination device!
PAIRING_CODE_ENTRY_MESSAGE
PAIRING_CODE_TITLE
PAIRING_CODE_ENTRY_HINT
PAIRING_CODE_ENTRY_ACCEPT_BUTTON
PAIRING_CODE_ENTRY_CANCEL_BUTTON
Failed to create CFUserNotification for password entry. Error: %s
User cancelled pairing entry
Received entered PIN %s
Prompting user for password for device %@
PAIRING_CODE_ENTRY_MESSAGE_FMT
CSDDuetDonater
v40@0:8@16@24Q32
maxDuration
unknownShortCallSignal
knownCallerSignal
junkCallSignal
linkCreatedSignal
silenceUnknownCallersEnabledObserver
callservicesd.DuetDonater
donate junkCallSignal event call=%@ error=%@
donate known caller mode event context=%@ error=%@
donate unknownShortCallSignal event call=%@ error=%@
donated call context data=%@ for call=%@
link created signal event error=%@
com.apple.telephonyUtilities.unknownShortCall
com.apple.telephonyUtilities.knownCallerMode
com.apple.telephonyUtilities.junkCallReceived
com.apple.facetime.call-link-created
com.apple.callservicesd.CompanionRpcErrorDomain
_TtC13callservicesd21CompanionRpcMessenger
<CompanionRpcDefinition: 
<CompanionEventDefinition: 
com.apple.callservicesd.idsProxyMessage
com.apple.callservicesd.policyInfoUpdated
com.apple.callservicesd.requestDisconnect
com.apple.callservicesd.joiningNotification
com.apple.callservicesd.contactInfoUpdate
com.apple.callservicesd.requestDeviceHandle
com.apple.callservicesd.activitySessionAvailable
com.apple.callservicesd.activitySessionNotAvailable
com.apple.callservicesd.cancelAddMember
com.apple.callservicesd.tvLaunched
com.apple.callservicesd.requestAddMember
MessageDictionary
Unknown; see NSUnderlyingErrorKey
Protobuf decoding failed
Protobuf encoding failed
Invalid message content
_TtC13callservicesd23EmptyDescriptorProvider
CSDCallController
callStateController
dataSources
dirtyCallManager
T@"CSDCallStateController",N,W,VcallStateController
callContainer
callservicesd.CallController
resolver
audioInterruptionProviderPool
ringtoneProvider
soundProvider
holdMusicProvider
discoveryModeProvider
deferredEndWorkItem
pendingExpeditedEndInterruptionUUIDs
endInterruptionDelay
mediaServicesWereResetObserver
audioSessionInterruptionObserver
audioController
callservicesd.CSDAudioController
callUUID: %@
Attempted to expedite deferred end interruption block prematurely, so pending the UUID %@
Expediting deferred end interruption work item
com.apple.telephonyutilities.callservicesd.audiocontroller
v16@?0@"NSNotification"8
notification: %@
Other interruption ended so re-interrupting if necessary
Resetting state
Setting audio mixing: false
Stopping audio session
resolutionChangedHandler closure invoked
oldDescriptor: %@ descriptor: %@ notifyUnconditionally: %@
Ending interruption immediately since there is no longer a resolved descriptor
Stopping sound playback
Ending discovery mode
An end interruption was deferred but we were asked to update to a new descriptor, so canceling the deferred end
Deferring end interruption by %.2f sec, since descriptor has an interruption deferred end descriptor and there is no pending expedited end interruption
Ending interruption immediately, since descriptor has an interruption deferred end descriptor and there is a pending expedite for UUID %@
No provider returned for descriptor %@
Decreasing priority of other AVAudioSession interruption provider %@ to Default
updating mic attribution to bundle %@
postAudioInterruptionPropertiesNotification %@ userInfo: %@
No existing proxy AVAudioSession interruption provider for ID %u, creating a new one
Created AVAudioSession interruption provider %@
Starting discovery mode
Asked to begin or update playback of hold music but new descriptor is equal to activeDescriptor so doing nothing
speechSynthesizerEventHandler invoked
Hold music provider speech synthesizer finished utterance, but hold music provider is no longer active, so not invoking playback continuation
Hold music provider speech synthesizer finished utterance, and hold music provider is still active, so invoking playback continuation
Sound playback completed and we had a deferred end descriptor, so expediting end interruption for call with UUID %@
Requested to end playback, stopping alert: %@
factory
sharedAudioSystemController
sharedCallCenter
localAVAudioSessionInterruptionProvider
proxyAVAudioSessionInterruptionProvidersByAudioSessionID
avAudioClientInterruptionProvider
CSDMomentsUsageReport
@52@0:8i16q20q28d36d44
availability
photoRequestSuccessCount
photoRequestFailureCount
medianRequestDuration
meanRequestDuration
Ti,N,R,Vavailability
Tq,N,R,VphotoRequestSuccessCount
Tq,N,R,VphotoRequestFailureCount
Td,N,R,VmedianRequestDuration
Td,N,R,VmeanRequestDuration
description
callservicesd.MomentsUsageReport
MomentsUsageReport (Availability: 
_TtC13callservicesd37RingtoneProviderAlertPlaybackObserver
didBeginPlaying
_TtC13callservicesd16RingtoneProvider
contactStore
currentAlert
endedPlayingSemaphore
alertGenerator
playbackObserverGenerator
Alert configuration has changed, but unable to create TLAlert using configuration %@
Requested to begin or update playback, but alert configuration is unchanged so doing nothing
Alert configuration has changed, playing alert %@
Playback finished with completion type %@ for alert %@
Playback failed for alert %@: %@
Started playing alert: %@
Setting shouldIgnoreRingerSwitch: %@
Setting externalToneFileURL: %@
Setting vibrationIdentifier: %@
Setting toneIdentifier: %@
From provider, using externalToneFileURL %@
From activity alert %@, using tone %@, vibration %@, bypass ringer %@
Contact retrieval failed for contact identifier %@: %@
v24@?0q8@"NSError"16
CSDConversationLinkManager
v56@0:8@16@24@32q40@?48
v44@0:8@16@24B32@?36
v28@0:8B16@?20
v32@0:8@16@?24
v36@0:8@16B24@?28
@32@0:8@16^@24
v48@0:8@16@24@32@?40
v20@0:8B16
service
renewPseudonymTask
dataSource
linkSyncManager
lmiRecoveryManager
generateKeyAgreement
T@"<CSDConversationLinkManagerDelegate>",N,&,Vdelegate
activatedConversationLinks
T@"NSSet",N,R
activatedLinks
T@"NSArray",N,R
ConversationLinkSync: Failed to persist links %@ {error: %@}
ConversationLinkSync: Finished persisting to data source {acquiredLinks: %@}
Failed to retrieve link with error %@ triggering link recovery for LMI
Failed to initialize key agreement from link's private key, or private key is absent, aborting.
Failed to decrypt let me in request, aborting.
Informed by IDS that pseudonym was updated.  Updating expiration date in database.
Updating expiration of conversation link with pseudonym %@ failed, unable to find link with error %@
Saving expiration date for pseudonym %@ failed with error %@
Informed by IDS that pseudonym was removed.  Purging link from data source.
Removal of invalid conversation link with pseudonym %@ failed, unable to find link with error %@
Removal of invalid conversation link with pseudonym %@ failed with error %@
GondolaPseudonymExpiryDuration
Could not create mutable descriptor from descriptor %@
Unknown handle type used for invited handle %@
Asking to renew pseudonym for %@
Failed to create mutable descriptor for descriptor %@
No IDS unique ID found, cannot schedule renew.
Could not find index of our own uniqueID, aborting...
The local device (%@) generated this link, sending renew request now.
v28@?0B8@"NSDate"12@"NSError"20
Updated expiration date for pseudonym %@ to %@
Cannot normalize value for originator handle %@
Unable to generate publicKey compact representation for private key, was compactRepresentable set to true when initializing the private key?
Provisioning pseudonym to generate link for groupUUID: %@, originatorHandle: %@, invitedHandles: %@, isActivated: %@, linkLifetimeScope: %@
v24@?0@"IDSPseudonym"8@"NSError"16
Failed to provision pseudonym with error from IDS, pseudonym was nil
Successfully provisioned pseudonym %@ and link descriptor %@
Failed to provision pseudonym with error from IDS: %@
v24@?0@"NSArray"8@"NSError"16
Failed to encrypt let me in response because either the type was wrong (%@), missing the link (%@), or approval was not specified (%@)
Failed to retrieve link with error %@
Failed to retrieve link
Failed to retrieve the data bytes from the let me in response, or failed to init a CSDMessagingEncryptedConversationMessage
Failed to encrypt let me in response, aborting.
Checking validity of pseudonym %@
Asked to check validity of link for pseudonym %@ but none was found.
Could not retrieve IDS pseudonym object for pseudonym string %@
Removing invalid conversation link with pseudonym %@
Removing conversation link for pseudonym %@
Invalidating pseudonym %@
Asked to invalidate link for pseudonym %@ but none was found.
Removing link with pseudonym %@ from storage without invalidating as it's not locally created
Asking IDS to revoke pseudonym %@ because it was locally generated for link being invalidated
Pseudonym invalidation failed with error %@
validateAllLinks: No active accounts on the service, skipping link validation for now
validateAllLinks: Checking for invalid links
No descriptors fetched -- validation over {error: %@}
validateAllLinks: Links must be newer than date %@
validateAllLinks: We have some invalid links to cleanup {count: %@, pseudonyms: %@}
validateAllLinks: Finished removing invalid links {count: %@, error: %@}
Asked for inactive link, returning: %@
Count of inactive links (%{public}@) reached the cache limit (%{public}@); not provisioning another.
Fetching conversation link descriptor count failed with error %@
%@ provisioned inactive link %@
More inactive links exist than needed -- not generating %@
Exception caught when trying to activate link %@
In activating link, setting invitedHandles to %@
In activating link, updating the groupUUID from %@ to %@
Asked to renew link for pseudonym %@ but none was found.
Link manager asked to generate link for groupUUID %@ with invitedHandles: %@
Refusing generation of a link descriptor for groupUUID %@ as one already exists %@ (error: %@)
Fetch attempt with error %@
Failed to add invited member handles with error %@
Cannot add invited member handles for pseudonym %@ because no link matching this pseudonym was found
Failed to decrypt conversation message because the encrypted message either was missing the public key (%@) or missing the encrypted bytes (%@)
Failed to decrypt let me in response because the requestor's key agreement has already been used to decrypt a response.
Failed to decrypt let me in response, aborting.
Failed to encrypt let me in request because either the type was wrong (%@) or missing the link (%@)
Failed to retrieve the data bytes from the let me in request, or failed to init a CSDMessagingEncryptedConversationMessage
Failed to generate keypair for let me in requestor, aborting.
Failed to encrypt let me in request, aborting.
Asked to set link name for pseudonym %@ but none was found.
Saving link name for pseudonym %@ failed with error %@
Updated link name for pseudonym %@
Link manager asked to generate TUConversationLinkDescriptor for received TUConversationLink %@ (not locally owned)
Received link %@ missing required field
%@ already existed and isUpdate: NO, ignoring
Failed to persist link %@
Link manager asked to generate link with invitedHandles: %@, originatorHandle: %@
com.apple.TelephonyUtilities.LetMeInRecoveryManager
ConversationLinkSyncManager
ConversationLinkSync: ConversationLinkSyncManager init
v16@?0@"<OS_xpc_object>"8
ConversationLinkCheckInActivity
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
callservicesd.ConversationLinkManagerErrorType
CSDTinCanIDSService
T@"CSDTinCanIDSService",N,R
com.apple.private.alloy.tincan.audio
CSDVoucherManagerImpl
vouchingEnablement
idsPushHandler
timeout
verificationCache
Verification forced to be false.
Token URI did not match handle.
Vouching is disabled.
Encrypted data was not returned.
Failed to create URI.
Operation timed out.
callservicesd.VoucherManagerImpl
Failed to verify %@ because the token prefixed URI did not come from the handle.
Failed to verify %@ because we couldn't create a URI.
Retrieved previously verified voucher: %{bool}d.
Requested to verify %@.
Failed to verify %@ with error %s
Successfully verified %@.
v24@?0@"NSData"8@"NSError"16
Failed to sign data (%ld) because encrypted data was missing from response (without an error).
Successfully signed data (%ld) into %@.
Failed to sign data (%ld) due to error %s.
com.apple.callservicesd.VoucherManager.completions
Initializing VoucherManager.
callservicesd.VoucherManagerError
moments-disabled
moments-request-timeout
callservicesd1
momentsDisabled
momentsRequestTimeout
Td,N,R
CSDRTCReporter
v36@0:8@16@24i32
relayDeviceRouteChangesByCallUUID
groupUUIDToConversationReportingSessions
conversationUUIDToConversationReport
groupUUIDToConversationInfo
callUUIDToCallReportingSessions
callUUIDToGFTCallReportingSessions
callUUIDtoConversationUUID
conversationGroupUUIDToCallUUID
callUUIDtoConversationGroupUUID
uuidToNWActivity
uuidToNWActivityConnecting
idsSessionUUIDToChatUUIDs
callInfosPendingScoreForCallUUIDs
userScoreEnabled
appleIDUtilities
callservicesd.RTCReporter
UserScore: ReportController: reached RTCReporter with current UUID: %@
UserScore: call UUID does not exist
UserScore: session was RTCReporting object session was nil
UserScore: session RTCCSDCallInfo object was nil
Reporting message with session %@ userInfo %@
Error while sending message with error: %@
com.apple.telephonyutilites.phone
bundleIdentifier
telephonyutilities
Failed to create reporting session with sessionInfo: %@, userInfo: %@
Created reporting session %@ with sessionInfo: %@, userInfo: %@
Dropping GroupActivities reports, could not find session for conversation uuid %@
received an IDS metrics report for IDS session %@ corresponding to call %@
recorded mapping for IDS session %@ corresponding to call %@
removing ReportingSession for %@
remapped call=%@ to callUUIDToCallReportingSessions=%@
multiway call reporting session %@
no reporting token for callUUID: %@
Creating multiway call %@ reporting session for conversation UUID %@
multiway call reporting session already exists for uuid %@
multiwayconference
Creating conversation reporting session for conversation uuid %@
conversation reporting session exists for uuid %@
callUUIDToCallReportingSessions=%@
callUUIDToGFTCallReportingSessions=%@
This is a FT1:1 call
This is a GFT call
Reporting originating UI type as =%@
com.apple.telephonyutilites.facetime
Creating 1:1 session for call with UUID: $@
Creating multiway session for call with UUID: %@
Creating call reporting session for FT1:1 call UUID %@
FT1:1 reporting session already exists for uuid %@
_TtC13callservicesd14RTCCSDCallInfo
callUUID
durationMs
relativeEnd
bucketedDuration
endReason
providerErrorCode
providerEndedReason
setupTimeMs
connectionTimeMs
relay
incoming
connected
currentlyGrouped
relayDeviceRouteChanges
filteredOutReason
verficationStatus
knownCallerStatus
isOwnNumber
isConversation
fromLink
returnedCall
isSiriSuggested
isKnownContact
isVerifiedAppleCare
isSignedIntoiCloud
junkConfidence
identificationCategory
isKnownCaller
userScore
brandedCall
brandedCallWithImage
callservicesd.RTCCSDCallInfo
Starting screen sharing activity for handle %@ with initial attributes %@
callservicesd.ScreenSharingActivityManager
Screen sharing manager ignoring CarPlay connection attempt since we don't have a joined session
SCREENSHARING_END_CARPLAY_TITLE
SCREENSHARING_END_CARPLAY_MESSAGE_%@
SCREENSHARING_END_CARPLAY_BUTTON
CSDScreenSharingActivityManager
subscriptionsById
sessionsById
remoteAttributesById
observer
featureFlags
carPlayObserver
T@"<CSDScreenSharingActivityManagerDelegate>",N,W,Vdelegate
latestRemoteAttributes
T@"<TUScreenShareAttributes>",N,R
Not ending ScreenSharing because user didn't choose to end
Ending ScreenSharing since user tapped the end button
Unable to send updated attributes %@ over screen sharing activity
Sending remote attributes %@ to %@ (screen sharing activity session id: %@)
Failed to send attributes %@ for screen sharing activity with error %@
End screen sharing activity session (id: %@)
Screen sharing activity manager notifying delegate of session %@ ending
Started observer for screen sharing activity sessions
Received new screen sharing activity session %@ with activity %@
Because we received new screen sharing activity session (id: %@), ending old session %@
Received initial remote attributes %@ from screen sharing activity (id: %@)
Received remote attributes message %@ from sender %@ for screen sharing activity (id: %@)
Screen sharing activity session (id: %@) reached unknown state %@
Screen sharing activity session (id: %@) joined
Screen sharing activity session (id: %@) invalidated with reason: %@
Screen sharing activity session (id: %@) waiting
Transitioned to non-joined from joined state for locally-initiated screen sharing activity, ending (id: %@)
conduit.IDSProxyMessage
conduit.ContactInfo
namePrefix
familyName
nickname
imageData
conduit.StartedSessionEvent
identifier
userAccountInfoData
memberAssociationPrimaryInfo
conduit.EndedSessionEvent
conduit.ContactUpdateEvent
identifierHash
contacts
conduit.JoinEvent
policyInfos
conduit.TVLaunchedEvent
conduit.CancelAddMemberEvent
conversationIdentifier
conduit.PolicyInfoUpdatedEvent
conduit.AddMemberRequest
memberToken
context
associationVoucherData
PointOfPlayback
ControlCenterWithActivity
ControlCenterWithoutActivity
conduit.AddMemberResponse
conduit.DeviceTokenRequest
conduit.DeviceTokenResponse
deviceToken
conduit.DisconnectRequest
conduit.DisconnectResponse
success
conduit.MemberAssociationPrimaryInfo
conversationGroupUuidString
handleData
supportedTypes
Expanse
IdentityClaiming
rawData
groupUpdate
resource
conduit.IDSProxyMessage.RawData
messageData
fromID
conduit.IDSProxyMessage.Resource
resourceData
metadata
conduit.IDSProxyMessage.GroupUpdate
isInitiator
groupUUID
participantID
participantDestinationID
updateType
updateSubtype
fromServer
serverDate
participantData
clientContextData
members
participantIDs
relaySessionID
conduit.IDSProxyMessage.ParticipantIDList
identifiers
canReceiveRelayedCalls
CSDMomentsControllerLocalCapabilities
enabled
regionBlocked
v12@?0I8
CSDMomentsNotification
@32@0:8Q16@24
requesterID
TQ,N,R,VstreamToken
callservicesd.MomentsNotification
_TtC13callservicesd31CallHistoryNotificationProvider
callInteractionManager
callHistoryDataSource
callProviderManager
pendingCallIdentifiers
supportedMediaTypes
supportedProviders
mostRecentCallDate
inCallServiceProcessObserver
supportsDisplayingFaceTimeAudioCalls
dialRecentCall
findConversationLink
[WARN] Could not find recent call with identifier: %@
%@ count: %d isAmbiguous: %d
allowOutgoingCallsWhenLocked
com.apple.mobilephone
ACTION_TITLE_CALL_BACK
ACTION_TITLE_SEND_MESSAGE
InCallService changed to non-running state (%@); updating posted notifications
Could not retrieve date of most recent call for notification provider %@
Notifiction provider %@ found missed calls %@
Adding notification request %@ for missed call %@
CHRecentCallIdentifier
CNContactIdentifier
Cound not retrieve interaction; using original notification content for call with identifier %@
Retrieved interaction; retrieving intent for call with identifier %@
Cound not retrieve start call intent from %
Retrieved start call intent; updating notification content for call with identifier %@
Could not update notification content; using original notification content for call with identifier %@
TUDialRequestURL
Recent call was a silenced unknown caller; displaying notification as an alert (%@)
MISSED_CALL_MESSAGE
Encountered undefined FaceTime media type %@
MISSED_FACETIME_VIDEO_CALL
MISSED_FACETIME_AUDIO_CALL
Most recent call date is now %@ for notification provider %@
Skipping update of call history notification; InCallService process state is foreground running. %@
Performed join conversation request: %@
Performed dial request: %@
Performing dial request: %@ ended in error: %@
Failed to open URL %@#. Error %@
notificationType: 
supportedMediaTypes: 
supportedProviders: 
%@ is handling %@
Updating call history badge count for notification provider %@
Call interactions changed
callservicesd/CallHistoryNotificationProvider.swift
Failed to derive public key from public key data, ignoring let me in
SoundDescriptor(
CSDFaceTimeSyncIDSService
T@"CSDFaceTimeSyncIDSService",N,R
com.apple.private.alloy.facetime.sync
_TtC13callservicesd17HoldMusicProvider
speechSynthesizerEventHandler
speechSynthesizer
audioPlayer
canceled speech synthesizer utterance
finished speech synthesizer utterance
No audio player could be created, so unable to begin playing hold music
Failed to start playing hold music
Successfully started playing hold music
Error retrieving file URL for hold music sound file
Error creating AVAudioPlayer with fileURL %@: %@
Created hold music audio player with URL %@
started speech synthesizer utterance
ANSWER_AND_HOLD_OUTGOING_MESSAGE
Speaking utterance %@
Ending hold music
Ending hold message
_TtC13callservicesd34CodableRemoteScreenShareAttributes
@24@0:8@16
sharerHandleValue
currentRemoteAttributes
_TtC13callservicesd22RTCCSDRelayDeviceRoute
type
failed
callservicesd.RTCCSDRelayDeviceRoute
CSDMomentsControllerSession
moments
remoteIDSDestinations
isRegistered
activeRequestsByTransactionID
T@"<CSDAVCMoments>",N,R,Vmoments
T@"NSDictionary",N,C
TB,N,VisRegistered
callservicesd.MomentsControllerSession
MomentsControllerSession: no streamtoken found
MomentsControllerSession: FaceTime 1:1
MomentsControllerSession: GroupFaceTime
remoteIDSDestinations=
activeRequestsByTransactionID=
CSDContactsCallFilter
appleCareHandles
carrierBundleController
%@ serviceProviderUUID: %@ carrierPhoneNumbers: %@
%@ carrierBundleNumbers=%@
%@ null call handle, should not reach here: call=%@
%@ Contact fetch failed with the following error %@
%@ Found contact (%@) or suggested contact (%@) or isVerifiedAppleCare (%@) or isCarrierBundlePhoneNumber (%@)
%@ Did not find contact or suggested contact; call filter will not allow call %@
%@ call filter will allow call %@
com.apple.calls.callservicesd
CompanionLinkManager
ParticipantUpdateSanitizer
NeighborhoodActivityCore
FT-LMI-ResponseKey
FT-LMI-RequestKey
CSDRouteController
v28@0:8@16B24
_routesByUniqueIdentifier
routeWasPickedHandler
timedOutPickingRouteHandler
routeProviders
pendingRouteContext
pickWhenAvailableRouteIdentifier
pendingPickedRouteTimeout
routesByUniqueIdentifier
callservicesd.RouteController
routes: %@
Stopping waiting for route identifier %@ to become available
Could not find route to pick with unique identifier %@. All routes: %@
Will pick route identifier %@ when it becomes available to pick
Clearing out pickWhenAvailable route identifier %@ because user is picking available route %@
Timed out waiting for route to become picked: %@
Updated routes from %@ to %@
pickWhenAvailable route identifier %@ did become available, picking now...
Route identifier %@ did not become available in %@ seconds
v16@?0@"TURoute"8
com.apple.telephonyutilities.callservicesd.pairedhostdeviceroutecontroller
com.apple.telephonyutilities.callservicesd.localroutecontroller
v16@?0@"RPCompanionLinkDevice"8
v20@?0@"RPCompanionLinkDevice"8I16
Device changed: %@
Lost nearby device: %@
Found nearby device: %@
Local device updated
callservicesd/TUCallContainerProtocol_CSD.swift
Fatal error
Call is not a CSDCall: 
CSDTinCanIDSProviderDelegateCapabilities
cellularDataAllowed
CSDIDSProviderDelegateCapabilities
wiFiAvailable
wiFiAllowed
cellularDataAvailable
cellularDataPreferred
CSDConversationInvitationResolver
B32@0:8@16@24
deviceInvitationPreferences
CSDConversationPersistenceController
lockStateObserver
activeConversationsListKey
Removing active conversation with cache key: %@
Adding active conversation with cache key: %@
Expected an active conversation for key %@ but found nothing. Cleaning up cached conversation.
Cannot create CSDMessagingConversation from data in cache for key: %@. Cleaning up cached conversation
Missing fields on conversation from cache %@. Cleaning up cached conversation.
Removing conversation with UUID: %@ from cache.
Error creating CSDMessagingConversation to cache from conversation with UUID: %@.
Caching conversation with UUID: %@
Missing fields on conversation from cache %@. Returning a nil conversation.
callservicesd.ConversationPersistenceController
AudioDescriptor(
interruptionDescriptor: 
interruptionDeferredEndDescriptor: 
ringtoneDescriptor: 
soundDescriptorAction: 
holdMusicDescriptor: 
discoveryModeDescriptor: 
_TtC13callservicesd29PairedHostDeviceRouteProvider
pairedHostDeviceRoutes
Could not find route to pick for %@. All paired host device routes: %@
callservicesd.PairedHostDeviceRouteProvider
RingtoneDescriptor(
contactIdentifier=
providerRingtoneSoundURL=
CSDIDSPendingChat
@36@0:8@16B24@28
isVideo
T@"NSUUID",N,R
TB,N,R,VisVideo
T@"TUHandle",N,R,Vhandle
CSDGroupIDSPendingChat
callservicesd.GroupIDSPendingChat
callservicesd.IDSPendingChat
_TtC13callservicesd22LetMeInRecoveryManager
pseudonymToFailedLetMeIn
pseudonymToInvalidationWorkItem
Acquired link, proceeding to decrypt cached LMI
LMI decryption failed so caching and triggering link recovery %@
Invalidating LMI link recovery for cached LMI: %@
CSDParticipantUpdateSanitizerImpl
completionQueue
voucherManager
One member must be non-lightweight.
Must be associated to a different member.
One member must claim to be primary.
Associations do not have corresponding handles.
Unable to find associated member with corresponding voucher
callservicesd.ParticipantUpdateSanitizerImpl
Unable to identify context from participant update %@.
Dropping association voucher for member %s that does not have an association claim as its payload.
Dropping association voucher for member %s that makes claim for different conversation.
Dropping association voucher for member %s because the voucher is for a different handle.
Starting sanitization of %@.
Failed to validate verified voucher on member %s with error %s.
Verified voucher on member %s.
Could not finish sanitization of %@. Self was deallocated
Finished sanitization of %@.
Could not create TUConversationMember for member: %@
Could not create TUConversationMember for other associated member: %@
Failed to validate association for member: %@ with error: %s
IDSGroupSessionParticipantUpdateClientContextDataKey
com.apple.callservicesd.ParticipantUpdateSanitizer.completions
Initializing ParticipantUpdateSanitizer.
CSDParticipantUpdateSanitizer
v32@0:8@"IDSGroupSessionParticipantUpdate"16@?<v@?@"IDSGroupSessionParticipantUpdate">24
CSDConversationLinkGeneratorDescriptor
v24@0:8q16
@32@0:8@16q24
version
Tq,N,Vversion
hash
Tq,N,R
callservicesd.GeneratorDescriptor
_TtC13callservicesd13AudioResolver
ttyProviderObserver
localAudioSystemProvider
deviceSupportsRingtone
lastPlayedSoundDate
lastPlayedSoundType
soundDescriptorActionResolver
resolvedDescriptor
resolutionChangedHandler
Unable to create interruption descriptor for call %@
Not creating interruption for call: %@, deviceSupportsRingtone: %@ shouldSuppressRingtone: %@  holdMusicDescriptor: %@
Not playing sound %@ becaus the same sound was played less than 2s ago
Other session requested no ringtone interruption, ending currentDescriptor(context:) method for call %@
CSDFaceTimeIDSProviderDelegateCapabilities
momentsAvailable
items
timeProvider
_TtC13callservicesd23LocalAudioRouteProvider
audioRoutes
callAudioCategory
callAudioMode
lastUserPickedRoute
callAudioInterruptionState
hasActiveAudioSession
Could not find route to pick for %@. All audio routes: %@
Failed to pick audio route %@: %@
Call does not have audio interruption so setting prematurely selected audio route to %@
callservicesd.LocalAudioRouteProvider
Updating audio information using call: %@; callHasAudioInterruption: %@
Audio category change from %@ -> %@ mode %@ -> %@ does not require route re-pick
Re-picking last user picked route: %@
Audio category change from %@ -> %@ mode %@ -> %@ currentlyPickedRoute: %@ shouldPickLastUserPickedRoute: %@
Updated audio routes: %@
Clearing last user picked route
Unable to create audio route from route dictionary: %@
Picking prematurely selected audio route now that audio interruption has begun: %@
nearbyDeviceProvider
devicesChangedHandler
devicesByEffectiveIdentifier
callservicesd.NearbyDeviceMonitor
_TtC13callservicesd27ConversationLinkSyncManager
interactor
recoverRateLimiter
recoverResponseRateLimiter
messageQueue
descriptorManager
stateHandle
ConversationLinkSync: devices changed making sure we send a check in to them as well {deviceDestinations: %@}
currentRevisions
localGeneratorIdentifier
localLatestGeneratedVersion
generatorDescriptorVersionSums
countByGenerator
originatorRevision
originatorIdentifier
ConversationLinkSync: No pseudonyms found in recover -- dropping {recover: %@, from: %@}
ConversationLinkSync: Processing recover, asked to check for links matching pseudonyms {pseudonyms: %@, from: %@}
ConversationLinkSync: Excluding pseudonym from recover response as it is at rate limit {pseudonym: %@}
ConversationLinkSync: No pseudonyms remain after rate limiting, not sending recover response {pseudonyms: %@}
ConversationLinkSync: Did not find link descriptors for pseudonyms -- nothing to send in response {pseudonyms: %@}
ConversationLinkSync: Found link descriptors for pseudonyms specified in recover -- sending update {linkDescriptors: %@, pseudonyms: %@}
ConversationLinkSync: Excluding pseudonym from recover message as it is at rate limit {pseudonym: %@}
ConversationLinkSync: No pseudonyms remain after rate limiting, not sending message {pseudonyms: %@}
ConversationLinkSync: Sending recover {to: %@, pseudonyms: %@}
ConversationLinkSync: Failed sending recover! {to: %@, error: %@}
ConversationLinkSync: Sent recover {to: %@, idsIdentifier: %@}
ConversationLinkSync: Processing update, unable to convert descriptors -- dropping {update: %@}
ConversationLinkSync: Processing update, got links {links: %@}
ConversationLinkSync: Sending link update {to: %@, linksToSend: %@}
ConversationLinkSync: Failed sending update! {to: %@, error: %@}
ConversationLinkSync: Sent link update {to: %@, idsIdentifier: %@}
GondolaLastAccountsChangedState
ConversationLinkSync: checkAccountStateForCheckIn called {activeAccounts: %@, lastAccountsChangedState: %@}
ConversationLinkSync: missing devices, waiting until devices appear {activeAccounts: %@, interactor.deviceDestinations.isEmpty: %@}
ConversationLinkSync: Processing check in, unable to convert descriptors -- dropping {from: %@}
ConversationLinkSync: Processing check in, calculated differences {from: %@, shouldCheckIn: %@, needToSendUpdate: %@, shouldCheckAllGenerators: %@}
ConversationLinkSync: Check in differences %@
ConversationLinkSync: Processing check in, no differences -- done {from: %@, generatorDescriptors: %@}
ConversationLinkSync: Performing check in {dest: %@, message: %@}
ConversationLinkSync: Failed sending check in! {dest: %@, error: %@}
ConversationLinkSync: Sent check in {to: %@, idsIdentifier: %@}
ConversationLinkSync: scheduleCheckIn called {scheduleMode: %@, deviceDestinations: %@, type: %@}
ConversationLinkSync: scheduleCheckIn validation check failed, fixing local version {localVersion: %@, localLatest.version: %@}
ConversationLinkSync: scheduleRecover called {deviceDestinations: %@, pseudonyms: %@}
ConversationLinkSync: scheduleCheckInIfNeeded called
ConversationLinkSync: State dump
ConversationLinkSync: Failed to create state dump {error: %@}
ConversationLinkSync: check in activity fired
ConversationLinkSync: check in activity scheduled {criteria: %@}
GondolaCheckInIntervalOverride
ConversationLinkSync: randomCheckInInterval: calculated {interval: %@, scheduleMode: %@}
ConversationLinkSync: randomCheckInInterval: defaults overriding {overrideInterval: %@}
<CheckInDiff; remoteMissingIdentifiers = 
; localMissingIdentifiers = 
; localDescriptorsBehindRemote = 
; remoteDescriptorsBehindLocal = 
; differingVersionSumIdentifiers = 
CSDFaceTimeInviteDemuxer
idsQueryController
$__lazy_storage_$_supportsConversationOneToOneModeEnabled
$__lazy_storage_$_pushTokenForSelf
Current IDStatus results: %@ service: %@
Querying currentRemoteDevices %@ service: %@
Current remote device results: %@ for destinationIDs: %@, service: %@
Required IDStatus results: %@ service: %@
com.apple.telephonyutilities.callservicesd.faceTimeInviteDemuxer
AudioInterruptionDescriptor(
activationContext=
wantsExpeditedAudioSession=
mediaPlaybackOnExternalDevice=
CSDSecureImageTranscoder
v32@0:8@"NSData"16@?<v@?@"NSData"@"NSError">24
blastDoor
Attempting to generate preview of image after writing to URL: %s
SharePlayActivityImages
Error creating temporary images directory: %s
CSDUserNotificationController
callFilterController
phoneNotificationCenter
providersByIdentifier
providers
clientManager
v40@0:8q16@24@?32
Received response %@
Could not find notification provider for action
callservicesd.UserNotificationController
com.apple.telephonyutilities.callservicesd.usernotificationcontroller
Creating XPC endpoint for User notifications
Loaded user notification controller
com.apple.telephonyutilities.callservicesdaemon.usernotificationprovider
Started broadcasting User notifications mach service with %@
Setting badge string to %@ on notificationCenter %@ for notification type %@
APPLICATION_BADGE_UNKNOWN
APPLICATION_BADGE_UNKNOWN_COUNT
Successfully set badge string to %@
Error setting badge string to %@
Replacing notification with identifier %@ from %@
Successfully replaced notification with identifier: %@
Error while replacing notification: %@
Removing notification with identifier %@ from %@
Not posting notification since it is restricted by the call filter
Adding notification request %@ to %@
Successfully posted notification with identifier: %@
Error while posting notification: %@
com.apple.calls.conversationkit.multiwayviewcontroller.icsonscreenchangednotification.isonscreen
com.apple.calls.conversationkit.multiwayviewcontroller.icsonscreenchangednotification.isoffscreen
_TtC13callservicesd21DiscoveryModeProvider
_TtC13callservicesd29VoicemailNotificationProvider
telephonyClient
voicemailDataSource
postedVoicemailIdentifiers
pendingVoicemailIdentifiers
mostRecentVoicemailDate
mostRecentNonVisualVoicemailDate
localizeVoicemailName
callbackVoicemail
unsubscribedVoicemailInfoForUUID
Could not find voicemail with identifier: %lu
No current unsubscribed voicemail info, attempting to update...
Subscribed to enhanced voicemail; unread message count is %lu
v36@?0B8@"NSNumber"12@"NSString"20@"NSError"28
Got voicemail info for uuid %@ to available: %@, count: %@
Updating voicemail info for uuid %@ to available: %@, count: %@
ACTION_TITLE_VOICEMAIL_MESSAGE_DELETE
Subscription status changed: %@
Removing all voicemail notifications. Current notification identifiers: %@
Online status changed: %@
Voicemails changed: %@
Could not retrieve date of most recent voicemail for notification provider %@
Voicemail is not subscribed
Voicemail store changed, and we found the following voicemail messages we were waiting for: %@
Retrieving messages delivered after %@
Received %lu new voicemails since date %@
Voicemail store changed, but we did not find any voicemail messages we were waiting for. Waiting for: %@
Asked to post %lu voicemails
Adding notification with count: %lu
NEW_VOICEMAIL_FORMAT
nonvisualvoicemail
VMVoicemailIdentifier
voicemailDuration
[WARN] Could not generate dial request URL for voicemail: %@
Cound not retrieve voicemail message; using original notification content for voicemail message with identifier %@
Cound not retrieve intent; using original notification content for voicemail message with identifier %@
Retrieved intent; updating notification content for voicemail message with identifier %@
Could not update notification content; using original notification content for voicemail message with identifier %@
Attempt to create a notification attachment for file at %@ failed with error %@
Most recent voicemail date is now %@ for notification provider %@
Voicemail is not MWI - Ignoring voicemailInfoAvailableNotification
Handling voicemailInfoAvailableNotification voicemailInfo: %@, context: %@
callservicesd/VoicemailNotificationProvider.swift
B16@?0@"VMVoicemail"8
Retrieving voicemail messages failed with error %@
Retrieving inbox voicemail messages failed with error %@
CSDCallHistoryCallFilter
usTollFreePrefixes
callHistoryManager
%@ Fetching call history calls matching predicate %@
%@ Could not create call history handle from call %@
%@ Found call history call; call filter will allow call %@
%@ Did not find call history call; call filter will not allow call %@
CSDOwnNumberCallFilter
idsCTAdapter
%@ Call is not the same number as subscriber; OwnNumberCallFilter will allow call %@
%@ Call is the same number as subscriber; OwnNumberCallFilter will not allow call %@
%@ call is verified; will allow call %@
%@ isSilenceUnknownCallersEnabled: %d
DiscoveryModeDescriptor()
_TtC13callservicesd13SoundProvider
player
Asked to begin or update playback of sound with descriptor %@ but no TUCallSoundPlayerDescriptor could be determined, so not playing
Attempt to play call sound player descriptor %@ returned false
Asked to begin or update playback of sound but new descriptor is equal to activeDescriptor so doing nothing
AudioInterruptionDeferredEndDescriptor(
_TtC13callservicesd33ConversationLinkDescriptorManager
$__lazy_storage_$_dataSource
ConversationLinkSync: Failed to read int in ConversationLinkDescriptorManager %@ %@
ConversationLinkSync: Failed to read string in ConversationLinkDescriptorManager %@ %@
ConversationLinkSync: Failed to store string on ConversationLinkDescriptorManager %@ %@
ConversationLinkSync: Failed to store int on ConversationLinkDescriptorManager %@ %@
GondolaLatestVersion
GondolaSyncedVersion
GondolaGeneratedIdentifier
ConversationLinkSync: localGeneratorIdentifier: No local generated identifier -- creating it now {locallyGeneratedIdentifier: %@, success: %@}
ConversationLinkSync: Migrating local identifier
_TtC13callservicesd22RTCCSDConversationInfo
uuid
relativeStart
conversationBaseTime
conversationProvider
hasLink
isPending
duration
uPlusOneModeAtStart
uPlusOneModeAtEnd
isHandoffContinuation
originatingUIType
maximumMemberCount
initialMemberCount
finalMemberCount
maxNumberOfParticipants
AVCBlobRecoveryAttempts
AVCBlobRecoveryTimeouts
transitionAttempts
numberLMIRequests
numberLMIApprovals
numberLMIDismissals
messageRetryAttempts
messageRetryFailures
messageRetrySuccesses
avcBlobRecoveryMessageRetryAttempts
avcBlobRecoveryMessageRetryFailures
avcBlobRecoveryMessageRetrySuccesses
hasHadActiveParticipants
cumulativeTimeAlone
timeAloneAtEnd
lastTimeNotAlone
callservicesd.RTCCSDConversationInfo
_TtC13callservicesd20CompanionLinkManager
client
authenticationController
activated
lockdownModeEnabled
deviceUpdatedPublisher
deviceFoundPublisher
deviceLostPublisher
deviceChangedPublisher
messagePublishers
eventPublishers
_TtCC13callservicesd20CompanionLinkManager14DeviceProvider
manager
Sending event %s to %s : %s, options: %s
Event '%s' successfully delivered
Error sending %s: %s
v24@?0@"NSDictionary"8@"NSDictionary"16
Event '%{public}s' publisher cancelled.
Event '%{public}s' publisher finished.
Event '%{public}s' publisher failed: %{public}s
Received event '%{public}s', params: %s, %s
v32@?0@"NSDictionary"8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSDictionary"@"NSError">24
Message '%{public}s' publisher cancelled.
Message '%{public}s' publisher finished.
Message '%{public}s' publisher failed: %{public}s
Received message '%{public}s', params: %s, %s
callservicesd/Combine_OneShotSink.swift
Already subscribed
Error waiting for authenticated device to reappear: %s
Found authenticated device. Device: %@
Failed to activate CompanionLink because lockdown mode is enabled
Activated CompanionLink
Failed to activate CompanionLink
Sending request %s to %s : %s, options: %s
v32@?0@"NSDictionary"8@"NSDictionary"16@"NSError"24
Received response for request %s from %s : %s, options: %s, error: %s
Authentication completed -- waiting for device to reappear
Device %@ is already authenticated
com.apple.TelephonyUtilities.CompanionLinkManager
Failed to create state dump: %s
Error encoding user account info: %s
iCloudAccountToken
iTunesAccountToken
homeUserIdentifierTokens
_TtC13callservicesd13CSDAVCMoments
@48@0:8q16@24@32@40
q16@0:8
I16@0:8
@32@0:8C16C20@24
T@"<CSDAVCMomentsDelegate>",N,W,Vdelegate
streamToken
capabilities
TI,N,R
activeRequestCount
pendingRequestCount
callservicesd.CSDAVCMoments
CSDAnalyticsReporter
v28@0:8@16I24
v40@0:8@16@24q32
com.apple.Callservicesd.callEndStatus
@"NSDictionary"8@?0
Logging end call to core analytics: %s
call_info_source
call_directory_provider_bundle_id
is_currently_grouped
provider_ended_reason
telephony_transport_type
face_time_transport_type
connection_time_ms
Connection time is negative, %s is likely processing a callkit action incorrectly
kCallSubTypeWifi
kCallSubTypeVoLTE
kCallSubTypeTelephony
Couldn't log server termination event because of no bundleIdentifier on activitySession
termination_reason
com.apple.callservicesd.shareplay-session-server-terminated
Logged session server termination event for session: %s reason: %s
manualLaunchAttempted
Logged manual launch attempt event for session: %s
com.apple.shareplay.manualActivityInteractions
needsManualLaunch
Logged manual launch needed event for session: %s
com.apple.callservicesd.shareplay.push-to-tv
Send SharePlay push to TV event
CSDKeychainPasswordItem
@24@0:8^@16
B32@0:8@16^@24
B24@0:8^@16
accessGroup
account
callservicesd.KeychainPasswordItem
Successfully deleted item from keychain
No item found. Added new item to keychain
Saved item to keychain
CSDHandoffAudioController
routeIdentifierChangedNotification
continueHandoffAudioRouteNotification
callCenterQueue
serverBag
routeController
pickedRouteUniqueIdentifier
HandoffAudioController: Could not parse audio route identifier from continue handoff notification: %@
HandoffAudioController: Continuing handoff of audio route with identifier %@
HandoffAudioController: Could not take audio route with identifier %@ active because either it could not be found as a valid route
HandoffAudioController: Picked route changed to: %@
HandoffAudioController: Conversation become joined, current route is %@
HandoffAudioController: Not triggering route change notification for handoff in response to conversation becoming joined, as a non-bluetooth route is in use: %@
com.apple.telephonyutilities.callservicesd.handoffaudiocontroller
CSDHandoffAudioControllerContinueHandoffAudioRouteNotification
CSDHandoffAudioControllerRouteIdentifierChangedNotification
CSDMomentsRequest
avcRequest
session
T@"<CSDAVCMomentsRequest>",N,R,VavcRequest
T@"CSDMomentsControllerSession",N,R,Vsession
callservicesd.MomentsRequest
Failed to find matching device for %@
Failed to find matching conversation for %s
Device %@ is not authenticated - starting auth flow
TV device %@ is not capable of avLess handoff
Failed to find handed off conversation info for device: %@
Failed to disconnect device: %@ because its associated conversation (%s) could not be found.
No effectiveID stored in handoff state. Kicking TV.
Disconnecting device with handle: %@
Disconnecting. Handed off conversations: %s
callservicesd.NeighborhoodActivityConduit
CSDNeighborhoodActivityConduit
cancellables
callCenter
idsService
delegatesToQueues
networkSupport
handedOffConversations
joinApprovalState
localTVDevices
joinCompletionSubjects
pendingJoinConversationIDs
activeConversationUpdateSubject
activeConversationUpdateCancellablesByDeviceID
messageProxy
idsProxyCleanupTimer
conversationIDsWithActivities
contactForwardingCanceler
T@"OS_dispatch_queue",N,R,Vqueue
nearbyTVDevices
activeSplitSessionTVDevice
T@"TUNearbyDeviceHandle",N,R
Ignoring avMode update since avMode did not change to or from AVLess
AVMode changed for conversation %s from %s to %s. Updating activeConversationUpdateSubject.
tv has left conversation %{private,mask.hash}s
tv is in this conversation
Pushing contacts
Notifying successful join
Join completions: %s
tv has joined conversation %{private,mask.hash}s
activeParticipants = %s
Waiting for tv on this conversation
Pending join IDs: %s
Remote participants changed for %{private,mask.hash}s: %s, lightweight participants: %s
Pushing %ld contacts to split-session device
Kicking split-session device %s
Left conversation: %s
Conversation state change for %{private,mask.hash}s: %s -> %s)
Joined conversation: %{private,mask.hash}s
Disconnecting idHash %s; info = %s
Sending RPC: %s %s
Invalid message content: %s
RPC response: %s %s
<Conversation Gone>
Participant %s left conversation %s on device %@
Failed to authenticate device: %@, error: %s
Unable to generate member association primary info for conversation %s.
Current activity doesn't support handoff, rejecting push attempt
HANDOFF_UNSUPPORTED_TITLE
Handoff unsupported alert title
HANDOFF_UNSUPPORTED_MESSAGE_PUSH
Handoff unsupported alert message (push side)
Presenting alert: %s / %s
Insufficient info to revoke pending invitation for: %@
Handed off conversations: %s
Removed handed off conversation with effective ID: %s
Revoking invitation for TV %@, error: %s
User Account Info - iCloudAltDSID: %{bool}d, iTunesAltDSID: %{bool}d
No effectiveIdentifier in handle %@
Adding remote participant with device token: %{private,mask.hash}s and handle: %@ isLightweightMember: %{bool}d
Conversation has no local member to use as lightweight primary
Assigning lightweight primary %{private,mask.hash}@, participant ID %{private,mask.hash}llu
Handle strings: %s
Fetching contacts for handles: %s
Removing delegate %s
New delegate %s
com.apple.callservicesd.NearbyActivityRegistrar
Initialized NeighborhoodActivityConduit
activeConversationUpdate
CSD Conduit State
ConversationUpdateEvent.sessionUnavailable(
ConversationUpdateEvent.sessionAvailable(
TV device appeared: %s / %s / %{private}s
New device appeared. ID: %{private}s. Now %ld devices total
New device appeared. ID: %{private}s MRID: %{private}s Model: %s Name: %{private}s
Error in event handler for '%{public}s': %s
No request options to resolve sending device handle
Could not resolve senderID or verified identity for device handle for request options: %s
Resolved verified identity %s to sending device %@
Resolved senderID %s to sending device %@
Resolved IDS ID %s to sending device %@
Incoming RPC event: %s %s
Received message from unauthenticated client, ignoring
Error in message handler for '%{public}s': %s
Incoming RPC: %s %s
Sending RPC response: %s %s
Activity %s from %s doesn't support handoff, rejecting.
Checking eligibility of activity: %@
TV is hijacking session. Skipping check of existing activity.
Requesting split-session approval from %s
Approval result: %{bool}d
Error requesting split-session approval: %s
Device disappeared. ID: %{private}s MRID: %{private}s Model: %s Name: %{private}s
?__C
RPDeviceChangeFlags
TUCallSoundPlayerSoundType
CHRecentCallMediaType
TUMomentsAvailability
Triggers
NCSDCallCenterObserverTriggers
os_unfair_lock_s
CTError
TUCallVerificationStatus
TUCallFilteredOutReason
TUConversationState
TUConversationAVMode
TUNearbyConversationPullContext
TUNearbyDeviceHandleType
CFString
NCFStringRef
__C_Synthesized
TUNeighborhoodActivityConduitError
VMMailboxType
HandleType
NCXHandleType
TUCallStatus
CSDAudioInterruptionProviderType
os_state_data_s
TUConversationLinkLifetimeScope
Name
NNSNotificationName
CHHandleType
CHRecentCallTTYType
TUHandleType
IDSGroupSessionServerErrorCode
TUCallFaceTimeTransportType
MRPlaybackState
TUCallSoundRegion
TURouteDeviceType
AXSDefaultRouteForCall
audit_token_t
CSDAudioInterruptionOperationMode
Mode
NAVAudioSessionMode
Category
NAVAudioSessionCategory
Foundation
CallKit
CoreFoundation
Code
NTUNeighborhoodActivityConduitError
os_state_data_decoder_s
__Unnamed_union___Anonymous_field1
os_state_data_type_t
RPCompanionLinkClient
CompanionLinkMessenger
CompanionLink
CompanionLinkAuthenticationError
CompanionLinkAuthenticationResult
callservicesd
AudioInterruptionProvider
AnyAudioInterruptionProvider
AudioInterruptionPriorityProvider
AudioInterruptionProviderSetActiveOptions
AudioInterruptionProviderIdentifier
AudioInterruptionPriority
DescriptorResolver
DescriptorType
TinCanIDSProviderDelegate
UserIntentManager
NSUserDefaults
ConversationPersistenceStorage
ConversationLinkSyncDataSource
ConversationLinkDataSourceTUWrapper
EmergencyCallbackCapabilities
OneShotCancellationBox
State
callservicesd
CarPlayManager
PowerAssertionManager
ConversationLinkSyncMessageQueue
Action
MessageType
ScheduleMode
EnqueueMode
AudioInterruptionProviderFactoryProtocol
AVAudioSessionInterruptionProviderType AVAudioClientInterruptionProviderType
AudioInterruptionProviderFactory
NearbyDeviceRoute
LetMeInRequestorKeyAgreement
ChangeTrackingDescriptorResolver
UpdateContext
ProviderDisplayMonitor
Provider
HoldMusicDescriptor
CallCenterObserver
callservicesd
GroupFaceTimeNotificationProvider
SoundDescriptorActionResolver
Sound
FaceTimeLivePhotosIDSService
UNNotificationResponse
callservicesd
UserNotificationProvider
UserNotificationResponse
NotificationType
AVAudioClientInterruptionProvider
FaceTimeMultiwayIDSService
ConversationLinkSyncIDSInteractorDelegate
ConversationLinkSyncIDSInteractor
IDSInteractorError
AVAudioSessionInterruptionProvider
callservicesd
ProcessState
ProcessObserver
callservicesd
FaceTimeNotificationProvider
NSNumberConvertible
SharedConversationServerBag
CSDIDSService
IDSDeviceDestinationResolver
NearbyDeviceRouteProvider
DirtyCallManager
PendingMembershipTrackerServerBag
PendingMembershipTrackerStorage
PendingMembershipTracker
MemoryPendingMembershipTrackerStorage
SharedPendingMembershipBag
PendingMembershipInfo
UserAction
Errors
Mode
callservicesd
IDSMessageProxy
BufferedMessage
AuthenticationController
DuetDonater
allowContactsOnly
CompanionRpcMessenger
ReplyableInfo
CompanionRpcError
MessageInfo
CompanionRpcDefinition
CompanionEventDefinition
DescriptorProvider
DescriptorType
EmptyDescriptorProvider
EmptyDescriptor
CallController
TUAudioSystemController
LocalAudioSystemProvider
AudioActivationContext
SoundDescriptorAction
AudioController
CSDAudioController
AudioInterruptionProviderPool
MomentsUsageReport
TLAlert
callservicesd
RingtoneProviderAlertPlaybackObserver
RingtoneProviderAlert
RingtoneProviderProtocol
RingtoneProvider
RouteProvider
DeselectableRouteProvider
PairedHostDeviceRouteTrackingRouteProvider
^@callservicesd
ConversationLinkManager
ConversationLinkManagerErrorType
TinCanIDSService
VoucherManagerImpl
VerificationQuery
VoucherManagerError
RTCReporter
CallInfoPendingScore
RTCReporterInfo
RTCCSDCallInfo
CodingKeys
ScreenSharingActivityManagerProviding
ScreenSharingActivityManager
ScreenSharingActivityManagerErrors
Resource
GroupUpdate
RawData
OneOf_Message
NCProtoIDSProxyMessage
NCProtoContactInfo
NCProtoStartedSessionEvent
NCProtoEndedSessionEvent
NCProtoContactUpdateEvent
NCProtoJoinEvent
NCProtoTVLaunchedEvent
NCProtoCancelAddMemberEvent
NCProtoPolicyInfoUpdatedEvent
NCProtoAddMemberRequest
NearbyConversationPullContext
NCProtoAddMemberResponse
NCProtoDeviceTokenRequest
NCProtoDeviceTokenResponse
NCProtoDisconnectRequest
NCProtoDisconnectResponse
NCProtoMemberAssociationPrimaryInfo
MemberAssociationType
ParticipantIDList
MomentsControllerLocalCapabilities
UserIntentValidator
BackgroundBluetoothAccessValidator
DonatedIntentValidator
ApplicationStateValidator
PrivateAPIValidator
MediaRemoteStateValidator
UserIntentValidationResult
MomentsNotification
MbP?
CHManager
CHRecentCall
callservicesd
CallHistoryDataSource
RecentCall
CallHistoryNotificationProvider
ConversationLinkKeyAgreement
SoundDescriptor
FaceTimeSyncIDSService
callservicesd
HoldMusicProviderProtocol
HoldMusicProvider
SpeechSynthesizerEvent
CodableRemoteScreenShareAttributes
ScreenSharingActivity
CodingKeys
RTCCSDRelayDeviceRoute
RTCCSDAudioRouteType
CodingKeys
MomentsControllerSession
ContactsCallFilter
ConversationLinkCryptoErrorType
RouteController
PendingRouteContext
TinCanIDSProviderDelegateCapabilities
IDSProviderDelegateCapabilities
ConversationInvitationResolver
InvitationPreferencesPriority
ConversationPersistenceController
AudioDescriptor
PairedHostDeviceRouteProvider
RingtoneDescriptor
IDSPendingChat
GroupIDSPendingChat
LetMeInRecoveryManagerDelegate
LetMeInRecoveryManager
CachedLetMeInRequest
ParticipantUpdateSanitizerImpl
ParticipantUpdateSanitizerError
DescriptorTrackingProvider
GeneratorDescriptor
AudioResolverProtocol
AudioResolver
Context
FaceTimeIDSProviderDelegateCapabilities
Cache
CacheItem
callservicesd
LocalAudioRouteProvider
CallAudioInterruptionState
RPCompanionLinkClient
RPCompanionLinkDevice
NearbyDevice
NearbyDeviceProvider
DeviceType
NearbyDeviceMonitor
ConversationLinkSyncManagerDelegate
ConversationLinkSyncManager
CheckInType
CheckInDiff
FaceTimeInviteDemuxer
CSDCall
AudioInterruptionActivationStateObserver
AudioInterruptionDescriptor
ProviderType
SecureImageTranscoder
BlastDoorInterface
SimulatorBlastDoorInterface
BlastDoorError
UNUserNotificationCenter
callservicesd
UserNotificationCenter
UserNotificationController
DiscoveryModeProviderProtocol
DiscoveryModeProvider
VMVoicemail
VMVoicemailManager
callservicesd
VoicemailDataSource
Voicemail
VoicemailNotificationProvider
CallHistoryCallFilter
OwnNumberCallFilter
DiscoveryModeDescriptor
SoundProviderProtocol
SoundProvider
AudioInterruptionDeferredEndDescriptor
ConversationLinkDescriptorManager
RTCCSDConversationInfo
CodingKeys
CompanionLinkManager
DeviceProvider
CompanionLinkManagerErrors
UserAccountInfo
CodingKeys
callservicesd
CSDAVCMoments
AnalyticsReporter
KeychainPasswordItem
KeychainError
ASCIIStringConvertible
callservicesd
HandoffAudioController
MomentsRequest
NeighborhoodActivityConduit
ApprovalState
ConversationUpdateEvent
HandedOffConversationInfo
InitParams
enabled: %d
accelerometer orientation changed to %ld
Beginning transaction for %@. Transaction count is now %lu. Added transaction: %@
Ending transaction for %@. Transaction count is now %lu. Ended transaction: %@
CSD encountered a fault with reason: %@
Invalidating process assertion for %@
Preparing conference with configuration: %@
Initializing new callID with device role %d
Fetched local invite dictionary: %@
Error fetching local invite dictionary %@: %@
Fetching local invite dictionary using remote invite dictionary %@
Failed to initialize a new call with device role %d.
Failed to create an AVConference instance. This usually happens when the AVConference SPI can't communicate with mediaserverd over XPC
[WARN] Attempted to prepare conference which has already started preparing (state=%d)
transport: %@ self.configuration: %@
Successfully started connection with configuration=%@ (timestamp: %f)
Failed to start connection with configuration=%@: %@
[WARN] Attempted to start conference which has not been prepared (state=%d)
[WARN] Conference does not exist
Delaying stop on conference...
Calling stop on conference %@
Calling cancel on conference %@
[WARN] Attempted to cancel a conference that has already started connecting: %@
Setting remote invite dictionary from %@ to %@
Setting caller from %d to %d
Attempting to set state to %d, which precedes current state %d
Setting microphoneMuted to %d for %@
Setting sendingAudio to %d
Setting sendingAudioData to %d
Setting conferenceProvider videoPaused to %d
Setting sendingVideo to %d
State is %d, updating isVideoPausedToStart from %d to %d
Updating capabilities from: %@ to %@
Setting remoteVideoPresentationSize from %@ to %@
Setting remoteVideoPresentationState from %d to %d
Conference didStart timeout fired
Updating device role from %d to %d
conference=%@ didStartSession=%d error=%@
Successfully started session
Session is connected, setting videoPaused to expected value: %d
[WARN] Session is already past Connected state, not sending delegate started
Failed to start session. error=%@
didStopError=%@ callMetadata=%@
AVConference stopped in failure: %{public}@
Sending delegate bytesOfDataUsageChanged: %ld
didPauseAudio=%d error=%@
didPauseVideo=%d error=%@
Not setting sendingVideoExpected to nil since our state is %d
Video was set to didPauseVideo: %d sendingVideoExpected: %@. Setting sendingVideo to sendingVideoExpected
remoteVideoPaused=%d
remoteMediaStalled=%d
Server died for conference provider %@
It's interesting that we have a call here when we don't really expect one %@
Registering to handle call handoff activity type with dynamic identifier %@ for provider %@
Frontmost call is hosted here ...
... and it is an endpoint here ...
... and we are a secondary device ...
... using a broadcast activity with dynamic identifier: %@.
[WARN] ... but no dynamic identifier could be found (%d) or no handoff user info exists (%d). Not broadcasting frontmost call
... but we are a primary device. Not broadcasting frontmost call
... and it is being relayed elsewhere. Using a local activity
Beginning handoff activity %@ for call %@
Ending handoff activity: %@
Broadcasting suppress ringtone activity for declined call: %@
[WARN] User activity manager aware of change to audio-video state (mic muted: %@, camera enabled: %@), but call didn't meet criteria (call is non-nil: %@, call is conversation: %@, call has groupUUID: %@, call is active: %@)
[WARN] User activity manager aware of change to audio-video state (mic muted: %@, camera enabled: %@), but could not find conversation for call with groupUUID: %@
Not updating handoff advertisement because lockdown mode is enabled
After conversation %@ was handed off elsewhere, re-registering for handoff advertisement for participant %llu so that it can be handed off back
Not updating handoff registration because lockdown mode is enabled
Began app history activity %@ for call %@
[WARN] Expected %@ to be kind of class %@, but is not
Broadcasting suppress ringtone activity for call that suppressed its ringtone: %@
Broadcasting suppress ringtone activity for incoming call that started connecting: %@
Received broadcast for activity type %d and destination ID %@. Suppressing ringtone due to remote suppression for call %@
Received broadcast for activity type %d but ignoring it because its destination ID (%@) does not match this ringing call's desination ID (%@)
[WARN] Cannot process received broadcast for conversation handoff activity type because it did not have a dynamic identifier set.
[WARN] User activity manager could not parse eligibility from dynamicIdentifier %@
%s: Updating handoff registration for conversation UUID %@
No more conversations, unregistering all conversation handoff dynamic identifiers
%@ isSilenceUnknownCallersEnabled(Telephony): %d
%@ isSilenceUnknownFaceTimeCallersEnabled: %d
%@ maxJunkLevel: %ld
Not a system call; call filter will allow call with identifier %@
%@ shouldFilterIncoming call=%@ isSilenceUnknownTelephonyCallersEnabled=%d isSilenceUnknownFaceTimeCallersEnabled=%d
%@ call does not have a valid handle, by definition this is an unknown caller call %@
%@ shouldFilterIncoming call=%@ unknownCaller=%d maybeSilenceCall=%d shouldBlockJunk=%ld
Calling ADClientSetValueForDistributionKey() with key %@ and value %f
Asking BackBoard to set the proximity detection mode to (%u).
Proximity detection should be %d since isReceiver: %d, isSpeaker: %d, isVoiceOverRunning: %d
Proximity detection should be disabled; eligible audio call does not exist
Proximity detection should be disabled; video call exists
Proximity detection should be disabled; isInterfaceOrientationPortrait: %d, isProximitySensorCovered: %d
Handling proximity sensor covered changed to %d
VoiceOver is enabled and the proximity sensor is covered, changing the audio route from speaker to receiver.
VoiceOver is enabled and the proximity sensor is uncovered, changing the audio route from receiver to speaker.
Updating proximity sensor state; calls changed.
Updating proximity sensor state; sensor covered changed.
Updating proximity sensor state; audio routes changed.
TipKit: Logging Biome signal for phone away from face without speaker.
[WARN] Tried to get the call history identifier for this call (%@) but no conference ID was available (%@), we'll fall back to another method (GUID = %@). This call may now not sync properly between devices.
This chat's conferenceID and GUID are nil or empty, we cannot create a safe call history identifier
Not setting video properties for conversation UUID: %@ because we're in AVLess
[WARN] Could not weak link notification string '%@'. Not observing notifications for it.
Calling endChatWithReason on chat %@ with reason %ld
Asked to end chat with UUID: %@, reason: (%ld) but could not find it
Using account %@
Inviting handle %@ excluding push tokens %@
Registering imav chat %@
Could not initiate FaceTime call - No chat returned for handle %@ with account %@
Could not initiate FaceTime call - No IM handle returned for handle %@ with account %@
Could not initiate FaceTime Call - Account %@ not registered
Legacy chat with matching UUID connected; attempting to fulfill pending answer call action %@
Legacy chat did not provide a connection date; Could not fulfill answer call action %@
[WARN] No pending answer call actions found with UUID: %@
Failing answer call action for chat because it ended before connecting: %@
Using call ended reason remote hangup because ended reason is %@
Using call ended reason answered elsewhere because ended reason is %@
Using call ended reason declined elsewhere because ended reason is %@
Using call ended reason unanswered because ended reason is %@
Using call ended reason failed because ended reason is %@
Incoming call was denied with error %@ so declining chat with IMAVResponseFilteredCall: %@
Calling acceptInvitation on chat %@
Not accepting invitation to chat %@ since it is already Connected
Calling endChat on chat %@
Calling setIsSendingAudio with %d for chat %@
Not holding chat %@ since it is not yet Connected
Calling setIsSendingVideo with %d for chat %@
Calling setRemoteVideoPresentationSize with %@ for call %@
Calling setRemoteVideoPresentationState with %ld for chat %@
Calling setRelayed with %d for chat %@
Calling setMuted with %d for chat %@
Creating CSDCallHistoryControllerXPCServer
XPC connection interrupted from client %@
XPC connection invalidated from client %@ for CSDCallHistoryControllerXPCServer
deallocing CallHistoryControllerXPCServer
invalidating CallHistoryControllerXPCServer
NOTIFYING CLIENTS TO CONNECT
recent calls deleted: %@
All recent calls deleted
Requesting remote active participants for cached conversation with UUID: %@
Setting audioEnabled to %d
Ignoring to set videoEnabled since conversation is relaying
Setting videoEnabled to %d
Setting screenEnabled to %d, screenShareAttributes: %@
Setting videoPaused to %d
Setting screenShareAttributes to %@
Error setting screenShareAttributes when screen is not enabled
Setting audioPaused to %d
Stopping session since local av mode is switching to none
Conversation UUID: %@ asked to register messages group association
Setting oneToOneModeEnabled to %d
Kicking previous participant on conversation UUID: %@ participant: %@
Ignoring splitSessionSecondary since we aren't joined into the conversation UUID: %@ state: (%tu)
Failed to return to HomeScreen %@
Adding participant: %@
Found member: %@ representing participant: %@
AddedParticipant %@ for member: %@ is representing our localMember
Removing active participant and replacing it with one with the same identifier but a newer AVC data blob.
New participant blob's audioVideoMode is different than our current audioVideoMode. AVModeUpdates need to happen with the explicit ParticipantUpdate message. Resetting to known audioVideoMode
[WARN] GreenTea device cannot be in a call with more than one other participant, leaving
GreenTea hand off eligible call, will leave shortly if handoff not completed
[WARN] GreenTea device leaving handoff conversation after timeout
[WARN] Conversation already contains participant with no change in AVC data: %@
Removing participants for member: %@ on conversation UUID: %@ participants: %@
setParticipantAudioVideoMode:forParticipant: Failed to find participant %@ on conversation %@
Removing participant with identifier: %lu  handle: %@ withReason: %@
 Found matching handle %lu: %@
Removing splitSessionSecondary: %@
Leaving conversation because lightweightPrimary left on conversation UUID: %@ participant: %@ localMember: %@
Local participant %llu was associated with participant %@ who is now being removed. Clearing local participant association.
Remote participant %llu was associated with participant %@ who is now being removed. Clearing participant association for %llu.
No active remote participants left, requesting to move back to oneToOne=0
[WARN] removeParticipantWithIdentifier:fromHandle: Not removing participant handle (%@) didn't match, with identifier %lu: %@
[WARN] removeParticipantWithIdentifier:fromHandle: Could not find participant with identifier %lu: %@
Adding virtual participant: %@
Trying to add virtual participant for plugin %@ with different identifier %llu: %@
Removing virtual participant: %@
[WARN] Trying to remove virtual participant for plugin %@ with different identifier %llu: %@
[WARN] Could not find virtual participant for plugin %@: %@
conversation: %@ remove remoteMembers triggeredLocally: %d
UUID: %@ remove remoteMembers: %@
[WARN] No members were removed to conversation: %@
addRemoteMembers - UUID: %@ groupUUID: %@ remoteMembers: %@ triggeredLocally: %d
addRemoteMembers - UUID: %@ otherInvitedHandles: %@
addRemoteMembers - UUID: %@ invitationPreferences: %@
Handle is part of remoteMembers list, but trying to add them as part of LMI. Allowing this handle to be added: %@
Handle %@ should be considered for addition as an invited member handle if not kicked
Conversation UUID %@ already contains member with handle %@, filtering out.
[WARN] No new members were added to conversation UUID: %@
Updating member validation source for: %@ to source: %ld
Found member to update validation state: %@
We found an activity originated from now validated member %@ updating activity
Couldn't find member %@ to update validation source for
add pendingMembers: %@ triggeredLocally: %d
Conversation UUID %@ already contains pending member with handle %@, filtering out from addition list.
remove pendingMembers: %@ triggeredLocally: %d
Conversation with UUID %@ does not have pending member with handle %@, filtering out from removal list.
[WARN] Ignoring new link %@ as conversation link already set to %@
Link on conversation UUID %@ was already set to %@, but this setting allows for updates, setting the link name to %@, the expiration date to %@, and the invited handles to %@
leaveActivitySessionWithUUID: %@
[WARN] Dropping request to remove activitySession because Expanse features are disabled. Please enable the "expanseEnabled" feature flag in TelephonyUtilities.
Finding activitySession with UUID: %@ to present dismissal alert
Session dismissal alert for activitySessionUUID %@ success: %@
removeActivitySessionWithUUID: %@
Not launching screen sharing app
User chose to take no action
activitySession: %@
[WARN] Dropping new activitySession because Expanse features are disabled. Please upgrade to a later release to re-enable Expanse features.
[WARN] Dropping new activitySession because Expanse features are disabled. Please enable the "expanseEnabled" feature flag in TelephonyUtilities.
BundleID override: %@
Attempting to create Activity with trustedFromHandle: %@ on trusted lightweight member: %@. Overriding to lightweightPrimary. %@
isLightweightPrimaryInitiated: %d
Not launching app for locally started activity %@
Asked to create staged activitySession for activity: %@
[WARN] Failed to create staged activitySession since we can't replace an activitySession with a staged activitySession.
Skipping staging activity %@
Successfully created staged activitySession: %@
Attempting to set staged activitySession: %@
Trusted from handle %@ not found in membership list for activitySession ID: %@ on conversation %@
Not launching app as we are not joined into this conversation
Not launching app as SharePlay is not allowed
[WARN] Activity with identifier %@ is missing application context.
Not launching app for system activity: %@
Not launching app as we are not in an eligible activitySession state: %@
Not launching app as the activitySession has already been joined: %@
Request to launch %@ for conversation with UUID: %@ allowing auto-launch: %@
Attempting to launch app in background w/ PiP
Launched pip for activity %@ error %@
Found locally initiated screen sharing activity session %@, ending session
Trying to setup new AVCSession without tearing down previous session first.
avcSessionCreationBlock
Joining CSDConversation self: %@ context: %@
CSDConversationJoinContext is configured with none AV mode while video is enabled: %@
GreenTea devices are not supported for this conversation with UUID: %@
Copying invitation preferences to locally-created conversation from join context: %@
Bypassing AVCSession creation because localMember is lightweight %@
Creating CSDAVCSession with transport token %@
This device is joining a U+1 FaceTime call to complete a handoff from a different participant, setting oneToOneModeEnabled to NO.
Created CSDAVCSession %@
Not joining IDS group session because wantsStagingArea is true, instead moving to preparing state
Failed to create CSDAVCSession
[WARN] Not joining conversation because it isn't waiting or preparing: %@
[WARN] Not sending local participant data, no AVCSession: %@
Requested to mark conversation as audioReady UUID: %@ audioReady: %d audioPaused: %d audioEnabled: %d
[WARN] Not starting audio for conversation because it isn't joining/joined: %@
[WARN] Not starting audio for conversation because avmode is .none %@
self UUID: %@
Leaving CSDIDSGroupSession: %@
Conversation participants support leave context: %@
[WARN] Not leaving conversation because it isn't joining/joined: %@
Kicking member on conversation UUID: %@ member: %@
Aliased session %@ to %@ for bundle identifier %@
Not enforcing shareplay version check due to server over-ride
[WARN] One or more participant on %@ is on an older share play protocol %@ version %@
[WARN] Not joining IDS session as state (%tu) is not joining on conversation: %@
Sending U+1 join context to subset of participants: %@
idsSessionJoin
AVAudioClient not set up yet, delaying adding participant to AVCSession: %llu
Adding participant to AVCSession now that AVAudioClient is set up: %llu
Not adding participant %llu to AVCSession now that AVAudioClient is set up because they're already in the AVCSession
Starting %@
avcSessionStart
Skipped starting session since session start is already in progress %@
Skipped starting session since isJoined:%@ audioReady:%@ isRelaying:%@ isAVLess:%@ isLocalParticipantNormal: %@
[WARN] Timed out waiting for session to stop after %@, moving to waiting state and cleaning up.
Timed out waiting for conversation to leave, but it's not in state leaving (instead is in %i).
Timed out requesting AVC blob for participant with identifier: %@
Replacing existing recovery timeout for participant with identifier %@
Setting up AVC blob recovery timeout for participant with identifier %@
Cancelling in flight AVC blob recovery for participant with identifier %@
Pruning remote participants as necessary, current server identifiers: %@
_stableExpanseIdentifier %@ for %@ 
Checking if oneToOne->1 downgrade available with state: %tu oneToOneMode: %d remoteMembers.count: %lu activeRemoteMembersCount: %lu useDelay: %d
Screen sharing has ended but not requesting to move back to U+1 mode since localDowngradeAvailable:%d remoteDowngradeAvailable:%d
Delayed downgrade triggered, checking if we're still eligible
Screen sharing has ended and we only have 1 remote participant, requesting to move back to U+1 mode
Did not retrieve a route identifier for participant identifier %llu
Retrieved route identifier %@ for participant identifier %llu
didJoinGroup: %d error: %@
Joining conversation without AVC session for lightweight device
Failed to join group: %@
didLeaveGroupWithError: %@
CSDIDSGroupSession %@ failed to leave group for conversation UUID %@: %@
endedWithError: %@ reason: %d
Kicked from the conversation, cleaning up
Unknown participant added whle in lockdown mode, cleaning up
Invalidating cached conversation: %@, no remote active participants were found.
Activating cached conversation with UUID: %@ since %lu remote participants were still found to be active.
Found cached pending-participant, adding as active-participant, csdParticipant: %@
Requested audio/video mode changed for conversation %@ failed with error %@
We've changed participant types to type: %d but our AVMode is: %lu. Not performing client side interaction for mismatched types
Stopping session since local participant type is Lightweight avcSessionInProgress %@ avcSession: %@
Downgraded from AV -> AVLess, but didn't have AVCSession yet. Creating an AVCSession.
Rebroadcasting AVC data to other members of this group to since we transitioned to lightweight and setup a new AVCSession.
Starting session since local participant type is Normal
didReceiveKickedParticipantIDs: %@
When kicking participantID %@ we found participant %@ with no member in %@
updating kickedMembers to %@
updating pendingAllowedMembers to %@
[WARN] didReceiveKickedParticipantIDstype: %hu unexpected
Retrying kicked members: retries: %lu pendingKickedMembers: %@
Retrying allowed members: retries: %lu pendingAllowedMembers: %@
[WARN] Not retrying to kickMembers, max retry count (%lu) reached
[WARN] resetting state, IDSGroupSessionMemberManagementCode: %d
didReceiveDataBlob for participant: %@
[WARN] Not processing didReceiveDataBlob because unable to create handle from URI: %@
[WARN] Not processing didReceiveDataBlob because have pendingKickedMember with same identifier: %llu
[WARN] Not processing didReceiveDataBlob because have kickedMember with same handle: %@
didReceiveDataBlob adding as active-participant, csdConversationParticipant: %@
didReceiveDataBlob caching as pending-participant, csdConversationParticipant: %@
didReceiveData dataType: %u for participant: %@
Dropping unexpected data blob with type: %u
didReceiveServerErrorCode: %u
Couldn't find activitySession, not reporting serverErrorCode event.
AVCProviderEndReason=%d error.code=%d detailedError=%d
AVCProviderEndReason=%d, this should not happen
No error with a failed start from AVC using %d
Found expectedVideoEnabled: %@, updating value to match state
didStart: %d error: %@
Not in the joining state so not moving to joined
Failed to start CSDAVCSession: %@
CSDAVCSession failed to start while we're already leaving a U+1 call. Treat this as a leave and clean up the conversation
CSDAVCSession failed to start, but there is no error, Ignoring the start failure and leaving conversation intact
didDetectError: %@
Rebroadcasting AVC data to other members of this group to attempt to recover from error (last rebroadcast time was %f).
Not attempting to rebroadcast message since state was not in join (was %d)
CSDAVCSession didStopWithError: %@
AVCSession %@ stopped in failure for conversation UUID %@: %@
AVCSession %@ stopped for remote hangup. Ignoring this signal.
AVCSession %@ stopped, cleaning up IDSSession state
CSDAVCSession stopped for downgrade to AVModeNone, setting up new not started AVCSession
Setting GFT conversation back to default state of video=1
CSDAVCSession %@ server did disconnect for conversation UUID %@
Detected AVCSession server disconnect, but we're in AVLess. Re-creating an AVCSession and re-distributing blob.
changedLocalAudioEnabled=%d
Failed to set localAudioEnabled (%d): didSucceed (%d): error: %@
Audio was set to audioEnabled: %d self.expectedAudioEnabled.boolValue: %@. Setting audioEnabled to self.expectedAudioEnabled.boolValue
changedLocalVideoEnabled=%d
Failed to set localVideoEnabled (%d): didSucceed (%d): error: %@
[WARN] Skipping to set localVideoEnabled (%d) error: %@
Video was set to videoEnabled: %d self.expectedVideoEnabled.boolValue: %@. Setting videoEnabled to self.expectedVideoEnabled.boolValue
changedScreenEnabled=%d
Failed to set screenEnabled (%d): didSucceed (%d): error: %@
Screen was set to screenEnabled: %d self.expectedScreenEnabled.boolValue: %@. Setting screenEnabled to self.expectedScreenEnabled.boolValue
changedLocalAudioPaused=%d
Failed to set localAudioPaused (%d): didSucceed (%d): error: %@
Audio paused was set to audioPaused: %d self.expectedAudioPaused.boolValue: %@. Setting audioPaused to self.expectedAudioPaused.boolValue
changedLocalVideoPaused=%d
Failed to set localVideoPaused (%d): didSucceed (%d): error: %@
Video paused was set to videoPaused: %d self.expectedVideoPaused.boolValue: %@. Setting videoPaused to self.expectedVideoPaused.boolValue
changedOneToOneModeEnabled=%d
oneToOneModeEnabled is disabled because a 3rd participant that joined is replacing another participant for handoff
User requested videoPaused=true in a U+1 call, since we're moving out of U+1 state, setting videoEnabled=false for parity
changedBytesOfDataUsed=%ld
sessionShouldReconnect=%@
Skipping reconnect since one to one mode is disabled
[WARN] Unknown participant with identifier: %llu
[WARN] All active participants in the call are not on minimum supported shareplay version
Conversation screen sharing about to change to screen enabled: %@ conversation: %@ 
 participant: %@
[WARN] Stopping screen on local device since one of the remote participants sharing their screen %@
Resetting non screen sharing sessions as one of the remote participants started screen sharing %@
[WARN] Stopping screen on local device capture failed to start for conversation UUID: %@
[WARN] Unknown participant with identifier: %llu activeRemoteParticipants: %@
Updating screenEnabled on all remote participants to: %@
sharePlayAllowedStateChanged: %@
Stopping screen on local device since route does not support share play
Leaving activity session for screen sharing since route does not support share play
user requested to switch to speaker route
Did get session unjoined callback startDate %@ endDate %@ session %@
CSDConversation setting appLaunchState to needsLaunch %@
CSDConversation received activity session removed: %@
CSDConversation associated scene changed for %@
Ignoring %@ message because we already have a call with this uniqueProxyIdentifier: %@
We already have a call for this %@ message: %@. Updating it with new values
Creating new call for %@ message
[WARN] Ignoring %@ message because no call exists for %@ and the message is not from the paired device
[WARN] Could not find call with uniqueProxyIdentifier %@. All current calls: %@
Call answered elsewhere message had no uniqueProxyIdentifier set. Using current calls
Resetting call %@ with protoCall %@
Not resetting call %@ with protoCall %@ because they are equal
Creating new call with protoCall %@
Existing call no longer exists and is not sending: %@
handleUpdateRemoteCallStateMessageFromHost %@
Updating call %@ with protoCall %@
Not updating call %@ with protoCall %@ because they are equal
[WARN] Received %@ message, but we already have some calls
Ignoring %@ because messageSendTime (%f) <= call.remoteUplinkMutedSetTime (%f)
Pulling remotely hosted call: %@
Failed to prepare conference for pull message %@ and call %@
Fetching localSenderIdenity for localSenderIdentityAccountUUID %@
Replacing hardPauseDigits '%@' with '%@' since protocolVersion is %d
Replacing soundRegion %ld with %ld since protocolVersion is %d
Created pause digits queue: %@
Setting disconnected reason to dial failed because call is outgoing but has not started outgoing
Setting disconnected reason to remote hangup because ended reason is %ld
Setting disconnected reason to remote hangup because call has started connecting and ended reason is %ld
Setting disconnected reason to remote hangup because outgoing call has not started connecting and ended reason is %ld but call is a telephony call
Setting disconnected reason to remote unavailable because outgoing call has not started connecting and ended reason is %ld
Setting disconnected reason to answered elsewhere because ended reason is %ld
Setting disconnected reason to declined elsewhere because ended reason is %ld
Setting disconnected reason to handed off because ended reason is %ld
Setting disconnected reason to user busy because ended reason is %ld
Setting disconnected reason to call failed because failure reason is %ld
Setting disconnected reason to account unsupported because failure reason is %ld
Setting disconnected reason to network unsupported because failure reason is %ld
Setting disconnected reason to provider crashed because failure reason is %ld
Setting disconnected reason to media start failed because failure reason is %ld
Setting disconnected reason to other secondary device in use because failure reason is %ld
Setting disconnected reason to kicked because failure reason is %ld
Setting disconnected reason to rejected because failure reason is %ld
Setting disconnected reason to invalid conversation link because failure reason is %ld
Setting disconnected reason to conversation links disabled because failure reason is %ld
Setting disconnected reason to no destinations available because failure reason is %ld
Setting disconnected reason to media server crashed because failure reason is %ld
Setting disconnected reason to unknown participant added because failure reason is %ld
Setting disconnected reason to call failed because ended reason is %ld
International status is false; service provider ISO country code is not available.
International status is false; celluar network ISO country code is not available.
Failed to find a call source to dial with for dial request: %@
CSDProviderCall joinConversationWithRequest: %@
LMI: FT Provider: %@ Sender identities: %@
Join request specifies invitation preferences: %@
attributes: %@
AVAudioSession muteSessionInput: %d for %@
Failed AVAudioSession muteSessionInput error: %@
for call: %@ pauseDigitsQueue: %@
[WARN] Next pause digits are not hard pause
[WARN] No next pause digits exist
for call: %@ key: %d
for call: %@ remoteVideoPresentationSize: %@
for call: %@ remoteVideoPresentationState: %d
Dequeueing next pause digits
Sending pause digits: %@ type: %ld
Found queued soft pause digits: %@
for pauseDigitsQueue: %@
[WARN] Symbolic link found for URL %@
[WARN] Could not determine source file for URL %@
[WARN] Not copying generic image
[WARN] Could not determine destination file for URL %@
Creating sandbox extension directory '%@' failed with error %@
Copying URL '%@' to filename '%@'failed with error %@
Releasing sandbox extension handle
Break before make timeout: %lfs
Not handling call status changed notification for object that is not CSDCall: %@
Removing image files failed with error %@
Determined wants break before make is %@ (supportsSimultaneousVoiceAndData: %@, nonWifiFaceTimeAvailable: %@, wiFiActiveAndReachable: %@) for call %@
Could not determine whether device wants break before make; could not obtain sender identity capabilities for call %@
Could not determine whether device wants break before make; could not obtain local sender identity for call %@
Call started outgoing: %@
Disconnecting video call because another call started outgoing: %@
Disconnecting call using the baseband because a video call started outgoing and wantsBreakBeforeMake=YES: %@
All calls ended. Setting uplink and downlink muted to NO
Call started connecting: %@
Leaving converstion since we have call that is getting connected: %@
%@ is handling %@
Pulling relaying calls from client since one to one mode changed for relaying calls
Call upgraded to video: %@
Video call connected: %@
Requesting to disconnect all calls besides: %@
Disconnecting call because it is not compatible with call: %@
Ending current active call %@ because call %@ is going to go active
Reporting emergency call to screen time
There was an error enabling emergency mode. Enabled successfully (%d) Error: %@
Posting CLTM notification %@ and setting state to %llu
Requesting to pull call %@ because its continuity state is different from call %@
Disconnecting call %@ because its continuity state is different from call %@
An endpointIDSDestination %@ is present for call %@ so pushing all hosted calls to that destination
An endpointRapportMediaSystemIdentifier="%@" or endpointRapportEffectiveIdentifier="%@" is present on dial request for call %@ so attempting to pick matching route
Setting up break before make timeout for call: %@
Disconnecting call because video call is still sending and break before make timeout fired: %@
CarPlay is not connected; muting uplink for RTT call %@
CarPlay is connected; unmuting uplink for RTT call %@
Setting uplink muted for TinCan call %@
Starting ringing timer for call with identifier %@
Exceeded ringing duration of %llu seconds; disconnecting call with identifier %@
[WARN] Store demo mode enabled. Limiting certain calls
Starting call duration limit timer as we are in a retail environment
Stopping call duration limit timer
Disconnecting restricted calls because the limited call duration timer fired: %@
Found active call needing hold music: %@
Hold music enabled - call is active so muting uplink and downlink
Hold music disabled - unmuting uplink and downlink
Disconnecting all calls since we have an AVLess conversation that is Joined: %@
handleUserInteractionWithBlock: shouldOpenInCallService: %d shouldDisplaySystemCallControls: %d callUUID: %@
updating descriptor old: %{public}@ new: %{public}@
TUOpenURLWithCompletion result: %@, error: %@
Encountered error while opening URL: %@
Background launching application with bundle identifier %@
Foreground launching application with bundle identifier %@
Successfully launched application with bundle identifier %@
Attempt to open application with bundle identifier %@ failed with error %@
XPC connection invalidated from client %@
Approval client enabled: %d, %@
Client deregistered itself as split-session approver
Ignoring deregistration; sender is not current approver
No session approval clients registered
Split session approval client: %@
Approval client unexpectedly nil!
Retrieving subscription information failed with error %@ for %@.
added service provider uuid=%@ carrierPhoneNumbers=%@
Retrieved carrier phone number '%@' for subscription %@
Retrieving carrier phone number for subscription %@ failed with error %@
Carrier bundle changed for subscription context %@.
Subscription info changed
Creating IDSGroupSession with options: %@
preferences: %@
options: %@
participantDestinationIDs: %@ contextData: %@ triggeredLocally: %d
participantDestinationIDs: %@ contextData: %@ requiredCapabilities: %@ requiredLackOfCapabilities: %@ triggeredLocally: %d
Sending participantData: %@
Leaving with options: %@
session: %@
session: %@, options: %@
session: %@, requestDataCryptor: %@
session: %@, requestEncryptionKeyForParticipants: %@ topic: %@
session: %@, setRequiredCapabilities: %@ requiredLackOfCapabilities: %@
session: %@, removeRequiredCapabilities: %@ requiredLackOfCapabilities: %@
session: %@, addAliasesToConversationContainer: %@ salt: %@
session: %@, participantIDForAlias: %llu salt: %@
session: %@ doesn't support async participantID fetching, falling back to sync form.
session: %@ updating participant type: %hu destinations: %@
self: %@ not running pending blocks yet because self.hasStarted=%d self.hasReceivedAccept=%d self.isInitiator=%d
self: %@ running block %@ with transport %@ and %@ accept payload data
self: %@ pending block on transport availability: %@
[WARN] Transport availability block timed out: %@
sendData self: %@
Session %@ is not connected and waitUntilConnected is YES. Pending data
Session %@ is not connected but waitUntilConnected is NO. Sending data
Session %@ is connected. Sending data
Session %@ is ending/ended. Dropping data on the floor
self: %@ destinations: %@
Session %@ is waiting. Sending data
Session %@ is not waiting. Dropping data on the floor
self: %@ data: %@
Setting session %@ to ending for prepareToEnd
Not setting session %@ to ending for prepareToEnd because session is not connected
Received invitation ACCEPT with data for session %@ from (fromID=%@) destination %@ device %@
Received invitation CANCEL with data for session %@ from (fromID=%@) destination %@ device %@
Received invitation DECLINE with data for session %@ from (fromID=%@) destination %@ device %@
Received session MESSAGE for session %@ from (fromID=%@) destination %@ device %@
Recent calls deleted: %@
thumperCallingAllowedOnDefaultPairedDeviceDefault keyExists: %d isAllowed: %d
Setting %@ default to %d
Error synchronizing NPS defaults: %@
Dismissing Thumper available notification on secondary device for account ID %@
Displaying Thumper enabled disclaimer on secondary device for account ID %@
Dismissing Thumper enabled disclaimer on secondary device for account ID %@
Could not obtain Thumper account identifier for sender identity UUID %@ from data source capabilities state %@
Comparing cached Thumper capabilities state %@ with data source capabilities state %@
Should show Thumper available notification for account ID %@
Default paired device unique ID was %@ and is now %@
Check if devices should be enrolled now that the default paired device changed.
Checking to see if any devices have been removed from this iCloud account.
Device with the uniqueID %@ will be unpaired from Thumper because it is no longer on the IDSService.
%@ is handling add capabilities for sender identity UUID %@
Thumper calling preferences update initiated by add capabilities for sender identity UUID %@
Skipping Thumper preferences update; Thumper capabilities state does not exist for UUID %@
%@ is handling remove capabilities for sender identity UUID %@
Thumper calling preferences update initiated by remove capabilities for sender identity UUID %@
Skipping Thumper calling preferences update; unknown context info found for sender identity UUID %@
%@ is handling change Thumper calling capabilities for sender identity with UUID %@
Show a reminder to the user that thumper is now available.
User requested to Turn On Thumper calling
[WARN] Not adding user notification because we are already displaying one
Removing existing reminder notification
Show a disclaimer to the user about their emergency address info now that thumper is enabled.
Emergency Address disclaimer: Preferences button pressed, open URL (%@).
Removing existing emergency address disclaimer
Archiving Thumper capabilities state object failed with error %@
Unarchiving Thumper capabilities state object failed with error %@
Archived object was of unexpected class %@: %@
Prefereces object was of unexpected class %@: %@
Initializing %@
FaceTime Audio availability is %ld. FaceTime Video availability is %ld
Initialized %@
Active accounts changed for service %@: %@
Received caller ID changed notification: %@
Received service availability changed notification: %@
Received devices changed notification: %@
FaceTime iCloud account is %@ (isActive=%d, profileID=%@) and relay iCloud account is %@ (isActive=%d, profileID=%@)
FaceTime caller ID %@ is not a valid outgoing relay caller ID
Attempting to find a valid outgoing caller ID in set of available outgoing caller IDs %@
Selected outgoing caller ID %@ from list of available outgoing caller IDs %@
Could not automatically select an outgoing caller ID; multiple telephone numbers are listed in the set of available outgoing caller IDs %@
Attempting to find a valid outgoing caller ID in list of vetted account aliases %@
Selected outgoing caller ID %@ from list of vetted account aliases %@
Could not automatically select an outgoing caller ID; multiple telephone numbers are listed in the set of vetted account aliases IDs %@
Outgoing Caller ID is %@
streamPreferences: %@
XPC connection invalidated from client %@ for CSDConversationProviderManagerXPCServer
Leaving since client got invalidated conversation: %@
deallocing ProviderManagerXPCServer
invalidating ProviderManagerXPCServer
conversationProviderForIdentifier: %@
generatePseudonymHandleForConversationProviderURI: %@
renewPseudonymHandle: %@
revokePseudonymHandle: %@
doesHandleCorrespondToConversationProvider: %@
registerForCallbacksForProvider received over XPC with providerIdentifier: %@ client: %@
registerConversationProvider received over XPC with provider: %@
clientCapabilities: %@
callProviderIdentifier: %@
dialRequest: %@
Could not determine UUID for FaceTime app bundle identifier %@
Setting disconnected reason to call failed because invitation was sent but no push tokens were available to receive the invitation for call %@
Setting disconnected reason to call failed because CSDIDSDualSession ended reason is %ld for call %@
Using call ended reason answered elsewhere because CSDIDSDualSession ended reason is %ld
Using call ended reason declined elsewhere because CSDIDSDualSession ended reason is %ld
Using call ended reason unanswered because CSDIDSDualSession ended reason is %ld
Using call ended reason remote ended because CSDIDSDualSession ended reason is %ld
Setting disconnected reason to call failed because CSDAVConference ended reason is %ld for call %@
Using call ended reason remote ended because CSDAVConference ended reason is %ld
Setting local portrait aspect ratio %@ and local landscape aspect ratio %@
[WARN] Disabling key exchange because %@ default is set to YES
videoAspectRatioDescriptor: %@
Canceling session
Declining session
end self: %@
Stopping conference
Ending session
for call %@
Setting isSendingAudio to %d for chat %@
Conference has not been created yet. Updating shouldStartAudioPaused to %d
Setting isSendingAudioData to %d for chat %@
Setting isSendingVideo to %d for chat %@
Conference has not been created yet. Updating shouldStartVideoPaused to %d
Setting relaying from %d to %d for chat %@
transport: %@
sessionStarted: %@
[WARN] Not starting connection because the chat is not allowed to start media: %@
Not starting connection because conference state is %d
session %@ invitationSentToPushTokens %@ shouldBreakBeforeMake %d
session %@ endedWithReason %d
session %@ receivedInvitationAcceptWithData %@
[WARN] Dropping invitation accept since the chat is not allowed to start media: %@
[WARN] Ignoring invitation accept since chat is incoming: %@
[WARN] Ignoring invitation accept since there is no remote from ID set on the session.
Dropping invitation accept since there is no remote push token provided.
Dropping invitation accept since the remote push token was not one of the ones we invited.
[WARN] Ignoring incoming accept since accompanying message was nil
[WARN] Ignoring incoming message since message with type=%@ was not invite.
Error while creating UUID from protoUUID: %@
[WARN] Not setting upgradeSessionUUID for message: %@ self.upgradeSessionUUID: %@
Not starting connecting because session state is %d and conference state is %d
session %@ receivedInvitationDeclineWithData %@
session %@ receivedInvitationCancelWithData %@
session %@ receivedData (data is %@)
message: %@
[WARN] First frame not received after %f seconds for %@
reason=%ld error=%@
Remote media stalled for chat: %@. Reconnecting IDS session.
Device first unlock block invoked, initializing CXCallDirectoryManager...
XPC activity checked in. Criteria: %@
Setting activity state to XPC_ACTIVITY_STATE_CONTINUE
Error setting activity state to XPC_ACTIVITY_STATE_CONTINUE
Beginning daily maintenance with activity %@
Successfully compacted store
Error compacting store: %@
Setting activity state to XPC_ACTIVITY_STATE_DONE
Error setting activity state to XPC_ACTIVITY_STATE_DONE
Error synchronizing call directory extensions: %@
Successfully synchronized call directory extensions
Extensions changed for Call Directory NSExtensionManager %@, but we do not have a CXCallDirectoryManager (perhaps because device is not yet unlocked) so cannot synchronize
isDestinationIDAllowedThroughDoNotDisturb: provider=%@
isDestinationIDAllowedThroughDoNotDisturb: bundleID=%@
isDestinationIDAllowedThroughDoNotDisturb: eventDetails=%@
[WARN] Error encountered resolving behavior via DND. Defaulting isDestinationIDAllowedThroughDoNotDisturb to YES. error=%@
Terminating relay call that we don't have a relay session for: %@
Handling %@ by preparing connected sessions to end
Handling %@ by ending ending sessions
CSDMessagingCallMessage could not be read
Handling %@ with message: %@ latency: %llu
CSDMessagingCallMessage is of unsupported type: %d
Updating dialingIDSDevice using device list %@
A paired device exists, so using that as the dialing device: %@
[WARN] We found two devices with matching linkedUserURIs (arbitrarily choosing the first): %@ and %@
A device exists with a linkedUserURI that matches Caller ID %@, so using that as the dialing device: %@
[WARN] Could not find a dialingIDSDevice. No paired devices exist and no devices that support phone calls and have a linkedUserURI for %@ exist.
Could not retrieve local invite dictionary for message: %@
(IDSMessaging Host->Client) sendIncomingCallMessageToClientForCall: %@
Call cannot be answered. Only notifying the paired device
[WARN] Failed to prepare conference for call %@. Not sending incoming call message to relay clients
Not sending out incoming call invitation because call is no longer ringing: %@
(IDSMessaging Host->Client) sendCallDialedMessageToClientForCall: %@
(IDSMessaging Host->Client) sendCallAnsweredElsewhereMessageToClientForCall: %@
(IDSMessaging Host->Client) sendCallDisconnectedMessageToClientForCall: %@
(IDSMessaging Host->Client) sendCallConnectedMessageToClientForCall: %@
(IDSMessaging Host->Client) sendResetWantsHoldMusicMessageToClientForCall: %@
(IDSMessaging Host->Client) sendUpdateCallDisplayContextMessageToClientForCall: %@
(IDSMessaging Host->Client) sendUpdateFailureExpectedMessageToClientForCall: %@
(IDSMessaging Host->Client) sendUpdateSupportsEmergencyFallbackToClientForCall: %@
(IDSMessaging Host->Client) sendUpdateRemoteUplinkMutedCallMessageToClientForCall: %@
(IDSMessaging Host->Client) sendUpdateSupportsTTYWithVoiceCallMessageToClientForCall: %@
(IDSMessaging Host->Client) sendUpdateCallModelMessageToClientForCall: %@
(IDSMessaging Host->Client) sendDeviceUnavailableMessageToClient
(IDSMessaging Host->Client) sendPullRelayingCallsMessageToClient
(IDSMessaging Host->Client) sendResetStateMessageToClient
(IDSMessaging Host->Client) sendHardPauseAvailabilityMessageToClientForState %d digits: %@
(IDSMessaging Host->Client) sendUpdateRemoteCallStateMessageToClient
(IDSMessaging Host->Client) sendCallStartedConnectingMessageToClientForCall: %@
(IDSMessaging Host->Client) sendDialCallFailedForUniqueProxyIdentifier: %@
(IDSMessaging Host->Client) sendDialCallFailedForScreenTimeForUniqueProxyIdentifier: %@
(IDSMessaging Host->Client) sendPushCallsMessageToClientDestination: %@
Allowing call: %@ to be pushed to destination: %@
Skipping call: %@ to track for pushing to destination: %@
Found no calls to send sendPushCallsMessageToClientDestination
(IDSMessaging Host->Client) Sending UpdateCallContext message: %@
(IDSMessaging Host->Client) sendNeedsManualInCallSoundsChangeMessageToClientForCall: %@
(IDSMessaging Host->Client) sendInvitationSentMessageToClientForCall: %@
(IDSMessaging Host->Client) sendUpdateRoutesMessageToClientForRoutes: %@
(IDSMessaging Client->Host) sendDialCallMessageToHostForCall: %@
No dialing IDS device found. If we aren't already in a session, this dial call attempt will fail.
Failed to prepare conference for call %@. Disconnecting call with conference failed
Not sending out dial call invitation because call is no longer sending: %@
(IDSMessaging Client->Host) sendAnswerCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendDisconnectCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendHoldCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendUnholdCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendGroupCallMessageToHostForCall: %@ otherCall: %@
(IDSMessaging Client->Host) sendUngroupCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendSwapCallsMessageToHost
(IDSMessaging Client->Host) sendEndActiveAndAnswerCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendEndHeldAndAnswerCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendHoldActiveAndAnswerCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendDisconnectCurrentCallAndActivateHeldToHost
(IDSMessaging Client->Host) sendDisconnectAllCallsToHost
(IDSMessaging Client->Host) sendSendHardPauseDigitsMessageToHost
(IDSMessaging Client->Host) sendRequestCallStateMessageToHost
(IDSMessaging Client->Host) sendPullCallsMessageToHost
[WARN] Failed to prepare conference while pulling calls
(IDSMessaging Client->Host) sendPushRelayingCallsMessageToHostForSourceIdentifier: %@
(IDSMessaging Host->Client) sendUpdateRemoteUplinkMutedCallMessageToHostForCall: %@
(IDSMessaging Host->Client) sendPickRouteMessageToHostForRoute: %@
(IDSMessaging Client<->Host) sendSetTTYTypeCallMessageForCall: %@ ttyType: %d
(IDSMessaging Client<->Host) sendSetUplinkMutedCallMessageForCall: %@ uplinkMuted: %d
(IDSMessaging Client<->Host) sendSuppressRingtoneMessageForCall
(IDSMessaging Client<->Host) sendUpdateSystemVolumeForCall: %@
[WARN] We determined that device is null and destination: %@ is not guest. Ignoring incoming message: %@
Handle incoming %@ message: %@
[WARN] We determined that device: %@ cannot process messages for provider %@. Ignoring incoming message: %@
[WARN] Screen Time restricted the call for dial call message with destinationID %@ and provider: %@ is emergency: (%d)
[WARN] Ignoring %@ relay message since our device does not suppport processing messages of that type.
Messaging device can't receive relayed calls ...
... and we were told to decline the session invite. Declining incoming %@ message: %@
... and we were told not to decline the session invite. Ignoring incoming %@ message: %@
[WARN] Setting should ignore session to YES for %@ message because message is from a guest destination and this device is not an AudioAccessory
Query result: %@ for handle: %@ provider: %@
[WARN] Setting should ignore session to YES because TUICFInterface allowCall = NO for destinationID %@ and provider %@
[WARN] Setting should ignore session to YES because a call exists with sending status: %@
[WARN] Setting should ignore session to YES because screen time filtered message for destinationID %@ and provider %@ with emergency (%d)
[WARN] Setting should ignore session to YES because relay is not preferred, message provider is Telephony, and isDirectTelephonyCallingCurrentlyAvailable is YES
[WARN] Setting should ignore session to YES because relay is not preferred, message provider is FaceTime Audio, and isDirectFaceTimeAudioCallingCurrentlyAvailable is YES
[WARN] Setting should ignore session to YES because relay is not preferred, message provider is FaceTime Video, and isDirectFaceTimeVideoCallingCurrentlyAvailable is YES
[WARN] Setting should ignore session to YES because relay is not preferred, message provider is TinCan, and isDirectFaceTimeAudioCallingCurrentlyAvailable is YES
[WARN] Setting should ignore session to YES because no calls exist with an endpoint on the current device: %@
Launched by IMDaemon notification
Launched by application installed notification
Launched by application uninstalled notification
Could not create notification for XPC event %@
Caught SIGINFO. Dumping debug info.
Caught SIGUSR1
Caught SIGUSR2
Created call center: %@
Performing user configuration migration
Did not find default to enable LivePhotoXPCService - using old moments stack
Initialized CSDDaemon
Calling xpc_transaction_exit_clean() due to language change
failed to initialize temporary directory (%d): %s
failed to resolve temporary directory (%d): %s
User configuration changed
Used country code '%@' to determine international phone number representation: %@
Determined that invite should be %@ - (isWiFiAvailable=%d isWiFiAllowed=%d isCellularDataAvailable=%d isCellularDataAllowed=%d shouldOverrideNetworkAsAvailable=%d)
Invite received for service %@ account %@ from (fromID=%@) with context: %@
Recieved pending message of type %ld
Incoming call was denied with error %@ so ignoring chat: %@
Not handling pending message of type: %ld
Invite received for session %@ account %@ from (fromID=%@) with data: %@
Declining this invite because we found a sending chat with the same destination: %@
Incoming call was denied with error %@ so declining chat: %@
Ignoring incoming invite since shouldAcceptIncomingInvite is %d
Ignoring incoming invite since message with type=%@ was not an invite.
[WARN] Ignoring incoming invite since accompanying message was nil
provider: %@
Calling answer on chat %@
Not accepting invitation to call %@ since it is already Connected
Calling end on chat %@
Setting sendingAudio to YES for chat %@
Setting sendingAudio to NO for chat %@
Chat with matching UUID connected; attempting to fulfill pending answer call action %@
Chat did not provide a connection date; Failing answer call action %@
Failing answer call action for call because it disconnected before connecting: %@
[WARN] called for session %@ that was not the initiator (%d) or that already had a version set (%d)
sendInvitation self: %@
Session %@ is waiting. Sending invitation
Session %@ is not waiting. Not sending invitation
acceptInvitation self: %@
Session %@ is waiting. Accepting invitation
Session %@ is not waiting. Not accepting invitation
cancelInvitation self: %@
Session %@ is waiting. Canceling invitation
[WARN] Asked to cancel invitation with non-nil data and a concrete cancel reason, but that combination is unsupported
Session %@ is not waiting. Not canceling invitation
declineInvitation self: %@
Session %@ is waiting. Declining invitation
Session %@ is not waiting. Not declining invitation
reconnectSession self: %@
Session %@ started (shouldUseSocketForTransport: %d socket: %d, destination: %@)
Received invitation SENT for session %@ with tokens %@ shouldBreakBeforeMake %d
Session %@ ended with reason %d: %@
Session %@ appears to have ended with an unanswered reason: %d
Session %@ appears to have ended with a local hangup reason: %d
Session %@ appears to have ended with a remote hangup reason: %d
Session %@ appears to have ended with an accepted elsewhere reason: %d
Session %@ appears to have ended with a declined elsewhere reason: %d
Session %@ appears to have ended with a fatal reason: %d
Session %@ appears to have ended due to mismatched networks reason: %d
Received invitation ACCEPT with data for session %@ from %@
Received invitation CANCEL with data for session %@ from %@
Received invitation DECLINE with data for session %@ from %@
Received session MESSAGE for session %@ from %@
Found matching account: %@ for uuid: %@
Found matching account: %@ for uuid: %@ but it was not active and cannot be used for FaceTime.
[WARN] Server bag does not support quick relay
Server bag is not loaded. Assuming we can make a FaceTime call over quick relay
Starting FaceTime IDS chat using account: %@ destinations: %@ options: %@
Cannot start FaceTime IDS chat using handle %@ because IDS destination was '%@'
Cannot start FaceTime IDS chat using service %@ because account is not active: %@
Tried to make an outgoing call when we already had a ringing call with the same destination: %@
Requesting transaction to answer already-ringing call
Requested transaction to answer already-ringing call with UUID %@ failed with error %@
Successfully requested transaction to answer already-ringing call
[WARN] Not attempting to use IDSSession for outgoing FT call because server bag does not allow quick relay invitations
[WARN] Found a chat to upgrade: %@
Unable to convert to remoteIDSToken: %@
Unable to find existing chat for conversation: %@
Found existing chat: %@ for conversation: %@
[WARN] Failing action %@ we determined that chat %@ cannot be upgraded.
%@ Auto-upgrading because chatToUpgrade is %@, isConnected: %d, isVideo: %d, isSendingVideo: %d, isSendingAudio: %d isChatPendingUpgrade: %d
Upgrading chat: %@
Ending chat that is being upgraded: %@
[WARN] Could not find chat with UUID %@. All chats: %@
Found chat with UUID %@. Ending it: %@
[WARN] Not allowing media for chat as the call provider is not managing a call with UUID: %@
Matching sender identities %@ to IDS accounts %@
Updating FaceTime provider with configuration %@
service: %@ activeAccountsChanged: %@
Ignoring %@ because messageSendTime (%f) <= call.uplinkMutedSetTime (%f)
[WARN] Ignoring received request action message because it has a request action type we don't know how to handle: %@
transferFileAtURL: %@, destinations: %@
placing unzip results into folder %@
new directory urls: %@, unzippedDirectoryURL: %@
Error retrieving contents of directory at URL %@: %@
temporaryClientFileURL: %@, destinations: %@
Sending resource at URL %@ to destinations %@ with metadata %@
Successfully started sending resource with identifier %@
Failed to start sending resource with identifier %@: %@
%@ doesn't exist at client file url: %@
incomingResourceURL: %@ metadata: %@ fromID: %@
Copied resource to temporary URL: %@
successfully sent file with identifier: %@
failed to send file with identifier: %@, error: %@
[WARN] Unexpected nil clientFileURL for service: %@, account: %@, identifier: %@, didSendWithSuccess: %d, error: %@, clientFileURLByIdentifier: %@
Failed to copy URL at %@ to %@: %@
Failed to create directory at URL %@: %@
Error moving url %@ to %@: %@
Deleted contents at URL: %@
Failed to delete contents at URL %@: %@
Zipping directory at URL: %@, output to: %@
Error zipping directory at URL %@ to output URL %@
operation: %ld, inputURL: %@, outputURL: %@
Error occurred during IMFileCopierOperation type %ld on inputURL %@ and outputURL %@
completed operation: %ld, inputURL: %@, outputURL: %@
deleting temporary file at URL: %@
Calling fetch completion block for call source with identifier %@
Waiting for call source with identifier %@
[WARN] Timed out waiting for call source with identifier %@ to check in
[WARN] Couldn't identify device type based on model identifier (%@)
Enabling relay calling on secondary device %@.
Activating Thumper calling on secondary device %@ for telephony subscription with UUID %@.
User notification has been completed with response %lu and entered PIN %@
Showing service confirmation dialog to user
Requesting pin from iPhone
Canceling pin request from iPhone
PIN code entered with success=%d cancelled=%d
Device Pin Exchange received an incoming approval request
[WARN] We received an incoming pin code alert from a non-telephony device: %@
User tapped cancel on the Pin Display Alert
Request for pin exchange failed
[WARN] Ignoring request to group call because it is already grouped: %@
[WARN] Ignoring request to ungroup call because it isn't grouped: %@
Setting uplinkMuted to %d for call %@
Started conference successfully for answered relay call %@
[WARN] Failed to start conference connection when answering call %@: %@
Conference connection stopped (cleanly=%d) for answered call %@: %@
Started conference successfully for dialed relay call %@
[WARN] Failed to start conference connection when dialing call %@: %@
Conference connection stopped (cleanly=%d) for dialed call %@: %@
Started conference successfully for pulled relay call %@
Failed to start conference connection when pulling call %@: %@
Conference connection stopped (cleanly=%d) for pulled call %@: %@
[WARN] Ignoring request to hold call because it is already held: %@
[WARN] Ignoring request to unhold call because it isn't held: %@
Entitlement for key '%@' is non-nil but is of class %@ rather than an NSArray (%@), so assuming process %@ has no entitlements
Failed to grab assertion for process %@, reason: %@
[WARN] Cannot create emergencyTUHandle from CSDMessagingHandle %@
[WARN] Cannot create emergencyTULabeledHandle from CSDMessagingLabeledHandle %@
Received acknowledgement for message with identifier: %@. Removing from waiting messages.
[WARN] Received acknowledgement for unknown message with identifier: %@
Received successful didSend for message with identifier %@ using account %@
Received unsuccessful didSend for message with identifier %@ using account %@: %@
Incoming message of type %@ from destination %@ device %@: %@
[WARN] Received message %@ from device %@ but it is not the default paired device
[WARN] No device found for fromID %@. All devices: %@
[WARN] Removing IDSSendMessageOptionForceLocalDeliveryKey key from sendMessage options because pairedDeviceUniqueIDOverride exists
Not attempting retry since message is no longer waiting for acknowledgement: %@
[WARN] Not attempting retry since we are out of retry attempts for %@ message with identifier: %@
Retrying message send with identifier: %@
Sending %@ message with identifier %@ and options %@ to destinations %@
identifier %@ message %@
Successfully sent %@ message
Setting up reliable message delivery for %@ message with identifier: %@ and retry attempts left: %lu
Failed to send %@ message: %@
[WARN] No paired device, so unable to send message %@
photoURL: %@ videoURL: %@
saved photo with localIdentifier: %@ error: %@
saveVideoWithURL: %@
Saved video with localIdentifier: %@ error: %@
Called begin listening block:%@
Processing delayed actions:%@
Not processing delayed actions because we no longer have a call
providerDelegate: %@ callUUID: %@ dateStartedConnecting: %@
Ending call since dataSource is not tracking any call for callUUID: %@
providerDelegate: %@ callUUID: %@ dateConnected: %@
providerDelegate: %@ callUUID: %@ dateEnded: %@ endedReason: %ld failureContext: %@
Ending call with UUID %@ on other provider delegate %@ because ended reason was %ld
providerDelegate: %@ transaction: %@
providerDelegate: %@ ending callUUID %@
[WARN] action: %@
modernFTDestinations: %@
gftOneToOneDestinations: %@
Created join call action: %@ for gftOneToOneDestinations: %@
Can't perform start call action since queries did not return any destinations
Skipping to invite remote destinations since we don't have a call tracking any longer
Invited push tokens via IDS: %@ wasCanceled: %d
No longer handling call with UUID %@, requesting end
Could not initiate FaceTime call - No IDS or IMAV call returned for handle %@
Not sending IMAV invites because IDS session was canceled
Perform join call with action UUID: %@
Failing join call action since it does not meet join call action requirements
Failing join call action since we are already pending a join on this same call UUID elsewhere.
Failing join call action isVideo: NO and videoEnabled: YES
Updated to action: %@
Found a IMAV chat that is being tracked for action: %@
Created start call action: %@ for modernFTDestinations: %@
Can't perform join call action since queries did not return any destinations
Sending JoinCallAction to FaceTimeConversationProviderDelegate- action: %@
Sending JoinCallAction to CSDGFTServiceConversationProviderDelegate- action: %@
[WARN] No provider delegate is managing call for action %@
Delaying action %@
Fullfilling action %@ because call has ended
Asked to deliver voip token %@ to application %@
Asked to deliver message %p to application %@
[WARN] Message transport type is unknown; cannot enqueue message %@
Delivering voip token %@ to application %@
Pending VoIP token delivery until a connection exists
Delivering %lu network extension payload(s) to application %@
Pending Network Extension payload deliveries until a connection exists
Delivering %lu VoIP payload(s) to application %@
Pending PushKit VoIP payload deliveries until a connection exists
Invalidating process assertion for bundle identifier %@ from completion handler
[WARN] Message transport type is unknown; cannot deliver message %@
[WARN] InCallService has multiple process identifiers: %@
InCallService process state is now %ld
Initialized inCallServiceProcessState to %ld
Started tracking SpringBoard process with PID %@
SpringBoard process has changed PID from %@ to %@
conversation: %@ activitySessions.count: %lu
sendingCall %d activeCall %d heldCall %d disconnectingCall %d ringingCall %d bargeCall %d
resolvedAVLessConversation groupUUID: %@
callsChangedForCallCenterObserver
%s: Updating status bar triggered by removedActiveConversation for conversation UUID %@
%s: Updating status bar triggered by addedActiveConversation for conversation UUID %@
%s: Updating status bar triggered by stateChangedForConversation for conversation UUID %@
%s: Updating status bar triggered by activitySessionsChangedForConversation for conversation UUID %@
%s: Updating status bar triggered by activeRemoteParticipantsChangedForConversation for conversation UUID %@
%s: Updating status bar triggered by localVideoToggledForConversation for conversation UUID %@
%s: Updating status bar triggered by handoffEligibilityChangedForConversation for conversation UUID %@
Setting muted to %d for %@
[WARN] setMuted:forIdentifier: no conference connection found for identifier %@. All conference connections: %@
Setting sending audio to %d for %@
[WARN] setSendingAudio:forIdentifier: no conference connection found for identifier %@. All conference connections: %@
Asked to prepare conference connection %@ remoteInviteDictionary %@
Not preparing a new conference because another conference already exists: %@
Attempted to prepare a new conference connection with the same identifier as an existing conference connection: %@
Asked to start conference for identifier %@
We already have an active conference. Invoking this conference connection's didStart immediately
Did not find conference connection to start for identifier %@. All conference connections: %@
Asked to send data to conference for identifier %@
Asked to update conference for identifier %@ with isUsingBaseband=%d disableAudio=%d
Updating device role for identifier %@ to %d
Did not find conference connection for identifier %@. All conference connections: %@
Setting conference connection active: %@
Asked to prepare to stop conference for identifier %@
Pausing audio and setting up timeout for conference connection: %@
It's been %fs since asked to prepare to stop conference and conference connection still exists: %@. Forcefully cleaning up all conference connections for conference %@
Asked to stop conference for identifier %@
Cleaning up conference connection %@
Also cleaning up conference connection which is already prepared to stop %@
reason: %ld error: %@
Relay conference ended in failure (reason: %ld): %@
Setting up close connection timeout because conference ended reason was normal
[WARN] Timed out waiting for conference %@ to close connection after receiving end
[WARN] Unable to get URL for filename '%@'
[WARN] Unable to get standardized URL for URL '%@'
Setting up Pin Exchange controller
Requesting PIN from device %@
[WARN] accountsSupportSecondaryCalling=NO. Displaying mismatched accounts notification
Canceling all PIN requests
[WARN] Could not find device for unique ID %@
The entered PIN code is correct
Activated Thumper for requesting device %@
[WARN] The entered PIN code is incorrect, could not register device.
The user entered no code... or the code entered was not an NSString
We were unable to send the PIN to the other device to be displayed, Sorry
Sending a PIN code to device %@ to display to enroll them into Thumper
[WARN] Ignoring request to send PIN code because we already have one pending for device with unique ID %@
Could not obtain caller ID from Thumper IDS service %@
Sending IDS action %@ to device %@ with message %@
Thumper IDS action sent to device with success: %@ error: %@ identifier: %@
[WARN] Displaying PIN error notification
[WARN] Displaying mismatched accounts notification
[WARN] Displaying slots full notification
Received message for service %@ from device %@ (isHSATrusted=%d): %@
Ignoring pin request: There is already a pending pin request that has not yet completed.
One sender identity exists; continuing Thumper registration using UUID %@
Multiple sender identities exist; checking whether caller ID %@ matches a sender identity in %@
[WARN] Aborting Thumper registration; multiple sender identities exist but caller ID not supplied
Aborting Thumper registration; could not obtain sender identities from call provider %@.
Device requesting PIN is HSA trusted. Forgoing PIN exchange and enrolling the device immediately
Received request to enroll device %@ in Thumper for sender identity with UUID %@
[WARN] Aborting Thumper registration; could not obtain sender identity UUID.
Received didSendWithSuccess=YES for message with identifier %@
Received didSendWithSuccess=NO for message with identifier %@: %@
InCallService has changed process state to %ld
InCallService has been suspended; invalidating its XPC client connections.
Initialized capability state: %@
Updating clients with new call capabilities state: %@
Updating paired host device state
TUCallCapabilitiesXPCServer - callCapabilitiesState request from %@
TUCallCapabilitiesXPCServer - setRelayCallingEnabled: %d
TUCallCapabilitiesXPCServer - setRelayCallingEnabled: %d forDeviceWithID: %@
TUCallCapabilitiesXPCServer - setWiFiCallingEnabled: %d senderIdentityUUID: %@
TUCallCapabilitiesXPCServer - setWiFiCallingRoamingEnabled: %d senderIdentityUUID: %@
TUCallCapabilitiesXPCServer - setVoLTECallingEnabled: %d senderIdentityUUID: %@
TUCallCapabilitiesXPCServer - setThumperCallingEnabled: %d senderIdentityUUID: %@
TUCallCapabilitiesXPCServer - setThumperCallingAllowed: %d secondaryDeviceID: %@ senderIdentityUUID: %@
TUCallCapabilitiesXPCServer - setThumperCallingAllowedOnDefaultPairedDevice: %d senderIdentityUUID: %@
TUCallCapabilitiesXPCServer - endEmergencyCallbackMode
TUCallCapabilitiesXPCServer - invalidateAndRefreshWiFiCallingProvisioningURLForSenderIdentityUUID: %@
TUCallCapabilitiesXPCServer - invalidateAndRefreshThumperCallingProvisioningURLForSenderIdentityUUID: %@
TUCallCapabilitiesXPCServer - requestPinFromPrimaryDevice
Using the following account for the PIN request: %@
No device found for account %@. All accounts: %@
[WARN] No primary Thumper account found for PIN request. This should only happen because an account exists but has no empty device slots. All accounts: %@
TUCallCapabilitiesXPCServer - cancelPinRequestFromPrimaryDevice
Received device list changed notification: %@
Received device capability changed notification: %@
Received accounts changed delegate callback
Received FaceTime availability changed delegate callback
Received outgoingCallerIDChanged delegate callback
Disabling Thumper for subscription with UUID %@
Received telephonyCallCapabilitiesChanged delegate callback
[WARN] Disabling support because %@ was set to YES
[WARN] Enabling support because %@ was set to YES
Found primary Thumper account ID %@
Thumper calling is not supported for account ID %@
Setting associated Thumper account ID %@
_setWiFiCallingEnabled: asking to change value from %d to %d
_setWiFiCallingEnabled: not updating value. Is currently %d and asked to set to %d
_setVoLTECallingEnabled: asking to change value from %d to %d
_setVoLTECallingEnabled: not updating value. Is currently %d and asked to set to %d
_setWiFiCallingRoamingEnabled: asking to change value from %d to %d
_setWiFiCallingRoamingEnabled: not updating value. Is currently %d and asked to set to %d
_setThumperCallingEnabled: asking to change value from %d to %d
_setThumperCallingEnabled: not updating value. Is currently %d and asked to set to %d
Changing Thumper calling allowed value from %d to %d on secondary device ID %@
[WARN] Not changing Thumper calling allowed value. No device slots remain for this device. Displaying notification to the user
[WARN] Could not set Thumper calling allowed for secondary device with identifier %@; unable to retrieve local Thumper account from call capabilities %@
[WARN] Could not retrieve account ID from Thumper capabilities %@
_setThumperCallingAllowed: not updating value. Is currently %d and asked to set to %d on secondary device ID %@
[WARN] Could not find Thumper capabilities for sender identity UUID %@
[WARN] No cloud calling device appears to be a default paired device: %@. Ignoring setThumperCallingAllowedOnDefaultPairedDevice request
[WARN] Could not obtain UUID from sender identity capabilities state %@
defaultPairedDeviceExists: %d
telephonyDeviceExists: %d, relayCapableDeviceExists: %d, defaultPairedDeviceExists: %d
_setRelayCallingEnabledDefault: changing value to %d
_setRelayCallingEnabled: Changing value from %d to %d
_setRelayCallingEnabled: Not updating value. Is currently %d and asked to set to %d
setRelayCallingEnabledDefault:forDeviceWithID: changing value to %d for %@
_setRelayCallingEnabled:forDeviceWithID: Changing value from %d to %d for %@
_setRelayCallingEnabled:forDeviceWithID: Not updating value. Is currently %d and asked to set to %d for %@
Initialized pairedHostDeviceState: %@
[WARN] Could not de-serialize pairedHostDeviceStateData %@
[WARN] Saved pairedHostDeviceStateData was not an NSData type (class=%@): %@
No saved paired host device state found
Initializing new paired host device state with all values set to NO
_supportslaunchingInCallApplicationForIncomingCall: %d
dialRequest: %@ displayContext: %@
Coordinated alert request came back with bestIsMe: %d info: %@ error: %@
Starting coordinated alert request to determine ringtone un-suppression: %@
faceTimeIDSStatus for destinationID: %@ is: %@
Invalidating display context for %@
Posting %@ because relayClientTransport changed from %@ to %@ for %@
Posting %@ because mayRequireBreakBeforeMake changed from %d to %d for %@
Posting %@ because hasStartedOutgoing changed from %d to %d for %@
Posting %@ because hasAudioInterruption changed from %d to %d for %@
activeRemoteParticipants changed from %@ to %@ for %@
Posting %@
Audio device list changed
[WARN] No audio route collection found in audioRouteCollections: %@ for audio category %@ and audio mode %@ for call %@
Found preferred AVAudioDevice: %@
Requesting initial state of CarKit's DND assertion
Received initial CarKit DND assertion: %d
Unable to fetch CarKit DND assertion: %@
Updating isCarModeActive to %d
[WARN] Timeout occured fetching CarPlay do not disturb status.
Updating isCarPlayDeviceConnected to %d
Device first unlock block invoked, attempting to retrieve active conversations
Sent message with identifier %@ to %@
Error sending message: %@
Using local callerID: nil, could not get strong self
Using local callerID: %@
Could not find caller ID when creating conversation
UUID: %@ groupUUID: %@ localMember: %@ fromStorage: %d report: %@
UUID: %@ remoteMembers: %@
Asked to invite specific conversationUUID: %@ participantDestinationIDs: %@
localDeviceDestination: %@ oneToOneModeCapableLocalDestinations: %@
conversationUUID: %@ participantDestinationIDs: %@
UUID: %@ groupUUD: %@ localMember: %@
Delegate should handle conversation update: %@ for provider: %@
notifyDelegatesOfChangedLinkDescriptors: -- no link descriptors, not updating delegates
Retrieving conversation links failed with error %@
handleConversation:receivedBlobRecoveryRequest:fromHandle: options: %u from: %@
handleConversation:receivedBlobRecoveryRequest:fromHandle: Sending message: %@ to: %@
[WARN] handleConversation:receivedBlobRecoveryRequest:fromHandle: No local participant for conversation UUID: %@
handleConversation:receivedBlobRecoveryResponse:fromHandle: from: %@
[WARN] handleConversation:receivedBlobRecoveryResponse: could not add or update participant: %@
[WARN] handleConversation:receivedBlobRecoveryResponse:fromHandle: %@ <!===> %@
[WARN] handleConversation:receivedBlobRecoveryResponse:fromHandle: Could not find participant in message: %@
Not updating handoff eligibility %@ because lockdown mode is enabled
Handoff changed to advertise %@ for identifier %llu, uplink muted %@, sending video %@
Handoff changed without eligibility, so stopping advertising
Handoff eligibility set to nil for GreenTea device: %@
Handoff eligibility added to conversation: %@
Handoff eligibility removed from conversation: %@
Ignoring route identifier change for handoff as no conversations are currently joined.
Conversation manager alerted to new selected audio route ID %@, letting my other devices know for conversation UUID %@
Conversation manager alerted to unselected audio route, letting my other devices know for conversation UUID %@
Sending UpdateJoinedMetadata message %@ to my other devices: %@
Posting session started event from participant %@ for session %@
Posting session ended event from participant %@ for session %@
Asked to create ActivitySession %@ on conversation UUID: %@ with trusted fromHandle: %@
[WARN] Conversation message of type Encrypted received with either no encryptedMessage or enclosedEncryptedType. Dropping message.
[WARN] ConversationMessage of type Encrypted with enclosed type of %d which we do not have support for, dropping.
Received Encrypted message with enclosed type of LetMeInRequest from handle %@
[WARN] Could not retrieve a pseudonym string from the message context.
[WARN] Let Me In request was not sent to a pseudonym. Dropping message.
Could not decrypt let me in request with error %@
[WARN] Decrypted conversation message but was not a let me in request: messageType: %d
[WARN] Provided link is %@, which was not a valid TUConversationLink.
Received Encrypted message with enclosed type of LetMeInResponse from handle %@
[WARN] No pending conversation found for link %@
[WARN] Pending conversation's let me in request state is %ld instead of Requested
[WARN] Pending conversation's let me in key agreement is either nil (%@) or exhausted (%@)
[WARN] Let Me In response was not sent to a pseudonym. Dropping message.
[WARN] Could not decrypt let me in response
[WARN] Decrypted conversation message but was not a let me in response messageType: %d
Could not find link for pseudonym %@, dropping let me in request. Error: %@
Dismissing let me in because link has originator handle of %@, which is not one of our active local handles %@
[WARN] GreenTea device does not support multiple remote members. remoteMembers = %@
Let me in requestor %@ is a handle that has already been kicked, rejecting let me in. conversation.kickedMembers: %@
Let me in requestor %@ is a handle that has already been rejected, rejecting let me in. conversation.rejectedMembers: %@
Let me in requestor %@ is a handle that is already a member of the call; Let Me In not required. conversation.remoteMembers: %@
[WARN] Ignoring let me in response message, as it is missing a groupUUID (%{public}@), missing a link (%{public}@), or does not specify approval/rejection (%{public}@): %@
[WARN] Let me in response is not for the provided pending conversation. Ignoring.
[WARN] Let me in response is not from the pseudonym defined in the link %@, instead is from %@
Finished processing let me in response (approved: %{public}@) for groupUUID: %@. Approver handle is %@.
Not sufficiently formed link created/changed message, type: %d hasLink: %d linkGroupUUID: %@ conversationGroupUUID: %@
[WARN] Invalid TUConversationLink for link created/changed message (it was nil)
[WARN] Sender %@ did not match link's originator handle %@ for link created/changed message %@
[WARN] Link already exists on conversation %@ for link created message %@
[WARN] GreenTea device does not support link created/changed message because invitedMemberHandles > 1, message: %@
[WARN] Sender %@ is not part of conversation UUID %@.
[In-Advance] Received link created/changed message from %@ with link %@
[WARN] GreenTea device does not support link creation message %@ because invitedMemberHandles > 1
Failed to persist received link to data store with error %@
[Ongoing] Received link created/changed (update: %{public}@) message for conversation UUID %@ from %@ with linkDescriptor %@
[WARN] Did not set conversation link %@ to conversation UUID %@
[In-Advance] Link successfully stored (update: %{public}@) from %@ with linkDescriptor %@
Not sufficiently formed link invalidation message %@
[WARN] Invalid TUConversationLink for link invalidation message %@
[WARN] Sender %@ did not match link's originator handle %@ for link invalidation message %@
We are not tracking any stored link for link invalidation message %@
Failed to remove received link from data store with error %@
[WARN] Dismissing let me in delegation because no groupUUID was set
[WARN] Dismissing let me in delegation because the forHandle is blocked {forHandle: %@, fromHandle: %@}
Received LMI delegation, unable to parse forHandle -- ignoring! {fromHandle: %@, message.letMeInDelegationHandle: %@}
Received LMI delegation, unable to parse transactionUUID -- ignoring! {fromHandle: %@, message.letMeInDelegationUUID: %@}
Received LMI delegation message! {fromHandle: %@, forHandle: %@, transactionUUID: %@}
[WARN] Dismissing let me in delegation response because no conversation was found for link's groupUUID: %@
Received LMI delegation response, unable to parse transactionUUID -- ignoring! {fromHandle: %@, message.letMeInDelegationUUID: %@}
Received LMI delegation response message, without letMeInApproval -- dropping! {fromHandle: %@, forHandle: %@, transactionUUID: %@}
Received LMI delegation response message! {fromHandle: %@, forHandle: %@, transactionUUID: %@, message.letMeInApproval: %@}
No invited members or conversation members were specified; no need to send messages (link: %@, conversation UUID: %@)
[WARN] UpdateJoinedMetadata conversation message was sent by a non-local handle %@, dropping message.
[WARN] UpdateJoinedMetadata conversation message was missing a group UUID, dropping message.
[WARN] UpdateJoinedMetadata conversation message was missing a joined metadata object, dropping message.
[WARN] UpdateJoinedMetadata conversation message was missing a valid participant, dropping message.
[WARN] No conversation was found for group UUID %@, dropping UpdateJoinedMetadata message.
[WARN] Could not find a matching participant for sender %@, dropping UpdateJoinedMetadata message.
Per UpdateJoinedMetadata message, the local user was using %@ audio route from another device with participant identifier %llu in conversation UUID %@
Per UpdateJoinedMetadata message, the local user was using a default audio route from another device with participant identifier %llu in conversation UUID %@; no need to track a route.
Sending data from: %@ to: %@
blob response, removing %@ from options: %@
[WARN] Could not convert %@ to IDS destination
Failed broadcasting file. Missing local member on conversation: %@
Broadcasting file from: %@ to: %@
Error broadcasting image %@
Sent broadcast image message with id %@
Missing local member on conversation: %@
Broadcasting data from: %@ to: %@
conversation: %@ broadcastImageForSession: %@
Error transmitting activity session %@ image. Failed to write to path %@ with error %@
(broadcastImageForSession activity UUID: %@ success: %d).
Failed to delete image file after sending image for session %@ error %@
conversation: %@ broadcastLightweightEndorsementForAddedMembers: %@
conversation: %@ has a splitSessionSecondary (%@), sending verification push
(success: %d).
[WARN] Couldn't create handle from participant destination identifier %@
[WARN] Couldn't find participant destination identifier %@ in members %@
[WARN] Couldn't decode message due to invalid data length.
[WARN] Couldn't decode message due to invalid groupUUID
[WARN] Couldn't find conversation with groupUUID %@
[WARN] Received unknown participant update message
[WARN] Unable to find members from message
Message doesn't have intent key set, dropping message
Kick message not permitted, dropping message
Invalid activity session update, dropping message
Invalid blob respnose, dropping message
Message type not permitted for member type, dropping message
Invalid vouching message, dropping message
Update type & payload not allowed fromHandle: %@
Not all lightweightMembers have an associated lightweightPrimary in the conversation, dropping message fromHandle: %@
Received an empty message of type: %@
FromHandle: %@ is trying to kick itself (%@)
Originator not set on message type: %@
Originator on message (%@) is not equal to fromHandle: %@
Message has an unrecognized type, dropping message
blob response verification can't function without an existing conversation
Received an invalid count of participants on type: %@
Failed to get participant from BlobResponse message
FromHandle: %@ is trying to add a different participant handle (%@)
FromHandle: %@ is trying to add a lightweight participant, but we can't find the lightweightMember
Couldn't find member for fromID: %@
Member: %@ doesn't have a primary
Lightweight member %@ doesn't have their primary in the conversation
Rejecting join update since we don't have an existing conversation, fromHandle: %@
Rejecting join update since it is trying to add members to the conversation, fromHandle: %@
Rejecting update since its trying to add a lightweightMember not associated with their device, member: %@ fromHandle: %@
Member verification can't function without an existing conversation
Invalid amount of members trying to be vouched (%lu)
FromID: %@ attempting to vouch for an invalid member %@
No local lightweightMember found for handle trying to be vouched
FromHandle: %@ trying to vouch for another member's lightweightMember
Refreshing active pariticpants for active conversations
[WARN] _incomingPendingConversationsByGroupUUID: issue fetching links for pending incoming {error: %@}
CSDConversationManager beginning to listen on service:%@
[WARN] Not adding cached conversation with UUID %@ because we already added equivalent conversation with UUID %@
Reviving cached conversation with groupUUID: %@ remoteMembers: %@ lightweightMembers: %@
[WARN] Failed to create newActivitySession for activitySession %@
Failed to create activitySession from persistence since we couldn't find the trusted fromHandle on activitySession: %@
shouldClearDefaults: %d - Removing all conversations
groupUUID: %@ remoteMembers: %@
Found existing conversation %@ but not reusing it since it's leaving and we're trying to join a U+1 call
No conversation currently exists to join: %d, so creating a new one isConversationVideoUpgrade: %d
[WARN] The request specified that local member %@ should be used, but the useable handles for FaceTime are %@. We cannot proceed with a handle that's not registered for FaceTime on this device.
Unable to create local member. Caller ID: %@
Found existing conversation with UUID: %@
Activating cached conversation from storage with UUID: %@ as someone seems to be interested in it.
joinExistingConversationWithUUID: %@ context: %@
[WARN] Could not find conversation with UUID: %@
Ignoring request to join conversation with UUID: %@ since conversation is already joined
Request to join conversation is trying to change avMode on conversation UUID: %@
[WARN] Leaving existing conversation with UUID: %@ in favor of new conversation with UUID: %@
Not leaving converastion because hasAnyActivitySessions: %@, isOneToOneEnabled: %@
Updating context to use isOneToOneModeEnabled=true %@
Conversation join is for a new activity: %@, broadcasting image.
LMI: Creating pending conversation for link: %@, localMember: %@
LMI: Cannot find pending conversation for pseudonym %@
LMI: Requesting membership in pending conversation for link %@
LMI: Could not encrypt let me in request with error %@
Error sending request to join conversation
Sent let me in request for link %@
LMI: Notifying pending member %@ of our response (approved: %@) to their let me in for conversation UUID %@
[WARN] Response key missing from LMI response; cannot encrypt to send without. Aborting.
LetMeInResponse message assembled as %@
LMI: Could not encrypt let me in response
Error sending request to join conversation.
Sent let me in response (approved: %@) for pending member %@
[WARN] Could not find conversation with UUID %@. All conversation UUIDs: %@
Sending invitation message %@
UUID: %@
[WARN] Could not find conversation with UUID %@. All conversations UUIDs: %@
oneToOneMode is not enabled - ignoring to send video upgrade message
Updating pending conversation with pseudonym: %@, conversation group UUID: %@
Not setting screenEnabled to %@ because conversation %@ is already in that state
Setting screen enabled %@ with attributes %@ for conversation UUID: %@
Not enabling ScreenSharing because we already have a queued up request %@
Upgrading to Audio mode since screenEnabled is YES
Queued up screenEnable request: %@
Removing all pending screenEnabled blocks since screenEnabled=NO
Unable to find conversation with UUID: %@
conversationUUID: %@ remoteMembers: %@
[WARN] Could not find conversation with conversationUUID %@. All conversations UUIDs: %@
conversationUUID: %@ otherInvitedHandles: %@
GreenTea devices are not supported to have this GFT conversation UUID: %@
Attempted to add remote members without an active voucher manager.
Signed complementary association voucher for member %@: %@
Failed to sign complementary association voucher for member %@ due to error: %@
Not adding %@ to invited member handles of link because destinationIdIsTemporary(%@), destinationIdIsPseudonym(%@), or handle is the originator of link (%@)
Not adding %@ to invited member handles of link because it is already an invited member handle of the link
Not adding any of the following members to the invited handles of the link: %@
Displaying SharePlay not supported alert with message: %@
[WARN] Not displaying SharePlay not supported alert because SharePlay features are disabled.
conversationUUID: %@ update messagesGroupName: %@
conversationUUID: %@ update group photo
ConversationManager asked to create activitySession for activitySession: %@ on conversation UUID: %@
Failed to create CPActivitySession for activitySession: %@
Not broadcasting activity session creation for static activity
conversationUUID: %@ activity: %@
[WARN] User declined authorization to create activity session for activity: %@
leave conversationUUID: %@ activitySession: %@
end conversationUUID: %@ activitySession: %@
Asked to present dismissal alert for activitySessionUUID: %@ conversationUUID: %@
SharePlayWithAirplay ff is turned off, not changing activity session airplay state
Setting using airplay: %{public}@ on activity session: %@
Setting activity authorization %d for %@
Setting auto expanse enabled %@
Received launchApplication request for UUID: %@ forceBackground: %@
Launch request for UUID: %@ is trying to activate a staged activitySession. %@
Tried to launch placeholder activity.
Failed to find conversation that has activitySession %@
Not launching application because SharePlay is not allowed
Not requesting authorization since we don't have a CPActivitySession for: %@
Failed to request authorization error: %@
Authorizing session UUID: %@
Requesting activity authorization for %@
Revoking background authorization for bundle ID for %@
Handling participant update message: %@ from: %@
[WARN] Ignoring message %@ because a participant was not specified.
[WARN] Ignoring message %@ because multiple participants were specified.
[WARN] Ignoring participant update message %@ because participant handle %@ does not match message sender %@.
Trying to update participant, but one is already found... duplicate participants on conversation? conversation: %@
Couldn't find participant for update message: %@ on conversation: %@
Found participant for update message: %@
Participant %@ is already in audioVideoMode: %ld... Not handling update!
Conversation UUID: %@ has avMode: %lu and the desiredAudioVideoMode is %lu
Evaluating if we should notify delegates shouldShowInvitationRingingUI: %@ shouldInvokeDelegateBasedOnRemoteHandle: %@
Triggering a ringing call for participant update from: %@
Received participant update message to downgrade, but we're in a U+1 call so we should also downgrade!
Changing conversation AVMode to %{public}lu since conversation is waiting
Received message from %@ to associate conversation %@ with messages group
[WARN] Message did not contain a valid activitySession.
Received remove activity session message %@ from %@
Unable to decode UUID from activitySession %@
Updating activities from message: %@
Updating activity images from message: %@
[WARN] Not updating activity, couldn't find activitySession || stagedActivitySession with UUID: %@
[WARN] Not updating activity, no activity UUID was provided in message: %@
Not updating activity because handle: %@ isn't the originator of the activity: %@
No image provided in update message for activity: %@
Error while generating preview image for activity session: %@
[WARN] Not updating image for activity UUID: %@ activity session currently has different activity UUID: %@
Updating activity image for activity session with UUID: %@
Updating activity image for staged activity session: %@
Received endorsement message: %@
Received new activity for conversation %@
Not adding activity session, as not all participants are on the latest SharePlay version
Sending conversation back since new activitySession doesn't support aTV handoff. session: %@
Failed to add activitySession: %@ to conversation UUID: %@
Not posting start session event. Could not find participant for handle %@ for session %@
Ignoring guest mode message since guest mode is not currently supported
Message did not contain updated guest mode state
Received guest mode update for participant in conversation %@
Ignoring guest mode update message because the from-handle %@ did not match any active remote participants %@
conversationUUID: %@ presentationContexts: %@
conversationUUID: %@ member: %@
Kicking member %@ from conversation %@
[WARN] Ignoring nickname update message because the from-handle %@ could not be normalized.
Received nickname update message, set nickname to "%@" from handle %@ for conversation UUID %@
Ignoring nickname update message because the from-handle %@ did not match any remote members %@
conversationUUID: %@ downlinkMuted: %d
[WARN] Could not find conversation with conversationUUID %@. All conversation UUIDs: %@
coversationUUID: %@ participantid: %llu audioEnabled: %d
[WARN] Could not find conversation with conversationUUID %@. All conversations: %@
conversationUUID: %@ participantid: %llu videoEnabled: %d
Ignoring local member's nickname update request because their nickname "%@" is already identical
conversationUUID: %@ set local member's nickname to %@, previously %@
Asked to get latest remote attributes, returning: %@
Retrieved %lu conversation link descriptors %@
Failed to retrieve links with error %@
Received request from TU client to generate link for conversation UUID: %@
GreenTea devices cannot generate conversation links for Group FaceTime (remoteMembers > 1)
Conversation was initiated from messages, a link cannot be generated in this case. {messagesGroupUUID: %@}
Link for conversation with UUID %@ already exists.
Failed to generate link for groupUUID %@ with error %@
Fetched non-local inactive link %@
Failed to fetch inactive link, generating new links for %@
Link generation complete, returning to completionHandler for: %@
Did not set conversation link as one already existed: %@
Received request from TU client to generate link with invitedMemberHandles: %@
GreenTea devices cannot generate conversation links for Group FaceTime (invitedMemberHandles > 1)
[WARN] No invited member handles were of eligible handle types and/or had normalized values, canceling link generation
[WARN] Local user has no active handles, cannot proceed with link generation
We activated an inactive link, returning that.
Creation of converation link with groupUUID %@ invited handles %@ failed with error %@
Adding invited handles %@ to %@ failed with error %@
Not invalidating link since it's not being tracked by our link manager.
Asked to invalidate link %@
Renewing link for reason %lu
Failed to renew link %@ with error %@
Generating cache of inactive links for originator handle %@
Asked to retrieve inactive link for handle %@
Failed to fetch inactive link, generating more for handle %@
Asked to activate conversation link %@
Asked to set name "%@" for link %@
[WARN] Link name setting provided error %@
Link name successfully set for updated link %@
TU client asked to schedule a syncing of activated conversation links {initial: %@}
Sending recovery messages to local user's other devices in an attempt to recover links for pseudonyms %@
TU client asked for link sync state {includeLinks: %@}
For conversationUUID: %@, user has approved let me in for pending member: %@
[WARN] Failed to approve let me in request for pending member %@. Could not find conversation with conversationUUID %@. All conversation UUIDs: %@
For conversationUUID: %@, user has rejected let me in for pending member: %@
[WARN] Failed to reject let me in request for pending member %@. Could not find conversation with conversationUUID %@. All conversation UUIDs: %@
For conversationUUID: %@, user has requested to ignore all LMI requests.
[WARN] Failed to ignore let me in requests. Could not find conversation with conversationUUID %@. All conversation UUIDs: %@
conversationUUID: %@ messagesGroupName: %@
%ld conversationLink should be removed, not needed anymore %@
conversationLink was removed since it was not needed anymore {pseudonym: %@, success: %@, error: %@}
removeConversationWithUUID: %@
[WARN] Could not find conversation for container with UUID %@. All conversation UUIDs: %@
includeMetricsReport onConversationWithUUID: %@
[WARN] Dropping metrics report, could not find conversation with conversationUUID %@. All conversation UUIDs: %@
Requested avMode -> none, but leaving instead since this is a 1:1 or screensharing call
Requesting to disconnect call %@
Found conversation that we want to register the messagesGroupUUID on
Couldn't find conversation UUID %@ to register messagesGroupUUID on
setupPendingConversationCleanupTimer: %f %f %@
cleanupExpiredPendingConversations: %f %@
conversationChanged: %@
conversationConnectionDidStart UUID: %@
conversationInvalidated UUID: %@
conversationLink should be removed after call was invalidated %@
conversationLink finished removing after call was invalidated {success: %@, error: %@}
conversation: %@ addedActiveParticipant: %@
At least one participant in conversation %@ does not support SharePlay. Invalidating session %@
Conversation UUID %@ was continued on another device as participant %@, leaving...
Leaving immediately due to handoff since the conversation with UUID: %@ supports leave context or was GFT before handoff
Delaying leaving due to handoff since the conversation with UUID: %@ does not support leave context and was 1:1 before handoff
Added participant %@ is a handoff continuation for identifier %llu, but my local identifier is %llu. Not leaving.
There was no participant association for added participant: %@
executing queued up screenEnabled block since local participant mode changed
For AVLess to AV upgrade of conversation UUID %@, sending an AddActivitySession message to devices lacking AVLess support: %@
conversation: %@ removedActiveParticipant: %@
conversation: %@ participant: %@
Requesting blob recovery for %@
Sending decline message for %@
conversation UUID: %@ activitySessionChanged: %@
Disabling screensharing since another session: %@ became active
Scene association changed for activity session: %@
App launch state changed to: %lu for activity session: %@ on conversation with UUID: %@
conversation: %@ activityChangedOnSession: %@
(success: %d)
Did send activity removal message successfully? %d
Not posting session ended event. Error finding participant for end session %@
conversation: %@ addedMembers: %@ triggeredLocally: %@
Found staged ActivitySession on conversation. Distributing image. %@
Found ActivitySession on conversation. Distributing image. %@
conversation: %@ triggered join.
Let me in request was sent to invalid pseudonym %@, ending pending conversation
Running callback for message %@, which has been received by the IDS daemon
[WARN] service:account:incomingData:fromID:context: Empty from ID. Dropping message.
Ignoring IDS resource; already received via conduit IDS proxy.
Received resource URL with identifier %@ from %@
[WARN] service:account:incomingResourceAtURL:fromID:context: Empty from ID. Dropping message.
[WARN] service:account:incomingResourceAtURL:fromID:context: Empty data. Dropping message.
[WARN] service:account:incomingResourceAtURL:fromID:context: Empty CSDMessagingConversationMessage. Dropping message.
[WARN] service:account:incomingResourceAtURL:fromID:context: Got unsupported messaged type %@. Dropping message.
service:account:incomingData:fromID:context: already proxied IDS message with ID %{mask.hash}@, ignoring.
service:account:incomingData:fromID:context: receiving IDS message from %{mask.hash}@ with ID %{mask.hash}@
service:account:incomingData:fromID:context: receiving proxied IDS message from %{mask.hash}@ with ID %{mask.hash}@
service:account:incomingResourceAtURL:metadata:fromID:context: receiving proxied IDS resource from %{mask.hash}@ with ID %{mask.hash}@
received proxied group participant update
Received message with identifier %@ from %@ Attempt count %@
[WARN] service:account:incomingData:fromID:context: Empty data. Dropping message.
[WARN] Received CSDMessagingConversationMessage with Type of %@
[WARN] service:account:incomingData:fromID:context: Empty destinationID after IDSCopyRawAddressForDestination. Dropping message.
[WARN] service:account:incomingData:fromID:context: Could not create TUHandle from destinationID. Dropping message.
[WARN] Dropping let me in request or response because it was not encrypted
[WARN] Dropping let me in delegation request or response because it has the wrong intent {publicIntentAction: %@}
[WARN] Received LetMeInDelegation with Intent of {publicIntentAction: %@, messageIntent: %llu}
[WARN] service:account:incomingData:fromID:context: Empty CSDMessagingConversationMessage. Dropping message.
[WARN] service:account:incomingData:fromID:context: Could not create group UUID from string. Dropping message.
[WARN] No conversation found for groupUUID %@
Updating "fromStorage" on conversation with UUID: %@ since there are still active remote participants.
Not updating "fromStorage" on conversation with UUID: %@ since conversation.isFromStorage: %d, and context.fromServerStorage: %d
Looking for handle: %@ in existingConversation: %@
fromID found in both the remoteMembers & lightweightMembers list. Rejecting message.
Dropping message since the type %@ is not allowed for lightweightMembers
[WARN] Could not find matching handle: %@  in existingConversation.
[WARN] Will retry message again after %@ ms
[WARN] Exhausted retry attempts for message. Dropping message after %@ attempts
Message verification failed, dropping message.
[WARN] Received Invitation conversation message from server storage for conversation where that was also retrieved from server storage. Not notifying delegates of this Invitation message. {message: %@, context: %@, conversationUUID: %@}
Group participant update received
Attempted to sanitize participant update without an initialized sanitizer.
[WARN] processGroupSessionParticipantUpdate: Empty groupSessionParticipantUpdate
[WARN] processGroupSessionParticipantUpdate: Empty groupSessionParticipantUpdate.participantDestinationID
Group session participant update received: %@ participantIdentifiers: %@
Participant update from %@, type: %lu, participants: %@
[WARN] Unable to find fromHandle.
Leaving conversation that is not supported on GreenTea devices: %@
Received participant join context
processJoinUpdate: Received nil when trying to convert data to participant join context
[WARN] processUpdateMembersUpdate: Empty updateMembersUpdate.clientContextData
Received nil when trying to convert data to participant join context
[WARN] processParticipantDataUpdate: Empty participantDataUpdate.groupUUID
[WARN] processParticipantDataUpdate: Empty participantDataUpdate.participantDestinationID
[WARN] processParticipantDataUpdate: Empty participant
[WARN] Could not find conversation with groupUUID %@. All conversation UUIDs: %@
[WARN] handleParticipants:joinedConversationWithUpdate:joinContext: Empty joinContext
[WARN] handleParticipants:joinedConversationWithUpdate:joinContext: Empty participantUpdate.groupUUID
Join context: %@
members: %@
lightweightMembers: %@
addedMembers: %@
addedLightweightMembers: %@
activeLocalHandles: %@
receivedLocalMember: %@
Received local member: %@
[WARN] Dropping conversation with groupUUID %@ since it has %tu remote members which is greater than the maximum allowed of %tu.
[WARN] We received a message from %@, which was in the remote members list given in the message, but not in the existing conversation UUID: %@. Dropping message.
[WARN] We received a message from %@, which was in the remote members list but from a different device; treating as new conversation
We received a message from %@, and we found same converastion: %@ with remote members with a different groupUUID; treating as new conversation
Membership update message failed verification. Dropping fromHandle: %@
Identified let me in approval for pending conversation group UUID: %@
Pending conversation %@ found, but the groupUUID does not match (%{public}@) or the let me in request state is not Requested (%{public}@)
Determined video for new conversation should be %{public}@
Setting videoEnabled to %@ because the user was added to an existing call with av mode %lu
Attached invitation preferences found in message: %@
No invitation preferences were set on the message
[WARN] Could not create new activity session for activity session %@ and conversation UUID %@
Ignoring message for group UUID %@
Updating provider on conversation with UUID %@ with provider %@
Activating cached conversation with UUID: %@ since participants are joining.
Updating remoteMembers for conversation with UUID: %@
Not ringing for cached conversation since message is from server storage and is older than 30 seconds. Conversation: %@
Setting `fromStorage` on cached conversation to `NO`
fromStorage should be set to 1 if fromServer is 1 and conversation is older than 30 seconds
fromServer: %d
Older than 30 seconds: %d
 Conversation: %@
Downgrading U+1 call to audio because remote party joined as audio-only (remote members count is 1, join context had video=NO, and conversation had video=YES)
[WARN] Couldn't set staged activity session %@ on conversation UUID %@
Could not find local member from activeLocalHandles: %@
Could not find local member from activeLocalHandles: %@, remoteAndLightweightMembers: %@
Received empty set for remote members
Participant with identifier: %llu left conversation with groupUUID: %@
[WARN] handleParticipantWithIdentifier:leftConversationWithGroupUUID: empty groupUUID
Participant with identifier %llu left with leave context %@
Participant with identifier %llu left without providing a leave context
[WARN] Could not find conversation for group UUID %@
Active participant %@ was still listed as a pending member %@ for conversation UUID %@; did we miss an approval delegation notice?
It would have been time to add LMI approved handle %@ on conversation UUID %@ to link's invited members, but they were kicked.
Adding LMI approved handle %@ to invited member handles for link %@ after their kick timeout elapsed for conversation UUID %@
Removing handles %@ from handles awaiting link invites as we have scheduled the block to add them if not kicked
Using group session initiator as conversation initiator: %@
Picked initiator for conversation: %@
linkManager:updatedLinksFromSync: -- updating delegates {linkDescriptors.count: %d}
linkManager:removedLinkDescriptorsFromIDSSignal: -- updating delegates {linkDescriptors.count: %d}
linkManager:updatedLinkDescriptorsFromIDSSignal: -- updating delegates {linkDescriptors.count: %d}
linkManager:removedLinkDescriptorsFromValidityCheck: -- updating delegates {linkDescriptors.count: %d}
Membership tracker prompted response for pending member! {member: %@, conversation UUID: %@}
Membership tracker retained pending member because conversation does not yet exist {member: %@, groupUUID: %@}
No link was found; ignoring tracked pending member {member: %@, groupUUID: %@}
Membership not adding pending member! {member: %@}
Membership reported rejection {member: %@, error: %@}
Asked to send delegation message!
Asked to send delegation response message! {withResponse: %@}
LMI: Unable to send delegation message without conversation or link
Not sending delegation message because no handles were specified! {groupUUID: %@, transactionUUID: %@, pendingMember: %@}
Asked to send delegation message {handles: %@, groupUUID: %@, transactionUUID: %@, pendingMember: %@}
Error sending delegate to join conversation.
Sent delegation request!!!
Notifying delegates of received remote attributes %@ (isLocallySharing: %@)
Asking screen sharing activity manager to resume observing after invalidation
Disabling screensharing forConversationWithUUID:%@ since screen sharing session got invalidated
SharePlay allowed: %@
Screen sharing allowed: %@
Attempt to retrieve application record for application identifier %@ failed with error: %@
Attempt to retrieve application record for bundle identifier %@ failed with error: %@
[WARN] Unable to create audio route from route dictionary: %@
Issuing request to acquire process assertion for bundle identifier: %@
Acquiring process assertion for bundle identifier %@
Acquired initial process assertion for bundle identifier %@
Failed to acquire process assertion for bundle identifier %@
Incremented count of process assertion for bundle identifier %@ to %lu
Received request to invalidate process assertion with bundle identifier: %@
Decremented count of process assertion for bundle identifier %@ to %lu
Initialized CXCallDirectoryStore for reading
Unable to initialize CXCallDirectoryStore for reading: %@
Device first unlock block invoked, attempting to initialize CXCallDirectoryStore...
Incoming call filter block called with sourceAddress: %@ providerIdentifier: %@
Blocking call with sourceAddress %@ since callDirectoryAllowsCallFromSourceAddress returned NO
Disallowing call with sourceAddress %@ since _doNotDisturbAllowsCallFromSourceAddress returned NO
DND - onEmergencyCall: %d providerIdentifier: %@
Not allowing call because DND is enabled for %@
phoneNumberVariants: %@
Error checking if call directory database contains blocking entry for source address %@: %@
Disallowing call from source address %@ since blocked by call directory
Call history changed: %@
Call connected. Marking all calls as read.
bytesOfDataUsed: %ld uniqueProxyIdentifier: %@ callHistoryIdentifier: %@
Call still exists so updating its bytes of data used: %@
No call still exists so updating bytes of data used via CHManager
Writing recent call to history: %@
Writing recent pending call to history: %@
Adding transaction object to transactionObjectsAwaitingCallHistory: %@
[WARN] Ending transaction for %@ because we timed out waiting for a call history database changed notification
Set %ld recent calls as read using matching predicate '%@'.
Deleted %ld recent calls matching predicate %@
self: %@ wiFiAllowed: %d
self: %@ cellularDataAllowed: %d
self: %@ cellularDataPreferred: %d
self: %@ clientUUID: %@
Updated currently broadcasted activity to %@
Queueing activity at beginning of queue: %@ (timeout: %f)
Queueing activity at end of queue: %@ (timeout: %f)
Dequeueing activity: %@
This method expects a non-nil dynamic identifier, but a nil one was providied
Registered to listen for activity type %d and dynamic identifier %@ and started listening for best app suggestions, now tracking: %@
Registered to listen for activity type %d and dynamic identifier %@, now tracking: %@
Unregistered to listen for activity type %d and dynamic identifier %@, now tracking: %@
This method expects a non-nil dynamic identifier substring, but a nil one was providied
Unregistering dynamic identifiers of type %d, matching substring %@: %@
Unregistered to listen for activity type %d, now tracking: %@
Stopped listening for best app suggestions
Best app suggestion changed to %@
Firing delegate callback for stopped activity type %d (%@) and dynamicIdentifier %@
Firing delegate callback with activity type %d (%@) and dynamicIdentifier %@
Migrator is looking for legacy Announce Calls setting in %@
Migrator found legacy Announce Calls setting %@
Migrator did not find legacy Announce Calls setting in %@
Migrator is looking for legacy Conversation Link Base URL setting in %@
Migrator found legacy Conversation Link Base URL setting %@
Migrator did not find legacy Conversation Link Base URL setting in %@
Joining with participantJoinContext: %@
sending dataBlob participant: %@
Querying for capabilities of call members using native destinations: %@
Query for capabilities returned any destinations with web only endpoints: %@
%s: Conversation report = %@
requestActiveParticipants self: %@
Leaving with participantLeaveContext: %@
registerPluginWithOptions:%@ self: %@
restart self: %@
reconnect self: %@
member: %@
requestDataCryptorForTopic: %@ self: %@
requestEncryptionKeyForParticipants: %@ topic: %@ self: %@
addAliasesToConversationContainer: %@ salt: %@ self: %@
participantIDForAlias: %llu salt: %@ self: %@
addRequiredCapabilities: %@ requiredLackOfCapabilities: %@ self: %@
setting local participant type: %ld memberDestination: %@
setting participant type: %ld memberDestinations: %@
sessionProvider: %@ reason: %d error: %@
sessionProvider: %@ participantIDs: %@ localParticipantID: %llu error: %@
sessionProvider: %@ error: %@
sessionProvider: %@ participantType: %ld error: %@
sessionProviderDidTerminate: %@
sessionProvider: %@ activeParticipants: %@ success: %d
[WARN] Received an error for active remote participants
[WARN] Retrying requestActiveParticipants, retry_count=%lu
[WARN] Not retrying requestActiveParticipants, max retry count (%lu) reached
sessionProvider: %@ didReceiveActiveLightweightParticipants: %@ success: %d
[WARN] Retrying requestActiveLightweightParticipants, retry_count=%lu
[WARN] Not retrying requestActiveLightweightParticipants, max retry count (%lu) reached
XPC connection invalidated from client: %@ capabilities: %@
Disconnecting all calls because wantsCallDisconnectionOnInvalidation=YES for %@
Setting isSendingVideo:NO isSharingScreen:NO on call: %@ because wantsCallStopStreamingOnInvalidation=YES for %@
CarPlay screen is now %d
Received AVAudioClient secure microphone interruption
Registered for registerSecureMicrophoneEngagedHandler
Relay capabilities enabled
Relay capabilities disabled
Disconnecting relaying call because relay calling is no longer enabled: %@
Disconnecting call being relayed elsewhere because relay calling is no longer enabled: %@
Received AudioSession Interruption notification: %@
Determined that audio interruption was caused due to built in mic muted, ending all calls
Received CarPlay hardware control: %@
Updating calls in response to CarPlay hardware control: incomingCall %@, activeCall %@, heldCall %@ bargeCall %@
Answering incoming call: %@, %@
Answering incoming call as conversation: %@, %@
Opening URL for incoming call: %@
Not opening URL %@ because outgoing call is provided by SharePlay.
Opening URL: %@ for outgoing call
Encountered error while opening URL: %@ for call: %@
Disconnecting call because there wont be a UI to host the call: %@
Disconnecting proxy call because a video call started connecting: %@
Updating clients with call: %@
Requesting to background launch InCallService
Ignoring call update for client %@ because it's suspended
Updating client %@ with disconnected call: %@ calls: %@
Updating client %@ with calls: %@
conversation: %@ call: %@
providerIdentifiers: %@ client: %@
notification: %@
Pushing all calls to device with destination %@ because an eligible audio route is not available and we found a call hosted here with its expected endpoint on another device: %@
Pulling all calls from relay client device because a an eligible audio route is available and we found a call with an endpoint elsewhere: %@
Non-ringing call found on device: %@. All calls: %@
Ignoring ringing call status change for call %@ because relay calling is disabled (%d) or this call doesn't support relaying call state (%d) or a vehicle route is available (%d) or call is TTY (%d) or call is conversation (%d) or shouldRelayTinCanCall (%d)
Not sending out call started connecting message because call is already disconnected: %@
Not sending out call connected message because call is already disconnected: %@
Sending voicemail call ended notification %@
Picked route %@ changed to A2DP, so muting
Picked route changed from %@ to %@, setting call's bluetooth audio format back to automatic
Dial request rejected due to SOS being active
Dial request rejected due to active emergency call
Received nil call from outgoingCallFromProxyCall: for dial request %@ and displayContext %@
Removing %@ from sanitized join request since it matches a local alias on the ids service: %@
Setting join request to TUConversationAVModeVideo from Audio since this is a GFT conversation
current calls are %@
[WARN] Ignoring request to performUngroupCall because the call is not grouped
[WARN] Ignoring request to performSwapCalls because either there is no active call (%d), there is no held call (%d), or an active call exists that cannot be held (%d)
An endpointRapportMediaSystemIdentifier="%@" or endpointRapportEffectiveIdentifier="%@" is present on answer request for call with identifier %@ so attempting to pick matching route
Performing end active calls and answer ringing call %@ for answer request %@
Aborting end active calls and answer ringing call; answer request does not specify a call to answer.
Aborting end active calls and answer ringing call; could not find any ringing calls to answer.
Aborting end active calls and answer ringing call; could not find ringing call with identifier %@
Aborting end active calls and answer ringing call; ringing call %@ is not the same as the specified call %@
Aborting end active calls and answer ringing call; ringing call %@ does not contain a data source.
Performing end held calls and answer ringing call %@ for answer request %@
Aborting end held calls and answer ringing call; answer request does not specify a call to answer.
Aborting end held calls and answer ringing call; could not find any ringing calls to answer.
Aborting end held calls and answer ringing call; could not find ringing call with identifier %@
Aborting end held calls and answer ringing call; ringing call %@ is not the same as the specified call %@
Aborting end held calls and answer ringing call; ringing call %@ does not contain a data source.
Performing hold active calls and answer ringing call %@ for answer request %@
Aborting hold active calls and answer ringing call; answer request does not specify a call to answer.
Aborting hold active calls and answer ringing call; could not find any ringing calls to answer.
Aborting hold active calls and answer ringing call; could not find ringing call with identifier %@
Aborting hold active calls and answer ringing call; ringing call %@ is not the same as the specified call %@
Aborting hold active calls and answer ringing call; ringing call %@ does not contain a data source.
Changed sourceIdentifier of answerRequest to %@
   ... sending calls were found so adding them to list of calls to disconnect: %@
   ... and adding held calls to the list of calls to unhold: %@
   ... and not unholding held calls because there are active calls %@ or ringing calls %@
   ... no sending calls were found so adding all active calls to list of calls to disconnect: %@
   ... no sending or active calls were found so adding all held calls to list of calls to disconnect: %@
   ... and moving call %@ from call to unhold to call to disconnect because a disconnected call from the same provider doesn't support unambiguous multi-party state: %@
Handoff context did not include any handoff payload. Assuming this is for a relay call
[WARN] Ignoring request to performPushHostedCallsToDestination %@ because not all calls are hosted here and relayable. All calls: %@
[WARN] Ignoring request to performPullHostedCallsFromPairedHostDevice because not all calls are not hosted here and not an endpoint here and relayable. All calls: %@
[WARN] Ignoring request to performPullHostedCallsFromPairedHostDevice because no paired device exists
Disconnecting call with disconnected reason %d: %@
Disconnecting call normally since it was outgoing (%d) or was never connecting to relay (%d): %@
Dialed call: %@
answerRequest: %@
Attempting to answer a Walkie-Talkie call whose endpoint is not Apple Watch; aborting answer request %@ for call %@
Performing answer request %@ for call %@
[WARN] Could not find call for uniqueProxyIdentifier %@. All calls: %@
Holding call with identifier: %@
Unholding call with identifier: %@
Requesting video upgrade for call with identifier: %@
Requesting to disconnect call %@ since also requesting call %@ to upgrade to video
Disconnecting call with identifier: %@
Grouping calls with identifiers %@ %@
[WARN] Asked to group call with data source %@ with another call with a different data source %@
[WARN] Could not find call for uniqueProxyIdentifier %@ (%d) or could not find call for otherUniqueProxyIdentifier %@ (%d)
Ungrouping call with identifier: %@
Swapping calls
Playing DTMF tone for call with identifier: %@ key: %d
Disconnecting current call and activating held call
Disconnecting all calls
Setting TTY type to %d for call with identifier %@
Pulling relaying calls from client
Pushing relaying calls to host with source identifier: %@
Pulling calls from client using handoff info %@
Sending MMI or USSD code for dial request: %@
Setting uplink muted (%d) for call with identifier %@
Setting downlink muted (%d) for call with identifier %@
Setting is sending video (%d) for call with identifier %@
Not updating isSendingVideo: %d since not showing in-call ui
Settings mixes voice with media (%d) for call with identifier %@
Setting sharing screen (%d) for call with identifier %@
Pusing hosted calls to destination %@
Pulling calls hosted on paired device
Sending hard pause digits for call with identifier %@
Updating call with proxy call %@
Entered foreground for call with identifier %@
Entering background for all calls
Entered background for all calls
Setting remote video presentation size to %@ for call with identifier %@
Setting remote video presentation state to %d for call with identifier %@
Setting screen share attributes to %@ for call with identifier %@
Setting screen sharing to (%d) and attributes to %@ for call with identifier %@
Setting Bluetooth audio format to %ld for call with identifier %@
Setting should suppress in-call status bar to %@
Setting should allow ringing call status indicator to %@
Processing SpringBoard request to continue user activity with identifier: %@
Initiating request to pull call for user activity %@
Lauching in-call application; pulled call with identifier %@ for user activity %@
Failed to pull call for user activity %@
Retrieving user activity with identifier %@ failed with error %@
CSDCallStateController: sendUserScoreToRTCReporting with UUID: %@ and Score: %d
CSDCallStateController: joinConversationWithRequest: %@
Setting current audio input to device with UID %@
Setting current audio output to device with UID %@
Picking local route with identifier: %@
Picking paired device with identifier %@
Messaging connection ended for calls %@. Disconnecting calls that are an endpoint here but are not hosted here.
Messaging connection failed for calls %@. Disconnecting calls that are hosted here and an endpoint elsewhere or that are an endpoint here and hosted elsewhere.
Messaging connection could not establish link for calls %@. Disconnecting calls that are hosted here and an endpoint elsewhere or that are an endpoint here and hosted elsewhere.
Requesting initial state for client %@
uniqueProxyIdentifier %@
hasBeenUnlocked changing from %d to %d
Device has been unlocked, so invoking block immediately
Device has not been unlocked, so storing block to be performed upon first unlock
Device has not been unlocked and is not yet observing device lock changes, so beginning to observe device lock changes
Could not obtain application state from user info dictionary %@
Could not obtain bundle identifier from user info dictionary %@
[WARN] Could not obtain bundle identifier from VoIP application %@
XPC network extension connection interrupted from client %@
XPC network extension connection invalidated from client %@
XPC PushKit connection interrupted from client %@
XPC PushKit connection invalidated from client %@
Handling %@
Received request to register VoIP Network Extension for client process with bundle identifier %@
Registering VoIP Network Extension for application with bundle identifier %@
[WARN] Ignoring request to register VoIP Network Extension; could not obtain a bundle identifier from client process %@
[WARN] Aborting register request for VoIP Network Extension; entitlement was not found on client %@
for connection: %@ publicToken: %@
Requesting token for topic %@ for bundle ID %@
[WARN] No environment found for connection %@
for connection: %@ token: %@ topic: %@ identifier: %@
for connection: %@ message: %@
Received incoming APS message from application with bundle identifier %@ and topic %@
Resetting all CSDVoIPApplicationController kill counts
LSApplicationRecord had error %@ when looking up bundle identifiers, can't complete nightly VOIP topic reconciliation
We found an enabled VOIP topic for %@ that is no longer installed. Invalidating its push token
[WARN] Ran nightly VOIP reconciliation and found %d discrepencies
Ran nightly VOIP reconciliation and didn't find any discrepencies.
[WARN] No APS connection found for environment %@
Registering client process %@ with bundle identifier %@ for NetworkExtension VoIP
Aborting NetworkExtension VoIP registration; application with bundle identifier %@ does not have the required entitlement and background mode (VoIP Background Mode: %d, VoIP Network Extension Entitlement: %d)
Asked to register bundle ID %@ with APS environment %@ for VoIP type %@
[WARN] Ignoring voipRegister request because either no bundleIdentifier could be determined (%d) or no environment could be determined (%d) type %d
[WARN] Ignoring %{public}@ unregister request because either no bundleIdentifier could be determined (%d) or no environment could be determined (%d)
Registering client process %@ with bundle identifier %@ for PushKit %{public}@ in environment %@
Environment was %@ but is now %@. Flushing out old registration with previous environment
Aborting PushKit registration for app %@ for type %d because no APS connection exists for the environment (%@)
Aborting PushKit registration for application with bundle identifier %@ because it lacks the voip background mode
Requesting token for topic %@
Setting enabled topics from %@ to %@
Unregistering application %@ from PushKit %{public}@ in environment %@
Supplied environment was nil. Inferring it as %@
Disabling topic %@ and invalidating its token for connection %@
Disabling topic %@ and invalidating its token for all connections
Received incoming network extension message from application with bundle identifier %@
Application %@ will not be launched because it failed to report an incoming call too many times or repeatedly crashed. However because the app is foreground, delivering VOIP payload anyway.
Application %@ will not be launched because it failed to report an incoming call too many times (or repeatedly crashed.)
Attempting to open application %@ and acquire a process assertion
Dropping incoming message because the bundle ID failed to launch
Dropping incoming message because the bundle ID did not launch in time
Successfully opened application
Successfully took out process assertion
Dropping incoming message because the process assertion could not be acquired
Invalidating process assertion for bundle ID %@ from timeout
Killing PTT app %@ because it didn't return a valid PTPushResult in time.
Killing VoIP app %@ because it failed to post an incoming call in time.
Unable to terminate %@ with error %@
[WARN] No existing VoIP application found for bundle ID %@
Aborting request application with bundle identifier %@ does not have the required background mode (VoIP Background Mode: %d)
Ignoring event for session %@, since the activity is a system group activity
Received TUConversationActivityEvent: %@
Dropping notice %@ because of invalid bundleID
Notice %@ is from a lightweightMember, trying to translate
Posting notice: %@ for event: %@
Fetching notices is a no-op
Activating conversation notice with URL: %@ and bundleID %@
Attempt to open application with bundle identifier %@ url: %@ failed with error %@
Successfully opened URL %@ for bundle: %@
[WARN] Error activating conversation notice. Could not find action url %@ or bundleID %@
Removing conversation notice is a no-op
Updating IDS firewall with allowed handles
Deleting calls from IDS firewall if necessary: %@
Removing handle(s) from firewall %@
Not creating activitySession -- bundleID not available
[WARN] Could not find conversation with conversationUUID %@
[WARN] Conversation with conversationUUID %@ is not associated with a Messages group
[WARN] No Messages group provider was registered
Device first unlock block invoked, attempting to retrieve saved providers
Loaded registered providers
Loaded registered local providers: %@
Loaded registered relay providers: %@
Updating current providers to %@
Unregistering provider because its application is no longer installed: %@
Donating user intent to call provider with identifier: %@
Releasing sandboxExtensionHandle for provider: %@
[WARN] Skipping Sandboxing URL as the passed in URL turns out to be a symbolic link: %@
Updating provider from %@ to %@
Updating relay provider from %@ to %@
Device is passcode locked (%d) or existing call has different provider (%d). Indicating activity should open in background.
Device is NOT passcode locked. Indicating activity should open in foreground.
Opening user activity %@ for bundle identifier %@ with options %@
Successfully opened user activity %@ for bundle identifier %@
Failed to open user activity %@ for bundle identifier %@: %@
Could not get LSApplicationRecord for app %{public}@ to determine intent support. Using %{public}@.
App %{public}@ supports %{public}@.
[WARN] App %{public}@ does not support %{public}@, using deprecated %{public}@ and %{public}@.
App %{public}@ does not declare support for any dialing intents. Using %{public}@ or %{public}@. Error: %@
Received %@ conversation message for %@
[WARN] Not handling received Decline message from %@ since we are already in a joined conversation with UUID: %@
[WARN] Ignoring nickname update message %@ because message doesn't have a nickname set.
[WARN] Not honoring screen sharing message
[WARN] Dropping video upgrade message, since member is not part of conversation.
[WARN] Conversation %@ is not in the correct state. Dropping message.
[WARN] No call is being tracked, dropping message for conversation: %@
[WARN] Not handling upgrade message for conversation since upgrades are currently disabled.
[WARN] Not upgrading conversation since there was no join update attached.
[WARN] Not upgrading conversation since the join update has an incorrect subtype.
[WARN] Not upgrading conversation as message is missing upgrade token.
[WARN] Not upgrading conversation as message is missing remote token.
Error while creating UUID from %@
[WARN] Did not receive protoUpgradeSessionUUID part of message %@
Current callUUID: %@, upgradeSessionUUID: %@, conversationUpgradeSessionUUID: %@, existingHandle: %@, upgradeMessageHandle: %@, participantDestination: %@, fromDestination: %@
Starting audio for conversation with conversationUUID %@
Determined that current uplink is muted - muting conversation %@
This is a U+1 invite sent by the local account from a different device, not ringing on the local device for conversation: %@
[WARN] Ignoring incoming invitation message for %@ because invitation preferences requested no-ring. conversation.invitationPreferences=%{public}@, message.tuInvitationPreferences=%{public}@
Ignoring incoming invitation message for %@ since we are already tracking this with call %@
[WARN] Ignoring incoming invitation (LMI approval) because message's group UUID %@ did not match the pending conversation's expected group UUID %@. (link: %@)
[WARN] Ignoring incoming invitation (LMI approval) because it was sent from handle %@ instead of expected approverHandle %@
[WARN] Ignoring incoming invitation (LMI approval) because message's link %@ did not match the link the user tapped (pendingConversation: %@)
LMI: Shuttling in to new conversation and stopping the pending one (moving callUUID %@ to new conversation).
Setting uplinkMuted for conversation: %@ since pendingConversation:%@ has uplinkMuted
[WARN] Ignoring responded elsewhere message since it was not sent from a valid handle.
[WARN] Ignoring responded elsewhere message since is did not come from the originator (%@) or one of our aliases: %@.
[WARN] Ignoring message that we've responded elsewhere for conversation %@ since the conversation is already joining or is joined.
Downgrading local participant since remote participant did not upgrade before the timeout: %@
Ending unanswered outgoing call for conversation with UUID: %@
Successfully sent message with identifier: %@ handle:%@ account: %@
Mode changing fromMode %lu, toMode: %lu, conversationUUID: %@
Mode changing from None, Started tracking callUUID: %@ conversationUUID: %@
Mode changing to None, Stopping tracking callUUID: %@ conversationUUID: %@
Found that a remote user had upgraded to video, upgrading our local conversation to video
conversationChanged for U+1 call with avMode=video remote participant, upgrading CXCallUpdate to video=1
Unable to report outgoing call connected; Leaving conversation since could not find call UUID for conversation: %@
Setting sendingVideo=%@ for conversationChanged
Unable to report outgoing call started connecting; could not find call UUID for conversation: %@
Conversation screen sharing changed: %@ 
 participant: %@
Conversation with UUID %@ failed with context: %@
Exiting addedActiveParticipant callback early since conversation with UUID %@ has been removed - current conversations are %@
Reporting call as connecting and isConversation=true since conversation (state: %ld LMI state: %ld) with UUID %@: addedActiveParticipant %@.
Not reporting a U+1 call as connecting when active participant is added since it is going through LMI flow (state %ld and LMI state %ld) and should not connect until user presses join in the staging area; conversation UUID %@: addedActiveParticipant %@.
Ending callUUID:%@ with conversation with UUID %@:
[WARN] Could not fail conversation with reason %ld callUUID not found for conversation UUID %@
[WARN] Could not report conversation as continued as could not find call for conversation UUID %@
Connection started for a conversation we are not tracking a call for
Joining conversation for answer call action: %@
No conversation with UUID: %@
performAction UUID:%@
[WARN] GFT calls are not allowed on GreeTea devices
LMI: This pseudonym is mine, but couldn't find the link - triggering link recovery and failing the action {pseudonym: %@}
No link was found
LMI: Could not assemble link for pseudonym %@ and publicKey %@
letMeIn: %@
Joining from links is disabled by server bag value, failing pending conversation %@
LMI: Asking CSDConversationManager to request let me in approval for pseudonym: %@
Can't use existing conversation %@ because its initiator %@ is not us, not the link creator %@, and not an invited handle to the link %@. Falling back to LMI request/response flow.
There's already an ongoing conversation %@ with the same groupUUID as the link %@, but the conversation does not have the same link %@
Even though we have the information needed to create a conversation with this link, none of our currently active handles are the link creator %@ or one of the invited handles %@. Falling back to LMI request/response flow.
[WARN] Skipping member with handle %@ because it already exists in seen handles: %@
LMI: Reporting LMI call with UUID: %@ update: %@
pseudonymsByCallUUID: %@, conversationsByUUID: %@
Removing pending conversation with pseudonym %@ and callUUID %@
action: %@
Failing action: %@ since conversation: %@ did not meet conditions
[WARN] Cannot enable video because conversations do not allow video on this device
conversation is not eligible for CXSetSendingVideoCallAction since it does not support video
conversation is not eligible for CXSetSendingVideoCallAction since its relaying else where
Group conversation has presentation state %d so requesting to unpause video
[WARN] Could not find conversation for sendingVideo call UUID %@. self.conversationUUIDsByCallUUID: %@ self.conversationManager.conversationsByUUID: %@
All active participants do not have minimum supported screen sharing version
Device does not support screensharing
conversation %@ is not eligible for CXSetSharingScreenCallAction since its relaying else where
conversation %@ is not eligible for CXSetSharingScreenCallAction since its not joined yet
[WARN] Could not find conversation for screen share call action call UUID %@. self.conversationUUIDsByCallUUID: %@ self.conversationManager.conversationsByUUID: %@
conversation %@ is not eligible for CXEnableVideoCallAction since its not joined yet
[WARN] Could not find conversation for enableVideo call action call UUID %@. self.conversationUUIDsByCallUUID: %@ self.conversationManager.conversationsByUUID: %@
[WARN] Could not find conversation for set video presentation state action call UUID %@. self.conversationUUIDsByCallUUID: %@ self.conversationManager.conversationsByUUID: %@
[WARN] Could not find conversation for relaying call action call UUID %@. self.conversationUUIDsByCallUUID: %@ self.conversationManager.conversationsByUUID: %@
Raise to ear gesture detected, answering incoming call.
[WARN] bundleIdentifer: %@ not in the foreground, failing join call action
Performing end call action %@
[WARN] Could not find conversation for end call action call UUID %@. self.conversationUUIDsByCallUUID: %@ self.conversationManager.conversationsByUUID: %@
Failing %@ It is not supported by GFTaaS
Failed to start conference connection for answered call %@: %@. Disconnecting call with relay failed
Transport did not become available for answered call %@
Conference connection ended for call %@. Disconnecting call normally
Conference connection failed for call %@: %@. Disconnecting call with relay failed
Not disconnecting call because this conference transport is %@ but the call's current relay client transport is %@
Received did stop for call that is already disconnecting/disconnected
_launchInCallApplicationForOutgoingCallOnHostIfNecessary
For received dial call message, the dial request is SOS, so disconnecting all existing calls immediately.
Dialing without relay because cannotRelayAudioOrVideoOnPairedDevice is set (%d) or an eligible route is available (%d)
Nil call returned when dialing call. Notifying client of failed dial call for %@
Dialing with relay. isTinCanProvider: %d, message.hasSourceIdentifier: %d, message.cannotRelayAudioOrVideoOnPairedDevice: %d, eligibleRouteAvailable: %d
Nil call returned when dialing call. Notifying client of failed dial call for %@ 
Failed to start conference connection for dialed call uniqueProxyIdentifier %@: %@.
Conference connection stopped (cleanly=%d) for dialed call uniqueProxyIdentifier %@: %@
[WARN] Received %@ message, but the transport didn't become available
[WARN] Received %@ message, but we already have some non-relaying calls. Sending device busy message.
Answering without relay because wantsHoldMusic is set (%d) or cannotRelayAudioOrVideoOnPairedDevice is set (%d)
[WARN] Could not find call with other uniqueProxyIdentifier %@. All current calls: %@
No other unique proxy identifiers included. Assuming legacy behavior
[WARN] Could not find another call to group with. All calls: %@
No call was specified with SendHardPauseDigits message...
...so sending hard pause digits for call %@
...and no hosted call was found with TUHardPauseDigitsStateDigitsAvailable, so not sending hard pause digits
Setting sourceIdentifier to %@ for all calls before pulling
Opening URL for handled pushRelayingCalls message from client: %@
[WARN] Could not find any audio route with source identifier %@. Ignoring push relaying calls request
[WARN] Asked to pull relaying calls from client when no calls with an endpoint elsewhere exist. All calls: %@
Pushing hosted call: %@
Conference did not start successfully when pushing call. Resetting endpointOnCurrent device to YES for %@
Socket did not become available when pushing call. Resetting endpointOnCurrent device to YES for %@
Failed to prepare conference for pushing hosted call %@
[WARN] %@
[WARN] Bad activity type: %d
Registering for %@ user activity type and dynamic identifier %@
[WARN] Asked to register for activity type %@ (%d), but that is not supported
Unregistering for %@ user activity type and dynamic identifier %@
[WARN] Asked to unregister for activity type %@ (%d), but that is not supported
Beginning advertising user activity as current: %@
Stopping advertising user activity as current, without invalidating: %@
Invalidating user activity: %@
Error creating '%@' sandbox extension directory: %@
[WARN] Not loading registered providers because current registered providers version is %ld and minimum version is %d
registeredLocalProvidersByIdentifier: %@
registeredPairedHostDeviceProvidersByIdentifier: %@
Error while querying file attributes: %@
Error creating link to source URL '%@' with filename '%@': %@
Error removing links for filenames not in array (%@): %@
Could not deserialize data to TUCallProvider instance: %@
Registered providers object was of unexpected class %@: %@
Request timed out for transaction ID: %@
[WARN] Received results for timed out transaction with ID %@
Updating session to videoEnabled=NO after creation since current device or call does not support video
Received nil AVCSession creation block
Created AVCSession %@ with config: %@
uplinkMuted: %d
audioEnabled: %d
setVideo: %d
[WARN] Switching to video is currently not supported
videoEnabled: %d
Device does not support screen sharing with camera on, also updating screenEnabled
videoPaused: %d
audioPaused: %d
presentationState: %d
presentationRect: (%f, %f, %f, %f)
setting presentationLayout: (%u)
screenEnabled is not supported - returning
screenEnabled:%d screenShareAttributes: %@
Stopped capture of %@
[WARN] Device does not support screen sharing, ignoring to set screenEnabled
Device does not support screen sharing with camera on, also updating videoEnabled
Determined shouldSetScreenEnabled: %@
Updating session screenEnabled: %@
Not setting screenEnabled since oneToOneModeEnabled is YES
Determined shouldSwitchToGFTMode: %@
Queueing completion block to execute after updating oneToOneEnabled: %d
oneToOneEnabled: %d
Started capture of %@ with configuration: %@
Queueing capture completion block to execute after current capture session is stopped
Queueing capture completion block to execute after screen becomes enabled
screenShareAttributes: %@
relaying: %d
oneToOne transition completed, re-requesting addParticipant
Already have oneToOne transition in progress, delaying addParticipant request for participant: %@
addParticipant: %@ videoEnabled: %d screenEnabled: %d
[WARN] Ignoring request to add participant %@ because they're already in the conversation
oneToOne transition completed, re-requesting removeParticipant
Already have oneToOne transition in progress, delaying removeParticipant request for %@
removeParticipant: %@
[WARN] Could not find participant %lu in the active participant list, but they're in the list of pending removals
[WARN] Could not find participant with identifier %lu all participants: %@
identifier: %llu downlinkMuted: %d
Unknown participant identifier %llu current participants: %@
identifier: %llu audioEnabled: %d
identifier: %lu audioPaused: %d
Unknown participant identifier %lu current participants: %@
identifier: %lu videoEnabled: %d
identifier: %lu screenEnabled: %d
identifier: %llu audioAndVideoMuted: %d
identifier: %lu videoQuality: %lu visibility: %lu prominence: %lu positionalInfo: <flags: %u, position: (x: %f, y: %f, z: %f, w: %f, h: %f)>
Calling stop on screen capture
[WARN] Ignoring avcSession didStart as the error that was returned was benign
error: %@
AVCSession %@ server did disconnect
addParticipant: %@ didSucceed: %d error: %@
addParticipant: %@ Active remote participants: %@
Got captions token: %lu for participant %@
Failed to add participant %@: %@
Retrying to add participant after one to one mode changes %@: %@
[WARN] Delegate responded that we are not tracking active remote participant anymore, not retrying to add participant: %@
removeParticipant: %@ didSucceed: %d error: %@
Failed to remove participant %@: %@
removeParticipant: %@ Active remote participants: %@
didUpdate: %d configuration: %@ error: %@
Failed to update session with configuration %@: %@
audioEnabled: %d didSucceed: %d error: %@
Failed to set local audio enabled (%d): %@
videoEnabled: %d didSucceed: %d error: %@
Failed to set local video enabled (%d): %@
screenEnabled: %d didSucceed: %d error: %@
Failed to set local screenEnabled (%d): %@
executing queued up block since screen enabled did succeed
audioPaused: %d didSucceed: %d error: %@
Failed to set local audio paused (%d): %@
videoPaused: %d didSucceed: %d error: %@
Failed to set local video paused (%d): %@
oneToOneEnabled: %d didSucceed: %d error: %@
Already received oneToOneEnabled callback with this value, not handling
Failed to set oneToOneEnabled (%d): %@
executing queued up block since oneToOneEnabled succeeded
mediaStateDidChange: %d forMediaType: %d didSucceed: %d error: %@
participant: %@ audioEnabled: %d didSucceed: %d error: %@
participant: %@ videoEnabled: %d didSucceed: %d error: %@
participant: %@ remoteAudioEnabledDidChange: %d
participant: %@ remoteVideoEnabledDidChange: %d
participant: %@ remoteAudioPausedDidChange: %d
participant: %@ screenEnabled: %d didSucceed: %d remoteScreenEnabled: %d
participant: %@ remoteScreenEnabledDidChange: %d participantScreenEnabled: %d
participant: %@ remoteMediaStateDidChange: %d forMediaType: %d
screenCapture: %@ didStart: %d, captureWithError: %@
screenCapture: %@ didStop: %d, captureWithError: %@
executing queued up block since capture session stop succeeded
self: %@ reason: %d
[WARN] Ignoring invitation accept since we have previously processed one.
Secondary Thumper accounts changed from %@ to %@
[WARN] Skipping device %@ because uniqueIDOverride is nil
Attempting to find primary Thumper account in accounts: %@ devices: %@ outgoingCallerIDURI: %@
Found default paired device; setting primary Thumper account to %@
Found matching outgoing caller ID %@; setting primary Thumper account to %@
No primary Thumper account found for outgoingRelayCallerID %@ but requireMatchingCallerID is NO. Arbitrarily choosing last Thumper account from list: %@
[WARN] Could not find subscription with UUID %@. All subscriptions: %@
Associated Thumper account ID changed from "%@" to "%@"
Comparing specified Thumper account ID %@ to cached associated Thumper account ID %@
Sending CommCenter a request to set associated Thumper account ID to "%@"
Received request to set capability information %@ capabilityInfo for subscription %@
Updating VoLTE capability state with %@
Updating VoWiFi capability state with %@
Updating Thumper capability state with %@
Retrieved new telephony call capabilities for subscription %@: %@
Retrieved new system capabilities for subscription %@: %@
Setting new emergency callback mode %@.
Updating Thumper account state with %@
Updated local Thumper device ID to %@
[WARN] Could not initialize Thumper account with Thumper account dictionary: %@
Updated local Thumper accounts to %@
Updated secondary Thumper accounts to %@
Found associated Thumper account ID; updated associated Thumper account ID to %@
Found matching secondary Thumper account; updated associated Thumper account ID to %@
Subscriptions changed for client: %@
Subscription cache requires an update; associated Thumper account ID changed
Subscription cache requires an update; secondary Thumper accounts changed
Determined if endpoint should be on current device: %@; hasRelaySupport: %@, anyOtherCallHasAnEndpointElsewhere: %@, relayCall.isSOS: %@
Asked to dial call %@ but the host was unavailable
Asked to dial call %@ but the session was unavailable
[WARN] Transport did not become available when dialing call %@
Setting endpoint elsewhere for call because it can't be answered with audio or video relay: %@
Transport did not become available when answering call %@
Transport did not become available when pulling call. Resetting endpointOnCurrent device to NO for %@
Opening URL for handled pushHostedCalls message from host: %@
Disconnecting call with conference failed disconnected reason: %@
Not disconnecting call for failed conference start because it is not an endpoint here: %@
Not disconnecting call for conference didStop because it is not an endpoint here: %@
Adding %@ as an alias on account %@
Failed to add alias %@ to account %@. Validation status: %ld, validation error reason: %ld, vetted aliases: %@
Updating display name to %@ on account %@
Received IMDaemon connected notification: %@
Received preferred account changed notification: %@
Received display name changed notification: %@
Loaded last known FaceTime caller ID as %@
[WARN] Could not find lastKnownFaceTimeCallerID in keychain, error: %@
Querying Preferences to see if it exists
Found lastKnownFaceTimeCallerID: %@ in Preferences
[WARN] lastKnownFaceTimeCallerID not found in Preferences either
Removing callerID Preferences value
Saving last known FaceTime caller ID as %@
Error while saving _callerID %@
FaceTime caller ID changed from %@ to %@
Deferring FaceTime caller ID refresh until connected to IMDaemon
%@ account %@ aliases changed %@
Failed to get active contexts from client %@: %@
Error getting emergency callback mode (domain=%d, code=%d)
Failed to get Thumper device info: %@
Failed to get call capabilities: %@
Failed to get capability info for subscription %@: %@
Failed to get system capabilities for subscription %@: %@
Calling -[CoreTelephonyClient context:setCapability:enabled:with:completion:] with capability: %@ enabled: %d info: %@
Failed to set enabled=%d for capability %@ with info %@: %@
Calling -[CoreTelephonyClient context:addPhoneServicesDevice:withCompletion:] with idsDeviceIdentifier: %@
Failed to add secondary Thumper device with IDS device identifier %@: %@
Calling -[CoreTelephonyClient context:removePhoneServicesDevice:withCompletion:] with idsDeviceIdentifier: %@
Failed to remove secondary Thumper device with IDS device identifier %@: %@
Calling -[CoreTelephonyClient context:recheckPhoneServicesAccountStatus:] with capability: %@
Calling _CTServerConnectionEnableEmergencyCallBackMode() with %@
Calling _CTServerConnectionSetCapabilityExtended() with capability: %@ value: %d capabilityInformation: %@
Error setting capability for %@ calling (domain=%d, code=%d)
Error getting system capabilities (domain=%d, code=%d)
Calling _CTServerConnectionPhoneServicesAddDevice() with capability: %@ idsDeviceIdentifier: %@
Error adding device for %@ calling (domain=%d, code=%d)
Calling _CTServerConnectionPhoneServicesRemoveDevice() with capability: %@ idsDeviceIdentifier: %@
Error removing device for %@ calling (domain=%d, code=%d)
Calling _CTServerConnectionPhoneServicesAccountStatusChanged() and _CTServerConnectionSendBarrier() with capability: %@
Failed to get ISO countrycode for subscription %@: %@
Failed to get mobile country code for subscription %@: %@
Could not find a subscription matching the specified UUID %@
Retrieved mobile country code %@ and mobile network code %@ for subscription %@
Failed to get mobile network code for subscription %@: %@
Error getting ISO country code (domain=%d, code=%d)
Retrieved ISO country code %@ for mobile country code %@ and mobile network code %@
Received delegate callback callCapabilitiesChanged: with context: %@ info: %@
Received context:capabilitiesChanged: with context: %@ info: %@
%@ is handling phoneServicesCapabilitiesChanged: with userInfo %@
Received kCTEmergencyCallBackModeStatusNotification with userInfo %@
Not allowing creation since activitySession doesn't support aTV handoff. session: %@
Attempted to decode association voucher for handle (%@) that is either both or neither of the primary (%@) and associated (%@) handles.
Call status changed for call: %@
for call: %@
for message: %@
transactionGroup: %@
with action: %@ for call %@
route: %@
call: %@
createConversationReportingSession using conversation: %@
reporter: %@
chat=%@
groupActivitiesReports received for conversation %@
blob recovery started for conversation %@
attempted transition for conversation %@
blob recovery timed out for conversation %@
message retry started for conversation %@
message retry failed for conversation %@
message retry succeeded for conversation %@
avc blob request message retry started for conversation %@
avc blob request message retry failed for conversation %@
avc blob request message retry succeeded for conversation %@
VoIP app %@ failed to post incoming call
VoIP app %@ no longer eligible to launch
VoIP push for app %@ dropped on the floor
receivedLetMeInRequestForConversation: %@
sentLetMeInRequestForConversation: %@ isApproved: %d
Send User Score to RTCReporting with UUID:%@ and Score:%d
Send activity session ended with startDate %@ endDate%@ session %@
Reporting %@
%@ reported blocked call with UUID %@
%@ reported known call with UUID %@
%@ is handling %@.
%@ initialized for service %@ with the following devices: %@
Adding firewall entries for dictionary: %@
Adding firewall entries with time %@ for handles: %@
Not adding handle %@ to firewall since uri %@ is nil
Adding firewall entries1 %@
Adding firewall entries2 %@
Failed to add firewall entries: %@ to firewall with error: %@
Failed to retrieve firewall with error: %@
Removing all IDSFirewall entries
Failed to remove all firewall entries with error: %@
Removing handles from IDSFirewall: %@
Removing firewall entries: %@
Failed to remove firewall entries: %@ to firewall with error: %@
Adding copyIDtoken:%@ to capable destinations for device: %@
Determining country code using account info %@
Asking IDS to generated a pseudonym for unprefixedURI: %@ and properties: %@
[WARN] IDS failed to retrieve pseudonym with error %@
No IDSPseudonym matching string %@ was found. All pseudonym URIs: %@
Asking IDS to revoke pseudonym: %@
No pseudonym matching %@ was found.
Asking IDS to renew pseudonym: %@
%@: Active accounts changed
%@: Devices changed
%@: Nearby devices changed
%@: Told that a pseudonym was added to our account.
%@ updated state: defaultPairedDeviceExists=%d, pairedDeviceExists=%d, telephonyCapableDeviceExists=%d, relayCapableDeviceExists=%d, availableOutgoingRelayCallerIDs=%@ deviceNames="%@"
[WARN] Could not find session for identifier %@ to perform block on transport availability for. Dropping this block on the floor
No devices found that support call provider %@. Not creating a session.
Creating session to devices: %@
[WARN] destination for device returned a nil value, so we are going to skip creating a session to it: %@
Creating session to destinations: %@
Would have created a session to an empty destination set. Returning a nil session
Destroying session %@
Asked to prepare session to end for identifier %@
Asked to prepare connected sessions to end
Accepting session for identifier %@
Canceling/declining session for identifier %@
Asked to end ending sessions
sendMessageAndStartSessionIfNecessary for service %@ and message type %@: %@
No session exists. Starting a new one by inviting all devices that support provider %@
A session exists with a destination/device that supports provider %@: %@
We'll send this message via the existing session
Starting another session to the device
Starting another session to the destination
[WARN] A session exists, but it's with a device that doesn't support provider %@. Not starting a new session
Did not create session
sendMessageAndStartSessionIfNecessary for message type %@: %@
Not starting a new session for identifier %@ because an active session for the identifier already exists: %@
No IDSSession exists. Starting a new one by inviting to destination %@
[WARN] No IDSSession exists, and given device is nil. We can't start this session
A session exists: %@
Sending the message through the existing session
Starting a new session to the destination of the device with an active session
[WARN] Cannot start a new session, no valid destination
sendMessage:andAcceptInvitationIfNecessaryForIdentifier for identifier %@ and message type %@: %@
Session for identifier is %@
A current session already exists: %@
Sending the message through the current session
Sending the message through the current session and declining this one %@
No current session already exists, so sending the message through this session %@
Could not determine session to accept for identifier %@ and message %@. All sessions: %@
sendMessage:andCancelOrDeclineInvitationIfNecessaryForIdentifier for identifier %@ and message type %@: %@
Session has multiple identifiers: %@. Removing identifier %@ and not canceling/declining
_sendMessage:andCancelInvitationIfNecessaryForIdentifier for session %@ and message type %@: %@
_sendMessage:andDeclineInvitationIfNecessaryForIdentifier for session %@ and message type %@: %@
for message type: %@ identifier: %@ destinations: %@ waitUntilConnected: %d
identifier: %@ message: %@
sendMessage through session %@ for message type %@ to destinations %@: %@
sendMessage through session %@ for message type %@: %@
Not sending message because protocolVersionCustomizationBlock's preventMessageSend was set to YES for message type %@: %@
No session available to send message type %@: %@
Invite received for session %@ from (fromID=%@) destination %@ device %@ with message %@ (timestamp: %f)
... and it's from the same destination that we have an active session with (%d) or it's from the same device that we have an active session with (%d) or we don't have a session (%d)
... so we are going to handle the session's message
... but we were told to ignore the invite
... but there was no accompanying message so just ignoring the invite
... but it is from a different device than the one that we have an active session with
... and we were told to decline the invite
... and we were NOT told to decline the invite, so just ignoring it
Session ended with reason %d
Notifying delegate of connection end
[WARN] Notifying delegate of connection failure
[WARN] Notifying delegate that connection could not establish link
Not notifying delegate of messenger connection end because a different active session with the same identifier exists: %@
Received invitation accept with no data payload.
Received invitation cancel with no data payload. Assuming the invitation was answered elsewhere
Received invitation decline with no data payload. Assuming invitation was accepted by sending a message through another session
videoStreamToken: %ld
Moments XPC connection interrupted from client %@
Moments XPC connection invalidated from client %@
handle disconnect for client: %@
mediaType: %d, token: %ld localVideoRecordingEnabled: %d
Successfully started AVCMomentsRequest: %@, transactionID %@
Failed to start AVCMomentsRequest: %@, error: %@
transactionID: %@
Successfully ended request %@
Failed to end request %@: %@
Registering stream token %ld, requesterID %@ and remoteIDSDestinations %@ with new moments object
Registered new moments object %@ with supported media types: %@
unexpected supportedMediaTypes: %@, moments: %@, streamToken: %ld
[WARN] FaceTime Photos availability is %d but remoteIDSDestination is nil so changing availability to Unavailabile
FaceTime Photos is not available. Availability is %d
updating remoteIDSDestinations and returning registered session: %@ for streamToken: %ld
Asked to unregister stream token: %ld
didFinish request: %@, error: %@
new capabilities: %u
didStartProcessing request: %@
Received moments didStartProcessingRequest but moments is disabled by server bag or default
Failed to start processing request: %@
didEndProcessing request: %@, stillImageURL: %@ movieURL: %@
Ignoring processing end of request because moments is disabled by server bag or default
Failed to find session for moments stream token: %ldl
failed to find remoteIDSDestination from request: %@ in session remoteIDSDestinations: %@
Did not receive both parts of Live Photo for request: %@
Media files for Live Photo do not have the correct path extensions. stillImageURL: %@ movieURL: %@
Received an error staging the still photo: %@
Did not receive movie URL for request: %@
Received an invalid request transaction ID: %@
Received an error creating the temporary directory: %@
Received an error staging the movie file: %@
moment server disconnected: %@
url: %@ metadata: %@ isZipped: %d fromIDSDestination: %@
session: %@ request: %@ remoteIDSDestination: %@
Unzipped resource to URL: %@
Failed to unzip file at URL %@
Received non-zipped resource at %@
Received moments resource from IDS destination %@ but expected %@
Could not convert remote IDS destination %@ (token=%@) and/or from IDS destination %@ (token=%@) to token data
Received moments resource with unknown transaction ID %@. All sessions: %@
Received moments resource with missing transaction ID in metadata: %@
Received moments resource but moments is disabled by server bag or default
file url: %@ was not sent successfully
Preserving file at URL: %@
Could not retrieve contents of dictionary at URL %@: %@
Unregistering stream token: %ld
Cleaning up state for moment: %@
Delaying cleanup because moment is still registered (%d) or has outstanding requests (%lu)
url: %@ session: %@ request: %@
url: %@
Could not determine both photo URL and video URL from contents of directory: %@
Resources directory URL %@ does not exist
_handleReceivedVideoURL: %@
saving live photo with photo url: %@ video url: %@
Error saving resources with photo url: %@ video url: %@
Saving video with url: %@
Error saving resources with video url: %@
[WARN] Timeout reached for active request for transaction ID %@
momentDescriptor: %@
Initializing AVConference with client UUID %@
[WARN] Error calling getIsSendingAudio: %@
[WARN] Error calling setSendingAudio: %@
[WARN] Error calling getIsAudioPaused: %@
Setting pause audio to %d for %@
[WARN] Error calling setPauseAudio: %@
[WARN] Error calling getIsVideoPaused: %@
Setting pause video to %d for %@
[WARN] Error calling setPauseVideo: %@
Setting conference visual rectangle of size %@ for %@
Setting conference state %@ for %@
Setting local portrait aspect ratio %@ and local landscape aspect ratio %@ for %@
Setting peer reporting identifer %@ and session identifier %@ for %@
Failed to initialize a new call with device role %d. Got callID=%ld
Starting AVConference connection with isCaller=%d callID=%ld remoteInviteDictionary=%@ capabilities=%@ destination=%@
Starting AVConference connection with isCaller=%d callID=%ld capabilities=%@ socket=%d
Stopping AVConference with callID=%ld
Canceling AVConference with callID=%ld
conference=%@ didStartSession=%d userInfo=%@
callID=%ld error=%@
callID=%ld error=%@ callMetadata=%@
callID=%ld
screenAttributes=%@ callID=%ld
videoAttributes=%@ callID=%ld
callID=%ld didPauseAudio=%d error=%@
didPause=%d callID=%ld
callID=%ld didPauseVideo=%d error=%@
[WARN] callID=%ld isStalled=%d
AVConference server died
callID=%ld parameters=%@
callID=%ld isDegraded=%d isRemoteVideo=%d
[WARN] callID=%ld isNetworkBad=%d
callID=%ld didReceiveData=%@
Ignoring to add %@ call since it is TinCan (%d) or PTT Barge Call (%d).
[WARN] Ending mutually exclusive call with uPI %@ because we have a newer incoming call that can not co-exist with it.
_endMutuallyExclusiveCalls: update=%@
Found multiple existing mutually exclusive calls.  Ending call %@
Ignoring mutually exclusive update
_endMutuallyExclusiveCalls: mutuallyExclusiveCall=%@, error=%@
Start call action fulfilled: %@
Start call action failed: %@
Join call action fulfilled: %@
Join call action failed: %@
Answer call action fulfilled: %@
Answer call action failed: %@
End call action fulfilled: %@
End call action failed: %@
Set held call action fulfilled: %@
[WARN] Set held call action failed but reverting state is allowed: %@
Set held call action failed and reverting state is not allowed: %@
Set group call action fulfilled: %@
Could not find call to group with for set group call action: %@. All call: %@
[WARN] Set group call action failed but reverting state is allowed: %@
Play DTMF call action fulfilled: %@
Play DTMF call action failed: %@
Set sending video call action fulfilled: %@
Set sending video call action failed: %@
Set muted call action fulfilled: %@
Set muted call action failed: %@
Set tty call action fulfilled: %@
Set tty call action failed: %@
Set relaying call action failed: %@
[WARN] Set relaying call action failed: %@
Action fulfilled: %@
Action failed: %@
[WARN] Not allowing requested %@ because user intent could not be validated for call source with identifier: %@
[WARN] Not allowing requested start call action because a call with same UUID already exists callWithUUID: %@, relayCallWithUUID: %@
[WARN] Not allowing requested start call action because call source %@ is at the maximum call group count of %lu: %@
[WARN] Not allowing requested action because no call was found to group with for action %@ and call source %@. All calls: %@
[WARN] Not allowing requested answer call action because a relay call with same UUID already exists: %@
[WARN] Not allowing requested action because no call was found for call UUID %@ and call source %@. All calls: %@
[WARN] Not allowing requested action because action is not allowed to be requested: %@
[WARN] Not allowing requested transaction because it is empty: %@
Allowing requested transaction: %@
[WARN] Not allowing requested transaction: %@
Dialing new call due to requested start call action: %@
Adding supplemental set held call action for existing call %@
Could not serialize handoffActivityUserInfo into a CXHandoffContext: %@
[WARN] Could not determine call source for dial request: %@. All call sources: %@
Asked to perform action %@ for call %@
Sending %@ for existing call with uniqueProxyIdentifierUUID=%@ callGroupsAllowsHold=%d supportsHolding=%d
Asked to perform start call action %@ for call %@
Call source %@ registered with configuration %@
Error while determining process action for callSource: %@, action: %@
Received add incoming call request from call source %@ with UUID %@ update %@
[WARN] Returning error for add incoming call request because SOS is active
Query result: %@ for handle: %@ callSource: %@
[WARN] Returning error for add incoming call request because it was on the block list
[WARN] Blocking call because we are screen sharing and don't want to let that notification come through
[WARN] Returning error for add incoming call request because call did not pass DND filter. CarMode (%d) BT Audio Route (%d), CarPlay (%d)
[WARN] Returning error for add incoming call request because it is a direct call to a secondary device and relay calling is preferred over direct calling
[WARN] Update requires additional authentication before it can be answered
[WARN] There is an error: %@, but we are still asked to report call to clients
[WARN] Ignoring add incoming call request because a call already exists with the same UUID: existingCall: %@, relayCallWithUUID: %@
Call source %@ updated call with UUID %@ with update %@
[WARN] Sending %@ for existing call with uniqueProxyIdentifierUUID=%@ since it cannot co-exist with ongoing calls.
[WARN] No call found for call source %@ and UUID %@. All calls: %@
Call source %@ ended call with UUID %@ with ended at date %@ with reason %ld failure context %@
[WARN] Deferring acknowledgement of VoIP call with UUID %@ ended until minimum ring duration has passed
Setting callGroupUUID to nil for orphaned grouped call %@
[WARN] Call %@ already has a date ended
Call source %@ sent invitation for outgoing call with UUID %@ at date %@
[WARN] Call with UUID %@ already has a date started outgoing
[WARN] Call with UUID %@ is not outgoing
Call source %@ started connecting call with UUID %@ at date %@
[WARN] Call with UUID %@ already has a date started connecting
Call source %@ connected outgoing call with UUID %@ at date %@
[WARN] Call with UUID %@ already has a date connected
[WARN] Call with %@ is not outgoing
Call source %@ finished audio for call with UUID %@
Found call %@ for UUID %@, so setting hasAudioFinished
Did not find a call for UUID %@, so expediting deferred end interruption instead
Call source %@ received call with UUID: %@ crossDeviceIdentifier %@ bytesOfDataUsed %ld
Call source %@ received requested transaction %@
Call source manager %@ completed transaction group %@
Pull call action fulfilled: %@
Pull call action failed: %@
Could not find pulled call context for completed pull call action %@. All contexts: %@
Call action completed for call: %@
[WARN] Could not find call for completed call action: %@. All calls: %@
Action completed: %@
Call sources changed: %@
Ending call %@ since its backing call source %@ is no longer connected
Call controller host %@ requested transaction %@ for connection with identifier: %@
Using call source %@ for requested transaction %@
[WARN] Not allowing requested transaction because no call source was found. All call sources: %@
Marking all calls as changed because providers changed
Because this is an internal install, com.apple.Superbox (aka Speakerbox) is acting as a system provider
machServiceName: %@ newConnection: %@
Accepting XPC client for %@: %@
Rejecting client for %@ because it lacks the %@ capability: %@
Started tracking call: %@
Stopped tracking call: %@
Asked to answer call %@ while disconnecting calls %@ and holding calls %@
Asked to hold calls %@ while unholding calls %@
Asked to group calls %@ with calls %@
Asked to ungroup call %@ from other calls in group %@
Asked to disconnect call %@ while ungrouping call %@
Asked to disconnect all calls %@
Asked to disconnect calls %@ while holding calls %@ and unholding calls %@ and ungrouping calls %@
Asked to set TTY type to %d for calls %@
Asked to set uplink muted to %d for calls %@
handleCallStatusChanged %@
bytesOfDataUsed: %ld callHistoryIdentifier: %@
[WARN] Invalid TUHandle generated from CXLabelHandle %@
[WARN] Invalid TULabeledHandle generated from CXLabelHandle %@
[WARN] Invalid TUSenderIdentity generated from CXSenderIdentity %@
Setting enableCriticalReliability %@
Received notification that AVAudioClient has been activated, notifying conversation
%@ should not handle conversation: %@
Conversation manager reported a new incoming conversation %@ from handle %@
Ignoring new conversation %@ since we are already tracking this with call %@
Skipping to report a new call since we already have a call with UUID: %@ for conversationUUID: %@
Conversation is not call eligible; will not report incoming call for conversation with UUID %@
Not reporting call since validNetworkReachable is false
Incoming invite is from an participant %@, upgrading CXCallUpdate
Ending ringing call for conversation with UUID: %@
Could not report new multiway call from %@: %@
Also going to fulfill start call actions: %@ since we are exclusively managing this call
endCallWithUUIDAsAnsweredElsewhere: %@
endCallWithUUIDAsDeclinedElsewhere: %@
endCallWithUUIDAsLocalHangup: %@
Reporting call failure for conversation with conversationUUID %@ and callUUID %@
Found an extra conversation that needs to be cleaned up: %@
[WARN] Asked to clean up conversation from our list but could not find it in conversation manager list: %@ callUUID: %@
Not leaving conversation but stopped tracking callUUID: %@ for conversationUUID: %@
Invitation preferences were set on the action, using those for the join context: %@
Invitation preferences weren't set on the action but existed on the conversation, using those for the join context: %@
Setting uplinkMuted for action: %@ conversation: %@
Checking whether to leave conversation with UUID %@: removedActiveParticipant %@.
No conversation found in conversation manager with UUID %@ so we are not checking whether to end the call after a participant left
Ending call since U+1 conversation with UUID %@: removedActiveParticipant %@.
[WARN] Couldn't find call to end for conversation %@. Falling back to leaving conversation directly.
Delaying check on whether to end call since participant %@ left conversation due to handoff
Not delaying check on whether to end call on participant leave
providerDidBegin: %@
providerDidReset: %@
providerDidDeactivateAudioSession
Asked to hold relay calls %@ while unholding relay calls %@
Asked to answer relay call %@ while disconnecting active relay calls %@
[WARN] Ignoring request to answer call because canBeAnswered is NO: %@
Asked to answer relay call %@ while disconnecting held relay calls %@ and holding relay calls %@
Asked to answer relay call %@ while holding relay calls %@
Asked to group relay calls %@ with relay calls %@
Asked to ungroup relay call %@ from other relay calls in group %@
Asked to disconnect relay call %@ while ungrouping relay call %@
Asked to disconnect relay calls %@
Asked to disconnect relay calls %@ while holding relay calls %@ and unholding relay calls %@ and ungrouping calls %@
Received notification: %@
softlink:r:path:/System/Library/Frameworks/Intents.framework/Intents
$sSY
$ss25ExpressibleByArrayLiteralP
$ss10SetAlgebraP
$ss9OptionSetP
ySo22UNNotificationCategoryCG
ySSG
ySo34TUConversationInvitationPreferenceCG
ySo8TUHandleCG
ySo20TUConversationMemberCG
So8NSStringC
_A7At
_A63At
So7NSErrorC
$ss21_ObjectiveCBridgeableP
$s10Foundation21_BridgedStoredNSErrorP
$s10Foundation18_ErrorCodeProtocolP
$s13callservicesd22CompanionLinkMessengerP
$s13callservicesd13CompanionLinkP
_pSg
$s13callservicesd25AudioInterruptionProviderP
14DescriptorType
Sgyc
$s13callservicesd33AudioInterruptionPriorityProviderP
$s13callservicesd18DescriptorProviderP
x2id_t
$s13callservicesd18DescriptorResolverP
ySS_SbtG
ySSSbG
So30CSDAbstractIDSProviderDelegateC
SbSo17CXStartCallActionC_
ShySSGSo17CXStartCallActionC_
So22TUContactsDataProviderCtc
So25CSDIDSDualSessionProvider_p
_ShySSGSDySSypGSo17OS_dispatch_queueCtc
So10CSDIDSChat_pSo25CSDExternalIDSDualSessionC_
So17CXStartCallActionCS2btc
So22TUContactsDataProviderC
So17OS_dispatch_queueC
So19CXInProcessProviderC
So25CSDExternalIDSDualSessionCSo8TUHandleCSbSo12NSDictionaryCSo10CSDIDSChat_pIeyByyyya_
So25CSDExternalIDSDualSessionCSo8TUHandleCSbSDySS
GSo10CSDIDSChat_pIegggygo_
So10CSDIDSChat_p
SaySo10CSDIDSChat_pG
ySS_yptG
ShySSG
SDySSypG
So17CXStartCallActionC
ypSg
So8NSObjectC
ySS_SSGSg
ySS_SSG
ySSG
$s13callservicesd30ConversationPersistenceStorageP
$s13callservicesd30ConversationLinkSyncDataSourceP
ySSSiG
yyXlG
So38TUConversationLinkDescriptorDataSource_p
$s13callservicesd37EmergencyCallbackCapabilitiesProtocolP
yycSg
yyXlGSgGc
ySi_So17OS_dispatch_queueC
So21CSDCallCenterObserver_p
SgXw
IeyB_
So16CARSessionStatusC
ySbcSg
SgXw
IeyBy_
So16IMPowerAssertionCSg
So21CSDCallCenterObserver_pSg
So17TURouteControllerCSg
SgXw
SdSi_
So24OS_dispatch_source_timer_p
SaySSG
SgXw
SgXwz_Xx
SSIegg_
ySSG
$s13callservicesd40AudioInterruptionProviderFactoryProtocolP
37AVAudioClientInterruptionProviderType
38AVAudioSessionInterruptionProviderType
So14IDSDestinationC
$s13callservicesd32ChangeTrackingDescriptorResolverP
So23FBSDisplayLayoutMonitorC
$s13callservicesd26CallCenterObserverProtocolP
$s13callservicesd26CallCenterObserverDelegateP
So16CSDCallContainer_pyc
So20NSNotificationCenterC
So29CSDCallCenterObserverDelegate_pSgXw
ySo7CSDCallC_
tcSg
So7CSDCallC
IeyByy_
So21TUConversationManagerC
So16FTNetworkSupportC
So34CSDConversationInvitationResolving_p
So14TUFeatureFlagsC
So24UNUserNotificationCenterC
So24CSDConversationServerBag_p
SSSo14TUConversationCc
SSSo8TUHandleC_So22TUContactsDataProviderCtc
SSSo8TUHandleC_So22TUContactsDataProviderCSo14TUConversationCtc
ShySo22UNNotificationCategoryCG
ySo21UNNotificationRequestCcSg
ySS_So21UNNotificationContentCtcSg
ySScSg
ySo20TUConversationMemberC_G
So14TUConversationCSg
So18TUConversationLinkCSg
SgXw
SgXwz_Xx
So21UNNotificationRequestC
Sg_ABt
So13AVAudioPlayerCG
10descriptor_t
So7CSDCallC
So6TUCallCSbIggd_
So7CSDCallC
SgIeggyr_
So21CSDFaceTimeIDSServiceC
$s13callservicesd24UserNotificationProviderP
$s13callservicesd24UserNotificationResponseP
So21OS_dispatch_semaphoreCSg
SSSg
ySDySSypGG
SaySDySSypGG
$s13callservicesd41ConversationLinkSyncIDSInteractorDelegateP
So13CSDIDSService_p
_pSgXw
So10IDSServiceCSg
_yptG
So14AVAudioSessionC
So14AVAudioSessionCSg
$s13callservicesd23ProcessObserverProtocolP
SDySSSDy
So26BKSApplicationStateMonitorC
tcSg
ySS_
tcSg
_SitG
SiGIegg_
SgXw
So12NSDictionaryCIeyBy_
So8NSStringC
IeyByyy_
IeyByy_
$s13callservicesd19NSNumberConvertibleP
SDySSSDyS2SGG
ySS_SDyS2SGtG
ySS_SStG
SDyS2SG
$s13callservicesd28IDSDeviceDestinationResolverP
Sbyc
So9IDSDeviceCSgSSc
So15CSDIDSTransportCSg
ySS_SSGG
yypG
ySuG
ySi5count_Sb11isAmbiguoustG
ySaySo7TURouteCGG
SaySo7TURouteCG
G0R0_
ySaySo7CSDCallCGG
SaySo7CSDCallCG
ySDy
ypGG
ySDyS2SGG
$s13callservicesd24DirtyCallManagerProtocolP
ySo7CSDCallCcSg
ShySo7CSDCallCG
So7CSDCallCIeyBy_
$s13callservicesd33PendingMembershipTrackerServerBagP
$s13callservicesd32PendingMembershipTrackerDelegateP
$s13callservicesd33PendingMembershipTrackerMessengerP
$s13callservicesd31PendingMembershipTrackerStorageP
So36CSDPendingMembershipTrackerMessenger_pSgXw
So35CSDPendingMembershipTrackerDelegate_pSgXw
SDySS
So20TUConversationMemberC
3key_SDySS
G5valuetSg
3key_SDySS
G5valuet
ShySo8TUHandleCG
ySo26CSDConversationParticipantC_G
SaySo20TUConversationMemberCG
SaySo20TUConversationMemberCGG
ShySo8TUHandleCG18delegatedToMembers_
11responseKeyt
So8TUHandleC6sender_t
SaySo8NSNumberCG
So8NSObjectCSg
So8TUHandleCSg
_SDy
ypGSSSo17IDSMessageContextCt
_ypt
ySSSo8NSObjectCG
ySSSo8NSStringCG
_Sb9available_Si5counttt
Sb9available_Si5counttG
ShySo22UNNotificationCategoryCGG
ySaySo11IDSEndpointCGG
SaySo11IDSEndpointCG
ySo7CSDCallCSgG
So7CSDCallCSg
ySSSaySo9CNContactCGG
yS2SG
yySb_
_pSgtcG
SgSo7CSDCallC_
So13AVAudioPlayerCG
ySSSDyS2SGG
ySS_SSGt
ySS_SSGG
SgXw
_ypt
ySSSo9CNContactCG
ySDy
ypG5event_ADSg7optionst
_pGG
ySDy
ypG7request_ADSg7optionsyAF_AF
_pSgtc7handlertAH_pGG
ySSypG
SS_ypt
_So23TUScreenShareAttributes_pt
So23TUScreenShareAttributes_pG
_Shy
ySSSaySo8NSNumberCGG
ShySo21RPCompanionLinkClientCG
So21RPCompanionLinkDeviceC
ySo21RPCompanionLinkDeviceC
_pGIegg_
SgXw
SgXwz_Xx
So21RPCompanionLinkClientC
_pGIegg_
_yptG
ySiG
SaySiG
So12TUCallCenterC
SDySSypGSg
So6TUCallCSg
ySo8TUHandleC_G
So14NSUserDefaultsC
ypGSg
$ss12IdentifiableP
So22CSDCallStateControllerCSgXw
SaySo17CSDCallDataSourceCG
So19CSDDirtyCallManager_p
SgXw
$s13callservicesd24LocalAudioSystemProviderP
SS3key_yp5valuetSg
ySSSDy
ySSyXlG
ySSSaySo28TUConversationLinkDescriptorCGG
ySSSay
ySSSay
ySSSo7TURouteCG
ySSSo21RPCompanionLinkDeviceCG
So12RTCReportingCG
So14OS_nw_activity_pG
So20TUConversationReportCG
SDySS
ySo8NSNumberCSSG
_AAt
38AVAudioSessionInterruptionProviderType
37AVAudioClientInterruptionProviderType
yq_q0_q1_G
Sdyc
GSgXw
_pSg
SDyS2SGSg
So23TUAudioSystemControllerC
$s13callservicesd21RingtoneProviderAlertP
$s13callservicesd24RingtoneProviderProtocolP
So14CNContactStoreC
_pSg
So21OS_dispatch_semaphoreC
_pSgSo20TLAlertConfigurationCc
So15CNKeyDescriptor_p
$s13callservicesd13RouteProviderP
$s13callservicesd25DeselectableRouteProviderP
$s13callservicesd029PairedHostDeviceRouteTrackingE8ProviderP
$s13callservicesd31ConversationLinkManagerDelegateP
So13CSDIDSServiceC
So34CSDConversationLinkManagerDelegate_pSg
SaySo28TUConversationLinkDescriptorCG
So12IDSPseudonymC
So28TUConversationLinkDescriptorC
_pSgIegyg_Sg
So35TUMutableConversationLinkDescriptorC
ySnySiGG
ShySo8TUHandleCGSg
So18TUConversationLinkCSg
_pSgIeggg_
So8TUHandleC
So28TUConversationLinkDescriptorCSg
_pSgIeggg_
_pSgIegyng_Sg
So18TUConversationLinkC
ySaySo28TUConversationLinkDescriptorCGG
ySaySo28TUConversationLinkDescriptorCGGSSG
SSSo11NSPredicateCIegnr_
ShySo18TUConversationLinkCGSg
_pSgIeggg_
SaySo18TUConversationLinkCGSg
_pSgIeggg_
So31CSDMessagingConversationMessageCSgSo6NSDataCSgSo7NSErrorCSgIeyByyy_
So40CSDMessagingEncryptedConversationMessageC
So31CSDMessagingConversationMessageCSg
_pSgIegggg_
So18TUConversationLinkCSg
_pSgIeggg_Sg
So18TUConversationLinkCSgSo7NSErrorCSgIeyByy_
So6NSDateCSgSo7NSErrorCSgIeyByyy_
So7NSErrorCSgIeyByy_
So28TUConversationLinkDescriptorCSgSo7NSErrorCSgIeyByy_
So5NSSetCSgSo7NSErrorCSgIeyByy_
So7NSArrayCSgSo7NSErrorCSgIeyByy_
_pSg
SgXw
$s13callservicesd14VoucherManagerP
So20TUVouchingEnablement_p
So17CSDIDSPushHandler_p
SayySb_
_pSgtcG
_pSgIegyg_
So9TUVoucherC
_pSgIegyg_Sgz_Xx
So9TUVoucherCSgSo7NSErrorCSgIeyByy_
_pSgIeggg_Sg
So9TUVoucherCSg
_pSgIeggg_
_pSgIeggg_Sgz_Xx
SDySSSay
So12RTCReportingCG
So20TUConversationReportCG
So14OS_nw_activity_pG
SDySS
So19CSDAppleIDUtilitiesC
So12RTCReportingCSg
So14TUConversationC
So10CSDIDSChatC
SaySo6TUCallCG
So7TURouteC
So22CSDReportingControllerC
$s13callservicesd15RTCReporterInfoP
SiSg
SdSg
SbSg
$s13callservicesd37ScreenSharingActivityManagerProvidingP
$s13callservicesd36ScreenSharingActivityManagerDelegateP
So39CSDScreenSharingActivityManagerDelegate_pSgXw
So23TUScreenShareAttributes_pG
3key_
G5valuetSg
3key_
G5valuet
_GSg_ADt
_GSg
SgXw
_G_G
SgXwz_Xx
Ieggn_
So23TUScreenShareAttributes_p
SDySS
SDySS
$ss12CaseIterableP
ySi_
Sg_ABt
SS3key_
5valuetSg
SS3key_
5valuet
Sg_ABt
_AAt
SS3key_
5valuetSg
SS3key_
5valuet
SS3key_
5valuetSg
SS3key_
5valuet
SDySSSbG
SDySS
$s13callservicesd19UserIntentValidatorP
z_Xx
_pXp
$s13callservicesd21CallHistoryDataSourceP
$s13callservicesd10RecentCallP
So24CHCallInteractionManagerC
So21TUCallProviderManagerC
_pcSg
So18TUConversationLinkCSg
SgcSg
ySuG
SaySo9CNContactCG
ySo8CHHandleCG
_pSg
So13TUDialRequestC
So7NSErrorCSg
ySo18TUConversationLinkCG
ySo7CSDCallCG
ySo21RPCompanionLinkClientCG
ySo20TUNearbyDeviceHandleCG
ySo25TUConversationParticipantCG
_pSg
So14TUCallProviderC
$s13callservicesd25HoldMusicProviderProtocolP
So19AVSpeechSynthesizerCSg
So13AVAudioPlayerCSg
SgXw
So27TUCallScreenShareAttributesC
So13CSDAVCMoments_p
SDySS
So20CSDUnknownCallFilterC
So38TUContactsDataProviderAppleCareHandlesC
So45CSDCarrierBundlePhoneNumberProviderControllerC
SDySSSaySo9CNContactCGG
SDySSSo7TURouteCG
ySo7TURouteCcSg
So7TURouteCIeyBy_
SgXw
SgXwz_Xx
ySo21RPCompanionLinkClientCG
ySo21RPCompanionLinkClientCG
ySo21RPCompanionLinkClientCGSgXw
SaySo21RPCompanionLinkDeviceCG
ySo21RPCompanionLinkClientCGSgXw
So21RPCompanionLinkDeviceCIegn_
So21RPCompanionLinkDeviceC
Iegny_
So7CSDCallCSbIggd_
$s13callservicesd31ConversationInvitationResolvingP
ShySo34TUConversationInvitationPreferenceCG
yShySo34TUConversationInvitationPreferenceCG_
ShySo34TUConversationInvitationPreferenceCG_
_pSg
So26CSDDeviceLockStateObserverCSg
A2ASgSbSo20TUConversationMemberCSo8TUHandleCSayADGAGSayAFGSaySo26CSDConversationParticipantCGSo0A4LinkCSgSo0A6ReportCSaySo39CSDMessagingConversationActivitySessionCGSSSgARSg
Iegnnnygggggggggggy_
So15CSDConversationC
So6NSUUIDCA2BSg
So20TUConversationMemberCSo8TUHandleCSo7NSArrayCA3JSo0B4LinkCSgSo0B6ReportCAJSo8NSStringCSgSo39CSDMessagingConversationActivitySessionCSg
IeyByyyyyyyyyyyyyyyy_
_pSgIegr_
SgXw
SgXwz_Xx
Sg_ABt
Sg_ABt
Sg_ABt
$s13callservicesd30LetMeInRecoveryManagerDelegateP
SDySSSay
SDySS
ySo31CSDMessagingConversationMessageCSg_
_pSgtc
$s13callservicesd26ParticipantUpdateSanitizerP
So17CSDVoucherManager_p
So32IDSGroupSessionParticipantUpdateCIeyBy_
SgXw
SgXwz_Xx
So49CSDMessagingConversationParticipantDidJoinContextC
So32IDSGroupSessionParticipantUpdateCIegg_
So32IDSGroupSessionParticipantUpdateC
SaySo30CSDMessagingConversationMemberCG
So30CSDMessagingConversationMemberC
So17OS_dispatch_groupC
$s13callservicesd26DescriptorTrackingProviderP
$s13callservicesd21AudioResolverProtocolP
14DescriptorType
So22CSDTTYProviderObserver_p
So14TUFeatureFlags_p
Sg_ABSbtcSg
Sg_ABt
SgXw
SDyx
yx_xGG
qd__
SaySo12TUAudioRouteCG
So12TUAudioRouteCSg
So12TUAudioRouteC
SaySo12TUAudioRouteCGz_Xx
$s13callservicesd20NearbyDeviceProviderP
$s13callservicesd12NearbyDeviceP
10DeviceType
SDySS10DeviceType
$s13callservicesd35ConversationLinkSyncManagerDelegateP
_pSgXw
So14IDSRateLimiterCySo8NSStringCG
SDySSSiG
SaySayypGG
So14NSMutableArrayCSg
SaySo47CSDMessagingConversationLinkGeneratorDescriptorCG
So27CSDMessagingLinkSyncMessageCSg
SaySSGSg
So13OS_xpc_object_p
SaySSGSg_Sbt
So20IDSIDQueryControllerC
SSSgSg
So7NSArrayCABIeyByy_
SaySSGAAIeggg_
SaySo11IDSEndpointCGIegg_
3key_yp5valuet
$s13callservicesd40AudioInterruptionActivationStateObserverP
G10identifier_t
$s13callservicesd18BlastDoorInterfaceP
ScPSg
So6NSDataC
So6NSDataCSgSo7NSErrorCSgIeyByy_
IeghH_
ytIeghHr_
ypXp
$s13callservicesd22UserNotificationCenterP
So23CSDCallFilterControllerC
SDySS
So16CSDClientManagerCyyXlyXlGSg
So22UNNotificationResponseC
Ieg_
_ShySo22UNNotificationCategoryCGtG
SgXw
SgXwz_Xx
So16CSDClientManagerC
SgXw
$s13callservicesd29DiscoveryModeProviderProtocolP
$s13callservicesd19VoicemailDataSourceP
$s13callservicesd9VoicemailP
So19CoreTelephonyClientC
ShySuG
Sb9available_Si5counttG
_pSg
3key_Sb9available_Si5countt5valuetSg
3key_Sb9available_Si5countt5valuet
SaySo8TUHandleCG
ShySo25TUConversationParticipantCG
SaySo25TUConversationParticipantCG
So9CHManagerC
So20CSDBlockedCallFilterC
So12IDSCTAdapterC
So8IDSCTSIM_p
$s13callservicesd21SoundProviderProtocolP
So17TUCallSoundPlayerC
Sg_ABt
So47TUConversationLinkDescriptorXPCClientDataSourceCSg
ySo21RPCompanionLinkDeviceC
ySo21RPCompanionLinkDeviceC_
SDySS
ySDy
ypG7request_ACSg7optionsyAE_AE
_pSgtc7handlertAG_pGG
SDySS
ySDy
ypG5event_ACSg7optionst
_pGG
Sg11localUpdate_AB5foundAB4lostAB7changedt
ySDy
ypG5event_ADSg7optionst
_pGG
y_AAy_
ySDy
ypG5event_ADSg7optionst
_pGGG
ySDy
ypG5event_ACSg7optionst
SgXw
SgXwz_Xx
_pGIegg_
ypGABSgIeggg_
ySDy
ypG7request_ADSg7optionsyAF_AF
_pSgtc7handlertAH_pGG
y_AAy_
ySDy
ypG7request_ADSg7optionsyAF_AF
_pSgtc7handlertAH_pGGG
ySDy
ypG7request_ACSg7optionsyAE_AE
_pSgtc7handlertAG_pG
ypGABSgA2C
_pSgIegggg_Iegggg_
ypGSgAC
_pSgytIegnnnr_
So12NSDictionaryCSgACSo7NSErrorCSgIeyByyy_
ypGSgAC
_pSgIegggg_
ySo21RPCompanionLinkDeviceC
GSo17OS_dispatch_queueCG
ySo21RPCompanionLinkDeviceC
GSo17OS_dispatch_queueCGG
ySo21RPCompanionLinkDeviceC
GSo17OS_dispatch_queueCGG
ySo21RPCompanionLinkDeviceC
GSo17OS_dispatch_queueCGG
GAKG
So21RPCompanionLinkDeviceCSg
Iegn_
_pSgIegg_Sg
_pIegn_
Iegn_
_pGSo17OS_dispatch_queueCG
ySDy
ypGSg8response_AD7optionst
_pGIegn_
ySDy
ypGSg8response_AD7optionst
_pGIegg_
Sb_yttIegn_
AE_pGG
GAE_pGGSo17OS_dispatch_queueCG
Iegn_
ypGIegn_
_p_G
AE_pGGGSDy
ypGG
ySbAD_pGSo17OS_dispatch_queueCGG
ytIegn_
_pGSo17OS_dispatch_queueCG
SaySDyS2SGG
So10AVCMomentsCSg
So21CSDAVCMomentsDelegate_pSgXw
SDySSSo8NSObjectCGSg
ySS_So8NSStringCtG
SDySSyXlG
6status_t
$s13callservicesd22ASCIIStringConvertibleP
SgXw
SgXwz_Xx
So7TURouteCSg
So17TURouteControllerC
So20CSDAVCMomentsRequest_p
So38CSDNeighborhoodActivityConduitDelegate_p
SgXwz_Xx
So20TUNearbyDeviceHandleC
$s13callservicesd35NeighborhoodActivityConduitDelegateP
So10NSMapTableCySo38CSDNeighborhoodActivityConduitDelegate_pSo17OS_dispatch_queueCG
ShySo20TUNearbyDeviceHandleCG
So20TUContactsDataSource_p
SDySS
So24OS_dispatch_source_timer_pSg
yShySo8TUHandleCG
_AAt
ySo25TUConversationParticipantC_G
So38CSDNeighborhoodActivityConduitDelegate_pIegg_
_pGSo17OS_dispatch_queueCG
_pGSo17OS_dispatch_queueCGAEG
ySDy
_p_G
ySDy
ypGSg8response_AE7optionst
yAdH_p_GG
ySDy
ypGSg8response_AF7optionst
yAeI_p_GGAfG_AfHtG
ySDy
ypGSg8response_AG7optionst
yAfJ_p_GGAgH_AgItG
ySDy
ypGSg8response_AH7optionst
yAgK_p_GGAhI_AhJtG
GGAK_pG
ySDy
ypGSg8response_AC7optionst
ySDy
ypGSg8response_AD7optionst
AC_pGG
AD_pGG
GAD_pGG
_pGIgg_Iegy_
_pGIegg_Iegg_
_pGIegn_
yShySo8TUHandleCG
yShySo8TUHandleCG
GGSayAEGG
yShySo8TUHandleCG
GGSDySS
yShySo8TUHandleCG
GGSDySS
GGSo17OS_dispatch_queueCG
yShySo8TUHandleCG
GGSDySS
GGSo17OS_dispatch_queueCGG
_pGSo17OS_dispatch_queueCG
_pGSo17OS_dispatch_queueCGAEG
ySDy
ypGSg8response_AG7optionst
yAfJ_p_GGAgH_AgItG
ySDy
ypGSg8response_AH7optionst
yAgK_p_GGAhI_AhJtG
GGAK_pG
SaySDy
ypGG
ySo20TUNearbyDeviceHandleC_G
GACG
GADGG
GAEGGSo17OS_dispatch_queueCG
Xoz_Xx
ySDy
ypG5event_ADSg7optionst
_pGSo17OS_dispatch_queueCG
ySDy
ypG5event_ACSg7optionst
So20TUNearbyDeviceHandleCSg
_pIegngzo_
ySDy
ypG5event_ADSg7optionst
_pGSo17OS_dispatch_queueCG
So20TUNearbyDeviceHandleCSg
_pIegngzo_
ySDy
ypG7request_ADSg7optionsyAF_AF
_pSgtc7handlertAH_pG
_pGSo17OS_dispatch_queueCG
ySDy
ypG7request_ACSg7optionsyAE_AE
_pSgtc7handlertAG_pG
So20TUNearbyDeviceHandleCSg
_pGIegngo_
_pGG
_p_G
AD_pGGG
_p_G
So20TUNearbyDeviceHandleCSg
_pGSo17OS_dispatch_queueCG
_pGIegn_
_p_G
_pGIegg_
So38CSDNeighborhoodActivityConduitDelegate_pSbIeggd_
Sbz_Xx
domain
error
_os_unfair_lock_opaque
rawValue
RawValue
ArrayLiteralElement
Element
_rawValue
osd_type
__Anonymous_field1
osd_decoder
osd_title
_nsError
_ObjectiveCType
Code
_ErrorType
osdd_library
osdd_type
authenticationFailed
operationNotSupported
insufficientDeviceInfo
authenticatedDeviceNotFound
alreadyAuthenticated
authenticationCompleted
boxed
_beginOrUpdate
_end
_resetState
_activeDescriptor
rawValue
ArrayLiteralElement
RawValue
Element
DescriptorType
default
high
proxy
local
isAccountActive
isDestinationValid
destinationsGenerator
outgoingSessionProviderGenerator
outgoingChatGenerator
contactsDataProvider
queue
queue
privateAPIValidator
$__lazy_storage_$_applicationStateValidator
donatedIntentValidator
backgroundBluetoothAccessValidator
mediaRemoteStateValidator
TUDataSource
_emergencyCallbackPossible
emergencyCallbackCapabilitiesDidChange
preventDetachAfterEmergencyCallTimeoutDeterminationHandler
dispatchAfterHandler
dispatchCancelHandler
queue
callCenterObserver
preventDetachAfterEmergencyCallTimeoutWorkItem
lock
state
subscribed
initialized
cancelled
carSessionQueue
carSessionStatus
carPlayScreenConnectionChanged
powerAssertion
powerAssertionDescription
callCenterObserver
routeController
acquirePowerAssertionHandler
releasePowerAssertionHandler
queue
intervalCalculator
actionByType
immediate
delayedShort
delayedLong
checkIn
timer
destinations
currentIndex
replacing
appendingNew
newOnly
AVAudioSessionInterruptionProviderType
AVAudioClientInterruptionProviderType
uniqueIdentifier
name
deviceType
isCurrentlyPicked
idsDestination
localKey
requestKey
responseKey
provider
queue
displayLayoutMonitor
$__lazy_storage_$_processObserver
bundleIdentifier
callContainerClosure
notificationCenter
delegate
triggers
callChanged
queue
contactsDataProvider
conversationManager
ftNetworkSupport
invitationResolver
featureFlags
notificationIdentifiersByConversationUUID
carPlayNotificationIdentifiersByConversationUUID
faceTimeNotificationCenter
conversationServerBag
facetimeIsShowingOnScreen
openURL
unlockAndOpenSensitiveURL
localizeConversationName
localizeHandleName
localizeHandleNameWithConversation
notificationType
categories
replace
removeNotification
updateBadgeValue
callCenterObserver
deviceIsHomePod
playersForSounds
letMeJoin
RawValue
FaceTime
Phone
RawValue
activeDescriptor
DescriptorType
service
delegate
knownDestinations
failedSending
audioSession
isLocal
_activationContext
activeDescriptor
DescriptorType
RawValue
queue
processInfoByBundleIdentifier
applicationMonitor
processStateChanged
processStateChangedWithBundleID
updateBadgeValue
queue
contactsDataProvider
openURL
localizeHandleName
notificationCenter
notificationType
categories
replace
removeNotification
fitnessPlusAppBundleID
fitnessPlusDaemonBundleID
routesDidChangeHandler
didPickRouteHandler
didDeselectAllRoutesHandler
supportsPrimaryCalling
hasRelayiCloudAccount
idsDeviceForIDSDeviceIdentifier
queue
callCenterObserver
nearbyDeviceMonitor
idsDeviceDestinationResolver
conversationManager
nearbyDeviceRoutes
activeRelayClientTransport
currentCallsSupportNearbyDevices
callChanged
queue
dirtyCallsArray
dirtyCallsSet
messenger
delegate
storage
serverBag
underlyingStorage
transactionUUID
mode
member
dateCreated
Host
Client
invalidHandle
Rejection
Approval
subject
cancellables
messenger
target
buffer
proxiedMessageCount
buffering
proto
resource
clientsPendingAuthentication
queue
maxDuration
unknownShortCallSignal
knownCallerSignal
junkCallSignal
linkCreatedSignal
silenceUnknownCallersEnabledObserver
link
message
options
protobufEncodeError
protobufDecodeError
invalidMessageContent
unknown
request
response
DescriptorType
callStateController
callChanged
dataSources
dirtyCallManager
callOutgoing
accessibilityDefaultRoute
audioSourceKey
ignoresBluetoothDeviceUID
beginOrUpdate
preserve
queue
resolver
audioInterruptionProviderPool
ringtoneProvider
soundProvider
holdMusicProvider
discoveryModeProvider
notificationCenter
deferredEndWorkItem
pendingExpeditedEndInterruptionUUIDs
endInterruptionDelay
mediaServicesWereResetObserver
audioSessionInterruptionObserver
audioController
factory
sharedAudioSystemController
sharedCallCenter
localAVAudioSessionInterruptionProvider
proxyAVAudioSessionInterruptionProvidersByAudioSessionID
avAudioClientInterruptionProvider
availability
photoRequestSuccessCount
photoRequestFailureCount
medianRequestDuration
meanRequestDuration
didBeginPlaying
contactStore
currentAlert
endedPlayingSemaphore
alertGenerator
playbackObserverGenerator
DescriptorType
service
serverBag
renewPseudonymTask
dataSource
linkSyncManager
lmiRecoveryManager
generateKeyAgreement
delegate
RawValue
completionQueue
vouchingEnablement
idsService
idsPushHandler
timeout
verificationCache
finished
pending
RawValue
queue
relayDeviceRouteChangesByCallUUID
groupUUIDToConversationReportingSessions
conversationUUIDToConversationReport
groupUUIDToConversationInfo
callUUIDToCallReportingSessions
callUUIDToGFTCallReportingSessions
callUUIDtoConversationUUID
conversationGroupUUIDToCallUUID
callUUIDtoConversationGroupUUID
uuidToNWActivity
uuidToNWActivityConnecting
idsSessionUUIDToChatUUIDs
callInfosPendingScoreForCallUUIDs
userScoreEnabled
appleIDUtilities
callInfo
rtcReporting
callUUID
durationMs
relativeStart
relativeEnd
bucketedDuration
endReason
providerErrorCode
providerEndedReason
setupTimeMs
connectionTimeMs
relay
incoming
connected
currentlyGrouped
relayDeviceRouteChanges
filteredOutReason
verficationStatus
knownCallerStatus
isOwnNumber
isConversation
fromLink
returnedCall
isSiriSuggested
isKnownContact
isVerifiedAppleCare
isSignedIntoiCloud
junkConfidence
identificationCategory
isKnownCaller
userScore
brandedCall
brandedCallWithImage
delegate
subscriptionsById
sessionsById
remoteAttributesById
messenger
observer
featureFlags
carPlayObserver
unknown
message
unknownFields
rawData
groupUpdate
resource
messageData
fromID
context
isInitiator
groupUuid
participantID
participantDestinationID
updateType
updateSubtype
fromServer
serverDate
participantData
clientContextData
members
participantIds
relaySessionID
resourceData
metadata
AllCases
identifiers
policyInfos
identifierHash
userAccountInfoData
contacts
identifier
_memberAssociationPrimaryInfo
namePrefix
givenName
middleName
familyName
nameSuffix
nickname
imageData
conversationIdentifier
deviceToken
_associationVoucherData
success
memberToken
UNRECOGNIZED
unknown
pointOfPlayback
controlCenterWithActivity
controlCenterWithoutActivity
supportedTypes
_conversationGroupUuidString
_handleData
_identifier
_avcIdentifier
expanse
identityClaiming
RawValue
timeout
isAmbiguous
processObserver
donatedIntentCache
validator
isValid
streamToken
requesterID
queue
callInteractionManager
callHistoryDataSource
callProviderManager
pendingCallIdentifiers
supportedMediaTypes
supportedProviders
mostRecentCallDate
inCallServiceProcessObserver
supportsDisplayingFaceTimeAudioCalls
openURL
dialRecentCall
findConversationLink
featureFlags
notificationType
replace
removeNotification
updateBadgeValue
privateKey
soundType
provider
isVideo
region
uuid
speechSynthesizerEventHandler
activeDescriptor
speechSynthesizer
audioPlayer
finishedUtterance
startedUtterance
canceledUtterance
DescriptorType
sharerHandleValue
currentRemoteAttributes
deviceFamily
style
displayScale
scaleFactor
originalWidth
originalHeight
isWindowed
RawValue
type
failed
iPhone
iPad
iPod
watch
audioAccessory
RawValue
moments
remoteIDSDestinations
isRegistered
activeRequestsByTransactionID
callCenterObserver
contactStore
appleCareHandles
carrierBundleController
invalidPublicKeyData
requestKeyExhausted
responseKeyExhausted
cryptoFailed
_routesByUniqueIdentifier
routesDidChangeHandler
routeWasPickedHandler
timedOutPickingRouteHandler
queue
routeProviders
pendingRouteContext
pickWhenAvailableRouteIdentifier
pendingPickedRouteTimeout
route
routeProvider
deviceInvitationPreferences
required
optional
queue
storage
lockStateObserver
interruptionDescriptor
interruptionDeferredEndDescriptor
ringtoneDescriptor
soundDescriptorAction
holdMusicDescriptor
discoveryModeDescriptor
queue
routesDidChangeHandler
pairedHostDeviceRoutes
contactIdentifier
providerRingtoneSoundURL
uuid
isVideo
handle
pseudonymToFailedLetMeIn
pseudonymToInvalidationWorkItem
queue
serverBag
delegate
message
pseudonym
fromHandle
completionHandler
completionQueue
vouchingEnablement
voucherManager
associationNotFound
associationsDoNotCorrespond
associationWithoutPrimary
associationWithSelf
associationBetweenLightweightMembers
RawValue
identifier
version
queue
callCenterObserver
ttyProviderObserver
localAudioSystemProvider
deviceSupportsRingtone
featureFlags
lastPlayedSoundDate
lastPlayedSoundType
soundDescriptorActionResolver
resolvedDescriptor
resolutionChangedHandler
DescriptorType
UpdateContext
call
triggers
items
timeProvider
expiration
item
routesDidChangeHandler
audioRoutes
queue
localAudioSystemProvider
callCenterObserver
ttyProviderObserver
callAudioCategory
callAudioMode
lastUserPickedRoute
callAudioInterruptionState
inactiveWithPrematurelySelectedRoute
inactive
active
DeviceType
queue
nearbyDeviceProvider
devicesChangedHandler
devicesByEffectiveIdentifier
delegate
dataSource
interactor
serverBag
recoverRateLimiter
recoverResponseRateLimiter
messageQueue
descriptorManager
queue
stateHandle
remoteMissingIdentifiers
localMissingIdentifiers
differingVersionSumIdentifiers
localDescriptorsBehindRemote
remoteDescriptorsBehindLocal
delta
initial
featureFlags
queue
idsQueryController
serverBag
$__lazy_storage_$_supportsConversationOneToOneModeEnabled
$__lazy_storage_$_pushTokenForSelf
providerType
category
mode
activationContext
priority
wantsHoldMusic
mediaPlaybackOnExternalDevice
wantsMixingVoiceWithMedia
wantsExpeditedAudioSession
wantsA2DP
operationMode
activationStateObserver
callProviderAuditToken
callProviderBundleIdentifier
requiresPublishingDynamicMicAttribution
avAudioSession
avAudioClient
blastDoor
typeMismatch
emptyResult
callFilterController
phoneNotificationCenter
faceTimeNotificationCenter
providersByIdentifier
queue
providers
clientManager
DescriptorType
queue
telephonyClient
contactStore
voicemailDataSource
postedVoicemailIdentifiers
pendingVoicemailIdentifiers
mostRecentVoicemailDate
mostRecentNonVisualVoicemailDate
localizeVoicemailName
callbackVoicemail
openURL
unsubscribedVoicemailInfoForUUID
notificationType
replace
removeNotification
updateBadgeValue
usTollFreePrefixes
callHistoryManager
idsCTAdapter
activeDescriptor
player
DescriptorType
callUUID
lock
$__lazy_storage_$_dataSource
uuid
relativeStart
conversationBaseTime
conversationProvider
hasLink
isPending
relativeEnd
duration
uPlusOneModeAtStart
uPlusOneModeAtEnd
isHandoffContinuation
originatingUIType
maximumMemberCount
initialMemberCount
finalMemberCount
maxNumberOfParticipants
AVCBlobRecoveryAttempts
AVCBlobRecoveryTimeouts
transitionAttempts
numberLMIRequests
numberLMIApprovals
numberLMIDismissals
messageRetryAttempts
messageRetryFailures
messageRetrySuccesses
avcBlobRecoveryMessageRetryAttempts
avcBlobRecoveryMessageRetryFailures
avcBlobRecoveryMessageRetrySuccesses
timebase
hasHadActiveParticipants
cumulativeTimeAlone
timeAloneAtEnd
lastTimeNotAlone
queue
client
authenticationController
activated
lockdownModeEnabled
deviceUpdatedPublisher
deviceFoundPublisher
deviceLostPublisher
deviceChangedPublisher
cancellables
stateHandle
messagePublishers
eventPublishers
manager
DeviceType
nonce
iCloudAccountToken
iTunesAccountToken
homeUserIdentifierTokens
moments
delegate
service
accessGroup
account
unhandledError
noPassword
unexpectedPasswordData
unexpectedItemData
queue
callCenterQueue
conversationManager
serverBag
routeController
pickedRouteUniqueIdentifier
avcRequest
session
messenger
cancellables
queue
conversationManager
callCenter
conversationServerBag
idsService
vouchingEnablement
voucherManager
delegatesToQueues
featureFlags
networkSupport
handedOffConversations
joinApprovalState
localTVDevices
joinCompletionSubjects
contactStore
pendingJoinConversationIDs
activeConversationUpdateSubject
activeConversationUpdateCancellablesByDeviceID
messageProxy
idsProxyCleanupTimer
conversationIDsWithActivities
stateHandle
contactForwardingCanceler
device
member
conversationUUID
conversationGroupUUIDHash
knownParticipantsPublisher
sessionAvailable
sessionUnavailable
none
requested
cancelled
link
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>Application-Group</key>
<array>
<string>com.apple.callhistory</string>
</array>
<key>BSServiceDomains</key>
<dict>
<key>com.apple.callkit</key>
<dict>
<key>MachName</key>
<string>com.apple.callkit.service</string>
<key>Services</key>
<dict>
<key>com.apple.callkit.service.channel</key>
<dict/>
</dict>
</dict>
</dict>
<key>BuildMachineOSBuild</key>
<string>22A380007</string>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>callservicesd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.TelephonyUtilities</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>callservicesd</string>
<key>CFBundlePackageType</key>
<string>FMWK</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14E6097d</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.4</string>
<key>DTSDKBuild</key>
<string>20E5212d</string>
<key>DTSDKName</key>
<string>iphonesimulator16.4.internal</string>
<key>DTXcode</key>
<string>1430</string>
<key>DTXcodeBuild</key>
<string>14E6097d</string>
<key>MinimumOSVersion</key>
<string>16.4</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
<key>_CFBundleUseAppleLocalizations</key>
<true/>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.telephonyutilities.callservicesd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>development</string>
<key>com.apple.CallHistory.sync.allow</key>
<true/>
<key>com.apple.CallKit.call-directory</key>
<array>
<string>synchronize-extensions</string>
<string>compact-store</string>
<string>query-identification-entries</string>
</array>
<key>com.apple.CallKit.call-directory.extension-host</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>phone</string>
<string>voice</string>
<string>identity</string>
<string>data-usage</string>
<string>data-allowed</string>
<string>data-allowed-write</string>
<string>carrier-space</string>
<string>carrier-settings</string>
</array>
<key>com.apple.CompanionLink</key>
<true/>
<key>com.apple.FaceTime.CallLaunch</key>
<true/>
<key>com.apple.FaceTime.FTConversationService</key>
<array>
<string>access-conversation-links</string>
<string>modify-conversation-links</string>
<string>access-conversation-links</string>
</array>
<key>com.apple.FaceTime.NoPrompt</key>
<true/>
<key>com.apple.appletv.pbs.mediaremote</key>
<true/>
<key>com.apple.appletv.pbs.user-profiles</key>
<true/>
<key>com.apple.appletv.pbs.user-profiles.select</key>
<true/>
<key>com.apple.assistant.settings</key>
<true/>
<key>com.apple.backboardd.launchapplications</key>
<true/>
<key>com.apple.backboardd.proximityDetection</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coreduetd.context</key>
<true/>
<key>com.apple.coreduetd.knowledge</key>
<true/>
<key>com.apple.coreduetd.people</key>
<true/>
<key>com.apple.coremedia.allow-protected-content-playback</key>
<true/>
<key>com.apple.coremedia.captureassertionservice</key>
<array>
<string>modify-assertion</string>
</array>
<key>com.apple.corespeech.supportheysiriwhenrecord</key>
<true/>
<key>com.apple.coretelephony.Calls.allow</key>
<true/>
<key>com.apple.developer.group-session</key>
<true/>
<key>com.apple.developer.notificationcenter-identifiers</key>
<array>
<string>com.apple.facetime</string>
<string>com.apple.Photos</string>
</array>
<key>com.apple.duet.expertcenter.consumer</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.imagent</key>
<true/>
<key>com.apple.imagent.av</key>
<true/>
<key>com.apple.messages.nicknames</key>
<true/>
<key>com.apple.multitasking.termination</key>
<true/>
<key>com.apple.multitasking.voipassertions</key>
<true/>
<key>com.apple.nano.nanoregistry.generalaccess</key>
<true/>
<key>com.apple.pegasus.backgroundPIPServiceEntitlement</key>
<true/>
<key>com.apple.private.CallHistory.read-write</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.aps-client-cert-access</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.phoneNumberResolver</string>
</array>
<key>com.apple.private.attentionawareness</key>
<true/>
<key>com.apple.private.attentionawareness.poll</key>
<true/>
<key>com.apple.private.attribution.explicitly-assumed-identities</key>
<array>
<dict>
<key>type</key>
<string>bundleID</string>
<key>value</key>
<string>com.apple.facetime</string>
</dict>
<dict>
<key>type</key>
<string>bundleID</string>
<key>value</key>
<string>com.apple.mobilephone</string>
</dict>
<dict>
<key>type</key>
<string>path</string>
<key>value</key>
<string>/System/Library/PrivateFrameworks/TelephonyUtilities.framework/callservicesd</string>
</dict>
</array>
<key>com.apple.private.biome.read-write</key>
<array>
<string>GroupActivitySession</string>
</array>
<key>com.apple.private.canGetAppLinkInfo</key>
<true/>
<key>com.apple.private.carkit.dnd</key>
<true/>
<key>com.apple.private.contacts</key>
<true/>
<key>com.apple.private.copresence</key>
<true/>
<key>com.apple.private.coreaudio.borrowaudiosession.allow</key>
<true/>
<key>com.apple.private.coreaudio.mxsessionPropertyPipe</key>
<true/>
<key>com.apple.private.coremedia.interruptions.phonecallpriority.allow</key>
<true/>
<key>com.apple.private.coreservices.canalwaysadvertise</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.coreservices.canopenactivity</key>
<true/>
<key>com.apple.private.coreservices.lsuseractivityd.LSAlwaysPick</key>
<true/>
<key>com.apple.private.coreservices.lsuseractivityd.bestappsuggestion</key>
<true/>
<key>com.apple.private.dmd.emergency-mode</key>
<true/>
<key>com.apple.private.dmd.policy</key>
<true/>
<key>com.apple.private.donotdisturb.behavior.resolution.client-identifiers</key>
<array>
<string>com.apple.telephonyutilities.callservicesd</string>
</array>
<key>com.apple.private.externalaccessory.showallaccessories</key>
<true/>
<key>com.apple.private.game-center</key>
<array>
<string>Account</string>
<string>Authenticate</string>
<string>Multiplayer</string>
<string>TurnBasedMultiplayer</string>
<string>GameStats</string>
</array>
<key>com.apple.private.game-center.bypass-authentication</key>
<true/>
<key>com.apple.private.hid.client.event-monitor</key>
<true/>
<key>com.apple.private.icfcallserver</key>
<true/>
<key>com.apple.private.ids.firewall</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.dropin.communication</string>
<string>com.apple.private.alloy.facetime.multi</string>
<string>com.apple.private.alloy.facetime.video</string>
<string>com.apple.private.alloy.facetime.lp</string>
<string>com.apple.private.alloy.phonecontinuity</string>
<string>com.apple.ess</string>
<string>com.apple.private.alloy.phone.auth</string>
<string>com.apple.private.alloy.facetime.audio</string>
<string>com.apple.private.alloy.facetime.sync</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.dropin.communication</string>
<string>com.apple.private.alloy.facetime.multi</string>
<string>com.apple.private.alloy.facetime.video</string>
<string>com.apple.private.alloy.facetime.lp</string>
<string>com.apple.private.alloy.phonecontinuity</string>
<string>com.apple.private.alloy.phone.auth</string>
<string>com.apple.private.alloy.facetime.audio</string>
<string>com.apple.private.alloy.facetime.sync</string>
</array>
<key>com.apple.private.ids.registration</key>
<array>
<string>com.apple.private.alloy.dropin.communication</string>
<string>com.apple.private.alloy.facetime.multi</string>
<string>com.apple.private.alloy.facetime.sync</string>
</array>
<key>com.apple.private.ids.remoteurlconnection</key>
<true/>
<key>com.apple.private.ids.self-session</key>
<array>
<string>com.apple.private.alloy.dropin.communication</string>
<string>com.apple.private.alloy.facetime.multi</string>
<string>com.apple.private.alloy.phonecontinuity</string>
<string>com.apple.private.alloy.facetime.video</string>
<string>com.apple.private.alloy.facetime.audio</string>
<string>com.apple.private.alloy.tincan.audio</string>
<string>com.apple.private.alloy.facetime.sync</string>
</array>
<key>com.apple.private.ids.session</key>
<array>
<string>com.apple.private.alloy.dropin.communication</string>
<string>com.apple.private.alloy.facetime.multi</string>
<string>com.apple.private.alloy.phonecontinuity</string>
<string>com.apple.private.alloy.facetime.video</string>
<string>com.apple.private.alloy.facetime.audio</string>
<string>com.apple.private.alloy.tincan.audio</string>
<string>com.apple.private.alloy.facetime.sync</string>
</array>
<key>com.apple.private.ids.session-private</key>
<array>
<string>com.apple.private.alloy.dropin.communication</string>
<string>com.apple.private.alloy.facetime.multi</string>
<string>com.apple.private.alloy.phonecontinuity</string>
<string>com.apple.private.alloy.facetime.video</string>
<string>com.apple.private.alloy.facetime.audio</string>
<string>com.apple.private.alloy.tincan.audio</string>
<string>com.apple.private.alloy.facetime.sync</string>
</array>
<key>com.apple.private.imavcore.imavagent</key>
<true/>
<key>com.apple.private.imcore.imremoteurlconnection</key>
<true/>
<key>com.apple.private.lockdown.finegrained-get</key>
<array>
<string>NULL/ActivationState</string>
</array>
<key>com.apple.private.necp.match</key>
<true/>
<key>com.apple.private.notificationcenter-system</key>
<array>
<dict>
<key>identifier</key>
<string>com.apple.SystemNote</string>
</dict>
</array>
<key>com.apple.private.notificationcenter.internalpushclient</key>
<true/>
<key>com.apple.private.notificationcenterui.alerts</key>
<true/>
<key>com.apple.private.rtcreportingd</key>
<true/>
<key>com.apple.private.screen-time</key>
<true/>
<key>com.apple.private.security.storage.CallHistory</key>
<true/>
<key>com.apple.private.security.storage.Messages</key>
<true/>
<key>com.apple.private.security.storage.Voicemail</key>
<true/>
<key>com.apple.private.suggestions.contacts</key>
<true/>
<key>com.apple.private.system-keychain</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
<string>kTCCServicePhotos</string>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceMicrophone</string>
<string>kTCCServiceWillow</string>
</array>
<key>com.apple.private.tcc.manager.check-by-audit-token</key>
<array>
<string>kTCCServiceBluetoothAlways</string>
</array>
<key>com.apple.private.tcc.manager.get-identity-for-credential</key>
<true/>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.facetime</string>
<string>com.apple.mobilephone</string>
</array>
<key>com.apple.runningboard.assertions.callservicesd</key>
<true/>
<key>com.apple.runningboard.process-state</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.carkit.service</string>
<string>com.apple.coreduetd.people</string>
<string>com.apple.fairplayd.versioned</string>
<string>com.apple.biome.PublicStreamAccessService</string>
<string>com.apple.imtransferservices.IMTransferAgent</string>
<string>com.apple.adid</string>
<string>com.apple.group-activities.conversationmanagerhost</string>
<string>com.apple.CompanionLink</string>
<string>com.apple.gamed</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.InCallService</string>
<string>com.apple.suggestions</string>
<string>com.apple.ScreenTimeAgent</string>
<string>com.apple.VideoConference</string>
<string>com.apple.VideoProcessing</string>
<string>com.apple.ClarityUI</string>
<string>com.apple.ClarityUI.PhoneFaceTime</string>
<string>com.apple.SOS</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<string>com.apple.TelephonyUtilities.sharePlayAppPolicies</string>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>RootDomainUserClient</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.network.server</key>
<true/>
<key>com.apple.security.personal-information.addressbook</key>
<true/>
<key>com.apple.security.temporary-exception.shared-preference.read-only</key>
<array>
<string>com.apple.suggestions</string>
</array>
<key>com.apple.selectivesharing.session_system</key>
<true/>
<key>com.apple.siri.external_request</key>
<true/>
<key>com.apple.springboard.CFUserNotification</key>
<true/>
<key>com.apple.springboard.inCallPresentation</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.shortcutitems.fullaccess</key>
<true/>
<key>com.apple.springboard.statusbarstyleoverrides</key>
<true/>
<key>com.apple.symptom_diagnostics.report</key>
<true/>
<key>com.apple.systemstatus.activityattribution</key>
<true/>
<key>com.apple.systemstatus.publisher.domains</key>
<array>
<string>calling</string>
</array>
<key>com.apple.videoconference.allow-conferencing</key>
<true/>
<key>com.apple.visualvoicemail.client</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>callservicesd</string>
</array>
</dict>
</plist>
application-identifier*com.apple.telephonyutilities.callservicesd0
aps-connection-initiate
aps-environment
development0% com.apple.CallHistory.sync.allow
0i com.apple.CallKit.call-directory0E
synchronize-extensions
compact-store
query-identification-entries04/com.apple.CallKit.call-directory.extension-host
!com.apple.CommCenter.fine-grained0l
spi
phone
voice
identity
data-usagedata-allowed
data-allowed-write
carrier-space
carrier-settings0
com.apple.CompanionLink
com.apple.FaceTime.CallLaunch
0}(com.apple.FaceTime.FTConversationService0Q
access-conversation-links
modify-conversation-links
access-conversation-links0 
com.apple.FaceTime.NoPrompt
0&!com.apple.appletv.pbs.mediaremote
0(#com.apple.appletv.pbs.user-profiles
0/*com.apple.appletv.pbs.user-profiles.select
com.apple.assistant.settings
0,'com.apple.backboardd.launchapplications
0,'com.apple.backboardd.proximityDetection
com.apple.bluetooth.system
com.apple.coreduetd.allow
com.apple.coreduetd.context
com.apple.coreduetd.knowledge
com.apple.coreduetd.people
094com.apple.coremedia.allow-protected-content-playback
0A+com.apple.coremedia.captureassertionservice0
modify-assertion02-com.apple.corespeech.supportheysiriwhenrecord
0(#com.apple.coretelephony.Calls.allow
0&!com.apple.developer.group-session
0\2com.apple.developer.notificationcenter-identifiers0&
com.apple.facetime
com.apple.Photos0)$com.apple.duet.expertcenter.consumer
0,'com.apple.frontboard.launchapplications
083com.apple.frontboardservices.display-layout-monitor
com.apple.imagent
com.apple.imagent.av
com.apple.messages.nicknames
0'"com.apple.multitasking.termination
0*%com.apple.multitasking.voipassertions
0.)com.apple.nano.nanoregistry.generalaccess
061com.apple.pegasus.backgroundPIPServiceEntitlement
0-(com.apple.private.CallHistory.read-write
0+&com.apple.private.accounts.allaccounts
0-(com.apple.private.aps-client-cert-access
0.)com.apple.private.aps-connection-initiate
0^/com.apple.private.assets.accessible-asset-types0+)com.apple.MobileAsset.phoneNumberResolver0)$com.apple.private.attentionawareness
0.)com.apple.private.attentionawareness.poll
;com.apple.private.attribution.explicitly-assumed-identities0
type
bundleID0
value
com.apple.facetime
type
bundleID0
value
com.apple.mobilephone
e0
type
path0U
valueL/System/Library/PrivateFrameworks/TelephonyUtilities.framework/callservicesd0<"com.apple.private.biome.read-write0
GroupActivitySession0(#com.apple.private.canGetAppLinkInfo
com.apple.private.carkit.dnd
com.apple.private.contacts
com.apple.private.copresence
094com.apple.private.coreaudio.borrowaudiosession.allow
061com.apple.private.coreaudio.mxsessionPropertyPipe
0FAcom.apple.private.coremedia.interruptions.phonecallpriority.allow
061com.apple.private.coreservices.canalwaysadvertise
04/com.apple.private.coreservices.canmaplsdatabase
03.com.apple.private.coreservices.canopenactivity
0@;com.apple.private.coreservices.lsuseractivityd.LSAlwaysPick
0E@com.apple.private.coreservices.lsuseractivityd.bestappsuggestion
0)$com.apple.private.dmd.emergency-mode
com.apple.private.dmd.policy
0uEcom.apple.private.donotdisturb.behavior.resolution.client-identifiers0,*com.apple.telephonyutilities.callservicesd0;6com.apple.private.externalaccessory.showallaccessories
com.apple.private.game-center0E
AccountAuthenticate
Multiplayer
TurnBasedMultiplayer
GameStats083com.apple.private.game-center.bypass-authentication
0/*com.apple.private.hid.client.event-monitor
com.apple.private.icfcallserver
com.apple.private.ids.firewall
com.apple.private.ids.messaging0
N,com.apple.private.alloy.dropin.communication&com.apple.private.alloy.facetime.multi&com.apple.private.alloy.facetime.video#com.apple.private.alloy.facetime.lp'com.apple.private.alloy.phonecontinuity
com.apple.ess"com.apple.private.alloy.phone.auth&com.apple.private.alloy.facetime.audio%com.apple.private.alloy.facetime.sync0
r-com.apple.private.ids.messaging.high-priority0
?,com.apple.private.alloy.dropin.communication&com.apple.private.alloy.facetime.multi&com.apple.private.alloy.facetime.video#com.apple.private.alloy.facetime.lp'com.apple.private.alloy.phonecontinuity"com.apple.private.alloy.phone.auth&com.apple.private.alloy.facetime.audio%com.apple.private.alloy.facetime.sync0
"com.apple.private.ids.registration0},com.apple.private.alloy.dropin.communication&com.apple.private.alloy.facetime.multi%com.apple.private.alloy.facetime.sync0.)com.apple.private.ids.remoteurlconnection
D"com.apple.private.ids.self-session0
,com.apple.private.alloy.dropin.communication&com.apple.private.alloy.facetime.multi'com.apple.private.alloy.phonecontinuity&com.apple.private.alloy.facetime.video&com.apple.private.alloy.facetime.audio$com.apple.private.alloy.tincan.audio%com.apple.private.alloy.facetime.sync0
com.apple.private.ids.session0
,com.apple.private.alloy.dropin.communication&com.apple.private.alloy.facetime.multi'com.apple.private.alloy.phonecontinuity&com.apple.private.alloy.facetime.video&com.apple.private.alloy.facetime.audio$com.apple.private.alloy.tincan.audio%com.apple.private.alloy.facetime.sync0
G%com.apple.private.ids.session-private0
,com.apple.private.alloy.dropin.communication&com.apple.private.alloy.facetime.multi'com.apple.private.alloy.phonecontinuity&com.apple.private.alloy.facetime.video&com.apple.private.alloy.facetime.audio$com.apple.private.alloy.tincan.audio%com.apple.private.alloy.facetime.sync0)$com.apple.private.imavcore.imavagent
03.com.apple.private.imcore.imremoteurlconnection
0D*com.apple.private.lockdown.finegrained-get0
NULL/ActivationState0!
com.apple.private.necp.match
0U+com.apple.private.notificationcenter-system0&
$0"
identifier
com.apple.SystemNote0<7com.apple.private.notificationcenter.internalpushclient
02-com.apple.private.notificationcenterui.alerts
com.apple.private.rtcreportingd
com.apple.private.screen-time
03.com.apple.private.security.storage.CallHistory
00+com.apple.private.security.storage.Messages
01,com.apple.private.security.storage.Voicemail
0+&com.apple.private.suggestions.contacts
0&!com.apple.private.system-keychain
com.apple.private.tcc.allow0n
kTCCServiceMediaLibrary
kTCCServicePhotos
kTCCServiceAddressBook
kTCCServiceMicrophone
kTCCServiceWillow0R2com.apple.private.tcc.manager.check-by-audit-token0
kTCCServiceBluetoothAlways0>9com.apple.private.tcc.manager.get-identity-for-credential
0e6com.apple.private.usernotifications.bundle-identifiers0+
com.apple.facetime
com.apple.mobilephone04/com.apple.runningboard.assertions.callservicesd
0)$com.apple.runningboard.process-state
V4com.apple.security.exception.mach-lookup.global-name0
com.apple.carkit.service
com.apple.coreduetd.people
com.apple.fairplayd.versioned)com.apple.biome.PublicStreamAccessService,com.apple.imtransferservices.IMTransferAgent
com.apple.adid2com.apple.group-activities.conversationmanagerhost
com.apple.CompanionLink
com.apple.gamed0
8com.apple.security.exception.shared-preference.read-only0
com.apple.InCallService
com.apple.suggestions
com.apple.ScreenTimeAgent
com.apple.VideoConference
com.apple.VideoProcessing
com.apple.ClarityUI!com.apple.ClarityUI.PhoneFaceTime
com.apple.SOS0n9com.apple.security.exception.shared-preference.read-write1com.apple.TelephonyUtilities.sharePlayAppPolicies0D*com.apple.security.iokit-user-client-class0
RootDomainUserClient0&!com.apple.security.network.client
0&!com.apple.security.network.server
083com.apple.security.personal-information.addressbook
0]Bcom.apple.security.temporary-exception.shared-preference.read-only0
com.apple.suggestions0.)com.apple.selectivesharing.session_system
com.apple.siri.external_request
0-(com.apple.springboard.CFUserNotification
0-(com.apple.springboard.inCallPresentation
0+&com.apple.springboard.opensensitiveurl
03.com.apple.springboard.shortcutitems.fullaccess
02-com.apple.springboard.statusbarstyleoverrides
0)$com.apple.symptom_diagnostics.report
0/*com.apple.systemstatus.activityattribution
05(com.apple.systemstatus.publisher.domains0
calling01,com.apple.videoconference.allow-conferencing
0% com.apple.visualvoicemail.client
com.apple.wifi.manager-access
platform-application
seatbelt-profiles0
callservicesd
com.apple.tv
macOS
com.apple.TV
tvOS
fallback
com.apple.tv
com.apple.Music
macOS
com.apple.Music
tvOS
fallback
com.apple.Music
macOS
com.apple.Notes
tvOS
fallback
+1800
+1888
+1877
+1866
+1855
+1844
Additions
CSDMessagingConversationParticipantAssociation
NSCopying
CSDMessagingLinkSyncRecoverMessage
CSDMessagingEncryptedConversationMessage
CSDMessagingConversationLink
CSDRelayController
CSDOrientationMonitor
BKSAccelerometerDelegate
NSObject
CSDCallCenterObserverDelegate
CSDTransactionManager
CSDCrashReporter
CSDVoIPProcessAssertion
CSDAVConference
CSDAVConferenceProviderDelegate
CSDAVConferenceConfiguration
CSDMessagingConversationParticipant
CSDUserActivityManager
TUCallProviderManagerDelegate
CSDUserActivityCommunicatorDelegate
TUConversationManagerDelegate
CSDUnknownCallFilter
CSDCallFilter
CSDAggregateDictionaryReporter
CSDReporter
CSDProximityController
CSDProximitySensorObserverDelegate
TUDelegate
TURouteControllerDelegate
FaceTime
CSDFaceTimeIMAVProviderDelegate
IMAVControllerDelegate
CSDDualFaceTimeProviderDelegate
CSDFaceTimeProviderDelegate
CXProviderDelegatePrivate
CXProviderDelegate
CSDCallHistoryControllerXPCServer
TUCallHistoryControllerXPCServer
CSDFaceTimeIDSService
CSDConversation
CSDIDSGroupSessionDelegate
CPActivitySessionManagerDelegate
CPAudioPolicyStateObserver
CSDAVCSessionDelegate
CSDRelayIDSService
CSDMessagingCallModel
CSDRelayClientController
CSDRelayMessagingControllerClientMessagingDelegate
CSDMessagingHandle
CSDMessagingConversationJoinedMetadata
CSDProviderCall
CSDPauseDigitsQueueDelegate
CSDCallStateMonitor
CSDPendingConversation
CSDStatusBarManager
CSDStatusBarResolverDelegate
CSDNeighborhoodActivityConduitXPCServer
CSDNeighborhoodActivityConduitDelegate
TUNeighborhoodActivityConduitXPCServer
CSDAdditions
CSDCarrierBundlePhoneNumberProvider
CSDCarrierBundlePhoneNumberProviderController
CoreTelephonyClientDelegate
CSDIDSGroupSessionProvider
IDSGroupSessionDelegate
IDSSessionDelegatePrivate
IDSSessionDelegate
CSDIDSSessionProvider
CSDRelayIDSDualSessionData
CSDRelayIDSDualSession
CSDCallHistoryController
CSDMessagingLinkSyncMessage
CSDThumperCapabilitiesMonitor
TUCallCapabilitiesDelegatePrivate
TUCallCapabilitiesDelegate
CSDConversationJoinContext
CSDAccountsController
IDSServiceDelegatePrivate
IDSServiceDelegate
CSDIDSDualSessionProvider
CSDPauseDigits
CSDConversationProviderManagerXPCServer
TUConversationProviderManagerXPCServer
CSDCallProviderManagerXPCServer
TUCallProviderManagerXPCServer
CSDCallProviderManagerDelegate
CSDFaceTimeVideoIDSService
CSDIDSChat
CSDIDSDualSessionDelegate
CSDAVConferenceDelegate
CSDMessagingConversationActivityContext
CSDCallDirectoryManager
CXCallDirectoryNSExtensionManagerDelegate
TinCan
CSDCTCallCapabilities
CSDMessagingRelayMessage
CSDIncomingCallFilterDataSource
CSDMessagingCallProvider
CSDRelayMessagingController
CSDRelayIDSMessengerDelegate
CSDRelayIDSSessionMessengerDelegate
CSDDaemon
TUConfigurationDelegate
CSDAbstractIDSProviderDelegate
CSDIDSChatDelegate
CSDMessagingAVConferenceInviteData
CSDIDSDualSession
CSDIDSDualSessionProviderDelegate
CSDRelayIDSMessenger
CSDThumperAccount
NSMutableCopying
CSDMutableThumperAccount
CSDFaceTimeIDSProviderDelegate
CSDRelayCommonController
CSDRelayMessagingControllerCommonMessagingDelegate
CSDFileTransferController
CSDFileTransferring
CSDCallSourceFetcher
CSDThumperPushHandlerAdditions
CSDThumperPushHandler
CSDPinExchangeDelegate
CSDMessagingCall
CSDRelayCall
CSDCallHistoryManagerXPCServer
CSDCallHistoryManagerDelegate
TUCallHistoryManagerXPCServer
CSDPauseDigitsQueue
CSDXPCClient
CSDConversationLeaveContext
CSDTTYProviderObserver
CSDRelayPairedDeviceMessenger
CSDMessagingConversationActivitySceneAssociationBehavior
CSDProviderCallConfiguration
CSDMessagingConversationParticipantDidJoinContext
CSDMediaAssetManager
CSDMediaAssetManaging
CSDPowerLogReporter
CSDFaceTimeProviderDelegateManagerDelegate
CSDVoIPApplicationMessageContext
PKVoIPXPCClient
CXNetworkExtensionVoIPXPCClient
CSDVoIPApplication
CSDMessagingConversationActivitySession
CSDMessagingPersonNameComponents
CSDMessagingLinkSyncUpdateMessage
CSDStatusBarResolver
CSDRelayConferenceInterface
CSDSandboxExtensionDirectory
CSDPinExchangeController
CSDMessagingMemberAssociationClaim
CSDCallCapabilities
TUCallCapabilitiesXPCServer
TUCallCapabilitiesXPCServerActions
CSDAccountsControllerDelegate
CSDTelephonyCallCapabilitiesDelegate
CSDThumperCapabilitiesMonitorDataSource
CSDBlockedCallFilter
CSDCall
TUDynamicCallDisplayContextDelegate
CXAudioSessionActivationStateObserver
CSDRouteManager
TUAudioDeviceControllerDelegate
CSDMessagingConversationMember
CSDMessagingConversation
CSDMessagingConversationReport
CSDConversationManager
CSDConversationDelegate
CSDPendingMembershipTrackerMessenger
CSDPendingMembershipTrackerDelegate
CSDConversationNoticeDelegate
CSDConversationLinkManagerDelegate
CSDScreenSharingActivityManagerDelegate
CPApplicationPolicyManagerDelegate
CPSystemStateObserverObserver
CPConversationManagerDataSource
CSDMessagingVoucher
CSDCHRecentCall
CSDApplicationRecord
CSDMessagingCallMessage
CSDAudioRouteCollection
CSDFaceTimeAudioIDSService
CSDMessagingConversationActivity
CSDMessagingConversationInvitationPreference
VoIPApplicationAdditions
CSDMessagingCallCapabilitiesState
CSDVoIPProcessAssertionManager
CSDIncomingCallFilter
CSDAppleIDUtilities
CSDRecentsController
CSDMessagingConversationLinkGeneratorDescriptor
CSDIDSSession
CSDMessagingCallDisplayContext
CSDUserActivityCommunicator
UABestAppSuggestionManagerDelegate
CSDUserActivityCommunicatorProtocol
CSDUserConfigurationMigrator
CSDThumperIDSService
CSDIDSGroupSession
CSDIDSGroupSessionProviderDelegate
CSDCallStateController
TUCallServicesXPCServer
TUCallCenterXPCServer
TUCallServicesProxyCallActions
TUCallServicesClientCapabilitiesXPCServer
TUAudioDeviceControllerXPCServer
TURouteControllerXPCServer
TUCallFilterControllerXPCServer
CSDRelayMessagingControllerDelegate
CSDCallDelegate
CSDDeviceLockStateObserver
CSDVoIPApplicationMonitor
CXNetworkExtensionVoIPXPCServer
PKVoIPXPCServer
CSDVoIPApplicationController
APSConnectionDelegate
CXNetworkExtensionMessageControllerHostDelegate
CXNotificationServiceExtensionHostDelegate
CSDConversationNoticeManager
CSDConversationParticipant
CSDCallDataSourceMap
CSDMessagingLabeledHandle
CSDClient
CSDMessagingConversationActivityMetadata
CSDIDSFirewallManager
CSDCallHistoryControllerDelegate
CSDConversationManagerXPCServer
TUConversationManagerXPCServer
TUConversationMediaControllerXPCServer
TUConversationMessagesGroupProviderXPCServer
CSDConversationManagerDelegate
CSDCallProviderManager
CSDCallProviderManagerDataSourceDelegate
CSDFaceTimeConversationProviderDelegate
CSDRaiseToAnswerController
CSDGFTServiceConversationProviderDelegate
CSDRelayHostController
CSDRelayMessagingControllerHostMessagingDelegate
CSDUserActivity
CSDCallProviderManagerDataSource
CSDMomentsReportingSession
CSDSignposts
CSDAVCSession
AVCSessionParticipantDelegate
AVCScreenCaptureDelegate
AVCSessionDelegate
AVCRateAdaptationDelegate
CSDExternalIDSDualSession
CSDRelayConferenceConnection
CSDTelephonyCallCapabilities
CSDCoreTelephonyClientDelegate
CSDMessagingRoute
CSDConversationProviderManager
CSDRelayCallDelegate
CSDMessagingConversationMessage
CSDMessagingLinkSyncCheckInGeneratorDescriptorInfo
CSDMessagingConversationParticipantDidLeaveContext
CSDFaceTimeIMAccount
IDSAccountRegistrationDelegate
CSDMockCall
CSDCoreTelephonyClient
CoreTelephonyClientCapabilitiesDelegate
CSDMessagingCallModelState
CSDMessagingSenderIdentity
CSDABCReporter
CSDReportingController
CSDMomentsReportingSessionDelegate
CSDReporterDataSource
CSDMomentsControllerDelegate
CSDVoiceOverObserver
CSDCallFilterController
CSDMessagingLinkSyncCheckInMessage
CSDCallHistoryManager
CSDConversationProvider
CSDIDSService
IDSAccountControllerDelegate
Messaging
CSDRelayIDSSessionMessenger
CSDRelayIDSDualSessionDelegate
CSDMomentsController
CSDFileTransferringDelegate
CSDAVCMomentsDelegate
TUMomentsControllerXPCServer
CSDAVConferenceProvider
AVConferenceDelegate
CSDPulledCallContext
CSDProviderCallDataSource
CXCallControllerHostDelegate
CSDCallSourceFetcherDataSource
CXCallSourceManagerDelegate
CXCallSourceUpdates
CSDProviderCallDelegate
CSDClientManager
NSXPCListenerDelegate
CSDClientManagerExportedObjectProxy
CSDCallDataSource
CSDProximitySensorObserver
CSDAbstractFaceTimeConversationProviderDelegate
CSDAbstractFaceTimeConversationProviderDelegateProtocol
CSDRelayCallDataSource
CSDVoIPApplicationMessage
CSDVoIPApplicationMessageAdditions
CSDIDSTransport
CSDCallContainer
CSDConversationServerBag
TUConversationLinkDescriptorDataSource
TUVouchingEnablement
CSDIDSPushHandler
OS_nw_activity
TUScreenShareAttributes
CSDAVCMoments
TUFeatureFlags
CSDAVCMomentsRequest
TUContactsDataSource
OS_dispatch_source_timer
IDSCTSIM
CNKeyDescriptor
OS_xpc_object
TUCallContainer
TUCallContainerPrivate
NSSecureCoding
OS_dispatch_source
NSCoding
CSDFaceTimeIDSProviderDelegateServerBag
CARSessionObserving
CSDConduitIDSProxy
TLAlertPlaybackObserver
IDSServicePseudonymDelegate
CSDMomentsServerBag
CSDMomentsControllerLocalCapabilities
CHCallInteractionManagerDelegate
CHDelegate
AVSpeechSynthesizerDelegate
CSDIDSProviderDelegateCapabilities
CSDFaceTimeIDSProviderDelegateCapabilities
TUAudioSystemControllerDelegate
UNUserNotificationCenterDelegate
TUUserNotificationsProviderXPCServer
CoreTelephonyClientVoicemailDelegate
AVCMomentsDelegate
DTMFKey
AVCBlobRecoveryGracePeriod
T@"<CPSystemStateObserver>",R,N
FTUserScore
T@"<CSDReporterDataSource>",W,N
GUID
T@"CSDCallFilterController",R,N
IDSFormattedDestinationID
T@"CSDIDSService",&,N,V_service
IMDaemonConnected
T@"CSDMessagingConversationJoinedMetadata",&,N,V_joinedMetadata
ISOCountryCodeForCallWithUUID:
T@"CXCallSource",&,N,GbackingCallSource,V_mockBackingCallSource
ISOCountryCodeForMobileCountryCode:mobileNetworkCode:
T@"NSArray",&,N
ITUCountryCodeForISOCountryCode:
T@"NSArray",R,N
SDKVersion
T@"NSMutableArray",&,N,V_routes
SIMIdentifier
T@"NSMutableDictionary",&,N,V_bundleIdentifierToVoIPApplication
StringAsEnclosedEncryptedType:
T@"NSNumber",N,V_springBoardPID
StringAsLeaveReason:
T@"NSSet",C,N,V_rejectedMembers
StringAsReceivedMessageType:
T@"NSSet",R,C,N
StringAsType:
T@"NSString",C,N,V_remoteFromID
T#,R
T@"NSValue",&,N
T@"<CSDAVCMomentsDelegate>",R,W,N
T@"TUCallCapabilitiesState",&,N
T@"<CSDAVCSessionDelegate>",R,W,N,V_delegate
T@"TURoute",R,N
T@"<CSDAVConference>",R,N
T@?,C,N
T@"<CSDAVConferenceDelegate>",W,N,V_delegate
T@?,C,N,V_incomingChatGenerator
T@"<CSDAVConferenceProviderDelegate>",W,N
TB,N,GisAudioReady,V_audioReady
T@"<CSDAccountsControllerDelegate>",W,N,V_delegate
TB,N,GisOutgoing,V_mockOutgoing
T@"<CSDCHManager>",R,N,V_chManager
TB,N,GmayRequireBreakBeforeMake,V_mockMayRequireBreakBeforeMake
T@"<CSDCallCenterObserver>",R,N,V_callCenterObserver
TB,N,V_protoSOS
T@"<CSDCallContainer>",R,N,V_callCenter
TB,N,V_relayCapableDeviceExists
T@"<CSDCallHistoryControllerDelegate>",&,N,V_delegate
TB,N,V_shouldCheckAllGenerators
T@"<CSDCallProviderManagerDataSourceDelegate>",W,N
TB,N,V_supportsContinuationOnTV
T@"<CSDCallSourceFetcherDataSource>",W,N,V_dataSource
TB,R,N,GisCarPlayRouteAvailable
T@"<CSDConduitIDSProxy>",W,N,V_messageProxy
TB,R,N,GisCellularDataPreferred
T@"<CSDConversationInvitationResolving>",&,N,V_invitationResolver
TB,R,N,GisPseudonym,V_pseudonym
T@"<CSDConversationProviderDelegate>",R,N,V_delegate
TI,N,V_maximumCallsPerCallGroup
T@"<CSDConversationServerBag>",R,N,V_serverBag
TQ,N,V_photoRequestFailureCount
T@"<CSDCoreTelephonyClientDelegate>",W,N,V_delegate
TQ,N,V_rebroadcastTimeThreshold
T@"<CSDEmergencyCallbackCapabilities>",R,N,V_emergencyCallbackCapabilities
TUCallRemoteVideoPresentationStateFromCXVideoPresentationState:
T@"<CSDFaceTimeIDSProviderDelegateServerBag>",&,N,V_serverBag
T^v,R,N
T@"<CSDFileTransferring>",R,N,V_fileTransferController
Td,N,V_timebase
T@"<CSDFileTransferringDelegate>",W,N,V_delegate
T@"<CSDIDSChatDelegate>",W,N,V_delegate
_activeContexts
T@"<CSDIDSDualSessionProvider>",R,N,V_sessionProvider
_ambiguityState
T@"<CSDIDSDualSessionProviderDelegate>",W,N,V_delegate
_approverHandle
T@"<CSDIDSGroupSessionProvider>",R,N,V_sessionProvider
_avLess
T@"<CSDIDSGroupSessionProviderDelegate>",W,N,V_delegate
_callConnected:
T@"<CSDIDSService>",&,N,V_service
_callDataSource
T@"<CSDIDSService>",R,N,V_thumperService
_callID
T@"<CSDIDSSessionProvider>",R,N,V_sessionProvider
_carPlayManager
T@"<CSDMomentsControllerDelegate>",W,N,V_delegate
_client
T@"<CSDMomentsReportingSessionDelegate>",W,N,V_delegate
_conversationProviderIdentifier
T@"<CSDParticipantUpdateSanitizer>",&,N,V_participantUpdateSanitizer
_currentCallSet
T@"<CSDPinExchangeDelegate>",&,V_pinExchangeDelegate
_digits
T@"<CSDProcessObserverProtocol>",R,N,V_processObserver
_domainAccessor
T@"<CSDProviderCallDelegate>",W,N,V_providerCallDelegate
_expectedRelayClientDestination
T@"<CSDRelayCallDelegate>",W,N,V_relayDelegate
_failureContext
T@"<CSDRelayIDSMessengerDelegate>",W,N,V_delegate
_handlePushTokensInvited:didSendInvitation:didCancelInvitation:
T@"<CSDRelayMessagingControllerClientMessagingDelegate>",W,N,V_clientMessagingDelegate
_invitedHandles
T@"<CSDRelayMessagingControllerDelegate>",W,N,V_delegate
_isSendingVideo
T@"<CSDRouteManager>",&,N,V_routeManager
_isoCountryCode
T@"<CSDStatusBarResolverDelegate>",W,N
_joinedFromLink
T@"<CSDTelephonyCallCapabilitiesDelegate>",W,N,V_delegate
_junkConfidence
T@"<CSDTransactionManager>",R,N,V_transactionManager
_leaveConversation:withContext:
T@"<CSDUserActivityCommunicatorDelegate>",W,N,V_delegate
_locallyCreated
T@"<CSDUserNotificationDelegate>",R,W,N,V_delegate
_mockConnecting
T@"<CSDVoucherManager>",&,N,V_voucherManager
_notifyObserver
T@"<CXProviderDelegatePrivate>",R,N,V_tinCanProviderDelegate
_object
T@"<TUConversationLinkDescriptorDataSourceDelegate>",&,N
_pendingMembers
T@"<TUFeatureFlags>",R,N,V_featureFlags
_phoneNumberURI
T@"<TUNotifyObserver>",&,N,V_coveredNotifyObserver
_preparedToStop
T@"ACAccountStore",R,N,V_accountStore
_protoEmergency
T@"APSConnection",&,N,V_productionConnection
_protoVoicemail
T@"AVCScreenCapture",&,N,V_avcScreenCapture
_recentsManager
T@"AVConference",R,N,V_conference
_registerCallStartEventForCall:
T@"BKSApplicationStateMonitor",R,N,V_applicationStateMonitor
_removedMembers
T@"BKSProcessAssertion",R,N,V_assertion
_reportConversationFailedWithFailureReason:providerEndedReason:
T@"CHManager",R,N,V_recentsManager
_sendDelegateInputLevelChanged:
T@"CPActivityAuthorizationManager",&,N,V_activityAuthorizationManager
_sender
T@"CPActivitySessionManager",&,N,V_activitySessionManager
_setRelayCallingEnabledDefault:
T@"CPApplicationMonitor",R,N,V_applicationMonitor
_socket
T@"CPApplicationPolicyManager",&,N,V_applicationPolicyManager
_supportsMessagesGroupProviding
T@"CPBiomeSessionDonator",R,N,V_cpBiomeStreamDonator
_thumperService
T@"CPSystemStateObserver",&,N,V_sharePlaySystemStateObserver
_upgradeTimeout
T@"CSDAccountsController",R,N,V_accountsController
account
T@"CSDAudioController",&,N,V_audioController
accountsChanged
T@"CSDCallCapabilities",R,N
acquire
T@"CSDCallController",R,N
activateLink:completionHandler:
T@"CSDCallDataSource",W,N,V_dataSource
activeVideoCall
T@"CSDCallFilterController",&,N,V_callFilterController
activitySession
T@"CSDCallHistoryController",R,N,V_callHistoryController
addOtherUniqueProxyIdentifiers:
T@"CSDCallHistoryManager",R,N,V_callHistoryManager
addPrioritizedSenderIdentities:
T@"CSDCallProviderManager",&,N,V_callProviderManager
allKeys
T@"CSDCallProviderManager",R,N,V_providerManager
allowAnyNetwork
T@"CSDCallSourceFetcher",R,N,V_callSourceFetcher
applicationStateForApplication:
T@"CSDCallStateController",R,W,N,V_callStateController
assumedIdentity
T@"CSDCallStateMonitor",&,N,V_callStateMonitor
audioController
T@"CSDClient",&,N,V_networkExtensionClient
avModeAsString:
T@"CSDClient",R,N
avcData
T@"CSDClientManager",&,N,V_networkExtensionClientManager
base64EncodedStringWithOptions:
T@"CSDClientManager",R,N,V_clientManager
bundleURLString
T@"CSDConversationLinkGeneratorDescriptor",R,N
callCenterObserver:callChanged:
T@"CSDConversationManager",R,N,V_conversationManager
callSource:reportedCallWithUUID:changedMeterLevel:forDirection:
T@"CSDConversationParticipant",&,N,V_splitSessionSecondary
callerIDAccount
T@"CSDConversationPersistenceController",R,N,V_persistenceController
canUpgradeChat:
T@"CSDConversationProviderManager",R,N
cellularDataEnabledForBundleId:
T@"CSDConversationProviderManager",R,N,V_providerManager
clearEndpointIDSDestinationURIs
T@"CSDCoreTelephonyClient",R,N,V_coreTelephonyClient
clearPseudonyms
T@"CSDDeviceLockStateObserver",R,N,V_lockStateObserver
clientsByObject
T@"CSDFaceTimeConversationProviderDelegate",&,N,V_faceTimeConversationProviderDelegate
conference:inputLevelChangedTo:
T@"CSDFaceTimeIMAVProviderDelegate",&,N,V_faceTimeIMAVProviderDelegate
connectToDaemon
T@"CSDFaceTimeInviteDemuxer",&,N,V_faceTimeInviteDemuxer
containsString:
T@"CSDFaceTimeProviderDelegate",R,N,V_faceTimeProviderDelegate
context
T@"CSDHandoffAudioController",&,N,V_handoffAudioController
conversationConnectionDidStart:
T@"CSDIDSGroupSession",R,N,V_idsSession
conversationOneToOneModeEnabled
T@"CSDIDSTransport",&,N,V_relayClientTransport
copyTo:
T@"CSDIDSTransport",R,N
covered
T@"CSDIncomingCallFilterDataSource",&,N,V_dataSource
currentCalendar
T@"CSDLetMeInRequestorKeyAgreement",&,N,V_letMeInKeyAgreement
currentlyPicked
T@"CSDMessagingCallCapabilitiesState",&,N,V_protoCallCapabilitiesState
dataURL
T@"CSDMessagingCallModel",&,N,V_protoCallModel
defaultBehavior
T@"CSDMessagingCallProvider",&,N,V_protoProvider
deliverMessage:withAssertion:applicationShouldPostIncomingCall:
T@"CSDMessagingConversationActivityContext",&,N,V_activityContext
deviceInAltMode
T@"CSDMessagingConversationActivitySceneAssociationBehavior",&,N,V_sceneAssociationBehavior
devices
T@"CSDMessagingConversationActivitySession",&,N,V_stagedActivitySession
dialWithRequest:displayContext:
T@"CSDMessagingConversationLinkGeneratorDescriptor",&,N,V_generatorDescriptor
didStartHandler
T@"CSDMessagingConversationMessage",&,N,V_message
dtmfSoundPlayer
T@"CSDMessagingConversationParticipantAssociation",&,N,V_association
emergencyLabeledHandlesAtIndex:
T@"CSDMessagingConversationReport",&,N,V_reportData
T@"CSDMessagingHandle",&,N,V_associatedPseudonym
endpointIDSDestinationURIsCount
T@"CSDMessagingHandle",&,N,V_handle
faceTimeAppUUID
T@"CSDMessagingHandle",&,N,V_lightweightPrimary
failureExpected
T@"CSDMessagingHandle",&,N,V_primaryHandle
firewallManager
T@"CSDMessagingLinkSyncRecoverMessage",&,N,V_recoverMessage
generateDescriptorInfosAtIndex:
T@"CSDMessagingPersonNameComponents",&,N,V_phoneticRepresentation
gftDowngradeToOneToOneAvailable
T@"CSDMessagingRoute",&,N,V_route
groupUUIDString
T@"CSDMomentsController",&,N,V_momentsController
handleScreenShareMessage:forConversation:fromHandle:withUpdate:
T@"CSDNeighborhoodActivityConduitXPCServer",R,N,V_conduitXPCServer
handoffActivity
T@"CSDPauseDigits",R,N
hasBeenUnlocked
T@"CSDPendingMembershipTracker",&,N,V_pendingMembershipTracker
hasContactLabel
T@"CSDProviderCall",&,N,V_call
hasDummyPayload
T@"CSDProviderCallDataSource",W,N,V_callDataSource
hasLink
T@"CSDProximityController",&,N,V_proximityController
hasOBSOLETEConferenceIdentifier
T@"CSDRaiseToAnswerController",&,N,V_raiseToAnswerController
hasProtoNeedsManualInCallSounds
T@"CSDRelayCallDataSource",R,N,V_relayCallDataSource
hasProtoTTYType
T@"CSDRelayCallDelegate",R,N,V_relayCallDelegate
hasSystemVolume
T@"CSDRelayCommonController",&,N,V_relayCommonController
hasVideoEnabled
T@"CSDRelayHostController",&,N,V_relayHostController
imHandleWithID:
T@"CSDRelayIDSSessionMessenger",R,N,V_sessionMessenger
initOutgoingWithUniqueProxyIdentifier:backingCallSourceIdentifier:callUpdate:isVideo:endpointOnCurrentDevice:originatingUIType:
T@"CSDRelayMessagingController",R,N
initWithCallUUID:sharingScreen:
T@"CSDReportingController",R,N
initWithDataSource:parentQueue:
T@"CSDRouteController",R,N,V_localRouteController
initWithDelegate:delegateQueue:
T@"CSDRouteManager",R,N
initWithHandle:
T@"CSDScreenSharingActivityManager",R,N,V_screenSharingActivityManager
initWithSocket:
T@"CSDSharedConversationServerBag",&,N,V_serverBag
initialLinkType
T@"CSDTelephonyCallCapabilities",R,N,V_telephonyCallCapabilities
isAVLessCapable
T@"CSDThumperPushHandler",R,N,V_thumperPushHandler
isAudioDisabled
T@"CSDUserActivity",&,N,V_currentlyBroadcastedActivity
isCellularDataPreferredForChat:
T@"CSDUserActivity",R,N
isDownlinkMuted
T@"CSDUserIntentManager",R,N,V_userIntentManager
isEqualToArray:
T@"CSDVoIPApplicationController",&,N,V_voipApplicationController
isFromBlockList
T@"CSDVoIPApplicationMonitor",R,N,V_applicationMonitor
isHomePodFamily
T@"CSDVoiceOverObserver",&,N,V_voiceOverObserver
isInternational
T@"CXAbstractProviderSource",&,N,V_providerSource
isMuted
T@"CXCallControllerHost",R,N,V_callControllerHost
isRegionBlocked
T@"CXCallDirectoryNSExtensionManager",R,N,V_nsExtensionManager
isRetry
T@"CXCallDirectoryStore",&,N,V_callDirectoryStore
isSharingScreen
T@"CXCallFailureContext",R,N
isValid
T@"CXCallSource",R,N
isVideo
T@"CXCallUpdate",&,N,V_mergedCallUpdate
isWiFiCallingCurrentlyAvailable
T@"CXInProcessCallSource",R,N,V_faceTimeCallSource
isWirelessHeadsetRouteAvailable
T@"CXJoinCallAction",R,N
lightweightPrimaryParticipantID
T@"CXNotificationServiceExtensionVoIPXPCHost",R,N,V_nseMessageHost
localLightweightSecondaryMember
T@"CXProvider",R,N,V_provider
lowercaseString
T@"CoreTelephonyClient",R,N,V_telephonyClient
manager
T@"FBSOpenApplicationService",R,N,V_service
mediaSystemName
T@"FTNetworkSupport",R,N,V_networkSupport
members
T@"IDSAccount",R,N,V_account
message
T@"IDSDestination",&,N
microphoneMuted
T@"IDSDestination",&,N,V_remoteDestination
mockCallWithNotificationCenter:
T@"IDSDevice",&,N,V_defaultPairedDevice
mockConferenced
T@"IDSDevice",&,N,V_pairedDevice
mockDisplayName
T@"IDSDevice",R,N
mockPTT
T@"IDSIDQueryController",&,N,V_idsQueryController
mockUplinkMuted
T@"IDSService",R,N
moments
T@"LSApplicationRecord",R,N
momentsController:didReceiveResultsForStream:withTransactionID:
T@"NSArray",&,N,V_currentParticipantPresentationContexts
multiwayBlocked
T@"NSArray",C,N,GcontactIdentifiers,V_mockContactIdentifiers
nextPauseDigits
T@"NSArray",C,N,V_localThumperAccounts
notifyDelegatesOfMessage:fromHandle:forConversation:withUpdate:
T@"NSArray",C,N,V_routes
numberWithBool:
T@"NSArray",C,N,V_serviceProviders
observerToQueue
T@"NSArray",R,C,N
opaqueSessionID
T@"NSCountedSet",&,N,V_processAssertions
otherUniqueProxyIdentifiersType
T@"NSData",&,N,V_avcData
participantAssociationWithTUConversationParticipantAssociation:
T@"NSData",&,N,V_conversationMessageBytes
payload
T@"NSData",&,N,V_dummyPayload
perform
T@"NSData",&,N,V_image
performPlayDTMFToneForCall:key:
T@"NSData",&,N,V_metadata
T@"NSData",&,N,V_privateKey
preferredAndActiveRouteForCall:
T@"NSData",&,N,V_publicKey
primaryDeviceID
T@"NSData",&,N,V_unsafeData
processObserver
T@"NSData",C,N,V_voipToken
protoCallsCount
T@"NSData",R,C,N,V_avcData
protocolVersion
T@"NSDate",&,N
provider:performPullCallAction:
T@"NSDate",&,N,GdateCreated,V_mockDateCreated
providerManager
T@"NSDate",&,N,V_dateEnded
pseudonymURIMap
T@"NSDate",&,N,V_dateStartedConnecting
registerClient:
T@"NSDate",C,N,V_lastRebroadcastTime
relayCall:didAnswerWithRequest:
T@"NSDate",R,N,V_dateCreated
relayCallingDisabledForDeviceID
T@"NSDictionary",&,N,V_visibilityContext
remoteParticipantForIdentifier:
T@"NSDictionary",C,N,GproviderContext,V_mockProviderContext
remoteVideoPausedForConference:
T@"NSDictionary",C,N,V_activeParticipantDestinationsByIdentifier
removeObserver:
T@"NSDictionary",C,N,V_localInviteDictionary
request
T@"NSDictionary",C,N,V_remoteInviteDictionary
requiresStrictPolicyEnforcement
T@"NSDictionary",R,C,N
retainArguments
T@"NSDictionary",R,C,N,V_remoteInviteDictionary
T@"NSError",&,N,V_endedError
saveImageToDisk
T@"NSMapTable",&,N,V_dataSourceToIdentifierToCalls
sendMessagesForInvalidatedLink:
T@"NSMapTable",&,N,V_observerToQueue
serverTimestamp
T@"NSMapTable",R,N,V_clientsByObject
serviceProvider
T@"NSMapTable",R,N,V_openTransactions
session
T@"NSMutableArray",&,N,V_activeLightweightParticipants
session:didLeaveGroupWithError:
T@"NSMutableArray",&,N,V_activeRemoteParticipants
session:invitationSentToTokens:
T@"NSMutableArray",&,N,V_addedMembers
sessionStarted:
T@"NSMutableArray",&,N,V_contactIdentifiers
T@"NSMutableArray",&,N,V_emergencyLabeledHandles
setAssociation:
T@"NSMutableArray",&,N,V_firstUnlockCallbacks
setAudioPaused:
T@"NSMutableArray",&,N,V_generatorDescriptors
setCachedChats:
T@"NSMutableArray",&,N,V_invitationPreferences
setCategory:mode:options:error:
T@"NSMutableArray",&,N,V_lightweightMembers
setConferenced:
T@"NSMutableArray",&,N,V_members
setConversationGridDisplayMode:
T@"NSMutableArray",&,N,V_otherUniqueProxyIdentifiers
setConversationProviderManager:
T@"NSMutableArray",&,N,V_prioritizedSenderIdentities
setDialRequest:
T@"NSMutableArray",&,N,V_providers
setEmergencyCurrentlyAvailable:
T@"NSMutableArray",&,N,V_remoteMembers
setEnvironment:
T@"NSMutableArray",&,N,V_removedMembers
setFacetimeIDSServiceGenerator:
T@"NSMutableArray",&,N,V_sessions
setFileManager:
T@"NSMutableArray",C,N,V_memberHandlesAwaitingInvitesToLink
setFromStorage:
T@"NSMutableArray",R,N,V_captureSessionQueue
setHandoffRecipientParticipant:
T@"NSMutableArray",R,N,V_pendingData
setHasMaximumCallsPerCallGroup:
T@"NSMutableArray",R,N,V_photoRequestDurations
setHasReceivedFirstRemoteFrame:
T@"NSMutableArray",R,N,V_transactionObjectsAwaitingCallHistory
setHasShouldCheckAllGenerators:
T@"NSMutableDictionary",&,N,V_audioRoutesByParticipantIdentifier
setHasTimebase:
T@"NSMutableDictionary",&,N,V_listeningIdentifiersByActivityType
setIDSAliasingSalt:onContainer:
T@"NSMutableDictionary",&,N,V_pendingConversationParticipantsByIdentifier
setJoiningConversationWithLink:
T@"NSMutableDictionary",&,N,V_silencingUserInfo
setLightweight:
T@"NSMutableDictionary",R,C,N,V_inflightAVCBlobRecoveryBlocksByIdentifier
setLocalMember:
T@"NSMutableDictionary",R,N,V_bundleIdentifierToApplicationState
setMixToUplink:
T@"NSMutableDictionary",R,N,V_cachedCalls
setMockBlocked:
T@"NSMutableDictionary",R,N,V_clientFileURLByIdentifier
setMockIsVideo:
T@"NSMutableDictionary",R,N,V_delayedActionsByCallUUID
setMockService:
T@"NSMutableDictionary",R,N,V_localProvidersByIdentifier
setMockTTYType:
T@"NSMutableDictionary",R,N,V_mutableConversationsByUUID
setOtherUniqueProxyIdentifiers:
T@"NSMutableDictionary",R,N,V_mutablePseudonymsByCallUUID
setPreferences:
T@"NSMutableDictionary",R,N,V_mutableSendDataCallbacksByRequestIdentifiers
setProtoShouldSuppressInCallUI:
T@"NSMutableDictionary",R,N,V_pairedHostDeviceProvidersByIdentifier
setProtoStatus:
T@"NSMutableDictionary",R,N,V_pendingPulledCallContexts
setRemoteProtocolVersionNumber:
T@"NSMutableDictionary",R,N,V_pidToCachedProviderIdentifiers
setSOS:
T@"NSMutableDictionary",R,N,V_pidToProviderIdentifiers
setScreenEnabled:screenShareAttributes:forConversationWithUUID:
T@"NSMutableDictionary",R,N,V_providerIdentifierToProvider
setSerialQueue:
T@"NSMutableDictionary",R,N,V_remoteParticipantsByIdentifier
setSessionMode:
T@"NSMutableDictionary",R,N,V_requestStartDateByTransactionID
setSetUpBreakBeforeMakeTimeout:
T@"NSMutableDictionary",R,N,V_screenCaptureQueue
setSoundRegion:
T@"NSMutableDictionary",R,N,V_temporaryFileURLByClientFileURL
setSupportsDefaultPairedDevice:
T@"NSMutableOrderedSet",&,N,V_activityQueue
setTimedOutPickingRouteHandler:
T@"NSMutableOrderedSet",&,N,V_currentCallSet
setUPlusOneScrenShareAvailable:
T@"NSMutableSet",&,N,V_conferencesAwaitingConnectionClose
setUplinkMuted:
T@"NSMutableSet",&,N,V_identifiersWithPendingCoalescingBlocks
setVideoPaused:
T@"NSMutableSet",&,N,V_pendingAllowedMembers
setWiFiEmergencyCallingAllowed:
T@"NSMutableSet",R,N,V_callUUIDsUpgradedForAVMode
setXpcListener:
T@"NSMutableSet",R,N,V_conversationUUIDs
shouldDisplaySystemCallControls
T@"NSMutableSet",R,N,V_conversationUUIDsUpgradedFromAVLess
shouldIgnoreBenignErrorOnStart:
T@"NSMutableSet",R,N,V_conversationUUIDsWaitingToJoin
shouldPreferRelayOverDirectSecondaryCallingForProvider:isVideo:
T@"NSMutableSet",R,N,V_mutableConversationsRequestingUpgrade
T@"NSNumber",&,N,V_expectedAudioEnabled
speakUtterance:
T@"NSNumber",&,N,V_expectedScreenEnabled
startWhenStaged
T@"NSNumber",&,N,V_expectedVideoPaused
stringByAppendingPathComponent:
T@"NSNumber",&,N,V_remoteProtocolVersionNumber
stringForIDSSessionEndedReason:
T@"NSNumber",C,N
supportsAVMode:
T@"NSObject",&,N,V_reportingHierarchySubToken
supportsHolding
T@"NSObject<OS_dispatch_queue>",&,N
supportsRinging
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
telephoneNumber
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
temporaryFileURLByClientFileURL
T@"NSObject<OS_dispatch_source>",&,N,V_pendingConversationCleanupTimer
timeout
T@"NSObject<OS_dispatch_source>",&,V_callDurationLimitTimer
trashVoicemail:
T@"NSOrderedSet",C,N,V_telephonySenderIdentities
ttyType
T@"NSPersonNameComponents",R,C,N
tuRoute
T@"NSSet",&,N,V_invitationPreferences
typedIdentifier
T@"NSSet",C,N,SsetTUInvitationPreferences:
unarchivedObjectFromData:error:
T@"NSSet",C,N,V_activeRemoteParticipants
ungroup
T@"NSSet",C,N,V_invitationPreferences
updateAppHistoryActivityForCall
T@"NSSet",C,N,V_lightweightMembers
updateConversationsByGroupUUID:
T@"NSSet",C,N,V_otherInvitedHandles
updateWithCall:
T@"NSSet",C,N,V_pendingMembers
uppercaseString
T@"NSSet",C,N,V_remoteMemberHandles
urlForFilename:
T@"NSSet",C,N,V_remoteParticipantHandles
utilityProvider
T@"NSSet",C,N,V_subscriptions
virtualParticipantsByPluginName
T@"NSSet",R,N
wasDialAssisted
.cxx_destruct
StringAsAvMode:
AVCBlobRecoveryTimeout
T@"<CSDOrientationObserver>",R,N,V_interfaceOrientationObserver
FZIDType
T@"AVCSessionConfiguration",R,N
T@"CSDConversationNoticeManager",R,N,V_conversationNoticeManger
IMAVChatRemoteVideoPresentationStateFromCXVideoPresentationState:
T@"CSDIDSService",C,N,V_service
ISOCountryCode
T@"CSDPinExchangeController",R,N,V_thumperPinExchangeController
ISOCountryCodeForChat:
T@"IDSService",R,N,V_idsService
ISOCountryCodeForSubscriptionUUID:
T@"NSArray",C,N
JSONObjectWithData:options:error:
T@"NSError",R,N
SHA1HexString
T@"NSMutableArray",R,N,V_pendingNetworkExtensionMessageContexts
StringAsDeviceType:
T@"NSNumber",&,N,GisSendingVideoExpected,V_sendingVideoExpected
StringAsHandleType:
T@"NSSet",C,D,N
StringAsLinkLifetimeScope:
T@"NSSet",C,N,V_serverProvidedLightweightParticipantIdentifiers
StringAsRequestActionType:
T@"NSString",&,N,V_contactLabel
StringAsValidationSource:
T@"NSString",R,C,N,V_identifier
T#,R,N
T@"STCallingStatusDomainCallDescriptor",&,N,V_currentDescriptor
T@"<CSDAVCSession>",&,N,V_avcSession
T@"TUCallCapabilitiesState",R,N
T@"<CSDAVConference>",&,N,V_conference
T@,&,N,V_object
T@"<CSDAVConferenceDelegate>",W,N
T@?,C,N,V_block
T@"<CSDAVConferenceProvider>",&,N,V_conferenceProvider
T@?,C,N,V_outgoingChatGenerator
T@"<CSDAVConferenceProviderDelegate>",W,N,Vdelegate
TB,N,GisInvitation,V_invitation
T@"<CSDCHManager>",&,N,V_chManager
TB,N,GisWaitingToPruneParticipants,V_waitingToPruneParticipants
T@"<CSDCallCenterObserver>",&,N,V_callCenterObserver
TB,N,V_isScreenSharingAvailable
T@"<CSDCallContainer>",R,N
TB,N,V_receivedInvitationAccept
T@"<CSDCallDelegate>",W,N,V_delegate
TB,N,V_requiresInviteDictionary
T@"<CSDCallProviderManagerDataSource>",R,N,V_dataSource
TB,N,V_supportsClientAssertions
T@"<CSDCallProviderManagerDataSourceDelegate>",W,N,V_delegate
TB,N,V_uplinkWasExplicitlyMuted
T@"<CSDCarrierBundlePhoneNumberProviderControllerDelegate>",W,N,V_delegate
TB,R,N,GisCellularDataAvailable
T@"<CSDConversationDelegate>",W,N,V_delegate
TB,R,N,GisInitiator,V_initiator
T@"<CSDConversationNoticeDelegate>",R,W,N,V_delegate
TB,R,N,GisSpeakerRouteAvailable
T@"<CSDConversationServerBag>",&,N,V_serverBag
TI,N,V_sharePlayProtocolVersion
T@"<CSDCoreTelephonyClientDelegate>",W,N
TQ,N,V_photoRequestSuccessCount
T@"<CSDDeviceLockStateObserver>",R,N,V_deviceLockObserver
TQ,N,V_sharePlayProtocolVersion
T@"<CSDFaceTimeIDSProviderDelegateCapabilities>",R,N,V_capabilities
T^I,R,N
T@"<CSDFaceTimeProviderDelegateManagerDelegate>",W,N,V_faceTimeDemuxerDelegate
Td,N,V_remoteUplinkMutedSetTime
T@"<CSDFileTransferringDelegate>",W,N
Ti,R,N,V_socket
T@"<CSDIDSChatDelegate>",W,N
T@"<CSDIDSDualSessionDelegate>",W,N,V_delegate
_addCallAllowed
T@"<CSDIDSDualSessionProviderDelegate>",W,N
_applicationLaunchPolicyManager
T@"<CSDIDSGroupSessionDelegate>",W,N,V_delegate
_audioVideoMode
T@"<CSDIDSGroupSessionProviderDelegate>",W,N
_avMode
T@"<CSDIDSProviderDelegateCapabilities>",R,N,V_capabilities
_callController
T@"<CSDIDSService>",R,N,V_relayService
_callHistoryControllerXPCServer
T@"<CSDIDSServiceDependencies>",R,N
_caller
T@"<CSDMediaAssetManaging>",R,N,V_mediaAssetManager
_checkInMessage
T@"<CSDMomentsControllerLocalCapabilities>",&,N
_conversationID
T@"<CSDMomentsServerBag>",&,N,V_serverBag
_conversationUUIDsWaitingToJoin
T@"<CSDPauseDigitsQueueDelegate>",W,N,V_delegate
_didStopHandler
T@"<CSDProcessObserverProtocol>",R,N,V_inCallServiceProcessObserver
_displayContext
T@"<CSDProcessObserverProtocol>",R,N,V_springBoardProcessObserver
_expanseEnabled
T@"<CSDProximitySensorObserver>",R,N,V_proximitySensorObserver
_exportedObject
T@"<CSDRelayIDSDualSessionDelegate>",W,N,V_delegate
_handle
T@"<CSDRelayIDSSessionMessengerDelegate>",W,D,N
_hardPauseState
T@"<CSDRelayMessagingControllerCommonMessagingDelegate>",W,N,V_commonMessagingDelegate
_isSendingAudio
T@"<CSDRelayMessagingControllerHostMessagingDelegate>",W,N,V_hostMessagingDelegate
_isSystemProviderForIdentifier:
T@"<CSDStatusBarResolver>",&,N,V_resolver
_joined
T@"<CSDStatusBarResolverDelegate>",W,N,V_delegate
_joinedMetadata
T@"<CSDThumperCapabilitiesMonitorDataSource>",W,N,V_dataSource
_lastSavedAccountIDByCapability
T@"<CSDUserActivityCommunicatorDelegate>",W,N
_localSenderIdentityAccountUUID
T@"<CSDUserActivityCommunicatorProtocol>",&,N,V_activityCommunicator
_mockCallStatus
T@"<CSDVoiceOverObserver>",R,N,V_voiceOverObserver
_networkSupport
T@"<CXAudioSessionActivationStateObserver>",&,N,GaudioInterruptionActivationStateObserver,V_mockAudioInterruptionActivationStateObserver
_nseMessageHost
T@"<IDSServicePseudonymDelegate>",&,N,V_delegate
_originalRingtoneSoundURLString
T@"<TUFeatureFlags>",&,N,V_featureFlags
_pendingRemovedParticipantsByID
T@"<TUMomentsControllerXPCClient>",R,N,V_momentsClient
_pidToCachedProviderIdentifiers
T@"<TUNotifyObserver>",&,N,V_notifyObserver
_protoCallModel
T@"APSConnection",&,N,V_developmentConnection
_protoSupportsEmergencyFallback
T@"AVAudioSession",R,N
_providerSource
T@"AVCSession",R,N,V_session
_recoverMessage
T@"BKSAccelerometer",R,N,V_accelerometer
_remoteParticipantsByIdentifier
T@"BKSProcessAssertion",&,N,V_processAssertion
_report
T@"CARAutomaticDNDStatus",&,N,V_automaticCarDNDStatus
_routes
T@"CMGestureManager",&,N,V_raiseToEarGestureManager
_sendSoftPauseDigitsIfNecessary
T@"CPActivityAuthorizationManager",R,N
_setLocalLandscapeAspectRatio:localPortraitAspectRatio:forChat:
T@"CPApplicationController",R,N,V_cpApplicationController
_setUpListeners
T@"CPApplicationPolicyManager",&,N,V_applicationLaunchPolicyManager
_springBoardPID
T@"CPAudioRoutePolicyManager",&,N,V_audioRoutePolicyManager
_synchronousExportedObjectProxy
T@"CPConversationManagerHost",R,N,V_conversationManagerHost
_update
T@"CSDAVConferenceConfiguration",&,N,V_configuration
_voucherManager
T@"CSDAudioArbitrationController",&,N,V_audioArbitrationController
accountController:accountAdded:
T@"CSDCall",R
accountsSupportSecondaryCalling
T@"CSDCallCenterObserver",R,N,V_callCenterObserver
actions
T@"CSDCallController",R,N,V_callController
activeParticipantPruningTimeout
T@"CSDCallDirectoryManager",&,N,V_callDirectoryManager
activityContext
T@"CSDCallHistoryController",&,N,V_callHistoryController
addIdentifiers:
T@"CSDCallHistoryControllerXPCServer",R,N,V_callHistoryControllerXPCServer
addParticipant:
T@"CSDCallHistoryManagerXPCServer",R,N,V_callHistoryManagerXPCServer
aliases
T@"CSDCallProviderManager",R,N,V_callProviderManager
allParticipantsSupportSharePlay
T@"CSDCallProviderManagerXPCServer",R,N,V_callProviderManagerXPCServer
answerCall:withRequest:whileDisconnectingCalls:andHoldingCalls:
T@"CSDCallStateController",&,N,V_callStateController
arrayWithArray:
T@"CSDCallStateController",W,N,V_callStateController
asynchronousExportedObjectProxy
T@"CSDCarPlayManager",R,N,V_carPlayManager
audioQueueFlags
T@"CSDClient",&,N,V_pushKitClient
availableOutgoingRelayCallerIDs
T@"CSDClient",W,N,V_sessionApprovalClient
avcSessionToken
T@"CSDClientManager",&,N,V_pushKitClientManager
bestAppSuggestionMayHaveChanged
T@"CSDClientManager",W,N,V_clientManager
bytesOfDataUsed
T@"CSDConversationLinkManager",&,N,V_linkManager
callGroupsOnDefaultPairedDevice
T@"CSDConversationManagerXPCServer",R,N,V_conversationManagerXPCServer
callWithStatus:
T@"CSDConversationParticipant",R,N
canSend
T@"CSDConversationProviderManager",&,N,V_conversationProviderManager
cancelInvitationWithLocalHangup
T@"CSDConversationProviderManager",R,N,V_conversationProviderManager
cleanup
T@"CSDConversationProviderManagerXPCServer",R,N,V_conversationProviderManagerXPCServer
clearProtoCalls
T@"CSDDeviceLockStateObserver",&,N,V_deviceLockStateObserver
clients
T@"CSDExternalIDSDualSession",R,N,V_session
conduit
T@"CSDFaceTimeIDSProviderDelegate",&,N,V_faceTimeIDSProviderDelegate
conferenceProviderCreationBlock
T@"CSDFaceTimeIMAccount",R,N
containsObject:
T@"CSDFaceTimeInviteDemuxer",R,N,V_faceTimeInviteDemuxer
content
T@"CSDGFTServiceConversationProviderDelegate",&,N,V_groupFaceTimeServiceProviderDelegate
conversation:failedWithContext:
T@"CSDIDSFirewallManager",&,N,V_firewallManager
conversationManager:reportedNewIncomingConversation:fromHandle:
T@"CSDIDSService",R,N
conversationWithGroupUUID:orRepresentedByRemoteMembers:andLink:
T@"CSDIDSTransport",&,N,V_transport
countForObject:
T@"CSDIncomingCallFilter",R,N,V_incomingCallFilter
csd_isTelephony
T@"CSDKeychainPasswordItem",R,N,V_keychainItem
currentPreferredTransportMethod
T@"CSDMessagingAVConferenceInviteData",&,N,V_inviteData
dataForVoicemailWithIdentifier:
T@"CSDMessagingCallDisplayContext",&,N,V_protoDisplayContext
dealloc
T@"CSDMessagingCallModelState",&,N,V_protoCallModelState
delegateToQueue
T@"CSDMessagingConversationActivity",&,N,V_activity
destinationURIs
T@"CSDMessagingConversationActivityMetadata",&,N,V_activityMetadata
deviceSupported
T@"CSDMessagingConversationActivitySession",&,N,V_activitySession
devicesChanged:
T@"CSDMessagingConversationLink",&,N,V_link
didChangeThumperCallingProvisionalURLForSenderIdentityWithUUID:
T@"CSDMessagingConversationMember",&,N,V_localMember
disconnectCall:
T@"CSDMessagingConversationParticipant",&,N,V_sender
eligibleForCall
T@"CSDMessagingConversationParticipantAssociation",&,N,V_participantAssociation
enabled
T@"CSDMessagingEncryptedConversationMessage",&,N,V_encryptedMessage
endChat
T@"CSDMessagingHandle",&,N,V_fromHandle
expanseProvider
T@"CSDMessagingHandle",&,N,V_initiator
facetimeService
T@"CSDMessagingHandle",&,N,V_originatorHandle
filters
T@"CSDMessagingLinkSyncCheckInMessage",&,N,V_checkInMessage
fulfill
T@"CSDMessagingLinkSyncUpdateMessage",&,N,V_updateMessage
getIsSendingAudio:callID:error:
T@"CSDMessagingPersonNameComponents",&,N,V_protoPersonNameComponents
groupID
T@"CSDMessagingVoucher",&,N,V_associationVoucher
handleInvocation:synchronously:
T@"CSDNeighborhoodActivityConduit",R,N,V_conduit
handles
T@"CSDOrientationMonitor",&,N,V_orientationMonitor
hardPauseDigits
T@"CSDPauseDigitsQueue",&,N,V_pauseDigitsQueue
hasCallInfoBlob
T@"CSDPowerAssertionManager",&,N,V_powerAssertionManager
hasCurrentCalls
T@"CSDProviderCallDataSource",R,N,V_providerCallDataSource
hasGenerateDescriptorVersionSum
T@"CSDProviderDisplayMonitor",R,N,V_providerDisplayMonitor
hasName
T@"CSDProximitySensorObserver",&,N,V_proximitySensorObserver
hasProtoDTMFKey
T@"CSDRecentsController",R,N,V_recentsController
hasProtoService
T@"CSDRelayCallDataSource",W,N,V_relayCallDataSource
hasSupportsDTMF
T@"CSDRelayClientController",&,N,V_relayClientController
hasType
T@"CSDRelayConferenceInterface",R,N
idsDestinations
T@"CSDRelayIDSDualSession",R,N
imageTranscoder
T@"CSDRelayMessagingController",&,N,V_relayMessagingController
initWithAction:
T@"CSDRelayPairedDeviceMessenger",R,N,V_pairedDeviceMessenger
initWithClientUUID:serialQueue:
T@"CSDReportingController",R,N,V_reportingController
initWithDataSource:serialQueue:
T@"CSDRouteController",R,N,V_pairedHostDeviceRouteController
initWithDomain:
T@"CSDSandboxExtensionDirectory",R,N,V_ringtonesSandboxExtensionDirectory
initWithName:fileManager:error:
T@"CSDSecureImageTranscoder",&,N,V_imageTranscoder
initWithString:
T@"CSDStatusBarManager",&,N,V_statusBarManager
invokeDidStopIfNecessary:error:
T@"CSDThumperCapabilitiesMonitor",R,N,V_thumperCapabilitiesMonitor
isAccountActive
T@"CSDTransactionManager",R,N
isCarModeActive
T@"CSDUserActivity",&,N,V_handoffActivity
isConversationWithUUIDRelaying:
T@"CSDUserActivityManager",R,N
isEmergencyCallingOnWifiAllowed
T@"CSDUserNotificationController",&,N,V_userNotificationController
isEquivalentToConversationLink:
T@"CSDVoIPApplicationMessage",R,N,V_message
isGuest
T@"CSDVoIPProcessAssertionManager",R,N,V_processAssertionManager
isInputFrequencyMeteringEnabled
T@"CTXPCContexts",C,N,V_activeContexts
isMirageEnabled
T@"CXCall",R,N
isProxy
T@"CXCallDirectoryManager",&,N,V_manager
isRelay
T@"CXCallDirectorySanitizer",R,N,V_callDirectorySanitizer
isScreenEnabled
T@"CXCallFailureContext",&,N,V_failureContext
isUsingBaseband
T@"CXCallSource",&,N,V_backingCallSource
isValidLocalHandle:forProvider:
T@"CXCallSourceManager",R,N,V_callSourceManager
isWiFiAvailable
T@"CXCallUpdate",R,C,N
isWiFiEmergencyCallingAvailable
T@"CXInProcessCallSource",R,N,V_tinCanCallSource
labelID
T@"CXNetworkExtensionMessageControllerHost",R,N,V_networkExtensionMessageHost
localIdentifier
T@"CXProvider",&,N,V_provider
loginID
T@"CoreTelephonyClient",R,N,V_client
machServiceName
T@"DNDEventBehaviorResolutionService",R,N,V_behaviorResolutionService
mapName
T@"FTDeviceSupport",&,N,V_deviceSupport
memberWithTUConversationMember:
T@"IDSAccount",R,N
membersAtIndex:
T@"IDSAccountController",R,N,V_accountController
messageSendTime
T@"IDSDestination",&,N,V_expectedRelayClientDestination
mirageAvailable
T@"IDSDestination",R,N
mockCompanyName
T@"IDSDevice",&,N,V_dialingIDSDevice
mockDateCreated
T@"IDSDevice",&,N,V_remoteDevice
mockKnownCaller
T@"IDSGroupSession",&,N,V_session
mockSOS
T@"IDSService",&,N,V_service
modelIdentifier
T@"IDSSession",R,N,V_session
moments:didFinishRequest:error:
T@"NPSDomainAccessor",&,N,V_domainAccessor
momentsDisabled
T@"NSArray",&,N,V_devices
nearbyTVDevices
T@"NSArray",C,N,V_invitedPushTokens
normalizedValue
T@"NSArray",C,N,V_participantDestinationIDs
T@"NSArray",C,N,V_secondaryThumperAccounts
numberWithLong:
T@"NSArray",C,N,V_supportedMediaTypes
onEmergencyCall
T@"NSArray",R,C,N,V_carrierPhoneNumbers
options
T@"NSData",&,N,V_applicationContext
pairedHostDeviceRouteController
T@"NSData",&,N,V_callInfoBlob
participantData
T@"NSData",&,N,V_data
pendingConversationCleanupTimer
T@"NSData",&,N,V_encryptedData
performDialCall:displayContext:
T@"NSData",&,N,V_mediaBlob
performStartCallAction:forCall:
T@"NSData",&,N,V_mirageHandshakeData
predicateFormat
T@"NSData",&,N,V_protoDTMFKey
preferredBroadcastingAttributes
T@"NSData",&,N,V_sKEBlob
prioritizedSenderIdentitiesType
T@"NSData",C,N,V_acceptPayloadData
processStateChangedWithBundleID
T@"NSData",R,C,N
protoWantsVideo
T@"NSData",R,N
provider:performJoinCallAction:
T@"NSDate",&,N,GdateConnected,V_mockDateConnected
providerContext
T@"NSDate",&,N,V_dateConnected
providersByIdentifierForClient:
T@"NSDate",&,N,V_dateReceivedFirstRemoteFrame
pseudonymsCount
T@"NSDate",&,N,V_dateStartedOutgoing
rejectedMembers
T@"NSDate",R,N
relayCallConferenceDidStartSuccessfullyForIncomingAnsweredCall:
T@"NSDictionary",&,N,V_callStateContext
release
T@"NSDictionary",C,N
remoteParticipantWithIdentifier:updatedAudioPaused:streamToken:
T@"NSDictionary",C,N,V_activeLightweightParticipantDestinationsByIdentifier
removeDelegate:
T@"NSDictionary",C,N,V_audioRouteCollections
representsTransitionFromPending
T@"NSDictionary",C,N,V_providersByIdentifier
requestStartDateByTransactionID
T@"NSDictionary",C,N,V_senderIdentityCapabilitiesStateByUUID
restart
T@"NSDictionary",R,C,N,V_payload
routeController
T@"NSDictionary",R,N
sKEBlob
T@"NSFileManager",&,N,V_fileManager
sendApprovalDisplayPinToDevice:
T@"NSMapTable",&,N,V_delegateToQueue
sendPendingData
T@"NSMapTable",&,N,V_uniqueProxyIdentifierToCallTable
service
T@"NSMapTable",R,N,V_delegateToQueue
serviceSpaceDidBecomeAvailable:
T@"NSMapTable",R,N,V_streamTokensByCSDClient
session:changedBytesOfDataUsed:
T@"NSMutableArray",&,N,V_activeParticipants
session:didUpdateConfiguration:
T@"NSMutableArray",&,N,V_activitySessions
sessionProvider
T@"NSMutableArray",&,N,V_conferenceConnections
sessionsByToken
T@"NSMutableArray",&,N,V_emergencyHandles
setAccountUUID:
T@"NSMutableArray",&,N,V_endpointIDSDestinationURIs
setAttachments:
T@"NSMutableArray",&,N,V_generateDescriptorInfos
setBool:forKey:
T@"NSMutableArray",&,N,V_handoffIdentifiers
setCallChanged:
T@"NSMutableArray",&,N,V_invitedHandles
setCompanyName:
T@"NSMutableArray",&,N,V_links
setContactName:
T@"NSMutableArray",&,N,V_otherInvitedHandles
setConversationGroupUUIDString:
T@"NSMutableArray",&,N,V_pauseDigits
setDeferCommittingTransactions:
T@"NSMutableArray",&,N,V_protoCalls
setDisplayName:
T@"NSMutableArray",&,N,V_pseudonyms
setEndedReason:
T@"NSMutableArray",&,N,V_remoteParticipantHandles
setFaceTimeIDSProviderDelegate:
T@"NSMutableArray",&,N,V_reporters
setFallbackURL:
T@"NSMutableArray",&,N,V_signalHandlerDispatchSources
setFilterBlock:
T@"NSMutableArray",R,N,V_blocksPendingTransportAvailability
setGeneratorID:
T@"NSMutableArray",R,N,V_filters
setHasIsScreenSharingAvailable:
T@"NSMutableArray",R,N,V_pendingPushKitVoIPMessageContexts
setHasProtoSOS:
T@"NSMutableArray",R,N,V_sessionUpdateCompletionQueue
setHasSharePlayProtocolVersion:
T@"NSMutableDictionary",&,N,V_activeLightweightParticipantsByIdentifier
setHasSupportsContinuationOnTV:
T@"NSMutableDictionary",&,N,V_blockToExecuteAfterPendingCoalescingBlocksByIdentifier
setHoldAllowed:
T@"NSMutableDictionary",&,N,V_pendingCompletions
setIsActivated:
T@"NSMutableDictionary",&,N,V_pendingKickedMembersByIdentifier
setLeaveReason:
T@"NSMutableDictionary",&,V_pendingCodesToDevicesForApproval
setLinkManager:
T@"NSMutableDictionary",R,N,V_activeRemoteParticipantsByIdentifier
setLocalParticipantAssociation:
T@"NSMutableDictionary",R,N,V_cachedCallUUIDsToConversationAVMode
setMixingVoiceWithMediaEnabled:
T@"NSMutableDictionary",R,N,V_callUUIDsByConversationUUID
setMockEndpointOnCurrentDevice:
T@"NSMutableDictionary",R,N,V_conversationUUIDsByCallUUID
setMockNeedsManualInCallSounds:
T@"NSMutableDictionary",R,N,V_lastSavedAccountIDByCapability
setMockSubtype:
T@"NSMutableDictionary",R,N,V_mobileCodesToISOCountryCode
setMostRecentBestAppSuggestion:
T@"NSMutableDictionary",R,N,V_mutablePendingConversationsByPseudonym
setPauseDigits:
T@"NSMutableDictionary",R,N,V_mutablePseudonymsByRequestIdentifiers
setPrioritizedSenderIdentities:
T@"NSMutableDictionary",R,N,V_outstandingMessages
setProtoShouldSuppressRingtone:
T@"NSMutableDictionary",R,N,V_pendingCallsToChatUUIDs
setRelayCallingFeaturesEnabled:
T@"NSMutableDictionary",R,N,V_pendingRemovedParticipantsByID
setRemoteVideoPresentationSize:
T@"NSMutableDictionary",R,N,V_pidToProcessHandle
setScaleFactor:
T@"NSMutableDictionary",R,N,V_preferences
setScreenToken:
T@"NSMutableDictionary",R,N,V_recentlyDeletedCallUUIDsByConversationUUID
setServiceName:
T@"NSMutableDictionary",R,N,V_reportingSessionByStreamToken
setSessionUUID:
T@"NSMutableDictionary",R,N,V_requestTimeoutBlockByTransactionID
setShouldSuppressDefaultAction:
T@"NSMutableDictionary",R,N,V_sessionsByToken
setStreamToken:
T@"NSMutableDictionary",R,N,V_virtualParticipantsByPluginName
setSynchronous:
T@"NSMutableOrderedSet",&,N,V_cachedChats
setTuProviders:
T@"NSMutableOrderedSet",R,N,V_mutableChats
setURL:
T@"NSMutableSet",&,N,V_identifiersWaitingForAcknowledgement
setUsesApplicationAudioSession:
T@"NSMutableSet",&,N,V_kickedParticipants
setWiFiAllowed:
T@"NSMutableSet",&,N,V_recentlyLeftParticipantIdentifiers
setWithObjects:
T@"NSMutableSet",R,N,V_chatsPendingUpgrade
sharePlayDiscoverabilityEnabled
T@"NSMutableSet",R,N,V_conversationUUIDsAwaitingActiveAudioSession
shouldForceVerificationFailures
T@"NSMutableSet",R,N,V_conversationUUIDsWaitingForRemoteJoin
shouldOpenInCallServiceForCall:
T@"NSMutableSet",R,N,V_identifiers
siriDisplayName
T@"NSNumber",&,N
spatialPosition
T@"NSNumber",&,N,V_expectedAudioPaused
startCallActionWithDialRequest:
T@"NSNumber",&,N,V_expectedVideoEnabled
startWithError:
T@"NSNumber",&,N,V_mostRecentCompletedOneToOneEnabledValue
stringByAppendingPathExtension:
T@"NSNumber",&,N,V_shouldHandleSecureMicrophoneEvents
subtype
T@"NSNumber",R,C,N
supportsAddCall
T@"NSObject",&,N,V_reportingHierarchyToken
supportsRecents
T@"NSObject<OS_dispatch_queue>",&,N,V_delegateQueue
switchToSpeakerRouteIfNecessary
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
telephonyClient
T@"NSObject<OS_dispatch_semaphore>",&,N,V_uniqueProxyIdentifierToCallTableSemaphore
thumperCallingCapabilitiesState
T@"NSObject<OS_dispatch_source>",&,N,V_timeoutTimer
transportMethod
T@"NSOrderedSet",C,N,SsetPrioritizedTUSenderIdentities:
trigger
T@"NSOrderedSet",R,C,N
tuLabeledHandle
T@"NSSet",&,N,V_availableOutgoingRelayCallerIDs
tu_predicateForConversationLinkDescriptorsWithOriginatorHandle:
T@"NSSet",C,N
uPlusNDowngrade
T@"NSSet",C,N,V_accounts
unenrollDevice:
T@"NSSet",C,N,V_allowedSecondaryDeviceIDs
unknownProvider
T@"NSSet",C,N,V_kickedMembers
updateCallerID:
T@"NSSet",C,N,V_memberIdentifiers
updateStatusBar
T@"NSSet",C,N,V_pendingMemberHandles
upgrade
T@"NSSet",C,N,V_providerIdentifiersForExistingCalls
T@"NSSet",C,N,V_remoteMembers
urlFromResources:withExtension:
T@"NSSet",C,N,V_serverProvidedParticipantIdentifiers
version
T@"NSSet",R,C,N,V_entitledCapabilities
vouchingEnabled
T@"NSString",&,N,V_accountUUIDString
T@"NSString",&,N,V_actionDescription
T@"NSString",&,N,V_activityIdentifier
T@"NSString",&,N,V_audioRouteUniqueIdentifier
T@"NSString",&,N,V_avcIdentifier
T@"NSString",&,N,V_bundleIdentifier
T@"NSString",&,N,V_bundleURLString
T@"NSString",&,N,V_callDirectoryExtensionIdentifier
T@"NSString",&,N,V_callDirectoryLabel
T@"NSString",&,N,V_callDirectoryLocalizedExtensionContainingAppName
T@"NSString",&,N,V_callerNameFromNetwork
T@"NSString",&,N,V_category
T@"NSString",&,N,V_collaborationIdentifier
T@"NSString",&,N,V_companyName
T@"NSString",&,N,V_completedDescription
T@"NSString",&,N,V_contactIdentifier
T@"NSString",&,N,V_contactName
T@"NSString",&,N,V_contextIdentifier
T@"NSString",&,N,V_conversationGroupUUIDString
T@"NSString",&,N,V_conversationID
T@"NSString",&,N,V_conversationProviderIdentifier
T@"NSString",&,N,V_destinationID
T@"NSString",&,N,V_dynamicIdentifier
T@"NSString",&,N,V_fallbackApplicationName
T@"NSString",&,N,V_fallbackURL
T@"NSString",&,N,V_familyName
T@"NSString",&,N,V_generatorID
T@"NSString",&,N,V_givenName
T@"NSString",&,N,V_groupUUIDString
T@"NSString",&,N,V_hardPauseDigits
T@"NSString",&,N,V_highlightIdentifier
T@"NSString",&,N,V_identifier
T@"NSString",&,N,V_identifierUUIDString
T@"NSString",&,N,V_isoCountryCode
T@"NSString",&,N,V_label
T@"NSString",&,N,V_letMeInDelegationHandle
T@"NSString",&,N,V_letMeInDelegationUUID
T@"NSString",&,N,V_linkName
T@"NSString",&,N,V_localSenderIdentityAccountUUIDString
T@"NSString",&,N,V_localSenderIdentityUUIDString
T@"NSString",&,N,V_localizedName
T@"NSString",&,N,V_localizedServiceName
T@"NSString",&,N,V_localizedShortName
T@"NSString",&,N,V_location
T@"NSString",&,N,V_machServiceName
T@"NSString",&,N,V_mapName
T@"NSString",&,N,V_messagesGroupName
T@"NSString",&,N,V_messagesGroupUUIDString
T@"NSString",&,N,V_middleName
T@"NSString",&,N,V_mode
T@"NSString",&,N,V_name
T@"NSString",&,N,V_namePrefix
T@"NSString",&,N,V_nameSuffix
T@"NSString",&,N,V_nickname
T@"NSString",&,N,V_oBSOLETEConferenceIdentifier
T@"NSString",&,N,V_ongoingDescription
T@"NSString",&,N,V_originalRingtoneSoundURLString
T@"NSString",&,N,V_primaryAvcIdentifier
T@"NSString",&,N,V_protoUUID
T@"NSString",&,N,V_protoUpgradeSessionUUID
T@"NSString",&,N,V_providerIdentifier
T@"NSString",&,N,V_pseudonym
T@"NSString",&,N,V_ringtoneSoundURLString
T@"NSString",&,N,V_sourceIdentifier
T@"NSString",&,N,V_subtitle
T@"NSString",&,N,V_suggestedName
T@"NSString",&,N,V_targetContentIdentifier
T@"NSString",&,N,V_title
T@"NSString",&,N,V_tokenPrefixedURI
T@"NSString",&,N,V_uUIDString
T@"NSString",&,N,V_uniqueIdentifier
T@"NSString",&,N,V_uniqueProxyIdentifier
T@"NSString",&,N,V_value
T@"NSString",C,D,N
T@"NSString",C,N
T@"NSString",C,N,GaudioCategory,V_mockAudioCategory
T@"NSString",C,N,GaudioMode,V_mockAudioMode
T@"NSString",C,N,GcallUUID,V_mockCallUUID
T@"NSString",C,N,GcallerNameFromNetwork,V_mockCallerNameFromNetwork
T@"NSString",C,N,GcompanyName,V_mockCompanyName
T@"NSString",C,N,GdisplayName,V_mockDisplayName
T@"NSString",C,N,GlocalizedLabel,V_mockLocalizedLabel
T@"NSString",C,N,GuniqueProxyIdentifier,V_mockUniqueProxyIdentifier
T@"NSString",C,N,V_accountID
T@"NSString",C,N,V_activeIDSDestination
T@"NSString",C,N,V_avcIdentifier
T@"NSString",C,N,V_baseDestinationID
T@"NSString",C,N,V_callerID
T@"NSString",C,N,V_callerNameFromNetwork
T@"NSString",C,N,V_collaborationIdentifier
T@"NSString",C,N,V_currentlyTrackedA2DPRouteIdentifier
T@"NSString",C,N,V_digits
T@"NSString",C,N,V_environment
T@"NSString",C,N,V_identifier
T@"NSString",C,N,V_isoCountryCode
T@"NSString",C,N,V_localThumperDeviceID
T@"NSString",C,N,V_messagesGroupName
T@"NSString",C,N,V_originalPauseDigitsString
T@"NSString",C,N,V_outgoingCallerID
T@"NSString",C,N,V_phoneNumberURI
T@"NSString",C,N,V_primaryDeviceID
T@"NSString",C,N,V_requiredConnectionCapability
T@"NSString",C,V_outgoingPinRequestIdentifier
T@"NSString",R
T@"NSString",R,C
T@"NSString",R,C,N
T@"NSString",R,C,N,V_bundleIdentifier
T@"NSString",R,C,N,V_callerID
T@"NSString",R,C,N,V_destination
T@"NSString",R,C,N,V_emergencyProviderIdentifier
T@"NSString",R,C,N,V_groupID
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_providerIdentifier
T@"NSString",R,C,N,V_pseudonymFeatureID
T@"NSString",R,C,N,V_senderCorrelationIdentifier
T@"NSString",R,N
T@"NSTimer",&,N,V_callDurationUpdateTimer
T@"NSURL",&,N,V_URL
T@"NSURL",R
T@"NSUUID",&,N
T@"NSUUID",&,N,V_clientUUID
T@"NSUUID",&,N,V_conversationGroupUUID
T@"NSUUID",&,N,V_localSenderIdentityAccountUUID
T@"NSUUID",&,N,V_localSenderIdentityUUID
T@"NSUUID",&,N,V_messagesGroupUUID
T@"NSUUID",C,N
T@"NSUUID",C,N,GcallGroupUUID,V_mockCallGroupUUID
T@"NSUUID",C,N,V_callGroupUUID
T@"NSUUID",C,N,V_localSenderIdentityUUID
T@"NSUUID",C,N,V_messagesGroupUUID
T@"NSUUID",C,N,V_upgradeSessionUUID
T@"NSUUID",R,C,N
T@"NSUUID",R,C,N,V_uuid
T@"NSUUID",R,N
T@"NSUUID",R,N,V_UUID
T@"NSUUID",R,N,V_groupUUID
T@"NSUUID",R,N,V_temporaryGroupUUID
T@"NSUUID",R,N,V_uuid
T@"NSUserActivity",&,N,V_userActivity
T@"NSXPCConnection",R,N
T@"NSXPCInterface",&,N,V_exportedInterface
T@"NSXPCInterface",&,N,V_remoteObjectInterface
T@"NSXPCListener",&,N,V_xpcListener
T@"NSXPCListener",R,N,V_xpcListener
T@"RBSAssertion",&,N,V_processAssertion
T@"RBSProcessHandle",&,N,V_processHandle
T@"RTCSecureHierarchyToken",&,N,V_reportingHierarchyToken
T@"RTTTelephonyUtilities",R,N
T@"STCallingStatusDomainCallDescriptor",&,N,V_resolvedDescriptor
T@"STCallingStatusDomainCallDescriptor",R,N
T@"STCallingStatusDomainPublisher",R,N,V_systemStatusPublisher
T@"TUCall",R,&,N
T@"TUCall",R,N
T@"TUCallCapabilitiesState",&,N,V_pairedHostDeviceState
T@"TUCallCapabilitiesState",&,N,V_state
T@"TUCallCenter",R,N
T@"TUCallCenter",R,N,V_callCenter
T@"TUCallCenter",W,N,V_callCenter
T@"TUCallDisplayContext",&,N
T@"TUCallDisplayContext",C,N,GdisplayContext,V_mockDisplayContext
T@"TUCallDisplayContext",C,N,V_displayContext
T@"TUCallDisplayContext",R,N
T@"TUCallModel",&,N
T@"TUCallProvider",&,N
T@"TUCallProvider",&,N,V_provider
T@"TUCallProvider",C,N,Gprovider,V_mockProvider
T@"TUCallProvider",R,C,N
T@"TUCallProvider",R,N
T@"TUCallProviderManager",&,N,V_callProviderManager
T@"TUCallProviderManager",R,N,V_callProviderManager
T@"TUCallScreenShareAttributes",&,N,GscreenShareAttributes,V_mockScreenShareAttributes
T@"TUCallScreenShareAttributes",N,V_screenShareAttributes
T@"TUCallScreenShareAttributes",R,N
T@"TUCallServicesClientCapabilities",&,N,V_capabilities
T@"TUConversation",R,C,N
T@"TUConversation",R,N
T@"TUConversationActivity",C,N,V_activity
T@"TUConversationActivity",R,N
T@"TUConversationActivityContext",R,N
T@"TUConversationActivitySession",&,N,V_stagedActivitySession
T@"TUConversationActivitySession",R,N
T@"TUConversationHandoffEligibility",C,N,V_handoffEligibility
T@"TUConversationInvitationPreference",R,N
T@"TUConversationLink",&,N,V_link
T@"TUConversationLink",R,C,N
T@"TUConversationLink",R,N
T@"TUConversationLinkDescriptor",R,N
T@"TUConversationManager",R,N,V_conversationManager
T@"TUConversationMember",&,N,V_localLightweightSecondaryMember
T@"TUConversationMember",R,N
T@"TUConversationMember",R,N,V_localMember
T@"TUConversationParticipant",R,C,N
T@"TUConversationParticipant",R,N
T@"TUConversationParticipantAssociation",C,N,V_association
T@"TUConversationParticipantAssociation",C,N,V_localParticipantAssociation
T@"TUConversationParticipantAssociation",C,N,V_participantAssociation
T@"TUConversationParticipantAssociation",R,C,N
T@"TUConversationParticipantCapabilities",C,N,V_capabilities
T@"TUConversationProvider",&,N,V_provider
T@"TUConversationProvider",R,C,N,V_tuProvider
T@"TUConversationReport",R,C,N
T@"TUConversationReport",R,N,V_report
T@"TUDTMFSoundPlayer",R,N,V_dtmfSoundPlayer
T@"TUDelegateController",R,N,V_delegateController
T@"TUDelegateController<CSDCallHistoryManagerDelegate>",R,N,V_delegateController
T@"TUDialRequest",&,N,V_dialRequest
T@"TUDialRequest",R,N
T@"TUDynamicCallDisplayContext",&,N,V_dynamicDisplayContext
T@"TUFeatureFlags",R,N,V_featureFlags
T@"TUHandle",&,N
T@"TUHandle",&,N,Ghandle,V_mockHandle
T@"TUHandle",&,N,V_approverHandle
T@"TUHandle",&,N,V_handle
T@"TUHandle",R,C,N,V_handle
T@"TUHandle",R,N
T@"TUHandle",R,N,V_handle
T@"TUHandle",R,N,V_initiator
T@"TUHardwareControlsBroadcaster",R,N,V_hardwareControlsBroadcaster
T@"TULabeledHandle",R,N
T@"TUParticipant",C,N,V_activeRemoteParticipant
T@"TURouteController",R,N,V_routeController
T@"TUSenderIdentity",R,N
T@"TUUserConfiguration",&,N,V_userConfiguration
T@"TUUserConfiguration",R,N,V_userConfiguration
T@"TUVideoDeviceController",R,N,V_videoDeviceController
T@"TUVoucher",R,N
T@"UABestAppSuggestion",&,N,V_mostRecentBestAppSuggestion
T@"UABestAppSuggestionManager",&,N,V_bestAppSuggestionManager
T@"VCCapabilities",&,N,V_capabilities
T@"VCCapabilities",R,C,N
T@,&,N,V_asynchronousExportedObjectProxy
T@,&,N,V_exportedObject
T@,&,N,V_synchronousExportedObjectProxy
T@,R,N
T@,R,N,V_exportedObject
T@?,C,N,V_activeLocalHandles
T@?,C,N,V_activeLocalHandlesForProvider
T@?,C,N,V_allowsScreenSharingBlock
T@?,C,N,V_avcSessionCreationBlock
T@?,C,N,V_avcSessionParticipantCreationBlock
T@?,C,N,V_beginListeningBlock
T@?,C,N,V_clientInvalidationHandler
T@?,C,N,V_completion
T@?,C,N,V_completionHandler
T@?,C,N,V_conferenceCreationBlock
T@?,C,N,V_conferenceProviderCreationBlock
T@?,C,N,V_conversationCreationBlock
T@?,C,N,V_didPrepareHandler
T@?,C,N,V_didStartHandler
T@?,C,N,V_didStopHandler
T@?,C,N,V_dndAllowsCall
T@?,C,N,V_downgradeToOneToOneAfterDelayBlock
T@?,C,N,V_eventBlock
T@?,C,N,V_facetimeIDSServiceGenerator
T@?,C,N,V_groupSessionProviderCreationBlock
T@?,C,N,V_hasBeenUnlockedBlock
T@?,C,N,V_imAccountForActionBlock
T@?,C,N,V_incomingSessionProviderGenerator
T@?,C,N,V_interruptionHandler
T@?,C,N,V_invalidationHandler
T@?,C,N,V_inviteCompletion
T@?,C,N,V_isAccountActive
T@?,C,N,V_localCallerID
T@?,C,N,V_localCallerIDForProvider
T@?,C,N,V_lockdownModeEnabled
T@?,C,N,V_mirageHandshakeBlobCreationBlock
T@?,C,N,V_momentsGenerator
T@?,C,N,V_outgoingSessionProviderGenerator
T@?,C,N,V_participantRefreshBlock
T@?,C,N,V_providerDidBegin
T@?,C,N,V_proximityChangeHandler
T@?,C,N,V_sendDataBlock
T@?,C,N,V_setUpBreakBeforeMakeTimeout
T@?,C,N,V_shouldFilterCall
T@?,C,N,V_shouldPreferRelayOverDirectSecondaryCalling
T@?,C,N,V_supportsPrimaryCalling
T@?,C,N,V_timeoutBlock
T@?,C,N,V_voiceOverRunningDeterminationHandler
T@?,C,N,V_voiceOverTouchShouldRouteToSpeakerDeterminationHandler
T@?,R,C,N,V_captureSessionCreationBlock
T@?,R,C,N,V_raiseToEarGestureHandler
TB,N
TB,N,GareCapabilitiesValid,V_capabilitiesValid
TB,N,GhasBeenRedirected,V_mockHasBeenRedirected
TB,N,GhasJoined,V_hasJoined
TB,N,GhasSentInvitation,V_mockHasSentInvitation
TB,N,GhasStartedOutgoing,V_mockHasStartedOutgoing
TB,N,GisAudioDisabled,V_audioDisabled
TB,N,GisAudioEnabled
TB,N,GisAudioEnabled,V_audioEnabled
TB,N,GisAudioMutedForHoldMusic,V_audioMutedForHoldMusic
TB,N,GisAudioPaused
TB,N,GisAudioPaused,V_audioPaused
TB,N,GisAudioReady
TB,N,GisAudioSessionActive,V_audioSessionActive
TB,N,GisBlocked,V_mockBlocked
TB,N,GisCSCallingAvailable,V_csCallingAvailable
TB,N,GisCaller
TB,N,GisCaller,V_caller
TB,N,GisCarModeActive,V_carModeActive
TB,N,GisCarPlayDeviceConnected,V_carPlayDeviceConnected
TB,N,GisCellularDataAllowed
TB,N,GisCellularDataPreferred
TB,N,GisConferenced
TB,N,GisConferenced,V_mockConferenced
TB,N,GisConnected,V_mockConnected
TB,N,GisConnecting,V_mockConnecting
TB,N,GisConversation,V_mockConversation
TB,N,GisCovered,V_covered
TB,N,GisCurrentlyPicked
TB,N,GisDetectingRaiseToAnswer
TB,N,GisEmergency
TB,N,GisEmergency,V_emergency
TB,N,GisEmergency,V_mockEmergency
TB,N,GisEmergencyCallbackModeEnabled,V_emergencyCallbackModeEnabled
TB,N,GisEnabled,V_enabled
TB,N,GisEndpointOnCurrentDevice,V_endpointOnCurrentDevice
TB,N,GisEndpointOnCurrentDevice,V_mockEndpointOnCurrentDevice
TB,N,GisExpectedEndpointOnMessagingDevice
TB,N,GisFailureExpected
TB,N,GisFailureExpected,V_failureExpected
TB,N,GisFailureExpected,V_mockFailureExpected
TB,N,GisFromStorage,V_fromStorage
TB,N,GisGFTDowngradeToOneToOneAvailable,V_gftDowngradeToOneToOneAvailable
TB,N,GisGuest
TB,N,GisGuestModeEnabled,V_guestModeEnabled
TB,N,GisHardPause,V_hardPause
TB,N,GisHeld,V_held
TB,N,GisHost,V_host
TB,N,GisHostedOnCurrentDevice,V_mockHostedOnCurrentDevice
TB,N,GisIMDaemonConnected,V_IMDaemonConnected
TB,N,GisInitiator,V_initiator
TB,N,GisInputFrequencyMeteringEnabled
TB,N,GisInterfaceOrientationPortrait,V_interfaceOrientationPortrait
TB,N,GisJoined,V_joined
TB,N,GisKnownCaller,V_mockKnownCaller
TB,N,GisLightweight,V_lightweight
TB,N,GisLocalAccountHandle,V_localAccountHandle
TB,N,GisLocalClientActive,V_localClientActive
TB,N,GisMicrophoneMuted
TB,N,GisMirageAvailable,V_mirageAvailable
TB,N,GisMomentsAvailable
TB,N,GisMomentsAvailable,V_momentsAvailable
TB,N,GisMuted
TB,N,GisMuted,V_muted
TB,N,GisOnEmergencyCall,V_onEmergencyCall
TB,N,GisOneToOneModeEnabled
TB,N,GisOneToOneModeEnabled,V_oneToOneModeEnabled
TB,N,GisOutgoing
TB,N,GisOutgoing,V_outgoing
TB,N,GisOutputFrequencyMeteringEnabled
TB,N,GisPTT,V_mockPTT
TB,N,GisPreparedToStop,V_preparedToStop
TB,N,GisProximitySensorCovered,V_proximitySensorCovered
TB,N,GisRelaying
TB,N,GisRelaying,V_relaying
TB,N,GisRemoteAudioEnabled,V_remoteAudioEnabled
TB,N,GisRemoteMomentsAvailable
TB,N,GisRemoteMomentsAvailable,V_remoteMomentsAvailable
TB,N,GisRemoteUplinkMuted
TB,N,GisRemoteUplinkMuted,V_remoteUplinkMuted
TB,N,GisRemoteVideoEnabled,V_remoteVideoEnabled
TB,N,GisRemoteVideoPaused,V_remoteVideoPaused
TB,N,GisSOS,SsetSOS:
TB,N,GisSOS,SsetSOS:,V_mockSOS
TB,N,GisSOS,SsetSOS:,V_sos
TB,N,GisScreenEnabled,V_screenEnabled
TB,N,GisSendingAudio
TB,N,GisSendingAudioData
TB,N,GisSendingVideo
TB,N,GisSharingScreen,V_mockSharingScreen
TB,N,GisSynchronous,V_synchronous
TB,N,GisThirdPartyVideo,V_mockIsThirdPartyVideo
TB,N,GisUPlusNDowngradeAvailable,V_uPlusNDowngradeAvailable
TB,N,GisUPlusOneScreenShareAvailable,V_uPlusOneScrenShareAvailable
TB,N,GisUnderlyingUplinkMuted,V_underlyingUplinkMuted
TB,N,GisUpgrade,V_upgrade
TB,N,GisUplinkMuted
TB,N,GisUplinkMuted,SsetUplinkMuted:,V_mockUplinkMuted
TB,N,GisUplinkMuted,V_uplinkMuted
TB,N,GisUsingBaseband,V_mockUsingBaseband
TB,N,GisUsingBaseband,V_usingBaseband
TB,N,GisVideo
TB,N,GisVideo,V_mockIsVideo
TB,N,GisVideo,V_video
TB,N,GisVideoEnabled
TB,N,GisVideoEnabled,V_videoEnabled
TB,N,GisVideoPaused
TB,N,GisVideoPaused,V_mockIsVideoPaused
TB,N,GisVideoPaused,V_videoPaused
TB,N,GisVoLTECallingAvailable,V_voLTECallingAvailable
TB,N,GisVoicemail
TB,N,GisVoicemail,V_mockVoicemail
TB,N,GisVoicemail,V_voicemail
TB,N,GisWiFiAllowed
TB,N,GisWiFiCallingAvailable,V_wiFiCallingAvailable
TB,N,GisWiFiEmergencyCallingAllowed,V_wiFiEmergencyCallingAllowed
TB,N,GisWiFiEmergencyCallingAvailable,V_wiFiEmergencyCallingAvailable
TB,N,GisWindowed
TB,N,GneedsManualInCallSounds,V_mockNeedsManualInCallSounds
TB,N,GprefersExclusiveAccessToCellularNetwork,V_mockPrefersExclusiveAccessToCellularNetwork
TB,N,GshouldSuppressInCallUI,V_mockShouldSuppressInCallUI
TB,N,GsupportsTTYWithVoice,V_mockSupportsTTYWithVoice
TB,N,GuplinkWasExplicitlyMuted,V_mockUplinkWasExplicitlyMuted
TB,N,V_addCallAllowed
TB,N,V_avcSessionInProgress
TB,N,V_cannotRelayAudioOrVideo
TB,N,V_capturingLocalVideo
TB,N,V_deferCommittingTransactions
TB,N,V_endAndAnswerAllowed
TB,N,V_faceTimeAudioAvailable
TB,N,V_faceTimeIDStatusRefreshed
TB,N,V_faceTimeVideoAvailable
TB,N,V_forceExpanseEnabled
TB,N,V_guestModeEnabled
TB,N,V_hardPauseAvailable
TB,N,V_hasAudioFinished
TB,N,V_hasAudioInterruption
TB,N,V_hasBeenUnlocked
TB,N,V_hasCalledStop
TB,N,V_hasCleanedUp
TB,N,V_hasConnected
TB,N,V_hasReceivedAccept
TB,N,V_hasReceivedFirstRemoteFrame
TB,N,V_hasReceivedLetMeInRequest
TB,N,V_hasSentInvitation
TB,N,V_hasStarted
TB,N,V_hasStartedConnecting
TB,N,V_holdAllowed
TB,N,V_holdAndAnswerAllowed
TB,N,V_ignoreLMIRequests
TB,N,V_isActivated
TB,N,V_isGFTDowngradeToOneToOneAvailable
TB,N,V_isGondolaCallingAvailable
TB,N,V_isKnownCaller
TB,N,V_isLetMeInApproved
TB,N,V_isLightweight
TB,N,V_isMirageAvailable
TB,N,V_isMomentsAvailable
TB,N,V_isSendingAudio
TB,N,V_isSystemActivity
TB,N,V_isUPlusNDowngradeAvailable
TB,N,V_isUPlusOneScreenSharingAvailable
TB,N,V_joinedFromLink
TB,N,V_locallyCreated
TB,N,V_mayRequireBreakBeforeMake
TB,N,V_mergeable
TB,N,V_mockSupportsEmergencyFallback
TB,N,V_needsManualInCallSounds
TB,N,V_oBSOLETEProtoMomentsAvailable
TB,N,V_protoCannotBeAnswered
TB,N,V_protoCannotRelayAudioOrVideoOnPairedDevice
TB,N,V_protoConferenced
TB,N,V_protoCurrentlyPicked
TB,N,V_protoEmergency
TB,N,V_protoExpectedEndpointOnMessagingDevice
TB,N,V_protoFailureExpected
TB,N,V_protoGuest
TB,N,V_protoHasSentInvitation
TB,N,V_protoMomentsV2Available
TB,N,V_protoNeedsManualInCallSounds
TB,N,V_protoOutgoing
TB,N,V_protoRemoteUplinkMuted
TB,N,V_protoSenderMuteUplink
TB,N,V_protoShouldSuppressInCallUI
TB,N,V_protoShouldSuppressRingtone
TB,N,V_protoSupportsEmergencyFallback
TB,N,V_protoSupportsRelay
TB,N,V_protoSupportsTTYWithVoice
TB,N,V_protoUplinkMuted
TB,N,V_protoVideo
TB,N,V_protoVoicemail
TB,N,V_protoWantsHoldMusic
TB,N,V_protoWantsVideo
TB,N,V_receivedSuccessfulDidStart
TB,N,V_representsTransitionFromPending
TB,N,V_sendToVoicemailAllowed
TB,N,V_sendingVideo
TB,N,V_shouldAcceptDateConnectedProviderUpdates
TB,N,V_shouldAssociateScene
TB,N,V_shouldStartAudioPaused
TB,N,V_shouldStartVideoPaused
TB,N,V_shouldSuppressInCallUI
TB,N,V_supportsAddCall
TB,N,V_supportsAudioAndVideo
TB,N,V_supportsAudioOnly
TB,N,V_supportsDTMF
TB,N,V_supportsEmergency
TB,N,V_supportsEmergencyFallback
TB,N,V_supportsGrouping
TB,N,V_supportsHolding
TB,N,V_supportsLeaveContext
TB,N,V_supportsMessagesGroupProviding
TB,N,V_supportsRecents
TB,N,V_supportsSendingToVoicemail
TB,N,V_supportsTTYWithVoice
TB,N,V_supportsUnambiguousMultiPartyState
TB,N,V_supportsUngrouping
TB,N,V_supportsVoicemail
TB,N,V_swappable
TB,N,V_takingCallsPrivateAllowed
TB,N,V_telephonyCapableDeviceExists
TB,N,V_thumperCallingAllowedOnDefaultPairedDeviceDefault
TB,N,V_video
TB,N,V_videoEnabled
TB,N,V_wantsStagingArea
TB,R
TB,R,N
TB,R,N,Gcsd_isTelephony
TB,R,N,Gcsd_isThumper
TB,R,N,Gcsd_isUnknown
TB,R,N,GisAVLess
TB,R,N,GisAVLess,V_avLess
TB,R,N,GisAirTunesRouteAvailable
TB,R,N,GisAnyBluetoothHeadphoneRouteAvailableForAnyCall
TB,R,N,GisAnyVehicleRouteAvailableForAnyCall
TB,R,N,GisAudioAccessoryDevice
TB,R,N,GisAudioReady
TB,R,N,GisAutomaticUpgradingEnabled
TB,R,N,GisBluetoothRouteAvailable
TB,R,N,GisCaptioningEnable,V_captioningEnabled
TB,R,N,GisCarAudioRouteAvailable
TB,R,N,GisCarModeActive
TB,R,N,GisCellularDataAllowed
TB,R,N,GisConnected
TB,R,N,GisCovered
TB,R,N,GisDeviceInAltMode
TB,R,N,GisDevicePasscodeLocked
TB,R,N,GisDeviceSupported
TB,R,N,GisEligibleForCall
TB,R,N,GisEligibleRouteAvailable
TB,R,N,GisEmergencyCallbackModeEnabled
TB,R,N,GisEmergencyCallbackPossible
TB,R,N,GisEnabled
TB,R,N,GisExpanseConduitProxyEnabled
TB,R,N,GisExpanseProvider,V_expanseProvider
TB,R,N,GisFaceTimeAudioAvailable
TB,R,N,GisFaceTimePhotosAvailable
TB,R,N,GisFaceTimeVideoAvailable
TB,R,N,GisGFTDowngradeToOneToOneAvailable
TB,R,N,GisGuestModeSupported
TB,R,N,GisInEarAudioRouteAvailable
TB,R,N,GisLoaded
TB,R,N,GisLocallyCreated,V_locallyCreated
TB,R,N,GisMirageEnabled
TB,R,N,GisModernGFTEnabled
TB,R,N,GisMomentsAvailable
TB,R,N,GisMomentsDisabled
TB,R,N,GisOneToOneHandoffOngoing
TB,R,N,GisOneToOneModeEnabled,V_oneToOneModeEnabled
TB,R,N,GisOutgoing
TB,R,N,GisOutgoing,V_outgoing
TB,R,N,GisPairedDevice
TB,R,N,GisProcessSuspended
TB,R,N,GisProximitySensorEnabled
TB,R,N,GisQuickRelaySupported
TB,R,N,GisReceiverRouteAvailable
TB,R,N,GisRegionBlocked
TB,R,N,GisRelayCallingGuaranteed
TB,R,N,GisRemote
TB,R,N,GisRemoteMomentsAvailable
TB,R,N,GisRemoteVideoPaused
TB,R,N,GisScreenEnabled
TB,R,N,GisScreenSharingAvailable
TB,R,N,GisSharePlayAvailable
TB,R,N,GisSharePlayVersionCheckEnabled
TB,R,N,GisSignedIntoiCloud
TB,R,N,GisUPlusNDowngradeAvailable
TB,R,N,GisVideo,V_video
TB,R,N,GisWiFiAllowed
TB,R,N,GisWiFiAvailable
TB,R,N,GisWirelessHeadsetRouteAvailable
TB,R,N,V_applicationShouldPostIncomingCall
TB,R,N,V_ignoresBluetoothDeviceUID
TB,R,N,V_isLightweightMember
TB,R,N,V_isOneToOneModeEnabled
TB,R,N,V_mediaPlaybackOnExternalDevice
TB,R,N,V_mixesVoiceWithMedia
TB,R,N,V_shouldOverrideNetworkAsAvailable
TB,R,N,V_shouldUseIDSDemuxer
TB,R,N,V_supportsLinks
TB,R,N,V_supportsSharePlay
TB,R,N,V_supportsVideo
TC,N
TC,N,V_captureCapabilities
TC,R,N
TI,N
TI,N,V_ambiguityState
TI,N,V_disconnectedReason
TI,N,V_generatorVersion
TI,N,V_hardPauseState
TI,N,V_maximumCallGroups
TI,N,V_notificationStyles
TI,N,V_options
TI,N,V_preferredBroadcastingAttributes
TI,N,V_protoDisconnectedReason
TI,N,V_protoOriginatingUIType
TI,N,V_protoPriority
TI,N,V_protoProtocolVersion
TI,N,V_protoService
TI,N,V_protoSoundRegion
TI,N,V_protoStatus
TI,N,V_protoTTYType
TI,N,V_remoteVideoPresentationState
TI,N,V_version
TI,R,N
TQ,N,GinitialLinkType,V_mockInitialLinkType
TQ,N,V_audioVideoMode
TQ,N,V_avMode
TQ,N,V_countOfNotificationsReceived
TQ,N,V_generateDescriptorVersionSum
TQ,N,V_identifier
TQ,N,V_initialLinkType
TQ,N,V_kickMemberRetryCount
TQ,N,V_leaveReason
TQ,N,V_lightweightPrimaryParticipantID
TQ,N,V_lightweightRetryCount
TQ,N,V_localParticipantIdentifier
TQ,N,V_primaryIdentifier
TQ,N,V_retryCount
TQ,R
TQ,R,N
TQ,R,N,V_identifier
TQ,R,N,V_initialLinkType
TS,N,V_localParticipantType
TTRBannerEnabled
Td,N
Td,N,GcallDuration,V_mockCallDuration
Td,N,V_closeConnectionTimeout
Td,N,V_connectionTimeout
Td,N,V_creationDateEpochTime
Td,N,V_hostCallCreationTime
Td,N,V_messageSendTime
Td,N,V_prepareToStopTimeout
Td,N,V_protoTimeConnected
Td,N,V_pseudonymExpirationDateEpochTime
Td,N,V_timeout
Td,N,V_timestampAsTimeIntervalSinceReferenceDate
Td,N,V_twoTimeCallthroughInterval
Td,N,V_updatedDateEpochTime
Td,N,V_upgradeTimeout
Td,N,V_uplinkMutedSetTime
Td,R,N
Tf,N,V_systemVolume
Ti,N
Ti,N,GcallRelaySupport,V_mockCallRelaySupport
Ti,N,GcallStatus,V_mockCallStatus
Ti,N,GdisconnectedReason,V_mockDisconnectedReason
Ti,N,Gservice,V_mockService
Ti,N,Gsubtype,V_mockSubtype
Ti,N,GttyType,V_mockTTYType
Ti,N,V_avMode
Ti,N,V_availability
Ti,N,V_callStatus
Ti,N,V_clientsShouldConnectToken
Ti,N,V_deviceType
Ti,N,V_enclosedEncryptedType
Ti,N,V_endedReason
Ti,N,V_handleType
Ti,N,V_leaveReason
Ti,N,V_linkLifetimeScope
Ti,N,V_lockStateNotificationToken
Ti,N,V_originatingUIType
Ti,N,V_proximityDetectionMode
Ti,N,V_receivedMessageType
Ti,N,V_requestActionType
Ti,N,V_requestBlobRecoveryOptions
Ti,N,V_requestCLTMThrottleUncapToken
Ti,N,V_state
Ti,N,V_ttyType
Ti,N,V_type
Ti,N,V_validationSource
Ti,R,N
Ti,R,N,V_originatingUIType
Ti,R,N,V_type
Tq,D,N
Tq,N
Tq,N,GaudioInterruptionProviderType,V_mockAudioInterruptionProviderType
Tq,N,GbytesOfDataUsed,V_mockBytesOfDataUsed
Tq,N,GjunkConfidence,V_mockJunkConfidence
Tq,N,GproviderErrorCode,V_mockProviderErrorCode
Tq,N,GvideoStreamToken,V_mockVideoStreamToken
Tq,N,SsetTURouteDeviceType:
Tq,N,V_audioPriority
Tq,N,V_availableDeviceSlots
Tq,N,V_bluetoothAudioFormat
Tq,N,V_bytesOfDataUsed
Tq,N,V_callID
Tq,N,V_captionsToken
Tq,N,V_currentOrientation
Tq,N,V_endedReason
Tq,N,V_identificationCategory
Tq,N,V_inCallServiceProcessState
Tq,N,V_junkConfidence
Tq,N,V_letMeInRequestState
Tq,N,V_screenToken
Tq,N,V_state
Tq,N,V_streamToken
Tq,N,V_transmissionMode
Tq,N,V_transmissionState
Tq,N,V_videoPriority
Tq,R,N
Tq,R,N,V_streamToken
Tq,R,N,V_transportType
T{CGRect={CGPoint=dd}{CGSize=dd}},N
T{CGSize=dd},N
T{CGSize=dd},N,V_localLandscapeAspectRatio
T{CGSize=dd},N,V_localPortraitAspectRatio
T{CGSize=dd},N,V_remoteVideoPresentationSize
T{os_unfair_lock_s=I},R,N,V_accessorLock
UIBackgroundModes
URIWithPrefixedURI:
URIWithUnprefixedURI:
URLByAppendingPathComponent:
URLByAppendingPathComponent:isDirectory:
URLByAppendingPathExtension:
URLByDeletingLastPathComponent
URLByStandardizingPath
URLForDirectory:inDomain:appropriateForURL:create:error:
URLForResource:withExtension:
URLWithString:
UTF8String
UUID
UUIDString
_FTCopyGzippedData
_FTDecompressData
_FTOptionallyDecompressData
_IMDaemonConnected
_ISOCountryCodeForCall:
_ISOCountryCodeForCallWithUUID:provider:callUpdate:
_URL
_UUID
__imArrayByApplyingBlock:
__imHexString
__imSetFromArray
__swift_objectForKeyedSubscript:
__swift_setObject:forKeyedSubscript:
_accelerometer
_acceptInvitationWithData:alwaysSendData:
_acceptPayloadData
_accessorLock
_account
_accountController
_accountID
_accountStore
_accountUUIDString
_accounts
_accountsController
_accountsMatchForSecondaryCalling
_actionDescription
_actionRequiresReasonableUserIntent:
_activeCallID
_activeIDSDestination
_activeLightweightParticipantDestinationsByIdentifier
_activeLightweightParticipants
_activeLightweightParticipantsByIdentifier
_activeLocalHandles
_activeLocalHandlesForProvider
_activeParticipantDestinationsByIdentifier
_activeParticipants
_activeRemoteParticipant
_activeRemoteParticipants
_activeRemoteParticipantsByIdentifier
_activity
_activityAuthorizationManager
_activityCommunicator
_activityContext
_activityIdentifier
_activityMetadata
_activityQueue
_activitySession
_activitySessionManager
_activitySessions
_addCallToCallHistory:
_addParticipantsWaitingToBeAddedToAVCSession
_addPendingCallToCallHistory:
_addRemoteParticipantToAVCSessionIfPossible:
_addSupplementalActionsForRequestedTransaction:onCallSource:
_addedMembers
_allCalls
_allowMember:
_allowRevertingStateForCompletedTransactionGroup:
_allowedSecondaryDeviceIDs
_allowsScreenSharingBlock
_answerHostedCall:completionHandler:
_answerIncomingCall:withBehavior:
_answerIncomingCallAsConversation:
_anyRoutePassesTest:
_appHasOngoingCall:
_appearsToBeDSID
_applicationContext
_applicationMonitor
_applicationPolicyManager
_applicationShouldPostIncomingCall
_applicationStateMonitor
_apsConnectionForEnvironment:
_assertion
_associatedPseudonym
_association
_associationVoucher
_asynchronousExportedObjectProxy
_audioArbitrationController
_audioController
_audioDisabled
_audioEnabled
_audioMutedForHoldMusic
_audioPaused
_audioPriority
_audioReady
_audioRouteCollectionForCall:
_audioRouteCollections
_audioRoutePolicyManager
_audioRouteUniqueIdentifier
_audioRoutesByParticipantIdentifier
_audioSessionActive
_automaticCarDNDStatus
_availability
_availableDeviceSlots
_availableOutgoingRelayCallerIDs
_avcData
_avcIdentifier
_avcScreenCapture
_avcSession
_avcSessionCreationBlock
_avcSessionInProgress
_avcSessionParticipantCreationBlock
_backingCallSource
_baseDestinationID
_beginListeningBlock
_beginTimeoutForLeavingConversationWithReason:
_behaviorResolutionService
_bestAppSuggestionManager
_block
_blockToExecuteAfterPendingCoalescingBlocksByIdentifier
_blocksPendingTransportAvailability
_bluetoothAudioFormat
_broadcastActivity:withTimeout:shouldPrioritize:
_bundleIdentifier
_bundleIdentifierForCall:
_bundleIdentifierToApplicationState
_bundleIdentifierToVoIPApplication
_bundleURLString
_bytesOfDataUsed
_cachedCallUUIDsToConversationAVMode
_cachedCalls
_cachedChats
_call
_callCenter
_callCenterObserver
_callControllerHost
_callDirectoryExtensionIdentifier
_callDirectoryLabel
_callDirectoryLocalizedExtensionContainingAppName
_callDirectoryManager
_callDirectoryPhoneNumberVariantsForSourceAddress:countryCode:
_callDirectorySanitizer
_callDirectoryStore
_callDurationLimitTimer
_callDurationUpdateTimer
_callFilterBlock
_callFilterController
_callFilterIdentifier
_callGroupUUID
_callGroupsWithBackingCallSource:
_callHistoryChanged:
_callHistoryController
_callHistoryManager
_callHistoryManagerXPCServer
_callHistoryTransactionObjectWithIdentifier:
_callInfoBlob
_callProviderManager
_callProviderManagerXPCServer
_callSourceFetcher
_callSourceManager
_callStateContext
_callStateController
_callStateMonitor
_callStatus
_callUUIDsByConversationUUID
_callUUIDsUpgradedForAVMode
_callWithUUID:
_callWithUUID:backingCallSource:
_callWithUUID:controllableByCallSource:
_callerID
_callerNameFromNetwork
_callsWithUniqueProxyIdentifiers:
_canAddCallToCallHistory:
_cancelInFlightAVCBlobRecoveryIfNecessary
_cancelInvitationWithData:reason:alwaysSendData:
_cancelTimeoutForLeavingConversation
_cannotRelayAudioOrVideo
_capabilities
_capabilitiesValid
_captioningEnabled
_captionsToken
_captureCapabilities
_captureSessionCreationBlock
_captureSessionQueue
_capturingLocalVideo
_carModeActive
_carPlayDeviceConnected
_carrierPhoneNumbers
_category
_chManager
_chatsPendingUpgrade
_checkIfDevicesShouldBeUnenrolled
_cleanCallMediaCache
_cleanUpAllConferenceConnectionsForConference:withError:
_cleanUpConferenceConnection:error:
_cleanUpFromAVCSessionFailure
_clientFileURLByIdentifier
_clientInvalidationHandler
_clientManager
_clientMessagingDelegate
_clientUUID
_clientsByObject
_clientsShouldConnectToken
_closeConnectionTimeout
_cloudCallingDevices
_collaborationIdentifier
_commitUncommittedTransactions
_commonMessagingDelegate
_companyName
_completedDescription
_completion
_completionHandler
_conduit
_conduitXPCServer
_conference
_conferenceConnections
_conferenceConnectionsForConference:
_conferenceCreationBlock
_conferenceProvider
_conferenceProviderCreationBlock
_conferenceTransport:didStopForCall:cleanly:error:
_conferencesAwaitingConnectionClose
_configuration
_connectionEndedHandlerForXPCClient:withCustomBlock:
_connectionTimeout
_contactIdentifier
_contactIdentifiers
_contactLabel
_contactName
_contextDictionaryWithCall:
_contextIdentifier
_conversationCreationBlock
_conversationGroupUUID
_conversationGroupUUIDString
_conversationManager
_conversationManagerHost
_conversationManagerXPCServer
_conversationMessageBytes
_conversationNoticeManger
_conversationProviderForCall:
_conversationProviderManager
_conversationProviderManagerXPCServer
_conversationUUIDs
_conversationUUIDsAwaitingActiveAudioSession
_conversationUUIDsByCallUUID
_conversationUUIDsUpgradedFromAVLess
_conversationUUIDsWaitingForRemoteJoin
_coreTelephonyClient
_countOfNotificationsReceived
_covered
_coveredNotifyObserver
_cpApplicationController
_cpBiomeStreamDonator
_createAPSConnectionForEnvironment:namedDelegatePort:
_createDelayedActionListIfNecessary:
_createSessionToAllDevicesSupportingProvider:
_createSessionToDestinations:
_createSessionToDevices:
_creationDateEpochTime
_csCallingAvailable
_currentDescriptor
_currentOrientation
_currentParticipantPresentationContexts
_currentlyBroadcastedActivity
_currentlyTrackedA2DPRouteIdentifier
_data
_dataSource
_dataSourceToIdentifierToCalls
_dateConnected
_dateCreated
_dateEnded
_dateReceivedFirstRemoteFrame
_dateStartedConnecting
_dateStartedOutgoing
_declineInvitationWithData:alwaysSendData:
_defaultOverrideForDisableDefault:forceDefault:
_defaultPairedDevice
_deferCommittingTransactions
_deferCommittingTransactionsUntilAfterRunningBlock:
_delayedActionsByCallUUID
_delegate
_delegateController
_delegateQueue
_delegateToQueue
_deliverMessageContext:
_deliverPendingNetworkExtensionPayloadsToApplication
_deliverPendingPushKitPayloadsToApplication
_deliverVoIPTokenToApplication
_destination
_destinationID
_destroySession:
_developmentConnection
_deviceExistsThatSupportsRelayCallingWithoutLocalRelayCallingEnabled
_deviceLockObserver
_deviceLockStateObserver
_deviceSupport
_deviceType
_devices
_dial:displayContext:completion:
_dialRequest
_dialingIDSDevice
_didPrepareHandler
_didStartHandler
_disconnectOrPullExistingCallsForCallIfNecessary:
_disconnectedReason
_displaySharePlayUnableToStartWithMessage:
_dndAllowsCall
_doNotDisturbAllowsCallFromSourceAddress:providerIdentifier:
_donateUserIntentForProviderWithIdentifier:
_downgradeToOneToOneAfterDelayBlock
_dtmfSoundPlayer
_dummyPayload
_dynamicDisplayContext
_dynamicIdentifier
_emergency
_emergencyCallbackCapabilities
_emergencyCallbackModeEnabled
_emergencyHandles
_emergencyLabeledHandles
_emergencyProviderIdentifier
_enabled
_enclosedEncryptedType
_encryptedData
_encryptedMessage
_endAndAnswerAllowed
_endCall:
_endChatWithUUID:withEndedReason:
_endMutuallyExclusiveCalls:
_endProxyCallsForConnectingVideoCall
_endTransactionForObjectAfterCallHistoryDatabaseChanges:
_endedError
_endedReason
_endedReasonForDidStopError:error:
_endpointIDSDestinationURIs
_endpointOnCurrentDevice
_entitledCapabilities
_environment
_errorToAVCProviderEndedReason:defaultProviderReason:
_eventBlock
_expanseProvider
_expectedAudioEnabled
_expectedAudioPaused
_expectedScreenEnabled
_expectedVideoEnabled
_expectedVideoPaused
_exportedInterface
_faceTimeAudioAvailability
_faceTimeAudioAvailable
_faceTimeCallSource
_faceTimeConversationProviderDelegate
_faceTimeDemuxerDelegate
_faceTimeIDSProviderDelegate
_faceTimeIDStatusRefreshed
_faceTimeIMAVProviderDelegate
_faceTimeInviteDemuxer
_faceTimeProviderDelegate
_faceTimeVideoAvailability
_faceTimeVideoAvailable
_facetimeIDSServiceGenerator
_failConversation:failureReason:providerEndedReason:
_failureExpected
_fallbackApplicationName
_fallbackURL
_familyName
_featureFlags
_fetchUserActivityWithUUID:completionHandler:
_fileManager
_fileTransferController
_filter:withClient:
_filters
_findOrCreateApplicationWithBundleIdentifier:
_findPendingConversationWithCallUUID:
_firewallManager
_firstUnlockCallbacks
_forceExpanseEnabled
_fromHandle
_fromStorage
_generateDescriptorInfos
_generateDescriptorVersionSum
_generatorDescriptor
_generatorDescriptors
_generatorID
_generatorVersion
_getActivatedLinkWithHandle:updateGroupUUID:updateInvitedHandles:
_gftDowngradeToOneToOneAvailable
_givenName
_groupFaceTimeServiceProviderDelegate
_groupID
_groupSessionProviderCreationBlock
_groupUUID
_groupUUIDString
_guestModeEnabled
_handleActiveCallStatusChangeForHostedCall:
_handleAudioReadyForCall:
_handleAudioSessionInterruptionNotification:
_handleCSDRelayIDSActiveAccountsChanged:
_handleCSDRelayPairedDeviceConnectedNotification:
_handleCallChanged:
_handleCallConnected:
_handleCallConnectedNotification:
_handleCallDisplayContextChangedNotification:
_handleCallDurationTimerFired
_handleCallHasStartedOutgoingChanged:
_handleCallHistoryChanged
_handleCallIsUsingBasebandChangedNotification:
_handleCallMayRequireBreakBeforeMakeChanged:
_handleCallModelChangedNotification:
_handleCallShouldSuppressRingtoneChangedNotification:
_handleCallStartedConnecting:
_handleCallStartedConnectingNotification:
_handleCallStartedOutgoingNotification:
_handleCallStatusChanged:
_handleCallStatusChangedNotification:
_handleCallWantsHoldMusicChanged:
_handleCallWantsHoldMusicChangedNotification:
_handleCarPlayControlEventNotification:
_handleConferenceConnectionDidClose:
_handleConferenceConnectionDidReceiveData:
_handleConferenceConnectionWillClose:
_handleConnectedCallStatusChangeForHostedCall:
_handleConnectingCallStatusChangeForHostedCall:
_handleDeviceFirstUnlockNotification
_handleDisconnectedCallStatusChangeForHostedCall:
_handleDisconnectedCallStatusChangeForVoicemailCall
_handleFaceTimeAvailabilityChangedNotification:
_handleFailureExpectedChangedNotification:
_handleHardPauseStateChangedNotification:
_handleHeldCallStatusChangeForHostedCall:
_handleInvitationSentNotification:
_handleLockStateChanged
_handleMessagingConnectionEndForCalls:withDisconnectedReason:didStartConnecting:
_handleMixesVoiceWithMediaChangedNotification:
_handleNeedsManualInCallSoundsChangedNotification:
_handlePairedDeviceChangedFrom:to:
_handlePreferredRouteChangedNotification:
_handleReceivedResourcesAtDirectoryURL:
_handleReceivedVideoURL:
_handleRelayCallingChanged
_handleResetCallStateNotification:
_handleRetrievedLocalInviteDictionary:forMessage:
_handleRingingCallStatusChangeForHostedCall:
_handleSendingCallStatusChangeForHostedCall:
_handleSupportsEmergencyFallbackChangedNotification:
_handleTUCallSupportsTTYWithVoiceChangedNotification:
_handleTUCallTTYTypeChangedNotification:
_handleType
_handleUpdateRemoteUplinkMutedChangedNotification:
_handoffActivity
_handoffAudioController
_handoffEligibility
_handoffIdentifiers
_hardPause
_hardPauseAvailable
_hardPauseDigits
_hardwareControlsBroadcaster
_has
_hasAudioFinished
_hasAudioInterruption
_hasBeenUnlocked
_hasBeenUnlockedBlock
_hasCalledStop
_hasCleanedUp
_hasConnected
_hasJoined
_hasReceivedAccept
_hasReceivedFirstRemoteFrame
_hasReceivedLetMeInRequest
_hasSentInvitation
_hasStarted
_hasStartedConnecting
_held
_highlightIdentifier
_holdAllowed
_holdAndAnswerAllowed
_host
_hostCallCreationTime
_hostMessagingDelegate
_identificationCategory
_identifier
_identifierUUIDString
_identifiers
_identifiersForCalls:
_identifiersWaitingForAcknowledgement
_identifiersWithPendingCoalescingBlocks
_idsQueryController
_idsService
_idsSession
_ignoreLMIRequests
_ignoresBluetoothDeviceUID
_imAccountForActionBlock
_image
_imageTranscoder
_imageURL
_inCallServiceProcessObserver
_inCallServiceProcessState
_incomingCallFilter
_incomingChatGenerator
_incomingPendingConversationsByGroupUUID
_incomingSessionProviderGenerator
_incrementKillCountForApplication:
_inflightAVCBlobRecoveryBlocksByIdentifier
_initWithTypeIdentifier:suggestedActionType:options:
_initWithUserActivityType:dynamicActivityType:options:
_initialLinkType
_initializeAudioRouteCollections
_initializeAutomaticCarDNDStatusIfNecessary
_initializeLastKnownCallerID
_initializePairedHostDeviceState
_initiator
_interfaceOrientationObserver
_interfaceOrientationPortrait
_interruptionHandler
_invalidationHandler
_invitation
_invitationPreferences
_invitationResolver
_inviteCompletion
_inviteData
_invitedPushTokens
_isAccountActive
_isActivated
_isAnyAudioDevicePreferred
_isApplicationPreventedFromBeingLaunched:
_isAudioAccessoryDevice
_isCTErrorFatal:
_isEmergencyDialRequest:
_isGFTDowngradeToOneToOneAvailable
_isGondolaCallingAvailable
_isKnownCaller
_isLetMeInApproved
_isLightweight
_isLightweightMember
_isMirageAvailable
_isMomentsAvailable
_isMuted
_isNSErrorFatal:
_isOneToOneModeEnabled
_isScreenSharingAvailable
_isSendingAudioData
_isSendingVideoExpected
_isSystemActivity
_isThumperCallingAllowedForCurrentDeviceUsingSenderIdentityCapabilitiesState:
_isUPlusNDowngradeAvailable
_isUPlusOneScreenSharingAvailable
_isWaitingToJoinForConversationUUID:
_isWatchDevice
_keychainItem
_kickMemberRetryCount
_kickedMembers
_kickedParticipants
_label
_lastRebroadcastTime
_launchApplicationDueToActivityCreation:
_launchApplicationForActivityIfNecessary:
_launchApplicationForActivityIfNecessary:shouldForeground:
_launchApplicationsForActivitiesIfNecessary
_launchApplicationsForActivitiesIfNecessary:
_launchInCallApplicationForAnsweringCallIfNecessary:
_launchInCallApplicationForCall:withURL:
_launchInCallApplicationForExistingCall
_launchInCallApplicationForIncomingCallIfNecessary:
_launchInCallApplicationForOutgoingCallIfNecessary:
_launchInCallApplicationForOutgoingCallOnHostIfNecessary
_launchInCallApplicationForOutgoingConversationIfNecessary:
_leaveConversation:
_leaveReason
_letMeInDelegationHandle
_letMeInDelegationUUID
_letMeInKeyAgreement
_letMeInRequestState
_lightweight
_lightweightMembers
_lightweightPrimary
_lightweightPrimaryParticipantID
_lightweightRetryCount
_link
_linkLifetimeScope
_linkManager
_linkName
_links
_linksEnabled
_listenForActivityType:dynamicIdentifier:
_listeningIdentifiersByActivityType
_localAccountHandle
_localCallerID
_localCallerIDForProvider
_localClientActive
_localInviteDictionary
_localLandscapeAspectRatio
_localLightweightSecondaryMember
_localMember
_localParticipantAssociation
_localParticipantIdentifier
_localParticipantType
_localPortraitAspectRatio
_localProviderForCallSource:
_localProvidersByIdentifier
_localRouteController
_localSenderIdentityAccountUUIDString
_localSenderIdentityUUID
_localSenderIdentityUUIDString
_localThumperAccounts
_localThumperDeviceID
_localizedName
_localizedServiceName
_localizedShortName
_location
_lockStateNotificationToken
_lockStateObserver
_lockdownModeEnabled
_machServiceName
_manager
_mapName
_markReadRecentCallsMatchingHandle:
_maximumCallGroups
_maximumCallsPerCallGroup
_mayRequireBreakBeforeMake
_mediaAssetManager
_mediaBlob
_mediaPlaybackOnExternalDevice
_memberHandlesAwaitingInvitesToLink
_memberIdentifiers
_members
_mergeable
_mergedCallUpdate
_message
_messageProxy
_messageSendTime
_messagesGroupName
_messagesGroupUUID
_messagesGroupUUIDString
_metadata
_middleName
_mirageAvailable
_mirageHandshakeBlobCreationBlock
_mirageHandshakeData
_mixesVoiceWithMedia
_mobileCodesToISOCountryCode
_mockAudioCategory
_mockAudioInterruptionActivationStateObserver
_mockAudioInterruptionProviderType
_mockAudioMode
_mockBackingCallSource
_mockBlocked
_mockBytesOfDataUsed
_mockCallDuration
_mockCallGroupUUID
_mockCallRelaySupport
_mockCallUUID
_mockCallerNameFromNetwork
_mockCompanyName
_mockConferenced
_mockConnected
_mockContactIdentifiers
_mockConversation
_mockDateConnected
_mockDateCreated
_mockDisconnectedReason
_mockDisplayContext
_mockDisplayName
_mockEmergency
_mockEndpointOnCurrentDevice
_mockFailureExpected
_mockHandle
_mockHasBeenRedirected
_mockHasSentInvitation
_mockHasStartedOutgoing
_mockHostedOnCurrentDevice
_mockInitialLinkType
_mockIsThirdPartyVideo
_mockIsVideo
_mockIsVideoPaused
_mockJunkConfidence
_mockKnownCaller
_mockLocalizedLabel
_mockMayRequireBreakBeforeMake
_mockNeedsManualInCallSounds
_mockOutgoing
_mockPTT
_mockPrefersExclusiveAccessToCellularNetwork
_mockProvider
_mockProviderContext
_mockProviderErrorCode
_mockSOS
_mockScreenShareAttributes
_mockService
_mockSharingScreen
_mockShouldSuppressInCallUI
_mockSubtype
_mockSupportsEmergencyFallback
_mockSupportsTTYWithVoice
_mockTTYType
_mockUniqueProxyIdentifier
_mockUplinkMuted
_mockUplinkWasExplicitlyMuted
_mockUsingBaseband
_mockVideoStreamToken
_mockVoicemail
_mode
_momentsAvailable
_momentsClient
_momentsController
_momentsGenerator
_mostRecentBestAppSuggestion
_mostRecentCompletedOneToOneEnabledValue
_mutableChats
_mutableConversationsByUUID
_mutableConversationsRequestingUpgrade
_mutablePendingConversationsByPseudonym
_mutablePseudonymsByCallUUID
_mutablePseudonymsByRequestIdentifiers
_mutableSendDataCallbacksByRequestIdentifiers
_muted
_name
_namePrefix
_nameSuffix
_needsManualInCallSounds
_networkExtensionClient
_networkExtensionClientManager
_networkExtensionMessageHost
_nickname
_nonRingingCallExistsOnThisDevice
_noteAction:onHandle:completionHandle:
_notificationStyles
_notifyCLTMOfIncomingCall
_nsExtensionManager
_numberForKey:
_oBSOLETEConferenceIdentifier
_oBSOLETEProtoMomentsAvailable
_observeSignal:usingHandler:
_observerToQueue
_onEmergencyCall
_oneToOneModeEnabled
_ongoingDescription
_openTransactions
_options
_orientationMonitor
_originalPauseDigitsString
_originatingUIType
_originatorHandle
_otherInvitedHandles
_otherUniqueProxyIdentifiers
_outgoing
_outgoingCallerID
_outgoingChatGenerator
_outgoingPinRequestIdentifier
_outgoingSessionProviderGenerator
_outstandingMessages
_pairedDevice
_pairedDeviceMessenger
_pairedHostDeviceProvidersByIdentifier
_pairedHostDeviceRouteController
_pairedHostDeviceState
_parsePauseDigitsFromDestinationID:
_participantAssociation
_participantDestinationIDs
_participantRefreshBlock
_participantUpdateSanitizer
_pauseDigits
_pauseDigitsQueue
_payload
_pendingAllowedMembers
_pendingCallsToChatUUIDs
_pendingCodesToDevicesForApproval
_pendingCompletions
_pendingConversationCleanupTimer
_pendingConversationParticipantsByIdentifier
_pendingData
_pendingKickedMembersByIdentifier
_pendingMemberHandles
_pendingMembershipTracker
_pendingNetworkExtensionMessageContexts
_pendingPulledCallContexts
_pendingPushKitVoIPMessageContexts
_performBlock:onClients:
_performBlock:onClients:coalescedByIdentifier:
_performDelegateCallback:
_performRequestedTransaction:onCallSource:
_persistenceController
_phoneticRepresentation
_photoRequestDurations
_photoRequestFailureCount
_photoRequestSuccessCount
_pidToProcessHandle
_pidToProviderIdentifiers
_pinExchangeDelegate
_postClientNotificationName:forCall:userInfo:
_postDidCloseNotificationForConference:
_postDidCloseNotificationForConferenceIfNecessary:
_postNotificationName:
_powerAssertionManager
_preferences
_preferredBroadcastingAttributes
_prepareConferenceForConferenceConnection:remoteInviteDictionary:
_prepareToStopTimeout
_primaryAvcIdentifier
_primaryDeviceID
_primaryHandle
_primaryIdentifier
_primaryThumperAccountRequiringAvailableDeviceSlots
_primaryThumperAccountRequiringMatchingCallerID
_primaryThumperAccountRequiringMatchingCallerID:requiringAvailableDeviceSlots:
_prioritizedSenderIdentities
_privateKey
_processAssertion
_processAssertionManager
_processAssertions
_processBundleIdentifier
_processCompletedCallAction:forCall:allowRevertingState:
_processDelayedActionList:provider:
_processHandle
_processIdentifier
_processName
_processObserver
_processRequestedTransaction:fromCallSource:completion:
_productionConnection
_protoCallCapabilitiesState
_protoCallModelState
_protoCalls
_protoCannotBeAnswered
_protoCannotRelayAudioOrVideoOnPairedDevice
_protoConferenced
_protoCurrentlyPicked
_protoDTMFKey
_protoDisconnectedReason
_protoDisplayContext
_protoExpectedEndpointOnMessagingDevice
_protoFailureExpected
_protoGuest
_protoHasSentInvitation
_protoMomentsV2Available
_protoNeedsManualInCallSounds
_protoOriginatingUIType
_protoOutgoing
_protoPersonNameComponents
_protoPriority
_protoProtocolVersion
_protoProvider
_protoRemoteUplinkMuted
_protoSOS
_protoSenderMuteUplink
_protoService
_protoShouldSuppressInCallUI
_protoShouldSuppressRingtone
_protoSoundRegion
_protoStatus
_protoSupportedHandleTypes
_protoSupportsRelay
_protoSupportsTTYWithVoice
_protoTTYType
_protoTimeConnected
_protoUUID
_protoUpgradeSessionUUID
_protoUplinkMuted
_protoVideo
_protoWantsHoldMusic
_protoWantsVideo
_provider
_providerCallDataSource
_providerCallDelegate
_providerDidBegin
_providerDisplayMonitor
_providerForCallSource:
_providerIdentifier
_providerIdentifierToProvider
_providerIdentifiersForExistingCalls
_providerManager
_providers
_providersByIdentifier
_providersByIdentifierByFilteringForRemoteClientsFromProvidersByIdentifier:
_providersForPreferenceKey:
_proximityChangeHandler
_proximityController
_proximityDetectionMode
_proximitySensorCovered
_proximitySensorObserver
_pruneRemoteParticipantsIfNecessary
_pruneUninstalledAppPushTopics
_pruneUninstalledAppPushTopicsForConnection:
_pseudonym
_pseudonymExpirationDateEpochTime
_pseudonymFeatureID
_pseudonyms
_publicKey
_pushCallToAlternateDestinationIfNecessary:
_pushKitClient
_pushKitClientManager
_queue
_raiseToAnswerController
_raiseToEarGestureHandler
_raiseToEarGestureManager
_rebroadcastTimeThreshold
_receivedInvitationAccept
_receivedMessageType
_receivedSuccessfulDidStart
_recentlyDeletedCallUUIDsByConversationUUID
_recentlyLeftParticipantIdentifiers
_recentsController
_refreshFaceTimeIDSStatusIfNecessary
_refreshHasBeenUnlocked
_registerCallBackgroundedEvent
_registerCallForegroundedEventForCall:
_registerCallStopEvent
_registerEventWithContext:status:
_registerForPushTokenWithType:client:
_registerNetworkExtensionApplicationWithBundleIdentifier:client:
_registerPluginsIfNecessary
_registerPushApplicationWithBundleIdentifier:client:environment:pushType:
_registerUserActivityType:dynamicActivityType:
_rejectedMembers
_relayCallDataSource
_relayCallDelegate
_relayCallWithUUID:
_relayCallingDisabledForDeviceIDDefault
_relayCallingEnabledDefault
_relayCapableDeviceExists
_relayClientController
_relayClientTransport
_relayCommonController
_relayDelegate
_relayHostController
_relayInvitationTimeoutForTimeout:
_relayMessagingController
_relayService
_relaying
_remoteAudioEnabled
_remoteDestination
_remoteDevice
_remoteFromID
_remoteInviteDictionary
_remoteMemberHandles
_remoteMembers
_remoteMomentsAvailable
_remoteObjectInterface
_remoteParticipantHandles
_remoteProtocolVersionNumber
_remoteUplinkMuted
_remoteUplinkMutedSetTime
_remoteVideoEnabled
_remoteVideoPaused
_remoteVideoPresentationSize
_remoteVideoPresentationState
_removeAllApplicationsFromKillCountsDictionary
_removeApplicationFromKillCountsDictionary:
_removePendingConversationWithPseudonym:
_removeTopic:fromConnection:
_reportConversationFailedWithProviderEndedReason:
_reportData
_reporters
_reportingController
_reportingHierarchySubToken
_reportingHierarchyToken
_reportingSessionByStreamToken
_representsTransitionFromPending
_requestAVCBlobsIfNecessary
_requestActionType
_requestBlobRecoveryOptions
_requestCLTMThrottleUncapToken
_requestCallStateFromHost
_requestPendingInvites
_requestStartDateByTransactionID
_requestTimeoutBlockByTransactionID
_requiredConnectionCapability
_requiresInviteDictionary
_resetCache
_resolvedDescriptor
_resolver
_retryCount
_retryReliableMessageWithIdentifierIfNecessary:message:timeout:maximumRetryAttempts:
_ringingTimerForCallWithIdentifier:
_ringtoneSoundURLString
_ringtonesSandboxExtensionDirectory
_route
_routeController
_routeManager
_routePassingTest:
_runCallbackIfNecessaryForMessage:
_sKEBlob
_saveLastKnownFaceTimeCallerID
_saveLivePhotoWithPhotoURL:videoURL:completion:
_savePairedHostDeviceState
_saveProviders:forPreferenceKey:
_saveVideoWithURL:completion:
_sceneAssociationBehavior
_screenCaptureQueue
_screenEnabled
_screenShareAttributes
_screenSharingActivityManager
_screenToken
_secondaryThumperAccounts
_sendDTMFDigits:type:
_sendDataBlock
_sendDelegateBytesOfDataUsageChanged:
_sendDelegateConnectionClosed
_sendDelegateEndedWithReason:error:
_sendDelegateFinishedPreparing
_sendDelegateInputFrequencyLevelChanged:
_sendDelegateMutedChanged
_sendDelegateOutputFrequencyLevelChanged:
_sendDelegateOutputLevelChanged:
_sendDelegateReceivedData:forCallID:
_sendDelegateReceivedFirstRemoteFrame
_sendDelegateRemoteMediaStalled:
_sendDelegateRemoteVideoPaused
_sendDelegateSendingAudioChanged
_sendDelegateStarted
_sendDelegationMessageTo:conversation:link:transactionUUID:forMember:withMessage:
_sendInvitationWithData:declineOnError:alwaysSendData:
_sendMessage:andCancelInvitationIfNecessaryForSession:
_sendMessage:andDeclineInvitationIfNecessaryForSession:
_sendMessageOptionsWithTimeout:wantsAcknowledgement:
_sendToVoicemailAllowed
_senderCorrelationIdentifier
_senderIdentityCapabilitiesStateByUUID
_senderIdentityCapabilitiesStateForSubscription:
_sendingVideo
_sendingVideoExpected
_serialQueue
_serverBag
_serverProvidedLightweightParticipantIdentifiers
_serverProvidedParticipantIdentifiers
_service
_service:account:incomingData:fromID:context:attemptCount:
_serviceProviders
_session
_sessionApprovalClient
_sessionMessenger
_sessionProvider
_sessionUpdateCompletionQueue
_sessions
_sessionsByToken
_setAllCallsToHeldExceptCall:
_setContentType:
_setContentUserAction:
_setDateEndedIfNecessary
_setEnabledTopics:
_setEndedWithReason:error:
_setIsOnHold:
_setLocalAspectRatiosForVideoAspectRatioDescriptor:
_setQueue:
_setRelayCallingEnabled:
_setRelayCallingEnabled:forDeviceWithID:
_setRelayCallingEnabledDefault:forDeviceWithID:
_setRoutesFromRouteDictionaries:
_setSubtitle:
_setThumperCallingAllowed:onSecondaryDeviceWithID:forSenderIdentityWithUUID:
_setThumperCallingAllowedOnDefaultPairedDevice:forSenderIdentityWithUUID:
_setThumperCallingEnabled:forSenderIdentityWithUUID:
_setUpBreakBeforeMakeTimeout
_setUpBreakBeforeMakeTimeoutIfNecessaryForCall:
_setUpCallDurationLimitIfNecessary
_setUpDidStartTimeout
_setUpLanguageChangeListener
_setUpSandbox
_setUpTemporaryDirectory
_setVoLTECallingEnabled:forSenderIdentityWithUUID:
_setWiFiCallingEnabled:forSenderIdentityWithUUID:
_setWiFiCallingRoamingEnabled:forSenderIdentityWithUUID:
_sharePlayProtocolVersion
_sharePlaySystemStateObserver
_sharingScreen
_shouldAcceptDateConnectedProviderUpdates
_shouldAllowRequestedAction:forCallSource:shouldValidateUserIntent:error:
_shouldAllowRequestedTransaction:forCallSource:error:
_shouldAssociateScene
_shouldBlockIfScreenSharing
_shouldCheckAllGenerators
_shouldDeclineSessionInviteWithMessage:
_shouldFilterCall
_shouldHandleSecureMicrophoneEvents
_shouldLaunchInCallApplicationForProviderOfCall:
_shouldOverrideNetworkAsAvailable
_shouldPreferRelayOverDirectSecondaryCalling
_shouldSend:
_shouldSendToPairedIDSDevice
_shouldStartAudioPaused
_shouldStartVideoPaused
_shouldSuppressInCallUI
_shouldUseIDSDemuxer
_signalHandlerDispatchSources
_silencingUserInfo
_sos
_sourceIdentifier
_splitSessionSecondary
_springBoardProcessObserver
_stableExpanseIdentifier
_stagedActivitySession
_startAVCSessionIfNecessary
_startIDSSessionWithContext:
_startSession:withMessage:identifiers:timeout:declineOnError:
_startTimeoutForMomentsRequestWithTransactionID:
_state
_statusBarManager
_stop
_stopBroadcastingActivity:
_stopConference:
_stopListeningForActivityType:dynamicIdentifier:
_stopListeningForActivityType:matchingDynamicIdentifierSubstring:
_stopListeningForBestAppSuggestionIfAppropriate
_streamToken
_streamTokensByCSDClient
_stringForKey:
_stripFZIDPrefix
_stripPotentialTokenURIWithToken:
_subscriptionWithUUID:
_subscriptions
_subtitle
_suggestedName
_supportedMediaTypes
_supportsAddCall
_supportsAudioAndVideo
_supportsAudioOnly
_supportsBasebandCalling
_supportsCellularData
_supportsClientAssertions
_supportsContinuationOnTV
_supportsDTMF
_supportsDisplayingFaceTimeAudioCalls
_supportsDisplayingFaceTimeVideoCalls
_supportsDisplayingTelephonyCalls
_supportsEmergency
_supportsEmergencyFallback
_supportsGrouping
_supportsHolding
_supportsLeaveContext
_supportsLinks
_supportsPrimaryCalling
_supportsRecents
_supportsRelayCalling
_supportsSendingToVoicemail
_supportsSharePlay
_supportsTTYWithVoice
_supportsThumperCallingUsingSenderIdentityCapabilitiesState:
_supportsUnambiguousMultiPartyState
_supportsUngrouping
_supportsVideo
_supportsVoicemail
_supportslaunchingInCallApplicationForIncomingCall
_swappable
_synchronous
_systemStatusPublisher
_systemVolume
_takingCallsPrivateAllowed
_targetContentIdentifier
_telephonyCallCapabilities
_telephonyCapableDeviceExists
_telephonyClient
_telephonySenderIdentities
_temporaryFileURLByClientFileURL
_temporaryGroupUUID
_thumperCallingAllowedOnDefaultPairedDeviceDefault
_thumperCapabilitiesMonitor
_thumperIsNoLongerEnabledForAccountID:
_thumperIsNoLongerSupportedForAccountID:
_thumperIsNowEnabledForAccountID:
_thumperPinExchangeController
_thumperPushHandler
_timebase
_timeout
_timeoutBlock
_timeoutTimer
_timestampAsTimeIntervalSinceReferenceDate
_tinCanCallSource
_tinCanProviderDelegate
_title
_tokenPrefixedURI
_trackListenedActivityType:dynamicIdentifier:
_transactionManager
_transactionObjectsAwaitingCallHistory
_transferFileAtURL:forSession:request:
_transmissionMode
_transmissionState
_transport
_transportType
_ttyType
_tuProvider
_twoTimeCallthroughInterval
_type
_uPlusNDowngradeAvailable
_uPlusOneScrenShareAvailable
_uUIDString
_underlyingUplinkMuted
_uniqueIdentifier
_uniqueProxyIdentifier
_uniqueProxyIdentifierToCallTable
_uniqueProxyIdentifierToCallTableSemaphore
_unregisterForPushTokenWithType:client:
_unregisterPushApplication:inEnvironment:pushType:destroyApp:
_unregisterUninstalledProvidersAndNotify:
_unregisterUserActivityType:dynamicActivityType:
_unsafeData
_untrackListenedActivityType:dynamicIdentifier:
_untrackListenedActivityType:matchingDynamicIdentifierSubstring:
_updateBluetoothAudioFormatIfNecessaryDueToMVMChange:
_updateCTCapabilities
_updateCallAvailability
_updateCallCapabilitiesForSubscription:capabilitiesState:
_updateCallMutingForHoldMusic
_updateCarPlayDeviceConnected
_updateClientsWithState
_updateCurrentOrientationValue
_updateCurrentlyBroadcastedActivity
_updateDefaultPairedDeviceUniqueIDDefault
_updateDialingIDSDevice
_updateDynamicCapabilitiesAndUpdateClients
_updateEmergencyCallbackModeEnabledState
_updateHostingAndDisplayingSupport
_updateMessage
_updateOutgoingCallerID
_updateParticipantTypesForAddedParticipant:
_updatePickableRoutes
_updateProviderForConnectedChat:
_updateProviderForConnectingChat:
_updateProviderForEndedChat:
_updateProvidersByIdentifierAndNotify:
_updateRelayCapabilities
_updateRoutesForDisconnectedCall
_updateSessionPreferences
_updateState
_updateSubscriptions
_updateSystemCapabilitiesStateForSubscription:capabilitiesState:
_updateThumperAccountState
_updateThumperCallingPreferences
_updatedDateEpochTime
_updatedQOSBlockForBlock:
_upgrade
_upgradeSessionUUID
_uplinkMuted
_uplinkMutedSetTime
_uplinkWasExplicitlyMuted
_userActivity
_userActivityTypeStringForActivityType:
_userConfiguration
_userIntentManager
_userNotificationController
_usingBaseband
_uuid
_validationSource
_value
_version
_video
_videoDeviceController
_videoEnabled
_videoPaused
_videoPriority
_virtualParticipantsByPluginName
_visibilityContext
_voLTECallingAvailable
_voiceOverObserver
_voiceOverRunningDeterminationHandler
_voiceOverTouchShouldRouteToSpeakerDeterminationHandler
_voicemail
_voipApplicationController
_voipToken
_waitForCallSourceWithIdentifier:completion:
_waitingToPruneParticipants
_wantsStagingArea
_wiFiCallingAvailable
_wiFiEmergencyCallingAllowed
_wiFiEmergencyCallingAvailable
_xpcClientForConnection:
_xpcListener
aTVHandoff
aa_primaryAppleAccount
absoluteString
accelerometer
accelerometer:didAccelerateWithTimeStamp:x:y:z:eventType:
accelerometer:didChangeDeviceOrientation:
acceptInvitation
acceptInvitationForIdentifier:
acceptInvitationWithData:
acceptPayloadData
accessorLock
account:aliasesChanged:
account:displayNameChanged:
account:loginChanged:
account:profileChanged:
account:pseudonymsChanged:
account:registrationStatusInfoChanged:
account:vettedAliasesChanged:
accountController
accountController:accountDisabled:
accountController:accountEnabled:
accountController:accountRemoved:
accountController:accountUpdated:
accountDescription
accountForTelephonySubscriptionLabelIdentifier:
accountID
accountISOCountryCodeForSubscriptionUUID:
accountInfo
accountMatchingSimIdentifier:
accountStore
accountType
accountUUID
accountUUIDString
accountWithCallerID:
accountWithUUID:service:
accounts
accountsController
accountsMatchForSecondaryCalling
acquireAssertionIfNecessary
acquireProcessAssertionForBundleIdentifier:
acquireProcessAssertionForBundleIdentifier:completion:
acquireWithCompletionHandler:
acquireWithError:
actionDescription
actionIdentifier
actionWithIdentifier:title:options:
actionWithIdentifier:title:options:icon:
activateConversationNoticeWithActionURL:bundleIdentifier:
activateInCallUIWithActivityContinuationIdentifier:
activateLinkForPseudonym:completionHandler:
activateLinkForPseudonym:updateGroupUUID:updateInvitedHandles:
activateWithCompletion:
activatedConversationLinks
activatedConversationLinks:
activatedLinks
activatedLinksWithCompletionHandler:
activeAccountsChangedForService:
activeApprovedConversationWithLink:
activeConference
activeConferenceConnectionForIdentifier:
activeContexts
activeConversation
activeConversationForCall:
activeConversationForCall:backedByGroupSession:
activeConversations
activeDevices
activeIDSDestination
activeInterfaceOrientationWithCompletion:
activeLightweightParticipantDestinationsByIdentifier
activeLightweightParticipants
activeLightweightParticipantsAtIndex:
activeLightweightParticipantsByIdentifier
activeLightweightParticipantsCount
activeLightweightParticipantsType
activeLocalHandles
activeLocalHandlesForProvider
activeParticipantDestinationsByIdentifier
activeParticipantHandles
activeParticipantRefreshDelay
activeParticipants
activeParticipantsAtIndex:
activeParticipantsCount
activeParticipantsType
activeRemoteParticipant
activeRemoteParticipantCXHandles
activeRemoteParticipantForCallUpdate:
activeRemoteParticipantHandles
activeRemoteParticipants
activeRemoteParticipantsAtIndex:
activeRemoteParticipantsByIdentifier
activeRemoteParticipantsCount
activeRemoteParticipantsType
activeRequestCount
activeRequestsByTransactionID
activeSessionForIdentifier:
activeSplitSessionTVDevice
activeSplitSessionTVDeviceWithCompletion:
activeSubscriptionsDidChange
activity
activityAuthorizationManager
activityAuthorizedBundleIdentifierState
activityAuthorizedBundleIdentifierState:
activityAuthorizedBundleIdentifiers
activityCommunicator
activityContextWithTUActivityContext:
activityIdentifier
activityIdentifierBundleIDMapping
activityMetadata
activityMetadataWithDataBlob:
activityQueue
activitySessionManager
activitySessionManager:activeRemoteParticipantWithParticipantIdentifier:bundleIdentifier:
activitySessionManager:activeRemoteParticipantWithParticipantIdentifier:bundleIdentifier:completionHandler:
activitySessionManager:activityChangedOnSession:
activitySessionManager:activitySessionAssociatedSceneChanged:
activitySessionManager:activitySessionChanged:
activitySessionManager:activitySessionIsJoinable:
activitySessionManager:activitySessionRemoved:userOriginated:
activitySessionManager:activitySessionStateChanged:oldState:
activitySessionManager:fetchDataCryptorForTopic:completionHandler:
activitySessionManager:localParticipantWithParticipantIdentifier:bundleIdentifier:
activitySessionManager:receivedActivitySessionEvent:
activitySessionManager:requestEncryptionKeysForParticipants:topicName:
activitySessionManager:requestForegroundPresentationForActivity:
activitySessionManager:sessionUnjoined:startDate:endDate:
activitySessionManagerRequestedCallTypeStringForLogging:
activitySessionWithCSDConversationActivitySession:fromConversation:
activitySessionWithCSDConversationActivitySession:fromConversation:forStorage:
activitySessionWithTUConversationActivitySession:fromConversation:
activitySessionWithTUConversationActivitySession:fromConversation:forStorage:
activitySessions
activitySessionsAtIndex:
activitySessionsCount
activitySessionsType
activityType
activityTypeForUserActivityTypeString:
activityTypeRequiresBestAppSuggestionListener:
activityTypeSupportsDynamicIdentifierRegistration:
activityWithCSDConversationActivity:fromConversation:forStorage:
activityWithCSDConversationActivity:handle:
activityWithTUConversationActivity:
activityWithType:dynamicIdentifier:userInfo:
add:
addAction:toUncommittedTransactionForCallSource:
addActiveLightweightParticipants:
addActiveParticipant:
addActiveParticipants:
addActiveRemoteParticipants:
addActivitySessions:
addAddedMembers:
addAlias:
addAliasesToConversationContainer:forBundleIdentifier:
addAliasesToConversationContainer:withSalt:
addBarrierBlock:
addBlockToCaptureSessionQueue:
addCall:
addCallAllowed
addCallDescriptor:
addCallFilter:
addCallSource:
addCalls:forIdentifier:
addClient:
addContactIdentifiers:
addConversationLinkDescriptors:completion:
addConversationLinkDescriptors:error:
addDelegate:
addDelegate:queue:
addDelegate:withQueue:
addEmergencyHandles:
addEmergencyLabeledHandles:
addEndpointIDSDestinationURIs:
addEntriesFromDictionary:
addFirewallEntriesForHandleToDate:
addFirewallEntriesForHandles:lastSeenDate:
addFirewallEntryForHandle:lastSeenDate:
addGenerateDescriptorInfos:
addGeneratorDescriptors:
addHandoffIdentifier:
addIdentifier:
addInvitationPreferences:
addInvitedHandles:
addInvitedHandles:pseudonym:completionHandler:
addInvitedMemberHandles:toConversationLink:completionHandler:
addInvitedMemberHandlesFromAddedRemoteMembers:toConversationLink:
addLightweightMembers:
addLink:
addListenerID:forService:
addLocalClientObject:
addMembers:
addMembers:toExistingMembers:activeParticipants:activitySessions:link:otherInvitedHandles:report:invitationPreferences:requiredCapabilities:messagesGroupUUID:messagesGroupName:addingFromLetMeIn:triggeredLocally:highlightIdentifier:stagedActivitySession:avMode:
addMembers:toExistingMembers:participantDestinationIDs:webDestinationIDs:activeParticipants:activitySessions:link:otherInvitedHandles:report:invitationPreferences:
addNotificationRequest:withCompletionHandler:
addObject:
addObjectsFromArray:
addObserver:queue:
addObserver:selector:name:object:
addObserver:withQueue:
addObserverForName:object:queue:usingBlock:
addOrUpdateCall:
addOrUpdateConversationLinkDescriptors:completion:
addOrUpdateConversationLinkDescriptors:error:
addOtherInvitedHandles:
addOutstandingMessage:forBundleIdentifier:
addParticipant:withVideoEnabled:screenEnabled:
addPendingMembers:triggeredLocally:
addProtoCall:
addProtoSupportedHandleType:
addProtocolVersion
addProviders:
addPseudonym:
addPseudonym:forCallUUID:
addRegistrationDelegate:queue:
addRemoteMembers:
addRemoteMembers:otherInvitedHandles:invitationPreferences:addingFromLetMeIn:triggeredLocally:
addRemoteMembers:otherInvitedHandles:toConversationWithUUID:
addRemoteMembers:otherInvitedHandles:triggeredLocally:
addRemoteMembers:toConversation:
addRemoteMembers:toConversationWithUUID:
addRemoteParticipantHandles:
addRemovedMembers:
addReporter:
addRequiredCapabilities:requiredLackOfCapabilities:
addResourceWithType:fileURL:options:
addRoutes:
addSecondaryThumperDeviceWithIDSDeviceIdentifier:toSubscription:
addServiceDelegate:queue:
addTVAsActiveParticipant
addThumperRegisteredDeviceID:forThumperAccountID:
addToCallHistory:
addUserInfoEntriesFromDictionary:
addUserNotification:listener:completionHandler:
addVirtualParticipant:
addVoIPApplication:
addedMembers
addedMembersAtIndex:
addedMembersCount
addedMembersType
airTunesRouteAvailable
alertDidBeginPlaying:
alertWithConfiguration:
aliasStrings
allActions
allActiveConversationParticipantsSupportSharePlay
allAliases
allCallHistoryDeleted
allCalls
allCallsAreOfService:
allCallsBackgroundedForReportingController:
allCallsPassTest:
allConversationHandoffDynamicIdentifierPossibilitiesForGroupUUID:participantIdentifier:
allIDSTelephonyDevices
allIdentifiers
allObjects
allTUConversationMembers
allValues
allocWithZone:
allowCallForDestinationID
allowCallForDestinationID:providerIdentifier:
allowContactsOnly
allowMember:
allowParticipants:
allowScreenSharing
allowSharePlay
allowedSecondaryDeviceIDs
allowsScreenSharing
allowsScreenSharingBlock
allowsVideo
ambiguityState
ams_activeiCloudAccount
ams_activeiTunesAccount
ams_altDSID
ams_sharedAccountStore
andPredicateWithSubpredicates:
announceCalls
answerCall:
answerCall:withRequest:whileDisconnectingActiveCalls:
answerCall:withRequest:whileDisconnectingHeldCalls:andHoldingCalls:
answerCall:withRequest:whileHoldingActiveCalls:
answerCallWithRequest:
answerWithRequest:
answerWithVideoAspectRatioDescriptor:
anyActiveAccount
anyActiveParticipantHasAV
anyBluetoothHeadphoneRouteAvailableForAnyCall
anyCallIsEndpointOnCurrentDevice
anyCallIsHostedOnCurrentDevice
anyCallPassesTest:
anyObject
anyVehicleRouteAvailableForAnyCall
appHistoryActivityWithTitle:subtitle:keywords:userInfo:
appShouldUseDeprecatedCallingIntents:
appendFormat:
appendString:
applicationContext
applicationInfoForApplication:
applicationLaunchPolicyManager
applicationMonitor
applicationPolicyManager
applicationPolicyManager:authorizationChangedForBundleIdentifier:
applicationRecord
applicationShouldPostIncomingCall
applicationState
applicationStateForBundleIdentifier:
applicationStateMonitor
approvePendingMember:forConversationUUID:
approveSplitSessionFor:from:pullContext:completion:
approveSplitSessionForConversation:requestedFromDevice:pullContext:completion:
approvedSecondaryDeviceIDs
approverHandle
archivedDataWithError:
archivedDataWithRootObject:requiringSecureCoding:error:
areCTCapabilitiesValid
areCapabilitiesValid
areRelayCallingFeaturesEnabled
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayByApplyingSelector:
arrayOfStringsForKeyHierarchy:subscriptionContext:error:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
assertion
associateCallUUID:withConversationUUID:waitingToJoin:
associatedPseudonym
associatedThumperAccountID
association
associationAVCIdentifier
associationIdentifier
associationVoucher
attachmentWithIdentifier:URL:options:error:
attemptToPlayDescriptor:completion:
attemptToPlayKey:
attributeForKey:
attributeWithDomain:name:
attributes
attributesOfItemAtPath:error:
audioAccessoryDevice
audioAndVideoCallsWithStatus:
audioArbitrationController
audioCategory
audioDeviceController
audioDeviceControllerDeviceListChanged:
audioDeviceControllerMutedTalkerDidEnd:
audioDeviceControllerMutedTalkerDidStart:
audioDisabled
audioEnabled
audioInterruptionActivationStateObserver
audioInterruptionOperationMode
audioInterruptionPropertiesChangedWithNotification:
audioInterruptionProvider
audioInterruptionProviderType
audioMode
audioMutedForHoldMusic
audioOrVideoCallWithStatus:
audioPaused
audioPolicyManager:sharePlayAllowedStateChanged:
audioPriority
audioReady
audioRouteCollections
audioRouteInformationChangedWithNotification:
audioRoutePolicyManager
audioRouteUniqueIdentifier
audioRoutesByParticipantIdentifier
audioSessionActive
audioSessionID
audioSourceIdentifier
audioVideoMode
authorizedBundleIdentifiers
autoSharePlayEnabled
automaticCarDNDStatus
automaticUpgradingEnabled
autorelease
avChat
avLess
avLessSharePlayEnabled
avMode
availability
availabilityForListenerID:forService:
availabilityWithRemoteAvailable:
available
availableDeviceSlots
avcBlobRecoveryStartedForConversation:
avcBlobRecoveryTimedOutForConversation:
avcBlobRequestMessageRetryFailedForConversation:
avcBlobRequestMessageRetryStartedForConversation:
avcBlobRequestMessageRetrySucceededForConversation:
avcCameraSelectionEnabled
avcIdentifier
avcRequest
avcScreenCapture
avcScreenCaptureConfigurationForScreenAttributes:
avcSession
avcSessionCreationBlock
avcSessionIdentifier
avcSessionInProgress
avcSessionParticipantCreationBlock
backingCallSource
baseDestinationID
becomeCurrent
becomeEndpointForPullFromRemoteDevice
beginDailyMaintenanceWithActivity:
beginListeningBlock
beginListeningOnService:
beginMatchingExtensions
beginObserving
beginParticipantConfiguration
beginParticipantUpdates
beginTransactionIfNecessaryForObject:withReason:
behavior
behaviorResolutionService
bestAppSuggestionChanged:
bestAppSuggestionChanged:withAdditionalSuggestions:
bestAppSuggestionManager
bestGuessPickableRoutesForAnyCall
block
blockToExecuteAfterPendingCoalescingBlocksByIdentifier
blocksPendingTransportAvailability
bluetoothAudioFormat
bluetoothEndpointType
bluetoothRouteAvailable
boolForKey:
boolForKey:keyExistsAndHasValidFormat:
boolValue
bounds
breakBeforeMakeTimeout
broadcastActivity:
broadcastActivity:withTimeout:
broadcastActivity:withTimeout:shouldPrioritize:
broadcastAttributes:
broadcastData:onConversation:
broadcastData:onConversation:additionalOptions:
broadcastFile:onConversation:additionalOptions:
broadcastImageForSession:onConversation:
broadcastLightweightEndorsementForAddedMembers:onConversation:
broadcastLocalParticipantData
bucketedInteger:
bundleIDKey
bundleIdFromTopic:
bundleIdentifier
bundleIdentifierForProvider:
bundleIdentifierToApplicationState
bundleIdentifierToVoIPApplication
bundleRecordWithApplicationIdentifier:error:
bundleURL
bundleWithURL:
buzzMember:conversationUUID:
bytes
cachedCallUUIDsToConversationAVMode
cachedCalls
cachedChats
call
callAlert
callCapabilitiesChanged:capabilities:
callCapabilitiesClientXPCInterface
callCapabilitiesForCTCallCapabilities:
callCapabilitiesForCallManagementStateInfo:
callCapabilitiesForSubscription:
callCapabilitiesServerXPCInterface
callCapabilitiesState
callCapabilitiesState:
callCenter
callCenterObserver
callChanged
callClass
callConnected:
callContainer
callContinuityChanged:
callController
callControllerHost
callControllerHost:clientWithIdentifier:requestedTransaction:completion:
callCountOnDefaultPairedDevice
callCountWithPredicate:
callDataSource
callDirectoryAllowsCallFromSourceAddress:
callDirectoryAllowsCallFromSourceAddress:countryCode:
callDirectoryExtensionIdentifier
callDirectoryLabel
callDirectoryLocalizedExtensionContainingAppName
callDirectoryManager
callDirectoryNSExtensionManager:extensionsChanged:
callDirectorySanitizer
callDirectoryStore
callDuration
callDurationLimitTimer
callDurationUpdateTimer
callFilterController
callForClient:usingCall:
callForConversation:withSessionToken:
callGroupUUID
callGroupUUIDToCalls
callHistoryController
callHistoryControllerClientXPCInterface
callHistoryControllerServerXPCInterface
callHistoryControllerXPCServer
callHistoryIdentifier
callHistoryManager
callHistoryManagerClientXPCInterface
callHistoryManagerServerXPCInterface
callHistoryManagerXPCServer
callID
callInfoBlob
callInteractionsDidChangeForManager:
callIsOnHoldChangedNotification:
callIsSendingVideoChanged:
callIsUplinkMutedChanged:
callModel
callPassingTest:
callPassingTest:sortedUsingComparator:
callProviderManager
callProviderManagerClientXPCInterface
callProviderManagerServerXPCInterface
callProviderManagerXPCServer
callProviderSupportsSystemControls
callRelaySupport
callScreenShareAttributesForAction:
callService
callServicesClientXPCInterface
callServicesInterface
callServicesServerXPCInterface
callSource:registeredWithConfiguration:
callSource:reportedAudioFinishedForCallWithUUID:
callSource:reportedCallWithUUID:changedFrequencyData:forDirection:
callSource:reportedCallWithUUID:crossDeviceIdentifier:changedBytesOfDataUsed:
callSource:reportedCallWithUUID:endedAtDate:privateReason:failureContext:
callSource:reportedCallWithUUID:updated:
callSource:reportedNewIncomingCallWithUUID:update:completion:
callSource:reportedNewOutgoingCallWithUUID:update:
callSource:reportedOutgoingCallWithUUID:connectedAtDate:
callSource:reportedOutgoingCallWithUUID:sentInvitationAtDate:
callSource:reportedOutgoingCallWithUUID:startedConnectingAtDate:
callSource:requestedTransaction:completion:
callSource:shouldProcessAction:error:
callSourceFetcher
callSourceForDialRequest:
callSourceForJoinConversationRequest:
callSourceManager
callSourceManager:completedTransactionGroup:
callSourceWithIdentifier:
callSources
callSourcesChangedForCallSourceManager:
callStartedConnecting:
callStateContext
callStateController
callStateMonitor
callStatus
callStatusChanged:
callStatusFromOverride
callStatusFromUnderlyingSource
callStatusSupportsSystemControls
callTypeForJoinContext:
callUUID
callUUIDForConversationUUID:
callUUIDToGroupWith
callUUIDsByConversationUUID
callUUIDsUpgradedForAVMode
callUpdateForChat:
callUpdateForPendingChat:
callUpdateWithDefaultValuesSet
callWithCallUUID:
callWithUniqueProxyIdentifier:
callWithUniqueProxyIdentifier:fromCallsToAnswer:
callbackDestinationID
callbackISOCountryCode
calleeContactIDsKey
calleeHandlesKey
caller
callerID
callerIDChanged:
callerIDForLocalMember:
callerIDForLocalMember:forProvider:
callerIDHandleForSenderIdentityUUID:
callerIdIsBlocked
callerNameFromNetwork
callerNetworkName
calls
callsChangedForCallCenterObserver:
callsForDataSource:identifier:
callsHostedElsewhere
callsHostedOrAnEndpointElsewhere
callsOnDefaultPairedDevice
callsPassingTest:
callsWithAnEndpointElsewhere
callsWithGroupUUID:
callsWithPredicate:limit:offset:batchSize:
callsWithStatus:
canApproveSessions
canBeAnsweredWithAudioOrVideoRelayWithRequest:
canBeAnsweredWithRequest:
canCreateConversations
canOnlyBeAnsweredWithoutAudioOrVideoRelayWithRequest:
canReceiveMessagesForCallProvider:
canReceiveRelayedCalls
cancel
cancelCallID:
cancelInvitation
cancelInvitationWithAnsweredElsewhere
cancelInvitationWithData:
cancelInvitationWithDeclinedElsewhere
cancelInvitationWithReason:
cancelInvitationWithRemoteEndedReasonOverride:
cancelOrDeclineInvitation
cancelOrDeclineInvitationForIdentifier:
cancelPinRequestFromPrimaryDevice
cancelPinRequests
cancelSplitSessionApproval
cancelledConnectionAttemptOnTransport:
cannotBeAnswered
cannotRelayAudioOrVideo
cannotRelayAudioOrVideoOnPairedDevice
canonicalizedPhoneNumber:
capabilities
capabilitiesValid
capabilityInfoForSubscription:capability:
capabilitySendMessageOptions
capabilityStateUpdated:
captionDraggingEnabled
captioningEnabled
captionsToken
captureCapabilities
captureSessionCreationBlock
captureSessionQueue
capturingLocalVideo
carAudioRouteAvailable
carModeActive
carPlayDeviceConnected
carPlayIsConnectedChanged:
carPlayManager
carPlayRouteAvailable
carPlayScreenConnectionChanged
carrierBundleChange:
carrierNumbersForSubscriptionContext:
carrierPhoneNumbers
caseInsensitiveCompare:
category
categoryWithIdentifier:actions:intentIdentifiers:hiddenPreviewsBodyPlaceholder:options:
categoryWithIdentifier:actions:intentIdentifiers:options:
cellularDataAllowed
cellularDataAvailable
cellularDataPreferred
chManager
changeType
characterAtIndex:
characterIsMember:
characterSetWithCharactersInString:
chat:changedBytesOfDataUsed:
chat:inputFrequencyLevelChangedTo:
chat:inputLevelChangedTo:
chat:outputFrequencyLevelChangedTo:
chat:outputLevelChangedTo:
chat:receivedData:
chatConnected:
chatEnded:
chatReceived:
chatSentInvitation:
chatStartedConnecting:
chatWithUUID:
chats
chatsPendingUpgrade
checkInMessage
checkLinkValidity:completionHandler:
checkLinkValidityWithPseudonym:completionHandler:
checkValidityForPseudonymString:completion:
checkValidityForSelfPseudonymString:
class
cleanUpConversationIfNecessaryForConversationUUID:failureContext:
cleanUpForMomentIfNecessary:
cleanUpIDSSessionState
cleanUpTemporaryFileIfExistsForClientFileURL:
cleanupConversationWithCallUUID:
cleanupExpiredPendingConversations
clearActiveLightweightParticipants
clearActiveParticipants
clearActiveRemoteParticipants
clearActivitySessions
clearAddedMembers
clearContactIdentifiers
clearEmergencyHandles
clearEmergencyLabeledHandles
clearGenerateDescriptorInfos
clearGeneratorDescriptors
clearHandoffIdentifiers
clearInvitationPreferences
clearInvitedHandles
clearLightweightMembers
clearLinks
clearMembers
clearNotificationsIfNecessary
clearOtherInvitedHandles
clearOtherUniqueProxyIdentifiers
clearPendingMembershipFor:
clearPrioritizedSenderIdentities
clearProtoSupportedHandleTypes
clearProviders
clearReadNotificationsIgnoringHandleIds:
clearRemoteMembers
clearRemoteParticipantHandles
clearRemovedMembers
clearRoutes
clearState
client
client:capabilitiesDidChange:
client:subscription:callCapabilitiesDidChange:
client:subscription:capabilitiesDidChange:
clientAudioSessionID
clientContextData
clientFileURLByIdentifier
clientInvalidationHandler
clientManager
clientMessagingDelegate
clientUUID
clientsEntitledForCapability:
clientsPassingTest:
clientsShouldConnectToken
closeConnectionTimeout
cloudCallingDevices
code
collaborationIdentifier
commitParticipantUpdates
commitUncommittedTransactions
commonMessagingDelegate
compactStoreWithCompletionHandler:
companyName
compare:
compare:options:
compatibilityObject
completedDescription
completion
completionHandler
componentsJoinedByString:
componentsSeparatedByString:
conduitXPCServer
conference
conference:cancelRelayRequest:requestDict:
conference:changedBytesOfDataUsed:
conference:closeConnectionForCallID:
conference:didChangeLocalVariablesForCallID:
conference:didReceiveARPLData:withCallID:
conference:didReceiveData:forCallID:
conference:didStartSession:withCallID:error:
conference:didStartSession:withUserInfo:
conference:didStopWithCallID:error:
conference:didStopWithCallID:error:callMetadata:
conference:endedWithReason:error:
conference:inititiateRelayRequest:requestDict:
conference:inputFrequencyLevelChangedTo:
conference:isRemoteAudioBelowThreshold:
conference:localAudioEnabled:forCallID:error:
conference:localIPChange:withCallID:
conference:outputFrequencyLevelChangedTo:
conference:outputLevelChangedTo:
conference:receivedFirstRemoteFrameForCallID:
conference:reinitializeCallForCallID:
conference:remoteAudioEnabled:forCallID:
conference:remoteAudioPaused:callID:
conference:remoteCallingModeChanged:forCallID:
conference:remoteMediaStalled:
conference:remoteScreenAttributesChanged:callID:
conference:remoteVideoAttributesChanged:callID:
conference:remoteVideoPaused:callID:
conference:sendRelayUpdate:updateDict:
conference:updateInputFrequencyLevel:
conference:updateInputMeterLevel:
conference:updateOutputFrequencyLevel:
conference:updateOutputMeterLevel:
conference:videoQualityNotificationForCallID:isDegraded:isRemote:
conference:withCallID:didPauseAudio:error:
conference:withCallID:didPauseVideo:error:
conference:withCallID:isSendingAudio:error:
conference:withCallID:networkHint:
conference:withCallID:remoteMediaStalled:
conferenceCall
conferenceConnectionForIdentifier:
conferenceConnections
conferenceCreationBlock
conferenceFinishedPreparing:
conferenceID
conferenceParticipantCalls
conferenceProvider
conferenceProvider:didPauseAudio:error:
conferenceProvider:didPauseVideo:error:
conferenceProvider:didReceiveData:forCallID:
conferenceProvider:didStartSession:error:
conferenceProvider:didStopWithError:callMetadata:
conferenceProvider:remoteMediaStalled:
conferenceProvider:remoteVideoPaused:
conferenceProvider:updateInputFrequencyLevel:
conferenceProvider:updateInputLevel:
conferenceProvider:updateOutputFrequencyLevel:
conferenceProvider:updateOutputLevel:
conferenceProviderReceivedFirstRemoteFrame:
conferenceStarted:
conferenced
conferencesAwaitingConnectionClose
configuration
configurationForDefaultMainDisplayMonitor
conformsToProtocol:
connected
connection
connection:channelSubscriptionsFailedWithFailures:
connection:didChangeConnectedStatus:
connection:didFailToSendOutgoingMessage:error:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didReceivePublicToken:
connection:didReceiveToken:forInfo:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didSendOutgoingMessage:
connectionClosedForConference:
connectionClosedForConferenceProvider:
connectionDidReconnect:
connectionInterrupted
connectionTimeout
constitutesLetMeInApproval
contactForDestinationId:keysToFetch:
contactForIdentifier:keysToFetch:
contactIdentifier
contactIdentifiers
contactIdentifiersAtIndex:
contactIdentifiersCount
contactIdentifiersType
contactLabel
contactName
contactStore
contacts
contactsByHandleForCalls:keyDescriptors:error:
contains:
containsAnyOutstandingMessageForBundleIdentifier:
containsBlockingEntryForEnabledExtensionWithPhoneNumberInArray:error:
containsMemberWithHandle:
containsOutgoingRestrictedHandle:forBundleIdentifier:performSynchronously:
containsOutstandingMessage:forBundleIdentifier:
containsRecentsRestrictedHandle:
containsRegisteredDeviceID:
containsRemoteParticipantWithIdentifier:
containsRestrictedHandle:
containsRestrictedHandle:forBundleIdentifier:performSynchronously:reply:
contentByUpdatingWithProvider:error:
contentsOfDirectoryAtURL:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
context:addPhoneServicesDevice:withCompletion:
context:capabilitiesChanged:
context:getCapability:status:with:
context:getSystemCapabilities:
context:recheckPhoneServicesAccountStatus:
context:removePhoneServicesDevice:withCompletion:
context:setCapability:enabled:with:
contextIdentifier
continueHandoffAudioRouteForIdentifier:
continueHandoffAudioRouteNotification
continueHandoffForConversationWithEligibility:
continuityCaptureEnabled
controlFlags
conversation:activityChangedOnSession:
conversation:activitySessionChanged:
conversation:activitySessionRemoved:userOriginated:
conversation:addedActiveParticipant:
conversation:addedMembers:triggeredLocally:
conversation:addedMembersLocally:
conversation:appLaunchState:forActivitySession:
conversation:buzzedMember:
conversation:changedBytesOfDataUsed:
conversation:didChangeLocalParticipant:
conversation:didChangeSceneAssociationForActivitySession:
conversation:didChangeStateForActivitySession:
conversation:mediaPrioritiesChangedForParticipant:
conversation:participant:addedNotice:
conversation:receivedActivitySessionEvent:
conversation:remoteParticipantWithIdentifier:updatedAudioEnabled:
conversation:remoteParticipantWithIdentifier:updatedVideoEnabled:
conversation:removedActiveParticipant:withLeaveReason:
conversation:requestBlobRecoveryForParticipantDestination:completion:
conversation:screenSharingChangedForParticipant:
conversation:sendDeclineMessageToParticipantDestination:
conversation:updatedActiveParticipant:
conversation:updatedActiveParticipantWithScreenSharing:
conversationChanged:
conversationCreationBlock
conversationDidTriggerJoin:
conversationFailureContext
conversationGroupUUID
conversationGroupUUIDString
conversationHandoffEnabled
conversationID
conversationInvalidated:
conversationLink
conversationLinkBaseURL
conversationLinkDescriptorCountWithPredicate:completion:
conversationLinkDescriptorCountWithPredicate:error:
conversationLinkDescriptorDataSourceDelegate
conversationLinkDescriptorsWithGroupUUIDs:error:
conversationLinkDescriptorsWithPredicate:limit:offset:completion:
conversationLinkDescriptorsWithPredicate:limit:offset:error:
conversationLinkForGroupUUID:
conversationLinkForPseudonym:
conversationManager
conversationManager:activatedConversationLinksChanged:
conversationManager:activeRemoteParticipantsChangedForConversation:
conversationManager:activeRemoteParticipantsChangedForConversation:fromOldConversation:
conversationManager:activityAuthorizationChangedForBundleIdentifier:
conversationManager:activitySessionsChangedForConversation:
conversationManager:activitySessionsChangedForConversation:fromOldConversation:
conversationManager:addedActivatedLink:
conversationManager:addedActiveConversation:
conversationManager:avModeChanged:toAVMode:forConversation:
conversationManager:avModeChanged:toAVMode:forParticipantWithHandle:forConversation:
conversationManager:avModeChangedForConversation:
conversationManager:avModeChangedForConversation:fromOldConversation:
conversationManager:changedActivityAuthorizationForBundleIdentifier:
conversationManager:connectionDidStartForConversation:
conversationManager:conversation:addedActiveParticipant:
conversationManager:conversation:addedMembersLocally:
conversationManager:conversation:appLaunchState:forActivitySession:
conversationManager:conversation:buzzedMember:
conversationManager:conversation:changedBytesOfDataUsed:
conversationManager:conversation:didChangeSceneAssociationForActivitySession:
conversationManager:conversation:didChangeStateForActivitySession:
conversationManager:conversation:failedWithContext:
conversationManager:conversation:launchStateChanged:forActivitySession:
conversationManager:conversation:mediaPrioritiesDidChangeForParticipant:
conversationManager:conversation:participant:addedNotice:
conversationManager:conversation:receivedActivitySessionEvent:
conversationManager:conversation:receivedMessage:fromHandle:withUpdate:
conversationManager:conversation:remoteParticipantWithIdentifier:updatedAudioEnabled:
conversationManager:conversation:remoteParticipantWithIdentifier:updatedVideoEnabled:
conversationManager:conversation:removedActiveParticipant:
conversationManager:conversation:removedActiveParticipant:withReason:
conversationManager:conversation:requestedScreenShareForParticipant:
conversationManager:conversation:screenSharingChangedForParticipant:
conversationManager:conversation:updatedMessagesGroupPhoto:
conversationManager:conversationChanged:
conversationManager:conversationScreenSharingChanged:forParticipant:
conversationManager:conversationUpdateMessagesGroupPhoto:
conversationManager:conversationUpdatedMessagesGroupName:
conversationManager:conversationUpdatedMessagesGroupName:fromOldConversation:
conversationManager:conversationUpdatedMessagesGroupUUID:
conversationManager:didChangeActivatedLinks:
conversationManager:handoffEligibilityChangedForConversation:
conversationManager:handoffEligibilityChangedToConversation:fromPreviousConversation:
conversationManager:ignoreLMIRequestsChangedForConversation:
conversationManager:joinConversationWithRequest:
conversationManager:kickedMembersChangedForConversation:
conversationManager:kickedMembersChangedForConversation:fromOldConversation:
conversationManager:letMeInRequestStateChangedForConversation:
conversationManager:letMeInRequestStateChangedForConversation:fromOldConversation:
conversationManager:linkChangedForConversation:
conversationManager:linkChangedForConversation:fromOldConversation:
conversationManager:linkInvitedMemberHandlesChangedForConversation:
conversationManager:linkInvitedMemberHandlesChangedForConversation:fromOldConversation:
conversationManager:localVideoToggledForConversation:
conversationManager:localVideoToggledForConversation:fromOldConversation:
conversationManager:migratingFromConversation:toConversation:
conversationManager:oneToOneModeChangedForConversation:
conversationManager:oneToOneModeChangedForConversation:fromOldConversation:
conversationManager:otherInvitedHandlesChangedForConversation:
conversationManager:otherInvitedHandlesChangedForConversation:fromOldConversation:
conversationManager:pendingMembersChangedForConversation:
conversationManager:pendingMembersChangedForConversation:fromOldConversation:
conversationManager:rejectedMembersChangedForConversation:
conversationManager:rejectedMembersChangedForConversation:fromOldConversation:
conversationManager:remoteMembersChangedForConversation:
conversationManager:remoteMembersChangedForConversation:fromOldConversation:
conversationManager:remoteScreenShareAttributesChanged:isLocallySharing:
conversationManager:remoteScreenShareEndedWithReason:
conversationManager:removedActiveConversation:
conversationManager:removedConversationWithUUID:
conversationManager:reportedHandedOffConversation:replacedByIdentifier:localizedHandoffRecipientDeviceCategory:
conversationManager:reportedInvalidLinkForPendingConversation:
conversationManager:reportedLetMeInRejectedForPendingConversation:
conversationManager:resolvedAudioVideoModeChangedForConversation:
conversationManager:resolvedAudioVideoModeChangedForConversation:fromOldConversation:
conversationManager:screenSharingAllowedChanged:
conversationManager:screenSharingAvailableChanged:
conversationManager:sharePlayAllowedChanged:
conversationManager:sharePlayAvailableChanged:
conversationManager:stateChangedForConversation:
conversationManager:stateChangedForConversation:fromOldConversation:
conversationManager:systemActivitySessionsChangedForConversation:
conversationManager:systemActivitySessionsChangedForConversation:fromOldConversation:
conversationManager:trackedPendingMember:forConversationLink:
conversationManager:updateIncomingPendingConversationsByGroupUUID:
conversationManager:updatedIncomingPendingConversations:
conversationManagerClientXPCInterface
conversationManagerHost
conversationManagerServerXPCInterface
conversationManagerXPCServer
conversationMessageBytes
conversationNoticeManger
conversationProviderForIdentifier:
conversationProviderForIdentifier:completionHandler:
conversationProviderIdentifier
conversationProviderManager
conversationProviderManagerClientXPCInterface
conversationProviderManagerServerXPCInterface
conversationProviderManagerXPCServer
conversationProviders:
conversationRepresentedByRemoteMembers:andLink:
conversationStateSupportsSystemControls
conversationUUIDForCallUUID:
conversationUUIDs
conversationUUIDsAwaitingActiveAudioSession
conversationUUIDsByCallUUID
conversationUUIDsUpgradedFromAVLess
conversationUUIDsWaitingForRemoteJoin
conversationUUIDsWaitingToJoin
conversationUpdatedMessagesGroupPhoto:
conversationWithGroupUUID:
conversationWithGroupUUID:andProvider:
conversationWithGroupUUID:orMemberIdentifiers:orRemoteMembers:andLink:andVideo:
conversationsByGroupUUID
conversationsByGroupUUID:
conversationsByUUID
conversationsByUUIDIncludingStorageConversations:
conversationsChangedForConversationManager:
copy
copyCarrierBundleValue:keyHierarchy:bundleType:error:
copyFileAtURL:toTemporaryFileWithName:
copyItemAtURL:toURL:error:
copyMobileCountryCode:error:
copyMobileNetworkCode:error:
copyMobileSubscriberCountryCode:error:
copyMobileSubscriberIsoCountryCode:error:
copyWithZone:
coreTelephonyClient
count
countByEnumeratingWithState:objects:count:
countForIdentifier:
countOfCallsPassingTest:
countOfNotificationsReceived
countOfVoicemailsPassingTest:
countryCode
coveredNotifyObserver
cpApplicationController
cpBiomeStreamDonator
createActivitySession:
createActivitySession:onConversation:fromHandle:
createActivitySession:onConversationWithUUID:
createActivitySession:onConversationWithUUID:withCompletion:
createActivitySessionOnConversation:
createActivitySessionWithTuActivitySession:
createAliasForParticipantID:salt:
createCPActivitySessionForActivitySession:onConversationWithUUID:
createConversationIfNecessaryWithUUID:groupUUID:messagesGroupUUID:locallyCreated:localMember:remoteMembers:pendingMembers:otherInvitedHandles:remotePushTokens:lightweightMembers:link:activity:avMode:provider:
createConversationReportingSession:
createConversationWithUUID:groupUUID:messagesGroupUUID:locallyCreated:localMember:initiator:remoteMembers:pendingMembers:otherInvitedHandles:remotePushTokens:lightweightMembers:activity:link:report:fromStorage:avMode:provider:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createLinkIfNecessaryWithFilename:toURL:
createLinkIfNecessaryWithFilename:toURL:error:
createOneToOneFTReportingSessionForCallWithUUID:withReportingHierarchyToken:withVideo:
createProcessMonitorIfNecessary:forClient:
createSelectiveSharingSessionIfNecessary
createStagedActivitySessionForActivity:
createdOutgoingIMAVChat:
creationDate
creationDateEpochTime
creationRequestForAsset
crossDeviceIdentifier
csCallingAvailable
csCallingCapabilitiesState
csdConversationLinkGeneratorDescriptor
csdConversationParticipant
csd_ISOCountryCode
csd_UUIDv5
csd_UUIDv5ForString:
csd_aliasStrings
csd_applicationRecordForApplicationIdentifier:
csd_applicationRecordForBundleIdentifier:
csd_callbackHandle
csd_destinationForAlias:
csd_hasVoIPBackgroundMode
csd_hasVoIPNetworkExtensionEntitlement
csd_isExpired
csd_isSymbolicLink
csd_isThumper
csd_isUnknown
csd_localizedDeviceCategory
csd_pseudonym
csd_senderHandle
csd_stringWithCSDVoIPApplicationMessageTransportType:
csd_telephony
csd_thumper
csd_unknown
csd_unknownContextInfoForAccountID:
ctEmergencyCallbackModeStatusChangedWithUserInfo:
ctServiceType
currentAudioAndVideoCallCount
currentAudioAndVideoCallGroups
currentAudioAndVideoCalls
currentCallCount
currentCallGroups
currentCallSet
currentCalls
currentCallsForClient:
currentClient
currentConnection
currentDescriptor
currentDeviceFamily
currentDeviceOrientation
currentHandler
currentIDStatusForDestination:service:listenerID:queue:completionBlock:
currentIDStatusForDestinations:service:listenerID:queue:completionBlock:
currentLayout
currentOrientation
currentParticipantPresentationContexts
currentProcessIdentifier
currentProxyCalls
currentRemoteDevicesForDestinations:service:listenerID:queue:completionBlock:
currentRunLoop
currentSIMsWithError:
currentServerTimeDate
currentSession
currentState
currentVideoCall
currentVideoCallCount
currentVideoCalls
currentlyBroadcastedActivity
currentlyPickedRouteIdForCategory:andMode:
currentlyTrackedA2DPRouteIdentifier
customizeForProtocolVersion:
cxCall
cxScreenShareAttributesForCallAttributes:
cx_errorWithCode:
cx_incomingCallErrorWithCode:
cx_requestTransactionErrorWithCode:
daemonConnected:
data
dataActiveAndReachable
dataDownloaded
dataSource
dataSourceToIdentifierToCalls
dataSources
dataUploaded
dataUsingEncoding:
dataWithBytes:length:
dataWithContentsOfURL:
dataWithPropertyList:format:options:error:
date
dateAnsweredOrDialed
dateByAddingUnit:value:toDate:options:
dateConnected
dateCreated
dateDialed
dateEnded
dateInitiatedLetMeIn
dateReceivedFirstRemoteFrame
dateReceivedLetMeIn
dateSentInvitation
dateStarted
dateStartedConnecting
dateStartedOutgoing
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
deactivateAndSetInterruptionPriority:error:
debugDescription
declineConversation:reason:destinations:
declineInvitation
declineInvitationWithData:
declineInvitationWithResponse:
declineRemoteDevicesForConversation:reason:
declineRemoteMembersForConversation:reason:
decryptLetMeInRequest:pseudonym:fromHandle:completionHandler:
decryptLetMeInResponse:pseudonym:requestorKeyAgreement:
defaultActionURL
defaultAttributes
defaultCenter
defaultConfiguration
defaultDisplayScale
defaultManager
defaultPairedDevice
defaultPairedDeviceExists
defaultProviders
defaultScaleFactor
defaultScreenShareAttributes
defaultSessionMode
defaultWorkspace
deferCommittingTransactions
deferReportingAudioFinishedForCallWithUUID:
delayedActionsByCallUUID
delegate
delegateController
delegateQueue
deleteCallsWithPredicate:completion:
deleteContentsAtURL:
deleteItemAndReturnError:
deliverVoIPToken:
dequeueAllPauseDigits
dequeueNextPauseDigits
deregisterHandoffIdentifiersForConversation:
description
descriptorForRequiredKeysForStyle:
destination
destinationDevice
destinationID
destinationIDsCanUseV2Blobs:
destinationIdIsEmailAddress
destinationIdIsPhoneNumber
destinationIdIsPseudonym
destinationIdIsTemporary
destinationWithActiveSession
destinationWithDestinations:
destinationWithDevice:
destinationWithRapportPublicIdentifier:
destinationWithStringURI:isLightWeight:
destinationWithTUConversationMember:
destinationWithTUConversationParticipant:
destinationWithURI:
destinations
detectingRaiseToAnswer
developmentConnection
deviceCapabilityChanged:
deviceDestinationsWithCapability:localHandle:
deviceFamily
deviceForFromID:
deviceForService:
deviceListChanged:
deviceLockObserver
deviceLockStateObserver
devicePasscodeLocked
deviceRole
deviceSupport
deviceType
deviceTypeAsString:
deviceWithActiveSession
deviceWithUniqueID:
devicesWithCapability:
dialAssistedDialRequestForDialRequest:
dialRequest
dialType
dialWithRequest:completion:
dialWithRequest:reply:
dialingIDSDevice
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithDictionary:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
didAddCapabilitiesForSenderIdentityWithUUID:
didChangeCloudCallingDevices
didChangeEmergencyCallbackMode
didChangeEmergencyCallbackPossible
didChangeFaceTimeAudioCallingSupport
didChangeFaceTimeCallingAvailability
didChangeFaceTimeVideoCallingSupport
didChangeOutgoingRelayCallerID
didChangeRelayCallingAvailability
didChangeRelayCallingCapabilities
didChangeRelayCallingFeatures
didChangeServiceProvidersForCarrierBundlePhoneNumberProviderController:
didChangeTelephonyCallingSupport
didChangeThumperCallingCapabilitiesForSenderIdentityWithUUID:
didChangeVoLTECallingCapabilitiesForSenderIdentityWithUUID:
didChangeWiFiCallingCapabilitiesForSenderIdentityWithUUID:
didChangeWiFiCallingProvisionalURLForSenderIdentityWithUUID:
didCleanUp
didCleanUpForStream:
didCleanUpForStream:reply:
didEndSession:startDate:endDate:
didErrorOccur
didPrepareHandler
didReceiveLocallyRequestedMomentDescriptor:
didReceiveResultsForStream:withTransactionID:
didReceiveResultsForStream:withTransactionID:reply:
didReceiveResultsWithTransactionID:
didRemoveCapabilitiesForSenderIdentityWithUUID:
didStartRequestForStream:withTransactionID:
didStartRequestForStream:withTransactionID:reply:
didStartRequestWithTransactionID:
didStopHandler
didUpdateCapabilities:forVideoStreamToken:
digits
disconnect
disconnectActiveCallsBasedOnCallStatusForCall:
disconnectAllCalls
disconnectAllCalls:
disconnectAllCallsBesides:
disconnectCall:whileUngroupingCall:
disconnectCall:withReason:
disconnectCallWithUniqueProxyIdentifier:
disconnectCalls:whileHoldingCalls:andUnholdingCalls:andUngroupingCalls:
disconnectCurrentCallAndActivateHeld
disconnectMessagingConnectionForCall:
disconnectTV:completion:
disconnectTVDevice:completion:
disconnectWithReason:
disconnectedCause
disconnectedReason
displayContext
displayContextByMergingWithDisplayContext:
displayContextChanged:
displayErrorNotificationWithMessage:
displayFirstName
displayHandoffEligibleNearbyByURL
displayID
displayIncomingPinCode:fromID:completionHandler:
displayMismatchedAccountsNotification
displayName
displayNameChanged:
displayPinErrorNotification
displayPinMessageForDevice:completionHandler:
displayPinRequestFailure
displayScale
displayServiceConfirmationWithCompletionHandler:
displaySharePlayUnableToStartAlert
displaySlotsFullNotification
displaySystemCallControlsByURL
displayedAudioAndVideoCalls
displayedCall
displayedCallFromCalls:
displayedCalls
distantPast
dndAllowsCall
doesHandle:correspondToConversationProvider:completionHandler:
doesNotRecognizeSelector:
domain
domainAccessor
donateBiomeSignalIfNecessary
donateEntries:withCompletion:
donateHandles:
donateSignalWithCompletion:
donateUserIntentForCallProviderIdentifier:
donateUserIntentForProviderWithIdentifier:
doubleForKey:
doubleValue
downgradeToAudio
downgradeToOneToOneAfterDelayBlock
dualSimCapabilityDidChange
dummyPayload
duration
dynamicDisplayContext
dynamicIdentifier
dynamicIdentifierForConversation:uplinkMuted:sendingVideo:
effectiveIdentifier
elements
eligibleCallsByFilteringCalls:forClient:
eligibleRouteAvailable
emergency
emergencyCallbackCapabilities
emergencyCallbackCapabilitiesDidChange
emergencyCallbackModeDidChangeForAllSubscriptionsForClient:
emergencyCallbackModeEnabled
emergencyCallbackPossible
emergencyHandles
emergencyHandlesAtIndex:
emergencyHandlesCount
emergencyHandlesType
emergencyLabeledHandles
emergencyLabeledHandlesCount
emergencyLabeledHandlesType
emergencyProvider
emergencyProviderIdentifier
emergencyTUHandles
emergencyTULabeledHandles
enableEmergencyModeIfNecessaryForCall:
enableEmergencyModeWithError:
enabledTopics
enclosedEncryptedType
enclosedEncryptedTypeAsString:
encodeWithCoder:
encryptLetMeInRequest:link:completionHandler:
encryptLetMeInResponse:pseudonym:responseKeyData:
encryptedData
encryptedMessage
endActiveAndAnswerCall:
endActivitySession:onConversationWithUUID:
endAndAnswerAllowed
endCallWithUUID:
endCallWithUUIDAsAnsweredElsewhere:
endCallWithUUIDAsDeclinedElsewhere:
endCallWithUUIDAsLocalHangup:
endChatWithReason:
endEmergencyCallbackMode
endEndingSessions
endHandoffActivity
endHeldAndAnswerCall:
endObserving
endParticipantConfiguration
endRequestWithTransactionID:reply:
endSession
endTransactionIfNecessaryForObject:
endWithError:
endedError
endedReason
endedReasonUserInfo
endedReasonUserInfoForCall:
endpointIDSDestination
endpointIDSDestinationURIs
endpointIDSDestinationURIsAtIndex:
endpointIDSDestinationURIsType
endpointOnCurrentDevice
endpointRapportEffectiveIdentifier
endpointRapportMediaSystemIdentifier
enqueueConversationWaitingForAudioWithConversationUUID:
enqueueOrStartAudioForConversationUUID:
enrollDefaultPairedDevice
enrollDefaultPairedDeviceForAccountID:
enrollDevice:forSenderIdentityUUID:
enteredBackgroundForAllCalls
enteredForegroundForCallWithUniqueProxyIdentifier:
entitledCapabilities
entitlements
enumerateActiveConversations:
enumerateDelegatesUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumerateRoutesInvokingBlock:forRoutesPassingTest:
environment
errorForDisabledPseudonyms
errorForUnregisteredProviderIdentifier:
errorWithDomain:code:userInfo:
eventBlock
exceptionWithName:reason:userInfo:
executableURL
execute:
executeFetchRequest:
executeFetchRequest:error:
executeSessionDidStart
existingCallsHaveMultipleProviders
expanseBTSwitchingEnabled
expanseConduitProxyEnabled
expanseEnabled
expectedAudioEnabled
expectedAudioPaused
expectedEndpointOnMessagingDevice
expectedRelayClientDestination
expectedScreenEnabled
expectedVideoEnabled
expectedVideoPaused
expediteDeferredEndInterruptionForCallWithUUID:
expirationDate
exportedInterface
exportedObject
faceTimeAppViewLinkDetailsURLForPseudonym:
faceTimeAudioAvailable
faceTimeAvailabilityChanged
faceTimeCallSource
faceTimeConversationProviderDelegate
faceTimeDemuxerDelegate
faceTimeIDMatchesAppleID
faceTimeIDSProviderDelegate
faceTimeIDStatus
faceTimeIDStatusRefreshed
faceTimeIMAVProviderDelegate
faceTimeIMAccount
faceTimeIMAccountCallerIDChanged:
faceTimeInviteDemuxer
faceTimeInviteDictionary
faceTimeLaunchForIncomingCallURL
faceTimeMultiwayAvailabilityForDestination:
faceTimeNeedsBackgroundLaunchURL
faceTimePhotosAvailable
faceTimeProvider
faceTimeProviderDelegate
faceTimeShowHandoffEligibleNearbyURL
faceTimeShowInCallUIURL
faceTimeShowSystemCallControlsURL
faceTimeSupported
faceTimeTransportType
faceTimeVideoAvailable
facetimeIDSServiceGenerator
fail
failOutstandingActionsForCallWithUUID:
failureContext
failureContextForChat:
failureReason
fallbackApplicationName
fallbackURL
familyName
featureFlags
fetchApplicationStateForBundleIdentifier:
fetchAutomaticDNDAssertionWithReply:
fetchCallSourceForIdentifier:completion:
fetchCurrentProcessStatesForBundleIdentifier:
fetchCurrentProcessStatesForBundleIdentifier:completion:
fetchServiceProviders
fetchUpcomingNoticeFromQueue
fetchUpcomingNoticeWithCompletionHandler:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileManager
fileTransferController
fileTransferer:didReceiveResourcesAtURL:withMetadata:isZipped:fromIDSDestination:
fileTransferer:didTransferFileAtURL:successfully:
fileURLWithPath:
fileURLWithPath:isDirectory:
fileURLWithPathComponents:
filterClientsEntitledForCapability:andPerformBlock:
filterClientsUsingPredicate:andPerformBlock:
filterClientsUsingPredicate:andPerformBlock:coalescedByIdentifier:
filterGFTaaSCalls
filterStatusForAddresses:forBundleIdentifier:reply:
filterStatusForAddresses:withBundleIdentifier:
filteredArrayUsingPredicate:
filteredOutReason
findConversationLinkMatchingPseudonym:
findOrCreateConversationWithGroupUUID:messagesGroupUUID:remoteMembers:otherInvitedHandles:localMember:remotePushTokens:link:activity:avMode:conversationProvider:
firstIndex
firstObject
firstUnlockCallbacks
flags
floatValue
forceExpanseEnabled
formUnionWithCharacterSet:
forwardInvocation:
frameRate
fromHandle
fromID
fromServer
fromServerStorage
fromStorage
frontmostAudioOrVideoCall
frontmostCall
ftvSpatialAudioEnabled
fulfillWithDateConnected:
fullfillPendingJoinActionsForCallUUIDIfNecessary:
fuzzyPhotoRequestFailureCount
fuzzyPhotoRequestSuccessCount
gameCenterSharePlayIntegration
generateAllInactiveLinks
generateAllInactiveLinksFor:
generateDescriptorInfos
generateDescriptorInfosCount
generateDescriptorInfosType
generateDescriptorVersionSum
generateInactiveLinkFor:afterActivation:
generateLinkForConversationUUID:completionHandler:
generateLinkWithGroupUUID:invitedHandles:originatorHandle:linkLifetimeScope:completionHandler:
generateLinkWithInvitedHandles:originatorHandle:linkLifetimeScope:completionHandler:
generateLinkWithInvitedMemberHandles:linkLifetimeScope:completionHandler:
generatePreviewImageFromData:completionHandler:
generatePseudonymHandleForConversationProvider:expiryDuration:URI:completionHandler:
generatePseudonymHandleForConversationWithExpiryDuration:URI:completionHandler:
generatorDescriptor
generatorDescriptorWithCSDConversationLinkGeneratorDescriptor:
generatorDescriptors
generatorDescriptorsAtIndex:
generatorDescriptorsCount
generatorDescriptorsType
generatorID
generatorVersion
gestureHandler
getActiveContexts:
getActiveLinksWithCreatedOnly:completionHandler:
getActivePairedDevice
getCallCapabilities:error:
getDeliveredNotificationsWithCompletionHandler:
getInactiveLinkForHandle:
getInactiveLinkForHandle:completionHandler:
getInactiveLinkWithCompletionHandler:
getIsAudioPaused:callID:error:
getIsVideoPaused:callID:error:
getLatestRemoteScreenShareAttributesWithCompletionHandler:
getLinkDescriptorWithPseudonym:includeInactive:completionHandler:
getMessagesGroupDetailsForConversationUUID:completionHandler:
getMessagesGroupDetailsForMessagesGroupUUID:completionHandler:
getParticipantIDForAlias:salt:completionHandler:
getPhoneServicesDeviceInfo:
getPickableRoutesForCategory:mode:completion:
getResourceValue:forKey:error:
getScreenSharingAvailableWithCompletionHandler:
getSharePlayAvailableWithCompletionHandler:
getSubscriptionInfoWithError:
getVoicemailInfo:completion:
gftDowngradeToOneToOne
gftaasPseudonymsEnabled:
givenName
greenTeaHandoffTimeout
greenTeaLinksEnabled
groupActivitiesReportsReceived:forConversation:
groupCall:withOtherCall:
groupCallWithUniqueProxyIdentifier:withOtherCallWithUniqueProxyIdentifier:
groupCalls:withCalls:
groupFaceTimeServiceProviderDelegate
groupFacetimeAsAServiceEnabled
groupIDKey
groupNameKey
groupSessionDidTerminate:
groupSessionEnded:withReason:error:
groupSessionProviderCreationBlock
groupUUID
groupWithOtherCall:
guest
guestModeEnabled
guestModeSupported
handle
handleAXSVoiceOverTouchEnabledNotification:
handleActiveAccountsChanged:
handleAnswerCallMessageFromClient:destination:device:
handleApplicationUninstalledNotification:
handleApplicationUnregisteredNotification:
handleAudioInterruptionPropertiesChanged:
handleAudioSessionActivationStateChangedTo:
handleByFullyQualifyingHandle:usingCountryCode:
handleBytesOfDataUsedChanged:forCallWithUniqueProxyIdentifier:callHistoryIdentifier:
handleCallAnsweredElsewhereMessageFromHost:fromPairedDevice:
handleCallConnectedMessageFromHost:
handleCallConnectedNotification:
handleCallDialedMessageFromHost:fromPairedDevice:
handleCallDisconnectedMessageFromHost:
handleCallHasStartedOutgoingChangedNotification:
handleCallHistoryDatabaseChangedNotification:
handleCallHistoryDatabaseChangedWithNotification:
handleCallMayRequireBreakBeforeMakeChangedNotification:
handleCallOneToOneModeChangedNotification:
handleCallSourcesChanged
handleCallStartedConnectingMessageFromHost:
handleCallStartedConnectingNotification:
handleCallStatusChanged:
handleCallStatusChangedNotification:
handleCallUpgradedToVideoNotification:
handleCallWantsHoldMusicChangedNotification:
handleChatCallInfoChangedNotification:
handleChatConferenceIDChangedNotification:
handleChatConferenceMetadataUpdated:
handleChatFirstRemoteFrameArrived:
handleChatInFrequencyChangedNotification:
handleChatInvitationSent:
handleChatMayRequireBreakBeforeMakeChanged:
handleChatOutFrequencyChangedNotification:
handleChatStateChanged:
handleClientDisconnected:
handleContinueHandoffAudioRouteNotification:
handleConversation:addHighlight:fromHandle:
handleConversation:participantUpdateMessage:fromNormalizedHandle:
handleConversation:receivedActivitySession:fromHandle:
handleConversation:receivedBlobRecoveryRequest:fromHandle:
handleConversation:receivedBlobRecoveryResponse:fromHandle:
handleConversation:receivedEndorsementForMember:fromHandle:
handleConversation:registerMessagesGroupUUIDMessage:fromNormalizedHandle:
handleConversation:removeActivitySession:fromHandle:
handleConversation:removeHighlight:fromHandle:
handleConversation:updateActivity:fromHandle:
handleConversation:updateActivityImage:fromHandle:
handleConversation:updateGuestMode:fromHandle:
handleConversationHandoffRecommendationChangedNotification:
handleConversationHandoffRouteIdentifierChangedNotification:
handleCurrentCallsChanged:callDisconnected:
handleDeclineMessage:forConversation:fromHandle:withUpdate:
handleDelegatedPendingMember:forConversation:withGroupUUID:from:transactionUUID:
handleDeviceUnavailableMessageFromHost:
handleDialCallMessageFromClient:destination:device:completion:
handleDisconnectAllCallsMessageFromClient:
handleDisconnectCallMessageFromClient:
handleDisconnectCurrentCallAndActivateHeldMessageFromClient:
handleEncryptedLetMeInRequest:fromHandle:context:
handleEncryptedLetMeInResponse:fromHandle:context:
handleEncryptedMessageWithin:fromHandle:context:
handleEndActiveAndAnswerMessageFromClient:
handleEndHeldAndAnswerMessageFromClient:
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleForIdentifier:error:
handleFrequencyChangedTo:inDirection:forCallsWithUniqueProxyIdentifiers:
handleFrequencyDataChanged:inDirection:forCalls:
handleGroupCallMessageFromClient:
handleHardPauseDigitsAvailabilityMessageFromHost:
handleHoldActiveAndAnswerMessageFromClient:
handleHoldCallMessageFromClient:
handleIDSDeviceListChangedNotification:
handleIncomingCallMessageFromHost:fromPairedDevice:
handleInvitationMessage:forConversation:fromHandle:
handleInvitationMessageForLetMeIn:forConversation:pendingConversation:link:fromHandle:
handleInvitationSentMessageFromHost:
handleLocalApprovalOfMember:forConversation:
handleLocalFrequencyChanged:
handleLocalMeterLevelChanged:
handleLocalRejectionOfMember:forConversation:
handleLocalRoutesByUniqueIdentifierUpdated:
handleMessage:forConversation:fromHandle:withUpdate:
handleMeterLevelChanged:inDirection:forCalls:
handleMeterLevelChangedTo:inDirection:forCallsWithUniqueProxyIdentifiers:
handleMutedChanged:
handleNeedsManualInCallSoundsChangeMessageFromHost:
handleNewPendingMember:responseKey:forConversation:withLink:dateInitiatedLMI:
handleNicknameUpdateMessage:forConversation:fromHandle:withUpdate:
handleNotificationName:forCallWithUniqueProxyIdentifier:userInfo:
handlePINCodeEnteredSuccessfully:canceled:fromDevice:isPrimaryDevice:
handlePairedHostDeviceRoutesByUniqueIdentifierUpdated:
handleParticipantWithIdentifier:leftConversationWithGroupUUID:fromHandle:withGroupSessionUpdate:
handleParticipants:joinedConversationWithUpdate:joinContext:fromHandle:
handlePendingMessageDidReceiveCancelNotification:
handlePendingMessageDidReceiveInviteNotification:
handlePickRouteMessageFromClient:
handlePlayDTMFToneForKeyMessage:
handlePullHostedCallsMessageFromClient:destination:completion:
handlePullRelayingCallsMessageFromHost:fromPairedDevice:
handlePushHostedCallsMessageFromHost:completion:
handlePushRelayingCallsMessageFromClient:
handleReceivedLMIDelegateMessage:fromHandle:
handleReceivedLetMeInRequest:toPseudonym:fromHandle:responseKeyData:dateInitiated:
handleReceivedLetMeInResponse:pendingConversation:fromHandle:
handleReceivedLinkCreatedOrChangedMessage:fromHandle:
handleReceivedLinkInvalidatedMessage:fromHandle:
handleReceivedUpdateJoinedMetadataMessage:fromHandle:
handleReceivedVideoUpgradeMessage:forConversation:fromHandle:
handleRemoteApprovalOfMember:forConversation:from:transactionUUID:
handleRemoteFrequencyChanged:
handleRemoteMeterLevelChanged:
handleRemoteRejectionOfMember:forConversation:from:transactionUUID:
handleRemoveMembersMessage:forConversation:
handleRemovedLinkDescriptors:
handleRequestActionMessage:
handleRequestCallContextMessageFromClient:
handleRequestResultWithMomentDescriptor:
handleRequestedAnswerMessage:withBehavior:
handleResetStateMessageFromHost:fromPairedDevice:
handleResetWantsHoldMusicFromHost:
handleRespondedElsewhereMessage:forConversation:fromHandle:
handleRespondedElsewhereMessage:forConversation:fromHandle:withAliases:
handleRoutesByUniqueIdentifierUpdated:
handleSendHardPauseDigitsMessageFromClient:
handleSendingAudioChanged:
handleSessionStateChanged:
handleSetTTYTypeMessage:
handleSetUplinkMutedMessage:
handleSharePlayTrigger:
handleSpringBoardPIDChanged:
handleSuppressRingtoneMessage:
handleSwapCallsMessageFromClient:
handleTrigger:
handleType
handleTypeAsString:
handleTypeForTUHandle:
handleUngroupCallMessageFromClient:
handleUnholdCallMessageFromClient:
handleUpdateCallContextAvailableMessageFromHost:
handleUpdateCallDisplayContextMessageFromHost:
handleUpdateCallModelMessageFromHost:
handleUpdateFailureExpectedMessageFromHost:
handleUpdateRemoteCallStateMessageFromHost:
handleUpdateRemoteUplinkMutedMessageFromHost:
handleUpdateRoutesMessageFromHost:
handleUpdateSupportsEmergencyFallbackMessageFromHost:
handleUpdateSupportsTTYWithVoiceMessageFromHost:
handleUpdateSystemVolumeMessageFromHost:
handleUpdatedPairedHostDeviceRoutes:
handleUpdatedPropertiesAfterChangesInBlock:
handleUpgradeMessage:forConversation:fromHandle:withUpdate:
handleUserInteractionsWithBlock:
handleWithDestinationID:
handleWithTUHandle:
handleWithTULabeledHandle:
handlesWithTUHandles:
handoffActivityUserInfo
handoffAudioController
handoffAudioDeviceTimeout
handoffContext
handoffDynamicIdentifier
handoffEligibility
handoffEligibleConversation
handoffIdentifier
handoffIdentifierAtIndex:
handoffIdentifierType
handoffIdentifiers
handoffIdentifiersCount
handoffRecipientParticipant
handoffUPlusOneLeaveDelay
handoffUPlusOneLeaveTimeout
hardPause
hardPauseAvailable
hardPauseDigitsState
hardPauseState
hardwareControlsBroadcaster
hasAccountUUIDString
hasActionDescription
hasActiveAccounts
hasActiveAudioSession
hasActivity
hasActivityContext
hasActivityIdentifier
hasActivityMetadata
hasActivitySession
hasAddCallAllowed
hasAlias:
hasAmbiguityState
hasApplicationContext
hasAssociatedPseudonym
hasAssociation
hasAssociationVoucher
hasAudio
hasAudioFinished
hasAudioInterruption
hasAudioRouteUniqueIdentifier
hasAvMode
hasAvcData
hasAvcIdentifier
hasBeenExpiredForAtLeast:
hasBeenRedirected
hasBeenUnlockedBlock
hasBundleIdentifier
hasBundleURLString
hasCallDirectoryExtensionIdentifier
hasCallDirectoryLabel
hasCallDirectoryLocalizedExtensionContainingAppName
hasCallStartedConnectingWithUUID:
hasCalledStop
hasCallerNameFromNetwork
hasCellularSettingsRemediation
hasCheckInMessage
hasCleanedUp
hasCollaborationIdentifier
hasCompanyName
hasCompletedDescription
hasConnected
hasContactIdentifier
hasContactName
hasContextIdentifier
hasConversationGroupUUIDString
hasConversationID
hasConversationMessageBytes
hasConversationProviderIdentifier
hasCreationDateEpochTime
hasCurrentAudioCalls
hasCurrentVideoCalls
hasDateAndTimeSettingsRemediation
hasDestinationID
hasDeviceType
hasDisconnectedReason
hasEnclosedEncryptedType
hasEncryptedData
hasEncryptedMessage
hasEndAndAnswerAllowed
hasEnded
hasFaceTimeAudioAvailable
hasFaceTimeVideoAvailable
hasFallbackApplicationName
hasFallbackURL
hasFamilyName
hasFromHandle
hasGeneratorDescriptor
hasGeneratorID
hasGeneratorVersion
hasGivenName
hasGroupUUIDString
hasGuestModeEnabled
hasHandle
hasHandleType
hasHardPauseAvailable
hasHardPauseDigits
hasHardPauseState
hasHighlightIdentifier
hasHoldAllowed
hasHoldAndAnswerAllowed
hasHostCallCreationTime
hasIdentifier
hasIdentifier:
hasIdentifierUUIDString
hasImage
hasInitiator
hasInviteData
hasIsActivated
hasIsGFTDowngradeToOneToOneAvailable
hasIsGondolaCallingAvailable
hasIsLetMeInApproved
hasIsLightweight
hasIsMirageAvailable
hasIsMomentsAvailable
hasIsScreenSharingAvailable
hasIsSystemActivity
hasIsUPlusNDowngradeAvailable
hasIsUPlusOneScreenSharingAvailable
hasIsoCountryCode
hasJoined
hasJoinedMetadata
hasLabel
hasLeaveReason
hasLetMeInDelegationHandle
hasLetMeInDelegationUUID
hasLightweightPrimary
hasLightweightPrimaryParticipantID
hasLinkLifetimeScope
hasLinkName
hasLocalMember
hasLocalSenderIdentityAccountUUIDString
hasLocalSenderIdentityUUIDString
hasLocalizedName
hasLocalizedServiceName
hasLocalizedShortName
hasLocallyCreated
hasLocation
hasLocationSettingsRemediation
hasMapName
hasMaximumCallGroups
hasMaximumCallsPerCallGroup
hasMediaBlob
hasMergeable
hasMessage
hasMessageSendTime
hasMessagesGroupName
hasMessagesGroupUUIDString
hasMetadata
hasMiddleName
hasMirageHandshakeData
hasNamePrefix
hasNameSuffix
hasNickname
hasNotificationStyles
hasOBSOLETEProtoMomentsAvailable
hasOngoingDescription
hasOptions
hasOriginalRingtoneSoundURLString
hasOriginatorHandle
hasParticipantAssociation
hasPhoneticRepresentation
hasPreferredBroadcastingAttributes
hasPrefix:
hasPrimaryAvcIdentifier
hasPrimaryHandle
hasPrimaryIdentifier
hasPrivateKey
hasProtoCallCapabilitiesState
hasProtoCallModel
hasProtoCallModelState
hasProtoCannotBeAnswered
hasProtoCannotRelayAudioOrVideoOnPairedDevice
hasProtoConferenced
hasProtoCurrentlyPicked
hasProtoDisconnectedReason
hasProtoDisplayContext
hasProtoEmergency
hasProtoExpectedEndpointOnMessagingDevice
hasProtoFailureExpected
hasProtoGuest
hasProtoHasSentInvitation
hasProtoMomentsV2Available
hasProtoOriginatingUIType
hasProtoOutgoing
hasProtoPersonNameComponents
hasProtoPriority
hasProtoProtocolVersion
hasProtoProvider
hasProtoRemoteUplinkMuted
hasProtoSOS
hasProtoSenderMuteUplink
hasProtoShouldSuppressInCallUI
hasProtoShouldSuppressRingtone
hasProtoSoundRegion
hasProtoStatus
hasProtoSupportsEmergencyFallback
hasProtoSupportsRelay
hasProtoSupportsTTYWithVoice
hasProtoTimeConnected
hasProtoUUID
hasProtoUpgradeSessionUUID
hasProtoUplinkMuted
hasProtoVideo
hasProtoVoicemail
hasProtoWantsHoldMusic
hasProtoWantsVideo
hasProviderIdentifier
hasPseudonym
hasPseudonymExpirationDateEpochTime
hasPublicKey
hasQueuedHardPauseDigits
hasReceivedAccept
hasReceivedFirstRemoteFrame
hasReceivedLetMeInRequest
hasReceivedMessageType
hasRecoverMessage
hasRelaySupport:
hasReportData
hasRequestActionType
hasRequestBlobRecoveryOptions
hasRestrictionsInRetailEnvironment
hasRingtoneSoundURLString
hasRoute
hasSKEBlob
hasSceneAssociationBehavior
hasSendToVoicemailAllowed
hasSender
hasSentInvitation
hasSet
hasSharePlayProtocolVersion
hasShouldAssociateScene
hasShouldCheckAllGenerators
hasShouldSuppressInCallUI
hasSourceIdentifier
hasStagedActivitySession
hasStarted
hasStartedConnecting
hasStartedOutgoing
hasSubtitle
hasSuggestedName
hasSupportsAddCall
hasSupportsAudioAndVideo
hasSupportsAudioOnly
hasSupportsContinuationOnTV
hasSupportsEmergency
hasSupportsGrouping
hasSupportsHolding
hasSupportsLeaveContext
hasSupportsRecents
hasSupportsSendingToVoicemail
hasSupportsUnambiguousMultiPartyState
hasSupportsUngrouping
hasSupportsVoicemail
hasSwappable
hasTakingCallsPrivateAllowed
hasTargetContentIdentifier
hasTimebase
hasTimestampAsTimeIntervalSinceReferenceDate
hasTitle
hasTokenPrefixedURI
hasUUIDString
hasUniqueIdentifier
hasUniqueProxyIdentifier
hasUnsafeData
hasUpdateMessage
hasUpdatedDateEpochTime
hasValidationSource
hasValue
hasVersion
hasVideo
hasVoIPBackgroundMode
hasVoIPNetworkExtensionEntitlement
hasWiFiSettingsRemediation
hash
held
highlightIdentifier
hold
holdActiveAndAnswerCall:
holdAllowed
holdAndAnswerAllowed
holdCall:
holdCallWithUniqueProxyIdentifier:
holdCalls:whileUnholdingCalls:
host
hostCallCreationTime
hostMessagingDelegate
hostOnCurrentDevice
iCloudAccount
iconTemplateImageData
iconWithSystemImageName:
identificationCategory
identifier
identifierUUIDString
identifierWithPid:
identifiers
identifiersForSessionInvitationWithMessage:
identifiersWaitingForAcknowledgement
identifiersWithPendingCoalescingBlocks
identities
identityForEmbeddedApplicationIdentifier:
idsDestination
idsDestinationForActiveParticipant:
idsDeviceFromUniqueID:
idsDeviceID
idsDeviceIdentifier
idsDictionaryRepresentation
idsFirewallBatchSize
idsFirewallCHExpiryTimeDays
idsFromID
idsPeersForHandle:video:completionHandler:
idsQueryController
idsReportsReceived:forConversation:
idsReportsReceived:forSessionWithUUID:
idsService
idsSession
ignoreLMIRequests
ignoreMute
ignoresBluetoothDeviceUID
imAccountForActionBlock
imDaemonDidConnect:
image
imageData
imageURL
imageURLForCXSandboxExtendedURL:
inCallServiceProcessObserver
inCallServiceProcessState
inCallSoundRegion
inEarAudioRouteAvailable
inFrequencyLevel
inProcess_isCallingSupported
inactiveLinkCacheLimit
inactiveLinkPseudonymExpiry
includeMetricsReport:onConversationWithUUID:
includesCallsInRecents
incomingCall
incomingCallFilter
incomingCallInvitationPreferences
incomingCalls
incomingChatGenerator
incomingPendingConversations
incomingPendingConversationsByGroupUUID
incomingPendingConversationsByGroupUUID:
incomingSessionProviderGenerator
incomingVideoCall
indexesOfObjectsPassingTest:
individualAudioVideoToggleEnabled
inflightAVCBlobRecoveryBlocksByIdentifier
init
initAsInitiatorWithSessionProvider:
initAsInitiatorWithSessionProvider:identifiers:
initAsReceiverWithSessionProvider:remoteDestination:remoteDevice:remoteProtocolVersion:identifiers:
initAsReceiverWithSessionProvider:remoteFromID:remoteProtocolVersion:
initAsReceiverWithSessionProvider:remoteProtocolVersion:
initFileURLWithPath:
initForReadingWithError:
initIncomingWithBackingCallSource:UUID:update:
initIncomingWithSession:remoteHandle:wantsVideo:remoteInviteDictionary:
initOutgoingTo:isVideo:isRelayed:GUID:
initOutgoingWithDialRequest:
initOutgoingWithJoinConversationRequest:
initOutgoingWithRequestedStartCallAction:backingCallSource:
initOutgoingWithSession:UUID:remoteHandle:wantsVideo:isRelaying:
initOutgoingWithUpdate:callUUID:backingCallSource:isExpanseProvider:
initWithAVCRequest:session:
initWithAccount:destinations:options:
initWithAccount:destinations:transportType:
initWithAccount:options:
initWithAccountID:primaryDeviceID:phoneNumberURI:availableDeviceSlots:allowedSecondaryDeviceIDs:
initWithActivity:locallyInitiated:timestamp:isFirstJoin:
initWithActivity:uuid:locallyInitiated:timestamp:isFirstJoin:
initWithApplicationController:queue:
initWithArray:
initWithAttributes:
initWithAvailability:photoRequestSuccessCount:photoRequestFailureCount:medianRequestDuration:meanRequestDuration:
initWithAvailability:supportedMediaTypes:
initWithBool:
initWithBundleIDs:states:
initWithBundleIdentifier:
initWithBundleIdentifier:allowPlaceholder:error:
initWithBundleIdentifier:flags:reason:name:
initWithBundleIdentifier:flags:reason:name:withHandler:
initWithBundleIdentifier:metadata:applicationContext:activityIdentifier:
initWithBundleIdentifier:metadata:applicationContext:uuid:activityIdentifier:fallbackApplicationName:
initWithBundleIdentifier:pid:
initWithBundleIdentifiers:queue:
initWithBundleType:
initWithBytesNoCopy:length:freeWhenDone:
initWithCHManager:
initWithCHManager:queue:
initWithCall:
initWithCall:contactIdentifier:serialQueue:
initWithCallCapabilitiesState:
initWithCallCenter:
initWithCallCenterObserver:
initWithCallCenterObserver:inCallServiceProcessObserver:springBoardProcessObserver:callCenter:featureFlags:queue:
initWithCallCenterObserver:transactionManager:queue:
initWithCallDisplayContext:
initWithCallFilterController:
initWithCallHistoryController:
initWithCallSource:configuration:
initWithCallSource:queue:
initWithCallSource:queue:featureFlags:shouldUseIDSDemuxer:
initWithCallStateController:queue:
initWithCallType:callState:copresenceActivityType:
initWithCallUUID:
initWithCallUUID:attributes:
initWithCallUUID:callUUIDToGroupWith:
initWithCallUUID:digits:type:
initWithCallUUID:groupUUID:
initWithCallUUID:handle:
initWithCallUUID:muted:
initWithCallUUID:onHold:
initWithCallUUID:relaying:
initWithCallUUID:sendingVideo:
initWithCallUUID:ttyType:
initWithCallUUID:videoEnabled:
initWithCallUUID:videoPresentationSize:
initWithCallUUID:videoPresentationState:
initWithCalls:
initWithCapabilities:callSource:queue:
initWithCapabilities:queue:
initWithCapabilityInfo:
initWithCapacity:
initWithCategory:mode:
initWithChar:
initWithClientUUID:transportType:
initWithCoder:
initWithConduit:
initWithConfiguration:
initWithConfiguration:callSource:
initWithConnection:queue:
initWithContactProvider:
initWithContactsDataSource:
initWithContentsOfURL:error:
initWithContentsOfURL:options:error:
initWithContext:linkMetadata:fallbackURL:invitationURL:supportsContinuationOnTV:title:subTitle:imageData:preferredBroadcastingAttributes:sceneAssociationBehavior:
initWithContextIdentifier:actionDescription:ongoingDescription:completedDescription:
initWithConversation:
initWithConversationID:timebase:
initWithConversationLink:localMember:queue:
initWithConversationLink:otherInvitedHandles:sendLetMeInRequest:
initWithConversationManager:featureFlags:
initWithConversationManager:queue:invitationResolver:
initWithConversationProviderManager:
initWithData:
initWithDataSource:
initWithDataSource:deviceLockObserver:callCenterObserver:callDirectoryStoreBuilder:queue:
initWithDataSource:queue:appPolicyManager:
initWithDataSource:serialQueue:featureFlags:
initWithDataSources:queue:
initWithDelegate:
initWithDelegate:queue:
initWithDelegate:withConfig:
initWithDescriptor:
initWithDestination:
initWithDestinationID:
initWithDialRequest:
initWithDictionary:
initWithDictionaryRepresentation:
initWithDigits:countryCode:
initWithDigits:isHardPause:
initWithDisplayContext:call:serialQueue:
initWithDomain:code:userInfo:
initWithEncryptedMessage:enclosedType:link:
initWithEnvironmentName:namedDelegatePort:queue:
initWithExplanation:target:attributes:
initWithExportedObject:
initWithFaceTimeIDSChat:
initWithFaceTimeInviteDictionary:
initWithFeatureFlags:
initWithFormat:arguments:
initWithGroupID:participantDestinationIDs:callerID:account:queue:isOneToOneModeEnabled:isLightweightMember:avLess:
initWithGroupSessionProvider:
initWithGroupSessionProvider:featureFlags:
initWithGroupUUID:originator:pseudonym:publicKey:
initWithHandle:label:isSuggested:
initWithHandle:nickname:
initWithHandle:nickname:joinedFromLetMeIn:
initWithHandle:tokenPrefixedURI:data:encryptedData:
initWithHandleType:notificationStyles:
initWithHandoffActivityUserInfo:
initWithHandoffContext:backingCallSource:
initWithHandoffIdentifier:
initWithIDSChat:
initWithIDSDevice:
initWithIDSDictionaryRepresentation:
initWithIMAVChat:
initWithIdentifier:
initWithIdentifier:bundleIdentifier:
initWithIdentifier:bundleIdentifier:fallbackLocalizedName:
initWithIdentifier:context:
initWithIdentifier:groupUUID:activities:applicationController:delegate:queue:systemStateObserver:
initWithIdentifier:handle:
initWithIdentifier:handle:avcData:
initWithIdentifier:handle:avcData:senderCorrelationIdentifier:
initWithIdentifier:handle:senderCorrelationIdentifier:
initWithIdentifier:pluginName:
initWithIdentifier:revision:handle:
initWithIdentifier:version:
initWithIdsService:
initWithInputURL:outputURL:identifier:operation:completionBlock:queue:
initWithInt:
initWithInteger:
initWithJoinConversationRequest:
initWithKeysToFetch:
initWithLeaveReason:
initWithLimit:timeLimit:
initWithLongLong:
initWithMachServiceName:
initWithManager:
initWithMessage:assertion:applicationShouldPostIncomingCall:
initWithMetadata:applicationContext:uuid:activityIdentifier:
initWithMoments:remoteIDSDestinations:callCenterObserver:
initWithName:
initWithName:error:
initWithName:knownIdentifiers:deviceModel:capabilities:
initWithName:service:
initWithName:service:queryController:
initWithNotificationCenter:
initWithNotificationName:queue:callback:
initWithNotifyObserver:queue:
initWithObject:queue:
initWithObjectsAndKeys:
initWithParticipantID:data:delegate:queue:
initWithPersonNameComponents:
initWithPhotosAppAssetIdentifier:
initWithPredicate:context:
initWithPrefixedURI:
initWithPriority:
initWithProvider:
initWithProviderIdentifier:
initWithProviderManager:
initWithPseudonym:publicKey:groupUUID:originatorHandle:
initWithPseudonym:publicKey:groupUUID:originatorHandle:creationDate:expirationDate:invitedMemberHandles:locallyCreated:linkName:linkLifetimeScope:
initWithQueue:
initWithQueue:UUID:groupUUID:groupSession:messagesGroupUUID:locallyCreated:localMember:initiator:remoteMembers:pendingMembers:otherInvitedHandles:lightweightMembers:activity:link:report:fromStorage:avMode:applicationController:
initWithQueue:UUID:groupUUID:groupSession:messagesGroupUUID:locallyCreated:localMember:initiator:remoteMembers:pendingMembers:otherInvitedHandles:lightweightMembers:activity:link:report:fromStorage:avMode:applicationController:featureFlags:systemStateObserver:applicationPolicyManager:
initWithQueue:activityCommunicator:callCenter:featureFlags:
initWithQueue:block:
initWithQueue:callContainer:sessionMessenger:
initWithQueue:conversationManager:callCenter:
initWithQueue:conversationManager:networkSupport:serverBag:featureFlags:invitationResolver:
initWithQueue:coreTelephonyClient:emergencyCallbackCapabilities:
initWithQueue:featureFlags:
initWithQueue:fileTransferController:mediaAssetManager:callCenterObserver:
initWithQueue:proximitySensorObserver:voiceOverObserver:
initWithQueue:reportingController:persistenceController:linkManager:cpApplicationController:invitationResolver:pendingMembershipTracker:featureFlags:applicationPolicyManager:
initWithQueue:reportingController:persistenceController:linkManager:invitationResolver:pendingMembershipTracker:featureFlags:
initWithQueue:routeController:callCenterObserver:interfaceOrientationObserver:proximitySensorObserver:voiceOverObserver:
initWithQueue:shouldRegisterForECBMNotification:
initWithRelayInviteDictionary:
initWithRelayMessage:outgoing:
initWithRelayService:thumperService:
initWithRemoteMembers:otherInvitedHandles:
initWithReportingController:cpApplicationController:invitationResolver:
initWithRequiredCapabilities:requiredMissingCapabilities:
initWithResolver:withSystemStatusPublisher:queue:
initWithSenderIdentityUUID:
initWithSerialQueue:
initWithSerialQueue:timeout:
initWithService:
initWithService:account:accessGroup:
initWithService:chManager:featureFlags:serverBag:queue:
initWithService:queue:
initWithServiceName:
initWithSession:queue:
initWithSession:remoteHandle:wantsVideo:
initWithSessionCreationBlock:transportToken:delegate:queue:reportingHierarchyToken:avMode:videoEnabled:captureSessionCreationBlock:
initWithSessionInfo:userInfo:frameworksToCheck:
initWithSessionProvider:
initWithSessionProvider:isInitiator:remoteDestination:remoteDevice:remoteProtocolVersion:identifiers:
initWithSessionProvider:isInitiator:remoteFromID:remoteProtocolVersion:
initWithSessionProvider:isInitiator:remoteProtocolVersion:
initWithSessionUUID:originator:type:
initWithSet:
initWithSoundType:provider:video:region:
initWithSourceVersion:
initWithStartCallAction:
initWithStreamToken:
initWithStreamToken:requesterID:
initWithStreamToken:requesterID:delegate:dispatchQueue:
initWithSuiteName:
initWithTUConversation:
initWithTUConversationReport:
initWithTURoute:
initWithTUSenderIdentity:
initWithTargetContentIdentifier:shouldAssociateScene:
initWithTimeIntervalSince1970:
initWithTimeIntervalSinceReferenceDate:
initWithTinCanIDSChat:
initWithTransportToken:configuration:delegate:queue:
initWithTransportToken:delegate:queue:reportingHierarchyToken:oneToOneModeEnabled:avMode:videoEnabled:report:serviceName:
initWithTransportType:payload:
initWithType:
initWithType:groupUUID:link:
initWithType:uniqueProxyIdentifier:
initWithType:value:
initWithType:value:normalizedValue:
initWithType:value:siriDisplayName:
initWithURI:andLastSeenDate:
initWithUUID:
initWithUUID:accountUUID:ISOCountryCode:localizedName:localizedShortName:localizedServiceName:handle:
initWithUUID:andAccountID:andSlot:
initWithUUID:carrierPhoneNumbers:
initWithUUID:description:serviceName:isoCountryCode:handle:shortLabel:
initWithUUID:groupUUID:
initWithUUID:groupUUID:provider:
initWithUUID:handle:
initWithUUID:isVideo:handle:
initWithUUIDString:
initWithUniqueIdentifier:name:
initWithUniqueProxyIdentifier:
initWithUniqueProxyIdentifier:configuration:
initWithUniqueProxyIdentifier:endpointOnCurrentDevice:
initWithUniqueProxyIdentifier:endpointOnCurrentDevice:notificationCenter:
initWithUnprefixedURI:
initWithUnsignedLongLong:
initWithVoiceOverObserver:
initWithVoucherManager:
initializeNewCallWithDeviceRole:reportingHierarchyToken:
initiateModernFTInviteForAction:destinations:excludedIMAVDestinations:joinCallActionToFulfill:
initiatePendingConversationForLink:localMember:isVideoEnabled:
initiator
inputAudioPowerSpectrumToken
inputAudioPowerSpectrumTokenForIdentifier:
inputFrequencyMeteringEnabled
insertObject:atIndex:
installedProvidersChangedForDataSource:
instancesRespondToSelector:
intValue
integerForKey:
integerForKey:error:
integerValue
intent
interaction
interfaceOrientationObserver
interfaceOrientationPortrait
interfaceWithProtocol:
interruptionHandler
interruptionPriority
interruptionSuppression
invalidate
invalidateAndRefreshThumperCallingCapabilitiesForSenderIdentityWithUUID:
invalidateAndRefreshThumperCallingProvisioningURLForSenderIdentityWithUUID:
invalidateAndRefreshVoLTECallingCapabilitiesForSenderIdentityWithUUID:
invalidateAndRefreshWiFiCallingCapabilitiesForSenderIdentityWithUUID:
invalidateAndRefreshWiFiCallingProvisioningURLForSenderIdentityWithUUID:
invalidateLink:userInteraction:completionHandler:
invalidateLinkWithPseudonym:userInteraction:completionHandler:
invalidateProcessAssertionForBundleIdentifier:
invalidateProcessAssertionForBundleIdentifier:completion:
invalidateProvisioningURL
invalidateTokenForTopic:identifier:
invalidationHandler
invitation
invitationPreferenceWithTUConversationInvitationPreference:
invitationPreferences
invitationPreferencesAtIndex:
invitationPreferencesCount
invitationPreferencesType
invitationResolver
invitationTimeOut
invitationTimeout
invite:additionalPeers:excludingPushTokens:
inviteCompletion
inviteData
inviteDictionaryForCallID:remoteInviteDictionary:nonCellularCandidateTimeout:block:queue:
inviteFailedFromIMHandle:reason:
inviteIDSPeersWithAction:destinations:joinCallActionToFulfill:completion:
inviteIMAVPeersWithAction:tokensToExclude:joinCallActionToFulfill:
inviteTV:toConversation:completion:
inviteTVDevice:toConversation:completion:
invitedHandles
invitedHandlesAtIndex:
invitedHandlesCount
invitedHandlesType
invitedMemberHandles
invitedPushTokens
invitedToIMAVChat:
invoke
invokeDidPrepareIfNecessary:
invokeDidStartIfNecessary:error:
isA2DPRoute
isAVLess
isActivated
isActive
isAirTunes
isAirTunesRouteAvailable
isAnyBluetoothHeadphoneRouteAvailableForAnyCall
isAnyOtherAccountDeviceActive
isAnyPreferredRouteAvailableAndActive
isAnyRouteAvailableWithBluetoothEndpointType:
isAnyRouteAvailableWithUniqueIdentifier:
isAnyRouteAvailableWithUniqueIdentifier:forCall:
isAnyVehicleRouteAvailableForAnyCall
isAnyVehicleRouteAvailableForCall:
isApproved
isAssociated
isAudioAccessoryDevice
isAudioEnabled
isAudioMuted
isAudioMutedForHoldMusic
isAudioPaused
isAudioReady
isAudioSessionActive
isAutomaticUpgradingEnabled
isBeforeDate:
isBlocked
isBluetooth
isBluetoothLE
isBluetoothRouteAvailable
isCSCallingAvailable
isCallEligible:forClient:
isCaller
isCaptioningEnable
isCarAudio
isCarAudioRouteAvailable
isCarPlayConnected
isCarPlayDeviceConnected
isCarPlayRouteAvailable
isCellularDataAllowed
isCellularDataAllowedForChat:
isCellularDataAvailable
isCellularDataPreferred
isClientAllowed:
isComplete
isConferenced
isConnected
isConnecting
isConversation
isCovered
isCurrentlyPicked
isDefaultPairedDevice
isDefaultProvider
isDefaultVoiceSIM
isDestinationIDAllowedThroughDoNotDisturb:providerIdentifier:
isDetectingRaiseToAnswer
isDeviceInAltMode
isDevicePasscodeLocked
isDeviceSupported
isDialAssisted
isDirectFaceTimeAudioCallingCurrentlyAvailable
isDirectFaceTimeVideoCallingCurrentlyAvailable
isDirectTelephonyCallingCurrentlyAvailable
isEligibleForCall
isEligibleForHandoff
isEligibleRouteAvailable
isEligibleRouteAvailableForCall:
isEmergency
isEmergencyCallbackModeEnabled
isEmergencyCallbackPossible
isEmergencyCallingOnWifiAvailable
isEnabled
isEndpointOnCurrentDevice
isEntitledForCapability:
isEqual:
isEqualToAccount:
isEqualToCall:
isEqualToCallProvider:
isEqualToCapabilities:
isEqualToConversationLink:
isEqualToConversationProvider:
isEqualToData:
isEqualToHandle:
isEqualToIgnoringCase:
isEqualToMessage:
isEqualToNumber:
isEqualToParticipant:
isEqualToSet:
isEqualToString:
isEqualToTransport:
isEquivalentToDeviceHandle:
isEquivalentToHandle:
isEquivalentToPseudonym:andPublicKey:
isExhausted
isExpanseConduitProxyEnabled
isExpanseProvider
isExpectedEndpointOnMessagingDevice
isFaceTimeAudioAvailable
isFaceTimePhotosAvailable
isFaceTimePhotosEnabled
isFaceTimePhotosRestricted
isFaceTimePhotosXPCServiceEnabled
isFaceTimeProvider
isFaceTimeVideoAvailable
isFailureExpected
isFileURL
isFromStorage
isGFTDowngradeToOneToOneAvailable
isGestureServiceAvailable
isGondolaCallingAvailable
isGreenTea
isGuestModeEnabled
isGuestModeSupported
isHSATrusted
isHandleLocalPseudonym:provider:
isHandleStringLocalPseudonym:
isHandleStringLocalPseudonym:provider:
isHardPause
isHeld
isHoldAndAnswerAllowed
isHost
isHostedOnCurrentDevice
isIMDaemonConnected
isInCallUIActive
isInCanvas
isInEarAudioRouteAvailable
isIncoming
isIncomingCommunicationBlockedForHandle:
isInitiator
isInstalled
isInterfaceOrientationPortrait
isInvitation
isJoined
isJoiningConversationWithLink
isJunk
isKindOfClass:
isKnownCaller
isLetMeIn
isLetMeInApproved
isLightweight
isLightweightMember
isLightweightPrimaryInitiated
isLoaded
isLocalAccountHandle
isLocalClientActive
isLocalParticipant
isLocallyCreated
isLocallyInitiated
isManagingCallWithUUID:
isManagingPendingConversationForCallWithUUID:
isMediaAllowedForChat:
isMemberOfClass:
isMessageWaiting
isMicrophoneMuted
isMirageAvailable
isModernGFTEnabled
isMomentsAvailable
isMomentsAvailableForChat:
isMomentsDisabled
isMutedForIdentifier:
isMutuallyExclusiveCall
isNearby
isObserving
isOnEmergencyCall
isOnHold
isOneToOneEnabled
isOneToOneHandoffOngoing
isOneToOneModeEnabled
isOnline
isOutgoing
isOutputFrequencyMeteringEnabled
isPTT
isPairedDevice
isPendingConversation
isPermittedToUseBluetoothAccessories
isPermittedToUsePrivateAPI
isPhoneCallAudioCategory:
isPlaceholderActivity
isPlaying
isPreferred
isPreferredAndActive
isPreferredDevice
isPreparedToStop
isPrimary
isProcessSuspended
isProviderForeground:
isProviderInstalled:
isProximitySensorCovered
isProximitySensorEnabled
isPseudonym
isPseudonymHandleForProvider:completionHandler:
isQuickRelaySupported
isRTT
isRaiseToEarGestureEnabled
isRaiseToEarGestureSupported
isRead
isReceiver
isReceiverRouteAvailable
isRedial
isRegistered
isRelayCallingEnabled
isRelayCallingEnabledForDeviceWithID:
isRelayCallingGuaranteed
isRelaying
isRemote
isRemoteAudioEnabled
isRemoteMomentsAvailable
isRemoteScreenEnabledForParticipant:
isRemoteUplinkMuted
isRemoteVideoEnabled
isRemoteVideoPaused
isRepresentedByRemoteMembers:andLink:
isRoamingEnabled
isRunningForegroundForVoIPApplication:
isSOS
isScreenSharingActivity
isScreenSharingAvailable
isSendingAudio
isSendingAudioData
isSendingAudioForIdentifier:
isSendingVideo
isSendingVideoExpected
isServiceEnabledForTelephonySubscriptionLabelIdentifier:
isSharePlayAvailable
isSharePlayVersionCheckEnabled
isSignedIntoiCloud
isSignificantChangeFromAttributes:
isSilenceUnknownFaceTimeCallersEnabled
isSilenceUnknownTelephonyCallersEnabled
isSpeaker
isSpeakerRouteAvailable
isSpeaking
isStaticActivity
isSubscribed
isSupported
isSymbolicLinkAtURL:
isSynchronous
isSystemActivity
isSystemProvider
isTTY
isTelephonyDevice
isTelephonyProvider
isThirdPartyVideo
isThumperCallingSupportedForAccountID:
isThumperRegisteredDeviceID:forThumperAccountID:
isTinCanProvider
isTrackingVoIPCallForBundleIdentifier:
isTranscriptionEnabled
isUPlusNDowngradeAvailable
isUPlusOneScreenShareAvailable
isUPlusOneScreenSharingAvailable
isUnansweredOutgoingOneToOneConversation:
isUnderlyingUplinkMuted
isUnknownAddress:normalizedAddress:forBundleIdentifier:
isUnknownAddress:normalizedAddress:forBundleIdentifier:reply:
isUnknownCall:
isUpgrade
isUpgradingCallWithUUID:
isUplinkMuted
isUsingAirplay
isValidLocalHandle:
isValidLocalHandle:activeLocalHandles:provider:
isValidOutgoingCallerID:
isValidated
isVideoEnabled
isVideoPaused
isVideoPausedToStart
isVideoUpgradeFromCall:
isVisible
isVoLTECallingAvailable
isVoiceMailMWI
isVoicemail
isWaitingForRemoteJoinForConversationUUID:
isWaitingToJoinForConversationUUID:
isWaitingToPruneParticipants
isWatchDevice
isWebCapableFaceTimeAvailableForDestination:
isWiFiAllowed
isWiFiAllowedForChat:
isWiFiCallingAvailable
isWiFiEmergencyCallingAllowed
isWifiCallingAvailable
isWindowed
isWiredHeadphones
isWiredHeadset
isWirelessHeadset
isoCountryCode
item
joinCallAction
joinCallActivity
joinConversationWithConversationRequest:
joinConversationWithRequest:
joinExistingConversationWithUUID:context:
joinRequestForApplicableConversationWithHandoffEligibility:
joinUsingContext:
joinUsingContext:localParticipantAVCData:members:otherInvitedHandles:participantDestinationIDs:link:report:stagedActivitySession:mirageHandshakeBlob:activitySession:
joinWithOptions:
joined
joinedFromLetMeIn
joinedFromLink
joinedMetadata
junkConfidence
keyEnumerator
keyPathForActiveCall
keychainItem
kickMember:
kickMember:conversation:
kickMember:conversationUUID:
kickMemberRetryCount
kickParticipants:
kickedMembers
kickedParticipants
knownIdentifiersByHandleType
label
labeledHandlesForContactWithIdentifier:
lastObject
lastPathComponent
lastRebroadcastTime
lastSavedAccountIDByCapability
latestRecentOutgoingFacetimeCallWithRemoteParticipantHandle:sinceDate:noDeletedCallsPredicate:
latestRemoteAttributes
launchAppForActivitySession:options:completion:
launchAppForDialRequest:completion:
launchAppForDialRequest:reply:
launchApplicationForActivitySessionUUID:completionHandler:
launchApplicationForActivitySessionUUID:forceBackground:completionHandler:
launchScreenSharingAppIfNecessary
leave
leaveAVLessConversationsIfNecessaryForCall:
leaveActivitySession:onConversationWithUUID:
leaveActivitySessionWithUUID:
leaveAllConversations
leaveConversation:withCallUUID:reason:
leaveConversationForCallUUID:endedReason:
leaveConversationWithUUID:
leaveConversationWithUUID:withContext:
leaveGroupSession
leaveGroupSessionWithContext:
leaveGroupSessionWithOptions:
leaveReason
leaveReasonAsString:
leaveUsingContext:
leaveWithOptions:
legacyAddSecondaryThumperDeviceWithIDSDeviceIdentifier:
legacyRecheckAccountStatusForCapability:
legacyRemoveSecondaryThumperDeviceWithIDSDeviceIdentifier:
legacySystemCapabilities
length
letMeInDelegationHandle
letMeInDelegationUUID
letMeInKeyAgreement
letMeInRequestNotificationTimeout
letMeInRequestRecoveryTimeout
letMeInRequestState
letMeInResponseInvitationPreferences
lightweight
lightweightMembers
lightweightMembersAtIndex:
lightweightMembersCount
lightweightMembersType
lightweightPrimary
lightweightPrimaryParticipantIdentifier
lightweightRetryCount
link
linkAtIndex:
linkLifetimeScope
linkLifetimeScopeAsString:
linkManager
linkManager:removedLinkDescriptorsFromIDSSignal:
linkManager:removedLinkDescriptorsFromValidityCheck:
linkManager:updatedLinkDescriptorsFromIDSSignal:
linkManager:updatedLinkDescriptorsFromSync:
linkName
linkPseudonymExpiry
linkSyncRecoverFailureLimit
linkSyncRecoverTimeLimit
linkSyncStateIncludeLinks:WithCompletion:
linkSyncStateWithIncludeLinks:completion:
linkType
linkWithTUConversationLink:includeGroupUUID:
linkedUserURIs
links
linksCount
listenForActivityType:dynamicIdentifier:
listener:shouldAcceptNewConnection:
listeningIdentifiersByActivityType
livePhotoXPCServiceEnabled
loaded
localAccountHandle
localBundleIDForActivityIdentifier:
localCallerID
localCallerIDForProvider
localCapabilities
localClientActive
localConversationParticipantWithDataToSendToDestinationIDs:
localDevice
localDeviceID
localDeviceUniqueID
localInviteDictionary
localLandscapeAspectRatio
localMember
localMemberForProvider:fromHandle:members:lightweightMembers:activeLocalHandles:
localParticipant
localParticipantAssociation
localParticipantData
localParticipantDataToSendToDestinationIDs:
localParticipantDataWithVersion:
localParticipantIdentifier
localParticipantType
localParticipantUUID
localPortraitAspectRatio
localPortraitAspectRatioForChat:
localProvider
localProviderWithIdentifier:
localProvidersByIdentifier
localProvidersByIdentifierForClient:
localProvidersByIdentifierForRemoteClients:
localRouteController
localRoutesByUniqueIdentifier:
localSenderIdentity
localSenderIdentityAccountUUID
localSenderIdentityAccountUUIDString
localSenderIdentityUUID
localSenderIdentityUUIDString
localThumperAccounts
localThumperDeviceID
localizedCallerImageURL
localizedCallerName
localizedDeviceCategory
localizedFailureReason
localizedHandoffRecipientDeviceCategory
localizedLabel
localizedName
localizedServiceName
localizedShortName
localizedStringForKey:value:table:
locallyCreated
location
lockStateNotificationToken
lockStateObserver
lockdownModeEnabled
machOUUIDs
mailboxType
mainBundle
mainDisplay
mainQueue
makeLocalRouteController
makePairedHostDeviceRouteController
manageDesignatedMembers:withType:
mapTableWithKeyOptions:valueOptions:
matchesDefaultProviderIdentifier:
matchingSim
maxActiveParticipantFetchRetries
maxJunkLevel
maxKickMemberRetries
maxRemoteMirageParticipants
maxVideoDecodesAllowed
maximumCallGroups
maximumCallsPerCallGroup
maximumNumberOfInvitedMembers
mayRequireBreakBeforeMake
maybeAddComplementaryAssociationVoucherFor:toLocalMemberOf:completion:
meanFromDoubleNumbers:
meanRequestDuration
mediaAssetManager
mediaBlob
mediaPlaybackOnExternalDevice
mediaPrioritiesChangedForConversation:
mediaRouteIdentifier
mediaServicesWereResetNotification:
mediaSystemIdentifier
mediaType
medianFromNumbers:
medianRequestDuration
memberExistsForParticipantDestination:groupSessionParticipantUpdate:
memberExistsForParticipantDestination:members:
memberHandlesAwaitingInvitesToLink
memberHandlesEligibleForLinkApproval
memberIdentifiers
memberWithHandle:
membersCount
membersType
mergeFrom:
mergeSession:
mergeable
mergedCallUpdate
messageProxy
messageRetryFailedForConversation:
messageRetryIntervalMillis
messageRetryMaxAttempts
messageRetryStartedForConversation:
messageRetrySucceededForConversation:
messagesForMailboxType:limit:offset:error:
messagesForMailboxType:read:limit:offset:error:
messagesGroupName
messagesGroupUUID
messagesGroupUUIDString
messagingConnectionCouldNotEstablishLinkForCalls:didStartConnecting:
messagingConnectionEndedForCalls:didStartConnecting:
messagingConnectionFailedForCalls:didStartConnecting:
messagingHandleTypeFor:
messenger
messenger:handledMessage:fromDestination:device:
messengerConnectionCouldNotEstablishLink:forIdentifiers:didStartConnecting:
messengerConnectionEnded:forIdentifiers:didStartConnecting:
messengerConnectionFailed:forIdentifiers:didStartConnecting:
metadata
methodSignatureForSelector:
middleName
migrateAnnounceCalls
migrateConversationLinkBaseURL
minusSet:
mirageEnabled
mirageHandshakeBlobCreationBlock
mirageHandshakeData
mixesVoiceWithMedia
mobileCodesToISOCountryCode
mobileCountryCode
mobileCountryCodeForSubscription:error:
mobileNetworkCode
mobileNetworkCodeForSubscription:error:
mochiEnabled
mockAudioCategory
mockAudioInterruptionActivationStateObserver
mockAudioInterruptionProviderType
mockAudioMode
mockBackingCallSource
mockBlocked
mockBytesOfDataUsed
mockCall
mockCallDuration
mockCallFromBlock:
mockCallGroupUUID
mockCallRelaySupport
mockCallStatus
mockCallUUID
mockCallWithNotificationCenter:fromBlock:
mockCallerNameFromNetwork
mockConnected
mockConnecting
mockContactIdentifiers
mockConversation
mockDateConnected
mockDisconnectedReason
mockDisplayContext
mockEmergency
mockEndpointOnCurrentDevice
mockFailureExpected
mockHandle
mockHasBeenRedirected
mockHasSentInvitation
mockHasStartedOutgoing
mockHostedOnCurrentDevice
mockInitialLinkType
mockIsThirdPartyVideo
mockIsVideo
mockIsVideoPaused
mockJunkConfidence
mockLocalizedLabel
mockMayRequireBreakBeforeMake
mockNeedsManualInCallSounds
mockOutgoing
mockPrefersExclusiveAccessToCellularNetwork
mockProvider
mockProviderContext
mockProviderErrorCode
mockScreenShareAttributes
mockService
mockSharingScreen
mockShouldSuppressInCallUI
mockSubtype
mockSupportsEmergencyFallback
mockSupportsTTYWithVoice
mockTTYType
mockUniqueProxyIdentifier
mockUplinkWasExplicitlyMuted
mockUsingBaseband
mockVideoStreamToken
mockVoicemail
mode
model
modernGFTEnabled
momentCapturedForStreamToken:requesterID:reply:
moments:capabilitiesDidChange:
moments:didEndProcessingRequest:stillImageURL:movieURL:error:
moments:didEndProcessingRequest:url:error:
moments:didStartProcessingRequest:error:
momentsAvailable
momentsClient
momentsController
momentsController:didCleanUpForStream:
momentsController:didStartRequestForStream:withTransactionID:
momentsController:registeredStream:withAvailability:
momentsControllerClientXPCInterface
momentsControllerServerXPCInterface
momentsGenerator
momentsReportingSession:didGenerateUsageReport:
momentsRequestTimeout
momentsServerDidDisconnect:
momentsStartedRemoteCapture:
monitorForDeath:
monitorWithConfiguration:
mostElevatedApplicationStateForPID:
mostRecentBestAppSuggestion
mostRecentCompletedOneToOneEnabledValue
moveItemAtURL:toURL:error:
multiwaySupported
mutableChats
mutableConversationsByUUID
mutableConversationsRequestingUpgrade
mutableCopy
mutableCopyWithZone:
mutablePendingConversationsByPseudonym
mutablePseudonymsByCallUUID
mutablePseudonymsByRequestIdentifiers
mutableSendDataCallbacksByRequestIdentifiers
muteSessionInput:error:
muted
mutedChangedForConference:
name
namePrefix
nameSuffix
nearbyTVDevicesWithCompletion:
needsManualInCallSounds
negotiationDataForProtocolVersion:
neighborhoodActivityClientXPCInterface
neighborhoodActivityConduitTimeout
neighborhoodActivityServerXPCInterface
networkCountryCode
networkExtensionClient
networkExtensionClientManager
networkExtensionMessageControllerHost:didReceiveIncomingMessage:forBundleIdentifier:
networkExtensionMessageControllerHost:didReceiveIncomingPushToTalkMessage:forBundleIdentifier:
networkExtensionMessageHost
networkSupport
newHierarchyTokenFromParentToken:
newProcessAssertion
newRequestWithMediaType:mode:requesteeID:
nickname
nonInterruptingCalls
nonWifiFaceTimeAvailable
normalizedDeviceType
normalizedEmailAddressHandleForValue:
normalizedGenericHandleForValue:
normalizedHandleWithDestinationID:
normalizedPhoneNumberHandleForValue:isoCountryCode:
notPredicateWithSubpredicate:
noteApprovedHandle:completionHandle:
noteDismissedHandle:completionHandle:
noteItem:
noteReportedNewIncomingVoIPCallForBundleIdentifier:
noticeManager:conversation:participant:addedNotice:
notification
notificationCenter
notificationDisplayInformationForAudioPolicyManager:activity:conversation:
notificationProviderIdentifier
notificationServiceExtensionHost:didReceiveIncomingMessage:forBundleIdentifier:reply:
notificationStyles
notificationStylesByHandleType
notificationThreadIdentifier
notifyClientsOfConversationsByGroupUUIDUpdate
notifyClientsToConnectIfNecessary
notifyDelegatesOfAVModeChanged:toAVMode:forConversation:
notifyDelegatesOfChangedLink:conversation:
notifyDelegatesOfChangedLinkDescriptors:
notifyDelegatesOfInvalidLinkForPendingConversation:
notifyDelegatesOfLetMeInRejectedForPendingConversation:
notifyDelegatesOfNewConversation:fromHandle:
notifyDelegatesOfRemoteScreenShareAttributes:isLocallySharing:
notifyDelegatesOfRemoteScreenShareEndedWithReason:
notifyDelegatesOfRemovedConversationWithUUID:
notifyDelegatesOfTrackedPendingMember:forConversationLink:
notifyDelegatesOfUpdatePendingConversations
notifyObserver
nsExtensionManager
nseMessageHost
numberFromString:
numberValue
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
oBSOLETEConferenceIdentifier
oBSOLETEProtoMomentsAvailable
object
objectAtIndex:
objectAtIndexedSubscript:
objectForBlock
objectForKey:
objectForKey:ofClass:
objectForKey:ofClass:valuesOfClass:
objectForKeyHierarchy:subscriptionContext:error:
objectForKeyedSubscript:
objectsPassingTest:
offrampEnabled
oneToOneHandoffOngoing
oneToOneModeEnabled
ongoingDescription
onlineStatusChangedWithNotification:
openApplication:withOptions:completion:
openApplicationWithBundleIdentifier:configuration:completionHandler:
openApplicationWithBundleIdentifier:message:
openInCallServiceByURL
openTransactions
openUIServiceWithURL:
openUserActivity:usingApplicationRecord:configuration:completionHandler:
openUserActivity:usingApplicationWithBundleIdentifier:frontBoardOptions:completion:
openVoIPApplicationForCall:
optionsWithDictionary:
orPredicateWithSubpredicates:
orderedSet
orderedSetWithCapacity:
orientation
orientationMonitor
originalPauseDigitsString
originalResolution
originalRingtoneSoundURL
originalRingtoneSoundURLString
originalTimestamp
originatingDeviceType
originatingUIType
originator
originatorHandle
originatorTUHandle
otherIMHandle
otherInvitedHandles
otherInvitedHandlesAtIndex:
otherInvitedHandlesCount
otherInvitedHandlesType
otherInvitedTUHandles
otherSessionsRequestNoRingtoneInterruption
otherUniqueProxyIdentifiers
otherUniqueProxyIdentifiersAtIndex:
otherUniqueProxyIdentifiersCount
outFrequencyLevel
outgoing
outgoingCallFromDialRequest:
outgoingCallerID
outgoingCallerIDChanged
outgoingChatGenerator
outgoingLocalParticipantUUID
outgoingPinRequestIdentifier
outgoingRelayCallerID
outgoingResponseIdentifier
outgoingSessionProviderGenerator
outputAudioPowerSpectrumToken
outputAudioPowerSpectrumTokenForIdentifier:
outputFrequencyMeteringEnabled
outstandingMessages
overrideOutputAudioPort:error:
pairedDevice
pairedDeviceExists
pairedDeviceMessenger
pairedDeviceUniqueIDOverride
pairedDeviceUniqueIDOverrideExists
pairedHostDeviceProvidersByIdentifier
pairedHostDeviceProvidersByIdentifierForClient:
pairedHostDeviceProvidersByIdentifierForRemoteClients:
pairedHostDeviceRoutesByUniqueIdentifier:
pairedHostDeviceState
participant:audioEnabled:didSucceed:error:
participant:audioPaused:didSucceed:error:
participant:mediaPrioritiesDidChange:
participant:mediaStateDidChange:forMediaType:didSucceed:error:
participant:remoteAudioEnabledDidChange:
participant:remoteAudioPausedDidChange:
participant:remoteMediaStateDidChange:forMediaType:
participant:remoteScreenEnabledDidChange:
participant:remoteVideoEnabledDidChange:
participant:remoteVideoPausedDidChange:
participant:screenEnabled:didSucceed:error:
participant:spatialAudioSourceIDDidChange:
participant:videoEnabled:didSucceed:error:
participant:videoPaused:didSucceed:error:
participantAssociation
participantDestinationID
participantDestinationIDs
participantGroupUUID
participantID
participantIDForAlias:salt:
participantIDForAlias:salt:completion:
participantIDs
participantIdentifier
participantPushToken
participantRefreshBlock
participantURI
participantUpdateSanitizer
participantUpdateSubtype
participantUpdateType
participantUpdatedForSession:
participantWithCSDConversationJoinContext:
participantWithCSDConversationParticipant:
path
pathComponents
pathExtension
pauseDigits
pauseDigitsQueue
pauseDigitsQueueChanged:
pauseVideoToStart
pendData:completion:
pendingAllowedMembers
pendingCallActionsOfClass:withCallUUID:
pendingCallsToChatUUIDs
pendingCodesToDevicesForApproval
pendingCompletions
pendingConversationParticipantsByIdentifier
pendingConversationUUIDForCallWithUUID:
pendingConversationUUIDWithPseudonym:
pendingConversationWithPseudonym:
pendingData
pendingKickedMembersByIdentifier
pendingMemberHandles
pendingMembers
pendingMembersByGroup
pendingMembershipTracker
pendingMembershipTracker:didTrack:forGroupUUID:
pendingMembershipTracker:willAdd:to:using:
pendingMembershipTracker:willNotAdd:to:using:
pendingNetworkExtensionMessageContexts
pendingPulledCallContexts
pendingPushKitVoIPMessageContexts
pendingRemovedParticipantsByID
pendingRequestCount
pendingTransactions
performAnswerCall:withRequest:
performAnswerCallAsAudioDowngrade:withRequest:
performAnswerCallAsVideoUpgrade:withRequest:
performAsynchronousBlock:
performBlock:
performBlock:coalescedByIdentifier:
performBlockAfterCoalescing:
performBlockAfterFirstUnlock:
performBlockOnClients:
performBlockOnClients:coalescedByIdentifier:
performBlockOnQueue:
performBlockOnQueue:andWait:
performBlockOnTransportAvailability:
performBlockOnTransportAvailability:forIdentifier:
performBlockWithClients:
performCallAction:forCall:
performCallActions:forCall:
performChanges:completionHandler:
performDisconnectAllCalls
performDisconnectCall:
performDisconnectCurrentCallAndActivateHeld
performEndActiveAndAnswerCall:withRequest:
performEndHeldAndAnswerCall:withRequest:
performFileCopierOperation:onInputURL:outputURL:completion:
performGroupCall:withCall:
performHoldActiveAndAnswerCall:withRequest:
performHoldCall:
performJoinCallAction:
performJoinConversation:
performPullCallFromClientUsingHandoffActivityUserInfo:completion:
performPullHostedCallsFromPairedHostDevice
performPullRelayingCallsFromClientAndUpdateEndpoint:updateExpectedDestination:
performPushHostedCallsToDestination:
performPushRelayingCallsToHostWithSourceIdentifier:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performSendMMIOrUSSDCodeWithRequest:
performSetTTYType:forCall:
performSetUplinkMuted:forCall:
performSwapCalls
performSynchronousBlock:
performUngroupCall:
performUnholdCall:
performUpdateCallWithProxy:
permitJoin
persistenceController
personFromContact:
personNameComponents
phoneNumber
phoneNumberMCCToISOCountryCodeTransformBlock
phoneNumberURI
phoneNumberWithDigits:countryCode:
phoneServicesCapabilitiesChanged:
phoneticRepresentation
photoRequestDurations
photoRequestFailureCount
photoRequestSuccessCount
pickInitiatorFromParticipants:forUpdate:
pickLocalRouteWithUniqueIdentifier:shouldWaitUntilAvailable:
pickPairedHostDeviceRouteWithUniqueIdentifier:shouldWaitUntilAvailable:
pickRoute:
pickRoute:error:
pickRouteForRapportDeviceWithMediaSystemIdentifier:effectiveIdentifier:
pickRouteWithUniqueIdentifier:shouldWaitUntilAvailable:
pickableRoutesDidChangeNotification:
pickableRoutesForTTY
pickedRoute
pidToCachedProviderIdentifiers
pidToProcessHandle
pidToProviderIdentifiers
pinCodeEnteredSuccessfully:cancelled:onPrimaryDevice:
pinExchangeDelegate
placeholderForCreatedAsset
play
playDTMFToneForCallWithUniqueProxyIdentifier:key:
playLocalDTMFToneForKey:
playRemoteDTMFToneForKey:
playWithCompletionHandler:
plistRepresentation
plugInKitPlugins
pluginName
policyForAddresses:forBundleIdentifier:reply:
postClientNotificationName:
postClientNotificationName:forCall:
postClientNotificationName:forCall:userInfo:
postEndEventForSession:originator:conversation:
postNotificationName:object:
postNotificationName:object:userInfo:
postSessionStartedForSession:originator:conversation:
postUserNotificationForUnsupportedScreenSharingActivity:alternateReponseHandler:
powerAssertionManager
predicateForCallsBetweenStartDate:endDate:
predicateForCallsLessThanDate:
predicateForCallsWithAnyMediaTypes:
predicateForCallsWithAnyServiceProviders:
predicateForCallsWithRemoteParticipantCount:
predicateForCallsWithRemoteParticipantHandle:
predicateForCallsWithRemoteParticipantHandleNormalizedValue:
predicateForCallsWithRemoteParticipantHandleValue:
predicateForCallsWithServiceProvider:
predicateForCallsWithStatusOriginated:
predicateForCallsWithStatusRead:
predicateForCallsWithUniqueID:
predicateForContactsMatchingHandleStrings:
predicateForFilteringOutFaceTimeAudioCalls
predicateForInEarAudioRoute
predicateForPreferredRoute
predicateForUpgrade
predicateMatchingIdentity:
predicateWithBlock:
predicateWithFormat:
preferences
preferencesURL
preferredAccountChanged:
preferredAndActiveRoute
preferredExternalRouteDidChangeNotification:
preferredRoute
preferredRouteForCall:
preferredVoiceSubscriptionUUID
prefersExclusiveAccessToCellularNetwork
prefixedURI
prepareAdditionOfActiveParticipant:toInvitedMembersForLinkOnConversation:
prepareConference
prepareConferenceConnection:remoteInviteDictionary:completion:
prepareConferenceForCall:remoteInviteDictionary:completion:
prepareConnectedSessionsToEnd
prepareSessionToEndForIdentifier:
prepareToDisconnectMessagingConnectionForCall:
prepareToEnd
prepareToStopConferenceForIdentifier:
prepareToStopTimeout
prepareWithConfiguration:
preparedToStop
presentDismissalAlertForActivitySessionWithUUID:
presentDismissalAlertForActivitySessionWithUUID:onConversationWithUUID:
presentSessionDismissalAlertForActivitySessionUUID:allowingCancellation:completionHandler:
presentationInfo
presentationLayoutForGridDisplayMode:
presentationRect
presentationState
presentationStateForConversationWithUUID:
primaryAvcIdentifier
primaryHandle
primaryIdentifier
primaryThumperAccountUsingDevices:outgoingCallerIDURI:requireMatchingCallerIDURI:requireAvailableDeviceSlots:
prioritizedSenderIdentities
prioritizedSenderIdentitiesAtIndex:
prioritizedSenderIdentitiesCount
prioritizedTUSenderIdentities
priority
privateKey
proceedToJoinForConversation:action:
proceedToNewPendingConversationForLink:action:
processAssertion
processAssertionManager
processAssertionNameForBundleIdentifier:
processAssertionWithBundleIdentifier:
processAssertions
processBundleIdentifier
processGroupSessionParticipantUpdate:context:
processHandle
processIdentifier
processIdentifiersForBundleIdentifier:
processInfo
processJoinUpdate:fromHandle:senderCorrelationIdentifier:
processName
processParticipantDataUpdate:fromHandle:
processProxiedGroupUpdate:
processProxiedMessage:fromID:context:
processProxiedResource:metadata:fromID:context:
processStateChanged
processStatesForBundleIdentifier:
processStatesForBundleIdentifier:completion:
processStatesForCallSource:
processStatusChangeAsHandedOffIfNecessaryForCall:
processSuspended
processUpdateMembersUpdate:fromHandle:
processUpdatedNickname:forHandle:conversationUUID:
productionConnection
profileID
prominence
properties
propertiesChanged
propertiesChangedForCall:
propertiesDescription
propertiesDidChangeForConfiguration:
protoCallAtIndex:
protoCallCapabilitiesState
protoCallModel
protoCallModelState
protoCallType
protoCalls
protoCannotBeAnswered
protoCannotRelayAudioOrVideoOnPairedDevice
protoConferenced
protoCurrentlyPicked
protoDTMFKey
protoDisconnectedReason
protoDisplayContext
protoEmergency
protoExpectedEndpointOnMessagingDevice
protoFailureExpected
protoGuest
protoHasSentInvitation
protoMomentsV2Available
protoNeedsManualInCallSounds
protoOriginatingUIType
protoOutgoing
protoPersonNameComponents
protoPriority
protoProtocolVersion
protoProvider
protoRemoteUplinkMuted
protoSOS
protoSenderMuteUplink
protoService
protoShouldSuppressInCallUI
protoShouldSuppressRingtone
protoSoundRegion
protoStatus
protoSupportedHandleTypeAtIndex:
protoSupportedHandleTypes
protoSupportedHandleTypesCount
protoSupportsEmergencyFallback
protoSupportsRelay
protoSupportsTTYWithVoice
protoTTYType
protoTimeConnected
protoUUID
protoUpgradeSessionUUID
protoUplinkMuted
protoVideo
protoVoicemail
protoWantsHoldMusic
provider
provider:didActivateAudioSession:
provider:didDeactivateAudioSession:
provider:executeTransaction:
provider:performAnswerCallAction:
provider:performEnableVideoCallAction:
provider:performEndCallAction:
provider:performJoinCallAction:shouldUseIDSDemuxer:
provider:performPlayDTMFCallAction:
provider:performSendMMIOrUSSDCodeAction:
provider:performSetGroupCallAction:
provider:performSetHeldCallAction:
provider:performSetMutedCallAction:
provider:performSetRelayingCallAction:
provider:performSetScreenShareAttributesCallAction:
provider:performSetSendingVideoCallAction:
provider:performSetSharingScreenCallAction:
provider:performSetTTYTypeCallAction:
provider:performSetVideoPresentationSizeCallAction:
provider:performSetVideoPresentationStateCallAction:
provider:performStartCallAction:
provider:performStartCallAction:shouldUseIDSDemuxer:
provider:timedOutPerformingAction:
providerCallDataSource
providerCallDelegate
providerConfiguration
providerDelegate:callWithUUID:connectedAtDate:
providerDelegate:callWithUUID:endedAtDate:withReason:failureContext:
providerDelegate:callWithUUID:startedConnectingAtDate:
providerDelegate:endOtherProvidersCallWithUUID:
providerDelegate:isExclusivelyManagingCallWithUUID:
providerDelegate:isManagingCallWithUUID:
providerDelegate:requestedTransaction:completion:
providerDelegate:requestedUpgradeToExistingCallForConversation:withSessionToken:completion:
providerDidBegin
providerDidBegin:
providerDidReset:
providerDisplayMonitor
providerEndedReason
providerErrorCode
providerForIdentifier:
providerForRecentCall:
providerIdentifier
providerIdentifierForHandoffActivityUserInfo:
providerIdentifierToProvider
providerIdentifiersForClient:
providerIdentifiersForExistingCalls
providerSource
providerWithIdentifier:
providerWithService:video:
providers
providersAtIndex:
providersByIdentifier
providersByIdentifier:
providersByIdentifierForRemoteClients:
providersChangedForProviderManager:
providersCount
providersType
provisionPseudonymForHandle:featureID:scopeID:expiryDuration:allowedServices:completionHandler:
provisionPseudonymForURI:withProperties:completion:
proximityChangeHandler
proximityController
proximityDetectionMode
proximitySensorCovered
proximitySensorEnabled
proximitySensorObserver
proximitySensorObserver:didChangeCovered:
proxyAVAudioSession
proxyCallWithCall:
proxyGroupUpdate:forConversationManager:
pseudonym
pseudonymAtIndex:
pseudonymExpirationDateEpochTime
pseudonymFeatureID
pseudonymForPseudonymString:
pseudonymForPseudonymURI:
pseudonymPropertiesWithFeatureID:scopeID:expiryDurationInSeconds:
pseudonymType
pseudonyms
pseudonymsByCallUUID
pseudonymsByCallUUID:
publicIdentifier
publicIntentAction
publicKey
publiclyAccessibleCopy
pullCallFromClientUsingHandoffActivityUserInfo:reply:
pullCallWithHandoffActivityUserInfo:completion:
pullHostedCallsFromPairedHostDevice
pullRelayingCallsFromClient
pullRemotelyHostedCallsForMessage:completion:
pushEnvironmentAccordingToLaunchServices
pushHostedCallsForRemoteInviteDictionary:destination:completion:
pushHostedCallsToDestination:
pushKitClient
pushKitClientManager
pushRelayingCallsToHostWithSourceIdentifier:
pushToken
pushTokenForSelf
qrPluginEncryptionEnabled
queryHasWebOnlyEndpointsForDestinations:completionBlock:
queue
queueAddParticipantRetryBlock:withVideoEnabled:screenEnabled:
queueContext
queueItemType
queuedActivitiesOfType:
quickRelaySupported
raise
raise:format:
raiseToAnswerController
raiseToEarGestureHandler
raiseToEarGestureManager
randomSixDigitCode
rangeOfCharacterFromSet:options:range:
rangeOfString:
readFrom:
readPasswordAndReturnError:
rebroadcastTimeThreshold
receivedBroadcastedActivityType:dynamicIdentifier:originatingDeviceType:
receivedFirstRemoteFrameForConference:
receivedInvitationAccept
receivedLetMeInRequestForConversation:
receivedMessageType
receivedMessageTypeAsString:
receivedMessageTypeString
receivedSuccessfulDidStart
receivedTrackedPendingMember:forConversationLink:
receiverRoute
receiverRouteAvailable
recentCallsDeleted:
recentCallsDidChangeForCallHistoryManager:
recentlyDeletedCallUUIDsByConversationUUID
recentlyLeftParticipantIdentifiers
recentsController
recentsManager
recheckAccountStatusForSubscription:capability:
reconnect
reconnectSession
reconnectUPlusOneSession
recoverLinksForPseudonyms:
recoverMessage
rectValue
reducedInfoMembers:
refreshActiveConversations
refreshActiveParticipantsList
refreshDataCryptors
refreshIDStatusForDestination:service:listenerID:queue:completionBlock:
refreshRegistrationForAccount:
regionBasePhoneNumber
regionBlocked
registerActivityType:dynamicIdentifier:
registerCall:
registerChat:
registerConversationProvider:completionHandler:
registerEventID:options:handler:
registerForCallbacksForProvider:completionHandler:
registerForSecureMicEvents
registerLocalProvider:
registerMessagesGroupAssociation
registerMessagesGroupUUIDForConversationUUID:
registerPairedHostDeviceProviders:
registerPluginWithOptions:
registerRequestID:options:handler:
registerSecureMicrophoneEngagedHandler:
registerSplitSessionApprovalEnabled:
registerStreamToken:requesterID:remoteIDSDestinations:remoteMomentsAvailable:reply:
registerVoIPNetworkExtension
registerWithCompletionHandler:
registerWithIDSWithCompletionHandler:
registerXPCClientWithReply:
registeredLocalProvidersByIdentifier
registeredPairedHostDeviceProvidersByIdentifier
registeredStream:withAvailability:
registeredStream:withAvailability:reply:
registeredStreamWithAvailability:
rejectPendingMember:forConversationUUID:
rejectWithError:
relativePath
relayCall:didGroupWithOtherCall:
relayCall:didPlayLocalDTMFToneForKey:
relayCallConferenceDidStartSuccessfullyForOutgoingDialedCall:
relayCallConferenceDidStartSuccessfullyForPulledCall:
relayCallConferenceDidStop:cleanly:error:
relayCallConferenceFailedToStart:
relayCallDataSource
relayCallDelegate
relayCallDidBecomeEndpointForPull:
relayCallDidDial:
relayCallDidDisconnect:
relayCallDidHold:
relayCallDidSendHardPauseDigits:
relayCallDidUngroup:
relayCallDidUnhold:
relayCallingAvailability
relayCallingGuaranteed
relayCallingStateChangedForDataSource:
relayCapableDeviceExists
relayClientController
relayClientTransport
relayCommonController
relayDelegate
relayHostController
relayInviteDictionary
relayMessagingController
relayService
relaying
remote
remoteAudioEnabled
remoteDestination
remoteDevice
remoteFromID
remoteHandle
remoteIDSDestination
remoteIDSDestinations
remoteInviteDictionary
remoteMemberForHandle:
remoteMemberHandles
remoteMembers
remoteMembersAtIndex:
remoteMembersCount
remoteMembersType
remoteMomentsAvailable
remoteObjectInterface
remoteObjectProxy
remoteParticipantForHandle:
remoteParticipantForLightweightParticipantHandle:
remoteParticipantHandles
remoteParticipantHandlesAtIndex:
remoteParticipantHandlesCount
remoteParticipantHandlesType
remoteParticipantTUHandles
remoteParticipantWithIdentifier:didChangeAudioPriority:videoPriority:
remoteParticipantWithIdentifier:updatedAudioEnabled:streamToken:screenToken:captionsToken:
remoteParticipantWithIdentifier:updatedAudioEnabled:updatedVideoEnabled:streamToken:screenToken:captionsToken:
remoteParticipantWithIdentifier:updatedRemoteAudioEnabled:
remoteParticipantWithIdentifier:updatedRemoteVideoEnabled:
remoteParticipantWithIdentifier:updatedScreenEnabled:streamToken:screenToken:captionsToken:
remoteParticipantWithIdentifier:updatedVideoEnabled:streamToken:screenToken:captionsToken:
remoteParticipantsByIdentifier
remoteProtocolVersion
remoteProtocolVersionNumber
remotePushTokens
remoteRequesteeIDSDestinationFor:
remoteRequesterIDSDestinationFor:
remoteScreenEnabled
remoteScreenShareAttributesChanged:isLocallySharing:
remoteScreenShareEndedWithReason:
remoteUplinkMuted
remoteUplinkMutedSetTime
remoteVideoEnabled
remoteVideoPaused
remoteVideoPresentationSize
remoteVideoPresentationState
removeActiveAudioSessionObjectForConversationWithUUID:
removeActiveRequestForTransactionID:
removeActivitySessionIfNecessary
removeActivitySessionWithUUID:usingHandle:
removeActivitySessionWithUUID:usingTerminatingHandle:
removeAllConversations
removeAllEntries:
removeAllFirewallEntries
removeAllObjects
removeAllPendingConversations
removeCall:
removeCallDescriptor:
removeCallFilter:
removeCallerIDFromPreferences
removeClient:
removeConversation:
removeConversationLinkDescriptorsWithPredicate:userInteraction:completion:
removeConversationLinkDescriptorsWithPredicate:userInteraction:error:
removeConversationNoticeWithUUID:
removeConversationWithUUID:
removeDeliveredNotificationsWithIdentifiers:
removeEmergencyAddressDisclaimerOnSecondaryDevice
removeEntries:withCompletion:
removeErrorNotifications
removeFirewallEntries:
removeFromRunLoop
removeIdentifier:
removeIdentifiers:
removeItemAtPath:error:
removeItemAtURL:error:
removeLastObject
removeLink:userInteraction:completionHandler:
removeLinksForFilenamesNotInArray:
removeLinksForFilenamesNotInArray:error:
removeListenerID:forService:
removeLocalClientObject:
removeMembers:fromExistingMembers:activeParticipants:triggeredLocally:
removeNonIndefiniteLinks
removeNotificationsForServiceIdentifier:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectsInArray:
removeObserver:name:object:
removeOutstandingMessagesForBundleIdentifier:
removeParticipant:
removeParticipantWithIdentifier:fromHandle:withReason:
removeParticipantsForMember:
removePendingConversationWithPseudonym:
removePendingData
removePendingMemberMatchingActiveParticipant:conversation:
removePendingMembers:triggeredLocally:
removePseudonym:forCallUUID:
removeRegistrationDelegate:
removeReminderNotificationOnSecondaryDevice
removeRemoteMembers:fromConversationWithUUID:
removeRemoteMembers:triggeredLocally:
removeRequiredCapabilities:requiredLackOfCapabilities:
removeSecondaryThumperDeviceWithIDSDeviceIdentifier:fromSubscription:
removeServiceDelegate:
removeThumperRegisteredDeviceID:forThumperAccountID:
removeVirtualParticipant:
removeVoIPApplication:
removedMembers
removedMembersAtIndex:
removedMembersCount
removedMembersType
renameResourceAtURL:toResourceWithName:
renamedResourceURL:withName:
renewLink:expirationDate:reason:completionHandler:
renewLinkWithPseudonym:expirationDate:completionHandler:
renewPseudonym:expirationDate:completionHandler:
renewPseudonym:forUpdatedExpiryEpoch:completion:
renewPseudonymHandle:expirationDate:completionHandler:
renewPseudonymHandle:forConversationProvider:expirationDate:completionHandler:
renewPseudonymString:expirationDate:completionHandler:
replaceContentForRequestWithIdentifier:replacementContent:completionHandler:
report
reportAction:ofTempURI:fromURI:withCompletion:
reportAllCallsBackgrounded
reportAudioFinishedForCallWithUUID:
reportCallEnteredForeground:
reportCallWithUUID:changedFrequencyData:forDirection:
reportCallWithUUID:changedMeterLevel:forDirection:
reportCallWithUUID:crossDeviceIdentifier:changedBytesOfDataUsed:
reportCallWithUUID:endedAtDate:privateReason:
reportCallWithUUID:endedAtDate:reason:
reportCallWithUUID:failedAtDate:withContext:
reportCallWithUUID:updated:
reportData
reportDataCollectionCompleteIfNecessary
reportLocalPreviewStoppedForCallWithUniqueProxyIdentifier:
reportNewIncomingCallForConversation:fromHandle:
reportNewIncomingCallForConversation:fromHandle:callUUID:
reportNewIncomingCallWithUUID:update:completion:
reportNewOutgoingCallWithUUID:update:
reportOutgoingCallWithUUID:connectedAtDate:
reportOutgoingCallWithUUID:sentInvitationAtDate:
reportOutgoingCallWithUUID:startedConnectingAtDate:
reportProviderFailedWithAction:forCall:
reportRelayMessageReceived:fromPairedDevice:
reportRouteWasPicked:
reportTimedOutPickingRoute:
reportTransactionGroupCompleted:
reporters
reportingController
reportingController:AVCBlobRecoveryStartedForConversation:
reportingController:AVCBlobRecoveryTimedOutForConversation:
reportingController:activeRemoteParticipantsChangedForConversation:
reportingController:addedActivatedLink:
reportingController:addedActiveConversation:
reportingController:avcBlobRequestMessageRetryFailedForConversation:
reportingController:avcBlobRequestMessageRetryStartedForConversation:
reportingController:avcBlobRequestMessageRetrySucceededForConversation:
reportingController:callEnteredForeground:
reportingController:callUUID:withUserScore:
reportingController:capturedMomentsUsageReport:
reportingController:createConversationReportingSessionForConversation:
reportingController:createOneToOneFTReportingSessionForCallWithUUID:withReportingHierarchyToken:withVideo:
reportingController:didEndSession:startDate:endDate:
reportingController:letMeInRequestStateChangedForConversation:
reportingController:messageRetryFailedForConversation:
reportingController:messageRetryStartedForConversation:
reportingController:messageRetrySucceededForConversation:
reportingController:pickedRoute:forCall:
reportingController:providerFailedWithAction:forCall:
reportingController:receivedChat:
reportingController:receivedGroupActivitesReports:forConversation:
reportingController:receivedIDSChat:
reportingController:receivedIDSReports:forConversation:
reportingController:receivedIDSReports:forSessionWithUUID:
reportingController:receivedLetMeInRequestForConversation:
reportingController:receivedReports:forConversation:
reportingController:receivedReports:forSessionWithUUID:
reportingController:relayMessageReceived:fromPairedDevice:
reportingController:remoteMembersChangedForConversation:
reportingController:removedActiveConversation:
reportingController:sentLetMeInResponseForConversation:isApproved:
reportingController:stateChangedForConversation:
reportingController:statusChangedForCall:totalCallCount:
reportingController:timedOutPickingRoute:forCall:
reportingController:transactionGroupCompleted:
reportingController:transitionAttemptForConversation:
reportingController:voipAppBecameDisabledFromLaunching:
reportingController:voipAppFailedToPostIncomingCall:
reportingController:voipPushDroppedOnTheFloor:
reportingControllerServerXPCInterface
reportingHierarchySubToken
reportingHierarchyToken
reportingSessionByStreamToken
requestA2DPOverIncomingCalls
requestActionType
requestActionTypeAsString:
requestActiveParticipants
requestActivityAuthorizationForApplicationWithBundleIdentifier:overrides:completionHandler:
requestAnswerForRequest:forCall:
requestAuthorizationForApplicationLaunchWithActivity:completionHandler:
requestAuthorizationForApplicationWithBundleIdentifier:preparing:overrides:completionHandler:
requestBlobRecoveryOptions
requestCLTMThrottleUncapToken
requestDataCryptorForTopic:completionHandler:
requestEncryptionKeyForParticipants:
requestEncryptionKeyForParticipants:topic:
requestInitialState:
requestLetMeInApprovalForPseudonym:
requestPendingACInvitations
requestPendingVCInvitations
requestPinFromDevice:
requestPinFromPrimaryDevice
requestTimeoutBlockByTransactionID
requestTokenForTopic:identifier:
requestTransaction:completion:
requestVideoUpgradeForCallWithUniqueProxyIdentifier:
requestWithIdentifier:content:trigger:
requestWithIdentifier:content:trigger:destinations:
requesteeID
requesterID
requiredCapabilities
requiredConnectionCapability
requiredIDStatusForDestinations:service:listenerID:queue:completionBlock:
requiredLackOfCapabilities
requiresAuthentication
requiresInCallSounds
requiresInviteDictionary
resetAudioSessionOutputPortOverride
resetCallProvisionalStates
resetClientCallProvisionalStates
resetNonScreenSharingSessions
resetOneTimeMessage
resetSelectiveSharingSessionContent
resetSessions
resignCurrent
resolutionChangedForResolver:
resolveBehaviorForEventDetails:error:
resolvedAVLessConversation
resolvedAudioVideoMode
resolvedCall
resolvedConversation
resolvedDescriptor
resolvedHandoffEligibleConversation
resolver
respondsToSelector:
response
responseInformation
resume
retain
retainCount
retreiveActiveConversations
retrieveFirewallAndAddEntries:
retrieveFirewallWithQueue:completion:
retrievePendingMembersFor:
retrieveSavedProvidersByIdentifier
retrieveSessionWithID:
retryCount
revision
reviveOrInvalidateCachedConversationIfNecessary
revokeBackgroundAuthorizationForBundleID:
revokeBackgroundPipAuthorizationsForBundleID:
revokePseudonym:completion:
revokePseudonym:completionHandler:
revokePseudonymHandle:completionHandler:
revokePseudonymHandle:forConversationProvider:completionHandler:
revokePseudonymString:completionHandler:
ringtoneSoundURL
ringtoneSoundURLString
ringtoneSuppressedRemotely
ringtonesSandboxExtensionDirectory
route
routeIdentifierChangedNotification
routeManager
routeWasPickedHandler
routes
routesAtIndex:
routesByUniqueIdentifier
routesChangedForRouteController:
routesCount
routesDidChangeHandler
routesType
runBlocksPendingTransportAvailability:
runBlocksPendingTransportAvailabilityIfNecessary:
sandboxExtendedImageURL
sandboxExtensionHandle
sanitize:completion:
sanitizeAndProcessParticipantUpdate:context:
sanitizeJoinConversationRequest:
sanitizedCallUpdate
sanitizedCopy
saveLivePhotoWithPhotoURL:videoURL:completion:
savePassword:error:
saveThumperCapabilitiesStates:forPreferenceKey:
saveVideoWithURL:completion:
scaleFactor
sceneAssociationBehavior
scheduleConversationLinkCheckInInitial:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
screenCapture:didStart:withError:
screenCapture:didStop:withError:
screenCaptureKitEnabled
screenCaptureQueue
screenEnabled
screenShareAttributes
screenSharingActivityManager
screenSharingActivityManager:invalidatedSessionWithReason:wasLocallySharing:
screenSharingActivityManager:receivedUpdatedRemoteAttributes:isLocallySharing:
screenSharingAvailable
screenSharingAvailableChanged:
screenSharingCALayerHostMode
screenSharingDeskViewEnabled
screenSharingDeskViewSqueegeeEnabled
screenToken
secondaryThumperAccountForAccountID:
secondaryThumperAccountForRegisteredDeviceID:
secondaryThumperAccounts
selectiveSharingSessionUUID
self
sendAnswerCallMessageToHostForCall:
sendApprovalResponseToDevice:enteredCorrectly:wasCancelled:
sendCallAnsweredElsewhereMessageToClientForCall:
sendCallConnectedMessageToClientForCall:
sendCallDialedMessageToClientForCall:
sendCallDisconnectedMessageToClientForCall:
sendCallStartedConnectingMessageToClientForCall:
sendClientsNotificationName:
sendClientsNotificationName:forCall:
sendClientsNotificationName:forCall:userInfo:
sendData:
sendData:forCallID:encrypted:
sendData:fromAccount:toDestinations:priority:options:identifier:error:
sendData:onConversation:toDestinationID:
sendData:onConversation:toDestinationID:fromMember:
sendData:onConversation:toDestinationID:fromMember:additionalOptions:isBlobResponse:callback:
sendData:onConversation:toHandle:
sendData:onConversation:toHandle:isBlobResponse:
sendData:onConversation:toMember:
sendData:onConversation:toMember:additionalOptions:
sendData:throughConferenceForIdentifier:
sendData:toDestinations:
sendData:toDestinations:completion:
sendData:toDestinations:priority:options:identifier:error:
sendData:waitUntilConnected:completion:
sendDataAndAcceptInvitationIfNecessary:
sendDataAndCancelInvitationIfNecessary:
sendDataAndDeclineInvitationIfNecessary:
sendDataAndSendInvitationIfNecessary:declineOnError:
sendDataBlock
sendDataUnreliably:
sendDelegationMessageTo:conversation:link:transactionUUID:forMember:
sendDelegationResponseMessageTo:conversation:transactionUUID:forMember:withResponse:
sendDeviceUnavailableMessageToClientForUniqueProxyIdentifier:
sendDialCallFailedForScreenTimeForUniqueProxyIdentifier:
sendDialCallFailedForUniqueProxyIdentifier:
sendDialCallFailedForUniqueProxyIdentifier:withDisconnectedReason:
sendDialCallMessageToHostForCall:completionHandler:
sendDisconnectAllCallsMessageToHostForDisconnectedCall:
sendDisconnectCallMessageToHostForCall:
sendDisconnectCurrentCallAndActivateHeldMessageToHostForDisconnectedCall:
sendEndActiveAndAnswerCallMessageToHostForCall:
sendEndHeldAndAnswerCallMessageToHostForCall:
sendEventID:event:destinationID:options:completion:
sendGroupCallMessageToHostForCall:otherCall:
sendHardPauseAvailabilityMessageToClientForState:digits:
sendHardPauseDigits
sendHardPauseDigitsForCallWithUniqueProxyIdentifier:
sendHoldActiveAndAnswerCallMessageToHostForCall:
sendHoldCallMessageToHostForCall:
sendIDSAction:toDevice:
sendIDSAction:toDevices:
sendIncomingCallMessageToClientForCall:cannotBeAnswered:cannotRelayAudioOrVideoOnPairedDevice:
sendInvitation
sendInvitationMessageToMember:forConversation:includeAllAttributes:invitationPreferences:additionalOptions:
sendInvitationSentMessageToClientForCall:
sendInvitationWithData:
sendInvitationWithData:declineOnError:
sendLetMeInRequest
sendLetMeInResponseToPendingMember:forConversation:usingResponseKeyData:approved:callback:
sendLocalParticipantData:
sendMMIOrUSSDCodeWithRequest:
sendManualLaunchAttemptEventWithActivitySession:
sendManualLaunchNeededEventWithActivitySession:
sendMessage:andAcceptInvitationIfNecessaryForIdentifier:
sendMessage:andCancelOrDeclineInvitationIfNecessaryForIdentifier:
sendMessage:andStartSessionIfNecessaryForIdentifier:toDestination:timeout:completionHandler:
sendMessage:andStartSessionIfNecessaryForIdentifier:toDevicesSupportingProvider:withTimeout:
sendMessage:andStartSessionIfNecessaryForIdentifiers:toDestination:timeout:completionHandler:
sendMessage:completionHandler:
sendMessage:customizedForRemoteProtocolVersion:completionHandler:
sendMessage:forConversation:withActivitySession:
sendMessage:forConversation:withActivitySession:additionalOptions:
sendMessage:forIdentifier:
sendMessage:forIdentifier:customizedForRemoteProtocolVersion:completionHandler:
sendMessage:forIdentifier:customizedForRemoteProtocolVersion:waitUntilConnected:completionHandler:
sendMessage:forIdentifier:toDestinations:
sendMessage:forIdentifier:toDestinations:customizedForRemoteProtocolVersion:waitUntilConnected:completionHandler:
sendMessage:fromAccount:toDestinations:priority:options:identifier:error:
sendMessage:timeout:wantsAcknowledgement:maximumRetryAttempts:completionHandler:
sendMessage:wantsAcknowledgement:completionHandler:
sendMessageWithDictionary:error:
sendMessagesForCreatedOrChangedLink:conversation:messageType:
sendNeedsManualInCallSoundsChangeMessageToClientForCall:
sendParticipantData:
sendPickRouteMessageToHostForRoute:
sendPinCodeAndPromptForResponseToDevice:forSenderIdentityUUID:
sendPlayDTMFToneForKeyMessageForCall:DTMFKey:
sendPullCallsMessageToHost
sendPullRelayingCallsMessageToClient
sendPushCallsMessageToClientDestination:
sendPushRelayingCallsMessageToHostForSourceIdentifier:
sendRequestCallStateMessageToHost
sendRequestID:request:destinationID:options:responseHandler:
sendResetStateMessageToClient
sendResetWantsHoldMusicMessageToClientForCall:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
sendSendHardPauseDigitsMessageToHostForCall:
sendSessionMessage:
sendSessionMessage:toDestinations:
sendSessionServerTerminatedEventWithActivitySession:code:
sendSetTTYTypeCallMessageForCall:ttyType:
sendSetUplinkMutedCallMessageForCall:uplinkMuted:
sendSuppressRingtoneMessageForCall:
sendSwapCallsMessageToHost
sendToVoicemailAllowed
sendUngroupCallMessageToHostForCall:
sendUnholdCallMessageToHostForCall:
sendUpdateCallContextMessageToClientForCallProviderManager:
sendUpdateCallDisplayContextMessageToClientForCall:
sendUpdateCallModelMessageToClientForCall:
sendUpdateFailureExpectedMessageToClientForCall:
sendUpdateRemoteCallStateMessageToClient
sendUpdateRemoteUplinkMutedCallMessageToClientForCall:
sendUpdateRemoteUplinkMutedCallMessageToHostForCall:
sendUpdateRoutesMessageToClientForRoutes:
sendUpdateSupportsEmergencyFallbackToClientForCall:
sendUpdateSupportsTTYWithVoiceCallMessageToClientForCall:
sendUpdateSystemVolumeForCall:volume:
sendUserScoreToRTCReporting:withScore:
sendVideoUpgradeMessageforConversationWithUUID:
sender
senderCorrelationIdentifier
senderDestinationID
senderISOCountryCode
senderIdentityCapabilitiesStateByUUID
senderIdentityCapabilitiesWithUUID:
senderIdentityForAccountUUID:
senderIdentityForUUID:
senderIdentityUUID
senderIdentityUUIDForCallerIDHandle:
senderMuteUplink
sendingAudio
sendingAudioChangedForConference:
sendingAudioData
sendingVideo
sendingVideoExpected
sentLetMeInRequestForConversation:isApproved:
serialQueue
serializedData
serverBag
serverDate
serverDidDisconnect:
serverDiedForConference:
serverDiedForConferenceProvider:
serverDisconnectedForConversationManager:
serverDisconnectedForSession:
serverProvidedLightweightParticipantIdentifiers
serverProvidedParticipantIdentifiers
serverReceivedTime
service:account:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:sentBytes:totalBytes:
service:account:incomingData:fromID:context:
service:account:incomingMessage:fromID:context:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingTopLevelMessage:fromID:messageContext:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:
service:account:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:messageContext:
service:account:receivedGroupSessionParticipantDataUpdate:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:activeAccountsChanged:
service:connectedDevicesChanged:
service:devicesChanged:
service:didFlushCacheForRemoteURI:fromURI:guid:
service:didHintCheckingTransportLogWithReason:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:didUpdatePseudonymsWithChanges:
service:linkedDevicesChanged:
service:nearbyDevicesChanged:
service:pseudonymRemoved:
service:pseudonymUpdated:
service:token:time:error:
serviceAllowedTrafficClassifiersDidReset:
serviceAvailabilityChanged:
serviceDescription
serviceForClientIdentifier:
serviceForProvider:
serviceForProvider:video:
serviceIdentifier
serviceName
serviceProviders
serviceProvidersWithCarrierNumbers
serviceStatus
session:addParticipant:didSucceed:error:
session:audioEnabled:didSucceed:error:
session:audioPaused:didSucceed:error:
session:changedLocalAudioEnabled:didSucceed:error:
session:changedLocalAudioPaused:didSucceed:error:
session:changedLocalVideoEnabled:didSucceed:error:
session:changedLocalVideoPaused:didSucceed:error:
session:changedOneToOneModeEnabled:didSucceed:error:
session:changedScreenEnabled:didSucceed:error:
session:conversationParticipantWithParticipantIdentifier:
session:didDetectError:
session:didJoinGroup:participantIdentifiers:error:
session:didReceiveActiveLightweightParticipants:success:
session:didReceiveActiveParticipants:success:
session:didReceiveBlockedParticipantIDs:withCode:isTruncated:
session:didReceiveBlockedParticipantIDs:withCode:withType:isTruncated:
session:didReceiveData:
session:didReceiveData:dataType:forParticipant:
session:didReceiveDataBlob:forParticipant:
session:didReceiveKickedParticipantIDs:withCode:withType:isTruncated:
session:didReceiveLocalParticipantType:error:
session:didReceiveParticipantIDs:withCode:managementType:
session:didReceivePluginAllocationInfo:
session:didReceiveQueryBlockedParticipantIDs:withCode:isTruncated:
session:didReceiveReport:
session:didReceiveServerErrorCode:
session:didRegisterPluginAllocationInfo:
session:didRemoveParticipantIDs:withCode:isTruncated:
session:didStart:error:
session:didStopWithError:
session:didStopWithError:metadata:
session:didUnregisterPluginAllocationInfo:
session:didUpdate:configuration:error:
session:downlinkRateAdaptationInfoDidChange:
session:endedWithError:reason:
session:endedWithReason:
session:frequencyLevelsDidChange:
session:invitationSentToPushTokens:shouldBreakBeforeMake:
session:invitationSentToTokens:shouldBreakBeforeMake:
session:mediaPrioritiesDidChange:
session:mediaStateDidChange:forMediaType:didSucceed:error:
session:oneToOneEnabled:didSucceed:error:
session:participantDidJoinGroupWithInfo:
session:participantDidLeaveGroupWithInfo:
session:receivedActiveLightweightParticipantDestinationsByIdentifier:
session:receivedActiveParticipantDestinationsByIdentifier:
session:receivedData:
session:receivedData:fromDestination:device:
session:receivedInvitationAcceptFromID:
session:receivedInvitationAcceptFromID:withData:
session:receivedInvitationAcceptWithData:
session:receivedInvitationAcceptWithData:fromDestination:device:
session:receivedInvitationCancelFromID:
session:receivedInvitationCancelFromID:withData:
session:receivedInvitationCancelWithData:
session:receivedInvitationCancelWithData:fromDestination:device:
session:receivedInvitationDeclineFromID:
session:receivedInvitationDeclineFromID:withData:
session:receivedInvitationDeclineWithData:
session:receivedInvitationDeclineWithData:fromDestination:device:
session:receivedSessionEndFromID:withData:
session:receivedSessionMessageFromID:withData:
session:removeParticipant:didSucceed:error:
session:screenCaptureDidStart:withError:
session:screenEnabled:didSucceed:error:
session:uplinkRateAdaptationInfoDidChange:
session:videoEnabled:didSucceed:error:
session:videoPaused:didSucceed:error:
sessionApprovalClient
sessionCleanupTimeout
sessionDidConnect:
sessionDidDisconnect:
sessionDidJoinGroup:participantInfo:error:
sessionDidJoinGroup:participantUpdate:error:
sessionDidJoinGroup:participantsInfo:error:
sessionDidLeaveGroup:error:
sessionDidReceiveKeyUpdate:
sessionDidReceiveParticipantUpgrade:participantType:error:
sessionDidTerminate:
sessionEnded:
sessionEnded:withReason:error:
sessionEndedReason
sessionForIdentifier:
sessionForTransactionID:
sessionID
sessionIDAliasWithSalt:
sessionIdentifier
sessionMessenger
sessionProtocolVersionForIdentifier:
sessionProvider:didJoinGroupWithParticipantIdentifiers:localParticipantIdentifier:error:
sessionProvider:didLeaveGroupWithError:
sessionProvider:didReceiveActiveLightweightParticipants:success:
sessionProvider:didReceiveActiveParticipants:success:
sessionProvider:didReceiveData:dataType:forParticipant:
sessionProvider:didReceiveDataBlob:forParticipant:
sessionProvider:didReceiveKickedParticipantIDs:withCode:withType:isTruncated:
sessionProvider:didReceiveLocalParticipantType:error:
sessionProvider:didReceiveReport:
sessionProvider:didReceiveServerErrorCode:
sessionProvider:didRegisterPluginAllocationInfo:
sessionProvider:didUnregisterPluginAllocationInfo:
sessionProvider:endedWithReason:error:
sessionProvider:invitationSentToPushTokens:shouldBreakBeforeMake:
sessionProvider:receivedInvitationAcceptFromID:withData:
sessionProvider:receivedInvitationCancelFromID:withData:
sessionProvider:receivedInvitationDeclineFromID:withData:
sessionProvider:receivedSessionMessageFromID:withData:
sessionProviderDidReceiveKeyUpdate:
sessionProviderDidTerminate:
sessionProviderStarted:
sessionServerDidDisconnect:
sessionShouldReconnect:
sessionToken
sessionUUID
sessionUpdateCompletionQueue
sessiondidReceiveKeyUpdate:
sessions
setAcceptPayloadData:
setAccount:
setAccountID:
setAccountUUIDString:
setAccounts:
setAccountsMatchForSecondaryCalling:
setAccountsSupportSecondaryCalling:
setActionDescription:
setActionURL:
setActivated:
setActivated:withRevision:forConversationLinkDescriptorsWithPredicate:completion:
setActivated:withRevision:forConversationLinkDescriptorsWithPredicate:error:
setActivationContext:error:
setActive:withOptions:error:
setActiveCategoryVolume:
setActiveContexts:
setActiveIDSDestination:
setActiveLightweightParticipantDestinationsByIdentifier:
setActiveLightweightParticipants:
setActiveLightweightParticipantsByIdentifier:
setActiveLocalHandles:
setActiveLocalHandlesForProvider:
setActiveParticipantDestinationsByIdentifier:
setActiveParticipantHandles:
setActiveParticipants:
setActiveRemoteParticipant:
setActiveRemoteParticipantHandles:
setActiveRemoteParticipants:
setActiveRequest:forTransactionID:
setActiveRequestsByTransactionID:
setActivity:
setActivityAuthorization:forBundleID:
setActivityAuthorization:forBundleIdentifier:
setActivityAuthorizationManager:
setActivityCommunicator:
setActivityContext:
setActivityIdentifier:
setActivityMetadata:
setActivityQueue:
setActivitySession:
setActivitySessionManager:
setActivitySessions:
setAddCallAllowed:
setAddedMembers:
setAlertTopic:
setAllowedSecondaryDeviceIDs:
setAllowsScreenSharingBlock:
setAmbiguityState:
setAnnounceCalls:
setApplicationContext:
setApplicationLaunchPolicyManager:
setApplicationPolicyManager:
setApplicationState:forBundleIdentifier:
setApproved:
setApprovedSecondaryDeviceIDs:
setApproverHandle:
setAssociated:
setAssociatedPseudonym:
setAssociatedThumperAccountID:
setAssociationAVCIdentifier:
setAssociationIdentifier:
setAssociationVoucher:
setAssumedIdentity:
setAsynchronousExportedObjectProxy:
setAsynchronousServer:
setAttribute:forKey:error:
setAttributes:
setAudio:
setAudioAndVideoMuted:forParticipantWithIdentifier:
setAudioArbitrationController:
setAudioCategory:
setAudioController:
setAudioDisabled:
setAudioEnabled:
setAudioEnabled:forParticipantWithIdentifier:
setAudioEnabled:forRemoteParticipantWithIdentifier:conversationUUID:
setAudioInterruptionOperationMode:
setAudioInterruptionProvider:
setAudioMode:
setAudioMuted:
setAudioMutedForHoldMusic:
setAudioPaused:forConversationWithUUID:
setAudioPaused:forParticipantWithIdentifier:
setAudioPriority:
setAudioQueueFlags:
setAudioReady:
setAudioRouteCollections:
setAudioRoutePolicyManager:
setAudioRouteUniqueIdentifier:
setAudioRoutesByParticipantIdentifier:
setAudioSessionActive:
setAudioSessionID:
setAudioSessionProperties:
setAudioSourceIdentifier:
setAudioVideoMode:
setAuthCompletionHandler:
setAuthorization:forBundleID:
setAutoSharePlayEnabled:
setAutomaticCarDNDStatus:
setAvMode:
setAvailability:
setAvailableDeviceSlots:
setAvailableOutgoingRelayCallerIDs:
setAvcData:
setAvcIdentifier:
setAvcScreenCapture:
setAvcSession:
setAvcSessionCreationBlock:
setAvcSessionIdentifier:
setAvcSessionInProgress:
setAvcSessionParticipantCreationBlock:
setAvcSessionToken:
setBackingCallSource:
setBadgeString:withCompletionHandler:
setBaseDestinationID:
setBeginListeningBlock:
setBehavior:
setBestAppSuggestionManager:
setBlock:
setBlockIncomingInvitationsDuringCall:
setBlockMultipleIncomingInvitations:
setBlockToExecuteAfterPendingCoalescingBlocksByIdentifier:
setBluetoothAudioFormat:
setBluetoothAudioFormatForCallWithUniqueProxyIdentifier:bluetoothAudioFormat:
setBody:
setBundleID:
setBundleIdentifier:
setBundleIdentifierToVoIPApplication:
setBundleURL:
setBundleURLString:
setByAddingObjectsFromSet:
setBytesOfDataUsed:
setCall:
setCallCapabilities:forSenderIdentityCapabilitiesState:
setCallCapabilitiesState:
setCallCenter:
setCallCenterObserver:
setCallDataSource:
setCallDelegatesIfNeeded:
setCallDirectoryExtensionIdentifier:
setCallDirectoryLabel:
setCallDirectoryLocalizedExtensionContainingAppName:
setCallDirectoryManager:
setCallDirectoryStore:
setCallDurationLimitTimer:
setCallDurationUpdateTimer:
setCallFilterController:
setCallGroupUUID:
setCallHistoryController:
setCallID:
setCallInfoBlob:
setCallModel:
setCallProviderManager:
setCallStateContext:
setCallStateController:
setCallStateMonitor:
setCallStatus:
setCallUUID:forConversationUUID:
setCallback:
setCaller:
setCallerID:
setCallerId:
setCallerIdAvailability:
setCallerNameFromNetwork:
setCannotBeAnswered:
setCannotRelayAudioOrVideo:
setCannotRelayAudioOrVideoOnPairedDevice:
setCapabilities:
setCapabilitiesValid:
setCapability:enabled:info:
setCapabilityInfo:forSubscription:senderIdentityCapabilitiesState:
setCaptionsToken:
setCaptureCapabilities:
setCapturingLocalVideo:
setCarModeActive:
setCarPlayDeviceConnected:
setCarPlayScreenConnectionChanged:
setCategory:
setCategoryIdentifier:
setCellularDataAllowed:
setCellularDataPreferred:
setChManager:
setCheckInMessage:
setClientCapabilities:
setClientInvalidationHandler:
setClientManager:
setClientMessageReceiveTime:
setClientMessagingDelegate:
setClientUUID:
setClientsShouldConnectToken:
setCloseConnectionTimeout:
setCloudCallingDevices:
setCode:
setCollaborationIdentifier:
setCommonMessagingDelegate:
setCompletedDescription:
setCompletion:
setCompletionHandler:
setConference:
setConferenceActiveForIdentifier:
setConferenceConnections:
setConferenceCreationBlock:
setConferenceProvider:
setConferenceProviderCreationBlock:
setConferenceState:forCallID:
setConferenceVisualRectangle:forCallID:
setConferencesAwaitingConnectionClose:
setConfiguration:
setConnectionTimeout:
setConnectionTimeoutTime:
setContactIdentifier:
setContactIdentifiers:
setContactLabel:
setContext:
setContextIdentifier:
setControlFlags:
setConversation:
setConversationCreationBlock:
setConversationFailureContext:
setConversationGroupUUID:
setConversationID:
setConversationLink:allowUpdate:
setConversationLink:forConversation:replyToCompletionHandler:
setConversationLinkBaseURL:
setConversationLinkDescriptorDataSourceDelegate:
setConversationMessageBytes:
setConversationProviderIdentifier:
setConversationTimeBase:
setConversationUUID:forCallUUID:
setCountOfNotificationsReceived:
setCovered:
setCoveredNotifyObserver:
setCreationDate:
setCreationDateEpochTime:
setCrossDeviceIdentifier:
setCsCallingAvailable:
setCtCapabilitiesValid:
setCurrentAttributionKey:andApp:
setCurrentAudioInputDeviceToDeviceWithUID:
setCurrentAudioOutputDeviceToDeviceWithUID:
setCurrentCallSet:
setCurrentDescriptor:
setCurrentOrientation:
setCurrentParticipantPresentationContexts:
setCurrentlyAvailable:
setCurrentlyBroadcastedActivity:
setCurrentlyPicked:
setCurrentlyTrackedA2DPRouteIdentifier:
setDTMFKey:
setData:
setDataSource:
setDataSourceToIdentifierToCalls:
setDate:
setDateAnsweredOrDialed:
setDateConnected:
setDateEnded:
setDateInitiatedLetMeIn:
setDateReceivedFirstRemoteFrame:
setDateReceivedLetMeIn:
setDateSentInvitation:
setDateStartedConnecting:
setDateStartedOutgoing:
setDefaultActionURL:
setDefaultPairedDevice:
setDelegate:
setDelegate:queue:
setDelegateQueue:
setDelegateToQueue:
setDestinationDevice:
setDestinationID:
setDestinations:
setDetectingRaiseToAnswer:
setDevelopmentConnection:
setDeviceChangedHandler:
setDeviceFamily:
setDeviceFoundHandler:
setDeviceLockStateObserver:
setDeviceLostHandler:
setDeviceRole:
setDeviceSupport:
setDeviceType:
setDevices:
setDialAssisted:
setDialType:
setDialingIDSDevice:
setDidPrepareHandler:
setDidStartHandler:
setDidStopHandler:
setDigits:
setDisconnectedCause:
setDisconnectedReason:
setDisplayContext:
setDisplayID:
setDisplayScale:
setDndAllowsCall:
setDomainAccessor:
setDowngradeToAudio:
setDowngradeToOneToOneAfterDelayBlock:
setDownlinkMuted:
setDownlinkMuted:forCallWithUniqueProxyIdentifier:
setDownlinkMuted:forParticipantWithIdentifier:
setDownlinkMuted:forRemoteParticipantsInConversationWithUUID:
setDownlinkMuted:forRemoteParticipantsOnConversationWithUUID:
setDummyPayload:
setDuration:
setDynamicDisplayContext:
setDynamicIdentifier:
setEligibleForHandoff:
setEligibleForPublicIndexing:
setEligibleForSearch:
setEmergency:
setEmergencyCallbackCapabilitiesDidChange:
setEmergencyCallbackModeEnabled:
setEmergencyCallbackPossible:
setEmergencyHandles:
setEmergencyLabeledHandles:
setEmergencySupported:
setEmergencyTUHandles:
setEmergencyTULabeledHandles:
setEnableCriticalReliability:
setEnabled:
setEnclosedEncryptedType:
setEncryptedData:
setEncryptedMessage:
setEndAndAnswerAllowed:
setEndedError:
setEndpointIDSDestination:
setEndpointIDSDestinationURIs:
setEndpointOnCurrentDevice:
setEventBlock:
setExceptionCode:
setExceptionDomain:
setExpectedAudioEnabled:
setExpectedAudioPaused:
setExpectedEndpointOnMessagingDevice:
setExpectedRelayClientDestination:
setExpectedScreenEnabled:
setExpectedVideoEnabled:
setExpectedVideoPaused:
setExpirationDate:
setExpirationDate:withRevision:forConversationLinkDescriptorsWithPredicate:completion:
setExpirationDate:withRevision:forConversationLinkDescriptorsWithPredicate:error:
setExportedInterface:
setExportedObject:
setExternalToneFileURL:
setFaceTimeAudioAvailable:
setFaceTimeConversationProviderDelegate:
setFaceTimeDemuxerDelegate:
setFaceTimeIDStatus:
setFaceTimeIDStatusRefreshed:
setFaceTimeIMAVProviderDelegate:
setFaceTimeInviteDemuxer:
setFaceTimeTransportType:
setFaceTimeVideoAvailable:
setFailureContext:
setFailureExpected:
setFailureReason:
setFallbackApplicationName:
setFamilyName:
setFeatureFlags:
setFilteredOutReason:
setFirewallManager:
setFirstUnlockCallbacks:
setFlags:
setForceExpanseEnabled:
setFrameRate:
setFromHandle:
setFrontBoardOptions:
setGenerateDescriptorInfos:
setGenerateDescriptorVersionSum:
setGeneratorDescriptor:
setGeneratorDescriptors:
setGeneratorVersion:
setGestureHandler:
setGftDowngradeToOneToOneAvailable:
setGivenName:
setGondolaCallingAvailable:
setGridDisplayMode:
setGridDisplayMode:forConversationWithUUID:
setGroupFaceTimeServiceProviderDelegate:
setGroupSessionProviderCreationBlock:
setGroupUUID:
setGroupUUIDString:
setGuest:
setGuestModeEnabled:
setHandedOff:
setHandle:
setHandleType:
setHandler:
setHandoffActivity:
setHandoffAudioController:
setHandoffContext:
setHandoffEligibility:
setHandoffIdentifiers:
setHardPause:
setHardPauseAvailable:
setHardPauseDigits:
setHardPauseDigitsState:
setHardPauseState:
setHasAddCallAllowed:
setHasAmbiguityState:
setHasAudioFinished:
setHasAudioInterruption:
setHasAvMode:
setHasBeenUnlocked:
setHasBeenUnlockedBlock:
setHasCalledStop:
setHasCleanedUp:
setHasConnected:
setHasCreationDateEpochTime:
setHasDateAndTimeSettingsRemediation:
setHasDeviceType:
setHasDisconnectedReason:
setHasEnclosedEncryptedType:
setHasEndAndAnswerAllowed:
setHasEnded:
setHasFaceTimeAudioAvailable:
setHasFaceTimeVideoAvailable:
setHasGenerateDescriptorVersionSum:
setHasGeneratorVersion:
setHasGuestModeEnabled:
setHasHandleType:
setHasHardPauseAvailable:
setHasHardPauseState:
setHasHoldAllowed:
setHasHoldAndAnswerAllowed:
setHasHostCallCreationTime:
setHasIdentifier:
setHasIsActivated:
setHasIsGFTDowngradeToOneToOneAvailable:
setHasIsGondolaCallingAvailable:
setHasIsLetMeInApproved:
setHasIsLightweight:
setHasIsMirageAvailable:
setHasIsMomentsAvailable:
setHasIsSystemActivity:
setHasIsUPlusNDowngradeAvailable:
setHasIsUPlusOneScreenSharingAvailable:
setHasJoined:
setHasLeaveReason:
setHasLightweightPrimaryParticipantID:
setHasLinkLifetimeScope:
setHasLocallyCreated:
setHasLocationSettingsRemediation:
setHasMaximumCallGroups:
setHasMergeable:
setHasMessageSendTime:
setHasNotificationStyles:
setHasOBSOLETEProtoMomentsAvailable:
setHasOptions:
setHasPreferredBroadcastingAttributes:
setHasPrimaryIdentifier:
setHasProtoCannotBeAnswered:
setHasProtoCannotRelayAudioOrVideoOnPairedDevice:
setHasProtoConferenced:
setHasProtoCurrentlyPicked:
setHasProtoDisconnectedReason:
setHasProtoEmergency:
setHasProtoExpectedEndpointOnMessagingDevice:
setHasProtoFailureExpected:
setHasProtoGuest:
setHasProtoHasSentInvitation:
setHasProtoMomentsV2Available:
setHasProtoNeedsManualInCallSounds:
setHasProtoOriginatingUIType:
setHasProtoOutgoing:
setHasProtoPriority:
setHasProtoProtocolVersion:
setHasProtoRemoteUplinkMuted:
setHasProtoSenderMuteUplink:
setHasProtoService:
setHasProtoShouldSuppressInCallUI:
setHasProtoShouldSuppressRingtone:
setHasProtoSoundRegion:
setHasProtoStatus:
setHasProtoSupportsEmergencyFallback:
setHasProtoSupportsRelay:
setHasProtoSupportsTTYWithVoice:
setHasProtoTTYType:
setHasProtoTimeConnected:
setHasProtoUplinkMuted:
setHasProtoVideo:
setHasProtoVoicemail:
setHasProtoWantsHoldMusic:
setHasProtoWantsVideo:
setHasPseudonymExpirationDateEpochTime:
setHasReceivedAccept:
setHasReceivedLetMeInRequest:
setHasReceivedMessageType:
setHasRequestActionType:
setHasRequestBlobRecoveryOptions:
setHasSendToVoicemailAllowed:
setHasSentInvitation:
setHasShouldAssociateScene:
setHasShouldSuppressInCallUI:
setHasStarted:
setHasStartedConnecting:
setHasSupportsAddCall:
setHasSupportsAudioAndVideo:
setHasSupportsAudioOnly:
setHasSupportsDTMF:
setHasSupportsEmergency:
setHasSupportsGrouping:
setHasSupportsHolding:
setHasSupportsLeaveContext:
setHasSupportsRecents:
setHasSupportsSendingToVoicemail:
setHasSupportsUnambiguousMultiPartyState:
setHasSupportsUngrouping:
setHasSupportsVoicemail:
setHasSwappable:
setHasSystemVolume:
setHasTakingCallsPrivateAllowed:
setHasTimestampAsTimeIntervalSinceReferenceDate:
setHasType:
setHasUpdatedDateEpochTime:
setHasValidationSource:
setHasVersion:
setHasVideo:
setHasVideoEnabled:
setHasWiFiSettingsRemediation:
setHeld:
setHeySiriEnabled:
setHighlightIdentifier:
setHoldAndAnswerAllowed:
setHost:
setHostCallCreationTime:
setHostCreationTime:
setHostMessageSendTime:
setHostMessagingDelegate:
setHostProcessAttribution:error:
setHostedOnCurrentDevice:
setIMAVCapabilities:toCaps:
setIMDaemonConnected:
setISOCountryCode:
setIconTemplateImageData:
setIdentificationCategory:
setIdentifier:
setIdentifierUUIDString:
setIdentifiersWaitingForAcknowledgement:
setIdentifiersWithPendingCoalescingBlocks:
setIdsAliasingSalt:
setIdsQueryController:
setIgnoreLMIRequests:
setIgnoreLetMeInRequests:forConversationUUID:
setIgnoreStartPreview:
setIgnoresBluetoothDeviceUID:
setImAccountForActionBlock:
setImage:
setImageData:
setImageTranscoder:
setImageURL:
setInCallServiceProcessState:
setIncludeLocalContacts:
setIncludesCallsInRecents:
setIncomingChatGenerator:
setIncomingSessionProviderGenerator:
setInitialLinkType:
setInitiator:
setInputAudioPowerSpectrumToken:
setInputFrequencyMeteringEnabled:
setInteger:forKey:
setInteger:forKey:error:
setInterfaceOrientationPortrait:
setInterruptionHandler:
setInterruptionLevel:
setInterruptionPriority:error:
setInvalidationHandler:
setInvitation:
setInvitationPreferences:
setInvitationResolver:
setInvitationTimeOut:
setInvitationTimeout:
setInvitationTimeoutTime:
setInviteCompletion:
setInviteData:
setInvitedHandles:
setInvitedHandles:withRevision:forConversationLinkDescriptorsWithPredicate:completion:
setInvitedHandles:withRevision:forConversationLinkDescriptorsWithPredicate:error:
setInvitedMemberHandles:
setInvitedPushTokens:
setIsAccountActive:
setIsAnyOtherAccountDeviceActive:
setIsAudioEnabled:
setIsAudioPausedToStart:
setIsDuplexAudioOnly:
setIsGFTDowngradeToOneToOneAvailable:
setIsGondolaCallingAvailable:
setIsKeyExchangeEnabled:
setIsKnownCaller:
setIsLetMeInApproved:
setIsLightweight:
setIsLightweightMember:
setIsLightweightPrimaryInitiated:
setIsLocallyInitiated:
setIsMirageAvailable:
setIsMomentsAvailable:
setIsOtherInvitedHandle:
setIsRegistered:
setIsRelayEnabled:
setIsRelayForced:
setIsScreenSharingAvailable:
setIsSendingAudio:
setIsSendingVideo:
setIsSendingVideo:forCallWithUniqueProxyIdentifier:
setIsSystemActivity:
setIsUPlusNDowngradeAvailable:
setIsUPlusOneScreenSharingAvailable:
setIsVideoEnabled:
setIsVideoPausedToStart:
setIsWindowed:
setIsoCountryCode:
setItem:
setJoinCallActivity:
setJoined:
setJoinedFromLetMeIn:
setJoinedFromLink:
setJoinedMetadata:
setJunkConfidence:
setKeywords:
setKickMemberRetryCount:
setKickedMembers:
setKickedParticipants:
setLabel:
setLastRebroadcastTime:
setLegacyCapability:enabled:capabilityInformation:
setLetMeIn:
setLetMeInDelegationHandle:
setLetMeInDelegationUUID:
setLetMeInKeyAgreement:
setLetMeInRequestState:
setLightweightMembers:
setLightweightPrimary:
setLightweightPrimaryParticipantID:
setLightweightPrimaryParticipantIdentifier:
setLightweightRetryCount:
setLink:
setLinkLifetimeScope:
setLinkName:
setLinkName:forConversationLink:completionHandler:
setLinkName:forLink:completionHandler:
setLinkedUserURIs:
setLinks:
setListeningIdentifiersByActivityType:
setLocalAccountHandle:
setLocalCallerID:
setLocalCallerIDForProvider:
setLocalCapabilities:
setLocalClientActive:
setLocalDeviceID:
setLocalDeviceUpdatedHandler:
setLocalInviteDictionary:
setLocalLandscapeAspectRatio:
setLocalLightweightSecondaryMember:
setLocalParticipantAudioVideoMode:
setLocalParticipantAudioVideoMode:forConversationUUID:
setLocalParticipantIdentifier:
setLocalParticipantType:
setLocalParticipantUUID:
setLocalPortraitAspectRatio:
setLocalPortraitAspectRatio:localLandscapeAspectRatio:
setLocalSenderIdentityAccountUUID:
setLocalSenderIdentityAccountUUIDString:
setLocalSenderIdentityUUID:
setLocalSenderIdentityUUIDString:
setLocalThumperAccounts:
setLocalThumperDeviceID:
setLocalizedHandoffRecipientDeviceCategory:
setLocalizedName:
setLocalizedServiceName:
setLocalizedShortName:
setLocallyConnected
setLocallyConnecting
setLocallyCreated:
setLocallyDisconnectedWithReasonIfNone:
setLocallyDisconnectedWithReasonIfNone:stopConference:
setLocallyHasSentInvitation
setLocallyHasStartedOutgoing
setLocation:
setLockStateNotificationToken:
setLockdownModeEnabled:
setMXSessionProperty:value:error:
setMachServiceName:
setManager:
setMapName:
setMaxVideoDecodesAllowed:
setMaximumCallGroups:
setMaximumCallsPerCallGroup:
setMayRequireBreakBeforeMake:
setMediaBlob:
setMediaPlaybackOnExternalDevice:
setMediaType:
setMemberHandlesAwaitingInvitesToLink:
setMemberIdentifiers:
setMembers:
setMergeable:
setMergedCallUpdate:
setMessage:
setMessageProxy:
setMessageSendTime:
setMessagesGroupName:
setMessagesGroupName:onConversationWithUUID:
setMessagesGroupUUID:
setMessagesGroupUUIDString:
setMessenger:
setMetadata:
setMicrophoneMuted:
setMiddleName:
setMirageAvailable:
setMirageEnabled:
setMirageHandshakeBlobCreationBlock:
setMirageHandshakeData:
setMixesVoiceWithMedia:
setMixesVoiceWithMedia:forCallWithUniqueProxyIdentifier:
setMockAudioCategory:
setMockAudioInterruptionActivationStateObserver:
setMockAudioInterruptionProviderType:
setMockAudioMode:
setMockBackingCallSource:
setMockBytesOfDataUsed:
setMockCallDuration:
setMockCallGroupUUID:
setMockCallRelaySupport:
setMockCallStatus:
setMockCallUUID:
setMockCallerNameFromNetwork:
setMockCompanyName:
setMockConferenced:
setMockConnected:
setMockConnecting:
setMockContactIdentifiers:
setMockConversation:
setMockDateConnected:
setMockDateCreated:
setMockDisconnectedReason:
setMockDisplayContext:
setMockDisplayName:
setMockEmergency:
setMockFailureExpected:
setMockHandle:
setMockHasBeenRedirected:
setMockHasSentInvitation:
setMockHasStartedOutgoing:
setMockHostedOnCurrentDevice:
setMockInitialLinkType:
setMockIsThirdPartyVideo:
setMockIsVideoPaused:
setMockJunkConfidence:
setMockKnownCaller:
setMockLocalizedLabel:
setMockMayRequireBreakBeforeMake:
setMockOutgoing:
setMockPTT:
setMockPrefersExclusiveAccessToCellularNetwork:
setMockProvider:
setMockProviderContext:
setMockProviderErrorCode:
setMockScreenShareAttributes:
setMockSharingScreen:
setMockShouldSuppressInCallUI:
setMockSupportsEmergencyFallback:
setMockSupportsTTYWithVoice:
setMockUniqueProxyIdentifier:
setMockUplinkWasExplicitlyMuted:
setMockUsingBaseband:
setMockVideoStreamToken:
setMockVoicemail:
setMode:
setModel:
setModelIdentifier:
setMomentsAvailable:
setMomentsController:
setMomentsGenerator:
setMostRecentCompletedOneToOneEnabledValue:
setMute:
setMuted:
setMuted:forIdentifier:
setMutuallyExclusiveCall:
setName:
setName:withRevision:forConversationLinkDescriptorsWithPredicate:completion:
setName:withRevision:forConversationLinkDescriptorsWithPredicate:error:
setNamePrefix:
setNameSuffix:
setNeedsManualInCallSounds:
setNeedsSave:
setNetworkExtensionClient:
setNetworkExtensionClientManager:
setNickname:
setNotificationCategories:
setNotificationProviderIdentifier:
setNotificationStyles:
setNotificationStylesByHandleType:
setNotifyObserver:
setNumberOfLoops:
setOBSOLETEConferenceIdentifier:
setOBSOLETEProtoMomentsAvailable:
setObject:
setObject:forContextualKeyPath:responseQueue:withCompletion:
setObject:forKey:
setObject:forKeyedSubscript:
setObserverToQueue:
setOnEmergencyCall:
setOnHold:
setOneToOneEnabled:
setOneToOneHandoffOngoing:
setOneToOneModeEnabled:
setOneToOneModeEnabled:withCompletionBlock:
setOngoingDescription:
setOptions:
setOrientationEventsEnabled:
setOrientationMonitor:
setOriginalPauseDigitsString:
setOriginalResolution:
setOriginalRingtoneSoundURL:
setOriginalRingtoneSoundURLString:
setOriginatingDeviceType:
setOriginatingUIType:
setOriginator:
setOriginatorHandle:
setOtherInvitedHandles:
setOtherInvitedTUHandles:
setOutgoing:
setOutgoingCallerID:
setOutgoingChatGenerator:
setOutgoingLocalParticipantUUID:
setOutgoingLocalParticipantUUID:forRecentCallsMatchingPredicate:
setOutgoingPinRequestIdentifier:
setOutgoingRelayCallerID:
setOutgoingSessionProviderGenerator:
setOutputAudioPowerSpectrumToken:
setOutputFrequencyMeteringEnabled:
setPairedDevice:
setPairedHostDeviceState:
setParticipantAssociation:
setParticipantAudioVideoMode:forParticipant:
setParticipantDestinationIDs:
setParticipantGroupUUID:
setParticipantRefreshBlock:
setParticipantType:forLocalConversationParticipant:
setParticipantType:forLocalMemberDestination:
setParticipantType:forRemoteConversationMemberDestinations:
setParticipantType:forRemoteMemberDestinations:
setParticipantUpdateSanitizer:
setPassiveOrientationEvents:
setPasswordType:
setPauseAudio:callID:error:
setPauseDigitsQueue:
setPauseVideo:callID:error:
setPauseVideoToStart:
setPeerReportingIdentifier:sessionIdentifier:
setPeerReportingIdentifier:sessionIdentifier:forCallID:
setPendingAllowedMembers:
setPendingCodesToDevicesForApproval:
setPendingCompletions:
setPendingConversation:
setPendingConversationCleanupTimer:
setPendingConversationParticipantsByIdentifier:
setPendingKickedMembersByIdentifier:
setPendingMemberHandles:
setPendingMembers:
setPendingMembershipTracker:
setPerformDialAssist:
setPerformLocalDialAssist:
setPersonNameComponents:
setPhoneNumberMCCToISOCountryCodeTransformBlock:
setPhoneNumberURI:
setPhoneticRepresentation:
setPhotoRequestFailureCount:
setPhotoRequestSuccessCount:
setPinExchangeDelegate:
setPlaybackObserver:
setPowerAssertionManager:
setPredicate:
setPreferredBroadcastingAttributes:
setPrepareToStopTimeout:
setPreparedToStop:
setPresentationInfo:
setPresentationRect:
setPresentationRect:forConversationWithUUID:
setPresentationState:
setPresentationState:forConversationWithUUID:
setPrimary:
setPrimaryAvcIdentifier:
setPrimaryDeviceID:
setPrimaryHandle:
setPrimaryIdentifier:
setPrioritizedTUSenderIdentities:
setPriority:
setPrivateKey:
setProcessAssertion:
setProcessAssertions:
setProcessHandle:
setProcessStateChanged:
setProcessStateChangedWithBundleID:
setProductionConnection:
setProminenceIndex:
setPromptForPasswordHandler:
setProtoCallCapabilitiesState:
setProtoCallModel:
setProtoCallModelState:
setProtoCalls:
setProtoCannotBeAnswered:
setProtoCannotRelayAudioOrVideoOnPairedDevice:
setProtoConferenced:
setProtoCurrentlyPicked:
setProtoDTMFKey:
setProtoDisconnectedReason:
setProtoDisplayContext:
setProtoEmergency:
setProtoExpectedEndpointOnMessagingDevice:
setProtoFailureExpected:
setProtoGuest:
setProtoHasSentInvitation:
setProtoMomentsV2Available:
setProtoNeedsManualInCallSounds:
setProtoOriginatingUIType:
setProtoOutgoing:
setProtoPersonNameComponents:
setProtoPriority:
setProtoProtocolVersion:
setProtoProvider:
setProtoRemoteUplinkMuted:
setProtoSOS:
setProtoSenderMuteUplink:
setProtoService:
setProtoSoundRegion:
setProtoSupportedHandleTypes:count:
setProtoSupportsEmergencyFallback:
setProtoSupportsRelay:
setProtoSupportsTTYWithVoice:
setProtoTTYType:
setProtoTimeConnected:
setProtoUUID:
setProtoUpgradeSessionUUID:
setProtoUplinkMuted:
setProtoVideo:
setProtoVoicemail:
setProtoWantsHoldMusic:
setProtoWantsVideo:
setProtocolVersion:
setProvider:
setProviderCallDelegate:
setProviderDidBegin:
setProviderEndedReason:
setProviderErrorCode:
setProviderFailureReasonIfNecessary:
setProviderIdentifier:
setProviderIdentifiersForExistingCalls:
setProviderSource:
setProviders:
setProvidersByIdentifier:
setProximityChangeHandler:
setProximityController:
setProximityDetectionMode:
setProximitySensorCovered:
setProximitySensorEnabled:
setProximitySensorObserver:
setPseudonym:
setPseudonymExpirationDateEpochTime:
setPseudonymFeatureID:
setPseudonyms:
setPublicKey:
setPushKitClient:
setPushKitClientManager:
setQueue:
setQueueItemType:
setRaiseToAnswerController:
setRaiseToEarGestureManager:
setRate:
setRead:
setRead:forCallsWithPredicate:completion:
setRebroadcastTimeThreshold:
setReceivedInvitationAccept:
setReceivedMessageType:
setReceivedSuccessfulDidStart:
setReceiverProtocolVersion:
setRecentlyLeftParticipantIdentifiers:
setRecoverMessage:
setRegisteredLocalProvidersByIdentifier:
setRegisteredPairedHostDeviceProvidersByIdentifier:
setRejectedMembers:
setRelay:
setRelayCallDataSource:
setRelayCallingAvailability:
setRelayCallingDisabledForDeviceID:
setRelayCallingEnabled:
setRelayCallingEnabled:forDeviceWithID:
setRelayCapableDeviceExists:
setRelayClientController:
setRelayClientTransport:
setRelayCommonController:
setRelayDelegate:
setRelayHostController:
setRelayMessagingController:
setRelayed:
setRelaying:
setRelaying:forConversationWithUUID:
setRemoteAudioEnabled:
setRemoteDestination:
setRemoteDevice:
setRemoteFromID:
setRemoteHandle:
setRemoteIDSDestination:
setRemoteIDSDestinationURI:crossDeviceIdentifier:
setRemoteIDSDestinations:
setRemoteInviteDictionary:
setRemoteMemberHandles:
setRemoteMembers:
setRemoteMomentsAvailable:
setRemoteObjectInterface:
setRemoteParticipantHandles:
setRemoteParticipantTUHandles:
setRemoteParticipantsDownlinkMuted:
setRemotePushTokens:
setRemoteUplinkMuted:
setRemoteUplinkMutedSetTime:
setRemoteVideoEnabled:
setRemoteVideoPaused:
setRemoteVideoPresentationSizeForCallWithUniqueProxyIdentifier:size:
setRemoteVideoPresentationState:
setRemoteVideoPresentationStateForCallWithUniqueProxyIdentifier:presentationState:
setRemovedMembers:
setReport:
setReportData:
setReportType:
setReporters:
setReportingHierarchySubToken:
setReportingHierarchyToken:
setRepresentedApplicationBundle:
setRepresentsTransitionFromPending:
setRequestActionType:
setRequestBlobRecoveryOptions:
setRequestCLTMThrottleUncapToken:
setRequiredCapabilities:requiredLackOfCapabilities:
setRequiredConnectionCapability:
setRequiresAuthentication:
setRequiresInCallSounds:
setRequiresInviteDictionary:
setResolvedDescriptor:
setResolver:
setRetry:
setRetryCount:
setRingtoneSoundURL:
setRingtoneSoundURLString:
setRoute:
setRouteManager:
setRouteWasPickedHandler:
setRoutes:
setRoutesDidChangeHandler:
setSKEBlob:
setSandboxExtensionHandle:
setSceneAssociationBehavior:
setScreenCaptureDisplayID:
setScreenEnabled:
setScreenEnabled:attributes:
setScreenEnabled:forConversationWithUUID:
setScreenEnabled:forParticipantWithIdentifier:
setScreenEnabled:withScreenShareAttributes:forConversationWithUUID:
setScreenShareAttributes:
setScreenShareAttributes:forConversationWithUUID:
setScreenShareAttributesForCallWithUniqueProxyIdentifier:attributes:
setScreenSharingAvailable:
setSecondaryThumperAccounts:
setSelectiveScreenUUID:
setSendDataBlock:
setSendToVoicemailAllowed:
setSender:
setSenderIdentityCapabilitiesStateByUUID:
setSenderIdentityUUID:
setSenderMuteUplink:
setSendingAudio:
setSendingAudio:callID:error:
setSendingAudio:forIdentifier:
setSendingAudioData:
setSendingVideo:
setSendingVideoExpected:
setServerBag:
setServerProvidedLightweightParticipantIdentifiers:
setServerProvidedParticipantIdentifiers:
setService:
setServiceProvider:
setServiceProviders:
setSession:
setSessionApprovalClient:
setSessionEventType:
setSessionObserver:
setSessions:
setSharePlayProtocolVersion:
setSharePlaySystemStateObserver:
setSharingScreen:
setSharingScreen:attributes:
setSharingScreen:attributes:forCallWithUniqueProxyIdentifier:
setSharingScreen:forCallWithUniqueProxyIdentifier:
setShouldAcceptDateConnectedProviderUpdates:
setShouldAssociateScene:
setShouldAuthenticateDefaultAction:
setShouldBackgroundDefaultAction:
setShouldCheckAllGenerators:
setShouldFilterCall:
setShouldHandleSecureMicrophoneEvents:
setShouldIgnoreDowntime:
setShouldIgnoreRingerSwitch:
setShouldMoveFile:
setShouldPreferRelayOverDirectSecondaryCalling:
setShouldRepeat:
setShouldStartAudioPaused:
setShouldStartVideoPaused:
setShouldSuppressInCallUI:
setShouldSuppressRingtone:
setSignalHandlerDispatchSources:
setSilencingUserInfo:
setSiriDisplayName:
setSound:
setSourceIdentifier:
setSplitSessionSecondary:
setSpringBoardPID:
setStagedActivitySession:
setStagedActivitySessionForActivitySession:
setStartWhenStaged:
setState:
setStatus:
setStatusBarManager:
setStatusChangeObserver:
setStreamPreferences:
setString:forKey:error:
setStyle:
setSubscription:capability:enabled:info:
setSubscriptions:
setSubtitle:
setSuggestedName:
setSupported:
setSupportedHandleTypes:
setSupportedMediaTypes:
setSupportsAddCall:
setSupportsAudioAndVideo:
setSupportsAudioOnly:
setSupportsBasebandCalling:
setSupportsCellularData:
setSupportsClientAssertions:
setSupportsContinuationOnTV:
setSupportsCurrentPlatform:
setSupportsDTMF:
setSupportsDisplayingFaceTimeAudioCalls:
setSupportsDisplayingFaceTimeVideoCalls:
setSupportsDisplayingTelephonyCalls:
setSupportsEmergency:
setSupportsEmergencyFallback:
setSupportsFaceTimeAudioRelayCalling:
setSupportsFaceTimeVideoRelayCalling:
setSupportsGrouping:
setSupportsHolding:
setSupportsLeaveContext:
setSupportsMessagesGroupProviding:
setSupportsPrimaryCalling:
setSupportsRecents:
setSupportsRelay:
setSupportsRelayCalling:
setSupportsRestrictingSecondaryCalling:
setSupportsRinging:
setSupportsSendingToVoicemail:
setSupportsSimultaneousVoiceAndData:
setSupportsTTYWithVoice:
setSupportsTelephonyRelayCalling:
setSupportsUnambiguousMultiPartyState:
setSupportsUngrouping:
setSupportsVideo:
setSupportsVoicemail:
setSwappable:
setSynchronousExportedObjectProxy:
setSynchronousServer:
setSystemActivity:
setSystemActivitySessions:
setSystemVolume:
setTTYType:
setTTYType:forCallWithUniqueProxyIdentifier:
setTTYType:forCalls:
setTUInvitationPreferences:
setTURouteDeviceType:
setTakingCallsPrivateAllowed:
setTarget:
setTargetContentIdentifier:
setTelephonyCapableDeviceExists:
setTelephonySenderIdentities:
setThreadIdentifier:
setThumperCallingAllowed:onSecondaryDeviceWithID:
setThumperCallingAllowed:onSecondaryDeviceWithID:forSenderIdentityWithUUID:
setThumperCallingAllowedOnDefaultPairedDevice:forSenderIdentityWithUUID:
setThumperCallingAllowedOnDefaultPairedDeviceDefault:
setThumperCallingAssociatedAccountID:
setThumperCallingCapabilitiesState:
setThumperCallingEnabled:
setThumperCallingEnabled:forSenderIdentityWithUUID:
setTimeToEstablish:
setTimebase:
setTimeout:
setTimeoutBlock:
setTimeoutTimer:
setTimestamp:
setTimestampAsTimeIntervalSinceReferenceDate:
setTitle:
setTokenPrefixedURI:
setToneIdentifier:
setTopic:
setTransitionStatus:
setTransmissionMode:
setTransmissionState:
setTransport:
setTriggers:
setTrustedFromHandle:
setTtyType:
setTuConversationMembers:
setTuHandle:
setTuProvider:
setTuProvider:isVideo:
setTwoTimeCallthroughInterval:
setType:
setUPlusNDowngradeAvailable:
setUPlusOneScreenShareAvailable:
setUUID:
setUUIDString:
setUnderlyingUplinkMuted:
setUniqueID:
setUniqueId:
setUniqueIdentifier:
setUniqueProxyIdentifier:
setUniqueProxyIdentifierToCallTable:
setUniqueProxyIdentifierToCallTableSemaphore:
setUnreliableMessengerConfig:
setUnsafeData:
setUpBreakBeforeMakeTimeout
setUpSession
setUpdateMessage:
setUpdatedDateEpochTime:
setUpgrade:
setUpgradeSessionUUID:
setUpgradeTimeout:
setUplinkMuted:forCallWithUniqueProxyIdentifier:
setUplinkMuted:forCalls:
setUplinkMuted:forConversationWithUUID:
setUplinkMuted:forPendingConversationWithUUID:
setUplinkMutedSetTime:
setUplinkWasExplicitlyMuted:
setUserActivity:
setUserConfiguration:
setUserInfo:
setUserNotificationController:
setUsesNotificationCenter:
setUsingAirplay:forActivitySessionUUID:
setUsingAirplay:forActivitySessionWithUUID:
setUsingAirplay:onActivitySession:onConversationWithUUID:
setUsingBaseband:
setValidationSource:
setValue:
setVerificationStatus:
setVersion:
setVibrationIdentifier:
setVideo:
setVideo:forConversationWithUUID:
setVideoEnabled:
setVideoEnabled:forConversationWithUUID:
setVideoEnabled:forParticipantWithIdentifier:
setVideoEnabled:forPendingConversationWithUUID:
setVideoEnabled:forRemoteParticipantWithIdentifier:conversationUUID:
setVideoPaused:forConversationWithUUID:
setVideoPositionalInfo:
setVideoPriority:
setVideoQuality:
setVideoQuality:visibility:prominence:spatialPosition:isInCanvas:forParticipantWithIdentifier:
setVideoStreamToken:
setVirtualParticipantConfig:
setVirtualParticipants:
setVisibilityContext:
setVisibilityIndex:
setVoLTECallingAvailable:
setVoLTECallingCapabilitiesState:
setVoLTECallingEnabled:forSenderIdentityWithUUID:
setVoiceOverObserver:
setVoiceOverRunningDeterminationHandler:
setVoiceOverTouchShouldRouteToSpeakerDeterminationHandler:
setVoicemail:
setVoipApplicationController:
setVoipToken:
setVolume:
setVoucherManager:
setWaitingForRemoteJoin:forConversationUUID:
setWaitingToJoin:forConversationUUID:
setWaitingToPruneParticipants:
setWantsCallDisconnectionOnInvalidation:
setWantsHoldMusic:
setWantsNotificationResponsesDelivered
setWantsStagingArea:
setWantsVideo:
setWasDialAssisted:
setWiFiCallingAvailable:
setWiFiCallingCapabilitiesState:
setWiFiCallingEnabled:forSenderIdentityWithUUID:
setWiFiCallingRoamingEnabled:forSenderIdentityWithUUID:
setWiFiEmergencyCallingAvailable:
setWindowUUID:
setWindowed:
setWithArray:
setWithCapacity:
setWithObject:
setWithSet:
setupIMAVController
setupNewAVCSession:
setupPendingConversationCleanupTimer
sharePlayAvailable
sharePlayAvailableChanged:
sharePlayDisabled
sharePlayProtocolVersion
sharePlaySupported
sharePlaySystemStateObserver
sharePlayVersionCheckEnabled
sharePlayWithAirplayEnabled
sharedAVSystemController
sharedAudioSystemController
sharedInstance
sharedInstanceWithQueue:
sharedInstanceWithQueue:server:shouldRegister:
sharedManager
sharedMonitor
sharedPhotoLibrary
sharedPrivacyManager
sharedUtilityProvider
shortLabel
shouldAcceptDateConnectedProviderUpdates
shouldAcceptIncomingInvite
shouldAcceptMembershipUpdateFromHandle:joinContext:participantUpdate:existingConversation:
shouldAcceptMessageFromHandle:messageContext:message:existingConversation:
shouldAllowRingingCallStatusIndicator:
shouldAssociateScene
shouldAutoLaunchAppForActivity:onConversation:
shouldBlockNonEmergencyCalls
shouldCheckAllGenerators
shouldDeclineSecondSessionInviteWithMessage:
shouldDeclineSessionInviteWithMessageWhenRelayIsDisabled:
shouldDisableOneToOneModeForScreenShare
shouldDisplayHandoffEligibleConversationControls
shouldEnableProximitySensor
shouldEnrollDefaultPairedDeviceForAccountID:
shouldFilterCall
shouldFilterClient:
shouldFilterIncomingCall:
shouldHandleCarPlayControlEvents
shouldHandleProvider:
shouldHandleProviderWithIdentifier:
shouldHandleSecureMicrophoneEvents
shouldHandleUpdateForProvider:
shouldIgnoreIDSMessage:fromID:context:
shouldIgnoreIDSResource:metadata:fromID:context:
shouldIgnoreSessionInviteWithMessage:fromDestination:
shouldOverrideCallStatus
shouldOverrideNetworkAsAvailable
shouldPreferRelayOverDirectSecondaryCalling
shouldPreserveMomentsFile
shouldProcessRelayMessageOfType:
shouldRegisterCall:
shouldRelayToOtherDevices
shouldRestrictAddresses:forBundleIdentifier:performSynchronously:
shouldRestrictAddresses:forBundleIdentifier:performSynchronously:reply:
shouldRouteToSpeakerWithProximity
shouldScreenTimeRestrictMessage:
shouldSendCall:forClient:
shouldShowInvitationRingingUIForConversation:handle:
shouldShowInvitationRingingUIForConversation:handle:invitationMessagePreferences:
shouldShowInvitationUserNotificationForConversation:handle:
shouldStartAudioPaused
shouldStartRingingTimeoutForConversation:handle:
shouldStartVideoPaused
shouldSuppressInCallStatusBar:
shouldSuppressInCallUI
shouldSuppressRingtone
shouldSuppressRingtoneChanged:
shouldTraceSingposts
shouldTrackCall:
shouldUnenrollDefaultPairedDeviceForAccountID:
shouldUpdateSubscriptions
shouldUseIDSDemuxer
shouldUseSocketForTransport
showEmergencyAddressDisclaimerOnSecondaryDevice
showReminderNotificationOnSecondaryDevice
sign:as:completion:
signData:withAlgorithm:completion:
signalHandlerDispatchSources
signedIntoiCloud
silenceUnknownCallersEnabled
silenceUnknownFaceTimeCallersEnabled
silencingUserInfo
simLessSubscriptionsDidChange
simulateCrashReportFromPID:withKillCode:usingReasonWithFormat:
simulateCrashReportWithFormat:
simulateCrashReportWithReason:pid:code:
simulateInternationalCall
slot
slotID
socket
sortDescriptorWithKey:ascending:
sortUsingSelector:
sortedArrayUsingComparator:
sortedArrayUsingDescriptors:
sound
soundRegion
soundWithAlertType:
sourceIdentifier
sourceIdentifierForRouteID:
sourceVersion
spatialAudioSourceIdentifier
spatialAudioSourceIdentifierForIdentifier:
speakerRoute
speakerRouteAvailable
speechSynthesizer:didCancelSpeechUtterance:
speechSynthesizer:didContinueSpeechUtterance:
speechSynthesizer:didFinishSpeechUtterance:
speechSynthesizer:didPauseSpeechUtterance:
speechSynthesizer:didStartSpeechUtterance:
speechSynthesizer:willSpeakRangeOfSpeechString:utterance:
splitSessionEnded:
splitSessionSecondary
splitSessionStarted:
springBoardPID
springBoardProcessObserver
stableBundleIdentifierForLocalBundleIdentifier:
stagedActivitySession
standardInvitationPreferencesForLink
standardUserDefaults
start
startActivitySessionFor:with:
startAudio
startAudioForConversationWithUUID:
startAudioForConversationsIfNecessary
startAudioSessionWithCompletionHandler:
startBagLoad
startCapture
startConferenceForAnsweredCallWithTransport:remoteInviteDictionary:
startConferenceForDialedCallWithTransport:remoteInviteDictionary:
startConferenceForIdentifier:usingTransport:remoteInviteDictionary:didStartHandler:didStopHandler:
startConferenceForPulledCallWithTransport:remoteInviteDictionary:
startConfigurationWithCompletionHandler:
startConnectionAsCaller:capabilities:socket:error:
startConnectionAsCaller:remoteInviteDictionary:capabilities:destination:error:
startConnectionWithCallID:inviteData:isCaller:capabilities:destination:error:
startConnectionWithCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:error:
startConnectionWithTransport:
startListeningForBestAppSuggestions
startListeningOnMachServiceWithName:
startObservingSessions
startOutgoingOneToOneTimeoutIfNecessary:
startRequestWithMediaType:forStreamToken:requesteeID:reply:
startSuppressRingtoneActivityBroadcastingForCall:
startSuppressRingtoneActivityBroadcastingIfNecessaryForCallWithStatusChange:
startTrackingCall:
startTrackingClient:forProviderIdentifier:
startWithVideoAspectRatioDescriptor:inviteCompletion:
startedCapturingLocalVideo:
startedConnectionAttemptOnTransport:
state
status
statusBarManager
stop
stopActivitySession
stopAudioSession
stopBroadcastingActivity:
stopCallID:
stopCapture
stopConference
stopConferenceForIdentifier:
stopListeningForActivityType:dynamicIdentifier:
stopListeningForActivityType:matchingDynamicIdentifierSubstring:
stopListeningForBestAppSuggestions
stopPlaying
stopSelectiveSharingSession
stopSpeakingAtBoundary:
stopTrackingCall:
stopTrackingPendingMember:forConversation:triggeredLocally:
stoppedCapturingLocalVideo:
stoppedReceivingActivityType:dynamicIdentifier:
storageGuid
storeReceivedLink:fromHandle:isUpdate:completionHandler:
storeWithOptions:
streamToken
streamTokenForStreamGroupID:
streamTokensByCSDClient
string
stringByAppendingFormat:
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:
stringForIMAVChatEndedReason:
stringForKey:
stringForKey:error:
stringForSignatureType:
stringFromContact:style:
stringGUID
stringRepresentationForTUCallDisconnectedReason:
stringValue
stringWithCString:encoding:
stringWithCharacters:length:
stringWithFormat:
stringWithUTF8String:
strongToStrongObjectsMapTable
strongToWeakObjectsMapTable
style
subTitle
subscriptionInfoDidChange
subscriptionStateChangedWithNotification:
subscriptions
subscriptionsDidChangeForClient:
subscriptionsInUse
substringFromIndex:
substringToIndex:
substringWithRange:
subtitle
suggestedName
suggestedNamesForDestinationID:onlySignificant:error:
suggestionsReloadForSelectedRecipients
superclass
supportedHandleTypes
supportedMediaTypes
supportedTUHandleTypes
supportsAudioAndVideo
supportsAudioOnly
supportsBasebandCalling
supportsCapability:
supportsCellularData
supportsClientAssertions
supportsContinuationOnTV
supportsConversations
supportsCurrentPlatform
supportsDTMF
supportsDefaultPairedDevice
supportsDisplayingFaceTimeAudioCalls
supportsDisplayingFaceTimeVideoCalls
supportsEmergency
supportsEmergencyFallback
supportsGrouping
supportsLeaveContext
supportsLinks
supportsMessagesGroupProviding
supportsNonWiFiCalling
supportsNonWiFiFaceTime
supportsPhoneCalls
supportsPrimaryCalling
supportsRelay
supportsRelayCalling
supportsRelayCallingWithoutLocalRelayCallingEnabled
supportsRelayingToOtherDevices
supportsRestrictingSecondaryCalling
supportsScreenSharing
supportsSecureCoding
supportsSendingToVoicemail
supportsSharePlay
supportsSimultaneousVoiceAndData
supportsTTYWithVoice
supportsThumperCallingOverCellularData
supportsUnambiguousMultiPartyState
supportsUngrouping
supportsVideo
supportsVoicemail
supportsWLAN
suppressRingtoneDueToRemoteSuppression
swapCalls
swappable
switchBackToOneToOneIfPossible
switchBackToOneToOneIfPossibleUsingDelay:
switchBluetoothAudioFormats
synchronize
synchronizeExtensionsWithCompletionHandler:
synchronous
synchronousExportedObjectProxy
systemCapabilitiesForSubscription:
systemMuteStatusChanged:
systemStateObserver:screenSharingAllowedStateChanged:
systemStateObserver:sharePlayAllowedStateChanged:
systemStatusPublisher
systemVolume
takingCallsPrivateAllowed
targetContentIdentifier
targetWithPid:
taskState
telephonyCallCapabilities
telephonyCallCapabilitiesChanged
telephonyCallSource
telephonyCapableDeviceExists
telephonyProvider
telephonySenderIdentities
telephonySubscriptionLabelIdentifierForSenderIdentityUUID:
telephonySubscriptions
temporaryDirectory
temporaryFilePath
temporaryGroupUUID
terminatingHandle
thumperCallingAllowedOnDefaultPairedDeviceDefault
thumperCallingCapabilitiesStateByUUID
thumperCallingCapabilitiesStateForAccountID:
thumperCapabilitiesMonitor
thumperCapabilitiesStatesForPreferenceKey:
thumperDeviceInfo
thumperPinExchangeController
thumperPushHandler
thumperService
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timebase
timedOutPickingRouteHandler
timeoutBlock
timeoutForInvitationWithMessage:
timeoutTimer
timestamp
timestampAsTimeIntervalSinceReferenceDate
tinCanCallSource
tinCanProvider
tinCanProviderDelegate
title
toID
tokenPrefixedURI
topic
topicFromBundleId:forType:
trace:
transactionID
transactionManager
transactionObjectsAwaitingCallHistory
transcriptionState
transferFileAtSandboxExtendedURL:toDestinations:withMetadata:
transferFileAtTemporaryURL:toDestinations:withMetadata:
transferFileAtURL:toDestinations:withMetadata:
transitionAttemptForConversation:
transitionStatus
transmissionMode
transmissionState
transport
transportType
triggerEndInterruptionForAudioSessionID:
triggers
trustedFromHandle
tryPassword:
tuActivity
tuActivitySessions
tuAssociationForHandle:
tuConversation
tuConversationActivity
tuConversationActivityContext
tuConversationActivitySession
tuConversationLink
tuConversationLinkDescriptor
tuConversationMember
tuConversationMembers
tuConversationParticipant
tuConversationParticipantAssociation
tuConversationProvider
tuConversationProviderForIdentifier:
tuConversationReport
tuHandle
tuHandleType
tuHandlesWithHandles:
tuInvitationPreference
tuInvitationPreferences
tuLightweightMembers
tuProvider
tuProviders
tuRouteDeviceType
tuScreenShareAttributesForScreenAttributes:
tuSenderIdentity
tuSystemActivitySessions
tuVoucher
tu_UUIDv5ForString:namespaceUUID:
tu_contactStoreConfigurationForBundleIdentifier:
tu_contactsForContactHandles:keyDescriptors:error:
tu_contactsForHandles:keyDescriptors:error:
tu_containsObjectPassingTest:
tu_conversationHandoffDynamicIdentifierForEligibility:
tu_conversationHandoffDynamicIdentifierWithGroupUUID:participantIdentifier:uplinkMuted:sendingVideo:
tu_dataForAuditToken:
tu_defaults
tu_enumeratorForChangeHistoryFetchRequest:error:
tu_firstObjectPassingTest:
tu_handoffEligibility
tu_predicateForConversationLinkDescriptorsIsDeleted:
tu_predicateForConversationLinkDescriptorsWithActivated:
tu_predicateForConversationLinkDescriptorsWithExpirationDateAfter:
tu_predicateForConversationLinkDescriptorsWithGroupUUID:
tu_predicateForConversationLinkDescriptorsWithPrivateKey:
tu_predicateForConversationLinkDescriptorsWithPseudonym:
tvDeviceAppeared:
tvDeviceDisappeared:
twoTimeCallthroughInterval
type
typeAsString:
typeString
uNNotificationsMacOSEnabled
uPlusNDowngradeAvailable
uPlusOneScreenSharing
uPlusOneScrenShareAvailable
uUIDString
underLimitForItem:
underlyingErrorCode
underlyingUplinkMuted
unenrollDefaultPairedDeviceForAccountID:
unformattedInternationalRepresentation
ungroupCall:
ungroupCall:fromOtherCallsInGroup:
ungroupCallWithUniqueProxyIdentifier:
unhold
unholdCall:
unholdCallWithUniqueProxyIdentifier:
unifiedContactWithIdentifier:keysToFetch:error:
unifiedContactsMatchingPredicate:keysToFetch:error:
unionSet:
uniqueID
uniqueIDOverride
uniqueId
uniqueIdentifier
uniqueProxyIdentifier
uniqueProxyIdentifierToCallTable
uniqueProxyIdentifierToCallTableSemaphore
uniqueProxyIdentifierUUID
uniqueRingtoneSoundLinkFilenameWithOriginalFilename:
unregisterActivityType:dynamicIdentifier:
unregisterClient:
unregisterStreamToken:
unregisterStreamToken:reply:
unreliableMessengerConfig
unreliableMessengerEnabled
unsafeData
unsetVoIPToken
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsuppressRingtoneIfNecessary
unzipArchiveAtURL:completion:
update
updateActivatedConversationLinks:
updateActivityAuthorizedBundleIdentifierState:
updateActivityImage:
updateActivitySessionWithUUID:activity:
updateAllowedHandlesForConversation:
updateAttributionsForDescriptor:
updateAudioArbitration
updateAudioVideoHandoffPreferencesForCall:
updateBytesOfDataUsed:forCallWithUniqueProxyIdentifier:callHistoryIdentifier:
updateBytesOfDataUsedFor:with:
updateCacheWithChat:
updateCallHandoffRegistration
updateCallWithProxy:
updateCapabilities:
updateCapabilities:forCallID:
updateClientsWithCall:
updateClientsWithFrequency:inDirection:forCalls:
updateClientsWithMeterLevel:inDirection:forCalls:
updateConferenceForIdentifier:isUsingBaseband:disableAudio:
updateConfiguration:
updateConversation:
updateConversationHandoffEligibility:
updateConversationParticipantToHaveMatchingSiriDisplayName:
updateConversationWithUUID:participantPresentationContexts:
updateCovered
updateDetectingRaiseToAnswer
updateEnabled
updateFirewallWithCallHistoryIfNecessary
updateForDisconnection
updateHandoffActivityStateForCall:
updateHandoffAdvertisementForCall:
updateHandoffAdvertisementForConversation:fromOldConversation:
updateHandoffAdvertisementForConversation:fromOldConversation:uplinkMuted:sendingVideo:
updateHandoffRegistrationForConversation:fromOldConversation:
updateIncomingPendingConversationsByGroupUUID:
updateInterestedBundleIDs:states:
updateLetMeInRequestState:addLink:forConversationWithUUID:
updateLightweightMember:
updateLocalAspectRatiosForOneToOneModeEnabled:
updateLocalMemberNickname:conversationUUID:
updateMemberValidationSource:source:
updateMembers:withContext:messagingCapabilities:triggeredLocally:
updateMembers:withContext:triggeredLocally:
updateMessage
updateMessagesGroupName:
updateMessagesGroupName:onConversationWithUUID:
updateMessagesGroupPhotoOnConversationWithUUID:
updateNetworkCriticalStateIfNecessary
updateOutgoingCallerIDAndSendDelegateCallbacksIfNecessary
updateOutgoingLocalParticipantUUID:forCallsWithOutgoingLocalParticipantUUID:
updatePairedHostDeviceCallCapabilitiesState:
updateParticipantData:withContext:
updateParticipantDestinationIDs:withContextData:requiredCapabilities:requiredLackOfCapabilities:triggeredLocally:
updateParticipantDestinationIDs:withContextData:triggeredLocally:
updateParticipantPresentationContexts:
updateParticipantPresentationContexts:onConversationWithUUID:
updateParticipantType:members:withContext:triggeredLocally:
updateParticipantsWithDestinationIdentifiers:
updatePickableRoutes
updatePropertiesForVideo:
updateProviderConfigurationWithAccounts:
updateProviderConfigurationWithAccounts:senderIdentities:
updateProviderConfigurationWithSenderIdentities:
updateProvidersByIdentifier:localProvidersByIdentifier:pairedHostDeviceProvidersByIdentifier:
updateProximitySensorState
updateRelayCall:
updateRemoteMember:
updateResolvedDescriptor
updateScreenEnabledForRemoteParticipants:
updateState
updateSuppressRingtoneActivityListeningState
updateUINotification
updateVirtualParticipantIdentifier:
updateVoiceOverRoutingForCurrentProximityState
updateVolatileDataWithBlock:
updateWithCallUpdate:
updateWithCallUpdate:notifyDelegate:
updateWithProxyCall:
updateWithRelayMessage:
updateWithUpdate:
updatedDateEpochTime
upgradeCallForConversation:withSessionToken:
upgradeChatIfNecessary:
upgradeSessionUUID
upgradeSessionUUIDForCallWithUUID:
upgradeTimeout
uplinkMuted
uplinkMutedSetTime
uplinkMutedStatusChanged:
uplinkWasExplicitlyMuted
uriForFromID:
userActivity
userActivityUsingDeprecatedCallingIntents:
userConfiguration
userContext
userInfo
userIntentManager
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationController
userNotificationProviderServerXPCInterface
userNotificationWithIdentifier:timeout:alertLevel:displayFlags:displayInformation:
userNotificationWithIdentifier:title:message:defaultButton:alternateButton:otherButton:
username
usesAudioSession
usesSystemMuting
usingBaseband
uuid
validNetworkReachable
validRemoteParticipantHandles
validateAllLinks
validateUserIntentForCallSource:
validationErrorReasonForAlias:
validationSource
validationSourceAsString:
validationStatusForAlias:
value
valueForCapability:
valueForEntitlement:
valueForKey:
valueWithRect:
verificationStatus
verifiedIdentity
verify:completion:
verifyActivitySessionOriginatorFromHandle:message:
verifyAllLightweightmembersAssociated:remoteMembers:
verifyBlobResponseFromHandle:message:existingConversation:
verifyEndorseRepresentsMemberFromHandle:message:existingConversation:
verifyGroupSessionParticipantUpdateAllowedFromHandle:participantUpdate:message:existingConversation:lightweightMembers:
verifyKickMemberPermittedFromHandle:message:
verifyLightweightMessageTypeFromHandle:message:existingConversation:
verifyMessageIntentKeyFromContext:message:
verifySignedData:matchesExpectedData:withTokenURI:forAlgorithm:completion:
vettedAliases
vibration
video
videoCallWithStatus:
videoDeviceController
videoEnabled
videoPaused
videoPresentationSize
videoPresentationState
videoPriority
videoQuality
videoStreamToken
videoToken
virtualParticipantConfig
virtualParticipants
visibility
visibilityContext
voLTECallingAvailable
voLTECallingCapabilitiesState
voiceOverObserver
voiceOverObserver:didChangeEnabled:
voiceOverRunningDeterminationHandler
voiceOverTouchShouldRouteToSpeakerDeterminationHandler
voicePreferred
voicemail
voicemailDatabaseReset:
voicemailInfoAvailableNotification:voicemailInfo:
voicemailStartCallIntentByHandleForHandles:
voicemailsChangedWithNotification:
voipAppBecameDisabledFromLaunching:
voipAppFailedToPostIncomingCall:
voipApplicationController
voipNetworkExtensionPayloadReceived:mustPostCall:withCompletionHandler:
voipNetworkExtensionRegistrationFailed
voipPayloadReceived:mustPostCall:withCompletionHandler:
voipPushDroppedOnTheFloor:
voipRegister
voipRegistrationFailed
voipRegistrationSucceededWithDeviceToken:
voipToken
voipUnregister
voucherManager
voucherWithTUVoucher:
waitForSessionInitialization
waitingChatWithHandle:isOutgoing:
waitingSession
waitingToPruneParticipants
wantsBreakBeforeMakeForCall:
wantsCallDisconnectionOnInvalidation
wantsCallNotificationsDisabledWhileSuspended
wantsCallStopStreamingOnInvalidation
wantsFrequencyChangeNotifications
wantsHoldMusic
wantsLeaveOnInvalidation
wantsStagingArea
wantsVideo
wasDeclined
weakToStrongObjectsMapTable
webNicknameLengthLimit
wiFiActiveAndReachable
wiFiAllowed
wiFiAvailable
wiFiCallingAvailable
wiFiCallingCapabilitiesState
wiFiEmergencyCallingAllowed
wiFiEmergencyCallingAvailable
wifiAllowedForBundleId:
willCaptureRemoteRequestFromRequesterID:
willEnterBackgroundForAllCalls
willRestrictAddresses:forBundleIdentifier:
willRestrictAddresses:forBundleIdentifier:reply:
windowUUID
windowed
wirelessHeadsetAvailable
writeTo:
writeToFile:options:error:
xpcListener
zipDirectoryAtURL:completion:
zone
@16@0:8
@24@0:8@16
@24@0:8^{_NSZone=}16
v20@0:8I16
v20@0:8B16
B16@0:8
v24@0:8Q16
B24@0:8@16
v24@0:8@16
Q16@0:8
I16@0:8
v16@0:8
@"NSString"
{?="identifier"b1"version"b1}
#16@0:8
@24@0:8Q16
@"NSMutableArray"
{?="version"b1}
@"NSData"
@36@0:8i16@20@28
@36@0:8@16i24@28
@28@0:8@16B24
v24@0:8d16
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
d16@0:8
@"CSDMessagingConversationLinkGeneratorDescriptor"
@"CSDMessagingHandle"
{?="creationDateEpochTime"b1"pseudonymExpirationDateEpochTime"b1"linkLifetimeScope"b1"isActivated"b1}
@"CSDCallStateController"
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v48@0:8@16d24f32f36f40i44
v32@0:8@16q24
v48@0:8@"BKSAccelerometer"16d24f32f36f40i44
v32@0:8@"BKSAccelerometer"16q24
v32@0:8@16@24
v32@0:8@"<CSDCallCenterObserver>"16@"CSDCall"24
v24@0:8@"<CSDCallCenterObserver>"16
q16@0:8
v24@0:8q16
@"BKSAccelerometer"
@"<CSDCallCenterObserver>"
v32@0:8@16@"NSString"24
@"NSMapTable"
@"NSObject<OS_dispatch_queue>"
v32@0:8@16i24I28
v32@0:8i16I20@24
v24@0:8@?16
@"BKSProcessAssertion"
v36@0:8@16B24@28
v40@0:8@16@24@32
v28@0:8@16f24
v28@0:8@16B24
v40@0:8@16@24q32
v36@0:8@"<CSDAVConferenceProvider>"16B24@"NSError"28
v40@0:8@"<CSDAVConferenceProvider>"16@"NSError"24@"NSDictionary"32
v24@0:8@"<CSDAVConferenceProvider>"16
v32@0:8@"<CSDAVConferenceProvider>"16@"NSData"24
v28@0:8@"<CSDAVConferenceProvider>"16f24
v28@0:8@"<CSDAVConferenceProvider>"16B24
v40@0:8@"<CSDAVConferenceProvider>"16@"NSData"24q32
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
v24@0:8@"CSDAVConferenceConfiguration"16
v24@0:8@"CSDIDSTransport"16
v24@0:8@"VCCapabilities"16
v24@0:8@"NSData"16
v32@0:8@"NSString"16@"NSString"24
@"<CSDAVConferenceDelegate>"16@0:8
v24@0:8@"<CSDAVConferenceDelegate>"16
@"NSObject<OS_dispatch_queue>"16@0:8
v24@0:8@"NSObject<OS_dispatch_queue>"16
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@"NSError"16@0:8
@"NSDate"16@0:8
v32@0:8q16@24
v20@0:8f16
q32@0:8@16^@24
@?16@0:8
@"<CSDAVConferenceDelegate>"
@"NSDate"
@"NSNumber"
@"NSDictionary"
@"NSError"
@"CSDAVConferenceConfiguration"
@"<CSDAVConferenceProvider>"
{CGSize="width"d"height"d}
@"VCCapabilities"
@"NSUUID"
@"RTCSecureHierarchyToken"
@"CSDMessagingConversationParticipantAssociation"
{?="identifier"b1"avMode"b1"options"b1"sharePlayProtocolVersion"b1"version"b1"guestModeEnabled"b1"isGFTDowngradeToOneToOneAvailable"b1"isGondolaCallingAvailable"b1"isLightweight"b1"isMirageAvailable"b1"isMomentsAvailable"b1"isScreenSharingAvailable"b1"isUPlusNDowngradeAvailable"b1"isUPlusOneScreenSharingAvailable"b1"supportsLeaveContext"b1}
i24@0:8q16
@32@0:8@16Q24
v24@0:8@"TUCallProviderManager"16
v36@0:8I16@20@28
v28@0:8I16@20
v36@0:8I16@"NSString"20@"NSString"28
v28@0:8I16@"NSString"20
v44@0:8@16@24Q32B40
v48@0:8@16@24@32@40
v48@0:8@16@24Q32@40
v36@0:8@16@24B32
v24@0:8@"TUConversationManager"16
v32@0:8@"TUConversationManager"16@"TUConversation"24
v40@0:8@"TUConversationManager"16@"TUConversation"24@"TUConversation"32
v32@0:8@"TUConversationManager"16@"NSArray"24
v40@0:8@"TUConversationManager"16@"TUConversation"24@"TUConversationParticipant"32
v40@0:8@"TUConversationManager"16@"TUConversation"24@"TUConversationActivityEvent"32
v44@0:8@"TUConversationManager"16@"TUConversation"24Q32B40
v32@0:8@"TUConversationManager"16@"NSString"24
v48@0:8@"TUConversationManager"16@"TUConversation"24@"TUConversationParticipant"32@"TUConversationNotice"40
v40@0:8@"TUConversationManager"16@"TUConversation"24@"NSSet"32
v40@0:8@"TUConversationManager"16@"TUConversation"24@"TUConversationMember"32
v40@0:8@"TUConversationManager"16@"TUConversation"24@"NSData"32
v40@0:8@"TUConversationManager"16@"TUConversationMember"24@"TUConversationLink"32
v48@0:8@"TUConversationManager"16@"TUConversation"24Q32@"TUConversationActivitySession"40
v36@0:8@"TUConversationManager"16@"<TUScreenShareAttributes>"24B32
v32@0:8@"TUConversationManager"16@"NSError"24
v40@0:8@"TUConversationManager"16@"TUConversation"24@"TUConversationActivitySession"32
v28@0:8@"TUConversationManager"16B24
@48@0:8@16@24@32@40
v40@0:8@16@24B32B36
@32@0:8@16B24B28
@"<CSDUserActivityCommunicatorProtocol>"
@"TUCallCenter"
@"CSDUserActivity"
@"<TUFeatureFlags>"
B36@0:8@16@24B32
q32@0:8@16@24
B40@0:8@16@24@32
B32@0:8@16@24
B24@0:8@"TUHandle"16
B36@0:8@"TUHandle"16@"NSString"24B32
q32@0:8@"NSArray"16@"NSString"24
B24@0:8@"CSDCall"16
B40@0:8@"NSString"16@"NSString"24@"NSString"32
B36@0:8@"NSArray"16@"NSString"24B32
B32@0:8@"NSArray"16@"NSString"24
v40@0:8@16@24Q32
v36@0:8@16@24i32
v44@0:8@16@24@32B40
v40@0:8@"CSDReportingController"16@"CSDCall"24Q32
v32@0:8@"CSDReportingController"16@"CSDCall"24
v24@0:8@"CSDReportingController"16
v36@0:8@"CSDReportingController"16@"CSDMessagingRelayMessage"24B32
v32@0:8@"CSDReportingController"16@"CXTransactionGroup"24
v40@0:8@"CSDReportingController"16@"CXAction"24@"CSDCall"32
v32@0:8@"CSDReportingController"16@"CSDMomentsUsageReport"24
v40@0:8@"CSDReportingController"16@"TURoute"24@"CSDCall"32
v36@0:8@"CSDReportingController"16@"NSString"24i32
v32@0:8@"CSDReportingController"16@"TUConversation"24
v40@0:8@"CSDReportingController"16@"NSArray"24@"TUConversation"32
v40@0:8@"CSDReportingController"16@"NSArray"24@"NSUUID"32
v32@0:8@"CSDReportingController"16@"CSDIDSChat"24
v32@0:8@"CSDReportingController"16@"NSString"24
v44@0:8@"CSDReportingController"16@"NSUUID"24@"RTCSecureHierarchyToken"32B40
v48@0:8@"CSDReportingController"16@"TUConversationActivitySession"24@"NSDate"32@"NSDate"40
v32@0:8@"CSDReportingController"16@"TUConversationLink"24
v36@0:8@"CSDReportingController"16@"TUConversation"24B32
@"<CSDReporterDataSource>"16@0:8
v24@0:8@"<CSDReporterDataSource>"16
v28@0:8@"<CSDProximitySensorObserver>"16B24
v24@0:8@"TURouteController"16
@40@0:8@16@24@32
@64@0:8@16@24@32@40@48@56
@"TURouteController"
@"<CSDOrientationObserver>"
@"<CSDProximitySensorObserver>"
@"<CSDVoiceOverObserver>"
v24@0:8@"IMAVChat"16
v32@0:8@"IMHandle"16q24
v24@0:8@"CXProvider"16
B32@0:8@"CXProvider"16@"CXTransaction"24
v32@0:8@"CXProvider"16@"CXStartCallAction"24
v32@0:8@"CXProvider"16@"CXAnswerCallAction"24
v32@0:8@"CXProvider"16@"CXEndCallAction"24
v32@0:8@"CXProvider"16@"CXSetHeldCallAction"24
v32@0:8@"CXProvider"16@"CXSetMutedCallAction"24
v32@0:8@"CXProvider"16@"CXSetGroupCallAction"24
v32@0:8@"CXProvider"16@"CXPlayDTMFCallAction"24
v32@0:8@"CXProvider"16@"CXAction"24
v32@0:8@"CXProvider"16@"AVAudioSession"24
v32@0:8@"CXProvider"16@"CXSendMMIOrUSSDCodeAction"24
v32@0:8@"CXProvider"16@"CXJoinCallAction"24
v32@0:8@"CXProvider"16@"CXSetTTYTypeCallAction"24
v32@0:8@"CXProvider"16@"CXSetSendingVideoCallAction"24
v32@0:8@"CXProvider"16@"CXSetSharingScreenCallAction"24
v32@0:8@"CXProvider"16@"CXSetScreenShareAttributesCallAction"24
v32@0:8@"CXProvider"16@"CXEnableVideoCallAction"24
v32@0:8@"CXProvider"16@"CXSetRelayingCallAction"24
v32@0:8@"CXProvider"16@"CXPullCallAction"24
v32@0:8@"CXProvider"16@"CXSetVideoPresentationSizeCallAction"24
v32@0:8@"CXProvider"16@"CXSetVideoPresentationStateCallAction"24
B24@0:8@"NSUUID"16
@"NSUUID"24@0:8@"NSUUID"16
v24@0:8@"NSUUID"16
v28@0:8@16I24
v56@0:8{CGSize=dd}16{CGSize=dd}32@48
I24@0:8q16
{os_unfair_lock_s=I}16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"<CSDFaceTimeProviderDelegateManagerDelegate>"
@"CXProvider"
@"NSMutableOrderedSet"
Vv24@0:8@16
Vv24@0:8@"NSArray"16
v24@0:8@"<TUCallHistoryControllerXPCClient>"16
@"CSDCallHistoryController"
@"CSDClientManager"
v44@0:8@16B24@28@36
v36@0:8@16@24I32
v36@0:8@16S24@28
v44@0:8@16@24I32S36B40
v44@0:8@16@24S32@36
v32@0:8@"CSDIDSGroupSession"16@"NSDictionary"24
v44@0:8@"CSDIDSGroupSession"16B24@"NSSet"28@"NSError"36
v32@0:8@"CSDIDSGroupSession"16@"NSError"24
v24@0:8@"CSDIDSGroupSession"16
v36@0:8@"CSDIDSGroupSession"16@"NSError"24I32
v36@0:8@"CSDIDSGroupSession"16S24@"NSError"28
v32@0:8@"CSDIDSGroupSession"16@"NSArray"24
v44@0:8@"CSDIDSGroupSession"16@"NSArray"24I32S36B40
v40@0:8@"CSDIDSGroupSession"16@"NSData"24@"IDSGroupSessionActiveParticipant"32
v44@0:8@"CSDIDSGroupSession"16@"NSData"24S32@"IDSGroupSessionActiveParticipant"36
v28@0:8@"CSDIDSGroupSession"16I24
v40@0:8@16@24@?32
@40@0:8@16Q24@32
v48@0:8@16Q24@32@?40
v32@0:8@"<CPActivitySessionManager>"16@"TUConversationActivitySession"24
B32@0:8@"<CPActivitySessionManager>"16@"TUConversationActivitySession"24
v32@0:8@"<CPActivitySessionManager>"16@"TUConversationActivityEvent"24
v40@0:8@"<CPActivitySessionManager>"16@"NSString"24@?<v@?@>32
v40@0:8@"<CPActivitySessionManager>"16@"NSArray"24@"NSString"32
@"TUConversationParticipant"40@0:8@"<CPActivitySessionManager>"16Q24@"NSString"32
v48@0:8@"<CPActivitySessionManager>"16Q24@"NSString"32@?<v@?@"TUConversationParticipant">40
@"NSString"24@0:8@"<CPActivitySessionManager>"16
v48@0:8@"<CPActivitySessionManager>"16@"TUConversationActivitySession"24@"NSDate"32@"NSDate"40
v36@0:8@"<CPActivitySessionManager>"16@"TUConversationActivitySession"24B32
v40@0:8@"<CPActivitySessionManager>"16@"TUConversationActivitySession"24Q32
v28@0:8@"<CPAudioRoutePolicyManager>"16B24
v40@0:8@16B24B28@32
v52@0:8Q16B24q28q36q44
v56@0:8Q16B24B28q32q40q48
v36@0:8Q16B24q28
v40@0:8Q16q24q32
v28@0:8Q16B24
v36@0:8@"<CSDAVCSession>"16B24@"NSError"28
v32@0:8@"<CSDAVCSession>"16@"NSError"24
v40@0:8@"<CSDAVCSession>"16B24B28@"NSError"32
v32@0:8@"<CSDAVCSession>"16q24
@"CSDConversationParticipant"32@0:8@"<CSDAVCSession>"16Q24
v24@0:8@"<CSDAVCSession>"16
@152@0:8@16@24@32@40@48B56@60@68@76@84@92@100@108@116@124B132Q136@144
@176@0:8@16@24@32@40@48B56@60@68@76@84@92@100@108@116@124B132Q136@144@152@160@168
v28@0:8B16@20
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v32@0:8Q16@24
v40@0:8Q16@24Q32
v48@0:8@16@24@32B40B44
B28@0:8@16B24
@20@0:8B16
v28@0:8B16Q20
v32@0:8q16Q24
v28@0:8S16@20
i28@0:8@16i24
v32@0:8@16@?24
@"NSSet"
@"<CSDConversationDelegate>"
@"TUConversationLink"
@"TUConversationMember"
@"TUHandle"
@"NSArray"
@"TUConversationActivitySession"
@"CPActivitySessionManager"
@"TUConversationReport"
@"TUConversationParticipantAssociation"
@"TUConversationHandoffEligibility"
@"NSMutableDictionary"
@"NSMutableSet"
@"CSDIDSGroupSession"
@"TUVideoDeviceController"
@"CSDFaceTimeInviteDemuxer"
@"CSDConversationParticipant"
@"CPApplicationPolicyManager"
@"CPAudioRoutePolicyManager"
@"CPSystemStateObserver"
@"<CSDConversationServerBag>"
@"NSObject"
@"TUCallScreenShareAttributes"
@"TUConversationProvider"
@"CXCallFailureContext"
@"<CSDAVCSession>"
@"FTDeviceSupport"
{?="supportsAddCall"b1"supportsDTMF"b1"supportsGrouping"b1"supportsHolding"b1"supportsSendingToVoicemail"b1"supportsUnambiguousMultiPartyState"b1"supportsUngrouping"b1}
v28@0:8@"CSDMessagingRelayMessage"16B24
v24@0:8@"CSDMessagingRelayMessage"16
v32@0:8@"CSDMessagingRelayMessage"16@?<v@?@"NSDictionary">24
@28@0:8i16@20
C16@0:8
v20@0:8C16
{?="type"b1}
@"CSDMessagingConversationParticipant"
v24@0:8@"CSDPauseDigitsQueue"16
@32@0:8@16@24
@52@0:8@16@24@32B40B44i48
@44@0:8@16@24@32B40
@"TUParticipant"
@"NSURL"
@"<CSDProviderCallDelegate>"
@"CXCallSource"
@"CXAbstractProviderSource"
@"CSDProviderDisplayMonitor"
@"CXCallUpdate"
@"CSDPauseDigitsQueue"
@"TUUserConfiguration"
@"NSObject<OS_dispatch_source>"
@"CSDLetMeInRequestorKeyAgreement"
v24@0:8@"<CSDStatusBarResolver>"16
@"<CSDStatusBarResolver>"
@"STCallingStatusDomainPublisher"
@"STCallingStatusDomainCallDescriptor"
v48@0:8@16@24q32@?40
v24@0:8@"TUNearbyDeviceHandle"16
v48@0:8@"TUConversation"16@"TUNearbyDeviceHandle"24q32@?<v@?B@"NSError">40
v24@0:8@?<v@?@"NSSet"@"NSError">16
v24@0:8@?<v@?@"TUNearbyDeviceHandle"@"NSError">16
v40@0:8@"TUNearbyDeviceHandle"16@"NSUUID"24@?<v@?B@"NSError">32
v32@0:8@"TUNearbyDeviceHandle"16@?<v@?B@"NSError">24
v24@0:8@"<TUNeighborhoodActivityConduitXPCClient>"16
@"CSDNeighborhoodActivityConduit"
@"CSDClient"
@40@0:8@16@24^@32
@"<CSDCarrierBundlePhoneNumberProviderControllerDelegate>"
@"CoreTelephonyClient"
v36@0:8@16I24@28
v40@0:8@16@24I32B36
v40@0:8@16@24I32S36
v24@0:8@"IDSGroupSession"16
v36@0:8@"IDSGroupSession"16I24@"NSError"28
v40@0:8@"IDSGroupSession"16@"NSArray"24@"NSError"32
v40@0:8@"IDSGroupSession"16@"NSDictionary"24@"NSError"32
v40@0:8@"IDSGroupSession"16@"IDSGroupSessionParticipantUpdate"24@"NSError"32
v32@0:8@"IDSGroupSession"16@"NSError"24
v32@0:8@"IDSGroupSession"16@"NSDictionary"24
v36@0:8@"IDSGroupSession"16@"NSArray"24B32
v40@0:8@"IDSGroupSession"16@"NSArray"24I32B36
v44@0:8@"IDSGroupSession"16@"NSArray"24I32S36B40
v36@0:8@"IDSGroupSession"16S24@"NSError"28
v40@0:8@"IDSGroupSession"16@"NSArray"24I32S36
v32@0:8@"IDSGroupSession"16@"NSArray"24
v40@0:8@"IDSGroupSession"16@"NSData"24@"IDSGroupSessionActiveParticipant"32
v44@0:8@"IDSGroupSession"16@"NSData"24S32@"IDSGroupSessionActiveParticipant"36
v28@0:8@"IDSGroupSession"16I24
v32@0:8@"IDSSession"16@"NSString"24
v24@0:8@"IDSSession"16
v36@0:8@"IDSSession"16I24@"NSError"28
v32@0:8@"NSString"16@"NSData"24
v32@0:8@"IDSSession"16@"NSArray"24
v40@0:8@"IDSSession"16@"NSString"24@"NSData"32
v32@0:8@"IDSSession"16@"NSSet"24
v36@0:8@"IDSSession"16@"NSSet"24B32
v52@0:8@16@24@32@40B48
Q32@0:8Q16@24
v40@0:8Q16@24@?32
v36@0:8@"NSArray"16@"NSData"24B32
v52@0:8@"NSArray"16@"NSData"24@"NSArray"32@"NSArray"40B48
v24@0:8@"NSArray"16
v32@0:8@"NSString"16@?<v@?@>24
v32@0:8@"NSArray"16@"NSString"24
v32@0:8@"TUConversationActivitySessionContainer"16@"NSData"24
Q32@0:8Q16@"NSData"24
v40@0:8Q16@"NSData"24@?<v@?Q>32
v32@0:8@"NSSet"16@"NSSet"24
v28@0:8S16@"<IDSDestinationProtocol>"20
v28@0:8S16@"NSArray"20
@"<CSDIDSGroupSessionProviderDelegate>"16@0:8
v24@0:8@"<CSDIDSGroupSessionProviderDelegate>"16
@"NSArray"16@0:8
@"NSSet"16@0:8
@68@0:8@16@24@32@40@48B56B60B64
@"IDSGroupSession"
@"<CSDIDSGroupSessionProviderDelegate>"
@"IDSAccount"
@36@0:8@16B24@28
@60@0:8@16B24@28@36@44@52
@52@0:8@16@24@32i40@44
v36@0:8@16B24@?28
@"<CSDRelayIDSDualSessionDelegate>"
@"IDSDestination"
@"IDSDevice"
@"<CSDCallHistoryControllerDelegate>"
@"CSDMessagingLinkSyncCheckInMessage"
@"CSDMessagingLinkSyncRecoverMessage"
@"CSDMessagingLinkSyncUpdateMessage"
{?="type"b1"version"b1}
v32@0:8@16^{__CFString=}24
@24@0:8^{__CFString=}16
@"<CSDThumperCapabilitiesMonitorDataSource>"
@"NPSDomainAccessor"
@"TUConversationActivity"
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v68@0:8@16@24@32@40q48@56B64
v76@0:8@16@24@32@40q48@56B64@68
v72@0:8@16@24@32@40@48@56@64
v48@0:8@16@24d32@40
v68@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40q48@"NSError"56B64
v76@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40q48@"NSError"56B64@"IDSMessageContext"68
v72@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@"NSArray"48@"NSArray"56@"NSDictionary"64
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@48
v48@0:8@"IDSService"16@"NSString"24d32@"NSError"40
v48@0:8@"IDSService"16@"NSString"24@"NSString"32@"NSString"40
v32@0:8@"IDSService"16q24
@"<CSDAccountsControllerDelegate>"
v32@0:8@"NSData"16@"NSSet"24
v28@0:8@"NSData"16B24
@"<CSDIDSDualSessionProviderDelegate>"16@0:8
v24@0:8@"<CSDIDSDualSessionProviderDelegate>"16
@"<CSDIDSDualSessionProviderDelegate>"
@"IDSSession"
Vv32@0:8@16@?24
Vv24@0:8@?16
Vv48@0:8@16d24@32@?40
Vv48@0:8@16@24@32@?40
Vv40@0:8@16@24@?32
Vv32@0:8@"NSString"16@?<v@?@"TUConversationProvider">24
Vv24@0:8@?<v@?@"NSArray">16
Vv32@0:8@"NSString"16@?<v@?@"NSError">24
Vv32@0:8@"TUConversationProvider"16@?<v@?@"NSError">24
Vv48@0:8@"TUConversationProvider"16d24@"NSString"32@?<v@?@"TUHandle"@"NSDate"@"NSError">40
Vv48@0:8@"TUHandle"16@"TUConversationProvider"24@"NSDate"32@?<v@?B@"NSDate"@"NSError">40
Vv40@0:8@"TUHandle"16@"TUConversationProvider"24@?<v@?B@"NSError">32
v24@0:8@"<TUConversationProviderManagerXPCClient>"16
@"TUConversationManager"
@"CSDConversationProviderManager"
Vv24@0:8@?<v@?@"NSDictionary"@"NSDictionary"@"NSDictionary">16
Vv24@0:8@"NSString"16
Vv32@0:8@"TUDialRequest"16@?<v@?@"NSError">24
v24@0:8@"<TUCallProviderManagerXPCClient>"16
v24@0:8@"CSDCallProviderManager"16
@"CSDCallProviderManager"
v28@0:8@16i24
v28@0:8@"CSDIDSDualSession"16i24
v24@0:8@"CSDIDSDualSession"16
v36@0:8@"CSDIDSDualSession"16@"NSArray"24B32
v32@0:8@"CSDIDSDualSession"16@"NSData"24
v40@0:8@16q24@32
v24@0:8@"<CSDAVConference>"16
v40@0:8@"<CSDAVConference>"16q24@"NSError"32
v28@0:8@"<CSDAVConference>"16B24
v32@0:8@"<CSDAVConference>"16@"NSData"24
v28@0:8@"<CSDAVConference>"16f24
v32@0:8@"<CSDAVConference>"16q24
v40@0:8@"<CSDAVConference>"16@"NSData"24q32
v32@0:8@"<CXVideoAspectRatioDescriptor>"16@?<v@?@"NSArray"B>24
v24@0:8@"<CXVideoAspectRatioDescriptor>"16
@"<CSDIDSChatDelegate>"16@0:8
v24@0:8@"<CSDIDSChatDelegate>"16
@"NSUUID"16@0:8
@"TUHandle"16@0:8
@"CXCallFailureContext"16@0:8
@36@0:8@16@24B32
@44@0:8@16@24B32@36
@48@0:8@16@24@32B40B44
v32@0:8@16B24B28
@"<CSDIDSChatDelegate>"
@"CSDExternalIDSDualSession"
@"<CSDAVConference>"
v32@0:8@"CXCallDirectoryNSExtensionManager"16@"NSArray"24
@"<CSDDeviceLockStateObserver>"
@"CXCallDirectoryManager"
@"CXCallDirectoryNSExtensionManager"
f16@0:8
@"CSDMessagingAVConferenceInviteData"
@"CSDMessagingCallCapabilitiesState"
@"CSDMessagingCallModel"
@"CSDMessagingCallModelState"
@"CSDMessagingCallDisplayContext"
@"CSDMessagingCallProvider"
@"CSDMessagingRoute"
{?="hostCallCreationTime"b1"messageSendTime"b1"hardPauseState"b1"protoDisconnectedReason"b1"protoOriginatingUIType"b1"protoPriority"b1"protoProtocolVersion"b1"protoService"b1"protoSoundRegion"b1"protoTTYType"b1"receivedMessageType"b1"requestActionType"b1"systemVolume"b1"type"b1"protoCannotBeAnswered"b1"protoCannotRelayAudioOrVideoOnPairedDevice"b1"protoEmergency"b1"protoExpectedEndpointOnMessagingDevice"b1"protoFailureExpected"b1"protoNeedsManualInCallSounds"b1"protoRemoteUplinkMuted"b1"protoSOS"b1"protoShouldSuppressRingtone"b1"protoSupportsEmergencyFallback"b1"protoSupportsTTYWithVoice"b1"protoUplinkMuted"b1"protoVideo"b1"protoVoicemail"b1"protoWantsHoldMusic"b1}
v24@0:8@?<q@?@"NSString"@"NSString">16
B32@0:8@"NSString"16@"NSString"24
@"DNDEventBehaviorResolutionService"
@"TUCallProviderManager"
^I16@0:8
I24@0:8Q16
v32@0:8^I16Q24
{?="list"^I"count"Q"size"Q}
{?="maximumCallGroups"b1"maximumCallsPerCallGroup"b1"supportsAudioAndVideo"b1"supportsAudioOnly"b1"supportsEmergency"b1"supportsRecents"b1"supportsVoicemail"b1}
v48@0:8@"CSDRelayIDSMessenger"16@"CSDMessagingRelayMessage"24@"IDSDestination"32@"IDSDevice"40
v36@0:8@"CSDRelayIDSMessenger"16@"NSArray"24B32
q24@0:8@16
B24@0:8@"CSDMessagingRelayMessage"16
B32@0:8@"CSDMessagingRelayMessage"16@"IDSDestination"24
q24@0:8@"CSDMessagingRelayMessage"16
@"NSArray"24@0:8@"CSDMessagingRelayMessage"16
q24@0:8q16
v28@0:8i16@20
v28@0:8@16C24
B20@0:8i16
v32@0:8@?16@24
@"<CSDRelayMessagingControllerDelegate>"
@"<CSDRelayMessagingControllerClientMessagingDelegate>"
@"<CSDRelayMessagingControllerHostMessagingDelegate>"
@"<CSDRelayMessagingControllerCommonMessagingDelegate>"
@"CSDRelayIDSSessionMessenger"
@"CSDRelayPairedDeviceMessenger"
@"<CSDCallContainer>"
v24@0:8@"TUConfiguration"16
v28@0:8i16@?20
@"CSDConversationProviderManagerXPCServer"
@"CSDCallStateMonitor"
@"CSDRelayMessagingController"
@"CSDRelayClientController"
@"CSDRelayHostController"
@"CSDRelayCommonController"
@"CSDCallDirectoryManager"
@"CSDVoIPApplicationController"
@"CSDMomentsController"
@"CSDUserNotificationController"
@"CSDVoiceOverObserver"
@"CSDDeviceLockStateObserver"
@"CSDOrientationMonitor"
@"CSDProximityController"
@"CSDProximitySensorObserver"
@"CSDRaiseToAnswerController"
@"CSDPowerAssertionManager"
@"CSDAudioController"
@"CSDHandoffAudioController"
@"CSDStatusBarManager"
{CGSize=dd}24@0:8@16
B24@0:8@"<CSDIDSChat>"16
{CGSize=dd}24@0:8@"<CSDIDSChat>"16
v24@0:8@"<CSDIDSChat>"16
v32@0:8@"<CSDIDSChat>"16@"NSData"24
v28@0:8@"<CSDIDSChat>"16f24
v32@0:8@"<CSDIDSChat>"16q24
@"<CSDIDSProviderDelegateCapabilities>"
v40@0:8@"<CSDIDSDualSessionProvider>"16@"NSString"24@"NSData"32
v24@0:8@"<CSDIDSDualSessionProvider>"16
v36@0:8@"<CSDIDSDualSessionProvider>"16@"NSSet"24B32
v36@0:8@"<CSDIDSDualSessionProvider>"16I24@"NSError"28
@28@0:8@16i24
v32@0:8@16i24B28
@"<CSDIDSDualSessionDelegate>"
@"<CSDIDSDualSessionProvider>"
@"<CSDRelayIDSMessengerDelegate>"
@56@0:8@16@24@32q40@48
v48@0:8@16@24@32@?40
@"<CSDFaceTimeIDSProviderDelegateCapabilities>"
@"NSOrderedSet"
@"<CSDFaceTimeIDSProviderDelegateServerBag>"
v40@0:8@"NSURL"16@"NSSet"24@"NSDictionary"32
v32@0:8@"NSURL"16@?<v@?@"NSURL">24
@"<CSDFileTransferringDelegate>"16@0:8
v24@0:8@"<CSDFileTransferringDelegate>"16
v48@0:8Q16@24@32@?40
@"<CSDFileTransferringDelegate>"
@"IDSService"
@32@0:8@16d24
@"<CSDCallSourceFetcherDataSource>"
r^{__CFString=}16@0:8
v32@0:8B16B20@24
v32@0:8@"IDSDevice"16@?<v@?B@"NSString">24
v32@0:8@"IDSDevice"16@"NSUUID"24
v24@0:8@"IDSDevice"16
v24@0:8@?<v@?B>16
v40@0:8@"NSNumber"16@"NSString"24@?<v@?B>32
v32@0:8B16B20@"IDSDevice"24
{?="protoTimeConnected"b1"protoDisconnectedReason"b1"protoOriginatingUIType"b1"protoService"b1"protoSoundRegion"b1"protoStatus"b1"protoTTYType"b1"protoConferenced"b1"protoEmergency"b1"protoFailureExpected"b1"protoHasSentInvitation"b1"protoNeedsManualInCallSounds"b1"protoOutgoing"b1"protoSOS"b1"protoShouldSuppressRingtone"b1"protoSupportsEmergencyFallback"b1"protoSupportsTTYWithVoice"b1"protoUplinkMuted"b1"protoVideo"b1"protoVoicemail"b1"protoWantsHoldMusic"b1}
v24@0:8i16B20
@"TUCallProvider"
@"TUCallDisplayContext"
@"<CSDRelayCallDelegate>"
v24@0:8@"CSDCallHistoryManager"16
Vv32@0:8@16@24
Vv32@0:8@"NSUUID"16@"NSUUID"24
v24@0:8@"<TUCallHistoryManagerXPCClient>"16
@"CSDCallHistoryManager"
@"<CSDPauseDigitsQueueDelegate>"
@"RBSAssertion"
@28@0:8d16B24
v48@0:8@16@24d32Q40
v52@0:8@16d24B32Q36@?44
{?="shouldAssociateScene"b1}
@"CSDMessagingConversationActivitySession"
@"CSDMessagingConversationMessage"
{?="sharePlayProtocolVersion"b1"version"b1"isGFTDowngradeToOneToOneAvailable"b1"isGondolaCallingAvailable"b1"isLightweight"b1"isMirageAvailable"b1"isMomentsAvailable"b1"isScreenSharingAvailable"b1"isUPlusNDowngradeAvailable"b1"isUPlusOneScreenSharingAvailable"b1"supportsLeaveContext"b1"video"b1"videoEnabled"b1}
v40@0:8@"NSURL"16@"NSURL"24@?<v@?@"NSString"@"NSError">32
v32@0:8@"NSURL"16@?<v@?@"NSString"@"NSError">24
v56@0:8@16@24@32q40@48
v40@0:8@"<CSDFaceTimeProviderDelegate>"16@"NSUUID"24@"NSDate"32
v56@0:8@"<CSDFaceTimeProviderDelegate>"16@"NSUUID"24@"NSDate"32q40@"CXCallFailureContext"48
v40@0:8@"<CSDDualFaceTimeProviderDelegate>"16@"CXTransaction"24@?<v@?@"NSError">32
v48@0:8@"<CSDFaceTimeProviderDelegate>"16@"TUConversation"24@"NSData"32@?<v@?@"NSUUID"BBB@"NSUUID"@"TUHandle"@"NSString">40
B32@0:8@"<CSDFaceTimeProviderDelegate>"16@"NSUUID"24
@"CSDConversationManagerXPCServer"
@"CPConversationManagerHost"
@"CPBiomeSessionDonator"
@"CPApplicationMonitor"
@"CSDNeighborhoodActivityConduitXPCServer"
@"CSDIDSFirewallManager"
@"CSDFaceTimeIDSProviderDelegate"
@"CSDFaceTimeIMAVProviderDelegate"
@"CSDFaceTimeConversationProviderDelegate"
@"CSDGFTServiceConversationProviderDelegate"
@"CSDConversationManager"
@"CSDProviderCallDataSource"
@"CSDVoIPApplicationMessage"
v36@0:8@"NSDictionary"16B24@?<v@?>28
@"CSDMessagingConversationActivity"
{?="creationDateEpochTime"b1}
@"CSDMessagingPersonNameComponents"
@"<CSDStatusBarResolverDelegate>"16@0:8
v24@0:8@"<CSDStatusBarResolverDelegate>"16
@"CSDCall"16@0:8
@"TUConversation"16@0:8
@"STCallingStatusDomainCallDescriptor"16@0:8
@"<CSDStatusBarResolverDelegate>"
@"<CSDProcessObserverProtocol>"
@"NSTimer"
v56@0:8@16@24@32@?40@?48
@32@0:8@16^@24
B32@0:8@16^@24
@"NSFileManager"
v36@0:8B16B20@24B32
@"<CSDPinExchangeDelegate>"
{?="primaryIdentifier"b1"type"b1"version"b1}
Vv20@0:8B16
Vv28@0:8B16@20
Vv36@0:8B16@20@28
Vv28@0:8B16@"NSString"20
Vv28@0:8B16@"NSUUID"20
Vv36@0:8B16@"NSString"20@"NSUUID"28
Vv24@0:8@"NSUUID"16
Vv24@0:8@?<v@?@"TUCallCapabilitiesState">16
v24@0:8@"<TUCallCapabilitiesXPCClient>"16
@"CSDThumperAccount"24@0:8@"NSString"16
@"TUThumperCTCapabilitiesState"24@0:8@"NSString"16
C32@0:8@16@24
v36@0:8B16@20@28
@24@0:8B16B20
@"NSXPCListener"
@"CSDAccountsController"
@"CSDTelephonyCallCapabilities"
@"CSDThumperPushHandler"
@"CSDPinExchangeController"
@"CSDThumperCapabilitiesMonitor"
@"<CSDIDSService>"
@"TUCallCapabilitiesState"
v24@0:8@"TUDynamicCallDisplayContext"16
Vv24@0:8@"NSNumber"16
@"<CSDCallDelegate>"
@"CSDCallDataSource"
@"TUDialRequest"
@"CSDIDSTransport"
@"TUDynamicCallDisplayContext"
v24@0:8@"TUAudioDeviceController"16
B32@0:8@"NSString"16@"TUCall"24
@"TURoute"24@0:8@"TUCall"16
B24@0:8@"TUCall"16
@"CARAutomaticDNDStatus"
@"CSDMessagingVoucher"
{?="lightweightPrimaryParticipantID"b1"validationSource"b1"version"b1}
@"CSDMessagingConversationLink"
@"CSDMessagingConversationMember"
@"CSDMessagingConversationReport"
{?="avMode"b1"version"b1"locallyCreated"b1}
{?="timebase"b1}
v36@0:8@16Q24B32
v40@0:8@16Q24@32
v24@0:8@"CSDConversation"16
v32@0:8@"CSDConversation"16@"TUConversationParticipant"24
v32@0:8@"CSDConversation"16@"CXCallFailureContext"24
v32@0:8@"CSDConversation"16@"CSDConversationParticipant"24
v40@0:8@"CSDConversation"16@"CSDConversationParticipant"24Q32
v40@0:8@"CSDConversation"16@"NSString"24@?<v@?B>32
v32@0:8@"CSDConversation"16@"NSString"24
v32@0:8@"CSDConversation"16@"TUConversationActivityEvent"24
v36@0:8@"CSDConversation"16Q24B32
v32@0:8@"CSDConversation"16@"TUConversationActivitySession"24
v40@0:8@"CSDConversation"16Q24@"TUConversationActivitySession"32
v32@0:8@"CSDConversation"16q24
v36@0:8@"CSDConversation"16@"NSSet"24B32
v36@0:8@"CSDConversation"16@"TUConversationActivitySession"24B32
v56@0:8@"NSSet"16@"CSDConversation"24@"TUConversationLink"32@"NSUUID"40@"TUConversationMember"48
v52@0:8@"NSSet"16@"CSDConversation"24@"NSUUID"32@"TUConversationMember"40B48
v48@0:8@"CSDPendingMembershipTracker"16@"TUConversationMember"24@"CSDConversation"32@"NSData"40
v40@0:8@"CSDPendingMembershipTracker"16@"TUConversationMember"24@"NSUUID"32
v48@0:8@"CSDConversationNoticeManager"16@"CSDConversation"24@"TUConversationParticipant"32@"TUConversationNotice"40
v32@0:8@"CSDConversationLinkManager"16@"NSArray"24
v36@0:8@"CSDScreenSharingActivityManager"16@"<TUScreenShareAttributes>"24B32
v36@0:8@"CSDScreenSharingActivityManager"16@"NSError"24B32
v32@0:8@"<CPApplicationPolicyManager>"16@"NSString"24
v28@0:8@"<CPSystemStateObserver>"16B24
v32@0:8@"NSSet"16@"NSUUID"24
v40@0:8@"TUConversationActivity"16@"NSUUID"24@?<v@?@"TUConversationActivitySession">32
v28@0:8B16@"NSString"20
v32@0:8@"TUConversationActivitySession"16@"NSUUID"24
v40@0:8@"NSString"16@"CPAuthorizationRequestOverrides"24@?<v@?B@"NSError">32
v32@0:8@"NSArray"16@"NSUUID"24
v32@0:8@"TUConversationMember"16@"NSUUID"24
v28@0:8B16@"NSUUID"20
v24@0:8@"NSString"16
v32@0:8@"<CPConversationManagerDataSourceObserver>"16@"NSObject<OS_dispatch_queue>"24
v32@0:8@"TUConversationActivitySessionContainer"16@"NSString"24
v32@0:8@"NSDictionary"16@"NSUUID"24
@"CPActivityAuthorizationManager"16@0:8
@"<CPSystemStateObserver>"16@0:8
@72@0:8@16@24@32@40@48@56@64
@88@0:8@16@24@32@40@48@56@64@72@80
@56@0:8@16@24@32@40@48
@144@0:8@16@24@32B40@44@52@60@68@76@84@92@100@108@116B124Q128@136
@124@0:8@16@24@32B40@44@52@60@68@76@84@92@100Q108@116
@52@0:8@16@24@32@40B48
v40@0:8Q16Q24@32
B36@0:8@16@24i32
B68@0:8@16@24@32@40@48B56@?60
B48@0:8@16@24@32@40
B44@0:8@16@24@32B40
B56@0:8@16@24@32@40@48
@96@0:8@16@24@32@40@48@56@64@72Q80@88
v52@0:8@16@24@32B40@?44
v40@0:8q16@24@32
v52@0:8@16@24B32@36@44
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
v36@0:8B16Q20@28
v28@0:8B16@?20
v40@0:8@16q24@?32
v48@0:8@16@24Q32@?40
v64@0:8@16@24@32@40@48Q56
v48@0:8Q16@24@32@40
@"CSDPendingMembershipTracker"
@"CSDScreenSharingActivityManager"
@"CSDConversationPersistenceController"
@"CSDConversationLinkManager"
@"CSDReportingController"
@"CSDConversationNoticeManager"
@"CSDSharedConversationServerBag"
@"<CSDConversationInvitationResolving>"
@"<CSDVoucherManager>"
@"<CSDParticipantUpdateSanitizer>"
@"CSDIDSService"
@"CSDSecureImageTranscoder"
@"CPApplicationController"
@"CPActivityAuthorizationManager"
@"<CSDConduitIDSProxy>"
@"NSURL"16@0:8
{?="protoProtocolVersion"b1"type"b1"oBSOLETEProtoMomentsAvailable"b1"protoMomentsV2Available"b1"protoSenderMuteUplink"b1"protoShouldSuppressInCallUI"b1"protoWantsVideo"b1}
B24@0:8q16
v32@0:8@?16@?24
@24@0:8@?16
B24@0:8@?16
@"CSDMessagingConversationActivityContext"
@"CSDMessagingConversationActivityMetadata"
{?="timestampAsTimeIntervalSinceReferenceDate"b1"updatedDateEpochTime"b1"isSystemActivity"b1}
{?="handleType"b1"notificationStyles"b1"version"b1}
{?="faceTimeAudioAvailable"b1"faceTimeVideoAvailable"b1}
@"NSCountedSet"
@56@0:8@16@24@32@?40@48
@"CXCallDirectoryStore"
@"CSDIncomingCallFilterDataSource"
@"CXCallDirectorySanitizer"
@"ACAccountStore"
@"CSDIncomingCallFilter"
@"<CSDTransactionManager>"
@"CHManager"
@"<CSDUserNotificationDelegate>"
@"TUFeatureFlags"
{?="generatorVersion"b1}
@"<CSDIDSSessionProvider>"
v24@0:8@"UABestAppSuggestion"16
v32@0:8@"UABestAppSuggestion"16@"NSSet"24
@20@0:8I16
v32@0:8@16d24
v36@0:8@16d24B32
@"NSSet"20@0:8I16
v24@0:8@"CSDUserActivity"16
v32@0:8@"CSDUserActivity"16d24
v36@0:8@"CSDUserActivity"16d24B32
@"CSDUserActivity"16@0:8
@"<CSDUserActivityCommunicatorDelegate>"16@0:8
v24@0:8@"<CSDUserActivityCommunicatorDelegate>"16
@28@0:8I16@20
@"<CSDUserActivityCommunicatorDelegate>"
@"UABestAppSuggestionManager"
@"UABestAppSuggestion"
v36@0:8@"<CSDIDSGroupSessionProvider>"16I24@"NSError"28
v24@0:8@"<CSDIDSGroupSessionProvider>"16
v48@0:8@"<CSDIDSGroupSessionProvider>"16@"NSDictionary"24Q32@"NSError"40
v32@0:8@"<CSDIDSGroupSessionProvider>"16@"NSError"24
v36@0:8@"<CSDIDSGroupSessionProvider>"16@"NSArray"24B32
v32@0:8@"<CSDIDSGroupSessionProvider>"16@"NSArray"24
v44@0:8@"<CSDIDSGroupSessionProvider>"16@"NSArray"24I32S36B40
v32@0:8@"<CSDIDSGroupSessionProvider>"16@"NSDictionary"24
v36@0:8@"<CSDIDSGroupSessionProvider>"16S24@"NSError"28
v40@0:8@"<CSDIDSGroupSessionProvider>"16@"NSData"24@"IDSGroupSessionActiveParticipant"32
v44@0:8@"<CSDIDSGroupSessionProvider>"16@"NSData"24S32@"IDSGroupSessionActiveParticipant"36
v28@0:8@"<CSDIDSGroupSessionProvider>"16I24
v96@0:8@16@24@32@40@48@56@64@72@80@88
v136@0:8@16@24@32@40@48@56@64@72@80@88@96B104B108@112@120Q128
Q24@0:8@16
S16@0:8
v20@0:8S16
@"<CSDIDSGroupSessionDelegate>"
@"<CSDIDSGroupSessionProvider>"
Vv28@0:8@16C24
Vv28@0:8i16@20
Vv40@0:8@16{CGSize=dd}24
Vv28@0:8@16i24
Vv32@0:8@16q24
Vv24@0:8@"TUAnswerRequest"16
Vv32@0:8@"NSString"16@"NSString"24
Vv28@0:8@"NSString"16C24
Vv28@0:8i16@"NSString"20
Vv24@0:8@"IDSDestination"16
Vv24@0:8@"TUProxyCall"16
Vv40@0:8@"NSString"16{CGSize=dd}24
Vv28@0:8@"NSString"16i24
Vv24@0:8@"TUDialRequest"16
Vv32@0:8@"NSString"16@"TUCallScreenShareAttributes"24
Vv36@0:8B16@"TUCallScreenShareAttributes"20@"NSString"28
Vv32@0:8@"NSString"16q24
Vv32@0:8@"TUDialRequest"16@"TUCallDisplayContext"24
Vv32@0:8@"TUDialRequest"16@?<v@?@"TUCall"@"NSArray">24
Vv24@0:8@"TUJoinConversationRequest"16
Vv32@0:8@"NSDictionary"16@?<v@?@"TUCall"@"NSArray">24
Vv24@0:8@"TUCallServicesClientCapabilities"16
Vv28@0:8@16B24
Vv24@0:8@?<v@?@"NSDictionary">16
Vv28@0:8@"NSString"16B24
Vv44@0:8@16@24B32@?36
Vv40@0:8@"NSSet"16@"NSString"24@?<v@?B>32
Vv44@0:8@"TUHandle"16@"NSString"24B32@?<v@?B>36
Vv44@0:8@"NSSet"16@"NSString"24B32@?<v@?B>36
Vv40@0:8@"NSSet"16@"NSString"24@?<v@?Q>32
Vv40@0:8@"NSSet"16@"NSString"24@?<v@?@"NSDictionary">32
Vv48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?B>40
v28@0:8@"NSArray"16B24
@"CSDCallController"16@0:8
v24@0:8@"CSDCall"16
v36@0:8@16i24@28
v32@0:8f16i20@24
v24@0:8B16B20
@"CSDCallController"
@"CSDRecentsController"
@"CSDAudioArbitrationController"
@"CSDRouteController"
@"CSDCallHistoryManagerXPCServer"
@"CSDCallProviderManagerXPCServer"
@"CSDRelayCallDataSource"
@"CSDRelayCallDelegate"
@"TUHardwareControlsBroadcaster"
@"CSDCarPlayManager"
@"CSDCallHistoryControllerXPCServer"
v24@0:8@?<v@?>16
@"<TUNotifyObserver>"
@"BKSApplicationStateMonitor"
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
v40@0:8@"CXNetworkExtensionMessageControllerHost"16@"NSDictionary"24@"NSString"32
v48@0:8@"CXNotificationServiceExtensionVoIPXPCHost"16@"NSDictionary"24@"NSString"32@?<v@?@"NSError">40
v44@0:8@16@24@32i40
v40@0:8@16@24i32B36
@"APSConnection"
@"CXNetworkExtensionMessageControllerHost"
@"CXNotificationServiceExtensionVoIPXPCHost"
@"CSDVoIPApplicationMonitor"
@"<CSDConversationNoticeDelegate>"
@"FBSOpenApplicationService"
@48@0:8Q16@24@32@40
@40@0:8Q16@24@32
@"TUConversationParticipantCapabilities"
@"TUCallServicesClientCapabilities"
@"RBSProcessHandle"
@"CSDMessagingConversationActivitySceneAssociationBehavior"
{?="preferredBroadcastingAttributes"b1"supportsContinuationOnTV"b1}
@"<CSDCHManager>"
Vv32@0:8@"NSUUID"16@"NSArray"24
Vv32@0:8@"NSUUID"16@?<v@?@"NSString"@"NSString"@"NSError">24
Vv40@0:8@16@24@32
Vv36@0:8@16B24@?28
Vv36@0:8B16Q20@28
Vv32@0:8Q16@24
Vv28@0:8B16@?20
Vv40@0:8@16q24@?32
Vv48@0:8@16@24Q32@?40
Vv24@0:8@?<v@?@"NSSet">16
Vv40@0:8@"NSSet"16@"NSSet"24@"NSUUID"32
Vv32@0:8@"TUConversationActivitySession"16@"NSUUID"24
Vv32@0:8@"TUConversationActivity"16@"NSUUID"24
Vv32@0:8@"NSUUID"16@?<v@?@"NSError">24
Vv36@0:8@"NSUUID"16B24@?<v@?@"NSError">28
Vv36@0:8B16@"TUConversationActivitySession"20@"NSUUID"28
Vv36@0:8B16Q20@"NSUUID"28
Vv32@0:8@"TUConversationMember"16@"NSUUID"24
Vv32@0:8@"NSString"16@"NSUUID"24
Vv32@0:8Q16@"NSUUID"24
Vv24@0:8@?<v@?B>16
Vv24@0:8@?<v@?@"<TUScreenShareAttributes>">16
Vv28@0:8B16@?<v@?@"NSSet"@"NSError">20
Vv32@0:8@"NSUUID"16@?<v@?@"TUConversationLink"@"NSError">24
Vv40@0:8@"NSSet"16q24@?<v@?@"TUConversationLink"@"NSError">32
Vv40@0:8@"NSSet"16@"TUConversationLink"24@?<v@?@"TUConversationLink"@"NSError">32
Vv36@0:8@"TUConversationLink"16B24@?<v@?B@"NSError">28
Vv48@0:8@"TUConversationLink"16@"NSDate"24Q32@?<v@?B@"NSError">40
Vv32@0:8@"TUConversationLink"16@?<v@?B@"NSDate"@"NSError">24
Vv24@0:8@?<v@?@"TUConversationLink"@"NSError">16
Vv32@0:8@"TUConversationLink"16@?<v@?B@"NSError">24
Vv40@0:8@"NSString"16@"TUConversationLink"24@?<v@?@"TUConversationLink"@"NSError">32
Vv28@0:8B16@?<v@?@"NSString">20
Vv36@0:8B16@"TUScreenShareAttributes"20@"NSUUID"28
Vv32@0:8@"NSURL"16@24
Vv24@0:8@?<v@?@"TUConversationNotice"@"NSError">16
v24@0:8@"<TUConversationManagerXPCClient>"16
v48@0:8@16@24@32Q40
v56@0:8@16Q24Q32@40@48
v48@0:8@16Q24Q32@40
v32@0:8@"CSDConversationManager"16@"TUConversation"24
v32@0:8@"CSDConversationManager"16@"TUJoinConversationRequest"24
v40@0:8@"CSDConversationManager"16@"TUConversation"24@"TUConversationParticipant"32
v32@0:8@"CSDConversationManager"16@"NSUUID"24
v48@0:8@"CSDConversationManager"16@"TUConversation"24@"TUConversationParticipant"32Q40
v56@0:8@"CSDConversationManager"16@"TUConversation"24@"CSDMessagingConversationMessage"32@"TUHandle"40@"<CSDGroupSessionParticipantUpdateProtocol>"48
v40@0:8@"CSDConversationManager"16@"TUConversation"24@"CXCallFailureContext"32
v40@0:8@"CSDConversationManager"16@"TUConversation"24@"TUHandle"32
v32@0:8@"CSDConversationManager"16@"NSArray"24
v40@0:8@"CSDConversationManager"16@"TUConversation"24@"TUConversationActivityEvent"32
v44@0:8@"CSDConversationManager"16@"TUConversation"24Q32B40
v48@0:8@"CSDConversationManager"16@"TUConversation"24@"TUConversationParticipant"32@"TUConversationNotice"40
v40@0:8@"CSDConversationManager"16@"TUConversation"24@"NSSet"32
v40@0:8@"CSDConversationManager"16@"TUConversation"24@"TUConversationMember"32
v48@0:8@"CSDConversationManager"16@"TUConversation"24Q32@"TUConversationActivitySession"40
v40@0:8@"CSDConversationManager"16@"TUConversation"24q32
v32@0:8@"CSDConversationManager"16@"NSString"24
v40@0:8@"CSDConversationManager"16@"TUConversationMember"24@"TUConversationLink"32
v32@0:8@"CSDConversationManager"16@"NSDictionary"24
v48@0:8@"CSDConversationManager"16@"TUConversation"24Q32@"NSString"40
v56@0:8@"CSDConversationManager"16Q24Q32@"TUHandle"40@"TUConversation"48
v48@0:8@"CSDConversationManager"16Q24Q32@"TUConversation"40
v40@0:8@"CSDConversationManager"16@"TUConversation"24@"TUConversationActivitySession"32
v36@0:8@"CSDConversationManager"16@"<TUScreenShareAttributes>"24B32
v32@0:8@"CSDConversationManager"16@"NSError"24
v28@0:8@"CSDConversationManager"16B24
B24@0:8@"TUConversationProvider"16
v24@0:8@"<CSDCallProviderManagerDataSource>"16
@"CSDUserIntentManager"
@"<CSDCallProviderManagerDataSource>"
v40@0:8@16q24q32
@"CMGestureManager"
v40@0:8@"CSDMessagingRelayMessage"16@"IDSDestination"24@"IDSDevice"32
v48@0:8@"CSDMessagingRelayMessage"16@"IDSDestination"24@"IDSDevice"32@?<v@?B@"NSDictionary">40
v40@0:8@"CSDMessagingRelayMessage"16@"IDSDestination"24@?<v@?@"NSDictionary">32
v40@0:8@"NSDictionary"16@"IDSDestination"24@?<v@?@"NSDictionary">32
v44@0:8@16@24B32@36
@36@0:8I16@20@28
B20@0:8I16
I24@0:8@16
@"NSUserActivity"
@"TUDialRequest"24@0:8@"TUDialRequest"16
v48@0:8@"NSUserActivity"16@"NSString"24@"NSDictionary"32@?<v@?B@"NSError">40
B24@0:8@"NSURL"16
@"NSURL"32@0:8@"NSString"16@"NSURL"24
B24@0:8@"TUCallProvider"16
@"<CSDCallProviderManagerDataSourceDelegate>"16@0:8
v24@0:8@"<CSDCallProviderManagerDataSourceDelegate>"16
v32@0:8@16r^{__CFString=}24
@24@0:8r^{__CFString=}16
@"<CSDCallProviderManagerDataSourceDelegate>"
@"CSDSandboxExtensionDirectory"
@"CSDCallCenterObserver"
d24@0:8@16
Q24@0:8Q16
@24@0:8q16
@"<CSDMomentsReportingSessionDelegate>"
v44@0:8@16I24I28B32@36
v32@0:8@16I24I28
v32@0:8@16Q24
v40@0:8@"AVCSessionParticipant"16B24B28@"NSError"32
v28@0:8@"AVCSessionParticipant"16B24
v32@0:8@"AVCSessionParticipant"16@"NSDictionary"24
v44@0:8@"AVCSessionParticipant"16I24I28B32@"NSError"36
v32@0:8@"AVCSessionParticipant"16I24I28
v32@0:8@"AVCSessionParticipant"16Q24
v36@0:8@"AVCScreenCapture"16B24@"NSError"28
v24@0:8@"AVCScreenCapture"16
v32@0:8@"AVCSession"16@"NSDictionary"24
v36@0:8@"AVCSession"16B24@"NSError"28
v24@0:8@"AVCSession"16
v44@0:8@"AVCSession"16@"AVCSessionParticipant"24B32@"NSError"36
v44@0:8@"AVCSession"16B24@"AVCSessionConfiguration"28@"NSError"36
v40@0:8@"AVCSession"16B24B28@"NSError"32
v44@0:8@"AVCSession"16I24I28B32@"NSError"36
v32@0:8@"AVCSession"16@"NSData"24
v32@0:8@"AVCSession"16@"NSError"24
v40@0:8@"AVCSession"16@"NSError"24@"NSDictionary"32
B24@0:8Q16
v84@0:8Q16@24@32{CGRect={CGPoint=dd}{CGSize=dd}}40B72Q76
@"NSData"24@0:8Q16
v24@0:8@"<TUScreenShareAttributes>"16
v28@0:8B16@"<TUScreenShareAttributes>"20
v32@0:8@"CSDConversationParticipant"16B24B28
v24@0:8@"CSDConversationParticipant"16
v84@0:8Q16@"NSNumber"24@"NSNumber"32{CGRect={CGPoint=dd}{CGSize=dd}}40B72Q76
@"NSData"16@0:8
@76@0:8@?16@24@32@40@48Q56B64@?68
@80@0:8@16@24@32@40B48Q52B60@64@72
@"AVCSession"
@"<CSDAVCSessionDelegate>"
@"AVCScreenCapture"
@44@0:8@16B24@28@36
@36@0:8@16@24i32
v24@0:8@"<CSDCoreTelephonyClient>"16
v40@0:8@"<CSDCoreTelephonyClient>"16@"CTXPCContextInfo"24@"CSDCTCallCapabilities"32
v32@0:8@"<CSDCoreTelephonyClient>"16@"NSDictionary"24
v40@0:8@"<CSDCoreTelephonyClient>"16@"CTXPCContextInfo"24@"NSDictionary"32
@40@0:8@16@24B32B36
@"<CSDTelephonyCallCapabilitiesDelegate>"
@"CSDCoreTelephonyClient"
@"<CSDEmergencyCallbackCapabilities>"
{?="deviceType"b1"protoCurrentlyPicked"b1"protoGuest"b1"protoSupportsRelay"b1}
v48@0:8@16d24@32@?40
@"TUCallProvider"24@0:8@"NSString"16
v24@0:8@"CSDRelayCall"16
v32@0:8@"CSDRelayCall"16@"TUAnswerRequest"24
v32@0:8@"CSDRelayCall"16@"TUCall"24
v28@0:8@"CSDRelayCall"16C24
v36@0:8@"CSDRelayCall"16B24@"NSError"28
@"TUDTMFSoundPlayer"
@"CSDMessagingEncryptedConversationMessage"
@"CSDMessagingConversationJoinedMetadata"
{?="avMode"b1"disconnectedReason"b1"enclosedEncryptedType"b1"requestBlobRecoveryOptions"b1"type"b1"version"b1"guestModeEnabled"b1"isLetMeInApproved"b1"shouldSuppressInCallUI"b1}
{?="generateDescriptorVersionSum"b1"version"b1}
{?="leaveReason"b1"version"b1}
v32@0:8@"NSString"16@"NSDictionary"24
v32@0:8@"NSString"16@"NSArray"24
@"CSDKeychainPasswordItem"
@32@0:8@16@?24
@"<CXAudioSessionActivationStateObserver>"
B24@0:8{?=ii}16
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSDictionary"24
@"CSDCTCallCapabilities"24@0:8@"CTXPCContextInfo"16
@"NSDictionary"32@0:8@"CTXPCContextInfo"16@"NSString"24
@"NSDictionary"24@0:8@"CTXPCContextInfo"16
v36@0:8@"NSString"16B24@"NSDictionary"28
v44@0:8@"CTXPCContextInfo"16@"NSString"24B32@"NSDictionary"36
v32@0:8@"NSString"16@"CTXPCContextInfo"24
v32@0:8@"CTXPCContextInfo"16@"NSString"24
@"NSString"24@0:8@"NSUUID"16
@"<CSDCoreTelephonyClientDelegate>"16@0:8
v24@0:8@"<CSDCoreTelephonyClientDelegate>"16
@"<CSDCoreTelephonyClientDelegate>"
@"CTXPCContexts"
{?="ambiguityState"b1"addCallAllowed"b1"endAndAnswerAllowed"b1"hardPauseAvailable"b1"holdAllowed"b1"holdAndAnswerAllowed"b1"mergeable"b1"sendToVoicemailAllowed"b1"swappable"b1"takingCallsPrivateAllowed"b1}
v32@0:8@"CSDMomentsReportingSession"16@"CSDMomentsUsageReport"24
v36@0:8@16q24i32
v36@0:8@"CSDMomentsController"16q24i32
v32@0:8@"CSDMomentsController"16q24
v40@0:8@"CSDMomentsController"16q24@"NSString"32
v28@0:8q16i24
v36@0:8q16i24@?28
v32@0:8q16@?24
v40@0:8q16@24@?32
{?="version"b1"shouldCheckAllGenerators"b1}
@"TUDelegateController<CSDCallHistoryManagerDelegate>"
v40@0:8d16@24@?32
@"<CSDConversationProviderDelegate>"
v32@0:8@"IDSAccountController"16@"IDSAccount"24
B72@0:8@16@24@32q40@48^@56^@64
@"IDSDevice"24@0:8@"NSString"16
@"NSArray"24@0:8@"NSString"16
@"NSArray"32@0:8@"NSString"16@"TUHandle"24
v32@0:8@"<IDSServiceDelegatePrivate>"16@"NSObject<OS_dispatch_queue>"24
v24@0:8@"<IDSServiceDelegatePrivate>"16
B24@0:8@"NSString"16
v32@0:8@"TUHandle"16@"NSDate"24
v32@0:8@"NSArray"16@"NSDate"24
v24@0:8@"NSSet"16
B72@0:8@"NSData"16@"IDSAccount"24@"NSSet"32q40@"NSDictionary"48^@56^@64
@"<CSDIDSServiceDependencies>"16@0:8
@"IDSDevice"16@0:8
@"IDSAccount"16@0:8
v64@0:8@16@24@32d40@48@?56
@"IDSAccountController"
@"IDSIDQueryController"
@"<IDSServicePseudonymDelegate>"
v48@0:8@"CSDIDSDualSession"16@"NSData"24@"IDSDestination"32@"IDSDevice"40
v52@0:8@16@24@32q40B48
v48@0:8@16@24@32q40
v56@0:8@16@24@32q40@?48
v40@0:8@16@?24@?32
v48@0:8@16@24@?32@?40
v52@0:8@16@24@?32B40@?44
v60@0:8@16@24@32@?40B48@?52
v52@0:8@"<CSDFileTransferring>"16@"NSURL"24@"NSDictionary"32B40@"NSString"44
v36@0:8@"<CSDFileTransferring>"16@"NSURL"24B32
v28@0:8@"<CSDAVCMoments>"16I24
v40@0:8@"<CSDAVCMoments>"16@"<CSDAVCMomentsRequest>"24@"NSError"32
v56@0:8@"<CSDAVCMoments>"16@"<CSDAVCMomentsRequest>"24@"NSURL"32@"NSURL"40@"NSError"48
v24@0:8@"<CSDAVCMoments>"16
Vv52@0:8q16@24@32B40@?44
Vv32@0:8q16@?24
Vv44@0:8i16q20@28@?36
Vv24@0:8@?<v@?>16
Vv52@0:8q16@"NSString"24@"NSDictionary"32B40@?<v@?@"TUMomentsCapabilities"@"NSError">44
Vv32@0:8q16@?<v@?@"NSError">24
Vv44@0:8i16q20@"NSString"28@?<v@?@"NSString"@"NSError">36
v24@0:8@"<TUMomentsControllerXPCClient>"16
i20@0:8B16
@"<CSDMomentsControllerDelegate>"
@"<CSDFileTransferring>"
@"<CSDMediaAssetManaging>"
@"<TUMomentsControllerXPCClient>"
@"<CSDMomentsServerBag>"
v36@0:8@16q24B32
v36@0:8@16B24q28
v40@0:8@16q24B32B36
v44@0:8@16B24q28@36
v48@0:8@16q24@32@40
v44@0:8@16q24B32@36
v32@0:8@16B24I28
v40@0:8@16B24I28@32
v36@0:8@"AVConference"16q24B32
v36@0:8@"AVConference"16B24@"NSDictionary"28
v40@0:8@"AVConference"16q24@"NSError"32
v32@0:8@"AVConference"16@"NSData"24
v32@0:8@"AVConference"16q24
v40@0:8@"AVConference"16@"VideoAttributes"24q32
v36@0:8@"AVConference"16B24q28
v24@0:8@"AVConference"16
v40@0:8@"AVConference"16q24@"NSDictionary"32
v40@0:8@"AVConference"16q24B32B36
v40@0:8@"AVConference"16@"NSData"24q32
v44@0:8@"AVConference"16B24q28@"NSError"36
v48@0:8@"AVConference"16q24@"NSError"32@"NSDictionary"40
v44@0:8@"AVConference"16q24B32@"NSError"36
v32@0:8@"AVConference"16B24I28
v40@0:8@"AVConference"16B24I28@"NSError"32
v32@0:8@"AVConference"16I24I28
v28@0:8@"AVConference"16I24
v28@0:8@"AVConference"16f24
v28@0:8@"AVConference"16B24
v48@0:8{CGSize=dd}16{CGSize=dd}32
B28@0:8i16@20
B52@0:8B16@20@28@36^@44
B40@0:8B16@20i28^@32
v56@0:8q16@24d32@?40@48
B28@0:8i16@"RTCSecureHierarchyToken"20
B52@0:8B16@"NSDictionary"20@"VCCapabilities"28@"NSString"36^@44
B40@0:8B16@"VCCapabilities"20i28^@32
v56@0:8q16@"NSDictionary"24d32@?<v@?@"NSDictionary"@"NSError">40@"NSObject<OS_dispatch_queue>"48
@"<CSDAVConferenceProviderDelegate>"16@0:8
v24@0:8@"<CSDAVConferenceProviderDelegate>"16
@"<CSDAVConferenceProviderDelegate>"
@"AVConference"
@"CSDProviderCall"
v48@0:8@"CXCallControllerHost"16@"NSString"24@"CXTransaction"32@?<v@?@"NSError">40
@"CXCallSource"24@0:8@"NSString"16
v44@0:8@16@24f32q36
v32@0:8@"CXCallSource"16@"CXProviderConfiguration"24
v48@0:8@"CXCallSource"16@"NSUUID"24@"CXCallUpdate"32@?<v@?@"NSError">40
v40@0:8@"CXCallSource"16@"NSUUID"24@"CXCallUpdate"32
v56@0:8@"CXCallSource"16@"NSUUID"24@"NSDate"32q40@"CXCallFailureContext"48
v40@0:8@"CXCallSource"16@"NSUUID"24@"NSDate"32
v32@0:8@"CXCallSource"16@"NSUUID"24
v48@0:8@"CXCallSource"16@"NSUUID"24@"NSData"32q40
v44@0:8@"CXCallSource"16@"NSUUID"24f32q36
v48@0:8@"CXCallSource"16@"NSUUID"24@"NSString"32q40
v40@0:8@"CXCallSource"16@"CXTransaction"24@?<v@?@"NSError">32
B40@0:8@16@24^@32
v32@0:8@"CXCallSourceManager"16@"CXTransactionGroup"24
v24@0:8@"CXCallSourceManager"16
B40@0:8@"CXCallSource"16@"CXAction"24^@32
@"CXCallSource"24@0:8@"TUDialRequest"16
@"CXCallSource"24@0:8@"TUJoinConversationRequest"16
v32@0:8@"CXCallAction"16@"CSDProviderCall"24
v32@0:8@"NSArray"16@"CSDProviderCall"24
v32@0:8@"CXStartCallAction"16@"CSDProviderCall"24
B44@0:8@16@24B32^@36
@"CSDFaceTimeProviderDelegate"
@"CSDCallFilterController"
@"CXCallControllerHost"
@"CXInProcessCallSource"
@"<CXProviderDelegatePrivate>"
@"CSDCallSourceFetcher"
@"CXCallSourceManager"
@"CSDVoIPProcessAssertionManager"
@"<CSDRouteManager>"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v40@0:8@?16@?24@32
^v16@0:8
v28@0:8@?16B24
v40@0:8@?16@24@32
@?32@0:8@16@?24
@?24@0:8@?16
@"NSXPCInterface"
@"NSObject<OS_dispatch_semaphore>"
v32@0:8@"<CSDProximitySensorObserverDelegate>"16@"NSObject<OS_dispatch_queue>"24
v24@0:8@"<CSDProximitySensorObserverDelegate>"16
@"TUDelegateController"
@"FTNetworkSupport"
@32@0:8q16@24
@"NSString"24@0:8@"NSString"16
Q32@0:8@16^@24
@48@0:8@16Q24Q32^@40
v48@0:8@16Q24Q32@?40
Q36@0:8@16B24^@28
Q44@0:8B16q20@28^@36
v44@0:8B16q20@28@?36
Q48@0:8@16q24@32^@40
v48@0:8@16q24@32@?40
B32@0:8@"NSArray"16^@24
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
Q32@0:8@"NSPredicate"16^@24
v32@0:8@"NSPredicate"16@?<v@?Q@"NSError">24
@"NSArray"48@0:8@"NSPredicate"16Q24Q32^@40
v48@0:8@"NSPredicate"16Q24Q32@?<v@?@"NSArray"@"NSError">40
Q36@0:8@"NSPredicate"16B24^@28
v36@0:8@"NSPredicate"16B24@?<v@?Q@"NSError">28
Q44@0:8B16q20@"NSPredicate"28^@36
v44@0:8B16q20@"NSPredicate"28@?<v@?Q@"NSError">36
Q48@0:8@"NSDate"16q24@"NSPredicate"32^@40
v48@0:8@"NSDate"16q24@"NSPredicate"32@?<v@?Q@"NSError">40
Q48@0:8@"NSSet"16q24@"NSPredicate"32^@40
v48@0:8@"NSSet"16q24@"NSPredicate"32@?<v@?Q@"NSError">40
Q48@0:8@"NSString"16q24@"NSPredicate"32^@40
v48@0:8@"NSString"16q24@"NSPredicate"32@?<v@?Q@"NSError">40
@"<TUConversationLinkDescriptorDataSourceDelegate>"16@0:8
v24@0:8@"<TUConversationLinkDescriptorDataSourceDelegate>"16
B24@0:8@"<TUScreenShareAttributes>"16
@24@0:8@"<TUScreenShareAttributes>"16
@"NSNumber"16@0:8
v24@0:8@"NSNumber"16
@"NSValue"16@0:8
v24@0:8@"NSValue"16
@48@0:8q16@24@32@40
@32@0:8C16C20@24
@48@0:8q16@"NSString"24@"<CSDAVCMomentsDelegate>"32@"OS_dispatch_queue"40
@"<CSDAVCMomentsRequest>"32@0:8C16C20@"NSString"24
@"<CSDAVCMomentsDelegate>"16@0:8
B24@0:8^@16
r^v24@0:8@16
@"NSDictionary"40@0:8@"NSArray"16@"NSArray"24^@32
@"CNContact"40@0:8@"NSString"16@"NSArray"24^@32
@"NSArray"40@0:8@"NSPredicate"16@"NSArray"24^@32
r^v24@0:8@"CNContact"16
@"CNFetchResult"32@0:8@"CNChangeHistoryFetchRequest"16^@24
@"CNContact"32@0:8@"NSString"16@"NSArray"24
Q24@0:8@?16
@"NSArray"24@0:8@?<B@?@"TUCall">16
@"NSArray"20@0:8i16
@"NSArray"24@0:8@"NSUUID"16
@"TUCall"24@0:8@?<B@?@"TUCall">16
@"TUCall"20@0:8i16
@"TUCall"24@0:8@"NSString"16
@"TUCall"24@0:8@"NSArray"16
Q24@0:8@?<B@?@"TUCall">16
B24@0:8@?<B@?@"TUCall">16
@"TUCall"16@0:8
@32@0:8@?16@?24
@"TUCall"32@0:8@?<B@?@"TUCall">16@?<q@?@@>24
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v24@0:8@"CARSession"16
v32@0:8@"CARSession"16@"CARSessionConfiguration"24
B40@0:8@"NSData"16@"NSString"24@"IDSMessageContext"32
B48@0:8@"NSURL"16@"NSDictionary"24@"NSString"32@"IDSMessageContext"40
v32@0:8@"<CSDGroupSessionParticipantUpdateProtocol>"16@"CSDConversationManager"24
v24@0:8@"TLAlert"16
v32@0:8@"CSDIDSService"16@"IDSPseudonym"24
v24@0:8@"CSDIDSService"16
v24@0:8@"<CHCallInteractionManager>"16
v48@0:8@16{_NSRange=QQ}24@40
v32@0:8@"AVSpeechSynthesizer"16@"AVSpeechUtterance"24
v48@0:8@"AVSpeechSynthesizer"16{_NSRange=QQ}24@"AVSpeechUtterance"40
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
Vv40@0:8q16@24@?32
Vv40@0:8q16@"NSString"24@?<v@?@"NSError">32
v24@0:8@"CTXPCServiceSubscriptionContext"16
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTVoicemailInfoType"24
v28@0:8@"AVCMoments"16I24
v40@0:8@"AVCMoments"16@"AVCMomentsRequest"24@"NSError"32
v56@0:8@"AVCMoments"16@"AVCMomentsRequest"24@"NSURL"32@"NSURL"40@"NSError"48
v48@0:8@"AVCMoments"16@"AVCMomentsRequest"24@"NSURL"32@"NSError"40
v24@0:8@"AVCMoments"16
%@ %@
avcIdentifier
pseudonym
publicKey
conversationMessageBytes
privateKey
invitedHandles
creationDateEpochTime
groupUUIDString
originatorHandle
pseudonymExpirationDateEpochTime
isActivated
generatorDescriptor
linkName
linkLifetimeScope
Indefinite
CallDuration
(unknown: %i)
CSDTransactionManager
TUCallCenter_allCalls
com.apple.calls.callservicesd.
%@:%@
handleCallStatusChanged
handleSessionStateChanged
%@-%@
com.apple.telephonyutilities.callservicesdaemon.csdavconference
@"<CSDAVConferenceProvider>"24@?0@"NSUUID"8@"NSObject<OS_dispatch_queue>"16
<%@ %p state=%d conference=%@>
v24@?0@"NSDictionary"8@"NSError"16
<%@ %p caller=%d capabilities=%@ deviceRole=%d>
TUCallUserActivityCTInfoKey
TUCallUserActivityServiceKey
kCTCallDirection
kCTCallDirectionOutgoing
kCTCallDirectionIncoming
kCTCallPhoneNumber
com.apple.coretelephony
handle
avcData
isMomentsAvailable
isScreenSharingAvailable
isGondolaCallingAvailable
isMirageAvailable
isLightweight
sharePlayProtocolVersion
options
isGFTDowngradeToOneToOneAvailable
guestModeEnabled
association
isUPlusNDowngradeAvailable
avMode
isUPlusOneScreenSharingAvailable
mirageHandshakeData
supportsLeaveContext
None
Audio
Video
B8@?0
-[CSDUserActivityManager conversationManager:activeRemoteParticipantsChangedForConversation:fromOldConversation:]
-[CSDUserActivityManager conversationManager:addedActiveConversation:]
v24@?0@"NSString"8d16
ADClientSetValueForDistributionKey
AggregateDictionary
%@.%@.%f
ForceDisableCallProximity
com.apple.mobilephone.talking-with-phone-away-from-face-without-speaker
CSDProximityController.m
Invalid parameter not satisfying: %@
callCenterObserver != nil
interfaceOrientationObserver != nil
routeController != nil
proximitySensorObserver != nil
queue != nil
voiceOverObserver != nil
v16@?0@"FBSOrientationUpdate"8
v12@?0i8
ConferenceID:
kMXSessionAudioCategory_PlayAndRecord_NoBluetooth
MediaExperience
kMXSessionAudioMode_VoiceChat
kMXSessionAudioMode_VideoChat
@"IMAccount"16@?0@"CXStartCallAction"8
IMPreferredAccountForService
IMCore
IMDaemonDidConnectNotification
IMAVCore
IMAVChatStateChangedNotification
IMAVChatParticipantReceivedFirstFrameNotification
IMAVChatParticipantInvitationDeliveredNotification
IMAVChatParticipantCallInfoChangedNotification
IMAVChatConferenceIDChangedNotification
IMAVChatConferenceMetadataUpdatedNotification
IMAVChatMayRequireBreakBeforeMakeChangedNotification
IMAVChatParticipantInFrequencyChangedNotification
IMAVChatParticipantOutFrequencyChangedNotification
IMAVController
IMAVChat
_NSStringDescriptionForIMAVChatEndedReason
CALL_FAILED_NO_NETWORK_CONNECTION_TITLE
ALERT_VIDEO_FAILED_NO_LOCAL_NETWORK_WLAN_MESSAGE
CALL_FAILED_NO_LOCAL_NETWORK_WLAN_MESSAGE
ALERT_VIDEO_FAILED_NO_LOCAL_NETWORK_WIFI_MESSAGE
CALL_FAILED_NO_LOCAL_NETWORK_WIFI_MESSAGE
ALERT_VIDEO_FAILED_NO_LOCAL_WLAN_MESSAGE
CALL_FAILED_NO_LOCAL_WLAN_MESSAGE
ALERT_VIDEO_FAILED_NO_LOCAL_WIFI_MESSAGE
CALL_FAILED_NO_LOCAL_WIFI_MESSAGE
ALERT_VIDEO_FAILED_TITLE
CALL_FAILED_TITLE
ALERT_VIDEO_FAILED_BAD_NONCE_TIMESTAMP
CALL_FAILED_BAD_NONCE_TIMESTAMP
ALERT_VIDEO_FAILED_UPDATE_LOCATION_MESSAGE
CALL_FAILED_UPDATE_LOCATION_MESSAGE
ALERT_VIDEO_FAILED_REGION_INFO_INSUFFICIENT
CALL_FAILED_REGION_INFO_INSUFFICIENT
ALERT_VIDEO_FAILED_REMOTE_INCOMPATIBLE_MESSAGE_%@_NUMBER
ALERT_VIDEO_FAILED_REMOTE_INCOMPATIBLE_MESSAGE_%@_NAME
ALERT_VIDEO_NOT_AVAILABLE_TITLE
CALL_NOT_AVAILABLE_TITLE
ALERT_VIDEO_FAILED_NOT_AVAILABLE_MESSAGE_%@_NUMBER
CALL_FAILED_%@_NOT_AVAILABLE_MESSAGE_NUMBER
ALERT_VIDEO_FAILED_NOT_AVAILABLE_MESSAGE_%@_NAME
CALL_FAILED_%@_NOT_AVAILABLE_MESSAGE_NAME
com.apple.telephonyutilities.callservicesd.callhistorycontrollerxpcserver
v16@?0@"CSDClient"8
com.apple.telephonyutilities.callservicesdaemon.callhistorycontroller
CSDCallHistoryControllerClientsShouldConnectNotification
MaxRemoteMirageParticipantsOverride
@"<CSDAVCSession>"48@?0@"NSString"8@"<CSDAVCSessionDelegate>"16@"NSObject<OS_dispatch_queue>"24B32B36@"TUConversationReport"40
@"NSData"8@?0
<%@ %p
 UUID=%@
 groupUUID=%@
 link=%@
 messagesGroupUUID=%@
 state=%ld
 hasReceivedLetMeInRequest=%ld
 letMeInRequestState=%ld
 ignoreLMIRequests=%d
 avcSessionToken=%ld
 avcSessionIdentifier=%@
 isLocallyCreated=%d
 hasJoined=%d
 isUplinkMuted=%d
 video=%d
 isAudioEnabled=%d
 isVideoEnabled=%d
 isScreenEnabled=%d
 oneToOneModeEnabled=%d
 localMember=%@
 remoteMembers=%@
 pendingMembers=%@
 kickedMembers=%@
 rejectedMembers=%@
 otherInvitedHandles=%@
 lightweightMembers=%@
 memberIdentifiers=%@
 activeRemoteParticipants=%@
 activeLightweightParticipants=%@
 report=%@
 virtualParticipants=%@
 provider=%@
 tuActivitySessions=%@
 tuSystemActivitySessions=%@
 handoffEligibility=%@
 splitSessionSecondary=%@
 localLightweightSecondaryMember=%@
 invitationPreferences=%@
 avMode=%ld
Attempting to add lightweight participant with invalid AVMode. Please file a bug to [FaceTime | (New Bugs)]
PubSub
CADisplay
QuartzCore
Trying to setup new AVCSession without tearing down previous session first. Please file a bug to [FaceTime Core - TelephonyUtilities | All].
Calling -[CSDConversation leave]
B16@?0@"CSDConversationParticipant"8
Cleaning up from AVCSession failure.
Timed out waiting for sessions to end in leaving state (left conversation for reason: %@). Please file a bug on [TelephonyUtilities | New Bugs] so we can direct it to the appropriate team.
B16@?0@"TUConversationMember"8
NSErrorUserInfoDetailedError
-[CSDConversation executeSessionDidStart]
CSDConversation.m
self.avcSession != nil
AVCSession started but we weren't trying to join the conversation.
AVCSession failed to start.
%@.%@
v16@?0@"IMUserNotification"8
v16@?0Q8
CSDRelayIDSActiveAccountsChanged
CSDRelayPairedDeviceConnectedNotification
com.apple.private.alloy.phonecontinuity
supportsHolding
supportsGrouping
supportsUngrouping
supportsDTMF
supportsUnambiguousMultiPartyState
supportsAddCall
supportsSendingToVoicemail
destinationID
uniqueProxyIdentifier
sourceIdentifier
wantsHoldMusic
dtmfKey
disconnectedReason
v32@?0@"NSString"8@16^B24
NoAction
IncomingCall
DialCall
CallDialed
AnswerCall
CallAnsweredElsewhere
CallDisconnected
PlayDTMFToneForKey
CallConnected
DisconnectCall
PullRelayingCalls
HoldCall
UnholdCall
GroupCall
UngroupCall
ResetWantsHoldMusic
SwapCalls
UpdateCallModel
DeviceUnavailable
EndActiveAndAnswer
EndHeldAndAnswer
DisconnectCurrentCallAndActivateHeld
DisconnectAllCalls
ResetState
HardPauseDigitsAvailability
SendHardPauseDigits
UpdateRemoteCallState
SuppressRingtone
RequestCallContext
CallStartedConnecting
PushHostedCalls
PullHostedCalls
PushRelayingCalls
UpdateCallContext
NeedsManualInCallSoundsChange
InvitationSent
HoldActiveAndAnswer
UpdateCallDisplayContext
SetUplinkMuted
UpdateRemoteUplinkMuted
UpdateSystemVolume
UpdateSupportsTTYWithVoice
SetTTYType
RequestAction
UpdateRoutes
PickRoute
DowngradeToAudio
UpdateFailureExpected
UpdateSupportsEmergencyFallback
value
isoCountryCode
Generic
PhoneNumber
EmailAddress
sender
audioRouteUniqueIdentifier
com.apple.telephonyutilities.callservicesd.FaceTimeProvider
/stock
com.apple.request.hipuncap
com.apple.springboard.passcodeLockedOrBlocked
v16@?0@?<v@?>8
gk-invitation-break-before-make-timeout
StoreDemoMode
com.apple.demo-settings
RetailDemoNotification
CALL_ENDED
CALL_ENDED_DEMO_EXPLANATION
 temporaryGroupUUID=%@
 conversationGroupUUID=%@
 approverHandle=%@
 isVideo=%d
ShouldSuppress
ShouldAllow
com.apple.telephonyutilities.callservicesd.statusbarmanager
v16@?0@"STCallingStatusDomainUserInteraction"8
v16@?0@"STMutableCallingStatusDomainData"8
com.apple.callservicesd.neighborhoodConduit.xpcServer
com.apple.telephonyutilities.callservicesdaemon.neighborhood-activities
v24@?0@"CSDClient"8@"<TUNeighborhoodActivityConduitXPCClient>"16
v16@?0@"<TUNeighborhoodActivityConduitXPCClient>"8
CSDCarrierBundlePhoneNumberProviderController
B24@?0@"CSDCarrierBundlePhoneNumberProvider"8@"NSDictionary"16
SilenceUnknownCallersOverrideList
CSDRelayIDSDualSession.m
Use another initializer instead
forceBTClassic
non-nil
updateMessage
checkInMessage
recoverMessage
Unknown
Update
CheckIn
Recover
com.apple.telephonyutilities.callservicesd.thumpercapabilitiesmonitor
NPSDomainAccessor
NanoPreferencesSync
thumperCallingAllowedOnDefaultPairedDevice
thumperCallingCapabilitiesStates
PreviousDefaultPairedDeviceUniqueID
uniqueIDOverride
com.apple.telephonyutilities.callservicesd.thumperpushhandler.secondarydevicethumpersupported
THUMPER_CALLING
NOT_NOW
TURN_ON
MAKE_RECEIVE_THUMPER_CELLULAR_FOR_CARRIER_%@
MAKE_RECEIVE_THUMPER_FOR_CARRIER_%@
MAKE_RECEIVE_THUMPER_CELLULAR
MAKE_RECEIVE_THUMPER
com.apple.telephonyutilities.callservicesd.thumperpushhandler.secondarydevicethumperenabled
THUMPER_EMERGENCY_ADDRESS_INFO_TITLE
THUMPER_EMERGENCY_ADDRESS_INFO_MESSAGE
PREFERENCES_BUTTON_TITLE
PSFaceTimeSettingsDetail
Preferences
<%@ %p 
%@=%d
%@=%@
%@=%lu
com.apple.telephonyutilities.callservicesd.accountscontroller
    faceTimeIDMatchesAppleID: %@
    faceTimeAudioAvailability: %ld
    faceTimeVideoAvailability: %ld
    outgoingCallerID: %@
B24@?0@"NSString"8^B16
B32@?0@"NSString"8Q16^B24
IMStringIsPhoneNumber
IMFoundation
CSDPauseDigits.m
%s is not available. Use a designated initializer instead.
-[CSDPauseDigits init]
<%@ %p digits=%@ isHardPause=%d>
com.apple.telephonyutilities.callservicesd.conversationprovidermanagerxpcserver
com.apple.telephonyutilities.callservicesdaemon.conversationprovidermanager
CSDConversationProviderManagerClientsShouldConnectNotification
com.apple.telephonyutilities.callservicesd.callprovidermanagerxpcserver
com.apple.telephonyutilities.callservicesdaemon.callprovidermanager
v24@?0@"CSDClient"8@"<TUCallProviderManagerXPCClient>"16
com.apple.private.alloy.facetime.video
@"CSDAVConference"8@?0
CSDIDSChat.m
Cannot create an incoming chat with an outgoing session: %@
Cannot create an outgoing chat with an incoming session: %@
disableFaceTimeKeyExchange
Invite
contextIdentifier
actionDescription
ongoingDescription
completedDescription
com.apple.telephonyutilities.callservicesd.calldirectorymaintenance.daily
v16@?0@"NSObject<OS_xpc_object>"8
extensionsChangedForCallDirectoryExtensionManager-%lu
CXCallDirectoryNSExtensionManagerDelegate
protoCallModelState
protoService
protoWantsHoldMusic
protoCannotBeAnswered
protoDTMFKey
protoDisconnectedReason
OBSOLETE_conferenceIdentifier
protoVoicemail
callerNameFromNetwork
protoCall
hardPauseDigits
hardPauseState
receivedMessageType
protoProtocolVersion
protoShouldSuppressRingtone
dummyPayload
hostCallCreationTime
messageSendTime
protoNeedsManualInCallSounds
protoCannotRelayAudioOrVideoOnPairedDevice
protoExpectedEndpointOnMessagingDevice
contactIdentifier
protoCallCapabilitiesState
protoSoundRegion
protoEmergency
otherUniqueProxyIdentifiers
protoCallModel
protoSOS
protoDisplayContext
inviteData
protoProvider
protoVideo
protoUplinkMuted
protoRemoteUplinkMuted
systemVolume
localSenderIdentityUUIDString
localSenderIdentityAccountUUIDString
protoTTYType
protoSupportsTTYWithVoice
requestActionType
routes
route
endpointIDSDestinationURIs
protoPriority
protoOriginatingUIType
protoFailureExpected
protoSupportsEmergencyFallback
%@.%@.%p
idx (%lu) is out of range (%lu)
localizedName
bundleURLString
maximumCallGroups
maximumCallsPerCallGroup
supportsAudioOnly
supportsAudioAndVideo
supportsEmergency
supportsVoicemail
ringtoneSoundURLString
originalRingtoneSoundURLString
handoffIdentifier
protoSupportedHandleType
emergencyLabeledHandles
supportsRecents
prioritizedSenderIdentities
emergencyHandles
    dialingIDSDevice: %@
@"CSDMessagingRelayMessage"8@?0
v20@?0i8^B12
v20@?0B8@"NSDictionary"12
com.apple.notifyd.matching
com.apple.telephonyutilities.callservicesd.kFZACAppBundleIdentifierLaunchNotification
com.apple.distnoted.matching
com.apple.callhistory.save.distributed.notification
com.apple.telephonyutilities.callservicesdaemon.app-installed
com.apple.telephonyutilities.callservicesdaemon.app-uninstalled
com.apple.CTTelephonyCenter
com.apple.telephonyutilities.callservicesd.reportingcontroller
proximity-sensor
com.apple.telephonyutilities.callservicesdaemon.connectionrequest
com.apple.telephonyutilities.callservicesd.calls
com.apple.language.changed
CSDIDSPendingChatKey
CSDIDSPendingCallKey
CSDIDSPendingChatUUIDKey
CSDIDSPendingMessageDidReceiveInviteNotification
CSDIDSPendingMessageDidReceiveCancelNotification
CSDGroupIDSPendingMessageDidReceiveInviteNotification
@"<CSDIDSDualSessionProvider>"24@?0@"IDSSession"8@"NSObject<OS_dispatch_queue>"16
NetworkAvailabilityCheckOverrideValue
allowed
ignored
audio
SKEBlob
mediaBlob
callInfoBlob
CSDIDSDualSessionStateChangedNotification
CSDIDSDualSession.m
-[CSDIDSDualSession init]
%@ isInitiator=%d state=%d remoteProtocolVersion=%@>
%@=%ld
@"NSString"16@?0@"NSString"8
CSDFaceTimeIDSProviderDelegate.m
%s is not available. Use an available initializer instead.
-[CSDFaceTimeIDSProviderDelegate init]
@"<CSDIDSService>"12@?0B8
B16@?0@"IDSAccount"8
@"<CSDIDSDualSessionProvider>"40@?0@"IDSAccount"8@"NSSet"16@"NSDictionary"24@"NSObject<OS_dispatch_queue>"32
@"<CSDIDSChat>"48@?0@"CSDExternalIDSDualSession"8@"NSUUID"16@"TUHandle"24B32B36@"NSUUID"40
CSDFileTransferringMetadataKeyIsDirectory
CSDFileTransferringMetadataKeyUserData
com.apple.telephonyutilities.callservicesd.csdfiletransfercontroller
v16@?0@"NSURL"8
directory
file
v16@?0@"IMFileCopier"8
CSDCallSourceFetcher.m
%s is not available. Use another initializer instead.
-[CSDCallSourceFetcher init]
iPod
IPOD
iPad
IPAD
iPhone
IPHONE
THUMPER_SERVICE_NAME
ENTER_CODE_FOR_%@
ALLOW
CANCEL
PrimaryDeviceNotification
THUMPER_PUSH_HANDLER_CONSENT_ALERT_MESSAGE
THUMPER_PUSH_HANDLER_CONSENT_ALERT_TITLE
THUMPER_PUSH_HANDLER_CONSENT_ALERT_ENABLE
THUMPER_PUSH_HANDLER_CONSENT_ALERT_CANCEL
SecondaryDeviceNotification
RECEIVE_THUMPER_CALLS_FROM_PHONE_NUMBER_ENTER_CODE_%@_%@
THUMPER_PIN_EXCHANGE_REQUEST_FAILED_TITLE
THUMPER_PIN_EXCHANGE_REQUEST_FAILED_MESSAGE
protoStatus
protoConferenced
protoTimeConnected
protoOutgoing
protoHasSentInvitation
kMXSessionAudioMode_RemoteVoiceChat
com.apple.telephonyutilities.callservicesd.callhistorymanagerxpcserver
com.apple.telephonyutilities.callservicesdaemon.callhistorymanager
-[CSDCallHistoryManagerXPCServer updateOutgoingLocalParticipantUUID:forCallsWithOutgoingLocalParticipantUUID:]
CSDPauseDigitsQueue.m
-[CSDPauseDigitsQueue init]
 baseDestinationID=%@
 originalPauseDigitsString=%@
 pauseDigits=%@
** TUAssertion failure: %@
callservicesd is attempting to create an XPC client for itself.
CSDXPCClient.m
%@ entitlementCapabilities=%@
IPCHack
UI process assertion for message handling
RTTTelephonyUtilities
RTTUtilities
targetContentIdentifier
shouldAssociateScene
CSDIDSInitialLinkTypeKey
CSDIDSInputAudioPowerSpectrumTokenKey
CSDIDSOutputAudioPowerSpectrumTokenKey
%s: parameter '%@' cannot be nil
-[CSDProviderCallConfiguration initWithProviderIdentifier:]
providerIdentifier
message
messagesGroupUUIDString
messagesGroupName
activitySession
video
otherInvitedHandles
lightweightMembers
videoEnabled
participantAssociation
collaborationIdentifier
PHPhotoLibrary
Photos
PHAssetCreationRequest
PHAssetResourceCreationOptions
CallState
status
bundleID
providerContext
hostedOnCurrentDevice
endpointOnCurrentDevice
callStart
callStop
callForegrounded
callBackgrounded
GroupSessionEventEnded
timestamp
timestampEnd
CSDFaceTimeProviderDelegate.m
-[CSDFaceTimeProviderDelegate init]
v16@?0@"CSDIDSService"8
v24@?0@"NSArray"8@"NSArray"16
-[CSDVoIPApplication init] is not supported. Use -[CSDVoIPApplication initWithBundleIdentifier:] instead
CSDVoIPApplication.m
<%@ %p bundleIdentifier=%@ environment=%@ pushKitClient=%@ networkExtensionClient=%@ token=%@ pendingPKMessageContextCount=%lu pendingNetworkExtensionContextsCount=%lu>
aps-environment
com.apple.developer.pushkit.unrestricted-voip
com.apple.developer.pushkit.unrestricted-voip-regulatory
com.apple.developer.pushkit.unrestricted-voip.ptt
com.apple.developer.pushkit.unrestricted-voip.temporary
13.0
15.0
15.4
identifierUUIDString
activity
givenName
middleName
nameSuffix
phoneticRepresentation
link
v20@?0i8q12
v16@?0@"TUConversation"8
-[CSDStatusBarResolver conversationManager:removedActiveConversation:]
-[CSDStatusBarResolver conversationManager:addedActiveConversation:]
-[CSDStatusBarResolver conversationManager:stateChangedForConversation:]
-[CSDStatusBarResolver conversationManager:activitySessionsChangedForConversation:]
-[CSDStatusBarResolver conversationManager:activeRemoteParticipantsChangedForConversation:]
-[CSDStatusBarResolver conversationManager:localVideoToggledForConversation:]
-[CSDStatusBarResolver conversationManager:handoffEligibilityChangedForConversation:]
CSDRelayConferenceLocalFrequencyChangedNotification
CSDRelayConferenceRemoteFrequencyChangedNotification
CSDRelayConferenceLocalMeterLevelChangedNotification
CSDRelayConferenceRemoteMeterLevelChangedNotification
CSDRelayConferenceMutedChangedNotification
CSDRelayConferenceSendingAudioChangedNotification
CSDRelayConferenceConnectionWillCloseNotification
CSDRelayConferenceConnectionDidCloseNotification
CSDRelayConferenceConnectionDidReceiveDataNotification
CSDRelayConferenceConnectionDidReceiveDataNotificationDataKey
com.apple.telephonyutilities
Conference cleaned up before handling a didStart with error: %@
CallServices
Images
CSDSandboxExtensionDirectory.m
-[CSDSandboxExtensionDirectory init]
CSDPinExchangeCompressedDataKey
CSDPinExchangeActionKey
CSDPinExchangeCallerIDKey
CSDPinExchangePinKey
CSDPinExchangeActionRequestPIN
CSDPinExchangeActionSendPIN
CSDPinExchangeActionOneTimeReminder
CSDPinExchangeActionApproved
CSDPinExchangeActionUnapproved
CSDPinExchangeActionCancelledPrimary
CSDPinExchangeActionCancelledSecondary
v20@?0B8@"NSString"12
com.apple.telephonyutilities.callservicesd.pinexchangeerror
INCORRECT_PIN_ENTERED
THUMPER_MISMATCHED_ACCOUNTS
MAX_SLOTS_FILLED
primaryHandle
primaryIdentifier
primaryAvcIdentifier
associatedPseudonym
conversationGroupUUIDString
com.apple.telephonyutilities.callservicesd.callcapabilities
com.apple.telephonyutilities.callservicesdaemon.callcapabilities
State: %@
Telephony capabilities: %@
Accounts controller: %@
Paired Host Device State: %@
v24@?0@"CSDClient"8@"<TUCallCapabilitiesXPCClient>"16
-[CSDCallCapabilities setRelayCallingEnabled:]
-[CSDCallCapabilities setRelayCallingEnabled:forDeviceWithID:]
-[CSDCallCapabilities setWiFiCallingEnabled:forSenderIdentityWithUUID:]
-[CSDCallCapabilities setWiFiCallingRoamingEnabled:forSenderIdentityWithUUID:]
-[CSDCallCapabilities setVoLTECallingEnabled:forSenderIdentityWithUUID:]
-[CSDCallCapabilities setThumperCallingEnabled:forSenderIdentityWithUUID:]
-[CSDCallCapabilities setThumperCallingAllowed:onSecondaryDeviceWithID:forSenderIdentityWithUUID:]
-[CSDCallCapabilities setThumperCallingAllowedOnDefaultPairedDevice:forSenderIdentityWithUUID:]
-[CSDCallCapabilities endEmergencyCallbackMode]
-[CSDCallCapabilities invalidateAndRefreshWiFiCallingProvisioningURLForSenderIdentityWithUUID:]
-[CSDCallCapabilities invalidateAndRefreshThumperCallingProvisioningURLForSenderIdentityWithUUID:]
-[CSDCallCapabilities requestPinFromPrimaryDevice]
-[CSDCallCapabilities cancelPinRequestFromPrimaryDevice]
disableSupportsPrimaryCalling
forceSupportsPrimaryCalling
telephony
disableSupportsBasebandCalling
forceSupportsBasebandCalling
disableSupportsCellularData
forceSupportsCellularData
disableDisplayingTelephonyCallSupport
forceDisplayingTelephonyCallSupport
disableDisplayingFaceTimeAudioCallSupport
forceDisplayingFaceTimeAudioCallSupport
disableDisplayingFaceTimeVideoCallSupport
forceDisplayingFaceTimeVideoCallSupport
disableCanEnableWiFiCalling
forceCanEnableWiFiCalling
disableCanEnableVoLTECalling
forceCanEnableVoLTECalling
disableCanEnableThumperCalling
forceCanEnableThumperCalling
q24@?0@"TUCloudCallingDevice"8@"TUCloudCallingDevice"16
relayCallingDisabled
relayCallingDisabledForDeviceID
pairedHostDeviceState
CSDSharePlayMediaDidHandoffNotification
CSDSharePlayRemoteActivityDidChangeNotification
CSDCallMayRequireBreakBeforeMakeChangedNotification
CSDCallHasStartedOutgoingChangedNotification
CSDCallHasAudioInterruptionChangedNotification
CSDCallAudioInterruptionPropertiesChangedNotification
CSDCallLocalPreviewStoppedNotification
CSDCallsWillEnterBackgroundNotification
CSDCallEnteredForegroundNotification
CSDCallRemoteParticipantJoinedNotification
CSDCallRemoteParticipantLeftNotification
CSDCallOneToOneModeChangedNotification
CSDMediaPlaybackOnExternalDeviceChangedNotification
CSDCallTransmissionStateChangedNotification
CSDCallMetricsKnownContact
CSDCallMetricsSiriSuggested
CSDCallMetricsReturnedCall
CSDCallMetricsOwnNumber
CSDCallMetricsVerifiedAppleCare
CSDCallMetricsCarrierNumber
CSDCallAudioInterruptionProviderUserInfoKey
CSDCallAudioInterruptionProviderUserInfoAVAudioClient
CSDCallAudioInterruptionProviderUserInfoAVAudioSession
CSDCall.m
dialRequest is invalid: %@
SFCoordinatedAlertRequest
Sharing
v28@?0@"NSError"8B16@"NSDictionary"20
v16@?0q8
CSDRouteManagerPreferredRouteChangedNotification
com.apple.telephonyutilities.callservicesd.routemanager
AVAudioSessionMediaServicesWereResetNotification
AVFoundation
PhoneCall
StarkCapability
lightweightPrimary
lightweightPrimaryParticipantID
validationSource
associationVoucher
Endorsement
Vouched
UUIDString
locallyCreated
initiator
localMember
remoteMembers
activeRemoteParticipants
activitySessions
reportData
conversationProviderIdentifier
activeLightweightParticipants
highlightIdentifier
stagedActivitySession
conversationID
timebase
com.apple.telephonyutilities.callservicesd.conversationmanager
@"CSDIDSGroupSessionProvider"64@?0@"NSString"8@"NSArray"16@"NSString"24@"IDSAccount"32@"NSObject<OS_dispatch_queue>"40B48@"TUConversationMember"52B60
@"CSDConversation"136@?0@"NSObject<OS_dispatch_queue>"8@"NSUUID"16@"NSUUID"24@"CSDIDSGroupSession"32@"NSUUID"40B48@"TUConversationMember"52@"TUHandle"60@"NSSet"68@"NSSet"76@"NSSet"84@"NSSet"92@"TUConversationActivity"100@"TUConversationLink"108@"TUConversationReport"116B124Q128
B72@?0@"NSData"8@"IDSAccount"16@"NSSet"24@"TUConversationMember"32@"NSDictionary"40^@48@?<v@?>56@"TUConversationProvider"64
@"NSSet"16@?0@"TUConversationProvider"8
@"NSSet"8@?0
@"TUHandle"8@?0
@"TUHandle"16@?0@"TUConversationProvider"8
self-token:
token:
v32@?0@"CSDMessagingConversationMessage"8@"NSData"16@"NSError"24
v24@?0@"TUConversationLinkDescriptor"8@"NSError"16
v24@?0@"TUConversationLink"8@"NSError"16
v132@?0@"NSUUID"8@"NSUUID"16@"NSUUID"24B32@"TUConversationMember"36@"TUHandle"44@"NSArray"52@"NSArray"60@"NSArray"68@"NSArray"76@"TUConversationLink"84@"TUConversationReport"92@"NSArray"100@"NSString"108@"CSDMessagingConversationActivitySession"116Q124
v32@?0@"NSUUID"8@"CSDConversation"16^B24
v32@?0@"CSDMessagingEncryptedConversationMessage"8@"CSDLetMeInRequestorKeyAgreement"16@"NSError"24
v24@?0@"TUVoucher"8@"NSError"16
SHAREPLAY_INCOMPATIBLE_MESSAGE
SHAREPLAY_INCOMPATIBLE_TITLE
Failed to find conversation with activitySession
SharePlay not allowed
v24@?0@"NSSet"8@"NSError"16
v16@?0@"IDSGroupSessionParticipantUpdate"8
Invitation
Upgrade
AddMember
BlobRecoveryRequest
BlobRecoveryResponse
RespondedElsewhere
AddActivitySession
Decline
LetMeInRequest
LinkCreated
NicknameUpdated
EncryptedConversationMessage
LetMeInDelegation
LetMeInDelegationResponse
LetMeInResponse
RemoveMember
RemoveActivitySession
RequestVideoUpgrade
UpdateActivity
LinkInvalidated
AddLightweightMember
LinkChanged
UpdateActivityImage
GuestModeUpdated
Endorse
AddHighlight
RemoveHighlight
UpdateJoinedMetadata
ParticipantUpdated
RegisterMessagesGroupUUID
tokenPrefixedURI
unsafeData
encryptedData
This call's call history identifier is nil
CHRecentCall_CSD.m
!(call_category == %@ && service_provider == %@)
voip
com.apple.developer.networking.networkextension
app-push-provider
protoWantsVideo
OBSOLETE_protoMomentsAvailable
protoSenderMuteUplink
protoShouldSuppressInCallUI
protoMomentsV2Available
protoUpgradeSessionUUID
B16@?0@"TURoute"8
<%@ %p category=%@ mode=%@>
v32@?0@"TURoute"8Q16^B24
v24@?0@"TURoute"8^B16
com.apple.private.alloy.facetime.audio
applicationContext
activityIdentifier
activityContext
updatedDateEpochTime
fallbackApplicationName
activityMetadata
isSystemActivity
timestampAsTimeIntervalSinceReferenceDate
fromHandle
handleType
notificationStyles
faceTimeAudioAvailable
faceTimeVideoAvailable
00000000-0000-0000-0000-000000000000
com.apple.telephonyutilities.callservicesd.incomingcallfilter
@"CXCallDirectoryStore"8@?0
q24@?0@"NSString"8@"NSString"16
%ld%@
callerId
generatorID
generatorVersion
CSDIDSSession.m
-[CSDIDSSession init]
<%@ %p %@>
UUID=%@
name
protoPersonNameComponents
suggestedName
label
companyName
mapName
location
contactName
contactLabel
callDirectoryLabel
callDirectoryLocalizedExtensionContainingAppName
callDirectoryExtensionIdentifier
contactIdentifiers
com.apple.telephonyutilities.callservicesd.useractivitycommunicator
announcements
GondolaLinkOverrideBaseURL
com.apple.private.alloy.phone.auth
-[CSDIDSGroupSession addMembers:toExistingMembers:activeParticipants:activitySessions:link:otherInvitedHandles:report:invitationPreferences:requiredCapabilities:messagesGroupUUID:messagesGroupName:addingFromLetMeIn:triggeredLocally:highlightIdentifier:stagedActivitySession:avMode:]
v24@?0@"CSDClient"8@"<TUCallServicesXPCClient>"16
com.apple.telephonyutilities.callservicesdaemon.callstatecontroller
7UhDrmrZozgwO+3AgUbHxw
%@-%d
B16@?0@"CSDClient"8
NRPairedDeviceRegistry
NanoRegistry
282F1EE6-A144-4106-AFFB-2BDB5B59FD0D
com.apple.telephonyutilities.callservicesdaemon.voicemailcallended
v32@?0@"NSString"8Q16^B24
callsToHold
callsToUnhold
callsToDisconnect
v16@?0@"TUCall"8
-[CSDCallStateController dialWithRequest:reply:]
-[CSDCallStateController dialWithRequest:displayContext:]
-[CSDCallStateController answerCallWithRequest:]
-[CSDCallStateController holdCallWithUniqueProxyIdentifier:]
-[CSDCallStateController unholdCallWithUniqueProxyIdentifier:]
-[CSDCallStateController requestVideoUpgradeForCallWithUniqueProxyIdentifier:]
-[CSDCallStateController disconnectCallWithUniqueProxyIdentifier:]
-[CSDCallStateController groupCallWithUniqueProxyIdentifier:withOtherCallWithUniqueProxyIdentifier:]
-[CSDCallStateController ungroupCallWithUniqueProxyIdentifier:]
-[CSDCallStateController swapCalls]
-[CSDCallStateController playDTMFToneForCallWithUniqueProxyIdentifier:key:]
-[CSDCallStateController disconnectCurrentCallAndActivateHeld]
-[CSDCallStateController disconnectAllCalls]
-[CSDCallStateController setTTYType:forCallWithUniqueProxyIdentifier:]
-[CSDCallStateController pullRelayingCallsFromClient]
-[CSDCallStateController pushRelayingCallsToHostWithSourceIdentifier:]
-[CSDCallStateController pullCallFromClientUsingHandoffActivityUserInfo:reply:]
-[CSDCallStateController sendMMIOrUSSDCodeWithRequest:]
-[CSDCallStateController setUplinkMuted:forCallWithUniqueProxyIdentifier:]
-[CSDCallStateController setDownlinkMuted:forCallWithUniqueProxyIdentifier:]
-[CSDCallStateController setIsSendingVideo:forCallWithUniqueProxyIdentifier:]
-[CSDCallStateController setMixesVoiceWithMedia:forCallWithUniqueProxyIdentifier:]
-[CSDCallStateController setSharingScreen:forCallWithUniqueProxyIdentifier:]
-[CSDCallStateController pushHostedCallsToDestination:]
-[CSDCallStateController pullHostedCallsFromPairedHostDevice]
-[CSDCallStateController sendHardPauseDigitsForCallWithUniqueProxyIdentifier:]
-[CSDCallStateController updateCallWithProxy:]
-[CSDCallStateController enteredForegroundForCallWithUniqueProxyIdentifier:]
-[CSDCallStateController willEnterBackgroundForAllCalls]
-[CSDCallStateController enteredBackgroundForAllCalls]
-[CSDCallStateController setRemoteVideoPresentationSizeForCallWithUniqueProxyIdentifier:size:]
-[CSDCallStateController setRemoteVideoPresentationStateForCallWithUniqueProxyIdentifier:presentationState:]
-[CSDCallStateController setScreenShareAttributesForCallWithUniqueProxyIdentifier:attributes:]
-[CSDCallStateController setSharingScreen:attributes:forCallWithUniqueProxyIdentifier:]
-[CSDCallStateController setBluetoothAudioFormatForCallWithUniqueProxyIdentifier:bluetoothAudioFormat:]
-[CSDCallStateController shouldSuppressInCallStatusBar:]
-[CSDCallStateController shouldAllowRingingCallStatusIndicator:]
v24@?0@"NSUserActivity"8@"NSError"16
-[CSDCallStateController activateInCallUIWithActivityContinuationIdentifier:]
-[CSDCallStateController joinConversationWithRequest:]
-[CSDCallStateController setCurrentAudioInputDeviceToDeviceWithUID:]
-[CSDCallStateController setCurrentAudioOutputDeviceToDeviceWithUID:]
-[CSDCallStateController localRoutesByUniqueIdentifier:]
-[CSDCallStateController pairedHostDeviceRoutesByUniqueIdentifier:]
-[CSDCallStateController pickLocalRouteWithUniqueIdentifier:shouldWaitUntilAvailable:]
-[CSDCallStateController pickPairedHostDeviceRouteWithUniqueIdentifier:shouldWaitUntilAvailable:]
-[CSDCallStateController containsRestrictedHandle:forBundleIdentifier:performSynchronously:reply:]
-[CSDCallStateController policyForAddresses:forBundleIdentifier:reply:]
-[CSDCallStateController willRestrictAddresses:forBundleIdentifier:reply:]
-[CSDCallStateController shouldRestrictAddresses:forBundleIdentifier:performSynchronously:reply:]
-[CSDCallStateController isUnknownAddress:normalizedAddress:forBundleIdentifier:reply:]
-[CSDCallStateController filterStatusForAddresses:forBundleIdentifier:reply:]
B24@?0@"TUCall"8@"NSDictionary"16
com.apple.telephonyutilities.callservicesd.voipapplicationcontroller
com.apple.callkit.networkextension.voip
com.apple.networkextension.voip.launch
com.apple.telephonyutilities.callservicesdaemon.voip
com.apple.pushkit.launch.voip
com.apple.telephonyutilities.callservicesd.csdvoipapplicationcontroller.daily
bundleIDs
CSDVoIPApplicationKillCounts
com.apple.telephonyutilities.callservicesdaemon.voip.push
com.apple.telephonyutilities.callservicesdaemon.voip.push.development
v24@?0@"BSProcessHandle"8@"NSError"16
 identifier=%llu
 handle=%@
 hasAVCData=%@
 isMuted=%d
 isMomentsAvailable=%d
 streamToken=%ld
 screenToken=%ld
 captionsToken=%ld
 avcIdentifier=%@
 capabilities=%@
 isAudioPaused=%d
 isRemoteAudioEnabled=%d
 isRemoteVideoEnabled=%d
 isLightweight=%d
 isLocalAccountHandle=%d
 association=%@
 isGuestModeEnabled=%d
 senderCorrelationIdentifier=%@
<%@: %p %@>
object=%@ processIdentifier=%d processName=%@ processBundleIdentifier=%@
fallbackURL
supportsContinuationOnTV
title
subtitle
image
preferredBroadcastingAttributes
sceneAssociationBehavior
kLastIDSFirewallVersionDefaultsKey
unique_id != %@
v24@?0@"CHHandle"8^B16
com.apple.telephonyutilities.callservicesd.conversationmanagerxpcserver
com.apple.telephonyutilities.callservicesdaemon.conversationmanager
CSDConversationManagerClientsShouldConnectNotification
-[CSDConversationManagerXPCServer createActivitySession:onConversationWithUUID:]
v16@?0@"TUConversationActivitySession"8
-[CSDConversationManagerXPCServer setUsingAirplay:onActivitySession:onConversationWithUUID:]
Conversation is not associated with a Messages group
No messages group details provider available
v24@?0@"CSDClient"8@"<TUConversationManagerXPCClient>"16
com.apple.telephonyutilities.callservicesd.callprovidermanager
Cannot launch app for dial request with a system provider: %@
Cannot launch app for invalid dial request: %@
NSSet<NSString *> *_INSupportedIntentsByExtensions(NSArray<LSPlugInKitProxy *> *__strong, NSError *__autoreleasing *)
CSDCallProviderManager.m
INSupportedIntentsByExtensions
void *IntentsLibrary(void)
v52@?0@"NSUUID"8B16B20B24@"NSUUID"28@"TUHandle"36@"NSString"44
incomingCallRaiseToAnswerEnabledKey
CMGestureManager
CoreMotion
v24@?0@"CSDIDSTransport"8@"NSDictionary"16
SBSLaunchApplicationWithIdentifier
SpringBoardServices
access-calls
modify-calls
modify-status-bar
access-call-capabilities
modify-call-capabilities
access-call-history
modify-call-history
access-moments
modify-moments
modify-usernotifications
modify-reports
override-activity-verification
register-gft-service
needs-ui-assertion
access-media-priorities
modify-activity-session-airplay
Entitlement check: In %s, client %@ lacks capability '%@'
CSDUserActivityConversationHandoffRecommendationChangedNotification
com.apple.telephonyutilities.suppressringtone
 activityType=%@
 dynamicIdentifier=%@
 activityUserInfo=%@
registeredProviders
registeredProvidersVersion
registeredRelayProviders
Ringtones
com.apple.LaunchServices.applicationUnregistered
com.apple.telephonyutilities.callservicesd.csdmomentsreportingsession
CSDMomentsReportingSession.m
-[CSDMomentsReportingSession init]
self
shouldTraceSignposts
@"AVCSessionParticipant"16@?0@"CSDConversationParticipant"8
@"AVCSession"32@?0@"NSString"8@"NSObject<NSCopying>"16@"NSObject<OS_dispatch_queue>"24
@"AVCScreenCapture"16@?0@"AVCScreenCaptureConfiguration"8
GKVoiceChatServiceErrorDomain
Stop called on a starting session
CSDAVCSessionError
avcKeySessionSentBytes
avcKeySessionReceivedBytes
CSDExternalIDSDualSession.m
<display_name>
CELLULAR_SETTINGS
prefs:root=MOBILE_DATA_SETTINGS_ID
WLAN_SETTINGS
WIFI_SETTINGS
prefs:root=WIFI
SETTINGS
prefs:root=General&path=DATE_AND_TIME
prefs:root=FACETIME&path=LOCATION&guid=%@
%s is unavailable, call another initializer instead.
-[CSDRelayConferenceConnection init]
CSDRelayConferenceConnection.m
 identifier=%@
 transport=%@
 isHost=%d
 isUsingBaseband=%d
 isAudioDisabled=%d
 receivedSuccessfulDidStart=%d
 isPreparedToStop=%d
<%@ %p>
    Are capabilities valid: %@
    Sender identity capabilities: %@
    Emergency callback capabilities: %@
    Thumper local device ID: %@
    Thumper local accounts: %@
    Thumper secondary accounts: %@
disabled
q24@?0@"CSDThumperAccount"8@"CSDThumperAccount"16
uniqueIdentifier
deviceType
protoCurrentlyPicked
protoGuest
protoSupportsRelay
AirPods
BeatsSolo
BeatsX
Powerbeats
BeatsStudio
HomePod
iMac
MacBook
MacMini
MacPro
Watch
HomePodStereoPair
iPadPro
PowerbeatsPro
BeatsSoloPro
AirPodsPro
Powerbeats4
HeadPods
BeatsX2
HomePodMini
HomePodMiniStereoPair
BeatsStudioBuds
BeatsFitPro
AirPods3
B620
B620StereoPair
B698
CSDConversationProviderManager
Already registered provider for identifier: %@
Did not register GFT Provider with identifier: %@
Pseudonym creation is not enabled
v24@?0@"RBSProcessHandle"8@"RBSProcessExitContext"16
v16@?0B8B12
shouldSuppressInCallUI
activeParticipants
addedMembers
isLetMeInApproved
encryptedMessage
letMeInDelegationHandle
letMeInDelegationUUID
enclosedEncryptedType
invitationPreferences
removedMembers
joinedMetadata
requestBlobRecoveryOptions
generateDescriptorVersionSum
@16@?0@"NSDictionary"8
Default
IDSMessageProxy
Voicemail
Reporting
leaveReason
Unspecified
Handoff
CSDFaceTimeIMAccountCallerIDChangedNotification
lastKnownFaceTimeCallerID
com.apple.telephonyutilities.callservicesd
com.apple.telephonyutilities.callservicesd.facetimeimaccount
v16@?0^{__CFDictionary=}8
ambiguityState
swappable
mergeable
holdAllowed
addCallAllowed
takingCallsPrivateAllowed
hardPauseAvailable
endAndAnswerAllowed
holdAndAnswerAllowed
sendToVoicemailAllowed
protoUUID
localizedShortName
accountUUIDString
localizedServiceName
v32@?0@"NSString"8@"NSString"16@"NSDictionary"24
nilCallProvider
CallUUID
Unknown Dial Failure for Conversation
Unknown Call Failure for Conversation
Mediaserverd crash
No AVC error reason given
AVC session did not start
AVC audio client did not start
AVC blob recovery timeout
RelayFailedConferenceFailed
RelayFailedNoRelayDevice
ComponentCrashed
RelayFailedRelayDeviceRelayNotEnabled
NoLocalLink
CallFailed
DialFailed
AccountUnsupported
NetworkUnsupported
ProviderCrashed
MediaStartFailed
MediaServerCrashed
NoReason
Disconnected
ReceiverDeclined
LocalUnanswered
RemoteUnanswered
InitiatorCancelled
CouldNotConnect
RemoteEnded
NoLocalData
NoRemoteData
FailedToOpenSocket
LocalHangup
RemoteHangup
NoLocalNetwork
MissingRemoteInfo
NoRemoteNetwork
EncryptionSetupFailed
EncryptionFailed
DecryptionFailed
SystemInternalError
NoRemotePackets
ReceiverBusy
SystemUnsupported
QRConfigurationError
SKEConfigurationError
QRAllocbindTimeout
QRUnallocbindTimeout
QRConnectedTimeout
AcceptedElsewhere
DeclinedElsewhere
AliasDeactivated
AllocatorParseError
AllocatorInvalidField
AllocatorInternalError
AllocatorServerBusy
AllocatorMissingKey
AllocatorBadSignature
AllocatorRateLimitExceeded
AllocatorUnknownError
InitialMkMDistributionFailure
JoinNotificationDistributionFailure
QRAllocateRequestTimeout
IdleClient
ParticipantBlockedListed
AllocatorBlockUPlusOneSession
AbortedByCaller
AbortedByReceiver
ReceiverOffline
HostHangup
Shutdown
LocalNetworkUnsupported
RemoteNetworkUnsupported
SystemComponentCrashed
CouldNotInvite
CouldNotRespond
CouldNotCancel
CouldNotSendUpdate
CouldNotSendAVMessage
CallLocalUnanswered
CallRemoteUnanswered
CallDeclinedElsewhere
CallFiltered
RemoteUserDoesNotExist
RemoteUserIncompatible
LocalUserIncompatible
CallerAccountInvalid
CallerAccountNeedsUpdate
Call Failure
com.apple.telephonyutilities.callservicesdaemon.reportingcontroller
B16@?0@"<CSDCallFilter>"8
shouldCheckAllGenerators
generatorDescriptors
generateDescriptorInfos
A910C931-A590-41EF-A783-910BFBE500B3
com.apple.telephonyutilities.callservicesd.callhistorymanager
outgoingLocalParticipantUUID == %@
v32@?0@"<CSDCallHistoryManagerDelegate>"8@"NSObject<OS_dispatch_queue>"16^B24
CSDIDSDeviceListChangedNotification
CSDIDSServiceCallerIDChangedNotification
CSDIDSServiceQueryListenerID
CSDIDSService.m
All CSDIDSService subclasses must override +sharedInstance
com.apple.telephonyutilities.callservicesd.%@
    devices: %@
    availableOutgoingRelayCallerIDs: %@
    defaultPairedDevice: %@
    pairedDevice: %@
    telephonyCapableDeviceExists: %@
    relayCapableDeviceExists: %@
v32@?0@"TUHandle"8@"NSDate"16^B24
v24@?0@"IDSFirewall"8@"NSError"16
", "
pairedDeviceUniqueIDOverride
AudioAccessory
v24@?0@"CSDIDSTransport"8@"NSData"16
com.apple.callservicesdaemon.csdmomentscontroller
PreserveFaceTimePhotosFiles
CSDMomentsControllerStartedRemoteCaptureNotification
CSDMomentsControllerStartedLocalVideoCaptureNotification
CSDMomentsControllerStoppedLocalVideoCaptureNotification
CSDMomentsControllerMetadataKeyTransactionID
heic
lp_image
lp_movie
com.apple.telephonyutilities.callservicesd.csdmomentscontroller
@"<CSDAVCMoments>"40@?0q8@"NSString"16@"<CSDAVCMomentsDelegate>"24@"NSObject<OS_dispatch_queue>"32
com.apple.telephonyutilities.callservicesdaemon.momentscontroller
Could not start request for mediaType: %d streamToken: %ld. -[AVCMoments newRequestWithMediaType:] returned nil.
Could not start request for mediaType: %d streamToken: %ld. No session has been registered for requested stream token.
Asked to start moments request with invalid media type %d
Asked to start moments request but moments is disabled by server bag
-[CSDMomentsController startRequestWithMediaType:forStreamToken:requesteeID:reply:]
Could not find request for transaction ID %@
-[CSDMomentsController endRequestWithTransactionID:reply:]
-[CSDMomentsController registerStreamToken:requesterID:remoteIDSDestinations:remoteMomentsAvailable:reply:]
-[CSDMomentsController unregisterStreamToken:reply:]
v24@?0@"CSDClient"8@"<TUMomentsControllerXPCClient>"16
v16@?0@"NSString"8
v24@?0@"NSString"8@"NSError"16
@"TUICFQueryResult"24@?0@"NSString"8@"NSString"16
B20@?0@"TUCallProvider"8B16
B16@?0@"CSDCall"8
FACETIME
com.apple.telephonyutilities.callservicesd.TinCan
Not allowing requested %@ because user intent could not be reasonably validated to gain access to the microphone while in the background.
v16@?0@"CXCallSource"8
com.apple.Superbox
We have an active XPC connection but no corresponding CSDClient
CSDClientManager.m
B24@?0@8@"NSDictionary"16
com.apple.TUCallCenter
CSDCallDataSource.m
All CSDCallDataSource subclasses must override +callClass
com.apple.backboard.proximity.changed
v32@?0@"<CSDProximitySensorObserverDelegate>"8@"NSObject<OS_dispatch_queue>"16^B24
CSDVoIPApplicationMessageTransportTypeUnknown
CSDVoIPApplicationMessageTransportTypeNetworkExtension
CSDVoIPApplicationMessageTransportTypePushKitVoIP
<%@ %p type=%d
 socket=%d
 destination=%@
 initialLinkType=%lu
 remoteDestination=%@
 remoteDeviceUniqueIdentifier=%@
callservicesd launched
join
viewCall
requestScreenShare
continueActivity
viewLinkDetails
continueHandoff
let-me-join
FaceTime
Phone
com.apple.TVWatchList
com.apple.TVMusic
com.apple.mobilenotes
callBack
sendMessage
deviceFamily
style
displayScale
scaleFactor
originalWidth
originalHeight
isWindowed
com.apple.InCallService
MPVoicemailDeleteMessageBulletinBoardActionIdentifier
MPCallBulletinBoardActionIdentifier
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
GeneratorDescriptor
RTCCSDRelayDeviceRoute
AnyAudioInterruptionProvider
AVAudioSessionInterruptionProvider
CSDCallCenterObserver
@?16@0:8
T@"<CSDCallCenterObserverDelegate>",N,&
triggers
T@"<CSDCallContainer>",N,R
@"<CSDCallCenterObserverDelegate>"16@0:8
v24@0:8@"<CSDCallCenterObserverDelegate>"16
@?<v@?@"CSDCall"Q>16@0:8
v24@0:8@?<v@?@"CSDCall"Q>16
@"<CSDCallContainer>"16@0:8
@"TUConversation"24@0:8@"TUCall"16
CSDCallCenterObserverDelegate
v32@0:8@"<CSDCallCenterObserver>"16@"CSDCall"24
v24@0:8@"<CSDCallCenterObserver>"16
CSDConversationInvitationResolving
B40@0:8@16@24@32
B32@0:8@"TUConversation"16@"TUHandle"24
B40@0:8@"TUConversation"16@"TUHandle"24@"NSSet"32
CSDPendingMembershipTrackerMessenger
v56@0:8@16@24@32@40@48
v52@0:8@16@24@32@40B48
v56@0:8@"NSSet"16@"CSDConversation"24@"TUConversationLink"32@"NSUUID"40@"TUConversationMember"48
v52@0:8@"NSSet"16@"CSDConversation"24@"NSUUID"32@"TUConversationMember"40B48
CSDPendingMembershipTrackerDelegate
v48@0:8@16@24@32@40
v40@0:8@16@24@32
v48@0:8@"CSDPendingMembershipTracker"16@"TUConversationMember"24@"CSDConversation"32@"NSData"40
v40@0:8@"CSDPendingMembershipTracker"16@"TUConversationMember"24@"NSUUID"32
CSDDirtyCallManager
@?<v@?@"CSDCall">16@0:8
v24@0:8@?<v@?@"CSDCall">16
v24@0:8@"CSDCall"16
CSDConversationLinkManagerDelegate
v32@0:8@"CSDConversationLinkManager"16@"NSArray"24
CSDScreenSharingActivityManagerDelegate
v36@0:8@16@24B32
v36@0:8@"CSDScreenSharingActivityManager"16@"<TUScreenShareAttributes>"24B32
v36@0:8@"CSDScreenSharingActivityManager"16@"NSError"24B32
CSDVoucherManager
v40@0:8@16@24@?32
v40@0:8@"NSData"16@"TUHandle"24@?<v@?@"TUVoucher"@"NSError">32
v32@0:8@"TUVoucher"16@?<v@?B@"NSError">24
CSDNeighborhoodActivityConduitDelegate
v48@0:8@16@24q32@?40
v24@0:8@"TUNearbyDeviceHandle"16
v48@0:8@"TUConversation"16@"TUNearbyDeviceHandle"24q32@?<v@?B@"NSError">40
_TtC13callservicesd28AnyAudioInterruptionProvider
boxed
_beginOrUpdate
_end
_resetState
_activeDescriptor
Sending updated policy for %s: %{bool}d
Sending policy infos: %s
No policy info to send, skipping
CSDTinCanIDSProviderDelegate
@40@0:8@16@24@32
isAccountActive
isDestinationValid
destinationsGenerator
outgoingSessionProviderGenerator
outgoingChatGenerator
contactsDataProvider
@"<CSDIDSChat>"36@?0@"CSDExternalIDSDualSession"8@"TUHandle"16B24@"NSDictionary"28
callservicesd.TinCanIDSProviderDelegate
init(capabilities:queue:)
CSDMessagingCallMessage could not be read
Received TinCan message: %@
TinCan message was of unknown type %@: %@
Could not find chat for set muted action  %@. All chats: %@
Sending TinCan message for sender mute uplink: %@
Failing action: %@ since its not relaying
Could not find chat for set relaying action  %@. All chats: %@
Cannot start TinCan IDS chat using service %@ because account is not active
Cannot start TinCan IDS chat using handle because IDS destination was invalid
Created TinCan session to destinations %@ with options: %@
Starting TinCan IDS chat: %@
v20@?0@"NSArray"8B16
Tried to make an outgoing call when we already had a ringing call with the same destination
TinCan IDS chat was canceled
SenderMuteUplink
Server bag does not support quick relay since current version is unspecified
qr-invitations-enabled
Server bag does not support quick relay since minimum version is unspecified
quickRelaySupported
TB,N,R
CSDUserIntentManager
v24@0:8@16
privateAPIValidator
$__lazy_storage_$_applicationStateValidator
donatedIntentValidator
backgroundBluetoothAccessValidator
mediaRemoteStateValidator
Validating intent for call source: %@ callSourceHasReasonableUserIntent: %@ isUserIntentConfident: %@ (%@)
Playing alert for background mic access: %@
callservicesd.UserIntentManager
init()
Enabling file protection class for conversation persistence storage
Cannot cast value: %@ to type: %@
CSDEmergencyCallbackCapabilities
_emergencyCallbackPossible
emergencyCallbackCapabilitiesDidChange
preventDetachAfterEmergencyCallTimeoutDeterminationHandler
dispatchAfterHandler
dispatchCancelHandler
callCenterObserver
preventDetachAfterEmergencyCallTimeoutWorkItem
emergencyCallbackPossible
callservicesd.EmergencyCallbackCapabilities
v24@?0@"CSDCall"8Q16
Starting prevent detach after emergency call timer with timeout of %d seconds. Marking emergency callback possible
Prevent detach after emergency call timer fired. Marking emergency callback as no longer possible
_CTServerConnectionCarrierSettingsCopyValue - encountered error %d %d
PreventDetachAfterEmergencyCallTimer
@?<v@?>16@0:8
v24@0:8@?<v@?>16
_TtC13callservicesdP33_7D766AEB715565F6893650EFEF7EA3D422OneShotCancellationBox
lock
state
CSDCarPlayManager
carSessionQueue
carSessionStatus
carPlayScreenConnectionChanged
isCarPlayConnected
com.apple.calls.queues.carSessionStatus
v12@?0B8
CSDPowerAssertionManager
powerAssertion
powerAssertionDescription
acquirePowerAssertionHandler
releasePowerAssertionHandler
com.apple.telephonyUtilities.callservicesd.HomePodRelay
B16@?0@"TUCall"8
PowerAssertionManager: Call relayed to HomePod, call=%@
releasing PowerAssertion %@
acquired PowerAssertion %@
_TtC13callservicesd32ConversationLinkSyncMessageQueue
intervalCalculator
actionByType
ConversationLinkSync: enqueue action {messageType: %@, destinations: %@, mode: %@, hasExisting: %@}
ConversationLinkSync: Scheduled action {interval: %@}
_TtC13callservicesd32AudioInterruptionProviderFactory
AudioAccessory5,1
AudioAccessory6,1
callservicesd.LetMeInRequestorKeyAgreement
CSDLetMeInRequestorKeyAgreement
B16@0:8
v16@0:8
localKey
requestKey
responseKey
isExhausted
Failed to derive let me in requestor's public key from the locally-generated private key.
Failed to retrieve combined data from encrypted LMI response.
CSDProviderDisplayMonitor
@28@0:8@16i24
provider
displayLayoutMonitor
$__lazy_storage_$_processObserver
isVisible
callservicesd.ProviderDisplayMonitor
com.apple.telephonyutilities.callservicesd.providerdisplaymonitor
HoldMusicDescriptor()
callservicesd
silenceUnknownCallersEnabled
silenceUnknownFaceTimeCallersEnabled
maxJunkLevel
Q16@0:8
v24@0:8Q16
v24@0:8@?16
callContainerClosure
notificationCenter
T@"<CSDCallCenterObserverDelegate>",N,W,Vdelegate
TQ,N,Vtriggers
Could not retrieve conversation from notification %@
Could not retrieve call with conversation group UUID %@
Received notification %@ for unrecognized trigger
Call not specified in notification %@
TQ,N
_TtC13callservicesd33GroupFaceTimeNotificationProvider
conversationManager
ftNetworkSupport
invitationResolver
notificationIdentifiersByConversationUUID
carPlayNotificationIdentifiersByConversationUUID
faceTimeNotificationCenter
conversationServerBag
facetimeIsShowingOnScreen
openURL
unlockAndOpenSensitiveURL
localizeConversationName
localizeHandleName
localizeHandleNameWithConversation
notificationType
categories
replace
removeNotification
updateBadgeValue
Unknown notification response received
continueActivity action for notification: %@
Ignoring notification response %@ because a pseudonym is missing/could not be typecasted in userInfo
Failed to construct FaceTime app URL to view link details
Launching FaceTime for notification response via url %@
handoffDynamicIdentifier
Ignoring notification response %@ because a handoff dynamic identifier is missing/could not be typecasted in userInfo
MAYBE_NICKNAME_%@
TelephonyUtilities
group-facetime-invite
group-facetime-participant-join
ACCEPT_SHARE_SCREEN_REQUEST
group-facetime-participant-screenshare-request
group-facetime-moments-request
group-facetime-let-me-in-approved
VIEW_LINK_DETAILS
group-facetime-let-me-in-request-pre-conversation
group-facetime-handoff-eligibility
Replacing handoff eligible nearby notification from old conversation UUID %@ to new conversation UUID %@
conversation-handoff-nearby
Not posting handoff nearby notification for conversation %@ because it did not have handoff eligibility
FACETIME_AUDIO_SERVICE
MOVE_CALL_TO_THIS
Posting notification request %@ for handoff eligible conversation UUID %@ nearby
FACETIME_SERVICE
Not posting user notification for handoff eligible conversation %@ because there's already a local non-waiting conversation
Ignoring adding notification request %@ since valid network is not reachable
Handoff eligibility changed for %@
Removing handoff eligible nearby notification for conversation UUID %@
In response to conversations changed, we determined that we should post an invite notification for conversation UUID %@
Posting notification request for conversation UUID %@ with content %@
JOIN_FACETIME_CALL
GFT_PARTICIPANT_REQUESTING_SHARE_SCREEN
Removing handoff notification as there are no handoff-eligible conversations left
No notification for conversation UUID %@
Tracked pending member changed, but not a locally owned link -- ignoring %@ %@
Failed to determine conversation link for pending member notification with conversation %@ and conversationLink %@
Not posting pending member notification becaue Group FaceTime is not supported (GreenTea device or doesn't support multiway)
GFT_LET_ME_IN_REQUESTED
authorizationRequest-
v16@?0@"NSArray"8
Time since LMI initiated for member %@ is %.2f seconds
Skip posting pending member notification because hasJoined: %{BOOL}d, ignoreLMIRequests: %{BOOL}d for conversation: %@
Replacing notification id %@ with content %@
Not posting LMI approval notification because the conversation is currently showing on screen
GFT_LET_ME_IN_GRANTED
Removing invite notification for conversation UUID %@ with notification identifier
Conversation UUID %@ had a state change, and we determined that we should post an invite notification
Handling notification for pending message did receive invite: %@
Did not find expected pending chat information
momentsStartedRemoteCapture received invalid notification object: %@
could not find conversation for notification stream token: %@
FACETIME_PHOTO_SUCCESS_REMOTE_CAPTURE
FACETIME_PHOTO_NOTIFICATION_TITLE
could not find participant for participant in conversation: %@ for requesterID: %@
Handle momentsStartedRemoteCapture in-app
could not find conversation or call for notification stream token: %@
com.apple.facetime
callservicesd/GroupFaceTimeNotificationProvider.swift
_TtC13callservicesd29SoundDescriptorActionResolver
deviceIsHomePod
playersForSounds
Error creating audio player for %@ sound: %@
CSDFaceTimeLivePhotosIDSService
@16@0:8
sharedInstance
T@"CSDFaceTimeLivePhotosIDSService",N,R
com.apple.private.alloy.facetime.lp
remoteParticipantHandles
activeParticipantHandles
notificationProviderIdentifier
T@"NSString",N,R
T@"NSArray",N,C
T@"NSString",N,C
_TtC13callservicesd33AVAudioClientInterruptionProvider
activeDescriptor
Setting audio session properties: %@
Setting audio mixing: %@
Setting mode to A2DP: %@
Starting audio session
v20@?0B8@"NSError"12
Setting descriptor to be active since it requested an expedited activation: %@
Failed to start audio session: %@
Successfully started audio session
kAUVoiceIOProperty_OperationMode
kAUVoiceIOProperty_MediaPlaybackOnExternalDevice
kMXSessionProperty_PrefersToPlayDuringWombat
kMXSession_HostProcessAttributionKey_BundleID
kMXSession_HostProcessAttributionKey_AuditToken
kMXSessionProperty_HostProcessAttribution
kMXSessionProperty_CreateSpeakerDevice
kMXSessionProperty_InitiationDescription
kMXSessionProperty_ClientPriority
kMXSessionProperty_AudioMode
kMXSessionProperty_AudioCategory
CSDFaceTimeMultiwayIDSService
T@"CSDFaceTimeMultiwayIDSService",N,R
com.apple.private.alloy.facetime.multi
_TtC13callservicesd33ConversationLinkSyncIDSInteractor
delegate
knownDestinations
ConversationLinkSync: Ignoring devicesChanged signal from IDSService because destinations are the same {service: %@}
callservicesd.ConversationLinkSyncIDSInteractor
ConversationLinkSync: Incoming sync message, invalid fromID -- dropping {fromID: %@}
ConversationLinkSync: Incoming sync message, invalid destinationID -- dropping {fromID: %@}
ConversationLinkSync: Incoming sync message, unknown destinationID -- dropping {destinationID: %@, self.service.allAliases: %@}
ConversationLinkSync: Incoming sync message, invalid data -- dropping {data: %@}
ConversationLinkSync: Incoming sync message, data no protobuf -- dropping
ConversationLinkSync: Incoming sync message, processing {fromID: %@, destinationID: %@}
ConversationLinkSync: Incoming sync message, type was unknown {syncMessage: %@}
ConversationLinkSync: Incoming sync message, type was recover but message was missing recoverMessage {syncMessage: %@}
ConversationLinkSync: Incoming sync message, type was update but message was missing updateMessage {syncMessage: %@}
ConversationLinkSync: Incoming sync message, type was checkIn but message was missing checkInMessage {syncMessage: %@}
_TtC13callservicesd34AVAudioSessionInterruptionProvider
audioSession
isLocal
_activationContext
Setting audio activation context: %@ for provider %@
Error setting audio activation context to %@ for provider %@: %@
Successfully set audio activation context
Error overriding output audio port to AVAudioSessionPortOverrideNone: %@
Deactivating and setting audio interruption priority: %ld for provider %@
Error deactivating and setting audio interruption priority to %ld for provider %@: %@
Successfully deactivated and set audio interruption priority
Setting audio interruption priority: %ld for provider %@ category %@ mode %@
Error setting audio interruption priority to %ld for provider %@: %@
Successfully set audio interruption priority
Setting audio active: %@ options: %ld for provider %@ category %@ mode %@
Error setting audio active to %@ for provider %@: %@
Did not deactivate audio successfully, but error code was %d so assuming success
Successfully set audio active: %@ options: %ld
Requesting audio session be attributed to %@
Requesting audio session enable audio during Wombat
Setting audio category: %@ mode: %@ for provider %@
Error setting audio category to %@ and mode to %@ for provider %@: %@
Successfully set audio mode
.foregroundRunning
.backgroundRunning
.backgroundSuspended
CSDProcessObserver
@32@0:8@16@24
i16@0:8
processInfoByBundleIdentifier
applicationMonitor
processStateChanged
processStateChangedWithBundleID
currentProcessIdentifier
Ti,N,R
T@?,N,C
v16@?0@"NSDictionary"8
callservicesd.ProcessObserver
v28@?0@"NSString"8i16q20
CSDProcessObserverProtocol
@?<v@?iq>16@0:8
v24@0:8@?<v@?iq>16
@?<v@?@"NSString"iq>16@0:8
v24@0:8@?<v@?@"NSString"iq>16
@"NSArray"24@0:8@"NSString"16
@"NSDictionary"24@0:8@"NSString"16
v32@0:8@"NSString"16@?<v@?@"NSDictionary">24
_TtC13callservicesd28FaceTimeNotificationProvider
%@ does not handle response with identifier %@
Handling notification %@
Did not find expected pending chat uuid information
facetime-invite-first-unlock
FACETIME_%@_CALL_FIRST_UNLOCK_%@_BODY
FACETIME_CALL_FIRST_UNLOCK_TITLE_%@
callservicesd.FaceTimeNotificationProvider
CSDSharedConversationServerBag
d16@0:8
B24@0:8@16
fitnessPlusAppBundleID
fitnessPlusDaemonBundleID
activeParticipantPruningTimeout
TQ,N,R
sessionCleanupTimeout
greenTeaHandoffTimeout
AVCBlobRecoveryGracePeriod
AVCBlobRecoveryTimeout
rebroadcastTimeThreshold
activeParticipantRefreshDelay
automaticUpgradingEnabled
modernGFTEnabled
sharePlayVersionCheckEnabled
maxActiveParticipantFetchRetries
maxKickMemberRetries
linkPseudonymExpiry
inactiveLinkPseudonymExpiry
inactiveLinkCacheLimit
webNicknameLengthLimit
linkSyncRecoverFailureLimit
linkSyncRecoverTimeLimit
letMeInRequestNotificationTimeout
letMeInRequestRecoveryTimeout
activityIdentifierBundleIDMapping
T@"NSDictionary",N,R
idsFirewallCHExpiryTimeDays
idsFirewallBatchSize
handoffAudioDeviceTimeout
messageRetryMaxAttempts
messageRetryIntervalMillis
expanseConduitProxyEnabled
gftDowngradeToOneToOneAvailable
maxRemoteMirageParticipants
uPlusNDowngradeAvailable
neighborhoodActivityConduitTimeout
guestModeSupported
handoffUPlusOneLeaveTimeout
handoffUPlusOneLeaveDelay
activity-identifier-to-bundleIDs
Server bag does not have a value for %@, so returning the default one of %@ seconds.
Got %@ from server bag with a value of: %@
com.apple.tv.watch-together
com.apple.music.listenTogether
com.apple.notes.collaborate-activity
com.apple.Fitness
com.apple.fitcored.session
gftaas-pseudonyms-enabled-%@
guest-mode-supported
neighborhood-activity-conduit-timeout
qr-session-uPlusN-downgrade-available
max-remote-mirage-participants
qr-session-gft-downgrade-available
expanse-conduit-proxy-enabled
receive-message-retry-interval-millis
receive-message-retry-max-attempts
Couldn't find bundleID %@ in activityIdentifierMap %@
No bundleID specified, but fallback is specified
let-me-in-request-recovery-timeout
let-me-in-request-notification-timeout
link-sync-recover-time-limit
link-sync-recover-failure-limit
web-nickname-length-limit
inactive-link-cache-limit
inactive-link-pseudonym-expiry
link-pseudonym-expiry
qr-kick-member-retries
qr-active-participant-fetch-retries
shareplay-version-check-enabled
qr-session-supports-modern-gft
qr-session-ft-upgrade-enabled
qr-session-participant-refresh-delay
qr-session-rebroadcast-threshold
qr-session-avc-blob-recovery-timeout
qr-session-avc-blob-recovery-grace-period
greentea-handoff-timeout
qr-session-cleanup-timeout
qr-participant-prune-timeout
v32@0:8@16@24
routesDidChangeHandler
didPickRouteHandler
didDeselectAllRoutesHandler
supportsPrimaryCalling
hasRelayiCloudAccount
idsDeviceForIDSDeviceIdentifier
queue
nearbyDeviceMonitor
idsDeviceDestinationResolver
nearbyDeviceRoutes
activeRelayClientTransport
currentCallsSupportNearbyDevices
route: %@
Could not find route to pick for %@. All nearby device routes: %@
Updating activeRelayClientTransport to %@
Updating nearby device routes using devices: %@
Current calls do not support nearby devices (%@) or device doesn't support primary calling (%@)
Could not convert NearbyDevice to NearbyDeviceRoute: %@
filtering out device: %@
Error activating companion link client: %@
callservicesd.NearbyDeviceRouteProvider
callChanged
dirtyCallsArray
dirtyCallsSet
callservicesd.DirtyCallManager
Adding call %@ to dirty calls pool
Asked to dispatch drain the pool
Draining pool with dirty calls: %@
v16@?0@"CSDCall"8
CSDPendingMembershipTracker
messenger
storage
T@"<CSDPendingMembershipTrackerMessenger>",N,W,Vmessenger
T@"<CSDPendingMembershipTrackerDelegate>",N,W,Vdelegate
_TtC13callservicesd37MemoryPendingMembershipTrackerStorage
underlyingStorage
_TtC13callservicesdP33_29A092E378431E19BF8C7D5BE1CFB24A26SharedPendingMembershipBag
Removed group from pending membership tracker storage {underlyingStorage: %@}
Remoted info from pending membership tracker storage {underlyingStorage: %@}
Added info to pending membership tracker storage {underlyingStorage: %@}
No info matching local user action -- ignoring {uuid: %@, handle: %@}
Processing local user action for pending member {info: %@, action: %@, member: %@, conversation.groupUUID: %@}
Local user action for pending member attempted, disabled -- ignoring
No info matching remote user action -- ignoring {uuid: %@, handle: %@}
Processing remote user action for pending member {info: %@, action: %@, member: %@, from: %@, transactionUUID: %@, conversation.groupUUID: %@}
Client remote action does not match what we expect -- ignoring {sender: %@, from: %@, info.transactionUUID: %@, transactionUUID: %@}
Hosted remote action does not match what we expect -- ignoring {expectedDestinations: %@, from: %@, info.transactionUUID: %@, transactionUUID: %@}
Hosted remote action is from a kicked handle -- ignoring {kickedHandles: %@, from: %@, info.transactionUUID: %@, transactionUUID: %@}
Remote user action for pending member attempted, disabled -- ignoring
lmi-delegation-disabled
Issue storing delegated pending membership info -- aborting {error: %@}
Attempting to track delegated pending member, disabled -- ignoring
Neither a conversation nor a link with handles was specified -- ignoring
Issue storing pending membership info -- aborting {error: %@}
Track pending member, delegation disabled
Filtered in the following active handles from list of members eligible for link approval: %@
active handles: %@
members eligible for link approval: %@
Attempting to track pending member, disabled -- ignoring
No handed off info for device target for IDS proxying
New participant IDs: %s
New joinContext: %@
Lightweight primary: %s
Protobuf member: %@
Adding split-session target to member list of proxied update
Inspecting join context for target %@: %@
Asked to proxy IDS session group participant update
Ignoring IDS session group participant update coming from proxy target
_TtC13callservicesd15IDSMessageProxy
subject
target
buffer
proxiedMessageCount
buffering
B48@0:8@16@24@32@40
Sending RPC event: %s %s
IDS resource proxy: failed to read from resource URL. Error=%s
Unexpected error preserving %s as %s: %s
Existing IDS proxy timer found. Canceling it and making a new one.
Setting IDS proxy timeout of %ld seconds
Timing out IDS proxy
Cleaning up IDS proxy
Feature has been disabled by the server.
Creating IDS message proxy
IDS message proxy already exists
No handedoff info for device targeted for IDS proxying
Asked to proxy IDS resource at %s from %s, guid %{private,mask.hash}s
Ignoring message ID %{private,mask.hash}s, sender is our proxy target.
Asked to proxy IDS message from %s, guid %{private,mask.hash}s
_TtCC13callservicesd20CompanionLinkManager24AuthenticationController
clientsPendingAuthentication
v16@?0I8i12
v16@?0@"NSError"8
Started CompanionLink for device authentication
Failed to start CompanionLink for device authentication: %s
Successfully authenticated device %@
Error authenticating device: %s
v8@?0
Unable to prompt for password entry - no destination device!
PAIRING_CODE_ENTRY_MESSAGE
PAIRING_CODE_TITLE
PAIRING_CODE_ENTRY_HINT
PAIRING_CODE_ENTRY_ACCEPT_BUTTON
PAIRING_CODE_ENTRY_CANCEL_BUTTON
Failed to create CFUserNotification for password entry. Error: %s
User cancelled pairing entry
Received entered PIN %s
Prompting user for password for device %@
PAIRING_CODE_ENTRY_MESSAGE_FMT
CSDDuetDonater
v40@0:8@16@24Q32
maxDuration
unknownShortCallSignal
knownCallerSignal
junkCallSignal
linkCreatedSignal
silenceUnknownCallersEnabledObserver
callservicesd.DuetDonater
donate junkCallSignal event call=%@ error=%@
donate known caller mode event context=%@ error=%@
donate unknownShortCallSignal event call=%@ error=%@
donated call context data=%@ for call=%@
link created signal event error=%@
com.apple.telephonyUtilities.unknownShortCall
com.apple.telephonyUtilities.knownCallerMode
com.apple.telephonyUtilities.junkCallReceived
com.apple.facetime.call-link-created
com.apple.callservicesd.CompanionRpcErrorDomain
_TtC13callservicesd21CompanionRpcMessenger
<CompanionRpcDefinition: 
<CompanionEventDefinition: 
com.apple.callservicesd.idsProxyMessage
com.apple.callservicesd.policyInfoUpdated
com.apple.callservicesd.requestDisconnect
com.apple.callservicesd.joiningNotification
com.apple.callservicesd.contactInfoUpdate
com.apple.callservicesd.requestDeviceHandle
com.apple.callservicesd.activitySessionAvailable
com.apple.callservicesd.activitySessionNotAvailable
com.apple.callservicesd.cancelAddMember
com.apple.callservicesd.tvLaunched
com.apple.callservicesd.requestAddMember
MessageDictionary
Unknown; see NSUnderlyingErrorKey
Protobuf decoding failed
Protobuf encoding failed
Invalid message content
_TtC13callservicesd23EmptyDescriptorProvider
CSDCallController
callStateController
dataSources
dirtyCallManager
T@"CSDCallStateController",N,W,VcallStateController
callContainer
callservicesd.CallController
resolver
audioInterruptionProviderPool
ringtoneProvider
soundProvider
holdMusicProvider
discoveryModeProvider
deferredEndWorkItem
pendingExpeditedEndInterruptionUUIDs
endInterruptionDelay
mediaServicesWereResetObserver
audioSessionInterruptionObserver
audioController
callservicesd.CSDAudioController
callUUID: %@
Attempted to expedite deferred end interruption block prematurely, so pending the UUID %@
Expediting deferred end interruption work item
com.apple.telephonyutilities.callservicesd.audiocontroller
v16@?0@"NSNotification"8
notification: %@
Other interruption ended so re-interrupting if necessary
Resetting state
Setting audio mixing: false
Stopping audio session
resolutionChangedHandler closure invoked
oldDescriptor: %@ descriptor: %@ notifyUnconditionally: %@
Ending interruption immediately since there is no longer a resolved descriptor
Stopping sound playback
Ending discovery mode
An end interruption was deferred but we were asked to update to a new descriptor, so canceling the deferred end
Deferring end interruption by %.2f sec, since descriptor has an interruption deferred end descriptor and there is no pending expedited end interruption
Ending interruption immediately, since descriptor has an interruption deferred end descriptor and there is a pending expedite for UUID %@
No provider returned for descriptor %@
Decreasing priority of other AVAudioSession interruption provider %@ to Default
updating mic attribution to bundle %@
postAudioInterruptionPropertiesNotification %@ userInfo: %@
No existing proxy AVAudioSession interruption provider for ID %u, creating a new one
Created AVAudioSession interruption provider %@
Starting discovery mode
Asked to begin or update playback of hold music but new descriptor is equal to activeDescriptor so doing nothing
speechSynthesizerEventHandler invoked
Hold music provider speech synthesizer finished utterance, but hold music provider is no longer active, so not invoking playback continuation
Hold music provider speech synthesizer finished utterance, and hold music provider is still active, so invoking playback continuation
Sound playback completed and we had a deferred end descriptor, so expediting end interruption for call with UUID %@
Requested to end playback, stopping alert: %@
factory
sharedAudioSystemController
sharedCallCenter
localAVAudioSessionInterruptionProvider
proxyAVAudioSessionInterruptionProvidersByAudioSessionID
avAudioClientInterruptionProvider
CSDMomentsUsageReport
@52@0:8i16q20q28d36d44
availability
photoRequestSuccessCount
photoRequestFailureCount
medianRequestDuration
meanRequestDuration
Ti,N,R,Vavailability
Tq,N,R,VphotoRequestSuccessCount
Tq,N,R,VphotoRequestFailureCount
Td,N,R,VmedianRequestDuration
Td,N,R,VmeanRequestDuration
description
callservicesd.MomentsUsageReport
MomentsUsageReport (Availability: 
_TtC13callservicesd37RingtoneProviderAlertPlaybackObserver
didBeginPlaying
_TtC13callservicesd16RingtoneProvider
contactStore
currentAlert
endedPlayingSemaphore
alertGenerator
playbackObserverGenerator
Alert configuration has changed, but unable to create TLAlert using configuration %@
Requested to begin or update playback, but alert configuration is unchanged so doing nothing
Alert configuration has changed, playing alert %@
Playback finished with completion type %@ for alert %@
Playback failed for alert %@: %@
Started playing alert: %@
Setting shouldIgnoreRingerSwitch: %@
Setting externalToneFileURL: %@
Setting vibrationIdentifier: %@
Setting toneIdentifier: %@
From provider, using externalToneFileURL %@
From activity alert %@, using tone %@, vibration %@, bypass ringer %@
Contact retrieval failed for contact identifier %@: %@
v24@?0q8@"NSError"16
CSDConversationLinkManager
v56@0:8@16@24@32q40@?48
v44@0:8@16@24B32@?36
v28@0:8B16@?20
v32@0:8@16@?24
v36@0:8@16B24@?28
@32@0:8@16^@24
v48@0:8@16@24@32@?40
v20@0:8B16
service
renewPseudonymTask
dataSource
linkSyncManager
lmiRecoveryManager
generateKeyAgreement
T@"<CSDConversationLinkManagerDelegate>",N,&,Vdelegate
activatedConversationLinks
T@"NSSet",N,R
activatedLinks
T@"NSArray",N,R
ConversationLinkSync: Failed to persist links %@ {error: %@}
ConversationLinkSync: Finished persisting to data source {acquiredLinks: %@}
Failed to retrieve link with error %@ triggering link recovery for LMI
Failed to initialize key agreement from link's private key, or private key is absent, aborting.
Failed to decrypt let me in request, aborting.
Informed by IDS that pseudonym was updated.  Updating expiration date in database.
Updating expiration of conversation link with pseudonym %@ failed, unable to find link with error %@
Saving expiration date for pseudonym %@ failed with error %@
Informed by IDS that pseudonym was removed.  Purging link from data source.
Removal of invalid conversation link with pseudonym %@ failed, unable to find link with error %@
Removal of invalid conversation link with pseudonym %@ failed with error %@
GondolaPseudonymExpiryDuration
Could not create mutable descriptor from descriptor %@
Unknown handle type used for invited handle %@
Asking to renew pseudonym for %@
Failed to create mutable descriptor for descriptor %@
No IDS unique ID found, cannot schedule renew.
Could not find index of our own uniqueID, aborting...
The local device (%@) generated this link, sending renew request now.
v28@?0B8@"NSDate"12@"NSError"20
Updated expiration date for pseudonym %@ to %@
Cannot normalize value for originator handle %@
Unable to generate publicKey compact representation for private key, was compactRepresentable set to true when initializing the private key?
Provisioning pseudonym to generate link for groupUUID: %@, originatorHandle: %@, invitedHandles: %@, isActivated: %@, linkLifetimeScope: %@
v24@?0@"IDSPseudonym"8@"NSError"16
Failed to provision pseudonym with error from IDS, pseudonym was nil
Successfully provisioned pseudonym %@ and link descriptor %@
Failed to provision pseudonym with error from IDS: %@
v24@?0@"NSArray"8@"NSError"16
Failed to encrypt let me in response because either the type was wrong (%@), missing the link (%@), or approval was not specified (%@)
Failed to retrieve link with error %@
Failed to retrieve link
Failed to retrieve the data bytes from the let me in response, or failed to init a CSDMessagingEncryptedConversationMessage
Failed to encrypt let me in response, aborting.
Checking validity of pseudonym %@
Asked to check validity of link for pseudonym %@ but none was found.
Could not retrieve IDS pseudonym object for pseudonym string %@
Removing invalid conversation link with pseudonym %@
Removing conversation link for pseudonym %@
Invalidating pseudonym %@
Asked to invalidate link for pseudonym %@ but none was found.
Removing link with pseudonym %@ from storage without invalidating as it's not locally created
Asking IDS to revoke pseudonym %@ because it was locally generated for link being invalidated
Pseudonym invalidation failed with error %@
validateAllLinks: No active accounts on the service, skipping link validation for now
validateAllLinks: Checking for invalid links
No descriptors fetched -- validation over {error: %@}
validateAllLinks: Links must be newer than date %@
validateAllLinks: We have some invalid links to cleanup {count: %@, pseudonyms: %@}
validateAllLinks: Finished removing invalid links {count: %@, error: %@}
Asked for inactive link, returning: %@
Count of inactive links (%{public}@) reached the cache limit (%{public}@); not provisioning another.
Fetching conversation link descriptor count failed with error %@
%@ provisioned inactive link %@
More inactive links exist than needed -- not generating %@
Exception caught when trying to activate link %@
In activating link, setting invitedHandles to %@
In activating link, updating the groupUUID from %@ to %@
Asked to renew link for pseudonym %@ but none was found.
Link manager asked to generate link for groupUUID %@ with invitedHandles: %@
Refusing generation of a link descriptor for groupUUID %@ as one already exists %@ (error: %@)
Fetch attempt with error %@
Failed to add invited member handles with error %@
Cannot add invited member handles for pseudonym %@ because no link matching this pseudonym was found
Failed to decrypt conversation message because the encrypted message either was missing the public key (%@) or missing the encrypted bytes (%@)
Failed to decrypt let me in response because the requestor's key agreement has already been used to decrypt a response.
Failed to decrypt let me in response, aborting.
Failed to encrypt let me in request because either the type was wrong (%@) or missing the link (%@)
Failed to retrieve the data bytes from the let me in request, or failed to init a CSDMessagingEncryptedConversationMessage
Failed to generate keypair for let me in requestor, aborting.
Failed to encrypt let me in request, aborting.
Asked to set link name for pseudonym %@ but none was found.
Saving link name for pseudonym %@ failed with error %@
Updated link name for pseudonym %@
Link manager asked to generate TUConversationLinkDescriptor for received TUConversationLink %@ (not locally owned)
Received link %@ missing required field
%@ already existed and isUpdate: NO, ignoring
Failed to persist link %@
Link manager asked to generate link with invitedHandles: %@, originatorHandle: %@
com.apple.TelephonyUtilities.LetMeInRecoveryManager
ConversationLinkSyncManager
ConversationLinkSync: ConversationLinkSyncManager init
v16@?0@"<OS_xpc_object>"8
ConversationLinkCheckInActivity
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
callservicesd.ConversationLinkManagerErrorType
CSDTinCanIDSService
T@"CSDTinCanIDSService",N,R
com.apple.private.alloy.tincan.audio
CSDVoucherManagerImpl
vouchingEnablement
idsPushHandler
timeout
verificationCache
Verification forced to be false.
Token URI did not match handle.
Vouching is disabled.
Encrypted data was not returned.
Failed to create URI.
Operation timed out.
callservicesd.VoucherManagerImpl
Failed to verify %@ because the token prefixed URI did not come from the handle.
Failed to verify %@ because we couldn't create a URI.
Retrieved previously verified voucher: %{bool}d.
Requested to verify %@.
Failed to verify %@ with error %s
Successfully verified %@.
v24@?0@"NSData"8@"NSError"16
Failed to sign data (%ld) because encrypted data was missing from response (without an error).
Successfully signed data (%ld) into %@.
Failed to sign data (%ld) due to error %s.
com.apple.callservicesd.VoucherManager.completions
Initializing VoucherManager.
callservicesd.VoucherManagerError
moments-disabled
moments-request-timeout
callservicesd1
momentsDisabled
momentsRequestTimeout
Td,N,R
CSDRTCReporter
v36@0:8@16@24i32
relayDeviceRouteChangesByCallUUID
groupUUIDToConversationReportingSessions
conversationUUIDToConversationReport
groupUUIDToConversationInfo
callUUIDToCallReportingSessions
callUUIDToGFTCallReportingSessions
callUUIDtoConversationUUID
conversationGroupUUIDToCallUUID
callUUIDtoConversationGroupUUID
uuidToNWActivity
uuidToNWActivityConnecting
idsSessionUUIDToChatUUIDs
callInfosPendingScoreForCallUUIDs
userScoreEnabled
appleIDUtilities
callservicesd.RTCReporter
UserScore: ReportController: reached RTCReporter with current UUID: %@
UserScore: call UUID does not exist
UserScore: session was RTCReporting object session was nil
UserScore: session RTCCSDCallInfo object was nil
Reporting message with session %@ userInfo %@
Error while sending message with error: %@
com.apple.telephonyutilites.phone
bundleIdentifier
telephonyutilities
Failed to create reporting session with sessionInfo: %@, userInfo: %@
Created reporting session %@ with sessionInfo: %@, userInfo: %@
Dropping GroupActivities reports, could not find session for conversation uuid %@
received an IDS metrics report for IDS session %@ corresponding to call %@
recorded mapping for IDS session %@ corresponding to call %@
removing ReportingSession for %@
remapped call=%@ to callUUIDToCallReportingSessions=%@
multiway call reporting session %@
no reporting token for callUUID: %@
Creating multiway call %@ reporting session for conversation UUID %@
multiway call reporting session already exists for uuid %@
multiwayconference
Creating conversation reporting session for conversation uuid %@
conversation reporting session exists for uuid %@
callUUIDToCallReportingSessions=%@
callUUIDToGFTCallReportingSessions=%@
This is a FT1:1 call
This is a GFT call
Reporting originating UI type as =%@
com.apple.telephonyutilites.facetime
Creating 1:1 session for call with UUID: $@
Creating multiway session for call with UUID: %@
Creating call reporting session for FT1:1 call UUID %@
FT1:1 reporting session already exists for uuid %@
_TtC13callservicesd14RTCCSDCallInfo
callUUID
durationMs
relativeEnd
bucketedDuration
endReason
providerErrorCode
providerEndedReason
setupTimeMs
connectionTimeMs
relay
incoming
connected
currentlyGrouped
relayDeviceRouteChanges
filteredOutReason
verficationStatus
knownCallerStatus
isOwnNumber
isConversation
fromLink
returnedCall
isSiriSuggested
isKnownContact
isVerifiedAppleCare
isSignedIntoiCloud
junkConfidence
identificationCategory
isKnownCaller
userScore
brandedCall
brandedCallWithImage
callservicesd.RTCCSDCallInfo
Starting screen sharing activity for handle %@ with initial attributes %@
callservicesd.ScreenSharingActivityManager
Screen sharing manager ignoring CarPlay connection attempt since we don't have a joined session
SCREENSHARING_END_CARPLAY_TITLE
SCREENSHARING_END_CARPLAY_MESSAGE_%@
SCREENSHARING_END_CARPLAY_BUTTON
CSDScreenSharingActivityManager
subscriptionsById
sessionsById
remoteAttributesById
observer
featureFlags
carPlayObserver
T@"<CSDScreenSharingActivityManagerDelegate>",N,W,Vdelegate
latestRemoteAttributes
T@"<TUScreenShareAttributes>",N,R
Not ending ScreenSharing because user didn't choose to end
Ending ScreenSharing since user tapped the end button
Unable to send updated attributes %@ over screen sharing activity
Sending remote attributes %@ to %@ (screen sharing activity session id: %@)
Failed to send attributes %@ for screen sharing activity with error %@
End screen sharing activity session (id: %@)
Screen sharing activity manager notifying delegate of session %@ ending
Started observer for screen sharing activity sessions
Received new screen sharing activity session %@ with activity %@
Because we received new screen sharing activity session (id: %@), ending old session %@
Received initial remote attributes %@ from screen sharing activity (id: %@)
Received remote attributes message %@ from sender %@ for screen sharing activity (id: %@)
Screen sharing activity session (id: %@) reached unknown state %@
Screen sharing activity session (id: %@) joined
Screen sharing activity session (id: %@) invalidated with reason: %@
Screen sharing activity session (id: %@) waiting
Transitioned to non-joined from joined state for locally-initiated screen sharing activity, ending (id: %@)
conduit.IDSProxyMessage
conduit.ContactInfo
namePrefix
familyName
nickname
imageData
conduit.StartedSessionEvent
identifier
userAccountInfoData
memberAssociationPrimaryInfo
conduit.EndedSessionEvent
conduit.ContactUpdateEvent
identifierHash
contacts
conduit.JoinEvent
policyInfos
conduit.TVLaunchedEvent
conduit.CancelAddMemberEvent
conversationIdentifier
conduit.PolicyInfoUpdatedEvent
conduit.AddMemberRequest
memberToken
context
associationVoucherData
PointOfPlayback
ControlCenterWithActivity
ControlCenterWithoutActivity
conduit.AddMemberResponse
conduit.DeviceTokenRequest
conduit.DeviceTokenResponse
deviceToken
conduit.DisconnectRequest
conduit.DisconnectResponse
success
conduit.MemberAssociationPrimaryInfo
conversationGroupUuidString
handleData
supportedTypes
Expanse
IdentityClaiming
rawData
groupUpdate
resource
conduit.IDSProxyMessage.RawData
messageData
fromID
conduit.IDSProxyMessage.Resource
resourceData
metadata
conduit.IDSProxyMessage.GroupUpdate
isInitiator
groupUUID
participantID
participantDestinationID
updateType
updateSubtype
fromServer
serverDate
participantData
clientContextData
members
participantIDs
relaySessionID
conduit.IDSProxyMessage.ParticipantIDList
identifiers
canReceiveRelayedCalls
CSDMomentsControllerLocalCapabilities
enabled
regionBlocked
v12@?0I8
CSDMomentsNotification
@32@0:8Q16@24
requesterID
TQ,N,R,VstreamToken
callservicesd.MomentsNotification
_TtC13callservicesd31CallHistoryNotificationProvider
callInteractionManager
callHistoryDataSource
callProviderManager
pendingCallIdentifiers
supportedMediaTypes
supportedProviders
mostRecentCallDate
inCallServiceProcessObserver
supportsDisplayingFaceTimeAudioCalls
dialRecentCall
findConversationLink
[WARN] Could not find recent call with identifier: %@
%@ count: %d isAmbiguous: %d
allowOutgoingCallsWhenLocked
com.apple.mobilephone
ACTION_TITLE_CALL_BACK
ACTION_TITLE_SEND_MESSAGE
InCallService changed to non-running state (%@); updating posted notifications
Could not retrieve date of most recent call for notification provider %@
Notifiction provider %@ found missed calls %@
Adding notification request %@ for missed call %@
CHRecentCallIdentifier
CNContactIdentifier
Cound not retrieve interaction; using original notification content for call with identifier %@
Retrieved interaction; retrieving intent for call with identifier %@
Cound not retrieve start call intent from %
Retrieved start call intent; updating notification content for call with identifier %@
Could not update notification content; using original notification content for call with identifier %@
TUDialRequestURL
Recent call was a silenced unknown caller; displaying notification as an alert (%@)
MISSED_CALL_MESSAGE
Encountered undefined FaceTime media type %@
MISSED_FACETIME_VIDEO_CALL
MISSED_FACETIME_AUDIO_CALL
Most recent call date is now %@ for notification provider %@
Skipping update of call history notification; InCallService process state is foreground running. %@
Performed join conversation request: %@
Performed dial request: %@
Performing dial request: %@ ended in error: %@
Failed to open URL %@#. Error %@
notificationType: 
supportedMediaTypes: 
supportedProviders: 
%@ is handling %@
Updating call history badge count for notification provider %@
Call interactions changed
callservicesd/CallHistoryNotificationProvider.swift
Failed to derive public key from public key data, ignoring let me in
SoundDescriptor(
CSDFaceTimeSyncIDSService
T@"CSDFaceTimeSyncIDSService",N,R
com.apple.private.alloy.facetime.sync
_TtC13callservicesd17HoldMusicProvider
speechSynthesizerEventHandler
speechSynthesizer
audioPlayer
canceled speech synthesizer utterance
finished speech synthesizer utterance
No audio player could be created, so unable to begin playing hold music
Failed to start playing hold music
Successfully started playing hold music
Error retrieving file URL for hold music sound file
Error creating AVAudioPlayer with fileURL %@: %@
Created hold music audio player with URL %@
started speech synthesizer utterance
ANSWER_AND_HOLD_OUTGOING_MESSAGE
Speaking utterance %@
Ending hold music
Ending hold message
_TtC13callservicesd34CodableRemoteScreenShareAttributes
@24@0:8@16
sharerHandleValue
currentRemoteAttributes
_TtC13callservicesd22RTCCSDRelayDeviceRoute
type
failed
callservicesd.RTCCSDRelayDeviceRoute
CSDMomentsControllerSession
moments
remoteIDSDestinations
isRegistered
activeRequestsByTransactionID
T@"<CSDAVCMoments>",N,R,Vmoments
T@"NSDictionary",N,C
TB,N,VisRegistered
callservicesd.MomentsControllerSession
MomentsControllerSession: no streamtoken found
MomentsControllerSession: FaceTime 1:1
MomentsControllerSession: GroupFaceTime
remoteIDSDestinations=
activeRequestsByTransactionID=
CSDContactsCallFilter
appleCareHandles
carrierBundleController
%@ serviceProviderUUID: %@ carrierPhoneNumbers: %@
%@ carrierBundleNumbers=%@
%@ null call handle, should not reach here: call=%@
%@ Contact fetch failed with the following error %@
%@ Found contact (%@) or suggested contact (%@) or isVerifiedAppleCare (%@) or isCarrierBundlePhoneNumber (%@)
%@ Did not find contact or suggested contact; call filter will not allow call %@
%@ call filter will allow call %@
com.apple.calls.callservicesd
CompanionLinkManager
ParticipantUpdateSanitizer
NeighborhoodActivityCore
FT-LMI-ResponseKey
FT-LMI-RequestKey
CSDRouteController
v28@0:8@16B24
_routesByUniqueIdentifier
routeWasPickedHandler
timedOutPickingRouteHandler
routeProviders
pendingRouteContext
pickWhenAvailableRouteIdentifier
pendingPickedRouteTimeout
routesByUniqueIdentifier
callservicesd.RouteController
routes: %@
Stopping waiting for route identifier %@ to become available
Could not find route to pick with unique identifier %@. All routes: %@
Will pick route identifier %@ when it becomes available to pick
Clearing out pickWhenAvailable route identifier %@ because user is picking available route %@
Timed out waiting for route to become picked: %@
Updated routes from %@ to %@
pickWhenAvailable route identifier %@ did become available, picking now...
Route identifier %@ did not become available in %@ seconds
v16@?0@"TURoute"8
com.apple.telephonyutilities.callservicesd.pairedhostdeviceroutecontroller
com.apple.telephonyutilities.callservicesd.localroutecontroller
v16@?0@"RPCompanionLinkDevice"8
v20@?0@"RPCompanionLinkDevice"8I16
Device changed: %@
Lost nearby device: %@
Found nearby device: %@
Local device updated
callservicesd/TUCallContainerProtocol_CSD.swift
Fatal error
Call is not a CSDCall: 
CSDTinCanIDSProviderDelegateCapabilities
cellularDataAllowed
CSDIDSProviderDelegateCapabilities
wiFiAvailable
wiFiAllowed
cellularDataAvailable
cellularDataPreferred
CSDConversationInvitationResolver
B32@0:8@16@24
deviceInvitationPreferences
CSDConversationPersistenceController
lockStateObserver
activeConversationsListKey
Removing active conversation with cache key: %@
Adding active conversation with cache key: %@
Expected an active conversation for key %@ but found nothing. Cleaning up cached conversation.
Cannot create CSDMessagingConversation from data in cache for key: %@. Cleaning up cached conversation
Missing fields on conversation from cache %@. Cleaning up cached conversation.
Removing conversation with UUID: %@ from cache.
Error creating CSDMessagingConversation to cache from conversation with UUID: %@.
Caching conversation with UUID: %@
Missing fields on conversation from cache %@. Returning a nil conversation.
callservicesd.ConversationPersistenceController
AudioDescriptor(
interruptionDescriptor: 
interruptionDeferredEndDescriptor: 
ringtoneDescriptor: 
soundDescriptorAction: 
holdMusicDescriptor: 
discoveryModeDescriptor: 
_TtC13callservicesd29PairedHostDeviceRouteProvider
pairedHostDeviceRoutes
Could not find route to pick for %@. All paired host device routes: %@
callservicesd.PairedHostDeviceRouteProvider
RingtoneDescriptor(
contactIdentifier=
providerRingtoneSoundURL=
CSDIDSPendingChat
@36@0:8@16B24@28
isVideo
T@"NSUUID",N,R
TB,N,R,VisVideo
T@"TUHandle",N,R,Vhandle
CSDGroupIDSPendingChat
callservicesd.GroupIDSPendingChat
callservicesd.IDSPendingChat
_TtC13callservicesd22LetMeInRecoveryManager
pseudonymToFailedLetMeIn
pseudonymToInvalidationWorkItem
Acquired link, proceeding to decrypt cached LMI
LMI decryption failed so caching and triggering link recovery %@
Invalidating LMI link recovery for cached LMI: %@
CSDParticipantUpdateSanitizerImpl
completionQueue
voucherManager
One member must be non-lightweight.
Must be associated to a different member.
One member must claim to be primary.
Associations do not have corresponding handles.
Unable to find associated member with corresponding voucher
callservicesd.ParticipantUpdateSanitizerImpl
Unable to identify context from participant update %@.
Dropping association voucher for member %s that does not have an association claim as its payload.
Dropping association voucher for member %s that makes claim for different conversation.
Dropping association voucher for member %s because the voucher is for a different handle.
Starting sanitization of %@.
Failed to validate verified voucher on member %s with error %s.
Verified voucher on member %s.
Could not finish sanitization of %@. Self was deallocated
Finished sanitization of %@.
Could not create TUConversationMember for member: %@
Could not create TUConversationMember for other associated member: %@
Failed to validate association for member: %@ with error: %s
IDSGroupSessionParticipantUpdateClientContextDataKey
com.apple.callservicesd.ParticipantUpdateSanitizer.completions
Initializing ParticipantUpdateSanitizer.
CSDParticipantUpdateSanitizer
v32@0:8@"IDSGroupSessionParticipantUpdate"16@?<v@?@"IDSGroupSessionParticipantUpdate">24
CSDConversationLinkGeneratorDescriptor
v24@0:8q16
@32@0:8@16q24
version
Tq,N,Vversion
hash
Tq,N,R
callservicesd.GeneratorDescriptor
_TtC13callservicesd13AudioResolver
ttyProviderObserver
localAudioSystemProvider
deviceSupportsRingtone
lastPlayedSoundDate
lastPlayedSoundType
soundDescriptorActionResolver
resolvedDescriptor
resolutionChangedHandler
Unable to create interruption descriptor for call %@
Not creating interruption for call: %@, deviceSupportsRingtone: %@ shouldSuppressRingtone: %@  holdMusicDescriptor: %@
Not playing sound %@ becaus the same sound was played less than 2s ago
Other session requested no ringtone interruption, ending currentDescriptor(context:) method for call %@
CSDFaceTimeIDSProviderDelegateCapabilities
momentsAvailable
items
timeProvider
_TtC13callservicesd23LocalAudioRouteProvider
audioRoutes
callAudioCategory
callAudioMode
lastUserPickedRoute
callAudioInterruptionState
hasActiveAudioSession
Could not find route to pick for %@. All audio routes: %@
Failed to pick audio route %@: %@
Call does not have audio interruption so setting prematurely selected audio route to %@
callservicesd.LocalAudioRouteProvider
Updating audio information using call: %@; callHasAudioInterruption: %@
Audio category change from %@ -> %@ mode %@ -> %@ does not require route re-pick
Re-picking last user picked route: %@
Audio category change from %@ -> %@ mode %@ -> %@ currentlyPickedRoute: %@ shouldPickLastUserPickedRoute: %@
Updated audio routes: %@
Clearing last user picked route
Unable to create audio route from route dictionary: %@
Picking prematurely selected audio route now that audio interruption has begun: %@
nearbyDeviceProvider
devicesChangedHandler
devicesByEffectiveIdentifier
callservicesd.NearbyDeviceMonitor
_TtC13callservicesd27ConversationLinkSyncManager
interactor
recoverRateLimiter
recoverResponseRateLimiter
messageQueue
descriptorManager
stateHandle
ConversationLinkSync: devices changed making sure we send a check in to them as well {deviceDestinations: %@}
currentRevisions
localGeneratorIdentifier
localLatestGeneratedVersion
generatorDescriptorVersionSums
countByGenerator
originatorRevision
originatorIdentifier
ConversationLinkSync: No pseudonyms found in recover -- dropping {recover: %@, from: %@}
ConversationLinkSync: Processing recover, asked to check for links matching pseudonyms {pseudonyms: %@, from: %@}
ConversationLinkSync: Excluding pseudonym from recover response as it is at rate limit {pseudonym: %@}
ConversationLinkSync: No pseudonyms remain after rate limiting, not sending recover response {pseudonyms: %@}
ConversationLinkSync: Did not find link descriptors for pseudonyms -- nothing to send in response {pseudonyms: %@}
ConversationLinkSync: Found link descriptors for pseudonyms specified in recover -- sending update {linkDescriptors: %@, pseudonyms: %@}
ConversationLinkSync: Excluding pseudonym from recover message as it is at rate limit {pseudonym: %@}
ConversationLinkSync: No pseudonyms remain after rate limiting, not sending message {pseudonyms: %@}
ConversationLinkSync: Sending recover {to: %@, pseudonyms: %@}
ConversationLinkSync: Failed sending recover! {to: %@, error: %@}
ConversationLinkSync: Sent recover {to: %@, idsIdentifier: %@}
ConversationLinkSync: Processing update, unable to convert descriptors -- dropping {update: %@}
ConversationLinkSync: Processing update, got links {links: %@}
ConversationLinkSync: Sending link update {to: %@, linksToSend: %@}
ConversationLinkSync: Failed sending update! {to: %@, error: %@}
ConversationLinkSync: Sent link update {to: %@, idsIdentifier: %@}
GondolaLastAccountsChangedState
ConversationLinkSync: checkAccountStateForCheckIn called {activeAccounts: %@, lastAccountsChangedState: %@}
ConversationLinkSync: missing devices, waiting until devices appear {activeAccounts: %@, interactor.deviceDestinations.isEmpty: %@}
ConversationLinkSync: Processing check in, unable to convert descriptors -- dropping {from: %@}
ConversationLinkSync: Processing check in, calculated differences {from: %@, shouldCheckIn: %@, needToSendUpdate: %@, shouldCheckAllGenerators: %@}
ConversationLinkSync: Check in differences %@
ConversationLinkSync: Processing check in, no differences -- done {from: %@, generatorDescriptors: %@}
ConversationLinkSync: Performing check in {dest: %@, message: %@}
ConversationLinkSync: Failed sending check in! {dest: %@, error: %@}
ConversationLinkSync: Sent check in {to: %@, idsIdentifier: %@}
ConversationLinkSync: scheduleCheckIn called {scheduleMode: %@, deviceDestinations: %@, type: %@}
ConversationLinkSync: scheduleCheckIn validation check failed, fixing local version {localVersion: %@, localLatest.version: %@}
ConversationLinkSync: scheduleRecover called {deviceDestinations: %@, pseudonyms: %@}
ConversationLinkSync: scheduleCheckInIfNeeded called
ConversationLinkSync: State dump
ConversationLinkSync: Failed to create state dump {error: %@}
ConversationLinkSync: check in activity fired
ConversationLinkSync: check in activity scheduled {criteria: %@}
GondolaCheckInIntervalOverride
ConversationLinkSync: randomCheckInInterval: calculated {interval: %@, scheduleMode: %@}
ConversationLinkSync: randomCheckInInterval: defaults overriding {overrideInterval: %@}
<CheckInDiff; remoteMissingIdentifiers = 
; localMissingIdentifiers = 
; localDescriptorsBehindRemote = 
; remoteDescriptorsBehindLocal = 
; differingVersionSumIdentifiers = 
CSDFaceTimeInviteDemuxer
idsQueryController
$__lazy_storage_$_supportsConversationOneToOneModeEnabled
$__lazy_storage_$_pushTokenForSelf
Current IDStatus results: %@ service: %@
Querying currentRemoteDevices %@ service: %@
Current remote device results: %@ for destinationIDs: %@, service: %@
Required IDStatus results: %@ service: %@
com.apple.telephonyutilities.callservicesd.faceTimeInviteDemuxer
AudioInterruptionDescriptor(
activationContext=
wantsExpeditedAudioSession=
mediaPlaybackOnExternalDevice=
CSDSecureImageTranscoder
v32@0:8@"NSData"16@?<v@?@"NSData"@"NSError">24
blastDoor
Attempting to generate preview of image after writing to URL: %s
SharePlayActivityImages
Error creating temporary images directory: %s
CSDUserNotificationController
callFilterController
phoneNotificationCenter
providersByIdentifier
providers
clientManager
v40@0:8q16@24@?32
Received response %@
Could not find notification provider for action
callservicesd.UserNotificationController
com.apple.telephonyutilities.callservicesd.usernotificationcontroller
Creating XPC endpoint for User notifications
Loaded user notification controller
com.apple.telephonyutilities.callservicesdaemon.usernotificationprovider
Started broadcasting User notifications mach service with %@
Setting badge string to %@ on notificationCenter %@ for notification type %@
APPLICATION_BADGE_UNKNOWN
APPLICATION_BADGE_UNKNOWN_COUNT
Successfully set badge string to %@
Error setting badge string to %@
Replacing notification with identifier %@ from %@
Successfully replaced notification with identifier: %@
Error while replacing notification: %@
Removing notification with identifier %@ from %@
Not posting notification since it is restricted by the call filter
Adding notification request %@ to %@
Successfully posted notification with identifier: %@
Error while posting notification: %@
com.apple.calls.conversationkit.multiwayviewcontroller.icsonscreenchangednotification.isonscreen
com.apple.calls.conversationkit.multiwayviewcontroller.icsonscreenchangednotification.isoffscreen
_TtC13callservicesd21DiscoveryModeProvider
_TtC13callservicesd29VoicemailNotificationProvider
telephonyClient
voicemailDataSource
postedVoicemailIdentifiers
pendingVoicemailIdentifiers
mostRecentVoicemailDate
mostRecentNonVisualVoicemailDate
localizeVoicemailName
callbackVoicemail
unsubscribedVoicemailInfoForUUID
Could not find voicemail with identifier: %lu
No current unsubscribed voicemail info, attempting to update...
Subscribed to enhanced voicemail; unread message count is %lu
v36@?0B8@"NSNumber"12@"NSString"20@"NSError"28
Got voicemail info for uuid %@ to available: %@, count: %@
Updating voicemail info for uuid %@ to available: %@, count: %@
ACTION_TITLE_VOICEMAIL_MESSAGE_DELETE
Subscription status changed: %@
Removing all voicemail notifications. Current notification identifiers: %@
Online status changed: %@
Voicemails changed: %@
Could not retrieve date of most recent voicemail for notification provider %@
Voicemail is not subscribed
Voicemail store changed, and we found the following voicemail messages we were waiting for: %@
Retrieving messages delivered after %@
Received %lu new voicemails since date %@
Voicemail store changed, but we did not find any voicemail messages we were waiting for. Waiting for: %@
Asked to post %lu voicemails
Adding notification with count: %lu
NEW_VOICEMAIL_FORMAT
nonvisualvoicemail
VMVoicemailIdentifier
voicemailDuration
[WARN] Could not generate dial request URL for voicemail: %@
Cound not retrieve voicemail message; using original notification content for voicemail message with identifier %@
Cound not retrieve intent; using original notification content for voicemail message with identifier %@
Retrieved intent; updating notification content for voicemail message with identifier %@
Could not update notification content; using original notification content for voicemail message with identifier %@
Attempt to create a notification attachment for file at %@ failed with error %@
Most recent voicemail date is now %@ for notification provider %@
Voicemail is not MWI - Ignoring voicemailInfoAvailableNotification
Handling voicemailInfoAvailableNotification voicemailInfo: %@, context: %@
callservicesd/VoicemailNotificationProvider.swift
B16@?0@"VMVoicemail"8
Retrieving voicemail messages failed with error %@
Retrieving inbox voicemail messages failed with error %@
CSDCallHistoryCallFilter
usTollFreePrefixes
callHistoryManager
%@ Fetching call history calls matching predicate %@
%@ Could not create call history handle from call %@
%@ Found call history call; call filter will allow call %@
%@ Did not find call history call; call filter will not allow call %@
CSDOwnNumberCallFilter
idsCTAdapter
%@ Call is not the same number as subscriber; OwnNumberCallFilter will allow call %@
%@ Call is the same number as subscriber; OwnNumberCallFilter will not allow call %@
%@ call is verified; will allow call %@
%@ isSilenceUnknownCallersEnabled: %d
DiscoveryModeDescriptor()
_TtC13callservicesd13SoundProvider
player
Asked to begin or update playback of sound with descriptor %@ but no TUCallSoundPlayerDescriptor could be determined, so not playing
Attempt to play call sound player descriptor %@ returned false
Asked to begin or update playback of sound but new descriptor is equal to activeDescriptor so doing nothing
AudioInterruptionDeferredEndDescriptor(
_TtC13callservicesd33ConversationLinkDescriptorManager
$__lazy_storage_$_dataSource
ConversationLinkSync: Failed to read int in ConversationLinkDescriptorManager %@ %@
ConversationLinkSync: Failed to read string in ConversationLinkDescriptorManager %@ %@
ConversationLinkSync: Failed to store string on ConversationLinkDescriptorManager %@ %@
ConversationLinkSync: Failed to store int on ConversationLinkDescriptorManager %@ %@
GondolaLatestVersion
GondolaSyncedVersion
GondolaGeneratedIdentifier
ConversationLinkSync: localGeneratorIdentifier: No local generated identifier -- creating it now {locallyGeneratedIdentifier: %@, success: %@}
ConversationLinkSync: Migrating local identifier
_TtC13callservicesd22RTCCSDConversationInfo
uuid
relativeStart
conversationBaseTime
conversationProvider
hasLink
isPending
duration
uPlusOneModeAtStart
uPlusOneModeAtEnd
isHandoffContinuation
originatingUIType
maximumMemberCount
initialMemberCount
finalMemberCount
maxNumberOfParticipants
AVCBlobRecoveryAttempts
AVCBlobRecoveryTimeouts
transitionAttempts
numberLMIRequests
numberLMIApprovals
numberLMIDismissals
messageRetryAttempts
messageRetryFailures
messageRetrySuccesses
avcBlobRecoveryMessageRetryAttempts
avcBlobRecoveryMessageRetryFailures
avcBlobRecoveryMessageRetrySuccesses
hasHadActiveParticipants
cumulativeTimeAlone
timeAloneAtEnd
lastTimeNotAlone
callservicesd.RTCCSDConversationInfo
_TtC13callservicesd20CompanionLinkManager
client
authenticationController
activated
lockdownModeEnabled
deviceUpdatedPublisher
deviceFoundPublisher
deviceLostPublisher
deviceChangedPublisher
messagePublishers
eventPublishers
_TtCC13callservicesd20CompanionLinkManager14DeviceProvider
manager
Sending event %s to %s : %s, options: %s
Event '%s' successfully delivered
Error sending %s: %s
v24@?0@"NSDictionary"8@"NSDictionary"16
Event '%{public}s' publisher cancelled.
Event '%{public}s' publisher finished.
Event '%{public}s' publisher failed: %{public}s
Received event '%{public}s', params: %s, %s
v32@?0@"NSDictionary"8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSDictionary"@"NSError">24
Message '%{public}s' publisher cancelled.
Message '%{public}s' publisher finished.
Message '%{public}s' publisher failed: %{public}s
Received message '%{public}s', params: %s, %s
callservicesd/Combine_OneShotSink.swift
Already subscribed
Error waiting for authenticated device to reappear: %s
Found authenticated device. Device: %@
Failed to activate CompanionLink because lockdown mode is enabled
Activated CompanionLink
Failed to activate CompanionLink
Sending request %s to %s : %s, options: %s
v32@?0@"NSDictionary"8@"NSDictionary"16@"NSError"24
Received response for request %s from %s : %s, options: %s, error: %s
Authentication completed -- waiting for device to reappear
Device %@ is already authenticated
com.apple.TelephonyUtilities.CompanionLinkManager
Failed to create state dump: %s
Error encoding user account info: %s
iCloudAccountToken
iTunesAccountToken
homeUserIdentifierTokens
_TtC13callservicesd13CSDAVCMoments
@48@0:8q16@24@32@40
q16@0:8
I16@0:8
@32@0:8C16C20@24
T@"<CSDAVCMomentsDelegate>",N,W,Vdelegate
streamToken
capabilities
TI,N,R
activeRequestCount
pendingRequestCount
callservicesd.CSDAVCMoments
CSDAnalyticsReporter
v28@0:8@16I24
v40@0:8@16@24q32
com.apple.Callservicesd.callEndStatus
@"NSDictionary"8@?0
Logging end call to core analytics: %s
call_info_source
call_directory_provider_bundle_id
is_currently_grouped
provider_ended_reason
telephony_transport_type
face_time_transport_type
connection_time_ms
Connection time is negative, %s is likely processing a callkit action incorrectly
kCallSubTypeWifi
kCallSubTypeVoLTE
kCallSubTypeTelephony
Couldn't log server termination event because of no bundleIdentifier on activitySession
termination_reason
com.apple.callservicesd.shareplay-session-server-terminated
Logged session server termination event for session: %s reason: %s
manualLaunchAttempted
Logged manual launch attempt event for session: %s
com.apple.shareplay.manualActivityInteractions
needsManualLaunch
Logged manual launch needed event for session: %s
com.apple.callservicesd.shareplay.push-to-tv
Send SharePlay push to TV event
CSDKeychainPasswordItem
@24@0:8^@16
B32@0:8@16^@24
B24@0:8^@16
accessGroup
account
callservicesd.KeychainPasswordItem
Successfully deleted item from keychain
No item found. Added new item to keychain
Saved item to keychain
CSDHandoffAudioController
routeIdentifierChangedNotification
continueHandoffAudioRouteNotification
callCenterQueue
serverBag
routeController
pickedRouteUniqueIdentifier
HandoffAudioController: Could not parse audio route identifier from continue handoff notification: %@
HandoffAudioController: Continuing handoff of audio route with identifier %@
HandoffAudioController: Could not take audio route with identifier %@ active because either it could not be found as a valid route
HandoffAudioController: Picked route changed to: %@
HandoffAudioController: Conversation become joined, current route is %@
HandoffAudioController: Not triggering route change notification for handoff in response to conversation becoming joined, as a non-bluetooth route is in use: %@
com.apple.telephonyutilities.callservicesd.handoffaudiocontroller
CSDHandoffAudioControllerContinueHandoffAudioRouteNotification
CSDHandoffAudioControllerRouteIdentifierChangedNotification
CSDMomentsRequest
avcRequest
session
T@"<CSDAVCMomentsRequest>",N,R,VavcRequest
T@"CSDMomentsControllerSession",N,R,Vsession
callservicesd.MomentsRequest
Failed to find matching device for %@
Failed to find matching conversation for %s
Device %@ is not authenticated - starting auth flow
TV device %@ is not capable of avLess handoff
Failed to find handed off conversation info for device: %@
Failed to disconnect device: %@ because its associated conversation (%s) could not be found.
No effectiveID stored in handoff state. Kicking TV.
Disconnecting device with handle: %@
Disconnecting. Handed off conversations: %s
callservicesd.NeighborhoodActivityConduit
CSDNeighborhoodActivityConduit
cancellables
callCenter
idsService
delegatesToQueues
networkSupport
handedOffConversations
joinApprovalState
localTVDevices
joinCompletionSubjects
pendingJoinConversationIDs
activeConversationUpdateSubject
activeConversationUpdateCancellablesByDeviceID
messageProxy
idsProxyCleanupTimer
conversationIDsWithActivities
contactForwardingCanceler
T@"OS_dispatch_queue",N,R,Vqueue
nearbyTVDevices
activeSplitSessionTVDevice
T@"TUNearbyDeviceHandle",N,R
Ignoring avMode update since avMode did not change to or from AVLess
AVMode changed for conversation %s from %s to %s. Updating activeConversationUpdateSubject.
tv has left conversation %{private,mask.hash}s
tv is in this conversation
Pushing contacts
Notifying successful join
Join completions: %s
tv has joined conversation %{private,mask.hash}s
activeParticipants = %s
Waiting for tv on this conversation
Pending join IDs: %s
Remote participants changed for %{private,mask.hash}s: %s, lightweight participants: %s
Pushing %ld contacts to split-session device
Kicking split-session device %s
Left conversation: %s
Conversation state change for %{private,mask.hash}s: %s -> %s)
Joined conversation: %{private,mask.hash}s
Disconnecting idHash %s; info = %s
Sending RPC: %s %s
Invalid message content: %s
RPC response: %s %s
<Conversation Gone>
Participant %s left conversation %s on device %@
Failed to authenticate device: %@, error: %s
Unable to generate member association primary info for conversation %s.
Current activity doesn't support handoff, rejecting push attempt
HANDOFF_UNSUPPORTED_TITLE
Handoff unsupported alert title
HANDOFF_UNSUPPORTED_MESSAGE_PUSH
Handoff unsupported alert message (push side)
Presenting alert: %s / %s
Insufficient info to revoke pending invitation for: %@
Handed off conversations: %s
Removed handed off conversation with effective ID: %s
Revoking invitation for TV %@, error: %s
User Account Info - iCloudAltDSID: %{bool}d, iTunesAltDSID: %{bool}d
No effectiveIdentifier in handle %@
Adding remote participant with device token: %{private,mask.hash}s and handle: %@ isLightweightMember: %{bool}d
Conversation has no local member to use as lightweight primary
Assigning lightweight primary %{private,mask.hash}@, participant ID %{private,mask.hash}llu
Handle strings: %s
Fetching contacts for handles: %s
Removing delegate %s
New delegate %s
com.apple.callservicesd.NearbyActivityRegistrar
Initialized NeighborhoodActivityConduit
activeConversationUpdate
CSD Conduit State
ConversationUpdateEvent.sessionUnavailable(
ConversationUpdateEvent.sessionAvailable(
TV device appeared: %s / %s / %{private}s
New device appeared. ID: %{private}s. Now %ld devices total
New device appeared. ID: %{private}s MRID: %{private}s Model: %s Name: %{private}s
Error in event handler for '%{public}s': %s
No request options to resolve sending device handle
Could not resolve senderID or verified identity for device handle for request options: %s
Resolved verified identity %s to sending device %@
Resolved senderID %s to sending device %@
Resolved IDS ID %s to sending device %@
Incoming RPC event: %s %s
Received message from unauthenticated client, ignoring
Error in message handler for '%{public}s': %s
Incoming RPC: %s %s
Sending RPC response: %s %s
Activity %s from %s doesn't support handoff, rejecting.
Checking eligibility of activity: %@
TV is hijacking session. Skipping check of existing activity.
Requesting split-session approval from %s
Approval result: %{bool}d
Error requesting split-session approval: %s
Device disappeared. ID: %{private}s MRID: %{private}s Model: %s Name: %{private}s
"39L]{
#BUhJ@n
#SSz
'.MSjs
'.7Ji
///////
#)8=
"&9@QZm
$*06<BHNTZ`n
258D
-39Hg
..#..
!$'*-0369<?BEHKNQTWZ]
$*06<
####
?__C
RPDeviceChangeFlags
TUCallSoundPlayerSoundType
CHRecentCallMediaType
TUMomentsAvailability
Triggers
NCSDCallCenterObserverTriggers
os_unfair_lock_s
CTError
TUCallVerificationStatus
TUCallFilteredOutReason
TUConversationState
TUConversationAVMode
TUNearbyConversationPullContext
TUNearbyDeviceHandleType
CFString
NCFStringRef
__C_Synthesized
TUNeighborhoodActivityConduitError
VMMailboxType
HandleType
NCXHandleType
TUCallStatus
CSDAudioInterruptionProviderType
os_state_data_s
TUConversationLinkLifetimeScope
Name
NNSNotificationName
CHHandleType
CHRecentCallTTYType
TUHandleType
IDSGroupSessionServerErrorCode
TUCallFaceTimeTransportType
MRPlaybackState
TUCallSoundRegion
TURouteDeviceType
AXSDefaultRouteForCall
audit_token_t
CSDAudioInterruptionOperationMode
Mode
NAVAudioSessionMode
Category
NAVAudioSessionCategory
Foundation
CallKit
CoreFoundation
Code
NTUNeighborhoodActivityConduitError
os_state_data_decoder_s
__Unnamed_union___Anonymous_field1
os_state_data_type_t
RPCompanionLinkClient
CompanionLinkMessenger
CompanionLink
CompanionLinkAuthenticationError
CompanionLinkAuthenticationResult
AudioInterruptionProvider
AnyAudioInterruptionProvider
AudioInterruptionPriorityProvider
AudioInterruptionProviderSetActiveOptions
AudioInterruptionProviderIdentifier
AudioInterruptionPriority
callservicesd
DescriptorResolver
DescriptorType
&-%3
TinCanIDSProviderDelegate
UserIntentManager
NSUserDefaults
ConversationPersistenceStorage
ConversationLinkSyncDataSource
ConversationLinkDataSourceTUWrapper
EmergencyCallbackCapabilities
OneShotCancellationBox
State
callservicesd
CarPlayManager
PowerAssertionManager
ConversationLinkSyncMessageQueue
Action
MessageType
ScheduleMode
EnqueueMode
AudioInterruptionProviderFactoryProtocol
AVAudioSessionInterruptionProviderType AVAudioClientInterruptionProviderType
AudioInterruptionProviderFactory
NearbyDeviceRoute
LetMeInRequestorKeyAgreement
ChangeTrackingDescriptorResolver
UpdateContext
ProviderDisplayMonitor
Provider
HoldMusicDescriptor
CallCenterObserver
callservicesd
GroupFaceTimeNotificationProvider
SoundDescriptorActionResolver
Sound
FaceTimeLivePhotosIDSService
UNNotificationResponse
callservicesd
UserNotificationProvider
UserNotificationResponse
NotificationType
AVAudioClientInterruptionProvider
FaceTimeMultiwayIDSService
ConversationLinkSyncIDSInteractorDelegate
ConversationLinkSyncIDSInteractor
IDSInteractorError
AVAudioSessionInterruptionProvider
callservicesd
ProcessState
ProcessObserver
callservicesd
FaceTimeNotificationProvider
NSNumberConvertible
SharedConversationServerBag
CSDIDSService
IDSDeviceDestinationResolver
NearbyDeviceRouteProvider
DirtyCallManager
PendingMembershipTrackerServerBag
PendingMembershipTrackerStorage
PendingMembershipTracker
MemoryPendingMembershipTrackerStorage
SharedPendingMembershipBag
PendingMembershipInfo
UserAction
Errors
Mode
callservicesd
IDSMessageProxy
BufferedMessage
AuthenticationController
DuetDonater
allowContactsOnly
CompanionRpcMessenger
ReplyableInfo
CompanionRpcError
MessageInfo
CompanionRpcDefinition
CompanionEventDefinition
DescriptorProvider
DescriptorType
EmptyDescriptorProvider
EmptyDescriptor
CallController
TUAudioSystemController
LocalAudioSystemProvider
AudioActivationContext
SoundDescriptorAction
AudioController
CSDAudioController
AudioInterruptionProviderPool
MomentsUsageReport
TLAlert
callservicesd
RingtoneProviderAlertPlaybackObserver
RingtoneProviderAlert
RingtoneProviderProtocol
RingtoneProvider
RouteProvider
DeselectableRouteProvider
PairedHostDeviceRouteTrackingRouteProvider
callservicesd
ConversationLinkManager
ConversationLinkManagerErrorType
TinCanIDSService
VoucherManagerImpl
VerificationQuery
VoucherManagerError
RTCReporter
CallInfoPendingScore
#&,4:?ELRX[^emvz
RTCReporterInfo
RTCCSDCallInfo
CodingKeys
ScreenSharingActivityManagerProviding
ScreenSharingActivityManager
ScreenSharingActivityManagerErrors
%+-39@
Resource
GroupUpdate
RawData
OneOf_Message
NCProtoIDSProxyMessage
NCProtoContactInfo
NCProtoStartedSessionEvent
NCProtoEndedSessionEvent
NCProtoContactUpdateEvent
NCProtoJoinEvent
NCProtoTVLaunchedEvent
NCProtoCancelAddMemberEvent
NCProtoPolicyInfoUpdatedEvent
NCProtoAddMemberRequest
NearbyConversationPullContext
NCProtoAddMemberResponse
NCProtoDeviceTokenRequest
NCProtoDeviceTokenResponse
NCProtoDisconnectRequest
NCProtoDisconnectResponse
NCProtoMemberAssociationPrimaryInfo
MemberAssociationType
ParticipantIDList
MomentsControllerLocalCapabilities
UserIntentValidator
BackgroundBluetoothAccessValidator
DonatedIntentValidator
ApplicationStateValidator
PrivateAPIValidator
MediaRemoteStateValidator
UserIntentValidationResult
MomentsNotification
MbP?
CHManager
CHRecentCall
callservicesd
CallHistoryDataSource
RecentCall
CallHistoryNotificationProvider
ConversationLinkKeyAgreement
SoundDescriptor
FaceTimeSyncIDSService
callservicesd
HoldMusicProviderProtocol
HoldMusicProvider
SpeechSynthesizerEvent
CodableRemoteScreenShareAttributes
ScreenSharingActivity
CodingKeys
RTCCSDRelayDeviceRoute
RTCCSDAudioRouteType
CodingKeys
MomentsControllerSession
ContactsCallFilter
ConversationLinkCryptoErrorType
RouteController
PendingRouteContext
TinCanIDSProviderDelegateCapabilities
IDSProviderDelegateCapabilities
ConversationInvitationResolver
InvitationPreferencesPriority
ConversationPersistenceController
AudioDescriptor
PairedHostDeviceRouteProvider
RingtoneDescriptor
IDSPendingChat
GroupIDSPendingChat
LetMeInRecoveryManagerDelegate
LetMeInRecoveryManager
CachedLetMeInRequest
ParticipantUpdateSanitizerImpl
ParticipantUpdateSanitizerError
DescriptorTrackingProvider
GeneratorDescriptor
AudioResolverProtocol
AudioResolver
Context
FaceTimeIDSProviderDelegateCapabilities
Cache
CacheItem
callservicesd
LocalAudioRouteProvider
CallAudioInterruptionState
RPCompanionLinkClient
RPCompanionLinkDevice
NearbyDevice
NearbyDeviceProvider
DeviceType
NearbyDeviceMonitor
ConversationLinkSyncManagerDelegate
ConversationLinkSyncManager
CheckInType
CheckInDiff
FaceTimeInviteDemuxer
CSDCall
AudioInterruptionActivationStateObserver
AudioInterruptionDescriptor
ProviderType
SecureImageTranscoder
BlastDoorInterface
SimulatorBlastDoorInterface
BlastDoorError
UNUserNotificationCenter
callservicesd
UserNotificationCenter
UserNotificationController
DiscoveryModeProviderProtocol
DiscoveryModeProvider
VMVoicemail
VMVoicemailManager
callservicesd
VoicemailDataSource
Voicemail
VoicemailNotificationProvider
CallHistoryCallFilter
OwnNumberCallFilter
DiscoveryModeDescriptor
SoundProviderProtocol
SoundProvider
AudioInterruptionDeferredEndDescriptor
ConversationLinkDescriptorManager
"*06<BHKNT[bilry
RTCCSDConversationInfo
CodingKeys
CompanionLinkManager
DeviceProvider
CompanionLinkManagerErrors
UserAccountInfo
CodingKeys
callservicesd
CSDAVCMoments
AnalyticsReporter
KeychainPasswordItem
KeychainError
ASCIIStringConvertible
callservicesd
HandoffAudioController
MomentsRequest
NeighborhoodActivityConduit
ApprovalState
ConversationUpdateEvent
HandedOffConversationInfo
InitParams
enabled: %d
accelerometer orientation changed to %ld
Beginning transaction for %@. Transaction count is now %lu. Added transaction: %@
Ending transaction for %@. Transaction count is now %lu. Ended transaction: %@
CSD encountered a fault with reason: %@
Invalidating process assertion for %@
Preparing conference with configuration: %@
Initializing new callID with device role %d
Fetched local invite dictionary: %@
Error fetching local invite dictionary %@: %@
Fetching local invite dictionary using remote invite dictionary %@
Failed to initialize a new call with device role %d.
Failed to create an AVConference instance. This usually happens when the AVConference SPI can't communicate with mediaserverd over XPC
[WARN] Attempted to prepare conference which has already started preparing (state=%d)
transport: %@ self.configuration: %@
Successfully started connection with configuration=%@ (timestamp: %f)
Failed to start connection with configuration=%@: %@
[WARN] Attempted to start conference which has not been prepared (state=%d)
[WARN] Conference does not exist
Delaying stop on conference...
Calling stop on conference %@
Calling cancel on conference %@
[WARN] Attempted to cancel a conference that has already started connecting: %@
Setting remote invite dictionary from %@ to %@
Setting caller from %d to %d
Attempting to set state to %d, which precedes current state %d
Setting microphoneMuted to %d for %@
Setting sendingAudio to %d
Setting sendingAudioData to %d
Setting conferenceProvider videoPaused to %d
Setting sendingVideo to %d
State is %d, updating isVideoPausedToStart from %d to %d
Updating capabilities from: %@ to %@
Setting remoteVideoPresentationSize from %@ to %@
Setting remoteVideoPresentationState from %d to %d
Conference didStart timeout fired
Updating device role from %d to %d
conference=%@ didStartSession=%d error=%@
Successfully started session
Session is connected, setting videoPaused to expected value: %d
[WARN] Session is already past Connected state, not sending delegate started
Failed to start session. error=%@
didStopError=%@ callMetadata=%@
AVConference stopped in failure: %{public}@
Sending delegate bytesOfDataUsageChanged: %ld
didPauseAudio=%d error=%@
didPauseVideo=%d error=%@
Not setting sendingVideoExpected to nil since our state is %d
Video was set to didPauseVideo: %d sendingVideoExpected: %@. Setting sendingVideo to sendingVideoExpected
remoteVideoPaused=%d
remoteMediaStalled=%d
Server died for conference provider %@
It's interesting that we have a call here when we don't really expect one %@
Registering to handle call handoff activity type with dynamic identifier %@ for provider %@
Frontmost call is hosted here ...
... and it is an endpoint here ...
... and we are a secondary device ...
... using a broadcast activity with dynamic identifier: %@.
[WARN] ... but no dynamic identifier could be found (%d) or no handoff user info exists (%d). Not broadcasting frontmost call
... but we are a primary device. Not broadcasting frontmost call
... and it is being relayed elsewhere. Using a local activity
Beginning handoff activity %@ for call %@
Ending handoff activity: %@
Broadcasting suppress ringtone activity for declined call: %@
[WARN] User activity manager aware of change to audio-video state (mic muted: %@, camera enabled: %@), but call didn't meet criteria (call is non-nil: %@, call is conversation: %@, call has groupUUID: %@, call is active: %@)
[WARN] User activity manager aware of change to audio-video state (mic muted: %@, camera enabled: %@), but could not find conversation for call with groupUUID: %@
Not updating handoff advertisement because lockdown mode is enabled
After conversation %@ was handed off elsewhere, re-registering for handoff advertisement for participant %llu so that it can be handed off back
Not updating handoff registration because lockdown mode is enabled
Began app history activity %@ for call %@
[WARN] Expected %@ to be kind of class %@, but is not
Broadcasting suppress ringtone activity for call that suppressed its ringtone: %@
Broadcasting suppress ringtone activity for incoming call that started connecting: %@
Received broadcast for activity type %d and destination ID %@. Suppressing ringtone due to remote suppression for call %@
Received broadcast for activity type %d but ignoring it because its destination ID (%@) does not match this ringing call's desination ID (%@)
[WARN] Cannot process received broadcast for conversation handoff activity type because it did not have a dynamic identifier set.
[WARN] User activity manager could not parse eligibility from dynamicIdentifier %@
%s: Updating handoff registration for conversation UUID %@
No more conversations, unregistering all conversation handoff dynamic identifiers
%@ isSilenceUnknownCallersEnabled(Telephony): %d
%@ isSilenceUnknownFaceTimeCallersEnabled: %d
%@ maxJunkLevel: %ld
Not a system call; call filter will allow call with identifier %@
%@ shouldFilterIncoming call=%@ isSilenceUnknownTelephonyCallersEnabled=%d isSilenceUnknownFaceTimeCallersEnabled=%d
%@ call does not have a valid handle, by definition this is an unknown caller call %@
%@ shouldFilterIncoming call=%@ unknownCaller=%d maybeSilenceCall=%d shouldBlockJunk=%ld
Calling ADClientSetValueForDistributionKey() with key %@ and value %f
Asking BackBoard to set the proximity detection mode to (%u).
Proximity detection should be %d since isReceiver: %d, isSpeaker: %d, isVoiceOverRunning: %d
Proximity detection should be disabled; eligible audio call does not exist
Proximity detection should be disabled; video call exists
Proximity detection should be disabled; isInterfaceOrientationPortrait: %d, isProximitySensorCovered: %d
Handling proximity sensor covered changed to %d
VoiceOver is enabled and the proximity sensor is covered, changing the audio route from speaker to receiver.
VoiceOver is enabled and the proximity sensor is uncovered, changing the audio route from receiver to speaker.
Updating proximity sensor state; calls changed.
Updating proximity sensor state; sensor covered changed.
Updating proximity sensor state; audio routes changed.
TipKit: Logging Biome signal for phone away from face without speaker.
[WARN] Tried to get the call history identifier for this call (%@) but no conference ID was available (%@), we'll fall back to another method (GUID = %@). This call may now not sync properly between devices.
This chat's conferenceID and GUID are nil or empty, we cannot create a safe call history identifier
Not setting video properties for conversation UUID: %@ because we're in AVLess
[WARN] Could not weak link notification string '%@'. Not observing notifications for it.
Calling endChatWithReason on chat %@ with reason %ld
Asked to end chat with UUID: %@, reason: (%ld) but could not find it
Using account %@
Inviting handle %@ excluding push tokens %@
Registering imav chat %@
Could not initiate FaceTime call - No chat returned for handle %@ with account %@
Could not initiate FaceTime call - No IM handle returned for handle %@ with account %@
Could not initiate FaceTime Call - Account %@ not registered
Legacy chat with matching UUID connected; attempting to fulfill pending answer call action %@
Legacy chat did not provide a connection date; Could not fulfill answer call action %@
[WARN] No pending answer call actions found with UUID: %@
Failing answer call action for chat because it ended before connecting: %@
Using call ended reason remote hangup because ended reason is %@
Using call ended reason answered elsewhere because ended reason is %@
Using call ended reason declined elsewhere because ended reason is %@
Using call ended reason unanswered because ended reason is %@
Using call ended reason failed because ended reason is %@
Incoming call was denied with error %@ so declining chat with IMAVResponseFilteredCall: %@
provider: %@
action: %@
Calling acceptInvitation on chat %@
Not accepting invitation to chat %@ since it is already Connected
Calling endChat on chat %@
Calling setIsSendingAudio with %d for chat %@
Not holding chat %@ since it is not yet Connected
Calling setIsSendingVideo with %d for chat %@
Calling setRemoteVideoPresentationSize with %@ for call %@
Calling setRemoteVideoPresentationState with %ld for chat %@
Calling setRelayed with %d for chat %@
Calling setMuted with %d for chat %@
Creating CSDCallHistoryControllerXPCServer
XPC connection interrupted from client %@
XPC connection invalidated from client %@ for CSDCallHistoryControllerXPCServer
deallocing CallHistoryControllerXPCServer
invalidating CallHistoryControllerXPCServer
NOTIFYING CLIENTS TO CONNECT
recent calls deleted: %@
All recent calls deleted
Requesting remote active participants for cached conversation with UUID: %@
Setting audioEnabled to %d
Ignoring to set videoEnabled since conversation is relaying
Setting videoEnabled to %d
Setting screenEnabled to %d, screenShareAttributes: %@
Setting videoPaused to %d
Setting screenShareAttributes to %@
Error setting screenShareAttributes when screen is not enabled
Setting audioPaused to %d
Stopping session since local av mode is switching to none
Conversation UUID: %@ asked to register messages group association
Setting oneToOneModeEnabled to %d
Kicking previous participant on conversation UUID: %@ participant: %@
Ignoring splitSessionSecondary since we aren't joined into the conversation UUID: %@ state: (%tu)
Failed to return to HomeScreen %@
Adding participant: %@
Found member: %@ representing participant: %@
AddedParticipant %@ for member: %@ is representing our localMember
Removing active participant and replacing it with one with the same identifier but a newer AVC data blob.
New participant blob's audioVideoMode is different than our current audioVideoMode. AVModeUpdates need to happen with the explicit ParticipantUpdate message. Resetting to known audioVideoMode
[WARN] GreenTea device cannot be in a call with more than one other participant, leaving
GreenTea hand off eligible call, will leave shortly if handoff not completed
[WARN] GreenTea device leaving handoff conversation after timeout
[WARN] Conversation already contains participant with no change in AVC data: %@
Removing participants for member: %@ on conversation UUID: %@ participants: %@
setParticipantAudioVideoMode:forParticipant: Failed to find participant %@ on conversation %@
Removing participant with identifier: %lu  handle: %@ withReason: %@
 Found matching handle %lu: %@
Removing splitSessionSecondary: %@
Leaving conversation because lightweightPrimary left on conversation UUID: %@ participant: %@ localMember: %@
Local participant %llu was associated with participant %@ who is now being removed. Clearing local participant association.
Remote participant %llu was associated with participant %@ who is now being removed. Clearing participant association for %llu.
No active remote participants left, requesting to move back to oneToOne=0
[WARN] removeParticipantWithIdentifier:fromHandle: Not removing participant handle (%@) didn't match, with identifier %lu: %@
[WARN] removeParticipantWithIdentifier:fromHandle: Could not find participant with identifier %lu: %@
Adding virtual participant: %@
Trying to add virtual participant for plugin %@ with different identifier %llu: %@
Removing virtual participant: %@
[WARN] Trying to remove virtual participant for plugin %@ with different identifier %llu: %@
[WARN] Could not find virtual participant for plugin %@: %@
conversation: %@ remove remoteMembers triggeredLocally: %d
UUID: %@ remove remoteMembers: %@
[WARN] No members were removed to conversation: %@
addRemoteMembers - UUID: %@ groupUUID: %@ remoteMembers: %@ triggeredLocally: %d
addRemoteMembers - UUID: %@ otherInvitedHandles: %@
addRemoteMembers - UUID: %@ invitationPreferences: %@
Handle is part of remoteMembers list, but trying to add them as part of LMI. Allowing this handle to be added: %@
Handle %@ should be considered for addition as an invited member handle if not kicked
Conversation UUID %@ already contains member with handle %@, filtering out.
[WARN] No new members were added to conversation UUID: %@
Updating member validation source for: %@ to source: %ld
Found member to update validation state: %@
We found an activity originated from now validated member %@ updating activity
Couldn't find member %@ to update validation source for
add pendingMembers: %@ triggeredLocally: %d
Conversation UUID %@ already contains pending member with handle %@, filtering out from addition list.
remove pendingMembers: %@ triggeredLocally: %d
Conversation with UUID %@ does not have pending member with handle %@, filtering out from removal list.
[WARN] Ignoring new link %@ as conversation link already set to %@
Link on conversation UUID %@ was already set to %@, but this setting allows for updates, setting the link name to %@, the expiration date to %@, and the invited handles to %@
leaveActivitySessionWithUUID: %@
[WARN] Dropping request to remove activitySession because Expanse features are disabled. Please enable the "expanseEnabled" feature flag in TelephonyUtilities.
Finding activitySession with UUID: %@ to present dismissal alert
Session dismissal alert for activitySessionUUID %@ success: %@
removeActivitySessionWithUUID: %@
Not launching screen sharing app
User chose to take no action
activitySession: %@
[WARN] Dropping new activitySession because Expanse features are disabled. Please upgrade to a later release to re-enable Expanse features.
[WARN] Dropping new activitySession because Expanse features are disabled. Please enable the "expanseEnabled" feature flag in TelephonyUtilities.
BundleID override: %@
Attempting to create Activity with trustedFromHandle: %@ on trusted lightweight member: %@. Overriding to lightweightPrimary. %@
isLightweightPrimaryInitiated: %d
Not launching app for locally started activity %@
Asked to create staged activitySession for activity: %@
[WARN] Failed to create staged activitySession since we can't replace an activitySession with a staged activitySession.
Skipping staging activity %@
Successfully created staged activitySession: %@
Attempting to set staged activitySession: %@
Trusted from handle %@ not found in membership list for activitySession ID: %@ on conversation %@
Not launching app as we are not joined into this conversation
Not launching app as SharePlay is not allowed
[WARN] Activity with identifier %@ is missing application context.
Not launching app for system activity: %@
Not launching app as we are not in an eligible activitySession state: %@
Not launching app as the activitySession has already been joined: %@
Request to launch %@ for conversation with UUID: %@ allowing auto-launch: %@
Attempting to launch app in background w/ PiP
Launched pip for activity %@ error %@
Found locally initiated screen sharing activity session %@, ending session
Trying to setup new AVCSession without tearing down previous session first.
avcSessionCreationBlock
Joining CSDConversation self: %@ context: %@
CSDConversationJoinContext is configured with none AV mode while video is enabled: %@
GreenTea devices are not supported for this conversation with UUID: %@
Copying invitation preferences to locally-created conversation from join context: %@
Bypassing AVCSession creation because localMember is lightweight %@
Creating CSDAVCSession with transport token %@
This device is joining a U+1 FaceTime call to complete a handoff from a different participant, setting oneToOneModeEnabled to NO.
Created CSDAVCSession %@
Not joining IDS group session because wantsStagingArea is true, instead moving to preparing state
Failed to create CSDAVCSession
[WARN] Not joining conversation because it isn't waiting or preparing: %@
[WARN] Not sending local participant data, no AVCSession: %@
Requested to mark conversation as audioReady UUID: %@ audioReady: %d audioPaused: %d audioEnabled: %d
[WARN] Not starting audio for conversation because it isn't joining/joined: %@
[WARN] Not starting audio for conversation because avmode is .none %@
self UUID: %@
Leaving CSDIDSGroupSession: %@
Conversation participants support leave context: %@
[WARN] Not leaving conversation because it isn't joining/joined: %@
Kicking member on conversation UUID: %@ member: %@
Aliased session %@ to %@ for bundle identifier %@
Not enforcing shareplay version check due to server over-ride
[WARN] One or more participant on %@ is on an older share play protocol %@ version %@
[WARN] Not joining IDS session as state (%tu) is not joining on conversation: %@
Sending U+1 join context to subset of participants: %@
idsSessionJoin
AVAudioClient not set up yet, delaying adding participant to AVCSession: %llu
Adding participant to AVCSession now that AVAudioClient is set up: %llu
Not adding participant %llu to AVCSession now that AVAudioClient is set up because they're already in the AVCSession
Starting %@
avcSessionStart
Skipped starting session since session start is already in progress %@
Skipped starting session since isJoined:%@ audioReady:%@ isRelaying:%@ isAVLess:%@ isLocalParticipantNormal: %@
[WARN] Timed out waiting for session to stop after %@, moving to waiting state and cleaning up.
Timed out waiting for conversation to leave, but it's not in state leaving (instead is in %i).
Timed out requesting AVC blob for participant with identifier: %@
Replacing existing recovery timeout for participant with identifier %@
Setting up AVC blob recovery timeout for participant with identifier %@
Cancelling in flight AVC blob recovery for participant with identifier %@
Pruning remote participants as necessary, current server identifiers: %@
_stableExpanseIdentifier %@ for %@ 
Checking if oneToOne->1 downgrade available with state: %tu oneToOneMode: %d remoteMembers.count: %lu activeRemoteMembersCount: %lu useDelay: %d
Screen sharing has ended but not requesting to move back to U+1 mode since localDowngradeAvailable:%d remoteDowngradeAvailable:%d
Delayed downgrade triggered, checking if we're still eligible
Screen sharing has ended and we only have 1 remote participant, requesting to move back to U+1 mode
Did not retrieve a route identifier for participant identifier %llu
Retrieved route identifier %@ for participant identifier %llu
didJoinGroup: %d error: %@
Joining conversation without AVC session for lightweight device
Failed to join group: %@
didLeaveGroupWithError: %@
CSDIDSGroupSession %@ failed to leave group for conversation UUID %@: %@
endedWithError: %@ reason: %d
Kicked from the conversation, cleaning up
Unknown participant added whle in lockdown mode, cleaning up
Invalidating cached conversation: %@, no remote active participants were found.
Activating cached conversation with UUID: %@ since %lu remote participants were still found to be active.
Found cached pending-participant, adding as active-participant, csdParticipant: %@
Requested audio/video mode changed for conversation %@ failed with error %@
We've changed participant types to type: %d but our AVMode is: %lu. Not performing client side interaction for mismatched types
Stopping session since local participant type is Lightweight avcSessionInProgress %@ avcSession: %@
Downgraded from AV -> AVLess, but didn't have AVCSession yet. Creating an AVCSession.
Rebroadcasting AVC data to other members of this group to since we transitioned to lightweight and setup a new AVCSession.
Starting session since local participant type is Normal
didReceiveKickedParticipantIDs: %@
When kicking participantID %@ we found participant %@ with no member in %@
updating kickedMembers to %@
updating pendingAllowedMembers to %@
[WARN] didReceiveKickedParticipantIDstype: %hu unexpected
Retrying kicked members: retries: %lu pendingKickedMembers: %@
Retrying allowed members: retries: %lu pendingAllowedMembers: %@
[WARN] Not retrying to kickMembers, max retry count (%lu) reached
[WARN] resetting state, IDSGroupSessionMemberManagementCode: %d
didReceiveDataBlob for participant: %@
[WARN] Not processing didReceiveDataBlob because unable to create handle from URI: %@
[WARN] Not processing didReceiveDataBlob because have pendingKickedMember with same identifier: %llu
[WARN] Not processing didReceiveDataBlob because have kickedMember with same handle: %@
didReceiveDataBlob adding as active-participant, csdConversationParticipant: %@
didReceiveDataBlob caching as pending-participant, csdConversationParticipant: %@
didReceiveData dataType: %u for participant: %@
Dropping unexpected data blob with type: %u
didReceiveServerErrorCode: %u
Couldn't find activitySession, not reporting serverErrorCode event.
AVCProviderEndReason=%d error.code=%d detailedError=%d
AVCProviderEndReason=%d, this should not happen
No error with a failed start from AVC using %d
Found expectedVideoEnabled: %@, updating value to match state
didStart: %d error: %@
Not in the joining state so not moving to joined
Failed to start CSDAVCSession: %@
CSDAVCSession failed to start while we're already leaving a U+1 call. Treat this as a leave and clean up the conversation
CSDAVCSession failed to start, but there is no error, Ignoring the start failure and leaving conversation intact
didDetectError: %@
Rebroadcasting AVC data to other members of this group to attempt to recover from error (last rebroadcast time was %f).
Not attempting to rebroadcast message since state was not in join (was %d)
CSDAVCSession didStopWithError: %@
AVCSession %@ stopped in failure for conversation UUID %@: %@
AVCSession %@ stopped for remote hangup. Ignoring this signal.
AVCSession %@ stopped, cleaning up IDSSession state
CSDAVCSession stopped for downgrade to AVModeNone, setting up new not started AVCSession
Setting GFT conversation back to default state of video=1
CSDAVCSession %@ server did disconnect for conversation UUID %@
Detected AVCSession server disconnect, but we're in AVLess. Re-creating an AVCSession and re-distributing blob.
changedLocalAudioEnabled=%d
Failed to set localAudioEnabled (%d): didSucceed (%d): error: %@
Audio was set to audioEnabled: %d self.expectedAudioEnabled.boolValue: %@. Setting audioEnabled to self.expectedAudioEnabled.boolValue
changedLocalVideoEnabled=%d
Failed to set localVideoEnabled (%d): didSucceed (%d): error: %@
[WARN] Skipping to set localVideoEnabled (%d) error: %@
Video was set to videoEnabled: %d self.expectedVideoEnabled.boolValue: %@. Setting videoEnabled to self.expectedVideoEnabled.boolValue
changedScreenEnabled=%d
Failed to set screenEnabled (%d): didSucceed (%d): error: %@
Screen was set to screenEnabled: %d self.expectedScreenEnabled.boolValue: %@. Setting screenEnabled to self.expectedScreenEnabled.boolValue
changedLocalAudioPaused=%d
Failed to set localAudioPaused (%d): didSucceed (%d): error: %@
Audio paused was set to audioPaused: %d self.expectedAudioPaused.boolValue: %@. Setting audioPaused to self.expectedAudioPaused.boolValue
changedLocalVideoPaused=%d
Failed to set localVideoPaused (%d): didSucceed (%d): error: %@
Video paused was set to videoPaused: %d self.expectedVideoPaused.boolValue: %@. Setting videoPaused to self.expectedVideoPaused.boolValue
changedOneToOneModeEnabled=%d
oneToOneModeEnabled is disabled because a 3rd participant that joined is replacing another participant for handoff
User requested videoPaused=true in a U+1 call, since we're moving out of U+1 state, setting videoEnabled=false for parity
changedBytesOfDataUsed=%ld
sessionShouldReconnect=%@
Skipping reconnect since one to one mode is disabled
[WARN] Unknown participant with identifier: %llu
[WARN] All active participants in the call are not on minimum supported shareplay version
Conversation screen sharing about to change to screen enabled: %@ conversation: %@ 
 participant: %@
[WARN] Stopping screen on local device since one of the remote participants sharing their screen %@
Resetting non screen sharing sessions as one of the remote participants started screen sharing %@
[WARN] Stopping screen on local device capture failed to start for conversation UUID: %@
[WARN] Unknown participant with identifier: %llu activeRemoteParticipants: %@
Updating screenEnabled on all remote participants to: %@
sharePlayAllowedStateChanged: %@
Stopping screen on local device since route does not support share play
Leaving activity session for screen sharing since route does not support share play
user requested to switch to speaker route
Did get session unjoined callback startDate %@ endDate %@ session %@
CSDConversation setting appLaunchState to needsLaunch %@
CSDConversation received activity session removed: %@
CSDConversation associated scene changed for %@
Ignoring %@ message because we already have a call with this uniqueProxyIdentifier: %@
We already have a call for this %@ message: %@. Updating it with new values
Creating new call for %@ message
[WARN] Ignoring %@ message because no call exists for %@ and the message is not from the paired device
[WARN] Could not find call with uniqueProxyIdentifier %@. All current calls: %@
Call answered elsewhere message had no uniqueProxyIdentifier set. Using current calls
Resetting call %@ with protoCall %@
Not resetting call %@ with protoCall %@ because they are equal
Creating new call with protoCall %@
Existing call no longer exists and is not sending: %@
handleUpdateRemoteCallStateMessageFromHost %@
Updating call %@ with protoCall %@
Not updating call %@ with protoCall %@ because they are equal
[WARN] Received %@ message, but we already have some calls
Ignoring %@ because messageSendTime (%f) <= call.remoteUplinkMutedSetTime (%f)
Pulling remotely hosted call: %@
Failed to prepare conference for pull message %@ and call %@
Fetching localSenderIdenity for localSenderIdentityAccountUUID %@
Replacing hardPauseDigits '%@' with '%@' since protocolVersion is %d
Replacing soundRegion %ld with %ld since protocolVersion is %d
Created pause digits queue: %@
Setting disconnected reason to dial failed because call is outgoing but has not started outgoing
Setting disconnected reason to remote hangup because ended reason is %ld
Setting disconnected reason to remote hangup because call has started connecting and ended reason is %ld
Setting disconnected reason to remote hangup because outgoing call has not started connecting and ended reason is %ld but call is a telephony call
Setting disconnected reason to remote unavailable because outgoing call has not started connecting and ended reason is %ld
Setting disconnected reason to answered elsewhere because ended reason is %ld
Setting disconnected reason to declined elsewhere because ended reason is %ld
Setting disconnected reason to handed off because ended reason is %ld
Setting disconnected reason to user busy because ended reason is %ld
Setting disconnected reason to call failed because failure reason is %ld
Setting disconnected reason to account unsupported because failure reason is %ld
Setting disconnected reason to network unsupported because failure reason is %ld
Setting disconnected reason to provider crashed because failure reason is %ld
Setting disconnected reason to media start failed because failure reason is %ld
Setting disconnected reason to media server crashed because failure reason is %ld
Setting disconnected reason to other secondary device in use because failure reason is %ld
Setting disconnected reason to kicked because failure reason is %ld
Setting disconnected reason to rejected because failure reason is %ld
Setting disconnected reason to invalid conversation link because failure reason is %ld
Setting disconnected reason to conversation links disabled because failure reason is %ld
Setting disconnected reason to no destinations available because failure reason is %ld
Setting disconnected reason to unknown participant added because failure reason is %ld
Setting disconnected reason to call failed because ended reason is %ld
International status is false; service provider ISO country code is not available.
International status is false; celluar network ISO country code is not available.
Failed to find a call source to dial with for dial request: %@
CSDProviderCall joinConversationWithRequest: %@
LMI: FT Provider: %@ Sender identities: %@
Join request specifies invitation preferences: %@
attributes: %@
AVAudioSession muteSessionInput: %d for %@
Failed AVAudioSession muteSessionInput error: %@
for call: %@ pauseDigitsQueue: %@
[WARN] Next pause digits are not hard pause
[WARN] No next pause digits exist
for call: %@ key: %d
for call: %@ remoteVideoPresentationSize: %@
for call: %@ remoteVideoPresentationState: %d
Dequeueing next pause digits
Sending pause digits: %@ type: %ld
Found queued soft pause digits: %@
for pauseDigitsQueue: %@
[WARN] Symbolic link found for URL %@
[WARN] Could not determine source file for URL %@
[WARN] Not copying generic image
[WARN] Could not determine destination file for URL %@
Creating sandbox extension directory '%@' failed with error %@
Copying URL '%@' to filename '%@'failed with error %@
Releasing sandbox extension handle
Break before make timeout: %lfs
Not handling call status changed notification for object that is not CSDCall: %@
Removing image files failed with error %@
Determined wants break before make is %@ (supportsSimultaneousVoiceAndData: %@, nonWifiFaceTimeAvailable: %@, wiFiActiveAndReachable: %@) for call %@
Could not determine whether device wants break before make; could not obtain sender identity capabilities for call %@
Could not determine whether device wants break before make; could not obtain local sender identity for call %@
Call started outgoing: %@
Disconnecting video call because another call started outgoing: %@
Disconnecting call using the baseband because a video call started outgoing and wantsBreakBeforeMake=YES: %@
All calls ended. Setting uplink and downlink muted to NO
Call started connecting: %@
Leaving converstion since we have call that is getting connected: %@
%@ is handling %@
Pulling relaying calls from client since one to one mode changed for relaying calls
Call upgraded to video: %@
Video call connected: %@
Requesting to disconnect all calls besides: %@
Disconnecting call because it is not compatible with call: %@
Ending current active call %@ because call %@ is going to go active
Reporting emergency call to screen time
There was an error enabling emergency mode. Enabled successfully (%d) Error: %@
Posting CLTM notification %@ and setting state to %llu
Requesting to pull call %@ because its continuity state is different from call %@
Disconnecting call %@ because its continuity state is different from call %@
An endpointIDSDestination %@ is present for call %@ so pushing all hosted calls to that destination
An endpointRapportMediaSystemIdentifier="%@" or endpointRapportEffectiveIdentifier="%@" is present on dial request for call %@ so attempting to pick matching route
Setting up break before make timeout for call: %@
Disconnecting call because video call is still sending and break before make timeout fired: %@
CarPlay is not connected; muting uplink for RTT call %@
CarPlay is connected; unmuting uplink for RTT call %@
Setting uplink muted for TinCan call %@
Starting ringing timer for call with identifier %@
Exceeded ringing duration of %llu seconds; disconnecting call with identifier %@
[WARN] Store demo mode enabled. Limiting certain calls
Starting call duration limit timer as we are in a retail environment
Stopping call duration limit timer
Disconnecting restricted calls because the limited call duration timer fired: %@
Found active call needing hold music: %@
Hold music enabled - call is active so muting uplink and downlink
Hold music disabled - unmuting uplink and downlink
Disconnecting all calls since we have an AVLess conversation that is Joined: %@
handleUserInteractionWithBlock: shouldOpenInCallService: %d shouldDisplaySystemCallControls: %d callUUID: %@
updating descriptor old: %{public}@ new: %{public}@
TUOpenURLWithCompletion result: %@, error: %@
Encountered error while opening URL: %@
Background launching application with bundle identifier %@
Foreground launching application with bundle identifier %@
Successfully launched application with bundle identifier %@
Attempt to open application with bundle identifier %@ failed with error %@
XPC connection invalidated from client %@
Approval client enabled: %d, %@
Client deregistered itself as split-session approver
Ignoring deregistration; sender is not current approver
No session approval clients registered
Split session approval client: %@
Approval client unexpectedly nil!
Retrieving subscription information failed with error %@ for %@.
added service provider uuid=%@ carrierPhoneNumbers=%@
Retrieved carrier phone number '%@' for subscription %@
Retrieving carrier phone number for subscription %@ failed with error %@
Carrier bundle changed for subscription context %@.
Subscription info changed
Creating IDSGroupSession with options: %@
preferences: %@
options: %@
participantDestinationIDs: %@ contextData: %@ triggeredLocally: %d
participantDestinationIDs: %@ contextData: %@ requiredCapabilities: %@ requiredLackOfCapabilities: %@ triggeredLocally: %d
Sending participantData: %@
Leaving with options: %@
session: %@
session: %@, options: %@
session: %@, requestDataCryptor: %@
session: %@, requestEncryptionKeyForParticipants: %@ topic: %@
session: %@, setRequiredCapabilities: %@ requiredLackOfCapabilities: %@
session: %@, removeRequiredCapabilities: %@ requiredLackOfCapabilities: %@
session: %@, addAliasesToConversationContainer: %@ salt: %@
session: %@, participantIDForAlias: %llu salt: %@
session: %@ doesn't support async participantID fetching, falling back to sync form.
session: %@ updating participant type: %hu destinations: %@
self: %@ not running pending blocks yet because self.hasStarted=%d self.hasReceivedAccept=%d self.isInitiator=%d
self: %@ running block %@ with transport %@ and %@ accept payload data
self: %@ pending block on transport availability: %@
[WARN] Transport availability block timed out: %@
sendData self: %@
Session %@ is not connected and waitUntilConnected is YES. Pending data
Session %@ is not connected but waitUntilConnected is NO. Sending data
Session %@ is connected. Sending data
Session %@ is ending/ended. Dropping data on the floor
self: %@ destinations: %@
Session %@ is waiting. Sending data
Session %@ is not waiting. Dropping data on the floor
self: %@ data: %@
Setting session %@ to ending for prepareToEnd
Not setting session %@ to ending for prepareToEnd because session is not connected
Received invitation ACCEPT with data for session %@ from (fromID=%@) destination %@ device %@
Received invitation CANCEL with data for session %@ from (fromID=%@) destination %@ device %@
Received invitation DECLINE with data for session %@ from (fromID=%@) destination %@ device %@
Received session MESSAGE for session %@ from (fromID=%@) destination %@ device %@
Recent calls deleted: %@
thumperCallingAllowedOnDefaultPairedDeviceDefault keyExists: %d isAllowed: %d
Setting %@ default to %d
Error synchronizing NPS defaults: %@
Dismissing Thumper available notification on secondary device for account ID %@
Displaying Thumper enabled disclaimer on secondary device for account ID %@
Dismissing Thumper enabled disclaimer on secondary device for account ID %@
Could not obtain Thumper account identifier for sender identity UUID %@ from data source capabilities state %@
Comparing cached Thumper capabilities state %@ with data source capabilities state %@
Should show Thumper available notification for account ID %@
Default paired device unique ID was %@ and is now %@
Check if devices should be enrolled now that the default paired device changed.
Checking to see if any devices have been removed from this iCloud account.
Device with the uniqueID %@ will be unpaired from Thumper because it is no longer on the IDSService.
%@ is handling add capabilities for sender identity UUID %@
Thumper calling preferences update initiated by add capabilities for sender identity UUID %@
Skipping Thumper preferences update; Thumper capabilities state does not exist for UUID %@
%@ is handling remove capabilities for sender identity UUID %@
Thumper calling preferences update initiated by remove capabilities for sender identity UUID %@
Skipping Thumper calling preferences update; unknown context info found for sender identity UUID %@
%@ is handling change Thumper calling capabilities for sender identity with UUID %@
Show a reminder to the user that thumper is now available.
User requested to Turn On Thumper calling
[WARN] Not adding user notification because we are already displaying one
Removing existing reminder notification
Show a disclaimer to the user about their emergency address info now that thumper is enabled.
Emergency Address disclaimer: Preferences button pressed, open URL (%@).
Removing existing emergency address disclaimer
Archiving Thumper capabilities state object failed with error %@
Unarchiving Thumper capabilities state object failed with error %@
Archived object was of unexpected class %@: %@
Prefereces object was of unexpected class %@: %@
Initializing %@
FaceTime Audio availability is %ld. FaceTime Video availability is %ld
Initialized %@
Active accounts changed for service %@: %@
Received caller ID changed notification: %@
Received service availability changed notification: %@
Received devices changed notification: %@
FaceTime iCloud account is %@ (isActive=%d, profileID=%@) and relay iCloud account is %@ (isActive=%d, profileID=%@)
FaceTime caller ID %@ is not a valid outgoing relay caller ID
Attempting to find a valid outgoing caller ID in set of available outgoing caller IDs %@
Selected outgoing caller ID %@ from list of available outgoing caller IDs %@
Could not automatically select an outgoing caller ID; multiple telephone numbers are listed in the set of available outgoing caller IDs %@
Attempting to find a valid outgoing caller ID in list of vetted account aliases %@
Selected outgoing caller ID %@ from list of vetted account aliases %@
Could not automatically select an outgoing caller ID; multiple telephone numbers are listed in the set of vetted account aliases IDs %@
Outgoing Caller ID is %@
streamPreferences: %@
XPC connection invalidated from client %@ for CSDConversationProviderManagerXPCServer
Leaving since client got invalidated conversation: %@
deallocing ProviderManagerXPCServer
invalidating ProviderManagerXPCServer
conversationProviderForIdentifier: %@
generatePseudonymHandleForConversationProviderURI: %@
renewPseudonymHandle: %@
revokePseudonymHandle: %@
doesHandleCorrespondToConversationProvider: %@
registerForCallbacksForProvider received over XPC with providerIdentifier: %@ client: %@
registerConversationProvider received over XPC with provider: %@
clientCapabilities: %@
callProviderIdentifier: %@
dialRequest: %@
Could not determine UUID for FaceTime app bundle identifier %@
Setting disconnected reason to call failed because invitation was sent but no push tokens were available to receive the invitation for call %@
Setting disconnected reason to call failed because CSDIDSDualSession ended reason is %ld for call %@
Using call ended reason answered elsewhere because CSDIDSDualSession ended reason is %ld
Using call ended reason declined elsewhere because CSDIDSDualSession ended reason is %ld
Using call ended reason unanswered because CSDIDSDualSession ended reason is %ld
Using call ended reason remote ended because CSDIDSDualSession ended reason is %ld
Setting disconnected reason to call failed because CSDAVConference ended reason is %ld for call %@
Using call ended reason remote ended because CSDAVConference ended reason is %ld
Setting local portrait aspect ratio %@ and local landscape aspect ratio %@
[WARN] Disabling key exchange because %@ default is set to YES
videoAspectRatioDescriptor: %@
Canceling session
Declining session
end self: %@
Stopping conference
Ending session
for call %@
Setting isSendingAudio to %d for chat %@
Conference has not been created yet. Updating shouldStartAudioPaused to %d
Setting isSendingAudioData to %d for chat %@
Setting isSendingVideo to %d for chat %@
Conference has not been created yet. Updating shouldStartVideoPaused to %d
Setting relaying from %d to %d for chat %@
transport: %@
sessionStarted: %@
[WARN] Not starting connection because the chat is not allowed to start media: %@
Not starting connection because conference state is %d
session %@ invitationSentToPushTokens %@ shouldBreakBeforeMake %d
session %@ endedWithReason %d
session %@ receivedInvitationAcceptWithData %@
[WARN] Dropping invitation accept since the chat is not allowed to start media: %@
[WARN] Ignoring invitation accept since chat is incoming: %@
[WARN] Ignoring invitation accept since there is no remote from ID set on the session.
Dropping invitation accept since there is no remote push token provided.
Dropping invitation accept since the remote push token was not one of the ones we invited.
[WARN] Ignoring incoming accept since accompanying message was nil
[WARN] Ignoring incoming message since message with type=%@ was not invite.
Error while creating UUID from protoUUID: %@
[WARN] Not setting upgradeSessionUUID for message: %@ self.upgradeSessionUUID: %@
Not starting connecting because session state is %d and conference state is %d
session %@ receivedInvitationDeclineWithData %@
session %@ receivedInvitationCancelWithData %@
session %@ receivedData (data is %@)
message: %@
[WARN] First frame not received after %f seconds for %@
reason=%ld error=%@
Remote media stalled for chat: %@. Reconnecting IDS session.
Device first unlock block invoked, initializing CXCallDirectoryManager...
XPC activity checked in. Criteria: %@
Setting activity state to XPC_ACTIVITY_STATE_CONTINUE
Error setting activity state to XPC_ACTIVITY_STATE_CONTINUE
Beginning daily maintenance with activity %@
Successfully compacted store
Error compacting store: %@
Setting activity state to XPC_ACTIVITY_STATE_DONE
Error setting activity state to XPC_ACTIVITY_STATE_DONE
Error synchronizing call directory extensions: %@
Successfully synchronized call directory extensions
Extensions changed for Call Directory NSExtensionManager %@, but we do not have a CXCallDirectoryManager (perhaps because device is not yet unlocked) so cannot synchronize
isDestinationIDAllowedThroughDoNotDisturb: provider=%@
isDestinationIDAllowedThroughDoNotDisturb: bundleID=%@
isDestinationIDAllowedThroughDoNotDisturb: eventDetails=%@
[WARN] Error encountered resolving behavior via DND. Defaulting isDestinationIDAllowedThroughDoNotDisturb to YES. error=%@
Terminating relay call that we don't have a relay session for: %@
Handling %@ by preparing connected sessions to end
Handling %@ by ending ending sessions
CSDMessagingCallMessage could not be read
Handling %@ with message: %@ latency: %llu
CSDMessagingCallMessage is of unsupported type: %d
Updating dialingIDSDevice using device list %@
A paired device exists, so using that as the dialing device: %@
[WARN] We found two devices with matching linkedUserURIs (arbitrarily choosing the first): %@ and %@
A device exists with a linkedUserURI that matches Caller ID %@, so using that as the dialing device: %@
[WARN] Could not find a dialingIDSDevice. No paired devices exist and no devices that support phone calls and have a linkedUserURI for %@ exist.
Could not retrieve local invite dictionary for message: %@
(IDSMessaging Host->Client) sendIncomingCallMessageToClientForCall: %@
Call cannot be answered. Only notifying the paired device
[WARN] Failed to prepare conference for call %@. Not sending incoming call message to relay clients
Not sending out incoming call invitation because call is no longer ringing: %@
(IDSMessaging Host->Client) sendCallDialedMessageToClientForCall: %@
(IDSMessaging Host->Client) sendCallAnsweredElsewhereMessageToClientForCall: %@
(IDSMessaging Host->Client) sendCallDisconnectedMessageToClientForCall: %@
(IDSMessaging Host->Client) sendCallConnectedMessageToClientForCall: %@
(IDSMessaging Host->Client) sendResetWantsHoldMusicMessageToClientForCall: %@
(IDSMessaging Host->Client) sendUpdateCallDisplayContextMessageToClientForCall: %@
(IDSMessaging Host->Client) sendUpdateFailureExpectedMessageToClientForCall: %@
(IDSMessaging Host->Client) sendUpdateSupportsEmergencyFallbackToClientForCall: %@
(IDSMessaging Host->Client) sendUpdateRemoteUplinkMutedCallMessageToClientForCall: %@
(IDSMessaging Host->Client) sendUpdateSupportsTTYWithVoiceCallMessageToClientForCall: %@
(IDSMessaging Host->Client) sendUpdateCallModelMessageToClientForCall: %@
(IDSMessaging Host->Client) sendDeviceUnavailableMessageToClient
(IDSMessaging Host->Client) sendPullRelayingCallsMessageToClient
(IDSMessaging Host->Client) sendResetStateMessageToClient
(IDSMessaging Host->Client) sendHardPauseAvailabilityMessageToClientForState %d digits: %@
(IDSMessaging Host->Client) sendUpdateRemoteCallStateMessageToClient
(IDSMessaging Host->Client) sendCallStartedConnectingMessageToClientForCall: %@
(IDSMessaging Host->Client) sendDialCallFailedForUniqueProxyIdentifier: %@
(IDSMessaging Host->Client) sendDialCallFailedForScreenTimeForUniqueProxyIdentifier: %@
(IDSMessaging Host->Client) sendPushCallsMessageToClientDestination: %@
Allowing call: %@ to be pushed to destination: %@
Skipping call: %@ to track for pushing to destination: %@
Found no calls to send sendPushCallsMessageToClientDestination
(IDSMessaging Host->Client) Sending UpdateCallContext message: %@
(IDSMessaging Host->Client) sendNeedsManualInCallSoundsChangeMessageToClientForCall: %@
(IDSMessaging Host->Client) sendInvitationSentMessageToClientForCall: %@
(IDSMessaging Host->Client) sendUpdateRoutesMessageToClientForRoutes: %@
(IDSMessaging Client->Host) sendDialCallMessageToHostForCall: %@
No dialing IDS device found. If we aren't already in a session, this dial call attempt will fail.
Failed to prepare conference for call %@. Disconnecting call with conference failed
Not sending out dial call invitation because call is no longer sending: %@
(IDSMessaging Client->Host) sendAnswerCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendDisconnectCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendHoldCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendUnholdCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendGroupCallMessageToHostForCall: %@ otherCall: %@
(IDSMessaging Client->Host) sendUngroupCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendSwapCallsMessageToHost
(IDSMessaging Client->Host) sendEndActiveAndAnswerCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendEndHeldAndAnswerCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendHoldActiveAndAnswerCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendDisconnectCurrentCallAndActivateHeldToHost
(IDSMessaging Client->Host) sendDisconnectAllCallsToHost
(IDSMessaging Client->Host) sendSendHardPauseDigitsMessageToHost
(IDSMessaging Client->Host) sendRequestCallStateMessageToHost
(IDSMessaging Client->Host) sendPullCallsMessageToHost
[WARN] Failed to prepare conference while pulling calls
(IDSMessaging Client->Host) sendPushRelayingCallsMessageToHostForSourceIdentifier: %@
(IDSMessaging Host->Client) sendUpdateRemoteUplinkMutedCallMessageToHostForCall: %@
(IDSMessaging Host->Client) sendPickRouteMessageToHostForRoute: %@
(IDSMessaging Client<->Host) sendSetTTYTypeCallMessageForCall: %@ ttyType: %d
(IDSMessaging Client<->Host) sendSetUplinkMutedCallMessageForCall: %@ uplinkMuted: %d
(IDSMessaging Client<->Host) sendSuppressRingtoneMessageForCall
(IDSMessaging Client<->Host) sendUpdateSystemVolumeForCall: %@
[WARN] We determined that device is null and destination: %@ is not guest. Ignoring incoming message: %@
Handle incoming %@ message: %@
[WARN] We determined that device: %@ cannot process messages for provider %@. Ignoring incoming message: %@
[WARN] Screen Time restricted the call for dial call message with destinationID %@ and provider: %@ is emergency: (%d)
[WARN] Ignoring %@ relay message since our device does not suppport processing messages of that type.
Messaging device can't receive relayed calls ...
... and we were told to decline the session invite. Declining incoming %@ message: %@
... and we were told not to decline the session invite. Ignoring incoming %@ message: %@
[WARN] Setting should ignore session to YES for %@ message because message is from a guest destination and this device is not an AudioAccessory
Query result: %@ for handle: %@ provider: %@
[WARN] Setting should ignore session to YES because TUICFInterface allowCall = NO for destinationID %@ and provider %@
[WARN] Setting should ignore session to YES because a call exists with sending status: %@
[WARN] Setting should ignore session to YES because screen time filtered message for destinationID %@ and provider %@ with emergency (%d)
[WARN] Setting should ignore session to YES because relay is not preferred, message provider is Telephony, and isDirectTelephonyCallingCurrentlyAvailable is YES
[WARN] Setting should ignore session to YES because relay is not preferred, message provider is FaceTime Audio, and isDirectFaceTimeAudioCallingCurrentlyAvailable is YES
[WARN] Setting should ignore session to YES because relay is not preferred, message provider is FaceTime Video, and isDirectFaceTimeVideoCallingCurrentlyAvailable is YES
[WARN] Setting should ignore session to YES because relay is not preferred, message provider is TinCan, and isDirectFaceTimeAudioCallingCurrentlyAvailable is YES
[WARN] Setting should ignore session to YES because no calls exist with an endpoint on the current device: %@
Launched by IMDaemon notification
Launched by application installed notification
Launched by application uninstalled notification
Could not create notification for XPC event %@
Caught SIGINFO. Dumping debug info.
Caught SIGUSR1
Caught SIGUSR2
Created call center: %@
Performing user configuration migration
Did not find default to enable LivePhotoXPCService - using old moments stack
Initialized CSDDaemon
Calling xpc_transaction_exit_clean() due to language change
failed to initialize temporary directory (%d): %s
failed to resolve temporary directory (%d): %s
User configuration changed
Used country code '%@' to determine international phone number representation: %@
Determined that invite should be %@ - (isWiFiAvailable=%d isWiFiAllowed=%d isCellularDataAvailable=%d isCellularDataAllowed=%d shouldOverrideNetworkAsAvailable=%d)
Invite received for service %@ account %@ from (fromID=%@) with context: %@
Recieved pending message of type %ld
Incoming call was denied with error %@ so ignoring chat: %@
Not handling pending message of type: %ld
Invite received for session %@ account %@ from (fromID=%@) with data: %@
Declining this invite because we found a sending chat with the same destination: %@
Incoming call was denied with error %@ so declining chat: %@
Ignoring incoming invite since shouldAcceptIncomingInvite is %d
Ignoring incoming invite since message with type=%@ was not an invite.
[WARN] Ignoring incoming invite since accompanying message was nil
Calling answer on chat %@
Not accepting invitation to call %@ since it is already Connected
Calling end on chat %@
Setting sendingAudio to YES for chat %@
Setting sendingAudio to NO for chat %@
Chat with matching UUID connected; attempting to fulfill pending answer call action %@
Chat did not provide a connection date; Failing answer call action %@
Failing answer call action for call because it disconnected before connecting: %@
[WARN] called for session %@ that was not the initiator (%d) or that already had a version set (%d)
sendInvitation self: %@
Session %@ is waiting. Sending invitation
Session %@ is not waiting. Not sending invitation
acceptInvitation self: %@
Session %@ is waiting. Accepting invitation
Session %@ is not waiting. Not accepting invitation
cancelInvitation self: %@
Session %@ is waiting. Canceling invitation
[WARN] Asked to cancel invitation with non-nil data and a concrete cancel reason, but that combination is unsupported
Session %@ is not waiting. Not canceling invitation
declineInvitation self: %@
Session %@ is waiting. Declining invitation
Session %@ is not waiting. Not declining invitation
reconnectSession self: %@
Session %@ started (shouldUseSocketForTransport: %d socket: %d, destination: %@)
Received invitation SENT for session %@ with tokens %@ shouldBreakBeforeMake %d
Session %@ ended with reason %d: %@
Session %@ appears to have ended with an unanswered reason: %d
Session %@ appears to have ended with a local hangup reason: %d
Session %@ appears to have ended with a remote hangup reason: %d
Session %@ appears to have ended with an accepted elsewhere reason: %d
Session %@ appears to have ended with a declined elsewhere reason: %d
Session %@ appears to have ended with a fatal reason: %d
Session %@ appears to have ended due to mismatched networks reason: %d
Received invitation ACCEPT with data for session %@ from %@
Received invitation CANCEL with data for session %@ from %@
Received invitation DECLINE with data for session %@ from %@
Received session MESSAGE for session %@ from %@
Found matching account: %@ for uuid: %@
Found matching account: %@ for uuid: %@ but it was not active and cannot be used for FaceTime.
[WARN] Server bag does not support quick relay
Server bag is not loaded. Assuming we can make a FaceTime call over quick relay
Starting FaceTime IDS chat using account: %@ destinations: %@ options: %@
Cannot start FaceTime IDS chat using handle %@ because IDS destination was '%@'
Cannot start FaceTime IDS chat using service %@ because account is not active: %@
Tried to make an outgoing call when we already had a ringing call with the same destination: %@
Requesting transaction to answer already-ringing call
Requested transaction to answer already-ringing call with UUID %@ failed with error %@
Successfully requested transaction to answer already-ringing call
[WARN] Not attempting to use IDSSession for outgoing FT call because server bag does not allow quick relay invitations
[WARN] Found a chat to upgrade: %@
Unable to convert to remoteIDSToken: %@
Unable to find existing chat for conversation: %@
Found existing chat: %@ for conversation: %@
[WARN] Failing action %@ we determined that chat %@ cannot be upgraded.
%@ Auto-upgrading because chatToUpgrade is %@, isConnected: %d, isVideo: %d, isSendingVideo: %d, isSendingAudio: %d isChatPendingUpgrade: %d
Upgrading chat: %@
Ending chat that is being upgraded: %@
[WARN] Could not find chat with UUID %@. All chats: %@
Found chat with UUID %@. Ending it: %@
[WARN] Not allowing media for chat as the call provider is not managing a call with UUID: %@
Matching sender identities %@ to IDS accounts %@
Updating FaceTime provider with configuration %@
service: %@ activeAccountsChanged: %@
Ignoring %@ because messageSendTime (%f) <= call.uplinkMutedSetTime (%f)
[WARN] Ignoring received request action message because it has a request action type we don't know how to handle: %@
transferFileAtURL: %@, destinations: %@
placing unzip results into folder %@
new directory urls: %@, unzippedDirectoryURL: %@
Error retrieving contents of directory at URL %@: %@
temporaryClientFileURL: %@, destinations: %@
Sending resource at URL %@ to destinations %@ with metadata %@
Successfully started sending resource with identifier %@
Failed to start sending resource with identifier %@: %@
%@ doesn't exist at client file url: %@
incomingResourceURL: %@ metadata: %@ fromID: %@
Copied resource to temporary URL: %@
successfully sent file with identifier: %@
failed to send file with identifier: %@, error: %@
[WARN] Unexpected nil clientFileURL for service: %@, account: %@, identifier: %@, didSendWithSuccess: %d, error: %@, clientFileURLByIdentifier: %@
Failed to copy URL at %@ to %@: %@
Failed to create directory at URL %@: %@
Error moving url %@ to %@: %@
Deleted contents at URL: %@
Failed to delete contents at URL %@: %@
Zipping directory at URL: %@, output to: %@
Error zipping directory at URL %@ to output URL %@
operation: %ld, inputURL: %@, outputURL: %@
Error occurred during IMFileCopierOperation type %ld on inputURL %@ and outputURL %@
completed operation: %ld, inputURL: %@, outputURL: %@
deleting temporary file at URL: %@
Calling fetch completion block for call source with identifier %@
Waiting for call source with identifier %@
[WARN] Timed out waiting for call source with identifier %@ to check in
[WARN] Couldn't identify device type based on model identifier (%@)
Enabling relay calling on secondary device %@.
Activating Thumper calling on secondary device %@ for telephony subscription with UUID %@.
User notification has been completed with response %lu and entered PIN %@
Showing service confirmation dialog to user
Requesting pin from iPhone
Canceling pin request from iPhone
PIN code entered with success=%d cancelled=%d
Device Pin Exchange received an incoming approval request
[WARN] We received an incoming pin code alert from a non-telephony device: %@
User tapped cancel on the Pin Display Alert
Request for pin exchange failed
[WARN] Ignoring request to group call because it is already grouped: %@
[WARN] Ignoring request to ungroup call because it isn't grouped: %@
Setting uplinkMuted to %d for call %@
Started conference successfully for answered relay call %@
[WARN] Failed to start conference connection when answering call %@: %@
Conference connection stopped (cleanly=%d) for answered call %@: %@
Started conference successfully for dialed relay call %@
[WARN] Failed to start conference connection when dialing call %@: %@
Conference connection stopped (cleanly=%d) for dialed call %@: %@
Started conference successfully for pulled relay call %@
Failed to start conference connection when pulling call %@: %@
Conference connection stopped (cleanly=%d) for pulled call %@: %@
[WARN] Ignoring request to hold call because it is already held: %@
[WARN] Ignoring request to unhold call because it isn't held: %@
Entitlement for key '%@' is non-nil but is of class %@ rather than an NSArray (%@), so assuming process %@ has no entitlements
Failed to grab assertion for process %@, reason: %@
[WARN] Cannot create emergencyTUHandle from CSDMessagingHandle %@
[WARN] Cannot create emergencyTULabeledHandle from CSDMessagingLabeledHandle %@
Received acknowledgement for message with identifier: %@. Removing from waiting messages.
[WARN] Received acknowledgement for unknown message with identifier: %@
Received successful didSend for message with identifier %@ using account %@
Received unsuccessful didSend for message with identifier %@ using account %@: %@
Incoming message of type %@ from destination %@ device %@: %@
[WARN] Received message %@ from device %@ but it is not the default paired device
[WARN] No device found for fromID %@. All devices: %@
[WARN] Removing IDSSendMessageOptionForceLocalDeliveryKey key from sendMessage options because pairedDeviceUniqueIDOverride exists
Not attempting retry since message is no longer waiting for acknowledgement: %@
[WARN] Not attempting retry since we are out of retry attempts for %@ message with identifier: %@
Retrying message send with identifier: %@
Sending %@ message with identifier %@ and options %@ to destinations %@
identifier %@ message %@
Successfully sent %@ message
Setting up reliable message delivery for %@ message with identifier: %@ and retry attempts left: %lu
Failed to send %@ message: %@
[WARN] No paired device, so unable to send message %@
photoURL: %@ videoURL: %@
saved photo with localIdentifier: %@ error: %@
saveVideoWithURL: %@
Saved video with localIdentifier: %@ error: %@
Called begin listening block:%@
Processing delayed actions:%@
Not processing delayed actions because we no longer have a call
providerDelegate: %@ callUUID: %@ dateStartedConnecting: %@
Ending call since dataSource is not tracking any call for callUUID: %@
providerDelegate: %@ callUUID: %@ dateConnected: %@
providerDelegate: %@ callUUID: %@ dateEnded: %@ endedReason: %ld failureContext: %@
Ending call with UUID %@ on other provider delegate %@ because ended reason was %ld
providerDelegate: %@ transaction: %@
providerDelegate: %@ ending callUUID %@
[WARN] action: %@
modernFTDestinations: %@
gftOneToOneDestinations: %@
Created join call action: %@ for gftOneToOneDestinations: %@
Can't perform start call action since queries did not return any destinations
Skipping to invite remote destinations since we don't have a call tracking any longer
Invited push tokens via IDS: %@ wasCanceled: %d
No longer handling call with UUID %@, requesting end
Could not initiate FaceTime call - No IDS or IMAV call returned for handle %@
Not sending IMAV invites because IDS session was canceled
Perform join call with action UUID: %@
Failing join call action since it does not meet join call action requirements
Failing join call action since we are already pending a join on this same call UUID elsewhere.
Failing join call action isVideo: NO and videoEnabled: YES
Updated to action: %@
Found a IMAV chat that is being tracked for action: %@
Created start call action: %@ for modernFTDestinations: %@
Can't perform join call action since queries did not return any destinations
Sending JoinCallAction to FaceTimeConversationProviderDelegate- action: %@
Sending JoinCallAction to CSDGFTServiceConversationProviderDelegate- action: %@
[WARN] No provider delegate is managing call for action %@
Delaying action %@
Fullfilling action %@ because call has ended
Asked to deliver voip token %@ to application %@
Asked to deliver message %p to application %@
[WARN] Message transport type is unknown; cannot enqueue message %@
Delivering voip token %@ to application %@
Pending VoIP token delivery until a connection exists
Delivering %lu network extension payload(s) to application %@
Pending Network Extension payload deliveries until a connection exists
Delivering %lu VoIP payload(s) to application %@
Pending PushKit VoIP payload deliveries until a connection exists
Invalidating process assertion for bundle identifier %@ from completion handler
[WARN] Message transport type is unknown; cannot deliver message %@
[WARN] InCallService has multiple process identifiers: %@
InCallService process state is now %ld
Initialized inCallServiceProcessState to %ld
Started tracking SpringBoard process with PID %@
SpringBoard process has changed PID from %@ to %@
conversation: %@ activitySessions.count: %lu
sendingCall %d activeCall %d heldCall %d disconnectingCall %d ringingCall %d bargeCall %d
resolvedAVLessConversation groupUUID: %@
callsChangedForCallCenterObserver
%s: Updating status bar triggered by removedActiveConversation for conversation UUID %@
%s: Updating status bar triggered by addedActiveConversation for conversation UUID %@
%s: Updating status bar triggered by stateChangedForConversation for conversation UUID %@
%s: Updating status bar triggered by activitySessionsChangedForConversation for conversation UUID %@
%s: Updating status bar triggered by activeRemoteParticipantsChangedForConversation for conversation UUID %@
%s: Updating status bar triggered by localVideoToggledForConversation for conversation UUID %@
%s: Updating status bar triggered by handoffEligibilityChangedForConversation for conversation UUID %@
Setting muted to %d for %@
[WARN] setMuted:forIdentifier: no conference connection found for identifier %@. All conference connections: %@
Setting sending audio to %d for %@
[WARN] setSendingAudio:forIdentifier: no conference connection found for identifier %@. All conference connections: %@
Asked to prepare conference connection %@ remoteInviteDictionary %@
Not preparing a new conference because another conference already exists: %@
Attempted to prepare a new conference connection with the same identifier as an existing conference connection: %@
Asked to start conference for identifier %@
We already have an active conference. Invoking this conference connection's didStart immediately
Did not find conference connection to start for identifier %@. All conference connections: %@
Asked to send data to conference for identifier %@
Asked to update conference for identifier %@ with isUsingBaseband=%d disableAudio=%d
Updating device role for identifier %@ to %d
Did not find conference connection for identifier %@. All conference connections: %@
Setting conference connection active: %@
Asked to prepare to stop conference for identifier %@
Pausing audio and setting up timeout for conference connection: %@
It's been %fs since asked to prepare to stop conference and conference connection still exists: %@. Forcefully cleaning up all conference connections for conference %@
Asked to stop conference for identifier %@
Cleaning up conference connection %@
Also cleaning up conference connection which is already prepared to stop %@
Posting %@
reason: %ld error: %@
Relay conference ended in failure (reason: %ld): %@
Setting up close connection timeout because conference ended reason was normal
[WARN] Timed out waiting for conference %@ to close connection after receiving end
[WARN] Unable to get URL for filename '%@'
[WARN] Unable to get standardized URL for URL '%@'
Setting up Pin Exchange controller
Requesting PIN from device %@
[WARN] accountsSupportSecondaryCalling=NO. Displaying mismatched accounts notification
Canceling all PIN requests
[WARN] Could not find device for unique ID %@
The entered PIN code is correct
Activated Thumper for requesting device %@
[WARN] The entered PIN code is incorrect, could not register device.
The user entered no code... or the code entered was not an NSString
We were unable to send the PIN to the other device to be displayed, Sorry
Sending a PIN code to device %@ to display to enroll them into Thumper
[WARN] Ignoring request to send PIN code because we already have one pending for device with unique ID %@
Could not obtain caller ID from Thumper IDS service %@
Sending IDS action %@ to device %@ with message %@
Thumper IDS action sent to device with success: %@ error: %@ identifier: %@
[WARN] Displaying PIN error notification
[WARN] Displaying mismatched accounts notification
[WARN] Displaying slots full notification
Received message for service %@ from device %@ (isHSATrusted=%d): %@
Ignoring pin request: There is already a pending pin request that has not yet completed.
One sender identity exists; continuing Thumper registration using UUID %@
Multiple sender identities exist; checking whether caller ID %@ matches a sender identity in %@
[WARN] Aborting Thumper registration; multiple sender identities exist but caller ID not supplied
Aborting Thumper registration; could not obtain sender identities from call provider %@.
Device requesting PIN is HSA trusted. Forgoing PIN exchange and enrolling the device immediately
Received request to enroll device %@ in Thumper for sender identity with UUID %@
[WARN] Aborting Thumper registration; could not obtain sender identity UUID.
Received didSendWithSuccess=YES for message with identifier %@
Received didSendWithSuccess=NO for message with identifier %@: %@
InCallService has changed process state to %ld
InCallService has been suspended; invalidating its XPC client connections.
Initialized capability state: %@
Updating clients with new call capabilities state: %@
Updating paired host device state
TUCallCapabilitiesXPCServer - callCapabilitiesState request from %@
TUCallCapabilitiesXPCServer - setRelayCallingEnabled: %d
TUCallCapabilitiesXPCServer - setRelayCallingEnabled: %d forDeviceWithID: %@
TUCallCapabilitiesXPCServer - setWiFiCallingEnabled: %d senderIdentityUUID: %@
TUCallCapabilitiesXPCServer - setWiFiCallingRoamingEnabled: %d senderIdentityUUID: %@
TUCallCapabilitiesXPCServer - setVoLTECallingEnabled: %d senderIdentityUUID: %@
TUCallCapabilitiesXPCServer - setThumperCallingEnabled: %d senderIdentityUUID: %@
TUCallCapabilitiesXPCServer - setThumperCallingAllowed: %d secondaryDeviceID: %@ senderIdentityUUID: %@
TUCallCapabilitiesXPCServer - setThumperCallingAllowedOnDefaultPairedDevice: %d senderIdentityUUID: %@
TUCallCapabilitiesXPCServer - endEmergencyCallbackMode
TUCallCapabilitiesXPCServer - invalidateAndRefreshWiFiCallingProvisioningURLForSenderIdentityUUID: %@
TUCallCapabilitiesXPCServer - invalidateAndRefreshThumperCallingProvisioningURLForSenderIdentityUUID: %@
TUCallCapabilitiesXPCServer - requestPinFromPrimaryDevice
Using the following account for the PIN request: %@
No device found for account %@. All accounts: %@
[WARN] No primary Thumper account found for PIN request. This should only happen because an account exists but has no empty device slots. All accounts: %@
TUCallCapabilitiesXPCServer - cancelPinRequestFromPrimaryDevice
Received device list changed notification: %@
Received device capability changed notification: %@
Received accounts changed delegate callback
Received FaceTime availability changed delegate callback
Received outgoingCallerIDChanged delegate callback
Disabling Thumper for subscription with UUID %@
Received telephonyCallCapabilitiesChanged delegate callback
[WARN] Disabling support because %@ was set to YES
[WARN] Enabling support because %@ was set to YES
Found primary Thumper account ID %@
Thumper calling is not supported for account ID %@
Setting associated Thumper account ID %@
_setWiFiCallingEnabled: asking to change value from %d to %d
_setWiFiCallingEnabled: not updating value. Is currently %d and asked to set to %d
_setVoLTECallingEnabled: asking to change value from %d to %d
_setVoLTECallingEnabled: not updating value. Is currently %d and asked to set to %d
_setWiFiCallingRoamingEnabled: asking to change value from %d to %d
_setWiFiCallingRoamingEnabled: not updating value. Is currently %d and asked to set to %d
_setThumperCallingEnabled: asking to change value from %d to %d
_setThumperCallingEnabled: not updating value. Is currently %d and asked to set to %d
Changing Thumper calling allowed value from %d to %d on secondary device ID %@
[WARN] Not changing Thumper calling allowed value. No device slots remain for this device. Displaying notification to the user
[WARN] Could not set Thumper calling allowed for secondary device with identifier %@; unable to retrieve local Thumper account from call capabilities %@
[WARN] Could not retrieve account ID from Thumper capabilities %@
_setThumperCallingAllowed: not updating value. Is currently %d and asked to set to %d on secondary device ID %@
[WARN] Could not find Thumper capabilities for sender identity UUID %@
[WARN] No cloud calling device appears to be a default paired device: %@. Ignoring setThumperCallingAllowedOnDefaultPairedDevice request
[WARN] Could not obtain UUID from sender identity capabilities state %@
defaultPairedDeviceExists: %d
telephonyDeviceExists: %d, relayCapableDeviceExists: %d, defaultPairedDeviceExists: %d
_setRelayCallingEnabledDefault: changing value to %d
_setRelayCallingEnabled: Changing value from %d to %d
_setRelayCallingEnabled: Not updating value. Is currently %d and asked to set to %d
setRelayCallingEnabledDefault:forDeviceWithID: changing value to %d for %@
_setRelayCallingEnabled:forDeviceWithID: Changing value from %d to %d for %@
_setRelayCallingEnabled:forDeviceWithID: Not updating value. Is currently %d and asked to set to %d for %@
Initialized pairedHostDeviceState: %@
[WARN] Could not de-serialize pairedHostDeviceStateData %@
[WARN] Saved pairedHostDeviceStateData was not an NSData type (class=%@): %@
No saved paired host device state found
Initializing new paired host device state with all values set to NO
_supportslaunchingInCallApplicationForIncomingCall: %d
dialRequest: %@ displayContext: %@
Coordinated alert request came back with bestIsMe: %d info: %@ error: %@
Starting coordinated alert request to determine ringtone un-suppression: %@
faceTimeIDSStatus for destinationID: %@ is: %@
Invalidating display context for %@
Posting %@ because relayClientTransport changed from %@ to %@ for %@
Posting %@ because mayRequireBreakBeforeMake changed from %d to %d for %@
Posting %@ because hasStartedOutgoing changed from %d to %d for %@
Posting %@ because hasAudioInterruption changed from %d to %d for %@
activeRemoteParticipants changed from %@ to %@ for %@
Audio device list changed
[WARN] No audio route collection found in audioRouteCollections: %@ for audio category %@ and audio mode %@ for call %@
Found preferred AVAudioDevice: %@
Requesting initial state of CarKit's DND assertion
Received initial CarKit DND assertion: %d
Unable to fetch CarKit DND assertion: %@
Updating isCarModeActive to %d
[WARN] Timeout occured fetching CarPlay do not disturb status.
Updating isCarPlayDeviceConnected to %d
Device first unlock block invoked, attempting to retrieve active conversations
Sent message with identifier %@ to %@
Error sending message: %@
Using local callerID: nil, could not get strong self
Using local callerID: %@
Could not find caller ID when creating conversation
UUID: %@ groupUUID: %@ localMember: %@ fromStorage: %d report: %@
UUID: %@ remoteMembers: %@
Asked to invite specific conversationUUID: %@ participantDestinationIDs: %@
localDeviceDestination: %@ oneToOneModeCapableLocalDestinations: %@
conversationUUID: %@ participantDestinationIDs: %@
UUID: %@ groupUUD: %@ localMember: %@
Delegate should handle conversation update: %@ for provider: %@
notifyDelegatesOfChangedLinkDescriptors: -- no link descriptors, not updating delegates
Retrieving conversation links failed with error %@
handleConversation:receivedBlobRecoveryRequest:fromHandle: options: %u from: %@
handleConversation:receivedBlobRecoveryRequest:fromHandle: Sending message: %@ to: %@
[WARN] handleConversation:receivedBlobRecoveryRequest:fromHandle: No local participant for conversation UUID: %@
handleConversation:receivedBlobRecoveryResponse:fromHandle: from: %@
[WARN] handleConversation:receivedBlobRecoveryResponse: could not add or update participant: %@
[WARN] handleConversation:receivedBlobRecoveryResponse:fromHandle: %@ <!===> %@
[WARN] handleConversation:receivedBlobRecoveryResponse:fromHandle: Could not find participant in message: %@
Not updating handoff eligibility %@ because lockdown mode is enabled
Handoff changed to advertise %@ for identifier %llu, uplink muted %@, sending video %@
Handoff changed without eligibility, so stopping advertising
Handoff eligibility set to nil for GreenTea device: %@
Handoff eligibility added to conversation: %@
Handoff eligibility removed from conversation: %@
Ignoring route identifier change for handoff as no conversations are currently joined.
Conversation manager alerted to new selected audio route ID %@, letting my other devices know for conversation UUID %@
Conversation manager alerted to unselected audio route, letting my other devices know for conversation UUID %@
Sending UpdateJoinedMetadata message %@ to my other devices: %@
Posting session started event from participant %@ for session %@
Posting session ended event from participant %@ for session %@
Asked to create ActivitySession %@ on conversation UUID: %@ with trusted fromHandle: %@
[WARN] Conversation message of type Encrypted received with either no encryptedMessage or enclosedEncryptedType. Dropping message.
[WARN] ConversationMessage of type Encrypted with enclosed type of %d which we do not have support for, dropping.
Received Encrypted message with enclosed type of LetMeInRequest from handle %@
[WARN] Could not retrieve a pseudonym string from the message context.
[WARN] Let Me In request was not sent to a pseudonym. Dropping message.
Could not decrypt let me in request with error %@
[WARN] Decrypted conversation message but was not a let me in request: messageType: %d
[WARN] Provided link is %@, which was not a valid TUConversationLink.
Received Encrypted message with enclosed type of LetMeInResponse from handle %@
[WARN] No pending conversation found for link %@
[WARN] Pending conversation's let me in request state is %ld instead of Requested
[WARN] Pending conversation's let me in key agreement is either nil (%@) or exhausted (%@)
[WARN] Let Me In response was not sent to a pseudonym. Dropping message.
[WARN] Could not decrypt let me in response
[WARN] Decrypted conversation message but was not a let me in response messageType: %d
Could not find link for pseudonym %@, dropping let me in request. Error: %@
Dismissing let me in because link has originator handle of %@, which is not one of our active local handles %@
[WARN] GreenTea device does not support multiple remote members. remoteMembers = %@
Let me in requestor %@ is a handle that has already been kicked, rejecting let me in. conversation.kickedMembers: %@
Let me in requestor %@ is a handle that has already been rejected, rejecting let me in. conversation.rejectedMembers: %@
Let me in requestor %@ is a handle that is already a member of the call; Let Me In not required. conversation.remoteMembers: %@
[WARN] Ignoring let me in response message, as it is missing a groupUUID (%{public}@), missing a link (%{public}@), or does not specify approval/rejection (%{public}@): %@
[WARN] Let me in response is not for the provided pending conversation. Ignoring.
[WARN] Let me in response is not from the pseudonym defined in the link %@, instead is from %@
Finished processing let me in response (approved: %{public}@) for groupUUID: %@. Approver handle is %@.
Not sufficiently formed link created/changed message, type: %d hasLink: %d linkGroupUUID: %@ conversationGroupUUID: %@
[WARN] Invalid TUConversationLink for link created/changed message (it was nil)
[WARN] Sender %@ did not match link's originator handle %@ for link created/changed message %@
[WARN] Link already exists on conversation %@ for link created message %@
[WARN] GreenTea device does not support link created/changed message because invitedMemberHandles > 1, message: %@
[WARN] Sender %@ is not part of conversation UUID %@.
[In-Advance] Received link created/changed message from %@ with link %@
[WARN] GreenTea device does not support link creation message %@ because invitedMemberHandles > 1
Failed to persist received link to data store with error %@
[Ongoing] Received link created/changed (update: %{public}@) message for conversation UUID %@ from %@ with linkDescriptor %@
[WARN] Did not set conversation link %@ to conversation UUID %@
[In-Advance] Link successfully stored (update: %{public}@) from %@ with linkDescriptor %@
Not sufficiently formed link invalidation message %@
[WARN] Invalid TUConversationLink for link invalidation message %@
[WARN] Sender %@ did not match link's originator handle %@ for link invalidation message %@
We are not tracking any stored link for link invalidation message %@
Failed to remove received link from data store with error %@
[WARN] Dismissing let me in delegation because no groupUUID was set
[WARN] Dismissing let me in delegation because the forHandle is blocked {forHandle: %@, fromHandle: %@}
Received LMI delegation, unable to parse forHandle -- ignoring! {fromHandle: %@, message.letMeInDelegationHandle: %@}
Received LMI delegation, unable to parse transactionUUID -- ignoring! {fromHandle: %@, message.letMeInDelegationUUID: %@}
Received LMI delegation message! {fromHandle: %@, forHandle: %@, transactionUUID: %@}
[WARN] Dismissing let me in delegation response because no conversation was found for link's groupUUID: %@
Received LMI delegation response, unable to parse transactionUUID -- ignoring! {fromHandle: %@, message.letMeInDelegationUUID: %@}
Received LMI delegation response message, without letMeInApproval -- dropping! {fromHandle: %@, forHandle: %@, transactionUUID: %@}
Received LMI delegation response message! {fromHandle: %@, forHandle: %@, transactionUUID: %@, message.letMeInApproval: %@}
No invited members or conversation members were specified; no need to send messages (link: %@, conversation UUID: %@)
[WARN] UpdateJoinedMetadata conversation message was sent by a non-local handle %@, dropping message.
[WARN] UpdateJoinedMetadata conversation message was missing a group UUID, dropping message.
[WARN] UpdateJoinedMetadata conversation message was missing a joined metadata object, dropping message.
[WARN] UpdateJoinedMetadata conversation message was missing a valid participant, dropping message.
[WARN] No conversation was found for group UUID %@, dropping UpdateJoinedMetadata message.
[WARN] Could not find a matching participant for sender %@, dropping UpdateJoinedMetadata message.
Per UpdateJoinedMetadata message, the local user was using %@ audio route from another device with participant identifier %llu in conversation UUID %@
Per UpdateJoinedMetadata message, the local user was using a default audio route from another device with participant identifier %llu in conversation UUID %@; no need to track a route.
Sending data from: %@ to: %@
blob response, removing %@ from options: %@
[WARN] Could not convert %@ to IDS destination
Failed broadcasting file. Missing local member on conversation: %@
Broadcasting file from: %@ to: %@
Error broadcasting image %@
Sent broadcast image message with id %@
Missing local member on conversation: %@
Broadcasting data from: %@ to: %@
conversation: %@ broadcastImageForSession: %@
Error transmitting activity session %@ image. Failed to write to path %@ with error %@
(broadcastImageForSession activity UUID: %@ success: %d).
Failed to delete image file after sending image for session %@ error %@
conversation: %@ broadcastLightweightEndorsementForAddedMembers: %@
conversation: %@ has a splitSessionSecondary (%@), sending verification push
(success: %d).
[WARN] Couldn't create handle from participant destination identifier %@
[WARN] Couldn't find participant destination identifier %@ in members %@
[WARN] Couldn't decode message due to invalid data length.
[WARN] Couldn't decode message due to invalid groupUUID
[WARN] Couldn't find conversation with groupUUID %@
[WARN] Received unknown participant update message
[WARN] Unable to find members from message
Message doesn't have intent key set, dropping message
Kick message not permitted, dropping message
Invalid activity session update, dropping message
Invalid blob respnose, dropping message
Message type not permitted for member type, dropping message
Invalid vouching message, dropping message
Update type & payload not allowed fromHandle: %@
Not all lightweightMembers have an associated lightweightPrimary in the conversation, dropping message fromHandle: %@
Received an empty message of type: %@
FromHandle: %@ is trying to kick itself (%@)
Originator not set on message type: %@
Originator on message (%@) is not equal to fromHandle: %@
Message has an unrecognized type, dropping message
blob response verification can't function without an existing conversation
Received an invalid count of participants on type: %@
Failed to get participant from BlobResponse message
FromHandle: %@ is trying to add a different participant handle (%@)
FromHandle: %@ is trying to add a lightweight participant, but we can't find the lightweightMember
Couldn't find member for fromID: %@
Member: %@ doesn't have a primary
Lightweight member %@ doesn't have their primary in the conversation
Rejecting join update since we don't have an existing conversation, fromHandle: %@
Rejecting join update since it is trying to add members to the conversation, fromHandle: %@
Rejecting update since its trying to add a lightweightMember not associated with their device, member: %@ fromHandle: %@
Member verification can't function without an existing conversation
Invalid amount of members trying to be vouched (%lu)
FromID: %@ attempting to vouch for an invalid member %@
No local lightweightMember found for handle trying to be vouched
FromHandle: %@ trying to vouch for another member's lightweightMember
Refreshing active pariticpants for active conversations
[WARN] _incomingPendingConversationsByGroupUUID: issue fetching links for pending incoming {error: %@}
CSDConversationManager beginning to listen on service:%@
[WARN] Not adding cached conversation with UUID %@ because we already added equivalent conversation with UUID %@
Reviving cached conversation with groupUUID: %@ remoteMembers: %@ lightweightMembers: %@
[WARN] Failed to create newActivitySession for activitySession %@
Failed to create activitySession from persistence since we couldn't find the trusted fromHandle on activitySession: %@
shouldClearDefaults: %d - Removing all conversations
groupUUID: %@ remoteMembers: %@
Found existing conversation %@ but not reusing it since it's leaving and we're trying to join a U+1 call
No conversation currently exists to join: %d, so creating a new one isConversationVideoUpgrade: %d
[WARN] The request specified that local member %@ should be used, but the useable handles for FaceTime are %@. We cannot proceed with a handle that's not registered for FaceTime on this device.
Unable to create local member. Caller ID: %@
Found existing conversation with UUID: %@
Activating cached conversation from storage with UUID: %@ as someone seems to be interested in it.
joinExistingConversationWithUUID: %@ context: %@
[WARN] Could not find conversation with UUID: %@
Ignoring request to join conversation with UUID: %@ since conversation is already joined
Request to join conversation is trying to change avMode on conversation UUID: %@
[WARN] Leaving existing conversation with UUID: %@ in favor of new conversation with UUID: %@
Not leaving converastion because hasAnyActivitySessions: %@, isOneToOneEnabled: %@
Updating context to use isOneToOneModeEnabled=true %@
Conversation join is for a new activity: %@, broadcasting image.
LMI: Creating pending conversation for link: %@, localMember: %@
LMI: Cannot find pending conversation for pseudonym %@
LMI: Requesting membership in pending conversation for link %@
LMI: Could not encrypt let me in request with error %@
Error sending request to join conversation
Sent let me in request for link %@
LMI: Notifying pending member %@ of our response (approved: %@) to their let me in for conversation UUID %@
[WARN] Response key missing from LMI response; cannot encrypt to send without. Aborting.
LetMeInResponse message assembled as %@
LMI: Could not encrypt let me in response
Error sending request to join conversation.
Sent let me in response (approved: %@) for pending member %@
UUID: %@
[WARN] Could not find conversation with UUID %@. All conversation UUIDs: %@
Sending invitation message %@
[WARN] Could not find conversation with UUID %@. All conversations UUIDs: %@
oneToOneMode is not enabled - ignoring to send video upgrade message
Updating pending conversation with pseudonym: %@, conversation group UUID: %@
Not setting screenEnabled to %@ because conversation %@ is already in that state
Setting screen enabled %@ with attributes %@ for conversation UUID: %@
Not enabling ScreenSharing because we already have a queued up request %@
Upgrading to Audio mode since screenEnabled is YES
Queued up screenEnable request: %@
Removing all pending screenEnabled blocks since screenEnabled=NO
Unable to find conversation with UUID: %@
conversationUUID: %@ remoteMembers: %@
[WARN] Could not find conversation with conversationUUID %@. All conversations UUIDs: %@
conversationUUID: %@ otherInvitedHandles: %@
GreenTea devices are not supported to have this GFT conversation UUID: %@
Attempted to add remote members without an active voucher manager.
Signed complementary association voucher for member %@: %@
Failed to sign complementary association voucher for member %@ due to error: %@
Not adding %@ to invited member handles of link because destinationIdIsTemporary(%@), destinationIdIsPseudonym(%@), or handle is the originator of link (%@)
Not adding %@ to invited member handles of link because it is already an invited member handle of the link
Not adding any of the following members to the invited handles of the link: %@
Displaying SharePlay not supported alert with message: %@
[WARN] Not displaying SharePlay not supported alert because SharePlay features are disabled.
conversationUUID: %@ update messagesGroupName: %@
conversationUUID: %@ update group photo
ConversationManager asked to create activitySession for activitySession: %@ on conversation UUID: %@
Failed to create CPActivitySession for activitySession: %@
Not broadcasting activity session creation for static activity
conversationUUID: %@ activity: %@
[WARN] User declined authorization to create activity session for activity: %@
leave conversationUUID: %@ activitySession: %@
end conversationUUID: %@ activitySession: %@
Asked to present dismissal alert for activitySessionUUID: %@ conversationUUID: %@
SharePlayWithAirplay ff is turned off, not changing activity session airplay state
Setting using airplay: %{public}@ on activity session: %@
Setting activity authorization %d for %@
Setting auto expanse enabled %@
Received launchApplication request for UUID: %@ forceBackground: %@
Launch request for UUID: %@ is trying to activate a staged activitySession. %@
Tried to launch placeholder activity.
Failed to find conversation that has activitySession %@
Not launching application because SharePlay is not allowed
Not requesting authorization since we don't have a CPActivitySession for: %@
Failed to request authorization error: %@
Authorizing session UUID: %@
Requesting activity authorization for %@
Revoking background authorization for bundle ID for %@
Handling participant update message: %@ from: %@
[WARN] Ignoring message %@ because a participant was not specified.
[WARN] Ignoring message %@ because multiple participants were specified.
[WARN] Ignoring participant update message %@ because participant handle %@ does not match message sender %@.
Trying to update participant, but one is already found... duplicate participants on conversation? conversation: %@
Couldn't find participant for update message: %@ on conversation: %@
Found participant for update message: %@
Participant %@ is already in audioVideoMode: %ld... Not handling update!
Conversation UUID: %@ has avMode: %lu and the desiredAudioVideoMode is %lu
Evaluating if we should notify delegates shouldShowInvitationRingingUI: %@ shouldInvokeDelegateBasedOnRemoteHandle: %@
Triggering a ringing call for participant update from: %@
Received participant update message to downgrade, but we're in a U+1 call so we should also downgrade!
Changing conversation AVMode to %{public}lu since conversation is waiting
Received message from %@ to associate conversation %@ with messages group
[WARN] Message did not contain a valid activitySession.
Received remove activity session message %@ from %@
Unable to decode UUID from activitySession %@
Updating activities from message: %@
Updating activity images from message: %@
[WARN] Not updating activity, couldn't find activitySession || stagedActivitySession with UUID: %@
[WARN] Not updating activity, no activity UUID was provided in message: %@
Not updating activity because handle: %@ isn't the originator of the activity: %@
No image provided in update message for activity: %@
Error while generating preview image for activity session: %@
[WARN] Not updating image for activity UUID: %@ activity session currently has different activity UUID: %@
Updating activity image for activity session with UUID: %@
Updating activity image for staged activity session: %@
Received endorsement message: %@
Received new activity for conversation %@
Not adding activity session, as not all participants are on the latest SharePlay version
Sending conversation back since new activitySession doesn't support aTV handoff. session: %@
Failed to add activitySession: %@ to conversation UUID: %@
Not posting start session event. Could not find participant for handle %@ for session %@
Ignoring guest mode message since guest mode is not currently supported
Message did not contain updated guest mode state
Received guest mode update for participant in conversation %@
Ignoring guest mode update message because the from-handle %@ did not match any active remote participants %@
conversationUUID: %@ presentationContexts: %@
conversationUUID: %@ member: %@
Kicking member %@ from conversation %@
[WARN] Ignoring nickname update message because the from-handle %@ could not be normalized.
Received nickname update message, set nickname to "%@" from handle %@ for conversation UUID %@
Ignoring nickname update message because the from-handle %@ did not match any remote members %@
conversationUUID: %@ downlinkMuted: %d
[WARN] Could not find conversation with conversationUUID %@. All conversation UUIDs: %@
coversationUUID: %@ participantid: %llu audioEnabled: %d
[WARN] Could not find conversation with conversationUUID %@. All conversations: %@
conversationUUID: %@ participantid: %llu videoEnabled: %d
Ignoring local member's nickname update request because their nickname "%@" is already identical
conversationUUID: %@ set local member's nickname to %@, previously %@
Asked to get latest remote attributes, returning: %@
Retrieved %lu conversation link descriptors %@
Failed to retrieve links with error %@
Received request from TU client to generate link for conversation UUID: %@
GreenTea devices cannot generate conversation links for Group FaceTime (remoteMembers > 1)
Conversation was initiated from messages, a link cannot be generated in this case. {messagesGroupUUID: %@}
Link for conversation with UUID %@ already exists.
Failed to generate link for groupUUID %@ with error %@
Fetched non-local inactive link %@
Failed to fetch inactive link, generating new links for %@
Link generation complete, returning to completionHandler for: %@
Did not set conversation link as one already existed: %@
Received request from TU client to generate link with invitedMemberHandles: %@
GreenTea devices cannot generate conversation links for Group FaceTime (invitedMemberHandles > 1)
[WARN] No invited member handles were of eligible handle types and/or had normalized values, canceling link generation
[WARN] Local user has no active handles, cannot proceed with link generation
We activated an inactive link, returning that.
Creation of converation link with groupUUID %@ invited handles %@ failed with error %@
Adding invited handles %@ to %@ failed with error %@
Not invalidating link since it's not being tracked by our link manager.
Asked to invalidate link %@
Renewing link for reason %lu
Failed to renew link %@ with error %@
Generating cache of inactive links for originator handle %@
Asked to retrieve inactive link for handle %@
Failed to fetch inactive link, generating more for handle %@
Asked to activate conversation link %@
Asked to set name "%@" for link %@
[WARN] Link name setting provided error %@
Link name successfully set for updated link %@
TU client asked to schedule a syncing of activated conversation links {initial: %@}
Sending recovery messages to local user's other devices in an attempt to recover links for pseudonyms %@
TU client asked for link sync state {includeLinks: %@}
For conversationUUID: %@, user has approved let me in for pending member: %@
[WARN] Failed to approve let me in request for pending member %@. Could not find conversation with conversationUUID %@. All conversation UUIDs: %@
For conversationUUID: %@, user has rejected let me in for pending member: %@
[WARN] Failed to reject let me in request for pending member %@. Could not find conversation with conversationUUID %@. All conversation UUIDs: %@
For conversationUUID: %@, user has requested to ignore all LMI requests.
[WARN] Failed to ignore let me in requests. Could not find conversation with conversationUUID %@. All conversation UUIDs: %@
conversationUUID: %@ messagesGroupName: %@
%ld conversationLink should be removed, not needed anymore %@
conversationLink was removed since it was not needed anymore {pseudonym: %@, success: %@, error: %@}
removeConversationWithUUID: %@
[WARN] Could not find conversation for container with UUID %@. All conversation UUIDs: %@
includeMetricsReport onConversationWithUUID: %@
[WARN] Dropping metrics report, could not find conversation with conversationUUID %@. All conversation UUIDs: %@
Requested avMode -> none, but leaving instead since this is a 1:1 or screensharing call
Requesting to disconnect call %@
Found conversation that we want to register the messagesGroupUUID on
Couldn't find conversation UUID %@ to register messagesGroupUUID on
setupPendingConversationCleanupTimer: %f %f %@
cleanupExpiredPendingConversations: %f %@
conversationChanged: %@
conversationConnectionDidStart UUID: %@
conversationInvalidated UUID: %@
conversationLink should be removed after call was invalidated %@
conversationLink finished removing after call was invalidated {success: %@, error: %@}
conversation: %@ addedActiveParticipant: %@
At least one participant in conversation %@ does not support SharePlay. Invalidating session %@
Conversation UUID %@ was continued on another device as participant %@, leaving...
Leaving immediately due to handoff since the conversation with UUID: %@ supports leave context or was GFT before handoff
Delaying leaving due to handoff since the conversation with UUID: %@ does not support leave context and was 1:1 before handoff
Added participant %@ is a handoff continuation for identifier %llu, but my local identifier is %llu. Not leaving.
There was no participant association for added participant: %@
executing queued up screenEnabled block since local participant mode changed
For AVLess to AV upgrade of conversation UUID %@, sending an AddActivitySession message to devices lacking AVLess support: %@
conversation: %@ removedActiveParticipant: %@
conversation: %@ participant: %@
Requesting blob recovery for %@
Sending decline message for %@
conversation UUID: %@ activitySessionChanged: %@
Disabling screensharing since another session: %@ became active
Scene association changed for activity session: %@
App launch state changed to: %lu for activity session: %@ on conversation with UUID: %@
conversation: %@ activityChangedOnSession: %@
(success: %d)
Did send activity removal message successfully? %d
Not posting session ended event. Error finding participant for end session %@
conversation: %@ addedMembers: %@ triggeredLocally: %@
Found staged ActivitySession on conversation. Distributing image. %@
Found ActivitySession on conversation. Distributing image. %@
conversation: %@ triggered join.
Let me in request was sent to invalid pseudonym %@, ending pending conversation
Running callback for message %@, which has been received by the IDS daemon
[WARN] service:account:incomingData:fromID:context: Empty from ID. Dropping message.
Ignoring IDS resource; already received via conduit IDS proxy.
Received resource URL with identifier %@ from %@
[WARN] service:account:incomingResourceAtURL:fromID:context: Empty from ID. Dropping message.
[WARN] service:account:incomingResourceAtURL:fromID:context: Empty data. Dropping message.
[WARN] service:account:incomingResourceAtURL:fromID:context: Empty CSDMessagingConversationMessage. Dropping message.
[WARN] service:account:incomingResourceAtURL:fromID:context: Got unsupported messaged type %@. Dropping message.
service:account:incomingData:fromID:context: already proxied IDS message with ID %{mask.hash}@, ignoring.
service:account:incomingData:fromID:context: receiving IDS message from %{mask.hash}@ with ID %{mask.hash}@
service:account:incomingData:fromID:context: receiving proxied IDS message from %{mask.hash}@ with ID %{mask.hash}@
service:account:incomingResourceAtURL:metadata:fromID:context: receiving proxied IDS resource from %{mask.hash}@ with ID %{mask.hash}@
received proxied group participant update
Received message with identifier %@ from %@ Attempt count %@
[WARN] service:account:incomingData:fromID:context: Empty data. Dropping message.
[WARN] Received CSDMessagingConversationMessage with Type of %@
[WARN] service:account:incomingData:fromID:context: Empty destinationID after IDSCopyRawAddressForDestination. Dropping message.
[WARN] service:account:incomingData:fromID:context: Could not create TUHandle from destinationID. Dropping message.
[WARN] Dropping let me in request or response because it was not encrypted
[WARN] Dropping let me in delegation request or response because it has the wrong intent {publicIntentAction: %@}
[WARN] Received LetMeInDelegation with Intent of {publicIntentAction: %@, messageIntent: %llu}
[WARN] service:account:incomingData:fromID:context: Empty CSDMessagingConversationMessage. Dropping message.
[WARN] service:account:incomingData:fromID:context: Could not create group UUID from string. Dropping message.
[WARN] No conversation found for groupUUID %@
Updating "fromStorage" on conversation with UUID: %@ since there are still active remote participants.
Not updating "fromStorage" on conversation with UUID: %@ since conversation.isFromStorage: %d, and context.fromServerStorage: %d
Looking for handle: %@ in existingConversation: %@
fromID found in both the remoteMembers & lightweightMembers list. Rejecting message.
Dropping message since the type %@ is not allowed for lightweightMembers
[WARN] Could not find matching handle: %@  in existingConversation.
[WARN] Will retry message again after %@ ms
[WARN] Exhausted retry attempts for message. Dropping message after %@ attempts
Message verification failed, dropping message.
[WARN] Received Invitation conversation message from server storage for conversation where that was also retrieved from server storage. Not notifying delegates of this Invitation message. {message: %@, context: %@, conversationUUID: %@}
Group participant update received
Attempted to sanitize participant update without an initialized sanitizer.
[WARN] processGroupSessionParticipantUpdate: Empty groupSessionParticipantUpdate
[WARN] processGroupSessionParticipantUpdate: Empty groupSessionParticipantUpdate.participantDestinationID
Group session participant update received: %@ participantIdentifiers: %@
Participant update from %@, type: %lu, participants: %@
[WARN] Unable to find fromHandle.
Leaving conversation that is not supported on GreenTea devices: %@
Received participant join context
processJoinUpdate: Received nil when trying to convert data to participant join context
[WARN] processUpdateMembersUpdate: Empty updateMembersUpdate.clientContextData
Received nil when trying to convert data to participant join context
[WARN] processParticipantDataUpdate: Empty participantDataUpdate.groupUUID
[WARN] processParticipantDataUpdate: Empty participantDataUpdate.participantDestinationID
[WARN] processParticipantDataUpdate: Empty participant
[WARN] Could not find conversation with groupUUID %@. All conversation UUIDs: %@
[WARN] handleParticipants:joinedConversationWithUpdate:joinContext: Empty joinContext
[WARN] handleParticipants:joinedConversationWithUpdate:joinContext: Empty participantUpdate.groupUUID
Join context: %@
members: %@
lightweightMembers: %@
addedMembers: %@
addedLightweightMembers: %@
activeLocalHandles: %@
receivedLocalMember: %@
Received local member: %@
[WARN] Dropping conversation with groupUUID %@ since it has %tu remote members which is greater than the maximum allowed of %tu.
[WARN] We received a message from %@, which was in the remote members list given in the message, but not in the existing conversation UUID: %@. Dropping message.
[WARN] We received a message from %@, which was in the remote members list but from a different device; treating as new conversation
We received a message from %@, and we found same converastion: %@ with remote members with a different groupUUID; treating as new conversation
Membership update message failed verification. Dropping fromHandle: %@
Identified let me in approval for pending conversation group UUID: %@
Pending conversation %@ found, but the groupUUID does not match (%{public}@) or the let me in request state is not Requested (%{public}@)
Determined video for new conversation should be %{public}@
Setting videoEnabled to %@ because the user was added to an existing call with av mode %lu
Attached invitation preferences found in message: %@
No invitation preferences were set on the message
[WARN] Could not create new activity session for activity session %@ and conversation UUID %@
Ignoring message for group UUID %@
Updating provider on conversation with UUID %@ with provider %@
Activating cached conversation with UUID: %@ since participants are joining.
Updating remoteMembers for conversation with UUID: %@
Not ringing for cached conversation since message is from server storage and is older than 30 seconds. Conversation: %@
Setting `fromStorage` on cached conversation to `NO`
fromStorage should be set to 1 if fromServer is 1 and conversation is older than 30 seconds
fromServer: %d
Older than 30 seconds: %d
 Conversation: %@
Downgrading U+1 call to audio because remote party joined as audio-only (remote members count is 1, join context had video=NO, and conversation had video=YES)
[WARN] Couldn't set staged activity session %@ on conversation UUID %@
Could not find local member from activeLocalHandles: %@
Could not find local member from activeLocalHandles: %@, remoteAndLightweightMembers: %@
Received empty set for remote members
Participant with identifier: %llu left conversation with groupUUID: %@
[WARN] handleParticipantWithIdentifier:leftConversationWithGroupUUID: empty groupUUID
Participant with identifier %llu left with leave context %@
Participant with identifier %llu left without providing a leave context
[WARN] Could not find conversation for group UUID %@
Active participant %@ was still listed as a pending member %@ for conversation UUID %@; did we miss an approval delegation notice?
It would have been time to add LMI approved handle %@ on conversation UUID %@ to link's invited members, but they were kicked.
Adding LMI approved handle %@ to invited member handles for link %@ after their kick timeout elapsed for conversation UUID %@
Removing handles %@ from handles awaiting link invites as we have scheduled the block to add them if not kicked
Using group session initiator as conversation initiator: %@
Picked initiator for conversation: %@
linkManager:updatedLinksFromSync: -- updating delegates {linkDescriptors.count: %d}
linkManager:removedLinkDescriptorsFromIDSSignal: -- updating delegates {linkDescriptors.count: %d}
linkManager:updatedLinkDescriptorsFromIDSSignal: -- updating delegates {linkDescriptors.count: %d}
linkManager:removedLinkDescriptorsFromValidityCheck: -- updating delegates {linkDescriptors.count: %d}
Membership tracker prompted response for pending member! {member: %@, conversation UUID: %@}
Membership tracker retained pending member because conversation does not yet exist {member: %@, groupUUID: %@}
No link was found; ignoring tracked pending member {member: %@, groupUUID: %@}
Membership not adding pending member! {member: %@}
Membership reported rejection {member: %@, error: %@}
Asked to send delegation message!
Asked to send delegation response message! {withResponse: %@}
LMI: Unable to send delegation message without conversation or link
Not sending delegation message because no handles were specified! {groupUUID: %@, transactionUUID: %@, pendingMember: %@}
Asked to send delegation message {handles: %@, groupUUID: %@, transactionUUID: %@, pendingMember: %@}
Error sending delegate to join conversation.
Sent delegation request!!!
Notifying delegates of received remote attributes %@ (isLocallySharing: %@)
Asking screen sharing activity manager to resume observing after invalidation
Disabling screensharing forConversationWithUUID:%@ since screen sharing session got invalidated
SharePlay allowed: %@
Screen sharing allowed: %@
Attempt to retrieve application record for application identifier %@ failed with error: %@
Attempt to retrieve application record for bundle identifier %@ failed with error: %@
[WARN] Unable to create audio route from route dictionary: %@
Issuing request to acquire process assertion for bundle identifier: %@
Acquiring process assertion for bundle identifier %@
Acquired initial process assertion for bundle identifier %@
Failed to acquire process assertion for bundle identifier %@
Incremented count of process assertion for bundle identifier %@ to %lu
Received request to invalidate process assertion with bundle identifier: %@
Decremented count of process assertion for bundle identifier %@ to %lu
Initialized CXCallDirectoryStore for reading
Unable to initialize CXCallDirectoryStore for reading: %@
Device first unlock block invoked, attempting to initialize CXCallDirectoryStore...
Incoming call filter block called with sourceAddress: %@ providerIdentifier: %@
Blocking call with sourceAddress %@ since callDirectoryAllowsCallFromSourceAddress returned NO
Disallowing call with sourceAddress %@ since _doNotDisturbAllowsCallFromSourceAddress returned NO
DND - onEmergencyCall: %d providerIdentifier: %@
Not allowing call because DND is enabled for %@
phoneNumberVariants: %@
Error checking if call directory database contains blocking entry for source address %@: %@
Disallowing call from source address %@ since blocked by call directory
Call history changed: %@
Call connected. Marking all calls as read.
bytesOfDataUsed: %ld uniqueProxyIdentifier: %@ callHistoryIdentifier: %@
Call still exists so updating its bytes of data used: %@
No call still exists so updating bytes of data used via CHManager
Writing recent call to history: %@
Writing recent pending call to history: %@
Adding transaction object to transactionObjectsAwaitingCallHistory: %@
[WARN] Ending transaction for %@ because we timed out waiting for a call history database changed notification
Set %ld recent calls as read using matching predicate '%@'.
Deleted %ld recent calls matching predicate %@
call: %@
self: %@ wiFiAllowed: %d
self: %@ cellularDataAllowed: %d
self: %@ cellularDataPreferred: %d
self: %@ clientUUID: %@
Updated currently broadcasted activity to %@
Queueing activity at beginning of queue: %@ (timeout: %f)
Queueing activity at end of queue: %@ (timeout: %f)
Dequeueing activity: %@
This method expects a non-nil dynamic identifier, but a nil one was providied
Registered to listen for activity type %d and dynamic identifier %@ and started listening for best app suggestions, now tracking: %@
Registered to listen for activity type %d and dynamic identifier %@, now tracking: %@
Unregistered to listen for activity type %d and dynamic identifier %@, now tracking: %@
This method expects a non-nil dynamic identifier substring, but a nil one was providied
Unregistering dynamic identifiers of type %d, matching substring %@: %@
Unregistered to listen for activity type %d, now tracking: %@
Stopped listening for best app suggestions
Best app suggestion changed to %@
Firing delegate callback for stopped activity type %d (%@) and dynamicIdentifier %@
Firing delegate callback with activity type %d (%@) and dynamicIdentifier %@
Migrator is looking for legacy Announce Calls setting in %@
Migrator found legacy Announce Calls setting %@
Migrator did not find legacy Announce Calls setting in %@
Migrator is looking for legacy Conversation Link Base URL setting in %@
Migrator found legacy Conversation Link Base URL setting %@
Migrator did not find legacy Conversation Link Base URL setting in %@
Joining with participantJoinContext: %@
sending dataBlob participant: %@
Querying for capabilities of call members using native destinations: %@
Query for capabilities returned any destinations with web only endpoints: %@
%s: Conversation report = %@
requestActiveParticipants self: %@
Leaving with participantLeaveContext: %@
registerPluginWithOptions:%@ self: %@
restart self: %@
reconnect self: %@
member: %@
requestDataCryptorForTopic: %@ self: %@
requestEncryptionKeyForParticipants: %@ topic: %@ self: %@
addAliasesToConversationContainer: %@ salt: %@ self: %@
participantIDForAlias: %llu salt: %@ self: %@
addRequiredCapabilities: %@ requiredLackOfCapabilities: %@ self: %@
setting local participant type: %ld memberDestination: %@
setting participant type: %ld memberDestinations: %@
sessionProvider: %@ reason: %d error: %@
sessionProvider: %@ participantIDs: %@ localParticipantID: %llu error: %@
sessionProvider: %@ error: %@
sessionProvider: %@ participantType: %ld error: %@
sessionProviderDidTerminate: %@
sessionProvider: %@ activeParticipants: %@ success: %d
[WARN] Received an error for active remote participants
[WARN] Retrying requestActiveParticipants, retry_count=%lu
[WARN] Not retrying requestActiveParticipants, max retry count (%lu) reached
sessionProvider: %@ didReceiveActiveLightweightParticipants: %@ success: %d
[WARN] Retrying requestActiveLightweightParticipants, retry_count=%lu
[WARN] Not retrying requestActiveLightweightParticipants, max retry count (%lu) reached
XPC connection invalidated from client: %@ capabilities: %@
Disconnecting all calls because wantsCallDisconnectionOnInvalidation=YES for %@
Setting isSendingVideo:NO isSharingScreen:NO on call: %@ because wantsCallStopStreamingOnInvalidation=YES for %@
CarPlay screen is now %d
Received AVAudioClient secure microphone interruption
Registered for registerSecureMicrophoneEngagedHandler
Relay capabilities enabled
Relay capabilities disabled
Disconnecting relaying call because relay calling is no longer enabled: %@
Disconnecting call being relayed elsewhere because relay calling is no longer enabled: %@
Received AudioSession Interruption notification: %@
Determined that audio interruption was caused due to built in mic muted, ending all calls
Received CarPlay hardware control: %@
Updating calls in response to CarPlay hardware control: incomingCall %@, activeCall %@, heldCall %@ bargeCall %@
Answering incoming call: %@, %@
Answering incoming call as conversation: %@, %@
Opening URL for incoming call: %@
Not opening URL %@ because outgoing call is provided by SharePlay.
Opening URL: %@ for outgoing call
Encountered error while opening URL: %@ for call: %@
Disconnecting call because there wont be a UI to host the call: %@
Disconnecting proxy call because a video call started connecting: %@
Updating clients with call: %@
Requesting to background launch InCallService
Ignoring call update for client %@ because it's suspended
Updating client %@ with disconnected call: %@ calls: %@
Updating client %@ with calls: %@
conversation: %@ call: %@
providerIdentifiers: %@ client: %@
notification: %@
Pushing all calls to device with destination %@ because an eligible audio route is not available and we found a call hosted here with its expected endpoint on another device: %@
Pulling all calls from relay client device because a an eligible audio route is available and we found a call with an endpoint elsewhere: %@
Non-ringing call found on device: %@. All calls: %@
Ignoring ringing call status change for call %@ because relay calling is disabled (%d) or this call doesn't support relaying call state (%d) or a vehicle route is available (%d) or call is TTY (%d) or call is conversation (%d) or shouldRelayTinCanCall (%d)
Not sending out call started connecting message because call is already disconnected: %@
Not sending out call connected message because call is already disconnected: %@
Sending voicemail call ended notification %@
Picked route %@ changed to A2DP, so muting
Picked route changed from %@ to %@, setting call's bluetooth audio format back to automatic
Dial request rejected due to SOS being active
Dial request rejected due to active emergency call
Received nil call from outgoingCallFromProxyCall: for dial request %@ and displayContext %@
Removing %@ from sanitized join request since it matches a local alias on the ids service: %@
Setting join request to TUConversationAVModeVideo from Audio since this is a GFT conversation
current calls are %@
[WARN] Ignoring request to performUngroupCall because the call is not grouped
[WARN] Ignoring request to performSwapCalls because either there is no active call (%d), there is no held call (%d), or an active call exists that cannot be held (%d)
An endpointRapportMediaSystemIdentifier="%@" or endpointRapportEffectiveIdentifier="%@" is present on answer request for call with identifier %@ so attempting to pick matching route
Performing end active calls and answer ringing call %@ for answer request %@
Aborting end active calls and answer ringing call; answer request does not specify a call to answer.
Aborting end active calls and answer ringing call; could not find any ringing calls to answer.
Aborting end active calls and answer ringing call; could not find ringing call with identifier %@
Aborting end active calls and answer ringing call; ringing call %@ is not the same as the specified call %@
Aborting end active calls and answer ringing call; ringing call %@ does not contain a data source.
Performing end held calls and answer ringing call %@ for answer request %@
Aborting end held calls and answer ringing call; answer request does not specify a call to answer.
Aborting end held calls and answer ringing call; could not find any ringing calls to answer.
Aborting end held calls and answer ringing call; could not find ringing call with identifier %@
Aborting end held calls and answer ringing call; ringing call %@ is not the same as the specified call %@
Aborting end held calls and answer ringing call; ringing call %@ does not contain a data source.
Performing hold active calls and answer ringing call %@ for answer request %@
Aborting hold active calls and answer ringing call; answer request does not specify a call to answer.
Aborting hold active calls and answer ringing call; could not find any ringing calls to answer.
Aborting hold active calls and answer ringing call; could not find ringing call with identifier %@
Aborting hold active calls and answer ringing call; ringing call %@ is not the same as the specified call %@
Aborting hold active calls and answer ringing call; ringing call %@ does not contain a data source.
Changed sourceIdentifier of answerRequest to %@
   ... sending calls were found so adding them to list of calls to disconnect: %@
   ... and adding held calls to the list of calls to unhold: %@
   ... and not unholding held calls because there are active calls %@ or ringing calls %@
   ... no sending calls were found so adding all active calls to list of calls to disconnect: %@
   ... no sending or active calls were found so adding all held calls to list of calls to disconnect: %@
   ... and moving call %@ from call to unhold to call to disconnect because a disconnected call from the same provider doesn't support unambiguous multi-party state: %@
Handoff context did not include any handoff payload. Assuming this is for a relay call
[WARN] Ignoring request to performPushHostedCallsToDestination %@ because not all calls are hosted here and relayable. All calls: %@
[WARN] Ignoring request to performPullHostedCallsFromPairedHostDevice because not all calls are not hosted here and not an endpoint here and relayable. All calls: %@
[WARN] Ignoring request to performPullHostedCallsFromPairedHostDevice because no paired device exists
Disconnecting call with disconnected reason %d: %@
Disconnecting call normally since it was outgoing (%d) or was never connecting to relay (%d): %@
Dialed call: %@
answerRequest: %@
Attempting to answer a Walkie-Talkie call whose endpoint is not Apple Watch; aborting answer request %@ for call %@
Performing answer request %@ for call %@
[WARN] Could not find call for uniqueProxyIdentifier %@. All calls: %@
Holding call with identifier: %@
Unholding call with identifier: %@
Requesting video upgrade for call with identifier: %@
Requesting to disconnect call %@ since also requesting call %@ to upgrade to video
Disconnecting call with identifier: %@
Grouping calls with identifiers %@ %@
[WARN] Asked to group call with data source %@ with another call with a different data source %@
[WARN] Could not find call for uniqueProxyIdentifier %@ (%d) or could not find call for otherUniqueProxyIdentifier %@ (%d)
Ungrouping call with identifier: %@
Swapping calls
Playing DTMF tone for call with identifier: %@ key: %d
Disconnecting current call and activating held call
Disconnecting all calls
Setting TTY type to %d for call with identifier %@
Pulling relaying calls from client
Pushing relaying calls to host with source identifier: %@
Pulling calls from client using handoff info %@
Sending MMI or USSD code for dial request: %@
Setting uplink muted (%d) for call with identifier %@
Setting downlink muted (%d) for call with identifier %@
Setting is sending video (%d) for call with identifier %@
Not updating isSendingVideo: %d since not showing in-call ui
Settings mixes voice with media (%d) for call with identifier %@
Setting sharing screen (%d) for call with identifier %@
Pusing hosted calls to destination %@
Pulling calls hosted on paired device
Sending hard pause digits for call with identifier %@
Updating call with proxy call %@
Entered foreground for call with identifier %@
Entering background for all calls
Entered background for all calls
Setting remote video presentation size to %@ for call with identifier %@
Setting remote video presentation state to %d for call with identifier %@
Setting screen share attributes to %@ for call with identifier %@
Setting screen sharing to (%d) and attributes to %@ for call with identifier %@
Setting Bluetooth audio format to %ld for call with identifier %@
Setting should suppress in-call status bar to %@
Setting should allow ringing call status indicator to %@
Processing SpringBoard request to continue user activity with identifier: %@
Initiating request to pull call for user activity %@
Lauching in-call application; pulled call with identifier %@ for user activity %@
Failed to pull call for user activity %@
Retrieving user activity with identifier %@ failed with error %@
CSDCallStateController: sendUserScoreToRTCReporting with UUID: %@ and Score: %d
CSDCallStateController: joinConversationWithRequest: %@
Setting current audio input to device with UID %@
Setting current audio output to device with UID %@
Picking local route with identifier: %@
Picking paired device with identifier %@
Messaging connection ended for calls %@. Disconnecting calls that are an endpoint here but are not hosted here.
Messaging connection failed for calls %@. Disconnecting calls that are hosted here and an endpoint elsewhere or that are an endpoint here and hosted elsewhere.
Messaging connection could not establish link for calls %@. Disconnecting calls that are hosted here and an endpoint elsewhere or that are an endpoint here and hosted elsewhere.
Requesting initial state for client %@
uniqueProxyIdentifier %@
hasBeenUnlocked changing from %d to %d
Device has been unlocked, so invoking block immediately
Device has not been unlocked, so storing block to be performed upon first unlock
Device has not been unlocked and is not yet observing device lock changes, so beginning to observe device lock changes
Could not obtain application state from user info dictionary %@
Could not obtain bundle identifier from user info dictionary %@
[WARN] Could not obtain bundle identifier from VoIP application %@
XPC network extension connection interrupted from client %@
XPC network extension connection invalidated from client %@
XPC PushKit connection interrupted from client %@
XPC PushKit connection invalidated from client %@
Handling %@
Received request to register VoIP Network Extension for client process with bundle identifier %@
Registering VoIP Network Extension for application with bundle identifier %@
[WARN] Ignoring request to register VoIP Network Extension; could not obtain a bundle identifier from client process %@
[WARN] Aborting register request for VoIP Network Extension; entitlement was not found on client %@
for connection: %@ publicToken: %@
Requesting token for topic %@ for bundle ID %@
[WARN] No environment found for connection %@
for connection: %@ token: %@ topic: %@ identifier: %@
for connection: %@ message: %@
Received incoming APS message from application with bundle identifier %@ and topic %@
Resetting all CSDVoIPApplicationController kill counts
LSApplicationRecord had error %@ when looking up bundle identifiers, can't complete nightly VOIP topic reconciliation
We found an enabled VOIP topic for %@ that is no longer installed. Invalidating its push token
[WARN] Ran nightly VOIP reconciliation and found %d discrepencies
Ran nightly VOIP reconciliation and didn't find any discrepencies.
[WARN] No APS connection found for environment %@
Registering client process %@ with bundle identifier %@ for NetworkExtension VoIP
Aborting NetworkExtension VoIP registration; application with bundle identifier %@ does not have the required entitlement and background mode (VoIP Background Mode: %d, VoIP Network Extension Entitlement: %d)
Asked to register bundle ID %@ with APS environment %@ for VoIP type %@
[WARN] Ignoring voipRegister request because either no bundleIdentifier could be determined (%d) or no environment could be determined (%d) type %d
[WARN] Ignoring %{public}@ unregister request because either no bundleIdentifier could be determined (%d) or no environment could be determined (%d)
Registering client process %@ with bundle identifier %@ for PushKit %{public}@ in environment %@
Environment was %@ but is now %@. Flushing out old registration with previous environment
Aborting PushKit registration for app %@ for type %d because no APS connection exists for the environment (%@)
Aborting PushKit registration for application with bundle identifier %@ because it lacks the voip background mode
Requesting token for topic %@
Setting enabled topics from %@ to %@
Unregistering application %@ from PushKit %{public}@ in environment %@
Supplied environment was nil. Inferring it as %@
Disabling topic %@ and invalidating its token for connection %@
Disabling topic %@ and invalidating its token for all connections
Received incoming network extension message from application with bundle identifier %@
Application %@ will not be launched because it failed to report an incoming call too many times or repeatedly crashed. However because the app is foreground, delivering VOIP payload anyway.
Application %@ will not be launched because it failed to report an incoming call too many times (or repeatedly crashed.)
Attempting to open application %@ and acquire a process assertion
Dropping incoming message because the bundle ID failed to launch
Dropping incoming message because the bundle ID did not launch in time
Successfully opened application
Successfully took out process assertion
Dropping incoming message because the process assertion could not be acquired
Invalidating process assertion for bundle ID %@ from timeout
Killing PTT app %@ because it didn't return a valid PTPushResult in time.
Killing VoIP app %@ because it failed to post an incoming call in time.
Unable to terminate %@ with error %@
[WARN] No existing VoIP application found for bundle ID %@
Aborting request application with bundle identifier %@ does not have the required background mode (VoIP Background Mode: %d)
Ignoring event for session %@, since the activity is a system group activity
Received TUConversationActivityEvent: %@
Dropping notice %@ because of invalid bundleID
Notice %@ is from a lightweightMember, trying to translate
Posting notice: %@ for event: %@
Fetching notices is a no-op
Activating conversation notice with URL: %@ and bundleID %@
Attempt to open application with bundle identifier %@ url: %@ failed with error %@
Successfully opened URL %@ for bundle: %@
[WARN] Error activating conversation notice. Could not find action url %@ or bundleID %@
Removing conversation notice is a no-op
Updating IDS firewall with allowed handles
Deleting calls from IDS firewall if necessary: %@
Removing handle(s) from firewall %@
Not creating activitySession -- bundleID not available
[WARN] Could not find conversation with conversationUUID %@
[WARN] Conversation with conversationUUID %@ is not associated with a Messages group
[WARN] No Messages group provider was registered
Device first unlock block invoked, attempting to retrieve saved providers
Loaded registered providers
Loaded registered local providers: %@
Loaded registered relay providers: %@
Updating current providers to %@
Unregistering provider because its application is no longer installed: %@
Donating user intent to call provider with identifier: %@
Releasing sandboxExtensionHandle for provider: %@
[WARN] Skipping Sandboxing URL as the passed in URL turns out to be a symbolic link: %@
Updating provider from %@ to %@
Updating relay provider from %@ to %@
Device is passcode locked (%d) or existing call has different provider (%d). Indicating activity should open in background.
Device is NOT passcode locked. Indicating activity should open in foreground.
Opening user activity %@ for bundle identifier %@ with options %@
Successfully opened user activity %@ for bundle identifier %@
Failed to open user activity %@ for bundle identifier %@: %@
Could not get LSApplicationRecord for app %{public}@ to determine intent support. Using %{public}@.
App %{public}@ supports %{public}@.
[WARN] App %{public}@ does not support %{public}@, using deprecated %{public}@ and %{public}@.
App %{public}@ does not declare support for any dialing intents. Using %{public}@ or %{public}@. Error: %@
Received %@ conversation message for %@
[WARN] Not handling received Decline message from %@ since we are already in a joined conversation with UUID: %@
[WARN] Ignoring nickname update message %@ because message doesn't have a nickname set.
[WARN] Not honoring screen sharing message
[WARN] Dropping video upgrade message, since member is not part of conversation.
[WARN] Conversation %@ is not in the correct state. Dropping message.
[WARN] No call is being tracked, dropping message for conversation: %@
[WARN] Not handling upgrade message for conversation since upgrades are currently disabled.
[WARN] Not upgrading conversation since there was no join update attached.
[WARN] Not upgrading conversation since the join update has an incorrect subtype.
[WARN] Not upgrading conversation as message is missing upgrade token.
[WARN] Not upgrading conversation as message is missing remote token.
Error while creating UUID from %@
[WARN] Did not receive protoUpgradeSessionUUID part of message %@
Current callUUID: %@, upgradeSessionUUID: %@, conversationUpgradeSessionUUID: %@, existingHandle: %@, upgradeMessageHandle: %@, participantDestination: %@, fromDestination: %@
Starting audio for conversation with conversationUUID %@
Determined that current uplink is muted - muting conversation %@
This is a U+1 invite sent by the local account from a different device, not ringing on the local device for conversation: %@
[WARN] Ignoring incoming invitation message for %@ because invitation preferences requested no-ring. conversation.invitationPreferences=%{public}@, message.tuInvitationPreferences=%{public}@
Ignoring incoming invitation message for %@ since we are already tracking this with call %@
[WARN] Ignoring incoming invitation (LMI approval) because message's group UUID %@ did not match the pending conversation's expected group UUID %@. (link: %@)
[WARN] Ignoring incoming invitation (LMI approval) because it was sent from handle %@ instead of expected approverHandle %@
[WARN] Ignoring incoming invitation (LMI approval) because message's link %@ did not match the link the user tapped (pendingConversation: %@)
LMI: Shuttling in to new conversation and stopping the pending one (moving callUUID %@ to new conversation).
Setting uplinkMuted for conversation: %@ since pendingConversation:%@ has uplinkMuted
[WARN] Ignoring responded elsewhere message since it was not sent from a valid handle.
[WARN] Ignoring responded elsewhere message since is did not come from the originator (%@) or one of our aliases: %@.
[WARN] Ignoring message that we've responded elsewhere for conversation %@ since the conversation is already joining or is joined.
Downgrading local participant since remote participant did not upgrade before the timeout: %@
Ending unanswered outgoing call for conversation with UUID: %@
Successfully sent message with identifier: %@ handle:%@ account: %@
Mode changing fromMode %lu, toMode: %lu, conversationUUID: %@
Mode changing from None, Started tracking callUUID: %@ conversationUUID: %@
Mode changing to None, Stopping tracking callUUID: %@ conversationUUID: %@
Found that a remote user had upgraded to video, upgrading our local conversation to video
conversationChanged for U+1 call with avMode=video remote participant, upgrading CXCallUpdate to video=1
Unable to report outgoing call connected; Leaving conversation since could not find call UUID for conversation: %@
Setting sendingVideo=%@ for conversationChanged
Unable to report outgoing call started connecting; could not find call UUID for conversation: %@
Conversation screen sharing changed: %@ 
 participant: %@
Conversation with UUID %@ failed with context: %@
Exiting addedActiveParticipant callback early since conversation with UUID %@ has been removed - current conversations are %@
Reporting call as connecting and isConversation=true since conversation (state: %ld LMI state: %ld) with UUID %@: addedActiveParticipant %@.
Not reporting a U+1 call as connecting when active participant is added since it is going through LMI flow (state %ld and LMI state %ld) and should not connect until user presses join in the staging area; conversation UUID %@: addedActiveParticipant %@.
Ending callUUID:%@ with conversation with UUID %@:
[WARN] Could not fail conversation with reason %ld callUUID not found for conversation UUID %@
[WARN] Could not report conversation as continued as could not find call for conversation UUID %@
Connection started for a conversation we are not tracking a call for
Joining conversation for answer call action: %@
No conversation with UUID: %@
performAction UUID:%@
[WARN] GFT calls are not allowed on GreeTea devices
LMI: This pseudonym is mine, but couldn't find the link - triggering link recovery and failing the action {pseudonym: %@}
No link was found
LMI: Could not assemble link for pseudonym %@ and publicKey %@
letMeIn: %@
Joining from links is disabled by server bag value, failing pending conversation %@
LMI: Asking CSDConversationManager to request let me in approval for pseudonym: %@
Can't use existing conversation %@ because its initiator %@ is not us, not the link creator %@, and not an invited handle to the link %@. Falling back to LMI request/response flow.
There's already an ongoing conversation %@ with the same groupUUID as the link %@, but the conversation does not have the same link %@
Even though we have the information needed to create a conversation with this link, none of our currently active handles are the link creator %@ or one of the invited handles %@. Falling back to LMI request/response flow.
[WARN] Skipping member with handle %@ because it already exists in seen handles: %@
LMI: Reporting LMI call with UUID: %@ update: %@
pseudonymsByCallUUID: %@, conversationsByUUID: %@
Removing pending conversation with pseudonym %@ and callUUID %@
Failing action: %@ since conversation: %@ did not meet conditions
[WARN] Cannot enable video because conversations do not allow video on this device
conversation is not eligible for CXSetSendingVideoCallAction since it does not support video
conversation is not eligible for CXSetSendingVideoCallAction since its relaying else where
Group conversation has presentation state %d so requesting to unpause video
[WARN] Could not find conversation for sendingVideo call UUID %@. self.conversationUUIDsByCallUUID: %@ self.conversationManager.conversationsByUUID: %@
All active participants do not have minimum supported screen sharing version
Device does not support screensharing
conversation %@ is not eligible for CXSetSharingScreenCallAction since its relaying else where
conversation %@ is not eligible for CXSetSharingScreenCallAction since its not joined yet
[WARN] Could not find conversation for screen share call action call UUID %@. self.conversationUUIDsByCallUUID: %@ self.conversationManager.conversationsByUUID: %@
conversation %@ is not eligible for CXEnableVideoCallAction since its not joined yet
[WARN] Could not find conversation for enableVideo call action call UUID %@. self.conversationUUIDsByCallUUID: %@ self.conversationManager.conversationsByUUID: %@
[WARN] Could not find conversation for set video presentation state action call UUID %@. self.conversationUUIDsByCallUUID: %@ self.conversationManager.conversationsByUUID: %@
[WARN] Could not find conversation for relaying call action call UUID %@. self.conversationUUIDsByCallUUID: %@ self.conversationManager.conversationsByUUID: %@
Raise to ear gesture detected, answering incoming call.
[WARN] bundleIdentifer: %@ not in the foreground, failing join call action
Performing end call action %@
[WARN] Could not find conversation for end call action call UUID %@. self.conversationUUIDsByCallUUID: %@ self.conversationManager.conversationsByUUID: %@
Failing %@ It is not supported by GFTaaS
Failed to start conference connection for answered call %@: %@. Disconnecting call with relay failed
Transport did not become available for answered call %@
Conference connection ended for call %@. Disconnecting call normally
Conference connection failed for call %@: %@. Disconnecting call with relay failed
Not disconnecting call because this conference transport is %@ but the call's current relay client transport is %@
Received did stop for call that is already disconnecting/disconnected
_launchInCallApplicationForOutgoingCallOnHostIfNecessary
For received dial call message, the dial request is SOS, so disconnecting all existing calls immediately.
Dialing without relay because cannotRelayAudioOrVideoOnPairedDevice is set (%d) or an eligible route is available (%d)
Nil call returned when dialing call. Notifying client of failed dial call for %@
Dialing with relay. isTinCanProvider: %d, message.hasSourceIdentifier: %d, message.cannotRelayAudioOrVideoOnPairedDevice: %d, eligibleRouteAvailable: %d
Nil call returned when dialing call. Notifying client of failed dial call for %@ 
Failed to start conference connection for dialed call uniqueProxyIdentifier %@: %@.
Conference connection stopped (cleanly=%d) for dialed call uniqueProxyIdentifier %@: %@
[WARN] Received %@ message, but the transport didn't become available
[WARN] Received %@ message, but we already have some non-relaying calls. Sending device busy message.
Answering without relay because wantsHoldMusic is set (%d) or cannotRelayAudioOrVideoOnPairedDevice is set (%d)
[WARN] Could not find call with other uniqueProxyIdentifier %@. All current calls: %@
No other unique proxy identifiers included. Assuming legacy behavior
[WARN] Could not find another call to group with. All calls: %@
No call was specified with SendHardPauseDigits message...
...so sending hard pause digits for call %@
...and no hosted call was found with TUHardPauseDigitsStateDigitsAvailable, so not sending hard pause digits
Setting sourceIdentifier to %@ for all calls before pulling
Opening URL for handled pushRelayingCalls message from client: %@
[WARN] Could not find any audio route with source identifier %@. Ignoring push relaying calls request
[WARN] Asked to pull relaying calls from client when no calls with an endpoint elsewhere exist. All calls: %@
Pushing hosted call: %@
Conference did not start successfully when pushing call. Resetting endpointOnCurrent device to YES for %@
Socket did not become available when pushing call. Resetting endpointOnCurrent device to YES for %@
Failed to prepare conference for pushing hosted call %@
[WARN] %@
[WARN] Bad activity type: %d
Registering for %@ user activity type and dynamic identifier %@
[WARN] Asked to register for activity type %@ (%d), but that is not supported
Unregistering for %@ user activity type and dynamic identifier %@
[WARN] Asked to unregister for activity type %@ (%d), but that is not supported
Beginning advertising user activity as current: %@
Stopping advertising user activity as current, without invalidating: %@
Invalidating user activity: %@
Error creating '%@' sandbox extension directory: %@
[WARN] Not loading registered providers because current registered providers version is %ld and minimum version is %d
registeredLocalProvidersByIdentifier: %@
registeredPairedHostDeviceProvidersByIdentifier: %@
Error while querying file attributes: %@
Error creating link to source URL '%@' with filename '%@': %@
Error removing links for filenames not in array (%@): %@
Could not deserialize data to TUCallProvider instance: %@
Registered providers object was of unexpected class %@: %@
Request timed out for transaction ID: %@
[WARN] Received results for timed out transaction with ID %@
Updating session to videoEnabled=NO after creation since current device or call does not support video
Received nil AVCSession creation block
Created AVCSession %@ with config: %@
uplinkMuted: %d
audioEnabled: %d
setVideo: %d
[WARN] Switching to video is currently not supported
videoEnabled: %d
Device does not support screen sharing with camera on, also updating screenEnabled
videoPaused: %d
audioPaused: %d
presentationState: %d
presentationRect: (%f, %f, %f, %f)
setting presentationLayout: (%u)
screenEnabled is not supported - returning
screenEnabled:%d screenShareAttributes: %@
Stopped capture of %@
[WARN] Device does not support screen sharing, ignoring to set screenEnabled
Device does not support screen sharing with camera on, also updating videoEnabled
Determined shouldSetScreenEnabled: %@
Updating session screenEnabled: %@
Not setting screenEnabled since oneToOneModeEnabled is YES
Determined shouldSwitchToGFTMode: %@
Queueing completion block to execute after updating oneToOneEnabled: %d
oneToOneEnabled: %d
Started capture of %@ with configuration: %@
Queueing capture completion block to execute after current capture session is stopped
Queueing capture completion block to execute after screen becomes enabled
screenShareAttributes: %@
relaying: %d
oneToOne transition completed, re-requesting addParticipant
Already have oneToOne transition in progress, delaying addParticipant request for participant: %@
addParticipant: %@ videoEnabled: %d screenEnabled: %d
[WARN] Ignoring request to add participant %@ because they're already in the conversation
oneToOne transition completed, re-requesting removeParticipant
Already have oneToOne transition in progress, delaying removeParticipant request for %@
removeParticipant: %@
[WARN] Could not find participant %lu in the active participant list, but they're in the list of pending removals
[WARN] Could not find participant with identifier %lu all participants: %@
identifier: %llu downlinkMuted: %d
Unknown participant identifier %llu current participants: %@
identifier: %llu audioEnabled: %d
identifier: %lu audioPaused: %d
Unknown participant identifier %lu current participants: %@
identifier: %lu videoEnabled: %d
identifier: %lu screenEnabled: %d
identifier: %llu audioAndVideoMuted: %d
identifier: %lu videoQuality: %lu visibility: %lu prominence: %lu positionalInfo: <flags: %u, position: (x: %f, y: %f, z: %f, w: %f, h: %f)>
Calling stop on screen capture
[WARN] Ignoring avcSession didStart as the error that was returned was benign
error: %@
AVCSession %@ server did disconnect
addParticipant: %@ didSucceed: %d error: %@
addParticipant: %@ Active remote participants: %@
Got captions token: %lu for participant %@
Failed to add participant %@: %@
Retrying to add participant after one to one mode changes %@: %@
[WARN] Delegate responded that we are not tracking active remote participant anymore, not retrying to add participant: %@
removeParticipant: %@ didSucceed: %d error: %@
Failed to remove participant %@: %@
removeParticipant: %@ Active remote participants: %@
didUpdate: %d configuration: %@ error: %@
Failed to update session with configuration %@: %@
audioEnabled: %d didSucceed: %d error: %@
Failed to set local audio enabled (%d): %@
videoEnabled: %d didSucceed: %d error: %@
Failed to set local video enabled (%d): %@
screenEnabled: %d didSucceed: %d error: %@
Failed to set local screenEnabled (%d): %@
executing queued up block since screen enabled did succeed
audioPaused: %d didSucceed: %d error: %@
Failed to set local audio paused (%d): %@
videoPaused: %d didSucceed: %d error: %@
Failed to set local video paused (%d): %@
oneToOneEnabled: %d didSucceed: %d error: %@
Already received oneToOneEnabled callback with this value, not handling
Failed to set oneToOneEnabled (%d): %@
executing queued up block since oneToOneEnabled succeeded
mediaStateDidChange: %d forMediaType: %d didSucceed: %d error: %@
participant: %@ audioEnabled: %d didSucceed: %d error: %@
participant: %@ videoEnabled: %d didSucceed: %d error: %@
participant: %@ remoteAudioEnabledDidChange: %d
participant: %@ remoteVideoEnabledDidChange: %d
participant: %@ remoteAudioPausedDidChange: %d
participant: %@ screenEnabled: %d didSucceed: %d remoteScreenEnabled: %d
participant: %@ remoteScreenEnabledDidChange: %d participantScreenEnabled: %d
participant: %@ remoteMediaStateDidChange: %d forMediaType: %d
screenCapture: %@ didStart: %d, captureWithError: %@
screenCapture: %@ didStop: %d, captureWithError: %@
executing queued up block since capture session stop succeeded
self: %@ reason: %d
[WARN] Ignoring invitation accept since we have previously processed one.
Secondary Thumper accounts changed from %@ to %@
[WARN] Skipping device %@ because uniqueIDOverride is nil
Attempting to find primary Thumper account in accounts: %@ devices: %@ outgoingCallerIDURI: %@
Found default paired device; setting primary Thumper account to %@
Found matching outgoing caller ID %@; setting primary Thumper account to %@
No primary Thumper account found for outgoingRelayCallerID %@ but requireMatchingCallerID is NO. Arbitrarily choosing last Thumper account from list: %@
[WARN] Could not find subscription with UUID %@. All subscriptions: %@
Associated Thumper account ID changed from "%@" to "%@"
Comparing specified Thumper account ID %@ to cached associated Thumper account ID %@
Sending CommCenter a request to set associated Thumper account ID to "%@"
Received request to set capability information %@ capabilityInfo for subscription %@
Updating VoLTE capability state with %@
Updating VoWiFi capability state with %@
Updating Thumper capability state with %@
Retrieved new telephony call capabilities for subscription %@: %@
Retrieved new system capabilities for subscription %@: %@
Setting new emergency callback mode %@.
Updating Thumper account state with %@
Updated local Thumper device ID to %@
[WARN] Could not initialize Thumper account with Thumper account dictionary: %@
Updated local Thumper accounts to %@
Updated secondary Thumper accounts to %@
Found associated Thumper account ID; updated associated Thumper account ID to %@
Found matching secondary Thumper account; updated associated Thumper account ID to %@
Subscriptions changed for client: %@
Subscription cache requires an update; associated Thumper account ID changed
Subscription cache requires an update; secondary Thumper accounts changed
Determined if endpoint should be on current device: %@; hasRelaySupport: %@, anyOtherCallHasAnEndpointElsewhere: %@, relayCall.isSOS: %@
Asked to dial call %@ but the host was unavailable
Asked to dial call %@ but the session was unavailable
[WARN] Transport did not become available when dialing call %@
Setting endpoint elsewhere for call because it can't be answered with audio or video relay: %@
Transport did not become available when answering call %@
Transport did not become available when pulling call. Resetting endpointOnCurrent device to NO for %@
Opening URL for handled pushHostedCalls message from host: %@
Disconnecting call with conference failed disconnected reason: %@
Not disconnecting call for failed conference start because it is not an endpoint here: %@
Not disconnecting call for conference didStop because it is not an endpoint here: %@
Adding %@ as an alias on account %@
Failed to add alias %@ to account %@. Validation status: %ld, validation error reason: %ld, vetted aliases: %@
Updating display name to %@ on account %@
Received IMDaemon connected notification: %@
Received preferred account changed notification: %@
Received display name changed notification: %@
Loaded last known FaceTime caller ID as %@
[WARN] Could not find lastKnownFaceTimeCallerID in keychain, error: %@
Querying Preferences to see if it exists
Found lastKnownFaceTimeCallerID: %@ in Preferences
[WARN] lastKnownFaceTimeCallerID not found in Preferences either
Removing callerID Preferences value
Saving last known FaceTime caller ID as %@
Error while saving _callerID %@
FaceTime caller ID changed from %@ to %@
Deferring FaceTime caller ID refresh until connected to IMDaemon
%@ account %@ aliases changed %@
Failed to get active contexts from client %@: %@
Error getting emergency callback mode (domain=%d, code=%d)
Failed to get Thumper device info: %@
Failed to get call capabilities: %@
Failed to get capability info for subscription %@: %@
Failed to get system capabilities for subscription %@: %@
Calling -[CoreTelephonyClient context:setCapability:enabled:with:completion:] with capability: %@ enabled: %d info: %@
Failed to set enabled=%d for capability %@ with info %@: %@
Calling -[CoreTelephonyClient context:addPhoneServicesDevice:withCompletion:] with idsDeviceIdentifier: %@
Failed to add secondary Thumper device with IDS device identifier %@: %@
Calling -[CoreTelephonyClient context:removePhoneServicesDevice:withCompletion:] with idsDeviceIdentifier: %@
Failed to remove secondary Thumper device with IDS device identifier %@: %@
Calling -[CoreTelephonyClient context:recheckPhoneServicesAccountStatus:] with capability: %@
Calling _CTServerConnectionEnableEmergencyCallBackMode() with %@
Calling _CTServerConnectionSetCapabilityExtended() with capability: %@ value: %d capabilityInformation: %@
Error setting capability for %@ calling (domain=%d, code=%d)
Error getting system capabilities (domain=%d, code=%d)
Calling _CTServerConnectionPhoneServicesAddDevice() with capability: %@ idsDeviceIdentifier: %@
Error adding device for %@ calling (domain=%d, code=%d)
Calling _CTServerConnectionPhoneServicesRemoveDevice() with capability: %@ idsDeviceIdentifier: %@
Error removing device for %@ calling (domain=%d, code=%d)
Calling _CTServerConnectionPhoneServicesAccountStatusChanged() and _CTServerConnectionSendBarrier() with capability: %@
Failed to get ISO countrycode for subscription %@: %@
Failed to get mobile country code for subscription %@: %@
Could not find a subscription matching the specified UUID %@
Retrieved mobile country code %@ and mobile network code %@ for subscription %@
Failed to get mobile network code for subscription %@: %@
Error getting ISO country code (domain=%d, code=%d)
Retrieved ISO country code %@ for mobile country code %@ and mobile network code %@
Received delegate callback callCapabilitiesChanged: with context: %@ info: %@
Received context:capabilitiesChanged: with context: %@ info: %@
%@ is handling phoneServicesCapabilitiesChanged: with userInfo %@
Received kCTEmergencyCallBackModeStatusNotification with userInfo %@
Not allowing creation since activitySession doesn't support aTV handoff. session: %@
Attempted to decode association voucher for handle (%@) that is either both or neither of the primary (%@) and associated (%@) handles.
Call status changed for call: %@
for call: %@
for message: %@
transactionGroup: %@
with action: %@ for call %@
route: %@
reporter: %@
createConversationReportingSession using conversation: %@
chat=%@
groupActivitiesReports received for conversation %@
blob recovery started for conversation %@
attempted transition for conversation %@
blob recovery timed out for conversation %@
message retry started for conversation %@
message retry failed for conversation %@
message retry succeeded for conversation %@
avc blob request message retry started for conversation %@
avc blob request message retry failed for conversation %@
avc blob request message retry succeeded for conversation %@
VoIP app %@ failed to post incoming call
VoIP app %@ no longer eligible to launch
VoIP push for app %@ dropped on the floor
receivedLetMeInRequestForConversation: %@
sentLetMeInRequestForConversation: %@ isApproved: %d
Send User Score to RTCReporting with UUID:%@ and Score:%d
Send activity session ended with startDate %@ endDate%@ session %@
Reporting %@
%@ reported blocked call with UUID %@
%@ reported known call with UUID %@
%@ is handling %@.
%@ initialized for service %@ with the following devices: %@
Adding firewall entries for dictionary: %@
Adding firewall entries with time %@ for handles: %@
Not adding handle %@ to firewall since uri %@ is nil
Adding firewall entries1 %@
Adding firewall entries2 %@
Failed to add firewall entries: %@ to firewall with error: %@
Failed to retrieve firewall with error: %@
Removing all IDSFirewall entries
Failed to remove all firewall entries with error: %@
Removing handles from IDSFirewall: %@
Removing firewall entries: %@
Failed to remove firewall entries: %@ to firewall with error: %@
Adding copyIDtoken:%@ to capable destinations for device: %@
Determining country code using account info %@
Asking IDS to generated a pseudonym for unprefixedURI: %@ and properties: %@
[WARN] IDS failed to retrieve pseudonym with error %@
No IDSPseudonym matching string %@ was found. All pseudonym URIs: %@
Asking IDS to revoke pseudonym: %@
No pseudonym matching %@ was found.
Asking IDS to renew pseudonym: %@
%@: Active accounts changed
%@: Devices changed
%@: Nearby devices changed
%@: Told that a pseudonym was added to our account.
%@ updated state: defaultPairedDeviceExists=%d, pairedDeviceExists=%d, telephonyCapableDeviceExists=%d, relayCapableDeviceExists=%d, availableOutgoingRelayCallerIDs=%@ deviceNames="%@"
[WARN] Could not find session for identifier %@ to perform block on transport availability for. Dropping this block on the floor
No devices found that support call provider %@. Not creating a session.
Creating session to devices: %@
[WARN] destination for device returned a nil value, so we are going to skip creating a session to it: %@
Creating session to destinations: %@
Would have created a session to an empty destination set. Returning a nil session
Destroying session %@
Asked to prepare session to end for identifier %@
Asked to prepare connected sessions to end
Accepting session for identifier %@
Canceling/declining session for identifier %@
Asked to end ending sessions
sendMessageAndStartSessionIfNecessary for service %@ and message type %@: %@
Not starting a new session for identifier %@ because an active session for the identifier already exists: %@
No session exists. Starting a new one by inviting all devices that support provider %@
A session exists with a destination/device that supports provider %@: %@
We'll send this message via the existing session
Starting another session to the device
Starting another session to the destination
[WARN] A session exists, but it's with a device that doesn't support provider %@. Not starting a new session
Did not create session
sendMessageAndStartSessionIfNecessary for message type %@: %@
No IDSSession exists. Starting a new one by inviting to destination %@
[WARN] No IDSSession exists, and given device is nil. We can't start this session
A session exists: %@
Sending the message through the existing session
Starting a new session to the destination of the device with an active session
[WARN] Cannot start a new session, no valid destination
sendMessage:andAcceptInvitationIfNecessaryForIdentifier for identifier %@ and message type %@: %@
Session for identifier is %@
A current session already exists: %@
Sending the message through the current session
Sending the message through the current session and declining this one %@
No current session already exists, so sending the message through this session %@
Could not determine session to accept for identifier %@ and message %@. All sessions: %@
sendMessage:andCancelOrDeclineInvitationIfNecessaryForIdentifier for identifier %@ and message type %@: %@
Session has multiple identifiers: %@. Removing identifier %@ and not canceling/declining
_sendMessage:andCancelInvitationIfNecessaryForIdentifier for session %@ and message type %@: %@
_sendMessage:andDeclineInvitationIfNecessaryForIdentifier for session %@ and message type %@: %@
for message type: %@ identifier: %@ destinations: %@ waitUntilConnected: %d
identifier: %@ message: %@
sendMessage through session %@ for message type %@ to destinations %@: %@
sendMessage through session %@ for message type %@: %@
Not sending message because protocolVersionCustomizationBlock's preventMessageSend was set to YES for message type %@: %@
No session available to send message type %@: %@
Invite received for session %@ from (fromID=%@) destination %@ device %@ with message %@ (timestamp: %f)
... and it's from the same destination that we have an active session with (%d) or it's from the same device that we have an active session with (%d) or we don't have a session (%d)
... so we are going to handle the session's message
... but we were told to ignore the invite
... but there was no accompanying message so just ignoring the invite
... but it is from a different device than the one that we have an active session with
... and we were told to decline the invite
... and we were NOT told to decline the invite, so just ignoring it
Session ended with reason %d
Notifying delegate of connection end
[WARN] Notifying delegate of connection failure
[WARN] Notifying delegate that connection could not establish link
Not notifying delegate of messenger connection end because a different active session with the same identifier exists: %@
Received invitation accept with no data payload.
Received invitation cancel with no data payload. Assuming the invitation was answered elsewhere
Received invitation decline with no data payload. Assuming invitation was accepted by sending a message through another session
videoStreamToken: %ld
Moments XPC connection interrupted from client %@
Moments XPC connection invalidated from client %@
handle disconnect for client: %@
mediaType: %d, token: %ld localVideoRecordingEnabled: %d
Successfully started AVCMomentsRequest: %@, transactionID %@
Failed to start AVCMomentsRequest: %@, error: %@
transactionID: %@
Successfully ended request %@
Failed to end request %@: %@
Registering stream token %ld, requesterID %@ and remoteIDSDestinations %@ with new moments object
Registered new moments object %@ with supported media types: %@
unexpected supportedMediaTypes: %@, moments: %@, streamToken: %ld
[WARN] FaceTime Photos availability is %d but remoteIDSDestination is nil so changing availability to Unavailabile
FaceTime Photos is not available. Availability is %d
updating remoteIDSDestinations and returning registered session: %@ for streamToken: %ld
Asked to unregister stream token: %ld
didFinish request: %@, error: %@
new capabilities: %u
didStartProcessing request: %@
Received moments didStartProcessingRequest but moments is disabled by server bag or default
Failed to start processing request: %@
didEndProcessing request: %@, stillImageURL: %@ movieURL: %@
Ignoring processing end of request because moments is disabled by server bag or default
Failed to find session for moments stream token: %ldl
failed to find remoteIDSDestination from request: %@ in session remoteIDSDestinations: %@
Did not receive both parts of Live Photo for request: %@
Media files for Live Photo do not have the correct path extensions. stillImageURL: %@ movieURL: %@
Received an error staging the still photo: %@
Did not receive movie URL for request: %@
Received an invalid request transaction ID: %@
Received an error creating the temporary directory: %@
Received an error staging the movie file: %@
moment server disconnected: %@
url: %@ metadata: %@ isZipped: %d fromIDSDestination: %@
session: %@ request: %@ remoteIDSDestination: %@
Unzipped resource to URL: %@
Failed to unzip file at URL %@
Received non-zipped resource at %@
Received moments resource from IDS destination %@ but expected %@
Could not convert remote IDS destination %@ (token=%@) and/or from IDS destination %@ (token=%@) to token data
Received moments resource with unknown transaction ID %@. All sessions: %@
Received moments resource with missing transaction ID in metadata: %@
Received moments resource but moments is disabled by server bag or default
file url: %@ was not sent successfully
Preserving file at URL: %@
Could not retrieve contents of dictionary at URL %@: %@
Unregistering stream token: %ld
Cleaning up state for moment: %@
Delaying cleanup because moment is still registered (%d) or has outstanding requests (%lu)
url: %@ session: %@ request: %@
url: %@
Could not determine both photo URL and video URL from contents of directory: %@
Resources directory URL %@ does not exist
_handleReceivedVideoURL: %@
saving live photo with photo url: %@ video url: %@
Error saving resources with photo url: %@ video url: %@
Saving video with url: %@
Error saving resources with video url: %@
[WARN] Timeout reached for active request for transaction ID %@
momentDescriptor: %@
Initializing AVConference with client UUID %@
[WARN] Error calling getIsSendingAudio: %@
[WARN] Error calling setSendingAudio: %@
[WARN] Error calling getIsAudioPaused: %@
Setting pause audio to %d for %@
[WARN] Error calling setPauseAudio: %@
[WARN] Error calling getIsVideoPaused: %@
Setting pause video to %d for %@
[WARN] Error calling setPauseVideo: %@
Setting conference visual rectangle of size %@ for %@
Setting conference state %@ for %@
Setting local portrait aspect ratio %@ and local landscape aspect ratio %@ for %@
Setting peer reporting identifer %@ and session identifier %@ for %@
Failed to initialize a new call with device role %d. Got callID=%ld
Starting AVConference connection with isCaller=%d callID=%ld remoteInviteDictionary=%@ capabilities=%@ destination=%@
Starting AVConference connection with isCaller=%d callID=%ld capabilities=%@ socket=%d
Stopping AVConference with callID=%ld
Canceling AVConference with callID=%ld
conference=%@ didStartSession=%d userInfo=%@
callID=%ld error=%@
callID=%ld error=%@ callMetadata=%@
callID=%ld
screenAttributes=%@ callID=%ld
videoAttributes=%@ callID=%ld
callID=%ld didPauseAudio=%d error=%@
didPause=%d callID=%ld
callID=%ld didPauseVideo=%d error=%@
[WARN] callID=%ld isStalled=%d
AVConference server died
callID=%ld parameters=%@
callID=%ld isDegraded=%d isRemoteVideo=%d
[WARN] callID=%ld isNetworkBad=%d
callID=%ld didReceiveData=%@
Ignoring to add %@ call since it is TinCan (%d) or PTT Barge Call (%d).
[WARN] Ending mutually exclusive call with uPI %@ because we have a newer incoming call that can not co-exist with it.
_endMutuallyExclusiveCalls: update=%@
Found multiple existing mutually exclusive calls.  Ending call %@
Ignoring mutually exclusive update
_endMutuallyExclusiveCalls: mutuallyExclusiveCall=%@, error=%@
Start call action fulfilled: %@
Start call action failed: %@
Join call action fulfilled: %@
Join call action failed: %@
Answer call action fulfilled: %@
Answer call action failed: %@
End call action fulfilled: %@
End call action failed: %@
Set held call action fulfilled: %@
[WARN] Set held call action failed but reverting state is allowed: %@
Set held call action failed and reverting state is not allowed: %@
Set group call action fulfilled: %@
Could not find call to group with for set group call action: %@. All call: %@
[WARN] Set group call action failed but reverting state is allowed: %@
Play DTMF call action fulfilled: %@
Play DTMF call action failed: %@
Set sending video call action fulfilled: %@
Set sending video call action failed: %@
Set muted call action fulfilled: %@
Set muted call action failed: %@
Set tty call action fulfilled: %@
Set tty call action failed: %@
Set relaying call action failed: %@
[WARN] Set relaying call action failed: %@
Action fulfilled: %@
Action failed: %@
[WARN] Not allowing requested %@ because user intent could not be validated for call source with identifier: %@
[WARN] Not allowing requested start call action because a call with same UUID already exists callWithUUID: %@, relayCallWithUUID: %@
[WARN] Not allowing requested start call action because call source %@ is at the maximum call group count of %lu: %@
[WARN] Not allowing requested action because no call was found to group with for action %@ and call source %@. All calls: %@
[WARN] Not allowing requested answer call action because a relay call with same UUID already exists: %@
[WARN] Not allowing requested action because no call was found for call UUID %@ and call source %@. All calls: %@
[WARN] Not allowing requested action because action is not allowed to be requested: %@
[WARN] Not allowing requested transaction because it is empty: %@
Allowing requested transaction: %@
[WARN] Not allowing requested transaction: %@
Dialing new call due to requested start call action: %@
Adding supplemental set held call action for existing call %@
Could not serialize handoffActivityUserInfo into a CXHandoffContext: %@
[WARN] Could not determine call source for dial request: %@. All call sources: %@
Asked to perform action %@ for call %@
Sending %@ for existing call with uniqueProxyIdentifierUUID=%@ callGroupsAllowsHold=%d supportsHolding=%d
Asked to perform start call action %@ for call %@
Call source %@ registered with configuration %@
Error while determining process action for callSource: %@, action: %@
Received add incoming call request from call source %@ with UUID %@ update %@
[WARN] Returning error for add incoming call request because SOS is active
Query result: %@ for handle: %@ callSource: %@
[WARN] Returning error for add incoming call request because it was on the block list
[WARN] Blocking call because we are screen sharing and don't want to let that notification come through
[WARN] Returning error for add incoming call request because call did not pass DND filter. CarMode (%d) BT Audio Route (%d), CarPlay (%d)
[WARN] Returning error for add incoming call request because it is a direct call to a secondary device and relay calling is preferred over direct calling
[WARN] Update requires additional authentication before it can be answered
[WARN] There is an error: %@, but we are still asked to report call to clients
[WARN] Ignoring add incoming call request because a call already exists with the same UUID: existingCall: %@, relayCallWithUUID: %@
Call source %@ updated call with UUID %@ with update %@
[WARN] Sending %@ for existing call with uniqueProxyIdentifierUUID=%@ since it cannot co-exist with ongoing calls.
[WARN] No call found for call source %@ and UUID %@. All calls: %@
Call source %@ ended call with UUID %@ with ended at date %@ with reason %ld failure context %@
[WARN] Deferring acknowledgement of VoIP call with UUID %@ ended until minimum ring duration has passed
Setting callGroupUUID to nil for orphaned grouped call %@
[WARN] Call %@ already has a date ended
Call source %@ sent invitation for outgoing call with UUID %@ at date %@
[WARN] Call with UUID %@ already has a date started outgoing
[WARN] Call with UUID %@ is not outgoing
Call source %@ started connecting call with UUID %@ at date %@
[WARN] Call with UUID %@ already has a date started connecting
Call source %@ connected outgoing call with UUID %@ at date %@
[WARN] Call with UUID %@ already has a date connected
[WARN] Call with %@ is not outgoing
Call source %@ finished audio for call with UUID %@
Found call %@ for UUID %@, so setting hasAudioFinished
Did not find a call for UUID %@, so expediting deferred end interruption instead
Call source %@ received call with UUID: %@ crossDeviceIdentifier %@ bytesOfDataUsed %ld
Call source %@ received requested transaction %@
Call source manager %@ completed transaction group %@
Pull call action fulfilled: %@
Pull call action failed: %@
Could not find pulled call context for completed pull call action %@. All contexts: %@
Call action completed for call: %@
[WARN] Could not find call for completed call action: %@. All calls: %@
Action completed: %@
Call sources changed: %@
Ending call %@ since its backing call source %@ is no longer connected
Call controller host %@ requested transaction %@ for connection with identifier: %@
Using call source %@ for requested transaction %@
[WARN] Not allowing requested transaction because no call source was found. All call sources: %@
Marking all calls as changed because providers changed
Because this is an internal install, com.apple.Superbox (aka Speakerbox) is acting as a system provider
machServiceName: %@ newConnection: %@
Accepting XPC client for %@: %@
Rejecting client for %@ because it lacks the %@ capability: %@
Started tracking call: %@
Stopped tracking call: %@
Asked to answer call %@ while disconnecting calls %@ and holding calls %@
Asked to hold calls %@ while unholding calls %@
Asked to group calls %@ with calls %@
Asked to ungroup call %@ from other calls in group %@
Asked to disconnect call %@ while ungrouping call %@
Asked to disconnect all calls %@
Asked to disconnect calls %@ while holding calls %@ and unholding calls %@ and ungrouping calls %@
Asked to set TTY type to %d for calls %@
Asked to set uplink muted to %d for calls %@
handleCallStatusChanged %@
bytesOfDataUsed: %ld callHistoryIdentifier: %@
[WARN] Invalid TUHandle generated from CXLabelHandle %@
[WARN] Invalid TULabeledHandle generated from CXLabelHandle %@
[WARN] Invalid TUSenderIdentity generated from CXSenderIdentity %@
Setting enableCriticalReliability %@
Received notification that AVAudioClient has been activated, notifying conversation
%@ should not handle conversation: %@
Conversation manager reported a new incoming conversation %@ from handle %@
Ignoring new conversation %@ since we are already tracking this with call %@
Skipping to report a new call since we already have a call with UUID: %@ for conversationUUID: %@
Conversation is not call eligible; will not report incoming call for conversation with UUID %@
Not reporting call since validNetworkReachable is false
Incoming invite is from an participant %@, upgrading CXCallUpdate
Ending ringing call for conversation with UUID: %@
Could not report new multiway call from %@: %@
Also going to fulfill start call actions: %@ since we are exclusively managing this call
endCallWithUUIDAsAnsweredElsewhere: %@
endCallWithUUIDAsDeclinedElsewhere: %@
endCallWithUUIDAsLocalHangup: %@
Reporting call failure for conversation with conversationUUID %@ and callUUID %@
Found an extra conversation that needs to be cleaned up: %@
[WARN] Asked to clean up conversation from our list but could not find it in conversation manager list: %@ callUUID: %@
Not leaving conversation but stopped tracking callUUID: %@ for conversationUUID: %@
Invitation preferences were set on the action, using those for the join context: %@
Invitation preferences weren't set on the action but existed on the conversation, using those for the join context: %@
Setting uplinkMuted for action: %@ conversation: %@
Checking whether to leave conversation with UUID %@: removedActiveParticipant %@.
No conversation found in conversation manager with UUID %@ so we are not checking whether to end the call after a participant left
Ending call since U+1 conversation with UUID %@: removedActiveParticipant %@.
[WARN] Couldn't find call to end for conversation %@. Falling back to leaving conversation directly.
Delaying check on whether to end call since participant %@ left conversation due to handoff
Not delaying check on whether to end call on participant leave
providerDidBegin: %@
providerDidReset: %@
providerDidDeactivateAudioSession
Asked to hold relay calls %@ while unholding relay calls %@
Asked to answer relay call %@ while disconnecting active relay calls %@
[WARN] Ignoring request to answer call because canBeAnswered is NO: %@
Asked to answer relay call %@ while disconnecting held relay calls %@ and holding relay calls %@
Asked to answer relay call %@ while holding relay calls %@
Asked to group relay calls %@ with relay calls %@
Asked to ungroup relay call %@ from other relay calls in group %@
Asked to disconnect relay call %@ while ungrouping relay call %@
Asked to disconnect relay calls %@
Asked to disconnect relay calls %@ while holding relay calls %@ and unholding relay calls %@ and ungrouping calls %@
Received notification: %@
softlink:r:path:/System/Library/Frameworks/Intents.framework/Intents
$sSY
$ss25ExpressibleByArrayLiteralP
$ss10SetAlgebraP
$ss9OptionSetP
ySo22UNNotificationCategoryCG
ySSG
ySo34TUConversationInvitationPreferenceCG
ySo8TUHandleCG
ySo20TUConversationMemberCG
So8NSStringC
_A7At
_A63At
So7NSErrorC
$ss21_ObjectiveCBridgeableP
$s10Foundation21_BridgedStoredNSErrorP
$s10Foundation18_ErrorCodeProtocolP
$s13callservicesd22CompanionLinkMessengerP
$s13callservicesd13CompanionLinkP
_pSg
$s13callservicesd25AudioInterruptionProviderP
14DescriptorType
Sgyc
$s13callservicesd33AudioInterruptionPriorityProviderP
$s13callservicesd18DescriptorProviderP
x2id_t
$s13callservicesd18DescriptorResolverP
ySS_SbtG
ySSSbG
So30CSDAbstractIDSProviderDelegateC
SbSo17CXStartCallActionC_
ShySSGSo17CXStartCallActionC_
So22TUContactsDataProviderCtc
So25CSDIDSDualSessionProvider_p
_ShySSGSDySSypGSo17OS_dispatch_queueCtc
So10CSDIDSChat_pSo25CSDExternalIDSDualSessionC_
So17CXStartCallActionCS2btc
So22TUContactsDataProviderC
So17OS_dispatch_queueC
So19CXInProcessProviderC
So25CSDExternalIDSDualSessionCSo8TUHandleCSbSo12NSDictionaryCSo10CSDIDSChat_pIeyByyyya_
So25CSDExternalIDSDualSessionCSo8TUHandleCSbSDySS
GSo10CSDIDSChat_pIegggygo_
So10CSDIDSChat_p
SaySo10CSDIDSChat_pG
ySS_yptG
ShySSG
SDySSypG
So17CXStartCallActionC
ypSg
So8NSObjectC
ySS_SSGSg
ySS_SSG
ySSG
$s13callservicesd30ConversationPersistenceStorageP
$s13callservicesd30ConversationLinkSyncDataSourceP
ySSSiG
yyXlG
So38TUConversationLinkDescriptorDataSource_p
$s13callservicesd37EmergencyCallbackCapabilitiesProtocolP
yycSg
yyXlGSgGc
ySi_So17OS_dispatch_queueC
So21CSDCallCenterObserver_p
SgXw
IeyB_
So16CARSessionStatusC
ySbcSg
SgXw
IeyBy_
So16IMPowerAssertionCSg
So21CSDCallCenterObserver_pSg
So17TURouteControllerCSg
SgXw
SdSi_
So24OS_dispatch_source_timer_p
SaySSG
SgXw
SgXwz_Xx
SSIegg_
ySSG
$s13callservicesd40AudioInterruptionProviderFactoryProtocolP
37AVAudioClientInterruptionProviderType
38AVAudioSessionInterruptionProviderType
So14IDSDestinationC
$s13callservicesd32ChangeTrackingDescriptorResolverP
So23FBSDisplayLayoutMonitorC
$s13callservicesd26CallCenterObserverProtocolP
$s13callservicesd26CallCenterObserverDelegateP
So16CSDCallContainer_pyc
So20NSNotificationCenterC
So29CSDCallCenterObserverDelegate_pSgXw
ySo7CSDCallC_
tcSg
So7CSDCallC
IeyByy_
So21TUConversationManagerC
So16FTNetworkSupportC
So34CSDConversationInvitationResolving_p
So14TUFeatureFlagsC
So24UNUserNotificationCenterC
So24CSDConversationServerBag_p
SSSo14TUConversationCc
SSSo8TUHandleC_So22TUContactsDataProviderCtc
SSSo8TUHandleC_So22TUContactsDataProviderCSo14TUConversationCtc
ShySo22UNNotificationCategoryCG
ySo21UNNotificationRequestCcSg
ySS_So21UNNotificationContentCtcSg
ySScSg
ySo20TUConversationMemberC_G
So14TUConversationCSg
So18TUConversationLinkCSg
SgXw
SgXwz_Xx
So21UNNotificationRequestC
Sg_ABt
So13AVAudioPlayerCG
10descriptor_t
So7CSDCallC
So6TUCallCSbIggd_
So7CSDCallC
SgIeggyr_
So21CSDFaceTimeIDSServiceC
$s13callservicesd24UserNotificationProviderP
$s13callservicesd24UserNotificationResponseP
So21OS_dispatch_semaphoreCSg
SSSg
ySDySSypGG
SaySDySSypGG
$s13callservicesd41ConversationLinkSyncIDSInteractorDelegateP
So13CSDIDSService_p
_pSgXw
So10IDSServiceCSg
_yptG
So14AVAudioSessionC
So14AVAudioSessionCSg
$s13callservicesd23ProcessObserverProtocolP
SDySSSDy
So26BKSApplicationStateMonitorC
tcSg
ySS_
tcSg
_SitG
SiGIegg_
SgXw
So12NSDictionaryCIeyBy_
So8NSStringC
IeyByyy_
IeyByy_
$s13callservicesd19NSNumberConvertibleP
SDySSSDyS2SGG
ySS_SDyS2SGtG
ySS_SStG
SDyS2SG
$s13callservicesd28IDSDeviceDestinationResolverP
Sbyc
So9IDSDeviceCSgSSc
So15CSDIDSTransportCSg
ySS_SSGG
yypG
ySuG
ySi5count_Sb11isAmbiguoustG
ySaySo7TURouteCGG
SaySo7TURouteCG
G0R0_
ySaySo7CSDCallCGG
SaySo7CSDCallCG
ySDy
ypGG
ySDyS2SGG
$s13callservicesd24DirtyCallManagerProtocolP
ySo7CSDCallCcSg
ShySo7CSDCallCG
So7CSDCallCIeyBy_
$s13callservicesd33PendingMembershipTrackerServerBagP
$s13callservicesd32PendingMembershipTrackerDelegateP
$s13callservicesd33PendingMembershipTrackerMessengerP
$s13callservicesd31PendingMembershipTrackerStorageP
So36CSDPendingMembershipTrackerMessenger_pSgXw
So35CSDPendingMembershipTrackerDelegate_pSgXw
SDySS
So20TUConversationMemberC
3key_SDySS
G5valuetSg
3key_SDySS
G5valuet
ShySo8TUHandleCG
ySo26CSDConversationParticipantC_G
SaySo20TUConversationMemberCG
SaySo20TUConversationMemberCGG
ShySo8TUHandleCG18delegatedToMembers_
11responseKeyt
So8TUHandleC6sender_t
SaySo8NSNumberCG
So8NSObjectCSg
So8TUHandleCSg
_SDy
ypGSSSo17IDSMessageContextCt
_ypt
ySSSo8NSObjectCG
ySSSo8NSStringCG
_Sb9available_Si5counttt
Sb9available_Si5counttG
ShySo22UNNotificationCategoryCGG
ySaySo11IDSEndpointCGG
SaySo11IDSEndpointCG
ySo7CSDCallCSgG
So7CSDCallCSg
ySSSaySo9CNContactCGG
yS2SG
yySb_
_pSgtcG
SgSo7CSDCallC_
So13AVAudioPlayerCG
ySSSDyS2SGG
ySS_SSGt
ySS_SSGG
SgXw
_ypt
ySSSo9CNContactCG
ySDy
ypG5event_ADSg7optionst
_pGG
ySDy
ypG7request_ADSg7optionsyAF_AF
_pSgtc7handlertAH_pGG
ySSypG
SS_ypt
_So23TUScreenShareAttributes_pt
So23TUScreenShareAttributes_pG
_Shy
ySSSaySo8NSNumberCGG
ShySo21RPCompanionLinkClientCG
So21RPCompanionLinkDeviceC
ySo21RPCompanionLinkDeviceC
_pGIegg_
SgXw
SgXwz_Xx
So21RPCompanionLinkClientC
_pGIegg_
_yptG
ySiG
SaySiG
So12TUCallCenterC
SDySSypGSg
So6TUCallCSg
ySo8TUHandleC_G
So14NSUserDefaultsC
ypGSg
$ss12IdentifiableP
So22CSDCallStateControllerCSgXw
SaySo17CSDCallDataSourceCG
So19CSDDirtyCallManager_p
SgXw
$s13callservicesd24LocalAudioSystemProviderP
SS3key_yp5valuetSg
ySSSDy
ySSyXlG
ySSSaySo28TUConversationLinkDescriptorCGG
ySSSay
ySSSay
ySSSo7TURouteCG
ySSSo21RPCompanionLinkDeviceCG
So12RTCReportingCG
So14OS_nw_activity_pG
So20TUConversationReportCG
SDySS
ySo8NSNumberCSSG
_AAt
38AVAudioSessionInterruptionProviderType
37AVAudioClientInterruptionProviderType
yq_q0_q1_G
Sdyc
GSgXw
_pSg
SDyS2SGSg
So23TUAudioSystemControllerC
$s13callservicesd21RingtoneProviderAlertP
$s13callservicesd24RingtoneProviderProtocolP
So14CNContactStoreC
_pSg
So21OS_dispatch_semaphoreC
_pSgSo20TLAlertConfigurationCc
So15CNKeyDescriptor_p
$s13callservicesd13RouteProviderP
$s13callservicesd25DeselectableRouteProviderP
$s13callservicesd029PairedHostDeviceRouteTrackingE8ProviderP
$s13callservicesd31ConversationLinkManagerDelegateP
So13CSDIDSServiceC
So34CSDConversationLinkManagerDelegate_pSg
SaySo28TUConversationLinkDescriptorCG
So12IDSPseudonymC
So28TUConversationLinkDescriptorC
_pSgIegyg_Sg
So35TUMutableConversationLinkDescriptorC
ySnySiGG
ShySo8TUHandleCGSg
So18TUConversationLinkCSg
_pSgIeggg_
So8TUHandleC
So28TUConversationLinkDescriptorCSg
_pSgIeggg_
_pSgIegyng_Sg
So18TUConversationLinkC
ySaySo28TUConversationLinkDescriptorCGG
ySaySo28TUConversationLinkDescriptorCGGSSG
SSSo11NSPredicateCIegnr_
ShySo18TUConversationLinkCGSg
_pSgIeggg_
SaySo18TUConversationLinkCGSg
_pSgIeggg_
So31CSDMessagingConversationMessageCSgSo6NSDataCSgSo7NSErrorCSgIeyByyy_
So40CSDMessagingEncryptedConversationMessageC
So31CSDMessagingConversationMessageCSg
_pSgIegggg_
So18TUConversationLinkCSg
_pSgIeggg_Sg
So18TUConversationLinkCSgSo7NSErrorCSgIeyByy_
So6NSDateCSgSo7NSErrorCSgIeyByyy_
So7NSErrorCSgIeyByy_
So28TUConversationLinkDescriptorCSgSo7NSErrorCSgIeyByy_
So5NSSetCSgSo7NSErrorCSgIeyByy_
So7NSArrayCSgSo7NSErrorCSgIeyByy_
_pSg
SgXw
$s13callservicesd14VoucherManagerP
So20TUVouchingEnablement_p
So17CSDIDSPushHandler_p
SayySb_
_pSgtcG
_pSgIegyg_
So9TUVoucherC
_pSgIegyg_Sgz_Xx
So9TUVoucherCSgSo7NSErrorCSgIeyByy_
_pSgIeggg_Sg
So9TUVoucherCSg
_pSgIeggg_
_pSgIeggg_Sgz_Xx
SDySSSay
So12RTCReportingCG
So20TUConversationReportCG
So14OS_nw_activity_pG
SDySS
So19CSDAppleIDUtilitiesC
So12RTCReportingCSg
So14TUConversationC
So10CSDIDSChatC
SaySo6TUCallCG
So7TURouteC
So22CSDReportingControllerC
$s13callservicesd15RTCReporterInfoP
SiSg
SdSg
SbSg
$s13callservicesd37ScreenSharingActivityManagerProvidingP
$s13callservicesd36ScreenSharingActivityManagerDelegateP
So39CSDScreenSharingActivityManagerDelegate_pSgXw
So23TUScreenShareAttributes_pG
3key_
G5valuetSg
3key_
G5valuet
_GSg_ADt
_GSg
SgXw
_G_G
SgXwz_Xx
Ieggn_
So23TUScreenShareAttributes_p
SDySS
SDySS
$ss12CaseIterableP
ySi_
Sg_ABt
SS3key_
5valuetSg
SS3key_
5valuet
Sg_ABt
_AAt
SS3key_
5valuetSg
SS3key_
5valuet
SS3key_
5valuetSg
SS3key_
5valuet
SDySSSbG
SDySS
$s13callservicesd19UserIntentValidatorP
z_Xx
_pXp
$s13callservicesd21CallHistoryDataSourceP
$s13callservicesd10RecentCallP
So24CHCallInteractionManagerC
So21TUCallProviderManagerC
_pcSg
So18TUConversationLinkCSg
SgcSg
ySuG
SaySo9CNContactCG
ySo8CHHandleCG
_pSg
So13TUDialRequestC
So7NSErrorCSg
ySo18TUConversationLinkCG
ySo7CSDCallCG
ySo21RPCompanionLinkClientCG
ySo20TUNearbyDeviceHandleCG
ySo25TUConversationParticipantCG
_pSg
So14TUCallProviderC
$s13callservicesd25HoldMusicProviderProtocolP
So19AVSpeechSynthesizerCSg
So13AVAudioPlayerCSg
SgXw
So27TUCallScreenShareAttributesC
So13CSDAVCMoments_p
SDySS
So20CSDUnknownCallFilterC
So38TUContactsDataProviderAppleCareHandlesC
So45CSDCarrierBundlePhoneNumberProviderControllerC
SDySSSaySo9CNContactCGG
SDySSSo7TURouteCG
ySo7TURouteCcSg
So7TURouteCIeyBy_
SgXw
SgXwz_Xx
ySo21RPCompanionLinkClientCG
ySo21RPCompanionLinkClientCG
ySo21RPCompanionLinkClientCGSgXw
SaySo21RPCompanionLinkDeviceCG
ySo21RPCompanionLinkClientCGSgXw
So21RPCompanionLinkDeviceCIegn_
So21RPCompanionLinkDeviceC
Iegny_
So7CSDCallCSbIggd_
$s13callservicesd31ConversationInvitationResolvingP
ShySo34TUConversationInvitationPreferenceCG
yShySo34TUConversationInvitationPreferenceCG_
ShySo34TUConversationInvitationPreferenceCG_
_pSg
So26CSDDeviceLockStateObserverCSg
A2ASgSbSo20TUConversationMemberCSo8TUHandleCSayADGAGSayAFGSaySo26CSDConversationParticipantCGSo0A4LinkCSgSo0A6ReportCSaySo39CSDMessagingConversationActivitySessionCGSSSgARSg
Iegnnnygggggggggggy_
So15CSDConversationC
So6NSUUIDCA2BSg
So20TUConversationMemberCSo8TUHandleCSo7NSArrayCA3JSo0B4LinkCSgSo0B6ReportCAJSo8NSStringCSgSo39CSDMessagingConversationActivitySessionCSg
IeyByyyyyyyyyyyyyyyy_
_pSgIegr_
SgXw
SgXwz_Xx
Sg_ABt
Sg_ABt
Sg_ABt
$s13callservicesd30LetMeInRecoveryManagerDelegateP
SDySSSay
SDySS
ySo31CSDMessagingConversationMessageCSg_
_pSgtc
$s13callservicesd26ParticipantUpdateSanitizerP
So17CSDVoucherManager_p
So32IDSGroupSessionParticipantUpdateCIeyBy_
SgXw
SgXwz_Xx
So49CSDMessagingConversationParticipantDidJoinContextC
So32IDSGroupSessionParticipantUpdateCIegg_
So32IDSGroupSessionParticipantUpdateC
SaySo30CSDMessagingConversationMemberCG
So30CSDMessagingConversationMemberC
So17OS_dispatch_groupC
$s13callservicesd26DescriptorTrackingProviderP
$s13callservicesd21AudioResolverProtocolP
14DescriptorType
So22CSDTTYProviderObserver_p
So14TUFeatureFlags_p
Sg_ABSbtcSg
Sg_ABt
SgXw
SDyx
yx_xGG
qd__
SaySo12TUAudioRouteCG
So12TUAudioRouteCSg
So12TUAudioRouteC
SaySo12TUAudioRouteCGz_Xx
$s13callservicesd20NearbyDeviceProviderP
$s13callservicesd12NearbyDeviceP
10DeviceType
SDySS10DeviceType
$s13callservicesd35ConversationLinkSyncManagerDelegateP
_pSgXw
So14IDSRateLimiterCySo8NSStringCG
SDySSSiG
SaySayypGG
So14NSMutableArrayCSg
SaySo47CSDMessagingConversationLinkGeneratorDescriptorCG
So27CSDMessagingLinkSyncMessageCSg
SaySSGSg
So13OS_xpc_object_p
SaySSGSg_Sbt
So20IDSIDQueryControllerC
SSSgSg
So7NSArrayCABIeyByy_
SaySSGAAIeggg_
SaySo11IDSEndpointCGIegg_
3key_yp5valuet
$s13callservicesd40AudioInterruptionActivationStateObserverP
G10identifier_t
$s13callservicesd18BlastDoorInterfaceP
ScPSg
So6NSDataC
So6NSDataCSgSo7NSErrorCSgIeyByy_
IeghH_
ytIeghHr_
ypXp
$s13callservicesd22UserNotificationCenterP
So23CSDCallFilterControllerC
SDySS
So16CSDClientManagerCyyXlyXlGSg
So22UNNotificationResponseC
Ieg_
_ShySo22UNNotificationCategoryCGtG
SgXw
SgXwz_Xx
So16CSDClientManagerC
SgXw
$s13callservicesd29DiscoveryModeProviderProtocolP
$s13callservicesd19VoicemailDataSourceP
$s13callservicesd9VoicemailP
So19CoreTelephonyClientC
ShySuG
Sb9available_Si5counttG
_pSg
3key_Sb9available_Si5countt5valuetSg
3key_Sb9available_Si5countt5valuet
SaySo8TUHandleCG
ShySo25TUConversationParticipantCG
SaySo25TUConversationParticipantCG
So9CHManagerC
So20CSDBlockedCallFilterC
So12IDSCTAdapterC
So8IDSCTSIM_p
$s13callservicesd21SoundProviderProtocolP
So17TUCallSoundPlayerC
Sg_ABt
So47TUConversationLinkDescriptorXPCClientDataSourceCSg
ySo21RPCompanionLinkDeviceC
ySo21RPCompanionLinkDeviceC_
SDySS
ySDy
ypG7request_ACSg7optionsyAE_AE
_pSgtc7handlertAG_pGG
SDySS
ySDy
ypG5event_ACSg7optionst
_pGG
Sg11localUpdate_AB5foundAB4lostAB7changedt
ySDy
ypG5event_ADSg7optionst
_pGG
y_AAy_
ySDy
ypG5event_ADSg7optionst
_pGGG
ySDy
ypG5event_ACSg7optionst
SgXw
SgXwz_Xx
_pGIegg_
ypGABSgIeggg_
ySDy
ypG7request_ADSg7optionsyAF_AF
_pSgtc7handlertAH_pGG
y_AAy_
ySDy
ypG7request_ADSg7optionsyAF_AF
_pSgtc7handlertAH_pGGG
ySDy
ypG7request_ACSg7optionsyAE_AE
_pSgtc7handlertAG_pG
ypGABSgA2C
_pSgIegggg_Iegggg_
ypGSgAC
_pSgytIegnnnr_
So12NSDictionaryCSgACSo7NSErrorCSgIeyByyy_
ypGSgAC
_pSgIegggg_
ySo21RPCompanionLinkDeviceC
GSo17OS_dispatch_queueCG
ySo21RPCompanionLinkDeviceC
GSo17OS_dispatch_queueCGG
ySo21RPCompanionLinkDeviceC
GSo17OS_dispatch_queueCGG
ySo21RPCompanionLinkDeviceC
GSo17OS_dispatch_queueCGG
GAKG
So21RPCompanionLinkDeviceCSg
Iegn_
_pSgIegg_Sg
_pIegn_
Iegn_
_pGSo17OS_dispatch_queueCG
ySDy
ypGSg8response_AD7optionst
_pGIegn_
ySDy
ypGSg8response_AD7optionst
_pGIegg_
Sb_yttIegn_
AE_pGG
GAE_pGGSo17OS_dispatch_queueCG
Iegn_
ypGIegn_
_p_G
AE_pGGGSDy
ypGG
ySbAD_pGSo17OS_dispatch_queueCGG
ytIegn_
_pGSo17OS_dispatch_queueCG
SaySDyS2SGG
So10AVCMomentsCSg
So21CSDAVCMomentsDelegate_pSgXw
SDySSSo8NSObjectCGSg
ySS_So8NSStringCtG
SDySSyXlG
6status_t
$s13callservicesd22ASCIIStringConvertibleP
SgXw
SgXwz_Xx
So7TURouteCSg
So17TURouteControllerC
So20CSDAVCMomentsRequest_p
So38CSDNeighborhoodActivityConduitDelegate_p
SgXwz_Xx
So20TUNearbyDeviceHandleC
$s13callservicesd35NeighborhoodActivityConduitDelegateP
So10NSMapTableCySo38CSDNeighborhoodActivityConduitDelegate_pSo17OS_dispatch_queueCG
ShySo20TUNearbyDeviceHandleCG
So20TUContactsDataSource_p
SDySS
So24OS_dispatch_source_timer_pSg
yShySo8TUHandleCG
_AAt
ySo25TUConversationParticipantC_G
So38CSDNeighborhoodActivityConduitDelegate_pIegg_
_pGSo17OS_dispatch_queueCG
_pGSo17OS_dispatch_queueCGAEG
ySDy
_p_G
ySDy
ypGSg8response_AE7optionst
yAdH_p_GG
ySDy
ypGSg8response_AF7optionst
yAeI_p_GGAfG_AfHtG
ySDy
ypGSg8response_AG7optionst
yAfJ_p_GGAgH_AgItG
ySDy
ypGSg8response_AH7optionst
yAgK_p_GGAhI_AhJtG
GGAK_pG
ySDy
ypGSg8response_AC7optionst
ySDy
ypGSg8response_AD7optionst
AC_pGG
AD_pGG
GAD_pGG
_pGIgg_Iegy_
_pGIegg_Iegg_
_pGIegn_
yShySo8TUHandleCG
yShySo8TUHandleCG
GGSayAEGG
yShySo8TUHandleCG
GGSDySS
yShySo8TUHandleCG
GGSDySS
GGSo17OS_dispatch_queueCG
yShySo8TUHandleCG
GGSDySS
GGSo17OS_dispatch_queueCGG
_pGSo17OS_dispatch_queueCG
_pGSo17OS_dispatch_queueCGAEG
ySDy
ypGSg8response_AG7optionst
yAfJ_p_GGAgH_AgItG
ySDy
ypGSg8response_AH7optionst
yAgK_p_GGAhI_AhJtG
GGAK_pG
SaySDy
ypGG
ySo20TUNearbyDeviceHandleC_G
GACG
GADGG
GAEGGSo17OS_dispatch_queueCG
Xoz_Xx
ySDy
ypG5event_ADSg7optionst
_pGSo17OS_dispatch_queueCG
ySDy
ypG5event_ACSg7optionst
So20TUNearbyDeviceHandleCSg
_pIegngzo_
ySDy
ypG5event_ADSg7optionst
_pGSo17OS_dispatch_queueCG
So20TUNearbyDeviceHandleCSg
_pIegngzo_
ySDy
ypG7request_ADSg7optionsyAF_AF
_pSgtc7handlertAH_pG
_pGSo17OS_dispatch_queueCG
ySDy
ypG7request_ACSg7optionsyAE_AE
_pSgtc7handlertAG_pG
So20TUNearbyDeviceHandleCSg
_pGIegngo_
_pGG
_p_G
AD_pGGG
_p_G
So20TUNearbyDeviceHandleCSg
_pGSo17OS_dispatch_queueCG
_pGIegn_
_p_G
_pGIegg_
So38CSDNeighborhoodActivityConduitDelegate_pSbIeggd_
Sbz_Xx
domain
error
_os_unfair_lock_opaque
rawValue
RawValue
ArrayLiteralElement
Element
_rawValue
osd_type
__Anonymous_field1
osd_decoder
osd_title
_nsError
_ObjectiveCType
Code
_ErrorType
osdd_library
osdd_type
authenticationFailed
operationNotSupported
insufficientDeviceInfo
authenticatedDeviceNotFound
alreadyAuthenticated
authenticationCompleted
boxed
_beginOrUpdate
_end
_resetState
_activeDescriptor
rawValue
ArrayLiteralElement
RawValue
Element
DescriptorType
default
high
proxy
local
isAccountActive
isDestinationValid
destinationsGenerator
outgoingSessionProviderGenerator
outgoingChatGenerator
contactsDataProvider
queue
queue
privateAPIValidator
$__lazy_storage_$_applicationStateValidator
donatedIntentValidator
backgroundBluetoothAccessValidator
mediaRemoteStateValidator
TUDataSource
_emergencyCallbackPossible
emergencyCallbackCapabilitiesDidChange
preventDetachAfterEmergencyCallTimeoutDeterminationHandler
dispatchAfterHandler
dispatchCancelHandler
queue
callCenterObserver
preventDetachAfterEmergencyCallTimeoutWorkItem
lock
state
subscribed
initialized
cancelled
carSessionQueue
carSessionStatus
carPlayScreenConnectionChanged
powerAssertion
powerAssertionDescription
callCenterObserver
routeController
acquirePowerAssertionHandler
releasePowerAssertionHandler
queue
intervalCalculator
actionByType
immediate
delayedShort
delayedLong
checkIn
timer
destinations
currentIndex
replacing
appendingNew
newOnly
AVAudioSessionInterruptionProviderType
AVAudioClientInterruptionProviderType
uniqueIdentifier
name
deviceType
isCurrentlyPicked
idsDestination
localKey
requestKey
responseKey
provider
queue
displayLayoutMonitor
$__lazy_storage_$_processObserver
bundleIdentifier
callContainerClosure
notificationCenter
delegate
triggers
callChanged
queue
contactsDataProvider
conversationManager
ftNetworkSupport
invitationResolver
featureFlags
notificationIdentifiersByConversationUUID
carPlayNotificationIdentifiersByConversationUUID
faceTimeNotificationCenter
conversationServerBag
facetimeIsShowingOnScreen
openURL
unlockAndOpenSensitiveURL
localizeConversationName
localizeHandleName
localizeHandleNameWithConversation
notificationType
categories
replace
removeNotification
updateBadgeValue
callCenterObserver
deviceIsHomePod
playersForSounds
letMeJoin
RawValue
FaceTime
Phone
RawValue
activeDescriptor
DescriptorType
service
delegate
knownDestinations
failedSending
audioSession
isLocal
_activationContext
activeDescriptor
DescriptorType
RawValue
queue
processInfoByBundleIdentifier
applicationMonitor
processStateChanged
processStateChangedWithBundleID
updateBadgeValue
queue
contactsDataProvider
openURL
localizeHandleName
notificationCenter
notificationType
categories
replace
removeNotification
fitnessPlusAppBundleID
fitnessPlusDaemonBundleID
routesDidChangeHandler
didPickRouteHandler
didDeselectAllRoutesHandler
supportsPrimaryCalling
hasRelayiCloudAccount
idsDeviceForIDSDeviceIdentifier
queue
callCenterObserver
nearbyDeviceMonitor
idsDeviceDestinationResolver
conversationManager
nearbyDeviceRoutes
activeRelayClientTransport
currentCallsSupportNearbyDevices
callChanged
queue
dirtyCallsArray
dirtyCallsSet
messenger
delegate
storage
serverBag
underlyingStorage
transactionUUID
mode
member
dateCreated
Host
Client
invalidHandle
Rejection
Approval
subject
cancellables
messenger
target
buffer
proxiedMessageCount
buffering
proto
resource
clientsPendingAuthentication
queue
maxDuration
unknownShortCallSignal
knownCallerSignal
junkCallSignal
linkCreatedSignal
silenceUnknownCallersEnabledObserver
link
message
options
protobufEncodeError
protobufDecodeError
invalidMessageContent
unknown
request
response
DescriptorType
callStateController
callChanged
dataSources
dirtyCallManager
callOutgoing
accessibilityDefaultRoute
audioSourceKey
ignoresBluetoothDeviceUID
beginOrUpdate
preserve
queue
resolver
audioInterruptionProviderPool
ringtoneProvider
soundProvider
holdMusicProvider
discoveryModeProvider
notificationCenter
deferredEndWorkItem
pendingExpeditedEndInterruptionUUIDs
endInterruptionDelay
mediaServicesWereResetObserver
audioSessionInterruptionObserver
audioController
factory
sharedAudioSystemController
sharedCallCenter
localAVAudioSessionInterruptionProvider
proxyAVAudioSessionInterruptionProvidersByAudioSessionID
avAudioClientInterruptionProvider
availability
photoRequestSuccessCount
photoRequestFailureCount
medianRequestDuration
meanRequestDuration
didBeginPlaying
contactStore
currentAlert
endedPlayingSemaphore
alertGenerator
playbackObserverGenerator
DescriptorType
service
serverBag
renewPseudonymTask
dataSource
linkSyncManager
lmiRecoveryManager
generateKeyAgreement
delegate
RawValue
completionQueue
vouchingEnablement
idsService
idsPushHandler
timeout
verificationCache
finished
pending
RawValue
queue
relayDeviceRouteChangesByCallUUID
groupUUIDToConversationReportingSessions
conversationUUIDToConversationReport
groupUUIDToConversationInfo
callUUIDToCallReportingSessions
callUUIDToGFTCallReportingSessions
callUUIDtoConversationUUID
conversationGroupUUIDToCallUUID
callUUIDtoConversationGroupUUID
uuidToNWActivity
uuidToNWActivityConnecting
idsSessionUUIDToChatUUIDs
callInfosPendingScoreForCallUUIDs
userScoreEnabled
appleIDUtilities
callInfo
rtcReporting
callUUID
durationMs
relativeStart
relativeEnd
bucketedDuration
endReason
providerErrorCode
providerEndedReason
setupTimeMs
connectionTimeMs
relay
incoming
connected
currentlyGrouped
relayDeviceRouteChanges
filteredOutReason
verficationStatus
knownCallerStatus
isOwnNumber
isConversation
fromLink
returnedCall
isSiriSuggested
isKnownContact
isVerifiedAppleCare
isSignedIntoiCloud
junkConfidence
identificationCategory
isKnownCaller
userScore
brandedCall
brandedCallWithImage
delegate
subscriptionsById
sessionsById
remoteAttributesById
messenger
observer
featureFlags
carPlayObserver
unknown
message
unknownFields
rawData
groupUpdate
resource
messageData
fromID
context
isInitiator
groupUuid
participantID
participantDestinationID
updateType
updateSubtype
fromServer
serverDate
participantData
clientContextData
members
participantIds
relaySessionID
resourceData
metadata
AllCases
identifiers
policyInfos
identifierHash
userAccountInfoData
contacts
identifier
_memberAssociationPrimaryInfo
namePrefix
givenName
middleName
familyName
nameSuffix
nickname
imageData
conversationIdentifier
deviceToken
_associationVoucherData
success
memberToken
UNRECOGNIZED
unknown
pointOfPlayback
controlCenterWithActivity
controlCenterWithoutActivity
supportedTypes
_conversationGroupUuidString
_handleData
_identifier
_avcIdentifier
expanse
identityClaiming
RawValue
timeout
isAmbiguous
processObserver
donatedIntentCache
validator
isValid
streamToken
requesterID
queue
callInteractionManager
callHistoryDataSource
callProviderManager
pendingCallIdentifiers
supportedMediaTypes
supportedProviders
mostRecentCallDate
inCallServiceProcessObserver
supportsDisplayingFaceTimeAudioCalls
openURL
dialRecentCall
findConversationLink
featureFlags
notificationType
replace
removeNotification
updateBadgeValue
privateKey
soundType
provider
isVideo
region
uuid
speechSynthesizerEventHandler
activeDescriptor
speechSynthesizer
audioPlayer
finishedUtterance
startedUtterance
canceledUtterance
DescriptorType
sharerHandleValue
currentRemoteAttributes
deviceFamily
style
displayScale
scaleFactor
originalWidth
originalHeight
isWindowed
RawValue
type
failed
iPhone
iPad
iPod
watch
audioAccessory
RawValue
moments
remoteIDSDestinations
isRegistered
activeRequestsByTransactionID
callCenterObserver
contactStore
appleCareHandles
carrierBundleController
invalidPublicKeyData
requestKeyExhausted
responseKeyExhausted
cryptoFailed
_routesByUniqueIdentifier
routesDidChangeHandler
routeWasPickedHandler
timedOutPickingRouteHandler
queue
routeProviders
pendingRouteContext
pickWhenAvailableRouteIdentifier
pendingPickedRouteTimeout
route
routeProvider
deviceInvitationPreferences
required
optional
queue
storage
lockStateObserver
interruptionDescriptor
interruptionDeferredEndDescriptor
ringtoneDescriptor
soundDescriptorAction
holdMusicDescriptor
discoveryModeDescriptor
queue
routesDidChangeHandler
pairedHostDeviceRoutes
contactIdentifier
providerRingtoneSoundURL
uuid
isVideo
handle
pseudonymToFailedLetMeIn
pseudonymToInvalidationWorkItem
queue
serverBag
delegate
message
pseudonym
fromHandle
completionHandler
completionQueue
vouchingEnablement
voucherManager
associationNotFound
associationsDoNotCorrespond
associationWithoutPrimary
associationWithSelf
associationBetweenLightweightMembers
RawValue
identifier
version
queue
callCenterObserver
ttyProviderObserver
localAudioSystemProvider
deviceSupportsRingtone
featureFlags
lastPlayedSoundDate
lastPlayedSoundType
soundDescriptorActionResolver
resolvedDescriptor
resolutionChangedHandler
DescriptorType
UpdateContext
call
triggers
items
timeProvider
expiration
item
routesDidChangeHandler
audioRoutes
queue
localAudioSystemProvider
callCenterObserver
ttyProviderObserver
callAudioCategory
callAudioMode
lastUserPickedRoute
callAudioInterruptionState
inactiveWithPrematurelySelectedRoute
inactive
active
DeviceType
queue
nearbyDeviceProvider
devicesChangedHandler
devicesByEffectiveIdentifier
delegate
dataSource
interactor
serverBag
recoverRateLimiter
recoverResponseRateLimiter
messageQueue
descriptorManager
queue
stateHandle
remoteMissingIdentifiers
localMissingIdentifiers
differingVersionSumIdentifiers
localDescriptorsBehindRemote
remoteDescriptorsBehindLocal
delta
initial
featureFlags
queue
idsQueryController
serverBag
$__lazy_storage_$_supportsConversationOneToOneModeEnabled
$__lazy_storage_$_pushTokenForSelf
providerType
category
mode
activationContext
priority
wantsHoldMusic
mediaPlaybackOnExternalDevice
wantsMixingVoiceWithMedia
wantsExpeditedAudioSession
wantsA2DP
operationMode
activationStateObserver
callProviderAuditToken
callProviderBundleIdentifier
requiresPublishingDynamicMicAttribution
avAudioSession
avAudioClient
blastDoor
typeMismatch
emptyResult
callFilterController
phoneNotificationCenter
faceTimeNotificationCenter
providersByIdentifier
queue
providers
clientManager
DescriptorType
queue
telephonyClient
contactStore
voicemailDataSource
postedVoicemailIdentifiers
pendingVoicemailIdentifiers
mostRecentVoicemailDate
mostRecentNonVisualVoicemailDate
localizeVoicemailName
callbackVoicemail
openURL
unsubscribedVoicemailInfoForUUID
notificationType
replace
removeNotification
updateBadgeValue
usTollFreePrefixes
callHistoryManager
idsCTAdapter
activeDescriptor
player
DescriptorType
callUUID
lock
$__lazy_storage_$_dataSource
uuid
relativeStart
conversationBaseTime
conversationProvider
hasLink
isPending
relativeEnd
duration
uPlusOneModeAtStart
uPlusOneModeAtEnd
isHandoffContinuation
originatingUIType
maximumMemberCount
initialMemberCount
finalMemberCount
maxNumberOfParticipants
AVCBlobRecoveryAttempts
AVCBlobRecoveryTimeouts
transitionAttempts
numberLMIRequests
numberLMIApprovals
numberLMIDismissals
messageRetryAttempts
messageRetryFailures
messageRetrySuccesses
avcBlobRecoveryMessageRetryAttempts
avcBlobRecoveryMessageRetryFailures
avcBlobRecoveryMessageRetrySuccesses
timebase
hasHadActiveParticipants
cumulativeTimeAlone
timeAloneAtEnd
lastTimeNotAlone
queue
client
authenticationController
activated
lockdownModeEnabled
deviceUpdatedPublisher
deviceFoundPublisher
deviceLostPublisher
deviceChangedPublisher
cancellables
stateHandle
messagePublishers
eventPublishers
manager
DeviceType
nonce
iCloudAccountToken
iTunesAccountToken
homeUserIdentifierTokens
moments
delegate
service
accessGroup
account
unhandledError
noPassword
unexpectedPasswordData
unexpectedItemData
queue
callCenterQueue
conversationManager
serverBag
routeController
pickedRouteUniqueIdentifier
avcRequest
session
messenger
cancellables
queue
conversationManager
callCenter
conversationServerBag
idsService
vouchingEnablement
voucherManager
delegatesToQueues
featureFlags
networkSupport
handedOffConversations
joinApprovalState
localTVDevices
joinCompletionSubjects
contactStore
pendingJoinConversationIDs
activeConversationUpdateSubject
activeConversationUpdateCancellablesByDeviceID
messageProxy
idsProxyCleanupTimer
conversationIDsWithActivities
stateHandle
contactForwardingCanceler
device
member
conversationUUID
conversationGroupUUIDHash
knownParticipantsPublisher
sessionAvailable
sessionUnavailable
none
requested
cancelled
link
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>Application-Group</key>
<array>
<string>com.apple.callhistory</string>
</array>
<key>BSServiceDomains</key>
<dict>
<key>com.apple.callkit</key>
<dict>
<key>MachName</key>
<string>com.apple.callkit.service</string>
<key>Services</key>
<dict>
<key>com.apple.callkit.service.channel</key>
<dict/>
</dict>
</dict>
</dict>
<key>BuildMachineOSBuild</key>
<string>22A380007</string>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>callservicesd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.TelephonyUtilities</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>callservicesd</string>
<key>CFBundlePackageType</key>
<string>FMWK</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14E6097d</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.4</string>
<key>DTSDKBuild</key>
<string>20E5212d</string>
<key>DTSDKName</key>
<string>iphonesimulator16.4.internal</string>
<key>DTXcode</key>
<string>1430</string>
<key>DTXcodeBuild</key>
<string>14E6097d</string>
<key>MinimumOSVersion</key>
<string>16.4</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
<key>_CFBundleUseAppleLocalizations</key>
<true/>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.telephonyutilities.callservicesd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>development</string>
<key>com.apple.CallHistory.sync.allow</key>
<true/>
<key>com.apple.CallKit.call-directory</key>
<array>
<string>synchronize-extensions</string>
<string>compact-store</string>
<string>query-identification-entries</string>
</array>
<key>com.apple.CallKit.call-directory.extension-host</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>phone</string>
<string>voice</string>
<string>identity</string>
<string>data-usage</string>
<string>data-allowed</string>
<string>data-allowed-write</string>
<string>carrier-space</string>
<string>carrier-settings</string>
</array>
<key>com.apple.CompanionLink</key>
<true/>
<key>com.apple.FaceTime.CallLaunch</key>
<true/>
<key>com.apple.FaceTime.FTConversationService</key>
<array>
<string>access-conversation-links</string>
<string>modify-conversation-links</string>
<string>access-conversation-links</string>
</array>
<key>com.apple.FaceTime.NoPrompt</key>
<true/>
<key>com.apple.appletv.pbs.mediaremote</key>
<true/>
<key>com.apple.appletv.pbs.user-profiles</key>
<true/>
<key>com.apple.appletv.pbs.user-profiles.select</key>
<true/>
<key>com.apple.assistant.settings</key>
<true/>
<key>com.apple.backboardd.launchapplications</key>
<true/>
<key>com.apple.backboardd.proximityDetection</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coreduetd.context</key>
<true/>
<key>com.apple.coreduetd.knowledge</key>
<true/>
<key>com.apple.coreduetd.people</key>
<true/>
<key>com.apple.coremedia.allow-protected-content-playback</key>
<true/>
<key>com.apple.coremedia.captureassertionservice</key>
<array>
<string>modify-assertion</string>
</array>
<key>com.apple.corespeech.supportheysiriwhenrecord</key>
<true/>
<key>com.apple.coretelephony.Calls.allow</key>
<true/>
<key>com.apple.developer.group-session</key>
<true/>
<key>com.apple.developer.notificationcenter-identifiers</key>
<array>
<string>com.apple.facetime</string>
<string>com.apple.Photos</string>
</array>
<key>com.apple.duet.expertcenter.consumer</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.imagent</key>
<true/>
<key>com.apple.imagent.av</key>
<true/>
<key>com.apple.messages.nicknames</key>
<true/>
<key>com.apple.multitasking.termination</key>
<true/>
<key>com.apple.multitasking.voipassertions</key>
<true/>
<key>com.apple.nano.nanoregistry.generalaccess</key>
<true/>
<key>com.apple.pegasus.backgroundPIPServiceEntitlement</key>
<true/>
<key>com.apple.private.CallHistory.read-write</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.aps-client-cert-access</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.phoneNumberResolver</string>
</array>
<key>com.apple.private.attentionawareness</key>
<true/>
<key>com.apple.private.attentionawareness.poll</key>
<true/>
<key>com.apple.private.attribution.explicitly-assumed-identities</key>
<array>
<dict>
<key>type</key>
<string>bundleID</string>
<key>value</key>
<string>com.apple.facetime</string>
</dict>
<dict>
<key>type</key>
<string>bundleID</string>
<key>value</key>
<string>com.apple.mobilephone</string>
</dict>
<dict>
<key>type</key>
<string>path</string>
<key>value</key>
<string>/System/Library/PrivateFrameworks/TelephonyUtilities.framework/callservicesd</string>
</dict>
</array>
<key>com.apple.private.biome.read-write</key>
<array>
<string>GroupActivitySession</string>
</array>
<key>com.apple.private.canGetAppLinkInfo</key>
<true/>
<key>com.apple.private.carkit.dnd</key>
<true/>
<key>com.apple.private.contacts</key>
<true/>
<key>com.apple.private.copresence</key>
<true/>
<key>com.apple.private.coreaudio.borrowaudiosession.allow</key>
<true/>
<key>com.apple.private.coreaudio.mxsessionPropertyPipe</key>
<true/>
<key>com.apple.private.coremedia.interruptions.phonecallpriority.allow</key>
<true/>
<key>com.apple.private.coreservices.canalwaysadvertise</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.coreservices.canopenactivity</key>
<true/>
<key>com.apple.private.coreservices.lsuseractivityd.LSAlwaysPick</key>
<true/>
<key>com.apple.private.coreservices.lsuseractivityd.bestappsuggestion</key>
<true/>
<key>com.apple.private.dmd.emergency-mode</key>
<true/>
<key>com.apple.private.dmd.policy</key>
<true/>
<key>com.apple.private.donotdisturb.behavior.resolution.client-identifiers</key>
<array>
<string>com.apple.telephonyutilities.callservicesd</string>
</array>
<key>com.apple.private.externalaccessory.showallaccessories</key>
<true/>
<key>com.apple.private.game-center</key>
<array>
<string>Account</string>
<string>Authenticate</string>
<string>Multiplayer</string>
<string>TurnBasedMultiplayer</string>
<string>GameStats</string>
</array>
<key>com.apple.private.game-center.bypass-authentication</key>
<true/>
<key>com.apple.private.hid.client.event-monitor</key>
<true/>
<key>com.apple.private.icfcallserver</key>
<true/>
<key>com.apple.private.ids.firewall</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.dropin.communication</string>
<string>com.apple.private.alloy.facetime.multi</string>
<string>com.apple.private.alloy.facetime.video</string>
<string>com.apple.private.alloy.facetime.lp</string>
<string>com.apple.private.alloy.phonecontinuity</string>
<string>com.apple.ess</string>
<string>com.apple.private.alloy.phone.auth</string>
<string>com.apple.private.alloy.facetime.audio</string>
<string>com.apple.private.alloy.facetime.sync</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.dropin.communication</string>
<string>com.apple.private.alloy.facetime.multi</string>
<string>com.apple.private.alloy.facetime.video</string>
<string>com.apple.private.alloy.facetime.lp</string>
<string>com.apple.private.alloy.phonecontinuity</string>
<string>com.apple.private.alloy.phone.auth</string>
<string>com.apple.private.alloy.facetime.audio</string>
<string>com.apple.private.alloy.facetime.sync</string>
</array>
<key>com.apple.private.ids.registration</key>
<array>
<string>com.apple.private.alloy.dropin.communication</string>
<string>com.apple.private.alloy.facetime.multi</string>
<string>com.apple.private.alloy.facetime.sync</string>
</array>
<key>com.apple.private.ids.remoteurlconnection</key>
<true/>
<key>com.apple.private.ids.self-session</key>
<array>
<string>com.apple.private.alloy.dropin.communication</string>
<string>com.apple.private.alloy.facetime.multi</string>
<string>com.apple.private.alloy.phonecontinuity</string>
<string>com.apple.private.alloy.facetime.video</string>
<string>com.apple.private.alloy.facetime.audio</string>
<string>com.apple.private.alloy.tincan.audio</string>
<string>com.apple.private.alloy.facetime.sync</string>
</array>
<key>com.apple.private.ids.session</key>
<array>
<string>com.apple.private.alloy.dropin.communication</string>
<string>com.apple.private.alloy.facetime.multi</string>
<string>com.apple.private.alloy.phonecontinuity</string>
<string>com.apple.private.alloy.facetime.video</string>
<string>com.apple.private.alloy.facetime.audio</string>
<string>com.apple.private.alloy.tincan.audio</string>
<string>com.apple.private.alloy.facetime.sync</string>
</array>
<key>com.apple.private.ids.session-private</key>
<array>
<string>com.apple.private.alloy.dropin.communication</string>
<string>com.apple.private.alloy.facetime.multi</string>
<string>com.apple.private.alloy.phonecontinuity</string>
<string>com.apple.private.alloy.facetime.video</string>
<string>com.apple.private.alloy.facetime.audio</string>
<string>com.apple.private.alloy.tincan.audio</string>
<string>com.apple.private.alloy.facetime.sync</string>
</array>
<key>com.apple.private.imavcore.imavagent</key>
<true/>
<key>com.apple.private.imcore.imremoteurlconnection</key>
<true/>
<key>com.apple.private.lockdown.finegrained-get</key>
<array>
<string>NULL/ActivationState</string>
</array>
<key>com.apple.private.necp.match</key>
<true/>
<key>com.apple.private.notificationcenter-system</key>
<array>
<dict>
<key>identifier</key>
<string>com.apple.SystemNote</string>
</dict>
</array>
<key>com.apple.private.notificationcenter.internalpushclient</key>
<true/>
<key>com.apple.private.notificationcenterui.alerts</key>
<true/>
<key>com.apple.private.rtcreportingd</key>
<true/>
<key>com.apple.private.screen-time</key>
<true/>
<key>com.apple.private.security.storage.CallHistory</key>
<true/>
<key>com.apple.private.security.storage.Messages</key>
<true/>
<key>com.apple.private.security.storage.Voicemail</key>
<true/>
<key>com.apple.private.suggestions.contacts</key>
<true/>
<key>com.apple.private.system-keychain</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
<string>kTCCServicePhotos</string>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceMicrophone</string>
<string>kTCCServiceWillow</string>
</array>
<key>com.apple.private.tcc.manager.check-by-audit-token</key>
<array>
<string>kTCCServiceBluetoothAlways</string>
</array>
<key>com.apple.private.tcc.manager.get-identity-for-credential</key>
<true/>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.facetime</string>
<string>com.apple.mobilephone</string>
</array>
<key>com.apple.runningboard.assertions.callservicesd</key>
<true/>
<key>com.apple.runningboard.process-state</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.carkit.service</string>
<string>com.apple.coreduetd.people</string>
<string>com.apple.fairplayd.versioned</string>
<string>com.apple.biome.PublicStreamAccessService</string>
<string>com.apple.imtransferservices.IMTransferAgent</string>
<string>com.apple.adid</string>
<string>com.apple.group-activities.conversationmanagerhost</string>
<string>com.apple.CompanionLink</string>
<string>com.apple.gamed</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.InCallService</string>
<string>com.apple.suggestions</string>
<string>com.apple.ScreenTimeAgent</string>
<string>com.apple.VideoConference</string>
<string>com.apple.VideoProcessing</string>
<string>com.apple.ClarityUI</string>
<string>com.apple.ClarityUI.PhoneFaceTime</string>
<string>com.apple.SOS</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<string>com.apple.TelephonyUtilities.sharePlayAppPolicies</string>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>RootDomainUserClient</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.network.server</key>
<true/>
<key>com.apple.security.personal-information.addressbook</key>
<true/>
<key>com.apple.security.temporary-exception.shared-preference.read-only</key>
<array>
<string>com.apple.suggestions</string>
</array>
<key>com.apple.selectivesharing.session_system</key>
<true/>
<key>com.apple.siri.external_request</key>
<true/>
<key>com.apple.springboard.CFUserNotification</key>
<true/>
<key>com.apple.springboard.inCallPresentation</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.shortcutitems.fullaccess</key>
<true/>
<key>com.apple.springboard.statusbarstyleoverrides</key>
<true/>
<key>com.apple.symptom_diagnostics.report</key>
<true/>
<key>com.apple.systemstatus.activityattribution</key>
<true/>
<key>com.apple.systemstatus.publisher.domains</key>
<array>
<string>calling</string>
</array>
<key>com.apple.videoconference.allow-conferencing</key>
<true/>
<key>com.apple.visualvoicemail.client</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>callservicesd</string>
</array>
</dict>
</plist>
application-identifier*com.apple.telephonyutilities.callservicesd0
aps-connection-initiate
aps-environment
development0% com.apple.CallHistory.sync.allow
0i com.apple.CallKit.call-directory0E
synchronize-extensions
compact-store
query-identification-entries04/com.apple.CallKit.call-directory.extension-host
!com.apple.CommCenter.fine-grained0l
spi
phone
voice
identity
data-usagedata-allowed
data-allowed-write
carrier-space
carrier-settings0
com.apple.CompanionLink
com.apple.FaceTime.CallLaunch
0}(com.apple.FaceTime.FTConversationService0Q
access-conversation-links
modify-conversation-links
access-conversation-links0 
com.apple.FaceTime.NoPrompt
0&!com.apple.appletv.pbs.mediaremote
0(#com.apple.appletv.pbs.user-profiles
0/*com.apple.appletv.pbs.user-profiles.select
com.apple.assistant.settings
0,'com.apple.backboardd.launchapplications
0,'com.apple.backboardd.proximityDetection
com.apple.bluetooth.system
com.apple.coreduetd.allow
com.apple.coreduetd.context
com.apple.coreduetd.knowledge
com.apple.coreduetd.people
094com.apple.coremedia.allow-protected-content-playback
0A+com.apple.coremedia.captureassertionservice0
modify-assertion02-com.apple.corespeech.supportheysiriwhenrecord
0(#com.apple.coretelephony.Calls.allow
0&!com.apple.developer.group-session
0\2com.apple.developer.notificationcenter-identifiers0&
com.apple.facetime
com.apple.Photos0)$com.apple.duet.expertcenter.consumer
0,'com.apple.frontboard.launchapplications
083com.apple.frontboardservices.display-layout-monitor
com.apple.imagent
com.apple.imagent.av
com.apple.messages.nicknames
0'"com.apple.multitasking.termination
0*%com.apple.multitasking.voipassertions
0.)com.apple.nano.nanoregistry.generalaccess
061com.apple.pegasus.backgroundPIPServiceEntitlement
0-(com.apple.private.CallHistory.read-write
0+&com.apple.private.accounts.allaccounts
0-(com.apple.private.aps-client-cert-access
0.)com.apple.private.aps-connection-initiate
0^/com.apple.private.assets.accessible-asset-types0+)com.apple.MobileAsset.phoneNumberResolver0)$com.apple.private.attentionawareness
0.)com.apple.private.attentionawareness.poll
;com.apple.private.attribution.explicitly-assumed-identities0
type
bundleID0
value
com.apple.facetime
type
bundleID0
value
com.apple.mobilephone
e0
type
path0U
valueL/System/Library/PrivateFrameworks/TelephonyUtilities.framework/callservicesd0<"com.apple.private.biome.read-write0
GroupActivitySession0(#com.apple.private.canGetAppLinkInfo
com.apple.private.carkit.dnd
com.apple.private.contacts
com.apple.private.copresence
094com.apple.private.coreaudio.borrowaudiosession.allow
061com.apple.private.coreaudio.mxsessionPropertyPipe
0FAcom.apple.private.coremedia.interruptions.phonecallpriority.allow
061com.apple.private.coreservices.canalwaysadvertise
04/com.apple.private.coreservices.canmaplsdatabase
03.com.apple.private.coreservices.canopenactivity
0@;com.apple.private.coreservices.lsuseractivityd.LSAlwaysPick
0E@com.apple.private.coreservices.lsuseractivityd.bestappsuggestion
0)$com.apple.private.dmd.emergency-mode
com.apple.private.dmd.policy
0uEcom.apple.private.donotdisturb.behavior.resolution.client-identifiers0,*com.apple.telephonyutilities.callservicesd0;6com.apple.private.externalaccessory.showallaccessories
com.apple.private.game-center0E
AccountAuthenticate
Multiplayer
TurnBasedMultiplayer
GameStats083com.apple.private.game-center.bypass-authentication
0/*com.apple.private.hid.client.event-monitor
com.apple.private.icfcallserver
com.apple.private.ids.firewall
com.apple.private.ids.messaging0
N,com.apple.private.alloy.dropin.communication&com.apple.private.alloy.facetime.multi&com.apple.private.alloy.facetime.video#com.apple.private.alloy.facetime.lp'com.apple.private.alloy.phonecontinuity
com.apple.ess"com.apple.private.alloy.phone.auth&com.apple.private.alloy.facetime.audio%com.apple.private.alloy.facetime.sync0
r-com.apple.private.ids.messaging.high-priority0
?,com.apple.private.alloy.dropin.communication&com.apple.private.alloy.facetime.multi&com.apple.private.alloy.facetime.video#com.apple.private.alloy.facetime.lp'com.apple.private.alloy.phonecontinuity"com.apple.private.alloy.phone.auth&com.apple.private.alloy.facetime.audio%com.apple.private.alloy.facetime.sync0
"com.apple.private.ids.registration0},com.apple.private.alloy.dropin.communication&com.apple.private.alloy.facetime.multi%com.apple.private.alloy.facetime.sync0.)com.apple.private.ids.remoteurlconnection
D"com.apple.private.ids.self-session0
,com.apple.private.alloy.dropin.communication&com.apple.private.alloy.facetime.multi'com.apple.private.alloy.phonecontinuity&com.apple.private.alloy.facetime.video&com.apple.private.alloy.facetime.audio$com.apple.private.alloy.tincan.audio%com.apple.private.alloy.facetime.sync0
com.apple.private.ids.session0
,com.apple.private.alloy.dropin.communication&com.apple.private.alloy.facetime.multi'com.apple.private.alloy.phonecontinuity&com.apple.private.alloy.facetime.video&com.apple.private.alloy.facetime.audio$com.apple.private.alloy.tincan.audio%com.apple.private.alloy.facetime.sync0
G%com.apple.private.ids.session-private0
,com.apple.private.alloy.dropin.communication&com.apple.private.alloy.facetime.multi'com.apple.private.alloy.phonecontinuity&com.apple.private.alloy.facetime.video&com.apple.private.alloy.facetime.audio$com.apple.private.alloy.tincan.audio%com.apple.private.alloy.facetime.sync0)$com.apple.private.imavcore.imavagent
03.com.apple.private.imcore.imremoteurlconnection
0D*com.apple.private.lockdown.finegrained-get0
NULL/ActivationState0!
com.apple.private.necp.match
0U+com.apple.private.notificationcenter-system0&
$0"
identifier
com.apple.SystemNote0<7com.apple.private.notificationcenter.internalpushclient
02-com.apple.private.notificationcenterui.alerts
com.apple.private.rtcreportingd
com.apple.private.screen-time
03.com.apple.private.security.storage.CallHistory
00+com.apple.private.security.storage.Messages
01,com.apple.private.security.storage.Voicemail
0+&com.apple.private.suggestions.contacts
0&!com.apple.private.system-keychain
com.apple.private.tcc.allow0n
kTCCServiceMediaLibrary
kTCCServicePhotos
kTCCServiceAddressBook
kTCCServiceMicrophone
kTCCServiceWillow0R2com.apple.private.tcc.manager.check-by-audit-token0
kTCCServiceBluetoothAlways0>9com.apple.private.tcc.manager.get-identity-for-credential
0e6com.apple.private.usernotifications.bundle-identifiers0+
com.apple.facetime
com.apple.mobilephone04/com.apple.runningboard.assertions.callservicesd
0)$com.apple.runningboard.process-state
V4com.apple.security.exception.mach-lookup.global-name0
com.apple.carkit.service
com.apple.coreduetd.people
com.apple.fairplayd.versioned)com.apple.biome.PublicStreamAccessService,com.apple.imtransferservices.IMTransferAgent
com.apple.adid2com.apple.group-activities.conversationmanagerhost
com.apple.CompanionLink
com.apple.gamed0
8com.apple.security.exception.shared-preference.read-only0
com.apple.InCallService
com.apple.suggestions
com.apple.ScreenTimeAgent
com.apple.VideoConference
com.apple.VideoProcessing
com.apple.ClarityUI!com.apple.ClarityUI.PhoneFaceTime
com.apple.SOS0n9com.apple.security.exception.shared-preference.read-write1com.apple.TelephonyUtilities.sharePlayAppPolicies0D*com.apple.security.iokit-user-client-class0
RootDomainUserClient0&!com.apple.security.network.client
0&!com.apple.security.network.server
083com.apple.security.personal-information.addressbook
0]Bcom.apple.security.temporary-exception.shared-preference.read-only0
com.apple.suggestions0.)com.apple.selectivesharing.session_system
com.apple.siri.external_request
0-(com.apple.springboard.CFUserNotification
0-(com.apple.springboard.inCallPresentation
0+&com.apple.springboard.opensensitiveurl
03.com.apple.springboard.shortcutitems.fullaccess
02-com.apple.springboard.statusbarstyleoverrides
0)$com.apple.symptom_diagnostics.report
0/*com.apple.systemstatus.activityattribution
05(com.apple.systemstatus.publisher.domains0
calling01,com.apple.videoconference.allow-conferencing
0% com.apple.visualvoicemail.client
com.apple.wifi.manager-access
platform-application
seatbelt-profiles0
callservicesd
com.apple.tv
macOS
com.apple.TV
tvOS
fallback
com.apple.tv
com.apple.Music
macOS
com.apple.Music
tvOS
fallback
com.apple.Music
macOS
com.apple.Notes
tvOS
fallback
+1800
+1888
+1877
+1866
+1855
+1844
