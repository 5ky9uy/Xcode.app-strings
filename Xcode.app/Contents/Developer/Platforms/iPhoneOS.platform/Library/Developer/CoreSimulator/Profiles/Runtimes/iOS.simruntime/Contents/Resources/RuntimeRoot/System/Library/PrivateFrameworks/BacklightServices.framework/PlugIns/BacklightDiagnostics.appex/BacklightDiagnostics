@(#)PROGRAM:BacklightDiagnostics  PROJECT:BacklightServices-1
DEExtensionAttachmentsParamConsentProvidedKey
en_US_POSIX
HH.mm.ss.SSS
yyyy.MM.dd.HH.mm.ss.SSS
/private/var/tmp/FlipbookFrame-%03llu-%@-%@.png
public.png
cancelled
raw-%03u
/private/var/tmp/BacklightDiagnostics%@.txt
frameOnGlassNow:%@
frameOnGlassWhenFlipbookLastCancelled:%@
history(%u) {
%03u:%@
CA_IOSURFACE_IMAGE
init
initWithLocaleIdentifier:
setLocale:
setDateFormat:
mainDisplay
nativeOrientation
isEqualToString:
frameId
bls_specifier
presentationDate
stringFromDate:
stringWithFormat:
stringByStandardizingPath
fileURLWithPath:isDirectory:
isInverted
dictionaryWithObjects:forKeys:count:
UTF8String
attachmentWithPath:
bls_loggingString
array
allFlipbookFrames
objectForKeyedSubscript:
frameOnGlassNow
surface
writeImageFileForSurface:withFrame:variation:
addObject:
frameOnGlassWhenFlipbookLastCancelled
count
countByEnumeratingWithState:objects:count:
rawSurface
string
appendString:
writeToFile:atomically:encoding:error:
invalidate
attachmentList
justTimeSuffixFormatter
attachmentsForParameters:
.cxx_destruct
_justTimeSuffixFormatter
_dateSuffixFormatter
_standardImagePropertyOrientation
_invertedImagePropertyOrientation
_nativeOrientation
numberWithUnsignedLong:
numberWithUnsignedInt:
%p failed to create CGImageDestinationRef for path:%{public}@
%p failed to create CGImage for surface:%{public}@ frame:%{public}@
%p NULL surface for frame:%{public}@
 writeToFile error:%@
BacklightDiagnostics
@16@0:8
@40@0:8^{__IOSurface=}16@24@32
@24@0:8@16
v16@0:8
@"NSDateFormatter"
@"NSNumber"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.DiagnosticExtensions.extension</key>
<true/>
<key>com.apple.backlight.captureFrameOnGlass</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/tmp/</string>
</array>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>IOSurfaceRootUserClient</string>
</array>
</dict>
</plist>
@(#)PROGRAM:BacklightDiagnostics  PROJECT:BacklightServices-1
DEExtensionAttachmentsParamConsentProvidedKey
en_US_POSIX
HH.mm.ss.SSS
yyyy.MM.dd.HH.mm.ss.SSS
/private/var/tmp/FlipbookFrame-%03llu-%@-%@.png
public.png
cancelled
raw-%03u
/private/var/tmp/BacklightDiagnostics%@.txt
frameOnGlassNow:%@
frameOnGlassWhenFlipbookLastCancelled:%@
history(%u) {
%03u:%@
CA_IOSURFACE_IMAGE
surface
stringFromDate:
dictionaryWithObjects:forKeys:count:
bls_loggingString
fileURLWithPath:isDirectory:
numberWithUnsignedInt:
stringByStandardizingPath
isInverted
initWithLocaleIdentifier:
array
bls_specifier
isEqualToString:
attachmentWithPath:
presentationDate
appendString:
addObject:
countByEnumeratingWithState:objects:count:
rawSurface
string
invalidate
nativeOrientation
setLocale:
frameOnGlassWhenFlipbookLastCancelled
UTF8String
stringWithFormat:
frameId
frameOnGlassNow
allFlipbookFrames
count
mainDisplay
writeToFile:atomically:encoding:error:
setDateFormat:
objectForKeyedSubscript:
numberWithUnsignedLong:
init
attachmentList
justTimeSuffixFormatter
writeImageFileForSurface:withFrame:variation:
attachmentsForParameters:
.cxx_destruct
_justTimeSuffixFormatter
_dateSuffixFormatter
_standardImagePropertyOrientation
_invertedImagePropertyOrientation
_nativeOrientation
%p failed to create CGImageDestinationRef for path:%{public}@
%p failed to create CGImage for surface:%{public}@ frame:%{public}@
%p NULL surface for frame:%{public}@
 writeToFile error:%@
BacklightDiagnostics
@16@0:8
@40@0:8^{__IOSurface=}16@24@32
@24@0:8@16
v16@0:8
@"NSDateFormatter"
@"NSNumber"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.DiagnosticExtensions.extension</key>
<true/>
<key>com.apple.backlight.captureFrameOnGlass</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/tmp/</string>
</array>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>IOSurfaceRootUserClient</string>
</array>
</dict>
</plist>
