@(#)PROGRAM:BacklightDiagnostics  PROJECT:BacklightServices-1
DEExtensionAttachmentsParamConsentProvidedKey
en_US_POSIX
HH.mm.ss.SSS
yyyy.MM.dd.HH.mm.ss.SSS
/private/var/tmp/FlipbookFrame-%03llu-%@-%@.png
public.png
cancelled
raw-%03u
/private/var/tmp/BacklightDiagnostics%@.txt
frameOnGlassNow:%@
frameOnGlassWhenFlipbookLastCancelled:%@
history(%u) {
%03u:%@
CA_IOSURFACE_IMAGE
frameId
UTF8String
_invertedImagePropertyOrientation
surface
.cxx_destruct
frameOnGlassNow
_dateSuffixFormatter
stringFromDate:
_justTimeSuffixFormatter
_nativeOrientation
_standardImagePropertyOrientation
addObject:
allFlipbookFrames
appendString:
array
attachmentList
attachmentWithPath:
attachmentsForParameters:
bls_loggingString
bls_specifier
count
countByEnumeratingWithState:objects:count:
dictionaryWithObjects:forKeys:count:
fileURLWithPath:isDirectory:
frameOnGlassWhenFlipbookLastCancelled
init
initWithLocaleIdentifier:
invalidate
isEqualToString:
isInverted
justTimeSuffixFormatter
mainDisplay
nativeOrientation
numberWithUnsignedInt:
numberWithUnsignedLong:
objectForKeyedSubscript:
presentationDate
rawSurface
setDateFormat:
setLocale:
string
stringByStandardizingPath
stringWithFormat:
writeImageFileForSurface:withFrame:variation:
writeToFile:atomically:encoding:error:
%p failed to create CGImageDestinationRef for path:%{public}@
%p failed to create CGImage for surface:%{public}@ frame:%{public}@
%p NULL surface for frame:%{public}@
 writeToFile error:%@
BacklightDiagnostics
@16@0:8
@40@0:8^{__IOSurface=}16@24@32
@24@0:8@16
v16@0:8
@"NSDateFormatter"
@"NSNumber"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.DiagnosticExtensions.extension</key>
<true/>
<key>com.apple.backlight.captureFrameOnGlass</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/tmp/</string>
</array>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>IOSurfaceRootUserClient</string>
</array>
</dict>
</plist>
0-(com.apple.DiagnosticExtensions.extension
0,'com.apple.backlight.captureFrameOnGlass
0R;com.apple.security.exception.files.absolute-path.read-write0
/private/var/tmp/0G*com.apple.security.iokit-user-client-class0
IOSurfaceRootUserClient
@(#)PROGRAM:BacklightDiagnostics  PROJECT:BacklightServices-1
DEExtensionAttachmentsParamConsentProvidedKey
en_US_POSIX
HH.mm.ss.SSS
yyyy.MM.dd.HH.mm.ss.SSS
/private/var/tmp/FlipbookFrame-%03llu-%@-%@.png
public.png
cancelled
raw-%03u
/private/var/tmp/BacklightDiagnostics%@.txt
frameOnGlassNow:%@
frameOnGlassWhenFlipbookLastCancelled:%@
history(%u) {
%03u:%@
CA_IOSURFACE_IMAGE
frameId
UTF8String
_invertedImagePropertyOrientation
surface
.cxx_destruct
frameOnGlassNow
_dateSuffixFormatter
stringFromDate:
_justTimeSuffixFormatter
_nativeOrientation
_standardImagePropertyOrientation
addObject:
allFlipbookFrames
appendString:
array
attachmentList
attachmentWithPath:
attachmentsForParameters:
bls_loggingString
bls_specifier
count
countByEnumeratingWithState:objects:count:
dictionaryWithObjects:forKeys:count:
fileURLWithPath:isDirectory:
frameOnGlassWhenFlipbookLastCancelled
init
initWithLocaleIdentifier:
invalidate
isEqualToString:
isInverted
justTimeSuffixFormatter
mainDisplay
nativeOrientation
numberWithUnsignedInt:
numberWithUnsignedLong:
objectForKeyedSubscript:
presentationDate
rawSurface
setDateFormat:
setLocale:
string
stringByStandardizingPath
stringWithFormat:
writeImageFileForSurface:withFrame:variation:
writeToFile:atomically:encoding:error:
%p failed to create CGImageDestinationRef for path:%{public}@
%p failed to create CGImage for surface:%{public}@ frame:%{public}@
%p NULL surface for frame:%{public}@
 writeToFile error:%@
BacklightDiagnostics
@16@0:8
@40@0:8^{__IOSurface=}16@24@32
@24@0:8@16
v16@0:8
@"NSDateFormatter"
@"NSNumber"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.DiagnosticExtensions.extension</key>
<true/>
<key>com.apple.backlight.captureFrameOnGlass</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/tmp/</string>
</array>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>IOSurfaceRootUserClient</string>
</array>
</dict>
</plist>
0-(com.apple.DiagnosticExtensions.extension
0,'com.apple.backlight.captureFrameOnGlass
0R;com.apple.security.exception.files.absolute-path.read-write0
/private/var/tmp/0G*com.apple.security.iokit-user-client-class0
IOSurfaceRootUserClient
