@(#)PROGRAM:useractivityd  PROJECT:UserActivity-551
MbP?
?(knN
$@gfffgfffgfffgfff
J@%L9
pbpaste!
pbtypes!
BTLEPayloadData
DEBUG_lastEligibleItems
T@"NSArray",R,C
T#,R
T@"NSDate",&,V_dontHideUIBefore
T@"<SFActivityScannerDelegate>",V_delegate
T@"NSDate",C,V_hardSupressUntil
T@"<UCFilePacketReceiver>",W,V_receiver
T@"NSMutableDictionary",&,V_userActivityAdvertisableItemsByUUID
T@"BKSApplicationStateMonitor",&,V_appStateMonitor
T@"NSUUID",C,V_uniqueIdentifier
T@"FBSDisplayLayoutMonitor",R,&,V_mainDisplayLayoutMonitor
T@"UASharedPasteboardClientController",&,V_pasteboardController
T@"NSArray",C,V_carPlayScreenBundleIdentifiersInOrder
T@"UAUserActivityInfo",&,V_item
T@"NSArray",C,V_lastItemWhens
T@?,R,&,V_block
T@"NSArray",R
TB,R,V_allowedToUseLSAlwaysPick
T@"NSArray",R,C,V_DEBUG_lastEligibleItems
TB,V_shouldStop
T@"NSBundle",&,V_uaBundle
TB,V_userActive
T@"NSData",&,V_extraData
TQ,R,V_nextTime
T@"NSData",&,V_packetData
TQ,V_inputState
T@"NSData",C,V_advertisementPayload
Tq,R,V_priority
T@"NSData",C,V_userInfoPayload
Tq,V_generation
T@"NSDate",&,N,V_beginTimeForNonActiveAdvertisement
_active
T@"NSDate",&,V_holdPowerAssertionUntil
_advertisedItem
T@"NSDate",&,V_pingStart
_client
T@"NSDate",C,V_dontPrefetchBefore
_coders
T@"NSDate",C,V_ignoreLockScreenUntil
_deviceUILocked
T@"NSDate",C,V_lastInterestingTime
_domain
T@"NSDate",C,V_lastUserActiveTime
_expectedLength
T@"NSDate",C,V_supressUntil
_inData
T@"NSDate",C,V_when
_locked
T@"NSDate",R,C,V_epochEnd
_os_transaction
T@"NSDictionary",&,V_options
_pbinfo
T@"NSDictionary",R,C
_periodicUpdate
T@"NSError",&,V_streamError
_poweredOnValid
T@"NSFileHandle",&,V_archiveReadHandle
_reason
T@"NSFileHandle",&,V_file
_shouldTryWrite
T@"NSFileHandle",&,V_sendingDataFile
_stream
T@"NSInputStream",&,V_inputStream
_streamOpenTime
T@"NSMutableArray",&,V_advertisementTimes
_teamID
T@"NSMutableArray",&,V_messageQueue
_totalBytesSent
T@"NSMutableArray",&,V_pendingUpdateTasks
_updatePairedDeviceCapabilities
T@"NSMutableArray",&,V_requestedArchives
additionalItems
T@"NSMutableData",&,V_outMessage
allowedToGetCurrentActivityInfo
T@"NSMutableData",&,V_readBuffer
appStateMonitor
T@"NSMutableData",&,V_writeBuffer
arrayWithArray:
T@"NSMutableDictionary",&,V_currentAdvertisedItemOtherAdvertisedItems
baseURL
T@"NSMutableDictionary",&,V_lockTokens
bluetoothStatus
T@"NSMutableDictionary",&,V_providerRequests
bundleWithPath:
T@"NSMutableDictionary",&,V_supressedUntil
cleanupForItem:
T@"NSMutableDictionary",&,V_uuidItemMap
clearLocalPasteboardInformation
T@"NSMutableSet",&,V_controlConnections
clientIsActive:
T@"NSMutableSet",R,C,V_dirtyUUIDs
clientWriteTime
T@"NSMutableSet<UCStreamCoder>",&,V_coders
clients
T@"NSNetServiceBrowser",&,V_browserLookup
containsObject:
T@"NSObject<OS_dispatch_group>",R,&,V_executingGroup
controlListener
T@"NSObject<OS_dispatch_queue>",&,V_clientq
current
T@"NSObject<OS_dispatch_queue>",&,V_fetchQ
currentPerfTime
T@"NSObject<OS_dispatch_queue>",&,V_queue
currentSendData
T@"NSObject<OS_dispatch_queue>",R,&,V_dispatchQ
dataWithLength:
T@"NSObject<OS_dispatch_queue>",R,&,V_queue
dateWithTimeInterval:sinceDate:
T@"NSObject<OS_dispatch_semaphore>",&,V_nextPacketReady
debugCornerItem
T@"NSObject<OS_dispatch_semaphore>",&,V_pongSem
doGetCurrentAdvertisedItemUUID:
T@"NSObject<OS_dispatch_source>",&,V_heartBeatTrigger
doSetRemotePasteboardAvailable:
T@"NSObject<OS_dispatch_source>",&,V_source
enabled
T@"NSObject<OS_dispatch_source>",R,&,V_timerSource
fileRecvHandler
T@"NSOperationQueue",R
hideProgressUI:
T@"NSOutputStream",&,V_outStream
inMessageLength
T@"NSOutputStream",&,V_stream
initWithString:
T@"NSProgress",&,V_progress
isAsyncTransfer
T@"NSSet",&,V_typesToReceive
isDirty
T@"NSSet",C
localReflection
T@"NSSet",C,V_pairedDevices
manager
T@"NSSet",C,VscanningForTypes
modelIdentifier
T@"NSSet",R,C
netServiceBrowser:didNotSearch:
T@"NSString",&,N,V_remoteDeviceType
nextPacketReady
T@"NSString",&,V_currentRemoteBlobPath
T@"NSString",&,V_logFileDirectoryPath
numberWithLong:
T@"NSString",&,V_uuid
options
T@"NSString",C,V_applicationIdentifier
pasteAdvertiser
T@"NSString",C,V_domain
pasteboardTypes
T@"NSString",C,V_lastItemStr
periodicCleanup
T@"NSString",C,V_peerName
pongSem
T@"NSString",C,V_str
propertyForKey:
T@"NSString",C,V_title
read:maxLength:
T@"NSString",C,Vname
release
T@"NSString",R,C
removeReceiver:
T@"NSString",R,C,V_bootstrapName
returnInfoEarly
T@"NSString",R,C,V_teamIdentifier
sb_isStashedPIP
T@"NSTimer",&,V_backupTimer
sendFoundDevice
T@"NSTimer",&,V_pongTimer
sendingDataFile
T@"NSTimer",&,V_showUITimer
T@"NSURL",&,V_destURL
setAvgPingTime:
T@"NSURL",R,C
setBackupTimer:
T@"NSUUID",&,V_lastUUID
setCancellable:
T@"NSUUID",C,V_itemUUID
setDeviceColor:
T@"NSUUID",C,V_uuid
setInputStream:
T@"NSUUID",R,C,V_activityUUID
setLastItemStr:
T@"NSUserDefaults",R,&,V_userDefaults
setPayloadRequestedCompletions:
T@"NSXPCConnection",&,V_clientConnection
setProductName:
T@"NSXPCConnection",&,V_connection
setRemoveAfter:
T@"NSXPCConnection",R,W,V_connection
setSendingInfo:
T@"NSXPCListener",&,V_bestAppsListener
setStr:
T@"NSXPCListener",&,V_xpclistener
setStreamsData:
T@"PowerManagerIdleTracker",&,V_userIdleTracker
setTypesToSend:
T@"SFActivityScanner",&,V_scanner
setUserActivityNotificationRef:
T@"SFCompanionAdvertiser",&,V_pasteAdvertiser
setWebToNative:
T@"SFPeerDevice",&,V_lastSeenPasteboardDevice
setWriteBuffer:
T@"SFPeerDevice",&,V_ourPeerDevice
setup:interval:
T@"SFPeerDevice",&,V_peeredDevice
showProgressUI:
T@"SharingBTLEAdvertisementPayload",&,V_currentAdvertisementPayload
T@"SharingBTLEAdvertisementPayload",C,V_lastAdvertisementPayload
streamStartTime
T@"UAActivityReplay",&,V_controller
streams:didWriteMessageWithTag:
T@"UAActivityReplayAdvertiser",&,V_advertiser
stringFromDate:
T@"UAAuditToken",R,&,V_auditToken
synchronizeFile
T@"UACornerActionManager",&,Vmanager
teamIDs
T@"UACornerActionManager",W,V_manager
timerExpiration
T@"UADispatchScheduler",R,&,V_layoutUpdateScheduler
tryWriteMessage
T@"UADispatchScheduler",R,&,V_nextScheduleUpdate
update:
T@"UADispatchScheduler",R,&,V_nextUserIdleDeterminationScheduler
userIdleTracker
T@"UADispatchScheduler",R,&,V_periodicUpdate
.cxx_destruct
T@"NSArray",C,D
JSONObjectWithData:options:error:
T@"NSArray",R,C,V_receivedItems
T@"<SFActivityAdvertiserDelegate>",V_delegate
T@"NSDate",C,V_currentUntilDate
T@"<UAStreamHandlerDelegate>",W,V_delegate
T@"NSFileHandle",&,V_outputFile
T@"ActivityManagerDebuggingManager",R,&,V_debugManager
T@"NSSet",R,C,D
T@"FBSDisplayLayoutMonitor",R,&,V_carPlayDisplayLayoutMonitor
T@"SFPeerDevice",&,V_pairedPeer
T@"NSArray",&,V_currentLocalPasteboard
T@"UASimulator",R,&,V_simulator
T@"NSArray",C,V_lastItemUUIDs
T@?,C,V_handler
T@"NSArray",C,V_mainScreenBundleIdentifiersInOrder
TB,GisBacklightOn,V_backlightOn
T@"NSArray",R,C,D
TB,V_isSendMode
T@"NSArray",R,C,V_itemsBeingAdvertised
TB,V_systemHasSuspendedScanning
T@"NSData",&,V_currentSendData
TI,V_optionBits
T@"NSData",&,V_inMessage
TQ,R,V_runCount
T@"NSData",C
TQ,V_outputMode
T@"NSData",C,V_streamsData
Tq,V_currentLocalPasteboardSize
T@"NSData",R,C,D
Tq,V_packetSize
T@"NSDate",&,V_dontAdvertiseAsCurrentUntil
_advertiseTypes
T@"NSDate",&,V_lastAdvertismentTime
_alwaysEligible
T@"NSDate",&,V_startTime
_clientIsSigned
T@"NSDate",C,V_epochStart
_device
T@"NSDate",C,V_lastFrontTime
_disableAdminEntitlmentChecking
T@"NSDate",C,V_lastTimePayloadWasRequestedForAdvertisedItem
_executingGroup
T@"NSDate",C,V_removeAfter
_fetchQ
T@"NSDate",C,V_timerExpiration
_itemsLockedSem
T@"NSDate",R,C,D
_mockAdvertiser
T@"NSDictionary",&,V_auxStateInfo
_pbInfo
T@"NSDictionary",C,V_options
_pboardFetchSem
T@"NSError",&,V_error
_pingController
T@"NSError",C,V_error
_proxiedClients
T@"NSFileHandle",&,V_dataFile
_remoteHasFiles
T@"NSFileHandle",&,V_receivingDataFile
_source
T@"NSInputStream",&,V_inStream
_streamDataSize
T@"NSInputStream",&,V_stream
_supressedUntil
T@"NSMutableArray",&,V_archiveQueue
_teamIdentifier
T@"NSMutableArray",&,V_objects
_typesToReceive
T@"NSMutableArray",&,V_queuedPackets
absoluteToNSec:
T@"NSMutableData",&,V_inData
allKeys
T@"NSMutableData",&,V_outputStreamData
alwaysPickValue
T@"NSMutableData",&,V_receivedData
applicationForUserActivityType:
T@"NSMutableDictionary",&,V_archivePackagers
auditTokenValue
T@"NSMutableDictionary",&,V_items
bestCornerItem:
T@"NSMutableDictionary",&,V_possibleItems
browserFallback
T@"NSMutableDictionary",&,V_providers
cleanupCloneDir
T@"NSMutableDictionary",&,V_tmpArchiveWriteFiles
cleanupItemsDir
T@"NSMutableDictionary",R,&,V_proxiedClients
clearRemotePasteboardAvailable:
T@"NSMutableSet",&,V_payloadRequestedCompletions
clientWriteSize
T@"NSMutableSet",R,C,V_pongItems
clientq
T@"NSNetService",&,V_listeningService
conformsToType:
T@"NSObject",&,V_bluetoothStatusCallbackIdentifier
containsString:
T@"NSObject<OS_dispatch_group>",R,&,V_helpersDispatchGroup
creator
T@"NSObject<OS_dispatch_queue>",&,V_dispatchQ
currentCalendar
T@"NSObject<OS_dispatch_queue>",&,V_mainDispatchQ
currentProgress
T@"NSObject<OS_dispatch_queue>",&,V_respQueue
dataHasMessage:
T@"NSObject<OS_dispatch_queue>",R,&,V_mainDispatchQ
dateEpochStart:
T@"NSObject<OS_dispatch_semaphore>",&,V_itemsLockedSem
dealloc
T@"NSObject<OS_dispatch_semaphore>",&,V_pboardFetchSem
destURL
T@"NSObject<OS_dispatch_semaphore>",R,&,V_wasResumed
doSetLocalPasteboardReflection:
T@"NSObject<OS_dispatch_source>",&,V_holdPowerAssertionSourceTimer
enableAutomaticRendevousPairing
T@"NSObject<OS_dispatch_source>",R,&,V_source
entitlementValueForKey:ofClass:
T@"NSObject<OS_os_transaction>",&,V_os_transaction
handler
T@"NSOperationQueue",R,V_providedItemsOperationQueue
ignoredRTimeVal
T@"NSOutputStream",&,V_outputStream
infoRecvHandler
T@"NSProgress",&,V_fetchProgress
interactionType
T@"NSSet",&,V_pasteboardTypes
isAtEnd
T@"NSSet",&,V_typesToSend
isProxy
T@"NSSet",C,D
lowercaseString
T@"NSSet",C,V_teamIDs
maximumTimeoutToWaitForClientProcessToUpdateActivityInformation
T@"NSSet",R,&
needToCallBlock
T@"NSSet",R,V_activeDevicesIdentifiers
netServiceBrowserDidStopSearch:
T@"NSString",&,V_currentLocalBlobPath
notificationRef
T@"NSString",&,V_leaf
numberWithBool:
T@"NSString",&,V_logFilePath
objects
T@"NSString",C,V_activityType
osxUIConnection
T@"NSString",C,V_bundleIdentifier
pasteboardStreamWatchdogTimeout
T@"NSString",C,V_frontBundleID
payloadXferTime
T@"NSString",C,V_name
T@"NSString",C,V_remoteDeviceType
processCommand:
T@"NSString",C,V_teamID
protocolVersion
T@"NSString",C,V_type
recvRap
T@"NSString",R,&
remoteAvailable
T@"NSString",R,C,N
requiresBoosted
T@"NSString",R,C,V_name
T@"NSString",R,V_name
scanner
T@"NSTimer",&,V_localTimeout
sendRap
T@"NSTimer",&,V_remotePboardTimer
session
T@"NSURL",&,V_baseURL
setAuxlistener:
T@"NSURL",C,V_webpageURL
setBacklightOn:
T@"NSURL",R,C,V_providedItemsURL
setBool:forKey:
T@"NSUUID",&,V_uuid
setCurrentAdvertisementPayload:
T@"NSUUID",C,V_peerUUID
setDontAdvertiseAsCurrentUntil:
T@"NSUUID",R,&,V_uuid
setIsUIVisible:
T@"NSUUID",R,C,V_uuid
setLogFilePath:
T@"NSXPCConnection",&,V_auxConnection
setPayloadSize:
T@"NSXPCConnection",&,V_clientNotificationConnection
setRecvHandler:
T@"NSXPCConnection",&,V_osxUIConnection
setReturnEarly:
T@"NSXPCListener",&,V_auxlistener
setShowUITimer:
T@"NSXPCListener",&,V_controlListener
setStreamError:
T@"NSXPCListener",&,Vlistener
setTag:
T@"PowerManagerIdleTracker",&,V_userIsCurrentIdleTracker
setUsedStreams:
T@"SFActivityScanner",R,&,V_scanner
setUuidItemMap:
T@"SFPeerDevice",&,V_device
setWithObjects:
T@"SFPeerDevice",&,V_ourDevice
setXpclistener:
T@"SFPeerDevice",&,V_peer
sharingReceiver
T@"SFPeerDevice",R,C,V_peer
simulatorStatus
T@"SharingBTLEAdvertisementPayload",C,V_advertisementPayload
streamOpenDelay
T@"SharingBTLESuggestedItem",&,VfakeBTLEInjectedItem
streams:didReadMessage:withTag:
T@"UAActivityReplay",&,V_replayManager
stringByAppendingPathComponent:
T@"UAActivityReplayReceiver",&,V_receiver
suspend
T@"UABluetoothStatus",&,V_bluetoothStatus
T@"UACornerActionManager",R,&,V_manager
timeout
T@"UADispatchScheduler",&,V_scheduler
tryStop
T@"UADispatchScheduler",R,&,V_nextScheduleBestAppDeterminationScheduler
tryWriteRawData
T@"UADispatchScheduler",R,&,V_nextUpdateAdvertisedItemsScheduler
uppercaseString
T@"UADispatchScheduler",R,&,V_periodicCleanup
userInfoPayload
T@"UADispatchWatchdog",&,V_watchdog
T@"UALocalItemReceiver",&,V_localReceiver
T@"UAMockActivityAdvertiser",R,&,V_mockAdvertiser
T@"UAMockActivityScanner",R,&,V_mockScanner
T@"UANetworkReplayRendevousHandler",&,V_networkConnectionHandler
T@"UAPairedSFActivityAdvertiser",&,V_pairedAdvertiser
T@"UAPairedSFActivityScanner",&,V_pairedScanner
T@"UAPingClient",R,&,V_client
T@"UAPingController",&,V_pingController
T@"UAPingController",R,&,V_controller
T@"UAPingNotifier",R,&,V_notifier
T@"UARemotePasteboardDidSendLocalEvent",&,V_localInfo
T@"UARemotePasteboardWasRequestedEvent",&,V_pasteInfo
T@"UAReplayClientController",&,V_client
T@"UASharedPasteboardDataRequester",&,V_dataRequester
T@"UASharedPasteboardInfo",&,V_currentLocalTypes
T@"UASharedPasteboardInfo",&,V_pbInfo
T@"UASharedPasteboardInfo",&,V_pbinfo
T@"UASharedPasteboardInfoWrapper",&,V_pboardInfoToSend
T@"UASharedPasteboardInfoWrapper",&,V_pbwrapper
T@"UASharedPasteboardInfoWrapper",&,V_receivedInfo
T@"UASharedPasteboardInfoWrapper",&,V_recvRap
T@"UASharedPasteboardInfoWrapper",&,V_sendRap
T@"UASharedPasteboardInfoWrapper",&,V_sendingInfo
T@"UASharedPasteboardInputStreamManager",&,V_inStream
T@"UASharedPasteboardOutputStreamManager",&,V_outStream
T@"UASharingReceiver",R,&,V_receiver
T@"UASimulator",&,V_simulator
T@"UASimulatorAdvertisementCreator",R,&,V_creator
T@"UASimulatorAdvertiser",R,&,V_advertiser
T@"UASimulatorController",R,&,V_controller
T@"UASimulatorReceiver",R,&,V_receiver
T@"UAStreamHandler",&,V_streamHandler
T@"UATimedPowerAssertions",&,V_assertionForRead
T@"UATimedPowerAssertions",&,V_assertionForWrite
T@"UATimedPowerAssertions",&,V_deviceUILockedPowerAssertion
T@"UATimedPowerAssertions",&,V_preventIdleSleepAssertion
T@"UATimedPowerAssertions",&,V_screenDimmedPowerAssertion
T@"UATimedPowerAssertions",&,V_userInactivePowerAssertion
T@"UAUserActivityAdvertisableItem",R,&,V_currentAdvertisableActivity
T@"UAUserActivityAnalyticsInfo",&,V_info
T@"UAUserActivityClientProcess",W,V_client
T@"UAUserActivityClientProcess",W,V_originatingClient
T@"UAUserActivityClientProcessesController",R,&,V_controller
T@"UAUserActivityInfo",&,N
T@"UAUserActivityInfo",&,V_advertisedItem
T@"UAUserActivityInfo",&,V_currentAdvertisedItem
T@"UAUserActivityInfo",&,V_pinnedUserActivityInfoItem
T@"UCFilePackager",&,V_filePackager
T@"UCRemotePasteboardGeneration",&,V_remoteGeneration
T@?,C,V_block
T@?,C,V_fileRecvHandler
T@?,C,V_infoRecvHandler
T@?,C,V_recvHandler
T@?,C,V_sendErrorHandler
T@?,C,V_wasContinuedBlock
TB,GisBrowserFallback,V_browserFallback
TB,GisCancelled,V_cancelled
TB,GisCurrent
TB,GisFromPairedDevice,V_fromPairedDevice
TB,GisScreenWatcherPresent,V_screenWatcherPresent
TB,N,V_cancelled
TB,N,V_isAsyncTransfer
TB,N,V_isFileCopy
TB,N,V_usedStreams
TB,R
TB,R,D
TB,R,D,GisSandboxed
TB,R,GisBatterySaverModeEnabled,V_batterySaverModeEnabled
TB,R,N
TB,R,N,GisSpringBoardElement
TB,R,N,GisUIApplicationElement
TB,R,N,Gsb_isStashedPIP
TB,R,N,Gsb_isTransitioning
TB,R,V_activitiesShouldCrossover
TB,R,V_allowedToGetCurrentActivityInfo
TB,R,V_allowedToMatchUserActivities
TB,R,V_allowedToUseEligibleEvenWhenInBackground
TB,R,V_allowedToUseLSAlwaysEligible
TB,R,V_allowedToUseUAAlwaysAdvertise
TB,R,V_alwaysEligible
TB,R,V_alwaysPick
TB,R,V_clientIsSandboxed
TB,R,V_clientIsSigned
TB,R,V_frontmost
TB,R,V_shouldAdvertiseHandoff
TB,R,V_shouldAdvertisePasteboard
TB,R,V_terminated
TB,V_active
TB,V_advertiseTypes
TB,V_dataRequested
TB,V_deviceUILocked
TB,V_disableAdminEntitlmentChecking
TB,V_disableEntitlementsCheck
TB,V_enabled
TB,V_firstTime
TB,V_forceScanning
TB,V_hasBeenUsedAtLeastOnce
TB,V_hasFetchedLocalData
TB,V_hasFired
TB,V_isUIVisible
TB,V_locked
TB,V_needToCallBlock
TB,V_payloadRequested
TB,V_pboardBitToAdvertise
TB,V_pingMode
TB,V_receivedDelem
TB,V_receivingSuspended
TB,V_remoteAvailable
TB,V_remoteHasFiles
TB,V_returnEarly
TB,V_returnInfoEarly
TB,V_scheduledForSubmission
TB,V_screenDimmed
TB,V_sendFoundDevice
TB,V_shouldAdvertiseAutoPullActivityList
TB,V_shouldTryWrite
TB,V_supportNetworkPeers
TB,V_supportsContinuityStreams
TB,V_systemHasSuspendedAdvertisements
TB,V_systemIsIdle
TB,V_userIsCurrent
TB,V_wantsBestAppChangedNotifications
TB,V_webToNative
TC,D
TC,V_allowedToAccessAnyItem
TI,R,D
TI,R,V_assertion
TI,R,V_commandPort
TI,V_holdPowerAssertion
TI,V_inMessageLength
TI,V_simulatorPort
TQ,N,V_clientWriteSize
TQ,N,V_clientWriteSpeed
TQ,N,V_clientWriteTime
TQ,N,V_payloadSize
TQ,N,V_payloadXferSpeed
TQ,N,V_payloadXferTime
TQ,N,V_streamDataSize
TQ,N,V_streamDataXferSpeed
TQ,N,V_streamDataXferTime
TQ,N,V_streamOpenDelay
TQ,N,V_streamOpenTime
TQ,N,V_totalTime
TQ,R
TQ,V_changeAdvertisementThreadSpinCount
TQ,V_currentLocalGeneration
TQ,V_dataSent
TQ,V_debugType
TQ,V_interactionType
TQ,V_localSendStartTime
TQ,V_nextTimer
TQ,V_pasteFetchStartTime
TQ,V_payloadSize
TQ,V_payloadXferTime
TQ,V_reason
TQ,V_recentActionsStateHandler
TQ,V_state
TQ,V_streamOpenStartTime
TQ,V_streamStartTime
TQ,V_streamXferStartTime
TQ,V_suggestedActionType
TQ,V_timeRemaining
TQ,V_totalBytesReceived
TQ,V_userActivityNotificationRef
T^B,V_infoSent
T^{__CFUserNotification=},V_notificationRef
Td,V_avgPingTime
Td,V_frequency
Td,V_interval
Td,V_payloadAvailabilityDelay
Td,V_timeout
Td,V_transferDuration
Td,V_transferSpeed
Ti,R,D
Ti,V_backlightLevelToken
Ti,V_systemPreferenceChangedToken
Ti,V_uiLockStatusToken
Tq,N,V_errorCode
Tq,N,V_numberOfItems
Tq,N,V_state
Tq,N,V_underlyingErrorCode
Tq,R,N
Tq,R,V_alwaysPickValue
Tq,V_advertisementVersion
Tq,V_byteIndex
Tq,V_bytesRead
Tq,V_bytesReceived
Tq,V_currentPacketNumber
Tq,V_errorCode
Tq,V_expectedLength
Tq,V_extraDataType
Tq,V_inMessageTag
Tq,V_lastAdvertisedGeneration
Tq,V_lastSeenPasteboardVersionBit
Tq,V_nextPacketNumber
Tq,V_nextPacketToDeliver
Tq,V_outMessageTag
Tq,V_packetNumber
Tq,V_packetPreLoadCount
Tq,V_pongCount
Tq,V_protocolVersion
Tq,V_sendingCoderVersion
Tq,V_streamProtocolVersion
Tq,V_tag
Tq,V_totalBytesReceived
Tq,V_totalBytesSent
Tq,V_totalPacketCount
Tq,V_totalSendSize
T{?=[8I]},R,V_auditTokenValue
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
T{timeval=qi},R,V_ignoredRTimeVal
UIApplicationElement
URLByAppendingPathComponent:
URLByDeletingLastPathComponent
URLWithDataRepresentation:relativeToURL:
URLWithString:
URLWithString:relativeToURL:
UTF8String
UUID
UUIDString
_DEBUG_lastEligibleItems
_UABundle
_activeDevices
_activeDevicesIdentifiers
_activitiesShouldCrossover
_activityManagerListener
_activityType
_activityUUID
_addFileProvider:completionHandler:
_addItem:scheduleUpdates:
_additionalItems
_additionalUserActivityAdvertisableItems
_advertisableItems
_advertisePayload:
_advertisePayload:force:
_advertisePayload:force:sfAdvertiser:
_advertisementPayload
_advertisementTimes
_advertisementVersion
_advertiser
_advertisers
_advertisingSuspended
_allowedToAccessAnyItem
_allowedToGetCurrentActivityInfo
_allowedToMatchUserActivities
_allowedToUseEligibleEvenWhenInBackground
_allowedToUseLSAlwaysEligible
_allowedToUseLSAlwaysPick
_allowedToUseUAAlwaysAdvertise
_alwaysPick
_alwaysPickValue
_appStateMonitor
_applicationIdentifier
_archivePackagers
_archiveQueue
_archiveReadHandle
_assertion
_assertionForRead
_assertionForWrite
_attachInProcess
_attached
_auditToken
_auditTokenValue
_auxConnection
_auxStateInfo
_auxlistener
_avgPingTime
_backlightLevelToken
_backlightOn
_backupTimer
_baseURL
_batterySaverModeEnabled
_beginTimeForNonActiveAdvertisement
_bestAppsListener
_block
_bluetoothStatus
_bluetoothStatusCallbackIdentifier
_bootstrapName
_browserFallback
_browserLookup
_bundleIdentifier
_byteIndex
_bytes
_bytesRead
_bytesReceived
_callbacks
_cancelProvidingItemAtURL:toReaderWithID:
_cancelled
_carPlayDisplayLayoutMonitor
_carPlayScreenBundleIdentifiersInOrder
_changeAdvertisementThreadSpinCount
_checkIfBestApplicationChangedThread
_clientConnection
_clientIsSandboxed
_clientNotificationConnection
_clientWriteSize
_clientWriteSpeed
_clientWriteTime
_clientq
_clients
_commandPort
_connection
_controlConnections
_controlListener
_controller
_creationTime
_creator
_currentAdvertisableActivity
_currentAdvertisedItem
_currentAdvertisedItemOtherAdvertisedItems
_currentAdvertisementPayload
_currentLocalBlobPath
_currentLocalGeneration
_currentLocalPasteboard
_currentLocalPasteboardSize
_currentLocalTypes
_currentPacketNumber
_currentRemoteBlobPath
_currentSendData
_currentUntilDate
_dataFile
_dataRequested
_dataRequester
_dataSent
_debugCornerItem
_debugManager
_debugType
_delegate
_destURL
_determineItemToAdvertiseForHandoffThread
_determineWhenSystemGoesIdleThread
_deviceUILockedPowerAssertion
_dirtyUUIDs
_disableEntitlementsCheck
_dispatchQ
_doIt
_dontAdvertiseAsCurrentUntil
_dontHideUIBefore
_dontPrefetchBefore
_enabled
_epochEnd
_epochStart
_error
_errorCode
_extraData
_extraDataType
_fetchProgress
_file
_filePackager
_fileReactorID
_fileRecvHandler
_firstTime
_forceScanning
_frequency
_fromPairedDevice
_frontBundleID
_frontmost
_generation
_getPhysicalURLForURL:completionHandler:
_handler
_handlers
_hardSupressUntil
_hasBeenUsedAtLeastOnce
_hasFetchedLocalData
_hasFired
_heartBeatTrigger
_helpersDispatchGroup
_holdPowerAssertion
_holdPowerAssertionSourceTimer
_holdPowerAssertionUntil
_ignoreLockScreenUntil
_ignoredRTimeVal
_inMessage
_inMessageLength
_inMessageTag
_inStream
_info
_infoRecvHandler
_infoSent
_inputState
_inputStream
_interactionType
_interval
_isAsyncTransfer
_isFileCopy
_isSendMode
_isUIVisible
_item
_itemUUID
_items
_itemsBeingAdvertised
_lastAdvertisedGeneration
_lastAdvertisementPayload
_lastAdvertismentTime
_lastAutoPullActivitiesRequesterId
_lastFrontTime
_lastInterestingTime
_lastItemStr
_lastItemUUIDs
_lastItemWhens
_lastNumAdvertiseableProcesses
_lastSeenPasteboardDevice
_lastSeenPasteboardVersionBit
_lastTimePayloadWasRequestedForAdvertisedItem
_lastUUID
_lastUserActiveTime
_layoutUpdateScheduler
_leaf
_listeningService
_localDevice
_localInfo
_localReceiver
_localSendStartTime
_localTimeout
_lockTokens
_logFileDirectoryPath
_logFilePath
_mainDispatchQ
_mainDisplayLayoutMonitor
_mainScreenBundleIdentifiersInOrder
_managedSettingsChangedNotificationToken
_manager
_messageQueue
_mockScanner
_movingItemAtURL:requiresProvidingWithDestinationURL:completionHandler:
_name
_needToCallBlock
_needToRefreshPeerDevices
_networkConnectionHandler
_nextPacketNumber
_nextPacketReady
_nextPacketToDeliver
_nextScheduleBestAppDeterminationScheduler
_nextScheduleUpdate
_nextTime
_nextTimer
_nextUpdateAdvertisedItemsScheduler
_nextUserIdleDeterminationScheduler
_notificationRef
_notifiedItems
_notifier
_notifiers
_notifyToken
_numberOfItems
_objects
_optionBits
_options
_originatingClient
_osxUIConnection
_ourDevice
_ourPeerDevice
_outMessage
_outMessageTag
_outStream
_outputFile
_outputMode
_outputStream
_outputStreamData
_packetData
_packetNumber
_packetPreLoadCount
_packetSize
_pairedAdvertiser
_pairedClientPort
_pairedDevices
_pairedPeer
_pairedScanner
_pasteAdvertiser
_pasteFetchStartTime
_pasteInfo
_pasteboardController
_pasteboardTypes
_payloadAvailabilityDelay
_payloadRequested
_payloadRequestedCompletions
_payloadSize
_payloadXferSpeed
_payloadXferTime
_pboardBitToAdvertise
_pboardInfoToSend
_pbwrapper
_peer
_peerName
_peerUUID
_peeredDevice
_pendingPayloadFetches
_pendingResumeActivityUUIDs
_pendingUpdateTasks
_periodicCleanup
_periodicIdleUpdate
_physicalURLForURL:
_pingMode
_pingStart
_pinnedUserActivityInfoItem
_pongCount
_pongItems
_pongSem
_pongTimer
_possibleItems
_poweredOn
_preventIdleSleepAssertion
_priority
_progress
_protocolVersion
_provideItemAtURL:completionHandler:
_provideItemAtURL:toReaderWithID:completionHandler:
_provideItemAtURL:withInfo:completionHandler:
_providedItemAtURL:didGainPresenterWithID:
_providedItemAtURL:didGainPresenterWithInfo:
_providedItemAtURL:didLosePresenterWithID:
_providedItemAtURL:withPresenterWithID:didMoveToURL:
_providedItemsOperationQueue
_providedItemsURL
_providerRequests
_providers
_publish
_queue
_queuedPackets
_readBuffer
_receivedData
_receivedDelem
_receivedInfo
_receivedItems
_receiver
_receivers
_receivingDataFile
_receivingSuspended
_recentActionsStateHandler
_recentlyLostDeviceIDs
_recvHandler
_recvRap
_refreshPairedSFPeerDevices
_releaseAssertion:
_remoteAvailable
_remoteDeviceType
_remoteGeneration
_remotePboardTimer
_removeAfter
_removeFileProvider:
_replayManager
_requestedArchives
_respQueue
_returnEarly
_returnInfoEarly
_runCount
_scanner
_scheduledForSubmission
_scheduler
_screenDimmed
_screenDimmedPowerAssertion
_screenWatcherPresent
_sendErrorHandler
_sendFoundDevice
_sendRap
_sendingCoderVersion
_sendingDataFile
_sendingInfo
_session
_sfActivityScanners
_sfAdvertisers
_shouldAdvertiseAutoPullActivityList
_shouldAdvertiseHandoff
_shouldAdvertisePasteboard
_shouldStop
_showUITimer
_simulator
_simulatorPort
_simulators
_startTime
_state
_stop
_str
_streamDataXferSpeed
_streamDataXferTime
_streamError
_streamHandler
_streamOpenDelay
_streamOpenStartTime
_streamProtocolVersion
_streamStartTime
_streamXferStartTime
_streamsData
_submitted
_suggestedActionType
_supportNetworkPeers
_supportsContinuityStreams
_supressUntil
_suspended
_systemHasSuspendedAdvertisements
_systemHasSuspendedScanning
_systemIdlePreviousTimeSinceLastUserActivity
_systemIsIdle
_systemPreferenceChangedToken
_tag
_teamIDs
_terminated
_timeRemaining
_timeout
_timerExpiration
_timerSource
_title
_tmpArchiveWriteFiles
_totalBytesReceived
_totalPacketCount
_totalSendSize
_totalTime
_transferDuration
_transferSpeed
_triggerWatchdog
_type
_typeWithDeviceModelCode:
_typesToSend
_uaBundle
_uiLockStatusToken
_underlyingErrorCode
_uniqueIdentifier
_unpublish
_updateAdvertisement
_usedStreams
_userActive
_userActivityAdvertisableItemsByUUID
_userActivityClientsByBundleID
_userActivityClientsByPID
_userActivityNotificationRef
_userDefaults
_userIdleTracker
_userInactivePowerAssertion
_userInfoPayload
_userIsCurrent
_userIsCurrentIdleTracker
_uuid
_uuidItemMap
_visibleUserActivityClients
_wantsBestAppChangedNotifications
_wasContinuedBlock
_wasResumed
_watchdog
_webToNative
_webpageURL
_when
_writeBuffer
_writerWithID:didFinishWritingForURL:
_xpclistener
absoluteString
acquireWithError:
actionStrs:maximumInternal:clear:
active
activeAdvertiseableItemsUUIDs
activeDevices
activeDevicesIdentifiers
activePayloadUpdateInterval
activitiesShouldCrossover
activityAdvertiser:activityPayloadForAdvertisementPayload:command:requestedByDevice:withCompletionHandler:
activityAdvertiser:activityPayloadForAdvertisementPayload:handoffCommand:requestedByDevice:withCompletionHandler:
activityAdvertiser:didSendPayloadForActivityIdentifier:toDevice:error:
activityAdvertiser:pairedDevicesChangedNotification:
activityAdvertisingAllowed
activityBTLESharingEnabled
activityContinuationAllowed
activityPayloadFromDevice:forAdvertisementPayload:command:timeout:withCompletionHandler:
activityPayloadWarningSizeInBytes
activityReceivingAllowed
activityScanner:foundDeviceWithDevice:
activityScanner:lostDeviceWithDevice:
activityScanner:pairedDevicesChanged:
activityScanner:receivedAdvertisement:
activityType
activityTypes
activityUUID
addActivityNotifier:
addAdditionalItem:forKey:
addAdditionalUserActivityAdvertisableItems:
addAdvertiser:
addClient:
addHandler:
addIndex:
addItem:
addItem:scheduleUpdates:
addNewItemsFromPayloads:device:scanner:force:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addReceiver:
addSFActivityAdvertiser:
addSFActivityScanner:
addSimulator:
addTimer:forMode:
addUserActivity:
addUserActivityClient:
additionalUserActivityAdvertisableItems
advertisableItems
advertiseAdvertisementPayload:options:
advertiseItem:force:
advertisePayload:force:
advertiseTypes
advertiseableItemForBundleIdentifier:
advertiseableItems
advertisedItem
advertisedItemWhichIsWebBrowserIntervalToRememberEarlierActivities
advertisementKind
advertisementPayload
advertisementTimes
advertisementVersion
advertiser
advertiser:didReceiveInputStream:outputStream:
advertisers
advertising
advertisingBytes
advertisingItems
advertisingSuspended
allHandlers
allObjects
allValues
allowedToAccessAnyItem
allowedToMatchUserActivities
allowedToUseEligibleEvenWhenInBackground
allowedToUseLSAlwaysEligible
allowedToUseLSAlwaysPick
allowedToUseUAAlwaysAdvertise
alwaysEligible
alwaysPick
anyObject
appState
appendBytes:length:
appendData:
appendFormat:
appendRecentAction:
appendString:
applicationIdentifier
applicationInfoForPID:completion:
applicationIsInstalled:
applicationProxyForIdentifier:
archivePackagers
archiveQueue
archiveReadHandle
archiveURLWithCompletion:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:count:
asid
askClientUserActivityToSave:
askClientUserActivityToSave:completionHandler:
askSourceProcessToUpdateActivityWithUUID:evenIfClean:completionHandler:
assertion
assertionForRead
assertionForWrite
attachSession:
attachToBluetoothSession
attributeWithDomain:name:
auditToken
autorelease
auxConnection
auxStateInfo
auxlistener
avgPingTime
backlightLevelToken
backlightOn
backupTimer
batterySaverModeEnabled
beginTimeForNonActiveAdvertisement
bestAppSuggestionSupressionIntervalForUnchangingItem
bestAppsListener
bestCornerItem
bestCornerItemsFromItems:
block
bluetoothStatusCallbackIdentifier
boolForKey:
boolValue
boolValueForKey:default:
bootstrapName
browserLookup
bundleIdentifier
bundleRecord
byteIndex
bytes
bytesRead
bytesReceived
cStringUsingEncoding:
calculateTimeRemaining
cancel
cancelAllLocks
cancelReceive
cancelled
carPlayDisplayLayoutMonitor
carPlayScreenBundleIdentifiersInOrder
caseInsensitiveCompare:
changeAdvertisementThreadSpinCount
characterAtIndex:
characterSetWithCharactersInString:
checkIfBestCornerItemChanged:
checkShouldFetch
class
cleanupArchiveDir
clearLocalPasteboardTypes:
clearPayload
client
clientConnection
clientIsSandboxed
clientIsSigned
clientNotificationConnection
clientWriteSpeed
clipboardSharingEnabled
close
closeFile
code
coders
commandPort
compare:
compare:options:
compareOptionBits:
compatibilityObject
completedReceivingPasteboardWithError:
components:fromDate:
componentsJoinedByString:
componentsSeparatedByString:
configurationForDefaultMainDisplayMonitor
conformsToProtocol:
connection
containsPasteboard
contentsOfDirectoryAtPath:error:
controlConnections
controller
coordinateWritingItemAtURL:options:error:byAccessor:
copy
copyWithZone:
cornerActionBTLEItemWithPayload:device:options:optionBits:scanner:receiver:
cornerActionBTLEItemWithSFAdvertisement:optionBits:scanner:receiver:
cornerActionItemAdditionalTimeToLiveAfterValidIntervalExpires
cornerActionItemDefaults
cornerActionItemForUUID:
cornerActionItemMaximumTimeForBTLEItemToLive
cornerActionItemSupressionInterval
cornerActionItemTimeout
cornerActionItems
cornerActionManager
count
countByEnumeratingWithState:objects:count:
createConnection:host:port:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createFileAtPath:contents:attributes:
createFileForLocalPasteboardBlob
createFileForRemotePasteboardBlob
createFileForUUID:
createFileForUUID:inSubFolder:
createFolderAtPath:
createSharedDataDirectory
createTmpArchiveFileWithUUID:
currentAdvertisableActivity
currentAdvertisedBytes
currentAdvertisedItem
currentAdvertisedItemOtherAdvertisedItems
currentAdvertisementPayload
currentConnection
currentLayout
currentLocalBlobPath
currentLocalGeneration
currentLocalPasteboard
currentLocalPasteboardSize
currentLocalTypes
currentPacketNumber
currentPasteboardActivityInfo
currentRemoteBlobPath
currentRunLoop
currentUntil
currentUntilDate
data
dataFile
dataForMoreAppSuggestions
dataRequested
dataRequester
dataSent
dataSize
dataUsingEncoding:
dataWithBytes:length:
dataWithBytesNoCopy:length:freeWhenDone:
dataWithCapacity:
dataWithData:
dataWithJSONObject:options:error:
date
dateByAddingTimeInterval:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
debugAdditionalPayloadReceiveTimeInterval
debugCrossoverAllActivities
debugDescription
debugEnablePinging
debugEnablePrefetch
debugForceNewPayloadEncoder
debugForceOldPayloadEncoder
debugIgnoreAppsUsedForDevelopment
debugManager
debugReadvertiseImmediately
debugStateChanged:
debugType
debugUserActivityTimeOffset
debugValidatePayloadFetchTimeInterval
debugValidateRetryPayloadFetchFailureInterval
debugValidateSampleResponseMaximumActivityPayloadSizeInBytes
debugValidateSampleResponseMinimumActivityPayloadSizeInBytes
debuggingInfo
decodeInt32ForKey:
decodeIntegerForKey:
decodeObjectForKey:
decodeObjectOfClass:forKey:
defaultCenter
defaultManager
defaultWorkspace
defaults:
delegate
deliverNextPacket
description
detachFromBluetoothSession
detachSession:
determineVisibleOrderingForProcessesWithUserActivities:previousBundleIDOrdering:
device
deviceColor
deviceLockDelayBeforeRemovingHandoffAdvertisement
deviceLockDelayBeforeRemovingPasteboardAdvertisement
deviceType
deviceTypeForModelIdentifier:
deviceUILocked
deviceUILockedPowerAssertion
dictionary
dictionaryForAdvertisableItem:
dictionaryForCornerActionItem:
dictionaryRepresentation
dictionaryWithDictionary:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
didResumeUserActivityWithUUID:completionHandler:
directoryExistsAtPath:
dirtyUUIDs
disableAdminEntitlmentChecking
disableEntitlementsCheck
dispatchPendingTasksForUUID:error:
dispatchQ
dispatchScheduler:frequency:queue:block:
doAddDynamicUserActivity:matching:
doAdvertiseAdvertisementPayload:options:
doConnected
doCopyAdvertisedUUIDWithCompletionHandler:
doCopyAllUUIDsOfType:withCompletionHandler:
doCopyDebuggingInfo:completionHandler:
doCopyDefaults:completionHandler:
doCopyDynamicUserActivitiesString:completionHandler:
doCopyEnabledUUIDsWithCompletionHandler:
doCopyRecentActions:completionHandler:
doCopySimulatorStatusString:completionHandler:
doCopyStatusString:options:completionHandler:
doDeleteUserActivityWithUUID:
doDetermineBestAppSuggestionWithCompletionHandler:
doDetermineBestAppSuggestions:completionHandler:
doDetermineIfUserActivityIsCurrent:completionHandler:
doDidSaveDelegate:completionHandler:
doFetchMoreAppSuggestions
doFetchUserActivityInfoWithUUID:completionHandler:
doFindMatchingUserActivityForString:withCompletionHandler:
doGetCurrentUserActivityInfo:
doGetLoggingFileForClient:options:completionHandler:
doGetPairedDevices:completionHandler:
doGetSFActivityAdvertisement:completionHandler:
doGetSysdiagnoseStringsIncludingPrivateData:completionHandler:
doGetUserActivityProxiesWithOptions:completionHandler:
doInitializeWithClientVersion:clientInfo:completionHandler:
doInjectBTLEItem:type:identifier:title:activityPayload:webPageURL:remoteModel:duration:payloadDelay:
doIt
doLaunchFollowUp:interactionType:cancelled:
doMarkUserActivityAsDirty:forceImmediate:webpageURL:expiration:hasiCloudDocument:hasUnsynchronizediCloudDoc:
doNOP:withCompletionHandler:
doPinUserActivityInfo:completionHandler:
doQueueFetchOfPayloadForBestAppSuggestion:completionHandler:
doRegisterAsProxyApplicationForPid:options:completionHandler:
doRegisterForBestAppChangeNotification
doRemoveBestAppSuggestion:options:
doRemoveDynamicUserActivity:matching:
doReplayCommands:completionHandler:
doSetDebugOption:value:
doSetDefaults:archivedValue:
doSetReceivedItems:
doSetupNetworkedPairs:port:
doSetupRendevous:domain:activate:
doStartBestAppSuggestion:
doTerminateServer
doUnregisterForBestAppChangeNotification
doUpdateUserActivityInfo:makeCurrent:completionHandler:
doUpdateUserActivityWithUUID:setActive:
doWillSaveDelegate:completionHandler:
domain
dontAdvertiseAsCurrentUntil
dontHideUIBefore
dontPrefetchBefore
dontSendActivityTitle
doubleForKey:
doubleValue
dynamicActivityType
dynamicUserActivitiesString
effectiveUserIdentifier
egid
elements
eligibleAdvertiseableItemsInOrder
eligibleForHandoff
eligibleForPublicIndexing
eligibleForSearch
eligibleInBackground
eligibleToAdvertise
eligibleToAlwaysAdvertise
enableHandoffInPowerSaverMode
enableNetworkControlListener
enableSharingFramework
enableTransactions
enclosureColor
encodeAsData
encodeInt64:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
encodedData
encodedInfoToOldEncodedInfo:
encodedUserInfoError
enumerateKeysAndObjectsUsingBlock:
enumerateLinesUsingBlock:
enumerateObjectsUsingBlock:
epochEnd
epochStart
error
errorCode
errorWithDomain:code:userInfo:
euid
eventName
eventPayload
executingGroup
expectedLength
expirationDate
extraData
extraDataType
extractArchiveWithCompletion:
fakeBTLEInjectedItem
fetchAdvertisedItems:
fetchAllNearbyAppSuggestions:
fetchDataForType:
fetchLoginIDWithCompletionHandler:
fetchMoreAppSuggestions
fetchMoreAppSuggestionsFromDevice:
fetchPeerForUUID:withCompletionHandler:
fetchProgress
fetchQ
fetchRemoteDeviceName:
fetchRemotePasteboardForProcess:withCompletion:
fetchRemotePasteboardStatus:
fetchRemotePasteboardTypesForProcess:withCompletion:
fetchSFPeerDevicesWithCompletionHandler:
file
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileExistsForUUID:inSubFolder:
fileHandleForReadingAtPath:
fileHandleForUpdatingAtPath:
fileHandleForWritingAtPath:
filePackager
filePackagerError:
fileSystemRepresentation
fileURLForArchiveWithUUID:
fileURLForCloneItems
fileURLForPasteboardItem:
fileURLWithPath:
fileURLWithPath:isDirectory:
finishDecoding
finishWritingArchiveForUUID:
firstObject
firstPartyActivityTypeOrUnknown:
firstTime
floatValue
forceScanning
foundDevice:
frame
frequency
fromPairedDevice
frontBundleID
frontmost
generation
getBytes:length:
getContinuationStreamsWithEndpointData:completionHandler:
getInputStream:outputStream:
getLocalPasteboardInfoData:
getStreamsToHostWithName:port:inputStream:outputStream:
getUUIDBytes:
getValue:
handleAppStateMonitorUpdate:
handleBytesAvailable
handleHeartbeat:
handleLocalDeviceCallback:event:result:
handleMessageRead
handleOpenCompleted
handlePasteboardAuxInfoReceived:
handlePasteboardDataRequest:
handlePasteboardDataResponse:
handlePasteboardFileRequest:
handlePasteboardFileResponse:
handlePasteboardInfoRequest:
handlePasteboardInfoResponse:
handleSessionEvent:event:result:
handleSpaceAvailable
handlers
handoffPayloadRequestTimout
hardSupressUntil
hasBeenUsedAtLeastOnce
hasFetchedLocalData
hasFired
hasKeyboardFocus
hasPrefix:
hasSpaceAvailable
hasSuffix:
hash
haveBestAppChangeNotificationClients
headerForData:
heartBeatTrigger
helpersDispatchGroup
holdPowerAssertion
holdPowerAssertionSourceTimer
holdPowerAssertionUntil
host
hour
identifier
idleTracker:queue:interval:block:
ifLockScreenIsActive:visibleBundleIdentifiers:
ignoreLockScreenUntil
ignoreLostDevice
inData
inMessage
inMessageTag
inStream
increaseLengthBy:
info
infoSent
init
init:frequency:queue:block:
init:queue:interval:block:
init:title:date:userInfoPayload:teamID:activityType:
initForReadingFromData:error:
initFromPing:
initRequiringSecureCoding:
initWithAdvertisedBytes:
initWithAdvertisedBytes:options:
initWithAdvertisementVersion:advertisementPayload:options:device:
initWithAnalyticsInfo:
initWithArchivedUserActivityInfo:
initWithArchivedUserActivityInfo:peerDevice:simulator:
initWithAuditToken:
initWithBytes:length:
initWithBytes:length:encoding:
initWithCapacity:
initWithCoder:
initWithContentsOfFile:
initWithController:
initWithController:connection:
initWithData:
initWithData:encoding:
initWithDelegate:
initWithDestinationURL:forArchiveUUID:
initWithDomain:code:userInfo:
initWithDomain:type:name:port:
initWithExplanation:target:attributes:
initWithFile:fileSize:packetSize:options:receiver:
initWithFileDescriptor:closeOnDealloc:
initWithFilePresenter:
initWithFormat:arguments:
initWithInputStream:outputStream:
initWithInputStream:outputStream:dataFile:
initWithInputStream:outputStream:delegate:
initWithItem:isCurrent:when:
initWithItem:isCurrent:when:versionFlags:
initWithLocaleIdentifier:
initWithMachServiceName:
initWithMachServiceName:options:
initWithManager:
initWithManager:advertiser:
initWithManager:connection:
initWithManager:controller:
initWithManager:inputStream:outputStream:name:
initWithManager:name:
initWithManager:service:
initWithManager:simulator:
initWithNSError:
initWithName:delta:activityUUID:queue:runAtCompletion:
initWithName:delta:queue:
initWithName:timeout:block:
initWithObjects:forKeys:count:
initWithOutputStream:inputStream:pasteboard:
initWithParent:userInfo:
initWithPayload:device:options:optionBits:type:activityType:bundleIdentifier:teamIDs:advertisingOptions:scanner:receiver:
initWithPayload:device:options:optionBits:type:activityType:bundleIdentifier:teamIDs:advertisingOptions:scanner:receiver:dynamicIdentifier:
initWithPayloadSize:
initWithRequester:
initWithSFActivityAdvertisement:
initWithServiceType:
initWithSimulator:
initWithSuiteName:
initWithType:manager:
initWithType:string:dynamicType:teamID:webpageURL:options:isCurrent:when:
initWithType:string:dynamicType:teamID:webpageURL:options:isCurrent:when:versionFlags:
initWithURL:
initWithURL:error:
initWithURL:resolvingAgainstBaseURL:
initWithURL:typeUUID:
initWithUUID:
initWithUUID:activityType:dynamicActivityType:bundleID:
initWithUUID:type:options:
initWithUUID:type:options:client:
initWithUUID:type:options:originatingClient:
initWithUUIDBytes:
initWithUUIDString:
initWithUserActivityInfo:
initWithUserActivityInfo:client:
initWithUserActivityInfo:peerDevice:simulator:
inputState
inputStream
inputStreamWithFileAtPath:
insertObject:atIndex:
intValue
integerForKey:
integerValue
integerValueForKey:default:
interfaceWithProtocol:
interval
intervalToAskClientWithUnsynchronizedDocumentsToUpdate
intervalToDelaySuspensionOfAdvertisingForItem:
invalidate
isBacklightOn
isBatterySaverModeEnabled
isBluetoothEnabled
isBrowserFallback
isCancelled
isCurrent
isDefaultPairedDevice
isDirtyActivityWithUUID:
isEligibleToAdvertiseWithUUID:
isEligibleToAlwaysAdvertiseWithUUID:
isEqual:
isEqualHashedPayloadBytes:
isEqualToString:
isFileCopy
isFromPairedDevice
isInstalled
isKindOfClass:
isMemberOfClass:
isPayloadAvailable
isPayloadRequested
isSandboxed
isScreenWatcherPresent
isSendMode
isSpringBoardElement
isUIApplicationElement
isUIVisible
item
itemUUID
items
itemsBeingAdvertised
itemsLockedSem
keyCounter
lastActiveItemRemovalDelay
lastAdvertisedGeneration
lastAdvertisementPayload
lastAdvertismentTime
lastFrontTime
lastInterestingTime
lastItemStr
lastItemUUIDs
lastItemWhens
lastObject
lastPathComponent
lastSeenPasteboardDevice
lastSeenPasteboardVersionBit
lastTimePayloadWasRequestedForAdvertisedItem
lastUUID
lastUserActiveTime
layoutRole
layoutUpdateScheduler
leaf
length
level
listenForIncomingConnections:port:type:
listener
listener:shouldAcceptNewConnection:
listeningService
load
localDevice
localInfo
localPBStatus
localPasteboardAvalibilityClearedTimeout
localPasteboardAvalibilityTimeout
localPasteboardBlobForReading
localPasteboardRefection
localPasteboardTypesDidChange:forGeneration:
localReceiver
localSendStartTime
localTimeout
localizations
localizedStringForKey:comment:
localizedStringForKey:value:table:
lockTokens
locked
log:format:
log:format:args:
logFileDirectoryPath
logFilePath
logItem:
logString
loggingAdvertiserEnabled
longLongValue
lostDevice:
lostDeviceWithUUID:
mainBundle
mainDispatchQ
mainDisplayLayoutMonitor
mainRunLoop
mainScreenBundleIdentifiersInOrder
matchesItem:
maximumActivityPayloadSizeInBytes
maximumAdvertisementsPerTimeInterval
maximumAdvertisementsTimeInterval
maximumTimeoutAfterAdvertisingEndsThatActivityCanBeResumed
messageQueue
minimumIntervalBetweenAdvertisements
minimumTimeForAnAdvertisementToLive
minimumTimeToLiveAfterRemovingAdvertisement
minute
mockAdvertiser
mockScanner
monitorWithConfiguration:
mostRecentAdvertisedBytesTime
moveAdvertisementToNonActive
multiHandoffEnabled
mutableBytes
mutableCopy
name
needsUpdateBeforeAdvertising
netService:didAcceptConnectionWithInputStream:outputStream:
netService:didNotPublish:
netService:didNotResolve:
netService:didUpdateTXTRecordData:
netServiceBrowser:didFindDomain:moreComing:
netServiceBrowser:didFindService:moreComing:
netServiceBrowser:didRemoveDomain:moreComing:
netServiceBrowser:didRemoveService:moreComing:
netServiceBrowserWillSearch:
netServiceDidPublish:
netServiceDidResolveAddress:
netServiceDidStop:
netServiceWillPublish:
netServiceWillResolve:
networkConnectionHandler
networkControlListenerPort
nextPacketNumber
nextPacketToDeliver
nextRunTimeString
nextScheduleBestAppDeterminationScheduler
nextScheduleUpdate
nextTime
nextTimer
nextUpdateAdvertisedItemsScheduler
nextUserIdleDeterminationScheduler
notifiedItems
notifier
notifiers
notifyBestAppsChanged:atTime:
notifyBestAppsChanged:when:confidence:
null
numberOfItems
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
objCType
objectAtIndex:
objectAtIndexedSubscript:
objectEnumerator
objectForKey:
objectForKeyedSubscript:
obtainLockForItem:completion:
offset
okToSuspendAdvertising
open
optionBits
originatingClient
os_transaction
ourDevice
ourPeerDevice
outMessage
outMessageTag
outStream
outputFile
outputMode
outputStream
outputStreamData
packMessage:
packager:gotData:forPacket:
packetData
packetNumber
packetPreLoadCount
packetSize
pairedAdvertiser
pairedClientPort
pairedDevices
pairedPeer
pairedScanner
pasteFetchStartTime
pasteInfo
pasteboardAvailible
pasteboardBitValue
pasteboardController
pasteboardEmbeddedPayloadSizeLimitInBytes
pasteboardHideUIDelay
pasteboardPasteRequestTimeout
pasteboardShowUIDelay
pasteboardTypeRequestTimeout
pasteboardUIMinimumDurration
pasteboardUITimeRemainingDelay
pasteboardWillBeFetched:
path
pathForResource:ofType:inDirectory:forLocalization:
payloadAvailabilityDelay
payloadBytes
payloadFetchResponseDelay
payloadForIdentifier:
payloadRequestFromPeer:advertisementPayload:command:completionHandler:
payloadRequested
payloadRequestedCompletions
payloadSize
payloadXferSpeed
payloads
pbInfo
pbinfo
pboardBitToAdvertise
pboardFetchSem
pboardInfoToSend
pbwrapper
peer
peerDevice
peerDeviceCanAcceptNewerPayload:
peerForSelf
peerName
peerUUID
peeredDevice
pendingUpdateTasks
perfSummaryString
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
periodicCleanupFunc
periodicUpdate
persistentIdentifier
pidVersion
pingController
pingMode
pingStart
pinnedUserActivityInfoItem
poke
pongCount
pongItems
pongTimer
port
possibleItems
postNotificationName:object:userInfo:
poweredOn
preferredLanguages
preferredLocalizationsFromArray:forPreferences:
prepNextPacket
preventIdleSleepAssertion
priority
processCallbacks
processCommands:completionHandler:
processHeader
processPasteboardInfo:
processReceivedData
processWasRemoved
productBuildVersion
productName
productVersion
progress
propertyListWithData:options:format:error:
propertyListWithStream:options:format:error:
providerRequests
providers
proxiedBundleIdentifier
proxiedClients
publishWithOptions:
pushItem:
queryItems
queue
queueCount
queuedPackets
rangeOfString:
readBuffer
readDataOfLength:
readDataToEndOfFile
readHandleForArchiveWithUUID:
reason
receiveAdvertisement:options:fromPeer:
receiveAdvertisement:scanner:
receivePasteboardStreamData:version:withCompletion:
receivePasteboardToFile:withProgress:infoReceivedHandler:completionHandler:returnInfoEarly:
receivePing:
receiveTypes:withProgress:completionHandler:
receivedBTLEItemTimeToLiveAfterDeviceLostIfPayloadIsQueued
receivedData
receivedDataBack:
receivedDelem
receivedInfo
receivedItems
receivedPasteboardInfo:withError:
receiver
receivers
receiving
receivingDataFile
receivingSuspended
recentActionsStateHandler
recentEligibleItemsInOrder:
recentlyEligibleItemInterval
reconnectToParentSimulator
recvHandler
recvStop:
referenceFrame
referrerURL
registerAsProxyApplication:forPid:
registerCallback:
registerDefaults:
releaseAssertion
releaseAssertion:
releaseLockForItem:
releaseLockForItem:withError:
remoteDeviceType
remoteGeneration
remoteHasFiles
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
remotePasteboardAvailable:
remotePasteboardAvailableTimeout
remotePasteboardBlobForReading
remotePboardTimer
removeActivityNotifier:
removeAdditionalUserActivityAdvertisableItems:
removeAdvertisement
removeAdvertiser:
removeAfter
removeAllFromDevice:
removeAllObjects
removeClient:
removeClientActivityClient:
removeFromRunLoop:forMode:
removeHandler:
removeIOPowerManagerUserIdleNotifications
removeItem:
removeItemAtPath:error:
removeItemAtURL:error:
removeLocalPasteboardFromAdvertisers:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectsAtIndexes:
removeObjectsInRange:
removeObserver:name:object:
removeReceivedItems:
removeSFActivityAdvertiser:
removeSFActivityScanner:
removeSimulator:
removeUserActivity:
removeUserActivityAdvertiseableItemByUUID:
rendevousPairingType
replaceOccurrencesOfString:withString:options:range:
replayManager
replayableAdvertisableItemWithAdvertisableItem:
reportedActivityType
requestPayloadWithCompletionHandler:
requestPayloadWithCompletionHandlerEvenIfClean:withCompletionHandler:
requestRemotePasteboardData:
requestRemotePasteboardInfo:
requestRemoteTypeInfo:
requestStreamEndpointData:
requestStreamEndpointDataV2:
requestedArchives
reset
resignCurrent
respQueue
respondsToSelector:
resume
resumeListeningForBluetooth
retain
retainCount
returnEarly
rgid
roundNum:to:
ruid
runCount
sandboxed
sb_isTransitioning
sb_stashedPIP
sb_transitioning
scanCharactersFromSet:intoString:
scanDouble:
scanForPeersOfType:domain:
scanForTypes:
scanInteger:
scanLocation
scanMockAdvertisement:
scanString:intoString:
scanUpToCharactersFromSet:intoString:
scanUpToString:intoString:
scannerWithString:
scanningForTypes
scheduleAdvertisementUpdate
scheduleAdvertisementUpdate:
scheduleAt:
scheduleBestAppDetermination
scheduleBestAppDetermination:
scheduleIOPowerManagerUserIdleNotifications
scheduleInRunLoop:forMode:
scheduleNext:
scheduleUpdatingAdvertisableItems
scheduleUpdatingAdvertisableItems:
scheduledForSubmission
scheduledTimerWithTimeInterval:repeats:block:
scheduler
scheme
screenDimDelayBeforeRemovingAdvertisements
screenDimDelayBeforeRemovingPasteboardAdvertisement
screenDimmed
screenDimmedPowerAssertion
screenSaverDelayBeforeRemovingPasteboardAdvertisement
screenSaverDelayToRemovingAdvertisements
screenWatcherPresent
searchForServicesOfType:inDomain:
seekToFileOffset:
self
sendCompletedWithError:
sendErrorHandler
sendEvent
sendFileArchiveRequest
sendHeartbeat
sendNextChunk
sendPasteboard:withCompletion:
sendPasteboardDataRequest
sendPasteboardDataResponse
sendPasteboardInfoRequest
sendPasteboardInfoResponse
sendResponse:
sendStopWithError:
sendTotalSendSize
sendTypes:completionHandler:
sendingCoderVersion
sendingInfo
serviceEndpointData
setActive:
setActivityType:
setAdvertisableItems:
setAdvertiseTypes:
setAdvertisedItem:
setAdvertisementPayload:
setAdvertisementTimes:
setAdvertisementVersion:
setAdvertiser:
setAdvertisingSuspended:
setAllowedToAccessAnyItem:
setAppStateMonitor:
setApplicationIdentifier:
setArchivePackagers:
setArchiveQueue:
setArchiveReadHandle:
setAssertionForRead:
setAssertionForWrite:
setAuxConnection:
setAuxStateInfo:
setBacklightLevelToken:
setBaseURL:
setBeginTimeForNonActiveAdvertisement:
setBestAppsListener:
setBlock:
setBluetoothStatus:
setBluetoothStatusCallbackIdentifier:
setBrowserFallback:
setBrowserLookup:
setBundleIdentifier:
setByAddingObjectsFromSet:
setByteIndex:
setBytesRead:
setBytesReceived:
setCancellationHandler:
setCancelled:
setCarPlayScreenBundleIdentifiersInOrder:
setCaseSensitive:
setChangeAdvertisementThreadSpinCount:
setClasses:forSelector:argumentIndex:ofReply:
setClient:
setClientConnection:
setClientNotificationConnection:
setClientWriteSize:
setClientWriteSpeed:
setClientWriteTime:
setClientq:
setCoders:
setCompletedUnitCount:
setConnection:
setControlConnections:
setControlListener:
setController:
setCurrent:
setCurrentAdvertisedItem:
setCurrentAdvertisedItemOtherAdvertisedItems:
setCurrentLocalBlobPath:
setCurrentLocalGeneration:
setCurrentLocalPasteboard:
setCurrentLocalPasteboardSize:
setCurrentLocalTypes:
setCurrentPacketNumber:
setCurrentRemoteBlobPath:
setCurrentSendData:
setCurrentUntilDate:
setDataFile:
setDataRequested:
setDataRequester:
setDataSent:
setDataSize:
setDateFormat:
setDebugCornerItem:
setDebugType:
setDebugging:
setDefault:value:
setDelegate:
setDestURL:
setDevice:
setDeviceUILocked:
setDeviceUILockedPowerAssertion:
setDisableAdminEntitlmentChecking:
setDisableEntitlementsCheck:
setDispatchQ:
setDomain:
setDontHideUIBefore:
setDontPrefetchBefore:
setDynamicActivityType:
setEligibleForHandoff:
setEligibleForPublicIndexing:
setEligibleForSearch:
setEnableSharingFramework:
setEnabled:
setEnclosureColor:
setEpochStart:
setError:
setErrorCode:
setExpectedLength:
setExpirationDate:
setExportedInterface:
setExportedObject:
setExtraData:
setExtraDataType:
setFakeBTLEInjectedItem:
setFetchProgress:
setFetchQ:
setFile:
setFilePackager:
setFileRecvHandler:
setFirstTime:
setForceScanning:
setFrequency:
setFromPairedDevice:
setFrontBundleID:
setGeneration:
setHandler:
setHardSupressUntil:
setHasBeenUsedAtLeastOnce:
setHasFetchedLocalData:
setHasFired:
setHeartBeatTrigger:
setHoldPowerAssertion:
setHoldPowerAssertionSourceTimer:
setHoldPowerAssertionUntil:
setIgnoreLockScreenUntil:
setInData:
setInMessage:
setInMessageLength:
setInMessageTag:
setInStream:
setInfo:
setInfoRecvHandler:
setInfoSent:
setInputState:
setInteractionType:
setInterruptionHandler:
setInterval:
setInvalidationHandler:
setIsAsyncTransfer:
setIsFileCopy:
setIsSendMode:
setItem:
setItemUUID:
setItems:
setItemsLockedSem:
setKind:
setLastAdvertisedGeneration:
setLastAdvertisementPayload:
setLastAdvertismentTime:
setLastFrontTime:
setLastInterestingTime:
setLastItemUUIDs:
setLastItemWhens:
setLastSeenPasteboardDevice:
setLastSeenPasteboardVersionBit:
setLastTimePayloadWasRequestedForAdvertisedItem:
setLastUUID:
setLastUserActiveTime:
setLeaf:
setLength:
setListener:
setListeningService:
setLocalInfo:
setLocalPasteboardReflection:
setLocalReceiver:
setLocalReflection:
setLocalSendStartTime:
setLocalTimeout:
setLocale:
setLockTokens:
setLocked:
setLogFileDirectoryPath:
setMainDispatchQ:
setMainScreenBundleIdentifiersInOrder:
setManager:
setMessageQueue:
setModelIdentifier:
setName:
setNeedToCallBlock:
setNeedsUserInteractivePriority:
setNetworkConnectionHandler:
setNextPacketNumber:
setNextPacketReady:
setNextPacketToDeliver:
setNextTimer:
setNotificationRef:
setNotifiedItems:
setNumberOfItems:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKeyedSubscript:
setObjects:
setOptionBits:
setOptions:
setOriginatingClient:
setOs_transaction:
setOsxUIConnection:
setOurDevice:
setOurPeerDevice:
setOutMessage:
setOutMessageTag:
setOutStream:
setOutputFile:
setOutputMode:
setOutputStream:
setOutputStreamData:
setPacketData:
setPacketNumber:
setPacketPreLoadCount:
setPacketSize:
setPairedAdvertiser:
setPairedDevices:
setPairedPeer:
setPairedScanner:
setPasteAdvertiser:
setPasteFetchStartTime:
setPasteInfo:
setPasteboardController:
setPasteboardTypes:
setPayload:identifier:
setPayloadAvailabilityDelay:
setPayloadAvailable:
setPayloadBytes:
setPayloadRequested:
setPayloadXferSpeed:
setPayloadXferTime:
setPayloads:
setPbInfo:
setPbinfo:
setPboardBitToAdvertise:
setPboardFetchSem:
setPboardInfoToSend:
setPbwrapper:
setPeer:
setPeerDevice:
setPeerDeviceType:
setPeerName:
setPeerUUID:
setPeeredDevice:
setPendingUpdateTasks:
setPersistentIdentifier:
setPingController:
setPingMode:
setPingStart:
setPinnedUserActivityInfoItem:
setPongCount:
setPongSem:
setPongTimer:
setPossibleItems:
setPreventIdleSleepAssertion:
setProductBuildVersion:
setProductVersion:
setProgress:
setProtocolVersion:
setProviderRequests:
setProviders:
setQueue:
setQueuedPackets:
setReadBuffer:
setReason:
setReceivedData:
setReceivedDelem:
setReceivedInfo:
setReceiver:
setReceivingDataFile:
setReceivingSuspended:
setRecentActionsStateHandler:
setRecvRap:
setRemoteAvailable:
setRemoteDeviceType:
setRemoteGeneration:
setRemoteHasFiles:
setRemoteObjectInterface:
setRemotePasteboardAvalibility:withDataRequester:
setRemotePboardTimer:
setReplayManager:
setRequestedArchives:
setRespQueue:
setReturnInfoEarly:
setReturnPasteboardDataEarlyWithCompletion:
setSandboxExtensions:
setScanner:
setScanningForTypes:
setScheduledForSubmission:
setScheduler:
setScreenDimmed:
setScreenDimmedPowerAssertion:
setScreenWatcherPresent:
setSendErrorHandler:
setSendFoundDevice:
setSendRap:
setSendingCoderVersion:
setSendingDataFile:
setSharedDataPath:
setShouldAdvertiseAutoPullActivityList:
setShouldStop:
setShouldTryWrite:
setSimulator:
setSimulatorForCommandPort:controller:
setSimulatorInFront:
setSimulatorPort:
setSource:
setStartTime:
setState:
setStream:
setStreamDataSize:
setStreamDataXferSpeed:
setStreamDataXferTime:
setStreamHandler:
setStreamOpenDelay:
setStreamOpenStartTime:
setStreamOpenTime:
setStreamProtocolVersion:
setStreamStartTime:
setStreamXferStartTime:
setSuggestedActionType:
setSupportNetworkPeers:
setSupportsContinuityStreams:
setSupportsStreams:
setSupressUntil:
setSupressedUntil:
setSuspended:
setSystemHasSuspendedAdvertisements:
setSystemHasSuspendedScanning:
setSystemIsIdle:
setSystemPreferenceChangedToken:
setTeamID:
setTeamIDs:
setTeamIdentifier:
setTimeOffset:
setTimeRemaining:
setTimeout:
setTimerExpiration:
setTitle:
setTmpArchiveWriteFiles:
setTotalBytesReceived:
setTotalBytesSent:
setTotalPacketCount:
setTotalSendSize:
setTotalTime:
setTotalUnitCount:
setTransferDuration:
setTransferSpeed:
setTransitionHandler:
setType:
setTypes:
setTypesToReceive:
setUaBundle:
setUiLockStatusToken:
setUnderlyingErrorCode:
setUniqueID:
setUniqueIdentifier:
setUserActive:
setUserActivityAdvertisableItemsByUUID:
setUserIdleTracker:
setUserInactivePowerAssertion:
setUserInfoObject:forKey:
setUserInfoPayload:
setUserIsCurrent:
setUserIsCurrentIdleTracker:
setUuid:
setValue:forKey:
setWantsBestAppChangedNotifications:
setWasContinuedBlock:
setWasContinuedInfo:
setWatchdog:
setWebpageURL:
setWhen:
setWithArray:
setWithObject:
sfActivityAdvertiser
sfActivityAdvertisers
sfActivityScanner
sfActivityScanners
sharedActivityManagerServer
sharedAdvertiser
sharedDataPath
sharedDefaults
sharedInstance
sharedManager
sharingAdvertiser
sharingBTLESuggestedItemForAdvertisementPayload:forDevice:
shortStatusString
shouldAdvertiseAutoPullActivityList
shouldAdvertiseHandoff
shouldAdvertisePasteboard
shouldIgnoreBluetoothDisabled
shouldItemBeAdvertised:
shouldLog:
shouldStop
shouldTryWrite
showUITimer
shutdownStream
shutdownTimerFired:
simulator
simulatorControllerForCommandPort:
simulatorPort
simulatorWithController:pairedPort:childSimPid:childVersion:
simulatorWithController:parentSimulatorPortName:
simulators
size
sortDescriptorWithKey:ascending:
sortUsingComparator:
sortUsingDescriptors:
sortedArrayUsingComparator:
sortedArrayUsingSelector:
source
springBoardElement
standardUserDefaults
start
startAdvertisingPingWithTimeInterval:
startConnection:
startServiceForPasteVersion:handler:
startTime
state
stateAsString
statusString
stop
stopAdvertisingPing
storeObject:
stream
stream:handleEvent:
streamDataSize
streamDataXferSpeed
streamDataXferTime
streamDoneWithInfo:error:
streamError
streamHandler
streamOpenStartTime
streamOpenTime
streamProtocolVersion
streamStatus
streamXferStartTime
streams:didReadRawData:
streamsData
streamsDidClose:withError:
streamsDidWriteRawDataBuffer:
string
stringByAppendingFormat:
stringByAppendingString:
stringForInteraction
stringForKey:
stringWithCString:encoding:
stringWithFormat:
stringWithString:
strongToWeakObjectsMapTable
subDirForItem:
subarrayWithRange:
subdataWithRange:
submit
submitDidSendLocalPasteboard:
submitLocalPasteboardInfoWasCleared
submitRemotePasteboardBecameAvailable
submitRemotePasteboardBecameUnavailable:
submitRemotePasteboardTypeInfoRequested:
submitRemotePasteboardWasRequested:
submitUserActivityBecameCurrent:withToken:
submitUserActivityWasContinuedInfo:
submitUserActivityWasDiscovered:
submitUserActivityWasSuggestedInfo:
submitWasSuggestedInfo
substringFromIndex:
substringToIndex:
substringWithRange:
suggestedActionType
superclass
supportNetworkPeers
supportsContinuityStreams
supportsSecureCoding
supressUntil
supressedUntil
suspendListeningForBluetooth
suspended
synchronize
systemHasSuspendedAdvertisements
systemHasSuspendedScanning
systemIdleDelayBeforeRemovingAdvertisements
systemIsIdle
systemPreferenceChangedToken
targetWithPid:
teamID
teamIdentifier
tellClientDebuggingEnabled:logFileHandle:
tellClientUserActivityItWasResumed:
terminate
terminateSession:
terminated
testPeerForModel:
time
timeIntervalForKey:default:
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timeOffset
timeRemaining
timerSource
timerWithTimeInterval:target:selector:userInfo:repeats:
title
tmpArchiveWriteFiles
totalBytesReceived
totalBytesSent
totalPacketCount
totalSendSize
totalTime
transferDuration
transferSpeed
triggerAll
triggerUserIdleDetermination
triggerUserIdleDetermination:
trimFirstBytes:ofData:
type
typeWithIdentifier:
types
typesToReceive
typesToSend
uaAdvertisableItemsInOrder
uaAdvertisableItemsInOrder:
uaBundle
uiLockStatusToken
unarchivedObjectOfClasses:fromData:error:
underlyingErrorCode
unionSet:
uniqueID
uniqueIdentifier
uniqueIdentifiers
unlockWithError:
unpackMessage:
unregisterCallback:
unsignedLongLongValue
update
updateAdvertisingPowerAssertion:
updateCarPlayScreenLayout:
updateFrequency:
updateFromSFAdvertisement:
updateItem:
updateMainScreenLayout:
updateScreenDimStateState:
updateScreenSaverActive:
updateState:
updateTimeUntilAssertionRelease:
updateUIDeviceLockedState:
updateUserActiveState:
usedStreams
userActive
userActivityAdvertisableItemByUUID:
userActivityAdvertisableItemsByUUID
userActivityClientForBundleIdentifier:
userActivityClientForPID:
userActivityClientForUUID:
userActivityClients
userActivityInfoForUUID:
userActivityItemsChanged
userActivityNotificationRef
userDefaults
userIdleInterval
userIdleRemovalDelay
userInactivePowerAssertion
userInfo
userIsCurrent
userIsCurrentIdleTracker
uuid
uuidItemMap
validKey
validUntil
value
valueForEntitlement:
valueForKey:
visibleUserActivityClients
waitUntilComplete
wantsBestAppChangedNotifications
wasContinuedBlock
wasContinuedInfo
wasResumed
wasResumedOnAnotherDeviceWithCompletionHandler:
watchdog
weAreAdvertisingAnItem
weAreAdvertisingAtLeastOneItem
webToNative
webpageURL
when
whitespaceAndNewlineCharacterSet
whitespaceCharacterSet
write:maxLength:
writeArchiveData:forItem:
writeBuffer
writeData:
writeData:error:
writeLocalPasteboardToFile:itemDir:extension:withCompletion:
writeLocalPasteboardToFile:itemDir:withCompletion:
writeMessage:tag:
writeRawData:
xpclistener
zone
0123456789abcdef
%c%c
com.apple.UserActivity.UniversalClipboard.Sent
clientWriteSize
clientWriteTime
clientWriteSpeed
usedStreams
streamOpenDelay
streamDataSize
streamTransferTime
streamTransferSpeed
totalTime
errorCode
PingNotifier
com.apple.ping
v16@?0@"NSError"8
PingNotifier: %ld outstanding PONG responses; %ld total pongs sent.
com.apple.private.coreservices.lsuseractivityd.bestappsuggestion
pasteboard-server
wasActive
 firstTime
Active
v8@?0
v24@?0Q8Q16
com.apple.private.handoff.ping
PING!
com.apple.private.handoff.pong
PONG!
%@: payloadSize=%ld
SimReceiver
%@:%@
UASimulatorReceiver: %@, %ld items %@
ACTIVE
supressionRec(%@ hard=%@ until=%@ (lastInterestingTime=%@)
(PID:%ld)
BestApp
bestApp
q24@?0@"UAUserActivityInfo"8@"UAUserActivityInfo"16
%@/%@ %@ %@ (and %lu more best app options)
%@/%ld:%@, next=%@/%lld
Diagnostic
com.apple.AppStore
signposts
-noDefaultHandlers
-sharingAdvertiser
-sharingScanner
-activityReceiver
-activityAdvertiser
-bestAppSuggestionNotifier
-userActivityClientProcessesController
-noSandbox
-loggingAdvertiser
-loopback
-enableNetworkUserActivity
-enableCoreSimulator
-disableEntitlmentChecking
-disableReconnectionNotification
-exitAfter
com.apple.useractivityd
Feb 10 2023
11:35:05
Logger
AppsActivityCreator
BestAppController
DarwinNotifier
PBClientController
PingController
com.apple.coreservices.useractivity.reconnection
%@%s
/System/Library/PrivateFrameworks/UserActivity.framework/
shared-pasteboard/
kLocalPasteboardBlobName
kRemotePasteboardBlobName
items/%@/
type-clone
archives
items
v16@?0@"NSURL"8
%@(%@ %@ browserFallback=%@ %ld/%.2fk/%.4f sec %@ %@ %lx w2n=%@ scs=%@)
ProductName
ProductVersion
ProductBuildVersion
UA Test Peer
com.apple.homebuttonless-iphone
com.apple.homebuttonless-ipad
com.apple.ipod
v32@?0@"UTType"8Q16^B24
com.apple.ipod-touch
public.device
/System/Library/CoreServices/SystemVersion.plist
UAReceiverScanTypeUserActivity
UAReceiverScanTypeClipboard
UAReceiverScanTypeBoosted
%s: %@
suspended
resumed
(was already terminated)
%@: %@
com.apple.UserActivity.Handoff.BecameCurrent
activityType
bundleIdentifier
UC Stream Watchdog
error
uuid
public.file-url
data
Invalid message header
packetNum
totalNum
totalSize
supportsCompression
UCHB
numFiles
com.apple.security.sandbox-extension-dict
v16@?0q8
streamStart
streamWaiting
streamSendingRequest
streamWaitingResponse
streamHandleRequest
streamSendingResponse
streamSendingMultiResponse
streamHandleResponse
streamDone
ucStreamState:%d
tagStop
tagFeatureRequest
tagFeatureResponse
tagPasteboardInfoRequest
tagPasteboardInfoResponse
tagPasteboardDataRequest
tagPasteboardDataResponse
tagPasteboardFileRequest
tagPasteoboardFileResponse
tagPasteboardAuxInfo
tagHeartbeat
tag:%d
AAAAAAAA-BBBB-CCCC-DDDD-EEEEEEEEEEEE
EEEEEEEE-DDDD-CCCC-BBBB-AAAAAAAAAAAA
com.apple.UserActivity.UniversalClipboard.Unavailable
reason
SimAdvertiser
### UASimulatorAdvertiser:
ReplayCreator
ReplayController: ITEM=%@
com.apple.UserActivity.UniversalClipboard.Requested
payloadSize
transferTime
transferSpeed
streamOpenTime
cancelled
underlyingErrorCode
numberOfItems
isFileCopy
isAsyncTransfer
remoteDeviceType
Unknown
cornerActionManagerQ
idleDetermination
updateAdvertisedItems
SuspendAdvertisingIdleTracker
v12@?0B8
q24@?0@"UAClientController"8@"UAClientController"16
because the item contains an unsynchronized cloud document item.
dimmed 
uilock 
alwaysPick 
(activityAdvertisingAllowed = NO) 
(disabled in System Preferences) 
v20@?0@"NSObject"8B16
com.apple.screensaver.didstart
com.apple.screensaver.didstop
com.apple.language.changed
v12@?0i8
com.apple.backboardd.backlight.changed
userInactivePowerAssertion
SCREEN: %s
DIMMED
active
screenDimmedPowerAssertion
DEVICELOCK: %s
LOCKED
unlocked
deviceUILockAssertion
kLSUserActivityDebuggingInfoCurrentAdvertisedItem
kLSUserActivityDebuggingInfoLastAdvertisedBytes
kLSUserActivityDebuggingInfoAdvertising
Dynamic User Activities: (domain=%@) %@
Manager status: pid=%lld, uid=%lld, uptime=%@ %@ (Version %s, built %s %s %s)
11:35:53
q24@?0@"UAAdvertiser"8@"UAAdvertiser"16
ADVERTISING:
*** No UAAdvertisers defined at present, so no advertising is taking place.
RECEIVING:
No UAReceivers defined at present, so no activities will be received.
Manager status: pid=%lld, uid=%lld, uptime=%@ %@ runtime=%@ (Version %s, built %s %s %s)
### ADVERTISERS (%ld total) %@ nextCheck=%@
(SUSPENDED)
### RECEIVERS (%ld total)
### AdvertiseableItems ( that might be broadcast to other machines/remind me later)
UAUserActivityAdvertiserHasMoreActivities
- %@%@%@
(advertised) 
(more items available) 
CornerActionItems (potential items to appear on this device as resumable from other devices)
- %@
Pinned Activity Info
### NOTIFIERS (%ld total) nextCheck=%@
### HANDLERS: (%ld total)
Idle determination:%s suspended=%s%s%s%s pick=%ld/%@ idle=%ld/%@ bestApp=%ld/%@
 userIdle
 dimmed:YES
 locked:YES
PERF:%@
 - %@
NSTemporaryDirectory=%@
PROJECT:UserActivity-
v24@?0@"NSString"8^B16
com.apple.UserActivity.Handoff.WasContinued
suggestedActionType
transferDurationSec
canceled
broweserFallback
webToNative
supportsContinuityStreams
interactionType
unknown
command-tab
dock
notification-center
lock-screen
multi-tasker
proxy-object
spotlight
com.apple.useractivity.remotegenerationresponse
pasteboard-fetch
Info Requested
Info Received
Data Requested
Data Received
Error
Canceled
v24@?0@"NSData"8@"NSError"16
v24@?0@"UASharedPasteboardInfo"8@"NSError"16
pasteboard-server-remote-gen
com.apple.coreservices.uauseractivitypasteboardclient.xpc
com.apple.private.coreservices.useractivityd.sharedpasteboard
com.apple.coreservices.uasharedpboardclientq
/System/Library/PrivateFrameworks/UserActivity.framework
com.apple.continuitypasteboard
UASharedPasteboard
v24@?0@"NSInputStream"8@"NSOutputStream"16
v24@?0@"UASharedPasteboardInfoWrapper"8@"NSError"16
v32@?0@"<UCStreamCoder>"8Q16@"NSError"24
v32@?0@"NSInputStream"8@"NSOutputStream"16@"NSError"24
main-label.title
Localizable
main-label.default-title
cancel-button.title
com.apple.UserActivity.UASharedPasteboardiOSUI
##### Screen Sharing session in progress, Universal Clipboard is disabled: %lu #####
##### Continuity Pasteboard: Remote Pasteboard:%@, Local generation=%ld, %@reflection:%@
Available
Unavailable
SCREENSHARING 
  %@
Item: %@ "%@"
file
clipboardReadStream
clipboardWriteStream
PingCreator
PingCreator:%@
%@.%@
FrameworkBundleID
AssertType
PreventUserIdleSystemSleep
AssertName
TimeoutSeconds
TimeoutAction
TimeoutActionTurnOff
-[UATimedPowerAssertions updateTimeUntilAssertionRelease:]
PowerAssertions:
 %@{%@/%@}
ACTIVE:
UATimedPowerAssertionsMapTableQueue
UATimedPowerAssertionsTimerQueue
SimCreator
(sim-rebroadcasted-item):%@ %@ %@
(inactive) 
com.apple.UserActivity.Handoff.WasSuggested
UCFilePackagerReadQ
Replay
ReplayAdvertiser
ReplayReceiver
iPhone5,1
Mac OS X
14A100
PEER
Orangeish
Greenish
BROADCAST $%@ %@
http://
HELP
COMMANDS: ...
 - ADVERTISEITEM:<tag> <activitytype> [<archivedUserActivityData>]
HANDOFF
VERSION
STARTUP
TERMINATE
ADVERTISEITEM
PAYLOAD
PULL
REMOVEITEM
PEERINFO
SF[$
RECEIVE
BROADCAST
REQUESTPAYLOAD
RETURNPAYLOADERROR $%@ %@
RETURNPAYLOAD $%@ [$%@]
v32@?0@"NSUUID"8@"NSData"16@"NSError"24
RETURNPAYLOAD
REQUESTPAYLOAD $%@
0123456789abcdefABCDEF$
0123456789abcdefABCDEF-
strings
Localization
PairedAdvertiser
dummy_account@me.com
simulator
iOSSimulator1,1
iOSSimulator
14A101
iOS Simulator
com.apple.coreservices.lsuseractivity.simulatorsupport
(ERROR %d/%s for simulator %@
com.apple.UserActivity.UniversalClipboard.TypesRequested
ActivityAdvertisingAllowed
ActivityReceivingAllowed
ClipboardSharingEnabled
MultiHandoffEnabled
UserIdleInterval
UserIdleRemovalDelay
MinimumTimeForAnAdvertisementToLive
MinimumTimeToLiveAfterRemovingAdvertisement
RecentlyEligibleItemInterval
LastActiveItemRemovalDelay
ScreenSaverRemovalDelay
ScreenSaverPasteboardAdvertisementDelay
ScreenDimRemovalDelay
ScreenDimPasteboardAdvertisementDelay
DeviceLockAdvertisementDelay
DeviceLockPasteboardAdvertisementDelay
CornerItemSupressionInternal
BestAppSuggestionSupressionIntervalForUnchangingItem
AdvertisedItemWhichIsWebBrowserIntervalToRememberEarlierActivities
IntervalToAskClientWithUnsynchronizedDocumentsToUpdate
MaximumTimeoutAfterAdvertisingEndsThatActivityCanBeResumed
CornerItemTimeout
UACornerActionItemAdditionalTimeToLiveAfterValidIntervalExpires
UACornerActionItemMaximumTimeForBTLEItemToLive
UAReceivedBTLEItemTimeToLiveAfterDeviceLostIfPayloadIsQueued
ActivePayloadUpdateInterval
MaximumTimeoutToWaitForClientProcessToUpdateActivityInformation
MaximumActivityPayloadSizeInBytes
ActivityPayloadWarningSizeInBytes
MinimumIntervalBetweenAdvertisements
MaximumAdvertisementsPerTimeInterval
MaximumAdvertisementsTimeInterval
EnableHandoffInPowerSaverMode
ActivityBTLESharingEnabled
LoggingAdvertiserEnabled
UASharedPboardLocalAdvertisementTime
UASharedPboardLocalClearedAdvertisementTime
UASharedPboardRemoteAvailableTimeout
UASharedPboardLocalReflection
UASharedPboardEmbeddedPayloadSizeLimitInBytes
UASharedPboardShowUIDelayInSec
UASharedPboardUIMinimumDurrationInSec
UASharedPboardHideUIDelayInSec
PayloadFetchResponseDelay
TypeRequestTimeout
PasteRequestTimeout
PasteboardStreamWatchdogTimeout
HandoffRequestTimeout
TimeRemainingDelay
IgnoreLostDevice
IgnoreBluetoothDisabled
DEBUGValidatePayloadFetchTimeInterval
DEBUGValidateRetryPayloadFetchFailureInterval
DEBUGValidateSampleResponseMinimumActivityPayloadSizeInBytes
DEBUGValidateSampleResponseMaximumActivityPayloadSizeInBytes
DEBUGAdditionalPayloadReceiveTimeInterval
DEBUGUserActivityTimeOffset
DEBUGForceNewPayloadEncoder
DEBUGForceOldPayloadEncoder
DEBUGDontSendActivityTitle
DEBUGReadvertiseImmediately
DEBUGEnablePinging
DEBUGEnablePrefetch
DEBUGCrossoverAllActivities
DEBUGIgnoreAppsUsedForDevelopment
EnableDebugging
EnableDebugLogFile
EnableSharingFramework
EnableNetworkControlListener
EnableAutomaticRendevousPairing
NetworkControlListenerPort
UserIdleRemoveDelay
SystemIdleRemovalDelay
RendevousPairingType
 %@=%@ (%@)
 %@=%@
Defaults: (domain=%@) %@
com.apple.system.lowpowermode
LocalReceiver
LocalItems:%@
_UALOGGINGCATEGORY
main
com.apple.useractivity
UAUserActivity
:com.apple.
com.apple.
_UAUSERACTIVITYCREATION
com.apple.coreservices.lsuseractivitymanager.xpc
_UAUSERACTIVITYBESTAPP
com.apple.coreservices.lsbestappsuggestionmanager.xpc
_UAUSERACTIVITYPASTEBOARD
com.apple.coreservices.uasharedpasteboardmanager.xpc
_UAUSERACTIVITYPASTEBOARDAUX
com.apple.coreservices.uasharedpasteboardaux.xpc
com.apple.coreservices.uasharedpasteboardcontroll.xpc
Logging
%@/Logs/Handoff/
%@/UALoggingAdvertiserItems.log
Advertisable:%@
ITEM:%@ %@ [0x%@]
ActivityLogger: Logging to %@.
UALoggingAdvertiser: ADVERTISING RESUMED.
UALoggingAdvertiser: ADVERTISING SUSPENDED.
(%@, %@)
layoutUpdate
v16@?0@"NSDictionary"8
v32@?0@"FBSDisplayLayoutMonitor"8@"FBSDisplayLayout"16@"FBSDisplayLayoutTransitionContext"24
q24@?0@8@16
com.apple.lock-screen
LSLivePastProcessExit
 and possibly change advertisement.
APP:%@, %@ %s
(update)
APP:- %s
APP:- (was %@) %s
com.apple.coreservices.ping
options.%@
##### Client processes: %ld clients
 Layout:
 car:
main:
q24@?0@"UAUserActivityClientProcess"8@"UAUserActivityClientProcess"16
 - %s%@
FRONT 
v32@?0@"NSString"8Q16^B24
 Order:{
%@/%@ 
pbpaste
pbpaste2
pbtypes
userActivityBTStatus
v32@?0@"NSObject"8@?<v@?@"NSObject"B>16^B24
bluetoothStatusQ
com.apple.UserActivity.baseEvent
 => 
0000000000
teamID
type
BTLEUserActivityDataEncoding: userInfo=%@ %@%@%@%@
stream=%@
webPageURL=<private>
 {teamID=%@ activityType=%@}
additional=%@
SharingReceiver
SharingReceiverPeriodic
SCANNING:%s%s%s%s
userActivity 
clipboard 
 SUSPENDED
SCANNING:Found device %@ %@%s
 defaultPaired
v16@?0@"NSTimer"8
SCANNING:Lost device %@ %@%s
v24@?0^v8^{__CFError=}16
v20@?0C8^v12
-[UASharingReceiver receiveAdvertisement:scanner:]
UASharingReceiver.m
advertisement
advertisement.device
iPhone
iPad
UAPasteboardAvailable
UAPasteboardVersionBit
SCANNING:Received %@ %@ %@ from %@/%@
SCANNING:Received %@ (no match) from %@/%@
handoff-more_items
SharingBTLE receiver %s%s%@%@ %@%@
SUSPENDED
DISABLED
 Clip
(NO SFActivityScanner) 
 (Bluetooth disabled)
%ld scanners
 - %@%@%@ app:%@ %@ data=%@, from %@ at %@ remove at %@%s%s
 (PayloadReq)
 (PayloadAv)
 ActiveDevices:
, pb
(%@,%@%@)
PBDONE
Invalid delimiter before pbinfo
Invalid delimiter before pb data
com.apple.private.canmodifyanyuseractivity
NOTIFICATION#
UAUserActivityItemIsNotActiveKey
com.apple.GameController
persistentID
BTLEItem:%@ %@%@ id=%@ when=%@ %@device="%@" modelCode=%@ deviceType=%@
%s%s%s%s/%lx
 webPage
 cloud
 autopull
remove:%@ 
 options=%@
 payload=$%@
 payloadRequested
 payload NA
UASharingBTLEItem:%@ %@/%@ %@
Last BTLE payload fetched for item %@, at %@, from %@
useractivity-team-identifier
com.apple.developer.team-identifier
application-identifier
UAProxiedBundleIdentifier
%@ { type = %@; uuid = %@;  activityType = "%@"; userInfo = %@; %@%@ %@ eligible=%@}
 webPageURL=<private>
 referrerURL=<private>
!eligibleForHandoff
%@ %@ %@ .userInfo=%@ payloads=%ld
%@%@%@ %@ %@%@%@%s%s%s %@%@%@
 dirty*
 !handOff
 AlwaysPickPriority=%li 
 cloudDoc
 unSynchCloudDoc
 fileProv
 url=%@
url=<private>
 referrer=%@
referrer=<private>
com.apple.UserActivity.UniversalClipboard.Available
com.apple.UserActivity.Handoff.WasDiscovered
fakeAppleID@apple.com
version
payload
options
device
MockAdvertisement($%@/%@ from %@)
com.apple.private.coreservices.lsuseractivityd.LSAlwaysPick
com.apple.private.coreservices.canopenactivity
com.apple.private.coreservices.cangetcurrentactivityinfo
com.apple.private.coreservices.canalwaysadvertise
com.apple.private.coreservices.alwaysEligibleEvenWhenInBackground
com.apple.private.coreservices.allowedToMatchUserActivities
com.apple.private.coreserivces.allowedToMatchUserActivities
Application
com.apple.coreservices.useractivity.client-connection
com.apple.security.app-sandbox
com.apple.application-identifier
UAUserActivityDebugStateChanged
com.apple.coreservices.useractivityd
ActivityAdvertising
Allow process to update handoff payload
v28@?0@"UAUserActivityInfo"8B16@"NSError"20
v32@?0@"UAUserActivityClientPendingUpdateTask"8Q16^B24
UserActivityClient(pid=%d/%@ uuids=%@)
CFBundleIdentifier
com.apple.private.useractivity.allowedtosetbundleidentifier
%@:%@:%@
entitlement
stream=%@ 
NULL
(already current)
, and updating advertisment.
private
 iCloudDoc
 unSynchronizediCloudDoc
%@ pid=%d currentActive=%@%@%@%@
(dirty) 
proxyAs=%@ 
 lastFront=%@
%@%s 
 (dirty)
ReplayRendevousHandler
_handoff._tcp.
local
Network, %@  %@
listening, port=%ld
browsing for %@ in %@
Handoff:%@
NSNetServicesErrorDomain
NSNetServicesErrorCode
From %@
From host
__kCFStreamPropertyPeerAddress
HANDOFF v%g %@
PEERINFO SF[$%@]
VERSION v%g %@
# Terminating connection because we seem to already have a connection to this peer.
TERMINATE
NetworkReplay:%@%@ peer:%@/%@ %@
TERMINATED
%@/%ld
%@..(%ld)..%@
.. %ld ..
forever
%ld seconds
roughly %ld minutes
roughly %ld hours
roughly %ld days
a long time
%2.1g seconds
%2ld seconds
%3ld seconds
roughly %2ld minutes
roughly %2ld hours
UserActivity
NotificationType
HardCodedType 
HeroApp 
OpenURL 
UASuggestedActionType=%ld
NSUserActivityTypeBrowsingWeb
https:
com.apple.mobilesafari
pasteboard-streams
com.apple.finder.noderef
v24@?0Q8@"NSError"16
-[SharingBTLEAdvertisementPayload initWithType:string:dynamicType:teamID:webpageURL:options:isCurrent:when:versionFlags:]
SharingAdvertisementPayload.mm
[hashedActivityType length] == sizeof( _bytes.hashedAdvertisementBytes )
-[SharingBTLEAdvertisementPayload setPayloadBytes:]
[payloadBytes length] == sizeof( sizeof( _bytes.hashedAdvertisementBytes ) )
$%@/%@%d%@%@%s%s%s
 pb-1
 pb-0
%@#%@
NOTIFICATION
http
https
UASharedPasteboardInfoWrapperPBInfoKey
UASharedPasteboardInfoWrapperExtraDataKey
UASharedPasteboardInfoWrapperExtraTypeKey
UASharedPasteboardInfoWrapperErrorKey
UASharedPasteboardInfoWrapperProtocolVersionKey
%@: Extra Data Type: %ld, Error: %@, PBInfo: %@
<private>
{?=[8I]}
[pid=%d/%d uid=%d/%d gid=%d/%d asid=%d sb=%@]
<%@ %p> %@
SharingAdvertiser
UASharingAdvertiser
sharingUpdate
advertisingPeriodic
AdvertiserCurrent
BTLEAdvertisement
 FORCE
FORCE
ADVERTISING:%@ %@ %@/ %@
ADVERTISING:- (was %@/%@)%s
%ld%c%ld
iPhone OS
macOS
OS X
v24@?0@"NSSet"8@"NSError"16
Handoff
Pasteboard
PAIRED_DEVICES:Changed, now have %ld devices paired.
PAYLOAD_REQUESTED:%@, %@ from %@
com.apple.fetchsamplepayload
randomdata
Sample
NO-TEAM-ID
com.apple.fetchsamplepayloadactivity
EncodedPayloadSize
Sharing.framework Advertiser:
(No SFActivityAdvertiser) 
 ** Bluetooth is disabled but IgnoreBluetoothDisabled is set, so the activity will be advertised. **
 ** Bluetooth is disabled so no activity will be advertised. **
 ** LowPowerMode is enabled so no activity will be advertised. **
 ** Activity advertising is disabled on this device. **
** SUSPENDED:
%ld sfActivityAdvertisers
, run=%ld times/%@ periodic=%ld/%@ %@%@%@
(current) 
+ Advertising Local Pasteboard.
ClipboardSharingDisabled
 ADVERTISING: %@%@ %@ /, data=%@, at %@
 LAST:%@, at %@
 LAST: nil
 No AppleID, %@
 AppleID:%@, devices%s%s:
(no handoff)
(no pasteboard)
v24@?0@"NSString"8@"NSError"16
%@/%@-%@-%@:+%ld, 
[%@/%@-%@-%@], 
%@%@
%@/%@/%@/%@ 
Watch OS
watchOS
TVOS
tvOS
SimController
simQ
IN FRONT
not in front
 - SIMULATOR:%@
com.apple.private.coreservices.lsuseractivityd.admininterface
com.apple.private.useractivity.sysdiagnose
STARTING pid=%d
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
EnableLogging
en_US
HH:MM:ss.SSSS
%@ %@
(user=%.5gs/system=%.5gs)
com.apple.Preferences
sharing
screensaver
screendim
useractive
best
v24@?0@"UAUserActivityInfo"8^B16
status
simulatorStatus
This platform does not support the iOS simulator.
recentEligible
Client: %@ %@
Command %@ not recognized
clear
### STATUS
### RECENT ACTIONS ###
ReplayManager
%.1f seconds %s
from now
%ld seconds %s
%ld minutes %s
at %2.2ld:%2.2ld
(nil)
%4.1f seconds
%2ld minutes
%2.3f hours
%2ld days, %ld hours
%5ld days
UARemotePasteboardDidSendLocalEvent
UAPingNotifier
UABestAppSuggestionController
NSXPCListenerDelegate
NSObject
UASharedPasteboardFileProvider
NSFileProvider
PowerManagerIdleTracker
UAPingUserActivityInfo
UASimulatorReceiver
UADiagnosticUtils
UAActivityReplayAdvertiser
UAUserActivityAnalyticsInfo
UABestAppUserActivityInfoSuppressionRecord
UABestAppSuggestionNotifier
UABestAppSuggestionManagerProtocol
UASharedPasteboardDataManager
_LSUserActivityWasContinuedInfo
UAActivityReplayReceiver
UAUserActivityAdditions
UAReceiver
UACornerActionManagerHandler
UALocalCornerActionItem
UAActivityBecameCurrentEvent
UCStreamCoderV2
UAStreamHandlerDelegate
UCFilePacketReceiver
UCStreamCoder
UADebugAdvertisableItem
UADispatchWatchdog
UARemotePasteboardBecameUnavailableEvent
UASimulatorAdvertiser
UAReplayClientController
UARemotePasteboardWasRequestedEvent
UACornerActionManager
UACornerActionManagerDebugInterface
UAPingController
UAClientController
UAActivityWasContinuedEvent
UADispatchScheduler
UAActivityNotifier
UAActivityNotifierProtocol
UCRemotePasteboardGeneration
UAPasteboardClientProtocol
UASharedPasteboardClientController
UASharedPasteboardManagerProtocol
SFCompanionAdvertiserDelegate
UASharedPasteboardAUXProtocol
UASharedPasteboardControllProtocol
UAStreamHandler
NSStreamDelegate
UAPingClient
UATimedPowerAssertions
UCExtractor
UASimulatorAdvertisementCreator
UAActivityWasSuggestedEvent
UCFilePackagerPacket
UCFilePackager
UAActivityReplay
NSNetServiceDelegate
SFActivityAdvertiserDelegate
SFActivityScannerDelegate
UALocalizedString
UAPairedSFActivityAdvertiser
UAPairedSFActivityScanner
UASimulatorController
UAPeerDevice
UARemotePasteboardTypeInfoRequestedEvent
UAUserActivityDefaults
UALocalItemReceiver
UADiagnosticManager
UAUserActivityClientProtocol
UAUserActivityClientResponseProtocol
UABestAppSuggestionManagerResponseProtocol
UASharedPasteboardManagerResponseProtocol
UALoggingAdvertiser
UABestAppSuggestionDarwinNotifier
FBSDisplayLayoutElement
FBSUIApplicationLayoutElement
SBSDisplayLayoutElement
UAUserActivityClientProcessesController
UASharedPasteboardDataRequester
UABluetoothStatus
UAAnalyticsEvent
UserActivityToBTLEPayload
UASharingReceiver
UASharedPasteboardInputStreamManager
SharingBTLESuggestedItem
UASharedPasteboardActivityInfo
UASharedPasteboardOutputStreamManager
UAUserActivityAdvertisableItem
UAAdvertisableItem
UARemotePasteboardBecameAvailableEvent
UAActivityWasDiscoveredEvent
UAMockActivityAdvertiser
UAMockActivityScanner
UAMockActivityAdvertisement
NSSecureCoding
NSCoding
UAUserActivityClientPendingUpdateTask
UAUserActivityClientProcess
UANetworkReplayRendevousHandler
NSNetServiceBrowserDelegate
UANetworkReplayController
UCArchiver
UAPBStreamCoderV1
SharingBTLEAdvertisementPayload
NSCopying
UASharedPasteboardInfoWrapper
UASimulatorSuggestedItem
UAAuditToken
UASharingAdvertiser
UASimulator
UAReplayAdvertisableItem
UADispatchReceiver
ActivityManagerDebugRecentActionItem
ActivityManagerDebuggingManager
UAResumableActivitiesAdministrativeProtocol
UAResumableActivitiesSysdiagnoseSupportProtocol
UAAdvertiser
@16@0:8
Q16@0:8
v24@0:8Q16
B16@0:8
v20@0:8B16
q16@0:8
v24@0:8q16
@24@0:8@16
v24@0:8@16
v16@0:8
@"NSMutableSet"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@32@0:8@16@24
@"NSXPCListener"
v32@0:8@16@?24
v40@0:8@16@24@?32
v32@0:8@16@24
v40@0:8@16@24@32
v32@0:8@"NSURL"16@?<v@?@"NSError">24
@"NSURL"16@0:8
@"NSOperationQueue"16@0:8
v40@0:8@"NSURL"16@24@?<v@?@"NSError">32
v40@0:8@"NSURL"16@"NSFileProvidingInfo"24@?<v@?@"NSFileProvidingResponse">32
v32@0:8@"NSURL"16@24
@"NSURL"24@0:8@"NSURL"16
v32@0:8@"NSURL"16@?<v@?@"NSURL">24
v32@0:8@16@"NSURL"24
v32@0:8@"NSURL"16@"NSFileProviderPresenterInfo"24
v40@0:8@"NSURL"16@24@"NSURL"32
v40@0:8@"NSURL"16@"NSURL"24@?<v@?B>32
@"NSOperationQueue"
@"NSURL"
@"NSMutableDictionary"
@48@0:8@16@24d32@?40
Q32@0:8@16d24
d16@0:8
v24@0:8d16
@?16@0:8
v24@0:8@?16
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"NSDate"
@24@0:8Q16
B20@0:8B16
@"UASimulator"
@"NSArray"
Q24@0:8Q16
@"UAUserActivityInfo"
@"NSUUID"
@"NSError"
v32@0:8q16@?24
v36@0:8@16Q24B32
v24@0:8@?<v@?@"NSArray"@"NSDate"d>16
v32@0:8q16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSUUID"16@"NSDictionary"24
v32@0:8@"NSUUID"16@?<v@?@"NSError">24
v36@0:8@"NSUUID"16Q24B32
v24@0:8@?<v@?B>16
@"NSXPCConnection"
@"UADispatchScheduler"
@"NSSet"
@"UACornerActionManager"
@48@0:8@16Q24@32@40
@"UAUserActivityClientProcess"
v40@0:8@16@24q32
v32@0:8@16q24
v40@0:8@"UAStreamHandler"16@"NSData"24q32
v32@0:8@"UAStreamHandler"16q24
v32@0:8@"UAStreamHandler"16@"NSError"24
v32@0:8@"UAStreamHandler"16@"NSData"24
v24@0:8@"UAStreamHandler"16
v40@0:8@"UCFilePackager"16@"NSData"24q32
v24@0:8@"NSError"16
v52@0:8@16@24@?32@?40B48
v52@0:8@"NSFileHandle"16@"NSProgress"24@?<v@?@"UASharedPasteboardInfoWrapper"@"NSError">32@?<v@?@"<UCStreamCoder>"Q@"NSError">40B48
v32@0:8@"UASharedPasteboardInfoWrapper"16@?<v@?@"<UCStreamCoder>"Q@"NSError">24
@"UAStreamHandler"
@"NSDictionary"
@"NSMutableArray"
@"UADispatchWatchdog"
@"NSObject<OS_dispatch_source>"
@"UASharedPasteboardInfoWrapper"
@"NSFileHandle"
@"NSProgress"
@"NSObject<OS_dispatch_semaphore>"
@"UCFilePackager"
@32@0:8Q16@24
@40@0:8@16d24@?32
@20@0:8B16
B24@0:8d16
i16@0:8
v20@0:8i16
I16@0:8
v20@0:8I16
@"NSObject<OS_dispatch_group>"
@"NSUserDefaults"
@"ActivityManagerDebuggingManager"
@"UASharedPasteboardClientController"
@"UAPingController"
@"UATimedPowerAssertions"
@"PowerManagerIdleTracker"
@"NSTimer"
@"UABluetoothStatus"
@"NSObject"
@"UAPingClient"
@"UAPingNotifier"
@24@0:8d16
d24@0:8@16
@"UAUserActivityAnalyticsInfo"
@48@0:8@16d24@32@?40
@32@0:8@"UACornerActionManager"16@"NSString"24
@"NSSet"16@0:8
v24@0:8@"NSSet"16
@"UASharedPasteboardDataRequester"
@"UASharedPasteboardInfo"
v24@0:8@?<v@?>16
v32@0:8@16Q24
v28@0:8i16@?20
v24@0:8@?<v@?@"NSString">16
v32@0:8@"UASharedPasteboardInfo"16Q24
v28@0:8i16@?<v@?@"UASharedPasteboardInfo"@"NSError">20
v40@0:8@"SFCompanionAdvertiser"16@"NSInputStream"24@"NSOutputStream"32
v28@0:8B16@20
v40@0:8@16q24@?32
^{__CFUserNotification=}16@0:8
v24@0:8^{__CFUserNotification=}16
@"SFCompanionAdvertiser"
@"UCRemotePasteboardGeneration"
@"UASharedPasteboardOutputStreamManager"
@"UASharedPasteboardInputStreamManager"
@"NSMutableSet<UCStreamCoder>"
^{__CFUserNotification=}
@"UARemotePasteboardWasRequestedEvent"
@"UARemotePasteboardDidSendLocalEvent"
@"NSBundle"
v32@0:8@"NSStream"16Q24
@40@0:8@16@24@32
B32@0:8@16q24
@"NSInputStream"
@"NSOutputStream"
@"<UAStreamHandlerDelegate>"
@"NSMutableData"
@"NSData"
@56@0:8@16d24@32@40@?48
@40@0:8@16d24@32
@56@0:8@16q24q32@40@48
@"<UCFilePacketReceiver>"
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
v56@0:8@16@24@32@40@?48
v48@0:8@16@24@32@40
v56@0:8@"SFActivityAdvertiser"16@"NSData"24@"NSString"32@"SFPeerDevice"40@?<v@?@"NSUUID"@"NSData"@"NSError">48
v32@0:8@"SFActivityAdvertiser"16@"NSSet"24
v48@0:8@"SFActivityAdvertiser"16@"NSUUID"24@"SFPeerDevice"32@"NSError"40
v32@0:8@"SFActivityScanner"16@"SFActivityAdvertisement"24
v32@0:8@"SFActivityScanner"16@"SFPeerDevice"24
v32@0:8@"SFActivityScanner"16@"NSSet"24
B32@0:8@16@?24
v56@0:8@16@24@32Q40@?48
@"SFPeerDevice"
@"UAActivityReplayAdvertiser"
@"UAActivityReplayReceiver"
@"UAReplayClientController"
@"UAMockActivityAdvertiser"
@"UAMockActivityScanner"
v48@0:8@16@24@32@?40
@"UAPairedSFActivityScanner"
@"<SFActivityAdvertiserDelegate>"
@"UAPairedSFActivityAdvertiser"
@"<SFActivityScannerDelegate>"
@20@0:8I16
v28@0:8I16@20
B28@0:8@16B24
q32@0:8@16q24
d32@0:8@16d24
@"UAUserActivityClientProcessesController"
v32@0:8@16r^{?=[8I]}24
Q32@0:8Q16Q24
v40@0:8q16@24@?32
v36@0:8@16B24@?28
v28@0:8@16B24
v52@0:8@16B24@28@36B44B48
v36@0:8i16@20@?28
v40@0:8q16@"NSDictionary"24@?<v@?q@"NSDictionary"@"NSError">32
v32@0:8@"NSUUID"16@?<v@?@"UAUserActivityInfo"@"NSError">24
v36@0:8@"UAUserActivityInfo"16B24@?<v@?@"NSError">28
v28@0:8@"NSUUID"16B24
v24@0:8@"NSUUID"16
v32@0:8@"NSString"16@"NSString"24
v52@0:8@"NSUUID"16B24@"NSURL"28@"NSDate"36B44B48
v32@0:8@"UAUserActivityInfo"16@?<v@?@"NSUUID"@"NSError">24
v24@0:8@?<v@?@"NSUUID"@"NSString"@"NSString"@"NSString"@"NSError">16
v32@0:8@"NSUUID"16@?<v@?B@"NSString"i@"NSString"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?@"NSFileHandle"@"NSError">32
v36@0:8i16@"NSDictionary"20@?<v@?@"NSError">28
v32@0:8@"NSUUID"16@?<v@?@"UAUserActivityInfo"B@"NSError">24
v28@0:8B16@"NSFileHandle"20
v40@0:8@16@24d32
v40@0:8@"NSArray"16@"NSDate"24d32
v48@0:8@"NSFileHandle"16@"NSURL"24@"NSData"32@?<v@?@"UASharedPasteboardInfo"@"NSError">40
v40@0:8@"NSFileHandle"16@"NSURL"24@?<v@?@"UASharedPasteboardInfo"@"NSError">32
B20@0:8i16
v36@0:8i16@20[1{__va_list_tag=II^v^v}]28
v28@0:8i16@20
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@20@0:8i16
B28@0:8@16i24
@"FBSDisplayLayoutMonitor"
@"BKSApplicationStateMonitor"
@"UALocalItemReceiver"
@"SFActivityScanner"
^{BTSessionImpl=}16@0:8
^{BTLocalDeviceImpl=}16@0:8
@24@0:8@?16
v32@0:8^{BTSessionImpl=}16i24i28
v24@0:8^{BTSessionImpl=}16
v32@0:8^{BTLocalDeviceImpl=}16i24i28
^{BTSessionImpl=}
^{BTLocalDeviceImpl=}
@64@0:8@16@24@32@40@48@56
v44@0:8@16@24@32B40
@44@0:8@16I24@28@36
@60@0:8@16@24@32I40@44@52
@108@0:8@16@24@32I40Q44@52@60@68@76@84@92@100
@100@0:8@16@24@32I40Q44@52@60@68@76@84@92
B24@0:8@?16
@"SharingBTLEAdvertisementPayload"
@"UASharingReceiver"
^B16@0:8
v24@0:8^B16
B28@0:8B16@?20
@"UAActivityReplay"
v56@0:8@16@24@32q40@?48
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B36@0:8@16B24@?28
C16@0:8
v20@0:8C16
@"UAAuditToken"
@"UAUserActivityAdvertisableItem"
@"NSObject<OS_os_transaction>"
v36@0:8@16@24B32
v24@0:8@"NSNetServiceBrowser"16
v32@0:8@"NSNetServiceBrowser"16@"NSDictionary"24
v36@0:8@"NSNetServiceBrowser"16@"NSString"24B32
v36@0:8@"NSNetServiceBrowser"16@"NSNetService"24B32
B36@0:8@16i24@28
@"NSNetServiceBrowser"
@"NSNetService"
B40@0:8@16@24q32
@48@0:8@16@24@32@40
@24@0:8^{_NSZone=}16
@40@0:8@16B24@28C36
@36@0:8@16B24@28
@80@0:8Q16@24@32@40@48@56B64@68C76
@76@0:8Q16@24@32@40@48@56B64@68
B20@0:8C16
{?="hashedAdvertisementBytes"[7C]"optionBits"C"timeOffset"C}
@48@0:8{?=[8I]}16
v24@0:8^v16
r*16@0:8
{?=[8I]}16@0:8
{?="val"[8I]}
B36@0:8@16B24@28
@40@0:8@16I24i28Q32
@"UASimulatorController"
@"UASimulatorAdvertiser"
@"UASimulatorReceiver"
@"UASimulatorAdvertisementCreator"
@36@0:8q16d24B32
v32@0:8Q16@?24
v88@0:8@16Q24@32@40@48@56@64d72d80
v28@0:8B16@?20
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
v32@0:8@"NSString"16@24
v32@0:8@"NSString"16@?<v@?@"NSUUID">24
v24@0:8@?<v@?@"NSUUID">16
v32@0:8Q16@?<v@?@"NSArray">24
v24@0:8@?<v@?@"NSArray">16
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary">24
v32@0:8@"NSDictionary"16@?<v@?@"NSArray">24
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?@"NSString">32
v32@0:8@"NSDictionary"16@?<v@?@"NSString">24
v88@0:8@"NSUUID"16Q24@"NSString"32@"NSString"40@"NSData"48@"NSString"56@"NSString"64d72d80
v28@0:8B16@?<v@?@"NSDictionary"@"NSError">20
v32@0:8@"NSString"16@"NSData"24
v32@0:8@"NSString"16q24
v36@0:8@"NSString"16@"NSString"24B32
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSData"@"NSDate"@"NSUUID"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSArray"@"NSArray"@"NSError">24
v28@0:8B16@?<v@?@"NSArray">20
{timeval=qi}16@0:8
@"SharingBTLESuggestedItem"
@"UANetworkReplayRendevousHandler"
{timeval="tv_sec"q"tv_usec"i}
PING: Received payload for PING; creating PONG response. error=%{public}@
PING: Removing pong item %{public}@/%{private}@ because it was continued 
BESTAPP: Created controller to handle connections to Springboard/Dock
BESTAPP: suspend
BESTAPP: resume
BESTAPP: terminate
BESTAPP: received listener request from process %ld
BESTAPP: Creating listening notifier for process %ld
*** Attempt to access BestAppSuggestion xpc interface fror process %{public}@, which doesn't have the %{public}@ entitlement
Unlocking reader %@
providing item to reader %@
Currently locked, saving callback for when unlocked
_provideItemAtURL called without readerID, creating UUID to act as readerID
IdleTracker:alloc(%{public}@) interval=%{public}g
IdleTracker:dealloc(%{public}@
IdleTracker: %{public}@: mostSignificantLevel=%{public}@ %{public}s%{public}s weakSelf=%{public}p
IdleTracker: %{public}@, callingBlock, %{public}s, interval=%{public}@
SIMULATOR: Setting receivedItems to %{private}@
SIMULATOR: Items changed ( from %{private}@ ), so updating and signalling.
includePayload=%{public}s
SIMULATOR: Clearing current item, because it has been removed ( was %{public}@/%{private}@).
SIMULATOR: Updating existing item, %{public}@ %{private}@/%{private}@
SIMULATOR: Item %{public}@ seems to be different from %{public}@, so changing received item & updating lists.
SIMULATOR: Looking for %{private}@
SIMULATOR: Found bundle ID for item %{public}@/%{private}@, %{private}@
SIMULATOR: Unable to find application to handle typeIdentifier %{private}@:%{private}@ for item %{public}@
FAILED to decode %@ object for useractivityd <-> simulator connection, %@
Removing bestAppSuggestion notifier %{public}@
Invalidating bestAppSuggestion notifier
setItems(%{private}@)
BESTAPP: -- Ignoring supressed item, %{private}@ %{public}@ (until %{public}@, now=%{public}@)
BESTAPP: -- Ignoring supressed item, %{private}@ %{public}@ (until %{public}@, item.when=%{public}@, now=%{public}@)
BESTAPP: Ignoring item %{public}@/%{private}@ %{public}@, because it is earlier than %{public}@
BESTAPP: -- Ignoring item %{public}@/%{private}@, because it is not a local action
BESTAPP: Not notifying clients about new best app %{public}@/%{private}@ .when=%{public}@ (and %lu more best app options) because it matches last item.
Notifying clients about new best app: %{public}@/%{private}@ (and %lu more best app options)
BESTAPP: supressedUntil=%{private}@
BESTAPP: Setting .hardSupressedUntil for %{public}@ to nil, because that time has passed.
BESTAPP: Setting .supressUntil for %{public}@ to nil, because that time has passed.
BESTAPP: Setting .supressedUntil for %{public}@ to nil, because the .lastInterestingTime is earlier the last update for this item (%{public}@ vs %{public}@ (%{public}@ vs %{public}@), when=%{public}@).
doConnected, bestApp client connected. pid=%d
doDetermineBestAppSuggestionWithCompletionHandler, bestApp=%{public}@/%{private}@ (and %lu more app suggestions)
doDetermineBestAppSuggestionWithCompletionHandler, bestItem = nil
uuid=%{public}@ options=%{public}@
BESTAPP: Updating existing supression record for item %{public}@/%{private}@, %{public}@
BESTAPP: Setting supressedUntil for item %{public}@/%{private}@ item.when=%{public}@ to %{public}@/%{public}@ lastInterestingTime=%{public}@
doLaunchFollowUp cornerActionItem: %{private}@, interactionType: %lx, cancelled: %{public}@
Empty wasContinuedInfo, creating it
WasContinuedInfo scheduledForSubmission: %{public}@
-- Scheduling messagetracer info for submission: %{public}@, %{private}@
-- Sumbitting metric info for %{public}@, %{private}@
doRegisterForBestAppChangeNotification, clientPid=%{public}ld
doUnregisterForBestAppChangeNotification, clientPid=%{public}ld
Queuing fetch for bestAppUUID %{public}@
bestAppFetch
result=%{public}d enableTelemetry=YES 
disableEntitlmentChecking=YES
### Auto-exiting after %g seconds; likely crashed during a unit test and want to clean up.
%{public}s: Starting up, %{public}s %{public}s %{public}s version %g built on %{public}s %{public}s.  args=%{public}@
*** terminateServerIfExecutableIsReplaced fd = %d
*** Detected a change to %{public}s, so terminating server in %f seconds.
*** Cancelling source.
[FILE MANAGER] ERROR creating shared pasteboard dir: %@
[FILE MANAGER] Shared Path: %@
[FILE MANAGER] Error creating subdir: %@
[FILE MANAGER] Path for file UUID: %@ -> '%@'
[FILE MANAGER] Created file at path: %@
[FILE MANAGER] Failed to create file at path: %@ / %s
[FILE MANAGER] Failed to create dir at path: %{public}@ / %{public}@
[FILE MANAGER] Created dir at path: %{public}@
[FILE MANAGER] Failed to remove item at path: %{public}@ / %{public}@
[FILE MANAGER] Removed item at path: %{public}@
[FILE MANAGER] Creating file for local pasteboard blob at path: %@
[FILE MANAGER] Created Handle: %@
[FILE MANAGER] Creating file for remote pasteboard blob at path: %@
[FILE MANAGER] Error creating clone items dir: %@
[File Manager] Error writting data for %{public}@: %{public}@
[File Manager] Failed to synchronize or close file, error=%{public}@
[File Manager] Releasing lock for item %@
[File Manager] Released lock for item %@
[File Manager] Canceling all file coordiation providers
Already have lock for file, deleting
Error deleting item: %{public}@
Deleted file for item: %{public}@
Obtaining write lock to delete file for item: %{public}@
Error getting coord write for deleting item: %{public}@
Error to get sharedDir cleaning up
Error getting sharedDirPath archives: %{public}@
Attempting to deleta archive: %@
Error deleting archive: %{public}@
Attempting to delete item: %@
We have lock for the file, we are receiving the item and should not delete it at this time
Obtaining write lock to delete file
Deleting file for item: %@
Attempting to delete copied item: %{private}@
Deleted copied item: %{private}@
Failed to delete item: %{private}@
HANDLER: %{public}@ is being %{public}s
HANDLER: %{public}@ is being suspended ( was not )
HANDLER: %{public}@ is being resumed ( was suspended )
HANDLER: %{public}@ is being terminated %{public}@
Streams stalled, erroring out the paste operation.
[CODERV2] dealloc
[CODERV2] State: %@ -> %@
[CODERV2] Streams closed: %{public}@
[CODERV2] Reveived message for tag %{public}@
[CODERV2] Did write tag %{public}@
[CODERV2] Did write data chunk
[CODERV2] Done writting pasteboard data chunks
[CODERV2] Requesting delivery for %{public}@
[CODERV2] Req result: %d
[CODERV2] Done sending archive chunks
[CODERV2] Stopping
Received stop message with error: %@
[CODERV2] Archvie requested for UUID: %@
[CODERV2] File requested with invalid UUID: %{public}@
[CODERV2] Delivering file packets for UUID: %@
[CODERV2] Received pasteboard info, requesting data
[CODERV2] Error receiving pasteboard info: %{public}@
[CODERV2] Received pasteboard data response (%{public}@/%{public}@)
[CODERV2] Error writing data to file: %{public}@
[CODERV2] Received pasteboard file response %@ %ld%% (%{public}@/%{public}@)
[CODERV2] Received all data for archive: %@
[CODERV2] Total expected data length: %{public}@
[CODERV2] Sending heartbeat
[CODERV2] Sending pasteboard info
[CODERV2] Sending pasteboard data request
[CODERV2] Requesting archive for UUID: %{public}@
[CODERV2] Building file packager to send pasteboard data
[CODERV2] Requesting pasteboard info, will return info early: %{public}@
[CODERV2] Timout waiting for item lock sememphore
[CODERV2] Calling received info handler
[CODERV2] Skipping call to received info handler
[CODERV2] Calling pasteboard received handler
[CODERV2] Skipping call to pasteboard received handler
[CODERV2] Item %d has public.file-url with uuid: %@
[CODERV2] Error obtaining lock for item %d: %{public}@
[CODERV2] Setup to send pasteboard, waiting
[CODERV2] Sending pasteboard with files
[CODERV2] Archiving item in our clone dir, no need for sandbox ext
[CODERV2] Error getting sandbox info
[CODERV2] Got extension data: %@
[CODERV2] Got extension id: %lld
[CODERV2] Starting to archive %@
[CODERV2] Don't do anything with archives after stream is marked done
[CODERV2] Error creating archive for file: %@
[CODERV2] Created packager for archive: %@
[CODERV2] Done archiving all objects, total send size: %@
[CODERV2] No files to archive, total send size: %@
[CODERV2] Calling pasteboard sent handler
[CODERV2] Skipping call to pasteboard sent handler
[CODERV2] Got data from packager, packet #: %d, tag: %ld
[CODERV2] Finished sending packages: %ld / %{public}@
[CODERV2] Error from packager: %{public}@
Starting watchdog: %@ - %fs
Canceling watchdog: %@
Triggering watchdog: %@ - %fs - %@
Setting advertisable items to %{private}@
SIMULATOR: Telling paired client that the advertised item %{public}@/%{private}@ changed.
result=%{private}@/%ld items
-- signalling thread to determine what activity to advertise because one of our userActivityItems changed.
DETERMINE: Determining list of items to be advertised thread starting up: 
DETERMINE: Checking for recentlyEligible items because the screen is dimmed (includeRecentItems == YES).
DETERMINE: possible items to advertise:%{private}@
DETERMINE: Since this activityItem's .userInfo, %{public}@ type=%{private}@, has unsynchronized cloud documents, we can't actually advertise this item.
handoffFetchSpeculative enableTelemetry=YES 
success=%{public}d enableTelemetry=YES 
handoffFetchSpeculative
DETERMINE: Activity %{public}@/%{private}@ had unsynchronized documents, so we asked it to update and we've heard back.
DETERMINE: Activity %{public}@/%{private}@ had unsynchronized documents, so we asked it to update and we've heard back with an error %{public}@.
DETERMINE: %{public}@/%{private}@ as the current item-to-advertise.
DETERMINE: No item is being advertised, so removing any previously set of advertised items.
Determining idleDetermination, entering.
IDLE: Setting preventAdvertisingSuspensionBecauseOfAlwaysPickItem = YES for item %{public}@
IDLE: Setting self.userIsInactivePowerAssertion == nil because there are no items being advertised.
IDLE: Setting shouldSuspendAdvertising == YES because userInactivePowerAssertion == nil
IDLE: Setting self.screenDimmedPowerAssertion == nil because there are no items being advertised.
IDLE: Setting shouldSuspendAdvertising == YES because self.screenDimmedPowerAssertion == nil
IDLE: Setting shouldSuspendAdvertising == YES because the device is locked and our power assertion has expired.
IDLE: Setting shouldSuspendAdvertising to NO because one or more of our assertions still exists. (%s%s%s%s)
IDLE: Setting systemShouldNotBeAdvertising=NO because advertiser %{public}@ always wants to be advertised.
IDLE: Setting shouldSuspendAdvertising = YES because mustSuspendAdvertising == YES %@%@
IDLE: Determined that advertising should be suspended, removing any active advertisement and setting self.systemHasSuspendedAdvertisements = YES ( idle=%.2f seconds)
*** SUSPENDING ADVERTISER %{public}@
*** RESUMING ADVERTISER %{public}@
 -- there are listening clients, so firing the check-and-update-BestApplication thread.
Creating loop to check-for-and-update BestApplication
Candidate bestAppSuggestions: %{private}@
CornerActionManager: Triggering all because the state of Bluetooth changed to %{BOOL}d
CornerActionManger:  suspend ( was suspended = %{public}@)
*** Suspending advertiser %{public}@
CornerActionManger:  resume
*** Resuming advertiser %{public}@
*** Resuming receiver %{public}@
UserActivity, received UAUserActivityManagerActivityContinuationIsEnabledChangedNotification notification, so spinning all threads.
Backlight %@
setUserIsActive: %{public}@ (was %{public}@)
setUserIsActive, setting to NO, so creating assertion if warranted.
setUserIsActive, creating assertion because we are advertising something
userInactivePowerAssertion, power assertion timed out and expired, so triggering user idle determination.
userInactivePowerAssertion, userInactivePowerAssertion power assertion removed.
setUserIsActive, no need for assertion, triggering updateAdvertisableItems
userInactivePowerAssertion, setting to NO, so removing power assertion & triggering idle determination.
updateScreenDimState: %{public}@ (was %{public}@)
updateScreenDimmedState, setting to YES, so creating assertion if needed.
updateScreenDimmedState, creating assertion
screenDimmedPowerAssertion, power assertion timed out and expired, so triggering user idle determination.
screenDimmedPowerAssertion, screenDimmedPowerAssertion power assertion removed.
updateScreenDimmedState, no need for assertion, triggering state updates
updateUIDeviceLockedState, setting to NO, so removing power assertion & triggering idle determination.
updateUIDeviceLockedState: %{public}@ (was %{public}@)
updateUIDeviceLockedState, setting to YES, so creating assertion if we have an advertisement.
Creating power assertion of %g seconds, to keep advertisement alive.
updateUIDeviceLockedState, power assertion timed out and expired, so triggering user idle determination.
updateUIDeviceLockedState, power assertion removed.
updateUIDeviceLockedState, no need for assertion, triggering state updates
updateUIDeviceLockedState, device is unlocked, so removing power assertion & triggering advertising & idle determination.
addAdvertiser(%{public}@)
removeAdvertiser(%{public}@)
## Received com.apple.location.changed so restarting deamon
No remote device type set
SCHEDULE:%{public}@, next=%{public}@ freq=%g
SCHEDULE:%{public}@ scheduleNext, interval=%g
SCHEDULE: Setting next time to DISPATCH_TIME_FOREVER because interval > anything reasonable
SCHEDULE:%{public}@, scheduling down to %f seconds ( _next=%{public}@ )
SCHEDULE:%{public}@, next=%{public}@/%lld ( was %{public}@/%lld )
SCHEDULE:%{public}@, next=NOW ( was %{public}@ ) freq=%g
SCHEDULE:%{public}@, run.  
SCHEDULE:%{public}@, DONE run, next=%{public}@
SCHEDULE:%{public}@, setFreq, next=%{public}@ freq=%g
SCHEDULE:%{public}@, RESET, next=FOREVER ( was %{public}@ ) freq=%g
Created remote generation %{public}@
Cannot update state from %@ to %@
Remote generation dealloc (type requested, data requested): %{public}@ %@
[REMOTE GEN] Responding to type Info request
[REMOTE GEN] Fetching remote type info
[REMOTE GEN] Type payload fetch error: %{public}@
[REMOTE GEN] Received type info
[REMOTE GEN] Setting protocol version: %d
[REMOTE GEN] Received extra data, saving for later
[REMOTE GEN] Type Fetch Info: %{private}@
[REMOTE GEN] Requesting types before PB data
[REMOTE GEN] Waiting on type results
[REMOTE GEN] Timeout requesting type info
[PBOARD CONTROLLER] Creating pboard client controller
[PBOARD CONTROLLER] Client Notification Connection interrupted ( pboardd crash? )
[PBOARD CONTROLLER] Client Notification Connection invalidated; remote copy/paste will no longer work.
[PBOARD CONTROLLER] Screen sharing session started, disabling universal clipboard
[PBOARD CONTROLLER] No more screen sharing sessions, enabling universal clipboard
Process %d requested for UC to disable
[PBOARD CONTROLLER] Return Client Items in Order: %@
[PBOARD CONTROLLER] Sending client xpc remote available update: %@
[PBOARD CONTROLLER] Error getting client connection: %@
[PBOARD CONTROLLER] Got type update from client, gen: %lu, %@
[PBOARD CONTROLLER] Ignoring type updates, screen sharing session in progress
[PBOARD CONTROLLER] Ignoring type updates, clipboard sharing disabled
[PBOARD CONTROLLER] Received pasteboard info: %@
[PBOARD CONTROLLER] Clear local pasteboard info: from client
[PBOARD CONTROLLER] Remove Local Types Fired
[PBOARD CONTROLLER] Remove Local Timer Fired
[PBOARD CONTROLLER] Pasteboard types fetch requested
[PBOARD CONTROLLER] Pasteboard data fetch requested for pid: %d
[PBOARD CONTROLLER] Already have remote data, using it: %@
[PBOARD CONTROLLER] Requesting data from remote device
[PBOARD CONTROLLER] Starting timer to show UI in %lf sec
[PBOARD CONTROLLER] Pasteboard Fetch Cancelled
[PBOARD CONTROLLER] Payload fetch error: %{public}@
[PBOARD CONTROLLER] PBData came with stream request, was a small pboard
[PBOARD CONTROLLER] Error creating remote data file
ERROR: Error writing pasteboard data blob: %@
[PBOARD CONTROLLER] Requesting to open streams with version: %@
[PBOARD CONTROLLER] Opened streams with error: %{public}@
[PBOARD CONTROLLER] Opened streams
[PBOARD CONTROLLER] Could not create data file for remote pasteboard
[PBOARD CONTROLLER] Error receiving pboard info: %{public}@
[PBOARD CONTROLLER] Received error from remote: %{public}@
[PBOARD CONTROLLER] Received pboard info: %@
URL on pasteboard: %@
Creating %@ as type %@
[PBOARD CONTROLLER] new URL for item: %@
[PBOARD CONTROLLER] Issuing sandbox extension
[PBOARD CONTROLLER] Got extension
[PBOARD CONTROLLER] Error issuing extension
[PBOARD CONTROLLER] Saving sandbox extension to dict
[PBOARD CONTROLLER] Corrupt file: url in stream, %{public}@
[PBOARD CONTROLLER] Non-file: url provide in stream, %{public}@
[PBOARD CONTROLLER] Sending extensions: %@
Unable to get shared temp dir@
[PBOARD CONTROLLER] Paste Fetch Info: %@
[PBOARD CONTROLLER] Archiving pbinfo: %@
[PBOARD CONTROLLER] Pboard is small enough to send via BTLE payload
[PBOARD CONTROLLER] Pasteboard Sent Info: %{private}@
[PBOARD CONTROLLER] Starting pboard service for paste, version: %@
[PBOARD CONTROLLER] Pasteboard data alread fetched sending now
[PBOARD CONTROLLER] Failed to create local pasteboard data file
[PBOARD CONTROLLER] Error getting client object proxy: %{public}@
[PBOARD CONTROLLER] pbsize: %ld, payload size limit: %ld
[PBOARD CONTROLLER] Telling client pboard will be fetched
[PBOARD CONTROLLER] Error getting client connection for write notification: %@
[PBOARD CONTROLLER] Attempting to get local pasteboard data
[PBOARD CONTROLLER] Getting pboard written to file
[PBOARD CONTROLLER] Received streams, waiting for local data to be available
[PBOARD CONTROLLER] Local data available, starting out stream
[PBOARD CONTROLLER] Error sending types: %{public}@
[PBOARD CONTROLLER] Finished sending types: %@
[PBOARD CONTROLLER] Local Pasteboard Sent Info: %{private}@
[PBOARD CONTROLLER] Timeout getting local pasteboard
[PBOARD CONTROLLER] New client connection does not have correct entitlement: %@
[PBOARD CONTROLLER] Received new client connection: %@
[PBOARD CONTROLLER] Client interrupted
[PBOARD CONTROLLER] Client invalidated
[PBOARD CONTROLLER] Received new aux connection: %@
[PBOARD CONTROLLER] AUX interrupted
[PBOARD CONTROLLER] AUX invalidated
Controller Connection Invalidated
No more active controllers, Re-enabling UC
New Controller connection, disabling UC
[PBOARD CONTROLLER] show pbui, but already visible, skipping
[PBOARD CONTROLLER] Setting durration time for %lf sec
[PBOARD CONTROLLER] Setup progress UI: %@, %@, %@
[PBOARD CONTROLLER] Creating notification for progress ui with options: %@
[PBOARD CONTROLLER] Notification creation err: %d
[PBOARD CONTROLLER] Waiting for notification result
[PBOARD CONTROLLER] Response flags: %lu
[PBOARD CONTROLLER] User cancelled the paste
[PBOARD CONTROLLER] Paste was cancelled
[PBOARD CONTROLLER] Unexpected result from user notification
[PBOARD-CONTROLLER] User notification was no longer current at the time it was cancelled or completed, so ignoring. %{public}lu
[PBOARD CONTROLLER] Failed to created user notification ref, err=%{public}d
[PBOARD CONTROLLER] Adding hide delay of %lf sec
[PBOARD CONTROLLER] Hide progress in %lf sec with fail: %@
[PBOARD CONTROLLER] iOS needs a minimum delay of 1.25 sec, updating delay to 1.25
[PBOARD CONTROLLER] Canceling the user notification
[PBOARD CONTROLLER] No notification, must have already been canceled
[STREAM HAND] Starting Streams
[STREAM HAND] Starting Input Stream
[STREAM HAND] Starting Output Stream
[STREAM HAND] Call to stop streams
[STREAM HAND] Trying to stop streams
[STREAM HAND] Stoping streams
[STREAM HAND] Write raw data of length: %ld
[STREAM HAND] Cannot write raw data, in message mode
[STREAM HAND] Write message tagged %ld of length: %ld
[STREAM HAND] Cannot write message, in raw data mode
[STREAM HAND] Did not write anything, setting flag
[STREAM HAND] Received error on stream %{public}@: %{public}@
[STREAM HAND] Both Streams opened
[STREAM HAND] Wrote %ld raw bytes to output stream
[STREAM HAND] We should not be writting more data than we have!
[STREAM HAND] Error writing message: %{public}@
[STREAM HAND] Should not be writting 0 data to stream
-dealloc for power assertion %{public}@/%{public}@
ASSERTION: %{public}@ Calling block with NO, in -dealloc
ASSERTION: %{public}@ Releasing assertion %ld, in -dealloc
ASSERTION: %{public}@ Scheduling assertion for %g seconds.
ASSERTION: %{public}@ Rescheduling assertion for %g seconds (was %.2g seconds from now).
ASSERTION: %{public}@ No need to update assertion; request for %g seconds is less than current expiration, in %.2g seconds.
%s, IOPMAssertionCreateWithProperties returned %x
ASSERTION: %{public}@ Power assertion /%ld created.
ASSERTION: %{public}@ Power assertion %ld released.
ASSERTION: %{public}@ Updating needToCallBlock => NO
ASSERTION: %{public}@ Calling block with YES because assertion timed out
SIMULATOR: Returning received activities %{private}@ as eligibleItems
[Packager] Queuing delivery block %d/%d
[Packager] Delivery signaled
[Packager] Delivering packet %d/%d
[Packager] Reading packet data %d/%d
PROCESSCOMMAND:%{private}@
REPLAY: Destroying replay object because the peer's UUID %{public}@ matched our own.
REPLAY: Terminating UAActivityReplay because TERMINATE was received.
=== Forcing item into replay client: %{private}@
=== UPDATED PAYLOD FOR item %{private}@ 
=== WAITING FOR ACTIVITY %{private}@ to be resumed (for %g seconds)
=== REMOVING ACTIVITY %{private}@ to be resumed
NETWORK: Received broadcasted advertisement %{private}@
REPLAY: PULLPAYLOAD request, for advertisementPayload=%{private}@
REPLAY: PULLPAYLOAD request, got encodedData %{private}@ from creating application for advertisementPayload %{private}@, so returning that to paired client over the network.
REPLAY: RETURNPAYLOAD request, for advertisementPayload=%{private}@
REPLAY: RETURNPAYLOAD request, found existing payloadHandler in _pendingPayloadFetches for advertisementPayload=%{private}@
REPLAY: Didn't find handler for advertisement %{public}@/%{private}@, pendingPayloads=%{private}@
REPLAY: Sending encoded data %{private}@ to activity handler.
terminate
Looking for localized string for key: %@
Falling back to NSLocalizedString
SIMULATOR: Terminating all UASimulators.
SIMULATOR: RegisterWithParentWithVersion simulatorVersion=%llu, serverPort=%x pid=%d
SIMULATOR: Creating UASimulator to be parent simulator in OSX, uuid=%{public,posix:uuid}.16P port=%x
SIMULATOR: Failed to create simulator; simulated useractivityd client version %ld is unknown.
SIMULATOR: Detected death of child simulator, pid=%d, so terminating the UASimulator and removing it.
Submitted UAActivityBecameCurrentEvent: %{private}@
Submitted UAActivityWasDiscoveredEvent: %{private}@
Submitted UAActivityWasSuggestedEvent: %{private}@
Not reporting activity was continued becasuse payload was never requested.
Submitted UAActivityWasContinuedEvent for %@: %{private}@
Metric AT for %{private}@ is %{private}@
Submitted UARemotePasteboardWasRequestedEvent: %{private}@
Submitted UARemotePasteboardDidSendLocalEvent: %{private}@
Submitted UARemotePasteboardTypeInfoRequestedEvent: %{private}@
Submitted UARemotePasteboardBecameAvailableEvent: %{private}@
Submitted UARemotePasteboardBecameUnavailableEvent: %{private}@
Using service name %{public}@ for %{public}@
AdvertisableItems:%{private}@
NOTIFY BEST CHANGE: %@ -> %@
LAYOUT: Updating advertisement because the list of main screen visible bundle identifiers changed
LAYOUT: Updating advertisement because the lock screen is present and there were previous main screen bundles.
LAYOUT: Updating advertisement because the list of carplay screen visible bundle identifiers changed
LAYOUT: Found %{public}@/%{public}@ as active layout
LAYOUT: Found %{public}@/%{public}@ as proxy for active layout
LOCKSCREEN: New layout contains modal lock screen.
LOCKSCREEN: Ignoring lock-screen element because %{public}@ is at or above.
Adding client %{private}@, %{public}@, bundleID=%{private}@ to known userActivityClients.
Removing client %{private}@, application %{public}@, from known userActivityClients.
Moving 'LSLivePastProcessExit' activity %{public}@/%{private}@ from process %{public}@ into additionalUserActivityAdvertisableItems
Removing client %{public}@ from _userActivityClientsByPID
Removing client %{private}@ from _userActivityClientsByBundleIdentifier
MAKEFRONT: handleAppStateMonitorUpdate:%ld %{private}@
MAKEFRONT: %{public}@/%{public}@ %s
MAKEFRONT: - ( was %{public}@/%{public}s)
MAKEFRONT:- (was %@) %{public}s
registerAsProxyApplication, pid=%{public}d controller=%{public}@
registerAsProxyApplication, added, proxiedClients=%{public}@
registerAsProxyApplication, removed, proxiedClients=%{public}@
*** FORCING item %{private}@ as the most eligible item, since it's a ping
eligibleAdvertiseableItemsInOrder: client=%{public}@ item=%{public}@ eligible=%{BOOL}d alwaysPick=%{BOOL}d inBackground=%{BOOL}d
eligibleAdvertiseableItemsInOrder: alwaysPickItems=%{public}@
-- Adding in eligibleItemsWhenInBackground items, %{private}@. 
eligibleAdvertiseableItemsInOrder: result=%{public}@
listener=%{private}@ newConnection=%{private}@
[DATA REQUESTER] Requesting payload from: %@, with timeout: %{public}@
[DATA REQUESTER] Requesting complete: %lu bytes, error: %@
[DATA REQUESTER] Adding %d delay for testing
[DATA REQUESTER] Requesting payload from: %@, with timeout: %{public}@, version: 2
[DATA REQUESTER] Requesting pbinfo from: %@, with timeout: %{public}@
BLUETOOTH: Returning NO for .poweredOn because our session has been terminated.
BLUETOOTH: Returning NO for .poweredOn because our session has been detached, so also triggering a re-attach.
BLUETOOTH: Setting powered status for device %{public}p to %{BOOL}d
BLUETOOTH: Failed to get device powered status, for local device %{public}p from BTSession %{public}p, result=%{public}d.
BLUETOOTH: Attached to BTSession, setting attached to %{BOOL}d.
BLUETOOTH: Failed to attach to BTSession, result=%{public}d
BLUETOOTH: Detached from BTSession, result=%{public}d, setting attached to NO.
BLUETOOTH: Registering callback %{public}@ to %{public}p
BLUETOOTH: Unregistering callback %{public}@
BLUETOOTH: Letting callback %{public}@/%{public}p know that the power status is now %{BOOL}d
BLUETOOTH: Attached to BTSession %{public}p
BLUETOOTH: Local device %{public}p from BTSession %{public}p, result=%{public}d.
BLUETOOTH: Failed to add callbacks for local device %{public}p from BTSession %{public}p, result=%{public}d.
BLUETOOTH: Failed to get local device for session %{public}p, result=%{public}d
BLUETOOTH: Detached from BTSession %{public}p localDevice=%{public}p
BLUETOOTH: Error %{public}d removing device callbacks, device=%{public}p
BLUETOOTH: Terminated from BTSession %{public}p localDevice=%{public}p
BLUETOOTH: Setting powered-status-validity for device %{public}p to NO
*** ERROR: Received BTLEUserActivity error packet, but unable to de-archive it, so discarding it.
*** ERROR: Received BTLEUserActivity packet with unknown version, %ld, so discarding it.
-- Compressed data to %ld bytes (from %ld bytes) in data, ( %ld%% )
Using compressed data, because it is %ld bytes smaller than the uncompressed data.
setScanningForTypes:%{public}@
UASharingReceiver, adding activity scanner %{public}@.
UASharingReceiver, removing activity scanner %{public}@.
UASharingReceiver, suspending activity scanner %{public}@.
UASharingReceiver, resuming activity scanner %{public}@.
foundDevice, deviceIdentifier=%{private}@ scanner=%{public}@
foundDevice, deviceIdentifier=%{private}@
lostDevice, deviceIdentifier=%{private}@ scanner=%{public}@
lostDevice timer firing deviceIdentifier=%@; _recentlyLostDeviceIDs is %@, will remove is %d
lostDevice, deviceIdentifier=%{private}@
removing item %{public}@/%{private}@ because another item (%{public}@/%{private}@) with the same bundleID and deviceID is being added
Unable to determine nowPlaying client, error=%{public}@ for item %{public}@
NowPlaying item is %{public}@ for item %{public}@
Retaining %{public}@ in _receivedItems because it's .payloadRequested or .payloadAvailable, so that it remains available for a bit, until %{public}@.
REMOVING: %{public}@ because it's on device %{private}@
SharingBTLEReceiver: Running periodicCleanupFunc to check for received items whose .removeAfter has passed.
Removing %{public}@ from .receivedItems because .removeAfter, %{public}@ has expired.
activityScanner:receivedAdvertisement: %{private}@,%{public}@)
Received Ad: %{public}@ opts=%{public}@ from %{private}@/%{private}@
Ignoring received ActivityContinuation because the current profile disallows it, %{public}@ from %{private}@
SIMULATING foundDeviceForIdentifier: %{private}@
Received advertisement.advertisementPayload == nil
[PBOARD] Received pboard available advertisement
[PBOARD] Ad is from last seen device
[PBOARD] Pboard version bit flipped, notify client
[PBOARD] Ad is from new device, notify client
[PBOARD] Notify client of new remote pboard and reset timmer
[PBOARD] Recived add w/o remote pboard for last seen device, notify client and clear timmer
 -- Looking for activity matching advertisingPayload %{public}@, from %{private}@/%{private}@
 -- Found matching advertisingPayload to item already received from this device, %{public}@/%{private}@, so using it. %{public}@/%{private}@
 -- Clearing payload of item %{public}@/%{private}@ because the last active time from that device has changed.
 -- Because the optionBits in the packet changed, from %x%{public}@ to %x%{public}@, discarding current item and starting fresh, %{public}@ / %{private}@
 -- Matching dns- item to previously received one, mapping to %{private}@, for item already received from this device, %{public}@/%{private}@, so using it. %{private}@
 -- New advertisement of DNS type didn't seem to match to same app as  previous one, %{public}@ vs %{public}@, so can't use it. %{private}@
PING: Pong was sent, error=%{public}@
# RECEIVED advertisement, %{public}@ type=%{private}@ -> %{private}@, %{public}@, from %{private}@/%{private}@ options=%{public}@
received UAUserActivityAutoPullActivitiesListKey bit on, fetching more app suggestions
*** Checking whether to do a pre-emptive fetch of the payload for item %{public}@/%{private}@
*** Ignoring prefetch for item %{public}@/%{private}@ because dontPrefetchBefore=%{public}@
*** Scheduling a pre-emptive fetch of the payload for item %{public}@/%{private}@
*** Completed a pre-emptive fetch of the payload for item %{public}@/%{private}@
issuing handoff-more_items command for %lu devices
issuing handoff-more_items command for device %@
got back %lu items for handoff-more_items command from device %@
.scanForTypes=%{public}@
[IN STREAM] Starting to receive types: %@
[IN STREAM] Input stream canceled
[IN STREAM] Done with input stream
[IN STREAM] Paste cancelled, closing stream
[IN STREAM] Receiving Header Info
[IN STREAM] Error, malformed data received. Have not received message header.
[IN STREAM] Receiving Header
[IN STREAM] Started receiving header
[IN STREAM] Error, malformed data received. Did not receive correct delimiter
[IN STREAM] Received Header: %@
[IN STREAM] Started receiving data file
[IN STREAM] Received data file
[IN STREAM] Stream Event Error: %@
[IN STREAM] Stream End Encountered
** DISCARDING ADVERTISEMENT with hash %{public}@ because it contains a fileProvider (0x%lx), and this platform does not support it.
 -- Received a kLSAdvertisementStringUserActivityKind; finding application with advertising string %{public}@
 -- MATCHED, adverising bytes %{public}@ to activityType %{private}@, from application %{private}@
-- Falling back to _UAUserActivityTypeBrowsingWeb because no application matched the advertisement %{public}@ and kUserActivityAdvertisingBytesItemHasWebpageURLMask was set.
 -- Received a kLSAdvertisementStringDomainNameKind; looking for native application application with advertising string %{public}@
 -- Adding domains for bundleID: %{private}@
 -- Domain name strings: %{private}@
 -- MATCHED, adverising bytes %{public}@ to domain name %{private}@, from application %{private}@
 -- Received a kLSAdvertisementStringDomainNameKind; no match for native application, so looking for browser
 -- Received a kLSAdvertisementStringPrivateSpaceKind; finding application with private space string %{public}@
 -- MATCHED, adverising bytes %{public}@ to privateType string %{private}@, from application %{private}@
 -- Found application %{private}@, with matching advertisingIdentifier %{private}@, from %{private}@ for payload %{public}@
Creating CornerActionBTLEItem, advertisementPayload=%{private}@ optionBit=%ld type=%{private}@ activityType=%{private}@ bundleID=%{private}@ teamID=%{private}@ advertisingOptions=%{public}@
Created wasContinuedInfo for BTLEAd: %{private}@
Unable to determine application on this device for advertisement %{public}@, so ignoring this received activity.
RECEIVED advertisement, %{public}@, matched against existing corner item %{public}@ so merely update it from the flags & options
for item %{public}@ requested=%{public}@ available=%{public}@
Requesting payload for item %{public}@ payload, but it is already present, so dispatching directly.
Requesting payload for item %{public}@ advertisementPayload=%{public}@ bundleIdentifier=%{private}@ with timeout: %{public}@
sharingFetch
*** DELAYING payload receive by an additional %f seconds for DEBUGAdditionalPayloadReceiveTimeInterval
*** FINISHED DELAYING payload receive by an additional %f seconds for DEBUGAdditionalPayloadReceiveTimeInterval
PAYLOAD:GOT payload for item %{public}@/%{public}@, dataSize=%ld/%{private}@ speed=%g/%{bitrate}ld error=%{public}@
Updated wasContinuedInfo with payload fetch results: %{private}@
Payload for item %{public}@/%{private}@ was received with error %{public}@
*** For activity %{public}@ of type NSUserActivityTypeBrowsingWeb, being reecived, since the teamID from received activity, %{private}@, and teamID associated with application targeted, %{private}@, do not match, setting the userInfoPayload to nil so we don't deliver an un-expected payload type to the target.
*** For activity %{public}@ of type NSUserActivityTypeBrowsingWeb, being received, since the teamID from received activity, %{private}@, and the target application has no teamID, setting the userInfoPayload to nil so we don't deliver an un-expected payload type to the target.
*** Mismatch for activity %{public}@  between teamID from received activity, %{private}@, and teamID associated with application targeted, %{private}@, so refusing to pass along activity to this target.  Error #%ld, UAContinuityUserActivityFailedValidation
*** Mismatch for activity %{public}@ between activityType from received activity, %{private}@, and activityType associated with application targeted, %{private}@, so refusing to pass along activity to this target, error #%ld.
Updating payload for item %{public}@ to %{private}@
Failed to fetch payload from sharingd for item %{public}@/%{private}@, with error %@
-- Calling %ld completionHandlers with payloadRequest information: error=%{public}@
PAYLOAD: clearing payload for activity %{public}@, self=%{private}@
--- item %{public}@ payload already present, so nil-ing it out.
 including entitledTeam: %{public}@ for bundle %{public}@
 including developerTeamID: %{public}@ for bundle %{public}@
 including teamID: %{public}@ from applicationIdentifier %{public}@
[OUT STREAM] Sending pboard info: %@
[OUT STREAM] Starting to send types: %@
[OUT STREAM] Done sending pasteboard, waiting for end of stream
[OUT STREAM] Unexpected event code: %lu
[OUT STREAM] Got data back: %@
[OUT STREAM] Stream End Encountered, shutting down
[OUT STREAM] Stream Timer Fired, shutting down
-- item %{public}@/%{private}@ not eligible, because it has expired (on %{public}@)
requestPayload...:, %{public}@ from client application %{public}@
wasResumedOnAnotherDevice, %{public}@ to client pid=%ld
activityPayloadFromDevice:%{public}@ forAdvertisementPayload:%{public}@ command:%{public}@ timeout:%ld
--- invalidation on connection to client %{private}@ pid=%ld
Using overridden team identifier %{public}@ for applicationIdentifier %{public}@
Using developer team identifier %{public}@ for applicationIdentifier %{public}@
About to fetch bundleIdentifier for process with pid %d. Has appStateMonitor: %{public}@
Failed to fetch bundleIdentifier for process with pid %ld after 10 seconds
CLIENT: Process info, for pid %d, is %{private}@
CLIENT: Process info, for pid %d, is %{private}@ (on queue)
CLIENT: Process info, for pid %d, doesn't include bundle identifier, so unable to locate this process 
except by pid. ( is %{public}@ )
UserActivityClient:%{public}@, teamID=%{private}@ applicationID=%{private}@ bundleID=%{private}@ accessAny=%{public,BOOL}d 
removing %{public}@ userActivityInfoItem
uuid=%{public}@
Removing item %{public}@/%{private}@ from additionalUserActivityAdvertisableItems
%{public}@ from client %ld
 - no need to call back to get updated info for activity %{public}@, because it is not dirty
 - A prepareToResume is already in progress for activity %{public}@, queuing callback for when fetch is complete
Error acquiring RBSAssertion: %@
Got error on connection back to client for %{public}@, error: %{public}@
Calling back to client to ask it to save activity %{public}@
FAILED: Calling back to client to ask it to save activity %{public}@ with error %{public}@.
Returned from back to client to ask it to save activity %{public}@, clean=%{public}s updatedInfo=%{private}@
Unable to call willSave for user activity %{public}@ for process %{private}@ because its owning process/connection seems to be gone.
error: %{public}@
Telling client that user activity %{public}@ was resumed (on another device).
 -- Called %lu pending fetch tasks for %{public}@, removing from queue
 -- No pending fetch tasks called for %{public}@
 -- %lu remaining queued tasks total
CLIENT: version=%ld, %{public}@ %{private}@ any=%{public}@ sandbox=%{public}@ clientInfo=%{private}@
deleteUserActivity %{public}@
%{private}@ %{private}@
doAddDynamicUserActivity(%{public}@, %{public}@) failed, nil for hash %{public}@ or teamID %{public}@.
doAddDynamicUserActivity, nil dynamicHash from (%{public}@, %{public}@, %{public}@).
doAddDynamicUserActivity(%{public}@, %{public}@) failed, nil for one param.
 - found %{public}@ activity, removing it.
doRemoveDynamicUserActivity(%{public}@), nil appActivity
Pinned Activity Info: %{public}@/%{private}@
*** Attempt to pin activity from process %{public}@, which doesn't have the %{public}@ entitlement.
*** Attempt to get current activity information from process %{public}@, which doesn't have the %{public}@ entitlement.
result=%{public}@ %{private}@ error=%{public}@
doGetUserActivityProxiesWithOptions:%{public}@
doDetermineIfUserActivityIsCurrent: uuid=%{public}@
doDetermineIfUserActivityIsCurrent: Found uuid=%{public}@, in client %{public}@ as %{private}@
*** Attempt to determineIfUserActivityIsCurrent from process %{public}@, which doesn't have the %{public}@ entitlement.
doFetchUserActivityInfoWithUUID:(%{public}@)
-- activity with uuid %{public}@, so fetching payload for it.
-- activity with uuid %{public}@, completed fetching payload, %{private}@ %{private}@ %{private}@%{private}@, for it. error=%{public}@
 -- Received error %{public}@ trying to fetch payload for item uuid %{public}@
 -- Sending userActivityInfo back to client, %{public}@/%{private}@
 -- Removing cornerActionItem payload %{public}@/%{private}@ because a client fetched it.
 -- Could not update activityInfo for fetch
 -- Sending Pinned userActivityInfo back to client: %{private}@
Activity with uuid %{public}@ fetch requested, but was neither a locally created item nor a corner action item, so returning error %{public}@
doUpdateUserActivityInfo: makeCurrent=%{public}@ newInfo = %{public}@/%{private}@
The application with pid %ld/%{private}@ didn't provide a activityType.
The application with pid %ld/%{private}@ doesn't have a team identifier in its application-identifier, or isn't from com.apple., and is sandboxed, so unable to proceed.
Application %{public}@ is registering an activity with teamID %{private}@ bundleID=%{private}@ activityType=%{private}@
Application item %{public}@/%{private}@ has a proxy %{public}@, so forcing an advertisement update.
Application item %{public}@/%{private}@ has changed .webPageURL, forcing an advertisement update.
Application item %{public}@/%{private}@ has changed proxy %{public}@, so forcing an advertisement update.
- Making %{public}@/%{private}@ into the currentItem from process %{private}@/%ld
refusing to register user activity from client, and returning error %{public}@ for item %{public}@ %{private}@
BECOMECURRENT: updating advertisement for %{public}@/%{private}@ because the becomeCurrent item changed or a DNS item changed its URL
BECOMECURRENT: updating notifiers for %{public}@/%{private}@ because the becomeCurrent item changed
doUpdateUserActivityWithUUID(%{public}@/%{private}@, current=%{public}@)
Checking if the current item for %{public}@ is changed, %{public}@/%{private}@ %{public}@%{public}@
Triggering the update of the advertisable items because the current status of our application, %{public}@, has changed.
Triggering the update of the advertisable items because uuid == nil, for application %{public}@, has changed.
doMarkUserActivityAsDirty(%{public}@) for app %{public}@ forceImmediate=%{public}@ webpageURL=%{public}@ expiration=%{public}@%{public}s%{public}s
 -- dirty activities for this client: (%{public}@) %{public}@
 -- Updating the user activity, because it's the currently advertised item, to let the server know it should (maybe) re-fetch the payload: %{public}@
Scheduling an advertising item update, for application %{public}@, because the   changed on a NSUserActivityTypeBrowsingWeb item, %{public}@/%{private}@
doRegisterAsProxyApplicationForPid, pid=%{public}d options=%{public}@
NETWORK:Starting browse for rendezous items for %{public}@ %{public}@.
NETWORK: browser=%@ service=%@/%@ more=%@
NETWORK: name=%{public}@ type=%{public}@ port=%ld
NETWORK: Setting up mDNS listener for connections, name=%{public}@ type=%{public}@ port=%ld
NETWORK: NSNetServicesErrorCode=%ld / %{public}@
NETWORK: netServicesDidStop, so terminating this listener, sender=%{private}@.
NETWORK: Sending initial packet to paired client %{private}@/%{public}@ from controllerUUID=%{public}@.
NETWORK: stream=%{private}@ have %ld/%{private}@ controllerUUID=%{public}@
NETWORK: stream=%{private}@ Remaining data, %ld/%{private}@
NETWORK: stream=%{private}@ error=%{public}@
NETWORK: stream=%{private}@ END ENCOUNTERED
COMMAND: %{private}@, from %{private}@/%{public}@
NETWORK: Responding to peer %{private}@/%{public}@ with our UUID, %{public}@, to establish connection from controllerUUID=%{public}@.
NETWORK: Destroying replay handler object because the peer's UUID %{public}@ matched our own, controllerUUID=%{public}@.
-- checking replayController %{public}@ against peerUUID=%{public}@
NETWORK: Destroying network replay object to %@ because we already have a different connection to that peerUUID %{public}@, controllerUUID=%{public}@
COMMANDRESPONSE: %{private}@ (controllerUUID=%{public}@ peerName=%{private}@)
controllerUUID=%{public}@
[CODER_V1] Starting to receive pasteboard
[CODER_V1] Input stream canceled
[CODER_V1] Done with input stream: %@, %@
[CODER_V1] Processing Received data with length: %ld
[CODER_V1] Receiving Header Info
[CODER_V1] Error, malformed data received. Have not received message header.
[CODER_V1] Receiving Header
[CODER_V1] Started receiving header
[CODER_V1] Received Header: %@
[CODER_V1] Started receiving data file
[CODER_V1] Error, malformed data received. Did not receive correct delimiter
[CODER_V1] Recived %ld of %ld
[CODER_V1] Received data file
[CODER_V1] Done queuing chunks, starting shutdown timer
[CODER_V1] Queuing next chunk to send: %ld
[OUT STREAM] Data sent: %ld - %ld
TIME: -- since timeOffsetByteInTicks == 0xff, storing maximum age time.
TIME: --- Guessing that their clock and our clock are in different epochs, ourOffset=%ld, theirs %ld, so falling back %ld seconds and setting delta to %ld. result=%{public}@/%{public}@
TIME: --- Guessing that their clock is somewhat ahead of our clock, and in the same epoch, ourOffset=%ld, theirs %ld, so setting result == no, result=%{public}@=%{public}@
TIME: --- Guessing that their clock is the same or behind of our clock, and in the same epoch, ourOffset=%ld, theirs %ld, so setting result to delta (%ld) + %ld seconds from epoch, result=%{public}@/%{public}@
TIME: result time = %{public}@ %{public}@
Calculated advertisingBytes for %ld / %{private}@, result=%{public}@
SIMULATOR: Requesting payload from paired client, uuid=%{public}@
SIMULATOR: Received payload from paired client, uuid=%{public}@, webPageURL=%{public}@ payload=%{private}@
SIMULATOR: Failed to get payload for activity %{public}@
SIMULATOR: Calling completion handler because activity %{public}@/%{private}@ was resumed, error=%{public}@
setAdvertisableItems:(%{public}@)
ADVERTISING: Scheduling an update to check the advertisement, because we've changed the list of advertised items.
--- Scheduling an update to check the advertisement, because we've cleared the list of advertisable items.
advertising %@, when = %@
ADVERTISING: %{public}@ (old=%{public}@)%{public}@
ADVERTISING: Matched current advertisement, so not updating ( %{public}@ vs %{public}@)
ADVERTISING: Changing advertisement to nil because it's been removed, %{public}@
itemToAdvertise is nil but we need to advertise an auto pull request, so choosing item %@ out of corner manager's possible advertiseable items to advertise
setting UAUserActivityItemIsNotActiveKey = 1 for item %@
setting UAUserActivityItemIsNotActiveKey = 0 for item %@
setting UAUserActivityAutoPullActivitiesListKey = 1 for item %@
ADVERTISING: Advertising new item or updating user-idle time in previous advertisement, %{public}@/%{private}@
lastAdvertismentTime is in the future, this is wrong and is probably because the system clock has changed
ADVERTISING: Time since last advertisement seems to have gone backwards, now=%{public}@ last=%{public}@
ADVERTISING: Setting supressAdvertisementChange = YES because the client attempted to change advertisement too quickly, %f since lastAdvertisementTime (now=%{public}@ last=%{public}@)
ADVERTISING: self.advertisementTimes=%ld %{public}@
ADVERTISING: Removing first item, %{public}@, becaues it is earlier than %{public}@
ADVERTISING: Setting supressAdvertisementChange = YES because the advertisement too quickly, %ld in last %f seconds (earliest=%{public}@ now=%{public}@)
ADVERTISING: Since supressAdvertisementChange == YES, not actually changing the active advertisement and relying on it happening again in the near future.
OLDWEB: Adding item %{private}@, date=%{public}@
ADVERTISING:%{public}@ %{public}@ type=%{private}@%{private}@ at %{public}@ opts=%{public}@
_updateAdvertisement, entering.
Removing .currentAdvertisedItem because Bluetooth is not enabled.
Not advertising because this device is in batterSaverModeEnabled == YES
ADVERTISING: Removing advertisement %{public}@ because advertising is suspended
We have a non-active advertisement, started at: %@, %@s till removal
Removing non-active advertisment
Rescheduling update to remove advertisment
self.advertisableItems is %@, itemToAdvertise is %@
UPDATEADVERTISEMENT: Removing current advertisement item, %{public}@/%{private}@, because its process is gone
UPDATEADVERTISEMENT: No item available to advertise, so switching to advertising existing advertisement nonactively.
UPDATEADVERTISEMENT: No item available to advertise, so
UPDATEADVERTISEMENT: Removing current advertisement item, %{public}@/%{private}@, because self.activityAdvertisingAllowed == NO
removeAdvertisement, currentAdvertisementPayload=%{private}@
OLDWEB: Checking expiration of %{public}@ of %{private}@, expireBefore=%{public}@
OLDWEB: Removing (old) NSUserActivityTypeBrowsingWeb item, %{private}@, because it is older than %{public}@ (expired at %{public}@
-- CHECKING %{public}@ version %{public}@, %{public}@ = %ld.%c.%ld
PEERS: %ld/%{public}@, advertiseHandoff=%{public}s pastboard=%{public}s
PEERS: Our peers ability to received handoff or pasteboard advertisements has changed; scheduling an check for our advertisement. %{public}s/%{public}s
Setting pairedDevices=%ld/%{private}@
dataForMoreAppSuggestions:
skipping %@ because its .when (%@) is older than %lum:
%@: %@
[Sharing Advertiser] Payload request for ad: %{public}@, command: %{public}@, from: %{private}@
activityPayloadForAdvertisementPayload: got handoff-more_items command
payload: %@ (%lu bytes long)
[PBOARD] Paste Requested from remote %{public}@/%{private}@
[PBOARD] Paste V2 Requested from remote %{public}@/%{private}@
[PBOARD] Types Requested from remote %{public}@/%{private}@
Advertising: advertiserData=%{public}@ command=%{public}@ peer=%{private}@ %{public}@/%{public}@
-- advertiseable item %{private}@/%{public}@ matches the advertisingPayload requested %{public}@, so using it.
-- the advertisingPayload requested %{public}@ does not match any advertiseable item
OLDWEB: Checking against previous advertised NSUSerActivityTypeBrowsingWeb items, %{private}@
OLDWEB: the current advertised item, %{private}@/%{public}@, is a NSUserActivityTypeBrowsingWeb, and a previous advertisement %{public}@ from %{public}@ matches the requested payload.
SAMPLEPAYLOAD: Sending %ld bytes to device %{private}@
success=%d enableTelemetry=YES 
handoffFetch
-- received data from advertiseableItem delegate callback to client, uuid=%{public}@ activity=%{public}@/%{private}@
Failure updating userActivity information from client application for activity %{public}@/%{private}@  %{public}@, using (possibly stale) payload instead, status=%ld.
-- Forcing new payload encoder to peer %{private}@/%{public}@ %{public}@ because debugForceNewPayloadEncoder == YES
-- Falling back to 'old' format of payload to support pre Blacktail era device, %{private}@/%{public}@ %{public}@ (size=%ld vs %ld)
-- ENCODING error from client instead of payload, %{public}@ / %{public}@
** The payload for user activity item %{public}@/%{private}@ was %ld bytes, larger than the maximum %ld, and so this user activity cannot be sent to the requesting device.
*** The payload for the user activity item %{public}@/%{private}@ is %ld bytes, larger than the recommended maximum %ld, which may cause slow transfers.
PAYLOAD:Responding to SFAdvertiser with data for advertisement %{public}@ activity %{public}@ type=%{public}@, fetchTime=%g data=%ld/%{private}@
Failure after updating userActivity information from client application for activity %{public}@/%{private}@ %{public}@; the activity disappeared/is no longer current and so cannot be handedOff.
RESPONDING: Unable to locate a userActivity for the payloadData %{public}@ so returning nil/nil and an error as the payload for the requesting device.
Failing request because self.activityAdvertisingAllowed == NO
User activity %{public}@ was resumed on another device, so inform (if desired) the author of the activity on this device
Failing because self.activityAdvertisingAllowed == NO, ignoring notification.
PAIRED DEVICES CHANGED: Now is %ld/%{private}@
Adopting paired devices, PAIRED DEVICES CHANGED: Now is %ld/%@  (was %ld devices)
SIMULATOR: Received message from another simulator on port %ld, so dispatching.
SIMULATOR: Tearing down dispatch_source_t for messages from simulator port %ld
SIMULATOR: Creating UASimulator to talk to real useractivityd in OSX, portName=%{public}@
SIMULATOR: Received notification that parent simulator started up, so forcing a reconnect to re-establish state.
SIMULATOR: Looking up parent port in order to talk to useractivity in OSX
UASimRegisterWithParentWithVersion()=%ld parentVersion=%ld
SIMULATOR: Changing peer device info to %{private}@
SIMULATOR: Paired with parent simulator, commandPort=%ld pairedPort=%ld pairedPeer=%{public}@
SIMULATOR: Detected death of parent simulator port %ld.
SIMULATOR: *** Attempting to reconnect / relaunch parent simulator.
SIMULATOR: Cancelling parent simulator port death source, port %ld
SIMULATOR: Simulator application is %{public}@
SIMULATOR: Because advertising is suspended, returning 'no advertised item' information to paired simulator.
SIMULATOR: Requesting payload for item %{public}@
SIMULATOR: Retrieved payload for item %{public}@, error=%{public}@
SIMULATOR: Sending information on item %{public}@ to paired simulator
SIMULATOR: Returning 'no advertised item' information to paired simulator.
SIMULATOR: Asking receiver to fetch the advertisement.
SIMULATOR: Telling manager to determine the bestApp again
SIMULATOR: Also telling advertisers to determine the item to advertise, because activitiesShouldCrossover=YES
SIMULATOR: Setting received item to %{public}@/%{private}@
SIMULATOR: Found item to send; %{public}@/%{private}@.  Fetching payload.
SIMULATOR: Got payload for item %{public}@/%{private}@.  Returning this info:%{private}@
SIMULATOR: Waiting for payload fetch to complete for item %{public}@
SIMULATOR: Finished wait for payload fetch to complete for item %{public}@
SIMULATOR: Failed to find activity matching uuid %{public}@, items=%{private}@
SIMULATOR: Found item ; %{public}@/%{private}@.  Calling its wasContinued.
Allowing connection to admin interface in simulator from %{public}@
*** SENDING PING %{private}@ to clients.
- doNOP, str=%{private}@, so echoing that back to client.
### DEBUGGING: doSetDebugOption:%{public}@ => %{public}@
### DEBUGGING: Changing EnableSharingFramework to %{public}@
### Removing SFActivityAdvertiser from UASharingAdvertiser
### Adding SFActivityAdvertiser to UASharingAdvertiser.
### Removing SFActivityScanner from UASharingReceiver.
### Adding SFActivityScanner to UASharingReceiver.
str=%{private}@
-- Matching current best item %{public}@/%{private}@
Removing previous injected fake BTLE item %@
Injecting fake BTLE item, %{private}@ "%{private}@" %{private}@ payload=%{private}@
Removing injected fake BTLE item %@
Injecting nil BTLE item, so removing last item
About to call prepareToResumeActivityWithUUID for activityUUID %{public}@
Finished call prepareToResumeActivityWithUUID for activityUUID %{public}@, error=%{public}@
About to call didResumeUserActivityWithUUID for activityUUID %{public}@
Finished call didResumeUserActivityWithUUID for activityUUID %{public}@
Setting up network connection to other machine %{private}@ %ld
doGetPairedDevices(%{public}@)
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>22A380007</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleDisplayName</key>
<string>useractivityd</string>
<key>CFBundleExecutable</key>
<string>useractivityd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.coreservices.useractivityd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>useractivityd</string>
<key>CFBundlePackageType</key>
<string>APPL</string>
<key>CFBundleShortVersionString</key>
<string>1</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14E6097d</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.4</string>
<key>DTSDKBuild</key>
<string>20E5212d</string>
<key>DTSDKName</key>
<string>iphonesimulator16.4.internal</string>
<key>DTXcode</key>
<string>1430</string>
<key>DTXcodeBuild</key>
<string>14E6097d</string>
<key>MinimumOSVersion</key>
<string>16.4</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.coreservices.useractivityd</string>
<key>com.apple.PowerManagement.control</key>
<true/>
<key>com.apple.backboardd.lastUserEventTime</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudDocuments</string>
<string>CloudKit</string>
</array>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.iokit.powerdxpc</key>
<true/>
<key>com.apple.private.associated-domains</key>
<true/>
<key>com.apple.private.librarian.container-proxy</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceUbiquity</string>
<string>kTCCServiceSystemPolicyAllFiles</string>
</array>
<key>com.apple.runningboard.assertions.useractivityd</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.sharing.handoff.advertising</string>
<string>com.apple.sharing.handoff.scanning</string>
<string>com.apple.CarPlayApp.non-launching-service</string>
<string>com.apple.server.bluetooth.general.xpc</string>
</array>
<key>com.apple.system.powermanagement.useractivity</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.SharedWebCredentials</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>lsuseractivityd</string>
</array>
</dict>
</plist>
application-identifier$com.apple.coreservices.useractivityd0&!com.apple.PowerManagement.control
0+&com.apple.backboardd.lastUserEventTime
com.apple.bluetooth.system
0A#com.apple.developer.icloud-services0
CloudDocuments
CloudKit083com.apple.frontboardservices.display-layout-monitor
com.apple.iokit.powerdxpc
0)$com.apple.private.associated-domains
00+com.apple.private.librarian.container-proxy
com.apple.private.tcc.allow06
kTCCServiceUbiquity
kTCCServiceSystemPolicyAllFiles04/com.apple.runningboard.assertions.useractivityd
4com.apple.security.exception.mach-lookup.global-name0
%com.apple.sharing.handoff.advertising"com.apple.sharing.handoff.scanning*com.apple.CarPlayApp.non-launching-service&com.apple.server.bluetooth.general.xpc02-com.apple.system.powermanagement.useractivity
keychain-access-groups0 
com.apple.SharedWebCredentials0&
seatbelt-profiles0
lsuseractivityd
@(#)PROGRAM:useractivityd  PROJECT:UserActivity-551
MbP?
pbpaste!
pbtypes!
0123456789abcdef
%c%c
com.apple.UserActivity.UniversalClipboard.Sent
clientWriteSize
clientWriteTime
clientWriteSpeed
usedStreams
streamOpenDelay
streamDataSize
streamTransferTime
streamTransferSpeed
totalTime
errorCode
PingNotifier
com.apple.ping
v16@?0@"NSError"8
PingNotifier: %ld outstanding PONG responses; %ld total pongs sent.
com.apple.private.coreservices.lsuseractivityd.bestappsuggestion
pasteboard-server
wasActive
 firstTime
Active
v8@?0
v24@?0Q8Q16
com.apple.private.handoff.ping
PING!
com.apple.private.handoff.pong
PONG!
%@: payloadSize=%ld
SimReceiver
%@:%@
UASimulatorReceiver: %@, %ld items %@
ACTIVE
supressionRec(%@ hard=%@ until=%@ (lastInterestingTime=%@)
(PID:%ld)
BestApp
bestApp
q24@?0@"UAUserActivityInfo"8@"UAUserActivityInfo"16
%@/%@ %@ %@ (and %lu more best app options)
%@/%ld:%@, next=%@/%lld
Diagnostic
com.apple.AppStore
signposts
-noDefaultHandlers
-sharingAdvertiser
-sharingScanner
-activityReceiver
-activityAdvertiser
-bestAppSuggestionNotifier
-userActivityClientProcessesController
-noSandbox
-loggingAdvertiser
-loopback
-enableNetworkUserActivity
-enableCoreSimulator
-disableEntitlmentChecking
-disableReconnectionNotification
-exitAfter
com.apple.useractivityd
Feb 10 2023
11:36:20
Logger
AppsActivityCreator
BestAppController
DarwinNotifier
PBClientController
PingController
com.apple.coreservices.useractivity.reconnection
%@%s
/System/Library/PrivateFrameworks/UserActivity.framework/
shared-pasteboard/
kLocalPasteboardBlobName
kRemotePasteboardBlobName
items/%@/
type-clone
archives
items
v16@?0@"NSURL"8
%@(%@ %@ browserFallback=%@ %ld/%.2fk/%.4f sec %@ %@ %lx w2n=%@ scs=%@)
ProductName
ProductVersion
ProductBuildVersion
UA Test Peer
com.apple.homebuttonless-iphone
com.apple.homebuttonless-ipad
com.apple.ipod
v32@?0@"UTType"8Q16^B24
com.apple.ipod-touch
public.device
/System/Library/CoreServices/SystemVersion.plist
UAReceiverScanTypeUserActivity
UAReceiverScanTypeClipboard
UAReceiverScanTypeBoosted
%s: %@
suspended
resumed
(was already terminated)
%@: %@
com.apple.UserActivity.Handoff.BecameCurrent
activityType
bundleIdentifier
UC Stream Watchdog
error
uuid
public.file-url
data
Invalid message header
packetNum
totalNum
totalSize
supportsCompression
UCHB
numFiles
com.apple.security.sandbox-extension-dict
v16@?0q8
streamStart
streamWaiting
streamSendingRequest
streamWaitingResponse
streamHandleRequest
streamSendingResponse
streamSendingMultiResponse
streamHandleResponse
streamDone
ucStreamState:%d
tagStop
tagFeatureRequest
tagFeatureResponse
tagPasteboardInfoRequest
tagPasteboardInfoResponse
tagPasteboardDataRequest
tagPasteboardDataResponse
tagPasteboardFileRequest
tagPasteoboardFileResponse
tagPasteboardAuxInfo
tagHeartbeat
tag:%d
AAAAAAAA-BBBB-CCCC-DDDD-EEEEEEEEEEEE
EEEEEEEE-DDDD-CCCC-BBBB-AAAAAAAAAAAA
com.apple.UserActivity.UniversalClipboard.Unavailable
reason
SimAdvertiser
### UASimulatorAdvertiser:
ReplayCreator
ReplayController: ITEM=%@
com.apple.UserActivity.UniversalClipboard.Requested
payloadSize
transferTime
transferSpeed
streamOpenTime
cancelled
underlyingErrorCode
numberOfItems
isFileCopy
isAsyncTransfer
remoteDeviceType
Unknown
cornerActionManagerQ
idleDetermination
updateAdvertisedItems
SuspendAdvertisingIdleTracker
v12@?0B8
q24@?0@"UAClientController"8@"UAClientController"16
because the item contains an unsynchronized cloud document item.
dimmed 
uilock 
alwaysPick 
(activityAdvertisingAllowed = NO) 
(disabled in System Preferences) 
v20@?0@"NSObject"8B16
com.apple.screensaver.didstart
com.apple.screensaver.didstop
com.apple.language.changed
v12@?0i8
com.apple.backboardd.backlight.changed
userInactivePowerAssertion
SCREEN: %s
DIMMED
active
screenDimmedPowerAssertion
DEVICELOCK: %s
LOCKED
unlocked
deviceUILockAssertion
kLSUserActivityDebuggingInfoCurrentAdvertisedItem
kLSUserActivityDebuggingInfoLastAdvertisedBytes
kLSUserActivityDebuggingInfoAdvertising
Dynamic User Activities: (domain=%@) %@
Manager status: pid=%lld, uid=%lld, uptime=%@ %@ (Version %s, built %s %s %s)
11:37:07
q24@?0@"UAAdvertiser"8@"UAAdvertiser"16
ADVERTISING:
*** No UAAdvertisers defined at present, so no advertising is taking place.
RECEIVING:
No UAReceivers defined at present, so no activities will be received.
Manager status: pid=%lld, uid=%lld, uptime=%@ %@ runtime=%@ (Version %s, built %s %s %s)
### ADVERTISERS (%ld total) %@ nextCheck=%@
(SUSPENDED)
### RECEIVERS (%ld total)
### AdvertiseableItems ( that might be broadcast to other machines/remind me later)
UAUserActivityAdvertiserHasMoreActivities
- %@%@%@
(advertised) 
(more items available) 
CornerActionItems (potential items to appear on this device as resumable from other devices)
- %@
Pinned Activity Info
### NOTIFIERS (%ld total) nextCheck=%@
### HANDLERS: (%ld total)
Idle determination:%s suspended=%s%s%s%s pick=%ld/%@ idle=%ld/%@ bestApp=%ld/%@
 userIdle
 dimmed:YES
 locked:YES
PERF:%@
 - %@
NSTemporaryDirectory=%@
PROJECT:UserActivity-
v24@?0@"NSString"8^B16
com.apple.UserActivity.Handoff.WasContinued
suggestedActionType
transferDurationSec
canceled
broweserFallback
webToNative
supportsContinuityStreams
interactionType
unknown
command-tab
dock
notification-center
lock-screen
multi-tasker
proxy-object
spotlight
com.apple.useractivity.remotegenerationresponse
pasteboard-fetch
Info Requested
Info Received
Data Requested
Data Received
Error
Canceled
v24@?0@"NSData"8@"NSError"16
v24@?0@"UASharedPasteboardInfo"8@"NSError"16
pasteboard-server-remote-gen
com.apple.coreservices.uauseractivitypasteboardclient.xpc
com.apple.private.coreservices.useractivityd.sharedpasteboard
com.apple.coreservices.uasharedpboardclientq
/System/Library/PrivateFrameworks/UserActivity.framework
com.apple.continuitypasteboard
UASharedPasteboard
v24@?0@"NSInputStream"8@"NSOutputStream"16
v24@?0@"UASharedPasteboardInfoWrapper"8@"NSError"16
v32@?0@"<UCStreamCoder>"8Q16@"NSError"24
v32@?0@"NSInputStream"8@"NSOutputStream"16@"NSError"24
main-label.title
Localizable
main-label.default-title
cancel-button.title
com.apple.UserActivity.UASharedPasteboardiOSUI
##### Screen Sharing session in progress, Universal Clipboard is disabled: %lu #####
##### Continuity Pasteboard: Remote Pasteboard:%@, Local generation=%ld, %@reflection:%@
Available
Unavailable
SCREENSHARING 
  %@
Item: %@ "%@"
file
clipboardReadStream
clipboardWriteStream
PingCreator
PingCreator:%@
%@.%@
FrameworkBundleID
AssertType
PreventUserIdleSystemSleep
AssertName
TimeoutSeconds
TimeoutAction
TimeoutActionTurnOff
-[UATimedPowerAssertions updateTimeUntilAssertionRelease:]
PowerAssertions:
 %@{%@/%@}
ACTIVE:
UATimedPowerAssertionsMapTableQueue
UATimedPowerAssertionsTimerQueue
SimCreator
(sim-rebroadcasted-item):%@ %@ %@
(inactive) 
com.apple.UserActivity.Handoff.WasSuggested
UCFilePackagerReadQ
Replay
ReplayAdvertiser
ReplayReceiver
iPhone5,1
Mac OS X
14A100
PEER
Orangeish
Greenish
BROADCAST $%@ %@
http://
HELP
COMMANDS: ...
 - ADVERTISEITEM:<tag> <activitytype> [<archivedUserActivityData>]
HANDOFF
VERSION
STARTUP
TERMINATE
ADVERTISEITEM
PAYLOAD
PULL
REMOVEITEM
PEERINFO
SF[$
RECEIVE
BROADCAST
REQUESTPAYLOAD
RETURNPAYLOADERROR $%@ %@
RETURNPAYLOAD $%@ [$%@]
v32@?0@"NSUUID"8@"NSData"16@"NSError"24
RETURNPAYLOAD
REQUESTPAYLOAD $%@
0123456789abcdefABCDEF$
0123456789abcdefABCDEF-
strings
Localization
PairedAdvertiser
dummy_account@me.com
simulator
iOSSimulator1,1
iOSSimulator
14A101
iOS Simulator
com.apple.coreservices.lsuseractivity.simulatorsupport
(ERROR %d/%s for simulator %@
com.apple.UserActivity.UniversalClipboard.TypesRequested
ActivityAdvertisingAllowed
ActivityReceivingAllowed
ClipboardSharingEnabled
MultiHandoffEnabled
UserIdleInterval
UserIdleRemovalDelay
MinimumTimeForAnAdvertisementToLive
MinimumTimeToLiveAfterRemovingAdvertisement
RecentlyEligibleItemInterval
LastActiveItemRemovalDelay
ScreenSaverRemovalDelay
ScreenSaverPasteboardAdvertisementDelay
ScreenDimRemovalDelay
ScreenDimPasteboardAdvertisementDelay
DeviceLockAdvertisementDelay
DeviceLockPasteboardAdvertisementDelay
CornerItemSupressionInternal
BestAppSuggestionSupressionIntervalForUnchangingItem
AdvertisedItemWhichIsWebBrowserIntervalToRememberEarlierActivities
IntervalToAskClientWithUnsynchronizedDocumentsToUpdate
MaximumTimeoutAfterAdvertisingEndsThatActivityCanBeResumed
CornerItemTimeout
UACornerActionItemAdditionalTimeToLiveAfterValidIntervalExpires
UACornerActionItemMaximumTimeForBTLEItemToLive
UAReceivedBTLEItemTimeToLiveAfterDeviceLostIfPayloadIsQueued
ActivePayloadUpdateInterval
MaximumTimeoutToWaitForClientProcessToUpdateActivityInformation
MaximumActivityPayloadSizeInBytes
ActivityPayloadWarningSizeInBytes
MinimumIntervalBetweenAdvertisements
MaximumAdvertisementsPerTimeInterval
MaximumAdvertisementsTimeInterval
EnableHandoffInPowerSaverMode
ActivityBTLESharingEnabled
LoggingAdvertiserEnabled
UASharedPboardLocalAdvertisementTime
UASharedPboardLocalClearedAdvertisementTime
UASharedPboardRemoteAvailableTimeout
UASharedPboardLocalReflection
UASharedPboardEmbeddedPayloadSizeLimitInBytes
UASharedPboardShowUIDelayInSec
UASharedPboardUIMinimumDurrationInSec
UASharedPboardHideUIDelayInSec
PayloadFetchResponseDelay
TypeRequestTimeout
PasteRequestTimeout
PasteboardStreamWatchdogTimeout
HandoffRequestTimeout
TimeRemainingDelay
IgnoreLostDevice
IgnoreBluetoothDisabled
DEBUGValidatePayloadFetchTimeInterval
DEBUGValidateRetryPayloadFetchFailureInterval
DEBUGValidateSampleResponseMinimumActivityPayloadSizeInBytes
DEBUGValidateSampleResponseMaximumActivityPayloadSizeInBytes
DEBUGAdditionalPayloadReceiveTimeInterval
DEBUGUserActivityTimeOffset
DEBUGForceNewPayloadEncoder
DEBUGForceOldPayloadEncoder
DEBUGDontSendActivityTitle
DEBUGReadvertiseImmediately
DEBUGEnablePinging
DEBUGEnablePrefetch
DEBUGCrossoverAllActivities
DEBUGIgnoreAppsUsedForDevelopment
EnableDebugging
EnableDebugLogFile
EnableSharingFramework
EnableNetworkControlListener
EnableAutomaticRendevousPairing
NetworkControlListenerPort
UserIdleRemoveDelay
SystemIdleRemovalDelay
RendevousPairingType
 %@=%@ (%@)
 %@=%@
Defaults: (domain=%@) %@
com.apple.system.lowpowermode
LocalReceiver
LocalItems:%@
_UALOGGINGCATEGORY
main
com.apple.useractivity
UAUserActivity
:com.apple.
com.apple.
NSUserActivityTypeBrowsingWeb
_UAUSERACTIVITYCREATION
com.apple.coreservices.lsuseractivitymanager.xpc
_UAUSERACTIVITYBESTAPP
com.apple.coreservices.lsbestappsuggestionmanager.xpc
_UAUSERACTIVITYPASTEBOARD
com.apple.coreservices.uasharedpasteboardmanager.xpc
_UAUSERACTIVITYPASTEBOARDAUX
com.apple.coreservices.uasharedpasteboardaux.xpc
com.apple.coreservices.uasharedpasteboardcontroll.xpc
Logging
%@/Logs/Handoff/
%@/UALoggingAdvertiserItems.log
Advertisable:%@
ITEM:%@ %@ [0x%@]
ActivityLogger: Logging to %@.
UALoggingAdvertiser: ADVERTISING RESUMED.
UALoggingAdvertiser: ADVERTISING SUSPENDED.
(%@, %@)
layoutUpdate
v16@?0@"NSDictionary"8
v32@?0@"FBSDisplayLayoutMonitor"8@"FBSDisplayLayout"16@"FBSDisplayLayoutTransitionContext"24
q24@?0@8@16
com.apple.lock-screen
LSLivePastProcessExit
 and possibly change advertisement.
APP:%@, %@ %s
(update)
APP:- %s
APP:- (was %@) %s
com.apple.coreservices.ping
options.%@
##### Client processes: %ld clients
 Layout:
 car:
main:
q24@?0@"UAUserActivityClientProcess"8@"UAUserActivityClientProcess"16
 - %s%@
FRONT 
v32@?0@"NSString"8Q16^B24
 Order:{
%@/%@ 
pbpaste
pbpaste!
pbpaste2
pbtypes!
pbtypes
userActivityBTStatus
v32@?0@"NSObject"8@?<v@?@"NSObject"B>16^B24
bluetoothStatusQ
com.apple.UserActivity.baseEvent
 => 
0000000000
teamID
type
BTLEUserActivityDataEncoding: userInfo=%@ %@%@%@%@
stream=%@
webPageURL=<private>
 {teamID=%@ activityType=%@}
additional=%@
SharingReceiver
SharingReceiverPeriodic
SCANNING:%s%s%s%s
userActivity 
clipboard 
 SUSPENDED
SCANNING:Found device %@ %@%s
 defaultPaired
v16@?0@"NSTimer"8
SCANNING:Lost device %@ %@%s
v24@?0^v8^{__CFError=}16
v20@?0C8^v12
-[UASharingReceiver receiveAdvertisement:scanner:]
UASharingReceiver.m
advertisement
advertisement.device
iPhone
iPad
UAPasteboardAvailable
UAPasteboardVersionBit
SCANNING:Received %@ %@ %@ from %@/%@
SCANNING:Received %@ (no match) from %@/%@
handoff-more_items
SharingBTLE receiver %s%s%@%@ %@%@
SUSPENDED
DISABLED
 Clip
(NO SFActivityScanner) 
 (Bluetooth disabled)
%ld scanners
 - %@%@%@ app:%@ %@ data=%@, from %@ at %@ remove at %@%s%s
 (PayloadReq)
 (PayloadAv)
 ActiveDevices:
, pb
(%@,%@%@)
PBDONE
Invalid delimiter before pbinfo
Invalid delimiter before pb data
com.apple.private.canmodifyanyuseractivity
NOTIFICATION#
UAUserActivityItemIsNotActiveKey
com.apple.GameController
persistentID
BTLEItem:%@ %@%@ id=%@ when=%@ %@device="%@" modelCode=%@ deviceType=%@
%s%s%s%s/%lx
 webPage
 cloud
 autopull
remove:%@ 
 options=%@
 payload=$%@
 payloadRequested
 payload NA
UASharingBTLEItem:%@ %@/%@ %@
Last BTLE payload fetched for item %@, at %@, from %@
useractivity-team-identifier
com.apple.developer.team-identifier
application-identifier
UAProxiedBundleIdentifier
%@ { type = %@; uuid = %@;  activityType = "%@"; userInfo = %@; %@%@ %@ eligible=%@}
 webPageURL=<private>
 referrerURL=<private>
!eligibleForHandoff
%@ %@ %@ .userInfo=%@ payloads=%ld
%@%@%@ %@ %@%@%@%s%s%s %@%@%@
 dirty*
 !handOff
 AlwaysPickPriority=%li 
 cloudDoc
 unSynchCloudDoc
 fileProv
 url=%@
url=<private>
 referrer=%@
referrer=<private>
com.apple.UserActivity.UniversalClipboard.Available
com.apple.UserActivity.Handoff.WasDiscovered
fakeAppleID@apple.com
version
payload
options
device
MockAdvertisement($%@/%@ from %@)
com.apple.private.coreservices.lsuseractivityd.LSAlwaysPick
com.apple.private.coreservices.canopenactivity
com.apple.private.coreservices.cangetcurrentactivityinfo
com.apple.private.coreservices.canalwaysadvertise
com.apple.private.coreservices.alwaysEligibleEvenWhenInBackground
com.apple.private.coreservices.allowedToMatchUserActivities
com.apple.private.coreserivces.allowedToMatchUserActivities
Application
com.apple.coreservices.useractivity.client-connection
com.apple.security.app-sandbox
com.apple.application-identifier
UAUserActivityDebugStateChanged
com.apple.coreservices.useractivityd
ActivityAdvertising
Allow process to update handoff payload
v28@?0@"UAUserActivityInfo"8B16@"NSError"20
v32@?0@"UAUserActivityClientPendingUpdateTask"8Q16^B24
UserActivityClient(pid=%d/%@ uuids=%@)
CFBundleIdentifier
com.apple.private.useractivity.allowedtosetbundleidentifier
%@:%@:%@
entitlement
stream=%@ 
NULL
(already current)
, and updating advertisment.
private
 iCloudDoc
 unSynchronizediCloudDoc
%@ pid=%d currentActive=%@%@%@%@
(dirty) 
proxyAs=%@ 
 lastFront=%@
%@%s 
 (dirty)
ReplayRendevousHandler
_handoff._tcp.
local
Network, %@  %@
listening, port=%ld
browsing for %@ in %@
Handoff:%@
NSNetServicesErrorDomain
NSNetServicesErrorCode
From %@
From host
__kCFStreamPropertyPeerAddress
HANDOFF v%g %@
PEERINFO SF[$%@]
VERSION v%g %@
# Terminating connection because we seem to already have a connection to this peer.
TERMINATE
NetworkReplay:%@%@ peer:%@/%@ %@
TERMINATED
%@/%ld
%@..(%ld)..%@
.. %ld ..
forever
%ld seconds
roughly %ld minutes
roughly %ld hours
roughly %ld days
a long time
%2.1g seconds
%2ld seconds
%3ld seconds
roughly %2ld minutes
roughly %2ld hours
UserActivity
NotificationType
HardCodedType 
HeroApp 
OpenURL 
UASuggestedActionType=%ld
https:
com.apple.mobilesafari
pasteboard-streams
com.apple.finder.noderef
v24@?0Q8@"NSError"16
-[SharingBTLEAdvertisementPayload initWithType:string:dynamicType:teamID:webpageURL:options:isCurrent:when:versionFlags:]
SharingAdvertisementPayload.mm
[hashedActivityType length] == sizeof( _bytes.hashedAdvertisementBytes )
-[SharingBTLEAdvertisementPayload setPayloadBytes:]
[payloadBytes length] == sizeof( sizeof( _bytes.hashedAdvertisementBytes ) )
$%@/%@%d%@%@%s%s%s
 pb-1
 pb-0
%@#%@
NOTIFICATION
http
https
UASharedPasteboardInfoWrapperPBInfoKey
UASharedPasteboardInfoWrapperExtraDataKey
UASharedPasteboardInfoWrapperExtraTypeKey
UASharedPasteboardInfoWrapperErrorKey
UASharedPasteboardInfoWrapperProtocolVersionKey
%@: Extra Data Type: %ld, Error: %@, PBInfo: %@
<private>
{?=[8I]}
[pid=%d/%d uid=%d/%d gid=%d/%d asid=%d sb=%@]
<%@ %p> %@
SharingAdvertiser
UASharingAdvertiser
sharingUpdate
advertisingPeriodic
AdvertiserCurrent
BTLEAdvertisement
 FORCE
FORCE
ADVERTISING:%@ %@ %@/ %@
ADVERTISING:- (was %@/%@)%s
%ld%c%ld
iPhone OS
macOS
OS X
v24@?0@"NSSet"8@"NSError"16
Handoff
Pasteboard
PAIRED_DEVICES:Changed, now have %ld devices paired.
PAYLOAD_REQUESTED:%@, %@ from %@
com.apple.fetchsamplepayload
randomdata
Sample
NO-TEAM-ID
com.apple.fetchsamplepayloadactivity
EncodedPayloadSize
Sharing.framework Advertiser:
(No SFActivityAdvertiser) 
 ** Bluetooth is disabled but IgnoreBluetoothDisabled is set, so the activity will be advertised. **
 ** Bluetooth is disabled so no activity will be advertised. **
 ** LowPowerMode is enabled so no activity will be advertised. **
 ** Activity advertising is disabled on this device. **
** SUSPENDED:
%ld sfActivityAdvertisers
, run=%ld times/%@ periodic=%ld/%@ %@%@%@
(current) 
+ Advertising Local Pasteboard.
ClipboardSharingDisabled
 ADVERTISING: %@%@ %@ /, data=%@, at %@
 LAST:%@, at %@
 LAST: nil
 No AppleID, %@
 AppleID:%@, devices%s%s:
(no handoff)
(no pasteboard)
v24@?0@"NSString"8@"NSError"16
%@/%@-%@-%@:+%ld, 
[%@/%@-%@-%@], 
%@%@
%@/%@/%@/%@ 
Watch OS
watchOS
TVOS
tvOS
SimController
simQ
IN FRONT
not in front
 - SIMULATOR:%@
com.apple.private.coreservices.lsuseractivityd.admininterface
com.apple.private.useractivity.sysdiagnose
STARTING pid=%d
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
EnableLogging
en_US
HH:MM:ss.SSSS
%@ %@
(user=%.5gs/system=%.5gs)
com.apple.Preferences
sharing
screensaver
screendim
useractive
best
v24@?0@"UAUserActivityInfo"8^B16
status
simulatorStatus
This platform does not support the iOS simulator.
recentEligible
Client: %@ %@
Command %@ not recognized
clear
### STATUS
### RECENT ACTIONS ###
ReplayManager
%.1f seconds %s
from now
%ld seconds %s
%ld minutes %s
at %2.2ld:%2.2ld
(nil)
%4.1f seconds
%2ld minutes
%2.3f hours
%2ld days, %ld hours
%5ld days
UARemotePasteboardDidSendLocalEvent
UAPingNotifier
UABestAppSuggestionController
NSXPCListenerDelegate
NSObject
UASharedPasteboardFileProvider
NSFileProvider
PowerManagerIdleTracker
UAPingUserActivityInfo
UASimulatorReceiver
UADiagnosticUtils
UAActivityReplayAdvertiser
UAUserActivityAnalyticsInfo
UABestAppUserActivityInfoSuppressionRecord
UABestAppSuggestionNotifier
UABestAppSuggestionManagerProtocol
UASharedPasteboardDataManager
_LSUserActivityWasContinuedInfo
UAActivityReplayReceiver
UAUserActivityAdditions
UAReceiver
UACornerActionManagerHandler
UALocalCornerActionItem
UAActivityBecameCurrentEvent
UCStreamCoderV2
UAStreamHandlerDelegate
UCFilePacketReceiver
UCStreamCoder
UADebugAdvertisableItem
UADispatchWatchdog
UARemotePasteboardBecameUnavailableEvent
UASimulatorAdvertiser
UAReplayClientController
UARemotePasteboardWasRequestedEvent
UACornerActionManager
UACornerActionManagerDebugInterface
UAPingController
UAClientController
UAActivityWasContinuedEvent
UADispatchScheduler
UAActivityNotifier
UAActivityNotifierProtocol
UCRemotePasteboardGeneration
UAPasteboardClientProtocol
UASharedPasteboardClientController
UASharedPasteboardManagerProtocol
SFCompanionAdvertiserDelegate
UASharedPasteboardAUXProtocol
UASharedPasteboardControllProtocol
UAStreamHandler
NSStreamDelegate
UAPingClient
UATimedPowerAssertions
UCExtractor
UASimulatorAdvertisementCreator
UAActivityWasSuggestedEvent
UCFilePackagerPacket
UCFilePackager
UAActivityReplay
NSNetServiceDelegate
SFActivityAdvertiserDelegate
SFActivityScannerDelegate
UALocalizedString
UAPairedSFActivityAdvertiser
UAPairedSFActivityScanner
UASimulatorController
UAPeerDevice
UARemotePasteboardTypeInfoRequestedEvent
UAUserActivityDefaults
UALocalItemReceiver
UADiagnosticManager
UAUserActivityClientProtocol
UAUserActivityClientResponseProtocol
UABestAppSuggestionManagerResponseProtocol
UASharedPasteboardManagerResponseProtocol
UALoggingAdvertiser
UABestAppSuggestionDarwinNotifier
FBSDisplayLayoutElement
FBSUIApplicationLayoutElement
SBSDisplayLayoutElement
UAUserActivityClientProcessesController
UASharedPasteboardDataRequester
UABluetoothStatus
UAAnalyticsEvent
UserActivityToBTLEPayload
UASharingReceiver
UASharedPasteboardInputStreamManager
SharingBTLESuggestedItem
UASharedPasteboardActivityInfo
UASharedPasteboardOutputStreamManager
UAUserActivityAdvertisableItem
UAAdvertisableItem
UARemotePasteboardBecameAvailableEvent
UAActivityWasDiscoveredEvent
UAMockActivityAdvertiser
UAMockActivityScanner
UAMockActivityAdvertisement
NSSecureCoding
NSCoding
UAUserActivityClientPendingUpdateTask
UAUserActivityClientProcess
UANetworkReplayRendevousHandler
NSNetServiceBrowserDelegate
UANetworkReplayController
UCArchiver
UAPBStreamCoderV1
SharingBTLEAdvertisementPayload
NSCopying
UASharedPasteboardInfoWrapper
UASimulatorSuggestedItem
UAAuditToken
UASharingAdvertiser
UASimulator
UAReplayAdvertisableItem
UADispatchReceiver
ActivityManagerDebugRecentActionItem
ActivityManagerDebuggingManager
UAResumableActivitiesAdministrativeProtocol
UAResumableActivitiesSysdiagnoseSupportProtocol
UAAdvertiser
BTLEPayloadData
DEBUG_lastEligibleItems
T@"NSArray",R,C
T#,R
T@"NSDate",&,V_dontHideUIBefore
T@"<SFActivityScannerDelegate>",V_delegate
T@"NSDate",C,V_hardSupressUntil
T@"<UCFilePacketReceiver>",W,V_receiver
T@"NSMutableDictionary",&,V_userActivityAdvertisableItemsByUUID
T@"BKSApplicationStateMonitor",&,V_appStateMonitor
T@"NSUUID",C,V_uniqueIdentifier
T@"FBSDisplayLayoutMonitor",R,&,V_mainDisplayLayoutMonitor
T@"UASharedPasteboardClientController",&,V_pasteboardController
T@"NSArray",C,V_carPlayScreenBundleIdentifiersInOrder
T@"UAUserActivityInfo",&,V_item
T@"NSArray",C,V_lastItemWhens
T@?,R,&,V_block
T@"NSArray",R
TB,R,V_allowedToUseLSAlwaysPick
T@"NSArray",R,C,V_DEBUG_lastEligibleItems
TB,V_shouldStop
T@"NSBundle",&,V_uaBundle
TB,V_userActive
T@"NSData",&,V_extraData
TQ,R,V_nextTime
T@"NSData",&,V_packetData
TQ,V_inputState
T@"NSData",C,V_advertisementPayload
Tq,R,V_priority
T@"NSData",C,V_userInfoPayload
Tq,V_generation
T@"NSDate",&,N,V_beginTimeForNonActiveAdvertisement
_active
T@"NSDate",&,V_holdPowerAssertionUntil
_advertisedItem
T@"NSDate",&,V_pingStart
_client
T@"NSDate",C,V_dontPrefetchBefore
_coders
T@"NSDate",C,V_ignoreLockScreenUntil
_deviceUILocked
T@"NSDate",C,V_lastInterestingTime
_domain
T@"NSDate",C,V_lastUserActiveTime
_expectedLength
T@"NSDate",C,V_supressUntil
_inData
T@"NSDate",C,V_when
_locked
T@"NSDate",R,C,V_epochEnd
_os_transaction
T@"NSDictionary",&,V_options
_pbinfo
T@"NSDictionary",R,C
_periodicUpdate
T@"NSError",&,V_streamError
_poweredOnValid
T@"NSFileHandle",&,V_archiveReadHandle
_reason
T@"NSFileHandle",&,V_file
_shouldTryWrite
T@"NSFileHandle",&,V_sendingDataFile
_stream
T@"NSInputStream",&,V_inputStream
_streamOpenTime
T@"NSMutableArray",&,V_advertisementTimes
_teamID
T@"NSMutableArray",&,V_messageQueue
_totalBytesSent
T@"NSMutableArray",&,V_pendingUpdateTasks
_updatePairedDeviceCapabilities
T@"NSMutableArray",&,V_requestedArchives
additionalItems
T@"NSMutableData",&,V_outMessage
allowedToGetCurrentActivityInfo
T@"NSMutableData",&,V_readBuffer
appStateMonitor
T@"NSMutableData",&,V_writeBuffer
arrayWithArray:
T@"NSMutableDictionary",&,V_currentAdvertisedItemOtherAdvertisedItems
baseURL
T@"NSMutableDictionary",&,V_lockTokens
bluetoothStatus
T@"NSMutableDictionary",&,V_providerRequests
bundleWithPath:
T@"NSMutableDictionary",&,V_supressedUntil
cleanupForItem:
T@"NSMutableDictionary",&,V_uuidItemMap
clearLocalPasteboardInformation
T@"NSMutableSet",&,V_controlConnections
clientIsActive:
T@"NSMutableSet",R,C,V_dirtyUUIDs
clientWriteTime
T@"NSMutableSet<UCStreamCoder>",&,V_coders
clients
T@"NSNetServiceBrowser",&,V_browserLookup
containsObject:
T@"NSObject<OS_dispatch_group>",R,&,V_executingGroup
controlListener
T@"NSObject<OS_dispatch_queue>",&,V_clientq
current
T@"NSObject<OS_dispatch_queue>",&,V_fetchQ
currentPerfTime
T@"NSObject<OS_dispatch_queue>",&,V_queue
currentSendData
T@"NSObject<OS_dispatch_queue>",R,&,V_dispatchQ
dataWithLength:
T@"NSObject<OS_dispatch_queue>",R,&,V_queue
dateWithTimeInterval:sinceDate:
T@"NSObject<OS_dispatch_semaphore>",&,V_nextPacketReady
debugCornerItem
T@"NSObject<OS_dispatch_semaphore>",&,V_pongSem
doGetCurrentAdvertisedItemUUID:
T@"NSObject<OS_dispatch_source>",&,V_heartBeatTrigger
doSetRemotePasteboardAvailable:
T@"NSObject<OS_dispatch_source>",&,V_source
enabled
T@"NSObject<OS_dispatch_source>",R,&,V_timerSource
fileRecvHandler
T@"NSOperationQueue",R
hideProgressUI:
T@"NSOutputStream",&,V_outStream
inMessageLength
T@"NSOutputStream",&,V_stream
initWithString:
T@"NSProgress",&,V_progress
isAsyncTransfer
T@"NSSet",&,V_typesToReceive
isDirty
T@"NSSet",C
localReflection
T@"NSSet",C,V_pairedDevices
manager
T@"NSSet",C,VscanningForTypes
modelIdentifier
T@"NSSet",R,C
netServiceBrowser:didNotSearch:
T@"NSString",&,N,V_remoteDeviceType
nextPacketReady
T@"NSString",&,V_currentRemoteBlobPath
T@"NSString",&,V_logFileDirectoryPath
numberWithLong:
T@"NSString",&,V_uuid
options
T@"NSString",C,V_applicationIdentifier
pasteAdvertiser
T@"NSString",C,V_domain
pasteboardTypes
T@"NSString",C,V_lastItemStr
periodicCleanup
T@"NSString",C,V_peerName
pongSem
T@"NSString",C,V_str
propertyForKey:
T@"NSString",C,V_title
read:maxLength:
T@"NSString",C,Vname
release
T@"NSString",R,C
removeReceiver:
T@"NSString",R,C,V_bootstrapName
returnInfoEarly
T@"NSString",R,C,V_teamIdentifier
sb_isStashedPIP
T@"NSTimer",&,V_backupTimer
sendFoundDevice
T@"NSTimer",&,V_pongTimer
sendingDataFile
T@"NSTimer",&,V_showUITimer
T@"NSURL",&,V_destURL
setAvgPingTime:
T@"NSURL",R,C
setBackupTimer:
T@"NSUUID",&,V_lastUUID
setCancellable:
T@"NSUUID",C,V_itemUUID
setDeviceColor:
T@"NSUUID",C,V_uuid
setInputStream:
T@"NSUUID",R,C,V_activityUUID
setLastItemStr:
T@"NSUserDefaults",R,&,V_userDefaults
setPayloadRequestedCompletions:
T@"NSXPCConnection",&,V_clientConnection
setProductName:
T@"NSXPCConnection",&,V_connection
setRemoveAfter:
T@"NSXPCConnection",R,W,V_connection
setSendingInfo:
T@"NSXPCListener",&,V_bestAppsListener
setStr:
T@"NSXPCListener",&,V_xpclistener
setStreamsData:
T@"PowerManagerIdleTracker",&,V_userIdleTracker
setTypesToSend:
T@"SFActivityScanner",&,V_scanner
setUserActivityNotificationRef:
T@"SFCompanionAdvertiser",&,V_pasteAdvertiser
setWebToNative:
T@"SFPeerDevice",&,V_lastSeenPasteboardDevice
setWriteBuffer:
T@"SFPeerDevice",&,V_ourPeerDevice
setup:interval:
T@"SFPeerDevice",&,V_peeredDevice
showProgressUI:
T@"SharingBTLEAdvertisementPayload",&,V_currentAdvertisementPayload
T@"SharingBTLEAdvertisementPayload",C,V_lastAdvertisementPayload
streamStartTime
T@"UAActivityReplay",&,V_controller
streams:didWriteMessageWithTag:
T@"UAActivityReplayAdvertiser",&,V_advertiser
stringFromDate:
T@"UAAuditToken",R,&,V_auditToken
synchronizeFile
T@"UACornerActionManager",&,Vmanager
teamIDs
T@"UACornerActionManager",W,V_manager
timerExpiration
T@"UADispatchScheduler",R,&,V_layoutUpdateScheduler
tryWriteMessage
T@"UADispatchScheduler",R,&,V_nextScheduleUpdate
update:
T@"UADispatchScheduler",R,&,V_nextUserIdleDeterminationScheduler
userIdleTracker
T@"UADispatchScheduler",R,&,V_periodicUpdate
.cxx_destruct
T@"NSArray",C,D
JSONObjectWithData:options:error:
T@"NSArray",R,C,V_receivedItems
T@"<SFActivityAdvertiserDelegate>",V_delegate
T@"NSDate",C,V_currentUntilDate
T@"<UAStreamHandlerDelegate>",W,V_delegate
T@"NSFileHandle",&,V_outputFile
T@"ActivityManagerDebuggingManager",R,&,V_debugManager
T@"NSSet",R,C,D
T@"FBSDisplayLayoutMonitor",R,&,V_carPlayDisplayLayoutMonitor
T@"SFPeerDevice",&,V_pairedPeer
T@"NSArray",&,V_currentLocalPasteboard
T@"UASimulator",R,&,V_simulator
T@"NSArray",C,V_lastItemUUIDs
T@?,C,V_handler
T@"NSArray",C,V_mainScreenBundleIdentifiersInOrder
TB,GisBacklightOn,V_backlightOn
T@"NSArray",R,C,D
TB,V_isSendMode
T@"NSArray",R,C,V_itemsBeingAdvertised
TB,V_systemHasSuspendedScanning
T@"NSData",&,V_currentSendData
TI,V_optionBits
T@"NSData",&,V_inMessage
TQ,R,V_runCount
T@"NSData",C
TQ,V_outputMode
T@"NSData",C,V_streamsData
Tq,V_currentLocalPasteboardSize
T@"NSData",R,C,D
Tq,V_packetSize
T@"NSDate",&,V_dontAdvertiseAsCurrentUntil
_advertiseTypes
T@"NSDate",&,V_lastAdvertismentTime
_alwaysEligible
T@"NSDate",&,V_startTime
_clientIsSigned
T@"NSDate",C,V_epochStart
_device
T@"NSDate",C,V_lastFrontTime
_disableAdminEntitlmentChecking
T@"NSDate",C,V_lastTimePayloadWasRequestedForAdvertisedItem
_executingGroup
T@"NSDate",C,V_removeAfter
_fetchQ
T@"NSDate",C,V_timerExpiration
_itemsLockedSem
T@"NSDate",R,C,D
_mockAdvertiser
T@"NSDictionary",&,V_auxStateInfo
_pbInfo
T@"NSDictionary",C,V_options
_pboardFetchSem
T@"NSError",&,V_error
_pingController
T@"NSError",C,V_error
_proxiedClients
T@"NSFileHandle",&,V_dataFile
_remoteHasFiles
T@"NSFileHandle",&,V_receivingDataFile
_source
T@"NSInputStream",&,V_inStream
_streamDataSize
T@"NSInputStream",&,V_stream
_supressedUntil
T@"NSMutableArray",&,V_archiveQueue
_teamIdentifier
T@"NSMutableArray",&,V_objects
_typesToReceive
T@"NSMutableArray",&,V_queuedPackets
absoluteToNSec:
T@"NSMutableData",&,V_inData
allKeys
T@"NSMutableData",&,V_outputStreamData
alwaysPickValue
T@"NSMutableData",&,V_receivedData
applicationForUserActivityType:
T@"NSMutableDictionary",&,V_archivePackagers
auditTokenValue
T@"NSMutableDictionary",&,V_items
bestCornerItem:
T@"NSMutableDictionary",&,V_possibleItems
browserFallback
T@"NSMutableDictionary",&,V_providers
cleanupCloneDir
T@"NSMutableDictionary",&,V_tmpArchiveWriteFiles
cleanupItemsDir
T@"NSMutableDictionary",R,&,V_proxiedClients
clearRemotePasteboardAvailable:
T@"NSMutableSet",&,V_payloadRequestedCompletions
clientWriteSize
T@"NSMutableSet",R,C,V_pongItems
clientq
T@"NSNetService",&,V_listeningService
conformsToType:
T@"NSObject",&,V_bluetoothStatusCallbackIdentifier
containsString:
T@"NSObject<OS_dispatch_group>",R,&,V_helpersDispatchGroup
creator
T@"NSObject<OS_dispatch_queue>",&,V_dispatchQ
currentCalendar
T@"NSObject<OS_dispatch_queue>",&,V_mainDispatchQ
currentProgress
T@"NSObject<OS_dispatch_queue>",&,V_respQueue
dataHasMessage:
T@"NSObject<OS_dispatch_queue>",R,&,V_mainDispatchQ
dateEpochStart:
T@"NSObject<OS_dispatch_semaphore>",&,V_itemsLockedSem
dealloc
T@"NSObject<OS_dispatch_semaphore>",&,V_pboardFetchSem
destURL
T@"NSObject<OS_dispatch_semaphore>",R,&,V_wasResumed
doSetLocalPasteboardReflection:
T@"NSObject<OS_dispatch_source>",&,V_holdPowerAssertionSourceTimer
enableAutomaticRendevousPairing
T@"NSObject<OS_dispatch_source>",R,&,V_source
entitlementValueForKey:ofClass:
T@"NSObject<OS_os_transaction>",&,V_os_transaction
handler
T@"NSOperationQueue",R,V_providedItemsOperationQueue
ignoredRTimeVal
T@"NSOutputStream",&,V_outputStream
infoRecvHandler
T@"NSProgress",&,V_fetchProgress
interactionType
T@"NSSet",&,V_pasteboardTypes
isAtEnd
T@"NSSet",&,V_typesToSend
isProxy
T@"NSSet",C,D
lowercaseString
T@"NSSet",C,V_teamIDs
maximumTimeoutToWaitForClientProcessToUpdateActivityInformation
T@"NSSet",R,&
needToCallBlock
T@"NSSet",R,V_activeDevicesIdentifiers
netServiceBrowserDidStopSearch:
T@"NSString",&,V_currentLocalBlobPath
notificationRef
T@"NSString",&,V_leaf
numberWithBool:
T@"NSString",&,V_logFilePath
objects
T@"NSString",C,V_activityType
osxUIConnection
T@"NSString",C,V_bundleIdentifier
pasteboardStreamWatchdogTimeout
T@"NSString",C,V_frontBundleID
payloadXferTime
T@"NSString",C,V_name
T@"NSString",C,V_remoteDeviceType
processCommand:
T@"NSString",C,V_teamID
protocolVersion
T@"NSString",C,V_type
recvRap
T@"NSString",R,&
remoteAvailable
T@"NSString",R,C,N
requiresBoosted
T@"NSString",R,C,V_name
T@"NSString",R,V_name
scanner
T@"NSTimer",&,V_localTimeout
sendRap
T@"NSTimer",&,V_remotePboardTimer
session
T@"NSURL",&,V_baseURL
setAuxlistener:
T@"NSURL",C,V_webpageURL
setBacklightOn:
T@"NSURL",R,C,V_providedItemsURL
setBool:forKey:
T@"NSUUID",&,V_uuid
setCurrentAdvertisementPayload:
T@"NSUUID",C,V_peerUUID
setDontAdvertiseAsCurrentUntil:
T@"NSUUID",R,&,V_uuid
setIsUIVisible:
T@"NSUUID",R,C,V_uuid
setLogFilePath:
T@"NSXPCConnection",&,V_auxConnection
setPayloadSize:
T@"NSXPCConnection",&,V_clientNotificationConnection
setRecvHandler:
T@"NSXPCConnection",&,V_osxUIConnection
setReturnEarly:
T@"NSXPCListener",&,V_auxlistener
setShowUITimer:
T@"NSXPCListener",&,V_controlListener
setStreamError:
T@"NSXPCListener",&,Vlistener
setTag:
T@"PowerManagerIdleTracker",&,V_userIsCurrentIdleTracker
setUsedStreams:
T@"SFActivityScanner",R,&,V_scanner
setUuidItemMap:
T@"SFPeerDevice",&,V_device
setWithObjects:
T@"SFPeerDevice",&,V_ourDevice
setXpclistener:
T@"SFPeerDevice",&,V_peer
sharingReceiver
T@"SFPeerDevice",R,C,V_peer
simulatorStatus
T@"SharingBTLEAdvertisementPayload",C,V_advertisementPayload
streamOpenDelay
T@"SharingBTLESuggestedItem",&,VfakeBTLEInjectedItem
streams:didReadMessage:withTag:
T@"UAActivityReplay",&,V_replayManager
stringByAppendingPathComponent:
T@"UAActivityReplayReceiver",&,V_receiver
suspend
T@"UABluetoothStatus",&,V_bluetoothStatus
T@"UACornerActionManager",R,&,V_manager
timeout
T@"UADispatchScheduler",&,V_scheduler
tryStop
T@"UADispatchScheduler",R,&,V_nextScheduleBestAppDeterminationScheduler
tryWriteRawData
T@"UADispatchScheduler",R,&,V_nextUpdateAdvertisedItemsScheduler
uppercaseString
T@"UADispatchScheduler",R,&,V_periodicCleanup
userInfoPayload
T@"UADispatchWatchdog",&,V_watchdog
T@"UALocalItemReceiver",&,V_localReceiver
T@"UAMockActivityAdvertiser",R,&,V_mockAdvertiser
T@"UAMockActivityScanner",R,&,V_mockScanner
T@"UANetworkReplayRendevousHandler",&,V_networkConnectionHandler
T@"UAPairedSFActivityAdvertiser",&,V_pairedAdvertiser
T@"UAPairedSFActivityScanner",&,V_pairedScanner
T@"UAPingClient",R,&,V_client
T@"UAPingController",&,V_pingController
T@"UAPingController",R,&,V_controller
T@"UAPingNotifier",R,&,V_notifier
T@"UARemotePasteboardDidSendLocalEvent",&,V_localInfo
T@"UARemotePasteboardWasRequestedEvent",&,V_pasteInfo
T@"UAReplayClientController",&,V_client
T@"UASharedPasteboardDataRequester",&,V_dataRequester
T@"UASharedPasteboardInfo",&,V_currentLocalTypes
T@"UASharedPasteboardInfo",&,V_pbInfo
T@"UASharedPasteboardInfo",&,V_pbinfo
T@"UASharedPasteboardInfoWrapper",&,V_pboardInfoToSend
T@"UASharedPasteboardInfoWrapper",&,V_pbwrapper
T@"UASharedPasteboardInfoWrapper",&,V_receivedInfo
T@"UASharedPasteboardInfoWrapper",&,V_recvRap
T@"UASharedPasteboardInfoWrapper",&,V_sendRap
T@"UASharedPasteboardInfoWrapper",&,V_sendingInfo
T@"UASharedPasteboardInputStreamManager",&,V_inStream
T@"UASharedPasteboardOutputStreamManager",&,V_outStream
T@"UASharingReceiver",R,&,V_receiver
T@"UASimulator",&,V_simulator
T@"UASimulatorAdvertisementCreator",R,&,V_creator
T@"UASimulatorAdvertiser",R,&,V_advertiser
T@"UASimulatorController",R,&,V_controller
T@"UASimulatorReceiver",R,&,V_receiver
T@"UAStreamHandler",&,V_streamHandler
T@"UATimedPowerAssertions",&,V_assertionForRead
T@"UATimedPowerAssertions",&,V_assertionForWrite
T@"UATimedPowerAssertions",&,V_deviceUILockedPowerAssertion
T@"UATimedPowerAssertions",&,V_preventIdleSleepAssertion
T@"UATimedPowerAssertions",&,V_screenDimmedPowerAssertion
T@"UATimedPowerAssertions",&,V_userInactivePowerAssertion
T@"UAUserActivityAdvertisableItem",R,&,V_currentAdvertisableActivity
T@"UAUserActivityAnalyticsInfo",&,V_info
T@"UAUserActivityClientProcess",W,V_client
T@"UAUserActivityClientProcess",W,V_originatingClient
T@"UAUserActivityClientProcessesController",R,&,V_controller
T@"UAUserActivityInfo",&,N
T@"UAUserActivityInfo",&,V_advertisedItem
T@"UAUserActivityInfo",&,V_currentAdvertisedItem
T@"UAUserActivityInfo",&,V_pinnedUserActivityInfoItem
T@"UCFilePackager",&,V_filePackager
T@"UCRemotePasteboardGeneration",&,V_remoteGeneration
T@?,C,V_block
T@?,C,V_fileRecvHandler
T@?,C,V_infoRecvHandler
T@?,C,V_recvHandler
T@?,C,V_sendErrorHandler
T@?,C,V_wasContinuedBlock
TB,GisBrowserFallback,V_browserFallback
TB,GisCancelled,V_cancelled
TB,GisCurrent
TB,GisFromPairedDevice,V_fromPairedDevice
TB,GisScreenWatcherPresent,V_screenWatcherPresent
TB,N,V_cancelled
TB,N,V_isAsyncTransfer
TB,N,V_isFileCopy
TB,N,V_usedStreams
TB,R
TB,R,D
TB,R,D,GisSandboxed
TB,R,GisBatterySaverModeEnabled,V_batterySaverModeEnabled
TB,R,N
TB,R,N,GisSpringBoardElement
TB,R,N,GisUIApplicationElement
TB,R,N,Gsb_isStashedPIP
TB,R,N,Gsb_isTransitioning
TB,R,V_activitiesShouldCrossover
TB,R,V_allowedToGetCurrentActivityInfo
TB,R,V_allowedToMatchUserActivities
TB,R,V_allowedToUseEligibleEvenWhenInBackground
TB,R,V_allowedToUseLSAlwaysEligible
TB,R,V_allowedToUseUAAlwaysAdvertise
TB,R,V_alwaysEligible
TB,R,V_alwaysPick
TB,R,V_clientIsSandboxed
TB,R,V_clientIsSigned
TB,R,V_frontmost
TB,R,V_shouldAdvertiseHandoff
TB,R,V_shouldAdvertisePasteboard
TB,R,V_terminated
TB,V_active
TB,V_advertiseTypes
TB,V_dataRequested
TB,V_deviceUILocked
TB,V_disableAdminEntitlmentChecking
TB,V_disableEntitlementsCheck
TB,V_enabled
TB,V_firstTime
TB,V_forceScanning
TB,V_hasBeenUsedAtLeastOnce
TB,V_hasFetchedLocalData
TB,V_hasFired
TB,V_isUIVisible
TB,V_locked
TB,V_needToCallBlock
TB,V_payloadRequested
TB,V_pboardBitToAdvertise
TB,V_pingMode
TB,V_receivedDelem
TB,V_receivingSuspended
TB,V_remoteAvailable
TB,V_remoteHasFiles
TB,V_returnEarly
TB,V_returnInfoEarly
TB,V_scheduledForSubmission
TB,V_screenDimmed
TB,V_sendFoundDevice
TB,V_shouldAdvertiseAutoPullActivityList
TB,V_shouldTryWrite
TB,V_supportNetworkPeers
TB,V_supportsContinuityStreams
TB,V_systemHasSuspendedAdvertisements
TB,V_systemIsIdle
TB,V_userIsCurrent
TB,V_wantsBestAppChangedNotifications
TB,V_webToNative
TC,D
TC,V_allowedToAccessAnyItem
TI,R,D
TI,R,V_assertion
TI,R,V_commandPort
TI,V_holdPowerAssertion
TI,V_inMessageLength
TI,V_simulatorPort
TQ,N,V_clientWriteSize
TQ,N,V_clientWriteSpeed
TQ,N,V_clientWriteTime
TQ,N,V_payloadSize
TQ,N,V_payloadXferSpeed
TQ,N,V_payloadXferTime
TQ,N,V_streamDataSize
TQ,N,V_streamDataXferSpeed
TQ,N,V_streamDataXferTime
TQ,N,V_streamOpenDelay
TQ,N,V_streamOpenTime
TQ,N,V_totalTime
TQ,R
TQ,V_changeAdvertisementThreadSpinCount
TQ,V_currentLocalGeneration
TQ,V_dataSent
TQ,V_debugType
TQ,V_interactionType
TQ,V_localSendStartTime
TQ,V_nextTimer
TQ,V_pasteFetchStartTime
TQ,V_payloadSize
TQ,V_payloadXferTime
TQ,V_reason
TQ,V_recentActionsStateHandler
TQ,V_state
TQ,V_streamOpenStartTime
TQ,V_streamStartTime
TQ,V_streamXferStartTime
TQ,V_suggestedActionType
TQ,V_timeRemaining
TQ,V_totalBytesReceived
TQ,V_userActivityNotificationRef
T^B,V_infoSent
T^{__CFUserNotification=},V_notificationRef
Td,V_avgPingTime
Td,V_frequency
Td,V_interval
Td,V_payloadAvailabilityDelay
Td,V_timeout
Td,V_transferDuration
Td,V_transferSpeed
Ti,R,D
Ti,V_backlightLevelToken
Ti,V_systemPreferenceChangedToken
Ti,V_uiLockStatusToken
Tq,N,V_errorCode
Tq,N,V_numberOfItems
Tq,N,V_state
Tq,N,V_underlyingErrorCode
Tq,R,N
Tq,R,V_alwaysPickValue
Tq,V_advertisementVersion
Tq,V_byteIndex
Tq,V_bytesRead
Tq,V_bytesReceived
Tq,V_currentPacketNumber
Tq,V_errorCode
Tq,V_expectedLength
Tq,V_extraDataType
Tq,V_inMessageTag
Tq,V_lastAdvertisedGeneration
Tq,V_lastSeenPasteboardVersionBit
Tq,V_nextPacketNumber
Tq,V_nextPacketToDeliver
Tq,V_outMessageTag
Tq,V_packetNumber
Tq,V_packetPreLoadCount
Tq,V_pongCount
Tq,V_protocolVersion
Tq,V_sendingCoderVersion
Tq,V_streamProtocolVersion
Tq,V_tag
Tq,V_totalBytesReceived
Tq,V_totalBytesSent
Tq,V_totalPacketCount
Tq,V_totalSendSize
T{?=[8I]},R,V_auditTokenValue
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
T{timeval=qi},R,V_ignoredRTimeVal
UIApplicationElement
URLByAppendingPathComponent:
URLByDeletingLastPathComponent
URLWithDataRepresentation:relativeToURL:
URLWithString:
URLWithString:relativeToURL:
UTF8String
UUID
UUIDString
_DEBUG_lastEligibleItems
_UABundle
_activeDevices
_activeDevicesIdentifiers
_activitiesShouldCrossover
_activityManagerListener
_activityType
_activityUUID
_addFileProvider:completionHandler:
_addItem:scheduleUpdates:
_additionalItems
_additionalUserActivityAdvertisableItems
_advertisableItems
_advertisePayload:
_advertisePayload:force:
_advertisePayload:force:sfAdvertiser:
_advertisementPayload
_advertisementTimes
_advertisementVersion
_advertiser
_advertisers
_advertisingSuspended
_allowedToAccessAnyItem
_allowedToGetCurrentActivityInfo
_allowedToMatchUserActivities
_allowedToUseEligibleEvenWhenInBackground
_allowedToUseLSAlwaysEligible
_allowedToUseLSAlwaysPick
_allowedToUseUAAlwaysAdvertise
_alwaysPick
_alwaysPickValue
_appStateMonitor
_applicationIdentifier
_archivePackagers
_archiveQueue
_archiveReadHandle
_assertion
_assertionForRead
_assertionForWrite
_attachInProcess
_attached
_auditToken
_auditTokenValue
_auxConnection
_auxStateInfo
_auxlistener
_avgPingTime
_backlightLevelToken
_backlightOn
_backupTimer
_baseURL
_batterySaverModeEnabled
_beginTimeForNonActiveAdvertisement
_bestAppsListener
_block
_bluetoothStatus
_bluetoothStatusCallbackIdentifier
_bootstrapName
_browserFallback
_browserLookup
_bundleIdentifier
_byteIndex
_bytes
_bytesRead
_bytesReceived
_callbacks
_cancelProvidingItemAtURL:toReaderWithID:
_cancelled
_carPlayDisplayLayoutMonitor
_carPlayScreenBundleIdentifiersInOrder
_changeAdvertisementThreadSpinCount
_checkIfBestApplicationChangedThread
_clientConnection
_clientIsSandboxed
_clientNotificationConnection
_clientWriteSize
_clientWriteSpeed
_clientWriteTime
_clientq
_clients
_commandPort
_connection
_controlConnections
_controlListener
_controller
_creationTime
_creator
_currentAdvertisableActivity
_currentAdvertisedItem
_currentAdvertisedItemOtherAdvertisedItems
_currentAdvertisementPayload
_currentLocalBlobPath
_currentLocalGeneration
_currentLocalPasteboard
_currentLocalPasteboardSize
_currentLocalTypes
_currentPacketNumber
_currentRemoteBlobPath
_currentSendData
_currentUntilDate
_dataFile
_dataRequested
_dataRequester
_dataSent
_debugCornerItem
_debugManager
_debugType
_delegate
_destURL
_determineItemToAdvertiseForHandoffThread
_determineWhenSystemGoesIdleThread
_deviceUILockedPowerAssertion
_dirtyUUIDs
_disableEntitlementsCheck
_dispatchQ
_doIt
_dontAdvertiseAsCurrentUntil
_dontHideUIBefore
_dontPrefetchBefore
_enabled
_epochEnd
_epochStart
_error
_errorCode
_extraData
_extraDataType
_fetchProgress
_file
_filePackager
_fileReactorID
_fileRecvHandler
_firstTime
_forceScanning
_frequency
_fromPairedDevice
_frontBundleID
_frontmost
_generation
_getPhysicalURLForURL:completionHandler:
_handler
_handlers
_hardSupressUntil
_hasBeenUsedAtLeastOnce
_hasFetchedLocalData
_hasFired
_heartBeatTrigger
_helpersDispatchGroup
_holdPowerAssertion
_holdPowerAssertionSourceTimer
_holdPowerAssertionUntil
_ignoreLockScreenUntil
_ignoredRTimeVal
_inMessage
_inMessageLength
_inMessageTag
_inStream
_info
_infoRecvHandler
_infoSent
_inputState
_inputStream
_interactionType
_interval
_isAsyncTransfer
_isFileCopy
_isSendMode
_isUIVisible
_item
_itemUUID
_items
_itemsBeingAdvertised
_lastAdvertisedGeneration
_lastAdvertisementPayload
_lastAdvertismentTime
_lastAutoPullActivitiesRequesterId
_lastFrontTime
_lastInterestingTime
_lastItemStr
_lastItemUUIDs
_lastItemWhens
_lastNumAdvertiseableProcesses
_lastSeenPasteboardDevice
_lastSeenPasteboardVersionBit
_lastTimePayloadWasRequestedForAdvertisedItem
_lastUUID
_lastUserActiveTime
_layoutUpdateScheduler
_leaf
_listeningService
_localDevice
_localInfo
_localReceiver
_localSendStartTime
_localTimeout
_lockTokens
_logFileDirectoryPath
_logFilePath
_mainDispatchQ
_mainDisplayLayoutMonitor
_mainScreenBundleIdentifiersInOrder
_managedSettingsChangedNotificationToken
_manager
_messageQueue
_mockScanner
_movingItemAtURL:requiresProvidingWithDestinationURL:completionHandler:
_name
_needToCallBlock
_needToRefreshPeerDevices
_networkConnectionHandler
_nextPacketNumber
_nextPacketReady
_nextPacketToDeliver
_nextScheduleBestAppDeterminationScheduler
_nextScheduleUpdate
_nextTime
_nextTimer
_nextUpdateAdvertisedItemsScheduler
_nextUserIdleDeterminationScheduler
_notificationRef
_notifiedItems
_notifier
_notifiers
_notifyToken
_numberOfItems
_objects
_optionBits
_options
_originatingClient
_osxUIConnection
_ourDevice
_ourPeerDevice
_outMessage
_outMessageTag
_outStream
_outputFile
_outputMode
_outputStream
_outputStreamData
_packetData
_packetNumber
_packetPreLoadCount
_packetSize
_pairedAdvertiser
_pairedClientPort
_pairedDevices
_pairedPeer
_pairedScanner
_pasteAdvertiser
_pasteFetchStartTime
_pasteInfo
_pasteboardController
_pasteboardTypes
_payloadAvailabilityDelay
_payloadRequested
_payloadRequestedCompletions
_payloadSize
_payloadXferSpeed
_payloadXferTime
_pboardBitToAdvertise
_pboardInfoToSend
_pbwrapper
_peer
_peerName
_peerUUID
_peeredDevice
_pendingPayloadFetches
_pendingResumeActivityUUIDs
_pendingUpdateTasks
_periodicCleanup
_periodicIdleUpdate
_physicalURLForURL:
_pingMode
_pingStart
_pinnedUserActivityInfoItem
_pongCount
_pongItems
_pongSem
_pongTimer
_possibleItems
_poweredOn
_preventIdleSleepAssertion
_priority
_progress
_protocolVersion
_provideItemAtURL:completionHandler:
_provideItemAtURL:toReaderWithID:completionHandler:
_provideItemAtURL:withInfo:completionHandler:
_providedItemAtURL:didGainPresenterWithID:
_providedItemAtURL:didGainPresenterWithInfo:
_providedItemAtURL:didLosePresenterWithID:
_providedItemAtURL:withPresenterWithID:didMoveToURL:
_providedItemsOperationQueue
_providedItemsURL
_providerRequests
_providers
_publish
_queue
_queuedPackets
_readBuffer
_receivedData
_receivedDelem
_receivedInfo
_receivedItems
_receiver
_receivers
_receivingDataFile
_receivingSuspended
_recentActionsStateHandler
_recentlyLostDeviceIDs
_recvHandler
_recvRap
_refreshPairedSFPeerDevices
_releaseAssertion:
_remoteAvailable
_remoteDeviceType
_remoteGeneration
_remotePboardTimer
_removeAfter
_removeFileProvider:
_replayManager
_requestedArchives
_respQueue
_returnEarly
_returnInfoEarly
_runCount
_scanner
_scheduledForSubmission
_scheduler
_screenDimmed
_screenDimmedPowerAssertion
_screenWatcherPresent
_sendErrorHandler
_sendFoundDevice
_sendRap
_sendingCoderVersion
_sendingDataFile
_sendingInfo
_session
_sfActivityScanners
_sfAdvertisers
_shouldAdvertiseAutoPullActivityList
_shouldAdvertiseHandoff
_shouldAdvertisePasteboard
_shouldStop
_showUITimer
_simulator
_simulatorPort
_simulators
_startTime
_state
_stop
_str
_streamDataXferSpeed
_streamDataXferTime
_streamError
_streamHandler
_streamOpenDelay
_streamOpenStartTime
_streamProtocolVersion
_streamStartTime
_streamXferStartTime
_streamsData
_submitted
_suggestedActionType
_supportNetworkPeers
_supportsContinuityStreams
_supressUntil
_suspended
_systemHasSuspendedAdvertisements
_systemHasSuspendedScanning
_systemIdlePreviousTimeSinceLastUserActivity
_systemIsIdle
_systemPreferenceChangedToken
_tag
_teamIDs
_terminated
_timeRemaining
_timeout
_timerExpiration
_timerSource
_title
_tmpArchiveWriteFiles
_totalBytesReceived
_totalPacketCount
_totalSendSize
_totalTime
_transferDuration
_transferSpeed
_triggerWatchdog
_type
_typeWithDeviceModelCode:
_typesToSend
_uaBundle
_uiLockStatusToken
_underlyingErrorCode
_uniqueIdentifier
_unpublish
_updateAdvertisement
_usedStreams
_userActive
_userActivityAdvertisableItemsByUUID
_userActivityClientsByBundleID
_userActivityClientsByPID
_userActivityNotificationRef
_userDefaults
_userIdleTracker
_userInactivePowerAssertion
_userInfoPayload
_userIsCurrent
_userIsCurrentIdleTracker
_uuid
_uuidItemMap
_visibleUserActivityClients
_wantsBestAppChangedNotifications
_wasContinuedBlock
_wasResumed
_watchdog
_webToNative
_webpageURL
_when
_writeBuffer
_writerWithID:didFinishWritingForURL:
_xpclistener
absoluteString
acquireWithError:
actionStrs:maximumInternal:clear:
active
activeAdvertiseableItemsUUIDs
activeDevices
activeDevicesIdentifiers
activePayloadUpdateInterval
activitiesShouldCrossover
activityAdvertiser:activityPayloadForAdvertisementPayload:command:requestedByDevice:withCompletionHandler:
activityAdvertiser:activityPayloadForAdvertisementPayload:handoffCommand:requestedByDevice:withCompletionHandler:
activityAdvertiser:didSendPayloadForActivityIdentifier:toDevice:error:
activityAdvertiser:pairedDevicesChangedNotification:
activityAdvertisingAllowed
activityBTLESharingEnabled
activityContinuationAllowed
activityPayloadFromDevice:forAdvertisementPayload:command:timeout:withCompletionHandler:
activityPayloadWarningSizeInBytes
activityReceivingAllowed
activityScanner:foundDeviceWithDevice:
activityScanner:lostDeviceWithDevice:
activityScanner:pairedDevicesChanged:
activityScanner:receivedAdvertisement:
activityType
activityTypes
activityUUID
addActivityNotifier:
addAdditionalItem:forKey:
addAdditionalUserActivityAdvertisableItems:
addAdvertiser:
addClient:
addHandler:
addIndex:
addItem:
addItem:scheduleUpdates:
addNewItemsFromPayloads:device:scanner:force:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addReceiver:
addSFActivityAdvertiser:
addSFActivityScanner:
addSimulator:
addTimer:forMode:
addUserActivity:
addUserActivityClient:
additionalUserActivityAdvertisableItems
advertisableItems
advertiseAdvertisementPayload:options:
advertiseItem:force:
advertisePayload:force:
advertiseTypes
advertiseableItemForBundleIdentifier:
advertiseableItems
advertisedItem
advertisedItemWhichIsWebBrowserIntervalToRememberEarlierActivities
advertisementKind
advertisementPayload
advertisementTimes
advertisementVersion
advertiser
advertiser:didReceiveInputStream:outputStream:
advertisers
advertising
advertisingBytes
advertisingItems
advertisingSuspended
allHandlers
allObjects
allValues
allowedToAccessAnyItem
allowedToMatchUserActivities
allowedToUseEligibleEvenWhenInBackground
allowedToUseLSAlwaysEligible
allowedToUseLSAlwaysPick
allowedToUseUAAlwaysAdvertise
alwaysEligible
alwaysPick
anyObject
appState
appendBytes:length:
appendData:
appendFormat:
appendRecentAction:
appendString:
applicationIdentifier
applicationInfoForPID:completion:
applicationIsInstalled:
applicationProxyForIdentifier:
archivePackagers
archiveQueue
archiveReadHandle
archiveURLWithCompletion:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:count:
asid
askClientUserActivityToSave:
askClientUserActivityToSave:completionHandler:
askSourceProcessToUpdateActivityWithUUID:evenIfClean:completionHandler:
assertion
assertionForRead
assertionForWrite
attachSession:
attachToBluetoothSession
attributeWithDomain:name:
auditToken
autorelease
auxConnection
auxStateInfo
auxlistener
avgPingTime
backlightLevelToken
backlightOn
backupTimer
batterySaverModeEnabled
beginTimeForNonActiveAdvertisement
bestAppSuggestionSupressionIntervalForUnchangingItem
bestAppsListener
bestCornerItem
bestCornerItemsFromItems:
block
bluetoothStatusCallbackIdentifier
boolForKey:
boolValue
boolValueForKey:default:
bootstrapName
browserLookup
bundleIdentifier
bundleRecord
byteIndex
bytes
bytesRead
bytesReceived
cStringUsingEncoding:
calculateTimeRemaining
cancel
cancelAllLocks
cancelReceive
cancelled
carPlayDisplayLayoutMonitor
carPlayScreenBundleIdentifiersInOrder
caseInsensitiveCompare:
changeAdvertisementThreadSpinCount
characterAtIndex:
characterSetWithCharactersInString:
checkIfBestCornerItemChanged:
checkShouldFetch
class
cleanupArchiveDir
clearLocalPasteboardTypes:
clearPayload
client
clientConnection
clientIsSandboxed
clientIsSigned
clientNotificationConnection
clientWriteSpeed
clipboardSharingEnabled
close
closeFile
code
coders
commandPort
compare:
compare:options:
compareOptionBits:
compatibilityObject
completedReceivingPasteboardWithError:
components:fromDate:
componentsJoinedByString:
componentsSeparatedByString:
configurationForDefaultMainDisplayMonitor
conformsToProtocol:
connection
containsPasteboard
contentsOfDirectoryAtPath:error:
controlConnections
controller
coordinateWritingItemAtURL:options:error:byAccessor:
copy
copyWithZone:
cornerActionBTLEItemWithPayload:device:options:optionBits:scanner:receiver:
cornerActionBTLEItemWithSFAdvertisement:optionBits:scanner:receiver:
cornerActionItemAdditionalTimeToLiveAfterValidIntervalExpires
cornerActionItemDefaults
cornerActionItemForUUID:
cornerActionItemMaximumTimeForBTLEItemToLive
cornerActionItemSupressionInterval
cornerActionItemTimeout
cornerActionItems
cornerActionManager
count
countByEnumeratingWithState:objects:count:
createConnection:host:port:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createFileAtPath:contents:attributes:
createFileForLocalPasteboardBlob
createFileForRemotePasteboardBlob
createFileForUUID:
createFileForUUID:inSubFolder:
createFolderAtPath:
createSharedDataDirectory
createTmpArchiveFileWithUUID:
currentAdvertisableActivity
currentAdvertisedBytes
currentAdvertisedItem
currentAdvertisedItemOtherAdvertisedItems
currentAdvertisementPayload
currentConnection
currentLayout
currentLocalBlobPath
currentLocalGeneration
currentLocalPasteboard
currentLocalPasteboardSize
currentLocalTypes
currentPacketNumber
currentPasteboardActivityInfo
currentRemoteBlobPath
currentRunLoop
currentUntil
currentUntilDate
data
dataFile
dataForMoreAppSuggestions
dataRequested
dataRequester
dataSent
dataSize
dataUsingEncoding:
dataWithBytes:length:
dataWithBytesNoCopy:length:freeWhenDone:
dataWithCapacity:
dataWithData:
dataWithJSONObject:options:error:
date
dateByAddingTimeInterval:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
debugAdditionalPayloadReceiveTimeInterval
debugCrossoverAllActivities
debugDescription
debugEnablePinging
debugEnablePrefetch
debugForceNewPayloadEncoder
debugForceOldPayloadEncoder
debugIgnoreAppsUsedForDevelopment
debugManager
debugReadvertiseImmediately
debugStateChanged:
debugType
debugUserActivityTimeOffset
debugValidatePayloadFetchTimeInterval
debugValidateRetryPayloadFetchFailureInterval
debugValidateSampleResponseMaximumActivityPayloadSizeInBytes
debugValidateSampleResponseMinimumActivityPayloadSizeInBytes
debuggingInfo
decodeInt32ForKey:
decodeIntegerForKey:
decodeObjectForKey:
decodeObjectOfClass:forKey:
defaultCenter
defaultManager
defaultWorkspace
defaults:
delegate
deliverNextPacket
description
detachFromBluetoothSession
detachSession:
determineVisibleOrderingForProcessesWithUserActivities:previousBundleIDOrdering:
device
deviceColor
deviceLockDelayBeforeRemovingHandoffAdvertisement
deviceLockDelayBeforeRemovingPasteboardAdvertisement
deviceType
deviceTypeForModelIdentifier:
deviceUILocked
deviceUILockedPowerAssertion
dictionary
dictionaryForAdvertisableItem:
dictionaryForCornerActionItem:
dictionaryRepresentation
dictionaryWithDictionary:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
didResumeUserActivityWithUUID:completionHandler:
directoryExistsAtPath:
dirtyUUIDs
disableAdminEntitlmentChecking
disableEntitlementsCheck
dispatchPendingTasksForUUID:error:
dispatchQ
dispatchScheduler:frequency:queue:block:
doAddDynamicUserActivity:matching:
doAdvertiseAdvertisementPayload:options:
doConnected
doCopyAdvertisedUUIDWithCompletionHandler:
doCopyAllUUIDsOfType:withCompletionHandler:
doCopyDebuggingInfo:completionHandler:
doCopyDefaults:completionHandler:
doCopyDynamicUserActivitiesString:completionHandler:
doCopyEnabledUUIDsWithCompletionHandler:
doCopyRecentActions:completionHandler:
doCopySimulatorStatusString:completionHandler:
doCopyStatusString:options:completionHandler:
doDeleteUserActivityWithUUID:
doDetermineBestAppSuggestionWithCompletionHandler:
doDetermineBestAppSuggestions:completionHandler:
doDetermineIfUserActivityIsCurrent:completionHandler:
doDidSaveDelegate:completionHandler:
doFetchMoreAppSuggestions
doFetchUserActivityInfoWithUUID:completionHandler:
doFindMatchingUserActivityForString:withCompletionHandler:
doGetCurrentUserActivityInfo:
doGetLoggingFileForClient:options:completionHandler:
doGetPairedDevices:completionHandler:
doGetSFActivityAdvertisement:completionHandler:
doGetSysdiagnoseStringsIncludingPrivateData:completionHandler:
doGetUserActivityProxiesWithOptions:completionHandler:
doInitializeWithClientVersion:clientInfo:completionHandler:
doInjectBTLEItem:type:identifier:title:activityPayload:webPageURL:remoteModel:duration:payloadDelay:
doIt
doLaunchFollowUp:interactionType:cancelled:
doMarkUserActivityAsDirty:forceImmediate:webpageURL:expiration:hasiCloudDocument:hasUnsynchronizediCloudDoc:
doNOP:withCompletionHandler:
doPinUserActivityInfo:completionHandler:
doQueueFetchOfPayloadForBestAppSuggestion:completionHandler:
doRegisterAsProxyApplicationForPid:options:completionHandler:
doRegisterForBestAppChangeNotification
doRemoveBestAppSuggestion:options:
doRemoveDynamicUserActivity:matching:
doReplayCommands:completionHandler:
doSetDebugOption:value:
doSetDefaults:archivedValue:
doSetReceivedItems:
doSetupNetworkedPairs:port:
doSetupRendevous:domain:activate:
doStartBestAppSuggestion:
doTerminateServer
doUnregisterForBestAppChangeNotification
doUpdateUserActivityInfo:makeCurrent:completionHandler:
doUpdateUserActivityWithUUID:setActive:
doWillSaveDelegate:completionHandler:
domain
dontAdvertiseAsCurrentUntil
dontHideUIBefore
dontPrefetchBefore
dontSendActivityTitle
doubleForKey:
doubleValue
dynamicActivityType
dynamicUserActivitiesString
effectiveUserIdentifier
egid
elements
eligibleAdvertiseableItemsInOrder
eligibleForHandoff
eligibleForPublicIndexing
eligibleForSearch
eligibleInBackground
eligibleToAdvertise
eligibleToAlwaysAdvertise
enableHandoffInPowerSaverMode
enableNetworkControlListener
enableSharingFramework
enableTransactions
enclosureColor
encodeAsData
encodeInt64:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
encodedData
encodedInfoToOldEncodedInfo:
encodedUserInfoError
enumerateKeysAndObjectsUsingBlock:
enumerateLinesUsingBlock:
enumerateObjectsUsingBlock:
epochEnd
epochStart
error
errorCode
errorWithDomain:code:userInfo:
euid
eventName
eventPayload
executingGroup
expectedLength
expirationDate
extraData
extraDataType
extractArchiveWithCompletion:
fakeBTLEInjectedItem
fetchAdvertisedItems:
fetchAllNearbyAppSuggestions:
fetchDataForType:
fetchLoginIDWithCompletionHandler:
fetchMoreAppSuggestions
fetchMoreAppSuggestionsFromDevice:
fetchPeerForUUID:withCompletionHandler:
fetchProgress
fetchQ
fetchRemoteDeviceName:
fetchRemotePasteboardForProcess:withCompletion:
fetchRemotePasteboardStatus:
fetchRemotePasteboardTypesForProcess:withCompletion:
fetchSFPeerDevicesWithCompletionHandler:
file
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileExistsForUUID:inSubFolder:
fileHandleForReadingAtPath:
fileHandleForUpdatingAtPath:
fileHandleForWritingAtPath:
filePackager
filePackagerError:
fileSystemRepresentation
fileURLForArchiveWithUUID:
fileURLForCloneItems
fileURLForPasteboardItem:
fileURLWithPath:
fileURLWithPath:isDirectory:
finishDecoding
finishWritingArchiveForUUID:
firstObject
firstPartyActivityTypeOrUnknown:
firstTime
floatValue
forceScanning
foundDevice:
frame
frequency
fromPairedDevice
frontBundleID
frontmost
generation
getBytes:length:
getContinuationStreamsWithEndpointData:completionHandler:
getInputStream:outputStream:
getLocalPasteboardInfoData:
getStreamsToHostWithName:port:inputStream:outputStream:
getUUIDBytes:
getValue:
handleAppStateMonitorUpdate:
handleBytesAvailable
handleHeartbeat:
handleLocalDeviceCallback:event:result:
handleMessageRead
handleOpenCompleted
handlePasteboardAuxInfoReceived:
handlePasteboardDataRequest:
handlePasteboardDataResponse:
handlePasteboardFileRequest:
handlePasteboardFileResponse:
handlePasteboardInfoRequest:
handlePasteboardInfoResponse:
handleSessionEvent:event:result:
handleSpaceAvailable
handlers
handoffPayloadRequestTimout
hardSupressUntil
hasBeenUsedAtLeastOnce
hasFetchedLocalData
hasFired
hasKeyboardFocus
hasPrefix:
hasSpaceAvailable
hasSuffix:
hash
haveBestAppChangeNotificationClients
headerForData:
heartBeatTrigger
helpersDispatchGroup
holdPowerAssertion
holdPowerAssertionSourceTimer
holdPowerAssertionUntil
host
hour
identifier
idleTracker:queue:interval:block:
ifLockScreenIsActive:visibleBundleIdentifiers:
ignoreLockScreenUntil
ignoreLostDevice
inData
inMessage
inMessageTag
inStream
increaseLengthBy:
info
infoSent
init
init:frequency:queue:block:
init:queue:interval:block:
init:title:date:userInfoPayload:teamID:activityType:
initForReadingFromData:error:
initFromPing:
initRequiringSecureCoding:
initWithAdvertisedBytes:
initWithAdvertisedBytes:options:
initWithAdvertisementVersion:advertisementPayload:options:device:
initWithAnalyticsInfo:
initWithArchivedUserActivityInfo:
initWithArchivedUserActivityInfo:peerDevice:simulator:
initWithAuditToken:
initWithBytes:length:
initWithBytes:length:encoding:
initWithCapacity:
initWithCoder:
initWithContentsOfFile:
initWithController:
initWithController:connection:
initWithData:
initWithData:encoding:
initWithDelegate:
initWithDestinationURL:forArchiveUUID:
initWithDomain:code:userInfo:
initWithDomain:type:name:port:
initWithExplanation:target:attributes:
initWithFile:fileSize:packetSize:options:receiver:
initWithFileDescriptor:closeOnDealloc:
initWithFilePresenter:
initWithFormat:arguments:
initWithInputStream:outputStream:
initWithInputStream:outputStream:dataFile:
initWithInputStream:outputStream:delegate:
initWithItem:isCurrent:when:
initWithItem:isCurrent:when:versionFlags:
initWithLocaleIdentifier:
initWithMachServiceName:
initWithMachServiceName:options:
initWithManager:
initWithManager:advertiser:
initWithManager:connection:
initWithManager:controller:
initWithManager:inputStream:outputStream:name:
initWithManager:name:
initWithManager:service:
initWithManager:simulator:
initWithNSError:
initWithName:delta:activityUUID:queue:runAtCompletion:
initWithName:delta:queue:
initWithName:timeout:block:
initWithObjects:forKeys:count:
initWithOutputStream:inputStream:pasteboard:
initWithParent:userInfo:
initWithPayload:device:options:optionBits:type:activityType:bundleIdentifier:teamIDs:advertisingOptions:scanner:receiver:
initWithPayload:device:options:optionBits:type:activityType:bundleIdentifier:teamIDs:advertisingOptions:scanner:receiver:dynamicIdentifier:
initWithPayloadSize:
initWithRequester:
initWithSFActivityAdvertisement:
initWithServiceType:
initWithSimulator:
initWithSuiteName:
initWithType:manager:
initWithType:string:dynamicType:teamID:webpageURL:options:isCurrent:when:
initWithType:string:dynamicType:teamID:webpageURL:options:isCurrent:when:versionFlags:
initWithURL:
initWithURL:error:
initWithURL:resolvingAgainstBaseURL:
initWithURL:typeUUID:
initWithUUID:
initWithUUID:activityType:dynamicActivityType:bundleID:
initWithUUID:type:options:
initWithUUID:type:options:client:
initWithUUID:type:options:originatingClient:
initWithUUIDBytes:
initWithUUIDString:
initWithUserActivityInfo:
initWithUserActivityInfo:client:
initWithUserActivityInfo:peerDevice:simulator:
inputState
inputStream
inputStreamWithFileAtPath:
insertObject:atIndex:
intValue
integerForKey:
integerValue
integerValueForKey:default:
interfaceWithProtocol:
interval
intervalToAskClientWithUnsynchronizedDocumentsToUpdate
intervalToDelaySuspensionOfAdvertisingForItem:
invalidate
isBacklightOn
isBatterySaverModeEnabled
isBluetoothEnabled
isBrowserFallback
isCancelled
isCurrent
isDefaultPairedDevice
isDirtyActivityWithUUID:
isEligibleToAdvertiseWithUUID:
isEligibleToAlwaysAdvertiseWithUUID:
isEqual:
isEqualHashedPayloadBytes:
isEqualToString:
isFileCopy
isFromPairedDevice
isInstalled
isKindOfClass:
isMemberOfClass:
isPayloadAvailable
isPayloadRequested
isSandboxed
isScreenWatcherPresent
isSendMode
isSpringBoardElement
isUIApplicationElement
isUIVisible
item
itemUUID
items
itemsBeingAdvertised
itemsLockedSem
keyCounter
lastActiveItemRemovalDelay
lastAdvertisedGeneration
lastAdvertisementPayload
lastAdvertismentTime
lastFrontTime
lastInterestingTime
lastItemStr
lastItemUUIDs
lastItemWhens
lastObject
lastPathComponent
lastSeenPasteboardDevice
lastSeenPasteboardVersionBit
lastTimePayloadWasRequestedForAdvertisedItem
lastUUID
lastUserActiveTime
layoutRole
layoutUpdateScheduler
leaf
length
level
listenForIncomingConnections:port:type:
listener
listener:shouldAcceptNewConnection:
listeningService
load
localDevice
localInfo
localPBStatus
localPasteboardAvalibilityClearedTimeout
localPasteboardAvalibilityTimeout
localPasteboardBlobForReading
localPasteboardRefection
localPasteboardTypesDidChange:forGeneration:
localReceiver
localSendStartTime
localTimeout
localizations
localizedStringForKey:comment:
localizedStringForKey:value:table:
lockTokens
locked
log:format:
log:format:args:
logFileDirectoryPath
logFilePath
logItem:
logString
loggingAdvertiserEnabled
longLongValue
lostDevice:
lostDeviceWithUUID:
mainBundle
mainDispatchQ
mainDisplayLayoutMonitor
mainRunLoop
mainScreenBundleIdentifiersInOrder
matchesItem:
maximumActivityPayloadSizeInBytes
maximumAdvertisementsPerTimeInterval
maximumAdvertisementsTimeInterval
maximumTimeoutAfterAdvertisingEndsThatActivityCanBeResumed
messageQueue
minimumIntervalBetweenAdvertisements
minimumTimeForAnAdvertisementToLive
minimumTimeToLiveAfterRemovingAdvertisement
minute
mockAdvertiser
mockScanner
monitorWithConfiguration:
mostRecentAdvertisedBytesTime
moveAdvertisementToNonActive
multiHandoffEnabled
mutableBytes
mutableCopy
name
needsUpdateBeforeAdvertising
netService:didAcceptConnectionWithInputStream:outputStream:
netService:didNotPublish:
netService:didNotResolve:
netService:didUpdateTXTRecordData:
netServiceBrowser:didFindDomain:moreComing:
netServiceBrowser:didFindService:moreComing:
netServiceBrowser:didRemoveDomain:moreComing:
netServiceBrowser:didRemoveService:moreComing:
netServiceBrowserWillSearch:
netServiceDidPublish:
netServiceDidResolveAddress:
netServiceDidStop:
netServiceWillPublish:
netServiceWillResolve:
networkConnectionHandler
networkControlListenerPort
nextPacketNumber
nextPacketToDeliver
nextRunTimeString
nextScheduleBestAppDeterminationScheduler
nextScheduleUpdate
nextTime
nextTimer
nextUpdateAdvertisedItemsScheduler
nextUserIdleDeterminationScheduler
notifiedItems
notifier
notifiers
notifyBestAppsChanged:atTime:
notifyBestAppsChanged:when:confidence:
null
numberOfItems
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
objCType
objectAtIndex:
objectAtIndexedSubscript:
objectEnumerator
objectForKey:
objectForKeyedSubscript:
obtainLockForItem:completion:
offset
okToSuspendAdvertising
open
optionBits
originatingClient
os_transaction
ourDevice
ourPeerDevice
outMessage
outMessageTag
outStream
outputFile
outputMode
outputStream
outputStreamData
packMessage:
packager:gotData:forPacket:
packetData
packetNumber
packetPreLoadCount
packetSize
pairedAdvertiser
pairedClientPort
pairedDevices
pairedPeer
pairedScanner
pasteFetchStartTime
pasteInfo
pasteboardAvailible
pasteboardBitValue
pasteboardController
pasteboardEmbeddedPayloadSizeLimitInBytes
pasteboardHideUIDelay
pasteboardPasteRequestTimeout
pasteboardShowUIDelay
pasteboardTypeRequestTimeout
pasteboardUIMinimumDurration
pasteboardUITimeRemainingDelay
pasteboardWillBeFetched:
path
pathForResource:ofType:inDirectory:forLocalization:
payloadAvailabilityDelay
payloadBytes
payloadFetchResponseDelay
payloadForIdentifier:
payloadRequestFromPeer:advertisementPayload:command:completionHandler:
payloadRequested
payloadRequestedCompletions
payloadSize
payloadXferSpeed
payloads
pbInfo
pbinfo
pboardBitToAdvertise
pboardFetchSem
pboardInfoToSend
pbwrapper
peer
peerDevice
peerDeviceCanAcceptNewerPayload:
peerForSelf
peerName
peerUUID
peeredDevice
pendingUpdateTasks
perfSummaryString
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
periodicCleanupFunc
periodicUpdate
persistentIdentifier
pidVersion
pingController
pingMode
pingStart
pinnedUserActivityInfoItem
poke
pongCount
pongItems
pongTimer
port
possibleItems
postNotificationName:object:userInfo:
poweredOn
preferredLanguages
preferredLocalizationsFromArray:forPreferences:
prepNextPacket
preventIdleSleepAssertion
priority
processCallbacks
processCommands:completionHandler:
processHeader
processPasteboardInfo:
processReceivedData
processWasRemoved
productBuildVersion
productName
productVersion
progress
propertyListWithData:options:format:error:
propertyListWithStream:options:format:error:
providerRequests
providers
proxiedBundleIdentifier
proxiedClients
publishWithOptions:
pushItem:
queryItems
queue
queueCount
queuedPackets
rangeOfString:
readBuffer
readDataOfLength:
readDataToEndOfFile
readHandleForArchiveWithUUID:
reason
receiveAdvertisement:options:fromPeer:
receiveAdvertisement:scanner:
receivePasteboardStreamData:version:withCompletion:
receivePasteboardToFile:withProgress:infoReceivedHandler:completionHandler:returnInfoEarly:
receivePing:
receiveTypes:withProgress:completionHandler:
receivedBTLEItemTimeToLiveAfterDeviceLostIfPayloadIsQueued
receivedData
receivedDataBack:
receivedDelem
receivedInfo
receivedItems
receivedPasteboardInfo:withError:
receiver
receivers
receiving
receivingDataFile
receivingSuspended
recentActionsStateHandler
recentEligibleItemsInOrder:
recentlyEligibleItemInterval
reconnectToParentSimulator
recvHandler
recvStop:
referenceFrame
referrerURL
registerAsProxyApplication:forPid:
registerCallback:
registerDefaults:
releaseAssertion
releaseAssertion:
releaseLockForItem:
releaseLockForItem:withError:
remoteDeviceType
remoteGeneration
remoteHasFiles
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
remotePasteboardAvailable:
remotePasteboardAvailableTimeout
remotePasteboardBlobForReading
remotePboardTimer
removeActivityNotifier:
removeAdditionalUserActivityAdvertisableItems:
removeAdvertisement
removeAdvertiser:
removeAfter
removeAllFromDevice:
removeAllObjects
removeClient:
removeClientActivityClient:
removeFromRunLoop:forMode:
removeHandler:
removeIOPowerManagerUserIdleNotifications
removeItem:
removeItemAtPath:error:
removeItemAtURL:error:
removeLocalPasteboardFromAdvertisers:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectsAtIndexes:
removeObjectsInRange:
removeObserver:name:object:
removeReceivedItems:
removeSFActivityAdvertiser:
removeSFActivityScanner:
removeSimulator:
removeUserActivity:
removeUserActivityAdvertiseableItemByUUID:
rendevousPairingType
replaceOccurrencesOfString:withString:options:range:
replayManager
replayableAdvertisableItemWithAdvertisableItem:
reportedActivityType
requestPayloadWithCompletionHandler:
requestPayloadWithCompletionHandlerEvenIfClean:withCompletionHandler:
requestRemotePasteboardData:
requestRemotePasteboardInfo:
requestRemoteTypeInfo:
requestStreamEndpointData:
requestStreamEndpointDataV2:
requestedArchives
reset
resignCurrent
respQueue
respondsToSelector:
resume
resumeListeningForBluetooth
retain
retainCount
returnEarly
rgid
roundNum:to:
ruid
runCount
sandboxed
sb_isTransitioning
sb_stashedPIP
sb_transitioning
scanCharactersFromSet:intoString:
scanDouble:
scanForPeersOfType:domain:
scanForTypes:
scanInteger:
scanLocation
scanMockAdvertisement:
scanString:intoString:
scanUpToCharactersFromSet:intoString:
scanUpToString:intoString:
scannerWithString:
scanningForTypes
scheduleAdvertisementUpdate
scheduleAdvertisementUpdate:
scheduleAt:
scheduleBestAppDetermination
scheduleBestAppDetermination:
scheduleIOPowerManagerUserIdleNotifications
scheduleInRunLoop:forMode:
scheduleNext:
scheduleUpdatingAdvertisableItems
scheduleUpdatingAdvertisableItems:
scheduledForSubmission
scheduledTimerWithTimeInterval:repeats:block:
scheduler
scheme
screenDimDelayBeforeRemovingAdvertisements
screenDimDelayBeforeRemovingPasteboardAdvertisement
screenDimmed
screenDimmedPowerAssertion
screenSaverDelayBeforeRemovingPasteboardAdvertisement
screenSaverDelayToRemovingAdvertisements
screenWatcherPresent
searchForServicesOfType:inDomain:
seekToFileOffset:
self
sendCompletedWithError:
sendErrorHandler
sendEvent
sendFileArchiveRequest
sendHeartbeat
sendNextChunk
sendPasteboard:withCompletion:
sendPasteboardDataRequest
sendPasteboardDataResponse
sendPasteboardInfoRequest
sendPasteboardInfoResponse
sendResponse:
sendStopWithError:
sendTotalSendSize
sendTypes:completionHandler:
sendingCoderVersion
sendingInfo
serviceEndpointData
setActive:
setActivityType:
setAdvertisableItems:
setAdvertiseTypes:
setAdvertisedItem:
setAdvertisementPayload:
setAdvertisementTimes:
setAdvertisementVersion:
setAdvertiser:
setAdvertisingSuspended:
setAllowedToAccessAnyItem:
setAppStateMonitor:
setApplicationIdentifier:
setArchivePackagers:
setArchiveQueue:
setArchiveReadHandle:
setAssertionForRead:
setAssertionForWrite:
setAuxConnection:
setAuxStateInfo:
setBacklightLevelToken:
setBaseURL:
setBeginTimeForNonActiveAdvertisement:
setBestAppsListener:
setBlock:
setBluetoothStatus:
setBluetoothStatusCallbackIdentifier:
setBrowserFallback:
setBrowserLookup:
setBundleIdentifier:
setByAddingObjectsFromSet:
setByteIndex:
setBytesRead:
setBytesReceived:
setCancellationHandler:
setCancelled:
setCarPlayScreenBundleIdentifiersInOrder:
setCaseSensitive:
setChangeAdvertisementThreadSpinCount:
setClasses:forSelector:argumentIndex:ofReply:
setClient:
setClientConnection:
setClientNotificationConnection:
setClientWriteSize:
setClientWriteSpeed:
setClientWriteTime:
setClientq:
setCoders:
setCompletedUnitCount:
setConnection:
setControlConnections:
setControlListener:
setController:
setCurrent:
setCurrentAdvertisedItem:
setCurrentAdvertisedItemOtherAdvertisedItems:
setCurrentLocalBlobPath:
setCurrentLocalGeneration:
setCurrentLocalPasteboard:
setCurrentLocalPasteboardSize:
setCurrentLocalTypes:
setCurrentPacketNumber:
setCurrentRemoteBlobPath:
setCurrentSendData:
setCurrentUntilDate:
setDataFile:
setDataRequested:
setDataRequester:
setDataSent:
setDataSize:
setDateFormat:
setDebugCornerItem:
setDebugType:
setDebugging:
setDefault:value:
setDelegate:
setDestURL:
setDevice:
setDeviceUILocked:
setDeviceUILockedPowerAssertion:
setDisableAdminEntitlmentChecking:
setDisableEntitlementsCheck:
setDispatchQ:
setDomain:
setDontHideUIBefore:
setDontPrefetchBefore:
setDynamicActivityType:
setEligibleForHandoff:
setEligibleForPublicIndexing:
setEligibleForSearch:
setEnableSharingFramework:
setEnabled:
setEnclosureColor:
setEpochStart:
setError:
setErrorCode:
setExpectedLength:
setExpirationDate:
setExportedInterface:
setExportedObject:
setExtraData:
setExtraDataType:
setFakeBTLEInjectedItem:
setFetchProgress:
setFetchQ:
setFile:
setFilePackager:
setFileRecvHandler:
setFirstTime:
setForceScanning:
setFrequency:
setFromPairedDevice:
setFrontBundleID:
setGeneration:
setHandler:
setHardSupressUntil:
setHasBeenUsedAtLeastOnce:
setHasFetchedLocalData:
setHasFired:
setHeartBeatTrigger:
setHoldPowerAssertion:
setHoldPowerAssertionSourceTimer:
setHoldPowerAssertionUntil:
setIgnoreLockScreenUntil:
setInData:
setInMessage:
setInMessageLength:
setInMessageTag:
setInStream:
setInfo:
setInfoRecvHandler:
setInfoSent:
setInputState:
setInteractionType:
setInterruptionHandler:
setInterval:
setInvalidationHandler:
setIsAsyncTransfer:
setIsFileCopy:
setIsSendMode:
setItem:
setItemUUID:
setItems:
setItemsLockedSem:
setKind:
setLastAdvertisedGeneration:
setLastAdvertisementPayload:
setLastAdvertismentTime:
setLastFrontTime:
setLastInterestingTime:
setLastItemUUIDs:
setLastItemWhens:
setLastSeenPasteboardDevice:
setLastSeenPasteboardVersionBit:
setLastTimePayloadWasRequestedForAdvertisedItem:
setLastUUID:
setLastUserActiveTime:
setLeaf:
setLength:
setListener:
setListeningService:
setLocalInfo:
setLocalPasteboardReflection:
setLocalReceiver:
setLocalReflection:
setLocalSendStartTime:
setLocalTimeout:
setLocale:
setLockTokens:
setLocked:
setLogFileDirectoryPath:
setMainDispatchQ:
setMainScreenBundleIdentifiersInOrder:
setManager:
setMessageQueue:
setModelIdentifier:
setName:
setNeedToCallBlock:
setNeedsUserInteractivePriority:
setNetworkConnectionHandler:
setNextPacketNumber:
setNextPacketReady:
setNextPacketToDeliver:
setNextTimer:
setNotificationRef:
setNotifiedItems:
setNumberOfItems:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKeyedSubscript:
setObjects:
setOptionBits:
setOptions:
setOriginatingClient:
setOs_transaction:
setOsxUIConnection:
setOurDevice:
setOurPeerDevice:
setOutMessage:
setOutMessageTag:
setOutStream:
setOutputFile:
setOutputMode:
setOutputStream:
setOutputStreamData:
setPacketData:
setPacketNumber:
setPacketPreLoadCount:
setPacketSize:
setPairedAdvertiser:
setPairedDevices:
setPairedPeer:
setPairedScanner:
setPasteAdvertiser:
setPasteFetchStartTime:
setPasteInfo:
setPasteboardController:
setPasteboardTypes:
setPayload:identifier:
setPayloadAvailabilityDelay:
setPayloadAvailable:
setPayloadBytes:
setPayloadRequested:
setPayloadXferSpeed:
setPayloadXferTime:
setPayloads:
setPbInfo:
setPbinfo:
setPboardBitToAdvertise:
setPboardFetchSem:
setPboardInfoToSend:
setPbwrapper:
setPeer:
setPeerDevice:
setPeerDeviceType:
setPeerName:
setPeerUUID:
setPeeredDevice:
setPendingUpdateTasks:
setPersistentIdentifier:
setPingController:
setPingMode:
setPingStart:
setPinnedUserActivityInfoItem:
setPongCount:
setPongSem:
setPongTimer:
setPossibleItems:
setPreventIdleSleepAssertion:
setProductBuildVersion:
setProductVersion:
setProgress:
setProtocolVersion:
setProviderRequests:
setProviders:
setQueue:
setQueuedPackets:
setReadBuffer:
setReason:
setReceivedData:
setReceivedDelem:
setReceivedInfo:
setReceiver:
setReceivingDataFile:
setReceivingSuspended:
setRecentActionsStateHandler:
setRecvRap:
setRemoteAvailable:
setRemoteDeviceType:
setRemoteGeneration:
setRemoteHasFiles:
setRemoteObjectInterface:
setRemotePasteboardAvalibility:withDataRequester:
setRemotePboardTimer:
setReplayManager:
setRequestedArchives:
setRespQueue:
setReturnInfoEarly:
setReturnPasteboardDataEarlyWithCompletion:
setSandboxExtensions:
setScanner:
setScanningForTypes:
setScheduledForSubmission:
setScheduler:
setScreenDimmed:
setScreenDimmedPowerAssertion:
setScreenWatcherPresent:
setSendErrorHandler:
setSendFoundDevice:
setSendRap:
setSendingCoderVersion:
setSendingDataFile:
setSharedDataPath:
setShouldAdvertiseAutoPullActivityList:
setShouldStop:
setShouldTryWrite:
setSimulator:
setSimulatorForCommandPort:controller:
setSimulatorInFront:
setSimulatorPort:
setSource:
setStartTime:
setState:
setStream:
setStreamDataSize:
setStreamDataXferSpeed:
setStreamDataXferTime:
setStreamHandler:
setStreamOpenDelay:
setStreamOpenStartTime:
setStreamOpenTime:
setStreamProtocolVersion:
setStreamStartTime:
setStreamXferStartTime:
setSuggestedActionType:
setSupportNetworkPeers:
setSupportsContinuityStreams:
setSupportsStreams:
setSupressUntil:
setSupressedUntil:
setSuspended:
setSystemHasSuspendedAdvertisements:
setSystemHasSuspendedScanning:
setSystemIsIdle:
setSystemPreferenceChangedToken:
setTeamID:
setTeamIDs:
setTeamIdentifier:
setTimeOffset:
setTimeRemaining:
setTimeout:
setTimerExpiration:
setTitle:
setTmpArchiveWriteFiles:
setTotalBytesReceived:
setTotalBytesSent:
setTotalPacketCount:
setTotalSendSize:
setTotalTime:
setTotalUnitCount:
setTransferDuration:
setTransferSpeed:
setTransitionHandler:
setType:
setTypes:
setTypesToReceive:
setUaBundle:
setUiLockStatusToken:
setUnderlyingErrorCode:
setUniqueID:
setUniqueIdentifier:
setUserActive:
setUserActivityAdvertisableItemsByUUID:
setUserIdleTracker:
setUserInactivePowerAssertion:
setUserInfoObject:forKey:
setUserInfoPayload:
setUserIsCurrent:
setUserIsCurrentIdleTracker:
setUuid:
setValue:forKey:
setWantsBestAppChangedNotifications:
setWasContinuedBlock:
setWasContinuedInfo:
setWatchdog:
setWebpageURL:
setWhen:
setWithArray:
setWithObject:
sfActivityAdvertiser
sfActivityAdvertisers
sfActivityScanner
sfActivityScanners
sharedActivityManagerServer
sharedAdvertiser
sharedDataPath
sharedDefaults
sharedInstance
sharedManager
sharingAdvertiser
sharingBTLESuggestedItemForAdvertisementPayload:forDevice:
shortStatusString
shouldAdvertiseAutoPullActivityList
shouldAdvertiseHandoff
shouldAdvertisePasteboard
shouldIgnoreBluetoothDisabled
shouldItemBeAdvertised:
shouldLog:
shouldStop
shouldTryWrite
showUITimer
shutdownStream
shutdownTimerFired:
simulator
simulatorControllerForCommandPort:
simulatorPort
simulatorWithController:pairedPort:childSimPid:childVersion:
simulatorWithController:parentSimulatorPortName:
simulators
size
sortDescriptorWithKey:ascending:
sortUsingComparator:
sortUsingDescriptors:
sortedArrayUsingComparator:
sortedArrayUsingSelector:
source
springBoardElement
standardUserDefaults
start
startAdvertisingPingWithTimeInterval:
startConnection:
startServiceForPasteVersion:handler:
startTime
state
stateAsString
statusString
stop
stopAdvertisingPing
storeObject:
stream
stream:handleEvent:
streamDataSize
streamDataXferSpeed
streamDataXferTime
streamDoneWithInfo:error:
streamError
streamHandler
streamOpenStartTime
streamOpenTime
streamProtocolVersion
streamStatus
streamXferStartTime
streams:didReadRawData:
streamsData
streamsDidClose:withError:
streamsDidWriteRawDataBuffer:
string
stringByAppendingFormat:
stringByAppendingString:
stringForInteraction
stringForKey:
stringWithCString:encoding:
stringWithFormat:
stringWithString:
strongToWeakObjectsMapTable
subDirForItem:
subarrayWithRange:
subdataWithRange:
submit
submitDidSendLocalPasteboard:
submitLocalPasteboardInfoWasCleared
submitRemotePasteboardBecameAvailable
submitRemotePasteboardBecameUnavailable:
submitRemotePasteboardTypeInfoRequested:
submitRemotePasteboardWasRequested:
submitUserActivityBecameCurrent:withToken:
submitUserActivityWasContinuedInfo:
submitUserActivityWasDiscovered:
submitUserActivityWasSuggestedInfo:
submitWasSuggestedInfo
substringFromIndex:
substringToIndex:
substringWithRange:
suggestedActionType
superclass
supportNetworkPeers
supportsContinuityStreams
supportsSecureCoding
supressUntil
supressedUntil
suspendListeningForBluetooth
suspended
synchronize
systemHasSuspendedAdvertisements
systemHasSuspendedScanning
systemIdleDelayBeforeRemovingAdvertisements
systemIsIdle
systemPreferenceChangedToken
targetWithPid:
teamID
teamIdentifier
tellClientDebuggingEnabled:logFileHandle:
tellClientUserActivityItWasResumed:
terminate
terminateSession:
terminated
testPeerForModel:
time
timeIntervalForKey:default:
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timeOffset
timeRemaining
timerSource
timerWithTimeInterval:target:selector:userInfo:repeats:
title
tmpArchiveWriteFiles
totalBytesReceived
totalBytesSent
totalPacketCount
totalSendSize
totalTime
transferDuration
transferSpeed
triggerAll
triggerUserIdleDetermination
triggerUserIdleDetermination:
trimFirstBytes:ofData:
type
typeWithIdentifier:
types
typesToReceive
typesToSend
uaAdvertisableItemsInOrder
uaAdvertisableItemsInOrder:
uaBundle
uiLockStatusToken
unarchivedObjectOfClasses:fromData:error:
underlyingErrorCode
unionSet:
uniqueID
uniqueIdentifier
uniqueIdentifiers
unlockWithError:
unpackMessage:
unregisterCallback:
unsignedLongLongValue
update
updateAdvertisingPowerAssertion:
updateCarPlayScreenLayout:
updateFrequency:
updateFromSFAdvertisement:
updateItem:
updateMainScreenLayout:
updateScreenDimStateState:
updateScreenSaverActive:
updateState:
updateTimeUntilAssertionRelease:
updateUIDeviceLockedState:
updateUserActiveState:
usedStreams
userActive
userActivityAdvertisableItemByUUID:
userActivityAdvertisableItemsByUUID
userActivityClientForBundleIdentifier:
userActivityClientForPID:
userActivityClientForUUID:
userActivityClients
userActivityInfoForUUID:
userActivityItemsChanged
userActivityNotificationRef
userDefaults
userIdleInterval
userIdleRemovalDelay
userInactivePowerAssertion
userInfo
userIsCurrent
userIsCurrentIdleTracker
uuid
uuidItemMap
validKey
validUntil
value
valueForEntitlement:
valueForKey:
visibleUserActivityClients
waitUntilComplete
wantsBestAppChangedNotifications
wasContinuedBlock
wasContinuedInfo
wasResumed
wasResumedOnAnotherDeviceWithCompletionHandler:
watchdog
weAreAdvertisingAnItem
weAreAdvertisingAtLeastOneItem
webToNative
webpageURL
when
whitespaceAndNewlineCharacterSet
whitespaceCharacterSet
write:maxLength:
writeArchiveData:forItem:
writeBuffer
writeData:
writeData:error:
writeLocalPasteboardToFile:itemDir:extension:withCompletion:
writeLocalPasteboardToFile:itemDir:withCompletion:
writeMessage:tag:
writeRawData:
xpclistener
zone
@16@0:8
Q16@0:8
v24@0:8Q16
B16@0:8
v20@0:8B16
q16@0:8
v24@0:8q16
@24@0:8@16
v24@0:8@16
v16@0:8
@"NSMutableSet"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@32@0:8@16@24
@"NSXPCListener"
v32@0:8@16@?24
v40@0:8@16@24@?32
v32@0:8@16@24
v40@0:8@16@24@32
v32@0:8@"NSURL"16@?<v@?@"NSError">24
@"NSURL"16@0:8
@"NSOperationQueue"16@0:8
v40@0:8@"NSURL"16@24@?<v@?@"NSError">32
v40@0:8@"NSURL"16@"NSFileProvidingInfo"24@?<v@?@"NSFileProvidingResponse">32
v32@0:8@"NSURL"16@24
@"NSURL"24@0:8@"NSURL"16
v32@0:8@"NSURL"16@?<v@?@"NSURL">24
v32@0:8@16@"NSURL"24
v32@0:8@"NSURL"16@"NSFileProviderPresenterInfo"24
v40@0:8@"NSURL"16@24@"NSURL"32
v40@0:8@"NSURL"16@"NSURL"24@?<v@?B>32
@"NSOperationQueue"
@"NSURL"
@"NSMutableDictionary"
@48@0:8@16@24d32@?40
Q32@0:8@16d24
d16@0:8
v24@0:8d16
@?16@0:8
v24@0:8@?16
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"NSDate"
@24@0:8Q16
B20@0:8B16
@"UASimulator"
@"NSArray"
Q24@0:8Q16
@"UAUserActivityInfo"
@"NSUUID"
@"NSError"
v32@0:8q16@?24
v36@0:8@16Q24B32
v24@0:8@?<v@?@"NSArray"@"NSDate"d>16
v32@0:8q16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSUUID"16@"NSDictionary"24
v32@0:8@"NSUUID"16@?<v@?@"NSError">24
v36@0:8@"NSUUID"16Q24B32
v24@0:8@?<v@?B>16
@"NSXPCConnection"
@"UADispatchScheduler"
@"NSSet"
@"UACornerActionManager"
@48@0:8@16Q24@32@40
@"UAUserActivityClientProcess"
v40@0:8@16@24q32
v32@0:8@16q24
v40@0:8@"UAStreamHandler"16@"NSData"24q32
v32@0:8@"UAStreamHandler"16q24
v32@0:8@"UAStreamHandler"16@"NSError"24
v32@0:8@"UAStreamHandler"16@"NSData"24
v24@0:8@"UAStreamHandler"16
v40@0:8@"UCFilePackager"16@"NSData"24q32
v24@0:8@"NSError"16
v52@0:8@16@24@?32@?40B48
v52@0:8@"NSFileHandle"16@"NSProgress"24@?<v@?@"UASharedPasteboardInfoWrapper"@"NSError">32@?<v@?@"<UCStreamCoder>"Q@"NSError">40B48
v32@0:8@"UASharedPasteboardInfoWrapper"16@?<v@?@"<UCStreamCoder>"Q@"NSError">24
@"UAStreamHandler"
@"NSDictionary"
@"NSMutableArray"
@"UADispatchWatchdog"
@"NSObject<OS_dispatch_source>"
@"UASharedPasteboardInfoWrapper"
@"NSFileHandle"
@"NSProgress"
@"NSObject<OS_dispatch_semaphore>"
@"UCFilePackager"
@32@0:8Q16@24
@40@0:8@16d24@?32
@20@0:8B16
B24@0:8d16
i16@0:8
v20@0:8i16
I16@0:8
v20@0:8I16
@"NSObject<OS_dispatch_group>"
@"NSUserDefaults"
@"ActivityManagerDebuggingManager"
@"UASharedPasteboardClientController"
@"UAPingController"
@"UATimedPowerAssertions"
@"PowerManagerIdleTracker"
@"NSTimer"
@"UABluetoothStatus"
@"NSObject"
@"UAPingClient"
@"UAPingNotifier"
@24@0:8d16
d24@0:8@16
@"UAUserActivityAnalyticsInfo"
@48@0:8@16d24@32@?40
@32@0:8@"UACornerActionManager"16@"NSString"24
@"NSSet"16@0:8
v24@0:8@"NSSet"16
@"UASharedPasteboardDataRequester"
@"UASharedPasteboardInfo"
v24@0:8@?<v@?>16
v32@0:8@16Q24
v28@0:8i16@?20
v24@0:8@?<v@?@"NSString">16
v32@0:8@"UASharedPasteboardInfo"16Q24
v28@0:8i16@?<v@?@"UASharedPasteboardInfo"@"NSError">20
v40@0:8@"SFCompanionAdvertiser"16@"NSInputStream"24@"NSOutputStream"32
v28@0:8B16@20
v40@0:8@16q24@?32
^{__CFUserNotification=}16@0:8
v24@0:8^{__CFUserNotification=}16
@"SFCompanionAdvertiser"
@"UCRemotePasteboardGeneration"
@"UASharedPasteboardOutputStreamManager"
@"UASharedPasteboardInputStreamManager"
@"NSMutableSet<UCStreamCoder>"
^{__CFUserNotification=}
@"UARemotePasteboardWasRequestedEvent"
@"UARemotePasteboardDidSendLocalEvent"
@"NSBundle"
v32@0:8@"NSStream"16Q24
@40@0:8@16@24@32
B32@0:8@16q24
@"NSInputStream"
@"NSOutputStream"
@"<UAStreamHandlerDelegate>"
@"NSMutableData"
@"NSData"
@56@0:8@16d24@32@40@?48
@40@0:8@16d24@32
@56@0:8@16q24q32@40@48
@"<UCFilePacketReceiver>"
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
v56@0:8@16@24@32@40@?48
v48@0:8@16@24@32@40
v56@0:8@"SFActivityAdvertiser"16@"NSData"24@"NSString"32@"SFPeerDevice"40@?<v@?@"NSUUID"@"NSData"@"NSError">48
v32@0:8@"SFActivityAdvertiser"16@"NSSet"24
v48@0:8@"SFActivityAdvertiser"16@"NSUUID"24@"SFPeerDevice"32@"NSError"40
v32@0:8@"SFActivityScanner"16@"SFActivityAdvertisement"24
v32@0:8@"SFActivityScanner"16@"SFPeerDevice"24
v32@0:8@"SFActivityScanner"16@"NSSet"24
B32@0:8@16@?24
v56@0:8@16@24@32Q40@?48
@"SFPeerDevice"
@"UAActivityReplayAdvertiser"
@"UAActivityReplayReceiver"
@"UAReplayClientController"
@"UAMockActivityAdvertiser"
@"UAMockActivityScanner"
v48@0:8@16@24@32@?40
@"UAPairedSFActivityScanner"
@"<SFActivityAdvertiserDelegate>"
@"UAPairedSFActivityAdvertiser"
@"<SFActivityScannerDelegate>"
@20@0:8I16
v28@0:8I16@20
B28@0:8@16B24
q32@0:8@16q24
d32@0:8@16d24
@"UAUserActivityClientProcessesController"
v32@0:8@16r^{?=[8I]}24
Q32@0:8Q16Q24
v40@0:8q16@24@?32
v36@0:8@16B24@?28
v28@0:8@16B24
v52@0:8@16B24@28@36B44B48
v36@0:8i16@20@?28
v40@0:8q16@"NSDictionary"24@?<v@?q@"NSDictionary"@"NSError">32
v32@0:8@"NSUUID"16@?<v@?@"UAUserActivityInfo"@"NSError">24
v36@0:8@"UAUserActivityInfo"16B24@?<v@?@"NSError">28
v28@0:8@"NSUUID"16B24
v24@0:8@"NSUUID"16
v32@0:8@"NSString"16@"NSString"24
v52@0:8@"NSUUID"16B24@"NSURL"28@"NSDate"36B44B48
v32@0:8@"UAUserActivityInfo"16@?<v@?@"NSUUID"@"NSError">24
v24@0:8@?<v@?@"NSUUID"@"NSString"@"NSString"@"NSString"@"NSError">16
v32@0:8@"NSUUID"16@?<v@?B@"NSString"i@"NSString"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?@"NSFileHandle"@"NSError">32
v36@0:8i16@"NSDictionary"20@?<v@?@"NSError">28
v32@0:8@"NSUUID"16@?<v@?@"UAUserActivityInfo"B@"NSError">24
v28@0:8B16@"NSFileHandle"20
v40@0:8@16@24d32
v40@0:8@"NSArray"16@"NSDate"24d32
v48@0:8@"NSFileHandle"16@"NSURL"24@"NSData"32@?<v@?@"UASharedPasteboardInfo"@"NSError">40
v40@0:8@"NSFileHandle"16@"NSURL"24@?<v@?@"UASharedPasteboardInfo"@"NSError">32
B20@0:8i16
v36@0:8i16@20*28
v28@0:8i16@20
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@20@0:8i16
B28@0:8@16i24
@"FBSDisplayLayoutMonitor"
@"BKSApplicationStateMonitor"
@"UALocalItemReceiver"
@"SFActivityScanner"
^{BTSessionImpl=}16@0:8
^{BTLocalDeviceImpl=}16@0:8
@24@0:8@?16
v32@0:8^{BTSessionImpl=}16i24i28
v24@0:8^{BTSessionImpl=}16
v32@0:8^{BTLocalDeviceImpl=}16i24i28
^{BTSessionImpl=}
^{BTLocalDeviceImpl=}
@64@0:8@16@24@32@40@48@56
v44@0:8@16@24@32B40
@44@0:8@16I24@28@36
@60@0:8@16@24@32I40@44@52
@108@0:8@16@24@32I40Q44@52@60@68@76@84@92@100
@100@0:8@16@24@32I40Q44@52@60@68@76@84@92
B24@0:8@?16
@"SharingBTLEAdvertisementPayload"
@"UASharingReceiver"
^B16@0:8
v24@0:8^B16
B28@0:8B16@?20
@"UAActivityReplay"
v56@0:8@16@24@32q40@?48
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B36@0:8@16B24@?28
C16@0:8
v20@0:8C16
@"UAAuditToken"
@"UAUserActivityAdvertisableItem"
@"NSObject<OS_os_transaction>"
v36@0:8@16@24B32
v24@0:8@"NSNetServiceBrowser"16
v32@0:8@"NSNetServiceBrowser"16@"NSDictionary"24
v36@0:8@"NSNetServiceBrowser"16@"NSString"24B32
v36@0:8@"NSNetServiceBrowser"16@"NSNetService"24B32
B36@0:8@16i24@28
@"NSNetServiceBrowser"
@"NSNetService"
B40@0:8@16@24q32
@48@0:8@16@24@32@40
@24@0:8^{_NSZone=}16
@40@0:8@16B24@28C36
@36@0:8@16B24@28
@80@0:8Q16@24@32@40@48@56B64@68C76
@76@0:8Q16@24@32@40@48@56B64@68
B20@0:8C16
{?="hashedAdvertisementBytes"[7C]"optionBits"C"timeOffset"C}
@48@0:8{?=[8I]}16
v24@0:8^v16
r*16@0:8
{?=[8I]}16@0:8
{?="val"[8I]}
B36@0:8@16B24@28
@40@0:8@16I24i28Q32
@"UASimulatorController"
@"UASimulatorAdvertiser"
@"UASimulatorReceiver"
@"UASimulatorAdvertisementCreator"
@36@0:8q16d24B32
v32@0:8Q16@?24
v88@0:8@16Q24@32@40@48@56@64d72d80
v28@0:8B16@?20
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
v32@0:8@"NSString"16@24
v32@0:8@"NSString"16@?<v@?@"NSUUID">24
v24@0:8@?<v@?@"NSUUID">16
v32@0:8Q16@?<v@?@"NSArray">24
v24@0:8@?<v@?@"NSArray">16
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary">24
v32@0:8@"NSDictionary"16@?<v@?@"NSArray">24
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?@"NSString">32
v32@0:8@"NSDictionary"16@?<v@?@"NSString">24
v88@0:8@"NSUUID"16Q24@"NSString"32@"NSString"40@"NSData"48@"NSString"56@"NSString"64d72d80
v28@0:8B16@?<v@?@"NSDictionary"@"NSError">20
v32@0:8@"NSString"16@"NSData"24
v32@0:8@"NSString"16q24
v36@0:8@"NSString"16@"NSString"24B32
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSData"@"NSDate"@"NSUUID"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSArray"@"NSArray"@"NSError">24
v28@0:8B16@?<v@?@"NSArray">20
{timeval=qi}16@0:8
@"SharingBTLESuggestedItem"
@"UANetworkReplayRendevousHandler"
{timeval="tv_sec"q"tv_usec"i}
PING: Received payload for PING; creating PONG response. error=%{public}@
PING: Removing pong item %{public}@/%{private}@ because it was continued 
BESTAPP: Created controller to handle connections to Springboard/Dock
BESTAPP: suspend
BESTAPP: resume
BESTAPP: terminate
BESTAPP: received listener request from process %ld
BESTAPP: Creating listening notifier for process %ld
*** Attempt to access BestAppSuggestion xpc interface fror process %{public}@, which doesn't have the %{public}@ entitlement
Unlocking reader %@
providing item to reader %@
Currently locked, saving callback for when unlocked
_provideItemAtURL called without readerID, creating UUID to act as readerID
IdleTracker:alloc(%{public}@) interval=%{public}g
IdleTracker:dealloc(%{public}@
IdleTracker: %{public}@: mostSignificantLevel=%{public}@ %{public}s%{public}s weakSelf=%{public}p
IdleTracker: %{public}@, callingBlock, %{public}s, interval=%{public}@
SIMULATOR: Setting receivedItems to %{private}@
SIMULATOR: Items changed ( from %{private}@ ), so updating and signalling.
includePayload=%{public}s
SIMULATOR: Clearing current item, because it has been removed ( was %{public}@/%{private}@).
SIMULATOR: Updating existing item, %{public}@ %{private}@/%{private}@
SIMULATOR: Item %{public}@ seems to be different from %{public}@, so changing received item & updating lists.
SIMULATOR: Looking for %{private}@
SIMULATOR: Found bundle ID for item %{public}@/%{private}@, %{private}@
SIMULATOR: Unable to find application to handle typeIdentifier %{private}@:%{private}@ for item %{public}@
FAILED to decode %@ object for useractivityd <-> simulator connection, %@
Removing bestAppSuggestion notifier %{public}@
Invalidating bestAppSuggestion notifier
setItems(%{private}@)
BESTAPP: -- Ignoring supressed item, %{private}@ %{public}@ (until %{public}@, now=%{public}@)
BESTAPP: -- Ignoring supressed item, %{private}@ %{public}@ (until %{public}@, item.when=%{public}@, now=%{public}@)
BESTAPP: Ignoring item %{public}@/%{private}@ %{public}@, because it is earlier than %{public}@
BESTAPP: -- Ignoring item %{public}@/%{private}@, because it is not a local action
BESTAPP: Not notifying clients about new best app %{public}@/%{private}@ .when=%{public}@ (and %lu more best app options) because it matches last item.
Notifying clients about new best app: %{public}@/%{private}@ (and %lu more best app options)
BESTAPP: supressedUntil=%{private}@
BESTAPP: Setting .hardSupressedUntil for %{public}@ to nil, because that time has passed.
BESTAPP: Setting .supressUntil for %{public}@ to nil, because that time has passed.
BESTAPP: Setting .supressedUntil for %{public}@ to nil, because the .lastInterestingTime is earlier the last update for this item (%{public}@ vs %{public}@ (%{public}@ vs %{public}@), when=%{public}@).
doConnected, bestApp client connected. pid=%d
doDetermineBestAppSuggestionWithCompletionHandler, bestApp=%{public}@/%{private}@ (and %lu more app suggestions)
doDetermineBestAppSuggestionWithCompletionHandler, bestItem = nil
uuid=%{public}@ options=%{public}@
BESTAPP: Updating existing supression record for item %{public}@/%{private}@, %{public}@
BESTAPP: Setting supressedUntil for item %{public}@/%{private}@ item.when=%{public}@ to %{public}@/%{public}@ lastInterestingTime=%{public}@
doLaunchFollowUp cornerActionItem: %{private}@, interactionType: %lx, cancelled: %{public}@
Empty wasContinuedInfo, creating it
WasContinuedInfo scheduledForSubmission: %{public}@
-- Scheduling messagetracer info for submission: %{public}@, %{private}@
-- Sumbitting metric info for %{public}@, %{private}@
doRegisterForBestAppChangeNotification, clientPid=%{public}ld
doUnregisterForBestAppChangeNotification, clientPid=%{public}ld
Queuing fetch for bestAppUUID %{public}@
bestAppFetch
result=%{public}d enableTelemetry=YES 
disableEntitlmentChecking=YES
### Auto-exiting after %g seconds; likely crashed during a unit test and want to clean up.
%{public}s: Starting up, %{public}s %{public}s %{public}s version %g built on %{public}s %{public}s.  args=%{public}@
*** terminateServerIfExecutableIsReplaced fd = %d
*** Detected a change to %{public}s, so terminating server in %f seconds.
*** Cancelling source.
[FILE MANAGER] ERROR creating shared pasteboard dir: %@
[FILE MANAGER] Shared Path: %@
[FILE MANAGER] Error creating subdir: %@
[FILE MANAGER] Path for file UUID: %@ -> '%@'
[FILE MANAGER] Created file at path: %@
[FILE MANAGER] Failed to create file at path: %@ / %s
[FILE MANAGER] Failed to create dir at path: %{public}@ / %{public}@
[FILE MANAGER] Created dir at path: %{public}@
[FILE MANAGER] Failed to remove item at path: %{public}@ / %{public}@
[FILE MANAGER] Removed item at path: %{public}@
[FILE MANAGER] Creating file for local pasteboard blob at path: %@
[FILE MANAGER] Created Handle: %@
[FILE MANAGER] Creating file for remote pasteboard blob at path: %@
[FILE MANAGER] Error creating clone items dir: %@
[File Manager] Error writting data for %{public}@: %{public}@
[File Manager] Failed to synchronize or close file, error=%{public}@
[File Manager] Releasing lock for item %@
[File Manager] Released lock for item %@
[File Manager] Canceling all file coordiation providers
Already have lock for file, deleting
Error deleting item: %{public}@
Deleted file for item: %{public}@
Obtaining write lock to delete file for item: %{public}@
Error getting coord write for deleting item: %{public}@
Error to get sharedDir cleaning up
Error getting sharedDirPath archives: %{public}@
Attempting to deleta archive: %@
Error deleting archive: %{public}@
Attempting to delete item: %@
We have lock for the file, we are receiving the item and should not delete it at this time
Obtaining write lock to delete file
Deleting file for item: %@
Attempting to delete copied item: %{private}@
Deleted copied item: %{private}@
Failed to delete item: %{private}@
HANDLER: %{public}@ is being %{public}s
HANDLER: %{public}@ is being suspended ( was not )
HANDLER: %{public}@ is being resumed ( was suspended )
HANDLER: %{public}@ is being terminated %{public}@
Streams stalled, erroring out the paste operation.
[CODERV2] dealloc
[CODERV2] State: %@ -> %@
[CODERV2] Streams closed: %{public}@
[CODERV2] Reveived message for tag %{public}@
[CODERV2] Did write tag %{public}@
[CODERV2] Did write data chunk
[CODERV2] Done writting pasteboard data chunks
[CODERV2] Requesting delivery for %{public}@
[CODERV2] Req result: %d
[CODERV2] Done sending archive chunks
[CODERV2] Stopping
Received stop message with error: %@
[CODERV2] Archvie requested for UUID: %@
[CODERV2] File requested with invalid UUID: %{public}@
[CODERV2] Delivering file packets for UUID: %@
[CODERV2] Received pasteboard info, requesting data
[CODERV2] Error receiving pasteboard info: %{public}@
[CODERV2] Received pasteboard data response (%{public}@/%{public}@)
[CODERV2] Error writing data to file: %{public}@
[CODERV2] Received pasteboard file response %@ %ld%% (%{public}@/%{public}@)
[CODERV2] Received all data for archive: %@
[CODERV2] Total expected data length: %{public}@
[CODERV2] Sending heartbeat
[CODERV2] Sending pasteboard info
[CODERV2] Sending pasteboard data request
[CODERV2] Requesting archive for UUID: %{public}@
[CODERV2] Building file packager to send pasteboard data
[CODERV2] Requesting pasteboard info, will return info early: %{public}@
[CODERV2] Timout waiting for item lock sememphore
[CODERV2] Calling received info handler
[CODERV2] Skipping call to received info handler
[CODERV2] Calling pasteboard received handler
[CODERV2] Skipping call to pasteboard received handler
[CODERV2] Item %d has public.file-url with uuid: %@
[CODERV2] Error obtaining lock for item %d: %{public}@
[CODERV2] Setup to send pasteboard, waiting
[CODERV2] Sending pasteboard with files
[CODERV2] Archiving item in our clone dir, no need for sandbox ext
[CODERV2] Error getting sandbox info
[CODERV2] Got extension data: %@
[CODERV2] Got extension id: %lld
[CODERV2] Starting to archive %@
[CODERV2] Don't do anything with archives after stream is marked done
[CODERV2] Error creating archive for file: %@
[CODERV2] Created packager for archive: %@
[CODERV2] Done archiving all objects, total send size: %@
[CODERV2] No files to archive, total send size: %@
[CODERV2] Calling pasteboard sent handler
[CODERV2] Skipping call to pasteboard sent handler
[CODERV2] Got data from packager, packet #: %d, tag: %ld
[CODERV2] Finished sending packages: %ld / %{public}@
[CODERV2] Error from packager: %{public}@
Starting watchdog: %@ - %fs
Canceling watchdog: %@
Triggering watchdog: %@ - %fs - %@
Setting advertisable items to %{private}@
SIMULATOR: Telling paired client that the advertised item %{public}@/%{private}@ changed.
result=%{private}@/%ld items
-- signalling thread to determine what activity to advertise because one of our userActivityItems changed.
DETERMINE: Determining list of items to be advertised thread starting up: 
DETERMINE: Checking for recentlyEligible items because the screen is dimmed (includeRecentItems == YES).
DETERMINE: possible items to advertise:%{private}@
DETERMINE: Since this activityItem's .userInfo, %{public}@ type=%{private}@, has unsynchronized cloud documents, we can't actually advertise this item.
handoffFetchSpeculative enableTelemetry=YES 
success=%{public}d enableTelemetry=YES 
handoffFetchSpeculative
DETERMINE: Activity %{public}@/%{private}@ had unsynchronized documents, so we asked it to update and we've heard back.
DETERMINE: Activity %{public}@/%{private}@ had unsynchronized documents, so we asked it to update and we've heard back with an error %{public}@.
DETERMINE: %{public}@/%{private}@ as the current item-to-advertise.
DETERMINE: No item is being advertised, so removing any previously set of advertised items.
Determining idleDetermination, entering.
IDLE: Setting preventAdvertisingSuspensionBecauseOfAlwaysPickItem = YES for item %{public}@
IDLE: Setting self.userIsInactivePowerAssertion == nil because there are no items being advertised.
IDLE: Setting shouldSuspendAdvertising == YES because userInactivePowerAssertion == nil
IDLE: Setting self.screenDimmedPowerAssertion == nil because there are no items being advertised.
IDLE: Setting shouldSuspendAdvertising == YES because self.screenDimmedPowerAssertion == nil
IDLE: Setting shouldSuspendAdvertising == YES because the device is locked and our power assertion has expired.
IDLE: Setting shouldSuspendAdvertising to NO because one or more of our assertions still exists. (%s%s%s%s)
IDLE: Setting systemShouldNotBeAdvertising=NO because advertiser %{public}@ always wants to be advertised.
IDLE: Setting shouldSuspendAdvertising = YES because mustSuspendAdvertising == YES %@%@
IDLE: Determined that advertising should be suspended, removing any active advertisement and setting self.systemHasSuspendedAdvertisements = YES ( idle=%.2f seconds)
*** SUSPENDING ADVERTISER %{public}@
*** RESUMING ADVERTISER %{public}@
 -- there are listening clients, so firing the check-and-update-BestApplication thread.
Creating loop to check-for-and-update BestApplication
Candidate bestAppSuggestions: %{private}@
CornerActionManager: Triggering all because the state of Bluetooth changed to %{BOOL}d
CornerActionManger:  suspend ( was suspended = %{public}@)
*** Suspending advertiser %{public}@
CornerActionManger:  resume
*** Resuming advertiser %{public}@
*** Resuming receiver %{public}@
UserActivity, received UAUserActivityManagerActivityContinuationIsEnabledChangedNotification notification, so spinning all threads.
Backlight %@
setUserIsActive: %{public}@ (was %{public}@)
setUserIsActive, setting to NO, so creating assertion if warranted.
setUserIsActive, creating assertion because we are advertising something
userInactivePowerAssertion, power assertion timed out and expired, so triggering user idle determination.
userInactivePowerAssertion, userInactivePowerAssertion power assertion removed.
setUserIsActive, no need for assertion, triggering updateAdvertisableItems
userInactivePowerAssertion, setting to NO, so removing power assertion & triggering idle determination.
updateScreenDimState: %{public}@ (was %{public}@)
updateScreenDimmedState, setting to YES, so creating assertion if needed.
updateScreenDimmedState, creating assertion
screenDimmedPowerAssertion, power assertion timed out and expired, so triggering user idle determination.
screenDimmedPowerAssertion, screenDimmedPowerAssertion power assertion removed.
updateScreenDimmedState, no need for assertion, triggering state updates
updateUIDeviceLockedState, setting to NO, so removing power assertion & triggering idle determination.
updateUIDeviceLockedState: %{public}@ (was %{public}@)
updateUIDeviceLockedState, setting to YES, so creating assertion if we have an advertisement.
Creating power assertion of %g seconds, to keep advertisement alive.
updateUIDeviceLockedState, power assertion timed out and expired, so triggering user idle determination.
updateUIDeviceLockedState, power assertion removed.
updateUIDeviceLockedState, no need for assertion, triggering state updates
updateUIDeviceLockedState, device is unlocked, so removing power assertion & triggering advertising & idle determination.
addAdvertiser(%{public}@)
removeAdvertiser(%{public}@)
## Received com.apple.location.changed so restarting deamon
No remote device type set
SCHEDULE:%{public}@, next=%{public}@ freq=%g
SCHEDULE:%{public}@ scheduleNext, interval=%g
SCHEDULE: Setting next time to DISPATCH_TIME_FOREVER because interval > anything reasonable
SCHEDULE:%{public}@, scheduling down to %f seconds ( _next=%{public}@ )
SCHEDULE:%{public}@, next=%{public}@/%lld ( was %{public}@/%lld )
SCHEDULE:%{public}@, next=NOW ( was %{public}@ ) freq=%g
SCHEDULE:%{public}@, run.  
SCHEDULE:%{public}@, DONE run, next=%{public}@
SCHEDULE:%{public}@, setFreq, next=%{public}@ freq=%g
SCHEDULE:%{public}@, RESET, next=FOREVER ( was %{public}@ ) freq=%g
Created remote generation %{public}@
Cannot update state from %@ to %@
Remote generation dealloc (type requested, data requested): %{public}@ %@
[REMOTE GEN] Responding to type Info request
[REMOTE GEN] Fetching remote type info
[REMOTE GEN] Type payload fetch error: %{public}@
[REMOTE GEN] Received type info
[REMOTE GEN] Setting protocol version: %d
[REMOTE GEN] Received extra data, saving for later
[REMOTE GEN] Type Fetch Info: %{private}@
[REMOTE GEN] Requesting types before PB data
[REMOTE GEN] Waiting on type results
[REMOTE GEN] Timeout requesting type info
[PBOARD CONTROLLER] Creating pboard client controller
[PBOARD CONTROLLER] Client Notification Connection interrupted ( pboardd crash? )
[PBOARD CONTROLLER] Client Notification Connection invalidated; remote copy/paste will no longer work.
[PBOARD CONTROLLER] Screen sharing session started, disabling universal clipboard
[PBOARD CONTROLLER] No more screen sharing sessions, enabling universal clipboard
Process %d requested for UC to disable
[PBOARD CONTROLLER] Return Client Items in Order: %@
[PBOARD CONTROLLER] Sending client xpc remote available update: %@
[PBOARD CONTROLLER] Error getting client connection: %@
[PBOARD CONTROLLER] Got type update from client, gen: %lu, %@
[PBOARD CONTROLLER] Ignoring type updates, screen sharing session in progress
[PBOARD CONTROLLER] Ignoring type updates, clipboard sharing disabled
[PBOARD CONTROLLER] Received pasteboard info: %@
[PBOARD CONTROLLER] Clear local pasteboard info: from client
[PBOARD CONTROLLER] Remove Local Types Fired
[PBOARD CONTROLLER] Remove Local Timer Fired
[PBOARD CONTROLLER] Pasteboard types fetch requested
[PBOARD CONTROLLER] Pasteboard data fetch requested for pid: %d
[PBOARD CONTROLLER] Already have remote data, using it: %@
[PBOARD CONTROLLER] Requesting data from remote device
[PBOARD CONTROLLER] Starting timer to show UI in %lf sec
[PBOARD CONTROLLER] Pasteboard Fetch Cancelled
[PBOARD CONTROLLER] Payload fetch error: %{public}@
[PBOARD CONTROLLER] PBData came with stream request, was a small pboard
[PBOARD CONTROLLER] Error creating remote data file
ERROR: Error writing pasteboard data blob: %@
[PBOARD CONTROLLER] Requesting to open streams with version: %@
[PBOARD CONTROLLER] Opened streams with error: %{public}@
[PBOARD CONTROLLER] Opened streams
[PBOARD CONTROLLER] Could not create data file for remote pasteboard
[PBOARD CONTROLLER] Error receiving pboard info: %{public}@
[PBOARD CONTROLLER] Received error from remote: %{public}@
[PBOARD CONTROLLER] Received pboard info: %@
URL on pasteboard: %@
Creating %@ as type %@
[PBOARD CONTROLLER] new URL for item: %@
[PBOARD CONTROLLER] Issuing sandbox extension
[PBOARD CONTROLLER] Got extension
[PBOARD CONTROLLER] Error issuing extension
[PBOARD CONTROLLER] Saving sandbox extension to dict
[PBOARD CONTROLLER] Corrupt file: url in stream, %{public}@
[PBOARD CONTROLLER] Non-file: url provide in stream, %{public}@
[PBOARD CONTROLLER] Sending extensions: %@
Unable to get shared temp dir@
[PBOARD CONTROLLER] Paste Fetch Info: %@
[PBOARD CONTROLLER] Archiving pbinfo: %@
[PBOARD CONTROLLER] Pboard is small enough to send via BTLE payload
[PBOARD CONTROLLER] Pasteboard Sent Info: %{private}@
[PBOARD CONTROLLER] Starting pboard service for paste, version: %@
[PBOARD CONTROLLER] Pasteboard data alread fetched sending now
[PBOARD CONTROLLER] Failed to create local pasteboard data file
[PBOARD CONTROLLER] Error getting client object proxy: %{public}@
[PBOARD CONTROLLER] pbsize: %ld, payload size limit: %ld
[PBOARD CONTROLLER] Telling client pboard will be fetched
[PBOARD CONTROLLER] Error getting client connection for write notification: %@
[PBOARD CONTROLLER] Attempting to get local pasteboard data
[PBOARD CONTROLLER] Getting pboard written to file
[PBOARD CONTROLLER] Received streams, waiting for local data to be available
[PBOARD CONTROLLER] Local data available, starting out stream
[PBOARD CONTROLLER] Error sending types: %{public}@
[PBOARD CONTROLLER] Finished sending types: %@
[PBOARD CONTROLLER] Local Pasteboard Sent Info: %{private}@
[PBOARD CONTROLLER] Timeout getting local pasteboard
[PBOARD CONTROLLER] New client connection does not have correct entitlement: %@
[PBOARD CONTROLLER] Received new client connection: %@
[PBOARD CONTROLLER] Client interrupted
[PBOARD CONTROLLER] Client invalidated
[PBOARD CONTROLLER] Received new aux connection: %@
[PBOARD CONTROLLER] AUX interrupted
[PBOARD CONTROLLER] AUX invalidated
Controller Connection Invalidated
No more active controllers, Re-enabling UC
New Controller connection, disabling UC
[PBOARD CONTROLLER] show pbui, but already visible, skipping
[PBOARD CONTROLLER] Setting durration time for %lf sec
[PBOARD CONTROLLER] Setup progress UI: %@, %@, %@
[PBOARD CONTROLLER] Creating notification for progress ui with options: %@
[PBOARD CONTROLLER] Notification creation err: %d
[PBOARD CONTROLLER] Waiting for notification result
[PBOARD CONTROLLER] Response flags: %lu
[PBOARD CONTROLLER] User cancelled the paste
[PBOARD CONTROLLER] Paste was cancelled
[PBOARD CONTROLLER] Unexpected result from user notification
[PBOARD-CONTROLLER] User notification was no longer current at the time it was cancelled or completed, so ignoring. %{public}lu
[PBOARD CONTROLLER] Failed to created user notification ref, err=%{public}d
[PBOARD CONTROLLER] Adding hide delay of %lf sec
[PBOARD CONTROLLER] Hide progress in %lf sec with fail: %@
[PBOARD CONTROLLER] iOS needs a minimum delay of 1.25 sec, updating delay to 1.25
[PBOARD CONTROLLER] Canceling the user notification
[PBOARD CONTROLLER] No notification, must have already been canceled
[STREAM HAND] Starting Streams
[STREAM HAND] Starting Input Stream
[STREAM HAND] Starting Output Stream
[STREAM HAND] Call to stop streams
[STREAM HAND] Trying to stop streams
[STREAM HAND] Stoping streams
[STREAM HAND] Write raw data of length: %ld
[STREAM HAND] Cannot write raw data, in message mode
[STREAM HAND] Write message tagged %ld of length: %ld
[STREAM HAND] Cannot write message, in raw data mode
[STREAM HAND] Did not write anything, setting flag
[STREAM HAND] Received error on stream %{public}@: %{public}@
[STREAM HAND] Both Streams opened
[STREAM HAND] Wrote %ld raw bytes to output stream
[STREAM HAND] We should not be writting more data than we have!
[STREAM HAND] Error writing message: %{public}@
[STREAM HAND] Should not be writting 0 data to stream
-dealloc for power assertion %{public}@/%{public}@
ASSERTION: %{public}@ Calling block with NO, in -dealloc
ASSERTION: %{public}@ Releasing assertion %ld, in -dealloc
ASSERTION: %{public}@ Scheduling assertion for %g seconds.
ASSERTION: %{public}@ Rescheduling assertion for %g seconds (was %.2g seconds from now).
ASSERTION: %{public}@ No need to update assertion; request for %g seconds is less than current expiration, in %.2g seconds.
%s, IOPMAssertionCreateWithProperties returned %x
ASSERTION: %{public}@ Power assertion /%ld created.
ASSERTION: %{public}@ Power assertion %ld released.
ASSERTION: %{public}@ Updating needToCallBlock => NO
ASSERTION: %{public}@ Calling block with YES because assertion timed out
SIMULATOR: Returning received activities %{private}@ as eligibleItems
[Packager] Queuing delivery block %d/%d
[Packager] Delivery signaled
[Packager] Delivering packet %d/%d
[Packager] Reading packet data %d/%d
PROCESSCOMMAND:%{private}@
REPLAY: Destroying replay object because the peer's UUID %{public}@ matched our own.
REPLAY: Terminating UAActivityReplay because TERMINATE was received.
=== Forcing item into replay client: %{private}@
=== UPDATED PAYLOD FOR item %{private}@ 
=== WAITING FOR ACTIVITY %{private}@ to be resumed (for %g seconds)
=== REMOVING ACTIVITY %{private}@ to be resumed
NETWORK: Received broadcasted advertisement %{private}@
REPLAY: PULLPAYLOAD request, for advertisementPayload=%{private}@
REPLAY: PULLPAYLOAD request, got encodedData %{private}@ from creating application for advertisementPayload %{private}@, so returning that to paired client over the network.
REPLAY: RETURNPAYLOAD request, for advertisementPayload=%{private}@
REPLAY: RETURNPAYLOAD request, found existing payloadHandler in _pendingPayloadFetches for advertisementPayload=%{private}@
REPLAY: Didn't find handler for advertisement %{public}@/%{private}@, pendingPayloads=%{private}@
REPLAY: Sending encoded data %{private}@ to activity handler.
terminate
Looking for localized string for key: %@
Falling back to NSLocalizedString
SIMULATOR: Terminating all UASimulators.
SIMULATOR: RegisterWithParentWithVersion simulatorVersion=%llu, serverPort=%x pid=%d
SIMULATOR: Creating UASimulator to be parent simulator in OSX, uuid=%{public,posix:uuid}.16P port=%x
SIMULATOR: Failed to create simulator; simulated useractivityd client version %ld is unknown.
SIMULATOR: Detected death of child simulator, pid=%d, so terminating the UASimulator and removing it.
Submitted UAActivityBecameCurrentEvent: %{private}@
Submitted UAActivityWasDiscoveredEvent: %{private}@
Submitted UAActivityWasSuggestedEvent: %{private}@
Not reporting activity was continued becasuse payload was never requested.
Submitted UAActivityWasContinuedEvent for %@: %{private}@
Metric AT for %{private}@ is %{private}@
Submitted UARemotePasteboardWasRequestedEvent: %{private}@
Submitted UARemotePasteboardDidSendLocalEvent: %{private}@
Submitted UARemotePasteboardTypeInfoRequestedEvent: %{private}@
Submitted UARemotePasteboardBecameAvailableEvent: %{private}@
Submitted UARemotePasteboardBecameUnavailableEvent: %{private}@
Using service name %{public}@ for %{public}@
AdvertisableItems:%{private}@
NOTIFY BEST CHANGE: %@ -> %@
LAYOUT: Updating advertisement because the list of main screen visible bundle identifiers changed
LAYOUT: Updating advertisement because the lock screen is present and there were previous main screen bundles.
LAYOUT: Updating advertisement because the list of carplay screen visible bundle identifiers changed
LAYOUT: Found %{public}@/%{public}@ as active layout
LAYOUT: Found %{public}@/%{public}@ as proxy for active layout
LOCKSCREEN: New layout contains modal lock screen.
LOCKSCREEN: Ignoring lock-screen element because %{public}@ is at or above.
Adding client %{private}@, %{public}@, bundleID=%{private}@ to known userActivityClients.
Removing client %{private}@, application %{public}@, from known userActivityClients.
Moving 'LSLivePastProcessExit' activity %{public}@/%{private}@ from process %{public}@ into additionalUserActivityAdvertisableItems
Removing client %{public}@ from _userActivityClientsByPID
Removing client %{private}@ from _userActivityClientsByBundleIdentifier
MAKEFRONT: handleAppStateMonitorUpdate:%ld %{private}@
MAKEFRONT: %{public}@/%{public}@ %s
MAKEFRONT: - ( was %{public}@/%{public}s)
MAKEFRONT:- (was %@) %{public}s
registerAsProxyApplication, pid=%{public}d controller=%{public}@
registerAsProxyApplication, added, proxiedClients=%{public}@
registerAsProxyApplication, removed, proxiedClients=%{public}@
*** FORCING item %{private}@ as the most eligible item, since it's a ping
eligibleAdvertiseableItemsInOrder: client=%{public}@ item=%{public}@ eligible=%{BOOL}d alwaysPick=%{BOOL}d inBackground=%{BOOL}d
eligibleAdvertiseableItemsInOrder: alwaysPickItems=%{public}@
-- Adding in eligibleItemsWhenInBackground items, %{private}@. 
eligibleAdvertiseableItemsInOrder: result=%{public}@
listener=%{private}@ newConnection=%{private}@
[DATA REQUESTER] Requesting payload from: %@, with timeout: %{public}@
[DATA REQUESTER] Requesting complete: %lu bytes, error: %@
[DATA REQUESTER] Adding %d delay for testing
[DATA REQUESTER] Requesting payload from: %@, with timeout: %{public}@, version: 2
[DATA REQUESTER] Requesting pbinfo from: %@, with timeout: %{public}@
BLUETOOTH: Returning NO for .poweredOn because our session has been terminated.
BLUETOOTH: Returning NO for .poweredOn because our session has been detached, so also triggering a re-attach.
BLUETOOTH: Setting powered status for device %{public}p to %{BOOL}d
BLUETOOTH: Failed to get device powered status, for local device %{public}p from BTSession %{public}p, result=%{public}d.
BLUETOOTH: Attached to BTSession, setting attached to %{BOOL}d.
BLUETOOTH: Failed to attach to BTSession, result=%{public}d
BLUETOOTH: Detached from BTSession, result=%{public}d, setting attached to NO.
BLUETOOTH: Registering callback %{public}@ to %{public}p
BLUETOOTH: Unregistering callback %{public}@
BLUETOOTH: Letting callback %{public}@/%{public}p know that the power status is now %{BOOL}d
BLUETOOTH: Attached to BTSession %{public}p
BLUETOOTH: Local device %{public}p from BTSession %{public}p, result=%{public}d.
BLUETOOTH: Failed to add callbacks for local device %{public}p from BTSession %{public}p, result=%{public}d.
BLUETOOTH: Failed to get local device for session %{public}p, result=%{public}d
BLUETOOTH: Detached from BTSession %{public}p localDevice=%{public}p
BLUETOOTH: Error %{public}d removing device callbacks, device=%{public}p
BLUETOOTH: Terminated from BTSession %{public}p localDevice=%{public}p
BLUETOOTH: Setting powered-status-validity for device %{public}p to NO
*** ERROR: Received BTLEUserActivity error packet, but unable to de-archive it, so discarding it.
*** ERROR: Received BTLEUserActivity packet with unknown version, %ld, so discarding it.
-- Compressed data to %ld bytes (from %ld bytes) in data, ( %ld%% )
Using compressed data, because it is %ld bytes smaller than the uncompressed data.
setScanningForTypes:%{public}@
UASharingReceiver, adding activity scanner %{public}@.
UASharingReceiver, removing activity scanner %{public}@.
UASharingReceiver, suspending activity scanner %{public}@.
UASharingReceiver, resuming activity scanner %{public}@.
foundDevice, deviceIdentifier=%{private}@ scanner=%{public}@
foundDevice, deviceIdentifier=%{private}@
lostDevice, deviceIdentifier=%{private}@ scanner=%{public}@
lostDevice timer firing deviceIdentifier=%@; _recentlyLostDeviceIDs is %@, will remove is %d
lostDevice, deviceIdentifier=%{private}@
removing item %{public}@/%{private}@ because another item (%{public}@/%{private}@) with the same bundleID and deviceID is being added
Unable to determine nowPlaying client, error=%{public}@ for item %{public}@
NowPlaying item is %{public}@ for item %{public}@
Retaining %{public}@ in _receivedItems because it's .payloadRequested or .payloadAvailable, so that it remains available for a bit, until %{public}@.
REMOVING: %{public}@ because it's on device %{private}@
SharingBTLEReceiver: Running periodicCleanupFunc to check for received items whose .removeAfter has passed.
Removing %{public}@ from .receivedItems because .removeAfter, %{public}@ has expired.
activityScanner:receivedAdvertisement: %{private}@,%{public}@)
Received Ad: %{public}@ opts=%{public}@ from %{private}@/%{private}@
Ignoring received ActivityContinuation because the current profile disallows it, %{public}@ from %{private}@
SIMULATING foundDeviceForIdentifier: %{private}@
Received advertisement.advertisementPayload == nil
[PBOARD] Received pboard available advertisement
[PBOARD] Ad is from last seen device
[PBOARD] Pboard version bit flipped, notify client
[PBOARD] Ad is from new device, notify client
[PBOARD] Notify client of new remote pboard and reset timmer
[PBOARD] Recived add w/o remote pboard for last seen device, notify client and clear timmer
 -- Looking for activity matching advertisingPayload %{public}@, from %{private}@/%{private}@
 -- Found matching advertisingPayload to item already received from this device, %{public}@/%{private}@, so using it. %{public}@/%{private}@
 -- Clearing payload of item %{public}@/%{private}@ because the last active time from that device has changed.
 -- Because the optionBits in the packet changed, from %x%{public}@ to %x%{public}@, discarding current item and starting fresh, %{public}@ / %{private}@
 -- Matching dns- item to previously received one, mapping to %{private}@, for item already received from this device, %{public}@/%{private}@, so using it. %{private}@
 -- New advertisement of DNS type didn't seem to match to same app as  previous one, %{public}@ vs %{public}@, so can't use it. %{private}@
PING: Pong was sent, error=%{public}@
# RECEIVED advertisement, %{public}@ type=%{private}@ -> %{private}@, %{public}@, from %{private}@/%{private}@ options=%{public}@
received UAUserActivityAutoPullActivitiesListKey bit on, fetching more app suggestions
*** Checking whether to do a pre-emptive fetch of the payload for item %{public}@/%{private}@
*** Ignoring prefetch for item %{public}@/%{private}@ because dontPrefetchBefore=%{public}@
*** Scheduling a pre-emptive fetch of the payload for item %{public}@/%{private}@
*** Completed a pre-emptive fetch of the payload for item %{public}@/%{private}@
issuing handoff-more_items command for %lu devices
issuing handoff-more_items command for device %@
got back %lu items for handoff-more_items command from device %@
.scanForTypes=%{public}@
[IN STREAM] Starting to receive types: %@
[IN STREAM] Input stream canceled
[IN STREAM] Done with input stream
[IN STREAM] Paste cancelled, closing stream
[IN STREAM] Receiving Header Info
[IN STREAM] Error, malformed data received. Have not received message header.
[IN STREAM] Receiving Header
[IN STREAM] Started receiving header
[IN STREAM] Error, malformed data received. Did not receive correct delimiter
[IN STREAM] Received Header: %@
[IN STREAM] Started receiving data file
[IN STREAM] Received data file
[IN STREAM] Stream Event Error: %@
[IN STREAM] Stream End Encountered
** DISCARDING ADVERTISEMENT with hash %{public}@ because it contains a fileProvider (0x%lx), and this platform does not support it.
 -- Received a kLSAdvertisementStringUserActivityKind; finding application with advertising string %{public}@
 -- MATCHED, adverising bytes %{public}@ to activityType %{private}@, from application %{private}@
-- Falling back to _UAUserActivityTypeBrowsingWeb because no application matched the advertisement %{public}@ and kUserActivityAdvertisingBytesItemHasWebpageURLMask was set.
 -- Received a kLSAdvertisementStringDomainNameKind; looking for native application application with advertising string %{public}@
 -- Adding domains for bundleID: %{private}@
 -- Domain name strings: %{private}@
 -- MATCHED, adverising bytes %{public}@ to domain name %{private}@, from application %{private}@
 -- Received a kLSAdvertisementStringDomainNameKind; no match for native application, so looking for browser
 -- Received a kLSAdvertisementStringPrivateSpaceKind; finding application with private space string %{public}@
 -- MATCHED, adverising bytes %{public}@ to privateType string %{private}@, from application %{private}@
 -- Found application %{private}@, with matching advertisingIdentifier %{private}@, from %{private}@ for payload %{public}@
Creating CornerActionBTLEItem, advertisementPayload=%{private}@ optionBit=%ld type=%{private}@ activityType=%{private}@ bundleID=%{private}@ teamID=%{private}@ advertisingOptions=%{public}@
Created wasContinuedInfo for BTLEAd: %{private}@
Unable to determine application on this device for advertisement %{public}@, so ignoring this received activity.
RECEIVED advertisement, %{public}@, matched against existing corner item %{public}@ so merely update it from the flags & options
for item %{public}@ requested=%{public}@ available=%{public}@
Requesting payload for item %{public}@ payload, but it is already present, so dispatching directly.
Requesting payload for item %{public}@ advertisementPayload=%{public}@ bundleIdentifier=%{private}@ with timeout: %{public}@
sharingFetch
*** DELAYING payload receive by an additional %f seconds for DEBUGAdditionalPayloadReceiveTimeInterval
*** FINISHED DELAYING payload receive by an additional %f seconds for DEBUGAdditionalPayloadReceiveTimeInterval
PAYLOAD:GOT payload for item %{public}@/%{public}@, dataSize=%ld/%{private}@ speed=%g/%{bitrate}ld error=%{public}@
Updated wasContinuedInfo with payload fetch results: %{private}@
Payload for item %{public}@/%{private}@ was received with error %{public}@
*** For activity %{public}@ of type NSUserActivityTypeBrowsingWeb, being reecived, since the teamID from received activity, %{private}@, and teamID associated with application targeted, %{private}@, do not match, setting the userInfoPayload to nil so we don't deliver an un-expected payload type to the target.
*** For activity %{public}@ of type NSUserActivityTypeBrowsingWeb, being received, since the teamID from received activity, %{private}@, and the target application has no teamID, setting the userInfoPayload to nil so we don't deliver an un-expected payload type to the target.
*** Mismatch for activity %{public}@  between teamID from received activity, %{private}@, and teamID associated with application targeted, %{private}@, so refusing to pass along activity to this target.  Error #%ld, UAContinuityUserActivityFailedValidation
*** Mismatch for activity %{public}@ between activityType from received activity, %{private}@, and activityType associated with application targeted, %{private}@, so refusing to pass along activity to this target, error #%ld.
Updating payload for item %{public}@ to %{private}@
Failed to fetch payload from sharingd for item %{public}@/%{private}@, with error %@
-- Calling %ld completionHandlers with payloadRequest information: error=%{public}@
PAYLOAD: clearing payload for activity %{public}@, self=%{private}@
--- item %{public}@ payload already present, so nil-ing it out.
 including entitledTeam: %{public}@ for bundle %{public}@
 including developerTeamID: %{public}@ for bundle %{public}@
 including teamID: %{public}@ from applicationIdentifier %{public}@
[OUT STREAM] Sending pboard info: %@
[OUT STREAM] Starting to send types: %@
[OUT STREAM] Done sending pasteboard, waiting for end of stream
[OUT STREAM] Unexpected event code: %lu
[OUT STREAM] Got data back: %@
[OUT STREAM] Stream End Encountered, shutting down
[OUT STREAM] Stream Timer Fired, shutting down
-- item %{public}@/%{private}@ not eligible, because it has expired (on %{public}@)
requestPayload...:, %{public}@ from client application %{public}@
wasResumedOnAnotherDevice, %{public}@ to client pid=%ld
activityPayloadFromDevice:%{public}@ forAdvertisementPayload:%{public}@ command:%{public}@ timeout:%ld
--- invalidation on connection to client %{private}@ pid=%ld
Using overridden team identifier %{public}@ for applicationIdentifier %{public}@
Using developer team identifier %{public}@ for applicationIdentifier %{public}@
About to fetch bundleIdentifier for process with pid %d. Has appStateMonitor: %{public}@
Failed to fetch bundleIdentifier for process with pid %ld after 10 seconds
CLIENT: Process info, for pid %d, is %{private}@
CLIENT: Process info, for pid %d, is %{private}@ (on queue)
CLIENT: Process info, for pid %d, doesn't include bundle identifier, so unable to locate this process 
except by pid. ( is %{public}@ )
UserActivityClient:%{public}@, teamID=%{private}@ applicationID=%{private}@ bundleID=%{private}@ accessAny=%{public,BOOL}d 
removing %{public}@ userActivityInfoItem
uuid=%{public}@
Removing item %{public}@/%{private}@ from additionalUserActivityAdvertisableItems
%{public}@ from client %ld
 - no need to call back to get updated info for activity %{public}@, because it is not dirty
 - A prepareToResume is already in progress for activity %{public}@, queuing callback for when fetch is complete
Error acquiring RBSAssertion: %@
Got error on connection back to client for %{public}@, error: %{public}@
Calling back to client to ask it to save activity %{public}@
FAILED: Calling back to client to ask it to save activity %{public}@ with error %{public}@.
Returned from back to client to ask it to save activity %{public}@, clean=%{public}s updatedInfo=%{private}@
Unable to call willSave for user activity %{public}@ for process %{private}@ because its owning process/connection seems to be gone.
error: %{public}@
Telling client that user activity %{public}@ was resumed (on another device).
 -- Called %lu pending fetch tasks for %{public}@, removing from queue
 -- No pending fetch tasks called for %{public}@
 -- %lu remaining queued tasks total
CLIENT: version=%ld, %{public}@ %{private}@ any=%{public}@ sandbox=%{public}@ clientInfo=%{private}@
deleteUserActivity %{public}@
%{private}@ %{private}@
doAddDynamicUserActivity(%{public}@, %{public}@) failed, nil for hash %{public}@ or teamID %{public}@.
doAddDynamicUserActivity, nil dynamicHash from (%{public}@, %{public}@, %{public}@).
doAddDynamicUserActivity(%{public}@, %{public}@) failed, nil for one param.
 - found %{public}@ activity, removing it.
doRemoveDynamicUserActivity(%{public}@), nil appActivity
Pinned Activity Info: %{public}@/%{private}@
*** Attempt to pin activity from process %{public}@, which doesn't have the %{public}@ entitlement.
*** Attempt to get current activity information from process %{public}@, which doesn't have the %{public}@ entitlement.
result=%{public}@ %{private}@ error=%{public}@
doGetUserActivityProxiesWithOptions:%{public}@
doDetermineIfUserActivityIsCurrent: uuid=%{public}@
doDetermineIfUserActivityIsCurrent: Found uuid=%{public}@, in client %{public}@ as %{private}@
*** Attempt to determineIfUserActivityIsCurrent from process %{public}@, which doesn't have the %{public}@ entitlement.
doFetchUserActivityInfoWithUUID:(%{public}@)
-- activity with uuid %{public}@, so fetching payload for it.
-- activity with uuid %{public}@, completed fetching payload, %{private}@ %{private}@ %{private}@%{private}@, for it. error=%{public}@
 -- Received error %{public}@ trying to fetch payload for item uuid %{public}@
 -- Sending userActivityInfo back to client, %{public}@/%{private}@
 -- Removing cornerActionItem payload %{public}@/%{private}@ because a client fetched it.
 -- Could not update activityInfo for fetch
 -- Sending Pinned userActivityInfo back to client: %{private}@
Activity with uuid %{public}@ fetch requested, but was neither a locally created item nor a corner action item, so returning error %{public}@
doUpdateUserActivityInfo: makeCurrent=%{public}@ newInfo = %{public}@/%{private}@
The application with pid %ld/%{private}@ didn't provide a activityType.
The application with pid %ld/%{private}@ doesn't have a team identifier in its application-identifier, or isn't from com.apple., and is sandboxed, so unable to proceed.
Application %{public}@ is registering an activity with teamID %{private}@ bundleID=%{private}@ activityType=%{private}@
Application item %{public}@/%{private}@ has a proxy %{public}@, so forcing an advertisement update.
Application item %{public}@/%{private}@ has changed .webPageURL, forcing an advertisement update.
Application item %{public}@/%{private}@ has changed proxy %{public}@, so forcing an advertisement update.
- Making %{public}@/%{private}@ into the currentItem from process %{private}@/%ld
refusing to register user activity from client, and returning error %{public}@ for item %{public}@ %{private}@
BECOMECURRENT: updating advertisement for %{public}@/%{private}@ because the becomeCurrent item changed or a DNS item changed its URL
BECOMECURRENT: updating notifiers for %{public}@/%{private}@ because the becomeCurrent item changed
doUpdateUserActivityWithUUID(%{public}@/%{private}@, current=%{public}@)
Checking if the current item for %{public}@ is changed, %{public}@/%{private}@ %{public}@%{public}@
Triggering the update of the advertisable items because the current status of our application, %{public}@, has changed.
Triggering the update of the advertisable items because uuid == nil, for application %{public}@, has changed.
doMarkUserActivityAsDirty(%{public}@) for app %{public}@ forceImmediate=%{public}@ webpageURL=%{public}@ expiration=%{public}@%{public}s%{public}s
 -- dirty activities for this client: (%{public}@) %{public}@
 -- Updating the user activity, because it's the currently advertised item, to let the server know it should (maybe) re-fetch the payload: %{public}@
Scheduling an advertising item update, for application %{public}@, because the   changed on a NSUserActivityTypeBrowsingWeb item, %{public}@/%{private}@
doRegisterAsProxyApplicationForPid, pid=%{public}d options=%{public}@
NETWORK:Starting browse for rendezous items for %{public}@ %{public}@.
NETWORK: browser=%@ service=%@/%@ more=%@
NETWORK: name=%{public}@ type=%{public}@ port=%ld
NETWORK: Setting up mDNS listener for connections, name=%{public}@ type=%{public}@ port=%ld
NETWORK: NSNetServicesErrorCode=%ld / %{public}@
NETWORK: netServicesDidStop, so terminating this listener, sender=%{private}@.
NETWORK: Sending initial packet to paired client %{private}@/%{public}@ from controllerUUID=%{public}@.
NETWORK: stream=%{private}@ have %ld/%{private}@ controllerUUID=%{public}@
NETWORK: stream=%{private}@ Remaining data, %ld/%{private}@
NETWORK: stream=%{private}@ error=%{public}@
NETWORK: stream=%{private}@ END ENCOUNTERED
COMMAND: %{private}@, from %{private}@/%{public}@
NETWORK: Responding to peer %{private}@/%{public}@ with our UUID, %{public}@, to establish connection from controllerUUID=%{public}@.
NETWORK: Destroying replay handler object because the peer's UUID %{public}@ matched our own, controllerUUID=%{public}@.
-- checking replayController %{public}@ against peerUUID=%{public}@
NETWORK: Destroying network replay object to %@ because we already have a different connection to that peerUUID %{public}@, controllerUUID=%{public}@
COMMANDRESPONSE: %{private}@ (controllerUUID=%{public}@ peerName=%{private}@)
controllerUUID=%{public}@
[CODER_V1] Starting to receive pasteboard
[CODER_V1] Input stream canceled
[CODER_V1] Done with input stream: %@, %@
[CODER_V1] Processing Received data with length: %ld
[CODER_V1] Receiving Header Info
[CODER_V1] Error, malformed data received. Have not received message header.
[CODER_V1] Receiving Header
[CODER_V1] Started receiving header
[CODER_V1] Received Header: %@
[CODER_V1] Started receiving data file
[CODER_V1] Error, malformed data received. Did not receive correct delimiter
[CODER_V1] Recived %ld of %ld
[CODER_V1] Received data file
[CODER_V1] Done queuing chunks, starting shutdown timer
[CODER_V1] Queuing next chunk to send: %ld
[OUT STREAM] Data sent: %ld - %ld
TIME: -- since timeOffsetByteInTicks == 0xff, storing maximum age time.
TIME: --- Guessing that their clock and our clock are in different epochs, ourOffset=%ld, theirs %ld, so falling back %ld seconds and setting delta to %ld. result=%{public}@/%{public}@
TIME: --- Guessing that their clock is somewhat ahead of our clock, and in the same epoch, ourOffset=%ld, theirs %ld, so setting result == no, result=%{public}@=%{public}@
TIME: --- Guessing that their clock is the same or behind of our clock, and in the same epoch, ourOffset=%ld, theirs %ld, so setting result to delta (%ld) + %ld seconds from epoch, result=%{public}@/%{public}@
TIME: result time = %{public}@ %{public}@
Calculated advertisingBytes for %ld / %{private}@, result=%{public}@
SIMULATOR: Requesting payload from paired client, uuid=%{public}@
SIMULATOR: Received payload from paired client, uuid=%{public}@, webPageURL=%{public}@ payload=%{private}@
SIMULATOR: Failed to get payload for activity %{public}@
SIMULATOR: Calling completion handler because activity %{public}@/%{private}@ was resumed, error=%{public}@
setAdvertisableItems:(%{public}@)
ADVERTISING: Scheduling an update to check the advertisement, because we've changed the list of advertised items.
--- Scheduling an update to check the advertisement, because we've cleared the list of advertisable items.
advertising %@, when = %@
ADVERTISING: %{public}@ (old=%{public}@)%{public}@
ADVERTISING: Matched current advertisement, so not updating ( %{public}@ vs %{public}@)
ADVERTISING: Changing advertisement to nil because it's been removed, %{public}@
itemToAdvertise is nil but we need to advertise an auto pull request, so choosing item %@ out of corner manager's possible advertiseable items to advertise
setting UAUserActivityItemIsNotActiveKey = 1 for item %@
setting UAUserActivityItemIsNotActiveKey = 0 for item %@
setting UAUserActivityAutoPullActivitiesListKey = 1 for item %@
ADVERTISING: Advertising new item or updating user-idle time in previous advertisement, %{public}@/%{private}@
lastAdvertismentTime is in the future, this is wrong and is probably because the system clock has changed
ADVERTISING: Time since last advertisement seems to have gone backwards, now=%{public}@ last=%{public}@
ADVERTISING: Setting supressAdvertisementChange = YES because the client attempted to change advertisement too quickly, %f since lastAdvertisementTime (now=%{public}@ last=%{public}@)
ADVERTISING: self.advertisementTimes=%ld %{public}@
ADVERTISING: Removing first item, %{public}@, becaues it is earlier than %{public}@
ADVERTISING: Setting supressAdvertisementChange = YES because the advertisement too quickly, %ld in last %f seconds (earliest=%{public}@ now=%{public}@)
ADVERTISING: Since supressAdvertisementChange == YES, not actually changing the active advertisement and relying on it happening again in the near future.
OLDWEB: Adding item %{private}@, date=%{public}@
ADVERTISING:%{public}@ %{public}@ type=%{private}@%{private}@ at %{public}@ opts=%{public}@
_updateAdvertisement, entering.
Removing .currentAdvertisedItem because Bluetooth is not enabled.
Not advertising because this device is in batterSaverModeEnabled == YES
ADVERTISING: Removing advertisement %{public}@ because advertising is suspended
We have a non-active advertisement, started at: %@, %@s till removal
Removing non-active advertisment
Rescheduling update to remove advertisment
self.advertisableItems is %@, itemToAdvertise is %@
UPDATEADVERTISEMENT: Removing current advertisement item, %{public}@/%{private}@, because its process is gone
UPDATEADVERTISEMENT: No item available to advertise, so switching to advertising existing advertisement nonactively.
UPDATEADVERTISEMENT: No item available to advertise, so
UPDATEADVERTISEMENT: Removing current advertisement item, %{public}@/%{private}@, because self.activityAdvertisingAllowed == NO
removeAdvertisement, currentAdvertisementPayload=%{private}@
OLDWEB: Checking expiration of %{public}@ of %{private}@, expireBefore=%{public}@
OLDWEB: Removing (old) NSUserActivityTypeBrowsingWeb item, %{private}@, because it is older than %{public}@ (expired at %{public}@
-- CHECKING %{public}@ version %{public}@, %{public}@ = %ld.%c.%ld
PEERS: %ld/%{public}@, advertiseHandoff=%{public}s pastboard=%{public}s
PEERS: Our peers ability to received handoff or pasteboard advertisements has changed; scheduling an check for our advertisement. %{public}s/%{public}s
Setting pairedDevices=%ld/%{private}@
dataForMoreAppSuggestions:
skipping %@ because its .when (%@) is older than %lum:
%@: %@
[Sharing Advertiser] Payload request for ad: %{public}@, command: %{public}@, from: %{private}@
activityPayloadForAdvertisementPayload: got handoff-more_items command
payload: %@ (%lu bytes long)
[PBOARD] Paste Requested from remote %{public}@/%{private}@
[PBOARD] Paste V2 Requested from remote %{public}@/%{private}@
[PBOARD] Types Requested from remote %{public}@/%{private}@
Advertising: advertiserData=%{public}@ command=%{public}@ peer=%{private}@ %{public}@/%{public}@
-- advertiseable item %{private}@/%{public}@ matches the advertisingPayload requested %{public}@, so using it.
-- the advertisingPayload requested %{public}@ does not match any advertiseable item
OLDWEB: Checking against previous advertised NSUSerActivityTypeBrowsingWeb items, %{private}@
OLDWEB: the current advertised item, %{private}@/%{public}@, is a NSUserActivityTypeBrowsingWeb, and a previous advertisement %{public}@ from %{public}@ matches the requested payload.
SAMPLEPAYLOAD: Sending %ld bytes to device %{private}@
handoffFetch
success=%d enableTelemetry=YES 
-- received data from advertiseableItem delegate callback to client, uuid=%{public}@ activity=%{public}@/%{private}@
Failure updating userActivity information from client application for activity %{public}@/%{private}@  %{public}@, using (possibly stale) payload instead, status=%ld.
-- Forcing new payload encoder to peer %{private}@/%{public}@ %{public}@ because debugForceNewPayloadEncoder == YES
-- Falling back to 'old' format of payload to support pre Blacktail era device, %{private}@/%{public}@ %{public}@ (size=%ld vs %ld)
-- ENCODING error from client instead of payload, %{public}@ / %{public}@
** The payload for user activity item %{public}@/%{private}@ was %ld bytes, larger than the maximum %ld, and so this user activity cannot be sent to the requesting device.
*** The payload for the user activity item %{public}@/%{private}@ is %ld bytes, larger than the recommended maximum %ld, which may cause slow transfers.
PAYLOAD:Responding to SFAdvertiser with data for advertisement %{public}@ activity %{public}@ type=%{public}@, fetchTime=%g data=%ld/%{private}@
Failure after updating userActivity information from client application for activity %{public}@/%{private}@ %{public}@; the activity disappeared/is no longer current and so cannot be handedOff.
RESPONDING: Unable to locate a userActivity for the payloadData %{public}@ so returning nil/nil and an error as the payload for the requesting device.
Failing request because self.activityAdvertisingAllowed == NO
User activity %{public}@ was resumed on another device, so inform (if desired) the author of the activity on this device
Failing because self.activityAdvertisingAllowed == NO, ignoring notification.
PAIRED DEVICES CHANGED: Now is %ld/%{private}@
Adopting paired devices, PAIRED DEVICES CHANGED: Now is %ld/%@  (was %ld devices)
SIMULATOR: Received message from another simulator on port %ld, so dispatching.
SIMULATOR: Tearing down dispatch_source_t for messages from simulator port %ld
SIMULATOR: Creating UASimulator to talk to real useractivityd in OSX, portName=%{public}@
SIMULATOR: Received notification that parent simulator started up, so forcing a reconnect to re-establish state.
SIMULATOR: Looking up parent port in order to talk to useractivity in OSX
UASimRegisterWithParentWithVersion()=%ld parentVersion=%ld
SIMULATOR: Changing peer device info to %{private}@
SIMULATOR: Paired with parent simulator, commandPort=%ld pairedPort=%ld pairedPeer=%{public}@
SIMULATOR: Detected death of parent simulator port %ld.
SIMULATOR: *** Attempting to reconnect / relaunch parent simulator.
SIMULATOR: Cancelling parent simulator port death source, port %ld
SIMULATOR: Simulator application is %{public}@
SIMULATOR: Because advertising is suspended, returning 'no advertised item' information to paired simulator.
SIMULATOR: Requesting payload for item %{public}@
SIMULATOR: Retrieved payload for item %{public}@, error=%{public}@
SIMULATOR: Sending information on item %{public}@ to paired simulator
SIMULATOR: Returning 'no advertised item' information to paired simulator.
SIMULATOR: Asking receiver to fetch the advertisement.
SIMULATOR: Telling manager to determine the bestApp again
SIMULATOR: Also telling advertisers to determine the item to advertise, because activitiesShouldCrossover=YES
SIMULATOR: Setting received item to %{public}@/%{private}@
SIMULATOR: Found item to send; %{public}@/%{private}@.  Fetching payload.
SIMULATOR: Got payload for item %{public}@/%{private}@.  Returning this info:%{private}@
SIMULATOR: Waiting for payload fetch to complete for item %{public}@
SIMULATOR: Finished wait for payload fetch to complete for item %{public}@
SIMULATOR: Failed to find activity matching uuid %{public}@, items=%{private}@
SIMULATOR: Found item ; %{public}@/%{private}@.  Calling its wasContinued.
Allowing connection to admin interface in simulator from %{public}@
*** SENDING PING %{private}@ to clients.
- doNOP, str=%{private}@, so echoing that back to client.
### DEBUGGING: doSetDebugOption:%{public}@ => %{public}@
### DEBUGGING: Changing EnableSharingFramework to %{public}@
### Removing SFActivityAdvertiser from UASharingAdvertiser
### Adding SFActivityAdvertiser to UASharingAdvertiser.
### Removing SFActivityScanner from UASharingReceiver.
### Adding SFActivityScanner to UASharingReceiver.
str=%{private}@
-- Matching current best item %{public}@/%{private}@
Removing previous injected fake BTLE item %@
Injecting fake BTLE item, %{private}@ "%{private}@" %{private}@ payload=%{private}@
Removing injected fake BTLE item %@
Injecting nil BTLE item, so removing last item
About to call prepareToResumeActivityWithUUID for activityUUID %{public}@
Finished call prepareToResumeActivityWithUUID for activityUUID %{public}@, error=%{public}@
About to call didResumeUserActivityWithUUID for activityUUID %{public}@
Finished call didResumeUserActivityWithUUID for activityUUID %{public}@
Setting up network connection to other machine %{private}@ %ld
doGetPairedDevices(%{public}@)
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>22A380007</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleDisplayName</key>
<string>useractivityd</string>
<key>CFBundleExecutable</key>
<string>useractivityd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.coreservices.useractivityd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>useractivityd</string>
<key>CFBundlePackageType</key>
<string>APPL</string>
<key>CFBundleShortVersionString</key>
<string>1</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14E6097d</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.4</string>
<key>DTSDKBuild</key>
<string>20E5212d</string>
<key>DTSDKName</key>
<string>iphonesimulator16.4.internal</string>
<key>DTXcode</key>
<string>1430</string>
<key>DTXcodeBuild</key>
<string>14E6097d</string>
<key>MinimumOSVersion</key>
<string>16.4</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.coreservices.useractivityd</string>
<key>com.apple.PowerManagement.control</key>
<true/>
<key>com.apple.backboardd.lastUserEventTime</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudDocuments</string>
<string>CloudKit</string>
</array>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.iokit.powerdxpc</key>
<true/>
<key>com.apple.private.associated-domains</key>
<true/>
<key>com.apple.private.librarian.container-proxy</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceUbiquity</string>
<string>kTCCServiceSystemPolicyAllFiles</string>
</array>
<key>com.apple.runningboard.assertions.useractivityd</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.sharing.handoff.advertising</string>
<string>com.apple.sharing.handoff.scanning</string>
<string>com.apple.CarPlayApp.non-launching-service</string>
<string>com.apple.server.bluetooth.general.xpc</string>
</array>
<key>com.apple.system.powermanagement.useractivity</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.SharedWebCredentials</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>lsuseractivityd</string>
</array>
</dict>
</plist>
application-identifier$com.apple.coreservices.useractivityd0&!com.apple.PowerManagement.control
0+&com.apple.backboardd.lastUserEventTime
com.apple.bluetooth.system
0A#com.apple.developer.icloud-services0
CloudDocuments
CloudKit083com.apple.frontboardservices.display-layout-monitor
com.apple.iokit.powerdxpc
0)$com.apple.private.associated-domains
00+com.apple.private.librarian.container-proxy
com.apple.private.tcc.allow06
kTCCServiceUbiquity
kTCCServiceSystemPolicyAllFiles04/com.apple.runningboard.assertions.useractivityd
4com.apple.security.exception.mach-lookup.global-name0
%com.apple.sharing.handoff.advertising"com.apple.sharing.handoff.scanning*com.apple.CarPlayApp.non-launching-service&com.apple.server.bluetooth.general.xpc02-com.apple.system.powermanagement.useractivity
keychain-access-groups0 
com.apple.SharedWebCredentials0&
seatbelt-profiles0
lsuseractivityd
