%@:%@/%@
%@/%@
%@ %@
knownToServer
wasCached
etag
etagBeforeCrossZoneMove
deletionChangeToken
hasKnownToServer
TB,N
TB,N,V_knownToServer
hasWasCached
TB,N,V_wasCached
hasEtag
TB,R,N
T@"NSString",&,N,V_etag
hasEtagBeforeCrossZoneMove
T@"NSString",&,N,V_etagBeforeCrossZoneMove
hasDeletionChangeToken
T@"NSData",&,N,V_deletionChangeToken
<%@:%p>, device:'%s' mounted-on:'%s' fstype:%s(%@) case-sensitive:%s
deviceID
Ti,R,N,V_deviceID
isCaseSensitive
TB,R,N,V_isCaseSensitive
isIgnoringOwnership
TB,R,N,V_isIgnoringOwnership
hasRenameSwap
TB,R,N,V_hasRenameSwap
hasRenameExcl
TB,R,N,V_hasRenameExcl
hasCloning
TB,R,N,V_hasCloning
mountPath
T@"NSString",R,N
fsTypeName
freeSize
T@"NSNumber",R,N
totalSize
RDONLY
SYNCHRONOUS
NOEXEC
NOSUID
NODEV
UNION
ASYNC
CPROTECT
EXPORTED
QUARANTINE
LOCAL
QUOTA
ROOTFS
DOVOLFS
DONTBROWSE
IGNORE_OWNERSHIP
AUTOMOUNTED
JOURNALED
NOUSERXATTR
DEFWRITE
MULTILABEL
NOATIME
v8@?0
create-log-section
create table backup_manifest (relative_path blob not null, file_id integer, doc_id integer, gen_count integer, is_directory integer, new_file_id integer, new_doc_id integer, new_gen_count integer)
INSERT INTO backup_manifest (relative_path, file_id, doc_id, gen_count, is_directory, new_file_id, new_doc_id, new_gen_count) VALUES (%s, %lld, %lld, %d, %d, NULL, NULL, NULL)
B16@?0@"PQLConnection"8
CREATE UNIQUE INDEX relative_path_index ON backup_manifest (relative_path)
SELECT * FROM backup_manifest WHERE new_file_id IS NULL
@24@?0@"PQLResultSet"8^@16
UPDATE backup_manifest SET new_file_id = %llu,    new_doc_id = %@,    new_gen_count = %d WHERE relative_path = %@
ATTACH DATABASE %@ AS clientdb
UPDATE clientdb.client_items SET item_file_id = -item_file_id
UPDATE clientdb.client_items SET item_doc_id = -item_doc_id
CREATE INDEX file_id_gen_count_index ON backup_manifest(file_id, gen_count)
CREATE INDEX doc_id_index ON backup_manifest(doc_id)
UPDATE clientdb.client_items  SET item_generation = (SELECT new_gen_count FROM backup_manifest WHERE file_id = -clientdb.client_items.item_file_id AND gen_count = clientdb.client_items.item_generation)
UPDATE OR IGNORE clientdb.client_items  SET item_file_id = (SELECT new_file_id FROM backup_manifest WHERE file_id = -clientdb.client_items.item_file_id)
UPDATE OR IGNORE clientdb.client_items  SET item_doc_id = (SELECT new_doc_id FROM backup_manifest WHERE doc_id = -clientdb.client_items.item_doc_id)
UPDATE OR IGNORE clientdb.client_items SET item_staged_generation = NULL WHERE item_staged_generation IS NOT NULL
UPDATE OR IGNORE clientdb.client_items SET item_staged_file_id = NULL WHERE item_staged_file_id IS NOT NULL
control-odd
control-even
SELECT counter FROM clientdb.backup_detector
UPDATE clientdb.backup_detector SET old = %llu, new = %llu
databaseURL
T@"NSURL",&,N,V_databaseURL
database
T@"PQLConnection",&,N,V_database
urlPropertiesToFetch
T@"NSArray",&,N,V_urlPropertiesToFetch
attachedDatabaseURL
T@"NSURL",&,N,V_attachedDatabaseURL
Sqlite database became corrupted, abort...
-[BRCPQLConnection _setErrorHandlerWithDBCorruptionHandler:]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iCloudDrive_Sim/iCloudDrive-29/core/foundation/BRCPQLConnection.m
v32@?0@"PQLConnection"8@"PQLStatement"16@"NSError"24
%@ locked for more than 1 minute, aborting...
-[BRCPQLConnection _setLockedHandler]_block_invoke
B20@?0@"PQLConnection"8i16
item_recursive_properties
server_items
item_sharing_options
INSERT
(null)
Significantly too slow SQL statement: 
v32@?0@"PQLConnection"8^{sqlite3_stmt=}16Q24
ATTACH "%@" AS %@
-[BRCPQLConnection attachDBAtPath:as:error:]
(passed to caller)
(ignored by caller)
setting profiling hook is not supported on %@
-[BRCPQLConnection setProfilingHook:]
com.apple.bird.db.batching
error closing connection %@: %@
-[BRCPQLConnection brc_close]
pragma page_count
pragma page_size
profilingEnabled
vmStepsExecuted
TQ,R,N,V_vmStepsExecuted
lockedHandler
T@?,C,D,N
explain query plan %@
plan:
    %@
<%@: %p
finished
cancelled
executing
ready
waiting
 %s>
UNIMPLEMENTED
idle
 duration:%@
 (bypassing system scheduling)
 (non-discretionary)
 next-try:%@
 next-try:%@ ago
 last-error:%@
 last-try:%@
 sub {
    %@,
 dep {
isFinished
isExecuting
com.apple.bird.operation
failed
completed
with error: 
TB,N,GisExecuting
TB,N,GisFinished,V_finished
nonDiscretionary
TB,N,V_nonDiscretionary
operationID
T@"NSUUID",R,N
startDate
T@"NSDate",R,N,V_startDate
syncContext
T@"BRCSyncContext",R,N,V_syncContext
highPriorityWaitGroup
T@"NSObject<OS_dispatch_group>",R,N,V_highPriorityWaitGroup
group
T@"CKOperationGroup",&,N,V_operationGroup
error
T@"NSError",R,N,V_lastError
logSections
TQ,R,N,V_logSections
callbackQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_callbackQueue
operationThrottle
T@"BRCThrottle",N,V_operationThrottle
operationFailureThrottle
T@"BRCThrottle",N,V_operationFailureThrottle
usesBackgroundSession
mainBlock
T@?,C,N,V_mainBlock
finishBlock
T@?,C,N,V_finishBlock
sharedZoneSubscription
com.apple.sharedb
sync/sharedb
success
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v16@?0@"CKRecordZoneID"8
v16@?0@"NSError"8
v28@?0@"CKServerChangeToken"8B16@"NSError"20
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
fetch-recent-documents
%K == %@
indexName
SearchIndexes
v16@?0@"CKRecord"8
unreachable: Couldn't allocate ranks when fetching query %@
v24@?0@"CKQueryCursor"8@"NSError"16
recent_documents
favorite_documents
v24@?0@"_BRCOperation"8@"NSError"16
 i:%@
 parent-id:%@
 sc:data
 sc:docs
 sc:trash
 old-ct:%@
com.apple.clouddocs.private.share-bookmark
v36@?0B8B12B16@"NSNumber"20@"NSError"28
SELECT throttle_state FROM client_sync_up WHERE throttle_id = %llu
com.apple.clouddocs.private.trash-parent-bookmark
appLibrary
T@"BRCAppLibrary",R,N,V_appLibrary
itemGlobalID
T@"BRCItemGlobalID",R,N,V_itemGlobalID
parentGlobalID
T@"BRCItemGlobalID",R,N,V_parentGlobalID
oldParentFileObjectID
T@"ICDBRFileObjectID",R,N,V_oldParentFileObjectID
oldAppLibraryID
T@"NSString",R,N,V_oldAppLibraryID
parentGlobalIDs
T@"NSSet",&,N,V_parentGlobalIDs
T@"NSURL",R,D,N
isInDocumentScope
TB,R,N,V_isInDocumentScope
isInDataScope
TB,R,N,V_isInDataScope
isInTrashScope
isDocumentsFolder
Client
[%d]
applicationIdentifier
T@"NSString",R,N,V_applicationIdentifier
isNonAppSandboxed
TB,R,N,V_isNonAppSandboxed
isAllowedToAccessAnyCloudService
TB,R,N,V_isAllowedToAccessAnyCloudService
isProxyEntitled
TB,R,N,V_isProxyEntitled
isSharingProxyEntitled
TB,R,N,V_isSharingProxyEntitled
isFolderSharingProxyEntitled
TB,R,N,V_isFolderSharingProxyEntitled
isSharingPrivateInterfaceEntitled
TB,R,N,V_isSharingPrivateInterfaceEntitled
isAutomationEntitled
TB,R,N,V_isAutomationEntitled
canFetchUserQuota
appLibraryIDs
T@"NSSet",R,N,V_appLibraryIDs
defaultAppLibraryID
T@"NSString",R,N,V_defaultAppLibraryID
hasAuditToken
TB,R,N,V_hasAuditToken
auditToken
T{?=[8I]},R,N,V_auditToken
tags
T@"NSMutableArray",&,N,V_tags
BRCSizeInfoCompletedUnitCountKey
BRCSizeInfoTotalUnitCountKey
indeterminate
paused
s:%@ 
%@f:%.4f uc:%lld/%lld
v24@?0@"NSURL"8@"NSError"16
isPublished
TB,R,N,V_published
parentFileObjectIDs
T@"NSArray",R,N
SELECT dir_faults_count, uploaded_size,needs_upload_size, uploaded_count,needs_upload_count, downloaded_size,needs_download_size, downloaded_count,needs_download_count, dl_unstaged_count,needs_dl_unstage_count, synced_up_count,needs_sync_up_count, over_quota_count, shared_by_me_count, shared_to_me_count FROM item_recursive_properties WHERE item_rowid = %lld
 upload{%llu/%llu files, %llu/%llu bytes}
 download{%llu/%llu files, %llu/%llu bytes}
<%@:%p%@>
numberOfDirFaults
TQ,N,V_numberOfDirFaults
uploadedSize
TQ,N,V_uploadedSize
needsUploadSize
TQ,N,V_needsUploadSize
uploadedCount
TQ,N,V_uploadedCount
needsUploadCount
TQ,N,V_needsUploadCount
downloadedSize
TQ,N,V_downloadedSize
needsDownloadSize
TQ,N,V_needsDownloadSize
downloadedCount
TQ,N,V_downloadedCount
needsDownloadCount
TQ,N,V_needsDownloadCount
unstagedCount
TQ,N,V_unstagedCount
needsUnstageCount
TQ,N,V_needsUnstageCount
syncedUpCount
TQ,N,V_syncedUpCount
needsSyncUpCount
TQ,N,V_needsSyncUpCount
overQuotaCount
TQ,N,V_overQuotaCount
sharedByMeCount
TQ,N,V_sharedByMeCount
sharedToMeCount
TQ,N,V_sharedToMeCount
B16@?0@"BRCAppLibrary"8
supportsSecureCoding
TB,R
readonly-interactive-db
db-corrupting-handler-queue
db was corrupted
-[BRCAccountSession(BRCDatabaseManager) dbBecameCorrupted]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iCloudDrive_Sim/iCloudDrive-29/core/BRCDatabaseManager.m
v24@?0@"PQLConnection"8@?<v@?>16
serverTruth
clientTruth
client.db
can't open the client db we've just created %{errno}d
-[BRCAccountSession(BRCDatabaseManager) _startWatcher]
someone ripped the database from under our feet
-[BRCAccountSession(BRCDatabaseManager) _startWatcher]_block_invoke
-wal
checker.db
%lld
PRAGMA cache_size = %@
PRAGMA cache_spill = 0
PRAGMA cache_spill = %@
fetch_and_inc64
v28@?0^{sqlite3_context=}8i16^^{sqlite3_value}20
inc_and_fetch64
fetch_and_dec64
dec_and_fetch64
call_block
indexset_contains
migration_is_parented_or_equal_to_old_doc_id
root
documents
SELECT item_parent_id FROM client_items WHERE zone_rowid = %@ AND item_id = %@
item_id_is_root
item_id_is_documents
trigger_notification
bump_notifs_rank
bump_notifs_rank_and_trigger_notifs
checker
%@.db
-[BRCAccountSession(BRCDatabaseManager) _setupBackupDetector:error:]
-[BRCAccountSession(BRCDatabaseManager) _stepBackupDetector:newState:error:]
UPDATE server_zones SET zone_plist = %@ WHERE rowid = %@
UPDATE client_zones SET zone_plist = %@ WHERE rowid = %@
INSERT OR IGNORE INTO server_zones (zone_owner, zone_name, zone_plist) VALUES (%@, %@, %@)
SELECT rowid from server_zones WHERE zone_owner = %@ and zone_name = %@
DELETE FROM server_zones WHERE rowid = %@
SELECT container_id, rowid FROM rowid_reservations
INSERT INTO rowid_reservations (container_id) VALUES (%@)
UPDATE app_libraries SET app_library_plist = %@, zone_rowid = %@ WHERE rowid = %@
INSERT OR REPLACE INTO app_libraries (rowid, app_library_name, app_library_plist, zone_rowid)  VALUES (%@, %@, %@, %@)
 INSERT OR IGNORE INTO item_recursive_properties   (item_rowid, item_id, item_parent_id, item_type, zone_rowid, item_parent_zone_rowid) VALUES   (%llu, %@, NULL, %d, %@, %@)
DELETE FROM app_libraries WHERE rowid = %@
SELECT rowid, app_library_name, app_library_plist, zone_rowid FROM app_libraries
SELECT rowid, app_library_name, app_library_plist, zone_rowid FROM app_libraries WHERE app_library_name = %@
INSERT OR REPLACE INTO client_zones (rowid, zone_owner, zone_name, zone_plist) VALUES (%@, %@, %@, %@)
DELETE FROM client_zones WHERE rowid = %@
DELETE FROM client_unapplied_table WHERE zone_rowid = %@ AND throttle_state != 0
DELETE FROM client_unapplied_table WHERE zone_rowid = %@ AND throttle_state = 0
DELETE FROM client_sync_up WHERE zone_rowid = %@ AND throttle_state != 0
DELETE FROM client_sync_up WHERE zone_rowid = %@ AND throttle_state = 0
DELETE FROM client_uploads WHERE zone_rowid = %@ AND throttle_state != 0
DELETE FROM client_uploads WHERE zone_rowid = %@ AND throttle_state = 0
DELETE FROM client_downloads WHERE zone_rowid = %@ AND throttle_state != 0
DELETE FROM client_downloads WHERE zone_rowid = %@ AND throttle_state = 0
SELECT rowid, zone_owner, zone_name, zone_plist FROM client_zones WHERE zone_owner != %@
SELECT rowid, zone_owner, zone_name, zone_plist FROM server_zones WHERE zone_owner != %@
SELECT rowid, zone_owner, zone_name, zone_plist FROM server_zones WHERE zone_owner = %@ AND zone_name = %@
SELECT rowid, zone_owner, zone_name, zone_plist FROM client_zones WHERE zone_owner = %@
SELECT rowid, zone_owner, zone_name, zone_plist FROM client_zones WHERE zone_owner = %@ AND zone_name = %@ AND zone_plist IS NOT NULL
SELECT rowid, zone_owner, zone_name, zone_plist FROM client_zones WHERE zone_owner = %@ AND rowid = %@
SELECT rowid, zone_owner, zone_name, zone_plist FROM server_zones WHERE zone_owner = %@
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_scope, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_local_change_count, version_old_version_identifier, item_live_conflict_loser_etags, item_file_id, item_generation FROM client_items WHERE item_bouncedname LIKE '%%.folder'   AND item_filename NOT LIKE '%%.folder'   AND item_type IN (0, 9, 10)   AND item_state = 0
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_scope, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_local_change_count, version_old_version_identifier, item_live_conflict_loser_etags, item_file_id, item_generation FROM client_items AS li      WHERE li.item_notifs_rank >= %lld        AND li.item_state = 0   ORDER BY li.item_notifs_rank ASC LIMIT %lld
SELECT li.rowid, li.zone_rowid, li.item_id, li.item_creator_id, li.item_sharing_options, li.item_side_car_ckinfo, li.item_parent_zone_rowid, li.item_localsyncupstate, li.item_local_diffs, li.item_notifs_rank, li.app_library_rowid, li.item_min_supported_os_rowid, li.item_scope, li.item_user_visible, li.item_stat_ckinfo, li.item_state, li.item_type, li.item_mode, li.item_birthtime, li.item_lastusedtime, li.item_favoriterank,li.item_parent_id, li.item_filename, li.item_hidden_ext, li.item_finder_tags, li.item_xattr_signature, li.item_trash_put_back_path, li.item_trash_put_back_parent_id, li.item_alias_target, li.item_creator, li.item_processing_stamp, li.item_staged_file_id, li.item_staged_generation, li.item_bouncedname, li.item_local_change_count, li.item_old_version_identifier, li.version_name, li.version_ckinfo, li.version_mtime, li.version_size, li.version_thumb_size, li.version_thumb_signature, li.version_content_signature, li.version_xattr_signature, li.version_edited_since_shared, li.version_device, li.version_conflict_loser_etags, li.version_quarantine_info, li.version_uploaded_assets, li.version_upload_error, li.version_local_change_count, li.version_old_version_identifier, li.item_live_conflict_loser_etags, li.item_file_id, li.item_generation FROM client_items AS li INNER JOIN client_sync_up AS su ON su.throttle_id = li.rowid WHERE su.zone_rowid = %@   AND (su.in_flight_diffs BETWEEN -9223372036854775808 AND 9223372036854775807)   AND su.throttle_state != 0
SELECT key FROM devices WHERE name = %@
INSERT INTO devices (name) VALUES (%@)
SELECT user_plist FROM users WHERE user_key = %@
SELECT user_plist FROM users WHERE user_name = %@
SELECT user_key FROM users WHERE user_name = %@
UPDATE users SET user_plist = %@ WHERE user_name = %@
UPDATE users SET user_plist = %@ WHERE user_name = %@ AND user_plist IS NULL
INSERT INTO users (user_name, user_plist) VALUES (%@, %@)
zone_rowid = %@
SELECT COUNT(1), SUM(version_size) FROM client_items WHERE item_localsyncupstate = 3 AND %@ AND call_block(%p, version_upload_error)
SELECT COUNT(1) FROM client_items WHERE item_localsyncupstate = 4 AND %@ AND NOT item_id_is_documents(item_id)
UPDATE client_items SET item_min_supported_os_rowid = NULL
SELECT os, br, bird_schema, db_schema FROM %@ ORDER BY rowid DESC LIMIT 1
INSERT INTO %@ (date,os,br,bird_schema,db_schema) VALUES (%lu,%@,%@,%u,%@)
SELECT count(*) FROM server_state
missing entry in the server_state table
+[BRCAccountSession(BRCDatabaseManager) _checkIntegrity:serverTruth:session:skipBackupDetection:error:]
server_boot_history
SELECT old, new, counter, os, br FROM backup_detector
UPDATE backup_detector set old = %llu, new = %llu, counter = %llu, br = %@
SELECT count(*) FROM client_state
missing entry in the client_state table
boot_history
UPDATE backup_detector SET os = %@
SELECT * FROM client_state
there should always be one row in client_state {%@}
-[BRCAccountSession(BRCDatabaseManager) _finishClientTruthConnectionSetupWithError:]
SELECT uuid FROM backup_detector
B16@?0@"BRCServerZone"8
UPDATE client_state SET v = %@
unable to flush client state, crash to maintain consistency
-[BRCAccountSession(BRCDatabaseManager) _finishClientTruthConnectionSetupWithError:]_block_invoke
v16@?0@"PQLConnection"8
B16@?0@"BRCClientZone"8
CREATE TEMP TRIGGER recursive_notifs  AFTER UPDATE OF dir_faults_count, uploaded_size,needs_upload_size, uploaded_count,needs_upload_count, downloaded_size,needs_download_size, downloaded_count,needs_download_count, dl_unstaged_count,needs_dl_unstage_count, synced_up_count,needs_sync_up_count, over_quota_count, shared_by_me_count, shared_to_me_count ON main.item_recursive_properties  BEGIN  SELECT trigger_notification(old.item_rowid) ;  UPDATE client_items SET item_notifs_rank = bump_notifs_rank()  WHERE rowid = old.item_rowid ; END
CREATE TEMP TRIGGER child_item_count_notifs  AFTER UPDATE OF visible_child_count ON main.client_items  BEGIN  UPDATE client_items SET item_notifs_rank = bump_notifs_rank_and_trigger_notifs(old.rowid)   WHERE old.visible_child_count != new.visible_child_count     AND rowid = old.rowid     AND item_type = 0 ; END
PRAGMA recursive_triggers = true
SELECT state FROM server_state
there should always be one row in server_state: %@
-[BRCAccountSession(BRCDatabaseManager) _finishServerTruthConnectionSetupWithError:]_block_invoke
server.db
db is stale even after recreating
+[BRCAccountSession(BRCDatabaseManager) _openConnection:serverTruth:databaseName:baseURL:initialVersion:lastCurrentVersion:error:]
we should be able to attach the server db {%@}
SELECT bird_schema FROM server_boot_history ORDER BY rowid DESC LIMIT 1
SELECT bird_schema FROM boot_history ORDER BY rowid DESC LIMIT 1
server
client
>>> BROKEN STRUCTURE
>>> SYNC DISABLED (app not installed)
>>> NEEDS UPGRADE
- %@
-----------------------------------------------------
+ app library: %@
SELECT count(*) FROM boot_history
%u containers matching '%s'
-[BRCAccountSession(BRCDatabaseManager) dumpStatusToFileHandle:zoneName:tracker:error:]
-[BRCAccountSession(BRCDatabaseManager) dumpDatabaseToFileHandle:zoneName:tracker:error:]
dump taken at %@ [account=%@] [home=%@]
dump taken at %@
server_truth
SELECT date,os,br,bird_schema,db_schema FROM server_boot_history ORDER BY rowid DESC LIMIT 10
  [%s] OS:%s CloudDocs:%s BirdSchema:%u DBSchema:%u
client_truth
SELECT date,os,br,bird_schema,db_schema FROM boot_history ORDER BY rowid DESC LIMIT 10
backup_detector
SELECT old,new,counter,os,br FROM backup_detector
  [%u|%u|%u] OS:%s CloudDocs:%s DBSchema:%ld
SELECT * FROM server_state
server_state
-----------------------------------------------------
client_state
-----------------------------------------------------
devices:
SELECT key, name FROM devices
    o "%s" (%ld)
users:
SELECT user_key, user_name, user_plist FROM users
    o "%s" %s (%ld)
%u containers matching '%s'
-----------------------------------------------------
-[BRCAccountSession(BRCDatabaseManager) dumpFileCoordinationInfoToFileHandle:error:]
backup
clientState
T@"BRCClientState",R,N
serverState
T@"BRCServerPersistedState",R,N
databaseID
TQ,R,N
clientDB
T@"BRCPQLConnection",R,N
readOnlyDB
serverDB
clientTruthWorkloop
T@"NSObject<OS_dispatch_queue>",R,D,N
serverTruthWorkloop
readOnlyWorkloop
internal-db-%d.%03d
old-db-%d.%03d
DatabaseFromTheFuture
database has a major version from the future: %d (want at most %d)
com.apple.bird.handle-account-changes
com.apple.brc.push
com.apple.Preferences
com.apple.bird.sync
com.apple.bird.configuration-server-update
com.apple.bird.cache-delete.push
com.apple.bird.full-sync
com.apple.bird.power-log-report
com.apple.bird.quota-fetch
-[BRCAccountHandler _moveFromPath:toPath:onCollision:error:]
B16@?0@"NSString"8
(data scope)
CloudDocs
migration
.import-marker
data.scope
clouddocs.scope
account
com.apple.icloud.drive.fpfs.migration
ImportSuccess
migration to fpfs failed
-[BRCAccountHandler startAndLoadAccountSynchronously:]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iCloudDrive_Sim/iCloudDrive-29/core/notifs/BRCAccountHandler.m
session-watchdog
timed out waiting for %u seconds for account session to close!
-[BRCAccountHandler __destroySessionWithIntents:]
%@'%@'
Disabled - iCloud Drive database is from the future
#%lu FAIL %s
#%lu fd = %d
SqliteSQL
Still unable to open account after attempted reset: %@ (underlying: %@, sql: %@)
open result: %@
-[BRCAccountHandler _loadOnDiskAccountSessionWithError:]
share-accept
v24@?0@8@"NSError"16
accept flow
doesNotHaveEnoughDiskSpaceToBeFunctional
TB,N,V_doesNotHaveEnoughDiskSpaceToBeFunctional
acAccountID
T@"NSString",R,N,V_acAccountID
session
T@"BRCAccountSession",R,N,V_session
accountPath
T@"NSString",R,N,V_accountPath
pushQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_pushQueue
loggedOutError
T@"NSError",&,N,V_loggedOutError
v16@?0@"NSObject<OS_xpc_object>"8
fetch-alias/
unreachable: parent isn't a reference %@
unreachable: Can't alloc ranks after fetching alias
v24@?0@"NSDictionary"8@"NSError"16
v24@?0@"BRCItemID"8@"NSError"16
targetItemID
T@"BRCItemGlobalID",R,N,V_targetItemID
FSEventToSyncUp
UserDownload
analytics-reporter
analytics metrics
%@: %@
v16@?0@"NSMutableArray"8
<%@ t:%.2fs%@>
eventName
T@"NSString",R,N,V_eventName
startTime
T@"NSDate",&,N,V_startTime
endTime
T@"NSDate",&,N,V_endTime
isCKMetric
TB,N,V_isCKMetric
associatedCKEventMetricIfAvailable
T@"CKEventMetric",R,N,V_associatedCKEventMetricIfAvailable
isPackage
contentSize
syncUpBatchSize
 i:%@ %ssz:%lld su-batch:%lld
pkg 
fileID
TQ,N,V_fileID
genID
TI,N,V_genID
itemID
T@"BRCItemID",&,N,V_itemID
mtime
TQ,N,V_mtime
TB,N,V_isPackage
TQ,N,V_syncUpBatchSize
TQ,N,V_contentSize
didSucceed
isDownloadingForBackup
isRecursiveDownload
itemCount
totalContentSize
 sz:%lld cnt:%lld %s%s
recursive 
for-backup
T@"NSUUID",&,N,V_operationID
rowIDs
T@"NSMutableSet",&,N,V_rowIDs
TB,N,V_didSucceed
TB,N,V_isDownloadingForBackup
TB,N,V_isRecursiveDownload
TQ,N,V_itemCount
TQ,N,V_totalContentSize
v32@?0@"NSString"8@16^B24
minimumOSName
zoneNeedsPrep
recordId
hasMinimumOSName
T@"NSString",&,N,V_minimumOSName
hasZoneNeedsPrep
T@"NSString",&,N,V_zoneNeedsPrep
hasRecordId
T@"NSString",&,N,V_recordId
sharing.fetch-user-record-id
v24@?0@"CKRecordID"8@"NSError"16
zone-health-check
v24@?0@"CKRecordID"8@"NSString"16
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
fetch-configuration
v24@?0@"<BRXPCAutomaticErrorProxy><BRAccountManagementServiceV1>"8@"NSError"16
 (URL %@)
 (original URL: %@, current URL %@)
-[BRCImportObject initWithURL:existingItem:error:]
-[BRCImportObject initWithURL:logicalName:parentItem:isDataScopeDomain:error:]
#pc#d#b#-#l#s#w
brok
UF_COMPRESSED
com.apple.metadata:_kMDItemUserTags
com.apple.clouddocs.security
isDocument
isBundle
isFault
isFile
isPackageRoot
isUnixDir
isWritable
isExecutable
isHiddenExtension
isHiddenFile
isBusy
isSymLink
isExcluded
hasFinderTags
isFinderAlias
isBRAlias
isUserVisible
TB,R,N,V_isUserVisible
sharingOptions
TQ,R,N,V_sharingOptions
fileType
TI,R,N
TQ,R,N,V_fileID
hardlinkCount
TI,R,N,V_nlink
size
Tq,R,N,V_size
birthTime
Tq,R,N
modificationTime
fsGenerationID
TI,R,N,V_fsGenerationID
generationID
T@"BRCGenerationID",R,N
logicalName
T@"NSString",R,N,V_logicalName
symlinkContent
T@"NSString",R,N,V_symlinkContent
quarantineInfo
T@"NSData",R,N,V_quarantineInfo
xattrs
T@"NSData",R,N,V_xattrs
parentItemGlobalID
T@"BRCItemGlobalID",R,N,V_parentItemGlobalID
fileURL
T@"NSURL",R,N,V_fileURL
itemScope
TC,R,N,V_itemScope
TB,R,N,V_isDocumentsFolder
-[BRCImportObject(BRCPackageAdditions) initWithURL:packageRoot:error:]
dir-fault
dir-share-accept-fault
doc-share-accept-fault
alias
fs-root
symlink
finder-bookmark
live
dead
rejected
needs-upload
needs-sync-up
excluded
migrating
rej-migrating
missing-fid
share-id
web-shared-ro
web-shared-rw
public-share-ro
public-share-rw
private-share-ro
private-share-rw
read-only-record
p:%@ 
n:"%@" 
(o:"%@") 
target:"%@" 
etag:%@ 
bt:%lld 
lu:%lld 
fa:%lld 
m:%s 
hidden-ext 
ea:%@ 
has-finder-tags 
trash-put-back{%@, %@} 
creator:%@ 
ckInfo
parentID
state
type
mode
birthtime
lastusedtime
favoriterank
filename
aliasTarget
finderTags
hiddenExt
xattrSig
putBackPath
putBackParentID
creatorRowID
item %s has invalid state: %d
item %s has invalid type: %d
item %s has invalid mode: 0%0x
item %s has an invalid parent id
T@"BRCItemID",&,N,V_parentID
Tc,N,V_state
Tc,N,V_type
Tc,N,V_mode
T@"NSString",&,N,V_logicalName
Tq,N,V_birthtime
lastUsedTime
Tq,N,V_lastUsedTime
favoriteRank
Tq,N,V_favoriteRank
TB,N,GisHiddenExt,V_hiddenExt
T@"NSData",&,N,V_finderTags
xattrSignature
T@"NSData",&,N,V_xattrSignature
_aliasTargetMangledID
T@"ICDBRMangledID",R,N
T@"BRFieldCKInfo",R,N,V_ckInfo
T@"NSString",R,N,V_aliasTarget
lazyXattr
T@"NSData",&,N,V_lazyXattr
iWorkShareable
trashPutBackPath
T@"NSString",&,N,V_trashPutBackPath
trashPutBackParentID
T@"BRCItemID",&,N,V_trashPutBackParentID
T@"BRCUserRowID",&,N,V_creatorRowID
SELECT name FROM devices WHERE key = %lld
prev-etag:%@ 
mt:%lld 
sz:%@ 
tsz:%@ 
<pkg-pending>
<file-pending>
sig:%@ 
<pending>
tsig:%@ 
losers:{%@} 
ess:%ld 
device:%@ 
last-editor:%@ 
quarantine:%u 
name
thumbnailSize
thumbnail
content
editedKey
deviceKey
deviceName
conflictLoserEtags
_%@_%@.%@
_%@_%@
Tq,N,V_mtime
originalPOSIXName
T@"NSString",&,N,V_originalPOSIXName
Tq,N,V_size
Tq,N,V_thumbnailSize
T@"NSData",&,N,V_quarantineInfo
contentSignature
T@"NSData",&,N,V_contentSignature
thumbnailSignature
T@"NSData",&,N,V_thumbnailSignature
T@"NSSet",&,N,V_conflictLoserEtags
lastEditorDeviceOrUserRowID
T@"NSNumber",&,N,V_lastEditorDeviceOrUserRowID
lastEditorDeviceRowID
T@"NSNumber",&,N
lastEditorDeviceName
T@"NSString",&,N,V_lastEditorDeviceName
lastEditorRowID
T@"BRCUserRowID",&,N
hasThumbnail
editedSinceShared
T@"NSNumber",&,N,V_editedSinceShared
quota-used
rec-child-count
shared-by-me
shared-alias
child-count
qta:%llu 
rcc:%llu 
sbm:%llu 
stm:%llu 
cc:%llu 
quotaUsed
T@"NSNumber",&,N,V_quotaUsed
recursiveChildCount
T@"NSNumber",&,N,V_recursiveChildCount
sharedByMeRecursiveCount
T@"NSNumber",&,N,V_sharedByMeRecursiveCount
sharedAliasRecursiveCount
T@"NSNumber",&,N,V_sharedAliasRecursiveCount
childCount
T@"NSNumber",&,N,V_childCount
brc_signatureIsPackage
brc_signatureIsValid
brc_signatureIsPendingPlaceHolder
brc_hexadecimalString
brc_signature
T@"NSData",R,N
synced-all
share-synced-all
synced-st-all
synced-ct-all
item-id
item-shared
item-owner
st-all
st-ckinfo
st-state
st-alias-state
st-mode
st-birthtime
st-parent-id
st-filename
st-hidden-ext
st-xattr
st-finder-tags
st-trash-put-back
st-last-used-time
st-favorite-rank
st-symlink-target
st-directory-mtime
ct-all
ct-ckinfo
ct-mtime
ct-name
ct-size
ct-sig
ct-xattr
ct-thumb
ct-losers
ct-quarantine
ct-edited
fs-all
fs-process-stamp
fs-localname
fs-stage
lct-all
lct-ul-assets
lct-ul-error
lct-losers
l-all
l-min-os
l-sync-up-state
l-app-library
l-user-visibility
l-item-scope
sc-ckinfo
m-oob-sync
m-forced-conflict
m-cross-zone-moved
m-initial-scan
m-needs-sharing-info
m-reset
path
signature
xattrIndex
Ti,N,V_type
hasPath
T@"NSString",&,N,V_path
hasMtime
hasIsWritable
TB,N,V_isWritable
hasIsExecutable
TB,N,V_isExecutable
hasSymlinkContent
T@"NSString",&,N,V_symlinkContent
hasQuarantineInfo
hasSignature
T@"NSData",&,N,V_signature
hasXattrIndex
Tq,N,V_xattrIndex
DIRECTORY
FILE
SYMLINK
TOMBSTONE
(unknown: %i)
Can't init mutex
Dead lock
Invalid mutex
Can't unlock mutex
com.apple.CloudDocs.Private-SharingV1
unreachable: server zone not found
v24@?0@"CKShare"8@"NSError"16
v32@?0@"NSURL"8@"CKShare"16@"NSError"24
com.apple.FileProvider.ValidationV1
com.apple.icloud.drive.fileprovider
group.com.apple.icloud.drive
fileprovider-mobile-docs
com.apple.icloud.drive.background-cleanup
v12@?0B8
default
data
unreachable: Failed to save to db without an error
iclouddrive
com.apple.iwork.pages
Pages
com.apple.iwork.keynote
Keynote
com.apple.iwork.numbers
Numbers
-[BRFileProviderExtension _prepareAndCheckLoggedInOrError:]
visible
-[BRFileProviderExtension itemForIdentifier:error:]
com.apple.fileprovider.br-undecorated-container
v32@?0@"NSString"8@"NSData"16@"NSError"24
queue
download-content-for-thumb
v32@?0@"ICDBRFileObjectID"8@"CKRecordID"16^B24
v32@?0@"CKRecord"8@"CKRecordID"16@"NSError"24
v32@?0@"CKRecordZoneID"8@"NSMutableDictionary"16^B24
STAGE
v24@?0@"CKRecordID"8d16
unreachable: No file content and no package content on %@
unreachable: No error and per record completion block wasn't called
v32@?0@"NSURL"8@"<NSFileProviderItem>"16@"NSError"24
itemIdentifier
v16@?0@"ICDBRFileObjectID"8
etagToFetch
livecontent-%lld-%@
brpackage
unreachable: Couldn't find just downloaded file
unreachable: No etag found
brpackage-existing-content
brpackage-dlspec
com.apple.DocumentsApp
bundleIdentifier
application-identifier
unreachable: couldn't create app library %@
fetch-app-library
not ready to dump %@: %@
could not dump %@: %@
accountHandler
T@"BRCAccountHandler",R,N,V_accountHandler
isDataScopeDomain
TB,R,N,V_isDataScopeDomain
Don't call %@.
-[BRCMinHeap init]
<BRCMinHeap %p objects:%@ array:[
%p:%@, 
count
TQ,R,N,V_count
account-waiter
unavailable
no account
restricted
available
unhandled account status
v24@?0q8@"NSError"16
account-queue
@"BRCAccountHandler"8@?0
v24@?0@"NSArray"8@"NSError"16
account-
Enterprise
Personal
 (data scope)
v32@?0@"NSString"8@"BRCAccountHandler"16^B24
networkReachabilityDidChangeHandler
T@?,C,N,V_networkReachabilityDidChangeHandler
inactive
active
pending-lost
not-greedy
same-lib-target
fpfs-migration
pending-flush
pending-parent
parent-fetch
pending-scan
pending-download
pending-target
pending-child
pending-czm
pending-losers
pending-favorites
pending-sync-up
pending-quota
toolarge
pending-winner
pending-disk
pending-accept
sync-up-scheduled
ineligible
com.apple.bird.scheduler.
SELECT next_retry_stamp > %llu FROM %@ WHERE %@ AND throttle_state != 0
SELECT 1 FROM %@ WHERE %@ AND throttle_state = 1 AND throttle_state != 0 LIMIT 1
SELECT throttle_state FROM %@ WHERE %@ AND throttle_state != 0
SELECT zone_rowid, throttle_id, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp%@%@ FROM %@ WHERE %@%@ AND throttle_state != 0
%@ attempts:%d
 last:%@
 next:%@
 cleanup:%@
[%ld %@]
SELECT throttle_state, COUNT(*) FROM %@ WHERE %@ AND throttle_state != 0 GROUP BY throttle_state
 %@:%lld
 idle
UPDATE %@ SET   throttle_state = 1, retry_count = %u, last_try_stamp = %llu, next_retry_stamp = %llu, expire_stamp = %llu WHERE %@ AND throttle_state != 0
INSERT INTO %@ (  throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, %@ %@ %@) VALUES (  %u, %u, %lld, %lld, %lld, %@ %@ %@)
UPDATE %@ SET  throttle_state = %d, retry_count = %u, last_try_stamp = %lld, next_retry_stamp = %lld, expire_stamp = %lld%@ %@  WHERE %@
UPDATE %@ SET throttle_state = 1 WHERE throttle_state = %u AND throttle_state != 0 %@%@
AND 
SELECT retry_count, last_try_stamp, next_retry_stamp, expire_stamp, throttle_state FROM %@ WHERE %@
UPDATE %@   SET throttle_state = call_block(%@, next_retry_stamp) WHERE %@ AND throttle_state != 0
DELETE FROM %@ WHERE %@ AND throttle_state != 0 LIMIT %llu
UPDATE %@   SET retry_count = 0, next_retry_stamp = 0 WHERE %@ AND throttle_state != 0
DELETE FROM %@ WHERE throttle_state = 0 AND expire_stamp <= %lld
  SELECT next_retry_stamp, %@     FROM %@    WHERE throttle_state = 1      AND throttle_state != 0          %@%@%@      AND next_retry_stamp >= 0 ORDER BY next_retry_stamp    LIMIT %u
AND (
with active work
SELECT 1 FROM %@ WHERE throttle_state != 0 LIMIT 1
isCancelled
hasWork
TB,N,V_hasWork
hasActiveWork
TB,N,V_hasActiveWork
hasWorkGroup
T@"NSObject<OS_dispatch_group>",&,V_hasWorkGroup
tableName
T@"PQLNameInjection",R,V_tableName
T@"NSString",R,V_name
closed
TB,R,N,V_isCancelled
watchItem
watchChildren
watchDescendants
withInitialGather
withContainers
item
docs
dirs
faults
trash
dirs-only
gatheredChildrenItemGlobalID
T@"BRCItemGlobalID",&,N,V_gatheredChildrenItemGlobalID
com.apple.brc.pipe
<%@ %p
 gathering
 {%@}
 {descendants of 
 {children of 
 {item at 
[fid:%@]
[fid:%@ n:%@]
 (%@)}
 {NSMDQ
 data
 docs
 dirs-only
 dirs
 faults
 trash
 queued:%ld>
v16@?0@"NSArray"8
v20@?0B8@"BRCDataOrDocsScopeGatherer"12
nsmdq
unreachable: Invalid notification pipe setup
oldWatchedAncestorItemGlobalID
T@"BRCItemGlobalID",&,V_oldWatchedAncestorItemGlobalID
watchedAncestorItemGlobalID
T@"BRCItemGlobalID",&,V_watchedAncestorItemGlobalID
watchedAncestorFileObjectID
T@"ICDBRFileObjectID",&,V_watchedAncestorFileObjectID
watchedAncestorFilenameToItem
T@"NSString",&,V_watchedAncestorFilenameToItem
manager
T@"BRCNotificationManager",R,N,V_manager
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
receiverIsNSMDQ
TB,N,V_receiverIsNSMDQ
delegate
T@"<BRCNotificationPipeDelegate>",W,N,V_delegate
-[BRCNotificationPipe(IPCs) boostPriority:]
-[BRCNotificationPipe(IPCs) watchScopes:gatherReply:]
retrieve-thumbnail/
unreachable: Couldn't find %@ and no error
retrieveThumbnailCompletionBlock
T@?,C,N,V_retrieveThumbnailCompletionBlock
WaitingTimeBeforeDisplay
MinimalDisplayTime
folder
alternate
other
cancel
v16@?0Q8
v32@?0@8@16^B24
_IOS
_DEFAULT
keynote
_KEYNOTE
numbers
_NUMBERS
pages
_PAGES
_FOLDER
SHARING_JOIN_HEADER
Localizable
SHARING_JOIN_HEADER_DEFAULT_APP
SHARING_JOIN_HEADER_NO_DOCUMENT_NAME
SHARING_JOIN_MESSAGE_PRIVATE
SHARING_JOIN_MESSAGE_PUBLIC
SHARING_JOIN_ALT_BUTTON
SHARING_JOIN_DEFAULT_BUTTON
v32@?0@"NSPersonNameComponents"8@"NSString"16@"NSError"24
SHARING_ICLOUD_SETUP_HEADER_IOS
SHARING_ICLOUD_SETUP_MESSAGE_IOS
SHARING_ICLOUD_SETUP_ALT_BUTTON_IOS
PREVIEW_BUTTON
SHARING_ICLOUD_SETUP_DEFAULT_BUTTON_IOS
SHARING_ICLOUD_DRIVE_SETUP_HEADER_IOS
SHARING_ICLOUD_DRIVE_SETUP_MESSAGE_IOS
SHARING_ICLOUD_DRIVE_SETUP_ALT_BUTTON_IOS
SHARING_ICLOUD_DRIVE_SETUP_DEFAULT_BUTTON_IOS
shareMetadata
SHARING_APP_NOT_INSTALLED_HEADER_IOS
SHARING_APP_NOT_INSTALLED_MESSAGE_IOS
SHARING_APP_NOT_INSTALLED_ALT_BUTTON_IOS
SHARING_APP_NOT_INSTALLED_DEFAULT_BUTTON_IOS
SHARING_PROFILE_DISABLED_HEADER_IOS
SHARING_PROFILE_DISABLED_MESSAGE_IOS
SHARING_PROFILE_DISABLED_DEFAULT_BUTTON_IOS
SHARING_GENERIC_ERROR_HEADER
SHARING_GENERIC_ERROR_MESSAGE
SHARING_GENERIC_ERROR_DEFAULT_BUTTON
SHARING_DEVICE_OFFLINE_ERROR_HEADER
SHARING_DEVICE_OFFLINE_ERROR_MESSAGE
SHARING_DEVICE_OFFLINE_ERROR_DEFAULT_BUTTON
SHARING_ICLOUD_NOT_REACHABLE_HEADER
SHARING_ICLOUD_NOT_REACHABLE_MESSAGE
SHARING_ICLOUD_NOT_REACHABLE_DEFAULT_BUTTON
SHARING_NO_LONGER_SHARED_HEADER
SHARING_NO_LONGER_SHARED_MESSAGE
SHARING_NO_LONGER_SHARED_BUTTON
SHARING_PARTICIPANT_LIMIT_REACHED_HEADER
SHARING_PARTICIPANT_LIMIT_REACHED_MESSAGE
SHARING_PARTICIPANT_LIMIT_REACHED_ALT_BUTTON
SHARING_FALLBACK_SUCCESS_HEADER
SHARING_FALLBACK_SUCCESS_DEFAULT_BUTTON
rejection
creation
update
Apply Changes
client_unapplied_table
SELECT throttle_state, COUNT(*) FROM client_unapplied_table WHERE %@ AND throttle_id > 0   AND throttle_id IN (SELECT item_rank FROM server_items)   AND throttle_state != 0 GROUP BY throttle_state
SELECT COUNT(*) FROM client_unapplied_table WHERE %@ AND throttle_id > 0   AND throttle_id NOT IN (SELECT item_rank FROM server_items)
 expired:%@
UPDATE client_unapplied_table   SET throttle_state = call_block(%@, next_retry_stamp, apply_kind), apply_kind = %u WHERE %@
apply_kind, app_library_rowid
%u, %@
apply_kind = %u, app_library_rowid = %@
UPDATE client_unapplied_table    SET throttle_state = 1  WHERE zone_rowid = %@     AND throttle_state IN (21, 16)    AND throttle_state != 0    AND throttle_id IN (SELECT item_rank FROM server_items                        WHERE zone_rowid = %@ AND item_parent_id = %@)
WITH RECURSIVE  reschedulable_items (item_rank, item_id) AS (    SELECT si.item_rank, si.item_id      FROM server_items AS si     WHERE si.zone_rowid = %@       AND si.item_state = 1       AND si.item_type IN (0, 9, 10)       AND NOT EXISTS (        SELECT 1 FROM client_items         WHERE item_parent_zone_rowid = %@ AND item_parent_id = si.item_id           AND item_state = 0         LIMIT 1)    UNION ALL    SELECT -ci.rowid, ci.item_id      FROM client_items as ci     WHERE ci.zone_rowid = %@       AND ci.item_localsyncupstate = 1       AND ci.item_type IN (0, 9, 10)       AND NOT EXISTS(        SELECT 1 FROM client_items         WHERE item_parent_zone_rowid = %@ AND item_parent_id = ci.item_id           AND item_state = 0         LIMIT 1)  ) UPDATE client_unapplied_table    SET throttle_state = 1  WHERE zone_rowid = %@     AND throttle_state = 25    AND throttle_state != 0    AND throttle_id IN (SELECT item_rank FROM reschedulable_items WHERE item_id = %@)
UPDATE client_unapplied_table    SET throttle_state = 1  WHERE zone_rowid = %@     AND throttle_state = 27    AND throttle_state != 0    AND throttle_id IN (SELECT item_rank FROM server_items                        WHERE zone_rowid = %@ AND item_parent_id = %@)
UPDATE client_unapplied_table SET throttle_state = 1 WHERE throttle_state = %u AND zone_rowid = %@ AND throttle_id = %llu AND throttle_state != 0
UPDATE client_unapplied_table SET throttle_state = 1 WHERE throttle_state = 17 AND throttle_state != 0
SELECT rowid FROM client_items as ci WHERE ci.item_type = 9 AND (SELECT 1 FROM server_items AS si WHERE si.item_id = ci.item_id AND si.zone_rowid = ci.zone_rowid AND +si.item_type = 0 LIMIT 1)
UPDATE client_items SET item_type = 0 WHERE rowid = %@
UPDATE item_recursive_properties SET item_type = 0, dir_faults_count = dir_faults_count - 1 WHERE item_rowid = %@
B16@?0@"BRCPrivateClientZone"8
UPDATE client_items SET item_type = 0 WHERE item_id = %@ AND zone_rowid = %@ AND item_type = 9 AND (SELECT 1 FROM server_items AS si               WHERE client_items.item_id = si.item_id                AND client_items.zone_rowid = si.zone_rowid                AND si.item_type = 0 LIMIT 1)
UPDATE item_recursive_properties SET item_type = 0, dir_faults_count = dir_faults_count - 1 WHERE item_id = %@ AND zone_rowid = %@
UPDATE client_unapplied_table SET throttle_state = 1 WHERE throttle_state = 17 AND throttle_state != 0 AND throttle_id IN (SELECT item_rank FROM server_items WHERE item_parent_id = %@ AND zone_rowid = %@)
WITH RECURSIVE item_children_with_faults (item_id, zone_rowid, item_type) AS (     SELECT item_id, zone_rowid, item_type FROM item_recursive_properties      WHERE zone_rowid = %@ AND item_parent_id = %@ AND item_type IN (0, 9, 10) AND dir_faults_count > 0  UNION ALL     SELECT ip.item_id, ip.zone_rowid, ip.item_type FROM item_recursive_properties AS ip INNER JOIN item_children_with_faults AS p WHERE ip.item_parent_id = p.item_id AND ip.zone_rowid = p.zone_rowid AND ip.item_type IN (0, 9, 10) AND ip.dir_faults_count > 0 AND NOT item_id_is_documents(ip.item_id)) SELECT item_id, zone_rowid FROM item_children_with_faults AS ic WHERE ic.item_type = 9 LIMIT %lld
INSERT OR REPLACE INTO client_unapplied_table(zone_rowid, throttle_id, throttle_state, apply_kind, app_library_rowid) SELECT %@, -rowid, 1, %u, app_library_rowid FROM client_items WHERE zone_rowid = %@ AND item_localsyncupstate = 1
INSERT OR REPLACE INTO client_unapplied_table(zone_rowid, throttle_id, throttle_state, apply_kind, app_library_rowid) SELECT %@, item_rank, 1, %u, %@ FROM server_items WHERE zone_rowid = %@
throttle_id, zone_rowid, apply_kind
v20@?0@"PQLResultSet"8i16
SELECT 1 FROM client_unapplied_table WHERE app_library_rowid = %@ AND throttle_state = 1 AND apply_kind = %d AND retry_count < %lld AND throttle_state != 0 LIMIT 1
SELECT 1 FROM client_unapplied_table WHERE app_library_rowid = %@ AND throttle_state = 1 AND throttle_state != 0 AND apply_kind = %d LIMIT 1
apply is failing
sync is blocked for app library: %@
DELETE FROM client_unapplied_table WHERE throttle_id > 0   AND throttle_id NOT IN (SELECT item_rank FROM server_items)
<rdar://problem/23822933>
INSERT OR IGNORE INTO client_unapplied_table (zone_rowid, throttle_id, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, apply_kind, app_library_rowid) SELECT %@, item_rank, 1, 0, 0, 0, 0, %u, %@  FROM server_items WHERE zone_rowid = %@ AND item_rank >= %lld AND item_rank < %lld
predicate
T@"NSPredicate",&,N,V_predicate
approximateAvailableQuota
-[BRCAppLibrary init]
metadataChangetag
metadataNeedsSyncUp
rootQuota
public
private
foreground
background
%@[%@] %@ {s:%@}
 queries:
 metadata:%s etag:%@ %@
 bundles:{%@}
 barriers:%ld
<%@>
item_type != 3
item_scope = 2 AND %@
item_scope = 1 AND %@
(%@) OR (%@)
(   item_scope = 2 OR item_scope = 1) AND item_type = 3
item_scope = 3
AND item_type IN (1, 8, 5, 6)
AND item_type IN (0, 9, 10)
%@%%
%% %@%%
AND (item_filename LIKE %@ ESCAPE '\' OR item_filename LIKE %@ ESCAPE '\')
AND ((%@) OR (%@))
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_scope, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_local_change_count, version_old_version_identifier, item_live_conflict_loser_etags, item_file_id, item_generation    FROM client_items   WHERE item_notifs_rank >= %lld     AND item_notifs_rank < %lld     AND +app_library_rowid = %@     %@      %@      %@ ORDER BY item_notifs_rank   LIMIT %llu
AND item_state = 0
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_scope, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_local_change_count, version_old_version_identifier, item_live_conflict_loser_etags, item_file_id, item_generation    FROM client_items   WHERE item_parent_id = %@      AND item_notifs_rank >= %lld      AND item_notifs_rank < %lld     %@      AND item_parent_zone_rowid = %@ ORDER BY item_notifs_rank   LIMIT %lld
item_state = 0
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_scope, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_local_change_count, version_old_version_identifier, item_live_conflict_loser_etags, item_file_id, item_generation    FROM client_items   WHERE item_parent_id = %@      AND item_state = 0     AND item_parent_zone_rowid = %@      AND rowid >= %lld ORDER BY rowid ASC   LIMIT %lld
SELECT rowid FROM client_items WHERE item_id = %@ AND zone_rowid = %@
SELECT auto_client_item_count > 0 FROM app_libraries  WHERE rowid = %@
SELECT 1 FROM client_items  WHERE item_type NOT IN (0, 9, 10)    AND item_state = 0    AND app_library_rowid = %@ LIMIT 1
SELECT auto_document_with_local_changes_count > 0 FROM app_libraries WHERE rowid = %@
SELECT auto_aggregate_size FROM app_libraries WHERE rowid = %@
SELECT auto_document_count FROM app_libraries WHERE rowid = %@
now evicting uploaded items
no longer evicting uploaded items
evicting uploaded items
not evicting uploaded items
SELECT DISTINCT zone_rowid FROM client_items WHERE app_library_rowid = %@   AND item_state = 0   AND item_creator_id != 0
SELECT 1 FROM client_items WHERE app_library_rowid = %@ AND zone_rowid = %@ LIMIT 1
-[BRCAppLibrary createDocumentsFolder]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iCloudDrive_Sim/iCloudDrive-29/core/items/BRCAppLibrary.m
importObject.isUnixDir
identifier
defaultClientZone
T@"BRCPrivateClientZone",W,N,V_defaultClientZone
T@"<BRCAppLibraryDelegate>",&,N,V_delegate
T@"BRCAccountSession",&,N,V_session
tracker
T@"brc_task_tracker",R,N,V_tracker
logName
appLibraryID
T@"NSString",R,N,V_appLibraryID
mangledID
T@"ICDBRMangledID",R,N,V_mangledID
pathRelativeToRoot
rootFileObjectID
T@"ICDBRFileObjectID",R,N
documentsFileObjectID
dbRowID
T@"BRCALRowID",&,N,V_dbRowID
zoneRowID
T@"BRCZoneRowID",&,N,V_zoneRowID
documentsRowID
isCloudDocsAppLibrary
T@"BRCPQLConnection",R,N,V_db
needsSave
TB,N,V_needsSave
syncContextIfExists
T@"BRCSyncContext",R,N
plist
T@"NSMutableDictionary",R,N
TI,R,N,V_state
isForeground
shouldEvictUploadedItems
hasActiveQueries
hasActiveRecursiveQueries
containerMetadata
T@"ICDBRContainer",R,N,V_containerMetadata
containerMetadataEtag
T@"NSString",&,N,V_containerMetadataEtag
containerMetadataNeedsSyncUp
TB,N,V_containerMetadataNeedsSyncUp
rootQuotaUsage
T@"NSNumber",&,N,V_rootQuotaUsage
resetting
no-documents
no-data
root-created
root-moved-to-clouddocs
needs-cross-move-fixup
evict-uploaded-items
l-docs
l-root
ch-root
l-trash
retryCount
TI,R,N,V_retryCount
latestRetry
Tq,R,N,V_latestRetry
throttleHash
Tq,R,N,V_throttleHash
T@"NSString",R,N,V_name
nsecsBeforeForgettingCounter
Tq,R,N,V_nsecsBeforeForgettingCounter
q24@?0@"BRCRetryCounter"8@"BRCRetryCounter"16
NULL
initialSyncAnchor
v40@?0@"NSArray"8@"NSArray"16@"NSData"24@"NSError"32
fetch-parent/
%K == %@ AND %K == %@
recordIds
getShareRecords
FetchAncestors
unreachable: Couldn't allocate ranks when fetching parent chain
parentIDToList
T@"BRCItemID",R,N
%lld-%s-%@
throttle_id = %lld AND download_etag = %@ AND download_kind = %u
throttle_id, download_etag, download_kind
%lld, %@, %u
itemDBRowID
TQ,R,N,V_itemDBRowID
T@"NSString",R,N,V_etag
kind
Ti,R,N,V_kind
  SELECT throttle_id, next_retry_stamp, app_library_rowid,           download_etag, transfer_stage, unit_count_completed,           transfer_size, download_priority      FROM client_downloads    WHERE throttle_state = 1    AND throttle_state != 0      AND transfer_queue = %@      AND transfer_operation IS NULL      AND download_kind = %d ORDER BY download_priority DESC, download_request_stamp DESC
UPDATE client_downloads    SET transfer_queue = '_retry'  WHERE throttle_id = %lld AND download_kind = %u AND download_etag = %@
Downloader
client_downloads
downloader
com.apple.bird.downloader
com.apple.bird.download-tracker
UPDATE client_downloads SET  transfer_stage = %@, transfer_operation = %@ WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@
ORDER BY download_kind, download_etag
download_kind, download_etag, transfer_operation, transfer_queue, download_error, app_library_rowid
%s:%@
_retry
 pending-retry
 download:done/cancelled
 downloading:%.1f%%
 op:%@
v32@?0@"NSMutableString"8@"PQLResultSet"16i24i28
app_library_rowid, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, download_kind, download_etag, download_priority, download_request_stamp, download_error, zone_rowid
%@, %@, %lld, %@, %@, %@, %u, %@, %ld, %lld, %@, %@
app_library_rowid = %@, transfer_queue = %@, download_priority = %ld, download_request_stamp = %lld , zone_rowid = %@
SELECT transfer_size FROM client_downloads WHERE throttle_id = %lld AND download_kind = %u AND download_etag = %@
SELECT app_library_rowid FROM client_downloads WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@   AND transfer_operation = %@
done
UPDATE client_downloads SET  transfer_operation = call_block(%@, next_retry_stamp), download_error = %@, unit_count_completed = %lld WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@
UPDATE client_downloads SET  throttle_state = %d, transfer_record = NULL, transfer_stage = call_block(%@, transfer_stage), transfer_operation = NULL, download_error = %@ WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@
UPDATE client_downloads SET  throttle_state = %d, transfer_queue = %@, transfer_record = %@, transfer_stage = %@, transfer_operation = NULL, download_error = NULL WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@
_done
UPDATE client_downloads SET throttle_state = 1 WHERE throttle_state = 42  AND throttle_state != 0  AND throttle_id = %lld
UPDATE client_downloads SET throttle_state = 1 WHERE throttle_state = 43  AND throttle_state != 0   AND call_block(%@, transfer_size, app_library_rowid, zone_rowid)
UPDATE client_downloads SET throttle_state = 1 WHERE throttle_state = 40   AND throttle_state != 0   AND zone_rowid = %@
SELECT distinct app_library_rowid FROM client_downloads WHERE throttle_state = 1   AND throttle_state != 0   AND zone_rowid = %@
UPDATE client_downloads SET  throttle_state = %d, transfer_queue = %@, transfer_record = NULL, transfer_stage = NULL, transfer_operation = NULL, unit_count_completed = 0 WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@
SELECT throttle_id, download_kind, download_etag, transfer_operation, transfer_stage, app_library_rowid, zone_rowid, throttle_state, transfer_size FROM client_downloads WHERE throttle_id = %lld AND download_kind = %u AND download_etag = %@   AND throttle_state != 0
SELECT throttle_id, download_kind, download_etag, transfer_operation, transfer_stage, app_library_rowid, zone_rowid, throttle_state, transfer_size FROM client_downloads WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@   AND throttle_state != 0
SELECT throttle_id, download_kind, download_etag, transfer_operation, transfer_stage, app_library_rowid, zone_rowid, throttle_state, transfer_size FROM client_downloads WHERE throttle_id = %lld AND download_kind = %u   AND throttle_state != 0
SELECT throttle_id, download_kind, download_etag, transfer_operation, transfer_stage, app_library_rowid, zone_rowid, throttle_state, transfer_size FROM client_downloads WHERE throttle_id = %lld AND throttle_state != 0
SELECT throttle_id, download_kind, download_etag, transfer_operation, transfer_stage, app_library_rowid, zone_rowid, throttle_state, transfer_size FROM client_downloads WHERE %@ AND throttle_state != 0
UPDATE client_downloads SET download_etag = %@ WHERE throttle_id = %lld AND download_etag = %@ AND download_kind = %d
SELECT SUM(transfer_size) FROM client_downloads WHERE throttle_state = 1  AND throttle_state != 0
SELECT transfer_size, transfer_operation IS NOT NULL, download_error FROM client_downloads WHERE throttle_id = %llu AND download_kind = %u AND throttle_state != 0
SELECT transfer_operation IS NOT NULL FROM client_downloads WHERE throttle_id = %llu AND download_kind = %u AND throttle_state != 0
SELECT transfer_size FROM client_downloads WHERE throttle_id = %llu AND download_kind = %u AND throttle_state != 0
SELECT 1 FROM client_downloads WHERE throttle_id = %llu AND download_kind != %u AND transfer_queue = %@ LIMIT 1
SELECT version_ckinfo FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT 1 FROM client_downloads  WHERE throttle_id = %lld AND download_kind = %d  LIMIT 1
SELECT transfer_queue, download_etag, throttle_state   FROM client_downloads  WHERE throttle_id = %lld AND download_kind = %d
UPDATE client_downloads SET transfer_operation = NULL WHERE (transfer_operation >= '')
B16@?0@"BRCSharedClientZone"8
transfer_queue = '_retry' AND transfer_operation IS NULL
rowid, throttle_id, app_library_rowid, zone_rowid
DELETE FROM client_downloads WHERE rowid = %@
UPDATE client_downloads SET transfer_queue = %@ WHERE rowid = %@
Not enough available disk space(have %@ need %@)
UPDATE client_downloads SET throttle_state = 43, download_error = %@ WHERE throttle_state != 0  AND %@
content-%lld-%@
v24@?0@"BRCDownloadContent"8@"NSError"16
UPDATE client_downloads    SET throttle_state = %u  WHERE throttle_id = %lld AND download_kind = %u AND download_etag = %@
loser-%lld-%@
v24@?0@"BRCDownloadVersion"8@"NSError"16
  SELECT throttle_id, next_retry_stamp, download_kind, download_etag     FROM client_downloads    WHERE throttle_state = 1      AND throttle_state != 0      AND transfer_queue = %@      AND transfer_operation IS NULL      AND download_priority >= %ld ORDER BY download_priority DESC, download_request_stamp DESC,   download_kind ASC
UPDATE client_downloads    SET transfer_queue = '_retry'  WHERE throttle_id = %ld AND download_kind = %u AND download_etag = %@
SELECT version_ckinfo FROM client_items WHERE rowid = %ld
SELECT MIN(next_retry_stamp) FROM client_downloads   WHERE throttle_state = 1     AND throttle_state != 0     AND transfer_queue = %@      AND transfer_operation IS NULL 
downloadsDeadlineScheduler
T@"BRCDeadlineScheduler",R,N,V_downloadsDeadlineScheduler
version
(%s)
never
%@ ago
%llu.%llu%@
-%lld %@
%lld %@
bytes
thousand
-%.1f %@
%.1f %@
million
-%.2f %@
%.2f %@
billion
billions
 (%lld)
    
T@"PQLConnection",R,N,V_db
T^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq},R,N,V_fp
indentationBaseString
T@"NSString",&,N,V_indentationBaseString
liveDaemon
TB,N,V_liveDaemon
onlyActiveStuff
TB,N,V_onlyActiveStuff
dumpTrackedPendingDownloads
TB,N,V_dumpTrackedPendingDownloads
taskTracker
T@"brc_task_tracker",&,N,V_taskTracker
<unknown>
0x%llx
UPDATE client_items SET item_type = 1 WHERE item_id = %@ AND zone_rowid = %@ AND item_type = 8
UPDATE client_items SET item_type = 9 WHERE item_id = %@ AND zone_rowid = %@ AND item_type = 10
%@~%d
UPDATE client_items SET item_localsyncupstate = call_block(%p, item_localsyncupstate, rowid), item_local_diffs = item_local_diffs | %llu, item_stat_ckinfo = NULL, version_ckinfo = NULL WHERE zone_rowid = %@
DELETE FROM client_items WHERE zone_rowid = %@ LIMIT %llu
<rdar://problem//26848061>
UPDATE client_items SET item_parent_id = %@ WHERE item_parent_zone_rowid != zone_rowid AND item_parent_zone_rowid = %@ LIMIT %llu
reset %s
still-wants-data-unlinked
SELECT app_library_rowid FROM client_items WHERE zone_rowid = %@ GROUP BY app_library_rowid
com.apple.decmpfs
 lost-stamp:%@ ago
 s_ino:%@
 s_gen:%u
 bln:"%@"
 lch:%llx
 over:%@
unreachable: nobody should import an item from a fault
-[BRCLocalStatInfo initWithImportObject:error:]
unreachable: nobody should import an item from a BR Alias
unreachable: Unexpected import object %@
stagedFileID
stagedGenerationID
schedStamp
bouncedName
localChangeCount
oldVersionIdentifier
processingStamp
T@"NSNumber",&,N,V_processingStamp
T@"NSNumber",R,N,V_stagedFileID
TI,R,N,V_stagedGenerationID
logicalNameWithoutLocalBounce
rawBouncedLogicalName
T@"NSString",R,N,V_bouncedLogicalName
versionSignature
T@"BRFieldStructureSignature",R,N
TQ,R,N,V_localChangeCount
T@"NSString",R,N,V_oldVersionIdentifier
SELECT 1 FROM server_items WHERE item_id = %@ AND zone_rowid = %@ LIMIT 1
SELECT 1 FROM server_items WHERE item_id = %@ AND item_state = 0 AND zone_rowid = %@ LIMIT 1
SELECT item_id FROM server_items WHERE item_id != %@ AND item_parent_id = %@ AND item_filename = %@ AND +zone_rowid = %@
SELECT name FROM os_names WHERE rowid = %@
INSERT OR IGNORE INTO os_names (name) VALUES (%@)
SELECT rowid FROM os_names WHERE name = %@
r:%lld 
fpid:%@ 
i:%@ 
i:%@:%@ 
al:%@ 
o:%@ 
ld{%@} 
up:%@
 %@:%@
needs-os-upgrade
 uv:%d
 mt:%lld
 pzone:%@
 ppm:%@
 not:%lld
 st{%@
 sharing-options:{%@}
 sc:%@
unknown
<%@:%p {ID : %@; name : %@}>
"%@" id:%@
SELECT item_user_visible, item_scope, item_filename FROM client_items WHERE item_id = %@ AND zone_rowid = %@
UNKNOWN
rowid
side-car-ckinfo
syncUpState
owner
minimumSupportedOS
localDiffs
notifsRank
scope
DELETE FROM client_items WHERE rowid = %lld
 WITH RECURSIVE item_parents (item_id, zone_rowid, rowid) AS (     SELECT item_parent_id, item_parent_zone_rowid, rowid FROM client_items      WHERE item_id = %@ AND zone_rowid = %@  UNION ALL     SELECT li.item_parent_id, li.item_parent_zone_rowid, li.rowid FROM client_items AS li  INNER JOIN item_parents AS p USING (item_id, zone_rowid)      LIMIT %u ) SELECT rowid, item_id, zone_rowid FROM item_parents
 WITH RECURSIVE item_parents (item_id, zone_rowid, item_filename) AS (     SELECT item_parent_id, item_parent_zone_rowid, item_filename FROM client_items      WHERE item_id = %@ AND zone_rowid = %@  UNION ALL     SELECT li.item_parent_id, li.item_parent_zone_rowid, li.item_filename FROM client_items AS li  INNER JOIN item_parents AS p USING (item_id, zone_rowid)      LIMIT %u ) SELECT item_filename FROM item_parents
B24@?0@"BRCItemGlobalID"8@"ICDBRFileObjectID"16
NEEDS_OS_UPGRADE_ERROR
NEEDS_OS_UPGRADE_ERROR_NO_OS_NAME_IOS
Deleted from DB
Inserted into DB
Ignored
Saved into DB
-[BRCLocalItem startDownloadInTask:options:error:]
extension
isDead
isLive
isDirectory
isDirectoryFault
isFSRoot
isZoneRoot
isFinderBookmark
T@"BRCStatInfo",R,N
ownerKey
T@"BRCUserRowID",R,N
T@"BRCAccountSession",R,N
serverZone
T@"BRCServerZone",R,N
clientZone
T@"BRCClientZone",R,N
TQ,N
T@"BRCAppLibrary",&,N,V_appLibrary
asDirectory
T@"BRCDirectoryItem",R,N
asDocument
T@"BRCDocumentItem",R,N
asFSRoot
T@"BRCDirectoryItem<BRCFSRooted>",R,N
asSymlink
T@"BRCSymlinkItem",R,N
asFinderBookmark
T@"BRCFinderBookmarkItem",R,N
asShareAcceptationFault
T@"BRCLocalItem<BRCShareAcceptationFault>",R,N
isShareableItem
asShareableItem
T@"BRCLocalItem<BRCTopLevelShareable>",R,N
asSharedToMeTopLevelItem
T@"BRCLocalItem<BRCSharedToMeTopLevel>",R,N
isShareAcceptationFault
isSharedToMe
isSharedToMeTopLevelItem
isSharedToMeChildItem
digestDescription
T@"BRCItemID",R,N,V_itemID
orig
T@"BRCLocalItem",R,N,V_orig
TQ,R,N,V_dbRowID
fileObjectID
parentFileObjectID
needsInsert
isStagedForMaterialization
isFromInitialScan
isInDocumentOrTrashScope
extendedAttributes
T@"NSDictionary",R,N
fileProviderManager
T@"NSFileProviderManager",R,N
parentClientZone
isKnownByServer
isKnownByServerOrInFlight
isDeadOrMissingInServerTruth
isReadAndUploaded
isIdleOrRejected
isMigratingToFPFS
isRejected
needsUpload
needsSyncUp
isOwnedByMe
isSharedByMe
hasShareIDAndIsOwnedByMe
serverPathMatchItemID
T@"BRCLocalStatInfo",R,N,V_st
TI,R,N,V_syncUpState
uploadStatus
TS,R,N
TQ,R,N,V_localDiffs
TQ,R,N,V_notifsRank
logicalNameNeedsRename
needsOSUpgradeToSyncUp
syncUpError
T@"NSError",R,N
fromReadOnlyDB
T@"NSString",R,N,V_path
T@"BRCUserRowID",R,N,V_ownerKey
T@"BRCServerZone",R,N,V_serverZone
T@"BRCClientZone",R,N,V_clientZone
TQ,N,V_sharingOptions
content-for-thumb
flat
com.apple.fpfs.fileid
-[BRFieldXattrBlob(BRCStageAdditions) applyToFileDescriptor:error:]
, ...
%s%@...
%s%@
brc_pack_xattrs
syncUpBudget
com.apple.brc.sync
q16@?0q8
metadata-sync
shared-db-sync
zone-health-sync
migrate-pcs-sync
side-car-sync
push
periodicSyncDate
DELETE FROM side_car_lookahead
online
healthy
offline
SELECT COUNT(*) from server_items
SELECT COUNT(*) from client_items
 available
%@ (%@)
system
+ network: %@
+ disk:    %@
+ power:   %@
+ optimize storage: %s
enabled
disabled
scheduler
+ items:                 client:%@, server: %@
                         warning: %@
output may be truncated
+ global sync up budget: %@
+ periodic sync:         %@
+ available quota:       %@%@
 [pending-quota]
+ container-metadata:    %@ %@
+ sharedb:               %@ %@
+ zone-health:           %@ %@
+ side-car:              %@ %@
+ pcs-migration:         %@
complete
unfinished
+ account: %@
not ready
com.apple.icloud-container.
%@%@
zoid
com.apple.bird.push-persistence
initialSyncDownGroup
T@"NSObject<OS_dispatch_group>",R,N,V_initialSyncDownGroup
syncGroup
T@"NSObject<OS_dispatch_group>",R,N,V_syncGroup
T@"BRCSyncBudgetThrottle",R,N,V_syncUpBudget
syncScheduler
T@"BRCDeadlineScheduler",R,N,V_syncScheduler
customPushTopics
T@"NSArray",R,N,V_customPushTopics
zoneHealthSyncPersistedState
T@"BRCZoneHealthSyncPersistedState",R,N,V_zoneHealthPersistedState
sideCarSyncPersistedState
T@"BRCSideCarSyncPersistedState",R,N,V_sideCarSyncPersistedState
shared
mobile
B24@?0@"NSURL"8@"NSError"16
v56@?0@"NSURL"8@"NSString"16@"NSString"24@"NSNumber"32@"NSNumber"40I48B52
Library/Application Support/CloudDocs
backup_manifest.db
Library/Mobile Documents/
userURL
T@"NSURL",&,N,V_userURL
outputUserURL
T@"NSURL",&,N,V_outputUserURL
destinationDirectory
T@"NSURL",&,N,V_destinationDirectory
T@"NSURL",R,N
sharing/iWork-publishing-fetch
unreachable: No error and invalid number of records %lu
recordID
T@"CKRecordID",&,N,V_recordID
 ul-error:%@
 uploaded-assets
uploadedAssets
T@"CKRecord",&,N,V_uploadedAssets
uploadError
T@"NSError",&,N,V_uploadError
T@"BRFieldContentSignature",R,N
T@"NSString",&,N,V_oldVersionIdentifier
 f:%@
 g:%@
 ct{%@}
 live-losers:{%@}
 resolved-losers:{%@}
currentVersion
liveConflictLoserEtags
resolvedConflictLoserEtags
item %s is a live document without a version
DELETE FROM client_pkg_upload_items WHERE item_rowid = %llu
-[BRCDocumentItem _updatePackageItemsIfNecessaryWithImportObject:error:]
SELECT transfer_size FROM client_downloads WHERE throttle_id = %llu AND download_kind = %d AND throttle_state != 0
INSERT OR IGNORE INTO item_recursive_properties  ( item_rowid, item_parent_id, item_id, zone_rowid, item_type, item_parent_zone_rowid ) VALUES  (%lld, %@, %@, %@, %d, %@ )
UPDATE item_recursive_properties SET  uploaded_size = %lld, needs_upload_size = %lld, uploaded_count = %lld, needs_upload_count = %lld, downloaded_size = %lld, needs_download_size = %lld, downloaded_count = %lld, needs_download_count = %lld, dl_unstaged_count = %lld, needs_dl_unstage_count = %lld, synced_up_count = %lld, needs_sync_up_count = %lld, over_quota_count = %lld, shared_by_me_count = %lld, shared_to_me_count = %lld WHERE item_rowid = %lld 
INSERT INTO client_items ( rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_scope, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_local_change_count, version_old_version_identifier, item_live_conflict_loser_etags, item_file_id, item_generation) VALUES ( %lld, %@, %@, %@, %ld, %@, %@, %d, %lld, %lld, %@, %@, %d, %d, %@, %d, %d, %d, %lld, %lld, %lld, %@, %@, %d, %@, %@, %@, %@, %@, %@, %@, %@, %u, %@, %llu, %@, %@, %@, %lld, %lld, %lld, %@, %@, %@, %@, %@, %@, %@, %@, %@, %llu, %@, %@, %@, %@)
UPDATE client_items SET item_processing_stamp = %@ WHERE rowid = %llu
UPDATE client_items SET  item_id = %@, item_creator_id = %@, item_sharing_options = %ld, item_side_car_ckinfo = %@, item_parent_zone_rowid = %@, item_localsyncupstate = %d, item_local_diffs = %llu, item_notifs_rank = %lld, app_library_rowid = %@, item_min_supported_os_rowid = %@, item_scope = %d, item_user_visible = %d, item_stat_ckinfo = %@, item_state = %d, item_type = %d, item_mode = %d, item_birthtime = %lld, item_lastusedtime = %lld, item_favoriterank = %lld, item_parent_id = %@, item_filename = %@, item_hidden_ext = %d, item_finder_tags = %@, item_xattr_signature = %@, item_trash_put_back_path = %@, item_trash_put_back_parent_id = %@, item_alias_target = %@, item_creator = %@, item_processing_stamp = %@, item_staged_file_id = %@, item_staged_generation = %u, item_bouncedname = %@, item_local_change_count = %llu, item_old_version_identifier = %@, version_name = %@, version_ckinfo = %@, version_mtime = %lld, version_size = %lld, version_thumb_size = %lld, version_thumb_signature = %@, version_content_signature = %@, version_xattr_signature = %@, version_edited_since_shared = %@, version_device = %@, version_conflict_loser_etags = %@, version_quarantine_info = %@, version_uploaded_assets = %@, version_upload_error = %@, version_local_change_count = %llu, version_old_version_identifier = %@, item_live_conflict_loser_etags = %@, item_file_id = %@, item_generation = %@  WHERE rowid = %llu
unsaltedBookmarkData
T@"BRCDirectoryItem",R,D,N
isEvictable
isAutomaticallyEvictable
iCloudDriveIsResponsibleForAutoEviction
isVisibleIniCloudDrive
shouldBeGreedy
shouldHaveThumbnail
shouldTransferThumbnail
hasFileIDForUpload
fileIDForUpload
T@"NSNumber",R,N,V_fileIDForUpload
generationIDForUpload
T@"BRCGenerationID",R,N,V_generationIDForUpload
T@"BRCLocalVersion",R,N,V_currentVersion
T@"NSSet",&,N,V_liveConflictLoserEtags
T@"NSSet",R,N,V_resolvedConflictLoserEtags
conflictLoserState
T@"NSString",R,D,N
sync-down/container-metadata
infoPlist
shouldFetchAnotherBatch
TB,R,N,V_shouldFetchAnotherBatch
<upload[%lld] %@>
T@"CKRecordID",R,N
secondaryRecordID
stageID
transferID
progress
T@"BRCProgress",R,N
progressPublished
doneSize
record
T@"CKRecord",&,N
secondaryRecord
throttleID
Tq,R,N,V_throttleID
T@"NSString",R,N,V_stageID
TQ,R,N,V_totalSize
T@"BRCProgress",R,N,V_progress
TB,N,V_progressPublished
TQ,N,V_doneSize
T@"CKRecord",&,N,V_record
upload
v16@?0@"BRCFSEventToSyncUpEvent"8
v24@?0@"CKRecord"8d16
v24@?0@"CKRecord"8@"NSError"16
uploading
perUploadCompletionBlock
T@?,C,V_perUploadCompletionBlock
pendingChangesStream
T@"BRCPendingChangesStream",R,N,V_pendingChangesStream
serverTruthCallback
T@?,R,N,V_serverTruthCallback
clientTruthCallback
T@?,R,N,V_clientTruthCallback
<%@[%@] %@>
clientRequestID
lastSyncStatus
lastSyncDownDate
changeToken
SELECT item_id FROM server_items  WHERE item_id != %@ AND item_parent_id = %@ AND item_filename = %@ AND +zone_rowid = %@
UPDATE OR IGNORE server_items SET  item_rank = NULL, item_depth = 0, item_filename = %@, item_origname = IFNULL(item_origname, item_filename) WHERE zone_rowid = %@ AND item_id = %@
SELECT item_favoriterank, item_lastusedtime, item_side_car_ckinfo FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT item_favoriterank, item_lastusedtime, item_side_car_ckinfo FROM side_car_lookahead WHERE record_name = %@
DELETE FROM side_car_lookahead WHERE record_name = %@
SELECT item_type FROM server_items WHERE item_id = %@ AND zone_rowid = %@
UPDATE server_items SET   item_rank = NULL, item_depth = 0, item_origname = %@, pcs_state = %d, item_sharing_options = (%lu | (item_sharing_options & %lu)), item_side_car_ckinfo = %@, version_mtime = IFNULL(%@, version_mtime), item_stat_ckinfo = %@, item_state = %d, item_type = %d, item_mode = %d, item_birthtime = %lld, item_lastusedtime = %lld, item_favoriterank = %lld, item_parent_id = %@, item_filename = %@, item_hidden_ext = %d, item_finder_tags = %@, item_xattr_signature = %@, item_trash_put_back_path = %@, item_trash_put_back_parent_id = %@, item_alias_target = %@, item_creator = %@, quota_used = %@, recursive_child_count = %@, shared_children_count = %@, shared_alias_count = %@, child_count = %@ WHERE item_id = %@ AND zone_rowid = %@
INSERT INTO server_items ( item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_rank, item_origname, pcs_state, item_side_car_ckinfo, version_mtime, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, zone_rowid, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count) VALUES ( %@, %@, %ld, %@, NULL, %@, %d, %@, %@, %@, %d, %d, %d, %lld, %lld, %lld, %@, %@, %d, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@)
a side fault
an excluded
no record to update: %@
-[BRCServerZone _saveItemID:stat:serverMetrics:record:error:]
UPDATE server_items    SET item_rank = NULL, item_depth = 0, item_sharing_options = (%lu | (item_sharing_options & %lu)), version_name = %@, version_ckinfo = %@, version_mtime = %lld, version_size = %lld, version_thumb_size = %lld, version_thumb_signature = %@, version_content_signature = %@, version_xattr_signature = %@, version_edited_since_shared = %@, version_device = %@, version_conflict_loser_etags = %@, version_quarantine_info = %@  WHERE item_id = %@ AND zone_rowid = %@
chained
half-chained
unchained
-[BRCServerZone _saveEditedDirOrDocStructureRecord:error:]
-[BRCServerZone _saveEditedDocumentContentRecord:error:]
-[BRCServerZone _saveEditedSymlinkRecord:error:]
UPDATE server_items    SET version_name = %@  WHERE item_id = %@ AND zone_rowid = %@
-[BRCServerZone _saveEditedAliasRecord:zonesNeedingAllocRanks:error:]
INSERT OR REPLACE INTO server_items ( zone_rowid, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_rank, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator) VALUES ( %@, %d, %@, %@, %ld, %@, NULL, %@, %d, %d, %d, %lld, %lld, %lld, %@, %@, %d, %@, %@, %@, %@, %@, %@)
UPDATE server_items SET item_rank = NULL WHERE item_id = %@ AND zone_rowid = %@
UPDATE server_items    SET item_rank = NULL, item_sharing_options = (%lu | (item_sharing_options & %lu)),         item_sharing_etag = %@  WHERE item_id = %@ AND zone_rowid = %@
unreachable: structure record which isn't a directory or document
-[BRCServerZone _saveEditedRecord:zonesNeedingAllocRanks:forceHasShareID:error:]
UPDATE server_items   SET item_sharing_options = (item_sharing_options & %ld), item_sharing_etag = NULL WHERE zone_rowid = %@ AND item_id = %@
UPDATE server_items SET item_state = 1, item_filename = %@, item_rank = NULL, item_depth = 0, item_parent_id = %@ WHERE zone_rowid = %@ AND item_id = %@
B24@?0@"CKRecordID"8@"CKRecord"16
SELECT item_lastusedtime FROM server_items ORDER BY item_lastusedtime DESC LIMIT 1 OFFSET %lld
 AND item_depth >= -1
 AND item_depth >= 0
SELECT rowid, item_id, item_parent_id, item_state, item_type, version_ckinfo, item_favoriterank, item_lastusedtime, item_finder_tags IS NOT NULL   FROM server_items  WHERE zone_rowid = %@ AND item_rank IS NULL%@
SELECT 1 FROM server_items WHERE zone_rowid = %@ AND item_parent_id = %@ AND item_state = 0 LIMIT 1
SELECT COUNT(*) FROM server_items WHERE zone_rowid = %@ AND item_parent_id = %@ AND item_state = 0
UPDATE server_items SET item_type = 9, item_rank = NULL WHERE item_id = %@ AND zone_rowid = %@ AND item_type = 0
<rdar://problem/37451020>
WITH RECURSIVE item_parents (item_id, item_state, item_type, depth) AS (     SELECT item_id, item_state, item_type, 0       FROM server_items      WHERE zone_rowid = %@ AND item_id = %@  UNION ALL     SELECT p.item_parent_id, c.item_state, c.item_type, c.depth + 1       FROM server_items AS p INNER JOIN item_parents AS c USING (item_id)      WHERE p.zone_rowid = %@      LIMIT %u) SELECT item_state, depth, item_type FROM item_parents WHERE item_id_is_root(item_id)
UPDATE server_items SET item_depth = %lld WHERE rowid = %lld
SELECT rowid   FROM server_items  WHERE zone_rowid = %@ AND item_rank IS NULL AND item_depth >= 0 ORDER BY item_depth ASC
UPDATE server_items SET item_rank = %lld WHERE rowid = %lld
SELECT 1 FROM server_items WHERE item_type IN (9, 10) AND zone_rowid = %@ LIMIT 1
We have failed streams even though we aren't caught up? Crashing to prevent state corruption
-[BRCServerZone didSyncDownRequestID:serverChangeToken:editedRecords:deletedRecordIDs:deletedShareRecordIDs:zonesWhichAllocedRanks:caughtUp:pendingChanges:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iCloudDrive_Sim/iCloudDrive-29/core/items/BRCServerZone.m
UPDATE server_items SET item_type = 0 WHERE item_type = 9 AND zone_rowid = %@ LIMIT %lld
SELECT item_id FROM server_items WHERE zone_rowid = %@ AND item_rank = %lld
UPDATE server_items SET item_parent_id = %@ WHERE zone_rowid = %@ AND item_parent_id = %@
DELETE FROM server_items WHERE zone_rowid = %@ AND item_id = %@
v24@?0Q8^B16
DELETE FROM server_items WHERE zone_rowid = %@ LIMIT %lld
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE zone_rowid = %@
SELECT item_id FROM server_items WHERE zone_rowid = %@   AND item_parent_id = %@   AND item_type IN (0, 9, 10)
Needs Apply Changes:
-------------------
Under %@
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count, rowid      FROM server_items    WHERE zone_rowid = %@ AND item_parent_id = %@ ORDER BY item_filename
ERROR: item ID %@ seen twice
> apply{%@}
B36@?0@"BRCItemID"8i16@"NSString"20^@28
server items (%@)
============
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count, rowid      FROM server_items    WHERE zone_rowid = %@ AND item_parent_id = %@
- cancelled -
%*sERROR: item ID %@ seen twice
%*s%@
%*s> apply{%@}
B28@?0@"BRCItemID"8i16^@20
----------------------%@[%@]----------------------
SELECT COUNT(*) FROM server_items WHERE zone_rowid = %@
ORPHANED ITEMS:
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE zone_rowid = %@ AND call_block(%@, rowid)
you must override this
-[BRCServerZone validateStructureLoggingToFile:db:]
-[BRCServerZone validateItemsLoggingToFile:db:]
T@"BRCZoneRowID",&,N
isSharedZone
isPrivateZone
changeState
T@"BRCServerChangeState",R,V_changeState
zoneName
T@"NSString",R,N,V_zoneName
ownerName
zoneID
T@"CKRecordZoneID",R,N
metadataSyncContext
metadataSyncContextIfExists
isCloudDocsZone
T@"BRCZoneRowID",&,N,V_dbRowID
moved
full-sync
fetched-recents
fetched-favorites
ever-full-sync
structure
encryptedBasename
basehash
bounceNo
parent
target
executable
writable
fileContent
pkgManifest
pkgContent
pkgSignature
pkgXattrs
thumb1024
thumbQLMetadata
lastOpenTime
xattr
restorePath
restoreParent
targetPath
bookmarkContent
lastEditorName
countMetrics
ftags
quarantine
ignorePkgExtension
updateTime
zoneState
zoneDetails
message
records
perParticipantMetadata
shareReference
alias/
shareAlias/
symlink/
finderBookmark/
directory/
documentStructure/
documentContent/
directory/appData_
directory/appDocuments_
ppm_
br_initialItem
br_pathMatchID
br_pathMatchEtag
br_deleteChangeToken
br_etagInPreviousZone
brc_itemIDWithSession: are not supposed to trigger an error: %@
-[CKRecordID(BRCItemAdditions) brc_itemIDWithSession:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iCloudDrive_Sim/iCloudDrive-29/core/items/CKRecord+BRCItemAdditions.m
Found appLibrary %@ with invalid dbRowID for zoneID %@
Can't find appLibrary corresponding to zoneID %@
SELECT zone_rowid FROM server_items WHERE item_id = %@
missing key '%@' in %@ record %@
invalid value for key '%@' in %@ record %@: %@ %@
-[CKRecord(BRCSerializationAdditions) deserializeAliasInfo:serverZone:error:]
Records zoneID %@ must be equal to parents zoneID %@
invalid record type for record %@: %@
recordType
-[CKRecord(BRCSerializationAdditions) deserializeStatInfo:serverMetrics:itemID:session:error:]
%@ record %@ is both a file and a package
asset+pkg
%@ record %@ is neither a file nor a package
pkg+signature
-[CKRecord(BRCSerializationAdditions) deserializeVersion:fakeStatInfo:clientZone:error:]
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE item_id = %@
_Documents
br_oplockMergeEtag
br_updateDropped
user
ckUserId
last
first
device
_Data
rid:%@ etag:%@ le:%@
AppContainer
brc_containerMetadataPropertiesData
BRCFakeRecordWithErrorMarkerFor20716676
DOCUMENT_DEFAULT_NAME
nil-token
nil-cursor
sync-up-%@
sync-up/
v28@?0B8@"BRCListDirectoryContentsOperation"12@"NSError"20
B16@?0@"NSError"8
v24@?0@"NSData"8@"NSError"16
unreachable: Timed out while waiting for new web-sharing identity
T@"BRCServerZone",&,N,V_serverZone
recordsToSave
T@"NSMutableArray",&,N,V_recordsToSave
deletedRecordIDs
T@"NSMutableArray",&,N,V_deletedRecordIDs
iworkUnsharedShareIDs
T@"NSMutableArray",&,N,V_iworkUnsharedShareIDs
renamedShareIDsToNames
T@"NSMutableDictionary",&,N,V_renamedShareIDsToNames
recordsNeedingNewSharingProtectionInfo
T@"NSMutableArray",&,N,V_recordsNeedingNewSharingProtectionInfo
recordsNeedingUpdatedSharingProtectionInfo
T@"NSMutableArray",&,N,V_recordsNeedingUpdatedSharingProtectionInfo
itemNeedingPCSChaining
T@"BRCLocalItem",&,N,V_itemNeedingPCSChaining
recordIDsToDeleteToEtags
T@"NSMutableDictionary",&,N,V_recordIDsToDeleteToEtags
pluginFieldsForRecordDeletesByID
T@"NSMutableDictionary",&,N,V_pluginFieldsForRecordDeletesByID
conflictLosersToResolveByRecordID
T@"NSMutableDictionary",&,N,V_conflictLosersToResolveByRecordID
T@"NSString",&,N,V_stageID
cost
Tf,R,N,V_cost
createdAppLibraryNames
T@"NSMutableArray",R,N,V_createdAppLibraryNames
syncUpCompletionBlock
T@?,C,N,V_syncUpCompletionBlock
notSignedIn
driveDisabled
appMissing
profileDisabled
redirectReason
:nooverride
sharing/accept-flow
accept-flow-next-step
com.apple.clouddocs.accept-shared-url
%@:%@
step:
%@.%ld
can't fast forward to download step (currentIndex: %lu, downloadIndex: %lu, stepCount: %lu)
can't fast forward to download step from current possition (currentIndex: %lu)
v24@?0B8B12@"NSError"16
target app %@ is missing entitlement %@
shareURL
v20@?0B8@"NSError"12
unreachable: No operation error and no share id
v24@?0@"CKShareMetadata"8@"NSError"16
v16@?0@"NSURL"8
Share %@ can not be accepted right now.
unreachable: item is in an unknown state: %@:
unreachable: document doesn't exists anymore
unreachable: item isn't a document or directory
shareddocuments
Can't get bookmark string at %@
v24@?0^{__CFString=}8^{__CFError=}16
Don't know how to open shared item at %@
unreachable: couldn't save to server truth when creating server fault
_liveFileURL
prefs:root=APPLE_ACCOUNT&path=ICLOUD_SERVICE/CKDATABASESERVICE
itms-apps://?bundleIdentifier=%@
https
&%@=%@
%@=%@
T@"CKShareMetadata",R,N,V_shareMetadata
com.apple.bird
user-interactive
user-initiated
utility
unspecified
xpc-client-workloop
XPC Client task tracker
xpc-client-queue-%d
 (Logged out)
 o %@
   - operations:
      o %@
misc-operations
Not entitled to access container
Not a container proxy
Not entitled to access: %@
Not entitled to create container
can't %s app library for %@
create
load
-[BRCXPCClient _setupAppLibrary:error:]
v40@?0@"NSDictionary"8@"NSDictionary"16@"NSArray"24@"NSError"32
clientPriviledgesDescriptor
T@"BRCClientPrivilegesDescriptor",&,N,V_clientPriviledgesDescriptor
T@"BRCAccountSession",W,N,V_session
isUsingUbiquity
TB,N,V_isUsingUbiquity
defaultMangledID
entitledAppLibraryIDs
T@"NSSet",R,N
bundleID
hasPrivateSharingInterfaceEntitlement
isSandboxed
T@"BRFileProviderExtension",W,N,V_extension
connection
T@"NSXPCConnection",R,W,N,V_connection
dieOnInvalidate
TB,R,N,V_dieOnInvalidate
cloudEnabledStatus
Tc,R,N
%@ entitlement required
<%@ delay:%.1fs id:%@
 next-try in %.1fs>
 expired>
delay
Td,R,N,V_delay
nextTry
Td,R,N,V_nextTry
lastErrorKind
Ti,R,N,V_lastErrorKind
T@"ICDBRMangledID",&,N,V_mangledID
<%@ {  m:%.1f  h:%.1f  d:%.1f  }>
no budget left for %.1fs {
budget available {
  %d:%02d:%02ds ago
  m:%.1f%% (%.1f)
  h:%.1f%% (%.1f)
  d:%.1f%% (%.1f)
lastMinute
Tf,R,N
lastHour
lastDay
options
Tc,R,N,V_options
SELECT rowid, app_library_name, app_library_plist, zone_rowid FROM app_libraries WHERE app_library_name = %@ AND (app_library_owner = %@ OR app_library_owner IS NULL)
can't initialize library root with invalid library rowid %@
-[BRCItemID_v9 _initAsLibraryRootWithAppLibraryRowID:enclosureUUID:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iCloudDrive_Sim/iCloudDrive-29/core/BRCDatabaseSchema.m
downError
serverName
flags
downloadError
T@"NSError",&,N,V_downloadError
T@"NSString",R,N,V_serverName
wantsContent
wantsContentForThumbnail
wantsThumbnail
userInitiated
DROP INDEX IF EXISTS "client_items/item_file_id_unique"
DROP INDEX IF EXISTS "client_items/item_doc_id"
CREATE TABLE devices ( key integer primary key, name text unique not null)
CREATE TABLE server_boot_history ( date integer primary key, os text not null, br text not null, bird_schema integer not null, db_schema integer not null)
CREATE TABLE server_containers( container_id text primary key, container_schema_version integer not null, container_plist blob)
CREATE TABLE server_state (state, config_plist)
INSERT INTO server_state values (NULL, NULL)
CREATE TABLE backup_detector( old integer, new integer, counter integer, os text not null, br text not null)
INSERT INTO backup_detector (old, new, counter, os, br) VALUES (%llu, %llu, %llu, %@, %@)
CREATE TABLE boot_history ( date integer primary key, os text not null, br text not null, bird_schema integer not null, db_schema integer not null)
CREATE TABLE client_containers( container_id text primary key, container_schema_version integer not null, container_plist blob)
CREATE TABLE client_state (v)
INSERT INTO client_state values (NULL)
SELECT container_id, container_plist FROM client_containers
items
unapplied_table
UPDATE %@ SET item_live_conflict_loser_etags = call_block(%@, item_live_conflict_loser_etags) WHERE item_live_conflict_loser_etags IS NOT NULL
INSERT OR IGNORE INTO %@ (throttle_id) SELECT item_rank FROM %@ WHERE version_conflict_loser_etags IS NOT NULL AND item_rank IS NOT NULL
CREATE TABLE server_zones ( rowid integer PRIMARY KEY, zone_owner text not null, zone_name text not null, zone_plist blob, UNIQUE (zone_owner, zone_name))
CREATE TABLE server_xattr_blobs ( zone_rowid integer not null, signature blob not null, data blob not null, PRIMARY KEY(zone_rowid, signature))
CREATE TABLE server_pending_fetches ( zone_rowid integer not null, record_id blob not null, record blob, PRIMARY KEY (zone_rowid, record_id))
INSERT INTO server_zones (rowid, zone_owner, zone_name, zone_plist) SELECT NULL, %@, container_id, container_plist FROM server_containers
DROP TABLE server_containers
SELECT rowid, zone_name FROM server_zones
server_xattrs
INSERT INTO server_xattr_blobs SELECT %@, signature, data FROM %@
DROP TABLE %@
pending_fetches
CREATE TABLE client_zones ( rowid integer PRIMARY KEY, zone_owner text not null, zone_name text not null, zone_plist blob, UNIQUE (zone_owner, zone_name))
CREATE TABLE client_reader_throttle ( throttle_id integer primary key, zone_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0)
CREATE INDEX "client_reader_throttle/zone_rowid" ON client_reader_throttle (zone_rowid)
CREATE INDEX "client_reader_throttle/next_retry_stamp_active_state" ON client_reader_throttle (throttle_state, next_retry_stamp ASC, throttle_id ASC) WHERE throttle_state = 1
CREATE INDEX "client_reader_throttle/zone_rowid__throttle_state" ON client_reader_throttle (throttle_state, zone_rowid)
CREATE INDEX "client_reader_throttle/expire_stamp_inactive_state" ON client_reader_throttle (throttle_state, expire_stamp ASC) WHERE throttle_state = 0
CREATE TABLE client_unapplied_table ( throttle_id integer primary key, zone_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, item_id blob not null, apply_kind integer not null)
CREATE INDEX "client_unapplied_table/zone_rowid" ON client_unapplied_table (zone_rowid)
CREATE INDEX "client_unapplied_table/next_retry_stamp_active_state" ON client_unapplied_table (throttle_state, next_retry_stamp ASC, throttle_id ASC) WHERE throttle_state = 1
CREATE INDEX "client_unapplied_table/zone_rowid__kind__throttle_state" ON client_unapplied_table (throttle_state, zone_rowid, apply_kind)
CREATE INDEX "client_unapplied_table/expire_stamp_inactive_state" ON client_unapplied_table (throttle_state, expire_stamp ASC) WHERE throttle_state = 0
CREATE TABLE client_document_access ( zone_rowid text not null , item_rowid integer not null , evictable integer not null , access_time integer not null default 0, PRIMARY KEY (zone_rowid, item_rowid))
CREATE INDEX "client_document_access/access_item" ON client_document_access (access_time)
CREATE INDEX "client_document_access/evictable" ON client_document_access (evictable)
DROP TABLE IF EXISTS document_access
INSERT INTO client_zones (rowid, zone_owner, zone_name, zone_plist)    SELECT call_block(%@, container_id), %@, container_id, container_plist      FROM client_containers
DROP TABLE client_containers
SELECT rowid, zone_name FROM client_zones
desired_additions
UPDATE %@   SET item_state = -2, item_processing_stamp = 1 WHERE item_type = 3   AND item_localsyncupstate = 3
reader_throttle
 CREATE TABLE server_items ( zone_rowid integer not null, item_id blob not null, item_rank integer, item_sharing_options integer not null default 0, item_sharing_etag blob default null, item_stat_ckinfo blob, item_state integer not null, item_type integer not null, item_mode integer not null, item_creator_id integer not null, item_birthtime integer not null, item_parent_id blob not null, item_filename text not null, item_origname text, item_hidden_ext integer not null, item_finder_tags blob, item_xattr_signature blob, version_ckinfo blob, version_mtime integer, version_name text, version_size integer, version_thumb_size integer, version_thumb_signature blob, version_content_signature blob, version_xattr_signature blob, version_device integer, version_conflict_loser_etags blob, version_quarantine_info blob, PRIMARY KEY (zone_rowid, item_id), UNIQUE (item_rank))
CREATE INDEX "server_items/path_index" ON server_items (zone_rowid, item_parent_id, item_filename)
CREATE INDEX "server_items/alias_map" ON server_items (item_type, item_filename, zone_rowid, item_rank) WHERE item_type = 3
CREATE INDEX "server_items/item_rank" ON server_items (zone_rowid, item_rank)
CREATE INDEX "server_items/item_parent_id__item_state" ON server_items (zone_rowid, item_parent_id, item_state)
CREATE INDEX "server_items/item_xattr_signature" ON server_items (zone_rowid, item_xattr_signature)
CREATE INDEX "server_items/version_xattr_signature" ON server_items (zone_rowid, version_xattr_signature)
CREATE TABLE server_owners ( owner_key integer primary key, owner_name text not null, owner_plist blob, UNIQUE (owner_name))
DROP TABLE IF EXISTS %@
INSERT INTO server_items (zone_rowid, item_sharing_options, item_id, item_rank, item_stat_ckinfo, item_state, item_type, item_mode, item_creator_id, item_birthtime, item_parent_id, item_filename, item_origname, item_hidden_ext, item_finder_tags, item_xattr_signature, version_ckinfo, version_mtime, version_name, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info) SELECT %@, call_block(%@, item_iwork_sharing_info), item_id, item_rank, item_stat_ckinfo, item_state, item_type, item_mode, item_creator_id, item_birthtime, item_parent_id, item_filename, item_origname, item_hidden_ext, item_finder_tags, item_xattr_signature, version_ckinfo, version_mtime, version_name, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info FROM %@
DROP VIEW IF EXISTS %@
server_items_view
 CREATE TABLE client_items ( rowid integer primary key, zone_rowid integer not null, item_id blob not null, item_sharing_options integer not null default 0, item_localsyncupstate integer, item_in_flight_diffs integer, item_local_diffs integer not null, item_notifs_rank integer not null, item_transfer_priority integer, item_processing_stamp integer, item_doc_id integer, item_file_id integer, item_generation, item_localname text, item_bouncedname text, item_staged_file_id integer, item_staged_generation integer, item_stat_ckinfo blob, item_state integer not null, item_type integer not null, item_mode integer not null, item_creator_id integer not null, item_birthtime integer not null, item_parent_id blob not null, item_filename text, item_hidden_ext integer not null, item_finder_tags blob, item_xattr_signature blob, item_live_conflict_loser_etags blob, version_ckinfo blob, version_mtime integer, version_name text, version_size integer, version_thumb_size integer, version_thumb_signature blob, version_content_signature blob, version_xattr_signature blob, version_device integer, version_conflict_loser_etags blob, version_quarantine_info blob, version_uploaded_assets blob, version_upload_error blob, desired_version blob, UNIQUE (zone_rowid, item_id), UNIQUE (zone_rowid, item_doc_id), UNIQUE (zone_rowid, item_file_id), UNIQUE (item_staged_file_id), UNIQUE (zone_rowid, item_parent_id, item_localname))
CREATE INDEX "client_items/item_parent_id__item_state" ON client_items (zone_rowid, item_parent_id, item_state)
CREATE INDEX "client_items/item_path" ON client_items (zone_rowid, item_parent_id, item_filename)
CREATE INDEX "client_items/alias_map" ON client_items (item_type, item_filename, zone_rowid) WHERE item_type = 3
CREATE INDEX "client_items/item_in_flight_diffs" ON client_items (zone_rowid, item_in_flight_diffs)
CREATE INDEX "client_items/item_bouncedname" ON client_items (item_bouncedname) WHERE item_bouncedname IS NOT NULL
CREATE INDEX "client_items/lost_scan_index" ON client_items (item_state, zone_rowid, item_processing_stamp) WHERE item_state = -2
CREATE INDEX "client_items/zombie_scan_index" ON client_items (item_state, zone_rowid, item_processing_stamp) WHERE item_state = -3
CREATE INDEX "client_items/item_notifs_rank" ON client_items (zone_rowid, item_notifs_rank)
CREATE INDEX "client_items/download_index" ON client_items (zone_rowid, item_staged_file_id, desired_version)
CREATE INDEX "client_items/eviction_index" ON client_items (item_localsyncupstate, zone_rowid, version_size) WHERE item_localsyncupstate = 0
CREATE INDEX "client_items/sync_up_enumerator_1" ON client_items (item_localsyncupstate, zone_rowid, item_type) WHERE item_localsyncupstate = 4
CREATE INDEX "client_items/sync_up_enumerator_2" ON client_items (item_localsyncupstate, zone_rowid, item_state) WHERE item_localsyncupstate = 4
 CREATE TABLE client_pkg_items ( item_doc_id integer not null, rel_path text not null, zone_rowid integer not null, item_type integer not null, asset_rank integer not null, is_dirty integer, quarantine_info blob, file_id integer not null, signature_or_link blob, generation, size integer, mode integer, mtime integer, PRIMARY KEY (item_doc_id, rel_path ASC))
CREATE UNIQUE INDEX "client_pkg_items/asset_rank" ON client_pkg_items (item_doc_id, asset_rank)
CREATE INDEX "client_pkg_items/size" ON client_pkg_items (item_doc_id, size)
CREATE INDEX "client_pkg_items/is_dirty" ON client_pkg_items (item_doc_id, is_dirty)
CREATE INDEX "client_pkg_items/zone_rowid" ON client_pkg_items (zone_rowid)
CREATE TABLE client_uploads ( throttle_id integer primary key, zone_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, item_id blob not null, transfer_queue blob not null, transfer_size integer not null, transfer_record blob, transfer_stage blob, transfer_operation blob, UNIQUE(transfer_stage))
CREATE INDEX "client_uploads/gc_index" ON client_uploads (throttle_state, expire_stamp ASC) WHERE throttle_state = 0
CREATE INDEX IF NOT EXISTS "client_uploads/scheduling_by_size" ON client_uploads (throttle_state, transfer_queue, transfer_operation, transfer_size ASC)  WHERE throttle_state = 1
CREATE INDEX IF NOT EXISTS "client_uploads/scheduling_by_stamp" ON client_uploads (throttle_state, transfer_queue, transfer_operation, next_retry_stamp ASC)  WHERE throttle_state = 1
CREATE INDEX "client_uploads/transfer_operation" ON client_uploads (transfer_operation) WHERE transfer_operation IS NOT NULL
CREATE INDEX "client_uploads/zone_rowid__throttle_state" ON client_uploads (throttle_state, zone_rowid)
CREATE INDEX "client_uploads/reset_index" ON client_uploads (zone_rowid, throttle_state)
CREATE INDEX "client_uploads/out_of_quota_index" ON client_uploads (throttle_state, zone_rowid, transfer_size)  WHERE throttle_state = 32
pkg_items
INSERT INTO client_items (rowid, zone_rowid, version_upload_error, item_sharing_options, item_id, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, item_transfer_priority, item_processing_stamp, item_doc_id, item_file_id, item_generation, item_localname, item_bouncedname, item_staged_file_id, item_staged_generation, item_stat_ckinfo, item_state, item_type, item_mode, item_creator_id, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_live_conflict_loser_etags, version_ckinfo, version_mtime, version_name, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, desired_version) SELECT rowid, %@, NULL, call_block(%@, item_iwork_sharing_info), item_id, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, item_transfer_priority, item_processing_stamp, item_doc_id, item_file_id, item_generation, item_localname, item_bouncedname, item_staged_file_id, item_staged_generation, item_stat_ckinfo, item_state, item_type, item_mode, item_creator_id, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_live_conflict_loser_etags, version_ckinfo, version_mtime, version_name, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, desired_version FROM %@
items_view
INSERT INTO client_pkg_items (zone_rowid, item_doc_id, rel_path, item_type, asset_rank, is_dirty, quarantine_info, file_id, signature_or_link, generation, size, mode, mtime) SELECT %@, item_doc_id, rel_path, item_type, asset_rank, is_dirty, quarantine_info, file_id, signature_or_link, generation, size, mode, mtime FROM %@
DELETE FROM client_reader_throttle
INSERT INTO client_reader_throttle (zone_rowid, throttle_id, throttle_state) SELECT zone_rowid, rowid, 1 FROM client_items WHERE item_localsyncupstate = 2
INSERT INTO client_uploads (zone_rowid, throttle_id, throttle_state, item_id, transfer_queue, transfer_size) SELECT zone_rowid, rowid, 1, item_id, '_prepare', version_size + version_thumb_size  FROM client_items WHERE item_localsyncupstate = 1
DROP TABLE IF EXISTS server_alias_map
DELETE FROM client_unapplied_table
DROP TABLE IF EXISTS alias_map
INSERT INTO client_unapplied_table (zone_rowid, throttle_id, throttle_state, item_id, apply_kind) SELECT zone_rowid, -rowid, 1, item_id, %u FROM client_items WHERE item_localsyncupstate = 1
INSERT INTO client_unapplied_table (zone_rowid, throttle_id, throttle_state, item_id, apply_kind) SELECT zone_rowid, item_rank, 1, item_id, %u FROM server_items
DROP TABLE IF EXISTS client_desired_additions
CREATE TABLE client_downloads ( throttle_id integer not null, zone_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, item_id blob not null, transfer_queue blob not null, transfer_size integer not null, transfer_record blob, transfer_stage blob, transfer_operation blob, download_kind integer not null, download_etag blob not null, download_priority integer not null, download_request_stamp integer not null, download_error blob, UNIQUE(transfer_stage), UNIQUE(throttle_id, download_kind, download_etag))
CREATE INDEX "client_downloads/scheduling_by_priority" ON client_downloads (throttle_state, transfer_queue, transfer_operation, download_priority DESC, download_request_stamp DESC) WHERE throttle_state = 1
CREATE INDEX "client_downloads/scheduling_by_priority_and_kind" ON client_downloads (throttle_state, transfer_queue, transfer_operation, download_kind, download_priority DESC, download_request_stamp DESC) WHERE throttle_state = 1
CREATE INDEX "client_downloads/scheduling_by_stamp" ON client_downloads (throttle_state, transfer_queue, transfer_operation, next_retry_stamp ASC)  WHERE throttle_state = 1
CREATE INDEX "client_downloads/gc_index" ON client_downloads (throttle_state, expire_stamp ASC) WHERE throttle_state = 0
CREATE INDEX "client_downloads/transfer_operation" ON client_downloads (transfer_operation) WHERE transfer_operation IS NOT NULL
CREATE INDEX "client_downloads/zone_rowid__throttle_state" ON client_downloads (throttle_state, zone_rowid)
CREATE INDEX "client_downloads/reset_index" ON client_downloads (zone_rowid, throttle_state)
ALTER TABLE client_uploads ADD COLUMN upload_error blob
CREATE INDEX "client_downloads/low_disk_index" ON client_downloads (throttle_state, throttle_id, download_kind)  WHERE throttle_state = 43
DROP INDEX "client_document_access/access_item"
CREATE INDEX "server_items/version_size" ON server_items (version_size)
CREATE TABLE spotlight_ranks ( doc_id integer not null, notif_rank integer not null, PRIMARY KEY (doc_id, notif_rank ASC))
ALTER TABLE backup_detector ADD COLUMN uuid blob
UPDATE backup_detector SET uuid = %@
CREATE INDEX "client_pkg_items/item_doc_id" ON client_pkg_items (item_doc_id, zone_rowid)
CREATE INDEX "client_items/doc_sync_state" ON client_items (zone_rowid, item_localsyncupstate, item_type)WHERE item_type = 1  AND item_localsyncupstate IN (2,3, 4)
DROP INDEX "client_items/item_notifs_rank"
CREATE INDEX "client_items/item_notifs_rank" ON client_items (item_notifs_rank, zone_rowid)
CREATE INDEX "client_items/spotlight_index" ON client_items (item_type, item_state, item_doc_id, item_notifs_rank) WHERE item_type in (1, 2)
CREATE INDEX "spotlight_ranks/notif_rank" ON spotlight_ranks (notif_rank)
ALTER TABLE client_items ADD COLUMN item_scope integer NOT NULL DEFAULT 0
CREATE INDEX item_scope_index ON client_items(zone_rowid, item_notifs_rank, item_scope, item_state)
CREATE INDEX pending_download_docs ON client_items(item_doc_id, desired_version) WHERE desired_version != NULL
ALTER TABLE server_items ADD COLUMN item_depth integer NOT NULL DEFAULT 0
CREATE INDEX "server_items/item_rank_depth" ON server_items (zone_rowid, item_rank, item_depth)
ALTER TABLE client_items ADD COLUMN item_min_supported_os_rowid integer DEFAULT NULL
CREATE TABLE os_names ( name text unique )
UPDATE client_document_access SET evictable = (SELECT version_mtime FROM client_items as ci WHERE ci.rowid = item_rowid) WHERE access_time = 0 AND evictable = 0 AND (SELECT version_size FROM client_items as ci WHERE ci.rowid = item_rowid) > %lld AND (SELECT item_type FROM client_items as ci WHERE ci.rowid = item_rowid) = 1
 CREATE TABLE app_libraries ( rowid integer PRIMARY KEY, app_library_plist blob )
SELECT rowid, zone_plist FROM client_zones
maxLostStamp
deepScanStamp
requestID
lastApplyRank
appliedTombstoneRanks
syncUpThrottle
syncDownThrottle
INSERT INTO app_libraries (rowid, app_library_plist) VALUES (%@, %@)
ALTER TABLE client_items ADD COLUMN app_library_rowid
UPDATE client_items SET app_library_rowid = zone_rowid
CREATE UNIQUE INDEX "client_items/item_doc_id" ON client_items (item_doc_id)
CREATE UNIQUE INDEX "client_items/item_file_id_unique" ON client_items (item_file_id, item_state)WHERE item_state != -3
CREATE INDEX "client_items/item_id" ON client_items(item_id)
CREATE INDEX "client_items/item_file_id" ON client_items (item_file_id)
DROP INDEX "client_items/item_parent_id__item_state"
CREATE INDEX "client_items/item_parent_id__item_state" ON client_items (item_parent_id, item_state)
DROP INDEX "client_items/item_path"
CREATE INDEX "client_items/item_path" ON client_items (item_parent_id, item_filename)
CREATE INDEX "client_items/item_parent_id__item_localname" ON client_items (item_parent_id, item_localname)
 CREATE TABLE client_pkg_items_tmp ( item_doc_id integer not null, rel_path text not null, item_type integer not null, asset_rank integer not null, is_dirty integer, quarantine_info blob, file_id integer not null, signature_or_link blob, generation, size integer, mode integer, mtime integer, PRIMARY KEY (item_doc_id, rel_path ASC))
INSERT INTO client_pkg_items_tmp (item_doc_id, rel_path, item_type, asset_rank, is_dirty, quarantine_info, file_id, signature_or_link, generation, size, mode, mtime) SELECT item_doc_id, rel_path, item_type, asset_rank, is_dirty, quarantine_info, file_id, signature_or_link, generation, size, mode, mtime FROM client_pkg_items
DROP TABLE client_pkg_items
ALTER TABLE client_pkg_items_tmp RENAME TO client_pkg_items
DROP INDEX item_scope_index
CREATE INDEX "client_items/item_scope_index" ON client_items(zone_rowid, item_notifs_rank, item_scope, item_state)
DROP INDEX pending_download_docs
CREATE INDEX "client_items/pending_download_docs" ON client_items(item_doc_id, desired_version) WHERE desired_version != NULL
DROP INDEX "client_items/doc_sync_state"
CREATE INDEX "server_items/item_id" ON server_items(item_id)
CREATE TABLE users ( user_key integer primary key, user_name text not null, user_plist blob, UNIQUE (user_name))
INSERT INTO users(user_key, user_name, user_plist) SELECT owner_key, owner_name, owner_plist FROM server_owners
DROP TABLE server_owners
ALTER TABLE client_downloads ADD COLUMN unit_count_completed INTEGER DEFAULT 0
ALTER TABLE client_document_access RENAME TO client_document_access_tmp
CREATE TABLE client_document_access ( item_rowid integer primary key, evictable integer not null , access_time integer not null default 0)
INSERT INTO client_document_access(item_rowid, evictable, access_time) SELECT item_rowid, evictable, access_time FROM client_document_access_tmp
DROP TABLE client_document_access_tmp
ALTER TABLE server_items ADD COLUMN item_trash_put_back_parent_id BLOB DEFAULT NULL
ALTER TABLE server_items ADD COLUMN item_trash_put_back_path BLOB DEFAULT NULL
ALTER TABLE client_items ADD COLUMN item_trash_put_back_parent_id BLOB DEFAULT NULL
ALTER TABLE client_items ADD COLUMN item_trash_put_back_path BLOB DEFAULT NULL
DROP INDEX "server_items/path_index"
CREATE INDEX "server_items/path_index" ON server_items (item_parent_id, item_filename)
ALTER TABLE client_uploads ADD COLUMN upload_priority integer DEFAULT 0
ALTER TABLE client_uploads ADD COLUMN upload_request_stamp integer DEFAULT 0
CREATE INDEX "client_pkg_items/asset_rank" ON client_pkg_items (item_doc_id, asset_rank)
DROP INDEX "client_items/lost_scan_index"
DROP INDEX "client_items/zombie_scan_index"
CREATE INDEX "client_items/lost_scan_index" ON client_items (item_state, app_library_rowid, item_processing_stamp) WHERE item_state = -2
CREATE INDEX "client_items/zombie_scan_index" ON client_items (item_state, app_library_rowid, item_processing_stamp) WHERE item_state = -3
CREATE INDEX "client_items/doc_sync_state" ON client_items (zone_rowid, item_localsyncupstate, item_type)WHERE item_type = 1
ALTER TABLE client_items ADD COLUMN item_thumb_greedy integer default 0
ALTER TABLE client_items ADD COLUMN item_thumb_live_signature blob default null
CREATE INDEX "client_document_access/evictable/item_rowid" ON client_document_access (item_rowid)
ALTER TABLE app_libraries ADD COLUMN app_library_name text default null
ALTER TABLE app_libraries ADD COLUMN app_library_owner text default null
ALTER TABLE app_libraries ADD COLUMN zone_rowid integer default 0
UPDATE app_libraries SET app_library_name = (SELECT zone_name FROM client_zones WHERE app_libraries.rowid = client_zones.rowid),     app_library_owner = (SELECT zone_owner FROM client_zones WHERE app_libraries.rowid = client_zones.rowid),     zone_rowid = rowid
CREATE TABLE rowid_reservations ( rowid integer PRIMARY KEY, container_id text not null, owner text, UNIQUE (container_id, owner))
SELECT zone_name, zone_owner, rowid FROM server_zones WHERE zone_plist IS NULL
INSERT INTO rowid_reservations  (container_id, owner, rowid)  VALUES (%@, %@, %@)
DELETE FROM server_zones WHERE zone_plist IS NULL
INSERT INTO rowid_reservations  (rowid, container_id, owner) VALUES (%@, %@, %@)
CREATE INDEX "client_items/item_parent_id__item_state" ON client_items (app_library_rowid, item_parent_id, item_state)
ALTER TABLE rowid_reservations RENAME TO rowid_reservations_old
INSERT INTO rowid_reservations  ( rowid, container_id, owner ) SELECT rowid, container_id, owner FROM rowid_reservations_old
DROP TABLE rowid_reservations_old
CREATE UNIQUE INDEX "server_zones/zone_name__zone_owner" ON server_zones (zone_name, zone_owner)
CREATE UNIQUE INDEX "client_zones/zone_name__zone_owner" ON client_zones (zone_name, zone_owner)
SELECT rowid FROM rowid_reservations WHERE owner = %@
SELECT COUNT(*) FROM app_libraries GROUP BY app_library_name, app_library_owner
ALTER TABLE app_libraries RENAME TO app_libraries_old
CREATE TABLE app_libraries ( rowid integer PRIMARY KEY , app_library_plist blob , app_library_name text default null , app_library_owner text default null , zone_rowid integer default 0 , UNIQUE (app_library_name, app_library_owner))
INSERT INTO app_libraries        (rowid, app_library_plist, app_library_name, app_library_name, app_library_owner, zone_rowid) SELECT rowid, app_library_plist, app_library_name, app_library_name, app_library_owner, zone_rowid FROM app_libraries_old
DROP TABLE app_libraries_old
CREATE TABLE aggregates ( key TEXT NOT NULL, value INTEGER NOT NULL DEFAULT 0 )
INSERT INTO aggregates (key, value) SELECT 'version_size_sum', COALESCE(SUM(version_size), 0) FROM server_items
CREATE TRIGGER insert_version_sum_size AFTER INSERT ON server_items  BEGIN  UPDATE aggregates SET value = (value + COALESCE(new.version_size, 0)) WHERE key = 'version_size_sum';   END
CREATE TRIGGER update_version_sum_size UPDATE OF version_size ON server_items  BEGIN  UPDATE aggregates SET value = (value - COALESCE(old.version_size, 0) + COALESCE(new.version_size, 0)) WHERE key = 'version_size_sum';   END
CREATE TRIGGER delete_version_sum_size BEFORE DELETE ON server_items  BEGIN  UPDATE aggregates SET value = (value - COALESCE(old.version_size, 0)) WHERE key = 'version_size_sum';   END
CREATE TABLE client_pkg_sizes (item_doc_id integer not null primary key, aggregate_size integer not null default 0, largest_file_size integer not null default 0)
INSERT INTO client_pkg_sizes SELECT item_doc_id, COALESCE(SUM(size), 0), COALESCE(MAX(size), 0) FROM client_pkg_items GROUP BY item_doc_id
CREATE TRIGGER "client_pkg_items/increase_pkg_size" AFTER INSERT ON client_pkg_items BEGIN INSERT OR IGNORE INTO client_pkg_sizes VALUES (new.item_doc_id, 0, 0); UPDATE client_pkg_sizes SET aggregate_size = aggregate_size + COALESCE(new.size, 0), largest_file_size = MAX(COALESCE(new.size,0), largest_file_size) WHERE item_doc_id = new.item_doc_id; END
CREATE TRIGGER "client_pkg_items/update_pkg_size" UPDATE OF size ON client_pkg_items BEGIN UPDATE client_pkg_sizes SET aggregate_size = aggregate_size - COALESCE(old.size, 0) + COALESCE(new.size, 0), largest_file_size = MAX(COALESCE(new.size,0), largest_file_size) WHERE item_doc_id = new.item_doc_id; END
CREATE TRIGGER "client_pkg_items/reduce_pkg_size"  BEFORE DELETE ON client_pkg_items BEGIN UPDATE client_pkg_sizes SET aggregate_size = aggregate_size - COALESCE(old.size, 0) WHERE item_doc_id = old.item_doc_id; END
DROP INDEX "client_pkg_items/size"
CREATE TABLE share_metadata_cache( item_rowid integer primary key, share_path text unique not null, share_metadata blob non null)
ALTER TABLE app_libraries ADD COLUMN auto_client_item_count INTEGER DEFAULT 0
ALTER TABLE app_libraries ADD COLUMN auto_document_count INTEGER DEFAULT 0
ALTER TABLE app_libraries ADD COLUMN auto_document_with_local_changes_count INTEGER DEFAULT 0
ALTER TABLE app_libraries ADD COLUMN auto_aggregate_size INTEGER DEFAULT 0
CREATE TRIGGER "client_items/insert_item" AFTER INSERT ON client_items BEGIN  UPDATE app_libraries SET auto_client_item_count = auto_client_item_count + 1 WHERE rowid = new.app_library_rowid AND new.item_type != 4 AND new.item_type != 3;  UPDATE app_libraries SET auto_aggregate_size = auto_aggregate_size + COALESCE(new.version_size, 0), auto_document_count = auto_document_count + 1      WHERE rowid = new.app_library_rowid AND new.item_type = 1 AND new.item_state != 1;  UPDATE app_libraries SET auto_document_with_local_changes_count = auto_document_with_local_changes_count + 1 WHERE rowid = new.app_library_rowid AND new.item_type = 1 AND new.item_localsyncupstate >= 2; END
CREATE TRIGGER "client_items/delete_item" BEFORE delete ON client_items BEGIN  UPDATE app_libraries SET auto_client_item_count = auto_client_item_count - 1 WHERE rowid = old.app_library_rowid AND old.item_type != 4 AND old.item_type != 3;  UPDATE app_libraries SET auto_aggregate_size = auto_aggregate_size - COALESCE(old.version_size, 0), auto_document_count = auto_document_count - 1      WHERE rowid = old.app_library_rowid AND old.item_type = 1 AND old.item_state != 1;  UPDATE app_libraries SET auto_document_with_local_changes_count = auto_document_with_local_changes_count - 1 WHERE rowid = old.app_library_rowid AND old.item_type = 1 AND old.item_localsyncupstate >= 2; END
CREATE TRIGGER "client_items/update_size" UPDATE OF version_size, item_type, item_state ON client_items BEGIN  UPDATE app_libraries SET    auto_aggregate_size = auto_aggregate_size - COALESCE(old.version_size,0)  * (old.item_type = 1 AND old.item_state != 1) + COALESCE(new.version_size,0) * (new.item_type = 1 AND new.item_state != 1),    auto_document_count = auto_document_count - (old.item_type = 1 AND old.item_state != 1) + (new.item_type = 1 AND new.item_state != 1)      WHERE rowid = new.app_library_rowid; END
CREATE TRIGGER "client_items/update_changes_count" UPDATE OF item_type,item_localsyncupstate ON client_items BEGIN  UPDATE app_libraries set auto_document_with_local_changes_count = auto_document_with_local_changes_count - (old.item_type = 1 AND old.item_localsyncupstate >= 2) + (new.item_type = 1 AND new.item_localsyncupstate >= 2) where rowid = new.app_library_rowid; END
ALTER TABLE server_items ADD COLUMN pcs_state INTEGER NOT NULL DEFAULT 0
DROP TABLE share_metadata_cache
CREATE TABLE share_metadata_cache( item_rowid integer primary key, share_path text unique not null, record_id blob non null)
ALTER TABLE "client_uploads" ADD COLUMN app_library_rowid INTEGER
UPDATE "client_uploads" SET app_library_rowid = (SELECT app_library_rowid FROM client_items WHERE client_items.rowid = client_uploads.throttle_id) 
ALTER TABLE "client_downloads" ADD COLUMN app_library_rowid INTEGER 
UPDATE "client_downloads" SET app_library_rowid = (SELECT app_library_rowid FROM client_items WHERE client_items.rowid = client_downloads.throttle_id ) 
SELECT 1 FROM client_uploads WHERE app_library_rowid == NULL LIMIT 1
SELECT 1 FROM client_downloads WHERE app_library_rowid == NULL LIMIT 1
DROP TABLE IF EXISTS share_metadata_cache
CREATE INDEX "client_items/item_parent_id_rowid" ON client_items(zone_rowid, item_parent_id, rowid)
CREATE TABLE mark_children_lost_progress(zone_rowid INTEGER NOT NULL, item_parent_id BLOB NOT NULL, last_updated_row_id INTEGER NOT NULL, UNIQUE(zone_rowid, item_parent_id))
ALTER TABLE client_pkg_items ADD COLUMN xattrs BLOB
DROP INDEX IF EXISTS "client_items/lost_scan_index"
DROP INDEX IF EXISTS "client_items/zombie_scan_index"
DROP INDEX IF EXISTS "client_items/lostzombie_scan_index"
CREATE INDEX "client_items/lostzombie_scan_index" ON client_items (item_processing_stamp) WHERE item_state IN (-2, -3)
ALTER TABLE server_pending_fetches ADD COLUMN deleted_record_type INTEGER NOT NULL DEFAULT 0
SELECT 1 FROM client_items WHERE zone_rowid NOT IN (SELECT rowid from client_zones)
SELECT 1 FROM server_items WHERE zone_rowid NOT IN (SELECT rowid from server_zones)
DROP TABLE IF EXISTS sqlite_stat1
DROP TABLE IF EXISTS sqlite_stat2
DROP TABLE IF EXISTS sqlite_stat3
DROP TABLE IF EXISTS sqlite_stat4
ALTER TABLE mark_children_lost_progress ADD COLUMN item_parent_file_id integer
UPDATE server_items SET item_parent_id = call_block(%@, item_parent_id, item_id) WHERE zone_rowid IN (SELECT rowid FROM server_zones WHERE zone_owner != %@)
UPDATE client_items SET item_parent_id = call_block(%@, item_parent_id, item_id) WHERE zone_rowid IN (SELECT rowid FROM client_zones WHERE client_zones.zone_owner != %@)
ALTER TABLE client_document_access ADD COLUMN modify_access_time integer NOT NULL DEFAULT 0
UPDATE client_document_access SET modify_access_time = MAX(access_time, IFNULL((SELECT version_mtime FROM client_items AS ci WHERE ci.rowid = item_rowid), 0))
CREATE INDEX "client_document_access/modify_access_item" ON client_document_access(modify_access_time)
INSERT OR IGNORE INTO client_document_access (item_rowid, evictable, access_time, modify_access_time) SELECT rowid, 0, 0, version_mtime FROM client_items WHERE item_type IN (1, 8)
DROP INDEX IF EXISTS "server_pending_fetches/record_index"
CREATE INDEX "server_pending_fetches/record_is_null" ON server_pending_fetches (zone_rowid) WHERE record IS NULL
CREATE INDEX "server_pending_fetches/record_is_not_null" ON server_pending_fetches (zone_rowid) WHERE (record >= '')
ALTER TABLE client_document_access ADD COLUMN indexable integer NOT NULL DEFAULT 0
UPDATE client_document_access SET indexable = 1 WHERE (SELECT item_scope FROM client_items AS ci WHERE ci.rowid = item_rowid) = 2
CREATE INDEX "client_document_access/indexable" ON client_document_access(indexable) WHERE indexable != 0
CREATE TABLE client_document_access( item_rowid integer primary key, access_time integer not null default 0, modify_access_time integer NOT NULL DEFAULT 0, properties integer NOT NULL DEFAULT 0)
INSERT INTO client_document_access(item_rowid, access_time, modify_access_time, properties) SELECT item_rowid, access_time, modify_access_time, ((case when indexable != 0 then 0x2 else 0 end) | (case when evictable != 0 then 0x1 else 0 end)) FROM client_document_access_tmp
DROP INDEX "client_document_access/evictable"
DROP INDEX "client_document_access/evictable/item_rowid"
DROP INDEX "client_document_access/modify_access_item"
DROP INDEX "client_document_access/indexable"
CREATE INDEX "client_document_access/evictable" ON client_document_access (properties) WHERE ((properties & 0x1) != 0)
CREATE INDEX "client_document_access/evictable/item_rowid" ON client_document_access (item_rowid);
CREATE INDEX "client_document_access/modify_access_item" ON client_document_access(modify_access_time);
CREATE INDEX "client_document_access/indexable" ON client_document_access(properties) WHERE ((properties & 0x2) != 0)
CREATE INDEX "client_items/doc_sync_state" ON client_items (zone_rowid, item_localsyncupstate) WHERE item_type IN (1, 6)
CREATE INDEX "client_document_access/access_item" ON client_document_access(access_time);
CREATE TRIGGER IF NOT EXISTS "client_items/update_app_library" AFTER UPDATE OF app_library_rowid ON client_items WHEN new.app_library_rowid <> old.app_library_rowid BEGIN  UPDATE app_libraries SET auto_client_item_count = auto_client_item_count - 1 WHERE rowid = old.app_library_rowid AND old.item_type != 4 AND old.item_type != 3;  UPDATE app_libraries SET auto_aggregate_size = auto_aggregate_size - COALESCE(old.version_size, 0), auto_document_count = auto_document_count - 1      WHERE rowid = old.app_library_rowid AND old.item_type = 1 AND old.item_state != 1;  UPDATE app_libraries SET auto_document_with_local_changes_count = auto_document_with_local_changes_count - 1 WHERE rowid = old.app_library_rowid AND old.item_type = 1 AND old.item_localsyncupstate >= 2;  UPDATE app_libraries SET auto_client_item_count = auto_client_item_count + 1 WHERE rowid = new.app_library_rowid AND new.item_type != 4 AND new.item_type != 3;  UPDATE app_libraries SET auto_aggregate_size = auto_aggregate_size + COALESCE(new.version_size, 0), auto_document_count = auto_document_count + 1      WHERE rowid = new.app_library_rowid AND new.item_type = 1 AND new.item_state != 1;  UPDATE app_libraries SET auto_document_with_local_changes_count = auto_document_with_local_changes_count + 1 WHERE rowid = new.app_library_rowid AND new.item_type = 1 AND new.item_localsyncupstate >= 2; END
UPDATE app_libraries SET auto_client_item_count=(SELECT COUNT(*) FROM client_items WHERE app_library_rowid = app_libraries.rowid AND item_type != 4 AND item_type != 3), auto_document_count=(SELECT COUNT(*) FROM client_items WHERE app_library_rowid = app_libraries.rowid AND item_type = 1 AND item_state != 1), auto_aggregate_size=(SELECT COALESCE(SUM(version_size), 0) FROM client_items WHERE app_libraries.rowid = app_library_rowid AND item_type = 1 AND item_state != 1), auto_document_with_local_changes_count=(SELECT COUNT(*) FROM client_items WHERE app_library_rowid = app_libraries.rowid AND item_type = 1 AND item_localsyncupstate >= 2)
CREATE TABLE client_sync_up ( throttle_id integer not null, zone_rowid integer not null, throttle_state integer not null, in_flight_diffs integer, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, UNIQUE(throttle_id, zone_rowid))
ALTER TABLE client_items  ADD COLUMN item_parent_zone_rowid integer
INSERT OR IGNORE INTO client_sync_up( throttle_id, zone_rowid, throttle_state, in_flight_diffs ) SELECT  rowid, zone_rowid, 1, item_in_flight_diffs FROM client_items WHERE  item_localsyncupstate = 4
UPDATE client_items SET item_parent_zone_rowid = zone_rowid
SELECT rowid, item_id, item_file_id, item_filename, item_type FROM client_items WHERE zone_rowid = %@
SELECT 1 from client_items  WHERE item_parent_zone_rowid = %@    AND item_parent_id = %@    AND IFNULL(item_localname, item_filename) = %@
UPDATE client_items SET  item_parent_zone_rowid = %@,  item_parent_id = %@,  app_library_rowid = %@,  item_localname = %@ WHERE  rowid = %@
UPDATE client_items SET  item_state = -1 WHERE  rowid = %@ AND item_state = 0
DELETE FROM client_items WHERE  item_filename = %@ AND  item_type = 3
CREATE TABLE rowid_reservations ( rowid integer PRIMARY KEY, container_id text unique not null)
INSERT INTO rowid_reservations  ( rowid, container_id ) SELECT rowid, container_id FROM rowid_reservations_old WHERE owner = %@ OR owner IS NULL
CREATE TABLE app_libraries ( rowid integer PRIMARY KEY , app_library_plist blob , app_library_name text unique default null , zone_rowid integer default 0 , auto_client_item_count integer default 0 , auto_document_count INTEGER DEFAULT 0 , auto_document_with_local_changes_count INTEGER DEFAULT 0 , auto_aggregate_size INTEGER DEFAULT 0)
INSERT INTO app_libraries  (rowid, app_library_plist, app_library_name, zone_rowid, auto_client_item_count, auto_document_count, auto_document_with_local_changes_count, auto_aggregate_size) SELECT rowid, app_library_plist, app_library_name, zone_rowid, auto_client_item_count, auto_document_count, auto_document_with_local_changes_count, auto_aggregate_size   FROM app_libraries_old WHERE app_library_owner = %@ OR app_library_owner IS NULL
ALTER TABLE mark_children_lost_progress RENAME TO mark_children_lost_progress_old
CREATE TABLE mark_children_lost_progress (zone_rowid INTEGER NOT NULL , item_parent_id BLOB NOT NULL , last_updated_row_id INTEGER NOT NULL , item_parent_file_id INTEGER , app_library_rowid INTEGER NOT NULL , PRIMARY KEY(zone_rowid, item_parent_id))
INSERT INTO mark_children_lost_progress (zone_rowid, item_parent_id, last_updated_row_id, item_parent_file_id, app_library_rowid) SELECT o.zone_rowid, o.item_parent_id, o.last_updated_row_id, o.item_parent_file_id, c.app_library_rowid   FROM mark_children_lost_progress_old AS o INNER JOIN client_items AS c     ON o.zone_rowid = c.zone_rowid AND o.item_parent_id = c.item_id
DROP TABLE mark_children_lost_progress_old
ALTER TABLE client_downloads RENAME TO client_downloads_old
CREATE TABLE client_downloads ( throttle_id integer not null, zone_rowid integer not null, app_library_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, transfer_queue blob not null, transfer_size integer not null, transfer_record blob, transfer_stage blob, transfer_operation blob, download_kind integer not null, download_etag blob not null, download_priority integer not null, download_request_stamp integer not null, download_error blob, unit_count_completed INTEGER DEFAULT 0, UNIQUE(transfer_stage), UNIQUE(throttle_id, download_kind, download_etag))
INSERT INTO client_downloads (throttle_id, zone_rowid, app_library_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, download_kind, download_etag, download_priority, download_request_stamp, download_error, unit_count_completed) SELECT throttle_id, zone_rowid, app_library_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, download_kind, download_etag, download_priority, download_request_stamp, download_error, unit_count_completed FROM client_downloads_old
DROP TABLE client_downloads_old
ALTER TABLE client_uploads RENAME TO client_uploads_old
CREATE TABLE client_uploads ( throttle_id integer primary key, zone_rowid integer not null, app_library_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, transfer_queue blob not null, transfer_size integer not null, transfer_record blob, transfer_stage blob, transfer_operation blob, upload_error blob, upload_priority integer DEFAULT 0, upload_request_stamp integer DEFAULT 0, UNIQUE(transfer_stage))
INSERT INTO client_uploads (throttle_id, zone_rowid, app_library_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, upload_error, upload_priority, upload_request_stamp) SELECT throttle_id, zone_rowid, app_library_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, upload_error, upload_priority, upload_request_stamp FROM client_uploads_old
DROP TABLE client_uploads_old
ALTER TABLE client_unapplied_table RENAME TO client_unapplied_table_old
CREATE TABLE client_unapplied_table ( throttle_id integer primary key, zone_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, apply_kind integer not null)
INSERT INTO client_unapplied_table (throttle_id, zone_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, apply_kind) SELECT throttle_id, zone_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, apply_kind FROM client_unapplied_table_old
DROP TABLE client_unapplied_table_old
CREATE INDEX "client_items/mark_children_lost_index" ON client_items(item_parent_zone_rowid, item_parent_id, rowid ASC) WHERE item_state = 0
create index "client_items/faults_enumeration" ON client_items(zone_rowid, rowid) WHERE item_type = 2
DROP INDEX "client_items/sync_up_enumerator_1"
DROP INDEX "client_items/sync_up_enumerator_2"
CREATE INDEX "client_items/sync_up_enumerator_1" ON client_items(item_parent_zone_rowid, item_parent_id) WHERE item_localsyncupstate = 4 AND item_state IN (0, 1)
CREATE INDEX "client_items/sync_up_enumerator_2" ON client_items(zone_rowid) WHERE item_localsyncupstate IN (2, 3, 4)
ALTER TABLE server_items ADD COLUMN item_lastusedtime integer DEFAULT NULL
ALTER TABLE client_items ADD COLUMN item_lastusedtime integer DEFAULT NULL
ALTER TABLE server_items ADD COLUMN item_favoriterank integer DEFAULT NULL
ALTER TABLE client_items ADD COLUMN item_favoriterank integer DEFAULT NULL
DROP INDEX "spotlight_ranks/notif_rank"
DROP TABLE spotlight_ranks
CREATE TABLE tombstones ( file_object_id      integer not null, file_object_id_type integer not null, notif_rank          integer not null, PRIMARY KEY (file_object_id, notif_rank ASC))
CREATE INDEX "tombstones/notif_rank" ON tombstones (notif_rank)
ALTER TABLE client_items ADD COLUMN item_user_visible integer not null default 1
UPDATE client_document_access SET properties = properties & 1
UPDATE client_downloads SET app_library_rowid = (SELECT app_library_rowid FROM client_items WHERE client_downloads.throttle_id = client_items.rowid) WHERE throttle_state != 0
UPDATE client_uploads SET app_library_rowid = (SELECT app_library_rowid FROM client_items WHERE client_uploads.throttle_id = client_items.rowid) WHERE throttle_state != 0
ALTER TABLE server_items ADD COLUMN item_alias_target text
UPDATE server_items SET item_alias_target = item_filename, item_filename = "" WHERE item_type = 3
ALTER TABLE client_items ADD COLUMN item_alias_target text
UPDATE client_items SET item_alias_target = item_filename, item_filename = NULL WHERE item_type = 3
UPDATE server_items SET version_quarantine_info = %@, item_rank = NULL WHERE length(version_quarantine_info) == 0 AND version_quarantine_info IS NOT NULL
UPDATE client_items SET item_local_diffs = item_local_diffs | %llu & ~%llu WHERE item_local_diffs & %llu != 0
UPDATE client_items SET item_local_diffs = item_local_diffs | %llu WHERE item_type = 5 AND item_stat_ckinfo IS NULL AND (item_local_diffs & %llu)==0
ALTER TABLE client_items ADD COLUMN item_tmpbounceno INTEGER
CREATE INDEX "client_items/item_tmpbounceno" ON client_items (item_tmpbounceno) WHERE item_tmpbounceno IS NOT NULL
UPDATE client_items SET item_tmpbounceno = call_block(%p, item_bouncedname) WHERE item_bouncedname IS NOT NULL
DROP INDEX "client_items/item_bouncedname"
DROP INDEX "client_items/item_parent_id__item_localname"
CREATE INDEX "client_items/item_parent_id__item_bouncedname" ON client_items (item_parent_zone_rowid, item_parent_id, item_bouncedname) WHERE item_bouncedname IS NOT NULL
CREATE INDEX "client_items/item_parent_id__item_localname" ON client_items (item_parent_zone_rowid, item_parent_id, item_localname) WHERE item_localname IS NOT NULL
UPDATE client_items SET item_bouncedname = call_block(%p, item_filename, item_localname) WHERE item_localname IS NOT NULL
CREATE INDEX "client_items/item_filename_path" ON client_items (item_parent_zone_rowid, item_parent_id, item_filename)
CREATE INDEX "client_items/item_localname_path" ON client_items (item_parent_zone_rowid, item_parent_id, item_localname)
CREATE INDEX "client_items/item_bouncedname_path" ON client_items (item_parent_zone_rowid, item_parent_id, item_bouncedname)
CREATE INDEX "client_items/shared_item_library" ON client_items (app_library_rowid, item_state) WHERE item_creator_id != 0;
DROP INDEX "client_items/item_id"
DROP INDEX "client_items/item_file_id"
DROP INDEX "client_items/item_file_id_unique"
CREATE UNIQUE INDEX "client_items/item_file_id_unique" ON client_items(item_file_id) WHERE item_state IN (0, -1)
CREATE INDEX "client_sync_up/next_retry" ON client_sync_up (next_retry_stamp) WHERE throttle_state = 1
CREATE INDEX "client_items/sync_up_enumerator" ON client_items(item_state, item_type) WHERE item_localsyncupstate = 4 AND item_min_supported_os_rowid IS NULL
UPDATE client_items SET item_user_visible = 0 WHERE item_scope IN (0, 1)
UPDATE client_items SET item_user_visible = 0 WHERE item_scope = 3 AND (SELECT parent.item_filename FROM client_items AS parent WHERE parent.item_id = item_parent_id AND parent.zone_rowid = item_parent_zone_rowid)
UPDATE client_items SET item_user_visible = 0 WHERE item_filename LIKE '.%%' AND item_scope = 2
UPDATE client_items SET item_state = -1, item_processing_stamp = inc_and_fetch64(%p) WHERE item_user_visible = 0 AND item_scope = 2 AND item_type = 0 AND item_state = 0
DROP TABLE server_pending_fetches
CREATE INDEX "client_items/item_notifs_rank_children" ON client_items (item_parent_id, item_parent_zone_rowid, item_notifs_rank) WHERE item_state IN (0, -1)
CREATE INDEX "client_items/item_notifs_rank_library" ON client_items (item_notifs_rank, app_library_rowid) WHERE item_state IN (0, -1)
DROP INDEX "client_items/alias_map"
CREATE INDEX "client_items/alias_map" ON client_items(item_type, item_alias_target) WHERE item_type = 3
DROP INDEX "server_items/alias_map"
CREATE INDEX "server_items/alias_map" ON server_items(item_type, item_alias_target) WHERE item_type = 3
DROP INDEX "client_items/item_localname_path"
DROP INDEX "client_items/item_bouncedname_path"
DROP INDEX "client_items/item_parent_id_rowid"
DROP INDEX "client_items/spotlight_index"
DROP INDEX "client_items/download_index"
DROP INDEX "client_items/eviction_index"
DROP INDEX "client_items/item_in_flight_diffs"
DROP INDEX "client_uploads/scheduling_by_size"
DROP INDEX "client_pkg_items/is_dirty"
DROP INDEX "client_items/pending_download_docs"
CREATE INDEX "client_items/app_library_rowid" ON client_items (app_library_rowid)
CREATE INDEX "client_items/item_parent_id_rowid" ON client_items (item_parent_id, app_library_rowid, rowid)
CREATE INDEX "client_items/working_set_index" ON client_items (item_notifs_rank) WHERE item_user_visible = 1
CREATE INDEX "client_items/eviction_index" ON client_items (version_mtime, app_library_rowid) WHERE item_localsyncupstate = 0 AND item_state != 1
CREATE INDEX "client_sync_up/sync_state_index" ON client_sync_up (zone_rowid, throttle_state)
CREATE INDEX "client_sync_up/throttle_id" ON client_sync_up (throttle_id)
CREATE INDEX "client_sync_up/zone_rowid" ON client_sync_up (zone_rowid)
CREATE INDEX "client_sync_up/expire_stamp_inactive_state" ON client_sync_up (throttle_state, expire_stamp) WHERE throttle_state = 0
CREATE INDEX "client_uploads/scheduling_by_priority" ON client_uploads (throttle_state, transfer_queue, upload_priority DESC, upload_request_stamp DESC, transfer_size ASC)  WHERE throttle_state = 1 AND transfer_operation IS NULL
UPDATE server_state SET state = %@
SELECT 1 FROM client_items WHERE app_library_rowid = %@ AND item_stat_ckinfo IS NOT NULL LIMIT 1
ALTER TABLE client_unapplied_table ADD COLUMN app_library_rowid INTEGER
SELECT rowid FROM app_libraries WHERE app_library_name = %@
UPDATE client_unapplied_table SET app_library_rowid = %@ WHERE zone_rowid = %@
CREATE INDEX "client_items/item_type" ON client_items(item_type)
DROP INDEX "client_items/faults_enumeration"
ALTER TABLE server_items ADD COLUMN version_edited_since_shared INTEGER
ALTER TABLE client_items ADD COLUMN version_edited_since_shared INTEGER
ALTER TABLE server_items ADD COLUMN item_creator INTEGER
ALTER TABLE client_items ADD COLUMN item_creator INTEGER
CREATE INDEX "server_items/item_lastusedtime" ON server_items(item_lastusedtime DESC)
DROP INDEX "client_uploads/reset_index"
DROP INDEX "client_downloads/reset_index"
CREATE INDEX "client_uploads/reset_index" ON client_uploads (zone_rowid, throttle_state) WHERE throttle_state != 0
CREATE INDEX "client_downloads/reset_index" ON client_downloads (zone_rowid, throttle_state) WHERE throttle_state != 0
CREATE INDEX "client_uploads/zone_index" ON client_uploads (zone_rowid)
CREATE INDEX "client_downloads/zone_index" ON client_downloads (zone_rowid)
CREATE INDEX "client_items/item_mtime_path" ON client_items (item_parent_zone_rowid, item_parent_id, version_mtime)
UPDATE client_uploads SET throttle_state = 1 WHERE throttle_state = 31
ALTER TABLE client_items ADD COLUMN item_side_car_ckinfo BLOB
ALTER TABLE server_items ADD COLUMN item_side_car_ckinfo BLOB
CREATE TABLE side_car_lookahead ( record_name text primary key , root_alias_record_name text NOT NULL, item_side_car_ckinfo BLOB NOT NULL , item_favoriterank integer , item_lastusedtime integer )
ALTER TABLE client_items ADD COLUMN visible_child_count integer
UPDATE client_items AS parent SET visible_child_count = (SELECT COUNT(*) FROM client_items AS child WHERE child.item_parent_id = parent.item_id AND child.item_parent_zone_rowid = parent.zone_rowid AND (child.item_user_visible = 1 OR (child.item_scope == 3 AND child.item_filename != ".Trash"))) WHERE parent.item_type in (0, 9, 10)
CREATE TRIGGER "visible_child_count/deletion" AFTER DELETE ON client_items BEGIN UPDATE OR IGNORE client_items SET visible_child_count = visible_child_count - 1 WHERE (old.item_user_visible = 1 OR old.item_scope = 3) AND old.item_parent_id = item_id AND old.item_parent_zone_rowid = zone_rowid AND old.item_filename != ".Trash" ; END
CREATE TRIGGER "visible_child_count/insertion" AFTER INSERT ON client_items BEGIN UPDATE OR IGNORE client_items SET visible_child_count = visible_child_count + 1 WHERE (new.item_user_visible = 1 OR new.item_scope = 3) AND new.item_filename != ".Trash" AND new.item_parent_id = item_id AND new.item_parent_zone_rowid = zone_rowid ; END
CREATE TRIGGER "visible_child_count/reparent" AFTER UPDATE OF item_parent_id, item_parent_zone_rowid ON client_items BEGIN UPDATE OR IGNORE client_items SET   visible_child_count = visible_child_count - 1  WHERE (old.item_user_visible = 1 OR old.item_scope = 3) AND item_id = old.item_parent_id AND zone_rowid = old.item_parent_zone_rowid AND old.item_filename != ".Trash" ; UPDATE OR IGNORE client_items SET   visible_child_count = visible_child_count + 1  WHERE (old.item_user_visible = 1 OR old.item_scope = 3) AND item_id = new.item_parent_id AND zone_rowid = new.item_parent_zone_rowid AND new.item_filename != ".Trash" ; END
CREATE TRIGGER "visible_child_count/visibility" AFTER UPDATE OF item_user_visible, item_scope ON client_items BEGIN UPDATE OR IGNORE client_items SET   visible_child_count = visible_child_count + (new.item_user_visible | (new.item_scope == 3)) - (old.item_user_visible | (old.item_scope == 3)) WHERE item_id == new.item_parent_id AND zone_rowid = new.item_parent_zone_rowid AND new.item_filename != ".Trash" ; END
ALTER TABLE server_items ADD COLUMN shared_children_count INTEGER
ALTER TABLE server_items ADD COLUMN shared_alias_count INTEGER
ALTER TABLE server_items ADD COLUMN child_count INTEGER
DROP INDEX "client_items/item_type"
CREATE INDEX "client_items/item_type" ON client_items(item_type, zone_rowid)
DELETE FROM client_items AS ci WHERE ci.item_stat_ckinfo IS NULL AND ci.zone_rowid IN (SELECT rowid FROM client_zones AS cz WHERE cz.zone_owner = "__defaultOwner__") AND item_type NOT IN (0, 4, 9, 10) LIMIT %llu
DELETE FROM client_items WHERE item_type = 3 LIMIT %llu
DROP INDEX "client_items/lostzombie_scan_index"
DROP INDEX "client_items/item_tmpbounceno"
DROP INDEX "client_items/item_notifs_rank_children"
UPDATE client_items SET item_localsyncupstate = call_block(%p, item_localsyncupstate) WHERE item_state IN (0, -1) AND item_type NOT IN (2, 7)
UPDATE client_items SET desired_version = NULL, item_localname = NULL, item_tmpbounceno = NULL, item_thumb_greedy = NULL, item_thumb_live_signature = NULL
UPDATE client_items SET item_scope = 2 WHERE item_scope = 1 AND call_block(%p, item_id)
UPDATE client_downloads SET download_error = NULL
UPDATE client_items SET item_type = 1 WHERE item_type = 2 LIMIT %llu
UPDATE client_items SET item_type = 6 WHERE item_type = 7 LIMIT %llu
UPDATE client_items SET item_state = 0 WHERE item_state IN (-1, -2) LIMIT %llu
UPDATE client_items SET item_state = 1 WHERE item_state = -3 LIMIT %llu
UPDATE client_items SET item_processing_stamp = NULL WHERE item_type NOT IN (0, 4, 9, 10) AND item_processing_stamp IS NOT NULL
UPDATE client_unapplied_table SET throttle_state = 1 WHERE throttle_state = 26
SELECT rowid FROM app_libraries WHERE app_library_name IN ("com.apple.Desktop", "com.apple.Documents")
UPDATE client_items SET item_type = 0, item_user_visible = 1, item_processing_stamp = 0 WHERE item_type = 4 AND app_library_rowid = %llu
UPDATE client_items SET app_library_rowid = 1 WHERE app_library_rowid = %llu LIMIT %llu
UPDATE client_downloads SET app_library_rowid = 1 WHERE app_library_rowid = %llu LIMIT %llu
UPDATE client_uploads SET app_library_rowid = 1 WHERE app_library_rowid = %llu LIMIT %llu
UPDATE client_unapplied_table SET app_library_rowid = 1 WHERE app_library_rowid = %llu LIMIT %llu
DELETE from app_libraries WHERE rowid = %llu
DROP TRIGGER IF EXISTS "client_pkg_items/increase_pkg_size"
DROP TRIGGER IF EXISTS "client_pkg_items/update_pkg_size"
DROP TRIGGER IF EXISTS "client_pkg_items/reduce_pkg_size"
 CREATE TABLE client_pkg_upload_items ( item_rowid integer not null, rel_path text not null, item_type integer not null, asset_rank integer not null, quarantine_info blob, file_id integer not null, signature_or_link blob, generation, size integer, mode integer, mtime integer, xattr_signature blob, PRIMARY KEY (item_rowid, rel_path ASC))
SELECT xattrs FROM client_pkg_items WHERE xattrs IS NOT NULL GROUP BY xattrs
CREATE TRIGGER "client_pkg_upload_items/item_delete" AFTER DELETE ON client_items BEGIN DELETE FROM client_pkg_upload_items WHERE item_rowid = old.rowid ; END
CREATE TRIGGER "client_pkg_upload_items/sync_idle_delete" AFTER UPDATE OF item_localsyncupstate, item_state ON client_items BEGIN DELETE FROM client_pkg_upload_items WHERE (new.item_state = 1 OR new.item_localsyncupstate IN (1, 0)) AND item_rowid = new.rowid ; END
CREATE TABLE client_pkg_upload_sizes (item_rowid integer not null primary key, aggregate_size integer not null default 0, largest_file_size integer not null default 0)
CREATE TRIGGER "client_pkg_upload_items/increase_pkg_size" AFTER INSERT ON client_pkg_upload_items BEGIN INSERT OR IGNORE INTO client_pkg_upload_sizes VALUES (new.item_rowid, 0, 0); UPDATE client_pkg_upload_sizes SET aggregate_size = aggregate_size + COALESCE(new.size, 0), largest_file_size = MAX(COALESCE(new.size,0), largest_file_size) WHERE item_rowid = new.item_rowid; END
CREATE TRIGGER "client_pkg_upload_items/update_pkg_size" AFTER UPDATE OF size ON client_pkg_upload_items BEGIN UPDATE client_pkg_upload_sizes SET aggregate_size = aggregate_size - COALESCE(old.size, 0) + COALESCE(new.size, 0), largest_file_size = MAX(COALESCE(new.size,0), largest_file_size) WHERE item_rowid = new.item_rowid; END
CREATE TRIGGER "client_pkg_upload_items/reduce_pkg_size"  BEFORE DELETE ON client_pkg_upload_items BEGIN UPDATE client_pkg_upload_sizes SET aggregate_size = aggregate_size - COALESCE(old.size, 0) WHERE item_rowid = old.item_rowid; END
DROP TABLE client_reader_throttle
DROP TABLE mark_children_lost_progress
DROP TABLE client_pkg_sizes
DELETE FROM client_uploads
DELETE FROM client_sync_up
ALTER TABLE client_items ADD COLUMN item_local_change_count integer
ALTER TABLE client_items ADD COLUMN item_old_version_identifier text
ALTER TABLE client_items ADD COLUMN version_local_change_count integer
ALTER TABLE client_items ADD COLUMN version_old_version_identifier text
CREATE INDEX "client_items/next_propagation" ON client_items(item_processing_stamp) WHERE item_processing_stamp IS NOT NULL
CREATE INDEX "client_items/item_notifs_rank" ON client_items (item_notifs_rank)
SELECT 1 from client_items LIMIT 1
SELECT * from client_state
kBRCFPFSMigrationStateKey
SELECT signature, data FROM server_xattr_blobs
DROP TABLE server_xattr_blobs
SELECT config_plist FROM server_state WHERE config_plist IS NOT NULL
UPDATE server_state SET config_plist = NULL
DROP INDEX "client_unapplied_table/zone_rowid__kind__throttle_state"
DROP INDEX "client_unapplied_table/zone_rowid"
CREATE INDEX "client_unapplied_table/zone_rowid__kind__throttle_state" ON client_unapplied_table (throttle_state, zone_rowid, apply_kind) WHERE throttle_state != 0
DROP INDEX "client_items/shared_item_library"
CREATE INDEX "client_items/shared_item_library" ON client_items(app_library_rowid, zone_rowid) WHERE item_state = 0 AND item_creator_id != 0
CREATE INDEX "client_items/items_needing_sync" ON client_items(item_localsyncupstate, zone_rowid) WHERE item_localsyncupstate = 3 OR item_localsyncupstate = 4
DROP TABLE client_document_access
DELETE FROM client_downloads WHERE download_kind = 1
ALTER TABLE server_items ADD COLUMN quota_used INTEGER
ALTER TABLE server_items ADD COLUMN recursive_child_count INTEGER
DROP TABLE IF EXISTS item_recursive_properties
DROP INDEX IF EXISTS "item_recursive_properties/item_id"
DROP INDEX IF EXISTS "item_recursive_properties/item_parent_id"
DROP TRIGGER IF EXISTS "item_recursive_properties/insertion"
DROP TRIGGER IF EXISTS "item_recursive_properties/deletion"
DROP TRIGGER IF EXISTS"item_recursive_properties/reparent"
DROP TRIGGER IF EXISTS "item_recursive_properties/recursive_update"
DROP TRIGGER IF EXISTS "item_recursive_properties/recursive_delete"
DROP TRIGGER IF EXISTS "item_recursive_properties/itemid"
CREATE TABLE item_recursive_properties (  item_rowid integer not null primary key, item_id blob not null, item_parent_id blob, item_type integer not null, zone_rowid integer not null, item_parent_zone_rowid  integer not null, dir_faults_count integer not null default 0, over_quota_count integer not null default 0, shared_by_me_count integer not null default 0, shared_to_me_count integer not null default 0, uploaded_size integer not null default 0, uploaded_count integer not null default 0, needs_upload_size integer not null default 0, needs_upload_count integer not null default 0, downloaded_size integer not null default 0, downloaded_count integer not null default 0, needs_download_size integer not null default 0, needs_download_count integer not null default 0, dl_unstaged_count integer not null default 0, needs_dl_unstage_count integer not null default 0, synced_up_count integer not null default 0, needs_sync_up_count integer not null default 0)
CREATE UNIQUE INDEX "item_recursive_properties/item_id_zone_rowid"ON item_recursive_properties (item_id, zone_rowid)
CREATE INDEX "item_recursive_properties/item_parent_id_zone_rowid"ON item_recursive_properties (item_parent_id, item_parent_zone_rowid)
INSERT INTO item_recursive_properties (item_rowid, item_id, item_parent_id, item_type, zone_rowid, item_parent_zone_rowid)SELECT rowid, item_id, call_block(%p, item_id, item_filename, item_parent_id), item_type, zone_rowid, item_parent_zone_rowid FROM client_items WHERE item_type IN (0, 9, 10)
CREATE TRIGGER "item_recursive_properties/deletion" AFTER DELETE ON client_items BEGIN DELETE FROM item_recursive_properties WHERE item_rowid == old.rowid ; END
CREATE TRIGGER "item_recursive_properties/reparent" AFTER UPDATE OF item_parent_id, item_parent_zone_rowid ON client_items BEGIN UPDATE OR IGNORE item_recursive_properties SET   item_parent_id = new.item_parent_id,   item_parent_zone_rowid = new.item_parent_zone_rowid WHERE item_rowid == new.rowid AND item_parent_id IS NOT NULL ; END
CREATE TRIGGER "item_recursive_properties/itemid" AFTER UPDATE OF item_id ON client_items BEGIN UPDATE OR IGNORE item_recursive_properties SET   item_id = new.item_id  WHERE item_rowid == new.rowid ; END
CREATE TRIGGER "item_recursive_properties/recursive_update" AFTER UPDATE ON item_recursive_properties BEGIN UPDATE item_recursive_properties SET  dir_faults_count = dir_faults_count + new.dir_faults_count - old.dir_faults_count ,  over_quota_count = over_quota_count + new.over_quota_count - old.over_quota_count ,  shared_by_me_count = shared_by_me_count + new.shared_by_me_count - old.shared_by_me_count ,  shared_to_me_count = shared_to_me_count + new.shared_to_me_count - old.shared_to_me_count ,  needs_upload_size = needs_upload_size + new.needs_upload_size - old.needs_upload_size ,  needs_upload_count = needs_upload_count + new.needs_upload_count - old.needs_upload_count ,  needs_download_size = needs_download_size + new.needs_download_size - old.needs_download_size ,  needs_download_count = needs_download_count + new.needs_download_count - old.needs_download_count ,  needs_dl_unstage_count = needs_dl_unstage_count + new.needs_dl_unstage_count - old.needs_dl_unstage_count ,  needs_sync_up_count = needs_sync_up_count + new.needs_sync_up_count - old.needs_sync_up_count ,  uploaded_size = uploaded_size + MAX((new.uploaded_size - old.uploaded_size), 0) ,  uploaded_count = uploaded_count + MAX((new.uploaded_count - old.uploaded_count), 0) ,  downloaded_size = downloaded_size + MAX((new.downloaded_size - old.downloaded_size), 0) ,  downloaded_count = downloaded_count + MAX((new.downloaded_count - old.downloaded_count), 0) ,  dl_unstaged_count = dl_unstaged_count + MAX((new.dl_unstaged_count - old.dl_unstaged_count), 0) ,  synced_up_count = synced_up_count + MAX((new.synced_up_count - old.synced_up_count), 0)  WHERE item_id == old.item_parent_id AND  zone_rowid == old.item_parent_zone_rowid AND  new.item_parent_id == old.item_parent_id AND  new.item_parent_zone_rowid == old.item_parent_zone_rowid AND  ( new.dir_faults_count != old.dir_faults_count OR  new.over_quota_count != old.over_quota_count OR  new.shared_by_me_count != old.shared_by_me_count OR  new.shared_to_me_count != old.shared_to_me_count OR  new.needs_upload_size != old.needs_upload_size OR  new.needs_download_size != old.needs_download_size OR  new.needs_dl_unstage_count != old.needs_dl_unstage_count OR  new.needs_sync_up_count != old.needs_sync_up_count OR  ( new.downloaded_size != old.downloaded_size AND new.downloaded_size != 0 ) OR  ( new.uploaded_size != old.uploaded_size AND new.uploaded_size != 0 ) OR  ( new.uploaded_size != old.uploaded_size AND new.uploaded_size != 0 ) OR  ( new.dl_unstaged_count != old.dl_unstaged_count AND new.dl_unstaged_count != 0 ) OR  ( new.synced_up_count != old.synced_up_count AND new.synced_up_count != 0 ) ) ; UPDATE item_recursive_properties SET  dir_faults_count = dir_faults_count - old.dir_faults_count ,  over_quota_count = over_quota_count - old.over_quota_count ,  shared_by_me_count = shared_by_me_count - old.shared_by_me_count ,  shared_to_me_count = shared_to_me_count - old.shared_to_me_count ,  needs_upload_size = needs_upload_size - old.needs_upload_size ,  needs_upload_count = needs_upload_count - old.needs_upload_count ,  needs_download_size = needs_download_size - old.needs_download_size ,  needs_download_count = needs_download_count - old.needs_download_count ,  needs_dl_unstage_count = needs_dl_unstage_count - old.needs_dl_unstage_count ,  needs_sync_up_count = needs_sync_up_count - old.needs_sync_up_count  WHERE item_id == old.item_parent_id AND  zone_rowid = old.item_parent_zone_rowid AND  (new.item_parent_id != old.item_parent_id OR new.item_parent_zone_rowid != old.item_parent_zone_rowid) ; UPDATE item_recursive_properties SET  dir_faults_count = dir_faults_count + new.dir_faults_count ,  over_quota_count = over_quota_count + new.over_quota_count ,  shared_by_me_count = shared_by_me_count + new.shared_by_me_count ,  shared_to_me_count = shared_to_me_count + new.shared_to_me_count ,  needs_upload_size = needs_upload_size + new.needs_upload_size ,  needs_upload_count = needs_upload_count + new.needs_upload_count ,  needs_download_size = needs_download_size + new.needs_download_size ,  needs_download_count = needs_download_count + new.needs_download_count ,  needs_dl_unstage_count = needs_dl_unstage_count + new.needs_dl_unstage_count ,  needs_sync_up_count = needs_sync_up_count + new.needs_sync_up_count  WHERE item_id == new.item_parent_id AND  zone_rowid = new.item_parent_zone_rowid AND  (new.item_parent_id != old.item_parent_id OR new.item_parent_zone_rowid != old.item_parent_zone_rowid) ; UPDATE item_recursive_properties SET  dir_faults_count = (SELECT SUM(dir_faults_count) FROM item_recursive_properties AS child  WHERE child.item_parent_id == new.item_id AND child.item_parent_zone_rowid = new.zone_rowid) ,  over_quota_count = (SELECT SUM(over_quota_count) FROM item_recursive_properties AS child  WHERE child.item_parent_id == new.item_id AND child.item_parent_zone_rowid = new.zone_rowid) ,  shared_by_me_count = (SELECT SUM(shared_by_me_count) FROM item_recursive_properties AS child  WHERE child.item_parent_id == new.item_id AND child.item_parent_zone_rowid = new.zone_rowid) ,  shared_to_me_count = (SELECT SUM(shared_to_me_count) FROM item_recursive_properties AS child  WHERE child.item_parent_id == new.item_id AND child.item_parent_zone_rowid = new.zone_rowid) ,  needs_upload_size = (SELECT SUM(needs_upload_size) FROM item_recursive_properties AS child  WHERE child.item_parent_id == new.item_id AND child.item_parent_zone_rowid = new.zone_rowid) ,  needs_upload_count = (SELECT SUM(needs_upload_count) FROM item_recursive_properties AS child  WHERE child.item_parent_id == new.item_id AND child.item_parent_zone_rowid = new.zone_rowid) ,  needs_download_size = (SELECT SUM(needs_download_size) FROM item_recursive_properties AS child  WHERE child.item_parent_id == new.item_id AND child.item_parent_zone_rowid = new.zone_rowid) ,  needs_download_count = (SELECT SUM(needs_download_count) FROM item_recursive_properties AS child  WHERE child.item_parent_id == new.item_id AND child.item_parent_zone_rowid = new.zone_rowid) ,  needs_dl_unstage_count = (SELECT SUM(needs_dl_unstage_count) FROM item_recursive_properties AS child  WHERE child.item_parent_id == new.item_id AND child.item_parent_zone_rowid = new.zone_rowid) ,  needs_sync_up_count = (SELECT SUM(needs_sync_up_count) FROM item_recursive_properties AS child  WHERE child.item_parent_id == new.item_id AND child.item_parent_zone_rowid = new.zone_rowid)  WHERE item_id == new.item_id AND  zone_rowid = new.zone_rowid AND  old.item_id != new.item_id ; UPDATE item_recursive_properties SET  uploaded_size = 0  WHERE item_rowid == old.item_rowid AND (needs_upload_size == 0 AND needs_sync_up_count == 0) AND uploaded_size != 0; UPDATE item_recursive_properties SET  uploaded_count = 0  WHERE item_rowid == old.item_rowid AND (needs_upload_count == 0 AND needs_sync_up_count == 0) AND uploaded_count != 0; UPDATE item_recursive_properties SET  downloaded_size = 0  WHERE item_rowid == old.item_rowid AND (needs_download_size == 0 AND needs_dl_unstage_count == 0) AND downloaded_size != 0; UPDATE item_recursive_properties SET  downloaded_count = 0  WHERE item_rowid == old.item_rowid AND (needs_download_count == 0 AND needs_dl_unstage_count == 0) AND downloaded_count != 0; UPDATE item_recursive_properties SET  dl_unstaged_count = 0  WHERE item_rowid == old.item_rowid AND (needs_download_count == 0 AND needs_dl_unstage_count == 0) AND dl_unstaged_count != 0; UPDATE item_recursive_properties SET  synced_up_count = 0  WHERE item_rowid == old.item_rowid AND (needs_upload_count == 0 AND needs_sync_up_count == 0) AND synced_up_count != 0;DELETE FROM item_recursive_properties WHERE  item_rowid == old.item_rowid AND uploaded_size == 0 AND needs_upload_size == 0 AND  uploaded_count == 0 AND needs_upload_count == 0 AND  downloaded_size == 0 AND needs_download_size == 0 AND  downloaded_count == 0 AND needs_download_count == 0 AND  synced_up_count  == 0 AND needs_sync_up_count == 0 AND  dl_unstaged_count == 0 AND needs_dl_unstage_count == 0 AND  over_quota_count == 0 AND shared_by_me_count == 0 AND  shared_to_me_count  == 0 AND item_type NOT IN (0, 9, 10); END
CREATE TRIGGER "item_recursive_properties/recursive_delete"AFTER DELETE ON item_recursive_properties BEGIN UPDATE item_recursive_properties SET  dir_faults_count = dir_faults_count - old.dir_faults_count ,  over_quota_count = over_quota_count - old.over_quota_count ,  shared_by_me_count = shared_by_me_count - old.shared_by_me_count ,  shared_to_me_count = shared_to_me_count - old.shared_to_me_count ,  needs_upload_size = needs_upload_size - old.needs_upload_size ,  needs_upload_count = needs_upload_count - old.needs_upload_count ,  needs_download_size = needs_download_size - old.needs_download_size ,  needs_download_count = needs_download_count - old.needs_download_count ,  needs_dl_unstage_count = needs_dl_unstage_count - old.needs_dl_unstage_count ,  needs_sync_up_count = needs_sync_up_count - old.needs_sync_up_count  WHERE item_id == old.item_parent_id AND  zone_rowid = old.item_parent_zone_rowid AND ( 0 != old.dir_faults_count OR  0 != old.over_quota_count OR  0 != old.shared_by_me_count OR  0 != old.shared_to_me_count OR  0 != old.needs_upload_size OR  0 != old.needs_upload_count OR  0 != old.needs_download_size OR  0 != old.needs_download_count OR  0 != old.needs_dl_unstage_count OR  0 != old.needs_sync_up_count ); END
INSERT OR IGNORE INTO item_recursive_properties (item_rowid, item_id, item_parent_id, item_type, zone_rowid, item_parent_zone_rowid) SELECT rowid, item_id, item_parent_id, call_block(%p, item_type), zone_rowid, item_parent_zone_rowid FROM client_items WHERE (item_sharing_options & 4) != 0
UPDATE item_recursive_properties SET dir_faults_count = dir_faults_count + 1 WHERE item_type IN (9, 10)
UPDATE item_recursive_properties SET shared_by_me_count = 1 WHERE item_rowid IN (SELECT rowid FROM client_items WHERE (item_sharing_options & 4) != 0 AND zone_rowid = item_parent_zone_rowid)
UPDATE item_recursive_properties SET shared_to_me_count = 1 WHERE item_rowid IN (SELECT rowid FROM client_items WHERE (item_sharing_options & 4) != 0 AND zone_rowid != item_parent_zone_rowid)
CREATE INDEX "client_items/lost_file_id" ON client_items(item_localsyncupstate) WHERE item_localsyncupstate = 8
DROP INDEX "client_sync_up/zone_rowid"
DROP INDEX "client_uploads/zone_index"
DROP INDEX "client_downloads/zone_index"
DROP INDEX "client_sync_up/sync_state_index"
DROP INDEX "client_sync_up/throttle_id"
CREATE INDEX "client_items/item_filename_path_nocase" ON client_items (item_parent_zone_rowid, item_parent_id, item_filename COLLATE NOCASE) WHERE item_bouncedname IS NULL
CREATE INDEX "client_items/item_parent_id__item_bouncedname_nocase" ON client_items (item_parent_zone_rowid, item_parent_id, item_bouncedname COLLATE NOCASE) WHERE item_bouncedname IS NOT NULL
CREATE INDEX "client_sync_up/sync_state_index" ON client_sync_up (zone_rowid, throttle_state) WHERE throttle_state != 0
CREATE INDEX "client_sync_up/throttle_id" ON client_sync_up(throttle_id) WHERE throttle_state != 0
CREATE INDEX "server_items/item_parent_id__item_type" ON server_items(zone_rowid, item_type, item_parent_id)
CREATE TRIGGER "server_items/sharing_state_propagation" AFTER UPDATE OF item_sharing_options ON server_items BEGIN UPDATE server_items SET item_sharing_options = (new.item_sharing_options & (~4)) WHERE new.item_sharing_options != old.item_sharing_options AND new.item_type IN (0, 9, 10) AND new.item_state = 0 AND item_parent_id = new.item_id AND zone_rowid = new.zone_rowid AND (item_sharing_options & 4) == 0 AND item_sharing_options != (new.item_sharing_options & (~4)); END
CREATE TRIGGER "server_items/learn_parent_sharing_state" AFTER UPDATE OF item_parent_id ON server_items BEGIN UPDATE server_items SET item_sharing_options = IFNULL((SELECT item_sharing_options & (~4) FROM server_items as pi WHERE pi.item_id = new.item_parent_id AND pi.zone_rowid = new.zone_rowid), (item_sharing_options & (~124))) WHERE new.item_parent_id != old.item_parent_id AND item_id = new.item_id AND zone_rowid = new.zone_rowid AND item_state = 0 AND (item_sharing_options & 4) == 0; END
CREATE TRIGGER "server_items/sharing_state_insertion" AFTER INSERT ON server_items BEGIN UPDATE server_items SET item_sharing_options = IFNULL((SELECT item_sharing_options & (~4) FROM server_items as pi WHERE pi.item_id = new.item_parent_id AND pi.zone_rowid = new.zone_rowid), (item_sharing_options & (~124))) WHERE (new.item_sharing_options & 4) == 0 AND item_id = new.item_id AND zone_rowid = new.zone_rowid; UPDATE server_items SET item_sharing_options = (new.item_sharing_options & (~4)) WHERE (new.item_sharing_options & 4) != 0 AND new.item_type IN (0, 9, 10) AND new.item_state = 0 AND item_parent_id = new.item_id AND zone_rowid = new.zone_rowid AND (item_sharing_options & 4) == 0 AND item_sharing_options != (new.item_sharing_options & (~4)); END
CREATE TRIGGER "server_items/orphan_reschedule" AFTER INSERT ON server_items BEGIN UPDATE server_items SET item_depth = 0 WHERE new.item_type IN (0, 9, 10)   AND item_parent_id = new.item_id   AND zone_rowid = new.zone_rowid   AND item_depth = -2   AND item_rank IS NULL; END
CREATE TRIGGER "server_items/orphan_reschedule_propagation" AFTER UPDATE OF item_depth ON server_items BEGIN UPDATE server_items SET item_depth = 0 WHERE new.item_depth = 0 AND old.item_depth = -2   AND new.item_type IN (0, 9, 10)   AND item_parent_id = new.item_id   AND zone_rowid = new.zone_rowid   AND item_depth = -2   AND item_rank IS NULL; END
DROP TRIGGER insert_version_sum_size
DROP TRIGGER update_version_sum_size
DROP TRIGGER delete_version_sum_size
DROP TABLE aggregates
DROP INDEX IF EXISTS "client_downloads/zone_rowid__throttle_state"
DROP INDEX IF EXISTS "client_uploads/zone_rowid__throttle_state"
DROP INDEX IF EXISTS "client_uploads/group_by"
DROP INDEX IF EXISTS "client_downloads/group_by"
DROP INDEX "client_items/working_set_index"
SELECT 1 FROM client_items WHERE item_state in (0, -1)  AND NOT EXISTS (SELECT 1 FROM app_libraries WHERE client_items.app_library_rowid = app_libraries.rowid)
old-db
UPDATE client_items SET item_scope = 2 WHERE zone_rowid = %@ AND item_scope = 0 AND item_state != -2
UPDATE client_items SET item_scope = 2 WHERE zone_rowid = %@ AND item_scope = 0 AND migration_is_parented_or_equal_to_old_doc_id(%p, item_parent_id) AND item_state != -2
UPDATE client_items SET item_scope = 1 WHERE zone_rowid = %@ AND item_scope = 0 AND NOT migration_is_parented_or_equal_to_old_doc_id(%p, item_parent_id) AND item_state != -2
UPDATE server_items SET item_filename = call_block(%@, item_filename) WHERE item_filename != call_block(%@, item_filename)
UPDATE server_items SET item_origname = call_block(%@, item_origname) WHERE item_origname IS NOT NULL AND item_origname != call_block(%@, item_origname)
UPDATE server_items SET version_name = call_block(%@, version_name) WHERE version_name IS NOT NULL AND version_name != call_block(%@, version_name)
UPDATE client_items SET item_filename = call_block(%@, item_filename) WHERE item_filename != call_block(%@, item_filename)
UPDATE client_items SET version_name = call_block(%@, version_name) WHERE version_name IS NOT NULL AND version_name != call_block(%@, version_name)
UPDATE client_items SET item_localname = call_block(%@, item_localname) WHERE item_localname IS NOT NULL AND item_localname != call_block(%@, item_localname)
UPDATE client_items SET item_bouncedname = call_block(%@, item_bouncedname) WHERE item_bouncedname IS NOT NULL AND item_bouncedname != call_block(%@, item_bouncedname)
UPDATE client_document_access     SET evictable = call_block(%@, access_time, (SELECT version_mtime FROM client_items AS ci WHERE ci.rowid = item_rowid))  WHERE evictable > 0
UPDATE client_uploads SET throttle_state = 1 WHERE throttle_id in (SELECT throttle_id FROM client_items, client_uploads WHERE client_items.rowid = client_uploads.throttle_id AND item_localsyncupstate = 3)
INSERT INTO client_uploads (throttle_id, zone_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, item_id, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, upload_error, upload_priority, upload_request_stamp, app_library_rowid) SELECT client_items.rowid, zone_rowid, 1, 0, 0, 0, 0, item_id, "_prepare", version_size + version_thumb_size, NULL, NULL, NULL, NULL, -1, 0, app_library_rowid FROM client_items WHERE item_type IN (1, 6) AND item_localsyncupstate = 3 AND rowid NOT IN (SELECT throttle_id from client_uploads)
UPDATE client_downloads SET throttle_state = 1 WHERE throttle_id in ( SELECT throttle_id FROM client_items, client_downloads WHERE client_items.rowid = client_downloads.throttle_id AND item_type IN (1, 6) AND desired_version is not NULL AND call_block(%@, desired_version))
INSERT INTO client_downloads (throttle_id, zone_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, item_id, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, download_kind, download_etag, download_priority, download_request_stamp, download_error, unit_count_completed, app_library_rowid) SELECT client_items.rowid, client_items.zone_rowid, 1, 0, 0, 0, 0, item_id, call_block(%@, app_library_owner, app_library_name), call_block(%@, desired_version), NULL, NULL, NULL, 0, call_block(%@, desired_version), -1, 0, NULL, 0, app_library_rowid FROM client_items, app_libraries, client_zones WHERE client_items.app_library_rowid = app_libraries.rowid AND app_libraries.zone_rowid = client_zones.rowid AND item_type IN (1, 6) AND desired_version is not NULL AND client_items.rowid NOT IN (SELECT throttle_id from client_downloads) AND call_block(%@, desired_version)
INSERT OR REPLACE INTO client_uploads  (throttle_id, zone_rowid, app_library_rowid, transfer_size, throttle_state, transfer_queue) SELECT rowid, zone_rowid, app_library_rowid, version_size + version_thumb_size, 1, %s FROM client_items WHERE item_localsyncupstate == 3 AND rowid NOT IN (SELECT throttle_id FROM client_uploads WHERE throttle_state != 0)
_prepare
com.apple.brc.notififcation-mgr
-[BRCClientZone init]
zone-tracker
client-zone/zone-creation
osNameRequiredToSync
syncDownGroup
Creating
Loading
sync
crash-recovery
ipc-com.apple.finder
CKErrorInternalContainerReset
CKErrorUserDeleteZone
CKErrorZoneNotFound
CKErrorSharedZoneNotFound
zone became healthy
start-scan
testing
v32@?0Q8Q16@"NSError"24
<%@[%@] %@ {client:%@ server:%@ sync:%@ %@ rid:%llu}>
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE item_parent_id = %@ AND item_filename = %@ AND +zone_rowid = %@
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_scope, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_local_change_count, version_old_version_identifier, item_live_conflict_loser_etags, item_file_id, item_generation FROM client_items WHERE (item_parent_id = %@ AND item_filename = %@ AND item_parent_zone_rowid = %@        AND item_bouncedname IS NULL)   OR  (item_parent_id = %@ AND item_bouncedname = %@ AND item_parent_zone_rowid = %@)
item not found
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_scope, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_local_change_count, version_old_version_identifier, item_live_conflict_loser_etags, item_file_id, item_generation FROM client_items WHERE (item_parent_id = %@ AND item_filename = %@ COLLATE NOCASE AND item_parent_zone_rowid = %@        AND item_bouncedname IS NULL)   OR  (item_parent_id = %@ AND item_bouncedname = %@ COLLATE NOCASE AND item_parent_zone_rowid = %@)
SELECT 1 FROM client_items WHERE (item_parent_id = %@ AND item_filename = %@ AND item_parent_zone_rowid = %@ AND item_bouncedname IS NULL) OR (item_parent_id = %@ AND item_bouncedname = %@ AND item_parent_zone_rowid = %@) LIMIT 1
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_scope, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_local_change_count, version_old_version_identifier, item_live_conflict_loser_etags, item_file_id, item_generation FROM client_items WHERE zone_rowid = %@
SELECT 1 FROM client_items AS li INNER JOIN client_sync_up AS su ON su.throttle_id = li.rowid WHERE su.zone_rowid = %@   AND (su.in_flight_diffs BETWEEN -9223372036854775808 AND 9223372036854775807)   AND su.throttle_state != 0 LIMIT 1
SELECT 1 FROM client_items WHERE zone_rowid = %@ LIMIT 1
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_scope, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_local_change_count, version_old_version_identifier, item_live_conflict_loser_etags, item_file_id, item_generation FROM client_items WHERE zone_rowid = %@    AND item_type IN (1, 6)    AND (item_localsyncupstate = 3 OR         item_localsyncupstate = 4)   AND item_scope = 2
v32@?0@"BRCClientZone"8@"NSArray"16@"NSError"24
SELECT item_stat_ckinfo, item_local_change_count FROM client_items WHERE zone_rowid = %@ AND item_id = %@
UPDATE client_items SET item_stat_ckinfo = %@, item_local_change_count = 0, item_old_version_identifier = %@  WHERE zone_rowid = %@ AND item_id = %@
SELECT version_ckinfo, version_local_change_count FROM client_items WHERE zone_rowid = %@ AND item_id = %@
UPDATE client_items SET version_ckinfo = %@, version_device = %@,  version_local_change_count = 0, version_old_version_identifier = %@ WHERE zone_rowid = %@ AND item_id = %@
UPDATE client_items SET version_ckinfo = %@, version_local_change_count = 0, version_old_version_identifier = %@ WHERE zone_rowid = %@ AND item_id = %@
UPDATE client_items SET item_side_car_ckinfo = %@ WHERE zone_rowid = %@ AND item_id = %@
(successful)
v32@?0@"CKRecordID"8@"NSError"16^B24
defaultSyncThrottle
v32@?0@"BRCItemID"8@"NSMutableArray"16^B24
<rdar://problem/26073809> _fixupMissingCrossMovedItems causes slow SQL assertions
UPDATE client_items SET item_localsyncupstate = 1 WHERE zone_rowid = %@   AND item_localsyncupstate = 0   AND (item_local_diffs & 0x2000000000000000) != 0   AND NOT EXISTS (SELECT * FROM server_items WHERE server_items.item_id = client_items.item_id AND zone_rowid = %@)
q24@?0^{_BRCOperation=#@[16C]}8^{_BRCOperation=#@[16C]}16
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_scope, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_local_change_count, version_old_version_identifier, item_live_conflict_loser_etags, item_file_id, item_generation FROM client_items WHERE zone_rowid = %@ AND item_type in (1, 6)
UPDATE client_uploads SET zone_rowid = %@ WHERE throttle_id = %lld
UPDATE client_downloads SET zone_rowid = %@ WHERE throttle_id = %lld
DELETE FROM client_unapplied_table WHERE zone_rowid = %@ AND throttle_state != 0 LIMIT %llu
DELETE FROM client_unapplied_table WHERE zone_rowid = %@ AND throttle_state = 0 LIMIT %llu
UPDATE client_sync_up SET zone_rowid = %@ WHERE zone_rowid = %@ LIMIT %llu
DELETE FROM client_items WHERE zone_rowid = %@ AND item_type = 3
UPDATE client_items SET zone_rowid = %@,   item_stat_ckinfo = call_block(%p, item_stat_ckinfo),   version_ckinfo   = call_block(%p, version_ckinfo),   item_local_diffs = (item_local_diffs | %lld)  WHERE zone_rowid = %@ LIMIT %llu
UPDATE client_items SET item_parent_zone_rowid = %@ WHERE item_parent_zone_rowid = %@ LIMIT %llu
non-
SELECT item_type FROM client_items WHERE item_id = %@ AND zone_rowid = %@
Client Truth Unclean Items:
--------------------------
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_scope, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_local_change_count, version_old_version_identifier, item_live_conflict_loser_etags, item_file_id, item_generation     FROM client_items    WHERE item_parent_id = %@ ORDER BY item_filename
zone:%@ 
 upload{%@}
 rejected{%@}
 downloader{%@}
 sync-up{%@}
client items
scheduling sync contexts
========================
+ %@
-[BRCClientZone dumpTablesToContext:error:]
implement this in subclass
-[BRCClientZone _resetItemsTable]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iCloudDrive_Sim/iCloudDrive-29/core/items/BRCClientZone.m
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_scope, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_local_change_count, version_old_version_identifier, item_live_conflict_loser_etags, item_file_id, item_generation FROM client_items WHERE item_parent_zone_rowid = %@ AND item_parent_zone_rowid != zone_rowid
SELECT ci.rowid, ci.zone_rowid, ci.item_id, ci.item_creator_id, ci.item_sharing_options, ci.item_side_car_ckinfo, ci.item_parent_zone_rowid, ci.item_localsyncupstate, ci.item_local_diffs, ci.item_notifs_rank, ci.app_library_rowid, ci.item_min_supported_os_rowid, ci.item_scope, ci.item_user_visible, ci.item_stat_ckinfo, ci.item_state, ci.item_type, ci.item_mode, ci.item_birthtime, ci.item_lastusedtime, ci.item_favoriterank,ci.item_parent_id, ci.item_filename, ci.item_hidden_ext, ci.item_finder_tags, ci.item_xattr_signature, ci.item_trash_put_back_path, ci.item_trash_put_back_parent_id, ci.item_alias_target, ci.item_creator, ci.item_processing_stamp, ci.item_staged_file_id, ci.item_staged_generation, ci.item_bouncedname, ci.item_local_change_count, ci.item_old_version_identifier, ci.version_name, ci.version_ckinfo, ci.version_mtime, ci.version_size, ci.version_thumb_size, ci.version_thumb_signature, ci.version_content_signature, ci.version_xattr_signature, ci.version_edited_since_shared, ci.version_device, ci.version_conflict_loser_etags, ci.version_quarantine_info, ci.version_uploaded_assets, ci.version_upload_error, ci.version_local_change_count, ci.version_old_version_identifier, ci.item_live_conflict_loser_etags, ci.item_file_id, ci.item_generation FROM client_items AS ci INNER JOIN client_sync_up AS su ON ci.rowid = su.throttle_id WHERE su.throttle_state = 52 AND su.throttle_state != 0 AND ci.item_parent_zone_rowid = %@ AND ci.item_parent_id = %@
SELECT item_sharing_etag FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT item_stat_ckinfo FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE item_rank = %lld AND zone_rowid = %@
SELECT item_rank FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE rowid = %lld
SELECT child_count FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT visible_child_count FROM client_items WHERE item_id = %@ AND zone_rowid = %@
SELECT quota_used FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_scope, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_local_change_count, version_old_version_identifier, item_live_conflict_loser_etags, item_file_id, item_generation FROM client_items WHERE rowid = %lld AND zone_rowid = %@
SELECT item_type FROM client_items WHERE item_id = %@ AND zone_rowid = %@ LIMIT 1
must implement in subclass
-[BRCClientZone validateItemsLoggingToFile:db:]
-[BRCClientZone validateStructureLoggingToFile:db:]
%@{needs:(count:%lld, size:%@) done:(count:%lld, size:%@)} 
%@{needs:%lld done:%lld} 
SELECT dir_faults_count, uploaded_size,needs_upload_size, uploaded_count,needs_upload_count, downloaded_size,needs_download_size, downloaded_count,needs_download_count, dl_unstaged_count,needs_dl_unstage_count, synced_up_count,needs_sync_up_count, over_quota_count, shared_by_me_count, shared_to_me_count FROM item_recursive_properties  WHERE item_rowid = %llu
dir-faults:%lld 
download
unstage
sync-up
quota:%lld 
shared-by-me:%lld 
shared-to-me:%lld 
-[BRCClientZone _dumpRecursivePropertiesOfItemByRowID:context:depth:]
pos == ITEM_RECURSIVE_PROPERTIES_FIELDS_COUNT
%*s> %@
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_scope, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_local_change_count, version_old_version_identifier, item_live_conflict_loser_etags, item_file_id, item_generation     FROM client_items    WHERE item_parent_id = %@ AND item_parent_zone_rowid = %@
%*s%@%@
%*s>%@
B28@?0@"BRCItemGlobalID"8i16^@20
SELECT COUNT(*) FROM client_items WHERE zone_rowid = %@
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_scope, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_local_change_count, version_old_version_identifier, item_live_conflict_loser_etags, item_file_id, item_generation FROM client_items WHERE zone_rowid = %@ AND NOT indexset_contains(%p, rowid)
pending activity %@
(greedy)
================
+ downloads:%@
+ uploads:  %@
[r:%@]: %@
v32@?0@"NSNumber"8@"NSOperation"16^B24
tasks waiting on upload completion
+ apply:    %@
+ list:
v32@?0@"BRCItemID"8@"BRCListDirectoryContentsOperation"16^B24
+ rec-list:
v32@?0@"BRCItemID"8@"BRCRecursiveListDirectoryContentsOperation"16^B24
+ fetch-parent:
v32@?0@"BRCItemID"8@"BRCFetchParentChainOperation"16^B24
+ fetch-alias:
v32@?0@"BRCItemGlobalID"8@"BRCFetchShareAliasOperation"16^B24
+ fetch-recents:
because of item 
for budget 
 [sync-up throttled %@(next-try:in %.01fs)]
 [sync-up waiting to be scheduled]
 [sync-up running]
 [sync-up waiting for sync down]
 [sync-down throttled (next-try:in %.01fs)]
 [sync-down waiting to be scheduled]
 [scheduling: %@]
+ sync:      %@
  up:        %@
  up-budget: %@
  up-error:  %@
  dn-error   %@
  operation: %@
+ migration: %@
X-APPLE-BR-FAULT-INJECTION
record,%@,NeedsOSUpgrade,%@
zone,,NeedsOSUpgrade,%@
 WITH RECURSIVE item_parents (item_id, item_sharing_options, item_parent_id) AS (          SELECT item_id, item_sharing_options, item_parent_id FROM server_items           WHERE item_id = %@ AND zone_rowid = %@       UNION ALL          SELECT si.item_id, si.item_sharing_options, si.item_parent_id FROM server_items AS si     INNER JOIN item_parents AS p WHERE si.zone_rowid = %@ AND p.item_parent_id = si.item_id          LIMIT %u )        SELECT item_id FROM item_parents WHERE (item_sharing_options & 4) != 0
 WITH RECURSIVE item_parents (item_id, item_sharing_options, item_parent_id) AS (          SELECT item_id, item_sharing_options, item_parent_id FROM client_items           WHERE item_id = %@ AND zone_rowid = %@       UNION ALL          SELECT li.item_id, li.item_sharing_options, li.item_parent_id FROM client_items AS li     INNER JOIN item_parents AS p WHERE li.zone_rowid = %@ AND p.item_parent_id = li.item_id          LIMIT %u )        SELECT item_id FROM item_parents WHERE (item_sharing_options & 4) != 0
 WITH RECURSIVE item_parents (item_id, zone_rowid, height) AS (     SELECT item_parent_id, zone_rowid, 0 FROM server_items      WHERE item_id = %@ AND zone_rowid = %@  UNION ALL     SELECT si.item_parent_id, si.zone_rowid, p.height + 1 FROM server_items AS si  INNER JOIN item_parents AS p USING (item_id, zone_rowid)      LIMIT %u ) SELECT ip.item_id, ip.zone_rowid FROM item_parents AS ip WHERE NOT EXISTS (SELECT 1 FROM client_items AS ci WHERE ip.item_id = ci.item_id   AND ip.zone_rowid = ci.zone_rowid) AND NOT item_id_is_root(ip.item_id) ORDER BY ip.height DESC
lastAttemptedSyncDownDate
T@"NSDate",&,N,V_lastAttemptedSyncDownDate
T@"<BRCClientZoneDelegate>",&,N,V_delegate
rootItemID
T@"brc_task_tracker",R,N,V_taskTracker
T@"NSString",R,N,V_osNameRequiredToSync
activated
TB,R,N,V_activated
currentRequestID
TQ,R,N,V_requestID
syncState
TI,R
syncThrottles
T@"NSArray",R,N,V_syncThrottles
syncDeadlineSource
T@"BRCDeadlineSource",R,N,V_syncDeadlineSource
hasHighPriorityWatchers
lastInsertedRank
Tq,R,N,V_lastInsertedRank
_t_osNamesByItemIDBlockedForSyncUp
T@"NSMutableDictionary",R,N,V_t_osNamesByItemIDBlockedForSyncUp
_t_syncBlockedUntilOSName
T@"NSString",R,N,V_t_syncBlockedUntilOSName
_t_syncDownBlocked
TB,R,N,V_t_syncDownBlocked
_t_syncUpBlocked
TB,R,N,V_t_syncUpBlocked
needs-sync
is-resetting
has-broken-structure
blocked-app-uninstalled
needs-upgrade
wants-data-unlinked
;%llu
Implement %@ in a subclass.
+[BRCPersistedState loadFromClientStateInSession:options:]
assertionQueue
T@"NSObject<OS_dispatch_queue>",W,N,V_assertionQueue
value
-[BRFieldXattr writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iCloudDrive_Sim/iCloudDrive-29/core/items/BRFieldXattr.m
nil != self->_name
nil != self->_value
T@"NSString",&,N,V_name
T@"NSData",&,N,V_value
file-enumerator
v32@?0@"NSArray<NSFileProviderItem>"8Q16@"NSError"24
brfileenumerator
0123456789abcdef
share/accept
v32@?0@"CKShareMetadata"8@"CKShare"16@"NSError"24
acceptShareCompletionBlock
T@?,C,N,V_acceptShareCompletionBlock
problemReport
zoneHealthState
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE item_alias_target = %@ AND item_type = 3 AND zone_rowid = %@
+ delete-content: %@
     (last-error: %@)
+ process-removal: %@
itemID %s %s
SQL error: %s
client truth structure validation (%s)
=================================
DROP TABLE IF EXISTS items_checks
CREATE TABLE items_checks (item_id blob PRIMARY KEY, depth integer not null)
CREATE INDEX items_checks__depth__idx ON items_checks (depth)
INSERT INTO items_checks (item_id, depth) VALUES (%@, 0)
INSERT INTO items_checks    SELECT c.item_id, %lld      FROM items_checks AS p INNER JOIN client_items AS c ON (p.item_id = c.item_parent_id)     WHERE zone_rowid = %@ AND p.depth = %lld
SELECT item_id FROM client_items WHERE zone_rowid = %@   AND item_id NOT IN(SELECT item_id FROM items_checks)
is an orphan or part of a cycle
SELECT c.item_id      FROM client_items AS c INNER JOIN client_items AS p ON (c.item_parent_id = p.item_id)     WHERE c.item_state != 1 AND p.item_state = 1       AND c.zone_rowid = %@ AND p.zone_rowid = %@
is a live item parented to a tombstone
SELECT c.item_id      FROM client_items AS c INNER JOIN client_items AS p ON (c.item_parent_id = p.item_id)     WHERE p.item_type IN (1, 8, 5, 6)       AND c.zone_rowid = %@ AND p.zone_rowid = %@
is parented to a document
SELECT o.item_id       FROM client_items AS o  WHERE zone_rowid = %@ AND EXISTS ( SELECT 1 FROM client_items AS n WHERE  (  (    n.item_parent_id = o.item_parent_id      AND item_filename = IFNULL(o.item_bouncedname, o.item_filename)      AND +item_bouncedname IS NULL)  OR (    n.item_parent_id = o.item_parent_id      AND item_bouncedname = IFNULL(o.item_bouncedname, o.item_filename))  )  AND +n.item_id != o.item_id  AND n.zone_rowid = %@ LIMIT 1)
local items checks (%s)
===================
TB,R,D,N
isDocumentScopePublic
privateServerZone
T@"BRCPrivateServerZone",R,N
hasDefaultAppLibrary
defaultAppLibrary
T@"BRCAppLibrary",R,N,V_defaultAppLibrary
appLibraries
T@"NSSet",R,N,V_appLibraries
zoneHealthNeedsSyncUp
T@"BRCServerZoneHealthState",R,N,V_zoneHealthState
itemIDsBlockedFromSyncForCZMProcessing
T@"NSSet",R,N,V_itemIDsBlockedFromSyncForCZMProcessing
GLOBAL_PROGRESS_ICLOUD_DRIVE
GLOBAL_PROGRESS_UPLOADING_CAPITALIZE_DESCRIPTION
GLOBAL_PROGRESS_UPLOADS_WAITING_DESCRIPTION
GLOBAL_PROGRESS_UPLOADS_WAITING
GLOBAL_PROGRESS_UPLOADS_PAUSED_FOR_A_DAY
GLOBAL_PROGRESS_DOWNLOADING_CAPITALIZE_DESCRIPTION
GLOBAL_PROGRESS_DOWNLOADS_WAITING_DESCRIPTION
GLOBAL_PROGRESS_DOWNLOADS_WAITING
GLOBAL_PROGRESS_ADDITIONAL_DESCRIPTION
com.apple.bird.global-progress
com.apple.bird.global-progress.pacer
global progress {%@ d:'%@%@'}
 (%@)
global aggregated properties: {%@}
global progress {none}
upload %@
upload {none}
download %@
download {none}
app libraries progress (%lu): {%@}
app libraries aggregated properties (%lu): {%@}
T@"BRCAccountSession",R,W,N,V_session
localizedDescription
localizedAdditionalDescription
uploadingCUC
uploadingTUC
uploadingBTC
uploadingBCC
downloadingCUC
downloadingTUC
downloadingBTC
downloadingBCC
(dead in server truth)
pcs chained 
half chained 
T@"BRCSyncUpOperation",&,N,V_op
defaults
T@"BRCUserDefaults",&,N,V_defaults
clientRanks
nextNotifRank:%llu nextPackageItemRank:%llu
nextItemRowID
nextNotifRank
nextPackageItemRank
T@"BRCItemID",&,D,N
metrics
pcsChainState
item %s is a directory with a version
rk:%lld 
pcs:c 
pcs:u 
pcs:s 
pcs:h 
ppm:%@ 
st{%@}
 alias-st{%@}
 sm{%@}
 target:%@
isSharedItem
asSharedItem
T@"BRCSharedServerItem",R,N
rank
Tq,R,N,V_rank
originalName
T@"NSString",R,N,V_originalName
T@"BRCServerStatInfo",R,N,V_st
latestVersion
T@"BRCVersion",R,N,V_latestVersion
serverMetrics
T@"BRCServerMetrics",R,N,V_serverMetrics
symlinkTarget
T@"NSString",R,N,V_symlinkTarget
directoryMtime
Tq,R,N,V_directoryMtime
[%llu]
{%llu}
invalid library rowid
+[BRCItemID documentsItemIDWithAppLibraryRowID:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iCloudDrive_Sim/iCloudDrive-29/core/items/BRCItemID.m
-[BRCItemID _initAsLibraryRootWithAppLibraryRowID:]
can't initialize shared zone root with invalid zone rowid %@
-[BRCItemID _initAsZoneRootWithZoneRowID:]
can't initialize document with invalid library rowid %@
-[BRCItemID initAsDocumentsWithAppLibraryRowID:]
root_object
client_items
server_zones
client_zones
SELECT rowid FROM %@ WHERE zone_owner != %@
UPDATE %@ SET item_id = call_block(%@, item_id), item_parent_id = %@ WHERE zone_rowid = %@
UPDATE %@ SET item_id = call_block(%@, item_id, zone_rowid) WHERE item_type = 3
UPDATE %@ SET item_parent_id = call_block(%@, zone_rowid) WHERE item_parent_id = "root"
UPDATE %@ SET item_parent_id = call_block(%@, zone_rowid) WHERE item_parent_id = "documents"
UPDATE %@ SET item_id = call_block(%@, zone_rowid) WHERE item_id = "documents"
UPDATE client_unapplied_table SET item_id = call_block(%@, zone_rowid) WHERE item_id = "documents"
UPDATE %@ SET item_id = call_block(%@, item_id) WHERE item_type = 3
UPDATE %@ SET item_id = call_block(%@, item_id), item_parent_id = call_block(%@, item_parent_id) WHERE zone_rowid = %@
isNonDesktopRoot
isSharedZoneRoot
itemIDString
debugItemIDString
UTF8String
Tr*,R,N
appLibraryRowID
T@"BRCALRowID",R,N
sharedZoneRowID
T@"BRCZoneRowID",R,N
unkown-token-version:%d (%@)
current
<%@,%@>
beginning
unkown-token-size:%lu (%@)
-[BRCPackageManifestReader init]
itemClass
T#,N
unreachable: No reader to stage package at %s
unreachable: Package has been corrupted on the serverAsking for asset index out of bounds %lu vs %lu in package: %@
unreachable: Package has been corrupted in the cloudAsking for asset index out of bounds %lu vs %lu in package: %@
unreachable: xattr index is out of bounds %ld of total %ld
unreachable: Can't find xattr at index %ld
Can't load xattr
unknown error
T@"NSError",R,N,V_error
T@"NSURL",R,N,V_url
version: 1
NULL path for item: %@
-[BRCPackageChecksummer addItem:error:]
NULL path for item symlink: %@
versionIdentifier
-[BRFieldStructureSignature writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iCloudDrive_Sim/iCloudDrive-29/core/items/BRFieldStructureSignature.m
nil != self->_versionIdentifier
T@"NSString",&,N,V_versionIdentifier
hasOldVersionIdentifier
com.apple.bird.recursive-transfer-progress
completedUnitCount
@"NSString"16@?0@"NSString"8
q24@?0@8@16
-[BRCAccountSession(BRCContainerFindByName) clientZonesMatchingSearchString:error:]
-[BRCAccountSession(BRCContainerFindByName) singleClientZoneMatchingSearchString:error:]
Too many containers matching '%@': {%@}
-[BRCAccountSession(BRCContainerFindByName) appLibrariesMatchingSearchString:error:]
-[BRCAccountSession(BRCContainerFindByName) singleAppLibraryMatchingSearchString:error:]
document-shares
folder-shares
migration-query
-[BRCMigrationQueryOperation _updatedContinuationCursor:error:]_block_invoke
v16@?0@"CKQueryCursor"8
%K != NULL
v24@?0@"CKOperation"8@"CKRecord"16
v24@?0^{_BRCOperation=#@[16C]}8@"NSError"16
migration key
com.apple.CloudDocs.SharingV1
v28@?0B8@"NSSet"12@"NSError"20
-[BRSharingClient fetchSharingInfo:]
share-root
root-item
-[BRSharingClient preflightCheckIfCurrentlyShareableWithCompletion:]
-[BRSharingClient fetchParticipantListAndPublicPermission:]
-[BRSharingClient startPreparingForShareWhenForcing:]
-[BRSharingClient fetchShareWithCompletion:]
-[BRSharingClient fetchShareURLWithCompletion:]
-[BRSharingClient saveShare:completion:]
-[BRSharingClient unshareWithCompletion:]
Couldn't get public sharing key
unreachable: no records and no error
unreachable: no error and no sharing key
unreachable: no public sharing identity. avoiding breaking iwork shares
unreachable: no routing key on share identity prepared record
unreachable: sharing identity isn't encrypted data
unreachable: base token isn't a string
unreachable: no base token %@ or sharing identity %@ and no error
unreachable: not a directory nor a document
sharing/save-share
unreachable: no share record
unreachable: directory %@ isn't pcs chained
unreachable: couldn't get base record
 and %@
unreachable: got an unexpected number of shares saved
saveShareCompletionBlock
T@?,C,N,V_saveShareCompletionBlock
sharing/destroy-share
unreachable: got an unexpected number of shares deleted
destroyShareCompletionBlock
T@?,C,N,V_destroyShareCompletionBlock
sharing/modifyAccess
v40@?0@"CKRecordID"8@"NSData"16@"NSString"24@"NSError"32
unreachable: no dict and no error
granting
revoking
Granted
Revoked
modifyAccessCompletionBlock
T@?,C,N,V_modifyAccessCompletionBlock
sharing/copyParticipantToken
unreachable: No base token so the share token we would return would be invalid for iwork
v32@?0@"CKRecordID"8@"NSString"16@"NSError"24
unreachable: no error and no key
shareID
v24@?0@"NSString"8@"NSError"16
fetchParticipantTokenCompletionBlock
T@?,C,N,V_fetchParticipantTokenCompletionBlock
sharing/prepare-folder-pcs
serverItem
pcsChainFolderCompletionBlock
T@?,C,N,V_pcsChainFolderCompletionBlock
sharing/copy-shareURL
unreachable: Couldn't get a share URL
unreachable: Couldn't get a share URL for %@
copyShareURLCompletionBlock
T@?,C,N,V_copyShareURLCompletionBlock
sharing/copy-shortToken
unreachable: No short token found on record
copyShortTokenCompletionBlock
T@?,C,N,V_copyShortTokenCompletionBlock
T@"CKRecordID",R,N,V_shareID
emptyRecord
T@"CKRecord",R,N,V_emptyRecord
sharing/clean-subitems
WITH RECURSIVE item_children_needing_fetching (item_id, item_type, item_sharing_options, shared_alias_count, shared_children_count) AS (     SELECT item_id, item_type, item_sharing_options, shared_alias_count, shared_children_count FROM server_items      WHERE zone_rowid = %@ AND item_id = %@ AND (IFNULL(shared_children_count + shared_alias_count, 1) > 0)  UNION ALL     SELECT ip.item_id, ip.item_type, ip.item_sharing_options, ip.shared_alias_count, ip.shared_children_count FROM server_items AS ip INNER JOIN item_children_needing_fetching AS p       WHERE ip.item_parent_id = p.item_id        AND +ip.zone_rowid = %@        AND ip.item_type IN (0, 9, 10, 1, 8, 3)        AND ((IFNULL(ip.shared_children_count + ip.shared_alias_count, 1) > 0)            OR (ip.item_sharing_options & 4)            OR ip.item_type = 3)) SELECT item_id, item_type, item_sharing_options FROM item_children_needing_fetching WHERE item_type = 3 OR (item_sharing_options & 4)       OR (item_type IN (9, 10) AND (IFNULL(shared_children_count + shared_alias_count, 1) > 0))
SELECT version_ckinfo FROM client_items WHERE item_id = %@ AND zone_rowid = %@
SELECT item_stat_ckinfo FROM client_items WHERE item_id = %@ AND zone_rowid = %@
full
empty
SELECT item_type, item_stat_ckinfo, version_ckinfo from client_items WHERE item_id = %@ AND zone_rowid = %@
v32@?0@"BRCItemGlobalID"8Q16^B24
processFolderSubitemsCompletionBlock
T@?,C,N,V_processFolderSubitemsCompletionBlock
INSERT OR REPLACE INTO side_car_lookahead (record_name, root_alias_record_name, item_favoriterank, item_lastusedtime, item_side_car_ckinfo) VALUES (%@, %@, %@, %@, %@)
UPDATE server_items SET item_favoriterank = %@, item_lastusedtime = %@, item_side_car_ckinfo = %@, item_rank = NULL WHERE zone_rowid = %@ AND item_id = %@
UPDATE server_items SET item_favoriterank = NULL, item_lastusedtime = NULL, item_side_car_ckinfo = NULL, item_rank = NULL WHERE zone_rowid = %@ AND item_id = %@
%@ %s %@ - %@ - %@ - %d
relativePath
T@"NSString",&,N,V_relativePath
T@"NSNumber",&,N,V_fileID
docID
T@"NSNumber",&,N,V_docID
genCount
TI,N,V_genCount
TB,N,V_isDirectory
streamDidBecomeReadyToTransferRecords
T@?,C,N,V_streamDidBecomeReadyToTransferRecords
maxCountOfBatchesInFlight
TQ,N,V_maxCountOfBatchesInFlight
operations
T@"NSArray",R
inFlightSize
TQ,R,N,V_inFlightSize
sharing/access-token
unreachable: encrypted access token %@ is of unexpected type
unreachable: reference identifier %@ is of unexpected type
T@"CKRecordID",&,N,V_shareID
copyAccessTokenCompletionBlock
T@?,C,N,V_copyAccessTokenCompletionBlock
T@"NSMutableArray",&,N,V_xattrs
__defaultPersonaID__
server-config.plist
account.1
MobileHost.txt
Library/Application Support/CloudDocs/session/db/client.db
Library/Application Support/CloudDocs/
clientDatabaseURL
T@"NSURL",&,N,V_clientDatabaseURL
 target:'%@'
-[BRCSymlinkItem updateWithImportObject:onlyContentDependentProperties:error:]
INSERT INTO client_items ( rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_scope, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_local_change_count, item_old_version_identifier, version_name) VALUES ( %lld, %@, %@, %@, %ld, %@, %@, %d, %lld, %lld, %@, %@, %d, %d, %@, %d, %d, %d, %lld, %lld, %lld, %@, %@, %d, %@, %@, %@, %@, %@, %@, %@, %@, %u, %@, %llu, %@, %@)
UPDATE client_items SET item_id = %@, item_creator_id = %@, item_sharing_options = %ld, item_side_car_ckinfo = %@, item_parent_zone_rowid = %@, item_localsyncupstate = %d, item_local_diffs = %llu, item_notifs_rank = %lld, app_library_rowid = %@, item_min_supported_os_rowid = %@, item_scope = %d, item_user_visible = %d, item_stat_ckinfo = %@, item_state = %d, item_type = %d, item_mode = %d, item_birthtime = %lld, item_lastusedtime = %lld, item_favoriterank = %lld, item_parent_id = %@, item_filename = %@, item_hidden_ext = %d, item_finder_tags = %@, item_xattr_signature = %@, item_trash_put_back_path = %@, item_trash_put_back_parent_id = %@, item_alias_target = %@, item_creator = %@, item_processing_stamp = %@, item_staged_file_id = %@, item_staged_generation = %u, item_bouncedname = %@, item_local_change_count = %llu, item_old_version_identifier = %@, version_name = %@  WHERE rowid = %llu
T@"BRCDocumentItem",R,D,N
T@"BRCDirectoryItem<BRCFSRooted>",R,D,N
create-subscribe-zone/
subscription/
subscriptionOnly
TB,N,V_subscriptionOnly
optimisticSubscribe
TB,N,V_optimisticSubscribe
createZoneAndSubscribeCompletionBlock
T@?,C,N,V_createZoneAndSubscribeCompletionBlock
createdZone
T@"CKRecordZone",R,N,V_createdZone
com.apple.CloudDocs.AccountManagementV1
Failed to destroy account
v24@?0@"BRXPCAutomaticErrorProxy"8@"NSError"16
v24@?0@"NSFileProviderDomain"8@"NSError"16
sync/zone-purge
stage
gc:%ld
com.apple.brc.stage
com.apple.brc.stage.backup-exclusion-queue
fvrgduslix
i12@?0i8
-[BRCStageRegistry makeLiveSymlinkWithTarget:fileObjectID:error:]
-[BRCStageRegistry moveFromURLToLiveStage:fileObjectID:error:]
brpackage-extended
-[BRCStageRegistry stagePackageWithStageID:zone:recordName:package:xattrsPackage:error:]
unreachable: Package inside %@ is corrupted in the cloud
Asking for asset index out of bounds %lu vs %lu in package: %@
-[BRCStageRegistry preparePackageForSecondStage:recordName:zone:fileObjectID:manifest:package:error:]
%llx
/%@/%@
ckpackage
-[BRCStageRegistry rememberStagedDownloadWithID:gatherFileID:generationID:error:]
unreachable: Asked to save xattr without signature or data
-[BRCStageRegistry saveXattrBlob:forSignature:error:]
unreachable: Asked for xattr without signature
-[BRCStageRegistry loadXattrBlobForSignature:error:]
graveyard
old versions stage
com.apple.bird.graveyard.size#N
i24@?0r*8^{stat=iSSQIIi{timespec=qq}{timespec=qq}{timespec=qq}{timespec=qq}qqiIIi[2q]}16
B24@?0@"NSString"8@"NSArray"16
i32@?0@"NSString"8@"NSString"16@"NSString"24
SELECT 1 FROM client_uploads WHERE transfer_stage = %@ LIMIT 1
SELECT 1 FROM client_items WHERE item_staged_file_id = %lld LIMIT 1
SELECT 1 FROM client_downloads WHERE transfer_stage = %@ LIMIT 1
com.apple.bird.stage.gc
com.apple.CloudDocs.NonLocalVersionsV1
container
versions
coordinated readers
  + %@
com.apple.bird.versions
dl-version-%@
unreachable: version not found
pkg_extensions.plist
pkg-extension-writer
CFBundleTypeExtensions
CFBundleDocumentTypes
SharedPackageExtensions.app
Info.plist
dbID:%llu rank:%llu
notifRank
TQ,N,V_notifRank
TQ,N,V_databaseID
<%@: %p, %lu indexed, %lu deleted>
TQ,N,V_rank
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
processingBatch
TB,N,GisProcessingBatch,V_processingBatch
providerManager
T@"NSFileProviderManager",&,N,V_providerManager
INSERT INTO tombstones (file_object_id, file_object_id_type, notif_rank) VALUES (%lld, %d, %lld)
INSERT OR IGNORE INTO tombstones (file_object_id, file_object_id_type, notif_rank) SELECT rowid, call_block(%p, item_type), bump_notifs_rank() FROM client_items WHERE zone_rowid = %@
DELETE FROM tombstones
DELETE FROM tombstones WHERE notif_rank < %lld
SELECT file_object_id, file_object_id_type, notif_rank FROM tombstones    WHERE notif_rank >= %lld ORDER BY notif_rank ASC LIMIT %lld
v16@?0@"PQLResultSet"8
@"ICDBRFileObjectID"20@?0q8c16
v24@?0@"NSArray"8@"NSArray"16
recents-enumerator
recents-enumerator-tracker
Ti,R,N
T@"CKRecordID",R,N,V_recordID
unreachable: no record and no error
<dl-content[%lld] %@_%@>
-[BRCDownloadContent _stageWithSession:manifest:package:xattrsPackage:error:]
unreachable: file content is not a CKAsset: %@
-[BRCDownloadContent _stageWithSession:error:]
unreachable: finder bookmark without content: %@
unreachable: pkg content is not a CKPackage: %@
unreachable: package manifest is not a CKAsset: %@
unreachable: xattrs package is not a CKAsset: %@
unreachable: unknown type for downloaded object %@
desiredIndices
T@"NSIndexSet",R,N,V_desiredIndices
requiresTwoPhase
TB,R,N,V_requiresTwoPhase
T@"BRCProgress",&,D,N
dl-content
downloading
perDownloadCompletionBlock
T@?,C,V_perDownloadCompletionBlock
<dl-version[%lld] %@_%@>
unreachable: There should be a file content property in %@
-[BRCDownloadVersion _stageContentWithSession:error:]
unreachable: no fileURL for %@ in %@
v24@?0@"GSAddition"8@"NSError"16
storage
T@"GSPermanentStorage",R,N,V_storage
T@"BRCProgress",&,N
gsError
T@"NSError",R,N,V_gsError
isLoser
TB,R,N,V_isLoser
rowID
fetchStorageGroup
T@"NSObject<OS_dispatch_group>",R,N,V_fetchStorageGroup
dl-version
v16@?0@"BRCUserDownloadEvent"8
previous documents versions
server truth structure validation (%s)
=================================
INSERT INTO items_checks    SELECT c.item_id, %lld      FROM items_checks AS p INNER JOIN server_items AS c ON (p.item_id = c.item_parent_id)     WHERE zone_rowid = %@ AND p.depth = %lld
SELECT item_id FROM server_items WHERE zone_rowid = %@ AND item_id NOT IN(SELECT item_id FROM items_checks)
SELECT c.item_id      FROM server_items AS c INNER JOIN server_items AS p ON (c.zone_rowid = p.zone_rowid AND c.item_parent_id = p.item_id)     WHERE c.zone_rowid = %@ AND c.item_state = 0       AND p.item_state = 1
SELECT c.item_id      FROM server_items AS c INNER JOIN server_items AS p ON (c.zone_rowid = p.zone_rowid AND c.item_parent_id = p.item_id)     WHERE c.zone_rowid = %@       AND p.item_type NOT IN (1, 8, 5, 6, 3)
SELECT c.item_id      FROM server_items AS c INNER JOIN server_items AS p ON (c.zone_rowid = p.zone_rowid AND c.item_parent_id = p.item_id)     WHERE c.zone_rowid = %@ AND c.item_rank >= p.item_rank       AND p.item_state = 1
is an item with a greater rank than a dead parent
server items checks (%s)
===================
deleteAllContentsOperation
T@"BRCZonePurgeOperation",R,N
deleteAllContentsOperationLastError
T@"BRCPrivateClientZone",R,N
UPDATE server_items SET item_state = 1, item_rank = NULL, item_depth = 0 WHERE item_parent_id = %@ AND zone_rowid = %@ AND item_state = 0
UPDATE server_items SET item_state = 1 , item_parent_id = %@ WHERE zone_rowid = %@   AND item_rank IS NULL   AND NOT EXISTS (SELECT 1 FROM server_items as pi WHERE pi.item_id = server_items.item_parent_id AND pi.zone_rowid = server_items.zone_rowid LIMIT 1)   AND item_parent_id != %@
SELECT item_id   FROM server_items  WHERE zone_rowid = %@    AND item_state = 1    AND item_type IN (0, 9, 10)    AND item_rank IS NULL
UPDATE server_items SET item_favoriterank = NULL, item_lastusedtime = NULL, item_side_car_ckinfo = NULL, item_rank = NULL WHERE zone_rowid = %@ AND (item_sharing_options & 4) == 0
T@"BRCSharedClientZone",R,N
Sync-Up
client_sync_up
in_flight_diffs, zone_rowid
zone:%@
 in-flight{%@}
in_flight_diffs = NULL
UPDATE %@SET in_flight_diffs = %lldWHERE %@
SELECT in_flight_diffs FROM %@WHERE %@ AND throttle_state != 0
SELECT COUNT(*) FROM %@WHERE %@ AND throttle_state != 0
throttle_id, zone_rowid
Uploader
client_uploads
com.apple.bird.quota.update-state
uploader
com.apple.bird.uploader
uploader-retry
UPDATE client_uploads SET transfer_stage = %@, transfer_operation = %@ WHERE %@
SELECT zone_rowid FROM client_uploads WHERE %@ AND transfer_stage = %@
SELECT zone_rowid FROM client_uploads WHERE %@ AND transfer_operation = %@
SELECT transfer_operation IS NOT NULL FROM client_uploads WHERE throttle_id = %llu
transfer_operation, transfer_queue, upload_error, app_library_rowid, zone_rowid
in-quicklook
needs-thumbnail
pending-retry
queue:%@
upload:done/cancelled
uploading:%.1f%%
UPDATE client_uploads SET   throttle_state = 1, transfer_operation = %@ WHERE %@   AND throttle_state != 0
UPDATE client_uploads SET  throttle_state = %d, transfer_queue = '_prepare', transfer_record = NULL, transfer_stage = NULL, transfer_operation = NULL WHERE throttle_id = %@
SELECT throttle_id, transfer_queue, transfer_operation, transfer_stage, app_library_rowid, throttle_state, zone_rowid   FROM client_uploads  WHERE %@ AND throttle_state != 0
SELECT throttle_id, transfer_queue, transfer_operation, transfer_stage, app_library_rowid, throttle_state, zone_rowid   FROM client_uploads  WHERE zone_rowid = %@ AND throttle_state != 0
SELECT throttle_id, transfer_queue, transfer_operation, transfer_stage, app_library_rowid, throttle_state, zone_rowid   FROM client_uploads  WHERE %@
UPDATE client_uploads SET  throttle_state = call_block(%@, next_retry_stamp, app_library_rowid, zone_rowid), transfer_queue = %@ WHERE %@   AND throttle_state != 0
UPDATE client_uploads    SET throttle_state = %d, transfer_operation = NULL  WHERE %@    AND throttle_state != 0
app_library_rowid, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, upload_priority, upload_request_stamp , zone_rowid
%@, %@, %lld, %@, %@, %@, %lld, %lld, %@
UPDATE client_uploads    SET upload_priority = %lld, upload_request_stamp = %lld  WHERE throttle_id = %lld
UPDATE client_uploads SET transfer_queue = call_block(%@, throttle_id, app_library_rowid, next_retry_stamp, zone_rowid)     WHERE throttle_state = 1      AND throttle_state != 0      AND transfer_queue = '_retry'      AND transfer_operation IS NULL      AND next_retry_stamp <= %lld
  SELECT MIN(next_retry_stamp)     FROM client_uploads    WHERE throttle_state = 1      AND throttle_state != 0      AND transfer_queue = '_retry'      AND transfer_operation IS NULL
UPDATE client_uploads SET transfer_operation = NULL WHERE (transfer_operation >= '')
transfer_queue = '_prepare' AND transfer_operation IS NULL
throttle_id, app_library_rowid, zone_rowid
ckpackage-xattrs
UPDATE client_uploads SET  transfer_queue = call_block(%@, next_retry_stamp, %@), transfer_record = %@, transfer_operation = NULL, transfer_stage = %@, transfer_size = %lld WHERE throttle_id = %lld
upload-%@-%@
v32@?0@"NSData"8@"NSDictionary"16@"NSError"24
UPDATE client_uploads SET throttle_state = 1 WHERE throttle_state = 30 AND zone_rowid = %@ AND throttle_state != 0
UPDATE client_uploads SET  transfer_operation = call_block(%@, next_retry_stamp), upload_error = %@ WHERE %@
  SELECT throttle_id, zone_rowid, transfer_size, transfer_record, next_retry_stamp, transfer_stage     FROM client_uploads    WHERE throttle_state = 1      AND throttle_state != 0      AND transfer_queue = %@      AND transfer_operation IS NULL ORDER BY upload_priority DESC, upload_request_stamp DESC, transfer_size ASC
UPDATE client_uploads    SET transfer_queue = '_retry'  WHERE %@
v24@?0@"BRCUpload"8@"NSError"16
SELECT MIN(next_retry_stamp) FROM client_uploads   WHERE throttle_state = 1     AND throttle_state != 0     AND transfer_queue = %@      AND transfer_operation IS NULL 
SELECT 1 FROM client_uploads  WHERE throttle_state = 32    AND throttle_state != 0    AND zone_rowid IN (SELECT rowid FROM client_zones WHERE zone_owner = %@ AND zone_plist IS NOT NULL)  LIMIT 1
SELECT 1 FROM client_uploads WHERE throttle_state = 32 AND throttle_state != 0 AND zone_rowid = %@ LIMIT 1
availableQuota
SELECT throttle_id, transfer_size   FROM client_uploads  WHERE throttle_state = 32    AND throttle_state != 0    AND transfer_size < %lld
UPDATE client_items SET version_upload_error = NULL WHERE rowid = %lld
UPDATE client_uploads SET throttle_state = 1, upload_error = NULL WHERE throttle_id = %lld
approximateTotalQuota
v24@?0Q8@"NSError"16
PausingUploadForADayStartDate
uploadsDeadlineScheduler
T@"BRCDeadlineScheduler",R,N,V_uploadsDeadlineScheduler
thumbnailsOperationsByID
T@"NSDictionary",R,N,V_thumbnailsOperations
isDefaultOwnerOutOfQuota
TB,N,V_isDefaultOwnerOutOfQuota
SELECT pcs_state FROM server_items WHERE item_id = %@   AND zone_rowid = %@   AND item_state = 0 LIMIT 1
SELECT item_type, pcs_state FROM server_items WHERE item_id = %@ and zone_rowid = %@
SELECT 1 FROM server_items WHERE item_parent_id = %@   AND zone_rowid = %@   AND pcs_state NOT IN (2, 3)   AND item_state = 0 LIMIT 1
SELECT item_id, item_type, item_stat_ckinfo, version_ckinfo, pcs_state FROM server_items WHERE item_parent_id = %@   AND zone_rowid = %@   AND pcs_state NOT IN (2, 3)   AND item_state = 0
SELECT item_stat_ckinfo, version_ckinfo FROM client_items WHERE item_id = %@  AND zone_rowid = %@  AND (item_local_diffs & %lld) != 0
T@"BRCItemID",R,N,V_parentID
structuralCKInfo
T@"BRFieldCKInfo",R,N,V_structuralCKInfo
contentCKInfo
T@"BRFieldCKInfo",R,N,V_contentCKInfo
itemType
Tc,R,N,V_itemType
chainState
TI,R,N,V_chainState
SELECT pcs_state, item_stat_ckinfo FROM server_items WHERE item_id = %@ AND zone_rowid = %@
batchCount
recordsForFirstPhase
recordsForSecondPhase
halfChainedRecordMap
T@"NSDictionary",R,N,V_halfChainedRecordMap
should2PhasePCSChain
pcs-chain/
unreachable: Can't PCS chain to documents or root
UPDATE server_items SET item_stat_ckinfo = %@, pcs_state = 4 WHERE item_id = %@ AND zone_rowid = %@ AND item_stat_ckinfo = %@
UPDATE server_items SET pcs_state = 3 WHERE item_id = %@ AND zone_rowid = %@ AND pcs_state != 2
v24@?0@"BRCPCSChainBatchInfo"8@"NSError"16
pcsChainCompletionBlock
T@?,C,N,V_pcsChainCompletionBlock
shouldFillBatch
TB,N,V_shouldFillBatch
file-read-data
Not entitled to get domain URL
com.apple.CloudDocs.FrameworkV1
-[BRFieldPkgLocalItem writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iCloudDrive_Sim/iCloudDrive-29/core/items/BRFieldPkgLocalItem.m
self->_item != nil
T@"BRFieldPkgItem",&,N,V_item
Tq,N,V_fileID
hasGenerationID
TI,N,V_generationID
hasSize
hasXattrs
T@"NSData",&,N,V_xattrs
[%@]
T@"BRCZoneRowID",R,N,V_zoneRowID
com.apple.CloudDocs
iwork-collaboration
com.apple.iWorkCollaboration
v32@?0@"NSString"8@"NSString"16@"NSError"24
hasCompletedPCSMigration
migrate-pcs
v32@?0@"CKRecordZoneID"8@"CKRecordZone"16^B24
not needed
v24@?0@"CKRecordZone"8@"NSError"16
v32@?0@"NSArray"8@"CKRecordZone"16@"NSError"24
com.apple.icloud.drive.container-metadata-extractor
com.apple.bird.watcher-queue
com.apple.bird.client-truth-workloop
com.apple.bird.server-truth-workloop
com.apple.bird.read-only-workloop
containers
session{account:%@}
Unable to open file at path '%@' %{errno}d
-[BRCAccountSession openWithError:pushQueue:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iCloudDrive_Sim/iCloudDrive-29/core/BRCAccountSession.m
Unable to lock file at path '%@' %{errno}d
client-db
com.apple.bird.main-scheduler
com.apple.bird.reset
com.apple.bird.pending-disk-scheduler
com.apple.bird.disk-space-observer
.localized
com.apple.clouddocs.app-uploaded
com.apple.bird.destroy-account-data
v24@?0@"NSString"8@"BRCALRowID"16
B16@?0@"BRCPrivateServerZone"8
currentUserRecordID
kBRCFPFSMigrationOffsetKey
kBRCFPFSMigrationLostItemCountKey
kBRCFPFSMigrationImportedDomainsKey
ImportCompleted
ResetCompleted
apps-list-did-change
v24@?0@"NSString"8^B16
v32@?0@"NSString"8@"NSSet"16^B24
enabling
disabling
SELECT SUM(li.version_size) FROM client_items as li WHERE li.item_type = 1   AND li.item_state = 0
%ld misc operations:
full sync:
xpc clients:
fpfsMigrationOffset
fpfsMigrationLostItemCount
sessionDirPath
T@"NSString",&,N,V_sessionDirPath
cacheDirPath
T@"NSString",&,N,V_cacheDirPath
accountID
T@"NSString",R,N,V_accountID
ubiquityTokenSalt
T@"NSString",R,N,V_ubiquityTokenSalt
containerCache
T@"ICDBRContainerCache",R,N,V_containerCache
appsMonitor
T@"BRCCloudDocsAppsMonitor",R,N,V_appsMonitor
globalProgress
T@"BRCGlobalProgress",R,N,V_globalProgress
defaultScheduler
T@"BRCDeadlineScheduler",R,N,V_defaultScheduler
applyScheduler
T@"BRCApplyScheduler",R,N,V_applyScheduler
containerScheduler
T@"BRCContainerScheduler",R,N,V_containerScheduler
containerHelper
T@"BRCDaemonContainerHelper",R,N,V_containerHelper
fairClientDBScheduler
T@"BRCFairScheduler",R,N,V_fairClientDBScheduler
fsUploader
T@"BRCFSUploader",R,N,V_fsUploader
fsDownloader
T@"BRCFSDownloader",R,N,V_fsDownloader
syncUpScheduler
T@"BRCSyncUpScheduler",R,N,V_syncUpScheduler
volume
T@"BRCVolume",R,N,V_volume
analyticsReporter
T@"BRCAnalyticsReporter",R,N,V_analyticsReporter
fsImporter
T@"BRCFSImporter",R,N,V_fsImporter
fsWriter
T@"BRCFSWriter",R,N,V_fsWriter
notificationManager
T@"BRCNotificationManager",R,N,V_notificationManager
inflightProgressTracker
T@"BRCInflightProgressTracker",R,N,V_inflightProgressTracker
stageRegistry
T@"BRCStageRegistry",R,N,V_stageRegistry
diskReclaimer
T@"BRCDiskSpaceReclaimer",R,N,V_diskReclaimer
fileUnlinker
T@"BRCFileUnlinker",R,N,V_fileUnlinker
userNotification
T@"BRCUserNotification",R,N,V_userNotification
recentsEnumerator
T@"BRCRecentsEnumerator",R,N,V_recentsEnumerator
availableDiskSpace
greedinessPreference
accountWaitOperation
T@"BRCAccountWaitOperation",R,N
providerIdentifier
T@"NSString",R,N,V_providerIdentifier
documentsScopeDomainIdentifier
T@"NSString",R,N,V_documentsScopeDomainIdentifier
dataScopeDomainIdentifier
T@"NSString",R,N,V_dataScopeDomainIdentifier
documentsScopeProviderManager
T@"NSFileProviderManager",R,N,V_documentsScopeProviderManager
dataScopeProviderManager
T@"NSFileProviderManager",R,N,V_dataScopeProviderManager
fpfsMigrationState
hasOptimizeStorageEnabled
appLibraryScanThrottle
T@"BRCThrottle",R,N,V_appLibraryScanThrottle
appLibraryResetThrottle
T@"BRCThrottle",R,N,V_appLibraryResetThrottle
sharedAppLibraryResetThrottle
T@"BRCThrottle",R,N,V_sharedAppLibraryResetThrottle
lostItemThrottle
T@"BRCThrottle",R,N,V_lostItemThrottle
T@"BRCThrottle",R,N,V_operationFailureThrottle
syncClientZoneThrottle
T@"BRCThrottle",R,N,V_syncClientZoneThrottle
syncClientZoneErrorThrottle
T@"BRCThrottle",R,N,V_syncClientZoneErrorThrottle
resetQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_resetQueue
transfer-queue
records-left:%ld progress:%.1f%% size:%@
transferring
 (cancelled)
unreachable: Missing transfer error for record %@
didProgressBlock
T@?,C,V_didProgressBlock
TQ,V_totalSize
TQ,V_doneSize
itemsCount
pendingGroup
T@"NSObject<OS_dispatch_group>",R,N,V_pendingGroup
docID:
+[BRCLocalItem(BRCBookmarkAdditions) parseUnsaltedBookmarkData:itemID:mangledID:error:]
bookmarkData
+[BRCLocalItem(BRCBookmarkAdditions) parseBookmarkData:inAccountSession:itemID:mangledID:unsaltedBookmarkData:error:]
BRGetFileNameFromServerInfoBlob
existing
SELECT item_type, item_filename FROM client_items WHERE item_id = %@ AND zone_rowid = %@
UPDATE client_unapplied_table SET app_library_rowid = %@, throttle_state = 17 WHERE throttle_id = %lld AND zone_rowid = %@ AND throttle_state != 0
revived
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_scope, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_local_change_count, version_old_version_identifier, item_live_conflict_loser_etags, item_file_id, item_generation FROM client_items WHERE item_localsyncupstate = 8
com.apple.brc.fs.writer
serialQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
recordNames
Ti,R,N,V_type
effectedRecordNames
T@"NSSet",R,N,V_effectedRecordNames
partial
broken
problems
pendingRequestID
needsSync
dead parent
missing root
live children
missing content
cant save (missing structure?)
cant save (missing parent)
pcs decryption
simulated (broken)
simulated (partial)
item parented to a document
package with corrupt indices
share without root record
problem{msg:%@,needs-sync:%@,zone-state:%@,pending-request:%@, records:%@}
Ti,R,N,V_state
effectiveProblemMessage
T@"NSNumber",&,N,V_pendingRequestID
TB,N,V_needsSyncUp
ckinfo
zone-health{etag:%@,state:%@}
i20@?0i8@"NSString"12
/.vol/%u/%lld
icd_qtnFlags
BRCGetXattrValue
com.apple.LaunchServices.OpenWith
com.apple.FinderInfo
com.apple.ResourceFork
com.apple.trash.put-back.path#PS
com.apple.trash.put-back.icloud-parent-id#PS
com.apple.last-used.time#PS
com.apple.lastuseddate#PS
com.apple.favorite-rank.number#PS
com.apple.metadata:_kMDItemFinderLabel
com.apple.quarantine
com.apple.cs.CodeSignature
com.apple.cs.CodeDirectory
com.apple.cs.CodeRequirements
com.apple.icloud.itemName
-[BRCLazyXattrsCollection initWithFD:sizeLimit:syncable:error:]
-[BRCLazyXattrsCollection getXattrValue:error:]
file-write-data
B16@?0r*8
i24@?0r^v8r^v16
unlink
com.apple.bird.file-unlinker
-[BRCTreeEnumerator enumerateBelow:appLibrary:recursively:handler:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iCloudDrive_Sim/iCloudDrive-29/core/items/BRCTreeEnumerator.m
parentID != nil
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_scope, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_local_change_count, version_old_version_identifier, item_live_conflict_loser_etags, item_file_id, item_generation FROM client_items WHERE rowid > %lld   AND item_parent_id = %@  AND app_library_rowid = %@  AND NOT indexset_contains(%p, rowid) ORDER BY rowid    LIMIT %ld
completionHandler
T@?,C,N,V_completionHandler
upload-tracker
%@ - zones still uploading: %@
-[PQLConnection(BRCAdditions) registerFunction:nArgs:handler:error:]
com.apple.Pages
com.apple.Keynote
com.apple.Numbers
pages-tef
key-tef
numbers-tef
list-dir/
v36@?0@"CKQueryCursor"8@"CKServerChangeToken"16B24@"NSError"28
UPDATE server_items SET item_type = 0, item_rank = NULL WHERE item_id = %@ AND zone_rowid = %@ AND item_type = 9
%K == %@ AND %K == %@ AND %K == %@
folderID
getContentRecords
ListRecordsInFolder
Can't list changes when we haven't synced down
folderToList
rescheduleApply
TB,N,V_rescheduleApply
rec-list-dir/
WITH RECURSIVE item_children (item_id, zone_rowid, item_type) AS (     SELECT item_id, zone_rowid, item_type FROM server_items      WHERE zone_rowid = %@ AND item_parent_id = %@ AND item_type IN (0, 9, 10)  UNION ALL     SELECT si.item_id, si.zone_rowid, si.item_type FROM server_items AS si INNER JOIN item_children AS p WHERE si.item_parent_id = p.item_id AND si.zone_rowid = p.zone_rowid AND si.item_type IN (0, 9, 10) AND NOT item_id_is_documents(si.item_id)) SELECT item_id FROM item_children WHERE item_type IN (9, 10)
<%@ id:%@ hr:%s xattr:%@ rtf:%@ bs:%@>
T@"CKRecord",R,N,V_record
recordIDNeedingFetch
T@"CKRecordID",&,N,V_recordIDNeedingFetch
recordIDBlockingSave
T@"CKRecordID",&,N,V_recordIDBlockingSave
q24@?0@"BRCPendingChangesStream"8@"BRCPendingChangesStream"16
change-stream/%@
list-dir/%@/%@%@
DROP TABLE IF EXISTS fetch_state
DROP TABLE IF EXISTS list_state
DROP TABLE IF EXISTS record_changes
DROP INDEX IF EXISTS "record_changes/record_type"
CREATE TABLE fetch_state (server_token blob, client_token integer)
CREATE TABLE list_state (cont_token blob, completed integer not null)
CREATE TABLE record_changes (record_id text primary key, record_type integer not null, record blob)
CREATE INDEX "record_changes/record_type" ON record_changes (record_type)
INSERT INTO fetch_state (server_token, client_token) VALUES (%@, NULL)
INSERT INTO list_state (cont_token, completed) VALUES (NULL, 0)
CREATE TABLE records_needing_subresources (record_id text PRIMARY KEY, record_type integer not null, record blob, xattr_sig BLOB, record_id_needing_fetch text, record_id_blocking_save text)
CREATE INDEX "records_needing_subresources/xattr_sig" ON records_needing_subresources(xattr_sig) WHERE xattr_sig IS NOT NULL
CREATE INDEX "records_needing_subresources/record_id_needing_fetch" ON records_needing_subresources(record_id_needing_fetch) WHERE record_id_needing_fetch IS NOT NULL
CREATE INDEX "records_needing_subresources/record_id_blocking_save" ON records_needing_subresources(record_id_blocking_save) WHERE record_id_blocking_save IS NOT NULL
CREATE TRIGGER "records_needing_subresources/resources_finished" AFTER UPDATE ON records_needing_subresources BEGIN INSERT INTO record_changes (record_id, record_type, record)  SELECT record_id, record_type, record  FROM records_needing_subresources WHERE xattr_sig IS NULL AND record_id_needing_fetch IS NULL AND record_id_blocking_save IS NULL AND record IS NOT NULL AND record_id = new.record_id; DELETE FROM records_needing_subresources WHERE xattr_sig IS NULL AND record_id_needing_fetch IS NULL AND record_id_blocking_save IS NULL AND record IS NOT NULL AND record_id = new.record_id; END
CREATE TRIGGER "records_needing_subresources/unblock_save" AFTER INSERT ON record_changes BEGIN UPDATE records_needing_subresources SET record_id_blocking_save = NULL WHERE record_id_blocking_save = new.record_id AND new.record IS NOT NULL; END
db.db
unreachable: Trying to fetch token state without a db
SELECT server_token, client_token FROM fetch_state
unreachable: There should always be one entry
unreachable: Trying to fetch query cursor without a db
SELECT cont_token, completed FROM list_state
SELECT server_token FROM fetch_state
unreachable: Trying to enumerate records without a db
SELECT record_id, record FROM record_changes WHERE record_type = %d
INSERT OR REPLACE INTO record_changes (record_id, record_type, record) VALUES (%@, %d, %@)
DELETE FROM records_needing_subresources WHERE record_id = %@
UPDATE fetch_state SET server_token = %@, client_token = %lld
UPDATE list_state SET cont_token = %@, completed = %d
DELETE FROM record_changes WHERE 1
DELETE FROM records_needing_subresources WHERE record_id = %@ AND record_id_needing_fetch = record_id
UPDATE records_needing_subresources SET record_id_blocking_save = NULL WHERE record_id_blocking_save = %@
UPDATE records_needing_subresources AS pr   SET record_id_needing_fetch = record_id_blocking_save, record_id_blocking_save = NULL WHERE record_id_blocking_save IS NOT NULL AND NOT EXISTS (SELECT 1 FROM records_needing_subresources AS sr WHERE pr.record_id_blocking_save = sr.record_id LIMIT 1)
SELECT record, xattr_sig FROM records_needing_subresources WHERE xattr_sig IS NOT NULL GROUP BY xattr_sig
SELECT record_id_needing_fetch FROM records_needing_subresources WHERE record_id_needing_fetch IS NOT NULL GROUP BY record_id_needing_fetch
SELECT 1 FROM record_changes WHERE record_id = %@ LIMIT 1
SELECT 1 FROM records_needing_subresources WHERE record_id = %@ LIMIT 1
SELECT 1 FROM records_needing_subresources WHERE record_id_needing_fetch IS NOT NULL LIMIT 1
SELECT 1 FROM records_needing_subresources WHERE xattr_sig IS NOT NULL LIMIT 1
SELECT 1 FROM records_needing_subresources LIMIT 1
SELECT 1 FROM record_changes WHERE record IS NULL LIMIT 1
DELETE FROM record_changes WHERE record_id = %@
INSERT OR REPLACE INTO records_needing_subresources (record_id, record_type, record, xattr_sig, record_id_needing_fetch, record_id_blocking_save) VALUES (%@, %ld, %@, %@, %@, %@)
UPDATE records_needing_subresources SET xattr_sig = NULL WHERE xattr_sig = %@
DELETE FROM records_needing_subresources WHERE record_id = %@ AND record IS NULL
UPDATE records_needing_subresources SET record_id_needing_fetch = NULL WHERE record_id_needing_fetch = %@
serializedNameComponents
hasSerializedNameComponents
T@"NSData",&,N,V_serializedNameComponents
none
Server
ServerTruth|ClientTruth
ServerTruth|ClientTruth|UnlinkData
ServerTruth|ClientTruth|UnlinkData|PurgeZone
CloudDocsServerExtension
BRErrorNeedsReset
CKErrorChangeTokenExpired
CKErrorUserDeletedZone
Sync is restricted for this client
<%@:%p(%@:%ld) - %@>
com.apple.bird.fair-scheduler
too many registered source
-[BRCFairScheduler addSource:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iCloudDrive_Sim/iCloudDrive-29/core/foundation/BRCFairScheduler.m
T@"NSObject<OS_dispatch_queue>",R,N
<%@:%p %@ on:%s>
(no-queue)
eventHandler
T@?,C,N,V_eventHandler
disabled-logged-out
disabled-entitlement
disabled-MDM
disabled TCC
-[BRFrameworkClient currentAccountCopyTokenWithAppIdentifier:reply:]
-[BRFrameworkClient fetchURLsForContainerID:completion:]
v32@?0@"NSURL"8@"NSURL"16@"NSError"24
-[BRFrameworkClient registerInitialSyncBarrierForID:reply:]
-[BRFrameworkClient getItemUpdateSenderWithReceiver:reply:]
v16@?0@"BRCNotificationPipe"8
-[BRFrameworkClient dumpDatabaseToFileHandle:completionHandler:]
-[BRFrameworkClient uploadAllFilesWithCompletionHandler:]
-[BRFrameworkClient setOptimizeStorageEnabled:reply:]
-[BRFrameworkClient checkOptimizeStorageEnabledWithReply:]
-[BRFrameworkClient forceSyncContainerID:reply:]
-[BRFrameworkClient printStatus:containerID:reply:]
-[BRFrameworkClient resolveCrossDeviceBookmarkData:completion:]
wrapperOperation
wrapperOperationCompletionHandler
T@?,C,N,V_wrapperOperationCompletionHandler
child-propagation
unreachable: Can't import br aliases anymore %@
-[BRCFSImporter _createNewItemWithImportObject:error:]
unreachable: Import object of unknown type %@
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_scope, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_local_change_count, version_old_version_identifier, item_live_conflict_loser_etags, item_file_id, item_generation FROM client_items WHERE item_doc_id = %u   AND +item_state = 0   AND +item_type IN (1, 8, 6)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_scope, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_local_change_count, version_old_version_identifier, item_live_conflict_loser_etags, item_file_id, item_generation FROM client_items  WHERE item_file_id = %lld    AND item_state = 0
-[BRCFSImporter importNewItemAtURL:logicalName:parentItem:templateItem:fields:options:extension:error:]
label
-[BRCFSImporter importNewItemAtURL:logicalName:parentItem:templateItem:fields:options:extension:error:]_block_invoke
-[BRCFSImporter capabilityToMoveItem:toNewParentItem:error:]
-[BRCFSImporter _getOrCreateTrashItemInAppLibrary:extension:error:]
-[BRCFSImporter _trashItem:extension:error:]
-[BRCFSImporter _untrashItem:toParentIdentifier:error:]
-[BRCFSImporter itemChanged:baseVersion:changedFields:newValues:contents:extension:error:]
parentItemIdentifier
UPDATE client_items SET item_notifs_rank = fetch_and_inc64(%p), item_state = 1, item_processing_stamp = call_block(%p, item_type, rowid, zone_rowid), item_localsyncupstate = 4, item_file_id = NULL, item_doc_id = NULL, item_generation = NULL, item_bouncedname = NULL, item_filename = call_block(%p, item_id), item_staged_file_id = NULL, item_staged_generation = NULL WHERE item_parent_id = %@ AND item_parent_zone_rowid = %@ AND item_state = 0 LIMIT %d
no sharing options for %llu
-[BRCFSImporter _propagateFieldsToNextChildBatch:persistedState:minRowID:batchSize:]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iCloudDrive_Sim/iCloudDrive-29/core/fs/BRCFSImporter.m
no visible for %llu
no scope for %llu
no timestamp for %llu
no notif rank for %llu
UPDATE client_items SET item_sharing_options = call_block(%p, rowid), item_user_visible = call_block(%p, rowid), item_scope = call_block(%p, rowid), app_library_rowid = %llu, item_processing_stamp = call_block(%p, rowid), item_notifs_rank = call_block(%p, rowid) WHERE item_parent_id = %@ AND item_parent_zone_rowid = %@ AND item_state = 0 AND rowid > %lld  AND call_block(%p, item_sharing_options, item_user_visible, item_filename, item_scope, app_library_rowid, item_type, item_notifs_rank, item_localsyncupstate, rowid) ORDER BY rowid LIMIT %d
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_scope, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_local_change_count, version_old_version_identifier, item_live_conflict_loser_etags, item_file_id, item_generation FROM client_items WHERE item_notifs_rank >= %lld AND item_notifs_rank < %lld ORDER BY item_notifs_rank
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_scope, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_local_change_count, version_old_version_identifier, item_live_conflict_loser_etags, item_file_id, item_generation FROM client_items WHERE item_processing_stamp IS NOT NULL ORDER BY item_processing_stamp ASC LIMIT 1
WITH RECURSIVE item_parents  (rowid, item_parent_id, item_parent_zone_rowid, item_state, item_processing_stamp) AS (  SELECT rowid, item_parent_id, item_parent_zone_rowid, item_state, item_processing_stamp FROM client_items      WHERE item_id = %@ AND zone_rowid = %@  UNION ALL     SELECT li.rowid, li.item_parent_id, li.item_parent_zone_rowid, li.item_state, li.item_processing_stamp FROM client_items AS li  INNER JOIN item_parents AS p WHERE p.item_parent_id = li.item_id AND p.item_parent_zone_rowid = li.zone_rowid      LIMIT %u) SELECT rowid, item_processing_stamp FROM item_parents WHERE item_processing_stamp IS NOT NULL
UPDATE client_items SET item_processing_stamp = %lld WHERE rowid = %llu
UPDATE client_items SET item_file_id = call_block(%p, item_file_id, item_type, item_localsyncupstate), item_generation = call_block(%p, item_generation, item_type, item_localsyncupstate), item_localsyncupstate = call_block(%p, item_localsyncupstate, rowid, item_stat_ckinfo IS NULL), item_doc_id = NULL ORDER BY rowid ASC LIMIT %llu OFFSET %llu
ProcessingComplete
LostItemCount
Desktop
Documents
containerMetadataSync
yyyy-MM-dd HH:mm:ss
%@:%@ %@:%@ %@:%d
serverChangeToken
lastSyncDate
isContainerMetadataSyncIdle
isSharedDBSyncIdle
ckGroup
T@"CKServerChangeToken",&,N,V_serverChangeToken
T@"NSDate",&,V_lastSyncDate
needsContainerMetadataSyncDown
TB,N,V_needsContainerMetadataSyncDown
needsSharedDBSyncDown
TB,N,V_needsSharedDBSyncDown
T@"CKOperationGroup",&,N,V_ckGroup
zoneHealthSync
zoneHealthSyncIdle
zone-health-state{last-sync:%@, needs-syncdown:%@, requestID:%lld, changeToken:%@}
T@"NSDate",R,V_lastSyncDownDate
T@"CKServerChangeToken",R,N,V_changeToken
needsSyncDown
TB,N,V_needsSyncDown
sideCarSync
sideCarSyncIdle
side-car-state{last-sync:%@, needs-sync:%@, requestID:%lld, changeToken:%@}
TB,N,V_needsSync
sync-down/periodic-sync
unreachable: No error found
useful
useless
T@"BRCContainerScheduler",R,N,V_scheduler
metadataChangeToken
T@"CKServerChangeToken",R,N,V_metadataChangeToken
zoneHealthChangeToken
T@"CKServerChangeToken",R,N,V_zoneHealthChangeToken
sideCarChangeToken
T@"CKServerChangeToken",R,N,V_sideCarChangeToken
zone-health-report
clientInfo
pkg:%lld p:'%@' rank:%lld ino:%lld
 dir
 file gen:%@ size:%llu mtime:%llu mode:%s
 sig:%@
 link to:'%@'
 quarantine:%u 
 xattrSig:%@
-[BRCPackageItem initWithURL:inPackage:forItem:error:]
SELECT largest_file_size FROM client_pkg_upload_sizes WHERE item_rowid = %@
SELECT item_rowid, rel_path, item_type, asset_rank, file_id, quarantine_info, xattr_signature, signature_or_link, generation, size, mode, mtime FROM client_pkg_upload_items WHERE item_rowid = %llu ORDER BY asset_rank
SELECT item_rowid, rel_path, item_type, asset_rank, file_id, quarantine_info, xattr_signature, signature_or_link, generation, size, mode, mtime FROM client_pkg_upload_items WHERE item_rowid = %llu ORDER BY rel_path
SELECT aggregate_size FROM client_pkg_upload_sizes WHERE item_rowid = %llu
SELECT asset_rank, generation  FROM client_pkg_upload_items WHERE item_rowid = %llu AND item_type = %d
UPDATE client_pkg_upload_items SET signature_or_link = %@ WHERE item_rowid = %llu AND asset_rank = %ld
INSERT INTO client_pkg_upload_items (item_rowid, rel_path, item_type, asset_rank, file_id, quarantine_info, xattr_signature, signature_or_link, generation, size, mode, mtime) VALUES (%llu, %@, %u, %llu, %llu, %@, %@, %@, %@, %llu, %u, %llu)
B24@?0@"BRCPQLConnection"8@?<v@?@"PQLConnection"@"PQLStatement"@"NSError">16
INSERT INTO client_pkg_upload_items (item_rowid, rel_path, item_type, asset_rank, file_id, quarantine_info, xattr_signature) VALUES (%llu, %@, %u, %llu, %llu, %@, %@)
INSERT INTO client_pkg_upload_items (item_rowid, rel_path, item_type, asset_rank, file_id, quarantine_info, xattr_signature, signature_or_link) VALUES (%llu, %@, %u, %llu, %llu, %@, %@, %@)
SELECT item_rowid, rel_path, item_type, asset_rank, file_id, quarantine_info, xattr_signature, signature_or_link, generation, size, mode, mtime  FROM client_pkg_upload_items  ORDER BY item_rowid, rel_path
client_pkg_upload_items
+[BRCPackageItem dumpSession:toContext:db:error:]
itemRowID
TQ,R,N,V_itemRowID
T@"BRCGenerationID",R,N,V_generationID
pathInPackage
T@"NSString",R,N,V_pathInPackage
assetRank
Tq,R,N,V_assetRank
Tq,R,N,V_mtime
Tc,R,N,V_mode
T@"NSData",R,N,V_xattrSignature
lazyXattrs
T@"NSData",R,N,V_lazyXattrs
com.apple.CloudDocs.ItemSPIV1
-[BRItemSPIClient fetchAccountIdentifierWithCompletionHandler:]
-[BRItemSPIClient fetchLastEditorDeviceNameWithCompletionHandler:]
-[BRItemSPIClient thumbnailChangedWithCompletion:]
ready in %.3fs
<deadline %@: %@>
q24@?0@"BRCDeadlineSource"8@"BRCDeadlineSource"16
deadline-sheduler
fairScheduler
T@"BRCFairScheduler",R,N,V_fairScheduler
coalescingLeeway
Tq,N,V_leeway
computeNextAdmissibleDateForScheduling
T@?,C,N,V_computeNextAdmissibleDateForScheduling
needs-sync-down
in-sync-up
in-sync-down
last-sync-was-up
has-synced-down
prefer-sync-down
<%@: %@ %p>
%@-metadata
v32@?0Q8q16@?<v@?>24
com.apple.bird.foreground.state
+ foreground clients:
   o %@ [container]
   o %@
   o %@ [grace period] disconnected %.1fs ago
   o forced foreground
   o always foreground
unknown bundle ID
Handoff request
contextIdentifier
T@"NSString",R,N,V_contextIdentifier
T@"BRCUserDefaults",R,N
isShared
TB,R,N,V_isShared
ckContainer
T@"CKContainer",R,N
ckContainerID
T@"CKContainerID",R,N
uploadStream
T@"BRCTransferStream",R,N,V_uploadStream
downloadStream
T@"BRCTransferStream",R,N,V_downloadStream
readerThrottle
T@"BRCThrottleBase",R,N,V_readerThrottle
applyThrottle
T@"BRCThrottleBase",R,N,V_applyThrottle
uploadThrottle
T@"BRCThrottleBase",R,N,V_uploadThrottle
uploadFileModifiedThrottle
T@"BRCThrottleBase",R,N,V_uploadFileModifiedThrottle
perItemSyncUpThrottle
T@"BRCThrottleBase",R,N,V_perItemSyncUpThrottle
downloadThrottle
T@"BRCThrottleBase",R,N,V_downloadThrottle
-[BRFieldContentSignature writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iCloudDrive_Sim/iCloudDrive-29/core/items/BRFieldContentSignature.m
hasContentSignature
fetch-quota
SELECT shared_by_me_count | shared_to_me_count, dir_faults_count FROM item_recursive_properties WHERE item_rowid = %lld
SELECT IFNULL(shared_children_count, 0) | IFNULL(shared_alias_count, 0) FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT shared_by_me_count, dir_faults_count FROM item_recursive_properties WHERE item_rowid = %lld
SELECT shared_children_count FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT shared_to_me_count, dir_faults_count FROM item_recursive_properties WHERE item_rowid = %lld
SELECT shared_alias_count FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT over_quota_count FROM item_recursive_properties WHERE item_rowid = %lld
SELECT dir_faults_count FROM item_recursive_properties WHERE item_rowid = %lld
SELECT 1 FROM item_recursive_properties WHERE item_rowid = %lld AND (needs_download_count != 0 OR needs_dl_unstage_count != 0) LIMIT 1
SELECT 1 FROM item_recursive_properties WHERE item_rowid = %lld AND (needs_sync_up_count != 0 OR needs_upload_count != 0) LIMIT 1
SELECT 1 FROM client_items WHERE item_parent_id = %@ AND item_state = 1 AND item_parent_zone_rowid = %@ LIMIT 1
SELECT 1 FROM client_items WHERE item_parent_id = %@    AND item_state = 0   AND item_parent_zone_rowid = %@ LIMIT 1
SELECT DISTINCT zone_rowid FROM client_items WHERE item_parent_id = %@   AND item_parent_zone_rowid = %@    AND item_localsyncupstate = 4   AND item_state IN (0, 1)
INSERT OR REPLACE INTO item_recursive_properties (item_rowid, item_id, item_parent_id, item_type, zone_rowid, item_parent_zone_rowid) VALUES (%llu, %@, %@, %u, %@, %@)
UPDATE item_recursive_properties SET item_type = %d, dir_faults_count = dir_faults_count + 1 WHERE item_rowid = %lld
UPDATE item_recursive_properties SET item_type = %d, dir_faults_count = dir_faults_count - 1 WHERE item_rowid = %lld
UPDATE item_recursive_properties SET item_type = %d WHERE item_rowid = %lld
shared_to_me_count = 1
shared_by_me_count = 1
UPDATE item_recursive_properties SET %@ WHERE item_rowid = %lld
shared_to_me_count = 0
shared_by_me_count = 0
INSERT INTO client_items ( rowid, zone_rowid, version_mtime, visible_child_count, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_scope, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_local_change_count, item_old_version_identifier) VALUES ( %lld, %@, %lld, 0, %@, %@, %ld, %@, %@, %d, %lld, %lld, %@, %@, %d, %d, %@, %d, %d, %d, %lld, %lld, %lld, %@, %@, %d, %@, %@, %@, %@, %@, %@, %@, %@, %u, %@, %llu, %@)
UPDATE client_items   SET item_parent_id = %@,       item_parent_zone_rowid = %@ WHERE item_parent_id = %@   AND item_parent_zone_rowid = %@
SELECT si.rowid FROM server_items AS si INNER JOIN client_unapplied_table AS ap ON si.item_rank = ap.throttle_id WHERE si.item_parent_id = %@   AND si.zone_rowid = %@   AND si.item_type = 3   AND ap.throttle_state = 24    AND ap.throttle_state != 0
UPDATE client_items SET item_id = %@, item_creator_id = %@, item_sharing_options = %ld, item_side_car_ckinfo = %@, item_parent_zone_rowid = %@, item_localsyncupstate = %d, item_local_diffs = %llu, item_notifs_rank = %lld, app_library_rowid = %@, item_min_supported_os_rowid = %@, item_scope = %d, item_user_visible = %d, item_stat_ckinfo = %@, item_state = %d, item_type = %d, item_mode = %d, item_birthtime = %lld, item_lastusedtime = %lld, item_favoriterank = %lld, item_parent_id = %@, item_filename = %@, item_hidden_ext = %d, item_finder_tags = %@, item_xattr_signature = %@, item_trash_put_back_path = %@, item_trash_put_back_parent_id = %@, item_alias_target = %@, item_creator = %@, item_processing_stamp = %@, item_staged_file_id = %@, item_staged_generation = %u, item_bouncedname = %@, item_local_change_count = %llu, item_old_version_identifier = %@, version_mtime = %lld  WHERE rowid = %llu
UPDATE client_items SET item_parent_id = call_block(%@, item_state, app_library_rowid, zone_rowid),     item_bouncedname = call_block(%@) WHERE item_parent_id = %@   AND item_parent_zone_rowid = %@
@"NSError"16@?0@"BRCLocalItem"8
account.debug.zombie.enable
nsurlsessiond
fsevents.latency
fsevents.reset-backoff
fsreader.container.throttle
fsreader.lost.throttle
fsreader.lost.backoff
fsreader.scan.batch-size
fsreader.coordination.count
fsreader.coordination.delay
fsreader.coordination.throttle
fswriter.apply.throttle
fswriter.apply.batch-size
fswriter.coordination.count
fswriter.coordination.delay
operation.failure.throttle
container.reset.throttle
shared-container.reset.throttle
container.reset.alias-removal.throttle
sync.container.throttle
sync.container.error.throttle
transfer.download.throttle
transfer.upload.throttle
sync-up.error.per-item.throttle
transfer.upload.file-modified.throttle
stage.gc.xpc
cachedelete-push.xpc
system.reachability
system.power
system.lowdisk
transfer.batch-size.min
transfer.width.max
transfer.width.min
transfer.budget
start-after
give-up-after
wait-at-least
wait-at-most
forget-after
max-elemnt-count
platforms
sync-throttles
success-ratio
quota-clear-ratio
error-ratio
kickback-delay
kickback-ratio
interval
grace
repeat
priority
battery
screen.sleep
container.greedy
url.publish-timeout
server-config-url
defaults.clouddocs.
minWait
Td,N,VminWait
maxWait
Td,N,VmaxWait
ratioOnSuccess
Td,N,VratioOnSuccess
ratioOnQuotaErrorClear
Td,N,VratioOnQuotaErrorClear
ratioOnFailure
Td,N,VratioOnFailure
inactivityKickbackDelay
Td,N,VinactivityKickbackDelay
inactivityKickbackRatio
Td,N,VinactivityKickbackRatio
com.apple.bird.defaults-manager
com.apple.bird.defaults-manager-callback
v16@?0@"NSNotification"8
container-metadata
q24@?0@"NSString"8@"NSString"16
@16@?0@8
fs.xattr-max-size
fs.preserved-xattr-max-size
sync.down.fetch-all-changes
sync.down.batchsize
sync.up.batchsize
list-dir.batchsize
list-dir.cancel-delay
sync.up.batchsize.decrease.factor
sync.up.batchsize.increase
sync.appcontainers.batchsize
sync.down.sharequerysize
fs.maxdepth
sync.maxdepth
container.local.treeEnumerator
fs.pkg.extensions
_ulstyle
_ultheme
appex
bbpackage
bbprojectd
bentotemplate
book
booktemplate
card
cbaccounts
cpimage
cplink
cptext
cpweb
dayone
dsym
emberbackup
embermdbackup
embersnap
epub
fcarch
framework
gbproj
gdiagramstyle
goodnotes
graffle
gstencil
gtemplate
itmsp
iwork-tmp
logarchive
lrdata
lslibrary
mdlabels
mindnode
mindproj
mproject
neunote
nmbtemplate
ofocus
ofocus-archive
ofocus-backup
ofocus-perspective
oo3template
ooxsl
opvault
playground
playgroundbook
pzdoc
qvlibrary
qvnote
qvnotebook
scene
scriv
sfrframe
soundhoundbookmark
soundhoundhistory
storyboardc
studydeck
textexpanderalias
textexpanderbackup
textexpanderlocal
textexpandersettings
ulproject
ulysses
whink
workflow
xcodeproj
xcworkspace
fs.pkg.blacklist.extensions
fs.shareable.iwork.extensions
fs.bundle-bit.should-fixup.ios
fs.bundle-bit.fixup.backlist.ios
fs.non-auto-evictable.extensions.ios
fs.non-evictable.extensions.ios
fs.non-evictable.path-components.ios
fs.non-auto-evictable.utis.ios
fs.auto-evictable.utis.ios
doc.thumbnail-blacklist.extensions
emlx
ichat
stage.umask.file
stage.umask.fsroot
stage.umask.directory
stage.umask.package.directory
stage.umask.package.file
configuration.automatic.xpc
sync.automatic.xpc
transmogrify.xpc
full-sync.xpc
quota.available.comfort-size
quota.bad-xpc-activity
quota.good-xpc-activity
apps-fetch-delay
sync-up.per-item.throttling.skip
sync-up.batch-failures.throttling.skip
sync.down.throttle
sync.up.throttle
sync.up.budget.minimal
sync.up.budget.daily.default
sync.up.budget.daily
sync.up.budget.hourly.default
sync.up.budget.hourly
sync.up.budget.minutely.default
sync.up.budget.minutely
sync.up.cost.initial-item
sync.up.cost.structure.create
sync.up.cost.structure.edit
sync.up.cost.structure.delete
sync.up.cost.data.create
sync.up.cost.data.edit
sync.up.cost.data.delete
sync.up.cost.document.create
sync.up.cost.document.edit
sync.up.cost.document.delete
sync.down.shared.coalesce.nanoseconds
db.trace
db.profile
db.batch-size
db.batch-delay
db.allow-read-only-in-ipc
db.autovacuum-batch-size
db.autovacuum-ratio
server.throttling.disable
session.should-be-greedy.ios
max-file-count
max-file-count.per-folder
upload.max-file-size
upload.max-in-pkg-file-size
upload.batch.records.count
upload.batch.count
download.batch.records.count
download.batch.count
download.will-retry-progress.max-count
zone-health.sync-down.batch.count
shared-db.sync-down.batch.count
fsreader.scan.package-delay
fsevents.queue-buffer-size
fsevents.process-batch-size
https://configuration.apple.com/configurations/internetservices/cloudkit/clouddocs/clouddocs-1.0.plist
min-file-size-graveyard
min-evictable-size.auto.ios
logout-timeout
foreground-grace-period
force-foreground-grace-period
force-batch-failure-when-token-expires
disk-space-reclaimer.max-access-time.low-urgency
disk-space-reclaimer.max-access-time.med-urgency
disk-space-reclaimer.max-access-time.high-urgency
disk-space-reclaimer.max-access-time.very-high-urgency
disk-space-reclaimer.eviction.default-access-time
disk-space-reclaimer.max-ondisk-access-time.low-urgency
disk-space-reclaimer.max-ondisk-access-time.med-urgency
disk-space-reclaimer.max-ondisk-access-time.high-urgency
disk-space-reclaimer.max-ondisk-access-time.very-high-urgency
disk-space-reclaimer.eviction.default-ondisk-access-time
disk-space-reclaimer.max-graveyard-time.low-urgency
disk-space-reclaimer.max-graveyard-time.med-urgency
disk-reclaimer.purge-pacer-interval
disk-reclaimer.db-reclaimable-space-threshold
disk-reclaimer.cache-delete-recompute-interval
maximum-document-age-to-be-greedy
maximum-document-size-to-be-greedy
statement-cache-max-count-server-truth
statement-cache-max-count-client-truth
copy-share-ids-batch-size
alias-deletion-batch-size
disk-space.minimum-required-to-download.ios
disk-space.minimum-required-to-download-user-initiated
disk-space.minimum-required-to-be-greedy.ios
disk-space.required-to-return-to-greedy-state.ios
disk-space.required-to-return-to-greedy-state.relative.ios
disk-space.minimum-required-to-be-functional
disk-space.check-interval
disk-space.active-download-refresh-interval
user-notification.upload
spotlight-indexer.enabled
spotlight-indexer.pacer-interval
spotlight-indexer.batch-size
spotlight-indexer.max-depth
spotlight-indexer.failure-throttle-params
migration.failure-throttle-params
global-progress.additional.wait-trigger
global-progress.additional.size-trigger
document-access.high-priority-download-interval
pkg-extension-plist.write-interval
doc.min-size-for-thumbnail
doc.thumbnail-transfer-queue-width.ios
notif.overflow-limit
notif.gather-up-to
notif.batch-size
notif.working-set.batch-size
periodic-sync-time-interval
zone-health.reported-record-names-count
sync.only-treat-caught-up-as-consistent
zone-pcs-migration.blacklist-pcs-prep
_defaultZone
zone-pcs-migration.should-prepare
pcs-chaining.max-path-depth
pcs-chaining.batch-size
sharing.destroy-iwork-shares
excluded-filenames-worth-warning-at-logout
Dropbox
OneDrive
IDrive-Sync
excluded-filenames-worth-preservering
Microsoft User Data
iPhoto Library
excluded-extensions-worth-preservering
photoslibrary
photolibrary
aplibrary
migratedaplibrary
migratedphotolibrary
migratedaperturelibrary
ignored-quarantine-mask
should-auto-migrate
optimistic-pcs-chaining
should-fixup-czm-aliases
delete-shareid-batch-count
max-folder-enumeration-count
max-folder-enumeration-depth
power-log-report-activity
sqlite-cache-size.ios
sqlite-cache-spill.ios
downloader.size-refresh-interval
force-sync-override
uti-cache-size
fields-to-move-out-of-trash-mask
apply-count-to-signal-faults-live
force-delta-initial-sync
block-apply-until-list
allows-shared-directory-list-before-initial-change
allows-private-directory-list-before-initial-change
greedy-recently-used-item-count
desktop-enable-fetch-timeout
db.locked-milliseconds-to-sleep
db.locked-milliseconds-to-abort
compute-evictable-batch-size
ck-event-metric-timeout
pending-changes-soft-open
pending-changes-hard-open
pending-changes-close-delay
sync.concurrent-operation-count
recursive-list.concurrent-operation-count
ck-container-id
two-phase-package-min-size
report-all-per-item-failures
ubiquitous-migration-max-bouncing-attempts
fpfs-migration-cleanup-batch-size
pcs-chain-2-phase
server-search-match-limit
db-migration-batch-size
sync.save-records-directly-for-list
sync.save-records-directly-for-delta-sync
sync.save-records-directly-with-deletes
background-defer-time-interval
maxXattrBlobSize
maxPreservedXattrBlobSize
shouldFetchAllChanges
maxRecordCountInFetchRecordsOperation
maxRecordCountInModifyRecordsOperation
maxRecordCountWhenListingDirChanges
listDirChangesCancelDelay
modifyRecordsCountMultiplicativeDecrease
modifyRecordsCountAdditiveIncreaseFraction
maxRecordCountInClientZoneModifyRecordsOperation
maxRecordCountInQuerySharedRecordsOperation
maxRelativePathDepth
maxSyncPathDepth
treeEnumeratorBatchSize
packageExtensions
blacklistedPackageExtensions
iworkShareableExtensions
nonEvictableExtensions
nonAutoEvictableExtensions
nonAutoEvictableUTIs
nonEvictablePathComponents
autoEvictableUTIs
stageFileUmask
stageDirectoryUmask
stageInPackageDirectoryUmask
stageInPackageFileUmask
stageFSRootUmask
configurationUpdateXPCActivity
T@"NSObject<OS_xpc_object>",R,N
forcedSyncXPCActivity
transmogrifyXPCActivity
fullSyncXPCActivity
appLibraryScanThrottleParams
lostItemThrottleParams
applyThrottleParams
downloadThrottleParams
uploadThrottleParams
uploadFileModifiedThrottleParams
perItemSyncUpThrottleParams
appsFetchPacerDelay
Td,R,N
availableQuotaComfortSize
outOfQuotaXPCActivity
goodQuotaXPCActivity
T@"BRCSyncOperationThrottleParams",R,N
syncClientZoneThrottleParams
syncClientZoneErrorThrottleParams
syncUpMinimalBudget
syncUpDailyBudget
syncUpHourlyBudget
syncUpMinutelyBudget
syncUpInitialItemCost
syncUpStructureCreateCost
syncUpStructureEditCost
syncUpStructureDeleteCost
syncUpDataCreateCost
syncUpDataEditCost
syncUpDataDeleteCost
syncUpDocumentCreateCost
syncUpDocumentEditCost
syncUpDocumentDeleteCost
skipPerItemSyncUpThrottling
skipSyncUpThrottlingOnBatchFailures
sharedDbSyncDownCoalesceNanoseconds
operationFailureThrottleParams
appLibraryResetThrottleParams
sharedAppLibraryResetThrottleParams
appLibraryAliasRemovalThrottleParams
dbTraced
dbProfiled
dbBatchSize
dbBatchDelay
allowReadOnlyDBInIPC
dbAutovacuumBatchSize
dbAutovacuumRatio
skipServerSideThrottling
shouldAppLibraryBeGreedy
shouldSessionBeGreedy
maxTotalFilesCount
maxNumberOfFilesInAFolder
uploadMaxFileSize
uploadMaxInPkgFileSize
uploadBatchRecordsCount
uploadBatchCount
downloadBatchRecordsCount
downloadBatchCount
downloadWillRetryProgressMaxCount
zoneHealthSyncDownBatchRecordsCount
sharedDBSyncDownBatchRecordsCount
systemReachabilityLatency
systemPowerLatency
systemLowDiskLatency
writerIOsCancelDelay
readerIOsCancelDelay
readerMaxConcurrentIOs
writerMaxConcurrentIOs
readerThrottleParams
writerApplyBatchSize
readerScanBatchSize
readerPackageProcessingDelay
readerLostItemBackoff
fseventsLatency
fseventsResetBackoff
fseventQueueBufferSize
fseventProcessBatchSize
transferQueueMinBatchSize
transferQueueMinConcurrentOperations
transferQueueMaxConcurrentOperations
transferQueueTransferBudget
sessionZombiesEnabled
nsurlsessiondEnabled
stageGCXPCActivity
cacheDeletePushXPCActivity
serverConfigurationURL
publishURLTimeout
minFileSizeForGraveyard
minAutomaticallyEvictableFilesize
logoutTimeout
foregroundGracePeriod
forceForegroundGracePeriod
forceBatchFailureWhenReceivingAssetTokenExpiration
shouldFixupBundleBitOnPackages
extensionsSkippingBundleBitFixup
accessTimeDeltaInLowUrgency
accessTimeDeltaInMedUrgency
accessTimeDeltaInHighUrgency
accessTimeDeltaInVeryHighUrgency
defaultTimeDeltaForEviction
onDiskAccessTimeDeltaInLowUrgency
onDiskAccessTimeDeltaInMedUrgency
onDiskAccessTimeDeltaInHighUrgency
onDiskAccessTimeDeltaInVeryHighUrgency
defaultOnDiskAccessTimeDefaultForEviction
graveyardAgeDeltaInLowUrgency
graveyardAgeDeltaInMedUrgency
cacheDeleteRecomputeInterval
purgePacerInterval
dbReclaimableSpaceThreshold
maximumDocumentAgeToBeGreedy
maximumDocumentSizeToBeGreedy
statementCacheMaxCountForServerTruth
statementCacheMaxCountForClientTruth
copyShareIDsBatchSize
aliasDeletionBatchSize
minimumDiskSpaceRequiredToBeFunctional
minimumDiskSpaceRequiredToDownload
minimumDiskSpaceRequiredToDownloadUserInitiated
minimumDiskSpaceRequiredToBeGreedy
diskSpaceRequiredToReturnToGreedyState
relativeDiskSpaceRequiredToReturnToGreedyState
diskSpaceCheckInterval
activeDownloadSizeRefreshInterval
shouldDisplayUploadNotification
spotlightIndexingEnabled
recentsEnumeratorPacerInterval
recentsEnumeratorBatchSize
recentsEnumeratorMaxHierarchyDepth
recentsEnumeratorFailureThrottleParams
migrationThrottleParams
intervalToWaitBeforeShowingAdditionalDescription
minimalSizeToShowAdditionalDescription
documentAccessHighPriorityInterval
packageExtensionPlistWriteInterval
minFileSizeForThumbnailTransfer
thumbnailTransferQueueWidth
blacklistedThumbnailExtensions
notifOverflowLimit
notifGatherUpTo
notifBatchSize
workingSetBatchSize
periodicSyncTimeInterval
zoneHealthReportedRecordNamesCount
onlyTreatCaughtUpAsConsistent
blacklistPCSPrep
shouldPreparePCSMigration
pcsChainingMaxPathDepth
pcsChainingBatchSize
destroyiWorkShares
excludedFilenamesWorthWarningAtLogout
excludedFilenamesWorthPreserving
excludedExtensionsWorthPreserving
ignoredQuarantineMask
shouldAutoMigrateToCloudDocs
shouldFixupTargetCZMAliases
optimisticallyPCSChain
deleteShareIDBatchCount
maxFolderEnumerationCount
maxFolderEnumerationDepth
powerLogReportActivity
sqliteCacheSize
sqliteCacheSpill
downloadSizeRefreshInterval
forceSyncOverride
utiCacheSize
fieldsToMoveOutOfTrashMask
applyCountToSignalFaultsLive
forceDeltaInitialSync
blockApplyUntilList
allowsDirectoryListBeforeInitialChangeToken
numberOfGreedyRecentlyUsedItems
desktopEnableFetchTimeout
busyHandlerMillisecondsToSleep
busyHandlerMillisecondsToAbort
computeEvictableBatchSize
eventMetricTimeout
pendingChangesStreamSoftOpenCount
pendingChangesStreamHardOpenCount
pendingChangesStreamCloseDelay
concurrentSyncMaxOperationCount
recursiveListMaxOperationCount
minimumPackageSizeForTwoPhase
shouldReportAllPerItemFailures
ubiquitousMigrationMaxBouncingAttempts
fpfsMigrationCleanupBatchSize
serverSearchMatchLimit
dbMigrationBatchSize
canSaveRecordsDirectlyForList
canSaveRecordsDirectlyForDeltaSync
canSaveRecordsDirectlyWithDeletes
backgroundDeferTimeInterval
databaseBasePath
uuid
com.apple.bird.cellular-settings
sharing/iWork-publishing
unreachable: No sharing info and no error
sync-down/
v32@?0@"CKServerChangeToken"8q16@"NSError"24
continuing
starting
unreachable: broken structure in op %@ change token %@
unreachable: no fetched zone and no error
Ti,N,V_version
UNKNOWN_USER_GIVEN_NAME
nameComponents
T@"NSPersonNameComponents",&,N
TERM
ansi
color
LESS
LESS=FRSX
LESSCHARSET
LESSCHARSET=utf-8
less
execvp
-[BRCTermDumper _startInCString:fgColor:bgColor:attr:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iCloudDrive_Sim/iCloudDrive-29/iclouddrivectl/BRCTermDumper.m
i < 10
isatty
TB,R,N,V_isatty
supportsEscapeSequences
TB,R,N,V_supportsEscapeSequences
useColor
TB,R,N,V_useColor
[%d%c
Sync down
Sync down (periodic)
Sync down (initial)
Sync down (full)
Sync down (push triggered)
Sync down (app launch)
Sync down (app library metadata)
Sync down (zone health)
List directory
Fetch parent chain
Fetch share alias
Fetch recent documents
Sync up
Sync up (app library metadata)
Sync up (zone health)
Download (thumbnails)
Download (thumbnails user initiated)
Download (user initiated)
Download (opportunistic)
Download (updated documents)
Download (conflicting versions)
Download (non-local versions)
Upload
Upload all documents
Quota update (uploader)
Quota update (xpc request)
Zone consolidation
Zone consolidation (manual)
Zone health simulation
Publishing request
Sync up & down (shared db)
Sharing misc.
Fetch identity (xpc request)
Purge
Fetch non local versions
migrate PCS
OS upgrade migration
com.apple.TextInput
com.apple.kbd
com.apple.shoebox
com.apple.passd
v24@?0@"LSBundleProxy"8^B16
com.apple.bird.apps-monitor
com.apple.bird.apps-monitor.fetch-apps
com.apple.bird.apps-monitor.callback
apps-refetch-pacer
apps monitor
app library IDs by App ID
=======================
app IDs by app library IDs
 etag:%@
 fav:%lld
 lu:%lld
<%@:%p {etag : %@; fr: %lld; lu : %lld}>
T@"BRFieldCKInfo",&,N,V_ckInfo
<undef>
T@"NSData",R,N,V_signature
generationIDString
com.apple.iWorkAccountSPI
com.apple.iWorkPublishing
v32@?0@"NSData"8@"NSString"16@"NSError"24
sharing/copy-web-auth-token
T@"NSString",&,N,V_ckContainerID
SELECT item_id, zone_rowid FROM client_items   WHERE rowid = %lld
SELECT item_sharing_options FROM client_items   WHERE rowid = %lld
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_scope, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_local_change_count, version_old_version_identifier, item_live_conflict_loser_etags, item_file_id, item_generation FROM client_items WHERE rowid = %lld
SELECT rowid, item_type FROM client_items WHERE item_id = %@ AND zone_rowid = %@
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE item_alias_target = %@ AND item_type = 3 AND item_state = 0 %@ ORDER BY item_id
AND +zone_rowid = %@
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE item_alias_target = %@ AND item_type = 3 AND item_state = 1
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_scope, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_local_change_count, version_old_version_identifier, item_live_conflict_loser_etags, item_file_id, item_generation FROM client_items WHERE item_alias_target = %@ AND item_type = 3 AND +zone_rowid = %@ ORDER BY item_id
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_scope, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_local_change_count, version_old_version_identifier, item_live_conflict_loser_etags, item_file_id, item_generation FROM client_items WHERE item_id = %@ AND zone_rowid = %@
WITH RECURSIVE item_parents (item_id, zone_rowid) AS (     SELECT item_parent_id, item_parent_zone_rowid FROM client_items      WHERE zone_rowid = %@ AND item_id = %@  UNION ALL     SELECT li.item_parent_id, li.item_parent_zone_rowid FROM client_items AS li INNER JOIN item_parents AS p USING (item_id, zone_rowid)      LIMIT %u) SELECT item_id, zone_rowid FROM item_parents WHERE item_id_is_root(item_id) OR (item_id = %@ AND zone_rowid = %@) LIMIT 1
hierarchy-too-deep
item_parent_zone_rowid = %@ AND item_parent_id = %@
zone_rowid = %@ AND item_id = %@
WITH RECURSIVE item_children_with_shared_items (item_id, zone_rowid, shared_items_count) AS (     SELECT item_id, zone_rowid, (shared_by_me_count | shared_to_me_count) FROM item_recursive_properties      WHERE %@ AND (shared_by_me_count | shared_to_me_count) != 0  UNION ALL     SELECT ip.item_id, ip.zone_rowid, (ip.shared_by_me_count | ip.shared_to_me_count) FROM item_recursive_properties AS ip INNER JOIN item_children_with_shared_items AS p WHERE ip.item_parent_id = p.item_id AND ip.item_parent_zone_rowid = p.zone_rowid AND (ip.shared_by_me_count | ip.shared_to_me_count) != 0      LIMIT %llu) SELECT ic.item_id, ic.zone_rowid, li.item_sharing_options FROM item_children_with_shared_items AS ic INNER JOIN client_items AS li WHERE ic.shared_items_count = 1 AND li.item_id = ic.item_id AND li.zone_rowid = ic.zone_rowid AND (li.item_sharing_options & 4) != 0
UPDATE %@ SET app_library_rowid = %@,transfer_queue = %@ WHERE app_library_rowid = %@ AND transfer_queue = %@
UPDATE %@ SET app_library_rowid = %@ WHERE app_library_rowid = %@
record-fetcher
B16@?0@"CKRecordID"8
B32@?0@"CKRecordID"8@"NSString"16@"NSData"24
unreachable: Received %lu xattr records instead of expected %lu records for %@
q24@?0@"BRCFetchSubResourceRecord"8@"BRCFetchSubResourceRecord"16
v32@?0@"BRCItemID"8@"CKRecordID"16^B24
queryFinishedServerTruthCallback
T@?,C,N,V_queryFinishedServerTruthCallback
queryFinishedClientTruthCallback
T@?,C,N,V_queryFinishedClientTruthCallback
com.apple.bird.fileprovider.
file-provider
file presenters for %@
  + %@ -> %@
%@::%@
_providedItemsURL
T@"NSURL",R,C
_providedItemsOperationQueue
T@"NSOperationQueue",R
_fileReactorID
%@[%d]
com.apple.bird.cache-delete
com.apple.bird.purge-pacer
purgeableSpaceDate
purgeableSpace
nonPurgeableSpace
T@"NSString",R,C,N
typeIdentifier
capabilities
T@"<NSFileProviderItemFlags>",R,N
documentSize
T@"NSNumber",R,C,N
childItemCount
creationDate
T@"NSDate",R,C,N
contentModificationDate
lastUsedDate
tagData
T@"NSData",R,C,N
trashed
TB,R,N,GisTrashed
uploaded
TB,R,N,GisUploaded
TB,R,N,GisUploading
uploadingError
T@"NSError",R,C,N
downloaded
TB,R,N,GisDownloaded
TB,R,N,GisDownloading
downloadingError
excludedFromSync
TB,R,N,GisExcludedFromSync
mostRecentVersionDownloaded
TB,R,N,GisMostRecentVersionDownloaded
TB,R,N,GisShared
sharedByCurrentUser
TB,R,N,GisSharedByCurrentUser
ownerNameComponents
T@"NSPersonNameComponents",R,N
mostRecentEditorNameComponents
itemVersion
T@"NSFileProviderItemVersion",R,N
userInfo
hasUnresolvedConflicts
T@"NSNumber",R,C
containerDisplayName
downloadRequested
T@"NSNumber",R,C,GisDownloadRequested
hidden
TB,R,GisHidden
sharingPermissions
fp_spotlightDomainIdentifier
fp_domainIdentifier
fp_parentDomainIdentifier
fp_ubiquitous
TB,R,Gfp_isUbiquitous
fp_isContainer
fp_isContainerPristine
fp_cloudContainerIdentifier
fp_cloudContainerClientBundleIdentifiers
T@"NSSet",R,C
displayName
topLevelSharedItem
TB,R,N,GisTopLevelSharedItem
fp_lastModifiedByCurrentUser
TB,R,N,Gfp_isLastModifiedByCurrentUser
fp_addedByCurrentUser
TB,R,N,Gfp_isAddedByCurrentUser
fp_addedByNameComponents
preformattedOwnerName
preformattedMostRecentEditorName
-[BRServerSearchEnumerator _fetchScopeItemIDWithError:]
WITH RECURSIVE item_descendants_matching (item_id, zone_rowid, item_filename) AS (     SELECT item_id, zone_rowid, item_filename FROM server_items      WHERE zone_rowid = %@ AND item_parent_id = %@  UNION ALL     SELECT ic.item_id, ic.zone_rowid, ic.item_filename FROM server_items AS ic INNER JOIN item_descendants_matching AS p WHERE ic.item_parent_id = p.item_id AND ic.zone_rowid = p.zone_rowid AND (ic.item_type IN (0, 9, 10) OR (%@))) SELECT item_id, zone_rowid FROM item_descendants_matching AS ic WHERE %@ LIMIT %lld
SELECT item_id, zone_rowid FROM server_items AS ic WHERE %@ LIMIT %lld
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_scope, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_local_change_count, version_old_version_identifier, item_live_conflict_loser_etags, item_file_id, item_generation FROM client_items AS ic WHERE item_id = %@ AND zone_rowid = %@ AND %@
%%%@%%
(ic.item_filename LIKE %@ ESCAPE '\')
-[BRServerSearchEnumerator _createInjectionsWithError:]
<ct %@|%@ sz:%llu>
<st %@|%@>
[%@,%@]
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_scope, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_local_change_count, version_old_version_identifier, item_live_conflict_loser_etags, item_file_id, item_generation FROM client_items WHERE item_type IN (8, 10) AND zone_rowid = %@
sharedZone
T@"BRCSharedServerZone",R,N
client-state
<%@ %p, %@>
com.apple.brc.system-resources
com.apple.system.powermanagement.SystemLoadAdvisory
v12@?0i8
good
memory-notif-pacer
v16@?0@"NSDictionary"8
com.apple.distnoted.matching
isNetworkReachable
reachabilityFlags
isPowerOK
great
yyyy-MM-dd/HH:mm:ss
last-sync:%@
last-sync:never
, requestID:%llu
, inconsistent
, consistent
, caught-up
, status:%d(?)
, token:%@
lsdDate
lsdStatus
token
T@"NSDate",&,V_lastSyncDownDate
lastSyncDownStatus
Tq,N,V_lastSyncDownStatus
T@"CKServerChangeToken",&,N,V_changeToken
TQ,N,V_clientRequestID
hasNeverSyncedDown
last-sync:%@ nextRank:%lld minUsedTime:%lld shared-db{%@}
nextRank
shareDatabase
migrationQuery
minUsedTime
unable to update the server_state
-[BRCServerPersistedState saveToDB:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iCloudDrive_Sim/iCloudDrive-29/core/BRCServerPersistedState.m
%s%@:%@
T@"NSDate",&,N,V_lastSyncDownDate
Tq,N,V_nextRank
sharedDatabaseChangeState
T@"BRCServerChangeState",&,V_sharedDatabaseChangeState
minLastUsedTime
TQ,N,V_minLastUsedTime
<Service(%@) n:%@ fpid:<%@>>
serviceName
T@"BRFileProviderExtension",R,C,N,V_extension
T@"NSString",R,C,N,V_itemIdentifier
sharing/copy-share
rootItemIDToLookup
T@"BRCItemID",&,N,V_rootItemIDToLookup
T@"BRCClientZone",&,N,V_clientZone
copyShareCompletionBlock
T@?,C,N,V_copyShareCompletionBlock
SELECT li.rowid, li.zone_rowid, li.item_id, li.item_creator_id, li.item_sharing_options, li.item_side_car_ckinfo, li.item_parent_zone_rowid, li.item_localsyncupstate, li.item_local_diffs, li.item_notifs_rank, li.app_library_rowid, li.item_min_supported_os_rowid, li.item_scope, li.item_user_visible, li.item_stat_ckinfo, li.item_state, li.item_type, li.item_mode, li.item_birthtime, li.item_lastusedtime, li.item_favoriterank,li.item_parent_id, li.item_filename, li.item_hidden_ext, li.item_finder_tags, li.item_xattr_signature, li.item_trash_put_back_path, li.item_trash_put_back_parent_id, li.item_alias_target, li.item_creator, li.item_processing_stamp, li.item_staged_file_id, li.item_staged_generation, li.item_bouncedname, li.item_local_change_count, li.item_old_version_identifier, li.version_name, li.version_ckinfo, li.version_mtime, li.version_size, li.version_thumb_size, li.version_thumb_signature, li.version_content_signature, li.version_xattr_signature, li.version_edited_since_shared, li.version_device, li.version_conflict_loser_etags, li.version_quarantine_info, li.version_uploaded_assets, li.version_upload_error, li.version_local_change_count, li.version_old_version_identifier, li.item_live_conflict_loser_etags, li.item_file_id, li.item_generation FROM client_items AS li  INNER JOIN client_sync_up AS su    ON su.throttle_id = li.rowid  WHERE         su.throttle_state = 50    AND su.throttle_state != 0    AND su.zone_rowid = %@    AND su.in_flight_diffs IS NULL    AND li.item_type IN (1, 8, 5, 6, 3)    AND li.item_state = 0    AND li.item_localsyncupstate = 4    AND li.item_min_supported_os_rowid IS NULL
SELECT li.rowid, li.zone_rowid, li.item_id, li.item_creator_id, li.item_sharing_options, li.item_side_car_ckinfo, li.item_parent_zone_rowid, li.item_localsyncupstate, li.item_local_diffs, li.item_notifs_rank, li.app_library_rowid, li.item_min_supported_os_rowid, li.item_scope, li.item_user_visible, li.item_stat_ckinfo, li.item_state, li.item_type, li.item_mode, li.item_birthtime, li.item_lastusedtime, li.item_favoriterank,li.item_parent_id, li.item_filename, li.item_hidden_ext, li.item_finder_tags, li.item_xattr_signature, li.item_trash_put_back_path, li.item_trash_put_back_parent_id, li.item_alias_target, li.item_creator, li.item_processing_stamp, li.item_staged_file_id, li.item_staged_generation, li.item_bouncedname, li.item_local_change_count, li.item_old_version_identifier, li.version_name, li.version_ckinfo, li.version_mtime, li.version_size, li.version_thumb_size, li.version_thumb_signature, li.version_content_signature, li.version_xattr_signature, li.version_edited_since_shared, li.version_device, li.version_conflict_loser_etags, li.version_quarantine_info, li.version_uploaded_assets, li.version_upload_error, li.version_local_change_count, li.version_old_version_identifier, li.item_live_conflict_loser_etags, li.item_file_id, li.item_generation FROM client_items AS li  INNER JOIN client_sync_up AS su  ON su.throttle_id = li.rowid  WHERE         su.throttle_state = 50    AND su.throttle_state != 0    AND su.zone_rowid = %@    AND su.in_flight_diffs IS NULL    AND li.item_type IN (0, 9, 10)    AND li.item_state = 0    AND li.item_localsyncupstate = 4    AND li.item_min_supported_os_rowid IS NULL
SELECT li.rowid, li.zone_rowid, li.item_id, li.item_creator_id, li.item_sharing_options, li.item_side_car_ckinfo, li.item_parent_zone_rowid, li.item_localsyncupstate, li.item_local_diffs, li.item_notifs_rank, li.app_library_rowid, li.item_min_supported_os_rowid, li.item_scope, li.item_user_visible, li.item_stat_ckinfo, li.item_state, li.item_type, li.item_mode, li.item_birthtime, li.item_lastusedtime, li.item_favoriterank,li.item_parent_id, li.item_filename, li.item_hidden_ext, li.item_finder_tags, li.item_xattr_signature, li.item_trash_put_back_path, li.item_trash_put_back_parent_id, li.item_alias_target, li.item_creator, li.item_processing_stamp, li.item_staged_file_id, li.item_staged_generation, li.item_bouncedname, li.item_local_change_count, li.item_old_version_identifier, li.version_name, li.version_ckinfo, li.version_mtime, li.version_size, li.version_thumb_size, li.version_thumb_signature, li.version_content_signature, li.version_xattr_signature, li.version_edited_since_shared, li.version_device, li.version_conflict_loser_etags, li.version_quarantine_info, li.version_uploaded_assets, li.version_upload_error, li.version_local_change_count, li.version_old_version_identifier, li.item_live_conflict_loser_etags, li.item_file_id, li.item_generation FROM client_items AS li  INNER JOIN client_sync_up AS su    ON su.throttle_id = li.rowid  WHERE         su.throttle_state = 50    AND su.throttle_state != 0    AND su.zone_rowid = %@    AND su.in_flight_diffs IS NULL    AND li.item_state = 1    AND li.item_localsyncupstate = 4    AND NOT EXISTS(SELECT 1 FROM client_items AS ci                     WHERE li.item_id = ci.item_parent_id                      AND ci.zone_rowid = su.zone_rowid LIMIT 1)    AND li.item_min_supported_os_rowid IS NULL
v16@?0@"BRCItemID"8
orphan.live
SELECT COUNT(*) FROM client_items  WHERE item_parent_id = %@     AND item_localsyncupstate = 4    AND NOT indexset_contains(%p, rowid)    AND zone_rowid = %@
orphan.tombstone
batchSize
TI,R,N,V_batchSize
retryAfter
TQ,R,N,V_retryAfter
T@"BRCLocalItem",R,N,V_itemNeedingPCSChaining
shareRecordIDsNeedingDelete
T@"NSMutableSet",R,N,V_shareRecordIDsNeedingDelete
side-car.sync-up
SELECT item_state, item_side_car_ckinfo FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT item_side_car_ckinfo FROM side_car_lookahead WHERE record_name = %@
SELECT li.rowid, li.zone_rowid, li.item_id, li.item_creator_id, li.item_sharing_options, li.item_side_car_ckinfo, li.item_parent_zone_rowid, li.item_localsyncupstate, li.item_local_diffs, li.item_notifs_rank, li.app_library_rowid, li.item_min_supported_os_rowid, li.item_scope, li.item_user_visible, li.item_stat_ckinfo, li.item_state, li.item_type, li.item_mode, li.item_birthtime, li.item_lastusedtime, li.item_favoriterank,li.item_parent_id, li.item_filename, li.item_hidden_ext, li.item_finder_tags, li.item_xattr_signature, li.item_trash_put_back_path, li.item_trash_put_back_parent_id, li.item_alias_target, li.item_creator, li.item_processing_stamp, li.item_staged_file_id, li.item_staged_generation, li.item_bouncedname, li.item_local_change_count, li.item_old_version_identifier, li.version_name, li.version_ckinfo, li.version_mtime, li.version_size, li.version_thumb_size, li.version_thumb_signature, li.version_content_signature, li.version_xattr_signature, li.version_edited_since_shared, li.version_device, li.version_conflict_loser_etags, li.version_quarantine_info, li.version_uploaded_assets, li.version_upload_error, li.version_local_change_count, li.version_old_version_identifier, li.item_live_conflict_loser_etags, li.item_file_id, li.item_generation FROM client_items AS li  INNER JOIN client_sync_up AS su    ON su.throttle_id = li.rowid  WHERE         su.throttle_state = 50    AND su.throttle_state != 0    AND su.zone_rowid = %@    AND su.in_flight_diffs IS NULL    AND li.item_stat_ckinfo IS NOT NULL    AND li.item_localsyncupstate = 4    AND li.item_min_supported_os_rowid IS NULL
sync-up/container-metadata
shouldPerformAnotherBatch
TB,R,N,V_shouldPerformAnotherBatch
T@"BRCVersion",&,N,V_version
addition
T@"GSAddition",&,N,V_addition
additionName
T@"NSString",&,N,V_additionName
genstoreURL
T@"NSURL",&,N,V_genstoreURL
faultURL
T@"NSURL",&,N,V_faultURL
lastEditorNameComponents
T@"NSPersonNameComponents",&,N,V_lastEditorNameComponents
non-local-versions %@
-[BRCNonLocalVersionsSender _updateStorageFromURL:]
v32@?0@"NSString"8@"NSPersonNameComponents"16^B24
com.apple.clouddocs.version
v36@?0@"CKRecordID"8B16@"NSArray"20@"NSError"28
includeCachedVersions
TB,N,V_includeCachedVersions
z:%@
r:%lld
throttle_id = %lld
throttle_id
Tq,R,N,V_itemDBRowID
%@:%lld
throttle_id = %lld AND zone_rowid = %@
%lld, %@
intID
Tq,R,N,V_intID
dflwx
MbP?
4@333333
 A(knN
@(#)PROGRAM:iCloudDriveCore  PROJECT:iCloudDrive-29
[CRIT] UNREACHABLE: No device ID!
[NOTICE] on device: %@
[CRIT] Assertion failed: acAccountID
[INFO] 
%llx 
[DEBUG] 
%llx 
[ERROR] Can't open database at %@: %@
[ERROR] Can't close database at %@: %@
[ERROR] Can't insert into the database %@: %@
[ERROR] Could not create a unique index %@: %@
[INFO] Populating new columns with base path: %@
[ERROR] Unable to fetch URL properties for %@: %@
[DEBUG] Updating %@ %@ %d into database for %@
[ERROR] Failed to update %@ %@ %d into database for %@: %@
[INFO] Attaching database %@
[ERROR] Already have attached database %@ while trying to attach database %@.
[ERROR] Unable to attach db %@: %@
[ERROR] Failed to open %@
[ERROR] failed closing %@
[ERROR] Not updating attached database because no database has been attached.
[INFO] Updating attached database %@ %@
[DEBUG] Beginning update attach database batch: %@
[DEBUG] Successfully finished updating attach database batch: %@
[ERROR] Failed to negate file ids
[DEBUG] Changed %lld items when negating file ids
[ERROR] Failed to negate doc ids
[DEBUG] Changed %lld items when negating doc ids
[ERROR] Failed to create file_id_gen_count_index, so updating will be incredibly slow: %@
[DEBUG] Created file_id_gen_count_index
[ERROR] Failed to create doc_id_index, so updating will be incredibly slow: %@
[DEBUG] Created doc_id_index
[ERROR] Failed to update the gen count
[DEBUG] Changed %lld items when updating gen counts
[ERROR] Failed to update the file ids
[DEBUG] Changed %lld items when updating file ids
[ERROR] Failed to update the doc ids
[DEBUG] Changed %lld items when updating doc ids
[DEBUG] Changed %lld items when clearing the staged generation ids
[ERROR] Failed to update the staged file ids
[DEBUG] Changed %lld items when clearing the staged file ids
[ERROR] Unable to get inode for %@: %@
[ERROR] Failed to update the backup detector value
[DEBUG] Patched the backup detector
[ERROR] Sqlite request %@ failed on %@ with error [%@]
[ERROR] Sqlite failed on %@ with error [%@]
[CRIT] UNREACHABLE: Got really unexpected error: %@
[WARNING] Possible slow statement on %@:
  binds:    %d
  changes:  %lld
  vm steps: %d (max: %lu)
  sql:      %s
  %@
[WARNING] Possible slow statement on %@:
  binds:    %d
  columns:  %d
  rows:     %ld
  vm steps: %d (max: %lu)
  sql:      %s
  %@
[DEBUG] Statement can trigger a large recursive update so not significantly too slow
[CRIT] Significantly too slow SQL statement ( vm steps: %u  max:%lu ): %s
[ERROR] %s: %s error: %@
[CRIT] API MISUSE: you need to provide a radar
[CRIT] API MISUSE: you need to an index to use
[CRIT] Assertion failed: block
[CRIT] Assertion failed: _batchingPacer
[DEBUG] 
%llx creating operation %@
BRCOperation/? (subclass activity missing)
[DEBUG] 
%llx now using group: %@
[DEBUG] 
%llx dealloc
[CRIT] Assertion failed: !_executionTransaction
[CRIT] Assertion failed: self.finished
[DEBUG] throttle backoff: %03fs for hash:0x%016llx
[DEBUG] server provided backoff: %.03fs
[CRIT] %@ has been blacklisted and won't be attempted again
[DEBUG] attempting execution again in %.03fs
[DEBUG] 
%llx retrying %@
[CRIT] UNREACHABLE: Operation %@ is missing syncContext
[DEBUG] scheduling %@
[DEBUG] 
%llx starting %@
[DEBUG] 
%llx cancelling %@
[DEBUG] Removed %@ as dependency of cancelled op %@
[DEBUG] 
%llx finishing %@
[DEBUG] 
%llx %@%@ %@%@%@
[WARNING] We are blacklisted! Not notifying about finishing %@
[CRIT] UNREACHABLE: there should be a group created for %@
[DEBUG] (%@) Queuing %@
[CRIT] Assertion failed: context
[CRIT] UNREACHABLE: Sub-operation of a discretionary op is nonDiscretionary?
[CRIT] Assertion failed: _syncContext
[DEBUG] 
%llx dispatching to %s
[DEBUG] 
%llx continuing on %s
sync/sharedb
[DEBUG] inserted new ownerKey %@ for %@
[DEBUG] 
%llx Handling result of creating %@ (operationID=%@): %@
[DEBUG] %@ zone %@ changed
[ERROR] %@ failed: %@
[DEBUG] 
%llx %@ done: %u zones were changed and %u deleted
[DEBUG] scheduling sync for %@
[CRIT] UNREACHABLE: there should be a container
[DEBUG] updating shared-database from %@ with token:%@ caught-up:%s
[DEBUG] 
%llx Sync: fetching changed zones in the shared-database
[CRIT] UNREACHABLE: Couldn't allocate ranks when fetching query %@
[CRIT] UNREACHABLE: got a document without a document fileObjectID:%@ %@
[CRIT] Assertion failed: ![_fileObjectID isDocument]
[CRIT] Assertion failed: finderTags.tagsCount > 0
[CRIT] UNREACHABLE: item %@ in shared zone "%@" should have share-options set (actual:%lu %@)
[CRIT] Assertion failed: hasPrivateShare != hasPublicShare || item.isDead
[CRIT] Assertion failed: [item.serverZone.dbRowID isEqualToNumber:_parentGlobalID.zoneRowID]
[NOTIF] issued sandbox extension for %@
[ERROR] failed to issue sandbox extension for %@: %@
[CRIT] Assertion failed: self.hasPid
[CRIT] Assertion failed: _hasAuditToken
[DEBUG] %@ is restricted from sync (TCC)
[DEBUG] %@ is restricted from sync (MC)
[NOTIF] published progress for %@
[NOTIF] unpublished progress for %@
[NOTIF] Added progress %@ for %@
[NOTIF] No url to publish
[NOTIF] 
%llx User requested to cancel download for %@
[NOTIF] progress: publishing progress on %@
[NOTIF] progress: publishing on %@: %@
[ERROR] progress: Can't publish progress on %@: %@
[CRIT] Assertion failed: self.isSharedToMeTopLevelItem
[CRIT] Assertion failed: _serverZone.isSharedZone
[CRIT] Assertion failed: aliasZone.isPrivateZone
[ERROR] %@ has been CZM but we don't know it yet.  Not allowing alias sync
[CRIT] Assertion failed: _db.isBatchSuspended
[WARNING] Parent zone updated on %@, clearing ckinfo.  We should insert a dead item here but aren't
[CRIT] Assertion failed: existingAlias.isDead
[DEBUG] deleting existing alias %@ because the shared item moved here
[ERROR] no metadata for %@
[DEBUG] %@ is disabled by TCC
[CRIT] UNREACHABLE: can't open interactive DB: %@
[WARNING] Corrupting handling is already in-flight
[CRIT] UNREACHABLE: Failed to set the cache size - %@
[CRIT] UNREACHABLE: Failed to set the cache spill - %@
[CRIT] Assertion failed: argc >= 1
[CRIT] Assertion failed: !set || [set isKindOfClass:[NSIndexSet class]]
[CRIT] API MISUSE: is_parented_or_equal_to(Container, parent_id, parentId_or_Set)
[CRIT] UNREACHABLE: we have a cycle
[DEBUG] recursive update of %lld
[DEBUG] database backup detector initialized {old:%llu; new:%llu; c:%llu}
[WARNING] backup detected: ino %llu instead of %llu at '%s'
[DEBUG] failed stating '%s' %{errno}d
[DEBUG] mismatch on new control file '%s': %llu != %llu
[DEBUG] database backup detector updated {old:%llu -> %llu; new:%llu -> %llu; c:%llu -> %llu}
[WARNING] can't remove %@: %@
[CRIT] Assertion failed: sct.dbRowID
[CRIT] UNREACHABLE: saving the container state should always work
[CRIT] Assertion failed: lcz.dbRowID
[CRIT] UNREACHABLE: saving the zone state should always work
[ERROR] Failed to create server zone %@:  %@
[CRIT] UNREACHABLE: sct.dbRowID is %@ lastInsertedRow is %lld
[ERROR] trying to create server zone that already exists
[CRIT] Assertion failed: rowID
[CRIT] UNREACHABLE: got a new rowid for already existing zone (sct.dbRowID=%@ rowID=%@)
[CRIT] UNREACHABLE: Failed to update plist for zone %@: %@
[CRIT] UNREACHABLE: couldn't allocate a rowid
[CRIT] Assertion failed: lib.zoneRowID
[CRIT] UNREACHABLE: saving the app library state should always work
[CRIT] Assertion failed: lib.dbRowID
[CRIT] Assertion failed: plist
[CRIT] Assertion failed: plist != nil
[CRIT] Assertion failed: mangedID
[DEBUG] this is the first time we hear of a device named '%@'
[CRIT] UNREACHABLE: can't insert device name: '%s'
[CRIT] UNREACHABLE: formatted name for %@ is nil or empty (identity:%@)
[DEBUG] learning name '%@' for user %@
[CRIT] Assertion failed: userIdentity
[CRIT] UNREACHABLE: participant %@ has no identity
[DEBUG] user %@ has identity %@
[CRIT] UNREACHABLE: nameless identity: %@ (user %@)
[CRIT] UNREACHABLE: userName shouldn't be nil
[CRIT] Assertion failed: ![userName isEqualToString:CKCurrentUserDefaultName]
[CRIT] UNREACHABLE: can't insert user name: '%@': %@
[DEBUG] this is the first time we hear of a user named '%@'
[DEBUG] clearing needs-upgrade errors
[NOTICE] CloudDocs was upgraded from [%@ on %@] to [%@ on %@]
[CRIT] Assertion failed: _databaseID
[DEBUG] loaded client-state %@
[CRIT] Assertion failed: sself
[DEBUG] 
%llx db pre-flush: flushing client-state %@
[DEBUG] Saved zone state for %@
[DEBUG] Saved app library state for %@
[DEBUG] 
%llx db post flush
[CRIT] disk is full, restarting: %@
[CRIT] UNREACHABLE: Failed to enable recursive triggers - %@
[ERROR] failed to signal data scope re-import of %@ on startup - %@
[DEBUG] Successfully asked file provider to re-import all root data scope items on startup
[ERROR] failed to signal documents scope re-import of %@ - %@
[DEBUG] Successfully asked file provider to re-import all root documents scope items on startup
[ERROR] unable to truncate database: %d; %s
[ERROR] can't unlink '%@' %{errno}d
[ERROR] can't reopen db after truncate: %@
[NOTICE] doing an internal fixup from %d to %d
[ERROR] can't internal fixup from version %d to %d: %@
[NOTICE] fixuping database from version %d to %d
[ERROR] can't fixup from version %d to %d: %@
[WARNING] your database comes from a compatible future (db at version %d, current is %d)
[DEBUG] no database migration required, version is current (db at version %d)
[NOTICE] migrating %s database from version %d to %d
[ERROR] can't migrate from version %d to %d: %@
[ERROR] can't set user version to %u: %@
[CRIT] Assertion failed: db_version == schema_upgrades[i].version
[CRIT] Assertion failed: db_version == DB_VERSION_CURRENT
[CRIT] Assertion failed: _serverDB.serialQueue
[CRIT] Assertion failed: _clientDB.serialQueue
[CRIT] Assertion failed: readOnlyDB.serialQueue
[DEBUG] 
%llx dumping database
[DEBUG] dumping container %@
[DEBUG] Encountered an error %@ running stmt %@
[DEBUG] dumping client zone %@
[ERROR] failed unlinking '%s' %{errno}d
[ERROR] failed opening '%s' %{errno}d
[ERROR] failed stating '%s' %{errno}d
[ERROR] failed closing '%s'
[CRIT] Internal users only version %d.%03d has seen an ulterior change and needs to be reset
[CRIT] database is stale, can't be migrated (db at version %d, migration range [%d,%d])
[CRIT] database has a major version from the future: %d (want at most %d)
[DEBUG] received a managed restriction changed notification - %@
[DEBUG] jetsaming %@
[ERROR] can't delete account file %{errno}d
[ERROR] can't write account ID: %@
[DEBUG] 
%llx unregistering activities and the like
[WARNING] both %@ and %@ are present on disk
[INFO] found path %@ to be migrated
[WARNING] found path %@, but the path cannot be migrated
[WARNING] no existing path found in %@
[INFO] source does not exist
[INFO] colliding, bouncing target to %@
[CRIT] cannot initiate migration: %@
[INFO] cannot select a single document path to migrate
[INFO] migrating data from:
  acount=%@
  data=%@
  clouddocs=%@
[WARNING] some folders appear to have been migrated out of order
[INFO] moving account to migration folder: %@ -> %@
[CRIT] cannot import old account directory: %@
[INFO] moving data scope to migration folder: %@ -> %@
[CRIT] cannot import old Mobile Documents directory: %@
[INFO] extracting document scope from data scope: %@ -> %@
[ERROR] cannot import old com~apple~CloudDocs directory: %@
[DEBUG] cannot initialize offline database: %@
[INFO] moving public document scope for app library %@: %@ -> %@
[WARNING] cannot migrate app library %@: %@
[ERROR] couldn't create service URL at %@: %@
[DEBUG] Created service URL on migration %@
[INFO] creating the document scope domain: %@
[WARNING] document scope domain already exist
[ERROR] cannot create the document scope domain: %@
[INFO] no document scope to import
[INFO] creating the data scope domain: %@
[WARNING] data scope domain already exist
[ERROR] cannot create the data scope domain: %@
[INFO] no data scope to import
[INFO] cannot preserve the ubiquityTokenSalt
[INFO] cannot install the new session: %@
[INFO] 
%llx attempting migration of data for account %@
[INFO] db directory already exist
[DEBUG] No session folder in %@
[DEBUG] Account ids match!
[DEBUG] source account id %@ is not equal to accound id %@
[DEBUG] No db account id found for %@
[INFO] cannot select an account folder to migrate
[INFO] cannot select a data path to migrate
[ERROR] cannot create migration marker: %@
[WARNING] cannot garbage collection the migration directory: %@
[INFO] migration done
[DEBUG] 
%llx loaded system account ID: %@ (db ID: %@)
[DEBUG] 
%llx deleting account on disk
[DEBUG] 
%llx setting disk account %@
[CRIT] UNREACHABLE: disk account ID doesn't match system account ID
[CRIT] UNREACHABLE: not loading account %@ because we cannot create set account id on disk
[DEBUG] 
%llx Loading current on-disk account: %@
[NOTICE] using account %@
[DEBUG] 
%llx jetsaming clients
[CRIT] Assertion failed: session
[DEBUG] removing '%@'
[ERROR] can't remove account %{errno}d
[CRIT] timed out waiting for %u seconds for account session to close!
[DEBUG] 
%llx destroying current session
[CRIT] Can't acquire coordinated disconnect at {%@}: %@, proceeding anyway
[DEBUG] acquired coordinated disconnect at {%@}
[CRIT] UNREACHABLE: timed out waiting for %u seconds for coordinated disconnect!
[ERROR] failed loading salt: %@
[CRIT] UNREACHABLE: can't load salt, bad bug ahead
[DEBUG] generating new salt
[ERROR] failed creating salt directory '%@': %@
[ERROR] failed writing salt data to '%@': %@
[ERROR] failed excluding salt data at '%@' from backups: %@
[ERROR] Failed to open account session: %@
[ERROR] Your database is from the future, disabling iCloud Drive (%@)
[DEBUG] No space on disk to open the db
[DEBUG] Local session state has beeen resetted, try opening the session for the second time
[DEBUG] Starting up at %@
[DEBUG] 
%llx creating account session for %@
[CRIT] Assertion failed: _session == nil
[WARNING] we are already logged in %@
[CRIT] Assertion failed: [NSString brc_dbAccountIDForPath:self.accountPath] == nil || [[NSString brc_dbAccountIDForPath:self.accountPath] isEqualToString:accountID]
[DEBUG] 
%llx destroying account for %@
[NOTICE] stop using account %@
[CRIT] Assertion failed: [_dbAccountID isEqualToString:_session.accountID]
[DEBUG] 
%llx creating account for %@
[NOTICE] now using account %@
[ERROR] can't create account session: %@
[DEBUG] sending apps account change notification
[ERROR] can't remove account belonging to account %@ %{errno}d
[DEBUG] Account hasn't really changed, do nothing
[DEBUG] Cleaning up session on disk belonging to account %@
[DEBUG] Cleaning up previous session belonging to account %@, to make room for new account %@
[CRIT] Assertion failed: BRCItemTypeIsFinderBookmark(_st.type)
[CRIT] UNREACHABLE: -asShareableItem called on a non-shareable item
[DEBUG] Failed to look up alias record %@ - %@
[DEBUG] Successfully looked up alias record %@
[CRIT] UNREACHABLE: parent isn't a reference %@
[CRIT] UNREACHABLE: Can't alloc ranks after fetching alias
[DEBUG] Fetching share alias recordID %@ in zone %@
[CRIT] Assertion failed: [metric.eventName isEqualToString:kind]
[DEBUG] analytics: creating %@ event for fileID %lld
[DEBUG] analytics: creating %@ event
[DEBUG] associated %@ to event metric %@
[CRIT] UNREACHABLE: needs override
[DEBUG] analytics: submitting event %@
sharing.fetch-user-record-id
[CRIT] UNREACHABLE: state is of unexpected class %@
[CRIT] UNREACHABLE: update time is of unexpected class %@
[DEBUG] We don't have a container for %@
[DEBUG] 
%llx starting a fetch-record-changes operation for health zone
[DEBUG] 
%llx got a changed record %@ in operation %@
[CRIT] Assertion failed: ![self->_deletedRecordIds containsObject:record.recordID]
[CRIT] Assertion failed: self->_recordsByID[record.recordID] == nil
[DEBUG] ignoring zone details record %@ in operation %@
[WARNING] ignoring record of unexpected type %@ in operation %@
[DEBUG] 
%llx recordID was deleted %@ in operation %@
[CRIT] Assertion failed: ![self->_deletedRecordIds containsObject:recordID]
[CRIT] Assertion failed: self->_recordsByID[recordID] == nil
[DEBUG] 
%llx Received token update %@, requestID %llu
[DEBUG] 
%llx finished sync down of zone-health %@ with requestID %llu changeToken %@
[DEBUG] No zone-health zone %@: %@
[ERROR] Failed syncing down zone-health op %@: %@
[DEBUG] 
%llx sync down of zone-health-check was cancelled?
[DEBUG] 
%llx config: asynchronously fetching %@
[NOTICE] loading iCloud Drive configuration from disk
[NOTICE] downloading iCloud Drive configuration
[DEBUG] scheduling config download %@
[DEBUG] 
%llx config: initial load
[DEBUG] config: not updating the configuration, waiting for next activity callback
[WARNING] Failed to defer the xpc configuration fetch xpc activity
[DEBUG] 
%llx config: it's activity time
[DEBUG] 
%llx config: download task finished %@, plist %@
[ERROR] config: session %@ become invalid: %@
[ERROR] config: can't download task %@%@: %@
[DEBUG] config: download finished for %@
[WARNING] fileURL is excluded at %@
[ERROR] fgetattrlist(%d) at '%@' failed %{errno}d
[DEBUG] Inappropriate file type %c%c%c%c%c%c%c%c%c%c for %@
[DEBUG] Busy file at '%@' fileID:%llu gen:%u bt:%llu
[ERROR] failed to unlink legacy ubiquity %s fault at '%@' %{errno}d
[NOTICE] cleaned up legacy ubiquity %s fault at '%@'
[DEBUG] Inappropriate location or an alias for '%@'
[DEBUG] Directory is marked as alias, ignoring '%@'
[WARNING] Can't read xattr for '%@' %{errno}d
[DEBUG] BR alias is ignored at '%@'
[WARNING] Excluding item with promise name that isn't a promise '%@'
[WARNING] Can't read symlink at '%s'
[CRIT] Assertion failed: _symlinkContent.fileSystemRepresentation != nil
[ERROR] Failed opening %@ %{errno}d
[CRIT] Assertion failed: _type == BRC_ITEM_TYPE_ALIAS
[CRIT] Assertion failed: containerID
[CRIT] UNREACHABLE: Stat shouldn't be nil
[CRIT] Assertion failed: creatorRowIDLongLongValue >= 0
[CRIT] Assertion failed: ![self _hasLastEditorRowID]
[CRIT] Assertion failed: lastEditorDeviceRowID && lastEditorDeviceRowID.longLongValue > 0
[CRIT] Assertion failed: !_lastEditorDeviceOrUserRowID || ![self _hasLastEditorDeviceRowID]
[CRIT] Assertion failed: lastEditorRowIDLongLongValue >= 0
[CRIT] Assertion failed: _contentSignature
[DEBUG] Not being greedy because current version size is 0
[DEBUG] Not being greedy because document is bigger %@ than minimum size (%@) to generate a thumbnail
[DEBUG] Being greedy because the document is small %@ and QL can generate a thumbnail for %@
[DEBUG] Not being greedy even though the document is small %@: QL can
t generate a thumbnail for %@
[ERROR] invalid signature in %@
[CRIT] UNREACHABLE: mutex error: %s
[CRIT] UNREACHABLE: server zone not found
[ERROR] An accept operation is already running for %@
[INFO] Starting up in the sync bubble
[DEBUG] 
%llx handling account session changes from %@
[DEBUG] 
%llx handling account session changes to %@
[CRIT] Assertion failed: _session != newSession
[ERROR] failed to signal enumerator for root container: %@
[CRIT] this method should never be called
[NOTICE] welcome to iclouddrive extension pid:%d for domain: %@ (%p)
[DEBUG] Process assertion expired.  Exiting...
[DEBUG] acquired a process assertion on ourselves
[DEBUG] 
%llx acknowledging user visible root location change to %@
[CRIT] Assertion failed: self->_accountHandler
[CRIT] Assertion failed: !BRIsDefaultDomain(self.domain)
[ERROR] won't restore persona: %@
[DEBUG] 
%llx creating item based on template %@ at '%@' in %s scope fields:%llu options:%llu
[DEBUG] returning item %@
[DEBUG] 
%llx deleting item %@
[DEBUG] Structure signature mismatch for deletion %@ vs %@
[DEBUG] Content signature mismatch for deletion %@ vs %@
[CRIT] UNREACHABLE: Failed to save to db without an error
[DEBUG] 
%llx fetch publishing URL for %@
[DEBUG] We're finished importing items to fpfs in %s scope
[DEBUG] Always returning logged out in the default domain
[DEBUG] %s: %s error: %@
[DEBUG] 
%llx asked properties for %s %@
[CRIT] UNREACHABLE: Item mysteriously changed document-ness for file objectID %@
[DEBUG] 
%llx [%@] enumerator for %@
[DEBUG] 
%llx [%@] search enumerator for %@
[DEBUG] width (%.2f) is greater than max width (%.2f)
[DEBUG] height (%.2f) is greater than max height (%.2f)
[DEBUG] width (%.2f) and height (%.2f) should be equal for container's thumbnail
[ERROR] can't find container with ID %@
[ERROR] can't find image with size %@ for %@
[DEBUG] downloading file with identifier %@ because quicklook it's a small file for which quicklook can generate athumbanil
[ERROR] can't fetch url for %@: %@
[DEBUG] done fetching url for %@: %@
[DEBUG] error when downloading the file to generation the thumbnail %@/%@: %@
[DEBUG] done downloading the file to generation the thumbnail %@: %@
[DEBUG] 
%llx starting fetch thumbnail for %@
[DEBUG] no thumbnail left to fetch
[DEBUG] 
%llx fetching the thumbnails for: %@
[DEBUG] 
%llx received a thumbnail callback for %@
[DEBUG] received a thumbnail of %lu bytes for %@
[ERROR] error when fetching thumbnail for %@: %@
[DEBUG] no thumbnail found for a non-empty file
[DEBUG] empty record for %@
[DEBUG] 
%llx completed fetching thumbnail batch for %@
[ERROR] error while fetching thumbnail batch for %@: %@
[DEBUG] scheduling operation %@ for zone: %@
[DEBUG] 
%llx completed fetching thumbnail batch
[WARNING] Couldn't copy from liveURL to new stage URL - %@
[ERROR] Couldn't get user visible file to download losers for %@ - %@
[WARNING] Couldn't find %@ after refreshing
[CRIT] Assertion failed: !documentItem.isPackage && !documentItem.isFinderBookmark && !documentItem.isSymLink
[DEBUG] %@: %f -> %@
[DEBUG] Completed downloading contents of %@
[CRIT] UNREACHABLE: No file content and no package content on %@
[DEBUG] Finished fetching record content for %@ - %@
[CRIT] UNREACHABLE: No error and per record completion block wasn't called
[DEBUG] scheduling operation %@
[DEBUG] Asked to fetch contents for %@ - %@
[WARNING] No item found for identifier %@
[WARNING] Couldn't get user visible url for %@ - %@
[WARNING] Couldn't get temp dir url %@
[WARNING] Couldn't create symbolic link %@
[ERROR] Unable to stage symlink: %@
[ERROR] Asked for an item identifier that isn't a document %@
[ERROR] %@ is staged for materialization, but we can't locate the fileURL
[CRIT] UNREACHABLE: live URL f:%lld g:%u doesn't match fileIDToUpload for %@
[DEBUG] Downloading most recent version for %@
[DEBUG] Downloading old etag %@ for %@
[DEBUG] Waiting for sync down of the item to complete before download for %@
[DEBUG] Blocking download of %@ on accept op %@
[CRIT] UNREACHABLE: No etag found to fetch for %@
[WARNING] No assets found on record %@
[ERROR] Couldn't stat existing contents at %@ %{errno}d
[WARNING] Couldn't move manifest from download url %@ to stage url %@ - %@
[WARNING] Couldn't stage package - %@
[WARNING] Couldn't remember stage id - %@
[CRIT] UNREACHABLE: Couldn't find just downloaded file
[DEBUG] Performing 2-phase package fetch from existing contents %@ for %@
[CRIT] UNREACHABLE: No etag found
[WARNING] Item not found on fetch %@
[WARNING] No assets found on %@
[WARNING] Couldn't prepare package for second stage - %@
[DEBUG] Completed first package download phase for %@ - %@
[DEBUG] Skipping first package download phase
[DEBUG] Asked to fetch updated contents for %@: %@ -> %@
[DEBUG] New version is equivalent to old version so returning the requested content right away
[DEBUG] Item changed %@ base version %@ fields %llu
[DEBUG] 
%llx invalidating our NSMDQ pipes because user visible file did change
[DEBUG] Returning services for domain %@ identifier %@ - %@
[DEBUG] 
%llx lookup for default location of %@
[CRIT] Assertion failed: !_isDataScopeDomain
[DEBUG] creating default Documents folder
[ERROR] can't find bundle with id '%@'
[DEBUG] bundle '%@' is not entitled to used iCloud Drive
[CRIT] UNREACHABLE: couldn't create app library %@
[CRIT] UNREACHABLE: Couldn't get documents folder for %@
[DEBUG] Uploading all files in the sync bubble
[DEBUG] Finished uploading all files in the sync bubble - %@
[CRIT] Assertion failed: _getIndex(self, o) == nil
[CRIT] Assertion failed: _array[index] == o
[CRIT] Assertion failed: !_isOpen
account-waiter
[DEBUG] 
%llx handling account change
[DEBUG] 
%llx waiting for account status
[CRIT] UNREACHABLE: Can't wait for account changes without a container
[DEBUG] 
%llx got status %ld
[ERROR] Error when asking CloudKit about the account status: %@
[DEBUG] No account loaded yet, let's wait for the account notification from CloudKit
[DEBUG] Account is restricted let's wait for a notification from CloudKit
[CRIT] UNREACHABLE: unknown account status
[DEBUG] Account is now available
[CRIT] UNREACHABLE: No server config url found
[DEBUG] 
%llx Loaded %lu system icloud accounts
[ERROR] couldn't get existing domains: %@
[INFO] Removing domain %@ since it doesn't have a backing AC account
[ERROR] couldn't remove domain %@: %@
[DEBUG] Successfully removed domain %@
[DEBUG] Created service URL %@
[ERROR] could not add domain %@: %@
[DEBUG] Successfully added domain %@
[CRIT] Assertion failed: domain
[INFO] Logging out for persona %@
[INFO] Removing domains
[INFO] Removing domain %@ for
[ERROR] could not remove domain %@: %@
[ERROR] Failed to destroy session during logout
[DEBUG] 
%llx %@: scheduling
[DEBUG] cancelled
[CRIT] Assertion failed: jobID
[CRIT] Assertion failed: stamps.state != BRCJobStateInvalid
[DEBUG] %@[%@]: post-poning job
[CRIT] Assertion failed: _session.clientDB.changes <= 1
[DEBUG] %@[%@]: created job with state %s
[DEBUG] %@[%@]: updated job %s->%s
[CRIT] Assertion failed: state >= BRCJobStateSuspendedBase
[DEBUG] %@: retrying %lld suspended jobs matching %@ in %s
[CRIT] Assertion failed: throttle
[CRIT] Assertion failed: !rs.next
[DEBUG] %@[%@]: backing off %.3fs (count: %d)
[DEBUG] %@[%@]: Updated %lld jobs to state %s
[DEBUG] %@[%@]: Deleted %lld jobs
[DEBUG] %@[%@]: resetting backoff for job
[DEBUG] %@: Cleaned up %lld expired jobs
[CRIT] API MISUSE: should be implemented by subclass
[DEBUG] %@: nothing schedulable, going to sleep %s
[DEBUG] %@: going to sleep for %.3fs
[DEBUG] %@: resuming!
[DEBUG] %@: suspending!
[CRIT] Assertion failed: self.isCancelled
[NOTIF] %@: gathering from %lld to %lld
[NOTIF] matching prefix: %@
[CRIT] Assertion failed: count >= 0
[CRIT] Assertion failed: appLibrary
[NOTIF] 
%llx Looking for item with ranks >= %lld in %@ (%ld kind %@)
[NOTIF] %@: queued gathered notification %@
[CRIT] Assertion failed: phaseIsDone
[NOTIF] %@: gather phase ends
[ERROR] %@: EINTR: client gather phase was invalidated
[NOTIF] 
%llx invalidating %@
[CRIT] Assertion failed: _receiver == nil
[NOTIF] 
%llx %@ got error %@
[NOTIF] Ancestor isn't resolved yet, discarding %@
[NOTIF] Learning path-match for %@ (was %@)
[NOTIF] Learning itemID for our ancestor: %@
[NOTIF] Learning new fileObjectID for %@: %@ (was %@)
[NOTIF] Update is in the trash, discarding %@
[NOTIF] Queueing INSIDE (in the scope) notification: %@
[NOTIF] Queueing INSIDE (fileObjectID match) notification: %@
[NOTIF] Queueing INSIDE (parentObjectID match) notification: %@
[NOTIF] Queueing OUTSIDE (oldParentFileObjectID match) notification: %@
[NOTIF] Queueing INSIDE (watching containers) notification: %@
[NOTIF] Queueing OUTSIDE (watching containers) notification: %@
[NOTIF] Update is "Documents", discarding: %@
[NOTIF] Update is a directory, discarding %@
[NOTIF] Update is a fault, discarding %@
[NOTIF] Queueing OUTSIDE (moved out library scope) notification: %@
[NOTIF] Queueing INSIDE (below a Documents/ folder) notification: %@
[NOTIF] Queueing INSIDE (not below a Documents/ folder) notification: %@
[NOTIF] Queueing INSIDE (below a .Trash/ folder) notification: %@
[CRIT] Assertion failed: _watchKind & WATCH_ITEM
[NOTIF] Queueing INSIDE (itemID match) notification: %@
[NOTIF] Queueing OUTSIDE (reparented) notification: %@
[NOTIF] Queueing OUTSIDE (dead item) notification: %@
[NOTIF] doing the second phase gathering
[NOTIF] Finished second phase gathering
[NOTIF] 
%llx %@: processing updates %@ [rank:%lld]
[NOTIF] dropping all updates
[NOTIF] dropping %ld updates
[NOTIF] 
%llx %@: received progress acknowledgement
[NOTIF] %@: sending %ld notifications:
[NOTIF]   %@
[NOTIF] 
%llx %@: received notification acknowledgement
[NOTIF] 
%llx fetching %lld fs items on the data domain
[NOTIF] 
%llx received %lld fs items (data)
[ERROR] couldn't get fs items for data domain; %@
[NOTIF] 
%llx fetching %lld fs items on the visible domain
[NOTIF] 
%llx received %lld visible fs items
[ERROR] couldn't get fs items for visible domain; %@
[NOTIF] 
%llx waiting for fs items
[NOTIF] 
%llx received fs items
[ERROR] couldn't get item for notif %@
[ERROR] couldn't get public url for notif %@
[ERROR] couldn't get document scope url in document scope for %@
[ERROR] couldn't get document scope url in data scope for %@
[NOTIF] %@: client is really backlogged, invalidating
[NOTIF] 
%llx %@: starting watching ubiquitous scope (docs:%d data:%d dirs:%d faults:%d trash:%d) for %@
[ERROR] %@: EALREADY: watch already set up to kind %d
[WARNING] %@: client didn't specify Document or Data Scope
[ERROR] %@: unable to find container %@
[ERROR] %@: Unable to resolve scopes
[NOTIF] Finished gather group for %@
[NOTIF] Waiting for group for list op %@
[NOTIF] Finished normal gather phase
[NOTIF] Calling gather reply callback
[CRIT] UNREACHABLE: Invalid notification pipe setup
[NOTIF] Waiting on gather group for %@
[CRIT] Assertion failed: !_listOp
[NOTIF] Finished waiting on gather group
[NOTIF] %@: started watching children of %@ (fsid:%@ id:%@ filename:%@)
[WARNING] Path %@ is not an existing container: %@
[INFO] 
%llx %@ (%@) %s 
[NOTIF] %@: watching items prefixed by "%@"
[ERROR] %@: can't watch app containers: %@
[INFO] %@: reply(%@)
[NOTIF] 
%llx dispatching to %s
[NOTIF] 
%llx continuing on %s
[CRIT] UNREACHABLE: Couldn't find %@ and no error
[DEBUG] 
%llx updating dialog...
[DEBUG] 
%llx sending user reply
[ERROR] can't create user notification: %d
[CRIT] Assertion failed: self->_source == NULL
[WARNING] ignore user notification udate: no KVO observer registered
[ERROR] can't update user notification: %d
[CRIT] Assertion failed: !shareMetadata.isFolderShare
[DEBUG] User picked %s response
[ERROR] No completion block for notification %@
[CRIT] Assertion failed: serverItem || localItem
[DEBUG] Apply Changes: retrying %lld suspended throttles (missing parent found: %@)
[DEBUG] Apply Changes: retrying %lld suspended throttles (child %@ of %@ killed or reparented)
[DEBUG] Apply Changes: retrying %lld suspended throttles (appLibrary completed migration: %@)
[DEBUG] Apply Changes: retrying suspended rank %lld
[DEBUG] Apply Changes: Rescheduled %lld items which were blocked for greediness
[DEBUG] Updated %@ to be a non-fault
[DEBUG] No point in rescheduling items under %@ because we can't make it a non-fault
[DEBUG] Apply Changes: Rescheduled %lld items which were blocked for greediness when listing folder %@
[DEBUG] Apply Changes: No unscheduled items parented to %@
[DEBUG] Rescheduling items at a flat level under %@
[CRIT] UNREACHABLE: Couldn't reschedule flat items under %@
[DEBUG] Apply Changes: repopulating throttles for zone:%@
[CRIT] UNREACHABLE: No predicted rowid for %@
apply-changes
[CRIT] Assertion failed: zone
[INFO] 
%llx Apply Changes[%@]: attempting to apply %s
  server item: %@
  local item:  %@
[CRIT] Assertion failed: si == nil
[DEBUG] 
%llx Apply Changes[%@]: deleting action without local and server item
[DEBUG] 
%llx Apply Changes[%@]: deleting rejected action with a non-rejected local item
[DEBUG] 
%llx Apply Changes[%@]: deleting useless action %lld vs %lld
[DEBUG] Signalled faulting-barrier waiters for %@
[DEBUG] Apply Changes: Cleaned up %lld stale throttles
[CRIT] UNREACHABLE: failed to insert into client_unapplied_commands: %@
[DEBUG] Apply Changes [%lld .. %lld]: in %@, %llu ranks inserted
[DEBUG] Apply Changes [] in %@, 0 ranks inserted
[DEBUG] 
%llx did sync down requestID:%llu, applying server truth on %@
[DEBUG] 
%llx did list directory contents applying server truth on %@
[ERROR] Throttle %@ isn't a dictionary
[ERROR] Platforms %@ isn't an array
[DEBUG] throttle dict %@ isn't for our platform %@
[ERROR] Failed signalling root container identifier for quota update - %@
[DEBUG] Signalled root container identifier for quota update
[DEBUG] container state now needs flush: %@
[CRIT] Assertion failed: atomic_load_explicit(&_activeQueries, memory_order_acquire) >= atomic_load_explicit(&_activeRecursiveQueries, memory_order_acquire)
[CRIT] Assertion failed: !underflow
[CRIT] Assertion failed: zoneRowID
[CRIT] Assertion failed: mangledID.isPrivate
[CRIT] API MISUSE: unexpected parameter
[CRIT] Assertion failed: dbRowID
[DEBUG] Not getting container metadata because we appear to be in an offline db
[CRIT] UNREACHABLE: associating nil client zone for %@
[CRIT] Assertion failed: self.containerMetadata
[DEBUG] closing app library: %@
[CRIT] Assertion failed: !_activated
[CRIT] Assertion failed: state == BRCAppLibraryStateNotActivated || !(state & BRCAppLibraryStateNotActivated)
[DEBUG] %@ state changed, was %@
[NOTICE] downloading everything in %@ because the app is now installed
[ERROR] enabling download of app library %@ failed: %@
[NOTICE] evicting everything in %@ because the app was removed
[ERROR] failed to disable recursive download of app library %@: %@
[ERROR] failed to evict the content of the app library %@ after the app was removed: %@
[INFO] %@ becomes %@
[DEBUG] app library greediness enforced by user defaults
[DEBUG] don't be greedy if app is not installed
[DEBUG] don't be greedy because document is too old (mtime: %lld; max age: %lld days)
[CRIT] UNREACHABLE: asking for no scopes?
[CRIT] Assertion failed: docsOrDataScopeInjection
[CRIT] Assertion failed: client
[DEBUG] app library %@ became foreground
[DEBUG] app library %@ moved to background
[DEBUG] 
%llx recomputing evicted state for %@ (has fetched initial apps: %d)
[DEBUG] updating evict status: %s
[DEBUG] evict status remains: %s
[DEBUG] resolving target app libraries for app library %@
[DEBUG] resolved target app libraries %@ and shared zones %@ for app library %@
[DEBUG] removing all target app libraries from %@
[DEBUG] attempting to add target app library %@ to %@
[DEBUG] added target app library %@ to %@
[DEBUG] %@ is already a target app library of %@
[DEBUG] attempting to remove target server zone %@ from %@
[DEBUG] not removing target shared zone %@ from %@
[DEBUG] %@ is not a target shared zone of %@ anymore
[DEBUG] not removing target shared zone %@ from %@, because it's still targeting it
[DEBUG] attempting to add target shared server zone %@ to %@
[DEBUG] added target shared client zone %@ to %@
[DEBUG] %@ is already a target shared server zone of %@
[DEBUG] Queueing faults live barrier for %@
[CRIT] UNREACHABLE: nil dbRowID for %@
[DEBUG] container-metadata needs sync up for %@
[CRIT] Assertion failed: _initialRetryCount <= _finalRetryCount
[CRIT] Assertion failed: _minimumNsecsBetweenRetries <= _maximumNsecsBetweenRetries
[CRIT] Assertion failed: _minimumNsecsBetweenRetries > 0
[CRIT] Assertion failed: _maximumNsecsBetweenRetries > 0
[CRIT] Assertion failed: _nsecsBeforeForgettingCounter >= _maximumNsecsBetweenRetries
[DEBUG] We haven't finished the previous throttle
[DEBUG] Forgetting retry counter
[DEBUG] gave up on %@/%llx (retry-count:%u)
[DEBUG] backing off %@/%llx for %llu milliseconds (retry-count:%u)
[CRIT] API MISUSE: unhandled format specifier
[ERROR] unhandled format specifier %%%c
[DEBUG] found zone root record ID
[CRIT] UNREACHABLE: Couldn't allocate ranks when fetching parent chain
[DEBUG] Fetching parent chain of %@
[DEBUG] Cancelling %@ to be replaced by %@
[DEBUG] Downloader[%@]: %@ (%llu -> %llu)
[WARNING] No appLibraryEntry for Downloader[%@-%s-%@] with transfer_operation %@
[DEBUG] 
%llx Downloader[%@-%s-%@]: download %@
[DEBUG] Got an out of space error %@
[DEBUG] Rescheduling %@ (%@) for retriable error: %@
[ERROR] Got non recoverable error when downloading %@: %@
[DEBUG] The error is for an unknown item, check if the zone hasn't been wiped
[DEBUG] Apply Changes[%lld]: %@ state is %s
[DEBUG] Downloader: scheduling %lld suspended throttles
[DEBUG] Downloader: not enough space to download anything (%@ < %@)
[DEBUG] Downloader: scheduled %lld pending-disk throttles, which will still leave %@ of free disk space
[DEBUG] Downloader[%@-%s-%@]: Cancelling download
[DEBUG] Downloader[%@-%s-%@]: Cleaning up download stage: %@
[DEBUG] Refreshed active download size %llu -> %llu
[DEBUG] 
%llx scheduling content download for %@
local: %@
[DEBUG] no need to schedule anything, we're already actively downloading that same etag
[DEBUG] no need to schedule anything, we're already attempting to download that same version
[ERROR] can't get permanent storage of %@: %@
[WARNING] Failed to remove additions : %@
[DEBUG] removed additions from %@
[DEBUG] resolved losers needing deletion: {%@}
{%@}
[DEBUG] losers needing deletion: {%@}-{%@}
[DEBUG] 
%llx scheduling download of losers %@ for item %@
[DEBUG] 
%llx download etag: %@
[CRIT] UNREACHABLE: We thought we finished downloading loser etag %@ for %@ but it wasn't found, so rescheduling
[DEBUG] rescheduling winner
[DEBUG] not interested in this download
[ERROR] invalid addition name for %@
[WARNING] invalid itemID %@ (for %@ in %@)
[WARNING] ETag %@ is no longer a loser
[DEBUG] live losers: %@
[ERROR] can't remove conflict loser for %@: %@
[DEBUG] Rescheduled %lld in-flight transfers because we have restarted
[CRIT] UNREACHABLE: Downloader[%@]: failed to find app library with id %@, dropping the download %@
[DEBUG] Downloader[%@]: job has been put back in queue %@
[WARNING] Waiting to download %@ until share accept
[DEBUG] trying to send an eviction request
[DEBUG] Downloader[%@]: not enough available disk space (%llu available, %llu needed, %llu minimum)
[DEBUG] Downloader[%lld-%s-%@]: enough disk space to download (%llu available, %llu needed, %llu minimum)
[CRIT] UNREACHABLE: item download %@ etag changed from %@
[WARNING] Completed unit count is greater than version size; ignoring value
[DEBUG] Re-use progress %@
[NOTICE] downloading %ld documents in %@
[DEBUG] Downloader[%lld-%s-%@]: postpone because loser is more recent than live item
[NOTICE] downloading %ld previous documents versions in %@
[CRIT] Assertion failed: _indentation > 0
[CRIT] UNREACHABLE: unknown color
[CRIT] UNREACHABLE: only share acceptation fault can be deleted; %@
[DEBUG] 
%llx scheduling reset %s of %@
[DEBUG] 
%llx reset %s of %@
[DEBUG] zone is already resetting (zone:%@,appLibrary:%@) but adding (%@) for the next reset
[DEBUG] flushing reset state (%@) for container %@
[DEBUG] waiting for %u cancelled operations to finish
[WARNING] giving up on resetting %@
[DEBUG] 
%llx waiting %.3f secs to reset %@
[CRIT] Assertion failed: !self->_resetTimer
[DEBUG] 
%llx continuing reset
[NOTICE] resetting %@: %s
[CRIT] UNREACHABLE: not implemented
[CRIT] Assertion failed: self.isSharedZone
[DEBUG] deleting from server truth for %@
[DEBUG] deleting from client truth for %@
[DEBUG] Keeping client items during reset
[ERROR] failed pruning client_items: %@
[CRIT] UNREACHABLE: Unlink not implemented in the new world
[DEBUG] cancelling sync up operation %@
[DEBUG] cancelling sync down operation %@
[DEBUG] 
%llx finishing %@ of %@
[DEBUG] finished %@ of %@ but we still need to delete data
[DEBUG] finished %@ of %@
[ERROR] failed to signal data scope re-import of %@ - %@
[DEBUG] Successfully signalled data scope re-import of %@ after reset of %@
[DEBUG] Successfully signalled documents scope re-import of %@ after reset of %@
[CRIT] UNREACHABLE: can't czm move clouddocs zone
[CRIT] UNREACHABLE: Can't CZM the clouddocs zone
[CRIT] Assertion failed: [s isKindOfClass:[NSMutableString class]]
[ERROR] failed to fetch tags: %@
[DEBUG] read tags: [%@]
[WARNING] Inaccessible folder %@
[DEBUG] dropping tags
[CRIT] UNREACHABLE: nobody should import an item from a fault
[CRIT] UNREACHABLE: nobody should import an item from a BR Alias
[CRIT] UNREACHABLE: Unexpected import object %@
[CRIT] UNREACHABLE: can't move aside a root item!
[CRIT] Assertion failed: name
[CRIT] UNREACHABLE: got a fault name
[DEBUG] Not overriding name equal to bounced name %@
[CRIT] Assertion failed: !_aliasTarget || [_aliasTarget isEqualToString:st.aliasTarget]
[CRIT] Assertion failed: aliasItem.isBRAlias
[CRIT] UNREACHABLE: -asDirectory called on a non directory
[CRIT] UNREACHABLE: -asDocument called on a non document
[CRIT] UNREACHABLE: -asShareableItem called on a non shareable item
[CRIT] UNREACHABLE: -asFSRoot called on a non root
[CRIT] UNREACHABLE: -asSymlink called on a non symlink
[CRIT] UNREACHABLE: -asFinderBookmark called on a non finder bookmark
[CRIT] UNREACHABLE: -asShareAcceptationFault called on a non fault
[DEBUG] Marking %@ from initial scan
[CRIT] UNREACHABLE: Can't ask for file objectID until the item has been inserted
[CRIT] UNREACHABLE: Asked parent file objectID on a zone root
[CRIT] UNREACHABLE: Can't find parent file objectID
[CRIT] UNREACHABLE: asked to refresh the app library of a root item
[CRIT] UNREACHABLE: hierarchy too deep to compute the app library root of %@
[CRIT] Assertion failed: _appLibrary
[CRIT] UNREACHABLE: Asked to get the top-level item of a non shared top level item: %@
[DEBUG] Needs rename because local name %@ differs from real name %@
[CRIT] Assertion failed: parentItem->_minimumSupportedOSRowID
[CRIT] Assertion failed: !_minimumSupportedOSRowID
[DEBUG] %@: inheriting %@ minimum supported OS
[DEBUG] %@ needs %@ to sync-up
[CRIT] UNREACHABLE: can't add the OS NAME
[CRIT] UNREACHABLE: Can't find parent %@(%@)
[CRIT] UNREACHABLE: Local items must be initialized with initFromPQLResultSet:container:error:
[CRIT] UNREACHABLE: Asked for side car info on an item that doesn't have side cars
[CRIT] Assertion failed: !self.itemID.isNonDesktopRoot
[CRIT] UNREACHABLE: item without parentID
[CRIT] UNREACHABLE: orphan detected %@ under parent %@ in %@
[CRIT] UNREACHABLE: item parented to a document: %@ parented to %@ type %@
[CRIT] UNREACHABLE: Can't ask the parent item of a FS root
[CRIT] UNREACHABLE: item without parentID under parent %@
[CRIT] UNREACHABLE: item parented to a document: %@ parented to %@
[DEBUG] remove documents folder
[DEBUG] 
%llx creating sync-up job
[DEBUG] we have structural diffs to send
[DEBUG] we don't have a corresponding alias item, but we have changes that requires alias creation
[CRIT] Assertion failed: !self.parentClientZone.isSharedZone
[DEBUG] we don't have a corresponding alias item, and the diffs do not require alias creation, dropping the diffs
[DEBUG] dropping structural diffs because we don't have alias sync masks in the private zone
[DEBUG] we have diffs to send
[DEBUG] Detected sync up state change
[DEBUG] Finishing sync up for %@ in %@
[CRIT] Assertion failed: syncUpDiffs == 0
[DEBUG] Not finishing sync up because item is in-flight in %@
[DEBUG] Rescheduling upload for %@
[CRIT] UNREACHABLE: Didn't detect the local sync up state change for %@
[CRIT] UNREACHABLE: shouldn't ever have unknown scope
[CRIT] UNREACHABLE: Circular parenting chain
[ERROR] Encountered circular parenting chain
[DEBUG] Queueing notification %@
[DEBUG] Forcing server edit behavior because we are marking sync idle
[DEBUG] not dropping already reserved/dead/almost dead item from the working set %@
[CRIT] UNREACHABLE: there should be a fileObjectID for %@
[DEBUG] 
%llx Saving item %@
[DEBUG] Item is already force-deleted, skipping save
[DEBUG] Forcing sync up of shared item in the trash %@
[DEBUG] Force deletion has been asked, comply
[DEBUG] Not deleting until we send the delete to children
[DEBUG] Deleting tombstone because it's synced up
[DEBUG] Deleting tombstone because it's not known to server
[DEBUG] item with a minimum supported OS just changed, checking if we need to reattempt upload
[DEBUG] this item changed significantly
[DEBUG] We received our first shared to me child item, schedulding side car sync
[DEBUG] %s. changedFields:%@ sendNotif:%s serverUpdate:%s
[ERROR] failed to save item %@ to DB: %@
[CRIT] UNREACHABLE: saving items should really always work: %@
[CRIT] UNREACHABLE: Can't learn an itemID on an excluded item
[DEBUG] learned itemID %@ for %@
[CRIT] UNREACHABLE: Can't make the documents folder or root excluded
[WARNING] Item became exluded which is already known by the server. Syncing up delete for %@
[CRIT] Assertion failed: deadSelf.needsInsert
[CRIT] UNREACHABLE: Can't force reject an excluded item
[CRIT] UNREACHABLE: Can't mark an excluded item as needing sync up
[DEBUG] Marking %@ as edited since shared because we are syncing up an edit
[CRIT] UNREACHABLE: we should always have a corresponding server item for already sync-ed up items - %@
[WARNING] Not forcing sync up of share-to-me top level item %@
[WARNING] Not forcing sync up of share-to-me child item with a dead share root %@
[WARNING] Rejected item %@ has meaningful local diffs.  Forcing re-sync of all fields
[CRIT] Assertion failed: self.isReadAndUploaded || self.isKnownByServerOrInFlight
[CRIT] UNREACHABLE: Can't finish sync up of an excluded item
[DEBUG] Rejected item %@ has meaningful local diffs.  Forcing sync on all
[DEBUG] we are still syncing %@
[DEBUG] we still have diffs to send: %@
[CRIT] Assertion failed: _syncUpState != BRC_SUS_IDLE
[DEBUG] Ignoring name and parent change on immutable documents folder
[CRIT] Assertion failed: [_parentZoneRowID isEqualToNumber:newParentID.zoneRowID]
[CRIT] UNREACHABLE: Failed to save xattr blob to stage for signature %@ - %@
[CRIT] Assertion failed: self.isDead && self.isDeadOrMissingInServerTruth
[CRIT] Assertion failed: _st.state == BRC_ITEM_STATE_TOMBSTONE
[CRIT] Assertion failed: ![alreadyBouncedName isEqualToString:bouncedLogicalName]
[DEBUG] Locally bounced %@
[CRIT] Assertion failed: _st.stagedFileID
[CRIT] UNREACHABLE: invalid sync up state
[DEBUG] 
%llx request to download client item %@:%@ with options %@
[CRIT] Assertion failed: (options & BRCDownloadDiscretionary) == 0 || (options & BRCDownloadUserInitiated) == 0
[WARNING] ignoring download request for %@ because item is dead
[CRIT] Assertion failed: parentScope == BRC_ITEM_SCOPE_DOCUMENTS
[CRIT] Assertion failed: !appLibrary.isCloudDocsAppLibrary
[CRIT] Assertion failed: parentScope != BRC_ITEM_SCOPE_DATA || !parentVisible
[CRIT] Assertion failed: locBlobOut == NULL
[DEBUG] added xattr %s (%lld bytes)
[WARNING] skipping xattr %s (size:%zd) because we don't have enough space anymore
[DEBUG] serialized xattr %s (blob size:%ld)
[WARNING] removing xattr %s failed %{errno}d
[DEBUG] removed xattr %s
[DEBUG] Sync: no global budget anymore: %@
[WARNING] Failed to defer the periodic sync xpc activity
[DEBUG] 
%llx closing %@
[DEBUG] 
%llx shutting down periodic metadata sync
[DEBUG] waiting for %@ to finish
[DEBUG] 
%llx loading containers
[DEBUG] 
%llx Considering containers needing forced sync down
[ERROR] periodic sync failed %@
[DEBUG] Sync: resuming sync
[DEBUG] marking container-metadata needs-sync-down
[DEBUG] scheduling sync for sharedb in %llus
[DEBUG] scheduling sync for zone-health
[DEBUG] scheduling sync for side-car
[DEBUG] scheduling sync for zone-pcs
[DEBUG] marking side-car needs-sync-up
[DEBUG] marking zone-health needs-sync-up
[DEBUG] marking container-metadata needs-sync-up
[DEBUG] 
%llx scheduling container-metadata sync
[DEBUG] already syncing container-metadata
[DEBUG] syncing down
[DEBUG] done syncing container-metadata
[DEBUG] 
%llx resetting container-metadata: %s
[DEBUG] 
%llx scheduling shared-db sync
[DEBUG] already syncing shared-db
[CRIT] UNREACHABLE: we shouldn't be asked to sync up the shared DB
[DEBUG] done syncing shared-db
[DEBUG] 
%llx scheduling zone-health sync
[DEBUG] already syncing zone-health
[DEBUG] syncing up
[DEBUG] done syncing zone-health
[WARNING] Resetting zone health
[DEBUG] 
%llx scheduling side-car sync
[DEBUG] already syncing side-car
[DEBUG] done syncing side-car
[WARNING] Resetting side car zone
[DEBUG] Updated zone health sync token:%@ requestID:%lld
[DEBUG] Completed zone health sync requestID:%lld error:%@
[DEBUG] Updated side car sync token:%@ requestID:%lld
[DEBUG] 
%llx starting cross zone move migration PCS prep
[CRIT] Assertion failed: _migrateZonePCSOperation == nil
[DEBUG] scheduling push topics registration
[DEBUG] 
%llx updating push topics
[DEBUG] Not registering for pushes on container %@ because sync is disabled due to no corresponding app being installed
[DEBUG] custom topics: %@
[DEBUG] received push token %@
[ERROR] unable to parse push payload:%@
[DEBUG] 
%llx received a push in the %@ database payload:%@
[NOTICE] received a push for the container-metadata zone
[NOTICE] received a push for the zone-health zone
[NOTICE] received a push for the side-car zone
[NOTICE] received a push for client zone %@
[NOTICE] received a push for app library %@ -> zone %@
[NOTICE] receiving a push for an unkown ID %@ -> com.apple.CloudDocs
[DEBUG] 
%llx scheduling sync down for client zone %@ because of a push
[WARNING] no zone found, dropping the push
[DEBUG] Also scheduling a sync down on the private zone %@
[CRIT] UNREACHABLE: invalid push payload[%@] %@
[CRIT] UNREACHABLE: invalid push ZoneIdentifier at payload[%@] %@
[CRIT] UNREACHABLE: invalid push DatabaseScope at payload[%@] %@
[CRIT] UNREACHABLE: invalid push ZoneOwnerID at payload[%@] %@
[ERROR] Error enumerating %@: %@
[ERROR] Failed to make %@ owned by mobile: %@
[INFO] ~/Library/Application Support/CloudDocs/session does not exist. No need to back up.
[ERROR] Unable to delete existing destination directory at %@: %@
[INFO] Could not create destination directory %@: %@
[DEBUG] %@
[DEBUG] Calling completion block with URL: %@, error: %@
[ERROR] Could not get the canonical path for the root URL %@. Error: %@
[ERROR] Enumeration error: %@. Error: %@
[ERROR] Failed to fetch resource values for %@. Error: %@
[ERROR] Failed to remove directory %@: %@
sharing/iWork-publishing-fetch
[CRIT] UNREACHABLE: No error and invalid number of records %lu
[CRIT] UNREACHABLE: can't unarchive CKRecord: %@
[DEBUG] we're a document missing a content signature
[DEBUG] we're a document missing a thumbnail signature
[DEBUG] we're a document with an xattr change
[DEBUG] we're a document with an uploaded asset change
[DEBUG] we're a document with an upload error change
[CRIT] Assertion failed: self.isFinderBookmark || BRCItemTypeIsDocument(_st.type)
[DEBUG] greediness enforced because document UTI is not evictable
[CRIT] Assertion failed: item.isDocument
[CRIT] UNREACHABLE: document without a version:
    %@
   this typically indicates either of two problems:
    - either we failed processing the last sync down and we
      saved the structure record but not the contents record,
    - or the server forgot to send us a contents record.
[CRIT] UNREACHABLE: %@ isn't a dictionary!
[CRIT] Assertion failed: !info || info.isDocument
[DEBUG] Clearing signatures: %@
[CRIT] Assertion failed: serverItem
[CRIT] Assertion failed: serverItem.isDocument
[CRIT] Assertion failed: self.isDocument
[CRIT] UNREACHABLE: Server item missing a version %@
[CRIT] Assertion failed: [serverItem.latestVersion diffAgainst:_currentVersion] == 0 || (serverItem.isDead && self.isDead)
[DEBUG] 
%llx leaning itemID %@ for %@
[DEBUG] forcing iwork conflict etag on %@ to be %@
[DEBUG] removing conflict loser with etag %@
[DEBUG] there is no conflict loser with etag %@
[DEBUG] We need to get a file ID to upload
[ERROR] Failed to find item to re-import %@
[CRIT] UNREACHABLE: Marking %@ as delete for re-apply 
[ERROR] Failed to re-import item %@ - %@
[DEBUG] Asked to re-import %@ for a file ID
[DEBUG] 
%llx marking force upload: %@
[DEBUG] 
%llx marking force needs-syncup: %@
[DEBUG] 
%llx marking uploaded %@
[CRIT] API MISUSE: state isn't needs-upload
[CRIT] Assertion failed: record
[CRIT] UNREACHABLE: no version on uploaded document %@
[CRIT] UNREACHABLE: CK disagrees on the item size: %lld != %lld
[DEBUG] marking uploaded %@, signature:%@
[CRIT] Assertion failed: (fileAsset && !pkgSignature) || (!fileAsset && pkgSignature)
[CRIT] Assertion failed: signature
[CRIT] Assertion failed: _currentVersion
[CRIT] Assertion failed: _currentVersion.contentSignature.brc_signatureIsPendingPlaceHolder
[CRIT] Assertion failed: _currentVersion.thumbnailSignature.brc_signatureIsPendingPlaceHolder
[CRIT] Assertion failed: _currentVersion.uploadedAssets == nil
[CRIT] Assertion failed: thumbnail.size == 0 || thumbnail.uploadReceiptExpiration != 0.0
[CRIT] Assertion failed: fileAsset.size == 0 || fileAsset.uploadReceiptExpiration != 0.0
[CRIT] Assertion failed: manifest.size == 0 || manifest.uploadReceiptExpiration != 0.0
[DEBUG] item is now uploaded: %@
[WARNING] Rejected fault still needs delete because we can't upload it %@
[CRIT] Assertion failed: self.needsUpload
[CRIT] UNREACHABLE: Can't mark an excluded item over quota
[ERROR] Failed enumerating item at url %@ - %@
[ERROR] Couldn't create import item for %@ - %@
[ERROR] Failed saving package item to db - %@
[DEBUG] 
%llx reading live conflict losers from %@
[DEBUG] 
%llx updating upload jobs
[CRIT] Assertion failed: !self.isDead && self.hasFileIDForUpload
[DEBUG] updating recursive properties:
 quota:    %lld
 upload:   {needs:(count:%lld size:%lld) done:(count:%lld size:%lld)}
 download: {needs:(count:%lld size:%lld) done:(count:%lld size:%lld)}
 unstage:  {needs:%lld done:%lld}
 sync-up:  {needs:%lld done:%lld}
[CRIT] UNREACHABLE: can't update recursive properties: %@
[WARNING] Serial queue for session %@ is nil
[DEBUG] skipping saving metadata for clouddocs zone
[WARNING] no data in record %@
sync-down/container-metadata
[DEBUG] 
%llx starting fetch container-metadata changes operation %@
[DEBUG] 
%llx got container-metadata changes for %@ keys:%@ changeTag:%@ modified:%@
[DEBUG] received container-metadata properties plist %@ for %@ (needsIcons:%d)
[ERROR] failed parsing container-metadata plist for container %@: %@
[DEBUG] containerID %@ had no properties plist
[DEBUG] we'll download icon %@ for container %@
[DEBUG] updating container-metadata %@ at etag:%@ (no asset downloaded)
[DEBUG] 
%llx container-metadata receieved server change token %@, caught-up:%s client change token %@ error:%@
[DEBUG] remembering server change token %@
[DEBUG] 
%llx finished operation
[DEBUG] 
%llx adding sub-operation to fetch asset contents: %@ for records: %@
[DEBUG] 
%llx per record callback: %@ - %@
[DEBUG] got asset contents for %@
[DEBUG] updating container %@ metadata %@ at etag:%@ (after asset download)
[ERROR] unknown container %@
[DEBUG] 
%llx finished %@
[NOTICE] fetched %lu containers metadata from the cloud - %@
[DEBUG] 
%llx Sync: syncing down container metadata
[CRIT] UNREACHABLE: Progress deallocated without being unpublished
upload
[ERROR] No per upload completion block for %@, error %@
[DEBUG] Publishing upload progress for %@
[DEBUG] ignoring zone not found error for %@ - we'll create at the end of the operation
[CRIT] Assertion failed: modifyError
[DEBUG] zone was recreated, reuploading records
[CRIT] UNREACHABLE: This is not a private zone
[CRIT] UNREACHABLE: This is not a shared zone
[ERROR] can't save %@: missing ownerKey for ownerName "%@"
[CRIT] UNREACHABLE: got a SQL Error: %@
[WARNING] Bounced itemID %@ from "%@" to "%@" because it clashes with %@
[DEBUG] Not bouncing %@ to %@ because that's not a unique filename
[CRIT] Assertion failed: BRCItemTypeIsDirectory(st.type)
[CRIT] Assertion failed: record.hasChainPCS
[CRIT] Assertion failed: _db.changes == 1
[WARNING] changing filename to "%@" because "%@" is unrepresentable (item ID: %@, last editor: %@)
[ERROR] changing filename to "%@" because "%@" is %s name
[CRIT] Assertion failed: !(st.logicalName.icd_isSideFaultName || [st.logicalName icd_isExcludedWithMaximumDepth:1])
[CRIT] UNREACHABLE: can't deserialize filename: %@ of %@
[ERROR] Failed to update record (%@): %@
[ERROR] failed saving document %@: %@
[CRIT] UNREACHABLE: document without a structure:
    i:%@ %@
   this typically indicates either of two problems:
    - either we failed processing the last sync down and we
       failed inserting the structure record,
    - or the server forgot to send us a structure record.
[DEBUG] Document without a structure record but we haven't completed full sync.  Dropping the record on the floor for now i:%@ %@
[DEBUG] saving consistent structure record (%@) to db %@
[ERROR] can't deserialize %@: %@
[DEBUG] saving consistent document record (%@) to db %@
[CRIT] UNREACHABLE: can't deserialize extension: %@ of %@
[DEBUG] Adding %@ to the list of force package extensions (according to CKRecord)
[DEBUG] saving consistent symlink structure record (%@) to db %@
[ERROR] failed saving symlink %@: %@
[DEBUG] saving consistent finder bookmark structure record (%@) to db %@
[DEBUG] saving consistent alias structure record (%@) to db %@
[ERROR] failed saving alias %@: %@
[DEBUG] Requesting a new item rank for target %@ of %@
[CRIT] Assertion failed: zonesNeedingAllocRanks
[DEBUG] saving consistent share record to db %@
[CRIT] Assertion failed: share.currentUserParticipant.role != CKShareParticipantRoleOwner
[CRIT] Assertion failed: share.currentUserParticipant.role == CKShareParticipantRoleOwner
[WARNING] ignoring unknown itemID on share
[ERROR] share without root record:
    i:%@
   this typically indicates either of two problems:
    - either we failed processing the last sync down and we
       failed inserting the shared record,
    - or the server forgot to send it to us.
[CRIT] UNREACHABLE: Can't save zone root record %@
[CRIT] UNREACHABLE: structure record which isn't a directory or document
[WARNING] Consistent state but unknown record type (recordType: %@).
[ERROR] failed saving tombstone share %@: %@
[DEBUG] deleted shareID %@ was for already dead item
[DEBUG] marked shareID dead %@
[CRIT] UNREACHABLE: Couldn't decode itemID from recordID %@
[ERROR] failed saving tombstone %@: %@
[DEBUG] Not inserting tombstone entry for %@ because we don't have a server item already.  Let's go through rejected code path for perf.
[DEBUG] saving consistent record delete to db %@
[CRIT] UNREACHABLE: unknown item type %d
[DEBUG] Forcing caught up state because we completed full sync so we must have synced down an unrelated zone
[CRIT] UNREACHABLE: Server killed %s but it still has %d live children
[DEBUG] Server killed %@ but it still has live children.  We haven't caught up, so delaying apply for now
[CRIT] UNREACHABLE: Server sent us a document with no version
[DEBUG] We haven't received a content record on %@ yet, delaying for now
[DEBUG] Updated %@ to be a directory fault because it has a new unapplied item
[CRIT] UNREACHABLE: Server sent item %s which isn't a descendant of 'root'
[DEBUG] Found orphan when we haven't completed initial sync %@.  Delaying apply for now
[DEBUG] Orphan has favorite rank so fetching parent chain
[DEBUG] Orphan is recent, so fetching parent chain
[DEBUG] Orphan has finder tags so fetching parent chain
[CRIT] UNREACHABLE: Server sent item %@ which is parented to a non-directory %@
[CRIT] UNREACHABLE: Server sent live item %s parented to dead item %s
[WARNING] Server sent us live item %@ parented to dead item %@ but we haven't completed full sync.  Delaying apply
[DEBUG] %@: Allocated ranks [%lld, %lld[
[ERROR] Allocating ranks failed, mark the container as BROKEN STRUCTURE
[DEBUG] %@ has no more directory faults so it is now full sync
[CRIT] UNREACHABLE: Can't create app library and zones for zone named: %s
server-zone/did-sync-down
[DEBUG] 
%llx saving sync-down batch (edits:%ld deletions:%ld)
[NOTICE] received %lu edited items and %lu deleted items from the cloud for %@
[NOTICE] received %lu deleted items from the cloud for %@
[NOTICE] received %lu edited items from the cloud for %@
[CRIT] Assertion failed: requestID >= self->_changeState.clientRequestID
[WARNING] Saving %lu failed directory list operations first
[CRIT] Assertion failed: [record.recordType isEqualToString:kBRRecordTypeContent] || [record.recordType isEqualToString:kBRRecordTypeStructure]
[DEBUG] %@ is no longer full sync because of a large delta sync operation
[WARNING] Promoting %@ to full sync because we have completed full sync before and now we're caught up again
[DEBUG] Updated %llu items to be normal directories in %@
[WARNING] Failed enumerating the changes stream but don't broken structure
[ERROR] something went wrong while saving to the db: %@
[DEBUG] updating %@
with requestID:%llu token:%@
[DEBUG] Allocating ranks for %@
[DEBUG] Delta sync successfully alloced rank so allowing finished changes stream to be destroyed
[CRIT] Assertion failed: _db.isInTransaction
[DEBUG] Can't list directory changes when completed full sync
[DEBUG] Listed directory changes in zones %@
[CRIT] Assertion failed: _failedListDirectoryOperations[itemID] == nil
[DEBUG] Removing applied tombstone: %@
[DEBUG] 
%llx Starting to GC %ld server tombstones in %@
[ERROR] failed purging zone %@ - %@
[DEBUG] Finishing destroying server truth
[DEBUG] Finished resetting server truth
[CRIT] UNREACHABLE: attempted delete all content on an unsupported zone type: %@
[CRIT] Assertion failed: !appLibrary.wasMovedToCloudDocs
[CRIT] Assertion failed: clientZone.appLibraries.count == 1
[CRIT] UNREACHABLE: Can't move clouddocs to itself
[CRIT] UNREACHABLE: Unable to cross zone migrate.  Blowing away our state and starting from scratch.
[DEBUG] %@ server state changed, %@ -> %@
[CRIT] Assertion failed: argc == 1
[CRIT] UNREACHABLE: invalid type
[CRIT] UNREACHABLE: can't get the structure record of a shared-top-level document without the zone of the alias record
[CRIT] UNREACHABLE: Asked for side car recordID on an item that doesn't have side cars
[DEBUG] path match info for %@ is %@
[WARNING] we have no etag for %@
path matching: %@
[WARNING] we have no reference for %@
path matching: %@
[DEBUG] Sending as initial item
[DEBUG] Sending path match info
[CRIT] UNREACHABLE: can't get the structure record without a zone
[CRIT] UNREACHABLE: asked for folder root structure record on a non-folder
[CRIT] Assertion failed: sqlite3_value_type(value) == SQLITE_NULL
[CRIT] Assertion failed: sqlite3_column_type(stmt, index) == SQLITE_NULL
[CRIT] Assertion failed: self.brc_isAppLibraryRootRecordID
[CRIT] Assertion failed: self.brc_isAppLibraryDocumentsRecordID
[CRIT] Assertion failed: libraryRowID
[CRIT] Assertion failed: libraryRowID || sharedZoneRowID || !([identifier isEqualToString:BRCItemIDZoneRoot] || [identifier isEqualToString:BRCItemIDDocuments])
[CRIT] UNREACHABLE: Corrupt side car file
[CRIT] UNREACHABLE: attempt to extract an itemID from '%s'
[CRIT] UNREACHABLE: attempt to extract an itemType from '%s'
[WARNING] The server sent a bounceNo <= 1: %@
[CRIT] UNREACHABLE: empty basename and no bounceno
[CRIT] UNREACHABLE: Aliases parent ref zoneID %@ must be equal to aliases zoneID %@!
[CRIT] UNREACHABLE: No alias target
[WARNING] can't deserialize filename: %@
[CRIT] UNREACHABLE: The server should have set a birthtime on %s
[CRIT] UNREACHABLE: %@ parent ref zoneID %@ must be equal to record's zoneID %@!
[CRIT] UNREACHABLE: The server should have set an mtime for %s
[WARNING] %@ record %@ has a size inconsistency, %llu != %llu
[ERROR] failed deserializing version in %@: %@
[ERROR] %@ record %@ doesn't have a lastEditorDeviceName
[WARNING] Server gave us an unrepresentable filename: "%@" using "%@"
[CRIT] UNREACHABLE: The record name is not a content in the shared zone
[CRIT] Assertion failed: si.isBRAlias
[ERROR] couldn't set basename to '%@'
[CRIT] UNREACHABLE: invalid filename
[CRIT] UNREACHABLE: Couldn't find xattr for signature %@
[DEBUG] On Sync-up of %@ using old etag due to iWork conflict
[CRIT] Assertion failed: version != nil
[CRIT] Assertion failed: (diffs & BRC_IF_CONTENT_SIGNATURE)
[DEBUG] xattr was uploaded during the upload phase for %@
[DEBUG] xattr changed but wasn't uploaded for %@.  Uploading during sync up
[CRIT] UNREACHABLE: Couldn't locate xattr to sync-up for %@ - %@
[WARNING] Created app library through sync flow %@
[DEBUG] Encountered a share alias, creating the shared zone if one doesn't exist yet for %@
[DEBUG] found app library record named: %@
[DEBUG] found app documents record named: %@
[CRIT] UNREACHABLE: parent is not a CKReference for %@
[DEBUG] found parent app library record named: %@
[DEBUG] found parent app documents record named: %@
[CRIT] Assertion failed: ![zoneName isEqualToString:BRUbiquitousDefaultContainerID]
[CRIT] UNREACHABLE: invalid lastEditorDeviceName on %@: %@
[CRIT] UNREACHABLE: rootAppLibraryRecordForAppLibraryID: should not be called with appLibraryName set to nil
[CRIT] Assertion failed: dataRepresentation != nil
[CRIT] UNREACHABLE: invalid key %@ and obj %@
[CRIT] UNREACHABLE: icon doesn't exist anymore at %@ - %@
[WARNING] share has no CKShareTypeKey, using extension from CKShareTitleKey (%@)
[WARNING] can't find document name for share %@ and can't extract it from URL; using '%@' as default
[CRIT] UNREACHABLE: Can't prepare sync for a zone that is blocked
[DEBUG] %@ is not pristine and needs sync
[DEBUG] Avoid syncing up a pristine zone
[DEBUG] 
%llx Sync: syncing up clientZone %@. batch size - %u
[DEBUG] Because this is our first time syncing up, adding %@
[DEBUG] will fake sync for %@
[DEBUG] ignoring item with negative cost for now %@
[DEBUG] Dedicating this sync up operation to pcs chaining %@
[DEBUG] zone needs fake sync up
[DEBUG] no record needs syncing at the moment.
[CRIT] Assertion failed: items.count == 0
[DEBUG] destroying shares instead of unsharing
[DEBUG] preparing to send in requestID:%lld: %lu records, delete %lu recordIDs, unshare %lu iwork shares, rename %lu shares, about %lu items
[NOTICE] sending %lu items to the cloud for %@
sync-up
[DEBUG] Finished PCS chaining a batch when completed: %d listOp: %@ error: %@
[DEBUG] 
%llx sync-up error for record %@: %@
[ERROR] Blocking %@ from sync up until it is next modified because the server failed with a permanent error
[DEBUG] skipping throttling item %@ even though it caused the failure
[CRIT] Assertion failed: self.serverZone.isPrivateZone
[DEBUG] Fetching share IDs shared by us for renames: %@ and unshare: %@
[WARNING] Got a permanent error %@ when fetching records and shares
[WARNING] got an error while fetching the records and shares %@, but ignoring it
[DEBUG] Saving shares %@ shared by us for unshare and rename
[DEBUG] No shares need saving
[ERROR] send metadata error: %@
[CRIT] Assertion failed: [contentRecord.recordType isEqualToString:kBRRecordTypeContent]
[CRIT] Assertion failed: protectionData
[CRIT] UNREACHABLE: Protection data mismatch between share and record being shared! (%@ vs %@)
[DEBUG] updated content record %@ with protectionData %@ baseToken %@ routingKey %@
[CRIT] Assertion failed: share.publicSharingIdentity
[CRIT] UNREACHABLE: protection data mismatch between content public sharing identity and web sharing data (%@ vs %@) for %@
[CRIT] UNREACHABLE: content record is missing protection data %@
[CRIT] Assertion failed: !fetchedRecord
[CRIT] UNREACHABLE: protection data mismatch! ignoring content records version (%@ to %@)
[DEBUG] record %@ still needs web sharing protection data
[CRIT] UNREACHABLE: Weird... We have a public sharing key but it's not set
[CRIT] UNREACHABLE: Failed to get new web sharing identity: %@
[CRIT] UNREACHABLE: Timed out while waiting for new web-sharing identity
[CRIT] Assertion failed: [firstItemID isEqual:secondItemID]
[CRIT] Assertion failed: error
[ERROR] Failed getting web sharing identity for %@ - %@
[DEBUG] got web sharing identity for %@
[CRIT] UNREACHABLE: invalid sharing records count
[DEBUG] Sync: sending requestID:%lld for container %@
[DEBUG] item %@ needs to be re-uploaded
[DEBUG] item %@ doesn't need to be reuploaded
[CRIT] UNREACHABLE: Couldn't find parentID for record %@
[DEBUG] We already remapped %@
[CRIT] Assertion failed: !parentItem.isKnownByServer
[WARNING] We were told to remap to an item %@ -> %@ which is already in our client truth
[DEBUG] The server wasn't able to remap parentID %@ to pcs chained parent %@ so doing it now
[DEBUG] handling error for %@
[CRIT] UNREACHABLE: Unable to open iwork package %@
[CRIT] UNREACHABLE: Uploaded an iWork package of size 0 (itemID: %@)
sharing/accept-flow
[NOTICE] share acceptation %@ failed with error %@
[DEBUG] use fallback flow with reason %@
[CRIT] UNREACHABLE: Session is not cancelled but DBs serial queue is nil!
[DEBUG] delete share acceptation fault because operation failed
[NOTICE] share acceptation %@ succeed and document is now live on disk at %@
[NOTICE] User clicked on share link %@
[DEBUG] Accept flow completed successfully.
[CRIT] UNREACHABLE: can't perform next step because operation is finished; %@
[DEBUG] 
%llx running %@ in %@
[CRIT] Assertion failed: method != nil
[CRIT] Assertion failed: _shareMetadata
[ERROR] failing share acceptation with %@
[DEBUG] network is unreachable, replacing error with generic network error
[CRIT] Assertion failed: _shareURL
[DEBUG] 
%llx activating shared zone
[DEBUG] Open application completed successfully
[ERROR] Failed to open the target app - %@
[DEBUG] 
%llx checking if document sharing is supported
[DEBUG] 
%llx Check if app is installed
[DEBUG] Application proxy: %@
[CRIT] Assertion failed: !(goToAppStore && openWebPreview)
[DEBUG] Application proxy missing %@ entitlement
[DEBUG] %@ is installed
[DEBUG] 
%llx Check if a user is signed in to iCloud and iCloud Drive is turned on
[WARNING] Can't accept share without a user signed in to iCloud
[CRIT] Assertion failed: !(goToSettings && openWebPreview)
[ERROR] Can't retrieve application app library ID for %@
[WARNING] Can't accept share without iCloud Drive turned on (accountDSID: %@, isEnabledForCloudDocs: %@, isAppLibraryDisabled: %@)
[DEBUG] User is eligible to accept the share
[DEBUG] 
%llx Check if app is profile disabled
[WARNING] managed AppleID can't access to public share
[WARNING] %@ is disabled by profile
[DEBUG] 
%llx Show sharing join dialog
[DEBUG] Owner or share already accepted, skipping to next step
[NOTICE] User has refused to open shared document at %@
[NOTICE] User has accepted to open shared document at %@
[DEBUG] 
%llx Parsing share metadata %@
[DEBUG] Pre-creating accept operation to block next sync down %@
[CRIT] Assertion failed: acceptShareOp
[DEBUG] alias app library is %@
[DEBUG] local client zone is %@ (zoneName: %@)
[DEBUG] shared item is identified by %@ (displayName: '%@')
[DEBUG] 
%llx Start accepting share URL
[CRIT] Assertion failed: [self _isOwnerOrShareAlreadyAccepted]
[DEBUG] 
%llx creating share accept operation
[DEBUG] 
%llx received share access completion
[WARNING] failed to accept share - %@
[CRIT] UNREACHABLE: No operation error and no share id
[WARNING] we are already accepting share %@
[DEBUG] accept operation completed with success
[CRIT] Assertion failed: _linkItemID
[DEBUG] 
%llx Wait for shared item to sync down
[CRIT] UNREACHABLE: %@ wasn't found after syncing down on the owner
[DEBUG] 
%llx Wait for item to be on disk
[CRIT] Assertion failed: _linkFileObjectID
[WARNING] %@ wasn't able to be found as a fault.  We must have reset or be broken structure or it was deleted locally.
[DEBUG] 
%llx Preparing side fault
[DEBUG] found share item %@
[DEBUG] share item %@ is in transient state, should try again later
[CRIT] UNREACHABLE: item is in an unknown state: %@:
[CRIT] UNREACHABLE: document doesn't exists anymore
[CRIT] UNREACHABLE: item isn't a document or directory
[DEBUG] created shared item-to-be in db: %@
[DEBUG] created link shared item-to-be in db: %@
[CRIT] Assertion failed: _liveFileURL
[ERROR] can't get bookmark string at %@
[DEBUG] Got bookmark string %@ for URL %@
[DEBUG] doing open operation on "%@" with "%@"
[ERROR] don't know how to open shared item at %@
[DEBUG] 
%llx Waiting for share accept to finish
[DEBUG] 
%llx Creating server fault if possible
[CRIT] Assertion failed: _clientZone
[DEBUG] We don't have need to fetch deeply into the folder. Letting the list directory take care of fetching
[CRIT] Assertion failed: rootRecordID
[DEBUG] Failed to fetch record for server fault - %@
[DEBUG] Finished fetching records for server fault
[CRIT] UNREACHABLE: couldn't save to server truth when creating server fault
[WARNING] Couldn't create a directory fault
[ERROR] %@ wasn't found after syncing down
[DEBUG] 
%llx Open shared document if still needed at %@
[CRIT] Assertion failed: shareURL
[ERROR] nil app bundle ID for share URL: %@
[CRIT] Assertion failed: redirectReason
[DEBUG] Opening in web browser (reason: %@) %@
[ERROR] Can't open "%@" using default web browser
[NOTICE] starting iclouddrive-agent
[DEBUG] 
%llx received new XPC connection: %@
[DEBUG] 
%llx Client %@ connection was invalidated
[CRIT] Assertion failed: session != nil
[DEBUG] 
%llx invalidating connection with %@
[DEBUG] granting access to %@ for non-sandboxed app %@
[ERROR] %@ is talking to us without container proxy right
[ERROR] %@: is trying to call %@, but has no access
[ERROR] Failed to consume extension %@ %{errno}d
[CRIT] UNREACHABLE: there should be a client
[DEBUG] granting access to non-sandboxed app %@
[ERROR] invalid entitlement for %@
[DEBUG] skipping throttling because this is a batch failure
[DEBUG] server provided backoff %.03fs (delay %.03fs)
[DEBUG] sync backoff %.03fs
[CRIT] UNREACHABLE: invalid length: %ld
[CRIT] UNREACHABLE: we should not have alias uuid types anymores
[CRIT] UNREACHABLE: unknown itemID type %d
[CRIT] Assertion failed: object->item_code == 1 || object->item_code == 2
[CRIT] Assertion failed: object->item_code == 4 || object->item_code == 5
[CRIT] UNREACHABLE: invalid BRCItemID (%@)
[CRIT] UNREACHABLE: unmigrated? invalid BRCItemID (%@) - %d
[CRIT] Assertion failed: rio.app_lib_rowid
[CRIT] Assertion failed: uio.app_lib_rowid
[CRIT] UNREACHABLE: unknown itemID kind
[CRIT] UNREACHABLE: invalid enclosure uuid - %@
[CRIT] %@
[CRIT] Assertion failed: self.wantsContent
[CRIT] UNREACHABLE: migration should work: %@
[ERROR] invalid owner in rowid_reservations, resetting
[ERROR] found duplicate app library, resetting
[CRIT] UNREACHABLE: incomplete migration for client_uploads
[CRIT] UNREACHABLE: incomplete migration for client_downloads
[CRIT] Corrupt DB state: some items belong to non-existing zones!
[ERROR] parentID of unexpected length %d
[ERROR] itemID of unexpected length %d
[ERROR] type mismatch with parent %d or item %d
[CRIT] Assertion failed: dstZone
[CRIT] Assertion failed: dstAppLibrary
[CRIT] Assertion failed: physicalBounceNo && physicalBounceNo >= 2
[CRIT] Assertion failed: stage || !session.containerCache
[DEBUG] Deleted %llu items from client truth which haven't been synced to the server
[DEBUG] Deleted %llu br aliases from client truth
[CRIT] UNREACHABLE: Couldn't save xattr blob for signature %@.  Continuing anyway - %@
[DEBUG] We have items to migrate to fpfs
[ERROR] Failed determining if we have items - %@
[DEBUG] We don't have items to migrate to fpfs
[CRIT] UNREACHABLE: Couldn't convert property list to data - %@
[CRIT] Assertion failed: argc == 3
[CRIT] Assertion failed: appLibraryOwner
[CRIT] Assertion failed: syncContextIdentifier
[CRIT] Assertion failed: reply
[CRIT] Assertion failed: item.fileObjectID
[NOTIF] 
%llx collecting %lu additional folder updates
[CRIT] UNREACHABLE: -asPrivateClientZone called on a shared zone
[CRIT] UNREACHABLE: -asSharedClientZone called on a private zone
[CRIT] UNREACHABLE: must be implemented in subclass
[CRIT] Assertion failed: _syncUpBudget && _syncUpThrottle && _syncDownThrottle
[DEBUG] associating %@ with %@
[DEBUG] 
%llx %s container %@
[CRIT] Assertion failed: _delegate
[DEBUG] Activation done
[DEBUG] 
%llx deactivating %@
[CRIT] Assertion failed: _activated
[CRIT] UNREACHABLE: Container needs server and client truths reset: %s
[WARNING] Container needs server and client truths reset: %s
[WARNING] Container needs reset - %lu
[WARNING] Server zone has been moved to cloud docs
[WARNING] Server tells us we need to redo PCS prep
[DEBUG] Resetting sync throttles because we registered our first upload tracker
[WARNING] Calling the upload handler because sync is failing in %@: %@
[DEBUG] Completed upload for all items in %@
[DEBUG] Still need to upload %llu more items (%llu bytes)
[DEBUG] Still need to sync up %@ more items (and maybe upload more)
[CRIT] UNREACHABLE: there should never be more than one match for that query (parentID: %@, name: %@, parentZoneID: %@)
[DEBUG] Sync: updated sync-up throttle: %@
[DEBUG] Ignoring sync state change because sync is disabled for this container
[DEBUG] sync state changed: %@, was %@
[DEBUG] Asking for sync up but we never synced down, do that first
[DEBUG] %@ sync state changed, was %@
[DEBUG] added %@ as a sync-down dependency of %@
[DEBUG] removed %@ as a sync-down dependency of %@
[DEBUG] Sync down has greater priority then %@
[DEBUG] Boosting sync down op to be discretionary because we have blocked operations which are
[INFO] 
%llx %@: starting sync down
[DEBUG] we're not activated anymore, not syncing-down immediately
[DEBUG] adding sync down dependency: %@
[DEBUG] Sync: updated sync-down throttle: %@
[CRIT] Assertion failed: _syncDownOperation == nil
[CRIT] Assertion failed: _syncUpOperation == nil
[DEBUG] Sync: %@ is already in sync, odd
[CRIT] UNREACHABLE: We are alreadying syncing but we tried to sync again
[DEBUG] 
%llx Sync: considering sync operation for %@
[DEBUG] Sync-up has no global budget for more than 10s: %.1fs (%@)
[DEBUG] Sync-up has no budget for more than 10s: %.1fs (%@)
[DEBUG] Sync-up is throttled for more than 10s: %.1fs (%@)
[DEBUG] Sync-up retry-after is over 10s: %.1fs
[DEBUG] sync-down is throttled for more than 10s: %.1fs (%@)
[DEBUG] Sync: trying to start sync up
[DEBUG] Sync: starting sync up with cost:%.1f
[DEBUG] Sync: nothing to sync up
[DEBUG] Sync: items to sync-up are throttled for another %.1fs
[DEBUG] Executing cancelled op %@ so operations waiting on it can proceed
[CRIT] UNREACHABLE: Forcing cancel on sync op
[DEBUG] No sync required anymore at that time
[DEBUG] Not ready to sync yet, sleeping for %.3fs
[DEBUG] Not learning anything about %@ because the update was dropped: %@
[DEBUG] Not learning anything about %@ because the server merged ETag %@ to produce %@
[CRIT] UNREACHABLE: Couldn't locate alias target for %@
[DEBUG] Learn structural ETag for %@: %@
[DEBUG] Learn content ETag and Last Editor for %@: %@, %@
[DEBUG] Learn content ETag for %@: %@
[DEBUG] Learn side-car ETag for %@: %@
[DEBUG] 
%llx Sync: completed sync up for %@, cost:%.1f, itemCount:%llu %@
[DEBUG] decreasing sync-up batch size since server says we exceeded limits
[DEBUG] Sync: requestID:%llu cancelled
[DEBUG] Sync: requestID:%llu failed sending: %@
[ERROR] Sync: requestID:%llu failed sending: %@
[DEBUG] Forcing sync up of dead parent %@
[DEBUG] Sync: requestID:%llu succeeded
[DEBUG] Sync: updated sync-up throttle: %@
      and container state: %@
[DEBUG] Queueing sync barrier sync down for %@
[DEBUG] Not resuming sync token because %p is still in flight
[NOTICE] signaling sync down waiters
[DEBUG] Sync: updated sync-down throttle: %@
      and container state: %@
[WARNING] marked %lld items rejected after cross zone move
[CRIT] Assertion failed: _requestID == 0 || requestID <= _requestID
[WARNING] not enumerating in-flight items until we are caught up.
[DEBUG] received item in request:%llu
   local:  %@
   server: %@
[DEBUG] item acknowledged in requestID:%llu
   local:  %@
   server: %@
   diffs:  %@
[DEBUG] Alias was rejected when syncing up in private zone %@
[DEBUG] 
%llx Resolving server-side folded path-match for: %@
[DEBUG] Found a path-match in the server truth: %@
[DEBUG] path-match is new, learn new item ID %@ instead of %@
[DEBUG] we couldn't find a suitable path-match, mark the item as rejected
[DEBUG] Sync: requestID:%llu acknowledged
[DEBUG] Sync: just a new sync down without new sync up since requestID:%llu
[WARNING] Marking latest sync request failed because the requestIDs differ %llu vs %llu for %@
[CRIT] UNREACHABLE: Not cross zone moving a zone to itself
[DEBUG] 
%llx cross zone move documents from %@ to %@
[DEBUG] cleaning up %@
[CRIT] UNREACHABLE: can't prepare cross move items! %@
[CRIT] Assertion failed: db.changes == 0
[CRIT] UNREACHABLE: can't cross move items! %@
[NOTICE] cross zone moved %lld items from %@ to %@!
[ERROR] can't save cross zone move state: %@
[ERROR] can't save cross zone move state for appLibrary %@: %@
[ERROR] can't save destination zone: %@
[DEBUG] Tombstones with ranks are gone: %@
[DEBUG] Signaling that tombstones can be collected in %@
[DEBUG] op has priority over the sync down op so cancelling sync down and rescheduling
[DEBUG] Blocking server stitching op %@ until we fetch the initial change token
[DEBUG] Starting to list the contents of %@ (%sdiscretionary)
[DEBUG] Blocking list on share accept %@
[DEBUG] Blocking low-priority parent fetch operation %@ on %@
[DEBUG] Blocking low-priority fetch share alias operation %@ on %@
[DEBUG] Blocking low-priority fetch recents operation %@ on %@
[DEBUG] Removing list operation with no observers %@
[DEBUG] Blocking low-priority list operation %@ on %@
[DEBUG] Starting to fetch parent chain of %@
[DEBUG] Starting to fetch alias for %@
[DEBUG] Can't list %@ when not activated
[DEBUG] Can't list when sync blocked
[DEBUG] Can't list changes on %@ when we have already completed full sync
[DEBUG] Can't list %@ because it had failed previously
[DEBUG] Cancelling operation %@ because it is discretionary and we have non-discretionary work
[WARNING] Failed listing directory %@ - %@
[DEBUG] Finished listing contents of %@
[DEBUG] Can't list item %@ in zone %@ which isn't a directory fault %d
[DEBUG] We've completed full sync so just recursively rescheduling items under %@
[DEBUG] Finished listing contents of %@ with error %@
[DEBUG] Forcing %@ to list all changes because we cancelled an old version
[DEBUG] Starting to recursive list the contents of %@
[WARNING] Can't fetch parent chain until activated
[DEBUG] Can't fetch parent chain sync blocked
[DEBUG] Can't fetch parent chain when completed full sync
[WARNING] Can't fetch parent chain of a root item
[CRIT] UNREACHABLE: can't fetch parent chain with no itemID
[WARNING] Can't fetch share alias until activated
[DEBUG] fetch share alias when sync blocked
[DEBUG] Can't fetch share alias when completed full sync
[CRIT] UNREACHABLE: Can't fetch share alias in a shared zone
[DEBUG] Not fetching recents when not activated
[DEBUG] Already fetching recent documents
[DEBUG] Can't fetch recent and favorites when sync blocked
[DEBUG] Already fetched recent and favorite documents
[DEBUG] Completed full sync so already have recent documents
[DEBUG] Not fetching recents on a shared zone
[DEBUG] Not fetching recents on a non-public zone
[DEBUG] Finished fetching recent documents for %@ - %@
[DEBUG] Staring to fetch recent documents %@
[WARNING] calling and removing all share acceptance blocks
[DEBUG] 
%llx waiting for item %@ to be on disk
[WARNING] %@ and %@ must be non nil to register action
[DEBUG] 
%llx done waiting for item to be on disk
[WARNING] Couldn't get user visible file on %@ - %@
[WARNING] Cancelling sync down operation that uses a background session
[WARNING] Cancelling sync up operation because we need to sync down now
[DEBUG] 
%llx waiting sync down to complete for item %@
[DEBUG] 
%llx done waiting for sync down to complete for %@
[WARNING] %@ is resetting or broken structure.  Not waiting on sync down of %@
[DEBUG] Waiting for sync down for %@ in %@
[DEBUG] 
%llx Cancelling all share acceptance callbacks due to unreachable network
[DEBUG] %@ is now idle
[DEBUG] %@ is still not idle
[DEBUG] Injecting NeedsOSUpgrade fault for record %@
[CRIT] UNREACHABLE: Couldn't find root share for %@
[DEBUG] signal changes to fileproviderd for %@
[DEBUG] invalidating change token
[DEBUG] There was an error while fetching items: %@
[CRIT] Assertion failed: !_isSettingUpNotificationReceiving
[DEBUG] 
%llx container list did change, invalidating our change token
[DEBUG] 
%llx listing %s items under %@ from page %llu
[DEBUG] Can't find root for container %@
[DEBUG] Enumerating container root dir %@ under %@
[ERROR] there was an error when listing items: %@
[DEBUG] Sending %s list batch %@ under %@ next %llu
[DEBUG] Re-creating missing documents directory for container %@
[WARNING] Still can't find documents directory for container %@
[DEBUG] Enumerating container documents dir %@
[DEBUG] 
%llx listing %s changes under %@ from rank:%lld
[DEBUG] token expired (current rank %llu)
[DEBUG] no update to send back
[DEBUG] Sending %s items under %@. updated:%@.  deleted:%@
[DEBUG] Invalidating %s file enumerator for %@
[NOTICE] received account did update notification, invalidating change token
[ERROR] Failed to create package: %@
[WARNING] Failed to anchor package %@ at %@: %@
[CRIT] Assertion failed: _serverZone
[CRIT] Assertion failed: _defaultAppLibrary
[CRIT] Assertion failed: [serverZone isKindOfClass:[BRCPrivateServerZone class]]
[DEBUG] 
%llx %s private container %@
[WARNING] problem report for %@ wasn't acked
[DEBUG] problem report for %@ completed
[DEBUG] zone-health changed for %@ previous %@ new %@
[WARNING] We had a problem and the zone is healthy again, resetting the zone
[WARNING] Server told us the zone is healthy again, but we didn't have a problem
[DEBUG] 
%llx recomputing app sync block state for %@
[DEBUG] updating sync state to be %s for %@
[DEBUG] sync remaining %s for %@
[CRIT] Assertion failed: unsaltedBookmarkData
[WARNING] Strange... We have multiple levels of associated item IDs for %@ - (%@ vs %@)
[DEBUG] 
%llx scheduling zone creation operation for %@
[DEBUG] 
%llx finished zone creation with error: %@
[NOTIF] Progress: stop publishing global progress
[NOTIF] 
%llx Acquired root url for global progress: %@
[ERROR] can't get root URL: %@
[NOTIF] Published progress on %@
[NOTIF] global progress: updating
[NOTIF] global progress: adding app library %@: %@
[NOTIF] global progress: queueing %@
[NOTIF] global progress: dropping %@
[NOTIF] global progress: flushing
[CRIT] Assertion failed: appLibraryID
[DEBUG] Not allowing re-creation of shared to me top level item when the item is dead in the server truth
[DEBUG] Waiting on server full sync before we fake sync shared to me top level item which is missing in the server truth
[DEBUG] shared document is read-only, do not sync
[CRIT] Assertion failed: !item.isSharedToMeTopLevelItem
[WARNING] item should really have an etag
[DEBUG] Fake syncing up shared folder record %@
[CRIT] UNREACHABLE: unsupported top level item kind
[DEBUG] Syncing up shared document alias record %@
[WARNING] syncing the structure of an item without an alias item
[DEBUG] Deleting alias in private zone %@
[DEBUG] 
%llx re-scheduling apply jobs for %@ because it finished sync-up
[DEBUG] Unsharing %@
[DEBUG] Editing name on shareID %@
[DEBUG] Syncing up directory record %@%s
[WARNING] Not syncing deletion of ETag-less version: %@
[DEBUG] We need to update sharing info for this reset item
[DEBUG] shared document is read-only, do not sync its version
[DEBUG] will pcs chain records
[ERROR] re-uploading uploaded record: %@
[DEBUG] ItemID changed while uploading (%@ -> %@), starting over
[ERROR] thumbnail not found.  Force upload again
[CRIT] UNREACHABLE: package with no uploaded content - %@
[CRIT] UNREACHABLE: File with no content signature - %@
[WARNING] Forcing re-upload of an item which has an expired put receipt - %@
[DEBUG] forcing upload of %@
(dead in server truth)
[DEBUG] Syncing up %sversion record %@
[DEBUG] Syncing up %sdocument structure record %@
[DEBUG] for %@%s
[DEBUG] Syncing up finder alias record %@
[DEBUG] Syncing up symlink record %@%s
[DEBUG] Deleting dead record already dead in the server truth %@
[DEBUG] 
%llx Deleting %@ record for %@
[DEBUG] 
%llx preparing sync-up of %@
[CRIT] UNREACHABLE: asked to syncup an unkown item type: %@
[CRIT] Assertion failed: nextNotifRank >= _nextNotifRank
[CRIT] Assertion failed: nextPackageItemRank >= _nextPackageItemRank
[CRIT] UNREACHABLE: Called -asSharedItem on a private item
[CRIT] Assertion failed: !_serverZone.isSharedZone || (_sharingOptions & BRCSharingItemHasCKShareMask) != 0 || _st.state == BRC_ITEM_STATE_TOMBSTONE
[CRIT] Assertion failed: self.isFSRoot
[CRIT] UNREACHABLE: can't find the appLibrary of %@
[WARNING] Couldn't figure out the expected app library; falling back to clouddocs
[CRIT] UNREACHABLE: No longer support aliases
[CRIT] UNREACHABLE: unsupporter server item type: %d
[CRIT] UNREACHABLE: unknown item type: %d
[CRIT] Assertion failed: self.isNonDesktopRoot || self.isDocumentsFolder
[CRIT] Assertion failed: self.isSharedZoneRoot
[CRIT] Assertion failed: sharedZone
[CRIT] UNREACHABLE: we should not have alias or share uuid types anymores
[CRIT] UNREACHABLE: we should not have alias or shared uuid types anymores
[CRIT] Assertion failed: libraryRowID || sharedZoneRowID
[CRIT] UNREACHABLE: invalid UUID: %s
[CRIT] Assertion failed: object->item_code == BRCItemIDCodeDocuments || object->item_code == BRCItemIDCodeZoneRoot || object->item_code == BRCItemIDCodeSharedZoneRoot
[CRIT] UNREACHABLE: decoding an unknown kind of itemid
[CRIT] UNREACHABLE: encoding an item id with an unknown kind
[CRIT] Assertion failed: rio.zone_rowid
[CRIT] UNREACHABLE: unparsable mangled itemID: %s
[CRIT] Assertion failed: len == sizeof(uuid_t)
[CRIT] UNREACHABLE: Invalid Shared ItemID
[CRIT] Assertion failed: argc == 2
[CRIT] Assertion failed: len == sizeof(_UUIDItemObject_OLD)
[CRIT] UNREACHABLE: Invalid Alias ItemID
[CRIT] Assertion failed: p->item_code == _UNUSED_BRCItemIDCodeSharedUUID
[CRIT] Assertion failed: len == sizeof(_UUIDItemObject_OLD) && ((_UUIDItemObject_OLD*)blob)->item_code == BRCItemIDCodeSharedZoneRoot
[ERROR] unable to read package header %@ with version %d - %@
[CRIT] Assertion failed: _reader
[ERROR] Input stream encountered an error %@
[DEBUG] Adding %@ to the manifest
[CRIT] UNREACHABLE: Invalid args in %@
[ERROR] openat failed to apply metadata for manifest item %@ %{errno}d
[ERROR] fsetattrlist failed for pkg item %@ %{errno}d
[CRIT] UNREACHABLE: we should have downloaded this file if there is nothing live
[ERROR] Failed to open live pkg item at %s %{errno}d
[ERROR] Failed to stat live pkg item at %s %{errno}d
[ERROR] clonefileat(%d, %@, %d, %@) %{errno}d
[DEBUG] cloned at %@ for package staged in %@
[ERROR] linkat(%d, %@, %d, %@) %{errno}d
[DEBUG] hardlinked at %@ for package staged in %@
[DEBUG] copied at %@ for package staged in %@
[CRIT] UNREACHABLE: No reader to stage package at %s
[CRIT] UNREACHABLE: Package has been corrupted on the serverAsking for asset index out of bounds %lu vs %lu in package: %@
[CRIT] UNREACHABLE: relpath should always exist
[DEBUG] %@ already exists in stage for package %@
[ERROR] Failed to mkdir %@ for package %@
[ERROR] Failed to create symlink %@ -> %@ for package %@
[CRIT] UNREACHABLE: Package has been corrupted in the cloudAsking for asset index out of bounds %lu vs %lu in package: %@
[ERROR] renameat(-1, %@, %d, %@) %{errno}d
[DEBUG] staged from %@ to %@ in %@
[CRIT] UNREACHABLE: We didn't fetch the corresponding pkg item from the server, but we were also not given a path to hardlink it from! (item: %s)
[CRIT] UNREACHABLE: invalid item type: %d
[CRIT] UNREACHABLE: xattr index is out of bounds %ld of total %ld
[CRIT] UNREACHABLE: Can't find xattr at index %ld
[ERROR] Failed to read xattrs blob: %@
[ERROR] Failed to apply xattrs to file descriptor: %@
[DEBUG] Successfully applied xattrs %@ to package item %@
[ERROR] unable to stat %@ for package %@ %{errno}d
[ERROR] Unable to add item to manifest: %@
[DEBUG] Finished staging package for %@. Item count:%lu.  Asset index:%lu
[CRIT] UNREACHABLE: NULL path for item: %@
[CRIT] UNREACHABLE: NULL path for item symlink content: %@
[CRIT] Assertion failed: _stream
[CRIT] UNREACHABLE: object of unexpected observed value class - %@
[DEBUG] containers matching '%@': %@
[DEBUG] share-query progressed from cursor:%@ to cursor:%@
[DEBUG] 
%llx query for %@ starting with batchSize:%u
[DEBUG] created query %@ from cursor:%@
[DEBUG] created query %@ from query:%@
[DEBUG] 
%llx handling result of %@: %@
[CRIT] UNREACHABLE: unable to parse itemID from %@ in query %@
[DEBUG] fetched shared record %@ with etag:%@ in query %@
[DEBUG] 
%llx migration-query '%@' %@ for %@ starting from cursor:%@
[DEBUG] skipping migration '%@' because there is no server zone yet: %@
[CRIT] UNREACHABLE: unknown migration %s
[DEBUG] 
%llx migration-query '%@' %@ completed
[CRIT] UNREACHABLE: -[ICDBRContainer isOverQuota] shouldn't be called by the daemon.
[CRIT] UNREACHABLE: -[ICDBRContainer currentStatus] shouldn't be called by the daemon.
[CRIT] UNREACHABLE: -[ICDBRContainer lastServerUpdate] shouldn't be called by the daemon.
[CRIT] Assertion failed: !sharedSubitemIDs.count
[INFO] 
%llx %@ (%@) %s %@
[CRIT] UNREACHABLE: We should always be able to find the share root of a shared item
[CRIT] UNREACHABLE: We should always be able to look up the share root of a shared item
[CRIT] UNREACHABLE: Can't find item %@.  It's probably not known to fp, so we can't really get a URL
[DEBUG] Not pre-emptively cleaning turds when there are shared subitems
[INFO] User has opted to force clean subitems
[DEBUG] Failing copy share request on item inside of a folder share
[CRIT] Assertion failed: self->_cachedShare || error
[CRIT] Assertion failed: _itemID
BRCSharingModifyShareOperation/? (subclass activity missing)
[WARNING] Couldn't find item %@ in zone %@
[DEBUG] requesting sharing identity on %@
[CRIT] Assertion failed: contentsRecord
[CRIT] UNREACHABLE: no records and no error
[CRIT] UNREACHABLE: no error and no sharing key
[DEBUG] Got sharing identity for share - %@
[ERROR] Fetching sharing identity failed - %@
[CRIT] UNREACHABLE: no public sharing identity. avoiding breaking iwork shares
[DEBUG] Yanking the routing key from the server for %@
[CRIT] UNREACHABLE: no routing key on share identity prepared record
[CRIT] Assertion failed: [self->_share.publicSharingIdentity isEqualToData:self->_sharingIdentityPreparedRecord.encryptedPublicSharingKey]
[DEBUG] Requesting iwork sharing identity on %@
[CRIT] UNREACHABLE: sharing identity isn't encrypted data
[CRIT] UNREACHABLE: base token isn't a string
[CRIT] UNREACHABLE: no base token %@ or sharing identity %@ and no error
[CRIT] UNREACHABLE: Sharing identities don't match (%@ vs %@)! Trying to fix up the identities
[DEBUG] Got iWork sharing identify for share - %@
[ERROR] Fetching iWork sharing identity failed - %@
[CRIT] UNREACHABLE: not a directory nor a document
sharing/save-share
[CRIT] UNREACHABLE: no share record
[ERROR] Failed with baseTokenError=%@
[CRIT] UNREACHABLE: directory %@ isn't pcs chained
[ERROR] Couldn't get base record for %@, %@
[CRIT] UNREACHABLE: couldn't get base record
[DEBUG] Saving %@%@ for share op %@
[CRIT] UNREACHABLE: got an unexpected number of shares saved
[ERROR] failed saving share %@: %@
[DEBUG] finished saving share %@
[CRIT] Assertion failed: [save[1].recordType isEqualToString:kBRRecordTypeContent] || [save[1].recordType isEqualToString:kBRRecordTypeStructure]
[CRIT] Assertion failed: [save[0].recordType isEqualToString:CKRecordTypeShare]
[DEBUG] Saved share %@
sharing/destroy-share
[CRIT] UNREACHABLE: got an unexpected number of shares deleted
[ERROR] failed to destroy share %@: %@ in %@
[DEBUG] destroyed share %@ in %@
sharing/modifyAccess
[CRIT] UNREACHABLE: no dict and no error
[ERROR] Failed %@ access to %@ - %@
[DEBUG] %@ access to %@
[DEBUG] Can't fetch shareID for item %@
sharing/copyParticipantToken
[CRIT] UNREACHABLE: No base token so the share token we would return would be invalid for iwork
[CRIT] UNREACHABLE: no error and no key
sharing/prepareFolderPCS
[DEBUG] Finished pcs chaining batch when prepping and completed: %d listOperation %@ error %@
sharing/copy-shareURL
[CRIT] UNREACHABLE: Couldn't get a share URL
[DEBUG] Share: %@
[DEBUG] Prepared record: %@
[CRIT] UNREACHABLE: Couldn't get a share URL for %@
sharing/copy-shortToken
[CRIT] UNREACHABLE: No short token found on record
[CRIT] Assertion failed: (item.sharingOptions & BRCSharingItemHasShareID) == 0
sharing/clean-subitems
[CRIT] UNREACHABLE: Can't find server item %@
[CRIT] UNREACHABLE: Couldn't compute new parentID for %@
[WARNING] subitem %@ is already shared inside %@
[CRIT] UNREACHABLE: Don't know how to unshare item with type %d
[WARNING] deleting %s shareID %@
[DEBUG] Found shared-to-me alias %@ in %@
[DEBUG] We need to fetch %@ before we can continue
[CRIT] UNREACHABLE: Huh?  We shouldn't be processing this item if it's not shared and not a directory fault %@
[CRIT] Assertion failed: (options & BRCSharingItemHasShareID) != 0
[CRIT] UNREACHABLE: Don't know how to unshare document of type %d
[DEBUG] deleting %s shareID %@
[CRIT] UNREACHABLE: Can't locate the item type we are deleting?
[DEBUG] Reparenting shared alias item to root %@
[DEBUG] Saving side car changed records %@
deleted record %@
server change token %@
requestID %llu
[CRIT] UNREACHABLE: Couldn't deserialize side car info on %@
[CRIT] UNREACHABLE: Couldn't parse alias record name for %@
[DEBUG] Ignoring deleted recordID where we couldn't locate the server zone %@
[CRIT] UNREACHABLE: failed to alloc ranks when syncing down side cars for %@
[DEBUG] Ignoring record of unknown type %@
[CRIT] Assertion failed: ![deletedRecordIDs containsObject:record.recordID]
[CRIT] Assertion failed: sideCarRecordsByRecordID[record.recordID] == nil
[CRIT] Assertion failed: ![deletedRecordIDs containsObject:recordID]
[CRIT] Assertion failed: sideCarRecordsByRecordID[recordID] == nil
[DEBUG] Finished syncing down side cars - %@
[DEBUG] %@: signaling
[DEBUG] %@: signaling at %lld
[CRIT] Assertion failed: _multipleItemsInteractiveSchedulingCount >= 0
[DEBUG] 
%llx force scheduling interactive transfers
[DEBUG] waiting for the next scheduling to finish
[DEBUG] Force scheduling a new high priority batch
[CRIT] Assertion failed: operation
[DEBUG] adding operation %@ to the transfer stream
[CRIT] Assertion failed: _isWaitingForTransferBatch
[DEBUG] 
%llx cancelling entry %@ in %@
[CRIT] UNREACHABLE: this operation should have been cancelled
sharing/access-token
[CRIT] UNREACHABLE: encrypted access token %@ is of unexpected type
[CRIT] UNREACHABLE: reference identifier %@ is of unexpected type
[CRIT] Assertion failed: xpcDict
[CRIT] Assertion failed: containerError == CONTAINER_ERROR_NONE
[CRIT] UNREACHABLE: No path for support directory
[INFO] Initializing restore manager with %@
[ERROR] Failed to update attached database %@
[INFO] Calling completion block with success.
[CRIT] Assertion failed: !info || info.isSymLink
[CRIT] Assertion failed: [zoneID.ownerName isEqualToString:CKCurrentUserDefaultName]
create-zone
[DEBUG] 
%llx Sync: create cloudkit zone for %@
[CRIT] Assertion failed: !_optimisticSubscribe
[CRIT] Assertion failed: savedZones.count == 1
[CRIT] Assertion failed: !self->_syncContext.isShared
[DEBUG] optimistic subscribe failed with Zone Not Found, try to create the zone first
[DEBUG] accountID: %@
[ERROR] can't create account: %@
[ERROR] Requested to logout of account %@
[DEBUG] Handling share metadata %@
[CRIT] UNREACHABLE: Service URL isn't reachable! re-creating it now... %@
[CRIT] UNREACHABLE: failed to re-create service URL - %@
sync/zone-purge
[DEBUG] deleted %@ on server
[DEBUG] deleted shared zones associated to %@ on server
[ERROR] latest GC started %lld seconds in the future
[CRIT] Assertion failed: _persistedState == nil
[CRIT] Assertion failed: _deviceID != 0
[ERROR] Unable to exclude '%@' from backups: %@
[CRIT] Assertion failed: _stageDirectoryFileID[dirIndex] != 0
[ERROR] fstat(%d) '%@' failed %{errno}d
[WARNING] '%@' is not a directory deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[WARNING] '%@' is not on the same volume as the root deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[ERROR] unlink('%@') failed deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x %{errno}d
[ERROR] mkdir('%@') withIntermediateDirectories failed: %@
[ERROR] mkdir('%@') failed %{errno}d
[ERROR] open('%@') failed %{errno}d
[ERROR] fstat('%@') failed %{errno}d
[ERROR] symlinkat('%@', %d, '%@') failed %{errno}d
[CRIT] UNREACHABLE: Can't find existing saved contents for 2 phase download
[DEBUG] 
%llx computing desired packages indices
[CRIT] UNREACHABLE: Package inside %@ is corrupted in the cloud
Asking for asset index out of bounds %lu vs %lu in package: %@
[CRIT] UNREACHABLE: Couldn't write download spec to url %@ - %@
[CRIT] UNREACHABLE: Couldn't move manifest url from %@ to %@ - %@
[DEBUG] Desired indices are: %@ (itemCount: %ld)
[ERROR] BRCOpenAt(%d, %@, O_RDONLY) failed %{errno}d
[ERROR] BRCOpenAt(%d, %@, O_CREAT|O_RDWR|O_EXCL) %{errno}d
[ERROR] fcopyfile(%d, %d, NULL, COPYFILE_DATA) %{errno}d
[ERROR] BRCRenameAt(%d, %@, %d, %@, 0) %{errno}d
[DEBUG] can't open by fileID:%llu %{errno}d
[CRIT] UNREACHABLE: returnedFileID(%llu) != fileID(%llu)
[CRIT] Assertion failed: _stageDirectoryPath[kBRCStageDirectoryForPendingFetchStream] != nil
[ERROR] openat(%d, '%@') failed %{errno}d
[CRIT] UNREACHABLE: Asked to save xattr without signature or data
[DEBUG] Saving an xattr signature that already exists! %@
[CRIT] UNREACHABLE: Asked for xattr without signature
[DEBUG] deleting (%d, '%@') asynchronously
[DEBUG] renameat(%d, '%@', %d, '%@') failed %{errno}d
[ERROR] failed removing documentID for %@ %{errno}d
[DEBUG] moved (%d, '%@') to the graveyard at '%@' for %@
[DEBUG] fileID:0 doesn't exist in stage (metadata-only update)
[DEBUG] fileID:%llu is in the %s
[DEBUG] running GC because we are in low disk space
[ERROR] fts_open(%@) failed %{errno}d
[ERROR] fts_read() failed for path %s %{errno}d
[DEBUG] Collected %lld bytes from purging the graveyard
[CRIT] UNREACHABLE: Unexpected record name %@
[DEBUG] starting garbage collection at %ld
[DEBUG] removing staged file for upload: %@
[DEBUG] removing staged file with id %llu
[DEBUG] removing staged file for download: %@ device:%d ino:%lld
[DEBUG] removing deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[CRIT] UNREACHABLE: Failed to parse record name %@ or zone %@
[DEBUG] latest GC:%ld; previous GC:%ld
[DEBUG] closing
[CRIT] Assertion failed: _persistedState
[CRIT] Assertion failed: minDelta >= 0
[CRIT] Assertion failed: maxDelta > minDelta
[DEBUG] running GC at startup after %lld seconds; %@
[DEBUG] skipping GC at startup after %lld seconds; %@
[WARNING] Failed to defer the stage gc xpc activity
[DEBUG] running GC in XPC activity after %lld seconds; %@
[DEBUG] skipping GC in XPC activity after %lld seconds; %@
[ERROR] fgetattrlist(%d) failed %{errno}d
[ERROR] fcntl(%d, F_GETPATH) failed %{errno}d
[DEBUG] Trying to resolve conflict on %@ name %@ itemid %@ mangledID: %@ item: %@
[DEBUG] 
%llx coordinated read request for '%@' (%@)
[DEBUG] can't parse version path '%@', probably not an iCloud version, allow it
[DEBUG] Item is already live at %@
[ERROR] Logged out: can't grant coordination to reader %@
at path '%@'
[CRIT] Assertion failed: loggedOutError
[DEBUG] Found a download operation already pending, piggy back on it
[ERROR] can't find sync context for mangled ID '%@', path '%@'
[ERROR] can't find live item for path '%@'
[DEBUG] Version already local, we're good!
[ERROR] Failed to copy from genstore url %@ to live url %@ - %@
[CRIT] Assertion failed: versionSize
[CRIT] UNREACHABLE: version not found
[ERROR] failed downloading version to path '%@': %@
[DEBUG] migration completed already
[DEBUG] No extensions to migrate
[DEBUG] Migrating %lu extensions
[WARNING] invalid change token format: %@
[CRIT] Assertion failed: rank >= _rank
[DEBUG] [%@] Learning index acked rank %llu (flushed rank %llu)
[DEBUG] [%@] Finished indexing for now
[DEBUG] [%@] signaling working set changes
[ERROR] [%@] failed to signal enumerator for working set: %@
[CRIT] Assertion failed: session.documentsScopeProviderManager && session.dataScopeProviderManager
[DEBUG] [visible] signaling working set changes
[DEBUG] [data] signaling working set changes
[ERROR] failed deleting ranks from tombstones: %@
[DEBUG] deleted ranks from tombstones successfully
[WARNING] dropping library item from recents index %@
[DEBUG] dropping item from recents index %@
[DEBUG] not dropping item, it is still live: %@
[DEBUG] [%@] handling reset for rowID %lld, notif rank: %llu
[WARNING] [%@] Dropping spotlight index for %@ due to a reset
[ERROR] [%@] Failed to delete searchable items for mangledIDs %@: %@
[WARNING] [%@] reset zone is not a private zone, skipping
[ERROR] [%@] change token has expired, index should be dropped
[CRIT] UNREACHABLE: [%@] we're already processing a batch. Is File Provider concurrently enumerating the working set?
[DEBUG] [%@] incoming rank is newer than what we know about: %lld > %lld, stopping here
[DEBUG] [%@] enumerating changes from notif rank %llu
[CRIT] UNREACHABLE: bad tombstone entry type: %d
[DEBUG] [%@] found a tombstone entry of type client zone db rowid (%lld), sending current batch
[DEBUG] [%@] sending batch from %llu to %llu (%@,%@)
[DEBUG] active set did change, notifying fileproviderd
[DEBUG] Canceling spotlight indexer.
[DEBUG] Publishing download progress for %@
[CRIT] UNREACHABLE: no record and no error
[CRIT] UNREACHABLE: file content is not a CKAsset: %@
[CRIT] UNREACHABLE: finder bookmark without content: %@
[CRIT] UNREACHABLE: pkg content is not a CKPackage: %@
[CRIT] UNREACHABLE: package manifest is not a CKAsset: %@
[CRIT] UNREACHABLE: xattrs package is not a CKAsset: %@
[CRIT] UNREACHABLE: unknown type for downloaded object %@
dl-content
[ERROR] Failed to get storage for r:%lld
[CRIT] Assertion failed: !item.isFinderBookmark
[CRIT] UNREACHABLE: There should be a file content property in %@
[CRIT] UNREACHABLE: no fileURL for %@ in %@
[DEBUG] 
%llx Downloader[%lld] staging %@
[CRIT] Assertion failed: vRecord
[CRIT] Assertion failed: ![vRecord.recordID.zoneID.ownerName isEqualToString:CKCurrentUserDefaultName] || _secondaryRecord
[CRIT] Assertion failed: [vRecord.etag isEqualToString:_etag]
[ERROR] Can't deserialize %@ - %@
[DEBUG] received version %@
[ERROR] Can't stage content - %@
[ERROR] Failed to attach thumbnail to version %@
[ERROR] Failed to get storage - %@
[ERROR] Failed to prepare for addition creation - %@
[DEBUG] Created addition staged at URL: %@, creation info: %@ live path:%@
[ERROR] Failed to create addition stage - %@
dl-version
[CRIT] Assertion failed: itemID.isNonDesktopRoot
[CRIT] UNREACHABLE: Constructing shared zone root item for itemID %@ is not supported
[CRIT] API MISUSE: can't save a zone root item
[CRIT] UNREACHABLE: asking the parent item of a root item
[CRIT] UNREACHABLE: asking the parent item ID of a root item
[CRIT] UNREACHABLE: asking the structural bit of a zone root is not supported
[DEBUG] Next event will fire in %fs
[ERROR] failed saving sharing options update %@: %@
[WARNING] Forced %lld orphans to be tombstones in the shared zone
[CRIT] UNREACHABLE: Path depth overflow
[DEBUG] propagated delete of %lld recursive children of %@
[CRIT] Assertion failed: _session.clientDB.isBatchSuspended
[DEBUG] 
%llx %@[%@]: finishing sync up
[DEBUG] Sync-Up[%@]: Scheduling a sync-up job
[DEBUG] 
%llx Uploader: scheduling retries
[DEBUG] Uploader[%@]: upload stage set to: %@
[DEBUG] 
%llx Uploader[%@]: %s -> %s [cancel-job]
[DEBUG] Uploader[%@]: Cancelling upload
[DEBUG] Uploader[%@]: cancelled thumbnail upload: %@
[DEBUG] Uploader[%@]: Cleaning up upload stage: %@
[DEBUG] 
%llx Uploader[%@]: cancel and cleanup item upload
[CRIT] API MISUSE: should call setState:forUploadJobID:zone:
[DEBUG] 
%llx Uploader[%@]: setting state to %s
[DEBUG] 
%llx Uploader[%@]: uploading
[DEBUG] Uploader[%lld]: job has been put back in queue %@
[DEBUG] Uploader: next job to retry in %.3fs
[DEBUG] Uploader: no more jobs to retry
[CRIT] UNREACHABLE: no app library for row ID %@
[CRIT] UNREACHABLE: upload scheduler is exact we should have an item
[DEBUG] Uploader: reached maximum allowed number of thumbnails retrieval (%ld)
[DEBUG] Uploader: below maximum allowed number of thumbnails retrieval (%ld)
[DEBUG] Uploader[%lld]: generating manifest for %@
[DEBUG] Uploader[%lld]: adding package item with deviceID 0x%lx fileID %lu
[CRIT] UNREACHABLE: We're missing a package xattr for signature %@ - %@
[DEBUG] Uploader[%lld]: adding xattr package item with URL %@ for %@
[WARNING] Failed to add xattrs to xattrs package: %@
[ERROR] failed to create manifest at %@: %@
[CRIT] UNREACHABLE: can't upload an item without a fileID
[DEBUG] Adding CKAsset with deviceID 0x%lx fileID %@ to the record for item %@
[ERROR] Unable to copy thumbnail at '%@' to upload stage: %@
[ERROR] Unable to get thumbnail size at '%@' to upload stage: %@
[DEBUG] generated thumbnail: %@
[DEBUG] Creation of record for %@ failed: %@
[DEBUG] Uploader[%lld]: assets only record generated: %@
[DEBUG] 
%llx Uploader[%@]: Done generating thumbnail, building record for %@
[DEBUG] 
%llx Uploader[%@]: Preparing record for upload of %@
[DEBUG] Uploader[%@]: generating thumbnail (shouldTransferThumbnail:yes) %@
[DEBUG] Uploader[%@]: skipping thumbnail (inDocumentScope:%s shouldHaveThumbnail:%s shouldTransferThumbnail:no)
[DEBUG] Uploader: scheduling %lld suspended throttles
[WARNING] can't duplicate the package %@: %@
[WARNING] can't anchor the package %@ at %@: %@
[CRIT] Assertion failed: pbitem.type != BRFieldPkgItemType_FILE || pbitem.hasSignature
[DEBUG] 
%llx Uploader[%@]: done with %@ (%@)
[WARNING] Dropping file ID and re-importing from file provider because we need to rescan the asset for %@ - %@
[DEBUG] Error is retriable, putting item back in the queue
[ERROR] non recoverable error while uploading %@: %@
[DEBUG] Uploader[%@]: increasing throttle back off
[CRIT] Assertion failed: ![item isReadAndUploaded]
[CRIT] UNREACHABLE: %@ should be a document
[CRIT] UNREACHABLE: %@ should be needs-upload
[WARNING] %@ needs to upload but the zone is resetting
[CRIT] UNREACHABLE: Corrupt stageID detected for item %@
[DEBUG] Uploader[%@]: throttle for %@ doesn't exist anymore
[NOTICE] uploading %ld documents in %@
[DEBUG] 
%llx Uploader[%lld]: %@ failed to sync up because it's out of quota: %@
[CRIT] Assertion failed: _session.clientDB.changes == 1
[DEBUG] 
%llx re-uploading failed items with size less than %@
[DEBUG] 
%llx quota changed from %@ to %@
[DEBUG] updated %@ quota: %lld
[WARNING] can't update quota: %@
[ERROR] Failed to finish the quota activity
[ERROR] Failed to continue the quota activity
[DEBUG] 
%llx resuming uploads for a day
[INFO] Uploads are paused for a day
[DEBUG] 
%llx pausing uploads for a day
[DEBUG] Overriding structural and content info from (%@, %@) -> (%@, %@) because the item is OOB sync
[CRIT] Assertion failed: itemID && parentID
[DEBUG] PCS chaining %@ (st:%@, ct:%@) to %@ for op %@
[CRIT] Assertion failed: !_fullyChainRecordInfoMap[parentRecordID]
[CRIT] Assertion failed: parentCKInfo
[CRIT] UNREACHABLE: No parent item?!?!
[CRIT] UNREACHABLE: unkown record type
[CRIT] Assertion failed: preppedRecords.count == 0
[DEBUG] Received records from first PCS step: %@
[CRIT] Assertion failed: preppedRecord.protectionData
[CRIT] Assertion failed: j + _halfChainedRecordMap.count == preppedRecords.count
[CRIT] Assertion failed: halfChainInfo != nil
[CRIT] Assertion failed: info.itemID
[DEBUG] We need to list the root item %@
[DEBUG] Finished enumerating pcs under directory %@
[DEBUG] We need to list %@
[CRIT] UNREACHABLE: stack is too deep!
[DEBUG] Enumerating pcs under new directory %@
[CRIT] Assertion failed: rootItem
[CRIT] UNREACHABLE: Can't PCS chain to documents or root
[CRIT] Assertion failed: si
[DEBUG] %@ is already chained
[CRIT] Assertion failed: listOp
[ERROR] Failed iterating PCS - %@
[ERROR] failed sending first PCS step - %@
[ERROR] Failed sending second PCS step - %@
[WARNING] Learning etag in the server truth for half chained parent %@
[WARNING] Uh oh... the record changed server side while we were mid pcs chain batch.  We might have oplock conflicts
[CRIT] Assertion failed: record.parent
[CRIT] Assertion failed: !record.parent
can't find FileProvider path
[DEBUG] not entitled to access %@
[DEBUG] gating account access to %@
[ERROR] no account for current persona
[WARNING] Failed getting domains - %@
[WARNING] Domain %@ not found.  Valid domains %@
[WARNING] No identity token found.  Trying to fetch one from the service
[DEBUG] gating access to %@
[CRIT] Assertion failed: [domainURL checkResourceIsReachableAndReturnError:nil]
[WARNING] trying to initialize a globalID from a nil object
[DEBUG] Item %@ has changed root shares so sending as not in cloud
[DEBUG] fetchLatestRevisionWithCompletionHandler: %@
[WARNING] Server zone was updated to the same etag we already have.  No need to refresh
[WARNING] Server zone was updated during refresh - avoiding races
[WARNING] Learning new sharing options %@ from refresh state for %@
[WARNING] Learning updated item mode %s from refresh state for %@
[ERROR] Failed fetching zones to prep PCS for %@ - %@
[DEBUG] No zones need PCS prep currently
[DEBUG] Prepping PCS for %@ -> %@
[DEBUG] PCS migration %@ for %@
[ERROR] Failed migrating PCS for %@ - %@
[CRIT] Assertion failed: ![BRFileProviderExtension isInSyncBubble]
[CRIT] UNREACHABLE: session wasn't properly closed
[CRIT] UNREACHABLE: db connections weren't properly closed and nillified
[DEBUG] 
%llx creating '%@'
[CRIT] can't create directory at '%@': %@
[CRIT] can't retrieve attributes of item at '%s': %@
[CRIT] created directory doesn't have read/write access for owner (permission: %c%c%c%c%c%c%c%c%c%c)
[DEBUG] permissions checked
[DEBUG] flocking '%@'
[CRIT] Assertion failed: defaultAppLibrary
[DEBUG] 
%llx rescheduling pending disk throttles
[DEBUG] 
%llx recomputing disk space
[ERROR] failed to create root:'%@': %@
[DEBUG] 
%llx resuming account session
[CRIT] Assertion failed: !_resumed
[CRIT] Assertion failed: _accountWaitOperation.operationFailureThrottle
[DEBUG] 
%llx closing account session
[DEBUG] cancelling misc operation: %@
[DEBUG] 
%llx cancelling _appsMonitor...
[DEBUG] 
%llx cancelling _defaultScheduler...
[DEBUG] 
%llx cancelling _fsWriter...
[DEBUG] 
%llx cancelling _fsImporter...
[DEBUG] 
%llx cancelling _fsUploader...
[DEBUG] 
%llx cancelling _fsDownloader...
[DEBUG] 
%llx cancelling _syncUpScheduler...
[DEBUG] 
%llx cancelling _applyScheduler...
[DEBUG] 
%llx cancelling _notificationManager...
[DEBUG] 
%llx cancelling _fileUnlinker...
[DEBUG] 
%llx cancelling _inflightProgressTracker...
[DEBUG] 
%llx cancelling _recentsEnumerator...
[DEBUG] waiting for misc operation: %@
[DEBUG] 
%llx closing _appsMonitor...
[DEBUG] 
%llx closing _defaultScheduler...
[DEBUG] 
%llx closing _fsWriter...
[DEBUG] 
%llx closing _fsImporter...
[DEBUG] 
%llx closing _fsUploader...
[DEBUG] 
%llx closing _fsDownloader...
[DEBUG] 
%llx closing _syncUpScheduler...
[DEBUG] 
%llx closing _applyScheduler...
[DEBUG] 
%llx closing _fairClientDBScheduler...
[DEBUG] 
%llx closing _notificationManager...
[DEBUG] 
%llx closing _inflightProgressTracker...
[DEBUG] 
%llx closing _recentsEnumerator...
[DEBUG] 
%llx cancelling and closing our containers and sync context...
[DEBUG] preventing creation of new sync context...
[DEBUG] 
%llx cancelling %@...
[DEBUG] 
%llx closing %@...
[CRIT] Assertion failed: zone.delegate == nil
[DEBUG] 
%llx closing _stageRegistry...
[DEBUG] 
%llx closing _diskReclaimer...
[DEBUG] 
%llx closing _fileUnlinker...
[DEBUG] 
%llx closing dbManager...
[DEBUG] 
%llx closing _containerScheduler...
[DEBUG] 
%llx resetting local state for %@
[CRIT] Assertion failed: hasDB
[DEBUG] unlinking %@
[DEBUG] unlinking br security bookmark %@
[DEBUG] keeping preserved item %@
[DEBUG] keeping item too large to upload %@
[DEBUG] unlinking excluded item %@
[DEBUG] unlinking .localized file %@
[DEBUG] unlinking uploaded .app file %@
[DEBUG] 
%llx destroying local account data for %@
[DEBUG] done deleting local files
[DEBUG] did reset TCC access
[DEBUG] Done dropping recents
[DEBUG] done deleting local account data
[DEBUG] 
%llx loading app libraries
[DEBUG] 
%llx loading server zones
[DEBUG] 
%llx loading shared server zones
[DEBUG] loaded server zone: %@
[DEBUG] 
%llx loading client zones
[DEBUG] loaded client zone: %@
[CRIT] UNREACHABLE: [client|server]zoneNames mismatch:  %@ does not match with %@
[WARNING] ignoring client zone because it's missing a server zone
[DEBUG] 
%llx loading shared client zones
[DEBUG] loaded shared client zone: %@
[CRIT] UNREACHABLE: [client|server]zoneName or ownerss mismatch:  %@ does not match with %@
[WARNING] ignoring shared client zone because it's missing a server zone
[DEBUG] loaded app library: %@
[DEBUG] ignoring app library because it's missing a client zone
[CRIT] Assertion failed: appLibrary.wasMovedToCloudDocs ? clientZone.isCloudDocsZone : [clientZone.zoneName isEqualToString:appLibraryID]
[DEBUG] 
%llx registering and activating zones
[WARNING] dropping %@ because it's missing its client zone or app library
[DEBUG] activating %@
[CRIT] Assertion failed: serverZone
[CRIT] Assertion failed: serverZone.clientZone
[WARNING] Couldn't defer full sync down activity
[ERROR] Failed to defer the xpc activity
[ERROR] Failed to defer the activity
[WARNING] Couldn't finish full sync down activity
[WARNING] Failed to defer the full sync xpc activity
[CRIT] Assertion failed: !sself->_backgroundDocumentsScopeListOperation && !sself->_backgroundDataScopeListOperation
[WARNING] Failed to continue the activity
[CRIT] UNREACHABLE: missing client zone for %@
[DEBUG] Deactivating private client zone %@
[CRIT] Assertion failed: sharedClientZone.state & BRCClientZoneStateIsResetting
[CRIT] Assertion failed: sharedClientZone.state & BRCClientZoneStateWantsDataUnlinked
[DEBUG] Destroying shared client zone %@
[DEBUG] deleting shared zone and library for %@ from local db
[DEBUG] deleting shared container %@ from server db
[CRIT] UNREACHABLE: can't find app library for %lld
[DEBUG] server zone already exists
[DEBUG] Created server zone: %@
[CRIT] Assertion failed: serverZone.dbRowID
[DEBUG] client zone already exists
[DEBUG] Created client zone: %@
[CRIT] Assertion failed: [clientZone.dbRowID isEqualToNumber:serverZone.dbRowID]
[DEBUG] app library already exists
[CRIT] Assertion failed: isShared == (appLibrary == nil)
[CRIT] UNREACHABLE: No db rowID on an app library or server zone
[CRIT] UNREACHABLE: No mangledID on a server zone
[CRIT] UNREACHABLE: no zone name on a server zone
[DEBUG] 
%llx Creating app library and zones: %@ if needed
[CRIT] UNREACHABLE: invalid containerID: %@
[DEBUG] returning early server zone: %@
client zone: %@
app library: %@
[CRIT] UNREACHABLE: can't find the default client zone
[ERROR] couldn't create app library
 appID: %@
serverZone: %@
clientZone: %@
[DEBUG] returning app library %@
server zone:%@
, client zone: %@
[CRIT] Assertion failed: mangledID.isShared
[CRIT] UNREACHABLE: can't reserve library rowID for a shared zone
[DEBUG] reserved rowid %@ for %@
[DEBUG] Signalling fsimporter to clean un-migrated items
[DEBUG] 
%llx CloudDocs apps list did change
[ERROR] Failed to get the synchronous remote object proxy
[DEBUG] detected %@ of free space, scheduling pending-disk downloads
[DEBUG] 
%llx %s storage optimization
[ERROR] %s optimized storage for document scope failed: %@
[INFO] optimized storage %s from document scope
[ERROR] %s optimized storage for app library %@ failed: %@
[INFO] optimized storage %s for app library %@
[CRIT] Assertion failed: _isGreedy
[DEBUG] 
%llx starting to download documents for which we should be greedy
[DEBUG] greediness enforced because optimize storage is disabled
[DEBUG] session greediness enforced by user defaults
[DEBUG] seting xattr value %@ on path: %@
[ERROR] failed setting xattr value %@ for key %@ on path: %@
[CRIT] UNREACHABLE: sessionDirPath was accessed after being closed
[CRIT] UNREACHABLE: cacheDirPath was accessed after being closed
[CRIT] UNREACHABLE: applyScheduler was accessed after being closed
[CRIT] UNREACHABLE: containerScheduler was accessed after being closed
[CRIT] UNREACHABLE: fsWriter was accessed after being closed
[CRIT] UNREACHABLE: fsImporter was accessed after being closed
[CRIT] UNREACHABLE: fileUnlinker was accessed after being closed
[CRIT] UNREACHABLE: notificationManager was accessed after being closed
[CRIT] UNREACHABLE: stageRegistry was accessed after being closed
BRCTransferBatchOperation/? (subclass activity missing)
[CRIT] API MISUSE: should be subclassed
[DEBUG] cancelling %@
[DEBUG] 
%llx operation is now empty, cancelling %@
[DEBUG] %@(%@) %@ progress %.1f%%
[DEBUG] %@(%@) done with %@: %@
[CRIT] API MISUSE: implement in subclass
[WARNING] failed %@ %ld %@ (%@) in %@: %@
[NOTICE] finished %@%@ %ld %@ (%@) in %@
[CRIT] Assertion failed: entries.count == 0 || error
[CRIT] UNREACHABLE: Missing transfer error for record %@
[DEBUG] 
%llx waiting for callback...
[DEBUG] 
%llx callbacks finished
[ERROR] checksum from bookmark %@ is not equal to expected checksum %@ for %@
[WARNING] can't parse docID based bookmark
[DEBUG] New item %@ older than a deleted directory %@ so marking dead
[DEBUG] 
%llx Apply Changes[%lld]: %s item: %@
 diffs: %@
[CRIT] Assertion failed: li || si
[CRIT] UNREACHABLE: no client zone when applying %@ and %@
[DEBUG] Don't suspend delete of shared to me item %@
[DEBUG] Not suspending download of an item that needs CZM processing %@
[DEBUG] Forcing deletion of item dead in both client and server truth %@
[DEBUG] Suspending rank for item with conflicts: %@%s
[DEBUG] Learning sharing options on local item %@ from %@
[DEBUG] Dead item doesn't need any action
[DEBUG] Apply Changes[%lld]: postponing rank (missing parent while greedy)
[DEBUG] Apply Changes[%lld]: postponing rank (missing parent)
[DEBUG] Apply Changes[%lld]: postponing rank (ongoing cross-zone migration)
[DEBUG] Apply Changes[%lld]: postponing rank (greediness)
[DEBUG] Remove rank for item with no real changes: %@
[DEBUG] Found a freshly scanned item from an initial scan that path matches: %@
[DEBUG] Suspending rank since freshly scanned means either same content or conflict: %@
[DEBUG] Found item %@ that collides with %@
[WARNING] No alias pointing to new item shared container, forcing sync down on private container
[DEBUG] Created reservation for %@ item: %@
[DEBUG] Updating item %@ from server item
[DEBUG] Suspending apply of %@ because we need to resolve losers
[WARNING] Couldn't get storage for %@ - %@
[ERROR] Failed getting user visible file - %@
[DEBUG] the fs root was remotely deleted, we need to recreate it and reupload it
[DEBUG] Apply Changes[%lld]: postponing rank (live child)
[DEBUG] Marking ineligible child item rejected - %@
[CRIT] Assertion failed: !li.isDead
[DEBUG] 
%llx fixing up items
[DEBUG] Will acknowledge the last sync down again for %@ (server:%lld, client:%lld)
[CRIT] Assertion failed: requestID <= currentRequestID || currentRequestID == 0
[DEBUG] 
%llx Acknowledge the last sync down again for %@
[DEBUG] 
%llx Fixing up bounced and staged items
[CRIT] Assertion failed: db && db.serialQueue
[CRIT] Assertion failed: suspendCount >= 0
[CRIT] Assertion failed: _type == problem->_type
[CRIT] UNREACHABLE: unknown problem type %d
[CRIT] UNREACHABLE: unknown effective problem type
[DEBUG] unlinkat(%d, '%@', %d) failed: %s
[ERROR] unlinkat(%d, '%@', %d) failed after trying to fix permissions %{errno}d
[DEBUG] mkdirat(%d, '%@', 0%3o) failed: %s
[ERROR] mkdirat(%d, '%@', 0%3o) failed after trying to fix permissions %{errno}d
[DEBUG] symlinkat(%d, '%@', '%@') failed: %s
[ERROR] symlinkat(%d, '%@', '%@') failed after trying to fix permissions %{errno}d
[DEBUG] renameatx_np(%d, '%@', %d, '%@', %u) failed: %s
[ERROR] renameat(%d, '%@', %d, '%@', %u) failed after trying to fix permissions %{errno}d
[ERROR] Failed opening op for %d %{errno}d
[ERROR] can't set xattr %s to %s at '%@' %{errno}d
[ERROR] can't open '%@' %{errno}d
[ERROR] can't read the size of xattr %@ at '%@' %{errno}d
[ERROR] empty xattr %@ at '%@'
[ERROR] can't read %lu-byte xattr %@ at '%@' %{errno}d
[ERROR] invalid xattr %@ at '%@': %s
[ERROR] Failed to open fd %d by relpath %@ %{errno}d
[WARNING] Fixed up openat(%d, '.') for inaccessible folder
[ERROR] failed openat with EACCES and fstatat(%d, '%s') %{errno}d
[ERROR] failed openat(%d, '%s') with EACCES, but the item is readable: deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[ERROR] failed openat with EACCES and fchmodat(%d, '%s', %c%c%c%c%c%c%c%c%c%c) deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x %{errno}d
[DEBUG] failed openat(%d, '%s') with EACCES: added %c%c%c%c%c%c%c%c%c%c to deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[ERROR] failed fchmodat(%d, '%s', %c%c%c%c%c%c%c%c%c%c) deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x %{errno}d
[DEBUG] openat(%d, '%s'): added %c%c%c%c%c%c%c%c%c%c to deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[DEBUG] Failed opening parent op for '%@', hope for the best %{errno}d
[CRIT] UNREACHABLE: Corrupt quarantine: %s
[DEBUG] Quarantine info differs in flags %u vs %u ignoring %u
[WARNING] Extended attribute %s size %ld is greater than size limit %ld
[ERROR] Xattr name list exceed size limit %ld
[CRIT] Assertion failed: [cached isKindOfClass:[NSData class]]
[WARNING] Do not attempt to get xattr size cache is full
[DEBUG] Failed opening parent op for %d '%@' %{errno}d
[DEBUG] Failed opening op for %d '%@'
[ERROR] Couldn't stat %{errno}d
[ERROR] Failed to remove flags %{errno}d
[ERROR] Failed stripping acls %{errno}d
[ERROR] Failed setting permissions %{errno}d
[ERROR] Failed to restore permissions %{errno}d
[ERROR] Failed to restore acl %{errno}d
[ERROR] Failed to restore flags %{errno}d
[ERROR] Failed opening %s %{errno}d
[ERROR] Unable to strip UF_IMMUTABLE and UF_APPEND to %s %{errno}d
[ERROR] Failed setting permissions of %s %{errno}d
[ERROR] Couldn't stat %s %{errno}d
[ERROR] Failed stripping acls of %s %{errno}d
[DEBUG] Can't delete %s: %s(%d)
[ERROR] Can't delete %s: %s(%d)
[DEBUG] 
%llx deleting temporary files moved to the cache at '%@'
[DEBUG] did not remove '%@' %{errno}d
[ERROR] failed removing '%@' %{errno}d
[DEBUG] removed '%@/*'
[ERROR] lstat('%@') failed %{errno}d
[ERROR] renameat(%d, '%@', -1, '%@' deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x failed %{errno}d
[DEBUG] renamed '%@' to '%@' deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[DEBUG] failed removing documentID for %@ (%s)
[DEBUG] done iterating
[DEBUG] Starting enumerating under %@
[DEBUG] cancelling enumeration because container deactivated
[CRIT] Assertion failed: self->_handler
[DEBUG] visiting a new parent: %@
[DEBUG] continue iterating under parent %@, for _rowID > %ld
[CRIT] Assertion failed: !forSyncBubble
[DEBUG] %@: finished uploading all items in %@: %@
[CRIT] UNREACHABLE: task tracker created with nil label
[CRIT] Assertion failed: task_tracker
[DEBUG] task tracker (%s) has been cancelled, calling cancellation block <%p>
[DEBUG] No one is waiting on %@ anymore so cancelling
[DEBUG] We have observers again for %@ so not cancelling yet
[DEBUG] %@ finished listing batch with cursor %@
[DEBUG] Dropping list directory database because of a token fetch error - %@
[DEBUG] Dropping list directory database because server change token differes %@ vs %@
[DEBUG] Finished listing directory contents of %@
[DEBUG] list query is already completed.  Just finishing it %@
[DEBUG] Continuing list query %@ from cursor %@
[DEBUG] Starting new list query %@
[DEBUG] Fetching the root as well of this share accept fault
[CRIT] Assertion failed: !continuationCursor
[DEBUG] Listing directory contents of %@
[CRIT] UNREACHABLE: Unsuported record type %@
[DEBUG] Opening changes stream %@
[DEBUG] Closing changes stream %@
[DEBUG] We have too many pending changes streams open.  Closing now
[DEBUG] We have too many pending changes streams open.  Closing some of them after a delay
[DEBUG] Dropping pending fetch table at %@
[DEBUG] database is opening so creating at %@
[ERROR] db corruption handler called on pending sync db
[ERROR] sqlite error handler called on pending sync db - %@ (%@)
[ERROR] Auto rollback handler called on pending sync db - %@ (%@)
[CRIT] UNREACHABLE: Trying to fetch token state without a db
[CRIT] UNREACHABLE: There should always be one entry
[CRIT] UNREACHABLE: Trying to fetch query cursor without a db
[CRIT] UNREACHABLE: Trying to enumerate records without a db
[CRIT] UNREACHABLE: Failed enumerating records - %@
[CRIT] Assertion failed: recordType != 0
[WARNING] Removed item in pending resources table because it was saved %@
[WARNING] Removed item in pending resources table because it was deleted %@
[CRIT] Assertion failed: rc && db.changes == 1
[DEBUG] Persisted %llu records needing subResource fetch
[ERROR] Failed saving to the pending changes stream - %@
[DEBUG] Persisted %llu sub resource records which need fetch
[DEBUG] Removed %llu records from the pending fetches table because we should have just saved them
[DEBUG] Persisted %lld subResource records to the pending changes db
[DEBUG] Deleted %@ from the pending subResources table because it was a share to fetch and should be persisted
[ERROR] Failed to save subResource records after saving main table items - %@
[WARNING] Unblocking %lld records which are blocked from save for %@
[WARNING] Removed recordID %@ from record changes table because it now needs sub resources
[DEBUG] Updated %llu items which no longer need to fetch xattr %@
[ERROR] We couldn't fetch recordID %@ so it's not going to save. We deleted %lld items from pending subresources table for this
[ERROR] We couldn't fetch recordID %@ so it's not going to save. We marked %lld as not needing fetch anymore
[ERROR] We couldn't fetch recordID %@ so it's not going to save. We marked %lld as not blocked for save anymore
[CRIT] Assertion failed: db.isInTransaction
[DEBUG] Updated %llu items to be unblocked for fetching %@
[DEBUG] Updated %llu items to be unblocked for saving %@
[CRIT] Assertion failed: fallbackItem
[DEBUG] 
%llx computing the parent item id of %@
[DEBUG] found the alias representing this item: %@
[DEBUG] falling back to an app library documents root: %@
[DEBUG] Server container was reset, we need to reset ourselves
[DEBUG] Server change token expired, we need to reset ourselves
[DEBUG] Server container was reset, zone not found, we need to reset ourselves
[DEBUG] Server container was reset, user deleted zone, we need to reset ourselves
[DEBUG] unknown error domain: %@, we should retry
[CRIT] UNREACHABLE: there should be a recordID
[DEBUG] we should sync-down again after %@
[CRIT] UNREACHABLE: really unexpected error: %@
[DEBUG] Cloudd crashed, our sync up could have been received by the server
[CRIT] Assertion failed: _suspendCount > 0
[DEBUG] %@: %@
[INFO] %@: reply(%@, %@)
[DEBUG] no container for %@
[INFO] %@: reply(%@, %@, %@)
[DEBUG] can't fetch item IDs when logged out
[DEBUG] Unblocking %@ from sync because a client connected so the app is clearly installed - %@
[DEBUG] receiver: %@
[ERROR] can't setup container %@: %@
[INFO] %@: reply(%d, %@)
[NOTICE] %@: force syncing shared database
[NOTICE] %@: force syncing %@
[NOTICE] %@: force syncing container metadata
[NOTICE] %@: forcing syncing zone health
[CRIT] UNREACHABLE: Can't import br aliases anymore %@
[CRIT] UNREACHABLE: Import object of unknown type %@
[DEBUG] Returning nil when looking up by documentID and no migration is in progress
[DEBUG] Returning nil when looking up by fileID and no migration is in progress
[INFO] rejecting Trash folder
[INFO] rejecting side fault
[INFO] rejecting Desktop & Document symlink
[INFO] rejecting Documents folder
[CRIT] UNREACHABLE: We received a documents folder in the data scope that isn't a symlink to the documents scope of type %@
[INFO] rejecting BRAlias
[DEBUG] Trashed item has bookmark data for import
[ERROR] ignoring trashed shared item shared bookmark data
[DEBUG] Shared item has bookmark data for import
[WARNING] Can't find zone for trash putback %@, falling back to clouddocs zone
[WARNING] Can't find trash parent for %@, falling back to one at the zone root
[ERROR] Can't find a parent for trashed item %@
[DEBUG] Found shared item by bookmark data %@
[WARNING] Couldn't find item by bookmark data %@ (%@)
[WARNING] The existing shared item doesn't have the right kind
[INFO] trying to import from on-disk ID: fileID=%llu docID=%u genCount=%llu
[DEBUG] Found existing item by docID %@
[DEBUG] We have changes to upload on imported item f:(%llu vs %llu) g:(%llu vs %llu)
[DEBUG] Found existing item by fileID %@
[DEBUG] Template item matches app library documents folder %@
[INFO] found item that seems to match template: %@
[DEBUG] forcing child of read-only share to match what exists in our db %@
[WARNING] Can't find file id for %@.  Updating from server item because we have no way to get its content
[INFO] rejecting new app library root
[DEBUG] Found existing documents folder %@
[DEBUG] Marking desktop or documents item as from initial scan %@ to avoid bounce
[DEBUG] Marking user invisible item as from initial scan %@ to avoid bounce
[CRIT] Assertion failed: [templateItem.parentItemIdentifier isEqualToString:NSFileProviderRootContainerItemIdentifier]
[DEBUG] Discarding meaningless fileURL on import %@
[WARNING] Can't edit a readonly share for %@
[WARNING] Can't add a file to a readonly share with parent %@
[WARNING] Trying to move shared top item %@ into trash at parent %@
[WARNING] Error trying to move shared top item %@ into another shared item %@
[DEBUG] Allowing move of top level folder share item %@
[WARNING] Top level shared item %@ moved across zone boundaries.  Allowing it
[WARNING] Moving an unshared directory %@ into a shared parent %@ where the source item has shared subitems
[WARNING] We need to download item %@ which is moving in or out of a shared zone to parent %@
[WARNING] We need to download item %@ which is crossing zone boundaries to %@
[CRIT] Assertion failed: parent.isOwnedByMe
[CRIT] Assertion failed: !parent.isOwnedByMe
[WARNING] Moving item %@ into another shared item %@
[WARNING] Moving item %@ out of the share to new parent %@
[WARNING] Moving item %@ into a different share with parent %@
[WARNING] Moving item %@ into a share with parent %@
[WARNING] Moving item with a shared child %@ into a share with parent %@
[WARNING] Moving an item with a shared child %@ into trash at parent %@
[CRIT] Assertion failed: _session.clientDB.isInTransaction
[DEBUG] We can't save a zone root so don't modify it
[DEBUG] Attempting to rename/reparent/trash special folder: undoing this operation on %@
[DEBUG] Can't reparent to folder: undoing reparent on %@ to %@
[WARNING] Base version differs from local version content! overwriting our local version (%@ vs %@)
[WARNING] Base version differs from local version structure! overwriting our local version (%@ vs %@)
[DEBUG] Discarding meaningless fileURL %@
[CRIT] Assertion failed: changes == (int64_t)newlyDeadFileObjectIDs.count
[DEBUG] Propagating fields of %@ to child
[CRIT] Assertion failed: argc == 9
[DEBUG] Done scanning for now
[CRIT] UNREACHABLE: item with rowID %llu got left behind when migrating
[DEBUG] rejected item with rowid %llu got left behind when migrating
[ERROR] Failed to update client items - %@
[CRIT] UNREACHABLE: Couldn't find rowid %@
[DEBUG] Processed %lld items needing clean after migration
[CRIT] Assertion failed: _requestID == 0
sync-down/periodic-sync
[DEBUG] 
%llx scheduling sync down for %@
[DEBUG] container-metadata appears to be out of sync in the periodic check, forcing sync
[DEBUG] zone health appears to be out of sync in the periodic check, forcing sync
[DEBUG] side-car appears to be out of sync in the periodic check, forcing sync
[DEBUG] Not considering %@ for periodic sync because it is blocked from sync
[DEBUG] %@ appears to be out of sync in the periodic check, forcing sync
[CRIT] Assertion failed: self.group
[DEBUG] 
%llx completed fetching changed zone
zones: %@
[CRIT] UNREACHABLE: No error found
[ERROR] can't fetch all changed zones: %@
[WARNING] There was a partial failure error when fetching all the zone, syncing down the failed zones: %@
error:%@
[NOTICE] scheduled a %s periodic sync
[DEBUG] Running operation to fetch %@: %@
[DEBUG] We need to create the zone health zone on %@ - %@
[ERROR] Failed reporting zone health on %@ - %@
[DEBUG] finished reporting zone health: %@, op: %@
[WARNING] not updating zone health state because we think we are less broken than the server does
[CRIT] Assertion failed: report.state != BRCZoneHealthStateHealthy
[DEBUG] No zone health errors to report
[CRIT] Assertion failed: self.isSymLink
[CRIT] Assertion failed: self.isFile
[CRIT] UNREACHABLE: no BRCPackageItem should be a Tombstone
[CRIT] Assertion failed: _itemRowID
[ERROR] Failed to get canonical path for pkg item in %@
[WARNING] Can't determine item type %d
[DEBUG] aggregate size is %@ for documentID:%llu
[CRIT] UNREACHABLE: wrong number of items in package
[DEBUG] Learning signature for rank %ld, signature:%@, asset %@
[CRIT] Assertion failed: cpi.signature
[DEBUG] Failing updates of signatures for item %@ because pkg item with rank %lu changed
[CRIT] UNREACHABLE: updating asset signature should work
[NOTICE] Ignoring tombstone pkg item %@
[CRIT] UNREACHABLE: should never attempt to save tombstones to db
[CRIT] Assertion failed: doInsert != nil
[DEBUG] saved item %@ to DB
[CRIT] UNREACHABLE: saving package items should really always work
[DEBUG] Re-imporing %@ from fp because of a thumbnail change
[DEBUG] %@: suspended %d->%d
[DEBUG] %@: resuming %d->%d
[CRIT] Assertion failed: _suspendCount >= 0
[CRIT] Assertion failed: scheduler
[CRIT] UNREACHABLE: %@ was deallocated without being closed
[DEBUG] 
%llx Uploader: preparing next batch for %@ (max-count:%ld size:%@ priority:%ld)
[DEBUG] 
%llx Downloader: preparing next batch for %@ (max-count:%ld size:%@ priority:%ld)
[CRIT] Assertion failed: database
[DEBUG] scheduling %@ on %@
[CRIT] UNREACHABLE: missing group for %@
[CRIT] UNREACHABLE: Exception %@ was raised while trying to enqueue %@
[CRIT] Assertion failed: _isCancelled
[DEBUG] beginning forced foreground for %@ for %.1fs
[DEBUG] forced foreground grace period over for %@
[CRIT] Assertion failed: self->_foregroundState == BRCContainerForegroundStateForcedForeground
[CRIT] UNREACHABLE: there should be no timer created
[DEBUG] beginning foreground grace period for %@ for %.1fs
[DEBUG] grace period over for %@ %@
[CRIT] Assertion failed: mangledID.isCloudDocsMangledID
[DEBUG] fetched quota %llu - %@
[CRIT] UNREACHABLE: itemID %@ has no share name
[CRIT] Assertion failed: BRCItemTypeIsDirectory(_st.type)
[DEBUG] Learning directory fault item type from new itemID
[CRIT] UNREACHABLE: Can't find clientZone for zoneID %@
[DEBUG] Setting deletion change token to %@ because item contains a dir faults
[CRIT] UNREACHABLE: can't update document scope public when we aren't the documents folder %@
[CRIT] Assertion failed: _st.type == BRC_ITEM_TYPE_FS_ROOT || _orig.st.type == BRC_ITEM_TYPE_FS_ROOT || _orig.st.type == BRC_ITEM_TYPE_DIRECTORY_SHARE_ACCEPT_FAULT
[CRIT] UNREACHABLE: We seem to be in a lost scan loop.  Breaking the chain (diffs %@)
[DEBUG] Inserting tombstone for alias %@ which is pending target
[CRIT] Assertion failed: sqlite3_value_int(argv[0]) == BRC_ITEM_STATE_TOMBSTONE
[CRIT] UNREACHABLE: a task tracker is required to download a directory
[CRIT] UNREACHABLE: asShareableItem called on a non-shareable item
[ERROR] Default value %@ is malformed, using %@
[ERROR] Invalid user defaults: %@, using %@
[CRIT] Assertion failed: !_userDefaultsCache[kBRCGlobalUserDefaultsKey]
[DEBUG] 
%llx defaults changed
[CRIT] Assertion failed: ![clientZoneIdentifier isEqualToString:kBRCGlobalUserDefaultsKey]
[CRIT] Assertion failed: clientZoneIdentifier && _userDefaultsCache[kBRCGlobalUserDefaultsKey]
[ERROR] failed parsing plist at %@: %@
[DEBUG] Server configuration changed to etag %@
[DEBUG] config: Loaded server configuration from %@
[DEBUG] server default for %@: %@
[DEBUG] user default for %@: %@
[CRIT] UNREACHABLE: no version for key: %@
[CRIT] Assertion failed: perVersionDict
[CRIT] Assertion failed: min < max
[CRIT] Assertion failed: min <= def
[CRIT] Assertion failed: def <= max
[ERROR] invalid user default for %@: %@ range:[%d,%d]; using default:%d
[ERROR] invalid user default for %@: %@ range:[%lld,%lld]; using default:%lld
[ERROR] invalid user default for %@: %@ range:[%f,%f]; using default:%f
[ERROR] invalid user default for %@: %@; using default:%s
[ERROR] invalid user default for %@.%@: %@; using default:%@
[CRIT] Assertion failed: defaultValues[key] != nil
[ERROR] invalid user default %@; using:%@
[DEBUG] Destroying anchor %@
[DEBUG] Destroying anchor %@, databaseBasePath: %@, UUID: %@
[DEBUG] Anchoring %@ at %@ (db at %@)
[ERROR] Unable to serialize property list - %@
[DEBUG] 
%llx account properties changed
[DEBUG] forcing refresh of cellular switch
[DEBUG] 
%llx checking if cellular is enabled for D&D
[DEBUG] cellular is %@ for D&D
[CRIT] Assertion failed: item.st.iWorkShareable
sharing/iWork-publishing
[CRIT] UNREACHABLE: No sharing info and no error
[ERROR] Failed sharing %@ - %@
[DEBUG] %@ was shared
[CRIT] Assertion failed: self->_forPublish
[ERROR] Failed unsharing %@ - %@
[DEBUG] %@ was unshared
[CRIT] Assertion failed: !self->_forPublish
sync-down
[INFO] 
%llx %@ fetch record changes operation for %@ from token %@
[INFO] 
%llx got a record in operation %@
[CRIT] UNREACHABLE: got a nil record and recordID
[CRIT] Assertion failed: !record || record.etag != nil
[WARNING] Record fetch failed for %@ with error %@
[DEBUG] 
%llx got a deletion in operation %@
[INFO] record was deleted: %@
[DEBUG] 
%llx received updated server change token %@ client change token %@ in operation %@ status %ld
[CRIT] UNREACHABLE: broken structure in op %@ change token %@
[DEBUG] 
%llx fetch changes completion for zone in operation %@
[DEBUG] 
%llx fetch changes completed for operation %@
[ERROR] sync-down failed for %@: %@
[DEBUG] success
[DEBUG] ignoring zone not found error, because we're syncing down for the first time
[DEBUG] Fetched initial server zone tokens %@ and %@ for %@
[DEBUG] Saving initial zone data of %@ with server token %@ client token %@
[CRIT] UNREACHABLE: no fetched zone and no error
[DEBUG] can't register pushes: %@
[ERROR] can't create zone or register pushes: %@
[DEBUG] 
%llx Sync: fetching record changes for %@
[DEBUG] 
%llx refetching installed apps list
[DEBUG] forced a refetch of the list of apps
[DEBUG] 
%llx start monitoring cloud apps
[DEBUG] 
%llx asked appIDs for %@
[DEBUG] returning %@
[DEBUG] 
%llx asked containerIDs for %@
[DEBUG] 
%llx asked appIDs
sharing/copy-web-auth-token
[ERROR] failed fetching webauth token for %@: %@
[CRIT] UNREACHABLE: shouldn't have an fsroot in the db
[CRIT] UNREACHABLE: We should no longer have any alias items
[CRIT] Assertion failed: item.serverZone.isSharedZone
[CRIT] UNREACHABLE: reset needed for %@ because the hierarchy is deeper than %u under %@ when looking for %@
[DEBUG] %@: moved %lld throttles from %@ to %@
[CRIT] Assertion failed: _subResourceRecordsByID.count == 0 && _pendingChangesStream == nil
[CRIT] Assertion failed: serverZone && parentOperation
[DEBUG] 
%llx %@ scheduling xattr fetch
[DEBUG] 
%llx %@ scheduling deserialize
fetch-record-subResources
[CRIT] Assertion failed: !_isDoneFetchingRecords
[WARNING] %@ got a record we're not interested in: '%@'
[DEBUG] %@ ignoring record we're not interested in saving named: %@
[DEBUG] %@ needs to fetch shareID %@
[DEBUG] %@ needs to fetch xattr signature %@
[CRIT] Assertion failed: [contentRecordName hasPrefix:kBRRecordIDPrefixContent]
[CRIT] UNREACHABLE: Couldn't determine record type for root share record %@
[CRIT] Assertion failed: ![_deletedShareIDs containsObject:recordID]
[CRIT] Assertion failed: ![_deletedRecordIDs containsObject:recordID]
[CRIT] Assertion failed: _recordsByID[recordID] == nil
[DEBUG] %@ record changed %@ which needs subResources fetched
[DEBUG] %@ record changed %@
[WARNING] %@ has no need to deserialize %@ because we've already fetch it
[CRIT] Assertion failed: _subResourceRecordsByID[recordID] == nil
[DEBUG] %@ scheduling recordID deserialize for %@
[WARNING] %@ Zone root record ID was deleted %@
[WARNING] %@ App library root record ID was deleted %@
[DEBUG] %@ record ID was deleted %@
[CRIT] Assertion failed: _recordsByID[shareID] == nil
[CRIT] Assertion failed: ![_deletedShareIDs containsObject:shareID]
[DEBUG] %@ share ID was deleted %@
[DEBUG] %@ waiting to fetch all records
[CRIT] Assertion failed: _recordsByID.count == 0 && _deletedShareIDs.count == 0 && _deletedRecordIDs.count == 0 && _subResourceRecordsByID.count == 0
[DEBUG] %@ stopping fetching records
[CRIT] Assertion failed: _xattrFetchingGroup == nil
[CRIT] Assertion failed: _deserializeGroup == nil
[CRIT] Assertion failed: _recordsByID.count == 0
[CRIT] Assertion failed: _subResourceRecordsByID.count == 0
[CRIT] Assertion failed: _deletedShareIDs.count == 0
[CRIT] Assertion failed: _deletedRecordIDs.count == 0
[CRIT] Assertion failed: _movedZoneNames.count == 0
[CRIT] Assertion failed: ![_pendingChangesStream hasXattrsToFetch]
[CRIT] Assertion failed: ![_pendingChangesStream hasRecordIDsToDeserialize]
[DEBUG] %@ finished record fetcher
[CRIT] Assertion failed: _queryFinishedServerTruthCallback == nil
[CRIT] Assertion failed: _queryFinishedClientTruthCallback == nil
[CRIT] Assertion failed: _deserializeState != BRCDeserializeStateWaitingForNextBatchSave
[DEBUG] %@ doesn't have records to deserialize
[DEBUG] %@ fetching %lu records to deserialize - %@
[WARNING] We deserialized record id %@ which was useless because it came later
[ERROR] We can't find a record which really should exist - %@.  Unblocking other records from save
[ERROR] %@ Deserialize record failed for %@ - %@
[DEBUG] %@ finished fetching record batch to deserialize
[DEBUG] %@ has sub resource that no longer has info to fetch %@ -> %@
[DEBUG] %@ has no xattrs to fetch
[DEBUG] 
%llx %@ fetching %lu xattrs
[DEBUG] 
%llx running the xattr fetch operation
[DEBUG] 
%llx %@ finished fetching xattrs
[ERROR] failed to fetch xattr assets for %@: %@
[DEBUG] failed to fetch xattr assets for %@: %@
[CRIT] UNREACHABLE: Received %lu xattr records instead of expected %lu records for %@
[ERROR] %@ failed to read xattr for signature: %@ - %@
[ERROR] %@ failed to store xattr for signature: %@ - %@
[DEBUG] %@ saved xattr for signature: %@ sz:%lld
[DEBUG] Removed xattr requirement from %lld in-memory subResourceRecords
[DEBUG] %@ preparing to save record batch with %lu in memory items %lu subresource items %lu moved zone names
[DEBUG] %@ no longer needs to fetch shareID in %@ because it's fetched in pending changes stream
[DEBUG] %@ is no longer blocked from save in %@ because the blocker is fetched in pending changes stream
[DEBUG] %@ no longer needs to fetch shareID in %@ from server truth check
[DEBUG] %@ is no longer blocked for save in %@ from server truth check
[DEBUG] %@ starting to wait for xattr fetches
[DEBUG] %@ starting to wait for deserialize fetches
[CRIT] UNREACHABLE: We need to fetch %@ to unblock %@ from saving, but it wasn't found.  Forcing fetch
[ERROR] We need to fetch %llu records in the pending changes stream to allow saving for %@.  Forcing fetch
[CRIT] Assertion failed: !_queryFinishedServerTruthCallback
[CRIT] Assertion failed: !_queryFinishedClientTruthCallback
[DEBUG] %@ saving records with server change token:%@ requestID:%llu caught up:%s directly:%s
[DEBUG] %@ recreating pending changes stream with updated change token
[WARNING] %@ Allocating ranks failed when not caught up.  We'll save to pending changes from now on
[CRIT] Assertion failed: _pendingChangesStream || !cursor
[DEBUG] %@ saving records with query cursor:%@ directly:%s
[CRIT] Assertion failed: _pendingChangesStream
[DEBUG] %@ Destroying pending changes db because we are done with it
[WARNING] %@ got a (temporary) broken structure while listing directory contents
[WARNING] Allocating ranks failed when not caught up and listing.  We'll save to pending changes from now on
[DEBUG] resuming %@
[DEBUG] suspending %@
[CRIT] UNREACHABLE: Invalid components count. It should either be an absolute path or prefixed with file provider id
[ERROR] this method is deprecated
[DEBUG] 
%llx new presenter of '%@': %@ (%@)
[CRIT] Assertion failed: presentersIDs == nil
[DEBUG] not doing anything since we're logged out
[DEBUG] 
%llx removed presenter of '%@': %@ (%@)
[CRIT] Assertion failed: presentersIDs.count == 1
[CRIT] Assertion failed: [presentersIDs containsObject:filePresenterID]
[DEBUG] '%@' moved to '%@', by %@
[INFO] Incremental vacuuming %@ took %f seconds reclaimed %@ (size reduction %.2f percent)
[DEBUG] no need to evict, amount requested is %@
[DEBUG] evicted %@ from stage
[DEBUG] evicted %@ from stage and containers
[DEBUG] Purged %@ when asked to purge %@ for urgency %d
[DEBUG] Periodicly reclaimed %@
[DEBUG] not requesting space because we already have enough (available:%@ > required:%@)
[ERROR] Failed to find scope item global ID
[CRIT] Assertion failed: [serverZone isKindOfClass:[BRCSharedServerZone class]]
[CRIT] UNREACHABLE: there is already a share acceptation running for that itemID; %@
[CRIT] Assertion failed: item.isShareAcceptationFault
[DEBUG] [%@] has been initialized
[DEBUG] [%@] has been invalidated
[DEBUG] [%@] has been reset
[DEBUG] reachability flags: %x
[NOTICE] Network really becomes %sreachable
[NOTICE] Power level really becomes %s
[CRIT] Assertion failed: _memoryNotificationEventSource == NULL
[DEBUG] Memory warning received
[DEBUG] not monitoring %d because BKS doesn't know its bundleID
[DEBUG] 
%llx received a notif for %@ from BKS: %@
[DEBUG] Received an app install notification
[DEBUG] Power level is now %s
[DEBUG] pending migrations: %@
[DEBUG] pending migration for %@: %@ from cursor:%@
[DEBUG] no pending migration for %@
[CRIT] UNREACHABLE: unknown migration completed for container %@
[DEBUG] welcome %@!
[DEBUG] 
%llx Client %@ connection was interrupted
[CRIT] UNREACHABLE: Copying share for item %@ that does not have a server zone
[CRIT] UNREACHABLE: Item's %@ server zone %@ is missing sync context while coping share
sharing/copy-share
[WARNING] No sharing identity on %@
[WARNING] No base token on %@
[DEBUG] Sync: blacklist %@ because it needs a newer OS to sync up
[DEBUG] Sync: blacklist %@ and all dependents because %llu nsecs to retry
[DEBUG] marking needs-upgrade %@ and its descendants
[CRIT] UNREACHABLE: Strange... Maybe this is shared-to-me within a shared-to-me without CZM which means that sharedItemMovedIntoShareInThisZone shouldn't be private zone specific
[WARNING] item with shareID %@ is moving into a shared parent %@
[CRIT] UNREACHABLE: Unexpected item %@. Ignoring
[WARNING] max depth %u reached at %@
[DEBUG] Sync: blacklist %@ because it's already being processed for CZM
[DEBUG] Sync: blacklist %@ because it's excluded from sync
[DEBUG] Sync: blacklist %@ for item share-witin-share processing
[DEBUG] Sync: blacklist %@ because it is moving into a share and has shared children
[WARNING] blacklist %@ because parent is a directory fault in the server truth
[DEBUG] Sync: blacklist %@ because it needs pcs chaining
[DEBUG] Sync: blacklist %@ because it's an unresolved path-match with %@
[CRIT] UNREACHABLE: reset needed for %@ because of orphan %@
[CRIT] Assertion failed: n
[DEBUG] Embargoing item %@: it has %@ unsynced children
[DEBUG] Item %@ is embargoed: %@ unsynced children
[DEBUG] Item %@ is un-embargoed
[DEBUG] Embargoed item %@ has now %@ unreturned dead children left
[DEBUG] item %@ isn't embargoed
[DEBUG] Highest parent dead fault is nil because it's a shared-to-me top level item - %@
[DEBUG] Highest parent dead fault is %@
[DEBUG] blacklist all children deletes when leaving top level folder share %@
[CRIT] Assertion failed: item.isDead
[DEBUG] blacklisting %@ and its descendants
[DEBUG] Fetching recursive contents of %@ because it is the highest dead parent dir-fault
[DEBUG] Sync: enumerating documents needing sync up
[DEBUG] Sync: enumerating live or new directories
[DEBUG] Sync: enumerating tombstones
[CRIT] Assertion failed: requestID
[DEBUG] Syncing up side car records with request %llu
[DEBUG] We need to create the side car zone on %@ - %@
[ERROR] Failed syncing up side cars on %@ - %@
[DEBUG] finished side car sync up: %@, op: %@
[CRIT] Assertion failed: clientZone
[DEBUG] Deleting side-car record for %@
[CRIT] Assertion failed: itemID
[DEBUG] Syncing up side-car record for %@
[DEBUG] Faking sync of side-car record for %@
[CRIT] Assertion failed: state
[DEBUG] preparing to sync up %@
sync-up/container-metadata
[DEBUG] no records to save
[DEBUG] preparing to send %lu records
[DEBUG] completed sync up for %lu records: %@
[NOTICE] saved %lu containers metadata in the cloud
[DEBUG] adding sub-operation to save the records: %@
[DEBUG] 
%llx Sync: syncing up container metadata
non-local-versions
[DEBUG] 
%llx Fetching thumbnail for non-local version %@ etag %@
[DEBUG] 
%llx Received non local thumbnail record: %@ result: %@
[CRIT] UNREACHABLE: CK sent us no results and no error
[CRIT] UNREACHABLE: CK sent a bogus ETag: %s != %s
[CRIT] UNREACHABLE: CK couldn't fetch the thumbnail and set no error
[DEBUG] Successfully added thumbnail to version at %@
[ERROR] Failed to attach thumbnail to version: %@
[DEBUG] 
%llx Got %lu versions (recordID:%@ %@)
[DEBUG] Considering etag %@ %@
[DEBUG] Skipping current version
[ERROR] Unable to deserialize record: %@
[DEBUG] The version is already cached locally, skip it
[ERROR] Version is lacking a name
[WARNING] We have 2 different name components for %@ - %@ vs %@
[ERROR] Failed to create placeholder for %@ - %@
[ERROR] Failed to issue extension at fault url %@ - %@
[ERROR] Failed to issue extension at logical url %@ - %@
[DEBUG] completed fetching non-local versions of %@
[DEBUG] 
%llx Getting versions for %@
Q %.
OfflineInitialization
BRCBookmarkAdditions
BRFieldCKInfo
NSCopying
BRCVolume
BRCAdditions
BRCDatabaseBackupStorage
BRCPQLConnection
BRC_LOGGING_ADDITIONS
_BRCOperation
BRCSharedDatabaseSyncOperation
BRCOperationSubclass
NSObject
BRCFetchRecentAndFavoriteDocumentsOperation
BRCNotification
BRCClientPrivilegesDescriptor
BRFieldFinderTags
BRCProgress
BRCProgressAddition
BRCSharedToMeTopLevel
BRCSharedAliasAdditions
BRCItemAggregatedProperties
BRCDaemonContainerHelper
BRContainerHelper
BRLaunchAgentProtocol
CKXPCShareDaemon
BRAccessGaterProtocol
BRCDatabaseNeedsReset
BRCDatabaseFromTheFutureException
BRCFSEventsPersistedState
NSSecureCoding
NSCoding
BRCDatabaseManager
BRCAccountHandler
MCProfileConnectionObserver
BRCFinderBookmarkItem
BRCFetchShareAliasOperation
BRCAnalyticsReporter
BRCEventMetric
BRCFSEventToSyncUpEvent
BRCUserDownloadEvent
BRCMetricEndpoint
BRCCKMetricEndpoint
BRCExtensionErrorPayload
BRCSharingFetchUserRecordIDOperation
BRCZoneHealthCheckOperation
BRCServerDefaultsDownloader
NSURLSessionDownloadDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
BRCImportObject
BRCPackageAdditions
BRCStatInfo
BRCVersion
BRCServerMetrics
BRCSignatureAdditions
BRFieldPkgItem
BRPrivateSharingClient
BRServiceClient
BRPrivateSharingServiceV1
NSFileProviderValidationServiceV1
BRValidationClient
BRCAccountHandlerDelegate
BRFileProviderExtension
NSFileProviderExtension_Private
BRCMinHeap
NSFastEnumeration
BRCChecksummingOutputStream
BRCAccountWaitOperation
BRCAccountsManager
BRCReachabilityObserver
BRCReachabilityDelegate
BRCThrottle
BRCFSSchedulerBase
BRCLifeCycle
BRCDataOrDocsScopeGatherer
NSXPCProxyCreating
BRCNotificationPipe
BRCListOperationDelegate
IPCs
ICDBRItemNotificationSending
BRCThumbnailRetrieveOperation
BRCUserNotification
BRCUserNotifier
BRCProtocolBufferAdditions
PQLValuable
PQLBindable
BRCApplyJobIdentifier
BRCApplyScheduler
BRCModule
BRCSuspendable
BRCSyncThrottle
BRCALRowID
BRCAppLibrary
BRCForegroundClient
BRCRetryCounter
BRCThrottleBase
BRWorkingSetEnumerator
NSFileProviderEnumerator
BRCFetchParentChainOperation
BRCDownloadJobIdentifier
BRCJobIdentifying
BRCJobsMatching
BRCFSDownloaderBatchEnumerator
BRCFSDownloader
BRCDumpContext
BRCShareAcceptationDocumentFault
BRCShareAcceptationFault
BRCShareAcceptationDirectoryFault
BRCZoneReset
BRCZoneMigration
BRCLocalStatInfo
BRCLocalItem
BRCSyncThrottleItemProtocol
BRCItem
BRCStageAdditions
BRCContainerScheduler
PKPushRegistryDelegate
BRCClientZoneDelegate
BRCAppLibraryDelegate
BRCDatabaseBackupManager
BRCFetchiWorkSharingInfoOperation
BRCLocalVersion
BRCDocumentItem
BRCTopLevelShareable
BRCContainerMetadataSyncDownAdditions
BRCContainerMetadataSyncDownOperation
BRCUpload
BRCTransfer
BRCUploadBatchOperation
BRCZoneRowID
BRCFailedListSaveObject
BRCServerZone
BRCZone
CKConversions
BRCItemAdditions
BRCSerializationAdditions
BRCContainerMetadataAdditions
BRCZoneHealthAdditions
BRCWorkAround
BRCSharingAdditions
BRCShareIDAdditions
BRCSyncUpOperation
BRCSharingAcceptFlowOperation
LSOpenResourceOperationDelegate
BRCLaunchAgent
NSXPCListenerDelegate
BRCXPCClient
BRCSyncOperationThrottle
BRCSyncBudgetThrottle
BRiWorkSharingInfo
OldSchema
BRCItemID_v9
BRCDesiredVersion
BRCNotificationManager
BRCClientZone
BRCPersistedState
BRFieldXattr
BRFileEnumerator
ICDBRItemNotificationReceiving
BRCCryptographicAdditions
BRCLazyPackage
BRCAcceptShareOperation
BRCPrivateClientZone
BRCGlobalProgress
BRTestSuite
BRDefaultDomainEnumerator
BRCSyncUpOperationBuilder
BRCClientRanksPersistedState
BRCServerStatInfo
BRCServerItem
BRCItemID
BRCAddition
BRCPackageManifestReader
BRCPackageManifestWriter
BRCPackageChecksummer
BRFieldStructureSignature
BRCInflightProgressTracker
BRCContainerFindByName
BRCMigrationQueryOperation
Daemon
BRC_ITEM_ADDITIONS
BRSharingClient
BRSharingServiceV1
BRCSharingModifyShareOperation
ICDBRCancellable
BRCSharingSaveShareOperation
BRCSharingDestroyShareOperation
BRCSharingModifyAccessOperation
BRCSharingCopyParticipantTokenOperation
BRCSharingPCSChainFolderOperation
BRCSharingCopyShareURLOperation
BRCSharingCopyShortTokenOperation
BRCShareDeleteInfo
BRCSharingProcessFolderSubitemsOperation
BRCSideCarSyncDownOperation
BRCDatabaseBackupRecord
BRCTransferStream
BRCSharingCopyAccessTokenOperation
BRFieldXattrBlob
BRAdditions
BRCPathAdditions
BRCDatabaseRestoreManager
BRCSymlinkItem
BRCCreateZoneAndSubscribeOperation
BRAccountManagementServiceV1
BRAccountManagementClient
BRCLaunchAgentClient
BRCZonePurgeOperation
BRCStagePersistedState
BRCStageRegistry
BRNonLocalVersionClient
BRNonLocalVersionServiceV1
BRCVersionsFileProvider
BRCRecentsChangeToken
BRCRecentsEnumeratorBatch
BRCWorkingSetEnumerationState
BRCRecentsEnumerator
BRCDownload
Downloads
BRCDownloadContent
BRCDownloadContentsBatchOperation
BRCDownloadVersion
BRCDownloadVersionsBatchOperation
BRCZoneRootItem
BRCFSRooted
BRCThrottler
BRCPrivateServerZone
BRCSharedServerZone
BRCSyncUpScheduler
BRCFSUploader
BRCHalfChainInfo
BRCPCSChainAdditions
BRCPCSChainInfo
BRCPCSChainBatchInfo
BRCPCSChainBreadthEnumerator
BRCPCSChainEnumerator
BRCPCSChainingOperation
AccessGater
BRFieldPkgLocalItem
BRCItemGlobalID
BRiWorkCollaborationClient
BRFileProvideriWorkCollaboration
BRCCrossZoneMoveExtension
BRCMigrateZonePCSOperation
BRCAccountSession
ICDBRCCloudDocsAppsObserver
BRBundleServiceProtocol
BRCTransferBatchOperation
BRCDumper
BRCFSWriter
BRCProblem
BRCProblemReport
BRCServerZoneHealthState
BRCQuarantine
BRCLazyXattrsCollection
BRCFileUnlinker
BRCTreeEnumerator
BRCUploadAllFilesTrackerOperation
BRCAllItemsDidUploadTracker
BRCShareURL
brc_task_tracker
BRCAutoCancelOperation
BRCListDirectoryContentsOperation
BRCRecursiveListDirectoryContentsOperation
BRCUncancellableBlockOperation
BRCFetchSubResourceRecord
BRValueableAdditions
BRCPendingChangesStream
BRFieldUserIdentity
BRCSharedServerItem
BRCFairScheduler
BRCFairSource
BRFrameworkClient
BRFrameworkServiceV1
BRCNotificationPipeDelegate
BRCAggregateOperation
BRCFSImporter
BRCContainerMetadataSyncPersistedState
BRCZoneHealthSyncPersistedState
BRCSideCarSyncPersistedState
BRCCountedSet
BRCPeriodicSyncOperation
BRCZoneHealthReportOperation
BRCPackageItem
BRItemSPIClient
BRItemSPIServiceV1
BRCDeadlineSource
BRCDeadlineScheduler
BRCSyncContext
BRFieldContentSignature
BRCFetchQuotaOperation
ChildPropagation
BRCDirectoryItem
BRCSyncOperationThrottleParams
BRCUserDefaultsManager
BRCUserDefaults
BRCContainerCellularSettings
BRCiWorkPublishingOperation
BRCSyncDownOperation
BRFieldPkgHeader
BRCTermDumper
BRCCloudDocsAppsMonitor
BRCAppListMonitorDelegate
BRCSideCarInfo
BRCGenerationID
BRiWorkAccountSPIClient
BRiWorkAccountSPIV1
BRiWorkPublishingClient
BRiWorkPublishingServiceV1
BRCSharingCopyWebAuthTokenOperation
ItemFetching
BRCFSTransferScheduler
BRCFetchRecordSubResourcesOperation
BRCFileProvider
NSFileProvider
BRCDiskSpaceReclaimer
BRDocumentsSymlinkItem
NSFileProviderItem_Private
NSFileProviderItem
BRServerSearchEnumerator
BRFieldVersionSignature
BRCSharedClientZone
BRCClientState
BRCSystemResourcesManager
ICDBRReachabilityObserver
BRCServerChangeState
BRCServerPersistedState
BRCServiceSource
NSFileProviderServiceSource
BRCSharingCopyShareOperation
BRCSyncUpEnumerator
BRCSideCarSyncUpOperation
BRCPkgItemAdditions
BRCContainerMetadataSyncUpAdditions
BRCContainerMetadataSyncUpOperation
BRCVersionInfo
BRCNonLocalVersionsSender
BRCItemDBRowIDJobIdentifier
BRCIntAndZoneJobIdentifier
BRCItemDBRowIDAndZoneJobIdentifier
init
setSession:
dbRowID
setObject:forKeyedSubscript:
isSharedZone
asSharedZone
mangledID
zoneName
objectForKeyedSubscript:
associateWithServerZone:offline:
addOfflineServerZone:
addOfflineClientZone:
addOfflineAppLibrary:
stringWithFormat:
brc_SHA1WithSalt:
stringByAppendingPathComponent:
bookmarkDataWithItemResolutionString:serverZoneName:ownerName:accountID:salted:
description
dictionaryRepresentation
dictionary
numberWithBool:
setObject:forKey:
setEtag:
setEtagBeforeCrossZoneMove:
setDeletionChangeToken:
allocWithZone:
copyWithZone:
isMemberOfClass:
isEqual:
hash
setKnownToServer:
setHasKnownToServer:
hasKnownToServer
setWasCached:
setHasWasCached:
hasWasCached
hasEtag
hasEtagBeforeCrossZoneMove
hasDeletionChangeToken
readFrom:
writeTo:
copyTo:
mergeFrom:
.cxx_destruct
knownToServer
wasCached
etag
etagBeforeCrossZoneMove
deletionChangeToken
_deletionChangeToken
_etag
_etagBeforeCrossZoneMove
_knownToServer
_wasCached
_has
icd_currentSupportDir
fileSystemRepresentation
icd_errorWithPOSIXCode:
defaultManager
mountPath
attributesOfFileSystemForPath:error:
setUpForSession:error:
fsTypeName
freeSize
totalSize
deviceID
isCaseSensitive
isIgnoringOwnership
hasRenameExcl
hasRenameSwap
hasCloning
_stfs
_isCaseSensitive
_isIgnoringOwnership
_hasRenameExcl
_hasRenameSwap
_hasCloning
_deviceID
icd_basePathForACAccountID:
fileURLWithPath:
asString
URLByAppendingPathComponent:
brc_documentURLForACAccountID:fileObjectID:error:
setUpDatabaseWithError:
path
arrayWithObjects:count:
serialQueue
close:
dealloc
openAtURL:withFlags:error:
setupPragmas
lastError
databaseURL
userVersion
integerValue
execute:
setUserVersion:
useBatchingWithDelay:changeCount:
relativePath
UTF8String
fileID
longLongValue
docID
genCount
isDirectory
performWithFlags:action:
database
makeNextFlushFullSync
flush
fetch:
initWithPQLResultSet:
enumerateObjects:
backupManifestEnumerator:
countByEnumeratingWithState:objects:count:
populateNewColumnsInDatabase:forRecord:basePath:
resourceValuesForKeys:error:
unsignedLongLongValue
docIDForURL:
unsignedIntValue
numberWithUnsignedInt:
negateIDs:
updateIDs:
clearStagedIDs:
fixUpBackupDetector:
changes
attachedDatabaseURL
URLByDeletingLastPathComponent
URLByAppendingPathComponent:isDirectory:
fetchObjectOfClass:sql:
getResourceValue:forKey:error:
initWithDatabaseURL:
addRecord:
flushAndClose
populateNewColumnsWithBasePath:
attachDatabase:error:
updateAttachedDatabase
setDatabase:
setDatabaseURL:
urlPropertiesToFetch
setUrlPropertiesToFetch:
setAttachedDatabaseURL:
_database
_databaseURL
_urlPropertiesToFetch
_attachedDatabaseURL
initWithLabel:dbCorruptionHandler:
_setErrorHandlerWithDBCorruptionHandler:
_setLockedHandler
setLabel:
defaultsForMangledID:
dbTraced
setTraced:
setCrashIfUsedAfterClose:
code
setSqliteErrorHandler:
busyHandlerMillisecondsToSleep
busyHandlerMillisecondsToAbort
setBusyHandler:
brc_close
profilingHook
stringWithUTF8String:
stringByAppendingString:
setProfilingHook:
initWithFormat:
executeRaw:
isInTransaction
forceBatchStart
assertOnQueue
length
fetch:args:
fetchObject:sql:args:
fetchObjectOfClass:sql:args:
execute:args:
sqliteErrorHandler
_shouldFlushWithChangeCount:
useBatchingOnTargetQueue:withPolicyHandler:
numberWithSQL:
dbAutovacuumRatio
dbAutovacuumBatchSize
autovacuumableSpaceInBytes
sizeInBytes
needsAutovacuum
incrementalVacuum:
manager
connectedToPowerSource
autovacuumIfNeeded
profilingEnabled
setProfilingEnabled:
attachDBAtPath:as:error:
flushToMakeEditsVisibleToIPCReaders
fetchWithSlowStatementRadar:sql:
fetchWithExpectedIndex:sql:
fetchWithSlowStatementRadar:objectWithConstructor:sql:
fetchWithSlowStatementRadar:objectOfClass:sql:
executeWithExpectedIndex:sql:
executeWithSlowStatementRadar:sql:
executeWithErrorHandler:sql:
disableProfilingForQueriesInBlock:
usePacedBatchingOnTargetQueue:withInterval:changeCount:
vmStepsExecuted
_batchingPacer
_changeCount
_flushInterval
_flushImmediately
_autovacuumInProgress
_changesOverride
_vmStepsExecuted
string
rawInjection:length:
appendFormat:
next
stringAtIndex:
operationID
isFinished
isCancelled
isExecuting
isReady
lightweightDescription
initWithUUIDBytes:
raise:format:
setName:
date
session
operationFailureThrottle
weakObjectsHashTable
setQualityOfService:
initWithName:syncContext:group:
qualityOfService
highlightedString:type:context:
nowDateFromContext:
stringFromOperationUUID:context:
name
subclassableDescriptionWithContext:
appendString:
stateWithContext:
timeIntervalSinceDate:
stringFromInterval:context:
usesBackgroundSession
nonDiscretionary
stringFromDueDate:allowsPast:context:
stringFromError:context:
dependencies
mutableCopy
count
removeObject:
descriptionWithContext:
willChangeValueForKey:
didChangeValueForKey:
errorWithDomain:code:userInfo:
finishWithResult:error:
_finishIfCancelled
mainBlock
main
setExecuting:
setupIfNeeded
removeDependency:
removeAllObjects
operationThrottle
incrementRetryCount:
_main
icd_suggestedRetryTimeInterval
throttleHashFormat:
nsecsToNextRetry:now:increment:
distantFuture
_executeWithPreviousError:
dateWithTimeIntervalSinceNow:
callbackQueue
allowsCellularAccess
addOperation:allowsCellularAccess:
createActivity
finishIfCancelled
_scheduleExecutionWithPreviousError:
cancel
brc_isRetriable
setFinished:
brc_isBlacklistError
shouldRetryForError:
_completedWithResult:error:
group
setGroup:
addDependency:
addObject:
queuePriority
setQueuePriority:
UUIDString
configuration
setDiscretionaryNetworkBehavior:
setAutomaticallyRetryNetworkFailures:
completionBlock
associateWithCompletedOperation:
setCompletionBlock:
setNonDiscretionary:
addSubOperation:overrideContext:allowsCellularAccess:
blockOnHighPriorityOperation:
initWithName:syncContext:
initWithName:
isConcurrent
isAsynchronous
error
schedule
start
completedWithResult:error:
addSubOperation:
associateCKOperationsToEventMetric:
setOperationThrottle:
setOperationFailureThrottle:
setMainBlock:
finishBlock
setFinishBlock:
logSections
startDate
syncContext
highPriorityWaitGroup
_syncContext
_operationUUID
_internalQueue
_executionTransaction
_startDate
_finishDate
_lastTryDate
_nextTryDate
_lastError
_throttleHash
_retryTimer
_group
_highPriorityWaitGroup
_subOperations
_Activity
_associatedEventMetrics
_finished
_nonDiscretionary
_callbackQueue
_operationThrottle
_operationFailureThrottle
_mainBlock
_finishBlock
_logSections
_operationGroup
serverDB
ownerName
userKeyForOwnerName:db:
createUserKeyForOwnerName:nameComponents:overwriteComponents:
groupInTransaction:
initWithSubscriptionID:
setShouldSendContentAvailable:
setNotificationInfo:
initWithSubscriptionsToSave:subscriptionIDsToDelete:
brc_cloudKitErrorForSubscriptionID:
brc_containsCloudKitInternalErrorCode:
setModifySubscriptionsCompletionBlock:
changeToken
initWithPreviousServerChangeToken:
setFetchAllChanges:
queue
setCallbackQueue:
sharedDBSyncDownBatchRecordsCount
setResultsLimit:
array
setRecordZoneWithIDChangedBlock:
setRecordZoneWithIDWasDeletedBlock:
initWithRecordZoneID:
getOrCreateSharedZones:
scheduleSyncDown
updateWithServerChangeToken:clientRequestID:caughtUp:
numberWithInt:
_performAfterAddingOwnerKeysForZoneIDs:block:
setFetchDatabaseChangesCompletionBlock:
_performFetchChangedZones
_performAfterRegisteringForPushes:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
initWithSyncContext:changeState:group:
_changeState
metadataSyncContext
icd_fetchRecents
brc_isUserInitiatedRetriable
state
predicateWithFormat:
initWithRecordType:predicate:
initAndScheduleWithServerZone:parentOperation:pendingChangesStream:
setStateBits:
setQueryFinishedServerTruthCallback:
initWithQuery:
zoneID
setZoneID:
numberOfGreedyRecentlyUsedItems
setFetchAllResults:
setShouldFetchAssetContent:
desiredKeysWithMask:
setDesiredKeys:
brc_isInterestingRecordForSave
recordID
recordName
hasPrefix:
substringFromIndex:
initWithRecordName:zoneID:
addRecordIDToDeserialize:
setRecordFetchedBlock:
saveRecordsWithQueryCursor:
icd_errorWithDomain:code:description:
notifyWhenRecordsAreFetchedAndFinish:
setQueryCompletionBlock:
_performQueryOperationForBit:index:completion:
initWithServerZone:
_serverZone
isInTrashScope
orig
isZoneRoot
isDead
appLibrary
appLibraryID
itemGlobalID
itemParentGlobalID
logicalName
mangledIDString
isInDocumentScope
isInDataScope
clientZone
parentClientZone
fromReadOnlyDB
fileObjectID
isFSRoot
parentFileObjectID
sharingOptions
itemIDForTopLevelSharedItemGivenItem:
itemByItemID:db:
isDocument
finderTags
initWithData:
tagsCount
tags
setAttribute:forKey:
mode
birthtime
numberWithLongLong:
lastUsedTime
favoriteRank
extendedAttributes
creatorRowID
nameComponentsForKey:db:
uploadStatus
digestDescription
isShareAcceptationFault
ownerKey
bookmarkData
dataUsingEncoding:
asDocument
currentVersion
lastEditorRowID
isEqualToNumber:
icd_formattedName
isHiddenExt
isEvictable
editedSinceShared
boolValue
size
mtime
isFinderBookmark
isPackage
liveConflictLoserEtags
fsDownloader
icd_cocoaOrFileProviderError
isStagedForMaterialization
fetchDownloadingStatusForItem:block:
fsUploader
isUploadingItem:
uploadError
brc_wrappedError
asDirectory
syncUpError
childItemCount
possiblyContainsSharedByMeItem
possiblyContainsSharedToMeItem
isDirectoryFault
serverQuotaUsage
isSymLink
asSymlink
symlinkTarget
lengthOfBytesUsingEncoding:
numberWithUnsignedInteger:
syncUpState
icd_isCloudDocsErrorCode:
intAtIndex:
serverZone
zoneRowID
itemID
itemIDString
bookmarkDataWithItemResolutionString:serverZone:
initWithLocalVersion:
data
initWithLocalStatInfo:
notificationFromItem:
initWithLocalItem:itemDiffs:
objectForKey:
copy
removeObjectForKey:
isEqualToItemGlobalID:
isEqualToFileObjectID:
merge:
unionSet:
isDocumentsFolder
supportsSecureCoding
notificationGatheredFromItem:
subclassDescription
classForCoder
setNumberAttribute:forKey:
notificationByStrippingSharingInfoIfNeeded
canMerge:
generateLogicalExtension:physicalExtension:
parentGlobalID
parentGlobalIDs
setParentGlobalIDs:
oldAppLibraryID
oldParentFileObjectID
_isInDocumentScope
_isInDataScope
_itemGlobalID
_parentGlobalID
_parentGlobalIDs
_appLibrary
_oldAppLibraryID
_oldParentFileObjectID
icd_issueSandboxExtensionOfClass:error:
brc_booleanValueForKey:
_finishSetupWithClientContainerIDs:
_isNonSandboxedForAuditToken:
initWithAuditToken:
hasAuditToken
hasPid
setWithArray:
objectAtIndexedSubscript:
stringByAppendingFormat:
_computeCloudEnabledStatusWithoutLogOutStatus
isAutomationEntitled
isAllowedToAccessAnyCloudService
isNonAppSandboxed
auditToken
applicationIdentifier
sharedConnection
isCloudSyncAllowed:
initWithNonSandboxedAppWithAppLibraryIDs:bundleID:auditToken:
canFetchUserQuota
cloudEnabledStatusForSession:
updateCloudEnabledStatus
isProxyEntitled
isSharingProxyEntitled
isFolderSharingProxyEntitled
isSharingPrivateInterfaceEntitled
appLibraryIDs
defaultAppLibraryID
_debugIdentifier
_cloudEnabledStatusWithoutLogOutStatus
_canGetApplicationInfo
_isNonAppSandboxed
_isAllowedToAccessAnyCloudService
_isProxyEntitled
_isSharingProxyEntitled
_isFolderSharingProxyEntitled
_isSharingPrivateInterfaceEntitled
_isAutomationEntitled
_hasAuditToken
_applicationIdentifier
_appLibraryIDs
_defaultAppLibraryID
_auditToken
objectAtIndex:
addTags:
clearTags
tagsAtIndex:
tagsType
setTags:
_tags
_publish
_unpublish
isIndeterminate
isPaused
componentsJoinedByString:
fractionCompleted
completedUnitCount
totalUnitCount
brc_publish
brc_unpublish
brc_dumpDescription
setCompletedUnitCount:
inflightProgressTracker
trackProgress:forParentFoldersInGroup:
documentsScopeProviderManager
dataScopeProviderManager
setFileURL:
getUserVisibleURLForItemIdentifier:completionHandler:
untrackProgress:forParentFoldersInGroup:
_progressForDocument:group:sizeInfo:
initWithParent:userInfo:
initWithGroup:itemIdentifier:isInDocumentScope:session:
fetchParentFileObjectIDs
setTotalUnitCount:
setKind:
setUserInfoObject:forKey:
setCancellable:
isEqualToString:
taskTracker
brc_errorCodeRemoved
setCancellationHandler:
downloadProgressForDocument:sizeInfo:
uploadProgressForDocument:sizeInfo:
parentFileObjectIDs
isPublished
_published
_session
_itemIdentifier
_parentFileObjectIDs
publishProgress:onItemID:
publishDownloadingProgress:onItemID:
isSharedToMeTopLevelItem
diffAgainst:
derivedAliasItemIDWithOwnerName:
serverAliasItemForSharedItem:inZone:
type
structureRecordIDForItemType:zone:
isPrivateZone
sharedAliasItemID
diffAgainstOriginalItem
ckInfo
accountID
asPrivateClientZone
serverAliasByUnsaltedBookmarkData:
initWithRecordType:recordID:
parentID
fillStructureRecord:inZone:itemID:ckInfo:parentID:targetItemID:targetZone:diffs:isFolderShare:beingDeadInServerTruth:shouldPCSChainStatus:
serializeFilename:forCreation:setExtension:inSharedAlias:
serializeFinderTags:forCreation:
serializeStructuralPluginHints:
isBatchSuspended
serverZoneByRowID:
localAliasForSharedItem:inZone:
markNeedsDeleteForRescheduleOfItem:
saveToDB
clearCKInfo
diffAgainstServerAliasItem:
structureRecordIDInZone:
structureRecordBeingDeadInServerTruth:shouldPCSChainStatus:inZone:
updateParentZoneRowID:
initWithRecordID:action:
validatingDirectoryReferenceInZone:
pcsChainParentReferenceInZone:
setParent:
brc_SHA256
targetReferenceWithItemID:targetZone:isFolderShare:
serializeSystemFields:
integerAtIndex:
setNumberOfDirFaults:
setUploadedSize:
setNeedsUploadSize:
setUploadedCount:
setNeedsUploadCount:
setDownloadedSize:
setNeedsDownloadSize:
setDownloadedCount:
setNeedsDownloadCount:
setUnstagedCount:
setNeedsUnstageCount:
setSyncedUpCount:
setNeedsSyncUpCount:
setOverQuotaCount:
setSharedByMeCount:
setSharedToMeCount:
isEmpty
numberOfDirFaults
overQuotaCount
sharedByMeCount
sharedToMeCount
needsUploadSize
needsUploadCount
needsDownloadSize
needsDownloadCount
needsUnstageCount
needsSyncUpCount
uploadedSize
uploadedCount
downloadedSize
downloadedCount
unstagedCount
syncedUpCount
isUploading
totalFileUploadingCount
isDownloading
totalFileDownloadingCount
aggregatedPropertiesForRowID:db:
updateWithChildOldProperties:newProperties:
fileUploadedCount
uploadingByteTotalCount
uploadedByteCompletedCount
downloadingByteTotalCount
downloadedByteCompletedCount
fileDownloadedCount
_numberOfDirFaults
_uploadedSize
_needsUploadSize
_uploadedCount
_needsUploadCount
_downloadedSize
_needsDownloadSize
_downloadedCount
_needsDownloadCount
_unstagedCount
_needsUnstageCount
_syncedUpCount
_needsSyncUpCount
_overQuotaCount
_sharedByMeCount
_sharedToMeCount
setWithCapacity:
addObjectsFromArray:
containerMetadata
cloudSyncTCCDisabledForContainerMeta:
setIsCloudSyncTCCDisabled:
enumerateAppLibraries:
identifier
bundleIdentifiers
containsObject:
canFetchAllContainersByID
fetchAllContainersByIDWithError:
initWithAccountSession:
_disabledBundleIDs
_knownBundleIDs
handleCloudKitShareMetadata:completionHandler:
willAcceptShareAtURL:
getiCloudDriveServiceURLWithCompletionHandler:
getUserVisibleRootURLWithCompletionHandler:
getDefaultAccountURLWithCompletionHandler:
getUbiquityIdentityTokenWithCompletionHandler:
setProtocol:
encodeWithCoder:
initWithCoder:
newConnectionWithLabel:readonly:error:
readOnlyWorkloop
useSerialQueueWithTarget:
fileUnlinker
sessionDirPath
renameAndUnlinkInBackgroundItemAtPath:
dbBecameCorrupted
setStatementCacheMaxCount:
setupDatabase
serverTruthWorkloop
clientTruthWorkloop
openForDumping
newConnection:
statementCacheMaxCountForServerTruth
statementCacheMaxCountForClientTruth
dbProfiled
_openConnection:databaseName:baseURL:readonly:error:
_registerDynamicDBFunctions:error:
checkResourceIsReachableAndReturnError:
setSynchronousMode:
sqliteCacheSize
sqliteCacheSpill
_registerStaticDBFunctions:error:
registerFunction:nArgs:handler:error:
containsIndex:
newFromSqliteValue:
initWithData:encoding:
dataAtIndex:
isRootItemIDWithSQLiteValue:
registerFunction:nArgs:handler:
isDocumentsItemIDWithSQLiteValue:
notificationManager
queueUpdateForItemAtRowID:
globalProgress
loadFromClientStateInSession:
allocateNotifRank
_openConnection:databaseName:readonly:error:
_setupConnection:readonly:upgradingDB:error:
icd_errorFromErrno
removeItemAtURL:error:
plist
setNeedsSave:
saveServerZone:toDB:
lastInsertedRowID
setDbRowID:
numberAtIndex:
close
saveAppLibrary:toDB:
initWithAppLibraryName:
unarchivedObjectOfClasses:atIndex:
initWithMangledID:dbRowID:zoneRowID:db:plist:session:initialCreation:createdCZMMoved:
isCloudDocsAppLibrary
rootItemID
_createAppLibrary:
newAppLibraryFromPQLResultSet:error:
fetchObject:sql:
initWithZoneName:ownerName:
initWithMangledID:dbRowID:db:plist:session:initialCreation:
newSharedClientZoneFromPQLResultSet:error:
initWithMangledID:dbRowID:plist:session:
newSharedServerZoneFromPQLResultSet:error:
newPrivateClientZoneFromPQLResultSet:error:
newPrivateServerZoneFromPQLResultSet:error:
newLocalItemFromPQLResultSet:db:error:
clientDB
deviceKeyForName:db:
userIdentityForKey:db:
nameComponents
participants
isCurrentUser
userIdentity
userRecordID
userIdentityForOwnerName:db:
initWithCKUserIdentity:
_setUserIdentity:forOwnerName:
setNameComponents:
unknownPersonNameComponents
formatInjection:
unsignedLongLongAtIndex:
_privateClientZonesEnumerator:
_forDBUpgrade_setStateBits:clearStateBits:
saveClientZoneToDB:
_sharedClientZonesEnumerator:
unsignedIntAtIndex:
icd_errorWithPOSIXCode:description:
nameWithString:
_registerLastBootIfNeeded:table:
_stepBackupDetector:newState:error:
_clearNeedsUpgradeErrors:brVersion:
initWithObjects:
_classesForClientState
stringWithSQL:
initWithDictionary:
needsSave
enumerateServerZones:
saveAppLibraryToDB:
setPreFlushHook:
nextNotifRank
flushUpdatesWithRank:
flushUpdates
flushAppliedTombstones
enumerateClientZones:
databaseAndNotificationDidFlush
recentsEnumerator
maxNotifRankWasFlushed
setPostFlushHook:
autoRollbackHandler
domain
setAutoRollbackHandler:
dbBatchDelay
dbBatchSize
unarchivedObjectOfClass:atIndex:
saveToDB:
openAndValidateDatabase:serverTruth:session:baseURL:skipBackupDetection:error:
_openConnection:serverTruth:databaseName:baseURL:initialVersion:lastCurrentVersion:error:
_validateDatabase:baseURL:session:serverTruth:initialVersion:lastCurrentVersion:error:
_checkIntegrity:serverTruth:session:skipBackupDetection:error:
reimportItemsBelowItemWithIdentifier:completionHandler:
dbHandle
openAndValidateDatabase:serverTruth:error:
_startWatcher
_finishClientTruthConnectionSetupWithError:
_finishServerTruthConnectionSetupWithError:
enableDatabaseProfilingForDB:
stopDBWatcher
highlightedString:type:
writeLineWithFormat:
isSyncBlockedBecauseAppNotInstalled
isSyncBlockedBecauseOSNeedsUpgrade
_dumpClientZoneBlockedState:toContext:
pushIndentation
dumpStatusToContext:error:
popIndentation
appLibraries
asSharedClientZone
_sharedServerZoneByName:ownerName:db:
_privateServerZoneByName:db:
associateWithServerZone:
dumpActivityToContext:error:
dumpTablesToContext:error:
disableDatabaseProfilingForDB:
fileDescriptor
setDateStyle:
setTimeStyle:
initWithFile:db:
setLiveDaemon:
setOnlyActiveStuff:
setTaskTracker:
clientZonesMatchingSearchString:error:
_dumpClientZoneStatus:toContext:error:
upgradeOfflineDB:serverTruth:session:error:
_sharedServerZonesEnumerator:
_privateServerZonesEnumerator:
_appLibrariesEnumerator:
associateWithClientZone:
containerScheduler
liveDaemon
stringFromDate:
icd_realpath
dateWithTimeIntervalSince1970:
longValue
longAtIndex:
fp_obfuscatedFilename
objectOfClass:atIndex:
dumpToContext:db:
_dumpClientZone:toContext:error:
dumpSession:toContext:db:error:
dumpToContext:
dumpMiscOperationsToContext:
analyticsReporter
appsMonitor
setDumpTrackedPendingDownloads:
backupToURL:progress:
databaseID
clientState
serverState
readOnlyDB
_setupBackupDetector:error:
preventDatabaseFromBeingReused
saveServerZoneToDB:
createServerZone:
deleteServerZone:
_enumerateAppLibraryRowIDs:usingBlock:
_reserveRowIDForLibrary:
_deleteAppLibrary:
_createPrivateAppLibrary:
_createSharedAppLibrary:
_appLibraryByName:db:
_createClientZone:
_deleteClientZone:
_privateClientZoneByName:db:
_privateClientZoneByID:db:
foldersNeedingTransmogrifyEnumerator
itemsNeedingIndexingEnumeratorFromNotifRank:batchSize:
itemsWithSideCarInFlightDiffsEnumerator
createDeviceKeyForNameInServerDB:
userIdentityForKey:
learnUserIdentitiesForShare:forceUpdate:
fetchItemCountAndSizeNeedingUploadInZone:completion:
fetchItemCountNeedingSyncUpInZone:
openDBWithError:
closeDBs
dumpStatusToFileHandle:zoneName:tracker:error:
initializeOfflineDatabaseWhileUpgrading:error:
dumpDatabaseToFileHandle:zoneName:tracker:error:
dumpFileCoordinationInfoToFileHandle:error:
backupDatabaseToURL:error:
sessionForBackingUpDatabasesAtURL:
sessionForDumpingDatabasesAtURL:
nameComponentsForOwnerName:db:
initWithBytesNoCopy:length:freeWhenDone:
initForReadingFromData:error:
decodeObjectOfClass:forKey:
brc_isEverRetriable
addObserver:
removeObserver:
allApplicationIdentifiers
accountPath
brc_accountIDPathForAccountPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
writeToFile:atomically:encoding:error:
fileExistsAtPath:isDirectory:
ubiquitousMigrationMaxBouncingAttempts
moveItemAtPath:toPath:error:
icd_stringByDeletingPathBounceNo:
stringValue
icd_representableHFSFileNameWithBase:suffix:extension:
destinationOfSymbolicLinkAtPath:error:
removeItemAtPath:error:
_moveFromPath:toPath:onCollision:error:
_hasOnePathIn:validatePath:
sessionForMigratingDatabaseAtURL:
isDocumentScopePublic
pathRelativeToRoot
localizedName
domainFromACAccountID:displayName:isDataScope:
brc_defaultDomainProviderManager
documentStorageURL
pathRelativeToDocumentStorage
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
importDomain:fromDirectoryAtURL:completionHandler:
lastPathComponent
icd_isCocoaErrorCode:
icd_dsid
icd_pathRelativeToDirectory:
brc_dbAccountIDForPath:
stageUbiquitousDirectory:existingAccountDirectory:toMigrationDirectory:clouddocsScopeDirectory:dataScopePath:accountPath:account:
writeToFile:options:error:
ubiquityTokenSalt
fileExistsAtPath:
importStagedUbiquitousSession:clouddocsScopeDirectory:dataScopeDirectory:ubiquityTokenSalt:sessionInstallationDirectory:account:
isEnabledForDataclass:
importUbiquitousDirectoryForAccount:
dictionaryWithObjects:forKeys:count:
initWithACAccountID:dbAccountID:salt:
destroyLocalDataWaitingForFilesToBeUnlinked:fileUnlinker:completionBlock:
setDBAccountID:
_loadOnDiskAccountSessionWithError:
_cleanupActivitiesStatesWhenNoSessionExists
resume
applyScheduler
isInInitialState
logoutTimeout
destroyLocalDataWithPristineContainerIDs:
__itemAtURL:didDisconnectWithPurposeID:
jetsamCloudDocsApps
suspend
__destroySessionWithIntents:
coordinateAccessWithIntents:queue:byAccessor:
fileURLWithPath:isDirectory:
ubiquityTokenSaltFilename
stringWithContentsOfURL:encoding:error:
UUID
writeToURL:atomically:encoding:error:
setResourceValue:forKey:error:
openWithError:pushQueue:
reason
setLoggedOutError:
brc_isOutOfSpaceError
closeAndResetLocalState
userInfo
_destroySessionSynchronously
accountHandler:willChangeSessionFrom:
_createAccountSessionWithID:error:
accountHandler:didChangeSessionTo:
destroyLocalData
_handleAccountWillChange
_destroyAccountSynchronously
_handleAccountDidChange
_updateAccountToAccountID:
objectEnumerator
shareMetadata
share
sharedItemHierarchyIDs
initWithCapacity:
setMaxConcurrentOperationCount:
addOperation:
allValues
isRunningShareAcceptForShareID:structureRecordID:
registerShareAcceptOperation:forURL:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
initWithACAccountID:
addDelegate:
removeDelegate:
_replaceSymbolicLinkAtPath:withPath:error:
startAndLoadAccountSynchronously:
destroySessionSynchronously
createAccountSessionWithID:error:
doesNotHaveEnoughDiskSpaceToBeFunctional
setDoesNotHaveEnoughDiskSpaceToBeFunctional:
acAccountID
pushQueue
loggedOutError
_accountPath
_ubiquityTokenSalt
_dbAccountID
_queue
_syncPolicyByFolderType
_delegates
_doesNotHaveEnoughDiskSpaceToBeFunctional
_acAccountID
_pushQueue
_loggedOutError
_initWithServerItem:dbRowID:
setType:
asFinderBookmark
isShareableItem
asShareableItem
icd_fetchShareAlias
initWithRecordIDs:
loggingDescription
brc_itemIDWithSession:
setFetchRecordsCompletionBlock:
_performAfterFetchingAlias:
addFetchShareAliasCompletionBlock:
initWithTarget:aliasZone:isUserWaiting:
cancelToBeReplacedByOperation:
targetItemID
_recordID
_targetItemID
_parentItemID
_fetchShareAliasCompletionBlocks
initWithSession:
submitEventMetric:
_forgetEventMetrics:
firstObject
eventName
removeObjectsInArray:
eventMetricTimeout
startTime
_cleanupTimedOutEventMetrics:
_withEventMetricsOfKind:accessor:
genID
removeObjectAtIndex:
initWithEventName:
setStartTime:
setFileID:
setGenID:
isEqualToItemID:
setOperationID:
setIsRecursiveDownload:
setIsDownloadingForBackup:
rowIDs
forgetEventMetric:
createFSEventToSyncUpEventForFileID:genID:
lookupFSEventToSyncUpEventByFileID:genID:accessor:
lookupFSEventToSyncUpEventByItemID:accessor:
createUserDownloadEventForOperationID:isRecursive:isForBackup:
lookupUserDownloadEventByOperationID:accessor:
lookupUserDownloadEventByRowID:accessor:
_metricEndpoint
_eventsByKind
subDescription
additionalPayload
endTime
setEndTime:
isCKMetric
setIsCKMetric:
associatedCKEventMetricIfAvailable
_isCKMetric
_eventName
_startTime
_endTime
_associatedCKEventMetricIfAvailable
numberWithUnsignedLongLong:
debugItemIDString
setItemID:
setMtime:
contentSize
setContentSize:
setIsPackage:
syncUpBatchSize
setSyncUpBatchSize:
_isPackage
_genID
_fileID
_itemID
_mtime
_contentSize
_syncUpBatchSize
setRowIDs:
didSucceed
setDidSucceed:
isDownloadingForBackup
isRecursiveDownload
itemCount
setItemCount:
totalContentSize
setTotalContentSize:
_didSucceed
_isDownloadingForBackup
_isRecursiveDownload
_operationID
_rowIDs
_itemCount
_totalContentSize
initWithEventName:atTime:
enumerateKeysAndObjectsUsingBlock:
defaultSyncContext
ckContainer
setMinimumOSName:
setZoneNeedsPrep:
setRecordId:
hasMinimumOSName
hasZoneNeedsPrep
hasRecordId
minimumOSName
zoneNeedsPrep
recordId
_minimumOSName
_recordId
_zoneNeedsPrep
icd_sharingMisc
fetchUserRecordIDWithCompletionHandler:
zoneHealthSyncContext
brc_isResetError
keyEnumerator
getOrCreateAppLibraryAndPrivateZonesIfNecessary:
intValue
initWithRecord:
privateClientZoneByID:
initWithCKInfo:state:
syncedDownZoneHealthState:
zoneHealthWasReset
receivedUpdatedZoneHealthServerChangeToken:requestID:
finishedZoneHealthSyncDownWithRequestID:error:
brc_zoneHealthZoneID
zoneHealthSyncDownBatchRecordsCount
setPreviousServerChangeToken:
initWithRecordZoneIDs:configurationsByRecordZoneID:
setConfiguration:
setSourceApplicationBundleIdentifier:
setShouldFetchAssetContents:
recordType
setRecordChangedBlock:
setRecordWithIDWasDeletedBlock:
bytes
receivedUpdatedServerChangeToken:requestID:
setRecordZoneChangeTokensUpdatedBlock:
brc_isCloudKitErrorImplyingZoneNeedsCreation
completedZoneHealthSyncDownWithRequestID:error:
setRecordZoneFetchCompletionBlock:
setFetchRecordZoneChangesCompletionBlock:
initWithSession:changeToken:
_changeToken
_recordsByID
_deletedRecordIds
brc_serverConfigLocalPath
_registerForConfigFetch
setLocalServerPlistCacheURL:whenLoaded:
serverConfigurationURL
URLWithString:
isFileURL
brc_groupContainerSupportDir
backgroundSessionConfigurationWithIdentifier:
setHTTPCookieStorage:
setURLCredentialStorage:
setURLCache:
setDiscretionary:
sessionWithConfiguration:delegate:delegateQueue:
downloadTaskWithURL:
addOperationWithBlock:
_fetchServerConfigurationDictionary
configurationUpdateXPCActivity
updateServerConfig
originalRequest
currentRequest
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:downloadTask:didFinishDownloadingToURL:
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
_downloadQueue
_urlSession
_serverConfigurationDict
_localPlistCacheURL
isFile
isPackageRoot
icd_isSideFaultName
initWithFSGenerationID:
isFileWithFinderInfoAliasBit
_resolveAgainstFileDescriptor:
icd_isExcludedWithMaximumDepth:
isUnixDir
itemScope
isUserVisible
isDataScopeDomain
initWithURL:logicalName:parentItem:isDataScopeDomain:error:
includesDataScope
isAppLibraryRoot
isCloudDocsRoot
rootItemGlobalID
isNonDesktopRoot
computeUserVisibleStatusOfLiveItemWithParentVisible:parentIsNonDesktopRoot:parentScope:itemFilename:parentFilename:appLibrary:
initAsNewDirectoryWithLogicalName:parentItem:isDataScopeDomain:error:
_resolveParentBasedPropertiesWithParent:isDataScopeDomain:logicalName:
icd_pathWithFileSystemRepresentation:
isFault
isBundle
isExcluded
isBusy
hasFinderTags
birthTime
modificationTime
generationID
isWritable
isExecutable
isHiddenExtension
isHiddenFile
isFinderAlias
isBRAlias
fileType
initWithURL:existingItem:error:
initWithURL:logicalName:parentItem:extension:error:
initAsNewDirectoryWithLogicalName:parentItem:extension:error:
initWithLogicalName:parentItem:isDataScope:error:
symlinkContent
hardlinkCount
fsGenerationID
quarantineInfo
xattrs
parentItemGlobalID
fileURL
_fileURL
_logicalName
_symlinkContent
_generationID
_parentItemGlobalID
_finderInfo
_mode
_nlink
_birthtime
_size
_fsGenerationID
_flags
_itemScope
_isExcluded
_isInPackage
_isBundle
_isPackageRoot
_readFault
_hasFinderTags
_isBusy
_hasFinderInfoAliasBit
_isBRAlias
_qtnResolved
_xattrsResolved
_isDocumentsFolder
_isUserVisible
_quarantineInfo
_xattrs
_sharingOptions
initWithURL:packageRoot:error:
stringByDeletingLastPathComponent
initWithAliasTargetContainerString:
initWithUUIDString:
aliasTargetContainerString
iworkShareableExtensions
icd_pathExtension
lowercaseString
stringFromItemID:context:
brc_hexadecimalString
deleteCharactersInRange:
descriptionWithContext:origName:
longLongAtIndex:
boolAtIndex:
decodeInt32ForKey:
decodeInt64ForKey:
decodeBoolForKey:
encodeObject:forKey:
encodeInt32:forKey:
encodeInt64:forKey:
encodeBool:forKey:
checkStateWithItemID:logToFile:
initWithStatInfo:
icd_displayFilenameWithExtensionHidden:
_aliasTargetMangledID
_aliasTargetItemID
_updateAliasTarget:
iWorkShareable
initFromResultSet:pos:
check:logToFile:
displayName
isEtagEqual:
setCreatorRowID:
learnCKInfo:
setState:
setMode:
setBirthtime:
setLastUsedTime:
setFavoriteRank:
setParentID:
setHiddenExt:
xattrSignature
setXattrSignature:
lazyXattr
setLazyXattr:
setFinderTags:
setLogicalName:
aliasTarget
trashPutBackPath
setTrashPutBackPath:
trashPutBackParentID
setTrashPutBackParentID:
_ckInfo
_parentID
_state
_type
_lastUsedTime
_favoriteRank
_aliasTarget
_hiddenExt
_xattrSignature
_lazyXattr
_finderTags
_trashPutBackPath
_trashPutBackParentID
_creatorRowID
_hasLastEditorDeviceRowID
_hasLastEditorRowID
lastEditorDeviceRowID
stringFromByteCount:context:
brc_signatureIsPendingPlaceHolder
allObjects
icd_qtnFlags
brc_signatureIsPackage
decodeObjectOfClasses:forKey:
initWithVersion:
replaceOccurrencesOfString:withString:options:range:
originalPOSIXName
icd_convertExtensionToUTIConformingTo:
minFileSizeForThumbnailTransfer
canMostRecentClientsGenerateThumbnailsForUTI:
setLastEditorDeviceRowID:
setLastEditorRowID:
lastEditorDeviceDisplayNameWithDB:
lastEditorUserIdentityWithDB:
lastEditorNameComponentsWithDB:
displayNameWithoutExtension:
hasThumbnail
additionNameForItemID:zoneID:
isSmallAndMostRecentClientsGenerateThumbnails
setOriginalPOSIXName:
setSize:
thumbnailSize
setThumbnailSize:
thumbnailSignature
setThumbnailSignature:
contentSignature
setContentSignature:
conflictLoserEtags
setConflictLoserEtags:
setEditedSinceShared:
lastEditorDeviceOrUserRowID
setLastEditorDeviceOrUserRowID:
lastEditorDeviceName
setLastEditorDeviceName:
setQuarantineInfo:
_originalPOSIXName
_thumbnailSize
_thumbnailSignature
_contentSignature
_conflictLoserEtags
_editedSinceShared
_lastEditorDeviceOrUserRowID
_lastEditorDeviceName
alloc
initWithServerMetrics:
quotaUsed
recursiveChildCount
sharedByMeRecursiveCount
sharedAliasRecursiveCount
childCount
setQuotaUsed:
setRecursiveChildCount:
setSharedByMeRecursiveCount:
setSharedAliasRecursiveCount:
setChildCount:
_quotaUsed
_recursiveChildCount
_sharedByMeRecursiveCount
_sharedAliasRecursiveCount
_childCount
isValidSignature:
brc_hexadecimalStringWithBytes:length:
updateWithBytes:length:
dataByFinishingSignature
brc_signatureIsValid
brc_signature
brc_pendingPlaceholderForPackage:
initWithBytes:length:
setPath:
setSymlinkContent:
setSignature:
typeAsString:
StringAsType:
hasPath
setHasMtime:
hasMtime
setIsWritable:
setHasIsWritable:
hasIsWritable
setIsExecutable:
setHasIsExecutable:
hasIsExecutable
hasSymlinkContent
hasQuarantineInfo
hasSignature
setXattrIndex:
setHasXattrIndex:
hasXattrIndex
signature
xattrIndex
_xattrIndex
_path
_signature
_isExecutable
_isWritable
progressWithTotalUnitCount:
serverZoneByName:ownerName:
initWithShare:zone:
setSaveShareCompletionBlock:
initWithShare:zone:appName:
setCopyShareURLCompletionBlock:
initWithShareMetadata:session:
moveDialogToFront
serviceName
serviceXPCInterface
initWithConnection:itemIdentifier:
saveShare:completion:
fetchShareURL:appName:completion:
validation_allowValidation:
validation_evictDocumentWithCompletionHandler:
validation_shareDocumentWithCompletionHandler:
interfaceWithProtocol:
fileObjectIDWithString:
fileProviderErrorForNonExistentItemWithIdentifier:
sharedManager
signalEnumeratorForContainerItemIdentifier:completionHandler:
initWithDomain:inSyncBubble:
setDomain:
_initWithProviderIdentifier:groupName:domain:
processInfo
performExpiringActivityWithReason:usingBlock:
fp_collidingURL
itemByFileObjectID:
nsfpItemFromLocalItem:
fileProviderErrorForCollisionWithItem:
_prepareAndCheckLoggedInOrError:
currentPersona
copyCurrentPersonaContextWithError:
generateAndRestorePersonaContextWithPersonaUniqueString:
parentItemIdentifier
fsImporter
filename
importNewItemAtURL:logicalName:parentItem:templateItem:fields:options:extension:error:
hasLiveChildren
metadataVersion
versionSignature
isEquivalentToSignature:
fileProviderErrorForOutOfDateItem:
contentVersion
markRemovedFromFilesystemRecursively:
groupInBatch:
isCurrentlyShareable
brc_errorItemNotShareable
initShareIDWithShareableItem:
baseContentsRecord
folderRootStructureRecord
initWithRootRecord:shareID:
icd_convertExtensionToUTI
markMigrationToFPFSCompleteInDataScope:
brc_errorLoggedOut
waitForAccountLoadingOfDomain:
personaIdentifierForACAccountID:
notAuthenticatedError
isAppLibraryDocumentsFolder
initWithACAccountID:rootFileObjectID:documentsFileObjectID:
defaultClientZone
initWithQueryItem:container:zoneRowID:isDataScope:
quotaAvailableForOwner:
nsfpItemFromNotification:
cloudDocsClientZone
defaultAppLibrary
fetchRootItem
appLibraryRowID
appLibraryByRowID:
createDocumentsFolder
initWithSession:extension:
initWithFileObjectID:recursive:extension:session:
initWithSession:query:extension:
bestFittingImageDataForSize:shouldTransformToAppIcon:
icd_stringWithSize:
brc_errorInvalidParameter:value:
icd_fileProviderError
fetchThumbnailsForItemIdentifiers:requestedSize:perThumbnailCompletionHandler:completionHandler:
fileProviderManager
readingIntentWithURL:options:
setUnderlyingQueue:
fp_shortDescription
_properSizeForContainerThumbnail:
containerCache
allContainersByID
_fetchThumbnailForContainerID:representedByItemWithIdentifer:size:knownContainers:perThumbnailCompletionHandler:
fetchSmallThumbnailForDocumentItem:group:completionHandler:
isKnownByServer
contentsRecordID
icd_downloadThumbnailsUserInitiated
allKeys
setRecordIDs:
dataWithContentsOfURL:
setPerRecordCompletionBlock:
addOperation:nonDiscretionary:
sharedSyncContext
isIdleOrRejected
URLByAppendingPathExtension:
copyItemAtURL:toURL:error:
isEqualToSet:
startAccessingSecurityScopedResource
permanentStorageForItemAtURL:allocateIfNone:error:
stopAccessingSecurityScopedResource
scheduleNeededLosersDownloadForItem:withStorage:
saveToDBForServerEdit:
_syncContextToDownloadDocument:
setRecordIDsToVersionETags:
setPerRecordProgressBlock:
managerForDomain:
icd_downloadUserInitiated
URLForDirectory:inDomain:appropriateForURL:create:error:
createSymbolicLinkAtURL:withDestinationURL:error:
stageRegistry
liveURLForFileObjectID:
makeLiveSymlinkWithTarget:fileObjectID:error:
_fetchFlatFileContentsForDocumentItem:keyedBy:signatureToFetch:progress:completionHandler:
_scheduleLoserDownloadIfNecessaryForItem:
stagedFileID
downloadStageURLForFileID:
_restageAndCallCompletionIfNecessaryWithItem:liveURL:completionHandler:
hasFileIDForUpload
fileIDForUpload
generationIDForUpload
unsignedLongValue
shareAcceptOperationForItemID:
fetchContentsForItemWithIdentifier:version:completionHandler:
performBlock:whenSyncDownCompletesLookingForItemID:
_performPackageDownloadPhaseWithExistingContents:progress:fileObjectID:clientZone:syncContext:desiredIndices:stageID:recordID:versionSignature:fileProviderItem:completionHandler:
setDesiredPackageFileIndices:
createURLForDownloadWithStageID:name:
moveItemAtURL:toURL:error:
stagePackageWithStageID:zone:recordName:package:xattrsPackage:error:
rememberStagedDownloadWithID:gatherFileID:generationID:error:
createURLForUploadWithStageID:name:
minimumPackageSizeForTwoPhase
brc_isCloudKitUnknownItemError
preparePackageForSecondStage:recordName:zone:fileObjectID:manifest:package:error:
hasContentSignature
_performTwoPhasePackageDownloadWithExistingContents:version:fileObjectID:completionHandler:
itemIdentifier
itemChanged:baseVersion:changedFields:newValues:contents:extension:error:
invalidatePipesForRegatheringNSMDQ
customPushTopics
initWithClientClass:extension:itemIdentifier:
serviceSourceForClass:itemIdentifier:
bundleProxyForIdentifier:
setWithObjects:
entitlementValuesForKeys:
documentsFolder
documentsFileObjectID
initWithSession:forSyncBubble:
brc_shouldRetryLater
write:
initWithFileDescriptor:closeOnDealloc:
isInSyncBubble
startInSyncBubble
startProvidingItemAtURL:readingOptions:completionHandler:
acknowledgeUserVisibleRootLocationDidChangeToURL:completionHandler:
_propertiesForItemAtURL:error:
_defaultApplicationContainerForBundleIdentifier:completionHandler:
_removeTrashedItemsOlderThanDate:completionHandler:
_dumpInternalStateToTermDumper:completionHandler:
_additionalDumpInfoWithCompletionHandler:
fetchThumbnailsForItemIdentifiers:requestedSize:perThumbnailCompletionHandlerWithType:completionHandler:
reparentItemWithIdentifier:toParentItemWithIdentifier:completionHandler:
fetchPublishingURLForItemIdentifier:completionHandler:
evictItemWithIdentifier:completionHandler:
disconnectWithOptions:completionHandler:
handleEventsForBackgroundURLSession:completionHandler:
attemptRecoveryFromError:optionIndex:completionHandler:
preflightTrashItemWithIdentifier:completionHandler:
preflightReparentItemWithIdentifier:toParentItemWithIdentifier:completionHandler:
materializedItemsDidChange
fetchTrashIdentifiersWithCompletionHandler:
_setupCacheDelete
initWithDomain:
fileProviderErrorFromFSError:
createItemBasedOnTemplate:fields:contents:options:completionHandler:
deleteItemWithIdentifier:baseVersion:options:completionHandler:
importDidFinishWithCompletionHandler:
itemForIdentifier:error:
enumeratorForContainerItemIdentifier:error:
enumeratorForSearchQuery:error:
fetchContentsForItemWithIdentifier:version:usingExistingContentsAtURL:existingVersion:completionHandler:
itemChanged:baseVersion:changedFields:contents:completionHandler:
materializedItemsDidChangeWithCompletionHandler:
supportedServiceSourcesForItemIdentifier:error:
uploadEverythingWithCompletion:
accountHandler
_accountHandler
_domainProviderManager
_isDataScopeDomain
_personaIdentifier
strongToStrongObjectsMapTable
unsignedIntegerValue
_moveDown:index:
_moveUp:index:
_moveUpOrDown:index:
_shrink
initWithComparator:
check
removeFirstObject
firstObjectWeightChanged
objectWeightChanged:
_array
_comparator
_mutation
_objects
_count
dataWithBytes:length:
initWithTag:
checksummingOutputStreamWithTag:
hasSpaceAvailable
open
streamStatus
write:maxLength:
_ctx
_sig
_isOpen
_accountChangeHandler
stringFromErrorString:context:
descriptionForCKAccountStatus:dumpContext:
numberWithInteger:
accountStatusWithCompletionHandler:
defaultCenter
_accountDidChange
addObserver:selector:name:object:
removeObserver:name:object:
initWithCKContainer:
_source
_ckContainer
_lastAccountStatus
_resumed
_loadAccounts
startAccountTokenChangeObserverIfNeeded
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
icd_isEnabledForCloudDocs
getOrCreateAccountHandlerForACAccountID:
createAndLoadSessionWithACAccountID:createBlock:
_garbageCollectOldDomains
removeDomain:completionHandler:
getDomainsWithCompletionHandler:
initWithIdentifier:displayName:pathRelativeToDocumentStorage:hidden:
accountWithIdentifier:
icd_personaIdentifier
_rebuildAllDomains
icd_hasPersonaIdentifier
_createDomainsForAccountHandler:hasEnterpriseAccount:
addDomain:completionHandler:
accountHandlerForACAccountID:
icd_accountForCurrentPersona
icd_accountForPersona:
removeDomain:options:completionHandler:
userDefaultsChanged
waitForInitialAccountLoadingWithCompletionHandler:
accountForCurrentPersona
accountForPersona:
createSessionWithACAccountID:dsid:error:
destroySessionWithACAccountID:personaIdentifier:
signalUserDefaultsRefresh
_accountStore
_accountHandlersByACAccountID
_finishedLoadingAccounts
userPersonaUniqueString
addReachabilityObserver:
removeReachabilityObserver:
networkReachabilityChanged:
networkReachabilityFlagsChanged:
startObservingNetworkReachabilityChanges
stopObservingNetworkReachabilityChanges
networkReachabilityDidChangeHandler
setNetworkReachabilityDidChangeHandler:
_networkReachabilityDidChangeHandler
stringFromThrottleState:context:
hasWorkGroup
closed
defaultScheduler
initWithScheduler:name:
setQueue:
setEventHandler:
signal
matchingJobsWhereSQLClause
onlyActiveStuff
nowFromContext:
stringFromDueStamp:allowsPast:context:
descriptionForJobsMatching:ordering:additionalColumns:additionalValuesHandler:context:
unsignedLongAtIndex:
describeInBuffer:aggregateOfJobsMatching:context:
computeStamps:forJobID:throttle:shouldBackoff:
columns
columnsValues
signalWithDeadline:
jobsDescription
nsecsToNextRetry:retryCount:now:
nsecsBeforeForgettingCounter
updateStamps:throttle:now:
setState:forJobsMatching:
dbMigrationBatchSize
setHasActiveWork:
setHasWork:
performFirstSchedulingAfterStartupInDB:
canScheduleMoreJobs
setHasWorkGroup:
_close
initWithSession:name:tableName:
canRetryJobWithID:
haveActiveJobsMatching:
jobStateFor:
descriptionForJobsMatching:context:
aggregateDescriptionForJobsMatching:context:
postponeJobID:withThrottle:
insertOrUpdateJobID:throttle:withState:insertedSQLColumn:insertedSQLValues:updatedSQLValues:
rescheduleSuspendedJobsMatching:inState:
setState:forJobID:
deleteJobsMatching:
resetBackoffForJobsMatching:
deleteExpiredJobs
scheduleWithBatchSize:whereSQLClause:columns:actionHandler:
hasActiveWork
hasWork
tableName
_schedulerSource
_schedulerQueue
_name
_firstSchedulingAfterStartupDone
_hasActiveWork
_hasWork
_isCancelled
_hasWorkGroup
_tableName
lastObject
done
logName
itemsEnumeratorChildOf:withDeadItems:rankMin:rankMax:count:db:
itemByItemGlobalID:db:
itemsEnumeratorWithRankMin:rankMax:namePrefix:withDeadItems:shouldIncludeFolders:shouldIncludeOnlyFolders:shouldIncludeDocumentsScope:shouldIncludeDataScope:shouldIncludeTrashScope:count:db:
notifsRank
rowNumber
removeLastObject
addNotification:asDead:
gatherWithBatchSize:completion:
_popGatherReply
addDequeueCallback:
initWithNotificationPipe:appLibraries:startingRank:maxRank:withDeadItems:gatherReply:
invalidate
gatheredChildrenItemGlobalID
setGatheredChildrenItemGlobalID:
_pipe
_gatherReply
_gatheringAppLibraries
_gatheringRankMin
_gatheringRankMax
_lastSentRank
_gatheringNamePrefix
_includesDeadItems
_gatheredChildrenItemGlobalID
_stopWatchingItems
_invalidate
watchedAncestorFilenameToItem
watchedAncestorFileObjectID
registerPipe:asWatcherForFileObjectID:
_initWithManager:startingRank:
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
asynchronousInvalidate
connection
volume
watchedAncestorItemGlobalID
icd_isEqualToStringForHFS:isCaseSensitive:
setWatchedAncestorFilenameToItem:
setWatchedAncestorFileObjectID:
_registerAsWatcherIfNeeded
setOldWatchedAncestorItemGlobalID:
setWatchedAncestorItemGlobalID:
oldWatchedAncestorItemGlobalID
icd_downloadStatus
diffs
_prepareForSecondGatherWithRank:
_addIntraContainerUpdatesFromInterContainerUpdate:toArray:
_isInterestingUpdate:
_gatherIfNeededAndFlushAsync
_flushProgressUpdates
receiveProgressUpdates:reply:
notifBatchSize
dictionaryWithCapacity:
processDequeueCallbacks
receiveUpdates:logicalExtensions:physicalExtensions:reply:
_fetchAndSetURLOnNotifications:completionHandler:
dequeue:block:
dataScopeDomainIdentifier
documentsScopeDomainIdentifier
providerIdentifier
fetchFSItemsForItemIdentifiers:providerIdentifier:domainIdentifier:materializingIfNeeded:completionHandler:
_fetchAndSetURLOnNotification:dataScopeItemsByID:documentScopeItemsByID:
stringByReplacingOccurrencesOfString:withString:
isDownloaded
isMostRecentVersionDownloaded
setIcd_downloadStatus:
setIsDownloadRequested:
setURL:
notifOverflowLimit
notifGatherUpTo
__flush
unregisterAppLibraries:forFlags:
unregisterPipeAsWatcher:
delegate
notificationPipe:finishedObservingAppLibrary:
endObservingChangesWithDelegate:
endObservingChanges
appLibraryByID:
notificationPipe:willObserveAppLibrary:
documentsItemIDWithAppLibraryRowID:
fetchRecursiveDirectoryContentsIfNecessary:isUserWaiting:rescheduleApply:
beginObservingChanges
notifyClient:whenInsertIsDone:
addRecursiveDirectoryListCompletionBlock:
registerAppLibraries:forFlags:
initWithArray:
fetchDirectoryContentsIfNecessary:isUserWaiting:rescheduleApplyScheduler:
beginObservingChangesWithDelegate:
addDirectoryListCompletionBlock:
_watchItem:options:gatherReply:
listOperation:wasReplacedByOperation:
synchronousInvalidate
initWithReceiver:client:manager:startingRank:
processUpdates:withRank:
watchScopes:trustedAppLibraryIDs:gatherReply:
watchItemWithFileObjectID:options:gatherReply:
isWatchingGlobalItemID:
setDelegate:
receiverIsNSMDQ
setReceiverIsNSMDQ:
_receiver
_receiverIsNSMDQ
_notifs
_boostReply
_client
_oldWatchedAncestorItemGlobalID
_watchedAncestorItemGlobalID
_watchedAncestorFileObjectID
_watchedAncestorFilenameToItem
_gatherer
_gatherGroup
_hasUpdatesInFlight
_volumeIsCaseSensitive
_pendingProgressUpdatesByID
_hasProgressUpdatesInFlight
_listOp
_watchItemOptions
_watchKind
_watchNamePrefix
_watchForBundleID
_externalAppLibraries
_watchedAppLibraries
_recursiveScopeListOps
_watchedAppLibraryIDs
_watchedAppLibrariesFlags
_initialGatherMaxRank
_secondaryGatherMaxRank
_manager
_delegate
watchScopes:appLibraryIDs:gatherReply:
entitledAppLibraryIDs
boostPriority:
watchItemAtURL:options:gatherReply:
watchItemsNamesPrefixedBy:inScopes:appLibraryIDs:gatherReply:
watchScopes:gatherReply:
initWithDocumentAtURL:
thumbnailImagesDictionary
serializedQuickLookMetadataDictionary
initWithDocument:
retrieveThumbnailCompletionBlock
setRetrieveThumbnailCompletionBlock:
_thumbnailsDictionary
_thumbnailMetadata
_fileObjectID
_providerManager
_retrieveThumbnailCompletionBlock
_removeSubscriber:
bundleForClass:
resourceURL
_displayDialogWithType:dict:options:userReplyBlock:
_logWrapUserReplyBlock:
_hideCurrentDialog
_updateDialogWithType:dict:userReplyBlock:
_localizationKey:forTypeOfShare:
brc_sharedRootDisplayName
hasSuffix:
substringToIndex:
brc_fixDocumentExtensionIfNeededForShareURL:
localizedStringFromPersonNameComponents:style:options:
ownerIdentity
isFolderShare
brc_applicationName
_localizationKeyForOS:
_localizationKey:forOSAndTypeOfShare:
publicPermission
_displayDialogWithType:dict:userReplyBlock:
fetchFullNameAndFormattedUsernameOfAccountWithCompletionHandler:
moveToFront
showJoinDialogForShareMetadata:session:reply:
showErrorSignInToiCloudForShareMetadata:reply:
showErrorTurnOniCloudDriveForShareMetadata:reply:
showErrorInstallNativeAppForShareMetadata:reply:
showErrorNativeAppDisabledByProfileForShareMetadata:reply:
showErrorReasonUnknownForShareMetadata:reply:
showErrorDeviceOfflineForShareMetadata:reply:
showErrorServerNotReachableForShareMetadata:reply:
showErrorItemUnavailableOrAccessRestrictedForShareMetadata:reply:
showErrorParticipantLimitReachedForShareMetadata:reply:
showErrorDocumentsAppNotVisibleForShareURL:reply:
_updateDialogWithType:dict:
_cfUserNotification
_displaySource
_nextDisplayBeginTime
_progressSubscriber
_dialogInfo
sqliteBind:index:
newFromSqliteStatement:atIndex:
initWithIntID:zoneRowID:
intID
initWithRank:zoneRowID:
rank
rejectedRowID
serverItemRank
_setState:andApplyKind:forJobID:
predictedAppLibrary
applyThrottle
initWithZoneRowID:itemID:
scheduleSyncUp
enumeratePrivateClientZones:
_rescheduleItemsParentedToItemGlobalID:flags:
rescheduleItemsRecursivelyUnderFolder:
writerApplyBatchSize
_scheduleApplyJobWithID:zone:applyKind:
_handleWaitingForInsert
fsWriter
serverItemByRank:
itemByRowID:
itemByItemID:
isRejected
applyChangesForServerItem:localItem:rank:zone:activity:forceCreate:hasFinished:
isSyncBlocked
applyCountToSignalFaultsLive
minusSet:
signalInsertWatchersWithError:
writerMaxConcurrentIOs
lastInsertedRank
_addRanksUpToRank:inZone:
changeState
lastSyncDownDate
didSyncDownRequestID:maxApplyRank:caughtUpWithServer:syncDownDate:
currentRequestID
didSyncDownZone:requestID:upToRank:caughtUpWithServer:
listedUpToRank:
descriptionForServerItem:context:
descriptionForRejectedItem:context:
setState:forServerItem:localItem:
setState:forRank:zoneRowID:
rescheduleItemRank:zoneRowID:matchingState:
setState:andApplyKind:forServerItem:localItem:
setState:andApplyKind:forRank:zoneRowID:
resetBackoffForServerItem:
createApplyJobFromServerItem:localItem:state:kind:
didCreateMissingParentID:zone:
didReparentOrKillItemID:parentItemID:zone:
didCompleteCrossZoneMigrationForAppLibrary:
_rescheduleRank:inState:forZone:
rescheduleAllItemsPendingGreediness
rescheduleAllItemsPendingMigration
rescheduleItemsParentedToItemGlobalID:
overrideApplyGreedinessOfItemID:rank:
repopulateJobsForZone:
monitorClientTruthInsertionForAppLibrary:
stopMonitoringClientTruthInsertionForAppLibrary:
_writeCoordinationCount
didOutOfBandSyncDownZone:upToRank:
didListDirectoryContentsInZone:upToRank:
_appLibrariesWaitingForInsert
_forceApplyGreedinessIDs
_applyCountReachedMax
evaluateWithObject:
throttleHashWithItemID:
_validateThrottleParams:
initWithName:andParameters:
matchesItem:nsecsToRetry:now:
predicate
setPredicate:
_predicate
initWithALRootRowID:
rootFileObjectID
initWithALDocumentsRowID:
isPrivate
appLibraryOrZoneName
updateWithPlist:
containerForMangledID:containerCache:rootFileObjectID:documentsFileObjectID:
_updateIsInCloudDocsZone
setIsInInitialState:
syncContextIfExists
foregroundClients
removeForegroundClient:
addForegroundClient:
addAppLibrary:
_activateState:origState:
hasOptimizeStorageEnabled
downloadItemWithIdentifier:downloadPolicy:completionHandler:
postContainerListUpdateNotification
hasActiveQueries
markForceNotify
fetchPristineness
fetchTrashItems
zoneDidChangeMovedToCloudDocsState
wasMovedToCloudDocs
didUpdateAppLibrary:
_t_flushIdleBlocksIfNeeded
recomputeAppSyncBlockStateForPrivateClientZone:
fetchRecentAndFavoriteDocuments
documentsDirectoryUpdatedDocumentsScopePublic
shouldAppLibraryBeGreedy
shouldEvictUploadedItems
greedinessPreference
maximumDocumentAgeToBeGreedy
timeIntervalSince1970
isEqualToMangledID:
isEqualToAppLibrary:
isForeground
hasActiveRecursiveQueries
containerMetadataNeedsSyncUp
containerMetadataEtag
shortDescription
_unwrappedDescriptionWithContext:
icd_stringByBackslashEscapingCharactersInString:
documentsFolderWithDB:
documentsFolderItemID
_forceNotifyDocumentsFolder
clearStateBits:
hasCompletedInitialSyncDownOnce
clientChildCountWithParentID:db:
serverChildCountWithParentID:db:
didCreateDocumentScopedItem
serverItemByParentID:andLogicalName:
_resolveTargetAppLibrariesAndSharedClientZones
_removeAllTargetAppLibrariesAndSharedServerZones
hasFetchedInitialApps
shouldSyncMangledID:
syncContextForMangledID:createIfNeeded:
didReceiveHandoffRequest
_targetSharedServerZonesEnumerator
_addTargetAppLibrary:
_addTargetSharedServerZone:
isStillTargetingSharedServerZone:
initAsDocumentsWithAppLibraryRowID:
_initAsLibraryRootWithAppLibraryRowID:
initWithZoneRootItemID:session:db:
documentsRowID
_initWithImportObject:error:
markNeedsUploadOrSyncingUp
isCloudDocsZone
setIsInCloudDocsZone:
didChangeSyncStatusForContainerMetadataForContainer:
setRootQuotaUsage:
registerQueryIsRecursive:
unregisterQueryIsRecursive:
supportsSpotlightIndexing
activate
didUpdateDocumentScopePublic
greedinessPreferenceWithMtime:
enumerateChildrenOfItemGlobalID:sortOrder:startingRowID:limit:db:
didRemoveDocumentsFolder
didCreateDataScopedItem
hasDocumentsOrDirectory
hasUbiquitousDocuments
hasLocalChanges
documentSizeUsageWithDB:
documentCountWithDB:
recomputeShouldEvictState
_addTargetSharedServerZoneForSharedItem:
_removeTargetSharedServerZoneForSharedServerZone:
containerMetadataFilledWithTCCInfo
shouldSaveContainerMetadataServerside
recreateDocumentsFolderIfNeeded
setContainerMetadataEtag:
setContainerMetadataNeedsSyncUp:
scheduleContainerMetadataSyncUp
tracker
setZoneRowID:
setDefaultClientZone:
rootQuotaUsage
_activeQueries
_activeRecursiveQueries
_pendingFileCoordinators
_mangledID
_defaultClientZone
_activated
_targetAppLibraries
_targetSharedServerZones
_foregroundClients
_pristineFetchOp
_trashFetchOp
_faultsLiveBarriers
_needsSave
_containerMetadataNeedsSyncUp
_tracker
_dbRowID
_zoneRowID
_appLibraryID
_containerMetadata
_containerMetadataEtag
_rootQuotaUsage
incrementRetry
initWithThrottleHash:
retryCount
latestRetry
throttleHash
_scheduled
_retryCount
_latestRetry
doubleValue
retryBackoff:
isBlocking
_initialRetryCount
_finalRetryCount
_maximumElementCount
_minimumNsecsBetweenRetries
_maximumNsecsBetweenRetries
_nsecsBeforeForgettingCounter
_cleanupStaleCounters:
throttleHashBytes:length:
reset
_retryCounters
_retryHeap
finishEnumeratingUpToPage:
initialSyncAnchor
isEqualToData:
workingSetBatchSize
didUpdateItems:
valueForKey:
didDeleteItemsWithIdentifiers:
finishEnumeratingChangesUpToSyncAnchor:moreComing:
enumerateChangesFromChangeToken:forDataScope:limit:completion:
enumerateItemsForObserver:startingAtPage:
enumerateChangesForObserver:fromSyncAnchor:
currentSyncAnchorWithCompletionHandler:
_extension
icd_fetchParentChain
directoryStructureRecordIDInZone:
brc_isZoneRootRecordID
brc_isAppLibraryRootRecordID
clientZoneByMangledID:
maxRecordCountInFetchRecordsOperation
records
existsByItemID:
setQueryFinishedClientTruthCallback:
serverItemByItemID:
insertParentChainForItem:
_fetchParentChain:
addFetchParentChainCompletionBlock:
parentIDToList
initWithParentID:zone:isUserWaiting:
_parentRecordID
_fetchParentChainCompletionBlocks
isEqualToDownloadJobIdentifier:
initWithDBRowID:etag:kind:
itemDBRowID
kind
_kind
_itemDBRowID
contextIdentifier
initWithSyncContext:kind:now:retryQueueKick:
nextDocumentItem
stageID
transferSize
transferQOS
_now
_retryQueueKick
initWithQueue:name:
initWithName:fairScheduler:
setCoalescingLeeway:
downloadSizeRefreshInterval
transferID
uuidAtIndex:
transferContextForServerZone:appLibrary:
downloadStream
progressForTransferID:operationID:
syncContextUsedForTransfers
downloadThrottle
forceSchedulingPendingInteractiveTransfers
setTrackChanges:
cleanupStagedDownloadWithID:forItemID:
requiresTwoPhase
learnStagedInfoFromDownloadStageID:error:
handleZoneLevelErrorIfNeeded:
brc_isCloudKitCancellationError
_bumpThrottleForDownload:throttle:
brc_isCloudKitAssetFileModified
progress
downloadWillRetryProgressMaxCount
setProgressPublished:
brc_strippedError
handleUnknownItemError
cancelAndCleanupDownload:
serverRankByItemID:
record
_sanitizeRecord:
diskSpaceRequiredToReturnToGreedyState
stringFromByteCount:showActualByteCount:suffix:context:
cancelTransferID:operationID:
itemGlobalIDByRowID:
_cancelJobs:state:
transferSizeForDownloadingItem:
_hasLosersToDelete:serverItem:
_createDownloadingJobForItem:state:kind:etag:userInitiated:
shouldScheduleLosersEvictionForItem:
removeAllAdditionsForNamespaces:completionHandler:
setLiveConflictLoserEtags:
cancelAndCleanupItemDownload:kind:
latestVersion
isSubsetOfSet:
resolvedConflictLoserEtags
intersectsSet:
cancelAndCleanupItemDownload:kind:etag:
rescheduleJobsPendingWinnerForItem:
setWithSet:
enumeratorForAdditionsInNameSpace:withOptions:withoutOptions:ordering:
brc_parseMangledID:itemID:etag:session:
_br_markResolvedWithError:
_scheduleLosersDownloadForItem:missingLosers:
sharedZone
transferContextForSharedServerZone:
enumerateSharedClientZones:
transferContextForAppLibrary:
readerScanBatchSize
allSyncContexts
inFlightSize
defaults
minimumDiskSpaceRequiredToDownload
minimumDiskSpaceRequiredToDownloadUserInitiated
itemsCount
handleWaitForShareAcceptIfNecessaryForItem:jobID:
availableDiskSpace
diskReclaimer
requestPurgeSpace
initWithSyncContext:
_finishedDownload:syncContext:operationID:error:
setPerDownloadCompletionBlock:
initWithDocument:stageID:
setProgress:
addDownload:
_willDownload:operationID:
triggerNotificationIfNeeded
icd_downloadOpportunistic
addBatchOperation:
_postponeLoserForWinner:etag:
initWithSyncContext:forNonLocalVersion:
addIndex:
initWithDocument:desiredEtag:stageID:isLoser:
icd_downloadConflictingVersions
unsignedIntegerAtIndex:
_sendContentsBatch:sizeHint:maxRecordsCount:
_sendLosersBatch:sizeHint:maxRecordsCount:
_transferStreamOfSyncContext:didBecomeReadyWithMaxRecordsCount:sizeHint:priority:
deleteDownloadingJobForItem:
descriptionForItem:context:
_appLibraryForDownload:kind:operationID:
rescheduleJobsForPendingDiskSpaceWithAvailableSpace:
rescheduleJobsPendingFavoritesFetchInZone:
cancelAndCleanupItemDownloads:
updateContentDownloadForMetaOnlyChange:fromEtag:toEtag:
sizeOfActiveDownloads
isDownloadingItem:
isDownloadScheduledForItem:
downloadErrorForItem:
hasAdditionsToApplyForItem:serverItem:
scheduleContentDownloadForItem:userInitiated:
evictLosersOnItem:atURL:applySchedulerState:
transferStreamOfSyncContext:didBecomeReadyWithMaxRecordsCount:sizeHint:priority:completionBlock:
downloadsDeadlineScheduler
_fairScheduler
_activeDownloadsSize
_lastDownloadRefresh
_activeDownloadSizeRefreshInterval
_willRetryOperationProgress
_downloadsDeadlineScheduler
compare:
stringFromItemAsString:context:
stringFromCount:showActualCount:suffix:isByteCount:context:
initWithFd:forceColor:
initWithFormat:arguments:
componentsSeparatedByString:
startStringForFgColor:bgColor:attr:
stringForReset
stringFromCount:context:
initWithDumper:
indentationBaseString
setIndentationBaseString:
dumpTrackedPendingDownloads
_indentation
_dumper
_nowDate
_liveDaemon
_onlyActiveStuff
_dumpTrackedPendingDownloads
_indentationBaseString
_taskTracker
stringWithCapacity:
initAsShareAcceptFaultWithName:isDirectory:
initForPackage:
setAppLibrary:
markDead
_updateInDB:diffs:
deleteShareAcceptationFault
markNeedsTransformIntoNormalFault
initWithFilename:itemID:parentID:appLibrary:clientZone:sharingOptions:
asShareAcceptationFault
resetQueue
scheduleReset:completionHandler:
clearSyncStateBits:
_cancelAllOperationsForReset
waitUntilFinished
sharedAppLibraryResetThrottle
appLibraryResetThrottle
_reset:completionHandler:
_finishedReset:completionHandler:
_performResetAndWantsUnlink:clientTruthBlock:completionBlock:
_performAfterResetServerAndClientTruthsAndUnlinkData:
_performAfterResetServerAndClientTruthsAndUnlinkDataAndPurgeTheZone:
resetServerTruth
removeDatabaseObjectsForZone:
syncUpScheduler
supportsKeepingClientItemsDuringReset
insertTombstonesForSharedClientZone:
clearProblemReport
_performAfterResetServerAndClientSharedTruthsAndUnlinkData:
_performAfterResetServerAndClientPrivateTruthsAndUnlinkData:
deleteAllContentsOnServerWithCompletionBlock:
syncContextForMangledID:
uploadStream
operations
_removeAllShareAcceptanceBlocks
hasItems
destroySharedClientZone:
dropIndexForPrivateClientZone:
syncState
willInitialSyncDownForClientZone:
scheduleResetServerAndClientTruthsForReason:
fpfsMigrationState
enumerateObjectsOfClass:
cancelReset
scheduleReset:
forceMoveToCloudDocs
scheduleMoveToCloudDocs
shouldAutoMigrateToCloudDocs
serverZoneIsCreated
scheduleZoneMovesToCloudDocs:
fileURLWithPathComponents:
writeToURL:atomically:
setResourceValues:error:
stringByAppendingPathExtension:
processingStamp
setFilename:
icd_getTagNames:error:
_finderTagsFromImportObject:
modeFromImportObject:isPackageFault:
isPathExtensionHidden
isUserWritable
isUserExecutable
updateFromImportObject:onlyContentDependentProperties:
brc_representableHFSFileNameWithSuffix:addedExtension:
setFilename:serverName:
parentItemIDOnFS
logicalNameWithoutLocalBounce
bumpLocalChangeCount
updateWithFlags:ignoreExecutable:
initWithImportObject:error:
_setParentID:
_setCKInfo:
_markClearedFromStage
_moveItemAsideWithUUIDString
_bounceWithLogicalName:
diffAgainstLocalInfo:
_markDead
_markStagedWithFileID:generationID:
_updateStatMetaFromServer:
_updateStatAliasMeta:
stagedGenerationID
setProcessingStamp:
rawBouncedLogicalName
localChangeCount
oldVersionIdentifier
_processingStamp
_bouncedLogicalName
_stagedGenerationID
_stagedFileID
_localChangeCount
_oldVersionIdentifier
isKnownByServerOrInFlight
isMigratingToFPFS
checkIsInDocumentsScopeWithParent:
globalID:isStrictChildOfGlobalID:
initWithRowID:isDocument:
maxSyncPathDepth
parentItemOnFS
_refreshAppLibraryFromParent
isItemInSyncUpAndInFlight:
itemIDWithSQL:
null
isSharedToMeChildItem
isOwnedByMe
loadXattrBlobForSignature:error:
computeItemScopeFromParentIsRoot:parentIsDocuments:parentScope:logicalName:
sideCarInfo
parentZoneOnFS
_recomputeUserVisibleAndItemScope
decodeIntegerForKey:
encodeInteger:forKey:
_initWithLocalItem:
_initFromPQLResultSet:session:db:error:
setCkInfo:
_initAsZoneRootWithZoneRowID:
itemTypeByItemID:db:
isLive
createSyncUpJobForItem:inZone:
maskForDiffsToSyncUpForZone:sideCarZone:whenClearing:
unsaltedBookmarkDataWithItemResolutionString:serverZone:
createSyncUpJob
needsInsert
deleteSyncUpJobsForItem:
_syncZoneRowIDs
isItemInSyncUpAndInFlight:inZone:
finishSyncUpForItem:inZone:success:
asSharedToMeTopLevelItem
_updateAppLibraryPristineStatesAfterMarkingDead
_updateAppLibraryPristineStatesAfterCreationOrUpdate
_updateSyncUpSchedulerWithDiffs:
_updateSharedZoneBoostingWithDiffs:
wasMarkedDead
deleteUploadingJobForItem:
needsOSUpgradeToSyncUp
_isInterestingUpdateForNotifs
insertObject:atIndex:
pathWithComponents:
_ascendItemHierarchyWithBlock:
_setOfParentIDs
queueUpdate:
_sendNotificationIfNeededWithDiffs:regather:
osNameRequiredToSync
osNameNeededToSyncUp
inFlightDiffsForItem:
localDiffs
_isIndexable
fileObjectID:isNoLongerIndexableForNotifRank:itemIsLive:
hasShareIDAndIsOwnedByMe
_isInterestingUpdateForNotifsWithDiffs:
metadataSyncUpMask
_deleteFromDB:
allocateItemRowID
sideCarSyncPersistedState
icd_syncDownInitial
scheduleSyncDownForSideCarWithGroup:
_insertInDB:dbRowID:
_hasFieldChangesNotDiffed
_updateCoreSpotlightAfterSave
serverAliasItemForSharedItem:db:
diffAgainstLocalItem:
learnItemID:ownerKey:sharingOptions:
markItemForgottenByServer
itemByParentID:andLogicalName:
updateWithLogicalName:newParent:
_updateToBeExcludedWithParent:
_markNeedsSyncingUp
diffAgainstServerItem:
scheduleSyncUpForSideCar
markForceNeedsSyncUp
updateFromServerItem:
allowRejectedReUpload
needsSyncUp
isReadAndUploaded
prepareItemForSyncUp:inFlightDiffs:inZone:
isItemPendingSyncUp:
scheduleSyncDownFirst
_updateParent:
loadXattrsFromDictionary:structuralBlob:contentBlob:
saveXattrBlob:forSignature:error:
clearFromStage
isDeadOrMissingInServerTruth
icd_stringByDeletingPathBounceNo:andPathExtension:
icd_representableHFSFileNameWithNumber:addedExtension:
findCollidingItemWithParentZone:parentItemID:filename:excludingItemID:
moveFromStageToGraveyard:forItemID:
_updatePropagatedInfoIfNeeded
brc_errorItemNotFound:
characterAtIndex:
extension
validateLoggingToFile:
setSharingOptions:
asFSRoot
isFromInitialScan
markDoneMigratingToFPFS
markFromInitialScan
isInDocumentOrTrashScope
serverPathMatchItemID
isSharedToMe
isSharedByMe
logicalNameNeedsRename
inheritOSUpgradeNeededFromItem:
markNeedsOSUpgradeToSyncUpWithName:
initFromPQLResultSet:error:
initFromPQLResultSet:session:db:error:
parentItemIDInZone
unsaltedBookmarkData
computeItemPathRelativeToRoot
markForceRejected
scheduleSyncDownForOOBModifyRecordsAck
prepareForSyncUpSideCarZone
prepareForSyncUpInZone:
markLatestSyncRequestFailedInZone:
markLatestSyncRequestRejectedInZone:
markLatestSyncRequestAcknowledgedInZone:
resetWhileKeepingClientItems
updateWithFavoriteRank:
updateWithFinderTagNames:
updateWithLastUsedDate:
updateToBeInTrashWithParent:trashPutBackPath:
updateToBeUntrashedWithParent:
updateWithImportObject:onlyContentDependentProperties:error:
updateWithCreationDate:
updateWithContentModificationDate:
updateWithFlags:
updateWithXattrs:
markNeedsDeleteWhenAlreadyDeadInServerTruth
moveAsideLocally
markBouncedToNextAvailableBounceNumber
markChildPropagationComplete
markStagedWithFileID:generationID:
computedDestinationFilenameFromServerItem:
markMetadataLive
beginBounceAndSaveToDBWithBounceNumber:
needsUpload
startDownloadInTask:options:error:
_clientZone
_parentZoneRowID
_ownerKey
_syncUpState
_orig
_localDiffs
_minimumSupportedOSRowID
_notifsRank
_sideCarCKInfo
_knownByServer
_serverPathMatchID
_resolvedPath
_forceDelete
_forceDeletedAlready
_forceNotif
value
initWithFD:sizeLimit:syncable:error:
xattrNamesCount
xattrNamesBegin
structuralXattrNamesCount
structuralXattrNamesBegin
contentXattrNamesCount
contentXattrNamesBegin
setValue:
cStringUsingEncoding:
writeData:forTag:
applyToFileDescriptor:error:
loadXattrsFromFD:withMaximumSize:error:
loadXattrsFromFD:structuralBlob:contentBlob:localBlob:withMaximumSize:error:
removeXattrsOnFD:includingContentRelated:error:
initWithBytes:length:encoding:
fairClientDBScheduler
syncUpThrottle
minWait
updateForTime:
availableBudgetWithDefaults:
syncUpMinimalBudget
nextDateWithBudgetWithDefaults:
setComputeNextAdmissibleDateForScheduling:
_newSyncDeadlineSourceWithName:
_syncScheduleForContainersMetadata
_syncScheduleForSharedDatabase
_syncScheduleForZoneHealth
_scheduleCrossZoneMovePCSPrep
_syncScheduleForSideCar
initWithName:scheduler:
_updatePushTopicsRegistration
needsContainerMetadataSyncDown
needsSharedDBSyncDown
zoneHealthNeedsSyncUp
needsSyncDown
needsSync
forcedSyncXPCActivity
icd_syncDownPeriodic
schedulePeriodicSyncIfNecessaryInGroup:
syncDeadlineSource
_unscheduleClientZone:
setDesiredPushTypes:
_scheduleUpdatePushTopicsRegistration
periodicSyncTimeInterval
serverChangeToken
initWithContainerScheduler:metadataChangeToken:zoneHealthChangeToken:sideCarChangeToken:
scheduleSyncDownForSharedDatabaseImmediately:
setNeedsContainerMetadataSyncDown:
setCkGroup:
sharedDbSyncDownCoalesceNanoseconds
setNeedsSharedDBSyncDown:
setNeedsSyncDown:
setNeedsSync:
setNeedsPCSMigration:
icd_syncDownAppLibraryMetadata
initWithSession:state:
icd_syncUpAppLibraryMetadata
ckGroup
syncClientZoneThrottle
syncClientZoneErrorThrottle
brc_containerResetErrorForSharedZone:resetReason:
setServerChangeToken:
shouldPerformAnotherBatch
shouldFetchAnotherBatch
sharedDatabaseChangeState
icd_syncUpAndDownShareDB
icd_syncDownZoneHealth
icd_syncUpZoneHealth
icd_syncDown
icd_syncUp
sideCarZoneWasReset
isNetworkReachable
isPowerOK
uppercaseString
debugDescriptionWithDefaults:
isDefaultOwnerOutOfQuota
PCSMigrationComplete
fetchAccountWaitOperationWithAccountReady:
updateWithServerChangeToken:requestID:
syncedDownZoneHealthRequestID:
shouldPerformPCSMigration
icd_zoneConsolidation
contextIdentifierForMangledID:
initWithQueue:
setWithObject:
token
dictionaryPayload
icd_syncDownPushTriggered
scheduleSyncDownForContainerMetadataWithGroup:
scheduleSyncDownForZoneHealthWithGroup:
appLibraryByMangledID:
scheduleSyncDownWithGroup:
isShared
pushRegistry:didUpdatePushCredentials:forType:
pushRegistry:didReceiveIncomingPushWithPayload:forType:
pushRegistry:didReceiveIncomingPushWithPayload:forType:withCompletionHandler:
pushRegistry:didInvalidatePushTokenForType:
didChangeSyncStatusForZoneHealthForContainer:
didInitialSyncDownForClientZone:
initWithAccountSession:pushQueue:
closeContainers
setup
redoZonePCSPreperation
receivedUpdatedSideCarServerChangeToken:requestID:
refreshPushRegistrationAfterAppsListChanged
notifyAfterNextZoneHealthSyncDown:
initialSyncDownGroup
syncGroup
syncUpBudget
syncScheduler
zoneHealthSyncPersistedState
_containerMetadataSyncSource
_sharedDatabaseSyncSource
_zoneHealthSyncSource
_sideCarSyncSource
_pushSource
_pushRegistry
_containerMetadataPersistedState
_containerMetadataSyncState
_containerMetadataSyncOperation
_sharedDBSyncState
_sharedDatabaseSyncOperation
_zoneHealthPersistedState
_zoneHealthSyncState
_zoneHealthSyncOperation
_sideCarSyncPersistedState
_sideCarSyncState
_sideCarSyncOperation
_periodicSyncOperation
_lastPeriodicSyncDate
_migrateZonePCSOperation
_migrateZonePCSSource
_nextZoneHealthSyncDownBarriers
_customPushTopics
_initialSyncDownGroup
_syncGroup
_syncUpBudget
_syncScheduler
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
desiredBackupDataDirectoryForUserURL:
destinationDirectory
initWithRelativePath:fileID:docID:genCount:isDirectory:
enumerateRootURL:usingBlock:error:
enumerateURL:rootURL:usingBlock:error:
initWithUserURL:outputUserURL:
backUpWithCompletionBlock:
cleanOnDisk
userURL
setUserURL:
outputUserURL
setOutputUserURL:
setDestinationDirectory:
_userURL
_outputUserURL
_destinationDirectory
initWithDocumentItem:
setRecordID:
brc_fakeRecordWithErrorMarkerFor20716676
_clearSignatures:isPackage:
updateWithImportObject:onlyContentDependentProperties:
archivedDataWithRootObject:requiringSecureCoding:error:
isPackageObj
sizeObj
diffAgainstLocalVersion:
initWithImportObject:
updateWithPackageSize:
updateServerFieldsFromVersion:
initWithServerVersion:
shouldRecreateUploadJobGivenDiffs:
isMissingUploadsWithDiffs:
uploadedAssets
setUploadedAssets:
setUploadError:
setOldVersionIdentifier:
_uploadedAssets
_uploadError
initWithAliasUUID:
nonEvictableExtensions
nonAutoEvictableExtensions
autoEvictableUTIs
nonAutoEvictableUTIs
isDocumentAutomaticallyEvictableWithExtension:
isDocumentAutomaticallyEvictableWithName:
minAutomaticallyEvictableFilesize
isCloudSyncTCCDisabled
isVisibleIniCloudDrive
maximumDocumentSizeToBeGreedy
blacklistedThumbnailExtensions
shouldHaveThumbnail
_updatePackageItemsIfNecessaryWithImportObject:error:
removeLiveConflictLoserEtag:
addResolvedConflictLoserEtag:
unlinkFileObjectID:
markForceUpload
fp_isFileProviderError:
ingestFromCacheItemWithIdentifier:requestedFields:completionHandler:
reImportFromFileProvider
clearVersionSignatures:isPackage:
uploadReceiptExpiration
initWithURL:inPackage:forItem:error:
saveToDBWithSession:
cancelAndCleanupItemUpload:
setState:forItem:
uploadItem:
brc_isCloudKitOutOfQuota
conflictLoserState
_updateRecursivePropertiesInDB:diffs:
_updateUploadJobIfNeededWithDiffs:
_needsUploadRecomputeForError:origError:
recomputeAllItemsDidUploadState
aliasItemID
isAutomaticallyEvictable
iCloudDriveIsResponsibleForAutoEviction
shouldBeGreedy
shouldTransferThumbnail
forceiWorkConflictEtag:
forceVersionConflictByClearkingCKInfo
forceiWorkSharingInfoResend
appDidResolveConflictLoserWithEtag:
markUploadedWithRecord:
markOverQuotaWithError:
contentRecordNeedsForceAllFieldsWhenDeadInServerTruth:
unsafe_setVersionForNotification:
_updateLiveConflictLoserFromFS:
_currentVersion
_liveConflictLoserEtags
_resolvedConflictLoserEtags
_fileIDForUpload
_generationIDForUpload
brc_containerMetadataPropertiesData
brc_containerMetadataIconPaths
updateMetadataWithRecordData:iconPaths:
recordChangeTag
_updateContainerMetadataFromRecord:stripIcons:
brc_containerMetadataZoneID
initWithSession:zoneID:
setOptimisticSubscribe:
setCreateZoneAndSubscribeCompletionBlock:
defaultsForMetadataContainer
arrayByAddingObject:
modifiedByDevice
validateContainerID:
getOrCreateAppLibraryAndPrivateZonesIfNecessary:appLibraryExists:
propertyListWithData:options:format:error:
isDocumentScopePublicWithProperties:mangledID:
brc_containerMetadataIconNames
hasIconWithName:
brc_cloudKitErrorForZone:
setLastSyncDate:
arrayWithObjects:
recomputeAppSyncBlockState
_completedWithServerChangeToken:
performAfterFetchingAssetContents:
performAfterFetchingRecordChanges:
performAfterCreatingZoneIfNeeded:
_recordIDsForDesiredAssets
_desiredKeysForDesiredAssets
_recordIDsToVersionETagsForDesiredAssets
_containerIDsUpdated
_shouldFetchAnotherBatch
progressPublished
secondaryRecordID
doneSize
setDoneSize:
setRecord:
secondaryRecord
setSecondaryRecord:
initWithDocument:stageID:transferSize:
throttleID
_throttleID
_totalSize
_stageID
_progressPublished
_record
_doneSize
_progress
uploadsDeadlineScheduler
addTransfer:
perUploadCompletionBlock
_uploadRecordsByID:
createCloudKitZoneWithGroup:completion:
initWithRecordsToSave:recordIDsToDelete:
setShouldOnlySaveAssetContent:
setSavePolicy:
setAtomic:
setProgress:forRecordID:
shouldRecreateServerZoneAfterError:
finishedTransferForRecord:recordID:error:
setModifyRecordsCompletionBlock:
setPerUploadCompletionBlock:
initWithSyncContext:clientZone:
addItem:stageID:record:transferSize:
sendTransferCompletionCallBack:error:
mainWithTransfers:
actionPrettyName
_perUploadCompletionBlock
initWithPendingChangesStream:serverTruthCallback:clientTruthCallback:
pendingChangesStream
serverTruthCallback
clientTruthCallback
_pendingChangesStream
_serverTruthCallback
_clientTruthCallback
syncContextForMangledID:metadata:
clientRequestID
lastSyncDownStatus
setLastSyncDownDate:
setLastSyncDownStatus:
setChangeToken:
setClientRequestID:
localizedDescription
isSharedZoneRoot
sideCarRecordNameWithZone:
deserializeFolderSharingOptions:
modificationDate
numberWithDouble:
parent
hasChainPCS
icd_nameIsRepresentableOnHFS
deserializeFilename:basename:bounceno:extension:userInfo:error:
currentUserRecordName
brc_lastModifiedUserRecordNameWithCurrentUserRecordName:personNameComponents:
icd_emptyFilenameAlternativeName
_saveItemID:stat:serverMetrics:record:origName:base:no:ext:
brc_itemIDWithSession:error:
deserializeStatInfo:serverMetrics:itemID:session:error:
_saveItemID:stat:serverMetrics:record:error:
deserializeVersion:fakeStatInfo:clientZone:error:
deserializeiWorkSharingOptions:error:
creatorUserRecordID
rangeOfString:
brc_isForcedPackageExtension
brc_addForcedPackageExtension:
_saveItemID:version:record:iWorkSharingOptions:
deserializeSymlinkTarget:error:
deserializeAliasInfo:serverZone:error:
brc_shareItemID
currentUserParticipant
role
deserializeSharingOptions:error:
reportProblemWithType:recordName:
_saveEditedDirOrDocStructureRecord:error:
_saveEditedAliasRecord:zonesNeedingAllocRanks:error:
_saveEditedSymlinkRecord:error:
_saveEditedFinderBookmarkRecord:error:
_saveEditedDocumentContentRecord:error:
_saveEditedShareRecord:forceHasShareID:error:
_saveEditedRecord:zonesNeedingAllocRanks:forceHasShareID:error:
_reportCantSaveProblem:record:
enumerateRecordsOfType:block:
_markItemDeadForRecordID:
_markShareIDDead:
minLastUsedTime
setMinLastUsedTime:
recomputeMinLastUsedTime
nextRank
charAtIndex:
_structurePrefixForType:
fetchParentChainIfNecessaryWithParentItemID:isUserWaiting:
setNextRank:
isSqliteErrorCode:
privateServerZoneByID:
_savePendingChangesEditedStructureRecordsIgnoringRecordIDs:zonesNeedingAllocRanks:pendingChangeStream:
_savePendingChangesEditedContentRecordsIgnoringRecordIDs:zonesNeedingAllocRanks:pendingChangeStream:
_savePendingChangesSharesIgnoringRecordIDs:zonesNeedingAllocRanks:pendingChangeStream:
directoryItemIDsCreatedLastSyncUp
_savePendingChangesDeletedRecordIDsIgnoringRecordIDs:pendingChangeStream:
_saveEditedStructureRecords:zonesNeedingAllocRanks:
_saveDeletedRecordIDs:
_saveEditedContentRecords:zonesNeedingAllocRanks:
_saveEditedShareRecords:deletedShareRecordIDs:zonesNeedingAllocRanks:
destroyDatabase
allocateRanksWhenCaughtUp:
checkIfFinishedFullSync
performWithFlags:action:whenFlushed:
activated
_collectTombstoneForRank:
enumerateIndexesUsingBlock:
didGCTombstoneRanks:
forgetChangeTokens
forgetClientRequestID
resetServerTruthAndDestroyZone:
_crossZoneMoveDocumentsToZone:
performBlock:whileRemovingPrivateClientZone:
newServerItemFromPQLResultSet:error:
statInfoForItemID:db:
validateStructureLoggingToFile:db:
validateItemsLoggingToFile:db:
asPrivateZone
metadataSyncContextIfExists
activateWithClientZone:offline:
deactivateFromClientZone
handleBrokenStructure
handleMovedZoneNames:
didSyncDownRequestID:serverChangeToken:editedRecords:deletedRecordIDs:deletedShareRecordIDs:zonesWhichAllocedRanks:caughtUp:pendingChanges:
didListDirectoryChangesWithResults:pendingFetchChanges:
failedListingDirectoryChanges:serverTruthCallback:clientTruthCallback:folderItemID:
failedListItemIDs
collectTombstoneRanks:
deleteAllContentsOperation
saveQueryRecords:zonesNeedingAllocRanks:error:
statInfoForItemID:
itemsEnumeratorWithDB:
directDirectoryChildItemIDsOfParentEnumerator:
_zoneName
_metadataSyncContext
_failedListDirectoryOperations
_directoriesCreatedLastSyncUp
_directoryRecordNameWithSession:
directoryReferenceInZone:action:
contentsRecordIDInZoneID:
documentStructureRecordIDInZoneID:
pcsChainDocumentStructureReferenceInZoneID:
sideCarRecordIDWithZone:
structureRecordID
baseStructureRecord
serializeStatInfo:diffs:stageID:deadInServerTruth:shouldPCSChainStatus:
sideCarRecordID
pluginFields
setPluginFields:
structureRecordBeingDeadInServerTruth:stageID:shouldPCSChainStatus:
baseSideCarRecord
sqliteRepresentation
initWithSqliteRepresentation:
brc_isAppLibraryDocumentsRecordID
initWithString:libraryRowID:sharedZoneRowID:
_itemIDWithLibraryRowID:session:
pathComponents
sharedServerZoneRowIDsByOwnerNamePrefix:
brc_appLibraryRootZoneName
brc_appLibraryDocumentsZoneName
brc_itemIDOfTargetWithLibraryRowID:session:
brc_itemType
locateSideCarServerZone:withSession:
unarchivedObjectOfClass:fromData:error:
encryptedValuesByKey
_deserializeValue:forKey:encrypted:expectClass:allowNil:errorDescription:
getOrReserveLibraryRowIDForLibrary:
_deserializeRootSharingOptions:
creationDate
sharedClientZoneByMangledID:
brc_currentUserOwnsLastEditorDeviceWithSession:
brc_lastEditorDeviceName
permission
object:
aliasTargetClientZone
setCKInfoFieldsInRecord:
serializeFilename:forCreation:setExtension:
serializeFilename:forCreation:
pcsChainStateForItem:
setWantsChainPCS:
urlForXattrSignature:
initWithFileURL:
setShare:
_createAppLibraryIfNecessary:session:
deserializeSideCarInfo:error:
locateSideCarServerZone:shareAliasRecordName:withSession:
serializeVersion:diffs:deadInServerTruth:
serializeSideCarInfo:diffs:deadInServerTruth:
processAppLibraryDataWithMovedZoneNames:serverZone:isDeltaSync:
brc_isInterestingRecordForSyncDown
containerID
brc_sharedRootExtension
iWorkShareableExtensions
baseToken
JSONObjectWithData:options:error:
setFamilyName:
setGivenName:
lastModifiedUserRecordID
numberWithLong:
numberWithUnsignedShort:
setBaseToken:
setRoutingKey:
setMutableEncryptedPublicSharingKeyData:
brc_oplockMergeEtag
brc_updateDroppedReason
brc_safeToGetURL
sanitizeShortTokenFields
rootDirectoryRecordForZoneID:
rootAppLibraryRecordForAppLibraryID:zoneID:
copyDataRepresentation
iconURLs
brc_containerMetadataRecordWithContainer:
_brc_isOwner
initWithRecordType:
brc_isfakeRecordWithErrorMarkerFor20716676
brc_stringByDeletingPathExtension
fragment
brc_mangledNameFromURLFragment:
brc_sharedLinkDisplayName
brc_updateWithLogicalName:isFolder:
rootRecordType
base64EncodedStringWithOptions:
isSyncBlockedOrBrokenStructure
clearSyncUpError
initWithClientZone:
batchSize
associateSyncUpStageID:withOperation:
optimisticallyPCSChain
setOp:
setDefaults:
nextObject
addItem:
itemNeedingPCSChaining
shareRecordIDsNeedingDelete
retryAfter
nextSyncUpRequestID
destroyiWorkShares
initWithZone:
prepareWithMaxCost:retryAfter:
initWithRootItem:appLibrary:
setShouldFillBatch:
addPreFlushDirectoryListCompletionBlock:
setPcsChainCompletionBlock:
_performPCSChainOperationIfNecessaryWithCompletion:
setRecordsToSave:
setRecordIDsToDelete:
setRecordIDsToDeleteToEtags:
setPluginFieldsForRecordDeletesByID:
setConflictLosersToResolveByRecordID:
setupOperationForTestsIfNeeded:recordsToSave:
setClientChangeTokenData:
skipPerItemSyncUpThrottling
brc_isBatchRequestFailed
brc_isCloudKitErrorRequiringAssetReupload
brc_isCloudKitErrorUnsupportedOSForItemAndGetMinimumSupported:
brc_isCloudKitErrorChainedToNewParent:
brc_isIndividualItemBlacklistError
setState:forItem:zone:
brc_containsCloudKitErrorCode:
ownerDidReceiveOutOfQuotaError:
brc_checkErrorsFromCloudKit:
setPublicPermission:
removeParticipant:
_performModifyRecordsOrPCSChainOperationWithCompletion:
performShareUpdate:
_scheduleShareUpdateAndModifyRecordsAndZoneCreationOperation
_performShareUpdateAndModifyRecordsWithCompletion:
mutableEncryptedPublicSharingKeyData
initShareIDWithRecordID:serverZone:
publicSharingIdentity
routingKey
_recordIsIWorkShareable:
_setSharingFieldsOnContentRecord:withProtectionData:baseToken:routingKey:forceOverwrite:
getNewWebSharingIdentityDataWithCompletionHandler:
_performUpdateSharingProtectionDataIfNecessary:
syncUpOperationForZone:maxCost:retryAfter:
recordsToSave
createdAppLibraryNames
deletedRecordIDs
setDeletedRecordIDs:
iworkUnsharedShareIDs
setIworkUnsharedShareIDs:
renamedShareIDsToNames
setRenamedShareIDsToNames:
recordsNeedingNewSharingProtectionInfo
setRecordsNeedingNewSharingProtectionInfo:
recordsNeedingUpdatedSharingProtectionInfo
setRecordsNeedingUpdatedSharingProtectionInfo:
recordIDsToDeleteToEtags
pluginFieldsForRecordDeletesByID
setItemNeedingPCSChaining:
conflictLosersToResolveByRecordID
setStageID:
syncUpCompletionBlock
setSyncUpCompletionBlock:
cost
setServerZone:
_requestID
_cost
_recordsToSave
_createdAppLibraryNames
_deletedRecordIDs
_iworkUnsharedShareIDs
_renamedShareIDsToNames
_recordsNeedingNewSharingProtectionInfo
_recordsNeedingUpdatedSharingProtectionInfo
_recordIDsToDeleteToEtags
_pluginFieldsForRecordDeletesByID
_itemNeedingPCSChaining
_conflictLosersToResolveByRecordID
_syncUpCompletionBlock
aliasTargetItemID
postponeSyncUpForItem:inZone:
openWithError:
forceDeltaInitialSync
_stepNameAtIndex:withPrefix:
_activateSharedZoneIfNeeded
_openShareURLInWebBrowser:withReason:
_isLinkInsideFolderShare
_isOwner
_runningShareIDs
userNotificationClass
_isFolderShare
_isFolderSharingSupported
_isUserSignedInToiCloudDrive
_showSharingJoinDialog
_parseShareMetadata
_startShareAccept
_locateSharedItemOnOwner
_waitForSharedItemToSyncDownOnOwner
_waitForSharedItemToBeOnDiskOnOwner
_createSideFaultOnDisk
_waitForSharedItemToBeOnDiskOnRecipient
_openSharedSideFaultFile
_finishShareAccept
_locateSharedItemOnRecipient
_waitForSharedItemToSyncDownOnRecipient
_openSharedItemIfStillNeeded
_endAcceptationFlow
_isiWorkShare
_isAppInstalled
_isAccountRestricted
_openiWorkAppPreemptively
_performNextStep
methodForSelector:
_performNextStepInQueue
indexOfObject:
_jumpToSelectorInQueue:
participantRole
participantStatus
brc_applicationContainerID
_showGenericErrorAndFinish:
brc_applicationBundleID
bundleURL
_openAppStoreForShareURL:
brc_errorNoSuitableClientApp
entitlementValueForKey:ofClass:
_openiCloudSettings
brc_errorDriveDisabledOrAppLibraryDisabled
icd_isManagedAppleID
_isOwnerOrShareAlreadyAccepted
brc_errorOperationCancelled
initWithShareMetadata:syncContext:
getOrCreateSharedZones:shareAcceptOp:
addAcceptOperation:forItemID:
fallbackAppLibraryForClientZone:extension:
_isDocumentLinkInsideFolderShare
brc_errorAcceptAlreadyInProgressForURL:
setAcceptShareCompletionBlock:
defaultWorkspace
openApplicationWithBundleID:
parentItemIDOnServer
_createServerFaultIfPossibleWithCompletion:
performBlock:whenFileObjectIDIsOnDisk:
participantPermission
_isDirectoryLinkInsideFolderShare
applicationProxyForIdentifier:
appState
isInstalled
initWithURL:resolvingAgainstBaseURL:
setScheme:
openSensitiveURL:withOptions:error:
icd_errorWithDomain:code:userInfo:description:
operationToOpenResource:usingApplication:uniqueDocumentIdentifier:userInfo:delegate:
_openDocumentInDocumentsAppIfInstalled:
rootRecordID
serverAliasItemForSharedItem:
fetchShareAliasIfNecessaryForTarget:isUserWaiting:
openSensitiveURL:withOptions:
componentsWithURL:resolvingAgainstBaseURL:
query
setQuery:
setFragment:
openURL:withOptions:
openResourceOperation:didFinishCopyingResource:
openResourceOperationDidComplete:
openResourceOperation:didFailWithError:
_jumpToSelector:
_userNotification
_acceptationFlow
_stepIndex
_shareURL
_shareID
_shareMetadata
_linkFileObjectID
_linkItemID
_rootItemID
_unsaltedBookmarkData
_needsZoneAndAppLibraryActivation
_acceptOperation
_allowsDirectoryFaults
_liveFileURL
_accessedSecurityScope
_shareAcceptGroup
_rootFilename
_linkFilename
initWithMachServiceName:
_startXPCListeners
setExportedInterface:
initWithConnection:
setExportedObject:
setInterruptionHandler:
setInvalidationHandler:
agent
listener:shouldAcceptNewConnection:
_xpcListener
_defaultDownloader
setUserInfo:
registerXPCClient:
processIdentifier
unregisterXPCClient:
cancelAllOperations
waitUntilAllOperationsAreFinished
addMiscOperation:
bundleID
_isAppLibraryProxyEntitled
isSandboxed
cloudEnabledStatus
_entitlementValueForKey:ofClass:
valueForEntitlement:
_canCreateAppLibraryWithID:error:
_setupAppLibrary:error:
versionNumberForBundleIdentifier:
updateMetadataWithExtractorProperties:iconPaths:bundleID:
extractMetadataForContainerID:bundleID:minimumBundleVersion:reply:
setPrivilegesDescriptor:
wait
_hasAccessToAppLibraryID:error:
_isAppLibraryProxyWithError:
_hasPrivateIPCEntitlementForSelector:error:
_entitlementBooleanValueForKey:
defaultMangledID
hasPrivateSharingInterfaceEntitlement
_setupAppLibrary:updateContainerMetadataIfNeeded:error:
clientPriviledgesDescriptor
setClientPriviledgesDescriptor:
dieOnInvalidate
isUsingUbiquity
setIsUsingUbiquity:
setExtension:
_clientPriviledgesDescriptor
_appLibraries
_operationQueue
_clientPid
_dieOnInvalidate
_isForeground
_invalidated
_isMonitoringProcess
_isUsingUbiquity
_connection
brc_errorDaemonShouldBeLoggedOut
brc_daemonAccessDisabledError
skipSyncUpThrottlingOnBatchFailures
brc_isCloudKitErrorRequiringSkipThrottling
brc_syncOperationErrorKind
decodeDoubleForKey:
decodeIntForKey:
encodeDouble:forKey:
encodeInt:forKey:
inactivityKickbackDelay
inactivityKickbackRatio
ratioOnSuccess
updateAfterSchedulingTaskWithMinimumDelay:
ratioOnQuotaErrorClear
ratioOnFailure
maxWait
initWithMangledID:isSyncDown:
updateAfterSchedulingTask
updateForClearingOutOfQuota
updateForError:
clear
delay
nextTry
setMangledID:
lastErrorKind
_isSyncDown
_lastErrorKind
_delay
_nextTry
decodeBytesForKey:returnedLength:
encodeBytes:length:forKey:
lastDay
syncUpDailyBudget
_timeToLoseAmount:count:
lastHour
syncUpHourlyBudget
lastMinute
syncUpMinutelyBudget
consume:
_values
syncDownThrottle
options
_options
_old_privateAppLibraryByZoneName:db:
initWithUUID:
initWithRootObject:
initWithUUIDObject:
_initAsLibraryRootWithAppLibraryRowID:enclosureUUID:
_appLibraryRowID
_uuid
wantsContent
wantsThumbnail
userInitiated
wantsContentForThumbnail
downloadError
setDownloadError:
serverName
_downloadError
_serverName
nameWithPrefix:suffix:
initRequiringSecureCoding:
encodedData
migrateStageToVersion2_0WithSession:
numberWithUnsignedLong:
migrateItemIDsToVersion5WithDB:serverTruth:
migrateItemIDsToVersion8WithDB:serverTruth:
migrateItemIDsToVersion11WithDB:serverTruth:
substringWithRange:
documentSharesMigrationKey
initiateMigrationQueryForMangledIDs:key:
folderSharesMigrationKey
dataWithPropertyList:format:options:error:
writeToFile:atomically:
zoneHealthState
weakToStrongObjectsMapTable
_queueAdditionalUpdates
_dispatchUpdatesToPipesWithRank:
getPipeWithXPCReceiver:client:reply:
pipeWithReceiver:
fetchLastFlushedRankWithReply:
hasWatcherMatchingGlobalItemID:
_pipes
_enqueueUpdatesSource
_updatesToEnqueue
_transferCache
_additionalUpdatesItemRowID
_previousMaxRank
_watchersByFileObjectID
_fileObjectIDByWatcher
maxRecordCountInModifyRecordsOperation
modifyRecordsCountMultiplicativeDecrease
modifyRecordsCountAdditiveIncreaseFraction
_startSync
setSyncStateBits:
scheduleResetServerAndClientTruthsForReason:completionHandler:
brc_isCloudKitErrorUnsupportedOSForZoneAndGetMinimumSupported:
brc_isCloudKitErrorZoneMigrated
brc_isCloudKitErrorNeedsPCSPrep
clientZone:didFinishUploadingAllItemsWithError:
resetSyncBudgetAndThrottle
_hasUploadTrackers
_allItemsDidUploadWithError:
clientZone:encounteredErrorRequiringThrotting:
isEqualToClientZone:
serverItemByParentID:andLogicalName:db:
itemByParentID:andLogicalName:db:
errorWithSqliteCode:andMessage:
setLastError:
existsByParentID:andLogicalName:db:
removeSyncDownDependency:
cancelListOperationAndReschedule:
cancelFetchParentChainOperationAndReschedule:
cancelFetchAliasOperationAndReschedule:
migrationQueryKeyForMangledID:continuationCursor:
initDeltaSyncWithServerZone:
initWithServerZone:migrationKey:continuationCursor:
_blockSyncDownOnStitchingOperations
hasHighPriorityWatchers
_syncUpOfRecords:createdAppLibraryNames:didFinishWithError:
syncDownImmediately
itemsWithInFlightDiffsEnumerator
_markRequestIDAcked
serverZoneByMangledID:
_increaseSyncUpBatchSizeAfterSuccess
_decreaseSyncUpBatchSizeAfterError
brc_isCloudKitErrorRequiringAssetRescan
brc_isCloudKitErrorSafeToSyncUpWithoutSyncDown
_markLatestSyncRequestFailed
brc_staleUpdateRecordIDs
finishedSyncingUpItem:withOutOfQuotaError:
learnCKInfosFromSavedRecords:isOutOfBandModifyRecords:
syncThrottles
brc_errorSyncBlocked
onlyTreatCaughtUpAsConsistent
sortUsingComparator:
_fixupMissingCrossMovedItems
markMovedToCloudDocsZone
removeAppLibrary:
removeIndexes:
initWithIndex:
allowsDirectoryListBeforeInitialChangeToken
folderToList
_registerServerStitchingOperation:
_blockLowPriorityStitchingOperationsForOperation:
rescheduleApply
hasObservers
setRescheduleApply:
serverItemTypeByItemID:db:
initWithItemID:zone:isUserWaiting:
_registerListOperation:
_registerFetchParentChainOperation:
_registerFetchAliasOperation:
_dumpItemsToContext:error:
anyObject
serverRankByItemID:db:
serverItemByItemID:db:
serverItemByRowID:db:
documentItemByItemID:db:
itemByRowID:db:
existsByItemID:db:
performBlock:whenSyncDownCompletesRefreshingItemID:
_prepareForForegroundSyncDown
_appendToString:descriptionOfFieldNamed:inResultSet:pos:containsSize:context:
_dumpRecursivePropertiesOfItemByRowID:context:depth:
thumbnailsOperationsByID
dumpMigrationQueriesForMangledID:
_t_isIdle
_t_osNamesByItemIDBlockedForSyncUp
_t_syncBlockedUntilOSName
setValue:forKey:
setAdditionalRequestHTTPHeaders:
forceSyncOverride
isApplicationInstalledForContainerID:
newLocalItemWithDBRowID:
registerAllItemsDidUploadTracker:
unregisterAllItemsDidUploadTracker:
itemEnumeratorByParentID:andCaseInsensitiveLogicalName:
existsByParentID:andLogicalName:
hasItemsWithInFlightDiffs
documentsNotIdleEnumeratorWithDB:
didClearOutOfQuota
addSyncDownDependency:
prepareDirectoryForSyncUp:
notifyClient:afterNextSyncDown:
syncDownOperation:didFinishWithError:status:
handleRootRecordDeletion
didApplyTombstoneForRank:
_resetItemsTable
allItems
itemsParentedToThisZoneButLivingInAnOtherZone
ineligibleFromSyncItemsUnderParent:
serverShareEtagByItemID:
serverStructuralEtagByItemID:
serverItemByRowID:
serverQuotaUsageWithParentID:db:
documentItemByItemID:
_t_addItemID:blockedForSyncUpUntilOSName:
_t_removeItemIDSyncUpBlocking:
_t_removeAllSyncUpBlocking
_t_markBlockedUntilOSName:
_t_pauseSyncDown
_t_resumeSyncDown
_t_pauseSyncUp
_t_resumeSyncUp
serverItemIDForTopLevelSharedItemGivenItem:
lastAttemptedSyncDownDate
setLastAttemptedSyncDownDate:
_t_syncDownBlocked
_t_syncUpBlocked
_ownerName
_isInitialCreation
_readerThrottle
_createZoneOperation
_createZoneQueue
_zoneCreationCompletionBlocks
_syncUpRetryAfter
_syncState
_syncUpOperation
_lastSyncUpError
_syncDownOperation
_syncDeadlineSourceResumer
_lastSyncDownError
_syncUpThrottle
_syncDownThrottle
_syncDeadlineSource
_appliedTombstoneRanks
_lastInsertedRank
_lastSyncDownDate
_lastAttemptedSyncDownDate
_resetTimer
_shouldShowiCloudDriveAppInstallationNotification
_syncDownBlockToPerformForItemID
_waitForOnDiskCount
_nextSyncDownBarriers
_currentSyncDownBarriers
_hasWorkDidUpdateObserver
_nextIdleHandlers
_syncDownGroup
_syncDownDependencies
_allItemsDidUploadTrackers
_syncUpBatchSizeMultiplier
_blockedOperationsOnInitialSync
_runningListOperations
_recursiveListOperations
_fetchParentOperations
_fetchShareAliasOperations
_fetchRecentsOperation
_operationCountPendingSchedule
_syncThrottles
_osNameRequiredToSync
loadFromClientStateInSession:options:
assertQueue
assertionQueue
setAssertionQueue:
_assertionQueue
_value
allContainersBlockIfNeeded:
containerListDidChange
_invalidateChangeToken
_signalChange
_startObservingAccountChangesIfNeeded
_handleNotificationError:
_setupNotificationReceivingIfNeededWithCompletion:
icd_changeTokenFromRank:uuid:
icd_pageTokenOffset
finishEnumeratingWithError:
icd_isInitialPageToken
scheduleQuotaFetchIfNeededForOwner:
allContainers
didEnumerateItems:
icd_pageTokenSortOrder
icd_pageTokenFromSortOrder:offset:
_finishItemsEnumerationWithParent:appLibrary:sortOrder:offset:limit:db:completion:
documentContainers
setupNotificationReceivingIfNeededWithCompletion:
icd_changeTokenRankWithUUID:
_stopObservingAccountChanges
_accountTokenDidChange
_remoteNotificationSender
_updatedItemsByIDs
_deletedItemsIdentifiers
_rank
_isRecursive
_isSettingUpNotificationReceiving
_isObservingAccountChanges
_lastQuota
brc_SHA256WithSalt:
packageWithError:
anchorAtURL:error:
beginTransaction
endTransaction
initWithRegistry:stageID:name:
addItem:error:
closeAndReturn
_registry
_package
initWithShareMetadatas:
setPerShareCompletionBlock:
setAcceptSharesCompletionBlock:
acceptShareCompletionBlock
_acceptShareCompletionBlock
addProblemWithType:recordName:
setPendingRequestID:
setNeedsSyncUp:
pendingRequestID
_createCloudKitZoneWithGroup:completion:
privateServerZone
deleteAllContentsOperationLastError
_checkResultSetIsEmpty:logToFile:reason:result:
hasDefaultAppLibrary
prepareProblemReportForSyncWithRequestID:
sharedItemMovedIntoShareInThisZone:associatedItemID:
itemIDsBlockedFromSyncForCZMProcessing
_syncBarriers
_itemIDsBlockedFromSyncForCZMProcessing
_itemsBlockedByAssociationFroCZMProcessing
_zoneHealthState
_problemReport
_defaultAppLibrary
_updateGlobalProgress
_trackAppLibraryIfNeeded:
_flushUpdates
fetchRootURLIfNeeded
localizedAdditionalDescription
setFileOperationKind:
isPausedForADay
fileTotalCount
fileCompletedCount
setLocalizedDescription:
byteTotalCount
byteCompletedCount
setLocalizedAdditionalDescription:
uploadCompletedSize
setUploadCompletedSize:
uploadTotalSize
setUploadTotalSize:
downloadCompletedSize
setDownloadCompletedSize:
downloadTotalSize
setDownloadTotalSize:
_newPublishedProgressWithKind:
pause
setFileTotalCount:
setFileCompletedCount:
setByteTotalCount:
setByteCompletedCount:
setPausable:
pauseForADay
setPausingHandler:
resumePauseForADay
setResumingHandler:
prettifyProgress:waiting:isUpload:
progressUpdateForFileObjectID:
didUpdateClientZone:
queueProgressUpdates:
_updatePacer
_networkReachable
_globalProgress
_uploadsProgress
_downloadsProgress
_appLibraryIDByFileID
_appLibraryIDByRowID
_aggregatedPropertiesByAppLibraryID
_progressUpdatesByAppLibraryID
_updatedAppLibraryRowIDs
_aggregatedProperties
_rootURL
_isFetchingRootURL
_t_globalProgressInfo
waitUntilAccountLoadedWithCompletionHandler:
should2PhasePCSChain
parentIDHasLiveUnchainedChildren:
fakeSyncForItem:inZone:
addDeletionOfRecordID:ckInfo:
syncUpStructureDeleteCost
addEditOfDocument:
shouldPCSChainStatusForItem:
syncUpInitialItemCost
syncUpStructureEditCost
syncUpStructureCreateCost
syncUpDocumentDeleteCost
inFlightDiffsForItem:zone:
brc_errorItemIneligibleFromSync
handleEditOfSharedItem:
handleDeletionOfSharedItem:
addDeletionOfItem:
syncUpDataDeleteCost
earliestUploadReceiptExpiration
syncUpDocumentEditCost
syncUpDataEditCost
syncUpDocumentCreateCost
syncUpDataCreateCost
prepareAppLibraryRootSyncUpForItem:
checkIfSyncAllowedInSharedZoneForItem:
addDeletionOfSharedTopLevelItem:
addDeletionOfFinderBookmark:
addDeletionOfDocument:
addDeletionOfDirectory:
addEditOfSharedTopLevelItem:
addEditOfFinderBookmark:
addEditOfSymlink:
addEditOfDirectory:
_fullyChainedParentIDWhitelist
_halfChainedParentIDWhitelist
_defaults
nextItemRowID
setNextNotifRank:
nextPackageItemRank
allocatePackageItemRank
setNextPackageItemRank:
_nextItemRowID
_nextNotifRank
_nextPackageItemRank
initWithServerItem:
asSharedItem
aliasDerivedStructure
parentLocalItemOnFS
isSharedItem
initFromPQLResultSet:serverZone:error:
appLibraryForRootItem
pcsChainState
aliasTargetAppLibrary
shouldBeGreedyForApply
originalName
serverMetrics
directoryMtime
_zone
_needsInsert
_pcsChainState
_symlinkTarget
_originalName
_latestVersion
_serverMetrics
_directoryMtime
getCString:maxLength:encoding:
initWithMangledString:
parseMangledItemIDString:mangledID:etag:session:
sharedZoneRowID
itemUUIDString
zoneUniqueItemIDStringWithSession:
initWithItemID:
classOfNextMessage
setClassOfNextMessage:
initWithStream:
nextMessage
version
streamError
inputStreamWithURL:
initWithInputStream:
initWithDeviceID:fileID:
initWithURL:
icd_pathWithDeviceID:fileID:
inputStreamWithFileAtPath:
itemClass
setItemClass:
initWithAsset:
_stream
_reader
_error
outputStreamWithURL:append:
initWithOutputStream:
setVersion:
writeMessage:
_handleStreamError
_computedFileModeForPackageItem:
stageInPackageFileUmask
_packageItem:matchesMode:
_applyFileMetadataWithManifestItem:packageRootFD:
copyPackageFileWithPackageFd:toStageFd:relpath:
stageInPackageDirectoryUmask
itemAtIndex:
_stageExistingPackageItem:withLiveFd:stageFd:
dataWithContentsOfURL:options:error:
setXattrs:
setItem:
setGenerationID:
addLocalItem:
initWithZone:stageID:url:
stagePackageWithReader:package:xattrsPackage:stageItemURL:livefd:recordName:
_writer
_url
setVersionIdentifier:
hasOldVersionIdentifier
versionIdentifier
_versionIdentifier
_sendNotificationsForChildrenUpdates
_progressUpdateForFileObjectID:
_transferedSizeForDirectoryWithFileID:getTotalSize:getParentFileIDs:inGroup:
setFolderID:
setParentFileObjectIDs:
_progressesByParentFileIDsInGroup:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:
_trackProgress:forParentFoldersInGroup:
_untrackProgress:forParentFoldersInGroup:
observeValueForKeyPath:ofObject:change:context:
_downloadProgressesByParentFileID
_uploadProgressesByParentFileID
_parentFileIDsBeingHeldUntilNextFlush
_parentFileIDsWithChildrenUpdates
_pacer
initWithPattern:options:error:
rangeOfFirstMatchInString:options:range:
compare:options:
_clientZonesMatchingSearchString:
brc_errorClientZoneNotFound:
brc_errorAppLibraryNotFound:
arrayWithCapacity:
_appLibrariesMatchingSearchString:
singleClientZoneMatchingSearchString:error:
appLibrariesMatchingSearchString:error:
singleAppLibraryMatchingSearchString:error:
icd_osUpgradeMigration
migrationQueryForMangledID:key:didUpdateWithCursor:
maxRecordCountInQuerySharedRecordsOperation
initWithCursor:
setQueryCursorFetchedBlock:
initShareIDWithItemID:zoneID:
_updatedContinuationCursor:error:
_performQuery:recordFetchedBlock:cursorUpdatedBlock:completion:
_performAfterQueryingForShareIDsOfFolders:completion:
allMigrationKeysOrdered
_migrationKey
_continuationCursor
_shareIDsToFetch
isOverQuota
currentStatus
lastServerUpdate
fpItemIDFromFileObjectID:scope:
setFpItemID:
initWithLocalItem:
initWithItem:
setPcsChainFolderCompletionBlock:
initWithItem:processType:maxSubitemsToFail:
setProcessFolderSubitemsCompletionBlock:
itemByItemGlobalID:
_startPCSChainingIfNeeded
_startCleaningTurdsIfNeededWhenForcing:
brc_errorDocumentIsNotShared
setCopyShareCompletionBlock:
brc_errorItemAlreadyPartOfAShare
fetchShareWithCompletion:
_performAfterCachingShare:
setPublicSharingIdentity:
displayedHostname
setDisplayedHostname:
setDestroyShareCompletionBlock:
fetchSharingInfo:
preflightCheckIfCurrentlyShareableWithCompletion:
fetchParticipantListAndPublicPermission:
startPreparingForShareWhenForcing:
fetchShareURLWithCompletion:
unshareWithCompletion:
_cachedServerZone
_cachedLogicalName
_cachedItemType
_cachedIsPackage
_cachedShare
_cachedFakeShare
_alreadyCleanedSubitems
_alreadyPCSChained
_prepForSharingGroup
_prepForSharingError
_blocksWaitingForCachedShare
encryptedPublicSharingKey
brc_errorPermissionError:
setWantsPublicSharingKey:
_performAfterCopyingPublicSharingKeyWithRecordID:completion:
brc_cloudKitErrorForRecordID:
_performAfterGettingPublicSharingKeyForRecord:completion:
_performAfterFetchingiWorkRoutingTokenIfNecessary:completion:
_performAfterFetchingiWorkSharingIdentityOnItem:wantRoutingKey:completion:
_performAfterFetchingSharingIdentityOnDocumentItem:completion:
_performAfterFetchingSharingIdentityOnDirectoryItem:completion:
_performAfterPreparingSharingIdentityIfNecessaryWhenWantRoutingKey:completion:
initWithName:zone:share:
_updateDBAndSyncDownIfNeededWithShare:recordsToLearnCKInfo:
performAfterPreparingSharingIdentityIfNecessary:
_share
_sharingIdentityPreparedRecord
isKnownToServer
brc_errorItemInTrash
saveShareCompletionBlock
_saveShareCompletionBlock
shareID
destroyShareCompletionBlock
_destroyShareCompletionBlock
initWithRecordIDsToGrantAccess:recordIDsToRevokeAccess:
setRecordAccessGrantedBlock:
setRecordAccessCompletionBlock:
modifyAccessCompletionBlock
setModifyAccessCompletionBlock:
initWithItem:allowAccess:
_document
_allowAccess
_accessToken
_referenceIdentifier
_modifyAccessCompletionBlock
brc_fetchShareIDWithSharedItem:
initWithShareIDs:
setBaseTokensByShareID:
setChildRecordIDsByShareID:
setShareParticipantKeyFetchedBlock:
setShareParticipantKeyCompletionBlock:
fetchParticipantTokenCompletionBlock
setFetchParticipantTokenCompletionBlock:
_fetchBaseTokenWithCompletion:
_fetchParticipantTokenWithCompletion:
_contentRecordID
_participantKey
_baseToken
_iWorkShareable
_isChildOfShare
_fetchParticipantTokenCompletionBlock
_performPCSChainBatch
pcsChainFolderCompletionBlock
_serverItem
_pcsChainFolderCompletionBlock
copyShareURLCompletionBlock
ckContainerID
CKAssignToContainerWithID:
_appName
_copyShareURLCompletionBlock
shortToken
copyShortTokenCompletionBlock
setCopyShortTokenCompletionBlock:
_copyShortTokenCompletionBlock
initWithShareID:emptyRecord:
emptyRecord
_emptyRecord
deleteShareIDBatchCount
_stopObservingListOperation
removeObjectsInRange:
subarrayWithRange:
removeSharedSubitemsWithCompletion:
processServerItemsUnderItemID:completion:
enumerateItemsWithShareIDUnderParent:block:
_completeAfterProcessingClientTruthIfNecessaryWithError:
_completeAfterProcessingServerTruthIfNecessaryWithError:
processServerTruthWithCompletion:
processClientTruthWithCompletion:
processFolderSubitemsCompletionBlock
_rowID
_batchSize
_failedSubitemsLeft
_processType
_sharedClientSubitems
_sharedServerSubitems
_aliasItemsToReparent
_shareIDsToDelete
_activeListOperations
_rootClientZone
_isFSRoot
_hasTurdsRemaining
_processFolderSubitemsCompletionBlock
_createSyncDownOperation
requestID
defaultsForSideCar
shouldFetchAllChanges
_saveChangedRecords:deletedRecords:serverChangeToken:clientChangeToken:
_createZone
_serverChangeToken
setRelativePath:
setDocID:
setGenCount:
setIsDirectory:
_isDirectory
_genCount
_relativePath
_docID
_schedule
_scheduleOneBatchWithQoS:
uploadBatchCount
_setReachedCap:
_evaluateCap
setDidProgressBlock:
availableDiskSpaceDidChange
_addBatchOperation:
transferQueueTransferBudget
cancelTransferID:
progressForTransferID:
initWithSyncContext:name:scheduler:
startSchedulingMultipleItemsInteractively
endSchedulingMultipleItemsInteractively
cancelPendingOperations
streamDidBecomeReadyToTransferRecords
setStreamDidBecomeReadyToTransferRecords:
maxCountOfBatchesInFlight
setMaxCountOfBatchesInFlight:
_nextFire
_inFlightOpByID
_schedulingSource
_transferQueue
_inFlightSize
_transferBatchRequestWaiter
_isWaitingForTransferBatch
_hasReachedCap
_multipleItemsInteractiveSchedulingCount
_isPaused
_streamDidBecomeReadyToTransferRecords
_maxCountOfBatchesInFlight
setShareID:
brc_errorDocumentIsNotSharedAtURL:
copyAccessTokenCompletionBlock
setCopyAccessTokenCompletionBlock:
_copyAccessTokenCompletionBlock
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
addXattrs:
xattrsCount
clearXattrs
xattrsAtIndex:
xattrsType
icd_personaID
stringWithContentsOfFile:encoding:error:
initWithUserURL:
restoreWithCompletionBlock:
clientDatabaseURL
setClientDatabaseURL:
_clientDatabaseURL
_registerSubscriptionForZoneID:isOptimisticSubscribe:
_createZoneWithZoneID:
initWithZoneID:
initWithRecordZonesToSave:recordZoneIDsToDelete:
setModifyRecordZonesCompletionBlock:
initWithZoneID:subscriptionID:
optimisticSubscribe
subscriptionOnly
setSubscriptionOnly:
createZoneAndSubscribeCompletionBlock
createdZone
_zoneID
_optimisticSubscribe
_subscriptionOnly
_createZoneAndSubscribeCompletionBlock
_createdZone
createAccountWithACAccountID:dsid:reply:
logoutAccountWithACAccountID:personaIdentifier:reply:
getDocumentDomainForCurrentPersonaWithCompletionHandler:
setMarkZonesAsUserPurged:
initWithLatestGCStartTime:
timeSinceLatestGCStartTime
_latestGCStartTime
cacheDirPath
_performInStageDirectory:block:
_openStageDirectory:
nonLocalLogicalURLForAdditionName:
placeholderURLForURL:
nonLocalFaultURLForAdditionName:
writePlaceholderAtURL:withMetadata:error:
_pathInStage:index:generationID:
renameAndUnlinkInBackgroundItemAt:path:
signatureWithFileDescriptor:error:
cleanupStagedSyncUpWithID:
_anchorNamePrefixForRecordZoneID:
_anchorNameForRecordID:
_anchorNameForChangeToken:recordZoneID:
destroyAnchorAndPackageAnchoredAtURL:
_graveyardAt:path:forItemID:
writeToURL:options:error:
minFileSizeForGraveyard
garbageCollectSpace:
purgeGraveyardSpace:withUrgency:
_purgeSpaceUnderQueue:withUrgency:
graveyardAgeDeltaInLowUrgency
graveyardAgeDeltaInMedUrgency
icd_pathRelativeToPath:
clientPackageDatabaseDirectory
anchorExistsForArchiverInfo:
gcPackagesInDirectory:dbInUseBlock:
_processPendingListDatabaseObjects:
garbageCollectPackages
_updatePersistedStateWithLatestGCStartTime:
stageGCXPCActivity
computeItemModeFromStatInfo:sharingOptions:isDirectory:
nonLocalRootURL
makeNonLocalVersionSideFaultWithAdditionName:item:error:
moveFromURLToLiveStage:fileObjectID:error:
pendingListRecordDirWithStartingChangeToken:
pendingDeltaFetchRecordDirWithStartingChangeToken:recordZoneID:
pendingListRecordDirExistsInStageWithRecordID:
pendingFetchRecordDirExistsInStageWithStartingChangeToken:recordZoneID:
cleanupStagedUploadWithID:
associateDownloadStageID:withOperation:
existsInStage:generationID:
existsInOldVersionStageOrGraveyard:
purgeSpace:withUrgency:
lowDiskStatusChangedForDevice:hasEnoughSpace:
purgableSpace
disarmLockedTestTimer
_stageDirectoryPath
_stageDirectoryFileID
_activeUploadStageIDs
_activeDownloadStageIDs
_watchedLockedFileIDs
_lockedTestTimer
_flushingQueue
_persistedState
_lowDiskSpace
setRemoteObjectInterface:
initWithDocument:receiver:
brc_parseAdditionFilename:mangledID:itemID:etag:session:
listNonLocalVersionsWithReply:
resolveConflictWithName:reply:
_sender
initWithURL:name:
prettyNameForFilePresenterID:
fetchStorageGroup
storage
additionWithName:inNameSpace:error:
addReaderID:completionHandler:
icd_downloadNonLocalVersions
cancelReaderID:
_fileReactorID
_physicalURLForURL:
_provideItemAtURL:toReaderWithID:completionHandler:
_cancelProvidingItemAtURL:toReaderWithID:
_operationsByName
arrayWithContentsOfFile:
blacklistedPackageExtensions
brc_isBlacklistedPackageExtension
brc_loadForcedPackageExtensions
_t_brc_removeForcedPackageExtension:
packageExtensionPlistWriteInterval
dictionaryWithContentsOfFile:
getBytes:length:
setNotifRank:
setDatabaseID:
changeTokenFromData:
toData
notifRank
_notifRank
_databaseID
orderedSet
setRank:
addIndexOfItem:
addDeletionOfFileObjectID:rank:
batchCount
listItems:
_toIndexItems
_deletedItemIDs
_observer
didFinishBatchWithAckedRank:flushedNotifRank:
isProcessingBatch
setProcessingBatch:
providerManager
setProviderManager:
_processingBatch
itemRowID
deleteSearchableItemsWithSpotlightDomainIdentifiers:completionHandler:
changeTokenForNotifRank:
_deleteAllRanks
_deletedDocIdResultSetFromNotifRank:batchSize:
_handleResetForRowID:notifRank:workingSet:completionHandler:
_enumerateChangesFromChangeToken:forDataScope:limit:completion:
isIndexingAvailable
recentsEnumeratorPacerInterval
_activeSetDidChange
_signalActiveSetDidChange
dropRecentsForSession:completionHandler:
garbageCollectRanksPreceding:
_dataScopeWorkingSet
_visibleScopeWorkingSet
_flushedNotifRank
initWithDocument:desiredEtag:stageID:
pendingGroup
fetchOperationForTransfers:traceCode:
_prepareSecondStageWithSession:manifest:package:error:
_stageWithSession:manifest:package:xattrsPackage:error:
_stageWithSession:error:
desiredIndices
_isFinderBookmark
_requiresTwoPhase
_desiredIndices
perDownloadCompletionBlock
transferredObjectsPrettyName
_perDownloadCompletionBlock
_fetchStorageForItem:
_stageContentWithSession:error:
associateThumbnailImagesDictionary:serializedQuickLookMetadata:withImmutableDocument:atURL:error:
prepareAdditionCreationWithItemAtURL:byMoving:creationInfo:error:
nameSpace
__itemAtURL:didGainVersionWithClientID:name:purposeID:
createAdditionStagedAtURL:creationInfo:completionHandler:
rowID
_storeInGenstoreWithSession:completion:
isLoser
gsError
_secondaryRecordID
_secondaryRecord
_sharedZone
_fetchStorageGroup
_storageURL
_isLoser
_storage
_gsError
_readers
parentItemID
initWithName:throttleParameters:queue:handler:
scheduleNextEvent
_throttle
icd_purge
itemByParentID:andName:
_deleteAllContentsOperation
_deleteAllContentsOperationLastError
maxRelativePathDepth
_propagateDeleteToChildrenOfItemID:
_propagateFolderDeletesToTheirChildren
uploadThrottle
_scheduleSyncUpJob:
createSyncUpJobForRowID:inZone:
perItemSyncUpThrottle
initWithItemDBRowID:zoneRowID:
thumbnailTransferQueueWidth
transferQueueMinBatchSize
_globalQuotaStateUpdateForDefaultOwner
_scheduleRetries
_readPauseDateInPrefs
setState:forUploadJobID:zone:
uploadMaxInPkgFileSize
uploadMaxFileSize
largestPackageItemSizeInFileObjectID:session:
brc_errorDocumentWithFilename:size:isTooLargeToUpload:
scheduleQuotaStateUpdateForOwner:
_thumbnailOperationForItemRowID:
_cancelJobsMatching:
_buildItemTooLargeErrorIfNeeded:syncContext:
hasItemsOverQuotaForOwner:
setIsDefaultOwnerOutOfQuota:
_computeRecordForJobID:item:syncContext:
_thumbnailOperationsMax
packageItemsForItem:order:
initWithDeviceID:fileID:generationID:
setPackageIndex:
pathInPackage
setItemTypeHint:
updateWithPkgItem:
_updatePackageRecord:item:stageID:error:
_documentItemForJobID:stageID:
_updateRecord:item:syncContext:thumbnailsDictionary:thumbnailMetadata:stageID:
_updateJobID:setStageID:operationID:
_updateRecord:jobID:syncContext:thumbnailsDictionary:thumbnailMetadata:stageID:
_doneFetchingThumbnailForJobID:
_startFetchThumbnail:jobID:
packageWithPackage:error:
removeDB
updateSignaturesForFilesInItem:fromCKPackage:error:
_duplicatePackage:stageID:stageName:error:
_finishPackageUploadWithRecord:item:stageID:error:
uploadFileModifiedThrottle
containsString:
_minBatchSize
_willAttemptJobID:throttle:operationID:
_documentItemForJobID:operationID:
_finishedUploadingItem:record:jobID:stageID:syncContext:error:
icd_upload
_rescheduleJobsOutOfQuotaForDefaultOwnerWithAvailableSize:
icd_quotaUpdateUploader
_setQuotaAvailableForDefaultOwner:
setFetchUserQuotaCompletionBlock:
_registerQuotaFetchXPCActivity
_scheduleQuotaFetchForDefaultOwnerWithXPCActivity:
outOfQuotaXPCActivity
goodQuotaXPCActivity
currentCalendar
isDateInToday:
standardUserDefaults
descriptionForJobID:context:
deleteJobsForZone:
setState:forJobID:zone:
boostRowID:item:
removeBoostedRowID:
hasItemsOverQuotaInZone:
_thumbnailsOperations
_boostedRowIDs
_stampForRowID
_retryQueueSource
_globalQuotaStateUpdatePacer
_quotaFetchScheduled
_prepareReachedMax
_pausedDate
_isDefaultOwnerOutOfQuota
_uploadsDeadlineScheduler
initWithItemDBRowID:
initWithRecord:ckInfo:
initWithItemID:parentID:structuralCKInfo:contentCKInfo:itemType:chainState:
unchainedItemInfoInServerTruthEnumeratorParentedTo:
itemType
structuralCKInfo
contentCKInfo
chainState
_itemType
_chainState
_structuralCKInfo
_contentCKInfo
_chainPreppedRecordToParent:
setObject:atIndexedSubscript:
protectionData
initWithAppLibrary:
containsRecordInfo:
prepareFirstPhaseRecordBatch
addFullyChainedRecordInfo:
chainPreparedRecordBatch:
recordsForFirstPhase
recordsForSecondPhase
halfChainedRecordMap
_fullyChainRecordBatch
_fullyChainRecordInfoMap
_halfChainedRecordMap
_alreadyHalfChainedRecords
_recordsForFirstPhase
_should2PhasePCSChain
initWithPCSChainInfo:clientZone:
chainInfo
_chainInfo
_enumerator
pcsChainingMaxPathDepth
brc_errorFolderHierarchyTooDeep
itemIDNeedingListing
_maxPathDepth
_stack
_itemIDNeedingListing
pcsChainingBatchSize
_sendRecordBatch:completion:
_buildRecordListWithCompletion:
pcsChainCompletionBlock
shouldFillBatch
_rootItem
_completed
_listOperation
_shouldFillBatch
_pcsChainCompletionBlock
wrapperWithURL:readonly:error:
_gateAccessToPreciousURL:auditToken:completion:
currentConnection
_gateAccessToStorageURL:auditToken:completion:
ubiquityTokenWithSalt:appIdentifier:accountID:
currentAccountCopyTokenWithAppIdentifier:reply:
_gateAccessToDomainURL:auditToken:completion:
_gateAccessToUserVisibleURL:auditToken:completion:
brc_iWorkPathExtensions
setHasGenerationID:
hasGenerationID
setHasSize:
hasSize
hasXattrs
item
_item
itemGlobalIDFromLocalItem:
brc_errorNotInCloud
forceIngestionForItemID:completionHandler:
brc_errorItemChanged
itemSharingOptionsForFileObjectID:
fetchVersionAndCapabilitiesWithCompletionHandler:
setEnvironmentType:
fetchCollaborationTokenWithCompletionHandler:
fetchLatestRevisionWithCompletionHandler:
refreshSharingStateWithCompletionHandler:
fetchPrivacyStateWithCompletionHandler:
documentIsInUseWithTimeout:
fetchFileProviderIdentifierWithCompletionHandler:
fetchURLForSharingFileWithCompletionHandler:
fetchFolderSharingStateWithCompletionHandler:
_newProgressWithCancellationHandler:
shouldPreparePCSMigration
icd_migrationPCS
blacklistPCSPrep
fetchAllRecordZonesOperation
_createCloudDocsZone:
setFetchRecordZonesCompletionBlock:
initWithSourceZoneIDs:targetZone:
setAggregateZonePCSCompletionBlock:
_fetchZonesNeedingMigration:
_interestingZoneIDs
initWithServiceName:
setSessionDirPath:
setCacheDirPath:
initWithRepositoryURL:helper:
_setupSharedPackageExtensionsPlist
packageExtensions
attributesOfItemAtPath:error:
filePosixPermissions
appLibraryScanThrottleParams
appLibraryResetThrottleParams
sharedAppLibraryResetThrottleParams
lostItemThrottleParams
operationFailureThrottleParams
syncClientZoneThrottleParams
syncClientZoneErrorThrottleParams
_createAccountSupportPathIfNeeded:protectParent:
_setupThrottles
spotlightIndexingEnabled
_loadClientZonesFromDisk
cloudDocsMangledID
diskSpaceCheckInterval
availableDiskSpaceUsingCache:schedulingPendingDiskItemsIfNeeded:
fixupItemsAtStartup
privateCloudDatabase
operationQueue
sessionZombiesEnabled
_unloadClientZones
turnObjectIntoZombie:
excludedFilenamesWorthPreserving
excludedExtensionsWorthPreserving
icd_isExternalDocumentReference
icd_isExcludedButPreservedAtLogOutWithFilenames:extensions:
icd_isDocumentTooLargeForUpload:maxUploadDocumentSize:
_recursivelyPrepareFolderForLogOutAtURL:pruneEmptyFolders:pruneEmptyTopLevelFolder:maxDepth:
destroyLocalDataWaitingForFilesToBeUnlinked:pristineContainerIDs:fileUnlinker:completionBlock:
forcePurgeWithCompletionBlock:
_registerForFullSyncXPC
arrayByAddingObjectsFromArray:
backgroundDeferTimeInterval
_registerFullZonesSyncDownWithActivity:
enumeratePrivateServerZones:
fullSyncXPCActivity
__registerServerZone:clientZone:appLibrary:isShared:
isCloudDocsMangledID
_shouldPrivateAppLibraryBeCZMMoved:
__getOrCreateServerZone:
__getOrCreateClientZone:withServerZone:alreadyExists:
__getOrCreateAppLibrary:rowID:alreadyExists:withClientZone:createCZMMoved:
_getOrCreateAppLibraryAndPrivateZonesIfNecessary:creationFlags:
shortValue
setFPFSMigrationState:
enumerateObjectsUsingBlock:
persistentDomainForName:
setOptimizeStorageEnabled:
synchronize
shouldSessionBeGreedy
cloudDocsAppsListDidChange:
resetThrottles
_createAppLibraryRootIfNeededAtPath:error:
accountWaitOperation
clientZones
sharedServerZoneByMangledID:
assertNotOnZoneMutex
fpfsMigrationOffset
fpfsMigrationLostItemCount
updateFPFSMigrationOffset:lostItemCount:
availableDiskSpaceUsingCache:
computeTotalLiveDocumentSizeWithDb:
startDownloadsForGreediness
_setRootPathXattrValue:forRootPath:error:
_getRootPathXattrValue:forRootPath:error:
containerHelper
userNotification
appLibraryScanThrottle
lostItemThrottle
_syncContexts
_defaultScheduler
_dbURL
_dbWatcher
_dbWatcherQueue
_dbCorruptionQueue
_clientTruthWorkloop
_serverTruthWorkloop
_readOnlyWorkloop
_cloudDocsFD
_dbProfilingHook
_miscOperations
_backgroundDataScopeListOperation
_backgroundDocumentsScopeListOperation
_backgroundDeferTimer
_registerStateForFullSync
_clientDB
_serverDB
_readOnlyDB
_clientState
_serverState
_zonesLock
_libraryRowIDsByMangledID
_appLibrariesByRowID
_serverZonesByZoneRowID
_sharedServerZonesByMangledID
_sharedClientZonesByMangledID
_privateServerZonesByID
_privateClientZonesByID
_accountID
_lastDiskSpaceCheckTime
_availableDiskSpace
_totalDiskSpace
_isGreedy
_zonesCreationLock
_reschedulePendingDiskItemsPacer
_updateDiskSpacePacer
_accountIsReady
_accountWaitOperation
_isDBOpened
_versionsProvider
_xpcClients
_sessionDirPath
_cacheDirPath
_appsMonitor
_containerCache
_containerScheduler
_containerHelper
_applyScheduler
_fairClientDBScheduler
_volume
_fsUploader
_fsDownloader
_syncUpScheduler
_fsImporter
_fsWriter
_notificationManager
_inflightProgressTracker
_stageRegistry
_diskReclaimer
_fileUnlinker
_recentsEnumerator
_appLibraryScanThrottle
_appLibraryResetThrottle
_sharedAppLibraryResetThrottle
_lostItemThrottle
_syncClientZoneThrottle
_syncClientZoneErrorThrottle
_resetQueue
_analyticsReporter
_documentsScopeProviderManager
_dataScopeProviderManager
_providerIdentifier
_documentsScopeDomainIdentifier
_dataScopeDomainIdentifier
setClasses:forSelector:argumentIndex:ofReply:
_addTransfer:
_finishedTransfer:error:
_cancelTransferID:
_setProgress:forTransfer:
sendBatchProgressedCallback
_finishedTransferForRecord:recordID:error:
setTotalSize:
didProgressBlock
_entriesByRecordID
_entriesBySecondaryRecordID
_entriesByTransferID
_entriesOrderedByPriority
_itemsCount
_didProgressBlock
_pendingGroup
startFgColor:bgColor:attr:
startFgColor:attr:
startBgColor:attr:
startFgColor:
startBgColor:
startAttributes:
changeFgColor:
changeBgColor:
changeAttributes:
_bookmarkDataWithItemResolutionString:serverZone:salted:
itemResolutionString
brc_errorAccountMismatch
parseUnsaltedBookmarkData:itemID:mangledID:error:
parseBookmarkData:inAccountSession:itemID:mangledID:unsaltedBookmarkData:error:
_shouldForceApplyForItem:
_handleApplyingDeletedUnlistedDirectoryIfNecessary:localItem:parent:
blockApplyUntilList
fallbackParentAppLibraryOnFS
hasNeverSyncedDown
mangledIDIsPendingMigration:
removeAllShareAcceptationSidefaults
_suspendCount
_serialQueue
initWithProblem:
zoneHealthReportedRecordNamesCount
setByAddingObjectsFromSet:
initWithType:recordName:
mergeWithProblem:
effectedRecordNames
_effectedRecordNames
initWithProblemReport:
_priorityForProblemType:
_effectiveProblemType
_zoneStateForProblemType:
_addProblem:
effectiveProblemMessage
_problems
_needsSyncUp
_pendingRequestID
initWithServerZoneHealthState:
icd_fileSystemRepresentation
stringWithCString:encoding:
icd_fileURLWithFileDescriptor:
ignoredQuarantineMask
initWithLength:
mutableBytes
xattrNamesListBegin
xattrNamesListEnd
xattrNamesEnd
structuralXattrNamesEnd
contentXattrNamesEnd
getXattrValue:error:
clearCache
_xattrNamesList
_xattrNamesData
_xattrCount
_contentXattrCount
_sizeLimit
_cacheSize
_cachedXattrs
_purge
_cachePurgeSource
_unlinkRootPath
_scheduleAsync
_doneWithError:
treeEnumeratorBatchSize
_iterate:
firstIndex
removeIndex:
__iterate:
_visitNewParent
initWithSession:tracker:
initWithSession:group:
enumerateBelow:appLibrary:recursively:handler:
completionHandler
setCompletionHandler:
_handler
_seen
_toVisit
_strongSelf
_completionHandler
icd_uploadAllDocs
_mangledIDsStillUploading
_mangledIDsWithRetryError
stringByRemovingPercentEncoding
capitalizedString
additionURLForName:storagePrefix:inConflictNamespace:
label
cancelled
listDirChangesCancelDelay
_initializeCancelTimer
_observersGroup
_cancelTimer
maxRecordCountWhenListingDirChanges
icd_listDirectoryContents
queryFinishedServerTruthCallback
queryFinishedClientTruthCallback
initForListingWithParent:serverZone:
hasBeenCreated
fetchQueryCursor:
_cursorWasUpdated:subResourcesOp:
_scheduleQueryOp
_waitForFlushAndRescheduleApplyIfNecessaryWithError:
_listCompletionBlocks
_preFlushListCompletionBlocks
_hasNilDelegate
_queryOp
_rescheduleApply
listNextItem
fetchNextItemToList
_itemsToList
_activeListOp
_recursiveListCompletionBlocks
initWithChangedRecord:shareID:xattrSignatureNeedingFetch:structureRecordBlockingSave:
initWithRecordIDNeedingFetch:
isWaitingOnShareIDFetch
recordIDNeedingFetch
setRecordIDNeedingFetch:
recordIDBlockingSave
setRecordIDBlockingSave:
_recordIDNeedingFetch
_recordIDBlockingSave
_openDB
pendingChangesStreamSoftOpenCount
pendingChangesStreamHardOpenCount
_closeDB
pendingChangesStreamCloseDelay
_initDeltaSyncWithChangeToken:serverZone:
_dropExistingTablesWithDB:
_dbBecameCorrupted
_createSchemaIfNecessary
useSerialQueue
_wasClosed
_wasAccessed
_recordTypeFromRecordID:isShare:isDelete:
_saveSubResourceRecord:
_finishedFetchingRecordMetadata:
fetchTokenState:
saveEditedRecords:deletedRecordIDs:deletedShareIDs:subResourceEditedRecords:serverChangeToken:clientChangeToken:
saveEditedRecords:subResourceEditedRecords:queryCursor:
saveSubResourceRecords:afterSavingMainTableItems:queryCursor:
copyBlockingSaveRecordsToNeedingFetchIgnoringRecords:
enumerateRecordsNeedingXattrFetchWithBlock:
enumerateRecordsNeedingMetadataFetchWithBlock:
hasFetchRecordByID:
hasRecordIDBlockedOnSubResources:
hasRecordIDsToDeserialize
hasXattrsToFetch
hasSubResourceRecords
hasRecordDeletes
finishedFetchingXattrSignatures:
handleUnknownRecordIDForDeserialize:
_startingChangeToken
_label
_hasBeenCreated
_dbHasOpened
setSerializedNameComponents:
hasSerializedNameComponents
serializedNameComponents
_serializedNameComponents
fallbackParentItemIDOnFS
fallbackParentServerItemOnFS
fallbackParentItemOnFS
parentItemIDOnFSInDB:
_brc_isCloudKitErrorCode:
_brc_isCloudKitInternalErrorCode:
_brc_cloudKitInternalWithErrorCode:
icd_cloudKitErrorForIdentifier:
_brc_isCloudKitPluginErrorCode:
_brc_cloudKitPluginErrorPayload
_brc_isCloudKitInternalErrorSafeToSyncUpWithoutSyncDown
_brc_isCloudKitZoneNotFoundError
_brc_isCloudKitZoneUserDeletedError
brc_errorWithDomain:code:underlyingError:
brc_description
brc_isCloudKitErrorZoneUndergoingMigration
brc_isCloudKitPCSDecryptionFailure
initialize
sourceForBitIndex:
_runEventHandler
unregisterSources
addSource:
signalSourceForBitIndex:
_maxRegistedSourceBit
_lastVisitedBit
_sourceForBitIndex
eventHandler
_schedulerBitIndex
_scheduler
_cancelled
_signaled
_eventHandler
wrapperWithSecurityScopedURL:
getURLForContainerWithItemID:inDataScopeDomainWithIdentifier:documentsScopeDomainIdentifier:documentsFolderItemIdentifier:completionHandler:
fetchURLsForContainerID:completion:
registerInitialSyncBarrierForID:reply:
getItemUpdateSenderWithReceiver:reply:
dumpDatabaseToFileHandle:completionHandler:
uploadAllFilesWithCompletionHandler:
setOptimizeStorageEnabled:reply:
checkOptimizeStorageEnabledWithReply:
forceSyncContainerID:reply:
printStatus:containerID:reply:
resolveCrossDeviceBookmarkData:completion:
wrapperOperationCompletionHandler
setWrapperOperationCompletionHandler:
initWithSyncContext:subOperations:
_resultDictionary
_wrapperOperationCompletionHandler
_childPropagationSchedule
typeIdentifier
isTrashed
_getOrCreateTrashItemInAppLibrary:extension:error:
getFileIDFromXattr:docID:genCount:
_globalItemByDocumentID:
_globalItemByFileID:
shouldRejectItem:templateItem:extension:tryReconciling:
caseInsensitiveCompare:
isDesktopOrDocumentsItem:
_createNewItemWithImportObject:error:
lastUsedDate
tagData
contentModificationDate
flags
_trashItem:extension:error:
possiblyContainsSharedItem
createAndImportNewDirectoryWithLogicalName:parentItem:extension:error:
capabilityToMoveItem:toNewParentItem:error:
_untrashItem:toParentIdentifier:error:
numberWithUnsignedChar:
_markNextChildBatchDead:persistedState:batchSize:
_propagateFieldsToNextChildBatch:persistedState:minRowID:batchSize:
_processIngestBatch:minRowID:
_cleanItemBatchAfterMigrationToFPFSIfNecessary
fpfsMigrationCleanupBatchSize
_childPropagationSource
_currentPropagationObject
_currentPropagationMinRowID
documentSize
lastSyncDate
setDateFormat:
_needsContainerMetadataSyncDown
_needsSharedDBSyncDown
_lastSyncDate
_ckGroup
initWithZoneHealthState:
allocateNextRequestID
_needsSyncDown
_needsSync
totalCount
_totalCount
currentServerChangeToken
initWithRecordZoneIDs:
setAllowsCellularAccess:
scheduleSyncDownIfNeededForZoneID:zoneIfAny:
scheduler
metadataChangeToken
zoneHealthChangeToken
sideCarChangeToken
_metadataChangeToken
_zoneHealthChangeToken
_sideCarChangeToken
_reportRecords:requestID:
initFromPQLResultSet:session:error:
aggregatePackageSizeForPackageID:session:
initWithPBItem:forLocalItem:
assetRank
lazyXattrs
_assetRank
_itemRowID
_pathInPackage
_lazyXattrs
fetchCrossDeviceBookmarkStringWithCompletion:
fetchAccountIdentifierWithCompletionHandler:
fetchLastEditorDeviceNameWithCompletionHandler:
thumbnailChangedWithCompletion:
fairScheduler
addSource:deadline:
willRunEvenHandler
runEventHandler
_deadline
_setupTimerRequiredForDeadline:now:
runDeadlineSource:completionHandler:
coalescingLeeway
computeNextAdmissibleDateForScheduling
_minHeap
_leeway
_lastSchedule
_isResumed
_computeNextAdmissibleDateForScheduling
defaultsForSharedZone
_contextIdentifierForMangledID:metadata:
readerThrottleParams
applyThrottleParams
downloadThrottleParams
uploadThrottleParams
uploadFileModifiedThrottleParams
perItemSyncUpThrottleParams
concurrentSyncMaxOperationCount
recursiveListMaxOperationCount
uploadBatchRecordsCount
downloadBatchCount
downloadBatchRecordsCount
initWithContainerIdentifier:environment:
initWithAccountID:
setAccountInfoOverride:
initWithContainerID:options:
setSourceApplicationSecondaryIdentifier:
sharedCloudDatabase
containerCellularSettings
isCellularEnabledForAccountID:
addOperation:allowsCellularAccess:nonDiscretionary:
nsurlsessiondEnabled
setContainer:
discretionaryNetworkBehavior
_notifyFrameworkContainersMonitorWithState:
timeIntervalSinceNow
_notifyContainerBeingNowForeground
notifyDuetFromAccessByBundleID:
icd_syncDownAppLaunch
_armForegroundGraceTimerForClientDescription:
foregroundGracePeriod
_sourceAppIdentifierForMangledID:
initWithSession:contextIdentifier:sourceAppIdentifier:isShared:
waitForAllOperations
forceContainerForegroundForDuration:
readerThrottle
_contextIdentifier
_sourceAppIdentifier
_isShared
_notifyTokenForFramework
_lastForegroundClientDescription
_dateWhenLastForegroundClientLeft
_timerForGraceForegroundPeriod
_timerForForcedForegroundPeriod
_foregroundStateQueue
_foregroundState
_recursiveListOperationQueue
_applyThrottle
_downloadThrottle
_uploadThrottle
_uploadFileModifiedThrottle
_perItemSyncUpThrottle
_uploadStream
_downloadStream
_syncContextForContextIdentifier:sourceAppIdentifier:isShared:createIfNeeded:
syncContextForMangledID:metadata:createIfNeeded:
initShareIDWithRecordID:zoneID:session:
brc_shareZoneName
_markNeedsPropertiesPropagatedToChildren
_markChildPropagationComplete
containsDirFault
_signalPropagationToChildren
_updateRecursiveProperties
_retryPostponedIfNeededForDiffs:
_insertRecursiveProperties
containsOverQuotaItems
containsPendingDownload
containsPendingUploadOrSyncUp
hasDeadChildren
clientZonesChildrenNeedingSyncUpAreIn
doubleForKey:inParams:defaults:
setupWithParams:defaults:
paramsToDictionary
initWithParams:defaults:
setMinWait:
setMaxWait:
setRatioOnSuccess:
setRatioOnFailure:
setRatioOnQuotaErrorClear:
setInactivityKickbackDelay:
setInactivityKickbackRatio:
initAsGlobalWithServerConfiguration:
_prepopulateGlobalUserDefaults
addObserverForName:object:queue:usingBlock:
initWithServerConfiguration:globalUserDefaults:clientZoneIdentifier:
_parsePlistWithURL:
_reset
defaultsForIdentifier:
_userDefaultsCache
_configurationPlistDidUpdateBlock
_defaultsDidChangeNotificationObserver
_userDefaultsManager
_serverDefaultForKey:
dictionaryForKey:
objectForKey:inheritFromGlobal:validateWithBlock:
_loadObjectForKey:inheritFromGlobal:validateWithBlock:
numberWithFloat:
floatValue
floatForKey:inheritFromGlobal:min:max:byDefault:
boolForKey:inheritFromGlobal:byDefault:
dictionaryWithDictionary:
unsignedLongLongForKey:min:max:byDefault:
boolForKey:byDefault:
unsignedIntForKey:min:max:byDefault:
floatForKey:min:max:byDefault:
_extensionSetForKey:startingWithExtensions:
_UTISetFor:startingWithExtensions:
intForKey:min:max:byDefault:
_umaskForKey:
xpcActivityDictionaryForKey:byDefault:
doubleForKey:min:max:byDefault:
_defaultSyncUpDailyBudget
_defaultSyncUpHourlyBudget
_defaultSyncUpMinutelyBudget
_isSharedDefaults
maxXattrBlobSize
maxPreservedXattrBlobSize
maxRecordCountInClientZoneModifyRecordsOperation
shouldFixupBundleBitOnPackages
extensionsSkippingBundleBitFixup
nonEvictablePathComponents
stageFileUmask
stageFSRootUmask
stageDirectoryUmask
transmogrifyXPCActivity
availableQuotaComfortSize
appsFetchPacerDelay
appLibraryAliasRemovalThrottleParams
allowReadOnlyDBInIPC
skipServerSideThrottling
maxTotalFilesCount
maxNumberOfFilesInAFolder
systemReachabilityLatency
systemPowerLatency
systemLowDiskLatency
readerIOsCancelDelay
writerIOsCancelDelay
readerMaxConcurrentIOs
readerPackageProcessingDelay
readerLostItemBackoff
fseventsLatency
fseventsResetBackoff
fseventQueueBufferSize
fseventProcessBatchSize
transferQueueMinConcurrentOperations
transferQueueMaxConcurrentOperations
cacheDeletePushXPCActivity
publishURLTimeout
forceForegroundGracePeriod
forceBatchFailureWhenReceivingAssetTokenExpiration
accessTimeDeltaInLowUrgency
accessTimeDeltaInMedUrgency
accessTimeDeltaInHighUrgency
accessTimeDeltaInVeryHighUrgency
defaultTimeDeltaForEviction
onDiskAccessTimeDeltaInLowUrgency
onDiskAccessTimeDeltaInMedUrgency
onDiskAccessTimeDeltaInHighUrgency
onDiskAccessTimeDeltaInVeryHighUrgency
defaultOnDiskAccessTimeDefaultForEviction
purgePacerInterval
dbReclaimableSpaceThreshold
cacheDeleteRecomputeInterval
copyShareIDsBatchSize
aliasDeletionBatchSize
minimumDiskSpaceRequiredToBeGreedy
relativeDiskSpaceRequiredToReturnToGreedyState
minimumDiskSpaceRequiredToBeFunctional
activeDownloadSizeRefreshInterval
shouldDisplayUploadNotification
recentsEnumeratorBatchSize
recentsEnumeratorMaxHierarchyDepth
recentsEnumeratorFailureThrottleParams
migrationThrottleParams
intervalToWaitBeforeShowingAdditionalDescription
minimalSizeToShowAdditionalDescription
documentAccessHighPriorityInterval
excludedFilenamesWorthWarningAtLogout
shouldFixupTargetCZMAliases
maxFolderEnumerationCount
maxFolderEnumerationDepth
powerLogReportActivity
utiCacheSize
fieldsToMoveOutOfTrashMask
desktopEnableFetchTimeout
computeEvictableBatchSize
shouldReportAllPerItemFailures
serverSearchMatchLimit
canSaveRecordsDirectlyForList
canSaveRecordsDirectlyForDeltaSync
canSaveRecordsDirectlyWithDeletes
_globalUserDefault
_serverContainerConfigurationDict
_cache
_clientZoneIdentifier
dictionaryWithContentsOfURL:
destroyClientPackageWithDatabaseBasePath:UUID:
databaseBasePath
absoluteString
setArchiverInfo:error:
_notifAccountStore
mainQueue
useCellularForDataclass:
_isCellularEnabledForDocumentsAndDataDict
_accountDidChangeNotificationObserver
unsignedCharValue
initWithRecordIDsToWebShare:recordIDsToUnshare:
_updateItemAfterShareCompleted
setWebShareRecordsCompletionBlock:
numberWithChar:
setRecordSharedBlock:
setRecordUnsharedBlock:
setRecordIDsToShareReadWrite:
initWithDocumentItem:forPublish:readonly:
_recordIDs
_forPublish
_readonly
_sharingInfo
setShouldReportAllPerItemFailures:
setPerRecordChangeCompletionBlock:
shareIDWasDeleted:
recordIDWasDeleted:
recordZoneChangesStatusByZoneID
saveRecordsWithServerChangeToken:clientChangeToken:syncStatus:
fetchAllChanges
handleZoneNotFoundIfSyncingDownForTheFirstTime:
_performAfterFetchingRecordChanges:
clientChangeToken
_saveInitialServerZoneData:clientChangeTokenData:
_startSyncDown
_fetchInitialZoneIfNecessaryWithCreatedZone:
_startCreateZoneAndSubscriptionAndSyncDown
_editedAndDeletedRecordsCount
_version
setupPagerForFd:
_startInCString:fgColor:bgColor:attr:
cursorGotoLineStart
forgetRemainingSpace
puts:len:
dumpProgress:
_putsAndCrop:len:
puts:
execPagerOnFileFd:
startPager
eraseEndOfLine
eraseStartOfLine
eraseLine
eraseScreenDown
eraseScreenUp
cursorSave
cursorRestore
cursorUp:
cursorDown:
cursorRight:
cursorLeft:
startNewLine
endLine
remainingSpace
put:
isatty
useColor
supportsEscapeSequences
_file
_termWidth
_usedTermWidth
_curAttrs
_curFg
_curBg
_isatty
_useColor
_supportsEscapeSequences
icd_syncDownFullBackground
icd_downloadThumbnails
icd_downloadUpdatedDocuments
icd_quotaUpdateXPC
icd_zoneConsolidationManual
icd_zoneHealthSimulation
icd_publishingRequest
icd_fetchIdentityXPC
icd_fetchNonLocalVersions
enumerateBundlesOfType:block:
addAppListObserver:
forceRefetchAppList
applicationIdentifiersForContainerID:
_refetchApps
containerIDsForApplicationIdentifier:
_cloudDocsAppLibrariesByAppID
_appIDsByAppLibraryID
_observers
_refetchPacer
_fetchInstalledAppsQueue
_hasFetchedInitialApps
hasfieldsToSync
generationIDString
initWithSignature:length:
isEqualToGenerationID:orSignature:
isEqualToFSGenerationID:
copyCurrentUserIdentifierWithReply:
fetchShortTokenWithReply:
fetchAccessTokenWithReply:
modifyAccessAllowingAccess:reply:
containerWithIdentifier:
setFetchWebAuthTokenCompletionBlock:
initWithSyncContext:ckContainerID:
setCkContainerID:
_ckContainerID
itemGlobalIDByRowID:db:
itemGlobalIDByFileObjectID:db:
initWithProviderID:domainIdentifier:itemIdentifier:
itemByFileObjectID:db:
serverAliasItemForSharedItem:inZone:db:
itemGlobalIDByFileObjectID:
fileObjectIDByItemGlobalID:
deadServerAliasesSharedItem:
moveAppLibraryTransfers:toAppLibrary:
_scheduleXattrFetch
_scheduleDeserialize
_startWithParentOperation:
_createSubResourceGroupsFromPendingChangesStreamIfNecessary
_prepareToSaveRecords
_fetchRecordsBlockingSaveIfNecessary
stop
_notifyWhenRecordsAreFetched:
stopWithError:
_markSubResourceRecordAsFetchedIfNecessary:
_cleanUpAfterSavingRecords
sortedArrayUsingComparator:
_hasRecordsPendingSubResources
_saveRecordsToPendingChangesWithServerChangeToken:clientChangeToken:
movedZoneNames
_subResourceRecordsByID
_deletedShareIDs
_movedZoneNames
_xattrFetchingGroup
_xattrFetchingSource
_deserializeGroup
_deserializeSource
_deserializeState
_isDoneFetchingRecords
_isDeltaSync
_canSaveDirectly
_canSaveDirectlyWithDeletes
_queryFinishedServerTruthCallback
_queryFinishedClientTruthCallback
_addFileProvider:
_removeFileProvider:
_keyForURL:
icd_isAbsolutePath
_registerPresenterForItemAtURL:key:name:session:
_unregisterPresenterForKey:
_providedItemAtURL:didLosePresenterWithID:
_providedItemAtURL:didGainPresenterWithID:
_provideItemAtURL:completionHandler:
_providedItemsURL
_providedItemsOperationQueue
_getPhysicalURLForURL:completionHandler:
_writerWithID:didFinishWritingForURL:
_providedItemAtURL:withPresenterWithID:didMoveToURL:
_keyForURL:andID:
_pathForKey:
_presentersIDsByKey
_privQueue
_processIdentifierForID:
_requestPurgeSpace
_dbAutovacuumableSpaceInBytes:
_doIncrementalVacuum:amount:
_dbSizeInBytes:
_fullVacuumIfPossible:
_asyncAutovacuumIfNeeds:
_vacuumDB:amount:withUrgency:
accessTimeDeltaForUrgency:
onDiskAccessTimeDeltaForUrgency:
periodicReclaimSpace
urgencyForCacheDeleteUrgency:
_isClosed
_computingPurgable
_purgePacer
capabilities
isUploaded
uploadingError
downloadingError
isExcludedFromSync
isSharedByCurrentUser
ownerNameComponents
mostRecentEditorNameComponents
itemVersion
hasUnresolvedConflicts
containerDisplayName
isDownloadRequested
isHidden
sharingPermissions
fp_spotlightDomainIdentifier
fp_domainIdentifier
fp_parentDomainIdentifier
fp_isUbiquitous
fp_isContainer
fp_isContainerPristine
fp_cloudContainerIdentifier
fp_cloudContainerClientBundleIdentifiers
isTopLevelSharedItem
fp_isLastModifiedByCurrentUser
fp_isAddedByCurrentUser
fp_addedByNameComponents
preformattedOwnerName
preformattedMostRecentEditorName
_rootFileObjectID
_documentsFileObjectID
scopedToItemIdentifier
_finishEnumeratingServerTruthItems:observer:completion:
_fetchScopeItemIDWithError:
_createInjectionsWithError:
_enumerateItemsOnServerTruthWithObserver:completion:
_enumerateSharedToMeItemsWithObserver:completion:
_query
_filenameInjection
_scopeItemGlobalID
_matchLimit
contentDiffersWithSignature:
shareAcceptationSidefaultEnumerator
_shareAcceptationByItemID
_dict
_initReachability
_initPowerManager
_initLowMemory
_initProcessObservers
_initAppListObservers
_initXPCFSEvents
_invalidateReachability
_invalidatePowerManager
_invalidateLowMemory
_invalidateProcessObservers
_invalidateAppListObservers
_resetReachability
_resetPowerManager
_setReachabilityFlagsWithCoalescing:
sharedReachabilityMonitor
_setReachabilityFlags:
__resetReachability
isNetworkReachableForFlags:
_setPowerLevelWithCoalescing:
_setPowerLevel:
powerLevelChanged:
_didReceiveMemoryWarning
didReceiveMemoryWarning
initWithBundleIDs:states:
bundleInfoValueForKey:PID:
updateInterestedBundleIDs:
process:didBecomeForeground:
setHandler:
applicationInfoForPID:completion:
_invalidateProcessMonitorObject:
_createMonitoringObjectForProcessID:observer:
reachabilityMonitor:didChangeReachabilityStatusTo:
reachabilityMonitor:didChangeReachabilityFlagsTo:
reachabilityFlags
addPowerObserver:
removePowerObserver:
addLowMemoryObserver:
removeLowMemoryObserver:
addProcessMonitor:forProcessID:
removeProcessMonitor:
removeAppListObserver:
_notificationQueue
_reachabilityObservers
_reachabilityMonitor
_reachabilityFlags
_reachabilityFlagsTimer
_powerObservers
_powerNotifyToken
_powerLevelOK
_powerLevelOKTimer
_connectedToPowerSource
_connectedToPowerSourceCheckedDate
_lowDiskSet
_lowDiskDict
_lowDiskSource
_lowDiskTimer
_lowMemoryObservers
_memoryNotificationEventSource
_memoryNotificationCoalescePacer
_processObservers
_appListObservers
initWithServerSyncState:
_lastSyncDownStatus
_clientRequestID
initWithState:
setSharedDatabaseChangeState:
_pendingMigrations
_nextRank
_sharedDatabaseChangeState
_minLastUsedTime
hashTableWithOptions:
anonymousListener
endpoint
makeListenerEndpointAndReturnError:
_listeners
_clientClass
copyShareCompletionBlock
setClientZone:
rootItemIDToLookup
setRootItemIDToLookup:
_copyShareCompletionBlock
_rootItemIDToLookup
_blackListDescendantStack:parentItem:andAddToSet:descendantBlock:
_blackListDescendantStack:parentItem:andAddToSet:
_blackListDescendantStackAndItemIfThrottledOrNeedsOSUpgrade:now:
isBlackListed:
_handleSharedItemWhichMovedToNewShare:rootItem:
handleItemForOSUpgrade:parentItemID:
_nextLiveItem
_documentsOrAliasesNeedingSyncUpEnumerator
_liveDirectoriesNeedingSyncUpEnumerator
_tombstoneLeavesNeedingSyncUpEnumerator
_nextTombstone
_maxDepth
_whitelist
_itemIDsLostOrThrottled
_itemIDsNeedingOSUpgrade
_itemIDsNeedingDirectoryFetch
_tombstonesEmbargo
_returned
_stage
_retryAfter
_shareRecordIDsNeedingDelete
_markItemsFailedSync
_syncUpRecordBatchWithModifiedRecords:deletedRecordIDs:recordIDToZoneMap:requestID:
_itemsNeedingSyncUpEnumerator
_shouldPerformAnotherBatch
initWithPkgItem:
_containerMetadataRecordsToSaveWithBatchSize:
performAfterSavingRecords:
addition
setAddition:
additionName
setAdditionName:
genstoreURL
setGenstoreURL:
faultURL
setFaultURL:
lastEditorNameComponents
setLastEditorNameComponents:
_addition
_additionName
_genstoreURL
_faultURL
_lastEditorNameComponents
_updateStorageFromURL:
storagePrefixForFileDescriptor:error:
hasThumbnailOnImmutableDocumentAtURL:
_fetchThumbnailOperationForVersions:physicalURL:
initWithURL:size:etag:hasThumbnail:displayName:lastEditorDeviceName:lastEditorNameComponents:modificationDate:
initAsFaultAtURL:faultURL:size:logicalExtension:faultExtension:etag:hasThumbnail:displayName:lastEditorDeviceName:lastEditorNameComponents:modificationDate:
receivedNewVersions:
setFetchRecordVersionsProgressBlock:
versionsDone
newThumbnailsForVersionsWithEtags:
setFetchRecordVersionsCompletionBlock:
_fetchVersionsOperation
includeCachedVersions
setIncludeCachedVersions:
_cachedItem
_storagePathPrefix
_fetchStorageError
_fetchThumbnailsGroup
_fetchThumbnailsBatchSource
_thumbnailEtagsFetched
_includeCachedVersions
isEqualToItemDBRowIDIdentifier:
isEqualToIntAndZoneJobIdentifier:
_intID
v24@0:8@16
@52@0:8@16@24@32@40B48
@24@0:8^{_NSZone=}16
v20@0:8B16
B16@0:8
@16@0:8
B24@0:8@16
Q16@0:8
v16@0:8
@"NSData"
@"NSString"
{?="knownToServer"b1"wasCached"b1}
B32@0:8@16^@24
i16@0:8
{statfs="f_bsize"I"f_iosize"i"f_blocks"Q"f_bfree"Q"f_bavail"Q"f_files"Q"f_ffree"Q"f_fsid"{fsid="val"[2i]}"f_owner"I"f_type"I"f_flags"I"f_fssubtype"I"f_fstypename"[16c]"f_mntonname"[1024c]"f_mntfromname"[1024c]"f_reserved"[8I]}
@40@0:8@16@24^@32
@24@0:8@16
B24@0:8^@16
^{PQLResultSet=#}24@0:8@16
v40@0:8@16@24@32
@"PQLConnection"
@"NSURL"
@"NSArray"
@32@0:8@16@?24
v24@0:8@?16
B36@0:8@16i24^@28
q16@0:8
B40@0:8@16@24^@32
@32@0:8@16@24
@40@0:8@16@?24@32
@40@0:8@16#24@32
B32@0:8@16@24
B32@0:8@?16@24
B20@0:8i16
v36@0:8@16d24i32
@"icd_pacer"
@40@0:8@16@24@32
v32@0:8@16@24
@?16@0:8
@"BRCSyncContext"
[16C]
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_os_transaction>"
@"NSDate"
@"NSError"
@"NSObject<OS_dispatch_source>"
@"NSObject<OS_dispatch_group>"
@"NSHashTable"
@"NSObject<OS_os_activity>"
@"NSMutableArray"
@"BRCThrottle"
@"CKOperationGroup"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B24@0:8@"NSError"16
@"NSNumber"16@0:8
v32@0:8@16@?24
@"BRCServerChangeState"
v36@0:8I16@20@?28
@"BRCServerZone"
@32@0:8@16Q24
@"BRCItemGlobalID"
@"NSSet"
@"BRCAppLibrary"
@"ICDBRFileObjectID"
B48@0:8{?=[8I]}16
@48@0:8{?=[8I]}16
@64@0:8@16@24{?=[8I]}32
{?=[8I]}16@0:8
c24@0:8@16
c16@0:8
{?="val"[8I]}
@24@0:8Q16
@36@0:8@16c24@28
v24@0:8q16
@40@0:8c16@20B28@32
@"BRCAccountSession"
Q24@0:8@16
@32@0:8B16C20@24
@36@0:8@16@24B32
v92@0:8@16@24@32@40@48@56@64Q72B80B84C88
@32@0:8q16@24
v24@0:8Q16
@24@0:8^@16
@"NSDictionary"24@0:8^@16
Vv24@0:8@16
v32@0:8@"CKShareMetadata"16@?<v@?@"NSError">24
Vv24@0:8@"NSURL"16
v24@0:8@?<v@?@"FPSandboxingURLWrapper"@"NSError">16
v24@0:8@?<v@?@"NSData"@"NSError">16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B44@0:8@16@24B32^@36
B40@0:8@16B24B28^@32
@36@0:8@16B24^@28
B32@0:8^{backup_detector=QQQ}16^@24
B56@0:8{backup_detector=QQQ}16^{backup_detector=QQQ}40^@48
@32@0:8@16^@24
^{PQLResultSet=#}16@0:8
^{PQLResultSet=#}32@0:8Q16Q24
v28@0:8@16B24
B36@0:8@16B24^@28
B48@0:8@16@24@32^@40
B28@0:8B16^@20
B52@0:8@16@24@32B40^@44
v32@0:8@16^{NSObject=#}24
B48@0:8@16B24@28B36^@40
B56@0:8@16B24@28@36B44^@48
B68@0:8@16B24@28@36^I44^I52^@60
B60@0:8@16@24@32B40I44I48^@52
B44@0:8@16B24@28^@36
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
B48@0:8@16@24@?32^@40
B72@0:8@16@24@32@40@48@56@64
B64@0:8@16@24@32@40@48@56
@"NSMutableDictionary"
@"CKRecordID"
@"BRCItemID"
v28@0:8Q16I24
v36@0:8Q16I24@?28
v32@0:8@16B24B28
@"BRCMetricEndpoint"
@"CKEventMetric"
I16@0:8
v20@0:8I16
@"NSUUID"
@"NSMutableSet"
v32@0:8@16Q24
v32@0:8Q16@24
@"CKServerChangeToken"
v40@0:8@16@24@?32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@16@24q32q40
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURL"32
v56@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40
@"NSOperationQueue"
@"NSURLSession"
@"NSDictionary"
@56@0:8@16@24@32@40^@48
v36@0:8@16B24@28
@48@0:8@16@24@32^@40
@44@0:8@16@24B32^@36
@52@0:8@16@24@32B40^@44
i20@0:8i16
C16@0:8
@"BRCGenerationID"
[32C]
{timespec="tv_sec"q"tv_nsec"q}
@28@0:8@16i24
B32@0:8@16^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}24
v20@0:8c16
@"BRFieldCKInfo"
@"BRCUserRowID"
@20@0:8B16
@"NSNumber"
@20@0:8i16
i24@0:8@16
v20@0:8i16
{?="mtime"b1"xattrIndex"b1"isExecutable"b1"isWritable"b1}
@32@0:8@"NSXPCConnection"16@"NSString"24
@"NSXPCInterface"16@0:8
@40@0:8@16@24@?32
@"NSProgress"32@0:8@"CKShare"16@?<v@?@"CKShare"@"NSError">24
@"NSProgress"40@0:8@"CKShare"16@"NSString"24@?<v@?@"NSURL"@"CKShare"@"NSError">32
v24@0:8@?<v@?B>16
v24@0:8@?<v@?@"NSError">16
v32@0:8@"BRCAccountHandler"16@"BRCAccountSession"24
v40@0:8@16Q24@?32
@56@0:8@16{CGSize=dd}24@?40@?48
@32@0:8Q16@?24
v40@0:8@"NSURL"16Q24@?<v@?@"NSError">32
v32@0:8@"NSURL"16@?<v@?@"NSError">24
@"<NSFileProviderItem>"32@0:8@"NSURL"16^@24
@"NSProgress"32@0:8@"NSString"16@?<v@?@"<NSFileProviderItem>"@"NSError">24
v32@0:8@"NSDate"16@?<v@?>24
v32@0:8@"FPCTLTermDumper"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
@"NSProgress"56@0:8@"NSArray"16{CGSize=dd}24@?<v@?@"NSString"@"NSData"@"NSString"@"NSError">40@?<v@?@"NSError">48
v40@0:8@"NSString"16@"NSString"24@?<v@?@"<NSFileProviderItem>"@"NSError">32
@"NSProgress"32@0:8@"NSString"16@?<v@?@"NSURL"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"<NSFileProviderItem>"@"NSError">24
@"NSProgress"32@0:8Q16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?>24
v40@0:8@"NSError"16Q24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSArray">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSArray">32
@"NSArray"16@0:8
v24@0:8@?<v@?@"NSArray"@"NSError">16
@28@0:8@16B24
v56@0:8@16Q24@32Q40@?48
v48@0:8@16@24Q32@?40
{CGSize=dd}32@0:8{CGSize=dd}16
v64@0:8@16@24{CGSize=dd}32@48@?56
v104@0:8@16@24@32@40@48@56@64@72@80@88@?96
@48@0:8@16@24@32@?40
@56@0:8@16@24@32@40@?48
v56@0:8@16@24Q32@40@?48
@32@0:8#16@24
@24@0:8@?16
@"BRCAccountHandler"
@"NSFileProviderManager"
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@"NSMapTable"
@20@0:8C16
q32@0:8r*16Q24
{CC_SHA1state_st="h0"I"h1"I"h2"I"h3"I"h4"I"Nl"I"Nh"I"data"[16I]"num"i}
[21C]
@"CKContainer"
@"ACAccountStore"
@28@0:8i16@20
@56@0:8@16@24@32@?40@48
{brc_job_update=iq}60@0:8@16@24i32@36@44@52
v28@0:8@16i24
q40@0:8^{throttle_stamps=Iiqqq}16@24q32
v44@0:8^{throttle_stamps=Iiqqq}16@24@32B40
B28@0:8i16@20
v44@0:8i16^{NSObject=#}20@28@?36
@"BRCDeadlineSource"
@"PQLNameInjection"
@60@0:8@16@24Q32Q40B48@?52
v32@0:8q16@?24
@"BRCNotificationPipe"
@24@0:8@?<v@?@"NSError">16
v32@0:8@"BRCListDirectoryContentsOperation"16@"BRCListDirectoryContentsOperation"24
@48@0:8@16@24@32Q40
v36@0:8S16@20@?28
v36@0:8@16S24@?28
@"<ICDBRItemNotificationReceiving>"
@"ICDBRNotificationQueue"
@"BRFrameworkClient"
@"BRCDataOrDocsScopeGatherer"
@"BRCListDirectoryContentsOperation"
@"BRCNotificationManager"
@"<BRCNotificationPipeDelegate>"
v44@0:8@16S24@28@?36
v28@0:8S16@?20
v24@0:8@?<v@?>16
v36@0:8S16@"NSArray"20@?<v@?@"NSError">28
v28@0:8S16@?<v@?@"NSError">20
v44@0:8@"NSString"16S24@"NSArray"28@?<v@?@"NSError">36
v36@0:8@"ICDBRFileObjectID"16S24@?<v@?@"NSError">28
v40@0:8@"CKShareMetadata"16@"BRCAccountSession"24@?<v@?B@"NSError">32
v32@0:8@"CKShareMetadata"16@?<v@?BB@"NSError">24
v32@0:8@"CKShareMetadata"16@?<v@?B@"NSError">24
v32@0:8@"CKShareMetadata"16@?<v@?>24
v32@0:8@"CKShareMetadata"16@?<v@?B>24
v32@0:8@"NSURL"16@?<v@?>24
v40@0:8Q16@24@?32
@?24@0:8@?16
v48@0:8Q16@24@32@?40
^{__CFUserNotification=}
^{__CFRunLoopSource=}
v28@0:8^{sqlite3_stmt=}16i24
@24@0:8^{sqlite3_value=}16
@28@0:8^{sqlite3_stmt=}16i24
@24@0:8@"BRCAccountSession"16
v36@0:8i16@20@28
v36@0:8i16q20@28
v36@0:8q16@24i32
v32@0:8i16I20@24
v40@0:8i16I20@24@32
v40@0:8i16I20q24@32
v40@0:8@16@24i32I36
v36@0:8q16i24@28
B28@0:8@16I24
v36@0:8@16@24I32
Q32@0:8q16@24
v44@0:8@16Q24q32B40
v32@0:8@16q24
B40@0:8@16^Q24Q32
@"NSPredicate"
@72@0:8@16@24@32@40@48@56B64B68
I24@0:8I16I20
B20@0:8I16
I24@0:8@16
^{PQLResultSet=#}80@0:8Q16Q24@32B40B44B48B52B56B60Q64@72
^{PQLResultSet=#}60@0:8@16B24Q28Q36Q44@52
^{PQLResultSet=#}52@0:8@16C24Q28Q36@44
q24@0:8@16
^{BRCDirectoryItem=#@@@@@@@@@I@Q@BQQQC@}16@0:8
@"ICDBRMangledID"
@"BRCPrivateClientZone"
@"brc_task_tracker"
@"<BRCAppLibraryDelegate>"
@"BRCPQLConnection"
@"BRCALRowID"
@"BRCZoneRowID"
@"ICDBRContainer"
@24@0:8q16
q20@0:8I16
q40@0:8q16^I24q32
q32@0:8^v16Q24
q36@0:8q16q24B32
@"BRCMinHeap"
v32@0:8@"<NSFileProviderEnumerationObserver>"16@"NSData"24
v32@0:8@"<NSFileProviderChangeObserver>"16@"NSData"24
v24@0:8@?<v@?@"NSData">16
@"BRFileProviderExtension"
@"PQLFormatInjection"16@0:8
@"PQLRawInjection"16@0:8
@36@0:8Q16@24i32
@44@0:8@16i24q28^q36
@"PQLResultSet"
v44@0:8@16i24i28@32B40
@36@0:8@16i24@28
v48@0:8@16@24@32@40
v36@0:8@16i24@28
v40@0:8@16@24^i32
v40@0:8@16Q24Q32
v32@0:8q16@24
v40@0:8@16q24Q32
v48@0:8@16Q24Q32q40
v56@0:8@16Q24Q32q40@?48
@"BRCFairScheduler"
@"BRCDeadlineScheduler"
@40@0:8@16q24@32
@32@0:8[16C]16@24
@36@0:8@16B24@28
@36@0:8q16B24@28
@32@0:8d16@24
@48@0:8q16B24@28B36@40
@44@0:8q16B24@28@36
@32@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16@24
@32@0:8@16q24
^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16@0:8
@"BRCDumper"
^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}
@64@0:8@16@24@32@40@48Q56
B32@0:8@16Q24
v32@0:8Q16@?24
v36@0:8B16@?20@?28
c28@0:8@16B24
v28@0:8@16I24
C36@0:8B16B20C24@28
B52@0:8B16B20C24@28@36@44
@"BRCItemID"16@0:8
B24@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16
@"BRCStatInfo"16@0:8
@"BRCUserRowID"16@0:8
@"BRCAccountSession"16@0:8
@"BRCServerZone"16@0:8
@"BRCClientZone"16@0:8
Q32@0:8@16B24B28
B24@0:8Q16
v28@0:8Q16B24
S16@0:8
B20@0:8B16
v40@0:8@16@24Q32
B40@0:8@16Q24^@32
@"BRCClientZone"
@"BRCLocalStatInfo"
@"BRCLocalItem"
B28@0:8i16^@20
@36@0:8i16Q20^@28
B60@0:8i16^@20^@28^@36Q44^@52
v40@0:8@16^@24^@32
B32@0:8i16B20^@24
v40@0:8@"PKPushRegistry"16@"PKPushCredentials"24@"NSString"32
v40@0:8@"PKPushRegistry"16@"PKPushPayload"24@"NSString"32
v48@0:8@"PKPushRegistry"16@"PKPushPayload"24@"NSString"32@?<v@?>40
v32@0:8@"PKPushRegistry"16@"NSString"24
v24@0:8@"BRCClientZone"16
v24@0:8@"BRCAppLibrary"16
@"BRCFairSource"
@"PKPushRegistry"
@"BRCContainerMetadataSyncPersistedState"
^{_BRCOperation=#@[16C]}
@"BRCZoneHealthSyncPersistedState"
@"BRCSideCarSyncPersistedState"
@"BRCMigrateZonePCSOperation"
@"BRCSyncBudgetThrottle"
B40@0:8@16@?24^@32
@"CKRecord"
@"BRCLocalVersion"
@"CKRecordID"16@0:8
@"BRCProgress"16@0:8
@"CKRecord"16@0:8
v24@0:8@"CKRecord"16
@40@0:8@16@24Q32
@"BRCProgress"
v48@0:8@16@24@32Q40
@40@0:8@16@?24@?32
@"BRCPendingChangesStream"
B32@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16@24
B32@0:8@"BRCDumpContext"16^@24
B32@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16@"PQLConnection"24
@"BRCZoneRowID"16@0:8
v24@0:8@"BRCZoneRowID"16
@"BRCPQLConnection"16@0:8
@"NSMutableDictionary"16@0:8
@48@0:8@16@24@32@40
B80@0:8@16@24@32@40@48@56@64@72
B56@0:8@16@24@32@40^@48
B48@0:8@16@24@32Q40
B40@0:8@16@24@32
@20@0:8c16
Q76@0:8Q16@24@32@40@48^@56B64@68
Q32@0:8@16@24
v48@0:8@16@?24@?32@40
@28@0:8c16@20
@32@0:8B16@20C28
B32@0:8^@16@24
B56@0:8^@16@24B32#36B44^@48
B64@0:8^@16^@24^@32^@40@48^@56
B40@0:8^@16@24^@32
v24@0:8^Q16
B32@0:8^Q16^@24
B56@0:8^@16^@24@32@40^@48
B32@0:8^@16^@24
B48@0:8^@16^@24@32^@40
B40@0:8^@16^@24@32
v36@0:8@16B24B28B32
v48@0:8@16Q24@32B40C44
v36@0:8@16Q24B32
v36@0:8@16@24B32
@20@0:8S16
@36@0:8@16f24^Q28
B28@0:8f16^Q20
B24@0:8@?16
v52@0:8@16@24@32@40B48
f16@0:8
v32@0:8@"NSOperation"16@"NSURL"24
v24@0:8@"NSOperation"16
v32@0:8@"NSOperation"16@"NSError"24
@32@0:8Q16@24
v24@0:8:16
@"<BRCUserNotifier>"
@"CKShareMetadata"
@"BRCAcceptShareOperation"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
@"BRCServerDefaultsDownloader"
B32@0:8:16^@24
@32@0:8@16#24
@"BRCClientPrivilegesDescriptor"
@"NSCountedSet"
@"NSXPCConnection"
v24@0:8d16
d16@0:8
v20@0:8f16
d24@0:8f16i20
d24@0:8@16
f24@0:8@16
[8f]
@24@0:8r*16
@24@0:8^{RootItemObject=C(?=II)}16
@24@0:8^{_UUIDItemObject_OLD=CI[16C]}16
(?="value"I""{?="isFault"b1"startDownload"b1"wantsThumbnail"b1"userInitiated"b1"wantsContentForThumbnail"b1})
@"BRCClientRanksPersistedState"
@"NSObject<OS_dispatch_workloop>"
@60@0:8@16@24@32@40@48B56
v24@0:8r*16
v32@0:8r*16@?24
v24@0:8I16I20
^{PQLResultSet=#}32@0:8@16@24
c32@0:8@16@24
v40@0:8@16@24q32
v44@0:8Q16q24B32@36
v24@0:8^{_BRCOperation=#@[16C]}16
@32@0:8@16B24B28
q32@0:8@16@24
v32@0:8@?16@24
v60@0:8@16@24@32^i40B48@52
v36@0:8Q16@24i32
@"<BRCClientZoneDelegate>"
@"BRCThrottleBase"
@"BRCCreateZoneAndSubscribeOperation"
@"BRCSyncUpOperation"
@"BRCSyncDownOperation"
@"BRCSyncOperationThrottle"
@"NSMutableIndexSet"
@"<NSObject>"
@"BRCFetchRecentAndFavoriteDocumentsOperation"
v48@0:8@"NSArray"16@"NSDictionary"24@"NSDictionary"32@?<v@?>40
v32@0:8@"NSArray"16@?<v@?>24
@44@0:8@16B24@28@36
v68@0:8@16@24C32Q36Q44@52@?60
@"<ICDBRItemNotificationSending>"
@32@0:8r*16Q24
@"BRCStageRegistry"
@"CKPackage"
v28@0:8i16@20
v48@0:8@16^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}24@32^B40
@"BRCServerZoneHealthState"
@"BRCProblemReport"
@"NSProgress"
@"BRCItemAggregatedProperties"
C24@0:8@16
f32@0:8@16@24
@"BRCUserDefaults"
@"BRCServerStatInfo"
@"BRCVersion"
@"BRCServerMetrics"
B24@0:8^{sqlite3_value=}16
@48@0:8@16^@24^@32@40
B28@0:8@16B24
r*16@0:8
v24@0:8#16
@28@0:8i16Q20
@"NSInputStream"
@"PBMessageStreamReader"
B28@0:8@16S24
S24@0:8@16
B32@0:8@16i24i28
B60@0:8@16@24@32@40i48@52
@"PBMessageStreamWriter"
@"NSOutputStream"
@"BRCChecksummingOutputStream"
^{NSMutableDictionary=#}20@0:8c16
Q44@0:8@16^Q24^@32c40
v28@0:8@16c24
v48@0:8@16@24@32^v40
^{NSMutableDictionary=#}
v48@0:8@16@?24@?32@?40
v28@0:8B16@?20
@"CKQueryCursor"
v24@0:8@?<v@?B@"<BRFileProviderItem>"@"NSError">16
@"NSProgress"24@0:8@?<v@?B@"<BRFileProviderItem>"@"NSArray<BRFileProviderItem>"@"NSArray<BRFileProviderItem>"@"NSError">16
@"NSProgress"24@0:8@?<v@?@"NSArray"q@"NSError">16
@"NSProgress"24@0:8@?<v@?@"CKShare"@"NSError">16
@"NSProgress"24@0:8@?<v@?@"NSURL"@"NSError">16
@"NSProgress"24@0:8@?<v@?@"NSError">16
@"CKShare"
v36@0:8@16B24@?28
@"BRCDocumentItem"
@"BRCServerItem"
@40@0:8@16Q24Q32
@48@0:8@16@24@32I40B44
d32@0:8@16@24
@"CKRecordZoneID"
@"CKRecordZone"
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
@"BRCPrivateServerZone"
S36@0:8@16Q24B32
i20@0:8C16
i28@0:8C16@?20
B64@0:8@16@24@32@40@48^@56
B72@0:8@16@24@32@40@48@56^@64
B32@0:8i16i20@24
@40@0:8Q16^C24^I32
B48@0:8@16^Q24^I32^@40
B36@0:8i16@20@28
B32@0:8Q16@24
B32@0:8Q16^I24
q28@0:8q16i24
v24@0:8i16B20
Q24@0:8@?16
q24@0:8q16
[10@"NSString"]
[10Q]
@"BRCStagePersistedState"
v32@0:8@"NSString"16@?<v@?@"NSError">24
@"BRCNonLocalVersionsSender"
@"NSMutableOrderedSet"
@"<NSFileProviderEnumerationObserver>"
v32@0:8Q16Q24
v48@0:8q16Q24@32@?40
@32@0:8Q16Q24
v44@0:8@16B24Q28@?36
@"BRCWorkingSetEnumerationState"
@"NSIndexSet"
@44@0:8@16@24@32B40
@"GSPermanentStorage"
@"BRCLocalItem"16@0:8
@"BRCZonePurgeOperation"
v40@0:8@16Q24@32
Q36@0:8@16@24B32
v64@0:8@16@24@32@40@48@56
@56@0:8@16@24@32@40c48I52
@"BRCPCSChainInfo"
^{PQLResultSet=#}
v64@0:8@16{?=[8I]}24@?56
@"BRFieldPkgItem"
{?="size"b1"generationID"b1}
v24@0:8@?<v@?QQ@"NSError">16
@"NSProgress"24@0:8@?<v@?@"NSString"@"NSString"@"NSString"@"NSDate"@"NSError">16
@"NSProgress"24@0:8@?<v@?BB@"NSURL"@"NSError">16
v24@0:8@?<v@?@"NSURL"@"NSError">16
@"NSProgress"24@0:8@?<v@?B@"NSError">16
v24@0:8@"NSDictionary"16
@24@0:8^B16
B40@0:8@16B24B28Q32
v36@0:8B16@20@?28
v44@0:8B16@20@28@?36
@40@0:8@16@24^B32
@52@0:8@16@24^B32@40B48
v44@0:8@16@24@32B40
@32@0:8@16^I24
@32@0:8@16^B24
Q20@0:8B16
Q24@0:8B16B20
@"BRCRecursiveListDirectoryContentsOperation"
@"BRCClientState"
@"BRCServerPersistedState"
{brc_mutex="pthread"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}
@"BRCGlobalProgress"
@"BRCAccountWaitOperation"
@"BRCVersionsFileProvider"
@"BRCCloudDocsAppsMonitor"
@"ICDBRContainerCache"
@"BRCContainerScheduler"
@"BRCDaemonContainerHelper"
@"BRCApplyScheduler"
@"BRCVolume"
@"BRCFSUploader"
@"BRCFSDownloader"
@"BRCSyncUpScheduler"
@"BRCFSImporter"
@"BRCFSWriter"
@"BRCUserNotification"
@"BRCInflightProgressTracker"
@"BRCDiskSpaceReclaimer"
@"BRCFileUnlinker"
@"BRCRecentsEnumerator"
@"BRCAnalyticsReporter"
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSDictionary"@"NSDictionary"@"NSArray"@"NSError">40
v32@0:8d16@24
v28@0:8i16i20i24
@28@0:8i16i20i24
v24@0:8i16i20
B48@0:8@16^@24^@32^@40
B64@0:8@16@24^@32^@40^@48^@56
v68@0:8@16@24q32@40@48B56^B60
r^*16@0:8
@40@0:8i16q20B28^@32
@"NSMutableData"
v44@0:8@16@24B32@?36
Q24@0:8Q16
v32@0:8@"BRCClientZone"16@"NSError"24
B44@0:8@16i24@?28^@36
B48@0:8^@16^@24^@32@40
B56@0:8@16^@24^@32^@40@48
@"CKQueryOperation"
B32@0:8q16@?24
q32@0:8@16B24B28
B64@0:8@16@24@32@40@48q56
Q28@0:8B16r^*20
B24@0:8q16
v32@0:8@"NSString"16@?<v@?@"NSData"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"FPSandboxingURLWrapper"@"FPSandboxingURLWrapper"@"NSError">24
v32@0:8@"<ICDBRItemNotificationReceiving>"16@?<v@?@"<ICDBRItemNotificationSending>"@"NSDictionary"@"NSError">24
v32@0:8@"NSFileHandle"16@?<v@?@"NSError">24
v28@0:8B16@?<v@?@"NSError">20
v24@0:8@?<v@?B@"NSError">16
v40@0:8@"NSFileHandle"16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?@"FPSandboxingURLWrapper"@"NSError">24
v32@0:8@"BRCNotificationPipe"16@"BRCAppLibrary"24
@20@0:8I16
B48@0:8@16@24@32^B40
@80@0:8@16@24@32@40Q48Q56@64^@72
S40@0:8@16@24^@32
B72@0:8@16@24Q32@40@48@56^@64
v36@0:8@16@24i32
v44@0:8@16@24Q32i40
^{PQLResultSet=#}32@0:8@16Q24
q32@0:8Q16@24
B32@0:8q16q24
@"BRCTransferStream"
@40@0:8@16@24B32B36
{?="size"b1}
d40@0:8@16@24@32
@36@0:8@16B24@?28
i36@0:8@16i24i28i32
I36@0:8@16I24I28I32
Q48@0:8@16Q24Q32Q40
f40@0:8@16B24f28f32f36
f36@0:8@16f24f28f32
d48@0:8@16d24d32d40
B32@0:8@16B24B28
@24@0:8i16B20
Q36@0:8[256c]16i24i28i32
v32@0:8r*16Q24
@32@0:8r^v16Q24
@28@0:8B16@?20
@"NSProgress"24@0:8@?<v@?@"NSString"@"NSError">16
@"NSProgress"24@0:8@?<v@?@"NSData"@"NSString"@"NSError">16
@"NSProgress"28@0:8B16@?<v@?@"NSData"@"NSString"@"NSError">20
@28@0:8@16C24
@40@0:8@16^{_BRCOperation=#@[16C]}24@32
B40@0:8@16q24q32
@"NSURL"16@0:8
@"NSOperationQueue"16@0:8
v40@0:8@"NSURL"16@24@?<v@?@"NSError">32
v32@0:8@"NSURL"16@24
@"NSURL"24@0:8@"NSURL"16
v32@0:8@"NSURL"16@?<v@?@"NSURL">24
v32@0:8@16@"NSURL"24
v40@0:8@"NSURL"16@24@"NSURL"32
d20@0:8i16
q32@0:8@16q24
q36@0:8@16q24i32
@"<NSFileProviderItemFlags>"16@0:8
@"NSDate"16@0:8
@"NSDictionary"16@0:8
@"NSData"16@0:8
@"NSError"16@0:8
@"NSPersonNameComponents"16@0:8
@"NSFileProviderItemVersion"16@0:8
@"NSSet"16@0:8
@"NSFileProviderSearchQuery"
^{NSObject=#}
v28@0:8@"ICDBRReachabilityMonitor"16B24
v28@0:8@"ICDBRReachabilityMonitor"16I24
@"ICDBRReachabilityMonitor"
@"NSXPCListenerEndpoint"24@0:8^@16
@40@0:8#16@24@32
@"GSAddition"
@"NSPersonNameComponents"
@"<ICDBRNonLocalVersionReceiving>"
