@(#)PROGRAM:iCloudDriveCore  PROJECT:CloudDocs-1177.2.1.152.1
dflwx
MbP?
 A(knN
%@ %@
serverTruthDirCount
serverTruthDirFaultCount
clientTruthDirFaultCount
timeSinceLogin
serverTruthTotalItemsCount
%@/%@
docID:
unsaltedBookmarkData
-[NSString(BRCBookmarkAdditions) parseUnsaltedBookmarkDataWithItemID:mangledID:error:]
(passed to caller)
(ignored by caller)
bookmarkData
-[NSString(BRCBookmarkAdditions) parseBookmarkDataWithAccountSession:docID:itemID:mangledID:unsaltedBookmarkData:error:]
BRGetFileNameFromServerInfoBlob
-[BRCAppLibrary(FPFSAdditions) createDocumentsFolder]
BRCAppLibrary+FPFSAdditions.m
importObject.isUnixDir
knownToServer
wasCached
etag
etagBeforeCrossZoneMove
deletionChangeToken
 etag:%@
 fav:%lld
 lu:%lld
 has-finder-tags
<%@:%p {etag : %@; fr: %lld; lu : %lld; ft: %s}>
<%@:%p>, device:'%s' mounted-on:'%s' fstype:%s(%@) case-sensitive:%s
RDONLY
SYNCHRONOUS
NOEXEC
NOSUID
NODEV
UNION
ASYNC
CPROTECT
EXPORTED
QUARANTINE
LOCAL
QUOTA
ROOTFS
DOVOLFS
DONTBROWSE
IGNORE_OWNERSHIP
AUTOMOUNTED
JOURNALED
NOUSERXATTR
DEFWRITE
MULTILABEL
NOATIME
v8@?0
SELECT %@ FROM %@ WHERE %@ IS NOT NULL ORDER BY %@ ASC LIMIT 1
side-car-sync
v16@?0@"NSError"8
INSERT OR REPLACE INTO side_car_lookahead (record_name, root_alias_record_name, item_favoriterank, item_lastusedtime, item_side_car_ckinfo, item_finder_tags) VALUES (%@, %@, %@, %@, %@, %@)
UPDATE server_items SET item_favoriterank = %@, item_lastusedtime = %@, item_finder_tags = %@, item_side_car_ckinfo = %@, item_rank = NULL WHERE zone_rowid = %@ AND item_id = %@
UPDATE server_items SET item_favoriterank = NULL, item_lastusedtime = NULL, item_finder_tags = NULL, item_side_car_ckinfo = NULL, item_rank = NULL WHERE zone_rowid = %@ AND item_id = %@
DELETE FROM side_car_lookahead WHERE record_name = %@
B16@?0@"PQLConnection"8
v16@?0@"CKRecord"8
v24@?0@"CKRecordID"8@"NSString"16
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
folderToPackageCount
folderToFileCount
folderToSymlinkCount
folderToAliasCount
packageToFolderCount
packageToFileCount
packageToSymlinkCount
packageToAliasCount
fileToFolderCount
fileToPackageCount
fileToSymlinkCount
fileToAliasCount
symlinkToFolderCount
symlinkToPackageCount
symlinkToFileCount
symlinkToAliasCount
aliasToFolderCount
aliasToPackageCount
aliasToFileCount
aliasToSymlinkCount
nonConflictingKindCount
Sqlite database became corrupted, abort...
-[BRCPQLConnection _setErrorHandlerWithDBCorruptionHandler:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/foundation/BRCPQLConnection.m
v32@?0@"PQLConnection"8@"PQLStatement"16@"NSError"24
B32@?0@"BRCPQLConnection"8@"PQLStatement"16@"NSError"24
%@ locked for more than 1 minute, aborting...
-[BRCPQLConnection _setLockedHandler]_block_invoke
%@ has been locked for %f seconds: %@
 (for statement %@)
(null)
Significantly too slow SQL statement: 
v32@?0@"PQLConnection"8^{sqlite3_stmt=}16Q24
ATTACH "%@" AS %@
-[BRCPQLConnection attachDBAtPath:as:error:]
setting profiling hook is not supported on %@
-[BRCPQLConnection setProfilingHook:]
com.apple.bird.db.batching
B20@?0@"PQLConnection"8i16
error closing connection %@: %@
-[BRCPQLConnection brc_close]
pragma page_count
pragma page_size
explain query plan %@
plan:
    %@
<%@: %p
finished
cancelled
executing
ready
waiting
 %s>
UNIMPLEMENTED
idle
 duration:%@
 (bypassing system scheduling)
 next-try:%@
 next-try:%@ ago
 last-error:%@
 last-try:%@
 sub {
    %@,
 dep {
isFinished
isExecuting
com.apple.bird.operation
failed
completed
with error: 
__defaultPersonaID__
X-APPLE-APP-TELEMETRY
x-apple-app-telemetry-new-server-token
v16@?0@"CKRequestInfo"8
remote:%p
sharedZoneSubscription
com.apple.sharedb
sync/sharedb
success
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v16@?0@"CKRecordZoneID"8
v28@?0@"CKServerChangeToken"8B16@"NSError"20
+[BRCLocalItem(BRCBookmarkAdditions) parseUnsaltedBookmarkData:itemID:mangledID:error:]
+[BRCLocalItem(BRCBookmarkAdditions) parseBookmarkData:inAccountSession:itemID:mangledID:unsaltedBookmarkData:error:]
 i:%@
 parent-id:%@
 sc:data
 sc:docs
 sc:trash
 old-pino:%lld
 alias-container:%@
 unsalted-bookmark-data:%@
 reverse-alias-containers:{%@}
 old-ct:%@
com.apple.finder.copy.preserveinbackups.com.apple.clouddocs.private.share-bookmark#N
com.apple.finder.copy.preserveinbackups.com.apple.clouddocs.private.trash-parent-bookmark#N
.rootContainerItemNotification
tags
BRCSizeInfoCompletedUnitCountKey
BRCSizeInfoTotalUnitCountKey
indeterminate
paused
s:%@ 
%@f:%.4f uc:%lld/%lld
v32@?0@8@"NSProgress"16^B24
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/notifs/BRCProgress.m
+[BRCProgress _progressForDocument:group:sizeInfo:]
-[BRCProgress addAliasItem:]
v16@?0@"PQLConnection"8
B16@?0@"BRCAppLibrary"8
-[BRCDaemonContainerHelper br_capabilityToMoveFromLocalItem:toNewParent:session:error:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/framework-helpers/BRCDaemonContainerHelper.m
-[BRCDaemonContainerHelper itemIDForURL:error:]
ClientItemsNotKnownByServer
UnexpectedItemsCreated
readonly-interactive-db
readonly-expensive-db
db-corrupting-handler-queue
db was corrupted with description - '%@' and due to - %@
-[BRCAccountSession(BRCDatabaseManager) dbBecameCorruptedWithDescription:error:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/database/BRCDatabaseManager.m
Invoked from DB Corruption Handler
v32@?0@"PQLConnection"8@"NSError"16@?<v@?>24
serverTruth
clientTruth
client.db
can't open the client db we've just created %{errno}d
-[BRCAccountSession(BRCDatabaseManager) _startWatcher]
someone ripped the database from under our feet
-[BRCAccountSession(BRCDatabaseManager) _startWatcher]_block_invoke
checker.db
fetch_and_inc64
v28@?0^{sqlite3_context=}8i16^^{sqlite3_value}20
inc_and_fetch64
fetch_and_dec64
dec_and_fetch64
call_block
indexset_contains
migration_is_parented_or_equal_to_old_doc_id
root
documents
SELECT item_parent_id FROM client_items WHERE zone_rowid = %@ AND item_id = %@
document_is_evictable
document_is_indexable
item_id_is_root
item_id_is_documents
item_id_is_shared_root
trigger_notification
bump_notifs_rank
bump_notifs_rank_and_trigger_notifs
checker
%@.db
control-odd
control-even
-[BRCAccountSession(BRCDatabaseManager) _setupBackupDetector:error:]
-[BRCAccountSession(BRCDatabaseManager) _stepBackupDetector:newState:error:]
UPDATE server_zones SET zone_plist = %@ WHERE rowid = %@
UPDATE client_zones SET zone_plist = %@ WHERE rowid = %@
INSERT OR IGNORE INTO server_zones (zone_owner, zone_name, zone_plist) VALUES (%@, %@, %@)
SELECT rowid from server_zones WHERE zone_owner = %@ and zone_name = %@
DELETE FROM server_zones WHERE rowid = %@
SELECT container_id, rowid FROM rowid_reservations
INSERT INTO rowid_reservations (container_id) VALUES (%@)
UPDATE app_libraries SET app_library_plist = %@, zone_rowid = %@ WHERE rowid = %@
INSERT OR REPLACE INTO app_libraries (rowid, app_library_name, app_library_plist, zone_rowid)  VALUES (%@, %@, %@, %@)
DELETE FROM app_libraries WHERE rowid = %@
SELECT rowid, app_library_name, app_library_plist, zone_rowid FROM app_libraries
@24@?0@"PQLResultSet"8^@16
INSERT OR REPLACE INTO client_zones (rowid, zone_owner, zone_name, zone_plist) VALUES (%@, %@, %@, %@)
DELETE FROM client_zones where rowid = %@
SELECT rowid, zone_owner, zone_name, zone_plist FROM client_zones WHERE zone_owner != %@
SELECT rowid, zone_owner, zone_name, zone_plist FROM server_zones WHERE zone_owner != %@
SELECT rowid, zone_owner, zone_name, zone_plist FROM server_zones WHERE zone_owner = %@ AND zone_name = %@
SELECT rowid, zone_owner, zone_name, zone_plist FROM client_zones WHERE zone_owner = %@
SELECT rowid, zone_owner, zone_name, zone_plist FROM client_zones WHERE zone_owner = %@ AND zone_name = %@ AND zone_plist IS NOT NULL
SELECT rowid, zone_owner, zone_name, zone_plist FROM client_zones WHERE zone_owner = %@ AND rowid = %@
SELECT rowid, zone_owner, zone_name, zone_plist FROM server_zones WHERE zone_owner = %@
<rdar://problem/23820733>
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE (item_staged_file_id BETWEEN -9223372036854775808 AND 9223372036854775807)   AND (item_staged_file_id != item_file_id OR item_file_id IS NULL)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE item_bouncedname LIKE '%%.folder'   AND item_filename NOT LIKE '%%.folder'   AND item_type = 0   AND item_state IN (0, -1)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE item_tmpbounceno IS NOT NULL
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items AS li   WHERE li.item_notifs_rank >= %lld   ORDER BY li.item_notifs_rank ASC LIMIT %lld
SELECT li.rowid, li.zone_rowid, li.item_id, li.item_creator_id, li.item_sharing_options, li.item_side_car_ckinfo, li.item_parent_zone_rowid, li.item_localsyncupstate, li.item_local_diffs, li.item_notifs_rank, li.app_library_rowid, li.item_min_supported_os_rowid, li.item_user_visible, li.item_stat_ckinfo, li.item_state, li.item_type, li.item_mode, li.item_birthtime, li.item_lastusedtime, li.item_favoriterank,li.item_parent_id, li.item_filename, li.item_hidden_ext, li.item_finder_tags, li.item_xattr_signature, li.item_trash_put_back_path, li.item_trash_put_back_parent_id, li.item_alias_target, li.item_creator, li.item_processing_stamp, li.item_staged_file_id, li.item_staged_generation, li.item_bouncedname, li.item_scope, li.item_local_change_count, li.item_old_version_identifier, li.version_name, li.version_ckinfo, li.version_mtime, li.version_size, li.version_thumb_size, li.version_thumb_signature, li.version_content_signature, li.version_xattr_signature, li.version_edited_since_shared, li.version_device, li.version_conflict_loser_etags, li.version_quarantine_info, li.version_uploaded_assets, li.version_upload_error, li.version_old_zone_item_id, li.version_old_zone_rowid, li.version_local_change_count, li.version_old_version_identifier, li.desired_version, li.item_live_conflict_loser_etags, li.item_file_id, li.item_generation, li.version_block_sync_until_bundle_id, li.version_block_sync_until_timestamp FROM client_items AS li INNER JOIN client_sync_up AS su ON su.throttle_id = li.rowid WHERE su.zone_rowid = %@   AND (su.in_flight_diffs BETWEEN -9223372036854775808 AND 9223372036854775807)   AND su.throttle_state != 0
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE item_doc_id = %u AND desired_version IS NOT NULL   AND +item_state IN (0, -1)   AND +item_type IN (1, 2, 6, 7)
SELECT key FROM devices WHERE name = %@
INSERT INTO devices (name) VALUES (%@)
SELECT user_plist FROM users WHERE user_key = %@
SELECT user_plist FROM users WHERE user_name = %@
UPDATE users SET user_plist = %@ WHERE user_name = %@
SELECT user_key FROM users WHERE user_name = %@
SELECT user_name FROM users WHERE user_key = %@
INSERT INTO users (user_name) VALUES (%@)
UPDATE client_items SET item_min_supported_os_rowid = NULL
SELECT os, br, bird_schema, db_schema FROM %@ ORDER BY rowid DESC LIMIT 1
INSERT INTO %@ (date,os,br,bird_schema,db_schema) VALUES (%lu,%@,%@,%u,%@)
DELETE FROM telemetry_events
server
client
SELECT count(*) FROM server_state
missing entry in the server_state table
+[BRCAccountSession(BRCDatabaseManager) _checkIntegrity:serverTruth:session:skipBackupDetection:error:]
server_boot_history
SELECT old, new, counter, os, br FROM backup_detector
UPDATE backup_detector set old = %llu, new = %llu, counter = %llu, br = %@
SELECT count(*) FROM client_state
missing entry in the client_state table
boot_history
UPDATE backup_detector SET os = %@
SELECT * FROM client_state
there should always be one row in client_state {%@}
-[BRCAccountSession(BRCDatabaseManager) _finishClientTruthConnectionSetupWithError:]
SELECT uuid FROM backup_detector
%lld
PRAGMA cache_size = %@
PRAGMA cache_spill = %@
B16@?0@"BRCServerZone"8
UPDATE client_state SET v = %@
unable to flush client state, crash to maintain consistency
-[BRCAccountSession(BRCDatabaseManager) _finishClientTruthConnectionSetupWithError:]_block_invoke
B16@?0@"BRCClientZone"8
CREATE TEMP TRIGGER child_item_count_notifs  AFTER UPDATE OF visible_child_count ON main.client_items  BEGIN  UPDATE client_items SET item_notifs_rank = bump_notifs_rank_and_trigger_notifs(old.rowid)   WHERE old.visible_child_count != new.visible_child_count     AND rowid = old.rowid     AND item_type = 0 ; END
SELECT state FROM server_state
there should always be one row in server_state: %@
-[BRCAccountSession(BRCDatabaseManager) _finishServerTruthConnectionSetupWithError:]_block_invoke
server.db
PRAGMA recursive_triggers = true
db is stale even after recreating
+[BRCAccountSession(BRCDatabaseManager) _openConnection:serverTruth:databaseName:baseURL:initialVersion:lastCurrentVersion:error:]
we should be able to attach the server db {%@}
SELECT bird_schema FROM server_boot_history ORDER BY rowid DESC LIMIT 1
SELECT bird_schema FROM boot_history ORDER BY rowid DESC LIMIT 1
>>> BROKEN STRUCTURE
>>> SYNC DISABLED (app not installed)
>>> NEEDS UPGRADE
- %@
-----------------------------------------------------
+ app library: %@
 - not done dumping items -
SELECT count(*) FROM boot_history
%u containers matching '%s'
-[BRCAccountSession(BRCDatabaseManager) dumpStatusToFileHandle:zoneName:tracker:error:]
-[BRCAccountSession(BRCDatabaseManager) dumpDatabaseToFileHandle:zoneName:includeAllItems:tracker:error:]
dump taken at %@ [account=%@] [inCarry=%s] [home=%@]
dump taken at %@
boot_history (startup %.1fs ago)
server_truth
SELECT date,os,br,bird_schema,db_schema FROM server_boot_history ORDER BY rowid DESC LIMIT 10
  [%s] OS:%s CloudDocs:%s BirdSchema:%u DBSchema:%u
client_truth
SELECT date,os,br,bird_schema,db_schema FROM boot_history ORDER BY rowid DESC LIMIT 10
backup_detector
SELECT old,new,counter,os,br FROM backup_detector
  [%u|%u|%u] OS:%s CloudDocs:%s DBSchema:%ld
SELECT * FROM server_state
server_state
-----------------------------------------------------
client_state
-----------------------------------------------------
devices:
SELECT key, name FROM devices
    o "%s" (%ld)
users:
SELECT user_key, user_name, user_plist FROM users
    o "%s" %s (%ld)
%u containers matching '%s'
-----------------------------------------------------
v16@?0@"BRCAccountHandler"8
-[BRCAccountSession(BRCDatabaseManager) dumpFileCoordinationInfoToFileHandle:error:]
backup
privacy
update devices set name = (key || "-" || SUBSTRING(name, 1, 1) || "{" || (LENGTH(name) - 2) || "}" || SUBSTRING(name, -1, 1))
<rdar://problem/29182551>
SELECT COUNT(1) FROM client_items
totalNumberOfItems
SELECT COUNT(1) FROM client_items WHERE item_type = 2
totalNumberOfFaults
SELECT COUNT(1) FROM client_items WHERE item_type = 1
totalNumberOfDocuments
SELECT COUNT(1) FROM client_items WHERE item_type = 0
totalNumberOfDirectories
WHERE ciconia_version %@ %llu
SELECT COUNT(uuid), COUNT(last_error) FROM ciconia_history %@
INSERT INTO ciconia_history (date, os, br, bird_schema, db_schema, ciconia_version, duration, uuid, last_error) VALUES (%lu, %@, %@, %u, %@, %llu, %f, %@, %@)
internal-db-%d.%03d
old-db-%d.%03d
DatabaseFromTheFuture
database has a major version from the future: %d (want at most %d)
fetch-recent-documents
%K == %@
indexName
SearchIndexes
unreachable: Couldn't allocate ranks when fetching query %@
v24@?0@"CKQueryCursor"8@"NSError"16
recent_documents
favorite_documents
v24@?0@"_BRCOperation"8@"NSError"16
com.apple.bird.account-migrator
com.apple.bird.account-migrator.throttle
v32@?0@"AARequest"8@"AAResponse"16@"NSError"24
v12@?0c8
com.apple.bird.handle-account-changes
com.apple.brc.push
com.apple.bird.migration-setter
com.apple.Preferences
com.apple.bird.disabled-events
com.apple.bird.push
%s-%d
com.apple.bird.sync
com.apple.bird.configuration-server-update
com.apple.bird.transmogrify
com.apple.bird.cache-delete.push
com.apple.bird.aggressive-pcs-chain
com.apple.bird.analytics-report
com.apple.bird.app-telemetry
com.apple.bird.db-integrity-check
com.apple.bird.sync-consistency-check
com.apple.ubd.prsid
not DS
com.apple.CloudDocs.iCloudDriveFileProviderManaged
-[BRCAccountHandler addFileProviderDomainForAccount:error:]
BRCAccountHandler.m
timeout == 0
session-watchdog
com.apple.bird
timed out waiting for %u seconds for account session to close!
-[BRCAccountHandler __destroySessionWithIntents:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/notifs/BRCAccountHandler.m
B16@?0Q8
Disabled - iCloud Drive database is from the future
Cannot open account session
#%lu FAIL %s
#%lu fd = %d
SqliteSQL
Still unable to open account after attempted reset: %@ (underlying: %@, sql: %@)
open result: %@
-[BRCAccountHandler _loadOnDiskAccountSessionWithError:]
v20@?0B8@"NSError"12
v16@?0@"NSObject<OS_xpc_object>"8
list-dir/
B16@?0@"NSError"8
v36@?0@"CKQueryCursor"8@"CKServerChangeToken"16B24@"NSError"28
UPDATE server_items SET item_type = 0, item_rank = NULL WHERE item_id = %@ AND zone_rowid = %@ AND item_type = 9
%K == %@ AND %K == %@ AND %K == %@
folderID
getContentRecords
getShareRecords
ListRecordsInFolder
v32@?0@"CKRecordID"8@"CKRecord"16@"NSError"24
v16@?0@"CKQueryCursor"8
Can't list changes when we haven't synced down
BRCListDirectoryContentsOperation
rec-list-dir/
rec-list fetch next item
WITH RECURSIVE item_children (item_id, zone_rowid, item_type) AS (     SELECT item_id, zone_rowid, item_type FROM server_items      WHERE zone_rowid = %@ AND item_parent_id = %@ AND item_type IN (0, 9, 10) AND NOT item_id_is_documents(item_id)  UNION ALL     SELECT si.item_id, si.zone_rowid, si.item_type FROM server_items AS si INNER JOIN item_children AS p WHERE si.item_parent_id = p.item_id AND si.zone_rowid = p.zone_rowid AND si.item_type IN (0, 9, 10)) SELECT item_id FROM item_children WHERE item_type IN (9, 10)
FSEventToSyncUp
UserDownload
analytics-reporter
wait-on-idle
v12@?0B8
SELECT retry_count FROM telemetry_failure_counts WHERE item_id = %@ AND zone_rowid = %@
DELETE FROM telemetry_failure_counts WHERE item_id = %@ AND zone_rowid = %@
INSERT OR REPLACE INTO telemetry_failure_counts (retry_count, item_id, zone_rowid) VALUES (%lld, %@, %@)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE (item_sharing_options & 4) != 0 AND item_type IN (0, 9, 10) AND rowid > %llu ORDER BY rowid ASC LIMIT 1
v16@?0@"BRCItemCountMismatchReport"8
v16@?0@"BRCSyncConsistencyReport"8
analytics metrics
%@: %@
v16@?0@"NSMutableArray"8
SyncHealthReport:
v16@?0@"NSString"8
SELECT COUNT(1) FROM telemetry_events
SELECT rowid, payload FROM telemetry_events WHERE priority = 1 ORDER BY rowid LIMIT %u
DELETE FROM telemetry_events WHERE priority = 1 AND rowid <= %llu
SELECT rowid, payload FROM telemetry_events ORDER BY rowid ASC LIMIT %llu
DELETE FROM telemetry_events WHERE rowid <= %llu
CICONIA
INSERT INTO telemetry_events (payload, priority) VALUES (%@, %d)
DELETE FROM telemetry_events ORDER BY priority ASC, rowid ASC LIMIT %u
lastForceTelemetrySyncDate
DELETE FROM telemetry_failure_counts AS tf WHERE NOT EXISTS (SELECT 1 FROM server_items AS si WHERE si.item_id = tf.item_id AND si.zone_rowid = tf.zone_rowid) AND NOT item_id_is_root(tf.item_id)
v24@?0@"NSNumber"8@"NSError"16
com.apple.idms.config.privacy.icloud.data
telemetry-enabled-refresh
com.apple.clouddocs
unreachable: configuration dictionary missing analytics key
v24@?0@"NSDictionary"8@"NSError"16
<%@ t:%.2fs%@>
isPackage
contentSize
syncUpBatchSize
 i:%@ %ssz:%lld su-batch:%lld
pkg 
didSucceed
isDownloadingForBackup
isRecursiveDownload
itemCount
totalContentSize
 sz:%lld cnt:%lld %s%s
recursive 
for-backup
v32@?0@"NSString"8@16^B24
<%@:%p e:%@ ppcs:%@ spcs:%@>
SELECT ci.zone_rowid, IFNULL(si.pcs_state, 0) FROM client_items AS ci LEFT JOIN server_items AS si ON ci.item_id = si.item_id AND ci.zone_rowid = si.zone_rowid WHERE ci.rowid = %lld
AND item_localsyncupstate = 3
AND desired_version IS NOT NULL
AND item_localsyncupstate = 4
v32@?0@"BRMangledID"8@"BRCErrorGrouping"16^B24
en_US_POSIX
yyyy-MM-dd HH:mm:ss
SELECT error_domain, error_code, error_message, error_timestamp, service, item_rowid FROM item_errors
SELECT 1 FROM client_items WHERE rowid = %llu %@
DELETE FROM item_errors WHERE item_rowid = %llu AND service = %d
SELECT cd.throttle_id, cd.last_try_stamp FROM client_downloads AS cd INNER JOIN client_items AS li ON cd.throttle_id = li.rowid WHERE cd.last_try_stamp > 0 AND cd.last_try_stamp < %lld AND cd.retry_count = 0 AND cd.throttle_state = 1 AND li.item_state IN (0, -1) AND li.desired_version IS NOT NULL
SELECT COUNT(item_id), item_depth FROM server_items WHERE item_depth < 0 GROUP BY item_depth
SELECT cu.throttle_id, cu.last_try_stamp FROM client_uploads AS cu INNER JOIN client_items AS li ON cu.throttle_id = li.rowid WHERE cu.last_try_stamp > 0 AND cu.last_try_stamp < %lld AND cu.retry_count = 0 AND cu.throttle_state = 1 AND li.item_state IN (0, -1) AND li.item_localsyncupstate = 3
SELECT csu.throttle_id, csu.last_try_stamp FROM client_sync_up AS csu INNER JOIN client_items AS li ON csu.throttle_id = li.rowid WHERE csu.last_try_stamp > 0 AND csu.last_try_stamp < %lld AND csu.retry_count = 0 AND csu.throttle_state = 1 AND li.item_localsyncupstate = 4
SELECT ci.rowid FROM client_items AS ci WHERE ci.item_localsyncupstate = 4 AND ci.item_min_supported_os_rowid IS NULL AND NOT EXISTS (SELECT 1 FROM client_sync_up AS cs WHERE cs.throttle_id = ci.rowid AND cs.throttle_state != 0)
SELECT ci.rowid FROM client_items AS ci LEFT JOIN client_uploads AS cu ON ci.rowid = cu.throttle_id WHERE ci.item_localsyncupstate = 3 AND ci.item_type IN (1, 6) AND ci.item_state IN (0, -1) AND IFNULL(cu.throttle_state, 0) = 0
SELECT ci.rowid FROM client_items AS ci WHERE ci.desired_version IS NOT NULL AND ci.item_staged_file_id IS NULL AND ci.item_state IN (0, -1) AND NOT EXISTS (SELECT 1 FROM client_downloads AS cd WHERE cd.throttle_id = ci.rowid AND cd.download_kind = %d AND cd.throttle_state != 0) AND call_block(%p, ci.desired_version)
SELECT COUNT(*) FROM client_items WHERE item_type IN (9, 10)
SELECT COUNT(*) FROM server_items WHERE item_type IN (9, 10)
SELECT COUNT(*) FROM server_items WHERE item_type IN (0, 9, 10)
SELECT MIN(date) FROM boot_history
B16@?0@"BRCPrivateClientZone"8
SELECT COUNT(1) FROM server_items
uploadError: none
uploadError: %@
syncUpError: none
syncUpError: %@
downloadError: none
downloadError: %@
syncUpSharedZoneError: none
syncUpSharedZoneError: %@;%ld pcs:%s count:%@
syncUpPrivateZoneError: none
syncUpPrivateZoneError: %@;%ld pcs:%s count:%@
syncDownSharedZoneError: none
syncDownSharedZoneError: %@;%ld pcs:%s count:%@
syncDownPrivateZoneError: none
syncDownPrivateZoneError: %@;%ld pcs:%s count:%@
v32@?0@"NSNumber"8@"NSNumber"16^B24
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/telemetry/BRCAnalyticsReporter.m
+[BRCItemCountMismatchReport generateReportForSharedFolder:qualityOfService:completionHandler:]
iCloudDriveSyncConsistency
telemetry-db
com.apple.CloudDocsDaemon.telemetry-disk-checker
UNKNOWN
_UNUSED_SYNC_UP_BACKOFF_RATIO
FOLDER_SHARING_ITEM_COUNT_MISMATCH
MISSING_PUSH
PERMANENTLY_INCONSISTENT
DROPPED_EVENTS
TEST_METRIC
SHARE_ALIAS_IN_SHARED_FOLDER
MALIGNANT_ZONE_RESET
BENIGN_ZONE_RESET
DB_RESET
APPLY_SCHEDULER_MISSING_JOBS
SYNC_UP_MISSING_JOBS
READER_MISSING_JOBS
UPLOADER_MISSING_JOBS
DOWNLOADER_MISSING_JOBS
_UNUSED_SYNC_UP_BACKOFF_DELAY
FOLDER_SHARING_PCS_CHAINING
NEW_SHARE_ACCEPTATION
FS_EVENT_TO_SYNC_UP
USER_DOWNLOAD
CORRUPT_PACKAGE_DOWNLOAD
DIRECTORY_MISSING_CHAINPCS
SYNC_BOOSTING_PROBLEM_COUNT
DEEP_SCAN
OPERATION_TIMED_OUT
MISSING_SHARE_ALIAS
ASSET_CONTENT_NOT_FOUND
QBS_DIR_FAULT_COUNT
FILE_BOUNCED_MANY_TIMES
SYNC_UP_BACKOFF_RATIO_SUMMARY
SYNC_UP_BACKOFF_DELAY_SUMMARY
QBS_PERFORMANCE
FULLY_CONSISTENT
FILE_CHECKSUM_MISMATCH
PACKAGE_CHECKSUM_MISMATCH
CHILD_COUNT_MISMATCH
RECURSIVE_ITEM_COUNT_MISMATCH
SHARE_ALIAS_COUNT_MISMATCH
SHARE_COUNT_MISMATCH
CONSISTENCY_CHECKER_FAILED
FILE_READ_ERROR
CA_TOTAL_ERROR_COUNT
CA_UPLOAD_ERROR_COUNT
CA_DOWNLOAD_ERROR_COUNT
CA_SYNC_UP_ITEM_ERROR_COUNT
CA_SYNC_UP_ZONE_ERROR_COUNT
CA_SYNC_DOWN_ERROR_COUNT
CA_UPLOAD_ERROR
CA_DOWNLOAD_ERROR
CA_SYNC_UP_ITEM_ERROR
CA_SYNC_UP_ZONE_ERROR
CA_SYNC_DOWN_ERROR
CICONIA_STARTED_MIGRATION
CICONIA_MISMATCHING_ITEM_DB_DISK
CICONIA_CLEANUP_FAILURE
CICONIA_MIGRATION_FINISHED
CICONIA_QUEUEING_FAILED
CICONIA_STATUS_REPORT
CICONIA_OVER_BOUNCE
(unknown: %i)
minimumOSName
recordId
zone-health-check
dir-fault
dir-share-accept-fault
fault
doc-share-accept-fault
alias
fs-root
symlink
finder-bookmark
bookmark-fault
live
dead
lost
reserved
lost(z)
rejected
needs-read
needs-upload
needs-sync-up
migrating
rej-migrating
missing-fid
share-id
web-shared-ro
web-shared-rw
public-share-ro
public-share-rw
private-share-ro
private-share-rw
read-only-record
p:%@ 
n:"%@" 
(o:"%@") 
target:"%@" 
etag:%@ 
prev-etag:%@ 
deletion-token:%@ 
bt:%lld 
lu:%lld 
fa:%lld 
m:%s 
hidden-ext 
ea:%@ 
has-finder-tags 
trash-put-back{%@, %@} 
creator:%@ 
ckInfo
parentID
state
type
mode
birthtime
lastusedtime
favoriterank
filename
aliasTarget
finderTags
hiddenExt
xattrSig
putBackPath
putBackParentID
creatorRowID
item %s has invalid state: %d
item %s has invalid type: %d
item %s has invalid mode: 0%0x
item %s has an invalid parent id
SELECT name FROM devices WHERE key = %lld
mt:%lld 
sz:%@ 
tsz:%@ 
<pkg-pending>
<file-pending>
sig:%@ 
<pending>
tsig:%@ 
losers:{%@} 
ess:%ld 
device:%@ 
last-editor:%@ 
quarantine:%u 
mtime
name
size
thumbnailSize
thumbnail
content
editedKey
deviceKey
deviceName
conflictLoserEtags
quarantineInfo
_%@_%@.%@
_%@_%@
synced-all
share-synced-all
synced-st-all
synced-ct-all
synced-ct-on-pause
not-synced-ct-on-pause
item-id
item-shared
item-owner
st-all
st-ckinfo
st-state
st-alias-state
st-mode
st-birthtime
st-parent-id
st-filename
st-hidden-ext
st-xattr
st-finder-tags
st-trash-put-back
st-last-used-time
st-favorite-rank
st-symlink-target
st-directory-mtime
ct-all
ct-ckinfo
ct-mtime
ct-name
ct-size
ct-sig
ct-xattr
ct-thumb
ct-losers
ct-quarantine
ct-edited
fs-all
fs-state
fs-document-id
fs-file-id
fs-generation
fs-localname
fs-scope
fs-stage
lct-all
lct-ul-assets
lct-ul-error
lct-prev-zone
l-all
l-min-os
l-sync-up-state
l-dl-version
l-app-library
l-user-visibility
sc-ckinfo
m-oob-sync
m-forced-conflict
m-cross-zone-moved
m-initial-scan
m-needs-sharing-info
m-reset
path
isWritable
isExecutable
symlinkContent
signature
xattrIndex
DIRECTORY
FILE
SYMLINK
TOMBSTONE
streamUUID
event
streamUUID:%@ event:%llu root:%llu
fsevents
com.apple.brc.notififcation-mgr
share/accept
v32@?0@"CKShareMetadata"8@"CKShare"16@"NSError"24
sharing/iWork-publishing-fetch
unreachable: No error and invalid number of records %lu
app-lib
home-desktop-or-docs
top-item
item
desktop-path-match
com.apple.icloud.itemName
#pc#d#b#-#l#s#w
brok
UF_COMPRESSED
com.apple.metadata:_kMDItemUserTags
com.apple.clouddocs.security
i12@?0i8
pkpass
com.apple.FinderInfo
com.apple.clouddocs.private.item-sync-paused-by-bundle-id#N
com.apple.clouddocs.private.item-sync-paused-expire-timestamp#N
path:'%@' parentFileID:%llu
 fileID:%llu
 size:%llu
 mtime:%lu
 mode:%c%c%c%c%c%c%c%c%c%c
 quarantine:%u
 br-alias
 finder-alias
 documentID:%u
 generationID:%u fd:%d refs:%u
 appLibrary:%@
path:'%@' unresolved
path:'%@/%@' unresolved
operationType
totalTime
recordsFetched
recordsFetchedTotalMetadataSize
xattrsFetchedTotalSize
Can't init mutex
Can't destroy mutex
Dead lock
Invalid mutex
Can't unlock mutex
Mutex should already be locked
Don't call %@.
-[BRCMinHeap init]
<BRCMinHeap %p objects:%@ array:[
%p:%@, 
side-car.sync-up
SELECT item_state, item_side_car_ckinfo, item_rank FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT item_side_car_ckinfo FROM side_car_lookahead WHERE record_name = %@
SELECT li.rowid, li.zone_rowid, li.item_id, li.item_creator_id, li.item_sharing_options, li.item_side_car_ckinfo, li.item_parent_zone_rowid, li.item_localsyncupstate, li.item_local_diffs, li.item_notifs_rank, li.app_library_rowid, li.item_min_supported_os_rowid, li.item_user_visible, li.item_stat_ckinfo, li.item_state, li.item_type, li.item_mode, li.item_birthtime, li.item_lastusedtime, li.item_favoriterank,li.item_parent_id, li.item_filename, li.item_hidden_ext, li.item_finder_tags, li.item_xattr_signature, li.item_trash_put_back_path, li.item_trash_put_back_parent_id, li.item_alias_target, li.item_creator, li.item_processing_stamp, li.item_staged_file_id, li.item_staged_generation, li.item_bouncedname, li.item_scope, li.item_local_change_count, li.item_old_version_identifier, li.version_name, li.version_ckinfo, li.version_mtime, li.version_size, li.version_thumb_size, li.version_thumb_signature, li.version_content_signature, li.version_xattr_signature, li.version_edited_since_shared, li.version_device, li.version_conflict_loser_etags, li.version_quarantine_info, li.version_uploaded_assets, li.version_upload_error, li.version_old_zone_item_id, li.version_old_zone_rowid, li.version_local_change_count, li.version_old_version_identifier, li.desired_version, li.item_live_conflict_loser_etags, li.item_file_id, li.item_generation, li.version_block_sync_until_bundle_id, li.version_block_sync_until_timestamp FROM client_items AS li  INNER JOIN client_sync_up AS su    ON su.throttle_id = li.rowid  WHERE         su.throttle_state = 50    AND su.throttle_state != 0    AND su.zone_rowid = %@    AND su.in_flight_diffs IS NULL    AND li.item_stat_ckinfo IS NOT NULL    AND li.item_localsyncupstate = 4    AND li.item_min_supported_os_rowid IS NULL
account-waiter
unavailable
no account
restricted
temporarily unavailable
available
unhandled account status
v24@?0q8@"NSError"16
zoneName
sharedZone
errorDomain
errorCode
errorDescription
lastStep
itemID
reason
nonDiscretionary
hasForegroundClients
isPCSChained
eventGroupUUID
ciconiaInvestigation
qbsInvestigation
qbsPerformance
bouncesInvestigation
com.apple.fpfs.fileid
inactive
active
pending-lost
pending-busy
pending-czm
same-lib-target
eperm
fpfs-migration
pending-parent
parent-fetch
pending-scan
pending-download
pending-target
pending-child
pending-coordination
pending-migration
pending-flock
pending-favorites
pending-sync-up
pending-quota
toolarge
pending-winner
pending-disk
sync-up-scheduled
ineligible
BRCFSSchedulerBaseDidUpdateHasWorkNotification
SELECT next_retry_stamp > %llu FROM %@ WHERE %@
SELECT 1 FROM %@ WHERE %@ AND throttle_state = 1 LIMIT 1
SELECT throttle_state FROM %@ WHERE %@ AND throttle_state != 0
SELECT zone_rowid, throttle_id, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp%@%@ FROM %@ WHERE %@%@
 %@ attempts:%d
 last:%@
 next:%@
 cleanup:%@
[%ld %@]
SELECT throttle_state, COUNT(*) FROM %@ WHERE %@ GROUP BY throttle_state
 %@:%lld
 idle
UPDATE %@ SET   throttle_state = 1, retry_count = %u, last_try_stamp = %llu, next_retry_stamp = %llu, expire_stamp = %llu WHERE %@
INSERT INTO %@ (  throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, %@ %@ %@) VALUES (  %u, %u, %lld, %lld, %lld, %@ %@ %@)
UPDATE %@ SET  throttle_state = %d, retry_count = %u, last_try_stamp = %lld, next_retry_stamp = %lld, expire_stamp = %lld%@ %@  WHERE %@
UPDATE %@ SET throttle_state = 1 WHERE throttle_state = %u %@%@
AND 
SELECT retry_count, last_try_stamp, next_retry_stamp, expire_stamp, throttle_state FROM %@ WHERE %@
UPDATE %@   SET throttle_state = call_block(%@, next_retry_stamp) WHERE %@
DELETE FROM %@ WHERE %@
UPDATE %@   SET retry_count = 0, next_retry_stamp = 0 WHERE %@
DELETE FROM %@ WHERE throttle_state = 0 AND expire_stamp <= %lld
SELECT throttle_id FROM %@ WHERE throttle_state > 0 LIMIT 1
  SELECT next_retry_stamp, %@     FROM %@    WHERE throttle_state = 1          %@%@%@      AND next_retry_stamp >= 0 ORDER BY next_retry_stamp    LIMIT %u
AND (
with active work
watchItem
watchChildren
watchDescendants
withInitialGather
withContainers
docs
data
dirs
faults
extern
trash
dirs-only
com.apple.brc.pipe
<%@ %p
 gathering
 {%@}
 {descendants of 
 {children of 
 {item at 
[fid:%@]
[fid:%@ n:%@]
 (%@%@)}
|withAliases
 {NSMDQ
 data
 docs
 dirs-only
 dirs
 faults
 ext
 trash
 queued:%ld>
v32@?0@"NSNumber"8@"BRProgressUpdate"16^B24
v16@?0@"NSArray"8
v20@?0B8@"BRCDataOrDocsScopeGatherer"12
unreachable: Invalid notification pipe setup
nsmdq
-[BRCNotificationPipe(IPCs) watchItemsNamesPrefixedBy:inScopes:appLibraryIDs:gatherReply:]
-[BRCNotificationPipe(IPCs) watchScopes:appLibraryIDs:gatherReply:]
-[BRCNotificationPipe(IPCs) watchScopes:gatherReply:]
-[BRCNotificationPipe(IPCs) boostPriority:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/notifs/BRCNotificationPipe.m
-[BRCNotificationPipe(IPCs) _triggerImmediateReadOfDocumentIfNeeded]
-[BRCNotificationPipe(IPCs) invalidate]
WaitingTimeBeforeDisplay
MinimalDisplayTime
default
alternate
other
cancel
v16@?0Q8
v32@?0@8@16^B24
_IOS
_DEFAULT
keynote
_KEYNOTE
numbers
_NUMBERS
pages
_PAGES
_FOLDER
SHARING_JOIN_HEADER_FOLDER
Localizable
SHARING_JOIN_HEADER
SHARING_JOIN_HEADER_DEFAULT_APP
SHARING_JOIN_HEADER_NO_DOCUMENT_NAME
SHARING_JOIN_MESSAGE_PRIVATE
SHARING_JOIN_MESSAGE_PUBLIC
SHARING_JOIN_ALT_BUTTON
SHARING_JOIN_DEFAULT_BUTTON
v32@?0@"NSPersonNameComponents"8@"NSString"16@"NSError"24
SHARING_ICLOUD_SETUP_HEADER_IOS
SHARING_ICLOUD_SETUP_MESSAGE_IOS
SHARING_ICLOUD_SETUP_ALT_BUTTON_IOS
PREVIEW_BUTTON
SHARING_ICLOUD_SETUP_DEFAULT_BUTTON_IOS
SHARING_ICLOUD_DRIVE_SETUP_HEADER_IOS
SHARING_ICLOUD_DRIVE_SETUP_MESSAGE_IOS
SHARING_ICLOUD_DRIVE_SETUP_ALT_BUTTON_IOS
SHARING_ICLOUD_DRIVE_SETUP_DEFAULT_BUTTON_IOS
shareMetadata
SHARING_APP_NOT_INSTALLED_HEADER_IOS
SHARING_APP_NOT_INSTALLED_MESSAGE_IOS
SHARING_APP_NOT_INSTALLED_ALT_BUTTON_IOS
SHARING_APP_NOT_INSTALLED_DEFAULT_BUTTON_IOS
SHARING_PROFILE_DISABLED_HEADER_IOS
SHARING_PROFILE_DISABLED_MESSAGE_IOS
SHARING_PROFILE_DISABLED_DEFAULT_BUTTON_IOS
SHARING_GENERIC_ERROR_HEADER
SHARING_GENERIC_ERROR_MESSAGE
SHARING_GENERIC_ERROR_DEFAULT_BUTTON
SHARING_DEVICE_OFFLINE_ERROR_HEADER
SHARING_DEVICE_OFFLINE_ERROR_MESSAGE
SHARING_DEVICE_OFFLINE_ERROR_DEFAULT_BUTTON
SHARING_ICLOUD_NOT_REACHABLE_HEADER
SHARING_ICLOUD_NOT_REACHABLE_MESSAGE
SHARING_ICLOUD_NOT_REACHABLE_DEFAULT_BUTTON
SHARING_NO_LONGER_SHARED_HEADER
SHARING_NO_LONGER_SHARED_MESSAGE
SHARING_NO_LONGER_SHARED_BUTTON
SHARING_PARTICIPANT_LIMIT_REACHED_HEADER
SHARING_PARTICIPANT_LIMIT_REACHED_MESSAGE
SHARING_PARTICIPANT_LIMIT_REACHED_ALT_BUTTON
SHARING_FALLBACK_SUCCESS_HEADER
SHARING_FALLBACK_SUCCESS_DEFAULT_BUTTON
docs.icloud.com:
-[BRCBookmark _resolveTargetWithError:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/fs/BRCBookmark.m
-[BRCBookmark _resolveDataWithError:]
-[BRCBookmark writeUnderParent:name:error:]
.%@.alias
-[BRCSymlinkItem(FPFSAdditions) updateWithImportObject:onlyContentDependentProperties:error:]
com.apple.bird.xpc-listener-ready
com.apple.bird.account-startup-queue
com.apple.bird.account-resume-queue
com.apple.bird.startup-queue
account-loader
com.apple.language.changed
v12@?0i8
share-accept
v24@?0@8@"NSError"16
share accept operations
 %@: %@
v32@?0@"NSString"8@"BRCSharingAcceptFlowOperation"16^B24
our connection was invalidated
-[BRCDaemonFPFS listener:shouldAcceptNewConnection:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/daemon/BRCDaemon.m
NOT 
sharing/copy-share
share
unreachable: Can't find root itemID %@
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/sharing/BRCSharingCopyShareOperation.m
-[BRCSharingCopyShareOperation fetchRootURLIfNecessaryAndFinishWithShare:]_block_invoke
unreachable: Can't find URL for root itemID %@
rejection
creation
update
Apply Changes
client_unapplied_table
SELECT throttle_state, COUNT(*) FROM client_unapplied_table WHERE %@ AND throttle_id > 0   AND throttle_id IN (SELECT item_rank FROM server_items) GROUP BY throttle_state
SELECT COUNT(*) FROM client_unapplied_table WHERE %@ AND throttle_id > 0   AND throttle_id NOT IN (SELECT item_rank FROM server_items)
 expired:%@
 has-faulting-barriers
UPDATE client_unapplied_table   SET throttle_state = call_block(%@, next_retry_stamp, apply_kind), apply_kind = %u WHERE %@
apply_kind
apply_kind = %u
UPDATE client_unapplied_table    SET throttle_state = 1  WHERE zone_rowid = %@     AND throttle_state IN (21, 16)    AND throttle_id IN (SELECT item_rank FROM server_items                        WHERE zone_rowid = %@ AND item_parent_id = %@)
UPDATE client_unapplied_table    SET throttle_state = 1  WHERE throttle_state IN (21, 16)    AND throttle_id IN (SELECT item_rank FROM server_items WHERE (item_sharing_options & 4) != 0 AND item_id_is_shared_root(item_parent_id))
WITH RECURSIVE  reschedulable_items (item_rank, item_id) AS (    SELECT si.item_rank, si.item_id      FROM server_items AS si     WHERE si.zone_rowid = %@       AND si.item_type IN (0, 9, 10, 4) AND NOT EXISTS (SELECT 1 FROM client_items AS ci         WHERE ci.item_parent_zone_rowid = %@ AND ci.item_parent_id = si.item_id           AND ci.item_state IN (0, -1)    )  ) UPDATE client_unapplied_table    SET throttle_state = 1  WHERE zone_rowid = %@     AND throttle_state = 25    AND throttle_id IN (SELECT item_rank FROM reschedulable_items WHERE item_id = %@)
WITH RECURSIVE  reschedulable_items (throttle_id, item_id) AS (    SELECT -pi.rowid, pi.item_id      FROM client_items AS pi     WHERE pi.zone_rowid = %@       AND pi.item_type IN (0, 9, 10, 4) AND NOT EXISTS (SELECT 1 FROM client_items AS ci         WHERE ci.item_parent_zone_rowid = %@ AND ci.item_parent_id = pi.item_id           AND ci.item_state IN (0, -1)    )  ) UPDATE client_unapplied_table    SET throttle_state = 1  WHERE zone_rowid = %@     AND throttle_state = 25    AND throttle_id IN (SELECT throttle_id FROM reschedulable_items WHERE item_id = %@)
UPDATE client_unapplied_table    SET throttle_state = 1  WHERE zone_rowid = %@     AND throttle_state = %u    AND throttle_id IN (SELECT item_rank FROM server_items                        WHERE zone_rowid = %@ AND item_parent_id = %@)
UPDATE client_unapplied_table SET throttle_state = 1 WHERE throttle_state = %u AND zone_rowid = %@ AND throttle_id = %llu
SELECT item_rank, zone_rowid FROM server_items WHERE item_alias_target = %@ AND item_type = 3
UPDATE client_items SET item_type = 0 WHERE item_id = %@ AND zone_rowid = %@ AND item_type = 9 AND (SELECT 1 FROM server_items AS si               WHERE client_items.item_id = si.item_id                AND client_items.zone_rowid = si.zone_rowid                AND si.item_type = 0 LIMIT 1)
UPDATE item_recursive_properties SET item_type = 0, dir_faults_count = dir_faults_count - 1 WHERE item_id = %@ AND zone_rowid = %@
UPDATE client_unapplied_table SET throttle_state = 1 WHERE throttle_state != 0 AND throttle_id IN (SELECT item_rank FROM server_items WHERE item_parent_id = %@ AND zone_rowid = %@)
INSERT OR REPLACE INTO client_unapplied_table(zone_rowid, throttle_id, throttle_state, apply_kind) SELECT %@, -rowid, 1, %u FROM client_items WHERE zone_rowid = %@ AND item_localsyncupstate = 1
INSERT OR REPLACE INTO client_unapplied_table(zone_rowid, throttle_id, throttle_state, apply_kind) SELECT %@, item_rank, 1, %u FROM server_items WHERE zone_rowid = %@
throttle_id, zone_rowid, apply_kind, retry_count
v20@?0@"PQLResultSet"8i16
SELECT 1 FROM client_unapplied_table WHERE zone_rowid = %@ AND throttle_state = 1 AND apply_kind = %d AND retry_count < %lld LIMIT 1
SELECT 1 FROM client_unapplied_table WHERE zone_rowid = %@ AND throttle_state = 1 AND apply_kind = %d LIMIT 1
apply is failing
sync is blocked for client zone: %@
UPDATE client_unapplied_table   SET throttle_state = 1 WHERE throttle_state = 26   AND throttle_id IN(%llu, %lld)
DELETE FROM client_unapplied_table AS cu WHERE cu.throttle_id > 0   AND NOT EXISTS (SELECT 1 FROM server_items AS si WHERE si.item_rank = cu.throttle_id)
DELETE FROM client_unapplied_table AS cu WHERE cu.throttle_id < 0   AND NOT EXISTS (SELECT 1 FROM client_items AS ci WHERE ci.rowid = -cu.throttle_id)
<rdar://problem/23822933>
INSERT OR IGNORE INTO client_unapplied_table (zone_rowid, throttle_id, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, apply_kind) SELECT %@, item_rank, 1, 0, 0, 0, 0, %u  FROM server_items WHERE zone_rowid = %@ AND item_rank >= %lld AND item_rank < %lld
SELECT ci.rowid, ci.zone_rowid, ci.item_id, ci.item_creator_id, ci.item_sharing_options, ci.item_side_car_ckinfo, ci.item_parent_zone_rowid, ci.item_localsyncupstate, ci.item_local_diffs, ci.item_notifs_rank, ci.app_library_rowid, ci.item_min_supported_os_rowid, ci.item_user_visible, ci.item_stat_ckinfo, ci.item_state, ci.item_type, ci.item_mode, ci.item_birthtime, ci.item_lastusedtime, ci.item_favoriterank,ci.item_parent_id, ci.item_filename, ci.item_hidden_ext, ci.item_finder_tags, ci.item_xattr_signature, ci.item_trash_put_back_path, ci.item_trash_put_back_parent_id, ci.item_alias_target, ci.item_creator, ci.item_processing_stamp, ci.item_staged_file_id, ci.item_staged_generation, ci.item_bouncedname, ci.item_scope, ci.item_local_change_count, ci.item_old_version_identifier, ci.version_name, ci.version_ckinfo, ci.version_mtime, ci.version_size, ci.version_thumb_size, ci.version_thumb_signature, ci.version_content_signature, ci.version_xattr_signature, ci.version_edited_since_shared, ci.version_device, ci.version_conflict_loser_etags, ci.version_quarantine_info, ci.version_uploaded_assets, ci.version_upload_error, ci.version_old_zone_item_id, ci.version_old_zone_rowid, ci.version_local_change_count, ci.version_old_version_identifier, ci.desired_version, ci.item_live_conflict_loser_etags, ci.item_file_id, ci.item_generation, ci.version_block_sync_until_bundle_id, ci.version_block_sync_until_timestamp FROM client_items AS ci WHERE ci.item_localsyncupstate = 1 AND ci.item_localsyncupstate != 0 AND NOT EXISTS (SELECT 1 FROM client_unapplied_table AS cu WHERE cu.throttle_id = ci.rowid AND cu.throttle_state != 0)
expected full table scan
SELECT si.item_rank, si.zone_rowid FROM server_items AS si LEFT JOIN client_items AS ci ON ci.item_id = si.item_id AND ci.zone_rowid = si.zone_rowid WHERE si.item_state = 0 AND si.item_type != 3 AND si.item_rank IS NOT NULL AND ((si.version_ckinfo IS NOT NULL AND si.version_ckinfo != ci.version_ckinfo) OR (si.item_stat_ckinfo != ci.item_stat_ckinfo AND NOT (si.item_sharing_options & 4 != 0 AND %@ != (SELECT cz.zone_owner FROM client_zones AS cz WHERE cz.rowid = si.zone_rowid))) OR ci.rowid IS NULL) AND NOT EXISTS (SELECT 1 FROM client_unapplied_table AS cu WHERE cu.throttle_id = si.item_rank AND cu.throttle_state != 0)
mobile
B24@?0@"NSURL"8@"NSError"16
v56@?0@"NSURL"8@"NSString"16@"NSString"24@"NSNumber"32@"NSNumber"40I48B52
Library/Application Support/CloudDocs
session
backup_manifest.db
Library/Mobile Documents/
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/containers/BRCAppLibrary.m
-[BRCAppLibrary root]
-[BRCAppLibrary init]
fileID
generationID
metadataChangetag
metadataNeedsSyncUp
rootQuota
B16@?0@"BRCSharedClientZone"8
public
private
foreground
background
%@[%@] %@ {s:%@} ino:%@ gen:%@
 queries:
 metadata:%s etag:%@ %@
 bundles:{%@}
<%@>
item_type != 3
item_scope = 2 AND %@
item_scope = 1 AND %@
(%@) OR (%@)
(   item_scope = 2 OR item_scope = 1) AND item_type = 3
item_scope = 3
AND item_type IN (1, 2, 8, 5, 6, 7)
AND item_type = 0
%@%%
%% %@%%
AND (item_filename LIKE %@ ESCAPE '\' OR item_filename LIKE %@ ESCAPE '\')
AND ((%@) OR (%@) OR (%@))
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp    FROM client_items   WHERE item_notifs_rank >= %lld     AND item_notifs_rank < %lld     AND +app_library_rowid = %@     AND item_state IN (0, -1, 1)     %@      %@      %@ ORDER BY item_notifs_rank   LIMIT %lld
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp    FROM client_items   WHERE item_notifs_rank >= %lld     AND item_notifs_rank < %lld     AND +app_library_rowid = %@     AND item_state IN (0, -1)     %@      %@      %@ ORDER BY item_notifs_rank   LIMIT %lld
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp    FROM client_items   WHERE item_parent_id = %@      AND item_notifs_rank >= %lld      AND item_notifs_rank < %lld     %@      AND item_parent_zone_rowid = %@ ORDER BY item_notifs_rank   LIMIT %lld
AND item_state IN (0, -1)
item_filename
version_mtime DESC
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp    FROM client_items   WHERE item_parent_id = %@      AND item_state IN (0, -1)     AND item_parent_zone_rowid = %@ ORDER BY %@   LIMIT  %lld   OFFSET %lld
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp     FROM client_items    WHERE item_parent_id = %@       AND item_state IN (0, -1)      AND item_type = 0      AND item_parent_zone_rowid = %@       AND item_user_visible = 1  ORDER BY item_filename    LIMIT %lld
-[BRCAppLibrary coordinatorForItem:forRead:]
read
write
v16@?0@"BRCFileCoordinator"8
fs-root was moved from %@ to %@
fs-root was removed
SELECT auto_client_item_count > 0 FROM app_libraries  WHERE rowid = %@
SELECT 1 FROM client_items  WHERE item_type NOT IN (0, 9, 10, 4)    AND item_state IN (0, -1)    AND app_library_rowid = %@ LIMIT 1
SELECT auto_document_with_local_changes_count > 0 FROM app_libraries WHERE rowid = %@
SELECT auto_aggregate_size FROM app_libraries WHERE rowid = %@
SELECT auto_document_count FROM app_libraries WHERE rowid = %@
now evicting uploaded items
no longer evicting uploaded items
evicting uploaded items
not evicting uploaded items
SELECT DISTINCT ci.zone_rowid FROM client_items AS ci INNER JOIN client_zones AS cz ON ci.zone_rowid = cz.rowid WHERE ci.app_library_rowid = %@   AND ci.item_state IN (0, -1)   AND (ci.item_sharing_options & 4) != 0   AND cz.zone_owner != %@
%@/%%
SELECT rowid FROM client_items WHERE app_library_rowid = %@ AND zone_rowid = %@ AND (item_sharing_options & 4) != 0 AND item_state IN (0, -1) LIMIT 1
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp          FROM client_items         WHERE item_type = 3           AND item_state = 0           AND item_alias_target LIKE %@ ESCAPE '\'
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE item_alias_target = %@ AND item_type = 3 AND app_library_rowid = %@
item not found
needs-lost
initial-scan
resetting
no-documents
no-data
root-created
scan-on-caught-up
root-moved-to-clouddocs
needs-cross-move-fixup
evict-uploaded-items
l-docs
l-root
ch-root
l-trash
not-activated
q24@?0@"BRCRetryCounter"8@"BRCRetryCounter"16
NULL
-[BRCImportObject initAsSymlinkWithTarget:parentItem:logicalName:error:]
-[BRCImportObject initWithURL:existingItem:quarantineInfo:error:]
-[BRCImportObject initWithURL:logicalName:quarantineInfo:parentItem:error:]
-[BRCImportObject(BRCPackageAdditions) initWithURL:packageRoot:error:]
%lld-%@-%s
throttle_id = %lld AND download_etag = %@ AND download_kind = %u
throttle_id, download_etag, download_kind
%lld, %@, %u
  SELECT throttle_id, next_retry_stamp, app_library_rowid,           download_etag, transfer_stage, unit_count_completed           , transfer_size, download_priority      FROM client_downloads    WHERE throttle_state = 1    AND throttle_state != 0      AND transfer_queue = %@      AND transfer_operation IS NULL      AND download_kind = %d ORDER BY download_priority DESC, download_request_stamp DESC
UPDATE client_downloads    SET transfer_queue = '_retry'  WHERE throttle_id = %lld AND download_kind = %u AND download_etag = %@
Downloader
client_downloads
downloader
com.apple.bird.downloader
com.apple.bird.download-tracker
UPDATE client_downloads SET  transfer_stage = %@, transfer_operation = %@ WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@
ORDER BY download_kind, download_etag
download_kind, download_etag, transfer_operation, transfer_queue, download_error, app_library_rowid
%s:%@
_retry
 pending-retry
 download:done/cancelled
 downloading:%.1f%%
 op:%@
v32@?0@"NSMutableString"8@"PQLResultSet"16i24i28
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/fs/BRCFSDownloader.m
-[BRCFSDownloader _createDownloadingJobForItem:state:kind:etag:userInitiated:]
app_library_rowid, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, download_kind, download_etag, download_priority, download_request_stamp, download_error, zone_rowid
%@, %@, %lld, %@, %@, %@, %u, %@, %ld, %lld, %@, %@
app_library_rowid = %@, transfer_queue = %@, download_priority = %ld, download_request_stamp = %lld , zone_rowid = %@
SELECT transfer_size FROM client_downloads WHERE throttle_id = %lld AND download_kind = %u AND download_etag = %@
SELECT app_library_rowid FROM client_downloads WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@   AND transfer_operation = %@
done
UPDATE client_downloads SET  transfer_operation = call_block(%@, next_retry_stamp), download_error = %@, unit_count_completed = %lld WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@
UPDATE client_downloads SET  throttle_state = %d, transfer_record = NULL, transfer_stage = call_block(%@, transfer_stage), transfer_operation = NULL, download_error = %@ WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@
UPDATE client_downloads SET  throttle_state = %d, transfer_queue = %@, transfer_record = %@, transfer_stage = %@, transfer_operation = NULL, download_error = NULL WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@
_done
UPDATE client_downloads SET throttle_state = 1 WHERE throttle_state = %u AND throttle_id = %lld
UPDATE client_downloads SET throttle_state = 1 WHERE throttle_state = 43   AND call_block(%@, transfer_size, app_library_rowid, zone_rowid)
UPDATE client_downloads SET throttle_state = 1 WHERE throttle_state = 40   AND throttle_state != 0   AND zone_rowid = %@
SELECT distinct app_library_rowid FROM client_downloads WHERE throttle_state = 1   AND throttle_state != 0   AND zone_rowid = %@
UPDATE client_downloads SET  throttle_state = %d, transfer_queue = %@, transfer_record = NULL, transfer_stage = NULL, transfer_operation = NULL, unit_count_completed = 0 WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@
SELECT throttle_id, download_kind, download_etag, transfer_operation, transfer_stage, app_library_rowid, zone_rowid, throttle_state, transfer_size FROM client_downloads WHERE throttle_id = %lld AND download_kind = %u AND download_etag = %@   AND throttle_state != 0
SELECT throttle_id, download_kind, download_etag, transfer_operation, transfer_stage, app_library_rowid, zone_rowid, throttle_state, transfer_size FROM client_downloads WHERE throttle_id = %lld AND download_kind = %u   AND throttle_state != 0
SELECT throttle_id, download_kind, download_etag, transfer_operation, transfer_stage, app_library_rowid, zone_rowid, throttle_state, transfer_size FROM client_downloads WHERE throttle_id = %lld AND throttle_state != 0
SELECT transfer_operation    FROM client_downloads  WHERE throttle_id = %lld AND throttle_state == 1
SELECT throttle_id, download_kind, download_etag, transfer_operation, transfer_stage, app_library_rowid, zone_rowid, throttle_state, transfer_size FROM client_downloads WHERE %@ AND throttle_state > %d
UPDATE client_downloads SET download_etag = %@ WHERE throttle_id = %lld AND download_etag = %@ AND download_kind = %d
SELECT SUM(transfer_size) FROM client_downloads WHERE throttle_state = 1
SELECT transfer_operation IS NOT NULL FROM client_downloads WHERE throttle_id = %llu AND download_kind = %u AND download_etag = %@
SELECT 1 FROM client_downloads WHERE throttle_id = %llu AND download_kind != %u AND transfer_queue = %@ LIMIT 1
-[BRCFSDownloader makeContentLive:]_block_invoke
SELECT transfer_stage FROM client_downloads  WHERE throttle_id = %lld AND download_kind = %d AND download_etag = %@    AND transfer_queue = '_done'
brpackage-extended
SELECT version_ckinfo FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT 1 FROM client_downloads  WHERE throttle_id = %lld AND download_kind = %d  LIMIT 1
SELECT transfer_queue, download_etag, throttle_state   FROM client_downloads  WHERE throttle_id = %lld AND download_kind = %d
v32@?0@"NSString"8@"GSAddition"16^B24
SELECT 1 FROM client_downloads WHERE throttle_id = %llu AND download_kind = %u AND transfer_queue = %@ LIMIT 1
SELECT transfer_queue, download_etag, throttle_state FROM client_downloads  WHERE throttle_id = %lld AND download_kind = %u AND throttle_state != 0
SELECT throttle_state, transfer_queue, transfer_stage, transfer_record   FROM client_downloads  WHERE throttle_id = %lld AND download_kind = %u AND download_etag = %@
UPDATE client_downloads SET transfer_operation = NULL WHERE (transfer_operation >= '')
SELECT app_library_rowid, zone_rowid, transfer_queue   FROM client_downloads  WHERE throttle_state = 1 GROUP BY app_library_rowid, zone_rowid, transfer_queue
_prepare
transfer_queue = '_retry' AND transfer_operation IS NULL
rowid, throttle_id, app_library_rowid, zone_rowid
DELETE FROM client_downloads WHERE rowid = %@
UPDATE client_downloads SET transfer_queue = %@ WHERE rowid = %@
thumbnail-%lld-%@
v24@?0@"BRCDownloadThumbnail"8@"NSError"16
Not enough available disk space(have %@ need %@)
content-%lld-%@
v24@?0@"BRCDownloadContent"8@"NSError"16
UPDATE client_downloads    SET throttle_state = %u  WHERE throttle_id = %lld AND download_kind = %u AND download_etag = %@
loser-%lld-%@
v24@?0@"BRCDownloadVersion"8@"NSError"16
  SELECT throttle_id, next_retry_stamp, download_kind, download_etag     FROM client_downloads    WHERE throttle_state = 1      AND transfer_queue = %@      AND transfer_operation IS NULL      AND download_priority >= %ld ORDER BY download_priority DESC, download_request_stamp DESC
UPDATE client_downloads    SET transfer_queue = '_retry'  WHERE throttle_id = %ld AND download_kind = %u AND download_etag = %@
SELECT version_ckinfo FROM client_items WHERE rowid = %ld
SELECT MIN(next_retry_stamp) FROM client_downloads   WHERE throttle_state = 1     AND transfer_queue = %@      AND transfer_operation IS NULL 
INSERT OR REPLACE INTO item_errors (item_rowid, error_domain, error_code, error_message, service) VALUES (%llu, %@, %ld, %@, %d)
SyncHealth
Download
SELECT ci.rowid, ci.zone_rowid, ci.item_id, ci.item_creator_id, ci.item_sharing_options, ci.item_side_car_ckinfo, ci.item_parent_zone_rowid, ci.item_localsyncupstate, ci.item_local_diffs, ci.item_notifs_rank, ci.app_library_rowid, ci.item_min_supported_os_rowid, ci.item_user_visible, ci.item_stat_ckinfo, ci.item_state, ci.item_type, ci.item_mode, ci.item_birthtime, ci.item_lastusedtime, ci.item_favoriterank,ci.item_parent_id, ci.item_filename, ci.item_hidden_ext, ci.item_finder_tags, ci.item_xattr_signature, ci.item_trash_put_back_path, ci.item_trash_put_back_parent_id, ci.item_alias_target, ci.item_creator, ci.item_processing_stamp, ci.item_staged_file_id, ci.item_staged_generation, ci.item_bouncedname, ci.item_scope, ci.item_local_change_count, ci.item_old_version_identifier, ci.version_name, ci.version_ckinfo, ci.version_mtime, ci.version_size, ci.version_thumb_size, ci.version_thumb_signature, ci.version_content_signature, ci.version_xattr_signature, ci.version_edited_since_shared, ci.version_device, ci.version_conflict_loser_etags, ci.version_quarantine_info, ci.version_uploaded_assets, ci.version_upload_error, ci.version_old_zone_item_id, ci.version_old_zone_rowid, ci.version_local_change_count, ci.version_old_version_identifier, ci.desired_version, ci.item_live_conflict_loser_etags, ci.item_file_id, ci.item_generation, ci.version_block_sync_until_bundle_id, ci.version_block_sync_until_timestamp FROM client_items AS ci WHERE ci.desired_version IS NOT NULL AND NOT EXISTS (SELECT 1 FROM client_downloads AS downloader WHERE ci.rowid = downloader.throttle_id AND downloader.throttle_state != 0)
version
(%s)
never
%@ ago
%llu.%llu%@
-%lld %@
%lld %@
bytes
thousand
-%.1f %@
%.1f %@
million
-%.2f %@
%.2f %@
billion
billions
 (%lld)
    
<unknown>
0x%llx
UPDATE client_items SET item_type = 2 WHERE item_id = %@ AND zone_rowid = %@ AND item_type = 8
UPDATE client_items SET item_type = 9 WHERE item_id = %@ AND zone_rowid = %@ AND item_type = 10
%@~%d
 and unlinking data
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/containers/BRCContainerReset.m
-[BRCClientZone(BRCZoneReset) _performResetAndWantsUnlink:clientTruthBlock:completionBlock:]_block_invoke
unreachable: Failed to save to db without an error
DELETE FROM client_items WHERE zone_rowid = %@
<rdar://problem//26848061>
UPDATE client_items SET item_parent_id = %@ WHERE item_parent_zone_rowid != zone_rowid AND item_parent_zone_rowid = %@
reset %s
still-wants-data-unlinked
SELECT rowid, item_type FROM client_items  WHERE zone_rowid = %@ AND (item_sharing_options & 4) != 0
com.apple.decmpfs
.ubd
.do-not-delete
com~apple~Keynote/Documents/Recovered Data
com~apple~Keynote/Documents/Recovered Data.folder
com~apple~Numbers/Documents/Recovered Data
com~apple~Numbers/Documents/Recovered Data.folder
com~apple~Pages/Documents/Recovered Data
com~apple~Pages/Documents/Recovered Data.folder
 lost-stamp:%@ ago
 doc:%@
 s_ino:%@
 s_gen:%u
 pn:"%@"
 tbn:"%@"
 bln:"%@"
 sc:%@
unknown
 lch:%llx
 over:%@
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/items/BRCLocalItem.m
-[BRCLocalStatInfo diffAgainstLocalInfo:]
-[BRCLocalStatInfo updateFilenameFromPath:]
-[BRCLocalStatInfo _markReserved]
-[BRCLocalStatInfo _markAlmostDead]
-[BRCLocalStatInfo updateAsAppLibraryRoot:]
-[BRCLocalStatInfo _markDead]
-[BRCLocalStatInfo _markLiveFromStageAsType:]
-[BRCLocalStatInfo _clearFileID]
-[BRCLocalStatInfo _clearGenerationID]
-[BRCLocalItem path]
SELECT rowid FROM client_items WHERE item_id = %@ AND zone_rowid = %@
SELECT 1 FROM server_items WHERE item_id = %@ AND zone_rowid = %@ LIMIT 1
SELECT 1 FROM server_items WHERE item_id = %@ AND item_state = 0 AND zone_rowid = %@ LIMIT 1
SELECT item_id FROM server_items WHERE item_id != %@ AND item_parent_id = %@ AND item_filename = %@ AND +zone_rowid = %@
SELECT name FROM os_names WHERE rowid = %@
INSERT OR IGNORE INTO os_names (name) VALUES (%@)
SELECT rowid FROM os_names WHERE name = %@
r:%lld 
i:%@ 
i:%@:%@ 
al:%@ 
o:%@ 
ld{%@} 
up:%@
 %@:%@
needs-os-upgrade
 uv:%d
 mt:%lld
 pzone:%@
 ppm:%@
 st{%@
 pino:%@
 sharing-options:{%@}
<%@:%p {ID : %@; name : %@}>
"%@" id:%@
rowid
side-car-ckinfo
parentFileID
syncUpState
owner
sharingOptions
minimumSupportedOS
isUserVisible
localDiffs
notifsRank
DELETE FROM client_items WHERE rowid = %lld
 WITH RECURSIVE item_parents (item_id, zone_rowid, item_file_id) AS (     SELECT item_parent_id, item_parent_zone_rowid, item_file_id FROM client_items      WHERE item_id = %@ AND zone_rowid = %@  UNION ALL     SELECT li.item_parent_id, li.item_parent_zone_rowid, li.item_file_id FROM client_items AS li  INNER JOIN item_parents AS p USING (item_id, zone_rowid)      LIMIT %u ) SELECT item_file_id, item_id, zone_rowid FROM item_parents
B24@?0@"BRCItemGlobalID"8@"NSNumber"16
iCloudDrive
smartFolders
remove
NEEDS_OS_UPGRADE_ERROR
NEEDS_OS_UPGRADE_ERROR_NO_OS_NAME_IOS
Deleted from DB
Inserted into DB
Ignored
Saved into DB
SELECT item_user_visible, item_scope, item_filename FROM client_items WHERE item_id = %@ AND zone_rowid = %@
v16@?0@"NSData"8
SELECT item_sharing_options FROM client_items WHERE item_id = %@ AND zone_rowid = %@
SELECT 1 FROM client_items WHERE item_parent_id = %@ AND item_parent_zone_rowid = %@ AND item_state = 0
-[BRCLocalItem evictInTask:options:error:]
-[BRCLocalItem startDownloadInTask:options:error:]
contents
only-thumbnail
content-for-thumb
-[BRFieldXattrBlob(BRCStageAdditions) applyToFileDescriptor:error:]
, ...
%s%@...
%s%@
brc_pack_xattrs
syncUpBudget
com.apple.brc.sync
q16@?0q8
metadata-sync
shared-db-sync
zone-health-sync
migrate-pcs-sync
push
periodicSyncDate
container-metadata
shared db
zone-health
side-car
DELETE FROM side_car_lookahead
 [sync-%@ throttled (next-try:in %.01fs)] error: %@
down
online
healthy
offline
low disk
SELECT COUNT(*) from server_items
SELECT COUNT(*) from client_items
 available
%@ (%@)
no environment
no token
system
+ network: %@
+ disk:    %@
+ power:   %@
+ optimize storage: %s
enabled
disabled
+ device name:   %@
scheduler
+ items:                 client:%@, server: %@
                         warning: %@
output may be truncated
+ push environment:      %@
+ push token:            %@
+ global sync up budget: %@
+ periodic sync:         %@
+ available quota:       %@%@
 [pending-quota]
+ container-metadata:    %@ %@
+ sharedb:               %@ %@
+ zone-health:           %@ %@
+ side-car:              %@ %@
+ pcs-migration:         %@
complete
unfinished
+ account: %@
not ready
com.apple.icloud-container.
%@%@
zoid
com.apple.bird.push-persistence
UIDevice
initUIDevice
BRCContainerScheduler.m
classUIDevice
/System/Library/Frameworks/UIKit.framework/UIKit
UIKitLibrary
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/containers/BRCContainerScheduler.m
Can't open UIKit
shared
<ct %@|%@ sz:%llu sig:%@>
<st %@|%@>
[%@,%@]
sharing/access-token
unreachable: encrypted access token %@ is of unexpected type
unreachable: reference identifier %@ is of unexpected type
token
ref_id
 ul-error:%@
 uploaded-assets
 prev-zone:%@
uploadedAssets
uploadError
prevZoneGlobalID
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE item_alias_target = %@ AND item_type = 3 AND item_state != 1
SELECT app_library_rowid FROM client_items WHERE item_alias_target = %@ AND item_type = 3
 paused:{bundle:%@, till:%@}
 ct{%@}
downloading{
 (%@)
}:%@
faulting
 thumb{
greedy
%ssig:%@
 live-losers:{%@}
 resolved-losers:{%@}
currentVersion
desiredVersion
liveConflictLoserEtags
resolvedConflictLoserEtags
liveThumbnailSignature
shouldAutomaticallyDownloadThumbnail
syncPausedByBundleID
syncPausedExpireTS
item %s is a live document without a version
missing-version
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/items/BRCDocumentItem.m
-[BRCDocumentItem markNeedsUploadOrSyncingUp]
-[BRCDocumentItem _nukePackageItemsFromDB:]
DELETE FROM item_recursive_properties WHERE item_rowid = %lld 
INSERT OR IGNORE INTO item_recursive_properties  ( item_rowid, item_parent_id, item_id, zone_rowid, item_type, item_parent_zone_rowid ) VALUES  (%lld, %@, %@, %@, %d, %@ )
UPDATE item_recursive_properties SET  dir_faults_count = %lld, faults_count = %lld, needs_faulting_count = %lld, uploaded_size = %lld, needs_upload_size = %lld, uploaded_count = %lld, needs_upload_count = %lld, downloaded_size = %lld, needs_download_size = %lld, downloaded_count = %lld, needs_download_count = %lld, dl_unstaged_count = %lld, needs_dl_unstage_count = %lld, synced_up_count = %lld, needs_sync_up_count = %lld, over_quota_count = %lld, shared_by_me_count = %lld, shared_to_me_count = %lld, needs_delete_doc_count = %lld  WHERE item_rowid = %lld 
INSERT INTO client_items ( rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp) VALUES ( %lld, %@, %@, %@, %ld, %@, %@, %d, %lld, %lld, %@, %@, %d, %@, %d, %d, %d, %lld, %lld, %lld, %@, %@, %d, %@, %@, %@, %@, %@, %@, %@, %@, %u, %@, %d, %llu, %@, %@, %@, %lld, %lld, %lld, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %llu, %@, %@, %@, %@, %@, %@, %@)
UPDATE client_items SET zone_rowid = %@ WHERE rowid = %llu
UPDATE client_items SET item_state = %d, item_processing_stamp = %@ WHERE rowid = %llu
UPDATE client_items SET  item_id = %@, item_creator_id = %@, item_sharing_options = %ld, item_side_car_ckinfo = %@, item_parent_zone_rowid = %@, item_localsyncupstate = %d, item_local_diffs = %llu, item_notifs_rank = %lld, app_library_rowid = %@, item_min_supported_os_rowid = %@, item_user_visible = %d, item_stat_ckinfo = %@, item_state = %d, item_type = %d, item_mode = %d, item_birthtime = %lld, item_lastusedtime = %lld, item_favoriterank = %lld, item_parent_id = %@, item_filename = %@, item_hidden_ext = %d, item_finder_tags = %@, item_xattr_signature = %@, item_trash_put_back_path = %@, item_trash_put_back_parent_id = %@, item_alias_target = %@, item_creator = %@, item_processing_stamp = %@, item_staged_file_id = %@, item_staged_generation = %u, item_bouncedname = %@, item_scope = %d,item_local_change_count = %llu, item_old_version_identifier = %@, version_name = %@, version_ckinfo = %@, version_mtime = %lld, version_size = %lld, version_thumb_size = %lld, version_thumb_signature = %@, version_content_signature = %@, version_xattr_signature = %@, version_edited_since_shared = %@, version_device = %@, version_conflict_loser_etags = %@, version_quarantine_info = %@, version_uploaded_assets = %@, version_upload_error = %@, version_old_zone_item_id = %@, version_old_zone_rowid = %@, version_local_change_count = %llu, version_old_version_identifier = %@, desired_version = %@, item_live_conflict_loser_etags = %@, item_file_id = %@, item_generation = %@, version_block_sync_until_bundle_id = %@, version_block_sync_until_timestamp = %@  WHERE rowid = %llu
SELECT zone_rowid, item_rank FROM server_items WHERE item_alias_target = %@ AND item_type = 3
-[BRCDocumentItem evictInTask:options:error:]
Item %@ is not on disk
file is flocked
SELECT version_block_sync_until_resuming FROM client_items WHERE rowid = %llu
UPDATE client_items SET version_block_sync_until_resuming = NULL WHERE rowid = %llu
successfully
with failure
-[BRCDocumentItem pauseFromSyncWithTimeout:forBundleID:error:]
timestamp
UPDATE client_items SET version_block_sync_until_bundle_id = %@, version_block_sync_until_timestamp = %llu, version_block_sync_until_resuming = NULL WHERE rowid = %llu
-[BRCDocumentItem resumeSyncForBundleID:dropLocalChanges:error:]
UPDATE client_items SET version_block_sync_until_bundle_id = NULL, version_block_sync_until_timestamp = NULL, version_block_sync_until_resuming = %s WHERE rowid = %llu
-[BRCDocumentItem resumeSyncForBundleID:dropLocalChanges:error:]_block_invoke
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE rowid > %llu   AND version_block_sync_until_bundle_id = %@ ORDER BY rowid ASC LIMIT %u
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE version_block_sync_until_timestamp < %llu ORDER BY rowid ASC LIMIT %u
from
' to '
v32@?0@"NSURL"8@"NSError"16@?<v@?>24
delete
rename
v40@?0@"NSURL"8@"NSURL"16@"NSError"24@?<v@?>32
 and content update
sync-down/container-metadata
infoPlist
v32@?0@"CKRecord"8@"CKRecordID"16@"NSError"24
v32@?0@"CKServerChangeToken"8Q16@"NSError"24
<upload[%lld] %@>
upload
v16@?0@"BRCFSEventToSyncUpEvent"8
v24@?0@"CKRecord"8d16
v24@?0@"CKRecord"8@"NSError"16
uploading
<%@[%@] %@>
clientRequestID
lastSyncStatus
lastSyncDownDate
changeToken
SELECT item_id FROM server_items  WHERE item_id != %@ AND item_parent_id = %@ AND item_filename = %@ AND +zone_rowid = %@
UPDATE OR IGNORE server_items SET  item_rank = NULL, item_depth = 0, item_filename = %@, item_origname = IFNULL(item_origname, item_filename) WHERE zone_rowid = %@ AND item_id = %@
SELECT item_favoriterank, item_lastusedtime, item_finder_tags, item_side_car_ckinfo FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT item_favoriterank, item_lastusedtime, item_finder_tags, item_side_car_ckinfo FROM side_car_lookahead WHERE record_name = %@
SELECT item_type FROM server_items WHERE item_id = %@ AND zone_rowid = %@
UPDATE server_items SET   item_rank = NULL, item_depth = 0, item_origname = %@, pcs_state = %d, item_sharing_options = (%lu | (item_sharing_options & %lu)), item_side_car_ckinfo = %@, item_stat_ckinfo = %@, item_state = %d, item_type = %d, item_mode = %d, item_birthtime = %lld, item_lastusedtime = %lld, item_favoriterank = %lld, item_parent_id = %@, item_filename = %@, item_hidden_ext = %d, item_finder_tags = %@, item_xattr_signature = %@, item_trash_put_back_path = %@, item_trash_put_back_parent_id = %@, item_alias_target = %@, item_creator = %@, quota_used = %@, recursive_child_count = %@, shared_children_count = %@, shared_alias_count = %@, child_count = %@ WHERE item_id = %@ AND zone_rowid = %@
INSERT INTO server_items ( item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_rank, item_origname, pcs_state, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, zone_rowid, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count) VALUES ( %@, %@, %ld, %@, NULL, %@, %d, %@, %d, %d, %d, %lld, %lld, %lld, %@, %@, %d, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@)
UPDATE server_items SET  version_mtime = %lld  WHERE item_id = %@ AND zone_rowid = %@
a side fault
an excluded
no record to update: %@
-[BRCServerZone _saveItemID:stat:serverMetrics:record:error:]
UPDATE server_items    SET item_rank = NULL, item_depth = 0, item_sharing_options = (%lu | (item_sharing_options & %lu)), version_name = %@, version_ckinfo = %@, version_mtime = %lld, version_size = %lld, version_thumb_size = %lld, version_thumb_signature = %@, version_content_signature = %@, version_xattr_signature = %@, version_edited_since_shared = %@, version_device = %@, version_conflict_loser_etags = %@, version_quarantine_info = %@  WHERE item_id = %@ AND zone_rowid = %@
chained
unchained
-[BRCServerZone _saveEditedDirOrDocStructureRecord:error:]
-[BRCServerZone _saveEditedDocumentContentRecord:error:]
-[BRCServerZone _saveEditedSymlinkRecord:error:]
UPDATE server_items    SET version_name = %@  WHERE item_id = %@ AND zone_rowid = %@
-[BRCServerZone _saveEditedAliasRecord:zonesNeedingAllocRanks:error:]
INSERT OR REPLACE INTO server_items ( zone_rowid, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_rank, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator) VALUES ( %@, %d, %@, %@, %ld, %@, NULL, %@, %d, %d, %d, %lld, %lld, %lld, %@, %@, %d, %@, %@, %@, %@, %@, %@)
UPDATE server_items SET item_rank = NULL WHERE item_id = %@ AND zone_rowid = %@
UPDATE server_items    SET item_rank = NULL, item_sharing_options = (%lu | (item_sharing_options & %lu)),         item_mode = (%ld | (item_mode & %lu)), item_depth = 0  WHERE item_id = %@ AND zone_rowid = %@
unreachable: structure record which isn't a directory or document
-[BRCServerZone _saveEditedRecord:zonesNeedingAllocRanks:error:]
UPDATE server_items AS si   SET item_sharing_options = ((item_sharing_options & %ld) | IFNULL((SELECT (pi.item_sharing_options & %ld) FROM server_items AS pi WHERE si.item_parent_id = pi.item_id AND si.zone_rowid = pi.zone_rowid), 0)) WHERE si.zone_rowid = %@ AND si.item_id = %@
UPDATE server_items SET item_state = 1, item_filename = %@, item_rank = NULL, item_depth = 0, item_parent_id = %@ WHERE zone_rowid = %@ AND item_id = %@
B24@?0@"CKRecordID"8@"CKRecord"16
UPDATE server_items SET item_sharing_options = %ld WHERE item_id = %@ AND zone_rowid = %@
SELECT item_lastusedtime FROM server_items ORDER BY item_lastusedtime DESC LIMIT 1 OFFSET %lld
 AND item_depth >= -1
 AND item_depth >= 0
SELECT rowid, item_id, item_parent_id, item_state, item_type, version_ckinfo, item_favoriterank, item_lastusedtime, item_finder_tags IS NOT NULL, item_sharing_options   FROM server_items  WHERE zone_rowid = %@ AND item_rank IS NULL%@
SELECT 1 FROM server_items WHERE zone_rowid = %@ AND item_parent_id = %@ AND item_state = 0 LIMIT 1
SELECT COUNT(*) FROM server_items WHERE zone_rowid = %@ AND item_parent_id = %@ AND item_state = 0
UPDATE server_items SET item_type = 9, item_rank = NULL WHERE item_id = %@ AND zone_rowid = %@ AND item_type = 0
<rdar://problem/37451020>
WITH RECURSIVE item_parents (item_id, item_state, item_type, depth) AS (     SELECT item_id, item_state, item_type, 0       FROM server_items      WHERE zone_rowid = %@ AND item_id = %@  UNION ALL     SELECT p.item_parent_id, c.item_state, c.item_type, c.depth + 1       FROM server_items AS p INNER JOIN item_parents AS c USING (item_id)      WHERE p.zone_rowid = %@      LIMIT %u) SELECT item_state, depth, item_type FROM item_parents WHERE item_id_is_root(item_id) OR item_type = 4
WITH RECURSIVE item_parents (item_parent_id, item_sharing_options) AS (     SELECT item_parent_id, item_sharing_options       FROM server_items      WHERE zone_rowid = %@ AND item_id = %@  UNION ALL     SELECT p.item_parent_id, p.item_sharing_options       FROM server_items AS p INNER JOIN item_parents AS c      WHERE p.zone_rowid = %@        AND c.item_parent_id = p.item_id      LIMIT %u) SELECT 1 FROM item_parents WHERE (item_sharing_options & 4) != 0
UPDATE server_items SET item_depth = %lld WHERE rowid = %lld
SELECT rowid   FROM server_items  WHERE zone_rowid = %@ AND item_rank IS NULL AND item_depth >= 0 ORDER BY item_depth ASC
UPDATE server_items SET item_rank = %lld WHERE rowid = %lld
SELECT 1 FROM server_items WHERE item_type IN (9, 10) AND zone_rowid = %@ LIMIT 1
We have failed streams even though we aren't caught up? Crashing to prevent state corruption
-[BRCServerZone didSyncDownRequestID:serverChangeToken:editedRecords:deletedRecordIDs:deletedShareRecordIDs:allocRankZones:caughtUp:pendingChanges:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/containers/BRCServerZone.m
UPDATE server_items SET item_type = 0 WHERE item_type = 9 AND zone_rowid = %@ LIMIT %lld
SELECT item_id FROM server_items WHERE zone_rowid = %@ AND item_rank = %lld
UPDATE server_items SET item_parent_id = %@ WHERE zone_rowid = %@ AND item_parent_id = %@
DELETE FROM server_items WHERE zone_rowid = %@ AND item_id = %@
v24@?0Q8^B16
DELETE FROM server_items WHERE zone_rowid = %@ LIMIT %lld
Unable to cross zone migrate
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE zone_rowid = %@
SELECT item_id FROM server_items WHERE zone_rowid = %@   AND item_parent_id = %@   AND item_type = 0
Needs Apply Changes:
-------------------
Under %@
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count, rowid      FROM server_items    WHERE zone_rowid = %@ AND item_parent_id = %@ ORDER BY item_filename
ERROR: item ID %@ seen twice
> apply{%@}
B36@?0@"BRCItemID"8i16@"NSString"20^@28
server items (%@)
============
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count, rowid      FROM server_items    WHERE zone_rowid = %@ AND item_parent_id = %@
- too many items, stopping -
- cancelled -
%*sERROR: item ID %@ seen twice
%*s%@
%*s> apply{%@}
B28@?0@"BRCItemID"8i16^@20
----------------------%@[%@]----------------------
SELECT COUNT(*) FROM server_items WHERE zone_rowid = %@
ORPHANED ITEMS:
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE zone_rowid = %@ AND call_block(%@, rowid)
you must override this
-[BRCServerZone validateStructureLoggingToFile:db:]
-[BRCServerZone validateItemsLoggingToFile:db:]
moved
full-sync
fetched-recents
fetched-favorites
ever-full-sync
create table backup_manifest (relative_path blob not null, file_id integer, doc_id integer, gen_count integer, is_directory integer, new_file_id integer, new_doc_id integer, new_gen_count integer)
INSERT INTO backup_manifest (relative_path, file_id, doc_id, gen_count, is_directory, new_file_id, new_doc_id, new_gen_count) VALUES (%s, %lld, %lld, %d, %d, NULL, NULL, NULL)
CREATE UNIQUE INDEX relative_path_index ON backup_manifest (relative_path)
SELECT * FROM backup_manifest WHERE new_file_id IS NULL
UPDATE backup_manifest SET new_file_id = %llu,    new_doc_id = %@,    new_gen_count = %d WHERE relative_path = %@
ATTACH DATABASE %@ AS clientdb
PRAGMA foreign_keys = ON
PRAGMA foreign_keys = OFF
UPDATE clientdb.client_items SET item_file_id = -item_file_id
UPDATE clientdb.client_items SET item_doc_id = -item_doc_id
CREATE INDEX file_id_gen_count_index ON backup_manifest(file_id, gen_count)
CREATE INDEX doc_id_index ON backup_manifest(doc_id)
UPDATE clientdb.client_items  SET item_generation = (SELECT new_gen_count FROM backup_manifest WHERE file_id = -clientdb.client_items.item_file_id AND gen_count = clientdb.client_items.item_generation)
UPDATE OR IGNORE clientdb.client_items  SET item_file_id = (SELECT new_file_id FROM backup_manifest WHERE file_id = -clientdb.client_items.item_file_id)
UPDATE OR IGNORE clientdb.client_items  SET item_doc_id = (SELECT new_doc_id FROM backup_manifest WHERE doc_id = -clientdb.client_items.item_doc_id)
UPDATE OR IGNORE clientdb.client_items SET item_staged_generation = NULL WHERE item_staged_generation IS NOT NULL
UPDATE OR IGNORE clientdb.client_items SET item_staged_file_id = NULL WHERE item_staged_file_id IS NOT NULL
SELECT counter FROM clientdb.backup_detector
UPDATE clientdb.backup_detector SET old = %llu, new = %llu
SELECT new_file_id FROM backup_manifest WHERE file_id = %llu
Library/Caches/com.apple.bird
account.1
MobileHost.txt
UnknownHost.txt
iCloudDriveManaged
com.apple.CloudDocs.iCloudDriveFileProvider
v24@?0@"FPItem"8@"NSError"16
File Provider Storage/Library/Mobile Documents
Library
group.com.apple.iCloudDrive
File Provider Storage/DownloadStage
structure
encryptedBasename
basehash
bounceNo
extension
parent
target
executable
writable
fileContent
pkgManifest
pkgContent
pkgSignature
pkgXattrs
thumb1024
thumbQLMetadata
lastOpenTime
favoriteRank
xattr
restorePath
restoreParent
targetPath
bookmarkContent
lastEditorName
countMetrics
ftags
quarantine
ignorePkgExtension
updateTime
zoneState
zoneDetails
message
records
perParticipantMetadata
shareReference
participantDocumentToken
alias/
shareAlias/
symlink/
finderBookmark/
directory/
documentStructure/
documentContent/
directory/appData_
directory/appDocuments_
ppm_
br_initialItem
br_pathMatchID
br_pathMatchEtag
br_deleteChangeToken
br_etagInPreviousZone
brc_itemIDWithSession: are not supposed to trigger an error: %@
-[CKRecordID(BRCItemAdditions) brc_itemIDWithSession:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/sync/records/CKRecord+BRCItemAdditions.m
Found appLibrary %@ with invalid dbRowID for zoneID %@
Can't find appLibrary corresponding to zoneID %@
SELECT zone_rowid FROM server_items WHERE item_id = %@
missing key '%@' in %@ record %@
invalid value for key '%@' in %@ record %@: %@ %@
-[CKRecord(BRCSerializationAdditions) deserializeAliasInfo:serverZone:error:]
Records zoneID %@ must be equal to parents zoneID %@
%@:%@/%@
invalid record type for record %@: %@
recordType
-[CKRecord(BRCSerializationAdditions) deserializeStatInfo:serverMetrics:itemID:session:error:]
%@ record %@ is both a file and a package
asset+pkg
%@ record %@ is neither a file nor a package
pkg+signature
-[CKRecord(BRCSerializationAdditions) deserializeVersion:fakeStatInfo:clientZone:error:]
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE item_id = %@
none
_Documents
br_oplockMergeEtag
br_updateDropped
user
ckUserId
last
first
device
_Data
AppContainer
BRCFakeRecordWithErrorMarkerFor20716676
DOCUMENT_DEFAULT_NAME
nil-token
nil-cursor
SELECT 1 FROM client_items WHERE version_old_zone_item_id = %@ AND version_old_zone_rowid = %@
 parent = %@
(dead in server truth)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE item_stat_ckinfo IS NULL AND item_parent_id = %@ AND zone_rowid = %@
v24@?0@"NSArray"8@"NSError"16
sync-up-%@
sync-up/
v36@?0B8@"BRCListDirectoryContentsOperation"12Q20@"NSError"28
UPDATE server_items SET pcs_state = 3 WHERE item_id = %@ AND zone_rowid = %@ AND pcs_state = 0
v24@?0@"NSData"8@"NSError"16
unreachable: Timed out while waiting for new web-sharing identity
 WITH RECURSIVE item_parents (item_id, item_sharing_options, item_parent_id) AS (          SELECT item_id, item_sharing_options, item_parent_id FROM server_items           WHERE item_id = %@ AND zone_rowid = %@       UNION ALL          SELECT li.item_id, li.item_sharing_options, li.item_parent_id FROM server_items AS li     INNER JOIN item_parents AS p WHERE li.zone_rowid = %@ AND p.item_parent_id = li.item_id          LIMIT %u )        SELECT item_id FROM item_parents WHERE (item_sharing_options & 4) != 0
SyncUp
testZone
<%@ delay:%.1fs id:%@
 next-try in %.1fs>
 expired>
<%@ {  m:%.1f  h:%.1f  d:%.1f  }>
no budget left for %.1fs {
budget available {
  %d:%02d:%02ds ago
  m:%.1f%% (%.1f)
  h:%.1f%% (%.1f)
  d:%.1f%% (%.1f)
totalSyncOperations
failedSyncOperations
options
SELECT rowid, app_library_name, app_library_plist, zone_rowid FROM app_libraries WHERE app_library_name = %@ AND (app_library_owner = %@ OR app_library_owner IS NULL)
SELECT rowid, app_library_name, app_library_plist, zone_rowid FROM app_libraries WHERE zone_rowid = %@
can't initialize library root with invalid library rowid %@
-[BRCItemID_v9 _initAsLibraryRootWithAppLibraryRowID:enclosureUUID:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/database/BRCDatabaseSchema.m
DROP INDEX IF EXISTS "client_items/item_file_id_unique"
DROP INDEX IF EXISTS "client_items/item_doc_id"
CREATE TABLE devices ( key integer primary key, name text unique not null)
CREATE TABLE server_boot_history ( date integer primary key, os text not null, br text not null, bird_schema integer not null, db_schema integer not null)
CREATE TABLE server_containers( container_id text primary key, container_schema_version integer not null, container_plist blob)
CREATE TABLE server_state (state, config_plist)
INSERT INTO server_state values (NULL, NULL)
CREATE TABLE backup_detector( old integer, new integer, counter integer, os text not null, br text not null)
INSERT INTO backup_detector (old, new, counter, os, br) VALUES (%llu, %llu, %llu, %@, %@)
CREATE TABLE boot_history ( date integer primary key, os text not null, br text not null, bird_schema integer not null, db_schema integer not null)
CREATE TABLE client_containers( container_id text primary key, container_schema_version integer not null, container_plist blob)
CREATE TABLE client_state (v)
INSERT INTO client_state values (NULL)
SELECT container_id, container_plist FROM client_containers
items
unapplied_table
server_items
UPDATE %@ SET item_live_conflict_loser_etags = call_block(%@, item_live_conflict_loser_etags) WHERE item_live_conflict_loser_etags IS NOT NULL
INSERT OR IGNORE INTO %@ (throttle_id) SELECT item_rank FROM %@ WHERE version_conflict_loser_etags IS NOT NULL AND item_rank IS NOT NULL
CREATE TABLE server_zones ( rowid integer PRIMARY KEY, zone_owner text not null, zone_name text not null, zone_plist blob, UNIQUE (zone_owner, zone_name))
CREATE TABLE server_xattr_blobs ( zone_rowid integer not null, signature blob not null, data blob not null, PRIMARY KEY(zone_rowid, signature))
CREATE TABLE server_pending_fetches ( zone_rowid integer not null, record_id blob not null, record blob, PRIMARY KEY (zone_rowid, record_id))
INSERT INTO server_zones (rowid, zone_owner, zone_name, zone_plist) SELECT NULL, %@, container_id, container_plist FROM server_containers
DROP TABLE server_containers
SELECT rowid, zone_name FROM server_zones
server_xattrs
INSERT INTO server_xattr_blobs SELECT %@, signature, data FROM %@
DROP TABLE %@
pending_fetches
CREATE TABLE client_zones ( rowid integer PRIMARY KEY, zone_owner text not null, zone_name text not null, zone_plist blob, UNIQUE (zone_owner, zone_name))
CREATE TABLE client_reader_throttle ( throttle_id integer primary key, zone_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0)
CREATE INDEX "client_reader_throttle/zone_rowid" ON client_reader_throttle (zone_rowid)
CREATE INDEX "client_reader_throttle/next_retry_stamp_active_state" ON client_reader_throttle (throttle_state, next_retry_stamp ASC, throttle_id ASC) WHERE throttle_state = 1
CREATE INDEX "client_reader_throttle/zone_rowid__throttle_state" ON client_reader_throttle (throttle_state, zone_rowid)
CREATE INDEX "client_reader_throttle/expire_stamp_inactive_state" ON client_reader_throttle (throttle_state, expire_stamp ASC) WHERE throttle_state = 0
CREATE TABLE client_unapplied_table ( throttle_id integer primary key, zone_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, item_id blob not null, apply_kind integer not null)
CREATE INDEX "client_unapplied_table/zone_rowid" ON client_unapplied_table (zone_rowid)
CREATE INDEX "client_unapplied_table/next_retry_stamp_active_state" ON client_unapplied_table (throttle_state, next_retry_stamp ASC, throttle_id ASC) WHERE throttle_state = 1
CREATE INDEX "client_unapplied_table/zone_rowid__kind__throttle_state" ON client_unapplied_table (throttle_state, zone_rowid, apply_kind)
CREATE INDEX "client_unapplied_table/expire_stamp_inactive_state" ON client_unapplied_table (throttle_state, expire_stamp ASC) WHERE throttle_state = 0
CREATE TABLE client_document_access ( zone_rowid text not null , item_rowid integer not null , evictable integer not null , access_time integer not null default 0, PRIMARY KEY (zone_rowid, item_rowid))
CREATE INDEX "client_document_access/access_item" ON client_document_access (access_time)
CREATE INDEX "client_document_access/evictable" ON client_document_access (evictable)
DROP TABLE IF EXISTS document_access
INSERT INTO client_zones (rowid, zone_owner, zone_name, zone_plist)    SELECT call_block(%@, container_id), %@, container_id, container_plist      FROM client_containers
DROP TABLE client_containers
SELECT rowid, zone_name FROM client_zones
desired_additions
UPDATE %@   SET item_state = -1, item_processing_stamp = 1 WHERE item_type = 3   AND item_localsyncupstate = 3
reader_throttle
 CREATE TABLE server_items ( zone_rowid integer not null, item_id blob not null, item_rank integer, item_sharing_options integer not null default 0, item_sharing_etag blob default null, item_stat_ckinfo blob, item_state integer not null, item_type integer not null, item_mode integer not null, item_creator_id integer not null, item_birthtime integer not null, item_parent_id blob not null, item_filename text not null, item_origname text, item_hidden_ext integer not null, item_finder_tags blob, item_xattr_signature blob, version_ckinfo blob, version_mtime integer, version_name text, version_size integer, version_thumb_size integer, version_thumb_signature blob, version_content_signature blob, version_xattr_signature blob, version_device integer, version_conflict_loser_etags blob, version_quarantine_info blob, PRIMARY KEY (zone_rowid, item_id), UNIQUE (item_rank))
CREATE INDEX "server_items/path_index" ON server_items (zone_rowid, item_parent_id, item_filename)
CREATE INDEX "server_items/alias_map" ON server_items (item_type, item_filename, zone_rowid, item_rank) WHERE item_type = 3
CREATE INDEX "server_items/item_rank" ON server_items (zone_rowid, item_rank)
CREATE INDEX "server_items/item_parent_id__item_state" ON server_items (zone_rowid, item_parent_id, item_state)
CREATE INDEX "server_items/item_xattr_signature" ON server_items (zone_rowid, item_xattr_signature)
CREATE INDEX "server_items/version_xattr_signature" ON server_items (zone_rowid, version_xattr_signature)
CREATE TABLE server_owners ( owner_key integer primary key, owner_name text not null, owner_plist blob, UNIQUE (owner_name))
DROP TABLE IF EXISTS %@
INSERT INTO server_items (zone_rowid, item_sharing_options, item_id, item_rank, item_stat_ckinfo, item_state, item_type, item_mode, item_creator_id, item_birthtime, item_parent_id, item_filename, item_origname, item_hidden_ext, item_finder_tags, item_xattr_signature, version_ckinfo, version_mtime, version_name, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info) SELECT %@, call_block(%@, item_iwork_sharing_info), item_id, item_rank, item_stat_ckinfo, item_state, item_type, item_mode, item_creator_id, item_birthtime, item_parent_id, item_filename, item_origname, item_hidden_ext, item_finder_tags, item_xattr_signature, version_ckinfo, version_mtime, version_name, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info FROM %@
DROP VIEW IF EXISTS %@
server_items_view
 CREATE TABLE client_items ( rowid integer primary key, zone_rowid integer not null, item_id blob not null, item_sharing_options integer not null default 0, item_localsyncupstate integer, item_in_flight_diffs integer, item_local_diffs integer not null, item_notifs_rank integer not null, item_transfer_priority integer, item_processing_stamp integer, item_doc_id integer, item_file_id integer, item_generation, item_localname text, item_bouncedname text, item_staged_file_id integer, item_staged_generation integer, item_stat_ckinfo blob, item_state integer not null, item_type integer not null, item_mode integer not null, item_creator_id integer not null, item_birthtime integer not null, item_parent_id blob not null, item_filename text, item_hidden_ext integer not null, item_finder_tags blob, item_xattr_signature blob, item_live_conflict_loser_etags blob, version_ckinfo blob, version_mtime integer, version_name text, version_size integer, version_thumb_size integer, version_thumb_signature blob, version_content_signature blob, version_xattr_signature blob, version_device integer, version_conflict_loser_etags blob, version_quarantine_info blob, version_uploaded_assets blob, version_upload_error blob, desired_version blob, UNIQUE (zone_rowid, item_id), UNIQUE (zone_rowid, item_doc_id), UNIQUE (zone_rowid, item_file_id), UNIQUE (item_staged_file_id), UNIQUE (zone_rowid, item_parent_id, item_localname))
CREATE INDEX "client_items/item_parent_id__item_state" ON client_items (zone_rowid, item_parent_id, item_state)
CREATE INDEX "client_items/item_path" ON client_items (zone_rowid, item_parent_id, item_filename)
CREATE INDEX "client_items/alias_map" ON client_items (item_type, item_filename, zone_rowid) WHERE item_type = 3
CREATE INDEX "client_items/item_in_flight_diffs" ON client_items (zone_rowid, item_in_flight_diffs)
CREATE INDEX "client_items/item_bouncedname" ON client_items (item_bouncedname) WHERE item_bouncedname IS NOT NULL
CREATE INDEX "client_items/lost_scan_index" ON client_items (item_state, zone_rowid, item_processing_stamp) WHERE item_state = -1
CREATE INDEX "client_items/zombie_scan_index" ON client_items (item_state, zone_rowid, item_processing_stamp) WHERE item_state = -3
CREATE INDEX "client_items/item_notifs_rank" ON client_items (zone_rowid, item_notifs_rank)
CREATE INDEX "client_items/download_index" ON client_items (zone_rowid, item_staged_file_id, desired_version)
CREATE INDEX "client_items/eviction_index" ON client_items (item_localsyncupstate, zone_rowid, version_size) WHERE item_localsyncupstate = 0
CREATE INDEX "client_items/sync_up_enumerator_1" ON client_items (item_localsyncupstate, zone_rowid, item_type) WHERE item_localsyncupstate = 4
CREATE INDEX "client_items/sync_up_enumerator_2" ON client_items (item_localsyncupstate, zone_rowid, item_state) WHERE item_localsyncupstate = 4
 CREATE TABLE client_pkg_items ( item_doc_id integer not null, rel_path text not null, zone_rowid integer not null, item_type integer not null, asset_rank integer not null, is_dirty integer, quarantine_info blob, file_id integer not null, signature_or_link blob, generation, size integer, mode integer, mtime integer, PRIMARY KEY (item_doc_id, rel_path ASC))
CREATE UNIQUE INDEX "client_pkg_items/asset_rank" ON client_pkg_items (item_doc_id, asset_rank)
CREATE INDEX "client_pkg_items/size" ON client_pkg_items (item_doc_id, size)
CREATE INDEX "client_pkg_items/is_dirty" ON client_pkg_items (item_doc_id, is_dirty)
CREATE INDEX "client_pkg_items/zone_rowid" ON client_pkg_items (zone_rowid)
CREATE TABLE client_uploads ( throttle_id integer primary key, zone_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, item_id blob not null, transfer_queue blob not null, transfer_size integer not null, transfer_record blob, transfer_stage blob, transfer_operation blob, UNIQUE(transfer_stage))
CREATE INDEX "client_uploads/gc_index" ON client_uploads (throttle_state, expire_stamp ASC) WHERE throttle_state = 0
CREATE INDEX IF NOT EXISTS "client_uploads/scheduling_by_size" ON client_uploads (throttle_state, transfer_queue, transfer_operation, transfer_size ASC)  WHERE throttle_state = 1
CREATE INDEX IF NOT EXISTS "client_uploads/scheduling_by_stamp" ON client_uploads (throttle_state, transfer_queue, transfer_operation, next_retry_stamp ASC)  WHERE throttle_state = 1
CREATE INDEX "client_uploads/transfer_operation" ON client_uploads (transfer_operation) WHERE transfer_operation IS NOT NULL
CREATE INDEX "client_uploads/zone_rowid__throttle_state" ON client_uploads (throttle_state, zone_rowid)
CREATE INDEX "client_uploads/reset_index" ON client_uploads (zone_rowid, throttle_state)
CREATE INDEX "client_uploads/out_of_quota_index" ON client_uploads (throttle_state, zone_rowid, transfer_size)  WHERE throttle_state = 32
pkg_items
INSERT INTO client_items (rowid, zone_rowid, version_upload_error, item_sharing_options, item_id, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, item_transfer_priority, item_processing_stamp, item_doc_id, item_file_id, item_generation, item_localname, item_bouncedname, item_staged_file_id, item_staged_generation, item_stat_ckinfo, item_state, item_type, item_mode, item_creator_id, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_live_conflict_loser_etags, version_ckinfo, version_mtime, version_name, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, desired_version) SELECT rowid, %@, NULL, call_block(%@, item_iwork_sharing_info), item_id, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, item_transfer_priority, item_processing_stamp, item_doc_id, item_file_id, item_generation, item_localname, item_bouncedname, item_staged_file_id, item_staged_generation, item_stat_ckinfo, item_state, item_type, item_mode, item_creator_id, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_live_conflict_loser_etags, version_ckinfo, version_mtime, version_name, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, desired_version FROM %@
items_view
INSERT INTO client_pkg_items (zone_rowid, item_doc_id, rel_path, item_type, asset_rank, is_dirty, quarantine_info, file_id, signature_or_link, generation, size, mode, mtime) SELECT %@, item_doc_id, rel_path, item_type, asset_rank, is_dirty, quarantine_info, file_id, signature_or_link, generation, size, mode, mtime FROM %@
DELETE FROM client_reader_throttle
INSERT INTO client_reader_throttle (zone_rowid, throttle_id, throttle_state) SELECT zone_rowid, rowid, 1 FROM client_items WHERE item_localsyncupstate = 2
INSERT INTO client_uploads (zone_rowid, throttle_id, throttle_state, item_id, transfer_queue, transfer_size) SELECT zone_rowid, rowid, 1, item_id, '_prepare', version_size + version_thumb_size  FROM client_items WHERE item_localsyncupstate = 1
DROP TABLE IF EXISTS server_alias_map
DELETE FROM client_unapplied_table
DROP TABLE IF EXISTS alias_map
INSERT INTO client_unapplied_table (zone_rowid, throttle_id, throttle_state, item_id, apply_kind) SELECT zone_rowid, -rowid, 1, item_id, %u FROM client_items WHERE item_localsyncupstate = 1
INSERT INTO client_unapplied_table (zone_rowid, throttle_id, throttle_state, item_id, apply_kind) SELECT zone_rowid, item_rank, 1, item_id, %u FROM server_items
DROP TABLE IF EXISTS client_desired_additions
CREATE TABLE client_downloads ( throttle_id integer not null, zone_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, item_id blob not null, transfer_queue blob not null, transfer_size integer not null, transfer_record blob, transfer_stage blob, transfer_operation blob, download_kind integer not null, download_etag blob not null, download_priority integer not null, download_request_stamp integer not null, download_error blob, UNIQUE(transfer_stage), UNIQUE(throttle_id, download_kind, download_etag))
CREATE INDEX "client_downloads/scheduling_by_priority" ON client_downloads (throttle_state, transfer_queue, transfer_operation, download_priority DESC, download_request_stamp DESC) WHERE throttle_state = 1
CREATE INDEX "client_downloads/scheduling_by_priority_and_kind" ON client_downloads (throttle_state, transfer_queue, transfer_operation, download_kind, download_priority DESC, download_request_stamp DESC) WHERE throttle_state = 1
CREATE INDEX "client_downloads/scheduling_by_stamp" ON client_downloads (throttle_state, transfer_queue, transfer_operation, next_retry_stamp ASC)  WHERE throttle_state = 1
CREATE INDEX "client_downloads/gc_index" ON client_downloads (throttle_state, expire_stamp ASC) WHERE throttle_state = 0
CREATE INDEX "client_downloads/transfer_operation" ON client_downloads (transfer_operation) WHERE transfer_operation IS NOT NULL
CREATE INDEX "client_downloads/zone_rowid__throttle_state" ON client_downloads (throttle_state, zone_rowid)
CREATE INDEX "client_downloads/reset_index" ON client_downloads (zone_rowid, throttle_state)
ALTER TABLE client_uploads ADD COLUMN upload_error blob
CREATE INDEX "client_downloads/low_disk_index" ON client_downloads (throttle_state, throttle_id, download_kind)  WHERE throttle_state = 43
DROP INDEX "client_document_access/access_item"
CREATE INDEX "server_items/version_size" ON server_items (version_size)
CREATE TABLE spotlight_ranks ( doc_id integer not null, notif_rank integer not null, PRIMARY KEY (doc_id, notif_rank ASC))
ALTER TABLE backup_detector ADD COLUMN uuid blob
UPDATE backup_detector SET uuid = %@
CREATE INDEX "client_pkg_items/item_doc_id" ON client_pkg_items (item_doc_id, zone_rowid)
CREATE INDEX "client_items/doc_sync_state" ON client_items (zone_rowid, item_localsyncupstate, item_type)WHERE item_type = 1  AND item_localsyncupstate IN (2, 3, 4)
DROP INDEX "client_items/item_notifs_rank"
CREATE INDEX "client_items/item_notifs_rank" ON client_items (item_notifs_rank, zone_rowid)
CREATE INDEX "client_items/spotlight_index" ON client_items (item_type, item_state, item_doc_id, item_notifs_rank) WHERE item_type in (1, 2)
CREATE INDEX "spotlight_ranks/notif_rank" ON spotlight_ranks (notif_rank)
ALTER TABLE client_items ADD COLUMN item_scope integer NOT NULL DEFAULT 0
CREATE INDEX item_scope_index ON client_items(zone_rowid, item_notifs_rank, item_scope, item_state)
CREATE INDEX pending_download_docs ON client_items(item_doc_id, desired_version) WHERE desired_version != NULL
ALTER TABLE server_items ADD COLUMN item_depth integer NOT NULL DEFAULT 0
CREATE INDEX "server_items/item_rank_depth" ON server_items (zone_rowid, item_rank, item_depth)
ALTER TABLE client_items ADD COLUMN item_min_supported_os_rowid integer DEFAULT NULL
CREATE TABLE os_names ( name text unique )
UPDATE client_document_access SET evictable = (SELECT version_mtime FROM client_items as ci WHERE ci.rowid = item_rowid) WHERE access_time = 0 AND evictable = 0 AND (SELECT version_size FROM client_items as ci WHERE ci.rowid = item_rowid) > %lld AND (SELECT item_type FROM client_items as ci WHERE ci.rowid = item_rowid) = 1
 CREATE TABLE app_libraries ( rowid integer PRIMARY KEY, app_library_plist blob )
SELECT rowid, zone_plist FROM client_zones
maxLostStamp
deepScanStamp
requestID
lastApplyRank
appliedTombstoneRanks
syncUpThrottle
syncDownThrottle
INSERT INTO app_libraries (rowid, app_library_plist) VALUES (%@, %@)
ALTER TABLE client_items ADD COLUMN app_library_rowid
UPDATE client_items SET app_library_rowid = zone_rowid
CREATE UNIQUE INDEX "client_items/item_doc_id" ON client_items (item_doc_id)
CREATE UNIQUE INDEX "client_items/item_file_id_unique" ON client_items (item_file_id, item_state)WHERE item_state != -3
CREATE INDEX "client_items/item_id" ON client_items(item_id)
CREATE INDEX "client_items/item_file_id" ON client_items (item_file_id)
DROP INDEX "client_items/item_parent_id__item_state"
CREATE INDEX "client_items/item_parent_id__item_state" ON client_items (item_parent_id, item_state)
DROP INDEX "client_items/item_path"
CREATE INDEX "client_items/item_path" ON client_items (item_parent_id, item_filename)
CREATE INDEX "client_items/item_parent_id__item_localname" ON client_items (item_parent_id, item_localname)
 CREATE TABLE client_pkg_items_tmp ( item_doc_id integer not null, rel_path text not null, item_type integer not null, asset_rank integer not null, is_dirty integer, quarantine_info blob, file_id integer not null, signature_or_link blob, generation, size integer, mode integer, mtime integer, PRIMARY KEY (item_doc_id, rel_path ASC))
INSERT INTO client_pkg_items_tmp (item_doc_id, rel_path, item_type, asset_rank, is_dirty, quarantine_info, file_id, signature_or_link, generation, size, mode, mtime) SELECT item_doc_id, rel_path, item_type, asset_rank, is_dirty, quarantine_info, file_id, signature_or_link, generation, size, mode, mtime FROM client_pkg_items
DROP TABLE client_pkg_items
ALTER TABLE client_pkg_items_tmp RENAME TO client_pkg_items
DROP INDEX item_scope_index
CREATE INDEX "client_items/item_scope_index" ON client_items(zone_rowid, item_notifs_rank, item_scope, item_state)
DROP INDEX pending_download_docs
CREATE INDEX "client_items/pending_download_docs" ON client_items(item_doc_id, desired_version) WHERE desired_version != NULL
DROP INDEX "client_items/doc_sync_state"
CREATE INDEX "server_items/item_id" ON server_items(item_id)
CREATE TABLE users ( user_key integer primary key, user_name text not null, user_plist blob, UNIQUE (user_name))
INSERT INTO users(user_key, user_name, user_plist) SELECT owner_key, owner_name, owner_plist FROM server_owners
DROP TABLE server_owners
ALTER TABLE client_downloads ADD COLUMN unit_count_completed INTEGER DEFAULT 0
ALTER TABLE client_document_access RENAME TO client_document_access_tmp
CREATE TABLE client_document_access ( item_rowid integer primary key, evictable integer not null , access_time integer not null default 0)
INSERT INTO client_document_access(item_rowid, evictable, access_time) SELECT item_rowid, evictable, access_time FROM client_document_access_tmp
DROP TABLE client_document_access_tmp
ALTER TABLE server_items ADD COLUMN item_trash_put_back_parent_id BLOB DEFAULT NULL
ALTER TABLE server_items ADD COLUMN item_trash_put_back_path BLOB DEFAULT NULL
ALTER TABLE client_items ADD COLUMN item_trash_put_back_parent_id BLOB DEFAULT NULL
ALTER TABLE client_items ADD COLUMN item_trash_put_back_path BLOB DEFAULT NULL
DROP INDEX "server_items/path_index"
CREATE INDEX "server_items/path_index" ON server_items (item_parent_id, item_filename)
ALTER TABLE client_uploads ADD COLUMN upload_priority integer DEFAULT 0
ALTER TABLE client_uploads ADD COLUMN upload_request_stamp integer DEFAULT 0
CREATE INDEX "client_pkg_items/asset_rank" ON client_pkg_items (item_doc_id, asset_rank)
DROP INDEX "client_items/lost_scan_index"
DROP INDEX "client_items/zombie_scan_index"
CREATE INDEX "client_items/lost_scan_index" ON client_items (item_state, app_library_rowid, item_processing_stamp) WHERE item_state = -1
CREATE INDEX "client_items/zombie_scan_index" ON client_items (item_state, app_library_rowid, item_processing_stamp) WHERE item_state = -3
CREATE INDEX "client_items/doc_sync_state" ON client_items (zone_rowid, item_localsyncupstate, item_type)WHERE item_type = 1
ALTER TABLE client_items ADD COLUMN item_thumb_greedy integer default 0
ALTER TABLE client_items ADD COLUMN item_thumb_live_signature blob default null
CREATE INDEX "client_document_access/evictable/item_rowid" ON client_document_access (item_rowid)
ALTER TABLE app_libraries ADD COLUMN app_library_name text default null
ALTER TABLE app_libraries ADD COLUMN app_library_owner text default null
ALTER TABLE app_libraries ADD COLUMN zone_rowid integer default 0
UPDATE app_libraries SET app_library_name = (SELECT zone_name FROM client_zones WHERE app_libraries.rowid = client_zones.rowid),     app_library_owner = (SELECT zone_owner FROM client_zones WHERE app_libraries.rowid = client_zones.rowid),     zone_rowid = rowid
CREATE TABLE rowid_reservations ( rowid integer PRIMARY KEY, container_id text not null, owner text, UNIQUE (container_id, owner))
SELECT zone_name, zone_owner, rowid FROM server_zones WHERE zone_plist IS NULL
INSERT INTO rowid_reservations  (container_id, owner, rowid)  VALUES (%@, %@, %@)
DELETE FROM server_zones WHERE zone_plist IS NULL
INSERT INTO rowid_reservations  (rowid, container_id, owner) VALUES (%@, %@, %@)
CREATE INDEX "client_items/item_parent_id__item_state" ON client_items (app_library_rowid, item_parent_id, item_state)
ALTER TABLE rowid_reservations RENAME TO rowid_reservations_old
INSERT INTO rowid_reservations  ( rowid, container_id, owner ) SELECT rowid, container_id, owner FROM rowid_reservations_old
DROP TABLE rowid_reservations_old
CREATE UNIQUE INDEX "server_zones/zone_name__zone_owner" ON server_zones (zone_name, zone_owner)
CREATE UNIQUE INDEX "client_zones/zone_name__zone_owner" ON client_zones (zone_name, zone_owner)
SELECT rowid FROM rowid_reservations WHERE owner = %@
SELECT COUNT(*) FROM app_libraries GROUP BY app_library_name, app_library_owner
ALTER TABLE app_libraries RENAME TO app_libraries_old
CREATE TABLE app_libraries ( rowid integer PRIMARY KEY , app_library_plist blob , app_library_name text default null , app_library_owner text default null , zone_rowid integer default 0 , UNIQUE (app_library_name, app_library_owner))
INSERT INTO app_libraries        (rowid, app_library_plist, app_library_name, app_library_name, app_library_owner, zone_rowid) SELECT rowid, app_library_plist, app_library_name, app_library_name, app_library_owner, zone_rowid FROM app_libraries_old
DROP TABLE app_libraries_old
CREATE TABLE aggregates ( key TEXT NOT NULL, value INTEGER NOT NULL DEFAULT 0 )
INSERT INTO aggregates (key, value) SELECT 'version_size_sum', COALESCE(SUM(version_size), 0) FROM server_items
CREATE TRIGGER insert_version_sum_size AFTER INSERT ON server_items  BEGIN  UPDATE aggregates SET value = (value + COALESCE(new.version_size, 0)) WHERE key = 'version_size_sum';   END
CREATE TRIGGER update_version_sum_size UPDATE OF version_size ON server_items  BEGIN  UPDATE aggregates SET value = (value - COALESCE(old.version_size, 0) + COALESCE(new.version_size, 0)) WHERE key = 'version_size_sum';   END
CREATE TRIGGER delete_version_sum_size BEFORE DELETE ON server_items  BEGIN  UPDATE aggregates SET value = (value - COALESCE(old.version_size, 0)) WHERE key = 'version_size_sum';   END
CREATE TABLE client_pkg_sizes (item_doc_id integer not null primary key, aggregate_size integer not null default 0, largest_file_size integer not null default 0)
INSERT INTO client_pkg_sizes SELECT item_doc_id, COALESCE(SUM(size), 0), COALESCE(MAX(size), 0) FROM client_pkg_items GROUP BY item_doc_id
CREATE TRIGGER "client_pkg_items/increase_pkg_size" AFTER INSERT ON client_pkg_items BEGIN INSERT OR IGNORE INTO client_pkg_sizes VALUES (new.item_doc_id, 0, 0); UPDATE client_pkg_sizes SET aggregate_size = aggregate_size + COALESCE(new.size, 0), largest_file_size = MAX(COALESCE(new.size,0), largest_file_size) WHERE item_doc_id = new.item_doc_id; END
CREATE TRIGGER "client_pkg_items/update_pkg_size" UPDATE OF size ON client_pkg_items BEGIN UPDATE client_pkg_sizes SET aggregate_size = aggregate_size - COALESCE(old.size, 0) + COALESCE(new.size, 0), largest_file_size = MAX(COALESCE(new.size,0), largest_file_size) WHERE item_doc_id = new.item_doc_id; END
CREATE TRIGGER "client_pkg_items/reduce_pkg_size"  BEFORE DELETE ON client_pkg_items BEGIN UPDATE client_pkg_sizes SET aggregate_size = aggregate_size - COALESCE(old.size, 0) WHERE item_doc_id = old.item_doc_id; END
DROP INDEX "client_pkg_items/size"
CREATE TABLE share_metadata_cache( item_rowid integer primary key, share_path text unique not null, share_metadata blob non null)
ALTER TABLE app_libraries ADD COLUMN auto_client_item_count INTEGER DEFAULT 0
ALTER TABLE app_libraries ADD COLUMN auto_document_count INTEGER DEFAULT 0
ALTER TABLE app_libraries ADD COLUMN auto_document_with_local_changes_count INTEGER DEFAULT 0
ALTER TABLE app_libraries ADD COLUMN auto_aggregate_size INTEGER DEFAULT 0
CREATE TRIGGER "client_items/insert_item" AFTER INSERT ON client_items BEGIN  UPDATE app_libraries SET auto_client_item_count = auto_client_item_count + 1 WHERE rowid = new.app_library_rowid AND new.item_type != 4 AND new.item_type != 3;  UPDATE app_libraries SET auto_aggregate_size = auto_aggregate_size + COALESCE(new.version_size, 0), auto_document_count = auto_document_count + 1      WHERE rowid = new.app_library_rowid AND new.item_type = 1 AND new.item_state != 1;  UPDATE app_libraries SET auto_document_with_local_changes_count = auto_document_with_local_changes_count + 1 WHERE rowid = new.app_library_rowid AND new.item_type = 1 AND new.item_localsyncupstate >= 2; END
CREATE TRIGGER "client_items/delete_item" BEFORE delete ON client_items BEGIN  UPDATE app_libraries SET auto_client_item_count = auto_client_item_count - 1 WHERE rowid = old.app_library_rowid AND old.item_type != 4 AND old.item_type != 3;  UPDATE app_libraries SET auto_aggregate_size = auto_aggregate_size - COALESCE(old.version_size, 0), auto_document_count = auto_document_count - 1      WHERE rowid = old.app_library_rowid AND old.item_type = 1 AND old.item_state != 1;  UPDATE app_libraries SET auto_document_with_local_changes_count = auto_document_with_local_changes_count - 1 WHERE rowid = old.app_library_rowid AND old.item_type = 1 AND old.item_localsyncupstate >= 2; END
CREATE TRIGGER "client_items/update_size" UPDATE OF version_size, item_type, item_state ON client_items BEGIN  UPDATE app_libraries SET    auto_aggregate_size = auto_aggregate_size - COALESCE(old.version_size,0)  * (old.item_type = 1 AND old.item_state != 1) + COALESCE(new.version_size,0) * (new.item_type = 1 AND new.item_state != 1),    auto_document_count = auto_document_count - (old.item_type = 1 AND old.item_state != 1) + (new.item_type = 1 AND new.item_state != 1)      WHERE rowid = new.app_library_rowid; END
CREATE TRIGGER "client_items/update_changes_count" UPDATE OF item_type,item_localsyncupstate ON client_items BEGIN  UPDATE app_libraries set auto_document_with_local_changes_count = auto_document_with_local_changes_count - (old.item_type = 1 AND old.item_localsyncupstate >= 2) + (new.item_type = 1 AND new.item_localsyncupstate >= 2) where rowid = new.app_library_rowid; END
ALTER TABLE server_items ADD COLUMN pcs_state INTEGER NOT NULL DEFAULT 0
DROP TABLE share_metadata_cache
CREATE TABLE share_metadata_cache( item_rowid integer primary key, share_path text unique not null, record_id blob non null)
ALTER TABLE "client_uploads" ADD COLUMN app_library_rowid INTEGER
UPDATE "client_uploads" SET app_library_rowid = (SELECT app_library_rowid FROM client_items WHERE client_items.rowid = client_uploads.throttle_id) 
ALTER TABLE "client_downloads" ADD COLUMN app_library_rowid INTEGER 
UPDATE "client_downloads" SET app_library_rowid = (SELECT app_library_rowid FROM client_items WHERE client_items.rowid = client_downloads.throttle_id ) 
SELECT 1 FROM client_uploads WHERE app_library_rowid == NULL LIMIT 1
SELECT 1 FROM client_downloads WHERE app_library_rowid == NULL LIMIT 1
DROP TABLE IF EXISTS share_metadata_cache
CREATE INDEX "client_items/item_parent_id_rowid" ON client_items(zone_rowid, item_parent_id, rowid)
CREATE TABLE mark_children_lost_progress(zone_rowid INTEGER NOT NULL, item_parent_id BLOB NOT NULL, last_updated_row_id INTEGER NOT NULL, UNIQUE(zone_rowid, item_parent_id))
ALTER TABLE client_pkg_items ADD COLUMN xattrs BLOB
DROP INDEX IF EXISTS "client_items/lost_scan_index"
DROP INDEX IF EXISTS "client_items/zombie_scan_index"
DROP INDEX IF EXISTS "client_items/lostzombie_scan_index"
CREATE INDEX "client_items/lostzombie_scan_index" ON client_items (item_processing_stamp) WHERE item_state IN (-1,-3)
ALTER TABLE server_pending_fetches ADD COLUMN deleted_record_type INTEGER NOT NULL DEFAULT 0
SELECT 1 FROM client_items WHERE zone_rowid NOT IN (SELECT rowid from client_zones)
SELECT 1 FROM server_items WHERE zone_rowid NOT IN (SELECT rowid from server_zones)
DROP TABLE IF EXISTS sqlite_stat1
DROP TABLE IF EXISTS sqlite_stat2
DROP TABLE IF EXISTS sqlite_stat3
DROP TABLE IF EXISTS sqlite_stat4
ALTER TABLE mark_children_lost_progress ADD COLUMN item_parent_file_id integer
UPDATE server_items SET item_parent_id = call_block(%@, item_parent_id, item_id) WHERE zone_rowid IN (SELECT rowid FROM server_zones WHERE zone_owner != %@)
UPDATE client_items SET item_parent_id = call_block(%@, item_parent_id, item_id) WHERE zone_rowid IN (SELECT rowid FROM client_zones WHERE client_zones.zone_owner != %@)
ALTER TABLE client_document_access ADD COLUMN modify_access_time integer NOT NULL DEFAULT 0
UPDATE client_document_access SET modify_access_time = MAX(access_time, IFNULL((SELECT version_mtime FROM client_items AS ci WHERE ci.rowid = item_rowid), 0))
CREATE INDEX "client_document_access/modify_access_item" ON client_document_access(modify_access_time)
INSERT OR IGNORE INTO client_document_access (item_rowid, evictable, access_time, modify_access_time) SELECT rowid, 0, 0, version_mtime FROM client_items WHERE item_type IN (1, 2, 8)
DROP INDEX IF EXISTS "server_pending_fetches/record_index"
CREATE INDEX "server_pending_fetches/record_is_null" ON server_pending_fetches (zone_rowid) WHERE record IS NULL
CREATE INDEX "server_pending_fetches/record_is_not_null" ON server_pending_fetches (zone_rowid) WHERE (record >= '')
ALTER TABLE client_document_access ADD COLUMN indexable integer NOT NULL DEFAULT 0
UPDATE client_document_access SET indexable = 1 WHERE (SELECT item_scope FROM client_items AS ci WHERE ci.rowid = item_rowid) = 2
CREATE INDEX "client_document_access/indexable" ON client_document_access(indexable) WHERE indexable != 0
CREATE TABLE client_document_access( item_rowid integer primary key, access_time integer not null default 0, modify_access_time integer NOT NULL DEFAULT 0, properties integer NOT NULL DEFAULT 0)
INSERT INTO client_document_access(item_rowid, access_time, modify_access_time, properties) SELECT item_rowid, access_time, modify_access_time, ((case when indexable != 0 then 0x2 else 0 end) | (case when evictable != 0 then 0x1 else 0 end)) FROM client_document_access_tmp
DROP INDEX "client_document_access/evictable"
DROP INDEX "client_document_access/evictable/item_rowid"
DROP INDEX "client_document_access/modify_access_item"
DROP INDEX "client_document_access/indexable"
CREATE INDEX "client_document_access/evictable" ON client_document_access (properties) WHERE ((properties & 0x1) != 0)
CREATE INDEX "client_document_access/evictable/item_rowid" ON client_document_access (item_rowid);
CREATE INDEX "client_document_access/modify_access_item" ON client_document_access(modify_access_time);
CREATE INDEX "client_document_access/indexable" ON client_document_access(properties) WHERE ((properties & 0x2) != 0)
CREATE INDEX "client_items/doc_sync_state" ON client_items (zone_rowid, item_localsyncupstate) WHERE item_type IN (1, 6)
CREATE INDEX "client_document_access/access_item" ON client_document_access(access_time);
CREATE TRIGGER IF NOT EXISTS "client_items/update_app_library" AFTER UPDATE OF app_library_rowid ON client_items WHEN new.app_library_rowid <> old.app_library_rowid BEGIN  UPDATE app_libraries SET auto_client_item_count = auto_client_item_count - 1 WHERE rowid = old.app_library_rowid AND old.item_type != 4 AND old.item_type != 3;  UPDATE app_libraries SET auto_aggregate_size = auto_aggregate_size - COALESCE(old.version_size, 0), auto_document_count = auto_document_count - 1      WHERE rowid = old.app_library_rowid AND old.item_type = 1 AND old.item_state != 1;  UPDATE app_libraries SET auto_document_with_local_changes_count = auto_document_with_local_changes_count - 1 WHERE rowid = old.app_library_rowid AND old.item_type = 1 AND old.item_localsyncupstate >= 2;  UPDATE app_libraries SET auto_client_item_count = auto_client_item_count + 1 WHERE rowid = new.app_library_rowid AND new.item_type != 4 AND new.item_type != 3;  UPDATE app_libraries SET auto_aggregate_size = auto_aggregate_size + COALESCE(new.version_size, 0), auto_document_count = auto_document_count + 1      WHERE rowid = new.app_library_rowid AND new.item_type = 1 AND new.item_state != 1;  UPDATE app_libraries SET auto_document_with_local_changes_count = auto_document_with_local_changes_count + 1 WHERE rowid = new.app_library_rowid AND new.item_type = 1 AND new.item_localsyncupstate >= 2; END
UPDATE app_libraries SET auto_client_item_count=(SELECT COUNT(*) FROM client_items WHERE app_library_rowid = app_libraries.rowid AND item_type != 4 AND item_type != 3), auto_document_count=(SELECT COUNT(*) FROM client_items WHERE app_library_rowid = app_libraries.rowid AND item_type = 1 AND item_state != 1), auto_aggregate_size=(SELECT COALESCE(SUM(version_size), 0) FROM client_items WHERE app_libraries.rowid = app_library_rowid AND item_type = 1 AND item_state != 1), auto_document_with_local_changes_count=(SELECT COUNT(*) FROM client_items WHERE app_library_rowid = app_libraries.rowid AND item_type = 1 AND item_localsyncupstate >= 2)
CREATE TABLE client_sync_up ( throttle_id integer not null, zone_rowid integer not null, throttle_state integer not null, in_flight_diffs integer, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, UNIQUE(throttle_id, zone_rowid))
ALTER TABLE client_items  ADD COLUMN item_parent_zone_rowid integer
INSERT OR IGNORE INTO client_sync_up( throttle_id, zone_rowid, throttle_state, in_flight_diffs ) SELECT  rowid, zone_rowid, 1, item_in_flight_diffs FROM client_items WHERE  item_localsyncupstate = 4
UPDATE client_items SET item_parent_zone_rowid = zone_rowid
SELECT rowid, item_id, item_file_id, item_filename, item_type FROM client_items WHERE zone_rowid = %@
%@/%@/%@/%@
SELECT item_parent_id, zone_rowid FROM client_items WHERE  item_filename = %@ AND item_type = 3 AND item_state in (0, -1)
SELECT item_file_id FROM client_items WHERE  item_id = %@ AND zone_rowid = %@
SELECT item_id FROM client_items WHERE item_file_id = %lld AND zone_rowid = %@
SELECT 1 from client_items  WHERE item_parent_zone_rowid = %@    AND item_parent_id = %@    AND IFNULL(item_localname, item_filename) = %@
UPDATE client_items SET  item_parent_zone_rowid = %@,  item_parent_id = %@,  app_library_rowid = %@,  item_localname = %@ WHERE  rowid = %@
UPDATE client_items SET  item_state = -1 WHERE  rowid = %@ AND item_state = 0
DELETE FROM client_items WHERE  item_filename = %@ AND  item_type = 3
CREATE TABLE rowid_reservations ( rowid integer PRIMARY KEY, container_id text unique not null)
INSERT INTO rowid_reservations  ( rowid, container_id ) SELECT rowid, container_id FROM rowid_reservations_old WHERE owner = %@ OR owner IS NULL
CREATE TABLE app_libraries ( rowid integer PRIMARY KEY , app_library_plist blob , app_library_name text unique default null , zone_rowid integer default 0 , auto_client_item_count integer default 0 , auto_document_count INTEGER DEFAULT 0 , auto_document_with_local_changes_count INTEGER DEFAULT 0 , auto_aggregate_size INTEGER DEFAULT 0)
INSERT INTO app_libraries  (rowid, app_library_plist, app_library_name, zone_rowid, auto_client_item_count, auto_document_count, auto_document_with_local_changes_count, auto_aggregate_size) SELECT rowid, app_library_plist, app_library_name, zone_rowid, auto_client_item_count, auto_document_count, auto_document_with_local_changes_count, auto_aggregate_size   FROM app_libraries_old WHERE app_library_owner = %@ OR app_library_owner IS NULL
ALTER TABLE mark_children_lost_progress RENAME TO mark_children_lost_progress_old
CREATE TABLE mark_children_lost_progress (zone_rowid INTEGER NOT NULL , item_parent_id BLOB NOT NULL , last_updated_row_id INTEGER NOT NULL , item_parent_file_id INTEGER , app_library_rowid INTEGER NOT NULL , PRIMARY KEY(zone_rowid, item_parent_id))
INSERT INTO mark_children_lost_progress (zone_rowid, item_parent_id, last_updated_row_id, item_parent_file_id, app_library_rowid) SELECT o.zone_rowid, o.item_parent_id, o.last_updated_row_id, o.item_parent_file_id, c.app_library_rowid   FROM mark_children_lost_progress_old AS o INNER JOIN client_items AS c     ON o.zone_rowid = c.zone_rowid AND o.item_parent_id = c.item_id
DROP TABLE mark_children_lost_progress_old
ALTER TABLE client_downloads RENAME TO client_downloads_old
CREATE TABLE client_downloads ( throttle_id integer not null, zone_rowid integer not null, app_library_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, transfer_queue blob not null, transfer_size integer not null, transfer_record blob, transfer_stage blob, transfer_operation blob, download_kind integer not null, download_etag blob not null, download_priority integer not null, download_request_stamp integer not null, download_error blob, unit_count_completed INTEGER DEFAULT 0, UNIQUE(transfer_stage), UNIQUE(throttle_id, download_kind, download_etag))
INSERT INTO client_downloads (throttle_id, zone_rowid, app_library_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, download_kind, download_etag, download_priority, download_request_stamp, download_error, unit_count_completed) SELECT throttle_id, zone_rowid, app_library_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, download_kind, download_etag, download_priority, download_request_stamp, download_error, unit_count_completed FROM client_downloads_old
DROP TABLE client_downloads_old
ALTER TABLE client_uploads RENAME TO client_uploads_old
CREATE TABLE client_uploads ( throttle_id integer primary key, zone_rowid integer not null, app_library_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, transfer_queue blob not null, transfer_size integer not null, transfer_record blob, transfer_stage blob, transfer_operation blob, upload_error blob, upload_priority integer DEFAULT 0, upload_request_stamp integer DEFAULT 0, UNIQUE(transfer_stage))
INSERT INTO client_uploads (throttle_id, zone_rowid, app_library_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, upload_error, upload_priority, upload_request_stamp) SELECT throttle_id, zone_rowid, app_library_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, upload_error, upload_priority, upload_request_stamp FROM client_uploads_old
DROP TABLE client_uploads_old
ALTER TABLE client_unapplied_table RENAME TO client_unapplied_table_old
CREATE TABLE client_unapplied_table ( throttle_id integer primary key, zone_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, apply_kind integer not null)
INSERT INTO client_unapplied_table (throttle_id, zone_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, apply_kind) SELECT throttle_id, zone_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, apply_kind FROM client_unapplied_table_old
DROP TABLE client_unapplied_table_old
CREATE INDEX "client_items/mark_children_lost_index" ON client_items(item_parent_zone_rowid, item_parent_id, rowid ASC) WHERE item_state = 0
create index "client_items/faults_enumeration" ON client_items(zone_rowid, rowid) WHERE item_type = 2
DROP INDEX "client_items/sync_up_enumerator_1"
DROP INDEX "client_items/sync_up_enumerator_2"
CREATE INDEX "client_items/sync_up_enumerator_1" ON client_items(item_parent_zone_rowid, item_parent_id) WHERE item_localsyncupstate = 4 AND item_state IN (0, -1, 1)
CREATE INDEX "client_items/sync_up_enumerator_2" ON client_items(zone_rowid) WHERE item_localsyncupstate IN (2, 3, 4)
ALTER TABLE server_items ADD COLUMN item_lastusedtime integer DEFAULT NULL
ALTER TABLE client_items ADD COLUMN item_lastusedtime integer DEFAULT NULL
ALTER TABLE server_items ADD COLUMN item_favoriterank integer DEFAULT NULL
ALTER TABLE client_items ADD COLUMN item_favoriterank integer DEFAULT NULL
DROP INDEX "spotlight_ranks/notif_rank"
DROP TABLE spotlight_ranks
CREATE TABLE tombstones ( file_object_id      integer not null, file_object_id_type integer not null, notif_rank          integer not null, PRIMARY KEY (file_object_id, notif_rank ASC))
CREATE INDEX "tombstones/notif_rank" ON tombstones (notif_rank)
ALTER TABLE client_items ADD COLUMN item_user_visible integer not null default 1
UPDATE client_document_access SET properties = properties & 1
UPDATE client_downloads SET app_library_rowid = (SELECT app_library_rowid FROM client_items WHERE client_downloads.throttle_id = client_items.rowid) WHERE throttle_state != 0
UPDATE client_uploads SET app_library_rowid = (SELECT app_library_rowid FROM client_items WHERE client_uploads.throttle_id = client_items.rowid) WHERE throttle_state != 0
ALTER TABLE server_items ADD COLUMN item_alias_target text
UPDATE server_items SET item_alias_target = item_filename, item_filename = "" WHERE item_type = 3
ALTER TABLE client_items ADD COLUMN item_alias_target text
UPDATE client_items SET item_alias_target = item_filename, item_filename = NULL WHERE item_type = 3
UPDATE server_items SET version_quarantine_info = %@, item_rank = NULL WHERE length(version_quarantine_info) == 0 AND version_quarantine_info IS NOT NULL
UPDATE client_items SET item_local_diffs = item_local_diffs | %llu & ~%llu WHERE item_local_diffs & %llu != 0
UPDATE client_items SET item_local_diffs = item_local_diffs | %llu WHERE item_type = 5 AND item_stat_ckinfo IS NULL AND (item_local_diffs & %llu)==0
ALTER TABLE client_items ADD COLUMN item_tmpbounceno INTEGER
CREATE INDEX "client_items/item_tmpbounceno" ON client_items (item_tmpbounceno) WHERE item_tmpbounceno IS NOT NULL
UPDATE client_items SET item_tmpbounceno = call_block(%p, item_bouncedname) WHERE item_bouncedname IS NOT NULL
DROP INDEX "client_items/item_bouncedname"
DROP INDEX "client_items/item_parent_id__item_localname"
CREATE INDEX "client_items/item_parent_id__item_bouncedname" ON client_items (item_parent_zone_rowid, item_parent_id, item_bouncedname) WHERE item_bouncedname IS NOT NULL
CREATE INDEX "client_items/item_parent_id__item_localname" ON client_items (item_parent_zone_rowid, item_parent_id, item_localname) WHERE item_localname IS NOT NULL
UPDATE client_items SET item_bouncedname = call_block(%p, item_filename, item_localname) WHERE item_localname IS NOT NULL
CREATE INDEX "client_items/item_filename_path" ON client_items (item_parent_zone_rowid, item_parent_id, item_filename)
CREATE INDEX "client_items/item_localname_path" ON client_items (item_parent_zone_rowid, item_parent_id, item_localname)
CREATE INDEX "client_items/item_bouncedname_path" ON client_items (item_parent_zone_rowid, item_parent_id, item_bouncedname)
CREATE INDEX "client_items/shared_item_library" ON client_items (app_library_rowid, item_state) WHERE item_creator_id != 0;
DROP INDEX "client_items/item_id"
DROP INDEX "client_items/item_file_id"
DROP INDEX "client_items/item_file_id_unique"
CREATE UNIQUE INDEX "client_items/item_file_id_unique" ON client_items(item_file_id) WHERE item_state IN (0, -1)
CREATE INDEX "client_sync_up/next_retry" ON client_sync_up (next_retry_stamp) WHERE throttle_state = 1
CREATE INDEX "client_items/sync_up_enumerator" ON client_items(item_state, item_type) WHERE item_localsyncupstate = 4 AND item_min_supported_os_rowid IS NULL
UPDATE client_items SET item_user_visible = 0 WHERE item_scope IN (0, 1)
UPDATE client_items SET item_user_visible = 0 WHERE item_scope = 3 AND (SELECT parent.item_filename FROM client_items AS parent WHERE parent.item_id = item_parent_id AND parent.zone_rowid = item_parent_zone_rowid)
UPDATE client_items SET item_user_visible = 0 WHERE item_filename LIKE '.%%' AND item_scope = 2
UPDATE client_items SET item_state = -1, item_processing_stamp = inc_and_fetch64(%p) WHERE item_user_visible = 0 AND item_scope = 2 AND item_type = 0 AND item_state = 0
DROP TABLE server_pending_fetches
CREATE INDEX "client_items/item_notifs_rank_children" ON client_items (item_parent_id, item_parent_zone_rowid, item_notifs_rank) WHERE item_state IN (0, -1)
CREATE INDEX "client_items/item_notifs_rank_library" ON client_items (item_notifs_rank, app_library_rowid) WHERE item_state IN (0, -1)
DROP INDEX "client_items/alias_map"
CREATE INDEX "client_items/alias_map" ON client_items(item_type, item_alias_target) WHERE item_type = 3
DROP INDEX "server_items/alias_map"
CREATE INDEX "server_items/alias_map" ON server_items(item_type, item_alias_target) WHERE item_type = 3
DROP INDEX "client_items/item_localname_path"
DROP INDEX "client_items/item_bouncedname_path"
DROP INDEX "client_items/item_parent_id_rowid"
DROP INDEX "client_items/spotlight_index"
DROP INDEX "client_items/download_index"
DROP INDEX "client_items/eviction_index"
DROP INDEX "client_items/item_in_flight_diffs"
DROP INDEX "client_uploads/scheduling_by_size"
DROP INDEX "client_pkg_items/is_dirty"
DROP INDEX "client_items/pending_download_docs"
CREATE INDEX "client_items/app_library_rowid" ON client_items (app_library_rowid)
CREATE INDEX "client_items/item_parent_id_rowid" ON client_items (item_parent_id, app_library_rowid, rowid)
CREATE INDEX "client_items/working_set_index" ON client_items (item_notifs_rank) WHERE item_user_visible = 1
CREATE INDEX "client_items/eviction_index" ON client_items (version_mtime, app_library_rowid) WHERE item_localsyncupstate = 0 AND item_state != 1
CREATE INDEX "client_sync_up/sync_state_index" ON client_sync_up (zone_rowid, throttle_state)
CREATE INDEX "client_sync_up/throttle_id" ON client_sync_up (throttle_id)
CREATE INDEX "client_sync_up/zone_rowid" ON client_sync_up (zone_rowid)
CREATE INDEX "client_sync_up/expire_stamp_inactive_state" ON client_sync_up (throttle_state, expire_stamp) WHERE throttle_state = 0
CREATE INDEX "client_uploads/scheduling_by_priority" ON client_uploads (throttle_state, transfer_queue, upload_priority DESC, upload_request_stamp DESC, transfer_size ASC)  WHERE throttle_state = 1 AND transfer_operation IS NULL
ALTER TABLE server_items ADD COLUMN item_side_car_ckinfo BLOB
ALTER TABLE server_items ADD COLUMN item_creator INTEGER
ALTER TABLE server_items ADD COLUMN version_edited_since_shared INTEGER
CREATE TABLE side_car_lookahead ( record_name text primary key , root_alias_record_name text NOT NULL, item_side_car_ckinfo BLOB NOT NULL , item_favoriterank integer , item_lastusedtime integer )
ALTER TABLE client_items ADD COLUMN item_side_car_ckinfo BLOB
ALTER TABLE client_items ADD COLUMN item_creator INTEGER
ALTER TABLE client_items ADD COLUMN version_edited_since_shared INTEGER
ALTER TABLE client_items ADD COLUMN visible_child_count integer
CREATE TRIGGER "visible_child_count/deletion" AFTER DELETE ON client_items BEGIN UPDATE OR IGNORE client_items SET visible_child_count = visible_child_count - 1 WHERE (old.item_user_visible = 1 OR old.item_scope = 3) AND old.item_parent_id = item_id AND old.item_parent_zone_rowid = zone_rowid AND old.item_filename != ".Trash" ; END
CREATE TRIGGER "visible_child_count/insertion" AFTER INSERT ON client_items BEGIN UPDATE OR IGNORE client_items SET visible_child_count = visible_child_count + 1 WHERE (new.item_user_visible = 1 OR new.item_scope = 3) AND new.item_filename != ".Trash" AND new.item_parent_id = item_id AND new.item_parent_zone_rowid = zone_rowid ; END
ALTER TABLE server_items ADD COLUMN quota_used INTEGER
ALTER TABLE server_items ADD COLUMN recursive_child_count INTEGER
ALTER TABLE server_items ADD COLUMN shared_children_count INTEGER
ALTER TABLE server_items ADD COLUMN shared_alias_count INTEGER
ALTER TABLE server_items ADD COLUMN child_count INTEGER
CREATE INDEX "server_items/item_parent_id__item_type" ON server_items(zone_rowid, item_type, item_parent_id)
ALTER TABLE side_car_lookahead ADD COLUMN item_finder_tags blob
UPDATE server_state SET state = %@
SELECT record_name, root_alias_record_name, item_favoriterank, item_lastusedtime, item_finder_tags, item_side_car_ckinfo FROM side_car_lookahead WHERE length(root_alias_record_name) = 36
UPDATE server_items SET item_favoriterank = %@, item_lastusedtime = %@, item_finder_tags = %@, item_side_car_ckinfo = %@, item_rank = NULL WHERE item_id = %@ AND zone_rowid IN (SELECT zone_rowid FROM server_items WHERE item_id = %@)
DROP TRIGGER IF EXISTS "server_items/sharing_state_propagation"
DROP TRIGGER IF EXISTS "server_items/learn_parent_sharing_state"
DROP TRIGGER IF EXISTS "server_items/sharing_state_insertion"
CREATE TRIGGER "server_items/sharing_state_propagation" AFTER UPDATE OF item_sharing_options ON server_items BEGIN UPDATE server_items SET item_sharing_options = (item_sharing_options & (~124)) | (new.item_sharing_options & 120) WHERE new.item_sharing_options != old.item_sharing_options AND new.item_type IN (0, 9, 10) AND new.item_state = 0 AND item_parent_id = new.item_id AND zone_rowid = new.zone_rowid AND (item_sharing_options & 4) == 0 AND (item_sharing_options & 120) != (new.item_sharing_options & 120); END
CREATE TRIGGER "server_items/learn_parent_sharing_state" AFTER UPDATE OF item_parent_id ON server_items BEGIN UPDATE server_items SET item_sharing_options = ((item_sharing_options & (~124)) | IFNULL((SELECT item_sharing_options & 120 FROM server_items as pi WHERE pi.item_id = new.item_parent_id AND pi.zone_rowid = new.zone_rowid), 0)) WHERE new.item_parent_id != old.item_parent_id AND item_id = new.item_id AND zone_rowid = new.zone_rowid AND item_state = 0 AND (item_sharing_options & 4) == 0; END
CREATE TRIGGER "server_items/sharing_state_insertion" AFTER INSERT ON server_items BEGIN UPDATE server_items SET item_sharing_options = ((item_sharing_options & (~124)) | IFNULL((SELECT item_sharing_options & 120 FROM server_items as pi WHERE pi.item_id = new.item_parent_id AND pi.zone_rowid = new.zone_rowid), 0)) WHERE (new.item_sharing_options & 4) == 0 AND item_id = new.item_id AND zone_rowid = new.zone_rowid; UPDATE server_items SET item_sharing_options = (item_sharing_options & (~124)) | (new.item_sharing_options & 120) WHERE (new.item_sharing_options & 4) != 0 AND new.item_type IN (0, 9, 10) AND new.item_state = 0 AND item_parent_id = new.item_id AND zone_rowid = new.zone_rowid AND (item_sharing_options & 4) == 0 AND (item_sharing_options & 120) != (new.item_sharing_options & 120); END
DROP TABLE IF EXISTS item_errors
DROP INDEX IF EXISTS "item_errors/error_group"
DROP TRIGGER IF EXISTS "item_errors/deletion"
DROP TRIGGER IF EXISTS "item_errors/upload-deletion"
DROP TRIGGER IF EXISTS "item_errors/upload-idle"
DROP TRIGGER IF EXISTS "item_errors/download-deletion"
DROP TRIGGER IF EXISTS "item_errors/download-idle"
DROP TRIGGER IF EXISTS "item_errors/quota-insertion"
DROP TRIGGER IF EXISTS "item_errors/quota-deletion"
DROP TRIGGER IF EXISTS "item_errors/quota-update-away"
DROP TRIGGER IF EXISTS "item_errors/quota-update-into"
DROP TRIGGER IF EXISTS "item_errors/disk-insertion"
DROP TRIGGER IF EXISTS "item_errors/disk-deletion"
DROP TRIGGER IF EXISTS "item_errors/disk-update-away"
DROP TRIGGER IF EXISTS "item_errors/disk-update-into"
CREATE TABLE item_errors ( item_rowid integer NOT NULL, error_domain TEXT NOT NULL default "unknown", error_code integer NOT NULL default 0, error_message TEXT, error_timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, service integer NOT NULL, PRIMARY KEY (item_rowid, error_domain, error_code, error_message, service))
CREATE TRIGGER "item_errors/deletion" AFTER DELETE ON client_items BEGIN DELETE FROM item_errors WHERE item_rowid = old.rowid; END
CREATE TRIGGER "item_errors/upload-deletion" AFTER DELETE ON client_uploads BEGIN DELETE FROM item_errors WHERE item_rowid = old.throttle_id AND service = 1; END
CREATE TRIGGER "item_errors/upload-idle" AFTER UPDATE OF throttle_state ON client_uploads WHEN (new.throttle_state = 0  AND old.throttle_state != 0) BEGIN DELETE FROM item_errors WHERE item_rowid = old.throttle_id AND service = 1; END
CREATE TRIGGER "item_errors/download-deletion" AFTER DELETE ON client_downloads BEGIN DELETE FROM item_errors WHERE item_rowid = old.throttle_id AND service = 2; END
CREATE TRIGGER "item_errors/download-idle" AFTER UPDATE OF throttle_state ON client_downloads WHEN (new.throttle_state = 0  AND old.throttle_state != 0) BEGIN DELETE FROM item_errors WHERE item_rowid = old.throttle_id AND service = 2; END
CREATE TRIGGER "item_errors/quota-insertion" AFTER INSERT ON client_uploads WHEN new.throttle_state = 32 BEGIN INSERT OR REPLACE INTO item_errors (item_rowid, error_domain, error_code, service)       VALUES (new.throttle_id, "CKErrorDomain", 25, 1); END
CREATE TRIGGER "item_errors/quota-deletion" AFTER DELETE ON client_uploads WHEN old.throttle_state = 32 BEGIN DELETE FROM item_errors WHERE item_rowid = old.throttle_id    AND error_domain = "CKErrorDomain"    AND error_code = 25    AND service = 1; END
CREATE TRIGGER "item_errors/quota-update-away" AFTER UPDATE OF throttle_state ON client_uploads WHEN (old.throttle_state = 32    AND new.throttle_state != 32) BEGIN DELETE FROM item_errors  WHERE item_rowid = old.throttle_id    AND error_domain = "CKErrorDomain"    AND error_code = 25    AND service = 1; END
CREATE TRIGGER "item_errors/quota-update-into" AFTER UPDATE OF throttle_state ON client_uploads WHEN (old.throttle_state != 32    AND new.throttle_state = 32) BEGIN INSERT OR REPLACE INTO item_errors (item_rowid, error_domain, error_code, service)       VALUES (new.throttle_id, "CKErrorDomain", 25, 1); END
CREATE TRIGGER "item_errors/disk-insertion" AFTER INSERT ON client_downloads WHEN new.throttle_state = 43 BEGIN INSERT OR REPLACE INTO item_errors (item_rowid, error_domain, error_code, service)       VALUES (new.throttle_id, "BRCloudDocsErrorDomain", 34, 2); END
CREATE TRIGGER "item_errors/disk-deletion" AFTER DELETE ON client_downloads WHEN old.throttle_state = 43 BEGIN DELETE FROM item_errors WHERE item_rowid = old.throttle_id    AND error_domain = "BRCloudDocsErrorDomain"    AND error_code = 34    AND service = 2; END
CREATE TRIGGER "item_errors/disk-update-away" AFTER UPDATE OF throttle_state ON client_downloads WHEN (old.throttle_state = 43  AND new.throttle_state != 43) BEGIN DELETE FROM item_errors  WHERE item_rowid = old.throttle_id    AND error_domain = "BRCloudDocsErrorDomain"    AND error_code = 34    AND service = 2; END
CREATE TRIGGER "item_errors/disk-update-into" AFTER UPDATE OF throttle_state ON client_downloads WHEN (old.throttle_state != 43  AND new.throttle_state = 43) BEGIN INSERT OR REPLACE INTO item_errors (item_rowid, error_domain, error_code, service)       VALUES (new.throttle_id, "BRCloudDocsErrorDomain", 34, 2); END
INSERT INTO item_errors (item_rowid, error_domain, error_code, service) SELECT throttle_id, "CKErrorDomain", 25, 1          FROM client_uploads WHERE throttle_state = 32
SELECT throttle_id, upload_error FROM client_uploads WHERE throttle_state != 32   AND throttle_state != 0   AND (retry_count > %llu OR throttle_state = 33)
INSERT INTO item_errors (item_rowid, error_domain, error_code, service) VALUES (%llu, %@, %lu, 1)
INSERT INTO item_errors (item_rowid, error_domain, error_code, service) SELECT throttle_id, "BRCloudDocsErrorDomain", 34, 2          FROM client_downloads WHERE throttle_state = 43
SELECT throttle_id, download_error FROM client_downloads WHERE throttle_state != 43   AND throttle_state != 0   AND (retry_count > %llu OR throttle_state = 41)
INSERT INTO item_errors (item_rowid, error_domain, error_code, service) VALUES (%llu, %@, %lu, 2)
UPDATE client_items AS parent SET visible_child_count = (SELECT COUNT(*) FROM client_items AS child WHERE child.item_parent_id = parent.item_id AND child.item_parent_zone_rowid = parent.zone_rowid AND (child.item_user_visible = 1 OR (child.item_scope == 3 AND child.item_filename != ".Trash"))) WHERE parent.item_type in (0, 9, 10, 4)
CREATE TABLE telemetry_events ( rowid integer PRIMARY KEY, payload blob NOT NULL)
CREATE TABLE telemetry_failure_counts ( item_id integer NOT NULL, zone_rowid integer NOT NULL, retry_count integer NOT NULL, PRIMARY KEY (item_id, zone_rowid))
CREATE INDEX "server_items/share_root" ON server_items(item_rank) WHERE (item_sharing_options & 4) != 0
SELECT 1 FROM client_items WHERE item_bouncedname LIKE '%%.icloud'
DROP TRIGGER IF EXISTS "visible_child_count/reparent"
DROP TRIGGER IF EXISTS "visible_child_count/visibility"
CREATE TRIGGER "visible_child_count/reparent" AFTER UPDATE OF item_parent_id, item_parent_zone_rowid ON client_items WHEN (new.item_parent_id != old.item_parent_id OR new.item_parent_zone_rowid != old.item_parent_zone_rowid) BEGIN UPDATE OR IGNORE client_items SET   visible_child_count = visible_child_count - 1  WHERE (old.item_user_visible = 1 OR old.item_scope = 3) AND item_id = old.item_parent_id AND zone_rowid = old.item_parent_zone_rowid AND old.item_filename != ".Trash" ; UPDATE OR IGNORE client_items SET   visible_child_count = visible_child_count + 1  WHERE (old.item_user_visible = 1 OR old.item_scope = 3) AND item_id = new.item_parent_id AND zone_rowid = new.item_parent_zone_rowid AND new.item_filename != ".Trash" ; END
CREATE TRIGGER "visible_child_count/visibility" AFTER UPDATE OF item_user_visible, item_scope ON client_items WHEN (new.item_user_visible != old.item_user_visible OR new.item_scope != old.item_scope) BEGIN UPDATE OR IGNORE client_items SET   visible_child_count = visible_child_count + (new.item_user_visible | (new.item_scope == 3)) - (old.item_user_visible | (old.item_scope == 3)) WHERE item_id == new.item_parent_id AND zone_rowid = new.item_parent_zone_rowid AND new.item_filename != ".Trash" ; END
CREATE INDEX "client_items/sync_state_job_recovery" ON client_items(item_localsyncupstate) WHERE item_localsyncupstate != 0
CREATE INDEX "client_items/download_job" ON client_items(rowid) WHERE desired_version IS NOT NULL
DROP INDEX IF EXISTS "client_items/shared_item_library"
UPDATE client_downloads SET transfer_queue = '_retry' WHERE transfer_queue = 'com.apple.SharedDocs'
UPDATE client_uploads SET transfer_queue = '_retry' WHERE transfer_queue = 'com.apple.SharedDocs'
SELECT config_plist FROM server_state WHERE config_plist IS NOT NULL
CREATE TABLE server_state_tmp (state)
INSERT INTO server_state_tmp (state) SELECT state FROM server_state
DROP TABLE server_state
ALTER TABLE server_state_tmp RENAME TO server_state
ALTER TABLE client_items ADD COLUMN version_old_zone_item_id blob
ALTER TABLE client_items ADD COLUMN version_old_zone_rowid integer
CREATE INDEX "client_items/version_old_zone_rowid" ON client_items (version_old_zone_rowid)
ALTER TABLE client_items ADD COLUMN version_block_sync_until_timestamp integer default null
ALTER TABLE client_items ADD COLUMN version_block_sync_until_bundle_id text default null
ALTER TABLE client_items ADD COLUMN version_block_sync_until_resuming integer default null
CREATE INDEX "client_items/version_block_sync_timestamp" ON client_items (version_block_sync_until_timestamp)
CREATE TRIGGER "server_items/orphan_reschedule" AFTER INSERT ON server_items BEGIN UPDATE server_items SET item_depth = 0 WHERE new.item_type IN (0, 9, 10)   AND item_parent_id = new.item_id   AND zone_rowid = new.zone_rowid   AND item_depth = -2   AND item_rank IS NULL; END
CREATE TRIGGER "server_items/orphan_reschedule_propagation" AFTER UPDATE OF item_depth ON server_items BEGIN UPDATE server_items SET item_depth = 0 WHERE new.item_depth = 0 AND old.item_depth = -2   AND new.item_type IN (0, 9, 10)   AND item_parent_id = new.item_id   AND zone_rowid = new.zone_rowid   AND item_depth = -2   AND item_rank IS NULL; END
SELECT 1 FROM client_items WHERE app_library_rowid = %@ AND item_stat_ckinfo IS NOT NULL LIMIT 1
CREATE INDEX "server_items/item_lastusedtime" ON server_items(item_lastusedtime DESC)
DROP TABLE IF EXISTS item_recursive_properties
DROP INDEX IF EXISTS "item_recursive_properties/item_id"
DROP INDEX IF EXISTS "item_recursive_properties/item_parent_id"
DROP TRIGGER IF EXISTS "item_recursive_properties/insertion"
DROP TRIGGER IF EXISTS "item_recursive_properties/deletion"
DROP TRIGGER IF EXISTS"item_recursive_properties/reparent"
DROP TRIGGER IF EXISTS "item_recursive_properties/recursive_update"
DROP TRIGGER IF EXISTS "item_recursive_properties/recursive_reparent"
DROP TRIGGER IF EXISTS "item_recursive_properties/recursive_delete"
DROP TRIGGER IF EXISTS "item_recursive_properties/item_id_update"
CREATE TABLE item_recursive_properties (  item_rowid integer not null primary key, item_id blob not null, item_parent_id blob, item_type integer not null, zone_rowid integer not null, item_parent_zone_rowid  integer not null, dir_faults_count integer not null default 0, faults_count integer not null default 0, needs_faulting_count integer not null default 0, over_quota_count integer not null default 0, shared_by_me_count integer not null default 0, shared_to_me_count integer not null default 0, uploaded_size integer not null default 0, uploaded_count integer not null default 0, needs_upload_size integer not null default 0, needs_upload_count integer not null default 0, downloaded_size integer not null default 0, downloaded_count integer not null default 0, needs_download_size integer not null default 0, needs_download_count integer not null default 0, dl_unstaged_count integer not null default 0, needs_dl_unstage_count integer not null default 0, synced_up_count integer not null default 0, needs_sync_up_count integer not null default 0, needs_delete_doc_count  integer not null default 0)
CREATE UNIQUE INDEX "item_recursive_properties/item_id_zone_rowid"ON item_recursive_properties (item_id, zone_rowid)
CREATE INDEX "item_recursive_properties/item_parent_id_zone_rowid"ON item_recursive_properties (item_parent_id, item_parent_zone_rowid)
CREATE TRIGGER "item_recursive_properties/item_id_update" AFTER UPDATE OF item_id, zone_rowid ON client_items WHEN (new.item_id != old.item_id OR new.zone_rowid != old.zone_rowid)  AND new.item_type IN (0, 9, 10, 4, 1, 2, 8) BEGIN UPDATE OR IGNORE item_recursive_properties SET   item_parent_id = new.item_id,  item_parent_zone_rowid = new.zone_rowid WHERE item_parent_id == old.item_id   AND item_parent_zone_rowid = old.zone_rowid ; UPDATE OR IGNORE item_recursive_properties SET   item_id = new.item_id,  zone_rowid = new.zone_rowid WHERE item_rowid == new.rowid ; END
INSERT INTO item_recursive_properties (item_rowid, item_id, item_parent_id, item_type, zone_rowid, item_parent_zone_rowid)SELECT rowid, item_id, item_parent_id, item_type, zone_rowid, item_parent_zone_rowid FROM client_items WHERE item_type IN (0, 9, 10, 4) AND item_filename != '.Trash'
CREATE TRIGGER "item_recursive_properties/insertion" AFTER INSERT ON client_items WHEN new.item_filename != '.Trash' AND new.item_type IN (0, 9, 10, 4) BEGIN INSERT OR IGNORE INTO item_recursive_properties   (item_rowid, item_id, item_parent_id, item_type) VALUES   (new.rowid, new.item_id, new.item_parent_id, new.item_type); END
CREATE TRIGGER "item_recursive_properties/deletion" AFTER DELETE ON client_items WHEN old.item_type IN (0, 9, 10, 4, 1, 2, 8) BEGIN DELETE FROM item_recursive_properties WHERE item_rowid == old.rowid ; END
CREATE TRIGGER "item_recursive_properties/reparent" AFTER UPDATE OF item_parent_id, item_parent_zone_rowid ON client_items WHEN (new.item_parent_id != old.item_parent_id OR new.item_parent_zone_rowid != old.item_parent_zone_rowid)  AND new.item_type IN (0, 9, 10, 4, 1, 2, 8) BEGIN UPDATE OR IGNORE item_recursive_properties SET   item_parent_id = new.item_parent_id,   item_parent_zone_rowid = new.item_parent_zone_rowid WHERE item_rowid == new.rowid AND item_parent_id IS NOT NULL ; END
CREATE TRIGGER "item_recursive_properties/recursive_update" AFTER UPDATE OF dir_faults_count, faults_count, needs_faulting_count, over_quota_count, shared_by_me_count, shared_to_me_count, uploaded_size, uploaded_count, needs_upload_size, needs_upload_count, downloaded_size, downloaded_count, needs_download_size, needs_download_count, dl_unstaged_count, needs_dl_unstage_count, synced_up_count, needs_sync_up_count, needs_delete_doc_count ON item_recursive_properties BEGIN UPDATE item_recursive_properties SET  dir_faults_count = dir_faults_count + new.dir_faults_count - old.dir_faults_count ,  faults_count = faults_count + new.faults_count - old.faults_count ,  needs_faulting_count = needs_faulting_count + new.needs_faulting_count - old.needs_faulting_count ,  over_quota_count = over_quota_count + new.over_quota_count - old.over_quota_count ,  shared_by_me_count = shared_by_me_count + new.shared_by_me_count - old.shared_by_me_count ,  shared_to_me_count = shared_to_me_count + new.shared_to_me_count - old.shared_to_me_count ,  needs_upload_size = needs_upload_size + new.needs_upload_size - old.needs_upload_size ,  needs_upload_count = needs_upload_count + new.needs_upload_count - old.needs_upload_count ,  needs_download_size = needs_download_size + new.needs_download_size - old.needs_download_size ,  needs_download_count = needs_download_count + new.needs_download_count - old.needs_download_count ,  needs_dl_unstage_count = needs_dl_unstage_count + new.needs_dl_unstage_count - old.needs_dl_unstage_count ,  needs_sync_up_count = needs_sync_up_count + new.needs_sync_up_count - old.needs_sync_up_count ,  needs_delete_doc_count = needs_delete_doc_count + new.needs_delete_doc_count - old.needs_delete_doc_count ,  uploaded_size = uploaded_size + MAX((new.uploaded_size - old.uploaded_size), 0) ,  uploaded_count = uploaded_count + MAX((new.uploaded_count - old.uploaded_count), 0) ,  downloaded_size = downloaded_size + MAX((new.downloaded_size - old.downloaded_size), 0) ,  downloaded_count = downloaded_count + MAX((new.downloaded_count - old.downloaded_count), 0) ,  dl_unstaged_count = dl_unstaged_count + MAX((new.dl_unstaged_count - old.dl_unstaged_count), 0) ,  synced_up_count = synced_up_count + MAX((new.synced_up_count - old.synced_up_count), 0)  WHERE item_id == old.item_parent_id AND  zone_rowid == old.item_parent_zone_rowid AND  new.item_parent_id == old.item_parent_id AND  new.item_parent_zone_rowid == old.item_parent_zone_rowid AND  ( new.dir_faults_count != old.dir_faults_count OR  new.faults_count != old.faults_count OR  new.needs_faulting_count != old.needs_faulting_count OR  new.over_quota_count != old.over_quota_count OR  new.shared_by_me_count != old.shared_by_me_count OR  new.shared_to_me_count != old.shared_to_me_count OR  new.needs_upload_size != old.needs_upload_size OR  new.needs_upload_count != old.needs_upload_count OR  new.needs_download_size != old.needs_download_size OR  new.needs_download_count != old.needs_download_count OR  new.needs_dl_unstage_count != old.needs_dl_unstage_count OR  new.needs_sync_up_count != old.needs_sync_up_count OR  new.needs_delete_doc_count != old.needs_delete_doc_count OR  ( new.uploaded_size != old.uploaded_size AND new.uploaded_size != 0 ) OR  ( new.uploaded_count != old.uploaded_count AND new.uploaded_count != 0 ) OR  ( new.downloaded_size != old.downloaded_size AND new.downloaded_size != 0 ) OR  ( new.downloaded_count != old.downloaded_count AND new.downloaded_count != 0 ) OR  ( new.dl_unstaged_count != old.dl_unstaged_count AND new.dl_unstaged_count != 0 ) OR  ( new.synced_up_count != old.synced_up_count AND new.synced_up_count != 0 ) ) ; UPDATE item_recursive_properties SET  uploaded_size = 0  WHERE item_rowid == old.item_rowid AND (needs_upload_size == 0 AND needs_sync_up_count == 0) AND uploaded_size != 0; UPDATE item_recursive_properties SET  uploaded_count = 0  WHERE item_rowid == old.item_rowid AND (needs_upload_count == 0 AND needs_sync_up_count == 0) AND uploaded_count != 0; UPDATE item_recursive_properties SET  downloaded_size = 0  WHERE item_rowid == old.item_rowid AND (needs_download_size == 0 AND needs_dl_unstage_count == 0) AND downloaded_size != 0; UPDATE item_recursive_properties SET  downloaded_count = 0  WHERE item_rowid == old.item_rowid AND (needs_download_count == 0 AND needs_dl_unstage_count == 0) AND downloaded_count != 0; UPDATE item_recursive_properties SET  dl_unstaged_count = 0  WHERE item_rowid == old.item_rowid AND (needs_dl_unstage_count == 0) AND dl_unstaged_count != 0; UPDATE item_recursive_properties SET  synced_up_count = 0  WHERE item_rowid == old.item_rowid AND (needs_sync_up_count == 0) AND synced_up_count != 0;DELETE FROM item_recursive_properties WHERE  item_rowid == old.item_rowid AND uploaded_size == 0 AND needs_upload_size == 0 AND  uploaded_count == 0 AND needs_upload_count == 0 AND  downloaded_size == 0 AND needs_download_size == 0 AND  downloaded_count == 0 AND needs_download_count == 0 AND  synced_up_count  == 0 AND needs_sync_up_count == 0 AND  needs_delete_doc_count == 0 AND  dl_unstaged_count == 0 AND needs_dl_unstage_count == 0 AND  faults_count == 0 AND needs_faulting_count == 0 AND  over_quota_count == 0 AND shared_by_me_count == 0 AND  shared_to_me_count  == 0 AND item_type NOT IN (0, 9, 10, 4); END
CREATE TRIGGER "item_recursive_properties/recursive_reparent" AFTER UPDATE OF item_parent_id, item_parent_zone_rowid ON item_recursive_properties WHEN ((new.item_parent_id != old.item_parent_id OR new.item_parent_zone_rowid != old.item_parent_zone_rowid)        AND ((SELECT 1 FROM item_recursive_properties WHERE item_id = new.item_parent_id AND zone_rowid = new.item_parent_zone_rowid LIMIT 1)              OR item_id_is_root(new.item_parent_id))) BEGIN UPDATE item_recursive_properties SET  dir_faults_count = dir_faults_count - old.dir_faults_count ,  faults_count = faults_count - old.faults_count ,  needs_faulting_count = needs_faulting_count - old.needs_faulting_count ,  over_quota_count = over_quota_count - old.over_quota_count ,  shared_by_me_count = shared_by_me_count - old.shared_by_me_count ,  shared_to_me_count = shared_to_me_count - old.shared_to_me_count ,  needs_upload_size = needs_upload_size - old.needs_upload_size ,  needs_upload_count = needs_upload_count - old.needs_upload_count ,  needs_download_size = needs_download_size - old.needs_download_size ,  needs_download_count = needs_download_count - old.needs_download_count ,  needs_dl_unstage_count = needs_dl_unstage_count - old.needs_dl_unstage_count ,  needs_sync_up_count = needs_sync_up_count - old.needs_sync_up_count ,  needs_delete_doc_count = needs_delete_doc_count - old.needs_delete_doc_count  WHERE item_id == old.item_parent_id AND  zone_rowid = old.item_parent_zone_rowid; UPDATE item_recursive_properties SET  dir_faults_count = dir_faults_count + new.dir_faults_count ,  faults_count = faults_count + new.faults_count ,  needs_faulting_count = needs_faulting_count + new.needs_faulting_count ,  over_quota_count = over_quota_count + new.over_quota_count ,  shared_by_me_count = shared_by_me_count + new.shared_by_me_count ,  shared_to_me_count = shared_to_me_count + new.shared_to_me_count ,  needs_upload_size = needs_upload_size + new.needs_upload_size ,  needs_upload_count = needs_upload_count + new.needs_upload_count ,  needs_download_size = needs_download_size + new.needs_download_size ,  needs_download_count = needs_download_count + new.needs_download_count ,  needs_dl_unstage_count = needs_dl_unstage_count + new.needs_dl_unstage_count ,  needs_sync_up_count = needs_sync_up_count + new.needs_sync_up_count ,  needs_delete_doc_count = needs_delete_doc_count + new.needs_delete_doc_count  WHERE item_id == new.item_parent_id AND  zone_rowid = new.item_parent_zone_rowid; END
CREATE TRIGGER "item_recursive_properties/recursive_delete" AFTER DELETE ON item_recursive_properties BEGIN UPDATE item_recursive_properties SET  dir_faults_count = dir_faults_count - old.dir_faults_count ,  faults_count = faults_count - old.faults_count ,  needs_faulting_count = needs_faulting_count - old.needs_faulting_count ,  over_quota_count = over_quota_count - old.over_quota_count ,  shared_by_me_count = shared_by_me_count - old.shared_by_me_count ,  shared_to_me_count = shared_to_me_count - old.shared_to_me_count ,  needs_upload_size = needs_upload_size - old.needs_upload_size ,  needs_upload_count = needs_upload_count - old.needs_upload_count ,  needs_download_size = needs_download_size - old.needs_download_size ,  needs_download_count = needs_download_count - old.needs_download_count ,  needs_dl_unstage_count = needs_dl_unstage_count - old.needs_dl_unstage_count ,  needs_sync_up_count = needs_sync_up_count - old.needs_sync_up_count ,  needs_delete_doc_count = needs_delete_doc_count - old.needs_delete_doc_count  WHERE item_id == old.item_parent_id AND  zone_rowid = old.item_parent_zone_rowid AND ( 0 != old.dir_faults_count OR  0 != old.faults_count OR  0 != old.needs_faulting_count OR  0 != old.over_quota_count OR  0 != old.shared_by_me_count OR  0 != old.shared_to_me_count OR  0 != old.needs_upload_size OR  0 != old.needs_upload_count OR  0 != old.needs_download_size OR  0 != old.needs_download_count OR  0 != old.needs_dl_unstage_count OR  0 != old.needs_sync_up_count OR  0 != old.needs_delete_doc_count ); END
INSERT OR IGNORE INTO item_recursive_properties (item_rowid, item_id, item_parent_id, item_type, zone_rowid, item_parent_zone_rowid) SELECT rowid, item_id, item_parent_id, call_block(%p, item_type), zone_rowid, item_parent_zone_rowid FROM client_items WHERE (item_sharing_options & 4) != 0 OR item_type IN (2, 7, 8) OR item_localsyncupstate IN (3,4) AND item_type IN (1, 2, 8)
UPDATE item_recursive_properties SET shared_by_me_count = call_block(%p, shared_by_me_count, 1, (SELECT cz.zone_owner FROM client_zones AS cz WHERE cz.rowid = zone_rowid)), shared_to_me_count = call_block(%p, shared_to_me_count, 0, (SELECT cz.zone_owner FROM client_zones AS cz WHERE cz.rowid = zone_rowid)) WHERE item_rowid IN (SELECT rowid FROM client_items WHERE (item_sharing_options & 4) != 0)
UPDATE item_recursive_properties SET shared_to_me_count = 1 WHERE item_rowid IN (SELECT rowid FROM client_items WHERE (item_sharing_options & 4) != 0 AND zone_rowid != item_parent_zone_rowid)
UPDATE item_recursive_properties SET dir_faults_count = dir_faults_count + 1 WHERE item_type IN (9, 10)
UPDATE item_recursive_properties SET faults_count = 1 WHERE item_rowid IN (SELECT rowid FROM client_items WHERE item_type IN (2, 7, 8))
UPDATE item_recursive_properties AS ip SET needs_upload_size = (SELECT ci.version_size from client_items AS ci WHERE ci.rowid = ip.item_rowid), needs_upload_count = 1 WHERE item_rowid IN (SELECT rowid FROM client_items WHERE item_localsyncupstate = 3 AND item_type IN (1, 2, 8))
UPDATE item_recursive_properties AS ip SET needs_sync_up_count = needs_sync_up_count + 1 WHERE item_rowid IN (SELECT rowid FROM client_items WHERE item_localsyncupstate = 4 AND item_type IN (1, 2, 8))
UPDATE item_recursive_properties AS ip SET needs_delete_doc_count = needs_delete_doc_count + 1 WHERE item_rowid IN (SELECT rowid FROM client_items WHERE item_state IN (1, -3) AND item_type IN (1, 2, 8))
CREATE TABLE IF NOT EXISTS ciconia_history ( date integer NOT NULL, os text NOT NULL, br text NOT NULL, bird_schema integer NOT NULL, db_schema integer NOT NULL, ciconia_version integer NOT NULL, last_error text, duration real NOT NULL, uuid text NOT NULL, PRIMARY KEY (uuid))
UPDATE client_pkg_items SET xattrs = call_block(%p, xattrs) WHERE xattrs IS NOT NULL
SELECT signature, data FROM server_xattr_blobs
DROP TABLE server_xattr_blobs
CREATE INDEX "client_items/share_id" on client_items(app_library_rowid) WHERE (item_sharing_options & 4) != 0
CREATE INDEX "client_items/oob_sync_ack" on client_items(zone_rowid) WHERE (item_local_diffs & 1152921504606846976) != 0
CREATE INDEX "ciconia_history/counting_index" ON ciconia_history(ciconia_version)
CREATE INDEX "client_items/item_xattr_signature" ON client_items(item_xattr_signature)
CREATE INDEX "client_items/version_xattr_signature" ON client_items(version_xattr_signature)
DROP INDEX IF EXISTS "server_items/item_xattr_signature"
DROP INDEX IF EXISTS "server_items/version_xattr_signature"
CREATE INDEX "server_items/item_xattr_signature" ON server_items(item_xattr_signature)
CREATE INDEX "server_items/version_xattr_signature" ON server_items(version_xattr_signature)
ALTER TABLE telemetry_events ADD COLUMN priority integer not null default 0
CREATE INDEX "telemetry_events/priority" ON telemetry_events (priority) WHERE priority = 1
DELETE FROM client_items AS ci WHERE ci.item_stat_ckinfo IS NULL AND ci.zone_rowid IN (SELECT rowid FROM client_zones AS cz WHERE cz.zone_owner = "__defaultOwner__") AND item_type NOT IN (0, 4, 9, 10) LIMIT %llu
SELECT 1 FROM sqlite_master where type = 'table' AND name = 'ciconia_migration_info'
INSERT OR REPLACE INTO ciconia_migration_info values (%@, %lld)
INSERT OR REPLACE INTO ciconia_migration_info values (%@, %d)
DELETE FROM client_items WHERE item_type = 3 LIMIT %llu
DELETE FROM client_downloads WHERE download_kind = 1
DROP INDEX IF EXISTS "client_items/item_tmpbounceno"
DROP INDEX IF EXISTS "client_items/item_notifs_rank_children"
DROP INDEX IF EXISTS "client_items/doc_sync_state"
DROP INDEX IF EXISTS "client_sync_up/zone_rowid"
DROP INDEX IF EXISTS "client_sync_up/sync_state_index"
DROP INDEX IF EXISTS "client_sync_up/throttle_id"
DROP INDEX IF EXISTS "client_downloads/zone_rowid__throttle_state"
DROP INDEX IF EXISTS "client_uploads/zone_rowid__throttle_state"
DROP INDEX IF EXISTS "client_uploads/group_by"
DROP INDEX IF EXISTS "client_downloads/group_by"
DROP INDEX IF EXISTS "client_items/working_set_index"
UPDATE client_items SET item_localsyncupstate = call_block(%p, item_localsyncupstate) WHERE item_state IN (0, -1) AND item_type NOT IN (2, 7)
UPDATE client_items SET desired_version = NULL, item_localname = NULL, item_tmpbounceno = NULL, item_thumb_greedy = NULL, item_thumb_live_signature = NULL
UPDATE client_items SET item_scope = 2 WHERE item_scope = 1 AND call_block(%p, item_id)
UPDATE client_downloads SET download_error = NULL
UPDATE client_items SET item_type = 1 WHERE item_type = 2 LIMIT %llu
UPDATE client_items SET item_type = 6 WHERE item_type = 7 LIMIT %llu
UPDATE client_items SET item_state = 0,     item_scope = (        WITH RECURSIVE item_parents_scopes (item_scope, item_id, zone_rowid) AS (            SELECT ci.item_scope, ci.item_parent_id, ci.item_parent_zone_rowid            FROM client_items AS ci            WHERE ci.item_id = client_items.item_parent_id                AND ci.zone_rowid = client_items.item_parent_zone_rowid            UNION ALL            SELECT li.item_scope, li.item_parent_id, li.item_parent_zone_rowid            FROM client_items as li                 INNER JOIN item_parents_scopes AS p USING (item_id, zone_rowid)        )        SELECT item_scope        FROM item_parents_scopes        WHERE item_scope > 0        LIMIT 1    )WHERE item_state IN (-1, -2) AND item_scope = 0 LIMIT %llu
UPDATE client_items SET item_state = 0 WHERE item_state IN (-1, -2) LIMIT %llu
UPDATE client_items SET item_state = 1 WHERE item_state = -3 LIMIT %llu
UPDATE client_items SET item_processing_stamp = NULL WHERE item_type NOT IN (0, 4, 9, 10) AND item_processing_stamp IS NOT NULL
UPDATE client_unapplied_table SET throttle_state = 1 WHERE throttle_state = 26
DROP TRIGGER IF EXISTS "client_pkg_items/increase_pkg_size"
DROP TRIGGER IF EXISTS "client_pkg_items/update_pkg_size"
DROP TRIGGER IF EXISTS "client_pkg_items/reduce_pkg_size"
 CREATE TABLE client_pkg_upload_items ( item_rowid integer not null, rel_path text not null, item_type integer not null, asset_rank integer not null, quarantine_info blob, file_id integer not null, signature_or_link blob, generation, size integer, mode integer, mtime integer, xattr_signature blob, PRIMARY KEY (item_rowid, rel_path ASC))
CREATE TRIGGER "client_pkg_upload_items/item_delete" AFTER DELETE ON client_items BEGIN DELETE FROM client_pkg_upload_items WHERE item_rowid = old.rowid ; END
CREATE TRIGGER "client_pkg_upload_items/sync_idle_delete" AFTER UPDATE OF item_localsyncupstate, item_state ON client_items BEGIN DELETE FROM client_pkg_upload_items WHERE (new.item_state = 1 OR new.item_localsyncupstate IN (1, 0)) AND item_rowid = new.rowid ; END
CREATE TABLE client_pkg_upload_sizes (item_rowid integer not null primary key, aggregate_size integer not null default 0, largest_file_size integer not null default 0)
CREATE TRIGGER "client_pkg_upload_items/increase_pkg_size" AFTER INSERT ON client_pkg_upload_items BEGIN INSERT OR IGNORE INTO client_pkg_upload_sizes VALUES (new.item_rowid, 0, 0); UPDATE client_pkg_upload_sizes SET aggregate_size = aggregate_size + COALESCE(new.size, 0), largest_file_size = MAX(COALESCE(new.size,0), largest_file_size) WHERE item_rowid = new.item_rowid; END
CREATE TRIGGER "client_pkg_upload_items/update_pkg_size" AFTER UPDATE OF size ON client_pkg_upload_items BEGIN UPDATE client_pkg_upload_sizes SET aggregate_size = aggregate_size - COALESCE(old.size, 0) + COALESCE(new.size, 0), largest_file_size = MAX(COALESCE(new.size,0), largest_file_size) WHERE item_rowid = new.item_rowid; END
CREATE TRIGGER "client_pkg_upload_items/reduce_pkg_size"  BEFORE DELETE ON client_pkg_upload_items BEGIN UPDATE client_pkg_upload_sizes SET aggregate_size = aggregate_size - COALESCE(old.size, 0) WHERE item_rowid = old.item_rowid; END
DROP TRIGGER IF EXISTS insert_version_sum_size
DROP TRIGGER IF EXISTS update_version_sum_size
DROP TRIGGER IF EXISTS delete_version_sum_size
DROP TABLE IF EXISTS client_reader_throttle
DROP TABLE IF EXISTS mark_children_lost_progress
DROP TABLE IF EXISTS client_pkg_items
DROP TABLE IF EXISTS client_pkg_sizes
DROP TABLE IF EXISTS client_document_access
DROP TABLE IF EXISTS aggregates
DELETE FROM client_uploads
DELETE FROM client_sync_up
ALTER TABLE client_items ADD COLUMN item_local_change_count integer
ALTER TABLE client_items ADD COLUMN item_old_version_identifier text
ALTER TABLE client_items ADD COLUMN version_local_change_count integer
ALTER TABLE client_items ADD COLUMN version_old_version_identifier text
CREATE INDEX "client_items/next_propagation" ON client_items(item_processing_stamp) WHERE item_processing_stamp IS NOT NULL
CREATE INDEX "client_items/item_notifs_rank" ON client_items (item_notifs_rank)
CREATE INDEX "client_items/items_needing_sync" ON client_items(item_localsyncupstate, zone_rowid) WHERE item_localsyncupstate = 3 OR item_localsyncupstate = 4
CREATE INDEX "client_items/lost_file_id" ON client_items(item_localsyncupstate) WHERE item_localsyncupstate = 8
CREATE INDEX "client_items/item_filename_path_nocase" ON client_items (item_parent_zone_rowid, item_parent_id, item_filename COLLATE NOCASE) WHERE item_bouncedname IS NULL
CREATE INDEX "client_items/item_parent_id__item_bouncedname_nocase" ON client_items (item_parent_zone_rowid, item_parent_id, item_bouncedname COLLATE NOCASE) WHERE item_bouncedname IS NOT NULL
CREATE INDEX "client_sync_up/sync_state_index" ON client_sync_up (zone_rowid, throttle_state) WHERE throttle_state != 0
CREATE INDEX "client_sync_up/throttle_id" ON client_sync_up(throttle_id) WHERE throttle_state != 0
SELECT 1 from client_items LIMIT 1
SELECT * from client_state
kBRCFPFSMigrationStateKey
SELECT 1 FROM client_items WHERE item_state in (0, -1)  AND NOT EXISTS (SELECT 1 FROM app_libraries WHERE client_items.app_library_rowid = app_libraries.rowid)
UPDATE client_items SET item_scope = 2 WHERE zone_rowid = %@ AND item_scope = 0 AND item_state != -2
UPDATE client_items SET item_scope = 2 WHERE zone_rowid = %@ AND item_scope = 0 AND migration_is_parented_or_equal_to_old_doc_id(%p, item_parent_id) AND item_state != -2
UPDATE client_items SET item_scope = 1 WHERE zone_rowid = %@ AND item_scope = 0 AND NOT migration_is_parented_or_equal_to_old_doc_id(%p, item_parent_id) AND item_state != -2
UPDATE server_items SET item_filename = call_block(%@, item_filename) WHERE item_filename != call_block(%@, item_filename)
UPDATE server_items SET item_origname = call_block(%@, item_origname) WHERE item_origname IS NOT NULL AND item_origname != call_block(%@, item_origname)
UPDATE server_items SET version_name = call_block(%@, version_name) WHERE version_name IS NOT NULL AND version_name != call_block(%@, version_name)
UPDATE client_items SET item_filename = call_block(%@, item_filename) WHERE item_filename != call_block(%@, item_filename)
UPDATE client_items SET version_name = call_block(%@, version_name) WHERE version_name IS NOT NULL AND version_name != call_block(%@, version_name)
UPDATE client_items SET item_localname = call_block(%@, item_localname) WHERE item_localname IS NOT NULL AND item_localname != call_block(%@, item_localname)
UPDATE client_items SET item_bouncedname = call_block(%@, item_bouncedname) WHERE item_bouncedname IS NOT NULL AND item_bouncedname != call_block(%@, item_bouncedname)
UPDATE client_document_access     SET evictable = call_block(%@, access_time, (SELECT version_mtime FROM client_items AS ci WHERE ci.rowid = item_rowid))  WHERE evictable > 0
UPDATE client_uploads SET throttle_state = 1 WHERE throttle_id in (SELECT throttle_id FROM client_items, client_uploads WHERE client_items.rowid = client_uploads.throttle_id AND item_localsyncupstate = 3)
INSERT INTO client_uploads (throttle_id, zone_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, item_id, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, upload_error, upload_priority, upload_request_stamp, app_library_rowid) SELECT client_items.rowid, zone_rowid, 1, 0, 0, 0, 0, item_id, "_prepare", version_size + version_thumb_size, NULL, NULL, NULL, NULL, -1, 0, app_library_rowid FROM client_items WHERE item_type IN (1, 6) AND item_localsyncupstate = 3 AND rowid NOT IN (SELECT throttle_id from client_uploads)
UPDATE client_downloads SET throttle_state = 1 WHERE throttle_id in ( SELECT throttle_id FROM client_items, client_downloads WHERE client_items.rowid = client_downloads.throttle_id AND item_type IN (1, 2, 6, 7) AND desired_version is not NULL AND call_block(%@, desired_version))
INSERT INTO client_downloads (throttle_id, zone_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, item_id, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, download_kind, download_etag, download_priority, download_request_stamp, download_error, unit_count_completed, app_library_rowid) SELECT client_items.rowid, client_items.zone_rowid, 1, 0, 0, 0, 0, item_id, call_block(%@, app_library_owner, app_library_name), call_block(%@, desired_version), NULL, NULL, NULL, 0, call_block(%@, desired_version), -1, 0, NULL, 0, app_library_rowid FROM client_items, app_libraries, client_zones WHERE client_items.app_library_rowid = app_libraries.rowid AND app_libraries.zone_rowid = client_zones.rowid AND item_type IN (1, 2, 6, 7) AND desired_version is not NULL AND client_items.rowid NOT IN (SELECT throttle_id from client_downloads) AND call_block(%@, desired_version)
INSERT OR REPLACE INTO client_uploads  (throttle_id, zone_rowid, app_library_rowid, transfer_size, throttle_state, transfer_queue) SELECT rowid, zone_rowid, app_library_rowid, version_size + version_thumb_size, 1, %s FROM client_items WHERE item_localsyncupstate == 3 AND rowid NOT IN (SELECT throttle_id FROM client_uploads WHERE throttle_state != 0)
child-propagation
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/fpfs/import/BRCFSImporter.m
-[BRCFSImporter initWithAccountSession:]_block_invoke
unreachable: Can't import br aliases anymore %@
-[BRCFSImporter _createBaseItemWithImportObject:error:]
unreachable: Import object of unknown type %@
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE item_doc_id = %u   AND +item_state = 0   AND +item_type IN (1, 2, 8, 6, 7)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items  WHERE item_file_id = %lld    AND item_state = 0
-[BRCFSImporter capabilityToMoveItem:toNewParentItem:error:]
label
BouncingCountOnSameType
BouncingCountFrom%@To%@
UPDATE ciconia_migration_info SET value = value + 1 WHERE key = %@
-[BRCFSImporter _findCollidingItemWithTemplateItem:parentItem:logicalName:error:]
-[BRCFSImporter _handleCollisionIfNecessaryWithTemplateItem:parentItem:logicalName:fileURL:options:error:]
-[BRCFSImporter _locateMatchingItemForTemplateItem:parentItem:logicalName:options:fileURL:fields:shouldReject:additionalAttrs:error:]
-[BRCFSImporter _createAndInsertNewItemWithImportObject:parentItem:fields:templateItem:fileURL:options:additionalAttrs:error:]_block_invoke
-[BRCFSImporter _createAndInsertNewItemWithImportObject:parentItem:fields:templateItem:fileURL:options:additionalAttrs:error:]
symlink-target
-[BRCFSImporter importNewItemAtURL:logicalName:parentItem:templateItem:fields:options:additionalItemAttributes:error:]
-[BRCFSImporter _getOrCreateTrashItemInAppLibrary:error:]
-[BRCFSImporter _trashItem:error:]
-[BRCFSImporter _untrashItem:toParentFileObjectID:error:]
-[BRCFSImporter _processParentAndFilenameIfNecessaryWithLocalItem:changedFields:templateItem:error:]_block_invoke
B40@?0@"NSString"8@"BRCClientZone"16@"BRCItemID"24@"BRCDirectoryItem"32
parentItemIdentifier
-[BRCFSImporter _processParentAndFilenameIfNecessaryWithLocalItem:changedFields:templateItem:error:]
-[BRCFSImporter changeItem:baseVersion:changedFields:newValues:contents:options:additionalAttrs:clearCKInfoOnSyncUp:error:]
-[BRCClientZone init]
zone-tracker
client-zone/zone-creation
server-stitching-throttle
syncUpBackoffRatio
osNameRequiredToSync
syncDownGroup
Creating
Loading
sync
crash-recovery
ipc-com.apple.finder
CKErrorInternalContainerReset
CKErrorUserDeleteZone
CKErrorZoneNotFound
CKErrorSharedZoneNotFound
zone became healthy
start-scan
testing
SELECT COUNT(1) FROM client_items WHERE item_localsyncupstate IN(2, 3, 4) AND zone_rowid = %@  AND call_block(%p, version_upload_error, item_id)
SELECT SUM(version_size) FROM client_items WHERE item_localsyncupstate IN (2, 3, 4)   AND zone_rowid = %@   AND call_block(%p, version_upload_error)
<%@[%@] %@ {client:%@ server:%@ sync:%@ %@ rid:%llu}>
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE (item_parent_zone_rowid = %@ OR zone_rowid = %@) AND item_doc_id = %u   AND +item_state IN (0, -1)   AND +item_type IN (1, 2, 8, 6, 7)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items  WHERE (item_parent_zone_rowid = %@ OR zone_rowid = %@)     AND item_file_id = %lld    AND item_state IN (0, -1)
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE item_parent_id = %@ AND item_filename = %@ AND +zone_rowid = %@
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE (item_parent_id = %@ AND item_filename = %@ AND item_state != -2 AND item_parent_zone_rowid = %@        AND item_bouncedname IS NULL)   OR  (item_parent_id = %@ AND item_bouncedname = %@ AND item_state != -2 AND item_parent_zone_rowid = %@)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE (item_parent_id = %@ AND item_filename = %@ AND item_state != -2 AND item_parent_zone_rowid = %@        AND item_localname IS NULL)   OR  (item_parent_id = %@ AND item_localname = %@ AND item_state != -2 AND item_parent_zone_rowid = %@)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE ( item_parent_id = %@ AND item_filename = %@ AND +item_state = -2 AND item_parent_zone_rowid = %@ AND item_bouncedname IS NULL) OR ( item_parent_id = %@ AND item_bouncedname = %@ AND +item_state = -2 AND item_parent_zone_rowid = %@)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE ( item_parent_id = %@ AND item_filename = %@ AND +item_state != -2 AND +item_type IN (2, 7, 8) AND item_parent_zone_rowid = %@ AND item_bouncedname IS NULL) OR ( item_parent_id = %@ AND item_bouncedname = %@ AND +item_state != -2 AND +item_type IN (2, 7, 8) AND item_parent_zone_rowid = %@)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE ( item_parent_id = %@ AND item_localname = %@ AND +item_state != -2 AND +item_type IN (2, 7, 8) AND item_parent_zone_rowid = %@)
AND item_id != %@
SELECT 1 FROM client_items WHERE ((item_parent_id = %@ AND item_filename = %@ COLLATE NOCASE AND item_parent_zone_rowid = %@ AND item_bouncedname IS NULL) OR (item_parent_id = %@ AND item_bouncedname = %@ COLLATE NOCASE AND item_parent_zone_rowid = %@)) AND item_state != 1 %@ LIMIT 1
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE zone_rowid = %@
SELECT 1 FROM client_items WHERE zone_rowid = %@ LIMIT 1
SELECT 1 FROM client_items AS li INNER JOIN client_sync_up AS su ON su.throttle_id = li.rowid WHERE su.zone_rowid = %@   AND (su.in_flight_diffs BETWEEN -9223372036854775808 AND 9223372036854775807)   AND su.throttle_state != 0 LIMIT 1
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE zone_rowid = %@    AND item_type IN (1, 6)    AND (item_localsyncupstate = 2 OR         item_localsyncupstate = 3 OR         item_localsyncupstate = 4)   AND item_scope = 2
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE zone_rowid = %@    AND rowid > %llu   AND item_type = 2 ORDER BY rowid LIMIT %lu
v32@?0@"BRCClientZone"8@"NSArray"16@"NSError"24
SELECT item_stat_ckinfo, item_local_change_count FROM client_items WHERE zone_rowid = %@ AND item_id = %@
UPDATE client_items SET item_stat_ckinfo = %@, item_local_change_count = 0, item_old_version_identifier = %@  WHERE zone_rowid = %@ AND item_id = %@
SELECT version_ckinfo, version_local_change_count FROM client_items WHERE zone_rowid = %@ AND item_id = %@
UPDATE client_items SET version_ckinfo = %@, version_device = %@,  version_local_change_count = 0, version_old_version_identifier = %@ WHERE zone_rowid = %@ AND item_id = %@
UPDATE client_items SET version_ckinfo = %@, version_local_change_count = 0, version_old_version_identifier = %@ WHERE zone_rowid = %@ AND item_id = %@
UPDATE client_items SET item_side_car_ckinfo = %@ WHERE zone_rowid = %@ AND item_id = %@
(successful)
v32@?0@"CKRecordID"8@"NSError"16^B24
defaultSyncThrottle
v32@?0@"BRCItemID"8@"NSMutableArray"16^B24
v32@?0@"NSString"8@?<v@?@"BRCItemID">16^B24
SyncDown
<rdar://problem/26073809> _fixupMissingCrossMovedItems causes slow SQL assertions
UPDATE client_items SET item_localsyncupstate = 1 WHERE zone_rowid = %@   AND item_localsyncupstate = 0   AND (item_local_diffs & 0x2000000000000000) != 0   AND NOT EXISTS (SELECT * FROM server_items WHERE server_items.item_id = client_items.item_id AND zone_rowid = %@)
q24@?0@"_BRCOperation<BRCOperationSubclass>"8@"_BRCOperation<BRCOperationSubclass>"16
UPDATE client_items SET item_local_diffs = (item_local_diffs & (~%lld)) WHERE zone_rowid = %@ AND (item_local_diffs & %lld) != 0
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE zone_rowid = %@ AND item_type in (1, 2, 6, 7)
UPDATE client_uploads SET zone_rowid = %@ WHERE throttle_id = %lld
UPDATE client_downloads SET zone_rowid = %@ WHERE throttle_id = %lld
DELETE FROM client_unapplied_table WHERE zone_rowid = %@
UPDATE client_sync_up SET zone_rowid = %@ WHERE zone_rowid = %@
DELETE FROM client_uploads WHERE zone_rowid = %@
DELETE FROM client_downloads WHERE zone_rowid = %@
DELETE FROM client_items WHERE zone_rowid = %@ AND item_type = 3
UPDATE client_items SET zone_rowid = %@,   item_stat_ckinfo = call_block(%p, item_stat_ckinfo),   version_ckinfo   = call_block(%p, version_ckinfo),   item_local_diffs = (item_local_diffs | %lld)  WHERE zone_rowid = %@
UPDATE client_items SET item_parent_zone_rowid = %@ WHERE item_parent_zone_rowid = %@
UPDATE client_items SET version_old_zone_rowid = NULL, version_old_zone_item_id = NULL WHERE version_old_zone_rowid = %@
UPDATE client_items SET version_old_zone_rowid = %@ WHERE version_old_zone_rowid = %@
DELETE FROM client_zones WHERE rowid = %@
non-
list
SELECT item_type FROM client_items WHERE item_id = %@ AND zone_rowid = %@
list recursively
fetch parent chain
locate record
fetch recents and favorites
Client Truth Unclean Items:
--------------------------
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp     FROM client_items    WHERE item_parent_id = %@ ORDER BY item_filename
zone:%@ 
 upload{%@}
 rejected{%@}
 downloader{%@}
 sync-up{%@}
client items
scheduling sync contexts
========================
+ %@
-[BRCClientZone dumpTablesToContext:includeAllItems:error:]
implement this in subclass
-[BRCClientZone _resetItemsTable]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/containers/BRCClientZone.m
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE item_parent_zone_rowid = %@ AND item_parent_zone_rowid != zone_rowid
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE item_rank = %lld AND zone_rowid = %@
SELECT item_rank FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE rowid = %lld
SELECT child_count FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT visible_child_count FROM client_items WHERE item_id = %@ AND zone_rowid = %@
SELECT quota_used FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT COUNT(si.item_id) FROM server_items AS si LEFT JOIN client_unapplied_table AS cu ON si.item_rank = cu.throttle_id WHERE si.item_parent_id = %@ AND si.zone_rowid = %@ AND ((si.item_filename LIKE '.%%') OR (si.item_type = 3 AND cu.throttle_state = 24))
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE rowid = %lld AND zone_rowid = %@
SELECT item_id FROM client_items  WHERE item_file_id = %lld    AND +item_type IN (0, 9, 10, 4)    AND item_state IN (0, -1)    AND zone_rowid = %@
SELECT item_type FROM client_items WHERE item_id = %@ AND zone_rowid = %@ LIMIT 1
must implement in subclass
-[BRCClientZone validateItemsLoggingToFile:db:]
-[BRCClientZone validateStructureLoggingToFile:db:]
v16@?0@"BRCLocalItem"8
 WITH RECURSIVE item_parents (item_id, zone_rowid, height) AS (     SELECT item_parent_id, zone_rowid, 0 FROM server_items      WHERE item_id = %@ AND zone_rowid = %@  UNION ALL     SELECT si.item_parent_id, si.zone_rowid, p.height + 1 FROM server_items AS si  INNER JOIN item_parents AS p USING (item_id, zone_rowid)      LIMIT %u ) SELECT ip.item_id, ip.zone_rowid FROM item_parents AS ip WHERE NOT EXISTS (SELECT 1 FROM client_items AS ci WHERE ip.item_id = ci.item_id   AND ip.zone_rowid = ci.zone_rowid) AND NOT item_id_is_root(ip.item_id) ORDER BY ip.height DESC
 WITH RECURSIVE item_parents (item_parent_id, zone_rowid, height) AS (     SELECT item_parent_id, zone_rowid, 0 FROM server_items      WHERE item_id = %@ AND zone_rowid = %@  UNION ALL     SELECT si.item_parent_id, si.zone_rowid, p.height + 1 FROM server_items AS si  INNER JOIN item_parents AS p where (si.item_id = p.item_parent_id)  LIMIT %u ) SELECT item_parent_id FROM item_parents ORDER BY height DESC
fail
v16@?0B8B12
%@{needs:(count:%lld, size:%@) done:(count:%lld, size:%@)} 
%@{needs:%lld done:%lld} 
SELECT dir_faults_count, faults_count,needs_faulting_count, uploaded_size,needs_upload_size, uploaded_count,needs_upload_count, downloaded_size,needs_download_size, downloaded_count,needs_download_count, dl_unstaged_count,needs_dl_unstage_count, synced_up_count,needs_sync_up_count, over_quota_count, shared_by_me_count, shared_to_me_count, needs_delete_doc_count FROM item_recursive_properties  WHERE item_rowid = %llu
dir-faults:%lld 
faults:%lld 
needs-faulting:%lld 
download
unstage
sync-up
quota:%lld 
sbmc:%lld 
stmc:%lld 
nd:%lld 
%*s> %@
SELECT ci.rowid, ci.zone_rowid, ci.item_id, ci.item_creator_id, ci.item_sharing_options, ci.item_side_car_ckinfo, ci.item_parent_zone_rowid, ci.item_localsyncupstate, ci.item_local_diffs, ci.item_notifs_rank, ci.app_library_rowid, ci.item_min_supported_os_rowid, ci.item_user_visible, ci.item_stat_ckinfo, ci.item_state, ci.item_type, ci.item_mode, ci.item_birthtime, ci.item_lastusedtime, ci.item_favoriterank,ci.item_parent_id, ci.item_filename, ci.item_hidden_ext, ci.item_finder_tags, ci.item_xattr_signature, ci.item_trash_put_back_path, ci.item_trash_put_back_parent_id, ci.item_alias_target, ci.item_creator, ci.item_processing_stamp, ci.item_staged_file_id, ci.item_staged_generation, ci.item_bouncedname, ci.item_scope, ci.item_local_change_count, ci.item_old_version_identifier, ci.version_name, ci.version_ckinfo, ci.version_mtime, ci.version_size, ci.version_thumb_size, ci.version_thumb_signature, ci.version_content_signature, ci.version_xattr_signature, ci.version_edited_since_shared, ci.version_device, ci.version_conflict_loser_etags, ci.version_quarantine_info, ci.version_uploaded_assets, ci.version_upload_error, ci.version_old_zone_item_id, ci.version_old_zone_rowid, ci.version_local_change_count, ci.version_old_version_identifier, ci.desired_version, ci.item_live_conflict_loser_etags, ci.item_file_id, ci.item_generation, ci.version_block_sync_until_bundle_id, ci.version_block_sync_until_timestamp     FROM client_items AS ci     LEFT JOIN item_recursive_properties AS rp      ON ci.rowid = rp.item_rowid    WHERE ci.item_parent_id = %@ AND ci.item_parent_zone_rowid = %@ ORDER BY (rp.needs_sync_up_count + rp.needs_upload_count + rp.needs_download_count + rp.needs_delete_doc_count + rp.needs_faulting_count) DESC
%*s%@%@
%*s>%@
B28@?0@"BRCItemGlobalID"8i16^@20
SELECT COUNT(*) FROM client_items WHERE zone_rowid = %@
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE zone_rowid = %@ AND NOT indexset_contains(%p, rowid)
pending activity %@
(greedy)
================
+ downloads:%@
+ downloads: not dumping
+ uploads:  %@
+ uploads:  not dumping
[r:%@]: %@
v32@?0@"NSNumber"8@"NSOperation"16^B24
sync bubble waiting
+ apply:    %@
+ reader:   not dumping
+ apply:    not dumping
+ list:
%@:%@
v32@?0@"BRCItemID"8@"BRCListDirectoryContentsOperation"16^B24
+ rec-list:
v32@?0@"BRCItemID"8@"BRCRecursiveListDirectoryContentsOperation"16^B24
+ fetch-parent:
v32@?0@"BRCItemID"8@"BRCFetchParentChainOperation"16^B24
+ locate-record:
v32@?0@"CKRecordID"8@"BRCLocateRecordOperation"16^B24
+ fetch-recents:
because of item 
for budget 
 [sync-up throttled %@(next-try:in %.01fs)]
 [sync-up waiting to be scheduled]
 [sync-up running]
 [sync-up waiting for sync down]
 [sync-down throttled (next-try:in %.01fs)]
 [sync-down waiting to be scheduled]
 [scheduling: %@]
+ sync:      %@
  up:        %@
  up-budget: %@
  up-error:  %@
  dn-error   %@
  operation: %@
+ migration: %@
+ process-removal: %@
-[BRCClientZone _removeItemAndProcessForCrossZoneMove:]
v24@?0@"BRCItemGlobalID"8^B16
needs-sync
is-resetting
has-broken-structure
blocked-app-uninstalled
needs-upgrade
wants-data-unlinked
;%llu
Implement %@ in a subclass.
+[BRCPersistedState loadFromClientStateInSession:options:]
com.apple.clouddocs.internal.fpfs-extension
-[BRCXPCRegularIPCsClient(FPFSAdditions) getQueryItemForBRFileObjectID:reply:]
-[BRCXPCRegularIPCsClient(FPFSAdditions) createItemBasedOnTemplate:fields:contents:options:additionalItemAttributes:completionHandler:]
-[BRCXPCRegularIPCsClient(FPFSAdditions) startDownloadFileObject:options:reply:]
-[BRCXPCRegularIPCsClient(FPFSAdditions) deleteItemWithIdentifier:baseVersion:options:completionHandler:]
 recursively
-[BRCXPCRegularIPCsClient(FPFSAdditions) modifyItem:baseVersion:changedFields:contents:options:additionalAttrs:completionHandler:]
-[BRCXPCRegularIPCsClient(FPFSAdditions) reimport:]
-[BRCXPCRegularIPCsClient(FPFSAdditions) enumerateTrashItemsFromRank:limit:completion:]
-[BRCXPCRegularIPCsClient(FPFSAdditions) notifyReimportCompleted:]
-[BRCXPCRegularIPCsClient(FPFSAdditions) boostFilePresenterForItemIdentifier:reply:]
v24@?0@"BRCLocalItem"8@"NSError"16
-[BRCXPCRegularIPCsClient(FPFSAdditions) capabilityWhenTryingToReparentItemIdentifier:toNewParent:reply:]
-[BRCXPCRegularIPCsClient(FPFSAdditions) capabilityWhenTryingToReparentItemIdentifier:toNewParent:reply:]_block_invoke
-[BRCXPCRegularIPCsClient(FPFSAdditions) getBookmarkDataForItemIdentifier:onlyAllowItemKnowByServer:allowAccessByBundleID:documentID:isDirectory:reply:]
Publish failed but no error was set
v32@?0@"NSURL"8@"NSDate"16@"NSError"24
-[BRCXPCRegularIPCsClient(FPFSAdditions) getPublishedURLForItemIdentifier:forStreaming:requestedTTL:reply:]
-[BRCXPCRegularIPCsClient(FPFSAdditions) getAttributeValues:forItemIdentifier:reply:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/fpfs/item-categories/BRCLocalItem+FPFSAdditions.m
-[BRCLocalItem(FPFSAdditions) updateWithLogicalName:newParent:]
 WITH RECURSIVE item_parents (item_id, zone_rowid, item_filename) AS (     SELECT item_parent_id, item_parent_zone_rowid, item_filename FROM client_items      WHERE item_id = %@ AND zone_rowid = %@  UNION ALL     SELECT li.item_parent_id, li.item_parent_zone_rowid, li.item_filename FROM client_items AS li  INNER JOIN item_parents AS p USING (item_id, zone_rowid)      LIMIT %u ) SELECT item_filename FROM item_parents
unreachable: nobody should import an item from a fault
-[BRCLocalStatInfo(FPFSAdditions) initWithImportObject:error:]
unreachable: nobody should import an item from a BR Alias
unreachable: Unexpected import object %@
value
-[BRFieldXattr writeTo:]
BRFieldXattr.m
nil != self->_name
nil != self->_value
0123456789abcdef
events
problemReport
zoneHealthState
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE item_filename = %@ AND item_type = 3 AND zone_rowid = %@
+ delete-content: %@
     (last-error: %@)
+ barriers:  %ld
+ pcs chain operation:
itemID %s %s
SQL error: %s
client truth structure validation (%s)
=================================
DROP TABLE IF EXISTS items_checks
CREATE TABLE items_checks (item_id blob PRIMARY KEY, depth integer not null)
CREATE INDEX items_checks__depth__idx ON items_checks (depth)
INSERT INTO items_checks (item_id, depth) VALUES (%@, 0)
INSERT INTO items_checks    SELECT c.item_id, %lld      FROM items_checks AS p INNER JOIN client_items AS c ON (p.item_id = c.item_parent_id)     WHERE zone_rowid = %@ AND p.depth = %lld
SELECT item_id FROM client_items WHERE zone_rowid = %@   AND item_id NOT IN(SELECT item_id FROM items_checks)
is an orphan or part of a cycle
SELECT c.item_id      FROM client_items AS c INNER JOIN client_items AS p ON (c.item_parent_id = p.item_id)     WHERE c.item_state != 1 AND p.item_state = 1       AND c.zone_rowid = %@ AND p.zone_rowid = %@
is a live item parented to a tombstone
SELECT c.item_id      FROM client_items AS c INNER JOIN client_items AS p ON (c.item_parent_id = p.item_id)     WHERE p.item_type IN (1, 2, 8, 5, 6, 7)       AND c.zone_rowid = %@ AND p.zone_rowid = %@
is parented to a document
SELECT o.item_id       FROM client_items AS o  WHERE zone_rowid = %@ AND EXISTS ( SELECT 1 FROM client_items AS n WHERE  (  (    n.item_parent_id = o.item_parent_id      AND item_filename = IFNULL(o.item_localname, o.item_filename)      AND +item_localname IS NULL)  OR (    n.item_parent_id = o.item_parent_id      AND item_localname = IFNULL(o.item_localname, o.item_filename))  )  AND +n.item_id != o.item_id  AND n.zone_rowid = %@)
local items checks (%s)
===================
BRCHasAPFSSnapshot
_BRCDocumentIDKey
_BRCProgressGroupKey
GLOBAL_PROGRESS_UPLOADING_CAPITALIZE_DESCRIPTION
GLOBAL_PROGRESS_UPLOADS_WAITING_DESCRIPTION
GLOBAL_PROGRESS_DOWNLOADING_CAPITALIZE_DESCRIPTION
GLOBAL_PROGRESS_DOWNLOADS_WAITING_DESCRIPTION
GLOBAL_PROGRESS_ADDITIONAL_DESCRIPTION
 d:'%@%@'
<%@:%p c:%@ p:%lld(%+lld)/%lld(%+lld) [%.3f%%]%@>
 ooq:%lu>
com.apple.bird.global-progress
com.apple.bird.global-progress.pacer
%@ = %@;
.. truncated ..
global progress {%@ d:'%@%@'}
global progress {none}
upload %@
upload {none}
upload version sizes (%lu):
upload progresses (%lu): {
v32@?0@"NSNumber"8@"NSProgress"16^B24
upload progresses (0): {}
upload pending quota (%lu): {%@}
upload pending quota (0): {}
download %@
download {none}
download version sizes (%lu):
download progresses (%lu): {
download progresses (0): {}
download resume unit count (%lu): %@
completedUnitCount
initial sync-down
@sum.longLongValue
taking-over
session-destroyed
reparent
fetch-parent/
%K == %@ AND %K == %@
recordIds
FetchAncestors
unreachable: Couldn't allocate ranks when fetching parent chain
BRCFetchParentChainOperation
pcs chained 
half chained 
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE ((item_parent_id = %@ AND item_filename = %@ COLLATE NOCASE AND item_parent_zone_rowid = %@        AND item_bouncedname IS NULL)   OR  (item_parent_id = %@ AND item_bouncedname = %@ COLLATE NOCASE AND item_parent_zone_rowid = %@))  AND item_state != 1  %@ LIMIT 1
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE (item_parent_id = %@ AND item_filename = %@ COLLATE NOCASE AND item_parent_zone_rowid = %@        AND item_bouncedname IS NULL)   OR  (item_parent_id = %@ AND item_bouncedname = %@ COLLATE NOCASE AND item_parent_zone_rowid = %@)
clientRanks
nextNotifRank:%llu nextPackageItemRank:%llu
nextItemRowID
nextNotifRank
nextPackageItemRank
telemetryRowID
telemetryToken
metrics
directoryMtime
pcsChainState
serverZone
item %s is a directory with a version
rk:%lld 
pcs:c 
pcs:u 
pcs:h 
pcs:s 
ppm:%@ 
st{%@}
 alias-st{%@}
 sm{%@}
 target:%@
  itemPath:          %@
  rootPath:          %@
  parentID:          %@
  matchByPath:       %@
  matchByFileID:     %@
  matchByDocumentID: %@
  packageItem:       %@
  serverItemByPath:  %@
unfetched
[%llu]
{%llu}
invalid library rowid
+[BRCItemID documentsItemIDWithAppLibraryRowID:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/items/BRCItemID.m
-[BRCItemID _initAsLibraryRootWithAppLibraryRowID:]
can't initialize shared zone root with invalid zone rowid %@
-[BRCItemID _initAsZoneRootWithZoneRowID:]
can't initialize document with invalid library rowid %@
-[BRCItemID initAsDocumentsWithAppLibraryRowID:]
root_object
client_items
server_zones
client_zones
SELECT rowid FROM %@ WHERE zone_owner != %@
UPDATE %@ SET item_id = call_block(%@, item_id), item_parent_id = %@ WHERE zone_rowid = %@
UPDATE %@ SET item_id = call_block(%@, item_id, zone_rowid) WHERE item_type = 3
UPDATE %@ SET item_parent_id = call_block(%@, zone_rowid) WHERE item_parent_id = "root"
UPDATE %@ SET item_parent_id = call_block(%@, zone_rowid) WHERE item_parent_id = "documents"
UPDATE %@ SET item_id = call_block(%@, zone_rowid) WHERE item_id = "documents"
UPDATE client_unapplied_table SET item_id = call_block(%@, zone_rowid) WHERE item_id = "documents"
UPDATE %@ SET item_id = call_block(%@, item_id) WHERE item_type = 3
UPDATE %@ SET item_id = call_block(%@, item_id), item_parent_id = call_block(%@, item_parent_id) WHERE zone_rowid = %@
+[BRCReimporterUtil reimportItemsBelowItemWithIdentifier:error:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/fpfs/item-categories/BRCPackageItem+FPFSAdditions.m
+[BRCPackageItem(DatabaseMethods) updateSignaturesForFilesInItem:fromCKPackage:error:]
-[BRCPackageItem(DatabaseMethods) saveToDBWithSession:]
+[BRCPackageItem(DatabaseMethods) dumpSession:toContext:db:error:]
unkown-token-version:%d (%@)
current
<%@,%@>
beginning
unkown-token-size:%lu (%@)
-[BRCPackageManifestReader init]
unreachable: No reader to stage package at %s
unreachable: Package has been corrupted on the serverAsking for asset index out of bounds %lu vs %lu in package: %@
unreachable: Package has been corrupted in the cloudAsking for asset index out of bounds %lu vs %lu in package: %@
unreachable: Can't find item at index %ld
unreachable: xattr index is out of bounds %ld of total %ld
unreachable: Can't find xattr at index %ld
Can't load xattr
unknown error
version: 1
NULL path for item: %@
-[BRCPackageChecksummer addItem:error:]
NULL path for item symlink: %@
com.apple.bird.transmogrifier
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/foundation/BRCItemTransmogrifier.m
-[BRCItemTransmogrifier _finishDirectoryToPackageTransmogrification:relpath:]
-[BRCItemTransmogrifier scheduleDirectoryToPackageTransmogrification:absolutePath:]
brtest
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items      WHERE item_scope = 3        AND item_notifs_rank >= %lld        AND item_user_visible = 1   ORDER BY item_notifs_rank ASC LIMIT %lld
kBRCFPFSMigrationOffsetKey
kBRCFPFSMigrationLostItemCountKey
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/fpfs/support-categories/BRCAccountSession+FPFSAdditions.m
-[BRCAccountSession(FPFSAdditions) markMigrationToFPFSComplete]
@"NSString"16@?0@"NSString"8
q24@?0@8@16
-[BRCAccountSession(BRCContainerFindByName) clientZonesMatchingSearchString:error:]
-[BRCAccountSession(BRCContainerFindByName) singleClientZoneMatchingSearchString:error:]
Too many containers matching '%@': {%@}
-[BRCAccountSession(BRCContainerFindByName) appLibrariesMatchingSearchString:error:]
-[BRCAccountSession(BRCContainerFindByName) singleAppLibraryMatchingSearchString:error:]
Library/Application Support/CloudDocs/session/db/client.db
Library/Application Support/CloudDocs/
document-shares
folder-shares
folder-share-aliases
migration-query
-[BRCMigrationQueryOperation _saveFetchedRecords:cursor:error:]_block_invoke
-[BRCMigrationQueryOperation _saveFetchedRecords:cursor:error:]
-[BRCMigrationQueryOperation _updatedContinuationCursor:fetchedRecords:error:]_block_invoke
brPrefix
RecordPrefixList
v24@?0@"CKOperation"8@"CKRecord"16
%K != NULL
v24@?0@"_BRCOperation<BRCOperationSubclass>"8@"NSError"16
migration key
sharing.fetch-user-record-id
unreachable: no record and no error
provide-request-queue
coordinated-read
recursive-download
document-download
v16@?0@"BRCUserDownloadEvent"8
@"NSError"16@?0@"BRCLocalItem"8
recursive-provide
flat-provide
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/fs/BRCFileProvidingRequestOperation.m
-[BRCFileProvidingRequestOperation _provideURL]
cancellation
scheduler is nil
-[BRCTransferStream initWithSyncContext:name:scheduler:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/sync/transfers/BRCTransferStream.m
previousAttempts
previousFailedAttempts
areMigratedFaultsBelowThreshold
areNonFaultAllMigrated
typesOfMigratedItemsMask
expectedMigratedItemsCount
itemsNotMigratedCount
typesOfNonMigratedItemsMask
materialisedOnCDItemsCount
materialisedOnFPFSItemsCount
diskSpaceLeft
accountQuotaUsage
isAccountDataSeparated
ciconiaVersion
previousReleasesSuccessRate
cloningTime
importTime
manuallyTriggeredMigration
treatmentId
experimentId
itemsNotFoundInDB
itemsChangedDuringCloning
unexpectedCreations
ignoredContentProtectedItems
packagesWithoutBundleBit
totalItemCount
rampId
bouncedItemsCount
bouncedItemsMatrix
xattrs
 target:'%@'
INSERT INTO client_items ( rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name) VALUES ( %lld, %@, %@, %@, %ld, %@, %@, %d, %lld, %lld, %@, %@, %d, %@, %d, %d, %d, %lld, %lld, %lld, %@, %@, %d, %@, %@, %@, %@, %@, %@, %@, %@, %u, %@, %d, %llu, %@, %@)
UPDATE client_items SET item_id = %@, item_creator_id = %@, item_sharing_options = %ld, item_side_car_ckinfo = %@, item_parent_zone_rowid = %@, item_localsyncupstate = %d, item_local_diffs = %llu, item_notifs_rank = %lld, app_library_rowid = %@, item_min_supported_os_rowid = %@, item_user_visible = %d, item_stat_ckinfo = %@, item_state = %d, item_type = %d, item_mode = %d, item_birthtime = %lld, item_lastusedtime = %lld, item_favoriterank = %lld, item_parent_id = %@, item_filename = %@, item_hidden_ext = %d, item_finder_tags = %@, item_xattr_signature = %@, item_trash_put_back_path = %@, item_trash_put_back_parent_id = %@, item_alias_target = %@, item_creator = %@, item_processing_stamp = %@, item_staged_file_id = %@, item_staged_generation = %u, item_bouncedname = %@, item_scope = %d,item_local_change_count = %llu, item_old_version_identifier = %@, version_name = %@  WHERE rowid = %llu
create-subscribe-zone/
subscription/
sync/zone-purge
locate-record/
unreachable: Can't alloc ranks after fetching records
Could not locate record
unreachable: parent isn't a reference %@
v24@?0@"BRCItemID"8@"NSError"16
BRCLocateRecordOperation
stage
gc:%ld
com.apple.brc.stage
fvrgduslix
com.apple.brc.stage.backup-exclusion-queue
-[BRCStageRegistry makeDirectoryInStageGatherFileID:generationID:error:]
-[BRCStageRegistry makeSymlinkWithTarget:inStageGatherFileID:generationID:error:]
-[BRCStageRegistry makeNonLocalVersionSideFaultWithAdditionName:clientZone:statInfo:version:sharingOptions:error:]
-[BRCStageRegistry makeSideFaultInStageGatherFileID:generationID:documentID:properties:inAppLibrary:forCreation:error:]
-[BRCStageRegistry _flockToMakeLiveAtPath:error:]
-[BRCStageRegistry makeItemLive:fromStage:bySwappingWith:fileName:error:]
-[BRCStageRegistry moveFromStage:toPath:fileName:error:]
.Trash
com.apple.trash.put-back.path#PS
com.apple.trash.put-back.icloud-parent-id#PS
com.apple.favorite-rank.number#PS
com.apple.lastuseddate#PS
B8@?0
everyone
%llx
/%@/%@
ckpackage
-[BRCStageRegistry rememberStagedDownloadWithID:gatherFileID:generationID:documentID:appLibrary:error:]
-[BRCStageRegistry moveOldVersionFromPath:error:]
-[BRCStageRegistry moveToGraveyardFromPath:forItemID:error:]
graveyard
old versions stage
com.apple.bird.graveyard.size#N
i24@?0r*8^{stat=iSSQIIi{timespec=qq}{timespec=qq}{timespec=qq}{timespec=qq}qqiIIi[2q]}16
B24@?0@"NSString"8@"NSArray"16
SELECT 1 FROM client_uploads WHERE transfer_stage = %@
SELECT 1 FROM client_items WHERE item_staged_file_id = %lld
SELECT 1 FROM client_downloads WHERE transfer_stage = %@
i32@?0@"NSString"8@"NSString"16@"NSString"24
B16@?0@"BRCPrivateServerZone"8
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/fs/BRCStageRegistry.m
-[BRCStageRegistry _removeUnusedXattrBlobs]_block_invoke
SELECT EXISTS (SELECT 1 FROM client_items WHERE item_xattr_signature = %@ OR version_xattr_signature = %@ LIMIT 1)
SELECT EXISTS (SELECT 1 FROM server_items WHERE item_xattr_signature = %@ OR version_xattr_signature = %@ LIMIT 1)
-[BRCStageRegistry _garbageCollectSpace:]
com.apple.bird.stage.gc
unreachable: Asked to save xattr without url
-[BRCStageRegistry saveXattrAtURL:forSignature:error:]
unreachable: Asked to save xattr without signature or data
-[BRCStageRegistry saveXattrBlob:forSignature:error:]
unreachable: Asked for xattr without signature
-[BRCStageRegistry loadXattrBlobForSignature:error:]
_makeSideFault
.DocumentRevisions-V100/AllUIDs
.DocumentRevisions-V100/PerUID
versions
coordinated readers
  + %@
com.apple.bird.versions
Logged out - iCloud Drive is not configured
dl-version-%@
container
pkg_extensions.plist
pkg-extension-writer
v32@?0@"NSString"8@"NSNumber"16^B24
CFBundleTypeExtensions
CFBundleDocumentTypes
SharedPackageExtensions.app
Info.plist
com.apple.clouddocs-items
didDropCoreSpotlightIndex
dbID:%llu rank:%llu
<%@: %p, %lu indexed, %lu deleted>
DELETE FROM tombstones
INSERT INTO tombstones (file_object_id, file_object_id_type, notif_rank) VALUES (%lld, %d, %lld)
DELETE FROM tombstones WHERE notif_rank < %lld
SELECT file_object_id, file_object_id_type, notif_rank FROM tombstones    WHERE notif_rank >= %lld ORDER BY notif_rank ASC LIMIT %lld
v16@?0@"PQLResultSet"8
@"BRFileObjectID"20@?0q8c16
v24@?0@"NSArray<NSFileProviderItem>"8@"NSArray"16
recents-enumerator
recents-enumerator-tracker
v24@?0@"CKRecordID"8d16
<dl-thumbnail[%lld] %@_%@>
unreachable: thumbnail is not a CKAsset: %@
-[BRCDownloadThumbnail _stageWithSession:error:]
dl-thumbnail
thumbnails
downloading
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/sync/transfers/BRCDownloadOperations.m
-[BRCDownloadContent initWithDocument:stageID:]
brpackage-dlspec
<dl-content[%lld] %@_%@>
unreachable: Package inside %@ is corrupted in the cloud
Asking for asset index out of bounds %lu vs %lu in package: %@
-[BRCDownloadContent _prepareSecondStageWithSession:manifest:package:error:]
-[BRCDownloadContent _stageWithSession:manifest:package:xattrsPackage:error:]
unreachable: file content is not a CKAsset: %@
-[BRCDownloadContent _stageWithSession:error:]
unreachable: finder bookmark without content: %@
unreachable: pkg content is not a CKPackage: %@
unreachable: package manifest is not a CKAsset: %@
unreachable: xattrs package is not a CKAsset: %@
unreachable: unknown type for downloaded object %@
dl-content
-[BRCDownloadVersion initWithDocument:stageID:etag:isLoser:]
<dl-version[%lld] %@_%@>
unreachable: There should be a file content property in %@
-[BRCDownloadVersion _stageContentWithSession:error:]
unreachable: no fileURL for %@ in %@
-[BRCDownloadVersion _stageWithSession:creationInfo:error:]
dl-version
v24@?0@"GSAddition"8@"NSError"16
previous documents versions
INSERT INTO client_items ( rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier) VALUES ( %lld, %@, %@, %@, %ld, %@, %@, %d, %lld, %lld, %@, %@, %d, %@, %d, %d, %d, %lld, %lld, %lld, %@, %@, %d, %@, %@, %@, %@, %@, %@, %@, %@, %u, %@, %d, %llu, %@)
UPDATE client_items SET  item_id = %@, item_creator_id = %@, item_sharing_options = %ld, item_side_car_ckinfo = %@, item_parent_zone_rowid = %@, item_localsyncupstate = %d, item_local_diffs = %llu, item_notifs_rank = %lld, app_library_rowid = %@, item_min_supported_os_rowid = %@, item_user_visible = %d, item_stat_ckinfo = %@, item_state = %d, item_type = %d, item_mode = %d, item_birthtime = %lld, item_lastusedtime = %lld, item_favoriterank = %lld, item_parent_id = %@, item_filename = %@, item_hidden_ext = %d, item_finder_tags = %@, item_xattr_signature = %@, item_trash_put_back_path = %@, item_trash_put_back_parent_id = %@, item_alias_target = %@, item_creator = %@, item_processing_stamp = %@, item_staged_file_id = %@, item_staged_generation = %u, item_bouncedname = %@, item_scope = %d,item_local_change_count = %llu, item_old_version_identifier = %@  WHERE rowid = %llu
server truth structure validation (%s)
=================================
INSERT INTO items_checks    SELECT c.item_id, %lld      FROM items_checks AS p INNER JOIN server_items AS c ON (p.item_id = c.item_parent_id)     WHERE zone_rowid = %@ AND p.depth = %lld
SELECT item_id FROM server_items WHERE zone_rowid = %@ AND item_id NOT IN(SELECT item_id FROM items_checks)
SELECT c.item_id      FROM server_items AS c INNER JOIN server_items AS p ON (c.zone_rowid = p.zone_rowid AND c.item_parent_id = p.item_id)     WHERE c.zone_rowid = %@ AND c.item_state = 0       AND p.item_state = 1
SELECT c.item_id      FROM server_items AS c INNER JOIN server_items AS p ON (c.zone_rowid = p.zone_rowid AND c.item_parent_id = p.item_id)     WHERE c.zone_rowid = %@       AND p.item_type NOT IN (1, 2, 8, 5, 6, 7, 3)
SELECT c.item_id      FROM server_items AS c INNER JOIN server_items AS p ON (c.zone_rowid = p.zone_rowid AND c.item_parent_id = p.item_id)     WHERE c.zone_rowid = %@ AND c.item_rank >= p.item_rank       AND p.item_state = 1
is an item with a greater rank than a dead parent
server items checks (%s)
===================
UPDATE server_items SET item_state = 1, item_rank = NULL WHERE item_parent_id = %@ AND zone_rowid = %@ AND item_state = 0
UPDATE server_items SET item_state = 1 , item_parent_id = %@ WHERE zone_rowid = %@   AND item_rank IS NULL   AND NOT EXISTS (SELECT 1 FROM server_items as pi WHERE pi.item_id = server_items.item_parent_id AND pi.zone_rowid = server_items.zone_rowid LIMIT 1)   AND item_parent_id != %@
SELECT item_id   FROM server_items  WHERE zone_rowid = %@    AND item_state = 1    AND item_type = 0    AND item_rank IS NULL
UPDATE server_items SET item_favoriterank = NULL, item_lastusedtime = NULL, item_side_car_ckinfo = NULL, item_rank = NULL WHERE zone_rowid = %@ AND (item_sharing_options & 4) == 0
%@ %s %@ - %@ - %@ - %d
sharing/copy-web-auth-token
v24@?0@"NSString"8@"NSError"16
Sync-Up
client_sync_up
in_flight_diffs, zone_rowid
zone:%@
 in-flight{%@}
in_flight_diffs = NULL
UPDATE %@SET in_flight_diffs = %lldWHERE %@
SELECT in_flight_diffs FROM %@WHERE %@ AND throttle_state != 0
SELECT COUNT(*) FROM %@WHERE %@ AND throttle_state != 0
SELECT ci.rowid, ci.zone_rowid, ci.item_id, ci.item_creator_id, ci.item_sharing_options, ci.item_side_car_ckinfo, ci.item_parent_zone_rowid, ci.item_localsyncupstate, ci.item_local_diffs, ci.item_notifs_rank, ci.app_library_rowid, ci.item_min_supported_os_rowid, ci.item_user_visible, ci.item_stat_ckinfo, ci.item_state, ci.item_type, ci.item_mode, ci.item_birthtime, ci.item_lastusedtime, ci.item_favoriterank,ci.item_parent_id, ci.item_filename, ci.item_hidden_ext, ci.item_finder_tags, ci.item_xattr_signature, ci.item_trash_put_back_path, ci.item_trash_put_back_parent_id, ci.item_alias_target, ci.item_creator, ci.item_processing_stamp, ci.item_staged_file_id, ci.item_staged_generation, ci.item_bouncedname, ci.item_scope, ci.item_local_change_count, ci.item_old_version_identifier, ci.version_name, ci.version_ckinfo, ci.version_mtime, ci.version_size, ci.version_thumb_size, ci.version_thumb_signature, ci.version_content_signature, ci.version_xattr_signature, ci.version_edited_since_shared, ci.version_device, ci.version_conflict_loser_etags, ci.version_quarantine_info, ci.version_uploaded_assets, ci.version_upload_error, ci.version_old_zone_item_id, ci.version_old_zone_rowid, ci.version_local_change_count, ci.version_old_version_identifier, ci.desired_version, ci.item_live_conflict_loser_etags, ci.item_file_id, ci.item_generation, ci.version_block_sync_until_bundle_id, ci.version_block_sync_until_timestamp FROM client_items AS ci WHERE ci.item_localsyncupstate = 4 AND ci.item_localsyncupstate != 0 AND NOT EXISTS (SELECT 1 FROM client_sync_up AS su WHERE ci.rowid = su.throttle_id AND su.throttle_state != 0)
throttle_id, zone_rowid
Uploader
client_uploads
com.apple.bird.thumbnails
com.apple.bird.quota
com.apple.bird.quota.update-state
uploader
com.apple.bird.uploader
uploader-retry
availableQuota
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/fs/BRCFSUploader.m
-[BRCFSUploader _buildItemTooLargeErrorIfNeeded:syncContext:]
UPDATE client_uploads SET transfer_stage = %@, transfer_operation = %@ WHERE %@
SELECT zone_rowid FROM client_uploads WHERE %@ AND transfer_stage = %@
SELECT zone_rowid FROM client_uploads WHERE %@ AND transfer_operation = %@
SELECT transfer_operation IS NOT NULL FROM client_uploads WHERE throttle_id = %llu
transfer_operation, transfer_queue, upload_error, app_library_rowid, zone_rowid
in-quicklook
needs-thumbnail
pending-retry
queue:%@
upload:done/cancelled
uploading:%.1f%%
UPDATE client_uploads SET   throttle_state = 1, transfer_operation = %@ WHERE %@
UPDATE client_uploads SET  throttle_state = %d, transfer_queue = '_prepare', transfer_record = NULL, transfer_stage = NULL, transfer_operation = NULL WHERE throttle_id = %@
SELECT throttle_id, transfer_queue, transfer_operation, transfer_stage, app_library_rowid, throttle_state, zone_rowid   FROM client_uploads  WHERE %@ AND throttle_state != 0
SELECT throttle_id, transfer_queue, transfer_operation, transfer_stage, app_library_rowid, throttle_state, zone_rowid   FROM client_uploads  WHERE zone_rowid = %@ AND throttle_state != 0
UPDATE client_uploads SET throttle_state = 1 WHERE throttle_state = 30 AND zone_rowid = %@ AND throttle_state != 0
SELECT transfer_operation    FROM client_uploads  WHERE throttle_id = %lld AND throttle_state == 1
SELECT throttle_id, transfer_queue, transfer_operation, transfer_stage, app_library_rowid, throttle_state, zone_rowid   FROM client_uploads  WHERE %@
UPDATE client_uploads SET  throttle_state = call_block(%@, next_retry_stamp, app_library_rowid, zone_rowid), transfer_queue = %@ WHERE %@
UPDATE client_uploads    SET throttle_state = %d, transfer_operation = NULL  WHERE %@
app_library_rowid, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, upload_priority, upload_request_stamp , zone_rowid
%@, %@, %lld, %@, %@, %@, %lld, %lld, %@
zone_rowid = %@
UPDATE client_uploads    SET upload_priority = %lld, upload_request_stamp = %lld  WHERE throttle_id = %lld
UPDATE client_uploads SET transfer_queue = call_block(%@, throttle_id, app_library_rowid, next_retry_stamp, zone_rowid)     WHERE throttle_state = 1      AND transfer_queue = '_retry'      AND transfer_operation IS NULL      AND next_retry_stamp <= %lld
  SELECT MIN(next_retry_stamp)     FROM client_uploads    WHERE throttle_state = 1      AND transfer_queue = '_retry'      AND transfer_operation IS NULL
UPDATE client_uploads SET transfer_operation = NULL WHERE (transfer_operation >= '')
SELECT app_library_rowid, zone_rowid, transfer_queue   FROM client_uploads  WHERE throttle_state = 1 GROUP BY app_library_rowid, zone_rowid, transfer_queue
transfer_queue = '_prepare' AND transfer_operation IS NULL
throttle_id, app_library_rowid, zone_rowid
brpackage
ckpackage-xattrs
Failed to add item to package
@"NSError"8@?0
UPDATE client_uploads SET  transfer_queue = call_block(%@, next_retry_stamp, %@), transfer_record = %@, transfer_operation = NULL, transfer_stage = %@, transfer_size = %lld WHERE throttle_id = %lld
upload-%@-%@
-[BRCFSUploader _finishPackageUploadWithRecord:item:stageID:error:]
UPDATE client_uploads SET  transfer_operation = call_block(%@, next_retry_stamp), upload_error = %@ WHERE %@
  SELECT throttle_id, zone_rowid, transfer_size, transfer_record, next_retry_stamp, transfer_stage     FROM client_uploads    WHERE throttle_state = 1      AND transfer_queue = %@      AND transfer_operation IS NULL ORDER BY upload_priority DESC, upload_request_stamp DESC, transfer_size ASC
UPDATE client_uploads    SET transfer_queue = '_retry'  WHERE %@
v24@?0@"BRCUpload"8@"NSError"16
SELECT MIN(next_retry_stamp) FROM client_uploads   WHERE throttle_state = 1     AND transfer_queue = %@      AND transfer_operation IS NULL 
SELECT 1 FROM client_uploads  WHERE throttle_state = 32    AND zone_rowid IN (SELECT rowid FROM client_zones WHERE zone_owner = %@ AND zone_plist IS NOT NULL)  LIMIT 1
SELECT 1 FROM client_uploads WHERE throttle_state = 32 AND zone_rowid = %@ LIMIT 1
SELECT throttle_id, transfer_size   FROM client_uploads  WHERE throttle_state = 32    AND transfer_size < %lld
UPDATE client_items SET version_upload_error = NULL WHERE rowid = %lld
UPDATE client_uploads SET throttle_state = 1, upload_error = NULL WHERE throttle_id = %lld
lastQuotaFetchDate
v24@?0Q8@"NSError"16
Upload
SELECT ci.rowid, ci.zone_rowid, ci.item_id, ci.item_creator_id, ci.item_sharing_options, ci.item_side_car_ckinfo, ci.item_parent_zone_rowid, ci.item_localsyncupstate, ci.item_local_diffs, ci.item_notifs_rank, ci.app_library_rowid, ci.item_min_supported_os_rowid, ci.item_user_visible, ci.item_stat_ckinfo, ci.item_state, ci.item_type, ci.item_mode, ci.item_birthtime, ci.item_lastusedtime, ci.item_favoriterank,ci.item_parent_id, ci.item_filename, ci.item_hidden_ext, ci.item_finder_tags, ci.item_xattr_signature, ci.item_trash_put_back_path, ci.item_trash_put_back_parent_id, ci.item_alias_target, ci.item_creator, ci.item_processing_stamp, ci.item_staged_file_id, ci.item_staged_generation, ci.item_bouncedname, ci.item_scope, ci.item_local_change_count, ci.item_old_version_identifier, ci.version_name, ci.version_ckinfo, ci.version_mtime, ci.version_size, ci.version_thumb_size, ci.version_thumb_signature, ci.version_content_signature, ci.version_xattr_signature, ci.version_edited_since_shared, ci.version_device, ci.version_conflict_loser_etags, ci.version_quarantine_info, ci.version_uploaded_assets, ci.version_upload_error, ci.version_old_zone_item_id, ci.version_old_zone_rowid, ci.version_local_change_count, ci.version_old_version_identifier, ci.desired_version, ci.item_live_conflict_loser_etags, ci.item_file_id, ci.item_generation, ci.version_block_sync_until_bundle_id, ci.version_block_sync_until_timestamp FROM client_items AS ci WHERE ci.item_localsyncupstate = 3 AND ci.item_localsyncupstate != 0 AND NOT EXISTS (SELECT 1 FROM client_uploads AS up WHERE ci.rowid = up.throttle_id AND up.throttle_state != 0)
SELECT pcs_state FROM server_items WHERE item_id = %@   AND zone_rowid = %@ LIMIT 1
SELECT item_type, pcs_state FROM server_items WHERE item_id = %@ and zone_rowid = %@
SELECT 1 FROM server_items WHERE item_parent_id = %@   AND zone_rowid = %@   AND pcs_state NOT IN (2, 3)   AND item_state = 0 LIMIT 1
AND NOT (item_type = 3 AND item_alias_target like '%%:\_%%' ESCAPE '\')
SELECT item_id, item_type, item_stat_ckinfo, version_ckinfo, pcs_state, item_alias_target FROM server_items WHERE item_parent_id = %@   AND zone_rowid = %@   AND pcs_state NOT IN (2, 3)   AND item_state = 0 %@
SELECT item_stat_ckinfo, version_ckinfo FROM client_items WHERE item_id = %@  AND zone_rowid = %@  AND (item_local_diffs & %lld) != 0
SELECT pcs_state, item_stat_ckinfo FROM server_items WHERE item_id = %@ AND zone_rowid = %@
pcs-chain/
unreachable: Can't PCS chain to documents, trash, or root
br_pcsChainingUpdate
UPDATE server_items SET item_stat_ckinfo = %@, pcs_state = 4 WHERE item_id = %@ AND zone_rowid = %@ AND item_stat_ckinfo = %@
UPDATE server_items SET pcs_state = 3 WHERE item_id = %@ AND zone_rowid = %@ AND pcs_state != 2
v24@?0@"BRCPCSChainBatchInfo"8@"NSError"16
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/fpfs/item-categories/BRCDocumentItem+FPFSAdditions.m
-[BRCDocumentItem(BRCFPFSAdditions) _updatePackageItemsIfNecessaryWithImportObject:error:]
account-queue
@"BRCAccountHandler"8@?0
data separated volume should have been deleted
-[BRCAccountsManager destroySessionWithACAccountID:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/account/BRCAccountsManager.m
-[BRFieldPkgLocalItem writeTo:]
BRFieldPkgLocalItem.m
self->_item != nil
existing
revived
[%@]
hasCompletedPCSMigration
migrate-pcs
v32@?0@"CKRecordZoneID"8@"CKRecordZone"16^B24
not needed
v24@?0@"CKRecordZone"8@"NSError"16
v32@?0@"NSArray"8@"CKRecordZone"16@"NSError"24
com.apple.CloudDocsDaemon.container-metadata-extractor
com.apple.bird.watcher-queue
com.apple.bird.client-truth-workloop
com.apple.bird.server-truth-workloop
com.apple.bird.read-only-workloop
session{account:%@}
Description
Error
Unable to open file at path '%@' %{errno}d
-[BRCAccountSession openWithError:pushWorkloop:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/account/BRCAccountSession.m
Unable to lock file at path '%@' %{errno}d
client-db
com.apple.bird.main-scheduler
autoResumeSyncTimer
version_block_sync_until_timestamp
v16@?0@"BRCAccountSession"8
com.apple.bird.reset
com.apple.bird.pending-disk-scheduler
com.apple.bird.disk-space-observer
v24@?0@"CKRecordID"8@"NSError"16
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE item_parent_id = %@ AND zone_rowid = %@ AND item_filename != '.Trash' AND pcs_state NOT IN (2, 3) LIMIT 1
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE item_localsyncupstate = 7
SELECT ci.rowid, ci.zone_rowid, ci.item_id, ci.item_creator_id, ci.item_sharing_options, ci.item_side_car_ckinfo, ci.item_parent_zone_rowid, ci.item_localsyncupstate, ci.item_local_diffs, ci.item_notifs_rank, ci.app_library_rowid, ci.item_min_supported_os_rowid, ci.item_user_visible, ci.item_stat_ckinfo, ci.item_state, ci.item_type, ci.item_mode, ci.item_birthtime, ci.item_lastusedtime, ci.item_favoriterank,ci.item_parent_id, ci.item_filename, ci.item_hidden_ext, ci.item_finder_tags, ci.item_xattr_signature, ci.item_trash_put_back_path, ci.item_trash_put_back_parent_id, ci.item_alias_target, ci.item_creator, ci.item_processing_stamp, ci.item_staged_file_id, ci.item_staged_generation, ci.item_bouncedname, ci.item_scope, ci.item_local_change_count, ci.item_old_version_identifier, ci.version_name, ci.version_ckinfo, ci.version_mtime, ci.version_size, ci.version_thumb_size, ci.version_thumb_signature, ci.version_content_signature, ci.version_xattr_signature, ci.version_edited_since_shared, ci.version_device, ci.version_conflict_loser_etags, ci.version_quarantine_info, ci.version_uploaded_assets, ci.version_upload_error, ci.version_old_zone_item_id, ci.version_old_zone_rowid, ci.version_local_change_count, ci.version_old_version_identifier, ci.desired_version, ci.item_live_conflict_loser_etags, ci.item_file_id, ci.item_generation, ci.version_block_sync_until_bundle_id, ci.version_block_sync_until_timestamp FROM client_items AS ci WHERE ci.item_localsyncupstate = 4 AND item_min_supported_os_rowid IS NULL AND NOT EXISTS (SELECT 1 FROM client_sync_up AS su WHERE su.throttle_id = ci.rowid AND su.throttle_state != 0)
SELECT ci.rowid, ci.zone_rowid, ci.item_id, ci.item_creator_id, ci.item_sharing_options, ci.item_side_car_ckinfo, ci.item_parent_zone_rowid, ci.item_localsyncupstate, ci.item_local_diffs, ci.item_notifs_rank, ci.app_library_rowid, ci.item_min_supported_os_rowid, ci.item_user_visible, ci.item_stat_ckinfo, ci.item_state, ci.item_type, ci.item_mode, ci.item_birthtime, ci.item_lastusedtime, ci.item_favoriterank,ci.item_parent_id, ci.item_filename, ci.item_hidden_ext, ci.item_finder_tags, ci.item_xattr_signature, ci.item_trash_put_back_path, ci.item_trash_put_back_parent_id, ci.item_alias_target, ci.item_creator, ci.item_processing_stamp, ci.item_staged_file_id, ci.item_staged_generation, ci.item_bouncedname, ci.item_scope, ci.item_local_change_count, ci.item_old_version_identifier, ci.version_name, ci.version_ckinfo, ci.version_mtime, ci.version_size, ci.version_thumb_size, ci.version_thumb_signature, ci.version_content_signature, ci.version_xattr_signature, ci.version_edited_since_shared, ci.version_device, ci.version_conflict_loser_etags, ci.version_quarantine_info, ci.version_uploaded_assets, ci.version_upload_error, ci.version_old_zone_item_id, ci.version_old_zone_rowid, ci.version_local_change_count, ci.version_old_version_identifier, ci.desired_version, ci.item_live_conflict_loser_etags, ci.item_file_id, ci.item_generation, ci.version_block_sync_until_bundle_id, ci.version_block_sync_until_timestamp FROM client_items AS ci LEFT JOIN client_sync_up AS su ON su.throttle_id = ci.rowid AND su.zone_rowid = ci.zone_rowid LEFT JOIN client_uploads AS cu ON cu.throttle_id = ci.rowid AND cu.zone_rowid = ci.zone_rowid WHERE ci.item_localsyncupstate = 3 AND ci.item_type IN (1, 6) AND (IFNULL(cu.throttle_state, 0) = 0 OR (cu.throttle_state = 31 AND IFNULL(su.throttle_state, 0) = 0))
SELECT throttle_id FROM client_sync_up WHERE zone_rowid = %@ AND throttle_state != 0
zone close
.localized
com.apple.clouddocs.app-uploaded
Not removing account data on an account with the wrong persona %@ expecting %@
-[BRCAccountSession _validatePersona]
com.apple.bird.destroy-account-data
Zone names mistmatch
Zone names or owners mismatch
v24@?0@"NSString"8@"BRCALRowID"16
currentUserRecordID
fetch-user-recordID
apps-list-did-change
v32@?0@"NSDictionary"8@"NSDictionary"16@"NSError"24
v24@?0@"NSString"8^B16
v32@?0@"NSString"8@"NSSet"16^B24
%@-%@
enabling
disabling
download-all-tracker
SELECT SUM(li.version_size) FROM client_items as li WHERE li.item_type = 1   AND li.item_state = 0
B16@?0@"BRCLocalItem"8
SELECT MAX(ciconia_version) FROM ciconia_history WHERE last_error IS NULL
Mobile Docs
-[BRCAccountSession enableSyncforSyncedFolderType:isInitialCreation:error:]
%ld xpc clients:
%ld misc operations:
full sync:
reset-queue
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE item_scope = 3 AND item_localsyncupstate = 5
notSignedIn
driveDisabled
appMissing
profileDisabled
redirectReason
:nooverride
sharing/accept-flow
accept-flow-next-step
com.apple.clouddocs.accept-shared-url
step:
folderShare-
iWorkShare-
documentShare-
can't fast forward to download step (currentIndex: %lu, downloadIndex: %lu, stepCount: %lu)
can't fast forward to download step from current possition (currentIndex: %lu)
v24@?0@"NSURL"8@"NSError"16
v24@?0B8B12@"NSError"16
target app %@ is missing entitlement %@
shareURL
unreachable: No operation error and no share id
v24@?0@"CKShareMetadata"8@"NSError"16
Share %@ can not be accepted right now.
unreachable: item is in an unknown state: %@:
unreachable: document doesn't exists anymore
unreachable: item isn't a document or directory
Can't get bookmark string at %@
v24@?0^{__CFString=}8^{__CFError=}16
com.apple.DocumentsApp
shareddocuments
Don't know how to open shared item at %@
unreachable: couldn't save to server truth when creating server fault
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/sharing/BRCSharingAcceptFlowOperation.m
-[BRCSharingAcceptFlowOperation _locateSharedItemOnDisk]_block_invoke
_liveFileURL
prefs:root=APPLE_ACCOUNT&path=ICLOUD_SERVICE/CKDATABASESERVICE
itms-apps://?bundleIdentifier=%@
https
&%@=%@
%@=%@
transfer-queue
records-left:%ld progress:%.1f%% size:%@
transferring
 (cancelled)
unreachable: Missing transfer error for record %@
recordNames
partial
broken
problems
pendingRequestID
needsSync
dead parent
missing root
live children
missing content
cant save (missing structure?)
cant save (missing parent)
pcs decryption
upload stuck
download stuck
sync up stuck
sync down stuck
apply stuck
simulated (broken)
simulated (partial)
item parented to a document
package with corrupt indices
share without root record
root record missing shareID but share exists
zone resetted more than %lu times in %f seconds
problem{msg:%@,needs-sync:%@,zone-state:%@,pending-request:%@, records:%@}
ckinfo
zone-health{etag:%@,state:%@}
i20@?0i8@"NSString"12
/.vol/%u/%lld
BRCRemoveFolder
BRCSetFakeQuarantineInfo
BRCGetXattrValue
com.apple.LaunchServices.OpenWith
com.apple.ResourceFork
com.apple.last-used.time#PS
com.apple.metadata:_kMDItemFinderLabel
com.apple.quarantine
com.apple.cs.CodeSignature
com.apple.cs.CodeDirectory
com.apple.cs.CodeRequirements
com.apple.cs.CodeRequirements-1
com.apple.metadata:kMDItemIsShared
com.apple.metadata:kMDItemSharedItemCurrentUserRole
com.apple.metadata:kMDItemOwnerName
-[BRCLazyXattrsCollection initWithFD:sizeLimit:syncable:error:]
-[BRCLazyXattrsCollection getXattrValue:error:]
file-write-data
file-read-data
com.apple.private.bird.fake-qtn
B16@?0r*8
i24@?0r^v8r^v16
unlink
com.apple.bird.file-unlinker
versionIdentifier
oldVersionIdentifier
-[BRFieldStructureSignature writeTo:]
BRFieldStructureSignature.m
nil != self->_versionIdentifier
-[BRCTreeEnumerator enumerateBelow:appLibrary:recursively:handler:]
BRCTreeEnumerator.m
parentID != nil
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE rowid > %lld   AND item_parent_id = %@  AND app_library_rowid = %@  AND NOT indexset_contains(%p, rowid) ORDER BY rowid    LIMIT %ld
upload-tracker
%@ - zones still uploading: %@
-[PQLConnection(BRCAdditions) registerFunction:nArgs:handler:error:]
com.apple.Pages
com.apple.Keynote
com.apple.Numbers
pages-tef
key-tef
numbers-tef
-[BRCStageRegistry(FPFSAdditions) moveFromURLToLiveStage:fileObjectID:error:]
<%@ id:%@ hr:%s xattr:%@ rtf:%@ bs:%@>
q24@?0@"BRCPendingChangesStream"8@"BRCPendingChangesStream"16
change-stream/%@
list-dir/%@/%@%@
DROP TABLE IF EXISTS fetch_state
DROP TABLE IF EXISTS list_state
DROP TABLE IF EXISTS record_changes
DROP INDEX IF EXISTS "record_changes/record_type"
CREATE TABLE fetch_state (server_token blob, client_token integer)
CREATE TABLE list_state (cont_token blob, completed integer not null)
CREATE TABLE record_changes (record_id text primary key, record_type integer not null, record blob)
CREATE INDEX "record_changes/record_type" ON record_changes (record_type)
INSERT INTO fetch_state (server_token, client_token) VALUES (%@, NULL)
INSERT INTO list_state (cont_token, completed) VALUES (NULL, 0)
CREATE TABLE records_needing_subresources (record_id text PRIMARY KEY, record_type integer not null, record blob, xattr_sig BLOB, record_id_needing_fetch text, record_id_blocking_save text)
CREATE INDEX "records_needing_subresources/xattr_sig" ON records_needing_subresources(xattr_sig) WHERE xattr_sig IS NOT NULL
CREATE INDEX "records_needing_subresources/record_id_needing_fetch" ON records_needing_subresources(record_id_needing_fetch) WHERE record_id_needing_fetch IS NOT NULL
CREATE INDEX "records_needing_subresources/record_id_blocking_save" ON records_needing_subresources(record_id_blocking_save) WHERE record_id_blocking_save IS NOT NULL
CREATE TRIGGER "records_needing_subresources/resources_finished" AFTER UPDATE ON records_needing_subresources BEGIN INSERT INTO record_changes (record_id, record_type, record)  SELECT record_id, record_type, record  FROM records_needing_subresources WHERE xattr_sig IS NULL AND record_id_needing_fetch IS NULL AND record_id_blocking_save IS NULL AND record IS NOT NULL AND record_id = new.record_id; DELETE FROM records_needing_subresources WHERE xattr_sig IS NULL AND record_id_needing_fetch IS NULL AND record_id_blocking_save IS NULL AND record IS NOT NULL AND record_id = new.record_id; END
CREATE TRIGGER "records_needing_subresources/unblock_save" AFTER INSERT ON record_changes BEGIN UPDATE records_needing_subresources SET record_id_blocking_save = NULL WHERE record_id_blocking_save = new.record_id AND new.record IS NOT NULL; END
DB Corruption Handler of BRCPendingChangesStream
DB Error Handler of BRCPendingChangesStream
Auto Rollback Handler of BRCPendingChangesStream
db.db
unreachable: Trying to fetch token state without a db
SELECT server_token, client_token FROM fetch_state
unreachable: There should always be one entry
unreachable: Trying to fetch query cursor without a db
SELECT cont_token, completed FROM list_state
SELECT server_token FROM fetch_state
unreachable: Trying to enumerate records without a db
SELECT record_id, record FROM record_changes WHERE record_type = %d
INSERT OR REPLACE INTO record_changes (record_id, record_type, record) VALUES (%@, %d, %@)
DELETE FROM records_needing_subresources WHERE record_id = %@
UPDATE fetch_state SET server_token = %@, client_token = %lld
UPDATE list_state SET cont_token = %@, completed = %d
DELETE FROM record_changes WHERE 1
DELETE FROM records_needing_subresources WHERE record_id = %@ AND record_id_needing_fetch = record_id
UPDATE records_needing_subresources SET record_id_blocking_save = NULL WHERE record_id_blocking_save = %@
UPDATE records_needing_subresources AS pr   SET record_id_needing_fetch = record_id_blocking_save, record_id_blocking_save = NULL WHERE record_id_blocking_save IS NOT NULL AND NOT EXISTS (SELECT 1 FROM records_needing_subresources AS sr WHERE pr.record_id_blocking_save = sr.record_id LIMIT 1)
SELECT record, xattr_sig FROM records_needing_subresources WHERE xattr_sig IS NOT NULL GROUP BY xattr_sig
SELECT record_id_needing_fetch FROM records_needing_subresources WHERE record_id_needing_fetch IS NOT NULL GROUP BY record_id_needing_fetch
SELECT 1 FROM record_changes WHERE record_id = %@ LIMIT 1
SELECT 1 FROM records_needing_subresources WHERE record_id = %@ LIMIT 1
SELECT 1 FROM records_needing_subresources WHERE record_id_needing_fetch IS NOT NULL LIMIT 1
SELECT 1 FROM records_needing_subresources WHERE xattr_sig IS NOT NULL LIMIT 1
SELECT 1 FROM records_needing_subresources LIMIT 1
SELECT 1 FROM record_changes WHERE record IS NULL LIMIT 1
DELETE FROM record_changes WHERE record_id = %@
UPDATE records_needing_subresources SET record_id_needing_fetch = NULL WHERE record_id_needing_fetch = %@
INSERT OR REPLACE INTO records_needing_subresources (record_id, record_type, record, xattr_sig, record_id_needing_fetch, record_id_blocking_save) VALUES (%@, %ld, %@, %@, %@, %@)
UPDATE records_needing_subresources SET xattr_sig = NULL WHERE xattr_sig = %@
DELETE FROM records_needing_subresources WHERE record_id = %@ AND record IS NULL
serializedNameComponents
Couldn't get public sharing key
unreachable: no records and no error
unreachable: no error and no sharing key
unreachable: no public sharing identity. avoiding breaking iwork shares
unreachable: no routing key on share identity prepared record
unreachable: sharing identity isn't encrypted data
unreachable: base token isn't a string
unreachable: no base token %@ or sharing identity %@ and no error
unreachable: not a directory nor a document
sharing/save-share
 WITH RECURSIVE item_parents (item_id, item_sharing_options, item_parent_id) AS (          SELECT item_id, item_sharing_options, item_parent_id FROM server_items           WHERE item_id = %@ AND zone_rowid = %@       UNION ALL          SELECT li.item_id, li.item_sharing_options, li.item_parent_id FROM server_items AS li     INNER JOIN item_parents AS p WHERE li.zone_rowid = %@ AND p.item_parent_id = li.item_id          LIMIT %u )        SELECT item_id FROM item_parents WHERE (item_sharing_options & %lu) == 4 AND item_id != %@ 
unreachable: no share record
unreachable: directory %@ isn't pcs chained
unreachable: couldn't get base record
 and %@
unreachable: got an unexpected number of shares saved
sharing/destroy-share
unreachable: got an unexpected number of shares deleted
sharing/lookup-participants
v16@?0@"CKShareParticipant"8
Unexpected number of share participants
sharing/modifyAccess
v40@?0@"CKRecordID"8@"NSData"16@"NSString"24@"NSError"32
unreachable: no dict and no error
granting
revoking
Granted
Revoked
accessToken
referenceIdentifier
sharing/copyParticipantToken
unreachable: No base token so the share token we would return would be invalid for iwork
v32@?0@"CKRecordID"8@"NSString"16@"NSError"24
unreachable: no error and no participantKey
participantKey
FetchParticipantDocumentToken
unreachable: no error and no participantDocumentToken
baseToken
shareID
sharing/prepare-folder-pcs
serverItem
sharing/copy-shareURL
unreachable: Couldn't get a share URL
unreachable: Couldn't get a share URL for %@
sharing/copy-shortToken
unreachable: No short token found on record
sharing/clean-subitems
zoneRowID
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/sharing/BRCSharingSaveShareOperation.m
-[BRCSharingProcessFolderSubitemsOperation _completeAfterProcessingClientTruthIfNecessaryWithError:]_block_invoke
WITH RECURSIVE item_parents (item_filename, item_parent_id) AS (     SELECT item_filename, item_parent_id FROM server_items      WHERE zone_rowid = %@ AND item_id = %@  UNION ALL     SELECT si.item_filename, si.item_parent_id FROM server_items AS si INNER JOIN item_parents AS p      WHERE si.item_id = p.item_parent_id        AND si.zone_rowid = %@) SELECT item_filename FROM item_parents
SELECT item_alias_target FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT item_filename FROM server_items WHERE item_id = %@ AND zone_rowid = %@
WITH RECURSIVE item_children_needing_fetching (item_id, item_type, item_sharing_options, shared_alias_count, shared_children_count) AS (     SELECT item_id, item_type, item_sharing_options, shared_alias_count, shared_children_count FROM server_items      WHERE zone_rowid = %@ AND item_id = %@ AND (IFNULL(shared_children_count + shared_alias_count, 1) > 0)  UNION ALL     SELECT ip.item_id, ip.item_type, ip.item_sharing_options, ip.shared_alias_count, ip.shared_children_count FROM server_items AS ip INNER JOIN item_children_needing_fetching AS p       WHERE ip.item_parent_id = p.item_id        AND ip.zone_rowid = %@        AND ip.item_type IN (0, 9, 10, 1, 2, 8, 3)        AND ((IFNULL(ip.shared_children_count + ip.shared_alias_count, 1) > 0)            OR (ip.item_sharing_options & 4)            OR ip.item_type = 3)) SELECT item_id, item_type, item_sharing_options FROM item_children_needing_fetching WHERE item_type = 3 OR (item_sharing_options & 4)       OR (item_type IN (9, 10) AND (IFNULL(shared_children_count + shared_alias_count, 1) > 0))
SELECT item_type, item_stat_ckinfo, version_ckinfo from %@ WHERE item_id = %@ AND zone_rowid = %@
full
empty
v32@?0@"BRCItemGlobalID"8Q16^B24
identifier
magnitude_float
magnitude_double
magnitude_int
magnitude_bool
magnitude_long
magnitude
investigation
PBUNSET
Server
ServerTruth|ClientTruth
ServerTruth|ClientTruth|UnlinkData
ServerTruth|ClientTruth|UnlinkData|PurgeZone
CloudDocsServerExtension
BRErrorNeedsReset
CKErrorChangeTokenExpired
CKErrorUserDeletedZone
SqliteExtendedCode
Sync is restricted for this client
<%@:%p(%@:%ld) - %@>
too many registered source
-[BRCFairScheduler addSource:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/foundation/BRCFairScheduler.m
<%@:%p %@ on:%s>
(no-queue)
sharing/iWork-publishing
unreachable: No sharing info and no error
wrapperOperation
containerMetadataSync
%@:%@ %@:%lld %@:%@
serverChangeToken
lastSyncDate
isContainerMetadataSyncIdle
isSharedDBSyncIdle
ckGroup
containerMetadataHasCaughtUp
zoneHealthSync
zoneHealthSyncIdle
zone-health-state{last-sync:%@, needs-syncdown:%@, requestID:%lld, changeToken:%@}
sideCarSync
sideCarSyncIdle
side-car-state{last-sync:%@, needs-sync:%@, requestID:%lld, changeToken:%@}
directory-enumerator/%@
disabled-logged-out
disabled-entitlement
disabled-MDM
disabled TCC
user-interactive
user-initiated
utility
unspecified
xpc-client-workloop
XPC Client task tracker
xpc-client-queue-%d
 (Logged out)
 o %@
misc-operations
%@ entitlement required
%s privilege required
Not entitled to access container
Not entitled to create container
Not a container proxy
Not entitled to access: %@
file-read-metadata
can't %s app library for %@
create
load
-[BRCXPCClient _setupAppLibrary:error:]_block_invoke
<token-getter>
-[BRCXPCTokenClient prepareFileProvidersWithReply:]
-[BRCXPCTokenClient currentAccountCopyTokenWithBundleID:version:reply:]
-[BRCXPCTokenClient getPrimaryiCloudAccountStatus:]
-[BRCXPCTokenClient fetchContainerPathForCurrentPersonaWithReply:]
-[BRCXPCTokenClient fetchGroupContainerPathForCurrentPersonaWithReply:]
-[BRCXPCRegularIPCsClient checkinAskClientIfUsingUbiquity:]
-[BRCXPCRegularIPCsClient getContainerURLForID:recreateDocumentsIfNeeded:reply:]
containerID
-[BRCXPCRegularIPCsClient presyncContainerWithID:reply:]
v40@?0@"NSURL"8@"NSData"16@"NSString"24@"NSError"32
-[BRCXPCRegularIPCsClient getContainerURLForID:forProcess:reply:]
-[BRCXPCRegularIPCsClient updateContainerMetadataForID:]
-[BRCXPCRegularIPCsClient deleteAllContentsOfContainerID:onClient:onServer:wait:reply:]
ipc-%@
-[BRCXPCRegularIPCsClient registerInitialSyncBarrierForID:reply:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/framework-helpers/BRCXPCClient.m
-[BRCXPCRegularIPCsClient getQueryItemForURL:reply:]
-[BRCXPCRegularIPCsClient updateItemFromURL:reply:]
-[BRCXPCRegularIPCsClient startOperation:toDownloadItemAtURL:readingOptions:wantsCurrentVersion:reply:]
v24@?0@"BRCAccountSession"8@"NSError"16
-[BRCXPCRegularIPCsClient evictItemAtURL:options:reply:]
-[BRCXPCRegularIPCsClient thumbnailChangedForItemAtURL:reply:]
-[BRCXPCRegularIPCsClient getItemUpdateSenderWithReceiver:reply:]
v16@?0@"BRCNotificationPipe<BRItemNotificationSending><NSXPCProxyCreating>"8
-[BRCXPCRegularIPCsClient queryPathsForPersona:reply:]
-[BRCXPCRegularIPCsClient queryLoggedInAccountDescriptorsWithReply:]
-[BRCXPCRegularIPCsClient getTotalApplicationDocumentUsageWithReply:]
Total Size
Document Count
Applications
Localized Name
Documents URL
Icons
-[BRCXPCRegularIPCsClient getApplicationDocumentUsageInfoForBundleID:withReply:]
-[BRCXPCRegularIPCsClient hasOptimizeStorageWithReply:]
-[BRCXPCRegularIPCsClient setStorageOpimizationEnabled:reply:]
-[BRCXPCRegularIPCsClient evictOldDocumentsWithReply:]
-[BRCXPCRegularIPCsClient getContainersByID:]
-[BRCXPCRegularIPCsClient getContainerForMangledID:personaID:reply:]
-[BRCXPCRegularIPCsClient resolveConflictWithName:atURL:reply:]
-[BRCXPCRegularIPCsClient didReceiveHandoffRequestForBundleID:reply:]
account
-[BRCXPCRegularIPCsClient _loggedInUserPropertyValuesForKeys:error:]
-[BRCXPCRegularIPCsClient getLoggedInUserPropertyValuesForKeys:reply:]
isSharingPrivateInterfaceEntitled
-[BRCXPCRegularIPCsClient setupInstanceWithDict:reply:]
-[BRCXPCRegularIPCsClient resetBudgets:reply:]
global
-[BRCXPCRegularIPCsClient performSelfCheck:reply:]
self check failed: broken invariant
-[BRCXPCRegularIPCsClient printStatus:containerID:reply:]
-[BRCXPCRegularIPCsClient dumpDatabaseTo:containerID:personaID:includeAllItems:reply:]
-[BRCXPCRegularIPCsClient dumpCoordinationInfoTo:reply:]
-[BRCXPCRegularIPCsClient _gatherInformationForPath:session:reply:]
-[BRCXPCRegularIPCsClient gatherInformationForPath:reply:]
-[BRCXPCRegularIPCsClient simulateHealthIssueWithContainer:status:reply:]
clientInfo
newStatus
-[BRCXPCRegularIPCsClient healthStatusStringForContainer:reply:]
-[BRCXPCRegularIPCsClient zoneNameForContainer:reply:]
-[BRCXPCRegularIPCsClient forceSyncZoneHealthWithBarrierWithTimeout:reply:]
zone-health sync timed-out
-[BRCXPCRegularIPCsClient forceSyncWithBarrierContainerID:timeout:reply:]
sync-down timed out: %@
-[BRCXPCRegularIPCsClient refreshSharingStateForItemIdentifier:reply:]
itemIdentifier
rootURL
-[BRCXPCRegularIPCsClient forceSyncContainerID:reply:]
-[BRCXPCRegularIPCsClient iWorkForceSyncContainerID:ownedByMe:reply:]
-[BRCXPCRegularIPCsClient waitForFileSystemChangeProcessingWithReply:]
-[BRCXPCRegularIPCsClient createContainerWithID:ownerName:reply:]
-[BRCXPCRegularIPCsClient computePurgeableSpaceForAllUrgenciesWithReply:]
v32@?0@"NSDictionary"8@"NSNumber"16@"NSError"24
-[BRCXPCRegularIPCsClient purgeAmount:withUrgency:reply:]
-[BRCXPCRegularIPCsClient reclaimAmount:withUrgency:reply:]
-[BRCXPCRegularIPCsClient launchItemCountMismatchChecksAtURL:reply:]
-[BRCXPCRegularIPCsClient launchSyncConsistencyChecksWithReply:]
-[BRCXPCRegularIPCsClient pauseSyncConsistencyWithReply:]
-[BRCXPCRegularIPCsClient resumeSyncConsistencyWithReply:]
-[BRCXPCRegularIPCsClient cancelTreeConsistencyCheckWithReply:]
-[BRCXPCRegularIPCsClient createAccountWithACAccountID:dsid:reply:]
accountID
-[BRCXPCRegularIPCsClient logoutAccountWithACAccountID:reply:]
was successful
Failed to destroy account
-[BRCXPCRegularIPCsClient updateAccountDisplayName:reply:]
-[BRCXPCRegularIPCsClient invalidateAccountCacheWithReply:]
-[BRCXPCRegularIPCsClient jetsamCloudDocsAppsWithReply:]
-[BRCXPCRegularIPCsClient getContainersNeedingUpload:]
-[BRCXPCRegularIPCsClient setMigrationStatus:forDSID:shouldUpdateAccount:reply:]
-[BRCXPCRegularIPCsClient getMigrationStatusForPrimaryiCloudAccount:]
-[BRCXPCRegularIPCsClient getSyncState:reply:]
com.apple.fileprovider.acl-read
(3, 4)
SELECT DISTINCT item_localsyncupstate FROM client_items WHERE item_localsyncupstate IN %@       AND NOT item_id_is_documents(item_id)       AND item_scope = 2
-[BRCXPCRegularIPCsClient getBookmarkDataForURL:onlyAllowItemKnowByServer:allowAccessByBundleID:reply:]
-[BRCXPCRegularIPCsClient resolveFileObjectIDsToContentRecordIDs:reply:]
-[BRCXPCRegularIPCsClient resolveFileObjectIDToURL:reply:]
-[BRCXPCRegularIPCsClient resolveFileObjectIDToURL:reply:]_block_invoke
-[BRCXPCRegularIPCsClient resolveBookmarkDataToURL:reply:]
does not have
Not Entitled
-[BRCXPCRegularIPCsClient resolveBookmarkDataToURL:reply:]_block_invoke
-[BRCXPCRegularIPCsClient getBackReferencingContainerIDsForURLs:reply:]
-[BRCXPCRegularIPCsClient getApplicationStatus:]
-[BRCXPCRegularIPCsClient getApplicationStatusForProcess:reply:]
-[BRCXPCRegularIPCsClient getLastSyncDateWithReply:]
-[BRCXPCRegularIPCsClient getLocalizedLastSyncWithReply:]
CLOUD_DRIVE_LAST_UPDATED_JUST_NOW
CLOUD_DRIVE_LAST_UPDATED_N_MINUTES_AGO
CLOUD_DRIVE_LAST_UPDATED_AT_TIME_FORMAT
CLOUD_DRIVE_LAST_UPDATED_YESTERDAY
EEEE
CLOUD_DRIVE_LAST_UPDATED_WEEKDAY_FORMAT
CLOUD_DRIVE_LAST_UPDATED_ON_DATE_FORMAT
-[BRCXPCRegularIPCsClient getContainerStatusWithID:reply:]
-[BRCXPCRegularIPCsClient getContainerLastServerUpdateWithID:reply:]
-[BRCXPCRegularIPCsClient getIsContainerWithIDOverQuota:reply:]
-[BRCXPCRegularIPCsClient currentNotifRankWithReply:]
-[BRCXPCRegularIPCsClient enumerateItemsInFolder:sortOrder:offset:limit:completion:]
v24@?0@"BRQueryItem"8@"BRCDirectoryItem"16
-[BRCXPCRegularIPCsClient enumerateAllFoldersWithSortOrder:offset:limit:completion:]
B16@?0@"BRQueryItem"8
-[BRCXPCRegularIPCsClient enumerateWorkingSetChangesFromChangeToken:limit:completion:]
v40@?0@"NSArray<NSFileProviderItem>"8@"NSArray"16@"NSData"24@"NSError"32
v40@?0@"CKRecordID"8@"NSString"16@"CKAsset"24@"NSError"32
-[BRCXPCRegularIPCsClient forceConflictForURL:bookmarkData:forcedEtag:reply:]
-[BRCXPCRegularIPCsClient setiWorkPublishingInfoAtURL:publish:readonly:reply:]
-[BRCXPCRegularIPCsClient getiWorkPublishingInfoAtURL:reply:]
-[BRCXPCRegularIPCsClient getiWorkPublishingBadgingStatusAtURL:reply:]
-[BRCXPCRegularIPCsClient getiWorkNeedsShareMigrateAtURL:reply:]
-[BRCXPCRegularIPCsClient startOperation:toCopySharingInfoWithItemID:reply:]
isSharingProxyEntitled
-[BRCXPCRegularIPCsClient startOperation:toCopySharingWebAuthTokenForContainerID:reply:]
-[BRCXPCRegularIPCsClient startOperation:toCopyDocumentURLForRecordID:syncIfNeeded:reply:]
-[BRCXPCRegularIPCsClient startOperation:toCopyDocumentURLForRecordID:syncIfNeeded:reply:]_block_invoke
-[BRCXPCRegularIPCsClient startOperation:toCopyAvailableQuotaWithReply:]
canFetchUserQuota
-[BRCXPCRegularIPCsClient startOperation:toEvictItemAtURL:reply:]
-[BRCXPCRegularIPCsClient startOperation:toUploadAllFilesInContainer:reply:]
-[BRCXPCRegularIPCsClient copyCurrentUserIdentifierWithReply:]
-[BRCXPCRegularIPCsClient copyCurrentUserNameAndEmailWithReply:]
-[BRCXPCRegularIPCsClient copyCurrentUserNameAndDisplayHandleWithReply:]
-[BRCXPCRegularIPCsClient copyCollaborationIdentifierForItemAtURL:reply:]
-[BRCXPCRegularIPCsClient copyCollaborationIdentifierForFileObjectID:reply:]
-[BRCXPCRegularIPCsClient createSharingInfoForItemID:reply:]
-[BRCXPCRegularIPCsClient startOperation:toSaveSharingInfo:reply:]
isFolderSharingProxyEntitled
-[BRCXPCRegularIPCsClient startOperation:toUnshareShare:forceDelete:reply:]
-[BRCXPCRegularIPCsClient startOperation:toLookupShareParticipants:reply:]
-[BRCXPCRegularIPCsClient startOperation:toModifyRecordAccessWithItemID:allowAccess:reply:]
-[BRCXPCRegularIPCsClient startOperation:toCopyParticipantTokenWithItemID:reply:]
-[BRCXPCRegularIPCsClient startOperation:toPrepFolderForSharingWithItemID:reply:]
-[BRCXPCRegularIPCsClient startOperation:toProcessSubitemsWithItemID:maxSubsharesFailures:processType:reply:]
-[BRCXPCRegularIPCsClient startOperation:toAcceptShareLink:skipAcceptDialogs:reply:]
isAutomationEntitled
-[BRCXPCRegularIPCsClient copyBulkShareIDsAtURLs:reply:]
-[BRCXPCRegularIPCsClient startOperation:toCopyShareURLForShare:appName:reply:]
-[BRCXPCRegularIPCsClient getCreatorNameComponentsForURL:reply:]
-[BRCXPCRegularIPCsClient getShareOptionsOfItemIdentifier:reply:]
-[BRCXPCRegularIPCsClient _presentAcceptDialogsWithMetadata:reply:]
-[BRCXPCRegularIPCsClient handleCloudKitShareMetadata:completionHandler:]
-[BRCXPCRegularIPCsClient removeItemFromDisk:reply:]
-[BRCXPCRegularIPCsClient trashItemAtURL:reply:]
-[BRCXPCRegularIPCsClient _t_extractMetadataForAllContainersWithReply:]
-[BRCXPCRegularIPCsClient lookupExcludedFilenamesForLogoutWithReply:]
-[BRCXPCRegularIPCsClient lookupExcludedExtensionsForLogoutWithReply:]
-[BRCXPCRegularIPCsClient lookupMinFileSizeForThumbnailTransferWithReply:]
-[BRCXPCRegularIPCsClient checkIfItemIsShareableWithInode:reply:]
com.apple.internal.fileprovider.in-place-collaboration
-[BRCXPCRegularIPCsClient pauseSyncForFileAtURL:timeout:options:reply:]
-[BRCXPCRegularIPCsClient resumeSyncForFileAtURL:dropLocalChanges:reply:]
-[BRCXPCRegularIPCsClient fetchLatestVersionForFileAtURL:reply:]
-[BRCXPCRegularIPCsClient _sendPausedFileListBatchToUpdater:fromRowID:batchSize:completion:]
-[BRCXPCRegularIPCsClient getPausedFilesList:reply:]
-[BRCXPCRegularIPCsClient queryLastCiconiaVersion:]
-[BRCXPCRegularIPCsClient signalStartOfSilentTelemetry:uuid:manual:version:reply:]
-[BRCXPCRegularIPCsClient reportItemMismatchDuringSilentMigration:information:uuid:reply:]
-[BRCXPCRegularIPCsClient reportCleanupFailureDuringSilentMigration:operationType:uuid:reply:]
-[BRCXPCRegularIPCsClient reportOverBounceDuringSilentMigration:total:uuid:reply:]
-[BRCXPCRegularIPCsClient reportFinishedMigration:uuid:reply:]
%llu
Ciconia
MigrationFailure
-[BRCXPCRegularIPCsClient queryTelemetryEnablement:]
-[BRCXPCRegularIPCsClient corruptDatabase:]
Testing brctl reset corrupt-db
Can't use iCloud Drive.
The disk is full.
Free some space on your disk?
Unknown platform linking against CloudDocs framework %d
sync-down/periodic-sync
unreachable: No error found
v32@?0@"CKRecordZoneID"8@"NSError"16^B24
useful
useless
wants-fault
start-dl
wants-thumb
fault 
contents 
for-thumb 
thumbnail 
user-qos 
 error:%@
downError
serverName
flags
zone-health-report
pkg:%lld%s p:'%@' rank:%lld ino:%lld
 (dirty)
 dir
 file gen:%@ size:%llu mtime:%llu mode:%s
 sig:%@
 link to:'%@'
 quarantine:%u 
 xattrSig:%@
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/items/BRCPackageItem.m
+[BRCPackageItem packageItemsForItem:order:]
ready in %.3fs
<deadline %@: %@>
q24@?0@"BRCDeadlineSource"8@"BRCDeadlineSource"16
deadline-sheduler
needs-sync-down
in-sync-up
in-sync-down
last-sync-was-up
has-synced-down
prefer-sync-down
oob-sync-ack
BRCSyncContextDidBecomeBackground
BRCSyncContextDidBecomeForeground
<%@: %@ %p>
%@-metadata
v32@?0Q8q16@?<v@?>24
com.apple.bird.foreground.state
+ foreground clients:
   o %@ [container]
   o %@
   o %@ [grace period] disconnected %.1fs ago
   o forced foreground
   o always foreground
unknown bundle ID
Handoff request
fetch-quota
SELECT shared_by_me_count | shared_to_me_count, dir_faults_count FROM item_recursive_properties WHERE item_rowid = %lld
SELECT IFNULL(shared_children_count, 0) | IFNULL(shared_alias_count, 0) FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT shared_by_me_count, dir_faults_count FROM item_recursive_properties WHERE item_rowid = %lld
SELECT shared_children_count FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT shared_to_me_count, dir_faults_count FROM item_recursive_properties WHERE item_rowid = %lld
SELECT shared_alias_count FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT over_quota_count FROM item_recursive_properties WHERE item_rowid = %lld
SELECT dir_faults_count FROM item_recursive_properties WHERE item_rowid = %lld
SELECT faults_count FROM item_recursive_properties WHERE item_rowid = %lld
SELECT 1 FROM item_recursive_properties WHERE item_rowid = %lld AND (needs_download_count != 0 OR needs_dl_unstage_count != 0)
SELECT 1 FROM item_recursive_properties WHERE item_rowid = %lld AND (needs_sync_up_count != 0 OR needs_upload_count != 0)
WITH RECURSIVE pending_delete_children (item_id, item_type, needs_delete_doc_count) AS (     SELECT item_id, item_type, needs_delete_doc_count FROM item_recursive_properties      WHERE item_rowid = %llu AND needs_delete_doc_count != 0  UNION ALL     SELECT ip.item_id, ip.item_type, ip.needs_delete_doc_count FROM item_recursive_properties AS ip INNER JOIN pending_delete_children AS p WHERE ip.item_parent_id = p.item_id AND ip.zone_rowid = %@ AND ip.needs_delete_doc_count != 0) SELECT 1 FROM pending_delete_children AS pdc WHERE pdc.needs_delete_doc_count != 0 AND pdc.item_type IN (1, 2, 8) LIMIT 1
SELECT 1 FROM client_items WHERE item_parent_id = %@ AND item_state = 1 AND item_parent_zone_rowid = %@ LIMIT 1
SELECT 1 FROM client_items WHERE item_parent_id = %@    AND item_state IN (0, -1)   AND item_parent_zone_rowid = %@ LIMIT 1
SELECT DISTINCT zone_rowid FROM client_items WHERE item_parent_id = %@   AND item_parent_zone_rowid = %@    AND item_localsyncupstate = 4   AND item_state IN (0, -1, 1)
SELECT SUM(dir_faults_count), SUM(faults_count), SUM(needs_faulting_count), SUM(uploaded_size), SUM(needs_upload_size), SUM(uploaded_count), SUM(needs_upload_count), SUM(downloaded_size), SUM(needs_download_size), SUM(downloaded_count), SUM(needs_download_count), SUM(dl_unstaged_count), SUM(needs_dl_unstage_count), SUM(synced_up_count), SUM(needs_sync_up_count), SUM(over_quota_count), SUM(shared_by_me_count), SUM(shared_to_me_count), SUM(needs_delete_doc_count) FROM item_recursive_properties WHERE item_parent_id = %@ AND item_parent_zone_rowid = %@
INSERT OR REPLACE INTO item_recursive_properties (item_rowid, item_id, item_parent_id, item_type, zone_rowid, item_parent_zone_rowid) VALUES (%llu, %@, %@, %u, %@, %@)
UPDATE item_recursive_properties SET item_type = %d, dir_faults_count = dir_faults_count + 1 WHERE item_rowid = %lld
UPDATE item_recursive_properties SET item_type = %d, dir_faults_count = dir_faults_count - 1 WHERE item_rowid = %lld
UPDATE item_recursive_properties SET item_type = %d WHERE item_rowid = %lld
shared_to_me_count = shared_to_me_count + 1
shared_by_me_count = shared_by_me_count + 1
UPDATE item_recursive_properties SET %@ WHERE item_rowid = %lld
shared_to_me_count = shared_to_me_count - 1
shared_by_me_count = shared_by_me_count - 1
UPDATE client_items AS parent SET visible_child_count = (SELECT COUNT(*) FROM client_items AS child WHERE child.item_parent_id = parent.item_id AND child.item_parent_zone_rowid = parent.zone_rowid AND (child.item_user_visible = 1 OR (child.item_scope == 3 AND child.item_filename != ".Trash"))) WHERE parent.item_id = %@ AND parent.zone_rowid = %@
INSERT INTO client_items ( rowid, zone_rowid, version_mtime, visible_child_count, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier) VALUES ( %lld, %@, %lld, 0, %@, %@, %ld, %@, %@, %d, %lld, %lld, %@, %@, %d, %@, %d, %d, %d, %lld, %lld, %lld, %@, %@, %d, %@, %@, %@, %@, %@, %@, %@, %@, %u, %@, %d, %llu, %@)
UPDATE client_items   SET item_parent_id = %@,       item_parent_zone_rowid = %@ WHERE item_parent_id = %@   AND item_parent_zone_rowid = %@
DELETE FROM client_items WHERE item_parent_id = %@   AND item_parent_zone_rowid = %@   AND item_state = -2
SELECT si.rowid FROM server_items AS si INNER JOIN client_unapplied_table AS ap ON si.item_rank = ap.throttle_id WHERE si.item_parent_id = %@   AND si.zone_rowid = %@   AND si.item_type = 3   AND ap.throttle_state = 24
UPDATE client_items SET item_id = %@, item_creator_id = %@, item_sharing_options = %ld, item_side_car_ckinfo = %@, item_parent_zone_rowid = %@, item_localsyncupstate = %d, item_local_diffs = %llu, item_notifs_rank = %lld, app_library_rowid = %@, item_min_supported_os_rowid = %@, item_user_visible = %d, item_stat_ckinfo = %@, item_state = %d, item_type = %d, item_mode = %d, item_birthtime = %lld, item_lastusedtime = %lld, item_favoriterank = %lld, item_parent_id = %@, item_filename = %@, item_hidden_ext = %d, item_finder_tags = %@, item_xattr_signature = %@, item_trash_put_back_path = %@, item_trash_put_back_parent_id = %@, item_alias_target = %@, item_creator = %@, item_processing_stamp = %@, item_staged_file_id = %@, item_staged_generation = %u, item_bouncedname = %@, item_scope = %d,item_local_change_count = %llu, item_old_version_identifier = %@, version_mtime = %lld  WHERE rowid = %llu
DELETE FROM client_items WHERE item_parent_id = %@ AND item_parent_zone_rowid = %@ AND item_state = -2
UPDATE client_items SET item_parent_id = call_block(%@, item_state, app_library_rowid, zone_rowid, item_scope),     item_localname = call_block(%@) WHERE item_parent_id = %@   AND item_parent_zone_rowid = %@
account.debug.zombie.enable
nsurlsessiond
fsevents.latency
fsevents.reset-backoff
fsreader.container.throttle
fsreader.lost.throttle
fsreader.lost.backoff
fsreader.scan.batch-size
fsreader.coordination.count
fsreader.coordination.delay
fsreader.coordination.throttle
fswriter.apply.throttle
fswriter.apply.batch-size
fswriter.coordination.count
fswriter.coordination.delay
operation.failure.throttle
container.reset.throttle
shared-container.reset.throttle
container.reset.alias-removal.throttle
sync.container.throttle
sync.container.error.throttle
transfer.download.throttle
transfer.upload.throttle
sync-up.error.per-item.throttle
transfer.upload.file-modified.throttle
stage.gc.xpc
cachedelete-push.xpc
system.reachability
system.power
system.lowdisk
transfer.batch-size.min
transfer.width.max
transfer.width.min
transfer.budget
start-after
give-up-after
wait-at-least
wait-at-most
forget-after
max-elemnt-count
predicate
platforms
sync-throttles
success-ratio
quota-clear-ratio
error-ratio
kickback-delay
kickback-ratio
interval
delay
grace
repeat
priority
battery
screen.sleep
powernap
disk-intensive
container.greedy
url.publish-timeout
server-config-url
defaults.clouddocs.
com.apple.bird.defaults-manager
com.apple.bird.defaults-manager-callback
v16@?0@"NSNotification"8
 (URL %@)
 (original URL: %@, current URL %@)
fetch-configuration
CloudDocs
server-conflig.plist
server-only
q24@?0@"NSString"8@"NSString"16
@16@?0@8
fs.xattr-max-size
fs.preserved-xattr-max-size
sync.down.fetch-all-changes
sync.down.batchsize
sync.up.batchsize
list-dir.batchsize
list-dir.cancel-delay
applyscheduler.rescheduleItemsRecursively.batchsize
sync.up.batchsize.decrease.factor
sync.up.batchsize.increase
sync.appcontainers.batchsize
sync.down.sharequerysize
fs.maxdepth
sync.maxdepth
container.local.treeEnumerator
fs.pkg.extensions
_ulstyle
_ultheme
abbu
acplugin
action
adiumemoticonset
adiumicon
adiumlibpurpleplugin
adiumlistlayout
adiumlisttheme
adiummenubaricons
adiummessagestyle
adiumplugin
adiumscripts
adiumserviceicons
adiumsoundset
adiumstatusicons
adjustments
agilekeychain
alfredpreferences
apifile
aplibrary
aplmodel
appdownload
appex
appsnapshot
assembly
assistant
avchd
band
bbpackage
bbprojectd
bentodb
bentotemplate
book
booktemplate
brushes
bundle
caction
cannedsearch
card
cardsmbornes
cbaccounts
chocoimg
cinemagraph
colloquyemoticons
colloquystyle
colorpicker
comic
component
cpimage
cplink
cptext
cpweb
cyndata
cyndicate
dashsync
dayone
dbwidget
definition
dictionary
discovery
dist
distz
dlist
docset
dsclext
dsym
dvdmedia
dvdproj
dvtplugin
dylib
effects
emberbackup
embermdbackup
embersnap
eomodeld
epub
evocamtimelapse
eyetv
eyetvloc
eyetvsched
eyetvtdmp
familyfile10
favorite
fcarch
framework
fullbackup
gbproj
gchdb
gdiagramstyle
glibb
goodnotes
gputrace
gradients
graffle
gspak
gstencil
gtemplate
haslibrary
help
highland
hptask
hsproj
huginautocp
hvfproject
hvpl
hype
hypeplugin
ibank
ibatemplate
ibooks
ibplugin
icbu
ideplugin
ilmbplugin
imovielibrary
incrementalbackup
instrdst
internetconnect
ipscannerlaunchextension
itlb
itlp
itmsp
itmsp-app
iwdgt
iwork-tmp
iwwebpackage
kext
kextcache
keychain-db
keychain
latexitplugin
latexpalette
layerstyles
lh3d
linea
listlayout
listtheme
lmnr
logarchive
logic
logicx
loginplugin
lpdf
lrdata
lslibrary
mailstationery
mbornes
mdimporter
mdlabels
menu
mftpkg
migratedaplibrary
migratedphotolibrary
mindnode
mindproj
mkext
mlproj
moneywell
monitor
monitorpanel
morphx
mpbinaries
mpkg
mproject
mqtz
mwand
nemolicense
networkconnect
neunote
nmbtemplate
nnwstyle
npbackup
octest
ofocus
ofocus-archive
ofocus-backup
ofocus-perspective
oo3template
ooxsl
oplx
opvault
osax
patch
pbproj
pbxproj
pc3calc
pc3cons
pc3conv
pc3func
pdfd
photo
photolibrary
photoslibrary
pigment
pkcs12
playground
playgroundbook
plugin
pluginkit
pocketcasd
prefpane
psdownload
ptest
pvback
pvmdb
pvoc
pvxmdb
pzdoc
qlgenerator
qtpxcomposition
quicken
quickpick
qvlibrary
qvnote
qvnotebook
radarplugin
raft
ramd
rcproject
rdarplugin
ripit
rtfd
saver
scene
scptd
scriv
scsf
sdsp
seemode
seetext
seplugin
service
sfrframe
shapes
simdevicetype
simruntime
sites
sites2
sketchpad-flat
sketchpad-pkg
skypechatstyle
slidesaver
soundhoundbookmark
soundhoundhistory
soundsmbornes
sparsebundle
spdoc
spreporter
ssdownload
storyboardc
studydeck
suggestionsassets
task
template
testrun
textbundle
textexpanderalias
textexpanderbackup
textexpanderlocal
textexpandersettings
textstyles
theater
theme
themembornes
themepack
tmbundle
tmplugin
trace
transport
ulbackup
ulproject
ulysses
vellum
viennastyle
wand
wdgt
webplugin
webtemplate
webtheme
wflow
whink
workflow
xcappdata
xcarchive
xccrashpoint
xcdatamodel
xcdatamodeld
xcmappingmodel
xcode
xcodeproj
xcplaygroundpage
xcplugin
xcprocessorusagepoint
xcresult
xcsintegration
xcsnapshots
xctest
xctoolchain
xcworkspace
xcyndicate
fs.pkg.blacklist.extensions
folder
fs.shareable.iwork.extensions
fs.bundle-bit.should-fixup.ios
fs.bundle-bit.fixup.backlist.ios
fs.greedy.extensions.ios
fs.non-auto-evictable.extensions.ios
fs.non-evictable.extensions.ios
fs.non-evictable.path-components.ios
fs.non-auto-evictable.utis.ios
fs.auto-evictable.utis.ios
doc.thumbnail-blacklist.extensions
emlx
ichat
stage.umask.file
stage.umask.fsroot
stage.umask.directory
stage.umask.package.directory
stage.umask.package.file
configuration.automatic.xpc
sync.automatic.xpc
transmogrify.xpc
quota.available.comfort-size
sync.quota.fetch-delay
apps-fetch-delay
sync-up.per-item.throttling.skip
sync-up.batch-failures.throttling.skip
sync.down.throttle
sync.up.throttle
sync.up.budget.minimal
sync.up.budget.daily.default
sync.up.budget.daily
sync.up.budget.hourly.default
sync.up.budget.hourly
sync.up.budget.minutely.default
sync.up.budget.minutely
sync.up.cost.initial-item
sync.up.cost.structure.create
sync.up.cost.structure.edit
sync.up.cost.structure.delete
sync.up.cost.data.create
sync.up.cost.data.edit
sync.up.cost.data.delete
sync.up.cost.document.create
sync.up.cost.document.edit
sync.up.cost.document.delete
sync.down.shared.coalesce.nanoseconds
db.trace
db.profile
db.batch-size
db.batch-delay
db.allow-read-only-in-ipc
db.autovacuum-batch-size
db.autovacuum-ratio
server.throttling.disable
session.should-be-greedy.ios
max-file-count
max-file-count.per-folder
upload.max-file-size
upload.max-in-pkg-file-size
upload.max-pkg-file-size
upload.batch.records.count
upload.batch.count
download.batch.records.count
download.batch.count
download.will-retry-progress.max-count
zone-health.sync-down.batch.count
shared-db.sync-down.batch.count
fsreader.scan.package-delay
applyscheduler.job-max-retries-before-assert
fsreader.lost-child.backoff
fsevents.queue-buffer-size
fsevents.process-batch-size
https://configuration.apple.com/configurations/internetservices/cloudkit/clouddocs/clouddocs-1.0.plist
min-file-size-graveyard
min-evictable-size.auto.ios
logout-timeout
foreground-grace-period
force-foreground-grace-period
force-batch-failure-when-token-expires
disk-space-reclaimer.max-access-time.low-urgency
disk-space-reclaimer.max-access-time.med-urgency
disk-space-reclaimer.max-access-time.high-urgency
disk-space-reclaimer.max-access-time.very-high-urgency
disk-space-reclaimer.eviction.default-access-time
disk-space-reclaimer.max-ondisk-access-time.low-urgency
disk-space-reclaimer.max-ondisk-access-time.med-urgency
disk-space-reclaimer.max-ondisk-access-time.high-urgency
disk-space-reclaimer.max-ondisk-access-time.very-high-urgency
disk-space-reclaimer.eviction.default-ondisk-access-time
disk-space-reclaimer.max-graveyard-time.low-urgency
disk-space-reclaimer.max-graveyard-time.med-urgency
disk-space-reclaimer.xattr-age-time
fetch-quota-interval
fetch-force-telemetry-sync-interval
disk-reclaimer.purge-pacer-interval
disk-reclaimer.db-reclaimable-space-threshold
disk-reclaimer.cache-delete-recompute-interval
maximum-document-age-to-be-greedy
statement-cache-max-count-server-truth
statement-cache-max-count-client-truth
copy-share-ids-batch-size
alias-deletion-batch-size
disk-space.minimum-required-to-download.ios
disk-space.minimum-required-to-download-user-initiated
disk-space.minimum-required-to-be-greedy.ios
disk-space.required-to-return-to-greedy-state.ios
disk-space.required-to-return-to-greedy-state.relative.ios
account-size.maximum-to-be-always-greedy
disk-space.minimum-required-to-be-functional
disk-space.check-interval
disk-space.active-download-refresh-interval
user-notification.upload
spotlight-indexer.enabled
spotlight-indexer.pacer-interval
spotlight-indexer.batch-size
spotlight-indexer.max-depth
spotlight-indexer.failure-throttle-params
migration.failure-throttle-params
global-progress.additional.wait-trigger
global-progress.additional.size-trigger
document-access.high-priority-download-interval
pkg-extension-plist.write-interval
doc.min-size-for-thumbnail
doc.thumbnail-transfer-queue-width.ios
notif.overflow-limit
notif.gather-up-to
notif.batch-size
periodic-sync-time-interval
zone-health.reported-record-names-count
sync.only-treat-caught-up-as-consistent
zone-pcs-migration.blacklist-pcs-prep
_defaultZone
zone-pcs-migration.should-prepare
pcs-chaining.max-path-depth
pcs-chaining.batch-size
sharing.destroy-iwork-shares
fsreader.lost.marklost.batchSize
fsreader.lost.deep-first-threshold
fswrite.bounce-file-max-retries
fswrite.bounce-file-report-interval
excluded-filenames-worth-warning-at-logout
excluded-filenames-worth-preservering
excluded-extensions-worth-preservering
ignored-quarantine-mask
should-auto-migrate
.carry
.internal
.internal+carry
sync.optimistic-pcs-chaining
sync.optimistic-chain-ramp
sync.reset.optimistic-chain-ramp
sync.reset.optimistic-chain
sync.aggressive-chain-ramp
aggressive-pcs-chaining
agressive-pcs-activity
should-fixup-czm-aliases
delete-shareid-batch-count
max-folder-enumeration-count
max-folder-enumeration-depth
power-log-report-interval
sqlite-cache-size.ios
sqlite-cache-spill.ios
downloader.size-refresh-interval
force-sync-override
uti-cache-size
fields-to-move-out-of-trash-mask
apply-count-to-signal-faults-live
greedy-recently-used-item-count
compute-evictable-batch-size
ck-event-metric-timeout
report-all-per-item-failures
pcs-chain-2-phase
pending-changes-soft-open
pending-changes-hard-open
pending-changes-close-delay
recursive-list.discretionary.concurrent-operation-count
recursive-list.non-discretionary.concurrent-operation-count
recursive-list.fetch-dir-fault.batch-size
db-migration-batch-size
force-delta-initial-sync
block-apply-until-list
allows-shared-directory-list-before-initial-change
allows-private-directory-list-before-initial-change
sync.save-records-directly-for-list
sync.save-records-directly-for-delta-sync
sync.save-records-directly-with-deletes
sync.server-only.folder-sharing-blacklisted
sync.fetch-content-records-inline
sync.fetch-share-records-inline
qbs-telemetry.items-fetched-per-interval
qbs-telemetry.items-fetched-check-interval
sync-up.delay-for-failure
sync-down.delay-for-failure
sync-up.backoff.delay-for-failure
sync-up.backoff.ratio-for-failure
sync-up.retry-for-failure
uploader.retry-for-failure
downloader.retry-for-failure
apply.retry-for-failure
reader.retry-for-failure
analytics.report.xpc
analytics.report.app-telemetry-gather.xpc
sync.reset.fail-if-outdated
sync.reset.fake-etag-for-fail-if-outdated
sync.side-car.use-share-reference
sync.should-migrate-fetch-share-aliases
sync.server-only.carry-partitions
p97,p98
user-initiated-max-backoff
should-pcs-chain-share-aliases
sync.stuck-throttle-delay
force-fail-if-exists-on-revival
change-item-id-on-unknown-item
zone-health.max-number-of-resets
zone-health.max-number-of-resets-for-time-interval
report-xpc-error-on-pcs-chain
czm-processing.timeout
telemetry.should-report
telemetry.event-queue-size
telemetry.event-queue-reduction
telemetry.report-batch-size
telemetry.disabled-messages
telemetry.retry-count-for-failure
telemetry.apply-scheduler-timeout
telemetry.header-send-supported-classes
telemetry.error-description-length
telemetry.benign-error-descriptions
sharing.delete-share-on-empty-save
sync-up.prevent-record-sync-without-diffs
sync-up.strip-birthtime-on-documents
sync-up.sharing.prevent-sharing-with-pending-delete
ubiquitous-migration-max-bouncing-attempts
zone-health.errors-for-reset
zone-health.errors-to-report
sync.ignored-record-names
directory/appData_com.apple.Desktop
directory/appDocuments_com.apple.Desktop
directory/appData_com.apple.Documents
directory/appDocuments_com.apple.Documents
sync.prevent-concurrent-modify-records-operations
db.integrity-check.xpc
sync.integrity-check.boosting
db.integrity-check.apply
db.integrity-check.download
db.integrity-check.upload
db.integrity-check.reader
db.integrity-check.sync-up
multiAccountsHandling
serverSideAssetCopies
uploads.supports-server-side-asset-copies
fetchParticipantDocumentToken
iwork-collaboration.fetch-participant-document-token
operation-timeout
sync-consistency.file-checksum-rate
sync-consistency.package-checksum-rate
sync-consistency.max-events-count
syncConsistencyChecker
sync.consistency-checker.enabled
syncConsistencyCheckerSnapshotting
sync.consistency-check.xpc
sync.consistency-check.deferral-check-interval
sync.consistency-check.deferral-check-leeway
sync.consistency-check.timeout
sync.container-metadata.skip-records-with-missing-assets
iwork-collaboration.max-pause-file-timeout
iwork-collaboration.auto-resume-sync-batch-size
iwork-collaboration.fetch-paused-files-batch-size
lost-scan.unknown-parent-before-deep-scan
ciconia.max-reconciliation-failures
ciconia.max-side-faults-migration
ciconia.max-migration-failure
ciconia.hide-migration-domain
ciconia.keep-migration-domain
ciconia.import-timeout
ciconia.disable-automated-start
ciconia.repeat-interval
sync.server-stitching.throttle-params
sync.subresources.fetch-loop-cache-size
sync.fetch-full-contents
telemetry.allow-force-dequeue
telemetry.force-dequeue-percentage
telemetry.high-priority-event-percentage
disk-space-reclaimer.download-stage-age-time-fpfs
create-log-section
databaseBasePath
uuid
com.apple.bird.cellular-settings
sync-down/
v32@?0@"CKServerChangeToken"8q16@"NSError"24
continuing
starting
unreachable: broken structure in op %@ change token %@
unreachable: no fetched zone and no error
<%@ error:%@ pcs:%s>
UNKNOWN_USER_GIVEN_NAME
-[BRCTermDumper initWithFd:forceColor:]
BRCTermDumper.m
_file
TERM
ansi
color
LESS
LESS=FRSX
LESSCHARSET
LESSCHARSET=utf-8
less
execvp
-[BRCTermDumper _startInCString:fgColor:bgColor:attr:]
i < 10
[%d%c
Sync down
Sync down (periodic)
Sync down (initial)
Sync down (push triggered)
Sync down (app launch)
Sync down (app library metadata)
Sync down (zone health)
List directory
Fetch parent chain
Locate record
Fetch recent documents
Sync up
Sync up (app library metadata)
Sync up (zone health)
Download (thumbnails)
Download (thumbnails user initiated)
Download (user initiated)
Download (opportunistic)
Download (optimize storage off)
Download (updated documents)
Download (conflicting versions)
Quota update (uploader)
Quota update (xpc request)
Quota update (telemetry)
Zone consolidation
Zone consolidation (manual)
Zone health simulation
Publishing request
Sync up & down (shared db)
Sharing misc.
Fetch identity (xpc request)
Purge
Fetch non local versions
OS upgrade migration
Aggressive PCS Chaining
Logout
com.apple.TextInput
com.apple.kbd
com.apple.shoebox
com.apple.passd
v24@?0@"LSBundleProxy"8^B16
com.apple.bird.apps-monitor
com.apple.bird.apps-monitor.fetch-apps
com.apple.bird.apps-monitor.callback
apps-refetch-pacer
apps monitor
app library IDs by App ID
=======================
app IDs by app library IDs
<undef>
SELECT item_id FROM client_items   WHERE rowid = %lld
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE item_doc_id = %u   AND +item_state IN (0, -1)   AND +item_type IN (1, 2, 8, 6, 7)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE rowid = %lld
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items  WHERE item_file_id = %lld    AND item_state IN (0, -1)
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE item_alias_target = %@ AND item_type = 3 AND item_state = 0 %@ ORDER BY item_id
AND +zone_rowid = %@
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE item_alias_target = %@ AND item_type = 3 AND +zone_rowid = %@ ORDER BY item_id
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE item_id = %@ AND zone_rowid = %@
WITH RECURSIVE item_parents (item_id, zone_rowid) AS (     SELECT item_parent_id, item_parent_zone_rowid FROM client_items      WHERE zone_rowid = %@ AND item_id = %@  UNION ALL     SELECT li.item_parent_id, li.item_parent_zone_rowid FROM client_items AS li INNER JOIN item_parents AS p USING (item_id, zone_rowid)      LIMIT %u) SELECT item_id, zone_rowid FROM item_parents WHERE item_id_is_root(item_id) OR (item_id = %@ AND zone_rowid = %@) LIMIT 1
hierarchy-too-deep
item_parent_zone_rowid = %@ AND item_parent_id = %@
zone_rowid = %@ AND item_id = %@
WITH RECURSIVE item_children_with_shared_items (item_id, zone_rowid, shared_items_count) AS (     SELECT item_id, zone_rowid, (shared_by_me_count | shared_to_me_count) FROM item_recursive_properties      WHERE %@ AND (shared_by_me_count | shared_to_me_count) != 0  UNION ALL     SELECT ip.item_id, ip.zone_rowid, (ip.shared_by_me_count | ip.shared_to_me_count) FROM item_recursive_properties AS ip INNER JOIN item_children_with_shared_items AS p WHERE ip.item_parent_id = p.item_id AND ip.item_parent_zone_rowid = p.zone_rowid AND (ip.shared_by_me_count | ip.shared_to_me_count) != 0      LIMIT %llu) SELECT ic.item_id, ic.zone_rowid, li.item_sharing_options FROM item_children_with_shared_items AS ic INNER JOIN client_items AS li WHERE ic.shared_items_count = 1 AND li.item_id = ic.item_id AND li.zone_rowid = ic.zone_rowid AND (li.item_sharing_options & 4) != 0
WITH RECURSIVE item_children_with_side_faults (item_id, zone_rowid, faults_count) AS (     SELECT item_id, zone_rowid, faults_count FROM item_recursive_properties      WHERE zone_rowid = %@ AND item_id = %@ AND faults_count != 0  UNION ALL     SELECT ip.item_id, ip.zone_rowid, ip.faults_count FROM item_recursive_properties AS ip INNER JOIN item_children_with_side_faults AS p WHERE ip.item_parent_id = p.item_id AND ip.item_parent_zone_rowid = p.zone_rowid AND ip.faults_count != 0      LIMIT %llu) SELECT ic.item_id, ic.zone_rowid FROM item_children_with_side_faults AS ic WHERE ic.faults_count = 1 AND EXISTS (SELECT 1 FROM client_items AS li WHERE li.item_id = ic.item_id AND li.zone_rowid = ic.zone_rowid AND li.item_type in (2, 7, 8))
UPDATE %@ SET app_library_rowid = %@,transfer_queue = %@ WHERE app_library_rowid = %@ AND transfer_queue = %@
UPDATE %@ SET app_library_rowid = %@ WHERE app_library_rowid = %@
FolderSharing
ShareAcceptation
error
com.apple.iCloudDrive.shareAcceptation
periodicSync
com.apple.iCloudDrive.periodicSync
containerReset
com.apple.iCloudDrive.containerReset
applyFailure
com.apple.iCloudDrive.applyFailure
PCSChaining
PCSChainingTime
numOfUnchainedFiles
com.apple.iCloudDrive.folderSharePCSChainingTime
CKErrorDomain.2
@"NSDictionary"8@?0
%@.%ld
errorMessage
record-fetcher
unreachable: Fetch loop trying to fetch %@
B16@?0@"CKRecordID"8
 but waiting to resume
B32@?0@"CKRecordID"8@"NSString"16@"NSData"24
unreachable: Received %lu xattr records instead of expected %lu records for %@
q24@?0@"BRCFetchSubResourceRecord"8@"BRCFetchSubResourceRecord"16
v32@?0@"BRCItemID"8@"CKRecordID"16^B24
com.apple.bird.fileprovider.
file-provider
file presenters for %@
  + %@ -> %@
%@::%@
%@[%d]
com.apple.bird.cache-delete
com.apple.bird.purge-pacer
purgeableSpace
nonPurgeableSpace
purgeableSpaceDate
v24@?0@"NSDictionary"8@"NSNumber"16
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/foundation/BRCDiskSpaceReclaimer.m
-[BRCDiskSpaceReclaimer computePurgeableSpaceForAllUrgenciesWithReply:]_block_invoke
session/ciconia_diagnose
com.apple.bird.eviction
timed out waiting for eviction
-[BRCDiskSpaceReclaimer performOptimizeStorageWithTimeDelta:onDiskAccessTimeDelta:error:]
-[BRCDiskSpaceReclaimer _recursivelySizeDirectoryAtPath:]
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE item_type IN (8, 10) AND zone_rowid = %@
client-state
<%@ %p, %@>
com.apple.brc.system-resources
com.apple.system.powermanagement.SystemLoadAdvisory
good
v32@?0@"NSNumber"8@"NSHashTable"16^B24
memory-notif-pacer
com.apple.CloudDocs.MobileDocumentsFileProvider
com.apple.CloudDocs.MobileDocumentsFileProviderManaged
v16@?0@"NSDictionary"8
com.apple.distnoted.matching
great
ErrorName
ErrorCount
ZoneErrorCount
SyncType
ZoneType
TotalItemsCount
FolderSharingEnabled
DSID
RampNumber
LastErrorTimestamp
ChainedFiles
ErrorMessage
itemSyncUp
syncUp
syncDown
com.apple.iCloudDrive.syncStatus
com.apple.iCloudDrive.appTelemetry.folderSharingCountMismatch
mismatchCount
com.apple.iCloudDrive.appTelemetry.missingPush
numberOfZonesOutOfSync
com.apple.iCloudDrive.appTelemetry.permanentlyInconsistent
permanentlyInconsistent
com.apple.iCloudDrive.appTelemetry.droppedEvent
eventCount
com.apple.iCloudDrive.appTelemetry.testEvent
com.apple.iCloudDrive.appTelemetry.shareAliasInSharedFolder
sharedAliasInSharedFolder
%@;%@
v32@?0@"BRCErrorGrouping"8@"NSNumber"16^B24
true
false
chain sent
half chained
yyyy-MM-dd/HH:mm:ss
last-sync:%@
last-sync:never
, requestID:%llu
, inconsistent
, consistent
, caught-up
, status:%d(?)
, token:%@
lsdDate
lsdStatus
last-sync:%@ nextRank:%lld minUsedTime:%lld shared-db{%@}
nextRank
shareDatabase
migrationQuery
minUsedTime
unable to update the server_state
-[BRCServerPersistedState saveToDB:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/database/BRCServerPersistedState.m
%s%@:%@
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/items/BRCLocalItem+BRCStageAdditions.m
-[BRCLocalItem(BRCStageAdditions) fixupStagedItemAtStartup]
Client
[%d]
contentSignature
-[BRFieldContentSignature writeTo:]
BRFieldContentSignature.m
SELECT li.rowid, li.zone_rowid, li.item_id, li.item_creator_id, li.item_sharing_options, li.item_side_car_ckinfo, li.item_parent_zone_rowid, li.item_localsyncupstate, li.item_local_diffs, li.item_notifs_rank, li.app_library_rowid, li.item_min_supported_os_rowid, li.item_user_visible, li.item_stat_ckinfo, li.item_state, li.item_type, li.item_mode, li.item_birthtime, li.item_lastusedtime, li.item_favoriterank,li.item_parent_id, li.item_filename, li.item_hidden_ext, li.item_finder_tags, li.item_xattr_signature, li.item_trash_put_back_path, li.item_trash_put_back_parent_id, li.item_alias_target, li.item_creator, li.item_processing_stamp, li.item_staged_file_id, li.item_staged_generation, li.item_bouncedname, li.item_scope, li.item_local_change_count, li.item_old_version_identifier, li.version_name, li.version_ckinfo, li.version_mtime, li.version_size, li.version_thumb_size, li.version_thumb_signature, li.version_content_signature, li.version_xattr_signature, li.version_edited_since_shared, li.version_device, li.version_conflict_loser_etags, li.version_quarantine_info, li.version_uploaded_assets, li.version_upload_error, li.version_old_zone_item_id, li.version_old_zone_rowid, li.version_local_change_count, li.version_old_version_identifier, li.desired_version, li.item_live_conflict_loser_etags, li.item_file_id, li.item_generation, li.version_block_sync_until_bundle_id, li.version_block_sync_until_timestamp FROM client_items AS li  INNER JOIN client_sync_up AS su    ON su.throttle_id = li.rowid  WHERE         su.throttle_state = 50    AND su.zone_rowid = %@    AND su.in_flight_diffs IS NULL    AND li.item_type IN (1, 2, 8, 5, 6, 7, 3)    AND li.item_state = 0    AND li.item_localsyncupstate = 4    AND li.item_min_supported_os_rowid IS NULL
SELECT li.rowid, li.zone_rowid, li.item_id, li.item_creator_id, li.item_sharing_options, li.item_side_car_ckinfo, li.item_parent_zone_rowid, li.item_localsyncupstate, li.item_local_diffs, li.item_notifs_rank, li.app_library_rowid, li.item_min_supported_os_rowid, li.item_user_visible, li.item_stat_ckinfo, li.item_state, li.item_type, li.item_mode, li.item_birthtime, li.item_lastusedtime, li.item_favoriterank,li.item_parent_id, li.item_filename, li.item_hidden_ext, li.item_finder_tags, li.item_xattr_signature, li.item_trash_put_back_path, li.item_trash_put_back_parent_id, li.item_alias_target, li.item_creator, li.item_processing_stamp, li.item_staged_file_id, li.item_staged_generation, li.item_bouncedname, li.item_scope, li.item_local_change_count, li.item_old_version_identifier, li.version_name, li.version_ckinfo, li.version_mtime, li.version_size, li.version_thumb_size, li.version_thumb_signature, li.version_content_signature, li.version_xattr_signature, li.version_edited_since_shared, li.version_device, li.version_conflict_loser_etags, li.version_quarantine_info, li.version_uploaded_assets, li.version_upload_error, li.version_old_zone_item_id, li.version_old_zone_rowid, li.version_local_change_count, li.version_old_version_identifier, li.desired_version, li.item_live_conflict_loser_etags, li.item_file_id, li.item_generation, li.version_block_sync_until_bundle_id, li.version_block_sync_until_timestamp FROM client_items AS li  INNER JOIN client_sync_up AS su  ON su.throttle_id = li.rowid  WHERE         su.throttle_state = 50    AND su.zone_rowid = %@    AND su.in_flight_diffs IS NULL    AND li.item_type IN (0, 9, 10, 4)    AND (li.item_state = 0)    AND li.item_localsyncupstate = 4    AND li.item_min_supported_os_rowid IS NULL
SELECT li.rowid, li.zone_rowid, li.item_id, li.item_creator_id, li.item_sharing_options, li.item_side_car_ckinfo, li.item_parent_zone_rowid, li.item_localsyncupstate, li.item_local_diffs, li.item_notifs_rank, li.app_library_rowid, li.item_min_supported_os_rowid, li.item_user_visible, li.item_stat_ckinfo, li.item_state, li.item_type, li.item_mode, li.item_birthtime, li.item_lastusedtime, li.item_favoriterank,li.item_parent_id, li.item_filename, li.item_hidden_ext, li.item_finder_tags, li.item_xattr_signature, li.item_trash_put_back_path, li.item_trash_put_back_parent_id, li.item_alias_target, li.item_creator, li.item_processing_stamp, li.item_staged_file_id, li.item_staged_generation, li.item_bouncedname, li.item_scope, li.item_local_change_count, li.item_old_version_identifier, li.version_name, li.version_ckinfo, li.version_mtime, li.version_size, li.version_thumb_size, li.version_thumb_signature, li.version_content_signature, li.version_xattr_signature, li.version_edited_since_shared, li.version_device, li.version_conflict_loser_etags, li.version_quarantine_info, li.version_uploaded_assets, li.version_upload_error, li.version_old_zone_item_id, li.version_old_zone_rowid, li.version_local_change_count, li.version_old_version_identifier, li.desired_version, li.item_live_conflict_loser_etags, li.item_file_id, li.item_generation, li.version_block_sync_until_bundle_id, li.version_block_sync_until_timestamp FROM client_items AS li  INNER JOIN client_sync_up AS su    ON su.throttle_id = li.rowid  WHERE         su.throttle_state = 50    AND su.zone_rowid = %@    AND su.in_flight_diffs IS NULL    AND li.item_state = 1    AND li.item_localsyncupstate = 4    AND NOT EXISTS(SELECT 1 FROM client_items AS ci                     WHERE li.item_id = ci.item_parent_id                      AND ci.zone_rowid = su.zone_rowid                      AND ci.item_state != -2)    AND li.item_min_supported_os_rowid IS NULL
v16@?0@"BRCItemID"8
 in the same zone
orphan.live
SELECT COUNT(*) FROM client_items  WHERE item_parent_id = %@     AND item_localsyncupstate = 4    AND NOT indexset_contains(%p, rowid)    AND zone_rowid = %@    AND item_state != -2
SELECT 1 FROM client_items AS ci  WHERE ci.version_old_zone_rowid = %@     AND %@ IN (SELECT si.item_parent_id FROM server_items AS si WHERE si.item_id = ci.version_old_zone_item_id AND si.zone_rowid = ci.version_old_zone_rowid)
orphan.tombstone
 WITH RECURSIVE item_parents (item_id, item_sharing_options, item_parent_id) AS (          SELECT item_id, item_sharing_options, item_parent_id FROM client_items           WHERE item_id = %@ AND zone_rowid = %@       UNION ALL          SELECT li.item_id, li.item_sharing_options, li.item_parent_id FROM client_items AS li     INNER JOIN item_parents AS p WHERE li.zone_rowid = %@ AND p.item_parent_id = li.item_id          LIMIT %u )        SELECT item_id FROM item_parents WHERE (item_sharing_options & 4) != 0
%@_%@_%@
sync-up/container-metadata
z:%@
r:%lld
throttle_id = %lld
throttle_id
%@:%lld
throttle_id = %lld AND zone_rowid = %@
%lld, %@
[CRIT] UNREACHABLE: should have an accountID to salt with
[ERROR] %s: %s error: %@
[ERROR] checksum from bookmark %@ is not equal to expected checksum %@ for %@
[DEBUG] 
%llx Creating a documents folder for app library %@
[ERROR] Failed to create documents folder for app library %@
[ERROR] statfs for %@ failed
[ERROR] stat for %@ failed
[CRIT] UNREACHABLE: %@'s device ID is 0!
[NOTICE] on device: %@
[CRIT] UNREACHABLE: can't resume timer scheduler when already canceled: %@
[CRIT] UNREACHABLE: Already have %@ timer registered
[CRIT] UNREACHABLE: timer scheduler already canceled: %@
[DEBUG] Reschedule %@
[DEBUG] %@ is cancelled --> Don't reschedule.
[CRIT] UNREACHABLE: Trying to reschedule %@ before resuming
[DEBUG] Reschedule %@: Nothing left. Suspending.
[DEBUG] Reschedule %@: next timer at %@
sync/side-car-fetch
[DEBUG] Saving side car changed records %@
deleted record %@
server change token %@
requestID %llu
[CRIT] UNREACHABLE: Couldn't deserialize side car info on %@
[CRIT] UNREACHABLE: Couldn't parse alias record name for %@
[DEBUG] Ignoring deleted recordID where we couldn't locate the server zone %@
[CRIT] UNREACHABLE: failed to alloc ranks when syncing down side cars for %@
[WARNING] Marking sync request in side care zone as failed because requestIDs differ %lld vs %lld
[DEBUG] Succeeded in syncing up the side car zone with requestID %lld
[DEBUG] Ignoring record of unknown type %@
[CRIT] Assertion failed: ![deletedRecordIDs containsObject:record.recordID]
[CRIT] Assertion failed: sideCarRecordsByRecordID[record.recordID] == nil
[CRIT] Assertion failed: ![deletedRecordIDs containsObject:recordID]
[CRIT] Assertion failed: sideCarRecordsByRecordID[recordID] == nil
[DEBUG] Finished syncing down side cars - %@
[ERROR] Sqlite request %@ failed on %@ with error [%@]
[ERROR] Sqlite failed on %@ with error [%@]
[CRIT] UNREACHABLE: Got really unexpected error: %@
[ERROR] %@
[WARNING] %@
[WARNING] Possible slow statement on %@:
  binds:    %d
  changes:  %lld
  vm steps: %d (max: %lu)
  sql:      %s
  %@
[WARNING] Possible slow statement on %@:
  binds:    %d
  columns:  %d
  rows:     %ld
  vm steps: %d (max: %lu)
  sql:      %s
  %@
[CRIT] Significantly too slow SQL statement ( vm steps: %u  max:%lu ): %s
[CRIT] API MISUSE: you need to provide a radar
[CRIT] API MISUSE: you need to an index to use
[CRIT] Assertion failed: block
[CRIT] Assertion failed: _batchingPacer
[CRIT] error closing connection %@: %@
[CRIT] UNREACHABLE: Running on the connection with the wrong persona
[DEBUG] 
%llx creating operation %@
BRCOperation/? (subclass activity missing)
[DEBUG] 
%llx now using group: %@
[DEBUG] 
%llx dealloc
[CRIT] UNREACHABLE: %@ deallocated while executing
[CRIT] Assertion failed: self.finished
[DEBUG] throttle backoff: %03fs for hash:0x%016llx
[ERROR] throttle backoff is greater than max.  Failing the operation
[DEBUG] server provided backoff: %.03fs
[CRIT] %@ has been blacklisted and won't be attempted again
[DEBUG] attempting execution again in %.03fs
[DEBUG] 
%llx retrying %@
[CRIT] UNREACHABLE: there should be a group created for %@
[CRIT] UNREACHABLE: Operation %@ is missing syncContext
[DEBUG] scheduling %@
[DEBUG] 
%llx starting with throttle %@
[DEBUG] 
%llx starting %@
[DEBUG] 
%llx cancelling %@
[DEBUG] Removed %@ as dependency of cancelled op %@
[DEBUG] 
%llx finishing %@
[DEBUG] 
%llx %@%@ %@%@%@
[WARNING] We are blacklisted! Not notifying about finishing %@
[DEBUG] CloudKit account is temporarily unavailable. Invalidating account status after %@
[CRIT] Completed operation %@ with different persona than we started with
[ERROR] won't restore persona: %@
[ERROR] Can't adopt persona %@: %@
[DEBUG] Not allowed to adopt persona - should fallback persona
[DEBUG] Sending telemetry events in operation %@
[DEBUG] (%@) Queuing %@
[CRIT] Assertion failed: context
[CRIT] Assertion failed: _syncContext
[WARNING] Adding discretionary op %@ as a dependency of a non-discretionary op %@
[DEBUG] Blocking %@ on high priority operation %@
[DEBUG] Launching timeout timer of %llu seconds for operation %@
[DEBUG] Timeout expired, cancelling operation %@
[DEBUG] Timeout already expired, cancelling operation %@
[CRIT] Assertion failed: _remoteClientProxy || _ignoreMissingRemoteClientProxy
[DEBUG] 
%llx dispatching to %s
[DEBUG] 
%llx continuing on %s
sync/sharedb
[DEBUG] inserted new ownerKey %@ for %@
[DEBUG] 
%llx Handling result of creating %@ (operationID=%@): %@
[DEBUG] %@ zone %@ changed
[ERROR] %@ failed: %@
[DEBUG] 
%llx %@ done: %u zones were changed and %u deleted
[DEBUG] scheduling sync for %@
[CRIT] UNREACHABLE: there should be a container
[DEBUG] updating shared-database from %@ with token:%@ caught-up:%s
[DEBUG] 
%llx Sync: fetching changed zones in the shared-database
[WARNING] can't parse docID based bookmark
[CRIT] Assertion failed: _logicalName != nil
[CRIT] Assertion failed: !item.isBRAlias
[CRIT] Assertion failed: shareRoot
[CRIT] Assertion failed: _fileObjectID.type != BRFileObjectIDTypeDocument
[CRIT] Assertion failed: finderTags.tagsCount > 0
[WARNING] item %@ in shared zone "%@" should have share-options set (actual:%lu %@)
[ERROR] item has both or neither a public and private share %@
[CRIT] Assertion failed: [item.serverZone.dbRowID isEqualToNumber:_parentGlobalID.zoneRowID]
[CRIT] Assertion failed: !item.isZoneRoot
[CRIT] Assertion failed: item.st.stagedGenerationID == relpath.generationID.fsGenerationID.longValue
[NOTIF] %@: can't resolve the alias on disk for %@, marking it dead
[NOTIF] 
%llx generating sandbox extensions for %@
[CRIT] Assertion failed: logicalName
[CRIT] Assertion failed: physicalName.br_isSideFaultName
[NOTIF] issued sandbox extension for %@
[ERROR] failed to issue sandbox extension for %@: %@
[NOTIF] published progress for %@
[NOTIF] unpublished progress for %@
[WARNING] failed getting download progress for %@
[WARNING] failed getting upload progress for %@
[WARNING] This isn't implemented yet in FPFS: %@, %s, %u
[CRIT] Assertion failed: self.isSharedToMeTopLevelItem
[CRIT] Assertion failed: _serverZone.isSharedZone
[CRIT] Assertion failed: aliasZone.isPrivateZone
[ERROR] %@ has been CZM but we don't know it yet.  Not allowing alias sync
[DEBUG] No need to insert a dead alias when one already exists for %@
[CRIT] UNREACHABLE: Strange... An alias exists which isn't dead. Converting it to be dead for %@
[CRIT] Assertion failed: _db.isBatchSuspended
[CRIT] UNREACHABLE: Can't update to nil zone row id
[WARNING] Parent zone updated on %@, clearing ckinfo and inserting dead item
[CRIT] Assertion failed: existingAlias.isDead
[DEBUG] deleting existing alias %@ because the shared item moved here
[ERROR] no metadata for %@
[DEBUG] %@ is disabled by TCC
[DEBUG] %s: %s error: %@
[WARNING] Can't edit a readonly share for %@
[WARNING] Can't add a file to a readonly share with parent %@
[WARNING] Error trying to move shared top item %@ into trash
[WARNING] Error trying to move shared top item %@ into a shared item
[WARNING] Error trying to move shared top item %@ into another shared item %@
[DEBUG] Allowing move of top level folder share item %@
[WARNING] Top level shared item %@ moved across zone boundaries.  Allowing it
[DEBUG] Allowing server-side asset copy for shared folder transfer for %@
[WARNING] We need to download item %@ which is moving in or out of a shared zone to parent %@
[WARNING] Warning for move of shared item across zones
[DEBUG] Allowing server-side asset copy for %@
[WARNING] We need to download item %@ which is crossing zone boundaries to %@
[CRIT] Assertion failed: parent.isOwnedByMe
[CRIT] Assertion failed: !parent.isOwnedByMe
[DEBUG] Allowing server-side asset copy for subitem moving %@
[WARNING] Moving item %@ into another shared item %@
[WARNING] Moving item %@ out of the share to new parent %@
[WARNING] Moving item %@ into a different share with parent %@
[WARNING] Moving item %@ into a share with parent %@
[WARNING] Moving item with a shared child %@ into a share with parent %@
[WARNING] Moving an item with a shared child %@ into trash at parent %@
[CRIT] UNREACHABLE: br_capabilityToMoveFromURL is not supported in FPFS
[CRIT] UNREACHABLE: can't open interactive DB: %@
[CRIT] UNREACHABLE: can't open expensive DB: %@
[WARNING] Corrupting handling is already in-flight
[ERROR] Ciconia DB was dropped - domain removal will happen on next start
[CRIT] Assertion failed: argc >= 1
[CRIT] Assertion failed: !set || [set isKindOfClass:[NSIndexSet class]]
[CRIT] API MISUSE: is_parented_or_equal_to(Container, parent_id, parentId_or_Set)
[CRIT] UNREACHABLE: we have a cycle
[DEBUG] recursive update of %lld
[DEBUG] database backup detector initialized {old:%llu; new:%llu; c:%llu}
[WARNING] backup detected: ino %llu instead of %llu at '%s'
[DEBUG] failed stating '%s' %{errno}d
[DEBUG] mismatch on new control file '%s': %llu != %llu
[DEBUG] database backup detector updated {old:%llu -> %llu; new:%llu -> %llu; c:%llu -> %llu}
[WARNING] can't remove %@: %@
[CRIT] Assertion failed: sct.dbRowID
[CRIT] UNREACHABLE: saving the container state should always work
[CRIT] Assertion failed: lcz.dbRowID
[CRIT] UNREACHABLE: saving the zone state should always work
[ERROR] Failed to create server zone %@:  %@
[CRIT] UNREACHABLE: sct.dbRowID is %@ lastInsertedRow is %lld
[ERROR] trying to create server zone that already exists
[CRIT] Assertion failed: rowID
[CRIT] UNREACHABLE: got a new rowid for already existing zone (sct.dbRowID=%@ rowID=%@)
[CRIT] UNREACHABLE: Failed to update plist for zone %@: %@
[CRIT] UNREACHABLE: couldn't allocate a rowid. libraryID %@ error %@
[CRIT] Assertion failed: lib.zoneRowID
[CRIT] UNREACHABLE: saving the app library state should always work
[CRIT] Assertion failed: lib.dbRowID
[CRIT] Assertion failed: plist
[CRIT] Assertion failed: plist != nil
[CRIT] Assertion failed: mangedID
[DEBUG] this is the first time we hear of a device named '%@'
[CRIT] UNREACHABLE: can't insert device name: '%s'
[CRIT] Assertion failed: userFormattedName != nil
[DEBUG] learning name '%@' for user %@
[CRIT] Assertion failed: userIdentity
[CRIT] UNREACHABLE: can't insert user identity for name '%@': %@
[CRIT] UNREACHABLE: unable to update user identity
[CRIT] UNREACHABLE: owner %@ with no user identity
[DEBUG] Participant %@ has no user identity
[DEBUG] user %@ has identity %@
[CRIT] UNREACHABLE: nameless identity: %@ (user %@)
[CRIT] UNREACHABLE: userName shouldn't be nil
[CRIT] UNREACHABLE: can't insert user name: '%@': %@
[DEBUG] this is the first time we hear of a user named '%@'
[DEBUG] clearing needs-upgrade errors
[DEBUG] Cleaning telemetry after updating BR version
[DEBUG] Checking integrity of %s DB
[NOTICE] CloudDocs was upgraded from [%@ on %@] to [%@ on %@]
[CRIT] Assertion failed: _databaseID
[DEBUG] loaded client-state %@
[CRIT] Assertion failed: sself
[DEBUG] 
%llx db pre-flush: flushing client-state %@
[DEBUG] Saved zone state for %@
[DEBUG] Saved app library state for %@
[DEBUG] 
%llx db post flush
[CRIT] disk is full, restarting: %@
[CRIT] UNREACHABLE: Failed to enable recursive triggers - %@
[ERROR] Failed to signal reimport of %@ on startup %@
[DEBUG] Done with %@ DB: %@
[DEBUG] Opening DB %@
[ERROR] unable to truncate database: %d; %s
[ERROR] can't unlink '%@' %{errno}d
[ERROR] can't reopen db after truncate: %@
[DEBUG] Validating %s DB
[NOTICE] doing an internal fixup from %d to %d
[ERROR] can't internal fixup from version %d to %d: %@
[NOTICE] fixuping database from version %d to %d
[ERROR] can't fixup from version %d to %d: %@
[WARNING] your database comes from a compatible future (db at version %d, current is %d)
[DEBUG] no database migration required, version is current (db at version %d)
[NOTICE] migrating %s database from version %d to %d
[ERROR] can't migrate from version %d to %d: %@
[ERROR] can't set user version to %u: %@
[CRIT] Assertion failed: db_version == schema_upgrades[i].version
[CRIT] Assertion failed: db_version == DB_VERSION_CURRENT
[CRIT] Assertion failed: _serverDB.serialQueue
[CRIT] Assertion failed: _clientDB.serialQueue
[CRIT] Assertion failed: readOnlyDB.serialQueue
[DEBUG] 
%llx dumping database
[DEBUG] dumping container %@
[DEBUG] Encountered an error %@ running stmt %@
[DEBUG] dumping client zone %@
[ERROR] Failed to saved migration attempt %@: %@
[ERROR] failed unlinking '%s' %{errno}d
[ERROR] failed opening '%s' %{errno}d
[ERROR] failed stating '%s' %{errno}d
[ERROR] failed closing '%s'
[CRIT] Internal users only version %d.%03d has seen an ulterior change and needs to be reset
[CRIT] database is stale, can't be migrated (db at version %d, migration range [%d,%d])
[CRIT] database has a major version from the future: %d (want at most %d)
sync/fetch-recents
[CRIT] UNREACHABLE: Couldn't allocate ranks when fetching query %@
[DEBUG] performer already registered for %@
[CRIT] UNREACHABLE: implemented by subclass
[DEBUG] 
%llx performing migration for %@
[DEBUG] migration completed
[CRIT] Assertion failed: handler
[DEBUG] 
%llx Setting migration state. response: %@, error: %@
[DEBUG] status: %@
[DEBUG] 
%llx getting account migration status for %@
[ERROR] No ACAccount found
[DEBUG] migration status: %d
[DEBUG] 
%llx Request for CloudKit migration status done. response: %@, error: %@
[DEBUG] migration state: %@
[DEBUG] received a managed restriction changed notification - %@
[DEBUG] jetsaming %@
[ERROR] can't delete account file %{errno}d
[ERROR] failed to create account path: %@
[ERROR] can't write account ID: %@
[DEBUG] 
%llx disabling pushes, be sure to listen to activities and the like
[WARNING] setting the migration prefs because account is migrated
[WARNING] setting the migration on the account because account is migrated - and waiting for ACAccountNotification plugin
[WARNING] migration is not accepted, not loading the account for %@
[DEBUG] 
%llx loaded system account ID: %@ (db ID: %@, disk ID: %@, path: %@, current persona: %@ (%@), account's persona: %@ (%@))
[DEBUG] 
%llx deleting account on disk
[CRIT] UNREACHABLE: disk account ID (%@) doesn't match system account ID (%@)
[CRIT] UNREACHABLE: not loading account %@ because we cannot create set account id on disk
[DEBUG] 
%llx Loading current on-disk account: %@
[NOTICE] using account %@
[CRIT] Assertion failed: [account isDataSeparatedAccount]
[ERROR] Added domain %@ with error: %@
[INFO] Waiting for fileprovider to add domain %@
[DEBUG] 
%llx jetsaming clients
[CRIT] Assertion failed: session
[DEBUG] removing '%@'
[ERROR] can't remove account %{errno}d
[CRIT] timed out waiting for %u seconds for account session to close!
[DEBUG] 
%llx destroying current session
[ERROR] failed loading salt: %@
[CRIT] UNREACHABLE: can't load salt, bad bug ahead
[NOTICE] generating new ubiquity token
[ERROR] failed creating salt directory '%@': %@
[ERROR] failed writing salt data to '%@': %@
[ERROR] failed excluding salt data at '%@' from backups: %@
[ERROR] Failed to open account session: %@
[ERROR] Your database is from the future, disabling iCloud Drive (%@)
[DEBUG] No space on disk to open the db
[DEBUG] Local session state has beeen resetted, try opening the session for the second time
[DEBUG] Starting up at %@
[DEBUG] 
%llx creating account session for %@
[CRIT] Assertion failed: _session == nil
[WARNING] we are already logged in %@
[CRIT] Assertion failed: [BRDSIDString brc_dbAccountDSIDForPath:self.accountPath] == nil || [[BRDSIDString brc_dbAccountDSIDForPath:self.accountPath] isEqualToString:accountID]
[DEBUG] 
%llx destroying account for %@
[NOTICE] stop using account %@
[CRIT] Assertion failed: [_dbAccountDSID isEqualToString:_session.accountDSID]
[DEBUG] 
%llx creating account for %@
[NOTICE] now using account %@
[ERROR] can't create account session: %@
[DEBUG] sending apps account change notification
[WARNING] Asking account status for %@
[WARNING] Triggering migration for %@
[DEBUG] current account is: %@
[DEBUG] iCloud Drive is disabled for %@
[DEBUG] Account is not migrated to iCloud Drive %@
[ERROR] can't remove account belonging to account %@ at %@ %{errno}d
[DEBUG] Account hasn't really changed, do nothing
[DEBUG] Cleaning up session on disk belonging to account %@
[DEBUG] Cleaning up previous session belonging to account %@, to make room for new account %@
[WARNING] we seem to have logged out while migrating account (%s)
[CRIT] UNREACHABLE: the main account (%s) doesn't match the one we have (%s)
[ERROR] can't set the migrated bit on %@: %@
[DEBUG] saved the migration bit
[DEBUG] account property is already set
[DEBUG] migration already completed
[NOTICE] setting migration complete on %@
[DEBUG] saved the bit
[CRIT] Assertion failed: folderType >= BRCSyncedFolderTypeMin && folderType <= BRCSyncedFolderTypeMax
[CRIT] Assertion failed: syncPolicy
[CRIT] Assertion failed: syncPolicy == BRCSyncedFolderPolicyEnabled || syncPolicy == BRCSyncedFolderPolicyDisabled
[DEBUG] No one is waiting on %@ anymore so cancelling
[DEBUG] We have observers again for %@ so not cancelling yet
BRCAutoCancelOperation/? (subclass activity missing)
[DEBUG] %@ finished listing batch with cursor %@
[DEBUG] Dropping list directory database because of a token fetch error - %@
[DEBUG] Dropping list directory database because server change token differes %@ vs %@
[DEBUG] Finished listing directory contents of %@
[WARNING] Not trying to promote %@ to a normal directory
[DEBUG] list query is already completed.  Just finishing it %@
[DEBUG] Continuing list query %@ from cursor %@
[DEBUG] Starting new list query %@
[DEBUG] Fetching the root as well of this share accept fault
[DEBUG] Listing directory contents of %@: Got record: ID [%@] Type [%@], error %@
[CRIT] Assertion failed: !continuationCursor
[DEBUG] Listing directory contents of %@
[DEBUG] Listing directory contents of %@ took [%f] Secs and fetched [%llu,%llu] records [%llu] xattrs
[WARNING] Can't list anymore in the middle of a rec-list operation
[CRIT] Assertion failed: !childID.isDocumentsFolder
[CRIT] Assertion failed: ![self->_itemsToList containsObject:childID]
[DEBUG] %@ listing next item %@
[WARNING] ItemID %@ isn't able to be listed
[CRIT] Assertion failed: ![self->_itemsFailedListing containsObject:itemID]
[DEBUG] Continuing %@ after encountering a ignorable error for %@
[CRIT] Assertion failed: _st.type == BRC_ITEM_TYPE_FINDER_BOOKMARK || _st.type == BRC_ITEM_TYPE_FINDER_BOOKMARK_FAULT
[CRIT] UNREACHABLE: -asShareableItem called on a non-shareable item
[DEBUG] Failed to defer the activity for analytics
[DEBUG] Reporting analytics metrics
[DEBUG] iCloud Analytics collection has been disabled, unregistering xpc_activity
[ERROR] Failed to continue the xpc activity
[DEBUG] Checking sync consistency
[DEBUG] iCloud Analytics collection is disabled, unregistering xpc_activity
[WARNING] Telemetry timed out waiting for the apply scheduler
[ERROR] Failed to finish the app telemetry xpc activity
[ERROR] Failed to defer the app telemetry xpc activity
[DEBUG] Defering app telemetry gather for now
[ERROR] Failed to set the app telemetry xpc activity state to done
[DEBUG] Finishing app telemetry gather because the session logged out
[CRIT] UNREACHABLE: We are already checking telemetry on %@
[ERROR] Failed to finish the app telemetry activity
[CRIT] UNREACHABLE: %@ should be a directory
[DEBUG] Already have a deferral timer registered
[DEBUG] Can't defer the sync consistency activity
[WARNING] Deferring the sync consistency checker
[DEBUG] Already have a cancellation timer registered
[WARNING] Cancelling the sync consistency checker because it timed out
[ERROR] error connecting to telemetry-disk-checker xpc service: %@
[DEBUG] Successfully resumed existing tree consistency operation
[DEBUG] Failed resuming tree consistency operation
[DEBUG] Deferring activity because a snapshot already exists
[DEBUG] Failed to defer the xpc activity
[WARNING] Client zone %@ has a sync up backoff ratio of %f which is too large
[WARNING] Client zone %@ has a sync up backoff delay of %f which is too large
[CRIT] Assertion failed: [metric.eventName isEqualToString:kind]
[DEBUG] analytics: creating %@ event for fileID %lld
[DEBUG] analytics: creating %@ event
[CRIT] Assertion failed: _telemetryEventCount >= 0
[DEBUG] The server has detected a problem on the client. Resetting all sync telemetry
[DEBUG] updating telemetry token %@ -> %lld
[CRIT] Assertion failed: _currentTelemetryToken.longLongValue == [persistedState telemetryToken]
[DEBUG] Dequeued %lu telemetry events to send with token %lld (size %lu)
[DEBUG] There are more telemetry events to dequeue
[WARNING] Not submitting event which is disabled %u
[DEBUG] Inserting telemetry event %u
[CRIT] Assertion failed: priority <= 1
[DEBUG] Dropping telemtry events due to queue overflow
[DEBUG] Force Telemetry Deque passed the minimum interval
[CRIT] Assertion failed: self->_telemetryEventCount == 0
[NOTICE] Telemetry dequeue already queued
[NOTICE] Forcing telemetry events dequeue
[NOTICE] Will update cache with new value: %d
[NOTICE] Fetching telemetry status
[ERROR] Failed querying iCloud telemetry configuration: %@
[CRIT] UNREACHABLE: configuration dictionary missing analytics key
[DEBUG] associated %@ to event metric %@
[CRIT] UNREACHABLE: needs override
[DEBUG] analytics: submitting event %@
[CRIT] UNREACHABLE: Failed to compute the pcs chain status and zone rowid for item row %lld - %@
[CRIT] Assertion failed: _totalZoneCount == 0
[CRIT] UNREACHABLE: No service with code %d
[DEBUG] Item with row %llu has an item not scheduled for download
[CRIT] UNREACHABLE: Got unexpected item depth: %d
[DEBUG] Item with row %llu has an item not scheduled for upload
[DEBUG] Item with row %llu has an item not scheduled for sync up
[DEBUG] Item with row %llu has an item with a missing sync up throttle
[DEBUG] Item with row %llu has an item with a missing upload throttle
[DEBUG] Item with row %llu has an item with a missing download throttle
[DEBUG] Generated sync health report with upload failures:%@
download failures:%@
sync up failures:%@
zone sync up errors:%@
zone sync down errors:%@
[DEBUG] The share changed while we were checking telemetry on %@ but we already reported an error
[WARNING] Telemetry report at %@ finished with error %@ retry count %llu
[DEBUG] Telemetry report at %@ succeeded
[WARNING] Telemetry report at %@ did not run
[DEBUG] Telemetry sync consistency report succeeded with %lu error and %lu warning events
[WARNING] Telemetry sync consistency report did not run
[ERROR] Failed to unmount old snapshot - %@
[ERROR] Failed to delete old snapshot - %@
[ERROR] Failed to generate snapshot at %@ - %@
[ERROR] Failed to mount snapshot at %@ - %@
[CRIT] UNREACHABLE: state is of unexpected class %@
[CRIT] UNREACHABLE: update time is of unexpected class %@
[DEBUG] We don't have a container for %@
[DEBUG] 
%llx starting a fetch-record-changes operation for health zone
[DEBUG] 
%llx got a changed record %@ in operation %@
[CRIT] Assertion failed: ![self->_deletedRecordIds containsObject:record.recordID]
[CRIT] Assertion failed: self->_recordsByID[record.recordID] == nil
[DEBUG] ignoring zone details record %@ in operation %@
[WARNING] ignoring record of unexpected type %@ in operation %@
[DEBUG] 
%llx recordID was deleted %@ in operation %@
[CRIT] Assertion failed: ![self->_deletedRecordIds containsObject:recordID]
[CRIT] Assertion failed: self->_recordsByID[recordID] == nil
[DEBUG] 
%llx Received token update %@, requestID %llu
[DEBUG] 
%llx finished sync down of zone-health %@ with requestID %llu changeToken %@
[DEBUG] No zone-health zone %@: %@
[ERROR] Failed syncing down zone-health op %@: %@
[DEBUG] 
%llx sync down of zone-health-check was cancelled?
[CRIT] Assertion failed: _type == BRC_ITEM_TYPE_ALIAS
[CRIT] Assertion failed: containerID
[CRIT] UNREACHABLE: Stat shouldn't be nil
[CRIT] Assertion failed: creatorRowIDLongLongValue >= 0
[CRIT] UNREACHABLE: Failed to load xattr with signature %@ - %@
[CRIT] Assertion failed: ![self _hasLastEditorRowID]
[CRIT] Assertion failed: lastEditorDeviceRowID && lastEditorDeviceRowID.longLongValue > 0
[CRIT] Assertion failed: !_lastEditorDeviceOrUserRowID || ![self _hasLastEditorDeviceRowID]
[CRIT] Assertion failed: _contentSignature
[DEBUG] Not being greedy because current version size is 0
[DEBUG] Not being greedy because document is bigger %@ than minimum size (%@) to generate a thumbnail
[DEBUG] Being greedy because the document is small %@ and QL can generate a thumbnail for %@
[DEBUG] Not being greedy even though the document is small %@: QL can
t generate a thumbnail for %@
[ERROR] invalid signature in %@
[NOTIF] Pipe %@ watching %@
[NOTIF] Pipe %@ no longer watching %@
[CRIT] Assertion failed: reply
[CRIT] Assertion failed: item.fileObjectID
[ERROR] failed to signal enumerator for root container: %@
[NOTIF] 
%llx collecting %lu additional folder updates
[NOTIF] 
%llx invalidating pipes watching %@
[NOTIF] 
%llx invalidating NSMDQs watching %@
[NOTIF] 
%llx dispatching to %s
[NOTIF] 
%llx continuing on %s
sharing/iWork-publishing-fetch
[CRIT] UNREACHABLE: No error and invalid number of records %lu
[CRIT] Assertion failed: path.br_isAbsolutePath
[CRIT] Assertion failed: _session
[CRIT] Assertion failed: fileID != 0ULL
[CRIT] Assertion failed: self.exists
[CRIT] Assertion failed: self.isUnixDir
[CRIT] Assertion failed: self.isInPackage
[DEBUG] closing fd:%d
[CRIT] API MISUSE: -resolveAndKeepOpen must be balanced with -close
[CRIT] Assertion failed: _getOpenRefCount(self) == 0
[CRIT] Assertion failed: [self isResolved]
[CRIT] Assertion failed: self.isResolved
[CRIT] Assertion failed: _type != BRCRelativePathTypeUnknown
[CRIT] Assertion failed: !_basePath || self.basePath.isResolved
[CRIT] Assertion failed: self.isRoot || self.basePath.isResolved
[CRIT] Assertion failed: _absolutePath.br_isAbsolutePath
[CRIT] Assertion failed: !_relativePath.br_isAbsolutePath
[CRIT] Assertion failed: self.isFault
[CRIT] Assertion failed: _fd >= 0
[CRIT] Assertion failed: self.isSymLink
[CRIT] Assertion failed: self.isFile
[CRIT] Assertion failed: _fd < 0
[CRIT] Assertion failed: _basePath
[ERROR] no base path
[DEBUG] can't resolve base path %@ %{errno}d
[DEBUG] can't open base path %@ %{errno}d
[DEBUG] base path %@ is not a directory
[ERROR] relative package root path can not be equal to relative path = %@
[CRIT] UNREACHABLE: Detected unbound package resolution recursion for %@
[DEBUG] new base for '%@' - %@
[DEBUG] can't resolve package root %@ %{errno}d
[DEBUG] can't open package root %@ %{errno}d
[DEBUG] package root %@ is not a directory
[CRIT] Assertion failed: !_relativePath
[CRIT] Assertion failed: !_basePath
[DEBUG] can't open %@' %{errno}d
[CRIT] UNREACHABLE: a root should always be openable
[DEBUG] resolved-path:'%@' outside of requested roots:'%@'
[NOTICE] resolved-path:'%@' outside of base path:'%@'
[ERROR] fgetattrlist(%d) at '%@' failed %{errno}d
[DEBUG] Inappropriate file type %c%c%c%c%c%c%c%c%c%c for %@
[DEBUG] Busy file at '%@' fileID:%llu docID:%u gen:%u bt:%llu
[ERROR] failed to unlink legacy ubiquity %s fault at '%s' %{errno}d
[NOTICE] cleaned up legacy ubiquity %s fault at '%s'
[NOTICE] root-dev:%d != dev:%d %@
[DEBUG] Inappropriate location or an alias at '%s'
[DEBUG] Directory is marked as alias, ignoring '%s'
[WARNING] Can't read xattr at '%s' %{errno}d
[CRIT] Assertion failed: _basePath == nil || _basePath->_fd >= 0
[DEBUG] getattrlistat(%d, %s) failed with %s(%d)
[DEBUG] getattrlist(%s) failed with %s(%d)
[DEBUG] parent %@ is not a directory
[CRIT] Assertion failed: _basePath->_fd >= 0
[DEBUG] openat(%d, '%@') failed %{errno}d
[ERROR] openat(%d, '%@') failed %{errno}d
[DEBUG] open('%@') failed %{errno}d
[ERROR] open('%@') failed %{errno}d
[CRIT] Assertion failed: _fileID
[CRIT] Assertion failed: errno > 0
[DEBUG] openbyid_np(%lld) failed: the file was unlinked
[DEBUG] openbyid_np(%lld) failed: the file still exists, but we don't have access to it
[ERROR] BRCOpenByID(%lld) failed %{errno}d
[ERROR] fcntl(%lld, F_GETPATH) failed %{errno}d
[DEBUG] resolved '%@' to %@
[DEBUG] absolute path is excluded because it is a package %@
[DEBUG] resolved-path:'%@' symlink doesn't resolve %{errno}d
[DEBUG] resolved-path:'%@' is excluded
[WARNING] Waited for %f seconds before acquiring lock on the parent folder to re-check faults %@ docID
[CRIT] UNREACHABLE: Really unexpected flock(%@) error  %{errno}d
[CRIT] UNREACHABLE: Failed to acquire exclusive lock on %@, will assign docID to fault %@ anyway
[ERROR] failed allocating documentID for %@ %{errno}d
[CRIT] Assertion failed: _documentID > 0
[ERROR] Exclude document for which we couldn't allocate a documentID for %@
[DEBUG] package without the bundle bit at %@
[WARNING] failed fixing up bundle bit at %@ - %s
[DEBUG] fixed up bundle bit at %@
[CRIT] Assertion failed: !self.isResolved || self.exists
[CRIT] Assertion failed: _parentFileID > 0
[ERROR] the root is closed!
  root: %@
  self: %@
[DEBUG] openat(%d, '%@') failed, base:%@ %{errno}d
[DEBUG] empty parentPath for abs:%@ rel:%@ base:%@
[DEBUG] open('%@') succeeded, fd:%d
[CRIT] Assertion failed: self.isBRAlias
[WARNING] Failed to resolve xattrs for %@: %@
[CRIT] Assertion failed: value >= 0
[CRIT] UNREACHABLE: mutex error: %s
[CRIT] Assertion failed: _getIndex(self, o) == nil
[CRIT] Assertion failed: _array[index] == o
[CRIT] Assertion failed: !_isOpen
sync/side-car-sync-up
[CRIT] Assertion failed: requestID
[DEBUG] Syncing up side car records with request %llu
[DEBUG] We need to create the side car zone on %@ - %@
[ERROR] Failed syncing up side cars on %@ - %@
[DEBUG] finished side car sync up: %@, op: %@
[CRIT] Assertion failed: clientZone
[DEBUG] Faking sync for side car info delete which isn't known to the server
[DEBUG] Deleting side-car record for %@
[CRIT] Assertion failed: itemID
[DEBUG] Syncing up side-car record for %@
[DEBUG] Faking sync of side-car record for %@
[CRIT] Assertion failed: state
account-waiter
[DEBUG] 
%llx handling account change
[DEBUG] 
%llx waiting for account status
[DEBUG] 
%llx got status %ld
[ERROR] Error when asking CloudKit about the account status: %@
[DEBUG] No account loaded yet, let's wait for the account notification from CloudKit
[DEBUG] Account is restricted let's wait for a notification from CloudKit
[DEBUG] Account is temporarily unavailable, let's wait for a notification from CloudKit
[CRIT] UNREACHABLE: unknown account status
[DEBUG] Account is now available
[DEBUG] 
%llx %@: scheduling
[DEBUG] cancelled
[CRIT] Assertion failed: jobID
[CRIT] Assertion failed: stamps.state != BRCJobStateInvalid
[DEBUG] %@[%@]: post-poning job
[CRIT] Assertion failed: _session.clientDB.changes <= 1
[DEBUG] %@[%@]: created job with state %s
[DEBUG] %@[%@]: updated job %s->%s
[CRIT] Assertion failed: state >= BRCJobStateSuspendedBase
[DEBUG] %@: retrying %lld suspended jobs matching %@ in %s
[CRIT] Assertion failed: throttle
[CRIT] Assertion failed: !rs.next
[DEBUG] %@[%@]: backing off %.3fs (count: %d)
[DEBUG] %@[%@]: Updated %lld jobs to state %s
[DEBUG] %@[%@]: Deleted %lld jobs
[DEBUG] %@[%@]: resetting backoff for job
[DEBUG] %@: Cleaned up %lld expired jobs
[CRIT] UNREACHABLE: must be implemented in subclass
[DEBUG] %@: Throttle id %@ has work
[CRIT] API MISUSE: should be implemented by subclass
[DEBUG] %@: nothing schedulable, going to sleep %s
[DEBUG] %@: going to sleep for %.3fs
[DEBUG] %@: Finishing batch and allowing other jobs to run
[DEBUG] %@: resuming!
[DEBUG] %@: suspending!
[DEBUG] %@: cancelling!
[CRIT] Assertion failed: self.isCancelled
[NOTIF] %@: gathering from %lld to %lld
[NOTIF] matching prefix: %@
[WARNING] Notification pipe got deallocated. Nothing to do
[WARNING] Can't gather anymore because the personaID is incorrect or db has no serial queue
[CRIT] Assertion failed: count >= 0
[CRIT] Assertion failed: appLibrary
[NOTIF] 
%llx Looking for item with ranks >= %lld in %@ (%ld kind %@)
[CRIT] UNREACHABLE: No gathered items enumerator - bailing out
[NOTIF] Creating enumertor %p including dead items: %s
[NOTIF] Ignoring zone root item %@
[CRIT] Assertion failed: !item.isReserved
[NOTIF] Ignoring dead update %@
[NOTIF] %@: queued gathered notification %@
[WARNING] Strange... No updates received and phase isn't done %lu vs %ld
[NOTIF] %@: gather phase ends
[ERROR] %@: EINTR: client gather phase was invalidated
[CRIT] Assertion failed: _receiver == nil
[NOTIF] stripped sharing info for %@
[NOTIF] 
%llx %@ got error %@
[NOTIF] Ancestor isn't resolved yet, discarding %@
[NOTIF] Learning path-match for %@ (was %@)
[NOTIF] Learning itemID for our ancestor: %@
[NOTIF] Learning new fileObjectID for %@: %@ (was %@)
[NOTIF] Update is in the trash, discarding %@
[NOTIF] Queueing INSIDE (in the scope) notification: %@
[NOTIF] Queueing INSIDE (fileObjectID match) notification: %@
[NOTIF] Queueing INSIDE (parentObjectID match) notification: %@
[NOTIF] Queueing OUTSIDE (oldParentFileObjectID match) notification: %@
[NOTIF] Queueing INSIDE (watching containers) notification: %@
[NOTIF] Queueing OUTSIDE (watching containers) notification: %@
[NOTIF] Update is "Documents", discarding: %@
[NOTIF] Update is a directory, discarding %@
[NOTIF] Update is a fault, discarding %@
[NOTIF] Queueing OUTSIDE (moved out library scope) notification: %@
[NOTIF] Queueing INSIDE (below a Documents/ folder) notification: %@
[NOTIF] Queueing INSIDE (not below a Documents/ folder) notification: %@
[NOTIF] Queueing INSIDE (below a .Trash/ folder) notification: %@
[CRIT] Assertion failed: _watchKind & WATCH_ITEM
[NOTIF] Queueing INSIDE (itemID match) notification: %@
[NOTIF] Queueing OUTSIDE (reparented) notification: %@
[NOTIF] Queueing OUTSIDE (dead item) notification: %@
[NOTIF] doing the second phase gathering
[NOTIF] Finished second phase gathering
[NOTIF] 
%llx %@: processing updates %@ [rank:%lld]
[NOTIF] dropping all updates
[NOTIF] dropping %ld updates
[NOTIF] 
%llx %@: received progress acknowledgement
[NOTIF] %@: sending %ld notifications:
[NOTIF]   %@
[NOTIF] 
%llx %@: received notification acknowledgement
[NOTIF] %@: client is really backlogged, invalidating
[NOTIF] 
%llx %@: starting watching ubiquitous scope (docs:%d data:%d ext:%d dirs:%d faults:%d trash:%d) for %@
[ERROR] %@: EALREADY: watch already set up to kind %d
[WARNING] %@: client didn't specify Document or Data Scope
[ERROR] %@: unable to find container %@
[ERROR] %@: Unable to resolve scopes
[NOTIF] Could not create RecursiveListDirectoryContentsOperation for %@
[NOTIF] Waiting for group for list op %@
[NOTIF] Finished gather group for %@
[NOTIF] Finished normal gather phase
[NOTIF] Calling gather reply callback
[CRIT] UNREACHABLE: Invalid notification pipe setup
[NOTIF] Waiting on gather group for %@
[CRIT] Assertion failed: !_listOp
[NOTIF] Finished waiting on gather group
[NOTIF] %@: started watching children of %@ (fsid:%@ id:%@ filename:%@)
[INFO] 
%llx %@ (%@) %s 
[INFO] %@: reply(%@)
[NOTIF] %@: watching items prefixed by "%@"
[ERROR] %@: can't watch %@: %@
[ERROR] %@: can't watch app containers: %@
[WARNING] Path %@ is not an existing container: %@
[WARNING] Path %@ is not an existing app library: %@
[NOTIF] 
%llx invalidating %@
[DEBUG] 
%llx updating dialog...
[DEBUG] User notification completion block should run with %@ persona
[DEBUG] 
%llx sending user reply
[ERROR] can't create user notification: %d
[CRIT] Assertion failed: self->_source == NULL
[WARNING] ignore user notification udate: no KVO observer registered
[ERROR] can't update user notification: %d
[CRIT] Assertion failed: !shareMetadata.share.isFolderShare
[DEBUG] User picked %s response
[ERROR] No completion block for notification %@
[CRIT] Assertion failed: _targetResolved
[CRIT] UNREACHABLE: not in a container
[CRIT] Assertion failed: path.isBRAlias
[ERROR] Not a bookmark at %@
[ERROR] Unable to get bookmark data on bookmark at %@: %@
[ERROR] Invalid signature for bookmark at %@
[CRIT] UNREACHABLE: somebody doesn't understand what bookmarks are for!
[CRIT] UNREACHABLE: not allowing an alias in the same app library as its target
[CRIT] Assertion failed: props[NSURLDocumentIdentifierKey] && [docID isEqualToNumber:props[NSURLDocumentIdentifierKey]]
[ERROR] bookmark is lacking path or document-id: %@
[ERROR] the path isn't within iCloud: %@
[ERROR] the path isn't within a container: %@
[WARNING] no target container %@ for bookmark
[WARNING] no target itemID for %@ in container %@
[WARNING] no target docID for %@ in container %@
[ERROR] the bookmark doesn't resolve: %@
[WARNING] Can't resolve target app library
[CRIT] UNREACHABLE: cannot create bookmark data
[CRIT] Assertion failed: _dataResolved
[DEBUG] wrote %@ at %@
[ERROR] Unable to unlink bookmark at %@ %{errno}d %{errno}d
[DEBUG] Unlinked bookmark at %@
[ERROR] couldn't setup vnode rapid aging %{errno}d
[ERROR] cannot retrieve device ID for '%@': %s
[WARNING] Failed to set the xpc state to done for "%@"
[NOTICE] starting bird
[DEBUG] 
%llx Starting up, welcome, bundle:%@, pid:%d, uid:%d, os:%@, version:%@, home:"%@", in sync bubble:%@
[DEBUG] using Cloud Database class: %@
[WARNING] iCloud Drive is not supported on this OS
[DEBUG] 
%llx sending token change notification
[CRIT] Assertion failed: qos_class_self() == QOS_CLASS_DEFAULT
[CRIT] Assertion failed: getiopolicy_np(IOPOL_TYPE_VFS_MATERIALIZE_DATALESS_FILES, IOPOL_SCOPE_PROCESS) == IOPOL_MATERIALIZE_DATALESS_FILES_OFF
[WARNING] No accept operation found for key %@
[NOTICE] Language changed, exiting
[DEBUG] 
%llx received new XPC connection: %@
[WARNING] Denying xpc connection because the daemon is in the sync bubble
[DEBUG] welcome %@!
[DEBUG] 
%llx Client %@ connection was invalidated
[ERROR] error creating connection labeled '%@': %@
[DEBUG] sending server availability: %savailable (%@)
[DEBUG] sending server availability: %x (%@)
[NOTICE] starting exit sequence because of received signal (%s)
[NOTICE] exiting with code %d...
[CRIT] UNREACHABLE: Copying share for item %@ that does not have a server zone
[CRIT] UNREACHABLE: Item's %@ server zone %@ is missing sync context while coping share
[WARNING] Fetching the root share object for shared to me child item %@
sharing/copy-share
[CRIT] UNREACHABLE: Can't find root itemID %@
[CRIT] UNREACHABLE: Can't find URL for root itemID %@
[WARNING] No sharing identity on %@
[WARNING] No base token on %@
[CRIT] Assertion failed: [matchingQuery isKindOfClass:[BRCServerZone class]]
[CRIT] Assertion failed: serverItem || localItem
[DEBUG] Apply Changes: (missing parent found: %@)
[DEBUG] Apply Changes: retrying %lld suspended throttles (missing parent found: %@)
[DEBUG] Apply Changes: retrying %lld suspended throttles (child %@ of %@ killed or reparented)
[DEBUG] Apply Changes: retrying %lld suspended rejected throttles (child %@ of %@ killed or reparented)
[DEBUG] Apply Changes: retrying %lld suspended throttles (appLibrary completed migration: %@)
[DEBUG] Apply Changes: retrying suspended rank %lld
[CRIT] Assertion failed: !shouldFixup || !serverZone.isSharedZone || ![serverZone.zoneName isEqualToString:BRUbiquitousDefaultContainerID]
[DEBUG] Updated %@ to be a non-fault
[DEBUG] No point in rescheduling items under %@ because we can't make it a non-fault
[DEBUG] Apply Changes: Rescheduled %lld items which were blocked for greediness when listing folder %@
[DEBUG] Apply Changes: No unscheduled items parented to %@
[DEBUG] Apply Changes: repopulating throttles for zone:%@
[CRIT] UNREACHABLE: Apply Changes for rank %lld in table %@ seems to keep failing. retry_count: %lld
apply-changes
[CRIT] Assertion failed: zone
[INFO] 
%llx Apply Changes[%@]: attempting to apply %s
  server item: %@
  local item:  %@
[CRIT] Assertion failed: si == nil
[DEBUG] 
%llx Apply Changes[%@]: deleting action without local and server item
[DEBUG] 
%llx Apply Changes[%@]: deleting rejected action with a non-rejected local item
[DEBUG] 
%llx Apply Changes[%@]: deleting useless action %lld vs %lld
[DEBUG] Apply Changes[%@]: Suspending action until the coordination callback
[DEBUG] Signalled faulting-barrier waiters for %@
[DEBUG] Monitoring faulting for %@
[DEBUG] Stop monitoring faulting for %@
[DEBUG] Apply Changes: reached maximum allowed number of coordinations (%ld)
[DEBUG] Apply Changes[%lld]: Rescheduling because coordination completed
[DEBUG] Apply Changes[%lld]: Skipping rescheduling because throttle was not suspended for coordination
[CRIT] UNREACHABLE: no writer for zone %@
[DEBUG] Apply Changes: below half maximum allowed number of coordinations (%ld)
[DEBUG] Apply Changes: Cleaned up %lld stale throttles
[CRIT] UNREACHABLE: failed to insert into client_unapplied_commands: %@
[DEBUG] Apply Changes [%lld .. %lld]: in %@, %llu ranks inserted
[DEBUG] Apply Changes [] in %@, 0 ranks inserted
[DEBUG] 
%llx did sync down requestID:%llu, applying server truth on %@
[CRIT] Assertion failed: li.isRejected
[WARNING] Rejected item %@ was remotely revived by %@.  Updating as such
[WARNING] Rejected item %@ doesn't have an apply job.  Re-creating the apply job
[WARNING] Item %@ is missing an apply throttle
[DEBUG] Apply Changes: Rescheduled %u throttles missing from the apply table
[CRIT] Assertion failed: !si.isLive || !li.isRejected
[ERROR] Throttle %@ isn't a dictionary
[ERROR] Platforms %@ isn't an array
[DEBUG] throttle dict %@ isn't for our platform %@
[ERROR] Failed to make %@ owned by mobile: %@
[ERROR] Error enumerating %@: %@
[INFO] ~/Library/Application Support/CloudDocs/session does not exist. No need to back up.
[ERROR] Unable to delete existing destination directory at %@: %@
[ERROR] Could not create destination directory %@: %@
[DEBUG] %@
[NOTICE] Calling completion block with URL: %@, error: %@
[ERROR] rootURL is nil, nothing to enumerate.
[ERROR] %@ does not exist, nothing to enumerate.
[ERROR] Could not get the canonical path for the root URL %@. Error: %@
[ERROR] Enumeration error: %@. Error: %@
[ERROR] Failed to fetch resource values for %@. Error: %@
[ERROR] Failed to remove directory %@: %@
[DEBUG] container state now needs flush: %@
[WARNING] no path for an app library
[CRIT] Assertion failed: zoneRowID
[CRIT] Assertion failed: mangledID.isPrivate
[CRIT] API MISUSE: unexpected parameter
[CRIT] Assertion failed: dbRowID
[CRIT] UNREACHABLE: associating nil client zone for %@
[DEBUG] closing app library: %@
[DEBUG] cancelling file coordination requests %@
[DEBUG] First ubiquity client using container, schedule each item for download (client: %@, container: %@).
[CRIT] Assertion failed: rootItem.isDirectory
[DEBUG] %@ forces %@ to be greedy
[DEBUG] %@ no longer forces %@ to be greedy
[DEBUG] Last ubiquity client exited, no longer greedy (container: %@)
[CRIT] Assertion failed: !_activated
[CRIT] Assertion failed: state == BRCAppLibraryStateNotActivated || !(state & BRCAppLibraryStateNotActivated)
[DEBUG] %@ state changed, was %@
[NOTICE] downloading everything in %@ because the app is now installed
[NOTICE] evicting everything in %@ because the app was removed
[DEBUG] Updating documents folder to be of server type %@
[INFO] %@ becomes %@
[DEBUG] don't be greedy if app is not installed, even though optimize storage is disabled
[DEBUG] greediness enforced because optimize storage is disabled
[DEBUG] app library greediness enforced by user defaults
[DEBUG] don't be greedy if app is not installed
[DEBUG] greediness enforced because library has clients connected
[CRIT] UNREACHABLE: asking for no scopes?
[CRIT] Assertion failed: docsOrDataScopeInjection || externalScopeInjection
[DEBUG] There's already a pending coordinated I/O for %@, not really scheduling it
[DEBUG] Releasing coordinated %s I/O slot for r:%@ for %@
[DEBUG] Allocated pending coordinated %s I/O for %@
[DEBUG] app library root file id changed from %@ to %@ for %@
[CRIT] Assertion failed: self.isiCloudDesktopAppLibrary
[ERROR] fs-root moved on disk, but this is not the root item %@ is tracking
 tracking: %@, received: %@
[DEBUG] %@: app library fs root was removed
[DEBUG] 
%llx updating %@ from %@
[DEBUG] Done scanning container: %@, fileID:%@ generationID:%@
[CRIT] Assertion failed: oldAppLibrary.state & BRCAppLibraryStateNeedsLost
[DEBUG] Lost directory with dead children found, kick syncUp
[DEBUG] %@ is not pristine with child item count %@ and server count %@
[DEBUG] Listing documents folder to fetch pristineness for %@
[DEBUG] Listing trash folder for %@
[CRIT] Assertion failed: client
[CRIT] Assertion failed: ![_foregroundClients containsObject:client]
[DEBUG] app library %@ became foreground
[CRIT] Assertion failed: [_foregroundClients containsObject:client]
[DEBUG] app library %@ moved to background
[CRIT] UNREACHABLE: %@ has foreground clients but the transfer sync context doesn't contain self
[CRIT] UNREACHABLE: %@ has foreground clients but the metadata sync context doesn't contain self
[CRIT] UNREACHABLE: %@ has foreground clients but target shared zone %@ isn't targeted
[CRIT] UNREACHABLE: target shared zone %@ of %@ should be boosted
[CRIT] UNREACHABLE: %@ has too many target shared server zones %@
[CRIT] UNREACHABLE: %@ has no foreground clients but the transfer sync contains self
[CRIT] UNREACHABLE: %@ has no foreground clients but the metadata sync context contains self
[DEBUG] 
%llx recomputing evicted state for %@ (has fetched initial apps: %d)
[DEBUG] updating evict status: %s
[DEBUG] evict status remains: %s
[DEBUG] Item with rowid %llu is still targeting %@ for %@
[DEBUG] resolving target shared zones for app library %@
[CRIT] Assertion failed: _foregroundClients.count == 1
[DEBUG] resolved target shared zones %@ for app library %@
[CRIT] Assertion failed: _foregroundClients.count == 0
[DEBUG] removing all target app libraries from %@
[DEBUG] attempting to remove target server zone %@ from %@
[DEBUG] not removing target shared zone %@ from %@
[DEBUG] %@ is not a target shared zone of %@ anymore
[DEBUG] not removing target shared zone %@ from %@, because it's still targeting it
[DEBUG] attempting to add target shared server zone %@ to %@
[DEBUG] Added %@ as foreground client to %@
[CRIT] Assertion failed: unsaltedBookmarkData
[CRIT] UNREACHABLE: nil dbRowID for %@
[DEBUG] container-metadata needs sync up for %@
[CRIT] Assertion failed: _initialRetryCount <= _finalRetryCount
[CRIT] Assertion failed: _minimumNsecsBetweenRetries <= _maximumNsecsBetweenRetries
[CRIT] Assertion failed: _minimumNsecsBetweenRetries > 0
[CRIT] Assertion failed: _maximumNsecsBetweenRetries > 0
[CRIT] Assertion failed: _nsecsBeforeForgettingCounter >= _maximumNsecsBetweenRetries
[DEBUG] We haven't finished the previous throttle
[DEBUG] Forgetting retry counter
[DEBUG] gave up on %@/%llx (retry-count:%u)
[DEBUG] backing off %@/%llx for %llu milliseconds (retry-count:%u)
[CRIT] API MISUSE: unhandled format specifier
[ERROR] unhandled format specifier %%%c
[WARNING] fileURL is excluded at %@
[DEBUG] Busy file at '%@' fileID:%llu gen:%u bt:%llu
[ERROR] failed to unlink legacy ubiquity %s fault at '%@' %{errno}d
[NOTICE] cleaned up legacy ubiquity %s fault at '%@'
[DEBUG] Inappropriate location or an alias for '%@'
[DEBUG] Directory is marked as alias, ignoring '%@'
[WARNING] Can't read xattr for '%@' %{errno}d
[DEBUG] BR alias is ignored at '%@'
[WARNING] Excluding item with promise name that isn't a promise '%@'
[WARNING] Can't read symlink at '%s'
[CRIT] Assertion failed: _symlinkContent.fileSystemRepresentation != nil
[ERROR] Failed opening %@ %{errno}d
[DEBUG] Downloader[%@]: %@ (%llu -> %llu)
[WARNING] No appLibraryEntry for Downloader[%@-%s-%@] with transfer_operation %@
[DEBUG] 
%llx Downloader[%@-%s-%@]: download %@
[DEBUG] Got an out of space error %@
[DEBUG] Rescheduling %@ (%@) for retriable error: %@
[ERROR] Got non recoverable error when downloading %@: %@
[DEBUG] The error is for an unknown item, check if the zone hasn't been wiped
[DEBUG] We failed downloading a conflict loser so kicking the apply scheduler in case it was blocked for download
[DEBUG] Apply Changes[%lld]: %@ state is %s
[DEBUG] Downloader: scheduling %lld suspended throttles
[DEBUG] Downloader: not enough space to download anything (%@ < %@)
[DEBUG] Downloader: scheduled %lld pending-disk throttles, which will still leave %@ of free disk space
[DEBUG] Downloader[%@-%s-%@]: Cancelling download
[DEBUG] Downloader[%@-%s-%@]: Cleaning up download stage: %@
[DEBUG] adding alias item %@ to currently transfering %@
[DEBUG] Refreshed active download size %llu -> %llu
[DEBUG] removed %lld items in pkg:%@
[ERROR] We should have a stageID for this item: %@
[DEBUG] 
%llx scheduling content download for %@
local: %@
server: %@
[DEBUG] no need to schedule anything, we're already actively downloading that same etag
[DEBUG] no need to schedule anything, we're already attempting to download that same version
[ERROR] can't get permanent storage of %@: %@
[WARNING] Failed to remove additions : %@
[DEBUG] removed additions from %@
[DEBUG] resolved losers needing deletion: {%@}
{%@}
[DEBUG] losers needing deletion: {%@}-{%@}
[DEBUG] 
%llx scheduling download of losers %@ for item %@
[DEBUG] 
%llx download etag: %@
[DEBUG] Not rescheduling download %@ which hit a permanent failure
[CRIT] UNREACHABLE: We thought we finished downloading loser etag %@ for %@ but it wasn't found, so rescheduling
[DEBUG] we're done downloading %@
[DEBUG] rescheduling winner
[DEBUG] suspending apply for download
[DEBUG] not interested in this download
[CRIT] Assertion failed: addedLosers
[CRIT] Assertion failed: removedLosers
[DEBUG] 
%llx discovering conflict losers which are live at %@
[ERROR] invalid addition name for %@
[WARNING] invalid itemID %@ (for %@ in %@)
[WARNING] ETag %@ is no longer a loser
[DEBUG] live losers: %@
[ERROR] can't remove conflict loser for %@: %@
[DEBUG] 
%llx scheduling thumbnail download for %@
local: %@
server: %@
[DEBUG] no thumbnail, cancelling thumbnail download
[DEBUG] existing throttle thumbnail with etag:%@
[DEBUG] cancelling thumbnail throttle with etag:%@
[ERROR] Failed removing thumbnail from %@ - %@
[DEBUG] existing thumbnail for %@_%@ has state %s
[DEBUG] thumbnail for %@_%@ associated, notifying file coordinator
[ERROR] Failed to save thumbnail from %@: %@
[DEBUG] thumbnail for %@_%@ still pending download
[DEBUG] thumbnail for %@_%@ has state %s
[DEBUG] Rescheduled %lld in-flight transfers because we have restarted
[DEBUG] Kicking downloads for %@
[CRIT] UNREACHABLE: Downloader[%@]: failed to find app library with id %@, dropping the download %@
[DEBUG] Downloader[%@]: job has been put back in queue %@
[NOTICE] downloading %ld thumbnails in %@
[DEBUG] Downloader[%@]: not enough available disk space (%llu available, %llu needed, %llu minimum)
[DEBUG] Downloader[%lld-%s-%@]: enough disk space to download (%llu available, %llu needed, %llu minimum)
[CRIT] UNREACHABLE: item download %@ etag changed from %@
[WARNING] Completed unit count is greater than version size; ignoring value
[DEBUG] Re-use progress %@
[NOTICE] downloading %ld documents in %@
[DEBUG] Downloader[%lld-%s-%@]: postpone because loser is more recent than live item
[ERROR] backing off: can't resolve storage for %@: %@
[NOTICE] downloading %ld previous documents versions in %@
[DEBUG] Downloader: Recovered from %u missing download jobs
[CRIT] Assertion failed: _indentation > 0
[CRIT] UNREACHABLE: unknown color
[CRIT] UNREACHABLE: only share acceptation fault can be deleted; %@
[ERROR] Failed to create directory in stage %@
[DEBUG] 
%llx scheduling reset %s of %@
[DEBUG] 
%llx reset %s of %@
[DEBUG] zone is already resetting (zone:%@,appLibrary:%@) but adding (%@) for the next reset
[DEBUG] flushing reset state (%@) for container %@
[DEBUG] waiting for %u cancelled operations to finish
[WARNING] giving up on resetting %@
[DEBUG] 
%llx waiting %.3f secs to reset %@
[CRIT] Assertion failed: !self->_resetTimer
[DEBUG] 
%llx continuing reset
[NOTICE] resetting %@: %s
[CRIT] UNREACHABLE: not implemented
[DEBUG] deleting from server truth for %@
[DEBUG] deleting from client truth for %@
[DEBUG] Keeping client items during reset%s
[WARNING] Found a top level item that still needs to delete its alias %@.  Inserting a tombstone
[CRIT] UNREACHABLE: Failed to save to db without an error
[DEBUG] Failed to save item %@ while resetting - %@
[ERROR] failed pruning client_items: %@
[CRIT] Assertion failed: self.isSharedZone
[DEBUG] cancelling sync up operation %@
[DEBUG] cancelling sync down operation %@
[DEBUG] Cancelling operation %@
[DEBUG] 
%llx finishing %@ of %@
[DEBUG] finished %@ of %@ but we still need to delete data
[DEBUG] finished %@ of %@
[ERROR] Failed to signal reimport of %@ - %@
[CRIT] UNREACHABLE: can't czm move clouddocs zone
[CRIT] UNREACHABLE: Can't CZM the clouddocs zone
[CRIT] Assertion failed: _itemScope != BRC_ITEM_SCOPE_UNKNOWN || _state == BRC_ITEM_STATE_RESERVED || _state == BRC_ITEM_STATE_TOMBSTONE
[CRIT] Assertion failed: [s isKindOfClass:[NSMutableString class]]
[CRIT] Assertion failed: !_tmpBouncedNo || ![self.logicalName isEqualToString:name]
[CRIT] UNREACHABLE: got a fault name
[DEBUG] Not overriding name equal to bounced name %@
[CRIT] UNREACHABLE: can't move aside a root item!
[CRIT] Assertion failed: _state == BRC_ITEM_STATE_TOMBSTONE
[CRIT] Assertion failed: _type != BRC_ITEM_TYPE_ALIAS
[CRIT] Assertion failed: bounceNumber >= 2
[WARNING] No logical name for %@
[WARNING] Updating filename during CZM processing to %@
[CRIT] Assertion failed: _state == BRC_ITEM_STATE_LOST || _state == BRC_ITEM_STATE_LOST_ZOMBIE
[CRIT] Assertion failed: BRCItemTypeIsDirectory(_type)
[CRIT] Assertion failed: _state == BRC_ITEM_STATE_LOST
[CRIT] UNREACHABLE: unknown type
[CRIT] Assertion failed: _stagedFileID
[CRIT] Assertion failed: _stagedGenerationID
[CRIT] Assertion failed: !BRCItemTypeIsDirectory(_type)
[CRIT] Assertion failed: [_physicalName br_isSideFaultName]
[CRIT] Assertion failed: ![_physicalName br_isSideFaultName]
[CRIT] Assertion failed: !_aliasTarget || [_aliasTarget isEqualToString:st.aliasTarget]
[CRIT] Assertion failed: aliasItem.isBRAlias
[CRIT] UNREACHABLE: -asBRAlias called on a non alias
[CRIT] UNREACHABLE: -asDirectory called on a non directory
[CRIT] UNREACHABLE: -asDocument called on a non document
[CRIT] UNREACHABLE: -asShareableItem called on a non shareable item
[CRIT] UNREACHABLE: -asFSRoot called on a non root
[CRIT] UNREACHABLE: -asSymlink called on a non symlink
[CRIT] UNREACHABLE: -asFinderBookmark called on a non symlink
[CRIT] UNREACHABLE: -asShareAcceptationFault called on a non fault
[CRIT] UNREACHABLE: unknown item type
[CRIT] UNREACHABLE: Asked parent file objectID on a zone root
[CRIT] UNREACHABLE: Can't find parent file objectID
[CRIT] UNREACHABLE: asked to refresh the app library of a root item
[CRIT] UNREACHABLE: hierarchy too deep to compute the app library root of %@
[CRIT] Assertion failed: _appLibrary
[CRIT] UNREACHABLE: Asked to get the top-level item of a non shared top level item: %@
[DEBUG] Needs rename because local name %@ differs from real name %@
[CRIT] Assertion failed: parentItem->_minimumSupportedOSRowID
[CRIT] Assertion failed: !_minimumSupportedOSRowID
[DEBUG] %@: inheriting %@ minimum supported OS
[DEBUG] %@ needs %@ to sync-up
[CRIT] UNREACHABLE: can't add the OS NAME
[CRIT] UNREACHABLE: Local items must be initialized with initFromPQLResultSet:container:error:
[CRIT] Assertion failed: self.isReserved
[CRIT] UNREACHABLE: Asked for side car info on an item that doesn't have side cars
[CRIT] Assertion failed: !self.itemID.isNonDesktopRoot
[CRIT] UNREACHABLE: item without parentID
[CRIT] UNREACHABLE: orphan detected %@ under parent %@ in %@
[CRIT] UNREACHABLE: item parented to a document: %@ parented to %@ type %@
[CRIT] UNREACHABLE: Can't ask the parent item of a FS root
[DEBUG] Using parent %@ for %@ because it's in the CZM fault list
[CRIT] UNREACHABLE: item without parentID under parent %@
[CRIT] UNREACHABLE: item parented to a document: %@ parented to %@
[DEBUG] remove documents folder
[DEBUG] 
%llx creating sync-up job
[DEBUG] we have structural diffs to send
[DEBUG] we don't have a corresponding alias item, but we have changes that requires alias creation
[DEBUG] we don't have a corresponding alias item, and the diffs do not require alias creation, dropping the diffs
[WARNING] We have a shared item inside another shared zone. Not creating sync up job
[DEBUG] dropping structural diffs because we don't have alias sync masks in the private zone
[DEBUG] we have diffs to send
[DEBUG] Detected sync up state change
[DEBUG] Finishing sync up for %@ in %@
[CRIT] Assertion failed: syncUpDiffs == 0
[DEBUG] Not finishing sync up because item is in-flight in %@
[DEBUG] Rescheduling upload for %@
[CRIT] UNREACHABLE: Didn't detect the local sync up state change for %@
[CRIT] Assertion failed: self.isReserved || _appLibrary
[CRIT] UNREACHABLE: Circular parenting chain
[ERROR] Encountered circular parenting chain
[DEBUG] Queueing notification %@ for rank: %lld
[ERROR] Failed to %s the spotlight attribute at %@ %{errno}d
[DEBUG] %s the spotlight attribute at %@
[CRIT] Assertion failed: self.appLibrary
[DEBUG] 
%llx Saving item %@
[DEBUG] Item is already force-deleted, skipping save
[DEBUG] Force deletion has been asked, comply
[DEBUG] Deleting tombstone because it's synced up
[DEBUG] Deleting tombstone because it's no known to server
[DEBUG] Telling new app library about lost state
[DEBUG] item with a minimum supported OS just changed, checking if we need to reattempt upload
[DEBUG] item went out of lost state
[DEBUG] this item changed significantly
[DEBUG] Forcing sync up of side car zone when item changed path extension
[DEBUG] We received our first shared to me child item, schedulding side car sync
[DEBUG] Offline work, skipping notification
[DEBUG] %s. changedFields:%@ sendNotif:%s serverUpdate:%s
[DEBUG] not dropping already reserved/dead/almost dead item from the working set %@
[CRIT] UNREACHABLE: there should be a fileObjectID for %@
[ERROR] failed to save item %@ to DB: %@
[CRIT] UNREACHABLE: saving items should really always work: %@
[CRIT] Assertion failed: !appLibrary.isCloudDocsAppLibrary
[CRIT] Assertion failed: parentScope != BRC_ITEM_SCOPE_DATA || !parentVisible
[CRIT] Assertion failed: parentScope == BRC_ITEM_SCOPE_DOCUMENTS
[CRIT] UNREACHABLE: Can't find parent %@(%@)
[DEBUG] learning new sharing options %@ for %@
[CRIT] Assertion failed: (_sharingOptions & BRCSharingItemHasShareID) == 0
[DEBUG] Item changed read-onlyness.  Updaing the path with the new mode
[ERROR] Failed to chmod the file - %s
[CRIT] Assertion failed: _syncUpState == BRC_SUS_REJECTED
[DEBUG] Forcing sync up of shared item in the trash %@
[DEBUG] Marking %@ as edited since shared because we are syncing up an edit
[DEBUG] Ignoring sync up request on item needing OOB_SYNC_ACK with no field changes
[CRIT] UNREACHABLE: we should always have a corresponding server item for already sync-ed up items - %@
[DEBUG] Creating apply job because we have diffs with the server item but have no need to sync them. diffs:(%@)
[DEBUG] Learning structural ETag, because item has no real structural change
[DEBUG] Learning content ETag, because item has no real content change
[WARNING] Not forcing sync up of share-to-me top level item %@
[WARNING] Not forcing sync up of share-to-me child item with a dead root share %@
[WARNING] Rejected item %@ has meaningful local diffs.  Forcing re-sync of all fields
[CRIT] Assertion failed: self.isReadAndUploaded || self.isKnownByServerOrInFlight
[CRIT] UNREACHABLE: Rejected item %@ is documents folder.  Force syncing on all
[DEBUG] Rejected item %@ has meaningful local diffs.  Forcing sync on all
[DEBUG] we are still syncing %@
[DEBUG] we still have diffs to send: %@
[CRIT] Assertion failed: _syncUpState != BRC_SUS_IDLE
[WARNING] Unknown item must need an itemID change
[WARNING] Can't reserve an fsroot %@
[DEBUG] reserved %@
[CRIT] Assertion failed: self.isDead && self.isDeadOrMissingInServerTruth
[CRIT] Assertion failed: _st.state == BRC_ITEM_STATE_TOMBSTONE || _st.state == BRC_ITEM_STATE_LOST || _st.state == BRC_ITEM_STATE_LOST_ZOMBIE
[DEBUG] Shared to me child item was removed so bumping lost throttle on its parent
[DEBUG] 
%llx marking renamed from server item
  server: %@
  relpath: %@
  parentID: %@
[CRIT] Assertion failed: _st.stagedFileID
[DEBUG] Learning parent sharing options because there is no shareID on this item
[DEBUG] updating st-etag:%@ from server item: %@
[CRIT] Assertion failed: serverItem
[CRIT] Assertion failed: ckInfo
[DEBUG] Also updating side car ckinfo:%@
[CRIT] UNREACHABLE: can't mark live from stage
[CRIT] Assertion failed: bounceNumber && serverLogicalName
[CRIT] UNREACHABLE: invalid sync up state
[DEBUG] 
%llx request to evict client item %@:%@ with options %@
[WARNING] ignoring eviction request for %@ because item is dead
[WARNING] ignoring eviction request for %@ because app library is used by a ubiquity client
[DEBUG] 
%llx request to download client item %@:%@ with options %@
[CRIT] Assertion failed: (options & BRCDownloadDiscretionary) == 0 || (options & BRCDownloadUserInitiated) == 0
[WARNING] ignoring download request for %@ because item is dead
[ERROR] item %@ is missing a doc id
[CRIT] Assertion failed: locBlobOut == NULL
[DEBUG] added xattr %s (%lld bytes)
[WARNING] Ignoring xattr which is too large %s
[WARNING] skipping xattr %s (size:%zd) because we don't have enough space anymore
[DEBUG] serialized xattr %s (blob size:%ld)
[WARNING] removing xattr %s failed %{errno}d
[DEBUG] removed xattr %s
[DEBUG] localItem: %@
[DEBUG] unsupported attribute: %@
[DEBUG] No value for attribute: %@
[DEBUG] returning %@
[CRIT] Assertion failed: ownerIdentity
[DEBUG] Sync: no global budget anymore: %@
[DEBUG] Push notification source created in a disabled state
[WARNING] Failed to defer the state
[DEBUG] Enabling push topics registration
[DEBUG] unscheduling app library %@
[DEBUG] 
%llx closing %@
[DEBUG] 
%llx shutting down periodic metadata sync
[DEBUG] 
%llx cancelling containerMetadataSyncSource...
[DEBUG] 
%llx cancelling sharedDatabaseSyncSource
[DEBUG] 
%llx cancelling zoneHealthSyncSource
[DEBUG] 
%llx cancelling migrateZonePCSSource
[DEBUG] 
%llx cancelling sideCarSyncSource
[DEBUG] 
%llx cancelling periodicSyncOperation
[DEBUG] unscheduling client zone %@
[DEBUG] 
%llx waiting for %@ to finish
[DEBUG] 
%llx loading containers
[DEBUG] 
%llx Considering containers needing forced sync down
[ERROR] periodic sync failed %@
[DEBUG] Sync: resuming sync
[DEBUG] 
%llx just synced down the default container
[DEBUG] marking container-metadata needs-sync-down
[DEBUG] scheduling sync for sharedb in %llus
[DEBUG] scheduling sync for zone-health
[DEBUG] scheduling sync for side-car
[DEBUG] scheduling sync for zone-pcs
[DEBUG] marking side-car needs-sync-up
[DEBUG] marking zone-health needs-sync-up
[DEBUG] marking container-metadata needs-sync-up
[DEBUG] 
%llx scheduling container-metadata sync
[DEBUG] already syncing container-metadata
[DEBUG] done syncing container-metadata
[DEBUG] 
%llx resetting container-metadata: %s
[DEBUG] 
%llx scheduling shared-db sync
[DEBUG] already syncing shared-db
[CRIT] UNREACHABLE: we shouldn't be asked to sync up the shared DB
[DEBUG] done syncing shared-db
[DEBUG] Finished sharedb sync down with more coming: %s, error %@
[DEBUG] 
%llx scheduling zone-health sync
[DEBUG] already syncing zone-health
[DEBUG] done syncing zone-health
[WARNING] Resetting zone health
[DEBUG] 
%llx scheduling side-car sync
[DEBUG] already syncing side-car
[DEBUG] done syncing side-car
[WARNING] Resetting side car zone
[DEBUG] Updated zone health sync token:%@ requestID:%lld
[DEBUG] Completed zone health sync requestID:%lld error:%@
[DEBUG] Updated side car sync token:%@ requestID:%lld
[DEBUG] 
%llx starting cross zone move migration PCS prep
[CRIT] Assertion failed: _migrateZonePCSOperation == nil
[WARNING] Container became foreground that we didn't think was installed, forcing an apps list refresh
[DEBUG] scheduling push topics registration
[DEBUG] 
%llx updating push topics
[CRIT] Assertion failed: ckContainer
[NOTICE] Setting push environment to %@
[ERROR] Unable to get a push environment from cloudd, default to %@ : %@
[CRIT] Assertion failed: _pushConnection
[DEBUG] Not registering for pushes on container %@ because sync is disabled due to no corresponding app being installed
[DEBUG] foreground topics: %@
[DEBUG] received %@ push token %@ for %@:%@
[DEBUG] received public push token %@
[ERROR] unable to parse push for topic:'%@' payload:%@
[DEBUG] 
%llx received a push in the %@ database for topic:'%@' payload:%@ token:%@
[NOTICE] received a push for the container-metadata zone
[NOTICE] received a push for the zone-health zone
[NOTICE] received a push for the side-car zone
[NOTICE] received a push for client zone %@
[NOTICE] received a push for app library %@ -> zone %@
[NOTICE] receiving a push for an unknown ID %@ -> com.apple.CloudDocs
[NOTICE] receiving a push for an unknown ID shared zone %@, creating the zone
[DEBUG] 
%llx scheduling sync down for client zone %@ because of a push
[WARNING] no zone found, dropping the push
[DEBUG] Also scheduling a sync down on the private zone %@
[CRIT] UNREACHABLE: dropping push notification because we can't adopt persona
[WARNING] Can't open UIKit : %s
[CRIT] UNREACHABLE: invalid push topic '%s' (expected prefix '%s')
[CRIT] UNREACHABLE: invalid push payload[%@] %@
[CRIT] UNREACHABLE: invalid push ZoneIdentifier at payload[%@] %@
[CRIT] UNREACHABLE: invalid push DatabaseScope at payload[%@] %@
[CRIT] UNREACHABLE: invalid push ZoneOwnerID at payload[%@] %@
sharing/access-token
[CRIT] UNREACHABLE: encrypted access token %@ is of unexpected type
[CRIT] UNREACHABLE: reference identifier %@ is of unexpected type
[DEBUG] we're a document missing a content signature
[DEBUG] Document is sync paused or resuming sync -> ignore the missing content signature
[DEBUG] we're a document missing a thumbnail signature
[DEBUG] Document is sync paused or resuming sync -> ignore the missing thumbnail signature
[DEBUG] we're a document with an xattr change
[DEBUG] Document is sync paused or resuming sync -> ignore xattr change
[DEBUG] we're a document with an uploaded asset change
[DEBUG] we're a document with an upload error change
[WARNING] Not clearning signatures on item with prev zone global ID %@
[CRIT] Assertion failed: self.isFinderBookmark || BRCItemTypeIsDocument(_st.type)
[DEBUG] don't be greedy because the app library is not greedy, even though optimize storage is disabled
[DEBUG] greediness enforced because item is part of Wallet's container
[DEBUG] greediness enforced because document UTI is not evictable
[DEBUG] don't be greedy because document is too old (mtime: %lld; max age: %lld days)
[CRIT] Assertion failed: item.isDocument
[CRIT] UNREACHABLE: document without a version:
    %@
   this typically indicates either of two problems:
    - either we failed processing the last sync down and we
      saved the structure record but not the contents record,
    - or the server forgot to send us a contents record.
[CRIT] Assertion failed: !info || info.isDocument
[DEBUG] Clearing signatures: %@
[CRIT] Assertion failed: serverItem.isDocument
[CRIT] Assertion failed: self.isDocument
[CRIT] UNREACHABLE: Server item missing a version %@
[CRIT] Assertion failed: [serverItem.latestVersion diffAgainst:_currentVersion] == 0 || (serverItem.isDead && self.isDead)
[ERROR] name is nil
[ERROR] Unable to stage fault: %@
[CRIT] Assertion failed: options
[DEBUG] 
%llx requesting to stage %@
  server: %@
   local: %@
[DEBUG] downloading the content because the latest version is small
[CRIT] Assertion failed: !isSyncPaused || ((options & BRCDesiredVersionWantsContent) && !self.isFault)
[ERROR] No version to stage for %@
[CRIT] UNREACHABLE: No version on server item
[CRIT] Assertion failed: options & BRCDesiredVersionWantsThumbnail
[DEBUG] Version to make live has only metadata changes with current version: %@
[WARNING] Force apply because we need to update the permissions
[DEBUG] Updating filename from server item because it matches the bounced name
[DEBUG] Proceeding with apply changes for metadata only update
diff w/ current: %@ / %@
diff w/ server-item: %@
needs permission for sharing update: %s
needs thumbnail: %s
[DEBUG] Version to make live has only metadata changes with previous one to make live: %@
[DEBUG] Proceeding with apply changes for staged version to make live
[DEBUG] Proceeding with apply changes since reserved items don't need to flush
[DEBUG] Learn sharing and owner from server record for diffs: %@
[CRIT] Assertion failed: state != BRCJobStateSuspendApplyForDownload || (options & BRCDesiredVersionWantsContent)
[DEBUG] Apply Changes[%lld]: state:%s options:%@ (thumbnail:%s losers:%s)
[DEBUG] clearing desired version
[DEBUG] updating ct-etag:%@ from server item: %@
[CRIT] Assertion failed: serverItem.latestVersion
[WARNING] We think this is a meta only update but it isn't (%llu)!
 latest-version: %@
 current-verions: %@
[DEBUG] Marking %@ as edited since shared because the item differs in edit mask
[DEBUG] forcing iwork conflict etag on %@ to be %@
[DEBUG] removing conflict loser with etag %@
[DEBUG] there is no conflict loser with etag %@
[CRIT] UNREACHABLE: we're making a file live without a version
[DEBUG] Marking %@ as edited since shared because the desired version differs in edit mask
[CRIT] Assertion failed: self.isFault == _desiredVersion.isFault
[DEBUG] Clearing prev zone rowID and inserting tombstone for item which finished syncing to the new zone
[DEBUG] 
%llx marking force upload: %@
[CRIT] UNREACHABLE: trying to force upload of a fault
[DEBUG] 
%llx marking force needs-syncup: %@
[DEBUG] 
%llx marking uploaded %@
[CRIT] API MISUSE: state isn't needs-upload
[CRIT] Assertion failed: record
[CRIT] UNREACHABLE: no version on uploaded document %@
[CRIT] UNREACHABLE: CK disagrees on the item size: %lld != %lld
[DEBUG] marking uploaded %@, signature:%@
[CRIT] Assertion failed: (fileAsset && !pkgSignature) || (!fileAsset && pkgSignature)
[CRIT] Assertion failed: signature
[CRIT] Assertion failed: _currentVersion
[CRIT] Assertion failed: _currentVersion.contentSignature.brc_signatureIsPendingPlaceHolder || self.isDocumentBeingCopiedToNewZone
[CRIT] Assertion failed: _currentVersion.thumbnailSignature.brc_signatureIsPendingPlaceHolder || self.isDocumentBeingCopiedToNewZone
[CRIT] Assertion failed: _currentVersion.uploadedAssets == nil
[DEBUG] item is now uploaded: %@
[DEBUG] Uploading document being copied into a new zone which is missing an upload asset
[WARNING] Rejected fault still needs delete because we can't upload it %@
[CRIT] Assertion failed: self.needsUpload
[WARNING] Not inserting dead tombstone because the item was already revived for %@
[CRIT] Assertion failed: parentItem
[CRIT] Assertion failed: self.supportsServerSideAssetCopies
[WARNING] Item moved back into its original zone %@ si: %@
[WARNING] Item already has a previous zone so ignore the existing zone for %@
[WARNING] Item %@ moved into new zone which supports server side asset copies %@
[DEBUG] learning sharing options %@ from parent %@
[DEBUG] 
%llx updating upload jobs
[CRIT] Assertion failed: !self.isDead && (!self.isFault || self.isDocumentBeingCopiedToNewZone)
[CRIT] Assertion failed: db.isBatchSuspended
[DEBUG] Clearing recursive properties on item becoming reserved
[DEBUG] updating recursive properties starting from document %@:
 fault:    {needs:%lld done:%lld}
 quota:    %lld
 upload:   {needs:(count:%lld size:%lld) done:(count:%lld size:%lld)}
 download: {needs:(count:%lld size:%lld) done:(count:%lld size:%lld)}
 unstage:  {needs:%lld done:%lld}
 sync-up:  {needs:%lld done:%lld}
[CRIT] UNREACHABLE: can't update recursive properties: %@
[DEBUG] Updating zone info for a CZM item and deleting old zone jobs
[DEBUG] Apply Changes[%lld]: Rescheduling reverse-alias in %@
[WARNING] Deleted item was copied from another zone, insert tombstone in the old zone
[DEBUG] 
%llx evicting client item %@
in %@
[DEBUG] nothing to do: already a fault
[DEBUG] nothing to do: eviction is already scheduled
[DEBUG] items not on disk are not evictable!
[DEBUG] %@ isn't evictable because has ubiquity clients connected
[CRIT] UNREACHABLE: item %@ have an empty file id!
[DEBUG] not evictable because it's locked
[DEBUG] not evicted because the item has a file presenter
[DEBUG] evicting server item %@
in %@
[INFO] Resume sync completed %s for item %@
[INFO] resumeSyncForBundleID: document local diffs: %@, trigger resuming: %d
[DEBUG] Auto resume paused sync documents
[DEBUG] 
%llx Got coordinated %@
[ERROR] Coordinated %@ request at '%@' canceled after %0.06f seconds
[ERROR] Coordinated %@ request failed at '%@' in %0.06f seconds: %@
[ERROR] Coordinated %@ request failed at '%@' in %0.06f seconds
[DEBUG] Obtained coordinated %@ %@ '%@%@%@' in %0.06f seconds
[DEBUG] Releasing coordinated %@ %@ '%@%@%@' after %0.06f seconds
[DEBUG] Canceling coordinated %@ because task tracker is cancelled
coord-read
[DEBUG] 
%llx Requesting coordinated read at '%@'
coord-delete
[DEBUG] 
%llx Requesting coordinated delete at '%@'
coord-write
[DEBUG] 
%llx Requesting coordinated write at '%@'
coord-rename
[DEBUG] 
%llx Requesting rename from '%@' to '%@'
[DEBUG] hinting file coordinator of a change
    at '%@'
[DEBUG] hinting file coordinator of a reconnect
    at '%@'
[DEBUG] hinting file coordinator of delete
    at '%@'
[DEBUG] hinting file coordinator of a bounce
    from '%@'
      to '%@'
[DEBUG] hinting file coordinator of a move%s
    from '%@'
      to '%@'
[DEBUG] Fixing up case of %@ to %@
[WARNING] Serial queue for session %@ is nil
[WARNING] no data in record %@
sync-down/container-metadata
[DEBUG] 
%llx starting fetch container-metadata changes operation %@
[DEBUG] 
%llx got container-metadata changes for %@ keys:%@ changeTag:%@ modified:%@
[DEBUG] received container-metadata properties plist %@ for %@
[ERROR] failed parsing container-metadata plist for container %@: %@
[DEBUG] containerID %@ had no properties plist
[DEBUG] we'll download icon %@ for container %@
[DEBUG] updating container-metadata %@ at etag:%@ (no asset downloaded)
[DEBUG] 
%llx container-metadata receieved server change token %@, caught-up:%s client change token %@ error:%@
[DEBUG] 
%llx finished operation
[DEBUG] 
%llx adding sub-operation to fetch asset contents: %@ for records: %@
[DEBUG] 
%llx per record callback: %@ - %@
[DEBUG] got asset contents for %@
[DEBUG] updating container metadata %@ at etag:%@ (after asset download)
[ERROR] unknown container %@
[DEBUG] 
%llx finished %@
[NOTICE] fetched %lu containers metadata from the cloud - %@
[DEBUG] Sync up of app library container metdata succeeded for %@
[WARNING] Sync up of app library container metdata failed for %@ because requestIDs differ %lld vs %lld
[DEBUG] remembering container-metadata server change token %@ requestID %llu
[DEBUG] 
%llx Sync: syncing down container metadata
upload
[ERROR] No per upload completion block for %@, error %@
[DEBUG] Publishing upload progress for %@
[WARNING] Upload: Received negative progress from CK. progress [%f]
[DEBUG] ignoring zone not found error for %@ - we'll create at the end of the operation
[CRIT] Assertion failed: modifyError
[DEBUG] zone was recreated, reuploading records
[CRIT] UNREACHABLE: This is not a private zone
[CRIT] UNREACHABLE: This is not a shared zone
[ERROR] can't save %@: missing ownerKey for ownerName "%@"
[CRIT] UNREACHABLE: got a SQL Error: %@
[WARNING] Bounced itemID %@ from "%@" to "%@" because it clashes with %@
[DEBUG] Not bouncing %@ to %@ because that's not a unique filename
[CRIT] Assertion failed: BRCItemTypeIsDirectory(st.type)
[ERROR] PCS chained directory doesn't have chain PCS! %@
[NOTICE] Promoting %@ to be a normal directory because it was created from our own sync up
[CRIT] Assertion failed: _db.changes == 1
[WARNING] changing filename to "%@" because "%@" is unrepresentable (item ID: %@, last editor: %@)
[ERROR] changing filename to "%@" because "%@" is %s name
[CRIT] Assertion failed: !(st.logicalName.br_isSideFaultName || [st.logicalName br_isExcludedWithMaximumDepth:1])
[CRIT] UNREACHABLE: can't deserialize filename: %@ of %@
[ERROR] Failed to update record (%@): %@
[ERROR] failed saving document %@: %@
[CRIT] UNREACHABLE: document without a structure:
    i:%@ %@
   this typically indicates either of two problems:
    - either we failed processing the last sync down and we
       failed inserting the structure record,
    - or the server forgot to send us a structure record.
[DEBUG] Document without a structure record but we haven't completed full sync.  Dropping the record on the floor for now i:%@ %@
[DEBUG] saving consistent structure record (%@) to db %@
[ERROR] can't deserialize %@: %@
[DEBUG] saving consistent document record (%@) to db %@
[DEBUG] Marking %@ as edited since shared because the modifier name is different
[CRIT] UNREACHABLE: can't deserialize extension: %@ of %@
[DEBUG] Adding %@ to the list of force package extensions (according to CKRecord)
[DEBUG] saving consistent symlink structure record (%@) to db %@
[ERROR] failed saving symlink %@: %@
[DEBUG] saving consistent finder bookmark structure record (%@) to db %@
[DEBUG] saving consistent alias structure record (%@) to db %@
[ERROR] failed saving alias %@: %@
[DEBUG] Requesting a new item rank for target %@ of %@
[DEBUG] saving consistent share record to db %@
[CRIT] Assertion failed: share.currentUserParticipant.role != CKShareParticipantRoleOwner
[CRIT] Assertion failed: share.currentUserParticipant.role == CKShareParticipantRoleOwner
[WARNING] ignoring unknown itemID on share
[ERROR] share without root record:
    i:%@
   this typically indicates either of two problems:
    - either we failed processing the last sync down and we
       failed inserting the shared record,
    - or the server forgot to send it to us.
[CRIT] UNREACHABLE: Can't save zone root record %@
[CRIT] UNREACHABLE: structure record which isn't a directory or document
[WARNING] Consistent state but unknown record type (recordType: %@).
[ERROR] failed saving tombstone share %@: %@
[WARNING] deleted shareID %@ was for already dead item
[DEBUG] marked shareID dead %@
[CRIT] UNREACHABLE: Couldn't decode itemID from recordID %@
[ERROR] failed saving tombstone %@: %@
[DEBUG] Not inserting tombstone entry for %@ because we don't have a server item already.  Let's go through rejected code path for perf.
[DEBUG] saving consistent record delete to db %@
[CRIT] Server sent us an item %@ which has non-root share options but isn't parented to a share (parented to %@)
[CRIT] Fixing up sharing options to have shareID for something that looks like a shared zone root for %@
[CRIT] Stripping share options for something that doesn't seem to need them %@
[ERROR] Can't recover share options on shared zone child item %@
[ERROR] Failed to recover sharing options on %@
[WARNING] Recovered sharing options on %@ by setting ck share options to null
[DEBUG] Forcing caught up state because we completed full sync so we must have synced down an unrelated zone
[DEBUG] Server killed %@ but it still has live children
[CRIT] UNREACHABLE: Server killed %s but it still has %d live children
[DEBUG] State inconsistent because %@ has %d live children
[CRIT] UNREACHABLE: State inconsistent because %@ is a document with no version
[DEBUG] We haven't received a content record on %@ yet, delaying for now
[DEBUG] Updated %@ to be a directory fault because it has a new unapplied item
[CRIT] UNREACHABLE: Server sent item %s which isn't a descendant of 'root'
[DEBUG] Found orphan when we haven't completed initial sync %@.  Delaying apply for now
[DEBUG] Orphan has favorite rank so fetching parent chain
[DEBUG] Orphan is recent, so fetching parent chain
[DEBUG] Orphan has finder tags so fetching parent chain
[CRIT] UNREACHABLE: Server sent item %@ which is parented to a non-directory %@
[CRIT] UNREACHABLE: Server sent live item %s parented to dead item %s
[WARNING] Server sent us live item %@ parented to dead item %@ but we haven't completed full sync. Delaying apply
[CRIT] UNREACHABLE: Server sent us an item %@ which has non-root share options but isn't parented to a share (parented to %@)
[DEBUG] Server sent us an item %@ which we couldn't locate share for, but we aren't caught up yet (parented to %@)
[CRIT] UNREACHABLE: Server sent us an item %@ which has non-root share options but should be a root share
[DEBUG] %@: Allocated ranks [%lld, %lld]
[DEBUG] %@ has no more directory faults so it is now full sync
[CRIT] UNREACHABLE: Can't create app library and zones for zone named: %s
server-zone/did-sync-down
[DEBUG] 
%llx saving sync-down batch (edits:%ld deletions:%ld)
[NOTICE] received %lu edited items and %lu deleted items from the cloud for %@
[NOTICE] received %lu deleted items from the cloud for %@
[NOTICE] received %lu edited items from the cloud for %@
[CRIT] Assertion failed: requestID >= self->_changeState.clientRequestID
[WARNING] Saving %lu failed directory list operations first
[CRIT] Assertion failed: [record.recordType isEqualToString:kBRRecordTypeContent] || [record.recordType isEqualToString:kBRRecordTypeStructure]
[DEBUG] %@ is no longer full sync because of a large delta sync operation
[WARNING] Promoting %@ to full sync because we have completed full sync before and now we're caught up again
[DEBUG] Updated %llu items to be normal directories in %@
[WARNING] Failed enumerating the changes stream but don't broken structure
[ERROR] something went wrong while saving to the db: %@
[DEBUG] updating %@
with requestID:%llu token:%@
[DEBUG] Allocating ranks for %@
[DEBUG] Delta sync successfully alloced rank so allowing finished changes stream to be destroyed
[CRIT] Assertion failed: _db.isInTransaction
[DEBUG] Can't list directory changes when completed full sync
[DEBUG] Listed directory changes in zones %@
[CRIT] Assertion failed: _failedListDirectoryOperations[itemID] == nil
[DEBUG] Removing applied tombstone: %@
[DEBUG] 
%llx Starting to GC %ld server tombstones in %@
[ERROR] failed purging zone %@ - %@
[DEBUG] Finishing destroying server truth
[DEBUG] Finished resetting server truth
[CRIT] UNREACHABLE: attempted delete all content on an unsupported zone type: %@
[CRIT] Assertion failed: !appLibrary.wasMovedToCloudDocs
[CRIT] Assertion failed: clientZone.appLibraries.count == 1
[CRIT] UNREACHABLE: Can't move clouddocs to itself
[CRIT] UNREACHABLE: Unable to cross zone migrate.  Blowing away our state and starting from scratch.
[DEBUG] %@ server state changed, %@ -> %@
[CRIT] Assertion failed: argc == 1
[ERROR] Can't open database at %@: %@
[ERROR] Can't close database at %@: %@
[ERROR] Can't insert into the database %@: %@
[ERROR] Could not create a unique index %@: %@
[INFO] Populating new columns with base path: %@
[ERROR] Unable to fetch URL properties for %@: %@
[DEBUG] Updating %@ %@ %d into database for %@
[ERROR] Failed to update %@ %@ %d into database for %@: %@
[INFO] Attaching database %@
[ERROR] Already have attached database %@ while trying to attach database %@.
[ERROR] Unable to attach db %@: %@
[ERROR] Failed to open %@
[ERROR] failed closing %@
[ERROR] Not updating attached database because no database has been attached.
[INFO] Updating attached database %@ %@
[DEBUG] Beginning update attach database batch: %@
[DEBUG] Successfully finished updating attach database batch: %@
[ERROR] Failed to enable foreign keys: %@
[ERROR] Failed to disable foreign keys: %@
[ERROR] Failed to negate file ids: %@
[DEBUG] Changed %lld items when negating file ids
[ERROR] Failed to negate doc ids: %@
[DEBUG] Changed %lld items when negating doc ids
[ERROR] Failed to create file_id_gen_count_index, so updating will be incredibly slow: %@
[DEBUG] Created file_id_gen_count_index
[ERROR] Failed to create doc_id_index, so updating will be incredibly slow: %@
[DEBUG] Created doc_id_index
[ERROR] Failed to update the gen count: %@
[DEBUG] Changed %lld items when updating gen counts
[ERROR] Failed to update the file ids: %@
[DEBUG] Changed %lld items when updating file ids
[ERROR] Failed to update the doc ids: %@
[DEBUG] Changed %lld items when updating doc ids
[DEBUG] Changed %lld items when clearing the staged generation ids
[ERROR] Failed to update the staged file ids: %@
[DEBUG] Changed %lld items when clearing the staged file ids
[ERROR] Unable to get inode for %@: %@
[ERROR] Failed to update the backup detector value: %@
[DEBUG] Patched the backup detector
[CRIT] there should always be one row in client_state {%@}
[CRIT] unable to flush client state, crash to maintain consistency
[DEBUG] Fixed up the FSEvents root ID
[WARNING] No path for Caches directory
[DEBUG] Located ubiquity salt path by the duck test - %@
[WARNING] Couldn't locate ubiquity salt path in %@
[WARNING] fetchRootItemForProviderDomain failed with error: %@
[WARNING] No path for Mobile Documents directory
[CRIT] UNREACHABLE: unknown item type %d
[CRIT] UNREACHABLE: invalid type
[CRIT] UNREACHABLE: can't get the structure record of a shared-top-level document without the zone of the alias record
[CRIT] UNREACHABLE: Asked for side car recordID on an item that doesn't have side cars
[DEBUG] path match info for %@ is %@
[WARNING] we have no etag for %@
path matching: %@
[WARNING] we have no reference for %@
path matching: %@
[CRIT] UNREACHABLE: can't get the structure record without a zone
[CRIT] UNREACHABLE: asked for folder root structure record on a non-folder
[CRIT] Assertion failed: sqlite3_value_type(value) == SQLITE_NULL
[CRIT] Assertion failed: sqlite3_column_type(stmt, index) == SQLITE_NULL
[CRIT] Assertion failed: self.brc_isAppLibraryRootRecordID
[CRIT] Assertion failed: self.brc_isAppLibraryDocumentsRecordID
[CRIT] Assertion failed: libraryRowID
[CRIT] Assertion failed: libraryRowID || sharedZoneRowID || !([identifier isEqualToString:BRCItemIDZoneRoot] || [identifier isEqualToString:BRCItemIDDocuments])
[CRIT] UNREACHABLE: Corrupt side car file
[CRIT] UNREACHABLE: attempt to extract an itemID from '%s'
[CRIT] UNREACHABLE: attempt to extract an itemType from '%s'
[WARNING] The server sent a bounceNo <= 1: %@
[CRIT] UNREACHABLE: empty basename and no bounceno
[CRIT] UNREACHABLE: Aliases parent ref zoneID %@ must be equal to aliases zoneID %@!
[CRIT] UNREACHABLE: No alias target
[WARNING] can't deserialize filename: %@
[CRIT] UNREACHABLE: The server should have set a birthtime on %s
[CRIT] UNREACHABLE: %@ parent ref zoneID %@ must be equal to record's zoneID %@!
[CRIT] UNREACHABLE: The server should have set an mtime for %s
[WARNING] %@ record %@ has a size inconsistency, %llu != %llu
[ERROR] failed deserializing version in %@: %@
[ERROR] %@ record %@ doesn't have a lastEditorDeviceName
[WARNING] Server gave us an unrepresentable filename: "%@" using "%@"
[CRIT] UNREACHABLE: The record name is not a content in the shared zone
[CRIT] Assertion failed: si.isBRAlias
[ERROR] couldn't set basename to '%@'
[CRIT] UNREACHABLE: invalid filename
[CRIT] UNREACHABLE: Couldn't find xattr for signature %@
[DEBUG] On Sync-up of %@ using old etag due to iWork conflict
[CRIT] Assertion failed: version != nil
[CRIT] Assertion failed: (diffs & BRC_IF_CONTENT_SIGNATURE) || item.isDocumentBeingCopiedToNewZone
[CRIT] Assertion failed: self[kBRRecordKeyXattr]
[WARNING] Created app library through sync flow %@
[DEBUG] Encountered a share alias, syncing down shared database to detect %@
[DEBUG] found app library record named: %@
[DEBUG] found app documents record named: %@
[CRIT] UNREACHABLE: parent is not a CKReference for %@
[DEBUG] found parent app library record named: %@
[DEBUG] found parent app documents record named: %@
[CRIT] Assertion failed: ![zoneName isEqualToString:BRUbiquitousDefaultContainerID]
[CRIT] UNREACHABLE: invalid lastEditorDeviceName on %@: %@
[CRIT] UNREACHABLE: rootAppLibraryRecordForAppLibraryID: should not be called with a bogus app library id %@
[CRIT] Assertion failed: dataRepresentation != nil
[CRIT] UNREACHABLE: invalid key %@ and obj %@
[CRIT] UNREACHABLE: icon doesn't exist anymore at %@ - %@
[WARNING] share has no CKShareTypeKey, using extension from CKShareTitleKey (%@)
[WARNING] can't find document name for share %@ and can't extract it from URL; using '%@' as default
[DEBUG] Apply Changes[%lld]: postponing rank (item CZM processing)
[DEBUG] Apply Changes[%lld]: postponing rank (ongoing cross-zone migration)
[DEBUG] New item %@ older than a deleted directory %@ so marking dead
[DEBUG] Apply Changes[%lld]: postponing rank (missing parent while greedy)
[DEBUG] Apply Changes[%lld]: postponing rank (missing parent)%@
[DEBUG] Dead item doesn't need any action
[DEBUG] Don't suspend delete of shared to me item %@
[DEBUG] Suspending rank for item which needs an OOB sync ack %@
[DEBUG] Not suspending download of an item that needs CZM processing %@
[DEBUG] Forcing deletion of item dead in both client and server truth %@
[DEBUG] Suspending rank for item with conflicts: %@%s
[DEBUG] Learning sharing options on local item %@ from %@
[DEBUG] Learning structure etag on item with only side car diffs %@
[WARNING] client zone %@ forgot to sync up!
[DEBUG] the fs root was remotely deleted, we need to recreate it and reupload it
[DEBUG] Apply Changes[%lld]: postponing rank (live child)
[DEBUG] Marking item unknown to server %@ as rejected
[DEBUG] Found a freshly scanned item from an initial scan that path matches: %@
[DEBUG] Suspending rank since freshly scanned means either same content or conflict: %@
[DEBUG] Accepting Structural Etag update for %@
[DEBUG] Remove rank for item with no real changes: %@
[CRIT] UNREACHABLE: Can't prepare sync for a zone that is blocked
[DEBUG] %@ is not pristine and needs sync
[DEBUG] Avoid syncing up a pristine zone
[DEBUG] 
%llx Sync: syncing up clientZone %@. batch size - %u
[DEBUG] Because this is our first time syncing up, adding %@
[DEBUG] ignoring item with negative cost for now %@
[DEBUG] Dedicating this sync up operation to pcs chaining %@
[DEBUG] no record needs syncing at the moment.
[CRIT] Assertion failed: items.count == 0
[DEBUG] destroying shares instead of unsharing
[DEBUG] preparing to send in requestID:%lld: %lu records, delete %lu recordIDs, unshare %lu iwork shares, rename %lu shares, about %lu items
[NOTICE] sending %lu items to the cloud for %@
sync-up
[DEBUG] Finished PCS chaining a batch when completed: %d listOp: %@ error: %@
[DEBUG] 
%llx sync-up error for record %@: %@
[ERROR] Blocking %@ from sync up until it is next modified because the server failed with a permanent error
[WARNING] Updating parent item to be chained because it is unknown and we encountered a PCS error
[WARNING] Updating local item to be chained because it is unknown and we encountered a PCS error
[WARNING] Encountered an unknown pcs error for %@
[DEBUG] ignoring error for %@ because an other item in the batch failed
[DEBUG] skipping throttling item %@ even though it caused the failure
[CRIT] Assertion failed: self.serverZone.isPrivateZone
[DEBUG] Fetching share IDs shared by us for renames: %@ and unshare: %@
[WARNING] Got a permanent error %@ when fetching records and shares
[WARNING] got an error while fetching the records and shares %@, but ignoring it
[DEBUG] Saving shares %@ shared by us for unshare and rename
[DEBUG] No shares need saving
[ERROR] send metadata error: %@
[CRIT] Assertion failed: [contentRecord.recordType isEqualToString:kBRRecordTypeContent]
[CRIT] Assertion failed: protectionData
[CRIT] UNREACHABLE: Protection data mismatch between share and record being shared! (%@ vs %@)
[DEBUG] updated content record %@ with protectionData %@ baseToken %@ routingKey %@
[CRIT] Assertion failed: share.publicSharingIdentity
[CRIT] UNREACHABLE: protection data mismatch between content public sharing identity and web sharing data (%@ vs %@) for %@
[CRIT] UNREACHABLE: content record is missing protection data %@
[CRIT] Assertion failed: !fetchedRecord
[CRIT] UNREACHABLE: protection data mismatch! ignoring content records version (%@ to %@)
[DEBUG] record %@ still needs web sharing protection data
[CRIT] UNREACHABLE: Failed to get new web sharing identity: %@
[CRIT] UNREACHABLE: Timed out while waiting for new web-sharing identity
[CRIT] Assertion failed: [firstItemID isEqual:secondItemID]
[CRIT] Assertion failed: error
[ERROR] Failed getting web sharing identity for %@ - %@
[DEBUG] got web sharing identity for %@
[CRIT] UNREACHABLE: invalid sharing records count
[DEBUG] Sync: sending requestID:%lld for container %@
[DEBUG] Forcing sync up of dead parent %@
[DEBUG] Forcing item dead in the server truth to re-upload as a rejected item - %@
[WARNING] We changed share roots from %@ to %@ on %@ and got a permission error so behaving like an unknown item
[DEBUG] item %@ needs to be re-uploaded
[DEBUG] item %@ doesn't need to be reuploaded
[CRIT] UNREACHABLE: Couldn't find parentID for record %@
[DEBUG] We already remapped %@
[CRIT] Assertion failed: !item.isKnownByServer
[WARNING] We were told to remap to an item %@ -> %@ which is already in our client truth
[WARNING] Item is also on disk, marking the item as rejected
[DEBUG] The server wasn't able to remap parentID %@ to pcs chained parent %@ so doing it now
[DEBUG] handling error for %@
[CRIT] UNREACHABLE: Unable to open iwork package %@
[CRIT] UNREACHABLE: Uploaded an iWork package of size 0 (itemID: %@)
[CRIT] Assertion failed: pathRelativeToRoot
[CRIT] Assertion failed: isInDocsFolder
[DEBUG] skipping throttling because this is a batch failure
[DEBUG] server provided backoff %.03fs (delay %.03fs)
[DEBUG] sync backoff %.03fs
[CRIT] UNREACHABLE: invalid length: %ld
[CRIT] UNREACHABLE: we should not have alias uuid types anymores
[CRIT] UNREACHABLE: unknown itemID type %d
[CRIT] Assertion failed: object->item_code == 1 || object->item_code == 2
[CRIT] Assertion failed: object->item_code == 4 || object->item_code == 5
[CRIT] UNREACHABLE: invalid BRCItemID (%@)
[CRIT] UNREACHABLE: unmigrated? invalid BRCItemID (%@) - %d
[CRIT] Assertion failed: rio.app_lib_rowid
[CRIT] Assertion failed: uio.app_lib_rowid
[CRIT] UNREACHABLE: unknown itemID kind
[CRIT] UNREACHABLE: invalid enclosure uuid - %@
[CRIT] %@
[DEBUG] Not need to remove %@ as it was not created yet
[WARNING] can't suppress %@: %@
[CRIT] UNREACHABLE: migration should work: %@
[ERROR] invalid owner in rowid_reservations, resetting
[ERROR] found duplicate app library, resetting
[CRIT] UNREACHABLE: incomplete migration for client_uploads
[CRIT] UNREACHABLE: incomplete migration for client_downloads
[CRIT] Corrupt DB state: some items belong to non-existing zones!
[ERROR] parentID of unexpected length %d
[ERROR] itemID of unexpected length %d
[ERROR] type mismatch with parent %d or item %d
[CRIT] Should always be able to resolve synced folder root!
[WARNING] can't find relpath by ID: %@ %{errno}d
[DEBUG] found one shared doc by ID: %@
[ERROR] can't find relpath %@ by parent %@ and name: %@ %{errno}d
[DEBUG] found one shared doc by parent and name: %@
[DEBUG] Found alias item parent: %@ in zone: %@
[CRIT] UNREACHABLE: no destination zone for %@
[WARNING] can't find dst by ID: %@ %{errno}d
[DEBUG] can't resolve: %@ %{errno}d
[DEBUG] Found a usable parent path of our server item: %@
[WARNING] can't resolve the root of iCloud Drive: %@ %{errno}d
[DEBUG] we have already renamed the files on disk
[INFO] renamed %@
  from: %@
    to: %@
[ERROR] can't rename %@
     from: %@
       to: %@ %{errno}d
[WARNING] can't bounce %@ to %@
[CRIT] Assertion failed: dstZone
[CRIT] Assertion failed: dstAppLibrary
[CRIT] Assertion failed: physicalBounceNo && physicalBounceNo >= 2
[CRIT] UNREACHABLE: Ignoring corrupt side car file
[CRIT] UNREACHABLE: Found more than one match for that query
[WARNING] Cannot decode configuration plist from the database
[CRIT] Assertion failed: argc == 3
[CRIT] UNREACHABLE: Couldn't save xattr blob for signature %@.  Continuing anyway - %@
[DEBUG] Deleted %llu items from client truth which haven't been synced to the server
[DEBUG] Found table ciconia_migration_info, trying to fill it up
[INFO] Failed inserting into ciconia_migration_info. Error = %@. Ignoring
[DEBUG] Deleted %llu br aliases from client truth
[DEBUG] We have items to migrate to fpfs
[ERROR] Failed determining if we have items - %@
[DEBUG] We don't have items to migrate to fpfs
[CRIT] Assertion failed: appLibraryOwner
[CRIT] Assertion failed: syncContextIdentifier
[CRIT] UNREACHABLE: Can't import br aliases anymore %@
[CRIT] UNREACHABLE: Import object of unknown type %@
[INFO] rejecting creation for dataless item that couldn't be found
[INFO] rejecting Trash folder
[INFO] rejecting side fault
[INFO] rejecting BRAlias
[WARNING] Trying to move shared top item %@ into trash at parent %@
[WARNING] Trying to move shared top item %@ into another shared item %@
[WARNING] Moving an unshared directory %@ into a shared parent %@ where the source item has shared subitems
[WARNING] Failed updating ciconia_migration_info for key %@: %@
[DEBUG] Trashed item has bookmark data for import
[DEBUG] Shared item has bookmark data for import
[WARNING] Can't find zone for trash putback %@, falling back to clouddocs zone
[WARNING] Can't find trash parent for %@, falling back to one at the zone root
[ERROR] Can't create trash item - %@
[ERROR] Can't find a parent for trashed item %@
[DEBUG] Found shared item by bookmark data %@
[WARNING] Couldn't find item by bookmark data %@ (%@)
[WARNING] The existing shared item doesn't have the right kind
[CRIT] UNREACHABLE: can't match an empty shared package %@ to the existing shared package item %@
[INFO] trying to import from on-disk ID: fileID=%llu docID=%u genCount=%llu
[DEBUG] Found existing item by docID %@
[DEBUG] We have changes to upload on imported item f:(%llu vs %llu) g:(%llu vs %llu)
[DEBUG] Existing item isn't a document! %@
[WARNING] Mismatching type for the found item (%@), ignoring!
[DEBUG] Found existing item by fileID %@
[INFO] found item that seems to match template: %@
[INFO] Bouncing item %@ because of %@
[WARNING] We have a collision with %@ but it's invalid
[CRIT] Assertion failed: options & NSFileProviderCreateItemMayAlreadyExist
[WARNING] Can't find file id for %@.  Updating from server item because we have no way to get its content
[DEBUG] Item doesn't appear to be edited so stripping the content edited bit for %@
[DEBUG] forcing child of read-only share to match what exists in our db %@
[CRIT] UNREACHABLE: Child of readonly share path-match should always already exist - %@
[WARNING] Merging existing item without may already exist flag %@ with template %@
[DEBUG] Found existing documents folder %@
[DEBUG] Marking desktop or documents item as from initial scan %@ to avoid bounce
[DEBUG] Marking user invisible item as from initial scan %@ to avoid bounce
[DEBUG] Importing an existing app library %@ with mangledID %@
[WARNING] Importing unknown item: %@ - that's unexpected!
[CRIT] UNREACHABLE: Received item with unexpected type and no content %@
[CRIT] Assertion failed: appLibrary.db.isBatchSuspended
[CRIT] Assertion failed: _session.clientDB.isInTransaction
[DEBUG] Can't reparent to folder: undoing reparent on %@ to %@
[WARNING] Base version differs from local version content! overwriting our local version (%@ vs %@)
[WARNING] Base version differs from local version structure! overwriting our local version (%@ vs %@)
[DEBUG] We can't save a zone root so don't modify it
[DEBUG] We can't update a share acceptation fault %@
[DEBUG] Attempting to rename/reparent/trash special folder: undoing this operation on %@
[CRIT] Assertion failed: [targetItem.contentType conformsToType:UTTypeSymbolicLink]
[DEBUG] Marking %@ as forgotten because we matched based on template
[DEBUG] template item %@ differs in trash-ness from %@
[DEBUG] template item %@ differs in kind from %@
[DEBUG] template item %@ differs in share-bookmark from %@
[CRIT] UNREACHABLE: can't path-match an empty package %@ to the existing package item %@
[CRIT] UNREACHABLE: -asPrivateClientZone called on a shared zone
[CRIT] UNREACHABLE: -asSharedClientZone called on a private zone
[CRIT] Assertion failed: _syncUpBudget && _syncUpThrottle && _syncDownThrottle
[DEBUG] associating %@ with %@
[DEBUG] 
%llx %s container %@
[CRIT] Assertion failed: _delegate
[DEBUG] Activation done
[DEBUG] 
%llx deactivating %@
[CRIT] Assertion failed: _activated
[DEBUG] waiting for operations to finish
[DEBUG] syncUpOp finished
[DEBUG] syncDownOp finished
[DEBUG] deleteAllContentsOperation finished
[DEBUG] zoneCreationOp finished
[DEBUG] Finished waiting for %@
[DEBUG] Finished waiting for %lu list operations to finish
[CRIT] UNREACHABLE: Container needs server and client truths reset: %@
[WARNING] Container needs server and client truths reset: %@
[WARNING] Container needs reset - %lu
[WARNING] Server zone has been moved to cloud docs
[WARNING] Server tells us we need to redo PCS prep
[DEBUG] Not considering %@ for sync bubble tasks because sync is blocked
[DEBUG] 
%llx disconnecting listener so that they gather again
[DEBUG] 
%llx disconnected NSMDQ listeners for %@
[CRIT] UNREACHABLE: there should never be more than one match for that query (parentID: %@, name: %@, parentZoneID: %@)
[CRIT] Assertion failed: !_CFURLIsPromiseName((__bridge CFStringRef)name)
[CRIT] Assertion failed: _CFURLIsPromiseName((__bridge CFStringRef)name)
[DEBUG] Sync: updated sync-up throttle: %@
[DEBUG] Ignoring sync state change because sync is disabled for this container
[DEBUG] sync state changed: %@, was %@
[DEBUG] Asking for sync up but we never synced down, do that first
[DEBUG] %@ sync state changed, was %@
[DEBUG] 
%llx scheduling zone creation operation for %@
[DEBUG] 
%llx finished zone creation with error: %@
[DEBUG] added %@ as a sync-down dependency of %@
[DEBUG] removed %@ as a sync-down dependency of %@
[DEBUG] Sync down has greater priority than %@
[DEBUG] Boosting sync down op to be non-discretionary because we have blocked operations which are non-discretionary
[INFO] 
%llx %@: starting sync down
[DEBUG] we're not activated anymore, not syncing-down immediately
[DEBUG] adding sync down dependency: %@
[DEBUG] Sync: updated sync-down throttle: %@
[CRIT] Assertion failed: _syncDownOperation == nil
[CRIT] Assertion failed: _syncUpOperation == nil
[DEBUG] Sync: %@ is already in sync, odd
[CRIT] UNREACHABLE: We are alreadying syncing but we tried to sync again
[DEBUG] 
%llx Sync: considering sync operation for %@
[DEBUG] Sync-up has no global budget for more than 10s: %.1fs (%@)
[DEBUG] Sync-up has no budget for more than 10s: %.1fs (%@)
[DEBUG] Sync-up is throttled for more than 10s: %.1fs (%@)
[DEBUG] Sync-up retry-after is over 10s: %.1fs
[DEBUG] sync-down is throttled for more than 10s: %.1fs (%@)
[DEBUG] Sync: trying to start sync up
[DEBUG] Sync: starting sync up with cost:%.1f
[DEBUG] Sync: nothing to sync up
[DEBUG] Sync: items to sync-up are throttled for another %.1fs
[DEBUG] Executing cancelled op %@ so operations waiting on it can proceed
[CRIT] UNREACHABLE: Forcing cancel on sync op
[DEBUG] No sync required anymore at that time
[DEBUG] Not ready to sync yet, sleeping for %.3fs
[NOTICE] Item %@ isn't known by the server so marking it as created by the current device
[DEBUG] Not learning anything about %@ because the update was dropped: %@
[DEBUG] Not learning anything about %@ because the server merged ETag %@ to produce %@
[CRIT] UNREACHABLE: Couldn't locate alias target for %@
[DEBUG] Learn structural ETag for %@: %@
[DEBUG] Learn content ETag and Last Editor for %@: %@, %@
[DEBUG] Learn content ETag for %@: %@
[DEBUG] Learn side-car ETag for %@: %@
[DEBUG] 
%llx Sync: completed sync up for %@, cost:%.1f, itemCount:%llu %@
[DEBUG] decreasing sync-up batch size since server says we exceeded limits
[DEBUG] Sync: requestID:%llu cancelled
[DEBUG] Sync: requestID:%llu failed sending: %@
[ERROR] Sync: requestID:%llu failed sending: %@
[DEBUG] Sync: requestID:%llu succeeded
[DEBUG] Sync: updated sync-up throttle: %@
      and container state: %@
[DEBUG] Queueing sync barrier sync down for %@
[DEBUG] Not resuming sync token because %p is still in flight
[DEBUG] %@ isn't live, looking for server item
[DEBUG] Updating item idle item %@ from server item %@ to fulfill the locate item request
[ERROR] Failed to save item to db when updating from server item %@ - %@
[WARNING] Can't update local item %@ from server item %@
[DEBUG] Failing op %@ because the sync down failed
[NOTICE] signaling sync down waiters
[DEBUG] Sync: updated sync-down throttle: %@
      and container state: %@
[WARNING] marked %lld items rejected after cross zone move
[CRIT] Assertion failed: _requestID == 0 || requestID <= _requestID
[WARNING] The zone wasn't found on sync down so failing all blocked operations right away
[DEBUG] Updated %llu items to strip the oob-sync-ack bit
[WARNING] not enumerating in-flight items until we are caught up.
[DEBUG] received item in request:%llu
   local:  %@
   server: %@
[DEBUG] item acknowledged in requestID:%llu
   local:  %@
   server: %@
   diffs:  %@
 learning etag: structural:%s content:%s
[DEBUG] Alias was rejected when syncing up in private zone %@
[DEBUG] 
%llx Resolving server-side folded path-match for: %@
[WARNING] Can't merge %@ with %@
[DEBUG] Found a path-match in the server truth: %@
[DEBUG] killing local reserved item for the path-match: %@
[DEBUG] path-match is new, learn new item ID %@ instead of %@
[DEBUG] path-match is known but live on the file-system: %@
[DEBUG] we couldn't find a suitable path-match, mark the item as rejected
[DEBUG] Sync: requestID:%llu acknowledged
[DEBUG] Sync: just a new sync down without new sync up since requestID:%llu
[WARNING] Marking latest sync request failed because the requestIDs differ %llu vs %llu for %@
[CRIT] UNREACHABLE: Not cross zone moving a zone to itself
[DEBUG] 
%llx cross zone move documents from %@ to %@
[DEBUG] cleaning up %@
[CRIT] Assertion failed: !document.needsReading || db.changes > 0
[CRIT] UNREACHABLE: can't prepare cross move items! %@
[CRIT] Assertion failed: db.changes == 0
[CRIT] UNREACHABLE: can't cross move items! %@
[NOTICE] cross zone moved %lld items from %@ to %@!
[ERROR] can't save cross zone move state: %@
[ERROR] can't save cross zone move state for appLibrary %@: %@
[ERROR] can't save destination zone: %@
[CRIT] Assertion failed: self._hasAllItemsDidUploadHandlers
[WARNING] calling the upload handler because sync is failing: %@
[DEBUG] Completed upload for all items for %@
[DEBUG] Still need to sync up %@ more items for sync bubble for %@
[DEBUG] Tombstones with ranks are gone: %@
[DEBUG] Signaling that tombstones can be collected in %@
[WARNING] The zone %@ is blocked because the app isn't installed but we have a non-discretionary op %@. Unblocking the zone
[DEBUG] op has priority over the sync down op so cancelling sync down and rescheduling
[DEBUG] The server zone hasn't been created yet so failing the operation right away
[DEBUG] Blocking server stitching op %@ until we fetch the initial change token
[DEBUG] Starting to list the contents of %@ (%sdiscretionary)
[DEBUG] Blocking list on share accept %@
[DEBUG] Blocking low-priority parent fetch operation %@ on %@
[DEBUG] Blocking low-priority locate record operation %@ on %@
[DEBUG] Blocking low-priority fetch recents operation %@ on %@
[DEBUG] Removing list operation with no observers %@
[DEBUG] Blocking low-priority list operation %@ on %@
[DEBUG] Starting to fetch parent chain of %@
[DEBUG] Starting to locate record for %@
[DEBUG] Can't %@ when not activated
[DEBUG] Can't %@ when sync needs os upgrade
[DEBUG] Can't %@ when resetting
[DEBUG] Can't %@ when the zone doesn't exist
[DEBUG] Can't list changes on %@ when we have already completed full sync
[DEBUG] Can't list %@ because it had failed previously
[WARNING] Got request to list documents directory of app library that don't have data scope. AppLibrary [%@].
[DEBUG] Cancelling operation %@ because it is discretionary and we have non-discretionary work
[WARNING] Failed listing directory %@ - %@
[DEBUG] Finished listing contents of %@
[DEBUG] Can't list item %@ in zone %@ which isn't a directory fault %d
[DEBUG] We've completed full sync so just recursively rescheduling items under %@
[DEBUG] Continue to recursive list the contents of %@
[WARNING] Got request to rec-list documents directory of app library that don't have data scope. AppLibrary [%@].
[DEBUG] Finished listing contents of %@ with error %@
[DEBUG] Forcing %@ to list all changes because we cancelled an old version
[DEBUG] Starting to recursive list the contents of %@
[DEBUG] Inserted parent chain for itemID because we already completed full sync
[WARNING] Can't find parent, we will try to create the operation even if we are in full sync
[WARNING] Can't fetch parent chain of a root item
[CRIT] UNREACHABLE: can't fetch parent chain with no itemID
[DEBUG] Can't locate record when completed full sync
[CRIT] UNREACHABLE: Can't locate share alias record in a shared zone
[DEBUG] Zone doesn't exist so already have recent documents in %@
[DEBUG] Already fetching recent documents in %@
[DEBUG] Already fetched recent and favorite documents in %@
[DEBUG] Completed full sync so already have recent documents in %@
[DEBUG] Not fetching recents on a shared zone %@
[DEBUG] Not fetching recents on a non-public zone %@
[DEBUG] Finished fetching recent documents for %@ - %@
[DEBUG] Staring to fetch recent documents %@
[WARNING] calling and removing all share acceptance blocks
[INFO] popOnDiskBlockForItemID [%@]
[DEBUG] 
%llx waiting for item %@ to be on disk
[WARNING] %@ and %@ must be non nil to register action
[DEBUG] 
%llx done waiting for item to be on disk
[DEBUG] Waiting for %@ to be available
[WARNING] %@ is resetting. Not waiting on faulting of %@
[WARNING] %@ is dead, not waiting on faulting.
[INFO] Local item not found. Wait for the item [%@] to be on disk.
[WARNING] %@ is on disk after syncing down and refreshing
[DEBUG] Item %@ already available
[DEBUG] 
%llx waiting for item %@ to be downloaded
[DEBUG] 
%llx done waiting for item to be downloaded
[WARNING] %@ is resetting. Not waiting on download of %@
[DEBUG] network is unreachable. Not waiting on download of %@
[DEBUG] Waiting for %@ to be downloaded
[DEBUG] Item %@ already downloaded
[WARNING] Cancelling sync down operation that uses a background session
[WARNING] Cancelling sync up operation because we need to sync down now
[WARNING] %@ is resetting. Not waiting on sync down
[DEBUG] network is unreachable. Not waiting on sync down of %@
[DEBUG] 
%llx waiting sync down to complete for item %@
[DEBUG] 
%llx done waiting for sync down to complete on first try
[DEBUG] 
%llx Item failed first try waiting for sync down to complete... Retrying once...
[DEBUG] 
%llx done waiting for sync down to complete after retry
[DEBUG] Waiting for sync down for %@ in %@
[DEBUG] 
%llx waiting to locate item [%@] with record ID [%@]
[WARNING] %@, %@ and %@ must be non nil to register action
[DEBUG] 
%llx Item [%@] already located. Execute block directly.
[CRIT] UNREACHABLE: Item in server items table. We should get at least that item parent id
[DEBUG] 
%llx Item [%@] already located. Parent chain confirmed. Execute block directly.
[DEBUG] 
%llx Need to locate item [%@]
[DEBUG] 
%llx Item [%@] located successfully
[DEBUG] 
%llx Item [%@] was not located
[ERROR] Fail to create LocateRecordOperation for item [%@] with record ID [%@] --> Fail all waiting blocks.
[INFO] Locate record ID [%@]: %@ with error %@
[WARNING] %@ is resetting. Not waiting to locate item [%@]
[DEBUG] network is unreachable, don't try to locate item [%@]
[DEBUG] 
%llx Cancelling all share acceptance callbacks due to unreachable network
[CRIT] Assertion failed: pos == ITEM_RECURSIVE_PROPERTIES_FIELDS_COUNT
[WARNING] Couldn't find refreshed item for %@
[DEBUG] Item finished CZM procesing and now is done %@
[DEBUG] Not processing item which is already almost dead %@
[DEBUG] Sync: Starting downloading all children under %@ due to changing shares
[DEBUG] Not downloading item which is shared to me in a CZM'd folder - %@
[ERROR] Failed to start downloading item %@ under %@
[CRIT] UNREACHABLE: Couldn't find fault which we should have %@
[DEBUG] Sync: Finished waiting for download of children under %@
[ERROR] Failed starting download for CZM - %@
[DEBUG] Sync: Starting downloading %@ due to changing shares
[DEBUG] Sync: Finished waiting for download of %@
[WARNING] Strange... We have multiple levels of associated item IDs for %@ - (%@ vs %@)
[WARNING] An item moved into this zone and needs to be downloaded for czm %@. (reparented root item %@)
[CRIT] Assertion failed: parentItemID
[CRIT] Assertion failed: [item.clientZone isEqualToClientZone:self]
[WARNING] An item moved into %@ and needs to be downloaded for czm %@.
[CRIT] Assertion failed: (localItemHandler || serverItemHandler) && !(localItemHandler && serverItemHandler)
[INFO] %@: reply(%@, %@)
[CRIT] Assertion failed: urlWrapper == nil
[DEBUG] 
%llx creating item based on template %@ at '%@' fields:%llu options:%llu
[ERROR] Unable to move %@ to group container %@ with error %@
[DEBUG] Returning %@ to ICDFileProviderExtension for item %@
[DEBUG] Waiting for sync down of the item to complete before download for %@
[DEBUG] Blocking download of %@ on accept op %@
[INFO] 
%llx %@ (%@) %s %@, %@, 0x%lx
[DEBUG] 
%llx deleting item %@%s
[DEBUG] Structure signature mismatch for deletion %@ vs %@
[DEBUG] Content signature mismatch for deletion %@ vs %@
[INFO] 
%llx %@ (%@) %s %@, %@, 0x%lx, %@, 0x%lx
[DEBUG] Starting BRCXPCClient(FPFS)::reimport
[INFO] %@: reply(%@, %d, %@)
[INFO] %@: reply(%@, %llu, %@)
[INFO] 
%llx %@ (%@) %s %@
[INFO] %@: reply(%d, %@)
[DEBUG] 
%llx getting move status to reparent %@ to %@
[INFO] %@: reply(%@, %@, %@)
[DEBUG] no local item for %@
[DEBUG] Marking %@ from initial scan
[CRIT] Assertion failed: ![alreadyBouncedName isEqualToString:bouncedLogicalName]
[DEBUG] Locally bounced %@
[DEBUG] Ignoring name and parent change on immutable documents folder
[CRIT] Assertion failed: [_parentZoneRowID isEqualToNumber:newParentID.zoneRowID]
[CRIT] UNREACHABLE: Failed to save xattr blob to stage for signature %@ - %@
[CRIT] UNREACHABLE: nobody should import an item from a fault
[CRIT] UNREACHABLE: nobody should import an item from a BR Alias
[CRIT] UNREACHABLE: Unexpected import object %@
[ERROR] failed to fetch tags: %@
[DEBUG] read tags: [%@]
[WARNING] Inaccessible folder %@
[DEBUG] dropping tags
[ERROR] Failed to create package: %@
[WARNING] Failed to anchor package %@ at %@: %@
[WARNING] Failed to open package %@ at %@: %@
[CRIT] Assertion failed: _serverZone
[CRIT] Assertion failed: _defaultAppLibrary
[CRIT] Assertion failed: [serverZone isKindOfClass:[BRCPrivateServerZone class]]
[DEBUG] 
%llx %s private container %@
[WARNING] problem report for %@ wasn't acked
[DEBUG] problem report for %@ completed
[WARNING] Zone has resetted more than %lu times during the last %f seconds
[DEBUG] zone-health changed for %@ previous %@ new %@
[WARNING] We had a problem and the zone is healthy again, resetting the zone
[WARNING] We had a problem and the zone is healthy again, no need to reset the zone
[WARNING] Server told us the zone is healthy again, but we didn't have a problem
[DEBUG] 
%llx recomputing app sync block state for %@
[DEBUG] updating sync state to be %s for %@
[DEBUG] sync remaining %s for %@
[DEBUG] Queueing faults live barrier for %@
[DEBUG] 
%llx Resolving alias clash:
 alias1: %@
relpath1: %@
 alias2: %@
relpath2:%@
[DEBUG] silently deleting newer item %@
[DEBUG] oldest alias still resolves at %@
[DEBUG] deleting newest alias at %@
[DEBUG] oldest alias doesn't resolve, moving to newest path at %@
[WARNING] Failed to create snapshot %@ - %@
[DEBUG] Failed to create directory at %@ - %@
[WARNING] Failed to mount %@ - %@
[WARNING] Failed to unmount %@ - %@
[DEBUG] Can't rmdir %@ - %@
[DEBUG] Failed to delete snapshot %@ - %@
[CRIT] Assertion failed: self.progress.completedUnitCount >= 0
[CRIT] UNREACHABLE: total unit count should always be greater or equal to completed unit count; %@
[CRIT] UNREACHABLE: an unfinished progress should have at least one transfer tracked; %@
[CRIT] UNREACHABLE: future progress state isn't valid (unitCount: %lld)
[WARNING] Progress: observing a progress that doesn't have a doc ID
[WARNING] Progress: observing a progress that doesn't have a progress group
[NOTIF] Progress: ignore delta update because %@ for doc %@ isn't tracked anymore
[NOTIF] Progress: negative delta update for doc %@; [%lld -> %lld]
[NOTIF] Progress: ignore delta update ([%lld -> %lld] < %@) for doc %@ because it was counted as part of the resume operation
[NOTIF] Progress: ignore delta update ([%lld -> %lld] == %@) for doc %@ because it was counted as part of the resume operation
[NOTIF] Progress: %s finished for doc %@
[CRIT] Assertion failed: item.desiredVersion
[NOTIF] Progress: ignore download for doc %@ because its version size is equal to zero
[CRIT] UNREACHABLE: can't register progress for item without a document id %@
[NOTIF] Progress: update details for download of doc %@ because it was edited
[NOTIF] Progress: start tracking download for doc %@ because document is pending-download (versionSize: %lld)
[NOTIF] Progress: nothing to resume for '%@'
[NOTIF] Progress: resuming global progress for '%@'
[NOTIF] Progress: resumed progress for %lu zones
[NOTIF] Progress: doc %@ was reparented outside the visible scope of iCloud Drive, force deletion
[NOTIF] Progress: doc %@ is now dead, force deletion
[CRIT] Assertion failed: item
[NOTIF] Progress: stop publishing global progress
[CRIT] UNREACHABLE: can't update dowload throttle progress for item without a document id %@
[NOTIF] Progress: stop tracking download progress for doc %@ because transfer failed (toState: %s)
[CRIT] Assertion failed: documentID
[CRIT] Assertion failed: progressGroup
[CRIT] Assertion failed: _globalProgressMultiplex == nil
[CRIT] Assertion failed: completedUnitCount >= 0
[CRIT] Assertion failed: (!group && totalUnitCount >= 0) || totalUnitCount > 0
[CRIT] Assertion failed: !group || BRCProgressGroupPrettyPrint(group.intValue)
[NOTIF] Progress: new global progress to track %s
[CRIT] Assertion failed: _operationTimer
[CRIT] UNREACHABLE: Invalid suspend count (_operationTimerSuspendCount: %u)
[CRIT] Assertion failed: _uploads == nil
[CRIT] Assertion failed: totalUnitCount >= completedUnitCount
[NOTIF] Progress: take over current progress because uploads have priority
[CRIT] Assertion failed: _downloads == nil
[NOTIF] Progress: take over on current progress because downloads have priority
[CRIT] Assertion failed: _globalProgressMultiplex.indeterminate
[WARNING] Progress: can't proceed to upload cancelation without doc ID
[CRIT] Assertion failed: versionSize
[NOTIF] Progress: cancelling upload for doc %@ (syncUpState: %d, willRetry: %d, pendingQuota:%d, hasProgress: %d)
[WARNING] Progress: forcing pending quota to NO for doc %@ because transfer isn't retryable
[NOTIF] Progress: upload progress for doc %@ has no previous completed unit count
[WARNING] Progress: can't proceed to download cancelation without doc ID
[NOTIF] Progress: cancelling download for doc %@ (destroyIfLast: %d, willRetry: %d, hasProgress: %d)
[NOTIF] Progress: keep %@ unit counts completed for doc %@
[WARNING] Progress: download progress for doc %@ has no previous completed unit count
[NOTIF] Progress: did finish global progress (group: %s, reason: %s, userVisible: %d)
[CRIT] Assertion failed: transferInfo.sumOfCompletedUnitCountDelta == 0
[CRIT] Assertion failed: transferInfo.sumOfTotalUnitCountDelta == 0
[CRIT] Assertion failed: _uploads.versionSizes.count == 0
[CRIT] Assertion failed: _uploads.childProgresses.count == 0
[CRIT] Assertion failed: _uploads.previousUnitCounts.count == 0
[CRIT] Assertion failed: _uploads.outOfQuotaDocIDs.count == 0
[CRIT] Assertion failed: _downloads.versionSizes.count == 0
[CRIT] Assertion failed: _downloads.childProgresses.count == 0
[CRIT] Assertion failed: _downloads.previousUnitCounts.count == 0
[CRIT] Assertion failed: _downloads.resumeUnitCounts.count == 0
[NOTIF] Progress: resume download progress (%lu item downloading)
[NOTIF] can't delete document from progress without a document id %@
[NOTIF] Progress: stop tracking download progress of doc %@ (reason: %s)
[NOTIF] Progress: stop tracking upload progress of doc %@ (reason: %s)
[CRIT] Assertion failed: fromSize <= toSize
[CRIT] Assertion failed: versionSize <= progressSize
[CRIT] Assertion failed: delta >= 0
sync/fetch-parent-chain
[DEBUG] found zone root record ID
[CRIT] UNREACHABLE: Couldn't allocate ranks when fetching parent chain
[DEBUG] Fetching parent chain of %@
[DEBUG] Fetch parent chain of %@ took [%f] Secs and fetched [%llu,%llu] records [%llu] xattrs
[DEBUG] Cancelling %@ to be replaced by %@
[DEBUG] Not allowing re-creation of shared to me top level item when the item is dead in the server truth
[DEBUG] Waiting on server full sync before we fake sync shared to me top level item which is missing in the server truth
[DEBUG] shared document is read-only, do not sync
[CRIT] Assertion failed: !item.isSharedToMeTopLevelItem
[WARNING] item should really have an etag
[DEBUG] Fake syncing up shared folder record %@
[CRIT] UNREACHABLE: unsupported top level item kind
[DEBUG] Syncing up %sshared document alias record %@
[WARNING] syncing the structure of an item without an alias item
[DEBUG] Deleting alias in private zone %@
[DEBUG] Syncing up root app library record %@
[DEBUG] Also faking sync in side car for child item not known to the server %@
[WARNING] Marking %@ as rejected because the root share is dead
[WARNING] Marking %@ as rejected because it's being copied to a new zone
[CRIT] UNREACHABLE: We should never fake sync for an item being copied to a new zone that isn't a fault
[DEBUG] 
%llx re-scheduling apply jobs for %@ because it finished sync-up
[DEBUG] Unsharing %@
[DEBUG] Editing name on shareID %@
[DEBUG] Syncing up %sdirectory record %@%s
[WARNING] Faking sync for alias item alive in the same zone as the target %@
[WARNING] Not syncing deletion of ETag-less version: %@
[DEBUG] We need to update sharing info for this reset item
[DEBUG] shared document is read-only, do not sync its version
[DEBUG] will pcs chain records
[ERROR] re-uploading uploaded record: %@
[DEBUG] ItemID changed while uploading (%@ -> %@), starting over
[ERROR] thumbnail not found.  Force upload again
[CRIT] UNREACHABLE: package with no uploaded content - %@
[WARNING] Forcing re-upload of an item which has an expired put receipt - %@
[CRIT] UNREACHABLE: File with no content signature - %@
[DEBUG] reverting to server item because we can't reupload a fault for %@
[DEBUG] forcing upload of %@
(dead in server truth)
[DEBUG] Syncing up %sversion record %@
[DEBUG] Syncing up %sdocument structure record %@
[DEBUG] for %@%s
[DEBUG] Syncing up %sfinder alias record %@
[DEBUG] Syncing up %ssymlink record %@%s
[WARNING] Faking sync for item because it doesn't have field differences with the server item %@ vs %@
[DEBUG] Deleting dead record already dead in the server truth %@
[DEBUG] Can't delete shared top level item yet which is still syncing in another zone %@
[DEBUG] 
%llx Deleting %@ record for %@
[DEBUG] 
%llx preparing sync-up of %@
[CRIT] UNREACHABLE: asked to syncup an unkown item type: %@
[CRIT] Assertion failed: nextNotifRank >= _nextNotifRank
[CRIT] Assertion failed: nextPackageItemRank >= _nextPackageItemRank
[CRIT] UNREACHABLE: Called -asSharedItem on a private item
[CRIT] Assertion failed: !_serverZone.isSharedZone || (_sharingOptions & BRCSharingItemHasCKShareMask) != 0 || _st.state == BRC_ITEM_STATE_TOMBSTONE
[CRIT] Assertion failed: self.isFSRoot
[CRIT] UNREACHABLE: can't find the appLibrary of %@
[CRIT] UNREACHABLE: No longer support aliases
[CRIT] UNREACHABLE: unsupporter server item type: %d
[CRIT] UNREACHABLE: unknown item type: %d
[DEBUG] %@ has an out of band sync ack -- using client truth ckinfo %@ rather than server info %@
[CRIT] Assertion failed: !_fetched.byFileID
[CRIT] Assertion failed: !_fetched.byDocumentID
[CRIT] Assertion failed: matchByDocumentID.isDocument
[CRIT] Assertion failed: matchByDocumentID.st.documentID.unsignedLongLongValue == _pathOfItem.documentID
[CRIT] API MISUSE: lookups should not be used on paths of type: %s
[CRIT] Assertion failed: _pathOfItem.appLibrary.isiCloudDesktopAppLibrary
[DEBUG] looked up %@ by fileID:%llu
[CRIT] Assertion failed: self.isNonDesktopRoot || self.isDocumentsFolder
[CRIT] Assertion failed: self.isSharedZoneRoot
[CRIT] Assertion failed: sharedZone
[CRIT] UNREACHABLE: we should not have alias or share uuid types anymores
[CRIT] UNREACHABLE: we should not have alias or shared uuid types anymores
[CRIT] Assertion failed: libraryRowID || sharedZoneRowID
[CRIT] UNREACHABLE: invalid UUID: %s
[CRIT] Assertion failed: object->item_code == BRCItemIDCodeDocuments || object->item_code == BRCItemIDCodeZoneRoot || object->item_code == BRCItemIDCodeSharedZoneRoot
[CRIT] UNREACHABLE: decoding an unknown kind of itemid
[CRIT] UNREACHABLE: encoding an item id with an unknown kind
[CRIT] Assertion failed: rio.zone_rowid
[CRIT] UNREACHABLE: unparsable mangled itemID: %s
[CRIT] Assertion failed: len == sizeof(uuid_t)
[CRIT] UNREACHABLE: Invalid Shared ItemID
[CRIT] Assertion failed: argc == 2
[CRIT] Assertion failed: len == sizeof(_UUIDItemObject_OLD)
[CRIT] UNREACHABLE: Invalid Alias ItemID
[CRIT] Assertion failed: p->item_code == _UNUSED_BRCItemIDCodeSharedUUID
[CRIT] Assertion failed: len == sizeof(_UUIDItemObject_OLD) && ((_UUIDItemObject_OLD*)blob)->item_code == BRCItemIDCodeSharedZoneRoot
[DEBUG] Starting BRCReimporterUtil::reimportItemsBelowItemWithIdentifier::%@
[WARNING] Couldn't compute fp manager for current account
[ERROR] failed to re-import items under %@ with error %@
[DEBUG] Successfully asked file provider to re-import all %@ items
[DEBUG] Starting BRCReimporterUtil::ingestFromCacheItemWithIdentifier::%@
[ERROR] unable to read package header %@ with version %d - %@
[CRIT] Assertion failed: _reader
[ERROR] Input stream encountered an error %@
[DEBUG] Adding %@ to the manifest
[ERROR] Failed setting quarantine info for item %@: %@
[ERROR] Failed to open pkg item at %@ %{errno}d
[CRIT] UNREACHABLE: Invalid args in %@
[ERROR] openat failed to apply metadata for manifest item %@ %{errno}d
[ERROR] fsetattrlist failed for pkg item %@ %{errno}d
[CRIT] UNREACHABLE: we should have downloaded this file if there is nothing live
[ERROR] Failed to open live pkg item at %s %{errno}d
[ERROR] Failed to stat live pkg item at %s %{errno}d
[ERROR] clonefileat(%d, %@, %d, %@) %{errno}d
[DEBUG] cloned at %@ for package staged in %@
[ERROR] linkat(%d, %@, %d, %@) %{errno}d
[DEBUG] hardlinked at %@ for package staged in %@
[DEBUG] copied at %@ for package staged in %@
[CRIT] UNREACHABLE: No reader to stage package at %s
[CRIT] UNREACHABLE: Package has been corrupted on the serverAsking for asset index out of bounds %lu vs %lu in package: %@
[CRIT] UNREACHABLE: relpath should always exist
[DEBUG] %@ already exists in stage for package %@
[ERROR] Failed to mkdir %@ for package %@
[ERROR] Failed to create symlink %@ -> %@ for package %@
[CRIT] UNREACHABLE: Package has been corrupted in the cloudAsking for asset index out of bounds %lu vs %lu in package: %@
[CRIT] UNREACHABLE: Can't find item at index %ld
[ERROR] renameat(-1, %@, %d, %@) %{errno}d
[DEBUG] staged from %@ to %@ in %@
[CRIT] UNREACHABLE: We didn't fetch the corresponding pkg item from the server, but we were also not given a path to hardlink it from! (item: %s)
[CRIT] UNREACHABLE: invalid item type: %d
[CRIT] UNREACHABLE: xattr index is out of bounds %ld of total %ld
[CRIT] UNREACHABLE: Can't find xattr at index %ld
[ERROR] Failed to read xattrs blob: %@
[ERROR] Failed to apply xattrs to file descriptor: %@
[DEBUG] Successfully applied xattrs %@ to package item %@
[ERROR] unable to stat %@ for package %@ %{errno}d
[ERROR] Unable to add item to manifest: %@
[DEBUG] Finished staging package for %@. Item count:%lu.  Asset index:%lu
[CRIT] UNREACHABLE: NULL path for item: %@
[CRIT] UNREACHABLE: NULL path for item symlink content: %@
[CRIT] Assertion failed: _stream
[DEBUG] %@ sync-%@ is throttled for more than 10s: %.1fs (%@)
[DEBUG] syncing %@ %@
[NOTICE] Not finishing transmogrification because item is dead in the server thruth
[WARNING] Can't resovle %@, error %d
[WARNING] Item %@ have changed, abandoning rename
[DEBUG] renaming item for transmogrify %@ (%@ -> %@)
[ERROR] failed renaming for transmogrify from %@ to %@ (%s)
[ERROR] failed opening after rename for transmogrify (%s)
[ERROR] Can't find %@ in client truth
[DEBUG] Signalling fsimporter to clean un-migrated items
[ERROR] Can't find group container path for current persona %@
[DEBUG] containers matching '%@': %@
[INFO] Initializing restore manager with %@
[ERROR] Failed to update attached database %@
[INFO] Calling completion block with success.
[DEBUG] Setting deletion change token to %@ because item contains a dir faults
[DEBUG] share-query progressed from cursor:%@ to cursor:%@
[DEBUG] 
%llx query for %@ starting with batchSize:%u
[DEBUG] created query %@ from cursor:%@
[DEBUG] created query %@ from query:%@
[DEBUG] 
%llx handling result of %@: %@
[DEBUG] fetched share alias record %@ with etag:%@ in query %@
[CRIT] UNREACHABLE: unable to parse itemID from %@ in query %@
[DEBUG] fetched shared record %@ with etag:%@ in query %@
[DEBUG] 
%llx migration-query '%@' %@ for %@ starting from cursor:%@
[DEBUG] skipping migration '%@' because there is no server zone yet: %@
[CRIT] UNREACHABLE: unknown migration %s
[DEBUG] 
%llx migration-query '%@' %@ completed
[CRIT] UNREACHABLE: -[BRContainer isOverQuota] shouldn't be called by the daemon.
[CRIT] UNREACHABLE: -[BRContainer currentStatus] shouldn't be called by the daemon.
[CRIT] UNREACHABLE: -[BRContainer lastServerUpdate] shouldn't be called by the daemon.
sharing.fetch-user-record-id
[CRIT] UNREACHABLE: no record and no error
[DEBUG] Failed to start downloading item %@: %@
[DEBUG] We don't have enough space on disk to download %@.  Let's try to free some
[DEBUG] Item '%@' isn't on disk yet, failing the coordination
[CRIT] UNREACHABLE: Huh? %@ doesn't have a document id...
[CRIT] Assertion failed: _recursiveList == nil
[CRIT] Assertion failed: _listOp == nil
[DEBUG] can't get a list op, granting the read for %@
[CRIT] Assertion failed: _directoryItem == nil
[DEBUG] 
%llx coordinated read for %@
[CRIT] Assertion failed: _url == nil
[DEBUG] 
%llx Recursive coordinate download for %@
[CRIT] Assertion failed: _documentItem != nil
[DEBUG] 
%llx Providing Item for document %@
[CRIT] Assertion failed: _url != nil || _directoryItem != nil || _documentItem != nil
[DEBUG] %@ was cancelled
[CRIT] UNREACHABLE: clientDB queue is nil for session %@
[DEBUG] 
%llx network becomes not reachable, finishing the providing request
[DEBUG] failing coordinated read with %@
[DEBUG] granting coordinated read
[DEBUG] we were cancelled, cancelling docIDs %@
[DEBUG] evicting %@ because it's a fault and its download was cancelled
[CRIT] Assertion failed: _multipleItemsInteractiveSchedulingCount >= 0
[DEBUG] 
%llx force scheduling interactive transfers
[DEBUG] cancelling oldest batch (%@)
[CRIT] Assertion failed: oldestBatchOperation
[WARNING] We have way too many operations in flight.  Waiting for cancelled operations to finish cancelling
[DEBUG] waiting for the next scheduling to finish
[DEBUG] Force scheduling a new high priority batch
[CRIT] Assertion failed: operation
[DEBUG] adding operation %@ to the transfer stream
[DEBUG] Transfer stream backing off %.03fs
[CRIT] Assertion failed: _isWaitingForTransferBatch
[DEBUG] 
%llx cancelling entry %@ in %@
[CRIT] UNREACHABLE: this operation should have been cancelled
[CRIT] Assertion failed: !info || info.isSymLink
[DEBUG] updating symlink target to %@
[DEBUG] no change
create-zone
[DEBUG] 
%llx Sync: create cloudkit zone for %@
[CRIT] Assertion failed: !_optimisticSubscribe
[CRIT] Assertion failed: savedZones.count == 1
[CRIT] Assertion failed: !self->_syncContext.isShared
[DEBUG] optimistic subscribe failed with Zone Not Found, try to create the zone first
sync/zone-purge
[DEBUG] deleted %@ on server
[DEBUG] deleted shared zones associated to %@ on server
[INFO] Request to locate record: [%@] of item [%@]
sync/locate-record
[DEBUG] Failed to look up record %@ - %@
[CRIT] UNREACHABLE: Can't alloc ranks after fetching records
[DEBUG] Successfully looked up record %@
[DEBUG] Could not locate record %@
[DEBUG] Located record in shared zone. No need to fetch the parent chain.
[CRIT] UNREACHABLE: parent isn't a reference %@
[DEBUG] Locating recordID %@ in zone %@
[INFO] Locating recordID %@ in zone %@ --> Record not found. Error %@
[DEBUG] Record located. No need to fetch the parent chain.
[INFO] Locating recordID %@ in zone %@ --> Fetch parent chain failed with error %@
[CRIT] Assertion failed: fetchParentChainOp
[DEBUG] Locating record of %@ took [%f] Secs and fetched [%llu,%llu] records [%llu] xattrs
[ERROR] latest GC started %lld seconds in the future
[CRIT] Assertion failed: _deviceID != 0
[ERROR] Unable to exclude '%@' from backups: %@
[CRIT] Assertion failed: _stageDirectoryFileID[dirIndex] != 0
[CRIT] Assertion failed: fileID != 0
[DEBUG] 
%llx file %llu might have been unlocked
[ERROR] could not open locked file, not watching it %{errno}d
[DEBUG] forgetting locked file %@
[ERROR] fstat(%d) '%@' failed %{errno}d
[WARNING] '%@' is not a directory deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[ERROR] unlink('%@') failed deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x %{errno}d
[WARNING] '%@' is not on the same volume as the root deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[ERROR] mkdir('%@') withIntermediateDirectories failed: %@
[ERROR] mkdir('%@') failed %{errno}d
[ERROR] fstat('%@') failed %{errno}d
[ERROR] mkdirat(%d, '%@') failed %{errno}d
[ERROR] symlinkat('%@', %d, '%@') failed %{errno}d
[ERROR] BRCOpenAt(%d, %@, O_RDONLY) failed %{errno}d
[ERROR] BRCOpenAt(%d, %@, O_CREAT|O_RDWR|O_EXCL) %{errno}d
[ERROR] fcopyfile(%d, %d, NULL, COPYFILE_DATA) %{errno}d
[ERROR] BRCRenameAt(%d, %@, %d, %@, 0) %{errno}d
[DEBUG] can't open by fileID:%llu %{errno}d
[CRIT] UNREACHABLE: returnedFileID(%llu) != fileID(%llu)
[WARNING] Abort making live: unable to flock %@ %{errno}d
[DEBUG] renameat(-1, '%@', %d, '%@', RENAME_SWAP) failed for fileID=%llu,  %{errno}d
[DEBUG] swapped '%@' and '%@' fileID=%llu
[DEBUG] renameatx_np(-1, '%@', %d, '%@', %u) failed for fileID=%llu,  %{errno}d
[DEBUG] renamed from '%@' to '%@' in parentFileID:%llu
[CRIT] UNREACHABLE: nil client zone when applying %@ and %@
[CRIT] UNREACHABLE: invalid item type
[DEBUG] Preventing updating the put back info path from the server when parented by .Trash: %@
[DEBUG] got EPERM, failing to return the right permissions
[ERROR] can't set the xattr %s:  %{errno}d
[ERROR] can't set xattr %s:  %{errno}d
[ERROR] can't to set Spotlight last-used date xattrs %{errno}d
[ERROR] can't remove Spotlight last-used date xattrs %{errno}d
[ERROR] Unable to remove xattrs: %@
[ERROR] Unable to set structural xattrs for signature %@: %@
[ERROR] fsetxattr(%s) failed %{errno}d
[ERROR] cannot read xattr '%s': %@
[ERROR] listing existing xattrs failed: %@
[ERROR] fsetattrlist failed %{errno}d
[ERROR] Can't save immutable share permissions %{errno}d
[ERROR] Can't get the group for "everyone" in order to limit share permissions %{errno}d
[ERROR] Failed to strip the acls %{errno}d
[CRIT] Assertion failed: _stageDirectoryPath[kBRCStageDirectoryForPendingFetchStream] != nil
[DEBUG] deleting (%d, '%@') asynchronously
[DEBUG] renameat(%d, '%@', %d, '%@') failed %{errno}d
[ERROR] failed removing documentID for %@ %{errno}d
[DEBUG] moved (%d, '%@') to the graveyard at '%@' for %@
[WARNING] Abort making live: path doesn't exist %@
[CRIT] Assertion failed: relpath
[DEBUG] moved from %@
to '%@' in old version stage
[DEBUG] Making the move to the graveyard succeed even though the file doesn't exists anymore
[DEBUG] Failing the move to graveyard because the item is busy
[DEBUG] moved from %@
to '%@' in graveyard
[DEBUG] fileID:0 doesn't exist in stage (metadata-only update)
[DEBUG] fileID:%llu is in the %s
[DEBUG] can't open src to transfer documentID:%u from fileID:%llu to fileID:%llu %{errno}d
[DEBUG] src parentFileID:%llu not in graveyard, can't transfer documentID:%u from fileID:%llu to fileID:%llu %{errno}d
[DEBUG] documentID mismatch on fileID:%llu (expected:%u actual:%u) not transferring to fileID:%llu
[DEBUG] can't open dst to transfer documentID:%u from fileID:%llu to fileID:%llu %{errno}d
[ERROR] failed transferring documentID:%u from fileID:%llu to fileID:%llu %{errno}d
[DEBUG] transferred documentID:%u from fileID:%llu to fileID:%llu
[DEBUG] running GC because we are in low disk space
[ERROR] fts_open(%@) failed %{errno}d
[ERROR] fts_read() failed for path %s %{errno}d
[DEBUG] Collected %lld bytes from purging the graveyard
[DEBUG] removing staged file for upload: %@
[DEBUG] removing staged file with id %llu
[DEBUG] removing staged file for download: %@ device:%d ino:%lld
[CRIT] UNREACHABLE: Failed to parse record name %@ or zone %@
[DEBUG] removing deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[CRIT] UNREACHABLE: Unexpected record name %@
[ERROR] Failed checking contents at %@ - %@
[WARNING] Skipping xattr check because we're in the middle of fetching delta change records
[WARNING] Skipping xattr check because we're in the middle of fetching item records
[CRIT] Assertion failed: components.count == 1
[WARNING] Removing unused xattr signature %@
[DEBUG] starting garbage collection at %ld
[DEBUG] latest GC:%ld; previous GC:%ld
[DEBUG] closing
[CRIT] Assertion failed: !_persistedState
[CRIT] Assertion failed: _persistedState
[CRIT] Assertion failed: minDelta >= 0
[CRIT] Assertion failed: maxDelta > minDelta
[DEBUG] running GC at startup after %lld seconds; %@
[DEBUG] skipping GC at startup after %lld seconds; %@
[DEBUG] running GC in XPC activity after %lld seconds; %@
[DEBUG] skipping GC in XPC activity after %lld seconds; %@
[WARNING] Failed to set the xpc state to done
[CRIT] UNREACHABLE: Asked to save xattr without url
[CRIT] UNREACHABLE: Asked to save xattr without signature or data
[DEBUG] Saving an xattr signature that already exists! %@
[CRIT] UNREACHABLE: Asked for xattr without signature
[CRIT] Assertion failed: _session.offline
[ERROR] fgetattrlist(%d) failed %{errno}d
[ERROR] failed allocating documentID for fileID:%llu %{errno}d
[ERROR] Failed fstat on file %{errno}d
[DEBUG] 
%llx physical URL request for '%@'
[CRIT] UNREACHABLE: What's this path???
[DEBUG] Not in the %@ namespace, not for us
[DEBUG] can't parse version path '%@', probably not an iCloud version, allow it
[ERROR] Logged out: can't compute physical URL for '%@'
[ERROR] can't find container for path '%@'
[ERROR] can't find live item for path '%@'
[DEBUG] 
%llx coordinated read request for '%@' (%@)
[ERROR] Logged out: can't grant coordination to reader %@
at path '%@'
[DEBUG] Found a download operation already pending, piggy back on it
[ERROR] can't find sync context for mangled ID '%@', path '%@'
[DEBUG] Version already local, we're good!
[ERROR] failed downloading version to path '%@': %@
[CRIT] UNREACHABLE: Couldn't change personas while saving package extensions list
[DEBUG] migration completed already
[DEBUG] No extensions to migrate
[DEBUG] Migrating %lu extensions
[WARNING] invalid change token format: %@
[CRIT] UNREACHABLE: There should be a root item for %@
[CRIT] Assertion failed: rank >= _rank
[DEBUG] device does not support CoreSpotlight indexing, no need to drop any index
[DEBUG] CoreSpotlight index has already been dropped
[WARNING] dropping CoreSpotlight index
[CRIT] Assertion failed: index
[ERROR] failed dropping Spotlight index: %@
[DEBUG] dropped Spotlight index successfully
[ERROR] failed to synchronize user defaults for %@
[ERROR] failed deleting ranks from tombstones: %@
[DEBUG] deleted ranks from tombstones successfully
[DEBUG] dropping item from recents index %@
[DEBUG] not dropping item, it is still live: %@
[DEBUG] Learning index acked rank %llu (flushed rank %llu)
[DEBUG] Finished indexing for now
[DEBUG] handling reset for rowID %lld, notif rank: %llu
[WARNING] Dropping spotlight index for %@ due to a reset
[ERROR] Failed to delete searchable items for mangledIDs %@: %@
[WARNING] reset zone is not a private zone, skipping
[ERROR] change token has expired, index should be dropped
[CRIT] UNREACHABLE: not ready for indexing, stopping here
[DEBUG] incoming rank is newer than what we know about: %lld > %lld, stopping here
[DEBUG] enumerating changes from notif rank %llu
[CRIT] UNREACHABLE: bad tombstone entry type: %d
[DEBUG] found a tombstone entry of type client zone db rowid (%lld), sending current batch
[DEBUG] sending batch from %llu to %llu (%@,%@)
[DEBUG] active set did change, notifying fileproviderd
[ERROR] failed to signal enumerator for working set: %@
[DEBUG] Canceling spotlight indexer.
[DEBUG] Publishing download progress for %@
[WARNING] Download: Received negative progress from CK. progress [%f]
[CRIT] UNREACHABLE: thumbnail is not a CKAsset: %@
dl-thumbnail
[DEBUG] 
%llx computing desired packages indices
[CRIT] UNREACHABLE: Package inside %@ is corrupted in the cloud
Asking for asset index out of bounds %lu vs %lu in package: %@
[CRIT] Assertion failed: false
[DEBUG] Desired indices are: %@ (itemCount: %ld)
[CRIT] UNREACHABLE: file content is not a CKAsset: %@
[CRIT] UNREACHABLE: finder bookmark without content: %@
[CRIT] UNREACHABLE: pkg content is not a CKPackage: %@
[CRIT] UNREACHABLE: package manifest is not a CKAsset: %@
[CRIT] UNREACHABLE: xattrs package is not a CKAsset: %@
[CRIT] UNREACHABLE: unknown type for downloaded object %@
dl-content
[CRIT] Assertion failed: !item.isFinderBookmark
[CRIT] UNREACHABLE: There should be a file content property in %@
[CRIT] UNREACHABLE: no fileURL for %@ in %@
[DEBUG] 
%llx Downloader[%lld] staging %@
[CRIT] Assertion failed: vRecord
[CRIT] Assertion failed: ![vRecord.recordID.zoneID.ownerName isEqualToString:CKCurrentUserDefaultName] || _secondaryRecord
[CRIT] Assertion failed: [vRecord.etag isEqualToString:_etag]
[ERROR] Can't deserialize %@
[DEBUG] received version %@ %@
[ERROR] Can't open %@ to set metadata %{errno}d
[ERROR] Failed to attach thumbnail to version
dl-version
[ERROR] Unable to stage item in Genstore: %@
[DEBUG] Created addition staged at URL: %@, creation info: %@
[CRIT] Assertion failed: itemID.isNonDesktopRoot
[CRIT] UNREACHABLE: Constructing shared zone root item for itemID %@ is not supported
[CRIT] API MISUSE: can't save a zone root item
[CRIT] Assertion failed: self.appLibrary.fileID
[CRIT] UNREACHABLE: asking the parent item of a root item
[CRIT] UNREACHABLE: asking the parent item ID of a root item
[CRIT] UNREACHABLE: asking the structural bit of a zone root is not supported
[DEBUG] Next event will fire in %fs
[CRIT] Assertion failed: _st.type == BRC_ITEM_TYPE_ALIAS
[DEBUG] 
%llx learning target %@ for %@
[CRIT] Assertion failed: self.appLibrary != item.appLibrary || item.isSharedToMe
[DEBUG] Forcing rejection of alias item
[DEBUG] 
%llx Deleting alias %@ in %@ because target is dead
[DEBUG] 
%llx Deleting alias %@ in %@ because target moved to this app library
[ERROR] failed saving sharing options update %@: %@
[WARNING] Forced %lld orphans to be tombstones in the shared zone
[CRIT] UNREACHABLE: Path depth overflow
[DEBUG] propagated delete of %lld recursive children of %@
sharing/copy-web-auth-token
[ERROR] failed fetching webauth token for %@: %@
[DEBUG] Clearing app sync blocked bit because we created an item that needs sync
[CRIT] Assertion failed: _session.clientDB.isBatchSuspended
[DEBUG] 
%llx %@[%@]: finishing sync up
[DEBUG] Sync-Up[%@]: Scheduling a sync-up job
[DEBUG] Sync-Up: Recovered from %u missing sync up jobs
[DEBUG] 
%llx Uploader: scheduling retries
[DEBUG] Uploader[%@]: upload stage set to: %@
[DEBUG] 
%llx Uploader[%@]: %s -> %s [cancel-job]
[DEBUG] Uploader[%@]: Cancelling upload
[DEBUG] Uploader[%@]: cancelled thumbnail upload: %@
[DEBUG] Uploader[%@]: Cleaning up upload stage: %@
[DEBUG] 
%llx Uploader[%@]: cancel and cleanup item upload
[DEBUG] Uploader: scheduling %lld suspended throttles
[CRIT] API MISUSE: should call setState:forUploadJobID:zone:
[DEBUG] 
%llx Uploader[%@]: setting state to %s
[DEBUG] 
%llx Uploader[%@]: uploading
[CRIT] Assertion failed: !item.isPausedFromSync && !item.isResumingSync
[DEBUG] Uploader[%lld]: job has been put back in queue %@
[DEBUG] Uploader: next job to retry in %.3fs
[DEBUG] Uploader: no more jobs to retry
[DEBUG] Kicking uploads for %@
[CRIT] UNREACHABLE: no app library for row ID %@
[CRIT] UNREACHABLE: upload scheduler is exact we should have an item
[DEBUG] Uploader: reached maximum allowed number of thumbnails retrieval (%ld)
[DEBUG] Uploader: below maximum allowed number of thumbnails retrieval (%ld)
[DEBUG] Uploader[%lld]: generating manifest for %@
[DEBUG] Uploader[%lld]: adding package item with deviceID 0x%lx fileID %lu
[ERROR] Failed to add item to package
[CRIT] UNREACHABLE: We're missing a package xattr for signature %@ - %@
[DEBUG] Uploader[%lld]: adding xattr package item with URL %@ for %@
[WARNING] Failed to add xattrs to xattrs package: %@
[ERROR] failed to create manifest at %@: %@
[DEBUG] Uploader[%lld]: assets only record generated: %@
[CRIT] UNREACHABLE: can't upload an item without a fileID
[CRIT] UNREACHABLE: can't upload a fault
[DEBUG] Adding CKAsset with deviceID 0x%lx fileID %@ to the record for item %@
[ERROR] Unable to copy thumbnail at '%@' to upload stage: %@
[ERROR] Unable to get thumbnail size at '%@' to upload stage: %@
[DEBUG] generated thumbnail: %@
[DEBUG] Creation of record for %@ failed: %@
[DEBUG] 
%llx Uploader[%@]: Done generating thumbnail, building record for %@
[DEBUG] 
%llx Uploader[%@]: Preparing record for upload of %@
[DEBUG] Uploader[%@]: generating thumbnail (shouldTransferThumbnail:yes) %@
[DEBUG] Uploader[%@]: skipping thumbnail (inDocumentScope:%s shouldHaveThumbnail:%s shouldTransferThumbnail:no)
[WARNING] can't duplicate the package %@: %@
[WARNING] can't anchor the package %@ at %@: %@
[CRIT] Assertion failed: pbitem.type != BRFieldPkgItemType_FILE || pbitem.hasSignature
[DEBUG] Handling file modified error: %@
[DEBUG] 
%llx Uploader[%@]: done with %@ (%@)
[WARNING] Dropping file ID and re-ingesting from file provider because we need to rescan the asset for %@ - %@
[DEBUG] Error is retriable, putting item back in the queue
[ERROR] non recoverable error while uploading %@: %@
[DEBUG] Uploader[%@]: increasing throttle back off
[CRIT] Assertion failed: ![item isReadAndUploaded]
[DEBUG] Uploader[%@]: performing server-side asset copy
[CRIT] UNREACHABLE: Can't server-side asset copy an item with an invalid signature %@
[CRIT] UNREACHABLE: Can't server-side asset copy an invalid thumbanil signature for %@
[CRIT] UNREACHABLE: Can't server-side asset copy an item with an invalid xattr signature %@
[CRIT] UNREACHABLE: %@ should be a document
[CRIT] UNREACHABLE: %@ should be needs-upload
[DEBUG] Uploader[%@]: throttle for %@ doesn't exist anymore
[NOTICE] uploading %ld documents in %@
[DEBUG] 
%llx Uploader[%lld]: %@ failed to sync up because it's out of quota: %@
[CRIT] Assertion failed: _session.clientDB.changes == 1
[DEBUG] 
%llx re-uploading failed items with size less than %@
[DEBUG] 
%llx quota changed from %@ to %@
[DEBUG] updated %@ quota: %lld
[WARNING] can't update quota: %@
[CRIT] UNREACHABLE: Item scheduled to upload isn't a document %@
[DEBUG] Uploader: Recovered from %u missing uploader jobs
[WARNING] Couldn't parse unsalted bookmark data %@ - %@
[CRIT] UNREACHABLE: Can't locate target server zone from bookmark data %@
[DEBUG] Overriding structural and content info from (%@, %@) -> (%@, %@) because the item is OOB sync
[CRIT] Assertion failed: itemID && parentID
[DEBUG] PCS chaining %@ (st:%@, ct:%@) to %@ for op %@
[CRIT] Assertion failed: !_fullyChainRecordInfoMap[parentRecordID]
[CRIT] Assertion failed: parentCKInfo
[CRIT] UNREACHABLE: No parent item?!?!
[CRIT] UNREACHABLE: unkown record type
[CRIT] Assertion failed: preppedRecords.count == 0
[DEBUG] Received records from first PCS step: %@
[CRIT] Assertion failed: preppedRecord.protectionData
[CRIT] Assertion failed: j + _halfChainedRecordMap.count == preppedRecords.count
[CRIT] Assertion failed: halfChainInfo != nil
[CRIT] Assertion failed: info.itemID
[DEBUG] We need to list the root item %@
[DEBUG] Finished enumerating pcs under directory %@
[DEBUG] We need to list %@
[DEBUG] Enumerating pcs under new directory %@
[CRIT] Assertion failed: rootItem
sync/pcs-chain
[CRIT] UNREACHABLE: Can't PCS chain to documents, trash, or root
[CRIT] Assertion failed: si
[DEBUG] %@ is already chained
[CRIT] Assertion failed: listOp
[WARNING] Got an error indicating we need to reparent %@ to %@
[ERROR] Blocking %@ from sync up until it is next modified because the server failed to pcs chain %@ with a permanent error
[WARNING] Encountered pcs chaining error %@ for record %@
[WARNING] Retrying with new record batch because we were told about a new parent - %@
[ERROR] Failed iterating PCS - %@
[ERROR] failed sending first PCS step - %@
[ERROR] Failed sending second PCS step - %@
[WARNING] Learning etag in the server truth for half chained parent %@
[WARNING] Uh oh... the record changed server side while we were mid pcs chain batch.  We might have oplock conflicts
[CRIT] Assertion failed: record.parent
[CRIT] Assertion failed: !record.parent
[WARNING] Syncing down before retrying %@
[DEBUG] Refreshed root item from db %@
[WARNING] Couldn't refresh item from the database
[CRIT] UNREACHABLE: %@ isn't a dictionary!
[ERROR] Failed to find item to re-ingest %@
[CRIT] UNREACHABLE: Marking %@ as delete for re-apply 
[ERROR] Failed to re-ingest item %@ - %@
[DEBUG] Asked to re-ingest %@ for a file ID
[CRIT] UNREACHABLE: can't unarchive CKRecord: %@
[CRIT] UNREACHABLE: Item has only one of the itemID %@ and zoneRowID %@ fields
[DEBUG] 
%llx Loaded %lu system icloud accounts
[DEBUG] Ignoring EDS account: %@ (iCloudDrive/multiAccountsHandling=no)
[ERROR] couldn't get existing domains: %@
[INFO] Removing domain %@ since it doesn't have a backing AC account
[DEBUG] domain's persona still exists, removing account path
[ERROR] couldn't remove domain %@: %@
[DEBUG] Successfully removed domain %@
[CRIT] UNREACHABLE: Can't adopt persona for the account handler. Skipping it
[CRIT] Assertion failed: acAccountID
[CRIT] UNREACHABLE: Can't create and load the session because we can't adopt the persona
[CRIT] Assertion failed: self->_finishedLoadingAccounts
[CRIT] Assertion failed: domain
[DEBUG] Waited without success for %@
[WARNING] Found account handler %@ by persona match
[ERROR] Not creating account session when we don't support multi accounts
[INFO] Updating account %@
[DEBUG] Updating display name is not supported on non EDS account
[INFO] Logging out account %@
[DEBUG] Account is data separated, removing domain
[DEBUG] Removing domain: %@, display name: %@
[DEBUG] Removed domain %@ with error %@
[ERROR] No domain to remove found for %@
[DEBUG] current persona doesn't match session's persona, trying to adopt
[CRIT] Assertion failed: accountHandler.session.isDataSeparated
[DEBUG] Can't adopt session's persona, it must have already been deleted.
[DEBUG] Destroyed session during logout successfully
[ERROR] Failed to destroy session during logout
[CRIT] UNREACHABLE: Failed to adopt persona for block adoption
[CRIT] UNREACHABLE: Can't adopt persona for xpc activity, deferring the activity
[DEBUG] Failed to defer the activity after persona failure.
[DEBUG] Reverting etag to pre-czm tag %@
[DEBUG] 
%llx Apply Changes[%lld]: %s item: %@
 diffs: %@
[CRIT] Assertion failed: li || si
[CRIT] UNREACHABLE: no client zone when applying %@ and %@
[DEBUG] Clearing the listed docs bit on the documents folder because the documents folder is a dir-fault
[DEBUG] Found item %@ that collides with %@
[WARNING] Found directory %@ that has a package name, bounced name to %@
[WARNING] No alias pointing to new item shared container, forcing sync down on private container
[INFO] Fetch share alias for share alias record ID [%@]: %@ with error %@
[DEBUG] Created reservation for %@ item: %@
[DEBUG] Updating item %@ from server item
[WARNING] Rejected item was revived.  Marking sync as idle to apply server version for %@
[WARNING] Renaming %@ to %@ which has a package name
[WARNING] trying to initialize a globalID from a nil object
[ERROR] Failed fetching zones to prep PCS for %@ - %@
[DEBUG] No zones need PCS prep currently
[DEBUG] Prepping PCS for %@ -> %@
[DEBUG] PCS migration %@ for %@
[ERROR] Failed migrating PCS for %@ - %@
[CRIT] Assertion failed: ![BRCAccountsManager sharedManager].isInSyncBubble
[CRIT] UNREACHABLE: session wasn't properly closed
[CRIT] UNREACHABLE: db connections weren't properly closed and nillified
[CRIT] Assertion failed: ![_xpcClients containsObject:client]
[CRIT] Assertion failed: [_xpcClients containsObject:client]
[DEBUG] 
%llx closing XPC connections
[DEBUG] invalidating XPC clients: %@
[DEBUG] finished waiting for invalidated XPC clients
[CRIT] UNREACHABLE: there are still XPC clients around: %@
[DEBUG] 
%llx creating '%@'
[CRIT] can't create directory at '%@': %@
[CRIT] can't retrieve attributes of item at '%s': %@
[CRIT] created directory doesn't have read/write access for owner (permission: %c%c%c%c%c%c%c%c%c%c)
[DEBUG] permissions checked
[WARNING] Failed to get persona for accountID = %@
[INFO] Will attempt to add domain: providerID = %@ , domainID = %@, persona = %@, displayName = %@
[WARNING] Error adding provider %@: %@
[INFO] Adding Provider %@ was succesfull
[ERROR] Unable to create directory at '%@'; %@
[DEBUG] New mobile documents dir = %@
[DEBUG] Checking if there is a need to submit DB_RESET telemetry
[CRIT] Assertion failed: self.analyticsReporter
[DEBUG] Error Unarchiving %@ - %@
[CRIT] Assertion failed: decodedData.count == 2
[DEBUG] Error while deleting %@ - %@
[DEBUG] Successfully deleted %@
[DEBUG] flocking '%@'
[DEBUG] 
%llx including %@ in backup
[ERROR] Unable to include '%@' from backups: %@
[CRIT] Assertion failed: defaultAppLibrary
[DEBUG] 
%llx rescheduling pending disk throttles
[DEBUG] 
%llx recomputing disk space
[ERROR] failed to create root:'%@': %@
[DEBUG] Checking for items that need pcs chaining
[DEBUG] Failed to defer the pcs chain state
[ERROR] Failed to defer the activity state
[ERROR] failed to defer the activity state
[ERROR] Failed to set the xpc activity state to done
[DEBUG] Checking for folders that need transmogrify
[DEBUG] Scheduling directory transmogrify at startup for %@
[ERROR] failed to continue the pcs chain state
[DEBUG] 
%llx fixing up items
[DEBUG] Will acknowledge the last sync down again for %@ (server:%lld, client:%lld)
[DEBUG] 
%llx Acknowledge the last sync down again for %@
[DEBUG] 
%llx Fixing up bounced and staged items
[CRIT] UNREACHABLE: %@ is missing a sync up throttle
[CRIT] UNREACHABLE: %@ has a corrupt upload throttle
[CRIT] UNREACHABLE: side car forgot to schedule sync up throttle %@!
[CRIT] Assertion failed: qos_class_self() == QOS_CLASS_UTILITY
[DEBUG] 
%llx resuming account session
[CRIT] Assertion failed: !_resumed
[CRIT] Assertion failed: _accountWaitOperation.operationFailureThrottle
[CRIT] Failed to encode corruption info %@: %@
[DEBUG] Successfully created %@ - with data - %@
[DEBUG] Failed to create %@
[DEBUG] 
%llx closing account session. Open: %d
[DEBUG] cancelling misc operation: %@
[DEBUG] 
%llx cancelling _autoResumeSyncTimerScheduler...
[DEBUG] 
%llx cancelling _defaultScheduler...
[DEBUG] 
%llx cancelling _fsImporter...
[DEBUG] 
%llx cancelling _fsUploader...
[DEBUG] 
%llx cancelling _fsDownloader...
[DEBUG] 
%llx cancelling _syncUpScheduler...
[DEBUG] 
%llx cancelling _applyScheduler...
[DEBUG] 
%llx cancelling _notificationManager...
[DEBUG] 
%llx cancelling _recentsEnumerator...
[DEBUG] waiting for misc operation: %@
[DEBUG] 
%llx closing _autoResumeSyncTimerScheduler...
[DEBUG] 
%llx closing _defaultScheduler...
[DEBUG] 
%llx closing _fsImporter...
[DEBUG] 
%llx closing _fsUploader...
[DEBUG] 
%llx closing _fsDownloader...
[DEBUG] 
%llx closing _syncUpScheduler...
[DEBUG] 
%llx closing _applyScheduler...
[DEBUG] 
%llx closing _fairClientDBScheduler...
[DEBUG] 
%llx closing _notificationManager...
[DEBUG] 
%llx closing _recentsEnumerator...
[DEBUG] 
%llx cancelling and closing our containers and sync context...
[DEBUG] preventing creation of new sync context...
[DEBUG] 
%llx cancelling %@...
[DEBUG] 
%llx closing %@...
[DEBUG] closed containers
[CRIT] Assertion failed: zone.delegate == nil
[CRIT] Assertion failed: [self hasRootForSyncedFolderType:folderType]
[DEBUG] waiting for accountWaitOp %@
[DEBUG] finished waiting for accountWaitOp %@
[DEBUG] 
%llx Force flush the database...
[DEBUG] 
%llx closing _stageRegistry...
[DEBUG] 
%llx closing _diskReclaimer...
[DEBUG] 
%llx closing dbManager...
[DEBUG] 
%llx closing _containerScheduler...
[DEBUG] 
%llx cancelling sync consistency report with mount path %@
[CRIT] Assertion failed: _offline
[DEBUG] 
%llx resetting local state for %@
[CRIT] Assertion failed: hasDB
[DEBUG] unlinking %@
[DEBUG] unlinking br security bookmark %@
[DEBUG] unlinking symlink %@
[DEBUG] keeping preserved item %@
[DEBUG] keeping item too large to upload %@
[DEBUG] unlinking excluded item %@
[DEBUG] unlinking .localized file %@
[DEBUG] unlinking uploaded .app file %@
[DEBUG] 
%llx destroying local account data for %@
[DEBUG] done deleting local files
[DEBUG] did reset TCC access
[DEBUG] done deleting local account data
[DEBUG] 
%llx loading app libraries
[DEBUG] 
%llx loading server zones
[DEBUG] 
%llx loading shared server zones
[DEBUG] loaded server zone: %@
[DEBUG] 
%llx loading client zones
[DEBUG] loaded client zone: %@
[CRIT] UNREACHABLE: [client|server]zoneNames mismatch:  %@ does not match with %@
[WARNING] ignoring client zone because it's missing a server zone
[DEBUG] 
%llx loading shared client zones
[DEBUG] loaded shared client zone: %@
[CRIT] UNREACHABLE: [client|server]zoneName or ownerss mismatch:  %@ does not match with %@
[WARNING] ignoring shared client zone because it's missing a server zone
[DEBUG] loaded app library: %@
[DEBUG] ignoring app library because it's missing a client zone
[CRIT] Assertion failed: appLibrary.wasMovedToCloudDocs ? clientZone.isCloudDocsZone : [clientZone.zoneName isEqualToString:appLibraryID]
[DEBUG] 
%llx registering and activating zones
[WARNING] dropping %@ because it's missing its client zone or app library
[DEBUG] activating %@
[CRIT] Assertion failed: BRCurrentPersonaMatchesID(self.personaIdentifier)
[CRIT] Assertion failed: serverZone
[CRIT] Assertion failed: serverZone.clientZone
[CRIT] UNREACHABLE: missing client zone for %@
[DEBUG] Deactivating private client zone %@
[CRIT] Assertion failed: sharedClientZone.state & BRCClientZoneStateIsResetting
[CRIT] Assertion failed: sharedClientZone.state & BRCClientZoneStateWantsDataUnlinked
[DEBUG] Destroying shared client zone %@
[DEBUG] deleting shared zone and library for %@ from local db
[DEBUG] deleting shared container %@ from server db
[WARNING] Can't find app library in the middle of closing
[CRIT] UNREACHABLE: can't find app library for %lld
[DEBUG] server zone already exists
[DEBUG] Created server zone: %@
[CRIT] Assertion failed: serverZone.dbRowID
[DEBUG] client zone already exists
[DEBUG] Created client zone: %@
[CRIT] Assertion failed: [clientZone.dbRowID isEqualToNumber:serverZone.dbRowID]
[DEBUG] app library already exists
[CRIT] Assertion failed: isShared == (appLibrary == nil)
[CRIT] UNREACHABLE: No db rowID on an app library or server zone
[CRIT] UNREACHABLE: No mangledID on a server zone
[CRIT] UNREACHABLE: no zone name on a server zone
[DEBUG] 
%llx Creating app library and zones: %@ if needed
[CRIT] UNREACHABLE: invalid containerID: %@
[DEBUG] returning early server zone: %@
client zone: %@
app library: %@
[CRIT] UNREACHABLE: can't find the default client zone
[ERROR] couldn't create app library
 appID: %@
serverZone: %@
clientZone: %@
[DEBUG] returning app library %@
server zone:%@
, client zone: %@
[CRIT] Assertion failed: mangledID.isShared
[CRIT] UNREACHABLE: can't reserve library rowID for a shared zone
[DEBUG] reserved rowid %@ for %@
[DEBUG] fetching the user record id because it wasn't set in the client state
[DEBUG] fetched user record id %@ with error %@
[CRIT] Assertion failed: userRecordName != nil
[DEBUG] ignoring failure to enable synced folder type
[ERROR] failed creating container %@ under root %@
[DEBUG] 
%llx CloudDocs apps list did change
[CRIT] UNREACHABLE: Couldn't change personas during app list refresh
[DEBUG] detected %@ of free space, scheduling pending-disk downloads
[DEBUG] 
%llx %s storage optimization for %@
[CRIT] Assertion failed: _isGreedy
[DEBUG] 
%llx starting to download documents for which we should be greedy
[DEBUG] 
%llx enabling sync for %@
[CRIT] UNREACHABLE: Bad folder type
[DEBUG] seting xattr value %@ on path: %@
[ERROR] failed setting xattr value %@ for key %@ on path: %@
[DEBUG] 
%llx disabling sync for %@
[CRIT] UNREACHABLE: Cannot disable sync for BRCSyncedFolderTypeDefault
[CRIT] Assertion failed: ![self hasRootForSyncedFolderType:folderType]
[CRIT] Assertion failed: _rootsByFolderType
[WARNING] Can't open symlink in the stage
[WARNING] Can't set the hidden finderinfo bit on the staged symlink - %s
[WARNING] Can't resolve the dest path - %s
[WARNING] Can't make the symlink live from stage - %@
[DEBUG] Made symlink live for %@
[WARNING] Can't make symlink in stage - %@
[CRIT] UNREACHABLE: sessionDirPath was accessed after being closed
[CRIT] UNREACHABLE: cacheDirPath was accessed after being closed
[CRIT] UNREACHABLE: autoResumeSyncTimerScheduler was accessed after being closed
[CRIT] UNREACHABLE: applyScheduler was accessed after being closed
[CRIT] UNREACHABLE: containerScheduler was accessed after being closed
[CRIT] UNREACHABLE: fsImporter was accessed after being closed
[CRIT] UNREACHABLE: notificationManager was accessed after being closed
[CRIT] UNREACHABLE: stageRegistry was accessed after being closed
[CRIT] UNREACHABLE: Bad folder type %u
[CRIT] Assertion failed: dictionary
[CRIT] UNREACHABLE: getting nil entry for folderType: %lu, dictionary: %@
[CRIT] UNREACHABLE: setting nil entry for folderType: %lu, dictionary: %@
[CRIT] Assertion failed: !dictionary[@(folderType)]
[CRIT] Assertion failed: dictionary[@(folderType)]
sharing/accept-flow
[NOTICE] share acceptation %@ failed with error %@
[DEBUG] use fallback flow with reason %@
[CRIT] UNREACHABLE: Session is not cancelled but DBs serial queue is nil!
[DEBUG] delete share acceptation fault because operation failed
[NOTICE] share acceptation %@ succeed and document is now live on disk at %@
[NOTICE] User clicked on share link %@
[DEBUG] Accept flow completed successfully.
[CRIT] UNREACHABLE: can't perform next step because operation is finished; %@
[DEBUG] 
%llx running %@ in %@
[CRIT] Assertion failed: method != nil
[CRIT] Assertion failed: _shareMetadata
[ERROR] failing share acceptation with %@
[DEBUG] network is unreachable, replacing error with generic network error
[CRIT] Assertion failed: _shareURL
[ERROR] Can't find the user visible URL for %@ - %@
[DEBUG] share item URL is %@ for %@
[DEBUG] 
%llx activating shared zone
[DEBUG] Open application completed successfully
[ERROR] Failed to open the target app - %@
[DEBUG] 
%llx checking if document sharing is supported
[DEBUG] 
%llx Check if app is installed
[DEBUG] Application proxy: %@
[CRIT] Assertion failed: !(goToAppStore && openWebPreview)
[DEBUG] MDM restrictions don't allow cross persona data transfer
[DEBUG] Application proxy missing %@ entitlement
[DEBUG] %@ is installed
[DEBUG] 
%llx Check if a user is signed in to iCloud and iCloud Drive is turned on
[WARNING] Can't accept share without a user signed in to iCloud
[CRIT] Assertion failed: !(goToSettings && openWebPreview)
[ERROR] Can't retrieve application app library ID for %@
[WARNING] Can't accept share without iCloud Drive turned on (accountDSID: %@, isEnabledForCloudDocs: %@, isAppLibraryDisabled: %@, isAccountMigrated: %@)
[DEBUG] User is eligible to accept the share
[DEBUG] 
%llx Check if app is profile disabled
[WARNING] %@ is disabled by profile
[DEBUG] 
%llx Show sharing join dialog
[DEBUG] Owner or share already accepted, skipping to next step
[NOTICE] User has refused to open shared document at %@
[NOTICE] User has accepted to open shared document at %@
[DEBUG] 
%llx Parsing share metadata %@
[DEBUG] Pre-creating accept operation to block next sync down %@
[CRIT] Assertion failed: acceptShareOp
[DEBUG] alias app library is %@
[DEBUG] local client zone is %@ (zoneName: %@)
[DEBUG] shared item is identified by %@ (displayName: '%@')
[DEBUG] 
%llx Start accepting share URL
[CRIT] Assertion failed: [self _isOwnerOrShareAlreadyAccepted]
[DEBUG] 
%llx creating share accept operation
[WARNING] we are already accepting share %@
[DEBUG] 
%llx received share access completion
[CRIT] UNREACHABLE: No operation error and no share id
[WARNING] failed to accept share - %@
[DEBUG] accept operation completed with success
[CRIT] Assertion failed: _linkItemID
[WARNING] do not open Pages
[WARNING] Couldn't insert parent chain for %@ after fetch - %@
[DEBUG] 
%llx Wait for shared item to sync down
[CRIT] UNREACHABLE: %@ wasn't found after syncing down on the owner
[DEBUG] 
%llx Wait for item to be on disk
[CRIT] Assertion failed: self->_linkFileObjectID
[WARNING] Couldn't get user visible file on %@ - %@
[DEBUG] 
%llx Preparing side fault
[DEBUG] found share item %@
[DEBUG] share item %@ is in transient state, should try again later
[CRIT] UNREACHABLE: item is in an unknown state: %@:
[CRIT] UNREACHABLE: document doesn't exists anymore
[CRIT] UNREACHABLE: item isn't a document or directory
[DEBUG] created shared item-to-be in db: %@
[DEBUG] created link shared item-to-be in db: %@
[DEBUG] _checkIfShouldWaitUntilDownloadCompletion is not relevant in FPFS.
[DEBUG] Skipping open in app
[ERROR] can't get bookmark string at %@
[DEBUG] Got bookmark string %@ for URL %@
[DEBUG] doing open operation on "%@" with "%@"
[CRIT] Assertion failed: _liveFileURL
[WARNING] Skipping opening side fault
[ERROR] don't know how to open shared item at %@
[DEBUG] 
%llx Waiting for share accept to finish
[DEBUG] Share accept finished with error %@
[DEBUG] 
%llx Creating server fault if possible
[CRIT] Assertion failed: _clientZone
[DEBUG] We don't have need to fetch deeply into the folder. Letting the list directory take care of fetching
[CRIT] Assertion failed: rootRecordID
[DEBUG] Failed to fetch record for server fault - %@
[DEBUG] Finished fetching records for server fault
[CRIT] UNREACHABLE: couldn't save to server truth when creating server fault
[WARNING] Couldn't create a directory fault
[ERROR] %@ wasn't found after syncing down
[CRIT] Assertion failed: _linkFileObjectID
[DEBUG] 
%llx Locate shared folder on disk
[WARNING] %@ wasn't able to be found on disk.  We must have reset or be broken structure or it was deleted locally.
[DEBUG] _prepareToDownloadSharedDocument is not relevant in FPFS
[DEBUG] _setSpotlightAttribute is not relevant in FPFS
[DEBUG] 
%llx Open shared document if still needed at %@
[CRIT] Assertion failed: shareURL
[ERROR] nil app bundle ID for share URL: %@
[CRIT] Assertion failed: redirectReason
[DEBUG] Opening in web browser (reason: %@) %@
[ERROR] Can't open "%@" using default web browser
BRCTransferBatchOperation/? (subclass activity missing)
[CRIT] API MISUSE: should be subclassed
[DEBUG] cancelling %@
[DEBUG] 
%llx operation is now empty, cancelling %@
[DEBUG] %@(%@) %@ progress %.1f%%
[DEBUG] %@(%@) done with %@: %@
[CRIT] API MISUSE: implement in subclass
[WARNING] failed %@ %ld %@ (%@) in %@: %@
[NOTICE] finished %@%@ %ld %@ (%@) in %@
[CRIT] Assertion failed: entries.count == 0 || error
[CRIT] UNREACHABLE: Missing transfer error for record %@
[DEBUG] 
%llx waiting for callback...
[DEBUG] 
%llx callbacks finished
[CRIT] Assertion failed: _type == problem->_type
[CRIT] UNREACHABLE: unknown effective problem type
[DEBUG] unlinkat(%d, '%@', %d) failed: %s
[ERROR] unlinkat(%d, '%@', %d) failed after trying to fix permissions %{errno}d
[DEBUG] mkdirat(%d, '%@', 0%3o) failed: %s
[ERROR] mkdirat(%d, '%@', 0%3o) failed after trying to fix permissions %{errno}d
[ERROR] refusing to create a symlink with an empty target %{errno}d
[ERROR] refusing to create a symlink with an empty name %{errno}d
[DEBUG] symlinkat(%d, '%@', '%@') failed: %s
[ERROR] symlinkat(%d, '%@', '%@') failed after trying to fix permissions %{errno}d
[DEBUG] unlinked unexpected file at '%@'
[CRIT] Assertion failed: errno != 0
[ERROR] fchmodat(%d, '%@') failed %{errno}d
[DEBUG] created '%@'
[DEBUG] renameatx_np(%d, '%@', %d, '%@', %u) failed: %s
[ERROR] renameat(%d, '%@', %d, '%@', %u) failed after trying to fix permissions %{errno}d
[ERROR] Failed opening op for %d %{errno}d
[ERROR] can't set xattr %s to %s at '%@' %{errno}d
[ERROR] can't open '%@' %{errno}d
[ERROR] can't read the size of xattr %@ at '%@' %{errno}d
[ERROR] empty xattr %@ at '%@'
[ERROR] can't read %lu-byte xattr %@ at '%@' %{errno}d
[ERROR] invalid xattr %@ at '%@': %s
[ERROR] Failed to open fd %d by relpath %@ %{errno}d
[WARNING] Fixed up openat(%d, '.') for inaccessible folder
[ERROR] failed openat with EACCES and fstatat(%d, '%s') %{errno}d
[ERROR] failed openat(%d, '%s') with EACCES, but the item is readable: deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[ERROR] failed openat with EACCES and fchmodat(%d, '%s', %c%c%c%c%c%c%c%c%c%c) deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x %{errno}d
[DEBUG] failed openat(%d, '%s') with EACCES: added %c%c%c%c%c%c%c%c%c%c to deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[ERROR] failed fchmodat(%d, '%s', %c%c%c%c%c%c%c%c%c%c) deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x %{errno}d
[DEBUG] openat(%d, '%s'): added %c%c%c%c%c%c%c%c%c%c to deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[CRIT] Assertion failed: fileID
[ERROR] Invalid call to %s with empty path
[DEBUG] Failed opening parent op for '%@', hope for the best %{errno}d
[CRIT] UNREACHABLE: Corrupt quarantine: %s
[DEBUG] Quarantine info differs in flags %u vs %u ignoring %u
[WARNING] Extended attribute %s size %ld is greater than size limit %ld
[ERROR] Xattr name list exceed size limit %ld
[CRIT] Assertion failed: [cached isKindOfClass:[NSData class]]
[WARNING] Do not attempt to get xattr size cache is full
[DEBUG] Failed opening parent op for %d '%@' %{errno}d
[DEBUG] Failed opening op for %d '%@'
[ERROR] Couldn't stat %{errno}d
[ERROR] Failed to remove flags %{errno}d
[ERROR] Failed stripping acls %{errno}d
[ERROR] Failed setting permissions %{errno}d
[ERROR] Failed to restore permissions %{errno}d
[ERROR] Failed to restore acl %{errno}d
[ERROR] Failed to restore flags %{errno}d
[ERROR] Failed opening %s %{errno}d
[ERROR] Unable to strip UF_IMMUTABLE and UF_APPEND to %s %{errno}d
[ERROR] Failed setting permissions of %s %{errno}d
[ERROR] Couldn't stat %s %{errno}d
[ERROR] Failed stripping acls of %s %{errno}d
[DEBUG] Can't delete %s: %s(%d)
[ERROR] Can't delete %s: %s(%d)
[DEBUG] resuming - suspendCount:%d->%d
[CRIT] Assertion failed: suspendCount >= 0
[DEBUG] suspending - suspendCount:%d->%d
[DEBUG] 
%llx deleting temporary files moved to the cache at '%@'
[DEBUG] did not remove '%@' %{errno}d
[ERROR] failed removing '%@' %{errno}d
[DEBUG] removed '%@/*'
[ERROR] lstat('%@') failed %{errno}d
[ERROR] renameat(%d, '%@', -1, '%@' deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x failed %{errno}d
[DEBUG] renamed '%@' to '%@' deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[DEBUG] failed removing documentID for %@ (%s)
[DEBUG] done iterating
[DEBUG] Starting enumerating under %@
[DEBUG] cancelling enumeration because container deactivated
[CRIT] Assertion failed: self->_handler
[DEBUG] visiting a new parent: %@
[DEBUG] continue iterating under parent %@, for _rowID > %ld
[DEBUG] %@: finished uploading all items in %@: %@
[CRIT] UNREACHABLE: task tracker created with nil label
[CRIT] Assertion failed: task_tracker
[DEBUG] task tracker (%s) has been cancelled, calling cancellation block <%p>
[DEBUG] initWithRecordIDNeedingFetch: %@
[CRIT] UNREACHABLE: Unsuported record type %@
[DEBUG] Opening changes stream %@
[DEBUG] Closing changes stream %@
[DEBUG] We have too many pending changes streams open.  Closing now
[DEBUG] We have too many pending changes streams open.  Closing some of them after a delay
[CRIT] error closing BRCPendingChangesStream DB connection: %@
[ERROR] We are in an error scenario, trying to close the DB, but it's busy - let's avoid dealloc it
[DEBUG] Dropping pending fetch table at %@
[CRIT] UNREACHABLE: Failed to set the cache size - %@
[CRIT] UNREACHABLE: Failed to set the cache spill - %@
[DEBUG] database is opening so creating at %@
[ERROR] db corruption handler called on pending sync db
[ERROR] sqlite error handler called on pending sync db - %@ (%@)
[CRIT] disk is full - exiting
[ERROR] Auto rollback handler called on pending sync db - %@ (%@)
[CRIT] UNREACHABLE: Trying to fetch token state without a db
[CRIT] UNREACHABLE: There should always be one entry
[CRIT] UNREACHABLE: Trying to fetch query cursor without a db
[CRIT] UNREACHABLE: Trying to enumerate records without a db
[CRIT] UNREACHABLE: Failed enumerating records - %@
[CRIT] Assertion failed: recordType != 0
[WARNING] Removed item in pending resources table because it was saved %@
[WARNING] Removed item in pending resources table because it was deleted %@
[CRIT] Assertion failed: rc && db.changes == 1
[DEBUG] Persisted %llu records needing subResource fetch
[ERROR] Failed saving to the pending changes stream - %@
[DEBUG] Persisted %llu records which are fully fetched
[DEBUG] Persisted %llu sub resource records which need fetch
[DEBUG] Removed %llu records from the pending fetches table because we should have just saved them
[DEBUG] Persisted %lld subResource records to the pending changes db
[DEBUG] Deleted %@ from the pending subResources table because it was a share to fetch and should be persisted
[ERROR] Failed to save subResource records after saving main table items - %@
[WARNING] Unblocking %lld records which are blocked from save for %@
[WARNING] Removed recordID %@ from record changes table because it now needs sub resources
[DEBUG] Unblocked %lld records waiting on save of %@ even though it's a sub-resource record
[DEBUG] Updated %llu items which no longer need to fetch xattr %@
[ERROR] We couldn't fetch recordID %@ so it's not going to save. We deleted %lld items from pending subresources table for this
[ERROR] We couldn't fetch recordID %@ so it's not going to save. We marked %lld as not needing fetch anymore
[ERROR] We couldn't fetch recordID %@ so it's not going to save. We marked %lld as not blocked for save anymore
[CRIT] Assertion failed: db.isInTransaction
[DEBUG] Updated %llu items to be unblocked for fetching %@
[DEBUG] Updated %llu items to be unblocked for saving %@
[CRIT] Assertion failed: _itemID
BRCSharingModifyShareOperation/? (subclass activity missing)
[WARNING] Couldn't find item %@ in zone %@
[DEBUG] requesting sharing identity on %@
[CRIT] Assertion failed: contentsRecord
[CRIT] UNREACHABLE: no records and no error
[CRIT] UNREACHABLE: no error and no sharing key
[DEBUG] Got sharing identity for share - %@
[ERROR] Fetching sharing identity failed - %@
[CRIT] UNREACHABLE: no public sharing identity. avoiding breaking iwork shares
[DEBUG] Yanking the routing key from the server for %@
[CRIT] UNREACHABLE: no routing key on share identity prepared record
[CRIT] Assertion failed: [self->_share.publicSharingIdentity isEqualToData:self->_sharingIdentityPreparedRecord.encryptedPublicSharingKey]
[DEBUG] Requesting iwork sharing identity on %@
[CRIT] UNREACHABLE: sharing identity isn't encrypted data
[CRIT] UNREACHABLE: base token isn't a string
[CRIT] UNREACHABLE: no base token %@ or sharing identity %@ and no error
[CRIT] UNREACHABLE: Sharing identities don't match (%@ vs %@)! Trying to fix up the identities
[DEBUG] Got iWork sharing identify for share - %@
[ERROR] Fetching iWork sharing identity failed - %@
[CRIT] UNREACHABLE: not a directory nor a document
sharing/save-share
[WARNING] Unsharing turd folder share %@
[CRIT] UNREACHABLE: no share record
[ERROR] Failed with baseTokenError=%@
[CRIT] UNREACHABLE: directory %@ isn't pcs chained
[ERROR] Couldn't get base record for %@, %@
[CRIT] UNREACHABLE: couldn't get base record
[WARNING] Failed to unshare turd - %@
[DEBUG] Saving %@%@ for share op %@
[CRIT] UNREACHABLE: got an unexpected number of shares saved
[ERROR] failed saving share %@: %@
[DEBUG] finished saving share %@
[CRIT] Assertion failed: [save[1].recordType isEqualToString:kBRRecordTypeContent] || [save[1].recordType isEqualToString:kBRRecordTypeStructure]
[CRIT] Assertion failed: [save[0].recordType isEqualToString:CKRecordTypeShare]
[DEBUG] Saved share %@
sharing/destroy-share
[CRIT] UNREACHABLE: got an unexpected number of shares deleted
[ERROR] failed to destroy share %@: %@ in %@
[DEBUG] destroyed share %@ in %@
sharing/lookup-participants
[ERROR] failed share participant lookup for %@ - %@
[CRIT] UNREACHABLE: Unexpected number of share participants: expected %lu got %lu
[DEBUG] fetched share participants: %@
sharing/modifyAccess
[CRIT] UNREACHABLE: no dict and no error
[ERROR] Failed %@ access to %@ - %@
[DEBUG] %@ access to %@
[DEBUG] Can't fetch shareID for item %@
sharing/copyParticipantToken
[CRIT] UNREACHABLE: No base token so the share token we would return would be invalid for iwork
[CRIT] UNREACHABLE: no error and no participantKey
[CRIT] UNREACHABLE: no error and no participantDocumentToken
[DEBUG] 
%llx Fetch participantDocumentToken disabled --> use participantKey as before. item: %@
[DEBUG] 
%llx Failed to get participantDocumentToken --> use participantKey as before. item: %@
[DEBUG] 
%llx Succeed to get participantDocumentToken. item: %@
sharing/prepareFolderPCS
sharing/copy-shareURL
[DEBUG] Finished copying URL %@ for share %@ error %@
[CRIT] UNREACHABLE: Couldn't get a share URL
[DEBUG] Share: %@
[DEBUG] Prepared record: %@
[CRIT] UNREACHABLE: Couldn't get a share URL for %@
sharing/copy-shortToken
[CRIT] UNREACHABLE: No short token found on record
sharing/clean-subitems
[DEBUG] Removing shared subitems in op %@
[DEBUG] Removing shareID %@
[DEBUG] Removing alias record %@
[DEBUG] Remove share subitems batch completed with error - %@
[DEBUG] Can't find alias target for %@
[WARNING] Couldn't find server zone for %@
[WARNING] No filename found on alias target %@
[DEBUG] an item in the path has a nil filename
[DEBUG] Processing server truth in op %@
[WARNING] subitem %@ is already shared inside %@
[DEBUG] Found shared-to-me alias to delete %@ in %@
[DEBUG] We need to fetch %@ before we can continue
[CRIT] UNREACHABLE: Huh?  We shouldn't be processing this item if it's not shared and not a directory fault %@
[CRIT] UNREACHABLE: Don't know how to unshare item of type %d
[DEBUG] deleting %s shareID %@
[CRIT] UNREACHABLE: Can't locate the item type we are deleting?
[DEBUG] Processing client truth in op %@
[CRIT] Assertion failed: (options & BRCSharingItemHasShareID) != 0
[DEBUG] Not processing child items on %@ because it already has a shareID
[CRIT] UNREACHABLE: can't find %@ in %@
[CRIT] Assertion failed: fallbackItem
[DEBUG] 
%llx computing the parent item id of %@
[DEBUG] found the alias representing this item: %@
[DEBUG] falling back to an app library documents root: %@
[DEBUG] Server container was reset, we need to reset ourselves
[DEBUG] Server change token expired, we need to reset ourselves
[DEBUG] Server container was reset, zone not found, we need to reset ourselves
[DEBUG] Server container was reset, user deleted zone, we need to reset ourselves
[DEBUG] unknown error domain: %@, we should retry
[CRIT] UNREACHABLE: there should be a recordID
[DEBUG] we should sync-down again after %@
[CRIT] UNREACHABLE: really unexpected error: %@
[DEBUG] Cloudd crashed, our sync up could have been received by the server
[CRIT] Assertion failed: _suspendCount > 0
[CRIT] Assertion failed: item.st.iWorkShareable
sharing/iWork-publishing
[CRIT] UNREACHABLE: No sharing info and no error
[ERROR] Failed sharing %@ - %@
[DEBUG] %@ was shared
[CRIT] Assertion failed: self->_forPublish
[ERROR] Failed unsharing %@ - %@
[DEBUG] %@ was unshared
[CRIT] Assertion failed: !self->_forPublish
[CRIT] Assertion failed: _requestID == 0
[DEBUG] ignoring excluded item in package
[WARNING] Couldn't open parent path for breadth enumeration %@
[CRIT] Assertion failed: parentPath.isUnixDir
[WARNING] cannot read content of %@
[WARNING] Couldn't opendir parent path for breadth enumeration %@
[CRIT] UNREACHABLE: no directory entry
[CRIT] Assertion failed: session != nil
[DEBUG] 
%llx invalidating connection with %@
[DEBUG] %@: is now foreground
[DEBUG] %@: is now background
[CRIT] UNREACHABLE: Failed to adopt persona, bailing out
[DEBUG] starting monitoring %@
[DEBUG] %@ is now monitoring %@
[DEBUG] %@ is no longer monitoring %@
[DEBUG] stop monitoring %@
[CRIT] UNREACHABLE: there should be a client
[INFO] Account %@ is not loaded, waiting for it
[DEBUG] Couldn't find the account for the current persona. We may be in the middle of a log out request
[INFO] After waiting, the sesion is: %@
[CRIT] Assertion failed: session.accountHandler == handler
[DEBUG] 
%llx there is now enough disk space to work
[NOTICE] another thread has already tried to load the account
[NOTICE] iCloud Drive has now enough disk space to work so loading account
[DEBUG] Notifying clients of account change because we could have denied xpc during low disk space
[WARNING] Returning error because iCloud Drive doesn't have enough disk space to be functional
[DEBUG] granting access to non-sandboxed app %@
[ERROR] invalid entitlement for %@
[ERROR] %@ is missing privilege
[DEBUG] granting access to %@ for non-sandboxed app %@
[ERROR] %@ is talking to us without container proxy right
[ERROR] %@: is trying to call %@, but has no access
[ERROR] Client %@ gave us a non-existing fault URL path %@
[DEBUG] %@: file doesn't exist at path: %s
[DEBUG] %@: denied access to %s
[CRIT] UNREACHABLE: Couldn't switch personas to look up session from url %@
[CRIT] UNREACHABLE: No xpc client group found for %@
[DEBUG] Using inferred session from url %@
[INFO] %@: reply(%@, %@, %@, %@)
[DEBUG] %@: unsandboxed app is now using %@ as %@
[DEBUG] add dependency %@ for operation %@
[DEBUG] %@: %@
[CRIT] UNREACHABLE: should have an account session
[DEBUG] account: %@
[ERROR] Can't create %@: %@
[DEBUG] checking status for %@
[DEBUG] %@ can't access %@: %@
[CRIT] UNREACHABLE: %@ is not owning %@ and updating its metadata
[ERROR] nonexistant container %@
[DEBUG] 
%llx IPC-initiated reset for %@
[DEBUG] Not deleting container %@ which is moved to clouddocs
[DEBUG] We can't delete server zone for shared zone, skipping %@
[CRIT] %s reset for %@
[WARNING] Stripping attributes request from %@ to %@
[DEBUG] receiver: %@
[ERROR] can't setup container %@: %@
[DEBUG] Session is nil or not open -- falling back to the account status
[CRIT] UNREACHABLE: Can't compute the mobile documents url
[DEBUG] %@: reply(%@, %@)
[DEBUG] 
%llx getting usage for %@
[WARNING] unable to find bundleID %@
[ERROR] key: %@ is not of class NSString
[INFO] %@: reply(success=%d, %@)
[INFO] 
%llx %@ (%@) %s simulating health issue
[NOTICE] simulating health issue on %@: %@
[INFO] 
%llx %@ (%@) %s getting health status on %@
[DEBUG] 
%llx waiting for zone health sync down
[DEBUG] 
%llx finished sync down zone health
[DEBUG] received an error while syncing down zone health: %@
[DEBUG] 
%llx finished syncing zone health
[DEBUG] 
%llx timed-out: zone health sync
[DEBUG] Requesting force sync on the special container %@ that doesn't have an app library.
[DEBUG] 
%llx waiting for next sync down for %@ -> %@
[DEBUG] 
%llx finished sync down for %@
[DEBUG] received an error while syncing container: %@
[DEBUG] 
%llx finished scheduling sync for %@
[DEBUG] received an error while trigger sync for container: %@
[DEBUG] 
%llx finished all sync down tasks for %@
[DEBUG] 
%llx timed-out: sync of %@
[INFO] 
%llx %@ (%@) %s Refreshing sharing state for %s
[DEBUG] fileObjectID: %@
[DEBUG] invalid item identifier %@
[DEBUG] couldn't find an item for fileObjectID=%@
[CRIT] Assertion failed: result == nil || [result isKindOfClass:[NSDictionary class]]
[WARNING] Server zone was updated during refresh - avoiding races
[WARNING] force deleting item with missing share in shared zone %@
[WARNING] Clearing sharing options on missing share for %@
[WARNING] Learning new sharing options %@ from refresh state for %@
[WARNING] Learning updated item mode %s from refresh state for %@
[DEBUG] 
%llx %@: force syncing containers matching '%@'
[NOTICE] %@: force syncing shared database
[NOTICE] %@: force syncing %@
[NOTICE] %@: force syncing container metadata
[NOTICE] %@: forcing syncing zone health
[NOTICE] %@: forcing syncing side car zone
[DEBUG] 
%llx %@: iWork force syncing containers matching '%@' ownedByMe:%d
[DEBUG] 
%llx %@ asks us to wait for the fsevents to be processed
[INFO] %@: reply()
[INFO] %@: reply(%d)
[INFO] %@: reply(%lld)
[DEBUG] accountID: %@
[CRIT] UNREACHABLE: asked to login to a non migrated account
[ERROR] can't create account: %@
[NOTICE] Requested to logout of account %@
[DEBUG] Logout of account %@
[NOTICE] Requested to update display name of account %@
[ERROR] can't update account: %@
[INFO] %@: reply(%lu, %@)
[CRIT] UNREACHABLE: asked the content record ID of a folder
[WARNING] No document found for %@
[INFO] %@: reply(%@, %@, %@, %@, %@)
[DEBUG] data: %@
[DEBUG] looking for docID:%@ itemID:%@ mangledID:%@ unsaltedBookmarkData:%@
[DEBUG] %@ has access to %@
[DEBUG] %@ %s access to %@
[WARNING] Can't find appLibrary for id %@
[WARNING] resolveBookmarkDataToURL denied for %@: not entitled
[INFO] %@: reply(%llu, %@)
[INFO] %@: reply(%@, %ull, %d, %@)
[DEBUG] enumerating items in %@ offset:%lld limit:%lld
[DEBUG] refetching quota
[DEBUG] enumerating children of %@
[INFO] %@: reply(%@, %llu, %d, %@)
[CRIT] Assertion failed: directoryItem.isDirectory
[INFO] %@: reply(%@, %ull, %@)
[DEBUG] enumerating all folders offset:%lld limit:%lld
[INFO] %@: reply(%d, %d, %@, %@)
[DEBUG] starting operation to copy sharing info at %@
[DEBUG] Share %@ has %lu participants
[INFO] 
%llx %@ (%@) %s looking up url for recordID %@ fetching from server:%s
[DEBUG] creating sharing info for item %@
[DEBUG] Creating share for item %@
[WARNING] Deleting share %@ because we're being asked to save a share with no participants
[DEBUG] Ignoring share save on empty share with no etag %@
[DEBUG] Saving share %@
[DEBUG] Adding %@ as a dependency on share save
[DEBUG] Destroying share info for share %@
[DEBUG] Copying share participants for identities %@
[DEBUG] modifying record access at item %@
[DEBUG] copying participant token on item %@
[DEBUG] preparing folder for sharing at item %@
[CRIT] Assertion failed: item.clientZone.isPrivateZone
[DEBUG] processing subitems at item %@
[DEBUG] copying url for share %@ for app %@
[INFO] 
%llx %@ (%@) %s Getting creator name for %s
[INFO] %@: reply(%d, %d, %d, %@, %@)
[INFO] 
%llx %@ (%@) %s Getting sharing options for %s
[ERROR] An accept operation is already running for %@
[ERROR] can't handle share %@: %@
[DEBUG] 
%llx handling share at %@
[WARNING] can't accept the share: %@
[ERROR] can't extract metadata for %@: %@
[DEBUG] extracted metadata for %@: %@
sync-down/periodic-sync
[DEBUG] 
%llx considering whether or not to schedule sync down for %@
[DEBUG] container-metadata appears to be out of sync in the periodic check, forcing sync
[DEBUG] zone health appears to be out of sync in the periodic check, forcing sync
[DEBUG] side-car appears to be out of sync in the periodic check, forcing sync
[DEBUG] Not considering %@ for periodic sync because it is blocked from sync
[DEBUG] %@ appears to be out of sync in the periodic check, forcing sync
[CRIT] Assertion failed: self.group
[DEBUG] 
%llx completed fetching changed zone
zones: %@
[CRIT] UNREACHABLE: No error found
[ERROR] can't fetch all changed zones: %@
[NOTICE] scheduled a %s periodic sync
[DEBUG] Running operation to fetch %@: %@
[CRIT] Assertion failed: self.wantsContent
[CRIT] Assertion failed: _flags.startDownload
[CRIT] Assertion failed: _flags.isFault || _flags.startDownload
[DEBUG] We need to create the zone health zone on %@ - %@
[ERROR] Failed reporting zone health on %@ - %@
[DEBUG] finished reporting zone health: %@, op: %@
[WARNING] not updating zone health state because we think we are less broken than the server does
[CRIT] Assertion failed: report.state != BRCZoneHealthStateHealthy
[DEBUG] No zone health errors to report
[CRIT] UNREACHABLE: no BRCPackageItem should be a Tombstone
[CRIT] Assertion failed: _suspendCount >= 0
[CRIT] Assertion failed: scheduler
[CRIT] UNREACHABLE: %@ was deallocated without being closed
[CRIT] UNREACHABLE: Trying to create a sync context while uploadsDeadlineScheduler still missing. Session open: %d
[CRIT] UNREACHABLE: Trying to create a sync context while downloadsDeadlineScheduler still missing. Session open: %d
[DEBUG] 
%llx Uploader: preparing next batch for %@ (max-count:%ld size:%@ priority:%ld)
[DEBUG] 
%llx Downloader: preparing next batch for %@ (max-count:%ld size:%@ priority:%ld)
[CRIT] Assertion failed: [[[UMUserManager sharedManager] br_currentPersonaID] isEqualToString:_session.personaIdentifier]
[DEBUG] Cancelling discretionary operation %@ to make room for a non discretionary operation %@
[DEBUG] Blocking discretionary op %@ on %@
[CRIT] Assertion failed: database
[DEBUG] scheduling %@ on %@ (account %@)
[CRIT] UNREACHABLE: missing group for %@
[CRIT] UNREACHABLE: Exception %@ was raised while trying to enqueue %@
[CRIT] Assertion failed: _isCancelled
[DEBUG] beginning forced foreground for %@ for %.1fs
[DEBUG] forced foreground grace period over for %@
[CRIT] Assertion failed: self->_foregroundState == BRCContainerForegroundStateForcedForeground
[CRIT] UNREACHABLE: there should be no timer created
[DEBUG] beginning foreground grace period for %@ from %@ for %.1fs
[DEBUG] grace period over for %@ %@
[DEBUG] Cancelling foreground grace timer for %@ because we're now foreground again
[DEBUG] fetched quota %llu - %@
[CRIT] Assertion failed: BRCItemTypeIsDirectory(_st.type)
[DEBUG] Server item is a directory fault so now our local item is a directory fault for %@
[CRIT] UNREACHABLE: server count %@ minus hidden count %@ is less than 0 for %@
[CRIT] UNREACHABLE: Can't find clientZone for zoneID %@
[CRIT] Assertion failed: _st.type == BRC_ITEM_TYPE_FS_ROOT || _orig.st.type == BRC_ITEM_TYPE_FS_ROOT || _orig.st.type == BRC_ITEM_TYPE_DIRECTORY_SHARE_ACCEPT_FAULT
[CRIT] Assertion failed: [db isBatchSuspended]
[DEBUG] Inserting tombstone for alias %@ which is pending target
[CRIT] Assertion failed: sqlite3_value_int(argv[0]) == BRC_ITEM_STATE_TOMBSTONE
[CRIT] Assertion failed: sqlite3_value_int(argv[3]) == BRC_ITEM_SCOPE_TRASH
[CRIT] UNREACHABLE: a task tracker is required to download a directory
[CRIT] UNREACHABLE: asShareableItem called on a non-shareable item
[ERROR] Default value %@ is malformed, using %@
[ERROR] Invalid user defaults: %@, using %@
[CRIT] Assertion failed: !_userDefaultsCache[kBRCGlobalUserDefaultsKey]
[DEBUG] 
%llx defaults changed
[CRIT] Assertion failed: ![clientZoneIdentifier isEqualToString:kBRCGlobalUserDefaultsKey]
[CRIT] Assertion failed: clientZoneIdentifier && _userDefaultsCache[kBRCGlobalUserDefaultsKey]
[DEBUG] 
%llx config: initial load
[DEBUG] config: not updating the configuration, waiting for next activity callback
[DEBUG] 
%llx config: it's activity time
[DEBUG] 
%llx config: download task finished %@, plist %@
[ERROR] config: failed to move downloaded cache file into place %@
[ERROR] config: session %@ become invalid: %@
[ERROR] config: can't download task %@%@: %@
[DEBUG] config: download finished for %@
[DEBUG] Loaded cached server configuration %@
[ERROR] failed parsing plist at %@: %@
[DEBUG] Server configuration changed to etag %@
[DEBUG] config: Loaded server configuration from %@
[DEBUG] 
%llx config: asynchronously loading %@
[NOTICE] loading iCloud Drive configuration from disk
[NOTICE] downloading iCloud Drive configuration
[DEBUG] scheduling config download %@
[DEBUG] server default for %@: %@
[DEBUG] user default for %@: %@
[CRIT] UNREACHABLE: no version for key: %@
[CRIT] Assertion failed: perVersionDict
[CRIT] Assertion failed: min < max
[CRIT] Assertion failed: min <= def
[CRIT] Assertion failed: def <= max
[ERROR] invalid user default for %@: %@ range:[%d,%d]; using default:%d
[ERROR] invalid user default for %@: %@ range:[%lld,%lld]; using default:%lld
[ERROR] invalid user default for %@: %@ range:[%f,%f]; using default:%f
[ERROR] invalid user default for %@: %@; using default:%s
[ERROR] invalid user default for %@.%@: %@; using default:%@
[DEBUG] We are not blacklisted from %@
[DEBUG] We are not blacklisted from %@ chaining because we are in carry
[DEBUG] We are not blacklisted from %@ because we are on an internal build
[DEBUG] We are not blacklisted from %@ because we are on an internal build and in carry
[DEBUG] We are blacklisted from %@ because %d < %d and %d
[CRIT] Assertion failed: [error intValue] < BRCProblemTypeMaxValue
[CRIT] Assertion failed: defaultValues[key] != nil
[ERROR] invalid user default %@; using:%@
[INFO] 
%llx 
[DEBUG] 
%llx 
[WARNING] Couldn't figure out the expected app library; falling back to clouddocs
[DEBUG] Destroying anchor %@
[DEBUG] Destroying anchor %@, databaseBasePath: %@, UUID: %@
[DEBUG] Anchoring %@ at %@ (db at %@)
[ERROR] Unable to serialize property list - %@
[DEBUG] 
%llx account properties changed
[DEBUG] forcing refresh of cellular switch
[DEBUG] 
%llx checking if cellular is enabled for D&D
[DEBUG] cellular is %@ for D&D
sync-down
[INFO] 
%llx %@ fetch record changes operation for %@ from token %@
[INFO] 
%llx got a record in operation %@
[DEBUG] record changed: %@
[CRIT] UNREACHABLE: got a nil record and recordID
[CRIT] Assertion failed: !record || record.etag != nil
[WARNING] Record fetch failed for %@ with error %@
[DEBUG] 
%llx got a deletion in operation %@
[INFO] record was deleted: %@
[DEBUG] 
%llx received updated server change token %@ client change token %@ in operation %@ status %ld
[CRIT] UNREACHABLE: broken structure in op %@ change token %@
[DEBUG] 
%llx fetch changes completion for zone in operation %@
[DEBUG] 
%llx fetch changes completed for operation %@
[ERROR] sync-down failed for %@: %@
[DEBUG] success
[DEBUG] ignoring zone not found error, because we're syncing down for the first time
[DEBUG] Fetched initial server zone tokens %@ and %@ for %@
[DEBUG] Saving initial zone data of %@ with server token %@ client token %@
[CRIT] UNREACHABLE: no fetched zone and no error
[DEBUG] can't register pushes: %@
[ERROR] can't create zone or register pushes: %@
[DEBUG] 
%llx Sync: fetching record changes for %@
[DEBUG] 
%llx refetching installed apps list
[DEBUG] forced a refetch of the list of apps
[DEBUG] 
%llx start monitoring cloud apps
[DEBUG] 
%llx asked appIDs for %@
[DEBUG] 
%llx asked containerIDs for %@
[DEBUG] 
%llx asked appIDs
[DEBUG] Checksumming R/W mmaped file at %@
[WARNING] Checksumming failed at %@: %@
[DEBUG] Returning nil when looking up by documentID and no migration is in progress
[CRIT] UNREACHABLE: fileobjectID has an invalid type
[CRIT] UNREACHABLE: There is no local item for BRFileObjectIDTypeRootContainer
[DEBUG] Returning nil when looking up by fileID and no migration is in progress
[CRIT] Assertion failed: item.serverZone.isSharedZone
[CRIT] UNREACHABLE: reset needed for %@ because the hierarchy is deeper than %u under %@ when looking for %@
[DEBUG] 
%llx enumerating containers
[DEBUG] %@: moved %lld throttles from %@ to %@
[CRIT] Assertion failed: ![errorString isEqualToString:@"CKErrorDomain.2"]
[CRIT] UNREACHABLE: error string is not a string value %@
[CRIT] Assertion failed: _subResourceRecordsByID.count == 0 && _pendingChangesStream == nil
[CRIT] Assertion failed: serverZone && parentOperation
[DEBUG] 
%llx %@ scheduling xattr fetch
[DEBUG] 
%llx %@ scheduling deserialize
fetch-record-subresources
[CRIT] Assertion failed: !_isDoneFetchingRecords
[WARNING] %@ got a record we're not interested in: '%@'
[DEBUG] %@ ignoring record we're not interested in saving named: %@
[DEBUG] %@ needs to fetch shareID %@
[DEBUG] %@ needs to fetch xattr signature %@
[CRIT] Assertion failed: [contentRecordName hasPrefix:kBRRecordIDPrefixContent]
[WARNING] Couldn't determine record type for root share record %@
[CRIT] Assertion failed: ![_deletedShareIDs containsObject:recordID]
[CRIT] Assertion failed: ![_deletedRecordIDs containsObject:recordID]
[CRIT] Assertion failed: _recordsByID[recordID] == nil
[DEBUG] %@ record changed %@ which needs subResources fetched
[DEBUG] %@ record changed %@
[WARNING] %@ has no need to deserialize %@ because we've already fetch it
[CRIT] Assertion failed: _subResourceRecordsByID[recordID] == nil
[DEBUG] %@ scheduling recordID deserialize for %@
[WARNING] %@ Zone root record ID was deleted %@
[WARNING] %@ App library root record ID was deleted %@
[DEBUG] %@ record ID was deleted %@
[CRIT] Assertion failed: _recordsByID[shareID] == nil
[CRIT] Assertion failed: ![_deletedShareIDs containsObject:shareID]
[DEBUG] %@ share ID was deleted %@
[DEBUG] %@ waiting to fetch all records
[CRIT] Assertion failed: _recordsByID.count == 0 && _deletedShareIDs.count == 0 && _deletedRecordIDs.count == 0 && _subResourceRecordsByID.count == 0
[DEBUG] Not fetching records blocking save because we aren't caught up
[DEBUG] %@ stopping fetching records with error %@
[DEBUG] %@ resuming deserialize source which was waiting for batch save
[CRIT] Assertion failed: _xattrFetchingGroup == nil
[CRIT] Assertion failed: _deserializeGroup == nil
[CRIT] Assertion failed: _recordsByID.count == 0
[CRIT] Assertion failed: _subResourceRecordsByID.count == 0
[CRIT] Assertion failed: _deletedShareIDs.count == 0
[CRIT] Assertion failed: _deletedRecordIDs.count == 0
[CRIT] Assertion failed: _movedZoneNames.count == 0
[CRIT] Assertion failed: ![_pendingChangesStream hasXattrsToFetch]
[CRIT] Assertion failed: ![_pendingChangesStream hasRecordIDsToDeserialize]
[DEBUG] %@ finished record fetcher
[CRIT] Assertion failed: _queryFinishedServerTruthCallback == nil
[CRIT] Assertion failed: _queryFinishedClientTruthCallback == nil
[CRIT] UNREACHABLE: Fetch loop trying to fetch %@
[DEBUG] %@ leaving deserialize group due to an error
[CRIT] Assertion failed: _deserializeState != BRCDeserializeStateWaitingForNextBatchSave
[DEBUG] %@ doesn't have records to deserialize
[DEBUG] %@ fetching %lu records to deserialize - %@
[WARNING] We deserialized record id %@ which was useless because it came later
[ERROR] We can't find a record which really should exist - %@.  Unblocking other records from save
[ERROR] %@ Deserialize record failed for %@ - %@
[DEBUG] %@ encountered an operation error so we should stop %@
[DEBUG] %@ finished fetching record batch to deserialize%s
[DEBUG] %@ has sub resource that no longer has info to fetch %@ -> %@
[DEBUG] %@ leaving xattr fetch group due to an error
[DEBUG] No xattrs to fetch
[DEBUG] 
%llx %@ fetching %lu xattrs
[DEBUG] 
%llx running the xattr fetch operation
[DEBUG] 
%llx %@ finished fetching xattrs
[ERROR] failed to fetch xattr assets for %@: %@
[DEBUG] failed to fetch xattr assets for %@: %@
[CRIT] UNREACHABLE: Received %lu xattr records instead of expected %lu records for %@
[ERROR] %@ failed to store xattr for signature: %@ - %@
[DEBUG] %@ saved xattr for signature: %@ sz:%lld
[DEBUG] Removed xattr requirement from %lld in-memory subResourceRecords
[DEBUG] %@ preparing to save record batch with %lu in memory items %lu subresource items %lu moved zone names
[DEBUG] %@ no longer needs to fetch shareID in %@ because it's fetched in pending changes stream
[DEBUG] %@ is no longer blocked from save in %@ because the blocker is fetched in pending changes stream
[DEBUG] %@ no longer needs to fetch shareID in %@ from server truth check
[DEBUG] %@ is no longer blocked for save in %@ from server truth check
[DEBUG] %@ starting to wait for xattr fetches
[DEBUG] %@ starting to wait for deserialize fetches
[WARNING] We need to fetch %@ to unblock %@ from saving, but it wasn't found.  Forcing fetch
[ERROR] We need to fetch %llu records in the pending changes stream to allow saving for %@.  Forcing fetch
[CRIT] Assertion failed: !_queryFinishedServerTruthCallback
[CRIT] Assertion failed: !_queryFinishedClientTruthCallback
[DEBUG] %@ saving records with server change token:%@ requestID:%llu caught up:%s directly:%s
[DEBUG] %@ recreating pending changes stream with updated change token
[WARNING] %@ Allocating ranks failed when not caught up.  We'll save to pending changes from now on
[CRIT] Assertion failed: _pendingChangesStream || !cursor
[DEBUG] %@ saving records with query cursor:%@ directly:%s
[CRIT] Assertion failed: _pendingChangesStream
[DEBUG] %@ Destroying pending changes db because we are done with it
[WARNING] %@ got a (temporary) broken structure while listing directory contents
[WARNING] Allocating ranks failed when not caught up and listing.  We'll save to pending changes from now on
[DEBUG] resuming %@
[DEBUG] suspending %@
[CRIT] UNREACHABLE: Invalid components count. It should either be an absolute path or prefixed with file provider id
[ERROR] this method is deprecated
[DEBUG] 
%llx new presenter of '%@': %@ (%@)
[CRIT] Assertion failed: presentersIDs == nil
[DEBUG] not doing anything since we're logged out
[DEBUG] 
%llx removed presenter of '%@': %@ (%@)
[CRIT] Assertion failed: presentersIDs.count == 1
[CRIT] Assertion failed: [presentersIDs containsObject:filePresenterID]
[DEBUG] '%@' moved to '%@', by %@
[DEBUG] returning purgeable info from cache
purgeableSpaceByUrgency:%@
nonPurgeableSpace:%@
[WARNING] could not retrieve cached purgeable space
[DEBUG] 
%llx recomputing purgeable space for all urgencies
[DEBUG] reclaimable size from db is %@
[DEBUG] reclaimable size from stage is %@
[DEBUG] not account for local document because optimize storage is set to off
[ERROR] Failed removing ciconia_diagnose: %@
[INFO] Incremental vacuuming %@ took %f seconds reclaimed %@ (size reduction %.2f percent)
[DEBUG] no need to evict, amount requested is %@
[DEBUG] evicted %@ from stage
[ERROR] Timed out waiting for eviction!
[DEBUG] not evicting document because optimize storage is off
[DEBUG] evicted %@ from stage and containers
[DEBUG] Purged %@ when asked to purge %@ for urgency %d
[DEBUG] Periodicly reclaimed %@
[DEBUG] not requesting space because we already have enough (available:%@ > required:%@)
[NOTICE] evicting for storage optimization
[CRIT] UNREACHABLE: calling %s with empty path
[CRIT] UNREACHABLE: can't open %@
[DEBUG] space for %@ is %llu bytes (hfs compat. dirstat)
[CRIT] UNREACHABLE: can't get size for %@ : %s
[CRIT] Assertion failed: [serverZone isKindOfClass:[BRCSharedServerZone class]]
[CRIT] UNREACHABLE: there is already a share acceptation running for that itemID; %@
[CRIT] Assertion failed: item.isShareAcceptationFault
[DEBUG] [%@] has been initialized
[DEBUG] [%@] has been invalidated
[DEBUG] [%@] has been reset
[DEBUG] reachability flags: %x
[NOTICE] Network really becomes %sreachable
[DEBUG] Power level really becomes %s
[DEBUG] disk %@ has %senough space now
[CRIT] Assertion failed: deviceID != 0
[CRIT] Assertion failed: _memoryNotificationEventSource == NULL
[DEBUG] Memory warning received
[DEBUG] not monitoring %d because BKS doesn't know its bundleID
[DEBUG] 
%llx received a notif for %@ from BKS: %@
[DEBUG] Received an app install notification
[CRIT] UNREACHABLE: Failed to adopt persona for notification %s
[DEBUG] Power level is now %s
[ERROR] fsctl(dev=%d) failed %{errno}d
[DEBUG] pending migrations: %@
[DEBUG] Ignoring share alias migration key for %@ because the user default is no
[DEBUG] pending migration for %@: %@ from cursor:%@
[DEBUG] no pending migration for %@
[CRIT] UNREACHABLE: unknown migration completed for container %@
[ERROR] can't open %lld to set metadata for %lld %{errno}d
[ERROR] can't open live path %lld to set metadata %{errno}d
[DEBUG] 
%llx fixing up staged item %@
[DEBUG] staged file ID is in the graveyard, start over
[DEBUG] item is no longer in stage %@
[DEBUG] 
%llx live file ID was swapped and is now in the stage, moving to the graveyard
[ERROR] Can't resolve path %@ %{errno}d
[WARNING] We have a conflicting item %@ which needs to get bounced away
[WARNING] Clearning staged item with zero generationID for item %@
[CRIT] UNREACHABLE: item %@ was edited in stage (generationID = %lu)
[DEBUG] reserved item is still staged for creation
[DEBUG] item is still staged for update
[DEBUG] item is still staged but already moved to graveyard, making it reserved
[CRIT] Assertion failed: self.hasPid
[CRIT] Assertion failed: _hasAuditToken
[DEBUG] %@ is restricted from sync (TCC)
[DEBUG] %@ is restricted from sync (MC)
[DEBUG] Sync: blacklist %@ because it needs a newer OS to sync up
[DEBUG] Sync: blacklist %@ and all dependents because %llu nsecs to retry
[DEBUG] marking needs-upgrade %@ and its descendants
[WARNING] item with shareID %@ is moving into a shared parent %@%s
[DEBUG] Just learning share property changes from %@
[DEBUG] We need to unshare %@
[CRIT] UNREACHABLE: Unexpected item %@. Ignoring
[DEBUG] Sync: blacklist %@ for item share-within-share processing
[DEBUG] Sync: blacklist %@ because it is moving into a share and has shared children
[WARNING] Unsharing turd folder share %@ because it now has shared children
[DEBUG] Sync: blacklist %@ because it needs pcs chaining
[WARNING] Parent item needs to be revived to sync up %@
[DEBUG] Not waiting for deletes because of a default
[WARNING] Sync: blacklist %@ until the delete of its child
[DEBUG] Sync: blacklist %@ because it's an unresolved path-match with %@
[DEBUG] Sync: blacklist %@ because we have a lost item at the same path in the server truth - %@
[WARNING] blacklist %@ because parent is a directory fault in the server truth
[WARNING] max depth %u reached at %@
[DEBUG] Sync: blacklist %@ because it's lost
[DEBUG] Sync: blacklist %@ because it's already being processed for CZM
[CRIT] UNREACHABLE: reset needed for %@ because of orphan %@
[CRIT] Assertion failed: n
[DEBUG] Embargoing item %@: it has %@ unsynced children
[DEBUG] Item %@ is embargoed: %@ unsynced children
[DEBUG] Item %@ is un-embargoed
[DEBUG] Embargoed item %@ has now %@ unreturned dead children left
[DEBUG] item %@ isn't embargoed
[DEBUG] blacklist all deletes for item which is being copied to a new zone %@
[DEBUG] Highest parent dead fault is nil because it's a shared-to-me top level item - %@
[DEBUG] Highest parent dead fault is %@
[DEBUG] blacklist all children deletes when leaving top level folder share %@
[CRIT] Assertion failed: item.isDead
[DEBUG] blacklisting %@ and its descendants
[DEBUG] Fetching recursive contents of %@ because it is the highest dead parent dir-fault
[DEBUG] Sync: enumerating documents needing sync up
[DEBUG] Sync: enumerating live or new directories
[DEBUG] Sync: enumerating tombstones
[CRIT] UNREACHABLE: itemID %@ has no share name
[WARNING] No share options set on an item which is clearly shared
[ERROR] Couldn't find root share for %@
[WARNING] No collaboration identifier can be computed yet for %@
[DEBUG] preparing to sync up %@
sync-up/container-metadata
[DEBUG] no records to save
[DEBUG] preparing to send %lu records
[DEBUG] completed sync up for %lu records: %@
[NOTICE] saved %lu containers metadata in the cloud
[DEBUG] adding sub-operation to save the records: %@
[DEBUG] 
%llx Sync: syncing up container metadata
AppTelemetryQBSInvestigation
NSCopying
OfflineInitialization
BRCBookmarkAdditions
FPFSAdditions
BRFieldCKInfo
BRCSideCarInfo
BRCVolume
BRCTimerScheduler
BRCLifeCycle
NSObject
BRCSideCarSyncDownOperation
BRCOperationSubclass
AppTelemetryCiconiaBouncesInvestigation
BRCDownloadTrackers
BRCPQLConnection
BRC_LOGGING_ADDITIONS
_BRCOperation
_BRCFrameworkOperation
BRCancellable
BRCSharedDatabaseSyncOperation
BRCNotificationAdditions
BRCNotification
BRFieldFinderTags
BRCAdditions
BRCProgress
BRCSharedToMeTopLevel
BRCDaemonContainerHelper
BRContainerHelper
BRCDatabaseNeedsReset
BRCDatabaseFromTheFutureException
BRCDatabaseManager
BRCFetchRecentAndFavoriteDocumentsOperation
BRCAccountOnlinePerformer
BRCReachabilityDelegate
BRCAccountMigrator
BRCAccountMigrationChecker
BRCAccountHandler
MCProfileConnectionObserver
BRCAutoCancelOperation
BRCListDirectoryContentsOperation
BRCRecursiveListDirectoryContentsOperation
BRCListOperationDelegate
BRCFinderBookmarkItem
BRCAnalyticsReporter
BRCEventMetric
BRCFSEventToSyncUpEvent
BRCUserDownloadEvent
BRCMetricEndpoint
BRCCKMetricEndpoint
BRCTransferFailureReport
BRCSyncHealthReport
BRCItemCountMismatchReport
BRCSyncConsistencyReport
BRDiskCheckerServiceProtocol
BRCExtensionErrorPayload
BRCZoneHealthCheckOperation
BRCStatInfo
BRCVersion
NSSecureCoding
NSCoding
BRCSignatureAdditions
BRFieldPkgItem
BRCFSEventsPersistedState
BRCNotificationManager
BRCModule
BRCAcceptShareOperation
BRCFetchiWorkSharingInfoOperation
BRCRelativePath
BRCAutoBugCaptureReporter
AppTelemetryQBSPerformance
BRCMinHeap
NSFastEnumeration
BRCChecksummingOutputStream
BRCSideCarSyncUpOperation
BRCAccountWaitOperation
AppTelemetryInvestigation
AppTelemetryDriveTelemetryExtension
BRCReachabilityObserver
BRCThrottle
BRCFSSchedulerBase
BRCDataOrDocsScopeGatherer
BRCNotificationPipe
IPCs
BRItemNotificationSending
BRCUserNotification
BRCUserNotifier
BRCBookmark
BRCShareAcceptWaiterInfo
BRCDaemonFPFS
NSXPCListenerDelegate
BRCProtocolBufferAdditions
PQLValuable
PQLBindable
BRCSharingCopyShareOperation
BRCApplyJobIdentifier
BRCApplyScheduler
BRCSuspendable
BRCSyncThrottle
BRCDatabaseBackupManager
BRCALRowID
BRCAppLibrary
BRCForegroundClient
BRCRetryCounter
BRCThrottleBase
BRCImportObject
BRCPackageAdditions
BRCDownloadJobIdentifier
BRCJobIdentifying
BRCJobsMatching
BRCFSDownloaderBatchEnumerator
BRCFSDownloader
BRCDumpContext
BRCShareAcceptationDocumentFault
BRCShareAcceptationFault
BRCShareAcceptationDirectoryFault
BRCZoneReset
BRCZoneMigration
BRCLocalStatInfo
BRCLocalItem
BRCSyncThrottleItemProtocol
BRCItem
BRCStageAdditions
BRCUbiquitousAttributes
BRCContainerScheduler
APSConnectionDelegate
BRCClientZoneDelegate
BRCAppLibraryDelegate
BRAdditions
BRFieldVersionSignature
BRItemAdditions
BRCSharingCopyAccessTokenOperation
BRCLocalVersion
BRCDocumentItem
BRCTopLevelShareable
BRCFileCoordinatorContext
BRCFileCoordinator
BRCContainerMetadataSyncDownAdditions
BRCContainerMetadataSyncDownOperation
BRCUpload
BRCTransfer
BRCUploadBatchOperation
BRCFailedListSaveObject
BRCServerZone
BRCZone
BRCDatabaseBackupStorage
BRCPathAdditions
CKConversions
BRCItemAdditions
BRCSerializationAdditions
BRCContainerMetadataAdditions
CKRecordZoneID
BRCWorkAround
BRCSharingAdditions
BRCServerChangesApplyUtil_Private
BRCServerChangesApplyUtil
BRCSyncUpOperation
PathResolution
BRCSyncOperationThrottle
BRCSyncBudgetThrottle
BRCSyncOperationBackoffRatio
BRiWorkSharingInfo
DatabaseMigrationHelpers
BRCItemID_v9
BRCFSImporter
BRCClientZone
BRCPersistedState
BRFieldXattr
BRCCryptographicAdditions
BRCLazyPackage
AppTelemetryTelemetryMessage
BRCPrivateClientZone
_BRCTransferInfo
_BRCUploadInfo
_BRCDownloadInfo
BRCGlobalProgress
BRCFetchParentChainOperation
BRCSyncUpOperationBuilder
BRCClientRanksPersistedState
BRCServerStatInfo
BRCServerItem
BRCPathToItemLookup
BRCDaemonSyncedRootURLCache
BRSyncedRootURLCache
BRCItemID
BRCReimporterUtil
DatabaseMethods
PQLResultSetInitializer
BRCAddition
BRCPackageManifestReader
BRCPackageManifestWriter
BRCPackageChecksummer
SchedulingAdditions
BRCItemTransmogrifier
BRCContainerFindByName
BRCDatabaseRestoreManager
ChildPropagation
BRCMigrationQueryOperation
Daemon
BRCSharingFetchUserRecordIDOperation
BRCFileProvidingRequestOperation
BRCDownloadTracking
BRCTransferStream
AppTelemetryCiconiaInvestigation
BRFieldXattrBlob
BRCSymlinkItem
BRCCreateZoneAndSubscribeOperation
BRCZonePurgeOperation
BRCLocateRecordOperation
BRCStagePersistedState
BRCStageRegistry
BRCLowDiskDelegate
BRCVersionsFileProvider
BRCRecentsChangeToken
BRCRecentsEnumeratorBatch
BRCRecentsEnumerator
BRCDownload
Downloads
BRCDownloadThumbnail
BRCDownloadThumbnailsBatchOperation
BRCDownloadContent
BRCDownloadContentsBatchOperation
BRCDownloadVersion
BRCDownloadVersionsBatchOperation
BRCZoneRootItem
BRCFSRooted
BRCThrottler
BRCAliasItem
BRCPrivateServerZone
BRCSharedServerZone
BRCDatabaseBackupRecord
BRCProgressMultiplex
BRFPAdditions
BRCSharingCopyWebAuthTokenOperation
BRCSyncUpScheduler
BRCFSUploader
BRCHalfChainInfo
BRCPCSChainAdditions
BRCPCSChainInfo
BRCPCSChainBatchInfo
BRCPCSChainBreadthEnumerator
BRCPCSChainEnumerator
BRCPCSChainingOperation
BRCFPFSAdditions
BRCAccountsManager
BRCAccountHandlerDelegate
BRFieldPkgLocalItem
BRCServerChangesApplier
BRCItemGlobalID
BRCCrossZoneMoveExtension
BRCMigrateZonePCSOperation
BRCAccountSession
BRCCloudDocsAppsObserver
BRBundleServiceProtocol
BRCSharingAcceptFlowOperation
LSOpenResourceOperationDelegate
BRCTransferBatchOperation
BRCDumper
BRCProblem
BRCProblemReport
BRCServerZoneHealthState
BRCQuarantine
BRCLazyXattrsCollection
BRCFileUnlinker
BRFieldStructureSignature
BRCTreeEnumerator
BRCUploadAllFilesTrackerOperation
BRCAllItemsDidUploadTracker
BRCShareURL
brc_task_tracker
BRCUncancellableBlockOperation
BRCFetchSubResourceRecord
BRValueableAdditions
BRCPendingChangesStream
BRFieldUserIdentity
BRCSharingModifyShareOperation
BRCSharingSaveShareOperation
BRCSharingDestroyShareOperation
BRCSharingLookupParticipantsOperation
BRCSharingModifyAccessOperation
BRCSharingCopyParticipantTokenOperation
BRCSharingPCSChainFolderOperation
BRCSharingCopyShareURLOperation
BRCSharingCopyShortTokenOperation
BRCShareDeleteInfo
BRCSharingProcessFolderSubitemsOperation
AppTelemetryTimeSeriesEvent
BRCSharedServerItem
BRCFairScheduler
BRCFairSource
BRCiWorkPublishingOperation
BRCAggregateOperation
BRCContainerMetadataSyncPersistedState
BRCZoneHealthSyncPersistedState
BRCSideCarSyncPersistedState
BRCCountedSet
BRCDirectoryBreadthEnumerator
BRCDirectoryEnumerator
BRCAsyncDirectoryEnumerator
BRCXPCClient
BRCProcessMonitorDelegate
BRCNotificationPipeDelegate
BRCXPCTokenClient
BRTokenProtocol
BRFileCoordinationProvider
BRCXPCRegularIPCsClient
BRProtocolShared
CKXPCShareDaemon
BRShareOperationProtocol
BRCPeriodicSyncOperation
BRCDesiredVersion
BRCZoneHealthReportOperation
BRCPackageItem
BRCZoneRowID
BRCDeadlineSource
BRCDeadlineScheduler
BRCSyncContext
BRCFetchQuotaOperation
BRCDirectoryItem
BRCSyncOperationThrottleParams
BRCUserDefaultsManager
NSURLSessionDownloadDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
BRCUserDefaults
BRCContainerCellularSettings
BRCSyncDownOperation
BRCErrorGrouping
BRFieldPkgHeader
BRCTermDumper
BRCCloudDocsAppsMonitor
BRCAppListMonitorDelegate
BRCGenerationID
ItemFetching
BRCFSTransferScheduler
BRCFetchRecordSubResourcesOperation
BRCFileProvider
NSFileProvider
BRCDiskSpaceReclaimer
BRCSharedClientZone
BRCClientState
BRCSystemResourcesManager
BRReachabilityObserver
BRCCoreAnalyticsReporter
BRCServerChangeState
BRCServerPersistedState
BRCClientPrivilegesDescriptor
BRFieldContentSignature
BRCSyncUpEnumerator
BRCPkgItemAdditions
BRCShareIDAdditions
BRCContainerMetadataSyncUpAdditions
BRCContainerMetadataSyncUpOperation
BRCItemDBRowIDJobIdentifier
BRCIntAndZoneJobIdentifier
BRCItemDBRowIDAndZoneJobIdentifier
description
dictionaryRepresentation
stringWithFormat:
dictionary
numberWithUnsignedLongLong:
setObject:forKey:
allocWithZone:
init
isMemberOfClass:
copyWithZone:
setServerTruthDirCount:
setHasServerTruthDirCount:
hasServerTruthDirCount
setServerTruthDirFaultCount:
setHasServerTruthDirFaultCount:
hasServerTruthDirFaultCount
setClientTruthDirFaultCount:
setHasClientTruthDirFaultCount:
hasClientTruthDirFaultCount
setTimeSinceLogin:
setHasTimeSinceLogin:
hasTimeSinceLogin
setServerTruthTotalItemsCount:
setHasServerTruthTotalItemsCount:
hasServerTruthTotalItemsCount
readFrom:
writeTo:
copyTo:
isEqual:
hash
mergeFrom:
serverTruthDirCount
serverTruthDirFaultCount
clientTruthDirFaultCount
timeSinceLogin
serverTruthTotalItemsCount
_clientTruthDirFaultCount
_serverTruthDirCount
_serverTruthDirFaultCount
_serverTruthTotalItemsCount
_timeSinceLogin
_has
TB,N
TQ,N,V_serverTruthDirCount
TQ,N,V_serverTruthDirFaultCount
TQ,N,V_clientTruthDirFaultCount
TQ,N,V_timeSinceLogin
TQ,N,V_serverTruthTotalItemsCount
setSession:
dbRowID
setObject:forKeyedSubscript:
isSharedZone
asSharedZone
mangledID
zoneName
objectForKeyedSubscript:
associateWithServerZone:offline:
addOfflineServerZone:
addOfflineClientZone:
addOfflineAppLibrary:
unsaltedBookmarkDataWithItemResolutionString:serverZoneMangledID:
brc_SHA1WithSalt:
stringByAppendingPathComponent:
aliasTargetContainerString
session
accountDSID
bookmarkDataWithItemResolutionString:serverZoneMangledID:saltAccountDSID:
stringValue
stringByAppendingString:
documentID
numberWithUnsignedInt:
itemResolutionStringWithDocumentID:
bookmarkDataWithItemResolutionString:serverZone:
itemResolutionStringWithRelativePath:
componentsSeparatedByString:
count
brc_errorInvalidParameter:value:
objectAtIndexedSubscript:
initWithAliasTargetContainerString:
initWithUUIDString:
isEqualToString:
brc_errorAccountMismatch
hasPrefix:
integerValue
numberWithInteger:
isShared
sharedClientZoneByMangledID:
appLibraryByMangledID:
initWithString:libraryRowID:sharedZoneRowID:
parseUnsaltedBookmarkDataWithItemID:mangledID:error:
parseBookmarkDataWithAccountSession:docID:itemID:mangledID:unsaltedBookmarkData:error:
bookmarkDataWithDocumentID:serverZone:
bookmarkDataWithRelativePath:serverZone:
unsaltedBookmarkDataWithRelativePath:serverZoneMangledID:
itemIDString
bookmarkData
T@"NSString",R,N
documentsFolderWithDB:
includesDataScope
fetchRootItem
zoneRowID
documentsFolderItemID
initWithZoneRowID:itemID:
itemByItemGlobalID:db:
asDirectory
initAsNewDirectoryWithLogicalName:parentItem:error:
isUnixDir
_initWithImportObject:error:
markNeedsUploadOrSyncingUp
documentsFolder
createDocumentsFolder
saveToDB
recreateDocumentsFolderIfNeededInDB
numberWithBool:
setEtag:
setEtagBeforeCrossZoneMove:
setDeletionChangeToken:
setKnownToServer:
setHasKnownToServer:
hasKnownToServer
setWasCached:
setHasWasCached:
hasWasCached
hasEtag
hasEtagBeforeCrossZoneMove
hasDeletionChangeToken
knownToServer
wasCached
etag
etagBeforeCrossZoneMove
deletionChangeToken
.cxx_destruct
_deletionChangeToken
_etag
_etagBeforeCrossZoneMove
_knownToServer
_wasCached
TB,N,V_knownToServer
TB,N,V_wasCached
TB,R,N
T@"NSString",&,N,V_etag
T@"NSString",&,N,V_etagBeforeCrossZoneMove
T@"NSData",&,N,V_deletionChangeToken
initWithCapacity:
appendFormat:
descriptionWithContext:
debugDescription
hasfieldsToSync
ckInfo
setCkInfo:
favoriteRank
setFavoriteRank:
lastUsedTime
setLastUsedTime:
finderTags
setFinderTags:
_ckInfo
_favoriteRank
_lastUsedTime
_finderTags
T@"BRFieldCKInfo",&,N,V_ckInfo
Tq,N,V_lastUsedTime
Tq,N,V_favoriteRank
T@"NSData",&,N,V_finderTags
absolutePath
fileSystemRepresentation
_setUpForStatfs:
defaultManager
mountPath
attributesOfFileSystemForPath:error:
setUpForRelPath:session:error:
fsTypeName
freeSize
totalSize
deviceID
isCaseSensitive
isIgnoringOwnership
hasRenameExcl
hasRenameSwap
hasCloning
_stfs
_isCaseSensitive
_isIgnoringOwnership
_hasRenameExcl
_hasRenameSwap
_hasCloning
_deviceID
Ti,R,N,V_deviceID
TB,R,N,V_isCaseSensitive
TB,R,N,V_isIgnoringOwnership
TB,R,N,V_hasRenameSwap
TB,R,N,V_hasRenameExcl
TB,R,N,V_hasCloning
T@"NSNumber",R,N
cancel
clientTruthWorkloop
reschedule
nameWithString:
numberWithSQL:
longLongValue
dateWithTimeIntervalSince1970:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
TQ,R
T#,R
T@"NSString",R,C
close
resume
isCancelled
initWithAccountSession:timerName:sqlTable:field:timerHandler:
_session
_timer
_suspended
_name
_sqlTable
_field
_handler
_isCancelled
TB,R,N,V_isCancelled
sideCarSyncContext
initWithName:syncContext:
brc_sideCarZoneID
initWithSession:zoneID:
completedWithResult:error:
_createSyncDownOperation
setCreateZoneAndSubscribeCompletionBlock:
addSubOperation:
length
bytes
serverDB
countByEnumeratingWithState:objects:count:
recordID
brc_itemIDWithSession:
deserializeSideCarInfo:error:
numberWithLongLong:
locateSideCarServerZone:shareRecordName:withSession:
recordName
execute:
changes
addObject:
locateSideCarServerZone:withSession:
allocateRanksWhenCaughtUp:
saveServerZoneToDB:
serverState
nextRank
performWithFlags:action:
clientDB
containerScheduler
sideCarSyncPersistedState
requestID
itemsWithSideCarInFlightDiffsEnumerator
markLatestSyncRequestAcknowledgedInZone:
markLatestSyncRequestFailedInZone:
saveToDBForServerEdit:keepAliases:
updateWithServerChangeToken:requestID:
applyScheduler
generatedRanksForZone:upToRank:
defaultsForSideCar
setPreviousServerChangeToken:
maxRecordCountInFetchRecordsOperation
setResultsLimit:
desiredKeysWithMask:
setDesiredKeys:
arrayWithObjects:count:
dictionaryWithObjects:forKeys:count:
initWithRecordZoneIDs:configurationsByRecordZoneID:
setShouldFetchAssetContents:
shouldFetchAllChanges
setFetchAllChanges:
recordType
containsObject:
removeObject:
setRecordChangedBlock:
setRecordWithIDWasDeletedBlock:
allValues
_saveChangedRecords:deletedRecords:serverChangeToken:clientChangeToken:
removeAllObjects
setRecordZoneChangeTokensUpdatedBlock:
setRecordZoneFetchCompletionBlock:
setFetchRecordZoneChangesCompletionBlock:
_createZone
main
shouldRetryForError:
initWithSession:changeToken:
createActivity
_serverChangeToken
numberWithInt:
setFolderToPackageCount:
setHasFolderToPackageCount:
hasFolderToPackageCount
setFolderToFileCount:
setHasFolderToFileCount:
hasFolderToFileCount
setFolderToSymlinkCount:
setHasFolderToSymlinkCount:
hasFolderToSymlinkCount
setFolderToAliasCount:
setHasFolderToAliasCount:
hasFolderToAliasCount
setPackageToFolderCount:
setHasPackageToFolderCount:
hasPackageToFolderCount
setPackageToFileCount:
setHasPackageToFileCount:
hasPackageToFileCount
setPackageToSymlinkCount:
setHasPackageToSymlinkCount:
hasPackageToSymlinkCount
setPackageToAliasCount:
setHasPackageToAliasCount:
hasPackageToAliasCount
setFileToFolderCount:
setHasFileToFolderCount:
hasFileToFolderCount
setFileToPackageCount:
setHasFileToPackageCount:
hasFileToPackageCount
setFileToSymlinkCount:
setHasFileToSymlinkCount:
hasFileToSymlinkCount
setFileToAliasCount:
setHasFileToAliasCount:
hasFileToAliasCount
setSymlinkToFolderCount:
setHasSymlinkToFolderCount:
hasSymlinkToFolderCount
setSymlinkToPackageCount:
setHasSymlinkToPackageCount:
hasSymlinkToPackageCount
setSymlinkToFileCount:
setHasSymlinkToFileCount:
hasSymlinkToFileCount
setSymlinkToAliasCount:
setHasSymlinkToAliasCount:
hasSymlinkToAliasCount
setAliasToFolderCount:
setHasAliasToFolderCount:
hasAliasToFolderCount
setAliasToPackageCount:
setHasAliasToPackageCount:
hasAliasToPackageCount
setAliasToFileCount:
setHasAliasToFileCount:
hasAliasToFileCount
setAliasToSymlinkCount:
setHasAliasToSymlinkCount:
hasAliasToSymlinkCount
setNonConflictingKindCount:
setHasNonConflictingKindCount:
hasNonConflictingKindCount
folderToPackageCount
folderToFileCount
folderToSymlinkCount
folderToAliasCount
packageToFolderCount
packageToFileCount
packageToSymlinkCount
packageToAliasCount
fileToFolderCount
fileToPackageCount
fileToSymlinkCount
fileToAliasCount
symlinkToFolderCount
symlinkToPackageCount
symlinkToFileCount
symlinkToAliasCount
aliasToFolderCount
aliasToPackageCount
aliasToFileCount
aliasToSymlinkCount
nonConflictingKindCount
_aliasToFileCount
_aliasToFolderCount
_aliasToPackageCount
_aliasToSymlinkCount
_fileToAliasCount
_fileToFolderCount
_fileToPackageCount
_fileToSymlinkCount
_folderToAliasCount
_folderToFileCount
_folderToPackageCount
_folderToSymlinkCount
_nonConflictingKindCount
_packageToAliasCount
_packageToFileCount
_packageToFolderCount
_packageToSymlinkCount
_symlinkToAliasCount
_symlinkToFileCount
_symlinkToFolderCount
_symlinkToPackageCount
Ti,N,V_folderToPackageCount
Ti,N,V_folderToFileCount
Ti,N,V_folderToSymlinkCount
Ti,N,V_folderToAliasCount
Ti,N,V_packageToFolderCount
Ti,N,V_packageToFileCount
Ti,N,V_packageToSymlinkCount
Ti,N,V_packageToAliasCount
Ti,N,V_fileToFolderCount
Ti,N,V_fileToPackageCount
Ti,N,V_fileToSymlinkCount
Ti,N,V_fileToAliasCount
Ti,N,V_symlinkToFolderCount
Ti,N,V_symlinkToPackageCount
Ti,N,V_symlinkToFileCount
Ti,N,V_symlinkToAliasCount
Ti,N,V_aliasToFolderCount
Ti,N,V_aliasToPackageCount
Ti,N,V_aliasToFileCount
Ti,N,V_aliasToSymlinkCount
Ti,N,V_nonConflictingKindCount
allKeys
strongToStrongObjectsMapTable
objectForKey:
removeObjectForKey:
fileObjectID
orig
copy
downloadTrackedForFileObjectID:didFinishWithError:
initWithSession:
trackedFileObjectIDs
addDownloadTracker:forFileObjectID:
removeDownloadTracker:
document:didCompleteDownloadWithError:
hasPendingTrackerForFileObjectID:
_trackersByFileObjectID
_fileObjectIDsByTracker
T@"BRCAccountSession",R,W,N,V_session
initWithLabel:dbCorruptionHandler:
_setErrorHandlerWithDBCorruptionHandler:
_setLockedHandler
setLabel:
defaultsForMangledID:
dbTraced
setTraced:
setCrashIfUsedAfterClose:
code
UTF8String
setSqliteErrorHandler:
currentOperationDuration
setLockedHandler:
openAtURL:withFlags:error:
setupPragmas
lastError
brc_close
profilingHook
stringWithUTF8String:
setProfilingHook:
initWithFormat:
executeRaw:
isInTransaction
flush
forceBatchStart
assertOnQueue
fetch:args:
fetchObjectOfClass:sql:args:
fetchObject:sql:args:
execute:args:
sqliteErrorHandler
serialQueue
_shouldFlushWithChangeCount:
useBatchingOnTargetQueue:withPolicyHandler:
close:
brc_closeWithError:
dbAutovacuumRatio
dbAutovacuumBatchSize
autovacuumableSpaceInBytes
sizeInBytes
needsAutovacuum
incrementalVacuum:
manager
connectedToPowerSource
autovacuumIfNeeded
sharedManager
br_currentPersonaID
_validateIsRunningWithCorrectPersona
fetchObjectOfClass:initializer:sql:args:
profilingEnabled
setProfilingEnabled:
attachDBAtPath:as:error:
flushToMakeEditsVisibleToIPCReaders
fetchWithSlowStatementRadar:sql:
fetchWithSlowStatementRadar:objectOfClass:sql:
fetchWithSlowStatementRadar:objectWithConstructor:sql:
executeWithExpectedIndex:sql:
executeWithSlowStatementRadar:sql:
executeWithErrorHandler:sql:
disableProfilingForQueriesInBlock:
usePacedBatchingOnTargetQueue:withInterval:changeCount:
fetch:
fetchObjectOfClass:initializer:sql:
fetchObjectOfClass:sql:
fetchObject:sql:
vmStepsExecuted
isReadonly
assertionPersonaIdentifier
setAssertionPersonaIdentifier:
_batchingPacer
_changeCount
_flushInterval
_flushImmediately
_autovacuumInProgress
_changesOverride
_isReadonly
_vmStepsExecuted
_assertionPersonaIdentifier
TQ,R,N,V_vmStepsExecuted
lockedHandler
T@?,C,D,N
TB,R,N,V_isReadonly
T@"NSString",&,N,V_assertionPersonaIdentifier
string
rawInjection:length:
next
stringAtIndex:
operationID
isFinished
isExecuting
isReady
lightweightDescription
initWithUUIDBytes:
raise:format:
setName:
date
operationFailureThrottle
weakObjectsHashTable
setQualityOfService:
initWithName:syncContext:group:
dealloc
qualityOfService
highlightedString:type:context:
timeIntervalSinceDate:
nowDateFromContext:
stringFromOperationUUID:context:
name
subclassableDescriptionWithContext:
appendString:
stateWithContext:
stringFromInterval:context:
usesBackgroundSession
stringFromDueDate:allowsPast:context:
stringFromError:context:
dependencies
mutableCopy
willChangeValueForKey:
didChangeValueForKey:
errorWithDomain:code:userInfo:
finishWithResult:error:
_finishIfCancelled
mainBlock
setExecuting:
setupIfNeeded
removeDependency:
operationThrottle
incrementRetryCount:
_main
br_suggestedRetryTimeInterval
throttleHashFormat:
nsecsToNextRetry:now:increment:
nonDiscretionary
maxBackoffToRetryUserInitiated
distantFuture
_executeWithPreviousError:
dateWithTimeIntervalSinceNow:
callbackQueue
group
setGroup:
addOperation:
finishIfCancelled
_scheduleExecutionWithPreviousError:
operationTimeout
cancelAfterDelay:
brc_isUserInitiatedRetriable
brc_isRetriable
setFinished:
brc_isBlacklistError
brc_isCloudKitAccountTemporarilyUnavailable
invalidateAccountStatus
currentPersona
isDataSeparatedPersona
userPersonaUniqueString
copyCurrentPersonaContextWithError:
generateAndRestorePersonaContextWithPersonaUniqueString:
_completedWithResult:error:
cachedIsTelemetryReportingEnabled
analyticsReporter
telemetryHeaderSupportedClasses
syncTelemetryEventsToSend
configuration
additionalRequestHTTPHeaders
base64EncodedStringWithOptions:
setAdditionalRequestHTTPHeaders:
container
options
setCaptureResponseHTTPHeaders:
responseHTTPHeaders
setNumberStyle:
numberFromString:
updateCurrentTelemetryToken:
setRequestCompletedBlock:
addDependency:
queuePriority
setQueuePriority:
UUIDString
setDiscretionaryNetworkBehavior:
setAutomaticallyRetryNetworkFailures:
_setTelemetryHeaderOnCKOpIfNecessary:
completionBlock
associateWithCompletedOperation:
setCompletionBlock:
setNonDiscretionary:
addOperation:allowsCellularAccess:
addSubOperation:overrideContext:allowsCellularAccess:
blockOnHighPriorityOperation:
timeIntervalSinceNow
syncContext
isForeground
newOperationTimedOutEventWithTime:type:nonDiscretionary:hasForegroundClients:
submitSyncTelemetryEvent:
initWithName:
isConcurrent
executionTimeInSec
error
schedule
start
associateCKOperationsToEventMetric:
setOperationThrottle:
setOperationFailureThrottle:
setMainBlock:
finishBlock
setFinishBlock:
logSections
startDate
highPriorityWaitGroup
_syncContext
_operationUUID
_internalQueue
_executionTransaction
_startDate
_finishDate
_lastTryDate
_nextTryDate
_lastError
_throttleHash
_retryTimer
_timeoutTimer
_group
_highPriorityWaitGroup
_subOperations
_Activity
_associatedEventMetrics
_personaID
_finished
_nonDiscretionary
_callbackQueue
_operationThrottle
_operationFailureThrottle
_mainBlock
_finishBlock
_logSections
_operationGroup
executing
TB,N,GisExecuting
finished
TB,N,GisFinished,V_finished
TB,N,V_nonDiscretionary
T@"NSUUID",R,N
T@"NSDate",R,N,V_startDate
Td,R,N
T@"BRCSyncContext",R,N,V_syncContext
T@"NSObject<OS_dispatch_group>",R,N,V_highPriorityWaitGroup
T@"CKOperationGroup",&,N,V_operationGroup
T@"NSError",R,N,V_lastError
TQ,R,N,V_logSections
T@"NSObject<OS_dispatch_queue>",R,N,V_callbackQueue
T@"BRCThrottle",N,V_operationThrottle
T@"BRCThrottle",N,V_operationFailureThrottle
T@?,C,N,V_mainBlock
T@?,C,N,V_finishBlock
invalidate
remoteObjectProxyWithErrorHandler:
setRemoteOperationProxy:userInfo:
setRemoteClientProxy:
descriptionAdditionalStringWithContext:
remoteClientProxy
ignoreMissingRemoteClientProxy
setIgnoreMissingRemoteClientProxy:
_startedFinish
_ignoreMissingRemoteClientProxy
_remoteClientProxy
T@"NSObject<BROperationClient>",&,N,V_remoteClientProxy
TB,N,V_ignoreMissingRemoteClientProxy
shareDBSyncCompletionBlock
boolValue
setShareDBSyncCompletionBlock:
ownerName
userKeyForOwnerName:db:
createUserKeyForOwnerName:
groupInTransaction:
initWithSubscriptionID:
setShouldSendContentAvailable:
setNotificationInfo:
initWithSubscriptionsToSave:subscriptionIDsToDelete:
brc_cloudKitErrorForSubscriptionID:
brc_containsCloudKitInternalErrorCode:
setModifySubscriptionsCompletionBlock:
changeToken
initWithPreviousServerChangeToken:
queue
setCallbackQueue:
sharedDBSyncDownBatchRecordsCount
array
setRecordZoneWithIDChangedBlock:
setRecordZoneWithIDWasDeletedBlock:
initWithRecordZoneID:
getOrCreateSharedZones:
scheduleSyncDown
updateWithServerChangeToken:clientRequestID:caughtUp:
_performAfterAddingOwnerKeysForZoneIDs:block:
setFetchDatabaseChangesCompletionBlock:
_performFetchChangedZones
_performAfterRegisteringForPushes:
initWithSyncContext:changeState:group:
_changeState
_shareDBSyncCompletionBlock
T@?,C,N,V_shareDBSyncCompletionBlock
bookmarkDataWithItemResolutionString:serverZoneName:ownerName:accountDSID:salted:
_bookmarkDataWithItemResolutionString:serverZone:salted:
unsaltedBookmarkDataWithItemResolutionString:serverZone:
parseUnsaltedBookmarkData:itemID:mangledID:error:
parseBookmarkData:inAccountSession:itemID:mangledID:unsaltedBookmarkData:error:
exists
br_errorWithPOSIXCode:
isFinderAlias
modificationTime
numberWithLong:
isSymLink
isDocument
appLibrary
appLibraryID
isFault
faultDisplayName
filename
stringByDeletingLastPathComponent
parentFileObjectID
setAttribute:forKey:
isFile
size
birthTime
type
isiCloudDesktopAppLibrary
initWithRelPath:error:
initWithData:
allObjects
componentsJoinedByString:
initWithFileID:
isBRAlias
isZoneRoot
isOnDisk
itemGlobalID
itemParentGlobalID
logicalName
mangledIDString
isInDocumentScope
isInDataScope
isInTrashScope
parentClientZone
clientZone
fromReadOnlyDB
isFSRoot
sharingOptions
brc_fetchShareIDWithSharedItem:
brc_shareItemID
itemByItemID:db:
tagsCount
tags
mode
isDirectory
birthtime
isUserVisible
extendedAttributes
creatorRowID
nameComponentsForKey:db:
uploadStatus
isDead
digestDescription
isShareAcceptationFault
isKnownByServer
ownerKey
dataUsingEncoding:
collaborationIdentifierIfComputable
asDocument
currentVersion
lastEditorRowID
isEqualToNumber:
characterAtIndex:
physicalName
isHiddenExt
desiredVersion
wantsContent
editedSinceShared
mtime
isFinderBookmark
isPackage
liveConflictLoserEtags
fsDownloader
isDownloadingItem:
fsUploader
isUploadingItem:
downloadStatus
downloadError
brc_wrappedError
uploadError
isDownloadRequestedForThumbnail
isDownloadRequested
isEvictable
syncUpError
isSharedByMeOrContainsSharedByMeItem
isSharedToMeOrContainsSharedToMeItem
isDirectoryFault
serverQuotaUsage
childItemCount
asSymlink
symlinkTarget
parentID
isNonDesktopRoot
isLost
parentItemIdentifier
serverZone
itemID
initWithLocalVersion:
data
initWithLocalStatInfo:
fileObjectIDWithString:
notificationFromItem:relpath:
initWithLocalItem:itemDiffs:
asBRAlias
initWithAliasItem:itemDiffs:
stagedFileID
unsignedLongLongValue
fileID
stagedGenerationID
generationID
fsGenerationID
longValue
volume
parentFileID
br_pathWithFileSystemRepresentation:
targetItemID
targetClientZone
asShareableItem
isReserved
targetAppLibrary
_addAliasDecoration:
isEqualToItemGlobalID:
isEqualToFileObjectID:
merge:
unionSet:
fileURLWithPath:
br_isSideFaultName
URLByAppendingPathComponent:
isDocumentsFolder
supportsSecureCoding
notificationGatheredFromItem:
notificationFromItem:
notificationWithAliasItem:targetItemNotification:
subclassDescription
oldParentFileObjectID
classForCoder
initRootContainerNotification
setNumberAttribute:forKey:
notificationByStrippingSharingInfoIfNeeded
canMerge:
generateLogicalExtension:physicalExtension:
parentGlobalID
oldParentFileID
parentGlobalIDs
setParentGlobalIDs:
appLibraryIDsWithReverseAliases
setAppLibraryIDsWithReverseAliases:
oldAppLibraryID
aliasSourceAppLibraryID
unsaltedBookmarkData
setUnsaltedBookmarkData:
_isInDocumentScope
_isInDataScope
_isInTrashScope
_itemGlobalID
_parentGlobalID
_oldParentFileID
_parentGlobalIDs
_appLibraryIDsWithReverseAliases
_appLibrary
_oldAppLibraryID
_aliasSourceAppLibraryID
_unsaltedBookmarkData
T@"BRCAppLibrary",R,N,V_appLibrary
T@"NSString",R,N,V_aliasSourceAppLibraryID
T@"BRCItemGlobalID",R,N,V_itemGlobalID
T@"BRCItemGlobalID",R,N,V_parentGlobalID
TQ,R,N,V_oldParentFileID
T@"BRFileObjectID",R,N
T@"NSString",R,N,V_oldAppLibraryID
T@"NSSet",&,N,V_parentGlobalIDs
T@"NSMutableSet",&,N,V_appLibraryIDsWithReverseAliases
T@"NSString",&,N,V_unsaltedBookmarkData
T@"NSURL",R,D,N
TB,R,N,V_isInDocumentScope
TB,R,N,V_isInDataScope
TB,R,N,V_isInTrashScope
brc_issueSandboxExtensionOfClass:error:
objectAtIndex:
addTags:
clearTags
tagsAtIndex:
tagsType
setTags:
_tags
T@"NSMutableArray",&,N,V_tags
_publish
_unpublish
isIndeterminate
isPaused
fractionCompleted
completedUnitCount
totalUnitCount
brc_publish
brc_unpublish
brc_dumpDescription
setCompletedUnitCount:
enumerateKeysAndObjectsUsingBlock:
_progressForDocument:group:sizeInfo:
globalProgress
addProgress:forDocument:inGroup:
initWithParent:userInfo:
lastPathComponent
downloadProgressForDocument:sizeInfo:
uploadProgressForDocument:sizeInfo:
initWithGroup:parentFileIDs:session:
addAliasItem:
isPublished
parentFileIDs
_progressByAliasContainerID
_published
_parentFileIDs
T@"NSArray",R,N,V_parentFileIDs
TB,R,N,V_published
isSharedToMeTopLevelItem
diffAgainst:
derivedAliasItemIDWithOwnerName:
serverAliasItemForSharedItem:inZone:
structureRecordIDForItemType:zone:aliasTargetZoneIsShared:
isPrivateZone
sharedAliasItemID
diffAgainstOriginalItem
initWithZoneName:ownerName:
asPrivateClientZone
serverAliasByUnsaltedBookmarkData:
initWithRecordType:recordID:
fillStructureRecord:inZone:itemID:ckInfo:parentID:targetItemID:targetZone:diffs:isFolderShare:beingDeadInServerTruth:shouldPCSChainStatus:
serializeFilename:forCreation:setExtension:inSharedAlias:
serializeFinderTags:forCreation:
serializeStructuralPluginHints:
itemByItemID:
newLocalItemWithServerZone:dbRowID:
setItemScope:
markDead
markNeedsUploadOrSyncingUpWithAliasTarget:
groupInBatch:
isBatchSuspended
serverZoneByRowID:
insertTombstoneAliasRecordInZone:
localAliasForSharedItem:inZone:
markNeedsDeleteForRescheduleOfItem:
diffAgainstServerAliasItem:
structureRecordIDInZone:
structureRecordBeingDeadInServerTruth:shouldPCSChainStatus:inZone:
updateParentZoneRowID:
setWithCapacity:
setWithArray:
addObjectsFromArray:
accountHandlerForCurrentPersona
containerMetadata
cloudSyncTCCDisabledForContainerMeta:
setIsCloudSyncTCCDisabled:
enumerateAppLibraries:
containerMetadataFilledWithTCCInfo
identifier
bundleIdentifiers
isSharedToMeChildItem
isSharedToMe
isSharedByMe
isEqualToClientZone:
defaultClientZone
supportsServerSideAssetCopies
hasShareIDAndIsOwnedByMe
isOwnedByMe
possiblyContainsSharedItem
brc_errorNotSupportedInFPFS
itemIDForURL:error:
brc_errorMethodNotImplemented:
br_currentHomeDir
br_currentMobileDocumentsDir
canFetchAllContainersByID
fetchAllContainersByIDWithError:
fetchContainerForMangledID:personaID:
br_capabilityToMoveFromURL:toNewParent:error:
queryPathsForPersona:withError:
br_capabilityToMoveFromLocalItem:toNewParent:session:error:
_disabledBundleIDs
_knownBundleIDs
newConnectionWithLabel:readonly:error:
readOnlyWorkloop
useSerialQueueWithTarget:
captureDBCorruptionInfoWithDescription:error:
fileUnlinker
path
renameAndUnlinkInBackgroundItemAtPath:
sessionDirPath
dbBecameCorruptedWithDescription:error:
setStatementCacheMaxCount:
setupDatabase
serverTruthWorkloop
openForDumping
sessionForDumpingDatabasesAtURL:with:
newConnection:
statementCacheMaxCountForServerTruth
statementCacheMaxCountForClientTruth
dbProfiled
_openConnection:databaseName:baseURL:readonly:error:
_registerDynamicDBFunctions:error:
setSynchronousMode:
_registerStaticDBFunctions:error:
registerFunction:nArgs:handler:error:
containsIndex:
newFromSqliteValue:
initWithData:encoding:
dataAtIndex:
isRootItemIDWithSQLiteValue:
registerFunction:nArgs:handler:
isDocumentsItemIDWithSQLiteValue:
isSharedZoneRootItemIDWithSQLiteValue:
notificationManager
queueUpdateForItemAtRowID:
loadFromClientStateInSession:
allocateNotifRank
_openConnection:databaseName:readonly:error:
_setupConnection:readonly:forChecker:error:
br_errorFromErrno
removeItemAtURL:error:
plist
setNeedsSave:
saveServerZone:toDB:
lastInsertedRowID
setDbRowID:
numberAtIndex:
saveAppLibrary:toDB:
initWithAppLibraryName:
unarchivedObjectOfClasses:atIndex:
initWithMangledID:dbRowID:zoneRowID:db:plist:session:initialCreation:createdRootOnDisk:createdCZMMoved:rootFileID:
_createAppLibrary:
newAppLibraryFromPQLResultSet:error:
enumerateObjects:
initWithMangledID:dbRowID:db:plist:session:initialCreation:
newSharedClientZoneFromPQLResultSet:error:
initWithMangledID:dbRowID:plist:session:
newSharedServerZoneFromPQLResultSet:error:
newPrivateClientZoneFromPQLResultSet:error:
newPrivateServerZoneFromPQLResultSet:error:
newLocalItemFromPQLResultSet:db:error:
deviceKeyForName:db:
userIdentityForKey:db:
nameComponents
br_formattedName
participants
isCurrentUser
acceptanceStatus
userIdentity
role
userRecordID
userIdentityForName:db:
initWithCKUserIdentity:
_setUserIdentity:forName:
stringWithSQL:
unknownPersonNameComponents
_privateClientZonesEnumerator:
state
_forDBUpgrade_setStateBits:clearStateBits:
saveClientZoneToDB:
_sharedClientZonesEnumerator:
userVersion
unsignedIntAtIndex:
br_errorWithPOSIXCode:description:
_registerLastBootIfNeeded:table:cleanTelemetryIfNeeded:
unsignedLongLongAtIndex:
_stepBackupDetector:newState:error:
_clearNeedsUpgradeErrors:brVersion:
initWithObjects:
_classesForClientState
initWithDictionary:
sqliteCacheSize
sqliteCacheSpill
needsSave
enumerateServerZones:
saveAppLibraryToDB:
setPreFlushHook:
nextNotifRank
flushUpdatesWithRank:
flushAppliedTombstones
enumerateClientZones:
recentsEnumerator
maxNotifRankWasFlushed
setPostFlushHook:
autoRollbackHandler
domain
daemon
restart
setAutoRollbackHandler:
dbBatchDelay
dbBatchSize
unarchivedObjectOfClass:atIndex:
saveToDB:
openAndValidateDatabase:serverTruth:session:baseURL:skipBackupDetection:error:
_openConnection:serverTruth:databaseName:baseURL:initialVersion:lastCurrentVersion:error:
_validateDatabase:baseURL:session:serverTruth:initialVersion:lastCurrentVersion:error:
_checkIntegrity:serverTruth:session:skipBackupDetection:error:
reimportItemsBelowItemWithIdentifier:error:
unsignedIntValue
dbHandle
setUserVersion:
openAndValidateDatabase:serverTruth:error:
_startWatcher
_finishClientTruthConnectionSetupWithError:
_finishServerTruthConnectionSetupWithError:
enableDatabaseProfilingForDB:
stopDBWatcher
highlightedString:type:
writeLineWithFormat:
isSyncBlockedBecauseAppNotInstalled
isSyncBlockedBecauseOSNeedsUpgrade
_dumpClientZoneBlockedState:toContext:
pushIndentation
dumpStatusToContext:error:
popIndentation
appLibraries
asSharedClientZone
_sharedServerZoneByName:ownerName:db:
_privateServerZoneByName:db:
associateWithServerZone:
dumpActivityToContext:includeExpensiveActivity:error:
dumpTablesToContext:includeAllItems:error:
disableDatabaseProfilingForDB:
fileDescriptor
setDateStyle:
setTimeStyle:
initWithFile:db:
setLiveDaemon:
setOnlyActiveStuff:
setTaskTracker:
clientZonesMatchingSearchString:error:
_dumpClientZoneStatus:toContext:error:
upgradeOfflineDB:serverTruth:session:error:
_sharedServerZonesEnumerator:
_privateServerZonesEnumerator:
_appLibrariesEnumerator:
associateWithClientZone:
liveDaemon
stringFromDate:
icloudAccountIsInCarry
br_realpath
startupDate
intAtIndex:
longAtIndex:
fp_obfuscatedFilename
objectOfClass:atIndex:
dumpToContext:includeAllItems:db:
_dumpClientZone:toContext:includeAllItems:error:
dumpSession:toContext:db:error:
dumpXPCClientsToContext:
dumpMiscOperationsToContext:
versionsProviderForVolume:
dumpToContext:
enumerateAccountHandlers:
cloudDocsAppsMonitor
setDumpTrackedPendingDownloads:
backupToURL:progress:
formatInjection:
unsignedLongAtIndex:
getPreviousMigrationAttempts:failed:withVersion:comperator:
ciconiaVersion
duration
databaseID
clientState
readOnlyDB
expensiveReadOnlyDB
_setupBackupDetector:error:
preventDatabaseFromBeingReused
createServerZone:
deleteServerZone:
_enumerateAppLibraryRowIDs:usingBlock:
_reserveRowIDForLibrary:
_deleteAppLibrary:
_createPrivateAppLibrary:
_createSharedAppLibrary:
_createClientZone:
_deleteClientZone:
_privateClientZoneByName:db:
_privateClientZoneByID:db:
stagedItemsEnumerator
foldersNeedingTransmogrifyEnumerator
bouncedItemsEnumerator
itemsNeedingIndexingEnumeratorFromNotifRank:batchSize:
pendingDownloadItemWithDocumentID:
createDeviceKeyForNameInServerDB:
userIdentityForKey:
learnParticipantIdentitiesForShare:forceUpdate:
userNameForKey:db:
openDBWithError:
closeDBs
dumpStatusToFileHandle:zoneName:tracker:error:
initializeOfflineDatabaseWhileUpgrading:error:
dumpDatabaseToFileHandle:zoneName:includeAllItems:tracker:error:
dumpFileCoordinationInfoToFileHandle:error:
backupDatabaseToURL:error:
accountStatisticsWithDB:
getPreviousMigrationAttempts:failed:beforeVersion:
getPreviousMigrationAttempts:failed:forVersion:
saveMigrationAttemptForReport:uuid:
sessionForBackingUpDatabasesAtURL:
sessionForDumpingDatabasesAtURL:
sessionForCheckingInconsistencies
nameComponentsForName:db:
T@"BRCClientState",R,N
T@"BRCServerPersistedState",R,N
TQ,R,N
T@"BRCPQLConnection",R,N
T@"NSObject<OS_dispatch_workloop>",R,D,N
metadataSyncContext
br_fetchRecents
predicateWithFormat:
initWithRecordType:predicate:
initAndScheduleWithServerZone:parentOperation:pendingChangesStream:contentRecordsFetchedInline:
setStateBits:
setQueryFinishedServerTruthCallback:
initWithQuery:
zoneID
setZoneID:
numberOfGreedyRecentlyUsedItems
setFetchAllResults:
setShouldFetchAssetContent:
addRecord:
setRecordFetchedBlock:
saveRecordsWithQueryCursor:
br_errorWithDomain:code:description:
notifyWhenRecordsAreFetchedAndFinish:
setQueryCompletionBlock:
_performQueryOperationForBit:index:completion:
initWithServerZone:
_serverZone
_key
reset
scheduleNextEvent
addPerformer:
migrationThrottleParams
perform
initWithName:throttleParameters:queue:handler:
addReachabilityObserver:
removeReachabilityObserver:
removePerformer:
networkReachabilityChanged:
networkReachabilityFlagsChanged:
initWithDSID:
resumeAndAutoClose
_close
_dsid
_queue
_throttler
defaultStore
br_appleAccountWithPersonID:
accountHandlerForACAccountID:
setMigrationStatus:forDSID:shouldUpdateAccount:completion:
initWithAccount:
status
isNetworkReachable
performRequestWithHandler:
getOrCreateAccountHandlerForACAccountID:
br_currentSupportDir
sharedConnection
addObserver:
removeObserver:
allApplicationIdentifiers
isCloudSyncAllowed:
accountPath
brc_accountIDPathForAccountPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
writeToFile:atomically:encoding:error:
cloudDocsAppSupportURL
cancelSyncConsistencyReportWithMountPath:queue:
_cleanupAPFSSnapshotWhenNoSessionExists
initWithEnvironmentName:namedDelegatePort:queue:
setEnabledTopics:ignoredTopics:opportunisticTopics:
shutdown
brc_dbAccountDSIDForPath:
isEnabledForDataclass:
br_dsid
br_isEnabledForCloudDocs
setMigrationStatus:forDSID:shouldUpdateAccount:shouldPostAccountChangedNotification:completion:
_cleanupPushAndActivitiesStatesWhenNoSessionExists
br_currentPersonaIDWithIsDataSeparated:
br_personaIdentifier
isDataSeparatedAccount
reloadSyncedFolderPoliciesDisableiCloudDesktop:
initWithACAccountID:dbAccountDSID:salt:accountHandler:
destroyLocalDataWaitingForFilesToBeUnlinked:completionBlock:
setDBAccountDSID:
_loadOnDiskAccountSessionWithError:
addFileProviderDomainForAccount:error:
accountDescription
initWithIdentifier:displayName:
addDomain:forProviderIdentifier:completionHandler:
isInInitialState
logoutTimeout
destroyLocalDataWithPristineContainerIDs:
__itemAtURL:didDisconnectWithPurposeID:
jetsamCloudDocsApps
suspend
dirPathForSyncedFolderType:
writingIntentWithURL:options:
enumerateSupportedFolderTypes:
__destroySessionWithIntents:
fileURLWithPath:isDirectory:
ubiquityTokenSaltFilename
stringWithContentsOfURL:encoding:error:
UUID
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
writeToURL:atomically:encoding:error:
setResourceValue:forKey:error:
minimumDiskSpaceRequiredToBeFunctional
reloadSyncedFolderPolicies
ubiquityTokenSalt
openWithError:pushWorkloop:
reason
setLoggedOutError:
brc_isOutOfSpaceError
checkEnoughDiskSpaceToBeFunctional
closeAndResetLocalStateWithDescription:error:
userInfo
_destroyCurrentSessionSynchronously
accountHandler:willChangeSessionFrom:
invalidateAccountForPersonaCache
_createCurrentAccountSessionWithID:error:
_migrateAccountIfNecessaryForAccountDSID:
accountHandler:didChangeSessionTo:
br_accountForCurrentPersona
currentiCloudAccount
destroyLocalData
_handleAccountWillChange
destroyCurrentAccountSynchronously
_handleAccountDidChange
_updateAccountToDSID:
br_isCloudDocsMigrated
br_setCloudDocsMigrated:
saveVerifiedAccount:withCompletionHandler:
br_isCloudDocsMigrationComplete
br_setCloudDocsMigrationComplete:
setSyncPolicy:forSyncedFolderType:
br_libnotifyPerUserNotificationName
numberWithUnsignedInteger:
unsignedIntegerValue
currentiCloudAccountID
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
initWithACAccountID:
addDelegate:
removeDelegate:
startAndLoadAccountSynchronously:
destroySessionSynchronously
createAccountSessionWithDSID:error:
markMigrationCompletedForDSID:
syncPolicyforSyncedFolderType:
finishedLoading
doesNotHaveEnoughDiskSpaceToBeFunctional
setDoesNotHaveEnoughDiskSpaceToBeFunctional:
acAccountID
pushWorkloop
loggedOutError
_finishedLoading
_accountPath
_ubiquityTokenSalt
_dbAccountDSID
_migrationStatusSetterQueue
_hasSetMigrationComplete
_accountsNeedingAddDomain
_syncPolicyByFolderType
_delegates
_doesNotHaveEnoughDiskSpaceToBeFunctional
_acAccountID
_pushWorkloop
_loggedOutError
TB,R,N,V_finishedLoading
TB,N,V_doesNotHaveEnoughDiskSpaceToBeFunctional
T@"NSString",R,N,V_acAccountID
T@"BRCAccountSession",R,N,V_session
T@"NSString",R,N,V_accountPath
T@"NSObject<OS_dispatch_workloop>",R,N,V_pushWorkloop
T@"NSError",&,N,V_loggedOutError
setCookieStorage:
listDirChangesCancelDelay
_initializeCancelTimer
beginObservingChanges
endObservingChanges
hasObservers
_observersGroup
_cancelTimer
debugItemIDString
directoryStructureRecordIDInZone:
maxRecordCountWhenListingDirChanges
br_listDirectoryContents
beginObservingChangesWithDelegate:
listOperation:wasReplacedByOperation:
addDirectoryListCompletionBlock:
addPreFlushDirectoryListCompletionBlock:
brc_isCloudKitUnknownItemError
brc_isCloudKitAtomicFailure
brc_checkErrorsFromCloudKit:
pendingChangesStream
queryFinishedServerTruthCallback
queryFinishedClientTruthCallback
failedListingDirectoryChanges:serverTruthCallback:clientTruthCallback:folderItemID:
setQueryFinishedClientTruthCallback:
initForListingWithParent:serverZone:
hasBeenCreated
fetchQueryCursor:
changeState
destroyDatabase
fetchContentRecordsInline
recordsFetched
recordsFetchedTotalMetadataSize
xattrsFetchedTotalSize
appLibraryRowID
appLibraryByRowID:
isCloudDocsAppLibrary
_cursorWasUpdated:subResourcesOp:
initWithCursor:
initWithRecordID:action:
fetchShareRecordsInline
addRecordIDToDeserialize:
itemTypeByItemID:db:
initShareIDWithItemID:zoneID:
addRecordIDToDeserialize:recordType:
brc_isCloudKitPCSDecryptionFailure
reportProblemWithType:recordName:
setRecordMatchedBlock:
setQueryCursorFetchedBlock:
brc_isIgnorableListDirectoryError
allowsDirectoryListBeforeInitialChangeToken
_scheduleQueryOp
rescheduleApply
rescheduleItemsParentedToItemGlobalID:
scheduleSyncUp
performWithFlags:action:whenFlushed:
newQBSOperationPrformanceEventWithTime:type:recordsFetched:recordsFetchedTotalMetadataSize:xattrsFetchedTotalSize:
checkIfFinishedFullSync
_waitForFlushAndRescheduleApplyIfNecessaryWithError:
initWithItemID:zone:isUserWaiting:
endObservingChangesWithDelegate:
cancelToBeReplacedByOperation:
folderToList
setRescheduleApply:
_itemID
_recordID
_batchSize
_recordsFetched
_recordsFetchedTotalMetadataSize
_xattrsFetchedTotalSize
_listCompletionBlocks
_preFlushListCompletionBlocks
_hasNilDelegate
_queryOp
_rescheduleApply
T@"BRCItemID",R,N,V_itemID
TB,N,V_rescheduleApply
_isSideSyncOperationBlockedWithName:
brc_errorSyncBlocked
_finishIfBlockedFromListing
recursiveListFetchDirFaultBatchSize
enumerateObjectsOfClass:
listNextItem
fetchNextItemToList
anyObject
rescheduleItemsRecursivelyUnderFolder:
fetchDirectoryContentsIfNecessary:isUserWaiting:rescheduleApplyScheduler:
isEqualToItemID:
listOrFetchNextItem
addRecursiveDirectoryListCompletionBlock:
_itemsToList
_rootItemID
_activeListOp
_itemsFailedListing
_recursiveListCompletionBlocks
asFinderBookmark
isShareableItem
analyticsReportXPCActivity
accountHandler
personaIdentifierForACAccountID:
generateReportWithSession:
uploadMetricsReport:
telemetryErrorEvents
telemetryOtherEvents
appTelemetryGatherXPCActivity
_gatherAppTelemetryEventsWithActivity:
syncConsistencyCheckerEnabled
syncConsistencyCheckerXPCActivity
_checkSyncConsistencyWithActivity:
fetchIsTelemetryReportingEnabledWithCompletion:
hasActiveWorkGroup
telemetryApplySchedulerTimeout
cloudDocsClientZone
rootItemID
telemetryRetryCountForPermenentFailure
newPermanentlyInconsistentEventWithZoneMangledID:
newConsistencyCheckerFailedEvent
_handleApplySchedulerTimeoutWithActivity:telemetryEventType:
telemetryMinRowID
setTelemetryMinRowID:
_reportSyncUpBackoffInfo
shareChangedDuringCheckWithSession:
telemetryEvent
generateReportForSharedFolder:qualityOfService:completionHandler:
_waitForApplySchedulerToBeIdleWithCompletion:
syncConsistencyXPCActivityDeferralCheckInterval
syncConsistencyXPCActivityCheckLeeway
remoteObjectProxy
pauseTreeConsistencyCheck
cancelTreeConsistencyCheck
syncConsistencyCheckerSnapshotting
cleanupApfsSnapshotWithMountPath:
syncConsistencyTimeout
resetQueue
synchronousRemoteObjectProxyWithErrorHandler:
resumeTreeConsistencyCheckWithReply:
_setupSyncConsistencyDeferralTimerWithActivity:
_resumePausedTreeConsistencyCheckOperationWithActivity:
_shouldDeferForExistingSnapshot
_setupSyncConsistencyCancellationTimerWithActivity:session:
wasAbleToRun
newFullyConsistentEvent
telemetryWarningEvents
generateReportWithSession:completion:
clientZones
syncUpBackoffRatio
syncUpBackoffDelay
syncUpBackoffRatioForFailure
syncUpBackoffDelayForFailure
resetSyncUpBackoffRatio
newSyncUpBackoffRatioSummaryEventWithNumberOfFailedZones:
newSyncUpBackoffDelaySummaryEventWithNumberOfFailedZones:
submitEventMetric:
associatedAppTelemetryEvent
_forgetEventMetrics:
firstObject
eventName
removeObjectsInArray:
eventMetricTimeout
startTime
_cleanupTimedOutEventMetrics:
_withEventMetricsOfKind:accessor:
syncErrors:
genID
removeObjectAtIndex:
initWithEventName:
setStartTime:
setFileID:
setGenID:
setOperationID:
setIsRecursiveDownload:
setIsDownloadingForBackup:
fileObjectIDs
dropAllSyncTelemetryEvents
telemetryToken
setTelemetryToken:
dequeueSyncTelemetryEvents
telemetryEventReportBatchSize
highPriorityTelemetryEventsPercentage
addEvents:
setToken:
eventsCount
_fetchTelemetryEventCountOrAdd:
token
initWithArray:
containsString:
telemetryEventQueueSize
telemetryEventDisabledMessages
_getPriorityOfEvent:
telemetryEventQueueReductionAmount
newDroppedEventWithCount:
newAppTelemetryMetricEvent:
forceTelemetryDequeuePercentage
minForceTelemetrySyncInterval
forceTelemetryDequeue
allowForceTelemetryDequeue
br_quotaUpdateTelemetry
setQuotaAvailableForDefaultOwner:
addMiscOperation:
shouldReportTelemetryEvents
aa_primaryAppleAccount
aa_altDSID
_updateCachedEnabled:
configurationInfoWithIdentifiers:forAltDSID:completion:
forgetEventMetric:
createFSEventToSyncUpEventForFileID:genID:
lookupFSEventToSyncUpEventByFileID:genID:accessor:
lookupFSEventToSyncUpEventByItemID:accessor:
createUserDownloadEventForOperationID:isRecursive:isForBackup:
lookupUserDownloadEventByOperationID:accessor:
lookupUserDownloadEventByFileObjectID:accessor:
currentTelemetryToken
deleteMissingErrorThrottles
didApplyItemInsideSharedItemID:
_telemetryEventCount
_waitOnIdleQueue
_metricEndpoint
_eventsByKind
_syncHealthReport
_currentTelemetryItemGlobalID
_currentTelemetryToken
_lastSentTelemetryEvents
_syncTelemetryState
_syncConsistencyDeferralTimer
_syncConsistencyCancellationTimer
_forceTelemetryDequeueQueued
subDescription
additionalPayload
endTime
setEndTime:
isCKMetric
setIsCKMetric:
associatedCKEventMetricIfAvailable
_isCKMetric
_eventName
_startTime
_endTime
_associatedCKEventMetricIfAvailable
T@"NSString",R,N,V_eventName
T@"NSDate",&,N,V_startTime
T@"NSDate",&,N,V_endTime
TB,N,V_isCKMetric
T@"CKEventMetric",R,N,V_associatedCKEventMetricIfAvailable
newFSEventToSyncUpEventWithDuration:
setItemID:
setMtime:
contentSize
setContentSize:
setIsPackage:
syncUpBatchSize
setSyncUpBatchSize:
_isPackage
_genID
_fileID
_mtime
_contentSize
_syncUpBatchSize
TQ,N,V_fileID
TI,N,V_genID
T@"BRCItemID",&,N,V_itemID
TQ,N,V_mtime
TB,N,V_isPackage
TQ,N,V_syncUpBatchSize
TQ,N,V_contentSize
newUserDownloadEventWithDuration:
setFileObjectIDs:
didSucceed
setDidSucceed:
isDownloadingForBackup
isRecursiveDownload
itemCount
setItemCount:
totalContentSize
setTotalContentSize:
_didSucceed
_isDownloadingForBackup
_isRecursiveDownload
_operationID
_fileObjectIDs
_itemCount
_totalContentSize
T@"NSUUID",&,N,V_operationID
T@"NSMutableSet",&,N,V_fileObjectIDs
TB,N,V_didSucceed
TB,N,V_isDownloadingForBackup
TB,N,V_isRecursiveDownload
TQ,N,V_itemCount
TQ,N,V_totalContentSize
initWithEventName:atTime:
defaultSyncContext
ckContainer
distantPast
setLastFailureDate:
brc_cloudKitErrorMessage
isEqualToTransferFailureReport:
initWithError:
encounteredErrorWithPCSState:privateDB:atDate:
encounteredErrors:atDate:
lastFailureDate
privateDBErrorCountByPCSState
shareDBErrorCountByPCSState
_privateDBErrorCountByPCSState
_shareDBErrorCountByPCSState
_error
_lastFailureDate
T@"NSError",R,N,V_error
T@"NSDate",R,N,V_lastFailureDate
T@"NSDictionary",R,N,V_privateDBErrorCountByPCSState
T@"NSDictionary",R,N,V_shareDBErrorCountByPCSState
rampNumberWithSession:
isSyncBlocked
syncUpAnalyticsError
syncDownAnalyticsError
internalZoneSyncDownAnalyticsErrors
internalZoneSyncUpAnalyticsErrors
localeWithLocaleIdentifier:
setLocale:
setDateFormat:
timeZoneForSecondsFromGMT:
setTimeZone:
longLongAtIndex:
_injectionForAnalyticsServiceCode:
initWithDomain:code:userInfo:
dateFromString:
member:
_fillTransferFailure:withRowID:atDate:session:
delayForStuckThrottle
doubleAtIndex:
enumeratePrivateClientZones:
getRampNumberForSession:
dictionaryForErrorsByZone:wantPrivateZone:
isPCSChained
newCASyncUpZoneErrorEventWithError:pcsChained:zoneMangledID:
newCASyncDownErrorEventWithError:pcsChained:zoneMangledID:
intValue
newCAUploadErrorEventWithError:pcsChained:sharedZone:count:
brc_isExpectedErrorForTelemetry
newCADownloadErrorEventWithError:pcsChained:sharedZone:count:
newCASyncUpItemErrorEventWithError:pcsChained:sharedZone:count:
removeObjectsInRange:
newCASyncUpZoneErrorCountEventWithCount:
newCASyncDownErrorCountEventWithCount:
newCASyncUpItemErrorCountEventWithCount:
newCAUploadErrorCountEventWithCount:
newCADownloadErrorCountEventWithCount:
newCATotalErrorCountEventWithCount:
newQBSDirFaultsCountEvent:serverTruthDirFaultCount:serverTruthDirCount:timeSinceLogin:serverTruthTotalItemsCount:zonesNeverFullSync:
totalZoneCount
blockedZonesCount
clientTruthTotalItemsCount
zonesNeverFullSync
syncUpErrorsByMangledID
syncDownErrorsByMangledID
syncUpFailures
uploadFailures
downloadFailures
dsid
rampNumber
_syncUpErrorsByMangledID
_syncDownErrorsByMangledID
_rampNumber
_syncUpFailures
_uploadFailures
_downloadFailures
_totalZoneCount
_blockedZonesCount
_clientTruthTotalItemsCount
_zonesNeverFullSync
TQ,R,N,V_totalZoneCount
TQ,R,N,V_blockedZonesCount
TQ,R,N,V_clientTruthTotalItemsCount
TQ,R,N,V_serverTruthTotalItemsCount
TQ,R,N,V_zonesNeverFullSync
T@"NSDictionary",R,N,V_syncUpErrorsByMangledID
T@"NSDictionary",R,N,V_syncDownErrorsByMangledID
T@"NSSet",R,N,V_syncUpFailures
T@"NSSet",R,N,V_uploadFailures
T@"NSSet",R,N,V_downloadFailures
T@"NSString",R,N,V_dsid
T@"NSString",R,N,V_rampNumber
TQ,R,N,V_clientTruthDirFaultCount
TQ,R,N,V_serverTruthDirFaultCount
TQ,R,N,V_serverTruthDirCount
TQ,R,N,V_timeSinceLogin
T@"NSArray",R,N
brc_errorItemChanged
incrementErrorRetryCountWithSession:
fp_obfuscatedPath
itemByItemGlobalID:
containsPendingUploadOrSyncUp
brc_errorNotInCloud:
newShareAliasInSharedFolderEventWithZoneMangledID:
newFolderSharingCountMismatchEventWithCount:zoneMangledID:
_finishReport:session:completionHandler:
initWithURL:
itemCountDifference
zoneMangledID
_failureRetryCount
_fileURL
_containsSharedToMeItem
_wasAbleToRun
_itemCountDifference
_zoneMangledID
Tq,R,N,V_itemCountDifference
TB,R,N,V_wasAbleToRun
T@"BRMangledID",R,N,V_zoneMangledID
cleanupApfsSnapshotWithMountFD:
br_isPOSIXErrorCode:
hasEnoughSpaceForDevice:
_finishReport:session:temporaryDBURL:mountFD:completionHandler:
checkResourceIsReachableAndReturnError:
mobileDocumentsURL
wrapperWithURL:readonly:error:
syncConsistencyFileChecksumRate
syncConsistencyPackageChecksumRate
syncConsistencyMaxEventsCount
checkTreeConsistencyWithDatabaseURL:rootURLWrappers:fileChecksumRatePerThousand:packageChecksumRatePerThousand:maxEventsCount:reply:
_telemetryErrorEvents
_telemetryWarningEvents
T@"NSArray",R,N,V_telemetryErrorEvents
T@"NSArray",R,N,V_telemetryWarningEvents
checkRecursiveChildItemCountFromURLWrapper:qualityOfService:reply:
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
initWithServiceName:
setRemoteObjectInterface:
setMinimumOSName:
setRecordId:
hasMinimumOSName
hasRecordId
minimumOSName
recordId
_minimumOSName
_recordId
T@"NSString",&,N,V_minimumOSName
T@"NSString",&,N,V_recordId
zoneHealthSyncContext
brc_isResetError
keyEnumerator
getOrCreateAppLibraryAndPrivateZonesIfNecessary:
objectEnumerator
initWithRecord:
privateClientZoneByID:
initWithCKInfo:state:
syncedDownZoneHealthState:
zoneHealthWasReset
receivedUpdatedZoneHealthServerChangeToken:requestID:
finishedZoneHealthSyncDownWithRequestID:error:
brc_zoneHealthZoneID
zoneHealthSyncDownBatchRecordsCount
initWithRecordZoneIDs:optionsByRecordZoneID:
setConfiguration:
setSourceApplicationBundleIdentifier:
receivedUpdatedServerChangeToken:requestID:
brc_isCloudKitErrorImplyingZoneNeedsCreation
completedZoneHealthSyncDownWithRequestID:error:
_changeToken
_recordsByID
_deletedRecordIds
br_isPackageRoot
br_representableDirectoryName
iworkShareableExtensions
br_pathExtension
lowercaseString
stringFromItemID:context:
brc_hexadecimalString
deleteCharactersInRange:
descriptionWithContext:origName:
boolAtIndex:
decodeObjectOfClass:forKey:
decodeInt32ForKey:
decodeInt64ForKey:
decodeBoolForKey:
encodeObject:forKey:
encodeInt32:forKey:
encodeInt64:forKey:
encodeBool:forKey:
checkStateWithItemID:logToFile:
initWithStatInfo:
br_displayFilenameWithExtensionHidden:
stageRegistry
loadXattrBlobForSignature:error:
_aliasTargetMangledID
_aliasTargetItemID
_updateAliasTarget:
representableName
iWorkShareable
initFromResultSet:pos:
initWithCoder:
encodeWithCoder:
check:logToFile:
isExecutable
isWritable
displayName
isEtagEqual:
setCreatorRowID:
lazyXattrWithSession:
setState:
setType:
setMode:
setBirthtime:
setParentID:
setHiddenExt:
xattrSignature
setXattrSignature:
setLogicalName:
aliasTarget
trashPutBackPath
setTrashPutBackPath:
trashPutBackParentID
setTrashPutBackParentID:
_parentID
_state
_type
_mode
_birthtime
_logicalName
_aliasTarget
_hiddenExt
_xattrSignature
_lazyXattr
_trashPutBackPath
_trashPutBackParentID
_creatorRowID
T@"BRCItemID",&,N,V_parentID
Tc,N,V_state
Tc,N,V_type
Tc,N,V_mode
T@"NSString",&,N,V_logicalName
Tq,N,V_birthtime
hiddenExt
TB,N,GisHiddenExt,V_hiddenExt
T@"NSData",&,N,V_xattrSignature
T@"BRMangledID",R,N
T@"NSString",R,N,V_aliasTarget
T@"NSString",&,N,V_trashPutBackPath
T@"BRCItemID",&,N,V_trashPutBackParentID
T@"BRCUserRowID",&,N,V_creatorRowID
_hasLastEditorDeviceRowID
_hasLastEditorRowID
lastEditorDeviceRowID
lastEditorUserIdentityWithDB:
stringFromByteCount:context:
brc_signatureIsPendingPlaceHolder
br_qtnFlags
brc_signatureIsPackage
decodeObjectOfClasses:forKey:
initWithVersion:
replaceOccurrencesOfString:withString:options:range:
originalPOSIXName
UTIForExtension:
minFileSizeForThumbnailTransfer
canMostRecentClientsGenerateThumbnailsForUTI:
TB,R
setLastEditorDeviceRowID:
setLastEditorRowID:
lastEditorDeviceDisplayNameWithDB:
lastEditorDisplayNameWithDB:
displayNameWithoutExtension:
hasThumbnail
additionNameForItemID:zoneID:
isSmallAndMostRecentClientsGenerateThumbnails
setOriginalPOSIXName:
setSize:
thumbnailSize
setThumbnailSize:
thumbnailSignature
setThumbnailSignature:
contentSignature
setContentSignature:
conflictLoserEtags
setConflictLoserEtags:
setEditedSinceShared:
lastEditorDeviceOrUserRowID
setLastEditorDeviceOrUserRowID:
lastEditorDeviceName
setLastEditorDeviceName:
quarantineInfo
setQuarantineInfo:
_originalPOSIXName
_size
_thumbnailSize
_thumbnailSignature
_contentSignature
_quarantineInfo
_conflictLoserEtags
_editedSinceShared
_lastEditorDeviceOrUserRowID
_lastEditorDeviceName
Tq,N,V_mtime
T@"NSString",&,N,V_originalPOSIXName
Tq,N,V_size
Tq,N,V_thumbnailSize
T@"NSData",&,N,V_quarantineInfo
T@"NSData",&,N,V_contentSignature
T@"NSData",&,N,V_thumbnailSignature
T@"NSSet",&,N,V_conflictLoserEtags
T@"NSNumber",&,N,V_lastEditorDeviceOrUserRowID
T@"NSNumber",&,N
T@"NSString",&,N,V_lastEditorDeviceName
T@"BRCUserRowID",&,N
T@"NSNumber",&,N,V_editedSinceShared
isValidSignature:
brc_hexadecimalStringWithBytes:length:
updateWithBytes:length:
dataByFinishingSignature
brc_signatureIsValid
brc_signature
brc_pendingPlaceholderForPackage:
T@"NSData",R,N
initWithBytes:length:
setPath:
setSymlinkContent:
setSignature:
typeAsString:
StringAsType:
hasPath
setHasMtime:
hasMtime
setIsWritable:
setHasIsWritable:
hasIsWritable
setIsExecutable:
setHasIsExecutable:
hasIsExecutable
hasSymlinkContent
hasQuarantineInfo
hasSignature
setXattrIndex:
setHasXattrIndex:
hasXattrIndex
symlinkContent
signature
xattrIndex
_xattrIndex
_path
_signature
_symlinkContent
_isExecutable
_isWritable
Ti,N,V_type
T@"NSString",&,N,V_path
TB,N,V_isWritable
TB,N,V_isExecutable
T@"NSString",&,N,V_symlinkContent
T@"NSData",&,N,V_signature
Tq,N,V_xattrIndex
setAssertionQueue:
latestEventID
streamUUID
rootID
initWithLatestEventID:streamUUID:rootID:
assertionQueue
loadFromClientStateInSession:options:
setLatestEventID:
setStreamUUID:
setRootID:
_streamUUID
_latestEventID
_rootID
T@"NSUUID",&,N,V_streamUUID
TQ,N,V_latestEventID
TQ,N,V_rootID
weakToStrongObjectsMapTable
registerQueryWithAliases:isRecursive:
unregisterQueryWithAliases:isRecursive:
initWithDocIDNumber:
unregisterPipeAsWatcher:
initWithXPCReceiver:client:manager:startingRank:
setDelegate:
initWithReceiver:manager:startingRank:
processProgressUpdates:
addNotification:asDead:
br_sharedProviderManagerWithDomainID:
signalEnumeratorForContainerItemIdentifier:completionHandler:
processUpdates:withRank:
itemByRowID:
triggerNotificationIfNeeded
_queueAdditionalUpdates
_dispatchUpdatesToPipesWithRank:
invalidateIfWatchingAppLibraryIDs:
delegate
invalidateReceiverIfWatchingAppLibraryIDs:
isWatchingGlobalItemID:
initWithAccountSession:
hasActiveAliasWatchers
registerAppLibraries:forFlags:
unregisterAppLibraries:forFlags:
hasWatcherForDocumentID:
registerPipe:asWatcherForFileObjectID:
getPipeWithXPCReceiver:client:reply:
pipeWithReceiver:
queueProgressUpdates:
queueUpdate:
fetchLastFlushedRankWithReply:
invalidatePipesWatchingAppLibraryIDs:
pipeDelegateInvalidated:
invalidatePipeReceiversWatchingAppLibraryIDs:completionBlock:
hasWatcherMatchingGlobalItemID:
_pipes
_cacheQueue
_notifs
_transferCache
_client
_activeAliasQueries
_additionalUpdatesItemRowID
_previousMaxRank
_watchersByFileObjectID
_fileObjectIDByWatcher
initWithShareMetadatas:
setPerShareCompletionBlock:
setAcceptSharesCompletionBlock:
acceptShareCompletionBlock
initWithShareMetadata:syncContext:
setAcceptShareCompletionBlock:
_shareMetadata
_acceptShareCompletionBlock
T@?,C,N,V_acceptShareCompletionBlock
contentsRecordID
initWithRecordIDs:
setFetchRecordsCompletionBlock:
initWithDocumentItem:
setRecordID:
T@"CKRecordID",&,N,V_recordID
br_isAbsolutePath
br_pathRelativeToPath:
roots
root
_initWithPath:relativeToRoot:
initWithFileID:root:session:
setWithObject:
initWithFileID:session:
resolveMustExist:error:
isInPackage
isPackageRoot
isRoot
basePath
logicalURLWithLogicalName:
isResolved
relativePath
initWithDocID:
initWithRelativePath:
isFileWithFinderInfoAliasBit
resolveAndKeepOpenMustExist:error:
br_isInPackage
br_pathOfPackageRoot
initWithAbsolutePath:session:
br_pathRelativeToPackageRoot
pathOfPackageRoot
itemScope
resolvePathAdditionalMetadata:appLibrary:
setAppLibrary:
_shouldKeepBasePathOpenWithoutOpenedFD
_resolveRootWhenExists:
_fixupRelativePath
_resolvePathTypeAndContainer
initWithRelpath:
br_fileSystemRepresentation
pathComponents
reverseObjectEnumerator
lastObject
removeLastObject
_shouldKeepBasePathOpen
_resolveBasePath:
_resolveWhenExists
_resolveWhenDoesntExist
brc_isBlacklistedPackageExtension
pathRelativeToPackageRoot
_resolveSymlinkRelativeTo:path:
performOnOpenFileDescriptor:error:
compare:options:
maxRelativePathDepth
br_isExcludedWithMaximumDepth:
shouldFixupBundleBitOnPackages
extensionsSkippingBundleBitFixup
resolveAndKeepOpenMustExist:allowResolveInPkg:error:
_resolveAndKeepOpenMustExist:allowResolveInPkg:error:
pathRelativeToRoot
isEqualToRelativePath:
physicalURL
maxXattrBlobSize
loadXattrsFromFD:withMaximumSize:error:
locateByFileID:session:
initWithRootPath:session:
initWithPath:appLibrary:
pathWithChildAtPath:
logicalURL
isBundle
isExcluded
isUnresolvableDueToProtection
hardlinkCount
isHiddenExtension
isHiddenFile
isBusy
fileType
hasFinderTags
refreshFromPathMustExist:
refreshPathTypeAndContainer
flock:
performOnOpenParentFileDescriptor:error:
bookmark
xattrs
sharedItemBookmark
itemSyncPausedByBundleID
itemSyncPausedExpireTS
parentHash
_roots
_absolutePath
_relativePath
_basePath
_bookmark
_generationID
_finderInfo
_nlink
_parentFileID
_documentID
_fsGenerationID
_flags
_itemScope
_isExcluded
_isInPackage
_isBundle
_isPackageRoot
_readFault
_hasFinderTags
_isBusy
_hasFinderInfoAliasBit
_isBRAlias
_qtnResolved
_xattrsResolved
_sharedBookmarkResolved
_openedProtected
_unresolvableDueToProtection
_itemSyncPausedByBundleIDResolved
_itemSyncPausedExpireTSResolved
_openRefCount
_mutex
_xattrs
_sharedItemBookmark
_itemSyncPausedByBundleID
_itemSyncPausedExpireTS
T@"BRCAppLibrary",&,N,V_appLibrary
TS,N,V_type
TC,N,V_itemScope
TI,R,N
Ti,R,N
Tq,R,N
T@"BRCGenerationID",R,N
T@"BRCRelativePath",R,N
T@"NSURL",R,N
T@"BRCBookmark",R,N
T@"NSData",R,N,V_quarantineInfo
T@"NSData",R,N,V_xattrs
T@"NSString",R,N,V_sharedItemBookmark
T@"NSString",R,N,V_itemSyncPausedByBundleID
T@"NSNumber",R,N,V_itemSyncPausedExpireTS
captureLogsForOperationType:ofSubtype:forError:
setOperationType:
hasOperationType
setTotalTime:
setHasTotalTime:
hasTotalTime
setRecordsFetched:
setHasRecordsFetched:
hasRecordsFetched
setRecordsFetchedTotalMetadataSize:
setHasRecordsFetchedTotalMetadataSize:
hasRecordsFetchedTotalMetadataSize
setXattrsFetchedTotalSize:
setHasXattrsFetchedTotalSize:
hasXattrsFetchedTotalSize
operationType
totalTime
_totalTime
_operationType
T@"NSString",&,N,V_operationType
TQ,N,V_totalTime
TQ,N,V_recordsFetched
TQ,N,V_recordsFetchedTotalMetadataSize
TQ,N,V_xattrsFetchedTotalSize
rescheduleSuspendedJobsMatching:inState:
rescheduleAllItemsPendingMigration
_moveDown:index:
_moveUp:index:
_moveUpOrDown:index:
_shrink
initWithComparator:
check
removeFirstObject
firstObjectWeightChanged
objectWeightChanged:
_array
_comparator
_mutation
_objects
_count
TQ,R,N,V_count
dataWithBytes:length:
initWithTag:
checksummingOutputStreamWithTag:
hasSpaceAvailable
open
streamStatus
write:maxLength:
_ctx
_sig
_isOpen
initWithRecordsToSave:recordIDsToDelete:
setRecordIDsToDeleteToEtags:
setClientChangeTokenData:
_markItemsFailedSync
_syncUpRecordBatchWithModifiedRecords:deletedRecordIDs:recordIDToZoneMap:requestID:
learnCKInfosFromSavedRecords:isOutOfBandModifyRecords:
setModifyRecordsCompletionBlock:
prepareForSyncUpSideCarZone
didMarkSyncIdleForServerRank:zone:
_itemsNeedingSyncUpEnumerator
maxRecordCountInModifyRecordsOperation
nextObject
sideCarInfo
localDiffs
fakeSyncForItem:itemRank:
sideCarRecordID
sideCarRecordNameWithZone:
baseSideCarRecord
useShareReferenceOnSideCar
serializeSideCarInfo:filenameExtension:diffs:deadInServerTruth:
allocateNextRequestID
shouldPerformAnotherBatch
_shouldPerformAnotherBatch
_accountChangeHandler
stringFromErrorString:context:
descriptionForCKAccountStatus:dumpContext:
resumeIfNecessary
accountStatusWithCompletionHandler:
defaultCenter
_accountDidChange
addObserver:selector:name:object:
removeObserver:name:object:
initWithCKContainer:
_source
_ckContainer
_lastAccountStatus
_resumed
_cancelled
setZoneName:
setErrorDomain:
setErrorDescription:
setLastStep:
setReason:
setEventGroupUUID:
setCiconiaInvestigation:
setQbsInvestigation:
setQbsPerformance:
setBouncesInvestigation:
_errorCode
_bouncesInvestigation
_ciconiaInvestigation
_errorDescription
_errorDomain
_eventGroupUUID
_lastStep
_qbsInvestigation
_qbsPerformance
_reason
_zoneName
_hasForegroundClients
_isPCSChained
_sharedZone
hasZoneName
sharedZone
setSharedZone:
setHasSharedZone:
hasSharedZone
hasErrorDomain
errorDomain
errorCode
setErrorCode:
setHasErrorCode:
hasErrorCode
hasErrorDescription
errorDescription
hasLastStep
lastStep
hasItemID
hasReason
setHasNonDiscretionary:
hasNonDiscretionary
hasForegroundClients
setHasForegroundClients:
setHasHasForegroundClients:
hasHasForegroundClients
setIsPCSChained:
setHasIsPCSChained:
hasIsPCSChained
hasEventGroupUUID
eventGroupUUID
hasCiconiaInvestigation
ciconiaInvestigation
hasQbsInvestigation
qbsInvestigation
hasQbsPerformance
qbsPerformance
hasBouncesInvestigation
bouncesInvestigation
T@"NSData",&,N
T@"NSString",&,N
Tq,N
T@"AppTelemetryCiconiaInvestigation",&,N
T@"AppTelemetryQBSInvestigation",&,N
T@"AppTelemetryQBSPerformance",&,N
T@"AppTelemetryCiconiaBouncesInvestigation",&,N
startObservingNetworkReachabilityChanges
stopObservingNetworkReachabilityChanges
networkReachabilityDidChangeHandler
setNetworkReachabilityDidChangeHandler:
_networkReachabilityDidChangeHandler
T@?,C,N,V_networkReachabilityDidChangeHandler
setValue:
cStringUsingEncoding:
writeData:forTag:
loadXattrsFromDictionary:structuralBlob:contentBlob:
stringFromThrottleState:context:
hasWorkGroup
closed
postNotificationName:object:
defaultScheduler
initWithScheduler:name:
setWorkloop:
setEventHandler:
signal
matchingJobsWhereSQLClause
onlyActiveStuff
nowFromContext:
stringFromDueStamp:allowsPast:context:
descriptionForJobsMatching:ordering:additionalColumns:additionalValuesHandler:context:
describeInBuffer:aggregateOfJobsMatching:context:
computeStamps:forJobID:throttle:shouldBackoff:
signalWithDeadline:
columns
columnsValues
jobsDescription
nsecsToNextRetry:retryCount:now:
nsecsBeforeForgettingCounter
updateStamps:throttle:now:
setState:forJobsMatching:
checkIfHasWork
hasActiveWork
hasWork
setHasWork:
setHasActiveWork:
performFirstSchedulingAfterStartupInDB:
canScheduleMoreJobs
setHasWorkGroup:
setHasActiveWorkGroup:
initWithSession:name:tableName:
canRetryJobWithID:
haveActiveJobsMatching:
jobStateFor:
descriptionForJobsMatching:context:
aggregateDescriptionForJobsMatching:context:
postponeJobID:withThrottle:
insertOrUpdateJobID:throttle:withState:insertedSQLColumn:insertedSQLValues:updatedSQLValues:
setState:forJobID:
deleteJobsMatching:
resetBackoffForJobWithID:
deleteExpiredJobs
recoverAndReportMissingJobs
scheduleWithBatchSize:whereSQLClause:columns:actionHandler:
tableName
_schedulerSource
_schedulerWorkloop
_firstSchedulingAfterStartupDone
_hasActiveWork
_hasWork
_hasWorkGroup
_hasActiveWorkGroup
_tableName
TB,N,V_hasWork
TB,N,V_hasActiveWork
T@"NSObject<OS_dispatch_group>",&,V_hasWorkGroup
T@"NSObject<OS_dispatch_group>",&,V_hasActiveWorkGroup
T@"PQLNameInjection",R,V_tableName
T@"NSString",R,V_name
personaIdentifier
done
logName
itemsEnumeratorChildOf:withDeadItems:rankMin:rankMax:count:db:
itemsEnumeratorWithRankMin:rankMax:namePrefix:withDeadItems:shouldIncludeFolders:shouldIncludeOnlyFolders:shouldIncludeDocumentsScope:shouldIncludeDataScope:shouldIncludeExternalScope:shouldIncludeTrashScope:count:db:
notifsRank
rowNumber
gatherWithBatchSize:completion:
_popGatherReply
addDequeueCallback:
initWithNotificationPipe:appLibraries:startingRank:maxRank:withDeadItems:gatherReply:
gatheredChildrenItemGlobalID
setGatheredChildrenItemGlobalID:
_pipe
_gatherReply
_gatheringAppLibraries
_gatheringRankMin
_gatheringRankMax
_lastSentRank
_gatheringNamePrefix
_includesDeadItems
_gatheredChildrenItemGlobalID
T@"BRCItemGlobalID",&,N,V_gatheredChildrenItemGlobalID
watchedAncestorFilenameToItem
watchedAncestorFileObjectID
notificationPipe:willObserveAppLibrary:
isSandboxed
hasPrivateSharingInterfaceEntitlement
_initWithManager:startingRank:
connection
watchedAncestorItemGlobalID
br_isEqualToStringForHFS:isCaseSensitive:
setWatchedAncestorFilenameToItem:
setWatchedAncestorFileObjectID:
_registerAsWatcherIfNeeded
setOldWatchedAncestorItemGlobalID:
setWatchedAncestorItemGlobalID:
oldWatchedAncestorItemGlobalID
isDocumentScopePublic
br_downloadStatus
diffs
intersectSet:
appLibraryByID:
aliasByUnsaltedBookmarkData:
_prepareForSecondGatherWithRank:
_addIntraContainerUpdatesFromInterContainerUpdate:toArray:
_isInterestingUpdate:
_gatherIfNeededAndFlushAsync
_flushProgressUpdates
receiveProgressUpdates:reply:
isFolderOrAliasID
folderID
_processProgressUpdates:
notifBatchSize
dictionaryWithCapacity:
arrayWithCapacity:
isAppLibraryRoot
isCloudDocsRoot
containerItemForContainer:withRepresentativeItem:
processDequeueCallbacks
receiveUpdates:logicalExtensions:physicalExtensions:reply:
dequeue:block:
notifOverflowLimit
notifGatherUpTo
__flush
notificationPipe:didObserveAppLibrary:
documentsItemIDWithAppLibraryRowID:
fetchRecursiveDirectoryContentsIfNecessary:isUserWaiting:rescheduleApply:
notifyClient:whenFaultingIsDone:
intersectsSet:
_stopWatchingItems
watchScopes:trustedAppLibraryIDs:gatherReply:
_watchItem:options:gatherReply:
_receiver
_boostReply
_oldWatchedAncestorItemGlobalID
_watchedAncestorItemGlobalID
_watchedAncestorFileObjectID
_watchedAncestorFilenameToItem
_gatherer
_gatherGroup
_hasUpdatesInFlight
_volumeIsCaseSensitive
_pendingProgressUpdatesByID
_hasProgressUpdatesInFlight
_initialGatherMaxRank
_secondaryGatherMaxRank
_manager
_listOp
_watchKind
_watchItemOptions
_watchNamePrefix
_watchForBundleID
_externalAppLibraries
_watchedAppLibraries
_recursiveScopeListOps
_watchedAppLibraryIDs
_watchedAppLibrariesFlags
_delegate
T@"BRCItemGlobalID",&,V_oldWatchedAncestorItemGlobalID
T@"BRCItemGlobalID",&,V_watchedAncestorItemGlobalID
T@"BRFileObjectID",&,V_watchedAncestorFileObjectID
T@"NSString",&,V_watchedAncestorFilenameToItem
T@"BRCNotificationManager",R,N,V_manager
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"<BRCNotificationPipeDelegate>",W,N,V_delegate
watchScopes:appLibraryIDs:gatherReply:
entitledAppLibraryIDs
isRootContainerItem
itemByFileObjectID:
_triggerImmediateReadOfDocumentIfNeeded
watchItemsNamesPrefixedBy:inScopes:appLibraryIDs:gatherReply:
watchScopes:gatherReply:
boostPriority:
watchItemWithFileObjectID:options:gatherReply:
brc_booleanValueForKey:
_removeSubscriber:
isInSyncBubble
_displayDialogWithType:dict:options:userReplyBlock:
_logWrapUserReplyBlock:
_hideCurrentDialog
_updateDialogWithType:dict:userReplyBlock:
_localizationKey:forTypeOfShare:
share
brc_sharedRootDisplayName
hasSuffix:
substringToIndex:
brc_fixDocumentExtensionIfNeededForShareURL:
br_formattedNameWithNonBreakingSpaces
ownerIdentity
isFolderShare
brc_applicationName
bundleForClass:
_localizationKeyForOS:
_localizationKey:forOSAndTypeOfShare:
publicPermission
_displayDialogWithType:dict:userReplyBlock:
fetchFullNameAndFormattedUsernameOfAccountWithCompletionHandler:
localizedStringFromPersonNameComponents:style:options:
moveToFront
showJoinDialogForShareMetadata:session:reply:
showErrorSignInToiCloudForShareMetadata:reply:
showErrorTurnOniCloudDriveForShareMetadata:reply:
showErrorInstallNativeAppForShareMetadata:reply:
showErrorNativeAppDisabledByProfileForShareMetadata:reply:
showErrorReasonUnknownForShareMetadata:reply:
showErrorDeviceOfflineForShareMetadata:reply:
showErrorServerNotReachableForShareMetadata:reply:
showErrorItemUnavailableOrAccessRestrictedForShareMetadata:reply:
showErrorParticipantLimitReachedForShareMetadata:reply:
showErrorDocumentsAppNotVisibleForShareURL:reply:
_updateDialogWithType:dict:
_cfUserNotification
_displaySource
_nextDisplayBeginTime
_progressSubscriber
_dialogInfo
_computeSignature:
bookmarkDataWithContentsOfURL:error:
_validateSignatureWithFd:
unlinkAliasAtPath:
isEqualToAppLibrary:
resourceValuesForKeys:fromBookmarkData:
substringFromIndex:
rangeOfString:
initWithMangledString:
clientZoneByMangledID:
itemByDocumentID:
lookupForRelativePath:
br_preCacheBookmarkData:versionEtag:
bookmarkDataWithOptions:includingResourceValuesForKeys:relativeToURL:error:
_resolveTargetWithError:
_resolveDataWithError:
writeBookmarkData:toURL:options:error:
createName
containsItemID
targetServerZone
target
initWithTarget:owningAppLibrary:path:session:
resolveWithError:
writeUnderParent:name:error:
_bookmarkData
_target
_targetServerZone
_targetRelpath
_targetResolved
_dataResolved
_containsItemID
T@"BRCServerZone",R,N
T@"BRCLocalItem",R,N
updateWithImportObject:onlyContentDependentProperties:error:
waiterBlocks
_waiterBlocks
T@"NSMutableArray",R,N,V_waiterBlocks
handleExitSignal:
_initSignals
_setupVNodeRapidAging
serviceListener
anonymousListener
diskReclaimer
currentAccountHandler
getCurrentSessionMustFinishedLoading:
setUpSandbox
mainBundle
bundleIdentifier
initWithMachServiceName:
_haveRequiredKernelFeatures
localeDidChange
loadAccounts
_startXPCListeners
_startupAndLoadAccount
_setupCacheDelete
_finishStartup
setSkipOpenInApp:
initWithConnection:
setExportedInterface:
waitOnAccountResumedQueue
auditToken
initWithAuditToken:
setPrivilegesDescriptor:
setExportedObject:
dieOnInvalidate
setInterruptionHandler:
setInvalidationHandler:
endpoint
currentSession
validateItemsLoggingToFile:db:
validateStructureLoggingToFile:db:
exitWithCode:
utiCacheSize
setCountLimit:
null
isDaemonRunning
listener:shouldAcceptNewConnection:
waitForConfiguration
setUpAnonymousListener
nonPurgeableSizeForSession:givenPurgeableSize:
performWithSessionForVolume:action:
_setDoneXpcActivity:description:
registerShareAcceptOperation:forURL:
registerWaiterBlock:forShareURL:
selfCheck:
suspendIPCAcceptation
resumeIPCAcceptation
containerClass
setContainerClass:
disableAccountChangesHandling
setDisableAccountChangesHandling:
disableAppsChangesHandling
setDisableAppsChangesHandling:
forceIsGreedyState
setForceIsGreedyState:
_sigIntSrc
_sigQuitSrc
_sigTermSrc
_xpcListener
_tokenListener
_unitTestMode
_xpcListenersReadyQueue
_accountReadyQueue
_accountResumedQueue
_startupQueue
_serverAvailabilityNotifyToken
_accountLoaderQueue
_shareAcceptOperationsByToken
_shareAcceptWaitersByToken
_acceptWaiterTimer
_shareAcceptQueue
_disableAccountChangesHandling
_disableAppsChangesHandling
_containerClass
_forceIsGreedyState
_startupDate
TB,N,V_disableAccountChangesHandling
TB,N,V_disableAppsChangesHandling
TQ,N,V_forceIsGreedyState
T@"NSXPCListenerEndpoint",R,N
T@"NSDate",R,N,V_startupDate
T#,&,N,V_containerClass
sqliteBind:index:
newFromSqliteStatement:atIndex:
initShareIDWithShareableItem:
br_sharingMisc
brc_errorDocumentIsNotShared
arrayWithObjects:
encryptedValuesByKey
setPublicSharingIdentity:
setBaseToken:
fetchRootURLIfNecessaryAndFinishWithShare:
initWithItem:
shareID
setShareID:
recordIDNeedingFetch
setRecordIDNeedingFetch:
rootItemIDToLookup
setRootItemIDToLookup:
setClientZone:
_shareID
_recordIDNeedingFetch
_rootItemIDToLookup
_clientZone
T@"BRCItemID",&,N,V_rootItemIDToLookup
T@"BRCClientZone",&,N,V_clientZone
T@"CKRecordID",&,N,V_shareID
T@"CKRecordID",&,N,V_recordIDNeedingFetch
initWithIntID:zoneRowID:
intID
initWithRank:zoneRowID:
rank
rejectedRowID
serverItemRank
_setState:andApplyKind:forJobID:
applyThrottle
_rescheduleRank:inState:forZone:
shouldFixupTargetCZMAliases
br_stringByBackslashEscapingCharactersInString:
_rescheduleItemsParentedToItemGlobalID:flags:
writerApplyBatchSize
applySchedulerJobMaxRetriesBeforeAssert
_scheduleApplyJobWithID:zone:applyKind:
_handleWatchingFaults
serverItemByRank:
isRejected
isCoordinationPendingForItem:
serverChangesApplier
applyChanges:localItem:rank:zone:hasFinished:
applyCountToSignalFaultsLive
minusSet:
signalFaultingWatchersWithError:
writerMaxConcurrentIOs
totalCount
_writeCoordinationCount
serverRankByItemID:
lastInsertedRank
_addRanksUpToRank:inZone:
listedUpToRank:
lastSyncDownDate
didSyncDownRequestID:maxApplyRank:caughtUpWithServer:syncDownDate:
serverItemByItemID:
isLive
markRejectedItemRemotelyRevived
createApplyJobFromServerItem:localItem:state:kind:
newMissingApplyJobEventWithNumberMissing:
descriptionForServerItem:context:
descriptionForRejectedItem:context:
setState:forServerItem:localItem:
setState:forRank:zoneRowID:
rescheduleItemRank:zoneRowID:matchingState:
setState:andApplyKind:forServerItem:localItem:
setState:andApplyKind:forRank:zoneRowID:
resetBackoffForServerItem:
didCreateMissingParentID:zone:
didReparentOrKillItemID:parentItemID:zone:
didCompleteCrossZoneMigrationForAppLibrary:
rescheduleMissingTargetAliasesWithTarget:
repopulateJobsForZone:
monitorFaultingForZone:
stopMonitoringFaultingForZone:
startWriteCoordinationInAppLibrary:
endWriteCoordinationInAppLibrary:rowID:
didSyncDownZone:requestID:upToRank:caughtUpWithServer:
_coordinatedWriters
_clientZonesWatchingFaults
_applyCountReachedMax
evaluateWithObject:
throttleHashWithItemID:
_validateThrottleParams:
initWithName:andParameters:
matchesItem:nsecsToRetry:now:
predicate
setPredicate:
_predicate
T@"NSPredicate",&,N,V_predicate
setResourceValues:error:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
desiredBackupDataDirectoryForUserURL:
destinationDirectory
fileExistsAtPath:
databaseURL
initWithDatabaseURL:
initWithRelativePath:fileID:docID:genCount:isDirectory:
enumerateRootURL:usingBlock:error:
flushAndClose
URLByAppendingPathComponent:isDirectory:
enumerateURL:rootURL:usingBlock:error:
getResourceValue:forKey:error:
urlPropertiesToFetch
resourceValuesForKeys:error:
initWithUserURL:outputUserURL:
backUpWithCompletionBlock:
cleanOnDisk
userURL
setUserURL:
outputUserURL
setOutputUserURL:
setDestinationDirectory:
_userURL
_outputUserURL
_destinationDirectory
T@"NSURL",&,N,V_userURL
T@"NSURL",&,N,V_outputUserURL
T@"NSURL",&,N,V_destinationDirectory
isDesktopAppLibrary
isDocumentsAppLibrary
initFileURLWithPath:isDirectory:
isPrivate
appLibraryOrZoneName
updateWithPlist:
containerForMangledID:
_updateIsInCloudDocsZone
setIsInInitialState:
associateWithClientZone:offline:
removeForegroundClient:
addForegroundClient:
addAppLibrary:offline:
cancelFileCoordinators
forgetWatchedLockedFileIDsForAppLibrary:
startDownloadInTask:options:error:
_activateState:origState:
hasOptimizeStorageEnabled
evictInTask:options:error:
offline
postContainerListUpdateNotification
hasCompletedInitialSyncDownOnce
fetchPristineness
fetchTrashItems
zoneDidChangeMovedToCloudDocsState
wasMovedToCloudDocs
enumerateSharedClientZones:
shouldEvictUploadedItems
shouldAppLibraryBeGreedy
hasUbiquityClientsConnected
isGreedy
isEqualToMangledID:
transferSyncContextIfExists
hasActiveQueries
hasActiveRecursiveQueries
hasActiveAliasQueries
containerMetadataNeedsSyncUp
containerMetadataEtag
shortDescription
_unwrappedDescriptionWithContext:
forRead
freeFileCoordinationSlotsAfterDelayForRead:
initWithSession:forRead:doneHandler:
readerIOsCancelDelay
writerIOsCancelDelay
setRootFileID:
needsSyncUp
hasDeadChildren
clearStateBits:
clientChildCountWithParentID:db:
serverChildCountWithParentID:db:
didCreateDocumentScopedItem
fetchFullAppLibraryContents
serverItemByParentID:andLogicalName:
_resolveTargetSharedClientZonesWhenBecameForeground
transferSyncContext
_removeAllTargetSharedServerZonesWhenNoLongerForeground
metadataSyncContextIfExists
foregroundClients
_targetSharedServerZonesEnumerator
hasFetchedInitialApps
shouldSyncMangledID:
transferSyncContextForMangledID:createIfNeeded:
transferSyncContextForMangledID:
didReceiveHandoffRequest
_addTargetSharedServerZone:
isStillTargetingSharedServerZone:
itemIDByRowID:db:
itemByRowID:db:
_aliasAppLibraryTargetSQLPrefix
errorWithSqliteCode:andMessage:
setLastError:
object:
initAsDocumentsWithAppLibraryRowID:
_initAsLibraryRootWithAppLibraryRowID:
initWithZoneRootItemID:session:
fetchRootItemInDB:
fetchDocumentsDirectoryItem:
isCloudDocsZone
setIsInCloudDocsZone:
didChangeSyncStatusForContainerMetadataForContainer:
postContainerStatusChangeNotificationWithID:key:value:
syncedFolderType
supportsSpotlightIndexing
addClientUsingUbiquity:
removeClientUsingUbiquity:
activate
didUpdateDocumentScopePublic
enumerateChildrenOfItemGlobalID:sortOrder:offset:limit:db:
enumerateUserVisibleChildrenDirectoriesOfItemGlobalID:db:
cancelWriteCoordinatorForItem:
coordinatorForItem:forRead:
fsrootDidMoveToPath:
updateFromFSAtPath:
didFindLostItem:oldAppLibrary:
didRemoveDocumentsFolder
didCreateDataScopedItem
scheduleFullLibraryContentsFetch
hasDocumentsOrDirectory
hasUbiquitousDocuments
hasLocalChanges
documentSizeUsageWithDB:
documentCountWithDB:
integrityCheckBoosting
recomputeShouldEvictState
_addTargetSharedServerZoneForSharedItem:
_removeTargetSharedServerZoneIfNecessary:
itemIDByRowID:
liveAliasesEnumeratorTargetingThisAppLibrary
shouldSaveContainerMetadataServerside
documentsPath
fetchDocumentsDirectoryItem
rootItemGlobalID
setContainerMetadataEtag:
setContainerMetadataNeedsSyncUp:
scheduleContainerMetadataSyncUp
setIsOverQuota:
tracker
setZoneRowID:
setGenerationID:
setDefaultClientZone:
containerMetadataSyncRequestID
setContainerMetadataSyncRequestID:
rootQuotaUsage
setRootQuotaUsage:
_activeQueries
_activeRecursiveQueries
_pendingFileCoordinators
_XPCClientsUsingUbiquity
_dbRowID
_mangledID
_defaultClientZone
_activated
_targetSharedServerZones
_foregroundClients
_pristineFetchOp
_trashFetchOp
_needsSave
_containerMetadataNeedsSyncUp
_tracker
_zoneRowID
_appLibraryID
_containerMetadata
_containerMetadataEtag
_containerMetadataSyncRequestID
_rootQuotaUsage
T@"NSNumber",&,N,V_fileID
T@"NSNumber",&,N,V_generationID
T@"BRCPrivateClientZone",W,N,V_defaultClientZone
T@"<BRCAppLibraryDelegate>",&,N,V_delegate
T@"BRCAccountSession",&,N,V_session
T@"brc_task_tracker",R,N,V_tracker
T@"NSString",R,N,V_appLibraryID
T@"BRMangledID",R,N,V_mangledID
T@"BRCALRowID",&,N,V_dbRowID
T@"BRCZoneRowID",&,N,V_zoneRowID
T@"BRCPQLConnection",R,N,V_db
TB,N,V_needsSave
T@"BRCSyncContext",R,N
T@"NSMutableDictionary",R,N
TI,R,N,V_state
T@"BRContainer",R,N,V_containerMetadata
T@"NSString",&,N,V_containerMetadataEtag
TB,N,V_containerMetadataNeedsSyncUp
TQ,N,V_containerMetadataSyncRequestID
T@"NSNumber",&,N,V_rootQuotaUsage
incrementRetry
initWithThrottleHash:
retryCount
latestRetry
throttleHash
_scheduled
_retryCount
_latestRetry
TI,R,N,V_retryCount
Tq,R,N,V_latestRetry
Tq,R,N,V_throttleHash
doubleValue
retryBackoff:
isBlocking
_initialRetryCount
_finalRetryCount
_maximumElementCount
_minimumNsecsBetweenRetries
_maximumNsecsBetweenRetries
_nsecsBeforeForgettingCounter
T@"NSString",R,N,V_name
Tq,R,N,V_nsecsBeforeForgettingCounter
_cleanupStaleCounters:
throttleHashBytes:length:
_retryCounters
_retryHeap
initWithFSGenerationID:
_resolveParentBasedPropertiesWithParent:logicalName:
_resolveAgainstFileDescriptor:
computeUserVisibleStatusOfLiveItemWithParentVisible:parentIsNonDesktopRoot:parentScope:itemFilename:parentFilename:appLibrary:
initAsSymlinkWithTarget:parentItem:logicalName:error:
initWithURL:existingItem:quarantineInfo:error:
initWithURL:logicalName:quarantineInfo:parentItem:error:
parentItemGlobalID
fileURL
_parentItemGlobalID
_isDocumentsFolder
_isUserVisible
_sharingOptions
TB,R,N,V_isUserVisible
TQ,R,N,V_sharingOptions
TQ,R,N,V_fileID
TI,R,N,V_nlink
Tq,R,N,V_size
TI,R,N,V_fsGenerationID
T@"NSString",R,N,V_logicalName
T@"NSString",R,N,V_symlinkContent
T@"BRCItemGlobalID",R,N,V_parentItemGlobalID
T@"NSURL",R,N,V_fileURL
TC,R,N,V_itemScope
TB,R,N,V_isDocumentsFolder
initWithURL:packageRoot:error:
isEqualToDownloadJobIdentifier:
initWithDBRowID:etag:kind:
itemDBRowID
kind
_kind
_itemDBRowID
TQ,R,N,V_itemDBRowID
T@"NSString",R,N,V_etag
Ti,R,N,V_kind
contextIdentifier
integerAtIndex:
initWithSyncContext:kind:now:retryQueueKick:
nextDocumentItem
stageID
transferSize
transferQOS
_now
_retryQueueKick
initWithWorkloop:name:
initWithName:fairScheduler:
setCoalescingLeeway:
downloadSizeRefreshInterval
transferID
uuidAtIndex:
transferContextForServerZone:appLibrary:
downloadStream
progressForTransferID:operationID:
syncContextUsedForTransfers
downloadThrottle
forceSchedulingPendingInteractiveTransfers
setTrackChanges:
cleanupStagedDownloadWithID:forItemID:
requiresTwoPhase
learnStagedInfoFromDownloadStageID:error:
setDownloadError:
handleZoneLevelErrorIfNeeded:
brc_errorWithDomain:code:underlyingError:
brc_isCloudKitCancellationError
_bumpThrottleForDownload:throttle:
downloadRetryCountForFailure
_reportDownloadErrorForDocument:error:
brc_isCloudKitAssetFileModified
progress
downloadWillRetryProgressMaxCount
setProgressPublished:
updateDownloadThrottleForDocument:toState:
handleUnknownItemError
record
_sanitizeRecord:
diskSpaceRequiredToReturnToGreedyState
stringFromByteCount:showActualByteCount:suffix:context:
cancelTransferID:operationID:
popDownloadedBlockForItemID:
_cancelJobs:state:
_finishDownloadCleanup:
addAliasItem:toTransferWithID:operationID:
_hasLosersToDelete:serverItem:
createURLForDownloadWithStageID:name:
setItemClass:
initWithPBItem:forLocalItem:
saveToDBWithSession:
cancelAndCleanupItemDownload:kind:
_createDownloadingJobForItem:state:kind:etag:userInitiated:
shouldScheduleLosersEvictionForItem:
permanentStorageForItemAtURL:allocateIfNone:error:
removeAllAdditionsForNamespaces:completionHandler:
setLiveConflictLoserEtags:
latestVersion
isSubsetOfSet:
resolvedConflictLoserEtags
cancelAndCleanupItemDownload:kind:etag:
rescheduleJobsPendingWinnerForItem:
setWithSet:
enumeratorForAdditionsInNameSpace:withOptions:withoutOptions:ordering:
brc_parseMangledID:itemID:etag:session:
_br_markResolvedWithError:
scheduleLosersDownloadForItem:serverItem:purgeStaleEntries:applySchedulerState:
liveThumbnailSignature
removeAdditionsOnURL:error:
learnThumbnailSignatureFromLiveVersion:
associateThumbnailImagesDictionary:serializedQuickLookMetadata:withDocumentAtURL:error:
__itemAtURL:didChangeWithPurposeID:
readerScanBatchSize
itemsCount
initWithSyncContext:
_finishedDownload:syncContext:operationID:error:
setPerDownloadCompletionBlock:
initWithDocument:stageID:etag:
br_downloadThumbnails
addDownload:
_willDownload:operationID:
addBatchOperation:
allSyncContexts
inFlightSize
defaults
minimumDiskSpaceRequiredToDownload
minimumDiskSpaceRequiredToDownloadUserInitiated
availableDiskSpace
requestPurgeSpace
initWithDocument:stageID:
setProgress:
br_downloadUserInitiated
br_downloadOpportunistic
br_downloadOptimizeStorageOff
br_downloadUpdatedDocuments
_postponeLoserForWinner:etag:
initWithSyncContext:forNonLocalVersion:
addIndex:
initWithDocument:stageID:etag:isLoser:
storage
gsError
markLostClearGenerationID:backoffMode:
br_downloadConflictingVersions
unsignedIntegerAtIndex:
_sendThumbnailsBatch:sizeHint:maxRecordsCount:
_sendContentsBatch:sizeHint:maxRecordsCount:
_sendLosersBatch:sizeHint:maxRecordsCount:
_transferStreamOfSyncContext:didBecomeReadyWithMaxRecordsCount:sizeHint:priority:
brc_telemetryReportableErrorWithRecordName:
scheduleContentDownloadForItem:serverItem:userInitiated:
newMissingDownloaderJobEventWithNumberMissing:
deleteDownloadingJobForItem:
descriptionForItem:context:
_appLibraryForDownload:kind:operationID:
rescheduleJobsForPendingDiskSpaceWithAvailableSpace:
rescheduleJobsPendingFavoritesFetchInZone:
cancelAndCleanupItemDownloads:
addAliasItem:toDownloadingItem:
updateContentDownloadForMetaOnlyChange:fromEtag:toEtag:
sizeOfActiveDownloads
hasAdditionsToApplyForItem:serverItem:
makeContentLive:
evictLosersOnItem:atURL:applySchedulerState:
applyLosersToItem:serverItem:atURL:applySchedulerState:addedLosers:removedLosers:
hasThumbnailToApplyForItem:
scheduleThumbnailDownloadForItem:serverItem:applySchedulerState:
applyThumbnailToItem:serverItem:atURL:applySchedulerState:
transferStreamOfSyncContext:didBecomeReadyWithMaxRecordsCount:sizeHint:priority:completionBlock:
_clearDownloadErrorForDocument:
downloadsDeadlineScheduler
_fairScheduler
_activeDownloadsSize
_lastDownloadRefresh
_activeDownloadSizeRefreshInterval
_willRetryOperationProgress
_downloadsDeadlineScheduler
T@"BRCDeadlineScheduler",R,N,V_downloadsDeadlineScheduler
compare:
timeIntervalSince1970
stringFromItemAsString:context:
stringFromCount:showActualCount:suffix:isByteCount:context:
initWithFd:forceColor:
initWithFormat:arguments:
startStringForFgColor:bgColor:attr:
stringForReset
stringFromCount:context:
initWithDumper:
indentationBaseString
setIndentationBaseString:
dumpTrackedPendingDownloads
taskTracker
_indentation
_dumper
_nowDate
_liveDaemon
_onlyActiveStuff
_dumpTrackedPendingDownloads
_indentationBaseString
_taskTracker
T@"PQLConnection",R,N,V_db
T^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq},R,N,V_fp
T@"NSString",&,N,V_indentationBaseString
TB,N,V_liveDaemon
TB,N,V_onlyActiveStuff
TB,N,V_dumpTrackedPendingDownloads
T@"brc_task_tracker",&,N,V_taskTracker
stringWithCapacity:
initAsShareAcceptFaultWithName:mode:isDirectory:
initForPackage:
stageFaultForCreation:name:size:isPackage:
_updateInDB:diffs:
deleteShareAcceptationFault
stageShareAcceptationFaultWithName:
markNeedsTransformIntoNormalFault
initWithFilename:itemID:parentID:appLibrary:clientZone:sharingOptions:
asShareAcceptationFault
makeDirectoryInStageGatherFileID:generationID:error:
markStagedWithFileID:generationID:
scheduleReset:completionHandler:
defaultAppLibrary
clearSyncStateBits:
_cancelAllOperationsForReset
waitUntilFinished
sharedAppLibraryResetThrottle
appLibraryResetThrottle
_reset:completionHandler:
_finishedReset:completionHandler:
_performResetAndWantsUnlink:clientTruthBlock:completionBlock:
_performAfterResetServerAndClientTruthsAndUnlinkData:
_performAfterResetServerAndClientTruthsAndUnlinkDataAndPurgeTheZone:
resetServerTruth
removeDatabaseObjectsForZone:
syncUpScheduler
supportsKeepingClientItemsDuringReset
allItems
resetWhileKeepingClientItems
markForceRejected
asSharedToMeTopLevelItem
markForceNeedsSyncUp
itemsParentedToThisZoneButLivingInAnOtherZone
clearProblemReport
_performAfterResetServerAndClientSharedTruthsAndUnlinkData:
_performAfterResetServerAndClientPrivateTruthsAndUnlinkData:
deleteAllContentsOnServerWithCompletionBlock:
uploadStream
operations
_removeAllShareAcceptanceBlocks
dropIndexForClientZone:
syncState
willInitialSyncDownForClientZone:
scheduleResetServerAndClientTruthsForReason:
initWithRowID:type:
asString
cancelReset
scheduleReset:
forceMoveToCloudDocs
scheduleMoveToCloudDocs
shouldAutoMigrateToCloudDocs
serverZoneIsCreated
scheduleZoneMovesToCloudDocs:
fileURLWithPathComponents:
writeToURL:atomically:
initWithCacheDirPath:
stringByAppendingPathExtension:
br_stringByDeletingPathBounceNo:andPathExtension:
br_representableHFSFileNameWithBase:suffix:extension:makeDotFile:
lostStamp
setFilename:
br_sideFaultName
setFilename:forcePhysicalName:forceBouncedLogicalName:serverName:
brc_representableHFSFileNameWithSuffix:addedExtension:makeDotFile:
_markDead
_markLiveFromStageAsType:
parentItemIDOnFS
logicalNameWithoutLocalBounce
stagedFileIDForDB
_setParentID:
_setItemScope:
_setCKInfo:
_markClearedFromStage
_moveItemAsideWithUUIDString
_generatedBouncedLogicalFilenameWithBounceNumber:
_migrateTmpBouncedNameToLocalName
_bouncePhysicalNameToRepresentableName
_clearBouncedName
diffAgainstLocalInfo:
updateFilenameFromPath:
_markReserved
_markAlmostDead
updateAsAppLibraryRoot:
_markDeadAsSharedTopLevelItemWithDocumentsItemID:
_markFound
_markLostAddingBackoffWithMode:appLibrary:
_markStagedWithFileID:generationID:documentID:
_updateStatMeta:
_markLiveFromStageAsFault:
_clearFileID
_clearGenerationID
_updateStatMetaFromServer:
_updateStatAliasMeta:
tmpBouncedNo
processingStamp
rawBouncedLogicalName
setRawBouncedLogicalName:
localChangeCount
oldVersionIdentifier
_localChangeCount
_oldVersionIdentifier
_stagedFileID
_stagedGenerationID
_bouncedLogicalName
_processingStamp
_physicalName
_tmpBouncedNo
T@"NSString",&,N,V_bouncedLogicalName
TQ,R,N,V_localChangeCount
T@"NSString",R,N,V_oldVersionIdentifier
T@"NSNumber",R,N,V_documentID
T@"NSNumber",R,N,V_stagedFileID
TI,R,N,V_stagedGenerationID
T@"NSString",R,N,V_physicalName
T@"NSNumber",R,N,V_tmpBouncedNo
T@"NSNumber",R,N,V_processingStamp
isKnownByServerOrInFlight
checkIsInDocumentsScopeWithParent:
globalID:isStrictChildOfGlobalID:
parentItemOnFS
fileIDForUpload
maxSyncPathDepth
_refreshAppLibraryFromParent
isItemInSyncUpAndInFlight:
itemIDWithSQL:
isDirectoryWithPackageName
br_stringByDeletingPathBounceNo:
parentZoneOnFS
predictedAppLibrary
_recomputeUserVisibleAndItemScope
decodeIntegerForKey:
encodeInteger:forKey:
_initWithLocalItem:
_initFromPQLResultSet:session:db:error:
_initAsZoneRootWithZoneRowID:
parentsOfCZMFaults
isPausedFromSync
stripBirthtimeFromSyncUpMaskOnDocuments
createSyncUpJobForItem:inZone:
markLostWhenReplacedByItem:
maskForDiffsToSyncUpForZone:sideCarZone:whenClearing:
createSyncUpJob
deleteSyncUpJobsForItem:
_syncZoneRowIDs
isItemInSyncUpAndInFlight:inZone:
finishSyncUpForItem:inZone:success:
syncUpState
_updateAppLibraryPristineStatesAfterMarkingDead
_updateAppLibraryPristineStatesAfterCreationOrUpdate
_updateSyncUpSchedulerWithDiffs:
_updateSharedZoneBoostingWithDiffs:
wasMarkedDead
isMigratingToFPFS
isIdleOrRejected
deleteUploadingJobForItem:
needsInsert
isAlmostDead
needsOSUpgradeToSyncUp
_isInterestingUpdateForNotifs
_ascendItemHierarchyWithBlock:
insertObject:atIndex:
setOfAppLibraryIDsWithReverseAliases
setOfParentIDs
_sendNotificationIfNeededWithDiffs:regather:
isDocumentBeingCopiedToNewZone
nameComponentsAcceptUnknownUser:
_setOrRemoveSmartFolderSpotlightAttributeAt:
osNameRequiredToSync
osNameNeededToSyncUp
isDeadOrMissingInServerTruth
inFlightDiffsForItem:
markLostWithoutBackoff
_isInterestingUpdateForNotifsWithDiffs:
metadataSyncUpMask:
_deleteFromDB:keepAliases:offline:
allocateItemRowID
br_syncDownInitial
scheduleSyncDownForSideCarWithGroup:
_insertInDB:dbRowID:
_hasFieldChangesNotDiffed
bumpLocalChangeCount
_cheapCheckSavingItem
_isIndexable
dropItemWithFileObjectID:notifRank:itemIsLive:
serverAliasItemForSharedItem:db:
diffAgainstLocalItem:
computeItemScopeFromParentIsRoot:parentIsDocuments:parentScope:logicalName:
_updatePropagatedInfoIfNeeded
value
_computedUserVisibleStatusAtPath:
computeItemModeFromStatInfo:isPackage:
applySharingReadonlyACLsToFD:statInfo:version:clientZone:sharingOptions:
markForceUpload
_markNeedsSyncingUp
markRemovedFromFilesystemForServerEdit:
diffAgainstServerItem:
forceNeedsSyncUpWithoutDiffs
scheduleSyncUpForSideCar
markItemForgottenByServer
updateStructuralCKInfoFromServerItem:
updateVersionMetadataFromServerItem:preventVersionDiffs:
scheduleSyncDownForOOBModifyRecordsAck
isReadAndUploaded
prepareItemForSyncUp:inFlightDiffs:inZone:
isItemPendingSyncUp:
changeItemIDOnUnknownItem
learnItemID:serverItem:
scheduleSyncDownFirst
_markLostWhenReplacedByItem:backoffMode:
clearFromStage
parentItemIDInZone
_updatePropagatedInfoFromFSAtPath:
moveFromStageToGraveyard:forItemID:
brc_errorItemNotFound:
brc_errorCompatibilityIssue
extension
T@"BRCItemID",R,N
validateLoggingToFile:
isTopLevelSharedItem
isChildSharedItem
setSharingOptions:
T@"BRCItemGlobalID",R,N
T@"BRCStatInfo",R,N
T@"BRCUserRowID",R,N
T@"BRCAccountSession",R,N
T@"BRCClientZone",R,N
TQ,N
asFSRoot
isFromInitialScan
isInDocumentOrTrashScope
serverPathMatchItemID
physicalNameNeedsRename
logicalNameNeedsRename
inheritOSUpgradeNeededFromItem:
markNeedsOSUpgradeToSyncUpWithName:
_initWithServerItem:dbRowID:
initFromPQLResultSet:error:
initFromPQLResultSet:session:db:error:
fetchParentFileIDs
markForceNotify
setOrRemoveSpotlightAttributeAt:
_learnItemID:serverItem:
updateFromServerItem:
prepareForSyncUpInZone:
markLatestSyncRequestRejectedInZone:
markFound
markReserved
markNeedsDeleteWhenAlreadyDeadInServerTruth
moveAsideLocally
_removeSharedSpotlightAttributesIfNecessary
markRenamedUsingServerItem:toRelpath:logicalName:filename:origLogicalNameBeforeBounce:forContentApplyOnly:
markStagedWithFileID:generationID:documentID:
updateStatMetadataFromServerItem:
updateItemMetadataFromServerItem:appliedSharingPermission:
computedDestinationFilenameFromServerItem:
markLiveFromStageWithPath:
markMetadataLive
beginBounceAndSaveToDBWithBounceNumber:
markBounceFinished
markBounceFailed
bounceReservedItemWithBounceNumber:
bouncePhysicalNameToRepresentableName
bounceSourceItemWithServerLogicalName:bounceNumber:
needsReading
needsUpload
_parentZoneRowID
_ownerKey
_syncUpState
_orig
_localDiffs
_minimumSupportedOSRowID
_notifsRank
_knownByServer
_sideCarCKInfo
_serverPathMatchID
_resolvedPath
_forceDelete
_forceDeletedAlready
_forceNotif
T@"BRCAliasItem",R,N
T@"BRCDirectoryItem",R,N
T@"BRCDocumentItem",R,N
T@"BRCDirectoryItem<BRCFSRooted>",R,N
T@"BRCSymlinkItem",R,N
T@"BRCFinderBookmarkItem",R,N
T@"BRCLocalItem<BRCShareAcceptationFault>",R,N
T@"BRCLocalItem<BRCTopLevelShareable>",R,N
T@"BRCLocalItem<BRCSharedToMeTopLevel>",R,N
T@"BRCLocalItem",R,N,V_orig
TQ,R,N,V_dbRowID
TC,R,N
T@"NSDictionary",R,N
T@"NSMutableSet",R,N
T@"BRCLocalStatInfo",R,N,V_st
TI,R,N,V_syncUpState
TS,R,N
TQ,R,N,V_localDiffs
TQ,R,N,V_notifsRank
T@"NSError",R,N
T@"NSString",R,N,V_path
T@"BRCUserRowID",R,N,V_ownerKey
T@"BRCServerZone",R,N,V_serverZone
T@"BRCClientZone",R,N,V_clientZone
TQ,N,V_sharingOptions
initWithFD:sizeLimit:syncable:error:
xattrNamesCount
xattrNamesBegin
structuralXattrNamesCount
structuralXattrNamesBegin
contentXattrNamesCount
contentXattrNamesBegin
applyToFileDescriptor:error:
loadXattrsFromFD:structuralBlob:contentBlob:localBlob:withMaximumSize:error:
removeXattrsOnFD:includingContentRelated:error:
initWithBytes:length:encoding:
pointerValue
brc_getterForAttribute:
brc_attributesValues:localItem:
valueWithPointer:
brc_isCloudKitErrorRequiringAssetRescan
zoneUniqueItemIDStringWithSession:
fairClientDBScheduler
syncUpThrottle
minWait
updateForTime:
availableBudgetWithDefaults:
syncUpMinimalBudget
nextDateWithBudgetWithDefaults:
setComputeNextAdmissibleDateForScheduling:
_newSyncDeadlineSourceWithName:
_syncScheduleForContainersMetadata
containerMetadataMangledID
initWithMangledID:isSyncDown:
_syncScheduleForSharedDatabase
sharedDatabaseMangledID
_syncScheduleForZoneHealth
zoneHealthMangledID
_scheduleCrossZoneMovePCSPrep
_syncScheduleForSideCar
sideCarMangledID
initWithName:scheduler:
_updatePushTopicsRegistration
forcedSyncXPCActivity
br_syncDownPeriodic
schedulePeriodicSyncIfNecessaryInGroup:
workloop
syncDeadlineSource
_unscheduleClientZone:
_scheduleUpdatePushTopicsRegistration
periodicSyncTimeInterval
serverChangeToken
initWithContainerScheduler:metadataChangeToken:zoneHealthChangeToken:sideCarChangeToken:
scheduleSyncDownForSharedDatabaseImmediately:
syncContextDidBecomeForeground:
syncContextDidBecomeBackground:
needsContainerMetadataSyncDown
needsSharedDBSyncDown
zoneHealthNeedsSyncUp
needsSyncDown
needsSync
markAccountMigrationComplete
setNeedsContainerMetadataSyncDown:
setCkGroup:
sharedDbSyncDownCoalesceNanoseconds
setNeedsSharedDBSyncDown:
setNeedsSyncDown:
setNeedsSync:
setNeedsPCSMigration:
scheduleIfPossibleWithCurrentTimestamp:signalSourceIfFailed:description:
br_syncDownAppLibraryMetadata
initWithSession:state:
br_syncUpAppLibraryMetadata
ckGroup
syncClientZoneThrottle
syncClientZoneErrorThrottle
brc_containerResetErrorForSharedZone:resetReason:
newZoneResetEventWithZoneMangledID:lastSyncDate:error:errorDescription:
containerMetadataWasReset
updateForError:
shouldFetchAnotherBatch
setHasCaughtUpAtLeastOnce:
sharedMetadataSyncContext
sharedDatabaseChangeState
br_syncUpAndDownShareDB
br_syncUpZoneHealth
br_syncDownZoneHealth
br_syncDown
br_syncUp
sideCarZoneWasReset
nextTry
isSyncDown
isPowerOK
stringByAppendingFormat:
uppercaseString
quotaAvailableForOwner:
currentDevice
debugDescriptionWithDefaults:
isDefaultOwnerOutOfQuota
_printSyncErrorIfNecessaryWithThrottle:context:error:now:
PCSMigrationComplete
fetchAccountWaitOperationWithAccountReady:
syncedDownZoneHealthRequestID:
delay
syncDownDelayForFailure
initWithError:pcsChained:
defaultsForMetadataContainer
defaultsForSharedZone
syncUpDelayForFailure
shouldPerformPCSMigration
br_zoneConsolidation
object
forceRefetchAppList
accountWaitOperation
serverPreferredPushEnvironmentWithError:
topic
publicToken
br_syncDownPushTriggered
scheduleSyncDownForContainerMetadataWithGroup:
scheduleSyncDownForZoneHealthWithGroup:
scheduleSyncDownWithGroup:
_connection:didReceiveIncomingMessage:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveToken:forInfo:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
didChangeSyncStatusForZoneHealthForContainer:
didInitialSyncDownForClientZone:
initWithAccountSession:pushWorkloop:
enablePushNotifications
closeContainers
setup
redoZonePCSPreperation
receivedUpdatedSideCarServerChangeToken:requestID:
refreshPushRegistrationAfterAppsListChanged
notifyAfterNextZoneHealthSyncDown:
initialSyncDownGroup
syncGroup
syncUpBudget
syncScheduler
containerMetadataPersistedState
zoneHealthSyncPersistedState
_containerMetadataSyncSource
_sharedDatabaseSyncSource
_zoneHealthSyncSource
_sideCarSyncSource
_pushSource
_environmentName
_pushToken
_pushConnection
_containerMetadataPersistedState
_containerMetadataSyncState
_containerMetadataSyncOperation
_containerMetadataSyncDownThrottle
_containerMetadataSyncUpThrottle
_lastContainerMetadataSyncDownError
_lastContainerMetadataSyncUpError
_sharedDBSyncState
_sharedDatabaseSyncOperation
_sharedDatabaseSyncDownThrottle
_lastSharedDatabaseSyncDownError
_zoneHealthPersistedState
_zoneHealthSyncState
_zoneHealthSyncOperation
_zoneHealthSyncDownThrottle
_zoneHealthSyncUpThrottle
_lastZoneHealthSyncDownError
_lastZoneHealthSyncUpError
_sideCarSyncPersistedState
_sideCarSyncState
_sideCarSyncOperation
_sideCarSyncDownThrottle
_sideCarSyncUpThrottle
_lastSideCarSyncDownError
_lastSideCarSyncUpError
_periodicSyncOperation
_lastPeriodicSyncDate
_migrateZonePCSOperation
_migrateZonePCSSource
_nextZoneHealthSyncDownBarriers
_initialSyncDownGroup
_syncGroup
_syncUpBudget
_syncScheduler
T@"NSObject<OS_dispatch_group>",R,N,V_initialSyncDownGroup
T@"NSObject<OS_dispatch_group>",R,N,V_syncGroup
T@"BRCSyncBudgetThrottle",R,N,V_syncUpBudget
T@"BRCDeadlineScheduler",R,N,V_syncScheduler
T@"BRCContainerMetadataSyncPersistedState",R,N,V_containerMetadataPersistedState
T@"BRCZoneHealthSyncPersistedState",R,N,V_zoneHealthPersistedState
T@"BRCSideCarSyncPersistedState",R,N,V_sideCarSyncPersistedState
cachedCurrentUserRecordName
isEquivalentToSignature:
hasContentSignature
isEqualToData:
contentDiffersWithSignature:
versionIdentifier
hasOldVersionIdentifier
contentVersion
metadataVersion
brc_errorDocumentIsNotSharedAtURL:
_clearSignatures:isPackage:
archivedDataWithRootObject:requiringSecureCoding:error:
isPackageObj
sizeObj
diffAgainstLocalVersion:
initWithServerVersion:
shouldRecreateUploadJobGivenDiffs:
isMissingUploadsWithDiffs:isDocumentSyncPaused:isDocumentResumingSync:
updateServerFieldsFromVersion:
versionSignature
uploadedAssets
setUploadedAssets:
setUploadError:
prevZoneGlobalID
setPrevZoneGlobalID:
setOldVersionIdentifier:
_uploadedAssets
_uploadError
_prevZoneGlobalID
T@"CKRecord",&,N,V_uploadedAssets
T@"NSError",&,N,V_uploadError
T@"BRCItemGlobalID",&,N,V_prevZoneGlobalID
T@"BRFieldContentSignature",R,N
T@"NSString",&,N,V_oldVersionIdentifier
initWithAliasUUID:
brc_collaborationIdentifierWithCachedCurrentUserRecordName:
nonEvictableExtensions
nonAutoEvictableExtensions
autoEvictableUTIs
nonAutoEvictableUTIs
isDocumentAutomaticallyEvictableWithExtension:
hasLocalContent
isDocumentAutomaticallyEvictableWithName:
minAutomaticallyEvictableFilesize
isCloudSyncTCCDisabled
shouldBeGreedyExtensions
shouldDocumentBeGreedyWithName:
maximumDocumentAgeToBeGreedy
blacklistedThumbnailExtensions
shouldHaveThumbnail
wantsContentForThumbnail
queryItemStatus
reverseAliasEnumeratorWithUnsaltedBookmarkData:session:
anyReverseAliasWithUnsaltedBookmarkData:inAppLibrary:
wantsThumbnail
makeSideFaultInStageGatherFileID:generationID:documentID:properties:inAppLibrary:forCreation:error:
updateDesiredVersionWithServerItem:diffs:options:needsSave:
contentsRecordIDInZoneID:
serverName
updateContentsCKInfoAndDeviceIDFromServerItem:
initWithServerVersion:serverName:
setOptions:
stageFaultForCreation:serverItem:
didFlushStagedFileID:
isResumingSync
br_isCloudDocsErrorCode:
markNeedsReading
removeLiveConflictLoserEtag:
addResolvedConflictLoserEtag:
markLiveAsFault
_insertTombstoneForPreviousZoneGlobalID
hasFileIDForUpload
reIngestFromFileProvider
clearVersionSignatures:isPackage:
isRereferencedAssetUpload
parentItemIDOnServer
revertEtagsForOldZoneTombstone
_markAsDeadTombstoneWithPreviousGlobalID
existsByItemID:
clearCrossZoneMoveEtag
markCrossZoneMoved
cancelAndCleanupItemUpload:
setState:forItem:
uploadItem:
brc_isCloudKitOutOfQuota
brc_strippedError
conflictLoserState
generationIDForUpload
_updateUploadJobIfNeededWithDiffs:
_updateRecursivePropertiesInDB:dbRowID:diffs:
downloadTrackers
_nukePackageItemsFromDB:
initWithItemDBRowID:zoneRowID:
reverseAliasEnumerator
targetMovedToTrashOrDeleted
updateOnDiskWithAliasTarget:forServerEdit:
anyReverseAliasInAppLibrary:
targetMovedToThisAppLibrary
_updateReadThrottleIfNeededForRowID:forCreation:
didUpdateDocument:
_needsSyncBubbleRecomputeForError:origError:
recomputeAllItemsDidUploadState
brc_isEverRetriable
didDeleteDocument:
popOnDiskBlockForItemID:
updateDesiredVersionWithServerItem:options:needsSave:
brc_errorDocumentEvicted
brc_errorItemAlreadyPausedFromSyncByBundleID:
maxPauseFileTimeout
numberWithDouble:
autoResumeSyncTimerScheduler
brc_errorItemNotPausedFromSync
autoResumeSyncBatchSize
resumeSyncForBundleID:dropLocalChanges:error:
reverseAliasEnumeratorWithRelativePath:
anyReverseAliasInAppLibrary:toRelativePath:
nextPausedDocumentBatchEnumeratorWithBundleID:fromRowID:batchSize:session:db:
autoResumeSyncPausedDocumentsOnTimeoutWithSession:
aliasItemID
isAutomaticallyEvictable
isVisibleIniCloudDrive
shouldBeGreedy
shouldTransferThumbnail
clearDesiredVersion
forceiWorkConflictEtag:
forceVersionConflictByClearkingCKInfo
forceiWorkSharingInfoResend
appDidResolveConflictLoserWithEtag:
markUploadedWithRecord:
markOverQuotaWithError:
markCrossZoneMovedForServerAssetCopyWithParentItem:path:
contentRecordNeedsForceAllFieldsWhenDeadInServerTruth:
resumeSyncComplete
pauseFromSyncWithTimeout:forBundleID:error:
shouldAutomaticallyDownloadThumbnail
setLiveThumbnailSignature:
syncPausedByBundleID
syncPausedExpireTS
_currentVersion
_desiredVersion
_syncPausedByBundleID
_syncPausedExpireTS
_shouldAutomaticallyDownloadThumbnail
_liveConflictLoserEtags
_resolvedConflictLoserEtags
_fileIDForUpload
_generationIDForUpload
_liveThumbnailSignature
T@"BRCAliasItem",R,D,N
T@"BRCDirectoryItem",R,D,N
T@"BRCLocalVersion",R,N,V_currentVersion
T@"BRCDesiredVersion",R,N,V_desiredVersion
T@"NSString",R,N,V_syncPausedByBundleID
T@"NSNumber",R,N,V_syncPausedExpireTS
T@"NSSet",&,N,V_liveConflictLoserEtags
T@"NSSet",R,N,V_resolvedConflictLoserEtags
TB,R,N,V_shouldAutomaticallyDownloadThumbnail
T@"NSData",&,N,V_liveThumbnailSignature
T@"NSNumber",R,N,V_fileIDForUpload
T@"BRCGenerationID",R,N,V_generationIDForUpload
T@"NSString",R,D,N
setTracker:
setQueue:
setStartTracingCode:
setEndTracingCode:
initWithTracker:queue:startCode:endCode:
sections
setSections:
startTracingCode
endTracingCode
_startTracingCode
_endTracingCode
_sections
T@"brc_task_tracker",&,N,V_tracker
TQ,N,V_sections
Ti,N,V_startTracingCode
Ti,N,V_endTracingCode
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
br_isCocoaErrorCode:
_willRequestCoordinationWithContext:url1:url2:
_didObtainCoordination:context:url1:url2:handler:fcHandler:error:
__coordinateReadingItemAtURL:options:purposeID:byAccessor:
__coordinateWritingItemAtURL:options:purposeID:byAccessor:
br_isInTrash
__coordinateWritingItemAtURL:options:writingItemAtURL:options:purposeID:byAccessor:
__itemAtURL:didReconnectWithPurposeID:
__itemAtURL:didDisappearWithPurposeID:
URLByDeletingLastPathComponent
br_addPhysicalProperty
__itemAtURL:didMoveToURL:purposeID:
itemDidChangeAtPath:logicalFilename:
itemDidAppearAtPath:logicalFilename:
itemDidDisappearAtPath:logicalFilename:
itemAtPath:origLogicalName:didBounceToNewLogicalName:
itemAtPath:logicalFilename:didMoveToPath:logicalFilename:hasContentUpdate:
scheduleReadOfItemAtURL:queue:taskTracker:accessor:
scheduleDeleteOfItemAtURL:queue:taskTracker:accessor:
scheduleUpdateOfItemAtURL:queue:taskTracker:accessor:
scheduleRenameOfItemAtURL:toItemAtURL:contentUpdate:queue:taskTracker:accessor:
isUpdateForReconnecting
setIsUpdateForReconnecting:
_startStamp
_url1
_url2
_doneHandler
_isUpdateForReconnecting
_forRead
TB,N,V_isUpdateForReconnecting
TB,R,N,V_forRead
brc_containerMetadataPropertiesData
brc_containerMetadataIconPaths
updateMetadataWithRecordData:iconPaths:
recordChangeTag
_updateContainerMetadataFromRecord:stripIcons:
hasCaughtUpAtLeastOnce
brc_containerMetadataZoneID
setOptimisticSubscribe:
arrayByAddingObject:
modifiedByDevice
validateContainerID:
getOrCreateAppLibraryAndPrivateZonesIfNecessary:appLibraryExists:
propertyListWithData:options:format:error:
isDocumentScopePublicWithProperties:mangledID:
brc_containerMetadataIconNames
hasIconWithName:
brc_cloudKitErrorForZone:
setRecordIDsToVersionETags:
newMissingAssetContentEventWithRecordID:
setPerRecordCompletionBlock:
recomputeAppSyncBlockState
skipContainerRecordsWithMissingAssets
_completedWithServerChangeToken:requestID:
performAfterFetchingAssetContents:
performAfterFetchingRecordChanges:
performAfterCreatingZoneIfNeeded:
_recordIDsForDesiredAssets
_desiredKeysForDesiredAssets
_recordIDsToVersionETagsForDesiredAssets
_containerIDsUpdated
_shouldFetchAnotherBatch
TB,R,N,V_shouldFetchAnotherBatch
progressPublished
secondaryRecordID
doneSize
setDoneSize:
setRecord:
secondaryRecord
setSecondaryRecord:
T@"CKRecordID",R,N
T@"BRCProgress",R,N
T@"CKRecord",&,N
initWithDocument:stageID:transferSize:
throttleID
_throttleID
_totalSize
_stageID
_progressPublished
_record
_doneSize
_progress
Tq,R,N,V_throttleID
T@"NSString",R,N,V_stageID
TQ,R,N,V_totalSize
T@"BRCProgress",R,N,V_progress
TB,N,V_progressPublished
TQ,N,V_doneSize
T@"CKRecord",&,N,V_record
uploadsDeadlineScheduler
addTransfer:
perUploadCompletionBlock
_uploadRecordsByID:
createCloudKitZoneWithGroup:completion:
setShouldOnlySaveAssetContent:
setSavePolicy:
setAtomic:
setProgress:forRecordID:
setPerRecordProgressBlock:
serverZoneByName:ownerName:
shouldRecreateServerZoneAfterError:
finishedTransferForRecord:recordID:error:
setPerUploadCompletionBlock:
initWithSyncContext:clientZone:
addItem:stageID:record:transferSize:
sendTransferCompletionCallBack:error:
mainWithTransfers:
actionPrettyName
_perUploadCompletionBlock
T@?,C,V_perUploadCompletionBlock
initWithPendingChangesStream:serverTruthCallback:clientTruthCallback:
serverTruthCallback
clientTruthCallback
_pendingChangesStream
_serverTruthCallback
_clientTruthCallback
T@"BRCPendingChangesStream",R,N,V_pendingChangesStream
T@?,R,N,V_serverTruthCallback
T@?,R,N,V_clientTruthCallback
metadataSyncContextForMangledID:
clientRequestID
lastSyncDownStatus
setLastSyncDownDate:
setLastSyncDownStatus:
setChangeToken:
setClientRequestID:
localizedDescription
isSharedZoneRoot
deserializeFolderSharingOptions:
forceDeltaInitialSync
parent
hasChainPCS
newChainedDirectoryMissingChainPCSEventWithZoneMangledID:itemIDString:
quotaUsed
recursiveChildCount
sharedByMeRecursiveCount
sharedAliasRecursiveCount
childCount
modificationDate
br_nameIsRepresentableOnHFS
deserializeFilename:basename:bounceno:extension:userInfo:error:
lastModifiedUserRecordID
br_emptyFilenameAlternativeName
_saveItemID:stat:serverMetrics:record:origName:base:no:ext:
brc_itemIDWithSession:error:
deserializeStatInfo:serverMetrics:itemID:session:error:
_saveItemID:stat:serverMetrics:record:error:
deserializeVersion:fakeStatInfo:clientZone:error:
deserializeiWorkSharingOptions:error:
creatorUserRecordID
brc_lastModifiedUserRecordNameWithCurrentUserRecordName:personNameComponents:
setNameComponents:
brc_isForcedPackageExtension
brc_addForcedPackageExtension:
_saveItemID:version:record:iWorkSharingOptions:
deserializeSymlinkTarget:error:
deserializeAliasInfo:serverZone:error:
currentUserParticipant
deserializeSharingOptions:error:
brc_isZoneRootRecordID
brc_isAppLibraryRootRecordID
_saveEditedDirOrDocStructureRecord:error:
_saveEditedAliasRecord:zonesNeedingAllocRanks:error:
_saveEditedSymlinkRecord:error:
_saveEditedFinderBookmarkRecord:error:
_saveEditedDocumentContentRecord:error:
_saveEditedShareRecord:error:
_saveEditedRecord:zonesNeedingAllocRanks:error:
_reportCantSaveProblem:record:
enumerateRecordsOfType:block:
_markItemDeadForRecordID:
_markShareIDDead:
structureRecordPrefixForItemType:targetZoneShared:
minLastUsedTime
setMinLastUsedTime:
_recomputeMinLastUsedTime
charAtIndex:
fetchParentChainIfNecessaryWithParentItemID:isUserWaiting:
_recoverFromCorruptShareOptionsWithItemType:itemID:parentID:sharingOptions:
setNextRank:
isSqliteErrorCode:
privateServerZoneByID:
_savePendingChangesEditedStructureRecordsIgnoringRecordIDs:zonesNeedingAllocRanks:pendingChangeStream:
_savePendingChangesEditedContentRecordsIgnoringRecordIDs:zonesNeedingAllocRanks:pendingChangeStream:
_savePendingChangesSharesIgnoringRecordIDs:zonesNeedingAllocRanks:pendingChangeStream:
dbMigrationBatchSize
directoryItemIDsCreatedLastSyncUp
_savePendingChangesDeletedRecordIDsIgnoringRecordIDs:pendingChangeStream:
_saveEditedStructureRecords:zonesNeedingAllocRanks:
_saveDeletedRecordIDs:
_saveEditedContentRecords:zonesNeedingAllocRanks:
_saveEditedShareRecords:deletedShareRecordIDs:zonesNeedingAllocRanks:
postNotificationName:object:userInfo:
activated
_collectTombstoneForRank:
enumerateIndexesUsingBlock:
didGCTombstoneRanks:
forgetChangeTokens
forgetClientRequestID
resetServerTruthAndDestroyZone:
_crossZoneMoveDocumentsToZone:
performBlock:whileRemovingPrivateClientZone:
newServerItemFromPQLResultSet:error:
T@"BRCZoneRowID",&,N
asPrivateZone
activateWithClientZone:offline:
deactivateFromClientZone
handleMovedZoneNames:
didSyncDownRequestID:serverChangeToken:editedRecords:deletedRecordIDs:deletedShareRecordIDs:allocRankZones:caughtUp:pendingChanges:
didListDirectoryChangesWithResults:pendingFetchChanges:
failedListItemIDs
collectTombstoneRanks:
deleteAllContentsOperation
saveQueryRecords:zonesNeedingAllocRanks:error:
itemsEnumeratorWithDB:
directDirectoryChildItemIDsOfParentEnumerator:
_metadataSyncContext
_failedListDirectoryOperations
_directoriesCreatedLastSyncUp
T@"BRCServerChangeState",R,V_changeState
T@"NSString",R,N,V_zoneName
T@"CKRecordZoneID",R,N
T@"BRCZoneRowID",&,N,V_dbRowID
setUpDatabaseWithError:
useBatchingWithDelay:changeCount:
docID
genCount
database
makeNextFlushFullSync
initWithPQLResultSet:
backupManifestEnumerator:
populateNewColumnsInDatabase:forRecord:basePath:
docIDForURL:
setForeignKeys:enabled:
negateIDs:
updateIDs:
clearStagedIDs:
fixUpBackupDetector:
fixUpClientState:
attachedDatabaseURL
populateNewColumnsWithBasePath:
attachDatabase:error:
updateAttachedDatabase
setDatabase:
setDatabaseURL:
setUrlPropertiesToFetch:
setAttachedDatabaseURL:
_database
_databaseURL
_urlPropertiesToFetch
_attachedDatabaseURL
T@"NSURL",&,N,V_databaseURL
T@"PQLConnection",&,N,V_database
T@"NSArray",&,N,V_urlPropertiesToFetch
T@"NSURL",&,N,V_attachedDatabaseURL
stringWithContentsOfFile:encoding:error:
br_pathRelativeToDirectory:
contentsOfDirectoryAtPath:error:
brc_stringByDeletingPathExtension
br_currentMobileDocumentsDirWithRefreshCache:
providerDomainWithID:error:
fetchRootItemForProviderDomain:completionHandler:
br_personaGroupDir
containerURLForSecurityApplicationGroupIdentifier:
brc_currentCachesDir
brc_locateUbiquityTokenSaltInOldAccountPath:
brc_groupDownloadStagePath
initWithRecordName:zoneID:
_directoryRecordNameWithSession:
directoryReferenceInZone:action:
documentStructureRecordIDInZoneID:
validatingDirectoryReferenceInZone:
pcsChainParentReferenceInZone:
pcsChainDocumentStructureReferenceInZoneID:
sideCarRecordIDWithZone:
shareAliasRecordIDFromTargetItemID:zone:hasDerivedShareAlias:
baseContentsRecord
structureRecordID
baseStructureRecord
serializeStatInfo:diffs:stageID:deadInServerTruth:shouldPCSChainStatus:
pluginFields
setPluginFields:
structureRecordBeingDeadInServerTruth:stageID:shouldPCSChainStatus:
setParent:
brc_SHA256
targetReferenceWithItemID:targetZone:isFolderShare:
serializeSystemFields:
folderRootStructureRecord
sqliteRepresentation
initWithSqliteRepresentation:
brc_isAppLibraryDocumentsRecordID
_itemIDWithLibraryRowID:session:
sharedServerZoneRowIDsByOwnerNamePrefix:
brc_appLibraryRootZoneName
brc_appLibraryDocumentsZoneName
brc_itemIDOfTargetWithLibraryRowID:session:
brc_itemType
unarchivedObjectOfClass:fromData:error:
_deserializeValue:forKey:encrypted:expectClass:allowNil:errorDescription:
getOrReserveLibraryRowIDForLibrary:
_deserializeRootSharingOptions:
creationDate
saveXattrAtURL:forSignature:error:
setQuotaUsed:
setRecursiveChildCount:
setSharedByMeRecursiveCount:
setSharedAliasRecursiveCount:
setChildCount:
brc_currentUserOwnsLastEditorDeviceWithSession:
brc_lastEditorDeviceName
permission
aliasTargetClientZone
_locateSideCarServerZone:withShareAliasReference:withSession:
serverZoneByMangledID:
serializeSystemFields:includeCZMEtag:
setCKInfoFieldsInRecord:includeCZMEtag:
useFailIfOutdatedForResets
fakeEtagForFailIfOutdated
serializeFilename:forCreation:setExtension:
stringByReplacingOccurrencesOfString:withString:
serializeFilename:forCreation:
pcsChainStateForItem:
setWantsChainPCS:
urlForXattrSignature:
initWithFileURL:
setShare:
forceFailIfExistOnRevival
_createAppLibraryIfNecessary:session:
serializeVersion:diffs:deadInServerTruth:
processAppLibraryDataWithMovedZoneNames:serverZone:isDeltaSync:
recordsToIgnoreOnSyncDown
brc_isInterestingRecordForSyncDown
containerID
brc_sharedRootExtension
iWorkShareableExtensions
baseToken
JSONObjectWithData:options:error:
setFamilyName:
setGivenName:
isDesktopMangledID
isDocumentsMangledID
numberWithUnsignedShort:
setRoutingKey:
setMutableEncryptedPublicSharingKeyData:
brc_isInterestingRecordForSave
brc_oplockMergeEtag
brc_updateDroppedReason
brc_safeToGetURL
sanitizeShortTokenFields
rootDirectoryRecordForZoneID:
rootAppLibraryRecordForAppLibraryID:zoneID:
copyDataRepresentation
iconURLs
isFileURL
brc_containerMetadataRecordWithContainer:
_brc_isOwner
initWithRecordType:
brc_isfakeRecordWithErrorMarkerFor20716676
brc_fakeRecordWithErrorMarkerFor20716676
fragment
brc_mangledNameFromURLFragment:
brc_sharedLinkDisplayName
brc_updateWithLogicalName:isFolder:
parentLocalItemOnFS
_handleApplyingDeletedUnlistedDirectoryIfNecessary:localItem:parent:
shouldBeGreedyForApply
didApplyTombstoneForRank:
shouldForceApplyContentForItem:
inFlightDiffsForItem:zoneRowID:
itemUndergoingCZMToAnotherZone:si:clientZone:rank:scheduler:zone:
appLibraryUndergoingCZM:zone:rank:parentID:scheduler:session:
serverItemWouldBeParentedToDeadFolder:si:rank:scheduler:zone:diffs:
serverItemDeadWithNoLiveLocalItem:si:rank:scheduler:clientZone:zone:
localItemHasUnsyncedChanges:si:rank:scheduler:clientZone:zone:isDeleteOfShareRoot:session:
itemIDsBlockedFromSyncForCZMProcessing
hasLiveChildren
itemByParentID:andLogicalName:
checkEarlyExitsPriorToApplying:si:rank:scheduler:zone:session:isDeleteOfShareRoot:diffs:clientZone:
handleApplyChangesForUnliveServerItem:isDeleteOfShareRoot:rank:scheduler:zone:session:
deletingShareRoot:localItem:
handleNonRevivedItemIfNecessary:si:rank:scheduler:zone:
handleEtagsChangesOnly:si:rank:scheduler:zone:diffs:needsSave:
accountWithIdentifier:
br_getDomainIdentifierForACAccount:
_br_getDomainForProvider:WithIdentifier:
_initWithProviderIdentifier:
getDomainsWithCompletionHandler:
br_sharedEnterpriseProviderManagerWithDomainID:
_br_sharedDefaultProviderManager
setReplicated:
_initWithProviderIdentifier:domain:
br_getDomainForEnterpriseProviderWithIdentifier:
br_getDomainIdentifierForACAccountID:
br_getDomainForDefaultProviderWithIdentifier:
br_sharedProviderManager
clearSyncUpError
initWithClientZone:
batchSize
associateSyncUpStageID:withOperation:
setOp:
setDefaults:
addItem:
itemNeedingPCSChaining
itemsNeedingUnshare
retryAfter
nextSyncUpRequestID
destroyiWorkShares
initWithZone:
prepareWithMaxCost:retryAfter:
removeDB
initWithRootItem:appLibrary:
setShouldFillBatch:
postponeSyncUpForItem:inZone:
setPcsChainCompletionBlock:
_performPCSChainOperationIfNecessaryWithCompletion:
setRecordsToSave:
setRecordIDsToDelete:
setPluginFieldsForRecordDeletesByID:
setConflictLosersToResolveByRecordID:
skipPerItemSyncUpThrottling
brc_isStaleRecordUpdateError
brc_isReferenceValidationError
brc_containsCloudKitErrorCode:
brc_isCloudKitErrorRequiringAssetReupload
brc_isCloudKitErrorUnsupportedOSForItemAndGetMinimumSupported:
brc_isCloudKitErrorChainedToNewParent:
brc_isCloudKitErrorRemappedToNewRecordName:
brc_isIndividualItemBlacklistError
setState:forItem:zone:
brc_isCloudKitPCSChainingError
pcsChainState
ownerDidReceiveOutOfQuotaError:
scheduleQuotaFetchIfNeededForOwner:
setPublicPermission:
removeParticipant:
_performModifyRecordsOrPCSChainOperationWithCompletion:
performShareUpdate:
_scheduleShareUpdateAndModifyRecordsAndZoneCreationOperation
_performShareUpdateAndModifyRecordsWithCompletion:
mutableEncryptedPublicSharingKeyData
initShareIDWithRecordID:serverZone:
publicSharingIdentity
routingKey
_recordIsIWorkShareable:
_setSharingFieldsOnContentRecord:withProtectionData:baseToken:routingKey:forceOverwrite:
getNewWebSharingIdentityDataWithCompletionHandler:
_performUpdateSharingProtectionDataIfNecessary:
syncUpOperationForZone:maxCost:retryAfter:
recordsToSave
packagesInFlight
setPackagesInFlight:
createdAppLibraryNames
deletedRecordIDs
setDeletedRecordIDs:
iworkUnsharedShareIDs
setIworkUnsharedShareIDs:
renamedShareIDsToNames
setRenamedShareIDsToNames:
recordsNeedingNewSharingProtectionInfo
setRecordsNeedingNewSharingProtectionInfo:
recordsNeedingUpdatedSharingProtectionInfo
setRecordsNeedingUpdatedSharingProtectionInfo:
recordIDsToDeleteToEtags
pluginFieldsForRecordDeletesByID
setItemNeedingPCSChaining:
conflictLosersToResolveByRecordID
setStageID:
syncUpCompletionBlock
setSyncUpCompletionBlock:
cost
setServerZone:
encounteredErrorOnPCSChainedItem
_requestID
_encounteredErrorOnPCSChainedItem
_cost
_recordsToSave
_packagesInFlight
_createdAppLibraryNames
_deletedRecordIDs
_iworkUnsharedShareIDs
_renamedShareIDsToNames
_recordsNeedingNewSharingProtectionInfo
_recordsNeedingUpdatedSharingProtectionInfo
_recordIDsToDeleteToEtags
_pluginFieldsForRecordDeletesByID
_itemNeedingPCSChaining
_conflictLosersToResolveByRecordID
_syncUpCompletionBlock
T@"BRCServerZone",&,N,V_serverZone
T@"NSMutableArray",&,N,V_packagesInFlight
T@"NSMutableArray",&,N,V_recordsToSave
T@"NSMutableOrderedSet",&,N,V_deletedRecordIDs
T@"NSMutableArray",&,N,V_iworkUnsharedShareIDs
T@"NSMutableDictionary",&,N,V_renamedShareIDsToNames
T@"NSMutableArray",&,N,V_recordsNeedingNewSharingProtectionInfo
T@"NSMutableArray",&,N,V_recordsNeedingUpdatedSharingProtectionInfo
T@"BRCLocalItem",&,N,V_itemNeedingPCSChaining
T@"NSMutableDictionary",&,N,V_recordIDsToDeleteToEtags
T@"NSMutableDictionary",&,N,V_pluginFieldsForRecordDeletesByID
T@"NSMutableDictionary",&,N,V_conflictLosersToResolveByRecordID
T@"NSString",&,N,V_stageID
Tf,R,N,V_cost
T@"NSMutableArray",R,N,V_createdAppLibraryNames
T@?,C,N,V_syncUpCompletionBlock
TB,R,N,V_encounteredErrorOnPCSChainedItem
syncUpRetryCountForFailure
openWithError:
newTelemetryEventInZoneWithMangledID:fromError:errorDescription:itemIDString:
setTimestamp:
setInvestigation:
telemetryErrorDescriptionMaxLength
newTelemetryEventInZoneWithMangledID:
setIdentifier:
setMagnitudeInt:
setMagnitudeBool:
benignTelemetryErrorDescriptions
setMagnitudeDouble:
investigation
qbsExpectedItemsFetchedPerInterval
qbsExpectedItemsFetchedCheckInterval
newLongEvent:eventGroupUUID:value:round:
br_roundedLongLongValue
setMagnitudeLong:
newMissingPushEventWithNumberOutOfSync:
newTestMetricEventWithMagnitude:
newDBResetEventWithError:description:
newMissingSyncUpJobEventWithNumberMissing:
newMissingUploaderJobEventWithNumberMissing:
newMissingReaderJobEventWithNumberMissing:
newCorruptPackageDownloadEventWithZoneMangledID:error:itemIDString:
newFolderSharePCSChainingEventWithTime:zoneMangledID:itemIDString:error:errorDescription:
newShareAcceptationEventWithLastStep:zoneMangledID:itemIDString:error:
newSyncBoostingProblemCountWithProblemCount:
newDeepScanEventWithReason:appLibrary:
newFileBouncedManyTimes
newFileChecksumMismatchEventWithZoneMangledID:itemIDString:
newPackageChecksumMismatchEventWithZoneMangledID:itemIDString:
newFileReadErrorWithError:zoneMangledID:itemIDString:
newChildCountMismatchEventWithZoneMangledID:itemIDString:magnitude:
newRecursiveItemCountMismatchEventWithZoneMangledID:itemIDString:magnitude:
newShareAliasCountMismatchEventWithZoneMangledID:itemIDString:magnitude:
newShareCountMismatchEventWithZoneMangledID:itemIDString:magnitude:
newMissingShareAliasEventWithZoneMangledID:itemIDString:
newIntEvent:eventGroupUUID:value:
newLongEvent:eventGroupUUID:value:
newDoubleEvent:eventGroupUUID:value:
newBoolEvent:eventGroupUUID:value:
newNSErrorEvent:eventGroupUUID:value:
newTimestampEvent:eventGroupUUID:value:
newCiconiaReportEvent:state:
resolvedOpenRelpathForPath:mustExist:allowResolveInPkg:errcode:
validateMangledIDString:
hasRootForSyncedFolderType:
rootForSyncedFolderType:
_resolvePathInMobileDocsRoot:appLibrary:
resolvedOpenRelpathForPath:mustExist:errcode:
skipSyncUpThrottlingOnBatchFailures
brc_isCloudKitErrorRequiringSkipThrottling
brc_syncOperationErrorKind
decodeDoubleForKey:
decodeIntForKey:
encodeDouble:forKey:
encodeInt:forKey:
inactivityKickbackDelay
inactivityKickbackRatio
ratioOnSuccess
maxWait
updateAfterSchedulingTaskWithMinimumDelay:
ratioOnQuotaErrorClear
ratioOnFailure
updateAfterSchedulingTask
updateForClearingOutOfQuota
clear
setMangledID:
lastErrorKind
_isSyncDown
_lastErrorKind
_delay
_nextTry
Td,R,N,V_delay
Td,R,N,V_nextTry
TB,R,N,V_isSyncDown
Ti,R,N,V_lastErrorKind
T@"BRMangledID",&,N,V_mangledID
decodeBytesForKey:returnedLength:
encodeBytes:length:forKey:
lastDay
syncUpDailyBudget
_timeToLoseAmount:count:
lastHour
syncUpHourlyBudget
lastMinute
syncUpMinutelyBudget
consume:
_values
Tf,R,N
backoffRatio
newSyncOperationWithError:
_totalSyncOperations
_failedSyncOperations
syncDownThrottle
_options
Tc,R,N,V_options
_old_privateAppLibraryByZoneName:db:
_appLibraryEnumeratorForZoneRowID:db:
initWithUUID:
initWithRootObject:
initWithUUIDObject:
_initAsLibraryRootWithAppLibraryRowID:enclosureUUID:
_appLibraryRowID
_uuid
nameWithPrefix:suffix:
initWithBytesNoCopy:length:freeWhenDone:
initForReadingFromData:error:
initRequiringSecureCoding:
encodedData
migrateStageToVersion2_0WithSession:
containersRepositoryURL
numberWithUnsignedLong:
migrateItemIDsToVersion5WithDB:serverTruth:
migrateItemIDsToVersion8WithDB:serverTruth:
br_representableHFSFileNameWithNumber:addedExtension:makeDotFile:
migrateItemIDsToVersion11WithDB:serverTruth:
substringWithRange:
folderSharesMigrationKey
initiateMigrationQueryForMangledIDs:key:
folderShareAliasesMigrationKey
uploadRetryCountForFailure
cachedServerConfigurationPath
writeToFile:atomically:
hasDaemonicParts
saveXattrBlob:forSignature:error:
documentSharesMigrationKey
contentType
lastUsedDate
updateWithLastUsedDate:
tagData
valueForKey:
updateWithFinderTagNames:
updateWithFavoriteRank:
updateWithCreationDate:
contentModificationDate
updateWithContentModificationDate:
fileSystemFlags
updateWithFileSystemFlags:
updateWithXattrs:
br_isDirectoryType
conformsToType:
_extractBookmarkDataFromTemplateItem:isTrashBookmark:
_getOrCreateTrashItemInAppLibrary:error:
documentSize
getFileIDFromXattr:docID:genCount:
_globalItemByDocumentID:
markDoneMigratingToFPFS
_globalItemByFileID:
_parseBookmarkXattrsOnTemplateItemIfNecessary:fileURL:
_locateTemplateItemFromFPFSImport:fields:
liveItemByParentID:andCaseInsensitiveLogicalName:excludingItemID:
_findCollidingItemWithTemplateItem:parentItem:logicalName:error:
br_isDocumentType
_isDesktopOrDocumentsItem:
markBouncedToNextAvailableBounceNumber
_updateCiconiaDatabaseForBouncing:existingItem:
brc_errorCollisionWithItem:
_parseIdentityXattrsOnTemplateItemIfNecessary:options:fileURL:fields:
_shouldRejectItemWithName:templateItem:isDatalessDocument:existingItem:
_handleCollisionIfNecessaryWithTemplateItem:parentItem:logicalName:fileURL:options:error:
newLocalItemWithDBRowID:
changeItem:baseVersion:changedFields:newValues:contents:options:additionalAttrs:clearCKInfoOnSyncUp:error:
_createBaseItemWithImportObject:error:
markFromInitialScan
_changeBasicFieldsOnItem:fields:template:
_trashItem:error:
moveFromURLToLiveStage:fileObjectID:error:
_locateMatchingItemForTemplateItem:parentItem:logicalName:options:fileURL:fields:shouldReject:additionalAttrs:error:
symlinkTargetPath
_createAndInsertNewItemWithImportObject:parentItem:fields:templateItem:fileURL:options:additionalAttrs:error:
createAndImportNewDirectoryWithLogicalName:parentItem:error:
computeItemPathRelativeToRoot
pathWithComponents:
existsByParentID:andCaseInsensitiveLogicalName:excludingItemID:
updateToBeInTrashWithParent:trashPutBackPath:
updateToBeUntrashedWithParent:
updateWithLogicalName:newParent:
fileProviderErrorForNonExistentItemWithIdentifier:
capabilityToMoveItem:toNewParentItem:error:
_processParentAndFilenameIfNecessaryWithLocalItem:changedFields:templateItem:error:
_learnEtagsIfNecessaryWithItem:changedFields:baseVersion:
clearCKInfo
_markNextChildBatchDead:persistedState:batchSize:
_propagateFieldsToNextChildBatch:persistedState:minRowID:batchSize:
importAppLibraryFromTemplateItem:
importNewItemAtURL:logicalName:parentItem:templateItem:fields:options:additionalItemAttributes:error:
_untrashItem:toParentFileObjectID:error:
_processIngestBatch:minRowID:
_cleanItemBatchAfterMigrationToFPFSIfNecessary
_childPropagationSource
_currentPropagationObject
_currentPropagationMinRowID
modifyRecordsCountMultiplicativeDecrease
modifyRecordsCountAdditiveIncreaseFraction
serverStitchingThrottleParams
_recreateSyncBudgetsAndThrottlesIfNeeded
_startSync
setSyncStateBits:
fetchRecentAndFavoriteDocuments
brc_errorOperationCancelled
scheduleResetServerAndClientTruthsForReason:completionHandler:
brc_isCloudKitErrorUnsupportedOSForZoneAndGetMinimumSupported:
brc_isCloudKitErrorZoneMigrated
brc_isCloudKitErrorNeedsPCSPrep
itemCountPendingUploadOrSyncUpAndReturnError:
sizeOfItemsNeedingSyncUpOrUploadAndReturnError:
clientZone:didFinishUploadingAllItemsWithError:
appLibraryIDs
disconnectNSMDQListenerAsync
itemByDocumentID:db:
itemByFileID:db:
serverItemByParentID:andLogicalName:db:
itemByParentID:andLogicalName:db:
itemByParentID:andPhysicalName:db:
reservedItemByParentID:andLogicalName:db:
faultByParentID:andLogicalName:db:
faultByParentID:andPhysicalName:db:
existsByParentID:andCaseInsensitiveLogicalName:db:
existsByParentID:andCaseInsensitiveLogicalName:excludingItemID:db:
_enumerateFaultsWithBlock:rowID:batchSize:
_faultsEnumeratorFromRow:batchSize:
_createCloudKitZoneWithGroup:completion:
removeSyncDownDependency:
cancelListOperationAndReschedule:
cancelFetchParentChainOperationAndReschedule:
cancelLocateRecordOperationAndReschedule:
migrationQueryKeyForMangledID:continuationCursor:
initDeltaSyncWithServerZone:
initWithServerZone:migrationKey:continuationCursor:
_blockSyncDownOnStitchingOperations
hasHighPriorityWatchers
_syncUpOfRecords:createdAppLibraryNames:didFinishWithError:errorWasOnPCSChainedItem:
syncDownImmediately
itemsWithInFlightDiffsEnumerator
_markRequestIDAcked
aliasTargetItemID
_increaseSyncUpBatchSizeAfterSuccess
_decreaseSyncUpBatchSizeAfterError
brc_isCloudKitErrorSafeToSyncUpWithoutSyncDown
_markLatestSyncRequestFailed
finishedSyncingUpItem:withOutOfQuotaError:
syncThrottles
brc_errorLoggedOut
onlyTreatCaughtUpAsConsistent
insertParentChainForItem:
removeObjectsForKeys:
sortUsingComparator:
brc_errorClientZoneNotFound:
_fixupMissingCrossMovedItems
canPathMatchMergeWithLocalItem:
removeAppLibrary:
_hasAllItemsDidUploadHandlers
_allItemsDidUploadWithError:
removeIndexes:
initWithIndex:
_checkIfEnumeratorContainsNonDiscretionaryOp:
_registerServerStitchingOperation:
shareAcceptOperationForItemID:
_blockLowPriorityStitchingOperationsForOperation:
parentIDToList
locateRecordIfNecessaryForRecordID:isUserWaiting:
serverItemTypeByItemID:db:
_registerListOperation:
initWithParentID:zone:isUserWaiting:
addFetchParentChainCompletionBlock:
_registerFetchParentChainOperation:
initWithRecordID:serverZone:isUserWaiting:
addLocateRecordCompletionBlock:
_registerLocateRecordOperation:
_dumpItemsToContext:includeAllItems:error:
serverRankByItemID:db:
serverItemByItemID:db:
serverItemByRowID:db:
documentItemByItemID:db:
directoryOrRootItemIDByFileID:db:
existsByItemID:db:
_removeOnDiskBlockToPerformForItemID:
_removeDownloadedBlockToPerformForItemID:
performBlock:whenLocatingCompletesForItemWithRecordID:
_shouldFailSyncDownWaitImmediately
_prepareForForegroundSyncDown
_enumerateAndClearLocateBlocksForRecordID:exists:
_appendToString:descriptionOfFieldNamed:inResultSet:pos:containsSize:context:
_dumpRecursivePropertiesOfItemByRowID:context:depth:
thumbnailsOperationsByID
dumpMigrationQueriesForMangledID:
forceSyncOverride
_hasNonDiscretionaryServerStitchingOperation
isApplicationInstalledForContainerID:
_finishedProcessingItemThatMovedToThisZone:
_removeItemFromCZMProcessingIfNotAssociated:
containsFault
performBlock:whenItemWithIDIsDownloaded:
enumerateSideFaultsUnderParent:db:block:
_refreshItemFromDB:
_removeItemAndProcessForCrossZoneMove:
_startDownloadingItemForCrossZoneMoveIfNecessary:
parentItem
relpathOfFSEvent
registerAllItemsDidUploadTracker:
unregisterAllItemsDidUploadTracker:
itemByFileID:
itemByParentID:andPhysicalName:
reservedItemByParentID:andLogicalName:
faultByParentID:andLogicalName:
faultByParentID:andPhysicalName:
existsByParentID:andCaseInsensitiveLogicalName:
hasItems
hasItemsWithInFlightDiffs
documentsNotIdleEnumeratorWithDB:
enumerateFaultsAsyncWithBlock:batchSize:
didClearOutOfQuota
addSyncDownDependency:
resetSyncBudgetAndThrottle
prepareDirectoryForSyncUp:
notifyClient:afterNextSyncDown:
syncDownOperation:didFinishWithError:status:
handleRootRecordDeletion
_resetItemsTable
serverItemByRowID:
serverQuotaUsageWithParentID:db:
serverHiddenChildCountWithParentID:db:
documentItemByItemID:
directoryOrRootItemIDByFileID:
performBlock:whenItemWithRecordIDIsOnDisk:
performBlock:whenSyncDownCompletesLookingForItemID:
removeItemOnDiskBlock:
removeItemIsDownloadedBlock:
removeSyncDownForItemIDBlock:
itemMovedIntoShareInThisZone:associatedItemID:
itemCrossZoneMoved:withLookup:
waitForCrossZoneMoveProcessingWithCompletion:
currentRequestID
lastAttemptedSyncDownDate
setLastAttemptedSyncDownDate:
_ownerName
_isInitialCreation
_readerThrottle
_createZoneOperation
_createZoneQueue
_zoneCreationCompletionBlocks
_syncUpRetryAfter
_syncState
_syncUpOperation
_lastSyncUpError
_lastSyncUpErrorWasOnChainedItem
_syncDownOperation
_syncDeadlineSourceResumer
_lastSyncDownError
_syncUpThrottle
_syncUpBackoffRatio
_syncDownThrottle
_syncDeadlineSource
_blockedOperationsOnInitialSync
_runningListOperations
_recursiveListOperations
_fetchParentOperations
_locateRecordOperations
_fetchRecentsOperation
_serverStitchingOperationThrottle
_appliedTombstoneRanks
_lastInsertedRank
_lastSyncDownDate
_lastAttemptedSyncDownDate
_resetTimer
_syncDownBlockToPerformForBookmarkData
_shouldShowiCloudDriveAppInstallationNotification
_itemIDsBlockedFromSyncForCZMProcessing
_itemsBlockedByAssociationForCZMProcessing
_blocksWaitingOnCrossZoneMoveProcessing
_onDiskBlockToPerformForItemID
_downloadedBlockToPerformForItemID
_syncDownBlockToPerformForItemID
_locateBlocksToPerformForRecordID
_parentsOfCZMFaults
_nextSyncDownBarriers
_currentSyncDownBarriers
_hasWorkDidUpdateObserver
_nextIdleHandlers
_syncDownGroup
_syncDownDependencies
_allItemsDidUploadTrackers
_syncUpBatchSizeMultiplier
_syncThrottles
_osNameRequiredToSync
T@"NSDate",&,N,V_lastAttemptedSyncDownDate
T@"<BRCClientZoneDelegate>",&,N,V_delegate
T@"brc_task_tracker",R,N,V_taskTracker
T@"NSString",R,N,V_osNameRequiredToSync
TB,R,N,V_activated
TQ,R,N,V_requestID
TI,R
T@"NSArray",R,N,V_syncThrottles
T@"BRCDeadlineSource",R,N,V_syncDeadlineSource
Tq,R,N,V_lastInsertedRank
T@"NSSet",R,N,V_itemIDsBlockedFromSyncForCZMProcessing
T@"NSDictionary",R,N,V_parentsOfCZMFaults
assertQueue
_assertionQueue
T@"NSObject<OS_dispatch_queue>",W,N,V_assertionQueue
accessItemIdentifierLocalItem:dbAccessKind:synchronouslyIfPossible:handler:
accessItemIdentifierServerItem:dbAccessKind:synchronouslyIfPossible:handler:
allowReadOnlyDBInIPC
itemByFileObjectID:db:
accessItemIdentifier:dbAccessKind:synchronouslyIfPossible:LocalItemHandler:ServerItemHandler:
fsImporter
_queueOrCallCompletionBlock:
startAccessingSecurityScopedResource
stopAccessingSecurityScopedResource
initWithDocumentItem:client:session:
setWantsCurrentVersion:
downloadStageURLForFileID:
downloadStagePathForCurrentPersona
moveItemAtURL:toURL:error:
addCompletionCallback:
brc_errorForRejectedDeletionOfItem:
markRemovedFromFilesystemRecursively:
itemIdentifier
br_personaID
trashedItemsEnumeratorFromNotifRank:batchSize:db:
asFileProviderItem
markMigrationToFPFSComplete
addAppLibrary:
brc_errorNoDocument:underlyingPOSIXError:
_getPublishedURLForLocalItem:forStreaming:requestedTTL:reply:
_removeSandboxedAttributes:
_overrideSessionForDomainIdentifier:
getQueryItemForBRFileObjectID:reply:
createItemBasedOnTemplate:fields:contents:options:additionalItemAttributes:completionHandler:
startDownloadFileObject:options:reply:
deleteItemWithIdentifier:baseVersion:options:completionHandler:
modifyItem:baseVersion:changedFields:contents:options:additionalAttrs:completionHandler:
reimport:
enumerateTrashItemsFromRank:limit:completion:
notifyReimportCompleted:
boostFilePresenterForItemIdentifier:reply:
capabilityWhenTryingToReparentItemIdentifier:toNewParent:reply:
getBookmarkDataForItemIdentifier:onlyAllowItemKnowByServer:allowAccessByBundleID:documentID:isDirectory:reply:
getPublishedURLForItemIdentifier:forStreaming:requestedTTL:reply:
getAttributeValues:forItemIdentifier:reply:
ubiquitousMigrationMaxBouncingAttempts
_updateParent:
updateFromImportObject:onlyContentDependentProperties:
updateWithFileSystemFlags:ignoreExecutable:
initWithImportObject:error:
br_getTagNames:error:
_finderTagsFromImportObject:
modeFromImportObject:isPackageFault:
T@"BRFieldStructureSignature",R,N
TQ,R,D,N
_value
T@"NSString",&,N,V_name
T@"NSData",&,N,V_value
dataWithCapacity:
appendBytes:length:
brc_dataFromHexidecimalString
brc_SHA256WithSalt:
createURLForUploadWithStageID:name:
packageWithError:
anchorAtURL:error:
initWithRegistry:stageID:name:
addItem:error:
closeAndReturn
_registry
_package
clearEvents
eventsAtIndex:
eventsType
setHasToken:
hasToken
events
setEvents:
_token
_events
T@"NSMutableArray",&,N,V_events
TQ,N,V_token
weakToWeakObjectsMapTable
addProblemWithType:recordName:
setPendingRequestID:
setNeedsSyncUp:
pendingRequestID
arrayWithObject:
healthZoneMaxNumberOfResets
healthZoneTimeIntervalForMaxNumberOfResets
shouldResetAfterFixingState
resetFrequencyIsTooHigh
privateServerZone
deleteAllContentsOperationLastError
_checkResultSetIsEmpty:logToFile:reason:result:
fetchZoneRootItemInDB:
hasDefaultAppLibrary
registerPCSChainingOperation:
pcsChainOperationForItemID:
prepareProblemReportForSyncWithRequestID:
resolveClashOfAlias:atPath:withAlias:atPath:
zoneHealthState
_syncBarriers
_zoneHealthState
_problemReport
_lastResets
_faultsLiveBarriers
_appLibraries
_defaultAppLibrary
_pcsChainFolderOperations
TB,R,D,N
T@"BRCPrivateServerZone",R,N
T@"BRCAppLibrary",R,N,V_defaultAppLibrary
T@"NSSet",R,N,V_appLibraries
T@"NSSet",R,N
T@"BRCServerZoneHealthState",R,N,V_zoneHealthState
setUserInfoObject:forKey:
localizedAdditionalDescription
sumOfCompletedUnitCountDelta
sumOfTotalUnitCountDelta
setSumOfCompletedUnitCountDelta:
setTotalUnitCount:
setSumOfTotalUnitCountDelta:
versionSizes
updateUnitCount
updateLocalizedDescriptionWithOptions:
copyProgressInfoToProgress:options:
verifyFutureProgressIsNotFinished
childProgresses
previousUnitCounts
_versionSizes
_childProgresses
_previousUnitCounts
Tq,N,VsumOfCompletedUnitCountDelta
Tq,N,VsumOfTotalUnitCountDelta
T@"NSMutableDictionary",R,N,V_versionSizes
T@"NSMutableDictionary",R,N,V_childProgresses
T@"NSMutableDictionary",R,N,V_previousUnitCounts
outOfQuotaDocIDs
unsignedLongValue
setLocalizedDescription:
setLocalizedAdditionalDescription:
allUploadsPendingQuota
_outOfQuotaDocIDs
T@"NSMutableSet",R,N,V_outOfQuotaDocIDs
previousCompletedUnitCount
setPreviousCompletedUnitCount:
previousTotalUnitCount
setPreviousTotalUnitCount:
resumeUnitCounts
_resumeUnitCounts
Tq,N,VpreviousCompletedUnitCount
Tq,N,VpreviousTotalUnitCount
T@"NSMutableDictionary",R,N,V_resumeUnitCounts
_updateGlobalProgress
_destroyDownloadWithReason:
_destroyUploadWithReason:
shortValue
_stopObservingProgress:
observeValueForKeyPath:ofObject:change:context:
intervalToWaitBeforeShowingAdditionalDescription
_cancelDownloadForDocumentID:destroyIfLast:willRetryTransfer:
_createDownloadMetadataWithCompletedUnitCount:totalUnitCount:
_updateDocument:
_deleteDocument:reason:
dumpDictionary:withMaxCount:toContext:
_keyPathsToObserve
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:
_createNewGlobalProgressInGroup:completedUnitCount:totalUnitCount:
setCancellable:
initWithUnderlineProgressObjects:
_destroyProgressInGroup:reason:
indeterminate
_cancelUploadForDocumentID:inState:willRetryTransfer:
_cancelUploadForDocumentID:inState:willRetryTransfer:pendingQuota:
_resumeProgressForAnotherOperationIfNeeded
valueForKeyPath:
_cancelDownloadForDocumentID:
_cancelUploadForDocumentID:inState:
didUpdateClientZone:
willScheduleDocumentForDownload:
resumeProgressForZones:
clearOutOfQuotaState
stopPublishingProgress
updateUploadThrottleForDocument:toState:
_startObservingProgress:
_createNewIndeterminateGlobalProgress
_createUploadMetadataWithCompletedUnitCount:totalUnitCount:
_lazyInitDone
_updatePacer
_operationTimer
_operationTimerSuspendCount
_showExtendedInfo
_networkReachable
_globalProgressMultiplex
_uploads
_downloads
br_fetchParentChain
_fetchParentChain:
_parentRecordID
_fetchParentChainCompletionBlocks
optimisticallyPCSChainWithSession:
optimisticallyPCSChainDuringResetWithSession:
should2PhasePCSChain
parentIDHasLiveUnchainedChildren:
fakeSyncForItem:serverItem:inZone:
addDeletionOfRecordID:ckInfo:
syncUpStructureDeleteCost
addEditOfDocument:
shouldPCSChainStatusForItem:
syncUpInitialItemCost
syncUpStructureEditCost
syncUpStructureCreateCost
syncUpDocumentDeleteCost
isCloudDocsMangledID
brc_errorItemIneligibleFromSyncForInode:
handleEditOfSharedItem:
handleDeletionOfSharedItem:
addDeletionOfItem:
syncUpDataDeleteCost
earliestUploadReceiptExpiration
uploadReceiptExpiration
syncUpDocumentEditCost
syncUpDataEditCost
syncUpDocumentCreateCost
syncUpDataCreateCost
prepareAppLibraryRootSyncUpForItem:
checkIfSyncAllowedInSharedZoneForItem:
preventRecordSyncWithoutDiffs
addDeletionOfSharedTopLevelItem:
addDeletionOfFinderBookmark:
addDeletionOfDocument:
addDeletionOfDirectory:
addDeletionOfAlias:
addEditOfSharedTopLevelItem:
addEditOfFinderBookmark:
addEditOfSymlink:
addEditOfDirectory:
_fullyChainedParentIDWhitelist
_halfChainedParentIDWhitelist
_defaults
T@"BRCSyncUpOperation",&,N,V_op
T@"BRCUserDefaults",&,N,V_defaults
itemEnumeratorByParentID:andCaseInsensitiveLogicalName:
nextItemRowID
setNextNotifRank:
nextPackageItemRank
allocatePackageItemRank
setNextPackageItemRank:
_nextItemRowID
_nextNotifRank
_nextPackageItemRank
_telemetryMinRowID
_telemetryToken
T@"BRCItemID",&,D,N
initWithServerItem:
asSharedItem
aliasDerivedStructure
initFromPQLResultSet:serverZone:error:
appLibraryForRootItem
aliasTargetAppLibrary
overrideCKInfoIfNecessaryForOutOfBandSyncOpWithLocalItem:
originalName
serverMetrics
directoryMtime
_zone
_needsInsert
_pcsChainState
_symlinkTarget
_originalName
_rank
_latestVersion
_serverMetrics
_directoryMtime
T@"BRCSharedServerItem",R,N
Tq,R,N,V_rank
T@"NSString",R,N,V_originalName
T@"BRCServerStatInfo",R,N,V_st
T@"BRCVersion",R,N,V_latestVersion
T@"BRServerMetrics",R,N,V_serverMetrics
T@"NSString",R,N,V_symlinkTarget
Tq,R,N,V_directoryMtime
initWithRelativePath:db:
globalItemByFileID:db:
_fetchByFileID:
_fetchByDocumentID:
_byPathWithLastPathComponent:
_fetchByPath
_resolveClientZoneWhileFetchingFileID:fetchindDocID:
_shareIDMatchesParent:
globalItemByDocumentID:db:
_fetchClientZone
byDocumentIDGlobally
byFileIDGlobally
setByFileID:
setByDocumentID:
byFileID
byDocumentID
serverByPath
byPathWithLastPathComponent:
byPath
relpathOfItem
_pathOfItem
_relpathOfFSEvent
_matchByFileID
_matchByDocumentID
_matchByPath
_serverByPath
_packageItem
_parentItem
_matchByFileIDGlobally
_matchByDocumentIDGlobally
_fetched
T@"BRCRelativePath",R,N,V_pathOfItem
T@"BRCRelativePath",R,N,V_relpathOfFSEvent
T@"BRCLocalItem",&,N
T@"BRCLocalItem",R,&
T@"BRCDocumentItem",&,N
T@"BRCDocumentItem",R,&
T@"BRCServerItem",R,N
initWithPersona:
syncedRootURLs
cacheMightBePopulated
parseMangledItemIDString:mangledID:etag:session:
sharedZoneRowID
itemUUIDString
initWithItemID:
Tr*,R,N
T@"BRCALRowID",R,N
T@"BRCZoneRowID",R,N
reimportItemsBelowItemWithIdentifier:completionHandler:
ingestFromCacheItemWithIdentifier:requestedFields:completionHandler:
ingestFromCacheItemWithIdentifier:completionHandler:
initFromPQLResultSet:session:error:
updateSignaturesForFilesInItem:fromCKPackage:error:
classOfNextMessage
setClassOfNextMessage:
initWithStream:
nextMessage
version
streamError
inputStreamWithURL:
initWithInputStream:
initWithDeviceID:fileID:
br_pathWithDeviceID:fileID:
inputStreamWithFileAtPath:
itemClass
initWithAsset:
_stream
_reader
T#,N
outputStreamWithURL:append:
initWithOutputStream:
setVersion:
writeMessage:
_handleStreamError
_applyQuarantineMetadataWithManifestItem:fd:
_computedFileModeForPackageItem:
stageInPackageFileUmask
_packageItem:matchesMode:
_applyFileMetadataWithManifestItem:packageRootFD:
copyPackageFileWithPackageFd:toStageFd:relpath:
stageInPackageDirectoryUmask
itemCountWithError:
_applyDirectoryMetadataWithManifestItem:packageRootFD:
itemAtIndex:
_stageExistingPackageItem:withLiveFd:stageFd:
dataWithContentsOfURL:options:error:
setXattrs:
setItem:
addLocalItem:
initWithZone:stageID:url:
stagePackageWithReader:package:xattrsPackage:stageItemURL:livefd:recordName:
_writer
_url
T@"NSURL",R,N,V_url
setMaxConcurrentOperationCount:
_renameDelayForZone:
_renameItem:
_scheduleRenameAfter:onQueue:
_renameItems
addOperation:forItem:
removeOperationsForItemGlobalID:
_finishDirectoryToPackageTransmogrification:relpath:
scheduleDirectoryToPackageTransmogrification:absolutePath:
scheduleBouncedDirectoryRename:
_pendingRenamesTimer
_pendingRenames
_pendingTransmogirifcations
fpfsMigrationState
setFPFSMigrationState:
fpfsMigrationOffset
fpfsMigrationLostItemCount
updateFPFSMigrationOffset:lostItemCount:
T@"BRCFSImporter",R,N
T@"BRCServerChangesApplier",R,N
setVersionIdentifier:
initWithPattern:options:error:
rangeOfFirstMatchInString:options:range:
_clientZonesMatchingSearchString:
brc_errorAppLibraryNotFound:
_appLibrariesMatchingSearchString:
singleClientZoneMatchingSearchString:error:
appLibrariesMatchingSearchString:error:
singleAppLibraryMatchingSearchString:error:
initWithUserURL:
restoreWithCompletionBlock:
clientDatabaseURL
setClientDatabaseURL:
_clientDatabaseURL
T@"NSURL",&,N,V_clientDatabaseURL
_markNeedsPropertiesPropagatedToChildren
_markChildPropagationComplete
containsDirFault
br_osUpgradeMigration
migrationQueryForMangledID:key:didUpdateWithCursor:
arrayByAddingObjectsFromArray:
_saveFetchedRecords:cursor:error:
maxRecordCountInQuerySharedRecordsOperation
_performQuery:recordFetchedBlock:cursorUpdatedBlock:desiredKeys:completion:
_updatedContinuationCursor:fetchedRecords:error:
_performAfterQueryingForShareIDsOfFolders:completion:
_performAfterQueryingForShareAliasesWithCompletion:
allMigrationKeysOrdered
_migrationKey
_continuationCursor
_shareIDsToFetch
isOverQuota
currentStatus
lastServerUpdate
fetchCurrentUserRecordOperation
initWithName:session:readingOptions:
_detachAllTrackedDocID:error:
_finishAfterWaitingForDocumentsWithID:error:
setCompletionHandler:
brc_errorNotOnDisk:
_provideDocument:
enumerateBelow:appLibrary:recursively:handler:
_provideDirectoryContents:appLibrary:
_provideDirectoryRecursively:
_provideURL
_provideItem
trackedFileObjects
initWithURL:readingOptions:client:session:
initWithDirectoryItem:
_provideFlatDirectoryStructure:
isRecursive
setIsRecursive:
wantsCurrentVersion
_directoryItem
_documentItem
_treeEnumerator
_trackerFileObjects
_fileObjectIDsToCancel
_callbacks
_lastDownloadError
_isStillEnumeratingDirectory
_isFinished
_isMonitoringReachability
_appLibrariesMonitored
_recursiveList
_isRecursive
_wantsCurrentVersion
TB,N,V_isRecursive
TB,N,V_wantsCurrentVersion
_schedule
uploadBatchCount
_scheduleOneBatchWithQoS:
_setReachedCap:
_evaluateCap
setDidProgressBlock:
availableDiskSpaceDidChange
_addBatchOperation:
transferQueueTransferBudget
cancelTransferID:
addAliasItem:toTransferWithID:
progressForTransferID:
initWithSyncContext:name:scheduler:
startSchedulingMultipleItemsInteractively
endSchedulingMultipleItemsInteractively
streamDidBecomeReadyToTransferRecords
setStreamDidBecomeReadyToTransferRecords:
maxCountOfBatchesInFlight
setMaxCountOfBatchesInFlight:
_schedulingSource
_minSignalTime
_inFlightOpByID
_transferWorkloop
_transferBatchRequestWaiter
_inFlightSize
_isWaitingForTransferBatch
_hasReachedCap
_multipleItemsInteractiveSchedulingCount
_streamDidBecomeReadyToTransferRecords
_maxCountOfBatchesInFlight
T@?,C,N,V_streamDidBecomeReadyToTransferRecords
TQ,N,V_maxCountOfBatchesInFlight
T@"NSArray",R
TQ,R,N,V_inFlightSize
numberWithFloat:
setTreatmentId:
setExperimentId:
setRampId:
setPreviousAttempts:
setHasPreviousAttempts:
hasPreviousAttempts
setPreviousFailedAttempts:
setHasPreviousFailedAttempts:
hasPreviousFailedAttempts
setAreMigratedFaultsBelowThreshold:
setHasAreMigratedFaultsBelowThreshold:
hasAreMigratedFaultsBelowThreshold
setAreNonFaultAllMigrated:
setHasAreNonFaultAllMigrated:
hasAreNonFaultAllMigrated
setTypesOfMigratedItemsMask:
setHasTypesOfMigratedItemsMask:
hasTypesOfMigratedItemsMask
setExpectedMigratedItemsCount:
setHasExpectedMigratedItemsCount:
hasExpectedMigratedItemsCount
setItemsNotMigratedCount:
setHasItemsNotMigratedCount:
hasItemsNotMigratedCount
setTypesOfNonMigratedItemsMask:
setHasTypesOfNonMigratedItemsMask:
hasTypesOfNonMigratedItemsMask
setMaterialisedOnCDItemsCount:
setHasMaterialisedOnCDItemsCount:
hasMaterialisedOnCDItemsCount
setMaterialisedOnFPFSItemsCount:
setHasMaterialisedOnFPFSItemsCount:
hasMaterialisedOnFPFSItemsCount
setDiskSpaceLeft:
setHasDiskSpaceLeft:
hasDiskSpaceLeft
setAccountQuotaUsage:
setHasAccountQuotaUsage:
hasAccountQuotaUsage
setIsAccountDataSeparated:
setHasIsAccountDataSeparated:
hasIsAccountDataSeparated
setCiconiaVersion:
setHasCiconiaVersion:
hasCiconiaVersion
setPreviousReleasesSuccessRate:
setHasPreviousReleasesSuccessRate:
hasPreviousReleasesSuccessRate
setCloningTime:
setHasCloningTime:
hasCloningTime
setImportTime:
setHasImportTime:
hasImportTime
setManuallyTriggeredMigration:
setHasManuallyTriggeredMigration:
hasManuallyTriggeredMigration
hasTreatmentId
hasExperimentId
setItemsNotFoundInDB:
setHasItemsNotFoundInDB:
hasItemsNotFoundInDB
setItemsChangedDuringCloning:
setHasItemsChangedDuringCloning:
hasItemsChangedDuringCloning
setUnexpectedCreations:
setHasUnexpectedCreations:
hasUnexpectedCreations
setIgnoredContentProtectedItems:
setHasIgnoredContentProtectedItems:
hasIgnoredContentProtectedItems
setPackagesWithoutBundleBit:
setHasPackagesWithoutBundleBit:
hasPackagesWithoutBundleBit
setTotalItemCount:
setHasTotalItemCount:
hasTotalItemCount
hasRampId
setBouncedItemsCount:
setHasBouncedItemsCount:
hasBouncedItemsCount
setBouncedItemsMatrix:
setHasBouncedItemsMatrix:
hasBouncedItemsMatrix
previousAttempts
previousFailedAttempts
areMigratedFaultsBelowThreshold
areNonFaultAllMigrated
typesOfMigratedItemsMask
expectedMigratedItemsCount
itemsNotMigratedCount
typesOfNonMigratedItemsMask
materialisedOnCDItemsCount
materialisedOnFPFSItemsCount
diskSpaceLeft
accountQuotaUsage
isAccountDataSeparated
previousReleasesSuccessRate
cloningTime
importTime
manuallyTriggeredMigration
treatmentId
experimentId
itemsNotFoundInDB
itemsChangedDuringCloning
unexpectedCreations
ignoredContentProtectedItems
packagesWithoutBundleBit
totalItemCount
rampId
bouncedItemsCount
bouncedItemsMatrix
_accountQuotaUsage
_bouncedItemsCount
_bouncedItemsMatrix
_ciconiaVersion
_cloningTime
_diskSpaceLeft
_expectedMigratedItemsCount
_ignoredContentProtectedItems
_importTime
_itemsChangedDuringCloning
_itemsNotFoundInDB
_itemsNotMigratedCount
_materialisedOnCDItemsCount
_materialisedOnFPFSItemsCount
_packagesWithoutBundleBit
_previousAttempts
_previousFailedAttempts
_totalItemCount
_unexpectedCreations
_experimentId
_previousReleasesSuccessRate
_rampId
_treatmentId
_typesOfMigratedItemsMask
_typesOfNonMigratedItemsMask
_areMigratedFaultsBelowThreshold
_areNonFaultAllMigrated
_isAccountDataSeparated
_manuallyTriggeredMigration
Tq,N,V_previousAttempts
Tq,N,V_previousFailedAttempts
TB,N,V_areMigratedFaultsBelowThreshold
TB,N,V_areNonFaultAllMigrated
Ti,N,V_typesOfMigratedItemsMask
Tq,N,V_expectedMigratedItemsCount
Tq,N,V_itemsNotMigratedCount
Ti,N,V_typesOfNonMigratedItemsMask
Tq,N,V_materialisedOnCDItemsCount
Tq,N,V_materialisedOnFPFSItemsCount
Tq,N,V_diskSpaceLeft
Tq,N,V_accountQuotaUsage
TB,N,V_isAccountDataSeparated
Tq,N,V_ciconiaVersion
Tf,N,V_previousReleasesSuccessRate
Td,N,V_cloningTime
Td,N,V_importTime
TB,N,V_manuallyTriggeredMigration
T@"NSString",&,N,V_treatmentId
T@"NSString",&,N,V_experimentId
Tq,N,V_itemsNotFoundInDB
Tq,N,V_itemsChangedDuringCloning
Tq,N,V_unexpectedCreations
Tq,N,V_ignoredContentProtectedItems
Tq,N,V_packagesWithoutBundleBit
Tq,N,V_totalItemCount
T@"NSString",&,N,V_rampId
Tq,N,V_bouncedItemsCount
Tq,N,V_bouncedItemsMatrix
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
addXattrs:
xattrsCount
clearXattrs
xattrsAtIndex:
xattrsType
T@"NSMutableArray",&,N,V_xattrs
readTargetFromRelativePathAndSyncUp:
T@"BRCDocumentItem",R,D,N
T@"BRCDirectoryItem<BRCFSRooted>",R,D,N
_registerSubscriptionForZoneID:isOptimisticSubscribe:
_createZoneWithZoneID:
initWithZoneID:
initWithRecordZonesToSave:recordZoneIDsToDelete:
setModifyRecordZonesCompletionBlock:
initWithZoneID:subscriptionID:
optimisticSubscribe
subscriptionOnly
setSubscriptionOnly:
createZoneAndSubscribeCompletionBlock
createdZone
_zoneID
_optimisticSubscribe
_subscriptionOnly
_createZoneAndSubscribeCompletionBlock
_createdZone
TB,N,V_subscriptionOnly
TB,N,V_optimisticSubscribe
T@?,C,N,V_createZoneAndSubscribeCompletionBlock
T@"CKRecordZone",R,N,V_createdZone
setMarkZonesAsUserPurged:
br_locateRecord
_performAfterLocatingRecord:
_structureRecordID
_exists
_locateRecordCompletionBlocks
T@"CKRecordID",R,N,V_recordID
initWithLatestGCStartTime:
timeSinceLatestGCStartTime
_latestGCStartTime
cacheDirPath
_pathForDirIndex:
_performInStageDirectory:block:
forgetWatchedLockedFileID:
_fileIDMightHaveBeenUnlocked:
globalItemByFileID:
_openStageDirectory:
nonLocalFaultURLForAdditionName:
applyMetadataOnFileDescriptor:liveFileDescriptor:itemID:clientZone:statInfo:version:sharingOptions:
_watchLockedRelpath:
_pathInStage:index:generationID:
_flockToMakeLiveAtPath:error:
stageFSRootUmask
stageDirectoryUmask
stageFileUmask
maxPreservedXattrBlobSize
cleanupStagedSyncUpWithID:
_anchorNamePrefixForRecordZoneID:
_anchorNameForRecordID:
_anchorNameForChangeToken:recordZoneID:
renameAndUnlinkInBackgroundItemAt:path:
destroyAnchorAndPackageAnchoredAtURL:
_graveyardAt:path:forItemID:
minFileSizeForGraveyard
garbageCollectSpace:
purgeGraveyardSpace:withUrgency:
_purgeSpaceUnderQueue:withUrgency:
graveyardAgeDeltaInLowUrgency
graveyardAgeDeltaInMedUrgency
clientPackageDatabaseDirectory
anchorExistsForArchiverInfo:
gcPackagesInDirectory:dbInUseBlock:
_processPendingListDatabaseObjects:
enumeratePrivateServerZones:
br_isParentOfURL:
xattrAgeDelta
_hasContentsInPath:
_garbageCollectPackages
_garbageCollectUploads
_garbageCollectFaults
_garbageCollectDownloads
_garbageCollectDeltaSyncDatabases
_garbageCollectQBSDatabases
_garbageCollectOldVersions
_garbageCollectSpace:
_updatePersistedStateWithLatestGCStartTime:
removeLowDiskObserver:forDevice:
addLowDiskObserver:forDevice:
stageGCXPCActivity
writeToURL:options:error:
lowDiskStatusChangedForDevice:hasEnoughSpace:
makeSymlinkWithTarget:inStageGatherFileID:generationID:error:
makeNonLocalVersionSideFaultWithAdditionName:clientZone:statInfo:version:sharingOptions:error:
makeItemLive:fromStage:bySwappingWith:fileName:error:
moveFromStage:toPath:fileName:error:
pendingListRecordDirWithStartingChangeToken:
pendingDeltaFetchRecordDirWithStartingChangeToken:recordZoneID:
pendingFetchRecordDirExistsInStageWithStartingChangeToken:recordZoneID:
cleanupStagedUploadWithID:
associateDownloadStageID:withOperation:
rememberStagedDownloadWithID:gatherFileID:generationID:documentID:appLibrary:error:
moveOldVersionFromPath:error:
moveToGraveyardFromPath:forItemID:error:
existsInStage:generationID:
existsInOldVersionStageOrGraveyard:
transferDocumentID:fromOldVersionStage:toStage:
purgeSpace:withUrgency:
purgableSpace
_removeUnusedXattrBlobs
disarmLockedTestTimer
setStageDirectoryForXattr:
_stageDirectoryPath
_stageDirectoryFileID
_unflushedStagedFileIDs
_activeUploadStageIDs
_activeDownloadStageIDs
_watchedLockedFileIDs
_lockedTestTimer
_flushingQueue
_persistedState
_lowDiskSpace
dataWithPropertyList:format:options:error:
getCString:maxLength:encoding:
initWithURL:name:
brc_parseAdditionFilename:mangledID:itemID:etag:session:
additionWithName:inNameSpace:error:
prettyNameForFilePresenterID:
br_fetchNonLocalVersions
addReaderID:completionHandler:
setKind:
cancelReaderID:
initWithVolume:personaIdentifier:
_fileReactorID
_physicalURLForURL:
_provideItemAtURL:toReaderWithID:completionHandler:
_cancelProvidingItemAtURL:toReaderWithID:
_operationsByName
_personaIdentifier
arrayWithContentsOfFile:
packageExtensions
setValue:forKey:
blacklistedPackageExtensions
brc_closeForcedPackageExtensionsForPersona:
brc_loadForcedPackageExtensionsForCurrentPersona
packageExtensionPlistWriteInterval
br_supportDirForPersona:dataSeparated:
fileExistsAtPath:isDirectory:
removeItemAtPath:error:
dictionaryWithContentsOfFile:
getBytes:length:
setNotifRank:
setDatabaseID:
changeTokenFromData:
toData
notifRank
_notifRank
_databaseID
TQ,N,V_notifRank
TQ,N,V_databaseID
orderedSet
setRank:
addIndexOfItem:
addDeletionOfFileObjectID:rank:
batchCount
listItems:
_toIndexItems
_deletedItemIDs
_observer
TQ,N,V_rank
isIndexingAvailable
initWithName:protectionClass:
deleteAllSearchableItemsWithCompletionHandler:
computeTombstoneEntryType:
rawID
_signalActiveSetDidChange
_readyForIndexingWithAckedRank:
changeTokenForNotifRank:
deleteSearchableItemsWithDomainIdentifiers:completionHandler:
_deleteAllRanks
_deletedDocIdResultSetFromNotifRank:batchSize:
garbageCollectRanksPreceding:
_handleResetForRowID:notifRank:completionHandler:
_enumerateChangesFromChangeToken:limit:completion:
recentsEnumeratorPacerInterval
_activeSetDidChange
dropLegacyCoreSpotlightIndexIfNeededWithCompletionHandler:
dropRecentsForSession:completionHandler:
enumerateChangesFromChangeToken:limit:completion:
_pacer
_readyForIndexing
_flushedNotifRank
pendingGroup
fetchOperationForTransfers:traceCode:
_stageWithSession:error:
perDownloadCompletionBlock
transferredObjectsPrettyName
_perDownloadCompletionBlock
T@?,C,V_perDownloadCompletionBlock
dataWithContentsOfURL:
_prepareSecondStageWithSession:manifest:package:error:
_stageWithSession:manifest:package:xattrsPackage:error:
liveItemIsPackage
liveDocumentID
desiredIndices
liveFileID
_liveFileID
_liveDocumentID
_liveItemIsPackage
_isFinderBookmark
_requiresTwoPhase
_desiredIndices
TB,R,N,V_liveItemIsPackage
TI,R,N,V_liveDocumentID
TQ,R,N,V_liveFileID
T@"NSIndexSet",R,N,V_desiredIndices
TB,R,N,V_requiresTwoPhase
T@"BRCProgress",&,D,N
setDesiredPackageFileIndices:
_stageContentWithSession:error:
associateThumbnailImagesDictionary:serializedQuickLookMetadata:withImmutableDocument:atURL:error:
prepareAdditionCreationWithItemAtURL:byMoving:creationInfo:error:
_stageWithSession:creationInfo:error:
isLoser
_secondaryRecordID
_secondaryRecord
_isLoser
_storage
_gsError
_fileObjectID
T@"GSPermanentStorage",R,N,V_storage
T@"BRCProgress",&,N
T@"NSError",R,N,V_gsError
TB,R,N,V_isLoser
T@"BRFileObjectID",R,N,V_fileObjectID
createAdditionStagedAtURL:creationInfo:completionHandler:
_readers
parentItemID
_throttle
_removeAliasAndMarkDead
targetDocument
learnTarget:
updateXattrInfoFromPath:error:
rewriteOrDeleteAliasOnDiskWithTarget:
T@"BRCAppLibrary",R,N
br_purge
itemByParentID:andName:
_deleteAllContentsOperation
_deleteAllContentsOperationLastError
T@"BRCZonePurgeOperation",R,N
T@"BRCPrivateClientZone",R,N
_propagateDeleteToChildrenOfItemID:
_propagateFolderDeletesToTheirChildren
T@"BRCSharedClientZone",R,N
setRelativePath:
setDocID:
setGenCount:
setIsDirectory:
_isDirectory
_genCount
_docID
T@"NSString",&,N,V_relativePath
T@"NSNumber",&,N,V_docID
TI,N,V_genCount
TB,N,V_isDirectory
_underlineProgressObjects
_localizedAdditionalDescription
_localizedDescription
_completedUnitCount
_totalUnitCount
T@"NSString",C,N,V_localizedAdditionalDescription
T@"NSString",C,N,V_localizedDescription
Tq,N,V_completedUnitCount
Tq,N,V_totalUnitCount
_br_getFileProviderDomainErrorCode:
_br_populateUserInfoDict
br_fileProviderError
containerWithIdentifier:
setContainer:
setFetchWebAuthTokenCompletionBlock:
initWithSyncContext:ckContainerID:
ckContainerID
setCkContainerID:
_ckContainerID
T@"NSString",&,N,V_ckContainerID
uploadThrottle
_scheduleSyncUpJob:
_clearSyncUpErrorForItem:
perItemSyncUpThrottle
thumbnailTransferQueueWidth
transferQueueMinBatchSize
quotaFetchPacerDelay
_scheduleQuotaFetchForDefaultOwner
_globalQuotaStateUpdateForDefaultOwner
_scheduleRetries
setState:forUploadJobID:zone:
uploadMaxPkgFileSize
uploadMaxFileSize
uploadMaxInPkgFileSize
brc_errorDocumentWithFilename:size:isTooLargeToUpload:
scheduleQuotaStateUpdateForOwner:
_thumbnailOperationForItemRowID:
_cancelJobsMatching:
_buildItemTooLargeErrorIfNeeded:syncContext:
hasItemsOverQuotaForOwner:
setIsDefaultOwnerOutOfQuota:forceSignalContainers:
_computeRecordForJobID:item:syncContext:
_thumbnailOperationsMax
packageItemsForItem:order:
initWithDeviceID:fileID:generationID:
setPackageIndex:
pathInPackage
setItemTypeHint:
errorWithCode:format:
CKClientSuitableError
updateWithPkgItem:
performTransactionBlock:
_updateRecordInDB:item:syncContext:transferSize:stageID:
_updatePackageRecord:item:stageID:error:
thumbnailImagesDictionary
copyItemAtURL:toURL:error:
serializedQuickLookMetadataDictionary
_reportUploadErrorForDocument:error:
_handleFileModifiedError:forItem:
_documentItemForJobID:stageID:
_updateRecord:item:syncContext:thumbnailOperation:stageID:
initWithDocumentAtURL:
_updateJobID:setStageID:operationID:
_updateRecord:jobID:syncContext:thumbnailOperation:stageID:
_doneFetchingThumbnailForJobID:
_startFetchThumbnail:jobID:
packageWithPackage:error:
_duplicatePackage:stageID:stageName:error:
_finishPackageUploadWithRecord:item:stageID:error:
uploadFileModifiedThrottle
_clearUploadErrorForDocument:
_willAttemptJobID:throttle:operationID:
_finishedUploadingItem:record:jobID:stageID:syncContext:error:
initWithExistingRecordID:databaseScope:fieldName:fileSignature:
initWithAssetReference:
_performServerSideAssetCopyForItem:transferSize:
_documentItemForJobID:operationID:
_minBatchSize
br_upload
setIsDefaultOwnerOutOfQuota:
_rescheduleJobsOutOfQuotaForDefaultOwnerWithAvailableSize:
br_quotaUpdateUploader
setFetchUserQuotaCompletionBlock:
descriptionForJobID:context:
deleteJobsForZone:
addAliasItem:toUploadingItem:
setState:forJobID:zone:
boostDocID:item:
removeBoostedDocID:
hasItemsOverQuotaInZone:
forceScheduleQuotaFetchForOwner:
_thumbnailsOperations
_boostedDocIDs
_stampForDocID
_retryQueueSource
_thumbnailQueue
_quotaPacer
_globalQuotaStateUpdatePacer
_prepareReachedMax
_isDefaultOwnerOutOfQuota
_uploadsDeadlineScheduler
T@"BRCDeadlineScheduler",R,N,V_uploadsDeadlineScheduler
T@"NSDictionary",R,N,V_thumbnailsOperations
TB,N,V_isDefaultOwnerOutOfQuota
initWithItemDBRowID:
initWithRecord:ckInfo:
T@"BRFieldCKInfo",R,N,V_ckInfo
pcsChainShareAliases
initWithItemID:parentID:structuralCKInfo:contentCKInfo:itemType:aliasTargetZoneIsShared:chainState:
unchainedItemInfoInServerTruthEnumeratorParentedTo:
itemType
structuralCKInfo
contentCKInfo
chainState
aliasTargetZoneIsShared
_itemType
_aliasTargetZoneIsShared
_chainState
_structuralCKInfo
_contentCKInfo
T@"BRCItemID",R,N,V_parentID
T@"BRFieldCKInfo",R,N,V_structuralCKInfo
T@"BRFieldCKInfo",R,N,V_contentCKInfo
Tc,R,N,V_itemType
TI,R,N,V_chainState
TB,R,N,V_aliasTargetZoneIsShared
_chainPreppedRecordToParent:
setObject:atIndexedSubscript:
protectionData
initWithAppLibrary:
containsRecordInfo:
prepareFirstPhaseRecordBatch
addFullyChainedRecordInfo:
chainPreparedRecordBatch:
chainedRecordsCount
recordsForFirstPhase
recordsForSecondPhase
halfChainedRecordMap
_fullyChainRecordBatch
_fullyChainRecordInfoMap
_halfChainedRecordMap
_alreadyHalfChainedRecords
_recordsForFirstPhase
_should2PhasePCSChain
T@"NSDictionary",R,N,V_halfChainedRecordMap
initWithPCSChainInfo:clientZone:
chainInfo
_chainInfo
_enumerator
pcsChainingMaxPathDepth
brc_errorFolderHierarchyTooDeep
itemIDNeedingListing
_maxPathDepth
_stack
_itemIDNeedingListing
pcsChainingBatchSize
brc_isRetriableForPCSChaining
_sendRecordBatch:recursed:completion:
_sendRecordBatch:completion:
_buildRecordListWithCompletion:
_chainRecords
pcsChainCompletionBlock
shouldFillBatch
_rootItem
_completed
_tryCount
_syncDownBeforeRetry
_chainedRecordsCount
_listOperation
_shouldFillBatch
_pcsChainCompletionBlock
T@?,C,N,V_pcsChainCompletionBlock
TB,N,V_shouldFillBatch
brc_iWorkPathExtensions
initWithImportObject:
_updatePackageItemsIfNecessaryWithImportObject:error:
updateWithImportObject:onlyContentDependentProperties:
fp_isFileProviderError:
br_allEligibleAppleAccounts
loadCachedServerConfiguration
hasMultiAccountsHandling
_getOrCreateAccountHandlerForACAccountID:
createAndLoadSessionWithACAccountID:createBlock:
_garbageCollectOldDomains
serverConfigurationURL
URLWithString:
userDefaultsChanged
setServerConfigurationURL:whenLoaded:
removeDomain:completionHandler:
accountForPersona:
isDataSeparated
br_accountForPersona:
waitForInitialAccountLoadingSynchronously
waitForInitialAccountLoadingWithCompletionHandler:
waitForAccountLoadingOfDomain:
waitForAccountLoadingSynchronously:
accountForCurrentPersona
createSessionWithACAccountID:dsid:completionHandler:
updateAccountDisplayName:completionHandler:
destroySessionWithACAccountID:
_accountHandlersByACAccountID
_versionsProvidersByVolumeID
_finishedLoadingAccounts
_isInSyncBubble
TB,R,N,V_isInSyncBubble
isKnownToServer
setHasGenerationID:
hasGenerationID
setHasSize:
hasSize
hasXattrs
item
_item
T@"BRFieldPkgItem",&,N,V_item
Tq,N,V_fileID
TI,N,V_generationID
T@"NSData",&,N,V_xattrs
_handleServerItemBRAliasIfNeeded:li:
itemTransmogrifier
fallbackParentAppLibraryOnFS
itemGlobalIDFromLocalItem:
T@"BRCZoneRowID",R,N,V_zoneRowID
shouldPreparePCSMigration
blacklistPCSPrep
fetchAllRecordZonesOperation
_createCloudDocsZone:
setFetchRecordZonesCompletionBlock:
initWithSourceZoneIDs:targetZone:
setAggregateZonePCSCompletionBlock:
_fetchZonesNeedingMigration:
_interestingZoneIDs
setSessionDirPath:
setCacheDirPath:
wait
propertiesForDataclass:
host
carryPartitions
_setupSharedPackageExtensionsPlist
attributesOfItemAtPath:error:
filePosixPermissions
appLibraryScanThrottleParams
appLibraryResetThrottleParams
sharedAppLibraryResetThrottleParams
appLibraryAliasRemovalThrottleParams
lostItemThrottleParams
operationFailureThrottleParams
syncClientZoneThrottleParams
syncClientZoneErrorThrottleParams
personaAttributesForPersonaType:
addDomain:completionHandler:
clearURLCache
br_corruptedDBInfoPath
dataWithContentsOfFile:
unarchivedObjectOfClasses:fromData:error:
_createAccountSupportPathIfNeeded:protectParent:
_createGroupContainerDownloadStage
_setupThrottles
_addFPFSDomain
_refreshRootsCache
createRootForSyncedFolderType:
setRoot:forSyncedFolderType:
_enumerateAccountHandlerSupportedFolderTypes:
_markDBOpened
spotlightIndexingEnabled
createAppLibrariesIfNeededWithError:
cloudDocsMangledID
diskSpaceCheckInterval
availableDiskSpaceUsingCache:schedulingPendingDiskItemsIfNeeded:
_submitDBCorruptionTelemetryEventIfNeeded
_fetchUserRecordIDWithCompletionHandler:
_handleTrashedItemsMigration
aggressivelyPCSChainWithSession:
br_aggressiveChaining
_pcsChainAllItemsWithActivity:
dbIntegrityCheckApplyJobs
dbIntegrityCheckSyncUpJobs
dbIntegrityCheckDownloadJobs
dbIntegrityCheckUploadJobs
_recoverAndReportBoosting
transmogrifyXPCActivity
aggressivePCSChainActivity
dbIntegrityCheckXPCActivity
_recoverAndReportMissingJobs
hasNeverSyncedDown
mangledIDIsPendingMigration:
removeAllShareAcceptationSidefaults
_fixupItemsAtStartup
_registerBackgroundXPCActivities
privateCloudDatabase
operationQueue
brc_errorCorruptedDB
createFileAtPath:contents:attributes:
sessionZombiesEnabled
closeXPCClientsSync
_unloadClientZones
addOperationWithBlock:
waitUntilAllOperationsAreFinished
turnObjectIntoZombie:
_closeSharedPackageExtensionsPlist
excludedFilenamesWorthPreserving
excludedExtensionsWorthPreserving
br_isExternalDocumentReference
br_isExcludedButPreservedAtLogOutWithFilenames:extensions:
br_isDocumentTooLargeForUpload:maxUploadDocumentSize:
_recursivelyPrepareFolderForLogOutAtURL:pruneEmptyFolders:pruneEmptyTopLevelFolder:maxDepth:
destroyLocalDataWaitingForFilesToBeUnlinked:pristineContainerIDs:completionBlock:
_validatePersona
forcePurgeWithCompletionBlock:
_mutexZonesLock
isEnterprisePersona
__registerServerZone:clientZone:appLibrary:isShared:
_shouldPrivateAppLibraryBeCZMMoved:
__getOrCreateServerZone:
__getOrCreateClientZone:withServerZone:alreadyExists:
__getOrCreateAppLibrary:rowID:createOnDisk:alreadyExists:withClientZone:createCZMMoved:
_getOrCreateAppLibraryAndPrivateZonesIfNecessary:creationFlags:
getOrCreateSharedZones:shareAcceptOp:
fetchUserRecordIDWithCompletionHandler:
enumerateFileTypesWithFilterBlock:enumerationBlock:
applySyncPolicy:forSyncedFolderType:isInitialCreation:error:
versionNumberForBundleIdentifier:
initWithXPCObject:
updateMetadataWithExtractorProperties:iconPaths:bundleID:
setBoolResult:error:
extractMetadataForContainerID:bundleID:minimumBundleVersion:reply:
result
enumerateObjectsUsingBlock:
_cloudDocsAppsListDidChange:
standardUserDefaults
setOptimizeStorageEnabled:forKey:
synchronize
enableSyncforSyncedFolderType:isInitialCreation:error:
disableSyncforSyncedFolderType:isInitialCreation:error:
_loadClientZonesFromDisk
cloudDocsAppsListDidChange:
registerClient:
unregisterClient:
resetThrottles
_createAppLibraryRootIfNeededAtPath:error:
closeOfflineSession
_unlinkContainersWithPristineContainerIDs:
fallbackAppLibraryForClientZone:extension:
sharedServerZoneByMangledID:
destroySharedClientZone:
assertNotOnZoneMutex
createAppLibraryOnDisk:createdRoot:createdDocuments:rootFileID:
recomputeAppSyncBlockStateForPrivateClientZone:
availableDiskSpaceUsingCache:
setOptimizeStorageEnabled:
computeTotalLiveDocumentSizeWithDb:
startDownloadsForGreediness
lastCiconiaVersion:
_setRootPathXattrValue:forRootPath:error:
_getRootPathXattrValue:forRootPath:error:
removeRootForSyncedFolderType:
syncedFolderTypeForURL:
removeDesktopSymlink:andDocumentsSymlink:
_recreateSymlinkIfNecessaryForDocumentsPath:folderName:destinationPath:
recreateDesktopSymlinksIfNecessary
shouldPathBeDesktopSymlink:
isOpen
userNotification
appLibraryScanThrottle
appLibraryAliasRemovalThrottle
lostItemThrottle
_syncContexts
_defaultScheduler
_dbURL
_dbWatcher
_dbWatcherQueue
_dbCorruptionQueue
_clientTruthWorkloop
_serverTruthWorkloop
_readOnlyWorkloop
_cloudDocsFD
_dbProfilingHook
_miscOperations
_backgroundListOperations
_accountHandler
_isDataSeparated
_offline
_clientDB
_serverDB
_readOnlyDB
_expensiveReadOnlyDB
_clientState
_serverState
_accountDSID
_zonesLock
_libraryRowIDsByMangledID
_appLibrariesByRowID
_serverZonesByZoneRowID
_sharedServerZonesByMangledID
_sharedClientZonesByMangledID
_privateServerZonesByID
_privateClientZonesByID
_fsImporter
_serverChangesApplier
_xpcClients
_globalProgress
_lastDiskSpaceCheckTime
_availableDiskSpace
_totalDiskSpace
_isGreedy
_zonesCreationLock
_reschedulePendingDiskItemsPacer
_updateDiskSpacePacer
_accountIsReady
_accountWaitOperation
_isDBOpened
_isInCarry
_rootsByFolderType
_sessionDirPath
_cacheDirPath
_containerScheduler
_applyScheduler
_fairClientDBScheduler
_autoResumeSyncTimerScheduler
_volume
_fsUploader
_fsDownloader
_syncUpScheduler
_downloadTrackers
_userNotification
_notificationManager
_stageRegistry
_diskReclaimer
_fileUnlinker
_recentsEnumerator
_appLibraryScanThrottle
_appLibraryResetThrottle
_sharedAppLibraryResetThrottle
_appLibraryAliasRemovalThrottle
_lostItemThrottle
_syncClientZoneThrottle
_syncClientZoneErrorThrottle
_resetQueue
_itemTransmogrifier
_analyticsReporter
TB,R,N,V_isOpen
T@"NSString",&,N,V_sessionDirPath
T@"NSString",&,N,V_cacheDirPath
T@"BRDSIDString",R,N,V_accountDSID
T@"NSString",R,N,V_ubiquityTokenSalt
T@"BRCGlobalProgress",R,N,V_globalProgress
T@"BRCDeadlineScheduler",R,N,V_defaultScheduler
T@"BRCApplyScheduler",R,N,V_applyScheduler
T@"BRCContainerScheduler",R,N,V_containerScheduler
T@"BRCFairScheduler",R,N,V_fairClientDBScheduler
T@"BRCTimerScheduler",R,N,V_autoResumeSyncTimerScheduler
T@"BRCFSUploader",R,N,V_fsUploader
T@"BRCFSDownloader",R,N,V_fsDownloader
T@"BRCSyncUpScheduler",R,N,V_syncUpScheduler
T@"BRCVolume",R,N,V_volume
T@"BRCDownloadTrackers",R,N,V_downloadTrackers
T@"BRCItemTransmogrifier",R,N,V_itemTransmogrifier
T@"BRCAnalyticsReporter",R,N,V_analyticsReporter
T@"BRCNotificationManager",R,N,V_notificationManager
T@"BRCStageRegistry",R,N,V_stageRegistry
T@"BRCDiskSpaceReclaimer",R,N,V_diskReclaimer
T@"BRCFileUnlinker",R,N,V_fileUnlinker
T@"BRCUserNotification",R,N,V_userNotification
T@"BRCRecentsEnumerator",R,N,V_recentsEnumerator
T@"BRCAccountWaitOperation",R,N
T@"BRCAccountHandler",R,N,V_accountHandler
T@"NSString",R,N,V_personaIdentifier
TB,R,N,V_isDataSeparated
TB,R,N,V_offline
T@"BRCThrottle",R,N,V_appLibraryScanThrottle
T@"BRCThrottle",R,N,V_appLibraryResetThrottle
T@"BRCThrottle",R,N,V_sharedAppLibraryResetThrottle
T@"BRCThrottle",R,N,V_appLibraryAliasRemovalThrottle
T@"BRCThrottle",R,N,V_lostItemThrottle
T@"BRCThrottle",R,N,V_operationFailureThrottle
T@"BRCThrottle",R,N,V_syncClientZoneThrottle
T@"BRCThrottle",R,N,V_syncClientZoneErrorThrottle
T@"NSObject<OS_dispatch_queue>",R,N,V_resetQueue
_stepNameAtIndex:withPrefix:
_isFolderShare
_isiWorkShare
_activateSharedZoneIfNeeded
_openShareURLInWebBrowser:withReason:
_isLinkInsideFolderShare
_isOwner
_runningShareIDs
userNotificationClass
_isAppInstalled
_isFolderSharingSupported
_isUserSignedInToiCloudDrive
_showSharingJoinDialog
_parseShareMetadata
_startShareAccept
_openiWorkAppPreemptively
_locateSharedItemOnOwner
_waitForSharedItemToSyncDownOnOwner
_waitForSharedItemToBeOnDiskOnOwner
_createSideFaultOnDisk
_waitForSharedItemToBeOnDiskOnRecipient
_checkIfShouldWaitUntilDownloadCompletion
_openSharedSideFaultFile
_finishShareAccept
_locateSharedItemOnRecipient
_waitForSharedItemToSyncDownOnRecipient
_locateSharedItemOnDisk
_setSpotlightAttribute
_openSharedItemIfStillNeeded
_endAcceptationFlow
_isAccountRestricted
_prepareToDownloadSharedDocument
_performNextStep
methodForSelector:
_performNextStepInQueue
indexOfObject:
_jumpToSelectorInQueue:
participantRole
participantStatus
sharedItemHierarchyIDs
_isDocumentLinkInsideFolderShare
brc_applicationContainerID
getUserVisibleURLForItemIdentifier:completionHandler:
_showGenericErrorAndFinish:
isBlacklistedFromFolderSharing
_isiWorkLinkInsideFolderShare
brc_applicationBundleID
bundleProxyForIdentifier:
bundleURL
_openAppStoreForShareURL:
brc_errorNoSuitableClientApp
isBidirectionalDataTransferAllowedWithBundleID:
entitlements
_openiCloudSettings
brc_errorDriveDisabledOrAppLibraryDisabled
_isOwnerOrShareAlreadyAccepted
addAcceptOperation:forItemID:
brc_errorAcceptAlreadyInProgressForURL:
defaultWorkspace
openApplicationWithBundleID:
_createServerFaultIfPossibleWithCompletion:
participantPermission
_isDirectoryLinkInsideFolderShare
_captureOpenInfoFromItem:
br_errorWithDomain:code:userInfo:description:
operationToOpenResource:usingApplication:uniqueDocumentIdentifier:isContentManaged:sourceAuditToken:userInfo:options:delegate:
applicationProxyForIdentifier:
appState
isInstalled
initWithURL:resolvingAgainstBaseURL:
setScheme:
openSensitiveURL:withOptions:error:
_openSharedSideFaultFileWithAppID:
_openDocumentInDocumentsAppIfInstalled:
rootRecordID
serverAliasItemForSharedItem:
openSensitiveURL:withOptions:
componentsWithURL:resolvingAgainstBaseURL:
query
setQuery:
setFragment:
openURL:withOptions:
openResourceOperation:didFinishCopyingResource:
openResourceOperationDidComplete:
openResourceOperation:didFailWithError:
initWithShareMetadata:client:session:
moveDialogToFront
_jumpToSelector:
skipOpenInApp
_acceptationFlow
_stepIndex
_shareURL
_linkItemRecordID
_linkItemID
_linkFileObjectID
_needsZoneAndAppLibraryActivation
_acceptOperation
_allowsDirectoryFaults
_liveFileURL
_accessedSecurityScope
_shareAcceptGroup
_rootFilename
_linkFilename
_xpcClient
_shareAcceptationError
_skipOpenInApp
TB,N,V_skipOpenInApp
_addTransfer:
_finishedTransfer:error:
_cancelTransferID:
_setProgress:forTransfer:
sendBatchProgressedCallback
_finishedTransferForRecord:recordID:error:
brc_cloudKitErrorForRecordID:
setTotalSize:
didProgressBlock
_entriesByRecordID
_entriesBySecondaryRecordID
_entriesByTransferID
_itemsCount
_didProgressBlock
_pendingGroup
T@?,C,V_didProgressBlock
TQ,V_totalSize
TQ,V_doneSize
T@"NSObject<OS_dispatch_group>",R,N,V_pendingGroup
startFgColor:bgColor:attr:
write:
startFgColor:attr:
startBgColor:attr:
startFgColor:
startBgColor:
startAttributes:
changeFgColor:
changeBgColor:
changeAttributes:
initWithProblem:
zoneHealthReportedRecordNamesCount
setByAddingObjectsFromSet:
initWithType:recordName:
mergeWithProblem:
effectedRecordNames
_effectedRecordNames
Ti,R,N,V_type
T@"NSSet",R,N,V_effectedRecordNames
healthErrorsToReport
initWithProblemReport:
_priorityForProblemType:
_effectiveProblemType
_zoneStateForProblemType:
_addProblem:
effectiveProblemMessage
healthErrorsForReset
_problems
_needsSyncUp
_pendingRequestID
Ti,R,N,V_state
T@"NSNumber",&,N,V_pendingRequestID
TB,N,V_needsSyncUp
initWithServerZoneHealthState:
stringWithCString:encoding:
brc_fileURLWithFileDescriptor:
ignoredQuarantineMask
initWithLength:
mutableBytes
xattrNamesListBegin
xattrNamesListEnd
xattrNamesEnd
structuralXattrNamesEnd
contentXattrNamesEnd
getXattrValue:error:
clearCache
_xattrNamesList
_xattrNamesData
_xattrCount
_contentXattrCount
_sizeLimit
_cacheSize
_cachedXattrs
_purge
_suspendCount
_cachePurgeSource
_unlinkRootPath
_versionIdentifier
T@"NSString",&,N,V_versionIdentifier
_scheduleAsync
_doneWithError:
treeEnumeratorBatchSize
_iterate:
firstIndex
removeIndex:
__iterate:
_visitNewParent
initWithSession:tracker:
initWithSession:group:
completionHandler
_rowID
_seen
_toVisit
_strongSelf
_completionHandler
T@?,C,N,V_completionHandler
br_logout
initWithSession:appLibraries:
_zonesStillUploading
_hiddenZoneWithError
_perContainerIDError
stringByRemovingPercentEncoding
capitalizedString
additionURLForName:storagePrefix:inConflictNamespace:
label
cancelled
resolveRecordType
initWithChangedRecord:shareID:xattrSignatureNeedingFetch:structureRecordBlockingSave:
initWithRecordIDNeedingFetch:recordType:
isWaitingOnShareIDFetch
recordIDBlockingSave
setRecordIDBlockingSave:
_recordType
_recordIDBlockingSave
T@"CKRecord",R,N,V_record
Tq,R,N,V_recordType
T@"CKRecordID",&,N,V_recordIDBlockingSave
_openDB
pendingChangesStreamSoftOpenCount
pendingChangesStreamHardOpenCount
_closeDB
pendingChangesStreamCloseDelay
_initDeltaSyncWithChangeToken:serverZone:
_dropExistingTablesWithDB:
_dbBecameCorrupted:withDescription:
_createSchemaIfNecessary
useSerialQueue
_wasClosed
_wasAccessed
_recordTypeFromRecordID:isShare:isDelete:
_saveSubResourceRecord:
_finishedFetchingRecordMetadata:
fetchTokenState:
saveEditedRecords:deletedRecordIDs:deletedShareIDs:subResourceEditedRecords:serverChangeToken:clientChangeToken:
saveEditedRecords:subResourceEditedRecords:queryCursor:
saveSubResourceRecords:afterSavingMainTableItems:queryCursor:
copyBlockingSaveRecordsToNeedingFetchIgnoringRecords:
enumerateRecordsNeedingXattrFetchWithBlock:
enumerateRecordsNeedingMetadataFetchWithBlock:
hasFetchRecordByID:
hasRecordIDBlockedOnSubResources:
hasRecordIDsToDeserialize
hasXattrsToFetch
hasSubResourceRecords
hasRecordDeletes
finishedFetchingXattrSignatures:
unblockRecordSavesWaitingOnRecordID:
_destroyDatabase
_startingChangeToken
_label
_hasBeenCreated
_dbHasOpened
setSerializedNameComponents:
hasSerializedNameComponents
serializedNameComponents
_serializedNameComponents
T@"NSData",&,N,V_serializedNameComponents
encryptedPublicSharingKey
brc_errorPermissionError:
displayedHostname
setDisplayedHostname:
setWantsPublicSharingKey:
_performAfterCopyingPublicSharingKeyWithRecordID:completion:
_shouldFetchSharingIdentity:
_performAfterGettingPublicSharingKeyForRecord:completion:
_performAfterFetchingiWorkRoutingTokenIfNecessary:completion:
_performAfterFetchingiWorkSharingIdentityOnItem:wantRoutingKey:completion:
_performAfterFetchingSharingIdentityOnDocumentItem:wantRoutingKey:completion:
_performAfterFetchingSharingIdentityOnDirectoryItem:wantRoutingKey:completion:
_performAfterPreparingSharingIdentityIfNecessaryWhenWantRoutingKey:completion:
initWithName:zone:share:
_updateDBAndSyncDownIfNeededWithShare:recordsToLearnCKInfo:
performAfterPreparingSharingIdentityIfNecessary:
_share
_sharingIdentityPreparedRecord
brc_errorItemNotShareable
brc_errorItemAlreadyPartOfAShare
preventSharingFolderWithPendingDelete
containsPendingDeleteDocuments
brc_errorItemInTrash
performAfterUnsharingParentShareTurdIfNecessary:
initWithShare:zone:
initWithUserIdentityLookupInfos:
setShareParticipantFetchedBlock:
setFetchShareParticipantsCompletionBlock:
initWithUserIdentities:session:
_userIdentities
_shareParticipants
initWithRecordIDsToGrantAccess:recordIDsToRevokeAccess:
setRecordAccessGrantedBlock:
setRecordAccessCompletionBlock:
initWithItem:allowAccess:
_document
_allowAccess
_accessToken
_referenceIdentifier
fetchParticipantDocumentToken
initWithShareIDs:
setBaseTokensByShareID:
setChildRecordIDsByShareID:
setShareParticipantKeyFetchedBlock:
setShareParticipantKeyCompletionBlock:
_completeWithResult:participantKey:
_fetchParticipantDocumentTokenWithCompletion:
_fetchParticipantKeyWithCompletion:
_fetchBaseTokenWithCompletion:
_contentRecordID
_participantDocumentToken
_participantKey
_baseToken
_iWorkShareable
_isChildOfShare
_shouldFetchParticipantDocumentToken
_performPCSChainBatch
_serverItem
CKAssignToContainerWithID:
_completedWithURL:error:
initWithShare:zone:appName:
_appName
initWithRootRecord:shareID:
shortToken
initWithShareID:emptyRecord:
emptyRecord
_emptyRecord
T@"CKRecordID",R,N,V_shareID
T@"CKRecord",R,N,V_emptyRecord
deleteShareIDBatchCount
_stopObservingListOperation
subarrayWithRange:
removeSharedSubitemsWithCompletion:
brc_errorFolderHasSharedSubitemsWithSharedByMeURLs:sharedToMeURLs:
computeURLForItemID:rootURL:
processServerItemsUnderItemID:completion:
deleteShareInfoFromZone:zoneRowID:itemID:sharingOptions:itemsTable:
enumerateItemsWithShareIDUnderParent:block:
_completeAfterProcessingClientTruthIfNecessaryWithError:
_completeAfterProcessingServerTruthIfNecessaryWithError:
processServerTruthWithCompletion:
processClientTruthWithCompletion:
initWithItem:processType:maxSubitemsToFail:
_failedSubitemsLeft
_processType
_sharedClientSubitems
_sharedServerSubitems
_aliasItemsToDelete
_shareIDsToDelete
_activeListOperations
_rootClientZone
_isFSRoot
_alreadyHasShareID
clearOneofValuesForMagnitude
setMagnitudeFloat:
setHasMagnitudeFloat:
hasMagnitudeFloat
setHasMagnitudeDouble:
hasMagnitudeDouble
setHasMagnitudeInt:
hasMagnitudeInt
setHasMagnitudeBool:
hasMagnitudeBool
setHasMagnitudeLong:
hasMagnitudeLong
magnitude
setMagnitude:
setHasMagnitude:
hasMagnitude
magnitudeAsString:
StringAsMagnitude:
setHasTimestamp:
hasTimestamp
hasInvestigation
magnitudeFloat
magnitudeDouble
magnitudeInt
magnitudeBool
magnitudeLong
timestamp
_magnitudeDouble
_magnitudeLong
_timestamp
_identifier
_investigation
_magnitude
_magnitudeFloat
_magnitudeInt
_magnitudeBool
TI,N,V_identifier
Tf,N,V_magnitudeFloat
Td,N,V_magnitudeDouble
Ti,N,V_magnitudeInt
TB,N,V_magnitudeBool
Tq,N,V_magnitudeLong
Ti,N,V_magnitude
TQ,N,V_timestamp
T@"AppTelemetryInvestigation",&,N,V_investigation
fallbackParentItemIDOnFS
fallbackParentServerItemOnFS
fallbackParentItemOnFS
parentItemIDOnFSInDB:
_brc_isCloudKitErrorCode:
_brc_isCloudKitInternalErrorCode:
_brc_cloudKitInternalWithErrorCode:
br_cloudKitErrorForIdentifier:
_brc_isCloudKitPluginErrorCode:
_brc_cloudKitPluginErrorPayload
_brc_isCloudKitInternalErrorSafeToSyncUpWithoutSyncDown
_brc_isCloudKitZoneNotFoundError
_brc_isCloudKitZoneUserDeletedError
brc_description
brc_shouldRetryLater
brc_isCloudKitErrorZoneUndergoingMigration
brc_daemonAccessDisabledError
initialize
sourceForBitIndex:
_runEventHandler
unregisterSources
addSource:
signalSourceForBitIndex:
_workloop
_maxRegistedSourceBit
_lastVisitedBit
_sourceForBitIndex
T@"NSObject<OS_dispatch_workloop>",R,N
eventHandler
_schedulerBitIndex
_scheduler
_signaled
_eventHandler
T@"NSObject<OS_dispatch_workloop>",&,N,V_workloop
T@?,C,N,V_eventHandler
unsignedCharValue
initWithRecordIDsToWebShare:recordIDsToUnshare:
_updateItemAfterShareCompleted
setWebShareRecordsCompletionBlock:
numberWithChar:
setRecordSharedBlock:
setRecordUnsharedBlock:
setRecordIDsToShareReadWrite:
initWithDocumentItem:forPublish:readonly:
_recordIDs
_forPublish
_readonly
_sharingInfo
wrapperOperationCompletionHandler
setWrapperOperationCompletionHandler:
initWithSyncContext:subOperations:
_resultDictionary
_wrapperOperationCompletionHandler
T@?,C,N,V_wrapperOperationCompletionHandler
_needsContainerMetadataSyncDown
_needsSharedDBSyncDown
_hasCaughtUpAtLeastOnce
_ckGroup
T@"NSDate",R,N,V_lastSyncDownDate
T@"CKServerChangeToken",R,N,V_serverChangeToken
TB,N,V_needsContainerMetadataSyncDown
TB,N,V_needsSharedDBSyncDown
TB,N,V_hasCaughtUpAtLeastOnce
T@"CKOperationGroup",&,N,V_ckGroup
initWithZoneHealthState:
_needsSyncDown
T@"NSDate",R,V_lastSyncDownDate
TB,N,V_needsSyncDown
_needsSync
TB,N,V_needsSync
_totalCount
initWithParentPath:error:
nextObjectWithIsDir:error:
_dir
_parentPath
initForEnumeratingBelow:recursive:error:
_recursive
_err
initForEnumeratingBelow:recursive:batchSize:targetQueue:
scheduleWithProcessBlock:completion:
rootPath
_targetQueue
_rootPath
T@"BRCRelativePath",R,N,V_rootPath
setUserInfo:
processIdentifier
isUsingUbiquity
_stopMonitoringProcess
cancelAllOperations
setUnderlyingQueue:
bundleID
_process:didBecomeForeground:
_isAutomationEntitled
process:didBecomeForeground:
addProcessMonitor:forProcessID:
_startMonitoringProcessIfNeeded
removeProcessMonitor:
brc_errorDaemonShouldBeLoggedOut
_hasPrivateIPCEntitlementForSelector:error:
_isAppLibraryProxyEntitled
cloudEnabledStatus
_hasAccessToAppLibraryID:error:
_canCreateAppLibraryWithID:error:
_isAppLibraryProxyWithError:
accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:
_entitlementBooleanValueForKey:
cloudEnabledStatusForSession:
_entitlementValueForKey:ofClass:
valueForEntitlement:
defaultAppLibraryID
isProxyEntitled
isAutomationEntitled
isSharingPrivateInterfaceEntitled
applicationIdentifier
_auditURL:
_overrideSessionForURL:
canAccessPath:accessKind:
brc_errorPathOutsideAnyCloudDocsAppLibraryAtURL:
br_mightBeBRAlias
_becameXPCCLientOfSession:
_finishedXPCClientOfSession:
_setupAppLibrary:error:
canAccessPhysicalURL:
issueContainerExtensionForURL:error:
initWithNonSandboxedAppWithAppLibraryIDs:bundleID:auditToken:
defaultMangledID
_auditedURLFromPath:
performBlock:withSessionFromURL:
performBlockWithAnySession:
canAccessLogicalOrPhysicalURL:accessKind:session:
_setupAppLibraryAndZoneWithID:recreateDocumentsIfNeeded:reply:
setupNonSandboxedAccessForUbiquityContainers:forBundleID:
_startSharingOperationAfterAcceptation:client:item:
clientPriviledgesDescriptor
setClientPriviledgesDescriptor:
setIsUsingUbiquity:
_invalidated
_clientPriviledgesDescriptor
_operationQueue
__session
_clientPid
_dieOnInvalidate
_isForeground
_personaMonitorCounts
_isUsingUbiquity
_connection
T@"BRCClientPrivilegesDescriptor",&,N,V_clientPriviledgesDescriptor
T@"BRCAccountSession",&,N,V__session
TB,N,V_isUsingUbiquity
T@"NSXPCConnection",R,W,N,V_connection
TB,R,N,V_dieOnInvalidate
br_isEnabledForDesktopSync
prepareFileProvidersWithReply:
currentAccountCopyTokenWithBundleID:version:reply:
getPrimaryiCloudAccountStatus:
fetchContainerPathForCurrentPersonaWithReply:
fetchGroupContainerPathForCurrentPersonaWithReply:
getContainerURLForID:recreateDocumentsIfNeeded:reply:
brc_errorNoAppLibraryForBundle:
getQueryItemForURL:reply:
updateItemFromURL:reply:
evictItemAtURL:options:reply:
thumbnailChangedForItemAtURL:reply:
allLoggedInAccountDescriptors
localizedName
documentsURL
applicationProxyForIdentifier:placeholder:
defaultTimeDeltaForEviction
defaultOnDiskAccessTimeDefaultForEviction
performOptimizeStorageWithTimeDelta:onDiskAccessTimeDelta:error:
resolveConflictWithName:atURL:reply:
containerIDsForApplicationIdentifier:
br_firstName
br_lastName
br_isManagedAppleID
brc_errorUnknownKey:
_loggedInUserPropertyValuesForKeys:error:
_gatherInformationForPath:session:reply:
br_zoneHealthSimulation
forceSyncContainerID:reply:
isDocumentID
globalItemByDocumentID:
computePurgeableSpaceForAllUrgenciesWithReply:
periodicReclaimSpace
launchItemCountMismatchChecksAtURL:reply:
getBookmarkDataForURL:onlyAllowItemKnowByServer:allowAccessByBundleID:reply:
getBackReferencingContainerIDsForURLs:reply:
currentCalendar
components:fromDate:toDate:options:
rangeOfUnit:inUnit:forDate:
timeIntervalSinceReferenceDate
startOfDayForDate:
currentLocale
dateFormatFromTemplate:options:locale:
minFetchQuotaInterval
enumerateContainersWithDB:handler:
maxFolderEnumerationDepth
_enumerateFoldersWithParent:depth:session:db:handler:
br_publishingRequest
setFileNamesByAssetFieldNames:
publishURLTimeout
setRequestedTTL:
setURLOptions:
downloadURL
downloadURLExpiration
setPublishAssetCompletionBlock:
setAssetPublishedBlock:
forceConflictForURL:bookmarkData:forcedEtag:reply:
setiWorkPublishingInfoAtURL:publish:readonly:reply:
getiWorkPublishingInfoAtURL:reply:
getiWorkPublishingBadgingStatusAtURL:reply:
getiWorkNeedsShareMigrateAtURL:reply:
brc_errorDocumentIsNoLongerSharedAtURL:
values
isSharingProxyEntitled
_startOperation:toCopySharingInfoWithLocalItem:reply:
canFetchUserQuota
br_quotaUpdateXPC
startOperation:toEvictItemAtURL:reply:
br_fetchIdentityXPC
fetchFullNameAndPrimaryEmailOnAccountWithCompletionHandler:
copyCollaborationIdentifierForItemAtURL:reply:
_createSharingInfoForLocalItem:reply:
isFolderSharingProxyEntitled
deleteShareOnEmptySave
startOperation:toUnshareShare:forceDelete:reply:
_startOperation:toModifyRecordAccessWithLocalItem:allowAccess:reply:
_startOperation:toCopyParticipantTokenWithLocalItem:reply:
reportXPCErrorOnPCSChain
_startOperation:toPrepFolderForSharingWithLocalItem:reply:
_startOperation:toProcessSubitemsWithLocalItem:maxSubsharesFailures:processType:reply:
copyBulkShareIDsAtURLs:reply:
getCreatorNameComponentsForURL:reply:
_presentAcceptDialogsWithMetadata:reply:
presentAcceptDialogsForShareMetadata:reply:
removeItemFromDisk:reply:
trashItemAtURL:reply:
excludedFilenamesWorthWarningAtLogout
updateCloudEnabledStatus
pauseSyncForFileAtURL:timeout:options:reply:
resumeSyncForFileAtURL:dropLocalChanges:reply:
fetchLatestVersionForFileAtURL:reply:
_sendPausedFileListBatchToUpdater:fromRowID:batchSize:completion:
iWorkFetchPausedFilesBatchSize
BouncingCountOnSameType
BouncingCountFromDirToLnk
BouncingCountFromDirToAls
BouncingCountFromDirToPkg
BouncingCountFromDirToDoc
BouncingCountFromLnkToDir
BouncingCountFromLnkToAls
BouncingCountFromLnkToPkg
BouncingCountFromLnkToDoc
BouncingCountFromAlsToDir
BouncingCountFromAlsToLnk
BouncingCountFromAlsToPkg
BouncingCountFromAlsToDoc
BouncingCountFromPkgToDir
BouncingCountFromPkgToLnk
BouncingCountFromPkgToAls
BouncingCountFromPkgToDoc
BouncingCountFromDocToDir
BouncingCountFromDocToLnk
BouncingCountFromDocToAls
BouncingCountFromDocToPkg
floatValue
errorOriginatorId
sideFaultsBelowThreshold
nonSideFaultsCompletelyMigrated
typeOfMigrated
expectedAmountOfItemsMigrated
itemsThatAreNotMigrated
typeOfNotMigrated
materialisedCountOnICD
materialisedCountOnFPFS
cloningDuration
importDuration
manuallyTriggered
bouncedItems
_isErrorAnExpectedError:originatorId:
handleCloudKitShareMetadata:completionHandler:
willAcceptShareAtURL:
startOperation:toCopyShareURLForShare:appName:reply:
startOperation:toSaveSharingInfo:reply:
copyCurrentUserNameAndDisplayHandleWithReply:
startOperation:toCopyDocumentURLForRecordID:syncIfNeeded:reply:
startOperation:toLookupShareParticipants:reply:
setupInstanceWithDict:reply:
resetBudgets:reply:
dumpDatabaseTo:containerID:personaID:includeAllItems:reply:
dumpCoordinationInfoTo:reply:
performSelfCheck:reply:
printStatus:containerID:reply:
gatherInformationForPath:reply:
simulateHealthIssueWithContainer:status:reply:
healthStatusStringForContainer:reply:
zoneNameForContainer:reply:
forceSyncWithBarrierContainerID:timeout:reply:
forceSyncZoneHealthWithBarrierWithTimeout:reply:
iWorkForceSyncContainerID:ownedByMe:reply:
purgeAmount:withUrgency:reply:
reclaimAmount:withUrgency:reply:
dropSpotlightIndexWithReply:
waitForFileSystemChangeProcessingWithReply:
launchSyncConsistencyChecksWithReply:
pauseSyncConsistencyWithReply:
resumeSyncConsistencyWithReply:
cancelTreeConsistencyCheckWithReply:
createContainerWithID:ownerName:reply:
getContainersByID:
getContainerForMangledID:personaID:reply:
checkinAskClientIfUsingUbiquity:
presyncContainerWithID:reply:
getContainerURLForID:reply:
getContainerURLForID:forProcess:reply:
updateContainerMetadataForID:
deleteAllContentsOfContainerID:onClient:onServer:wait:reply:
registerInitialSyncBarrierForID:reply:
startOperation:toDownloadItemAtURL:readingOptions:wantsCurrentVersion:reply:
getItemUpdateSenderWithReceiver:reply:
queryPathsForPersona:reply:
querySyncedRootURLsForPersona:reply:
queryLoggedInAccountDescriptorsWithReply:
getTotalApplicationDocumentUsageWithReply:
getApplicationDocumentUsageInfoForBundleID:withReply:
hasOptimizeStorageWithReply:
setStorageOpimizationEnabled:reply:
evictOldDocumentsWithReply:
iCloudDesktopSettingsChangedWithAttributes:reply:
didReceiveHandoffRequestForBundleID:reply:
getLoggedInUserPropertyValuesForKeys:reply:
createAccountWithACAccountID:dsid:reply:
logoutAccountWithACAccountID:reply:
updateAccountDisplayName:reply:
invalidateAccountCacheWithReply:
getContainersNeedingUpload:
setMigrationStatus:forDSID:shouldUpdateAccount:reply:
getMigrationStatusForPrimaryiCloudAccount:
getSyncState:reply:
jetsamCloudDocsAppsWithReply:
resolveBookmarkDataToURL:reply:
resolveFileObjectIDsToContentRecordIDs:reply:
resolveFileObjectIDToURL:reply:
getApplicationStatus:
getApplicationStatusForProcess:reply:
getLastSyncDateWithReply:
getLocalizedLastSyncWithReply:
getContainerStatusWithID:reply:
getContainerLastServerUpdateWithID:reply:
getIsContainerWithIDOverQuota:reply:
currentNotifRankWithReply:
enumerateItemsInFolder:sortOrder:offset:limit:completion:
enumerateAllFoldersWithSortOrder:offset:limit:completion:
enumerateWorkingSetChangesFromChangeToken:limit:completion:
startOperation:toCopySharingWebAuthTokenForContainerID:reply:
startOperation:toCopyAvailableQuotaWithReply:
startOperation:toUploadAllFilesInContainer:reply:
startOperation:toAcceptShareLink:skipAcceptDialogs:reply:
copyCurrentUserIdentifierWithReply:
copyCurrentUserNameAndEmailWithReply:
updatePrivilegesDescriptor
refreshSharingStateForItemIdentifier:reply:
checkIfItemIsShareableWithInode:reply:
getShareOptionsOfItemIdentifier:reply:
lookupExcludedFilenamesForLogoutWithReply:
lookupExcludedExtensionsForLogoutWithReply:
lookupMinFileSizeForThumbnailTransferWithReply:
getPausedFilesList:reply:
copyCollaborationIdentifierForFileObjectID:reply:
_t_getEntitlementsForBundleID:reply:
_t_getEntitledContainerIDsForBundleID:reply:
_t_extractMetadataForAllContainersWithReply:
queryLastCiconiaVersion:
signalStartOfSilentTelemetry:uuid:manual:version:reply:
reportItemMismatchDuringSilentMigration:information:uuid:reply:
reportCleanupFailureDuringSilentMigration:operationType:uuid:reply:
reportOverBounceDuringSilentMigration:total:uuid:reply:
reportFinishedMigration:uuid:reply:
queryTelemetryEnablement:
corruptDatabase:
_unregisterPrematurely
startOperation:toCopySharingInfoWithItemID:reply:
createSharingInfoForItemID:reply:
startOperation:toModifyRecordAccessWithItemID:allowAccess:reply:
startOperation:toCopyParticipantTokenWithItemID:reply:
startOperation:toPrepFolderForSharingWithItemID:reply:
startOperation:toProcessSubitemsWithItemID:maxSubsharesFailures:processType:reply:
localizedStringForKey:value:table:
currentServerChangeToken
initWithRecordZoneIDs:
setAllowsCellularAccess:
scheduleSyncDownIfNeededForZoneID:zoneIfAny:
allowsCellularAccess
scheduler
metadataChangeToken
zoneHealthChangeToken
sideCarChangeToken
_metadataChangeToken
_zoneHealthChangeToken
_sideCarChangeToken
T@"BRCContainerScheduler",R,N,V_scheduler
T@"CKServerChangeToken",R,N,V_metadataChangeToken
T@"CKServerChangeToken",R,N,V_zoneHealthChangeToken
T@"CKServerChangeToken",R,N,V_sideCarChangeToken
userInitiated
initWithDesiredVersion:
isStillValidForEtag:
_downloadError
_serverName
T@"NSError",&,N,V_downloadError
T@"NSString",R,N,V_serverName
TI,N
_reportRecords:requestID:
_setXattrs:session:
assetRank
itemRowID
_itemRowID
_pathInPackage
_assetRank
_isDirty
TQ,R,N,V_itemRowID
T@"BRCGenerationID",R,N,V_generationID
T@"NSString",R,N,V_pathInPackage
Tq,R,N,V_assetRank
Tq,R,N,V_mtime
Tc,R,N,V_mode
T@"NSData",R,N,V_xattrSignature
fairScheduler
addSource:deadline:
willRunEvenHandler
runEventHandler
_deadline
_setupTimerRequiredForDeadline:now:
runDeadlineSource:completionHandler:
coalescingLeeway
computeNextAdmissibleDateForScheduling
_minHeap
_leeway
_lastSchedule
_isResumed
_computeNextAdmissibleDateForScheduling
T@"BRCFairScheduler",R,N,V_fairScheduler
Tq,N,V_leeway
T@?,C,N,V_computeNextAdmissibleDateForScheduling
_contextIdentifierForMangledID:metadata:
readerThrottleParams
applyThrottleParams
downloadThrottleParams
uploadThrottleParams
uploadFileModifiedThrottleParams
perItemSyncUpThrottleParams
discretionaryRecursiveListMaxOperationCount
nonDiscretionaryRecursiveListMaxOperationCount
uploadBatchRecordsCount
downloadBatchCount
downloadBatchRecordsCount
initWithContainerIdentifier:environment:
initWithAccountID:
setAccountOverrideInfo:
initWithContainerID:options:
setSourceApplicationSecondaryIdentifier:
sharedCloudDatabase
preventConcurrentModifyRecordsOperations
containerCellularSettings
isCellularEnabled
addOperation:allowsCellularAccess:nonDiscretionary:
nsurlsessiondEnabled
discretionaryNetworkBehavior
_preventConcurrentModifyRecordsOperations:nonDiscretionary:
accountOverrideInfo
accountID
_notifyFrameworkContainersMonitorWithState:
_notifyContainerBeingNowForeground
notifyDuetFromAccessByBundleID:
br_syncDownAppLaunch
_armForegroundGraceTimerForClientDescription:
foregroundGracePeriod
metadataContextIdentifierForMangledID:
transferContextIdentifierForMangledID:
initWithSession:contextIdentifier:isShared:
addOperation:nonDiscretionary:
waitForAllOperations
forceContainerForegroundForDuration:
readerThrottle
_contextIdentifier
_isShared
_notifyTokenForFramework
_lastForegroundClientDescription
_dateWhenLastForegroundClientLeft
_timerForGraceForegroundPeriod
_timerForForcedForegroundPeriod
_foregroundStateQueue
_foregroundState
_nonDiscretionaryModifyOperations
_discretionaryModifyOperations
_nonDiscretionaryRecursiveListOperationQueue
_discretionaryRecursiveListOperationQueue
_applyThrottle
_downloadThrottle
_uploadThrottle
_uploadFileModifiedThrottle
_perItemSyncUpThrottle
_uploadStream
_downloadStream
T@"NSString",R,N,V_contextIdentifier
T@"BRCUserDefaults",R,N
TB,R,N,V_isShared
T@"CKContainer",R,N
T@"CKContainerID",R,N
T@"BRCTransferStream",R,N,V_uploadStream
T@"BRCTransferStream",R,N,V_downloadStream
T@"BRCThrottleBase",R,N,V_readerThrottle
T@"BRCThrottleBase",R,N,V_applyThrottle
T@"BRCThrottleBase",R,N,V_uploadThrottle
T@"BRCThrottleBase",R,N,V_uploadFileModifiedThrottle
T@"BRCThrottleBase",R,N,V_perItemSyncUpThrottle
T@"BRCThrottleBase",R,N,V_downloadThrottle
_syncContextForContextIdentifier:isShared:createIfNeeded:
_serverChildItemCount
_repopulateRecursivePropertiesIfNecessary
_retryPostponedIfNeededForDiffs:
_insertRecursiveProperties
_recomputeChildItemCount
_updateRecursiveProperties
containsOverQuotaItems
containsPendingDownload
transformIntoFSRoot
clientZonesChildrenNeedingSyncUpAreIn
doubleForKey:inParams:defaults:
setupWithParams:defaults:
paramsToDictionary
initWithParams:defaults:
setMinWait:
setMaxWait:
setRatioOnSuccess:
setRatioOnFailure:
setRatioOnQuotaErrorClear:
setInactivityKickbackDelay:
setInactivityKickbackRatio:
Td,N,VminWait
Td,N,VmaxWait
Td,N,VratioOnSuccess
Td,N,VratioOnQuotaErrorClear
Td,N,VratioOnFailure
Td,N,VinactivityKickbackDelay
Td,N,VinactivityKickbackRatio
initAsGlobalWithServerConfiguration:
_prepopulateGlobalUserDefaults
addObserverForName:object:queue:usingBlock:
initWithServerConfiguration:globalUserDefaults:clientZoneIdentifier:
_loadServerConfigurationDictionary
configurationUpdateXPCActivity
_setServerConfigurationURL:whenLoaded:
br_forceMoveItemAtURL:toURL:error:
_parsePlistWithURL:
originalRequest
currentRequest
backgroundSessionConfigurationWithIdentifier:
setHTTPCookieStorage:
setURLCredentialStorage:
setURLCache:
setDiscretionary:
sessionWithConfiguration:delegate:delegateQueue:
downloadTaskWithURL:
_reset
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:downloadTask:didFinishDownloadingToURL:
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
initWithPersonaID:
defaultsForIdentifier:
_serverConfigurationURL
_serverConfigurationDict
_userDefaultsCache
_configurationPlistDidUpdateBlock
_downloadQueue
_urlSession
_defaultsDidChangeNotificationObserver
_userDefaultsManager
_serverDefaultForKey:
dictionaryForKey:
objectForKey:inheritFromGlobal:validateWithBlock:
_loadObjectForKey:inheritFromGlobal:validateWithBlock:
unsignedIntForKey:inheritFromGlobal:min:max:byDefault:
floatForKey:inheritFromGlobal:min:max:byDefault:
stringForKey:inheritFromGlobal:byDefault:
boolForKey:inheritFromGlobal:byDefault:
indexSetForKey:inheritFromGlobal:byDefault:
br_decodeIndexStringToIndexSet
dictionaryWithDictionary:
unsignedLongLongForKey:min:max:byDefault:
boolForKey:byDefault:
unsignedIntForKey:min:max:byDefault:
floatForKey:min:max:byDefault:
_extensionSetForKey:startingWithExtensions:
_UTISetFor:startingWithExtensions:
intForKey:min:max:byDefault:
_umaskForKey:
xpcActivityDictionaryForKey:byDefault:
doubleForKey:min:max:byDefault:
_defaultSyncUpDailyBudget
_defaultSyncUpHourlyBudget
_defaultSyncUpMinutelyBudget
defaultExcludedFilenamesWorthWarningAtLogout
defaultExcludedFilenamesWorthPreserving
defaultExcludedExtensionsWorthPreserving
_shouldRampForKey:session:
_isSharedDefaults
stringForKey:byDefault:
indexSetForKey:byDefault:
_healthErrorSetForKey:byDefault:
rescheduleItemsRecursivelyBatchSize
maxRecordCountInClientZoneModifyRecordsOperation
nonEvictablePathComponents
availableQuotaComfortSize
appsFetchPacerDelay
skipServerSideThrottling
shouldSessionBeGreedy
maxTotalFilesCount
maxNumberOfFilesInAFolder
systemReachabilityLatency
systemPowerLatency
systemLowDiskLatency
readerMaxConcurrentIOs
readerPackageProcessingDelay
readerLostItemBackoff
markChildLostBackoff
fseventsLatency
fseventsResetBackoff
fseventQueueBufferSize
fseventProcessBatchSize
transferQueueMinConcurrentOperations
transferQueueMaxConcurrentOperations
cacheDeletePushXPCActivity
forceForegroundGracePeriod
forceBatchFailureWhenReceivingAssetTokenExpiration
accessTimeDeltaInLowUrgency
accessTimeDeltaInMedUrgency
accessTimeDeltaInHighUrgency
accessTimeDeltaInVeryHighUrgency
onDiskAccessTimeDeltaInLowUrgency
onDiskAccessTimeDeltaInMedUrgency
onDiskAccessTimeDeltaInHighUrgency
onDiskAccessTimeDeltaInVeryHighUrgency
purgePacerInterval
dbReclaimableSpaceThreshold
cacheDeleteRecomputeInterval
copyShareIDsBatchSize
aliasDeletionBatchSize
minimumDiskSpaceRequiredToBeGreedy
relativeDiskSpaceRequiredToReturnToGreedyState
maximumAccountSizeToBeAlwaysGreedy
activeDownloadSizeRefreshInterval
shouldDisplayUploadNotification
recentsEnumeratorBatchSize
recentsEnumeratorMaxHierarchyDepth
recentsEnumeratorFailureThrottleParams
minimalSizeToShowAdditionalDescription
documentAccessHighPriorityInterval
readerMarkChildrenLostBatchSize
lostScanDeepScanFirstThreshold
bounceFileMaxRetries
bounceFileReportInterval
maxFolderEnumerationCount
powerLogReportInterval
fieldsToMoveOutOfTrashMask
computeEvictableBatchSize
shouldReportAllPerItemFailures
blockApplyUntilList
canSaveRecordsDirectlyForList
canSaveRecordsDirectlyForDeltaSync
canSaveRecordsDirectlyWithDeletes
applyRetryCountForFailure
readerRetryCountForFailure
shouldMigrateFetchShareAliases
timeoutForCZMProcessing
dbIntegrityCheckReaderJobs
lostItemUnderUnknownParentBeforeDeepScan
ciconiaMaxReconciliationFailures
ciconiaMaxSideFaultsMigration
ciconiaMaxFailurePerVersion
ciconiaHideMigrationDomain
ciconiaKeepDomainAfterMigration
ciconiaImportTimeout
ciconiaDisableAutomatedStart
ciconiaRepeatInterval
subResourceFetchLoopCacheSize
downloadStageAgeDelta
_globalUserDefault
_serverContainerConfigurationDict
_cache
_clientZoneIdentifier
T@"NSObject<OS_xpc_object>",R,N
T@"BRCSyncOperationThrottleParams",R,N
Tc,R,N
T@"NSIndexSet",R,N
dictionaryWithContentsOfURL:
destroyClientPackageWithDatabaseBasePath:UUID:
rootDatabasePath
absoluteString
setArchiverInfo:error:
mainQueue
aa_useCellularForDataclass:
_isCellularEnabledForDocumentsAndData
_accountDidChangeNotificationObserver
setShouldReportAllPerItemFailures:
setPerRecordChangeCompletionBlock:
shareIDWasDeleted:
recordIDWasDeleted:
recordZoneChangesStatusByZoneID
saveRecordsWithServerChangeToken:clientChangeToken:syncStatus:
notifyWhenCaughtUp:whenRecordsAreFetchedAndFinish:
fetchAllChanges
handleZoneNotFoundIfSyncingDownForTheFirstTime:
_performAfterFetchingRecordChanges:
clientChangeToken
_saveInitialServerZoneData:clientChangeTokenData:
_startSyncDown
_fetchInitialZoneIfNecessaryWithCreatedZone:
_startCreateZoneAndSubscriptionAndSyncDown
isEqualToErrorGrouping:
TB,R,N,V_isPCSChained
_version
Ti,N,V_version
T@"NSPersonNameComponents",&,N
setupPagerForFd:
_startInCString:fgColor:bgColor:attr:
cursorGotoLineStart
forgetRemainingSpace
puts:len:
_putsAndCrop:len:
puts:
execPagerOnFileFd:
startPager
eraseEndOfLine
eraseStartOfLine
eraseLine
eraseScreenDown
eraseScreenUp
cursorSave
cursorRestore
cursorUp:
cursorDown:
cursorRight:
cursorLeft:
startNewLine
endLine
remainingSpace
put:
isatty
useColor
supportsEscapeSequences
_file
_termWidth
_usedTermWidth
_curAttrs
_curFg
_curBg
_isatty
_useColor
_supportsEscapeSequences
TB,R,N,V_isatty
TB,R,N,V_supportsEscapeSequences
TB,R,N,V_useColor
br_downloadThumbnailsUserInitiated
br_zoneConsolidationManual
enumerateBundlesOfType:block:
addAppListObserver:
applicationIdentifiersForContainerID:
_refetchApps
_start
_cloudDocsAppLibrariesByAppID
_appIDsByAppLibraryID
_observers
_refetchPacer
_fetchInstalledAppsQueue
_hasFetchedInitialApps
generationIDString
signatureWithFileDescriptor:error:
initWithSignature:length:
isEqualToGenerationID:orSignature:
isEqualToFSGenerationID:
T@"NSData",R,N,V_signature
serverAliasItemForSharedItem:inZone:db:
moveAppLibraryTransfers:toAppLibrary:
_scheduleXattrFetch
_scheduleDeserialize
_startWithParentOperation:
_createSubResourceGroupsFromPendingChangesStreamIfNecessary
_prepareToSaveRecords
_fetchRecordsBlockingSaveIfNecessary
stop
_notifyWhenRecordsAreFetched:
stopWithError:
_willFetchRecordForDeserialize:
_markSubResourceRecordAsFetchedIfNecessary:
sortedArrayUsingComparator:
_hasRecordsPendingSubResources
_saveRecordsToPendingChangesWithServerChangeToken:clientChangeToken:
_cleanUpAfterSavingRecords
records
movedZoneNames
_subResourceRecordsByID
_deletedShareIDs
_movedZoneNames
_xattrFetchingGroup
_xattrFetchingSource
_deserializeGroup
_deserializeSource
_loopDetectionCacheSize
_loopDetectionCache
_deserializeState
_isDoneFetchingRecords
_isDeltaSync
_canSaveDirectly
_canSaveDirectlyWithDeletes
_contentRecordsFetchedInline
_recordsRequested
_recordsRequestedTotalMetadataSize
_queryFinishedServerTruthCallback
_queryFinishedClientTruthCallback
TQ,R,N,V_recordsRequested
TQ,R,N,V_recordsRequestedTotalMetadataSize
TQ,R,N,V_xattrsFetchedTotalSize
T@?,C,N,V_queryFinishedServerTruthCallback
T@?,C,N,V_queryFinishedClientTruthCallback
_addFileProvider:
_removeFileProvider:
underlyingQueue
_keyForURL:
_registerPresenterForItemAtURL:key:name:session:
_unregisterPresenterForKey:
_providedItemAtURL:didLosePresenterWithID:
_providedItemAtURL:didGainPresenterWithID:
_provideItemAtURL:completionHandler:
_providedItemsURL
_providedItemsOperationQueue
_provideItemAtURL:withInfo:completionHandler:
_getPhysicalURLForURL:completionHandler:
_writerWithID:didFinishWritingForURL:
_providedItemAtURL:didGainPresenterWithInfo:
_providedItemAtURL:withPresenterWithID:didMoveToURL:
_movingItemAtURL:requiresProvidingWithDestinationURL:completionHandler:
T@"NSURL",R,C
T@"NSOperationQueue",R
_keyForURL:andID:
_pathForKey:
_presentersIDsByKey
_privQueue
_processIdentifierForID:
_requestPurgeSpace
_computeCiconiaSizeInBytes:
fileCreationDate
_dbAutovacuumableSpaceInBytes:
_doIncrementalVacuum:amount:
_dbSizeInBytes:
_fullVacuumIfPossible:
_asyncAutovacuumIfNeeds:
_garbageCollectGroupContainersDownloadStage
_vacuumDB:amount:withUrgency:
_recursivelySizeDirectoryAtPath:
simpleUrgencyForCacheDeleteUrgency:
accessTimeDeltaForUrgency:
cachedPurgeableSpaceForAllUrgencies:nonPurgeableSpace:error:
urgencyForCacheDeleteUrgency:
renameAndUnlinkInBackgroundItemAtRelpath:
cachedPurgeableSpaceForUrgency:
_isClosed
_computingPurgable
_purgePacer
shareAcceptationSidefaultEnumerator
_shareAcceptationByItemID
T@"BRCSharedServerZone",R,N
_dict
_initReachability
_initPowerManager
_initLowDiskManager
_initLowMemory
_initProcessObservers
_initAppListObservers
_initXPCFSEvents
_invalidateReachability
_invalidatePowerManager
_invalidateLowDiskManager
_invalidateLowMemory
_invalidateProcessObservers
_invalidateAppListObservers
_resetReachability
_resetPowerManager
_resetLowDiskManager
_setReachabilityFlagsWithCoalescing:
sharedReachabilityMonitor
_setReachabilityFlags:
__resetReachability
isNetworkReachableForFlags:
_setPowerLevelWithCoalescing:
_setPowerLevel:
powerLevelChanged:
_processLowDiskNotification:
_didReceiveMemoryWarning
didReceiveMemoryWarning
initWithBundleIDs:states:
bundleInfoValueForKey:PID:
updateInterestedBundleIDs:
setHandler:
applicationInfoForPID:completion:
_invalidateProcessMonitorObject:
_createMonitoringObjectForProcessID:observer:
reachabilityMonitor:didChangeReachabilityStatusTo:
reachabilityMonitor:didChangeReachabilityFlagsTo:
reachabilityFlags
addPowerObserver:
removePowerObserver:
addLowMemoryObserver:
removeLowMemoryObserver:
removeAppListObserver:
_notificationQueue
_reachabilityObservers
_reachabilityMonitor
_reachabilityFlags
_reachabilityFlagsTimer
_powerObservers
_powerNotifyToken
_powerLevelOK
_powerLevelOKTimer
_connectedToPowerSource
_connectedToPowerSourceCheckedDate
_lowDiskSet
_lowDiskDict
_lowDiskSource
_lowDiskTimer
_lowMemoryObservers
_memoryNotificationEventSource
_memoryNotificationCoalescePacer
_processObservers
_appListObservers
uploadSyncErrorsAsIndividualEvents:syncType:totalItemsCount:zoneType:zoneCountsOnly:isFolderSharingEnabled:dsid:rampNumber:
uploadLoadErrorsAsIndividualEvents:syncType:totalItemsCount:zoneCountsOnly:isFolderSharingEnabled:dsid:rampNumber:
sendTelemetryEvent:withReport:
telemetryDictionaryToUploadForError:errorMessage:count:syncType:totalItemsCount:zoneType:zoneCountsOnly:isFolderSharingEnabled:dsid:rampNumber:lastFailureDate:pcsState:
initWithServerSyncState:
_lastSyncDownStatus
_clientRequestID
T@"NSDate",&,V_lastSyncDownDate
Tq,N,V_lastSyncDownStatus
T@"CKServerChangeToken",&,N,V_changeToken
TQ,N,V_clientRequestID
initWithState:
setSharedDatabaseChangeState:
_pendingMigrations
_nextRank
_sharedDatabaseChangeState
_minLastUsedTime
T@"NSDate",&,N,V_lastSyncDownDate
Tq,N,V_nextRank
T@"BRCServerChangeState",&,V_sharedDatabaseChangeState
TQ,N,V_minLastUsedTime
applyMetadataOnFileID:liveFD:sharingOptions:
fixupStagedItemAtStartup
_finishSetupWithClientContainerIDs:
_isNonSandboxedForAuditToken:
hasAuditToken
hasPid
_computeCloudEnabledStatusWithoutLogOutStatus
isAllowedToAccessAnyCloudService
isNonAppSandboxed
_debugIdentifier
_cloudEnabledStatusWithoutLogOutStatus
_canGetApplicationInfo
_isNonAppSandboxed
_isAllowedToAccessAnyCloudService
_isProxyEntitled
_isSharingProxyEntitled
_isFolderSharingProxyEntitled
_isSharingPrivateInterfaceEntitled
_hasAuditToken
_applicationIdentifier
_appLibraryIDs
_defaultAppLibraryID
_auditToken
T@"NSString",R,N,V_applicationIdentifier
TB,R,N,V_isNonAppSandboxed
TB,R,N,V_isAllowedToAccessAnyCloudService
TB,R,N,V_isProxyEntitled
TB,R,N,V_isSharingProxyEntitled
TB,R,N,V_isFolderSharingProxyEntitled
TB,R,N,V_isSharingPrivateInterfaceEntitled
TB,R,N,V_isAutomationEntitled
T@"NSSet",R,N,V_appLibraryIDs
T@"NSString",R,N,V_defaultAppLibraryID
TB,R,N,V_hasAuditToken
T{?=[8I]},R,N,V_auditToken
_blackListDescendantStack:parentItem:andAddToSet:descendantBlock:
_blackListDescendantStack:parentItem:andAddToSet:
_handleSharedItemWhichMovedToNewShare:rootItem:
_blackListDescendantStackAndItemIfThrottledOrNeedsOSUpgrade:now:
isBlackListed:
_checkForSharesWithinSharesWithItem:
_checkIfShouldBlacklistForParentDirectoryFaultWithItem:needsDirFaultCheck:
_checkIfShouldDedicateOpToPCSChainingItem:
_checkIfShouldBlacklistForPathMatch:
handleItemForOSUpgrade:parentItemID:
_handlePendingShareItemWithPendingDeleteChildren:
_checkIfParentNeedsRevivalWithParentItem:
_nextLiveItem
_documentsOrAliasesNeedingSyncUpEnumerator
_liveDirectoriesNeedingSyncUpEnumerator
_tombstoneLeavesNeedingSyncUpEnumerator
_nextTombstone
chainedParentIDWhitelist
_maxDepth
_whitelist
_itemIDsLostOrThrottled
_itemIDsNeedingOSUpgrade
_itemIDsNeedingDirectoryFetch
_tombstonesEmbargo
_returned
_stage
_retryAfter
_chainedParentIDWhitelist
_itemsNeedingUnshare
TI,R,N,V_batchSize
TQ,R,N,V_retryAfter
T@"BRCLocalItem",R,N,V_itemNeedingPCSChaining
T@"NSMutableSet",R,N,V_chainedParentIDWhitelist
T@"NSMutableArray",R,N,V_itemsNeedingUnshare
initWithPkgItem:
initShareIDWithRecordID:zoneID:session:
brc_shareZoneName
_containerMetadataRecordsToSaveWithBatchSize:requestID:
performAfterSavingRecords:
TB,R,N,V_shouldPerformAnotherBatch
isEqualToItemDBRowIDIdentifier:
Tq,R,N,V_itemDBRowID
isEqualToIntAndZoneJobIdentifier:
_intID
Tq,R,N,V_intID
@24@0:8^{_NSZone=}16
v24@0:8Q16
v20@0:8B16
B16@0:8
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
{?="clientTruthDirFaultCount"b1"serverTruthDirCount"b1"serverTruthDirFaultCount"b1"serverTruthTotalItemsCount"b1"timeSinceLogin"b1}
B40@0:8^@16^@24^@32
B64@0:8@16^@24^@32^@40^@48^@56
@40@0:8@16@24@32
@32@0:8@16@24
@24@0:8@16
v16@0:8
@"NSData"
@"NSString"
{?="knownToServer"b1"wasCached"b1}
q16@0:8
v24@0:8q16
@"BRFieldCKInfo"
i2184@0:8{statfs=IiQQQQQ{fsid=[2i]}IIII[16c][1024c][1024c]I[7I]}16
B40@0:8@16@24^@32
i16@0:8
{statfs="f_bsize"I"f_iosize"i"f_blocks"Q"f_bfree"Q"f_bavail"Q"f_files"Q"f_ffree"Q"f_fsid"{fsid="val"[2i]}"f_owner"I"f_type"I"f_flags"I"f_fssubtype"I"f_fstypename"[16c]"f_mntonname"[1024c]"f_mntfromname"[1024c]"f_flags_ext"I"f_reserved"[7I]}
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@56@0:8@16@24@32@40@?48
@"BRCAccountSession"
@"NSObject<OS_dispatch_source>"
B24@0:8@"NSError"16
v48@0:8@16@24@32@40
@"CKServerChangeToken"
v20@0:8i16
{?="aliasToFileCount"b1"aliasToFolderCount"b1"aliasToPackageCount"b1"aliasToSymlinkCount"b1"fileToAliasCount"b1"fileToFolderCount"b1"fileToPackageCount"b1"fileToSymlinkCount"b1"folderToAliasCount"b1"folderToFileCount"b1"folderToPackageCount"b1"folderToSymlinkCount"b1"nonConflictingKindCount"b1"packageToAliasCount"b1"packageToFileCount"b1"packageToFolderCount"b1"packageToSymlinkCount"b1"symlinkToAliasCount"b1"symlinkToFileCount"b1"symlinkToFolderCount"b1"symlinkToPackageCount"b1}
v32@0:8@16@24
@"NSMutableDictionary"
@"NSMapTable"
@32@0:8@16@?24
v24@0:8@?16
B36@0:8@16i24^@28
@40@0:8@16#24@32
@40@0:8@16@?24@32
B32@0:8@16@24
B32@0:8@?16@24
B20@0:8i16
v36@0:8@16d24i32
B32@0:8@16[1{__va_list_tag=II^v^v}]24
@32@0:8@16[1{__va_list_tag=II^v^v}]24
@40@0:8#16:24@32
@48@0:8#16:24@32[1{__va_list_tag=II^v^v}]40
@32@0:8#16@24
@40@0:8#16@24[1{__va_list_tag=II^v^v}]32
@32@0:8@?16@24
@40@0:8@?16@24[1{__va_list_tag=II^v^v}]32
@"br_pacer"
d16@0:8
v40@0:8@16@24@32
v24@0:8d16
@?16@0:8
@"BRCSyncContext"
[16C]
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_os_transaction>"
@"NSDate"
@"NSError"
@"NSObject<OS_dispatch_group>"
@"NSHashTable"
@"NSObject<OS_os_activity>"
@"NSMutableArray"
@"BRCThrottle"
@"CKOperationGroup"
@"NSObject<BROperationClient>"
v32@0:8@16@?24
@"BRCServerChangeState"
@36@0:8@16@24B32
B48@0:8@16^@24^@32^@40
B64@0:8@16@24^@32^@40^@48^@56
@32@0:8@16^@24
@32@0:8@16Q24
@"BRCItemGlobalID"
@"NSSet"
@"NSMutableSet"
@"BRCAppLibrary"
@24@0:8Q16
@36@0:8@16c24@28
@36@0:8c16@20@28
@"NSArray"
Q24@0:8@16
@32@0:8B16C20@24
@24@0:8^@16
S40@0:8@16@24^@32
@"NSDictionary"24@0:8^@16
@"BRContainer"32@0:8@"BRMangledID"16@"NSString"24
S40@0:8@"NSURL"16@"NSURL"24^@32
@"NSString"32@0:8@"NSURL"16^@24
@"NSArray"32@0:8@"NSString"16^@24
S48@0:8@16@24@32^@40
B44@0:8@16@24B32^@36
B32@0:8@16^@24
B40@0:8@16B24B28^@32
@36@0:8@16B24^@28
B32@0:8^{backup_detector=QQQ}16^@24
B56@0:8{backup_detector=QQQ}16^{backup_detector=QQQ}40^@48
@32@0:8Q16Q24
@20@0:8I16
v28@0:8@16B24
B24@0:8^@16
B36@0:8@16B24^@28
B48@0:8@16@24@32^@40
B28@0:8B16^@20
B52@0:8@16@24B32@36^@44
v48@0:8^Q16^Q24@32@40
v40@0:8^Q16^Q24@32
B52@0:8@16@24@32B40^@44
v36@0:8@16@24B32
B48@0:8@16B24@28B36^@40
B56@0:8@16B24@28@36B44^@48
B68@0:8@16B24@28@36^I44^I52^@60
B60@0:8@16@24@32B40I44I48^@52
B44@0:8@16B24@28^@36
v36@0:8I16@20@?28
@"BRCServerZone"
v20@0:8I16
@"BRDSIDString"
@"BRCThrottler"
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v32@0:8@16^@24
v40@0:8c16@20B28@?32
v44@0:8c16@20B28B32@?36
q24@0:8Q16
v32@0:8q16Q24
@"NSObject<OS_dispatch_workloop>"
@"BRCItemID"
@"CKRecordID"
@"CKQueryOperation"
v32@0:8@"BRCListDirectoryContentsOperation"16@"BRCListDirectoryContentsOperation"24
@"BRCListDirectoryContentsOperation"
v28@0:8@16i24
v28@0:8Q16I24
v36@0:8Q16I24@?28
v32@0:8@16B24B28
i24@0:8@16
@"BRCMetricEndpoint"
@"BRCSyncHealthReport"
@"NSNumber"
@"CKEventMetric"
I16@0:8
@"NSUUID"
v32@0:8I16B20@24
v32@0:8Q16@24
v48@0:8@16Q24@32@40
@20@0:8i16
v40@0:8@16@24@?32
v40@0:8@16q24@?32
@"NSURL"
@"BRMangledID"
v52@0:8@16@24@32i40@?44
v52@0:8@16@24I32I36I40@?44
v40@0:8@"FPSandboxingURLWrapper"16q24@?<v@?@"NSNumber"@"NSError">32
v52@0:8@"NSURL"16@"NSArray"24I32I36I40@?<v@?@"NSArray"@"NSArray"@"NSError">44
v24@0:8@?<v@?@"NSError">16
v32@0:8@16Q24
@28@0:8@16i24
B32@0:8@16^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}24
c16@0:8
v20@0:8c16
@"BRCUserRowID"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@20@0:8B16
{?="mtime"b1"xattrIndex"b1"isExecutable"b1"isWritable"b1}
@40@0:8Q16@24Q32
@24@0:8@"BRCAccountSession"16
@"BRCClientRanksPersistedState"
@"BRNotificationQueue"
@"BRCXPCClient"
@"CKShareMetadata"
i32@0:8Q16@24
@32@0:8Q16@24
@40@0:8Q16@24@32
S16@0:8
C16@0:8
i20@0:8B16
B20@0:8B16
i28@0:8i16@20
B32@0:8B16B20^i24
B28@0:8B16^i20
B32@0:8@?16^i24
v20@0:8S16
v20@0:8C16
@"BRCRelativePath"
@"BRCBookmark"
@"BRCGenerationID"
[32C]
{timespec="tv_sec"q"tv_nsec"q}
{brc_mutex="pthread"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}
{?="recordsFetched"b1"recordsFetchedTotalMetadataSize"b1"totalTime"b1"xattrsFetchedTotalSize"b1}
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@24@0:8@?16
@20@0:8C16
q32@0:8r*16Q24
{CC_SHA1state_st="h0"I"h1"I"h2"I"h3"I"h4"I"Nl"I"Nh"I"data"[16I]"num"i}
[21C]
v48@0:8@16@24@32Q40
@32@0:8q16@24
@"CKContainer"
@"AppTelemetryCiconiaBouncesInvestigation"
@"AppTelemetryCiconiaInvestigation"
@"AppTelemetryQBSInvestigation"
@"AppTelemetryQBSPerformance"
{?="errorCode"b1"hasForegroundClients"b1"isPCSChained"b1"nonDiscretionary"b1"sharedZone"b1}
v40@0:8@16^@24^@32
@28@0:8i16@20
@56@0:8@16@24@32@?40@48
Q32@0:8@16@24
{brc_job_update=iq}60@0:8@16@24i32@36@44@52
q40@0:8^{throttle_stamps=Iiqqq}16@24q32
v44@0:8^{throttle_stamps=Iiqqq}16@24@32B40
B28@0:8i16@20
v44@0:8i16@20@28@?36
@"BRCDeadlineSource"
@"PQLNameInjection"
@60@0:8@16@24Q32Q40B48@?52
v32@0:8q16@?24
@"BRCNotificationPipe"
@48@0:8@16@24@32Q40
@40@0:8@16@24Q32
v36@0:8S16@20@?28
v36@0:8@16S24@?28
@"<BRItemNotificationReceiving>"
@"BRFileObjectID"
@"BRCDataOrDocsScopeGatherer"
@"BRCNotificationManager"
@"<BRCNotificationPipeDelegate>"
v44@0:8@16S24@28@?36
v28@0:8S16@?20
v24@0:8@?<v@?>16
v36@0:8S16@"NSArray"20@?<v@?@"NSError">28
v28@0:8S16@?<v@?@"NSError">20
v44@0:8@"NSString"16S24@"NSArray"28@?<v@?@"NSError">36
v36@0:8@"BRFileObjectID"16S24@?<v@?@"NSError">28
v40@0:8@"CKShareMetadata"16@"BRCAccountSession"24@?<v@?B@"NSError">32
v32@0:8@"CKShareMetadata"16@?<v@?BB@"NSError">24
v32@0:8@"CKShareMetadata"16@?<v@?B@"NSError">24
v32@0:8@"CKShareMetadata"16@?<v@?>24
v32@0:8@"CKShareMetadata"16@?<v@?B>24
v32@0:8@"NSURL"16@?<v@?>24
v40@0:8Q16@24@?32
@?24@0:8@?16
v48@0:8Q16@24@32@?40
^{__CFUserNotification=}
^{__CFRunLoopSource=}
v24@0:8[32C]16
i20@0:8i16
@48@0:8@16@24@32@40
@40@0:8@16@24^@32
@"BRCLocalItem"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
Q32@0:8@16Q24
v32@0:8@?16@24
B24@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16
v24@0:8#16
@"NSXPCListener"
@"NSOperationQueue"
v28@0:8^{sqlite3_stmt=}16i24
@24@0:8^{sqlite3_value=}16
@28@0:8^{sqlite3_stmt=}16i24
@"BRCClientZone"
v36@0:8i16@20@28
v36@0:8i16q20@28
v36@0:8q16@24i32
v32@0:8i16I20@24
v40@0:8i16I20@24@32
v40@0:8i16I20q24@32
v40@0:8@16@24i32I36
v36@0:8q16i24@28
v32@0:8q16@24
B28@0:8@16I24
v36@0:8@16@24I32
v32@0:8@16q24
Q32@0:8q16@24
v44@0:8@16Q24q32B40
@"BRCCountedSet"
B40@0:8@16^Q24Q32
@"NSPredicate"
B40@0:8@16@?24^@32
B48@0:8@16@24@?32^@40
v24@0:8B16B20
@84@0:8@16@24@32@40@48@56B64B68B72@76
I24@0:8I16I20
B20@0:8I16
@84@0:8Q16Q24@32B40B44B48B52B56B60B64Q68@76
@60@0:8@16B24Q28Q36Q44@52
@52@0:8@16C24Q28Q36@44
@28@0:8@16B24
q24@0:8@16
@"BRCALRowID"
@"BRCPQLConnection"
@"BRCPrivateClientZone"
@"brc_task_tracker"
@"<BRCAppLibraryDelegate>"
@"BRCZoneRowID"
@"BRContainer"
@24@0:8q16
q20@0:8I16
q40@0:8q16^I24q32
q32@0:8^v16Q24
q36@0:8q16q24B32
@"BRCMinHeap"
@48@0:8@16@24@32^@40
@56@0:8@16@24@32@40^@48
@"PQLFormatInjection"16@0:8
@"PQLRawInjection"16@0:8
@36@0:8Q16@24i32
@44@0:8@16i24q28^q36
@"PQLResultSet"
v44@0:8@16i24i28@32B40
@36@0:8@16i24@28
v36@0:8@16i24@28
v40@0:8@16@24^i32
v44@0:8@16@24B32^i36
B64@0:8@16@24@32^i40@48@56
B48@0:8@16@24@32^i40
v40@0:8@16q24Q32
v48@0:8@16Q24Q32q40
v56@0:8@16Q24Q32q40@?48
@"BRCFairScheduler"
@"BRCDeadlineScheduler"
@40@0:8@16q24@32
@32@0:8[16C]16@24
@36@0:8@16B24@28
@36@0:8q16B24@28
@32@0:8d16@24
@48@0:8q16B24@28B36@40
@44@0:8q16B24@28@36
@32@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16@24
@32@0:8@16q24
^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16@0:8
@"BRCDumper"
^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}
@"PQLConnection"
v24@0:8@"NSString"16
@64@0:8@16@24@32@40@48Q56
B32@0:8@16Q24
v32@0:8Q16@?24
v36@0:8B16@?20@?28
@32@0:8@16c24B28
v28@0:8C16@20
v36@0:8@16I24@28
B52@0:8B16B20C24@28@36@44
C36@0:8B16B20C24@28
@"BRCItemID"16@0:8
@"BRCItemGlobalID"16@0:8
@"BRCStatInfo"16@0:8
@"BRCUserRowID"16@0:8
@"BRCAccountSession"16@0:8
@"BRCServerZone"16@0:8
@"BRCClientZone"16@0:8
Q20@0:8B16
Q32@0:8@16B24B28
B32@0:8@16B24B28
B24@0:8Q16
v28@0:8Q16B24
B24@0:8B16B20
v28@0:8@16C24
v24@0:8B16C20
v60@0:8@16@24@32@40@48B56
v32@0:8Q16I24I28
B40@0:8@16Q24^@32
@"BRCLocalStatInfo"
B28@0:8i16^@20
@36@0:8i16Q20^@28
B60@0:8i16^@20^@28^@36Q44^@52
B32@0:8i16B20^@24
^?24@0:8@16
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
v24@0:8@"BRCClientZone"16
v24@0:8@"BRCAppLibrary"16
v48@0:8@16@24@32q40
v36@0:8@16B24@28
@"BRCFairSource"
@"APSConnection"
@"BRCContainerMetadataSyncPersistedState"
@"_BRCOperation<BRCOperationSubclass>"
@"BRCSyncOperationThrottle"
@"BRCZoneHealthSyncPersistedState"
@"BRCSideCarSyncPersistedState"
@"BRCMigrateZonePCSOperation"
@"BRCSyncBudgetThrottle"
B32@0:8Q16B24B28
@"CKRecord"
@52@0:8@16Q24I32@36@44
v40@0:8B16@20@28B36
v28@0:8B16@20
i36@0:8@16I24^B28
i44@0:8@16Q24I32^B36
v40@0:8@16Q24Q32
B40@0:8d16@24^@32
@"BRCLocalVersion"
@"BRCDesiredVersion"
@40@0:8@16@24i32i36
v52@0:8@16@24@32@40B48
@36@0:8@16B24@?28
v72@0:8@16@24@32@40@?48@?56@64
v48@0:8@16@24@32@?40
v60@0:8@16@24B32@36@44@?52
@"CKRecordID"16@0:8
@"NSNumber"16@0:8
@"BRCProgress"16@0:8
@"CKRecord"16@0:8
v24@0:8@"CKRecord"16
@"BRCProgress"
@40@0:8@16@?24@?32
@"BRCPendingChangesStream"
B32@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16@24
B36@0:8@"BRCDumpContext"16B24^@28
B32@0:8@"BRCDumpContext"16^@24
B32@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16@"PQLConnection"24
@"BRCZoneRowID"16@0:8
v24@0:8@"BRCZoneRowID"16
@"BRCPQLConnection"16@0:8
@"NSMutableDictionary"16@0:8
B80@0:8@16@24@32@40@48@56@64@72
B56@0:8@16@24@32@40^@48
B48@0:8@16@24@32Q40
B40@0:8@16@24@32
B44@0:8c16@20@28Q36
Q76@0:8Q16@24@32@40@48^@56B64@68
v48@0:8@16@?24@?32@40
B28@0:8@16B24
@32@0:8c16@20B28
@24@0:8c16B20
@32@0:8B16@20C28
v92@0:8@16@24@32@40@48@56@64Q72B80B84C88
B32@0:8^@16@24
B56@0:8^@16@24B32#36B44^@48
B64@0:8^@16^@24^@32^@40@48^@56
B40@0:8^@16@24^@32
v24@0:8^Q16
B32@0:8^Q16^@24
B56@0:8^@16^@24@32@40^@48
B32@0:8^@16^@24
B48@0:8^@16^@24@32^@40
B40@0:8^@16@24@32
B40@0:8^@16^@24@32
v36@0:8@16B24B28B32
v48@0:8@16Q24@32B40C44
v36@0:8@16Q24B32
v44@0:8@16@24Q32B40
@20@0:8S16
B64@0:8@16@24@32q40@48@56
B64@0:8@16@24q32@40@48@56
B64@0:8@16@24q32@40@48Q56
B76@0:8@16@24q32@40@48@56B64@68
B84@0:8@16@24q32@40@48@56B64Q68@76
B60@0:8@16B24q28@36@44@52
B56@0:8@16@24q32@40@48
B72@0:8@16@24q32@40@48^Q56^B64
@36@0:8@16f24^Q28
B28@0:8f16^Q20
B24@0:8@?16
f16@0:8
@"NSMutableOrderedSet"
@56@0:8d16@24@32@40@48
@24@0:8d16
@40@0:8d16@24B32B36
@56@0:8d16@24Q32Q40Q48
@36@0:8@16@24i32
@36@0:8@16B24B28i32
@64@0:8Q16Q24Q32Q40Q48Q56
@32@0:8i16@20i28
@36@0:8i16@20q28
@40@0:8i16@20q28B36
@36@0:8i16@20d28
@32@0:8i16@20B28
@36@0:8i16@20@28
@36@0:8i16@20Q28
@28@0:8Q16i24
@36@0:8@16B24^i28
@40@0:8@16B24B28^i32
i32@0:8@16^@24
v20@0:8f16
d24@0:8f16i20
d24@0:8@16
f24@0:8@16
[8f]
@24@0:8r*16
@24@0:8^{RootItemObject=C(?=II)}16
@24@0:8^{_UUIDItemObject_OLD=CI[16C]}16
B44@0:8@16@24B32@36
v40@0:8@16Q24@32
@32@0:8@16^B24
@32@0:8@16^Q24
@48@0:8@16Q24@32^Q40
@64@0:8@16@24@32@40Q48^@56
@88@0:8@16@24@32Q40@48^Q56^B64@72^@80
@80@0:8@16@24Q32@40@48Q56@64^@72
@80@0:8@16@24@32@40Q48Q56@64^@72
B48@0:8@16Q24@32^@40
B84@0:8@16@24Q32@40@48Q56@64B72^@76
v36@0:8@16@24i32
v44@0:8@16@24Q32i40
@60@0:8@16@24@32@40@48B56
v24@0:8I16I20
@28@0:8I16@20
B48@0:8@16@24@32@40
c32@0:8@16@24
v32@0:8@?16Q24
v40@0:8@?16Q24Q32
v44@0:8@16@24@32B40
v40@0:8@16@24q32
v44@0:8Q16q24B32@36
@32@0:8@16B24B28
q32@0:8@16@24
@?24@0:8@16
v60@0:8@16@24@32^i40B48@52
v36@0:8Q16@24i32
@"<BRCClientZoneDelegate>"
@"BRCThrottleBase"
@"BRCCreateZoneAndSubscribeOperation"
@"BRCSyncUpOperation"
@"BRCSyncDownOperation"
@"BRCSyncOperationBackoffRatio"
@"BRCFetchRecentAndFavoriteDocumentsOperation"
@"NSMutableIndexSet"
@"<NSObject>"
v52@0:8@16q24B32@?36@?44
v44@0:8@16q24B32@?36
v64@0:8@16Q24@32Q40@48@?56
v40@0:8@16Q24@?32
v48@0:8@16@24Q32@?40
v72@0:8@16@24Q32@40Q48@56@?64
v40@0:8Q16Q24@?32
v56@0:8@16B24@28@36B44@?48
v44@0:8@16B24Q28@?36
c28@0:8@16B24
@32@0:8r*16Q24
@"BRCStageRegistry"
@"CKPackage"
{?="token"b1}
v28@0:8i16@20
v48@0:8@16^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}24@32^B40
@"BRCServerZoneHealthState"
@"BRCProblemReport"
v28@0:8@16c24
v48@0:8@16@24@32^v40
v36@0:8@16@24c32
v40@0:8@16q24q32
v32@0:8q16q24
v28@0:8@16I24
v32@0:8@16I24B28
v36@0:8@16I24B28B32
@"BRCProgressMultiplex"
@"_BRCUploadInfo"
@"_BRCDownloadInfo"
C24@0:8@16
f32@0:8@16@24
f40@0:8@16@24@32
@"BRCUserDefaults"
@"BRCServerStatInfo"
@"BRCVersion"
@"BRServerMetrics"
@24@0:8B16B20
@"BRCDocumentItem"
@"BRCServerItem"
@"BRCPackageItem"
@"BRCDirectoryItem"
{?="byFileID"b1"byDocumentID"b1"byPath"b1"parentItem"b1"serverItem"b1"serverByPath"b1"packageItem"b1"clientZone"b1}
@24@0:8@"NSString"16
@"NSArray"16@0:8
B24@0:8^{sqlite3_value=}16
@48@0:8@16^@24^@32@40
r*16@0:8
@32@0:8@"PQLResultSet"16^@24
@28@0:8i16Q20
@"NSInputStream"
@"PBMessageStreamReader"
B28@0:8@16S24
S24@0:8@16
B32@0:8@16i24i28
B60@0:8@16@24@32@40i48@52
@"PBMessageStreamWriter"
@"NSOutputStream"
@"BRCChecksummingOutputStream"
B40@0:8q16@24@32
v32@0:8d16@24
@40@0:8Q16Q24@32
v32@0:8Q16Q24
v56@0:8@16@?24@?32@40@?48
v28@0:8B16@?20
@"CKQueryCursor"
v32@0:8@"BRFileObjectID"16@"NSError"24
@48@0:8@16Q24@32@40
@"BRCTreeEnumerator"
@"BRCRecursiveListDirectoryContentsOperation"
d32@0:8@16@24
{?="accountQuotaUsage"b1"bouncedItemsCount"b1"bouncedItemsMatrix"b1"ciconiaVersion"b1"cloningTime"b1"diskSpaceLeft"b1"expectedMigratedItemsCount"b1"ignoredContentProtectedItems"b1"importTime"b1"itemsChangedDuringCloning"b1"itemsNotFoundInDB"b1"itemsNotMigratedCount"b1"materialisedOnCDItemsCount"b1"materialisedOnFPFSItemsCount"b1"packagesWithoutBundleBit"b1"previousAttempts"b1"previousFailedAttempts"b1"totalItemCount"b1"unexpectedCreations"b1"previousReleasesSuccessRate"b1"typesOfMigratedItemsMask"b1"typesOfNonMigratedItemsMask"b1"areMigratedFaultsBelowThreshold"b1"areNonFaultAllMigrated"b1"isAccountDataSeparated"b1"manuallyTriggeredMigration"b1}
@"CKRecordZoneID"
@"CKRecordZone"
@"BRCPrivateServerZone"
B52@0:8i16@20@28@36Q44
S28@0:8@16B24
v24@0:8i16B20
i20@0:8C16
i28@0:8C16@?20
B40@0:8^Q16^I24^@32
B48@0:8@16^Q24^I32^@40
B68@0:8^Q16^I24^I32@40@48B56^@60
B32@0:8i16i20@24
@40@0:8Q16^C24^I32
B56@0:8@16Q24@32@40^@48
B48@0:8Q16@24@32^@40
v64@0:8i16i20@24@32@40@48Q56
B64@0:8@16^Q24^I32^I40@48^@56
B36@0:8i16@20@28
B32@0:8Q16@24
B32@0:8Q16^I24
B36@0:8I16Q20Q28
q28@0:8q16i24
Q24@0:8@?16
q24@0:8q16
[10@"NSString"]
[10Q]
@"BRCStagePersistedState"
@"NSMutableOrderedSet<NSFileProviderItem>"
@"<NSFileProviderEnumerationObserver>"
c24@0:8@16
v40@0:8q16Q24@?32
@"NSIndexSet"
@44@0:8@16@24@32B40
@40@0:8@16^@24^@32
@"GSPermanentStorage"
@"BRCLocalItem"16@0:8
@48@0:8@16@24@32@?40
@52@0:8@16@24@32@40B48
@"BRCZonePurgeOperation"
@48@0:8@16@24@32I40B44
B24@0:8^q16
Q36@0:8@16@24B32
v56@0:8@16@24@32Q40@48
v56@0:8@16@24@32@40@48
v64@0:8@16@24@32@40@48@56
I24@0:8@16
@60@0:8@16@24@32@40c48B52I56
@"BRCPCSChainInfo"
@"PQLResultSet<PQLEnumeration>"
v36@0:8@16B24@?28
v32@0:8@"BRCAccountHandler"16@"BRCAccountSession"24
@"BRFieldPkgItem"
{?="size"b1"generationID"b1}
v56@0:8@16@24q32@40^B48
v24@0:8@"NSDictionary"16
@24@0:8^B16
B40@0:8@16B24B28Q32
v36@0:8B16@20@?28
@40@0:8@16@24^B32
@56@0:8@16@24B32^B36@44B52
@32@0:8@16^I24
v32@0:8@?16@?24
B48@0:8@16^B24^B32^Q40
Q24@0:8B16B20
B44@0:8q16Q24B32^@36
B36@0:8Q16B24^@28
@"BRCAccountHandler"
@"BRCClientState"
@"BRCServerPersistedState"
@"BRCFSImporter"
@"BRCServerChangesApplier"
@"BRCGlobalProgress"
@"BRCAccountWaitOperation"
@"BRCContainerScheduler"
@"BRCApplyScheduler"
@"BRCTimerScheduler"
@"BRCVolume"
@"BRCFSUploader"
@"BRCFSDownloader"
@"BRCSyncUpScheduler"
@"BRCDownloadTrackers"
@"BRCUserNotification"
@"BRCDiskSpaceReclaimer"
@"BRCFileUnlinker"
@"BRCRecentsEnumerator"
@"BRCItemTransmogrifier"
@"BRCAnalyticsReporter"
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSDictionary"@"NSDictionary"@"NSError">40
v32@0:8@"NSOperation"16@"NSURL"24
v24@0:8@"NSOperation"16
v32@0:8@"NSOperation"16@"NSError"24
v24@0:8:16
@"<BRCUserNotifier>"
@"BRCAcceptShareOperation"
v24@0:8r*16
v28@0:8i16i20i24
@28@0:8i16i20i24
v24@0:8i16i20
r^*16@0:8
@40@0:8i16q20B28^@32
@"NSMutableData"
v44@0:8@16@24B32@?36
Q24@0:8Q16
v32@0:8@"BRCClientZone"16@"NSError"24
B44@0:8@16i24@?28^@36
B48@0:8^@16^@24^@32@40
B56@0:8@16^@24^@32^@40@48
B32@0:8q16@?24
q32@0:8@16B24B28
B64@0:8@16@24@32@40@48q56
@"CKShare"
@40@0:8@16Q24Q32
B56@0:8@16@24@32Q40@48
@"AppTelemetryInvestigation"
{?="magnitudeDouble"b1"magnitudeLong"b1"timestamp"b1"magnitude"b1"magnitudeFloat"b1"magnitudeInt"b1"magnitudeBool"b1}
Q28@0:8B16^@20
B24@0:8q16
@32@0:8@16^i24
@32@0:8^B16^i24
^{?=iqq*iqqi{_opaque_pthread_mutex_t=q[56c]}^{_telldir}}
@44@0:8@16B24q28@36
v32@0:8@"BRCNotificationPipe"16@"BRCAppLibrary"24
B32@0:8:16^@24
@32@0:8@16#24
B32@0:8r*16q24
B40@0:8@16q24@32
v52@0:8@16q24q32B40@?44
@"BRCClientPrivilegesDescriptor"
@"NSCountedSet"
{?="val"[8I]}
@"NSXPCConnection"
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSData"@"NSError">32
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v24@0:8@?<v@?@"NSString"@"NSError">16
Vv24@0:8@16
v32@0:8@"CKShareMetadata"16@?<v@?@"NSError">24
Vv24@0:8@"NSURL"16
v48@0:8@"NSObject<BROperationClient>"16@"CKShare"24@"NSString"32@?<v@?@"CKShare"@"NSURL"@"NSError">40
v40@0:8@"NSObject<BROperationClient>"16@"CKShare"24@?<v@?@"CKShare"@"NSError">32
v44@0:8@"NSObject<BROperationClient>"16@"CKShare"24B32@?<v@?@"NSError">36
v24@0:8@?<v@?@"NSPersonNameComponents"@"NSString"@"NSString"@"NSString"@"NSError">16
v44@0:8@"NSObject<BROperationClient>"16@"CKRecordID"24B32@?<v@?@"FPSandboxingURLWrapper"@"NSError">36
v40@0:8@"NSObject<BROperationClient>"16@"NSArray"24@?<v@?@"NSArray"@"NSError">32
v52@0:8@16@24@32B40@?44
v36@0:8q16i24@?28
Vv20@0:8B16
v64@0:8@16{?=[8I]}24@?56
v44@0:8@16B24B28B32@?36
v52@0:8@16@24Q32B40@?44
v44@0:8@16B24@28@?36
v56@0:8{?=[8I]}16@?48
v52@0:8@16C24Q28Q36@?44
v44@0:8C16Q20Q28@?36
v40@0:8@16B24B28@?32
v48@0:8@16d24q32@?40
v52@0:8@16@24B32Q36@?44
v48@0:8@16Q24@32@?40
v32@0:8@"NSDictionary"16@?<v@?B@"NSError">24
v32@0:8@"NSSet"16@?<v@?@"NSError">24
v52@0:8@"NSFileHandle"16@"NSString"24@"NSString"32B40@?<v@?B@"NSError">44
v32@0:8@"NSFileHandle"16@?<v@?B@"NSError">24
v40@0:8@"NSFileHandle"16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"NSString"16Q24@?<v@?@"NSError">32
v32@0:8Q16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v36@0:8@"NSString"16B24@?<v@?@"NSError">28
v24@0:8@?<v@?@"NSDictionary"@"NSNumber"@"NSError">16
v36@0:8q16i24@?<v@?q>28
v32@0:8@"NSURL"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSArray"@"NSArray"@"NSError">16
v40@0:8@"BRMangledID"16@"NSString"24@?<v@?@"BRContainer"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSURL"@"NSData"@"NSString"@"NSError">24
v36@0:8@"NSString"16B24@?<v@?@"NSURL"@"NSData"@"NSString"@"NSError">28
v64@0:8@"NSString"16{?=[8I]}24@?<v@?@"NSURL"@"NSData"@"NSString"@"NSError">56
Vv24@0:8@"NSString"16
v44@0:8@"NSString"16B24B28B32@?<v@?@"NSError">36
v52@0:8@"NSObject<BROperationClient>"16@"NSURL"24Q32B40@?<v@?@"NSError">44
v40@0:8@"NSURL"16Q24@?<v@?@"NSError">32
v32@0:8@"NSURL"16@?<v@?@"NSError">24
v32@0:8@"NSURL"16@?<v@?@"BRQueryItem"@"NSError">24
v32@0:8@"<BRItemNotificationReceiving>"16@?<v@?@"<BRItemNotificationSending><NSXPCProxyCreating>"@"NSDictionary"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSString"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v24@0:8@?<v@?@"NSArray"@"NSError">16
v24@0:8@?<v@?B@"NSError">16
v28@0:8B16@?<v@?@"NSError">20
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8@"NSString"16@"NSURL"24@?<v@?@"NSError">32
v24@0:8@?<v@?@"NSSet"@"NSError">16
v40@0:8c16@"NSString"20B28@?<v@?@"NSError">32
v24@0:8@?<v@?c@"NSError">16
v32@0:8Q16@?<v@?Q@"NSError">24
v44@0:8@"NSURL"16B24@"NSString"28@?<v@?@"NSString"@"NSString"@"NSError">36
v32@0:8@"NSString"16@?<v@?@"NSURL"@"NSData"@"NSURL"@"NSData"@"NSError">24
v32@0:8@"BRFileObjectID"16@?<v@?@"NSURL"@"NSData"@"NSURL"@"NSData"@"NSError">24
v48@0:8@"NSURL"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v56@0:8{?=[8I]}16@?<v@?c@"NSError">48
v24@0:8@?<v@?@"NSDate"@"NSError">16
v32@0:8@"NSString"16@?<v@?I@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSDate"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSNumber"@"NSError">24
v24@0:8@?<v@?Q@"NSError">16
v52@0:8@"BRFileObjectID"16C24Q28Q36@?<v@?@"NSArray<NSFileProviderItem>"QB@"NSError">44
v44@0:8C16Q20Q28@?<v@?@"NSArray"Q@"NSError">36
v40@0:8@"NSData"16Q24@?<v@?@"NSArray<NSFileProviderItem>"@"NSArray"@"NSData"@"NSError">32
v40@0:8@"NSURL"16B24B28@?<v@?@"NSError">32
v32@0:8@"NSURL"16@?<v@?BB@"NSString"@"NSError">24
v32@0:8@"NSURL"16@?<v@?i@"NSError">24
v40@0:8@"NSObject<BROperationClient>"16@"NSString"24@?<v@?@"NSString"@"NSError">32
v32@0:8@"NSObject<BROperationClient>"16@?<v@?@"NSNumber"@"NSError">24
v40@0:8@"NSObject<BROperationClient>"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"NSObject<BROperationClient>"16@"NSURL"24@?<v@?@"NSError">32
v44@0:8@"NSObject<BROperationClient>"16@"NSURL"24B32@?<v@?@"FPSandboxingURLWrapper"@"NSError">36
v24@0:8@?<v@?@"NSPersonNameComponents"@"NSString"@"NSError">16
v32@0:8@"NSURL"16@?<v@?@"NSPersonNameComponents"@"NSError">24
v32@0:8@"NSURL"16@?<v@?@"NSURL"@"NSError">24
v32@0:8Q16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?BBB@"NSString"@"NSError">24
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v48@0:8@"NSURL"16d24q32@?<v@?@"NSError">40
v36@0:8@"NSURL"16B24@?<v@?@"NSError">28
v32@0:8@"NSURL"16@?<v@?@"NSString"@"NSError">24
v32@0:8@"BRGetPausedFileListUpdater"16@?<v@?@"NSError">24
v32@0:8@"BRFileObjectID"16@?<v@?@"NSString"@"NSError">24
v52@0:8@"NSDate"16@"NSUUID"24B32Q36@?<v@?@"NSError">44
v48@0:8@"NSError"16@"NSString"24@"NSUUID"32@?<v@?@"NSError">40
v48@0:8@"BRCBouncingReport"16Q24@"NSUUID"32@?<v@?@"NSError">40
v40@0:8@"BRCMigrationReport"16@"NSUUID"24@?<v@?@"NSError">32
B56@0:8@16Q24@32@40@?48
v56@0:8@16@24Q32Q40@?48
v44@0:8@16Q24I32@?36
(?="value"I""{?="isFault"b1"startDownload"b1"wantsThumbnail"b1"userInitiated"b1"wantsContentForThumbnail"b1})
B32@0:8q16q24
@"BRCTransferStream"
d40@0:8@16@24@32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@16@24q32q40
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURL"32
v56@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40
@"NSDictionary"
@"NSURLSession"
i36@0:8@16i24i28i32
I36@0:8@16I24I28I32
I40@0:8@16B24I28I32I36
Q48@0:8@16Q24Q32Q40
f40@0:8@16B24f28f32f36
f36@0:8@16f24f28f32
d48@0:8@16d24d32d40
@24@0:8i16B20
Q36@0:8[256c]16i24i28i32
v32@0:8r*16Q24
@32@0:8r^v16Q24
B40@0:8@16q24q32
@"NSURL"16@0:8
@"NSOperationQueue"16@0:8
v40@0:8@"NSURL"16@24@?<v@?@"NSError">32
v40@0:8@"NSURL"16@"NSFileProvidingInfo"24@?<v@?@"NSFileProvidingResponse">32
v32@0:8@"NSURL"16@24
@"NSURL"24@0:8@"NSURL"16
v32@0:8@"NSURL"16@?<v@?@"NSURL">24
v32@0:8@16@"NSURL"24
v32@0:8@"NSURL"16@"NSFileProviderPresenterInfo"24
v40@0:8@"NSURL"16@24@"NSURL"32
v40@0:8@"NSURL"16@"NSURL"24@?<v@?B>32
d20@0:8i16
v40@0:8^@16^@24^@32
q20@0:8B16
q32@0:8@16q24
q36@0:8@16q24i32
q20@0:8i16
B40@0:8d16d24^@32
v28@0:8@"BRReachabilityMonitor"16B24
v28@0:8@"BRReachabilityMonitor"16I24
@"BRReachabilityMonitor"
@104@0:8@16@24@32@40@48@56B64B68@72@80@88@96
B72@0:8@16@24Q32@40B48B52@56@64
B64@0:8@16@24Q32B40B44@48@56
v40@0:8Q16Q24Q32
B48@0:8{?=[8I]}16
@48@0:8{?=[8I]}16
@64@0:8@16@24{?=[8I]}32
{?=[8I]}16@0:8
{?="size"b1}
B32@0:8@16^B24
@N4/
 `4/
MbP?W
333333
@(#)PROGRAM:iCloudDriveCore  PROJECT:CloudDocs-1177.2.1.152.1
#BHN
 9CM
<<+<
)4@O
dflwx
++++
 #&),/258;>
MbP?
CA(knN
0C[s
%@ %@
serverTruthDirCount
serverTruthDirFaultCount
clientTruthDirFaultCount
timeSinceLogin
serverTruthTotalItemsCount
%@/%@
docID:
unsaltedBookmarkData
-[NSString(BRCBookmarkAdditions) parseUnsaltedBookmarkDataWithItemID:mangledID:error:]
(passed to caller)
(ignored by caller)
bookmarkData
-[NSString(BRCBookmarkAdditions) parseBookmarkDataWithAccountSession:docID:itemID:mangledID:unsaltedBookmarkData:error:]
BRGetFileNameFromServerInfoBlob
-[BRCAppLibrary(FPFSAdditions) createDocumentsFolder]
BRCAppLibrary+FPFSAdditions.m
importObject.isUnixDir
knownToServer
wasCached
etag
etagBeforeCrossZoneMove
deletionChangeToken
 etag:%@
 fav:%lld
 lu:%lld
 has-finder-tags
<%@:%p {etag : %@; fr: %lld; lu : %lld; ft: %s}>
<%@:%p>, device:'%s' mounted-on:'%s' fstype:%s(%@) case-sensitive:%s
RDONLY
SYNCHRONOUS
NOEXEC
NOSUID
NODEV
UNION
ASYNC
CPROTECT
EXPORTED
QUARANTINE
LOCAL
QUOTA
ROOTFS
DOVOLFS
DONTBROWSE
IGNORE_OWNERSHIP
AUTOMOUNTED
JOURNALED
NOUSERXATTR
DEFWRITE
MULTILABEL
NOATIME
v8@?0
SELECT %@ FROM %@ WHERE %@ IS NOT NULL ORDER BY %@ ASC LIMIT 1
side-car-sync
v16@?0@"NSError"8
INSERT OR REPLACE INTO side_car_lookahead (record_name, root_alias_record_name, item_favoriterank, item_lastusedtime, item_side_car_ckinfo, item_finder_tags) VALUES (%@, %@, %@, %@, %@, %@)
UPDATE server_items SET item_favoriterank = %@, item_lastusedtime = %@, item_finder_tags = %@, item_side_car_ckinfo = %@, item_rank = NULL WHERE zone_rowid = %@ AND item_id = %@
UPDATE server_items SET item_favoriterank = NULL, item_lastusedtime = NULL, item_finder_tags = NULL, item_side_car_ckinfo = NULL, item_rank = NULL WHERE zone_rowid = %@ AND item_id = %@
DELETE FROM side_car_lookahead WHERE record_name = %@
B16@?0@"PQLConnection"8
v16@?0@"CKRecord"8
v24@?0@"CKRecordID"8@"NSString"16
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
folderToPackageCount
folderToFileCount
folderToSymlinkCount
folderToAliasCount
packageToFolderCount
packageToFileCount
packageToSymlinkCount
packageToAliasCount
fileToFolderCount
fileToPackageCount
fileToSymlinkCount
fileToAliasCount
symlinkToFolderCount
symlinkToPackageCount
symlinkToFileCount
symlinkToAliasCount
aliasToFolderCount
aliasToPackageCount
aliasToFileCount
aliasToSymlinkCount
nonConflictingKindCount
Sqlite database became corrupted, abort...
-[BRCPQLConnection _setErrorHandlerWithDBCorruptionHandler:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/foundation/BRCPQLConnection.m
v32@?0@"PQLConnection"8@"PQLStatement"16@"NSError"24
B32@?0@"BRCPQLConnection"8@"PQLStatement"16@"NSError"24
%@ locked for more than 1 minute, aborting...
-[BRCPQLConnection _setLockedHandler]_block_invoke
%@ has been locked for %f seconds: %@
 (for statement %@)
(null)
Significantly too slow SQL statement: 
v32@?0@"PQLConnection"8^{sqlite3_stmt=}16Q24
ATTACH "%@" AS %@
-[BRCPQLConnection attachDBAtPath:as:error:]
setting profiling hook is not supported on %@
-[BRCPQLConnection setProfilingHook:]
com.apple.bird.db.batching
B20@?0@"PQLConnection"8i16
error closing connection %@: %@
-[BRCPQLConnection brc_close]
pragma page_count
pragma page_size
explain query plan %@
plan:
    %@
<%@: %p
finished
cancelled
executing
ready
waiting
 %s>
UNIMPLEMENTED
idle
 duration:%@
 (bypassing system scheduling)
 next-try:%@
 next-try:%@ ago
 last-error:%@
 last-try:%@
 sub {
    %@,
 dep {
isFinished
isExecuting
com.apple.bird.operation
failed
completed
with error: 
__defaultPersonaID__
X-APPLE-APP-TELEMETRY
x-apple-app-telemetry-new-server-token
v16@?0@"CKRequestInfo"8
remote:%p
sharedZoneSubscription
com.apple.sharedb
sync/sharedb
success
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v16@?0@"CKRecordZoneID"8
v28@?0@"CKServerChangeToken"8B16@"NSError"20
+[BRCLocalItem(BRCBookmarkAdditions) parseUnsaltedBookmarkData:itemID:mangledID:error:]
+[BRCLocalItem(BRCBookmarkAdditions) parseBookmarkData:inAccountSession:itemID:mangledID:unsaltedBookmarkData:error:]
 i:%@
 parent-id:%@
 sc:data
 sc:docs
 sc:trash
 old-pino:%lld
 alias-container:%@
 unsalted-bookmark-data:%@
 reverse-alias-containers:{%@}
 old-ct:%@
com.apple.finder.copy.preserveinbackups.com.apple.clouddocs.private.share-bookmark#N
com.apple.finder.copy.preserveinbackups.com.apple.clouddocs.private.trash-parent-bookmark#N
.rootContainerItemNotification
tags
BRCSizeInfoCompletedUnitCountKey
BRCSizeInfoTotalUnitCountKey
indeterminate
paused
s:%@ 
%@f:%.4f uc:%lld/%lld
v32@?0@8@"NSProgress"16^B24
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/notifs/BRCProgress.m
+[BRCProgress _progressForDocument:group:sizeInfo:]
-[BRCProgress addAliasItem:]
v16@?0@"PQLConnection"8
B16@?0@"BRCAppLibrary"8
-[BRCDaemonContainerHelper br_capabilityToMoveFromLocalItem:toNewParent:session:error:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/framework-helpers/BRCDaemonContainerHelper.m
-[BRCDaemonContainerHelper itemIDForURL:error:]
ClientItemsNotKnownByServer
UnexpectedItemsCreated
readonly-interactive-db
readonly-expensive-db
db-corrupting-handler-queue
db was corrupted with description - '%@' and due to - %@
-[BRCAccountSession(BRCDatabaseManager) dbBecameCorruptedWithDescription:error:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/database/BRCDatabaseManager.m
Invoked from DB Corruption Handler
v32@?0@"PQLConnection"8@"NSError"16@?<v@?>24
serverTruth
clientTruth
client.db
can't open the client db we've just created %{errno}d
-[BRCAccountSession(BRCDatabaseManager) _startWatcher]
someone ripped the database from under our feet
-[BRCAccountSession(BRCDatabaseManager) _startWatcher]_block_invoke
checker.db
fetch_and_inc64
v28@?0^{sqlite3_context=}8i16^^{sqlite3_value}20
inc_and_fetch64
fetch_and_dec64
dec_and_fetch64
call_block
indexset_contains
migration_is_parented_or_equal_to_old_doc_id
root
documents
SELECT item_parent_id FROM client_items WHERE zone_rowid = %@ AND item_id = %@
document_is_evictable
document_is_indexable
item_id_is_root
item_id_is_documents
item_id_is_shared_root
trigger_notification
bump_notifs_rank
bump_notifs_rank_and_trigger_notifs
checker
%@.db
control-odd
control-even
-[BRCAccountSession(BRCDatabaseManager) _setupBackupDetector:error:]
-[BRCAccountSession(BRCDatabaseManager) _stepBackupDetector:newState:error:]
UPDATE server_zones SET zone_plist = %@ WHERE rowid = %@
UPDATE client_zones SET zone_plist = %@ WHERE rowid = %@
INSERT OR IGNORE INTO server_zones (zone_owner, zone_name, zone_plist) VALUES (%@, %@, %@)
SELECT rowid from server_zones WHERE zone_owner = %@ and zone_name = %@
DELETE FROM server_zones WHERE rowid = %@
SELECT container_id, rowid FROM rowid_reservations
INSERT INTO rowid_reservations (container_id) VALUES (%@)
UPDATE app_libraries SET app_library_plist = %@, zone_rowid = %@ WHERE rowid = %@
INSERT OR REPLACE INTO app_libraries (rowid, app_library_name, app_library_plist, zone_rowid)  VALUES (%@, %@, %@, %@)
DELETE FROM app_libraries WHERE rowid = %@
SELECT rowid, app_library_name, app_library_plist, zone_rowid FROM app_libraries
@24@?0@"PQLResultSet"8^@16
INSERT OR REPLACE INTO client_zones (rowid, zone_owner, zone_name, zone_plist) VALUES (%@, %@, %@, %@)
DELETE FROM client_zones where rowid = %@
SELECT rowid, zone_owner, zone_name, zone_plist FROM client_zones WHERE zone_owner != %@
SELECT rowid, zone_owner, zone_name, zone_plist FROM server_zones WHERE zone_owner != %@
SELECT rowid, zone_owner, zone_name, zone_plist FROM server_zones WHERE zone_owner = %@ AND zone_name = %@
SELECT rowid, zone_owner, zone_name, zone_plist FROM client_zones WHERE zone_owner = %@
SELECT rowid, zone_owner, zone_name, zone_plist FROM client_zones WHERE zone_owner = %@ AND zone_name = %@ AND zone_plist IS NOT NULL
SELECT rowid, zone_owner, zone_name, zone_plist FROM client_zones WHERE zone_owner = %@ AND rowid = %@
SELECT rowid, zone_owner, zone_name, zone_plist FROM server_zones WHERE zone_owner = %@
<rdar://problem/23820733>
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE (item_staged_file_id BETWEEN -9223372036854775808 AND 9223372036854775807)   AND (item_staged_file_id != item_file_id OR item_file_id IS NULL)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE item_bouncedname LIKE '%%.folder'   AND item_filename NOT LIKE '%%.folder'   AND item_type = 0   AND item_state IN (0, -1)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE item_tmpbounceno IS NOT NULL
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items AS li   WHERE li.item_notifs_rank >= %lld   ORDER BY li.item_notifs_rank ASC LIMIT %lld
SELECT li.rowid, li.zone_rowid, li.item_id, li.item_creator_id, li.item_sharing_options, li.item_side_car_ckinfo, li.item_parent_zone_rowid, li.item_localsyncupstate, li.item_local_diffs, li.item_notifs_rank, li.app_library_rowid, li.item_min_supported_os_rowid, li.item_user_visible, li.item_stat_ckinfo, li.item_state, li.item_type, li.item_mode, li.item_birthtime, li.item_lastusedtime, li.item_favoriterank,li.item_parent_id, li.item_filename, li.item_hidden_ext, li.item_finder_tags, li.item_xattr_signature, li.item_trash_put_back_path, li.item_trash_put_back_parent_id, li.item_alias_target, li.item_creator, li.item_processing_stamp, li.item_staged_file_id, li.item_staged_generation, li.item_bouncedname, li.item_scope, li.item_local_change_count, li.item_old_version_identifier, li.version_name, li.version_ckinfo, li.version_mtime, li.version_size, li.version_thumb_size, li.version_thumb_signature, li.version_content_signature, li.version_xattr_signature, li.version_edited_since_shared, li.version_device, li.version_conflict_loser_etags, li.version_quarantine_info, li.version_uploaded_assets, li.version_upload_error, li.version_old_zone_item_id, li.version_old_zone_rowid, li.version_local_change_count, li.version_old_version_identifier, li.desired_version, li.item_live_conflict_loser_etags, li.item_file_id, li.item_generation, li.version_block_sync_until_bundle_id, li.version_block_sync_until_timestamp FROM client_items AS li INNER JOIN client_sync_up AS su ON su.throttle_id = li.rowid WHERE su.zone_rowid = %@   AND (su.in_flight_diffs BETWEEN -9223372036854775808 AND 9223372036854775807)   AND su.throttle_state != 0
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE item_doc_id = %u AND desired_version IS NOT NULL   AND +item_state IN (0, -1)   AND +item_type IN (1, 2, 6, 7)
SELECT key FROM devices WHERE name = %@
INSERT INTO devices (name) VALUES (%@)
SELECT user_plist FROM users WHERE user_key = %@
SELECT user_plist FROM users WHERE user_name = %@
UPDATE users SET user_plist = %@ WHERE user_name = %@
SELECT user_key FROM users WHERE user_name = %@
SELECT user_name FROM users WHERE user_key = %@
INSERT INTO users (user_name) VALUES (%@)
UPDATE client_items SET item_min_supported_os_rowid = NULL
SELECT os, br, bird_schema, db_schema FROM %@ ORDER BY rowid DESC LIMIT 1
INSERT INTO %@ (date,os,br,bird_schema,db_schema) VALUES (%lu,%@,%@,%u,%@)
DELETE FROM telemetry_events
server
client
SELECT count(*) FROM server_state
missing entry in the server_state table
+[BRCAccountSession(BRCDatabaseManager) _checkIntegrity:serverTruth:session:skipBackupDetection:error:]
server_boot_history
SELECT old, new, counter, os, br FROM backup_detector
UPDATE backup_detector set old = %llu, new = %llu, counter = %llu, br = %@
SELECT count(*) FROM client_state
missing entry in the client_state table
boot_history
UPDATE backup_detector SET os = %@
SELECT * FROM client_state
there should always be one row in client_state {%@}
-[BRCAccountSession(BRCDatabaseManager) _finishClientTruthConnectionSetupWithError:]
SELECT uuid FROM backup_detector
%lld
PRAGMA cache_size = %@
PRAGMA cache_spill = %@
B16@?0@"BRCServerZone"8
UPDATE client_state SET v = %@
unable to flush client state, crash to maintain consistency
-[BRCAccountSession(BRCDatabaseManager) _finishClientTruthConnectionSetupWithError:]_block_invoke
B16@?0@"BRCClientZone"8
CREATE TEMP TRIGGER child_item_count_notifs  AFTER UPDATE OF visible_child_count ON main.client_items  BEGIN  UPDATE client_items SET item_notifs_rank = bump_notifs_rank_and_trigger_notifs(old.rowid)   WHERE old.visible_child_count != new.visible_child_count     AND rowid = old.rowid     AND item_type = 0 ; END
SELECT state FROM server_state
there should always be one row in server_state: %@
-[BRCAccountSession(BRCDatabaseManager) _finishServerTruthConnectionSetupWithError:]_block_invoke
server.db
PRAGMA recursive_triggers = true
db is stale even after recreating
+[BRCAccountSession(BRCDatabaseManager) _openConnection:serverTruth:databaseName:baseURL:initialVersion:lastCurrentVersion:error:]
we should be able to attach the server db {%@}
SELECT bird_schema FROM server_boot_history ORDER BY rowid DESC LIMIT 1
SELECT bird_schema FROM boot_history ORDER BY rowid DESC LIMIT 1
>>> BROKEN STRUCTURE
>>> SYNC DISABLED (app not installed)
>>> NEEDS UPGRADE
- %@
-----------------------------------------------------
+ app library: %@
 - not done dumping items -
SELECT count(*) FROM boot_history
%u containers matching '%s'
-[BRCAccountSession(BRCDatabaseManager) dumpStatusToFileHandle:zoneName:tracker:error:]
-[BRCAccountSession(BRCDatabaseManager) dumpDatabaseToFileHandle:zoneName:includeAllItems:tracker:error:]
dump taken at %@ [account=%@] [inCarry=%s] [home=%@]
dump taken at %@
boot_history (startup %.1fs ago)
server_truth
SELECT date,os,br,bird_schema,db_schema FROM server_boot_history ORDER BY rowid DESC LIMIT 10
  [%s] OS:%s CloudDocs:%s BirdSchema:%u DBSchema:%u
client_truth
SELECT date,os,br,bird_schema,db_schema FROM boot_history ORDER BY rowid DESC LIMIT 10
backup_detector
SELECT old,new,counter,os,br FROM backup_detector
  [%u|%u|%u] OS:%s CloudDocs:%s DBSchema:%ld
SELECT * FROM server_state
server_state
-----------------------------------------------------
client_state
-----------------------------------------------------
devices:
SELECT key, name FROM devices
    o "%s" (%ld)
users:
SELECT user_key, user_name, user_plist FROM users
    o "%s" %s (%ld)
%u containers matching '%s'
-----------------------------------------------------
v16@?0@"BRCAccountHandler"8
-[BRCAccountSession(BRCDatabaseManager) dumpFileCoordinationInfoToFileHandle:error:]
backup
privacy
update devices set name = (key || "-" || SUBSTRING(name, 1, 1) || "{" || (LENGTH(name) - 2) || "}" || SUBSTRING(name, -1, 1))
<rdar://problem/29182551>
SELECT COUNT(1) FROM client_items
totalNumberOfItems
SELECT COUNT(1) FROM client_items WHERE item_type = 2
totalNumberOfFaults
SELECT COUNT(1) FROM client_items WHERE item_type = 1
totalNumberOfDocuments
SELECT COUNT(1) FROM client_items WHERE item_type = 0
totalNumberOfDirectories
WHERE ciconia_version %@ %llu
SELECT COUNT(uuid), COUNT(last_error) FROM ciconia_history %@
INSERT INTO ciconia_history (date, os, br, bird_schema, db_schema, ciconia_version, duration, uuid, last_error) VALUES (%lu, %@, %@, %u, %@, %llu, %f, %@, %@)
internal-db-%d.%03d
old-db-%d.%03d
DatabaseFromTheFuture
database has a major version from the future: %d (want at most %d)
fetch-recent-documents
%K == %@
indexName
SearchIndexes
unreachable: Couldn't allocate ranks when fetching query %@
v24@?0@"CKQueryCursor"8@"NSError"16
recent_documents
favorite_documents
v24@?0@"_BRCOperation"8@"NSError"16
com.apple.bird.account-migrator
com.apple.bird.account-migrator.throttle
v32@?0@"AARequest"8@"AAResponse"16@"NSError"24
v12@?0c8
com.apple.bird.handle-account-changes
com.apple.brc.push
com.apple.bird.migration-setter
com.apple.Preferences
com.apple.bird.disabled-events
com.apple.bird.push
%s-%d
com.apple.bird.sync
com.apple.bird.configuration-server-update
com.apple.bird.transmogrify
com.apple.bird.cache-delete.push
com.apple.bird.aggressive-pcs-chain
com.apple.bird.analytics-report
com.apple.bird.app-telemetry
com.apple.bird.db-integrity-check
com.apple.bird.sync-consistency-check
com.apple.ubd.prsid
not DS
com.apple.CloudDocs.iCloudDriveFileProviderManaged
-[BRCAccountHandler addFileProviderDomainForAccount:error:]
BRCAccountHandler.m
timeout == 0
session-watchdog
com.apple.bird
timed out waiting for %u seconds for account session to close!
-[BRCAccountHandler __destroySessionWithIntents:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/notifs/BRCAccountHandler.m
B16@?0Q8
Disabled - iCloud Drive database is from the future
Cannot open account session
#%lu FAIL %s
#%lu fd = %d
SqliteSQL
Still unable to open account after attempted reset: %@ (underlying: %@, sql: %@)
open result: %@
-[BRCAccountHandler _loadOnDiskAccountSessionWithError:]
v20@?0B8@"NSError"12
v16@?0@"NSObject<OS_xpc_object>"8
list-dir/
B16@?0@"NSError"8
v36@?0@"CKQueryCursor"8@"CKServerChangeToken"16B24@"NSError"28
UPDATE server_items SET item_type = 0, item_rank = NULL WHERE item_id = %@ AND zone_rowid = %@ AND item_type = 9
%K == %@ AND %K == %@ AND %K == %@
folderID
getContentRecords
getShareRecords
ListRecordsInFolder
v32@?0@"CKRecordID"8@"CKRecord"16@"NSError"24
v16@?0@"CKQueryCursor"8
Can't list changes when we haven't synced down
BRCListDirectoryContentsOperation
rec-list-dir/
rec-list fetch next item
WITH RECURSIVE item_children (item_id, zone_rowid, item_type) AS (     SELECT item_id, zone_rowid, item_type FROM server_items      WHERE zone_rowid = %@ AND item_parent_id = %@ AND item_type IN (0, 9, 10) AND NOT item_id_is_documents(item_id)  UNION ALL     SELECT si.item_id, si.zone_rowid, si.item_type FROM server_items AS si INNER JOIN item_children AS p WHERE si.item_parent_id = p.item_id AND si.zone_rowid = p.zone_rowid AND si.item_type IN (0, 9, 10)) SELECT item_id FROM item_children WHERE item_type IN (9, 10)
FSEventToSyncUp
UserDownload
analytics-reporter
wait-on-idle
v12@?0B8
SELECT retry_count FROM telemetry_failure_counts WHERE item_id = %@ AND zone_rowid = %@
DELETE FROM telemetry_failure_counts WHERE item_id = %@ AND zone_rowid = %@
INSERT OR REPLACE INTO telemetry_failure_counts (retry_count, item_id, zone_rowid) VALUES (%lld, %@, %@)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE (item_sharing_options & 4) != 0 AND item_type IN (0, 9, 10) AND rowid > %llu ORDER BY rowid ASC LIMIT 1
v16@?0@"BRCItemCountMismatchReport"8
v16@?0@"BRCSyncConsistencyReport"8
analytics metrics
%@: %@
v16@?0@"NSMutableArray"8
SyncHealthReport:
v16@?0@"NSString"8
SELECT COUNT(1) FROM telemetry_events
SELECT rowid, payload FROM telemetry_events WHERE priority = 1 ORDER BY rowid LIMIT %u
DELETE FROM telemetry_events WHERE priority = 1 AND rowid <= %llu
SELECT rowid, payload FROM telemetry_events ORDER BY rowid ASC LIMIT %llu
DELETE FROM telemetry_events WHERE rowid <= %llu
CICONIA
INSERT INTO telemetry_events (payload, priority) VALUES (%@, %d)
DELETE FROM telemetry_events ORDER BY priority ASC, rowid ASC LIMIT %u
lastForceTelemetrySyncDate
DELETE FROM telemetry_failure_counts AS tf WHERE NOT EXISTS (SELECT 1 FROM server_items AS si WHERE si.item_id = tf.item_id AND si.zone_rowid = tf.zone_rowid) AND NOT item_id_is_root(tf.item_id)
v24@?0@"NSNumber"8@"NSError"16
com.apple.idms.config.privacy.icloud.data
telemetry-enabled-refresh
com.apple.clouddocs
unreachable: configuration dictionary missing analytics key
v24@?0@"NSDictionary"8@"NSError"16
<%@ t:%.2fs%@>
isPackage
contentSize
syncUpBatchSize
 i:%@ %ssz:%lld su-batch:%lld
pkg 
didSucceed
isDownloadingForBackup
isRecursiveDownload
itemCount
totalContentSize
 sz:%lld cnt:%lld %s%s
recursive 
for-backup
v32@?0@"NSString"8@16^B24
<%@:%p e:%@ ppcs:%@ spcs:%@>
SELECT ci.zone_rowid, IFNULL(si.pcs_state, 0) FROM client_items AS ci LEFT JOIN server_items AS si ON ci.item_id = si.item_id AND ci.zone_rowid = si.zone_rowid WHERE ci.rowid = %lld
AND item_localsyncupstate = 3
AND desired_version IS NOT NULL
AND item_localsyncupstate = 4
v32@?0@"BRMangledID"8@"BRCErrorGrouping"16^B24
en_US_POSIX
yyyy-MM-dd HH:mm:ss
SELECT error_domain, error_code, error_message, error_timestamp, service, item_rowid FROM item_errors
SELECT 1 FROM client_items WHERE rowid = %llu %@
DELETE FROM item_errors WHERE item_rowid = %llu AND service = %d
SELECT cd.throttle_id, cd.last_try_stamp FROM client_downloads AS cd INNER JOIN client_items AS li ON cd.throttle_id = li.rowid WHERE cd.last_try_stamp > 0 AND cd.last_try_stamp < %lld AND cd.retry_count = 0 AND cd.throttle_state = 1 AND li.item_state IN (0, -1) AND li.desired_version IS NOT NULL
SELECT COUNT(item_id), item_depth FROM server_items WHERE item_depth < 0 GROUP BY item_depth
SELECT cu.throttle_id, cu.last_try_stamp FROM client_uploads AS cu INNER JOIN client_items AS li ON cu.throttle_id = li.rowid WHERE cu.last_try_stamp > 0 AND cu.last_try_stamp < %lld AND cu.retry_count = 0 AND cu.throttle_state = 1 AND li.item_state IN (0, -1) AND li.item_localsyncupstate = 3
SELECT csu.throttle_id, csu.last_try_stamp FROM client_sync_up AS csu INNER JOIN client_items AS li ON csu.throttle_id = li.rowid WHERE csu.last_try_stamp > 0 AND csu.last_try_stamp < %lld AND csu.retry_count = 0 AND csu.throttle_state = 1 AND li.item_localsyncupstate = 4
SELECT ci.rowid FROM client_items AS ci WHERE ci.item_localsyncupstate = 4 AND ci.item_min_supported_os_rowid IS NULL AND NOT EXISTS (SELECT 1 FROM client_sync_up AS cs WHERE cs.throttle_id = ci.rowid AND cs.throttle_state != 0)
SELECT ci.rowid FROM client_items AS ci LEFT JOIN client_uploads AS cu ON ci.rowid = cu.throttle_id WHERE ci.item_localsyncupstate = 3 AND ci.item_type IN (1, 6) AND ci.item_state IN (0, -1) AND IFNULL(cu.throttle_state, 0) = 0
SELECT ci.rowid FROM client_items AS ci WHERE ci.desired_version IS NOT NULL AND ci.item_staged_file_id IS NULL AND ci.item_state IN (0, -1) AND NOT EXISTS (SELECT 1 FROM client_downloads AS cd WHERE cd.throttle_id = ci.rowid AND cd.download_kind = %d AND cd.throttle_state != 0) AND call_block(%p, ci.desired_version)
SELECT COUNT(*) FROM client_items WHERE item_type IN (9, 10)
SELECT COUNT(*) FROM server_items WHERE item_type IN (9, 10)
SELECT COUNT(*) FROM server_items WHERE item_type IN (0, 9, 10)
SELECT MIN(date) FROM boot_history
B16@?0@"BRCPrivateClientZone"8
SELECT COUNT(1) FROM server_items
uploadError: none
uploadError: %@
syncUpError: none
syncUpError: %@
downloadError: none
downloadError: %@
syncUpSharedZoneError: none
syncUpSharedZoneError: %@;%ld pcs:%s count:%@
syncUpPrivateZoneError: none
syncUpPrivateZoneError: %@;%ld pcs:%s count:%@
syncDownSharedZoneError: none
syncDownSharedZoneError: %@;%ld pcs:%s count:%@
syncDownPrivateZoneError: none
syncDownPrivateZoneError: %@;%ld pcs:%s count:%@
v32@?0@"NSNumber"8@"NSNumber"16^B24
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/telemetry/BRCAnalyticsReporter.m
+[BRCItemCountMismatchReport generateReportForSharedFolder:qualityOfService:completionHandler:]
iCloudDriveSyncConsistency
telemetry-db
com.apple.CloudDocsDaemon.telemetry-disk-checker
UNKNOWN
_UNUSED_SYNC_UP_BACKOFF_RATIO
FOLDER_SHARING_ITEM_COUNT_MISMATCH
MISSING_PUSH
PERMANENTLY_INCONSISTENT
DROPPED_EVENTS
TEST_METRIC
SHARE_ALIAS_IN_SHARED_FOLDER
MALIGNANT_ZONE_RESET
BENIGN_ZONE_RESET
DB_RESET
APPLY_SCHEDULER_MISSING_JOBS
SYNC_UP_MISSING_JOBS
READER_MISSING_JOBS
UPLOADER_MISSING_JOBS
DOWNLOADER_MISSING_JOBS
_UNUSED_SYNC_UP_BACKOFF_DELAY
FOLDER_SHARING_PCS_CHAINING
NEW_SHARE_ACCEPTATION
FS_EVENT_TO_SYNC_UP
USER_DOWNLOAD
CORRUPT_PACKAGE_DOWNLOAD
DIRECTORY_MISSING_CHAINPCS
SYNC_BOOSTING_PROBLEM_COUNT
DEEP_SCAN
OPERATION_TIMED_OUT
MISSING_SHARE_ALIAS
ASSET_CONTENT_NOT_FOUND
QBS_DIR_FAULT_COUNT
FILE_BOUNCED_MANY_TIMES
SYNC_UP_BACKOFF_RATIO_SUMMARY
SYNC_UP_BACKOFF_DELAY_SUMMARY
QBS_PERFORMANCE
FULLY_CONSISTENT
FILE_CHECKSUM_MISMATCH
PACKAGE_CHECKSUM_MISMATCH
CHILD_COUNT_MISMATCH
RECURSIVE_ITEM_COUNT_MISMATCH
SHARE_ALIAS_COUNT_MISMATCH
SHARE_COUNT_MISMATCH
CONSISTENCY_CHECKER_FAILED
FILE_READ_ERROR
CA_TOTAL_ERROR_COUNT
CA_UPLOAD_ERROR_COUNT
CA_DOWNLOAD_ERROR_COUNT
CA_SYNC_UP_ITEM_ERROR_COUNT
CA_SYNC_UP_ZONE_ERROR_COUNT
CA_SYNC_DOWN_ERROR_COUNT
CA_UPLOAD_ERROR
CA_DOWNLOAD_ERROR
CA_SYNC_UP_ITEM_ERROR
CA_SYNC_UP_ZONE_ERROR
CA_SYNC_DOWN_ERROR
CICONIA_STARTED_MIGRATION
CICONIA_MISMATCHING_ITEM_DB_DISK
CICONIA_CLEANUP_FAILURE
CICONIA_MIGRATION_FINISHED
CICONIA_QUEUEING_FAILED
CICONIA_STATUS_REPORT
CICONIA_OVER_BOUNCE
(unknown: %i)
minimumOSName
recordId
zone-health-check
dir-fault
dir-share-accept-fault
fault
doc-share-accept-fault
alias
fs-root
symlink
finder-bookmark
bookmark-fault
live
dead
lost
reserved
lost(z)
rejected
needs-read
needs-upload
needs-sync-up
migrating
rej-migrating
missing-fid
share-id
web-shared-ro
web-shared-rw
public-share-ro
public-share-rw
private-share-ro
private-share-rw
read-only-record
p:%@ 
n:"%@" 
(o:"%@") 
target:"%@" 
etag:%@ 
prev-etag:%@ 
deletion-token:%@ 
bt:%lld 
lu:%lld 
fa:%lld 
m:%s 
hidden-ext 
ea:%@ 
has-finder-tags 
trash-put-back{%@, %@} 
creator:%@ 
ckInfo
parentID
state
type
mode
birthtime
lastusedtime
favoriterank
filename
aliasTarget
finderTags
hiddenExt
xattrSig
putBackPath
putBackParentID
creatorRowID
item %s has invalid state: %d
item %s has invalid type: %d
item %s has invalid mode: 0%0x
item %s has an invalid parent id
SELECT name FROM devices WHERE key = %lld
mt:%lld 
sz:%@ 
tsz:%@ 
<pkg-pending>
<file-pending>
sig:%@ 
<pending>
tsig:%@ 
losers:{%@} 
ess:%ld 
device:%@ 
last-editor:%@ 
quarantine:%u 
mtime
name
size
thumbnailSize
thumbnail
content
editedKey
deviceKey
deviceName
conflictLoserEtags
quarantineInfo
_%@_%@.%@
_%@_%@
synced-all
share-synced-all
synced-st-all
synced-ct-all
synced-ct-on-pause
not-synced-ct-on-pause
item-id
item-shared
item-owner
st-all
st-ckinfo
st-state
st-alias-state
st-mode
st-birthtime
st-parent-id
st-filename
st-hidden-ext
st-xattr
st-finder-tags
st-trash-put-back
st-last-used-time
st-favorite-rank
st-symlink-target
st-directory-mtime
ct-all
ct-ckinfo
ct-mtime
ct-name
ct-size
ct-sig
ct-xattr
ct-thumb
ct-losers
ct-quarantine
ct-edited
fs-all
fs-state
fs-document-id
fs-file-id
fs-generation
fs-localname
fs-scope
fs-stage
lct-all
lct-ul-assets
lct-ul-error
lct-prev-zone
l-all
l-min-os
l-sync-up-state
l-dl-version
l-app-library
l-user-visibility
sc-ckinfo
m-oob-sync
m-forced-conflict
m-cross-zone-moved
m-initial-scan
m-needs-sharing-info
m-reset
path
isWritable
isExecutable
symlinkContent
signature
xattrIndex
DIRECTORY
FILE
SYMLINK
TOMBSTONE
streamUUID
event
streamUUID:%@ event:%llu root:%llu
fsevents
com.apple.brc.notififcation-mgr
share/accept
v32@?0@"CKShareMetadata"8@"CKShare"16@"NSError"24
sharing/iWork-publishing-fetch
unreachable: No error and invalid number of records %lu
app-lib
home-desktop-or-docs
top-item
item
desktop-path-match
com.apple.icloud.itemName
#pc#d#b#-#l#s#w
brok
UF_COMPRESSED
com.apple.metadata:_kMDItemUserTags
com.apple.clouddocs.security
i12@?0i8
pkpass
com.apple.FinderInfo
com.apple.clouddocs.private.item-sync-paused-by-bundle-id#N
com.apple.clouddocs.private.item-sync-paused-expire-timestamp#N
path:'%@' parentFileID:%llu
 fileID:%llu
 size:%llu
 mtime:%lu
 mode:%c%c%c%c%c%c%c%c%c%c
 quarantine:%u
 br-alias
 finder-alias
 documentID:%u
 generationID:%u fd:%d refs:%u
 appLibrary:%@
path:'%@' unresolved
path:'%@/%@' unresolved
operationType
totalTime
recordsFetched
recordsFetchedTotalMetadataSize
xattrsFetchedTotalSize
Can't init mutex
Can't destroy mutex
Dead lock
Invalid mutex
Can't unlock mutex
Mutex should already be locked
Don't call %@.
-[BRCMinHeap init]
<BRCMinHeap %p objects:%@ array:[
%p:%@, 
side-car.sync-up
SELECT item_state, item_side_car_ckinfo, item_rank FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT item_side_car_ckinfo FROM side_car_lookahead WHERE record_name = %@
SELECT li.rowid, li.zone_rowid, li.item_id, li.item_creator_id, li.item_sharing_options, li.item_side_car_ckinfo, li.item_parent_zone_rowid, li.item_localsyncupstate, li.item_local_diffs, li.item_notifs_rank, li.app_library_rowid, li.item_min_supported_os_rowid, li.item_user_visible, li.item_stat_ckinfo, li.item_state, li.item_type, li.item_mode, li.item_birthtime, li.item_lastusedtime, li.item_favoriterank,li.item_parent_id, li.item_filename, li.item_hidden_ext, li.item_finder_tags, li.item_xattr_signature, li.item_trash_put_back_path, li.item_trash_put_back_parent_id, li.item_alias_target, li.item_creator, li.item_processing_stamp, li.item_staged_file_id, li.item_staged_generation, li.item_bouncedname, li.item_scope, li.item_local_change_count, li.item_old_version_identifier, li.version_name, li.version_ckinfo, li.version_mtime, li.version_size, li.version_thumb_size, li.version_thumb_signature, li.version_content_signature, li.version_xattr_signature, li.version_edited_since_shared, li.version_device, li.version_conflict_loser_etags, li.version_quarantine_info, li.version_uploaded_assets, li.version_upload_error, li.version_old_zone_item_id, li.version_old_zone_rowid, li.version_local_change_count, li.version_old_version_identifier, li.desired_version, li.item_live_conflict_loser_etags, li.item_file_id, li.item_generation, li.version_block_sync_until_bundle_id, li.version_block_sync_until_timestamp FROM client_items AS li  INNER JOIN client_sync_up AS su    ON su.throttle_id = li.rowid  WHERE         su.throttle_state = 50    AND su.throttle_state != 0    AND su.zone_rowid = %@    AND su.in_flight_diffs IS NULL    AND li.item_stat_ckinfo IS NOT NULL    AND li.item_localsyncupstate = 4    AND li.item_min_supported_os_rowid IS NULL
account-waiter
unavailable
no account
restricted
temporarily unavailable
available
unhandled account status
v24@?0q8@"NSError"16
zoneName
sharedZone
errorDomain
errorCode
errorDescription
lastStep
itemID
reason
nonDiscretionary
hasForegroundClients
isPCSChained
eventGroupUUID
ciconiaInvestigation
qbsInvestigation
qbsPerformance
bouncesInvestigation
com.apple.fpfs.fileid
inactive
active
pending-lost
pending-busy
pending-czm
same-lib-target
eperm
fpfs-migration
pending-parent
parent-fetch
pending-scan
pending-download
pending-target
pending-child
pending-coordination
pending-migration
pending-flock
pending-favorites
pending-sync-up
pending-quota
toolarge
pending-winner
pending-disk
sync-up-scheduled
ineligible
BRCFSSchedulerBaseDidUpdateHasWorkNotification
SELECT next_retry_stamp > %llu FROM %@ WHERE %@
SELECT 1 FROM %@ WHERE %@ AND throttle_state = 1 LIMIT 1
SELECT throttle_state FROM %@ WHERE %@ AND throttle_state != 0
SELECT zone_rowid, throttle_id, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp%@%@ FROM %@ WHERE %@%@
 %@ attempts:%d
 last:%@
 next:%@
 cleanup:%@
[%ld %@]
SELECT throttle_state, COUNT(*) FROM %@ WHERE %@ GROUP BY throttle_state
 %@:%lld
 idle
UPDATE %@ SET   throttle_state = 1, retry_count = %u, last_try_stamp = %llu, next_retry_stamp = %llu, expire_stamp = %llu WHERE %@
INSERT INTO %@ (  throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, %@ %@ %@) VALUES (  %u, %u, %lld, %lld, %lld, %@ %@ %@)
UPDATE %@ SET  throttle_state = %d, retry_count = %u, last_try_stamp = %lld, next_retry_stamp = %lld, expire_stamp = %lld%@ %@  WHERE %@
UPDATE %@ SET throttle_state = 1 WHERE throttle_state = %u %@%@
AND 
SELECT retry_count, last_try_stamp, next_retry_stamp, expire_stamp, throttle_state FROM %@ WHERE %@
UPDATE %@   SET throttle_state = call_block(%@, next_retry_stamp) WHERE %@
DELETE FROM %@ WHERE %@
UPDATE %@   SET retry_count = 0, next_retry_stamp = 0 WHERE %@
DELETE FROM %@ WHERE throttle_state = 0 AND expire_stamp <= %lld
SELECT throttle_id FROM %@ WHERE throttle_state > 0 LIMIT 1
  SELECT next_retry_stamp, %@     FROM %@    WHERE throttle_state = 1          %@%@%@      AND next_retry_stamp >= 0 ORDER BY next_retry_stamp    LIMIT %u
AND (
with active work
watchItem
watchChildren
watchDescendants
withInitialGather
withContainers
docs
data
dirs
faults
extern
trash
dirs-only
com.apple.brc.pipe
<%@ %p
 gathering
 {%@}
 {descendants of 
 {children of 
 {item at 
[fid:%@]
[fid:%@ n:%@]
 (%@%@)}
|withAliases
 {NSMDQ
 data
 docs
 dirs-only
 dirs
 faults
 ext
 trash
 queued:%ld>
v32@?0@"NSNumber"8@"BRProgressUpdate"16^B24
v16@?0@"NSArray"8
v20@?0B8@"BRCDataOrDocsScopeGatherer"12
unreachable: Invalid notification pipe setup
nsmdq
-[BRCNotificationPipe(IPCs) watchItemsNamesPrefixedBy:inScopes:appLibraryIDs:gatherReply:]
-[BRCNotificationPipe(IPCs) watchScopes:appLibraryIDs:gatherReply:]
-[BRCNotificationPipe(IPCs) watchScopes:gatherReply:]
-[BRCNotificationPipe(IPCs) boostPriority:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/notifs/BRCNotificationPipe.m
-[BRCNotificationPipe(IPCs) _triggerImmediateReadOfDocumentIfNeeded]
-[BRCNotificationPipe(IPCs) invalidate]
WaitingTimeBeforeDisplay
MinimalDisplayTime
default
alternate
other
cancel
v16@?0Q8
v32@?0@8@16^B24
_IOS
_DEFAULT
keynote
_KEYNOTE
numbers
_NUMBERS
pages
_PAGES
_FOLDER
SHARING_JOIN_HEADER_FOLDER
Localizable
SHARING_JOIN_HEADER
SHARING_JOIN_HEADER_DEFAULT_APP
SHARING_JOIN_HEADER_NO_DOCUMENT_NAME
SHARING_JOIN_MESSAGE_PRIVATE
SHARING_JOIN_MESSAGE_PUBLIC
SHARING_JOIN_ALT_BUTTON
SHARING_JOIN_DEFAULT_BUTTON
v32@?0@"NSPersonNameComponents"8@"NSString"16@"NSError"24
SHARING_ICLOUD_SETUP_HEADER_IOS
SHARING_ICLOUD_SETUP_MESSAGE_IOS
SHARING_ICLOUD_SETUP_ALT_BUTTON_IOS
PREVIEW_BUTTON
SHARING_ICLOUD_SETUP_DEFAULT_BUTTON_IOS
SHARING_ICLOUD_DRIVE_SETUP_HEADER_IOS
SHARING_ICLOUD_DRIVE_SETUP_MESSAGE_IOS
SHARING_ICLOUD_DRIVE_SETUP_ALT_BUTTON_IOS
SHARING_ICLOUD_DRIVE_SETUP_DEFAULT_BUTTON_IOS
shareMetadata
SHARING_APP_NOT_INSTALLED_HEADER_IOS
SHARING_APP_NOT_INSTALLED_MESSAGE_IOS
SHARING_APP_NOT_INSTALLED_ALT_BUTTON_IOS
SHARING_APP_NOT_INSTALLED_DEFAULT_BUTTON_IOS
SHARING_PROFILE_DISABLED_HEADER_IOS
SHARING_PROFILE_DISABLED_MESSAGE_IOS
SHARING_PROFILE_DISABLED_DEFAULT_BUTTON_IOS
SHARING_GENERIC_ERROR_HEADER
SHARING_GENERIC_ERROR_MESSAGE
SHARING_GENERIC_ERROR_DEFAULT_BUTTON
SHARING_DEVICE_OFFLINE_ERROR_HEADER
SHARING_DEVICE_OFFLINE_ERROR_MESSAGE
SHARING_DEVICE_OFFLINE_ERROR_DEFAULT_BUTTON
SHARING_ICLOUD_NOT_REACHABLE_HEADER
SHARING_ICLOUD_NOT_REACHABLE_MESSAGE
SHARING_ICLOUD_NOT_REACHABLE_DEFAULT_BUTTON
SHARING_NO_LONGER_SHARED_HEADER
SHARING_NO_LONGER_SHARED_MESSAGE
SHARING_NO_LONGER_SHARED_BUTTON
SHARING_PARTICIPANT_LIMIT_REACHED_HEADER
SHARING_PARTICIPANT_LIMIT_REACHED_MESSAGE
SHARING_PARTICIPANT_LIMIT_REACHED_ALT_BUTTON
SHARING_FALLBACK_SUCCESS_HEADER
SHARING_FALLBACK_SUCCESS_DEFAULT_BUTTON
docs.icloud.com:
-[BRCBookmark _resolveTargetWithError:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/fs/BRCBookmark.m
-[BRCBookmark _resolveDataWithError:]
-[BRCBookmark writeUnderParent:name:error:]
.%@.alias
-[BRCSymlinkItem(FPFSAdditions) updateWithImportObject:onlyContentDependentProperties:error:]
com.apple.bird.xpc-listener-ready
com.apple.bird.account-startup-queue
com.apple.bird.account-resume-queue
com.apple.bird.startup-queue
account-loader
com.apple.language.changed
v12@?0i8
share-accept
v24@?0@8@"NSError"16
share accept operations
 %@: %@
v32@?0@"NSString"8@"BRCSharingAcceptFlowOperation"16^B24
our connection was invalidated
-[BRCDaemonFPFS listener:shouldAcceptNewConnection:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/daemon/BRCDaemon.m
NOT 
sharing/copy-share
share
unreachable: Can't find root itemID %@
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/sharing/BRCSharingCopyShareOperation.m
-[BRCSharingCopyShareOperation fetchRootURLIfNecessaryAndFinishWithShare:]_block_invoke
unreachable: Can't find URL for root itemID %@
rejection
creation
update
Apply Changes
client_unapplied_table
SELECT throttle_state, COUNT(*) FROM client_unapplied_table WHERE %@ AND throttle_id > 0   AND throttle_id IN (SELECT item_rank FROM server_items) GROUP BY throttle_state
SELECT COUNT(*) FROM client_unapplied_table WHERE %@ AND throttle_id > 0   AND throttle_id NOT IN (SELECT item_rank FROM server_items)
 expired:%@
 has-faulting-barriers
UPDATE client_unapplied_table   SET throttle_state = call_block(%@, next_retry_stamp, apply_kind), apply_kind = %u WHERE %@
apply_kind
apply_kind = %u
UPDATE client_unapplied_table    SET throttle_state = 1  WHERE zone_rowid = %@     AND throttle_state IN (21, 16)    AND throttle_id IN (SELECT item_rank FROM server_items                        WHERE zone_rowid = %@ AND item_parent_id = %@)
UPDATE client_unapplied_table    SET throttle_state = 1  WHERE throttle_state IN (21, 16)    AND throttle_id IN (SELECT item_rank FROM server_items WHERE (item_sharing_options & 4) != 0 AND item_id_is_shared_root(item_parent_id))
WITH RECURSIVE  reschedulable_items (item_rank, item_id) AS (    SELECT si.item_rank, si.item_id      FROM server_items AS si     WHERE si.zone_rowid = %@       AND si.item_type IN (0, 9, 10, 4) AND NOT EXISTS (SELECT 1 FROM client_items AS ci         WHERE ci.item_parent_zone_rowid = %@ AND ci.item_parent_id = si.item_id           AND ci.item_state IN (0, -1)    )  ) UPDATE client_unapplied_table    SET throttle_state = 1  WHERE zone_rowid = %@     AND throttle_state = 25    AND throttle_id IN (SELECT item_rank FROM reschedulable_items WHERE item_id = %@)
WITH RECURSIVE  reschedulable_items (throttle_id, item_id) AS (    SELECT -pi.rowid, pi.item_id      FROM client_items AS pi     WHERE pi.zone_rowid = %@       AND pi.item_type IN (0, 9, 10, 4) AND NOT EXISTS (SELECT 1 FROM client_items AS ci         WHERE ci.item_parent_zone_rowid = %@ AND ci.item_parent_id = pi.item_id           AND ci.item_state IN (0, -1)    )  ) UPDATE client_unapplied_table    SET throttle_state = 1  WHERE zone_rowid = %@     AND throttle_state = 25    AND throttle_id IN (SELECT throttle_id FROM reschedulable_items WHERE item_id = %@)
UPDATE client_unapplied_table    SET throttle_state = 1  WHERE zone_rowid = %@     AND throttle_state = %u    AND throttle_id IN (SELECT item_rank FROM server_items                        WHERE zone_rowid = %@ AND item_parent_id = %@)
UPDATE client_unapplied_table SET throttle_state = 1 WHERE throttle_state = %u AND zone_rowid = %@ AND throttle_id = %llu
SELECT item_rank, zone_rowid FROM server_items WHERE item_alias_target = %@ AND item_type = 3
UPDATE client_items SET item_type = 0 WHERE item_id = %@ AND zone_rowid = %@ AND item_type = 9 AND (SELECT 1 FROM server_items AS si               WHERE client_items.item_id = si.item_id                AND client_items.zone_rowid = si.zone_rowid                AND si.item_type = 0 LIMIT 1)
UPDATE item_recursive_properties SET item_type = 0, dir_faults_count = dir_faults_count - 1 WHERE item_id = %@ AND zone_rowid = %@
UPDATE client_unapplied_table SET throttle_state = 1 WHERE throttle_state != 0 AND throttle_id IN (SELECT item_rank FROM server_items WHERE item_parent_id = %@ AND zone_rowid = %@)
INSERT OR REPLACE INTO client_unapplied_table(zone_rowid, throttle_id, throttle_state, apply_kind) SELECT %@, -rowid, 1, %u FROM client_items WHERE zone_rowid = %@ AND item_localsyncupstate = 1
INSERT OR REPLACE INTO client_unapplied_table(zone_rowid, throttle_id, throttle_state, apply_kind) SELECT %@, item_rank, 1, %u FROM server_items WHERE zone_rowid = %@
throttle_id, zone_rowid, apply_kind, retry_count
v20@?0@"PQLResultSet"8i16
SELECT 1 FROM client_unapplied_table WHERE zone_rowid = %@ AND throttle_state = 1 AND apply_kind = %d AND retry_count < %lld LIMIT 1
SELECT 1 FROM client_unapplied_table WHERE zone_rowid = %@ AND throttle_state = 1 AND apply_kind = %d LIMIT 1
apply is failing
sync is blocked for client zone: %@
UPDATE client_unapplied_table   SET throttle_state = 1 WHERE throttle_state = 26   AND throttle_id IN(%llu, %lld)
DELETE FROM client_unapplied_table AS cu WHERE cu.throttle_id > 0   AND NOT EXISTS (SELECT 1 FROM server_items AS si WHERE si.item_rank = cu.throttle_id)
DELETE FROM client_unapplied_table AS cu WHERE cu.throttle_id < 0   AND NOT EXISTS (SELECT 1 FROM client_items AS ci WHERE ci.rowid = -cu.throttle_id)
<rdar://problem/23822933>
INSERT OR IGNORE INTO client_unapplied_table (zone_rowid, throttle_id, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, apply_kind) SELECT %@, item_rank, 1, 0, 0, 0, 0, %u  FROM server_items WHERE zone_rowid = %@ AND item_rank >= %lld AND item_rank < %lld
SELECT ci.rowid, ci.zone_rowid, ci.item_id, ci.item_creator_id, ci.item_sharing_options, ci.item_side_car_ckinfo, ci.item_parent_zone_rowid, ci.item_localsyncupstate, ci.item_local_diffs, ci.item_notifs_rank, ci.app_library_rowid, ci.item_min_supported_os_rowid, ci.item_user_visible, ci.item_stat_ckinfo, ci.item_state, ci.item_type, ci.item_mode, ci.item_birthtime, ci.item_lastusedtime, ci.item_favoriterank,ci.item_parent_id, ci.item_filename, ci.item_hidden_ext, ci.item_finder_tags, ci.item_xattr_signature, ci.item_trash_put_back_path, ci.item_trash_put_back_parent_id, ci.item_alias_target, ci.item_creator, ci.item_processing_stamp, ci.item_staged_file_id, ci.item_staged_generation, ci.item_bouncedname, ci.item_scope, ci.item_local_change_count, ci.item_old_version_identifier, ci.version_name, ci.version_ckinfo, ci.version_mtime, ci.version_size, ci.version_thumb_size, ci.version_thumb_signature, ci.version_content_signature, ci.version_xattr_signature, ci.version_edited_since_shared, ci.version_device, ci.version_conflict_loser_etags, ci.version_quarantine_info, ci.version_uploaded_assets, ci.version_upload_error, ci.version_old_zone_item_id, ci.version_old_zone_rowid, ci.version_local_change_count, ci.version_old_version_identifier, ci.desired_version, ci.item_live_conflict_loser_etags, ci.item_file_id, ci.item_generation, ci.version_block_sync_until_bundle_id, ci.version_block_sync_until_timestamp FROM client_items AS ci WHERE ci.item_localsyncupstate = 1 AND ci.item_localsyncupstate != 0 AND NOT EXISTS (SELECT 1 FROM client_unapplied_table AS cu WHERE cu.throttle_id = ci.rowid AND cu.throttle_state != 0)
expected full table scan
SELECT si.item_rank, si.zone_rowid FROM server_items AS si LEFT JOIN client_items AS ci ON ci.item_id = si.item_id AND ci.zone_rowid = si.zone_rowid WHERE si.item_state = 0 AND si.item_type != 3 AND si.item_rank IS NOT NULL AND ((si.version_ckinfo IS NOT NULL AND si.version_ckinfo != ci.version_ckinfo) OR (si.item_stat_ckinfo != ci.item_stat_ckinfo AND NOT (si.item_sharing_options & 4 != 0 AND %@ != (SELECT cz.zone_owner FROM client_zones AS cz WHERE cz.rowid = si.zone_rowid))) OR ci.rowid IS NULL) AND NOT EXISTS (SELECT 1 FROM client_unapplied_table AS cu WHERE cu.throttle_id = si.item_rank AND cu.throttle_state != 0)
mobile
B24@?0@"NSURL"8@"NSError"16
v56@?0@"NSURL"8@"NSString"16@"NSString"24@"NSNumber"32@"NSNumber"40I48B52
Library/Application Support/CloudDocs
session
backup_manifest.db
Library/Mobile Documents/
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/containers/BRCAppLibrary.m
-[BRCAppLibrary root]
-[BRCAppLibrary init]
fileID
generationID
metadataChangetag
metadataNeedsSyncUp
rootQuota
B16@?0@"BRCSharedClientZone"8
public
private
foreground
background
%@[%@] %@ {s:%@} ino:%@ gen:%@
 queries:
 metadata:%s etag:%@ %@
 bundles:{%@}
<%@>
item_type != 3
item_scope = 2 AND %@
item_scope = 1 AND %@
(%@) OR (%@)
(   item_scope = 2 OR item_scope = 1) AND item_type = 3
item_scope = 3
AND item_type IN (1, 2, 8, 5, 6, 7)
AND item_type = 0
%@%%
%% %@%%
AND (item_filename LIKE %@ ESCAPE '\' OR item_filename LIKE %@ ESCAPE '\')
AND ((%@) OR (%@) OR (%@))
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp    FROM client_items   WHERE item_notifs_rank >= %lld     AND item_notifs_rank < %lld     AND +app_library_rowid = %@     AND item_state IN (0, -1, 1)     %@      %@      %@ ORDER BY item_notifs_rank   LIMIT %lld
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp    FROM client_items   WHERE item_notifs_rank >= %lld     AND item_notifs_rank < %lld     AND +app_library_rowid = %@     AND item_state IN (0, -1)     %@      %@      %@ ORDER BY item_notifs_rank   LIMIT %lld
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp    FROM client_items   WHERE item_parent_id = %@      AND item_notifs_rank >= %lld      AND item_notifs_rank < %lld     %@      AND item_parent_zone_rowid = %@ ORDER BY item_notifs_rank   LIMIT %lld
AND item_state IN (0, -1)
item_filename
version_mtime DESC
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp    FROM client_items   WHERE item_parent_id = %@      AND item_state IN (0, -1)     AND item_parent_zone_rowid = %@ ORDER BY %@   LIMIT  %lld   OFFSET %lld
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp     FROM client_items    WHERE item_parent_id = %@       AND item_state IN (0, -1)      AND item_type = 0      AND item_parent_zone_rowid = %@       AND item_user_visible = 1  ORDER BY item_filename    LIMIT %lld
-[BRCAppLibrary coordinatorForItem:forRead:]
read
write
v16@?0@"BRCFileCoordinator"8
fs-root was moved from %@ to %@
fs-root was removed
SELECT auto_client_item_count > 0 FROM app_libraries  WHERE rowid = %@
SELECT 1 FROM client_items  WHERE item_type NOT IN (0, 9, 10, 4)    AND item_state IN (0, -1)    AND app_library_rowid = %@ LIMIT 1
SELECT auto_document_with_local_changes_count > 0 FROM app_libraries WHERE rowid = %@
SELECT auto_aggregate_size FROM app_libraries WHERE rowid = %@
SELECT auto_document_count FROM app_libraries WHERE rowid = %@
now evicting uploaded items
no longer evicting uploaded items
evicting uploaded items
not evicting uploaded items
SELECT DISTINCT ci.zone_rowid FROM client_items AS ci INNER JOIN client_zones AS cz ON ci.zone_rowid = cz.rowid WHERE ci.app_library_rowid = %@   AND ci.item_state IN (0, -1)   AND (ci.item_sharing_options & 4) != 0   AND cz.zone_owner != %@
%@/%%
SELECT rowid FROM client_items WHERE app_library_rowid = %@ AND zone_rowid = %@ AND (item_sharing_options & 4) != 0 AND item_state IN (0, -1) LIMIT 1
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp          FROM client_items         WHERE item_type = 3           AND item_state = 0           AND item_alias_target LIKE %@ ESCAPE '\'
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE item_alias_target = %@ AND item_type = 3 AND app_library_rowid = %@
item not found
needs-lost
initial-scan
resetting
no-documents
no-data
root-created
scan-on-caught-up
root-moved-to-clouddocs
needs-cross-move-fixup
evict-uploaded-items
l-docs
l-root
ch-root
l-trash
not-activated
q24@?0@"BRCRetryCounter"8@"BRCRetryCounter"16
NULL
-[BRCImportObject initAsSymlinkWithTarget:parentItem:logicalName:error:]
-[BRCImportObject initWithURL:existingItem:quarantineInfo:error:]
-[BRCImportObject initWithURL:logicalName:quarantineInfo:parentItem:error:]
-[BRCImportObject(BRCPackageAdditions) initWithURL:packageRoot:error:]
%lld-%@-%s
throttle_id = %lld AND download_etag = %@ AND download_kind = %u
throttle_id, download_etag, download_kind
%lld, %@, %u
  SELECT throttle_id, next_retry_stamp, app_library_rowid,           download_etag, transfer_stage, unit_count_completed           , transfer_size, download_priority      FROM client_downloads    WHERE throttle_state = 1    AND throttle_state != 0      AND transfer_queue = %@      AND transfer_operation IS NULL      AND download_kind = %d ORDER BY download_priority DESC, download_request_stamp DESC
UPDATE client_downloads    SET transfer_queue = '_retry'  WHERE throttle_id = %lld AND download_kind = %u AND download_etag = %@
Downloader
client_downloads
downloader
com.apple.bird.downloader
com.apple.bird.download-tracker
UPDATE client_downloads SET  transfer_stage = %@, transfer_operation = %@ WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@
ORDER BY download_kind, download_etag
download_kind, download_etag, transfer_operation, transfer_queue, download_error, app_library_rowid
%s:%@
_retry
 pending-retry
 download:done/cancelled
 downloading:%.1f%%
 op:%@
v32@?0@"NSMutableString"8@"PQLResultSet"16i24i28
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/fs/BRCFSDownloader.m
-[BRCFSDownloader _createDownloadingJobForItem:state:kind:etag:userInitiated:]
app_library_rowid, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, download_kind, download_etag, download_priority, download_request_stamp, download_error, zone_rowid
%@, %@, %lld, %@, %@, %@, %u, %@, %ld, %lld, %@, %@
app_library_rowid = %@, transfer_queue = %@, download_priority = %ld, download_request_stamp = %lld , zone_rowid = %@
SELECT transfer_size FROM client_downloads WHERE throttle_id = %lld AND download_kind = %u AND download_etag = %@
SELECT app_library_rowid FROM client_downloads WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@   AND transfer_operation = %@
done
UPDATE client_downloads SET  transfer_operation = call_block(%@, next_retry_stamp), download_error = %@, unit_count_completed = %lld WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@
UPDATE client_downloads SET  throttle_state = %d, transfer_record = NULL, transfer_stage = call_block(%@, transfer_stage), transfer_operation = NULL, download_error = %@ WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@
UPDATE client_downloads SET  throttle_state = %d, transfer_queue = %@, transfer_record = %@, transfer_stage = %@, transfer_operation = NULL, download_error = NULL WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@
_done
UPDATE client_downloads SET throttle_state = 1 WHERE throttle_state = %u AND throttle_id = %lld
UPDATE client_downloads SET throttle_state = 1 WHERE throttle_state = 43   AND call_block(%@, transfer_size, app_library_rowid, zone_rowid)
UPDATE client_downloads SET throttle_state = 1 WHERE throttle_state = 40   AND throttle_state != 0   AND zone_rowid = %@
SELECT distinct app_library_rowid FROM client_downloads WHERE throttle_state = 1   AND throttle_state != 0   AND zone_rowid = %@
UPDATE client_downloads SET  throttle_state = %d, transfer_queue = %@, transfer_record = NULL, transfer_stage = NULL, transfer_operation = NULL, unit_count_completed = 0 WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@
SELECT throttle_id, download_kind, download_etag, transfer_operation, transfer_stage, app_library_rowid, zone_rowid, throttle_state, transfer_size FROM client_downloads WHERE throttle_id = %lld AND download_kind = %u AND download_etag = %@   AND throttle_state != 0
SELECT throttle_id, download_kind, download_etag, transfer_operation, transfer_stage, app_library_rowid, zone_rowid, throttle_state, transfer_size FROM client_downloads WHERE throttle_id = %lld AND download_kind = %u   AND throttle_state != 0
SELECT throttle_id, download_kind, download_etag, transfer_operation, transfer_stage, app_library_rowid, zone_rowid, throttle_state, transfer_size FROM client_downloads WHERE throttle_id = %lld AND throttle_state != 0
SELECT transfer_operation    FROM client_downloads  WHERE throttle_id = %lld AND throttle_state == 1
SELECT throttle_id, download_kind, download_etag, transfer_operation, transfer_stage, app_library_rowid, zone_rowid, throttle_state, transfer_size FROM client_downloads WHERE %@ AND throttle_state > %d
UPDATE client_downloads SET download_etag = %@ WHERE throttle_id = %lld AND download_etag = %@ AND download_kind = %d
SELECT SUM(transfer_size) FROM client_downloads WHERE throttle_state = 1
SELECT transfer_operation IS NOT NULL FROM client_downloads WHERE throttle_id = %llu AND download_kind = %u AND download_etag = %@
SELECT 1 FROM client_downloads WHERE throttle_id = %llu AND download_kind != %u AND transfer_queue = %@ LIMIT 1
-[BRCFSDownloader makeContentLive:]_block_invoke
SELECT transfer_stage FROM client_downloads  WHERE throttle_id = %lld AND download_kind = %d AND download_etag = %@    AND transfer_queue = '_done'
brpackage-extended
SELECT version_ckinfo FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT 1 FROM client_downloads  WHERE throttle_id = %lld AND download_kind = %d  LIMIT 1
SELECT transfer_queue, download_etag, throttle_state   FROM client_downloads  WHERE throttle_id = %lld AND download_kind = %d
v32@?0@"NSString"8@"GSAddition"16^B24
SELECT 1 FROM client_downloads WHERE throttle_id = %llu AND download_kind = %u AND transfer_queue = %@ LIMIT 1
SELECT transfer_queue, download_etag, throttle_state FROM client_downloads  WHERE throttle_id = %lld AND download_kind = %u AND throttle_state != 0
SELECT throttle_state, transfer_queue, transfer_stage, transfer_record   FROM client_downloads  WHERE throttle_id = %lld AND download_kind = %u AND download_etag = %@
UPDATE client_downloads SET transfer_operation = NULL WHERE (transfer_operation >= '')
SELECT app_library_rowid, zone_rowid, transfer_queue   FROM client_downloads  WHERE throttle_state = 1 GROUP BY app_library_rowid, zone_rowid, transfer_queue
_prepare
transfer_queue = '_retry' AND transfer_operation IS NULL
rowid, throttle_id, app_library_rowid, zone_rowid
DELETE FROM client_downloads WHERE rowid = %@
UPDATE client_downloads SET transfer_queue = %@ WHERE rowid = %@
thumbnail-%lld-%@
v24@?0@"BRCDownloadThumbnail"8@"NSError"16
Not enough available disk space(have %@ need %@)
content-%lld-%@
v24@?0@"BRCDownloadContent"8@"NSError"16
UPDATE client_downloads    SET throttle_state = %u  WHERE throttle_id = %lld AND download_kind = %u AND download_etag = %@
loser-%lld-%@
v24@?0@"BRCDownloadVersion"8@"NSError"16
  SELECT throttle_id, next_retry_stamp, download_kind, download_etag     FROM client_downloads    WHERE throttle_state = 1      AND transfer_queue = %@      AND transfer_operation IS NULL      AND download_priority >= %ld ORDER BY download_priority DESC, download_request_stamp DESC
UPDATE client_downloads    SET transfer_queue = '_retry'  WHERE throttle_id = %ld AND download_kind = %u AND download_etag = %@
SELECT version_ckinfo FROM client_items WHERE rowid = %ld
SELECT MIN(next_retry_stamp) FROM client_downloads   WHERE throttle_state = 1     AND transfer_queue = %@      AND transfer_operation IS NULL 
INSERT OR REPLACE INTO item_errors (item_rowid, error_domain, error_code, error_message, service) VALUES (%llu, %@, %ld, %@, %d)
SyncHealth
Download
SELECT ci.rowid, ci.zone_rowid, ci.item_id, ci.item_creator_id, ci.item_sharing_options, ci.item_side_car_ckinfo, ci.item_parent_zone_rowid, ci.item_localsyncupstate, ci.item_local_diffs, ci.item_notifs_rank, ci.app_library_rowid, ci.item_min_supported_os_rowid, ci.item_user_visible, ci.item_stat_ckinfo, ci.item_state, ci.item_type, ci.item_mode, ci.item_birthtime, ci.item_lastusedtime, ci.item_favoriterank,ci.item_parent_id, ci.item_filename, ci.item_hidden_ext, ci.item_finder_tags, ci.item_xattr_signature, ci.item_trash_put_back_path, ci.item_trash_put_back_parent_id, ci.item_alias_target, ci.item_creator, ci.item_processing_stamp, ci.item_staged_file_id, ci.item_staged_generation, ci.item_bouncedname, ci.item_scope, ci.item_local_change_count, ci.item_old_version_identifier, ci.version_name, ci.version_ckinfo, ci.version_mtime, ci.version_size, ci.version_thumb_size, ci.version_thumb_signature, ci.version_content_signature, ci.version_xattr_signature, ci.version_edited_since_shared, ci.version_device, ci.version_conflict_loser_etags, ci.version_quarantine_info, ci.version_uploaded_assets, ci.version_upload_error, ci.version_old_zone_item_id, ci.version_old_zone_rowid, ci.version_local_change_count, ci.version_old_version_identifier, ci.desired_version, ci.item_live_conflict_loser_etags, ci.item_file_id, ci.item_generation, ci.version_block_sync_until_bundle_id, ci.version_block_sync_until_timestamp FROM client_items AS ci WHERE ci.desired_version IS NOT NULL AND NOT EXISTS (SELECT 1 FROM client_downloads AS downloader WHERE ci.rowid = downloader.throttle_id AND downloader.throttle_state != 0)
version
(%s)
never
%@ ago
%llu.%llu%@
-%lld %@
%lld %@
bytes
thousand
-%.1f %@
%.1f %@
million
-%.2f %@
%.2f %@
billion
billions
 (%lld)
    
<unknown>
0x%llx
UPDATE client_items SET item_type = 2 WHERE item_id = %@ AND zone_rowid = %@ AND item_type = 8
UPDATE client_items SET item_type = 9 WHERE item_id = %@ AND zone_rowid = %@ AND item_type = 10
%@~%d
 and unlinking data
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/containers/BRCContainerReset.m
-[BRCClientZone(BRCZoneReset) _performResetAndWantsUnlink:clientTruthBlock:completionBlock:]_block_invoke
unreachable: Failed to save to db without an error
DELETE FROM client_items WHERE zone_rowid = %@
<rdar://problem//26848061>
UPDATE client_items SET item_parent_id = %@ WHERE item_parent_zone_rowid != zone_rowid AND item_parent_zone_rowid = %@
reset %s
still-wants-data-unlinked
SELECT rowid, item_type FROM client_items  WHERE zone_rowid = %@ AND (item_sharing_options & 4) != 0
com.apple.decmpfs
.ubd
.do-not-delete
com~apple~Keynote/Documents/Recovered Data
com~apple~Keynote/Documents/Recovered Data.folder
com~apple~Numbers/Documents/Recovered Data
com~apple~Numbers/Documents/Recovered Data.folder
com~apple~Pages/Documents/Recovered Data
com~apple~Pages/Documents/Recovered Data.folder
 lost-stamp:%@ ago
 doc:%@
 s_ino:%@
 s_gen:%u
 pn:"%@"
 tbn:"%@"
 bln:"%@"
 sc:%@
unknown
 lch:%llx
 over:%@
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/items/BRCLocalItem.m
-[BRCLocalStatInfo diffAgainstLocalInfo:]
-[BRCLocalStatInfo updateFilenameFromPath:]
-[BRCLocalStatInfo _markReserved]
-[BRCLocalStatInfo _markAlmostDead]
-[BRCLocalStatInfo updateAsAppLibraryRoot:]
-[BRCLocalStatInfo _markDead]
-[BRCLocalStatInfo _markLiveFromStageAsType:]
-[BRCLocalStatInfo _clearFileID]
-[BRCLocalStatInfo _clearGenerationID]
-[BRCLocalItem path]
SELECT rowid FROM client_items WHERE item_id = %@ AND zone_rowid = %@
SELECT 1 FROM server_items WHERE item_id = %@ AND zone_rowid = %@ LIMIT 1
SELECT 1 FROM server_items WHERE item_id = %@ AND item_state = 0 AND zone_rowid = %@ LIMIT 1
SELECT item_id FROM server_items WHERE item_id != %@ AND item_parent_id = %@ AND item_filename = %@ AND +zone_rowid = %@
SELECT name FROM os_names WHERE rowid = %@
INSERT OR IGNORE INTO os_names (name) VALUES (%@)
SELECT rowid FROM os_names WHERE name = %@
r:%lld 
i:%@ 
i:%@:%@ 
al:%@ 
o:%@ 
ld{%@} 
up:%@
 %@:%@
needs-os-upgrade
 uv:%d
 mt:%lld
 pzone:%@
 ppm:%@
 st{%@
 pino:%@
 sharing-options:{%@}
<%@:%p {ID : %@; name : %@}>
"%@" id:%@
rowid
side-car-ckinfo
parentFileID
syncUpState
owner
sharingOptions
minimumSupportedOS
isUserVisible
localDiffs
notifsRank
DELETE FROM client_items WHERE rowid = %lld
 WITH RECURSIVE item_parents (item_id, zone_rowid, item_file_id) AS (     SELECT item_parent_id, item_parent_zone_rowid, item_file_id FROM client_items      WHERE item_id = %@ AND zone_rowid = %@  UNION ALL     SELECT li.item_parent_id, li.item_parent_zone_rowid, li.item_file_id FROM client_items AS li  INNER JOIN item_parents AS p USING (item_id, zone_rowid)      LIMIT %u ) SELECT item_file_id, item_id, zone_rowid FROM item_parents
B24@?0@"BRCItemGlobalID"8@"NSNumber"16
iCloudDrive
smartFolders
remove
NEEDS_OS_UPGRADE_ERROR
NEEDS_OS_UPGRADE_ERROR_NO_OS_NAME_IOS
Deleted from DB
Inserted into DB
Ignored
Saved into DB
SELECT item_user_visible, item_scope, item_filename FROM client_items WHERE item_id = %@ AND zone_rowid = %@
v16@?0@"NSData"8
SELECT item_sharing_options FROM client_items WHERE item_id = %@ AND zone_rowid = %@
SELECT 1 FROM client_items WHERE item_parent_id = %@ AND item_parent_zone_rowid = %@ AND item_state = 0
-[BRCLocalItem evictInTask:options:error:]
-[BRCLocalItem startDownloadInTask:options:error:]
contents
only-thumbnail
content-for-thumb
-[BRFieldXattrBlob(BRCStageAdditions) applyToFileDescriptor:error:]
, ...
%s%@...
%s%@
brc_pack_xattrs
syncUpBudget
com.apple.brc.sync
q16@?0q8
metadata-sync
shared-db-sync
zone-health-sync
migrate-pcs-sync
push
periodicSyncDate
container-metadata
shared db
zone-health
side-car
DELETE FROM side_car_lookahead
 [sync-%@ throttled (next-try:in %.01fs)] error: %@
down
online
healthy
offline
low disk
SELECT COUNT(*) from server_items
SELECT COUNT(*) from client_items
 available
%@ (%@)
no environment
no token
system
+ network: %@
+ disk:    %@
+ power:   %@
+ optimize storage: %s
enabled
disabled
+ device name:   %@
scheduler
+ items:                 client:%@, server: %@
                         warning: %@
output may be truncated
+ push environment:      %@
+ push token:            %@
+ global sync up budget: %@
+ periodic sync:         %@
+ available quota:       %@%@
 [pending-quota]
+ container-metadata:    %@ %@
+ sharedb:               %@ %@
+ zone-health:           %@ %@
+ side-car:              %@ %@
+ pcs-migration:         %@
complete
unfinished
+ account: %@
not ready
com.apple.icloud-container.
%@%@
zoid
com.apple.bird.push-persistence
UIDevice
initUIDevice
BRCContainerScheduler.m
classUIDevice
/System/Library/Frameworks/UIKit.framework/UIKit
UIKitLibrary
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/containers/BRCContainerScheduler.m
Can't open UIKit
shared
<ct %@|%@ sz:%llu sig:%@>
<st %@|%@>
[%@,%@]
sharing/access-token
unreachable: encrypted access token %@ is of unexpected type
unreachable: reference identifier %@ is of unexpected type
token
ref_id
 ul-error:%@
 uploaded-assets
 prev-zone:%@
uploadedAssets
uploadError
prevZoneGlobalID
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE item_alias_target = %@ AND item_type = 3 AND item_state != 1
SELECT app_library_rowid FROM client_items WHERE item_alias_target = %@ AND item_type = 3
 paused:{bundle:%@, till:%@}
 ct{%@}
downloading{
 (%@)
}:%@
faulting
 thumb{
greedy
%ssig:%@
 live-losers:{%@}
 resolved-losers:{%@}
currentVersion
desiredVersion
liveConflictLoserEtags
resolvedConflictLoserEtags
liveThumbnailSignature
shouldAutomaticallyDownloadThumbnail
syncPausedByBundleID
syncPausedExpireTS
item %s is a live document without a version
missing-version
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/items/BRCDocumentItem.m
-[BRCDocumentItem markNeedsUploadOrSyncingUp]
-[BRCDocumentItem _nukePackageItemsFromDB:]
DELETE FROM item_recursive_properties WHERE item_rowid = %lld 
INSERT OR IGNORE INTO item_recursive_properties  ( item_rowid, item_parent_id, item_id, zone_rowid, item_type, item_parent_zone_rowid ) VALUES  (%lld, %@, %@, %@, %d, %@ )
UPDATE item_recursive_properties SET  dir_faults_count = %lld, faults_count = %lld, needs_faulting_count = %lld, uploaded_size = %lld, needs_upload_size = %lld, uploaded_count = %lld, needs_upload_count = %lld, downloaded_size = %lld, needs_download_size = %lld, downloaded_count = %lld, needs_download_count = %lld, dl_unstaged_count = %lld, needs_dl_unstage_count = %lld, synced_up_count = %lld, needs_sync_up_count = %lld, over_quota_count = %lld, shared_by_me_count = %lld, shared_to_me_count = %lld, needs_delete_doc_count = %lld  WHERE item_rowid = %lld 
INSERT INTO client_items ( rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp) VALUES ( %lld, %@, %@, %@, %ld, %@, %@, %d, %lld, %lld, %@, %@, %d, %@, %d, %d, %d, %lld, %lld, %lld, %@, %@, %d, %@, %@, %@, %@, %@, %@, %@, %@, %u, %@, %d, %llu, %@, %@, %@, %lld, %lld, %lld, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %llu, %@, %@, %@, %@, %@, %@, %@)
UPDATE client_items SET zone_rowid = %@ WHERE rowid = %llu
UPDATE client_items SET item_state = %d, item_processing_stamp = %@ WHERE rowid = %llu
UPDATE client_items SET  item_id = %@, item_creator_id = %@, item_sharing_options = %ld, item_side_car_ckinfo = %@, item_parent_zone_rowid = %@, item_localsyncupstate = %d, item_local_diffs = %llu, item_notifs_rank = %lld, app_library_rowid = %@, item_min_supported_os_rowid = %@, item_user_visible = %d, item_stat_ckinfo = %@, item_state = %d, item_type = %d, item_mode = %d, item_birthtime = %lld, item_lastusedtime = %lld, item_favoriterank = %lld, item_parent_id = %@, item_filename = %@, item_hidden_ext = %d, item_finder_tags = %@, item_xattr_signature = %@, item_trash_put_back_path = %@, item_trash_put_back_parent_id = %@, item_alias_target = %@, item_creator = %@, item_processing_stamp = %@, item_staged_file_id = %@, item_staged_generation = %u, item_bouncedname = %@, item_scope = %d,item_local_change_count = %llu, item_old_version_identifier = %@, version_name = %@, version_ckinfo = %@, version_mtime = %lld, version_size = %lld, version_thumb_size = %lld, version_thumb_signature = %@, version_content_signature = %@, version_xattr_signature = %@, version_edited_since_shared = %@, version_device = %@, version_conflict_loser_etags = %@, version_quarantine_info = %@, version_uploaded_assets = %@, version_upload_error = %@, version_old_zone_item_id = %@, version_old_zone_rowid = %@, version_local_change_count = %llu, version_old_version_identifier = %@, desired_version = %@, item_live_conflict_loser_etags = %@, item_file_id = %@, item_generation = %@, version_block_sync_until_bundle_id = %@, version_block_sync_until_timestamp = %@  WHERE rowid = %llu
SELECT zone_rowid, item_rank FROM server_items WHERE item_alias_target = %@ AND item_type = 3
-[BRCDocumentItem evictInTask:options:error:]
Item %@ is not on disk
file is flocked
SELECT version_block_sync_until_resuming FROM client_items WHERE rowid = %llu
UPDATE client_items SET version_block_sync_until_resuming = NULL WHERE rowid = %llu
successfully
with failure
-[BRCDocumentItem pauseFromSyncWithTimeout:forBundleID:error:]
timestamp
UPDATE client_items SET version_block_sync_until_bundle_id = %@, version_block_sync_until_timestamp = %llu, version_block_sync_until_resuming = NULL WHERE rowid = %llu
-[BRCDocumentItem resumeSyncForBundleID:dropLocalChanges:error:]
UPDATE client_items SET version_block_sync_until_bundle_id = NULL, version_block_sync_until_timestamp = NULL, version_block_sync_until_resuming = %s WHERE rowid = %llu
-[BRCDocumentItem resumeSyncForBundleID:dropLocalChanges:error:]_block_invoke
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE rowid > %llu   AND version_block_sync_until_bundle_id = %@ ORDER BY rowid ASC LIMIT %u
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE version_block_sync_until_timestamp < %llu ORDER BY rowid ASC LIMIT %u
from
' to '
v32@?0@"NSURL"8@"NSError"16@?<v@?>24
delete
rename
v40@?0@"NSURL"8@"NSURL"16@"NSError"24@?<v@?>32
 and content update
sync-down/container-metadata
infoPlist
v32@?0@"CKRecord"8@"CKRecordID"16@"NSError"24
v32@?0@"CKServerChangeToken"8Q16@"NSError"24
<upload[%lld] %@>
upload
v16@?0@"BRCFSEventToSyncUpEvent"8
v24@?0@"CKRecord"8d16
v24@?0@"CKRecord"8@"NSError"16
uploading
<%@[%@] %@>
clientRequestID
lastSyncStatus
lastSyncDownDate
changeToken
SELECT item_id FROM server_items  WHERE item_id != %@ AND item_parent_id = %@ AND item_filename = %@ AND +zone_rowid = %@
UPDATE OR IGNORE server_items SET  item_rank = NULL, item_depth = 0, item_filename = %@, item_origname = IFNULL(item_origname, item_filename) WHERE zone_rowid = %@ AND item_id = %@
SELECT item_favoriterank, item_lastusedtime, item_finder_tags, item_side_car_ckinfo FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT item_favoriterank, item_lastusedtime, item_finder_tags, item_side_car_ckinfo FROM side_car_lookahead WHERE record_name = %@
SELECT item_type FROM server_items WHERE item_id = %@ AND zone_rowid = %@
UPDATE server_items SET   item_rank = NULL, item_depth = 0, item_origname = %@, pcs_state = %d, item_sharing_options = (%lu | (item_sharing_options & %lu)), item_side_car_ckinfo = %@, item_stat_ckinfo = %@, item_state = %d, item_type = %d, item_mode = %d, item_birthtime = %lld, item_lastusedtime = %lld, item_favoriterank = %lld, item_parent_id = %@, item_filename = %@, item_hidden_ext = %d, item_finder_tags = %@, item_xattr_signature = %@, item_trash_put_back_path = %@, item_trash_put_back_parent_id = %@, item_alias_target = %@, item_creator = %@, quota_used = %@, recursive_child_count = %@, shared_children_count = %@, shared_alias_count = %@, child_count = %@ WHERE item_id = %@ AND zone_rowid = %@
INSERT INTO server_items ( item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_rank, item_origname, pcs_state, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, zone_rowid, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count) VALUES ( %@, %@, %ld, %@, NULL, %@, %d, %@, %d, %d, %d, %lld, %lld, %lld, %@, %@, %d, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@)
UPDATE server_items SET  version_mtime = %lld  WHERE item_id = %@ AND zone_rowid = %@
a side fault
an excluded
no record to update: %@
-[BRCServerZone _saveItemID:stat:serverMetrics:record:error:]
UPDATE server_items    SET item_rank = NULL, item_depth = 0, item_sharing_options = (%lu | (item_sharing_options & %lu)), version_name = %@, version_ckinfo = %@, version_mtime = %lld, version_size = %lld, version_thumb_size = %lld, version_thumb_signature = %@, version_content_signature = %@, version_xattr_signature = %@, version_edited_since_shared = %@, version_device = %@, version_conflict_loser_etags = %@, version_quarantine_info = %@  WHERE item_id = %@ AND zone_rowid = %@
chained
unchained
-[BRCServerZone _saveEditedDirOrDocStructureRecord:error:]
-[BRCServerZone _saveEditedDocumentContentRecord:error:]
-[BRCServerZone _saveEditedSymlinkRecord:error:]
UPDATE server_items    SET version_name = %@  WHERE item_id = %@ AND zone_rowid = %@
-[BRCServerZone _saveEditedAliasRecord:zonesNeedingAllocRanks:error:]
INSERT OR REPLACE INTO server_items ( zone_rowid, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_rank, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator) VALUES ( %@, %d, %@, %@, %ld, %@, NULL, %@, %d, %d, %d, %lld, %lld, %lld, %@, %@, %d, %@, %@, %@, %@, %@, %@)
UPDATE server_items SET item_rank = NULL WHERE item_id = %@ AND zone_rowid = %@
UPDATE server_items    SET item_rank = NULL, item_sharing_options = (%lu | (item_sharing_options & %lu)),         item_mode = (%ld | (item_mode & %lu)), item_depth = 0  WHERE item_id = %@ AND zone_rowid = %@
unreachable: structure record which isn't a directory or document
-[BRCServerZone _saveEditedRecord:zonesNeedingAllocRanks:error:]
UPDATE server_items AS si   SET item_sharing_options = ((item_sharing_options & %ld) | IFNULL((SELECT (pi.item_sharing_options & %ld) FROM server_items AS pi WHERE si.item_parent_id = pi.item_id AND si.zone_rowid = pi.zone_rowid), 0)) WHERE si.zone_rowid = %@ AND si.item_id = %@
UPDATE server_items SET item_state = 1, item_filename = %@, item_rank = NULL, item_depth = 0, item_parent_id = %@ WHERE zone_rowid = %@ AND item_id = %@
B24@?0@"CKRecordID"8@"CKRecord"16
UPDATE server_items SET item_sharing_options = %ld WHERE item_id = %@ AND zone_rowid = %@
SELECT item_lastusedtime FROM server_items ORDER BY item_lastusedtime DESC LIMIT 1 OFFSET %lld
 AND item_depth >= -1
 AND item_depth >= 0
SELECT rowid, item_id, item_parent_id, item_state, item_type, version_ckinfo, item_favoriterank, item_lastusedtime, item_finder_tags IS NOT NULL, item_sharing_options   FROM server_items  WHERE zone_rowid = %@ AND item_rank IS NULL%@
SELECT 1 FROM server_items WHERE zone_rowid = %@ AND item_parent_id = %@ AND item_state = 0 LIMIT 1
SELECT COUNT(*) FROM server_items WHERE zone_rowid = %@ AND item_parent_id = %@ AND item_state = 0
UPDATE server_items SET item_type = 9, item_rank = NULL WHERE item_id = %@ AND zone_rowid = %@ AND item_type = 0
<rdar://problem/37451020>
WITH RECURSIVE item_parents (item_id, item_state, item_type, depth) AS (     SELECT item_id, item_state, item_type, 0       FROM server_items      WHERE zone_rowid = %@ AND item_id = %@  UNION ALL     SELECT p.item_parent_id, c.item_state, c.item_type, c.depth + 1       FROM server_items AS p INNER JOIN item_parents AS c USING (item_id)      WHERE p.zone_rowid = %@      LIMIT %u) SELECT item_state, depth, item_type FROM item_parents WHERE item_id_is_root(item_id) OR item_type = 4
WITH RECURSIVE item_parents (item_parent_id, item_sharing_options) AS (     SELECT item_parent_id, item_sharing_options       FROM server_items      WHERE zone_rowid = %@ AND item_id = %@  UNION ALL     SELECT p.item_parent_id, p.item_sharing_options       FROM server_items AS p INNER JOIN item_parents AS c      WHERE p.zone_rowid = %@        AND c.item_parent_id = p.item_id      LIMIT %u) SELECT 1 FROM item_parents WHERE (item_sharing_options & 4) != 0
UPDATE server_items SET item_depth = %lld WHERE rowid = %lld
SELECT rowid   FROM server_items  WHERE zone_rowid = %@ AND item_rank IS NULL AND item_depth >= 0 ORDER BY item_depth ASC
UPDATE server_items SET item_rank = %lld WHERE rowid = %lld
SELECT 1 FROM server_items WHERE item_type IN (9, 10) AND zone_rowid = %@ LIMIT 1
We have failed streams even though we aren't caught up? Crashing to prevent state corruption
-[BRCServerZone didSyncDownRequestID:serverChangeToken:editedRecords:deletedRecordIDs:deletedShareRecordIDs:allocRankZones:caughtUp:pendingChanges:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/containers/BRCServerZone.m
UPDATE server_items SET item_type = 0 WHERE item_type = 9 AND zone_rowid = %@ LIMIT %lld
SELECT item_id FROM server_items WHERE zone_rowid = %@ AND item_rank = %lld
UPDATE server_items SET item_parent_id = %@ WHERE zone_rowid = %@ AND item_parent_id = %@
DELETE FROM server_items WHERE zone_rowid = %@ AND item_id = %@
v24@?0Q8^B16
DELETE FROM server_items WHERE zone_rowid = %@ LIMIT %lld
Unable to cross zone migrate
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE zone_rowid = %@
SELECT item_id FROM server_items WHERE zone_rowid = %@   AND item_parent_id = %@   AND item_type = 0
Needs Apply Changes:
-------------------
Under %@
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count, rowid      FROM server_items    WHERE zone_rowid = %@ AND item_parent_id = %@ ORDER BY item_filename
ERROR: item ID %@ seen twice
> apply{%@}
B36@?0@"BRCItemID"8i16@"NSString"20^@28
server items (%@)
============
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count, rowid      FROM server_items    WHERE zone_rowid = %@ AND item_parent_id = %@
- too many items, stopping -
- cancelled -
%*sERROR: item ID %@ seen twice
%*s%@
%*s> apply{%@}
B28@?0@"BRCItemID"8i16^@20
----------------------%@[%@]----------------------
SELECT COUNT(*) FROM server_items WHERE zone_rowid = %@
ORPHANED ITEMS:
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE zone_rowid = %@ AND call_block(%@, rowid)
you must override this
-[BRCServerZone validateStructureLoggingToFile:db:]
-[BRCServerZone validateItemsLoggingToFile:db:]
moved
full-sync
fetched-recents
fetched-favorites
ever-full-sync
create table backup_manifest (relative_path blob not null, file_id integer, doc_id integer, gen_count integer, is_directory integer, new_file_id integer, new_doc_id integer, new_gen_count integer)
INSERT INTO backup_manifest (relative_path, file_id, doc_id, gen_count, is_directory, new_file_id, new_doc_id, new_gen_count) VALUES (%s, %lld, %lld, %d, %d, NULL, NULL, NULL)
CREATE UNIQUE INDEX relative_path_index ON backup_manifest (relative_path)
SELECT * FROM backup_manifest WHERE new_file_id IS NULL
UPDATE backup_manifest SET new_file_id = %llu,    new_doc_id = %@,    new_gen_count = %d WHERE relative_path = %@
ATTACH DATABASE %@ AS clientdb
PRAGMA foreign_keys = ON
PRAGMA foreign_keys = OFF
UPDATE clientdb.client_items SET item_file_id = -item_file_id
UPDATE clientdb.client_items SET item_doc_id = -item_doc_id
CREATE INDEX file_id_gen_count_index ON backup_manifest(file_id, gen_count)
CREATE INDEX doc_id_index ON backup_manifest(doc_id)
UPDATE clientdb.client_items  SET item_generation = (SELECT new_gen_count FROM backup_manifest WHERE file_id = -clientdb.client_items.item_file_id AND gen_count = clientdb.client_items.item_generation)
UPDATE OR IGNORE clientdb.client_items  SET item_file_id = (SELECT new_file_id FROM backup_manifest WHERE file_id = -clientdb.client_items.item_file_id)
UPDATE OR IGNORE clientdb.client_items  SET item_doc_id = (SELECT new_doc_id FROM backup_manifest WHERE doc_id = -clientdb.client_items.item_doc_id)
UPDATE OR IGNORE clientdb.client_items SET item_staged_generation = NULL WHERE item_staged_generation IS NOT NULL
UPDATE OR IGNORE clientdb.client_items SET item_staged_file_id = NULL WHERE item_staged_file_id IS NOT NULL
SELECT counter FROM clientdb.backup_detector
UPDATE clientdb.backup_detector SET old = %llu, new = %llu
SELECT new_file_id FROM backup_manifest WHERE file_id = %llu
Library/Caches/com.apple.bird
account.1
MobileHost.txt
UnknownHost.txt
iCloudDriveManaged
com.apple.CloudDocs.iCloudDriveFileProvider
v24@?0@"FPItem"8@"NSError"16
File Provider Storage/Library/Mobile Documents
Library
group.com.apple.iCloudDrive
File Provider Storage/DownloadStage
structure
encryptedBasename
basehash
bounceNo
extension
parent
target
executable
writable
fileContent
pkgManifest
pkgContent
pkgSignature
pkgXattrs
thumb1024
thumbQLMetadata
lastOpenTime
favoriteRank
xattr
restorePath
restoreParent
targetPath
bookmarkContent
lastEditorName
countMetrics
ftags
quarantine
ignorePkgExtension
updateTime
zoneState
zoneDetails
message
records
perParticipantMetadata
shareReference
participantDocumentToken
alias/
shareAlias/
symlink/
finderBookmark/
directory/
documentStructure/
documentContent/
directory/appData_
directory/appDocuments_
ppm_
br_initialItem
br_pathMatchID
br_pathMatchEtag
br_deleteChangeToken
br_etagInPreviousZone
brc_itemIDWithSession: are not supposed to trigger an error: %@
-[CKRecordID(BRCItemAdditions) brc_itemIDWithSession:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/sync/records/CKRecord+BRCItemAdditions.m
Found appLibrary %@ with invalid dbRowID for zoneID %@
Can't find appLibrary corresponding to zoneID %@
SELECT zone_rowid FROM server_items WHERE item_id = %@
missing key '%@' in %@ record %@
invalid value for key '%@' in %@ record %@: %@ %@
-[CKRecord(BRCSerializationAdditions) deserializeAliasInfo:serverZone:error:]
Records zoneID %@ must be equal to parents zoneID %@
%@:%@/%@
invalid record type for record %@: %@
recordType
-[CKRecord(BRCSerializationAdditions) deserializeStatInfo:serverMetrics:itemID:session:error:]
%@ record %@ is both a file and a package
asset+pkg
%@ record %@ is neither a file nor a package
pkg+signature
-[CKRecord(BRCSerializationAdditions) deserializeVersion:fakeStatInfo:clientZone:error:]
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE item_id = %@
none
_Documents
br_oplockMergeEtag
br_updateDropped
user
ckUserId
last
first
device
_Data
AppContainer
BRCFakeRecordWithErrorMarkerFor20716676
DOCUMENT_DEFAULT_NAME
nil-token
nil-cursor
SELECT 1 FROM client_items WHERE version_old_zone_item_id = %@ AND version_old_zone_rowid = %@
 parent = %@
(dead in server truth)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE item_stat_ckinfo IS NULL AND item_parent_id = %@ AND zone_rowid = %@
v24@?0@"NSArray"8@"NSError"16
sync-up-%@
sync-up/
v36@?0B8@"BRCListDirectoryContentsOperation"12Q20@"NSError"28
UPDATE server_items SET pcs_state = 3 WHERE item_id = %@ AND zone_rowid = %@ AND pcs_state = 0
v24@?0@"NSData"8@"NSError"16
unreachable: Timed out while waiting for new web-sharing identity
 WITH RECURSIVE item_parents (item_id, item_sharing_options, item_parent_id) AS (          SELECT item_id, item_sharing_options, item_parent_id FROM server_items           WHERE item_id = %@ AND zone_rowid = %@       UNION ALL          SELECT li.item_id, li.item_sharing_options, li.item_parent_id FROM server_items AS li     INNER JOIN item_parents AS p WHERE li.zone_rowid = %@ AND p.item_parent_id = li.item_id          LIMIT %u )        SELECT item_id FROM item_parents WHERE (item_sharing_options & 4) != 0
SyncUp
testZone
<%@ delay:%.1fs id:%@
 next-try in %.1fs>
 expired>
<%@ {  m:%.1f  h:%.1f  d:%.1f  }>
no budget left for %.1fs {
budget available {
  %d:%02d:%02ds ago
  m:%.1f%% (%.1f)
  h:%.1f%% (%.1f)
  d:%.1f%% (%.1f)
totalSyncOperations
failedSyncOperations
options
SELECT rowid, app_library_name, app_library_plist, zone_rowid FROM app_libraries WHERE app_library_name = %@ AND (app_library_owner = %@ OR app_library_owner IS NULL)
SELECT rowid, app_library_name, app_library_plist, zone_rowid FROM app_libraries WHERE zone_rowid = %@
can't initialize library root with invalid library rowid %@
-[BRCItemID_v9 _initAsLibraryRootWithAppLibraryRowID:enclosureUUID:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/database/BRCDatabaseSchema.m
DROP INDEX IF EXISTS "client_items/item_file_id_unique"
DROP INDEX IF EXISTS "client_items/item_doc_id"
CREATE TABLE devices ( key integer primary key, name text unique not null)
CREATE TABLE server_boot_history ( date integer primary key, os text not null, br text not null, bird_schema integer not null, db_schema integer not null)
CREATE TABLE server_containers( container_id text primary key, container_schema_version integer not null, container_plist blob)
CREATE TABLE server_state (state, config_plist)
INSERT INTO server_state values (NULL, NULL)
CREATE TABLE backup_detector( old integer, new integer, counter integer, os text not null, br text not null)
INSERT INTO backup_detector (old, new, counter, os, br) VALUES (%llu, %llu, %llu, %@, %@)
CREATE TABLE boot_history ( date integer primary key, os text not null, br text not null, bird_schema integer not null, db_schema integer not null)
CREATE TABLE client_containers( container_id text primary key, container_schema_version integer not null, container_plist blob)
CREATE TABLE client_state (v)
INSERT INTO client_state values (NULL)
SELECT container_id, container_plist FROM client_containers
items
unapplied_table
server_items
UPDATE %@ SET item_live_conflict_loser_etags = call_block(%@, item_live_conflict_loser_etags) WHERE item_live_conflict_loser_etags IS NOT NULL
INSERT OR IGNORE INTO %@ (throttle_id) SELECT item_rank FROM %@ WHERE version_conflict_loser_etags IS NOT NULL AND item_rank IS NOT NULL
CREATE TABLE server_zones ( rowid integer PRIMARY KEY, zone_owner text not null, zone_name text not null, zone_plist blob, UNIQUE (zone_owner, zone_name))
CREATE TABLE server_xattr_blobs ( zone_rowid integer not null, signature blob not null, data blob not null, PRIMARY KEY(zone_rowid, signature))
CREATE TABLE server_pending_fetches ( zone_rowid integer not null, record_id blob not null, record blob, PRIMARY KEY (zone_rowid, record_id))
INSERT INTO server_zones (rowid, zone_owner, zone_name, zone_plist) SELECT NULL, %@, container_id, container_plist FROM server_containers
DROP TABLE server_containers
SELECT rowid, zone_name FROM server_zones
server_xattrs
INSERT INTO server_xattr_blobs SELECT %@, signature, data FROM %@
DROP TABLE %@
pending_fetches
CREATE TABLE client_zones ( rowid integer PRIMARY KEY, zone_owner text not null, zone_name text not null, zone_plist blob, UNIQUE (zone_owner, zone_name))
CREATE TABLE client_reader_throttle ( throttle_id integer primary key, zone_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0)
CREATE INDEX "client_reader_throttle/zone_rowid" ON client_reader_throttle (zone_rowid)
CREATE INDEX "client_reader_throttle/next_retry_stamp_active_state" ON client_reader_throttle (throttle_state, next_retry_stamp ASC, throttle_id ASC) WHERE throttle_state = 1
CREATE INDEX "client_reader_throttle/zone_rowid__throttle_state" ON client_reader_throttle (throttle_state, zone_rowid)
CREATE INDEX "client_reader_throttle/expire_stamp_inactive_state" ON client_reader_throttle (throttle_state, expire_stamp ASC) WHERE throttle_state = 0
CREATE TABLE client_unapplied_table ( throttle_id integer primary key, zone_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, item_id blob not null, apply_kind integer not null)
CREATE INDEX "client_unapplied_table/zone_rowid" ON client_unapplied_table (zone_rowid)
CREATE INDEX "client_unapplied_table/next_retry_stamp_active_state" ON client_unapplied_table (throttle_state, next_retry_stamp ASC, throttle_id ASC) WHERE throttle_state = 1
CREATE INDEX "client_unapplied_table/zone_rowid__kind__throttle_state" ON client_unapplied_table (throttle_state, zone_rowid, apply_kind)
CREATE INDEX "client_unapplied_table/expire_stamp_inactive_state" ON client_unapplied_table (throttle_state, expire_stamp ASC) WHERE throttle_state = 0
CREATE TABLE client_document_access ( zone_rowid text not null , item_rowid integer not null , evictable integer not null , access_time integer not null default 0, PRIMARY KEY (zone_rowid, item_rowid))
CREATE INDEX "client_document_access/access_item" ON client_document_access (access_time)
CREATE INDEX "client_document_access/evictable" ON client_document_access (evictable)
DROP TABLE IF EXISTS document_access
INSERT INTO client_zones (rowid, zone_owner, zone_name, zone_plist)    SELECT call_block(%@, container_id), %@, container_id, container_plist      FROM client_containers
DROP TABLE client_containers
SELECT rowid, zone_name FROM client_zones
desired_additions
UPDATE %@   SET item_state = -1, item_processing_stamp = 1 WHERE item_type = 3   AND item_localsyncupstate = 3
reader_throttle
 CREATE TABLE server_items ( zone_rowid integer not null, item_id blob not null, item_rank integer, item_sharing_options integer not null default 0, item_sharing_etag blob default null, item_stat_ckinfo blob, item_state integer not null, item_type integer not null, item_mode integer not null, item_creator_id integer not null, item_birthtime integer not null, item_parent_id blob not null, item_filename text not null, item_origname text, item_hidden_ext integer not null, item_finder_tags blob, item_xattr_signature blob, version_ckinfo blob, version_mtime integer, version_name text, version_size integer, version_thumb_size integer, version_thumb_signature blob, version_content_signature blob, version_xattr_signature blob, version_device integer, version_conflict_loser_etags blob, version_quarantine_info blob, PRIMARY KEY (zone_rowid, item_id), UNIQUE (item_rank))
CREATE INDEX "server_items/path_index" ON server_items (zone_rowid, item_parent_id, item_filename)
CREATE INDEX "server_items/alias_map" ON server_items (item_type, item_filename, zone_rowid, item_rank) WHERE item_type = 3
CREATE INDEX "server_items/item_rank" ON server_items (zone_rowid, item_rank)
CREATE INDEX "server_items/item_parent_id__item_state" ON server_items (zone_rowid, item_parent_id, item_state)
CREATE INDEX "server_items/item_xattr_signature" ON server_items (zone_rowid, item_xattr_signature)
CREATE INDEX "server_items/version_xattr_signature" ON server_items (zone_rowid, version_xattr_signature)
CREATE TABLE server_owners ( owner_key integer primary key, owner_name text not null, owner_plist blob, UNIQUE (owner_name))
DROP TABLE IF EXISTS %@
INSERT INTO server_items (zone_rowid, item_sharing_options, item_id, item_rank, item_stat_ckinfo, item_state, item_type, item_mode, item_creator_id, item_birthtime, item_parent_id, item_filename, item_origname, item_hidden_ext, item_finder_tags, item_xattr_signature, version_ckinfo, version_mtime, version_name, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info) SELECT %@, call_block(%@, item_iwork_sharing_info), item_id, item_rank, item_stat_ckinfo, item_state, item_type, item_mode, item_creator_id, item_birthtime, item_parent_id, item_filename, item_origname, item_hidden_ext, item_finder_tags, item_xattr_signature, version_ckinfo, version_mtime, version_name, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info FROM %@
DROP VIEW IF EXISTS %@
server_items_view
 CREATE TABLE client_items ( rowid integer primary key, zone_rowid integer not null, item_id blob not null, item_sharing_options integer not null default 0, item_localsyncupstate integer, item_in_flight_diffs integer, item_local_diffs integer not null, item_notifs_rank integer not null, item_transfer_priority integer, item_processing_stamp integer, item_doc_id integer, item_file_id integer, item_generation, item_localname text, item_bouncedname text, item_staged_file_id integer, item_staged_generation integer, item_stat_ckinfo blob, item_state integer not null, item_type integer not null, item_mode integer not null, item_creator_id integer not null, item_birthtime integer not null, item_parent_id blob not null, item_filename text, item_hidden_ext integer not null, item_finder_tags blob, item_xattr_signature blob, item_live_conflict_loser_etags blob, version_ckinfo blob, version_mtime integer, version_name text, version_size integer, version_thumb_size integer, version_thumb_signature blob, version_content_signature blob, version_xattr_signature blob, version_device integer, version_conflict_loser_etags blob, version_quarantine_info blob, version_uploaded_assets blob, version_upload_error blob, desired_version blob, UNIQUE (zone_rowid, item_id), UNIQUE (zone_rowid, item_doc_id), UNIQUE (zone_rowid, item_file_id), UNIQUE (item_staged_file_id), UNIQUE (zone_rowid, item_parent_id, item_localname))
CREATE INDEX "client_items/item_parent_id__item_state" ON client_items (zone_rowid, item_parent_id, item_state)
CREATE INDEX "client_items/item_path" ON client_items (zone_rowid, item_parent_id, item_filename)
CREATE INDEX "client_items/alias_map" ON client_items (item_type, item_filename, zone_rowid) WHERE item_type = 3
CREATE INDEX "client_items/item_in_flight_diffs" ON client_items (zone_rowid, item_in_flight_diffs)
CREATE INDEX "client_items/item_bouncedname" ON client_items (item_bouncedname) WHERE item_bouncedname IS NOT NULL
CREATE INDEX "client_items/lost_scan_index" ON client_items (item_state, zone_rowid, item_processing_stamp) WHERE item_state = -1
CREATE INDEX "client_items/zombie_scan_index" ON client_items (item_state, zone_rowid, item_processing_stamp) WHERE item_state = -3
CREATE INDEX "client_items/item_notifs_rank" ON client_items (zone_rowid, item_notifs_rank)
CREATE INDEX "client_items/download_index" ON client_items (zone_rowid, item_staged_file_id, desired_version)
CREATE INDEX "client_items/eviction_index" ON client_items (item_localsyncupstate, zone_rowid, version_size) WHERE item_localsyncupstate = 0
CREATE INDEX "client_items/sync_up_enumerator_1" ON client_items (item_localsyncupstate, zone_rowid, item_type) WHERE item_localsyncupstate = 4
CREATE INDEX "client_items/sync_up_enumerator_2" ON client_items (item_localsyncupstate, zone_rowid, item_state) WHERE item_localsyncupstate = 4
 CREATE TABLE client_pkg_items ( item_doc_id integer not null, rel_path text not null, zone_rowid integer not null, item_type integer not null, asset_rank integer not null, is_dirty integer, quarantine_info blob, file_id integer not null, signature_or_link blob, generation, size integer, mode integer, mtime integer, PRIMARY KEY (item_doc_id, rel_path ASC))
CREATE UNIQUE INDEX "client_pkg_items/asset_rank" ON client_pkg_items (item_doc_id, asset_rank)
CREATE INDEX "client_pkg_items/size" ON client_pkg_items (item_doc_id, size)
CREATE INDEX "client_pkg_items/is_dirty" ON client_pkg_items (item_doc_id, is_dirty)
CREATE INDEX "client_pkg_items/zone_rowid" ON client_pkg_items (zone_rowid)
CREATE TABLE client_uploads ( throttle_id integer primary key, zone_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, item_id blob not null, transfer_queue blob not null, transfer_size integer not null, transfer_record blob, transfer_stage blob, transfer_operation blob, UNIQUE(transfer_stage))
CREATE INDEX "client_uploads/gc_index" ON client_uploads (throttle_state, expire_stamp ASC) WHERE throttle_state = 0
CREATE INDEX IF NOT EXISTS "client_uploads/scheduling_by_size" ON client_uploads (throttle_state, transfer_queue, transfer_operation, transfer_size ASC)  WHERE throttle_state = 1
CREATE INDEX IF NOT EXISTS "client_uploads/scheduling_by_stamp" ON client_uploads (throttle_state, transfer_queue, transfer_operation, next_retry_stamp ASC)  WHERE throttle_state = 1
CREATE INDEX "client_uploads/transfer_operation" ON client_uploads (transfer_operation) WHERE transfer_operation IS NOT NULL
CREATE INDEX "client_uploads/zone_rowid__throttle_state" ON client_uploads (throttle_state, zone_rowid)
CREATE INDEX "client_uploads/reset_index" ON client_uploads (zone_rowid, throttle_state)
CREATE INDEX "client_uploads/out_of_quota_index" ON client_uploads (throttle_state, zone_rowid, transfer_size)  WHERE throttle_state = 32
pkg_items
INSERT INTO client_items (rowid, zone_rowid, version_upload_error, item_sharing_options, item_id, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, item_transfer_priority, item_processing_stamp, item_doc_id, item_file_id, item_generation, item_localname, item_bouncedname, item_staged_file_id, item_staged_generation, item_stat_ckinfo, item_state, item_type, item_mode, item_creator_id, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_live_conflict_loser_etags, version_ckinfo, version_mtime, version_name, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, desired_version) SELECT rowid, %@, NULL, call_block(%@, item_iwork_sharing_info), item_id, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, item_transfer_priority, item_processing_stamp, item_doc_id, item_file_id, item_generation, item_localname, item_bouncedname, item_staged_file_id, item_staged_generation, item_stat_ckinfo, item_state, item_type, item_mode, item_creator_id, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_live_conflict_loser_etags, version_ckinfo, version_mtime, version_name, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, desired_version FROM %@
items_view
INSERT INTO client_pkg_items (zone_rowid, item_doc_id, rel_path, item_type, asset_rank, is_dirty, quarantine_info, file_id, signature_or_link, generation, size, mode, mtime) SELECT %@, item_doc_id, rel_path, item_type, asset_rank, is_dirty, quarantine_info, file_id, signature_or_link, generation, size, mode, mtime FROM %@
DELETE FROM client_reader_throttle
INSERT INTO client_reader_throttle (zone_rowid, throttle_id, throttle_state) SELECT zone_rowid, rowid, 1 FROM client_items WHERE item_localsyncupstate = 2
INSERT INTO client_uploads (zone_rowid, throttle_id, throttle_state, item_id, transfer_queue, transfer_size) SELECT zone_rowid, rowid, 1, item_id, '_prepare', version_size + version_thumb_size  FROM client_items WHERE item_localsyncupstate = 1
DROP TABLE IF EXISTS server_alias_map
DELETE FROM client_unapplied_table
DROP TABLE IF EXISTS alias_map
INSERT INTO client_unapplied_table (zone_rowid, throttle_id, throttle_state, item_id, apply_kind) SELECT zone_rowid, -rowid, 1, item_id, %u FROM client_items WHERE item_localsyncupstate = 1
INSERT INTO client_unapplied_table (zone_rowid, throttle_id, throttle_state, item_id, apply_kind) SELECT zone_rowid, item_rank, 1, item_id, %u FROM server_items
DROP TABLE IF EXISTS client_desired_additions
CREATE TABLE client_downloads ( throttle_id integer not null, zone_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, item_id blob not null, transfer_queue blob not null, transfer_size integer not null, transfer_record blob, transfer_stage blob, transfer_operation blob, download_kind integer not null, download_etag blob not null, download_priority integer not null, download_request_stamp integer not null, download_error blob, UNIQUE(transfer_stage), UNIQUE(throttle_id, download_kind, download_etag))
CREATE INDEX "client_downloads/scheduling_by_priority" ON client_downloads (throttle_state, transfer_queue, transfer_operation, download_priority DESC, download_request_stamp DESC) WHERE throttle_state = 1
CREATE INDEX "client_downloads/scheduling_by_priority_and_kind" ON client_downloads (throttle_state, transfer_queue, transfer_operation, download_kind, download_priority DESC, download_request_stamp DESC) WHERE throttle_state = 1
CREATE INDEX "client_downloads/scheduling_by_stamp" ON client_downloads (throttle_state, transfer_queue, transfer_operation, next_retry_stamp ASC)  WHERE throttle_state = 1
CREATE INDEX "client_downloads/gc_index" ON client_downloads (throttle_state, expire_stamp ASC) WHERE throttle_state = 0
CREATE INDEX "client_downloads/transfer_operation" ON client_downloads (transfer_operation) WHERE transfer_operation IS NOT NULL
CREATE INDEX "client_downloads/zone_rowid__throttle_state" ON client_downloads (throttle_state, zone_rowid)
CREATE INDEX "client_downloads/reset_index" ON client_downloads (zone_rowid, throttle_state)
ALTER TABLE client_uploads ADD COLUMN upload_error blob
CREATE INDEX "client_downloads/low_disk_index" ON client_downloads (throttle_state, throttle_id, download_kind)  WHERE throttle_state = 43
DROP INDEX "client_document_access/access_item"
CREATE INDEX "server_items/version_size" ON server_items (version_size)
CREATE TABLE spotlight_ranks ( doc_id integer not null, notif_rank integer not null, PRIMARY KEY (doc_id, notif_rank ASC))
ALTER TABLE backup_detector ADD COLUMN uuid blob
UPDATE backup_detector SET uuid = %@
CREATE INDEX "client_pkg_items/item_doc_id" ON client_pkg_items (item_doc_id, zone_rowid)
CREATE INDEX "client_items/doc_sync_state" ON client_items (zone_rowid, item_localsyncupstate, item_type)WHERE item_type = 1  AND item_localsyncupstate IN (2, 3, 4)
DROP INDEX "client_items/item_notifs_rank"
CREATE INDEX "client_items/item_notifs_rank" ON client_items (item_notifs_rank, zone_rowid)
CREATE INDEX "client_items/spotlight_index" ON client_items (item_type, item_state, item_doc_id, item_notifs_rank) WHERE item_type in (1, 2)
CREATE INDEX "spotlight_ranks/notif_rank" ON spotlight_ranks (notif_rank)
ALTER TABLE client_items ADD COLUMN item_scope integer NOT NULL DEFAULT 0
CREATE INDEX item_scope_index ON client_items(zone_rowid, item_notifs_rank, item_scope, item_state)
CREATE INDEX pending_download_docs ON client_items(item_doc_id, desired_version) WHERE desired_version != NULL
ALTER TABLE server_items ADD COLUMN item_depth integer NOT NULL DEFAULT 0
CREATE INDEX "server_items/item_rank_depth" ON server_items (zone_rowid, item_rank, item_depth)
ALTER TABLE client_items ADD COLUMN item_min_supported_os_rowid integer DEFAULT NULL
CREATE TABLE os_names ( name text unique )
UPDATE client_document_access SET evictable = (SELECT version_mtime FROM client_items as ci WHERE ci.rowid = item_rowid) WHERE access_time = 0 AND evictable = 0 AND (SELECT version_size FROM client_items as ci WHERE ci.rowid = item_rowid) > %lld AND (SELECT item_type FROM client_items as ci WHERE ci.rowid = item_rowid) = 1
 CREATE TABLE app_libraries ( rowid integer PRIMARY KEY, app_library_plist blob )
SELECT rowid, zone_plist FROM client_zones
maxLostStamp
deepScanStamp
requestID
lastApplyRank
appliedTombstoneRanks
syncUpThrottle
syncDownThrottle
INSERT INTO app_libraries (rowid, app_library_plist) VALUES (%@, %@)
ALTER TABLE client_items ADD COLUMN app_library_rowid
UPDATE client_items SET app_library_rowid = zone_rowid
CREATE UNIQUE INDEX "client_items/item_doc_id" ON client_items (item_doc_id)
CREATE UNIQUE INDEX "client_items/item_file_id_unique" ON client_items (item_file_id, item_state)WHERE item_state != -3
CREATE INDEX "client_items/item_id" ON client_items(item_id)
CREATE INDEX "client_items/item_file_id" ON client_items (item_file_id)
DROP INDEX "client_items/item_parent_id__item_state"
CREATE INDEX "client_items/item_parent_id__item_state" ON client_items (item_parent_id, item_state)
DROP INDEX "client_items/item_path"
CREATE INDEX "client_items/item_path" ON client_items (item_parent_id, item_filename)
CREATE INDEX "client_items/item_parent_id__item_localname" ON client_items (item_parent_id, item_localname)
 CREATE TABLE client_pkg_items_tmp ( item_doc_id integer not null, rel_path text not null, item_type integer not null, asset_rank integer not null, is_dirty integer, quarantine_info blob, file_id integer not null, signature_or_link blob, generation, size integer, mode integer, mtime integer, PRIMARY KEY (item_doc_id, rel_path ASC))
INSERT INTO client_pkg_items_tmp (item_doc_id, rel_path, item_type, asset_rank, is_dirty, quarantine_info, file_id, signature_or_link, generation, size, mode, mtime) SELECT item_doc_id, rel_path, item_type, asset_rank, is_dirty, quarantine_info, file_id, signature_or_link, generation, size, mode, mtime FROM client_pkg_items
DROP TABLE client_pkg_items
ALTER TABLE client_pkg_items_tmp RENAME TO client_pkg_items
DROP INDEX item_scope_index
CREATE INDEX "client_items/item_scope_index" ON client_items(zone_rowid, item_notifs_rank, item_scope, item_state)
DROP INDEX pending_download_docs
CREATE INDEX "client_items/pending_download_docs" ON client_items(item_doc_id, desired_version) WHERE desired_version != NULL
DROP INDEX "client_items/doc_sync_state"
CREATE INDEX "server_items/item_id" ON server_items(item_id)
CREATE TABLE users ( user_key integer primary key, user_name text not null, user_plist blob, UNIQUE (user_name))
INSERT INTO users(user_key, user_name, user_plist) SELECT owner_key, owner_name, owner_plist FROM server_owners
DROP TABLE server_owners
ALTER TABLE client_downloads ADD COLUMN unit_count_completed INTEGER DEFAULT 0
ALTER TABLE client_document_access RENAME TO client_document_access_tmp
CREATE TABLE client_document_access ( item_rowid integer primary key, evictable integer not null , access_time integer not null default 0)
INSERT INTO client_document_access(item_rowid, evictable, access_time) SELECT item_rowid, evictable, access_time FROM client_document_access_tmp
DROP TABLE client_document_access_tmp
ALTER TABLE server_items ADD COLUMN item_trash_put_back_parent_id BLOB DEFAULT NULL
ALTER TABLE server_items ADD COLUMN item_trash_put_back_path BLOB DEFAULT NULL
ALTER TABLE client_items ADD COLUMN item_trash_put_back_parent_id BLOB DEFAULT NULL
ALTER TABLE client_items ADD COLUMN item_trash_put_back_path BLOB DEFAULT NULL
DROP INDEX "server_items/path_index"
CREATE INDEX "server_items/path_index" ON server_items (item_parent_id, item_filename)
ALTER TABLE client_uploads ADD COLUMN upload_priority integer DEFAULT 0
ALTER TABLE client_uploads ADD COLUMN upload_request_stamp integer DEFAULT 0
CREATE INDEX "client_pkg_items/asset_rank" ON client_pkg_items (item_doc_id, asset_rank)
DROP INDEX "client_items/lost_scan_index"
DROP INDEX "client_items/zombie_scan_index"
CREATE INDEX "client_items/lost_scan_index" ON client_items (item_state, app_library_rowid, item_processing_stamp) WHERE item_state = -1
CREATE INDEX "client_items/zombie_scan_index" ON client_items (item_state, app_library_rowid, item_processing_stamp) WHERE item_state = -3
CREATE INDEX "client_items/doc_sync_state" ON client_items (zone_rowid, item_localsyncupstate, item_type)WHERE item_type = 1
ALTER TABLE client_items ADD COLUMN item_thumb_greedy integer default 0
ALTER TABLE client_items ADD COLUMN item_thumb_live_signature blob default null
CREATE INDEX "client_document_access/evictable/item_rowid" ON client_document_access (item_rowid)
ALTER TABLE app_libraries ADD COLUMN app_library_name text default null
ALTER TABLE app_libraries ADD COLUMN app_library_owner text default null
ALTER TABLE app_libraries ADD COLUMN zone_rowid integer default 0
UPDATE app_libraries SET app_library_name = (SELECT zone_name FROM client_zones WHERE app_libraries.rowid = client_zones.rowid),     app_library_owner = (SELECT zone_owner FROM client_zones WHERE app_libraries.rowid = client_zones.rowid),     zone_rowid = rowid
CREATE TABLE rowid_reservations ( rowid integer PRIMARY KEY, container_id text not null, owner text, UNIQUE (container_id, owner))
SELECT zone_name, zone_owner, rowid FROM server_zones WHERE zone_plist IS NULL
INSERT INTO rowid_reservations  (container_id, owner, rowid)  VALUES (%@, %@, %@)
DELETE FROM server_zones WHERE zone_plist IS NULL
INSERT INTO rowid_reservations  (rowid, container_id, owner) VALUES (%@, %@, %@)
CREATE INDEX "client_items/item_parent_id__item_state" ON client_items (app_library_rowid, item_parent_id, item_state)
ALTER TABLE rowid_reservations RENAME TO rowid_reservations_old
INSERT INTO rowid_reservations  ( rowid, container_id, owner ) SELECT rowid, container_id, owner FROM rowid_reservations_old
DROP TABLE rowid_reservations_old
CREATE UNIQUE INDEX "server_zones/zone_name__zone_owner" ON server_zones (zone_name, zone_owner)
CREATE UNIQUE INDEX "client_zones/zone_name__zone_owner" ON client_zones (zone_name, zone_owner)
SELECT rowid FROM rowid_reservations WHERE owner = %@
SELECT COUNT(*) FROM app_libraries GROUP BY app_library_name, app_library_owner
ALTER TABLE app_libraries RENAME TO app_libraries_old
CREATE TABLE app_libraries ( rowid integer PRIMARY KEY , app_library_plist blob , app_library_name text default null , app_library_owner text default null , zone_rowid integer default 0 , UNIQUE (app_library_name, app_library_owner))
INSERT INTO app_libraries        (rowid, app_library_plist, app_library_name, app_library_name, app_library_owner, zone_rowid) SELECT rowid, app_library_plist, app_library_name, app_library_name, app_library_owner, zone_rowid FROM app_libraries_old
DROP TABLE app_libraries_old
CREATE TABLE aggregates ( key TEXT NOT NULL, value INTEGER NOT NULL DEFAULT 0 )
INSERT INTO aggregates (key, value) SELECT 'version_size_sum', COALESCE(SUM(version_size), 0) FROM server_items
CREATE TRIGGER insert_version_sum_size AFTER INSERT ON server_items  BEGIN  UPDATE aggregates SET value = (value + COALESCE(new.version_size, 0)) WHERE key = 'version_size_sum';   END
CREATE TRIGGER update_version_sum_size UPDATE OF version_size ON server_items  BEGIN  UPDATE aggregates SET value = (value - COALESCE(old.version_size, 0) + COALESCE(new.version_size, 0)) WHERE key = 'version_size_sum';   END
CREATE TRIGGER delete_version_sum_size BEFORE DELETE ON server_items  BEGIN  UPDATE aggregates SET value = (value - COALESCE(old.version_size, 0)) WHERE key = 'version_size_sum';   END
CREATE TABLE client_pkg_sizes (item_doc_id integer not null primary key, aggregate_size integer not null default 0, largest_file_size integer not null default 0)
INSERT INTO client_pkg_sizes SELECT item_doc_id, COALESCE(SUM(size), 0), COALESCE(MAX(size), 0) FROM client_pkg_items GROUP BY item_doc_id
CREATE TRIGGER "client_pkg_items/increase_pkg_size" AFTER INSERT ON client_pkg_items BEGIN INSERT OR IGNORE INTO client_pkg_sizes VALUES (new.item_doc_id, 0, 0); UPDATE client_pkg_sizes SET aggregate_size = aggregate_size + COALESCE(new.size, 0), largest_file_size = MAX(COALESCE(new.size,0), largest_file_size) WHERE item_doc_id = new.item_doc_id; END
CREATE TRIGGER "client_pkg_items/update_pkg_size" UPDATE OF size ON client_pkg_items BEGIN UPDATE client_pkg_sizes SET aggregate_size = aggregate_size - COALESCE(old.size, 0) + COALESCE(new.size, 0), largest_file_size = MAX(COALESCE(new.size,0), largest_file_size) WHERE item_doc_id = new.item_doc_id; END
CREATE TRIGGER "client_pkg_items/reduce_pkg_size"  BEFORE DELETE ON client_pkg_items BEGIN UPDATE client_pkg_sizes SET aggregate_size = aggregate_size - COALESCE(old.size, 0) WHERE item_doc_id = old.item_doc_id; END
DROP INDEX "client_pkg_items/size"
CREATE TABLE share_metadata_cache( item_rowid integer primary key, share_path text unique not null, share_metadata blob non null)
ALTER TABLE app_libraries ADD COLUMN auto_client_item_count INTEGER DEFAULT 0
ALTER TABLE app_libraries ADD COLUMN auto_document_count INTEGER DEFAULT 0
ALTER TABLE app_libraries ADD COLUMN auto_document_with_local_changes_count INTEGER DEFAULT 0
ALTER TABLE app_libraries ADD COLUMN auto_aggregate_size INTEGER DEFAULT 0
CREATE TRIGGER "client_items/insert_item" AFTER INSERT ON client_items BEGIN  UPDATE app_libraries SET auto_client_item_count = auto_client_item_count + 1 WHERE rowid = new.app_library_rowid AND new.item_type != 4 AND new.item_type != 3;  UPDATE app_libraries SET auto_aggregate_size = auto_aggregate_size + COALESCE(new.version_size, 0), auto_document_count = auto_document_count + 1      WHERE rowid = new.app_library_rowid AND new.item_type = 1 AND new.item_state != 1;  UPDATE app_libraries SET auto_document_with_local_changes_count = auto_document_with_local_changes_count + 1 WHERE rowid = new.app_library_rowid AND new.item_type = 1 AND new.item_localsyncupstate >= 2; END
CREATE TRIGGER "client_items/delete_item" BEFORE delete ON client_items BEGIN  UPDATE app_libraries SET auto_client_item_count = auto_client_item_count - 1 WHERE rowid = old.app_library_rowid AND old.item_type != 4 AND old.item_type != 3;  UPDATE app_libraries SET auto_aggregate_size = auto_aggregate_size - COALESCE(old.version_size, 0), auto_document_count = auto_document_count - 1      WHERE rowid = old.app_library_rowid AND old.item_type = 1 AND old.item_state != 1;  UPDATE app_libraries SET auto_document_with_local_changes_count = auto_document_with_local_changes_count - 1 WHERE rowid = old.app_library_rowid AND old.item_type = 1 AND old.item_localsyncupstate >= 2; END
CREATE TRIGGER "client_items/update_size" UPDATE OF version_size, item_type, item_state ON client_items BEGIN  UPDATE app_libraries SET    auto_aggregate_size = auto_aggregate_size - COALESCE(old.version_size,0)  * (old.item_type = 1 AND old.item_state != 1) + COALESCE(new.version_size,0) * (new.item_type = 1 AND new.item_state != 1),    auto_document_count = auto_document_count - (old.item_type = 1 AND old.item_state != 1) + (new.item_type = 1 AND new.item_state != 1)      WHERE rowid = new.app_library_rowid; END
CREATE TRIGGER "client_items/update_changes_count" UPDATE OF item_type,item_localsyncupstate ON client_items BEGIN  UPDATE app_libraries set auto_document_with_local_changes_count = auto_document_with_local_changes_count - (old.item_type = 1 AND old.item_localsyncupstate >= 2) + (new.item_type = 1 AND new.item_localsyncupstate >= 2) where rowid = new.app_library_rowid; END
ALTER TABLE server_items ADD COLUMN pcs_state INTEGER NOT NULL DEFAULT 0
DROP TABLE share_metadata_cache
CREATE TABLE share_metadata_cache( item_rowid integer primary key, share_path text unique not null, record_id blob non null)
ALTER TABLE "client_uploads" ADD COLUMN app_library_rowid INTEGER
UPDATE "client_uploads" SET app_library_rowid = (SELECT app_library_rowid FROM client_items WHERE client_items.rowid = client_uploads.throttle_id) 
ALTER TABLE "client_downloads" ADD COLUMN app_library_rowid INTEGER 
UPDATE "client_downloads" SET app_library_rowid = (SELECT app_library_rowid FROM client_items WHERE client_items.rowid = client_downloads.throttle_id ) 
SELECT 1 FROM client_uploads WHERE app_library_rowid == NULL LIMIT 1
SELECT 1 FROM client_downloads WHERE app_library_rowid == NULL LIMIT 1
DROP TABLE IF EXISTS share_metadata_cache
CREATE INDEX "client_items/item_parent_id_rowid" ON client_items(zone_rowid, item_parent_id, rowid)
CREATE TABLE mark_children_lost_progress(zone_rowid INTEGER NOT NULL, item_parent_id BLOB NOT NULL, last_updated_row_id INTEGER NOT NULL, UNIQUE(zone_rowid, item_parent_id))
ALTER TABLE client_pkg_items ADD COLUMN xattrs BLOB
DROP INDEX IF EXISTS "client_items/lost_scan_index"
DROP INDEX IF EXISTS "client_items/zombie_scan_index"
DROP INDEX IF EXISTS "client_items/lostzombie_scan_index"
CREATE INDEX "client_items/lostzombie_scan_index" ON client_items (item_processing_stamp) WHERE item_state IN (-1,-3)
ALTER TABLE server_pending_fetches ADD COLUMN deleted_record_type INTEGER NOT NULL DEFAULT 0
SELECT 1 FROM client_items WHERE zone_rowid NOT IN (SELECT rowid from client_zones)
SELECT 1 FROM server_items WHERE zone_rowid NOT IN (SELECT rowid from server_zones)
DROP TABLE IF EXISTS sqlite_stat1
DROP TABLE IF EXISTS sqlite_stat2
DROP TABLE IF EXISTS sqlite_stat3
DROP TABLE IF EXISTS sqlite_stat4
ALTER TABLE mark_children_lost_progress ADD COLUMN item_parent_file_id integer
UPDATE server_items SET item_parent_id = call_block(%@, item_parent_id, item_id) WHERE zone_rowid IN (SELECT rowid FROM server_zones WHERE zone_owner != %@)
UPDATE client_items SET item_parent_id = call_block(%@, item_parent_id, item_id) WHERE zone_rowid IN (SELECT rowid FROM client_zones WHERE client_zones.zone_owner != %@)
ALTER TABLE client_document_access ADD COLUMN modify_access_time integer NOT NULL DEFAULT 0
UPDATE client_document_access SET modify_access_time = MAX(access_time, IFNULL((SELECT version_mtime FROM client_items AS ci WHERE ci.rowid = item_rowid), 0))
CREATE INDEX "client_document_access/modify_access_item" ON client_document_access(modify_access_time)
INSERT OR IGNORE INTO client_document_access (item_rowid, evictable, access_time, modify_access_time) SELECT rowid, 0, 0, version_mtime FROM client_items WHERE item_type IN (1, 2, 8)
DROP INDEX IF EXISTS "server_pending_fetches/record_index"
CREATE INDEX "server_pending_fetches/record_is_null" ON server_pending_fetches (zone_rowid) WHERE record IS NULL
CREATE INDEX "server_pending_fetches/record_is_not_null" ON server_pending_fetches (zone_rowid) WHERE (record >= '')
ALTER TABLE client_document_access ADD COLUMN indexable integer NOT NULL DEFAULT 0
UPDATE client_document_access SET indexable = 1 WHERE (SELECT item_scope FROM client_items AS ci WHERE ci.rowid = item_rowid) = 2
CREATE INDEX "client_document_access/indexable" ON client_document_access(indexable) WHERE indexable != 0
CREATE TABLE client_document_access( item_rowid integer primary key, access_time integer not null default 0, modify_access_time integer NOT NULL DEFAULT 0, properties integer NOT NULL DEFAULT 0)
INSERT INTO client_document_access(item_rowid, access_time, modify_access_time, properties) SELECT item_rowid, access_time, modify_access_time, ((case when indexable != 0 then 0x2 else 0 end) | (case when evictable != 0 then 0x1 else 0 end)) FROM client_document_access_tmp
DROP INDEX "client_document_access/evictable"
DROP INDEX "client_document_access/evictable/item_rowid"
DROP INDEX "client_document_access/modify_access_item"
DROP INDEX "client_document_access/indexable"
CREATE INDEX "client_document_access/evictable" ON client_document_access (properties) WHERE ((properties & 0x1) != 0)
CREATE INDEX "client_document_access/evictable/item_rowid" ON client_document_access (item_rowid);
CREATE INDEX "client_document_access/modify_access_item" ON client_document_access(modify_access_time);
CREATE INDEX "client_document_access/indexable" ON client_document_access(properties) WHERE ((properties & 0x2) != 0)
CREATE INDEX "client_items/doc_sync_state" ON client_items (zone_rowid, item_localsyncupstate) WHERE item_type IN (1, 6)
CREATE INDEX "client_document_access/access_item" ON client_document_access(access_time);
CREATE TRIGGER IF NOT EXISTS "client_items/update_app_library" AFTER UPDATE OF app_library_rowid ON client_items WHEN new.app_library_rowid <> old.app_library_rowid BEGIN  UPDATE app_libraries SET auto_client_item_count = auto_client_item_count - 1 WHERE rowid = old.app_library_rowid AND old.item_type != 4 AND old.item_type != 3;  UPDATE app_libraries SET auto_aggregate_size = auto_aggregate_size - COALESCE(old.version_size, 0), auto_document_count = auto_document_count - 1      WHERE rowid = old.app_library_rowid AND old.item_type = 1 AND old.item_state != 1;  UPDATE app_libraries SET auto_document_with_local_changes_count = auto_document_with_local_changes_count - 1 WHERE rowid = old.app_library_rowid AND old.item_type = 1 AND old.item_localsyncupstate >= 2;  UPDATE app_libraries SET auto_client_item_count = auto_client_item_count + 1 WHERE rowid = new.app_library_rowid AND new.item_type != 4 AND new.item_type != 3;  UPDATE app_libraries SET auto_aggregate_size = auto_aggregate_size + COALESCE(new.version_size, 0), auto_document_count = auto_document_count + 1      WHERE rowid = new.app_library_rowid AND new.item_type = 1 AND new.item_state != 1;  UPDATE app_libraries SET auto_document_with_local_changes_count = auto_document_with_local_changes_count + 1 WHERE rowid = new.app_library_rowid AND new.item_type = 1 AND new.item_localsyncupstate >= 2; END
UPDATE app_libraries SET auto_client_item_count=(SELECT COUNT(*) FROM client_items WHERE app_library_rowid = app_libraries.rowid AND item_type != 4 AND item_type != 3), auto_document_count=(SELECT COUNT(*) FROM client_items WHERE app_library_rowid = app_libraries.rowid AND item_type = 1 AND item_state != 1), auto_aggregate_size=(SELECT COALESCE(SUM(version_size), 0) FROM client_items WHERE app_libraries.rowid = app_library_rowid AND item_type = 1 AND item_state != 1), auto_document_with_local_changes_count=(SELECT COUNT(*) FROM client_items WHERE app_library_rowid = app_libraries.rowid AND item_type = 1 AND item_localsyncupstate >= 2)
CREATE TABLE client_sync_up ( throttle_id integer not null, zone_rowid integer not null, throttle_state integer not null, in_flight_diffs integer, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, UNIQUE(throttle_id, zone_rowid))
ALTER TABLE client_items  ADD COLUMN item_parent_zone_rowid integer
INSERT OR IGNORE INTO client_sync_up( throttle_id, zone_rowid, throttle_state, in_flight_diffs ) SELECT  rowid, zone_rowid, 1, item_in_flight_diffs FROM client_items WHERE  item_localsyncupstate = 4
UPDATE client_items SET item_parent_zone_rowid = zone_rowid
SELECT rowid, item_id, item_file_id, item_filename, item_type FROM client_items WHERE zone_rowid = %@
%@/%@/%@/%@
SELECT item_parent_id, zone_rowid FROM client_items WHERE  item_filename = %@ AND item_type = 3 AND item_state in (0, -1)
SELECT item_file_id FROM client_items WHERE  item_id = %@ AND zone_rowid = %@
SELECT item_id FROM client_items WHERE item_file_id = %lld AND zone_rowid = %@
SELECT 1 from client_items  WHERE item_parent_zone_rowid = %@    AND item_parent_id = %@    AND IFNULL(item_localname, item_filename) = %@
UPDATE client_items SET  item_parent_zone_rowid = %@,  item_parent_id = %@,  app_library_rowid = %@,  item_localname = %@ WHERE  rowid = %@
UPDATE client_items SET  item_state = -1 WHERE  rowid = %@ AND item_state = 0
DELETE FROM client_items WHERE  item_filename = %@ AND  item_type = 3
CREATE TABLE rowid_reservations ( rowid integer PRIMARY KEY, container_id text unique not null)
INSERT INTO rowid_reservations  ( rowid, container_id ) SELECT rowid, container_id FROM rowid_reservations_old WHERE owner = %@ OR owner IS NULL
CREATE TABLE app_libraries ( rowid integer PRIMARY KEY , app_library_plist blob , app_library_name text unique default null , zone_rowid integer default 0 , auto_client_item_count integer default 0 , auto_document_count INTEGER DEFAULT 0 , auto_document_with_local_changes_count INTEGER DEFAULT 0 , auto_aggregate_size INTEGER DEFAULT 0)
INSERT INTO app_libraries  (rowid, app_library_plist, app_library_name, zone_rowid, auto_client_item_count, auto_document_count, auto_document_with_local_changes_count, auto_aggregate_size) SELECT rowid, app_library_plist, app_library_name, zone_rowid, auto_client_item_count, auto_document_count, auto_document_with_local_changes_count, auto_aggregate_size   FROM app_libraries_old WHERE app_library_owner = %@ OR app_library_owner IS NULL
ALTER TABLE mark_children_lost_progress RENAME TO mark_children_lost_progress_old
CREATE TABLE mark_children_lost_progress (zone_rowid INTEGER NOT NULL , item_parent_id BLOB NOT NULL , last_updated_row_id INTEGER NOT NULL , item_parent_file_id INTEGER , app_library_rowid INTEGER NOT NULL , PRIMARY KEY(zone_rowid, item_parent_id))
INSERT INTO mark_children_lost_progress (zone_rowid, item_parent_id, last_updated_row_id, item_parent_file_id, app_library_rowid) SELECT o.zone_rowid, o.item_parent_id, o.last_updated_row_id, o.item_parent_file_id, c.app_library_rowid   FROM mark_children_lost_progress_old AS o INNER JOIN client_items AS c     ON o.zone_rowid = c.zone_rowid AND o.item_parent_id = c.item_id
DROP TABLE mark_children_lost_progress_old
ALTER TABLE client_downloads RENAME TO client_downloads_old
CREATE TABLE client_downloads ( throttle_id integer not null, zone_rowid integer not null, app_library_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, transfer_queue blob not null, transfer_size integer not null, transfer_record blob, transfer_stage blob, transfer_operation blob, download_kind integer not null, download_etag blob not null, download_priority integer not null, download_request_stamp integer not null, download_error blob, unit_count_completed INTEGER DEFAULT 0, UNIQUE(transfer_stage), UNIQUE(throttle_id, download_kind, download_etag))
INSERT INTO client_downloads (throttle_id, zone_rowid, app_library_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, download_kind, download_etag, download_priority, download_request_stamp, download_error, unit_count_completed) SELECT throttle_id, zone_rowid, app_library_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, download_kind, download_etag, download_priority, download_request_stamp, download_error, unit_count_completed FROM client_downloads_old
DROP TABLE client_downloads_old
ALTER TABLE client_uploads RENAME TO client_uploads_old
CREATE TABLE client_uploads ( throttle_id integer primary key, zone_rowid integer not null, app_library_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, transfer_queue blob not null, transfer_size integer not null, transfer_record blob, transfer_stage blob, transfer_operation blob, upload_error blob, upload_priority integer DEFAULT 0, upload_request_stamp integer DEFAULT 0, UNIQUE(transfer_stage))
INSERT INTO client_uploads (throttle_id, zone_rowid, app_library_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, upload_error, upload_priority, upload_request_stamp) SELECT throttle_id, zone_rowid, app_library_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, upload_error, upload_priority, upload_request_stamp FROM client_uploads_old
DROP TABLE client_uploads_old
ALTER TABLE client_unapplied_table RENAME TO client_unapplied_table_old
CREATE TABLE client_unapplied_table ( throttle_id integer primary key, zone_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, apply_kind integer not null)
INSERT INTO client_unapplied_table (throttle_id, zone_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, apply_kind) SELECT throttle_id, zone_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, apply_kind FROM client_unapplied_table_old
DROP TABLE client_unapplied_table_old
CREATE INDEX "client_items/mark_children_lost_index" ON client_items(item_parent_zone_rowid, item_parent_id, rowid ASC) WHERE item_state = 0
create index "client_items/faults_enumeration" ON client_items(zone_rowid, rowid) WHERE item_type = 2
DROP INDEX "client_items/sync_up_enumerator_1"
DROP INDEX "client_items/sync_up_enumerator_2"
CREATE INDEX "client_items/sync_up_enumerator_1" ON client_items(item_parent_zone_rowid, item_parent_id) WHERE item_localsyncupstate = 4 AND item_state IN (0, -1, 1)
CREATE INDEX "client_items/sync_up_enumerator_2" ON client_items(zone_rowid) WHERE item_localsyncupstate IN (2, 3, 4)
ALTER TABLE server_items ADD COLUMN item_lastusedtime integer DEFAULT NULL
ALTER TABLE client_items ADD COLUMN item_lastusedtime integer DEFAULT NULL
ALTER TABLE server_items ADD COLUMN item_favoriterank integer DEFAULT NULL
ALTER TABLE client_items ADD COLUMN item_favoriterank integer DEFAULT NULL
DROP INDEX "spotlight_ranks/notif_rank"
DROP TABLE spotlight_ranks
CREATE TABLE tombstones ( file_object_id      integer not null, file_object_id_type integer not null, notif_rank          integer not null, PRIMARY KEY (file_object_id, notif_rank ASC))
CREATE INDEX "tombstones/notif_rank" ON tombstones (notif_rank)
ALTER TABLE client_items ADD COLUMN item_user_visible integer not null default 1
UPDATE client_document_access SET properties = properties & 1
UPDATE client_downloads SET app_library_rowid = (SELECT app_library_rowid FROM client_items WHERE client_downloads.throttle_id = client_items.rowid) WHERE throttle_state != 0
UPDATE client_uploads SET app_library_rowid = (SELECT app_library_rowid FROM client_items WHERE client_uploads.throttle_id = client_items.rowid) WHERE throttle_state != 0
ALTER TABLE server_items ADD COLUMN item_alias_target text
UPDATE server_items SET item_alias_target = item_filename, item_filename = "" WHERE item_type = 3
ALTER TABLE client_items ADD COLUMN item_alias_target text
UPDATE client_items SET item_alias_target = item_filename, item_filename = NULL WHERE item_type = 3
UPDATE server_items SET version_quarantine_info = %@, item_rank = NULL WHERE length(version_quarantine_info) == 0 AND version_quarantine_info IS NOT NULL
UPDATE client_items SET item_local_diffs = item_local_diffs | %llu & ~%llu WHERE item_local_diffs & %llu != 0
UPDATE client_items SET item_local_diffs = item_local_diffs | %llu WHERE item_type = 5 AND item_stat_ckinfo IS NULL AND (item_local_diffs & %llu)==0
ALTER TABLE client_items ADD COLUMN item_tmpbounceno INTEGER
CREATE INDEX "client_items/item_tmpbounceno" ON client_items (item_tmpbounceno) WHERE item_tmpbounceno IS NOT NULL
UPDATE client_items SET item_tmpbounceno = call_block(%p, item_bouncedname) WHERE item_bouncedname IS NOT NULL
DROP INDEX "client_items/item_bouncedname"
DROP INDEX "client_items/item_parent_id__item_localname"
CREATE INDEX "client_items/item_parent_id__item_bouncedname" ON client_items (item_parent_zone_rowid, item_parent_id, item_bouncedname) WHERE item_bouncedname IS NOT NULL
CREATE INDEX "client_items/item_parent_id__item_localname" ON client_items (item_parent_zone_rowid, item_parent_id, item_localname) WHERE item_localname IS NOT NULL
UPDATE client_items SET item_bouncedname = call_block(%p, item_filename, item_localname) WHERE item_localname IS NOT NULL
CREATE INDEX "client_items/item_filename_path" ON client_items (item_parent_zone_rowid, item_parent_id, item_filename)
CREATE INDEX "client_items/item_localname_path" ON client_items (item_parent_zone_rowid, item_parent_id, item_localname)
CREATE INDEX "client_items/item_bouncedname_path" ON client_items (item_parent_zone_rowid, item_parent_id, item_bouncedname)
CREATE INDEX "client_items/shared_item_library" ON client_items (app_library_rowid, item_state) WHERE item_creator_id != 0;
DROP INDEX "client_items/item_id"
DROP INDEX "client_items/item_file_id"
DROP INDEX "client_items/item_file_id_unique"
CREATE UNIQUE INDEX "client_items/item_file_id_unique" ON client_items(item_file_id) WHERE item_state IN (0, -1)
CREATE INDEX "client_sync_up/next_retry" ON client_sync_up (next_retry_stamp) WHERE throttle_state = 1
CREATE INDEX "client_items/sync_up_enumerator" ON client_items(item_state, item_type) WHERE item_localsyncupstate = 4 AND item_min_supported_os_rowid IS NULL
UPDATE client_items SET item_user_visible = 0 WHERE item_scope IN (0, 1)
UPDATE client_items SET item_user_visible = 0 WHERE item_scope = 3 AND (SELECT parent.item_filename FROM client_items AS parent WHERE parent.item_id = item_parent_id AND parent.zone_rowid = item_parent_zone_rowid)
UPDATE client_items SET item_user_visible = 0 WHERE item_filename LIKE '.%%' AND item_scope = 2
UPDATE client_items SET item_state = -1, item_processing_stamp = inc_and_fetch64(%p) WHERE item_user_visible = 0 AND item_scope = 2 AND item_type = 0 AND item_state = 0
DROP TABLE server_pending_fetches
CREATE INDEX "client_items/item_notifs_rank_children" ON client_items (item_parent_id, item_parent_zone_rowid, item_notifs_rank) WHERE item_state IN (0, -1)
CREATE INDEX "client_items/item_notifs_rank_library" ON client_items (item_notifs_rank, app_library_rowid) WHERE item_state IN (0, -1)
DROP INDEX "client_items/alias_map"
CREATE INDEX "client_items/alias_map" ON client_items(item_type, item_alias_target) WHERE item_type = 3
DROP INDEX "server_items/alias_map"
CREATE INDEX "server_items/alias_map" ON server_items(item_type, item_alias_target) WHERE item_type = 3
DROP INDEX "client_items/item_localname_path"
DROP INDEX "client_items/item_bouncedname_path"
DROP INDEX "client_items/item_parent_id_rowid"
DROP INDEX "client_items/spotlight_index"
DROP INDEX "client_items/download_index"
DROP INDEX "client_items/eviction_index"
DROP INDEX "client_items/item_in_flight_diffs"
DROP INDEX "client_uploads/scheduling_by_size"
DROP INDEX "client_pkg_items/is_dirty"
DROP INDEX "client_items/pending_download_docs"
CREATE INDEX "client_items/app_library_rowid" ON client_items (app_library_rowid)
CREATE INDEX "client_items/item_parent_id_rowid" ON client_items (item_parent_id, app_library_rowid, rowid)
CREATE INDEX "client_items/working_set_index" ON client_items (item_notifs_rank) WHERE item_user_visible = 1
CREATE INDEX "client_items/eviction_index" ON client_items (version_mtime, app_library_rowid) WHERE item_localsyncupstate = 0 AND item_state != 1
CREATE INDEX "client_sync_up/sync_state_index" ON client_sync_up (zone_rowid, throttle_state)
CREATE INDEX "client_sync_up/throttle_id" ON client_sync_up (throttle_id)
CREATE INDEX "client_sync_up/zone_rowid" ON client_sync_up (zone_rowid)
CREATE INDEX "client_sync_up/expire_stamp_inactive_state" ON client_sync_up (throttle_state, expire_stamp) WHERE throttle_state = 0
CREATE INDEX "client_uploads/scheduling_by_priority" ON client_uploads (throttle_state, transfer_queue, upload_priority DESC, upload_request_stamp DESC, transfer_size ASC)  WHERE throttle_state = 1 AND transfer_operation IS NULL
ALTER TABLE server_items ADD COLUMN item_side_car_ckinfo BLOB
ALTER TABLE server_items ADD COLUMN item_creator INTEGER
ALTER TABLE server_items ADD COLUMN version_edited_since_shared INTEGER
CREATE TABLE side_car_lookahead ( record_name text primary key , root_alias_record_name text NOT NULL, item_side_car_ckinfo BLOB NOT NULL , item_favoriterank integer , item_lastusedtime integer )
ALTER TABLE client_items ADD COLUMN item_side_car_ckinfo BLOB
ALTER TABLE client_items ADD COLUMN item_creator INTEGER
ALTER TABLE client_items ADD COLUMN version_edited_since_shared INTEGER
ALTER TABLE client_items ADD COLUMN visible_child_count integer
CREATE TRIGGER "visible_child_count/deletion" AFTER DELETE ON client_items BEGIN UPDATE OR IGNORE client_items SET visible_child_count = visible_child_count - 1 WHERE (old.item_user_visible = 1 OR old.item_scope = 3) AND old.item_parent_id = item_id AND old.item_parent_zone_rowid = zone_rowid AND old.item_filename != ".Trash" ; END
CREATE TRIGGER "visible_child_count/insertion" AFTER INSERT ON client_items BEGIN UPDATE OR IGNORE client_items SET visible_child_count = visible_child_count + 1 WHERE (new.item_user_visible = 1 OR new.item_scope = 3) AND new.item_filename != ".Trash" AND new.item_parent_id = item_id AND new.item_parent_zone_rowid = zone_rowid ; END
ALTER TABLE server_items ADD COLUMN quota_used INTEGER
ALTER TABLE server_items ADD COLUMN recursive_child_count INTEGER
ALTER TABLE server_items ADD COLUMN shared_children_count INTEGER
ALTER TABLE server_items ADD COLUMN shared_alias_count INTEGER
ALTER TABLE server_items ADD COLUMN child_count INTEGER
CREATE INDEX "server_items/item_parent_id__item_type" ON server_items(zone_rowid, item_type, item_parent_id)
ALTER TABLE side_car_lookahead ADD COLUMN item_finder_tags blob
UPDATE server_state SET state = %@
SELECT record_name, root_alias_record_name, item_favoriterank, item_lastusedtime, item_finder_tags, item_side_car_ckinfo FROM side_car_lookahead WHERE length(root_alias_record_name) = 36
UPDATE server_items SET item_favoriterank = %@, item_lastusedtime = %@, item_finder_tags = %@, item_side_car_ckinfo = %@, item_rank = NULL WHERE item_id = %@ AND zone_rowid IN (SELECT zone_rowid FROM server_items WHERE item_id = %@)
DROP TRIGGER IF EXISTS "server_items/sharing_state_propagation"
DROP TRIGGER IF EXISTS "server_items/learn_parent_sharing_state"
DROP TRIGGER IF EXISTS "server_items/sharing_state_insertion"
CREATE TRIGGER "server_items/sharing_state_propagation" AFTER UPDATE OF item_sharing_options ON server_items BEGIN UPDATE server_items SET item_sharing_options = (item_sharing_options & (~124)) | (new.item_sharing_options & 120) WHERE new.item_sharing_options != old.item_sharing_options AND new.item_type IN (0, 9, 10) AND new.item_state = 0 AND item_parent_id = new.item_id AND zone_rowid = new.zone_rowid AND (item_sharing_options & 4) == 0 AND (item_sharing_options & 120) != (new.item_sharing_options & 120); END
CREATE TRIGGER "server_items/learn_parent_sharing_state" AFTER UPDATE OF item_parent_id ON server_items BEGIN UPDATE server_items SET item_sharing_options = ((item_sharing_options & (~124)) | IFNULL((SELECT item_sharing_options & 120 FROM server_items as pi WHERE pi.item_id = new.item_parent_id AND pi.zone_rowid = new.zone_rowid), 0)) WHERE new.item_parent_id != old.item_parent_id AND item_id = new.item_id AND zone_rowid = new.zone_rowid AND item_state = 0 AND (item_sharing_options & 4) == 0; END
CREATE TRIGGER "server_items/sharing_state_insertion" AFTER INSERT ON server_items BEGIN UPDATE server_items SET item_sharing_options = ((item_sharing_options & (~124)) | IFNULL((SELECT item_sharing_options & 120 FROM server_items as pi WHERE pi.item_id = new.item_parent_id AND pi.zone_rowid = new.zone_rowid), 0)) WHERE (new.item_sharing_options & 4) == 0 AND item_id = new.item_id AND zone_rowid = new.zone_rowid; UPDATE server_items SET item_sharing_options = (item_sharing_options & (~124)) | (new.item_sharing_options & 120) WHERE (new.item_sharing_options & 4) != 0 AND new.item_type IN (0, 9, 10) AND new.item_state = 0 AND item_parent_id = new.item_id AND zone_rowid = new.zone_rowid AND (item_sharing_options & 4) == 0 AND (item_sharing_options & 120) != (new.item_sharing_options & 120); END
DROP TABLE IF EXISTS item_errors
DROP INDEX IF EXISTS "item_errors/error_group"
DROP TRIGGER IF EXISTS "item_errors/deletion"
DROP TRIGGER IF EXISTS "item_errors/upload-deletion"
DROP TRIGGER IF EXISTS "item_errors/upload-idle"
DROP TRIGGER IF EXISTS "item_errors/download-deletion"
DROP TRIGGER IF EXISTS "item_errors/download-idle"
DROP TRIGGER IF EXISTS "item_errors/quota-insertion"
DROP TRIGGER IF EXISTS "item_errors/quota-deletion"
DROP TRIGGER IF EXISTS "item_errors/quota-update-away"
DROP TRIGGER IF EXISTS "item_errors/quota-update-into"
DROP TRIGGER IF EXISTS "item_errors/disk-insertion"
DROP TRIGGER IF EXISTS "item_errors/disk-deletion"
DROP TRIGGER IF EXISTS "item_errors/disk-update-away"
DROP TRIGGER IF EXISTS "item_errors/disk-update-into"
CREATE TABLE item_errors ( item_rowid integer NOT NULL, error_domain TEXT NOT NULL default "unknown", error_code integer NOT NULL default 0, error_message TEXT, error_timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, service integer NOT NULL, PRIMARY KEY (item_rowid, error_domain, error_code, error_message, service))
CREATE TRIGGER "item_errors/deletion" AFTER DELETE ON client_items BEGIN DELETE FROM item_errors WHERE item_rowid = old.rowid; END
CREATE TRIGGER "item_errors/upload-deletion" AFTER DELETE ON client_uploads BEGIN DELETE FROM item_errors WHERE item_rowid = old.throttle_id AND service = 1; END
CREATE TRIGGER "item_errors/upload-idle" AFTER UPDATE OF throttle_state ON client_uploads WHEN (new.throttle_state = 0  AND old.throttle_state != 0) BEGIN DELETE FROM item_errors WHERE item_rowid = old.throttle_id AND service = 1; END
CREATE TRIGGER "item_errors/download-deletion" AFTER DELETE ON client_downloads BEGIN DELETE FROM item_errors WHERE item_rowid = old.throttle_id AND service = 2; END
CREATE TRIGGER "item_errors/download-idle" AFTER UPDATE OF throttle_state ON client_downloads WHEN (new.throttle_state = 0  AND old.throttle_state != 0) BEGIN DELETE FROM item_errors WHERE item_rowid = old.throttle_id AND service = 2; END
CREATE TRIGGER "item_errors/quota-insertion" AFTER INSERT ON client_uploads WHEN new.throttle_state = 32 BEGIN INSERT OR REPLACE INTO item_errors (item_rowid, error_domain, error_code, service)       VALUES (new.throttle_id, "CKErrorDomain", 25, 1); END
CREATE TRIGGER "item_errors/quota-deletion" AFTER DELETE ON client_uploads WHEN old.throttle_state = 32 BEGIN DELETE FROM item_errors WHERE item_rowid = old.throttle_id    AND error_domain = "CKErrorDomain"    AND error_code = 25    AND service = 1; END
CREATE TRIGGER "item_errors/quota-update-away" AFTER UPDATE OF throttle_state ON client_uploads WHEN (old.throttle_state = 32    AND new.throttle_state != 32) BEGIN DELETE FROM item_errors  WHERE item_rowid = old.throttle_id    AND error_domain = "CKErrorDomain"    AND error_code = 25    AND service = 1; END
CREATE TRIGGER "item_errors/quota-update-into" AFTER UPDATE OF throttle_state ON client_uploads WHEN (old.throttle_state != 32    AND new.throttle_state = 32) BEGIN INSERT OR REPLACE INTO item_errors (item_rowid, error_domain, error_code, service)       VALUES (new.throttle_id, "CKErrorDomain", 25, 1); END
CREATE TRIGGER "item_errors/disk-insertion" AFTER INSERT ON client_downloads WHEN new.throttle_state = 43 BEGIN INSERT OR REPLACE INTO item_errors (item_rowid, error_domain, error_code, service)       VALUES (new.throttle_id, "BRCloudDocsErrorDomain", 34, 2); END
CREATE TRIGGER "item_errors/disk-deletion" AFTER DELETE ON client_downloads WHEN old.throttle_state = 43 BEGIN DELETE FROM item_errors WHERE item_rowid = old.throttle_id    AND error_domain = "BRCloudDocsErrorDomain"    AND error_code = 34    AND service = 2; END
CREATE TRIGGER "item_errors/disk-update-away" AFTER UPDATE OF throttle_state ON client_downloads WHEN (old.throttle_state = 43  AND new.throttle_state != 43) BEGIN DELETE FROM item_errors  WHERE item_rowid = old.throttle_id    AND error_domain = "BRCloudDocsErrorDomain"    AND error_code = 34    AND service = 2; END
CREATE TRIGGER "item_errors/disk-update-into" AFTER UPDATE OF throttle_state ON client_downloads WHEN (old.throttle_state != 43  AND new.throttle_state = 43) BEGIN INSERT OR REPLACE INTO item_errors (item_rowid, error_domain, error_code, service)       VALUES (new.throttle_id, "BRCloudDocsErrorDomain", 34, 2); END
INSERT INTO item_errors (item_rowid, error_domain, error_code, service) SELECT throttle_id, "CKErrorDomain", 25, 1          FROM client_uploads WHERE throttle_state = 32
SELECT throttle_id, upload_error FROM client_uploads WHERE throttle_state != 32   AND throttle_state != 0   AND (retry_count > %llu OR throttle_state = 33)
INSERT INTO item_errors (item_rowid, error_domain, error_code, service) VALUES (%llu, %@, %lu, 1)
INSERT INTO item_errors (item_rowid, error_domain, error_code, service) SELECT throttle_id, "BRCloudDocsErrorDomain", 34, 2          FROM client_downloads WHERE throttle_state = 43
SELECT throttle_id, download_error FROM client_downloads WHERE throttle_state != 43   AND throttle_state != 0   AND (retry_count > %llu OR throttle_state = 41)
INSERT INTO item_errors (item_rowid, error_domain, error_code, service) VALUES (%llu, %@, %lu, 2)
UPDATE client_items AS parent SET visible_child_count = (SELECT COUNT(*) FROM client_items AS child WHERE child.item_parent_id = parent.item_id AND child.item_parent_zone_rowid = parent.zone_rowid AND (child.item_user_visible = 1 OR (child.item_scope == 3 AND child.item_filename != ".Trash"))) WHERE parent.item_type in (0, 9, 10, 4)
CREATE TABLE telemetry_events ( rowid integer PRIMARY KEY, payload blob NOT NULL)
CREATE TABLE telemetry_failure_counts ( item_id integer NOT NULL, zone_rowid integer NOT NULL, retry_count integer NOT NULL, PRIMARY KEY (item_id, zone_rowid))
CREATE INDEX "server_items/share_root" ON server_items(item_rank) WHERE (item_sharing_options & 4) != 0
SELECT 1 FROM client_items WHERE item_bouncedname LIKE '%%.icloud'
DROP TRIGGER IF EXISTS "visible_child_count/reparent"
DROP TRIGGER IF EXISTS "visible_child_count/visibility"
CREATE TRIGGER "visible_child_count/reparent" AFTER UPDATE OF item_parent_id, item_parent_zone_rowid ON client_items WHEN (new.item_parent_id != old.item_parent_id OR new.item_parent_zone_rowid != old.item_parent_zone_rowid) BEGIN UPDATE OR IGNORE client_items SET   visible_child_count = visible_child_count - 1  WHERE (old.item_user_visible = 1 OR old.item_scope = 3) AND item_id = old.item_parent_id AND zone_rowid = old.item_parent_zone_rowid AND old.item_filename != ".Trash" ; UPDATE OR IGNORE client_items SET   visible_child_count = visible_child_count + 1  WHERE (old.item_user_visible = 1 OR old.item_scope = 3) AND item_id = new.item_parent_id AND zone_rowid = new.item_parent_zone_rowid AND new.item_filename != ".Trash" ; END
CREATE TRIGGER "visible_child_count/visibility" AFTER UPDATE OF item_user_visible, item_scope ON client_items WHEN (new.item_user_visible != old.item_user_visible OR new.item_scope != old.item_scope) BEGIN UPDATE OR IGNORE client_items SET   visible_child_count = visible_child_count + (new.item_user_visible | (new.item_scope == 3)) - (old.item_user_visible | (old.item_scope == 3)) WHERE item_id == new.item_parent_id AND zone_rowid = new.item_parent_zone_rowid AND new.item_filename != ".Trash" ; END
CREATE INDEX "client_items/sync_state_job_recovery" ON client_items(item_localsyncupstate) WHERE item_localsyncupstate != 0
CREATE INDEX "client_items/download_job" ON client_items(rowid) WHERE desired_version IS NOT NULL
DROP INDEX IF EXISTS "client_items/shared_item_library"
UPDATE client_downloads SET transfer_queue = '_retry' WHERE transfer_queue = 'com.apple.SharedDocs'
UPDATE client_uploads SET transfer_queue = '_retry' WHERE transfer_queue = 'com.apple.SharedDocs'
SELECT config_plist FROM server_state WHERE config_plist IS NOT NULL
CREATE TABLE server_state_tmp (state)
INSERT INTO server_state_tmp (state) SELECT state FROM server_state
DROP TABLE server_state
ALTER TABLE server_state_tmp RENAME TO server_state
ALTER TABLE client_items ADD COLUMN version_old_zone_item_id blob
ALTER TABLE client_items ADD COLUMN version_old_zone_rowid integer
CREATE INDEX "client_items/version_old_zone_rowid" ON client_items (version_old_zone_rowid)
ALTER TABLE client_items ADD COLUMN version_block_sync_until_timestamp integer default null
ALTER TABLE client_items ADD COLUMN version_block_sync_until_bundle_id text default null
ALTER TABLE client_items ADD COLUMN version_block_sync_until_resuming integer default null
CREATE INDEX "client_items/version_block_sync_timestamp" ON client_items (version_block_sync_until_timestamp)
CREATE TRIGGER "server_items/orphan_reschedule" AFTER INSERT ON server_items BEGIN UPDATE server_items SET item_depth = 0 WHERE new.item_type IN (0, 9, 10)   AND item_parent_id = new.item_id   AND zone_rowid = new.zone_rowid   AND item_depth = -2   AND item_rank IS NULL; END
CREATE TRIGGER "server_items/orphan_reschedule_propagation" AFTER UPDATE OF item_depth ON server_items BEGIN UPDATE server_items SET item_depth = 0 WHERE new.item_depth = 0 AND old.item_depth = -2   AND new.item_type IN (0, 9, 10)   AND item_parent_id = new.item_id   AND zone_rowid = new.zone_rowid   AND item_depth = -2   AND item_rank IS NULL; END
SELECT 1 FROM client_items WHERE app_library_rowid = %@ AND item_stat_ckinfo IS NOT NULL LIMIT 1
CREATE INDEX "server_items/item_lastusedtime" ON server_items(item_lastusedtime DESC)
DROP TABLE IF EXISTS item_recursive_properties
DROP INDEX IF EXISTS "item_recursive_properties/item_id"
DROP INDEX IF EXISTS "item_recursive_properties/item_parent_id"
DROP TRIGGER IF EXISTS "item_recursive_properties/insertion"
DROP TRIGGER IF EXISTS "item_recursive_properties/deletion"
DROP TRIGGER IF EXISTS"item_recursive_properties/reparent"
DROP TRIGGER IF EXISTS "item_recursive_properties/recursive_update"
DROP TRIGGER IF EXISTS "item_recursive_properties/recursive_reparent"
DROP TRIGGER IF EXISTS "item_recursive_properties/recursive_delete"
DROP TRIGGER IF EXISTS "item_recursive_properties/item_id_update"
CREATE TABLE item_recursive_properties (  item_rowid integer not null primary key, item_id blob not null, item_parent_id blob, item_type integer not null, zone_rowid integer not null, item_parent_zone_rowid  integer not null, dir_faults_count integer not null default 0, faults_count integer not null default 0, needs_faulting_count integer not null default 0, over_quota_count integer not null default 0, shared_by_me_count integer not null default 0, shared_to_me_count integer not null default 0, uploaded_size integer not null default 0, uploaded_count integer not null default 0, needs_upload_size integer not null default 0, needs_upload_count integer not null default 0, downloaded_size integer not null default 0, downloaded_count integer not null default 0, needs_download_size integer not null default 0, needs_download_count integer not null default 0, dl_unstaged_count integer not null default 0, needs_dl_unstage_count integer not null default 0, synced_up_count integer not null default 0, needs_sync_up_count integer not null default 0, needs_delete_doc_count  integer not null default 0)
CREATE UNIQUE INDEX "item_recursive_properties/item_id_zone_rowid"ON item_recursive_properties (item_id, zone_rowid)
CREATE INDEX "item_recursive_properties/item_parent_id_zone_rowid"ON item_recursive_properties (item_parent_id, item_parent_zone_rowid)
CREATE TRIGGER "item_recursive_properties/item_id_update" AFTER UPDATE OF item_id, zone_rowid ON client_items WHEN (new.item_id != old.item_id OR new.zone_rowid != old.zone_rowid)  AND new.item_type IN (0, 9, 10, 4, 1, 2, 8) BEGIN UPDATE OR IGNORE item_recursive_properties SET   item_parent_id = new.item_id,  item_parent_zone_rowid = new.zone_rowid WHERE item_parent_id == old.item_id   AND item_parent_zone_rowid = old.zone_rowid ; UPDATE OR IGNORE item_recursive_properties SET   item_id = new.item_id,  zone_rowid = new.zone_rowid WHERE item_rowid == new.rowid ; END
INSERT INTO item_recursive_properties (item_rowid, item_id, item_parent_id, item_type, zone_rowid, item_parent_zone_rowid)SELECT rowid, item_id, item_parent_id, item_type, zone_rowid, item_parent_zone_rowid FROM client_items WHERE item_type IN (0, 9, 10, 4) AND item_filename != '.Trash'
CREATE TRIGGER "item_recursive_properties/insertion" AFTER INSERT ON client_items WHEN new.item_filename != '.Trash' AND new.item_type IN (0, 9, 10, 4) BEGIN INSERT OR IGNORE INTO item_recursive_properties   (item_rowid, item_id, item_parent_id, item_type) VALUES   (new.rowid, new.item_id, new.item_parent_id, new.item_type); END
CREATE TRIGGER "item_recursive_properties/deletion" AFTER DELETE ON client_items WHEN old.item_type IN (0, 9, 10, 4, 1, 2, 8) BEGIN DELETE FROM item_recursive_properties WHERE item_rowid == old.rowid ; END
CREATE TRIGGER "item_recursive_properties/reparent" AFTER UPDATE OF item_parent_id, item_parent_zone_rowid ON client_items WHEN (new.item_parent_id != old.item_parent_id OR new.item_parent_zone_rowid != old.item_parent_zone_rowid)  AND new.item_type IN (0, 9, 10, 4, 1, 2, 8) BEGIN UPDATE OR IGNORE item_recursive_properties SET   item_parent_id = new.item_parent_id,   item_parent_zone_rowid = new.item_parent_zone_rowid WHERE item_rowid == new.rowid AND item_parent_id IS NOT NULL ; END
CREATE TRIGGER "item_recursive_properties/recursive_update" AFTER UPDATE OF dir_faults_count, faults_count, needs_faulting_count, over_quota_count, shared_by_me_count, shared_to_me_count, uploaded_size, uploaded_count, needs_upload_size, needs_upload_count, downloaded_size, downloaded_count, needs_download_size, needs_download_count, dl_unstaged_count, needs_dl_unstage_count, synced_up_count, needs_sync_up_count, needs_delete_doc_count ON item_recursive_properties BEGIN UPDATE item_recursive_properties SET  dir_faults_count = dir_faults_count + new.dir_faults_count - old.dir_faults_count ,  faults_count = faults_count + new.faults_count - old.faults_count ,  needs_faulting_count = needs_faulting_count + new.needs_faulting_count - old.needs_faulting_count ,  over_quota_count = over_quota_count + new.over_quota_count - old.over_quota_count ,  shared_by_me_count = shared_by_me_count + new.shared_by_me_count - old.shared_by_me_count ,  shared_to_me_count = shared_to_me_count + new.shared_to_me_count - old.shared_to_me_count ,  needs_upload_size = needs_upload_size + new.needs_upload_size - old.needs_upload_size ,  needs_upload_count = needs_upload_count + new.needs_upload_count - old.needs_upload_count ,  needs_download_size = needs_download_size + new.needs_download_size - old.needs_download_size ,  needs_download_count = needs_download_count + new.needs_download_count - old.needs_download_count ,  needs_dl_unstage_count = needs_dl_unstage_count + new.needs_dl_unstage_count - old.needs_dl_unstage_count ,  needs_sync_up_count = needs_sync_up_count + new.needs_sync_up_count - old.needs_sync_up_count ,  needs_delete_doc_count = needs_delete_doc_count + new.needs_delete_doc_count - old.needs_delete_doc_count ,  uploaded_size = uploaded_size + MAX((new.uploaded_size - old.uploaded_size), 0) ,  uploaded_count = uploaded_count + MAX((new.uploaded_count - old.uploaded_count), 0) ,  downloaded_size = downloaded_size + MAX((new.downloaded_size - old.downloaded_size), 0) ,  downloaded_count = downloaded_count + MAX((new.downloaded_count - old.downloaded_count), 0) ,  dl_unstaged_count = dl_unstaged_count + MAX((new.dl_unstaged_count - old.dl_unstaged_count), 0) ,  synced_up_count = synced_up_count + MAX((new.synced_up_count - old.synced_up_count), 0)  WHERE item_id == old.item_parent_id AND  zone_rowid == old.item_parent_zone_rowid AND  new.item_parent_id == old.item_parent_id AND  new.item_parent_zone_rowid == old.item_parent_zone_rowid AND  ( new.dir_faults_count != old.dir_faults_count OR  new.faults_count != old.faults_count OR  new.needs_faulting_count != old.needs_faulting_count OR  new.over_quota_count != old.over_quota_count OR  new.shared_by_me_count != old.shared_by_me_count OR  new.shared_to_me_count != old.shared_to_me_count OR  new.needs_upload_size != old.needs_upload_size OR  new.needs_upload_count != old.needs_upload_count OR  new.needs_download_size != old.needs_download_size OR  new.needs_download_count != old.needs_download_count OR  new.needs_dl_unstage_count != old.needs_dl_unstage_count OR  new.needs_sync_up_count != old.needs_sync_up_count OR  new.needs_delete_doc_count != old.needs_delete_doc_count OR  ( new.uploaded_size != old.uploaded_size AND new.uploaded_size != 0 ) OR  ( new.uploaded_count != old.uploaded_count AND new.uploaded_count != 0 ) OR  ( new.downloaded_size != old.downloaded_size AND new.downloaded_size != 0 ) OR  ( new.downloaded_count != old.downloaded_count AND new.downloaded_count != 0 ) OR  ( new.dl_unstaged_count != old.dl_unstaged_count AND new.dl_unstaged_count != 0 ) OR  ( new.synced_up_count != old.synced_up_count AND new.synced_up_count != 0 ) ) ; UPDATE item_recursive_properties SET  uploaded_size = 0  WHERE item_rowid == old.item_rowid AND (needs_upload_size == 0 AND needs_sync_up_count == 0) AND uploaded_size != 0; UPDATE item_recursive_properties SET  uploaded_count = 0  WHERE item_rowid == old.item_rowid AND (needs_upload_count == 0 AND needs_sync_up_count == 0) AND uploaded_count != 0; UPDATE item_recursive_properties SET  downloaded_size = 0  WHERE item_rowid == old.item_rowid AND (needs_download_size == 0 AND needs_dl_unstage_count == 0) AND downloaded_size != 0; UPDATE item_recursive_properties SET  downloaded_count = 0  WHERE item_rowid == old.item_rowid AND (needs_download_count == 0 AND needs_dl_unstage_count == 0) AND downloaded_count != 0; UPDATE item_recursive_properties SET  dl_unstaged_count = 0  WHERE item_rowid == old.item_rowid AND (needs_dl_unstage_count == 0) AND dl_unstaged_count != 0; UPDATE item_recursive_properties SET  synced_up_count = 0  WHERE item_rowid == old.item_rowid AND (needs_sync_up_count == 0) AND synced_up_count != 0;DELETE FROM item_recursive_properties WHERE  item_rowid == old.item_rowid AND uploaded_size == 0 AND needs_upload_size == 0 AND  uploaded_count == 0 AND needs_upload_count == 0 AND  downloaded_size == 0 AND needs_download_size == 0 AND  downloaded_count == 0 AND needs_download_count == 0 AND  synced_up_count  == 0 AND needs_sync_up_count == 0 AND  needs_delete_doc_count == 0 AND  dl_unstaged_count == 0 AND needs_dl_unstage_count == 0 AND  faults_count == 0 AND needs_faulting_count == 0 AND  over_quota_count == 0 AND shared_by_me_count == 0 AND  shared_to_me_count  == 0 AND item_type NOT IN (0, 9, 10, 4); END
CREATE TRIGGER "item_recursive_properties/recursive_reparent" AFTER UPDATE OF item_parent_id, item_parent_zone_rowid ON item_recursive_properties WHEN ((new.item_parent_id != old.item_parent_id OR new.item_parent_zone_rowid != old.item_parent_zone_rowid)        AND ((SELECT 1 FROM item_recursive_properties WHERE item_id = new.item_parent_id AND zone_rowid = new.item_parent_zone_rowid LIMIT 1)              OR item_id_is_root(new.item_parent_id))) BEGIN UPDATE item_recursive_properties SET  dir_faults_count = dir_faults_count - old.dir_faults_count ,  faults_count = faults_count - old.faults_count ,  needs_faulting_count = needs_faulting_count - old.needs_faulting_count ,  over_quota_count = over_quota_count - old.over_quota_count ,  shared_by_me_count = shared_by_me_count - old.shared_by_me_count ,  shared_to_me_count = shared_to_me_count - old.shared_to_me_count ,  needs_upload_size = needs_upload_size - old.needs_upload_size ,  needs_upload_count = needs_upload_count - old.needs_upload_count ,  needs_download_size = needs_download_size - old.needs_download_size ,  needs_download_count = needs_download_count - old.needs_download_count ,  needs_dl_unstage_count = needs_dl_unstage_count - old.needs_dl_unstage_count ,  needs_sync_up_count = needs_sync_up_count - old.needs_sync_up_count ,  needs_delete_doc_count = needs_delete_doc_count - old.needs_delete_doc_count  WHERE item_id == old.item_parent_id AND  zone_rowid = old.item_parent_zone_rowid; UPDATE item_recursive_properties SET  dir_faults_count = dir_faults_count + new.dir_faults_count ,  faults_count = faults_count + new.faults_count ,  needs_faulting_count = needs_faulting_count + new.needs_faulting_count ,  over_quota_count = over_quota_count + new.over_quota_count ,  shared_by_me_count = shared_by_me_count + new.shared_by_me_count ,  shared_to_me_count = shared_to_me_count + new.shared_to_me_count ,  needs_upload_size = needs_upload_size + new.needs_upload_size ,  needs_upload_count = needs_upload_count + new.needs_upload_count ,  needs_download_size = needs_download_size + new.needs_download_size ,  needs_download_count = needs_download_count + new.needs_download_count ,  needs_dl_unstage_count = needs_dl_unstage_count + new.needs_dl_unstage_count ,  needs_sync_up_count = needs_sync_up_count + new.needs_sync_up_count ,  needs_delete_doc_count = needs_delete_doc_count + new.needs_delete_doc_count  WHERE item_id == new.item_parent_id AND  zone_rowid = new.item_parent_zone_rowid; END
CREATE TRIGGER "item_recursive_properties/recursive_delete" AFTER DELETE ON item_recursive_properties BEGIN UPDATE item_recursive_properties SET  dir_faults_count = dir_faults_count - old.dir_faults_count ,  faults_count = faults_count - old.faults_count ,  needs_faulting_count = needs_faulting_count - old.needs_faulting_count ,  over_quota_count = over_quota_count - old.over_quota_count ,  shared_by_me_count = shared_by_me_count - old.shared_by_me_count ,  shared_to_me_count = shared_to_me_count - old.shared_to_me_count ,  needs_upload_size = needs_upload_size - old.needs_upload_size ,  needs_upload_count = needs_upload_count - old.needs_upload_count ,  needs_download_size = needs_download_size - old.needs_download_size ,  needs_download_count = needs_download_count - old.needs_download_count ,  needs_dl_unstage_count = needs_dl_unstage_count - old.needs_dl_unstage_count ,  needs_sync_up_count = needs_sync_up_count - old.needs_sync_up_count ,  needs_delete_doc_count = needs_delete_doc_count - old.needs_delete_doc_count  WHERE item_id == old.item_parent_id AND  zone_rowid = old.item_parent_zone_rowid AND ( 0 != old.dir_faults_count OR  0 != old.faults_count OR  0 != old.needs_faulting_count OR  0 != old.over_quota_count OR  0 != old.shared_by_me_count OR  0 != old.shared_to_me_count OR  0 != old.needs_upload_size OR  0 != old.needs_upload_count OR  0 != old.needs_download_size OR  0 != old.needs_download_count OR  0 != old.needs_dl_unstage_count OR  0 != old.needs_sync_up_count OR  0 != old.needs_delete_doc_count ); END
INSERT OR IGNORE INTO item_recursive_properties (item_rowid, item_id, item_parent_id, item_type, zone_rowid, item_parent_zone_rowid) SELECT rowid, item_id, item_parent_id, call_block(%p, item_type), zone_rowid, item_parent_zone_rowid FROM client_items WHERE (item_sharing_options & 4) != 0 OR item_type IN (2, 7, 8) OR item_localsyncupstate IN (3,4) AND item_type IN (1, 2, 8)
UPDATE item_recursive_properties SET shared_by_me_count = call_block(%p, shared_by_me_count, 1, (SELECT cz.zone_owner FROM client_zones AS cz WHERE cz.rowid = zone_rowid)), shared_to_me_count = call_block(%p, shared_to_me_count, 0, (SELECT cz.zone_owner FROM client_zones AS cz WHERE cz.rowid = zone_rowid)) WHERE item_rowid IN (SELECT rowid FROM client_items WHERE (item_sharing_options & 4) != 0)
UPDATE item_recursive_properties SET shared_to_me_count = 1 WHERE item_rowid IN (SELECT rowid FROM client_items WHERE (item_sharing_options & 4) != 0 AND zone_rowid != item_parent_zone_rowid)
UPDATE item_recursive_properties SET dir_faults_count = dir_faults_count + 1 WHERE item_type IN (9, 10)
UPDATE item_recursive_properties SET faults_count = 1 WHERE item_rowid IN (SELECT rowid FROM client_items WHERE item_type IN (2, 7, 8))
UPDATE item_recursive_properties AS ip SET needs_upload_size = (SELECT ci.version_size from client_items AS ci WHERE ci.rowid = ip.item_rowid), needs_upload_count = 1 WHERE item_rowid IN (SELECT rowid FROM client_items WHERE item_localsyncupstate = 3 AND item_type IN (1, 2, 8))
UPDATE item_recursive_properties AS ip SET needs_sync_up_count = needs_sync_up_count + 1 WHERE item_rowid IN (SELECT rowid FROM client_items WHERE item_localsyncupstate = 4 AND item_type IN (1, 2, 8))
UPDATE item_recursive_properties AS ip SET needs_delete_doc_count = needs_delete_doc_count + 1 WHERE item_rowid IN (SELECT rowid FROM client_items WHERE item_state IN (1, -3) AND item_type IN (1, 2, 8))
CREATE TABLE IF NOT EXISTS ciconia_history ( date integer NOT NULL, os text NOT NULL, br text NOT NULL, bird_schema integer NOT NULL, db_schema integer NOT NULL, ciconia_version integer NOT NULL, last_error text, duration real NOT NULL, uuid text NOT NULL, PRIMARY KEY (uuid))
UPDATE client_pkg_items SET xattrs = call_block(%p, xattrs) WHERE xattrs IS NOT NULL
SELECT signature, data FROM server_xattr_blobs
DROP TABLE server_xattr_blobs
CREATE INDEX "client_items/share_id" on client_items(app_library_rowid) WHERE (item_sharing_options & 4) != 0
CREATE INDEX "client_items/oob_sync_ack" on client_items(zone_rowid) WHERE (item_local_diffs & 1152921504606846976) != 0
CREATE INDEX "ciconia_history/counting_index" ON ciconia_history(ciconia_version)
CREATE INDEX "client_items/item_xattr_signature" ON client_items(item_xattr_signature)
CREATE INDEX "client_items/version_xattr_signature" ON client_items(version_xattr_signature)
DROP INDEX IF EXISTS "server_items/item_xattr_signature"
DROP INDEX IF EXISTS "server_items/version_xattr_signature"
CREATE INDEX "server_items/item_xattr_signature" ON server_items(item_xattr_signature)
CREATE INDEX "server_items/version_xattr_signature" ON server_items(version_xattr_signature)
ALTER TABLE telemetry_events ADD COLUMN priority integer not null default 0
CREATE INDEX "telemetry_events/priority" ON telemetry_events (priority) WHERE priority = 1
DELETE FROM client_items AS ci WHERE ci.item_stat_ckinfo IS NULL AND ci.zone_rowid IN (SELECT rowid FROM client_zones AS cz WHERE cz.zone_owner = "__defaultOwner__") AND item_type NOT IN (0, 4, 9, 10) LIMIT %llu
SELECT 1 FROM sqlite_master where type = 'table' AND name = 'ciconia_migration_info'
INSERT OR REPLACE INTO ciconia_migration_info values (%@, %lld)
INSERT OR REPLACE INTO ciconia_migration_info values (%@, %d)
DELETE FROM client_items WHERE item_type = 3 LIMIT %llu
DELETE FROM client_downloads WHERE download_kind = 1
DROP INDEX IF EXISTS "client_items/item_tmpbounceno"
DROP INDEX IF EXISTS "client_items/item_notifs_rank_children"
DROP INDEX IF EXISTS "client_items/doc_sync_state"
DROP INDEX IF EXISTS "client_sync_up/zone_rowid"
DROP INDEX IF EXISTS "client_sync_up/sync_state_index"
DROP INDEX IF EXISTS "client_sync_up/throttle_id"
DROP INDEX IF EXISTS "client_downloads/zone_rowid__throttle_state"
DROP INDEX IF EXISTS "client_uploads/zone_rowid__throttle_state"
DROP INDEX IF EXISTS "client_uploads/group_by"
DROP INDEX IF EXISTS "client_downloads/group_by"
DROP INDEX IF EXISTS "client_items/working_set_index"
UPDATE client_items SET item_localsyncupstate = call_block(%p, item_localsyncupstate) WHERE item_state IN (0, -1) AND item_type NOT IN (2, 7)
UPDATE client_items SET desired_version = NULL, item_localname = NULL, item_tmpbounceno = NULL, item_thumb_greedy = NULL, item_thumb_live_signature = NULL
UPDATE client_items SET item_scope = 2 WHERE item_scope = 1 AND call_block(%p, item_id)
UPDATE client_downloads SET download_error = NULL
UPDATE client_items SET item_type = 1 WHERE item_type = 2 LIMIT %llu
UPDATE client_items SET item_type = 6 WHERE item_type = 7 LIMIT %llu
UPDATE client_items SET item_state = 0,     item_scope = (        WITH RECURSIVE item_parents_scopes (item_scope, item_id, zone_rowid) AS (            SELECT ci.item_scope, ci.item_parent_id, ci.item_parent_zone_rowid            FROM client_items AS ci            WHERE ci.item_id = client_items.item_parent_id                AND ci.zone_rowid = client_items.item_parent_zone_rowid            UNION ALL            SELECT li.item_scope, li.item_parent_id, li.item_parent_zone_rowid            FROM client_items as li                 INNER JOIN item_parents_scopes AS p USING (item_id, zone_rowid)        )        SELECT item_scope        FROM item_parents_scopes        WHERE item_scope > 0        LIMIT 1    )WHERE item_state IN (-1, -2) AND item_scope = 0 LIMIT %llu
UPDATE client_items SET item_state = 0 WHERE item_state IN (-1, -2) LIMIT %llu
UPDATE client_items SET item_state = 1 WHERE item_state = -3 LIMIT %llu
UPDATE client_items SET item_processing_stamp = NULL WHERE item_type NOT IN (0, 4, 9, 10) AND item_processing_stamp IS NOT NULL
UPDATE client_unapplied_table SET throttle_state = 1 WHERE throttle_state = 26
DROP TRIGGER IF EXISTS "client_pkg_items/increase_pkg_size"
DROP TRIGGER IF EXISTS "client_pkg_items/update_pkg_size"
DROP TRIGGER IF EXISTS "client_pkg_items/reduce_pkg_size"
 CREATE TABLE client_pkg_upload_items ( item_rowid integer not null, rel_path text not null, item_type integer not null, asset_rank integer not null, quarantine_info blob, file_id integer not null, signature_or_link blob, generation, size integer, mode integer, mtime integer, xattr_signature blob, PRIMARY KEY (item_rowid, rel_path ASC))
CREATE TRIGGER "client_pkg_upload_items/item_delete" AFTER DELETE ON client_items BEGIN DELETE FROM client_pkg_upload_items WHERE item_rowid = old.rowid ; END
CREATE TRIGGER "client_pkg_upload_items/sync_idle_delete" AFTER UPDATE OF item_localsyncupstate, item_state ON client_items BEGIN DELETE FROM client_pkg_upload_items WHERE (new.item_state = 1 OR new.item_localsyncupstate IN (1, 0)) AND item_rowid = new.rowid ; END
CREATE TABLE client_pkg_upload_sizes (item_rowid integer not null primary key, aggregate_size integer not null default 0, largest_file_size integer not null default 0)
CREATE TRIGGER "client_pkg_upload_items/increase_pkg_size" AFTER INSERT ON client_pkg_upload_items BEGIN INSERT OR IGNORE INTO client_pkg_upload_sizes VALUES (new.item_rowid, 0, 0); UPDATE client_pkg_upload_sizes SET aggregate_size = aggregate_size + COALESCE(new.size, 0), largest_file_size = MAX(COALESCE(new.size,0), largest_file_size) WHERE item_rowid = new.item_rowid; END
CREATE TRIGGER "client_pkg_upload_items/update_pkg_size" AFTER UPDATE OF size ON client_pkg_upload_items BEGIN UPDATE client_pkg_upload_sizes SET aggregate_size = aggregate_size - COALESCE(old.size, 0) + COALESCE(new.size, 0), largest_file_size = MAX(COALESCE(new.size,0), largest_file_size) WHERE item_rowid = new.item_rowid; END
CREATE TRIGGER "client_pkg_upload_items/reduce_pkg_size"  BEFORE DELETE ON client_pkg_upload_items BEGIN UPDATE client_pkg_upload_sizes SET aggregate_size = aggregate_size - COALESCE(old.size, 0) WHERE item_rowid = old.item_rowid; END
DROP TRIGGER IF EXISTS insert_version_sum_size
DROP TRIGGER IF EXISTS update_version_sum_size
DROP TRIGGER IF EXISTS delete_version_sum_size
DROP TABLE IF EXISTS client_reader_throttle
DROP TABLE IF EXISTS mark_children_lost_progress
DROP TABLE IF EXISTS client_pkg_items
DROP TABLE IF EXISTS client_pkg_sizes
DROP TABLE IF EXISTS client_document_access
DROP TABLE IF EXISTS aggregates
DELETE FROM client_uploads
DELETE FROM client_sync_up
ALTER TABLE client_items ADD COLUMN item_local_change_count integer
ALTER TABLE client_items ADD COLUMN item_old_version_identifier text
ALTER TABLE client_items ADD COLUMN version_local_change_count integer
ALTER TABLE client_items ADD COLUMN version_old_version_identifier text
CREATE INDEX "client_items/next_propagation" ON client_items(item_processing_stamp) WHERE item_processing_stamp IS NOT NULL
CREATE INDEX "client_items/item_notifs_rank" ON client_items (item_notifs_rank)
CREATE INDEX "client_items/items_needing_sync" ON client_items(item_localsyncupstate, zone_rowid) WHERE item_localsyncupstate = 3 OR item_localsyncupstate = 4
CREATE INDEX "client_items/lost_file_id" ON client_items(item_localsyncupstate) WHERE item_localsyncupstate = 8
CREATE INDEX "client_items/item_filename_path_nocase" ON client_items (item_parent_zone_rowid, item_parent_id, item_filename COLLATE NOCASE) WHERE item_bouncedname IS NULL
CREATE INDEX "client_items/item_parent_id__item_bouncedname_nocase" ON client_items (item_parent_zone_rowid, item_parent_id, item_bouncedname COLLATE NOCASE) WHERE item_bouncedname IS NOT NULL
CREATE INDEX "client_sync_up/sync_state_index" ON client_sync_up (zone_rowid, throttle_state) WHERE throttle_state != 0
CREATE INDEX "client_sync_up/throttle_id" ON client_sync_up(throttle_id) WHERE throttle_state != 0
SELECT 1 from client_items LIMIT 1
SELECT * from client_state
kBRCFPFSMigrationStateKey
SELECT 1 FROM client_items WHERE item_state in (0, -1)  AND NOT EXISTS (SELECT 1 FROM app_libraries WHERE client_items.app_library_rowid = app_libraries.rowid)
UPDATE client_items SET item_scope = 2 WHERE zone_rowid = %@ AND item_scope = 0 AND item_state != -2
UPDATE client_items SET item_scope = 2 WHERE zone_rowid = %@ AND item_scope = 0 AND migration_is_parented_or_equal_to_old_doc_id(%p, item_parent_id) AND item_state != -2
UPDATE client_items SET item_scope = 1 WHERE zone_rowid = %@ AND item_scope = 0 AND NOT migration_is_parented_or_equal_to_old_doc_id(%p, item_parent_id) AND item_state != -2
UPDATE server_items SET item_filename = call_block(%@, item_filename) WHERE item_filename != call_block(%@, item_filename)
UPDATE server_items SET item_origname = call_block(%@, item_origname) WHERE item_origname IS NOT NULL AND item_origname != call_block(%@, item_origname)
UPDATE server_items SET version_name = call_block(%@, version_name) WHERE version_name IS NOT NULL AND version_name != call_block(%@, version_name)
UPDATE client_items SET item_filename = call_block(%@, item_filename) WHERE item_filename != call_block(%@, item_filename)
UPDATE client_items SET version_name = call_block(%@, version_name) WHERE version_name IS NOT NULL AND version_name != call_block(%@, version_name)
UPDATE client_items SET item_localname = call_block(%@, item_localname) WHERE item_localname IS NOT NULL AND item_localname != call_block(%@, item_localname)
UPDATE client_items SET item_bouncedname = call_block(%@, item_bouncedname) WHERE item_bouncedname IS NOT NULL AND item_bouncedname != call_block(%@, item_bouncedname)
UPDATE client_document_access     SET evictable = call_block(%@, access_time, (SELECT version_mtime FROM client_items AS ci WHERE ci.rowid = item_rowid))  WHERE evictable > 0
UPDATE client_uploads SET throttle_state = 1 WHERE throttle_id in (SELECT throttle_id FROM client_items, client_uploads WHERE client_items.rowid = client_uploads.throttle_id AND item_localsyncupstate = 3)
INSERT INTO client_uploads (throttle_id, zone_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, item_id, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, upload_error, upload_priority, upload_request_stamp, app_library_rowid) SELECT client_items.rowid, zone_rowid, 1, 0, 0, 0, 0, item_id, "_prepare", version_size + version_thumb_size, NULL, NULL, NULL, NULL, -1, 0, app_library_rowid FROM client_items WHERE item_type IN (1, 6) AND item_localsyncupstate = 3 AND rowid NOT IN (SELECT throttle_id from client_uploads)
UPDATE client_downloads SET throttle_state = 1 WHERE throttle_id in ( SELECT throttle_id FROM client_items, client_downloads WHERE client_items.rowid = client_downloads.throttle_id AND item_type IN (1, 2, 6, 7) AND desired_version is not NULL AND call_block(%@, desired_version))
INSERT INTO client_downloads (throttle_id, zone_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, item_id, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, download_kind, download_etag, download_priority, download_request_stamp, download_error, unit_count_completed, app_library_rowid) SELECT client_items.rowid, client_items.zone_rowid, 1, 0, 0, 0, 0, item_id, call_block(%@, app_library_owner, app_library_name), call_block(%@, desired_version), NULL, NULL, NULL, 0, call_block(%@, desired_version), -1, 0, NULL, 0, app_library_rowid FROM client_items, app_libraries, client_zones WHERE client_items.app_library_rowid = app_libraries.rowid AND app_libraries.zone_rowid = client_zones.rowid AND item_type IN (1, 2, 6, 7) AND desired_version is not NULL AND client_items.rowid NOT IN (SELECT throttle_id from client_downloads) AND call_block(%@, desired_version)
INSERT OR REPLACE INTO client_uploads  (throttle_id, zone_rowid, app_library_rowid, transfer_size, throttle_state, transfer_queue) SELECT rowid, zone_rowid, app_library_rowid, version_size + version_thumb_size, 1, %s FROM client_items WHERE item_localsyncupstate == 3 AND rowid NOT IN (SELECT throttle_id FROM client_uploads WHERE throttle_state != 0)
child-propagation
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/fpfs/import/BRCFSImporter.m
-[BRCFSImporter initWithAccountSession:]_block_invoke
unreachable: Can't import br aliases anymore %@
-[BRCFSImporter _createBaseItemWithImportObject:error:]
unreachable: Import object of unknown type %@
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE item_doc_id = %u   AND +item_state = 0   AND +item_type IN (1, 2, 8, 6, 7)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items  WHERE item_file_id = %lld    AND item_state = 0
-[BRCFSImporter capabilityToMoveItem:toNewParentItem:error:]
label
BouncingCountOnSameType
BouncingCountFrom%@To%@
UPDATE ciconia_migration_info SET value = value + 1 WHERE key = %@
-[BRCFSImporter _findCollidingItemWithTemplateItem:parentItem:logicalName:error:]
-[BRCFSImporter _handleCollisionIfNecessaryWithTemplateItem:parentItem:logicalName:fileURL:options:error:]
-[BRCFSImporter _locateMatchingItemForTemplateItem:parentItem:logicalName:options:fileURL:fields:shouldReject:additionalAttrs:error:]
-[BRCFSImporter _createAndInsertNewItemWithImportObject:parentItem:fields:templateItem:fileURL:options:additionalAttrs:error:]_block_invoke
-[BRCFSImporter _createAndInsertNewItemWithImportObject:parentItem:fields:templateItem:fileURL:options:additionalAttrs:error:]
symlink-target
-[BRCFSImporter importNewItemAtURL:logicalName:parentItem:templateItem:fields:options:additionalItemAttributes:error:]
-[BRCFSImporter _getOrCreateTrashItemInAppLibrary:error:]
-[BRCFSImporter _trashItem:error:]
-[BRCFSImporter _untrashItem:toParentFileObjectID:error:]
-[BRCFSImporter _processParentAndFilenameIfNecessaryWithLocalItem:changedFields:templateItem:error:]_block_invoke
B40@?0@"NSString"8@"BRCClientZone"16@"BRCItemID"24@"BRCDirectoryItem"32
parentItemIdentifier
-[BRCFSImporter _processParentAndFilenameIfNecessaryWithLocalItem:changedFields:templateItem:error:]
-[BRCFSImporter changeItem:baseVersion:changedFields:newValues:contents:options:additionalAttrs:clearCKInfoOnSyncUp:error:]
-[BRCClientZone init]
zone-tracker
client-zone/zone-creation
server-stitching-throttle
syncUpBackoffRatio
osNameRequiredToSync
syncDownGroup
Creating
Loading
sync
crash-recovery
ipc-com.apple.finder
CKErrorInternalContainerReset
CKErrorUserDeleteZone
CKErrorZoneNotFound
CKErrorSharedZoneNotFound
zone became healthy
start-scan
testing
SELECT COUNT(1) FROM client_items WHERE item_localsyncupstate IN(2, 3, 4) AND zone_rowid = %@  AND call_block(%p, version_upload_error, item_id)
SELECT SUM(version_size) FROM client_items WHERE item_localsyncupstate IN (2, 3, 4)   AND zone_rowid = %@   AND call_block(%p, version_upload_error)
<%@[%@] %@ {client:%@ server:%@ sync:%@ %@ rid:%llu}>
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE (item_parent_zone_rowid = %@ OR zone_rowid = %@) AND item_doc_id = %u   AND +item_state IN (0, -1)   AND +item_type IN (1, 2, 8, 6, 7)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items  WHERE (item_parent_zone_rowid = %@ OR zone_rowid = %@)     AND item_file_id = %lld    AND item_state IN (0, -1)
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE item_parent_id = %@ AND item_filename = %@ AND +zone_rowid = %@
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE (item_parent_id = %@ AND item_filename = %@ AND item_state != -2 AND item_parent_zone_rowid = %@        AND item_bouncedname IS NULL)   OR  (item_parent_id = %@ AND item_bouncedname = %@ AND item_state != -2 AND item_parent_zone_rowid = %@)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE (item_parent_id = %@ AND item_filename = %@ AND item_state != -2 AND item_parent_zone_rowid = %@        AND item_localname IS NULL)   OR  (item_parent_id = %@ AND item_localname = %@ AND item_state != -2 AND item_parent_zone_rowid = %@)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE ( item_parent_id = %@ AND item_filename = %@ AND +item_state = -2 AND item_parent_zone_rowid = %@ AND item_bouncedname IS NULL) OR ( item_parent_id = %@ AND item_bouncedname = %@ AND +item_state = -2 AND item_parent_zone_rowid = %@)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE ( item_parent_id = %@ AND item_filename = %@ AND +item_state != -2 AND +item_type IN (2, 7, 8) AND item_parent_zone_rowid = %@ AND item_bouncedname IS NULL) OR ( item_parent_id = %@ AND item_bouncedname = %@ AND +item_state != -2 AND +item_type IN (2, 7, 8) AND item_parent_zone_rowid = %@)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE ( item_parent_id = %@ AND item_localname = %@ AND +item_state != -2 AND +item_type IN (2, 7, 8) AND item_parent_zone_rowid = %@)
AND item_id != %@
SELECT 1 FROM client_items WHERE ((item_parent_id = %@ AND item_filename = %@ COLLATE NOCASE AND item_parent_zone_rowid = %@ AND item_bouncedname IS NULL) OR (item_parent_id = %@ AND item_bouncedname = %@ COLLATE NOCASE AND item_parent_zone_rowid = %@)) AND item_state != 1 %@ LIMIT 1
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE zone_rowid = %@
SELECT 1 FROM client_items WHERE zone_rowid = %@ LIMIT 1
SELECT 1 FROM client_items AS li INNER JOIN client_sync_up AS su ON su.throttle_id = li.rowid WHERE su.zone_rowid = %@   AND (su.in_flight_diffs BETWEEN -9223372036854775808 AND 9223372036854775807)   AND su.throttle_state != 0 LIMIT 1
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE zone_rowid = %@    AND item_type IN (1, 6)    AND (item_localsyncupstate = 2 OR         item_localsyncupstate = 3 OR         item_localsyncupstate = 4)   AND item_scope = 2
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE zone_rowid = %@    AND rowid > %llu   AND item_type = 2 ORDER BY rowid LIMIT %lu
v32@?0@"BRCClientZone"8@"NSArray"16@"NSError"24
SELECT item_stat_ckinfo, item_local_change_count FROM client_items WHERE zone_rowid = %@ AND item_id = %@
UPDATE client_items SET item_stat_ckinfo = %@, item_local_change_count = 0, item_old_version_identifier = %@  WHERE zone_rowid = %@ AND item_id = %@
SELECT version_ckinfo, version_local_change_count FROM client_items WHERE zone_rowid = %@ AND item_id = %@
UPDATE client_items SET version_ckinfo = %@, version_device = %@,  version_local_change_count = 0, version_old_version_identifier = %@ WHERE zone_rowid = %@ AND item_id = %@
UPDATE client_items SET version_ckinfo = %@, version_local_change_count = 0, version_old_version_identifier = %@ WHERE zone_rowid = %@ AND item_id = %@
UPDATE client_items SET item_side_car_ckinfo = %@ WHERE zone_rowid = %@ AND item_id = %@
(successful)
v32@?0@"CKRecordID"8@"NSError"16^B24
defaultSyncThrottle
v32@?0@"BRCItemID"8@"NSMutableArray"16^B24
v32@?0@"NSString"8@?<v@?@"BRCItemID">16^B24
SyncDown
<rdar://problem/26073809> _fixupMissingCrossMovedItems causes slow SQL assertions
UPDATE client_items SET item_localsyncupstate = 1 WHERE zone_rowid = %@   AND item_localsyncupstate = 0   AND (item_local_diffs & 0x2000000000000000) != 0   AND NOT EXISTS (SELECT * FROM server_items WHERE server_items.item_id = client_items.item_id AND zone_rowid = %@)
q24@?0@"_BRCOperation<BRCOperationSubclass>"8@"_BRCOperation<BRCOperationSubclass>"16
UPDATE client_items SET item_local_diffs = (item_local_diffs & (~%lld)) WHERE zone_rowid = %@ AND (item_local_diffs & %lld) != 0
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE zone_rowid = %@ AND item_type in (1, 2, 6, 7)
UPDATE client_uploads SET zone_rowid = %@ WHERE throttle_id = %lld
UPDATE client_downloads SET zone_rowid = %@ WHERE throttle_id = %lld
DELETE FROM client_unapplied_table WHERE zone_rowid = %@
UPDATE client_sync_up SET zone_rowid = %@ WHERE zone_rowid = %@
DELETE FROM client_uploads WHERE zone_rowid = %@
DELETE FROM client_downloads WHERE zone_rowid = %@
DELETE FROM client_items WHERE zone_rowid = %@ AND item_type = 3
UPDATE client_items SET zone_rowid = %@,   item_stat_ckinfo = call_block(%p, item_stat_ckinfo),   version_ckinfo   = call_block(%p, version_ckinfo),   item_local_diffs = (item_local_diffs | %lld)  WHERE zone_rowid = %@
UPDATE client_items SET item_parent_zone_rowid = %@ WHERE item_parent_zone_rowid = %@
UPDATE client_items SET version_old_zone_rowid = NULL, version_old_zone_item_id = NULL WHERE version_old_zone_rowid = %@
UPDATE client_items SET version_old_zone_rowid = %@ WHERE version_old_zone_rowid = %@
DELETE FROM client_zones WHERE rowid = %@
non-
list
SELECT item_type FROM client_items WHERE item_id = %@ AND zone_rowid = %@
list recursively
fetch parent chain
locate record
fetch recents and favorites
Client Truth Unclean Items:
--------------------------
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp     FROM client_items    WHERE item_parent_id = %@ ORDER BY item_filename
zone:%@ 
 upload{%@}
 rejected{%@}
 downloader{%@}
 sync-up{%@}
client items
scheduling sync contexts
========================
+ %@
-[BRCClientZone dumpTablesToContext:includeAllItems:error:]
implement this in subclass
-[BRCClientZone _resetItemsTable]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/containers/BRCClientZone.m
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE item_parent_zone_rowid = %@ AND item_parent_zone_rowid != zone_rowid
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE item_rank = %lld AND zone_rowid = %@
SELECT item_rank FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE rowid = %lld
SELECT child_count FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT visible_child_count FROM client_items WHERE item_id = %@ AND zone_rowid = %@
SELECT quota_used FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT COUNT(si.item_id) FROM server_items AS si LEFT JOIN client_unapplied_table AS cu ON si.item_rank = cu.throttle_id WHERE si.item_parent_id = %@ AND si.zone_rowid = %@ AND ((si.item_filename LIKE '.%%') OR (si.item_type = 3 AND cu.throttle_state = 24))
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE rowid = %lld AND zone_rowid = %@
SELECT item_id FROM client_items  WHERE item_file_id = %lld    AND +item_type IN (0, 9, 10, 4)    AND item_state IN (0, -1)    AND zone_rowid = %@
SELECT item_type FROM client_items WHERE item_id = %@ AND zone_rowid = %@ LIMIT 1
must implement in subclass
-[BRCClientZone validateItemsLoggingToFile:db:]
-[BRCClientZone validateStructureLoggingToFile:db:]
v16@?0@"BRCLocalItem"8
 WITH RECURSIVE item_parents (item_id, zone_rowid, height) AS (     SELECT item_parent_id, zone_rowid, 0 FROM server_items      WHERE item_id = %@ AND zone_rowid = %@  UNION ALL     SELECT si.item_parent_id, si.zone_rowid, p.height + 1 FROM server_items AS si  INNER JOIN item_parents AS p USING (item_id, zone_rowid)      LIMIT %u ) SELECT ip.item_id, ip.zone_rowid FROM item_parents AS ip WHERE NOT EXISTS (SELECT 1 FROM client_items AS ci WHERE ip.item_id = ci.item_id   AND ip.zone_rowid = ci.zone_rowid) AND NOT item_id_is_root(ip.item_id) ORDER BY ip.height DESC
 WITH RECURSIVE item_parents (item_parent_id, zone_rowid, height) AS (     SELECT item_parent_id, zone_rowid, 0 FROM server_items      WHERE item_id = %@ AND zone_rowid = %@  UNION ALL     SELECT si.item_parent_id, si.zone_rowid, p.height + 1 FROM server_items AS si  INNER JOIN item_parents AS p where (si.item_id = p.item_parent_id)  LIMIT %u ) SELECT item_parent_id FROM item_parents ORDER BY height DESC
fail
v16@?0B8B12
%@{needs:(count:%lld, size:%@) done:(count:%lld, size:%@)} 
%@{needs:%lld done:%lld} 
SELECT dir_faults_count, faults_count,needs_faulting_count, uploaded_size,needs_upload_size, uploaded_count,needs_upload_count, downloaded_size,needs_download_size, downloaded_count,needs_download_count, dl_unstaged_count,needs_dl_unstage_count, synced_up_count,needs_sync_up_count, over_quota_count, shared_by_me_count, shared_to_me_count, needs_delete_doc_count FROM item_recursive_properties  WHERE item_rowid = %llu
dir-faults:%lld 
faults:%lld 
needs-faulting:%lld 
download
unstage
sync-up
quota:%lld 
sbmc:%lld 
stmc:%lld 
nd:%lld 
%*s> %@
SELECT ci.rowid, ci.zone_rowid, ci.item_id, ci.item_creator_id, ci.item_sharing_options, ci.item_side_car_ckinfo, ci.item_parent_zone_rowid, ci.item_localsyncupstate, ci.item_local_diffs, ci.item_notifs_rank, ci.app_library_rowid, ci.item_min_supported_os_rowid, ci.item_user_visible, ci.item_stat_ckinfo, ci.item_state, ci.item_type, ci.item_mode, ci.item_birthtime, ci.item_lastusedtime, ci.item_favoriterank,ci.item_parent_id, ci.item_filename, ci.item_hidden_ext, ci.item_finder_tags, ci.item_xattr_signature, ci.item_trash_put_back_path, ci.item_trash_put_back_parent_id, ci.item_alias_target, ci.item_creator, ci.item_processing_stamp, ci.item_staged_file_id, ci.item_staged_generation, ci.item_bouncedname, ci.item_scope, ci.item_local_change_count, ci.item_old_version_identifier, ci.version_name, ci.version_ckinfo, ci.version_mtime, ci.version_size, ci.version_thumb_size, ci.version_thumb_signature, ci.version_content_signature, ci.version_xattr_signature, ci.version_edited_since_shared, ci.version_device, ci.version_conflict_loser_etags, ci.version_quarantine_info, ci.version_uploaded_assets, ci.version_upload_error, ci.version_old_zone_item_id, ci.version_old_zone_rowid, ci.version_local_change_count, ci.version_old_version_identifier, ci.desired_version, ci.item_live_conflict_loser_etags, ci.item_file_id, ci.item_generation, ci.version_block_sync_until_bundle_id, ci.version_block_sync_until_timestamp     FROM client_items AS ci     LEFT JOIN item_recursive_properties AS rp      ON ci.rowid = rp.item_rowid    WHERE ci.item_parent_id = %@ AND ci.item_parent_zone_rowid = %@ ORDER BY (rp.needs_sync_up_count + rp.needs_upload_count + rp.needs_download_count + rp.needs_delete_doc_count + rp.needs_faulting_count) DESC
%*s%@%@
%*s>%@
B28@?0@"BRCItemGlobalID"8i16^@20
SELECT COUNT(*) FROM client_items WHERE zone_rowid = %@
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE zone_rowid = %@ AND NOT indexset_contains(%p, rowid)
pending activity %@
(greedy)
================
+ downloads:%@
+ downloads: not dumping
+ uploads:  %@
+ uploads:  not dumping
[r:%@]: %@
v32@?0@"NSNumber"8@"NSOperation"16^B24
sync bubble waiting
+ apply:    %@
+ reader:   not dumping
+ apply:    not dumping
+ list:
%@:%@
v32@?0@"BRCItemID"8@"BRCListDirectoryContentsOperation"16^B24
+ rec-list:
v32@?0@"BRCItemID"8@"BRCRecursiveListDirectoryContentsOperation"16^B24
+ fetch-parent:
v32@?0@"BRCItemID"8@"BRCFetchParentChainOperation"16^B24
+ locate-record:
v32@?0@"CKRecordID"8@"BRCLocateRecordOperation"16^B24
+ fetch-recents:
because of item 
for budget 
 [sync-up throttled %@(next-try:in %.01fs)]
 [sync-up waiting to be scheduled]
 [sync-up running]
 [sync-up waiting for sync down]
 [sync-down throttled (next-try:in %.01fs)]
 [sync-down waiting to be scheduled]
 [scheduling: %@]
+ sync:      %@
  up:        %@
  up-budget: %@
  up-error:  %@
  dn-error   %@
  operation: %@
+ migration: %@
+ process-removal: %@
-[BRCClientZone _removeItemAndProcessForCrossZoneMove:]
v24@?0@"BRCItemGlobalID"8^B16
needs-sync
is-resetting
has-broken-structure
blocked-app-uninstalled
needs-upgrade
wants-data-unlinked
;%llu
Implement %@ in a subclass.
+[BRCPersistedState loadFromClientStateInSession:options:]
com.apple.clouddocs.internal.fpfs-extension
-[BRCXPCRegularIPCsClient(FPFSAdditions) getQueryItemForBRFileObjectID:reply:]
-[BRCXPCRegularIPCsClient(FPFSAdditions) createItemBasedOnTemplate:fields:contents:options:additionalItemAttributes:completionHandler:]
-[BRCXPCRegularIPCsClient(FPFSAdditions) startDownloadFileObject:options:reply:]
-[BRCXPCRegularIPCsClient(FPFSAdditions) deleteItemWithIdentifier:baseVersion:options:completionHandler:]
 recursively
-[BRCXPCRegularIPCsClient(FPFSAdditions) modifyItem:baseVersion:changedFields:contents:options:additionalAttrs:completionHandler:]
-[BRCXPCRegularIPCsClient(FPFSAdditions) reimport:]
-[BRCXPCRegularIPCsClient(FPFSAdditions) enumerateTrashItemsFromRank:limit:completion:]
-[BRCXPCRegularIPCsClient(FPFSAdditions) notifyReimportCompleted:]
-[BRCXPCRegularIPCsClient(FPFSAdditions) boostFilePresenterForItemIdentifier:reply:]
v24@?0@"BRCLocalItem"8@"NSError"16
-[BRCXPCRegularIPCsClient(FPFSAdditions) capabilityWhenTryingToReparentItemIdentifier:toNewParent:reply:]
-[BRCXPCRegularIPCsClient(FPFSAdditions) capabilityWhenTryingToReparentItemIdentifier:toNewParent:reply:]_block_invoke
-[BRCXPCRegularIPCsClient(FPFSAdditions) getBookmarkDataForItemIdentifier:onlyAllowItemKnowByServer:allowAccessByBundleID:documentID:isDirectory:reply:]
Publish failed but no error was set
v32@?0@"NSURL"8@"NSDate"16@"NSError"24
-[BRCXPCRegularIPCsClient(FPFSAdditions) getPublishedURLForItemIdentifier:forStreaming:requestedTTL:reply:]
-[BRCXPCRegularIPCsClient(FPFSAdditions) getAttributeValues:forItemIdentifier:reply:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/fpfs/item-categories/BRCLocalItem+FPFSAdditions.m
-[BRCLocalItem(FPFSAdditions) updateWithLogicalName:newParent:]
 WITH RECURSIVE item_parents (item_id, zone_rowid, item_filename) AS (     SELECT item_parent_id, item_parent_zone_rowid, item_filename FROM client_items      WHERE item_id = %@ AND zone_rowid = %@  UNION ALL     SELECT li.item_parent_id, li.item_parent_zone_rowid, li.item_filename FROM client_items AS li  INNER JOIN item_parents AS p USING (item_id, zone_rowid)      LIMIT %u ) SELECT item_filename FROM item_parents
unreachable: nobody should import an item from a fault
-[BRCLocalStatInfo(FPFSAdditions) initWithImportObject:error:]
unreachable: nobody should import an item from a BR Alias
unreachable: Unexpected import object %@
value
-[BRFieldXattr writeTo:]
BRFieldXattr.m
nil != self->_name
nil != self->_value
0123456789abcdef
events
problemReport
zoneHealthState
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE item_filename = %@ AND item_type = 3 AND zone_rowid = %@
+ delete-content: %@
     (last-error: %@)
+ barriers:  %ld
+ pcs chain operation:
itemID %s %s
SQL error: %s
client truth structure validation (%s)
=================================
DROP TABLE IF EXISTS items_checks
CREATE TABLE items_checks (item_id blob PRIMARY KEY, depth integer not null)
CREATE INDEX items_checks__depth__idx ON items_checks (depth)
INSERT INTO items_checks (item_id, depth) VALUES (%@, 0)
INSERT INTO items_checks    SELECT c.item_id, %lld      FROM items_checks AS p INNER JOIN client_items AS c ON (p.item_id = c.item_parent_id)     WHERE zone_rowid = %@ AND p.depth = %lld
SELECT item_id FROM client_items WHERE zone_rowid = %@   AND item_id NOT IN(SELECT item_id FROM items_checks)
is an orphan or part of a cycle
SELECT c.item_id      FROM client_items AS c INNER JOIN client_items AS p ON (c.item_parent_id = p.item_id)     WHERE c.item_state != 1 AND p.item_state = 1       AND c.zone_rowid = %@ AND p.zone_rowid = %@
is a live item parented to a tombstone
SELECT c.item_id      FROM client_items AS c INNER JOIN client_items AS p ON (c.item_parent_id = p.item_id)     WHERE p.item_type IN (1, 2, 8, 5, 6, 7)       AND c.zone_rowid = %@ AND p.zone_rowid = %@
is parented to a document
SELECT o.item_id       FROM client_items AS o  WHERE zone_rowid = %@ AND EXISTS ( SELECT 1 FROM client_items AS n WHERE  (  (    n.item_parent_id = o.item_parent_id      AND item_filename = IFNULL(o.item_localname, o.item_filename)      AND +item_localname IS NULL)  OR (    n.item_parent_id = o.item_parent_id      AND item_localname = IFNULL(o.item_localname, o.item_filename))  )  AND +n.item_id != o.item_id  AND n.zone_rowid = %@)
local items checks (%s)
===================
BRCHasAPFSSnapshot
_BRCDocumentIDKey
_BRCProgressGroupKey
GLOBAL_PROGRESS_UPLOADING_CAPITALIZE_DESCRIPTION
GLOBAL_PROGRESS_UPLOADS_WAITING_DESCRIPTION
GLOBAL_PROGRESS_DOWNLOADING_CAPITALIZE_DESCRIPTION
GLOBAL_PROGRESS_DOWNLOADS_WAITING_DESCRIPTION
GLOBAL_PROGRESS_ADDITIONAL_DESCRIPTION
 d:'%@%@'
<%@:%p c:%@ p:%lld(%+lld)/%lld(%+lld) [%.3f%%]%@>
 ooq:%lu>
com.apple.bird.global-progress
com.apple.bird.global-progress.pacer
%@ = %@;
.. truncated ..
global progress {%@ d:'%@%@'}
global progress {none}
upload %@
upload {none}
upload version sizes (%lu):
upload progresses (%lu): {
v32@?0@"NSNumber"8@"NSProgress"16^B24
upload progresses (0): {}
upload pending quota (%lu): {%@}
upload pending quota (0): {}
download %@
download {none}
download version sizes (%lu):
download progresses (%lu): {
download progresses (0): {}
download resume unit count (%lu): %@
completedUnitCount
initial sync-down
@sum.longLongValue
taking-over
session-destroyed
reparent
fetch-parent/
%K == %@ AND %K == %@
recordIds
FetchAncestors
unreachable: Couldn't allocate ranks when fetching parent chain
BRCFetchParentChainOperation
pcs chained 
half chained 
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE ((item_parent_id = %@ AND item_filename = %@ COLLATE NOCASE AND item_parent_zone_rowid = %@        AND item_bouncedname IS NULL)   OR  (item_parent_id = %@ AND item_bouncedname = %@ COLLATE NOCASE AND item_parent_zone_rowid = %@))  AND item_state != 1  %@ LIMIT 1
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE (item_parent_id = %@ AND item_filename = %@ COLLATE NOCASE AND item_parent_zone_rowid = %@        AND item_bouncedname IS NULL)   OR  (item_parent_id = %@ AND item_bouncedname = %@ COLLATE NOCASE AND item_parent_zone_rowid = %@)
clientRanks
nextNotifRank:%llu nextPackageItemRank:%llu
nextItemRowID
nextNotifRank
nextPackageItemRank
telemetryRowID
telemetryToken
metrics
directoryMtime
pcsChainState
serverZone
item %s is a directory with a version
rk:%lld 
pcs:c 
pcs:u 
pcs:h 
pcs:s 
ppm:%@ 
st{%@}
 alias-st{%@}
 sm{%@}
 target:%@
  itemPath:          %@
  rootPath:          %@
  parentID:          %@
  matchByPath:       %@
  matchByFileID:     %@
  matchByDocumentID: %@
  packageItem:       %@
  serverItemByPath:  %@
unfetched
[%llu]
{%llu}
invalid library rowid
+[BRCItemID documentsItemIDWithAppLibraryRowID:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/items/BRCItemID.m
-[BRCItemID _initAsLibraryRootWithAppLibraryRowID:]
can't initialize shared zone root with invalid zone rowid %@
-[BRCItemID _initAsZoneRootWithZoneRowID:]
can't initialize document with invalid library rowid %@
-[BRCItemID initAsDocumentsWithAppLibraryRowID:]
root_object
client_items
server_zones
client_zones
SELECT rowid FROM %@ WHERE zone_owner != %@
UPDATE %@ SET item_id = call_block(%@, item_id), item_parent_id = %@ WHERE zone_rowid = %@
UPDATE %@ SET item_id = call_block(%@, item_id, zone_rowid) WHERE item_type = 3
UPDATE %@ SET item_parent_id = call_block(%@, zone_rowid) WHERE item_parent_id = "root"
UPDATE %@ SET item_parent_id = call_block(%@, zone_rowid) WHERE item_parent_id = "documents"
UPDATE %@ SET item_id = call_block(%@, zone_rowid) WHERE item_id = "documents"
UPDATE client_unapplied_table SET item_id = call_block(%@, zone_rowid) WHERE item_id = "documents"
UPDATE %@ SET item_id = call_block(%@, item_id) WHERE item_type = 3
UPDATE %@ SET item_id = call_block(%@, item_id), item_parent_id = call_block(%@, item_parent_id) WHERE zone_rowid = %@
+[BRCReimporterUtil reimportItemsBelowItemWithIdentifier:error:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/fpfs/item-categories/BRCPackageItem+FPFSAdditions.m
+[BRCPackageItem(DatabaseMethods) updateSignaturesForFilesInItem:fromCKPackage:error:]
-[BRCPackageItem(DatabaseMethods) saveToDBWithSession:]
+[BRCPackageItem(DatabaseMethods) dumpSession:toContext:db:error:]
unkown-token-version:%d (%@)
current
<%@,%@>
beginning
unkown-token-size:%lu (%@)
-[BRCPackageManifestReader init]
unreachable: No reader to stage package at %s
unreachable: Package has been corrupted on the serverAsking for asset index out of bounds %lu vs %lu in package: %@
unreachable: Package has been corrupted in the cloudAsking for asset index out of bounds %lu vs %lu in package: %@
unreachable: Can't find item at index %ld
unreachable: xattr index is out of bounds %ld of total %ld
unreachable: Can't find xattr at index %ld
Can't load xattr
unknown error
version: 1
NULL path for item: %@
-[BRCPackageChecksummer addItem:error:]
NULL path for item symlink: %@
com.apple.bird.transmogrifier
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/foundation/BRCItemTransmogrifier.m
-[BRCItemTransmogrifier _finishDirectoryToPackageTransmogrification:relpath:]
-[BRCItemTransmogrifier scheduleDirectoryToPackageTransmogrification:absolutePath:]
brtest
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items      WHERE item_scope = 3        AND item_notifs_rank >= %lld        AND item_user_visible = 1   ORDER BY item_notifs_rank ASC LIMIT %lld
kBRCFPFSMigrationOffsetKey
kBRCFPFSMigrationLostItemCountKey
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/fpfs/support-categories/BRCAccountSession+FPFSAdditions.m
-[BRCAccountSession(FPFSAdditions) markMigrationToFPFSComplete]
@"NSString"16@?0@"NSString"8
q24@?0@8@16
-[BRCAccountSession(BRCContainerFindByName) clientZonesMatchingSearchString:error:]
-[BRCAccountSession(BRCContainerFindByName) singleClientZoneMatchingSearchString:error:]
Too many containers matching '%@': {%@}
-[BRCAccountSession(BRCContainerFindByName) appLibrariesMatchingSearchString:error:]
-[BRCAccountSession(BRCContainerFindByName) singleAppLibraryMatchingSearchString:error:]
Library/Application Support/CloudDocs/session/db/client.db
Library/Application Support/CloudDocs/
document-shares
folder-shares
folder-share-aliases
migration-query
-[BRCMigrationQueryOperation _saveFetchedRecords:cursor:error:]_block_invoke
-[BRCMigrationQueryOperation _saveFetchedRecords:cursor:error:]
-[BRCMigrationQueryOperation _updatedContinuationCursor:fetchedRecords:error:]_block_invoke_2
brPrefix
RecordPrefixList
v24@?0@"CKOperation"8@"CKRecord"16
%K != NULL
v24@?0@"_BRCOperation<BRCOperationSubclass>"8@"NSError"16
migration key
sharing.fetch-user-record-id
unreachable: no record and no error
provide-request-queue
coordinated-read
recursive-download
document-download
v16@?0@"BRCUserDownloadEvent"8
@"NSError"16@?0@"BRCLocalItem"8
recursive-provide
flat-provide
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/fs/BRCFileProvidingRequestOperation.m
-[BRCFileProvidingRequestOperation _provideURL]
cancellation
scheduler is nil
-[BRCTransferStream initWithSyncContext:name:scheduler:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/sync/transfers/BRCTransferStream.m
previousAttempts
previousFailedAttempts
areMigratedFaultsBelowThreshold
areNonFaultAllMigrated
typesOfMigratedItemsMask
expectedMigratedItemsCount
itemsNotMigratedCount
typesOfNonMigratedItemsMask
materialisedOnCDItemsCount
materialisedOnFPFSItemsCount
diskSpaceLeft
accountQuotaUsage
isAccountDataSeparated
ciconiaVersion
previousReleasesSuccessRate
cloningTime
importTime
manuallyTriggeredMigration
treatmentId
experimentId
itemsNotFoundInDB
itemsChangedDuringCloning
unexpectedCreations
ignoredContentProtectedItems
packagesWithoutBundleBit
totalItemCount
rampId
bouncedItemsCount
bouncedItemsMatrix
xattrs
 target:'%@'
INSERT INTO client_items ( rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name) VALUES ( %lld, %@, %@, %@, %ld, %@, %@, %d, %lld, %lld, %@, %@, %d, %@, %d, %d, %d, %lld, %lld, %lld, %@, %@, %d, %@, %@, %@, %@, %@, %@, %@, %@, %u, %@, %d, %llu, %@, %@)
UPDATE client_items SET item_id = %@, item_creator_id = %@, item_sharing_options = %ld, item_side_car_ckinfo = %@, item_parent_zone_rowid = %@, item_localsyncupstate = %d, item_local_diffs = %llu, item_notifs_rank = %lld, app_library_rowid = %@, item_min_supported_os_rowid = %@, item_user_visible = %d, item_stat_ckinfo = %@, item_state = %d, item_type = %d, item_mode = %d, item_birthtime = %lld, item_lastusedtime = %lld, item_favoriterank = %lld, item_parent_id = %@, item_filename = %@, item_hidden_ext = %d, item_finder_tags = %@, item_xattr_signature = %@, item_trash_put_back_path = %@, item_trash_put_back_parent_id = %@, item_alias_target = %@, item_creator = %@, item_processing_stamp = %@, item_staged_file_id = %@, item_staged_generation = %u, item_bouncedname = %@, item_scope = %d,item_local_change_count = %llu, item_old_version_identifier = %@, version_name = %@  WHERE rowid = %llu
create-subscribe-zone/
subscription/
sync/zone-purge
locate-record/
unreachable: Can't alloc ranks after fetching records
Could not locate record
unreachable: parent isn't a reference %@
v24@?0@"BRCItemID"8@"NSError"16
BRCLocateRecordOperation
stage
gc:%ld
com.apple.brc.stage
fvrgduslix
com.apple.brc.stage.backup-exclusion-queue
-[BRCStageRegistry makeDirectoryInStageGatherFileID:generationID:error:]
-[BRCStageRegistry makeSymlinkWithTarget:inStageGatherFileID:generationID:error:]
-[BRCStageRegistry makeNonLocalVersionSideFaultWithAdditionName:clientZone:statInfo:version:sharingOptions:error:]
-[BRCStageRegistry makeSideFaultInStageGatherFileID:generationID:documentID:properties:inAppLibrary:forCreation:error:]
-[BRCStageRegistry _flockToMakeLiveAtPath:error:]
-[BRCStageRegistry makeItemLive:fromStage:bySwappingWith:fileName:error:]
-[BRCStageRegistry moveFromStage:toPath:fileName:error:]
.Trash
com.apple.trash.put-back.path#PS
com.apple.trash.put-back.icloud-parent-id#PS
com.apple.favorite-rank.number#PS
com.apple.lastuseddate#PS
B8@?0
everyone
%llx
/%@/%@
ckpackage
-[BRCStageRegistry rememberStagedDownloadWithID:gatherFileID:generationID:documentID:appLibrary:error:]
-[BRCStageRegistry moveOldVersionFromPath:error:]
-[BRCStageRegistry moveToGraveyardFromPath:forItemID:error:]
graveyard
old versions stage
com.apple.bird.graveyard.size#N
i24@?0r*8^{stat=iSSQIIi{timespec=qq}{timespec=qq}{timespec=qq}{timespec=qq}qqiIIi[2q]}16
B24@?0@"NSString"8@"NSArray"16
SELECT 1 FROM client_uploads WHERE transfer_stage = %@
SELECT 1 FROM client_items WHERE item_staged_file_id = %lld
SELECT 1 FROM client_downloads WHERE transfer_stage = %@
i32@?0@"NSString"8@"NSString"16@"NSString"24
B16@?0@"BRCPrivateServerZone"8
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/fs/BRCStageRegistry.m
-[BRCStageRegistry _removeUnusedXattrBlobs]_block_invoke
SELECT EXISTS (SELECT 1 FROM client_items WHERE item_xattr_signature = %@ OR version_xattr_signature = %@ LIMIT 1)
SELECT EXISTS (SELECT 1 FROM server_items WHERE item_xattr_signature = %@ OR version_xattr_signature = %@ LIMIT 1)
-[BRCStageRegistry _garbageCollectSpace:]
com.apple.bird.stage.gc
unreachable: Asked to save xattr without url
-[BRCStageRegistry saveXattrAtURL:forSignature:error:]
unreachable: Asked to save xattr without signature or data
-[BRCStageRegistry saveXattrBlob:forSignature:error:]
unreachable: Asked for xattr without signature
-[BRCStageRegistry loadXattrBlobForSignature:error:]
_makeSideFault
.DocumentRevisions-V100/AllUIDs
.DocumentRevisions-V100/PerUID
versions
coordinated readers
  + %@
com.apple.bird.versions
Logged out - iCloud Drive is not configured
dl-version-%@
container
pkg_extensions.plist
pkg-extension-writer
v32@?0@"NSString"8@"NSNumber"16^B24
CFBundleTypeExtensions
CFBundleDocumentTypes
SharedPackageExtensions.app
Info.plist
com.apple.clouddocs-items
didDropCoreSpotlightIndex
dbID:%llu rank:%llu
<%@: %p, %lu indexed, %lu deleted>
DELETE FROM tombstones
INSERT INTO tombstones (file_object_id, file_object_id_type, notif_rank) VALUES (%lld, %d, %lld)
DELETE FROM tombstones WHERE notif_rank < %lld
SELECT file_object_id, file_object_id_type, notif_rank FROM tombstones    WHERE notif_rank >= %lld ORDER BY notif_rank ASC LIMIT %lld
v16@?0@"PQLResultSet"8
@"BRFileObjectID"20@?0q8c16
v24@?0@"NSArray<NSFileProviderItem>"8@"NSArray"16
recents-enumerator
recents-enumerator-tracker
v24@?0@"CKRecordID"8d16
<dl-thumbnail[%lld] %@_%@>
unreachable: thumbnail is not a CKAsset: %@
-[BRCDownloadThumbnail _stageWithSession:error:]
dl-thumbnail
thumbnails
downloading
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/sync/transfers/BRCDownloadOperations.m
-[BRCDownloadContent initWithDocument:stageID:]
brpackage-dlspec
<dl-content[%lld] %@_%@>
unreachable: Package inside %@ is corrupted in the cloud
Asking for asset index out of bounds %lu vs %lu in package: %@
-[BRCDownloadContent _prepareSecondStageWithSession:manifest:package:error:]
-[BRCDownloadContent _stageWithSession:manifest:package:xattrsPackage:error:]
unreachable: file content is not a CKAsset: %@
-[BRCDownloadContent _stageWithSession:error:]
unreachable: finder bookmark without content: %@
unreachable: pkg content is not a CKPackage: %@
unreachable: package manifest is not a CKAsset: %@
unreachable: xattrs package is not a CKAsset: %@
unreachable: unknown type for downloaded object %@
dl-content
-[BRCDownloadVersion initWithDocument:stageID:etag:isLoser:]
<dl-version[%lld] %@_%@>
unreachable: There should be a file content property in %@
-[BRCDownloadVersion _stageContentWithSession:error:]
unreachable: no fileURL for %@ in %@
-[BRCDownloadVersion _stageWithSession:creationInfo:error:]
dl-version
v24@?0@"GSAddition"8@"NSError"16
previous documents versions
INSERT INTO client_items ( rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier) VALUES ( %lld, %@, %@, %@, %ld, %@, %@, %d, %lld, %lld, %@, %@, %d, %@, %d, %d, %d, %lld, %lld, %lld, %@, %@, %d, %@, %@, %@, %@, %@, %@, %@, %@, %u, %@, %d, %llu, %@)
UPDATE client_items SET  item_id = %@, item_creator_id = %@, item_sharing_options = %ld, item_side_car_ckinfo = %@, item_parent_zone_rowid = %@, item_localsyncupstate = %d, item_local_diffs = %llu, item_notifs_rank = %lld, app_library_rowid = %@, item_min_supported_os_rowid = %@, item_user_visible = %d, item_stat_ckinfo = %@, item_state = %d, item_type = %d, item_mode = %d, item_birthtime = %lld, item_lastusedtime = %lld, item_favoriterank = %lld, item_parent_id = %@, item_filename = %@, item_hidden_ext = %d, item_finder_tags = %@, item_xattr_signature = %@, item_trash_put_back_path = %@, item_trash_put_back_parent_id = %@, item_alias_target = %@, item_creator = %@, item_processing_stamp = %@, item_staged_file_id = %@, item_staged_generation = %u, item_bouncedname = %@, item_scope = %d,item_local_change_count = %llu, item_old_version_identifier = %@  WHERE rowid = %llu
server truth structure validation (%s)
=================================
INSERT INTO items_checks    SELECT c.item_id, %lld      FROM items_checks AS p INNER JOIN server_items AS c ON (p.item_id = c.item_parent_id)     WHERE zone_rowid = %@ AND p.depth = %lld
SELECT item_id FROM server_items WHERE zone_rowid = %@ AND item_id NOT IN(SELECT item_id FROM items_checks)
SELECT c.item_id      FROM server_items AS c INNER JOIN server_items AS p ON (c.zone_rowid = p.zone_rowid AND c.item_parent_id = p.item_id)     WHERE c.zone_rowid = %@ AND c.item_state = 0       AND p.item_state = 1
SELECT c.item_id      FROM server_items AS c INNER JOIN server_items AS p ON (c.zone_rowid = p.zone_rowid AND c.item_parent_id = p.item_id)     WHERE c.zone_rowid = %@       AND p.item_type NOT IN (1, 2, 8, 5, 6, 7, 3)
SELECT c.item_id      FROM server_items AS c INNER JOIN server_items AS p ON (c.zone_rowid = p.zone_rowid AND c.item_parent_id = p.item_id)     WHERE c.zone_rowid = %@ AND c.item_rank >= p.item_rank       AND p.item_state = 1
is an item with a greater rank than a dead parent
server items checks (%s)
===================
UPDATE server_items SET item_state = 1, item_rank = NULL WHERE item_parent_id = %@ AND zone_rowid = %@ AND item_state = 0
UPDATE server_items SET item_state = 1 , item_parent_id = %@ WHERE zone_rowid = %@   AND item_rank IS NULL   AND NOT EXISTS (SELECT 1 FROM server_items as pi WHERE pi.item_id = server_items.item_parent_id AND pi.zone_rowid = server_items.zone_rowid LIMIT 1)   AND item_parent_id != %@
SELECT item_id   FROM server_items  WHERE zone_rowid = %@    AND item_state = 1    AND item_type = 0    AND item_rank IS NULL
UPDATE server_items SET item_favoriterank = NULL, item_lastusedtime = NULL, item_side_car_ckinfo = NULL, item_rank = NULL WHERE zone_rowid = %@ AND (item_sharing_options & 4) == 0
%@ %s %@ - %@ - %@ - %d
sharing/copy-web-auth-token
v24@?0@"NSString"8@"NSError"16
Sync-Up
client_sync_up
in_flight_diffs, zone_rowid
zone:%@
 in-flight{%@}
in_flight_diffs = NULL
UPDATE %@SET in_flight_diffs = %lldWHERE %@
SELECT in_flight_diffs FROM %@WHERE %@ AND throttle_state != 0
SELECT COUNT(*) FROM %@WHERE %@ AND throttle_state != 0
SELECT ci.rowid, ci.zone_rowid, ci.item_id, ci.item_creator_id, ci.item_sharing_options, ci.item_side_car_ckinfo, ci.item_parent_zone_rowid, ci.item_localsyncupstate, ci.item_local_diffs, ci.item_notifs_rank, ci.app_library_rowid, ci.item_min_supported_os_rowid, ci.item_user_visible, ci.item_stat_ckinfo, ci.item_state, ci.item_type, ci.item_mode, ci.item_birthtime, ci.item_lastusedtime, ci.item_favoriterank,ci.item_parent_id, ci.item_filename, ci.item_hidden_ext, ci.item_finder_tags, ci.item_xattr_signature, ci.item_trash_put_back_path, ci.item_trash_put_back_parent_id, ci.item_alias_target, ci.item_creator, ci.item_processing_stamp, ci.item_staged_file_id, ci.item_staged_generation, ci.item_bouncedname, ci.item_scope, ci.item_local_change_count, ci.item_old_version_identifier, ci.version_name, ci.version_ckinfo, ci.version_mtime, ci.version_size, ci.version_thumb_size, ci.version_thumb_signature, ci.version_content_signature, ci.version_xattr_signature, ci.version_edited_since_shared, ci.version_device, ci.version_conflict_loser_etags, ci.version_quarantine_info, ci.version_uploaded_assets, ci.version_upload_error, ci.version_old_zone_item_id, ci.version_old_zone_rowid, ci.version_local_change_count, ci.version_old_version_identifier, ci.desired_version, ci.item_live_conflict_loser_etags, ci.item_file_id, ci.item_generation, ci.version_block_sync_until_bundle_id, ci.version_block_sync_until_timestamp FROM client_items AS ci WHERE ci.item_localsyncupstate = 4 AND ci.item_localsyncupstate != 0 AND NOT EXISTS (SELECT 1 FROM client_sync_up AS su WHERE ci.rowid = su.throttle_id AND su.throttle_state != 0)
throttle_id, zone_rowid
Uploader
client_uploads
com.apple.bird.thumbnails
com.apple.bird.quota
com.apple.bird.quota.update-state
uploader
com.apple.bird.uploader
uploader-retry
availableQuota
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/fs/BRCFSUploader.m
-[BRCFSUploader _buildItemTooLargeErrorIfNeeded:syncContext:]
UPDATE client_uploads SET transfer_stage = %@, transfer_operation = %@ WHERE %@
SELECT zone_rowid FROM client_uploads WHERE %@ AND transfer_stage = %@
SELECT zone_rowid FROM client_uploads WHERE %@ AND transfer_operation = %@
SELECT transfer_operation IS NOT NULL FROM client_uploads WHERE throttle_id = %llu
transfer_operation, transfer_queue, upload_error, app_library_rowid, zone_rowid
in-quicklook
needs-thumbnail
pending-retry
queue:%@
upload:done/cancelled
uploading:%.1f%%
UPDATE client_uploads SET   throttle_state = 1, transfer_operation = %@ WHERE %@
UPDATE client_uploads SET  throttle_state = %d, transfer_queue = '_prepare', transfer_record = NULL, transfer_stage = NULL, transfer_operation = NULL WHERE throttle_id = %@
SELECT throttle_id, transfer_queue, transfer_operation, transfer_stage, app_library_rowid, throttle_state, zone_rowid   FROM client_uploads  WHERE %@ AND throttle_state != 0
SELECT throttle_id, transfer_queue, transfer_operation, transfer_stage, app_library_rowid, throttle_state, zone_rowid   FROM client_uploads  WHERE zone_rowid = %@ AND throttle_state != 0
UPDATE client_uploads SET throttle_state = 1 WHERE throttle_state = 30 AND zone_rowid = %@ AND throttle_state != 0
SELECT transfer_operation    FROM client_uploads  WHERE throttle_id = %lld AND throttle_state == 1
SELECT throttle_id, transfer_queue, transfer_operation, transfer_stage, app_library_rowid, throttle_state, zone_rowid   FROM client_uploads  WHERE %@
UPDATE client_uploads SET  throttle_state = call_block(%@, next_retry_stamp, app_library_rowid, zone_rowid), transfer_queue = %@ WHERE %@
UPDATE client_uploads    SET throttle_state = %d, transfer_operation = NULL  WHERE %@
app_library_rowid, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, upload_priority, upload_request_stamp , zone_rowid
%@, %@, %lld, %@, %@, %@, %lld, %lld, %@
zone_rowid = %@
UPDATE client_uploads    SET upload_priority = %lld, upload_request_stamp = %lld  WHERE throttle_id = %lld
UPDATE client_uploads SET transfer_queue = call_block(%@, throttle_id, app_library_rowid, next_retry_stamp, zone_rowid)     WHERE throttle_state = 1      AND transfer_queue = '_retry'      AND transfer_operation IS NULL      AND next_retry_stamp <= %lld
  SELECT MIN(next_retry_stamp)     FROM client_uploads    WHERE throttle_state = 1      AND transfer_queue = '_retry'      AND transfer_operation IS NULL
UPDATE client_uploads SET transfer_operation = NULL WHERE (transfer_operation >= '')
SELECT app_library_rowid, zone_rowid, transfer_queue   FROM client_uploads  WHERE throttle_state = 1 GROUP BY app_library_rowid, zone_rowid, transfer_queue
transfer_queue = '_prepare' AND transfer_operation IS NULL
throttle_id, app_library_rowid, zone_rowid
brpackage
ckpackage-xattrs
Failed to add item to package
@"NSError"8@?0
UPDATE client_uploads SET  transfer_queue = call_block(%@, next_retry_stamp, %@), transfer_record = %@, transfer_operation = NULL, transfer_stage = %@, transfer_size = %lld WHERE throttle_id = %lld
upload-%@-%@
-[BRCFSUploader _finishPackageUploadWithRecord:item:stageID:error:]
UPDATE client_uploads SET  transfer_operation = call_block(%@, next_retry_stamp), upload_error = %@ WHERE %@
  SELECT throttle_id, zone_rowid, transfer_size, transfer_record, next_retry_stamp, transfer_stage     FROM client_uploads    WHERE throttle_state = 1      AND transfer_queue = %@      AND transfer_operation IS NULL ORDER BY upload_priority DESC, upload_request_stamp DESC, transfer_size ASC
UPDATE client_uploads    SET transfer_queue = '_retry'  WHERE %@
v24@?0@"BRCUpload"8@"NSError"16
SELECT MIN(next_retry_stamp) FROM client_uploads   WHERE throttle_state = 1     AND transfer_queue = %@      AND transfer_operation IS NULL 
SELECT 1 FROM client_uploads  WHERE throttle_state = 32    AND zone_rowid IN (SELECT rowid FROM client_zones WHERE zone_owner = %@ AND zone_plist IS NOT NULL)  LIMIT 1
SELECT 1 FROM client_uploads WHERE throttle_state = 32 AND zone_rowid = %@ LIMIT 1
SELECT throttle_id, transfer_size   FROM client_uploads  WHERE throttle_state = 32    AND transfer_size < %lld
UPDATE client_items SET version_upload_error = NULL WHERE rowid = %lld
UPDATE client_uploads SET throttle_state = 1, upload_error = NULL WHERE throttle_id = %lld
lastQuotaFetchDate
v24@?0Q8@"NSError"16
Upload
SELECT ci.rowid, ci.zone_rowid, ci.item_id, ci.item_creator_id, ci.item_sharing_options, ci.item_side_car_ckinfo, ci.item_parent_zone_rowid, ci.item_localsyncupstate, ci.item_local_diffs, ci.item_notifs_rank, ci.app_library_rowid, ci.item_min_supported_os_rowid, ci.item_user_visible, ci.item_stat_ckinfo, ci.item_state, ci.item_type, ci.item_mode, ci.item_birthtime, ci.item_lastusedtime, ci.item_favoriterank,ci.item_parent_id, ci.item_filename, ci.item_hidden_ext, ci.item_finder_tags, ci.item_xattr_signature, ci.item_trash_put_back_path, ci.item_trash_put_back_parent_id, ci.item_alias_target, ci.item_creator, ci.item_processing_stamp, ci.item_staged_file_id, ci.item_staged_generation, ci.item_bouncedname, ci.item_scope, ci.item_local_change_count, ci.item_old_version_identifier, ci.version_name, ci.version_ckinfo, ci.version_mtime, ci.version_size, ci.version_thumb_size, ci.version_thumb_signature, ci.version_content_signature, ci.version_xattr_signature, ci.version_edited_since_shared, ci.version_device, ci.version_conflict_loser_etags, ci.version_quarantine_info, ci.version_uploaded_assets, ci.version_upload_error, ci.version_old_zone_item_id, ci.version_old_zone_rowid, ci.version_local_change_count, ci.version_old_version_identifier, ci.desired_version, ci.item_live_conflict_loser_etags, ci.item_file_id, ci.item_generation, ci.version_block_sync_until_bundle_id, ci.version_block_sync_until_timestamp FROM client_items AS ci WHERE ci.item_localsyncupstate = 3 AND ci.item_localsyncupstate != 0 AND NOT EXISTS (SELECT 1 FROM client_uploads AS up WHERE ci.rowid = up.throttle_id AND up.throttle_state != 0)
SELECT pcs_state FROM server_items WHERE item_id = %@   AND zone_rowid = %@ LIMIT 1
SELECT item_type, pcs_state FROM server_items WHERE item_id = %@ and zone_rowid = %@
SELECT 1 FROM server_items WHERE item_parent_id = %@   AND zone_rowid = %@   AND pcs_state NOT IN (2, 3)   AND item_state = 0 LIMIT 1
AND NOT (item_type = 3 AND item_alias_target like '%%:\_%%' ESCAPE '\')
SELECT item_id, item_type, item_stat_ckinfo, version_ckinfo, pcs_state, item_alias_target FROM server_items WHERE item_parent_id = %@   AND zone_rowid = %@   AND pcs_state NOT IN (2, 3)   AND item_state = 0 %@
SELECT item_stat_ckinfo, version_ckinfo FROM client_items WHERE item_id = %@  AND zone_rowid = %@  AND (item_local_diffs & %lld) != 0
SELECT pcs_state, item_stat_ckinfo FROM server_items WHERE item_id = %@ AND zone_rowid = %@
pcs-chain/
unreachable: Can't PCS chain to documents, trash, or root
br_pcsChainingUpdate
UPDATE server_items SET item_stat_ckinfo = %@, pcs_state = 4 WHERE item_id = %@ AND zone_rowid = %@ AND item_stat_ckinfo = %@
UPDATE server_items SET pcs_state = 3 WHERE item_id = %@ AND zone_rowid = %@ AND pcs_state != 2
v24@?0@"BRCPCSChainBatchInfo"8@"NSError"16
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/fpfs/item-categories/BRCDocumentItem+FPFSAdditions.m
-[BRCDocumentItem(BRCFPFSAdditions) _updatePackageItemsIfNecessaryWithImportObject:error:]
account-queue
@"BRCAccountHandler"8@?0
data separated volume should have been deleted
-[BRCAccountsManager destroySessionWithACAccountID:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/account/BRCAccountsManager.m
-[BRFieldPkgLocalItem writeTo:]
BRFieldPkgLocalItem.m
self->_item != nil
existing
revived
[%@]
hasCompletedPCSMigration
migrate-pcs
v32@?0@"CKRecordZoneID"8@"CKRecordZone"16^B24
not needed
v24@?0@"CKRecordZone"8@"NSError"16
v32@?0@"NSArray"8@"CKRecordZone"16@"NSError"24
com.apple.CloudDocsDaemon.container-metadata-extractor
com.apple.bird.watcher-queue
com.apple.bird.client-truth-workloop
com.apple.bird.server-truth-workloop
com.apple.bird.read-only-workloop
session{account:%@}
Description
Error
Unable to open file at path '%@' %{errno}d
-[BRCAccountSession openWithError:pushWorkloop:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/account/BRCAccountSession.m
Unable to lock file at path '%@' %{errno}d
client-db
com.apple.bird.main-scheduler
autoResumeSyncTimer
version_block_sync_until_timestamp
v16@?0@"BRCAccountSession"8
com.apple.bird.reset
com.apple.bird.pending-disk-scheduler
com.apple.bird.disk-space-observer
v24@?0@"CKRecordID"8@"NSError"16
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE item_parent_id = %@ AND zone_rowid = %@ AND item_filename != '.Trash' AND pcs_state NOT IN (2, 3) LIMIT 1
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE item_localsyncupstate = 7
SELECT ci.rowid, ci.zone_rowid, ci.item_id, ci.item_creator_id, ci.item_sharing_options, ci.item_side_car_ckinfo, ci.item_parent_zone_rowid, ci.item_localsyncupstate, ci.item_local_diffs, ci.item_notifs_rank, ci.app_library_rowid, ci.item_min_supported_os_rowid, ci.item_user_visible, ci.item_stat_ckinfo, ci.item_state, ci.item_type, ci.item_mode, ci.item_birthtime, ci.item_lastusedtime, ci.item_favoriterank,ci.item_parent_id, ci.item_filename, ci.item_hidden_ext, ci.item_finder_tags, ci.item_xattr_signature, ci.item_trash_put_back_path, ci.item_trash_put_back_parent_id, ci.item_alias_target, ci.item_creator, ci.item_processing_stamp, ci.item_staged_file_id, ci.item_staged_generation, ci.item_bouncedname, ci.item_scope, ci.item_local_change_count, ci.item_old_version_identifier, ci.version_name, ci.version_ckinfo, ci.version_mtime, ci.version_size, ci.version_thumb_size, ci.version_thumb_signature, ci.version_content_signature, ci.version_xattr_signature, ci.version_edited_since_shared, ci.version_device, ci.version_conflict_loser_etags, ci.version_quarantine_info, ci.version_uploaded_assets, ci.version_upload_error, ci.version_old_zone_item_id, ci.version_old_zone_rowid, ci.version_local_change_count, ci.version_old_version_identifier, ci.desired_version, ci.item_live_conflict_loser_etags, ci.item_file_id, ci.item_generation, ci.version_block_sync_until_bundle_id, ci.version_block_sync_until_timestamp FROM client_items AS ci WHERE ci.item_localsyncupstate = 4 AND item_min_supported_os_rowid IS NULL AND NOT EXISTS (SELECT 1 FROM client_sync_up AS su WHERE su.throttle_id = ci.rowid AND su.throttle_state != 0)
SELECT ci.rowid, ci.zone_rowid, ci.item_id, ci.item_creator_id, ci.item_sharing_options, ci.item_side_car_ckinfo, ci.item_parent_zone_rowid, ci.item_localsyncupstate, ci.item_local_diffs, ci.item_notifs_rank, ci.app_library_rowid, ci.item_min_supported_os_rowid, ci.item_user_visible, ci.item_stat_ckinfo, ci.item_state, ci.item_type, ci.item_mode, ci.item_birthtime, ci.item_lastusedtime, ci.item_favoriterank,ci.item_parent_id, ci.item_filename, ci.item_hidden_ext, ci.item_finder_tags, ci.item_xattr_signature, ci.item_trash_put_back_path, ci.item_trash_put_back_parent_id, ci.item_alias_target, ci.item_creator, ci.item_processing_stamp, ci.item_staged_file_id, ci.item_staged_generation, ci.item_bouncedname, ci.item_scope, ci.item_local_change_count, ci.item_old_version_identifier, ci.version_name, ci.version_ckinfo, ci.version_mtime, ci.version_size, ci.version_thumb_size, ci.version_thumb_signature, ci.version_content_signature, ci.version_xattr_signature, ci.version_edited_since_shared, ci.version_device, ci.version_conflict_loser_etags, ci.version_quarantine_info, ci.version_uploaded_assets, ci.version_upload_error, ci.version_old_zone_item_id, ci.version_old_zone_rowid, ci.version_local_change_count, ci.version_old_version_identifier, ci.desired_version, ci.item_live_conflict_loser_etags, ci.item_file_id, ci.item_generation, ci.version_block_sync_until_bundle_id, ci.version_block_sync_until_timestamp FROM client_items AS ci LEFT JOIN client_sync_up AS su ON su.throttle_id = ci.rowid AND su.zone_rowid = ci.zone_rowid LEFT JOIN client_uploads AS cu ON cu.throttle_id = ci.rowid AND cu.zone_rowid = ci.zone_rowid WHERE ci.item_localsyncupstate = 3 AND ci.item_type IN (1, 6) AND (IFNULL(cu.throttle_state, 0) = 0 OR (cu.throttle_state = 31 AND IFNULL(su.throttle_state, 0) = 0))
SELECT throttle_id FROM client_sync_up WHERE zone_rowid = %@ AND throttle_state != 0
zone close
.localized
com.apple.clouddocs.app-uploaded
Not removing account data on an account with the wrong persona %@ expecting %@
-[BRCAccountSession _validatePersona]
com.apple.bird.destroy-account-data
Zone names mistmatch
Zone names or owners mismatch
v24@?0@"NSString"8@"BRCALRowID"16
currentUserRecordID
fetch-user-recordID
apps-list-did-change
v32@?0@"NSDictionary"8@"NSDictionary"16@"NSError"24
v24@?0@"NSString"8^B16
v32@?0@"NSString"8@"NSSet"16^B24
%@-%@
enabling
disabling
download-all-tracker
SELECT SUM(li.version_size) FROM client_items as li WHERE li.item_type = 1   AND li.item_state = 0
B16@?0@"BRCLocalItem"8
SELECT MAX(ciconia_version) FROM ciconia_history WHERE last_error IS NULL
Mobile Docs
-[BRCAccountSession enableSyncforSyncedFolderType:isInitialCreation:error:]
%ld xpc clients:
%ld misc operations:
full sync:
reset-queue
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE item_scope = 3 AND item_localsyncupstate = 5
notSignedIn
driveDisabled
appMissing
profileDisabled
redirectReason
:nooverride
sharing/accept-flow
accept-flow-next-step
com.apple.clouddocs.accept-shared-url
step:
folderShare-
iWorkShare-
documentShare-
can't fast forward to download step (currentIndex: %lu, downloadIndex: %lu, stepCount: %lu)
can't fast forward to download step from current possition (currentIndex: %lu)
v24@?0@"NSURL"8@"NSError"16
v24@?0B8B12@"NSError"16
target app %@ is missing entitlement %@
shareURL
unreachable: No operation error and no share id
v24@?0@"CKShareMetadata"8@"NSError"16
Share %@ can not be accepted right now.
unreachable: item is in an unknown state: %@:
unreachable: document doesn't exists anymore
unreachable: item isn't a document or directory
Can't get bookmark string at %@
v24@?0^{__CFString=}8^{__CFError=}16
com.apple.DocumentsApp
shareddocuments
Don't know how to open shared item at %@
unreachable: couldn't save to server truth when creating server fault
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/sharing/BRCSharingAcceptFlowOperation.m
-[BRCSharingAcceptFlowOperation _locateSharedItemOnDisk]_block_invoke
_liveFileURL
prefs:root=APPLE_ACCOUNT&path=ICLOUD_SERVICE/CKDATABASESERVICE
itms-apps://?bundleIdentifier=%@
https
&%@=%@
%@=%@
transfer-queue
records-left:%ld progress:%.1f%% size:%@
transferring
 (cancelled)
unreachable: Missing transfer error for record %@
recordNames
partial
broken
problems
pendingRequestID
needsSync
dead parent
missing root
live children
missing content
cant save (missing structure?)
cant save (missing parent)
pcs decryption
upload stuck
download stuck
sync up stuck
sync down stuck
apply stuck
simulated (broken)
simulated (partial)
item parented to a document
package with corrupt indices
share without root record
root record missing shareID but share exists
zone resetted more than %lu times in %f seconds
problem{msg:%@,needs-sync:%@,zone-state:%@,pending-request:%@, records:%@}
ckinfo
zone-health{etag:%@,state:%@}
i20@?0i8@"NSString"12
/.vol/%u/%lld
BRCRemoveFolder
BRCSetFakeQuarantineInfo
BRCGetXattrValue
com.apple.LaunchServices.OpenWith
com.apple.ResourceFork
com.apple.last-used.time#PS
com.apple.metadata:_kMDItemFinderLabel
com.apple.quarantine
com.apple.cs.CodeSignature
com.apple.cs.CodeDirectory
com.apple.cs.CodeRequirements
com.apple.cs.CodeRequirements-1
com.apple.metadata:kMDItemIsShared
com.apple.metadata:kMDItemSharedItemCurrentUserRole
com.apple.metadata:kMDItemOwnerName
-[BRCLazyXattrsCollection initWithFD:sizeLimit:syncable:error:]
-[BRCLazyXattrsCollection getXattrValue:error:]
file-write-data
file-read-data
com.apple.private.bird.fake-qtn
B16@?0r*8
i24@?0r^v8r^v16
unlink
com.apple.bird.file-unlinker
versionIdentifier
oldVersionIdentifier
-[BRFieldStructureSignature writeTo:]
BRFieldStructureSignature.m
nil != self->_versionIdentifier
-[BRCTreeEnumerator enumerateBelow:appLibrary:recursively:handler:]
BRCTreeEnumerator.m
parentID != nil
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE rowid > %lld   AND item_parent_id = %@  AND app_library_rowid = %@  AND NOT indexset_contains(%p, rowid) ORDER BY rowid    LIMIT %ld
upload-tracker
%@ - zones still uploading: %@
-[PQLConnection(BRCAdditions) registerFunction:nArgs:handler:error:]
com.apple.Pages
com.apple.Keynote
com.apple.Numbers
pages-tef
key-tef
numbers-tef
-[BRCStageRegistry(FPFSAdditions) moveFromURLToLiveStage:fileObjectID:error:]
<%@ id:%@ hr:%s xattr:%@ rtf:%@ bs:%@>
q24@?0@"BRCPendingChangesStream"8@"BRCPendingChangesStream"16
change-stream/%@
list-dir/%@/%@%@
DROP TABLE IF EXISTS fetch_state
DROP TABLE IF EXISTS list_state
DROP TABLE IF EXISTS record_changes
DROP INDEX IF EXISTS "record_changes/record_type"
CREATE TABLE fetch_state (server_token blob, client_token integer)
CREATE TABLE list_state (cont_token blob, completed integer not null)
CREATE TABLE record_changes (record_id text primary key, record_type integer not null, record blob)
CREATE INDEX "record_changes/record_type" ON record_changes (record_type)
INSERT INTO fetch_state (server_token, client_token) VALUES (%@, NULL)
INSERT INTO list_state (cont_token, completed) VALUES (NULL, 0)
CREATE TABLE records_needing_subresources (record_id text PRIMARY KEY, record_type integer not null, record blob, xattr_sig BLOB, record_id_needing_fetch text, record_id_blocking_save text)
CREATE INDEX "records_needing_subresources/xattr_sig" ON records_needing_subresources(xattr_sig) WHERE xattr_sig IS NOT NULL
CREATE INDEX "records_needing_subresources/record_id_needing_fetch" ON records_needing_subresources(record_id_needing_fetch) WHERE record_id_needing_fetch IS NOT NULL
CREATE INDEX "records_needing_subresources/record_id_blocking_save" ON records_needing_subresources(record_id_blocking_save) WHERE record_id_blocking_save IS NOT NULL
CREATE TRIGGER "records_needing_subresources/resources_finished" AFTER UPDATE ON records_needing_subresources BEGIN INSERT INTO record_changes (record_id, record_type, record)  SELECT record_id, record_type, record  FROM records_needing_subresources WHERE xattr_sig IS NULL AND record_id_needing_fetch IS NULL AND record_id_blocking_save IS NULL AND record IS NOT NULL AND record_id = new.record_id; DELETE FROM records_needing_subresources WHERE xattr_sig IS NULL AND record_id_needing_fetch IS NULL AND record_id_blocking_save IS NULL AND record IS NOT NULL AND record_id = new.record_id; END
CREATE TRIGGER "records_needing_subresources/unblock_save" AFTER INSERT ON record_changes BEGIN UPDATE records_needing_subresources SET record_id_blocking_save = NULL WHERE record_id_blocking_save = new.record_id AND new.record IS NOT NULL; END
DB Corruption Handler of BRCPendingChangesStream
DB Error Handler of BRCPendingChangesStream
Auto Rollback Handler of BRCPendingChangesStream
db.db
unreachable: Trying to fetch token state without a db
SELECT server_token, client_token FROM fetch_state
unreachable: There should always be one entry
unreachable: Trying to fetch query cursor without a db
SELECT cont_token, completed FROM list_state
SELECT server_token FROM fetch_state
unreachable: Trying to enumerate records without a db
SELECT record_id, record FROM record_changes WHERE record_type = %d
INSERT OR REPLACE INTO record_changes (record_id, record_type, record) VALUES (%@, %d, %@)
DELETE FROM records_needing_subresources WHERE record_id = %@
UPDATE fetch_state SET server_token = %@, client_token = %lld
UPDATE list_state SET cont_token = %@, completed = %d
DELETE FROM record_changes WHERE 1
DELETE FROM records_needing_subresources WHERE record_id = %@ AND record_id_needing_fetch = record_id
UPDATE records_needing_subresources SET record_id_blocking_save = NULL WHERE record_id_blocking_save = %@
UPDATE records_needing_subresources AS pr   SET record_id_needing_fetch = record_id_blocking_save, record_id_blocking_save = NULL WHERE record_id_blocking_save IS NOT NULL AND NOT EXISTS (SELECT 1 FROM records_needing_subresources AS sr WHERE pr.record_id_blocking_save = sr.record_id LIMIT 1)
SELECT record, xattr_sig FROM records_needing_subresources WHERE xattr_sig IS NOT NULL GROUP BY xattr_sig
SELECT record_id_needing_fetch FROM records_needing_subresources WHERE record_id_needing_fetch IS NOT NULL GROUP BY record_id_needing_fetch
SELECT 1 FROM record_changes WHERE record_id = %@ LIMIT 1
SELECT 1 FROM records_needing_subresources WHERE record_id = %@ LIMIT 1
SELECT 1 FROM records_needing_subresources WHERE record_id_needing_fetch IS NOT NULL LIMIT 1
SELECT 1 FROM records_needing_subresources WHERE xattr_sig IS NOT NULL LIMIT 1
SELECT 1 FROM records_needing_subresources LIMIT 1
SELECT 1 FROM record_changes WHERE record IS NULL LIMIT 1
DELETE FROM record_changes WHERE record_id = %@
UPDATE records_needing_subresources SET record_id_needing_fetch = NULL WHERE record_id_needing_fetch = %@
INSERT OR REPLACE INTO records_needing_subresources (record_id, record_type, record, xattr_sig, record_id_needing_fetch, record_id_blocking_save) VALUES (%@, %ld, %@, %@, %@, %@)
UPDATE records_needing_subresources SET xattr_sig = NULL WHERE xattr_sig = %@
DELETE FROM records_needing_subresources WHERE record_id = %@ AND record IS NULL
serializedNameComponents
Couldn't get public sharing key
unreachable: no records and no error
unreachable: no error and no sharing key
unreachable: no public sharing identity. avoiding breaking iwork shares
unreachable: no routing key on share identity prepared record
unreachable: sharing identity isn't encrypted data
unreachable: base token isn't a string
unreachable: no base token %@ or sharing identity %@ and no error
unreachable: not a directory nor a document
sharing/save-share
 WITH RECURSIVE item_parents (item_id, item_sharing_options, item_parent_id) AS (          SELECT item_id, item_sharing_options, item_parent_id FROM server_items           WHERE item_id = %@ AND zone_rowid = %@       UNION ALL          SELECT li.item_id, li.item_sharing_options, li.item_parent_id FROM server_items AS li     INNER JOIN item_parents AS p WHERE li.zone_rowid = %@ AND p.item_parent_id = li.item_id          LIMIT %u )        SELECT item_id FROM item_parents WHERE (item_sharing_options & %lu) == 4 AND item_id != %@ 
unreachable: no share record
unreachable: directory %@ isn't pcs chained
unreachable: couldn't get base record
 and %@
unreachable: got an unexpected number of shares saved
sharing/destroy-share
unreachable: got an unexpected number of shares deleted
sharing/lookup-participants
v16@?0@"CKShareParticipant"8
Unexpected number of share participants
sharing/modifyAccess
v40@?0@"CKRecordID"8@"NSData"16@"NSString"24@"NSError"32
unreachable: no dict and no error
granting
revoking
Granted
Revoked
accessToken
referenceIdentifier
sharing/copyParticipantToken
unreachable: No base token so the share token we would return would be invalid for iwork
v32@?0@"CKRecordID"8@"NSString"16@"NSError"24
unreachable: no error and no participantKey
participantKey
FetchParticipantDocumentToken
unreachable: no error and no participantDocumentToken
baseToken
shareID
sharing/prepare-folder-pcs
serverItem
sharing/copy-shareURL
unreachable: Couldn't get a share URL
unreachable: Couldn't get a share URL for %@
sharing/copy-shortToken
unreachable: No short token found on record
sharing/clean-subitems
zoneRowID
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/sharing/BRCSharingSaveShareOperation.m
-[BRCSharingProcessFolderSubitemsOperation _completeAfterProcessingClientTruthIfNecessaryWithError:]_block_invoke
WITH RECURSIVE item_parents (item_filename, item_parent_id) AS (     SELECT item_filename, item_parent_id FROM server_items      WHERE zone_rowid = %@ AND item_id = %@  UNION ALL     SELECT si.item_filename, si.item_parent_id FROM server_items AS si INNER JOIN item_parents AS p      WHERE si.item_id = p.item_parent_id        AND si.zone_rowid = %@) SELECT item_filename FROM item_parents
SELECT item_alias_target FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT item_filename FROM server_items WHERE item_id = %@ AND zone_rowid = %@
WITH RECURSIVE item_children_needing_fetching (item_id, item_type, item_sharing_options, shared_alias_count, shared_children_count) AS (     SELECT item_id, item_type, item_sharing_options, shared_alias_count, shared_children_count FROM server_items      WHERE zone_rowid = %@ AND item_id = %@ AND (IFNULL(shared_children_count + shared_alias_count, 1) > 0)  UNION ALL     SELECT ip.item_id, ip.item_type, ip.item_sharing_options, ip.shared_alias_count, ip.shared_children_count FROM server_items AS ip INNER JOIN item_children_needing_fetching AS p       WHERE ip.item_parent_id = p.item_id        AND ip.zone_rowid = %@        AND ip.item_type IN (0, 9, 10, 1, 2, 8, 3)        AND ((IFNULL(ip.shared_children_count + ip.shared_alias_count, 1) > 0)            OR (ip.item_sharing_options & 4)            OR ip.item_type = 3)) SELECT item_id, item_type, item_sharing_options FROM item_children_needing_fetching WHERE item_type = 3 OR (item_sharing_options & 4)       OR (item_type IN (9, 10) AND (IFNULL(shared_children_count + shared_alias_count, 1) > 0))
SELECT item_type, item_stat_ckinfo, version_ckinfo from %@ WHERE item_id = %@ AND zone_rowid = %@
full
empty
v32@?0@"BRCItemGlobalID"8Q16^B24
identifier
magnitude_float
magnitude_double
magnitude_int
magnitude_bool
magnitude_long
magnitude
investigation
PBUNSET
Server
ServerTruth|ClientTruth
ServerTruth|ClientTruth|UnlinkData
ServerTruth|ClientTruth|UnlinkData|PurgeZone
CloudDocsServerExtension
BRErrorNeedsReset
CKErrorChangeTokenExpired
CKErrorUserDeletedZone
SqliteExtendedCode
Sync is restricted for this client
<%@:%p(%@:%ld) - %@>
too many registered source
-[BRCFairScheduler addSource:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/foundation/BRCFairScheduler.m
<%@:%p %@ on:%s>
(no-queue)
sharing/iWork-publishing
unreachable: No sharing info and no error
wrapperOperation
containerMetadataSync
%@:%@ %@:%lld %@:%@
serverChangeToken
lastSyncDate
isContainerMetadataSyncIdle
isSharedDBSyncIdle
ckGroup
containerMetadataHasCaughtUp
zoneHealthSync
zoneHealthSyncIdle
zone-health-state{last-sync:%@, needs-syncdown:%@, requestID:%lld, changeToken:%@}
sideCarSync
sideCarSyncIdle
side-car-state{last-sync:%@, needs-sync:%@, requestID:%lld, changeToken:%@}
directory-enumerator/%@
disabled-logged-out
disabled-entitlement
disabled-MDM
disabled TCC
user-interactive
user-initiated
utility
unspecified
xpc-client-workloop
XPC Client task tracker
xpc-client-queue-%d
 (Logged out)
 o %@
misc-operations
%@ entitlement required
%s privilege required
Not entitled to access container
Not entitled to create container
Not a container proxy
Not entitled to access: %@
file-read-metadata
can't %s app library for %@
create
load
-[BRCXPCClient _setupAppLibrary:error:]_block_invoke
<token-getter>
-[BRCXPCTokenClient prepareFileProvidersWithReply:]
-[BRCXPCTokenClient currentAccountCopyTokenWithBundleID:version:reply:]
-[BRCXPCTokenClient getPrimaryiCloudAccountStatus:]
-[BRCXPCTokenClient fetchContainerPathForCurrentPersonaWithReply:]
-[BRCXPCTokenClient fetchGroupContainerPathForCurrentPersonaWithReply:]
-[BRCXPCRegularIPCsClient checkinAskClientIfUsingUbiquity:]
-[BRCXPCRegularIPCsClient getContainerURLForID:recreateDocumentsIfNeeded:reply:]
containerID
-[BRCXPCRegularIPCsClient presyncContainerWithID:reply:]
v40@?0@"NSURL"8@"NSData"16@"NSString"24@"NSError"32
-[BRCXPCRegularIPCsClient getContainerURLForID:forProcess:reply:]
-[BRCXPCRegularIPCsClient updateContainerMetadataForID:]
-[BRCXPCRegularIPCsClient deleteAllContentsOfContainerID:onClient:onServer:wait:reply:]
ipc-%@
-[BRCXPCRegularIPCsClient registerInitialSyncBarrierForID:reply:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/framework-helpers/BRCXPCClient.m
-[BRCXPCRegularIPCsClient getQueryItemForURL:reply:]
-[BRCXPCRegularIPCsClient updateItemFromURL:reply:]
-[BRCXPCRegularIPCsClient startOperation:toDownloadItemAtURL:readingOptions:wantsCurrentVersion:reply:]
v24@?0@"BRCAccountSession"8@"NSError"16
-[BRCXPCRegularIPCsClient evictItemAtURL:options:reply:]
-[BRCXPCRegularIPCsClient thumbnailChangedForItemAtURL:reply:]
-[BRCXPCRegularIPCsClient getItemUpdateSenderWithReceiver:reply:]
v16@?0@"BRCNotificationPipe<BRItemNotificationSending><NSXPCProxyCreating>"8
-[BRCXPCRegularIPCsClient queryPathsForPersona:reply:]
-[BRCXPCRegularIPCsClient queryLoggedInAccountDescriptorsWithReply:]
-[BRCXPCRegularIPCsClient getTotalApplicationDocumentUsageWithReply:]
Total Size
Document Count
Applications
Localized Name
Documents URL
Icons
-[BRCXPCRegularIPCsClient getApplicationDocumentUsageInfoForBundleID:withReply:]
-[BRCXPCRegularIPCsClient hasOptimizeStorageWithReply:]
-[BRCXPCRegularIPCsClient setStorageOpimizationEnabled:reply:]
-[BRCXPCRegularIPCsClient evictOldDocumentsWithReply:]
-[BRCXPCRegularIPCsClient getContainersByID:]
-[BRCXPCRegularIPCsClient getContainerForMangledID:personaID:reply:]
-[BRCXPCRegularIPCsClient resolveConflictWithName:atURL:reply:]
-[BRCXPCRegularIPCsClient didReceiveHandoffRequestForBundleID:reply:]
account
-[BRCXPCRegularIPCsClient _loggedInUserPropertyValuesForKeys:error:]
-[BRCXPCRegularIPCsClient getLoggedInUserPropertyValuesForKeys:reply:]
isSharingPrivateInterfaceEntitled
-[BRCXPCRegularIPCsClient setupInstanceWithDict:reply:]
-[BRCXPCRegularIPCsClient resetBudgets:reply:]
global
-[BRCXPCRegularIPCsClient performSelfCheck:reply:]
self check failed: broken invariant
-[BRCXPCRegularIPCsClient printStatus:containerID:reply:]
-[BRCXPCRegularIPCsClient dumpDatabaseTo:containerID:personaID:includeAllItems:reply:]
-[BRCXPCRegularIPCsClient dumpCoordinationInfoTo:reply:]
-[BRCXPCRegularIPCsClient _gatherInformationForPath:session:reply:]
-[BRCXPCRegularIPCsClient gatherInformationForPath:reply:]
-[BRCXPCRegularIPCsClient simulateHealthIssueWithContainer:status:reply:]
clientInfo
newStatus
-[BRCXPCRegularIPCsClient healthStatusStringForContainer:reply:]
-[BRCXPCRegularIPCsClient zoneNameForContainer:reply:]
-[BRCXPCRegularIPCsClient forceSyncZoneHealthWithBarrierWithTimeout:reply:]
zone-health sync timed-out
-[BRCXPCRegularIPCsClient forceSyncWithBarrierContainerID:timeout:reply:]
sync-down timed out: %@
-[BRCXPCRegularIPCsClient refreshSharingStateForItemIdentifier:reply:]
itemIdentifier
rootURL
-[BRCXPCRegularIPCsClient forceSyncContainerID:reply:]
-[BRCXPCRegularIPCsClient iWorkForceSyncContainerID:ownedByMe:reply:]
-[BRCXPCRegularIPCsClient waitForFileSystemChangeProcessingWithReply:]
-[BRCXPCRegularIPCsClient createContainerWithID:ownerName:reply:]
-[BRCXPCRegularIPCsClient computePurgeableSpaceForAllUrgenciesWithReply:]
v32@?0@"NSDictionary"8@"NSNumber"16@"NSError"24
-[BRCXPCRegularIPCsClient purgeAmount:withUrgency:reply:]
-[BRCXPCRegularIPCsClient reclaimAmount:withUrgency:reply:]
-[BRCXPCRegularIPCsClient launchItemCountMismatchChecksAtURL:reply:]
-[BRCXPCRegularIPCsClient launchSyncConsistencyChecksWithReply:]
-[BRCXPCRegularIPCsClient pauseSyncConsistencyWithReply:]
-[BRCXPCRegularIPCsClient resumeSyncConsistencyWithReply:]
-[BRCXPCRegularIPCsClient cancelTreeConsistencyCheckWithReply:]
-[BRCXPCRegularIPCsClient createAccountWithACAccountID:dsid:reply:]
accountID
-[BRCXPCRegularIPCsClient logoutAccountWithACAccountID:reply:]
was successful
Failed to destroy account
-[BRCXPCRegularIPCsClient updateAccountDisplayName:reply:]
-[BRCXPCRegularIPCsClient invalidateAccountCacheWithReply:]
-[BRCXPCRegularIPCsClient jetsamCloudDocsAppsWithReply:]
-[BRCXPCRegularIPCsClient getContainersNeedingUpload:]
-[BRCXPCRegularIPCsClient setMigrationStatus:forDSID:shouldUpdateAccount:reply:]
-[BRCXPCRegularIPCsClient getMigrationStatusForPrimaryiCloudAccount:]
-[BRCXPCRegularIPCsClient getSyncState:reply:]
com.apple.fileprovider.acl-read
(3, 4)
SELECT DISTINCT item_localsyncupstate FROM client_items WHERE item_localsyncupstate IN %@       AND NOT item_id_is_documents(item_id)       AND item_scope = 2
-[BRCXPCRegularIPCsClient getBookmarkDataForURL:onlyAllowItemKnowByServer:allowAccessByBundleID:reply:]
-[BRCXPCRegularIPCsClient resolveFileObjectIDsToContentRecordIDs:reply:]
-[BRCXPCRegularIPCsClient resolveFileObjectIDToURL:reply:]
-[BRCXPCRegularIPCsClient resolveFileObjectIDToURL:reply:]_block_invoke
-[BRCXPCRegularIPCsClient resolveBookmarkDataToURL:reply:]
does not have
Not Entitled
-[BRCXPCRegularIPCsClient resolveBookmarkDataToURL:reply:]_block_invoke_2
-[BRCXPCRegularIPCsClient getBackReferencingContainerIDsForURLs:reply:]
-[BRCXPCRegularIPCsClient getApplicationStatus:]
-[BRCXPCRegularIPCsClient getApplicationStatusForProcess:reply:]
-[BRCXPCRegularIPCsClient getLastSyncDateWithReply:]
-[BRCXPCRegularIPCsClient getLocalizedLastSyncWithReply:]
CLOUD_DRIVE_LAST_UPDATED_JUST_NOW
CLOUD_DRIVE_LAST_UPDATED_N_MINUTES_AGO
CLOUD_DRIVE_LAST_UPDATED_AT_TIME_FORMAT
CLOUD_DRIVE_LAST_UPDATED_YESTERDAY
EEEE
CLOUD_DRIVE_LAST_UPDATED_WEEKDAY_FORMAT
CLOUD_DRIVE_LAST_UPDATED_ON_DATE_FORMAT
-[BRCXPCRegularIPCsClient getContainerStatusWithID:reply:]
-[BRCXPCRegularIPCsClient getContainerLastServerUpdateWithID:reply:]
-[BRCXPCRegularIPCsClient getIsContainerWithIDOverQuota:reply:]
-[BRCXPCRegularIPCsClient currentNotifRankWithReply:]
-[BRCXPCRegularIPCsClient enumerateItemsInFolder:sortOrder:offset:limit:completion:]
v24@?0@"BRQueryItem"8@"BRCDirectoryItem"16
-[BRCXPCRegularIPCsClient enumerateAllFoldersWithSortOrder:offset:limit:completion:]
B16@?0@"BRQueryItem"8
-[BRCXPCRegularIPCsClient enumerateWorkingSetChangesFromChangeToken:limit:completion:]
v40@?0@"NSArray<NSFileProviderItem>"8@"NSArray"16@"NSData"24@"NSError"32
v40@?0@"CKRecordID"8@"NSString"16@"CKAsset"24@"NSError"32
-[BRCXPCRegularIPCsClient forceConflictForURL:bookmarkData:forcedEtag:reply:]
-[BRCXPCRegularIPCsClient setiWorkPublishingInfoAtURL:publish:readonly:reply:]
-[BRCXPCRegularIPCsClient getiWorkPublishingInfoAtURL:reply:]
-[BRCXPCRegularIPCsClient getiWorkPublishingBadgingStatusAtURL:reply:]
-[BRCXPCRegularIPCsClient getiWorkNeedsShareMigrateAtURL:reply:]
-[BRCXPCRegularIPCsClient startOperation:toCopySharingInfoWithItemID:reply:]
isSharingProxyEntitled
-[BRCXPCRegularIPCsClient startOperation:toCopySharingWebAuthTokenForContainerID:reply:]
-[BRCXPCRegularIPCsClient startOperation:toCopyDocumentURLForRecordID:syncIfNeeded:reply:]
-[BRCXPCRegularIPCsClient startOperation:toCopyDocumentURLForRecordID:syncIfNeeded:reply:]_block_invoke
-[BRCXPCRegularIPCsClient startOperation:toCopyAvailableQuotaWithReply:]
canFetchUserQuota
-[BRCXPCRegularIPCsClient startOperation:toEvictItemAtURL:reply:]
-[BRCXPCRegularIPCsClient startOperation:toUploadAllFilesInContainer:reply:]
-[BRCXPCRegularIPCsClient copyCurrentUserIdentifierWithReply:]
-[BRCXPCRegularIPCsClient copyCurrentUserNameAndEmailWithReply:]
-[BRCXPCRegularIPCsClient copyCurrentUserNameAndDisplayHandleWithReply:]
-[BRCXPCRegularIPCsClient copyCollaborationIdentifierForItemAtURL:reply:]
-[BRCXPCRegularIPCsClient copyCollaborationIdentifierForFileObjectID:reply:]
-[BRCXPCRegularIPCsClient createSharingInfoForItemID:reply:]
-[BRCXPCRegularIPCsClient startOperation:toSaveSharingInfo:reply:]
isFolderSharingProxyEntitled
-[BRCXPCRegularIPCsClient startOperation:toUnshareShare:forceDelete:reply:]
-[BRCXPCRegularIPCsClient startOperation:toLookupShareParticipants:reply:]
-[BRCXPCRegularIPCsClient startOperation:toModifyRecordAccessWithItemID:allowAccess:reply:]
-[BRCXPCRegularIPCsClient startOperation:toCopyParticipantTokenWithItemID:reply:]
-[BRCXPCRegularIPCsClient startOperation:toPrepFolderForSharingWithItemID:reply:]
-[BRCXPCRegularIPCsClient startOperation:toProcessSubitemsWithItemID:maxSubsharesFailures:processType:reply:]
-[BRCXPCRegularIPCsClient startOperation:toAcceptShareLink:skipAcceptDialogs:reply:]
isAutomationEntitled
-[BRCXPCRegularIPCsClient copyBulkShareIDsAtURLs:reply:]
-[BRCXPCRegularIPCsClient startOperation:toCopyShareURLForShare:appName:reply:]
-[BRCXPCRegularIPCsClient getCreatorNameComponentsForURL:reply:]
-[BRCXPCRegularIPCsClient getShareOptionsOfItemIdentifier:reply:]
-[BRCXPCRegularIPCsClient _presentAcceptDialogsWithMetadata:reply:]
-[BRCXPCRegularIPCsClient handleCloudKitShareMetadata:completionHandler:]
-[BRCXPCRegularIPCsClient removeItemFromDisk:reply:]
-[BRCXPCRegularIPCsClient trashItemAtURL:reply:]
-[BRCXPCRegularIPCsClient _t_extractMetadataForAllContainersWithReply:]
-[BRCXPCRegularIPCsClient lookupExcludedFilenamesForLogoutWithReply:]
-[BRCXPCRegularIPCsClient lookupExcludedExtensionsForLogoutWithReply:]
-[BRCXPCRegularIPCsClient lookupMinFileSizeForThumbnailTransferWithReply:]
-[BRCXPCRegularIPCsClient checkIfItemIsShareableWithInode:reply:]
com.apple.internal.fileprovider.in-place-collaboration
-[BRCXPCRegularIPCsClient pauseSyncForFileAtURL:timeout:options:reply:]
-[BRCXPCRegularIPCsClient resumeSyncForFileAtURL:dropLocalChanges:reply:]
-[BRCXPCRegularIPCsClient fetchLatestVersionForFileAtURL:reply:]
-[BRCXPCRegularIPCsClient _sendPausedFileListBatchToUpdater:fromRowID:batchSize:completion:]
-[BRCXPCRegularIPCsClient getPausedFilesList:reply:]
-[BRCXPCRegularIPCsClient queryLastCiconiaVersion:]
-[BRCXPCRegularIPCsClient signalStartOfSilentTelemetry:uuid:manual:version:reply:]
-[BRCXPCRegularIPCsClient reportItemMismatchDuringSilentMigration:information:uuid:reply:]
-[BRCXPCRegularIPCsClient reportCleanupFailureDuringSilentMigration:operationType:uuid:reply:]
-[BRCXPCRegularIPCsClient reportOverBounceDuringSilentMigration:total:uuid:reply:]
-[BRCXPCRegularIPCsClient reportFinishedMigration:uuid:reply:]
%llu
Ciconia
MigrationFailure
-[BRCXPCRegularIPCsClient queryTelemetryEnablement:]
-[BRCXPCRegularIPCsClient corruptDatabase:]
Testing brctl reset corrupt-db
Can't use iCloud Drive.
The disk is full.
Free some space on your disk?
Unknown platform linking against CloudDocs framework %d
sync-down/periodic-sync
unreachable: No error found
v32@?0@"CKRecordZoneID"8@"NSError"16^B24
useful
useless
wants-fault
start-dl
wants-thumb
fault 
contents 
for-thumb 
thumbnail 
user-qos 
 error:%@
downError
serverName
flags
zone-health-report
pkg:%lld%s p:'%@' rank:%lld ino:%lld
 (dirty)
 dir
 file gen:%@ size:%llu mtime:%llu mode:%s
 sig:%@
 link to:'%@'
 quarantine:%u 
 xattrSig:%@
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/items/BRCPackageItem.m
+[BRCPackageItem packageItemsForItem:order:]
ready in %.3fs
<deadline %@: %@>
q24@?0@"BRCDeadlineSource"8@"BRCDeadlineSource"16
deadline-sheduler
needs-sync-down
in-sync-up
in-sync-down
last-sync-was-up
has-synced-down
prefer-sync-down
oob-sync-ack
BRCSyncContextDidBecomeBackground
BRCSyncContextDidBecomeForeground
<%@: %@ %p>
%@-metadata
v32@?0Q8q16@?<v@?>24
com.apple.bird.foreground.state
+ foreground clients:
   o %@ [container]
   o %@
   o %@ [grace period] disconnected %.1fs ago
   o forced foreground
   o always foreground
unknown bundle ID
Handoff request
fetch-quota
SELECT shared_by_me_count | shared_to_me_count, dir_faults_count FROM item_recursive_properties WHERE item_rowid = %lld
SELECT IFNULL(shared_children_count, 0) | IFNULL(shared_alias_count, 0) FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT shared_by_me_count, dir_faults_count FROM item_recursive_properties WHERE item_rowid = %lld
SELECT shared_children_count FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT shared_to_me_count, dir_faults_count FROM item_recursive_properties WHERE item_rowid = %lld
SELECT shared_alias_count FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT over_quota_count FROM item_recursive_properties WHERE item_rowid = %lld
SELECT dir_faults_count FROM item_recursive_properties WHERE item_rowid = %lld
SELECT faults_count FROM item_recursive_properties WHERE item_rowid = %lld
SELECT 1 FROM item_recursive_properties WHERE item_rowid = %lld AND (needs_download_count != 0 OR needs_dl_unstage_count != 0)
SELECT 1 FROM item_recursive_properties WHERE item_rowid = %lld AND (needs_sync_up_count != 0 OR needs_upload_count != 0)
WITH RECURSIVE pending_delete_children (item_id, item_type, needs_delete_doc_count) AS (     SELECT item_id, item_type, needs_delete_doc_count FROM item_recursive_properties      WHERE item_rowid = %llu AND needs_delete_doc_count != 0  UNION ALL     SELECT ip.item_id, ip.item_type, ip.needs_delete_doc_count FROM item_recursive_properties AS ip INNER JOIN pending_delete_children AS p WHERE ip.item_parent_id = p.item_id AND ip.zone_rowid = %@ AND ip.needs_delete_doc_count != 0) SELECT 1 FROM pending_delete_children AS pdc WHERE pdc.needs_delete_doc_count != 0 AND pdc.item_type IN (1, 2, 8) LIMIT 1
SELECT 1 FROM client_items WHERE item_parent_id = %@ AND item_state = 1 AND item_parent_zone_rowid = %@ LIMIT 1
SELECT 1 FROM client_items WHERE item_parent_id = %@    AND item_state IN (0, -1)   AND item_parent_zone_rowid = %@ LIMIT 1
SELECT DISTINCT zone_rowid FROM client_items WHERE item_parent_id = %@   AND item_parent_zone_rowid = %@    AND item_localsyncupstate = 4   AND item_state IN (0, -1, 1)
SELECT SUM(dir_faults_count), SUM(faults_count), SUM(needs_faulting_count), SUM(uploaded_size), SUM(needs_upload_size), SUM(uploaded_count), SUM(needs_upload_count), SUM(downloaded_size), SUM(needs_download_size), SUM(downloaded_count), SUM(needs_download_count), SUM(dl_unstaged_count), SUM(needs_dl_unstage_count), SUM(synced_up_count), SUM(needs_sync_up_count), SUM(over_quota_count), SUM(shared_by_me_count), SUM(shared_to_me_count), SUM(needs_delete_doc_count) FROM item_recursive_properties WHERE item_parent_id = %@ AND item_parent_zone_rowid = %@
INSERT OR REPLACE INTO item_recursive_properties (item_rowid, item_id, item_parent_id, item_type, zone_rowid, item_parent_zone_rowid) VALUES (%llu, %@, %@, %u, %@, %@)
UPDATE item_recursive_properties SET item_type = %d, dir_faults_count = dir_faults_count + 1 WHERE item_rowid = %lld
UPDATE item_recursive_properties SET item_type = %d, dir_faults_count = dir_faults_count - 1 WHERE item_rowid = %lld
UPDATE item_recursive_properties SET item_type = %d WHERE item_rowid = %lld
shared_to_me_count = shared_to_me_count + 1
shared_by_me_count = shared_by_me_count + 1
UPDATE item_recursive_properties SET %@ WHERE item_rowid = %lld
shared_to_me_count = shared_to_me_count - 1
shared_by_me_count = shared_by_me_count - 1
UPDATE client_items AS parent SET visible_child_count = (SELECT COUNT(*) FROM client_items AS child WHERE child.item_parent_id = parent.item_id AND child.item_parent_zone_rowid = parent.zone_rowid AND (child.item_user_visible = 1 OR (child.item_scope == 3 AND child.item_filename != ".Trash"))) WHERE parent.item_id = %@ AND parent.zone_rowid = %@
INSERT INTO client_items ( rowid, zone_rowid, version_mtime, visible_child_count, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier) VALUES ( %lld, %@, %lld, 0, %@, %@, %ld, %@, %@, %d, %lld, %lld, %@, %@, %d, %@, %d, %d, %d, %lld, %lld, %lld, %@, %@, %d, %@, %@, %@, %@, %@, %@, %@, %@, %u, %@, %d, %llu, %@)
UPDATE client_items   SET item_parent_id = %@,       item_parent_zone_rowid = %@ WHERE item_parent_id = %@   AND item_parent_zone_rowid = %@
DELETE FROM client_items WHERE item_parent_id = %@   AND item_parent_zone_rowid = %@   AND item_state = -2
SELECT si.rowid FROM server_items AS si INNER JOIN client_unapplied_table AS ap ON si.item_rank = ap.throttle_id WHERE si.item_parent_id = %@   AND si.zone_rowid = %@   AND si.item_type = 3   AND ap.throttle_state = 24
UPDATE client_items SET item_id = %@, item_creator_id = %@, item_sharing_options = %ld, item_side_car_ckinfo = %@, item_parent_zone_rowid = %@, item_localsyncupstate = %d, item_local_diffs = %llu, item_notifs_rank = %lld, app_library_rowid = %@, item_min_supported_os_rowid = %@, item_user_visible = %d, item_stat_ckinfo = %@, item_state = %d, item_type = %d, item_mode = %d, item_birthtime = %lld, item_lastusedtime = %lld, item_favoriterank = %lld, item_parent_id = %@, item_filename = %@, item_hidden_ext = %d, item_finder_tags = %@, item_xattr_signature = %@, item_trash_put_back_path = %@, item_trash_put_back_parent_id = %@, item_alias_target = %@, item_creator = %@, item_processing_stamp = %@, item_staged_file_id = %@, item_staged_generation = %u, item_bouncedname = %@, item_scope = %d,item_local_change_count = %llu, item_old_version_identifier = %@, version_mtime = %lld  WHERE rowid = %llu
DELETE FROM client_items WHERE item_parent_id = %@ AND item_parent_zone_rowid = %@ AND item_state = -2
UPDATE client_items SET item_parent_id = call_block(%@, item_state, app_library_rowid, zone_rowid, item_scope),     item_localname = call_block(%@) WHERE item_parent_id = %@   AND item_parent_zone_rowid = %@
account.debug.zombie.enable
nsurlsessiond
fsevents.latency
fsevents.reset-backoff
fsreader.container.throttle
fsreader.lost.throttle
fsreader.lost.backoff
fsreader.scan.batch-size
fsreader.coordination.count
fsreader.coordination.delay
fsreader.coordination.throttle
fswriter.apply.throttle
fswriter.apply.batch-size
fswriter.coordination.count
fswriter.coordination.delay
operation.failure.throttle
container.reset.throttle
shared-container.reset.throttle
container.reset.alias-removal.throttle
sync.container.throttle
sync.container.error.throttle
transfer.download.throttle
transfer.upload.throttle
sync-up.error.per-item.throttle
transfer.upload.file-modified.throttle
stage.gc.xpc
cachedelete-push.xpc
system.reachability
system.power
system.lowdisk
transfer.batch-size.min
transfer.width.max
transfer.width.min
transfer.budget
start-after
give-up-after
wait-at-least
wait-at-most
forget-after
max-elemnt-count
predicate
platforms
sync-throttles
success-ratio
quota-clear-ratio
error-ratio
kickback-delay
kickback-ratio
interval
delay
grace
repeat
priority
battery
screen.sleep
powernap
disk-intensive
container.greedy
url.publish-timeout
server-config-url
defaults.clouddocs.
com.apple.bird.defaults-manager
com.apple.bird.defaults-manager-callback
v16@?0@"NSNotification"8
 (URL %@)
 (original URL: %@, current URL %@)
fetch-configuration
CloudDocs
server-conflig.plist
server-only
q24@?0@"NSString"8@"NSString"16
@16@?0@8
fs.xattr-max-size
fs.preserved-xattr-max-size
sync.down.fetch-all-changes
sync.down.batchsize
sync.up.batchsize
list-dir.batchsize
list-dir.cancel-delay
applyscheduler.rescheduleItemsRecursively.batchsize
sync.up.batchsize.decrease.factor
sync.up.batchsize.increase
sync.appcontainers.batchsize
sync.down.sharequerysize
fs.maxdepth
sync.maxdepth
container.local.treeEnumerator
fs.pkg.extensions
_ulstyle
_ultheme
abbu
acplugin
action
adiumemoticonset
adiumicon
adiumlibpurpleplugin
adiumlistlayout
adiumlisttheme
adiummenubaricons
adiummessagestyle
adiumplugin
adiumscripts
adiumserviceicons
adiumsoundset
adiumstatusicons
adjustments
agilekeychain
alfredpreferences
apifile
aplibrary
aplmodel
appdownload
appex
appsnapshot
assembly
assistant
avchd
band
bbpackage
bbprojectd
bentodb
bentotemplate
book
booktemplate
brushes
bundle
caction
cannedsearch
card
cardsmbornes
cbaccounts
chocoimg
cinemagraph
colloquyemoticons
colloquystyle
colorpicker
comic
component
cpimage
cplink
cptext
cpweb
cyndata
cyndicate
dashsync
dayone
dbwidget
definition
dictionary
discovery
dist
distz
dlist
docset
dsclext
dsym
dvdmedia
dvdproj
dvtplugin
dylib
effects
emberbackup
embermdbackup
embersnap
eomodeld
epub
evocamtimelapse
eyetv
eyetvloc
eyetvsched
eyetvtdmp
familyfile10
favorite
fcarch
framework
fullbackup
gbproj
gchdb
gdiagramstyle
glibb
goodnotes
gputrace
gradients
graffle
gspak
gstencil
gtemplate
haslibrary
help
highland
hptask
hsproj
huginautocp
hvfproject
hvpl
hype
hypeplugin
ibank
ibatemplate
ibooks
ibplugin
icbu
ideplugin
ilmbplugin
imovielibrary
incrementalbackup
instrdst
internetconnect
ipscannerlaunchextension
itlb
itlp
itmsp
itmsp-app
iwdgt
iwork-tmp
iwwebpackage
kext
kextcache
keychain-db
keychain
latexitplugin
latexpalette
layerstyles
lh3d
linea
listlayout
listtheme
lmnr
logarchive
logic
logicx
loginplugin
lpdf
lrdata
lslibrary
mailstationery
mbornes
mdimporter
mdlabels
menu
mftpkg
migratedaplibrary
migratedphotolibrary
mindnode
mindproj
mkext
mlproj
moneywell
monitor
monitorpanel
morphx
mpbinaries
mpkg
mproject
mqtz
mwand
nemolicense
networkconnect
neunote
nmbtemplate
nnwstyle
npbackup
octest
ofocus
ofocus-archive
ofocus-backup
ofocus-perspective
oo3template
ooxsl
oplx
opvault
osax
patch
pbproj
pbxproj
pc3calc
pc3cons
pc3conv
pc3func
pdfd
photo
photolibrary
photoslibrary
pigment
pkcs12
playground
playgroundbook
plugin
pluginkit
pocketcasd
prefpane
psdownload
ptest
pvback
pvmdb
pvoc
pvxmdb
pzdoc
qlgenerator
qtpxcomposition
quicken
quickpick
qvlibrary
qvnote
qvnotebook
radarplugin
raft
ramd
rcproject
rdarplugin
ripit
rtfd
saver
scene
scptd
scriv
scsf
sdsp
seemode
seetext
seplugin
service
sfrframe
shapes
simdevicetype
simruntime
sites
sites2
sketchpad-flat
sketchpad-pkg
skypechatstyle
slidesaver
soundhoundbookmark
soundhoundhistory
soundsmbornes
sparsebundle
spdoc
spreporter
ssdownload
storyboardc
studydeck
suggestionsassets
task
template
testrun
textbundle
textexpanderalias
textexpanderbackup
textexpanderlocal
textexpandersettings
textstyles
theater
theme
themembornes
themepack
tmbundle
tmplugin
trace
transport
ulbackup
ulproject
ulysses
vellum
viennastyle
wand
wdgt
webplugin
webtemplate
webtheme
wflow
whink
workflow
xcappdata
xcarchive
xccrashpoint
xcdatamodel
xcdatamodeld
xcmappingmodel
xcode
xcodeproj
xcplaygroundpage
xcplugin
xcprocessorusagepoint
xcresult
xcsintegration
xcsnapshots
xctest
xctoolchain
xcworkspace
xcyndicate
fs.pkg.blacklist.extensions
folder
fs.shareable.iwork.extensions
fs.bundle-bit.should-fixup.ios
fs.bundle-bit.fixup.backlist.ios
fs.greedy.extensions.ios
fs.non-auto-evictable.extensions.ios
fs.non-evictable.extensions.ios
fs.non-evictable.path-components.ios
fs.non-auto-evictable.utis.ios
fs.auto-evictable.utis.ios
doc.thumbnail-blacklist.extensions
emlx
ichat
stage.umask.file
stage.umask.fsroot
stage.umask.directory
stage.umask.package.directory
stage.umask.package.file
configuration.automatic.xpc
sync.automatic.xpc
transmogrify.xpc
quota.available.comfort-size
sync.quota.fetch-delay
apps-fetch-delay
sync-up.per-item.throttling.skip
sync-up.batch-failures.throttling.skip
sync.down.throttle
sync.up.throttle
sync.up.budget.minimal
sync.up.budget.daily.default
sync.up.budget.daily
sync.up.budget.hourly.default
sync.up.budget.hourly
sync.up.budget.minutely.default
sync.up.budget.minutely
sync.up.cost.initial-item
sync.up.cost.structure.create
sync.up.cost.structure.edit
sync.up.cost.structure.delete
sync.up.cost.data.create
sync.up.cost.data.edit
sync.up.cost.data.delete
sync.up.cost.document.create
sync.up.cost.document.edit
sync.up.cost.document.delete
sync.down.shared.coalesce.nanoseconds
db.trace
db.profile
db.batch-size
db.batch-delay
db.allow-read-only-in-ipc
db.autovacuum-batch-size
db.autovacuum-ratio
server.throttling.disable
session.should-be-greedy.ios
max-file-count
max-file-count.per-folder
upload.max-file-size
upload.max-in-pkg-file-size
upload.max-pkg-file-size
upload.batch.records.count
upload.batch.count
download.batch.records.count
download.batch.count
download.will-retry-progress.max-count
zone-health.sync-down.batch.count
shared-db.sync-down.batch.count
fsreader.scan.package-delay
applyscheduler.job-max-retries-before-assert
fsreader.lost-child.backoff
fsevents.queue-buffer-size
fsevents.process-batch-size
https://configuration.apple.com/configurations/internetservices/cloudkit/clouddocs/clouddocs-1.0.plist
min-file-size-graveyard
min-evictable-size.auto.ios
logout-timeout
foreground-grace-period
force-foreground-grace-period
force-batch-failure-when-token-expires
disk-space-reclaimer.max-access-time.low-urgency
disk-space-reclaimer.max-access-time.med-urgency
disk-space-reclaimer.max-access-time.high-urgency
disk-space-reclaimer.max-access-time.very-high-urgency
disk-space-reclaimer.eviction.default-access-time
disk-space-reclaimer.max-ondisk-access-time.low-urgency
disk-space-reclaimer.max-ondisk-access-time.med-urgency
disk-space-reclaimer.max-ondisk-access-time.high-urgency
disk-space-reclaimer.max-ondisk-access-time.very-high-urgency
disk-space-reclaimer.eviction.default-ondisk-access-time
disk-space-reclaimer.max-graveyard-time.low-urgency
disk-space-reclaimer.max-graveyard-time.med-urgency
disk-space-reclaimer.xattr-age-time
fetch-quota-interval
fetch-force-telemetry-sync-interval
disk-reclaimer.purge-pacer-interval
disk-reclaimer.db-reclaimable-space-threshold
disk-reclaimer.cache-delete-recompute-interval
maximum-document-age-to-be-greedy
statement-cache-max-count-server-truth
statement-cache-max-count-client-truth
copy-share-ids-batch-size
alias-deletion-batch-size
disk-space.minimum-required-to-download.ios
disk-space.minimum-required-to-download-user-initiated
disk-space.minimum-required-to-be-greedy.ios
disk-space.required-to-return-to-greedy-state.ios
disk-space.required-to-return-to-greedy-state.relative.ios
account-size.maximum-to-be-always-greedy
disk-space.minimum-required-to-be-functional
disk-space.check-interval
disk-space.active-download-refresh-interval
user-notification.upload
spotlight-indexer.enabled
spotlight-indexer.pacer-interval
spotlight-indexer.batch-size
spotlight-indexer.max-depth
spotlight-indexer.failure-throttle-params
migration.failure-throttle-params
global-progress.additional.wait-trigger
global-progress.additional.size-trigger
document-access.high-priority-download-interval
pkg-extension-plist.write-interval
doc.min-size-for-thumbnail
doc.thumbnail-transfer-queue-width.ios
notif.overflow-limit
notif.gather-up-to
notif.batch-size
periodic-sync-time-interval
zone-health.reported-record-names-count
sync.only-treat-caught-up-as-consistent
zone-pcs-migration.blacklist-pcs-prep
_defaultZone
zone-pcs-migration.should-prepare
pcs-chaining.max-path-depth
pcs-chaining.batch-size
sharing.destroy-iwork-shares
fsreader.lost.marklost.batchSize
fsreader.lost.deep-first-threshold
fswrite.bounce-file-max-retries
fswrite.bounce-file-report-interval
excluded-filenames-worth-warning-at-logout
excluded-filenames-worth-preservering
excluded-extensions-worth-preservering
ignored-quarantine-mask
should-auto-migrate
.carry
.internal
.internal+carry
sync.optimistic-pcs-chaining
sync.optimistic-chain-ramp
sync.reset.optimistic-chain-ramp
sync.reset.optimistic-chain
sync.aggressive-chain-ramp
aggressive-pcs-chaining
agressive-pcs-activity
should-fixup-czm-aliases
delete-shareid-batch-count
max-folder-enumeration-count
max-folder-enumeration-depth
power-log-report-interval
sqlite-cache-size.ios
sqlite-cache-spill.ios
downloader.size-refresh-interval
force-sync-override
uti-cache-size
fields-to-move-out-of-trash-mask
apply-count-to-signal-faults-live
greedy-recently-used-item-count
compute-evictable-batch-size
ck-event-metric-timeout
report-all-per-item-failures
pcs-chain-2-phase
pending-changes-soft-open
pending-changes-hard-open
pending-changes-close-delay
recursive-list.discretionary.concurrent-operation-count
recursive-list.non-discretionary.concurrent-operation-count
recursive-list.fetch-dir-fault.batch-size
db-migration-batch-size
force-delta-initial-sync
block-apply-until-list
allows-shared-directory-list-before-initial-change
allows-private-directory-list-before-initial-change
sync.save-records-directly-for-list
sync.save-records-directly-for-delta-sync
sync.save-records-directly-with-deletes
sync.server-only.folder-sharing-blacklisted
sync.fetch-content-records-inline
sync.fetch-share-records-inline
qbs-telemetry.items-fetched-per-interval
qbs-telemetry.items-fetched-check-interval
sync-up.delay-for-failure
sync-down.delay-for-failure
sync-up.backoff.delay-for-failure
sync-up.backoff.ratio-for-failure
sync-up.retry-for-failure
uploader.retry-for-failure
downloader.retry-for-failure
apply.retry-for-failure
reader.retry-for-failure
analytics.report.xpc
analytics.report.app-telemetry-gather.xpc
sync.reset.fail-if-outdated
sync.reset.fake-etag-for-fail-if-outdated
sync.side-car.use-share-reference
sync.should-migrate-fetch-share-aliases
sync.server-only.carry-partitions
p97,p98
user-initiated-max-backoff
should-pcs-chain-share-aliases
sync.stuck-throttle-delay
force-fail-if-exists-on-revival
change-item-id-on-unknown-item
zone-health.max-number-of-resets
zone-health.max-number-of-resets-for-time-interval
report-xpc-error-on-pcs-chain
czm-processing.timeout
telemetry.should-report
telemetry.event-queue-size
telemetry.event-queue-reduction
telemetry.report-batch-size
telemetry.disabled-messages
telemetry.retry-count-for-failure
telemetry.apply-scheduler-timeout
telemetry.header-send-supported-classes
telemetry.error-description-length
telemetry.benign-error-descriptions
sharing.delete-share-on-empty-save
sync-up.prevent-record-sync-without-diffs
sync-up.strip-birthtime-on-documents
sync-up.sharing.prevent-sharing-with-pending-delete
ubiquitous-migration-max-bouncing-attempts
zone-health.errors-for-reset
zone-health.errors-to-report
sync.ignored-record-names
directory/appData_com.apple.Desktop
directory/appDocuments_com.apple.Desktop
directory/appData_com.apple.Documents
directory/appDocuments_com.apple.Documents
sync.prevent-concurrent-modify-records-operations
db.integrity-check.xpc
sync.integrity-check.boosting
db.integrity-check.apply
db.integrity-check.download
db.integrity-check.upload
db.integrity-check.reader
db.integrity-check.sync-up
multiAccountsHandling
serverSideAssetCopies
uploads.supports-server-side-asset-copies
fetchParticipantDocumentToken
iwork-collaboration.fetch-participant-document-token
operation-timeout
sync-consistency.file-checksum-rate
sync-consistency.package-checksum-rate
sync-consistency.max-events-count
syncConsistencyChecker
sync.consistency-checker.enabled
syncConsistencyCheckerSnapshotting
sync.consistency-check.xpc
sync.consistency-check.deferral-check-interval
sync.consistency-check.deferral-check-leeway
sync.consistency-check.timeout
sync.container-metadata.skip-records-with-missing-assets
iwork-collaboration.max-pause-file-timeout
iwork-collaboration.auto-resume-sync-batch-size
iwork-collaboration.fetch-paused-files-batch-size
lost-scan.unknown-parent-before-deep-scan
ciconia.max-reconciliation-failures
ciconia.max-side-faults-migration
ciconia.max-migration-failure
ciconia.hide-migration-domain
ciconia.keep-migration-domain
ciconia.import-timeout
ciconia.disable-automated-start
ciconia.repeat-interval
sync.server-stitching.throttle-params
sync.subresources.fetch-loop-cache-size
sync.fetch-full-contents
telemetry.allow-force-dequeue
telemetry.force-dequeue-percentage
telemetry.high-priority-event-percentage
disk-space-reclaimer.download-stage-age-time-fpfs
create-log-section
databaseBasePath
uuid
com.apple.bird.cellular-settings
sync-down/
v32@?0@"CKServerChangeToken"8q16@"NSError"24
continuing
starting
unreachable: broken structure in op %@ change token %@
unreachable: no fetched zone and no error
<%@ error:%@ pcs:%s>
UNKNOWN_USER_GIVEN_NAME
-[BRCTermDumper initWithFd:forceColor:]
BRCTermDumper.m
_file
TERM
ansi
color
LESS
LESS=FRSX
LESSCHARSET
LESSCHARSET=utf-8
less
execvp
-[BRCTermDumper _startInCString:fgColor:bgColor:attr:]
i < 10
[%d%c
Sync down
Sync down (periodic)
Sync down (initial)
Sync down (push triggered)
Sync down (app launch)
Sync down (app library metadata)
Sync down (zone health)
List directory
Fetch parent chain
Locate record
Fetch recent documents
Sync up
Sync up (app library metadata)
Sync up (zone health)
Download (thumbnails)
Download (thumbnails user initiated)
Download (user initiated)
Download (opportunistic)
Download (optimize storage off)
Download (updated documents)
Download (conflicting versions)
Quota update (uploader)
Quota update (xpc request)
Quota update (telemetry)
Zone consolidation
Zone consolidation (manual)
Zone health simulation
Publishing request
Sync up & down (shared db)
Sharing misc.
Fetch identity (xpc request)
Purge
Fetch non local versions
OS upgrade migration
Aggressive PCS Chaining
Logout
com.apple.TextInput
com.apple.kbd
com.apple.shoebox
com.apple.passd
v24@?0@"LSBundleProxy"8^B16
com.apple.bird.apps-monitor
com.apple.bird.apps-monitor.fetch-apps
com.apple.bird.apps-monitor.callback
apps-refetch-pacer
apps monitor
app library IDs by App ID
=======================
app IDs by app library IDs
<undef>
SELECT item_id FROM client_items   WHERE rowid = %lld
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE item_doc_id = %u   AND +item_state IN (0, -1)   AND +item_type IN (1, 2, 8, 6, 7)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE rowid = %lld
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items  WHERE item_file_id = %lld    AND item_state IN (0, -1)
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE item_alias_target = %@ AND item_type = 3 AND item_state = 0 %@ ORDER BY item_id
AND +zone_rowid = %@
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE item_alias_target = %@ AND item_type = 3 AND +zone_rowid = %@ ORDER BY item_id
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE item_id = %@ AND zone_rowid = %@
WITH RECURSIVE item_parents (item_id, zone_rowid) AS (     SELECT item_parent_id, item_parent_zone_rowid FROM client_items      WHERE zone_rowid = %@ AND item_id = %@  UNION ALL     SELECT li.item_parent_id, li.item_parent_zone_rowid FROM client_items AS li INNER JOIN item_parents AS p USING (item_id, zone_rowid)      LIMIT %u) SELECT item_id, zone_rowid FROM item_parents WHERE item_id_is_root(item_id) OR (item_id = %@ AND zone_rowid = %@) LIMIT 1
hierarchy-too-deep
item_parent_zone_rowid = %@ AND item_parent_id = %@
zone_rowid = %@ AND item_id = %@
WITH RECURSIVE item_children_with_shared_items (item_id, zone_rowid, shared_items_count) AS (     SELECT item_id, zone_rowid, (shared_by_me_count | shared_to_me_count) FROM item_recursive_properties      WHERE %@ AND (shared_by_me_count | shared_to_me_count) != 0  UNION ALL     SELECT ip.item_id, ip.zone_rowid, (ip.shared_by_me_count | ip.shared_to_me_count) FROM item_recursive_properties AS ip INNER JOIN item_children_with_shared_items AS p WHERE ip.item_parent_id = p.item_id AND ip.item_parent_zone_rowid = p.zone_rowid AND (ip.shared_by_me_count | ip.shared_to_me_count) != 0      LIMIT %llu) SELECT ic.item_id, ic.zone_rowid, li.item_sharing_options FROM item_children_with_shared_items AS ic INNER JOIN client_items AS li WHERE ic.shared_items_count = 1 AND li.item_id = ic.item_id AND li.zone_rowid = ic.zone_rowid AND (li.item_sharing_options & 4) != 0
WITH RECURSIVE item_children_with_side_faults (item_id, zone_rowid, faults_count) AS (     SELECT item_id, zone_rowid, faults_count FROM item_recursive_properties      WHERE zone_rowid = %@ AND item_id = %@ AND faults_count != 0  UNION ALL     SELECT ip.item_id, ip.zone_rowid, ip.faults_count FROM item_recursive_properties AS ip INNER JOIN item_children_with_side_faults AS p WHERE ip.item_parent_id = p.item_id AND ip.item_parent_zone_rowid = p.zone_rowid AND ip.faults_count != 0      LIMIT %llu) SELECT ic.item_id, ic.zone_rowid FROM item_children_with_side_faults AS ic WHERE ic.faults_count = 1 AND EXISTS (SELECT 1 FROM client_items AS li WHERE li.item_id = ic.item_id AND li.zone_rowid = ic.zone_rowid AND li.item_type in (2, 7, 8))
UPDATE %@ SET app_library_rowid = %@,transfer_queue = %@ WHERE app_library_rowid = %@ AND transfer_queue = %@
UPDATE %@ SET app_library_rowid = %@ WHERE app_library_rowid = %@
FolderSharing
ShareAcceptation
error
com.apple.iCloudDrive.shareAcceptation
periodicSync
com.apple.iCloudDrive.periodicSync
containerReset
com.apple.iCloudDrive.containerReset
applyFailure
com.apple.iCloudDrive.applyFailure
PCSChaining
PCSChainingTime
numOfUnchainedFiles
com.apple.iCloudDrive.folderSharePCSChainingTime
CKErrorDomain.2
@"NSDictionary"8@?0
%@.%ld
errorMessage
record-fetcher
unreachable: Fetch loop trying to fetch %@
B16@?0@"CKRecordID"8
 but waiting to resume
B32@?0@"CKRecordID"8@"NSString"16@"NSData"24
unreachable: Received %lu xattr records instead of expected %lu records for %@
q24@?0@"BRCFetchSubResourceRecord"8@"BRCFetchSubResourceRecord"16
v32@?0@"BRCItemID"8@"CKRecordID"16^B24
com.apple.bird.fileprovider.
file-provider
file presenters for %@
  + %@ -> %@
%@::%@
%@[%d]
com.apple.bird.cache-delete
com.apple.bird.purge-pacer
purgeableSpace
nonPurgeableSpace
purgeableSpaceDate
v24@?0@"NSDictionary"8@"NSNumber"16
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/foundation/BRCDiskSpaceReclaimer.m
-[BRCDiskSpaceReclaimer computePurgeableSpaceForAllUrgenciesWithReply:]_block_invoke_3
session/ciconia_diagnose
com.apple.bird.eviction
timed out waiting for eviction
-[BRCDiskSpaceReclaimer performOptimizeStorageWithTimeDelta:onDiskAccessTimeDelta:error:]
-[BRCDiskSpaceReclaimer _recursivelySizeDirectoryAtPath:]
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_local_change_count, item_old_version_identifier, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, version_old_zone_item_id, version_old_zone_rowid, version_local_change_count, version_old_version_identifier, desired_version, item_live_conflict_loser_etags, item_file_id, item_generation, version_block_sync_until_bundle_id, version_block_sync_until_timestamp FROM client_items WHERE item_type IN (8, 10) AND zone_rowid = %@
client-state
<%@ %p, %@>
com.apple.brc.system-resources
com.apple.system.powermanagement.SystemLoadAdvisory
good
v32@?0@"NSNumber"8@"NSHashTable"16^B24
memory-notif-pacer
com.apple.CloudDocs.MobileDocumentsFileProvider
com.apple.CloudDocs.MobileDocumentsFileProviderManaged
v16@?0@"NSDictionary"8
com.apple.distnoted.matching
great
ErrorName
ErrorCount
ZoneErrorCount
SyncType
ZoneType
TotalItemsCount
FolderSharingEnabled
DSID
RampNumber
LastErrorTimestamp
ChainedFiles
ErrorMessage
itemSyncUp
syncUp
syncDown
com.apple.iCloudDrive.syncStatus
com.apple.iCloudDrive.appTelemetry.folderSharingCountMismatch
mismatchCount
com.apple.iCloudDrive.appTelemetry.missingPush
numberOfZonesOutOfSync
com.apple.iCloudDrive.appTelemetry.permanentlyInconsistent
permanentlyInconsistent
com.apple.iCloudDrive.appTelemetry.droppedEvent
eventCount
com.apple.iCloudDrive.appTelemetry.testEvent
com.apple.iCloudDrive.appTelemetry.shareAliasInSharedFolder
sharedAliasInSharedFolder
%@;%@
v32@?0@"BRCErrorGrouping"8@"NSNumber"16^B24
true
false
chain sent
half chained
yyyy-MM-dd/HH:mm:ss
last-sync:%@
last-sync:never
, requestID:%llu
, inconsistent
, consistent
, caught-up
, status:%d(?)
, token:%@
lsdDate
lsdStatus
last-sync:%@ nextRank:%lld minUsedTime:%lld shared-db{%@}
nextRank
shareDatabase
migrationQuery
minUsedTime
unable to update the server_state
-[BRCServerPersistedState saveToDB:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/database/BRCServerPersistedState.m
%s%@:%@
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/core/shared/items/BRCLocalItem+BRCStageAdditions.m
-[BRCLocalItem(BRCStageAdditions) fixupStagedItemAtStartup]
Client
[%d]
contentSignature
-[BRFieldContentSignature writeTo:]
BRFieldContentSignature.m
SELECT li.rowid, li.zone_rowid, li.item_id, li.item_creator_id, li.item_sharing_options, li.item_side_car_ckinfo, li.item_parent_zone_rowid, li.item_localsyncupstate, li.item_local_diffs, li.item_notifs_rank, li.app_library_rowid, li.item_min_supported_os_rowid, li.item_user_visible, li.item_stat_ckinfo, li.item_state, li.item_type, li.item_mode, li.item_birthtime, li.item_lastusedtime, li.item_favoriterank,li.item_parent_id, li.item_filename, li.item_hidden_ext, li.item_finder_tags, li.item_xattr_signature, li.item_trash_put_back_path, li.item_trash_put_back_parent_id, li.item_alias_target, li.item_creator, li.item_processing_stamp, li.item_staged_file_id, li.item_staged_generation, li.item_bouncedname, li.item_scope, li.item_local_change_count, li.item_old_version_identifier, li.version_name, li.version_ckinfo, li.version_mtime, li.version_size, li.version_thumb_size, li.version_thumb_signature, li.version_content_signature, li.version_xattr_signature, li.version_edited_since_shared, li.version_device, li.version_conflict_loser_etags, li.version_quarantine_info, li.version_uploaded_assets, li.version_upload_error, li.version_old_zone_item_id, li.version_old_zone_rowid, li.version_local_change_count, li.version_old_version_identifier, li.desired_version, li.item_live_conflict_loser_etags, li.item_file_id, li.item_generation, li.version_block_sync_until_bundle_id, li.version_block_sync_until_timestamp FROM client_items AS li  INNER JOIN client_sync_up AS su    ON su.throttle_id = li.rowid  WHERE         su.throttle_state = 50    AND su.zone_rowid = %@    AND su.in_flight_diffs IS NULL    AND li.item_type IN (1, 2, 8, 5, 6, 7, 3)    AND li.item_state = 0    AND li.item_localsyncupstate = 4    AND li.item_min_supported_os_rowid IS NULL
SELECT li.rowid, li.zone_rowid, li.item_id, li.item_creator_id, li.item_sharing_options, li.item_side_car_ckinfo, li.item_parent_zone_rowid, li.item_localsyncupstate, li.item_local_diffs, li.item_notifs_rank, li.app_library_rowid, li.item_min_supported_os_rowid, li.item_user_visible, li.item_stat_ckinfo, li.item_state, li.item_type, li.item_mode, li.item_birthtime, li.item_lastusedtime, li.item_favoriterank,li.item_parent_id, li.item_filename, li.item_hidden_ext, li.item_finder_tags, li.item_xattr_signature, li.item_trash_put_back_path, li.item_trash_put_back_parent_id, li.item_alias_target, li.item_creator, li.item_processing_stamp, li.item_staged_file_id, li.item_staged_generation, li.item_bouncedname, li.item_scope, li.item_local_change_count, li.item_old_version_identifier, li.version_name, li.version_ckinfo, li.version_mtime, li.version_size, li.version_thumb_size, li.version_thumb_signature, li.version_content_signature, li.version_xattr_signature, li.version_edited_since_shared, li.version_device, li.version_conflict_loser_etags, li.version_quarantine_info, li.version_uploaded_assets, li.version_upload_error, li.version_old_zone_item_id, li.version_old_zone_rowid, li.version_local_change_count, li.version_old_version_identifier, li.desired_version, li.item_live_conflict_loser_etags, li.item_file_id, li.item_generation, li.version_block_sync_until_bundle_id, li.version_block_sync_until_timestamp FROM client_items AS li  INNER JOIN client_sync_up AS su  ON su.throttle_id = li.rowid  WHERE         su.throttle_state = 50    AND su.zone_rowid = %@    AND su.in_flight_diffs IS NULL    AND li.item_type IN (0, 9, 10, 4)    AND (li.item_state = 0)    AND li.item_localsyncupstate = 4    AND li.item_min_supported_os_rowid IS NULL
SELECT li.rowid, li.zone_rowid, li.item_id, li.item_creator_id, li.item_sharing_options, li.item_side_car_ckinfo, li.item_parent_zone_rowid, li.item_localsyncupstate, li.item_local_diffs, li.item_notifs_rank, li.app_library_rowid, li.item_min_supported_os_rowid, li.item_user_visible, li.item_stat_ckinfo, li.item_state, li.item_type, li.item_mode, li.item_birthtime, li.item_lastusedtime, li.item_favoriterank,li.item_parent_id, li.item_filename, li.item_hidden_ext, li.item_finder_tags, li.item_xattr_signature, li.item_trash_put_back_path, li.item_trash_put_back_parent_id, li.item_alias_target, li.item_creator, li.item_processing_stamp, li.item_staged_file_id, li.item_staged_generation, li.item_bouncedname, li.item_scope, li.item_local_change_count, li.item_old_version_identifier, li.version_name, li.version_ckinfo, li.version_mtime, li.version_size, li.version_thumb_size, li.version_thumb_signature, li.version_content_signature, li.version_xattr_signature, li.version_edited_since_shared, li.version_device, li.version_conflict_loser_etags, li.version_quarantine_info, li.version_uploaded_assets, li.version_upload_error, li.version_old_zone_item_id, li.version_old_zone_rowid, li.version_local_change_count, li.version_old_version_identifier, li.desired_version, li.item_live_conflict_loser_etags, li.item_file_id, li.item_generation, li.version_block_sync_until_bundle_id, li.version_block_sync_until_timestamp FROM client_items AS li  INNER JOIN client_sync_up AS su    ON su.throttle_id = li.rowid  WHERE         su.throttle_state = 50    AND su.zone_rowid = %@    AND su.in_flight_diffs IS NULL    AND li.item_state = 1    AND li.item_localsyncupstate = 4    AND NOT EXISTS(SELECT 1 FROM client_items AS ci                     WHERE li.item_id = ci.item_parent_id                      AND ci.zone_rowid = su.zone_rowid                      AND ci.item_state != -2)    AND li.item_min_supported_os_rowid IS NULL
v16@?0@"BRCItemID"8
 in the same zone
orphan.live
SELECT COUNT(*) FROM client_items  WHERE item_parent_id = %@     AND item_localsyncupstate = 4    AND NOT indexset_contains(%p, rowid)    AND zone_rowid = %@    AND item_state != -2
SELECT 1 FROM client_items AS ci  WHERE ci.version_old_zone_rowid = %@     AND %@ IN (SELECT si.item_parent_id FROM server_items AS si WHERE si.item_id = ci.version_old_zone_item_id AND si.zone_rowid = ci.version_old_zone_rowid)
orphan.tombstone
 WITH RECURSIVE item_parents (item_id, item_sharing_options, item_parent_id) AS (          SELECT item_id, item_sharing_options, item_parent_id FROM client_items           WHERE item_id = %@ AND zone_rowid = %@       UNION ALL          SELECT li.item_id, li.item_sharing_options, li.item_parent_id FROM client_items AS li     INNER JOIN item_parents AS p WHERE li.zone_rowid = %@ AND p.item_parent_id = li.item_id          LIMIT %u )        SELECT item_id FROM item_parents WHERE (item_sharing_options & 4) != 0
%@_%@_%@
sync-up/container-metadata
z:%@
r:%lld
throttle_id = %lld
throttle_id
%@:%lld
throttle_id = %lld AND zone_rowid = %@
%lld, %@
[CRIT] UNREACHABLE: should have an accountID to salt with
[ERROR] %s: %s error: %@
[ERROR] checksum from bookmark %@ is not equal to expected checksum %@ for %@
[DEBUG] 
%llx Creating a documents folder for app library %@
[ERROR] Failed to create documents folder for app library %@
[ERROR] statfs for %@ failed
[ERROR] stat for %@ failed
[CRIT] UNREACHABLE: %@'s device ID is 0!
[NOTICE] on device: %@
[CRIT] UNREACHABLE: can't resume timer scheduler when already canceled: %@
[CRIT] UNREACHABLE: Already have %@ timer registered
[CRIT] UNREACHABLE: timer scheduler already canceled: %@
[DEBUG] Reschedule %@
[DEBUG] %@ is cancelled --> Don't reschedule.
[CRIT] UNREACHABLE: Trying to reschedule %@ before resuming
[DEBUG] Reschedule %@: Nothing left. Suspending.
[DEBUG] Reschedule %@: next timer at %@
sync/side-car-fetch
[DEBUG] Saving side car changed records %@
deleted record %@
server change token %@
requestID %llu
[CRIT] UNREACHABLE: Couldn't deserialize side car info on %@
[CRIT] UNREACHABLE: Couldn't parse alias record name for %@
[DEBUG] Ignoring deleted recordID where we couldn't locate the server zone %@
[CRIT] UNREACHABLE: failed to alloc ranks when syncing down side cars for %@
[WARNING] Marking sync request in side care zone as failed because requestIDs differ %lld vs %lld
[DEBUG] Succeeded in syncing up the side car zone with requestID %lld
[DEBUG] Ignoring record of unknown type %@
[CRIT] Assertion failed: ![deletedRecordIDs containsObject:record.recordID]
[CRIT] Assertion failed: sideCarRecordsByRecordID[record.recordID] == nil
[CRIT] Assertion failed: ![deletedRecordIDs containsObject:recordID]
[CRIT] Assertion failed: sideCarRecordsByRecordID[recordID] == nil
[DEBUG] Finished syncing down side cars - %@
[ERROR] Sqlite request %@ failed on %@ with error [%@]
[ERROR] Sqlite failed on %@ with error [%@]
[CRIT] UNREACHABLE: Got really unexpected error: %@
[CRIT] %@
[ERROR] %@
[WARNING] %@
[WARNING] Possible slow statement on %@:
  binds:    %d
  changes:  %lld
  vm steps: %d (max: %lu)
  sql:      %s
  %@
[WARNING] Possible slow statement on %@:
  binds:    %d
  columns:  %d
  rows:     %ld
  vm steps: %d (max: %lu)
  sql:      %s
  %@
[CRIT] Significantly too slow SQL statement ( vm steps: %u  max:%lu ): %s
[CRIT] API MISUSE: you need to provide a radar
[CRIT] API MISUSE: you need to an index to use
[CRIT] Assertion failed: block
[CRIT] Assertion failed: _batchingPacer
[CRIT] error closing connection %@: %@
[CRIT] UNREACHABLE: Running on the connection with the wrong persona
[DEBUG] 
%llx creating operation %@
BRCOperation/? (subclass activity missing)
[DEBUG] 
%llx now using group: %@
[DEBUG] 
%llx dealloc
[CRIT] UNREACHABLE: %@ deallocated while executing
[CRIT] Assertion failed: self.finished
[DEBUG] throttle backoff: %03fs for hash:0x%016llx
[ERROR] throttle backoff is greater than max.  Failing the operation
[DEBUG] server provided backoff: %.03fs
[CRIT] %@ has been blacklisted and won't be attempted again
[DEBUG] attempting execution again in %.03fs
[DEBUG] 
%llx retrying %@
[CRIT] UNREACHABLE: there should be a group created for %@
[CRIT] UNREACHABLE: Operation %@ is missing syncContext
[DEBUG] scheduling %@
[DEBUG] 
%llx starting with throttle %@
[DEBUG] 
%llx starting %@
[DEBUG] 
%llx cancelling %@
[DEBUG] Removed %@ as dependency of cancelled op %@
[DEBUG] 
%llx finishing %@
[DEBUG] 
%llx %@%@ %@%@%@
[WARNING] We are blacklisted! Not notifying about finishing %@
[DEBUG] CloudKit account is temporarily unavailable. Invalidating account status after %@
[CRIT] Completed operation %@ with different persona than we started with
[ERROR] won't restore persona: %@
[ERROR] Can't adopt persona %@: %@
[DEBUG] Not allowed to adopt persona - should fallback persona
[DEBUG] Sending telemetry events in operation %@
[DEBUG] (%@) Queuing %@
[CRIT] Assertion failed: context
[CRIT] Assertion failed: _syncContext
[WARNING] Adding discretionary op %@ as a dependency of a non-discretionary op %@
[DEBUG] Blocking %@ on high priority operation %@
[DEBUG] Launching timeout timer of %llu seconds for operation %@
[DEBUG] Timeout expired, cancelling operation %@
[DEBUG] Timeout already expired, cancelling operation %@
[CRIT] Assertion failed: _remoteClientProxy || _ignoreMissingRemoteClientProxy
[DEBUG] 
%llx dispatching to %s
[DEBUG] 
%llx continuing on %s
sync/sharedb
[DEBUG] inserted new ownerKey %@ for %@
[DEBUG] 
%llx Handling result of creating %@ (operationID=%@): %@
[DEBUG] %@ zone %@ changed
[ERROR] %@ failed: %@
[DEBUG] 
%llx %@ done: %u zones were changed and %u deleted
[DEBUG] scheduling sync for %@
[CRIT] UNREACHABLE: there should be a container
[DEBUG] updating shared-database from %@ with token:%@ caught-up:%s
[DEBUG] 
%llx Sync: fetching changed zones in the shared-database
[WARNING] can't parse docID based bookmark
[CRIT] Assertion failed: _logicalName != nil
[CRIT] Assertion failed: !item.isBRAlias
[CRIT] Assertion failed: shareRoot
[CRIT] Assertion failed: _fileObjectID.type != BRFileObjectIDTypeDocument
[CRIT] Assertion failed: finderTags.tagsCount > 0
[WARNING] item %@ in shared zone "%@" should have share-options set (actual:%lu %@)
[ERROR] item has both or neither a public and private share %@
[CRIT] Assertion failed: [item.serverZone.dbRowID isEqualToNumber:_parentGlobalID.zoneRowID]
[CRIT] Assertion failed: !item.isZoneRoot
[CRIT] Assertion failed: item.st.stagedGenerationID == relpath.generationID.fsGenerationID.longValue
[NOTIF] %@: can't resolve the alias on disk for %@, marking it dead
[NOTIF] 
%llx generating sandbox extensions for %@
[CRIT] Assertion failed: logicalName
[CRIT] Assertion failed: physicalName.br_isSideFaultName
[NOTIF] issued sandbox extension for %@
[ERROR] failed to issue sandbox extension for %@: %@
[NOTIF] published progress for %@
[NOTIF] unpublished progress for %@
[WARNING] failed getting download progress for %@
[WARNING] failed getting upload progress for %@
[WARNING] This isn't implemented yet in FPFS: %@, %s, %u
[CRIT] Assertion failed: self.isSharedToMeTopLevelItem
[CRIT] Assertion failed: _serverZone.isSharedZone
[CRIT] Assertion failed: aliasZone.isPrivateZone
[ERROR] %@ has been CZM but we don't know it yet.  Not allowing alias sync
[DEBUG] No need to insert a dead alias when one already exists for %@
[CRIT] UNREACHABLE: Strange... An alias exists which isn't dead. Converting it to be dead for %@
[CRIT] Assertion failed: _db.isBatchSuspended
[CRIT] UNREACHABLE: Can't update to nil zone row id
[WARNING] Parent zone updated on %@, clearing ckinfo and inserting dead item
[CRIT] Assertion failed: existingAlias.isDead
[DEBUG] deleting existing alias %@ because the shared item moved here
[ERROR] no metadata for %@
[DEBUG] %@ is disabled by TCC
[DEBUG] %s: %s error: %@
[WARNING] Can't edit a readonly share for %@
[WARNING] Can't add a file to a readonly share with parent %@
[WARNING] Error trying to move shared top item %@ into trash
[WARNING] Error trying to move shared top item %@ into a shared item
[WARNING] Error trying to move shared top item %@ into another shared item %@
[DEBUG] Allowing move of top level folder share item %@
[WARNING] Top level shared item %@ moved across zone boundaries.  Allowing it
[DEBUG] Allowing server-side asset copy for shared folder transfer for %@
[WARNING] We need to download item %@ which is moving in or out of a shared zone to parent %@
[WARNING] Warning for move of shared item across zones
[DEBUG] Allowing server-side asset copy for %@
[WARNING] We need to download item %@ which is crossing zone boundaries to %@
[CRIT] Assertion failed: parent.isOwnedByMe
[CRIT] Assertion failed: !parent.isOwnedByMe
[DEBUG] Allowing server-side asset copy for subitem moving %@
[WARNING] Moving item %@ into another shared item %@
[WARNING] Moving item %@ out of the share to new parent %@
[WARNING] Moving item %@ into a different share with parent %@
[WARNING] Moving item %@ into a share with parent %@
[WARNING] Moving item with a shared child %@ into a share with parent %@
[WARNING] Moving an item with a shared child %@ into trash at parent %@
[CRIT] UNREACHABLE: br_capabilityToMoveFromURL is not supported in FPFS
[CRIT] UNREACHABLE: can't open interactive DB: %@
[CRIT] UNREACHABLE: can't open expensive DB: %@
[WARNING] Corrupting handling is already in-flight
[ERROR] Ciconia DB was dropped - domain removal will happen on next start
[CRIT] Assertion failed: argc >= 1
[CRIT] Assertion failed: !set || [set isKindOfClass:[NSIndexSet class]]
[CRIT] API MISUSE: is_parented_or_equal_to(Container, parent_id, parentId_or_Set)
[CRIT] UNREACHABLE: we have a cycle
[DEBUG] recursive update of %lld
[DEBUG] database backup detector initialized {old:%llu; new:%llu; c:%llu}
[WARNING] backup detected: ino %llu instead of %llu at '%s'
[DEBUG] failed stating '%s' %{errno}d
[DEBUG] mismatch on new control file '%s': %llu != %llu
[DEBUG] database backup detector updated {old:%llu -> %llu; new:%llu -> %llu; c:%llu -> %llu}
[WARNING] can't remove %@: %@
[CRIT] Assertion failed: sct.dbRowID
[CRIT] UNREACHABLE: saving the container state should always work
[CRIT] Assertion failed: lcz.dbRowID
[CRIT] UNREACHABLE: saving the zone state should always work
[ERROR] Failed to create server zone %@:  %@
[CRIT] UNREACHABLE: sct.dbRowID is %@ lastInsertedRow is %lld
[ERROR] trying to create server zone that already exists
[CRIT] Assertion failed: rowID
[CRIT] UNREACHABLE: got a new rowid for already existing zone (sct.dbRowID=%@ rowID=%@)
[CRIT] UNREACHABLE: Failed to update plist for zone %@: %@
[CRIT] UNREACHABLE: couldn't allocate a rowid. libraryID %@ error %@
[CRIT] Assertion failed: lib.zoneRowID
[CRIT] UNREACHABLE: saving the app library state should always work
[CRIT] Assertion failed: lib.dbRowID
[CRIT] Assertion failed: plist
[CRIT] Assertion failed: plist != nil
[CRIT] Assertion failed: mangedID
[DEBUG] this is the first time we hear of a device named '%@'
[CRIT] UNREACHABLE: can't insert device name: '%s'
[CRIT] Assertion failed: userFormattedName != nil
[DEBUG] learning name '%@' for user %@
[CRIT] Assertion failed: userIdentity
[CRIT] UNREACHABLE: can't insert user identity for name '%@': %@
[CRIT] UNREACHABLE: unable to update user identity
[CRIT] UNREACHABLE: owner %@ with no user identity
[DEBUG] Participant %@ has no user identity
[DEBUG] user %@ has identity %@
[CRIT] UNREACHABLE: nameless identity: %@ (user %@)
[CRIT] UNREACHABLE: userName shouldn't be nil
[CRIT] UNREACHABLE: can't insert user name: '%@': %@
[DEBUG] this is the first time we hear of a user named '%@'
[DEBUG] clearing needs-upgrade errors
[DEBUG] Cleaning telemetry after updating BR version
[DEBUG] Checking integrity of %s DB
[NOTICE] CloudDocs was upgraded from [%@ on %@] to [%@ on %@]
[CRIT] Assertion failed: _databaseID
[DEBUG] loaded client-state %@
[CRIT] Assertion failed: sself
[DEBUG] 
%llx db pre-flush: flushing client-state %@
[DEBUG] Saved zone state for %@
[DEBUG] Saved app library state for %@
[DEBUG] 
%llx db post flush
[CRIT] disk is full, restarting: %@
[CRIT] UNREACHABLE: Failed to enable recursive triggers - %@
[ERROR] Failed to signal reimport of %@ on startup %@
[DEBUG] Done with %@ DB: %@
[DEBUG] Opening DB %@
[ERROR] unable to truncate database: %d; %s
[ERROR] can't unlink '%@' %{errno}d
[ERROR] can't reopen db after truncate: %@
[DEBUG] Validating %s DB
[NOTICE] doing an internal fixup from %d to %d
[ERROR] can't internal fixup from version %d to %d: %@
[NOTICE] fixuping database from version %d to %d
[ERROR] can't fixup from version %d to %d: %@
[WARNING] your database comes from a compatible future (db at version %d, current is %d)
[DEBUG] no database migration required, version is current (db at version %d)
[NOTICE] migrating %s database from version %d to %d
[ERROR] can't migrate from version %d to %d: %@
[ERROR] can't set user version to %u: %@
[CRIT] Assertion failed: db_version == schema_upgrades[i].version
[CRIT] Assertion failed: db_version == DB_VERSION_CURRENT
[CRIT] Assertion failed: _serverDB.serialQueue
[CRIT] Assertion failed: _clientDB.serialQueue
[CRIT] Assertion failed: readOnlyDB.serialQueue
[DEBUG] 
%llx dumping database
[DEBUG] dumping container %@
[DEBUG] Encountered an error %@ running stmt %@
[DEBUG] dumping client zone %@
[ERROR] Failed to saved migration attempt %@: %@
[ERROR] failed unlinking '%s' %{errno}d
[ERROR] failed opening '%s' %{errno}d
[ERROR] failed stating '%s' %{errno}d
[ERROR] failed closing '%s'
[CRIT] Internal users only version %d.%03d has seen an ulterior change and needs to be reset
[CRIT] database is stale, can't be migrated (db at version %d, migration range [%d,%d])
[CRIT] database has a major version from the future: %d (want at most %d)
sync/fetch-recents
[CRIT] UNREACHABLE: Couldn't allocate ranks when fetching query %@
[DEBUG] performer already registered for %@
[CRIT] UNREACHABLE: implemented by subclass
[DEBUG] 
%llx performing migration for %@
[DEBUG] migration completed
[CRIT] Assertion failed: handler
[DEBUG] 
%llx Setting migration state. response: %@, error: %@
[DEBUG] status: %@
[DEBUG] 
%llx getting account migration status for %@
[ERROR] No ACAccount found
[DEBUG] migration status: %d
[DEBUG] 
%llx Request for CloudKit migration status done. response: %@, error: %@
[DEBUG] migration state: %@
[DEBUG] received a managed restriction changed notification - %@
[DEBUG] jetsaming %@
[ERROR] can't delete account file %{errno}d
[ERROR] failed to create account path: %@
[ERROR] can't write account ID: %@
[DEBUG] 
%llx disabling pushes, be sure to listen to activities and the like
[WARNING] setting the migration prefs because account is migrated
[WARNING] setting the migration on the account because account is migrated - and waiting for ACAccountNotification plugin
[WARNING] migration is not accepted, not loading the account for %@
[DEBUG] 
%llx loaded system account ID: %@ (db ID: %@, disk ID: %@, path: %@, current persona: %@ (%@), account's persona: %@ (%@))
[DEBUG] 
%llx deleting account on disk
[CRIT] UNREACHABLE: disk account ID (%@) doesn't match system account ID (%@)
[CRIT] UNREACHABLE: not loading account %@ because we cannot create set account id on disk
[DEBUG] 
%llx Loading current on-disk account: %@
[NOTICE] using account %@
[CRIT] Assertion failed: [account isDataSeparatedAccount]
[ERROR] Added domain %@ with error: %@
[INFO] Waiting for fileprovider to add domain %@
[DEBUG] 
%llx jetsaming clients
[CRIT] Assertion failed: session
[DEBUG] removing '%@'
[ERROR] can't remove account %{errno}d
[CRIT] timed out waiting for %u seconds for account session to close!
[DEBUG] 
%llx destroying current session
[ERROR] failed loading salt: %@
[CRIT] UNREACHABLE: can't load salt, bad bug ahead
[NOTICE] generating new ubiquity token
[ERROR] failed creating salt directory '%@': %@
[ERROR] failed writing salt data to '%@': %@
[ERROR] failed excluding salt data at '%@' from backups: %@
[ERROR] Failed to open account session: %@
[ERROR] Your database is from the future, disabling iCloud Drive (%@)
[DEBUG] No space on disk to open the db
[DEBUG] Local session state has beeen resetted, try opening the session for the second time
[DEBUG] Starting up at %@
[DEBUG] 
%llx creating account session for %@
[CRIT] Assertion failed: _session == nil
[WARNING] we are already logged in %@
[CRIT] Assertion failed: [BRDSIDString brc_dbAccountDSIDForPath:self.accountPath] == nil || [[BRDSIDString brc_dbAccountDSIDForPath:self.accountPath] isEqualToString:accountID]
[DEBUG] 
%llx destroying account for %@
[NOTICE] stop using account %@
[CRIT] Assertion failed: [_dbAccountDSID isEqualToString:_session.accountDSID]
[DEBUG] 
%llx creating account for %@
[NOTICE] now using account %@
[ERROR] can't create account session: %@
[DEBUG] sending apps account change notification
[WARNING] Asking account status for %@
[WARNING] Triggering migration for %@
[DEBUG] current account is: %@
[DEBUG] iCloud Drive is disabled for %@
[DEBUG] Account is not migrated to iCloud Drive %@
[ERROR] can't remove account belonging to account %@ at %@ %{errno}d
[DEBUG] Account hasn't really changed, do nothing
[DEBUG] Cleaning up session on disk belonging to account %@
[DEBUG] Cleaning up previous session belonging to account %@, to make room for new account %@
[WARNING] we seem to have logged out while migrating account (%s)
[CRIT] UNREACHABLE: the main account (%s) doesn't match the one we have (%s)
[ERROR] can't set the migrated bit on %@: %@
[DEBUG] saved the migration bit
[DEBUG] account property is already set
[DEBUG] migration already completed
[NOTICE] setting migration complete on %@
[DEBUG] saved the bit
[CRIT] Assertion failed: folderType >= BRCSyncedFolderTypeMin && folderType <= BRCSyncedFolderTypeMax
[CRIT] Assertion failed: syncPolicy
[CRIT] Assertion failed: syncPolicy == BRCSyncedFolderPolicyEnabled || syncPolicy == BRCSyncedFolderPolicyDisabled
[DEBUG] No one is waiting on %@ anymore so cancelling
[DEBUG] We have observers again for %@ so not cancelling yet
BRCAutoCancelOperation/? (subclass activity missing)
[DEBUG] %@ finished listing batch with cursor %@
[DEBUG] Dropping list directory database because of a token fetch error - %@
[DEBUG] Dropping list directory database because server change token differes %@ vs %@
[DEBUG] Finished listing directory contents of %@
[WARNING] Not trying to promote %@ to a normal directory
[DEBUG] list query is already completed.  Just finishing it %@
[DEBUG] Continuing list query %@ from cursor %@
[DEBUG] Starting new list query %@
[DEBUG] Fetching the root as well of this share accept fault
[DEBUG] Listing directory contents of %@: Got record: ID [%@] Type [%@], error %@
[CRIT] Assertion failed: !continuationCursor
[DEBUG] Listing directory contents of %@
[DEBUG] Listing directory contents of %@ took [%f] Secs and fetched [%llu,%llu] records [%llu] xattrs
[WARNING] Can't list anymore in the middle of a rec-list operation
[CRIT] Assertion failed: !childID.isDocumentsFolder
[CRIT] Assertion failed: ![self->_itemsToList containsObject:childID]
[DEBUG] %@ listing next item %@
[WARNING] ItemID %@ isn't able to be listed
[CRIT] Assertion failed: ![self->_itemsFailedListing containsObject:itemID]
[DEBUG] Continuing %@ after encountering a ignorable error for %@
[CRIT] Assertion failed: _st.type == BRC_ITEM_TYPE_FINDER_BOOKMARK || _st.type == BRC_ITEM_TYPE_FINDER_BOOKMARK_FAULT
[CRIT] UNREACHABLE: -asShareableItem called on a non-shareable item
[DEBUG] Failed to defer the activity for analytics
[DEBUG] Reporting analytics metrics
[DEBUG] iCloud Analytics collection has been disabled, unregistering xpc_activity
[ERROR] Failed to continue the xpc activity
[DEBUG] Checking sync consistency
[DEBUG] iCloud Analytics collection is disabled, unregistering xpc_activity
[WARNING] Telemetry timed out waiting for the apply scheduler
[ERROR] Failed to finish the app telemetry xpc activity
[ERROR] Failed to defer the app telemetry xpc activity
[DEBUG] Defering app telemetry gather for now
[ERROR] Failed to set the app telemetry xpc activity state to done
[DEBUG] Finishing app telemetry gather because the session logged out
[CRIT] UNREACHABLE: We are already checking telemetry on %@
[ERROR] Failed to finish the app telemetry activity
[CRIT] UNREACHABLE: %@ should be a directory
[DEBUG] Already have a deferral timer registered
[DEBUG] Can't defer the sync consistency activity
[WARNING] Deferring the sync consistency checker
[DEBUG] Already have a cancellation timer registered
[WARNING] Cancelling the sync consistency checker because it timed out
[ERROR] error connecting to telemetry-disk-checker xpc service: %@
[DEBUG] Successfully resumed existing tree consistency operation
[DEBUG] Failed resuming tree consistency operation
[DEBUG] Deferring activity because a snapshot already exists
[DEBUG] Failed to defer the xpc activity
[WARNING] Client zone %@ has a sync up backoff ratio of %f which is too large
[WARNING] Client zone %@ has a sync up backoff delay of %f which is too large
[CRIT] Assertion failed: [metric.eventName isEqualToString:kind]
[DEBUG] analytics: creating %@ event for fileID %lld
[DEBUG] analytics: creating %@ event
[CRIT] Assertion failed: _telemetryEventCount >= 0
[DEBUG] The server has detected a problem on the client. Resetting all sync telemetry
[DEBUG] updating telemetry token %@ -> %lld
[CRIT] Assertion failed: _currentTelemetryToken.longLongValue == [persistedState telemetryToken]
[DEBUG] Dequeued %lu telemetry events to send with token %lld (size %lu)
[DEBUG] There are more telemetry events to dequeue
[WARNING] Not submitting event which is disabled %u
[DEBUG] Inserting telemetry event %u
[CRIT] Assertion failed: priority <= 1
[DEBUG] Dropping telemtry events due to queue overflow
[DEBUG] Force Telemetry Deque passed the minimum interval
[CRIT] Assertion failed: self->_telemetryEventCount == 0
[NOTICE] Telemetry dequeue already queued
[NOTICE] Forcing telemetry events dequeue
[NOTICE] Will update cache with new value: %d
[NOTICE] Fetching telemetry status
[ERROR] Failed querying iCloud telemetry configuration: %@
[CRIT] UNREACHABLE: configuration dictionary missing analytics key
[DEBUG] associated %@ to event metric %@
[CRIT] UNREACHABLE: needs override
[DEBUG] analytics: submitting event %@
[CRIT] UNREACHABLE: Failed to compute the pcs chain status and zone rowid for item row %lld - %@
[CRIT] Assertion failed: _totalZoneCount == 0
[CRIT] UNREACHABLE: No service with code %d
[DEBUG] Item with row %llu has an item not scheduled for download
[CRIT] UNREACHABLE: Got unexpected item depth: %d
[DEBUG] Item with row %llu has an item not scheduled for upload
[DEBUG] Item with row %llu has an item not scheduled for sync up
[DEBUG] Item with row %llu has an item with a missing sync up throttle
[DEBUG] Item with row %llu has an item with a missing upload throttle
[DEBUG] Item with row %llu has an item with a missing download throttle
[DEBUG] Generated sync health report with upload failures:%@
download failures:%@
sync up failures:%@
zone sync up errors:%@
zone sync down errors:%@
[DEBUG] The share changed while we were checking telemetry on %@ but we already reported an error
[WARNING] Telemetry report at %@ finished with error %@ retry count %llu
[DEBUG] Telemetry report at %@ succeeded
[WARNING] Telemetry report at %@ did not run
[DEBUG] Telemetry sync consistency report succeeded with %lu error and %lu warning events
[WARNING] Telemetry sync consistency report did not run
[ERROR] Failed to unmount old snapshot - %@
[ERROR] Failed to delete old snapshot - %@
[ERROR] Failed to generate snapshot at %@ - %@
[ERROR] Failed to mount snapshot at %@ - %@
[CRIT] UNREACHABLE: state is of unexpected class %@
[CRIT] UNREACHABLE: update time is of unexpected class %@
[DEBUG] We don't have a container for %@
[DEBUG] 
%llx starting a fetch-record-changes operation for health zone
[DEBUG] 
%llx got a changed record %@ in operation %@
[CRIT] Assertion failed: ![self->_deletedRecordIds containsObject:record.recordID]
[CRIT] Assertion failed: self->_recordsByID[record.recordID] == nil
[DEBUG] ignoring zone details record %@ in operation %@
[WARNING] ignoring record of unexpected type %@ in operation %@
[DEBUG] 
%llx recordID was deleted %@ in operation %@
[CRIT] Assertion failed: ![self->_deletedRecordIds containsObject:recordID]
[CRIT] Assertion failed: self->_recordsByID[recordID] == nil
[DEBUG] 
%llx Received token update %@, requestID %llu
[DEBUG] 
%llx finished sync down of zone-health %@ with requestID %llu changeToken %@
[DEBUG] No zone-health zone %@: %@
[ERROR] Failed syncing down zone-health op %@: %@
[DEBUG] 
%llx sync down of zone-health-check was cancelled?
[CRIT] Assertion failed: _type == BRC_ITEM_TYPE_ALIAS
[CRIT] Assertion failed: containerID
[CRIT] UNREACHABLE: Stat shouldn't be nil
[CRIT] Assertion failed: creatorRowIDLongLongValue >= 0
[CRIT] UNREACHABLE: Failed to load xattr with signature %@ - %@
[CRIT] Assertion failed: ![self _hasLastEditorRowID]
[CRIT] Assertion failed: lastEditorDeviceRowID && lastEditorDeviceRowID.longLongValue > 0
[CRIT] Assertion failed: !_lastEditorDeviceOrUserRowID || ![self _hasLastEditorDeviceRowID]
[CRIT] Assertion failed: _contentSignature
[DEBUG] Not being greedy because current version size is 0
[DEBUG] Not being greedy because document is bigger %@ than minimum size (%@) to generate a thumbnail
[DEBUG] Being greedy because the document is small %@ and QL can generate a thumbnail for %@
[DEBUG] Not being greedy even though the document is small %@: QL can
t generate a thumbnail for %@
[ERROR] invalid signature in %@
[NOTIF] Pipe %@ watching %@
[NOTIF] Pipe %@ no longer watching %@
[CRIT] Assertion failed: reply
[CRIT] Assertion failed: item.fileObjectID
[ERROR] failed to signal enumerator for root container: %@
[NOTIF] 
%llx collecting %lu additional folder updates
[NOTIF] 
%llx invalidating pipes watching %@
[NOTIF] 
%llx invalidating NSMDQs watching %@
[NOTIF] 
%llx dispatching to %s
[NOTIF] 
%llx continuing on %s
sharing/iWork-publishing-fetch
[CRIT] UNREACHABLE: No error and invalid number of records %lu
[CRIT] Assertion failed: path.br_isAbsolutePath
[CRIT] Assertion failed: _session
[CRIT] Assertion failed: fileID != 0ULL
[CRIT] Assertion failed: self.exists
[CRIT] Assertion failed: self.isUnixDir
[CRIT] Assertion failed: self.isInPackage
[DEBUG] closing fd:%d
[CRIT] API MISUSE: -resolveAndKeepOpen must be balanced with -close
[CRIT] Assertion failed: _getOpenRefCount(self) == 0
[CRIT] Assertion failed: [self isResolved]
[CRIT] Assertion failed: self.isResolved
[CRIT] Assertion failed: _type != BRCRelativePathTypeUnknown
[CRIT] Assertion failed: !_basePath || self.basePath.isResolved
[CRIT] Assertion failed: self.isRoot || self.basePath.isResolved
[CRIT] Assertion failed: _absolutePath.br_isAbsolutePath
[CRIT] Assertion failed: !_relativePath.br_isAbsolutePath
[CRIT] Assertion failed: self.isFault
[CRIT] Assertion failed: _fd >= 0
[CRIT] Assertion failed: self.isSymLink
[CRIT] Assertion failed: self.isFile
[CRIT] Assertion failed: _fd < 0
[CRIT] Assertion failed: _basePath
[ERROR] no base path
[DEBUG] can't resolve base path %@ %{errno}d
[DEBUG] can't open base path %@ %{errno}d
[DEBUG] base path %@ is not a directory
[ERROR] relative package root path can not be equal to relative path = %@
[CRIT] UNREACHABLE: Detected unbound package resolution recursion for %@
[DEBUG] new base for '%@' - %@
[DEBUG] can't resolve package root %@ %{errno}d
[DEBUG] can't open package root %@ %{errno}d
[DEBUG] package root %@ is not a directory
[CRIT] Assertion failed: !_relativePath
[CRIT] Assertion failed: !_basePath
[DEBUG] can't open %@' %{errno}d
[CRIT] UNREACHABLE: a root should always be openable
[DEBUG] resolved-path:'%@' outside of requested roots:'%@'
[NOTICE] resolved-path:'%@' outside of base path:'%@'
[ERROR] fgetattrlist(%d) at '%@' failed %{errno}d
[DEBUG] Inappropriate file type %c%c%c%c%c%c%c%c%c%c for %@
[DEBUG] Busy file at '%@' fileID:%llu docID:%u gen:%u bt:%llu
[ERROR] failed to unlink legacy ubiquity %s fault at '%s' %{errno}d
[NOTICE] cleaned up legacy ubiquity %s fault at '%s'
[NOTICE] root-dev:%d != dev:%d %@
[DEBUG] Inappropriate location or an alias at '%s'
[DEBUG] Directory is marked as alias, ignoring '%s'
[WARNING] Can't read xattr at '%s' %{errno}d
[CRIT] Assertion failed: _basePath == nil || _basePath->_fd >= 0
[DEBUG] getattrlistat(%d, %s) failed with %s(%d)
[DEBUG] getattrlist(%s) failed with %s(%d)
[DEBUG] parent %@ is not a directory
[CRIT] Assertion failed: _basePath->_fd >= 0
[DEBUG] openat(%d, '%@') failed %{errno}d
[ERROR] openat(%d, '%@') failed %{errno}d
[DEBUG] open('%@') failed %{errno}d
[ERROR] open('%@') failed %{errno}d
[CRIT] Assertion failed: _fileID
[CRIT] Assertion failed: errno > 0
[DEBUG] openbyid_np(%lld) failed: the file was unlinked
[DEBUG] openbyid_np(%lld) failed: the file still exists, but we don't have access to it
[ERROR] BRCOpenByID(%lld) failed %{errno}d
[ERROR] fcntl(%lld, F_GETPATH) failed %{errno}d
[DEBUG] resolved '%@' to %@
[DEBUG] absolute path is excluded because it is a package %@
[DEBUG] resolved-path:'%@' symlink doesn't resolve %{errno}d
[DEBUG] resolved-path:'%@' is excluded
[WARNING] Waited for %f seconds before acquiring lock on the parent folder to re-check faults %@ docID
[CRIT] UNREACHABLE: Really unexpected flock(%@) error  %{errno}d
[CRIT] UNREACHABLE: Failed to acquire exclusive lock on %@, will assign docID to fault %@ anyway
[ERROR] failed allocating documentID for %@ %{errno}d
[CRIT] Assertion failed: _documentID > 0
[ERROR] Exclude document for which we couldn't allocate a documentID for %@
[DEBUG] package without the bundle bit at %@
[WARNING] failed fixing up bundle bit at %@ - %s
[DEBUG] fixed up bundle bit at %@
[CRIT] Assertion failed: !self.isResolved || self.exists
[CRIT] Assertion failed: _parentFileID > 0
[ERROR] the root is closed!
  root: %@
  self: %@
[DEBUG] openat(%d, '%@') failed, base:%@ %{errno}d
[DEBUG] empty parentPath for abs:%@ rel:%@ base:%@
[DEBUG] open('%@') succeeded, fd:%d
[CRIT] Assertion failed: self.isBRAlias
[WARNING] Failed to resolve xattrs for %@: %@
[CRIT] Assertion failed: value >= 0
[CRIT] UNREACHABLE: mutex error: %s
[CRIT] Assertion failed: _getIndex(self, o) == nil
[CRIT] Assertion failed: _array[index] == o
[CRIT] Assertion failed: !_isOpen
sync/side-car-sync-up
[CRIT] Assertion failed: requestID
[DEBUG] Syncing up side car records with request %llu
[DEBUG] We need to create the side car zone on %@ - %@
[ERROR] Failed syncing up side cars on %@ - %@
[DEBUG] finished side car sync up: %@, op: %@
[CRIT] Assertion failed: clientZone
[DEBUG] Faking sync for side car info delete which isn't known to the server
[DEBUG] Deleting side-car record for %@
[CRIT] Assertion failed: itemID
[DEBUG] Syncing up side-car record for %@
[DEBUG] Faking sync of side-car record for %@
[CRIT] Assertion failed: state
account-waiter
[DEBUG] 
%llx handling account change
[DEBUG] 
%llx waiting for account status
[DEBUG] 
%llx got status %ld
[ERROR] Error when asking CloudKit about the account status: %@
[DEBUG] No account loaded yet, let's wait for the account notification from CloudKit
[DEBUG] Account is restricted let's wait for a notification from CloudKit
[DEBUG] Account is temporarily unavailable, let's wait for a notification from CloudKit
[CRIT] UNREACHABLE: unknown account status
[DEBUG] Account is now available
[DEBUG] 
%llx %@: scheduling
[DEBUG] cancelled
[CRIT] Assertion failed: jobID
[CRIT] Assertion failed: stamps.state != BRCJobStateInvalid
[DEBUG] %@[%@]: post-poning job
[CRIT] Assertion failed: _session.clientDB.changes <= 1
[DEBUG] %@[%@]: created job with state %s
[DEBUG] %@[%@]: updated job %s->%s
[CRIT] Assertion failed: state >= BRCJobStateSuspendedBase
[DEBUG] %@: retrying %lld suspended jobs matching %@ in %s
[CRIT] Assertion failed: throttle
[CRIT] Assertion failed: !rs.next
[DEBUG] %@[%@]: backing off %.3fs (count: %d)
[DEBUG] %@[%@]: Updated %lld jobs to state %s
[DEBUG] %@[%@]: Deleted %lld jobs
[DEBUG] %@[%@]: resetting backoff for job
[DEBUG] %@: Cleaned up %lld expired jobs
[CRIT] UNREACHABLE: must be implemented in subclass
[DEBUG] %@: Throttle id %@ has work
[CRIT] API MISUSE: should be implemented by subclass
[DEBUG] %@: nothing schedulable, going to sleep %s
[DEBUG] %@: going to sleep for %.3fs
[DEBUG] %@: Finishing batch and allowing other jobs to run
[DEBUG] %@: resuming!
[DEBUG] %@: suspending!
[DEBUG] %@: cancelling!
[CRIT] Assertion failed: self.isCancelled
[NOTIF] %@: gathering from %lld to %lld
[NOTIF] matching prefix: %@
[WARNING] Notification pipe got deallocated. Nothing to do
[WARNING] Can't gather anymore because the personaID is incorrect or db has no serial queue
[CRIT] Assertion failed: count >= 0
[CRIT] Assertion failed: appLibrary
[NOTIF] 
%llx Looking for item with ranks >= %lld in %@ (%ld kind %@)
[CRIT] UNREACHABLE: No gathered items enumerator - bailing out
[NOTIF] Creating enumertor %p including dead items: %s
[NOTIF] Ignoring zone root item %@
[CRIT] Assertion failed: !item.isReserved
[NOTIF] Ignoring dead update %@
[NOTIF] %@: queued gathered notification %@
[WARNING] Strange... No updates received and phase isn't done %lu vs %ld
[NOTIF] %@: gather phase ends
[ERROR] %@: EINTR: client gather phase was invalidated
[CRIT] Assertion failed: _receiver == nil
[NOTIF] stripped sharing info for %@
[NOTIF] 
%llx %@ got error %@
[NOTIF] Ancestor isn't resolved yet, discarding %@
[NOTIF] Learning path-match for %@ (was %@)
[NOTIF] Learning itemID for our ancestor: %@
[NOTIF] Learning new fileObjectID for %@: %@ (was %@)
[NOTIF] Update is in the trash, discarding %@
[NOTIF] Queueing INSIDE (in the scope) notification: %@
[NOTIF] Queueing INSIDE (fileObjectID match) notification: %@
[NOTIF] Queueing INSIDE (parentObjectID match) notification: %@
[NOTIF] Queueing OUTSIDE (oldParentFileObjectID match) notification: %@
[NOTIF] Queueing INSIDE (watching containers) notification: %@
[NOTIF] Queueing OUTSIDE (watching containers) notification: %@
[NOTIF] Update is "Documents", discarding: %@
[NOTIF] Update is a directory, discarding %@
[NOTIF] Update is a fault, discarding %@
[NOTIF] Queueing OUTSIDE (moved out library scope) notification: %@
[NOTIF] Queueing INSIDE (below a Documents/ folder) notification: %@
[NOTIF] Queueing INSIDE (not below a Documents/ folder) notification: %@
[NOTIF] Queueing INSIDE (below a .Trash/ folder) notification: %@
[CRIT] Assertion failed: _watchKind & WATCH_ITEM
[NOTIF] Queueing INSIDE (itemID match) notification: %@
[NOTIF] Queueing OUTSIDE (reparented) notification: %@
[NOTIF] Queueing OUTSIDE (dead item) notification: %@
[NOTIF] doing the second phase gathering
[NOTIF] Finished second phase gathering
[NOTIF] 
%llx %@: processing updates %@ [rank:%lld]
[NOTIF] dropping all updates
[NOTIF] dropping %ld updates
[NOTIF] 
%llx %@: received progress acknowledgement
[NOTIF] %@: sending %ld notifications:
[NOTIF]   %@
[NOTIF] 
%llx %@: received notification acknowledgement
[NOTIF] %@: client is really backlogged, invalidating
[NOTIF] 
%llx %@: starting watching ubiquitous scope (docs:%d data:%d ext:%d dirs:%d faults:%d trash:%d) for %@
[ERROR] %@: EALREADY: watch already set up to kind %d
[WARNING] %@: client didn't specify Document or Data Scope
[ERROR] %@: unable to find container %@
[ERROR] %@: Unable to resolve scopes
[NOTIF] Could not create RecursiveListDirectoryContentsOperation for %@
[NOTIF] Waiting for group for list op %@
[NOTIF] Finished gather group for %@
[NOTIF] Finished normal gather phase
[NOTIF] Calling gather reply callback
[CRIT] UNREACHABLE: Invalid notification pipe setup
[NOTIF] Waiting on gather group for %@
[CRIT] Assertion failed: !_listOp
[NOTIF] Finished waiting on gather group
[NOTIF] %@: started watching children of %@ (fsid:%@ id:%@ filename:%@)
[INFO] 
%llx %@ (%@) %s 
[INFO] %@: reply(%@)
[NOTIF] %@: watching items prefixed by "%@"
[ERROR] %@: can't watch %@: %@
[ERROR] %@: can't watch app containers: %@
[WARNING] Path %@ is not an existing container: %@
[WARNING] Path %@ is not an existing app library: %@
[NOTIF] 
%llx invalidating %@
[DEBUG] 
%llx updating dialog...
[DEBUG] User notification completion block should run with %@ persona
[DEBUG] 
%llx sending user reply
[ERROR] can't create user notification: %d
[CRIT] Assertion failed: self->_source == NULL
[WARNING] ignore user notification udate: no KVO observer registered
[ERROR] can't update user notification: %d
[CRIT] Assertion failed: !shareMetadata.share.isFolderShare
[DEBUG] User picked %s response
[ERROR] No completion block for notification %@
[CRIT] Assertion failed: _targetResolved
[CRIT] UNREACHABLE: not in a container
[CRIT] Assertion failed: path.isBRAlias
[ERROR] Not a bookmark at %@
[ERROR] Unable to get bookmark data on bookmark at %@: %@
[ERROR] Invalid signature for bookmark at %@
[CRIT] UNREACHABLE: somebody doesn't understand what bookmarks are for!
[CRIT] UNREACHABLE: not allowing an alias in the same app library as its target
[CRIT] Assertion failed: props[NSURLDocumentIdentifierKey] && [docID isEqualToNumber:props[NSURLDocumentIdentifierKey]]
[ERROR] bookmark is lacking path or document-id: %@
[ERROR] the path isn't within iCloud: %@
[ERROR] the path isn't within a container: %@
[WARNING] no target container %@ for bookmark
[WARNING] no target itemID for %@ in container %@
[WARNING] no target docID for %@ in container %@
[ERROR] the bookmark doesn't resolve: %@
[WARNING] Can't resolve target app library
[CRIT] UNREACHABLE: cannot create bookmark data
[CRIT] Assertion failed: _dataResolved
[DEBUG] wrote %@ at %@
[ERROR] Unable to unlink bookmark at %@ %{errno}d %{errno}d
[DEBUG] Unlinked bookmark at %@
[ERROR] couldn't setup vnode rapid aging %{errno}d
[ERROR] cannot retrieve device ID for '%@': %s
[WARNING] Failed to set the xpc state to done for "%@"
[NOTICE] starting bird
[DEBUG] 
%llx Starting up, welcome, bundle:%@, pid:%d, uid:%d, os:%@, version:%@, home:"%@", in sync bubble:%@
[DEBUG] using Cloud Database class: %@
[WARNING] iCloud Drive is not supported on this OS
[DEBUG] 
%llx sending token change notification
[CRIT] Assertion failed: qos_class_self() == QOS_CLASS_DEFAULT
[CRIT] Assertion failed: getiopolicy_np(IOPOL_TYPE_VFS_MATERIALIZE_DATALESS_FILES, IOPOL_SCOPE_PROCESS) == IOPOL_MATERIALIZE_DATALESS_FILES_OFF
[WARNING] No accept operation found for key %@
[NOTICE] Language changed, exiting
[DEBUG] 
%llx received new XPC connection: %@
[WARNING] Denying xpc connection because the daemon is in the sync bubble
[DEBUG] welcome %@!
[DEBUG] 
%llx Client %@ connection was invalidated
[ERROR] error creating connection labeled '%@': %@
[DEBUG] sending server availability: %savailable (%@)
[DEBUG] sending server availability: %x (%@)
[NOTICE] starting exit sequence because of received signal (%s)
[NOTICE] exiting with code %d...
[CRIT] UNREACHABLE: Copying share for item %@ that does not have a server zone
[CRIT] UNREACHABLE: Item's %@ server zone %@ is missing sync context while coping share
[WARNING] Fetching the root share object for shared to me child item %@
sharing/copy-share
[CRIT] UNREACHABLE: Can't find root itemID %@
[CRIT] UNREACHABLE: Can't find URL for root itemID %@
[WARNING] No sharing identity on %@
[WARNING] No base token on %@
[CRIT] Assertion failed: [matchingQuery isKindOfClass:[BRCServerZone class]]
[CRIT] Assertion failed: serverItem || localItem
[DEBUG] Apply Changes: (missing parent found: %@)
[DEBUG] Apply Changes: retrying %lld suspended throttles (missing parent found: %@)
[DEBUG] Apply Changes: retrying %lld suspended throttles (child %@ of %@ killed or reparented)
[DEBUG] Apply Changes: retrying %lld suspended rejected throttles (child %@ of %@ killed or reparented)
[DEBUG] Apply Changes: retrying %lld suspended throttles (appLibrary completed migration: %@)
[DEBUG] Apply Changes: retrying suspended rank %lld
[CRIT] Assertion failed: !shouldFixup || !serverZone.isSharedZone || ![serverZone.zoneName isEqualToString:BRUbiquitousDefaultContainerID]
[DEBUG] Updated %@ to be a non-fault
[DEBUG] No point in rescheduling items under %@ because we can't make it a non-fault
[DEBUG] Apply Changes: Rescheduled %lld items which were blocked for greediness when listing folder %@
[DEBUG] Apply Changes: No unscheduled items parented to %@
[DEBUG] Apply Changes: repopulating throttles for zone:%@
[CRIT] UNREACHABLE: Apply Changes for rank %lld in table %@ seems to keep failing. retry_count: %lld
apply-changes
[CRIT] Assertion failed: zone
[INFO] 
%llx Apply Changes[%@]: attempting to apply %s
  server item: %@
  local item:  %@
[CRIT] Assertion failed: si == nil
[DEBUG] 
%llx Apply Changes[%@]: deleting action without local and server item
[DEBUG] 
%llx Apply Changes[%@]: deleting rejected action with a non-rejected local item
[DEBUG] 
%llx Apply Changes[%@]: deleting useless action %lld vs %lld
[DEBUG] Apply Changes[%@]: Suspending action until the coordination callback
[DEBUG] Signalled faulting-barrier waiters for %@
[DEBUG] Monitoring faulting for %@
[DEBUG] Stop monitoring faulting for %@
[DEBUG] Apply Changes: reached maximum allowed number of coordinations (%ld)
[DEBUG] Apply Changes[%lld]: Rescheduling because coordination completed
[DEBUG] Apply Changes[%lld]: Skipping rescheduling because throttle was not suspended for coordination
[CRIT] UNREACHABLE: no writer for zone %@
[DEBUG] Apply Changes: below half maximum allowed number of coordinations (%ld)
[DEBUG] Apply Changes: Cleaned up %lld stale throttles
[CRIT] UNREACHABLE: failed to insert into client_unapplied_commands: %@
[DEBUG] Apply Changes [%lld .. %lld]: in %@, %llu ranks inserted
[DEBUG] Apply Changes [] in %@, 0 ranks inserted
[DEBUG] 
%llx did sync down requestID:%llu, applying server truth on %@
[CRIT] Assertion failed: li.isRejected
[WARNING] Rejected item %@ was remotely revived by %@.  Updating as such
[WARNING] Rejected item %@ doesn't have an apply job.  Re-creating the apply job
[WARNING] Item %@ is missing an apply throttle
[DEBUG] Apply Changes: Rescheduled %u throttles missing from the apply table
[CRIT] Assertion failed: !si.isLive || !li.isRejected
[ERROR] Throttle %@ isn't a dictionary
[ERROR] Platforms %@ isn't an array
[DEBUG] throttle dict %@ isn't for our platform %@
[ERROR] Failed to make %@ owned by mobile: %@
[ERROR] Error enumerating %@: %@
[INFO] ~/Library/Application Support/CloudDocs/session does not exist. No need to back up.
[ERROR] Unable to delete existing destination directory at %@: %@
[ERROR] Could not create destination directory %@: %@
[DEBUG] %@
[NOTICE] Calling completion block with URL: %@, error: %@
[ERROR] rootURL is nil, nothing to enumerate.
[ERROR] %@ does not exist, nothing to enumerate.
[ERROR] Could not get the canonical path for the root URL %@. Error: %@
[ERROR] Enumeration error: %@. Error: %@
[ERROR] Failed to fetch resource values for %@. Error: %@
[ERROR] Failed to remove directory %@: %@
[DEBUG] container state now needs flush: %@
[WARNING] no path for an app library
[CRIT] Assertion failed: zoneRowID
[CRIT] Assertion failed: mangledID.isPrivate
[CRIT] API MISUSE: unexpected parameter
[CRIT] Assertion failed: dbRowID
[CRIT] UNREACHABLE: associating nil client zone for %@
[DEBUG] closing app library: %@
[DEBUG] cancelling file coordination requests %@
[DEBUG] First ubiquity client using container, schedule each item for download (client: %@, container: %@).
[CRIT] Assertion failed: rootItem.isDirectory
[DEBUG] %@ forces %@ to be greedy
[DEBUG] %@ no longer forces %@ to be greedy
[DEBUG] Last ubiquity client exited, no longer greedy (container: %@)
[CRIT] Assertion failed: !_activated
[CRIT] Assertion failed: state == BRCAppLibraryStateNotActivated || !(state & BRCAppLibraryStateNotActivated)
[DEBUG] %@ state changed, was %@
[NOTICE] downloading everything in %@ because the app is now installed
[NOTICE] evicting everything in %@ because the app was removed
[DEBUG] Updating documents folder to be of server type %@
[INFO] %@ becomes %@
[DEBUG] don't be greedy if app is not installed, even though optimize storage is disabled
[DEBUG] greediness enforced because optimize storage is disabled
[DEBUG] app library greediness enforced by user defaults
[DEBUG] don't be greedy if app is not installed
[DEBUG] greediness enforced because library has clients connected
[CRIT] UNREACHABLE: asking for no scopes?
[CRIT] Assertion failed: docsOrDataScopeInjection || externalScopeInjection
[DEBUG] There's already a pending coordinated I/O for %@, not really scheduling it
[DEBUG] Releasing coordinated %s I/O slot for r:%@ for %@
[DEBUG] Allocated pending coordinated %s I/O for %@
[DEBUG] app library root file id changed from %@ to %@ for %@
[CRIT] Assertion failed: self.isiCloudDesktopAppLibrary
[ERROR] fs-root moved on disk, but this is not the root item %@ is tracking
 tracking: %@, received: %@
[DEBUG] %@: app library fs root was removed
[DEBUG] 
%llx updating %@ from %@
[DEBUG] Done scanning container: %@, fileID:%@ generationID:%@
[CRIT] Assertion failed: oldAppLibrary.state & BRCAppLibraryStateNeedsLost
[DEBUG] Lost directory with dead children found, kick syncUp
[DEBUG] %@ is not pristine with child item count %@ and server count %@
[DEBUG] Listing documents folder to fetch pristineness for %@
[DEBUG] Listing trash folder for %@
[CRIT] Assertion failed: client
[CRIT] Assertion failed: ![_foregroundClients containsObject:client]
[DEBUG] app library %@ became foreground
[CRIT] Assertion failed: [_foregroundClients containsObject:client]
[DEBUG] app library %@ moved to background
[CRIT] UNREACHABLE: %@ has foreground clients but the transfer sync context doesn't contain self
[CRIT] UNREACHABLE: %@ has foreground clients but the metadata sync context doesn't contain self
[CRIT] UNREACHABLE: %@ has foreground clients but target shared zone %@ isn't targeted
[CRIT] UNREACHABLE: target shared zone %@ of %@ should be boosted
[CRIT] UNREACHABLE: %@ has too many target shared server zones %@
[CRIT] UNREACHABLE: %@ has no foreground clients but the transfer sync contains self
[CRIT] UNREACHABLE: %@ has no foreground clients but the metadata sync context contains self
[DEBUG] 
%llx recomputing evicted state for %@ (has fetched initial apps: %d)
[DEBUG] updating evict status: %s
[DEBUG] evict status remains: %s
[DEBUG] Item with rowid %llu is still targeting %@ for %@
[DEBUG] resolving target shared zones for app library %@
[CRIT] Assertion failed: _foregroundClients.count == 1
[DEBUG] resolved target shared zones %@ for app library %@
[CRIT] Assertion failed: _foregroundClients.count == 0
[DEBUG] removing all target app libraries from %@
[DEBUG] attempting to remove target server zone %@ from %@
[DEBUG] not removing target shared zone %@ from %@
[DEBUG] %@ is not a target shared zone of %@ anymore
[DEBUG] not removing target shared zone %@ from %@, because it's still targeting it
[DEBUG] attempting to add target shared server zone %@ to %@
[DEBUG] Added %@ as foreground client to %@
[CRIT] Assertion failed: unsaltedBookmarkData
[CRIT] UNREACHABLE: nil dbRowID for %@
[DEBUG] container-metadata needs sync up for %@
[CRIT] Assertion failed: _initialRetryCount <= _finalRetryCount
[CRIT] Assertion failed: _minimumNsecsBetweenRetries <= _maximumNsecsBetweenRetries
[CRIT] Assertion failed: _minimumNsecsBetweenRetries > 0
[CRIT] Assertion failed: _maximumNsecsBetweenRetries > 0
[CRIT] Assertion failed: _nsecsBeforeForgettingCounter >= _maximumNsecsBetweenRetries
[DEBUG] We haven't finished the previous throttle
[DEBUG] Forgetting retry counter
[DEBUG] gave up on %@/%llx (retry-count:%u)
[DEBUG] backing off %@/%llx for %llu milliseconds (retry-count:%u)
[CRIT] API MISUSE: unhandled format specifier
[ERROR] unhandled format specifier %%%c
[WARNING] fileURL is excluded at %@
[DEBUG] Busy file at '%@' fileID:%llu gen:%u bt:%llu
[ERROR] failed to unlink legacy ubiquity %s fault at '%@' %{errno}d
[NOTICE] cleaned up legacy ubiquity %s fault at '%@'
[DEBUG] Inappropriate location or an alias for '%@'
[DEBUG] Directory is marked as alias, ignoring '%@'
[WARNING] Can't read xattr for '%@' %{errno}d
[DEBUG] BR alias is ignored at '%@'
[WARNING] Excluding item with promise name that isn't a promise '%@'
[WARNING] Can't read symlink at '%s'
[CRIT] Assertion failed: _symlinkContent.fileSystemRepresentation != nil
[ERROR] Failed opening %@ %{errno}d
[DEBUG] Downloader[%@]: %@ (%llu -> %llu)
[WARNING] No appLibraryEntry for Downloader[%@-%s-%@] with transfer_operation %@
[DEBUG] 
%llx Downloader[%@-%s-%@]: download %@
[DEBUG] Got an out of space error %@
[DEBUG] Rescheduling %@ (%@) for retriable error: %@
[ERROR] Got non recoverable error when downloading %@: %@
[DEBUG] The error is for an unknown item, check if the zone hasn't been wiped
[DEBUG] We failed downloading a conflict loser so kicking the apply scheduler in case it was blocked for download
[DEBUG] Apply Changes[%lld]: %@ state is %s
[DEBUG] Downloader: scheduling %lld suspended throttles
[DEBUG] Downloader: not enough space to download anything (%@ < %@)
[DEBUG] Downloader: scheduled %lld pending-disk throttles, which will still leave %@ of free disk space
[DEBUG] Downloader[%@-%s-%@]: Cancelling download
[DEBUG] Downloader[%@-%s-%@]: Cleaning up download stage: %@
[DEBUG] adding alias item %@ to currently transfering %@
[DEBUG] Refreshed active download size %llu -> %llu
[DEBUG] removed %lld items in pkg:%@
[ERROR] We should have a stageID for this item: %@
[DEBUG] 
%llx scheduling content download for %@
local: %@
server: %@
[DEBUG] no need to schedule anything, we're already actively downloading that same etag
[DEBUG] no need to schedule anything, we're already attempting to download that same version
[ERROR] can't get permanent storage of %@: %@
[WARNING] Failed to remove additions : %@
[DEBUG] removed additions from %@
[DEBUG] resolved losers needing deletion: {%@}
{%@}
[DEBUG] losers needing deletion: {%@}-{%@}
[DEBUG] 
%llx scheduling download of losers %@ for item %@
[DEBUG] 
%llx download etag: %@
[DEBUG] Not rescheduling download %@ which hit a permanent failure
[CRIT] UNREACHABLE: We thought we finished downloading loser etag %@ for %@ but it wasn't found, so rescheduling
[DEBUG] we're done downloading %@
[DEBUG] rescheduling winner
[DEBUG] suspending apply for download
[DEBUG] not interested in this download
[CRIT] Assertion failed: addedLosers
[CRIT] Assertion failed: removedLosers
[DEBUG] 
%llx discovering conflict losers which are live at %@
[ERROR] invalid addition name for %@
[WARNING] invalid itemID %@ (for %@ in %@)
[WARNING] ETag %@ is no longer a loser
[DEBUG] live losers: %@
[ERROR] can't remove conflict loser for %@: %@
[DEBUG] 
%llx scheduling thumbnail download for %@
local: %@
server: %@
[DEBUG] no thumbnail, cancelling thumbnail download
[DEBUG] existing throttle thumbnail with etag:%@
[DEBUG] cancelling thumbnail throttle with etag:%@
[ERROR] Failed removing thumbnail from %@ - %@
[DEBUG] existing thumbnail for %@_%@ has state %s
[DEBUG] thumbnail for %@_%@ associated, notifying file coordinator
[ERROR] Failed to save thumbnail from %@: %@
[DEBUG] thumbnail for %@_%@ still pending download
[DEBUG] thumbnail for %@_%@ has state %s
[DEBUG] Rescheduled %lld in-flight transfers because we have restarted
[DEBUG] Kicking downloads for %@
[CRIT] UNREACHABLE: Downloader[%@]: failed to find app library with id %@, dropping the download %@
[DEBUG] Downloader[%@]: job has been put back in queue %@
[NOTICE] downloading %ld thumbnails in %@
[DEBUG] Downloader[%@]: not enough available disk space (%llu available, %llu needed, %llu minimum)
[DEBUG] Downloader[%lld-%s-%@]: enough disk space to download (%llu available, %llu needed, %llu minimum)
[CRIT] UNREACHABLE: item download %@ etag changed from %@
[WARNING] Completed unit count is greater than version size; ignoring value
[DEBUG] Re-use progress %@
[NOTICE] downloading %ld documents in %@
[DEBUG] Downloader[%lld-%s-%@]: postpone because loser is more recent than live item
[ERROR] backing off: can't resolve storage for %@: %@
[NOTICE] downloading %ld previous documents versions in %@
[DEBUG] Downloader: Recovered from %u missing download jobs
[CRIT] Assertion failed: _indentation > 0
[CRIT] UNREACHABLE: unknown color
[CRIT] UNREACHABLE: only share acceptation fault can be deleted; %@
[ERROR] Failed to create directory in stage %@
[DEBUG] 
%llx scheduling reset %s of %@
[DEBUG] 
%llx reset %s of %@
[DEBUG] zone is already resetting (zone:%@,appLibrary:%@) but adding (%@) for the next reset
[DEBUG] flushing reset state (%@) for container %@
[DEBUG] waiting for %u cancelled operations to finish
[WARNING] giving up on resetting %@
[DEBUG] 
%llx waiting %.3f secs to reset %@
[CRIT] Assertion failed: !self->_resetTimer
[DEBUG] 
%llx continuing reset
[NOTICE] resetting %@: %s
[CRIT] UNREACHABLE: not implemented
[DEBUG] deleting from server truth for %@
[DEBUG] deleting from client truth for %@
[DEBUG] Keeping client items during reset%s
[WARNING] Found a top level item that still needs to delete its alias %@.  Inserting a tombstone
[CRIT] UNREACHABLE: Failed to save to db without an error
[DEBUG] Failed to save item %@ while resetting - %@
[ERROR] failed pruning client_items: %@
[CRIT] Assertion failed: self.isSharedZone
[DEBUG] cancelling sync up operation %@
[DEBUG] cancelling sync down operation %@
[DEBUG] Cancelling operation %@
[DEBUG] 
%llx finishing %@ of %@
[DEBUG] finished %@ of %@ but we still need to delete data
[DEBUG] finished %@ of %@
[ERROR] Failed to signal reimport of %@ - %@
[CRIT] UNREACHABLE: can't czm move clouddocs zone
[CRIT] UNREACHABLE: Can't CZM the clouddocs zone
[CRIT] Assertion failed: _itemScope != BRC_ITEM_SCOPE_UNKNOWN || _state == BRC_ITEM_STATE_RESERVED || _state == BRC_ITEM_STATE_TOMBSTONE
[CRIT] Assertion failed: [s isKindOfClass:[NSMutableString class]]
[CRIT] Assertion failed: !_tmpBouncedNo || ![self.logicalName isEqualToString:name]
[CRIT] UNREACHABLE: got a fault name
[DEBUG] Not overriding name equal to bounced name %@
[CRIT] UNREACHABLE: can't move aside a root item!
[CRIT] Assertion failed: _state == BRC_ITEM_STATE_TOMBSTONE
[CRIT] Assertion failed: _type != BRC_ITEM_TYPE_ALIAS
[CRIT] Assertion failed: bounceNumber >= 2
[WARNING] No logical name for %@
[WARNING] Updating filename during CZM processing to %@
[CRIT] Assertion failed: _state == BRC_ITEM_STATE_LOST || _state == BRC_ITEM_STATE_LOST_ZOMBIE
[CRIT] Assertion failed: BRCItemTypeIsDirectory(_type)
[CRIT] Assertion failed: _state == BRC_ITEM_STATE_LOST
[CRIT] UNREACHABLE: unknown type
[CRIT] Assertion failed: _stagedFileID
[CRIT] Assertion failed: _stagedGenerationID
[CRIT] Assertion failed: !BRCItemTypeIsDirectory(_type)
[CRIT] Assertion failed: [_physicalName br_isSideFaultName]
[CRIT] Assertion failed: ![_physicalName br_isSideFaultName]
[CRIT] Assertion failed: !_aliasTarget || [_aliasTarget isEqualToString:st.aliasTarget]
[CRIT] Assertion failed: aliasItem.isBRAlias
[CRIT] UNREACHABLE: -asBRAlias called on a non alias
[CRIT] UNREACHABLE: -asDirectory called on a non directory
[CRIT] UNREACHABLE: -asDocument called on a non document
[CRIT] UNREACHABLE: -asShareableItem called on a non shareable item
[CRIT] UNREACHABLE: -asFSRoot called on a non root
[CRIT] UNREACHABLE: -asSymlink called on a non symlink
[CRIT] UNREACHABLE: -asFinderBookmark called on a non symlink
[CRIT] UNREACHABLE: -asShareAcceptationFault called on a non fault
[CRIT] UNREACHABLE: unknown item type
[CRIT] UNREACHABLE: Asked parent file objectID on a zone root
[CRIT] UNREACHABLE: Can't find parent file objectID
[CRIT] UNREACHABLE: asked to refresh the app library of a root item
[CRIT] UNREACHABLE: hierarchy too deep to compute the app library root of %@
[CRIT] Assertion failed: _appLibrary
[CRIT] UNREACHABLE: Asked to get the top-level item of a non shared top level item: %@
[DEBUG] Needs rename because local name %@ differs from real name %@
[CRIT] Assertion failed: parentItem->_minimumSupportedOSRowID
[CRIT] Assertion failed: !_minimumSupportedOSRowID
[DEBUG] %@: inheriting %@ minimum supported OS
[DEBUG] %@ needs %@ to sync-up
[CRIT] UNREACHABLE: can't add the OS NAME
[CRIT] UNREACHABLE: Local items must be initialized with initFromPQLResultSet:container:error:
[CRIT] Assertion failed: self.isReserved
[CRIT] UNREACHABLE: Asked for side car info on an item that doesn't have side cars
[CRIT] Assertion failed: !self.itemID.isNonDesktopRoot
[CRIT] UNREACHABLE: item without parentID
[CRIT] UNREACHABLE: orphan detected %@ under parent %@ in %@
[CRIT] UNREACHABLE: item parented to a document: %@ parented to %@ type %@
[CRIT] UNREACHABLE: Can't ask the parent item of a FS root
[DEBUG] Using parent %@ for %@ because it's in the CZM fault list
[CRIT] UNREACHABLE: item without parentID under parent %@
[CRIT] UNREACHABLE: item parented to a document: %@ parented to %@
[DEBUG] remove documents folder
[DEBUG] 
%llx creating sync-up job
[DEBUG] we have structural diffs to send
[DEBUG] we don't have a corresponding alias item, but we have changes that requires alias creation
[DEBUG] we don't have a corresponding alias item, and the diffs do not require alias creation, dropping the diffs
[WARNING] We have a shared item inside another shared zone. Not creating sync up job
[DEBUG] dropping structural diffs because we don't have alias sync masks in the private zone
[DEBUG] we have diffs to send
[DEBUG] Detected sync up state change
[DEBUG] Finishing sync up for %@ in %@
[CRIT] Assertion failed: syncUpDiffs == 0
[DEBUG] Not finishing sync up because item is in-flight in %@
[DEBUG] Rescheduling upload for %@
[CRIT] UNREACHABLE: Didn't detect the local sync up state change for %@
[CRIT] Assertion failed: self.isReserved || _appLibrary
[CRIT] UNREACHABLE: Circular parenting chain
[ERROR] Encountered circular parenting chain
[DEBUG] Queueing notification %@ for rank: %lld
[ERROR] Failed to %s the spotlight attribute at %@ %{errno}d
[DEBUG] %s the spotlight attribute at %@
[CRIT] Assertion failed: self.appLibrary
[DEBUG] 
%llx Saving item %@
[DEBUG] Item is already force-deleted, skipping save
[DEBUG] Force deletion has been asked, comply
[DEBUG] Deleting tombstone because it's synced up
[DEBUG] Deleting tombstone because it's no known to server
[DEBUG] Telling new app library about lost state
[DEBUG] item with a minimum supported OS just changed, checking if we need to reattempt upload
[DEBUG] item went out of lost state
[DEBUG] this item changed significantly
[DEBUG] Forcing sync up of side car zone when item changed path extension
[DEBUG] We received our first shared to me child item, schedulding side car sync
[DEBUG] Offline work, skipping notification
[DEBUG] %s. changedFields:%@ sendNotif:%s serverUpdate:%s
[DEBUG] not dropping already reserved/dead/almost dead item from the working set %@
[CRIT] UNREACHABLE: there should be a fileObjectID for %@
[ERROR] failed to save item %@ to DB: %@
[CRIT] UNREACHABLE: saving items should really always work: %@
[CRIT] Assertion failed: !appLibrary.isCloudDocsAppLibrary
[CRIT] Assertion failed: parentScope != BRC_ITEM_SCOPE_DATA || !parentVisible
[CRIT] Assertion failed: parentScope == BRC_ITEM_SCOPE_DOCUMENTS
[CRIT] UNREACHABLE: Can't find parent %@(%@)
[DEBUG] learning new sharing options %@ for %@
[CRIT] Assertion failed: (_sharingOptions & BRCSharingItemHasShareID) == 0
[DEBUG] Item changed read-onlyness.  Updaing the path with the new mode
[ERROR] Failed to chmod the file - %s
[CRIT] Assertion failed: _syncUpState == BRC_SUS_REJECTED
[DEBUG] Forcing sync up of shared item in the trash %@
[DEBUG] Marking %@ as edited since shared because we are syncing up an edit
[DEBUG] Ignoring sync up request on item needing OOB_SYNC_ACK with no field changes
[CRIT] UNREACHABLE: we should always have a corresponding server item for already sync-ed up items - %@
[DEBUG] Creating apply job because we have diffs with the server item but have no need to sync them. diffs:(%@)
[DEBUG] Learning structural ETag, because item has no real structural change
[DEBUG] Learning content ETag, because item has no real content change
[WARNING] Not forcing sync up of share-to-me top level item %@
[WARNING] Not forcing sync up of share-to-me child item with a dead root share %@
[WARNING] Rejected item %@ has meaningful local diffs.  Forcing re-sync of all fields
[CRIT] Assertion failed: self.isReadAndUploaded || self.isKnownByServerOrInFlight
[CRIT] UNREACHABLE: Rejected item %@ is documents folder.  Force syncing on all
[DEBUG] Rejected item %@ has meaningful local diffs.  Forcing sync on all
[DEBUG] we are still syncing %@
[DEBUG] we still have diffs to send: %@
[CRIT] Assertion failed: _syncUpState != BRC_SUS_IDLE
[WARNING] Unknown item must need an itemID change
[WARNING] Can't reserve an fsroot %@
[DEBUG] reserved %@
[CRIT] Assertion failed: self.isDead && self.isDeadOrMissingInServerTruth
[CRIT] Assertion failed: _st.state == BRC_ITEM_STATE_TOMBSTONE || _st.state == BRC_ITEM_STATE_LOST || _st.state == BRC_ITEM_STATE_LOST_ZOMBIE
[DEBUG] Shared to me child item was removed so bumping lost throttle on its parent
[DEBUG] 
%llx marking renamed from server item
  server: %@
  relpath: %@
  parentID: %@
[CRIT] Assertion failed: _st.stagedFileID
[DEBUG] Learning parent sharing options because there is no shareID on this item
[DEBUG] updating st-etag:%@ from server item: %@
[CRIT] Assertion failed: serverItem
[CRIT] Assertion failed: ckInfo
[DEBUG] Also updating side car ckinfo:%@
[CRIT] UNREACHABLE: can't mark live from stage
[CRIT] Assertion failed: bounceNumber && serverLogicalName
[CRIT] UNREACHABLE: invalid sync up state
[DEBUG] 
%llx request to evict client item %@:%@ with options %@
[WARNING] ignoring eviction request for %@ because item is dead
[WARNING] ignoring eviction request for %@ because app library is used by a ubiquity client
[DEBUG] 
%llx request to download client item %@:%@ with options %@
[CRIT] Assertion failed: (options & BRCDownloadDiscretionary) == 0 || (options & BRCDownloadUserInitiated) == 0
[WARNING] ignoring download request for %@ because item is dead
[ERROR] item %@ is missing a doc id
[CRIT] Assertion failed: locBlobOut == NULL
[DEBUG] added xattr %s (%lld bytes)
[WARNING] Ignoring xattr which is too large %s
[WARNING] skipping xattr %s (size:%zd) because we don't have enough space anymore
[DEBUG] serialized xattr %s (blob size:%ld)
[WARNING] removing xattr %s failed %{errno}d
[DEBUG] removed xattr %s
[DEBUG] localItem: %@
[DEBUG] unsupported attribute: %@
[DEBUG] No value for attribute: %@
[DEBUG] returning %@
[CRIT] Assertion failed: ownerIdentity
[DEBUG] Sync: no global budget anymore: %@
[DEBUG] Push notification source created in a disabled state
[WARNING] Failed to defer the state
[DEBUG] Enabling push topics registration
[DEBUG] unscheduling app library %@
[DEBUG] 
%llx closing %@
[DEBUG] 
%llx shutting down periodic metadata sync
[DEBUG] 
%llx cancelling containerMetadataSyncSource...
[DEBUG] 
%llx cancelling sharedDatabaseSyncSource
[DEBUG] 
%llx cancelling zoneHealthSyncSource
[DEBUG] 
%llx cancelling migrateZonePCSSource
[DEBUG] 
%llx cancelling sideCarSyncSource
[DEBUG] 
%llx cancelling periodicSyncOperation
[DEBUG] unscheduling client zone %@
[DEBUG] 
%llx waiting for %@ to finish
[DEBUG] 
%llx loading containers
[DEBUG] 
%llx Considering containers needing forced sync down
[ERROR] periodic sync failed %@
[DEBUG] Sync: resuming sync
[DEBUG] 
%llx just synced down the default container
[DEBUG] marking container-metadata needs-sync-down
[DEBUG] scheduling sync for sharedb in %llus
[DEBUG] scheduling sync for zone-health
[DEBUG] scheduling sync for side-car
[DEBUG] scheduling sync for zone-pcs
[DEBUG] marking side-car needs-sync-up
[DEBUG] marking zone-health needs-sync-up
[DEBUG] marking container-metadata needs-sync-up
[DEBUG] 
%llx scheduling container-metadata sync
[DEBUG] already syncing container-metadata
[DEBUG] done syncing container-metadata
[DEBUG] 
%llx resetting container-metadata: %s
[DEBUG] 
%llx scheduling shared-db sync
[DEBUG] already syncing shared-db
[CRIT] UNREACHABLE: we shouldn't be asked to sync up the shared DB
[DEBUG] done syncing shared-db
[DEBUG] Finished sharedb sync down with more coming: %s, error %@
[DEBUG] 
%llx scheduling zone-health sync
[DEBUG] already syncing zone-health
[DEBUG] done syncing zone-health
[WARNING] Resetting zone health
[DEBUG] 
%llx scheduling side-car sync
[DEBUG] already syncing side-car
[DEBUG] done syncing side-car
[WARNING] Resetting side car zone
[DEBUG] Updated zone health sync token:%@ requestID:%lld
[DEBUG] Completed zone health sync requestID:%lld error:%@
[DEBUG] Updated side car sync token:%@ requestID:%lld
[DEBUG] 
%llx starting cross zone move migration PCS prep
[CRIT] Assertion failed: _migrateZonePCSOperation == nil
[WARNING] Container became foreground that we didn't think was installed, forcing an apps list refresh
[DEBUG] scheduling push topics registration
[DEBUG] 
%llx updating push topics
[CRIT] Assertion failed: ckContainer
[NOTICE] Setting push environment to %@
[ERROR] Unable to get a push environment from cloudd, default to %@ : %@
[CRIT] Assertion failed: _pushConnection
[DEBUG] Not registering for pushes on container %@ because sync is disabled due to no corresponding app being installed
[DEBUG] foreground topics: %@
[DEBUG] received %@ push token %@ for %@:%@
[DEBUG] received public push token %@
[ERROR] unable to parse push for topic:'%@' payload:%@
[DEBUG] 
%llx received a push in the %@ database for topic:'%@' payload:%@ token:%@
[NOTICE] received a push for the container-metadata zone
[NOTICE] received a push for the zone-health zone
[NOTICE] received a push for the side-car zone
[NOTICE] received a push for client zone %@
[NOTICE] received a push for app library %@ -> zone %@
[NOTICE] receiving a push for an unknown ID %@ -> com.apple.CloudDocs
[NOTICE] receiving a push for an unknown ID shared zone %@, creating the zone
[DEBUG] 
%llx scheduling sync down for client zone %@ because of a push
[WARNING] no zone found, dropping the push
[DEBUG] Also scheduling a sync down on the private zone %@
[CRIT] UNREACHABLE: dropping push notification because we can't adopt persona
[WARNING] Can't open UIKit : %s
[CRIT] UNREACHABLE: invalid push topic '%s' (expected prefix '%s')
[CRIT] UNREACHABLE: invalid push payload[%@] %@
[CRIT] UNREACHABLE: invalid push ZoneIdentifier at payload[%@] %@
[CRIT] UNREACHABLE: invalid push DatabaseScope at payload[%@] %@
[CRIT] UNREACHABLE: invalid push ZoneOwnerID at payload[%@] %@
sharing/access-token
[CRIT] UNREACHABLE: encrypted access token %@ is of unexpected type
[CRIT] UNREACHABLE: reference identifier %@ is of unexpected type
[DEBUG] we're a document missing a content signature
[DEBUG] Document is sync paused or resuming sync -> ignore the missing content signature
[DEBUG] we're a document missing a thumbnail signature
[DEBUG] Document is sync paused or resuming sync -> ignore the missing thumbnail signature
[DEBUG] we're a document with an xattr change
[DEBUG] Document is sync paused or resuming sync -> ignore xattr change
[DEBUG] we're a document with an uploaded asset change
[DEBUG] we're a document with an upload error change
[WARNING] Not clearning signatures on item with prev zone global ID %@
[CRIT] Assertion failed: self.isFinderBookmark || BRCItemTypeIsDocument(_st.type)
[DEBUG] don't be greedy because the app library is not greedy, even though optimize storage is disabled
[DEBUG] greediness enforced because item is part of Wallet's container
[DEBUG] greediness enforced because document UTI is not evictable
[DEBUG] don't be greedy because document is too old (mtime: %lld; max age: %lld days)
[CRIT] Assertion failed: item.isDocument
[CRIT] UNREACHABLE: document without a version:
    %@
   this typically indicates either of two problems:
    - either we failed processing the last sync down and we
      saved the structure record but not the contents record,
    - or the server forgot to send us a contents record.
[CRIT] Assertion failed: !info || info.isDocument
[DEBUG] Clearing signatures: %@
[CRIT] Assertion failed: serverItem.isDocument
[CRIT] Assertion failed: self.isDocument
[CRIT] UNREACHABLE: Server item missing a version %@
[CRIT] Assertion failed: [serverItem.latestVersion diffAgainst:_currentVersion] == 0 || (serverItem.isDead && self.isDead)
[ERROR] name is nil
[ERROR] Unable to stage fault: %@
[CRIT] Assertion failed: options
[DEBUG] 
%llx requesting to stage %@
  server: %@
   local: %@
[DEBUG] downloading the content because the latest version is small
[CRIT] Assertion failed: !isSyncPaused || ((options & BRCDesiredVersionWantsContent) && !self.isFault)
[ERROR] No version to stage for %@
[CRIT] UNREACHABLE: No version on server item
[CRIT] Assertion failed: options & BRCDesiredVersionWantsThumbnail
[DEBUG] Version to make live has only metadata changes with current version: %@
[WARNING] Force apply because we need to update the permissions
[DEBUG] Updating filename from server item because it matches the bounced name
[DEBUG] Proceeding with apply changes for metadata only update
diff w/ current: %@ / %@
diff w/ server-item: %@
needs permission for sharing update: %s
needs thumbnail: %s
[DEBUG] Version to make live has only metadata changes with previous one to make live: %@
[DEBUG] Proceeding with apply changes for staged version to make live
[DEBUG] Proceeding with apply changes since reserved items don't need to flush
[DEBUG] Learn sharing and owner from server record for diffs: %@
[CRIT] Assertion failed: state != BRCJobStateSuspendApplyForDownload || (options & BRCDesiredVersionWantsContent)
[DEBUG] Apply Changes[%lld]: state:%s options:%@ (thumbnail:%s losers:%s)
[DEBUG] clearing desired version
[DEBUG] updating ct-etag:%@ from server item: %@
[CRIT] Assertion failed: serverItem.latestVersion
[WARNING] We think this is a meta only update but it isn't (%llu)!
 latest-version: %@
 current-verions: %@
[DEBUG] Marking %@ as edited since shared because the item differs in edit mask
[DEBUG] forcing iwork conflict etag on %@ to be %@
[DEBUG] removing conflict loser with etag %@
[DEBUG] there is no conflict loser with etag %@
[CRIT] UNREACHABLE: we're making a file live without a version
[DEBUG] Marking %@ as edited since shared because the desired version differs in edit mask
[CRIT] Assertion failed: self.isFault == _desiredVersion.isFault
[DEBUG] Clearing prev zone rowID and inserting tombstone for item which finished syncing to the new zone
[DEBUG] 
%llx marking force upload: %@
[CRIT] UNREACHABLE: trying to force upload of a fault
[DEBUG] 
%llx marking force needs-syncup: %@
[DEBUG] 
%llx marking uploaded %@
[CRIT] API MISUSE: state isn't needs-upload
[CRIT] Assertion failed: record
[CRIT] UNREACHABLE: no version on uploaded document %@
[CRIT] UNREACHABLE: CK disagrees on the item size: %lld != %lld
[DEBUG] marking uploaded %@, signature:%@
[CRIT] Assertion failed: (fileAsset && !pkgSignature) || (!fileAsset && pkgSignature)
[CRIT] Assertion failed: signature
[CRIT] Assertion failed: _currentVersion
[CRIT] Assertion failed: _currentVersion.contentSignature.brc_signatureIsPendingPlaceHolder || self.isDocumentBeingCopiedToNewZone
[CRIT] Assertion failed: _currentVersion.thumbnailSignature.brc_signatureIsPendingPlaceHolder || self.isDocumentBeingCopiedToNewZone
[CRIT] Assertion failed: _currentVersion.uploadedAssets == nil
[DEBUG] item is now uploaded: %@
[DEBUG] Uploading document being copied into a new zone which is missing an upload asset
[WARNING] Rejected fault still needs delete because we can't upload it %@
[CRIT] Assertion failed: self.needsUpload
[WARNING] Not inserting dead tombstone because the item was already revived for %@
[CRIT] Assertion failed: parentItem
[CRIT] Assertion failed: self.supportsServerSideAssetCopies
[WARNING] Item moved back into its original zone %@ si: %@
[WARNING] Item already has a previous zone so ignore the existing zone for %@
[WARNING] Item %@ moved into new zone which supports server side asset copies %@
[DEBUG] learning sharing options %@ from parent %@
[DEBUG] 
%llx updating upload jobs
[CRIT] Assertion failed: !self.isDead && (!self.isFault || self.isDocumentBeingCopiedToNewZone)
[CRIT] Assertion failed: db.isBatchSuspended
[DEBUG] Clearing recursive properties on item becoming reserved
[DEBUG] updating recursive properties starting from document %@:
 fault:    {needs:%lld done:%lld}
 quota:    %lld
 upload:   {needs:(count:%lld size:%lld) done:(count:%lld size:%lld)}
 download: {needs:(count:%lld size:%lld) done:(count:%lld size:%lld)}
 unstage:  {needs:%lld done:%lld}
 sync-up:  {needs:%lld done:%lld}
[CRIT] UNREACHABLE: can't update recursive properties: %@
[DEBUG] Updating zone info for a CZM item and deleting old zone jobs
[DEBUG] Apply Changes[%lld]: Rescheduling reverse-alias in %@
[WARNING] Deleted item was copied from another zone, insert tombstone in the old zone
[DEBUG] 
%llx evicting client item %@
in %@
[DEBUG] nothing to do: already a fault
[DEBUG] nothing to do: eviction is already scheduled
[DEBUG] items not on disk are not evictable!
[DEBUG] %@ isn't evictable because has ubiquity clients connected
[CRIT] UNREACHABLE: item %@ have an empty file id!
[DEBUG] not evictable because it's locked
[DEBUG] not evicted because the item has a file presenter
[DEBUG] evicting server item %@
in %@
[INFO] Resume sync completed %s for item %@
[INFO] resumeSyncForBundleID: document local diffs: %@, trigger resuming: %d
[DEBUG] Auto resume paused sync documents
[DEBUG] 
%llx Got coordinated %@
[ERROR] Coordinated %@ request at '%@' canceled after %0.06f seconds
[ERROR] Coordinated %@ request failed at '%@' in %0.06f seconds: %@
[ERROR] Coordinated %@ request failed at '%@' in %0.06f seconds
[DEBUG] Obtained coordinated %@ %@ '%@%@%@' in %0.06f seconds
[DEBUG] Releasing coordinated %@ %@ '%@%@%@' after %0.06f seconds
[DEBUG] Canceling coordinated %@ because task tracker is cancelled
coord-read
[DEBUG] 
%llx Requesting coordinated read at '%@'
coord-delete
[DEBUG] 
%llx Requesting coordinated delete at '%@'
coord-write
[DEBUG] 
%llx Requesting coordinated write at '%@'
coord-rename
[DEBUG] 
%llx Requesting rename from '%@' to '%@'
[DEBUG] hinting file coordinator of a change
    at '%@'
[DEBUG] hinting file coordinator of a reconnect
    at '%@'
[DEBUG] hinting file coordinator of delete
    at '%@'
[DEBUG] hinting file coordinator of a bounce
    from '%@'
      to '%@'
[DEBUG] hinting file coordinator of a move%s
    from '%@'
      to '%@'
[DEBUG] Fixing up case of %@ to %@
[WARNING] Serial queue for session %@ is nil
[WARNING] no data in record %@
sync-down/container-metadata
[DEBUG] 
%llx starting fetch container-metadata changes operation %@
[DEBUG] 
%llx got container-metadata changes for %@ keys:%@ changeTag:%@ modified:%@
[DEBUG] received container-metadata properties plist %@ for %@
[ERROR] failed parsing container-metadata plist for container %@: %@
[DEBUG] containerID %@ had no properties plist
[DEBUG] we'll download icon %@ for container %@
[DEBUG] updating container-metadata %@ at etag:%@ (no asset downloaded)
[DEBUG] 
%llx container-metadata receieved server change token %@, caught-up:%s client change token %@ error:%@
[DEBUG] 
%llx finished operation
[DEBUG] 
%llx adding sub-operation to fetch asset contents: %@ for records: %@
[DEBUG] 
%llx per record callback: %@ - %@
[DEBUG] got asset contents for %@
[DEBUG] updating container metadata %@ at etag:%@ (after asset download)
[ERROR] unknown container %@
[DEBUG] 
%llx finished %@
[NOTICE] fetched %lu containers metadata from the cloud - %@
[DEBUG] Sync up of app library container metdata succeeded for %@
[WARNING] Sync up of app library container metdata failed for %@ because requestIDs differ %lld vs %lld
[DEBUG] remembering container-metadata server change token %@ requestID %llu
[DEBUG] 
%llx Sync: syncing down container metadata
upload
[ERROR] No per upload completion block for %@, error %@
[DEBUG] Publishing upload progress for %@
[WARNING] Upload: Received negative progress from CK. progress [%f]
[DEBUG] ignoring zone not found error for %@ - we'll create at the end of the operation
[CRIT] Assertion failed: modifyError
[DEBUG] zone was recreated, reuploading records
[CRIT] UNREACHABLE: This is not a private zone
[CRIT] UNREACHABLE: This is not a shared zone
[ERROR] can't save %@: missing ownerKey for ownerName "%@"
[CRIT] UNREACHABLE: got a SQL Error: %@
[WARNING] Bounced itemID %@ from "%@" to "%@" because it clashes with %@
[DEBUG] Not bouncing %@ to %@ because that's not a unique filename
[CRIT] Assertion failed: BRCItemTypeIsDirectory(st.type)
[ERROR] PCS chained directory doesn't have chain PCS! %@
[NOTICE] Promoting %@ to be a normal directory because it was created from our own sync up
[CRIT] Assertion failed: _db.changes == 1
[WARNING] changing filename to "%@" because "%@" is unrepresentable (item ID: %@, last editor: %@)
[ERROR] changing filename to "%@" because "%@" is %s name
[CRIT] Assertion failed: !(st.logicalName.br_isSideFaultName || [st.logicalName br_isExcludedWithMaximumDepth:1])
[CRIT] UNREACHABLE: can't deserialize filename: %@ of %@
[ERROR] Failed to update record (%@): %@
[ERROR] failed saving document %@: %@
[CRIT] UNREACHABLE: document without a structure:
    i:%@ %@
   this typically indicates either of two problems:
    - either we failed processing the last sync down and we
       failed inserting the structure record,
    - or the server forgot to send us a structure record.
[DEBUG] Document without a structure record but we haven't completed full sync.  Dropping the record on the floor for now i:%@ %@
[DEBUG] saving consistent structure record (%@) to db %@
[ERROR] can't deserialize %@: %@
[DEBUG] saving consistent document record (%@) to db %@
[DEBUG] Marking %@ as edited since shared because the modifier name is different
[CRIT] UNREACHABLE: can't deserialize extension: %@ of %@
[DEBUG] Adding %@ to the list of force package extensions (according to CKRecord)
[DEBUG] saving consistent symlink structure record (%@) to db %@
[ERROR] failed saving symlink %@: %@
[DEBUG] saving consistent finder bookmark structure record (%@) to db %@
[DEBUG] saving consistent alias structure record (%@) to db %@
[ERROR] failed saving alias %@: %@
[DEBUG] Requesting a new item rank for target %@ of %@
[DEBUG] saving consistent share record to db %@
[CRIT] Assertion failed: share.currentUserParticipant.role != CKShareParticipantRoleOwner
[CRIT] Assertion failed: share.currentUserParticipant.role == CKShareParticipantRoleOwner
[WARNING] ignoring unknown itemID on share
[ERROR] share without root record:
    i:%@
   this typically indicates either of two problems:
    - either we failed processing the last sync down and we
       failed inserting the shared record,
    - or the server forgot to send it to us.
[CRIT] UNREACHABLE: Can't save zone root record %@
[CRIT] UNREACHABLE: structure record which isn't a directory or document
[WARNING] Consistent state but unknown record type (recordType: %@).
[ERROR] failed saving tombstone share %@: %@
[WARNING] deleted shareID %@ was for already dead item
[DEBUG] marked shareID dead %@
[CRIT] UNREACHABLE: Couldn't decode itemID from recordID %@
[ERROR] failed saving tombstone %@: %@
[DEBUG] Not inserting tombstone entry for %@ because we don't have a server item already.  Let's go through rejected code path for perf.
[DEBUG] saving consistent record delete to db %@
[CRIT] Server sent us an item %@ which has non-root share options but isn't parented to a share (parented to %@)
[CRIT] Fixing up sharing options to have shareID for something that looks like a shared zone root for %@
[CRIT] Stripping share options for something that doesn't seem to need them %@
[ERROR] Can't recover share options on shared zone child item %@
[ERROR] Failed to recover sharing options on %@
[WARNING] Recovered sharing options on %@ by setting ck share options to null
[DEBUG] Forcing caught up state because we completed full sync so we must have synced down an unrelated zone
[DEBUG] Server killed %@ but it still has live children
[CRIT] UNREACHABLE: Server killed %s but it still has %d live children
[DEBUG] State inconsistent because %@ has %d live children
[CRIT] UNREACHABLE: State inconsistent because %@ is a document with no version
[DEBUG] We haven't received a content record on %@ yet, delaying for now
[DEBUG] Updated %@ to be a directory fault because it has a new unapplied item
[CRIT] UNREACHABLE: Server sent item %s which isn't a descendant of 'root'
[DEBUG] Found orphan when we haven't completed initial sync %@.  Delaying apply for now
[DEBUG] Orphan has favorite rank so fetching parent chain
[DEBUG] Orphan is recent, so fetching parent chain
[DEBUG] Orphan has finder tags so fetching parent chain
[CRIT] UNREACHABLE: Server sent item %@ which is parented to a non-directory %@
[CRIT] UNREACHABLE: Server sent live item %s parented to dead item %s
[WARNING] Server sent us live item %@ parented to dead item %@ but we haven't completed full sync. Delaying apply
[CRIT] UNREACHABLE: Server sent us an item %@ which has non-root share options but isn't parented to a share (parented to %@)
[DEBUG] Server sent us an item %@ which we couldn't locate share for, but we aren't caught up yet (parented to %@)
[CRIT] UNREACHABLE: Server sent us an item %@ which has non-root share options but should be a root share
[DEBUG] %@: Allocated ranks [%lld, %lld]
[DEBUG] %@ has no more directory faults so it is now full sync
[CRIT] UNREACHABLE: Can't create app library and zones for zone named: %s
server-zone/did-sync-down
[DEBUG] 
%llx saving sync-down batch (edits:%ld deletions:%ld)
[NOTICE] received %lu edited items and %lu deleted items from the cloud for %@
[NOTICE] received %lu deleted items from the cloud for %@
[NOTICE] received %lu edited items from the cloud for %@
[CRIT] Assertion failed: requestID >= self->_changeState.clientRequestID
[WARNING] Saving %lu failed directory list operations first
[CRIT] Assertion failed: [record.recordType isEqualToString:kBRRecordTypeContent] || [record.recordType isEqualToString:kBRRecordTypeStructure]
[DEBUG] %@ is no longer full sync because of a large delta sync operation
[WARNING] Promoting %@ to full sync because we have completed full sync before and now we're caught up again
[DEBUG] Updated %llu items to be normal directories in %@
[WARNING] Failed enumerating the changes stream but don't broken structure
[ERROR] something went wrong while saving to the db: %@
[DEBUG] updating %@
with requestID:%llu token:%@
[DEBUG] Allocating ranks for %@
[DEBUG] Delta sync successfully alloced rank so allowing finished changes stream to be destroyed
[CRIT] Assertion failed: _db.isInTransaction
[DEBUG] Can't list directory changes when completed full sync
[DEBUG] Listed directory changes in zones %@
[CRIT] Assertion failed: _failedListDirectoryOperations[itemID] == nil
[DEBUG] Removing applied tombstone: %@
[DEBUG] 
%llx Starting to GC %ld server tombstones in %@
[ERROR] failed purging zone %@ - %@
[DEBUG] Finishing destroying server truth
[DEBUG] Finished resetting server truth
[CRIT] UNREACHABLE: attempted delete all content on an unsupported zone type: %@
[CRIT] Assertion failed: !appLibrary.wasMovedToCloudDocs
[CRIT] Assertion failed: clientZone.appLibraries.count == 1
[CRIT] UNREACHABLE: Can't move clouddocs to itself
[CRIT] UNREACHABLE: Unable to cross zone migrate.  Blowing away our state and starting from scratch.
[DEBUG] %@ server state changed, %@ -> %@
[CRIT] Assertion failed: argc == 1
[ERROR] Can't open database at %@: %@
[ERROR] Can't close database at %@: %@
[ERROR] Can't insert into the database %@: %@
[ERROR] Could not create a unique index %@: %@
[INFO] Populating new columns with base path: %@
[ERROR] Unable to fetch URL properties for %@: %@
[DEBUG] Updating %@ %@ %d into database for %@
[ERROR] Failed to update %@ %@ %d into database for %@: %@
[INFO] Attaching database %@
[ERROR] Already have attached database %@ while trying to attach database %@.
[ERROR] Unable to attach db %@: %@
[ERROR] Failed to open %@
[ERROR] failed closing %@
[ERROR] Not updating attached database because no database has been attached.
[INFO] Updating attached database %@ %@
[DEBUG] Beginning update attach database batch: %@
[DEBUG] Successfully finished updating attach database batch: %@
[ERROR] Failed to enable foreign keys: %@
[ERROR] Failed to disable foreign keys: %@
[ERROR] Failed to negate file ids: %@
[DEBUG] Changed %lld items when negating file ids
[ERROR] Failed to negate doc ids: %@
[DEBUG] Changed %lld items when negating doc ids
[ERROR] Failed to create file_id_gen_count_index, so updating will be incredibly slow: %@
[DEBUG] Created file_id_gen_count_index
[ERROR] Failed to create doc_id_index, so updating will be incredibly slow: %@
[DEBUG] Created doc_id_index
[ERROR] Failed to update the gen count: %@
[DEBUG] Changed %lld items when updating gen counts
[ERROR] Failed to update the file ids: %@
[DEBUG] Changed %lld items when updating file ids
[ERROR] Failed to update the doc ids: %@
[DEBUG] Changed %lld items when updating doc ids
[DEBUG] Changed %lld items when clearing the staged generation ids
[ERROR] Failed to update the staged file ids: %@
[DEBUG] Changed %lld items when clearing the staged file ids
[ERROR] Unable to get inode for %@: %@
[ERROR] Failed to update the backup detector value: %@
[DEBUG] Patched the backup detector
[CRIT] there should always be one row in client_state {%@}
[CRIT] unable to flush client state, crash to maintain consistency
[DEBUG] Fixed up the FSEvents root ID
[WARNING] No path for Caches directory
[DEBUG] Located ubiquity salt path by the duck test - %@
[WARNING] Couldn't locate ubiquity salt path in %@
[WARNING] fetchRootItemForProviderDomain failed with error: %@
[WARNING] No path for Mobile Documents directory
[CRIT] UNREACHABLE: unknown item type %d
[CRIT] UNREACHABLE: invalid type
[CRIT] UNREACHABLE: can't get the structure record of a shared-top-level document without the zone of the alias record
[CRIT] UNREACHABLE: Asked for side car recordID on an item that doesn't have side cars
[DEBUG] path match info for %@ is %@
[WARNING] we have no etag for %@
path matching: %@
[WARNING] we have no reference for %@
path matching: %@
[CRIT] UNREACHABLE: can't get the structure record without a zone
[CRIT] UNREACHABLE: asked for folder root structure record on a non-folder
[CRIT] Assertion failed: sqlite3_value_type(value) == SQLITE_NULL
[CRIT] Assertion failed: sqlite3_column_type(stmt, index) == SQLITE_NULL
[CRIT] Assertion failed: self.brc_isAppLibraryRootRecordID
[CRIT] Assertion failed: self.brc_isAppLibraryDocumentsRecordID
[CRIT] Assertion failed: libraryRowID
[CRIT] Assertion failed: libraryRowID || sharedZoneRowID || !([identifier isEqualToString:BRCItemIDZoneRoot] || [identifier isEqualToString:BRCItemIDDocuments])
[CRIT] UNREACHABLE: Corrupt side car file
[CRIT] UNREACHABLE: attempt to extract an itemID from '%s'
[CRIT] UNREACHABLE: attempt to extract an itemType from '%s'
[WARNING] The server sent a bounceNo <= 1: %@
[CRIT] UNREACHABLE: empty basename and no bounceno
[CRIT] UNREACHABLE: Aliases parent ref zoneID %@ must be equal to aliases zoneID %@!
[CRIT] UNREACHABLE: No alias target
[WARNING] can't deserialize filename: %@
[CRIT] UNREACHABLE: The server should have set a birthtime on %s
[CRIT] UNREACHABLE: %@ parent ref zoneID %@ must be equal to record's zoneID %@!
[CRIT] UNREACHABLE: The server should have set an mtime for %s
[WARNING] %@ record %@ has a size inconsistency, %llu != %llu
[ERROR] failed deserializing version in %@: %@
[ERROR] %@ record %@ doesn't have a lastEditorDeviceName
[WARNING] Server gave us an unrepresentable filename: "%@" using "%@"
[CRIT] UNREACHABLE: The record name is not a content in the shared zone
[CRIT] Assertion failed: si.isBRAlias
[ERROR] couldn't set basename to '%@'
[CRIT] UNREACHABLE: invalid filename
[CRIT] UNREACHABLE: Couldn't find xattr for signature %@
[DEBUG] On Sync-up of %@ using old etag due to iWork conflict
[CRIT] Assertion failed: version != nil
[CRIT] Assertion failed: (diffs & BRC_IF_CONTENT_SIGNATURE) || item.isDocumentBeingCopiedToNewZone
[CRIT] Assertion failed: self[kBRRecordKeyXattr]
[WARNING] Created app library through sync flow %@
[DEBUG] Encountered a share alias, syncing down shared database to detect %@
[DEBUG] found app library record named: %@
[DEBUG] found app documents record named: %@
[CRIT] UNREACHABLE: parent is not a CKReference for %@
[DEBUG] found parent app library record named: %@
[DEBUG] found parent app documents record named: %@
[CRIT] Assertion failed: ![zoneName isEqualToString:BRUbiquitousDefaultContainerID]
[CRIT] UNREACHABLE: invalid lastEditorDeviceName on %@: %@
[CRIT] UNREACHABLE: rootAppLibraryRecordForAppLibraryID: should not be called with a bogus app library id %@
[CRIT] Assertion failed: dataRepresentation != nil
[CRIT] UNREACHABLE: invalid key %@ and obj %@
[CRIT] UNREACHABLE: icon doesn't exist anymore at %@ - %@
[WARNING] share has no CKShareTypeKey, using extension from CKShareTitleKey (%@)
[WARNING] can't find document name for share %@ and can't extract it from URL; using '%@' as default
[DEBUG] Apply Changes[%lld]: postponing rank (item CZM processing)
[DEBUG] Apply Changes[%lld]: postponing rank (ongoing cross-zone migration)
[DEBUG] New item %@ older than a deleted directory %@ so marking dead
[DEBUG] Apply Changes[%lld]: postponing rank (missing parent while greedy)
[DEBUG] Apply Changes[%lld]: postponing rank (missing parent)%@
[DEBUG] Dead item doesn't need any action
[DEBUG] Don't suspend delete of shared to me item %@
[DEBUG] Suspending rank for item which needs an OOB sync ack %@
[DEBUG] Not suspending download of an item that needs CZM processing %@
[DEBUG] Forcing deletion of item dead in both client and server truth %@
[DEBUG] Suspending rank for item with conflicts: %@%s
[DEBUG] Learning sharing options on local item %@ from %@
[DEBUG] Learning structure etag on item with only side car diffs %@
[WARNING] client zone %@ forgot to sync up!
[DEBUG] the fs root was remotely deleted, we need to recreate it and reupload it
[DEBUG] Apply Changes[%lld]: postponing rank (live child)
[DEBUG] Marking item unknown to server %@ as rejected
[DEBUG] Found a freshly scanned item from an initial scan that path matches: %@
[DEBUG] Suspending rank since freshly scanned means either same content or conflict: %@
[DEBUG] Accepting Structural Etag update for %@
[DEBUG] Remove rank for item with no real changes: %@
[CRIT] UNREACHABLE: Can't prepare sync for a zone that is blocked
[DEBUG] %@ is not pristine and needs sync
[DEBUG] Avoid syncing up a pristine zone
[DEBUG] 
%llx Sync: syncing up clientZone %@. batch size - %u
[DEBUG] Because this is our first time syncing up, adding %@
[DEBUG] ignoring item with negative cost for now %@
[DEBUG] Dedicating this sync up operation to pcs chaining %@
[DEBUG] no record needs syncing at the moment.
[CRIT] Assertion failed: items.count == 0
[DEBUG] destroying shares instead of unsharing
[DEBUG] preparing to send in requestID:%lld: %lu records, delete %lu recordIDs, unshare %lu iwork shares, rename %lu shares, about %lu items
[NOTICE] sending %lu items to the cloud for %@
sync-up
[DEBUG] Finished PCS chaining a batch when completed: %d listOp: %@ error: %@
[DEBUG] 
%llx sync-up error for record %@: %@
[ERROR] Blocking %@ from sync up until it is next modified because the server failed with a permanent error
[WARNING] Updating parent item to be chained because it is unknown and we encountered a PCS error
[WARNING] Updating local item to be chained because it is unknown and we encountered a PCS error
[WARNING] Encountered an unknown pcs error for %@
[DEBUG] ignoring error for %@ because an other item in the batch failed
[DEBUG] skipping throttling item %@ even though it caused the failure
[CRIT] Assertion failed: self.serverZone.isPrivateZone
[DEBUG] Fetching share IDs shared by us for renames: %@ and unshare: %@
[WARNING] Got a permanent error %@ when fetching records and shares
[WARNING] got an error while fetching the records and shares %@, but ignoring it
[DEBUG] Saving shares %@ shared by us for unshare and rename
[DEBUG] No shares need saving
[ERROR] send metadata error: %@
[CRIT] Assertion failed: [contentRecord.recordType isEqualToString:kBRRecordTypeContent]
[CRIT] Assertion failed: protectionData
[CRIT] UNREACHABLE: Protection data mismatch between share and record being shared! (%@ vs %@)
[DEBUG] updated content record %@ with protectionData %@ baseToken %@ routingKey %@
[CRIT] Assertion failed: share.publicSharingIdentity
[CRIT] UNREACHABLE: protection data mismatch between content public sharing identity and web sharing data (%@ vs %@) for %@
[CRIT] UNREACHABLE: content record is missing protection data %@
[CRIT] Assertion failed: !fetchedRecord
[CRIT] UNREACHABLE: protection data mismatch! ignoring content records version (%@ to %@)
[DEBUG] record %@ still needs web sharing protection data
[CRIT] UNREACHABLE: Failed to get new web sharing identity: %@
[CRIT] UNREACHABLE: Timed out while waiting for new web-sharing identity
[CRIT] Assertion failed: [firstItemID isEqual:secondItemID]
[CRIT] Assertion failed: error
[ERROR] Failed getting web sharing identity for %@ - %@
[DEBUG] got web sharing identity for %@
[CRIT] UNREACHABLE: invalid sharing records count
[DEBUG] Sync: sending requestID:%lld for container %@
[DEBUG] Forcing sync up of dead parent %@
[DEBUG] Forcing item dead in the server truth to re-upload as a rejected item - %@
[WARNING] We changed share roots from %@ to %@ on %@ and got a permission error so behaving like an unknown item
[DEBUG] item %@ needs to be re-uploaded
[DEBUG] item %@ doesn't need to be reuploaded
[CRIT] UNREACHABLE: Couldn't find parentID for record %@
[DEBUG] We already remapped %@
[CRIT] Assertion failed: !item.isKnownByServer
[WARNING] We were told to remap to an item %@ -> %@ which is already in our client truth
[WARNING] Item is also on disk, marking the item as rejected
[DEBUG] The server wasn't able to remap parentID %@ to pcs chained parent %@ so doing it now
[DEBUG] handling error for %@
[CRIT] UNREACHABLE: Unable to open iwork package %@
[CRIT] UNREACHABLE: Uploaded an iWork package of size 0 (itemID: %@)
[CRIT] Assertion failed: pathRelativeToRoot
[CRIT] Assertion failed: isInDocsFolder
[DEBUG] skipping throttling because this is a batch failure
[DEBUG] server provided backoff %.03fs (delay %.03fs)
[DEBUG] sync backoff %.03fs
[CRIT] UNREACHABLE: invalid length: %ld
[CRIT] UNREACHABLE: we should not have alias uuid types anymores
[CRIT] UNREACHABLE: unknown itemID type %d
[CRIT] Assertion failed: object->item_code == 1 || object->item_code == 2
[CRIT] Assertion failed: object->item_code == 4 || object->item_code == 5
[CRIT] UNREACHABLE: invalid BRCItemID (%@)
[CRIT] UNREACHABLE: unmigrated? invalid BRCItemID (%@) - %d
[CRIT] Assertion failed: rio.app_lib_rowid
[CRIT] Assertion failed: uio.app_lib_rowid
[CRIT] UNREACHABLE: unknown itemID kind
[CRIT] UNREACHABLE: invalid enclosure uuid - %@
[DEBUG] Not need to remove %@ as it was not created yet
[WARNING] can't suppress %@: %@
[CRIT] UNREACHABLE: migration should work: %@
[ERROR] invalid owner in rowid_reservations, resetting
[ERROR] found duplicate app library, resetting
[CRIT] UNREACHABLE: incomplete migration for client_uploads
[CRIT] UNREACHABLE: incomplete migration for client_downloads
[CRIT] Corrupt DB state: some items belong to non-existing zones!
[ERROR] parentID of unexpected length %d
[ERROR] itemID of unexpected length %d
[ERROR] type mismatch with parent %d or item %d
[CRIT] Should always be able to resolve synced folder root!
[WARNING] can't find relpath by ID: %@ %{errno}d
[DEBUG] found one shared doc by ID: %@
[ERROR] can't find relpath %@ by parent %@ and name: %@ %{errno}d
[DEBUG] found one shared doc by parent and name: %@
[DEBUG] Found alias item parent: %@ in zone: %@
[CRIT] UNREACHABLE: no destination zone for %@
[WARNING] can't find dst by ID: %@ %{errno}d
[DEBUG] Found a usable parent path of our server item: %@
[DEBUG] can't resolve: %@ %{errno}d
[WARNING] can't resolve the root of iCloud Drive: %@ %{errno}d
[DEBUG] we have already renamed the files on disk
[INFO] renamed %@
  from: %@
    to: %@
[ERROR] can't rename %@
     from: %@
       to: %@ %{errno}d
[WARNING] can't bounce %@ to %@
[CRIT] Assertion failed: dstZone
[CRIT] Assertion failed: dstAppLibrary
[CRIT] Assertion failed: physicalBounceNo && physicalBounceNo >= 2
[CRIT] UNREACHABLE: Ignoring corrupt side car file
[CRIT] UNREACHABLE: Found more than one match for that query
[WARNING] Cannot decode configuration plist from the database
[CRIT] Assertion failed: argc == 3
[CRIT] UNREACHABLE: Couldn't save xattr blob for signature %@.  Continuing anyway - %@
[DEBUG] Deleted %llu items from client truth which haven't been synced to the server
[DEBUG] Found table ciconia_migration_info, trying to fill it up
[INFO] Failed inserting into ciconia_migration_info. Error = %@. Ignoring
[DEBUG] Deleted %llu br aliases from client truth
[DEBUG] We have items to migrate to fpfs
[ERROR] Failed determining if we have items - %@
[DEBUG] We don't have items to migrate to fpfs
[CRIT] Assertion failed: appLibraryOwner
[CRIT] Assertion failed: syncContextIdentifier
[CRIT] UNREACHABLE: Can't import br aliases anymore %@
[CRIT] UNREACHABLE: Import object of unknown type %@
[INFO] rejecting creation for dataless item that couldn't be found
[INFO] rejecting Trash folder
[INFO] rejecting side fault
[INFO] rejecting BRAlias
[WARNING] Trying to move shared top item %@ into trash at parent %@
[WARNING] Trying to move shared top item %@ into another shared item %@
[WARNING] Moving an unshared directory %@ into a shared parent %@ where the source item has shared subitems
[WARNING] Failed updating ciconia_migration_info for key %@: %@
[DEBUG] Trashed item has bookmark data for import
[DEBUG] Shared item has bookmark data for import
[WARNING] Can't find zone for trash putback %@, falling back to clouddocs zone
[WARNING] Can't find trash parent for %@, falling back to one at the zone root
[ERROR] Can't create trash item - %@
[ERROR] Can't find a parent for trashed item %@
[DEBUG] Found shared item by bookmark data %@
[WARNING] Couldn't find item by bookmark data %@ (%@)
[WARNING] The existing shared item doesn't have the right kind
[CRIT] UNREACHABLE: can't match an empty shared package %@ to the existing shared package item %@
[INFO] trying to import from on-disk ID: fileID=%llu docID=%u genCount=%llu
[DEBUG] Found existing item by docID %@
[DEBUG] We have changes to upload on imported item f:(%llu vs %llu) g:(%llu vs %llu)
[DEBUG] Existing item isn't a document! %@
[WARNING] Mismatching type for the found item (%@), ignoring!
[DEBUG] Found existing item by fileID %@
[INFO] found item that seems to match template: %@
[INFO] Bouncing item %@ because of %@
[WARNING] We have a collision with %@ but it's invalid
[CRIT] Assertion failed: options & NSFileProviderCreateItemMayAlreadyExist
[WARNING] Can't find file id for %@.  Updating from server item because we have no way to get its content
[DEBUG] Item doesn't appear to be edited so stripping the content edited bit for %@
[DEBUG] forcing child of read-only share to match what exists in our db %@
[CRIT] UNREACHABLE: Child of readonly share path-match should always already exist - %@
[WARNING] Merging existing item without may already exist flag %@ with template %@
[DEBUG] Found existing documents folder %@
[DEBUG] Marking desktop or documents item as from initial scan %@ to avoid bounce
[DEBUG] Marking user invisible item as from initial scan %@ to avoid bounce
[DEBUG] Importing an existing app library %@ with mangledID %@
[WARNING] Importing unknown item: %@ - that's unexpected!
[CRIT] UNREACHABLE: Received item with unexpected type and no content %@
[CRIT] Assertion failed: appLibrary.db.isBatchSuspended
[CRIT] Assertion failed: _session.clientDB.isInTransaction
[DEBUG] Can't reparent to folder: undoing reparent on %@ to %@
[WARNING] Base version differs from local version content! overwriting our local version (%@ vs %@)
[WARNING] Base version differs from local version structure! overwriting our local version (%@ vs %@)
[DEBUG] We can't save a zone root so don't modify it
[DEBUG] We can't update a share acceptation fault %@
[DEBUG] Attempting to rename/reparent/trash special folder: undoing this operation on %@
[CRIT] Assertion failed: [targetItem.contentType conformsToType:UTTypeSymbolicLink]
[DEBUG] Marking %@ as forgotten because we matched based on template
[DEBUG] template item %@ differs in trash-ness from %@
[DEBUG] template item %@ differs in kind from %@
[DEBUG] template item %@ differs in share-bookmark from %@
[CRIT] UNREACHABLE: can't path-match an empty package %@ to the existing package item %@
[CRIT] UNREACHABLE: -asPrivateClientZone called on a shared zone
[CRIT] UNREACHABLE: -asSharedClientZone called on a private zone
[CRIT] Assertion failed: _syncUpBudget && _syncUpThrottle && _syncDownThrottle
[DEBUG] associating %@ with %@
[DEBUG] 
%llx %s container %@
[CRIT] Assertion failed: _delegate
[DEBUG] Activation done
[DEBUG] 
%llx deactivating %@
[CRIT] Assertion failed: _activated
[DEBUG] waiting for operations to finish
[DEBUG] syncUpOp finished
[DEBUG] syncDownOp finished
[DEBUG] deleteAllContentsOperation finished
[DEBUG] zoneCreationOp finished
[DEBUG] Finished waiting for %@
[DEBUG] Finished waiting for %lu list operations to finish
[CRIT] UNREACHABLE: Container needs server and client truths reset: %@
[WARNING] Container needs server and client truths reset: %@
[WARNING] Container needs reset - %lu
[WARNING] Server zone has been moved to cloud docs
[WARNING] Server tells us we need to redo PCS prep
[DEBUG] Not considering %@ for sync bubble tasks because sync is blocked
[DEBUG] 
%llx disconnecting listener so that they gather again
[DEBUG] 
%llx disconnected NSMDQ listeners for %@
[CRIT] UNREACHABLE: there should never be more than one match for that query (parentID: %@, name: %@, parentZoneID: %@)
[CRIT] Assertion failed: !_CFURLIsPromiseName((__bridge CFStringRef)name)
[CRIT] Assertion failed: _CFURLIsPromiseName((__bridge CFStringRef)name)
[DEBUG] Sync: updated sync-up throttle: %@
[DEBUG] Ignoring sync state change because sync is disabled for this container
[DEBUG] sync state changed: %@, was %@
[DEBUG] Asking for sync up but we never synced down, do that first
[DEBUG] %@ sync state changed, was %@
[DEBUG] 
%llx scheduling zone creation operation for %@
[DEBUG] 
%llx finished zone creation with error: %@
[DEBUG] added %@ as a sync-down dependency of %@
[DEBUG] removed %@ as a sync-down dependency of %@
[DEBUG] Sync down has greater priority than %@
[DEBUG] Boosting sync down op to be non-discretionary because we have blocked operations which are non-discretionary
[INFO] 
%llx %@: starting sync down
[DEBUG] we're not activated anymore, not syncing-down immediately
[DEBUG] adding sync down dependency: %@
[DEBUG] Sync: updated sync-down throttle: %@
[CRIT] Assertion failed: _syncDownOperation == nil
[CRIT] Assertion failed: _syncUpOperation == nil
[DEBUG] Sync: %@ is already in sync, odd
[CRIT] UNREACHABLE: We are alreadying syncing but we tried to sync again
[DEBUG] 
%llx Sync: considering sync operation for %@
[DEBUG] Sync-up has no global budget for more than 10s: %.1fs (%@)
[DEBUG] Sync-up has no budget for more than 10s: %.1fs (%@)
[DEBUG] Sync-up is throttled for more than 10s: %.1fs (%@)
[DEBUG] Sync-up retry-after is over 10s: %.1fs
[DEBUG] sync-down is throttled for more than 10s: %.1fs (%@)
[DEBUG] Sync: trying to start sync up
[DEBUG] Sync: starting sync up with cost:%.1f
[DEBUG] Sync: nothing to sync up
[DEBUG] Sync: items to sync-up are throttled for another %.1fs
[DEBUG] Executing cancelled op %@ so operations waiting on it can proceed
[CRIT] UNREACHABLE: Forcing cancel on sync op
[DEBUG] No sync required anymore at that time
[DEBUG] Not ready to sync yet, sleeping for %.3fs
[NOTICE] Item %@ isn't known by the server so marking it as created by the current device
[DEBUG] Not learning anything about %@ because the update was dropped: %@
[DEBUG] Not learning anything about %@ because the server merged ETag %@ to produce %@
[CRIT] UNREACHABLE: Couldn't locate alias target for %@
[DEBUG] Learn structural ETag for %@: %@
[DEBUG] Learn content ETag and Last Editor for %@: %@, %@
[DEBUG] Learn content ETag for %@: %@
[DEBUG] Learn side-car ETag for %@: %@
[DEBUG] 
%llx Sync: completed sync up for %@, cost:%.1f, itemCount:%llu %@
[DEBUG] decreasing sync-up batch size since server says we exceeded limits
[DEBUG] Sync: requestID:%llu cancelled
[DEBUG] Sync: requestID:%llu failed sending: %@
[ERROR] Sync: requestID:%llu failed sending: %@
[DEBUG] Sync: requestID:%llu succeeded
[DEBUG] Sync: updated sync-up throttle: %@
      and container state: %@
[DEBUG] Queueing sync barrier sync down for %@
[DEBUG] Not resuming sync token because %p is still in flight
[DEBUG] %@ isn't live, looking for server item
[DEBUG] Updating item idle item %@ from server item %@ to fulfill the locate item request
[ERROR] Failed to save item to db when updating from server item %@ - %@
[WARNING] Can't update local item %@ from server item %@
[DEBUG] Failing op %@ because the sync down failed
[NOTICE] signaling sync down waiters
[DEBUG] Sync: updated sync-down throttle: %@
      and container state: %@
[WARNING] marked %lld items rejected after cross zone move
[CRIT] Assertion failed: _requestID == 0 || requestID <= _requestID
[WARNING] The zone wasn't found on sync down so failing all blocked operations right away
[DEBUG] Updated %llu items to strip the oob-sync-ack bit
[WARNING] not enumerating in-flight items until we are caught up.
[DEBUG] received item in request:%llu
   local:  %@
   server: %@
[DEBUG] item acknowledged in requestID:%llu
   local:  %@
   server: %@
   diffs:  %@
 learning etag: structural:%s content:%s
[DEBUG] Alias was rejected when syncing up in private zone %@
[DEBUG] 
%llx Resolving server-side folded path-match for: %@
[WARNING] Can't merge %@ with %@
[DEBUG] Found a path-match in the server truth: %@
[DEBUG] killing local reserved item for the path-match: %@
[DEBUG] path-match is new, learn new item ID %@ instead of %@
[DEBUG] path-match is known but live on the file-system: %@
[DEBUG] we couldn't find a suitable path-match, mark the item as rejected
[DEBUG] Sync: requestID:%llu acknowledged
[DEBUG] Sync: just a new sync down without new sync up since requestID:%llu
[WARNING] Marking latest sync request failed because the requestIDs differ %llu vs %llu for %@
[CRIT] UNREACHABLE: Not cross zone moving a zone to itself
[DEBUG] 
%llx cross zone move documents from %@ to %@
[DEBUG] cleaning up %@
[CRIT] Assertion failed: !document.needsReading || db.changes > 0
[CRIT] UNREACHABLE: can't prepare cross move items! %@
[CRIT] Assertion failed: db.changes == 0
[CRIT] UNREACHABLE: can't cross move items! %@
[NOTICE] cross zone moved %lld items from %@ to %@!
[ERROR] can't save cross zone move state: %@
[ERROR] can't save cross zone move state for appLibrary %@: %@
[ERROR] can't save destination zone: %@
[CRIT] Assertion failed: self._hasAllItemsDidUploadHandlers
[WARNING] calling the upload handler because sync is failing: %@
[DEBUG] Completed upload for all items for %@
[DEBUG] Still need to sync up %@ more items for sync bubble for %@
[DEBUG] Tombstones with ranks are gone: %@
[DEBUG] Signaling that tombstones can be collected in %@
[WARNING] The zone %@ is blocked because the app isn't installed but we have a non-discretionary op %@. Unblocking the zone
[DEBUG] op has priority over the sync down op so cancelling sync down and rescheduling
[DEBUG] The server zone hasn't been created yet so failing the operation right away
[DEBUG] Blocking server stitching op %@ until we fetch the initial change token
[DEBUG] Starting to list the contents of %@ (%sdiscretionary)
[DEBUG] Blocking list on share accept %@
[DEBUG] Blocking low-priority parent fetch operation %@ on %@
[DEBUG] Blocking low-priority locate record operation %@ on %@
[DEBUG] Blocking low-priority fetch recents operation %@ on %@
[DEBUG] Removing list operation with no observers %@
[DEBUG] Blocking low-priority list operation %@ on %@
[DEBUG] Starting to fetch parent chain of %@
[DEBUG] Starting to locate record for %@
[DEBUG] Can't %@ when not activated
[DEBUG] Can't %@ when sync needs os upgrade
[DEBUG] Can't %@ when resetting
[DEBUG] Can't %@ when the zone doesn't exist
[DEBUG] Can't list changes on %@ when we have already completed full sync
[DEBUG] Can't list %@ because it had failed previously
[WARNING] Got request to list documents directory of app library that don't have data scope. AppLibrary [%@].
[DEBUG] Cancelling operation %@ because it is discretionary and we have non-discretionary work
[WARNING] Failed listing directory %@ - %@
[DEBUG] Finished listing contents of %@
[DEBUG] Can't list item %@ in zone %@ which isn't a directory fault %d
[DEBUG] We've completed full sync so just recursively rescheduling items under %@
[DEBUG] Continue to recursive list the contents of %@
[WARNING] Got request to rec-list documents directory of app library that don't have data scope. AppLibrary [%@].
[DEBUG] Finished listing contents of %@ with error %@
[DEBUG] Forcing %@ to list all changes because we cancelled an old version
[DEBUG] Starting to recursive list the contents of %@
[DEBUG] Inserted parent chain for itemID because we already completed full sync
[WARNING] Can't find parent, we will try to create the operation even if we are in full sync
[WARNING] Can't fetch parent chain of a root item
[CRIT] UNREACHABLE: can't fetch parent chain with no itemID
[DEBUG] Can't locate record when completed full sync
[CRIT] UNREACHABLE: Can't locate share alias record in a shared zone
[DEBUG] Zone doesn't exist so already have recent documents in %@
[DEBUG] Already fetching recent documents in %@
[DEBUG] Already fetched recent and favorite documents in %@
[DEBUG] Completed full sync so already have recent documents in %@
[DEBUG] Not fetching recents on a shared zone %@
[DEBUG] Not fetching recents on a non-public zone %@
[DEBUG] Finished fetching recent documents for %@ - %@
[DEBUG] Staring to fetch recent documents %@
[WARNING] calling and removing all share acceptance blocks
[INFO] popOnDiskBlockForItemID [%@]
[DEBUG] 
%llx waiting for item %@ to be on disk
[WARNING] %@ and %@ must be non nil to register action
[DEBUG] 
%llx done waiting for item to be on disk
[DEBUG] Waiting for %@ to be available
[WARNING] %@ is resetting. Not waiting on faulting of %@
[WARNING] %@ is dead, not waiting on faulting.
[INFO] Local item not found. Wait for the item [%@] to be on disk.
[WARNING] %@ is on disk after syncing down and refreshing
[DEBUG] Item %@ already available
[DEBUG] 
%llx waiting for item %@ to be downloaded
[DEBUG] 
%llx done waiting for item to be downloaded
[WARNING] %@ is resetting. Not waiting on download of %@
[DEBUG] network is unreachable. Not waiting on download of %@
[DEBUG] Waiting for %@ to be downloaded
[DEBUG] Item %@ already downloaded
[WARNING] Cancelling sync down operation that uses a background session
[WARNING] Cancelling sync up operation because we need to sync down now
[WARNING] %@ is resetting. Not waiting on sync down
[DEBUG] network is unreachable. Not waiting on sync down of %@
[DEBUG] 
%llx waiting sync down to complete for item %@
[DEBUG] 
%llx done waiting for sync down to complete on first try
[DEBUG] 
%llx Item failed first try waiting for sync down to complete... Retrying once...
[DEBUG] 
%llx done waiting for sync down to complete after retry
[DEBUG] Waiting for sync down for %@ in %@
[DEBUG] 
%llx waiting to locate item [%@] with record ID [%@]
[WARNING] %@, %@ and %@ must be non nil to register action
[DEBUG] 
%llx Item [%@] already located. Execute block directly.
[CRIT] UNREACHABLE: Item in server items table. We should get at least that item parent id
[DEBUG] 
%llx Item [%@] already located. Parent chain confirmed. Execute block directly.
[DEBUG] 
%llx Need to locate item [%@]
[DEBUG] 
%llx Item [%@] located successfully
[DEBUG] 
%llx Item [%@] was not located
[ERROR] Fail to create LocateRecordOperation for item [%@] with record ID [%@] --> Fail all waiting blocks.
[INFO] Locate record ID [%@]: %@ with error %@
[WARNING] %@ is resetting. Not waiting to locate item [%@]
[DEBUG] network is unreachable, don't try to locate item [%@]
[DEBUG] 
%llx Cancelling all share acceptance callbacks due to unreachable network
[CRIT] Assertion failed: pos == ITEM_RECURSIVE_PROPERTIES_FIELDS_COUNT
[WARNING] Couldn't find refreshed item for %@
[DEBUG] Item finished CZM procesing and now is done %@
[DEBUG] Not processing item which is already almost dead %@
[DEBUG] Sync: Starting downloading all children under %@ due to changing shares
[DEBUG] Not downloading item which is shared to me in a CZM'd folder - %@
[ERROR] Failed to start downloading item %@ under %@
[CRIT] UNREACHABLE: Couldn't find fault which we should have %@
[DEBUG] Sync: Finished waiting for download of children under %@
[ERROR] Failed starting download for CZM - %@
[DEBUG] Sync: Starting downloading %@ due to changing shares
[DEBUG] Sync: Finished waiting for download of %@
[WARNING] Strange... We have multiple levels of associated item IDs for %@ - (%@ vs %@)
[WARNING] An item moved into this zone and needs to be downloaded for czm %@. (reparented root item %@)
[CRIT] Assertion failed: parentItemID
[CRIT] Assertion failed: [item.clientZone isEqualToClientZone:self]
[WARNING] An item moved into %@ and needs to be downloaded for czm %@.
[CRIT] Assertion failed: (localItemHandler || serverItemHandler) && !(localItemHandler && serverItemHandler)
[INFO] %@: reply(%@, %@)
[CRIT] Assertion failed: urlWrapper == nil
[DEBUG] 
%llx creating item based on template %@ at '%@' fields:%llu options:%llu
[ERROR] Unable to move %@ to group container %@ with error %@
[DEBUG] Returning %@ to ICDFileProviderExtension for item %@
[DEBUG] Waiting for sync down of the item to complete before download for %@
[DEBUG] Blocking download of %@ on accept op %@
[INFO] 
%llx %@ (%@) %s %@, %@, 0x%lx
[DEBUG] 
%llx deleting item %@%s
[DEBUG] Structure signature mismatch for deletion %@ vs %@
[DEBUG] Content signature mismatch for deletion %@ vs %@
[INFO] 
%llx %@ (%@) %s %@, %@, 0x%lx, %@, 0x%lx
[DEBUG] Starting BRCXPCClient(FPFS)::reimport
[INFO] %@: reply(%@, %d, %@)
[INFO] %@: reply(%@, %llu, %@)
[INFO] 
%llx %@ (%@) %s %@
[INFO] %@: reply(%d, %@)
[DEBUG] 
%llx getting move status to reparent %@ to %@
[INFO] %@: reply(%@, %@, %@)
[DEBUG] no local item for %@
[DEBUG] Marking %@ from initial scan
[CRIT] Assertion failed: ![alreadyBouncedName isEqualToString:bouncedLogicalName]
[DEBUG] Locally bounced %@
[DEBUG] Ignoring name and parent change on immutable documents folder
[CRIT] Assertion failed: [_parentZoneRowID isEqualToNumber:newParentID.zoneRowID]
[CRIT] UNREACHABLE: Failed to save xattr blob to stage for signature %@ - %@
[CRIT] UNREACHABLE: nobody should import an item from a fault
[CRIT] UNREACHABLE: nobody should import an item from a BR Alias
[CRIT] UNREACHABLE: Unexpected import object %@
[ERROR] failed to fetch tags: %@
[DEBUG] read tags: [%@]
[WARNING] Inaccessible folder %@
[DEBUG] dropping tags
[ERROR] Failed to create package: %@
[WARNING] Failed to anchor package %@ at %@: %@
[WARNING] Failed to open package %@ at %@: %@
[CRIT] Assertion failed: _serverZone
[CRIT] Assertion failed: _defaultAppLibrary
[CRIT] Assertion failed: [serverZone isKindOfClass:[BRCPrivateServerZone class]]
[DEBUG] 
%llx %s private container %@
[WARNING] problem report for %@ wasn't acked
[DEBUG] problem report for %@ completed
[WARNING] Zone has resetted more than %lu times during the last %f seconds
[DEBUG] zone-health changed for %@ previous %@ new %@
[WARNING] We had a problem and the zone is healthy again, resetting the zone
[WARNING] We had a problem and the zone is healthy again, no need to reset the zone
[WARNING] Server told us the zone is healthy again, but we didn't have a problem
[DEBUG] 
%llx recomputing app sync block state for %@
[DEBUG] updating sync state to be %s for %@
[DEBUG] sync remaining %s for %@
[DEBUG] Queueing faults live barrier for %@
[DEBUG] 
%llx Resolving alias clash:
 alias1: %@
relpath1: %@
 alias2: %@
relpath2:%@
[DEBUG] silently deleting newer item %@
[DEBUG] oldest alias still resolves at %@
[DEBUG] deleting newest alias at %@
[DEBUG] oldest alias doesn't resolve, moving to newest path at %@
[WARNING] Failed to create snapshot %@ - %@
[DEBUG] Failed to create directory at %@ - %@
[WARNING] Failed to mount %@ - %@
[WARNING] Failed to unmount %@ - %@
[DEBUG] Can't rmdir %@ - %@
[DEBUG] Failed to delete snapshot %@ - %@
[CRIT] Assertion failed: self.progress.completedUnitCount >= 0
[CRIT] UNREACHABLE: total unit count should always be greater or equal to completed unit count; %@
[CRIT] UNREACHABLE: an unfinished progress should have at least one transfer tracked; %@
[CRIT] UNREACHABLE: future progress state isn't valid (unitCount: %lld)
[WARNING] Progress: observing a progress that doesn't have a doc ID
[WARNING] Progress: observing a progress that doesn't have a progress group
[NOTIF] Progress: ignore delta update because %@ for doc %@ isn't tracked anymore
[NOTIF] Progress: negative delta update for doc %@; [%lld -> %lld]
[NOTIF] Progress: ignore delta update ([%lld -> %lld] < %@) for doc %@ because it was counted as part of the resume operation
[NOTIF] Progress: ignore delta update ([%lld -> %lld] == %@) for doc %@ because it was counted as part of the resume operation
[NOTIF] Progress: %s finished for doc %@
[CRIT] Assertion failed: item.desiredVersion
[NOTIF] Progress: ignore download for doc %@ because its version size is equal to zero
[CRIT] UNREACHABLE: can't register progress for item without a document id %@
[NOTIF] Progress: update details for download of doc %@ because it was edited
[NOTIF] Progress: start tracking download for doc %@ because document is pending-download (versionSize: %lld)
[NOTIF] Progress: nothing to resume for '%@'
[NOTIF] Progress: resuming global progress for '%@'
[NOTIF] Progress: resumed progress for %lu zones
[NOTIF] Progress: doc %@ was reparented outside the visible scope of iCloud Drive, force deletion
[NOTIF] Progress: doc %@ is now dead, force deletion
[CRIT] Assertion failed: item
[NOTIF] Progress: stop publishing global progress
[CRIT] UNREACHABLE: can't update dowload throttle progress for item without a document id %@
[NOTIF] Progress: stop tracking download progress for doc %@ because transfer failed (toState: %s)
[CRIT] Assertion failed: documentID
[CRIT] Assertion failed: progressGroup
[CRIT] Assertion failed: _globalProgressMultiplex == nil
[CRIT] Assertion failed: completedUnitCount >= 0
[CRIT] Assertion failed: (!group && totalUnitCount >= 0) || totalUnitCount > 0
[CRIT] Assertion failed: !group || BRCProgressGroupPrettyPrint(group.intValue)
[NOTIF] Progress: new global progress to track %s
[CRIT] Assertion failed: _operationTimer
[CRIT] UNREACHABLE: Invalid suspend count (_operationTimerSuspendCount: %u)
[CRIT] Assertion failed: _uploads == nil
[CRIT] Assertion failed: totalUnitCount >= completedUnitCount
[NOTIF] Progress: take over current progress because uploads have priority
[CRIT] Assertion failed: _downloads == nil
[NOTIF] Progress: take over on current progress because downloads have priority
[CRIT] Assertion failed: _globalProgressMultiplex.indeterminate
[WARNING] Progress: can't proceed to upload cancelation without doc ID
[CRIT] Assertion failed: versionSize
[NOTIF] Progress: cancelling upload for doc %@ (syncUpState: %d, willRetry: %d, pendingQuota:%d, hasProgress: %d)
[WARNING] Progress: forcing pending quota to NO for doc %@ because transfer isn't retryable
[NOTIF] Progress: upload progress for doc %@ has no previous completed unit count
[WARNING] Progress: can't proceed to download cancelation without doc ID
[NOTIF] Progress: cancelling download for doc %@ (destroyIfLast: %d, willRetry: %d, hasProgress: %d)
[NOTIF] Progress: keep %@ unit counts completed for doc %@
[WARNING] Progress: download progress for doc %@ has no previous completed unit count
[NOTIF] Progress: did finish global progress (group: %s, reason: %s, userVisible: %d)
[CRIT] Assertion failed: transferInfo.sumOfCompletedUnitCountDelta == 0
[CRIT] Assertion failed: transferInfo.sumOfTotalUnitCountDelta == 0
[CRIT] Assertion failed: _uploads.versionSizes.count == 0
[CRIT] Assertion failed: _uploads.childProgresses.count == 0
[CRIT] Assertion failed: _uploads.previousUnitCounts.count == 0
[CRIT] Assertion failed: _uploads.outOfQuotaDocIDs.count == 0
[CRIT] Assertion failed: _downloads.versionSizes.count == 0
[CRIT] Assertion failed: _downloads.childProgresses.count == 0
[CRIT] Assertion failed: _downloads.previousUnitCounts.count == 0
[CRIT] Assertion failed: _downloads.resumeUnitCounts.count == 0
[NOTIF] Progress: resume download progress (%lu item downloading)
[NOTIF] can't delete document from progress without a document id %@
[NOTIF] Progress: stop tracking download progress of doc %@ (reason: %s)
[NOTIF] Progress: stop tracking upload progress of doc %@ (reason: %s)
[CRIT] Assertion failed: fromSize <= toSize
[CRIT] Assertion failed: versionSize <= progressSize
[CRIT] Assertion failed: delta >= 0
sync/fetch-parent-chain
[DEBUG] found zone root record ID
[CRIT] UNREACHABLE: Couldn't allocate ranks when fetching parent chain
[DEBUG] Fetching parent chain of %@
[DEBUG] Fetch parent chain of %@ took [%f] Secs and fetched [%llu,%llu] records [%llu] xattrs
[DEBUG] Cancelling %@ to be replaced by %@
[DEBUG] Not allowing re-creation of shared to me top level item when the item is dead in the server truth
[DEBUG] Waiting on server full sync before we fake sync shared to me top level item which is missing in the server truth
[DEBUG] shared document is read-only, do not sync
[CRIT] Assertion failed: !item.isSharedToMeTopLevelItem
[WARNING] item should really have an etag
[DEBUG] Fake syncing up shared folder record %@
[CRIT] UNREACHABLE: unsupported top level item kind
[DEBUG] Syncing up %sshared document alias record %@
[WARNING] syncing the structure of an item without an alias item
[DEBUG] Deleting alias in private zone %@
[DEBUG] Syncing up root app library record %@
[DEBUG] Also faking sync in side car for child item not known to the server %@
[WARNING] Marking %@ as rejected because the root share is dead
[WARNING] Marking %@ as rejected because it's being copied to a new zone
[CRIT] UNREACHABLE: We should never fake sync for an item being copied to a new zone that isn't a fault
[DEBUG] 
%llx re-scheduling apply jobs for %@ because it finished sync-up
[DEBUG] Unsharing %@
[DEBUG] Editing name on shareID %@
[DEBUG] Syncing up %sdirectory record %@%s
[WARNING] Faking sync for alias item alive in the same zone as the target %@
[WARNING] Not syncing deletion of ETag-less version: %@
[DEBUG] We need to update sharing info for this reset item
[DEBUG] shared document is read-only, do not sync its version
[DEBUG] will pcs chain records
[ERROR] re-uploading uploaded record: %@
[DEBUG] ItemID changed while uploading (%@ -> %@), starting over
[ERROR] thumbnail not found.  Force upload again
[CRIT] UNREACHABLE: package with no uploaded content - %@
[WARNING] Forcing re-upload of an item which has an expired put receipt - %@
[CRIT] UNREACHABLE: File with no content signature - %@
[DEBUG] reverting to server item because we can't reupload a fault for %@
[DEBUG] forcing upload of %@
(dead in server truth)
[DEBUG] Syncing up %sversion record %@
[DEBUG] Syncing up %sdocument structure record %@
[DEBUG] for %@%s
[DEBUG] Syncing up %sfinder alias record %@
[DEBUG] Syncing up %ssymlink record %@%s
[WARNING] Faking sync for item because it doesn't have field differences with the server item %@ vs %@
[DEBUG] Deleting dead record already dead in the server truth %@
[DEBUG] Can't delete shared top level item yet which is still syncing in another zone %@
[DEBUG] 
%llx Deleting %@ record for %@
[DEBUG] 
%llx preparing sync-up of %@
[CRIT] UNREACHABLE: asked to syncup an unkown item type: %@
[CRIT] Assertion failed: nextNotifRank >= _nextNotifRank
[CRIT] Assertion failed: nextPackageItemRank >= _nextPackageItemRank
[CRIT] UNREACHABLE: Called -asSharedItem on a private item
[CRIT] Assertion failed: !_serverZone.isSharedZone || (_sharingOptions & BRCSharingItemHasCKShareMask) != 0 || _st.state == BRC_ITEM_STATE_TOMBSTONE
[CRIT] Assertion failed: self.isFSRoot
[CRIT] UNREACHABLE: can't find the appLibrary of %@
[CRIT] UNREACHABLE: No longer support aliases
[CRIT] UNREACHABLE: unsupporter server item type: %d
[CRIT] UNREACHABLE: unknown item type: %d
[DEBUG] %@ has an out of band sync ack -- using client truth ckinfo %@ rather than server info %@
[CRIT] Assertion failed: !_fetched.byFileID
[CRIT] Assertion failed: !_fetched.byDocumentID
[CRIT] Assertion failed: matchByDocumentID.isDocument
[CRIT] Assertion failed: matchByDocumentID.st.documentID.unsignedLongLongValue == _pathOfItem.documentID
[CRIT] API MISUSE: lookups should not be used on paths of type: %s
[CRIT] Assertion failed: _pathOfItem.appLibrary.isiCloudDesktopAppLibrary
[DEBUG] looked up %@ by fileID:%llu
[CRIT] Assertion failed: self.isNonDesktopRoot || self.isDocumentsFolder
[CRIT] Assertion failed: self.isSharedZoneRoot
[CRIT] Assertion failed: sharedZone
[CRIT] UNREACHABLE: we should not have alias or share uuid types anymores
[CRIT] UNREACHABLE: we should not have alias or shared uuid types anymores
[CRIT] Assertion failed: libraryRowID || sharedZoneRowID
[CRIT] UNREACHABLE: invalid UUID: %s
[CRIT] Assertion failed: object->item_code == BRCItemIDCodeDocuments || object->item_code == BRCItemIDCodeZoneRoot || object->item_code == BRCItemIDCodeSharedZoneRoot
[CRIT] UNREACHABLE: decoding an unknown kind of itemid
[CRIT] UNREACHABLE: encoding an item id with an unknown kind
[CRIT] Assertion failed: rio.zone_rowid
[CRIT] UNREACHABLE: unparsable mangled itemID: %s
[CRIT] Assertion failed: len == sizeof(uuid_t)
[CRIT] UNREACHABLE: Invalid Shared ItemID
[CRIT] Assertion failed: argc == 2
[CRIT] Assertion failed: len == sizeof(_UUIDItemObject_OLD)
[CRIT] UNREACHABLE: Invalid Alias ItemID
[CRIT] Assertion failed: p->item_code == _UNUSED_BRCItemIDCodeSharedUUID
[CRIT] Assertion failed: len == sizeof(_UUIDItemObject_OLD) && ((_UUIDItemObject_OLD*)blob)->item_code == BRCItemIDCodeSharedZoneRoot
[DEBUG] Starting BRCReimporterUtil::reimportItemsBelowItemWithIdentifier::%@
[WARNING] Couldn't compute fp manager for current account
[ERROR] failed to re-import items under %@ with error %@
[DEBUG] Successfully asked file provider to re-import all %@ items
[DEBUG] Starting BRCReimporterUtil::ingestFromCacheItemWithIdentifier::%@
[ERROR] unable to read package header %@ with version %d - %@
[CRIT] Assertion failed: _reader
[ERROR] Input stream encountered an error %@
[DEBUG] Adding %@ to the manifest
[ERROR] Failed setting quarantine info for item %@: %@
[ERROR] Failed to open pkg item at %@ %{errno}d
[CRIT] UNREACHABLE: Invalid args in %@
[ERROR] openat failed to apply metadata for manifest item %@ %{errno}d
[ERROR] fsetattrlist failed for pkg item %@ %{errno}d
[CRIT] UNREACHABLE: we should have downloaded this file if there is nothing live
[ERROR] Failed to open live pkg item at %s %{errno}d
[ERROR] Failed to stat live pkg item at %s %{errno}d
[ERROR] clonefileat(%d, %@, %d, %@) %{errno}d
[DEBUG] cloned at %@ for package staged in %@
[ERROR] linkat(%d, %@, %d, %@) %{errno}d
[DEBUG] hardlinked at %@ for package staged in %@
[DEBUG] copied at %@ for package staged in %@
[CRIT] UNREACHABLE: No reader to stage package at %s
[CRIT] UNREACHABLE: Package has been corrupted on the serverAsking for asset index out of bounds %lu vs %lu in package: %@
[CRIT] UNREACHABLE: relpath should always exist
[DEBUG] %@ already exists in stage for package %@
[ERROR] Failed to mkdir %@ for package %@
[ERROR] Failed to create symlink %@ -> %@ for package %@
[CRIT] UNREACHABLE: Package has been corrupted in the cloudAsking for asset index out of bounds %lu vs %lu in package: %@
[CRIT] UNREACHABLE: Can't find item at index %ld
[ERROR] renameat(-1, %@, %d, %@) %{errno}d
[DEBUG] staged from %@ to %@ in %@
[CRIT] UNREACHABLE: We didn't fetch the corresponding pkg item from the server, but we were also not given a path to hardlink it from! (item: %s)
[CRIT] UNREACHABLE: invalid item type: %d
[CRIT] UNREACHABLE: xattr index is out of bounds %ld of total %ld
[CRIT] UNREACHABLE: Can't find xattr at index %ld
[ERROR] Failed to read xattrs blob: %@
[ERROR] Failed to apply xattrs to file descriptor: %@
[DEBUG] Successfully applied xattrs %@ to package item %@
[ERROR] unable to stat %@ for package %@ %{errno}d
[ERROR] Unable to add item to manifest: %@
[DEBUG] Finished staging package for %@. Item count:%lu.  Asset index:%lu
[CRIT] UNREACHABLE: NULL path for item: %@
[CRIT] UNREACHABLE: NULL path for item symlink content: %@
[CRIT] Assertion failed: _stream
[DEBUG] %@ sync-%@ is throttled for more than 10s: %.1fs (%@)
[DEBUG] syncing %@ %@
[NOTICE] Not finishing transmogrification because item is dead in the server thruth
[WARNING] Can't resovle %@, error %d
[WARNING] Item %@ have changed, abandoning rename
[DEBUG] renaming item for transmogrify %@ (%@ -> %@)
[ERROR] failed renaming for transmogrify from %@ to %@ (%s)
[ERROR] failed opening after rename for transmogrify (%s)
[ERROR] Can't find %@ in client truth
[DEBUG] Signalling fsimporter to clean un-migrated items
[ERROR] Can't find group container path for current persona %@
[DEBUG] containers matching '%@': %@
[INFO] Initializing restore manager with %@
[ERROR] Failed to update attached database %@
[INFO] Calling completion block with success.
[DEBUG] Setting deletion change token to %@ because item contains a dir faults
[DEBUG] share-query progressed from cursor:%@ to cursor:%@
[DEBUG] 
%llx query for %@ starting with batchSize:%u
[DEBUG] created query %@ from cursor:%@
[DEBUG] created query %@ from query:%@
[DEBUG] 
%llx handling result of %@: %@
[DEBUG] fetched share alias record %@ with etag:%@ in query %@
[CRIT] UNREACHABLE: unable to parse itemID from %@ in query %@
[DEBUG] fetched shared record %@ with etag:%@ in query %@
[DEBUG] 
%llx migration-query '%@' %@ for %@ starting from cursor:%@
[DEBUG] skipping migration '%@' because there is no server zone yet: %@
[CRIT] UNREACHABLE: unknown migration %s
[DEBUG] 
%llx migration-query '%@' %@ completed
[CRIT] UNREACHABLE: -[BRContainer isOverQuota] shouldn't be called by the daemon.
[CRIT] UNREACHABLE: -[BRContainer currentStatus] shouldn't be called by the daemon.
[CRIT] UNREACHABLE: -[BRContainer lastServerUpdate] shouldn't be called by the daemon.
sharing.fetch-user-record-id
[CRIT] UNREACHABLE: no record and no error
[DEBUG] Failed to start downloading item %@: %@
[DEBUG] We don't have enough space on disk to download %@.  Let's try to free some
[DEBUG] Item '%@' isn't on disk yet, failing the coordination
[CRIT] UNREACHABLE: Huh? %@ doesn't have a document id...
[CRIT] Assertion failed: _recursiveList == nil
[CRIT] Assertion failed: _listOp == nil
[DEBUG] can't get a list op, granting the read for %@
[CRIT] Assertion failed: _directoryItem == nil
[DEBUG] 
%llx coordinated read for %@
[CRIT] Assertion failed: _url == nil
[DEBUG] 
%llx Recursive coordinate download for %@
[CRIT] Assertion failed: _documentItem != nil
[DEBUG] 
%llx Providing Item for document %@
[CRIT] Assertion failed: _url != nil || _directoryItem != nil || _documentItem != nil
[DEBUG] %@ was cancelled
[CRIT] UNREACHABLE: clientDB queue is nil for session %@
[DEBUG] 
%llx network becomes not reachable, finishing the providing request
[DEBUG] failing coordinated read with %@
[DEBUG] granting coordinated read
[DEBUG] we were cancelled, cancelling docIDs %@
[DEBUG] evicting %@ because it's a fault and its download was cancelled
[CRIT] Assertion failed: _multipleItemsInteractiveSchedulingCount >= 0
[DEBUG] 
%llx force scheduling interactive transfers
[DEBUG] cancelling oldest batch (%@)
[CRIT] Assertion failed: oldestBatchOperation
[WARNING] We have way too many operations in flight.  Waiting for cancelled operations to finish cancelling
[DEBUG] waiting for the next scheduling to finish
[DEBUG] Force scheduling a new high priority batch
[CRIT] Assertion failed: operation
[DEBUG] adding operation %@ to the transfer stream
[DEBUG] Transfer stream backing off %.03fs
[CRIT] Assertion failed: _isWaitingForTransferBatch
[DEBUG] 
%llx cancelling entry %@ in %@
[CRIT] UNREACHABLE: this operation should have been cancelled
[CRIT] Assertion failed: !info || info.isSymLink
[DEBUG] updating symlink target to %@
[DEBUG] no change
create-zone
[DEBUG] 
%llx Sync: create cloudkit zone for %@
[CRIT] Assertion failed: !_optimisticSubscribe
[CRIT] Assertion failed: savedZones.count == 1
[CRIT] Assertion failed: !self->_syncContext.isShared
[DEBUG] optimistic subscribe failed with Zone Not Found, try to create the zone first
sync/zone-purge
[DEBUG] deleted %@ on server
[DEBUG] deleted shared zones associated to %@ on server
[INFO] Request to locate record: [%@] of item [%@]
sync/locate-record
[DEBUG] Failed to look up record %@ - %@
[CRIT] UNREACHABLE: Can't alloc ranks after fetching records
[DEBUG] Successfully looked up record %@
[DEBUG] Could not locate record %@
[DEBUG] Located record in shared zone. No need to fetch the parent chain.
[CRIT] UNREACHABLE: parent isn't a reference %@
[DEBUG] Locating recordID %@ in zone %@
[INFO] Locating recordID %@ in zone %@ --> Record not found. Error %@
[DEBUG] Record located. No need to fetch the parent chain.
[INFO] Locating recordID %@ in zone %@ --> Fetch parent chain failed with error %@
[CRIT] Assertion failed: fetchParentChainOp
[DEBUG] Locating record of %@ took [%f] Secs and fetched [%llu,%llu] records [%llu] xattrs
[ERROR] latest GC started %lld seconds in the future
[CRIT] Assertion failed: _deviceID != 0
[ERROR] Unable to exclude '%@' from backups: %@
[CRIT] Assertion failed: _stageDirectoryFileID[dirIndex] != 0
[CRIT] Assertion failed: fileID != 0
[DEBUG] 
%llx file %llu might have been unlocked
[ERROR] could not open locked file, not watching it %{errno}d
[DEBUG] forgetting locked file %@
[ERROR] fstat(%d) '%@' failed %{errno}d
[WARNING] '%@' is not a directory deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[ERROR] unlink('%@') failed deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x %{errno}d
[WARNING] '%@' is not on the same volume as the root deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[ERROR] mkdir('%@') withIntermediateDirectories failed: %@
[ERROR] mkdir('%@') failed %{errno}d
[ERROR] fstat('%@') failed %{errno}d
[ERROR] mkdirat(%d, '%@') failed %{errno}d
[ERROR] symlinkat('%@', %d, '%@') failed %{errno}d
[ERROR] BRCOpenAt(%d, %@, O_RDONLY) failed %{errno}d
[ERROR] BRCOpenAt(%d, %@, O_CREAT|O_RDWR|O_EXCL) %{errno}d
[ERROR] fcopyfile(%d, %d, NULL, COPYFILE_DATA) %{errno}d
[ERROR] BRCRenameAt(%d, %@, %d, %@, 0) %{errno}d
[DEBUG] can't open by fileID:%llu %{errno}d
[CRIT] UNREACHABLE: returnedFileID(%llu) != fileID(%llu)
[WARNING] Abort making live: unable to flock %@ %{errno}d
[DEBUG] renameat(-1, '%@', %d, '%@', RENAME_SWAP) failed for fileID=%llu,  %{errno}d
[DEBUG] swapped '%@' and '%@' fileID=%llu
[DEBUG] renameatx_np(-1, '%@', %d, '%@', %u) failed for fileID=%llu,  %{errno}d
[DEBUG] renamed from '%@' to '%@' in parentFileID:%llu
[CRIT] UNREACHABLE: nil client zone when applying %@ and %@
[CRIT] UNREACHABLE: invalid item type
[DEBUG] Preventing updating the put back info path from the server when parented by .Trash: %@
[DEBUG] got EPERM, failing to return the right permissions
[ERROR] can't set the xattr %s:  %{errno}d
[ERROR] can't set xattr %s:  %{errno}d
[ERROR] can't to set Spotlight last-used date xattrs %{errno}d
[ERROR] can't remove Spotlight last-used date xattrs %{errno}d
[ERROR] Unable to remove xattrs: %@
[ERROR] Unable to set structural xattrs for signature %@: %@
[ERROR] fsetxattr(%s) failed %{errno}d
[ERROR] cannot read xattr '%s': %@
[ERROR] listing existing xattrs failed: %@
[ERROR] fsetattrlist failed %{errno}d
[ERROR] Can't save immutable share permissions %{errno}d
[ERROR] Can't get the group for "everyone" in order to limit share permissions %{errno}d
[ERROR] Failed to strip the acls %{errno}d
[CRIT] Assertion failed: _stageDirectoryPath[kBRCStageDirectoryForPendingFetchStream] != nil
[DEBUG] deleting (%d, '%@') asynchronously
[DEBUG] renameat(%d, '%@', %d, '%@') failed %{errno}d
[ERROR] failed removing documentID for %@ %{errno}d
[DEBUG] moved (%d, '%@') to the graveyard at '%@' for %@
[WARNING] Abort making live: path doesn't exist %@
[CRIT] Assertion failed: relpath
[DEBUG] moved from %@
to '%@' in old version stage
[DEBUG] Making the move to the graveyard succeed even though the file doesn't exists anymore
[DEBUG] Failing the move to graveyard because the item is busy
[DEBUG] moved from %@
to '%@' in graveyard
[DEBUG] fileID:0 doesn't exist in stage (metadata-only update)
[DEBUG] fileID:%llu is in the %s
[DEBUG] can't open src to transfer documentID:%u from fileID:%llu to fileID:%llu %{errno}d
[DEBUG] src parentFileID:%llu not in graveyard, can't transfer documentID:%u from fileID:%llu to fileID:%llu %{errno}d
[DEBUG] documentID mismatch on fileID:%llu (expected:%u actual:%u) not transferring to fileID:%llu
[DEBUG] can't open dst to transfer documentID:%u from fileID:%llu to fileID:%llu %{errno}d
[ERROR] failed transferring documentID:%u from fileID:%llu to fileID:%llu %{errno}d
[DEBUG] transferred documentID:%u from fileID:%llu to fileID:%llu
[DEBUG] running GC because we are in low disk space
[ERROR] fts_open(%@) failed %{errno}d
[ERROR] fts_read() failed for path %s %{errno}d
[DEBUG] Collected %lld bytes from purging the graveyard
[DEBUG] removing staged file for upload: %@
[DEBUG] removing staged file with id %llu
[DEBUG] removing staged file for download: %@ device:%d ino:%lld
[CRIT] UNREACHABLE: Failed to parse record name %@ or zone %@
[DEBUG] removing deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[CRIT] UNREACHABLE: Unexpected record name %@
[ERROR] Failed checking contents at %@ - %@
[WARNING] Skipping xattr check because we're in the middle of fetching delta change records
[WARNING] Skipping xattr check because we're in the middle of fetching item records
[CRIT] Assertion failed: components.count == 1
[WARNING] Removing unused xattr signature %@
[DEBUG] starting garbage collection at %ld
[DEBUG] latest GC:%ld; previous GC:%ld
[DEBUG] closing
[CRIT] Assertion failed: !_persistedState
[CRIT] Assertion failed: _persistedState
[CRIT] Assertion failed: minDelta >= 0
[CRIT] Assertion failed: maxDelta > minDelta
[DEBUG] running GC at startup after %lld seconds; %@
[DEBUG] skipping GC at startup after %lld seconds; %@
[DEBUG] running GC in XPC activity after %lld seconds; %@
[DEBUG] skipping GC in XPC activity after %lld seconds; %@
[WARNING] Failed to set the xpc state to done
[CRIT] UNREACHABLE: Asked to save xattr without url
[CRIT] UNREACHABLE: Asked to save xattr without signature or data
[DEBUG] Saving an xattr signature that already exists! %@
[CRIT] UNREACHABLE: Asked for xattr without signature
[CRIT] Assertion failed: _session.offline
[ERROR] fgetattrlist(%d) failed %{errno}d
[ERROR] failed allocating documentID for fileID:%llu %{errno}d
[ERROR] Failed fstat on file %{errno}d
[DEBUG] 
%llx physical URL request for '%@'
[CRIT] UNREACHABLE: What's this path???
[DEBUG] Not in the %@ namespace, not for us
[DEBUG] can't parse version path '%@', probably not an iCloud version, allow it
[ERROR] Logged out: can't compute physical URL for '%@'
[ERROR] can't find container for path '%@'
[ERROR] can't find live item for path '%@'
[DEBUG] 
%llx coordinated read request for '%@' (%@)
[ERROR] Logged out: can't grant coordination to reader %@
at path '%@'
[DEBUG] Found a download operation already pending, piggy back on it
[ERROR] can't find sync context for mangled ID '%@', path '%@'
[DEBUG] Version already local, we're good!
[ERROR] failed downloading version to path '%@': %@
[CRIT] UNREACHABLE: Couldn't change personas while saving package extensions list
[DEBUG] migration completed already
[DEBUG] No extensions to migrate
[DEBUG] Migrating %lu extensions
[WARNING] invalid change token format: %@
[CRIT] UNREACHABLE: There should be a root item for %@
[CRIT] Assertion failed: rank >= _rank
[DEBUG] device does not support CoreSpotlight indexing, no need to drop any index
[DEBUG] CoreSpotlight index has already been dropped
[WARNING] dropping CoreSpotlight index
[CRIT] Assertion failed: index
[ERROR] failed dropping Spotlight index: %@
[DEBUG] dropped Spotlight index successfully
[ERROR] failed to synchronize user defaults for %@
[ERROR] failed deleting ranks from tombstones: %@
[DEBUG] deleted ranks from tombstones successfully
[DEBUG] dropping item from recents index %@
[DEBUG] not dropping item, it is still live: %@
[DEBUG] Learning index acked rank %llu (flushed rank %llu)
[DEBUG] Finished indexing for now
[DEBUG] handling reset for rowID %lld, notif rank: %llu
[WARNING] Dropping spotlight index for %@ due to a reset
[ERROR] Failed to delete searchable items for mangledIDs %@: %@
[WARNING] reset zone is not a private zone, skipping
[ERROR] change token has expired, index should be dropped
[CRIT] UNREACHABLE: not ready for indexing, stopping here
[DEBUG] incoming rank is newer than what we know about: %lld > %lld, stopping here
[DEBUG] enumerating changes from notif rank %llu
[CRIT] UNREACHABLE: bad tombstone entry type: %d
[DEBUG] found a tombstone entry of type client zone db rowid (%lld), sending current batch
[DEBUG] sending batch from %llu to %llu (%@,%@)
[DEBUG] active set did change, notifying fileproviderd
[ERROR] failed to signal enumerator for working set: %@
[DEBUG] Canceling spotlight indexer.
[DEBUG] Publishing download progress for %@
[WARNING] Download: Received negative progress from CK. progress [%f]
[CRIT] UNREACHABLE: thumbnail is not a CKAsset: %@
dl-thumbnail
[DEBUG] 
%llx computing desired packages indices
[CRIT] UNREACHABLE: Package inside %@ is corrupted in the cloud
Asking for asset index out of bounds %lu vs %lu in package: %@
[CRIT] Assertion failed: false
[DEBUG] Desired indices are: %@ (itemCount: %ld)
[CRIT] UNREACHABLE: file content is not a CKAsset: %@
[CRIT] UNREACHABLE: finder bookmark without content: %@
[CRIT] UNREACHABLE: pkg content is not a CKPackage: %@
[CRIT] UNREACHABLE: package manifest is not a CKAsset: %@
[CRIT] UNREACHABLE: xattrs package is not a CKAsset: %@
[CRIT] UNREACHABLE: unknown type for downloaded object %@
dl-content
[CRIT] Assertion failed: !item.isFinderBookmark
[CRIT] UNREACHABLE: There should be a file content property in %@
[CRIT] UNREACHABLE: no fileURL for %@ in %@
[DEBUG] 
%llx Downloader[%lld] staging %@
[CRIT] Assertion failed: vRecord
[CRIT] Assertion failed: ![vRecord.recordID.zoneID.ownerName isEqualToString:CKCurrentUserDefaultName] || _secondaryRecord
[CRIT] Assertion failed: [vRecord.etag isEqualToString:_etag]
[ERROR] Can't deserialize %@
[DEBUG] received version %@ %@
[ERROR] Can't open %@ to set metadata %{errno}d
[ERROR] Failed to attach thumbnail to version
dl-version
[ERROR] Unable to stage item in Genstore: %@
[DEBUG] Created addition staged at URL: %@, creation info: %@
[CRIT] Assertion failed: itemID.isNonDesktopRoot
[CRIT] UNREACHABLE: Constructing shared zone root item for itemID %@ is not supported
[CRIT] API MISUSE: can't save a zone root item
[CRIT] Assertion failed: self.appLibrary.fileID
[CRIT] UNREACHABLE: asking the parent item of a root item
[CRIT] UNREACHABLE: asking the parent item ID of a root item
[CRIT] UNREACHABLE: asking the structural bit of a zone root is not supported
[DEBUG] Next event will fire in %fs
[CRIT] Assertion failed: _st.type == BRC_ITEM_TYPE_ALIAS
[DEBUG] 
%llx learning target %@ for %@
[CRIT] Assertion failed: self.appLibrary != item.appLibrary || item.isSharedToMe
[DEBUG] Forcing rejection of alias item
[DEBUG] 
%llx Deleting alias %@ in %@ because target is dead
[DEBUG] 
%llx Deleting alias %@ in %@ because target moved to this app library
[ERROR] failed saving sharing options update %@: %@
[WARNING] Forced %lld orphans to be tombstones in the shared zone
[CRIT] UNREACHABLE: Path depth overflow
[DEBUG] propagated delete of %lld recursive children of %@
sharing/copy-web-auth-token
[ERROR] failed fetching webauth token for %@: %@
[DEBUG] Clearing app sync blocked bit because we created an item that needs sync
[CRIT] Assertion failed: _session.clientDB.isBatchSuspended
[DEBUG] 
%llx %@[%@]: finishing sync up
[DEBUG] Sync-Up[%@]: Scheduling a sync-up job
[DEBUG] Sync-Up: Recovered from %u missing sync up jobs
[DEBUG] 
%llx Uploader: scheduling retries
[DEBUG] Uploader[%@]: upload stage set to: %@
[DEBUG] 
%llx Uploader[%@]: %s -> %s [cancel-job]
[DEBUG] Uploader[%@]: Cancelling upload
[DEBUG] Uploader[%@]: cancelled thumbnail upload: %@
[DEBUG] Uploader[%@]: Cleaning up upload stage: %@
[DEBUG] 
%llx Uploader[%@]: cancel and cleanup item upload
[DEBUG] Uploader: scheduling %lld suspended throttles
[CRIT] API MISUSE: should call setState:forUploadJobID:zone:
[DEBUG] 
%llx Uploader[%@]: setting state to %s
[DEBUG] 
%llx Uploader[%@]: uploading
[CRIT] Assertion failed: !item.isPausedFromSync && !item.isResumingSync
[DEBUG] Uploader[%lld]: job has been put back in queue %@
[DEBUG] Uploader: next job to retry in %.3fs
[DEBUG] Uploader: no more jobs to retry
[DEBUG] Kicking uploads for %@
[CRIT] UNREACHABLE: no app library for row ID %@
[CRIT] UNREACHABLE: upload scheduler is exact we should have an item
[DEBUG] Uploader: reached maximum allowed number of thumbnails retrieval (%ld)
[DEBUG] Uploader: below maximum allowed number of thumbnails retrieval (%ld)
[DEBUG] Uploader[%lld]: generating manifest for %@
[DEBUG] Uploader[%lld]: adding package item with deviceID 0x%lx fileID %lu
[ERROR] Failed to add item to package
[CRIT] UNREACHABLE: We're missing a package xattr for signature %@ - %@
[DEBUG] Uploader[%lld]: adding xattr package item with URL %@ for %@
[WARNING] Failed to add xattrs to xattrs package: %@
[ERROR] failed to create manifest at %@: %@
[DEBUG] Uploader[%lld]: assets only record generated: %@
[CRIT] UNREACHABLE: can't upload an item without a fileID
[CRIT] UNREACHABLE: can't upload a fault
[DEBUG] Adding CKAsset with deviceID 0x%lx fileID %@ to the record for item %@
[ERROR] Unable to copy thumbnail at '%@' to upload stage: %@
[ERROR] Unable to get thumbnail size at '%@' to upload stage: %@
[DEBUG] generated thumbnail: %@
[DEBUG] Creation of record for %@ failed: %@
[DEBUG] 
%llx Uploader[%@]: Done generating thumbnail, building record for %@
[DEBUG] 
%llx Uploader[%@]: Preparing record for upload of %@
[DEBUG] Uploader[%@]: generating thumbnail (shouldTransferThumbnail:yes) %@
[DEBUG] Uploader[%@]: skipping thumbnail (inDocumentScope:%s shouldHaveThumbnail:%s shouldTransferThumbnail:no)
[WARNING] can't duplicate the package %@: %@
[WARNING] can't anchor the package %@ at %@: %@
[CRIT] Assertion failed: pbitem.type != BRFieldPkgItemType_FILE || pbitem.hasSignature
[DEBUG] Handling file modified error: %@
[DEBUG] 
%llx Uploader[%@]: done with %@ (%@)
[WARNING] Dropping file ID and re-ingesting from file provider because we need to rescan the asset for %@ - %@
[DEBUG] Error is retriable, putting item back in the queue
[ERROR] non recoverable error while uploading %@: %@
[DEBUG] Uploader[%@]: increasing throttle back off
[CRIT] Assertion failed: ![item isReadAndUploaded]
[DEBUG] Uploader[%@]: performing server-side asset copy
[CRIT] UNREACHABLE: Can't server-side asset copy an item with an invalid signature %@
[CRIT] UNREACHABLE: Can't server-side asset copy an invalid thumbanil signature for %@
[CRIT] UNREACHABLE: Can't server-side asset copy an item with an invalid xattr signature %@
[CRIT] UNREACHABLE: %@ should be a document
[CRIT] UNREACHABLE: %@ should be needs-upload
[DEBUG] Uploader[%@]: throttle for %@ doesn't exist anymore
[NOTICE] uploading %ld documents in %@
[DEBUG] 
%llx Uploader[%lld]: %@ failed to sync up because it's out of quota: %@
[CRIT] Assertion failed: _session.clientDB.changes == 1
[DEBUG] 
%llx re-uploading failed items with size less than %@
[DEBUG] 
%llx quota changed from %@ to %@
[DEBUG] updated %@ quota: %lld
[WARNING] can't update quota: %@
[CRIT] UNREACHABLE: Item scheduled to upload isn't a document %@
[DEBUG] Uploader: Recovered from %u missing uploader jobs
[WARNING] Couldn't parse unsalted bookmark data %@ - %@
[CRIT] UNREACHABLE: Can't locate target server zone from bookmark data %@
[DEBUG] Overriding structural and content info from (%@, %@) -> (%@, %@) because the item is OOB sync
[CRIT] Assertion failed: itemID && parentID
[DEBUG] PCS chaining %@ (st:%@, ct:%@) to %@ for op %@
[CRIT] Assertion failed: !_fullyChainRecordInfoMap[parentRecordID]
[CRIT] Assertion failed: parentCKInfo
[CRIT] UNREACHABLE: No parent item?!?!
[CRIT] UNREACHABLE: unkown record type
[CRIT] Assertion failed: preppedRecords.count == 0
[DEBUG] Received records from first PCS step: %@
[CRIT] Assertion failed: preppedRecord.protectionData
[CRIT] Assertion failed: j + _halfChainedRecordMap.count == preppedRecords.count
[CRIT] Assertion failed: halfChainInfo != nil
[CRIT] Assertion failed: info.itemID
[DEBUG] We need to list the root item %@
[DEBUG] Finished enumerating pcs under directory %@
[DEBUG] We need to list %@
[DEBUG] Enumerating pcs under new directory %@
[CRIT] Assertion failed: rootItem
sync/pcs-chain
[CRIT] UNREACHABLE: Can't PCS chain to documents, trash, or root
[CRIT] Assertion failed: si
[DEBUG] %@ is already chained
[CRIT] Assertion failed: listOp
[WARNING] Got an error indicating we need to reparent %@ to %@
[ERROR] Blocking %@ from sync up until it is next modified because the server failed to pcs chain %@ with a permanent error
[WARNING] Encountered pcs chaining error %@ for record %@
[WARNING] Retrying with new record batch because we were told about a new parent - %@
[ERROR] Failed iterating PCS - %@
[ERROR] failed sending first PCS step - %@
[ERROR] Failed sending second PCS step - %@
[WARNING] Learning etag in the server truth for half chained parent %@
[WARNING] Uh oh... the record changed server side while we were mid pcs chain batch.  We might have oplock conflicts
[CRIT] Assertion failed: record.parent
[CRIT] Assertion failed: !record.parent
[WARNING] Syncing down before retrying %@
[DEBUG] Refreshed root item from db %@
[WARNING] Couldn't refresh item from the database
[CRIT] UNREACHABLE: %@ isn't a dictionary!
[ERROR] Failed to find item to re-ingest %@
[CRIT] UNREACHABLE: Marking %@ as delete for re-apply 
[ERROR] Failed to re-ingest item %@ - %@
[DEBUG] Asked to re-ingest %@ for a file ID
[CRIT] UNREACHABLE: can't unarchive CKRecord: %@
[CRIT] UNREACHABLE: Item has only one of the itemID %@ and zoneRowID %@ fields
[DEBUG] 
%llx Loaded %lu system icloud accounts
[DEBUG] Ignoring EDS account: %@ (iCloudDrive/multiAccountsHandling=no)
[ERROR] couldn't get existing domains: %@
[INFO] Removing domain %@ since it doesn't have a backing AC account
[DEBUG] domain's persona still exists, removing account path
[ERROR] couldn't remove domain %@: %@
[DEBUG] Successfully removed domain %@
[CRIT] UNREACHABLE: Can't adopt persona for the account handler. Skipping it
[CRIT] Assertion failed: acAccountID
[CRIT] UNREACHABLE: Can't create and load the session because we can't adopt the persona
[CRIT] Assertion failed: self->_finishedLoadingAccounts
[CRIT] Assertion failed: domain
[DEBUG] Waited without success for %@
[WARNING] Found account handler %@ by persona match
[ERROR] Not creating account session when we don't support multi accounts
[INFO] Updating account %@
[DEBUG] Updating display name is not supported on non EDS account
[INFO] Logging out account %@
[DEBUG] Account is data separated, removing domain
[DEBUG] Removing domain: %@, display name: %@
[DEBUG] Removed domain %@ with error %@
[ERROR] No domain to remove found for %@
[DEBUG] current persona doesn't match session's persona, trying to adopt
[CRIT] Assertion failed: accountHandler.session.isDataSeparated
[DEBUG] Can't adopt session's persona, it must have already been deleted.
[DEBUG] Destroyed session during logout successfully
[ERROR] Failed to destroy session during logout
[CRIT] UNREACHABLE: Failed to adopt persona for block adoption
[CRIT] UNREACHABLE: Can't adopt persona for xpc activity, deferring the activity
[DEBUG] Failed to defer the activity after persona failure.
[DEBUG] Reverting etag to pre-czm tag %@
[DEBUG] 
%llx Apply Changes[%lld]: %s item: %@
 diffs: %@
[CRIT] Assertion failed: li || si
[CRIT] UNREACHABLE: no client zone when applying %@ and %@
[DEBUG] Clearing the listed docs bit on the documents folder because the documents folder is a dir-fault
[DEBUG] Found item %@ that collides with %@
[WARNING] Found directory %@ that has a package name, bounced name to %@
[WARNING] No alias pointing to new item shared container, forcing sync down on private container
[INFO] Fetch share alias for share alias record ID [%@]: %@ with error %@
[DEBUG] Created reservation for %@ item: %@
[DEBUG] Updating item %@ from server item
[WARNING] Rejected item was revived.  Marking sync as idle to apply server version for %@
[WARNING] Renaming %@ to %@ which has a package name
[WARNING] trying to initialize a globalID from a nil object
[ERROR] Failed fetching zones to prep PCS for %@ - %@
[DEBUG] No zones need PCS prep currently
[DEBUG] Prepping PCS for %@ -> %@
[DEBUG] PCS migration %@ for %@
[ERROR] Failed migrating PCS for %@ - %@
[CRIT] Assertion failed: ![BRCAccountsManager sharedManager].isInSyncBubble
[CRIT] UNREACHABLE: session wasn't properly closed
[CRIT] UNREACHABLE: db connections weren't properly closed and nillified
[CRIT] Assertion failed: ![_xpcClients containsObject:client]
[CRIT] Assertion failed: [_xpcClients containsObject:client]
[DEBUG] 
%llx closing XPC connections
[DEBUG] invalidating XPC clients: %@
[DEBUG] finished waiting for invalidated XPC clients
[CRIT] UNREACHABLE: there are still XPC clients around: %@
[DEBUG] 
%llx creating '%@'
[CRIT] can't create directory at '%@': %@
[CRIT] can't retrieve attributes of item at '%s': %@
[CRIT] created directory doesn't have read/write access for owner (permission: %c%c%c%c%c%c%c%c%c%c)
[DEBUG] permissions checked
[WARNING] Failed to get persona for accountID = %@
[INFO] Will attempt to add domain: providerID = %@ , domainID = %@, persona = %@, displayName = %@
[WARNING] Error adding provider %@: %@
[INFO] Adding Provider %@ was succesfull
[ERROR] Unable to create directory at '%@'; %@
[DEBUG] New mobile documents dir = %@
[DEBUG] Checking if there is a need to submit DB_RESET telemetry
[CRIT] Assertion failed: self.analyticsReporter
[DEBUG] Error Unarchiving %@ - %@
[CRIT] Assertion failed: decodedData.count == 2
[DEBUG] Error while deleting %@ - %@
[DEBUG] Successfully deleted %@
[DEBUG] flocking '%@'
[DEBUG] 
%llx including %@ in backup
[ERROR] Unable to include '%@' from backups: %@
[CRIT] Assertion failed: defaultAppLibrary
[DEBUG] 
%llx rescheduling pending disk throttles
[DEBUG] 
%llx recomputing disk space
[ERROR] failed to create root:'%@': %@
[DEBUG] Checking for items that need pcs chaining
[DEBUG] Failed to defer the pcs chain state
[ERROR] Failed to defer the activity state
[ERROR] failed to defer the activity state
[ERROR] Failed to set the xpc activity state to done
[DEBUG] Checking for folders that need transmogrify
[DEBUG] Scheduling directory transmogrify at startup for %@
[ERROR] failed to continue the pcs chain state
[DEBUG] 
%llx fixing up items
[DEBUG] Will acknowledge the last sync down again for %@ (server:%lld, client:%lld)
[DEBUG] 
%llx Acknowledge the last sync down again for %@
[DEBUG] 
%llx Fixing up bounced and staged items
[CRIT] UNREACHABLE: %@ is missing a sync up throttle
[CRIT] UNREACHABLE: %@ has a corrupt upload throttle
[CRIT] UNREACHABLE: side car forgot to schedule sync up throttle %@!
[CRIT] Assertion failed: qos_class_self() == QOS_CLASS_UTILITY
[DEBUG] 
%llx resuming account session
[CRIT] Assertion failed: !_resumed
[CRIT] Assertion failed: _accountWaitOperation.operationFailureThrottle
[CRIT] Failed to encode corruption info %@: %@
[DEBUG] Successfully created %@ - with data - %@
[DEBUG] Failed to create %@
[DEBUG] 
%llx closing account session. Open: %d
[DEBUG] cancelling misc operation: %@
[DEBUG] 
%llx cancelling _autoResumeSyncTimerScheduler...
[DEBUG] 
%llx cancelling _defaultScheduler...
[DEBUG] 
%llx cancelling _fsImporter...
[DEBUG] 
%llx cancelling _fsUploader...
[DEBUG] 
%llx cancelling _fsDownloader...
[DEBUG] 
%llx cancelling _syncUpScheduler...
[DEBUG] 
%llx cancelling _applyScheduler...
[DEBUG] 
%llx cancelling _notificationManager...
[DEBUG] 
%llx cancelling _recentsEnumerator...
[DEBUG] waiting for misc operation: %@
[DEBUG] 
%llx closing _autoResumeSyncTimerScheduler...
[DEBUG] 
%llx closing _defaultScheduler...
[DEBUG] 
%llx closing _fsImporter...
[DEBUG] 
%llx closing _fsUploader...
[DEBUG] 
%llx closing _fsDownloader...
[DEBUG] 
%llx closing _syncUpScheduler...
[DEBUG] 
%llx closing _applyScheduler...
[DEBUG] 
%llx closing _fairClientDBScheduler...
[DEBUG] 
%llx closing _notificationManager...
[DEBUG] 
%llx closing _recentsEnumerator...
[DEBUG] 
%llx cancelling and closing our containers and sync context...
[DEBUG] preventing creation of new sync context...
[DEBUG] 
%llx cancelling %@...
[DEBUG] 
%llx closing %@...
[DEBUG] closed containers
[CRIT] Assertion failed: zone.delegate == nil
[CRIT] Assertion failed: [self hasRootForSyncedFolderType:folderType]
[DEBUG] waiting for accountWaitOp %@
[DEBUG] finished waiting for accountWaitOp %@
[DEBUG] 
%llx Force flush the database...
[DEBUG] 
%llx closing _stageRegistry...
[DEBUG] 
%llx closing _diskReclaimer...
[DEBUG] 
%llx closing dbManager...
[DEBUG] 
%llx closing _containerScheduler...
[DEBUG] 
%llx cancelling sync consistency report with mount path %@
[CRIT] Assertion failed: _offline
[DEBUG] 
%llx resetting local state for %@
[CRIT] Assertion failed: hasDB
[DEBUG] unlinking %@
[DEBUG] unlinking br security bookmark %@
[DEBUG] unlinking symlink %@
[DEBUG] keeping preserved item %@
[DEBUG] keeping item too large to upload %@
[DEBUG] unlinking excluded item %@
[DEBUG] unlinking .localized file %@
[DEBUG] unlinking uploaded .app file %@
[DEBUG] 
%llx destroying local account data for %@
[DEBUG] done deleting local files
[DEBUG] did reset TCC access
[DEBUG] done deleting local account data
[DEBUG] 
%llx loading app libraries
[DEBUG] 
%llx loading server zones
[DEBUG] 
%llx loading shared server zones
[DEBUG] loaded server zone: %@
[DEBUG] 
%llx loading client zones
[DEBUG] loaded client zone: %@
[CRIT] UNREACHABLE: [client|server]zoneNames mismatch:  %@ does not match with %@
[WARNING] ignoring client zone because it's missing a server zone
[DEBUG] 
%llx loading shared client zones
[DEBUG] loaded shared client zone: %@
[CRIT] UNREACHABLE: [client|server]zoneName or ownerss mismatch:  %@ does not match with %@
[WARNING] ignoring shared client zone because it's missing a server zone
[DEBUG] loaded app library: %@
[DEBUG] ignoring app library because it's missing a client zone
[CRIT] Assertion failed: appLibrary.wasMovedToCloudDocs ? clientZone.isCloudDocsZone : [clientZone.zoneName isEqualToString:appLibraryID]
[DEBUG] 
%llx registering and activating zones
[WARNING] dropping %@ because it's missing its client zone or app library
[DEBUG] activating %@
[CRIT] Assertion failed: BRCurrentPersonaMatchesID(self.personaIdentifier)
[CRIT] Assertion failed: serverZone
[CRIT] Assertion failed: serverZone.clientZone
[CRIT] UNREACHABLE: missing client zone for %@
[DEBUG] Deactivating private client zone %@
[CRIT] Assertion failed: sharedClientZone.state & BRCClientZoneStateIsResetting
[CRIT] Assertion failed: sharedClientZone.state & BRCClientZoneStateWantsDataUnlinked
[DEBUG] Destroying shared client zone %@
[DEBUG] deleting shared zone and library for %@ from local db
[DEBUG] deleting shared container %@ from server db
[WARNING] Can't find app library in the middle of closing
[CRIT] UNREACHABLE: can't find app library for %lld
[DEBUG] server zone already exists
[DEBUG] Created server zone: %@
[CRIT] Assertion failed: serverZone.dbRowID
[DEBUG] client zone already exists
[DEBUG] Created client zone: %@
[CRIT] Assertion failed: [clientZone.dbRowID isEqualToNumber:serverZone.dbRowID]
[DEBUG] app library already exists
[CRIT] Assertion failed: isShared == (appLibrary == nil)
[CRIT] UNREACHABLE: No db rowID on an app library or server zone
[CRIT] UNREACHABLE: No mangledID on a server zone
[CRIT] UNREACHABLE: no zone name on a server zone
[DEBUG] 
%llx Creating app library and zones: %@ if needed
[CRIT] UNREACHABLE: invalid containerID: %@
[DEBUG] returning early server zone: %@
client zone: %@
app library: %@
[CRIT] UNREACHABLE: can't find the default client zone
[ERROR] couldn't create app library
 appID: %@
serverZone: %@
clientZone: %@
[DEBUG] returning app library %@
server zone:%@
, client zone: %@
[CRIT] Assertion failed: mangledID.isShared
[CRIT] UNREACHABLE: can't reserve library rowID for a shared zone
[DEBUG] reserved rowid %@ for %@
[DEBUG] fetching the user record id because it wasn't set in the client state
[DEBUG] fetched user record id %@ with error %@
[CRIT] Assertion failed: userRecordName != nil
[DEBUG] ignoring failure to enable synced folder type
[ERROR] failed creating container %@ under root %@
[DEBUG] 
%llx CloudDocs apps list did change
[CRIT] UNREACHABLE: Couldn't change personas during app list refresh
[DEBUG] detected %@ of free space, scheduling pending-disk downloads
[DEBUG] 
%llx %s storage optimization for %@
[CRIT] Assertion failed: _isGreedy
[DEBUG] 
%llx starting to download documents for which we should be greedy
[DEBUG] 
%llx enabling sync for %@
[CRIT] UNREACHABLE: Bad folder type
[DEBUG] seting xattr value %@ on path: %@
[ERROR] failed setting xattr value %@ for key %@ on path: %@
[DEBUG] 
%llx disabling sync for %@
[CRIT] UNREACHABLE: Cannot disable sync for BRCSyncedFolderTypeDefault
[CRIT] Assertion failed: ![self hasRootForSyncedFolderType:folderType]
[CRIT] Assertion failed: _rootsByFolderType
[WARNING] Can't open symlink in the stage
[WARNING] Can't set the hidden finderinfo bit on the staged symlink - %s
[WARNING] Can't resolve the dest path - %s
[WARNING] Can't make the symlink live from stage - %@
[DEBUG] Made symlink live for %@
[WARNING] Can't make symlink in stage - %@
[CRIT] UNREACHABLE: sessionDirPath was accessed after being closed
[CRIT] UNREACHABLE: cacheDirPath was accessed after being closed
[CRIT] UNREACHABLE: autoResumeSyncTimerScheduler was accessed after being closed
[CRIT] UNREACHABLE: applyScheduler was accessed after being closed
[CRIT] UNREACHABLE: containerScheduler was accessed after being closed
[CRIT] UNREACHABLE: fsImporter was accessed after being closed
[CRIT] UNREACHABLE: notificationManager was accessed after being closed
[CRIT] UNREACHABLE: stageRegistry was accessed after being closed
[CRIT] UNREACHABLE: Bad folder type %u
[CRIT] Assertion failed: dictionary
[CRIT] UNREACHABLE: getting nil entry for folderType: %lu, dictionary: %@
[CRIT] UNREACHABLE: setting nil entry for folderType: %lu, dictionary: %@
[CRIT] Assertion failed: !dictionary[@(folderType)]
[CRIT] Assertion failed: dictionary[@(folderType)]
sharing/accept-flow
[NOTICE] share acceptation %@ failed with error %@
[DEBUG] use fallback flow with reason %@
[CRIT] UNREACHABLE: Session is not cancelled but DBs serial queue is nil!
[DEBUG] delete share acceptation fault because operation failed
[NOTICE] share acceptation %@ succeed and document is now live on disk at %@
[NOTICE] User clicked on share link %@
[DEBUG] Accept flow completed successfully.
[CRIT] UNREACHABLE: can't perform next step because operation is finished; %@
[DEBUG] 
%llx running %@ in %@
[CRIT] Assertion failed: method != nil
[CRIT] Assertion failed: _shareMetadata
[ERROR] failing share acceptation with %@
[DEBUG] network is unreachable, replacing error with generic network error
[CRIT] Assertion failed: _shareURL
[ERROR] Can't find the user visible URL for %@ - %@
[DEBUG] share item URL is %@ for %@
[DEBUG] 
%llx activating shared zone
[DEBUG] Open application completed successfully
[ERROR] Failed to open the target app - %@
[DEBUG] 
%llx checking if document sharing is supported
[DEBUG] 
%llx Check if app is installed
[DEBUG] Application proxy: %@
[CRIT] Assertion failed: !(goToAppStore && openWebPreview)
[DEBUG] MDM restrictions don't allow cross persona data transfer
[DEBUG] Application proxy missing %@ entitlement
[DEBUG] %@ is installed
[DEBUG] 
%llx Check if a user is signed in to iCloud and iCloud Drive is turned on
[WARNING] Can't accept share without a user signed in to iCloud
[CRIT] Assertion failed: !(goToSettings && openWebPreview)
[ERROR] Can't retrieve application app library ID for %@
[WARNING] Can't accept share without iCloud Drive turned on (accountDSID: %@, isEnabledForCloudDocs: %@, isAppLibraryDisabled: %@, isAccountMigrated: %@)
[DEBUG] User is eligible to accept the share
[DEBUG] 
%llx Check if app is profile disabled
[WARNING] %@ is disabled by profile
[DEBUG] 
%llx Show sharing join dialog
[DEBUG] Owner or share already accepted, skipping to next step
[NOTICE] User has refused to open shared document at %@
[NOTICE] User has accepted to open shared document at %@
[DEBUG] 
%llx Parsing share metadata %@
[DEBUG] Pre-creating accept operation to block next sync down %@
[CRIT] Assertion failed: acceptShareOp
[DEBUG] alias app library is %@
[DEBUG] local client zone is %@ (zoneName: %@)
[DEBUG] shared item is identified by %@ (displayName: '%@')
[DEBUG] 
%llx Start accepting share URL
[CRIT] Assertion failed: [self _isOwnerOrShareAlreadyAccepted]
[DEBUG] 
%llx creating share accept operation
[WARNING] we are already accepting share %@
[DEBUG] 
%llx received share access completion
[CRIT] UNREACHABLE: No operation error and no share id
[WARNING] failed to accept share - %@
[DEBUG] accept operation completed with success
[CRIT] Assertion failed: _linkItemID
[WARNING] do not open Pages
[WARNING] Couldn't insert parent chain for %@ after fetch - %@
[DEBUG] 
%llx Wait for shared item to sync down
[CRIT] UNREACHABLE: %@ wasn't found after syncing down on the owner
[DEBUG] 
%llx Wait for item to be on disk
[CRIT] Assertion failed: self->_linkFileObjectID
[WARNING] Couldn't get user visible file on %@ - %@
[DEBUG] 
%llx Preparing side fault
[DEBUG] found share item %@
[DEBUG] share item %@ is in transient state, should try again later
[CRIT] UNREACHABLE: item is in an unknown state: %@:
[CRIT] UNREACHABLE: document doesn't exists anymore
[CRIT] UNREACHABLE: item isn't a document or directory
[DEBUG] created shared item-to-be in db: %@
[DEBUG] created link shared item-to-be in db: %@
[DEBUG] _checkIfShouldWaitUntilDownloadCompletion is not relevant in FPFS.
[DEBUG] Skipping open in app
[ERROR] can't get bookmark string at %@
[DEBUG] Got bookmark string %@ for URL %@
[DEBUG] doing open operation on "%@" with "%@"
[CRIT] Assertion failed: _liveFileURL
[WARNING] Skipping opening side fault
[ERROR] don't know how to open shared item at %@
[DEBUG] 
%llx Waiting for share accept to finish
[DEBUG] Share accept finished with error %@
[DEBUG] 
%llx Creating server fault if possible
[CRIT] Assertion failed: _clientZone
[DEBUG] We don't have need to fetch deeply into the folder. Letting the list directory take care of fetching
[CRIT] Assertion failed: rootRecordID
[DEBUG] Failed to fetch record for server fault - %@
[DEBUG] Finished fetching records for server fault
[CRIT] UNREACHABLE: couldn't save to server truth when creating server fault
[WARNING] Couldn't create a directory fault
[ERROR] %@ wasn't found after syncing down
[CRIT] Assertion failed: _linkFileObjectID
[DEBUG] 
%llx Locate shared folder on disk
[WARNING] %@ wasn't able to be found on disk.  We must have reset or be broken structure or it was deleted locally.
[DEBUG] _prepareToDownloadSharedDocument is not relevant in FPFS
[DEBUG] _setSpotlightAttribute is not relevant in FPFS
[DEBUG] 
%llx Open shared document if still needed at %@
[CRIT] Assertion failed: shareURL
[ERROR] nil app bundle ID for share URL: %@
[CRIT] Assertion failed: redirectReason
[DEBUG] Opening in web browser (reason: %@) %@
[ERROR] Can't open "%@" using default web browser
BRCTransferBatchOperation/? (subclass activity missing)
[CRIT] API MISUSE: should be subclassed
[DEBUG] cancelling %@
[DEBUG] 
%llx operation is now empty, cancelling %@
[DEBUG] %@(%@) %@ progress %.1f%%
[DEBUG] %@(%@) done with %@: %@
[CRIT] API MISUSE: implement in subclass
[WARNING] failed %@ %ld %@ (%@) in %@: %@
[NOTICE] finished %@%@ %ld %@ (%@) in %@
[CRIT] Assertion failed: entries.count == 0 || error
[CRIT] UNREACHABLE: Missing transfer error for record %@
[DEBUG] 
%llx waiting for callback...
[DEBUG] 
%llx callbacks finished
[CRIT] Assertion failed: _type == problem->_type
[CRIT] UNREACHABLE: unknown effective problem type
[DEBUG] unlinkat(%d, '%@', %d) failed: %s
[ERROR] unlinkat(%d, '%@', %d) failed after trying to fix permissions %{errno}d
[DEBUG] mkdirat(%d, '%@', 0%3o) failed: %s
[ERROR] mkdirat(%d, '%@', 0%3o) failed after trying to fix permissions %{errno}d
[ERROR] refusing to create a symlink with an empty target %{errno}d
[ERROR] refusing to create a symlink with an empty name %{errno}d
[DEBUG] symlinkat(%d, '%@', '%@') failed: %s
[ERROR] symlinkat(%d, '%@', '%@') failed after trying to fix permissions %{errno}d
[DEBUG] unlinked unexpected file at '%@'
[CRIT] Assertion failed: errno != 0
[ERROR] fchmodat(%d, '%@') failed %{errno}d
[DEBUG] created '%@'
[DEBUG] renameatx_np(%d, '%@', %d, '%@', %u) failed: %s
[ERROR] renameat(%d, '%@', %d, '%@', %u) failed after trying to fix permissions %{errno}d
[ERROR] Failed opening op for %d %{errno}d
[ERROR] can't set xattr %s to %s at '%@' %{errno}d
[ERROR] can't open '%@' %{errno}d
[ERROR] can't read the size of xattr %@ at '%@' %{errno}d
[ERROR] empty xattr %@ at '%@'
[ERROR] can't read %lu-byte xattr %@ at '%@' %{errno}d
[ERROR] invalid xattr %@ at '%@': %s
[ERROR] Failed to open fd %d by relpath %@ %{errno}d
[WARNING] Fixed up openat(%d, '.') for inaccessible folder
[ERROR] failed openat with EACCES and fstatat(%d, '%s') %{errno}d
[ERROR] failed openat(%d, '%s') with EACCES, but the item is readable: deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[ERROR] failed openat with EACCES and fchmodat(%d, '%s', %c%c%c%c%c%c%c%c%c%c) deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x %{errno}d
[DEBUG] failed openat(%d, '%s') with EACCES: added %c%c%c%c%c%c%c%c%c%c to deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[ERROR] failed fchmodat(%d, '%s', %c%c%c%c%c%c%c%c%c%c) deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x %{errno}d
[DEBUG] openat(%d, '%s'): added %c%c%c%c%c%c%c%c%c%c to deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[CRIT] Assertion failed: fileID
[ERROR] Invalid call to %s with empty path
[DEBUG] Failed opening parent op for '%@', hope for the best %{errno}d
[CRIT] UNREACHABLE: Corrupt quarantine: %s
[DEBUG] Quarantine info differs in flags %u vs %u ignoring %u
[WARNING] Extended attribute %s size %ld is greater than size limit %ld
[ERROR] Xattr name list exceed size limit %ld
[CRIT] Assertion failed: [cached isKindOfClass:[NSData class]]
[WARNING] Do not attempt to get xattr size cache is full
[DEBUG] Failed opening parent op for %d '%@' %{errno}d
[DEBUG] Failed opening op for %d '%@'
[ERROR] Couldn't stat %{errno}d
[ERROR] Failed to remove flags %{errno}d
[ERROR] Failed stripping acls %{errno}d
[ERROR] Failed setting permissions %{errno}d
[ERROR] Failed to restore permissions %{errno}d
[ERROR] Failed to restore acl %{errno}d
[ERROR] Failed to restore flags %{errno}d
[ERROR] Failed opening %s %{errno}d
[ERROR] Unable to strip UF_IMMUTABLE and UF_APPEND to %s %{errno}d
[ERROR] Failed setting permissions of %s %{errno}d
[ERROR] Couldn't stat %s %{errno}d
[ERROR] Failed stripping acls of %s %{errno}d
[DEBUG] Can't delete %s: %s(%d)
[ERROR] Can't delete %s: %s(%d)
[DEBUG] resuming - suspendCount:%d->%d
[CRIT] Assertion failed: suspendCount >= 0
[DEBUG] suspending - suspendCount:%d->%d
[DEBUG] 
%llx deleting temporary files moved to the cache at '%@'
[DEBUG] did not remove '%@' %{errno}d
[ERROR] failed removing '%@' %{errno}d
[DEBUG] removed '%@/*'
[ERROR] lstat('%@') failed %{errno}d
[ERROR] renameat(%d, '%@', -1, '%@' deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x failed %{errno}d
[DEBUG] renamed '%@' to '%@' deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[DEBUG] failed removing documentID for %@ (%s)
[DEBUG] done iterating
[DEBUG] Starting enumerating under %@
[DEBUG] cancelling enumeration because container deactivated
[CRIT] Assertion failed: self->_handler
[DEBUG] visiting a new parent: %@
[DEBUG] continue iterating under parent %@, for _rowID > %ld
[DEBUG] %@: finished uploading all items in %@: %@
[CRIT] UNREACHABLE: task tracker created with nil label
[CRIT] Assertion failed: task_tracker
[DEBUG] task tracker (%s) has been cancelled, calling cancellation block <%p>
[DEBUG] initWithRecordIDNeedingFetch: %@
[CRIT] UNREACHABLE: Unsuported record type %@
[DEBUG] Opening changes stream %@
[DEBUG] Closing changes stream %@
[DEBUG] We have too many pending changes streams open.  Closing now
[DEBUG] We have too many pending changes streams open.  Closing some of them after a delay
[CRIT] error closing BRCPendingChangesStream DB connection: %@
[ERROR] We are in an error scenario, trying to close the DB, but it's busy - let's avoid dealloc it
[DEBUG] Dropping pending fetch table at %@
[CRIT] UNREACHABLE: Failed to set the cache size - %@
[CRIT] UNREACHABLE: Failed to set the cache spill - %@
[DEBUG] database is opening so creating at %@
[ERROR] db corruption handler called on pending sync db
[ERROR] sqlite error handler called on pending sync db - %@ (%@)
[CRIT] disk is full - exiting
[ERROR] Auto rollback handler called on pending sync db - %@ (%@)
[CRIT] UNREACHABLE: Trying to fetch token state without a db
[CRIT] UNREACHABLE: There should always be one entry
[CRIT] UNREACHABLE: Trying to fetch query cursor without a db
[CRIT] UNREACHABLE: Trying to enumerate records without a db
[CRIT] UNREACHABLE: Failed enumerating records - %@
[CRIT] Assertion failed: recordType != 0
[WARNING] Removed item in pending resources table because it was saved %@
[WARNING] Removed item in pending resources table because it was deleted %@
[CRIT] Assertion failed: rc && db.changes == 1
[DEBUG] Persisted %llu records needing subResource fetch
[ERROR] Failed saving to the pending changes stream - %@
[DEBUG] Persisted %llu records which are fully fetched
[DEBUG] Persisted %llu sub resource records which need fetch
[DEBUG] Removed %llu records from the pending fetches table because we should have just saved them
[DEBUG] Persisted %lld subResource records to the pending changes db
[DEBUG] Deleted %@ from the pending subResources table because it was a share to fetch and should be persisted
[ERROR] Failed to save subResource records after saving main table items - %@
[WARNING] Unblocking %lld records which are blocked from save for %@
[WARNING] Removed recordID %@ from record changes table because it now needs sub resources
[DEBUG] Unblocked %lld records waiting on save of %@ even though it's a sub-resource record
[DEBUG] Updated %llu items which no longer need to fetch xattr %@
[ERROR] We couldn't fetch recordID %@ so it's not going to save. We deleted %lld items from pending subresources table for this
[ERROR] We couldn't fetch recordID %@ so it's not going to save. We marked %lld as not needing fetch anymore
[ERROR] We couldn't fetch recordID %@ so it's not going to save. We marked %lld as not blocked for save anymore
[CRIT] Assertion failed: db.isInTransaction
[DEBUG] Updated %llu items to be unblocked for fetching %@
[DEBUG] Updated %llu items to be unblocked for saving %@
[CRIT] Assertion failed: _itemID
BRCSharingModifyShareOperation/? (subclass activity missing)
[WARNING] Couldn't find item %@ in zone %@
[DEBUG] requesting sharing identity on %@
[CRIT] Assertion failed: contentsRecord
[CRIT] UNREACHABLE: no records and no error
[CRIT] UNREACHABLE: no error and no sharing key
[DEBUG] Got sharing identity for share - %@
[ERROR] Fetching sharing identity failed - %@
[CRIT] UNREACHABLE: no public sharing identity. avoiding breaking iwork shares
[DEBUG] Yanking the routing key from the server for %@
[CRIT] UNREACHABLE: no routing key on share identity prepared record
[CRIT] Assertion failed: [self->_share.publicSharingIdentity isEqualToData:self->_sharingIdentityPreparedRecord.encryptedPublicSharingKey]
[DEBUG] Requesting iwork sharing identity on %@
[CRIT] UNREACHABLE: sharing identity isn't encrypted data
[CRIT] UNREACHABLE: base token isn't a string
[CRIT] UNREACHABLE: no base token %@ or sharing identity %@ and no error
[CRIT] UNREACHABLE: Sharing identities don't match (%@ vs %@)! Trying to fix up the identities
[DEBUG] Got iWork sharing identify for share - %@
[ERROR] Fetching iWork sharing identity failed - %@
[CRIT] UNREACHABLE: not a directory nor a document
sharing/save-share
[WARNING] Unsharing turd folder share %@
[CRIT] UNREACHABLE: no share record
[ERROR] Failed with baseTokenError=%@
[CRIT] UNREACHABLE: directory %@ isn't pcs chained
[ERROR] Couldn't get base record for %@, %@
[CRIT] UNREACHABLE: couldn't get base record
[WARNING] Failed to unshare turd - %@
[DEBUG] Saving %@%@ for share op %@
[CRIT] UNREACHABLE: got an unexpected number of shares saved
[ERROR] failed saving share %@: %@
[DEBUG] finished saving share %@
[CRIT] Assertion failed: [save[1].recordType isEqualToString:kBRRecordTypeContent] || [save[1].recordType isEqualToString:kBRRecordTypeStructure]
[CRIT] Assertion failed: [save[0].recordType isEqualToString:CKRecordTypeShare]
[DEBUG] Saved share %@
sharing/destroy-share
[CRIT] UNREACHABLE: got an unexpected number of shares deleted
[ERROR] failed to destroy share %@: %@ in %@
[DEBUG] destroyed share %@ in %@
sharing/lookup-participants
[ERROR] failed share participant lookup for %@ - %@
[CRIT] UNREACHABLE: Unexpected number of share participants: expected %lu got %lu
[DEBUG] fetched share participants: %@
sharing/modifyAccess
[CRIT] UNREACHABLE: no dict and no error
[ERROR] Failed %@ access to %@ - %@
[DEBUG] %@ access to %@
[DEBUG] Can't fetch shareID for item %@
sharing/copyParticipantToken
[CRIT] UNREACHABLE: No base token so the share token we would return would be invalid for iwork
[CRIT] UNREACHABLE: no error and no participantKey
[CRIT] UNREACHABLE: no error and no participantDocumentToken
[DEBUG] 
%llx Fetch participantDocumentToken disabled --> use participantKey as before. item: %@
[DEBUG] 
%llx Failed to get participantDocumentToken --> use participantKey as before. item: %@
[DEBUG] 
%llx Succeed to get participantDocumentToken. item: %@
sharing/prepareFolderPCS
sharing/copy-shareURL
[DEBUG] Finished copying URL %@ for share %@ error %@
[CRIT] UNREACHABLE: Couldn't get a share URL
[DEBUG] Share: %@
[DEBUG] Prepared record: %@
[CRIT] UNREACHABLE: Couldn't get a share URL for %@
sharing/copy-shortToken
[CRIT] UNREACHABLE: No short token found on record
sharing/clean-subitems
[DEBUG] Removing shared subitems in op %@
[DEBUG] Removing shareID %@
[DEBUG] Removing alias record %@
[DEBUG] Remove share subitems batch completed with error - %@
[DEBUG] Can't find alias target for %@
[WARNING] Couldn't find server zone for %@
[WARNING] No filename found on alias target %@
[DEBUG] an item in the path has a nil filename
[DEBUG] Processing server truth in op %@
[WARNING] subitem %@ is already shared inside %@
[DEBUG] Found shared-to-me alias to delete %@ in %@
[DEBUG] We need to fetch %@ before we can continue
[CRIT] UNREACHABLE: Huh?  We shouldn't be processing this item if it's not shared and not a directory fault %@
[CRIT] UNREACHABLE: Don't know how to unshare item of type %d
[DEBUG] deleting %s shareID %@
[CRIT] UNREACHABLE: Can't locate the item type we are deleting?
[DEBUG] Processing client truth in op %@
[CRIT] Assertion failed: (options & BRCSharingItemHasShareID) != 0
[DEBUG] Not processing child items on %@ because it already has a shareID
[CRIT] UNREACHABLE: can't find %@ in %@
[CRIT] Assertion failed: fallbackItem
[DEBUG] 
%llx computing the parent item id of %@
[DEBUG] found the alias representing this item: %@
[DEBUG] falling back to an app library documents root: %@
[DEBUG] Server container was reset, we need to reset ourselves
[DEBUG] Server change token expired, we need to reset ourselves
[DEBUG] Server container was reset, zone not found, we need to reset ourselves
[DEBUG] Server container was reset, user deleted zone, we need to reset ourselves
[DEBUG] unknown error domain: %@, we should retry
[CRIT] UNREACHABLE: there should be a recordID
[DEBUG] we should sync-down again after %@
[CRIT] UNREACHABLE: really unexpected error: %@
[DEBUG] Cloudd crashed, our sync up could have been received by the server
[CRIT] Assertion failed: _suspendCount > 0
[CRIT] Assertion failed: item.st.iWorkShareable
sharing/iWork-publishing
[CRIT] UNREACHABLE: No sharing info and no error
[ERROR] Failed sharing %@ - %@
[DEBUG] %@ was shared
[CRIT] Assertion failed: self->_forPublish
[ERROR] Failed unsharing %@ - %@
[DEBUG] %@ was unshared
[CRIT] Assertion failed: !self->_forPublish
[CRIT] Assertion failed: _requestID == 0
[DEBUG] ignoring excluded item in package
[WARNING] Couldn't open parent path for breadth enumeration %@
[CRIT] Assertion failed: parentPath.isUnixDir
[WARNING] cannot read content of %@
[WARNING] Couldn't opendir parent path for breadth enumeration %@
[CRIT] UNREACHABLE: no directory entry
[CRIT] Assertion failed: session != nil
[DEBUG] 
%llx invalidating connection with %@
[DEBUG] %@: is now foreground
[DEBUG] %@: is now background
[CRIT] UNREACHABLE: Failed to adopt persona, bailing out
[DEBUG] starting monitoring %@
[DEBUG] %@ is now monitoring %@
[DEBUG] %@ is no longer monitoring %@
[DEBUG] stop monitoring %@
[CRIT] UNREACHABLE: there should be a client
[INFO] Account %@ is not loaded, waiting for it
[DEBUG] Couldn't find the account for the current persona. We may be in the middle of a log out request
[INFO] After waiting, the sesion is: %@
[CRIT] Assertion failed: session.accountHandler == handler
[DEBUG] 
%llx there is now enough disk space to work
[NOTICE] another thread has already tried to load the account
[NOTICE] iCloud Drive has now enough disk space to work so loading account
[DEBUG] Notifying clients of account change because we could have denied xpc during low disk space
[WARNING] Returning error because iCloud Drive doesn't have enough disk space to be functional
[DEBUG] granting access to non-sandboxed app %@
[ERROR] invalid entitlement for %@
[ERROR] %@ is missing privilege
[DEBUG] granting access to %@ for non-sandboxed app %@
[ERROR] %@ is talking to us without container proxy right
[ERROR] %@: is trying to call %@, but has no access
[ERROR] Client %@ gave us a non-existing fault URL path %@
[DEBUG] %@: file doesn't exist at path: %s
[DEBUG] %@: denied access to %s
[CRIT] UNREACHABLE: Couldn't switch personas to look up session from url %@
[CRIT] UNREACHABLE: No xpc client group found for %@
[DEBUG] Using inferred session from url %@
[INFO] %@: reply(%@, %@, %@, %@)
[DEBUG] %@: unsandboxed app is now using %@ as %@
[DEBUG] add dependency %@ for operation %@
[DEBUG] %@: %@
[CRIT] UNREACHABLE: should have an account session
[DEBUG] account: %@
[ERROR] Can't create %@: %@
[DEBUG] checking status for %@
[DEBUG] %@ can't access %@: %@
[CRIT] UNREACHABLE: %@ is not owning %@ and updating its metadata
[ERROR] nonexistant container %@
[DEBUG] 
%llx IPC-initiated reset for %@
[DEBUG] Not deleting container %@ which is moved to clouddocs
[DEBUG] We can't delete server zone for shared zone, skipping %@
[CRIT] %s reset for %@
[WARNING] Stripping attributes request from %@ to %@
[DEBUG] receiver: %@
[ERROR] can't setup container %@: %@
[DEBUG] Session is nil or not open -- falling back to the account status
[CRIT] UNREACHABLE: Can't compute the mobile documents url
[DEBUG] %@: reply(%@, %@)
[DEBUG] 
%llx getting usage for %@
[WARNING] unable to find bundleID %@
[ERROR] key: %@ is not of class NSString
[INFO] %@: reply(success=%d, %@)
[INFO] 
%llx %@ (%@) %s simulating health issue
[NOTICE] simulating health issue on %@: %@
[INFO] 
%llx %@ (%@) %s getting health status on %@
[DEBUG] 
%llx waiting for zone health sync down
[DEBUG] 
%llx finished sync down zone health
[DEBUG] received an error while syncing down zone health: %@
[DEBUG] 
%llx finished syncing zone health
[DEBUG] 
%llx timed-out: zone health sync
[DEBUG] Requesting force sync on the special container %@ that doesn't have an app library.
[DEBUG] 
%llx waiting for next sync down for %@ -> %@
[DEBUG] 
%llx finished sync down for %@
[DEBUG] received an error while syncing container: %@
[DEBUG] 
%llx finished scheduling sync for %@
[DEBUG] received an error while trigger sync for container: %@
[DEBUG] 
%llx finished all sync down tasks for %@
[DEBUG] 
%llx timed-out: sync of %@
[INFO] 
%llx %@ (%@) %s Refreshing sharing state for %s
[DEBUG] fileObjectID: %@
[DEBUG] invalid item identifier %@
[DEBUG] couldn't find an item for fileObjectID=%@
[CRIT] Assertion failed: result == nil || [result isKindOfClass:[NSDictionary class]]
[WARNING] Server zone was updated during refresh - avoiding races
[WARNING] force deleting item with missing share in shared zone %@
[WARNING] Clearing sharing options on missing share for %@
[WARNING] Learning new sharing options %@ from refresh state for %@
[WARNING] Learning updated item mode %s from refresh state for %@
[DEBUG] 
%llx %@: force syncing containers matching '%@'
[NOTICE] %@: force syncing shared database
[NOTICE] %@: force syncing %@
[NOTICE] %@: force syncing container metadata
[NOTICE] %@: forcing syncing zone health
[NOTICE] %@: forcing syncing side car zone
[DEBUG] 
%llx %@: iWork force syncing containers matching '%@' ownedByMe:%d
[DEBUG] 
%llx %@ asks us to wait for the fsevents to be processed
[INFO] %@: reply()
[INFO] %@: reply(%d)
[INFO] %@: reply(%lld)
[DEBUG] accountID: %@
[CRIT] UNREACHABLE: asked to login to a non migrated account
[ERROR] can't create account: %@
[NOTICE] Requested to logout of account %@
[DEBUG] Logout of account %@
[NOTICE] Requested to update display name of account %@
[ERROR] can't update account: %@
[INFO] %@: reply(%lu, %@)
[CRIT] UNREACHABLE: asked the content record ID of a folder
[WARNING] No document found for %@
[INFO] %@: reply(%@, %@, %@, %@, %@)
[DEBUG] data: %@
[DEBUG] looking for docID:%@ itemID:%@ mangledID:%@ unsaltedBookmarkData:%@
[DEBUG] %@ has access to %@
[DEBUG] %@ %s access to %@
[WARNING] Can't find appLibrary for id %@
[WARNING] resolveBookmarkDataToURL denied for %@: not entitled
[INFO] %@: reply(%llu, %@)
[INFO] %@: reply(%@, %ull, %d, %@)
[DEBUG] enumerating items in %@ offset:%lld limit:%lld
[DEBUG] refetching quota
[DEBUG] enumerating children of %@
[INFO] %@: reply(%@, %llu, %d, %@)
[CRIT] Assertion failed: directoryItem.isDirectory
[INFO] %@: reply(%@, %ull, %@)
[DEBUG] enumerating all folders offset:%lld limit:%lld
[INFO] %@: reply(%d, %d, %@, %@)
[DEBUG] starting operation to copy sharing info at %@
[DEBUG] Share %@ has %lu participants
[INFO] 
%llx %@ (%@) %s looking up url for recordID %@ fetching from server:%s
[DEBUG] creating sharing info for item %@
[DEBUG] Creating share for item %@
[WARNING] Deleting share %@ because we're being asked to save a share with no participants
[DEBUG] Ignoring share save on empty share with no etag %@
[DEBUG] Saving share %@
[DEBUG] Adding %@ as a dependency on share save
[DEBUG] Destroying share info for share %@
[DEBUG] Copying share participants for identities %@
[DEBUG] modifying record access at item %@
[DEBUG] copying participant token on item %@
[DEBUG] preparing folder for sharing at item %@
[CRIT] Assertion failed: item.clientZone.isPrivateZone
[DEBUG] processing subitems at item %@
[DEBUG] copying url for share %@ for app %@
[INFO] 
%llx %@ (%@) %s Getting creator name for %s
[INFO] %@: reply(%d, %d, %d, %@, %@)
[INFO] 
%llx %@ (%@) %s Getting sharing options for %s
[ERROR] An accept operation is already running for %@
[ERROR] can't handle share %@: %@
[DEBUG] 
%llx handling share at %@
[WARNING] can't accept the share: %@
[ERROR] can't extract metadata for %@: %@
[DEBUG] extracted metadata for %@: %@
sync-down/periodic-sync
[DEBUG] 
%llx considering whether or not to schedule sync down for %@
[DEBUG] container-metadata appears to be out of sync in the periodic check, forcing sync
[DEBUG] zone health appears to be out of sync in the periodic check, forcing sync
[DEBUG] side-car appears to be out of sync in the periodic check, forcing sync
[DEBUG] Not considering %@ for periodic sync because it is blocked from sync
[DEBUG] %@ appears to be out of sync in the periodic check, forcing sync
[CRIT] Assertion failed: self.group
[DEBUG] 
%llx completed fetching changed zone
zones: %@
[CRIT] UNREACHABLE: No error found
[ERROR] can't fetch all changed zones: %@
[NOTICE] scheduled a %s periodic sync
[DEBUG] Running operation to fetch %@: %@
[CRIT] Assertion failed: self.wantsContent
[CRIT] Assertion failed: _flags.startDownload
[CRIT] Assertion failed: _flags.isFault || _flags.startDownload
[DEBUG] We need to create the zone health zone on %@ - %@
[ERROR] Failed reporting zone health on %@ - %@
[DEBUG] finished reporting zone health: %@, op: %@
[WARNING] not updating zone health state because we think we are less broken than the server does
[CRIT] Assertion failed: report.state != BRCZoneHealthStateHealthy
[DEBUG] No zone health errors to report
[CRIT] UNREACHABLE: no BRCPackageItem should be a Tombstone
[CRIT] Assertion failed: _suspendCount >= 0
[CRIT] Assertion failed: scheduler
[CRIT] UNREACHABLE: %@ was deallocated without being closed
[CRIT] UNREACHABLE: Trying to create a sync context while uploadsDeadlineScheduler still missing. Session open: %d
[CRIT] UNREACHABLE: Trying to create a sync context while downloadsDeadlineScheduler still missing. Session open: %d
[DEBUG] 
%llx Uploader: preparing next batch for %@ (max-count:%ld size:%@ priority:%ld)
[DEBUG] 
%llx Downloader: preparing next batch for %@ (max-count:%ld size:%@ priority:%ld)
[CRIT] Assertion failed: [[[UMUserManager sharedManager] br_currentPersonaID] isEqualToString:_session.personaIdentifier]
[DEBUG] Cancelling discretionary operation %@ to make room for a non discretionary operation %@
[DEBUG] Blocking discretionary op %@ on %@
[CRIT] Assertion failed: database
[DEBUG] scheduling %@ on %@ (account %@)
[CRIT] UNREACHABLE: missing group for %@
[CRIT] UNREACHABLE: Exception %@ was raised while trying to enqueue %@
[CRIT] Assertion failed: _isCancelled
[DEBUG] beginning forced foreground for %@ for %.1fs
[DEBUG] forced foreground grace period over for %@
[CRIT] Assertion failed: self->_foregroundState == BRCContainerForegroundStateForcedForeground
[CRIT] UNREACHABLE: there should be no timer created
[DEBUG] beginning foreground grace period for %@ from %@ for %.1fs
[DEBUG] grace period over for %@ %@
[DEBUG] Cancelling foreground grace timer for %@ because we're now foreground again
[DEBUG] fetched quota %llu - %@
[CRIT] Assertion failed: BRCItemTypeIsDirectory(_st.type)
[DEBUG] Server item is a directory fault so now our local item is a directory fault for %@
[CRIT] UNREACHABLE: server count %@ minus hidden count %@ is less than 0 for %@
[CRIT] UNREACHABLE: Can't find clientZone for zoneID %@
[CRIT] Assertion failed: _st.type == BRC_ITEM_TYPE_FS_ROOT || _orig.st.type == BRC_ITEM_TYPE_FS_ROOT || _orig.st.type == BRC_ITEM_TYPE_DIRECTORY_SHARE_ACCEPT_FAULT
[CRIT] Assertion failed: [db isBatchSuspended]
[DEBUG] Inserting tombstone for alias %@ which is pending target
[CRIT] Assertion failed: sqlite3_value_int(argv[0]) == BRC_ITEM_STATE_TOMBSTONE
[CRIT] Assertion failed: sqlite3_value_int(argv[3]) == BRC_ITEM_SCOPE_TRASH
[CRIT] UNREACHABLE: a task tracker is required to download a directory
[CRIT] UNREACHABLE: asShareableItem called on a non-shareable item
[ERROR] Default value %@ is malformed, using %@
[ERROR] Invalid user defaults: %@, using %@
[CRIT] Assertion failed: !_userDefaultsCache[kBRCGlobalUserDefaultsKey]
[DEBUG] 
%llx defaults changed
[CRIT] Assertion failed: ![clientZoneIdentifier isEqualToString:kBRCGlobalUserDefaultsKey]
[CRIT] Assertion failed: clientZoneIdentifier && _userDefaultsCache[kBRCGlobalUserDefaultsKey]
[DEBUG] 
%llx config: initial load
[DEBUG] config: not updating the configuration, waiting for next activity callback
[DEBUG] 
%llx config: it's activity time
[DEBUG] 
%llx config: download task finished %@, plist %@
[ERROR] config: failed to move downloaded cache file into place %@
[ERROR] config: session %@ become invalid: %@
[ERROR] config: can't download task %@%@: %@
[DEBUG] config: download finished for %@
[DEBUG] Loaded cached server configuration %@
[ERROR] failed parsing plist at %@: %@
[DEBUG] Server configuration changed to etag %@
[DEBUG] config: Loaded server configuration from %@
[DEBUG] 
%llx config: asynchronously loading %@
[NOTICE] loading iCloud Drive configuration from disk
[NOTICE] downloading iCloud Drive configuration
[DEBUG] scheduling config download %@
[DEBUG] server default for %@: %@
[DEBUG] user default for %@: %@
[CRIT] UNREACHABLE: no version for key: %@
[CRIT] Assertion failed: perVersionDict
[CRIT] Assertion failed: min < max
[CRIT] Assertion failed: min <= def
[CRIT] Assertion failed: def <= max
[ERROR] invalid user default for %@: %@ range:[%d,%d]; using default:%d
[ERROR] invalid user default for %@: %@ range:[%lld,%lld]; using default:%lld
[ERROR] invalid user default for %@: %@ range:[%f,%f]; using default:%f
[ERROR] invalid user default for %@: %@; using default:%s
[ERROR] invalid user default for %@.%@: %@; using default:%@
[DEBUG] We are not blacklisted from %@
[DEBUG] We are not blacklisted from %@ chaining because we are in carry
[DEBUG] We are not blacklisted from %@ because we are on an internal build
[DEBUG] We are not blacklisted from %@ because we are on an internal build and in carry
[DEBUG] We are blacklisted from %@ because %d < %d and %d
[CRIT] Assertion failed: [error intValue] < BRCProblemTypeMaxValue
[CRIT] Assertion failed: defaultValues[key] != nil
[ERROR] invalid user default %@; using:%@
[INFO] 
%llx 
[DEBUG] 
%llx 
[WARNING] Couldn't figure out the expected app library; falling back to clouddocs
[DEBUG] Destroying anchor %@
[DEBUG] Destroying anchor %@, databaseBasePath: %@, UUID: %@
[DEBUG] Anchoring %@ at %@ (db at %@)
[ERROR] Unable to serialize property list - %@
[DEBUG] 
%llx account properties changed
[DEBUG] forcing refresh of cellular switch
[DEBUG] 
%llx checking if cellular is enabled for D&D
[DEBUG] cellular is %@ for D&D
sync-down
[INFO] 
%llx %@ fetch record changes operation for %@ from token %@
[INFO] 
%llx got a record in operation %@
[DEBUG] record changed: %@
[CRIT] UNREACHABLE: got a nil record and recordID
[CRIT] Assertion failed: !record || record.etag != nil
[WARNING] Record fetch failed for %@ with error %@
[DEBUG] 
%llx got a deletion in operation %@
[INFO] record was deleted: %@
[DEBUG] 
%llx received updated server change token %@ client change token %@ in operation %@ status %ld
[CRIT] UNREACHABLE: broken structure in op %@ change token %@
[DEBUG] 
%llx fetch changes completion for zone in operation %@
[DEBUG] 
%llx fetch changes completed for operation %@
[ERROR] sync-down failed for %@: %@
[DEBUG] success
[DEBUG] ignoring zone not found error, because we're syncing down for the first time
[DEBUG] Fetched initial server zone tokens %@ and %@ for %@
[DEBUG] Saving initial zone data of %@ with server token %@ client token %@
[CRIT] UNREACHABLE: no fetched zone and no error
[DEBUG] can't register pushes: %@
[ERROR] can't create zone or register pushes: %@
[DEBUG] 
%llx Sync: fetching record changes for %@
[DEBUG] 
%llx refetching installed apps list
[DEBUG] forced a refetch of the list of apps
[DEBUG] 
%llx start monitoring cloud apps
[DEBUG] 
%llx asked appIDs for %@
[DEBUG] 
%llx asked containerIDs for %@
[DEBUG] 
%llx asked appIDs
[DEBUG] Checksumming R/W mmaped file at %@
[WARNING] Checksumming failed at %@: %@
[DEBUG] Returning nil when looking up by documentID and no migration is in progress
[CRIT] UNREACHABLE: fileobjectID has an invalid type
[CRIT] UNREACHABLE: There is no local item for BRFileObjectIDTypeRootContainer
[DEBUG] Returning nil when looking up by fileID and no migration is in progress
[CRIT] Assertion failed: item.serverZone.isSharedZone
[CRIT] UNREACHABLE: reset needed for %@ because the hierarchy is deeper than %u under %@ when looking for %@
[DEBUG] 
%llx enumerating containers
[DEBUG] %@: moved %lld throttles from %@ to %@
[CRIT] Assertion failed: ![errorString isEqualToString:@"CKErrorDomain.2"]
[CRIT] UNREACHABLE: error string is not a string value %@
[CRIT] Assertion failed: _subResourceRecordsByID.count == 0 && _pendingChangesStream == nil
[CRIT] Assertion failed: serverZone && parentOperation
[DEBUG] 
%llx %@ scheduling xattr fetch
[DEBUG] 
%llx %@ scheduling deserialize
fetch-record-subresources
[CRIT] Assertion failed: !_isDoneFetchingRecords
[WARNING] %@ got a record we're not interested in: '%@'
[DEBUG] %@ ignoring record we're not interested in saving named: %@
[DEBUG] %@ needs to fetch shareID %@
[DEBUG] %@ needs to fetch xattr signature %@
[CRIT] Assertion failed: [contentRecordName hasPrefix:kBRRecordIDPrefixContent]
[WARNING] Couldn't determine record type for root share record %@
[CRIT] Assertion failed: ![_deletedShareIDs containsObject:recordID]
[CRIT] Assertion failed: ![_deletedRecordIDs containsObject:recordID]
[CRIT] Assertion failed: _recordsByID[recordID] == nil
[DEBUG] %@ record changed %@ which needs subResources fetched
[DEBUG] %@ record changed %@
[WARNING] %@ has no need to deserialize %@ because we've already fetch it
[CRIT] Assertion failed: _subResourceRecordsByID[recordID] == nil
[DEBUG] %@ scheduling recordID deserialize for %@
[WARNING] %@ Zone root record ID was deleted %@
[WARNING] %@ App library root record ID was deleted %@
[DEBUG] %@ record ID was deleted %@
[CRIT] Assertion failed: _recordsByID[shareID] == nil
[CRIT] Assertion failed: ![_deletedShareIDs containsObject:shareID]
[DEBUG] %@ share ID was deleted %@
[DEBUG] %@ waiting to fetch all records
[CRIT] Assertion failed: _recordsByID.count == 0 && _deletedShareIDs.count == 0 && _deletedRecordIDs.count == 0 && _subResourceRecordsByID.count == 0
[DEBUG] Not fetching records blocking save because we aren't caught up
[DEBUG] %@ stopping fetching records with error %@
[DEBUG] %@ resuming deserialize source which was waiting for batch save
[CRIT] Assertion failed: _xattrFetchingGroup == nil
[CRIT] Assertion failed: _deserializeGroup == nil
[CRIT] Assertion failed: _recordsByID.count == 0
[CRIT] Assertion failed: _subResourceRecordsByID.count == 0
[CRIT] Assertion failed: _deletedShareIDs.count == 0
[CRIT] Assertion failed: _deletedRecordIDs.count == 0
[CRIT] Assertion failed: _movedZoneNames.count == 0
[CRIT] Assertion failed: ![_pendingChangesStream hasXattrsToFetch]
[CRIT] Assertion failed: ![_pendingChangesStream hasRecordIDsToDeserialize]
[DEBUG] %@ finished record fetcher
[CRIT] Assertion failed: _queryFinishedServerTruthCallback == nil
[CRIT] Assertion failed: _queryFinishedClientTruthCallback == nil
[CRIT] UNREACHABLE: Fetch loop trying to fetch %@
[DEBUG] %@ leaving deserialize group due to an error
[CRIT] Assertion failed: _deserializeState != BRCDeserializeStateWaitingForNextBatchSave
[DEBUG] %@ doesn't have records to deserialize
[DEBUG] %@ fetching %lu records to deserialize - %@
[WARNING] We deserialized record id %@ which was useless because it came later
[ERROR] We can't find a record which really should exist - %@.  Unblocking other records from save
[ERROR] %@ Deserialize record failed for %@ - %@
[DEBUG] %@ encountered an operation error so we should stop %@
[DEBUG] %@ finished fetching record batch to deserialize%s
[DEBUG] %@ has sub resource that no longer has info to fetch %@ -> %@
[DEBUG] %@ leaving xattr fetch group due to an error
[DEBUG] No xattrs to fetch
[DEBUG] 
%llx %@ fetching %lu xattrs
[DEBUG] 
%llx running the xattr fetch operation
[DEBUG] 
%llx %@ finished fetching xattrs
[ERROR] failed to fetch xattr assets for %@: %@
[DEBUG] failed to fetch xattr assets for %@: %@
[CRIT] UNREACHABLE: Received %lu xattr records instead of expected %lu records for %@
[ERROR] %@ failed to store xattr for signature: %@ - %@
[DEBUG] %@ saved xattr for signature: %@ sz:%lld
[DEBUG] Removed xattr requirement from %lld in-memory subResourceRecords
[DEBUG] %@ preparing to save record batch with %lu in memory items %lu subresource items %lu moved zone names
[DEBUG] %@ no longer needs to fetch shareID in %@ because it's fetched in pending changes stream
[DEBUG] %@ is no longer blocked from save in %@ because the blocker is fetched in pending changes stream
[DEBUG] %@ no longer needs to fetch shareID in %@ from server truth check
[DEBUG] %@ is no longer blocked for save in %@ from server truth check
[DEBUG] %@ starting to wait for xattr fetches
[DEBUG] %@ starting to wait for deserialize fetches
[WARNING] We need to fetch %@ to unblock %@ from saving, but it wasn't found.  Forcing fetch
[ERROR] We need to fetch %llu records in the pending changes stream to allow saving for %@.  Forcing fetch
[CRIT] Assertion failed: !_queryFinishedServerTruthCallback
[CRIT] Assertion failed: !_queryFinishedClientTruthCallback
[DEBUG] %@ saving records with server change token:%@ requestID:%llu caught up:%s directly:%s
[DEBUG] %@ recreating pending changes stream with updated change token
[WARNING] %@ Allocating ranks failed when not caught up.  We'll save to pending changes from now on
[CRIT] Assertion failed: _pendingChangesStream || !cursor
[DEBUG] %@ saving records with query cursor:%@ directly:%s
[CRIT] Assertion failed: _pendingChangesStream
[DEBUG] %@ Destroying pending changes db because we are done with it
[WARNING] %@ got a (temporary) broken structure while listing directory contents
[WARNING] Allocating ranks failed when not caught up and listing.  We'll save to pending changes from now on
[DEBUG] resuming %@
[DEBUG] suspending %@
[CRIT] UNREACHABLE: Invalid components count. It should either be an absolute path or prefixed with file provider id
[ERROR] this method is deprecated
[DEBUG] 
%llx new presenter of '%@': %@ (%@)
[CRIT] Assertion failed: presentersIDs == nil
[DEBUG] not doing anything since we're logged out
[DEBUG] 
%llx removed presenter of '%@': %@ (%@)
[CRIT] Assertion failed: presentersIDs.count == 1
[CRIT] Assertion failed: [presentersIDs containsObject:filePresenterID]
[DEBUG] '%@' moved to '%@', by %@
[DEBUG] returning purgeable info from cache
purgeableSpaceByUrgency:%@
nonPurgeableSpace:%@
[WARNING] could not retrieve cached purgeable space
[DEBUG] 
%llx recomputing purgeable space for all urgencies
[DEBUG] reclaimable size from db is %@
[DEBUG] reclaimable size from stage is %@
[DEBUG] not account for local document because optimize storage is set to off
[ERROR] Failed removing ciconia_diagnose: %@
[INFO] Incremental vacuuming %@ took %f seconds reclaimed %@ (size reduction %.2f percent)
[DEBUG] no need to evict, amount requested is %@
[DEBUG] evicted %@ from stage
[ERROR] Timed out waiting for eviction!
[DEBUG] not evicting document because optimize storage is off
[DEBUG] evicted %@ from stage and containers
[DEBUG] Purged %@ when asked to purge %@ for urgency %d
[DEBUG] Periodicly reclaimed %@
[DEBUG] not requesting space because we already have enough (available:%@ > required:%@)
[NOTICE] evicting for storage optimization
[CRIT] UNREACHABLE: calling %s with empty path
[CRIT] UNREACHABLE: can't open %@
[DEBUG] space for %@ is %llu bytes (hfs compat. dirstat)
[CRIT] UNREACHABLE: can't get size for %@ : %s
[CRIT] Assertion failed: [serverZone isKindOfClass:[BRCSharedServerZone class]]
[CRIT] UNREACHABLE: there is already a share acceptation running for that itemID; %@
[CRIT] Assertion failed: item.isShareAcceptationFault
[DEBUG] [%@] has been initialized
[DEBUG] [%@] has been invalidated
[DEBUG] [%@] has been reset
[DEBUG] reachability flags: %x
[NOTICE] Network really becomes %sreachable
[DEBUG] Power level really becomes %s
[DEBUG] disk %@ has %senough space now
[CRIT] Assertion failed: deviceID != 0
[CRIT] Assertion failed: _memoryNotificationEventSource == NULL
[DEBUG] Memory warning received
[DEBUG] not monitoring %d because BKS doesn't know its bundleID
[DEBUG] 
%llx received a notif for %@ from BKS: %@
[DEBUG] Received an app install notification
[CRIT] UNREACHABLE: Failed to adopt persona for notification %s
[DEBUG] Power level is now %s
[ERROR] fsctl(dev=%d) failed %{errno}d
[DEBUG] pending migrations: %@
[DEBUG] Ignoring share alias migration key for %@ because the user default is no
[DEBUG] pending migration for %@: %@ from cursor:%@
[DEBUG] no pending migration for %@
[CRIT] UNREACHABLE: unknown migration completed for container %@
[ERROR] can't open %lld to set metadata for %lld %{errno}d
[ERROR] can't open live path %lld to set metadata %{errno}d
[DEBUG] 
%llx fixing up staged item %@
[DEBUG] staged file ID is in the graveyard, start over
[DEBUG] item is no longer in stage %@
[DEBUG] 
%llx live file ID was swapped and is now in the stage, moving to the graveyard
[ERROR] Can't resolve path %@ %{errno}d
[WARNING] We have a conflicting item %@ which needs to get bounced away
[WARNING] Clearning staged item with zero generationID for item %@
[CRIT] UNREACHABLE: item %@ was edited in stage (generationID = %lu)
[DEBUG] reserved item is still staged for creation
[DEBUG] item is still staged for update
[DEBUG] item is still staged but already moved to graveyard, making it reserved
[CRIT] Assertion failed: self.hasPid
[CRIT] Assertion failed: _hasAuditToken
[DEBUG] %@ is restricted from sync (TCC)
[DEBUG] %@ is restricted from sync (MC)
[DEBUG] Sync: blacklist %@ because it needs a newer OS to sync up
[DEBUG] Sync: blacklist %@ and all dependents because %llu nsecs to retry
[DEBUG] marking needs-upgrade %@ and its descendants
[WARNING] item with shareID %@ is moving into a shared parent %@%s
[DEBUG] Just learning share property changes from %@
[DEBUG] We need to unshare %@
[CRIT] UNREACHABLE: Unexpected item %@. Ignoring
[DEBUG] Sync: blacklist %@ for item share-within-share processing
[DEBUG] Sync: blacklist %@ because it is moving into a share and has shared children
[WARNING] Unsharing turd folder share %@ because it now has shared children
[DEBUG] Sync: blacklist %@ because it needs pcs chaining
[WARNING] Parent item needs to be revived to sync up %@
[DEBUG] Not waiting for deletes because of a default
[WARNING] Sync: blacklist %@ until the delete of its child
[DEBUG] Sync: blacklist %@ because it's an unresolved path-match with %@
[DEBUG] Sync: blacklist %@ because we have a lost item at the same path in the server truth - %@
[WARNING] blacklist %@ because parent is a directory fault in the server truth
[WARNING] max depth %u reached at %@
[DEBUG] Sync: blacklist %@ because it's lost
[DEBUG] Sync: blacklist %@ because it's already being processed for CZM
[CRIT] UNREACHABLE: reset needed for %@ because of orphan %@
[CRIT] Assertion failed: n
[DEBUG] Embargoing item %@: it has %@ unsynced children
[DEBUG] Item %@ is embargoed: %@ unsynced children
[DEBUG] Item %@ is un-embargoed
[DEBUG] Embargoed item %@ has now %@ unreturned dead children left
[DEBUG] item %@ isn't embargoed
[DEBUG] blacklist all deletes for item which is being copied to a new zone %@
[DEBUG] Highest parent dead fault is nil because it's a shared-to-me top level item - %@
[DEBUG] Highest parent dead fault is %@
[DEBUG] blacklist all children deletes when leaving top level folder share %@
[CRIT] Assertion failed: item.isDead
[DEBUG] blacklisting %@ and its descendants
[DEBUG] Fetching recursive contents of %@ because it is the highest dead parent dir-fault
[DEBUG] Sync: enumerating documents needing sync up
[DEBUG] Sync: enumerating live or new directories
[DEBUG] Sync: enumerating tombstones
[CRIT] UNREACHABLE: itemID %@ has no share name
[WARNING] No share options set on an item which is clearly shared
[ERROR] Couldn't find root share for %@
[WARNING] No collaboration identifier can be computed yet for %@
[DEBUG] preparing to sync up %@
sync-up/container-metadata
[DEBUG] no records to save
[DEBUG] preparing to send %lu records
[DEBUG] completed sync up for %lu records: %@
[NOTICE] saved %lu containers metadata in the cloud
[DEBUG] adding sub-operation to save the records: %@
[DEBUG] 
%llx Sync: syncing up container metadata
AppTelemetryQBSInvestigation
NSCopying
OfflineInitialization
BRCBookmarkAdditions
FPFSAdditions
BRFieldCKInfo
BRCSideCarInfo
BRCVolume
BRCTimerScheduler
BRCLifeCycle
NSObject
BRCSideCarSyncDownOperation
BRCOperationSubclass
AppTelemetryCiconiaBouncesInvestigation
BRCDownloadTrackers
BRCPQLConnection
BRC_LOGGING_ADDITIONS
_BRCOperation
_BRCFrameworkOperation
BRCancellable
BRCSharedDatabaseSyncOperation
BRCNotificationAdditions
BRCNotification
BRFieldFinderTags
BRCAdditions
BRCProgress
BRCSharedToMeTopLevel
BRCDaemonContainerHelper
BRContainerHelper
BRCDatabaseNeedsReset
BRCDatabaseFromTheFutureException
BRCDatabaseManager
BRCFetchRecentAndFavoriteDocumentsOperation
BRCAccountOnlinePerformer
BRCReachabilityDelegate
BRCAccountMigrator
BRCAccountMigrationChecker
BRCAccountHandler
MCProfileConnectionObserver
BRCAutoCancelOperation
BRCListDirectoryContentsOperation
BRCRecursiveListDirectoryContentsOperation
BRCListOperationDelegate
BRCFinderBookmarkItem
BRCAnalyticsReporter
BRCEventMetric
BRCFSEventToSyncUpEvent
BRCUserDownloadEvent
BRCMetricEndpoint
BRCCKMetricEndpoint
BRCTransferFailureReport
BRCSyncHealthReport
BRCItemCountMismatchReport
BRCSyncConsistencyReport
BRDiskCheckerServiceProtocol
BRCExtensionErrorPayload
BRCZoneHealthCheckOperation
BRCStatInfo
BRCVersion
NSSecureCoding
NSCoding
BRCSignatureAdditions
BRFieldPkgItem
BRCFSEventsPersistedState
BRCNotificationManager
BRCModule
BRCAcceptShareOperation
BRCFetchiWorkSharingInfoOperation
BRCRelativePath
BRCAutoBugCaptureReporter
AppTelemetryQBSPerformance
BRCMinHeap
NSFastEnumeration
BRCChecksummingOutputStream
BRCSideCarSyncUpOperation
BRCAccountWaitOperation
AppTelemetryInvestigation
AppTelemetryDriveTelemetryExtension
BRCReachabilityObserver
BRCThrottle
BRCFSSchedulerBase
BRCDataOrDocsScopeGatherer
BRCNotificationPipe
IPCs
BRItemNotificationSending
BRCUserNotification
BRCUserNotifier
BRCBookmark
BRCShareAcceptWaiterInfo
BRCDaemonFPFS
NSXPCListenerDelegate
BRCProtocolBufferAdditions
PQLValuable
PQLBindable
BRCSharingCopyShareOperation
BRCApplyJobIdentifier
BRCApplyScheduler
BRCSuspendable
BRCSyncThrottle
BRCDatabaseBackupManager
BRCALRowID
BRCAppLibrary
BRCForegroundClient
BRCRetryCounter
BRCThrottleBase
BRCImportObject
BRCPackageAdditions
BRCDownloadJobIdentifier
BRCJobIdentifying
BRCJobsMatching
BRCFSDownloaderBatchEnumerator
BRCFSDownloader
BRCDumpContext
BRCShareAcceptationDocumentFault
BRCShareAcceptationFault
BRCShareAcceptationDirectoryFault
BRCZoneReset
BRCZoneMigration
BRCLocalStatInfo
BRCLocalItem
BRCSyncThrottleItemProtocol
BRCItem
BRCStageAdditions
BRCUbiquitousAttributes
BRCContainerScheduler
APSConnectionDelegate
BRCClientZoneDelegate
BRCAppLibraryDelegate
BRAdditions
BRFieldVersionSignature
BRItemAdditions
BRCSharingCopyAccessTokenOperation
BRCLocalVersion
BRCDocumentItem
BRCTopLevelShareable
BRCFileCoordinatorContext
BRCFileCoordinator
BRCContainerMetadataSyncDownAdditions
BRCContainerMetadataSyncDownOperation
BRCUpload
BRCTransfer
BRCUploadBatchOperation
BRCFailedListSaveObject
BRCServerZone
BRCZone
BRCDatabaseBackupStorage
BRCPathAdditions
CKConversions
BRCItemAdditions
BRCSerializationAdditions
BRCContainerMetadataAdditions
CKRecordZoneID
BRCWorkAround
BRCSharingAdditions
BRCServerChangesApplyUtil_Private
BRCServerChangesApplyUtil
BRCSyncUpOperation
PathResolution
BRCSyncOperationThrottle
BRCSyncBudgetThrottle
BRCSyncOperationBackoffRatio
BRiWorkSharingInfo
DatabaseMigrationHelpers
BRCItemID_v9
BRCFSImporter
BRCClientZone
BRCPersistedState
BRFieldXattr
BRCCryptographicAdditions
BRCLazyPackage
AppTelemetryTelemetryMessage
BRCPrivateClientZone
_BRCTransferInfo
_BRCUploadInfo
_BRCDownloadInfo
BRCGlobalProgress
BRCFetchParentChainOperation
BRCSyncUpOperationBuilder
BRCClientRanksPersistedState
BRCServerStatInfo
BRCServerItem
BRCPathToItemLookup
BRCDaemonSyncedRootURLCache
BRSyncedRootURLCache
BRCItemID
BRCReimporterUtil
DatabaseMethods
PQLResultSetInitializer
BRCAddition
BRCPackageManifestReader
BRCPackageManifestWriter
BRCPackageChecksummer
SchedulingAdditions
BRCItemTransmogrifier
BRCContainerFindByName
BRCDatabaseRestoreManager
ChildPropagation
BRCMigrationQueryOperation
Daemon
BRCSharingFetchUserRecordIDOperation
BRCFileProvidingRequestOperation
BRCDownloadTracking
BRCTransferStream
AppTelemetryCiconiaInvestigation
BRFieldXattrBlob
BRCSymlinkItem
BRCCreateZoneAndSubscribeOperation
BRCZonePurgeOperation
BRCLocateRecordOperation
BRCStagePersistedState
BRCStageRegistry
BRCLowDiskDelegate
BRCVersionsFileProvider
BRCRecentsChangeToken
BRCRecentsEnumeratorBatch
BRCRecentsEnumerator
BRCDownload
Downloads
BRCDownloadThumbnail
BRCDownloadThumbnailsBatchOperation
BRCDownloadContent
BRCDownloadContentsBatchOperation
BRCDownloadVersion
BRCDownloadVersionsBatchOperation
BRCZoneRootItem
BRCFSRooted
BRCThrottler
BRCAliasItem
BRCPrivateServerZone
BRCSharedServerZone
BRCDatabaseBackupRecord
BRCProgressMultiplex
BRFPAdditions
BRCSharingCopyWebAuthTokenOperation
BRCSyncUpScheduler
BRCFSUploader
BRCHalfChainInfo
BRCPCSChainAdditions
BRCPCSChainInfo
BRCPCSChainBatchInfo
BRCPCSChainBreadthEnumerator
BRCPCSChainEnumerator
BRCPCSChainingOperation
BRCFPFSAdditions
BRCAccountsManager
BRCAccountHandlerDelegate
BRFieldPkgLocalItem
BRCServerChangesApplier
BRCItemGlobalID
BRCCrossZoneMoveExtension
BRCMigrateZonePCSOperation
BRCAccountSession
BRCCloudDocsAppsObserver
BRBundleServiceProtocol
BRCSharingAcceptFlowOperation
LSOpenResourceOperationDelegate
BRCTransferBatchOperation
BRCDumper
BRCProblem
BRCProblemReport
BRCServerZoneHealthState
BRCQuarantine
BRCLazyXattrsCollection
BRCFileUnlinker
BRFieldStructureSignature
BRCTreeEnumerator
BRCUploadAllFilesTrackerOperation
BRCAllItemsDidUploadTracker
BRCShareURL
brc_task_tracker
BRCUncancellableBlockOperation
BRCFetchSubResourceRecord
BRValueableAdditions
BRCPendingChangesStream
BRFieldUserIdentity
BRCSharingModifyShareOperation
BRCSharingSaveShareOperation
BRCSharingDestroyShareOperation
BRCSharingLookupParticipantsOperation
BRCSharingModifyAccessOperation
BRCSharingCopyParticipantTokenOperation
BRCSharingPCSChainFolderOperation
BRCSharingCopyShareURLOperation
BRCSharingCopyShortTokenOperation
BRCShareDeleteInfo
BRCSharingProcessFolderSubitemsOperation
AppTelemetryTimeSeriesEvent
BRCSharedServerItem
BRCFairScheduler
BRCFairSource
BRCiWorkPublishingOperation
BRCAggregateOperation
BRCContainerMetadataSyncPersistedState
BRCZoneHealthSyncPersistedState
BRCSideCarSyncPersistedState
BRCCountedSet
BRCDirectoryBreadthEnumerator
BRCDirectoryEnumerator
BRCAsyncDirectoryEnumerator
BRCXPCClient
BRCProcessMonitorDelegate
BRCNotificationPipeDelegate
BRCXPCTokenClient
BRTokenProtocol
BRFileCoordinationProvider
BRCXPCRegularIPCsClient
BRProtocolShared
CKXPCShareDaemon
BRShareOperationProtocol
BRCPeriodicSyncOperation
BRCDesiredVersion
BRCZoneHealthReportOperation
BRCPackageItem
BRCZoneRowID
BRCDeadlineSource
BRCDeadlineScheduler
BRCSyncContext
BRCFetchQuotaOperation
BRCDirectoryItem
BRCSyncOperationThrottleParams
BRCUserDefaultsManager
NSURLSessionDownloadDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
BRCUserDefaults
BRCContainerCellularSettings
BRCSyncDownOperation
BRCErrorGrouping
BRFieldPkgHeader
BRCTermDumper
BRCCloudDocsAppsMonitor
BRCAppListMonitorDelegate
BRCGenerationID
ItemFetching
BRCFSTransferScheduler
BRCFetchRecordSubResourcesOperation
BRCFileProvider
NSFileProvider
BRCDiskSpaceReclaimer
BRCSharedClientZone
BRCClientState
BRCSystemResourcesManager
BRReachabilityObserver
BRCCoreAnalyticsReporter
BRCServerChangeState
BRCServerPersistedState
BRCClientPrivilegesDescriptor
BRFieldContentSignature
BRCSyncUpEnumerator
BRCPkgItemAdditions
BRCShareIDAdditions
BRCContainerMetadataSyncUpAdditions
BRCContainerMetadataSyncUpOperation
BRCItemDBRowIDJobIdentifier
BRCIntAndZoneJobIdentifier
BRCItemDBRowIDAndZoneJobIdentifier
brc_issueSandboxExtensionOfClass:error:
br_pathExtension
documentsURL
decodeIntForKey:
query
fetchFullNameAndFormattedUsernameOfAccountWithCompletionHandler:
setCallbackQueue:
br_pathOfPackageRoot
decodeIntegerForKey:
isRereferencedAssetUpload
initWithXPCObject:
domain
shutdown
decodeObjectOfClass:forKey:
parent
br_pathRelativeToDirectory:
fetchFullNameAndPrimaryEmailOnAccountWithCompletionHandler:
setCancellable:
initWithDeviceID:fileID:generationID:
setCaptureResponseHTTPHeaders:
decodeObjectOfClasses:forKey:
br_pathRelativeToPackageRoot
setSourceApplicationBundleIdentifier:
compare:
archivedDataWithRootObject:requiringSecureCoding:error:
br_pathRelativeToPath:
sideCarMangledID
doubleAtIndex:
initWithDocID:
array
compare:options:
setMarkZonesAsUserPurged:
setChildCount:
queuePriority
longAtIndex:
setSourceApplicationSecondaryIdentifier:
br_pathWithDeviceID:fileID:
initWithDocIDNumber:
updateWithBytes:length:
br_pathWithFileSystemRepresentation:
defaultCenter
isRootContainerItem
arrayByAddingObject:
longLongAtIndex:
initWithZoneID:
setChildRecordIDsByShareID:
reverseObjectEnumerator
arrayByAddingObjectsFromArray:
br_personaGroupDir
longLongValue
initWithZoneID:subscriptionID:
doubleValue
initWithZoneName:ownerName:
arrayWithCapacity:
setMaxConcurrentOperationCount:
accountID
br_personaID
longValue
defaultExcludedExtensionsWorthPreserving
completionBlock
role
br_personaIdentifier
accountOverrideInfo
arrayWithContentsOfFile:
defaultExcludedFilenamesWorthPreserving
arrayWithObject:
br_preCacheBookmarkData:versionEtag:
components:fromDate:toDate:options:
accountStatusWithCompletionHandler:
BouncingCountFromDocToAls
componentsJoinedByString:
arrayWithObjects:
quotaUsed
initWithDocumentAtURL:
defaultExcludedFilenamesWorthWarningAtLogout
defaultManager
setClassOfNextMessage:
raise:format:
componentsSeparatedByString:
arrayWithObjects:count:
sideFaultsBelowThreshold
setClasses:forSelector:argumentIndex:ofReply:
inputStreamWithFileAtPath:
initWithDomain:code:userInfo:
rootDatabasePath
brc_representableHFSFileNameWithSuffix:addedExtension:makeDotFile:
accountWithIdentifier:
inputStreamWithURL:
componentsWithURL:resolvingAgainstBaseURL:
signalEnumeratorForContainerItemIdentifier:completionHandler:
setClientChangeTokenData:
initWithEnvironmentName:namedDelegatePort:queue:
insertObject:atIndex:
rangeOfFirstMatchInString:options:range:
setModifyRecordZonesCompletionBlock:
defaultStore
setModifyRecordsCompletionBlock:
rangeOfString:
asFileProviderItem
setModifySubscriptionsCompletionBlock:
lowercaseString
rangeOfUnit:inUnit:forDate:
parentItemIdentifier
br_realpath
hasChainPCS
initWithEventName:atTime:
intAtIndex:
br_representableDirectoryName
setMutableEncryptedPublicSharingKeyData:
defaultWorkspace
signatureWithFileDescriptor:error:
initWithExistingRecordID:databaseScope:fieldName:fileSignature:
fetchRootItemForProviderDomain:completionHandler:
setCompletionBlock:
br_representableHFSFileNameWithBase:suffix:extension:makeDotFile:
rootRecordID
setStatementCacheMaxCount:
br_representableHFSFileNameWithNumber:addedExtension:makeDotFile:
intValue
routingKey
downloadTaskWithURL:
br_roundedLongLongValue
hasDaemonicParts
mainBundle
rowNumber
integerAtIndex:
br_setCloudDocsMigrated:
setConfiguration:
rawID
integerValue
mainQueue
br_setCloudDocsMigrationComplete:
rawInjection:length:
initWithFileID:
_processIdentifierForID:
brc_stringByDeletingPathExtension
configuration
isSqliteErrorCode:
configurationInfoWithIdentifiers:forAltDSID:completion:
interfaceWithProtocol:
sortUsingComparator:
fetchUserRecordIDWithCompletionHandler:
setContainer:
asString
downloadURL
isSubsetOfSet:
participantPermission
makeNextFlushFullSync
initWithFileURL:
sortedArrayUsingComparator:
downloadURLExpiration
participantRole
intersectSet:
br_sideFaultName
initWithFormat:
participantStatus
intersectsSet:
synchronize
participants
br_stringByBackslashEscapingCharactersInString:
synchronousRemoteObjectProxyWithErrorHandler:
initWithFormat:arguments:
conformsToType:
BouncingCountFromDocToLnk
setCookieStorage:
br_stringByDeletingPathBounceNo:
fileCreationDate
initWithIdentifier:displayName:
fileDescriptor
pathComponents
setCountLimit:
br_stringByDeletingPathBounceNo:andPathExtension:
receiveProgressUpdates:reply:
BouncingCountFromDocToPkg
deleteAllSearchableItemsWithCompletionHandler:
invalidateAccountForPersonaCache
fileExistsAtPath:
setCrashIfUsedAfterClose:
deleteCharactersInRange:
sqliteRepresentation
setNotificationInfo:
mangledIDString
receiveUpdates:logicalExtensions:physicalExtensions:reply:
_initWithProviderIdentifier:
BouncingCountFromLnkToAls
fileExistsAtPath:isDirectory:
hasIconWithName:
setNumberStyle:
bundleForClass:
_initWithProviderIdentifier:domain:
br_supportDirForPersona:dataSeparated:
BouncingCountFromLnkToDir
initWithIndex:
container
setSynchronousMode:
manuallyTriggered
tagData
BouncingCountFromLnkToDoc
setObject:atIndexedSubscript:
associateThumbnailImagesDictionary:serializedQuickLookMetadata:withDocumentAtURL:error:
BouncingCountFromLnkToPkg
bundleIdentifier
uploadReceiptExpiration
isValidSignature:
associateThumbnailImagesDictionary:serializedQuickLookMetadata:withImmutableDocument:atURL:error:
BouncingCountFromPkgToAls
bundleIdentifiers
fileObjectIDWithString:
containerForMangledID:
setDateFormat:
BouncingCountFromPkgToDir
pathWithComponents:
deleteSearchableItemsWithDomainIdentifiers:completionHandler:
setDateStyle:
bundleInfoValueForKey:PID:
containerID
BouncingCountFromPkgToDoc
_publish
bundleProxyForIdentifier:
filePosixPermissions
BouncingCountFromPkgToLnk
addDomain:completionHandler:
containerItemForContainer:withRepresentativeItem:
isAppLibraryRoot
bundleURL
fileProviderErrorForNonExistentItemWithIdentifier:
addDomain:forProviderIdentifier:completionHandler:
BouncingCountOnSameType
setTimeStyle:
fileSystemFlags
CKAssignToContainerWithID:
recordChangeTag
fileSystemRepresentation
saveVerifiedAccount:withCompletionHandler:
setTimeZone:
CKClientSuitableError
bytes
setDesiredKeys:
BouncingCountFromDirToLnk
cStringUsingEncoding:
JSONObjectWithData:options:error:
isBatchSuspended
containerMetadataMangledID
setDesiredPackageFileIndices:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
fileURLWithPath:
uppercaseString
itemAtIndex:
isBidirectionalDataTransferAllowedWithBundleID:
URLByAppendingPathComponent:
fileURLWithPath:isDirectory:
initWithLength:
attributesOfFileSystemForPath:error:
URLByAppendingPathComponent:isDirectory:
fileURLWithPathComponents:
standardUserDefaults
setDiscretionary:
setTraced:
dependencies
setDiscretionaryNetworkBehavior:
URLByDeletingLastPathComponent
startAccessingSecurityScopedResource
recordName
attributesOfItemAtPath:error:
useBatchingOnTargetQueue:withPolicyHandler:
setTrackChanges:
hasPrefix:
dequeue:block:
initWithMachServiceName:
URLWithString:
earliestUploadReceiptExpiration
next
useBatchingWithDelay:changeCount:
containerURLForSecurityApplicationGroupIdentifier:
setDisplayedHostname:
recordZoneChangesStatusByZoneID
containerWithIdentifier:
UUID
containersRepositoryURL
setPackageIndex:
UUIDString
BouncingCountFromAlsToDir
nextMessage
canMostRecentClientsGenerateThumbnailsForUTI:
addIndex:
startOfDayForDate:
useSerialQueue
useSerialQueueWithTarget:
autoRollbackHandler
initWithMangledString:
isCloudDocsMangledID
containsIndex:
isCloudDocsRoot
__coordinateReadingItemAtURL:options:purposeID:byAccessor:
autovacuumableSpaceInBytes
__coordinateWritingItemAtURL:options:purposeID:byAccessor:
setEnabledTopics:ignoredTopics:opportunisticTopics:
userIdentity
isCloudSyncAllowed:
__coordinateWritingItemAtURL:options:writingItemAtURL:options:purposeID:byAccessor:
encodeBool:forKey:
setURLCache:
initWithName:protectionClass:
isCloudSyncTCCDisabled
setURLCredentialStorage:
setParent:
containsString:
encodeBytes:length:forKey:
setURLOptions:
encodeDouble:forKey:
isCurrentUser
userInfo
hasSuffix:
encodeInt32:forKey:
setUnderlyingQueue:
contentModificationDate
firstIndex
encodeInt64:forKey:
backgroundSessionConfigurationWithIdentifier:
recursiveChildCount
cancelAllOperations
isDataSeparatedAccount
__itemAtURL:didChangeWithPurposeID:
encodeInt:forKey:
itemCountWithError:
encodeInteger:forKey:
userPersonaUniqueString
isDataSeparatedPersona
backupToURL:progress:
contentType
addObjectsFromArray:
initWithObjects:
encodeObject:forKey:
base64EncodedStringWithOptions:
userRecordID
__itemAtURL:didDisconnectWithPurposeID:
thumbnailImagesDictionary
contentVersion
encodedData
userVersion
initWithOutputStream:
setPerRecordChangeCompletionBlock:
__itemAtURL:didMoveToURL:purposeID:
setPerRecordCompletionBlock:
stopAccessingSecurityScopedResource
addObserver:forKeyPath:options:context:
__itemAtURL:didReconnectWithPurposeID:
addObserver:selector:name:object:
nonSideFaultsCompletelyMigrated
setPerRecordProgressBlock:
floatValue
contentsOfDirectoryAtPath:error:
BouncingCountFromDirToDoc
registerFunction:nArgs:handler:
setPerShareCompletionBlock:
setUserInfo:
flush
setExportedInterface:
addObserverForName:object:queue:usingBlock:
isDesktopMangledID
timeIntervalSince1970
setUserVersion:
encryptedPublicSharingKey
uuidAtIndex:
setExportedObject:
baseToken
timeIntervalSinceDate:
encryptedValuesByKey
setPluginFields:
validateContainerID:
timeIntervalSinceNow
copy
setFamilyName:
streamError
setPostFlushHook:
setValue:forKey:
timeIntervalSinceReferenceDate
setPreFlushHook:
itemIdentifier
initWithPattern:options:error:
copyCurrentPersonaContextWithError:
folderID
setFetchAllChanges:
timeZoneForSecondsFromGMT:
validateMangledIDString:
setWantsChainPCS:
materialisedCountOnFPFS
copyDataRepresentation
string
setFetchAllResults:
reimportItemsBelowItemWithIdentifier:completionHandler:
addOperationWithBlock:
materialisedCountOnICD
stringAtIndex:
setFetchDatabaseChangesCompletionBlock:
initWithPreviousServerChangeToken:
copyItemAtURL:toURL:error:
setFetchRecordZoneChangesCompletionBlock:
performRequestWithHandler:
setWantsPublicSharingKey:
stringByAppendingFormat:
isDocumentID
topic
_removeFileProvider:
destroyClientPackageWithDatabaseBasePath:UUID:
stringByAppendingPathComponent:
setPreviousServerChangeToken:
setFetchRecordZonesCompletionBlock:
valueForEntitlement:
entitlements
isDocumentScopePublicWithProperties:mangledID:
valueForKey:
setFetchRecordsCompletionBlock:
stringByAppendingPathExtension:
initWithQuery:
_addFileProvider:
performTransactionBlock:
capitalizedString
stringByAppendingString:
performWithFlags:action:
valueForKeyPath:
setFetchShareParticipantsCompletionBlock:
forceBatchStart
serialQueue
stringByDeletingLastPathComponent
performWithFlags:action:whenFlushed:
valueWithPointer:
setFetchUserQuotaCompletionBlock:
host
_removeSubscriber:
setFetchWebAuthTokenCompletionBlock:
setWebShareRecordsCompletionBlock:
brc_errorAcceptAlreadyInProgressForURL:
stringByRemovingPercentEncoding
values
setWithArray:
bookmarkDataWithContentsOfURL:error:
enumerateBundlesOfType:block:
brc_errorAccountMismatch
isDocumentsMangledID
stringByReplacingOccurrencesOfString:withString:
remoteObjectProxy
setWithCapacity:
permanentStorageForItemAtURL:allocateIfNone:error:
iWorkShareableExtensions
brc_errorAppLibraryNotFound:
setPublicPermission:
setFileNamesByAssetFieldNames:
remoteObjectProxyWithErrorHandler:
initWithRecordID:action:
setWithObject:
permission
brc_errorClientZoneNotFound:
createAdditionStagedAtURL:creationInfo:completionHandler:
setPublicSharingIdentity:
removeAdditionsOnURL:error:
setWithObjects:
iconURLs
brc_errorCollisionWithItem:
removeAllAdditionsForNamespaces:completionHandler:
personaAttributesForPersonaType:
versionNumberForBundleIdentifier:
isEnabledForDataclass:
setPublishAssetCompletionBlock:
setWithSet:
BouncingCountFromDirToAls
brc_errorCompatibilityIssue
initWithRecordIDs:
bookmarkDataWithOptions:includingResourceValuesForKeys:relativeToURL:error:
BouncingCountFromAlsToDoc
isEnterprisePersona
brc_errorCorruptedDB
initWithRecordIDsToGrantAccess:recordIDsToRevokeAccess:
setQualityOfService:
enumerateIndexesUsingBlock:
boolAtIndex:
brc_errorDaemonShouldBeLoggedOut
initWithRecordIDsToWebShare:recordIDsToUnshare:
brc_errorDocumentEvicted
initWithRecordName:zoneID:
stringFromDate:
brc_errorDocumentIsNoLongerSharedAtURL:
enumerateKeysAndObjectsUsingBlock:
importDuration
initWithRecordType:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
dictionaryForKey:
removeDB
isEqualToData:
_unpublish
setQuery:
brc_errorDocumentIsNotShared
enumerateObjects:
setQueryCompletionBlock:
initWithRecordType:predicate:
member:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
dictionaryWithCapacity:
serializedQuickLookMetadataDictionary
brc_errorDocumentIsNotSharedAtURL:
removeDependency:
initWithRecordType:recordID:
setQueryCursorFetchedBlock:
itemsThatAreNotMigrated
enumerateObjectsOfClass:
setZoneID:
null
initWithRecordZoneID:
dictionaryWithContentsOfFile:
brc_errorDocumentWithFilename:size:isTooLargeToUpload:
charAtIndex:
isEqualToFileObjectID:
numberAtIndex:
removeDomain:completionHandler:
enumerateObjectsUsingBlock:
createFileAtPath:contents:attributes:
pluginFields
characterAtIndex:
brc_errorDriveDisabledOrAppLibraryDisabled
bouncedItems
numberFromString:
dictionaryWithContentsOfURL:
initWithRecordZoneIDs:
waitUntilAllOperationsAreFinished
initWithRecordZoneIDs:configurationsByRecordZoneID:
brc_errorFolderHasSharedSubitemsWithSharedByMeURLs:sharedToMeURLs:
dictionaryWithDictionary:
br_accountForCurrentPersona
waitUntilFinished
dictionaryWithObjects:forKeys:count:
pointerValue
setQueuePriority:
initWithRecordZoneIDs:optionsByRecordZoneID:
brc_errorFolderHierarchyTooDeep
numberWithBool:
additionWithName:inNameSpace:error:
br_accountForPersona:
initWithRecordZonesToSave:recordZoneIDsToDelete:
brc_errorForRejectedDeletionOfItem:
removeIndex:
br_addPhysicalProperty
brc_errorInvalidParameter:value:
additionalRequestHTTPHeaders
initWithRecordsToSave:recordIDsToDelete:
numberWithChar:
metadataVersion
setupPragmas
setFragment:
setQuotaUsed:
numberWithDouble:
removeIndexes:
BouncingCountFromDocToDir
brc_errorItemAlreadyPartOfAShare
isEqualToMangledID:
removeItemAtPath:error:
numberWithFloat:
stringValue
didChangeValueForKey:
methodForSelector:
br_allEligibleAppleAccounts
keyEnumerator
brc_errorItemAlreadyPausedFromSyncByBundleID:
removeItemAtURL:error:
numberWithInt:
isEqualToNumber:
br_appleAccountWithPersonID:
share
incrementalVacuum:
brc_errorItemChanged
removeLastObject
stringWithCString:encoding:
numberWithInteger:
stringWithCapacity:
setGivenName:
brc_errorItemInTrash
numberWithLong:
isEqualToString:
formatInjection:
BouncingCountFromDirToPkg
postContainerListUpdateNotification
stringWithContentsOfFile:encoding:error:
brc_errorItemIneligibleFromSyncForInode:
checkResourceIsReachableAndReturnError:
indexOfObject:
numberWithLongLong:
stringWithContentsOfURL:encoding:error:
postContainerStatusChangeNotificationWithID:key:value:
turnObjectIntoZombie:
fp_isFileProviderError:
brc_errorItemNotFound:
br_corruptedDBInfoPath
setHTTPCookieStorage:
fp_obfuscatedFilename
br_currentHomeDir
stringWithFormat:
postNotificationName:object:
brc_errorItemNotPausedFromSync
setRecordAccessCompletionBlock:
removeObjectAtIndex:
numberWithUnsignedInt:
setHandler:
setRecordAccessGrantedBlock:
fp_obfuscatedPath
typeOfMigrated
postNotificationName:object:userInfo:
setRecordChangedBlock:
removeObjectForKey:
creationDate
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
brc_errorItemNotShareable
childCount
numberWithUnsignedInteger:
stringWithUTF8String:
typeOfNotMigrated
aliasTargetContainerString
setRecordFetchedBlock:
enumeratorForAdditionsInNameSpace:withOptions:withoutOptions:ordering:
brc_errorLoggedOut
br_currentPersonaID
fractionCompleted
ingestFromCacheItemWithIdentifier:requestedFields:completionHandler:
removeObjectsForKeys:
creatorUserRecordID
brc_errorMethodNotImplemented:
initWithRootRecord:shareID:
numberWithUnsignedLong:
removeObjectsInArray:
initWithRowID:type:
numberWithUnsignedLongLong:
br_currentPersonaIDWithIsDataSeparated:
strongToStrongObjectsMapTable
fragment
removeObjectsInRange:
brc_errorNoAppLibraryForBundle:
weakObjectsHashTable
powerLevelChanged:
errorOriginatorId
br_currentSupportDir
predicateWithFormat:
brc_errorNoDocument:underlyingPOSIXError:
numberWithUnsignedShort:
unarchivedObjectOfClass:atIndex:
currentCalendar
weakToStrongObjectsMapTable
errorWithCode:format:
currentDevice
object
sharedAliasRecursiveCount
errorWithDomain:code:userInfo:
brc_errorNoSuitableClientApp
unarchivedObjectOfClass:fromData:error:
br_decodeIndexStringToIndexSet
setRecordIDsToDelete:
br_displayFilenameWithExtensionHidden:
removeObserver:forKeyPath:
object:
brc_errorNotInCloud:
isFileURL
weakToWeakObjectsMapTable
allKeys
unarchivedObjectOfClasses:atIndex:
prepareAdditionCreationWithItemAtURL:byMoving:creationInfo:error:
removeObserver:name:object:
errorWithSqliteCode:andMessage:
currentLocale
currentOperationDuration
willChangeValueForKey:
objectAtIndex:
_br_markResolvedWithError:
brc_errorNotOnDisk:
removeParticipant:
objectAtIndexedSubscript:
currentPersona
unarchivedObjectOfClasses:fromData:error:
setRecordIDsToShareReadWrite:
brc_errorNotSupportedInFPFS
allLoggedInAccountDescriptors
sharedByMeRecursiveCount
setRecordIDsToVersionETags:
objectEnumerator
didReceiveMemoryWarning
classOfNextMessage
brc_errorOperationCancelled
allObjects
BouncingCountFromAlsToPkg
evaluateWithObject:
br_downloadStatus
currentRequest
lastInsertedRowID
setRecordMatchedBlock:
sharedCloudDatabase
sharedConnection
isFolderOrAliasID
brc_errorPathOutsideAnyCloudDocsAppLibraryAtURL:
serverPreferredPushEnvironmentWithError:
underlyingQueue
initFileURLWithPath:isDirectory:
currentServerChangeToken
brc_errorPermissionError:
wrapperWithURL:readonly:error:
setRecordSharedBlock:
brc_errorSyncBlocked
lastModifiedUserRecordID
allValues
unionSet:
initWithServiceName:
minusSet:
objectOfClass:atIndex:
currentUserParticipant
lastObject
setRecordUnsharedBlock:
allocWithZone:
setRecordWithIDWasDeletedBlock:
brc_errorUnknownKey:
mobileDocumentsURL
br_dsid
writeBookmarkData:toURL:options:error:
lastPathComponent
sharedDatabaseMangledID
setRecordZoneChangeTokensUpdatedBlock:
writeData:forTag:
br_emptyFilenameAlternativeName
setInterruptionHandler:
initForReadingFromData:error:
setRecordZoneFetchCompletionBlock:
gcPackagesInDirectory:dbInUseBlock:
subarrayWithRange:
br_errorFromErrno
setInvalidationHandler:
sharedItemHierarchyIDs
modificationDate
setRecordZoneWithIDChangedBlock:
br_errorWithDomain:code:description:
writeMessage:
setRecordZoneWithIDWasDeletedBlock:
lastUsedDate
replaceOccurrencesOfString:withString:options:range:
brc_fileURLWithFileDescriptor:
generateAndRestorePersonaContextWithPersonaUniqueString:
modifiedByDevice
br_errorWithDomain:code:userInfo:description:
br_errorWithPOSIXCode:
data
setIsCloudSyncTCCDisabled:
substringFromIndex:
writeToFile:atomically:
initRequiringSecureCoding:
sharedReachabilityMonitor
dataAtIndex:
br_errorWithPOSIXCode:description:
writeToFile:atomically:encoding:error:
substringToIndex:
dataByFinishingSignature
substringWithRange:
writeToURL:atomically:
setRecursiveChildCount:
dataUsingEncoding:
writeToURL:atomically:encoding:error:
dataWithBytes:length:
writeToURL:options:error:
setRemoteObjectInterface:
diffs
setIsInCloudDocsZone:
setRemoteOperationProxy:userInfo:
dataWithCapacity:
shortToken
isInInitialState
br_fileSystemRepresentation
privateCloudDatabase
initWithShareIDs:
serviceListener
unsignedCharValue
setIsInInitialState:
shortValue
unsignedIntAtIndex:
setReplicated:
dataWithContentsOfFile:
dataWithContentsOfURL:
openApplicationWithBundleID:
setRequestCompletedBlock:
anonymousListener
br_firstName
writingIntentWithURL:options:
dataWithContentsOfURL:options:error:
anyObject
initWithShareMetadatas:
getBytes:length:
br_forceMoveItemAtURL:toURL:error:
isInTransaction
br_formattedName
setRequestedTTL:
getCString:maxLength:encoding:
length
dataWithPropertyList:format:options:error:
initWithAccount:
unsignedIntValue
moveItemAtURL:toURL:error:
br_formattedNameWithNonBreakingSpaces
clearURLCache
initWithAccountID:
setResourceValue:forKey:error:
unsignedIntegerAtIndex:
sessionWithConfiguration:delegate:delegateQueue:
isIndeterminate
initWithSourceZoneIDs:targetZone:
symlinkTargetPath
unsignedIntegerValue
setResourceValues:error:
initWithSqliteRepresentation:
openSensitiveURL:withOptions:
getDomainsWithCompletionHandler:
processDequeueCallbacks
setResultsLimit:
unsignedLongAtIndex:
isIndexingAvailable
mutableBytes
openSensitiveURL:withOptions:error:
date
getFileIDFromXattr:docID:genCount:
clientChangeToken
isInstalled
mutableCopy
unsignedLongLongAtIndex:
openURL:withOptions:
setAcceptSharesCompletionBlock:
processIdentifier
openWithError:
getNewWebSharingIdentityDataWithCompletionHandler:
mutableEncryptedPublicSharingKeyData
dateFormatFromTemplate:options:locale:
initWithStream:
dateFromString:
expectedAmountOfItemsMigrated
initWithAliasTargetContainerString:
br_getTagNames:error:
unsignedLongLongValue
setAccountOverrideInfo:
dateWithTimeIntervalSince1970:
br_isAbsolutePath
clientPackageDatabaseDirectory
initWithSubscriptionID:
dateWithTimeIntervalSinceNow:
setAdditionalRequestHTTPHeaders:
unsignedLongValue
br_isCloudDocsErrorCode:
setItemTypeHint:
initWithSubscriptionsToSave:subscriptionIDsToDelete:
br_isCloudDocsMigrated
setRoutingKey:
initWithAppLibraryName:
setAggregateZonePCSCompletionBlock:
setSavePolicy:
br_isCloudDocsMigrationComplete
isKnownToServer
operationQueue
initWithArray:
nameWithPrefix:suffix:
discretionaryNetworkBehavior
br_isCocoaErrorCode:
setScheme:
nameWithString:
appLibraryOrZoneName
setKind:
zoneHealthMangledID
initWithAssetReference:
br_isDocumentTooLargeForUpload:maxUploadDocumentSize:
operationToOpenResource:usingApplication:uniqueDocumentIdentifier:isContentManaged:sourceAuditToken:userInfo:options:delegate:
setLabel:
setAllowsCellularAccess:
br_isEnabledForCloudDocs
initWithBundleIDs:states:
initWithBytes:length:
propertiesForDataclass:
dbHandle
initWithBytes:length:encoding:
propertyListWithData:options:format:error:
br_isEnabledForDesktopSync
br_isEqualToStringForHFS:isCaseSensitive:
getResourceValue:forKey:error:
initWithBytesNoCopy:length:freeWhenDone:
protectionData
setArchiverInfo:error:
isNetworkReachableForFlags:
displayedHostname
orderedSet
distantFuture
aa_altDSID
cloningDuration
br_isExcludedButPreservedAtLogOutWithFilenames:extensions:
getUserVisibleURLForItemIdentifier:completionHandler:
providerDomainWithID:error:
br_isExcludedWithMaximumDepth:
appState
aa_primaryAppleAccount
distantPast
close:
publicPermission
setLastError:
br_isExternalDocumentReference
publicSharingIdentity
setShare:
aa_useCellularForDataclass:
appendBytes:length:
br_isInPackage
publicToken
BouncingCountFromAlsToLnk
appendFormat:
originalRequest
br_isInTrash
initWithCapacity:
appendString:
setAssetPublishedBlock:
absoluteString
setAtomic:
br_isManagedAppleID
setAttribute:forKey:
setShareParticipantFetchedBlock:
br_isPOSIXErrorCode:
localeWithLocaleIdentifier:
initWithURL:resolvingAgainstBaseURL:
setAutoRollbackHandler:
br_isPackageRoot
setShareParticipantKeyCompletionBlock:
acceptanceStatus
outputStreamWithURL:append:
resourceValuesForKeys:error:
setAutomaticallyRetryNetworkFailures:
isPaused
setShareParticipantKeyFetchedBlock:
applicationInfoForPID:completion:
br_isParentOfURL:
initWithUUIDBytes:
cloudDocsAppSupportURL
resourceValuesForKeys:fromBookmarkData:
br_isSideFaultName
setSharedAliasRecursiveCount:
setBaseToken:
applicationProxyForIdentifier:
updateInterestedBundleIDs:
documentSize
responseHTTPHeaders
localizedName
setSharedByMeRecursiveCount:
groupInBatch:
ownerIdentity
initWithContainerID:options:
applicationProxyForIdentifier:placeholder:
setLocale:
localizedStringForKey:value:table:
setBaseTokensByShareID:
br_lastName
initWithContainerIdentifier:environment:
groupInTransaction:
br_libnotifyPerUserNotificationName
isPrivate
localizedStringFromPersonNameComponents:style:options:
result
updateMetadataWithExtractorProperties:iconPaths:bundleID:
initWithCursor:
fetchAllChanges
setBoolResult:error:
setShouldFetchAssetContent:
updateMetadataWithRecordData:iconPaths:
decodeBoolForKey:
fetchAllRecordZonesOperation
cloudDocsMangledID
setLockedHandler:
setShouldFetchAssetContents:
decodeBytesForKey:returnedLength:
initWithUserIdentityLookupInfos:
decodeDoubleForKey:
fetchCurrentUserRecordOperation
initWithData:
br_mightBeBRAlias
setShouldOnlySaveAssetContent:
decodeInt32ForKey:
br_nameIsRepresentableOnHFS
packageWithError:
initWithData:encoding:
qualityOfService
setByAddingObjectsFromSet:
code
decodeInt64ForKey:
isReady
packageWithPackage:error:
setShouldReportAllPerItemFailures:
accountDescription
setShouldSendContentAvailable:
description
copyWithZone:
setServerTruthDirCount:
setHasServerTruthDirCount:
hasServerTruthDirCount
setServerTruthDirFaultCount:
setHasServerTruthDirFaultCount:
hasServerTruthDirFaultCount
setClientTruthDirFaultCount:
setHasClientTruthDirFaultCount:
hasClientTruthDirFaultCount
setTimeSinceLogin:
setHasTimeSinceLogin:
hasTimeSinceLogin
setServerTruthTotalItemsCount:
setHasServerTruthTotalItemsCount:
hasServerTruthTotalItemsCount
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
isEqual:
hash
mergeFrom:
serverTruthDirCount
serverTruthDirFaultCount
clientTruthDirFaultCount
timeSinceLogin
serverTruthTotalItemsCount
_clientTruthDirFaultCount
_serverTruthDirCount
_serverTruthDirFaultCount
_serverTruthTotalItemsCount
_timeSinceLogin
_has
TB,N
TQ,N,V_serverTruthDirCount
TQ,N,V_serverTruthDirFaultCount
TQ,N,V_clientTruthDirFaultCount
TQ,N,V_timeSinceLogin
TQ,N,V_serverTruthTotalItemsCount
addOfflineServerZone:
addOfflineClientZone:
addOfflineAppLibrary:
parseUnsaltedBookmarkDataWithItemID:mangledID:error:
parseBookmarkDataWithAccountSession:docID:itemID:mangledID:unsaltedBookmarkData:error:
bookmarkDataWithItemResolutionString:serverZoneMangledID:saltAccountDSID:
unsaltedBookmarkDataWithItemResolutionString:serverZoneMangledID:
bookmarkDataWithItemResolutionString:serverZone:
itemResolutionStringWithDocumentID:
itemResolutionStringWithRelativePath:
bookmarkDataWithDocumentID:serverZone:
bookmarkDataWithRelativePath:serverZone:
unsaltedBookmarkDataWithRelativePath:serverZoneMangledID:
bookmarkData
T@"NSString",R,N
documentsFolder
documentsFolderWithDB:
createDocumentsFolder
recreateDocumentsFolderIfNeededInDB
setKnownToServer:
setHasKnownToServer:
hasKnownToServer
setWasCached:
setHasWasCached:
hasWasCached
hasEtag
hasEtagBeforeCrossZoneMove
hasDeletionChangeToken
knownToServer
wasCached
etag
setEtag:
etagBeforeCrossZoneMove
setEtagBeforeCrossZoneMove:
deletionChangeToken
setDeletionChangeToken:
.cxx_destruct
_deletionChangeToken
_etag
_etagBeforeCrossZoneMove
_knownToServer
_wasCached
TB,N,V_knownToServer
TB,N,V_wasCached
TB,R,N
T@"NSString",&,N,V_etag
T@"NSString",&,N,V_etagBeforeCrossZoneMove
T@"NSData",&,N,V_deletionChangeToken
descriptionWithContext:
debugDescription
hasfieldsToSync
ckInfo
setCkInfo:
favoriteRank
setFavoriteRank:
lastUsedTime
setLastUsedTime:
finderTags
setFinderTags:
_ckInfo
_favoriteRank
_lastUsedTime
_finderTags
T@"BRFieldCKInfo",&,N,V_ckInfo
Tq,N,V_lastUsedTime
Tq,N,V_favoriteRank
T@"NSData",&,N,V_finderTags
_setUpForStatfs:
setUpForRelPath:session:error:
mountPath
fsTypeName
freeSize
totalSize
deviceID
isCaseSensitive
isIgnoringOwnership
hasRenameExcl
hasRenameSwap
hasCloning
_stfs
_isCaseSensitive
_isIgnoringOwnership
_hasRenameExcl
_hasRenameSwap
_hasCloning
_deviceID
Ti,R,N,V_deviceID
TB,R,N,V_isCaseSensitive
TB,R,N,V_isIgnoringOwnership
TB,R,N,V_hasRenameSwap
TB,R,N,V_hasRenameExcl
TB,R,N,V_hasCloning
T@"NSNumber",R,N
init
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
TQ,R
T#,R
T@"NSString",R,C
close
resume
cancel
isCancelled
initWithAccountSession:timerName:sqlTable:field:timerHandler:
reschedule
_session
_timer
_suspended
_name
_sqlTable
_field
_handler
_isCancelled
TB,R,N,V_isCancelled
initWithName:syncContext:
main
shouldRetryForError:
initWithSession:changeToken:
createActivity
_createZone
_saveChangedRecords:deletedRecords:serverChangeToken:clientChangeToken:
_createSyncDownOperation
_serverChangeToken
setFolderToPackageCount:
setHasFolderToPackageCount:
hasFolderToPackageCount
setFolderToFileCount:
setHasFolderToFileCount:
hasFolderToFileCount
setFolderToSymlinkCount:
setHasFolderToSymlinkCount:
hasFolderToSymlinkCount
setFolderToAliasCount:
setHasFolderToAliasCount:
hasFolderToAliasCount
setPackageToFolderCount:
setHasPackageToFolderCount:
hasPackageToFolderCount
setPackageToFileCount:
setHasPackageToFileCount:
hasPackageToFileCount
setPackageToSymlinkCount:
setHasPackageToSymlinkCount:
hasPackageToSymlinkCount
setPackageToAliasCount:
setHasPackageToAliasCount:
hasPackageToAliasCount
setFileToFolderCount:
setHasFileToFolderCount:
hasFileToFolderCount
setFileToPackageCount:
setHasFileToPackageCount:
hasFileToPackageCount
setFileToSymlinkCount:
setHasFileToSymlinkCount:
hasFileToSymlinkCount
setFileToAliasCount:
setHasFileToAliasCount:
hasFileToAliasCount
setSymlinkToFolderCount:
setHasSymlinkToFolderCount:
hasSymlinkToFolderCount
setSymlinkToPackageCount:
setHasSymlinkToPackageCount:
hasSymlinkToPackageCount
setSymlinkToFileCount:
setHasSymlinkToFileCount:
hasSymlinkToFileCount
setSymlinkToAliasCount:
setHasSymlinkToAliasCount:
hasSymlinkToAliasCount
setAliasToFolderCount:
setHasAliasToFolderCount:
hasAliasToFolderCount
setAliasToPackageCount:
setHasAliasToPackageCount:
hasAliasToPackageCount
setAliasToFileCount:
setHasAliasToFileCount:
hasAliasToFileCount
setAliasToSymlinkCount:
setHasAliasToSymlinkCount:
hasAliasToSymlinkCount
setNonConflictingKindCount:
setHasNonConflictingKindCount:
hasNonConflictingKindCount
folderToPackageCount
folderToFileCount
folderToSymlinkCount
folderToAliasCount
packageToFolderCount
packageToFileCount
packageToSymlinkCount
packageToAliasCount
fileToFolderCount
fileToPackageCount
fileToSymlinkCount
fileToAliasCount
symlinkToFolderCount
symlinkToPackageCount
symlinkToFileCount
symlinkToAliasCount
aliasToFolderCount
aliasToPackageCount
aliasToFileCount
aliasToSymlinkCount
nonConflictingKindCount
_aliasToFileCount
_aliasToFolderCount
_aliasToPackageCount
_aliasToSymlinkCount
_fileToAliasCount
_fileToFolderCount
_fileToPackageCount
_fileToSymlinkCount
_folderToAliasCount
_folderToFileCount
_folderToPackageCount
_folderToSymlinkCount
_nonConflictingKindCount
_packageToAliasCount
_packageToFileCount
_packageToFolderCount
_packageToSymlinkCount
_symlinkToAliasCount
_symlinkToFileCount
_symlinkToFolderCount
_symlinkToPackageCount
Ti,N,V_folderToPackageCount
Ti,N,V_folderToFileCount
Ti,N,V_folderToSymlinkCount
Ti,N,V_folderToAliasCount
Ti,N,V_packageToFolderCount
Ti,N,V_packageToFileCount
Ti,N,V_packageToSymlinkCount
Ti,N,V_packageToAliasCount
Ti,N,V_fileToFolderCount
Ti,N,V_fileToPackageCount
Ti,N,V_fileToSymlinkCount
Ti,N,V_fileToAliasCount
Ti,N,V_symlinkToFolderCount
Ti,N,V_symlinkToPackageCount
Ti,N,V_symlinkToFileCount
Ti,N,V_symlinkToAliasCount
Ti,N,V_aliasToFolderCount
Ti,N,V_aliasToPackageCount
Ti,N,V_aliasToFileCount
Ti,N,V_aliasToSymlinkCount
Ti,N,V_nonConflictingKindCount
initWithSession:
trackedFileObjectIDs
addDownloadTracker:forFileObjectID:
removeDownloadTracker:
document:didCompleteDownloadWithError:
hasPendingTrackerForFileObjectID:
session
_trackersByFileObjectID
_fileObjectIDsByTracker
T@"BRCAccountSession",R,W,N,V_session
openAtURL:withFlags:error:
changes
setProfilingHook:
profilingHook
sqliteErrorHandler
setSqliteErrorHandler:
assertOnQueue
execute:args:
executeRaw:
fetch:args:
fetchObjectOfClass:initializer:sql:args:
fetchObjectOfClass:sql:args:
fetchObject:sql:args:
initWithLabel:dbCorruptionHandler:
_setErrorHandlerWithDBCorruptionHandler:
_setLockedHandler
profilingEnabled
setProfilingEnabled:
attachDBAtPath:as:error:
flushToMakeEditsVisibleToIPCReaders
fetchWithSlowStatementRadar:sql:
fetchWithSlowStatementRadar:objectOfClass:sql:
fetchWithSlowStatementRadar:objectWithConstructor:sql:
executeWithExpectedIndex:sql:
executeWithSlowStatementRadar:sql:
executeWithErrorHandler:sql:
disableProfilingForQueriesInBlock:
_shouldFlushWithChangeCount:
usePacedBatchingOnTargetQueue:withInterval:changeCount:
brc_closeWithError:
brc_close
sizeInBytes
needsAutovacuum
autovacuumIfNeeded
_validateIsRunningWithCorrectPersona
execute:
fetch:
fetchObjectOfClass:initializer:sql:
fetchObjectOfClass:sql:
fetchObject:sql:
vmStepsExecuted
isReadonly
assertionPersonaIdentifier
setAssertionPersonaIdentifier:
_batchingPacer
_changeCount
_flushInterval
_flushImmediately
_autovacuumInProgress
_changesOverride
_isReadonly
_vmStepsExecuted
_assertionPersonaIdentifier
TQ,R,N,V_vmStepsExecuted
lockedHandler
T@?,C,D,N
TB,R,N,V_isReadonly
T@"NSString",&,N,V_assertionPersonaIdentifier
lightweightDescription
dealloc
addDependency:
operationID
initWithName:syncContext:group:
initWithName:
setGroup:
usesBackgroundSession
isConcurrent
stateWithContext:
subclassableDescriptionWithContext:
executionTimeInSec
error
setFinished:
isExecuting
setExecuting:
_finishIfCancelled
finishIfCancelled
_main
_executeWithPreviousError:
_scheduleExecutionWithPreviousError:
schedule
start
finishWithResult:error:
_completedWithResult:error:
completedWithResult:error:
_setTelemetryHeaderOnCKOpIfNecessary:
addSubOperation:overrideContext:allowsCellularAccess:
addSubOperation:
blockOnHighPriorityOperation:
associateCKOperationsToEventMetric:
cancelAfterDelay:
isFinished
callbackQueue
operationThrottle
setOperationThrottle:
operationFailureThrottle
setOperationFailureThrottle:
mainBlock
setMainBlock:
finishBlock
setFinishBlock:
logSections
startDate
syncContext
group
nonDiscretionary
setNonDiscretionary:
highPriorityWaitGroup
_syncContext
_operationUUID
_internalQueue
_executionTransaction
_startDate
_finishDate
_lastTryDate
_nextTryDate
_lastError
_throttleHash
_retryTimer
_timeoutTimer
_group
_highPriorityWaitGroup
_subOperations
_Activity
_associatedEventMetrics
_personaID
_finished
_nonDiscretionary
_callbackQueue
_operationThrottle
_operationFailureThrottle
_mainBlock
_finishBlock
_logSections
_operationGroup
executing
TB,N,GisExecuting
finished
TB,N,GisFinished,V_finished
TB,N,V_nonDiscretionary
T@"NSUUID",R,N
T@"NSDate",R,N,V_startDate
Td,R,N
T@"BRCSyncContext",R,N,V_syncContext
T@"NSObject<OS_dispatch_group>",R,N,V_highPriorityWaitGroup
T@"CKOperationGroup",&,N,V_operationGroup
T@"NSError",R,N,V_lastError
TQ,R,N,V_logSections
T@"NSObject<OS_dispatch_queue>",R,N,V_callbackQueue
T@"BRCThrottle",N,V_operationThrottle
T@"BRCThrottle",N,V_operationFailureThrottle
T@?,C,N,V_mainBlock
T@?,C,N,V_finishBlock
invalidate
descriptionAdditionalStringWithContext:
setRemoteClientProxy:
remoteClientProxy
ignoreMissingRemoteClientProxy
setIgnoreMissingRemoteClientProxy:
_startedFinish
_ignoreMissingRemoteClientProxy
_remoteClientProxy
T@"NSObject<BROperationClient>",&,N,V_remoteClientProxy
TB,N,V_ignoreMissingRemoteClientProxy
queue
initWithSyncContext:changeState:group:
_performAfterAddingOwnerKeysForZoneIDs:block:
_performAfterRegisteringForPushes:
_performFetchChangedZones
shareDBSyncCompletionBlock
setShareDBSyncCompletionBlock:
_changeState
_shareDBSyncCompletionBlock
T@?,C,N,V_shareDBSyncCompletionBlock
_bookmarkDataWithItemResolutionString:serverZone:salted:
unsaltedBookmarkDataWithItemResolutionString:serverZone:
parseUnsaltedBookmarkData:itemID:mangledID:error:
parseBookmarkData:inAccountSession:itemID:mangledID:unsaltedBookmarkData:error:
initWithRelPath:error:
merge:
supportsSecureCoding
notificationGatheredFromItem:
notificationFromItem:
notificationFromItem:relpath:
notificationWithAliasItem:targetItemNotification:
subclassDescription
oldParentFileObjectID
parentFileObjectID
classForCoder
initWithLocalItem:itemDiffs:
initRootContainerNotification
setNumberAttribute:forKey:
_addAliasDecoration:
initWithAliasItem:itemDiffs:
notificationByStrippingSharingInfoIfNeeded
canMerge:
generateLogicalExtension:physicalExtension:
isDocumentsFolder
itemGlobalID
parentGlobalID
oldParentFileID
parentGlobalIDs
setParentGlobalIDs:
appLibraryIDsWithReverseAliases
setAppLibraryIDsWithReverseAliases:
appLibrary
oldAppLibraryID
aliasSourceAppLibraryID
unsaltedBookmarkData
setUnsaltedBookmarkData:
isInDocumentScope
isInDataScope
isInTrashScope
_isInDocumentScope
_isInDataScope
_isInTrashScope
_itemGlobalID
_parentGlobalID
_oldParentFileID
_parentGlobalIDs
_appLibraryIDsWithReverseAliases
_appLibrary
_oldAppLibraryID
_aliasSourceAppLibraryID
_unsaltedBookmarkData
T@"BRCAppLibrary",R,N,V_appLibrary
T@"NSString",R,N,V_aliasSourceAppLibraryID
T@"BRCItemGlobalID",R,N,V_itemGlobalID
T@"BRCItemGlobalID",R,N,V_parentGlobalID
TQ,R,N,V_oldParentFileID
T@"BRFileObjectID",R,N
T@"NSString",R,N,V_oldAppLibraryID
T@"NSSet",&,N,V_parentGlobalIDs
T@"NSMutableSet",&,N,V_appLibraryIDsWithReverseAliases
T@"NSString",&,N,V_unsaltedBookmarkData
T@"NSURL",R,D,N
TB,R,N,V_isInDocumentScope
TB,R,N,V_isInDataScope
TB,R,N,V_isInTrashScope
tagsType
clearTags
addTags:
tagsCount
tagsAtIndex:
tags
setTags:
_tags
T@"NSMutableArray",&,N,V_tags
brc_publish
brc_unpublish
brc_dumpDescription
setCompletedUnitCount:
initWithParent:userInfo:
downloadProgressForDocument:sizeInfo:
uploadProgressForDocument:sizeInfo:
_progressForDocument:group:sizeInfo:
initWithGroup:parentFileIDs:session:
addAliasItem:
isPublished
parentFileIDs
_progressByAliasContainerID
_published
_parentFileIDs
T@"NSArray",R,N,V_parentFileIDs
TB,R,N,V_published
diffAgainstServerAliasItem:
sharedAliasItemID
structureRecordIDInZone:
structureRecordBeingDeadInServerTruth:shouldPCSChainStatus:inZone:
insertTombstoneAliasRecordInZone:
updateParentZoneRowID:
itemIDForURL:error:
canFetchAllContainersByID
fetchAllContainersByIDWithError:
fetchContainerForMangledID:personaID:
br_capabilityToMoveFromURL:toNewParent:error:
queryPathsForPersona:withError:
cloudSyncTCCDisabledForContainerMeta:
br_capabilityToMoveFromLocalItem:toNewParent:session:error:
_disabledBundleIDs
_knownBundleIDs
clientTruthWorkloop
readOnlyWorkloop
serverTruthWorkloop
databaseID
clientState
serverState
clientDB
serverDB
readOnlyDB
expensiveReadOnlyDB
dbBecameCorruptedWithDescription:error:
newConnection:
setupDatabase
enableDatabaseProfilingForDB:
disableDatabaseProfilingForDB:
_startWatcher
stopDBWatcher
_openConnection:databaseName:readonly:error:
_registerDynamicDBFunctions:error:
_setupConnection:readonly:forChecker:error:
newConnectionWithLabel:readonly:error:
_setupBackupDetector:error:
_stepBackupDetector:newState:error:
preventDatabaseFromBeingReused
saveServerZone:toDB:
saveServerZoneToDB:
saveClientZoneToDB:
createServerZone:
deleteServerZone:
_enumerateAppLibraryRowIDs:usingBlock:
_reserveRowIDForLibrary:
saveAppLibrary:toDB:
saveAppLibraryToDB:
newAppLibraryFromPQLResultSet:error:
_createAppLibrary:
_deleteAppLibrary:
_createPrivateAppLibrary:
_createSharedAppLibrary:
_appLibrariesEnumerator:
_createClientZone:
_deleteClientZone:
newSharedClientZoneFromPQLResultSet:error:
_sharedClientZonesEnumerator:
newSharedServerZoneFromPQLResultSet:error:
_sharedServerZonesEnumerator:
_sharedServerZoneByName:ownerName:db:
newPrivateClientZoneFromPQLResultSet:error:
_privateClientZonesEnumerator:
_privateClientZoneByName:db:
_privateClientZoneByID:db:
newPrivateServerZoneFromPQLResultSet:error:
_privateServerZoneByName:db:
_privateServerZonesEnumerator:
stagedItemsEnumerator
foldersNeedingTransmogrifyEnumerator
bouncedItemsEnumerator
itemsNeedingIndexingEnumeratorFromNotifRank:batchSize:
itemsWithSideCarInFlightDiffsEnumerator
pendingDownloadItemWithDocumentID:
deviceKeyForName:db:
createDeviceKeyForNameInServerDB:
userIdentityForKey:
_setUserIdentity:forName:
learnParticipantIdentitiesForShare:forceUpdate:
userKeyForOwnerName:db:
userNameForKey:db:
createUserKeyForOwnerName:
_clearNeedsUpgradeErrors:brVersion:
_finishClientTruthConnectionSetupWithError:
_finishServerTruthConnectionSetupWithError:
openAndValidateDatabase:serverTruth:error:
openDBWithError:
closeDBs
_dumpClientZoneBlockedState:toContext:
_dumpClientZoneStatus:toContext:error:
_dumpClientZone:toContext:includeAllItems:error:
dumpStatusToFileHandle:zoneName:tracker:error:
initializeOfflineDatabaseWhileUpgrading:error:
dumpDatabaseToFileHandle:zoneName:includeAllItems:tracker:error:
dumpFileCoordinationInfoToFileHandle:error:
backupDatabaseToURL:error:
accountStatisticsWithDB:
getPreviousMigrationAttempts:failed:withVersion:comperator:
getPreviousMigrationAttempts:failed:beforeVersion:
getPreviousMigrationAttempts:failed:forVersion:
saveMigrationAttemptForReport:uuid:
sessionForBackingUpDatabasesAtURL:
sessionForDumpingDatabasesAtURL:with:
sessionForDumpingDatabasesAtURL:
sessionForCheckingInconsistencies
_openConnection:databaseName:baseURL:readonly:error:
_registerStaticDBFunctions:error:
userIdentityForKey:db:
userIdentityForName:db:
nameComponentsForKey:db:
nameComponentsForName:db:
_registerLastBootIfNeeded:table:cleanTelemetryIfNeeded:
_checkIntegrity:serverTruth:session:skipBackupDetection:error:
_classesForClientState
openAndValidateDatabase:serverTruth:session:baseURL:skipBackupDetection:error:
_openConnection:serverTruth:databaseName:baseURL:initialVersion:lastCurrentVersion:error:
_validateDatabase:baseURL:session:serverTruth:initialVersion:lastCurrentVersion:error:
upgradeOfflineDB:serverTruth:session:error:
T@"BRCClientState",R,N
T@"BRCServerPersistedState",R,N
TQ,R,N
T@"BRCPQLConnection",R,N
T@"NSObject<OS_dispatch_workloop>",R,D,N
initWithServerZone:
_performQueryOperationForBit:index:completion:
_serverZone
addPerformer:
removePerformer:
networkReachabilityChanged:
networkReachabilityFlagsChanged:
_key
initWithDSID:
resumeAndAutoClose
perform
_close
_dsid
_queue
_throttler
status
name
_migrateAccountIfNecessaryForAccountDSID:
currentiCloudAccount
currentiCloudAccountID
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
initWithACAccountID:
addDelegate:
removeDelegate:
setDBAccountDSID:
_cleanupAPFSSnapshotWhenNoSessionExists
_cleanupPushAndActivitiesStatesWhenNoSessionExists
startAndLoadAccountSynchronously:
addFileProviderDomainForAccount:error:
jetsamCloudDocsApps
__destroySessionWithIntents:
_destroyCurrentSessionSynchronously
ubiquityTokenSalt
checkEnoughDiskSpaceToBeFunctional
_loadOnDiskAccountSessionWithError:
_createCurrentAccountSessionWithID:error:
_handleAccountWillChange
_handleAccountDidChange
destroyCurrentAccountSynchronously
_updateAccountToDSID:
destroySessionSynchronously
createAccountSessionWithDSID:error:
setMigrationStatus:forDSID:shouldUpdateAccount:completion:
setMigrationStatus:forDSID:shouldUpdateAccount:shouldPostAccountChangedNotification:completion:
markMigrationCompletedForDSID:
reloadSyncedFolderPolicies
reloadSyncedFolderPoliciesDisableiCloudDesktop:
syncPolicyforSyncedFolderType:
setSyncPolicy:forSyncedFolderType:
finishedLoading
doesNotHaveEnoughDiskSpaceToBeFunctional
setDoesNotHaveEnoughDiskSpaceToBeFunctional:
acAccountID
accountPath
pushWorkloop
loggedOutError
setLoggedOutError:
_finishedLoading
_accountPath
_ubiquityTokenSalt
_dbAccountDSID
_migrationStatusSetterQueue
_hasSetMigrationComplete
_accountsNeedingAddDomain
_syncPolicyByFolderType
_delegates
_doesNotHaveEnoughDiskSpaceToBeFunctional
_acAccountID
_pushWorkloop
_loggedOutError
TB,R,N,V_finishedLoading
TB,N,V_doesNotHaveEnoughDiskSpaceToBeFunctional
T@"NSString",R,N,V_acAccountID
T@"BRCAccountSession",R,N,V_session
T@"NSString",R,N,V_accountPath
T@"NSObject<OS_dispatch_workloop>",R,N,V_pushWorkloop
T@"NSError",&,N,V_loggedOutError
beginObservingChanges
endObservingChanges
_initializeCancelTimer
hasObservers
_observersGroup
_cancelTimer
initWithItemID:zone:isUserWaiting:
beginObservingChangesWithDelegate:
endObservingChangesWithDelegate:
cancelToBeReplacedByOperation:
_cursorWasUpdated:subResourcesOp:
_scheduleQueryOp
_waitForFlushAndRescheduleApplyIfNecessaryWithError:
addDirectoryListCompletionBlock:
addPreFlushDirectoryListCompletionBlock:
folderToList
rescheduleApply
setRescheduleApply:
_itemID
_recordID
_batchSize
_recordsFetched
_recordsFetchedTotalMetadataSize
_xattrsFetchedTotalSize
_listCompletionBlocks
_preFlushListCompletionBlocks
_hasNilDelegate
_queryOp
_rescheduleApply
T@"BRCItemID",R,N,V_itemID
TB,N,V_rescheduleApply
listOperation:wasReplacedByOperation:
_finishIfBlockedFromListing
fetchNextItemToList
listOrFetchNextItem
listNextItem
addRecursiveDirectoryListCompletionBlock:
_itemsToList
_rootItemID
_activeListOp
_itemsFailedListing
_recursiveListCompletionBlocks
isFinderBookmark
asFinderBookmark
isShareableItem
asShareableItem
cancelSyncConsistencyReportWithMountPath:queue:
_updateCachedEnabled:
fetchIsTelemetryReportingEnabledWithCompletion:
cachedIsTelemetryReportingEnabled
_waitForApplySchedulerToBeIdleWithCompletion:
_handleApplySchedulerTimeoutWithActivity:telemetryEventType:
_gatherAppTelemetryEventsWithActivity:
_setupSyncConsistencyDeferralTimerWithActivity:
_setupSyncConsistencyCancellationTimerWithActivity:session:
_resumePausedTreeConsistencyCheckOperationWithActivity:
_shouldDeferForExistingSnapshot
_checkSyncConsistencyWithActivity:
_reportSyncUpBackoffInfo
submitEventMetric:
forgetEventMetric:
_forgetEventMetrics:
_cleanupTimedOutEventMetrics:
_withEventMetricsOfKind:accessor:
dumpToContext:
createFSEventToSyncUpEventForFileID:genID:
lookupFSEventToSyncUpEventByFileID:genID:accessor:
lookupFSEventToSyncUpEventByItemID:accessor:
createUserDownloadEventForOperationID:isRecursive:isForBackup:
lookupUserDownloadEventByOperationID:accessor:
lookupUserDownloadEventByFileObjectID:accessor:
_fetchTelemetryEventCountOrAdd:
currentTelemetryToken
updateCurrentTelemetryToken:
syncTelemetryEventsToSend
dequeueSyncTelemetryEvents
_getPriorityOfEvent:
submitSyncTelemetryEvent:
dropAllSyncTelemetryEvents
deleteMissingErrorThrottles
didApplyItemInsideSharedItemID:
forceTelemetryDequeue
_telemetryEventCount
_waitOnIdleQueue
_metricEndpoint
_eventsByKind
_syncHealthReport
_currentTelemetryItemGlobalID
_currentTelemetryToken
_lastSentTelemetryEvents
_syncTelemetryState
_syncConsistencyDeferralTimer
_syncConsistencyCancellationTimer
_forceTelemetryDequeueQueued
initWithEventName:
duration
subDescription
additionalPayload
associatedAppTelemetryEvent
associateWithCompletedOperation:
eventName
startTime
setStartTime:
endTime
setEndTime:
isCKMetric
setIsCKMetric:
associatedCKEventMetricIfAvailable
_isCKMetric
_eventName
_startTime
_endTime
_associatedCKEventMetricIfAvailable
T@"NSString",R,N,V_eventName
T@"NSDate",&,N,V_startTime
T@"NSDate",&,N,V_endTime
TB,N,V_isCKMetric
T@"CKEventMetric",R,N,V_associatedCKEventMetricIfAvailable
fileID
setFileID:
genID
setGenID:
itemID
setItemID:
mtime
setMtime:
contentSize
setContentSize:
isPackage
setIsPackage:
syncUpBatchSize
setSyncUpBatchSize:
_isPackage
_genID
_fileID
_mtime
_contentSize
_syncUpBatchSize
TQ,N,V_fileID
TI,N,V_genID
T@"BRCItemID",&,N,V_itemID
TQ,N,V_mtime
TB,N,V_isPackage
TQ,N,V_syncUpBatchSize
TQ,N,V_contentSize
setOperationID:
fileObjectIDs
setFileObjectIDs:
didSucceed
setDidSucceed:
isDownloadingForBackup
setIsDownloadingForBackup:
isRecursiveDownload
setIsRecursiveDownload:
itemCount
setItemCount:
totalContentSize
setTotalContentSize:
_didSucceed
_isDownloadingForBackup
_isRecursiveDownload
_operationID
_fileObjectIDs
_itemCount
_totalContentSize
T@"NSUUID",&,N,V_operationID
T@"NSMutableSet",&,N,V_fileObjectIDs
TB,N,V_didSucceed
TB,N,V_isDownloadingForBackup
TB,N,V_isRecursiveDownload
TQ,N,V_itemCount
TQ,N,V_totalContentSize
initWithError:
setLastFailureDate:
encounteredErrorWithPCSState:privateDB:atDate:
encounteredErrors:atDate:
isEqualToTransferFailureReport:
lastFailureDate
privateDBErrorCountByPCSState
shareDBErrorCountByPCSState
_privateDBErrorCountByPCSState
_shareDBErrorCountByPCSState
_error
_lastFailureDate
T@"NSError",R,N,V_error
T@"NSDate",R,N,V_lastFailureDate
T@"NSDictionary",R,N,V_privateDBErrorCountByPCSState
T@"NSDictionary",R,N,V_shareDBErrorCountByPCSState
getRampNumberForSession:
_fillTransferFailure:withRowID:atDate:session:
_injectionForAnalyticsServiceCode:
generateReportWithSession:
syncErrors:
telemetryErrorEvents
telemetryOtherEvents
totalZoneCount
blockedZonesCount
clientTruthTotalItemsCount
zonesNeverFullSync
syncUpErrorsByMangledID
syncDownErrorsByMangledID
syncUpFailures
uploadFailures
downloadFailures
dsid
rampNumber
_syncUpErrorsByMangledID
_syncDownErrorsByMangledID
_rampNumber
_syncUpFailures
_uploadFailures
_downloadFailures
_totalZoneCount
_blockedZonesCount
_clientTruthTotalItemsCount
_zonesNeverFullSync
TQ,R,N,V_totalZoneCount
TQ,R,N,V_blockedZonesCount
TQ,R,N,V_clientTruthTotalItemsCount
TQ,R,N,V_serverTruthTotalItemsCount
TQ,R,N,V_zonesNeverFullSync
T@"NSDictionary",R,N,V_syncUpErrorsByMangledID
T@"NSDictionary",R,N,V_syncDownErrorsByMangledID
T@"NSSet",R,N,V_syncUpFailures
T@"NSSet",R,N,V_uploadFailures
T@"NSSet",R,N,V_downloadFailures
T@"NSString",R,N,V_dsid
T@"NSString",R,N,V_rampNumber
TQ,R,N,V_clientTruthDirFaultCount
TQ,R,N,V_serverTruthDirFaultCount
TQ,R,N,V_serverTruthDirCount
TQ,R,N,V_timeSinceLogin
T@"NSArray",R,N
_finishReport:session:completionHandler:
generateReportForSharedFolder:qualityOfService:completionHandler:
initWithURL:
shareChangedDuringCheckWithSession:
incrementErrorRetryCountWithSession:
telemetryEvent
itemCountDifference
wasAbleToRun
lastError
zoneMangledID
_failureRetryCount
_fileURL
_containsSharedToMeItem
_wasAbleToRun
_itemCountDifference
_zoneMangledID
Tq,R,N,V_itemCountDifference
TB,R,N,V_wasAbleToRun
T@"BRMangledID",R,N,V_zoneMangledID
_finishReport:session:temporaryDBURL:mountFD:completionHandler:
cleanupApfsSnapshotWithMountPath:
cleanupApfsSnapshotWithMountFD:
generateReportWithSession:completion:
telemetryWarningEvents
_telemetryErrorEvents
_telemetryWarningEvents
T@"NSArray",R,N,V_telemetryErrorEvents
T@"NSArray",R,N,V_telemetryWarningEvents
checkRecursiveChildItemCountFromURLWrapper:qualityOfService:reply:
checkTreeConsistencyWithDatabaseURL:rootURLWrappers:fileChecksumRatePerThousand:packageChecksumRatePerThousand:maxEventsCount:reply:
pauseTreeConsistencyCheck
resumeTreeConsistencyCheckWithReply:
cancelTreeConsistencyCheck
hasMinimumOSName
hasRecordId
minimumOSName
setMinimumOSName:
recordId
setRecordId:
_minimumOSName
_recordId
T@"NSString",&,N,V_minimumOSName
T@"NSString",&,N,V_recordId
receivedUpdatedServerChangeToken:requestID:
completedZoneHealthSyncDownWithRequestID:error:
_changeToken
_recordsByID
_deletedRecordIds
_aliasTargetMangledID
_aliasTargetItemID
_updateAliasTarget:
representableName
iWorkShareable
descriptionWithContext:origName:
initFromResultSet:pos:
initWithStatInfo:
initWithCoder:
encodeWithCoder:
checkStateWithItemID:logToFile:
check:logToFile:
diffAgainst:
isExecutable
isWritable
displayName
isEtagEqual:
setCreatorRowID:
lazyXattrWithSession:
state
setState:
type
setType:
mode
setMode:
birthtime
setBirthtime:
parentID
setParentID:
isHiddenExt
setHiddenExt:
xattrSignature
setXattrSignature:
logicalName
setLogicalName:
aliasTarget
trashPutBackPath
setTrashPutBackPath:
trashPutBackParentID
setTrashPutBackParentID:
creatorRowID
_parentID
_state
_type
_mode
_birthtime
_logicalName
_aliasTarget
_hiddenExt
_xattrSignature
_lazyXattr
_trashPutBackPath
_trashPutBackParentID
_creatorRowID
T@"BRCItemID",&,N,V_parentID
Tc,N,V_state
Tc,N,V_type
Tc,N,V_mode
T@"NSString",&,N,V_logicalName
Tq,N,V_birthtime
hiddenExt
TB,N,GisHiddenExt,V_hiddenExt
T@"NSData",&,N,V_xattrSignature
T@"BRMangledID",R,N
T@"NSString",R,N,V_aliasTarget
T@"NSString",&,N,V_trashPutBackPath
T@"BRCItemID",&,N,V_trashPutBackParentID
T@"BRCUserRowID",&,N,V_creatorRowID
TB,R
_hasLastEditorDeviceRowID
_hasLastEditorRowID
setLastEditorDeviceRowID:
setLastEditorRowID:
lastEditorDeviceRowID
lastEditorRowID
lastEditorDeviceDisplayNameWithDB:
lastEditorUserIdentityWithDB:
lastEditorDisplayNameWithDB:
displayNameWithoutExtension:
initWithVersion:
hasThumbnail
additionNameForItemID:zoneID:
isSmallAndMostRecentClientsGenerateThumbnails
originalPOSIXName
setOriginalPOSIXName:
size
setSize:
thumbnailSize
setThumbnailSize:
thumbnailSignature
setThumbnailSignature:
contentSignature
setContentSignature:
conflictLoserEtags
setConflictLoserEtags:
editedSinceShared
setEditedSinceShared:
lastEditorDeviceOrUserRowID
setLastEditorDeviceOrUserRowID:
lastEditorDeviceName
setLastEditorDeviceName:
quarantineInfo
setQuarantineInfo:
_originalPOSIXName
_size
_thumbnailSize
_thumbnailSignature
_contentSignature
_quarantineInfo
_conflictLoserEtags
_editedSinceShared
_lastEditorDeviceOrUserRowID
_lastEditorDeviceName
Tq,N,V_mtime
T@"NSString",&,N,V_originalPOSIXName
Tq,N,V_size
Tq,N,V_thumbnailSize
T@"NSData",&,N,V_quarantineInfo
T@"NSData",&,N,V_contentSignature
T@"NSData",&,N,V_thumbnailSignature
T@"NSSet",&,N,V_conflictLoserEtags
T@"NSNumber",&,N,V_lastEditorDeviceOrUserRowID
T@"NSNumber",&,N
T@"NSString",&,N,V_lastEditorDeviceName
T@"BRCUserRowID",&,N
T@"NSNumber",&,N,V_editedSinceShared
brc_signatureIsPendingPlaceHolder
brc_signatureIsPackage
brc_signatureIsValid
brc_hexadecimalString
brc_signature
brc_pendingPlaceholderForPackage:
T@"NSData",R,N
typeAsString:
StringAsType:
hasPath
setHasMtime:
hasMtime
setIsWritable:
setHasIsWritable:
hasIsWritable
setIsExecutable:
setHasIsExecutable:
hasIsExecutable
hasSymlinkContent
hasQuarantineInfo
hasSignature
setXattrIndex:
setHasXattrIndex:
hasXattrIndex
path
setPath:
symlinkContent
setSymlinkContent:
signature
setSignature:
xattrIndex
_xattrIndex
_path
_signature
_symlinkContent
_isExecutable
_isWritable
Ti,N,V_type
T@"NSString",&,N,V_path
TB,N,V_isWritable
TB,N,V_isExecutable
T@"NSString",&,N,V_symlinkContent
T@"NSData",&,N,V_signature
Tq,N,V_xattrIndex
loadFromClientStateInSession:options:
initWithLatestEventID:streamUUID:rootID:
setLatestEventID:
setStreamUUID:
setRootID:
streamUUID
latestEventID
rootID
_streamUUID
_latestEventID
_rootID
T@"NSUUID",&,N,V_streamUUID
TQ,N,V_latestEventID
TQ,N,V_rootID
initWithAccountSession:
suspend
hasActiveAliasWatchers
registerAppLibraries:forFlags:
unregisterAppLibraries:forFlags:
hasWatcherForDocumentID:
registerPipe:asWatcherForFileObjectID:
unregisterPipeAsWatcher:
getPipeWithXPCReceiver:client:reply:
pipeWithReceiver:
queueProgressUpdates:
queueUpdate:
queueUpdateForItemAtRowID:
fetchLastFlushedRankWithReply:
_dispatchUpdatesToPipesWithRank:
_queueAdditionalUpdates
flushUpdatesWithRank:
invalidatePipesWatchingAppLibraryIDs:
pipeDelegateInvalidated:
invalidatePipeReceiversWatchingAppLibraryIDs:completionBlock:
hasWatcherMatchingGlobalItemID:
_pipes
_cacheQueue
_notifs
_transferCache
_client
_activeAliasQueries
_additionalUpdatesItemRowID
_previousMaxRank
_watchersByFileObjectID
_fileObjectIDByWatcher
initWithShareMetadata:syncContext:
acceptShareCompletionBlock
setAcceptShareCompletionBlock:
_shareMetadata
_acceptShareCompletionBlock
T@?,C,N,V_acceptShareCompletionBlock
initWithDocumentItem:
recordID
setRecordID:
T@"CKRecordID",&,N,V_recordID
locateByFileID:session:
initWithRootPath:session:
_initWithPath:relativeToRoot:
initWithAbsolutePath:session:
initWithPath:appLibrary:
initWithFileID:session:
initWithFileID:root:session:
pathWithChildAtPath:
pathOfPackageRoot
basePath
root
physicalURL
logicalURLWithLogicalName:
logicalURL
isDocument
isFault
isBundle
isUnixDir
isFile
isPackageRoot
isInPackage
isRoot
itemScope
isResolved
isExcluded
isUnresolvableDueToProtection
isSymLink
exists
absolutePath
relativePath
pathRelativeToRoot
pathRelativeToPackageRoot
filename
hardlinkCount
fileObjectID
parentFileID
documentID
birthTime
modificationTime
fsGenerationID
generationID
isHiddenExtension
isHiddenFile
isBusy
isFileWithFinderInfoAliasBit
isFinderAlias
isBRAlias
fileType
hasFinderTags
_resolveBasePath:
_resolvePathTypeAndContainer
_resolveRootWhenExists:
_fixupRelativePath
_resolveWhenExists
_resolveWhenDoesntExist
_resolveSymlinkRelativeTo:path:
_resolveAndKeepOpenMustExist:allowResolveInPkg:error:
resolveAndKeepOpenMustExist:error:
resolveAndKeepOpenMustExist:allowResolveInPkg:error:
refreshFromPathMustExist:
refreshPathTypeAndContainer
_shouldKeepBasePathOpen
_shouldKeepBasePathOpenWithoutOpenedFD
resolveMustExist:error:
flock:
performOnOpenFileDescriptor:error:
performOnOpenParentFileDescriptor:error:
isEqualToRelativePath:
faultDisplayName
bookmark
xattrs
sharedItemBookmark
itemSyncPausedByBundleID
itemSyncPausedExpireTS
parentHash
setAppLibrary:
setItemScope:
_roots
_absolutePath
_relativePath
_basePath
_bookmark
_generationID
_finderInfo
_nlink
_parentFileID
_documentID
_fsGenerationID
_flags
_itemScope
_isExcluded
_isInPackage
_isBundle
_isPackageRoot
_readFault
_hasFinderTags
_isBusy
_hasFinderInfoAliasBit
_isBRAlias
_qtnResolved
_xattrsResolved
_sharedBookmarkResolved
_openedProtected
_unresolvableDueToProtection
_itemSyncPausedByBundleIDResolved
_itemSyncPausedExpireTSResolved
_openRefCount
_mutex
_xattrs
_sharedItemBookmark
_itemSyncPausedByBundleID
_itemSyncPausedExpireTS
T@"BRCAppLibrary",&,N,V_appLibrary
TS,N,V_type
TC,N,V_itemScope
TI,R,N
Ti,R,N
Tq,R,N
T@"BRCGenerationID",R,N
T@"BRCRelativePath",R,N
T@"NSURL",R,N
T@"BRCBookmark",R,N
T@"NSData",R,N,V_quarantineInfo
T@"NSData",R,N,V_xattrs
T@"NSString",R,N,V_sharedItemBookmark
T@"NSString",R,N,V_itemSyncPausedByBundleID
T@"NSNumber",R,N,V_itemSyncPausedExpireTS
captureLogsForOperationType:ofSubtype:forError:
hasOperationType
setTotalTime:
setHasTotalTime:
hasTotalTime
setRecordsFetched:
setHasRecordsFetched:
hasRecordsFetched
setRecordsFetchedTotalMetadataSize:
setHasRecordsFetchedTotalMetadataSize:
hasRecordsFetchedTotalMetadataSize
setXattrsFetchedTotalSize:
setHasXattrsFetchedTotalSize:
hasXattrsFetchedTotalSize
operationType
setOperationType:
totalTime
recordsFetched
recordsFetchedTotalMetadataSize
xattrsFetchedTotalSize
_totalTime
_operationType
T@"NSString",&,N,V_operationType
TQ,N,V_totalTime
TQ,N,V_recordsFetched
TQ,N,V_recordsFetchedTotalMetadataSize
TQ,N,V_xattrsFetchedTotalSize
rescheduleAllItemsPendingMigration
countByEnumeratingWithState:objects:count:
initWithComparator:
_shrink
check
_moveUp:index:
_moveDown:index:
_moveUpOrDown:index:
firstObject
containsObject:
addObject:
removeObject:
removeFirstObject
removeAllObjects
firstObjectWeightChanged
objectWeightChanged:
count
_array
_comparator
_mutation
_objects
_count
TQ,R,N,V_count
checksummingOutputStreamWithTag:
initWithTag:
hasSpaceAvailable
open
streamStatus
write:maxLength:
_ctx
_sig
_isOpen
shouldPerformAnotherBatch
_markItemsFailedSync
_syncUpRecordBatchWithModifiedRecords:deletedRecordIDs:recordIDToZoneMap:requestID:
fakeSyncForItem:itemRank:
_itemsNeedingSyncUpEnumerator
_shouldPerformAnotherBatch
_accountDidChange
initWithCKContainer:
descriptionForCKAccountStatus:dumpContext:
resumeIfNecessary
_accountChangeHandler
_source
_ckContainer
_lastAccountStatus
_resumed
_cancelled
_errorCode
_bouncesInvestigation
_ciconiaInvestigation
_errorDescription
_errorDomain
_eventGroupUUID
_lastStep
_qbsInvestigation
_qbsPerformance
_reason
_zoneName
_hasForegroundClients
_isPCSChained
_sharedZone
hasZoneName
zoneName
setZoneName:
sharedZone
setSharedZone:
setHasSharedZone:
hasSharedZone
hasErrorDomain
errorDomain
setErrorDomain:
errorCode
setErrorCode:
setHasErrorCode:
hasErrorCode
hasErrorDescription
errorDescription
setErrorDescription:
hasLastStep
lastStep
setLastStep:
hasItemID
hasReason
reason
setReason:
setHasNonDiscretionary:
hasNonDiscretionary
hasForegroundClients
setHasForegroundClients:
setHasHasForegroundClients:
hasHasForegroundClients
isPCSChained
setIsPCSChained:
setHasIsPCSChained:
hasIsPCSChained
hasEventGroupUUID
eventGroupUUID
setEventGroupUUID:
hasCiconiaInvestigation
ciconiaInvestigation
setCiconiaInvestigation:
hasQbsInvestigation
qbsInvestigation
setQbsInvestigation:
hasQbsPerformance
qbsPerformance
setQbsPerformance:
hasBouncesInvestigation
bouncesInvestigation
setBouncesInvestigation:
T@"NSData",&,N
T@"NSString",&,N
Tq,N
T@"AppTelemetryCiconiaInvestigation",&,N
T@"AppTelemetryQBSInvestigation",&,N
T@"AppTelemetryQBSPerformance",&,N
T@"AppTelemetryCiconiaBouncesInvestigation",&,N
startObservingNetworkReachabilityChanges
stopObservingNetworkReachabilityChanges
networkReachabilityDidChangeHandler
setNetworkReachabilityDidChangeHandler:
_networkReachabilityDidChangeHandler
T@?,C,N,V_networkReachabilityDidChangeHandler
loadXattrsFromDictionary:structuralBlob:contentBlob:
stringFromThrottleState:context:
closed
setHasWork:
setHasActiveWork:
initWithSession:name:tableName:
canRetryJobWithID:
haveActiveJobsMatching:
jobStateFor:
descriptionForJobsMatching:ordering:additionalColumns:additionalValuesHandler:context:
descriptionForJobsMatching:context:
describeInBuffer:aggregateOfJobsMatching:context:
aggregateDescriptionForJobsMatching:context:
postponeJobID:withThrottle:
insertOrUpdateJobID:throttle:withState:insertedSQLColumn:insertedSQLValues:updatedSQLValues:
rescheduleSuspendedJobsMatching:inState:
updateStamps:throttle:now:
computeStamps:forJobID:throttle:shouldBackoff:
setState:forJobID:
setState:forJobsMatching:
deleteJobsMatching:
resetBackoffForJobWithID:
deleteExpiredJobs
recoverAndReportMissingJobs
checkIfHasWork
signalWithDeadline:
signal
performFirstSchedulingAfterStartupInDB:
canScheduleMoreJobs
scheduleWithBatchSize:whereSQLClause:columns:actionHandler:
hasWorkGroup
setHasWorkGroup:
hasActiveWorkGroup
setHasActiveWorkGroup:
hasActiveWork
hasWork
tableName
_schedulerSource
_schedulerWorkloop
_firstSchedulingAfterStartupDone
_hasActiveWork
_hasWork
_hasWorkGroup
_hasActiveWorkGroup
_tableName
TB,N,V_hasWork
TB,N,V_hasActiveWork
T@"NSObject<OS_dispatch_group>",&,V_hasWorkGroup
T@"NSObject<OS_dispatch_group>",&,V_hasActiveWorkGroup
T@"PQLNameInjection",R,V_tableName
T@"NSString",R,V_name
initWithNotificationPipe:appLibraries:startingRank:maxRank:withDeadItems:gatherReply:
gatherWithBatchSize:completion:
_popGatherReply
done
gatheredChildrenItemGlobalID
setGatheredChildrenItemGlobalID:
_pipe
_gatherReply
_gatheringAppLibraries
_gatheringRankMin
_gatheringRankMax
_lastSentRank
_gatheringNamePrefix
_includesDeadItems
_gatheredChildrenItemGlobalID
T@"BRCItemGlobalID",&,N,V_gatheredChildrenItemGlobalID
_registerAsWatcherIfNeeded
addNotification:asDead:
addDequeueCallback:
_initWithManager:startingRank:
initWithXPCReceiver:client:manager:startingRank:
initWithReceiver:manager:startingRank:
_isInterestingUpdate:
_addIntraContainerUpdatesFromInterContainerUpdate:toArray:
_prepareForSecondGatherWithRank:
processUpdates:withRank:
_flushProgressUpdates
_processProgressUpdates:
processProgressUpdates:
__flush
_gatherIfNeededAndFlushAsync
_stopWatchingItems
watchScopes:trustedAppLibraryIDs:gatherReply:
_watchItem:options:gatherReply:
invalidateIfWatchingAppLibraryIDs:
invalidateReceiverIfWatchingAppLibraryIDs:
isWatchingGlobalItemID:
manager
delegate
setDelegate:
oldWatchedAncestorItemGlobalID
setOldWatchedAncestorItemGlobalID:
watchedAncestorItemGlobalID
setWatchedAncestorItemGlobalID:
watchedAncestorFileObjectID
setWatchedAncestorFileObjectID:
watchedAncestorFilenameToItem
setWatchedAncestorFilenameToItem:
_receiver
_boostReply
_oldWatchedAncestorItemGlobalID
_watchedAncestorItemGlobalID
_watchedAncestorFileObjectID
_watchedAncestorFilenameToItem
_gatherer
_gatherGroup
_hasUpdatesInFlight
_volumeIsCaseSensitive
_pendingProgressUpdatesByID
_hasProgressUpdatesInFlight
_initialGatherMaxRank
_secondaryGatherMaxRank
_manager
_listOp
_watchKind
_watchItemOptions
_watchNamePrefix
_watchForBundleID
_externalAppLibraries
_watchedAppLibraries
_recursiveScopeListOps
_watchedAppLibraryIDs
_watchedAppLibrariesFlags
_delegate
T@"BRCItemGlobalID",&,V_oldWatchedAncestorItemGlobalID
T@"BRCItemGlobalID",&,V_watchedAncestorItemGlobalID
T@"BRFileObjectID",&,V_watchedAncestorFileObjectID
T@"NSString",&,V_watchedAncestorFilenameToItem
T@"BRCNotificationManager",R,N,V_manager
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"<BRCNotificationPipeDelegate>",W,N,V_delegate
watchItemsNamesPrefixedBy:inScopes:appLibraryIDs:gatherReply:
watchScopes:appLibraryIDs:gatherReply:
watchScopes:gatherReply:
boostPriority:
watchItemWithFileObjectID:options:gatherReply:
_triggerImmediateReadOfDocumentIfNeeded
brc_booleanValueForKey:
moveToFront
showJoinDialogForShareMetadata:session:reply:
showErrorSignInToiCloudForShareMetadata:reply:
showErrorTurnOniCloudDriveForShareMetadata:reply:
showErrorInstallNativeAppForShareMetadata:reply:
showErrorNativeAppDisabledByProfileForShareMetadata:reply:
showErrorReasonUnknownForShareMetadata:reply:
showErrorDeviceOfflineForShareMetadata:reply:
showErrorServerNotReachableForShareMetadata:reply:
showErrorItemUnavailableOrAccessRestrictedForShareMetadata:reply:
showErrorParticipantLimitReachedForShareMetadata:reply:
showErrorDocumentsAppNotVisibleForShareURL:reply:
_hideCurrentDialog
_displayDialogWithType:dict:userReplyBlock:
_logWrapUserReplyBlock:
_displayDialogWithType:dict:options:userReplyBlock:
_updateDialogWithType:dict:
_updateDialogWithType:dict:userReplyBlock:
_localizationKey:forTypeOfShare:
_localizationKeyForOS:
_localizationKey:forOSAndTypeOfShare:
_cfUserNotification
_displaySource
_nextDisplayBeginTime
_progressSubscriber
_dialogInfo
createName
unlinkAliasAtPath:
containsItemID
targetServerZone
target
_computeSignature:
_validateSignatureWithFd:
initWithRelpath:
initWithTarget:owningAppLibrary:path:session:
_resolveTargetWithError:
_resolveDataWithError:
resolveWithError:
writeUnderParent:name:error:
_bookmarkData
_target
_targetServerZone
_targetRelpath
_targetResolved
_dataResolved
_containsItemID
T@"BRCServerZone",R,N
T@"BRCLocalItem",R,N
_initWithImportObject:error:
updateWithImportObject:onlyContentDependentProperties:error:
waiterBlocks
_waiterBlocks
T@"NSMutableArray",R,N,V_waiterBlocks
daemon
isDaemonRunning
UTIForExtension:
listener:shouldAcceptNewConnection:
_initSignals
_setupVNodeRapidAging
waitForConfiguration
setUpAnonymousListener
_haveRequiredKernelFeatures
setUpSandbox
nonPurgeableSizeForSession:givenPurgeableSize:
currentAccountHandler
getCurrentSessionMustFinishedLoading:
currentSession
performWithSessionForVolume:action:
_setupCacheDelete
_setDoneXpcActivity:description:
_startXPCListeners
_startupAndLoadAccount
_finishStartup
restart
registerShareAcceptOperation:forURL:
registerWaiterBlock:forShareURL:
localeDidChange
waitOnAccountResumedQueue
endpoint
selfCheck:
handleExitSignal:
exitWithCode:
suspendIPCAcceptation
resumeIPCAcceptation
containerClass
setContainerClass:
disableAccountChangesHandling
setDisableAccountChangesHandling:
disableAppsChangesHandling
setDisableAppsChangesHandling:
forceIsGreedyState
setForceIsGreedyState:
startupDate
_sigIntSrc
_sigQuitSrc
_sigTermSrc
_xpcListener
_tokenListener
_unitTestMode
_xpcListenersReadyQueue
_accountReadyQueue
_accountResumedQueue
_startupQueue
_serverAvailabilityNotifyToken
_accountLoaderQueue
_shareAcceptOperationsByToken
_shareAcceptWaitersByToken
_acceptWaiterTimer
_shareAcceptQueue
_disableAccountChangesHandling
_disableAppsChangesHandling
_containerClass
_forceIsGreedyState
_startupDate
TB,N,V_disableAccountChangesHandling
TB,N,V_disableAppsChangesHandling
TQ,N,V_forceIsGreedyState
T@"NSXPCListenerEndpoint",R,N
T@"NSDate",R,N,V_startupDate
T#,&,N,V_containerClass
sqliteBind:index:
newFromSqliteValue:
newFromSqliteStatement:atIndex:
initWithItem:
fetchRootURLIfNecessaryAndFinishWithShare:
shareID
setShareID:
recordIDNeedingFetch
setRecordIDNeedingFetch:
rootItemIDToLookup
setRootItemIDToLookup:
clientZone
setClientZone:
_shareID
_recordIDNeedingFetch
_rootItemIDToLookup
_clientZone
T@"BRCItemID",&,N,V_rootItemIDToLookup
T@"BRCClientZone",&,N,V_clientZone
T@"CKRecordID",&,N,V_shareID
T@"CKRecordID",&,N,V_recordIDNeedingFetch
initWithIntID:zoneRowID:
intID
initWithRank:zoneRowID:
rank
rejectedRowID
serverItemRank
descriptionForServerItem:context:
descriptionForRejectedItem:context:
setState:forServerItem:localItem:
setState:forRank:zoneRowID:
rescheduleItemRank:zoneRowID:matchingState:
_setState:andApplyKind:forJobID:
setState:andApplyKind:forServerItem:localItem:
setState:andApplyKind:forRank:zoneRowID:
resetBackoffForServerItem:
createApplyJobFromServerItem:localItem:state:kind:
didCreateMissingParentID:zone:
didReparentOrKillItemID:parentItemID:zone:
didCompleteCrossZoneMigrationForAppLibrary:
_rescheduleRank:inState:forZone:
didMarkSyncIdleForServerRank:zone:
rescheduleMissingTargetAliasesWithTarget:
rescheduleItemsParentedToItemGlobalID:
_rescheduleItemsParentedToItemGlobalID:flags:
rescheduleItemsRecursivelyUnderFolder:
repopulateJobsForZone:
_scheduleApplyJobWithID:zone:applyKind:
_handleWatchingFaults
monitorFaultingForZone:
stopMonitoringFaultingForZone:
_writeCoordinationCount
startWriteCoordinationInAppLibrary:
endWriteCoordinationInAppLibrary:rowID:
_addRanksUpToRank:inZone:
generatedRanksForZone:upToRank:
didSyncDownZone:requestID:upToRank:caughtUpWithServer:
_coordinatedWriters
_clientZonesWatchingFaults
_applyCountReachedMax
initWithName:andParameters:
matchesItem:nsecsToRetry:now:
_validateThrottleParams:
predicate
setPredicate:
_predicate
T@"NSPredicate",&,N,V_predicate
initWithUserURL:outputUserURL:
backUpWithCompletionBlock:
desiredBackupDataDirectoryForUserURL:
databaseURL
urlPropertiesToFetch
enumerateRootURL:usingBlock:error:
enumerateURL:rootURL:usingBlock:error:
cleanOnDisk
userURL
setUserURL:
outputUserURL
setOutputUserURL:
destinationDirectory
setDestinationDirectory:
_userURL
_outputUserURL
_destinationDirectory
T@"NSURL",&,N,V_userURL
T@"NSURL",&,N,V_outputUserURL
T@"NSURL",&,N,V_destinationDirectory
identifier
logName
isCloudDocsAppLibrary
isDesktopAppLibrary
isDocumentsAppLibrary
isiCloudDesktopAppLibrary
syncedFolderType
includesDataScope
setNeedsSave:
hasActiveQueries
hasActiveRecursiveQueries
hasActiveAliasQueries
registerQueryWithAliases:isRecursive:
unregisterQueryWithAliases:isRecursive:
initWithMangledID:dbRowID:zoneRowID:db:plist:session:initialCreation:createdRootOnDisk:createdCZMMoved:rootFileID:
updateWithPlist:
associateWithClientZone:
associateWithClientZone:offline:
supportsSpotlightIndexing
plist
cancelFileCoordinators
addClientUsingUbiquity:
removeClientUsingUbiquity:
activate
_activateState:origState:
setStateBits:
clearStateBits:
didUpdateDocumentScopePublic
hasUbiquityClientsConnected
isGreedy
isEqualToAppLibrary:
_unwrappedDescriptionWithContext:
itemsEnumeratorWithRankMin:rankMax:namePrefix:withDeadItems:shouldIncludeFolders:shouldIncludeOnlyFolders:shouldIncludeDocumentsScope:shouldIncludeDataScope:shouldIncludeExternalScope:shouldIncludeTrashScope:count:db:
itemsEnumeratorChildOf:withDeadItems:rankMin:rankMax:count:db:
enumerateChildrenOfItemGlobalID:sortOrder:offset:limit:db:
enumerateUserVisibleChildrenDirectoriesOfItemGlobalID:db:
cancelWriteCoordinatorForItem:
coordinatorForItem:forRead:
freeFileCoordinationSlotsAfterDelayForRead:
isCoordinationPendingForItem:
setRootFileID:
fsrootDidMoveToPath:
updateFromFSAtPath:
didFindLostItem:oldAppLibrary:
didRemoveDocumentsFolder
didCreateDocumentScopedItem
didCreateDataScopedItem
fetchPristineness
scheduleFullLibraryContentsFetch
fetchTrashItems
throttleHashWithItemID:
hasDocumentsOrDirectory
hasUbiquitousDocuments
hasLocalChanges
documentSizeUsageWithDB:
documentCountWithDB:
addForegroundClient:
removeForegroundClient:
isForeground
integrityCheckBoosting
shouldEvictUploadedItems
recomputeShouldEvictState
transferSyncContextIfExists
transferSyncContext
didReceiveHandoffRequest
_targetSharedServerZonesEnumerator
_aliasAppLibraryTargetSQLPrefix
isStillTargetingSharedServerZone:
_resolveTargetSharedClientZonesWhenBecameForeground
_removeAllTargetSharedServerZonesWhenNoLongerForeground
_addTargetSharedServerZoneForSharedItem:
_removeTargetSharedServerZoneIfNecessary:
_addTargetSharedServerZone:
itemIDByRowID:db:
itemIDByRowID:
itemByRowID:db:
itemByRowID:
liveAliasesEnumeratorTargetingThisAppLibrary
aliasByUnsaltedBookmarkData:
containerMetadataFilledWithTCCInfo
wasMovedToCloudDocs
notifyClient:whenFaultingIsDone:
shouldSaveContainerMetadataServerside
documentsPath
documentsFolderItemID
fetchRootItemInDB:
fetchRootItem
fetchDocumentsDirectoryItem:
fetchDocumentsDirectoryItem
rootItemID
rootItemGlobalID
zoneDidChangeMovedToCloudDocsState
_updateIsInCloudDocsZone
setContainerMetadataEtag:
setContainerMetadataNeedsSyncUp:
scheduleContainerMetadataSyncUp
setIsOverQuota:
tracker
needsSave
dbRowID
setDbRowID:
zoneRowID
setZoneRowID:
appLibraryID
mangledID
setGenerationID:
setSession:
defaultClientZone
setDefaultClientZone:
containerMetadata
containerMetadataEtag
containerMetadataNeedsSyncUp
containerMetadataSyncRequestID
setContainerMetadataSyncRequestID:
rootQuotaUsage
setRootQuotaUsage:
_activeQueries
_activeRecursiveQueries
_pendingFileCoordinators
_XPCClientsUsingUbiquity
_dbRowID
_mangledID
_defaultClientZone
_activated
_targetSharedServerZones
_foregroundClients
_pristineFetchOp
_trashFetchOp
_needsSave
_containerMetadataNeedsSyncUp
_tracker
_zoneRowID
_appLibraryID
_containerMetadata
_containerMetadataEtag
_containerMetadataSyncRequestID
_rootQuotaUsage
T@"NSNumber",&,N,V_fileID
T@"NSNumber",&,N,V_generationID
T@"BRCPrivateClientZone",W,N,V_defaultClientZone
T@"<BRCAppLibraryDelegate>",&,N,V_delegate
T@"BRCAccountSession",&,N,V_session
T@"brc_task_tracker",R,N,V_tracker
T@"NSString",R,N,V_appLibraryID
T@"BRMangledID",R,N,V_mangledID
T@"BRCALRowID",&,N,V_dbRowID
T@"BRCZoneRowID",&,N,V_zoneRowID
T@"BRCPQLConnection",R,N,V_db
TB,N,V_needsSave
T@"BRCSyncContext",R,N
T@"NSMutableDictionary",R,N
TI,R,N,V_state
T@"BRContainer",R,N,V_containerMetadata
T@"NSString",&,N,V_containerMetadataEtag
TB,N,V_containerMetadataNeedsSyncUp
TQ,N,V_containerMetadataSyncRequestID
T@"NSNumber",&,N,V_rootQuotaUsage
initWithThrottleHash:
incrementRetry
retryCount
latestRetry
throttleHash
_scheduled
_retryCount
_latestRetry
TI,R,N,V_retryCount
Tq,R,N,V_latestRetry
Tq,R,N,V_throttleHash
retryBackoff:
nsecsToNextRetry:retryCount:now:
isBlocking
nsecsBeforeForgettingCounter
_initialRetryCount
_finalRetryCount
_maximumElementCount
_minimumNsecsBetweenRetries
_maximumNsecsBetweenRetries
_nsecsBeforeForgettingCounter
T@"NSString",R,N,V_name
Tq,R,N,V_nsecsBeforeForgettingCounter
throttleHashFormat:
throttleHashBytes:length:
_cleanupStaleCounters:
incrementRetryCount:
nsecsToNextRetry:now:increment:
reset
_retryCounters
_retryHeap
initAsSymlinkWithTarget:parentItem:logicalName:error:
initWithURL:existingItem:quarantineInfo:error:
_resolveParentBasedPropertiesWithParent:logicalName:
initAsNewDirectoryWithLogicalName:parentItem:error:
initWithURL:logicalName:quarantineInfo:parentItem:error:
_resolveAgainstFileDescriptor:
parentItemGlobalID
fileURL
sharingOptions
isUserVisible
_parentItemGlobalID
_isDocumentsFolder
_isUserVisible
_sharingOptions
TB,R,N,V_isUserVisible
TQ,R,N,V_sharingOptions
TQ,R,N,V_fileID
TI,R,N,V_nlink
Tq,R,N,V_size
TI,R,N,V_fsGenerationID
T@"NSString",R,N,V_logicalName
T@"NSString",R,N,V_symlinkContent
T@"BRCItemGlobalID",R,N,V_parentItemGlobalID
T@"NSURL",R,N,V_fileURL
TC,R,N,V_itemScope
TB,R,N,V_isDocumentsFolder
initWithURL:packageRoot:error:
jobsDescription
matchingJobsWhereSQLClause
columns
columnsValues
initWithDBRowID:etag:kind:
isEqualToDownloadJobIdentifier:
itemDBRowID
kind
_kind
_itemDBRowID
TQ,R,N,V_itemDBRowID
T@"NSString",R,N,V_etag
Ti,R,N,V_kind
initWithSyncContext:kind:now:retryQueueKick:
nextDocumentItem
stageID
completedUnitCount
transferSize
transferQOS
_now
_retryQueueKick
deleteDownloadingJobForItem:
_willDownload:operationID:
_bumpThrottleForDownload:throttle:
descriptionForItem:context:
_createDownloadingJobForItem:state:kind:etag:userInitiated:
_appLibraryForDownload:kind:operationID:
_sanitizeRecord:
_finishedDownload:syncContext:operationID:error:
rescheduleJobsPendingWinnerForItem:
rescheduleJobsForPendingDiskSpaceWithAvailableSpace:
rescheduleJobsPendingFavoritesFetchInZone:
_cancelJobs:state:
_finishDownloadCleanup:
cancelAndCleanupItemDownload:kind:etag:
cancelAndCleanupItemDownload:kind:
cancelAndCleanupItemDownloads:
addAliasItem:toDownloadingItem:
updateContentDownloadForMetaOnlyChange:fromEtag:toEtag:
sizeOfActiveDownloads
isDownloadingItem:
hasAdditionsToApplyForItem:serverItem:
makeContentLive:
scheduleContentDownloadForItem:serverItem:userInitiated:
shouldScheduleLosersEvictionForItem:
evictLosersOnItem:atURL:applySchedulerState:
_hasLosersToDelete:serverItem:
scheduleLosersDownloadForItem:serverItem:purgeStaleEntries:applySchedulerState:
applyLosersToItem:serverItem:atURL:applySchedulerState:addedLosers:removedLosers:
hasThumbnailToApplyForItem:
scheduleThumbnailDownloadForItem:serverItem:applySchedulerState:
applyThumbnailToItem:serverItem:atURL:applySchedulerState:
_sendThumbnailsBatch:sizeHint:maxRecordsCount:
inFlightSize
_sendContentsBatch:sizeHint:maxRecordsCount:
_postponeLoserForWinner:etag:
_sendLosersBatch:sizeHint:maxRecordsCount:
_transferStreamOfSyncContext:didBecomeReadyWithMaxRecordsCount:sizeHint:priority:
transferStreamOfSyncContext:didBecomeReadyWithMaxRecordsCount:sizeHint:priority:completionBlock:
_reportDownloadErrorForDocument:error:
_clearDownloadErrorForDocument:
downloadsDeadlineScheduler
_fairScheduler
_activeDownloadsSize
_lastDownloadRefresh
_activeDownloadSizeRefreshInterval
_willRetryOperationProgress
_downloadsDeadlineScheduler
T@"BRCDeadlineScheduler",R,N,V_downloadsDeadlineScheduler
stringFromItemAsString:context:
nowDateFromContext:
nowFromContext:
highlightedString:type:context:
stringFromItemID:context:
stringFromOperationUUID:context:
stringFromErrorString:context:
stringFromError:context:
stringFromDueDate:allowsPast:context:
stringFromDueStamp:allowsPast:context:
stringFromInterval:context:
stringFromCount:showActualCount:suffix:isByteCount:context:
stringFromByteCount:showActualByteCount:suffix:context:
stringFromByteCount:context:
stringFromCount:context:
initWithFile:db:
initWithDumper:
writeLineWithFormat:
highlightedString:type:
pushIndentation
popIndentation
indentationBaseString
setIndentationBaseString:
liveDaemon
setLiveDaemon:
onlyActiveStuff
setOnlyActiveStuff:
dumpTrackedPendingDownloads
setDumpTrackedPendingDownloads:
taskTracker
setTaskTracker:
_indentation
_dumper
_nowDate
_liveDaemon
_onlyActiveStuff
_dumpTrackedPendingDownloads
_indentationBaseString
_taskTracker
T@"PQLConnection",R,N,V_db
T^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq},R,N,V_fp
T@"NSString",&,N,V_indentationBaseString
TB,N,V_liveDaemon
TB,N,V_onlyActiveStuff
TB,N,V_dumpTrackedPendingDownloads
T@"brc_task_tracker",&,N,V_taskTracker
_updateInDB:diffs:
deleteShareAcceptationFault
stageShareAcceptationFaultWithName:
markNeedsTransformIntoNormalFault
initWithFilename:itemID:parentID:appLibrary:clientZone:sharingOptions:
isShareAcceptationFault
asShareAcceptationFault
cancelReset
scheduleReset:
scheduleReset:completionHandler:
_reset:completionHandler:
supportsKeepingClientItemsDuringReset
_performResetAndWantsUnlink:clientTruthBlock:completionBlock:
_performAfterResetServerAndClientPrivateTruthsAndUnlinkData:
_performAfterResetServerAndClientSharedTruthsAndUnlinkData:
_performAfterResetServerAndClientTruthsAndUnlinkData:
_performAfterResetServerAndClientTruthsAndUnlinkDataAndPurgeTheZone:
_cancelAllOperationsForReset
_finishedReset:completionHandler:
scheduleMoveToCloudDocs
scheduleZoneMovesToCloudDocs:
logicalNameWithoutLocalBounce
stagedFileIDForDB
lostStamp
initAsShareAcceptFaultWithName:mode:isDirectory:
setFilename:
setFilename:forcePhysicalName:forceBouncedLogicalName:serverName:
_setParentID:
_setItemScope:
_setCKInfo:
_markClearedFromStage
_moveItemAsideWithUUIDString
_generatedBouncedLogicalFilenameWithBounceNumber:
_migrateTmpBouncedNameToLocalName
_bouncePhysicalNameToRepresentableName
_clearBouncedName
diffAgainstLocalInfo:
updateFilenameFromPath:
_markReserved
_markAlmostDead
updateAsAppLibraryRoot:
_markDead
_markDeadAsSharedTopLevelItemWithDocumentsItemID:
_markFound
_markLostAddingBackoffWithMode:appLibrary:
_markStagedWithFileID:generationID:documentID:
_updateStatMeta:
_markLiveFromStageAsFault:
_markLiveFromStageAsType:
_clearFileID
_clearGenerationID
_updateStatMetaFromServer:
_updateStatAliasMeta:
stagedFileID
stagedGenerationID
physicalName
tmpBouncedNo
processingStamp
rawBouncedLogicalName
setRawBouncedLogicalName:
localChangeCount
oldVersionIdentifier
_localChangeCount
_oldVersionIdentifier
_stagedFileID
_stagedGenerationID
_bouncedLogicalName
_processingStamp
_physicalName
_tmpBouncedNo
T@"NSString",&,N,V_bouncedLogicalName
TQ,R,N,V_localChangeCount
T@"NSString",R,N,V_oldVersionIdentifier
T@"NSNumber",R,N,V_documentID
T@"NSNumber",R,N,V_stagedFileID
TI,R,N,V_stagedGenerationID
T@"NSString",R,N,V_physicalName
T@"NSNumber",R,N,V_tmpBouncedNo
T@"NSNumber",R,N,V_processingStamp
computeUserVisibleStatusOfLiveItemWithParentVisible:parentIsNonDesktopRoot:parentScope:itemFilename:parentFilename:appLibrary:
computeItemScopeFromParentIsRoot:parentIsDocuments:parentScope:logicalName:
extension
T@"BRCItemID",R,N
validateLoggingToFile:
isDead
isLive
isDirectory
isDirectoryFault
isFSRoot
isZoneRoot
isOwnedByMe
isSharedByMe
hasShareIDAndIsOwnedByMe
isShared
isSharedToMe
isSharedToMeTopLevelItem
isSharedToMeChildItem
isTopLevelSharedItem
isChildSharedItem
ownerKey
serverZone
setSharingOptions:
T@"BRCItemGlobalID",R,N
T@"BRCStatInfo",R,N
T@"BRCUserRowID",R,N
T@"BRCAccountSession",R,N
T@"BRCClientZone",R,N
TQ,N
asBRAlias
asDirectory
asDocument
asFSRoot
asSymlink
needsInsert
isFromInitialScan
checkIsInDocumentsScopeWithParent:
isInDocumentOrTrashScope
_refreshAppLibraryFromParent
parentClientZone
isKnownByServer
isKnownByServerOrInFlight
isDeadOrMissingInServerTruth
serverPathMatchItemID
isAlmostDead
isLost
isOnDisk
isReserved
isDirectoryWithPackageName
asSharedToMeTopLevelItem
collaborationIdentifierIfComputable
isDocumentBeingCopiedToNewZone
physicalNameNeedsRename
logicalNameNeedsRename
inheritOSUpgradeNeededFromItem:
needsOSUpgradeToSyncUp
osNameNeededToSyncUp
markNeedsOSUpgradeToSyncUpWithName:
digestDescription
_initWithServerItem:dbRowID:
_initWithLocalItem:
initFromPQLResultSet:error:
_initFromPQLResultSet:session:db:error:
initFromPQLResultSet:session:db:error:
itemParentGlobalID
sideCarInfo
parentItemIDInZone
parentItemOnFS
_updateAppLibraryPristineStatesAfterMarkingDead
_updateAppLibraryPristineStatesAfterCreationOrUpdate
metadataSyncUpMask:
maskForDiffsToSyncUpForZone:sideCarZone:whenClearing:
createSyncUpJob
_syncZoneRowIDs
_updateSyncUpSchedulerWithDiffs:
_updateSharedZoneBoostingWithDiffs:
wasMarkedDead
_insertInDB:dbRowID:
_deleteFromDB:keepAliases:offline:
_isInterestingUpdateForNotifs
_isInterestingUpdateForNotifsWithDiffs:
_ascendItemHierarchyWithBlock:
setOfParentIDs
fetchParentFileIDs
setOfAppLibraryIDsWithReverseAliases
_sendNotificationIfNeededWithDiffs:regather:
triggerNotificationIfNeeded
markForceNotify
_setOrRemoveSmartFolderSpotlightAttributeAt:
setOrRemoveSpotlightAttributeAt:
syncUpError
fromReadOnlyDB
uploadStatus
_hasFieldChangesNotDiffed
_learnItemID:serverItem:
_cheapCheckSavingItem
saveToDB
saveToDBForServerEdit:keepAliases:
_isIndexable
diffAgainstServerItem:
diffAgainstLocalItem:
diffAgainstOriginalItem
_recomputeUserVisibleAndItemScope
_updatePropagatedInfoIfNeeded
updateFromServerItem:
extendedAttributes
_updatePropagatedInfoFromFSAtPath:
markForceNeedsSyncUp
markForceRejected
markRejectedItemRemotelyRevived
forceNeedsSyncUpWithoutDiffs
_markNeedsSyncingUp
markNeedsUploadOrSyncingUp
scheduleSyncDownForOOBModifyRecordsAck
prepareForSyncUpSideCarZone
prepareForSyncUpInZone:
markLatestSyncRequestFailedInZone:
markLatestSyncRequestRejectedInZone:
markLatestSyncRequestAcknowledgedInZone:
resetWhileKeepingClientItems
markItemForgottenByServer
handleUnknownItemError
_markLostWhenReplacedByItem:backoffMode:
markFound
markLostWhenReplacedByItem:
markLostClearGenerationID:backoffMode:
markLostWithoutBackoff
markReserved
markDead
markNeedsDeleteForRescheduleOfItem:
markNeedsDeleteWhenAlreadyDeadInServerTruth
moveAsideLocally
_removeSharedSpotlightAttributesIfNecessary
markRemovedFromFilesystemForServerEdit:
markRenamedUsingServerItem:toRelpath:logicalName:filename:origLogicalNameBeforeBounce:forContentApplyOnly:
markStagedWithFileID:generationID:
markStagedWithFileID:generationID:documentID:
clearFromStage
updateStatMetadataFromServerItem:
updateItemMetadataFromServerItem:appliedSharingPermission:
computedDestinationFilenameFromServerItem:
updateStructuralCKInfoFromServerItem:
markLiveFromStageWithPath:
markMetadataLive
beginBounceAndSaveToDBWithBounceNumber:
markBounceFinished
markBounceFailed
bounceReservedItemWithBounceNumber:
bouncePhysicalNameToRepresentableName
bounceSourceItemWithServerLogicalName:bounceNumber:
needsReading
needsUpload
needsSyncUp
isReadAndUploaded
isIdleOrRejected
isRejected
evictInTask:options:error:
startDownloadInTask:options:error:
_computedUserVisibleStatusAtPath:
syncUpState
orig
localDiffs
notifsRank
_parentZoneRowID
_ownerKey
_syncUpState
_orig
_localDiffs
_minimumSupportedOSRowID
_notifsRank
_knownByServer
_sideCarCKInfo
_serverPathMatchID
_resolvedPath
_forceDelete
_forceDeletedAlready
_forceNotif
T@"BRCAliasItem",R,N
T@"BRCDirectoryItem",R,N
T@"BRCDocumentItem",R,N
T@"BRCDirectoryItem<BRCFSRooted>",R,N
T@"BRCSymlinkItem",R,N
T@"BRCFinderBookmarkItem",R,N
T@"BRCLocalItem<BRCShareAcceptationFault>",R,N
T@"BRCLocalItem<BRCTopLevelShareable>",R,N
T@"BRCLocalItem<BRCSharedToMeTopLevel>",R,N
T@"BRCLocalItem",R,N,V_orig
TQ,R,N,V_dbRowID
TC,R,N
T@"NSDictionary",R,N
T@"NSMutableSet",R,N
T@"BRCLocalStatInfo",R,N,V_st
TI,R,N,V_syncUpState
TS,R,N
TQ,R,N,V_localDiffs
TQ,R,N,V_notifsRank
T@"NSError",R,N
T@"NSString",R,N,V_path
T@"BRCUserRowID",R,N,V_ownerKey
T@"BRCServerZone",R,N,V_serverZone
T@"BRCClientZone",R,N,V_clientZone
TQ,N,V_sharingOptions
applyToFileDescriptor:error:
shortDescription
loadXattrsFromFD:withMaximumSize:error:
loadXattrsFromFD:structuralBlob:contentBlob:localBlob:withMaximumSize:error:
removeXattrsOnFD:includingContentRelated:error:
brc_getterForAttribute:
brc_attributesValues:localItem:
syncContextDidBecomeForeground:
syncContextDidBecomeBackground:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveToken:forInfo:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
didChangeSyncStatusForContainerMetadataForContainer:
didChangeSyncStatusForZoneHealthForContainer:
willInitialSyncDownForClientZone:
didInitialSyncDownForClientZone:
initWithAccountSession:pushWorkloop:
enablePushNotifications
_newSyncDeadlineSourceWithName:
_unscheduleClientZone:
closeContainers
setup
schedulePeriodicSyncIfNecessaryInGroup:
scheduleSyncDownForContainerMetadataWithGroup:
scheduleSyncDownForSharedDatabaseImmediately:
scheduleSyncDownForZoneHealthWithGroup:
scheduleSyncDownForSideCarWithGroup:
redoZonePCSPreperation
scheduleSyncUpForSideCar
_syncScheduleForContainersMetadata
_syncScheduleForSharedDatabase
_syncScheduleForZoneHealth
_syncScheduleForSideCar
_printSyncErrorIfNecessaryWithThrottle:context:error:now:
dumpToContext:includeAllItems:db:
receivedUpdatedZoneHealthServerChangeToken:requestID:
finishedZoneHealthSyncDownWithRequestID:error:
internalZoneSyncDownAnalyticsErrors
internalZoneSyncUpAnalyticsErrors
receivedUpdatedSideCarServerChangeToken:requestID:
_scheduleCrossZoneMovePCSPrep
_scheduleUpdatePushTopicsRegistration
refreshPushRegistrationAfterAppsListChanged
_updatePushTopicsRegistration
_connection:didReceiveIncomingMessage:
notifyAfterNextZoneHealthSyncDown:
initialSyncDownGroup
syncGroup
syncUpBudget
syncScheduler
containerMetadataPersistedState
zoneHealthSyncPersistedState
sideCarSyncPersistedState
_containerMetadataSyncSource
_sharedDatabaseSyncSource
_zoneHealthSyncSource
_sideCarSyncSource
_pushSource
_environmentName
_pushToken
_pushConnection
_containerMetadataPersistedState
_containerMetadataSyncState
_containerMetadataSyncOperation
_containerMetadataSyncDownThrottle
_containerMetadataSyncUpThrottle
_lastContainerMetadataSyncDownError
_lastContainerMetadataSyncUpError
_sharedDBSyncState
_sharedDatabaseSyncOperation
_sharedDatabaseSyncDownThrottle
_lastSharedDatabaseSyncDownError
_zoneHealthPersistedState
_zoneHealthSyncState
_zoneHealthSyncOperation
_zoneHealthSyncDownThrottle
_zoneHealthSyncUpThrottle
_lastZoneHealthSyncDownError
_lastZoneHealthSyncUpError
_sideCarSyncPersistedState
_sideCarSyncState
_sideCarSyncOperation
_sideCarSyncDownThrottle
_sideCarSyncUpThrottle
_lastSideCarSyncDownError
_lastSideCarSyncUpError
_periodicSyncOperation
_lastPeriodicSyncDate
_migrateZonePCSOperation
_migrateZonePCSSource
_nextZoneHealthSyncDownBarriers
_initialSyncDownGroup
_syncGroup
_syncUpBudget
_syncScheduler
T@"NSObject<OS_dispatch_group>",R,N,V_initialSyncDownGroup
T@"NSObject<OS_dispatch_group>",R,N,V_syncGroup
T@"BRCSyncBudgetThrottle",R,N,V_syncUpBudget
T@"BRCDeadlineScheduler",R,N,V_syncScheduler
T@"BRCContainerMetadataSyncPersistedState",R,N,V_containerMetadataPersistedState
T@"BRCZoneHealthSyncPersistedState",R,N,V_zoneHealthPersistedState
T@"BRCSideCarSyncPersistedState",R,N,V_sideCarSyncPersistedState
contentDiffersWithSignature:
isEquivalentToSignature:
versionIdentifier
hasOldVersionIdentifier
isPackageObj
sizeObj
diffAgainstLocalVersion:
initForPackage:
initWithServerVersion:
initWithLocalVersion:
shouldRecreateUploadJobGivenDiffs:
isMissingUploadsWithDiffs:isDocumentSyncPaused:isDocumentResumingSync:
_clearSignatures:isPackage:
updateServerFieldsFromVersion:
versionSignature
uploadedAssets
setUploadedAssets:
uploadError
setUploadError:
prevZoneGlobalID
setPrevZoneGlobalID:
setOldVersionIdentifier:
_uploadedAssets
_uploadError
_prevZoneGlobalID
T@"CKRecord",&,N,V_uploadedAssets
T@"NSError",&,N,V_uploadError
T@"BRCItemGlobalID",&,N,V_prevZoneGlobalID
T@"BRFieldContentSignature",R,N
T@"NSString",&,N,V_oldVersionIdentifier
isDocumentAutomaticallyEvictableWithExtension:
isDocumentAutomaticallyEvictableWithName:
shouldDocumentBeGreedyWithName:
anyReverseAliasWithUnsaltedBookmarkData:inAppLibrary:
reverseAliasEnumeratorWithUnsaltedBookmarkData:session:
reverseAliasEnumeratorWithRelativePath:
anyReverseAliasInAppLibrary:toRelativePath:
nextPausedDocumentBatchEnumeratorWithBundleID:fromRowID:batchSize:session:db:
autoResumeSyncPausedDocumentsOnTimeoutWithSession:
hasFileIDForUpload
aliasItemID
hasLocalContent
isEvictable
isAutomaticallyEvictable
isVisibleIniCloudDrive
shouldBeGreedy
shouldHaveThumbnail
shouldTransferThumbnail
isDownloadRequested
isDownloadRequestedForThumbnail
queryItemStatus
downloadStatus
reverseAliasEnumerator
anyReverseAliasInAppLibrary:
learnThumbnailSignatureFromLiveVersion:
clearVersionSignatures:isPackage:
syncContextUsedForTransfers
stageFaultForCreation:name:size:isPackage:
stageFaultForCreation:serverItem:
updateDesiredVersionWithServerItem:options:needsSave:
updateDesiredVersionWithServerItem:diffs:options:needsSave:
clearDesiredVersion
updateContentsCKInfoAndDeviceIDFromServerItem:
updateVersionMetadataFromServerItem:preventVersionDiffs:
forceiWorkConflictEtag:
forceVersionConflictByClearkingCKInfo
forceiWorkSharingInfoResend
appDidResolveConflictLoserWithEtag:
markNeedsReading
markForceUpload
markUploadedWithRecord:
markOverQuotaWithError:
_markAsDeadTombstoneWithPreviousGlobalID
_insertTombstoneForPreviousZoneGlobalID
supportsServerSideAssetCopies
markCrossZoneMovedForServerAssetCopyWithParentItem:path:
contentRecordNeedsForceAllFieldsWhenDeadInServerTruth:
conflictLoserState
removeLiveConflictLoserEtag:
addResolvedConflictLoserEtag:
_updateUploadJobIfNeededWithDiffs:
_updateReadThrottleIfNeededForRowID:forCreation:
_nukePackageItemsFromDB:
_updateRecursivePropertiesInDB:dbRowID:diffs:
_needsSyncBubbleRecomputeForError:origError:
isPausedFromSync
isResumingSync
resumeSyncComplete
pauseFromSyncWithTimeout:forBundleID:error:
resumeSyncForBundleID:dropLocalChanges:error:
currentVersion
desiredVersion
liveConflictLoserEtags
setLiveConflictLoserEtags:
resolvedConflictLoserEtags
shouldAutomaticallyDownloadThumbnail
liveThumbnailSignature
setLiveThumbnailSignature:
syncPausedByBundleID
syncPausedExpireTS
fileIDForUpload
generationIDForUpload
_currentVersion
_desiredVersion
_syncPausedByBundleID
_syncPausedExpireTS
_shouldAutomaticallyDownloadThumbnail
_liveConflictLoserEtags
_resolvedConflictLoserEtags
_fileIDForUpload
_generationIDForUpload
_liveThumbnailSignature
T@"BRCAliasItem",R,D,N
T@"BRCDirectoryItem",R,D,N
T@"BRCLocalVersion",R,N,V_currentVersion
T@"BRCDesiredVersion",R,N,V_desiredVersion
T@"NSString",R,N,V_syncPausedByBundleID
T@"NSNumber",R,N,V_syncPausedExpireTS
T@"NSSet",&,N,V_liveConflictLoserEtags
T@"NSSet",R,N,V_resolvedConflictLoserEtags
TB,R,N,V_shouldAutomaticallyDownloadThumbnail
T@"NSData",&,N,V_liveThumbnailSignature
T@"NSNumber",R,N,V_fileIDForUpload
T@"BRCGenerationID",R,N,V_generationIDForUpload
T@"NSString",R,D,N
initWithTracker:queue:startCode:endCode:
setTracker:
sections
setSections:
startTracingCode
setStartTracingCode:
endTracingCode
setEndTracingCode:
setQueue:
_startTracingCode
_endTracingCode
_sections
T@"brc_task_tracker",&,N,V_tracker
TQ,N,V_sections
Ti,N,V_startTracingCode
Ti,N,V_endTracingCode
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
__itemAtURL:didDisappearWithPurposeID:
itemDidChangeAtPath:logicalFilename:
itemDidAppearAtPath:logicalFilename:
itemDidDisappearAtPath:logicalFilename:
itemAtPath:origLogicalName:didBounceToNewLogicalName:
itemAtPath:logicalFilename:didMoveToPath:logicalFilename:hasContentUpdate:
initWithSession:forRead:doneHandler:
_willRequestCoordinationWithContext:url1:url2:
_didObtainCoordination:context:url1:url2:handler:fcHandler:error:
scheduleReadOfItemAtURL:queue:taskTracker:accessor:
scheduleDeleteOfItemAtURL:queue:taskTracker:accessor:
scheduleUpdateOfItemAtURL:queue:taskTracker:accessor:
scheduleRenameOfItemAtURL:toItemAtURL:contentUpdate:queue:taskTracker:accessor:
isUpdateForReconnecting
setIsUpdateForReconnecting:
forRead
_startStamp
_url1
_url2
_doneHandler
_isUpdateForReconnecting
_forRead
TB,N,V_isUpdateForReconnecting
TB,R,N,V_forRead
_updateContainerMetadataFromRecord:stripIcons:
initWithSession:state:
performAfterCreatingZoneIfNeeded:
performAfterFetchingRecordChanges:
performAfterFetchingAssetContents:
_completedWithServerChangeToken:requestID:
shouldFetchAnotherBatch
_recordIDsForDesiredAssets
_desiredKeysForDesiredAssets
_recordIDsToVersionETagsForDesiredAssets
_containerIDsUpdated
_shouldFetchAnotherBatch
TB,R,N,V_shouldFetchAnotherBatch
secondaryRecordID
transferID
progress
progressPublished
setProgressPublished:
doneSize
setDoneSize:
record
setRecord:
secondaryRecord
setSecondaryRecord:
T@"CKRecordID",R,N
T@"BRCProgress",R,N
T@"CKRecord",&,N
initWithDocument:stageID:transferSize:
throttleID
_throttleID
_totalSize
_stageID
_progressPublished
_record
_doneSize
_progress
Tq,R,N,V_throttleID
T@"NSString",R,N,V_stageID
TQ,R,N,V_totalSize
T@"BRCProgress",R,N,V_progress
TB,N,V_progressPublished
TQ,N,V_doneSize
T@"CKRecord",&,N,V_record
initWithSyncContext:clientZone:
addItem:stageID:record:transferSize:
sendTransferCompletionCallBack:error:
mainWithTransfers:
_uploadRecordsByID:
actionPrettyName
perUploadCompletionBlock
setPerUploadCompletionBlock:
_perUploadCompletionBlock
T@?,C,V_perUploadCompletionBlock
initWithPendingChangesStream:serverTruthCallback:clientTruthCallback:
pendingChangesStream
serverTruthCallback
clientTruthCallback
_pendingChangesStream
_serverTruthCallback
_clientTruthCallback
T@"BRCPendingChangesStream",R,N,V_pendingChangesStream
T@?,R,N,V_serverTruthCallback
T@?,R,N,V_clientTruthCallback
dumpTablesToContext:includeAllItems:error:
dumpStatusToContext:error:
validateStructureLoggingToFile:db:
validateItemsLoggingToFile:db:
isSharedZone
isPrivateZone
T@"BRCZoneRowID",&,N
asPrivateZone
asSharedZone
metadataSyncContext
metadataSyncContextIfExists
ownerName
zoneID
initWithMangledID:dbRowID:plist:session:
activateWithClientZone:offline:
deactivateFromClientZone
_saveItemID:stat:serverMetrics:record:origName:base:no:ext:
_saveItemID:stat:serverMetrics:record:error:
_saveItemID:version:record:iWorkSharingOptions:
_saveEditedDirOrDocStructureRecord:error:
_saveEditedDocumentContentRecord:error:
_saveEditedSymlinkRecord:error:
_saveEditedFinderBookmarkRecord:error:
_saveEditedAliasRecord:zonesNeedingAllocRanks:error:
_saveEditedShareRecord:error:
_saveEditedRecord:zonesNeedingAllocRanks:error:
_markShareIDDead:
_markItemDeadForRecordID:
_savePendingChangesEditedStructureRecordsIgnoringRecordIDs:zonesNeedingAllocRanks:pendingChangeStream:
_savePendingChangesEditedContentRecordsIgnoringRecordIDs:zonesNeedingAllocRanks:pendingChangeStream:
_savePendingChangesDeletedRecordIDsIgnoringRecordIDs:pendingChangeStream:
_savePendingChangesSharesIgnoringRecordIDs:zonesNeedingAllocRanks:pendingChangeStream:
_saveEditedStructureRecords:zonesNeedingAllocRanks:
_saveDeletedRecordIDs:
_reportCantSaveProblem:record:
_saveEditedContentRecords:zonesNeedingAllocRanks:
_saveEditedShareRecords:deletedShareRecordIDs:zonesNeedingAllocRanks:
_recoverFromCorruptShareOptionsWithItemType:itemID:parentID:sharingOptions:
_recomputeMinLastUsedTime
allocateRanksWhenCaughtUp:
checkIfFinishedFullSync
handleMovedZoneNames:
didSyncDownRequestID:serverChangeToken:editedRecords:deletedRecordIDs:deletedShareRecordIDs:allocRankZones:caughtUp:pendingChanges:
didListDirectoryChangesWithResults:pendingFetchChanges:
failedListingDirectoryChanges:serverTruthCallback:clientTruthCallback:folderItemID:
failedListItemIDs
_collectTombstoneForRank:
collectTombstoneRanks:
resetServerTruthAndDestroyZone:
resetServerTruth
deleteAllContentsOnServerWithCompletionBlock:
deleteAllContentsOperation
shouldRecreateServerZoneAfterError:
serverZoneIsCreated
forceMoveToCloudDocs
saveQueryRecords:zonesNeedingAllocRanks:error:
isCloudDocsZone
itemByItemID:db:
itemByItemID:
itemsEnumeratorWithDB:
directDirectoryChildItemIDsOfParentEnumerator:
changeState
_metadataSyncContext
_failedListDirectoryOperations
_directoriesCreatedLastSyncUp
T@"BRCServerChangeState",R,V_changeState
T@"NSString",R,N,V_zoneName
T@"CKRecordZoneID",R,N
T@"BRCZoneRowID",&,N,V_dbRowID
initWithDatabaseURL:
setUpDatabaseWithError:
addRecord:
flushAndClose
backupManifestEnumerator:
populateNewColumnsWithBasePath:
populateNewColumnsInDatabase:forRecord:basePath:
attachDatabase:error:
docIDForURL:
updateAttachedDatabase
setForeignKeys:enabled:
negateIDs:
updateIDs:
clearStagedIDs:
fixUpBackupDetector:
fixUpClientState:
database
setDatabase:
setDatabaseURL:
setUrlPropertiesToFetch:
attachedDatabaseURL
setAttachedDatabaseURL:
_database
_databaseURL
_urlPropertiesToFetch
_attachedDatabaseURL
T@"NSURL",&,N,V_databaseURL
T@"PQLConnection",&,N,V_database
T@"NSArray",&,N,V_urlPropertiesToFetch
T@"NSURL",&,N,V_attachedDatabaseURL
brc_dbAccountDSIDForPath:
brc_currentCachesDir
brc_accountIDPathForAccountPath:
ubiquityTokenSaltFilename
brc_locateUbiquityTokenSaltInOldAccountPath:
br_currentMobileDocumentsDir
br_currentMobileDocumentsDirWithRefreshCache:
brc_groupDownloadStagePath
contentsRecordIDInZoneID:
directoryStructureRecordIDInZone:
documentStructureRecordIDInZoneID:
validatingDirectoryReferenceInZone:
pcsChainParentReferenceInZone:
pcsChainDocumentStructureReferenceInZoneID:
structureRecordIDForItemType:zone:aliasTargetZoneIsShared:
sideCarRecordNameWithZone:
sideCarRecordIDWithZone:
_directoryRecordNameWithSession:
directoryReferenceInZone:action:
structureRecordPrefixForItemType:targetZoneShared:
shareAliasRecordIDFromTargetItemID:zone:hasDerivedShareAlias:
contentsRecordID
baseContentsRecord
baseStructureRecord
structureRecordBeingDeadInServerTruth:stageID:shouldPCSChainStatus:
sideCarRecordID
baseSideCarRecord
serializeStructuralPluginHints:
structureRecordID
targetReferenceWithItemID:targetZone:isFolderShare:
fillStructureRecord:inZone:itemID:ckInfo:parentID:targetItemID:targetZone:diffs:isFolderShare:beingDeadInServerTruth:shouldPCSChainStatus:
folderRootStructureRecord
brc_isAppLibraryRootRecordID
brc_appLibraryRootZoneName
brc_isAppLibraryDocumentsRecordID
brc_appLibraryDocumentsZoneName
brc_isZoneRootRecordID
_itemIDWithLibraryRowID:session:
brc_itemIDWithSession:
brc_itemIDWithSession:error:
brc_itemIDOfTargetWithLibraryRowID:session:
brc_itemType
locateSideCarServerZone:withSession:
_deserializeValue:forKey:encrypted:expectClass:allowNil:errorDescription:
deserializeFilename:basename:bounceno:extension:userInfo:error:
deserializeAliasInfo:serverZone:error:
_deserializeRootSharingOptions:
deserializeiWorkSharingOptions:error:
deserializeFolderSharingOptions:
deserializeStatInfo:serverMetrics:itemID:session:error:
deserializeSymlinkTarget:error:
deserializeVersion:fakeStatInfo:clientZone:error:
deserializeSideCarInfo:error:
_locateSideCarServerZone:withShareAliasReference:withSession:
locateSideCarServerZone:shareRecordName:withSession:
serializeSystemFields:
serializeSystemFields:includeCZMEtag:
serializeFinderTags:forCreation:
serializeFilename:forCreation:
serializeFilename:forCreation:setExtension:
serializeFilename:forCreation:setExtension:inSharedAlias:
serializeStatInfo:diffs:stageID:deadInServerTruth:shouldPCSChainStatus:
serializeVersion:diffs:deadInServerTruth:
serializeSideCarInfo:filenameExtension:diffs:deadInServerTruth:
_createAppLibraryIfNecessary:session:
processAppLibraryDataWithMovedZoneNames:serverZone:isDeltaSync:
brc_isInterestingRecordForSyncDown
brc_isInterestingRecordForSave
brc_oplockMergeEtag
brc_updateDroppedReason
brc_safeToGetURL
brc_lastModifiedUserRecordNameWithCurrentUserRecordName:personNameComponents:
brc_currentUserOwnsLastEditorDeviceWithSession:
brc_lastEditorDeviceName
sanitizeShortTokenFields
rootDirectoryRecordForZoneID:
rootAppLibraryRecordForAppLibraryID:zoneID:
desiredKeysWithMask:
brc_containerMetadataPropertiesData
brc_containerMetadataIconNames
brc_containerMetadataIconPaths
brc_containerMetadataRecordWithContainer:
_brc_isOwner
deserializeSharingOptions:error:
brc_containerMetadataZoneID
brc_zoneHealthZoneID
brc_sideCarZoneID
brc_isfakeRecordWithErrorMarkerFor20716676
brc_fakeRecordWithErrorMarkerFor20716676
isFolderShare
brc_sharedRootExtension
brc_sharedRootDisplayName
brc_sharedLinkDisplayName
brc_updateWithLogicalName:isFolder:
itemUndergoingCZMToAnotherZone:si:clientZone:rank:scheduler:zone:
appLibraryUndergoingCZM:zone:rank:parentID:scheduler:session:
_handleApplyingDeletedUnlistedDirectoryIfNecessary:localItem:parent:
serverItemWouldBeParentedToDeadFolder:si:rank:scheduler:zone:diffs:
serverItemDeadWithNoLiveLocalItem:si:rank:scheduler:clientZone:zone:
localItemHasUnsyncedChanges:si:rank:scheduler:clientZone:zone:isDeleteOfShareRoot:session:
shouldForceApplyContentForItem:
checkEarlyExitsPriorToApplying:si:rank:scheduler:zone:session:isDeleteOfShareRoot:diffs:clientZone:
handleApplyChangesForUnliveServerItem:isDeleteOfShareRoot:rank:scheduler:zone:session:
deletingShareRoot:localItem:
handleNonRevivedItemIfNecessary:si:rank:scheduler:zone:
handleEtagsChangesOnly:si:rank:scheduler:zone:diffs:needsSave:
br_getDomainIdentifierForACAccountID:
br_getDomainIdentifierForACAccount:
br_getDomainForDefaultProviderWithIdentifier:
br_getDomainForEnterpriseProviderWithIdentifier:
_br_getDomainForProvider:WithIdentifier:
br_sharedProviderManager
br_sharedProviderManagerWithDomainID:
_br_sharedDefaultProviderManager
br_sharedEnterpriseProviderManagerWithDomainID:
syncUpOperationForZone:maxCost:retryAfter:
prepareWithMaxCost:retryAfter:
initWithZone:
_performPCSChainOperationIfNecessaryWithCompletion:
_performModifyRecordsOrPCSChainOperationWithCompletion:
performShareUpdate:
_performShareUpdateAndModifyRecordsWithCompletion:
_scheduleShareUpdateAndModifyRecordsAndZoneCreationOperation
_setSharingFieldsOnContentRecord:withProtectionData:baseToken:routingKey:forceOverwrite:
_recordIsIWorkShareable:
_performUpdateSharingProtectionDataIfNecessary:
recordsToSave
setRecordsToSave:
packagesInFlight
setPackagesInFlight:
createdAppLibraryNames
deletedRecordIDs
setDeletedRecordIDs:
iworkUnsharedShareIDs
setIworkUnsharedShareIDs:
renamedShareIDsToNames
setRenamedShareIDsToNames:
recordsNeedingNewSharingProtectionInfo
setRecordsNeedingNewSharingProtectionInfo:
recordsNeedingUpdatedSharingProtectionInfo
setRecordsNeedingUpdatedSharingProtectionInfo:
recordIDsToDeleteToEtags
setRecordIDsToDeleteToEtags:
pluginFieldsForRecordDeletesByID
setPluginFieldsForRecordDeletesByID:
itemNeedingPCSChaining
setItemNeedingPCSChaining:
conflictLosersToResolveByRecordID
setConflictLosersToResolveByRecordID:
setStageID:
syncUpCompletionBlock
setSyncUpCompletionBlock:
cost
setServerZone:
encounteredErrorOnPCSChainedItem
_requestID
_encounteredErrorOnPCSChainedItem
_cost
_recordsToSave
_packagesInFlight
_createdAppLibraryNames
_deletedRecordIDs
_iworkUnsharedShareIDs
_renamedShareIDsToNames
_recordsNeedingNewSharingProtectionInfo
_recordsNeedingUpdatedSharingProtectionInfo
_recordIDsToDeleteToEtags
_pluginFieldsForRecordDeletesByID
_itemNeedingPCSChaining
_conflictLosersToResolveByRecordID
_syncUpCompletionBlock
T@"BRCServerZone",&,N,V_serverZone
T@"NSMutableArray",&,N,V_packagesInFlight
T@"NSMutableArray",&,N,V_recordsToSave
T@"NSMutableOrderedSet",&,N,V_deletedRecordIDs
T@"NSMutableArray",&,N,V_iworkUnsharedShareIDs
T@"NSMutableDictionary",&,N,V_renamedShareIDsToNames
T@"NSMutableArray",&,N,V_recordsNeedingNewSharingProtectionInfo
T@"NSMutableArray",&,N,V_recordsNeedingUpdatedSharingProtectionInfo
T@"BRCLocalItem",&,N,V_itemNeedingPCSChaining
T@"NSMutableDictionary",&,N,V_recordIDsToDeleteToEtags
T@"NSMutableDictionary",&,N,V_pluginFieldsForRecordDeletesByID
T@"NSMutableDictionary",&,N,V_conflictLosersToResolveByRecordID
T@"NSString",&,N,V_stageID
Tf,R,N,V_cost
T@"NSMutableArray",R,N,V_createdAppLibraryNames
T@?,C,N,V_syncUpCompletionBlock
TB,R,N,V_encounteredErrorOnPCSChainedItem
newTelemetryEventInZoneWithMangledID:
newTelemetryEventInZoneWithMangledID:fromError:errorDescription:itemIDString:
newSyncUpBackoffRatioSummaryEventWithNumberOfFailedZones:
newSyncUpBackoffDelaySummaryEventWithNumberOfFailedZones:
newFolderSharingCountMismatchEventWithCount:zoneMangledID:
newMissingPushEventWithNumberOutOfSync:
newPermanentlyInconsistentEventWithZoneMangledID:
newDroppedEventWithCount:
newTestMetricEventWithMagnitude:
newShareAliasInSharedFolderEventWithZoneMangledID:
newZoneResetEventWithZoneMangledID:lastSyncDate:error:errorDescription:
newDBResetEventWithError:description:
newMissingApplyJobEventWithNumberMissing:
newMissingSyncUpJobEventWithNumberMissing:
newMissingUploaderJobEventWithNumberMissing:
newMissingReaderJobEventWithNumberMissing:
newMissingDownloaderJobEventWithNumberMissing:
newCorruptPackageDownloadEventWithZoneMangledID:error:itemIDString:
newChainedDirectoryMissingChainPCSEventWithZoneMangledID:itemIDString:
newFolderSharePCSChainingEventWithTime:zoneMangledID:itemIDString:error:errorDescription:
newShareAcceptationEventWithLastStep:zoneMangledID:itemIDString:error:
newSyncBoostingProblemCountWithProblemCount:
newFSEventToSyncUpEventWithDuration:
newUserDownloadEventWithDuration:
newDeepScanEventWithReason:appLibrary:
newOperationTimedOutEventWithTime:type:nonDiscretionary:hasForegroundClients:
newQBSOperationPrformanceEventWithTime:type:recordsFetched:recordsFetchedTotalMetadataSize:xattrsFetchedTotalSize:
newFileBouncedManyTimes
newFullyConsistentEvent
newFileChecksumMismatchEventWithZoneMangledID:itemIDString:
newPackageChecksumMismatchEventWithZoneMangledID:itemIDString:
newFileReadErrorWithError:zoneMangledID:itemIDString:
newChildCountMismatchEventWithZoneMangledID:itemIDString:magnitude:
newRecursiveItemCountMismatchEventWithZoneMangledID:itemIDString:magnitude:
newShareAliasCountMismatchEventWithZoneMangledID:itemIDString:magnitude:
newShareCountMismatchEventWithZoneMangledID:itemIDString:magnitude:
newMissingShareAliasEventWithZoneMangledID:itemIDString:
newConsistencyCheckerFailedEvent
newCATotalErrorCountEventWithCount:
newCASyncUpZoneErrorCountEventWithCount:
newCASyncDownErrorCountEventWithCount:
newCASyncUpItemErrorCountEventWithCount:
newCAUploadErrorCountEventWithCount:
newCADownloadErrorCountEventWithCount:
newCASyncUpZoneErrorEventWithError:pcsChained:zoneMangledID:
newCASyncDownErrorEventWithError:pcsChained:zoneMangledID:
newCAUploadErrorEventWithError:pcsChained:sharedZone:count:
newCADownloadErrorEventWithError:pcsChained:sharedZone:count:
newCASyncUpItemErrorEventWithError:pcsChained:sharedZone:count:
newMissingAssetContentEventWithRecordID:
newQBSDirFaultsCountEvent:serverTruthDirFaultCount:serverTruthDirCount:timeSinceLogin:serverTruthTotalItemsCount:zonesNeverFullSync:
newIntEvent:eventGroupUUID:value:
newLongEvent:eventGroupUUID:value:
newLongEvent:eventGroupUUID:value:round:
newDoubleEvent:eventGroupUUID:value:
newBoolEvent:eventGroupUUID:value:
newNSErrorEvent:eventGroupUUID:value:
newTimestampEvent:eventGroupUUID:value:
newCiconiaReportEvent:state:
resolvedOpenRelpathForPath:mustExist:errcode:
resolvedOpenRelpathForPath:mustExist:allowResolveInPkg:errcode:
_resolvePathInMobileDocsRoot:appLibrary:
resolvePathAdditionalMetadata:appLibrary:
brc_syncOperationErrorKind
initWithMangledID:isSyncDown:
updateAfterSchedulingTaskWithMinimumDelay:
updateAfterSchedulingTask
updateForClearingOutOfQuota
updateForError:
clear
nextTry
delay
isSyncDown
setMangledID:
lastErrorKind
_isSyncDown
_lastErrorKind
_delay
_nextTry
Td,R,N,V_delay
Td,R,N,V_nextTry
TB,R,N,V_isSyncDown
Ti,R,N,V_lastErrorKind
T@"BRMangledID",&,N,V_mangledID
lastMinute
lastHour
lastDay
updateForTime:
consume:
_timeToLoseAmount:count:
nextDateWithBudgetWithDefaults:
availableBudgetWithDefaults:
debugDescriptionWithDefaults:
_values
Tf,R,N
backoffRatio
newSyncOperationWithError:
_totalSyncOperations
_failedSyncOperations
options
_options
Tc,R,N,V_options
_old_privateAppLibraryByZoneName:db:
_appLibraryEnumeratorForZoneRowID:db:
itemIDString
initWithUUID:
initWithRootObject:
initWithUUIDObject:
_initAsLibraryRootWithAppLibraryRowID:enclosureUUID:
_appLibraryRowID
_uuid
_createBaseItemWithImportObject:error:
_globalItemByDocumentID:
_globalItemByFileID:
_shouldRejectItemWithName:templateItem:isDatalessDocument:existingItem:
_isDesktopOrDocumentsItem:
capabilityToMoveItem:toNewParentItem:error:
_changeBasicFieldsOnItem:fields:template:
_updateCiconiaDatabaseForBouncing:existingItem:
_extractBookmarkDataFromTemplateItem:isTrashBookmark:
_parseBookmarkXattrsOnTemplateItemIfNecessary:fileURL:
_locateTemplateItemFromFPFSImport:fields:
_parseIdentityXattrsOnTemplateItemIfNecessary:options:fileURL:fields:
_findCollidingItemWithTemplateItem:parentItem:logicalName:error:
_handleCollisionIfNecessaryWithTemplateItem:parentItem:logicalName:fileURL:options:error:
_locateMatchingItemForTemplateItem:parentItem:logicalName:options:fileURL:fields:shouldReject:additionalAttrs:error:
_createAndInsertNewItemWithImportObject:parentItem:fields:templateItem:fileURL:options:additionalAttrs:error:
importAppLibraryFromTemplateItem:
importNewItemAtURL:logicalName:parentItem:templateItem:fields:options:additionalItemAttributes:error:
createAndImportNewDirectoryWithLogicalName:parentItem:error:
_getOrCreateTrashItemInAppLibrary:error:
_trashItem:error:
_untrashItem:toParentFileObjectID:error:
_processParentAndFilenameIfNecessaryWithLocalItem:changedFields:templateItem:error:
_learnEtagsIfNecessaryWithItem:changedFields:baseVersion:
changeItem:baseVersion:changedFields:newValues:contents:options:additionalAttrs:clearCKInfoOnSyncUp:error:
_markNextChildBatchDead:persistedState:batchSize:
_propagateFieldsToNextChildBatch:persistedState:minRowID:batchSize:
_processIngestBatch:minRowID:
_cleanItemBatchAfterMigrationToFPFSIfNecessary
_childPropagationSource
_currentPropagationObject
_currentPropagationMinRowID
asPrivateClientZone
asSharedClientZone
_decreaseSyncUpBatchSizeAfterError
_increaseSyncUpBatchSizeAfterSuccess
initWithMangledID:dbRowID:db:plist:session:initialCreation:
_recreateSyncBudgetsAndThrottlesIfNeeded
associateWithServerZone:
associateWithServerZone:offline:
scheduleResetServerAndClientTruthsForReason:
scheduleResetServerAndClientTruthsForReason:completionHandler:
handleZoneLevelErrorIfNeeded:
itemCountPendingUploadOrSyncUpAndReturnError:
sizeOfItemsNeedingSyncUpOrUploadAndReturnError:
registerAllItemsDidUploadTracker:
unregisterAllItemsDidUploadTracker:
disconnectNSMDQListenerAsync
_forDBUpgrade_setStateBits:clearStateBits:
isSyncBlocked
isSyncBlockedBecauseAppNotInstalled
isSyncBlockedBecauseOSNeedsUpgrade
isEqualToClientZone:
itemByDocumentID:
itemByDocumentID:db:
itemByFileID:
itemByFileID:db:
serverItemByParentID:andLogicalName:
serverItemByParentID:andLogicalName:db:
itemByParentID:andLogicalName:
itemByParentID:andLogicalName:db:
itemByParentID:andPhysicalName:db:
itemByParentID:andPhysicalName:
reservedItemByParentID:andLogicalName:
reservedItemByParentID:andLogicalName:db:
faultByParentID:andLogicalName:
faultByParentID:andLogicalName:db:
faultByParentID:andPhysicalName:
faultByParentID:andPhysicalName:db:
existsByParentID:andCaseInsensitiveLogicalName:
existsByParentID:andCaseInsensitiveLogicalName:excludingItemID:
existsByParentID:andCaseInsensitiveLogicalName:db:
existsByParentID:andCaseInsensitiveLogicalName:excludingItemID:db:
serverItemTypeByItemID:db:
hasItems
itemsWithInFlightDiffsEnumerator
hasItemsWithInFlightDiffs
documentsNotIdleEnumeratorWithDB:
enumerateFaultsAsyncWithBlock:batchSize:
_enumerateFaultsWithBlock:rowID:batchSize:
_faultsEnumeratorFromRow:batchSize:
didClearOutOfQuota
syncState
setSyncStateBits:
clearSyncStateBits:
createCloudKitZoneWithGroup:completion:
_createCloudKitZoneWithGroup:completion:
addSyncDownDependency:
removeSyncDownDependency:
_blockSyncDownOnStitchingOperations
syncDownImmediately
_startSync
scheduleSyncUp
scheduleSyncDownWithGroup:
scheduleSyncDown
scheduleSyncDownFirst
resetSyncBudgetAndThrottle
clearSyncUpError
prepareDirectoryForSyncUp:
directoryItemIDsCreatedLastSyncUp
_markLatestSyncRequestFailed
_markRequestIDAcked
nextSyncUpRequestID
learnCKInfosFromSavedRecords:isOutOfBandModifyRecords:
_syncUpOfRecords:createdAppLibraryNames:didFinishWithError:errorWasOnPCSChainedItem:
syncThrottles
notifyClient:afterNextSyncDown:
syncDownOperation:didFinishWithError:status:
_fixupMissingCrossMovedItems
listedUpToRank:
didSyncDownRequestID:maxApplyRank:caughtUpWithServer:syncDownDate:
_crossZoneMoveDocumentsToZone:
_hasAllItemsDidUploadHandlers
_allItemsDidUploadWithError:
recomputeAllItemsDidUploadState
handleRootRecordDeletion
didGCTombstoneRanks:
didApplyTombstoneForRank:
flushAppliedTombstones
hasCompletedInitialSyncDownOnce
_checkIfEnumeratorContainsNonDiscretionaryOp:
_hasNonDiscretionaryServerStitchingOperation
_registerServerStitchingOperation:
_registerListOperation:
cancelListOperationAndReschedule:
_blockLowPriorityStitchingOperationsForOperation:
_registerFetchParentChainOperation:
cancelFetchParentChainOperationAndReschedule:
_registerLocateRecordOperation:
cancelLocateRecordOperationAndReschedule:
_isSideSyncOperationBlockedWithName:
fetchDirectoryContentsIfNecessary:isUserWaiting:rescheduleApplyScheduler:
fetchRecursiveDirectoryContentsIfNecessary:isUserWaiting:rescheduleApply:
fetchParentChainIfNecessaryWithParentItemID:isUserWaiting:
locateRecordIfNecessaryForRecordID:isUserWaiting:
fetchRecentAndFavoriteDocuments
_resetItemsTable
allItems
itemsParentedToThisZoneButLivingInAnOtherZone
serverRankByItemID:
serverItemByRank:
serverRankByItemID:db:
serverItemByItemID:
serverItemByItemID:db:
serverItemByRowID:
serverItemByRowID:db:
serverChildCountWithParentID:db:
clientChildCountWithParentID:db:
serverQuotaUsageWithParentID:db:
serverHiddenChildCountWithParentID:db:
documentItemByItemID:
documentItemByItemID:db:
directoryOrRootItemIDByFileID:
directoryOrRootItemIDByFileID:db:
existsByItemID:
existsByItemID:db:
itemTypeByItemID:db:
_removeAllShareAcceptanceBlocks
_removeOnDiskBlockToPerformForItemID:
_removeDownloadedBlockToPerformForItemID:
popOnDiskBlockForItemID:
popDownloadedBlockForItemID:
performBlock:whenItemWithRecordIDIsOnDisk:
performBlock:whenItemWithIDIsDownloaded:
_prepareForForegroundSyncDown
_shouldFailSyncDownWaitImmediately
performBlock:whenSyncDownCompletesLookingForItemID:
insertParentChainForItem:
_enumerateAndClearLocateBlocksForRecordID:exists:
performBlock:whenLocatingCompletesForItemWithRecordID:
hasHighPriorityWatchers
removeItemOnDiskBlock:
removeItemIsDownloadedBlock:
removeSyncDownForItemIDBlock:
syncDownAnalyticsError
syncUpAnalyticsError
_appendToString:descriptionOfFieldNamed:inResultSet:pos:containsSize:context:
_dumpRecursivePropertiesOfItemByRowID:context:depth:
_dumpItemsToContext:includeAllItems:error:
dumpActivityToContext:includeExpensiveActivity:error:
shouldSyncMangledID:
_refreshItemFromDB:
_removeItemFromCZMProcessingIfNotAssociated:
_finishedProcessingItemThatMovedToThisZone:
_removeItemAndProcessForCrossZoneMove:
_startDownloadingItemForCrossZoneMoveIfNecessary:
itemMovedIntoShareInThisZone:associatedItemID:
itemCrossZoneMoved:withLookup:
waitForCrossZoneMoveProcessingWithCompletion:
syncUpBackoffDelay
syncUpBackoffRatio
resetSyncUpBackoffRatio
activated
currentRequestID
lastInsertedRank
syncDeadlineSource
osNameRequiredToSync
lastAttemptedSyncDownDate
setLastAttemptedSyncDownDate:
itemIDsBlockedFromSyncForCZMProcessing
parentsOfCZMFaults
_ownerName
_isInitialCreation
_readerThrottle
_createZoneOperation
_createZoneQueue
_zoneCreationCompletionBlocks
_syncUpRetryAfter
_syncState
_syncUpOperation
_lastSyncUpError
_lastSyncUpErrorWasOnChainedItem
_syncDownOperation
_syncDeadlineSourceResumer
_lastSyncDownError
_syncUpThrottle
_syncUpBackoffRatio
_syncDownThrottle
_syncDeadlineSource
_blockedOperationsOnInitialSync
_runningListOperations
_recursiveListOperations
_fetchParentOperations
_locateRecordOperations
_fetchRecentsOperation
_serverStitchingOperationThrottle
_appliedTombstoneRanks
_lastInsertedRank
_lastSyncDownDate
_lastAttemptedSyncDownDate
_resetTimer
_syncDownBlockToPerformForBookmarkData
_shouldShowiCloudDriveAppInstallationNotification
_itemIDsBlockedFromSyncForCZMProcessing
_itemsBlockedByAssociationForCZMProcessing
_blocksWaitingOnCrossZoneMoveProcessing
_onDiskBlockToPerformForItemID
_downloadedBlockToPerformForItemID
_syncDownBlockToPerformForItemID
_locateBlocksToPerformForRecordID
_parentsOfCZMFaults
_nextSyncDownBarriers
_currentSyncDownBarriers
_hasWorkDidUpdateObserver
_nextIdleHandlers
_syncDownGroup
_syncDownDependencies
_allItemsDidUploadTrackers
_syncUpBatchSizeMultiplier
_syncThrottles
_osNameRequiredToSync
T@"NSDate",&,N,V_lastAttemptedSyncDownDate
T@"<BRCClientZoneDelegate>",&,N,V_delegate
T@"brc_task_tracker",R,N,V_taskTracker
T@"NSString",R,N,V_osNameRequiredToSync
TB,R,N,V_activated
TQ,R,N,V_requestID
TI,R
T@"NSArray",R,N,V_syncThrottles
T@"BRCDeadlineSource",R,N,V_syncDeadlineSource
Tq,R,N,V_lastInsertedRank
T@"NSSet",R,N,V_itemIDsBlockedFromSyncForCZMProcessing
T@"NSDictionary",R,N,V_parentsOfCZMFaults
loadFromClientStateInSession:
assertQueue
assertionQueue
setAssertionQueue:
_assertionQueue
T@"NSObject<OS_dispatch_queue>",W,N,V_assertionQueue
_overrideSessionForDomainIdentifier:
accessItemIdentifier:dbAccessKind:synchronouslyIfPossible:LocalItemHandler:ServerItemHandler:
accessItemIdentifierLocalItem:dbAccessKind:synchronouslyIfPossible:handler:
accessItemIdentifierServerItem:dbAccessKind:synchronouslyIfPossible:handler:
getQueryItemForBRFileObjectID:reply:
_queueOrCallCompletionBlock:
createItemBasedOnTemplate:fields:contents:options:additionalItemAttributes:completionHandler:
startDownloadFileObject:options:reply:
deleteItemWithIdentifier:baseVersion:options:completionHandler:
modifyItem:baseVersion:changedFields:contents:options:additionalAttrs:completionHandler:
reimport:
enumerateTrashItemsFromRank:limit:completion:
notifyReimportCompleted:
boostFilePresenterForItemIdentifier:reply:
capabilityWhenTryingToReparentItemIdentifier:toNewParent:reply:
getBookmarkDataForItemIdentifier:onlyAllowItemKnowByServer:allowAccessByBundleID:documentID:isDirectory:reply:
getPublishedURLForItemIdentifier:forStreaming:requestedTTL:reply:
getAttributeValues:forItemIdentifier:reply:
isMigratingToFPFS
markFromInitialScan
markDoneMigratingToFPFS
markBouncedToNextAvailableBounceNumber
_updateParent:
updateWithLogicalName:newParent:
updateWithFavoriteRank:
updateWithFinderTagNames:
updateWithLastUsedDate:
updateToBeInTrashWithParent:trashPutBackPath:
updateToBeUntrashedWithParent:
updateWithCreationDate:
updateWithContentModificationDate:
updateWithFileSystemFlags:
updateWithXattrs:
computeItemPathRelativeToRoot
markRemovedFromFilesystemRecursively:
learnItemID:serverItem:
initWithLocalStatInfo:
updateWithFileSystemFlags:ignoreExecutable:
initWithImportObject:error:
updateFromImportObject:onlyContentDependentProperties:
clearCKInfo
bumpLocalChangeCount
modeFromImportObject:isPackageFault:
_finderTagsFromImportObject:
T@"BRFieldStructureSignature",R,N
TQ,R,D,N
setName:
value
setValue:
_value
T@"NSString",&,N,V_name
T@"NSData",&,N,V_value
brc_SHA256
brc_SHA1WithSalt:
brc_dataFromHexidecimalString
brc_hexadecimalStringWithBytes:length:
brc_SHA256WithSalt:
initWithRegistry:stageID:name:
addItem:error:
closeAndReturn
_registry
_package
eventsType
clearEvents
addEvents:
eventsCount
eventsAtIndex:
setToken:
setHasToken:
hasToken
events
setEvents:
token
_token
_events
T@"NSMutableArray",&,N,V_events
TQ,N,V_token
privateServerZone
fetchZoneRootItemInDB:
defaultAppLibrary
hasDefaultAppLibrary
registerPCSChainingOperation:
pcsChainOperationForItemID:
appLibraryIDs
addAppLibrary:
addAppLibrary:offline:
removeAppLibrary:
clearProblemReport
reportProblemWithType:recordName:
prepareProblemReportForSyncWithRequestID:
syncedDownZoneHealthRequestID:
resetFrequencyIsTooHigh
syncedDownZoneHealthState:
zoneHealthWasReset
zoneHealthNeedsSyncUp
recomputeAppSyncBlockState
signalFaultingWatchersWithError:
serverAliasByUnsaltedBookmarkData:
resolveClashOfAlias:atPath:withAlias:atPath:
isDocumentScopePublic
_checkResultSetIsEmpty:logToFile:reason:result:
appLibraries
zoneHealthState
_syncBarriers
_zoneHealthState
_problemReport
_lastResets
_faultsLiveBarriers
_appLibraries
_defaultAppLibrary
_pcsChainFolderOperations
TB,R,D,N
T@"BRCPrivateServerZone",R,N
T@"BRCAppLibrary",R,N,V_defaultAppLibrary
T@"NSSet",R,N,V_appLibraries
T@"NSSet",R,N
T@"BRCServerZoneHealthState",R,N,V_zoneHealthState
updateUnitCount
updateLocalizedDescriptionWithOptions:
copyProgressInfoToProgress:options:
verifyFutureProgressIsNotFinished
sumOfCompletedUnitCountDelta
setSumOfCompletedUnitCountDelta:
sumOfTotalUnitCountDelta
setSumOfTotalUnitCountDelta:
versionSizes
childProgresses
previousUnitCounts
_versionSizes
_childProgresses
_previousUnitCounts
Tq,N,VsumOfCompletedUnitCountDelta
Tq,N,VsumOfTotalUnitCountDelta
T@"NSMutableDictionary",R,N,V_versionSizes
T@"NSMutableDictionary",R,N,V_childProgresses
T@"NSMutableDictionary",R,N,V_previousUnitCounts
allUploadsPendingQuota
outOfQuotaDocIDs
_outOfQuotaDocIDs
T@"NSMutableSet",R,N,V_outOfQuotaDocIDs
previousCompletedUnitCount
setPreviousCompletedUnitCount:
previousTotalUnitCount
setPreviousTotalUnitCount:
resumeUnitCounts
_resumeUnitCounts
Tq,N,VpreviousCompletedUnitCount
Tq,N,VpreviousTotalUnitCount
T@"NSMutableDictionary",R,N,V_resumeUnitCounts
observeValueForKeyPath:ofObject:change:context:
_keyPathsToObserve
didUpdateClientZone:
willScheduleDocumentForDownload:
resumeProgressForZones:
didUpdateDocument:
didDeleteDocument:
clearOutOfQuotaState
stopPublishingProgress
addProgress:forDocument:inGroup:
updateUploadThrottleForDocument:toState:
updateDownloadThrottleForDocument:toState:
dumpDictionary:withMaxCount:toContext:
_startObservingProgress:
_stopObservingProgress:
_createNewIndeterminateGlobalProgress
_createNewGlobalProgressInGroup:completedUnitCount:totalUnitCount:
_createUploadMetadataWithCompletedUnitCount:totalUnitCount:
_createDownloadMetadataWithCompletedUnitCount:totalUnitCount:
_updateGlobalProgress
_cancelUploadForDocumentID:inState:
_cancelUploadForDocumentID:inState:willRetryTransfer:
_cancelUploadForDocumentID:inState:willRetryTransfer:pendingQuota:
_cancelDownloadForDocumentID:
_cancelDownloadForDocumentID:destroyIfLast:willRetryTransfer:
_destroyProgressInGroup:reason:
_destroyUploadWithReason:
_destroyDownloadWithReason:
_resumeProgressForAnotherOperationIfNeeded
_updateDocument:
_deleteDocument:reason:
_lazyInitDone
_updatePacer
_operationTimer
_operationTimerSuspendCount
_showExtendedInfo
_networkReachable
_globalProgressMultiplex
_uploads
_downloads
parentIDToList
initWithParentID:zone:isUserWaiting:
_fetchParentChain:
addFetchParentChainCompletionBlock:
_parentRecordID
_fetchParentChainCompletionBlocks
shouldPCSChainStatusForItem:
checkIfSyncAllowedInSharedZoneForItem:
addDeletionOfItem:
addDeletionOfRecordID:ckInfo:
addEditOfSharedTopLevelItem:
addDeletionOfSharedTopLevelItem:
prepareAppLibraryRootSyncUpForItem:
fakeSyncForItem:serverItem:inZone:
handleDeletionOfSharedItem:
handleEditOfSharedItem:
addEditOfDirectory:
addDeletionOfDirectory:
addDeletionOfAlias:
addDeletionOfDocument:
addEditOfDocument:
addEditOfFinderBookmark:
addDeletionOfFinderBookmark:
addEditOfSymlink:
addItem:
setOp:
defaults
setDefaults:
_fullyChainedParentIDWhitelist
_halfChainedParentIDWhitelist
_defaults
T@"BRCSyncUpOperation",&,N,V_op
T@"BRCUserDefaults",&,N,V_defaults
liveItemByParentID:andCaseInsensitiveLogicalName:excludingItemID:
itemEnumeratorByParentID:andCaseInsensitiveLogicalName:
nextItemRowID
allocateItemRowID
nextNotifRank
allocateNotifRank
setNextNotifRank:
nextPackageItemRank
allocatePackageItemRank
setNextPackageItemRank:
telemetryMinRowID
setTelemetryMinRowID:
telemetryToken
setTelemetryToken:
_nextItemRowID
_nextNotifRank
_nextPackageItemRank
_telemetryMinRowID
_telemetryToken
T@"BRCItemID",&,D,N
asSharedItem
initWithServerItem:
initFromPQLResultSet:serverZone:error:
appLibraryForRootItem
newLocalItemWithDBRowID:
newLocalItemWithServerZone:dbRowID:
pcsChainState
parentLocalItemOnFS
parentZoneOnFS
parentItemIDOnFS
parentItemIDOnServer
aliasTargetClientZone
aliasTargetAppLibrary
aliasTargetItemID
canPathMatchMergeWithLocalItem:
shouldBeGreedyForApply
overrideCKInfoIfNecessaryForOutOfBandSyncOpWithLocalItem:
originalName
latestVersion
serverMetrics
symlinkTarget
directoryMtime
_zone
_needsInsert
_pcsChainState
_symlinkTarget
_originalName
_rank
_latestVersion
_serverMetrics
_directoryMtime
T@"BRCSharedServerItem",R,N
Tq,R,N,V_rank
T@"NSString",R,N,V_originalName
T@"BRCServerStatInfo",R,N,V_st
T@"BRCVersion",R,N,V_latestVersion
T@"BRServerMetrics",R,N,V_serverMetrics
T@"NSString",R,N,V_symlinkTarget
Tq,R,N,V_directoryMtime
lookupForRelativePath:
initWithRelativePath:db:
initWithRelativePath:
setByFileID:
setByDocumentID:
parentItem
byFileID
byFileIDGlobally
byDocumentID
byDocumentIDGlobally
serverByPath
byPathWithLastPathComponent:
byPath
_fetchByPath
_byPathWithLastPathComponent:
_fetchByFileID:
_fetchByDocumentID:
_resolveClientZoneWhileFetchingFileID:fetchindDocID:
_shareIDMatchesParent:
_fetchClientZone
relpathOfItem
relpathOfFSEvent
_pathOfItem
_relpathOfFSEvent
_matchByFileID
_matchByDocumentID
_matchByPath
_serverByPath
_packageItem
_parentItem
_matchByFileIDGlobally
_matchByDocumentIDGlobally
_fetched
T@"BRCRelativePath",R,N,V_pathOfItem
T@"BRCRelativePath",R,N,V_relpathOfFSEvent
T@"BRCLocalItem",&,N
T@"BRCLocalItem",R,&
T@"BRCDocumentItem",&,N
T@"BRCDocumentItem",R,&
T@"BRCServerItem",R,N
initWithPersona:
syncedRootURLs
cacheMightBePopulated
documentsItemIDWithAppLibraryRowID:
isRootItemIDWithSQLiteValue:
isDocumentsItemIDWithSQLiteValue:
isSharedZoneRootItemIDWithSQLiteValue:
parseMangledItemIDString:mangledID:etag:session:
migrateItemIDsToVersion5WithDB:serverTruth:
migrateItemIDsToVersion8WithDB:serverTruth:
migrateItemIDsToVersion11WithDB:serverTruth:
isNonDesktopRoot
isSharedZoneRoot
appLibraryRowID
sharedZoneRowID
itemUUIDString
zoneUniqueItemIDStringWithSession:
debugItemIDString
UTF8String
isEqualToItemID:
initWithString:libraryRowID:sharedZoneRowID:
initWithUUIDString:
_initAsLibraryRootWithAppLibraryRowID:
_initAsZoneRootWithZoneRowID:
initAsDocumentsWithAppLibraryRowID:
initWithAliasUUID:
initWithItemID:
derivedAliasItemIDWithOwnerName:
Tr*,R,N
T@"BRCALRowID",R,N
T@"BRCZoneRowID",R,N
reimportItemsBelowItemWithIdentifier:error:
ingestFromCacheItemWithIdentifier:completionHandler:
saveToDBWithSession:
initFromPQLResultSet:session:error:
updateSignaturesForFilesInItem:fromCKPackage:error:
dumpSession:toContext:db:error:
itemClass
setItemClass:
initWithInputStream:
initWithAsset:
initWithDeviceID:fileID:
nextObject
_stream
_reader
T#,N
_handleStreamError
initWithZone:stageID:url:
addLocalItem:
_applyQuarantineMetadataWithManifestItem:fd:
_applyDirectoryMetadataWithManifestItem:packageRootFD:
_applyFileMetadataWithManifestItem:packageRootFD:
_packageItem:matchesMode:
_computedFileModeForPackageItem:
_stageExistingPackageItem:withLiveFd:stageFd:
stagePackageWithReader:package:xattrsPackage:stageItemURL:livefd:recordName:
_writer
_url
T@"NSURL",R,N,V_url
scheduleIfPossibleWithCurrentTimestamp:signalSourceIfFailed:description:
addOperation:forItem:
removeOperationsForItemGlobalID:
_finishDirectoryToPackageTransmogrification:relpath:
scheduleDirectoryToPackageTransmogrification:absolutePath:
_renameDelayForZone:
_renameItem:
_renameItems
_scheduleRenameAfter:onQueue:
scheduleBouncedDirectoryRename:
_pendingRenamesTimer
_pendingRenames
_pendingTransmogirifcations
trashedItemsEnumeratorFromNotifRank:batchSize:db:
fpfsMigrationState
fpfsMigrationOffset
fpfsMigrationLostItemCount
setFPFSMigrationState:
updateFPFSMigrationOffset:lostItemCount:
markMigrationToFPFSComplete
fsImporter
serverChangesApplier
downloadStagePathForCurrentPersona
T@"BRCFSImporter",R,N
T@"BRCServerChangesApplier",R,N
_clientZonesMatchingSearchString:
clientZonesMatchingSearchString:error:
singleClientZoneMatchingSearchString:error:
_appLibrariesMatchingSearchString:
appLibrariesMatchingSearchString:error:
singleAppLibraryMatchingSearchString:error:
initWithUserURL:
restoreWithCompletionBlock:
clientDatabaseURL
setClientDatabaseURL:
_clientDatabaseURL
T@"NSURL",&,N,V_clientDatabaseURL
_markNeedsPropertiesPropagatedToChildren
_markChildPropagationComplete
documentSharesMigrationKey
folderSharesMigrationKey
folderShareAliasesMigrationKey
allMigrationKeysOrdered
initWithServerZone:migrationKey:continuationCursor:
_saveFetchedRecords:cursor:error:
_updatedContinuationCursor:fetchedRecords:error:
_performQuery:recordFetchedBlock:cursorUpdatedBlock:desiredKeys:completion:
_performAfterQueryingForShareAliasesWithCompletion:
_performAfterQueryingForShareIDsOfFolders:completion:
_migrationKey
_continuationCursor
_shareIDsToFetch
isOverQuota
currentStatus
lastServerUpdate
initWithSyncContext:
downloadTrackedForFileObjectID:didFinishWithError:
addCompletionCallback:
trackedFileObjects
initWithName:session:readingOptions:
initWithURL:readingOptions:client:session:
initWithDirectoryItem:
initWithDocumentItem:client:session:
_detachAllTrackedDocID:error:
_provideDocument:
_provideDirectoryContents:appLibrary:
_provideDirectoryRecursively:
_provideFlatDirectoryStructure:
_provideURL
_provideItem
_finishAfterWaitingForDocumentsWithID:error:
isRecursive
setIsRecursive:
wantsCurrentVersion
setWantsCurrentVersion:
_directoryItem
_documentItem
_treeEnumerator
_trackerFileObjects
_fileObjectIDsToCancel
_callbacks
_lastDownloadError
_isStillEnumeratingDirectory
_isFinished
_isMonitoringReachability
_appLibrariesMonitored
_recursiveList
_isRecursive
_wantsCurrentVersion
TB,N,V_isRecursive
TB,N,V_wantsCurrentVersion
operations
initWithSyncContext:name:scheduler:
_setReachedCap:
startSchedulingMultipleItemsInteractively
endSchedulingMultipleItemsInteractively
forceSchedulingPendingInteractiveTransfers
_evaluateCap
_addBatchOperation:
addBatchOperation:
_scheduleOneBatchWithQoS:
_schedule
cancelTransferID:operationID:
addAliasItem:toTransferWithID:operationID:
progressForTransferID:operationID:
streamDidBecomeReadyToTransferRecords
setStreamDidBecomeReadyToTransferRecords:
maxCountOfBatchesInFlight
setMaxCountOfBatchesInFlight:
_schedulingSource
_minSignalTime
_inFlightOpByID
_transferWorkloop
_transferBatchRequestWaiter
_inFlightSize
_isWaitingForTransferBatch
_hasReachedCap
_multipleItemsInteractiveSchedulingCount
_streamDidBecomeReadyToTransferRecords
_maxCountOfBatchesInFlight
T@?,C,N,V_streamDidBecomeReadyToTransferRecords
TQ,N,V_maxCountOfBatchesInFlight
T@"NSArray",R
TQ,R,N,V_inFlightSize
setPreviousAttempts:
setHasPreviousAttempts:
hasPreviousAttempts
setPreviousFailedAttempts:
setHasPreviousFailedAttempts:
hasPreviousFailedAttempts
setAreMigratedFaultsBelowThreshold:
setHasAreMigratedFaultsBelowThreshold:
hasAreMigratedFaultsBelowThreshold
setAreNonFaultAllMigrated:
setHasAreNonFaultAllMigrated:
hasAreNonFaultAllMigrated
setTypesOfMigratedItemsMask:
setHasTypesOfMigratedItemsMask:
hasTypesOfMigratedItemsMask
setExpectedMigratedItemsCount:
setHasExpectedMigratedItemsCount:
hasExpectedMigratedItemsCount
setItemsNotMigratedCount:
setHasItemsNotMigratedCount:
hasItemsNotMigratedCount
setTypesOfNonMigratedItemsMask:
setHasTypesOfNonMigratedItemsMask:
hasTypesOfNonMigratedItemsMask
setMaterialisedOnCDItemsCount:
setHasMaterialisedOnCDItemsCount:
hasMaterialisedOnCDItemsCount
setMaterialisedOnFPFSItemsCount:
setHasMaterialisedOnFPFSItemsCount:
hasMaterialisedOnFPFSItemsCount
setDiskSpaceLeft:
setHasDiskSpaceLeft:
hasDiskSpaceLeft
setAccountQuotaUsage:
setHasAccountQuotaUsage:
hasAccountQuotaUsage
setIsAccountDataSeparated:
setHasIsAccountDataSeparated:
hasIsAccountDataSeparated
setCiconiaVersion:
setHasCiconiaVersion:
hasCiconiaVersion
setPreviousReleasesSuccessRate:
setHasPreviousReleasesSuccessRate:
hasPreviousReleasesSuccessRate
setCloningTime:
setHasCloningTime:
hasCloningTime
setImportTime:
setHasImportTime:
hasImportTime
setManuallyTriggeredMigration:
setHasManuallyTriggeredMigration:
hasManuallyTriggeredMigration
hasTreatmentId
hasExperimentId
setItemsNotFoundInDB:
setHasItemsNotFoundInDB:
hasItemsNotFoundInDB
setItemsChangedDuringCloning:
setHasItemsChangedDuringCloning:
hasItemsChangedDuringCloning
setUnexpectedCreations:
setHasUnexpectedCreations:
hasUnexpectedCreations
setIgnoredContentProtectedItems:
setHasIgnoredContentProtectedItems:
hasIgnoredContentProtectedItems
setPackagesWithoutBundleBit:
setHasPackagesWithoutBundleBit:
hasPackagesWithoutBundleBit
setTotalItemCount:
setHasTotalItemCount:
hasTotalItemCount
hasRampId
setBouncedItemsCount:
setHasBouncedItemsCount:
hasBouncedItemsCount
setBouncedItemsMatrix:
setHasBouncedItemsMatrix:
hasBouncedItemsMatrix
previousAttempts
previousFailedAttempts
areMigratedFaultsBelowThreshold
areNonFaultAllMigrated
typesOfMigratedItemsMask
expectedMigratedItemsCount
itemsNotMigratedCount
typesOfNonMigratedItemsMask
materialisedOnCDItemsCount
materialisedOnFPFSItemsCount
diskSpaceLeft
accountQuotaUsage
isAccountDataSeparated
ciconiaVersion
previousReleasesSuccessRate
cloningTime
importTime
manuallyTriggeredMigration
treatmentId
setTreatmentId:
experimentId
setExperimentId:
itemsNotFoundInDB
itemsChangedDuringCloning
unexpectedCreations
ignoredContentProtectedItems
packagesWithoutBundleBit
totalItemCount
rampId
setRampId:
bouncedItemsCount
bouncedItemsMatrix
_accountQuotaUsage
_bouncedItemsCount
_bouncedItemsMatrix
_ciconiaVersion
_cloningTime
_diskSpaceLeft
_expectedMigratedItemsCount
_ignoredContentProtectedItems
_importTime
_itemsChangedDuringCloning
_itemsNotFoundInDB
_itemsNotMigratedCount
_materialisedOnCDItemsCount
_materialisedOnFPFSItemsCount
_packagesWithoutBundleBit
_previousAttempts
_previousFailedAttempts
_totalItemCount
_unexpectedCreations
_experimentId
_previousReleasesSuccessRate
_rampId
_treatmentId
_typesOfMigratedItemsMask
_typesOfNonMigratedItemsMask
_areMigratedFaultsBelowThreshold
_areNonFaultAllMigrated
_isAccountDataSeparated
_manuallyTriggeredMigration
Tq,N,V_previousAttempts
Tq,N,V_previousFailedAttempts
TB,N,V_areMigratedFaultsBelowThreshold
TB,N,V_areNonFaultAllMigrated
Ti,N,V_typesOfMigratedItemsMask
Tq,N,V_expectedMigratedItemsCount
Tq,N,V_itemsNotMigratedCount
Ti,N,V_typesOfNonMigratedItemsMask
Tq,N,V_materialisedOnCDItemsCount
Tq,N,V_materialisedOnFPFSItemsCount
Tq,N,V_diskSpaceLeft
Tq,N,V_accountQuotaUsage
TB,N,V_isAccountDataSeparated
Tq,N,V_ciconiaVersion
Tf,N,V_previousReleasesSuccessRate
Td,N,V_cloningTime
Td,N,V_importTime
TB,N,V_manuallyTriggeredMigration
T@"NSString",&,N,V_treatmentId
T@"NSString",&,N,V_experimentId
Tq,N,V_itemsNotFoundInDB
Tq,N,V_itemsChangedDuringCloning
Tq,N,V_unexpectedCreations
Tq,N,V_ignoredContentProtectedItems
Tq,N,V_packagesWithoutBundleBit
Tq,N,V_totalItemCount
T@"NSString",&,N,V_rampId
Tq,N,V_bouncedItemsCount
Tq,N,V_bouncedItemsMatrix
xattrsType
clearXattrs
addXattrs:
xattrsCount
xattrsAtIndex:
setXattrs:
T@"NSMutableArray",&,N,V_xattrs
readTargetFromRelativePathAndSyncUp:
T@"BRCDocumentItem",R,D,N
T@"BRCDirectoryItem<BRCFSRooted>",R,D,N
initWithSession:zoneID:
_createZoneWithZoneID:
_registerSubscriptionForZoneID:isOptimisticSubscribe:
optimisticSubscribe
setOptimisticSubscribe:
subscriptionOnly
setSubscriptionOnly:
createZoneAndSubscribeCompletionBlock
setCreateZoneAndSubscribeCompletionBlock:
createdZone
_zoneID
_optimisticSubscribe
_subscriptionOnly
_createZoneAndSubscribeCompletionBlock
_createdZone
TB,N,V_subscriptionOnly
TB,N,V_optimisticSubscribe
T@?,C,N,V_createZoneAndSubscribeCompletionBlock
T@"CKRecordZone",R,N,V_createdZone
initWithRecordID:serverZone:isUserWaiting:
_performAfterLocatingRecord:
addLocateRecordCompletionBlock:
_structureRecordID
_exists
_locateRecordCompletionBlocks
T@"CKRecordID",R,N,V_recordID
initWithLatestGCStartTime:
timeSinceLatestGCStartTime
_latestGCStartTime
applySharingReadonlyACLsToFD:statInfo:version:clientZone:sharingOptions:
migrateStageToVersion2_0WithSession:
computeItemModeFromStatInfo:isPackage:
lowDiskStatusChangedForDevice:hasEnoughSpace:
_pathForDirIndex:
didFlushStagedFileID:
_fileIDMightHaveBeenUnlocked:
_watchLockedRelpath:
forgetWatchedLockedFileID:
forgetWatchedLockedFileIDsForAppLibrary:
_openStageDirectory:
_performInStageDirectory:block:
makeDirectoryInStageGatherFileID:generationID:error:
makeSymlinkWithTarget:inStageGatherFileID:generationID:error:
nonLocalFaultURLForAdditionName:
makeNonLocalVersionSideFaultWithAdditionName:clientZone:statInfo:version:sharingOptions:error:
makeSideFaultInStageGatherFileID:generationID:documentID:properties:inAppLibrary:forCreation:error:
copyPackageFileWithPackageFd:toStageFd:relpath:
_pathInStage:index:generationID:
_flockToMakeLiveAtPath:error:
makeItemLive:fromStage:bySwappingWith:fileName:error:
downloadStageURLForFileID:
moveFromStage:toPath:fileName:error:
applyMetadataOnFileDescriptor:liveFileDescriptor:itemID:clientZone:statInfo:version:sharingOptions:
associateSyncUpStageID:withOperation:
_anchorNamePrefixForRecordZoneID:
_anchorNameForChangeToken:recordZoneID:
_anchorNameForRecordID:
pendingListRecordDirWithStartingChangeToken:
pendingDeltaFetchRecordDirWithStartingChangeToken:recordZoneID:
createURLForUploadWithStageID:name:
pendingFetchRecordDirExistsInStageWithStartingChangeToken:recordZoneID:
cleanupStagedSyncUpWithID:
cleanupStagedUploadWithID:
associateDownloadStageID:withOperation:
createURLForDownloadWithStageID:name:
rememberStagedDownloadWithID:gatherFileID:generationID:documentID:appLibrary:error:
cleanupStagedDownloadWithID:forItemID:
_graveyardAt:path:forItemID:
moveFromStageToGraveyard:forItemID:
moveOldVersionFromPath:error:
moveToGraveyardFromPath:forItemID:error:
existsInStage:generationID:
existsInOldVersionStageOrGraveyard:
transferDocumentID:fromOldVersionStage:toStage:
_purgeSpaceUnderQueue:withUrgency:
purgeSpace:withUrgency:
purgableSpace
purgeGraveyardSpace:withUrgency:
_garbageCollectPackages
_garbageCollectUploads
_garbageCollectFaults
_garbageCollectDownloads
_garbageCollectDeltaSyncDatabases
_garbageCollectQBSDatabases
_garbageCollectOldVersions
_processPendingListDatabaseObjects:
removeDatabaseObjectsForZone:
_hasContentsInPath:
_removeUnusedXattrBlobs
_garbageCollectSpace:
garbageCollectSpace:
_updatePersistedStateWithLatestGCStartTime:
disarmLockedTestTimer
saveXattrAtURL:forSignature:error:
saveXattrBlob:forSignature:error:
loadXattrBlobForSignature:error:
urlForXattrSignature:
setStageDirectoryForXattr:
_stageDirectoryPath
_stageDirectoryFileID
_unflushedStagedFileIDs
_activeUploadStageIDs
_activeDownloadStageIDs
_watchedLockedFileIDs
_lockedTestTimer
_flushingQueue
_persistedState
_lowDiskSpace
initWithURL:name:
initWithVolume:personaIdentifier:
_fileReactorID
_physicalURLForURL:
_provideItemAtURL:toReaderWithID:completionHandler:
_cancelProvidingItemAtURL:toReaderWithID:
_operationsByName
_personaIdentifier
brc_isForcedPackageExtension
brc_isBlacklistedPackageExtension
brc_closeForcedPackageExtensionsForPersona:
brc_loadForcedPackageExtensionsForCurrentPersona
brc_addForcedPackageExtension:
changeTokenFromData:
toData
notifRank
setNotifRank:
setDatabaseID:
_notifRank
_databaseID
TQ,N,V_notifRank
TQ,N,V_databaseID
addIndexOfItem:
addDeletionOfFileObjectID:rank:
batchCount
setRank:
listItems:
_toIndexItems
_deletedItemIDs
_observer
TQ,N,V_rank
dropLegacyCoreSpotlightIndexIfNeededWithCompletionHandler:
dropRecentsForSession:completionHandler:
dropIndexForClientZone:
computeTombstoneEntryType:
dropItemWithFileObjectID:notifRank:itemIsLive:
_deleteAllRanks
garbageCollectRanksPreceding:
_readyForIndexingWithAckedRank:
changeTokenForNotifRank:
_handleResetForRowID:notifRank:completionHandler:
_deletedDocIdResultSetFromNotifRank:batchSize:
maxNotifRankWasFlushed
_enumerateChangesFromChangeToken:limit:completion:
enumerateChangesFromChangeToken:limit:completion:
_activeSetDidChange
_signalActiveSetDidChange
_pacer
_readyForIndexing
_flushedNotifRank
initWithDocument:stageID:
fetchOperationForTransfers:traceCode:
initWithDocument:stageID:etag:
_stageWithSession:error:
addDownload:
transferredObjectsPrettyName
perDownloadCompletionBlock
setPerDownloadCompletionBlock:
_perDownloadCompletionBlock
T@?,C,V_perDownloadCompletionBlock
setProgress:
_prepareSecondStageWithSession:manifest:package:error:
_stageWithSession:manifest:package:xattrsPackage:error:
requiresTwoPhase
liveItemIsPackage
liveDocumentID
desiredIndices
liveFileID
_liveFileID
_liveDocumentID
_liveItemIsPackage
_isFinderBookmark
_requiresTwoPhase
_desiredIndices
TB,R,N,V_liveItemIsPackage
TI,R,N,V_liveDocumentID
TQ,R,N,V_liveFileID
T@"NSIndexSet",R,N,V_desiredIndices
TB,R,N,V_requiresTwoPhase
T@"BRCProgress",&,D,N
initWithDocument:stageID:etag:isLoser:
_stageContentWithSession:error:
_stageWithSession:creationInfo:error:
isLoser
storage
gsError
_secondaryRecordID
_secondaryRecord
_isLoser
_storage
_gsError
_fileObjectID
T@"GSPermanentStorage",R,N,V_storage
T@"BRCProgress",&,N
T@"NSError",R,N,V_gsError
TB,R,N,V_isLoser
T@"BRFileObjectID",R,N,V_fileObjectID
initWithSyncContext:forNonLocalVersion:
addReaderID:completionHandler:
cancelReaderID:
_readers
initWithZoneRootItemID:session:
parentItemID
initWithName:throttleParameters:queue:handler:
scheduleNextEvent
_throttle
bookmarkDataWithItemResolutionString:serverZoneName:ownerName:accountDSID:salted:
targetAppLibrary
targetClientZone
targetItemID
learnTarget:
updateXattrInfoFromPath:error:
markNeedsUploadOrSyncingUpWithAliasTarget:
rewriteOrDeleteAliasOnDiskWithTarget:
updateOnDiskWithAliasTarget:forServerEdit:
_removeAliasAndMarkDead
targetMovedToTrashOrDeleted
targetMovedToThisAppLibrary
targetDocument
T@"BRCAppLibrary",R,N
deleteAllContentsOperationLastError
itemByParentID:andName:
_deleteAllContentsOperation
_deleteAllContentsOperationLastError
T@"BRCZonePurgeOperation",R,N
T@"BRCPrivateClientZone",R,N
_propagateDeleteToChildrenOfItemID:
_propagateFolderDeletesToTheirChildren
sideCarZoneWasReset
T@"BRCSharedClientZone",R,N
initWithRelativePath:fileID:docID:genCount:isDirectory:
initWithPQLResultSet:
setRelativePath:
docID
setDocID:
genCount
setGenCount:
setIsDirectory:
_isDirectory
_genCount
_docID
T@"NSString",&,N,V_relativePath
T@"NSNumber",&,N,V_docID
TI,N,V_genCount
TB,N,V_isDirectory
initWithUnderlineProgressObjects:
setLocalizedDescription:
setLocalizedAdditionalDescription:
setTotalUnitCount:
setUserInfoObject:forKey:
indeterminate
localizedAdditionalDescription
localizedDescription
totalUnitCount
_underlineProgressObjects
_localizedAdditionalDescription
_localizedDescription
_completedUnitCount
_totalUnitCount
T@"NSString",C,N,V_localizedAdditionalDescription
T@"NSString",C,N,V_localizedDescription
Tq,N,V_completedUnitCount
Tq,N,V_totalUnitCount
br_isDocumentType
br_isDirectoryType
_br_getFileProviderDomainErrorCode:
_br_populateUserInfoDict
br_fileProviderError
initWithSyncContext:ckContainerID:
ckContainerID
setCkContainerID:
_ckContainerID
T@"NSString",&,N,V_ckContainerID
createSyncUpJobForItem:inZone:
deleteSyncUpJobsForItem:
prepareItemForSyncUp:inFlightDiffs:inZone:
_clearSyncUpErrorForItem:
finishSyncUpForItem:inZone:success:
isItemInSyncUpAndInFlight:
isItemInSyncUpAndInFlight:inZone:
inFlightDiffsForItem:zoneRowID:
inFlightDiffsForItem:
isItemPendingSyncUp:
postponeSyncUpForItem:inZone:
setState:forItem:zone:
_scheduleSyncUpJob:
_thumbnailOperationsMax
_minBatchSize
setState:forItem:
deleteUploadingJobForItem:
_buildItemTooLargeErrorIfNeeded:syncContext:
_updateJobID:setStageID:operationID:
_documentItemForJobID:stageID:
_documentItemForJobID:operationID:
isUploadingItem:
descriptionForJobID:context:
_willAttemptJobID:throttle:operationID:
_cancelJobsMatching:
deleteJobsForZone:
cancelAndCleanupItemUpload:
addAliasItem:toUploadingItem:
setState:forJobID:zone:
setState:forUploadJobID:zone:
uploadItem:
boostDocID:item:
removeBoostedDocID:
_scheduleRetries
_startFetchThumbnail:jobID:
_doneFetchingThumbnailForJobID:
_thumbnailOperationForItemRowID:
_updatePackageRecord:item:stageID:error:
_updateRecordInDB:item:syncContext:transferSize:stageID:
_updateRecord:item:syncContext:thumbnailOperation:stageID:
_updateRecord:jobID:syncContext:thumbnailOperation:stageID:
_computeRecordForJobID:item:syncContext:
_duplicatePackage:stageID:stageName:error:
_finishPackageUploadWithRecord:item:stageID:error:
_handleFileModifiedError:forItem:
_finishedUploadingItem:record:jobID:stageID:syncContext:error:
_performServerSideAssetCopyForItem:transferSize:
finishedSyncingUpItem:withOutOfQuotaError:
hasItemsOverQuotaForOwner:
hasItemsOverQuotaInZone:
quotaAvailableForOwner:
_rescheduleJobsOutOfQuotaForDefaultOwnerWithAvailableSize:
setQuotaAvailableForDefaultOwner:
_globalQuotaStateUpdateForDefaultOwner
_scheduleQuotaFetchForDefaultOwner
setIsDefaultOwnerOutOfQuota:
setIsDefaultOwnerOutOfQuota:forceSignalContainers:
ownerDidReceiveOutOfQuotaError:
scheduleQuotaStateUpdateForOwner:
scheduleQuotaFetchIfNeededForOwner:
forceScheduleQuotaFetchForOwner:
_reportUploadErrorForDocument:error:
_clearUploadErrorForDocument:
isDefaultOwnerOutOfQuota
uploadsDeadlineScheduler
thumbnailsOperationsByID
_thumbnailsOperations
_boostedDocIDs
_stampForDocID
_retryQueueSource
_thumbnailQueue
_quotaPacer
_globalQuotaStateUpdatePacer
_prepareReachedMax
_isDefaultOwnerOutOfQuota
_uploadsDeadlineScheduler
T@"BRCDeadlineScheduler",R,N,V_uploadsDeadlineScheduler
T@"NSDictionary",R,N,V_thumbnailsOperations
TB,N,V_isDefaultOwnerOutOfQuota
initWithRecord:ckInfo:
T@"BRFieldCKInfo",R,N,V_ckInfo
pcsChainStateForItem:
parentIDHasLiveUnchainedChildren:
unchainedItemInfoInServerTruthEnumeratorParentedTo:
initWithItemID:parentID:structuralCKInfo:contentCKInfo:itemType:aliasTargetZoneIsShared:chainState:
itemType
structuralCKInfo
contentCKInfo
chainState
aliasTargetZoneIsShared
_itemType
_aliasTargetZoneIsShared
_chainState
_structuralCKInfo
_contentCKInfo
T@"BRCItemID",R,N,V_parentID
T@"BRFieldCKInfo",R,N,V_structuralCKInfo
T@"BRFieldCKInfo",R,N,V_contentCKInfo
Tc,R,N,V_itemType
TI,R,N,V_chainState
TB,R,N,V_aliasTargetZoneIsShared
initWithAppLibrary:
containsRecordInfo:
prepareFirstPhaseRecordBatch
addFullyChainedRecordInfo:
_chainPreppedRecordToParent:
chainPreparedRecordBatch:
chainedRecordsCount
recordsForFirstPhase
recordsForSecondPhase
should2PhasePCSChain
halfChainedRecordMap
_fullyChainRecordBatch
_fullyChainRecordInfoMap
_halfChainedRecordMap
_alreadyHalfChainedRecords
_recordsForFirstPhase
_should2PhasePCSChain
T@"NSDictionary",R,N,V_halfChainedRecordMap
initWithPCSChainInfo:clientZone:
chainInfo
_chainInfo
_enumerator
itemIDNeedingListing
_maxPathDepth
_stack
_itemIDNeedingListing
initWithRootItem:appLibrary:
_buildRecordListWithCompletion:
_sendRecordBatch:completion:
_sendRecordBatch:recursed:completion:
_chainRecords
pcsChainCompletionBlock
setPcsChainCompletionBlock:
shouldFillBatch
setShouldFillBatch:
_rootItem
_completed
_tryCount
_syncDownBeforeRetry
_chainedRecordsCount
_listOperation
_shouldFillBatch
_pcsChainCompletionBlock
T@?,C,N,V_pcsChainCompletionBlock
TB,N,V_shouldFillBatch
brc_fixDocumentExtensionIfNeededForShareURL:
_updatePackageItemsIfNecessaryWithImportObject:error:
reIngestFromFileProvider
initWithImportObject:
updateWithImportObject:onlyContentDependentProperties:
sharedManager
accountHandler:willChangeSessionFrom:
accountHandler:didChangeSessionTo:
loadAccounts
_garbageCollectOldDomains
enumerateAccountHandlers:
versionsProviderForVolume:
createAndLoadSessionWithACAccountID:createBlock:
waitForInitialAccountLoadingSynchronously
waitForInitialAccountLoadingWithCompletionHandler:
waitForAccountLoadingOfDomain:
waitForAccountLoadingSynchronously:
accountHandlerForCurrentPersona
accountHandlerForACAccountID:
accountForCurrentPersona
accountForPersona:
personaIdentifierForACAccountID:
_getOrCreateAccountHandlerForACAccountID:
getOrCreateAccountHandlerForACAccountID:
createSessionWithACAccountID:dsid:completionHandler:
updateAccountDisplayName:completionHandler:
destroySessionWithACAccountID:
isInSyncBubble
_accountHandlersByACAccountID
_versionsProvidersByVolumeID
_finishedLoadingAccounts
_isInSyncBubble
TB,R,N,V_isInSyncBubble
initWithRecord:
markCrossZoneMoved
revertEtagsForOldZoneTombstone
clearCrossZoneMoveEtag
setCKInfoFieldsInRecord:includeCZMEtag:
setHasGenerationID:
hasGenerationID
setHasSize:
hasSize
hasXattrs
item
setItem:
_item
T@"BRFieldPkgItem",&,N,V_item
Tq,N,V_fileID
TI,N,V_generationID
T@"NSData",&,N,V_xattrs
_handleServerItemBRAliasIfNeeded:li:
applyChanges:localItem:rank:zone:hasFinished:
itemGlobalIDFromLocalItem:
initWithZoneRowID:itemID:
isEqualToItemGlobalID:
T@"BRCZoneRowID",R,N,V_zoneRowID
shouldPerformPCSMigration
PCSMigrationComplete
setNeedsPCSMigration:
_createCloudDocsZone:
_fetchZonesNeedingMigration:
_interestingZoneIDs
cloudDocsAppsListDidChange:
initWithACAccountID:dbAccountDSID:salt:accountHandler:
registerClient:
unregisterClient:
addMiscOperation:
closeXPCClientsSync
icloudAccountIsInCarry
userDefaultsChanged
_setupSharedPackageExtensionsPlist
_closeSharedPackageExtensionsPlist
_createAccountSupportPathIfNeeded:protectParent:
markAccountMigrationComplete
_setupThrottles
resetThrottles
_addFPFSDomain
_createGroupContainerDownloadStage
_refreshRootsCache
_submitDBCorruptionTelemetryEventIfNeeded
openWithError:pushWorkloop:
_markDBOpened
_createAppLibraryRootIfNeededAtPath:error:
_pcsChainAllItemsWithActivity:
_recoverAndReportBoosting
_recoverAndReportMissingJobs
_registerBackgroundXPCActivities
_fixupItemsAtStartup
invalidateAccountStatus
accountWaitOperation
fetchAccountWaitOperationWithAccountReady:
captureDBCorruptionInfoWithDescription:error:
closeOfflineSession
closeAndResetLocalStateWithDescription:error:
_recursivelyPrepareFolderForLogOutAtURL:pruneEmptyFolders:pruneEmptyTopLevelFolder:maxDepth:
destroyLocalDataWaitingForFilesToBeUnlinked:completionBlock:
_validatePersona
_unlinkContainersWithPristineContainerIDs:
destroyLocalDataWaitingForFilesToBeUnlinked:pristineContainerIDs:completionBlock:
destroyLocalData
destroyLocalDataWithPristineContainerIDs:
_loadClientZonesFromDisk
_unloadClientZones
_mutexZonesLock
sharedServerZoneRowIDsByOwnerNamePrefix:
serverZoneByMangledID:
serverZoneByName:ownerName:
serverZoneByRowID:
clientZoneByMangledID:
enumerateServerZones:
enumerateAppLibraries:
fallbackAppLibraryForClientZone:extension:
privateServerZoneByID:
enumeratePrivateServerZones:
cloudDocsClientZone
privateClientZoneByID:
enumerateClientZones:
clientZones
enumeratePrivateClientZones:
sharedServerZoneByMangledID:
sharedClientZoneByMangledID:
enumerateSharedClientZones:
performBlock:whileRemovingPrivateClientZone:
destroySharedClientZone:
appLibraryByRowID:
appLibraryByMangledID:
appLibraryByID:
assertNotOnZoneMutex
__getOrCreateServerZone:
__getOrCreateClientZone:withServerZone:alreadyExists:
__getOrCreateAppLibrary:rowID:createOnDisk:alreadyExists:withClientZone:createCZMMoved:
__registerServerZone:clientZone:appLibrary:isShared:
_shouldPrivateAppLibraryBeCZMMoved:
_getOrCreateAppLibraryAndPrivateZonesIfNecessary:creationFlags:
getOrCreateAppLibraryAndPrivateZonesIfNecessary:
getOrCreateAppLibraryAndPrivateZonesIfNecessary:appLibraryExists:
getOrCreateSharedZones:
getOrCreateSharedZones:shareAcceptOp:
getOrReserveLibraryRowIDForLibrary:
_fetchUserRecordIDWithCompletionHandler:
cachedCurrentUserRecordName
enumerateSupportedFolderTypes:
_enumerateAccountHandlerSupportedFolderTypes:
enumerateFileTypesWithFilterBlock:enumerationBlock:
createAppLibrariesIfNeededWithError:
createAppLibraryOnDisk:createdRoot:createdDocuments:rootFileID:
_cloudDocsAppsListDidChange:
recomputeAppSyncBlockStateForPrivateClientZone:
availableDiskSpace
availableDiskSpaceUsingCache:
availableDiskSpaceUsingCache:schedulingPendingDiskItemsIfNeeded:
availableDiskSpaceDidChange
hasOptimizeStorageEnabled
setOptimizeStorageEnabled:forKey:
setOptimizeStorageEnabled:
computeTotalLiveDocumentSizeWithDb:
startDownloadsForGreediness
lastCiconiaVersion:
applySyncPolicy:forSyncedFolderType:isInitialCreation:error:
enableSyncforSyncedFolderType:isInitialCreation:error:
_setRootPathXattrValue:forRootPath:error:
_getRootPathXattrValue:forRootPath:error:
disableSyncforSyncedFolderType:isInitialCreation:error:
dumpXPCClientsToContext:
dumpMiscOperationsToContext:
dirPathForSyncedFolderType:
createRootForSyncedFolderType:
hasRootForSyncedFolderType:
rootForSyncedFolderType:
setRoot:forSyncedFolderType:
removeRootForSyncedFolderType:
roots
syncedFolderTypeForURL:
removeDesktopSymlink:andDocumentsSymlink:
_recreateSymlinkIfNecessaryForDocumentsPath:folderName:destinationPath:
recreateDesktopSymlinksIfNecessary
shouldPathBeDesktopSymlink:
openForDumping
_handleTrashedItemsMigration
sessionDirPath
cacheDirPath
autoResumeSyncTimerScheduler
applyScheduler
containerScheduler
notificationManager
stageRegistry
isOpen
setSessionDirPath:
setCacheDirPath:
accountDSID
defaultScheduler
fairClientDBScheduler
volume
fsUploader
fsDownloader
syncUpScheduler
downloadTrackers
accountHandler
userNotification
diskReclaimer
fileUnlinker
recentsEnumerator
appLibraryScanThrottle
appLibraryResetThrottle
sharedAppLibraryResetThrottle
appLibraryAliasRemovalThrottle
lostItemThrottle
syncClientZoneThrottle
syncClientZoneErrorThrottle
globalProgress
resetQueue
itemTransmogrifier
analyticsReporter
personaIdentifier
isDataSeparated
offline
_syncContexts
_defaultScheduler
_dbURL
_dbWatcher
_dbWatcherQueue
_dbCorruptionQueue
_clientTruthWorkloop
_serverTruthWorkloop
_readOnlyWorkloop
_cloudDocsFD
_dbProfilingHook
_miscOperations
_backgroundListOperations
_accountHandler
_isDataSeparated
_offline
_clientDB
_serverDB
_readOnlyDB
_expensiveReadOnlyDB
_clientState
_serverState
_accountDSID
_zonesLock
_libraryRowIDsByMangledID
_appLibrariesByRowID
_serverZonesByZoneRowID
_sharedServerZonesByMangledID
_sharedClientZonesByMangledID
_privateServerZonesByID
_privateClientZonesByID
_fsImporter
_serverChangesApplier
_xpcClients
_globalProgress
_lastDiskSpaceCheckTime
_availableDiskSpace
_totalDiskSpace
_isGreedy
_zonesCreationLock
_reschedulePendingDiskItemsPacer
_updateDiskSpacePacer
_accountIsReady
_accountWaitOperation
_isDBOpened
_isInCarry
_rootsByFolderType
_sessionDirPath
_cacheDirPath
_containerScheduler
_applyScheduler
_fairClientDBScheduler
_autoResumeSyncTimerScheduler
_volume
_fsUploader
_fsDownloader
_syncUpScheduler
_downloadTrackers
_userNotification
_notificationManager
_stageRegistry
_diskReclaimer
_fileUnlinker
_recentsEnumerator
_appLibraryScanThrottle
_appLibraryResetThrottle
_sharedAppLibraryResetThrottle
_appLibraryAliasRemovalThrottle
_lostItemThrottle
_syncClientZoneThrottle
_syncClientZoneErrorThrottle
_resetQueue
_itemTransmogrifier
_analyticsReporter
TB,R,N,V_isOpen
T@"NSString",&,N,V_sessionDirPath
T@"NSString",&,N,V_cacheDirPath
T@"BRDSIDString",R,N,V_accountDSID
T@"NSString",R,N,V_ubiquityTokenSalt
T@"BRCGlobalProgress",R,N,V_globalProgress
T@"BRCDeadlineScheduler",R,N,V_defaultScheduler
T@"BRCApplyScheduler",R,N,V_applyScheduler
T@"BRCContainerScheduler",R,N,V_containerScheduler
T@"BRCFairScheduler",R,N,V_fairClientDBScheduler
T@"BRCTimerScheduler",R,N,V_autoResumeSyncTimerScheduler
T@"BRCFSUploader",R,N,V_fsUploader
T@"BRCFSDownloader",R,N,V_fsDownloader
T@"BRCSyncUpScheduler",R,N,V_syncUpScheduler
T@"BRCVolume",R,N,V_volume
T@"BRCDownloadTrackers",R,N,V_downloadTrackers
T@"BRCItemTransmogrifier",R,N,V_itemTransmogrifier
T@"BRCAnalyticsReporter",R,N,V_analyticsReporter
T@"BRCNotificationManager",R,N,V_notificationManager
T@"BRCStageRegistry",R,N,V_stageRegistry
T@"BRCDiskSpaceReclaimer",R,N,V_diskReclaimer
T@"BRCFileUnlinker",R,N,V_fileUnlinker
T@"BRCUserNotification",R,N,V_userNotification
T@"BRCRecentsEnumerator",R,N,V_recentsEnumerator
T@"BRCAccountWaitOperation",R,N
T@"BRCAccountHandler",R,N,V_accountHandler
T@"NSString",R,N,V_personaIdentifier
TB,R,N,V_isDataSeparated
TB,R,N,V_offline
T@"BRCThrottle",R,N,V_appLibraryScanThrottle
T@"BRCThrottle",R,N,V_appLibraryResetThrottle
T@"BRCThrottle",R,N,V_sharedAppLibraryResetThrottle
T@"BRCThrottle",R,N,V_appLibraryAliasRemovalThrottle
T@"BRCThrottle",R,N,V_lostItemThrottle
T@"BRCThrottle",R,N,V_operationFailureThrottle
T@"BRCThrottle",R,N,V_syncClientZoneThrottle
T@"BRCThrottle",R,N,V_syncClientZoneErrorThrottle
T@"NSObject<OS_dispatch_queue>",R,N,V_resetQueue
extractMetadataForContainerID:bundleID:minimumBundleVersion:reply:
_isAppInstalled
_isFolderSharingSupported
_isUserSignedInToiCloudDrive
_showSharingJoinDialog
_parseShareMetadata
_startShareAccept
_openiWorkAppPreemptively
_locateSharedItemOnOwner
_waitForSharedItemToSyncDownOnOwner
_waitForSharedItemToBeOnDiskOnOwner
_createSideFaultOnDisk
_waitForSharedItemToBeOnDiskOnRecipient
_checkIfShouldWaitUntilDownloadCompletion
_openSharedSideFaultFile
_finishShareAccept
_locateSharedItemOnRecipient
_waitForSharedItemToSyncDownOnRecipient
_locateSharedItemOnDisk
_setSpotlightAttribute
_openSharedItemIfStillNeeded
_endAcceptationFlow
_isAccountRestricted
_prepareToDownloadSharedDocument
boolValue
userNotificationClass
_runningShareIDs
_openiCloudSettings
_openAppStoreForShareURL:
_openShareURLInWebBrowser:withReason:
openResourceOperation:didFinishCopyingResource:
openResourceOperationDidComplete:
openResourceOperation:didFailWithError:
initWithShareMetadata:client:session:
moveDialogToFront
_stepNameAtIndex:withPrefix:
_performNextStepInQueue
_performNextStep
_jumpToSelectorInQueue:
_jumpToSelector:
_showGenericErrorAndFinish:
_isOwner
_isOwnerOrShareAlreadyAccepted
_isFolderShare
_isLinkInsideFolderShare
_isDocumentLinkInsideFolderShare
_isDirectoryLinkInsideFolderShare
_isiWorkLinkInsideFolderShare
_isiWorkShare
_captureOpenInfoFromItem:
_activateSharedZoneIfNeeded
_openSharedSideFaultFileWithAppID:
_openDocumentInDocumentsAppIfInstalled:
_createServerFaultIfPossibleWithCompletion:
skipOpenInApp
setSkipOpenInApp:
_acceptationFlow
_stepIndex
_shareURL
_linkItemRecordID
_linkItemID
_linkFileObjectID
_needsZoneAndAppLibraryActivation
_acceptOperation
_allowsDirectoryFaults
_liveFileURL
_accessedSecurityScope
_shareAcceptGroup
_rootFilename
_linkFilename
_xpcClient
_shareAcceptationError
_skipOpenInApp
TB,N,V_skipOpenInApp
itemsCount
_addTransfer:
addTransfer:
_cancelTransferID:
cancelTransferID:
addAliasItem:toTransferWithID:
progressForTransferID:
_setProgress:forTransfer:
setProgress:forRecordID:
_finishedTransfer:error:
sendBatchProgressedCallback
_finishedTransferForRecord:recordID:error:
finishedTransferForRecord:recordID:error:
setTotalSize:
didProgressBlock
setDidProgressBlock:
pendingGroup
_entriesByRecordID
_entriesBySecondaryRecordID
_entriesByTransferID
_itemsCount
_didProgressBlock
_pendingGroup
T@?,C,V_didProgressBlock
TQ,V_totalSize
TQ,V_doneSize
T@"NSObject<OS_dispatch_group>",R,N,V_pendingGroup
write:
startFgColor:bgColor:attr:
startStringForFgColor:bgColor:attr:
stringForReset
startFgColor:attr:
startBgColor:attr:
startFgColor:
startBgColor:
startAttributes:
changeFgColor:
changeBgColor:
changeAttributes:
initWithType:recordName:
initWithProblem:
mergeWithProblem:
effectedRecordNames
_effectedRecordNames
Ti,R,N,V_type
T@"NSSet",R,N,V_effectedRecordNames
initWithProblemReport:
_zoneStateForProblemType:
_priorityForProblemType:
_effectiveProblemType
effectiveProblemMessage
_addProblem:
addProblemWithType:recordName:
shouldResetAfterFixingState
pendingRequestID
setPendingRequestID:
setNeedsSyncUp:
_problems
_needsSyncUp
_pendingRequestID
Ti,R,N,V_state
T@"NSNumber",&,N,V_pendingRequestID
TB,N,V_needsSyncUp
initWithCKInfo:state:
initWithServerZoneHealthState:
br_qtnFlags
xattrNamesListBegin
xattrNamesListEnd
xattrNamesBegin
xattrNamesCount
xattrNamesEnd
structuralXattrNamesBegin
structuralXattrNamesEnd
structuralXattrNamesCount
contentXattrNamesBegin
contentXattrNamesEnd
contentXattrNamesCount
initWithFD:sizeLimit:syncable:error:
getXattrValue:error:
clearCache
_xattrNamesList
_xattrNamesData
_xattrCount
_contentXattrCount
_sizeLimit
_cacheSize
_cachedXattrs
initWithCacheDirPath:
renameAndUnlinkInBackgroundItemAtPath:
_purge
forcePurgeWithCompletionBlock:
renameAndUnlinkInBackgroundItemAt:path:
_suspendCount
_cachePurgeSource
_unlinkRootPath
setVersionIdentifier:
_versionIdentifier
T@"NSString",&,N,V_versionIdentifier
initWithSession:tracker:
initWithSession:group:
_doneWithError:
enumerateBelow:appLibrary:recursively:handler:
_scheduleAsync
_visitNewParent
__iterate:
_iterate:
completionHandler
setCompletionHandler:
_rowID
_seen
_toVisit
_strongSelf
_completionHandler
T@?,C,N,V_completionHandler
clientZone:didFinishUploadingAllItemsWithError:
initWithSession:appLibraries:
_zonesStillUploading
_hiddenZoneWithError
_perContainerIDError
numberWithSQL:
stringWithSQL:
itemIDWithSQL:
registerFunction:nArgs:handler:error:
brc_applicationName
brc_applicationBundleID
brc_applicationContainerID
brc_iWorkPathExtensions
brc_mangledNameFromURLFragment:
moveFromURLToLiveStage:fileObjectID:error:
brc_parseMangledID:itemID:etag:session:
additionURLForName:storagePrefix:inConflictNamespace:
brc_parseAdditionFilename:mangledID:itemID:etag:session:
label
cancelled
initWithChangedRecord:shareID:xattrSignatureNeedingFetch:structureRecordBlockingSave:
initWithRecordIDNeedingFetch:recordType:
resolveRecordType
isWaitingOnShareIDFetch
recordType
recordIDBlockingSave
setRecordIDBlockingSave:
_recordType
_recordIDBlockingSave
T@"CKRecord",R,N,V_record
Tq,R,N,V_recordType
T@"CKRecordID",&,N,V_recordIDBlockingSave
_wasAccessed
_wasClosed
_dbBecameCorrupted:withDescription:
_initDeltaSyncWithChangeToken:serverZone:
initForListingWithParent:serverZone:
_dropExistingTablesWithDB:
_createSchemaIfNecessary
_openDB
_closeDB
fetchTokenState:
fetchQueryCursor:
enumerateRecordsOfType:block:
_recordTypeFromRecordID:isShare:isDelete:
saveEditedRecords:deletedRecordIDs:deletedShareIDs:subResourceEditedRecords:serverChangeToken:clientChangeToken:
saveEditedRecords:subResourceEditedRecords:queryCursor:
saveSubResourceRecords:afterSavingMainTableItems:queryCursor:
copyBlockingSaveRecordsToNeedingFetchIgnoringRecords:
enumerateRecordsNeedingXattrFetchWithBlock:
enumerateRecordsNeedingMetadataFetchWithBlock:
hasFetchRecordByID:
hasRecordIDBlockedOnSubResources:
hasRecordIDsToDeserialize
hasXattrsToFetch
hasSubResourceRecords
hasRecordDeletes
_saveSubResourceRecord:
finishedFetchingXattrSignatures:
unblockRecordSavesWaitingOnRecordID:
_finishedFetchingRecordMetadata:
hasBeenCreated
_destroyDatabase
destroyDatabase
_startingChangeToken
_label
_hasBeenCreated
_dbHasOpened
hasSerializedNameComponents
serializedNameComponents
setSerializedNameComponents:
_serializedNameComponents
T@"NSData",&,N,V_serializedNameComponents
initWithName:zone:share:
_updateDBAndSyncDownIfNeededWithShare:recordsToLearnCKInfo:
_performAfterCopyingPublicSharingKeyWithRecordID:completion:
_performAfterGettingPublicSharingKeyForRecord:completion:
_shouldFetchSharingIdentity:
_performAfterFetchingSharingIdentityOnDocumentItem:wantRoutingKey:completion:
_performAfterFetchingSharingIdentityOnDirectoryItem:wantRoutingKey:completion:
_performAfterFetchingiWorkRoutingTokenIfNecessary:completion:
_performAfterFetchingiWorkSharingIdentityOnItem:wantRoutingKey:completion:
_performAfterPreparingSharingIdentityIfNecessaryWhenWantRoutingKey:completion:
performAfterPreparingSharingIdentityIfNecessary:
_share
_sharingIdentityPreparedRecord
initWithShare:zone:
performAfterUnsharingParentShareTurdIfNecessary:
initWithUserIdentities:session:
_userIdentities
_shareParticipants
initWithItem:allowAccess:
_document
_allowAccess
_accessToken
_referenceIdentifier
_fetchBaseTokenWithCompletion:
_fetchParticipantKeyWithCompletion:
_fetchParticipantDocumentTokenWithCompletion:
_completeWithResult:participantKey:
_contentRecordID
_participantDocumentToken
_participantKey
_baseToken
_iWorkShareable
_isChildOfShare
_shouldFetchParticipantDocumentToken
_performPCSChainBatch
_serverItem
initWithShare:zone:appName:
_completedWithURL:error:
_appName
initWithShareID:emptyRecord:
emptyRecord
_emptyRecord
T@"CKRecordID",R,N,V_shareID
T@"CKRecord",R,N,V_emptyRecord
initWithItem:processType:maxSubitemsToFail:
_stopObservingListOperation
removeSharedSubitemsWithCompletion:
_completeAfterProcessingClientTruthIfNecessaryWithError:
computeURLForItemID:rootURL:
_completeAfterProcessingServerTruthIfNecessaryWithError:
processServerItemsUnderItemID:completion:
processServerTruthWithCompletion:
deleteShareInfoFromZone:zoneRowID:itemID:sharingOptions:itemsTable:
processClientTruthWithCompletion:
_failedSubitemsLeft
_processType
_sharedClientSubitems
_sharedServerSubitems
_aliasItemsToDelete
_shareIDsToDelete
_activeListOperations
_rootClientZone
_isFSRoot
_alreadyHasShareID
setMagnitudeFloat:
setHasMagnitudeFloat:
hasMagnitudeFloat
setMagnitudeDouble:
setHasMagnitudeDouble:
hasMagnitudeDouble
setMagnitudeInt:
setHasMagnitudeInt:
hasMagnitudeInt
setMagnitudeBool:
setHasMagnitudeBool:
hasMagnitudeBool
setMagnitudeLong:
setHasMagnitudeLong:
hasMagnitudeLong
magnitude
setMagnitude:
setHasMagnitude:
hasMagnitude
magnitudeAsString:
StringAsMagnitude:
clearOneofValuesForMagnitude
setTimestamp:
setHasTimestamp:
hasTimestamp
hasInvestigation
setIdentifier:
magnitudeFloat
magnitudeDouble
magnitudeInt
magnitudeBool
magnitudeLong
timestamp
investigation
setInvestigation:
_magnitudeDouble
_magnitudeLong
_timestamp
_identifier
_investigation
_magnitude
_magnitudeFloat
_magnitudeInt
_magnitudeBool
TI,N,V_identifier
Tf,N,V_magnitudeFloat
Td,N,V_magnitudeDouble
Ti,N,V_magnitudeInt
TB,N,V_magnitudeBool
Tq,N,V_magnitudeLong
Ti,N,V_magnitude
TQ,N,V_timestamp
T@"AppTelemetryInvestigation",&,N,V_investigation
fallbackParentAppLibraryOnFS
fallbackParentItemOnFS
fallbackParentServerItemOnFS
fallbackParentItemIDOnFS
parentItemIDOnFSInDB:
aliasDerivedStructure
brc_description
brc_isResetError
brc_containerResetErrorForSharedZone:resetReason:
br_suggestedRetryTimeInterval
brc_isRetriable
brc_isUserInitiatedRetriable
brc_shouldRetryLater
brc_isEverRetriable
brc_checkErrorsFromCloudKit:
_brc_isCloudKitErrorCode:
brc_containsCloudKitErrorCode:
_brc_cloudKitInternalWithErrorCode:
_brc_isCloudKitInternalErrorCode:
brc_containsCloudKitInternalErrorCode:
br_cloudKitErrorForIdentifier:
brc_cloudKitErrorForSubscriptionID:
brc_cloudKitErrorForRecordID:
brc_cloudKitErrorForZone:
brc_isCloudKitCancellationError
brc_isCloudKitAssetFileModified
brc_isCloudKitOutOfQuota
brc_isCloudKitAtomicFailure
brc_isCloudKitPCSChainingError
brc_isCloudKitUnknownItemError
brc_isCloudKitAccountTemporarilyUnavailable
brc_isCloudKitErrorRequiringAssetRescan
brc_isCloudKitErrorRequiringAssetReupload
_brc_isCloudKitPluginErrorCode:
_brc_cloudKitPluginErrorPayload
brc_isCloudKitErrorUnsupportedOSForItemAndGetMinimumSupported:
brc_isCloudKitErrorUnsupportedOSForZoneAndGetMinimumSupported:
brc_isCloudKitErrorChainedToNewParent:
brc_isCloudKitErrorRemappedToNewRecordName:
brc_isIndividualItemBlacklistError
brc_isRetriableForPCSChaining
brc_isCloudKitErrorRequiringSkipThrottling
_brc_isCloudKitInternalErrorSafeToSyncUpWithoutSyncDown
brc_isCloudKitErrorSafeToSyncUpWithoutSyncDown
brc_isBlacklistError
brc_isOutOfSpaceError
_brc_isCloudKitZoneNotFoundError
_brc_isCloudKitZoneUserDeletedError
brc_isCloudKitErrorImplyingZoneNeedsCreation
brc_isCloudKitErrorZoneUndergoingMigration
brc_isCloudKitErrorZoneMigrated
brc_isCloudKitErrorNeedsPCSPrep
brc_isStaleRecordUpdateError
brc_isReferenceValidationError
brc_isCloudKitPCSDecryptionFailure
brc_isIgnorableListDirectoryError
brc_strippedError
brc_wrappedError
brc_cloudKitErrorMessage
brc_telemetryReportableErrorWithRecordName:
brc_isExpectedErrorForTelemetry
brc_errorWithDomain:code:underlyingError:
brc_daemonAccessDisabledError
initialize
initWithWorkloop:name:
workloop
addSource:
unregisterSources
sourceForBitIndex:
signalSourceForBitIndex:
_workloop
_maxRegistedSourceBit
_lastVisitedBit
_sourceForBitIndex
T@"NSObject<OS_dispatch_workloop>",R,N
initWithName:scheduler:
_runEventHandler
setWorkloop:
eventHandler
setEventHandler:
_schedulerBitIndex
_scheduler
_signaled
_eventHandler
T@"NSObject<OS_dispatch_workloop>",&,N,V_workloop
T@?,C,N,V_eventHandler
initWithDocumentItem:forPublish:readonly:
_updateItemAfterShareCompleted
_recordIDs
_forPublish
_readonly
_sharingInfo
initWithSyncContext:subOperations:
wrapperOperationCompletionHandler
setWrapperOperationCompletionHandler:
_resultDictionary
_wrapperOperationCompletionHandler
T@?,C,N,V_wrapperOperationCompletionHandler
updateWithServerChangeToken:requestID:
containerMetadataWasReset
allocateNextRequestID
serverChangeToken
lastSyncDownDate
needsContainerMetadataSyncDown
setNeedsContainerMetadataSyncDown:
needsSharedDBSyncDown
setNeedsSharedDBSyncDown:
hasCaughtUpAtLeastOnce
setHasCaughtUpAtLeastOnce:
requestID
ckGroup
setCkGroup:
_needsContainerMetadataSyncDown
_needsSharedDBSyncDown
_hasCaughtUpAtLeastOnce
_ckGroup
T@"NSDate",R,N,V_lastSyncDownDate
T@"CKServerChangeToken",R,N,V_serverChangeToken
TB,N,V_needsContainerMetadataSyncDown
TB,N,V_needsSharedDBSyncDown
TB,N,V_hasCaughtUpAtLeastOnce
T@"CKOperationGroup",&,N,V_ckGroup
initWithZoneHealthState:
needsSyncDown
setNeedsSyncDown:
_needsSyncDown
T@"NSDate",R,V_lastSyncDownDate
TB,N,V_needsSyncDown
needsSync
setNeedsSync:
_needsSync
TB,N,V_needsSync
totalCount
_totalCount
initWithParentPath:error:
nextObjectWithIsDir:error:
_dir
_parentPath
initForEnumeratingBelow:recursive:error:
_recursive
_err
initForEnumeratingBelow:recursive:batchSize:targetQueue:
scheduleWithProcessBlock:completion:
rootPath
_targetQueue
_rootPath
T@"BRCRelativePath",R,N,V_rootPath
accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:
process:didBecomeForeground:
notificationPipe:willObserveAppLibrary:
notificationPipe:didObserveAppLibrary:
setPrivilegesDescriptor:
initWithConnection:
wait
addOperation:
_process:didBecomeForeground:
_startMonitoringProcessIfNeeded
_stopMonitoringProcess
cloudEnabledStatus
_hasAccessToAppLibraryID:error:
_canCreateAppLibraryWithID:error:
_isAppLibraryProxyWithError:
_hasPrivateIPCEntitlementForSelector:error:
_entitlementValueForKey:ofClass:
_entitlementBooleanValueForKey:
defaultMangledID
entitledAppLibraryIDs
_isAppLibraryProxyEntitled
_isAutomationEntitled
hasPrivateSharingInterfaceEntitlement
bundleID
isSandboxed
_auditURL:
_auditedURLFromPath:
canAccessPath:accessKind:
_overrideSessionForURL:
performBlock:withSessionFromURL:
performBlockWithAnySession:
canAccessLogicalOrPhysicalURL:accessKind:session:
_becameXPCCLientOfSession:
_finishedXPCClientOfSession:
canAccessPhysicalURL:
issueContainerExtensionForURL:error:
_setupAppLibrary:error:
_setupAppLibraryAndZoneWithID:recreateDocumentsIfNeeded:reply:
setupNonSandboxedAccessForUbiquityContainers:forBundleID:
_startSharingOperationAfterAcceptation:client:item:
clientPriviledgesDescriptor
setClientPriviledgesDescriptor:
connection
dieOnInvalidate
isUsingUbiquity
setIsUsingUbiquity:
_invalidated
_clientPriviledgesDescriptor
_operationQueue
__session
_clientPid
auditToken
_dieOnInvalidate
_isForeground
_personaMonitorCounts
_isUsingUbiquity
_connection
T@"BRCClientPrivilegesDescriptor",&,N,V_clientPriviledgesDescriptor
T@"BRCAccountSession",&,N,V__session
TB,N,V_isUsingUbiquity
T@"NSXPCConnection",R,W,N,V_connection
TB,R,N,V_dieOnInvalidate
prepareFileProvidersWithReply:
currentAccountCopyTokenWithBundleID:version:reply:
getPrimaryiCloudAccountStatus:
fetchContainerPathForCurrentPersonaWithReply:
fetchGroupContainerPathForCurrentPersonaWithReply:
getQueryItemForURL:reply:
updateItemFromURL:reply:
evictItemAtURL:options:reply:
thumbnailChangedForItemAtURL:reply:
resolveConflictWithName:atURL:reply:
_gatherInformationForPath:session:reply:
launchItemCountMismatchChecksAtURL:reply:
getBookmarkDataForURL:onlyAllowItemKnowByServer:allowAccessByBundleID:reply:
getBackReferencingContainerIDsForURLs:reply:
forceConflictForURL:bookmarkData:forcedEtag:reply:
setiWorkPublishingInfoAtURL:publish:readonly:reply:
getiWorkPublishingInfoAtURL:reply:
getiWorkPublishingBadgingStatusAtURL:reply:
getiWorkNeedsShareMigrateAtURL:reply:
startOperation:toEvictItemAtURL:reply:
copyCollaborationIdentifierForItemAtURL:reply:
copyBulkShareIDsAtURLs:reply:
getCreatorNameComponentsForURL:reply:
removeItemFromDisk:reply:
trashItemAtURL:reply:
pauseSyncForFileAtURL:timeout:options:reply:
resumeSyncForFileAtURL:dropLocalChanges:reply:
fetchLatestVersionForFileAtURL:reply:
handleCloudKitShareMetadata:completionHandler:
willAcceptShareAtURL:
startOperation:toCopyShareURLForShare:appName:reply:
startOperation:toSaveSharingInfo:reply:
startOperation:toUnshareShare:forceDelete:reply:
copyCurrentUserNameAndDisplayHandleWithReply:
startOperation:toCopyDocumentURLForRecordID:syncIfNeeded:reply:
startOperation:toLookupShareParticipants:reply:
setupInstanceWithDict:reply:
resetBudgets:reply:
dumpDatabaseTo:containerID:personaID:includeAllItems:reply:
dumpCoordinationInfoTo:reply:
performSelfCheck:reply:
printStatus:containerID:reply:
gatherInformationForPath:reply:
simulateHealthIssueWithContainer:status:reply:
healthStatusStringForContainer:reply:
zoneNameForContainer:reply:
forceSyncWithBarrierContainerID:timeout:reply:
forceSyncZoneHealthWithBarrierWithTimeout:reply:
forceSyncContainerID:reply:
iWorkForceSyncContainerID:ownedByMe:reply:
computePurgeableSpaceForAllUrgenciesWithReply:
purgeAmount:withUrgency:reply:
reclaimAmount:withUrgency:reply:
dropSpotlightIndexWithReply:
waitForFileSystemChangeProcessingWithReply:
launchSyncConsistencyChecksWithReply:
pauseSyncConsistencyWithReply:
resumeSyncConsistencyWithReply:
cancelTreeConsistencyCheckWithReply:
createContainerWithID:ownerName:reply:
getContainersByID:
getContainerForMangledID:personaID:reply:
checkinAskClientIfUsingUbiquity:
presyncContainerWithID:reply:
getContainerURLForID:reply:
getContainerURLForID:recreateDocumentsIfNeeded:reply:
getContainerURLForID:forProcess:reply:
updateContainerMetadataForID:
deleteAllContentsOfContainerID:onClient:onServer:wait:reply:
registerInitialSyncBarrierForID:reply:
startOperation:toDownloadItemAtURL:readingOptions:wantsCurrentVersion:reply:
getItemUpdateSenderWithReceiver:reply:
queryPathsForPersona:reply:
querySyncedRootURLsForPersona:reply:
queryLoggedInAccountDescriptorsWithReply:
getTotalApplicationDocumentUsageWithReply:
getApplicationDocumentUsageInfoForBundleID:withReply:
hasOptimizeStorageWithReply:
setStorageOpimizationEnabled:reply:
evictOldDocumentsWithReply:
iCloudDesktopSettingsChangedWithAttributes:reply:
didReceiveHandoffRequestForBundleID:reply:
getLoggedInUserPropertyValuesForKeys:reply:
createAccountWithACAccountID:dsid:reply:
logoutAccountWithACAccountID:reply:
updateAccountDisplayName:reply:
invalidateAccountCacheWithReply:
getContainersNeedingUpload:
setMigrationStatus:forDSID:shouldUpdateAccount:reply:
getMigrationStatusForPrimaryiCloudAccount:
getSyncState:reply:
jetsamCloudDocsAppsWithReply:
resolveBookmarkDataToURL:reply:
resolveFileObjectIDsToContentRecordIDs:reply:
resolveFileObjectIDToURL:reply:
getApplicationStatus:
getApplicationStatusForProcess:reply:
getLastSyncDateWithReply:
getLocalizedLastSyncWithReply:
getContainerStatusWithID:reply:
getContainerLastServerUpdateWithID:reply:
getIsContainerWithIDOverQuota:reply:
currentNotifRankWithReply:
enumerateItemsInFolder:sortOrder:offset:limit:completion:
enumerateAllFoldersWithSortOrder:offset:limit:completion:
enumerateWorkingSetChangesFromChangeToken:limit:completion:
startOperation:toCopySharingWebAuthTokenForContainerID:reply:
startOperation:toCopyAvailableQuotaWithReply:
startOperation:toUploadAllFilesInContainer:reply:
startOperation:toAcceptShareLink:skipAcceptDialogs:reply:
copyCurrentUserIdentifierWithReply:
copyCurrentUserNameAndEmailWithReply:
presentAcceptDialogsForShareMetadata:reply:
updatePrivilegesDescriptor
refreshSharingStateForItemIdentifier:reply:
checkIfItemIsShareableWithInode:reply:
getShareOptionsOfItemIdentifier:reply:
lookupExcludedFilenamesForLogoutWithReply:
lookupExcludedExtensionsForLogoutWithReply:
lookupMinFileSizeForThumbnailTransferWithReply:
getPausedFilesList:reply:
copyCollaborationIdentifierForFileObjectID:reply:
_t_getEntitlementsForBundleID:reply:
_t_getEntitledContainerIDsForBundleID:reply:
_t_extractMetadataForAllContainersWithReply:
queryLastCiconiaVersion:
signalStartOfSilentTelemetry:uuid:manual:version:reply:
reportItemMismatchDuringSilentMigration:information:uuid:reply:
reportCleanupFailureDuringSilentMigration:operationType:uuid:reply:
reportOverBounceDuringSilentMigration:total:uuid:reply:
reportFinishedMigration:uuid:reply:
queryTelemetryEnablement:
corruptDatabase:
_removeSandboxedAttributes:
_loggedInUserPropertyValuesForKeys:error:
_unregisterPrematurely
_enumerateFoldersWithParent:depth:session:db:handler:
_getPublishedURLForLocalItem:forStreaming:requestedTTL:reply:
_startOperation:toCopySharingInfoWithLocalItem:reply:
startOperation:toCopySharingInfoWithItemID:reply:
_createSharingInfoForLocalItem:reply:
createSharingInfoForItemID:reply:
_startOperation:toModifyRecordAccessWithLocalItem:allowAccess:reply:
startOperation:toModifyRecordAccessWithItemID:allowAccess:reply:
_startOperation:toCopyParticipantTokenWithLocalItem:reply:
startOperation:toCopyParticipantTokenWithItemID:reply:
_startOperation:toPrepFolderForSharingWithLocalItem:reply:
startOperation:toPrepFolderForSharingWithItemID:reply:
_startOperation:toProcessSubitemsWithLocalItem:maxSubsharesFailures:processType:reply:
startOperation:toProcessSubitemsWithItemID:maxSubsharesFailures:processType:reply:
_presentAcceptDialogsWithMetadata:reply:
_sendPausedFileListBatchToUpdater:fromRowID:batchSize:completion:
_isErrorAnExpectedError:originatorId:
initWithContainerScheduler:metadataChangeToken:zoneHealthChangeToken:sideCarChangeToken:
scheduleSyncDownIfNeededForZoneID:zoneIfAny:
scheduler
metadataChangeToken
zoneHealthChangeToken
sideCarChangeToken
_metadataChangeToken
_zoneHealthChangeToken
_sideCarChangeToken
T@"BRCContainerScheduler",R,N,V_scheduler
T@"CKServerChangeToken",R,N,V_metadataChangeToken
T@"CKServerChangeToken",R,N,V_zoneHealthChangeToken
T@"CKServerChangeToken",R,N,V_sideCarChangeToken
wantsContent
wantsThumbnail
userInitiated
wantsContentForThumbnail
setOptions:
markLiveAsFault
initWithDesiredVersion:
initWithServerVersion:serverName:
isStillValidForEtag:
downloadError
setDownloadError:
serverName
_downloadError
_serverName
T@"NSError",&,N,V_downloadError
T@"NSString",R,N,V_serverName
TI,N
_reportRecords:requestID:
packageItemsForItem:order:
_setXattrs:session:
initWithPBItem:forLocalItem:
assetRank
itemRowID
pathInPackage
_itemRowID
_pathInPackage
_assetRank
_isDirty
TQ,R,N,V_itemRowID
T@"BRCGenerationID",R,N,V_generationID
T@"NSString",R,N,V_pathInPackage
Tq,R,N,V_assetRank
Tq,R,N,V_mtime
Tc,R,N,V_mode
T@"NSData",R,N,V_xattrSignature
initWithScheduler:name:
willRunEvenHandler
runEventHandler
_deadline
initWithName:fairScheduler:
_setupTimerRequiredForDeadline:now:
runDeadlineSource:completionHandler:
addSource:deadline:
coalescingLeeway
setCoalescingLeeway:
computeNextAdmissibleDateForScheduling
setComputeNextAdmissibleDateForScheduling:
fairScheduler
_minHeap
_leeway
_lastSchedule
_isResumed
_computeNextAdmissibleDateForScheduling
T@"BRCFairScheduler",R,N,V_fairScheduler
Tq,N,V_leeway
T@?,C,N,V_computeNextAdmissibleDateForScheduling
_contextIdentifierForMangledID:metadata:
metadataContextIdentifierForMangledID:
transferContextIdentifierForMangledID:
transferContextForServerZone:appLibrary:
initWithSession:contextIdentifier:isShared:
setupIfNeeded
ckContainer
notifyDuetFromAccessByBundleID:
_preventConcurrentModifyRecordsOperations:nonDiscretionary:
allowsCellularAccess
addOperation:allowsCellularAccess:
addOperation:nonDiscretionary:
addOperation:allowsCellularAccess:nonDiscretionary:
waitForAllOperations
forceContainerForegroundForDuration:
foregroundClients
_armForegroundGraceTimerForClientDescription:
_notifyFrameworkContainersMonitorWithState:
_notifyContainerBeingNowForeground
contextIdentifier
readerThrottle
applyThrottle
downloadThrottle
uploadThrottle
uploadFileModifiedThrottle
perItemSyncUpThrottle
uploadStream
downloadStream
_contextIdentifier
_isShared
_notifyTokenForFramework
_lastForegroundClientDescription
_dateWhenLastForegroundClientLeft
_timerForGraceForegroundPeriod
_timerForForcedForegroundPeriod
_foregroundStateQueue
_foregroundState
_nonDiscretionaryModifyOperations
_discretionaryModifyOperations
_nonDiscretionaryRecursiveListOperationQueue
_discretionaryRecursiveListOperationQueue
_applyThrottle
_downloadThrottle
_uploadThrottle
_uploadFileModifiedThrottle
_perItemSyncUpThrottle
_uploadStream
_downloadStream
T@"NSString",R,N,V_contextIdentifier
T@"BRCUserDefaults",R,N
TB,R,N,V_isShared
T@"CKContainer",R,N
T@"CKContainerID",R,N
T@"BRCTransferStream",R,N,V_uploadStream
T@"BRCTransferStream",R,N,V_downloadStream
T@"BRCThrottleBase",R,N,V_readerThrottle
T@"BRCThrottleBase",R,N,V_applyThrottle
T@"BRCThrottleBase",R,N,V_uploadThrottle
T@"BRCThrottleBase",R,N,V_uploadFileModifiedThrottle
T@"BRCThrottleBase",R,N,V_perItemSyncUpThrottle
T@"BRCThrottleBase",R,N,V_downloadThrottle
_syncContextForContextIdentifier:isShared:createIfNeeded:
defaultSyncContext
sharedMetadataSyncContext
zoneHealthSyncContext
sideCarSyncContext
transferSyncContextForMangledID:
transferSyncContextForMangledID:createIfNeeded:
metadataSyncContextForMangledID:
allSyncContexts
possiblyContainsSharedItem
isSharedByMeOrContainsSharedByMeItem
isSharedToMeOrContainsSharedToMeItem
containsOverQuotaItems
containsDirFault
containsFault
containsPendingDownload
containsPendingUploadOrSyncUp
containsPendingDeleteDocuments
transformIntoFSRoot
hasDeadChildren
hasLiveChildren
_serverChildItemCount
childItemCount
serverQuotaUsage
clientZonesChildrenNeedingSyncUpAreIn
_retryPostponedIfNeededForDiffs:
_repopulateRecursivePropertiesIfNecessary
_insertRecursiveProperties
_updateRecursiveProperties
_recomputeChildItemCount
doubleForKey:inParams:defaults:
setupWithParams:defaults:
initWithParams:defaults:
paramsToDictionary
minWait
setMinWait:
maxWait
setMaxWait:
ratioOnSuccess
setRatioOnSuccess:
ratioOnFailure
setRatioOnFailure:
ratioOnQuotaErrorClear
setRatioOnQuotaErrorClear:
inactivityKickbackDelay
setInactivityKickbackDelay:
inactivityKickbackRatio
setInactivityKickbackRatio:
Td,N,VminWait
Td,N,VmaxWait
Td,N,VratioOnSuccess
Td,N,VratioOnQuotaErrorClear
Td,N,VratioOnFailure
Td,N,VinactivityKickbackDelay
Td,N,VinactivityKickbackRatio
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:downloadTask:didFinishDownloadingToURL:
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
_prepopulateGlobalUserDefaults
initWithPersonaID:
defaultsForIdentifier:
_setServerConfigurationURL:whenLoaded:
setServerConfigurationURL:whenLoaded:
loadCachedServerConfiguration
_parsePlistWithURL:
_loadServerConfigurationDictionary
_reset
_serverConfigurationURL
_serverConfigurationDict
_userDefaultsCache
_configurationPlistDidUpdateBlock
_downloadQueue
_urlSession
_defaultsDidChangeNotificationObserver
_userDefaultsManager
defaultsForMangledID:
defaultsForMetadataContainer
defaultsForSharedZone
defaultsForSideCar
cachedServerConfigurationPath
rampNumberWithSession:
initWithServerConfiguration:globalUserDefaults:clientZoneIdentifier:
initAsGlobalWithServerConfiguration:
_isSharedDefaults
_loadObjectForKey:inheritFromGlobal:validateWithBlock:
_serverDefaultForKey:
objectForKey:inheritFromGlobal:validateWithBlock:
intForKey:min:max:byDefault:
unsignedIntForKey:min:max:byDefault:
unsignedIntForKey:inheritFromGlobal:min:max:byDefault:
unsignedLongLongForKey:min:max:byDefault:
floatForKey:inheritFromGlobal:min:max:byDefault:
floatForKey:min:max:byDefault:
stringForKey:inheritFromGlobal:byDefault:
stringForKey:byDefault:
doubleForKey:min:max:byDefault:
boolForKey:byDefault:
boolForKey:inheritFromGlobal:byDefault:
indexSetForKey:byDefault:
indexSetForKey:inheritFromGlobal:byDefault:
xpcActivityDictionaryForKey:byDefault:
maxXattrBlobSize
maxPreservedXattrBlobSize
shouldFetchAllChanges
maxRecordCountInFetchRecordsOperation
maxRecordCountInModifyRecordsOperation
maxRecordCountWhenListingDirChanges
listDirChangesCancelDelay
rescheduleItemsRecursivelyBatchSize
modifyRecordsCountMultiplicativeDecrease
modifyRecordsCountAdditiveIncreaseFraction
maxRecordCountInClientZoneModifyRecordsOperation
maxRecordCountInQuerySharedRecordsOperation
maxRelativePathDepth
maxSyncPathDepth
treeEnumeratorBatchSize
_extensionSetForKey:startingWithExtensions:
_UTISetFor:startingWithExtensions:
packageExtensions
blacklistedPackageExtensions
iworkShareableExtensions
shouldFixupBundleBitOnPackages
extensionsSkippingBundleBitFixup
shouldBeGreedyExtensions
nonAutoEvictableExtensions
nonEvictableExtensions
nonEvictablePathComponents
nonAutoEvictableUTIs
autoEvictableUTIs
blacklistedThumbnailExtensions
_umaskForKey:
stageFileUmask
stageFSRootUmask
stageDirectoryUmask
stageInPackageDirectoryUmask
stageInPackageFileUmask
configurationUpdateXPCActivity
forcedSyncXPCActivity
transmogrifyXPCActivity
appLibraryScanThrottleParams
lostItemThrottleParams
applyThrottleParams
downloadThrottleParams
uploadThrottleParams
uploadFileModifiedThrottleParams
perItemSyncUpThrottleParams
availableQuotaComfortSize
quotaFetchPacerDelay
appsFetchPacerDelay
skipPerItemSyncUpThrottling
skipSyncUpThrottlingOnBatchFailures
operationFailureThrottleParams
appLibraryResetThrottleParams
sharedAppLibraryResetThrottleParams
appLibraryAliasRemovalThrottleParams
syncDownThrottle
syncUpThrottle
syncClientZoneThrottleParams
syncClientZoneErrorThrottleParams
syncUpMinimalBudget
_defaultSyncUpDailyBudget
syncUpDailyBudget
_defaultSyncUpHourlyBudget
syncUpHourlyBudget
_defaultSyncUpMinutelyBudget
syncUpMinutelyBudget
syncUpInitialItemCost
syncUpStructureCreateCost
syncUpStructureEditCost
syncUpStructureDeleteCost
syncUpDataCreateCost
syncUpDataEditCost
syncUpDataDeleteCost
syncUpDocumentCreateCost
syncUpDocumentEditCost
syncUpDocumentDeleteCost
sharedDbSyncDownCoalesceNanoseconds
readerThrottleParams
dbTraced
dbProfiled
dbBatchSize
dbBatchDelay
allowReadOnlyDBInIPC
dbAutovacuumBatchSize
dbAutovacuumRatio
skipServerSideThrottling
shouldAppLibraryBeGreedy
shouldSessionBeGreedy
maxTotalFilesCount
maxNumberOfFilesInAFolder
uploadMaxFileSize
uploadMaxInPkgFileSize
uploadMaxPkgFileSize
uploadBatchRecordsCount
uploadBatchCount
downloadBatchRecordsCount
downloadBatchCount
downloadWillRetryProgressMaxCount
zoneHealthSyncDownBatchRecordsCount
sharedDBSyncDownBatchRecordsCount
systemReachabilityLatency
systemPowerLatency
systemLowDiskLatency
readerIOsCancelDelay
writerIOsCancelDelay
readerMaxConcurrentIOs
writerMaxConcurrentIOs
readerScanBatchSize
readerPackageProcessingDelay
applySchedulerJobMaxRetriesBeforeAssert
writerApplyBatchSize
readerLostItemBackoff
markChildLostBackoff
fseventsLatency
fseventsResetBackoff
fseventQueueBufferSize
fseventProcessBatchSize
transferQueueMinBatchSize
transferQueueMinConcurrentOperations
transferQueueMaxConcurrentOperations
transferQueueTransferBudget
sessionZombiesEnabled
nsurlsessiondEnabled
stageGCXPCActivity
cacheDeletePushXPCActivity
serverConfigurationURL
publishURLTimeout
minFileSizeForGraveyard
minAutomaticallyEvictableFilesize
logoutTimeout
foregroundGracePeriod
forceForegroundGracePeriod
forceBatchFailureWhenReceivingAssetTokenExpiration
accessTimeDeltaInLowUrgency
accessTimeDeltaInMedUrgency
accessTimeDeltaInHighUrgency
accessTimeDeltaInVeryHighUrgency
defaultTimeDeltaForEviction
onDiskAccessTimeDeltaInLowUrgency
onDiskAccessTimeDeltaInMedUrgency
onDiskAccessTimeDeltaInHighUrgency
onDiskAccessTimeDeltaInVeryHighUrgency
defaultOnDiskAccessTimeDefaultForEviction
graveyardAgeDeltaInLowUrgency
graveyardAgeDeltaInMedUrgency
xattrAgeDelta
minFetchQuotaInterval
minForceTelemetrySyncInterval
purgePacerInterval
dbReclaimableSpaceThreshold
cacheDeleteRecomputeInterval
maximumDocumentAgeToBeGreedy
statementCacheMaxCountForServerTruth
statementCacheMaxCountForClientTruth
copyShareIDsBatchSize
aliasDeletionBatchSize
minimumDiskSpaceRequiredToDownload
minimumDiskSpaceRequiredToDownloadUserInitiated
minimumDiskSpaceRequiredToBeGreedy
diskSpaceRequiredToReturnToGreedyState
relativeDiskSpaceRequiredToReturnToGreedyState
maximumAccountSizeToBeAlwaysGreedy
minimumDiskSpaceRequiredToBeFunctional
diskSpaceCheckInterval
activeDownloadSizeRefreshInterval
shouldDisplayUploadNotification
spotlightIndexingEnabled
recentsEnumeratorPacerInterval
recentsEnumeratorBatchSize
recentsEnumeratorMaxHierarchyDepth
recentsEnumeratorFailureThrottleParams
migrationThrottleParams
intervalToWaitBeforeShowingAdditionalDescription
minimalSizeToShowAdditionalDescription
documentAccessHighPriorityInterval
packageExtensionPlistWriteInterval
minFileSizeForThumbnailTransfer
thumbnailTransferQueueWidth
notifOverflowLimit
notifGatherUpTo
notifBatchSize
periodicSyncTimeInterval
zoneHealthReportedRecordNamesCount
onlyTreatCaughtUpAsConsistent
blacklistPCSPrep
shouldPreparePCSMigration
pcsChainingMaxPathDepth
pcsChainingBatchSize
destroyiWorkShares
readerMarkChildrenLostBatchSize
lostScanDeepScanFirstThreshold
bounceFileMaxRetries
bounceFileReportInterval
excludedFilenamesWorthWarningAtLogout
excludedFilenamesWorthPreserving
excludedExtensionsWorthPreserving
ignoredQuarantineMask
shouldAutoMigrateToCloudDocs
_shouldRampForKey:session:
optimisticallyPCSChainWithSession:
optimisticallyPCSChainDuringResetWithSession:
aggressivelyPCSChainWithSession:
aggressivePCSChainActivity
shouldFixupTargetCZMAliases
deleteShareIDBatchCount
maxFolderEnumerationCount
maxFolderEnumerationDepth
powerLogReportInterval
sqliteCacheSize
sqliteCacheSpill
downloadSizeRefreshInterval
forceSyncOverride
utiCacheSize
fieldsToMoveOutOfTrashMask
applyCountToSignalFaultsLive
numberOfGreedyRecentlyUsedItems
computeEvictableBatchSize
eventMetricTimeout
shouldReportAllPerItemFailures
pendingChangesStreamSoftOpenCount
pendingChangesStreamHardOpenCount
pendingChangesStreamCloseDelay
discretionaryRecursiveListMaxOperationCount
nonDiscretionaryRecursiveListMaxOperationCount
recursiveListFetchDirFaultBatchSize
dbMigrationBatchSize
forceDeltaInitialSync
blockApplyUntilList
allowsDirectoryListBeforeInitialChangeToken
canSaveRecordsDirectlyForList
canSaveRecordsDirectlyForDeltaSync
canSaveRecordsDirectlyWithDeletes
isBlacklistedFromFolderSharing
fetchContentRecordsInline
fetchShareRecordsInline
qbsExpectedItemsFetchedPerInterval
qbsExpectedItemsFetchedCheckInterval
syncUpDelayForFailure
syncDownDelayForFailure
syncUpBackoffDelayForFailure
syncUpBackoffRatioForFailure
syncUpRetryCountForFailure
uploadRetryCountForFailure
downloadRetryCountForFailure
applyRetryCountForFailure
readerRetryCountForFailure
analyticsReportXPCActivity
appTelemetryGatherXPCActivity
useFailIfOutdatedForResets
fakeEtagForFailIfOutdated
useShareReferenceOnSideCar
shouldMigrateFetchShareAliases
carryPartitions
maxBackoffToRetryUserInitiated
pcsChainShareAliases
delayForStuckThrottle
forceFailIfExistOnRevival
changeItemIDOnUnknownItem
healthZoneMaxNumberOfResets
healthZoneTimeIntervalForMaxNumberOfResets
reportXPCErrorOnPCSChain
timeoutForCZMProcessing
shouldReportTelemetryEvents
telemetryEventQueueSize
telemetryEventQueueReductionAmount
telemetryEventReportBatchSize
telemetryEventDisabledMessages
telemetryRetryCountForPermenentFailure
telemetryApplySchedulerTimeout
telemetryHeaderSupportedClasses
telemetryErrorDescriptionMaxLength
benignTelemetryErrorDescriptions
deleteShareOnEmptySave
preventRecordSyncWithoutDiffs
stripBirthtimeFromSyncUpMaskOnDocuments
preventSharingFolderWithPendingDelete
ubiquitousMigrationMaxBouncingAttempts
_healthErrorSetForKey:byDefault:
healthErrorsForReset
healthErrorsToReport
recordsToIgnoreOnSyncDown
preventConcurrentModifyRecordsOperations
dbIntegrityCheckXPCActivity
dbIntegrityCheckApplyJobs
dbIntegrityCheckDownloadJobs
dbIntegrityCheckUploadJobs
dbIntegrityCheckReaderJobs
dbIntegrityCheckSyncUpJobs
hasMultiAccountsHandling
fetchParticipantDocumentToken
operationTimeout
syncConsistencyFileChecksumRate
syncConsistencyPackageChecksumRate
syncConsistencyMaxEventsCount
syncConsistencyCheckerEnabled
syncConsistencyCheckerSnapshotting
syncConsistencyCheckerXPCActivity
syncConsistencyXPCActivityDeferralCheckInterval
syncConsistencyXPCActivityCheckLeeway
syncConsistencyTimeout
skipContainerRecordsWithMissingAssets
maxPauseFileTimeout
autoResumeSyncBatchSize
iWorkFetchPausedFilesBatchSize
lostItemUnderUnknownParentBeforeDeepScan
ciconiaMaxReconciliationFailures
ciconiaMaxSideFaultsMigration
ciconiaMaxFailurePerVersion
ciconiaHideMigrationDomain
ciconiaKeepDomainAfterMigration
ciconiaImportTimeout
ciconiaDisableAutomatedStart
ciconiaRepeatInterval
serverStitchingThrottleParams
subResourceFetchLoopCacheSize
fetchFullAppLibraryContents
allowForceTelemetryDequeue
forceTelemetryDequeuePercentage
highPriorityTelemetryEventsPercentage
downloadStageAgeDelta
_globalUserDefault
_serverContainerConfigurationDict
_cache
_clientZoneIdentifier
T@"NSObject<OS_xpc_object>",R,N
T@"BRCSyncOperationThrottleParams",R,N
Tc,R,N
T@"NSIndexSet",R,N
predictedAppLibrary
anchorAtURL:error:
destroyAnchorAndPackageAnchoredAtURL:
anchorExistsForArchiverInfo:
containerCellularSettings
isCellularEnabled
_isCellularEnabledForDocumentsAndData
_accountDidChangeNotificationObserver
initDeltaSyncWithServerZone:
_performAfterFetchingRecordChanges:
handleZoneNotFoundIfSyncingDownForTheFirstTime:
_startSyncDown
_saveInitialServerZoneData:clientChangeTokenData:
_fetchInitialZoneIfNecessaryWithCreatedZone:
_startCreateZoneAndSubscriptionAndSyncDown
initWithError:pcsChained:
isEqualToErrorGrouping:
TB,R,N,V_isPCSChained
version
setVersion:
_version
Ti,N,V_version
initWithCKUserIdentity:
setNameComponents:
nameComponents
nameComponentsAcceptUnknownUser:
unknownPersonNameComponents
T@"NSPersonNameComponents",&,N
setupPagerForFd:
execPagerOnFileFd:
initWithFd:forceColor:
startPager
_startInCString:fgColor:bgColor:attr:
eraseEndOfLine
eraseStartOfLine
eraseLine
eraseScreenDown
eraseScreenUp
cursorSave
cursorRestore
cursorUp:
cursorDown:
cursorRight:
cursorLeft:
cursorGotoLineStart
startNewLine
endLine
remainingSpace
forgetRemainingSpace
_putsAndCrop:len:
puts:len:
puts:
put:
isatty
useColor
supportsEscapeSequences
_file
_termWidth
_usedTermWidth
_curAttrs
_curFg
_curBg
_isatty
_useColor
_supportsEscapeSequences
TB,R,N,V_isatty
TB,R,N,V_supportsEscapeSequences
TB,R,N,V_useColor
br_syncDown
br_syncDownPeriodic
br_syncDownInitial
br_syncDownPushTriggered
br_syncDownAppLaunch
br_syncDownAppLibraryMetadata
br_syncDownZoneHealth
br_listDirectoryContents
br_fetchParentChain
br_locateRecord
br_fetchRecents
br_syncUp
br_syncUpAppLibraryMetadata
br_syncUpZoneHealth
br_downloadThumbnails
br_downloadThumbnailsUserInitiated
br_downloadUserInitiated
br_downloadOpportunistic
br_downloadOptimizeStorageOff
br_downloadUpdatedDocuments
br_downloadConflictingVersions
br_upload
br_quotaUpdateUploader
br_quotaUpdateXPC
br_quotaUpdateTelemetry
br_zoneConsolidation
br_zoneConsolidationManual
br_zoneHealthSimulation
br_publishingRequest
br_syncUpAndDownShareDB
br_sharingMisc
br_fetchIdentityXPC
br_purge
br_fetchNonLocalVersions
br_osUpgradeMigration
br_aggressiveChaining
br_logout
cloudDocsAppsMonitor
forceRefetchAppList
hasFetchedInitialApps
_refetchApps
_start
addObserver:
removeObserver:
applicationIdentifiersForContainerID:
containerIDsForApplicationIdentifier:
allApplicationIdentifiers
isApplicationInstalledForContainerID:
_cloudDocsAppLibrariesByAppID
_appIDsByAppLibraryID
_observers
_refetchPacer
_fetchInstalledAppsQueue
_hasFetchedInitialApps
generationIDString
initWithSignature:length:
initWithFSGenerationID:
isEqualToGenerationID:orSignature:
isEqualToFSGenerationID:
T@"NSData",R,N,V_signature
newLocalItemFromPQLResultSet:db:error:
newServerItemFromPQLResultSet:error:
globalItemByDocumentID:
globalItemByDocumentID:db:
itemByFileObjectID:db:
itemByFileObjectID:
globalItemByFileID:
globalItemByFileID:db:
serverAliasItemForSharedItem:
serverAliasItemForSharedItem:db:
serverAliasItemForSharedItem:inZone:
serverAliasItemForSharedItem:inZone:db:
localAliasForSharedItem:inZone:
itemByItemGlobalID:db:
itemByItemGlobalID:
globalID:isStrictChildOfGlobalID:
enumerateItemsWithShareIDUnderParent:block:
enumerateSideFaultsUnderParent:db:block:
enumerateContainersWithDB:handler:
moveAppLibraryTransfers:toAppLibrary:
records
movedZoneNames
initAndScheduleWithServerZone:parentOperation:pendingChangesStream:contentRecordsFetchedInline:
addRecordIDToDeserialize:
addRecordIDToDeserialize:recordType:
recordIDWasDeleted:
shareIDWasDeleted:
_notifyWhenRecordsAreFetched:
notifyWhenCaughtUp:whenRecordsAreFetchedAndFinish:
notifyWhenRecordsAreFetchedAndFinish:
_startWithParentOperation:
stopWithError:
stop
_willFetchRecordForDeserialize:
_scheduleDeserialize
_markSubResourceRecordAsFetchedIfNecessary:
_scheduleXattrFetch
_createSubResourceGroupsFromPendingChangesStreamIfNecessary
_prepareToSaveRecords
_fetchRecordsBlockingSaveIfNecessary
_cleanUpAfterSavingRecords
_saveRecordsToPendingChangesWithServerChangeToken:clientChangeToken:
_hasRecordsPendingSubResources
saveRecordsWithServerChangeToken:clientChangeToken:syncStatus:
saveRecordsWithQueryCursor:
queryFinishedServerTruthCallback
setQueryFinishedServerTruthCallback:
queryFinishedClientTruthCallback
setQueryFinishedClientTruthCallback:
_subResourceRecordsByID
_deletedShareIDs
_movedZoneNames
_xattrFetchingGroup
_xattrFetchingSource
_deserializeGroup
_deserializeSource
_loopDetectionCacheSize
_loopDetectionCache
_deserializeState
_isDoneFetchingRecords
_isDeltaSync
_canSaveDirectly
_canSaveDirectlyWithDeletes
_contentRecordsFetchedInline
_recordsRequested
_recordsRequestedTotalMetadataSize
_queryFinishedServerTruthCallback
_queryFinishedClientTruthCallback
TQ,R,N,V_recordsRequested
TQ,R,N,V_recordsRequestedTotalMetadataSize
TQ,R,N,V_xattrsFetchedTotalSize
T@?,C,N,V_queryFinishedServerTruthCallback
T@?,C,N,V_queryFinishedClientTruthCallback
prettyNameForFilePresenterID:
_provideItemAtURL:completionHandler:
_providedItemsURL
_providedItemsOperationQueue
_provideItemAtURL:withInfo:completionHandler:
_getPhysicalURLForURL:completionHandler:
_writerWithID:didFinishWritingForURL:
_providedItemAtURL:didGainPresenterWithInfo:
_providedItemAtURL:didLosePresenterWithID:
_providedItemAtURL:withPresenterWithID:didMoveToURL:
_providedItemAtURL:didGainPresenterWithID:
_movingItemAtURL:requiresProvidingWithDestinationURL:completionHandler:
T@"NSURL",R,C
T@"NSOperationQueue",R
_keyForURL:
_keyForURL:andID:
_pathForKey:
_registerPresenterForItemAtURL:key:name:session:
_unregisterPresenterForKey:
_presentersIDsByKey
_privQueue
simpleUrgencyForCacheDeleteUrgency:
accessTimeDeltaForUrgency:
cachedPurgeableSpaceForAllUrgencies:nonPurgeableSpace:error:
_computeCiconiaSizeInBytes:
_dbSizeInBytes:
_dbAutovacuumableSpaceInBytes:
_fullVacuumIfPossible:
_doIncrementalVacuum:amount:
_vacuumDB:amount:withUrgency:
_asyncAutovacuumIfNeeds:
_garbageCollectGroupContainersDownloadStage
periodicReclaimSpace
urgencyForCacheDeleteUrgency:
renameAndUnlinkInBackgroundItemAtRelpath:
_requestPurgeSpace
cachedPurgeableSpaceForUrgency:
requestPurgeSpace
performOptimizeStorageWithTimeDelta:onDiskAccessTimeDelta:error:
_recursivelySizeDirectoryAtPath:
_isClosed
_computingPurgable
_purgePacer
shareAcceptationSidefaultEnumerator
addAcceptOperation:forItemID:
shareAcceptOperationForItemID:
removeAllShareAcceptationSidefaults
_shareAcceptationByItemID
T@"BRCSharedServerZone",R,N
initWithDictionary:
dictionary
objectForKey:
setObject:forKey:
objectForKeyedSubscript:
setObject:forKeyedSubscript:
_dict
reachabilityMonitor:didChangeReachabilityStatusTo:
reachabilityMonitor:didChangeReachabilityFlagsTo:
_initReachability
__resetReachability
_resetReachability
_invalidateReachability
_setReachabilityFlagsWithCoalescing:
isNetworkReachable
reachabilityFlags
_setReachabilityFlags:
addReachabilityObserver:
removeReachabilityObserver:
_initPowerManager
_invalidatePowerManager
_resetPowerManager
isPowerOK
_setPowerLevelWithCoalescing:
_setPowerLevel:
addPowerObserver:
removePowerObserver:
connectedToPowerSource
_initLowDiskManager
_invalidateLowDiskManager
_resetLowDiskManager
_processLowDiskNotification:
hasEnoughSpaceForDevice:
addLowDiskObserver:forDevice:
removeLowDiskObserver:forDevice:
_initLowMemory
_invalidateLowMemory
_didReceiveMemoryWarning
addLowMemoryObserver:
removeLowMemoryObserver:
_createMonitoringObjectForProcessID:observer:
_invalidateProcessMonitorObject:
_initProcessObservers
_invalidateProcessObservers
addProcessMonitor:forProcessID:
removeProcessMonitor:
_initAppListObservers
_invalidateAppListObservers
addAppListObserver:
removeAppListObserver:
_initXPCFSEvents
_notificationQueue
_reachabilityObservers
_reachabilityMonitor
_reachabilityFlags
_reachabilityFlagsTimer
_powerObservers
_powerNotifyToken
_powerLevelOK
_powerLevelOKTimer
_connectedToPowerSource
_connectedToPowerSourceCheckedDate
_lowDiskSet
_lowDiskDict
_lowDiskSource
_lowDiskTimer
_lowMemoryObservers
_memoryNotificationEventSource
_memoryNotificationCoalescePacer
_processObservers
_appListObservers
uploadMetricsReport:
dictionaryForErrorsByZone:wantPrivateZone:
telemetryDictionaryToUploadForError:errorMessage:count:syncType:totalItemsCount:zoneType:zoneCountsOnly:isFolderSharingEnabled:dsid:rampNumber:lastFailureDate:pcsState:
uploadSyncErrorsAsIndividualEvents:syncType:totalItemsCount:zoneType:zoneCountsOnly:isFolderSharingEnabled:dsid:rampNumber:
uploadLoadErrorsAsIndividualEvents:syncType:totalItemsCount:zoneCountsOnly:isFolderSharingEnabled:dsid:rampNumber:
newAppTelemetryMetricEvent:
sendTelemetryEvent:withReport:
hasNeverSyncedDown
updateWithServerChangeToken:clientRequestID:caughtUp:
forgetChangeTokens
forgetClientRequestID
initWithServerSyncState:
setLastSyncDownDate:
lastSyncDownStatus
setLastSyncDownStatus:
changeToken
setChangeToken:
clientRequestID
setClientRequestID:
_lastSyncDownStatus
_clientRequestID
T@"NSDate",&,V_lastSyncDownDate
Tq,N,V_lastSyncDownStatus
T@"CKServerChangeToken",&,N,V_changeToken
TQ,N,V_clientRequestID
initWithState:
saveToDB:
mangledIDIsPendingMigration:
initiateMigrationQueryForMangledIDs:key:
migrationQueryKeyForMangledID:continuationCursor:
migrationQueryForMangledID:key:didUpdateWithCursor:
dumpMigrationQueriesForMangledID:
nextRank
setNextRank:
sharedDatabaseChangeState
setSharedDatabaseChangeState:
minLastUsedTime
setMinLastUsedTime:
_pendingMigrations
_nextRank
_sharedDatabaseChangeState
_minLastUsedTime
T@"NSDate",&,N,V_lastSyncDownDate
Tq,N,V_nextRank
T@"BRCServerChangeState",&,V_sharedDatabaseChangeState
TQ,N,V_minLastUsedTime
learnStagedInfoFromDownloadStageID:error:
applyMetadataOnFileID:liveFD:sharingOptions:
fixupStagedItemAtStartup
_isNonSandboxedForAuditToken:
initWithAuditToken:
initWithNonSandboxedAppWithAppLibraryIDs:bundleID:auditToken:
hasPid
_finishSetupWithClientContainerIDs:
canFetchUserQuota
cloudEnabledStatusForSession:
updateCloudEnabledStatus
_computeCloudEnabledStatusWithoutLogOutStatus
applicationIdentifier
isNonAppSandboxed
isAllowedToAccessAnyCloudService
isProxyEntitled
isSharingProxyEntitled
isFolderSharingProxyEntitled
isSharingPrivateInterfaceEntitled
isAutomationEntitled
defaultAppLibraryID
hasAuditToken
_debugIdentifier
_cloudEnabledStatusWithoutLogOutStatus
_canGetApplicationInfo
_isNonAppSandboxed
_isAllowedToAccessAnyCloudService
_isProxyEntitled
_isSharingProxyEntitled
_isFolderSharingProxyEntitled
_isSharingPrivateInterfaceEntitled
_hasAuditToken
_applicationIdentifier
_appLibraryIDs
_defaultAppLibraryID
_auditToken
T@"NSString",R,N,V_applicationIdentifier
TB,R,N,V_isNonAppSandboxed
TB,R,N,V_isAllowedToAccessAnyCloudService
TB,R,N,V_isProxyEntitled
TB,R,N,V_isSharingProxyEntitled
TB,R,N,V_isFolderSharingProxyEntitled
TB,R,N,V_isSharingPrivateInterfaceEntitled
TB,R,N,V_isAutomationEntitled
T@"NSSet",R,N,V_appLibraryIDs
T@"NSString",R,N,V_defaultAppLibraryID
TB,R,N,V_hasAuditToken
T{?=[8I]},R,N,V_auditToken
hasContentSignature
initWithClientZone:
_documentsOrAliasesNeedingSyncUpEnumerator
_liveDirectoriesNeedingSyncUpEnumerator
_tombstoneLeavesNeedingSyncUpEnumerator
_blackListDescendantStack:parentItem:andAddToSet:descendantBlock:
_blackListDescendantStack:parentItem:andAddToSet:
_blackListDescendantStackAndItemIfThrottledOrNeedsOSUpgrade:now:
isBlackListed:
handleItemForOSUpgrade:parentItemID:
_handleSharedItemWhichMovedToNewShare:rootItem:
_checkForSharesWithinSharesWithItem:
_checkIfShouldDedicateOpToPCSChainingItem:
_checkIfParentNeedsRevivalWithParentItem:
_handlePendingShareItemWithPendingDeleteChildren:
_checkIfShouldBlacklistForPathMatch:
_checkIfShouldBlacklistForParentDirectoryFaultWithItem:needsDirFaultCheck:
_nextLiveItem
_nextTombstone
batchSize
retryAfter
chainedParentIDWhitelist
itemsNeedingUnshare
_maxDepth
_whitelist
_itemIDsLostOrThrottled
_itemIDsNeedingOSUpgrade
_itemIDsNeedingDirectoryFetch
_tombstonesEmbargo
_returned
_stage
_retryAfter
_chainedParentIDWhitelist
_itemsNeedingUnshare
TI,R,N,V_batchSize
TQ,R,N,V_retryAfter
T@"BRCLocalItem",R,N,V_itemNeedingPCSChaining
T@"NSMutableSet",R,N,V_chainedParentIDWhitelist
T@"NSMutableArray",R,N,V_itemsNeedingUnshare
initWithPkgItem:
updateWithPkgItem:
initShareIDWithItemID:zoneID:
initShareIDWithShareableItem:
initShareIDWithRecordID:serverZone:
initShareIDWithRecordID:zoneID:session:
brc_shareZoneName
brc_shareItemID
brc_collaborationIdentifierWithCachedCurrentUserRecordName:
brc_fetchShareIDWithSharedItem:
_containerMetadataRecordsToSaveWithBatchSize:requestID:
performAfterSavingRecords:
TB,R,N,V_shouldPerformAnotherBatch
initWithItemDBRowID:
isEqualToItemDBRowIDIdentifier:
Tq,R,N,V_itemDBRowID
isEqualToIntAndZoneJobIdentifier:
_intID
Tq,R,N,V_intID
initWithItemDBRowID:zoneRowID:
@24@0:8^{_NSZone=}16
v24@0:8Q16
v20@0:8B16
B16@0:8
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
{?="clientTruthDirFaultCount"b1"serverTruthDirCount"b1"serverTruthDirFaultCount"b1"serverTruthTotalItemsCount"b1"timeSinceLogin"b1}
B40@0:8^@16^@24^@32
B64@0:8@16^@24^@32^@40^@48^@56
@40@0:8@16@24@32
@32@0:8@16@24
@24@0:8@16
v16@0:8
@"NSData"
@"NSString"
{?="knownToServer"b1"wasCached"b1}
q16@0:8
v24@0:8q16
@"BRFieldCKInfo"
i2184@0:8{statfs=IiQQQQQ{fsid=[2i]}IIII[16c][1024c][1024c]I[7I]}16
B40@0:8@16@24^@32
i16@0:8
{statfs="f_bsize"I"f_iosize"i"f_blocks"Q"f_bfree"Q"f_bavail"Q"f_files"Q"f_ffree"Q"f_fsid"{fsid="val"[2i]}"f_owner"I"f_type"I"f_flags"I"f_fssubtype"I"f_fstypename"[16c]"f_mntonname"[1024c]"f_mntfromname"[1024c]"f_flags_ext"I"f_reserved"[7I]}
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@56@0:8@16@24@32@40@?48
@"BRCAccountSession"
@"NSObject<OS_dispatch_source>"
B24@0:8@"NSError"16
v48@0:8@16@24@32@40
@"CKServerChangeToken"
v20@0:8i16
{?="aliasToFileCount"b1"aliasToFolderCount"b1"aliasToPackageCount"b1"aliasToSymlinkCount"b1"fileToAliasCount"b1"fileToFolderCount"b1"fileToPackageCount"b1"fileToSymlinkCount"b1"folderToAliasCount"b1"folderToFileCount"b1"folderToPackageCount"b1"folderToSymlinkCount"b1"nonConflictingKindCount"b1"packageToAliasCount"b1"packageToFileCount"b1"packageToFolderCount"b1"packageToSymlinkCount"b1"symlinkToAliasCount"b1"symlinkToFileCount"b1"symlinkToFolderCount"b1"symlinkToPackageCount"b1}
v32@0:8@16@24
@"NSMutableDictionary"
@"NSMapTable"
@32@0:8@16@?24
v24@0:8@?16
B36@0:8@16i24^@28
@40@0:8@16#24@32
@40@0:8@16@?24@32
B32@0:8@16@24
B32@0:8@?16@24
B20@0:8i16
v36@0:8@16d24i32
B32@0:8@16*24
@32@0:8@16*24
@40@0:8#16:24@32
@48@0:8#16:24@32*40
@32@0:8#16@24
@40@0:8#16@24*32
@32@0:8@?16@24
@40@0:8@?16@24*32
@"br_pacer"
d16@0:8
v40@0:8@16@24@32
v24@0:8d16
@?16@0:8
@"BRCSyncContext"
[16C]
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_os_transaction>"
@"NSDate"
@"NSError"
@"NSObject<OS_dispatch_group>"
@"NSHashTable"
@"NSObject<OS_os_activity>"
@"NSMutableArray"
@"BRCThrottle"
@"CKOperationGroup"
@"NSObject<BROperationClient>"
v32@0:8@16@?24
@"BRCServerChangeState"
@36@0:8@16@24B32
B48@0:8@16^@24^@32^@40
B64@0:8@16@24^@32^@40^@48^@56
@32@0:8@16^@24
@32@0:8@16Q24
@"BRCItemGlobalID"
@"NSSet"
@"NSMutableSet"
@"BRCAppLibrary"
@24@0:8Q16
@36@0:8@16c24@28
@36@0:8c16@20@28
@"NSArray"
Q24@0:8@16
@32@0:8B16C20@24
@24@0:8^@16
S40@0:8@16@24^@32
@"NSDictionary"24@0:8^@16
@"BRContainer"32@0:8@"BRMangledID"16@"NSString"24
S40@0:8@"NSURL"16@"NSURL"24^@32
@"NSString"32@0:8@"NSURL"16^@24
@"NSArray"32@0:8@"NSString"16^@24
S48@0:8@16@24@32^@40
B44@0:8@16@24B32^@36
B32@0:8@16^@24
B40@0:8@16B24B28^@32
@36@0:8@16B24^@28
B32@0:8^{backup_detector=QQQ}16^@24
B56@0:8{backup_detector=QQQ}16^{backup_detector=QQQ}40^@48
@32@0:8Q16Q24
@20@0:8I16
v28@0:8@16B24
B24@0:8^@16
B36@0:8@16B24^@28
B48@0:8@16@24@32^@40
B28@0:8B16^@20
B52@0:8@16@24B32@36^@44
v48@0:8^Q16^Q24@32@40
v40@0:8^Q16^Q24@32
B52@0:8@16@24@32B40^@44
v36@0:8@16@24B32
B48@0:8@16B24@28B36^@40
B56@0:8@16B24@28@36B44^@48
B68@0:8@16B24@28@36^I44^I52^@60
B60@0:8@16@24@32B40I44I48^@52
B44@0:8@16B24@28^@36
v36@0:8I16@20@?28
@"BRCServerZone"
v20@0:8I16
@"BRDSIDString"
@"BRCThrottler"
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v32@0:8@16^@24
v40@0:8c16@20B28@?32
v44@0:8c16@20B28B32@?36
q24@0:8Q16
v32@0:8q16Q24
@"NSObject<OS_dispatch_workloop>"
@"BRCItemID"
@"CKRecordID"
@"CKQueryOperation"
v32@0:8@"BRCListDirectoryContentsOperation"16@"BRCListDirectoryContentsOperation"24
@"BRCListDirectoryContentsOperation"
v28@0:8@16i24
v28@0:8Q16I24
v36@0:8Q16I24@?28
v32@0:8@16B24B28
i24@0:8@16
@"BRCMetricEndpoint"
@"BRCSyncHealthReport"
@"NSNumber"
@"CKEventMetric"
I16@0:8
@"NSUUID"
v32@0:8I16B20@24
v32@0:8Q16@24
v48@0:8@16Q24@32@40
@20@0:8i16
v40@0:8@16@24@?32
v40@0:8@16q24@?32
@"NSURL"
@"BRMangledID"
v52@0:8@16@24@32i40@?44
v52@0:8@16@24I32I36I40@?44
v40@0:8@"FPSandboxingURLWrapper"16q24@?<v@?@"NSNumber"@"NSError">32
v52@0:8@"NSURL"16@"NSArray"24I32I36I40@?<v@?@"NSArray"@"NSArray"@"NSError">44
v24@0:8@?<v@?@"NSError">16
v32@0:8@16Q24
@28@0:8@16i24
B32@0:8@16^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}24
c16@0:8
v20@0:8c16
@"BRCUserRowID"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@20@0:8B16
{?="mtime"b1"xattrIndex"b1"isExecutable"b1"isWritable"b1}
@40@0:8Q16@24Q32
@24@0:8@"BRCAccountSession"16
@"BRCClientRanksPersistedState"
@"BRNotificationQueue"
@"BRCXPCClient"
@"CKShareMetadata"
i32@0:8Q16@24
@32@0:8Q16@24
@40@0:8Q16@24@32
S16@0:8
C16@0:8
i20@0:8B16
B20@0:8B16
i28@0:8i16@20
B32@0:8B16B20^i24
B28@0:8B16^i20
B32@0:8@?16^i24
v20@0:8S16
v20@0:8C16
@"BRCRelativePath"
@"BRCBookmark"
@"BRCGenerationID"
[32C]
{timespec="tv_sec"q"tv_nsec"q}
{brc_mutex="pthread"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}
{?="recordsFetched"b1"recordsFetchedTotalMetadataSize"b1"totalTime"b1"xattrsFetchedTotalSize"b1}
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@24@0:8@?16
@20@0:8C16
q32@0:8r*16Q24
{CC_SHA1state_st="h0"I"h1"I"h2"I"h3"I"h4"I"Nl"I"Nh"I"data"[16I]"num"i}
[21C]
v48@0:8@16@24@32Q40
@32@0:8q16@24
@"CKContainer"
@"AppTelemetryCiconiaBouncesInvestigation"
@"AppTelemetryCiconiaInvestigation"
@"AppTelemetryQBSInvestigation"
@"AppTelemetryQBSPerformance"
{?="errorCode"b1"hasForegroundClients"b1"isPCSChained"b1"nonDiscretionary"b1"sharedZone"b1}
v40@0:8@16^@24^@32
@28@0:8i16@20
@56@0:8@16@24@32@?40@48
Q32@0:8@16@24
{brc_job_update=iq}60@0:8@16@24i32@36@44@52
q40@0:8^{throttle_stamps=Iiqqq}16@24q32
v44@0:8^{throttle_stamps=Iiqqq}16@24@32B40
B28@0:8i16@20
v44@0:8i16@20@28@?36
@"BRCDeadlineSource"
@"PQLNameInjection"
@60@0:8@16@24Q32Q40B48@?52
v32@0:8q16@?24
@"BRCNotificationPipe"
@48@0:8@16@24@32Q40
@40@0:8@16@24Q32
v36@0:8S16@20@?28
v36@0:8@16S24@?28
@"<BRItemNotificationReceiving>"
@"BRFileObjectID"
@"BRCDataOrDocsScopeGatherer"
@"BRCNotificationManager"
@"<BRCNotificationPipeDelegate>"
v44@0:8@16S24@28@?36
v28@0:8S16@?20
v24@0:8@?<v@?>16
v36@0:8S16@"NSArray"20@?<v@?@"NSError">28
v28@0:8S16@?<v@?@"NSError">20
v44@0:8@"NSString"16S24@"NSArray"28@?<v@?@"NSError">36
v36@0:8@"BRFileObjectID"16S24@?<v@?@"NSError">28
v40@0:8@"CKShareMetadata"16@"BRCAccountSession"24@?<v@?B@"NSError">32
v32@0:8@"CKShareMetadata"16@?<v@?BB@"NSError">24
v32@0:8@"CKShareMetadata"16@?<v@?B@"NSError">24
v32@0:8@"CKShareMetadata"16@?<v@?>24
v32@0:8@"CKShareMetadata"16@?<v@?B>24
v32@0:8@"NSURL"16@?<v@?>24
v40@0:8Q16@24@?32
@?24@0:8@?16
v48@0:8Q16@24@32@?40
^{__CFUserNotification=}
^{__CFRunLoopSource=}
v24@0:8[32C]16
i20@0:8i16
@48@0:8@16@24@32@40
@40@0:8@16@24^@32
@"BRCLocalItem"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
Q32@0:8@16Q24
v32@0:8@?16@24
B24@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16
v24@0:8#16
@"NSXPCListener"
@"NSOperationQueue"
v28@0:8^{sqlite3_stmt=}16i24
@24@0:8^{sqlite3_value=}16
@28@0:8^{sqlite3_stmt=}16i24
@"BRCClientZone"
v36@0:8i16@20@28
v36@0:8i16q20@28
v36@0:8q16@24i32
v32@0:8i16I20@24
v40@0:8i16I20@24@32
v40@0:8i16I20q24@32
v40@0:8@16@24i32I36
v36@0:8q16i24@28
v32@0:8q16@24
B28@0:8@16I24
v36@0:8@16@24I32
v32@0:8@16q24
Q32@0:8q16@24
v44@0:8@16Q24q32B40
@"BRCCountedSet"
B40@0:8@16^Q24Q32
@"NSPredicate"
B40@0:8@16@?24^@32
B48@0:8@16@24@?32^@40
v24@0:8B16B20
@84@0:8@16@24@32@40@48@56B64B68B72@76
I24@0:8I16I20
B20@0:8I16
@84@0:8Q16Q24@32B40B44B48B52B56B60B64Q68@76
@60@0:8@16B24Q28Q36Q44@52
@52@0:8@16C24Q28Q36@44
@28@0:8@16B24
q24@0:8@16
@"BRCALRowID"
@"BRCPQLConnection"
@"BRCPrivateClientZone"
@"brc_task_tracker"
@"<BRCAppLibraryDelegate>"
@"BRCZoneRowID"
@"BRContainer"
@24@0:8q16
q20@0:8I16
q40@0:8q16^I24q32
q32@0:8^v16Q24
q36@0:8q16q24B32
@"BRCMinHeap"
@48@0:8@16@24@32^@40
@56@0:8@16@24@32@40^@48
@"PQLFormatInjection"16@0:8
@"PQLRawInjection"16@0:8
@36@0:8Q16@24i32
@44@0:8@16i24q28^q36
@"PQLResultSet"
v44@0:8@16i24i28@32B40
@36@0:8@16i24@28
v36@0:8@16i24@28
v40@0:8@16@24^i32
v44@0:8@16@24B32^i36
B64@0:8@16@24@32^i40@48@56
B48@0:8@16@24@32^i40
v40@0:8@16q24Q32
v48@0:8@16Q24Q32q40
v56@0:8@16Q24Q32q40@?48
@"BRCFairScheduler"
@"BRCDeadlineScheduler"
@40@0:8@16q24@32
@32@0:8[16C]16@24
@36@0:8@16B24@28
@36@0:8q16B24@28
@32@0:8d16@24
@48@0:8q16B24@28B36@40
@44@0:8q16B24@28@36
@32@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16@24
@32@0:8@16q24
^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16@0:8
@"BRCDumper"
^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}
@"PQLConnection"
v24@0:8@"NSString"16
@64@0:8@16@24@32@40@48Q56
B32@0:8@16Q24
v32@0:8Q16@?24
v36@0:8B16@?20@?28
@32@0:8@16c24B28
v28@0:8C16@20
v36@0:8@16I24@28
B52@0:8B16B20C24@28@36@44
C36@0:8B16B20C24@28
@"BRCItemID"16@0:8
@"BRCItemGlobalID"16@0:8
@"BRCStatInfo"16@0:8
@"BRCUserRowID"16@0:8
@"BRCAccountSession"16@0:8
@"BRCServerZone"16@0:8
@"BRCClientZone"16@0:8
Q20@0:8B16
Q32@0:8@16B24B28
B32@0:8@16B24B28
B24@0:8Q16
v28@0:8Q16B24
B24@0:8B16B20
v28@0:8@16C24
v24@0:8B16C20
v60@0:8@16@24@32@40@48B56
v32@0:8Q16I24I28
B40@0:8@16Q24^@32
@"BRCLocalStatInfo"
B28@0:8i16^@20
@36@0:8i16Q20^@28
B60@0:8i16^@20^@28^@36Q44^@52
B32@0:8i16B20^@24
^?24@0:8@16
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
v24@0:8@"BRCClientZone"16
v24@0:8@"BRCAppLibrary"16
v48@0:8@16@24@32q40
v36@0:8@16B24@28
@"BRCFairSource"
@"APSConnection"
@"BRCContainerMetadataSyncPersistedState"
@"_BRCOperation<BRCOperationSubclass>"
@"BRCSyncOperationThrottle"
@"BRCZoneHealthSyncPersistedState"
@"BRCSideCarSyncPersistedState"
@"BRCMigrateZonePCSOperation"
@"BRCSyncBudgetThrottle"
B32@0:8Q16B24B28
@"CKRecord"
@52@0:8@16Q24I32@36@44
v40@0:8B16@20@28B36
v28@0:8B16@20
i36@0:8@16I24^B28
i44@0:8@16Q24I32^B36
v40@0:8@16Q24Q32
B40@0:8d16@24^@32
@"BRCLocalVersion"
@"BRCDesiredVersion"
@40@0:8@16@24i32i36
v52@0:8@16@24@32@40B48
@36@0:8@16B24@?28
v72@0:8@16@24@32@40@?48@?56@64
v48@0:8@16@24@32@?40
v60@0:8@16@24B32@36@44@?52
@"CKRecordID"16@0:8
@"NSNumber"16@0:8
@"BRCProgress"16@0:8
@"CKRecord"16@0:8
v24@0:8@"CKRecord"16
@"BRCProgress"
@40@0:8@16@?24@?32
@"BRCPendingChangesStream"
B32@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16@24
B36@0:8@"BRCDumpContext"16B24^@28
B32@0:8@"BRCDumpContext"16^@24
B32@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16@"PQLConnection"24
@"BRCZoneRowID"16@0:8
v24@0:8@"BRCZoneRowID"16
@"BRCPQLConnection"16@0:8
@"NSMutableDictionary"16@0:8
B80@0:8@16@24@32@40@48@56@64@72
B56@0:8@16@24@32@40^@48
B48@0:8@16@24@32Q40
B40@0:8@16@24@32
B44@0:8c16@20@28Q36
Q76@0:8Q16@24@32@40@48^@56B64@68
v48@0:8@16@?24@?32@40
B28@0:8@16B24
@32@0:8c16@20B28
@24@0:8c16B20
@32@0:8B16@20C28
v92@0:8@16@24@32@40@48@56@64Q72B80B84C88
B32@0:8^@16@24
B56@0:8^@16@24B32#36B44^@48
B64@0:8^@16^@24^@32^@40@48^@56
B40@0:8^@16@24^@32
v24@0:8^Q16
B32@0:8^Q16^@24
B56@0:8^@16^@24@32@40^@48
B32@0:8^@16^@24
B48@0:8^@16^@24@32^@40
B40@0:8^@16@24@32
B40@0:8^@16^@24@32
v36@0:8@16B24B28B32
v48@0:8@16Q24@32B40C44
v36@0:8@16Q24B32
v44@0:8@16@24Q32B40
@20@0:8S16
B64@0:8@16@24@32q40@48@56
B64@0:8@16@24q32@40@48@56
B64@0:8@16@24q32@40@48Q56
B76@0:8@16@24q32@40@48@56B64@68
B84@0:8@16@24q32@40@48@56B64Q68@76
B60@0:8@16B24q28@36@44@52
B56@0:8@16@24q32@40@48
B72@0:8@16@24q32@40@48^Q56^B64
@36@0:8@16f24^Q28
B28@0:8f16^Q20
B24@0:8@?16
f16@0:8
@"NSMutableOrderedSet"
@56@0:8d16@24@32@40@48
@24@0:8d16
@40@0:8d16@24B32B36
@56@0:8d16@24Q32Q40Q48
@36@0:8@16@24i32
@36@0:8@16B24B28i32
@64@0:8Q16Q24Q32Q40Q48Q56
@32@0:8i16@20i28
@36@0:8i16@20q28
@40@0:8i16@20q28B36
@36@0:8i16@20d28
@32@0:8i16@20B28
@36@0:8i16@20@28
@36@0:8i16@20Q28
@28@0:8Q16i24
@36@0:8@16B24^i28
@40@0:8@16B24B28^i32
i32@0:8@16^@24
v20@0:8f16
d24@0:8f16i20
d24@0:8@16
f24@0:8@16
[8f]
@24@0:8r*16
@24@0:8^{RootItemObject=C(?=II)}16
@24@0:8^{_UUIDItemObject_OLD=CI[16C]}16
B44@0:8@16@24B32@36
v40@0:8@16Q24@32
@32@0:8@16^B24
@32@0:8@16^Q24
@48@0:8@16Q24@32^Q40
@64@0:8@16@24@32@40Q48^@56
@88@0:8@16@24@32Q40@48^Q56^B64@72^@80
@80@0:8@16@24Q32@40@48Q56@64^@72
@80@0:8@16@24@32@40Q48Q56@64^@72
B48@0:8@16Q24@32^@40
B84@0:8@16@24Q32@40@48Q56@64B72^@76
v36@0:8@16@24i32
v44@0:8@16@24Q32i40
@60@0:8@16@24@32@40@48B56
v24@0:8I16I20
@28@0:8I16@20
B48@0:8@16@24@32@40
c32@0:8@16@24
v32@0:8@?16Q24
v40@0:8@?16Q24Q32
v44@0:8@16@24@32B40
v40@0:8@16@24q32
v44@0:8Q16q24B32@36
@32@0:8@16B24B28
q32@0:8@16@24
@?24@0:8@16
v60@0:8@16@24@32^i40B48@52
v36@0:8Q16@24i32
@"<BRCClientZoneDelegate>"
@"BRCThrottleBase"
@"BRCCreateZoneAndSubscribeOperation"
@"BRCSyncUpOperation"
@"BRCSyncDownOperation"
@"BRCSyncOperationBackoffRatio"
@"BRCFetchRecentAndFavoriteDocumentsOperation"
@"NSMutableIndexSet"
@"<NSObject>"
v52@0:8@16q24B32@?36@?44
v44@0:8@16q24B32@?36
v64@0:8@16Q24@32Q40@48@?56
v40@0:8@16Q24@?32
v48@0:8@16@24Q32@?40
v72@0:8@16@24Q32@40Q48@56@?64
v40@0:8Q16Q24@?32
v56@0:8@16B24@28@36B44@?48
v44@0:8@16B24Q28@?36
c28@0:8@16B24
@32@0:8r*16Q24
@"BRCStageRegistry"
@"CKPackage"
{?="token"b1}
v28@0:8i16@20
v48@0:8@16^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}24@32^B40
@"BRCServerZoneHealthState"
@"BRCProblemReport"
v28@0:8@16c24
v48@0:8@16@24@32^v40
v36@0:8@16@24c32
v40@0:8@16q24q32
v32@0:8q16q24
v28@0:8@16I24
v32@0:8@16I24B28
v36@0:8@16I24B28B32
@"BRCProgressMultiplex"
@"_BRCUploadInfo"
@"_BRCDownloadInfo"
C24@0:8@16
f32@0:8@16@24
f40@0:8@16@24@32
@"BRCUserDefaults"
@"BRCServerStatInfo"
@"BRCVersion"
@"BRServerMetrics"
@24@0:8B16B20
@"BRCDocumentItem"
@"BRCServerItem"
@"BRCPackageItem"
@"BRCDirectoryItem"
{?="byFileID"b1"byDocumentID"b1"byPath"b1"parentItem"b1"serverItem"b1"serverByPath"b1"packageItem"b1"clientZone"b1}
@24@0:8@"NSString"16
@"NSArray"16@0:8
B24@0:8^{sqlite3_value=}16
@48@0:8@16^@24^@32@40
r*16@0:8
@32@0:8@"PQLResultSet"16^@24
@28@0:8i16Q20
@"NSInputStream"
@"PBMessageStreamReader"
B28@0:8@16S24
S24@0:8@16
B32@0:8@16i24i28
B60@0:8@16@24@32@40i48@52
@"PBMessageStreamWriter"
@"NSOutputStream"
@"BRCChecksummingOutputStream"
B40@0:8q16@24@32
v32@0:8d16@24
@40@0:8Q16Q24@32
v32@0:8Q16Q24
v56@0:8@16@?24@?32@40@?48
v28@0:8B16@?20
@"CKQueryCursor"
v32@0:8@"BRFileObjectID"16@"NSError"24
@48@0:8@16Q24@32@40
@"BRCTreeEnumerator"
@"BRCRecursiveListDirectoryContentsOperation"
d32@0:8@16@24
{?="accountQuotaUsage"b1"bouncedItemsCount"b1"bouncedItemsMatrix"b1"ciconiaVersion"b1"cloningTime"b1"diskSpaceLeft"b1"expectedMigratedItemsCount"b1"ignoredContentProtectedItems"b1"importTime"b1"itemsChangedDuringCloning"b1"itemsNotFoundInDB"b1"itemsNotMigratedCount"b1"materialisedOnCDItemsCount"b1"materialisedOnFPFSItemsCount"b1"packagesWithoutBundleBit"b1"previousAttempts"b1"previousFailedAttempts"b1"totalItemCount"b1"unexpectedCreations"b1"previousReleasesSuccessRate"b1"typesOfMigratedItemsMask"b1"typesOfNonMigratedItemsMask"b1"areMigratedFaultsBelowThreshold"b1"areNonFaultAllMigrated"b1"isAccountDataSeparated"b1"manuallyTriggeredMigration"b1}
@"CKRecordZoneID"
@"CKRecordZone"
@"BRCPrivateServerZone"
B52@0:8i16@20@28@36Q44
S28@0:8@16B24
v24@0:8i16B20
i20@0:8C16
i28@0:8C16@?20
B40@0:8^Q16^I24^@32
B48@0:8@16^Q24^I32^@40
B68@0:8^Q16^I24^I32@40@48B56^@60
B32@0:8i16i20@24
@40@0:8Q16^C24^I32
B56@0:8@16Q24@32@40^@48
B48@0:8Q16@24@32^@40
v64@0:8i16i20@24@32@40@48Q56
B64@0:8@16^Q24^I32^I40@48^@56
B36@0:8i16@20@28
B32@0:8Q16@24
B32@0:8Q16^I24
B36@0:8I16Q20Q28
q28@0:8q16i24
Q24@0:8@?16
q24@0:8q16
[10@"NSString"]
[10Q]
@"BRCStagePersistedState"
@"NSMutableOrderedSet<NSFileProviderItem>"
@"<NSFileProviderEnumerationObserver>"
c24@0:8@16
v40@0:8q16Q24@?32
@"NSIndexSet"
@44@0:8@16@24@32B40
@40@0:8@16^@24^@32
@"GSPermanentStorage"
@"BRCLocalItem"16@0:8
@48@0:8@16@24@32@?40
@52@0:8@16@24@32@40B48
@"BRCZonePurgeOperation"
@48@0:8@16@24@32I40B44
B24@0:8^q16
Q36@0:8@16@24B32
v56@0:8@16@24@32Q40@48
v56@0:8@16@24@32@40@48
v64@0:8@16@24@32@40@48@56
I24@0:8@16
@60@0:8@16@24@32@40c48B52I56
@"BRCPCSChainInfo"
@"PQLResultSet<PQLEnumeration>"
v36@0:8@16B24@?28
v32@0:8@"BRCAccountHandler"16@"BRCAccountSession"24
@"BRFieldPkgItem"
{?="size"b1"generationID"b1}
v56@0:8@16@24q32@40^B48
v24@0:8@"NSDictionary"16
@24@0:8^B16
B40@0:8@16B24B28Q32
v36@0:8B16@20@?28
@40@0:8@16@24^B32
@56@0:8@16@24B32^B36@44B52
@32@0:8@16^I24
v32@0:8@?16@?24
B48@0:8@16^B24^B32^Q40
Q24@0:8B16B20
B44@0:8q16Q24B32^@36
B36@0:8Q16B24^@28
@"BRCAccountHandler"
@"BRCClientState"
@"BRCServerPersistedState"
@"BRCFSImporter"
@"BRCServerChangesApplier"
@"BRCGlobalProgress"
@"BRCAccountWaitOperation"
@"BRCContainerScheduler"
@"BRCApplyScheduler"
@"BRCTimerScheduler"
@"BRCVolume"
@"BRCFSUploader"
@"BRCFSDownloader"
@"BRCSyncUpScheduler"
@"BRCDownloadTrackers"
@"BRCUserNotification"
@"BRCDiskSpaceReclaimer"
@"BRCFileUnlinker"
@"BRCRecentsEnumerator"
@"BRCItemTransmogrifier"
@"BRCAnalyticsReporter"
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSDictionary"@"NSDictionary"@"NSError">40
v32@0:8@"NSOperation"16@"NSURL"24
v24@0:8@"NSOperation"16
v32@0:8@"NSOperation"16@"NSError"24
v24@0:8:16
@"<BRCUserNotifier>"
@"BRCAcceptShareOperation"
v24@0:8r*16
v28@0:8i16i20i24
@28@0:8i16i20i24
v24@0:8i16i20
r^*16@0:8
@40@0:8i16q20B28^@32
@"NSMutableData"
v44@0:8@16@24B32@?36
Q24@0:8Q16
v32@0:8@"BRCClientZone"16@"NSError"24
B44@0:8@16i24@?28^@36
B48@0:8^@16^@24^@32@40
B56@0:8@16^@24^@32^@40@48
B32@0:8q16@?24
q32@0:8@16B24B28
B64@0:8@16@24@32@40@48q56
@"CKShare"
@40@0:8@16Q24Q32
B56@0:8@16@24@32Q40@48
@"AppTelemetryInvestigation"
{?="magnitudeDouble"b1"magnitudeLong"b1"timestamp"b1"magnitude"b1"magnitudeFloat"b1"magnitudeInt"b1"magnitudeBool"b1}
Q28@0:8B16^@20
B24@0:8q16
@32@0:8@16^i24
@32@0:8^B16^i24
^{?=iqq*iqqi{_opaque_pthread_mutex_t=q[56c]}^{_telldir}}
@44@0:8@16B24q28@36
v32@0:8@"BRCNotificationPipe"16@"BRCAppLibrary"24
B32@0:8:16^@24
@32@0:8@16#24
B32@0:8r*16q24
B40@0:8@16q24@32
v52@0:8@16q24q32B40@?44
@"BRCClientPrivilegesDescriptor"
@"NSCountedSet"
{?="val"[8I]}
@"NSXPCConnection"
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSData"@"NSError">32
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v24@0:8@?<v@?@"NSString"@"NSError">16
Vv24@0:8@16
v32@0:8@"CKShareMetadata"16@?<v@?@"NSError">24
Vv24@0:8@"NSURL"16
v48@0:8@"NSObject<BROperationClient>"16@"CKShare"24@"NSString"32@?<v@?@"CKShare"@"NSURL"@"NSError">40
v40@0:8@"NSObject<BROperationClient>"16@"CKShare"24@?<v@?@"CKShare"@"NSError">32
v44@0:8@"NSObject<BROperationClient>"16@"CKShare"24B32@?<v@?@"NSError">36
v24@0:8@?<v@?@"NSPersonNameComponents"@"NSString"@"NSString"@"NSString"@"NSError">16
v44@0:8@"NSObject<BROperationClient>"16@"CKRecordID"24B32@?<v@?@"FPSandboxingURLWrapper"@"NSError">36
v40@0:8@"NSObject<BROperationClient>"16@"NSArray"24@?<v@?@"NSArray"@"NSError">32
v52@0:8@16@24@32B40@?44
v36@0:8q16i24@?28
Vv20@0:8B16
v64@0:8@16{?=[8I]}24@?56
v44@0:8@16B24B28B32@?36
v52@0:8@16@24Q32B40@?44
v44@0:8@16B24@28@?36
v56@0:8{?=[8I]}16@?48
v52@0:8@16C24Q28Q36@?44
v44@0:8C16Q20Q28@?36
v40@0:8@16B24B28@?32
v48@0:8@16d24q32@?40
v52@0:8@16@24B32Q36@?44
v48@0:8@16Q24@32@?40
v32@0:8@"NSDictionary"16@?<v@?B@"NSError">24
v32@0:8@"NSSet"16@?<v@?@"NSError">24
v52@0:8@"NSFileHandle"16@"NSString"24@"NSString"32B40@?<v@?B@"NSError">44
v32@0:8@"NSFileHandle"16@?<v@?B@"NSError">24
v40@0:8@"NSFileHandle"16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"NSString"16Q24@?<v@?@"NSError">32
v32@0:8Q16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v36@0:8@"NSString"16B24@?<v@?@"NSError">28
v24@0:8@?<v@?@"NSDictionary"@"NSNumber"@"NSError">16
v36@0:8q16i24@?<v@?q>28
v32@0:8@"NSURL"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSArray"@"NSArray"@"NSError">16
v40@0:8@"BRMangledID"16@"NSString"24@?<v@?@"BRContainer"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSURL"@"NSData"@"NSString"@"NSError">24
v36@0:8@"NSString"16B24@?<v@?@"NSURL"@"NSData"@"NSString"@"NSError">28
v64@0:8@"NSString"16{?=[8I]}24@?<v@?@"NSURL"@"NSData"@"NSString"@"NSError">56
Vv24@0:8@"NSString"16
v44@0:8@"NSString"16B24B28B32@?<v@?@"NSError">36
v52@0:8@"NSObject<BROperationClient>"16@"NSURL"24Q32B40@?<v@?@"NSError">44
v40@0:8@"NSURL"16Q24@?<v@?@"NSError">32
v32@0:8@"NSURL"16@?<v@?@"NSError">24
v32@0:8@"NSURL"16@?<v@?@"BRQueryItem"@"NSError">24
v32@0:8@"<BRItemNotificationReceiving>"16@?<v@?@"<BRItemNotificationSending><NSXPCProxyCreating>"@"NSDictionary"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSString"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v24@0:8@?<v@?@"NSArray"@"NSError">16
v24@0:8@?<v@?B@"NSError">16
v28@0:8B16@?<v@?@"NSError">20
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8@"NSString"16@"NSURL"24@?<v@?@"NSError">32
v24@0:8@?<v@?@"NSSet"@"NSError">16
v40@0:8c16@"NSString"20B28@?<v@?@"NSError">32
v24@0:8@?<v@?c@"NSError">16
v32@0:8Q16@?<v@?Q@"NSError">24
v44@0:8@"NSURL"16B24@"NSString"28@?<v@?@"NSString"@"NSString"@"NSError">36
v32@0:8@"NSString"16@?<v@?@"NSURL"@"NSData"@"NSURL"@"NSData"@"NSError">24
v32@0:8@"BRFileObjectID"16@?<v@?@"NSURL"@"NSData"@"NSURL"@"NSData"@"NSError">24
v48@0:8@"NSURL"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v56@0:8{?=[8I]}16@?<v@?c@"NSError">48
v24@0:8@?<v@?@"NSDate"@"NSError">16
v32@0:8@"NSString"16@?<v@?I@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSDate"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSNumber"@"NSError">24
v24@0:8@?<v@?Q@"NSError">16
v52@0:8@"BRFileObjectID"16C24Q28Q36@?<v@?@"NSArray<NSFileProviderItem>"QB@"NSError">44
v44@0:8C16Q20Q28@?<v@?@"NSArray"Q@"NSError">36
v40@0:8@"NSData"16Q24@?<v@?@"NSArray<NSFileProviderItem>"@"NSArray"@"NSData"@"NSError">32
v40@0:8@"NSURL"16B24B28@?<v@?@"NSError">32
v32@0:8@"NSURL"16@?<v@?BB@"NSString"@"NSError">24
v32@0:8@"NSURL"16@?<v@?i@"NSError">24
v40@0:8@"NSObject<BROperationClient>"16@"NSString"24@?<v@?@"NSString"@"NSError">32
v32@0:8@"NSObject<BROperationClient>"16@?<v@?@"NSNumber"@"NSError">24
v40@0:8@"NSObject<BROperationClient>"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"NSObject<BROperationClient>"16@"NSURL"24@?<v@?@"NSError">32
v44@0:8@"NSObject<BROperationClient>"16@"NSURL"24B32@?<v@?@"FPSandboxingURLWrapper"@"NSError">36
v24@0:8@?<v@?@"NSPersonNameComponents"@"NSString"@"NSError">16
v32@0:8@"NSURL"16@?<v@?@"NSPersonNameComponents"@"NSError">24
v32@0:8@"NSURL"16@?<v@?@"NSURL"@"NSError">24
v32@0:8Q16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?BBB@"NSString"@"NSError">24
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v48@0:8@"NSURL"16d24q32@?<v@?@"NSError">40
v36@0:8@"NSURL"16B24@?<v@?@"NSError">28
v32@0:8@"NSURL"16@?<v@?@"NSString"@"NSError">24
v32@0:8@"BRGetPausedFileListUpdater"16@?<v@?@"NSError">24
v32@0:8@"BRFileObjectID"16@?<v@?@"NSString"@"NSError">24
v52@0:8@"NSDate"16@"NSUUID"24B32Q36@?<v@?@"NSError">44
v48@0:8@"NSError"16@"NSString"24@"NSUUID"32@?<v@?@"NSError">40
v48@0:8@"BRCBouncingReport"16Q24@"NSUUID"32@?<v@?@"NSError">40
v40@0:8@"BRCMigrationReport"16@"NSUUID"24@?<v@?@"NSError">32
B56@0:8@16Q24@32@40@?48
v56@0:8@16@24Q32Q40@?48
v44@0:8@16Q24I32@?36
(?="value"I""{?="isFault"b1"startDownload"b1"wantsThumbnail"b1"userInitiated"b1"wantsContentForThumbnail"b1})
B32@0:8q16q24
@"BRCTransferStream"
d40@0:8@16@24@32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@16@24q32q40
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURL"32
v56@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40
@"NSDictionary"
@"NSURLSession"
i36@0:8@16i24i28i32
I36@0:8@16I24I28I32
I40@0:8@16B24I28I32I36
Q48@0:8@16Q24Q32Q40
f40@0:8@16B24f28f32f36
f36@0:8@16f24f28f32
d48@0:8@16d24d32d40
@24@0:8i16B20
Q36@0:8[256c]16i24i28i32
v32@0:8r*16Q24
@32@0:8r^v16Q24
B40@0:8@16q24q32
@"NSURL"16@0:8
@"NSOperationQueue"16@0:8
v40@0:8@"NSURL"16@24@?<v@?@"NSError">32
v40@0:8@"NSURL"16@"NSFileProvidingInfo"24@?<v@?@"NSFileProvidingResponse">32
v32@0:8@"NSURL"16@24
@"NSURL"24@0:8@"NSURL"16
v32@0:8@"NSURL"16@?<v@?@"NSURL">24
v32@0:8@16@"NSURL"24
v32@0:8@"NSURL"16@"NSFileProviderPresenterInfo"24
v40@0:8@"NSURL"16@24@"NSURL"32
v40@0:8@"NSURL"16@"NSURL"24@?<v@?B>32
d20@0:8i16
v40@0:8^@16^@24^@32
q20@0:8B16
q32@0:8@16q24
q36@0:8@16q24i32
q20@0:8i16
B40@0:8d16d24^@32
v28@0:8@"BRReachabilityMonitor"16B24
v28@0:8@"BRReachabilityMonitor"16I24
@"BRReachabilityMonitor"
@104@0:8@16@24@32@40@48@56B64B68@72@80@88@96
B72@0:8@16@24Q32@40B48B52@56@64
B64@0:8@16@24Q32B40B44@48@56
v40@0:8Q16Q24Q32
B48@0:8{?=[8I]}16
@48@0:8{?=[8I]}16
@64@0:8@16@24{?=[8I]}32
{?=[8I]}16@0:8
{?="size"b1}
B32@0:8@16^B24
MbP?r
333333
