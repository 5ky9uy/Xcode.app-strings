@(#)PROGRAM:MPSNDArray  PROJECT:MPS-1
St12out_of_range
St9bad_alloc
St12length_error
St20bad_array_new_length
St9exception
St11logic_error
compute_histogram
scatter_histogram
Source and destination must have same data type.
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArraySort.mm
"-test MPSNDArraySortTest -srcShapes [%u,%u,%u,%u] -dstShapes [%u,%u,%u,%u] -srcDataTypes %s -dstDataTypes %s -axis %d %s"
-descending
%@" Axis = %lu. This class only supports axis = 0, 1, 2, 3
v16@?0@"<MTLCommandBuffer>"8
_MPSCommandBufferRetainListKey
"-test MPSNDArrayArgSortTest -srcShapes [%u,%u,%u,%u] -dstShapes [%u,%u,%u,%u] -srcDataTypes %s -dstDataTypes %s -axis %d %s"
stride       = ( %2lu, %2lu, %2lu )
offset       = ( %2d, %2d, %2d  )
dilationRate = ( %2lu, %2lu, %2lu  )
channelAxis = %d
%@%u
depthwiseConv3d
depthwiseConv3d_gradBackProp
depthwiseConv3d_gradWeights_init
depthwiseConv3d_gradWeights_finalize
depthwiseConv3d_cFirst
depthwiseConv3d_gradBackProp_cFirst
depthwiseConv3d_gradWeights_init_cFirst
depthwiseConv3d_gradWeights_finalize_cFirst
depthwiseConv3d_TGM
depthwiseConv_3x3
MPSNDArrayDWConv.channelAxis
MPSNDArrayDWConv.offsets
MPSNDArrayDWConv.strides
MPSNDArrayDWConv.dilationRates
[%@ encode...] channelAxis: %lu should be < 4
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayDepthwiseConvolution.mm
[%@ encode...] First input fc count (channelAxis) == %d, should match destination fc count == %d
"-test MPSNDArrayDepthwiseConv3DTest -srcShapes [%u,%u,%u,%u,%u] [%u,%u,%u,%u] -dstShapes [%u,%u,%u,%u,%u] -srcDataTypes %s %s -dstDataTypes %s -cAxis %u -strides [1,%lu,%lu,%lu] -dilationRates [1,%lu,%lu,%lu] 
-runMode forward 
vector
 -srcTranspose 
 -dstTranspose 
%lu 
[%u,%u] 
[%@ encode...] First input fc count (channelAxis) == %d, should match source gradient fc count == %d
[%@ encode...] First input shape == ( %3d, %3d, %3d, %3d ) should match destination gradient shape == ( %3d, %3d, %3d, %3d )
[%@ encode...] Second input shape == ( %3d, %3d, %3d, %3d ) should match destination gradient shape == ( %3d, %3d, %3d, %3d )
-runMode weightGrad 
A and B index not found.
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayMatrixMultiplication.mm
Matrix Multiply: M=%lu, N=%lu, K=%lu, Batch Size: %lu, transposeA=%d, transposeB=%d, A Datatype: %s, B Datatype: %s C Datatype: %s
Matrix Multiply: f16Ops=%f, f32Ops=%f, BytesRead=%f, BytesWritten=%f, OpsPerByte=%f
More than 3 sources are passed to kernelDAG for NDArrayMatrixMultiplication
alpha
beta
binaryCoreOp
alphaGemm
betaC
result
MatMul autotuning is undefined for this device
Gradient requested for source %lu.  Gradient may only be requested for input arrays 0 or 1.
MPSNDArrayMatMulTest
basic_string
NDArrayMatrixMultiplyNNA14
NDArrayMatrixMultiplyNNA14_EdgeCase
NDArrayMatrixMultiplyA16
NDArrayMatrixMultiplyReduction
NDArrayVectorMatrixMultiply
Invalid tile size
ArrayMultiplyTTLinking
ArrayMultiplyNTLinking
ArrayMultiplyTNLinking
ArrayMultiplyNNLinking
Internal error: aliasing of sliced NDArray should always succeed
ArrayMultiplyNN
ArrayMultiplyNT
ArrayMultiplyTN
ArrayMultiplyTT
MPS_MATMUL_TILEM
MPS_MATMUL_TILEN
MPS_MATMUL_TILEK
MPS_MATMUL_TGSIZE
MPS_MATMUL_TGMEMA
MPS_MATMUL_TGMEMB
v8@?0
MPSNDArrayMatrixMultiplication.alpha
MPSNDArrayMatrixMultiplication.beta
MPSNDArrayMatrixMultiplicationGradient.alpha
MPSNDArrayMatrixMultiplicationGradient.beta
ndArrayMathTernary
ndArrayMathTernaryGradient
MPSNDArrayMath.opType
Destination array must have type Float32 or Int32
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayGatherND.mm
gatherND_base
gatherND_slices
gatherNDGradient_base
gatherNDGradient_slices
ScatterND kernel does not support linking, virtual sources and physical sources must match, %lu != %lu
All inputs must have rank larger than number of batch dimensions
All inputs must match in shape along batch dimensions, inputs do not match along batch dimension %lu
Rank of updates array (%lu) must be greater than or equal to inner-most dimension of indices array (%lu)
Rank of destination array (%lu) must equal number of outer dimensions in index array (%lu) + rank of slice to update (%lu)
Shape of updates array inner dimensions must match destination array inner dimensions. updates.shape[%lu] (%lu) != destination.shape[%lu] (%lu)
Shape of destination array outer dimensions must match indices array outer dimensions. destination.shape[%lu] (%lu) != destination.shape[%lu] (%lu)
Rank of destination array (%lu) must be greater than or equal to inner-most dimension of indices array (%lu)
Rank of updates array (%lu) must equal number of outer dimensions in index array (%lu) + rank of slice to update (%lu)
Shape of gradient array inner dimensions must match destination array inner dimensions. gradient.shape[%lu] (%lu) != destination.shape[%lu] (%lu)
Shape of updates array outer dimensions must match indices array outer dimensions. gradient.shape[%lu] (%lu) != destination.shape[%lu] (%lu)
topk
topkv
topk_grad
topkv_grad
topk_multidestination
topkv_multidestination
topk_grad_multidestination
topkv_grad_multidestination
MPSNDArrayTopK.findIndices
MPSNDArrayTopK.K
destination tensor axis length insufficient
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayTopK.mm
destination values and indices axis length mismatch
ndArrayMathUnary
ndArrayMathUnaryGradient
padArrayData
ndArrayPadGradient
%@[%u][%u]
MPSNDArrayPad.paddingSize
MPSNDArrayPad.edgeMode
MPSNDArrayPad.constantValue
edgeMode %u is not supported
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayPad.mm
NDArrayLocalConvolution
NDArrayLocalConvolutionDataGradient
NDArrayLocalConvolutionWeightGradient
MPSNDArrayLocalConvolution.dataFormat
MPSNDArrayLocalConvolution.kernelsizesX
MPSNDArrayLocalConvolution.kernelsizesY
MPSNDArrayLocalConvolution.kDilationRateX
MPSNDArrayLocalConvolution.kDilationRateY
format must be NCHW or NHWC
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayLocalConvolution.mm
input rank (%u) must be 4
weights rank (%u) must be the same as the input (%u)
batch size of weights and input must be the same
kernel size must be smaller than (256 x 256)
weight image size (%u, %u) must match input image size (%u, %u)
weight must have %u x %u = %u channels (number of elements in the kernel)
incoming gradient rank (%u) must be the same as the input (%u)
incoming gradient shape doesn't match input shape
NDArray objects with dimensions > %lu provided.
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayStridedSlice.mm
slice1DArrayData
expand1DArrayData
ndArrayHammingDistance
ndArrayHammingDistance_tgMem
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayHammingDistance.mm
Only rank 5 convolution supported
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayConvolution3D.mm
not enought input channels in filter
not enought output channels in filter
source and destination batch size not matching
A, B indices not found.
Source and gradient batch size must match
input gradient and gradient with weights dimension mismatch
Source and gradient with weights dimension mismatch
Convolution3D: N=%lu, C=%lu, D=%lu, H=%lu, W=%lu, kD=%lu, kH=%lu, kW=%lu, O=%lu, matrixM=%lu, matrixN=%lu, matrixK=%lu, A Datatype: %s, B Datatype: %s C Datatype: %s
Convolution3D: f16Ops=%f, f32Ops=%f, BytesRead=%f, BytesWritten=%f, OpsPerByte=%f
ndArrayConvolution3D
ndArrayConvolution3DGradientWithWeights
MPSNDArrayConvolution3DTest
-dataFormat 
NCDHW
NDHWC
-weightsFormat 
OIDHW
DHWIO
-kernelSizes \[
-strides \[1,
-strides \[
, 1\] 
-dilationRates \[1,
-dilationRates \[
-packed 3 
-explicitPadding \[0,0,
MPSNDArrayConvolution3DDGradientInputTest
MPSNDArrayConv3DGradientWeightsTest
ndArraySoftmaxBase
ndArraySoftmax_axis0
ndArraySoftmax_axis1
ndArraySoftmax_axis2
ndArraySoftmaxGradientBase
MPSNDArraySoftMax.axis
Error: axis reduction failed
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArraySoftMax.mm
tileArrayData
ndArrayTileGradient
MPSNDArrayTile.multiple
MPSNDArrayCropResize.resizeHeight
MPSNDArrayCropResize.resizeWidth
MPSNDArrayCropResize.normalizeCoordinates
MPSNDArrayCropResize.spatialScale
MPSNDArrayCropResize.resampleMode
MPSNDArrayCropResize.samplingMode
MPSNDArrayCropResize.coordinateMode
cropResize_impl
boxesTensor must be a 2D tensor of shape [num_boxes, 4]
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayCropResize.mm
boxIndicesTensor must be a 1D tensor of shape [num_boxes]
boxIndicesTensor must be of type MPSDataTypeInt32
destTensor must be a 4D tensor of shape [num_boxes, channels, resizeHeight, resizeWidth]
initializeConstant
initializeIdentityMatrix
MPSNDArrayInitialization.constantValue
Error: Invalid MPSNDArrayRandomStateDescriptor algorithm specified
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayRandom.mm
MPSNDArrayRandomStateDescriptorState
MPSNDArrayRandomStateDescriptorAlgorithm
ndArrayRandomStatePhiloxUpdate
MPSNDArrayRandomStateCounterStride
MPSNDArrayRandomStateSkipElements
MPSNDArrayRandomStateIncrementKey
ndArrayRandom
MPSNDArrayRandomUniformMinimum
MPSNDArrayRandomUniformMaximum
MPSNDArrayRandomUniformMinimumInteger
MPSNDArrayRandomUniformMaximumInteger
MPSNDArrayRandomTruncatedNormalMean
MPSNDArrayRandomTruncatedNormalStandardDeviation
MPSNDArrayRandomTruncatedNormalMinimum
MPSNDArrayRandomTruncatedNormalMaximum
MPSNDArrayRandomTruncatedNormalSamplingMethod
MPSNDArrayRandomNormalMean
MPSNDArrayRandomNormalStandardDeviation
MPSNDArrayRandomNormalSamplingMethod
Error: Invalid result MPSDataType, NDArrayRandom supports MPSDataTypeFloat16, MPSDataTypeFloat32, MPSDataTypeInt32, and MPSDataTypeInt64
Error: Invalid result MPSDataType, NDArrayRandom supports MPSDataTypeFloat16, MPSDataTypeFloat32, and MPSDataTypeInt32.
NDArrayGridSample
GridSampleClearAccumulationBuffer
NDArrayGridSampleInputGradient
NDArrayGridSampleGradientFinish
MPSNDArrayGridSample.samplingMode
MPSNDArrayGridSample.nearestMode
MPSNDArrayGridSample.dataFormat
MPSNDArrayGridSample.paddingMode
MPSNDArrayGridSample.relativeCoords
MPSNDArrayGridSample.normalizeCoords
MPSNDArrayGridSample.alignCorners
MPSNDArrayGridSample.constantValue
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayGridSample.mm
coordinates rank (%u) must be 4
batch size of coordinates and input must be the same
coordinates size (%u, %u) must match motion vector size (%u, %u)
coordinates must have 2 channels but has %u
coordinates size (%u, %u) must match input gradient size (%u, %u)
ndArrayNeuron
ndArrayNeuronGradient
MPSNDArrayNeuron.opType
ndArrayResample
ndArrayResampleGradient
MPSNDArrayResampleScaleX
MPSNDArrayResampleScaleY
MPSNDArrayResampleTranslateX
MPSNDArrayResampleTranslateY
MPSNDArrayResampleModeKey
MPSNDArrayResampleDataFormatKey
MPSNDArrayResampleNearestModeKey
MPSNDArrayResampleGradientScaleX
MPSNDArrayResampleGradientScaleY
MPSNDArrayResampleGradientTranslateX
MPSNDArrayResampleGradientTranslateY
MPSNDArrayResampleGradientModeKey
MPSNDArrayResampleGradientDataFormatKey
MPSNDArrayResampleGradientNearestModeKey
Error: Resampling only supported in 2D
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayResample.mm
Error: source and destination channels mismatch
Error: source and destination batch size mismatch
Scan gradient operations are not yet supported.
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayScan.mm
scan_add
scan_mul
scan_max
scan_min
Scan gradient pass is only supported for Sum
Prefix linking not supported by PreG13 kernels. Falling back to generic implementation
Source and weights index not found.
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayConvolutionPreG13.mm
Only NCHW/NHWC data format supported for source by PreG13 kernels. Falling back to generic implementation
Optimal parameter set not found in PreG13 table
Optimal parameter set found in PreG13 table
Parameters: [nip=%d,Nop=%d,nop=%d,P=%d,C=%d,Pth=%d,Oth=%d]
Only FP32 or FP16 convolution supported
Only FP2 or FP16 convolution supported
Only NHWC/NCHW formats are supported
Only rank 4 convolution supported
not enought taps in filter
source slice doesn't have enough feature channels
destination slice doesn't have enough feature channels
ndArrayConvolution2D_PreG13
MPS_AUTO_TUNING_PARAMETERS
ndArrayMathBinary
ndArrayMathBinaryGradient
[%@ %@] Error, source count must be at least 1
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayMultiaryKernel.mm
[%@ %@] Error, source count is 0 for initializers.
[%@ %@] Error, destination count must be at least 1
MultiaryMultiDestinationNDArrayBase.srcCount
MultiaryMultiDestinationNDArrayBase.dstCount
[%@ %@] Failed: unsupported file version.
Active destination NDArray at index %lu not provided.
created by %@
MultiaryNDArrayBase.srcCount
MultiaryNDArrayBase.ac
MultiaryNDArrayBase.oc
[%@ %@] Error: source index %lu an invalid index.  (Source count = %lu)
Logging Unimplemented
placeholder
nullaryCoreOp
unaryCoreOp
ternaryCoreOp
quartaryCoreOp
Kernel sources > 4, means we need to add another kernelDAG coreOp, file a radar please
Error: Invalid KernelDAG, Number of core ops in the DAG should always be 1
Error: Invalid KernelDAG, expectedVirtualSources == DAG->_coreOps->at(0)->_inputs->size() failed, which means the coreOp and the kernel expected virtual sourceCount don't match
Error: Invalid KernelDAG, expectedPhysicalSources == DAG->_placeholderOps->size() failed, which means the DAG->_placeholderOps->size() and the kernel expected physical sources don't match
Error: Invalid KernelDAG, equalShape for source (i = %lu) failed
Error: Invalid KernelDAG, inputArray.dataType == DAG->_placeholderOps->at(i)->_outputs->at(0)->_dType (i = %lu) failed
Error: Invalid KernelDAG, equalShape for destination failed
Error: Invalid KernelDAG, destination.dataType == kernelDAGObject.finalOp->_outputs->at(0)->_dType failed
[%@ encodeToCommandBuffer:sourceArrays:resultState:outputStateIsTemporary] Unable to create MPSNDArray for destination.  Encode failed.
[%@ encodeToCommandBuffer:sourceArrays:sourceGradient:gradientState] Unable to create MPSNDArray for destination.  Encode failed.
-test 
-srcShapes 
-srcSliceLengths 
-srcSliceOffsets 
-srcTranspose 
-srcDataTypes 
-dstShapes 
-dstSliceLengths 
-dstSliceOffsets 
-dstDataTypes 
-dag 
MPS_SHADER_PROFILING
Error: Can not decode. Unable to find class implementation for "%@".
/Library/Caches/com.apple.xbs/Binaries/MetalPerformanceShaders_Sim/install/Symbols/BuiltProducts/MPSCore.framework/PrivateHeaders/Internal/MPSCoreInternal.h
Broadcasting failed source %lu, dimension %hhu is not either 1 or sameSize as other sources
MPSNDArrayMath.sourceGradient
COREOP:
v32@?0@"<MTLComputeCommandEncoder>"8@"<MTLCommandBuffer>"16@"<MTLBuffer>"24
bandPartKernel
MPSNDArrayBandPart.numLower
MPSNDArrayBandPart.numUpper
Found exact match in table
Found match in table with tile parameters
No match found. Falling to default
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayConvolutionAMD.mm
Source and filter input channels mismatch
Gradient and filter output channel mismatch
destination kernel width and filter kernel width mismatch
destination kernel output channel mismatch
destination kernel input channel mismatch
source and gradient datatype must match. both should be either fp32 or fp16
destination datatype must be fp32
Source tensor and ndArray input channels mismatch
Source tensor and ndArray width mismatch
Source tensor and ndArray height mismatch
Source tensor and ndArray batch size mismatch
Gradient tensor and ndArray input channels mismatch
Gradient tensor and ndArray width mismatch
Gradient tensor and ndArray height mismatch
Gradient tensor and ndArray batch size mismatch
Weights tensor and ndArray output channel mismatch
Weights tensor and ndArray input channel mismatch
Weights tensor and ndArray kernel width mismatch
Weights tensor and ndArray kernel height mismatch
Internal kernel parameter selection error.
AMDGradientWithWeights::ndArrayConvolution2DGradientWithWeightsAMD
Internal error: threads being launched more than kernel can handle
ndArrayConvolution2DGradientWithWeightsReduction
Prefix linking not supported by MPS AMD kernels. Falling back to generic implementation
Only NCHW/NHWC data format supported for source. Falling back to generic implementation
Only OIHW weights format is supported with NHWC data format. Falling back to generic implementation
Slicing not supported by AMD kernel. Falling back to generic implementation
Forcing direct convolution
Both source and weights should be same dataType
optimal parameter set found
optimal parameter set not found
ndArrayWinogradAMD_NCHW
AMDConvolution::ndArrayConvolution2DAMD_NHWC
AMDConvolution::ndArrayConvolution2DAMD_NCHW
MPS_AUTO_TUNING_GRADIENT_PARAMETERS
MPS_DIRECT_CONVOLUTION
structuredSparse_2_4_1d
ArrayMatrixMultiplicationDenseSparse
ArrayMatrixMultiplicationSparseDense
ArrayMatrixMultiplicationSparseTransposeDense
clearBuffer
MPSNDArrayMatrixMultiplicationSparse.alpha
MPSNDArrayMatrixMultiplicationSparse.beta
Reduction: f16Ops=%f, f32Ops=%f, BytesRead=%f, BytesWritten=%f, OpsPerByte=%f
reduce_multiple_passes_min_propagate_NaN
reduce_multiple_passes_max_propagate_NaN
reduce_multiple_passes_min
reduce_multiple_passes_max
reduce_multiple_passes_add
reduce_multiple_passes_mul
reduce_multiple_passes_all
reduce_multiple_passes_any
reduce_argmin
reduce_argmax
reduce_multiple_passes_axes_min_propagate_NaN
reduce_multiple_passes_axes_max_propagate_NaN
reduce_multiple_passes_axes_min
reduce_multiple_passes_axes_max
reduce_multiple_passes_axes_add
reduce_multiple_passes_axes_mul
reduce_multiple_passes_axes_all
reduce_multiple_passes_axes_any
reduce_multiple_passes_add_gradient_float32_float32
MPSNDArrayReduction.axis
MPSNDArrayReduction.operation
MPSNDArrayReduction.axes
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayReduction.mm
%@ %p "%@" Multiple axes specified for argmin/argmax reduction. This class only supports axis = 0, 1 or 2.
%@ %p "%@" Only datatypes supported are MPSDataTypeFloat32, MPSDataTypeFloat16, MPSDataTypeUInt32 and MPSDataTypeInt32
%@ %p "%@" This combination of data types is only supported for MPSNDArrayReduction where the operation is an argument minimum or maximum
%@ %p "%@" For a MPSDataTypeUInt32 source, detination must also be MPSDataTypeUInt32.
%@ %p "%@" For a MPSDataTypeInt32 source, detination must also be MPSDataTypeInt32.
%@ %p "%@" Axis = %lu. This class only supports axis = 0, 1 or 2.
%@ %p "%@" Only MPSDataTypeUInt32 or MPSDataTypeInt32 destinations are supported for Argument Reductions.
%@ %p "%@" Axis = %lu. This class only supports axis = 0, 1, 2 or 3.
MPSNDArrayReductionTest
 -axis 
%@ %p "%@" Only datatypes supported are MPSDataTypeFloat32, MPSDataTypeFloat16 and MPSDataTypeUInt32
%@ %p "%@" MPSNDArrayReductionTypeProduct is not supported in gradient filter.
%@ %p "%@" MPSNDArrayReductionTypeArgumentMax is not supported in gradient filter.
%@ %p "%@" MPSNDArrayReductionTypeArgumentMin is not supported in gradient filter.
nil `shape` parameter [reshapeWithCommandBuffer] %@.
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayIdentity.mm
nil `dimensionSizes` parameter [reshapeWithCommandBuffer] %@.
nil `sourceArray` param to [reshapeWithCommandBuffer] %@.
New volume: %lu should match old volume: %lu [reshapeWithCommandBuffer] %@.
New rank: %lu should match destination array number of dimensions: %lu [reshapeWithCommandBuffer] %@.
shape[%lu]: %u should match destination array slice length: %u [reshapeWithCommandBuffer] %@.
Identity: f16Ops=%f, f32Ops=%f, BytesRead=%f, BytesWritten=%f, OpsPerByte=%f
ndArrayIdentity
ndArrayIdentityInt
ndArrayIdentityUInt
ndArrayIdentityLong
ndArrayIdentityULong
ndArrayIdentityComplexF32
ndArrayIdentityTranspose
ndArrayIdentityIntTranspose
ndArrayIdentityUIntTranspose
ndArrayIdentityLongTranspose
ndArrayIdentityULongTranspose
ndArrayIdentityComplexF32Transpose
MPSNDArrayIdentityTest
houseTransform
qUpdateKernel
copyKernel
clearKernel
setIdentityKernel
NHWC data supported only with HWIO weights format. Falling back to generic implementation
NCHW data supported only with OHIW weights format. Falling back to generic implementation
NCHW + OIHW not optimized for AMD. Falling back to generic implementation
Only NCHW and NHWC data formats supported. Falling back to generic implementation
Linking not supported by G13 gradient with weights kernels. Falling back to generic implementation
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayConvolution.mm
Either source, gradient or destination is transposed. Falling back to generic implementation
Slicing on source not supported. Falling back to generic implementation
Slicing on gradient or gradient not supported. Falling back to generic implementation
Only Float32 convolution supported
input channels should be divisible by group
output channels should be divisible by group
Please initialize the %@ class with initWithDevice:ndArrayConvolution2DDescriptor
Convolution2D: N=%lu, C=%lu, H=%lu, W=%lu, kH=%lu, kW=%lu, O=%lu, matrixM=%lu, matrixN=%lu, matrixK=%lu, A Datatype: %s, B Datatype: %s C Datatype: %s
Convolution2D: f16Ops=%f, f32Ops=%f, BytesRead=%f, BytesWritten=%f, OpsPerByte=%f
Convolution2DGradientWithInput: N=%lu, C=%lu, H=%lu, W=%lu, kH=%lu, kW=%lu, O=%lu, matrixM=%lu, matrixN=%lu, matrixK=%lu, A Datatype: %s, B Datatype: %s C Datatype: %s
Convolution2DGradientWithInput: f16Ops=%f, f32Ops=%f, BytesRead=%f, BytesWritten=%f, OpsPerByte=%f
Convolution2DGradientWithWeights: N=%lu, C=%lu, H=%lu, W=%lu, kH=%lu, kW=%lu, O=%lu, matrixM=%lu, matrixN=%lu, matrixK=%lu, A Datatype: %s, B Datatype: %s C Datatype: %s
Convolution2DGradientWithWeights: f16Ops=%f, f32Ops=%f, BytesRead=%f, BytesWritten=%f, OpsPerByte=%f
ndArrayConvolution2D
ndArrayConvolution2DGradientWithWeights
MPSNDArrayConv2DTest
NCHW
NHWC
OIHW
HWIO
MPSNDArrayConvolution2D.kernelWidth
MPSNDArrayConvolution2D.kernelHeight
MPSNDArrayConvolution2D.inputChannels
MPSNDArrayConvolution2D.outputChannels
MPSNDArrayConvolution2D.strideInPixelsX
MPSNDArrayConvolution2D.strideInPixelsY
MPSNDArrayConvolution2D.groups
MPSNDArrayConvolution2D.dilationRateInX
MPSNDArrayConvolution2D.dilationRateInY
MPSNDArrayConvolution2D.channelMultiplier
MPSNDArrayConvolution2D.dataFormat
MPSNDArrayConvolution2D.weightsFormat
MPSNDArrayConvolution2D.offset0
MPSNDArrayConvolution2D.offset1
MPSNDArrayConv2DGradientInputTest
MPSNDArrayConvolution2D.kernelOffset0
MPSNDArrayConvolution2D.kernelOffset1
MPSNDArrayConv2DGradientWeightsTest
Specified axis (%lu) exceeds source number of dimensions (%lu).
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayGather.mm
Index array dimensionality (%lu) greater than 1 not currently supported.
gather1DArrayData
gatherGradient1DArrayData
MPSNDARRAY_DIRECT_CONVOLUTION
A14 Winograd Convolution: Only NHWC and NCHW data format and HWIO weights format supported by A14 direct kernels. Falling back to A14 direct implementation
A14 Winograd Convolution: Prefix linking not supported by A14 Winograd kernels. Falling back to A14 direct convolution implementation
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayConvolutionA14.mm
Only NHWC/NCHW data format supported for source by Winograd kernels. Falling back to generic implementation
A14 Winograd Convolution: Data parameters are not compatible with Winograd algorithm. Falling back to A14 direct implementation
A14 Direct Convolution: Only NHWC data format and HWIO weights format supported by A14 kernels. Falling back to preG13 implementation
Gradient with data of non unit stride not optimal with A14 kernel. Falling back to preG13 implementation
A14 Direct Convolution: Prefix linking not supported by A14 kernels. Falling back to preG13 implementation
Only NCHW/NHWC data format supported for source by A14 direct convolution kernels. Falling back to generic implementation
Input channels less than 4 should fall back to generic implementation
Outer product size less than 16 should fall back to generic implementation
Only NHWC is supported
not enough input channels in filter
not enough output channels in filter
not enough taps in filter
ndArrayConvolution2DA14
Found optimal kernel with batch size
Found optimal kernel without batch size
Did not find any match in table
ndArrayConvolution2DGradientWithWeightsA14
ndArrayConvWinogradBatched
ndArrayConvWinogradBatched_reducedTile
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayScatter.mm
scatterND_base
scatterNDSlices
scatterNDGradient_base
scatterNDGradientSlices
MPSNDArrayScatter.operation
MPSNDArrayScatter.batchDimensions
Rank of data array (%lu) must be of equal rank to destination array (%lu)
Shape of updates array outer dimensions must match indices array outer dimensions. updates.shape[%lu] (%lu) != destination.shape[%lu] (%lu)
Shape of data array must match destination array outer. data.shape[%lu] (%lu) != destination.shape[%lu] (%lu)
stride       = ( %2lu, %2lu, %2lu, %2lu  )
offset       = ( %2d, %2d, %2d, %2d  )
dilationRate = ( %2lu, %2lu, %2lu, %2lu  )
paddingConst = %f
4d Stencil: T=%u, D=%u, H=%u, W=%u, kT=%lu, kD=%lu, kH=%lu, kW=%lu, src0 Datatype: %s dest Datatype: %s
Stencil: f16Ops=%f, f32Ops=%f, BytesRead=%f, BytesWritten=%f, OpsPerByte=%f
ndArrayStencil
ReductionTypeMin
ReductionTypeMax
ReductionTypeMinPropagateNaN
ReductionTypeMaxPropagateNaN
ReductionTypeSum
ReductionTypeProduct
ReductionTypeArgumentMin
ReductionTypeArgumentMax
<UNKNOWN POOLING MODE - invalid object?>
PadMode_Zero
PadMode_Constant
PadMode_ClampToEdge
PadMode_Mirror
PadMode_MirrorWithEdge
PadMode_Periodic
PadMode_AntiPeriodic
MPSNDArrayStencil.offsets
MPSNDArrayStencil.strides
MPSNDArrayStencil.dilationRates
MPSNDArrayStencil.PadMode
MPSNDArrayStencil.ReductionMode
MPSNDArrayStencil.padConst
kernelSize   = ( %2lu, %2lu, %2lu, %2lu  )
stride       = ( %2lu, %2lu, %2lu, %2lu  )
offset       = ( %2d, %2d, %2d, %2d  )
dilationRate = ( %2lu, %2lu, %2lu, %2lu  )
4d Pooling: T=%u, D=%u, H=%u, W=%u, kT=%lu, kD=%lu, kH=%lu, kW=%lu, src0 Datatype: %s dest Datatype: %s
Pooling: f16Ops=%f, f32Ops=%f, BytesRead=%f, BytesWritten=%f, OpsPerByte=%f
MPSNDArrayPoolingMode_Max
MPSNDArrayPoolingMode_Avg_ZeroPad
MPSNDArrayPoolingMode_Avg_ShrinkToEdge
MPSNDArrayPoolingMode_L2Norm
MPSNDArrayPoolingMode_DilatedMax
MPSNDArrayPooling.kernelSizes
MPSNDArrayPooling.offsets
MPSNDArrayPooling.strides
MPSNDArrayPooling.dilationRates
MPSNDArrayPooling.poolingMode
AvgZeroPad
AvgShrinkToEdge
DilatedMax
L2Norm
Default
-test MPSNDArrayPoolingTest -srcShapes [%u,%u,%u,%u] -dstShapes [%u,%u,%u,%u] -srcDataTypes %s -dstDataTypes %s -strides [%u,%u,%u,%u] -kernelPooling [%u,%u,%u,%u] -dilation [%u,%u,%u,%u] -poolingMode %s
Error: Indices cannot be returned for pooling modes other than max pooling
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayPooling.mm
-test MPSNDArrayPoolingTest -srcShapes [%u,%u,%u,%u] -dstShapes [%u,%u,%u,%u] -srcDataTypes %s -dstDataTypes %s -strides [%u,%u,%u,%u] -kernelPooling [%u,%u,%u,%u] -offset [%u,%u,%u,%u] -poolingMode %s -gradient
MPSNDArrayPoolingMultiDestination.kernelSizes
MPSNDArrayPoolingMultiDestination.offsets
MPSNDArrayPoolingMultiDestination.strides
MPSNDArrayPoolingMultiDestination.dilationRates
MPSNDArrayPoolingMultiDestination.poolingMode
Error: Multi destination pooling kernel only supports max pooling modes
Error: Multi destination pooling kernel requires indices provided as second argument in gradient encode
Error: Multi destination pooling encode has no non-nil destinations.
Error: destination values and indices length mismatch along axis %lu
ndArrayPooling
ndArrayPooling_tgMem
ndArrayPooling_largeWindows
ndArrayPooling_tmpOutput
ndArrayPooling_tgMem_tmpOutput
ndArrayPooling_largeWindows_tmpOutput
ndArrayPooling_1dpass
ndArrayPooling_1dpass_tmpIn
ndArrayPooling_1dpass_tmpOut
ndArrayPooling_1dpass_tmpInOut
ndArrayPooling_1dpass_useSIMD
ndArrayPooling_1dpass_useSIMD_tmpIn
ndArrayPooling_1dpass_useSIMD_tmpOut
ndArrayPooling_1dpass_useSIMD_tmpInOut
ndArrayPooling_1dpass_vertical
ndArrayPooling_1dpass_vertical_tmpIn
ndArrayPooling_1dpass_vertical_tmpOut
ndArrayPooling_1dpass_vertical_tmpInOut
ndArrayPoolingGradient
ndArrayPrune
ndArrayPruneGradient
MPSNDArraySort
MPSNDArrayArgSort
MPSNDArraySolverLU
MPSNDArrayDepthwiseConvolutionKernel
MPSNDArrayMatrixMultiplication
MPSNDArrayMatrixMultiplicationGradient
MPSNDArrayMathTernaryKernel
MPSNDArraySelect
MPSNDArrayClamp
MPSNDArrayMathTernaryPrimaryGradient
MPSNDArraySelectPrimaryGradient
MPSNDArrayClampPrimaryGradient
MPSNDArrayMathTernarySecondaryGradient
MPSNDArraySelectSecondaryGradient
MPSNDArrayClampSecondaryGradient
MPSNDArrayMathTernaryTertiaryGradient
MPSNDArraySelectTertiaryGradient
MPSNDArrayClampTertiaryGradient
MPSNDArrayGatherND
MPSNDArrayGatherNDGradient
MPSNDArrayTopK
MPSNDArrayTopKGradient
MPSNDArrayTopKMultiDestination
MPSNDArrayMathUnaryKernel
MPSNDArrayExponent
MPSNDArrayExponentBase2
MPSNDArrayExponentBase10
MPSNDArrayLogarithm
MPSNDArrayLogarithmBase2
MPSNDArrayLogarithmBase10
MPSNDArraySquare
MPSNDArraySquareRoot
MPSNDArrayReverseSquareRoot
MPSNDArrayReciprocal
MPSNDArrayAbsolute
MPSNDArrayNegative
MPSNDArraySign
MPSNDArraySignbit
MPSNDArrayCeil
MPSNDArrayFloor
MPSNDArrayRound
MPSNDArrayRint
MPSNDArraySin
MPSNDArrayCos
MPSNDArrayTan
MPSNDArraySinh
MPSNDArrayCosh
MPSNDArrayTanh
MPSNDArrayASin
MPSNDArrayACos
MPSNDArrayATan
MPSNDArrayASinh
MPSNDArrayACosh
MPSNDArrayATanh
MPSNDArrayNOT
MPSNDArrayIsInfinite
MPSNDArrayIsFinite
MPSNDArrayIsNaN
MPSNDArrayErf
MPSNDArrayMathUnaryGradient
MPSNDArrayExponentGradient
MPSNDArrayExponentBase2Gradient
MPSNDArrayExponentBase10Gradient
MPSNDArrayLogarithmGradient
MPSNDArrayLogarithmBase2Gradient
MPSNDArrayLogarithmBase10Gradient
MPSNDArraySquareGradient
MPSNDArraySquareRootGradient
MPSNDArrayReverseSquareRootGradient
MPSNDArrayReciprocalGradient
MPSNDArrayAbsoluteGradient
MPSNDArrayNegativeGradient
MPSNDArraySignGradient
MPSNDArraySignbitGradient
MPSNDArrayCeilGradient
MPSNDArrayFloorGradient
MPSNDArrayRoundGradient
MPSNDArrayRintGradient
MPSNDArraySinGradient
MPSNDArrayCosGradient
MPSNDArrayTanGradient
MPSNDArraySinhGradient
MPSNDArrayCoshGradient
MPSNDArrayTanhGradient
MPSNDArrayASinGradient
MPSNDArrayACosGradient
MPSNDArrayATanGradient
MPSNDArrayASinhGradient
MPSNDArrayACoshGradient
MPSNDArrayATanhGradient
MPSNDArrayNOTGradient
MPSNDArrayIsInfiniteGradient
MPSNDArrayIsFiniteGradient
MPSNDArrayIsNaNGradient
MPSNDArrayErfGradient
MPSNDArrayPadKernel
MPSNDArrayPadGradientKernel
MPSNDArrayLocalConvolution
MPSNDArrayStridedSlice
MPSNDArrayStridedSliceGradient
MPSNDArrayHammingDistanceKernel
MPSNDArrayConvolution3D
MPSNDArrayConvolution3DGradientWithInput
MPSNDArrayConvolution3DGradientWithWeights
MPSNDArraySoftMax
MPSNDArrayLogSoftMax
MPSNDArraySoftMaxGradient
MPSNDArrayLogSoftMaxGradient
MPSNDArrayTileKernel
MPSNDArrayTileGradientKernel
MPSNDArrayCropResize
MPSNDArrayInitialization
MPSNDArrayInitializationConstant
MPSNDArrayInitializationIdentity
MPSNDArrayInitializationRandomNormal
MPSNDArrayInitializationRandomUniform
MPSNDArrayInitializationTruncatedNormal
MPSNDArrayInitializationGlorotNormal
MPSNDArrayInitializationGlorotUniform
MPSNDArrayRandomStateDescriptor
NSCopying
NSSecureCoding
NSCoding
MPSNDArrayRandomState
MPSNDArrayRandom
MPSNDArrayRandomUniform
MPSNDArrayRandomTruncatedNormal
MPSNDArrayRandomNormal
MPSExternalNDArrayBinary
MPSExternalPluginBase
NSObject
MPSExternalNDArrayBinaryGradient
MPSPluginNDArrayConvolutionDescriptor
MPSNDArrayGridSample
MPSNDArrayBinaryKernel
MPSNDArrayBinaryPrimaryGradientKernel
MPSNDArrayBinarySecondaryGradientKernel
MPSNDArrayNeuronKernel
MPSNDArrayNeuronGeLU
MPSNDArrayNeuronGradient
MPSNDArrayNeuronGeLUGradient
MPSNDArrayResample
MPSNDArrayResampleGradient
MPSNDArrayScan
MPSNDArrayScanGradient
MPSNDArrayMathBinaryKernel
MPSNDArrayAddition
MPSNDArraySubtraction
MPSNDArrayMultiplication
MPSNDArrayDivision
MPSNDArrayModulo
MPSNDArrayPower
MPSNDArrayMinimum
MPSNDArrayMaximum
MPSNDArrayEqual
MPSNDArrayNotEqual
MPSNDArrayLessThan
MPSNDArrayLessThanOrEqualTo
MPSNDArrayGreaterThan
MPSNDArrayGreaterThanOrEqualTo
MPSNDArrayAND
MPSNDArrayOR
MPSNDArrayNAND
MPSNDArrayNOR
MPSNDArrayXOR
MPSNDArrayXNOR
MPSNDArrayATan2
MPSNDArrayMathBinaryPrimaryGradient
MPSNDArrayAdditionPrimaryGradient
MPSNDArraySubtractionPrimaryGradient
MPSNDArrayMultiplicationPrimaryGradient
MPSNDArrayDivisionPrimaryGradient
MPSNDArrayModuloPrimaryGradient
MPSNDArrayPowerPrimaryGradient
MPSNDArrayMinimumPrimaryGradient
MPSNDArrayMaximumPrimaryGradient
MPSNDArrayEqualPrimaryGradient
MPSNDArrayNotEqualPrimaryGradient
MPSNDArrayLessThanPrimaryGradient
MPSNDArrayLessThanOrEqualToPrimaryGradient
MPSNDArrayGreaterThanPrimaryGradient
MPSNDArrayGreaterThanOrEqualToPrimaryGradient
MPSNDArrayANDPrimaryGradient
MPSNDArrayORPrimaryGradient
MPSNDArrayNANDPrimaryGradient
MPSNDArrayNORPrimaryGradient
MPSNDArrayXORPrimaryGradient
MPSNDArrayXNORPrimaryGradient
MPSNDArrayATan2PrimaryGradient
MPSNDArrayMathBinarySecondaryGradient
MPSNDArrayAdditionSecondaryGradient
MPSNDArraySubtractionSecondaryGradient
MPSNDArrayMultiplicationSecondaryGradient
MPSNDArrayDivisionSecondaryGradient
MPSNDArrayModuloSecondaryGradient
MPSNDArrayPowerSecondaryGradient
MPSNDArrayMinimumSecondaryGradient
MPSNDArrayMaximumSecondaryGradient
MPSNDArrayEqualSecondaryGradient
MPSNDArrayNotEqualSecondaryGradient
MPSNDArrayLessThanSecondaryGradient
MPSNDArrayLessThanOrEqualToSecondaryGradient
MPSNDArrayGreaterThanSecondaryGradient
MPSNDArrayGreaterThanOrEqualToSecondaryGradient
MPSNDArrayANDSecondaryGradient
MPSNDArrayORSecondaryGradient
MPSNDArrayNANDSecondaryGradient
MPSNDArrayNORSecondaryGradient
MPSNDArrayXORSecondaryGradient
MPSNDArrayXNORSecondaryGradient
MPSNDArrayATan2SecondaryGradient
MPSNDArrayGradientState
MPSNDArrayMultiaryMultiDestinationBase
MPSNDArrayMultiaryMultiDestinationKernel
MPSNDArrayAllocator
MPSNDArrayMultiaryBase
MPSNDArrayMultiaryKernel
MPSNDArrayMultiaryGradientKernel
MPSNDArrayDecompositionLU
MPSNDArrayBandPart
MPSNDArrayMatrixMultiplicationSparse
MPSNDArrayReduction
MPSNDArrayReductionSum
MPSNDArrayReductionGradient
MPSNDArrayReductionSumGradient
MPSNDArrayIdentity
MPSNDArrayDecompositionQR
MPSNDArrayConvolution2DDescriptor
MPSNDArrayDepthwiseConvolution2DDescriptor
MPSNDArrayConvolution2D
MPSNDArrayConvolution2DGradientWithInput
MPSNDArrayConvolution2DGradientWithWeights
MPSNDArrayGather
MPSNDArrayGatherGradient
MPSNDArrayGatherGradientState
MPSNDArrayScatter
MPSNDArrayScatterGradient
MPSNDArrayStencilKernel
MPSNDArrayUnaryKernel
MPSNDArrayUnaryGradientKernel
MPSNDArrayPoolingKernel
MPSNDArrayPoolingMultiDestinationKernel
MPSNDArrayPrune
FanOut
TB,N,V_computeR
T@"<MPSNDArrayAllocator>",&,N,V_destinationArrayAllocator
TQ,R,N,V_groups
T@"NSNumber",R,N,V_constantValue
Tf,N,V_sparsity
TB,N,V_alignCorners
Tq,N,V_numLower
TB,N,V_descending
_FanOut
TB,N,V_findIndices
_encode
TB,N,V_normalizeCoordinates
_groups
TB,N,V_relativeCoordinates
_minimumInteger
TB,N,V_structuredSparse
_plugin
TB,R
_poolingStrides
TI,N,V_coordinateMode
_samplingMethod
TI,N,V_nearestMode
_stencilOffsets
TI,N,V_resampleMode
_strideInPixels
TI,N,V_samplingMode
arrayWithArray:
TI,R,N,V_algorithm
columns
TI,R,N,V_weightsFormat
copyToGradientState:sourceArrays:sourceStates:destinationArray:
TQ,N,V_FanIn
dilationRateInX
TQ,N,V_K
encodeToCommandBuffer:sourceArray:resultState:destinationArray:
TQ,N,V_batchDimensions
finalOp
TQ,N,V_counterStride
initWithDevice:axis:descending:
TQ,N,V_dilationRateInY
initWithDevice:minimum:maximum:
TQ,N,V_inputFeatureChannels
isProxy
TQ,N,V_kernelWidth
minimum
TQ,N,V_resizeHeight
offsets
TQ,N,V_skipElements
primaryEdgeMode
TQ,N,V_strideInPixelsX
release
TQ,R
setChannelAxis:
TQ,R,N,V_channelMultiplier
setDenseSparse:
TQ,R,N,V_inputFeatureChannels
setKernelSizes:
TQ,R,N,V_subPixelScaleFactor
setNearestMode:
Td,N,V_beta
setPruneMetric:
Tf,N,V_maximum
strideInPixelsX
Tf,N,V_minimum
strides
Tf,N,V_spatialScale
transposeSparse
FanIn
TB,N,V_computeQ
T#,R
TQ,N,V_edgeMode
T@"NSArray",C,N,V_axes
T^I,R,N,V_state
T@"NSString",R,C
Ti,N,V_poolingReturnIndicesMode
TB,N,V_denseSparse
Tq,N,V_numUpper
TB,N,V_exclusive
_coordinateMode
TB,N,V_incrementKey
_encodeGradient
TB,N,V_poolingGradientWithIndices
_maximumInteger
TB,N,V_reverse
_opType
TB,N,V_transposeSparse
_poolingOffsets
TB,R,N,V_computeGradient
_pruneStructure
TI,N,V_dataFormat
_scaleTransform
TI,N,V_poolingReturnIndicesDataType
_stencilStrides
TI,N,V_samplingMethod
_zeroFillKernel
TI,N,V_weightsFormat
batchDimensions
TI,R,N,V_dataFormat
computeGradient
TQ,N
dealloc
TQ,N,V_FanOut
dilationRateInY
TQ,N,V_axis
encodeToCommandBuffer:sourceArray:sourceGradient:gradientState:
TQ,N,V_channelAxis
initWithDevice:
TQ,N,V_dilationRateInX
initWithDevice:destinationDataType:seed:distributionDescriptor:
TQ,N,V_groups
initWithFormat:
TQ,N,V_kernelHeight
maximum
TQ,N,V_outputFeatureChannels
numberWithBool:
TQ,N,V_resizeWidth
paddingConstant
TQ,N,V_sparseRows
pushDebugGroup:
TQ,N,V_strideInPixelsY
reverse
TQ,R,N
setConvStrides:
TQ,R,N,V_edgeMode
setFindIndices:
TQ,R,N,V_outputFeatureChannels
setKernelWidth:
Td,N,V_alpha
setPaddingMode:
Td,N,V_constantValue
setResizeWidth:
Tf,N,V_mean
strideInPixelsY
Tf,N,V_paddingConstant
supportsGradientForSourceIndex:
Tf,N,V_standardDeviation
Tf,R,N
Tf,R,N,V_maximum
Tf,R,N,V_mean
Tf,R,N,V_minimum
Tf,R,N,V_standardDeviation
Ti,N,V_paddingMode
Ti,N,V_pruneMetric
Ti,N,V_pruneStructure
Ti,N,V_reductionMode
Ti,R,N,V_operation
Ti,R,N,V_poolingMode
Tq,N,V_maximumInteger
Tq,N,V_minimumInteger
Tr^{MPSScaleTransform=dddd},N,V_scaleTransform
T{?=[16Q]},N,V_dilationRates
T{?=[16Q]},N,V_kernelSizes
T{?=[16Q]},N,V_multiples
T{?=[16Q]},R,N
T{?=[16q]},N,V_offsets
T{?=[16q]},N,V_strides
T{?=[16q]},R,N
T{MPSNDArrayConv3dOffsets_s=[3q]},N
T{MPSNDArrayConv3dOffsets_s=[3q]},N,V_windowOffsets
T{MPSNDArrayConv3dSizes_s=[3Q]},N
T{MPSNDArrayConv3dSizes_s=[3Q]},N,V_convDilationRates
T{MPSNDArrayConv3dSizes_s=[3Q]},N,V_convStrides
T{MPSNDArrayConvolutionOffsets=[2q]},N
T{MPSNDArrayConvolutionSizes=[2Q]},N,V_dilationRates
T{MPSNDArrayConvolutionSizes=[2Q]},N,V_kernelSizes
T{MPSNDArrayConvolutionSizes=[2Q]},R,N
T{MPSNDArrayPaddingSize=[16[2Q]]},R,N,V_paddingSize
T{MPSNDArrayPoolingOffsets_s=[4q]},N,V_poolingOffsets
T{MPSNDArrayPoolingSizes_s=[4Q]},N,V_poolingDilationRates
T{MPSNDArrayPoolingSizes_s=[4Q]},N,V_poolingStrides
T{MPSNDArrayPoolingSizes_s=[4Q]},R,N,V_poolingKernelSizes
T{MPSNDArrayStencilOffsets_s=[4q]},N,V_stencilOffsets
T{MPSNDArrayStencilSizes_s=[4Q]},N,V_stencilDilationRates
T{MPSNDArrayStencilSizes_s=[4Q]},N,V_stencilStrides
T{MPSPluginNDArrayConvolutionSizes=[3Q]},R,N,V_dilationRates
T{MPSPluginNDArrayConvolutionSizes=[3Q]},R,N,V_kernelSizes
T{MPSPluginNDArrayConvolutionSizes=[3Q]},R,N,V_strides
_FanIn
_algorithm
_alignCorners
_alpha
_alphaBetaKernelDAGObject
_autoTuning
_autoTuningParams
_autoTuningTarget
_axes
_axis
_batchDimensions
_beta
_channelAxis
_channelMultiplier
_computeGradient
_computeQ
_computeR
_constantValue
_convDilationRates
_convStrides
_counterStride
_dataFormat
_defaultGradientDAG
_defaultKernelDAG
_denseSparse
_descending
_destinationArrayAllocator
_dilationRateInX
_dilationRateInY
_dilationRates
_disablePostfixReturnIndices
_distribution
_dstCount
_edgeMode
_encodeData
_exclusive
_findIndices
_forcePlugin
_generator
_identity
_incrementKey
_inputFeatureChannels
_kernelHeight
_kernelOffsets
_kernelSizes
_kernelWidth
_maximum
_mean
_minimum
_mlu
_mmul
_mslu
_multiples
_ndArrayIdentity
_nearestMode
_normalizeCoordinates
_numLower
_numUpper
_offsets
_operation
_outputFeatureChannels
_paddingConstant
_paddingMode
_paddingSize
_poolingDilationRates
_poolingGradientWithIndices
_poolingKernelSizes
_poolingMode
_poolingReturnIndicesDataType
_poolingReturnIndicesMode
_provenance
_pruneMetric
_reductionMode
_relativeCoordinates
_resampleMode
_resizeHeight
_resizeWidth
_reverse
_samplingMode
_scanKernel
_seed
_skipElements
_sourceGradientIndex
_sparseRows
_sparsity
_spatialScale
_srcCount
_srcInfo
_standardDeviation
_state
_stencilDilationRates
_strideInPixelsX
_strideInPixelsY
_strides
_structuredSparse
_subPixelScaleFactor
_transformStorage
_transposeSparse
_weightsFormat
_windowOffsets
addCompletedHandler:
addObject:
algorithm
alignCorners
allocWithZone:
alpha
array
arrayByAddingObject:
arrayForCommandBuffer:arrayDescriptor:kernel:
arrayViewWithCommandBuffer:descriptor:aliasing:
arrayWithCapacity:
arrayWithObjects:count:
autorelease
axes
axis
beta
buffer
cStringUsingEncoding:
channelAxis
channelMultiplier
class
commandQueue
computeQ
computeR
conformsToProtocol:
constantValue
containsValueForKey:
contents
convDilationRates
convStrides
coordinateMode
copy
copyWithZone:
copyWithZone:device:
count
countByEnumeratingWithState:objects:count:
counterStride
dataFormat
dataType
debugDescription
decodeBoolForKey:
decodeBytesForKey:returnedLength:
decodeDoubleForKey:
decodeFloatForKey:
decodeInt32ForKey:
decodeInt64ForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
defaultAllocator
denseSparse
descending
description
descriptor
descriptorWithDataType:dimensionCount:dimensionSizes:
descriptorWithDataType:shape:
destinationArrayAllocator
destinationArrayDescriptorForSourceArrays:sourceGradientIndex:
destinationArrayDescriptorForSourceArrays:sourceState:
destinationArrayDescriptorsForSourceArrays:sourceState:
destinationDataType
destinationGradientArrayDescriptorsForSourceArrays:sourceGradient:sourceState:
destinationGradientsSupported
destinationStrides
device
deviceMemoryBytesRead
deviceMemoryBytesWrite
dilationRates
dilationRatesForSourceIndex:
dimensionsNotToBeBroadcast
dimensionsToBeRetained
dispatchThreadgroups:threadsPerThreadgroup:
edgeMode
edgeModeAtSourceIndex:
encodeBool:forKey:
encodeBytes:length:forKey:
encodeDouble:forKey:
encodeFloat:forKey:
encodeGradientsToCommandBuffer:sourceArrays:sourceGradient:gradientState:
encodeGradientsToCommandBuffer:sourceArrays:sourceGradient:gradientState:destinationGradients:
encodeGradientsToCommandBuffer:sourceArrays:sourceGradient:gradientState:destinationGradients:kernelDAGObject:
encodeGradientsToCommandEncoder:commandBuffer:sourceArrays:sourceGradient:gradientState:destinationGradients:kernelDAGObject:
encodeInt32:forKey:
encodeInt64:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodePreProcessingToCommandEncoder:commandBuffer:sourceArrays:destinationArray:kernelDAGObject:
encodePrimaryGradientToCommandBuffer:encoder:options:pluginOptions:primaryBuffer:primaryInfo:secondaryBuffer:secondaryInfo:gradientBuffer:gradientInfo:destination:destinationInfo:accumulate:predicationBuffer:predicationOffset:
encodePrimaryGradientToCommandBuffer:encoder:options:pluginOptions:primaryBuffer:primaryInfo:secondaryBuffer:secondaryInfo:gradientBuffer:gradientInfo:destination:destinationInfo:padding:accumulate:predicationBuffer:predicationOffset:
encodeSecondaryGradientToCommandBuffer:encoder:options:pluginOptions:primaryBuffer:primaryInfo:secondaryBuffer:secondaryInfo:gradientBuffer:gradientInfo:destination:destinationInfo:accumulate:predicationBuffer:predicationOffset:
encodeSecondaryGradientToCommandBuffer:encoder:options:pluginOptions:primaryBuffer:primaryInfo:secondaryBuffer:secondaryInfo:gradientBuffer:gradientInfo:destination:destinationInfo:padding:accumulate:predicationBuffer:predicationOffset:
encodeToCommandBuffer:computeEncoder:destinationBuffer:destinationOffset:numEntries:stride:
encodeToCommandBuffer:destinationArray:
encodeToCommandBuffer:destinationDescriptor:
encodeToCommandBuffer:encoder:leftMatrix:rightMatrix:resultMatrix:
encodeToCommandBuffer:encoder:options:pluginOptions:primaryBuffer:primaryInfo:secondaryBuffer:secondaryInfo:destinationBuffer:destinationInfo:padding:predicationBuffer:predicationOffset:
encodeToCommandBuffer:encoder:options:pluginOptions:primaryBuffer:primaryInfo:secondaryBuffer:secondaryInfo:destinationBuffer:destinationInfo:predicationBuffer:predicationOffset:
encodeToCommandBuffer:primarySourceArray:secondarySourceArray:
encodeToCommandBuffer:primarySourceArray:secondarySourceArray:destinationArray:
encodeToCommandBuffer:primarySourceArray:secondarySourceArray:resultState:destinationArray:
encodeToCommandBuffer:primarySourceArray:secondarySourceArray:resultState:outputStateIsTemporary:
encodeToCommandBuffer:primarySourceArray:secondarySourceArray:sourceGradient:gradientState:
encodeToCommandBuffer:primarySourceArray:secondarySourceArray:sourceGradient:gradientState:destinationArray:
encodeToCommandBuffer:sourceArray:
encodeToCommandBuffer:sourceArray:destinationArray:
encodeToCommandBuffer:sourceArray:resultState:outputStateIsTemporary:
encodeToCommandBuffer:sourceArray:sourceGradient:gradientState:destinationArray:
encodeToCommandBuffer:sourceArrays:
encodeToCommandBuffer:sourceArrays:destinationArray:
encodeToCommandBuffer:sourceArrays:destinationArrays:
encodeToCommandBuffer:sourceArrays:resultState:destinationArray:
encodeToCommandBuffer:sourceArrays:resultState:destinationArray:kernelDAGObject:
encodeToCommandBuffer:sourceArrays:resultState:outputStateIsTemporary:
encodeToCommandBuffer:sourceArrays:sourceGradient:gradientState:
encodeToCommandBuffer:sourceArrays:sourceGradient:gradientState:destinationArray:
encodeToCommandBuffer:sourceArrays:sourceGradient:gradientState:destinationArray:kernelDAGObject:
encodeToCommandEncoder:commandBuffer:sourceArrays:destinationArray:
encodeToCommandEncoder:commandBuffer:sourceArrays:destinationArrays:
encodeToCommandEncoder:commandBuffer:sourceArrays:destinationArrays:activeDestinationMask:
encodeToCommandEncoder:commandBuffer:sourceArrays:destinationArrays:status:
encodeToCommandEncoder:commandBuffer:sourceArrays:resultState:destinationArray:kernelDAGObject:
encodeToCommandEncoder:commandBuffer:sourceArrays:sourceGradient:gradientState:destinationArray:kernelDAGObject:
encodeToCommandEncoder:commandBuffer:sourceMatrix:resultMatrix:pivotIndices:status:
encodeToCommandEncoder:commandBuffer:sourceMatrix:rightHandSideMatrix:pivotIndices:solutionMatrix:
encodeWithCoder:
endEncoding
exclusive
expectedVirtualSourceCount
exportDataWithCommandBuffer:computeEncoder:toBuffer:destinationDataType:offset:rowStrides:lengths:numLengths:flatteningLevel:
exportStateToNDArray:
findIndices
firstGradientDestinationFromDestinationGradients:outMaxNumDimensions:
float16Ops
float32Ops
floatValue
getShape
getShapeVector
graph
groups
hash
incrementKey
init
initPhiloxStateDescriptorWithCounterLow:counterHigh:key:
initPhiloxStateDescriptorWithSeed:
initWithArray:
initWithBuffer:descriptor:
initWithBuffer:offset:descriptor:
initWithBytes:length:encoding:
initWithCapacity:
initWithCoder:
initWithCoder:device:
initWithCommandBuffer:withDispatchType:
initWithDevice:K:
initWithDevice:K:computeGradient:
initWithDevice:K:findIndices:
initWithDevice:axis:
initWithDevice:axis:operation:
initWithDevice:axis:operation:exclusive:reverse:
initWithDevice:constantValue:
initWithDevice:descriptor:
initWithDevice:edgeMode:constantValue:paddingSize:
initWithDevice:edgeMode:paddingSize:
initWithDevice:kernelSizes:poolingMode:
initWithDevice:kernelSizes:poolingMode:computeGradient:
initWithDevice:kernelSizes:poolingMode:returnIndicesMode:
initWithDevice:mean:standardDeviation:
initWithDevice:mean:standardDeviation:seed:
initWithDevice:minimum:maximum:seed:
initWithDevice:minimumInteger:maximumInteger:
initWithDevice:ndArrayConvolution2DDescriptor:
initWithDevice:operation:
initWithDevice:rows:columns:
initWithDevice:seed:
initWithDevice:sourceCount:
initWithDevice:sourceCount:destinationCount:
initWithDevice:sourceCount:sourceGradientIndex:
initWithDevice:transpose:order:numberOfRightHandSides:
initWithDevice:transposeLeft:transposeRight:resultRows:resultColumns:interiorColumns:alpha:beta:
initWithKernelDAG:finalOp:
initWithKernelSizes:inputFeatureChannels:outputFeatureChannels:strides:dilationRates:groups:channelMultiplier:subPixelScaleFactor:dataFormat:weightsFormat:
initWithResource:
initWithSourceCount:
inputFeatureChannels
inputTensorAtIndex:
isDestinationActiveAtIndex:
isEqual:
isKindOfClass:
isMemberOfClass:
kernelDAGObjectSetup:sourceArrays:sourceGradient:destination:
kernelDimensionalityForDestinationArray:
kernelDimensionalityForSourceArrays:
kernelDimensionalityForSourceArrays:destinationArrays:kernelDAGObject:
kernelHeight
kernelOffsets
kernelSizes
kernelSizesForSourceIndex:
kernelWidth
label
length
lengthOfDimension:
libraryInfo:
matrixDescriptorWithRows:columns:matrices:rowBytes:matrixBytes:dataType:
matrixDescriptorWithRows:columns:rowBytes:dataType:
maxBatchSize
maxSupportedDimensionsForSourceArrays:destinationArray:
maxTotalThreadsPerThreadgroup
maximumInteger
mean
minimumInteger
multiples
mutableCopy
nearestMode
newBufferWithLength:options:
normalDistributionDescriptorWithMean:standardDeviation:
normalDistributionDescriptorWithMean:standardDeviation:minimum:maximum:
normalizeCoordinates
null
numLower
numUpper
numberOfDimensions
numberOfInputTensors
numberOfOutputTensors
numberWithUnsignedInteger:
objectAtIndexedSubscript:
objectForKey:
offsetsAtSourceIndex:
operation
outputFeatureChannels
outputTensorAtIndex:
paddingMode
paddingSize
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
poolingDilationRates
poolingGradientWithIndices
poolingKernelSizes
poolingMode
poolingOffsets
poolingReturnIndicesDataType
poolingReturnIndicesMode
poolingStrides
popDebugGroup
primaryDilationRates
primaryKernelSizes
primaryOffsets
primaryStrides
pruneMetric
pruneStructure
readCount
reductionMode
reinitializeDistributionDescriptor:
relativeCoordinates
removeObjectForKey:
resampleMode
reshapeFitToTileToCommandBuffer:currentSource:kernelDimension:dimensionsToBeRetained:
reshapeWithCommandBuffer:sourceArray:dimensionCount:dimensionSizes:destinationArray:
reshapeWithCommandBuffer:sourceArray:shape:destinationArray:
reshapeWithCommandEncoder:commandBuffer:sourceArray:dimensionCount:dimensionSizes:destinationArray:
reshapeWithCommandEncoder:commandBuffer:sourceArray:shape:destinationArray:
reshapeWithDimensionCount:dimensionSizes:
resizeHeight
resizeWidth
resourceSize
respondsToSelector:
resultStateForSourceArrays:sourceStates:destinationArray:
retain
retainCount
rowBytes
rows
safeArrayViewWithCommandBuffer:computeEncoder:descriptor:aliasing:
safeArrayViewWithCommandBuffer:descriptor:aliasing:
samplingMethod
samplingMode
scaleTransform
secondaryDilationRates
secondaryEdgeMode
secondaryKernelSizes
secondaryOffsets
secondaryStrides
self
setAlignCorners:
setAlpha:
setAutoTuning:
setAutoTuningParameters:
setAutoTuningTarget:
setAxes:
setAxis:
setBatchDimensions:
setBeta:
setBuffer:offset:atIndex:
setBytes:length:atIndex:
setChannelMultiplier:
setColumns:
setComputePipelineState:
setComputeQ:
setComputeR:
setConstantValue:
setConstantValue:type:atIndex:
setConvDilationRates:
setCoordinateMode:
setCopyBlock:
setCounterStride:
setDataFormat:
setDescending:
setDestinationArrayAllocator:
setDeviceMemoryBytesRead:
setDeviceMemoryBytesWrite:
setDilationRateInX:
setDilationRateInY:
setDilationRates:
setEdgeMode:
setExclusive:
setFanIn:
setFanOut:
setFloat16Ops:
setFloat32Ops:
setGroups:
setIncrementKey:
setIndexingArithmaticTypeMask:sourceArrays:sourceGradient:destination:tileDimensions:
setInputFeatureChannels:
setK:
setKernelHeight:
setKernelOffsets:
setLabel:
setLengthOfDimension:atIndex:
setM:
setMaximum:
setMaximumInteger:
setMean:
setMinimum:
setMinimumInteger:
setMultiples:
setN:
setNormalizeCoordinates:
setNumLower:
setNumUpper:
setNumberOfRightHandSides:
setObject:atIndexedSubscript:
setObject:forKey:
setOffsets:
setOrder:
setOutputFeatureChannels:
setPaddingConstant:
setPoolingDilationRates:
setPoolingGradientWithIndices:
setPoolingOffsets:
setPoolingReturnIndicesDataType:
setPoolingReturnIndicesMode:
setPoolingStrides:
setPreferPackedRows:
setPruneStructure:
setReadCount:
setReductionMode:
setRelativeCoordinates:
setResampleMode:
setResizeHeight:
setReverse:
setRows:
setSamplingMethod:
setSamplingMode:
setScaleTransform:
setSkipElements:
setSparseRows:
setSparsity:
setSpatialScale:
setStandardDeviation:
setStencilDilationRates:
setStencilOffsets:
setStencilStrides:
setStrideInPixels:
setStrideInPixelsX:
setStrideInPixelsY:
setStrides:
setStructuredSparse:
setTexture:atIndex:
setThreadgroupMemoryLength:atIndex:
setTransA:
setTransB:
setTransposeSparse:
setWeightsFormat:
setWindowOffsets:
setWorkspace:
skipElements
sliceDimension:withSubrange:
sliceRangeForDimension:
sparseRows
sparsity
spatialScale
standardDeviation
state
stateLength
stencilDilationRates
stencilOffsets
stencilStrides
strideInPixels
stridesAtSourceIndex:
stridesForSourceIndex:
stringByAppendingString:
stringWithFormat:
structuredSparse
subPixelScaleFactor
superclass
supportsPostfixForDevice:
supportsPostfixForDevice:convolutionDescriptor:sourceTensorDescriptor:destinationTensorDescriptor:weightsTensorDescriptor:
supportsPrefixForDevice:
supportsSecureCoding
temporaryNDArrayWithCommandBuffer:descriptor:
temporaryResultStateForCommandBuffer:sourceArrays:sourceStates:destinationArray:
threadExecutionWidth
transposeDimension:withDimension:
trsmKernel
trsmL
trsmU
uniformDistributionDescriptorWithMinimum:maximum:
unsignedIntValue
unsignedIntegerValue
unsignedLongValue
userDictionary
weightsFormat
windowOffsets
workloadStatisticsForSourceArrays:destArrays:kernel:kernelDAGObject:sourceState:
workloadStatisticsForSourceArrays:destArrays:sourceState:
workloadStatisticsForSourceArrays:sourceState:
workspace
writeBytes:strideBytes:
zone
r^{MPSLibraryInfo=iI*^?{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}}24@0:8^v16
v24@0:8Q16
Q16@0:8
Q24@0:8@16
@24@0:8@16
@36@0:8@16Q24B32
v16@0:8
B16@0:8
v20@0:8B16
@"MPSNDArrayScan"
@32@0:8@16Q24
@"MPSMatrixSolveLU"
B24@0:8^v16
B24@0:8Q16
@16@0:8
16@0:8
@32@0:8@16@24
v24@0:8@16
@32@0:8^{_NSZone=}16@24
{MPSNDArrayConv3dOffsets_s=[3q]}16@0:8
v40@0:8{MPSNDArrayConv3dOffsets_s=[3q]}16
{MPSNDArrayConv3dSizes_s=[3Q]}16@0:8
v40@0:8{MPSNDArrayConv3dSizes_s=[3Q]}16
{MPSNDArrayConv3dOffsets_s="offsets"[3q]}
{MPSNDArrayConv3dSizes_s="sizes"[3Q]}
Q40@0:8@16@24@32
@56@0:8@16@24@32@40@48
@56@0:8@16@24@32^@40^@48
v20@0:8i16
v24@0:8^v16
d16@0:8
v24@0:8d16
@"MPSMatrixMultiplication"
@"MPSNDArrayIdentity"
@"MPSKernelDAGObject"
Q32@0:8@16@24
@40@0:8@16Q24Q32
v48@0:8@16@24@32@40
@296@0:8@16Q24@32{MPSNDArrayPaddingSize=[16[2Q]]}40
{MPSNDArrayPaddingSize=[16[2Q]]}16@0:8
@"NSNumber"
{MPSNDArrayPaddingSize="paddingSize"[16[2Q]]}
@288@0:8@16Q24{MPSNDArrayPaddingSize=[16[2Q]]}32
I16@0:8
v20@0:8I16
{MPSNDArrayConvolutionSizes=[2Q]}16@0:8
v32@0:8{MPSNDArrayConvolutionSizes=[2Q]}16
{MPSNDArrayConvolutionSizes="size"[2Q]}
24@0:8Q16
{?=[16q]}16@0:8
v144@0:8{?=[16q]}16
{?="dimensions"[16q]}
v56@0:8@16@24@32@40@48
@"MPSNDArrayInitializationConstant"
@56@0:8@16@24Q3240
{?=[16Q]}16@0:8
v144@0:8{?=[16Q]}16
{?="dimensions"[16Q]}
f16@0:8
v20@0:8f16
v32@0:8@16@24
@"MPSParallelRandomDistributionDescriptor"
@"MPSParallelRandom"
@28@0:8@16f24
@40@0:8@16f24f28Q32
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8Q16Q24Q32
@24@0:8Q16
^I16@0:8
@32@0:8@16f24f28
q16@0:8
v24@0:8q16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@"<MTLDevice>"16
@"<MTLDevice>"16@0:8
Q112@0:8@16@24Q32Q40@48r^{?=Q[4I][4I]I}56@64r^{?=Q[4I][4I]I}72@80r^{?=Q[4I][4I]I}88@96Q104
Q120@0:8@16@24Q32Q40@48r^{?=Q[4I][4I]I}56@64r^{?=Q[4I][4I]I}72@80r^{?=Q[4I][4I]I}88r^{?=QQQQQQ}96@104Q112
Q112@0:8@"<MTLCommandBuffer>"16@"<MTLComputeCommandEncoder>"24Q32Q40@"<MTLBuffer>"48r^{?=Q[4I][4I]I}56@"<MTLBuffer>"64r^{?=Q[4I][4I]I}72@"<MTLBuffer>"80r^{?=Q[4I][4I]I}88@"<MTLBuffer>"96Q104
Q120@0:8@"<MTLCommandBuffer>"16@"<MTLComputeCommandEncoder>"24Q32Q40@"<MTLBuffer>"48r^{?=Q[4I][4I]I}56@"<MTLBuffer>"64r^{?=Q[4I][4I]I}72@"<MTLBuffer>"80r^{?=Q[4I][4I]I}88r^{?=QQQQQQ}96@"<MTLBuffer>"104Q112
Q132@0:8@16@24Q32Q40@48r^{?=Q[4I][4I]I}56@64r^{?=Q[4I][4I]I}72@80r^{?=Q[4I][4I]I}88@96r^{?=Q[4I][4I]I}104B112@116Q124
Q140@0:8@16@24Q32Q40@48r^{?=Q[4I][4I]I}56@64r^{?=Q[4I][4I]I}72@80r^{?=Q[4I][4I]I}88@96r^{?=Q[4I][4I]I}104r^{?=QQQQQQ}112B120@124Q132
Q132@0:8@"<MTLCommandBuffer>"16@"<MTLComputeCommandEncoder>"24Q32Q40@"<MTLBuffer>"48r^{?=Q[4I][4I]I}56@"<MTLBuffer>"64r^{?=Q[4I][4I]I}72@"<MTLBuffer>"80r^{?=Q[4I][4I]I}88@"<MTLBuffer>"96r^{?=Q[4I][4I]I}104B112@"<MTLBuffer>"116Q124
Q140@0:8@"<MTLCommandBuffer>"16@"<MTLComputeCommandEncoder>"24Q32Q40@"<MTLBuffer>"48r^{?=Q[4I][4I]I}56@"<MTLBuffer>"64r^{?=Q[4I][4I]I}72@"<MTLBuffer>"80r^{?=Q[4I][4I]I}88@"<MTLBuffer>"96r^{?=Q[4I][4I]I}104r^{?=QQQQQQ}112B120@"<MTLBuffer>"124Q132
@136@0:8{MPSPluginNDArrayConvolutionSizes=[3Q]}16Q40Q48{MPSPluginNDArrayConvolutionSizes=[3Q]}56{MPSPluginNDArrayConvolutionSizes=[3Q]}80Q104Q112Q120I128I132
{MPSPluginNDArrayConvolutionSizes=[3Q]}16@0:8
{MPSPluginNDArrayConvolutionSizes="size"[3Q]}
i16@0:8
@40@0:8@16@24@32
@52@0:8@16@24@32^@40B48
v64@0:8@16@24@32@40@48@56
v24@0:8r^{MPSScaleTransform=dddd}16
r^{MPSScaleTransform=dddd}16@0:8
{MPSScaleTransform="scaleX"d"scaleY"d"translateX"d"translateY"d}
^{MPSScaleTransform=dddd}
@28@0:8@16i24
@44@0:8@16Q24i32B36B40
^{NDArraySrcInfo=Q}
v40@0:8@16@24@32
v52@0:8@16@24@32@40I48
@"MPSNDArray"40@0:8@"<MTLCommandBuffer>"16@"MPSNDArrayDescriptor"24@"MPSKernel"32
@48@0:8@16@24@32@40
{?=[16q]}24@0:8Q16
Q24@0:8Q16
{?=[16Q]}24@0:8Q16
v56@0:8^@16@24@32@40Q48
v48@0:8^@16@24@32@40
@"<MPSNDArrayAllocator>"
@44@0:8@16@24^@32B40
@32@0:8@16^Q24
v72@0:8@16@24@32@40@48@56@64
@"MPSMatrixDecompositionLU"
@36@0:8@16Q24i32
@"NSArray"
@56@0:8@16@24Q32^Q40@48
@64@0:8@16@24@32Q40^Q48@56
B56@0:8^v16@24^{MPSNDArrayDataTensorDescriptor=QQQQQI}32^{MPSNDArrayDataTensorDescriptor=QQQQQI}40^{MPSNDArrayWeightsTensorDescriptor=QQQQQI}48
{MPSNDArrayConvolutionOffsets=[2q]}16@0:8
v32@0:8{MPSNDArrayConvolutionOffsets=[2q]}16
{MPSNDArrayConvolutionOffsets="offset"[2q]}
@"MPSExternalNDArrayBinary"
@"MPSExternalNDArrayBinaryGradient"
{MPSNDArrayStencilOffsets_s=[4q]}16@0:8
v48@0:8{MPSNDArrayStencilOffsets_s=[4q]}16
{MPSNDArrayStencilSizes_s=[4Q]}16@0:8
v48@0:8{MPSNDArrayStencilSizes_s=[4Q]}16
{MPSNDArrayStencilOffsets_s="offsets"[4q]}
{MPSNDArrayStencilSizes_s="sizes"[4Q]}
@60@0:8@16{MPSNDArrayPoolingSizes_s=[4Q]}24i56
@64@0:8@16{MPSNDArrayPoolingSizes_s=[4Q]}24i56i60
{MPSNDArrayPoolingSizes_s=[4Q]}16@0:8
{MPSNDArrayPoolingOffsets_s=[4q]}16@0:8
v48@0:8{MPSNDArrayPoolingOffsets_s=[4q]}16
v48@0:8{MPSNDArrayPoolingSizes_s=[4Q]}16
{MPSNDArrayPoolingSizes_s="sizes"[4Q]}
{MPSNDArrayPoolingOffsets_s="offsets"[4q]}
@64@0:8@16{MPSNDArrayPoolingSizes_s=[4Q]}24i56B60
@(#)PROGRAM:MPSNDArray  PROJECT:MPS-1
St12out_of_range
St12length_error
St9bad_alloc
St20bad_array_new_length
St9exception
St11logic_error
compute_histogram
scatter_histogram
Source and destination must have same data type.
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArraySort.mm
"-test MPSNDArraySortTest -srcShapes [%u,%u,%u,%u] -dstShapes [%u,%u,%u,%u] -srcDataTypes %s -dstDataTypes %s -axis %d %s"
-descending
%@" Axis = %lu. This class only supports axis = 0, 1, 2, 3
v16@?0@"<MTLCommandBuffer>"8
_MPSCommandBufferRetainListKey
"-test MPSNDArrayArgSortTest -srcShapes [%u,%u,%u,%u] -dstShapes [%u,%u,%u,%u] -srcDataTypes %s -dstDataTypes %s -axis %d %s"
stride       = ( %2lu, %2lu, %2lu )
offset       = ( %2d, %2d, %2d  )
dilationRate = ( %2lu, %2lu, %2lu  )
channelAxis = %d
%@%u
depthwiseConv3d
depthwiseConv3d_gradBackProp
depthwiseConv3d_gradWeights_init
depthwiseConv3d_gradWeights_finalize
depthwiseConv3d_cFirst
depthwiseConv3d_gradBackProp_cFirst
depthwiseConv3d_gradWeights_init_cFirst
depthwiseConv3d_gradWeights_finalize_cFirst
depthwiseConv3d_TGM
depthwiseConv_3x3
MPSNDArrayDWConv.channelAxis
MPSNDArrayDWConv.offsets
MPSNDArrayDWConv.strides
MPSNDArrayDWConv.dilationRates
[%@ encode...] channelAxis: %lu should be < 4
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayDepthwiseConvolution.mm
[%@ encode...] First input fc count (channelAxis) == %d, should match destination fc count == %d
"-test MPSNDArrayDepthwiseConv3DTest -srcShapes [%u,%u,%u,%u,%u] [%u,%u,%u,%u] -dstShapes [%u,%u,%u,%u,%u] -srcDataTypes %s %s -dstDataTypes %s -cAxis %u -strides [1,%lu,%lu,%lu] -dilationRates [1,%lu,%lu,%lu] 
-runMode forward 
vector
 -srcTranspose 
 -dstTranspose 
%lu 
[%u,%u] 
[%@ encode...] First input fc count (channelAxis) == %d, should match source gradient fc count == %d
[%@ encode...] First input shape == ( %3d, %3d, %3d, %3d ) should match destination gradient shape == ( %3d, %3d, %3d, %3d )
[%@ encode...] Second input shape == ( %3d, %3d, %3d, %3d ) should match destination gradient shape == ( %3d, %3d, %3d, %3d )
-runMode weightGrad 
A and B index not found.
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayMatrixMultiplication.mm
Matrix Multiply: M=%lu, N=%lu, K=%lu, Batch Size: %lu, transposeA=%d, transposeB=%d, A Datatype: %s, B Datatype: %s C Datatype: %s
Matrix Multiply: f16Ops=%f, f32Ops=%f, BytesRead=%f, BytesWritten=%f, OpsPerByte=%f
More than 3 sources are passed to kernelDAG for NDArrayMatrixMultiplication
alpha
beta
binaryCoreOp
alphaGemm
betaC
result
MatMul autotuning is undefined for this device
Gradient requested for source %lu.  Gradient may only be requested for input arrays 0 or 1.
MPSNDArrayMatMulTest
basic_string
NDArrayMatrixMultiplyNNA14
NDArrayMatrixMultiplyNNA14_EdgeCase
NDArrayMatrixMultiplyA16
NDArrayMatrixMultiplyReduction
NDArrayVectorMatrixMultiply
Invalid tile size
ArrayMultiplyTTLinking
ArrayMultiplyNTLinking
ArrayMultiplyTNLinking
ArrayMultiplyNNLinking
Internal error: aliasing of sliced NDArray should always succeed
ArrayMultiplyNN
ArrayMultiplyNT
ArrayMultiplyTN
ArrayMultiplyTT
MPS_MATMUL_TILEM
MPS_MATMUL_TILEN
MPS_MATMUL_TILEK
MPS_MATMUL_TGSIZE
MPS_MATMUL_TGMEMA
MPS_MATMUL_TGMEMB
v8@?0
MPSNDArrayMatrixMultiplication.alpha
MPSNDArrayMatrixMultiplication.beta
MPSNDArrayMatrixMultiplicationGradient.alpha
MPSNDArrayMatrixMultiplicationGradient.beta
ndArrayMathTernary
ndArrayMathTernaryGradient
MPSNDArrayMath.opType
Destination array must have type Float32 or Int32
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayGatherND.mm
gatherND_base
gatherND_slices
gatherNDGradient_base
gatherNDGradient_slices
ScatterND kernel does not support linking, virtual sources and physical sources must match, %lu != %lu
All inputs must have rank larger than number of batch dimensions
All inputs must match in shape along batch dimensions, inputs do not match along batch dimension %lu
Rank of updates array (%lu) must be greater than or equal to inner-most dimension of indices array (%lu)
Rank of destination array (%lu) must equal number of outer dimensions in index array (%lu) + rank of slice to update (%lu)
Shape of updates array inner dimensions must match destination array inner dimensions. updates.shape[%lu] (%lu) != destination.shape[%lu] (%lu)
Shape of destination array outer dimensions must match indices array outer dimensions. destination.shape[%lu] (%lu) != destination.shape[%lu] (%lu)
Rank of destination array (%lu) must be greater than or equal to inner-most dimension of indices array (%lu)
Rank of updates array (%lu) must equal number of outer dimensions in index array (%lu) + rank of slice to update (%lu)
Shape of gradient array inner dimensions must match destination array inner dimensions. gradient.shape[%lu] (%lu) != destination.shape[%lu] (%lu)
Shape of updates array outer dimensions must match indices array outer dimensions. gradient.shape[%lu] (%lu) != destination.shape[%lu] (%lu)
topk
topkv
topk_grad
topkv_grad
topk_multidestination
topkv_multidestination
topk_grad_multidestination
topkv_grad_multidestination
MPSNDArrayTopK.findIndices
MPSNDArrayTopK.K
destination tensor axis length insufficient
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayTopK.mm
destination values and indices axis length mismatch
ndArrayMathUnary
ndArrayMathUnaryGradient
padArrayData
ndArrayPadGradient
%@[%u][%u]
MPSNDArrayPad.paddingSize
MPSNDArrayPad.edgeMode
MPSNDArrayPad.constantValue
edgeMode %u is not supported
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayPad.mm
NDArrayLocalConvolution
NDArrayLocalConvolutionDataGradient
NDArrayLocalConvolutionWeightGradient
MPSNDArrayLocalConvolution.dataFormat
MPSNDArrayLocalConvolution.kernelsizesX
MPSNDArrayLocalConvolution.kernelsizesY
MPSNDArrayLocalConvolution.kDilationRateX
MPSNDArrayLocalConvolution.kDilationRateY
format must be NCHW or NHWC
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayLocalConvolution.mm
input rank (%u) must be 4
weights rank (%u) must be the same as the input (%u)
batch size of weights and input must be the same
kernel size must be smaller than (256 x 256)
weight image size (%u, %u) must match input image size (%u, %u)
weight must have %u x %u = %u channels (number of elements in the kernel)
incoming gradient rank (%u) must be the same as the input (%u)
incoming gradient shape doesn't match input shape
NDArray objects with dimensions > %lu provided.
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayStridedSlice.mm
slice1DArrayData
expand1DArrayData
ndArrayHammingDistance
ndArrayHammingDistance_tgMem
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayHammingDistance.mm
Only rank 5 convolution supported
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayConvolution3D.mm
not enought input channels in filter
not enought output channels in filter
source and destination batch size not matching
A, B indices not found.
Source and gradient batch size must match
input gradient and gradient with weights dimension mismatch
Source and gradient with weights dimension mismatch
Convolution3D: N=%lu, C=%lu, D=%lu, H=%lu, W=%lu, kD=%lu, kH=%lu, kW=%lu, O=%lu, matrixM=%lu, matrixN=%lu, matrixK=%lu, A Datatype: %s, B Datatype: %s C Datatype: %s
Convolution3D: f16Ops=%f, f32Ops=%f, BytesRead=%f, BytesWritten=%f, OpsPerByte=%f
ndArrayConvolution3D
ndArrayConvolution3DGradientWithWeights
MPSNDArrayConvolution3DTest
-dataFormat 
NCDHW
NDHWC
-weightsFormat 
OIDHW
DHWIO
-kernelSizes \[
-strides \[1,
-strides \[
, 1\] 
-dilationRates \[1,
-dilationRates \[
-packed 3 
-explicitPadding \[0,0,
MPSNDArrayConvolution3DDGradientInputTest
MPSNDArrayConv3DGradientWeightsTest
ndArraySoftmaxBase
ndArraySoftmax_axis0
ndArraySoftmax_axis1
ndArraySoftmax_axis2
ndArraySoftmaxGradientBase
MPSNDArraySoftMax.axis
Error: axis reduction failed
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArraySoftMax.mm
tileArrayData
ndArrayTileGradient
MPSNDArrayTile.multiple
MPSNDArrayCropResize.resizeHeight
MPSNDArrayCropResize.resizeWidth
MPSNDArrayCropResize.normalizeCoordinates
MPSNDArrayCropResize.spatialScale
MPSNDArrayCropResize.resampleMode
MPSNDArrayCropResize.samplingMode
MPSNDArrayCropResize.coordinateMode
cropResize_impl
boxesTensor must be a 2D tensor of shape [num_boxes, 4]
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayCropResize.mm
boxIndicesTensor must be a 1D tensor of shape [num_boxes]
boxIndicesTensor must be of type MPSDataTypeInt32
destTensor must be a 4D tensor of shape [num_boxes, channels, resizeHeight, resizeWidth]
initializeConstant
initializeIdentityMatrix
MPSNDArrayInitialization.constantValue
Error: Invalid MPSNDArrayRandomStateDescriptor algorithm specified
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayRandom.mm
MPSNDArrayRandomStateDescriptorState
MPSNDArrayRandomStateDescriptorAlgorithm
ndArrayRandomStatePhiloxUpdate
MPSNDArrayRandomStateCounterStride
MPSNDArrayRandomStateSkipElements
MPSNDArrayRandomStateIncrementKey
ndArrayRandom
MPSNDArrayRandomUniformMinimum
MPSNDArrayRandomUniformMaximum
MPSNDArrayRandomUniformMinimumInteger
MPSNDArrayRandomUniformMaximumInteger
MPSNDArrayRandomTruncatedNormalMean
MPSNDArrayRandomTruncatedNormalStandardDeviation
MPSNDArrayRandomTruncatedNormalMinimum
MPSNDArrayRandomTruncatedNormalMaximum
MPSNDArrayRandomTruncatedNormalSamplingMethod
MPSNDArrayRandomNormalMean
MPSNDArrayRandomNormalStandardDeviation
MPSNDArrayRandomNormalSamplingMethod
Error: Invalid result MPSDataType, NDArrayRandom supports MPSDataTypeFloat16, MPSDataTypeFloat32, MPSDataTypeInt32, and MPSDataTypeInt64
Error: Invalid result MPSDataType, NDArrayRandom supports MPSDataTypeFloat16, MPSDataTypeFloat32, and MPSDataTypeInt32.
NDArrayGridSample
GridSampleClearAccumulationBuffer
NDArrayGridSampleInputGradient
NDArrayGridSampleGradientFinish
MPSNDArrayGridSample.samplingMode
MPSNDArrayGridSample.nearestMode
MPSNDArrayGridSample.dataFormat
MPSNDArrayGridSample.paddingMode
MPSNDArrayGridSample.relativeCoords
MPSNDArrayGridSample.normalizeCoords
MPSNDArrayGridSample.alignCorners
MPSNDArrayGridSample.constantValue
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayGridSample.mm
coordinates rank (%u) must be 4
batch size of coordinates and input must be the same
coordinates size (%u, %u) must match motion vector size (%u, %u)
coordinates must have 2 channels but has %u
coordinates size (%u, %u) must match input gradient size (%u, %u)
ndArrayNeuron
ndArrayNeuronGradient
MPSNDArrayNeuron.opType
ndArrayResample
ndArrayResampleGradient
MPSNDArrayResampleScaleX
MPSNDArrayResampleScaleY
MPSNDArrayResampleTranslateX
MPSNDArrayResampleTranslateY
MPSNDArrayResampleModeKey
MPSNDArrayResampleDataFormatKey
MPSNDArrayResampleNearestModeKey
MPSNDArrayResampleGradientScaleX
MPSNDArrayResampleGradientScaleY
MPSNDArrayResampleGradientTranslateX
MPSNDArrayResampleGradientTranslateY
MPSNDArrayResampleGradientModeKey
MPSNDArrayResampleGradientDataFormatKey
MPSNDArrayResampleGradientNearestModeKey
Error: Resampling only supported in 2D
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayResample.mm
Error: source and destination channels mismatch
Error: source and destination batch size mismatch
Scan gradient operations are not yet supported.
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayScan.mm
scan_add
scan_mul
scan_max
scan_min
Scan gradient pass is only supported for Sum
Prefix linking not supported by PreG13 kernels. Falling back to generic implementation
Source and weights index not found.
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayConvolutionPreG13.mm
Only NCHW/NHWC data format supported for source by PreG13 kernels. Falling back to generic implementation
Optimal parameter set not found in PreG13 table
Optimal parameter set found in PreG13 table
Parameters: [nip=%d,Nop=%d,nop=%d,P=%d,C=%d,Pth=%d,Oth=%d]
Only FP32 or FP16 convolution supported
Only FP2 or FP16 convolution supported
Only NHWC/NCHW formats are supported
Only rank 4 convolution supported
not enought taps in filter
source slice doesn't have enough feature channels
destination slice doesn't have enough feature channels
ndArrayConvolution2D_PreG13
MPS_AUTO_TUNING_PARAMETERS
ndArrayMathBinary
ndArrayMathBinaryGradient
[%@ %@] Error, source count must be at least 1
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayMultiaryKernel.mm
[%@ %@] Error, source count is 0 for initializers.
[%@ %@] Error, destination count must be at least 1
MultiaryMultiDestinationNDArrayBase.srcCount
MultiaryMultiDestinationNDArrayBase.dstCount
[%@ %@] Failed: unsupported file version.
Active destination NDArray at index %lu not provided.
created by %@
MultiaryNDArrayBase.srcCount
MultiaryNDArrayBase.ac
MultiaryNDArrayBase.oc
[%@ %@] Error: source index %lu an invalid index.  (Source count = %lu)
Logging Unimplemented
placeholder
nullaryCoreOp
unaryCoreOp
ternaryCoreOp
quartaryCoreOp
Kernel sources > 4, means we need to add another kernelDAG coreOp, file a radar please
Error: Invalid KernelDAG, Number of core ops in the DAG should always be 1
Error: Invalid KernelDAG, expectedVirtualSources == DAG->_coreOps->at(0)->_inputs->size() failed, which means the coreOp and the kernel expected virtual sourceCount don't match
Error: Invalid KernelDAG, expectedPhysicalSources == DAG->_placeholderOps->size() failed, which means the DAG->_placeholderOps->size() and the kernel expected physical sources don't match
Error: Invalid KernelDAG, equalShape for source (i = %lu) failed
Error: Invalid KernelDAG, inputArray.dataType == DAG->_placeholderOps->at(i)->_outputs->at(0)->_dType (i = %lu) failed
Error: Invalid KernelDAG, equalShape for destination failed
Error: Invalid KernelDAG, destination.dataType == kernelDAGObject.finalOp->_outputs->at(0)->_dType failed
[%@ encodeToCommandBuffer:sourceArrays:resultState:outputStateIsTemporary] Unable to create MPSNDArray for destination.  Encode failed.
[%@ encodeToCommandBuffer:sourceArrays:sourceGradient:gradientState] Unable to create MPSNDArray for destination.  Encode failed.
-test 
-srcShapes 
-srcSliceLengths 
-srcSliceOffsets 
-srcTranspose 
-srcDataTypes 
-dstShapes 
-dstSliceLengths 
-dstSliceOffsets 
-dstDataTypes 
-dag 
MPS_SHADER_PROFILING
Error: Can not decode. Unable to find class implementation for "%@".
/Library/Caches/com.apple.xbs/Binaries/MetalPerformanceShaders_Sim/install/Symbols/BuiltProducts/MPSCore.framework/PrivateHeaders/Internal/MPSCoreInternal.h
Broadcasting failed source %lu, dimension %hhu is not either 1 or sameSize as other sources
MPSNDArrayMath.sourceGradient
COREOP:
v32@?0@"<MTLComputeCommandEncoder>"8@"<MTLCommandBuffer>"16@"<MTLBuffer>"24
bandPartKernel
MPSNDArrayBandPart.numLower
MPSNDArrayBandPart.numUpper
Found exact match in table
Found match in table with tile parameters
No match found. Falling to default
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayConvolutionAMD.mm
Source and filter input channels mismatch
Gradient and filter output channel mismatch
destination kernel width and filter kernel width mismatch
destination kernel output channel mismatch
destination kernel input channel mismatch
source and gradient datatype must match. both should be either fp32 or fp16
destination datatype must be fp32
Source tensor and ndArray input channels mismatch
Source tensor and ndArray width mismatch
Source tensor and ndArray height mismatch
Source tensor and ndArray batch size mismatch
Gradient tensor and ndArray input channels mismatch
Gradient tensor and ndArray width mismatch
Gradient tensor and ndArray height mismatch
Gradient tensor and ndArray batch size mismatch
Weights tensor and ndArray output channel mismatch
Weights tensor and ndArray input channel mismatch
Weights tensor and ndArray kernel width mismatch
Weights tensor and ndArray kernel height mismatch
Internal kernel parameter selection error.
AMDGradientWithWeights::ndArrayConvolution2DGradientWithWeightsAMD
Internal error: threads being launched more than kernel can handle
ndArrayConvolution2DGradientWithWeightsReduction
Prefix linking not supported by MPS AMD kernels. Falling back to generic implementation
Only NCHW/NHWC data format supported for source. Falling back to generic implementation
Only OIHW weights format is supported with NHWC data format. Falling back to generic implementation
Slicing not supported by AMD kernel. Falling back to generic implementation
Forcing direct convolution
Both source and weights should be same dataType
optimal parameter set found
optimal parameter set not found
ndArrayWinogradAMD_NCHW
AMDConvolution::ndArrayConvolution2DAMD_NHWC
AMDConvolution::ndArrayConvolution2DAMD_NCHW
MPS_AUTO_TUNING_GRADIENT_PARAMETERS
MPS_DIRECT_CONVOLUTION
structuredSparse_2_4_1d
ArrayMatrixMultiplicationDenseSparse
ArrayMatrixMultiplicationSparseDense
ArrayMatrixMultiplicationSparseTransposeDense
clearBuffer
MPSNDArrayMatrixMultiplicationSparse.alpha
MPSNDArrayMatrixMultiplicationSparse.beta
Reduction: f16Ops=%f, f32Ops=%f, BytesRead=%f, BytesWritten=%f, OpsPerByte=%f
reduce_multiple_passes_min_propagate_NaN
reduce_multiple_passes_max_propagate_NaN
reduce_multiple_passes_min
reduce_multiple_passes_max
reduce_multiple_passes_add
reduce_multiple_passes_mul
reduce_multiple_passes_all
reduce_multiple_passes_any
reduce_argmin
reduce_argmax
reduce_multiple_passes_axes_min_propagate_NaN
reduce_multiple_passes_axes_max_propagate_NaN
reduce_multiple_passes_axes_min
reduce_multiple_passes_axes_max
reduce_multiple_passes_axes_add
reduce_multiple_passes_axes_mul
reduce_multiple_passes_axes_all
reduce_multiple_passes_axes_any
reduce_multiple_passes_add_gradient_float32_float32
MPSNDArrayReduction.axis
MPSNDArrayReduction.operation
MPSNDArrayReduction.axes
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayReduction.mm
%@ %p "%@" Multiple axes specified for argmin/argmax reduction. This class only supports axis = 0, 1 or 2.
%@ %p "%@" Only datatypes supported are MPSDataTypeFloat32, MPSDataTypeFloat16, MPSDataTypeUInt32 and MPSDataTypeInt32
%@ %p "%@" This combination of data types is only supported for MPSNDArrayReduction where the operation is an argument minimum or maximum
%@ %p "%@" For a MPSDataTypeUInt32 source, detination must also be MPSDataTypeUInt32.
%@ %p "%@" For a MPSDataTypeInt32 source, detination must also be MPSDataTypeInt32.
%@ %p "%@" Axis = %lu. This class only supports axis = 0, 1 or 2.
%@ %p "%@" Only MPSDataTypeUInt32 or MPSDataTypeInt32 destinations are supported for Argument Reductions.
%@ %p "%@" Axis = %lu. This class only supports axis = 0, 1, 2 or 3.
MPSNDArrayReductionTest
 -axis 
%@ %p "%@" Only datatypes supported are MPSDataTypeFloat32, MPSDataTypeFloat16 and MPSDataTypeUInt32
%@ %p "%@" MPSNDArrayReductionTypeProduct is not supported in gradient filter.
%@ %p "%@" MPSNDArrayReductionTypeArgumentMax is not supported in gradient filter.
%@ %p "%@" MPSNDArrayReductionTypeArgumentMin is not supported in gradient filter.
nil `shape` parameter [reshapeWithCommandBuffer] %@.
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayIdentity.mm
nil `dimensionSizes` parameter [reshapeWithCommandBuffer] %@.
nil `sourceArray` param to [reshapeWithCommandBuffer] %@.
New volume: %lu should match old volume: %lu [reshapeWithCommandBuffer] %@.
New rank: %lu should match destination array number of dimensions: %lu [reshapeWithCommandBuffer] %@.
shape[%lu]: %u should match destination array slice length: %u [reshapeWithCommandBuffer] %@.
Identity: f16Ops=%f, f32Ops=%f, BytesRead=%f, BytesWritten=%f, OpsPerByte=%f
ndArrayIdentity
ndArrayIdentityInt
ndArrayIdentityUInt
ndArrayIdentityLong
ndArrayIdentityULong
ndArrayIdentityComplexF32
ndArrayIdentityTranspose
ndArrayIdentityIntTranspose
ndArrayIdentityUIntTranspose
ndArrayIdentityLongTranspose
ndArrayIdentityULongTranspose
ndArrayIdentityComplexF32Transpose
MPSNDArrayIdentityTest
houseTransform
qUpdateKernel
copyKernel
clearKernel
setIdentityKernel
NHWC data supported only with HWIO weights format. Falling back to generic implementation
NCHW data supported only with OHIW weights format. Falling back to generic implementation
NCHW + OIHW not optimized for AMD. Falling back to generic implementation
Only NCHW and NHWC data formats supported. Falling back to generic implementation
Linking not supported by G13 gradient with weights kernels. Falling back to generic implementation
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayConvolution.mm
Either source, gradient or destination is transposed. Falling back to generic implementation
Slicing on source not supported. Falling back to generic implementation
Slicing on gradient or gradient not supported. Falling back to generic implementation
Only Float32 convolution supported
input channels should be divisible by group
output channels should be divisible by group
Please initialize the %@ class with initWithDevice:ndArrayConvolution2DDescriptor
Convolution2D: N=%lu, C=%lu, H=%lu, W=%lu, kH=%lu, kW=%lu, O=%lu, matrixM=%lu, matrixN=%lu, matrixK=%lu, A Datatype: %s, B Datatype: %s C Datatype: %s
Convolution2D: f16Ops=%f, f32Ops=%f, BytesRead=%f, BytesWritten=%f, OpsPerByte=%f
Convolution2DGradientWithInput: N=%lu, C=%lu, H=%lu, W=%lu, kH=%lu, kW=%lu, O=%lu, matrixM=%lu, matrixN=%lu, matrixK=%lu, A Datatype: %s, B Datatype: %s C Datatype: %s
Convolution2DGradientWithInput: f16Ops=%f, f32Ops=%f, BytesRead=%f, BytesWritten=%f, OpsPerByte=%f
Convolution2DGradientWithWeights: N=%lu, C=%lu, H=%lu, W=%lu, kH=%lu, kW=%lu, O=%lu, matrixM=%lu, matrixN=%lu, matrixK=%lu, A Datatype: %s, B Datatype: %s C Datatype: %s
Convolution2DGradientWithWeights: f16Ops=%f, f32Ops=%f, BytesRead=%f, BytesWritten=%f, OpsPerByte=%f
ndArrayConvolution2D
ndArrayConvolution2DGradientWithWeights
MPSNDArrayConv2DTest
NCHW
NHWC
OIHW
HWIO
MPSNDArrayConvolution2D.kernelWidth
MPSNDArrayConvolution2D.kernelHeight
MPSNDArrayConvolution2D.inputChannels
MPSNDArrayConvolution2D.outputChannels
MPSNDArrayConvolution2D.strideInPixelsX
MPSNDArrayConvolution2D.strideInPixelsY
MPSNDArrayConvolution2D.groups
MPSNDArrayConvolution2D.dilationRateInX
MPSNDArrayConvolution2D.dilationRateInY
MPSNDArrayConvolution2D.channelMultiplier
MPSNDArrayConvolution2D.dataFormat
MPSNDArrayConvolution2D.weightsFormat
MPSNDArrayConvolution2D.offset0
MPSNDArrayConvolution2D.offset1
MPSNDArrayConv2DGradientInputTest
MPSNDArrayConvolution2D.kernelOffset0
MPSNDArrayConvolution2D.kernelOffset1
MPSNDArrayConv2DGradientWeightsTest
Specified axis (%lu) exceeds source number of dimensions (%lu).
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayGather.mm
Index array dimensionality (%lu) greater than 1 not currently supported.
gather1DArrayData
gatherGradient1DArrayData
MPSNDARRAY_DIRECT_CONVOLUTION
A14 Winograd Convolution: Only NHWC and NCHW data format and HWIO weights format supported by A14 direct kernels. Falling back to A14 direct implementation
A14 Winograd Convolution: Prefix linking not supported by A14 Winograd kernels. Falling back to A14 direct convolution implementation
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayConvolutionA14.mm
Only NHWC/NCHW data format supported for source by Winograd kernels. Falling back to generic implementation
A14 Winograd Convolution: Data parameters are not compatible with Winograd algorithm. Falling back to A14 direct implementation
A14 Direct Convolution: Only NHWC data format and HWIO weights format supported by A14 kernels. Falling back to preG13 implementation
Gradient with data of non unit stride not optimal with A14 kernel. Falling back to preG13 implementation
A14 Direct Convolution: Prefix linking not supported by A14 kernels. Falling back to preG13 implementation
Only NCHW/NHWC data format supported for source by A14 direct convolution kernels. Falling back to generic implementation
Input channels less than 4 should fall back to generic implementation
Outer product size less than 16 should fall back to generic implementation
Only NHWC is supported
not enough input channels in filter
not enough output channels in filter
not enough taps in filter
ndArrayConvolution2DA14
Found optimal kernel with batch size
Found optimal kernel without batch size
Did not find any match in table
ndArrayConvolution2DGradientWithWeightsA14
ndArrayConvWinogradBatched
ndArrayConvWinogradBatched_reducedTile
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayScatter.mm
scatterND_base
scatterNDSlices
scatterNDGradient_base
scatterNDGradientSlices
MPSNDArrayScatter.operation
MPSNDArrayScatter.batchDimensions
Rank of data array (%lu) must be of equal rank to destination array (%lu)
Shape of updates array outer dimensions must match indices array outer dimensions. updates.shape[%lu] (%lu) != destination.shape[%lu] (%lu)
Shape of data array must match destination array outer. data.shape[%lu] (%lu) != destination.shape[%lu] (%lu)
stride       = ( %2lu, %2lu, %2lu, %2lu  )
offset       = ( %2d, %2d, %2d, %2d  )
dilationRate = ( %2lu, %2lu, %2lu, %2lu  )
paddingConst = %f
4d Stencil: T=%u, D=%u, H=%u, W=%u, kT=%lu, kD=%lu, kH=%lu, kW=%lu, src0 Datatype: %s dest Datatype: %s
Stencil: f16Ops=%f, f32Ops=%f, BytesRead=%f, BytesWritten=%f, OpsPerByte=%f
ndArrayStencil
ReductionTypeMin
ReductionTypeMax
ReductionTypeMinPropagateNaN
ReductionTypeMaxPropagateNaN
ReductionTypeSum
ReductionTypeProduct
ReductionTypeArgumentMin
ReductionTypeArgumentMax
<UNKNOWN POOLING MODE - invalid object?>
PadMode_Zero
PadMode_Constant
PadMode_ClampToEdge
PadMode_Mirror
PadMode_MirrorWithEdge
PadMode_Periodic
PadMode_AntiPeriodic
MPSNDArrayStencil.offsets
MPSNDArrayStencil.strides
MPSNDArrayStencil.dilationRates
MPSNDArrayStencil.PadMode
MPSNDArrayStencil.ReductionMode
MPSNDArrayStencil.padConst
kernelSize   = ( %2lu, %2lu, %2lu, %2lu  )
stride       = ( %2lu, %2lu, %2lu, %2lu  )
offset       = ( %2d, %2d, %2d, %2d  )
dilationRate = ( %2lu, %2lu, %2lu, %2lu  )
4d Pooling: T=%u, D=%u, H=%u, W=%u, kT=%lu, kD=%lu, kH=%lu, kW=%lu, src0 Datatype: %s dest Datatype: %s
Pooling: f16Ops=%f, f32Ops=%f, BytesRead=%f, BytesWritten=%f, OpsPerByte=%f
MPSNDArrayPoolingMode_Max
MPSNDArrayPoolingMode_Avg_ZeroPad
MPSNDArrayPoolingMode_Avg_ShrinkToEdge
MPSNDArrayPoolingMode_L2Norm
MPSNDArrayPoolingMode_DilatedMax
MPSNDArrayPooling.kernelSizes
MPSNDArrayPooling.offsets
MPSNDArrayPooling.strides
MPSNDArrayPooling.dilationRates
MPSNDArrayPooling.poolingMode
AvgZeroPad
AvgShrinkToEdge
DilatedMax
L2Norm
Default
-test MPSNDArrayPoolingTest -srcShapes [%u,%u,%u,%u] -dstShapes [%u,%u,%u,%u] -srcDataTypes %s -dstDataTypes %s -strides [%u,%u,%u,%u] -kernelPooling [%u,%u,%u,%u] -dilation [%u,%u,%u,%u] -poolingMode %s
Error: Indices cannot be returned for pooling modes other than max pooling
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSNDArray/Kernels/MPSNDArrayPooling.mm
-test MPSNDArrayPoolingTest -srcShapes [%u,%u,%u,%u] -dstShapes [%u,%u,%u,%u] -srcDataTypes %s -dstDataTypes %s -strides [%u,%u,%u,%u] -kernelPooling [%u,%u,%u,%u] -offset [%u,%u,%u,%u] -poolingMode %s -gradient
MPSNDArrayPoolingMultiDestination.kernelSizes
MPSNDArrayPoolingMultiDestination.offsets
MPSNDArrayPoolingMultiDestination.strides
MPSNDArrayPoolingMultiDestination.dilationRates
MPSNDArrayPoolingMultiDestination.poolingMode
Error: Multi destination pooling kernel only supports max pooling modes
Error: Multi destination pooling kernel requires indices provided as second argument in gradient encode
Error: Multi destination pooling encode has no non-nil destinations.
Error: destination values and indices length mismatch along axis %lu
ndArrayPooling
ndArrayPooling_tgMem
ndArrayPooling_largeWindows
ndArrayPooling_tmpOutput
ndArrayPooling_tgMem_tmpOutput
ndArrayPooling_largeWindows_tmpOutput
ndArrayPooling_1dpass
ndArrayPooling_1dpass_tmpIn
ndArrayPooling_1dpass_tmpOut
ndArrayPooling_1dpass_tmpInOut
ndArrayPooling_1dpass_useSIMD
ndArrayPooling_1dpass_useSIMD_tmpIn
ndArrayPooling_1dpass_useSIMD_tmpOut
ndArrayPooling_1dpass_useSIMD_tmpInOut
ndArrayPooling_1dpass_vertical
ndArrayPooling_1dpass_vertical_tmpIn
ndArrayPooling_1dpass_vertical_tmpOut
ndArrayPooling_1dpass_vertical_tmpInOut
ndArrayPoolingGradient
ndArrayPrune
ndArrayPruneGradient
MPSNDArraySort
MPSNDArrayArgSort
MPSNDArraySolverLU
MPSNDArrayDepthwiseConvolutionKernel
MPSNDArrayMatrixMultiplication
MPSNDArrayMatrixMultiplicationGradient
MPSNDArrayMathTernaryKernel
MPSNDArraySelect
MPSNDArrayClamp
MPSNDArrayMathTernaryPrimaryGradient
MPSNDArraySelectPrimaryGradient
MPSNDArrayClampPrimaryGradient
MPSNDArrayMathTernarySecondaryGradient
MPSNDArraySelectSecondaryGradient
MPSNDArrayClampSecondaryGradient
MPSNDArrayMathTernaryTertiaryGradient
MPSNDArraySelectTertiaryGradient
MPSNDArrayClampTertiaryGradient
MPSNDArrayGatherND
MPSNDArrayGatherNDGradient
MPSNDArrayTopK
MPSNDArrayTopKGradient
MPSNDArrayTopKMultiDestination
MPSNDArrayMathUnaryKernel
MPSNDArrayExponent
MPSNDArrayExponentBase2
MPSNDArrayExponentBase10
MPSNDArrayLogarithm
MPSNDArrayLogarithmBase2
MPSNDArrayLogarithmBase10
MPSNDArraySquare
MPSNDArraySquareRoot
MPSNDArrayReverseSquareRoot
MPSNDArrayReciprocal
MPSNDArrayAbsolute
MPSNDArrayNegative
MPSNDArraySign
MPSNDArraySignbit
MPSNDArrayCeil
MPSNDArrayFloor
MPSNDArrayRound
MPSNDArrayRint
MPSNDArraySin
MPSNDArrayCos
MPSNDArrayTan
MPSNDArraySinh
MPSNDArrayCosh
MPSNDArrayTanh
MPSNDArrayASin
MPSNDArrayACos
MPSNDArrayATan
MPSNDArrayASinh
MPSNDArrayACosh
MPSNDArrayATanh
MPSNDArrayNOT
MPSNDArrayIsInfinite
MPSNDArrayIsFinite
MPSNDArrayIsNaN
MPSNDArrayErf
MPSNDArrayMathUnaryGradient
MPSNDArrayExponentGradient
MPSNDArrayExponentBase2Gradient
MPSNDArrayExponentBase10Gradient
MPSNDArrayLogarithmGradient
MPSNDArrayLogarithmBase2Gradient
MPSNDArrayLogarithmBase10Gradient
MPSNDArraySquareGradient
MPSNDArraySquareRootGradient
MPSNDArrayReverseSquareRootGradient
MPSNDArrayReciprocalGradient
MPSNDArrayAbsoluteGradient
MPSNDArrayNegativeGradient
MPSNDArraySignGradient
MPSNDArraySignbitGradient
MPSNDArrayCeilGradient
MPSNDArrayFloorGradient
MPSNDArrayRoundGradient
MPSNDArrayRintGradient
MPSNDArraySinGradient
MPSNDArrayCosGradient
MPSNDArrayTanGradient
MPSNDArraySinhGradient
MPSNDArrayCoshGradient
MPSNDArrayTanhGradient
MPSNDArrayASinGradient
MPSNDArrayACosGradient
MPSNDArrayATanGradient
MPSNDArrayASinhGradient
MPSNDArrayACoshGradient
MPSNDArrayATanhGradient
MPSNDArrayNOTGradient
MPSNDArrayIsInfiniteGradient
MPSNDArrayIsFiniteGradient
MPSNDArrayIsNaNGradient
MPSNDArrayErfGradient
MPSNDArrayPadKernel
MPSNDArrayPadGradientKernel
MPSNDArrayLocalConvolution
MPSNDArrayStridedSlice
MPSNDArrayStridedSliceGradient
MPSNDArrayHammingDistanceKernel
MPSNDArrayConvolution3D
MPSNDArrayConvolution3DGradientWithInput
MPSNDArrayConvolution3DGradientWithWeights
MPSNDArraySoftMax
MPSNDArrayLogSoftMax
MPSNDArraySoftMaxGradient
MPSNDArrayLogSoftMaxGradient
MPSNDArrayTileKernel
MPSNDArrayTileGradientKernel
MPSNDArrayCropResize
MPSNDArrayInitialization
MPSNDArrayInitializationConstant
MPSNDArrayInitializationIdentity
MPSNDArrayInitializationRandomNormal
MPSNDArrayInitializationRandomUniform
MPSNDArrayInitializationTruncatedNormal
MPSNDArrayInitializationGlorotNormal
MPSNDArrayInitializationGlorotUniform
MPSNDArrayRandomStateDescriptor
NSCopying
NSSecureCoding
NSCoding
MPSNDArrayRandomState
MPSNDArrayRandom
MPSNDArrayRandomUniform
MPSNDArrayRandomTruncatedNormal
MPSNDArrayRandomNormal
MPSExternalNDArrayBinary
MPSExternalPluginBase
NSObject
MPSExternalNDArrayBinaryGradient
MPSPluginNDArrayConvolutionDescriptor
MPSNDArrayGridSample
MPSNDArrayBinaryKernel
MPSNDArrayBinaryPrimaryGradientKernel
MPSNDArrayBinarySecondaryGradientKernel
MPSNDArrayNeuronKernel
MPSNDArrayNeuronGeLU
MPSNDArrayNeuronGradient
MPSNDArrayNeuronGeLUGradient
MPSNDArrayResample
MPSNDArrayResampleGradient
MPSNDArrayScan
MPSNDArrayScanGradient
MPSNDArrayMathBinaryKernel
MPSNDArrayAddition
MPSNDArraySubtraction
MPSNDArrayMultiplication
MPSNDArrayDivision
MPSNDArrayModulo
MPSNDArrayPower
MPSNDArrayMinimum
MPSNDArrayMaximum
MPSNDArrayEqual
MPSNDArrayNotEqual
MPSNDArrayLessThan
MPSNDArrayLessThanOrEqualTo
MPSNDArrayGreaterThan
MPSNDArrayGreaterThanOrEqualTo
MPSNDArrayAND
MPSNDArrayOR
MPSNDArrayNAND
MPSNDArrayNOR
MPSNDArrayXOR
MPSNDArrayXNOR
MPSNDArrayATan2
MPSNDArrayMathBinaryPrimaryGradient
MPSNDArrayAdditionPrimaryGradient
MPSNDArraySubtractionPrimaryGradient
MPSNDArrayMultiplicationPrimaryGradient
MPSNDArrayDivisionPrimaryGradient
MPSNDArrayModuloPrimaryGradient
MPSNDArrayPowerPrimaryGradient
MPSNDArrayMinimumPrimaryGradient
MPSNDArrayMaximumPrimaryGradient
MPSNDArrayEqualPrimaryGradient
MPSNDArrayNotEqualPrimaryGradient
MPSNDArrayLessThanPrimaryGradient
MPSNDArrayLessThanOrEqualToPrimaryGradient
MPSNDArrayGreaterThanPrimaryGradient
MPSNDArrayGreaterThanOrEqualToPrimaryGradient
MPSNDArrayANDPrimaryGradient
MPSNDArrayORPrimaryGradient
MPSNDArrayNANDPrimaryGradient
MPSNDArrayNORPrimaryGradient
MPSNDArrayXORPrimaryGradient
MPSNDArrayXNORPrimaryGradient
MPSNDArrayATan2PrimaryGradient
MPSNDArrayMathBinarySecondaryGradient
MPSNDArrayAdditionSecondaryGradient
MPSNDArraySubtractionSecondaryGradient
MPSNDArrayMultiplicationSecondaryGradient
MPSNDArrayDivisionSecondaryGradient
MPSNDArrayModuloSecondaryGradient
MPSNDArrayPowerSecondaryGradient
MPSNDArrayMinimumSecondaryGradient
MPSNDArrayMaximumSecondaryGradient
MPSNDArrayEqualSecondaryGradient
MPSNDArrayNotEqualSecondaryGradient
MPSNDArrayLessThanSecondaryGradient
MPSNDArrayLessThanOrEqualToSecondaryGradient
MPSNDArrayGreaterThanSecondaryGradient
MPSNDArrayGreaterThanOrEqualToSecondaryGradient
MPSNDArrayANDSecondaryGradient
MPSNDArrayORSecondaryGradient
MPSNDArrayNANDSecondaryGradient
MPSNDArrayNORSecondaryGradient
MPSNDArrayXORSecondaryGradient
MPSNDArrayXNORSecondaryGradient
MPSNDArrayATan2SecondaryGradient
MPSNDArrayGradientState
MPSNDArrayMultiaryMultiDestinationBase
MPSNDArrayMultiaryMultiDestinationKernel
MPSNDArrayAllocator
MPSNDArrayMultiaryBase
MPSNDArrayMultiaryKernel
MPSNDArrayMultiaryGradientKernel
MPSNDArrayDecompositionLU
MPSNDArrayBandPart
MPSNDArrayMatrixMultiplicationSparse
MPSNDArrayReduction
MPSNDArrayReductionSum
MPSNDArrayReductionGradient
MPSNDArrayReductionSumGradient
MPSNDArrayIdentity
MPSNDArrayDecompositionQR
MPSNDArrayConvolution2DDescriptor
MPSNDArrayDepthwiseConvolution2DDescriptor
MPSNDArrayConvolution2D
MPSNDArrayConvolution2DGradientWithInput
MPSNDArrayConvolution2DGradientWithWeights
MPSNDArrayGather
MPSNDArrayGatherGradient
MPSNDArrayGatherGradientState
MPSNDArrayScatter
MPSNDArrayScatterGradient
MPSNDArrayStencilKernel
MPSNDArrayUnaryKernel
MPSNDArrayUnaryGradientKernel
MPSNDArrayPoolingKernel
MPSNDArrayPoolingMultiDestinationKernel
MPSNDArrayPrune
FanOut
TB,N,V_computeR
T@"<MPSNDArrayAllocator>",&,N,V_destinationArrayAllocator
TQ,R,N,V_groups
T@"NSNumber",R,N,V_constantValue
Tf,N,V_sparsity
TB,N,V_alignCorners
Tq,N,V_numLower
TB,N,V_descending
_FanOut
TB,N,V_findIndices
_encode
TB,N,V_normalizeCoordinates
_groups
TB,N,V_relativeCoordinates
_minimumInteger
TB,N,V_structuredSparse
_plugin
TB,R
_poolingStrides
TI,N,V_coordinateMode
_samplingMethod
TI,N,V_nearestMode
_stencilOffsets
TI,N,V_resampleMode
_strideInPixels
TI,N,V_samplingMode
arrayWithArray:
TI,R,N,V_algorithm
columns
TI,R,N,V_weightsFormat
copyToGradientState:sourceArrays:sourceStates:destinationArray:
TQ,N,V_FanIn
dilationRateInX
TQ,N,V_K
encodeToCommandBuffer:sourceArray:resultState:destinationArray:
TQ,N,V_batchDimensions
finalOp
TQ,N,V_counterStride
initWithDevice:axis:descending:
TQ,N,V_dilationRateInY
initWithDevice:minimum:maximum:
TQ,N,V_inputFeatureChannels
isProxy
TQ,N,V_kernelWidth
minimum
TQ,N,V_resizeHeight
offsets
TQ,N,V_skipElements
primaryEdgeMode
TQ,N,V_strideInPixelsX
release
TQ,R
setChannelAxis:
TQ,R,N,V_channelMultiplier
setDenseSparse:
TQ,R,N,V_inputFeatureChannels
setKernelSizes:
TQ,R,N,V_subPixelScaleFactor
setNearestMode:
Td,N,V_beta
setPruneMetric:
Tf,N,V_maximum
strideInPixelsX
Tf,N,V_minimum
strides
Tf,N,V_spatialScale
transposeSparse
FanIn
TB,N,V_computeQ
T#,R
TQ,N,V_edgeMode
T@"NSArray",C,N,V_axes
T^I,R,N,V_state
T@"NSString",R,C
Ti,N,V_poolingReturnIndicesMode
TB,N,V_denseSparse
Tq,N,V_numUpper
TB,N,V_exclusive
_coordinateMode
TB,N,V_incrementKey
_encodeGradient
TB,N,V_poolingGradientWithIndices
_maximumInteger
TB,N,V_reverse
_opType
TB,N,V_transposeSparse
_poolingOffsets
TB,R,N,V_computeGradient
_pruneStructure
TI,N,V_dataFormat
_scaleTransform
TI,N,V_poolingReturnIndicesDataType
_stencilStrides
TI,N,V_samplingMethod
_zeroFillKernel
TI,N,V_weightsFormat
batchDimensions
TI,R,N,V_dataFormat
computeGradient
TQ,N
dealloc
TQ,N,V_FanOut
dilationRateInY
TQ,N,V_axis
encodeToCommandBuffer:sourceArray:sourceGradient:gradientState:
TQ,N,V_channelAxis
initWithDevice:
TQ,N,V_dilationRateInX
initWithDevice:destinationDataType:seed:distributionDescriptor:
TQ,N,V_groups
initWithFormat:
TQ,N,V_kernelHeight
maximum
TQ,N,V_outputFeatureChannels
numberWithBool:
TQ,N,V_resizeWidth
paddingConstant
TQ,N,V_sparseRows
pushDebugGroup:
TQ,N,V_strideInPixelsY
reverse
TQ,R,N
setConvStrides:
TQ,R,N,V_edgeMode
setFindIndices:
TQ,R,N,V_outputFeatureChannels
setKernelWidth:
Td,N,V_alpha
setPaddingMode:
Td,N,V_constantValue
setResizeWidth:
Tf,N,V_mean
strideInPixelsY
Tf,N,V_paddingConstant
supportsGradientForSourceIndex:
Tf,N,V_standardDeviation
Tf,R,N
Tf,R,N,V_maximum
Tf,R,N,V_mean
Tf,R,N,V_minimum
Tf,R,N,V_standardDeviation
Ti,N,V_paddingMode
Ti,N,V_pruneMetric
Ti,N,V_pruneStructure
Ti,N,V_reductionMode
Ti,R,N,V_operation
Ti,R,N,V_poolingMode
Tq,N,V_maximumInteger
Tq,N,V_minimumInteger
Tr^{MPSScaleTransform=dddd},N,V_scaleTransform
T{?=[16Q]},N,V_dilationRates
T{?=[16Q]},N,V_kernelSizes
T{?=[16Q]},N,V_multiples
T{?=[16Q]},R,N
T{?=[16q]},N,V_offsets
T{?=[16q]},N,V_strides
T{?=[16q]},R,N
T{MPSNDArrayConv3dOffsets_s=[3q]},N
T{MPSNDArrayConv3dOffsets_s=[3q]},N,V_windowOffsets
T{MPSNDArrayConv3dSizes_s=[3Q]},N
T{MPSNDArrayConv3dSizes_s=[3Q]},N,V_convDilationRates
T{MPSNDArrayConv3dSizes_s=[3Q]},N,V_convStrides
T{MPSNDArrayConvolutionOffsets=[2q]},N
T{MPSNDArrayConvolutionSizes=[2Q]},N,V_dilationRates
T{MPSNDArrayConvolutionSizes=[2Q]},N,V_kernelSizes
T{MPSNDArrayConvolutionSizes=[2Q]},R,N
T{MPSNDArrayPaddingSize=[16[2Q]]},R,N,V_paddingSize
T{MPSNDArrayPoolingOffsets_s=[4q]},N,V_poolingOffsets
T{MPSNDArrayPoolingSizes_s=[4Q]},N,V_poolingDilationRates
T{MPSNDArrayPoolingSizes_s=[4Q]},N,V_poolingStrides
T{MPSNDArrayPoolingSizes_s=[4Q]},R,N,V_poolingKernelSizes
T{MPSNDArrayStencilOffsets_s=[4q]},N,V_stencilOffsets
T{MPSNDArrayStencilSizes_s=[4Q]},N,V_stencilDilationRates
T{MPSNDArrayStencilSizes_s=[4Q]},N,V_stencilStrides
T{MPSPluginNDArrayConvolutionSizes=[3Q]},R,N,V_dilationRates
T{MPSPluginNDArrayConvolutionSizes=[3Q]},R,N,V_kernelSizes
T{MPSPluginNDArrayConvolutionSizes=[3Q]},R,N,V_strides
_FanIn
_algorithm
_alignCorners
_alpha
_alphaBetaKernelDAGObject
_autoTuning
_autoTuningParams
_autoTuningTarget
_axes
_axis
_batchDimensions
_beta
_channelAxis
_channelMultiplier
_computeGradient
_computeQ
_computeR
_constantValue
_convDilationRates
_convStrides
_counterStride
_dataFormat
_defaultGradientDAG
_defaultKernelDAG
_denseSparse
_descending
_destinationArrayAllocator
_dilationRateInX
_dilationRateInY
_dilationRates
_disablePostfixReturnIndices
_distribution
_dstCount
_edgeMode
_encodeData
_exclusive
_findIndices
_forcePlugin
_generator
_identity
_incrementKey
_inputFeatureChannels
_kernelHeight
_kernelOffsets
_kernelSizes
_kernelWidth
_maximum
_mean
_minimum
_mlu
_mmul
_mslu
_multiples
_ndArrayIdentity
_nearestMode
_normalizeCoordinates
_numLower
_numUpper
_offsets
_operation
_outputFeatureChannels
_paddingConstant
_paddingMode
_paddingSize
_poolingDilationRates
_poolingGradientWithIndices
_poolingKernelSizes
_poolingMode
_poolingReturnIndicesDataType
_poolingReturnIndicesMode
_provenance
_pruneMetric
_reductionMode
_relativeCoordinates
_resampleMode
_resizeHeight
_resizeWidth
_reverse
_samplingMode
_scanKernel
_seed
_skipElements
_sourceGradientIndex
_sparseRows
_sparsity
_spatialScale
_srcCount
_srcInfo
_standardDeviation
_state
_stencilDilationRates
_strideInPixelsX
_strideInPixelsY
_strides
_structuredSparse
_subPixelScaleFactor
_transformStorage
_transposeSparse
_weightsFormat
_windowOffsets
addCompletedHandler:
addObject:
algorithm
alignCorners
allocWithZone:
alpha
array
arrayByAddingObject:
arrayForCommandBuffer:arrayDescriptor:kernel:
arrayViewWithCommandBuffer:descriptor:aliasing:
arrayWithCapacity:
arrayWithObjects:count:
autorelease
axes
axis
beta
buffer
cStringUsingEncoding:
channelAxis
channelMultiplier
class
commandQueue
computeQ
computeR
conformsToProtocol:
constantValue
containsValueForKey:
contents
convDilationRates
convStrides
coordinateMode
copy
copyWithZone:
copyWithZone:device:
count
countByEnumeratingWithState:objects:count:
counterStride
dataFormat
dataType
debugDescription
decodeBoolForKey:
decodeBytesForKey:returnedLength:
decodeDoubleForKey:
decodeFloatForKey:
decodeInt32ForKey:
decodeInt64ForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
defaultAllocator
denseSparse
descending
description
descriptor
descriptorWithDataType:dimensionCount:dimensionSizes:
descriptorWithDataType:shape:
destinationArrayAllocator
destinationArrayDescriptorForSourceArrays:sourceGradientIndex:
destinationArrayDescriptorForSourceArrays:sourceState:
destinationArrayDescriptorsForSourceArrays:sourceState:
destinationDataType
destinationGradientArrayDescriptorsForSourceArrays:sourceGradient:sourceState:
destinationGradientsSupported
destinationStrides
device
deviceMemoryBytesRead
deviceMemoryBytesWrite
dilationRates
dilationRatesForSourceIndex:
dimensionsNotToBeBroadcast
dimensionsToBeRetained
dispatchThreadgroups:threadsPerThreadgroup:
edgeMode
edgeModeAtSourceIndex:
encodeBool:forKey:
encodeBytes:length:forKey:
encodeDouble:forKey:
encodeFloat:forKey:
encodeGradientsToCommandBuffer:sourceArrays:sourceGradient:gradientState:
encodeGradientsToCommandBuffer:sourceArrays:sourceGradient:gradientState:destinationGradients:
encodeGradientsToCommandBuffer:sourceArrays:sourceGradient:gradientState:destinationGradients:kernelDAGObject:
encodeGradientsToCommandEncoder:commandBuffer:sourceArrays:sourceGradient:gradientState:destinationGradients:kernelDAGObject:
encodeInt32:forKey:
encodeInt64:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodePreProcessingToCommandEncoder:commandBuffer:sourceArrays:destinationArray:kernelDAGObject:
encodePrimaryGradientToCommandBuffer:encoder:options:pluginOptions:primaryBuffer:primaryInfo:secondaryBuffer:secondaryInfo:gradientBuffer:gradientInfo:destination:destinationInfo:accumulate:predicationBuffer:predicationOffset:
encodePrimaryGradientToCommandBuffer:encoder:options:pluginOptions:primaryBuffer:primaryInfo:secondaryBuffer:secondaryInfo:gradientBuffer:gradientInfo:destination:destinationInfo:padding:accumulate:predicationBuffer:predicationOffset:
encodeSecondaryGradientToCommandBuffer:encoder:options:pluginOptions:primaryBuffer:primaryInfo:secondaryBuffer:secondaryInfo:gradientBuffer:gradientInfo:destination:destinationInfo:accumulate:predicationBuffer:predicationOffset:
encodeSecondaryGradientToCommandBuffer:encoder:options:pluginOptions:primaryBuffer:primaryInfo:secondaryBuffer:secondaryInfo:gradientBuffer:gradientInfo:destination:destinationInfo:padding:accumulate:predicationBuffer:predicationOffset:
encodeToCommandBuffer:computeEncoder:destinationBuffer:destinationOffset:numEntries:stride:
encodeToCommandBuffer:destinationArray:
encodeToCommandBuffer:destinationDescriptor:
encodeToCommandBuffer:encoder:leftMatrix:rightMatrix:resultMatrix:
encodeToCommandBuffer:encoder:options:pluginOptions:primaryBuffer:primaryInfo:secondaryBuffer:secondaryInfo:destinationBuffer:destinationInfo:padding:predicationBuffer:predicationOffset:
encodeToCommandBuffer:encoder:options:pluginOptions:primaryBuffer:primaryInfo:secondaryBuffer:secondaryInfo:destinationBuffer:destinationInfo:predicationBuffer:predicationOffset:
encodeToCommandBuffer:primarySourceArray:secondarySourceArray:
encodeToCommandBuffer:primarySourceArray:secondarySourceArray:destinationArray:
encodeToCommandBuffer:primarySourceArray:secondarySourceArray:resultState:destinationArray:
encodeToCommandBuffer:primarySourceArray:secondarySourceArray:resultState:outputStateIsTemporary:
encodeToCommandBuffer:primarySourceArray:secondarySourceArray:sourceGradient:gradientState:
encodeToCommandBuffer:primarySourceArray:secondarySourceArray:sourceGradient:gradientState:destinationArray:
encodeToCommandBuffer:sourceArray:
encodeToCommandBuffer:sourceArray:destinationArray:
encodeToCommandBuffer:sourceArray:resultState:outputStateIsTemporary:
encodeToCommandBuffer:sourceArray:sourceGradient:gradientState:destinationArray:
encodeToCommandBuffer:sourceArrays:
encodeToCommandBuffer:sourceArrays:destinationArray:
encodeToCommandBuffer:sourceArrays:destinationArrays:
encodeToCommandBuffer:sourceArrays:resultState:destinationArray:
encodeToCommandBuffer:sourceArrays:resultState:destinationArray:kernelDAGObject:
encodeToCommandBuffer:sourceArrays:resultState:outputStateIsTemporary:
encodeToCommandBuffer:sourceArrays:sourceGradient:gradientState:
encodeToCommandBuffer:sourceArrays:sourceGradient:gradientState:destinationArray:
encodeToCommandBuffer:sourceArrays:sourceGradient:gradientState:destinationArray:kernelDAGObject:
encodeToCommandEncoder:commandBuffer:sourceArrays:destinationArray:
encodeToCommandEncoder:commandBuffer:sourceArrays:destinationArrays:
encodeToCommandEncoder:commandBuffer:sourceArrays:destinationArrays:activeDestinationMask:
encodeToCommandEncoder:commandBuffer:sourceArrays:destinationArrays:status:
encodeToCommandEncoder:commandBuffer:sourceArrays:resultState:destinationArray:kernelDAGObject:
encodeToCommandEncoder:commandBuffer:sourceArrays:sourceGradient:gradientState:destinationArray:kernelDAGObject:
encodeToCommandEncoder:commandBuffer:sourceMatrix:resultMatrix:pivotIndices:status:
encodeToCommandEncoder:commandBuffer:sourceMatrix:rightHandSideMatrix:pivotIndices:solutionMatrix:
encodeWithCoder:
endEncoding
exclusive
expectedVirtualSourceCount
exportDataWithCommandBuffer:computeEncoder:toBuffer:destinationDataType:offset:rowStrides:lengths:numLengths:flatteningLevel:
exportStateToNDArray:
findIndices
firstGradientDestinationFromDestinationGradients:outMaxNumDimensions:
float16Ops
float32Ops
floatValue
getShape
getShapeVector
graph
groups
hash
incrementKey
init
initPhiloxStateDescriptorWithCounterLow:counterHigh:key:
initPhiloxStateDescriptorWithSeed:
initWithArray:
initWithBuffer:descriptor:
initWithBuffer:offset:descriptor:
initWithBytes:length:encoding:
initWithCapacity:
initWithCoder:
initWithCoder:device:
initWithCommandBuffer:withDispatchType:
initWithDevice:K:
initWithDevice:K:computeGradient:
initWithDevice:K:findIndices:
initWithDevice:axis:
initWithDevice:axis:operation:
initWithDevice:axis:operation:exclusive:reverse:
initWithDevice:constantValue:
initWithDevice:descriptor:
initWithDevice:edgeMode:constantValue:paddingSize:
initWithDevice:edgeMode:paddingSize:
initWithDevice:kernelSizes:poolingMode:
initWithDevice:kernelSizes:poolingMode:computeGradient:
initWithDevice:kernelSizes:poolingMode:returnIndicesMode:
initWithDevice:mean:standardDeviation:
initWithDevice:mean:standardDeviation:seed:
initWithDevice:minimum:maximum:seed:
initWithDevice:minimumInteger:maximumInteger:
initWithDevice:ndArrayConvolution2DDescriptor:
initWithDevice:operation:
initWithDevice:rows:columns:
initWithDevice:seed:
initWithDevice:sourceCount:
initWithDevice:sourceCount:destinationCount:
initWithDevice:sourceCount:sourceGradientIndex:
initWithDevice:transpose:order:numberOfRightHandSides:
initWithDevice:transposeLeft:transposeRight:resultRows:resultColumns:interiorColumns:alpha:beta:
initWithKernelDAG:finalOp:
initWithKernelSizes:inputFeatureChannels:outputFeatureChannels:strides:dilationRates:groups:channelMultiplier:subPixelScaleFactor:dataFormat:weightsFormat:
initWithResource:
initWithSourceCount:
inputFeatureChannels
inputTensorAtIndex:
isDestinationActiveAtIndex:
isEqual:
isKindOfClass:
isMemberOfClass:
kernelDAGObjectSetup:sourceArrays:sourceGradient:destination:
kernelDimensionalityForDestinationArray:
kernelDimensionalityForSourceArrays:
kernelDimensionalityForSourceArrays:destinationArrays:kernelDAGObject:
kernelHeight
kernelOffsets
kernelSizes
kernelSizesForSourceIndex:
kernelWidth
label
length
lengthOfDimension:
libraryInfo:
matrixDescriptorWithRows:columns:matrices:rowBytes:matrixBytes:dataType:
matrixDescriptorWithRows:columns:rowBytes:dataType:
maxBatchSize
maxSupportedDimensionsForSourceArrays:destinationArray:
maxTotalThreadsPerThreadgroup
maximumInteger
mean
minimumInteger
multiples
mutableCopy
nearestMode
newBufferWithLength:options:
normalDistributionDescriptorWithMean:standardDeviation:
normalDistributionDescriptorWithMean:standardDeviation:minimum:maximum:
normalizeCoordinates
null
numLower
numUpper
numberOfDimensions
numberOfInputTensors
numberOfOutputTensors
numberWithUnsignedInteger:
objectAtIndexedSubscript:
objectForKey:
offsetsAtSourceIndex:
operation
outputFeatureChannels
outputTensorAtIndex:
paddingMode
paddingSize
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
poolingDilationRates
poolingGradientWithIndices
poolingKernelSizes
poolingMode
poolingOffsets
poolingReturnIndicesDataType
poolingReturnIndicesMode
poolingStrides
popDebugGroup
primaryDilationRates
primaryKernelSizes
primaryOffsets
primaryStrides
pruneMetric
pruneStructure
readCount
reductionMode
reinitializeDistributionDescriptor:
relativeCoordinates
removeObjectForKey:
resampleMode
reshapeFitToTileToCommandBuffer:currentSource:kernelDimension:dimensionsToBeRetained:
reshapeWithCommandBuffer:sourceArray:dimensionCount:dimensionSizes:destinationArray:
reshapeWithCommandBuffer:sourceArray:shape:destinationArray:
reshapeWithCommandEncoder:commandBuffer:sourceArray:dimensionCount:dimensionSizes:destinationArray:
reshapeWithCommandEncoder:commandBuffer:sourceArray:shape:destinationArray:
reshapeWithDimensionCount:dimensionSizes:
resizeHeight
resizeWidth
resourceSize
respondsToSelector:
resultStateForSourceArrays:sourceStates:destinationArray:
retain
retainCount
rowBytes
rows
safeArrayViewWithCommandBuffer:computeEncoder:descriptor:aliasing:
safeArrayViewWithCommandBuffer:descriptor:aliasing:
samplingMethod
samplingMode
scaleTransform
secondaryDilationRates
secondaryEdgeMode
secondaryKernelSizes
secondaryOffsets
secondaryStrides
self
setAlignCorners:
setAlpha:
setAutoTuning:
setAutoTuningParameters:
setAutoTuningTarget:
setAxes:
setAxis:
setBatchDimensions:
setBeta:
setBuffer:offset:atIndex:
setBytes:length:atIndex:
setChannelMultiplier:
setColumns:
setComputePipelineState:
setComputeQ:
setComputeR:
setConstantValue:
setConstantValue:type:atIndex:
setConvDilationRates:
setCoordinateMode:
setCopyBlock:
setCounterStride:
setDataFormat:
setDescending:
setDestinationArrayAllocator:
setDeviceMemoryBytesRead:
setDeviceMemoryBytesWrite:
setDilationRateInX:
setDilationRateInY:
setDilationRates:
setEdgeMode:
setExclusive:
setFanIn:
setFanOut:
setFloat16Ops:
setFloat32Ops:
setGroups:
setIncrementKey:
setIndexingArithmaticTypeMask:sourceArrays:sourceGradient:destination:tileDimensions:
setInputFeatureChannels:
setK:
setKernelHeight:
setKernelOffsets:
setLabel:
setLengthOfDimension:atIndex:
setM:
setMaximum:
setMaximumInteger:
setMean:
setMinimum:
setMinimumInteger:
setMultiples:
setN:
setNormalizeCoordinates:
setNumLower:
setNumUpper:
setNumberOfRightHandSides:
setObject:atIndexedSubscript:
setObject:forKey:
setOffsets:
setOrder:
setOutputFeatureChannels:
setPaddingConstant:
setPoolingDilationRates:
setPoolingGradientWithIndices:
setPoolingOffsets:
setPoolingReturnIndicesDataType:
setPoolingReturnIndicesMode:
setPoolingStrides:
setPreferPackedRows:
setPruneStructure:
setReadCount:
setReductionMode:
setRelativeCoordinates:
setResampleMode:
setResizeHeight:
setReverse:
setRows:
setSamplingMethod:
setSamplingMode:
setScaleTransform:
setSkipElements:
setSparseRows:
setSparsity:
setSpatialScale:
setStandardDeviation:
setStencilDilationRates:
setStencilOffsets:
setStencilStrides:
setStrideInPixels:
setStrideInPixelsX:
setStrideInPixelsY:
setStrides:
setStructuredSparse:
setTexture:atIndex:
setThreadgroupMemoryLength:atIndex:
setTransA:
setTransB:
setTransposeSparse:
setWeightsFormat:
setWindowOffsets:
setWorkspace:
skipElements
sliceDimension:withSubrange:
sliceRangeForDimension:
sparseRows
sparsity
spatialScale
standardDeviation
state
stateLength
stencilDilationRates
stencilOffsets
stencilStrides
strideInPixels
stridesAtSourceIndex:
stridesForSourceIndex:
stringByAppendingString:
stringWithFormat:
structuredSparse
subPixelScaleFactor
superclass
supportsPostfixForDevice:
supportsPostfixForDevice:convolutionDescriptor:sourceTensorDescriptor:destinationTensorDescriptor:weightsTensorDescriptor:
supportsPrefixForDevice:
supportsSecureCoding
temporaryNDArrayWithCommandBuffer:descriptor:
temporaryResultStateForCommandBuffer:sourceArrays:sourceStates:destinationArray:
threadExecutionWidth
transposeDimension:withDimension:
trsmKernel
trsmL
trsmU
uniformDistributionDescriptorWithMinimum:maximum:
unsignedIntValue
unsignedIntegerValue
unsignedLongValue
userDictionary
weightsFormat
windowOffsets
workloadStatisticsForSourceArrays:destArrays:kernel:kernelDAGObject:sourceState:
workloadStatisticsForSourceArrays:destArrays:sourceState:
workloadStatisticsForSourceArrays:sourceState:
workspace
writeBytes:strideBytes:
zone
r^{MPSLibraryInfo=iI*^?{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}}24@0:8^v16
v24@0:8Q16
Q16@0:8
Q24@0:8@16
@24@0:8@16
@36@0:8@16Q24B32
v16@0:8
B16@0:8
v20@0:8B16
@"MPSNDArrayScan"
@32@0:8@16Q24
@"MPSMatrixSolveLU"
B24@0:8^v16
B24@0:8Q16
@16@0:8
16@0:8
@32@0:8@16@24
v24@0:8@16
@32@0:8^{_NSZone=}16@24
{MPSNDArrayConv3dOffsets_s=[3q]}16@0:8
v40@0:8{MPSNDArrayConv3dOffsets_s=[3q]}16
{MPSNDArrayConv3dSizes_s=[3Q]}16@0:8
v40@0:8{MPSNDArrayConv3dSizes_s=[3Q]}16
{MPSNDArrayConv3dOffsets_s="offsets"[3q]}
{MPSNDArrayConv3dSizes_s="sizes"[3Q]}
Q40@0:8@16@24@32
@56@0:8@16@24@32@40@48
@56@0:8@16@24@32^@40^@48
v20@0:8i16
v24@0:8^v16
d16@0:8
v24@0:8d16
@"MPSMatrixMultiplication"
@"MPSNDArrayIdentity"
@"MPSKernelDAGObject"
Q32@0:8@16@24
@40@0:8@16Q24Q32
v48@0:8@16@24@32@40
@296@0:8@16Q24@32{MPSNDArrayPaddingSize=[16[2Q]]}40
{MPSNDArrayPaddingSize=[16[2Q]]}16@0:8
@"NSNumber"
{MPSNDArrayPaddingSize="paddingSize"[16[2Q]]}
@288@0:8@16Q24{MPSNDArrayPaddingSize=[16[2Q]]}32
I16@0:8
v20@0:8I16
{MPSNDArrayConvolutionSizes=[2Q]}16@0:8
v32@0:8{MPSNDArrayConvolutionSizes=[2Q]}16
{MPSNDArrayConvolutionSizes="size"[2Q]}
24@0:8Q16
{?=[16q]}16@0:8
v144@0:8{?=[16q]}16
{?="dimensions"[16q]}
v56@0:8@16@24@32@40@48
@"MPSNDArrayInitializationConstant"
@56@0:8@16@24Q3240
{?=[16Q]}16@0:8
v144@0:8{?=[16Q]}16
{?="dimensions"[16Q]}
f16@0:8
v20@0:8f16
v32@0:8@16@24
@"MPSParallelRandomDistributionDescriptor"
@"MPSParallelRandom"
@28@0:8@16f24
@40@0:8@16f24f28Q32
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8Q16Q24Q32
@24@0:8Q16
^I16@0:8
@32@0:8@16f24f28
q16@0:8
v24@0:8q16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@"<MTLDevice>"16
@"<MTLDevice>"16@0:8
Q112@0:8@16@24Q32Q40@48r^{?=Q[4I][4I]I}56@64r^{?=Q[4I][4I]I}72@80r^{?=Q[4I][4I]I}88@96Q104
Q120@0:8@16@24Q32Q40@48r^{?=Q[4I][4I]I}56@64r^{?=Q[4I][4I]I}72@80r^{?=Q[4I][4I]I}88r^{?=QQQQQQ}96@104Q112
Q112@0:8@"<MTLCommandBuffer>"16@"<MTLComputeCommandEncoder>"24Q32Q40@"<MTLBuffer>"48r^{?=Q[4I][4I]I}56@"<MTLBuffer>"64r^{?=Q[4I][4I]I}72@"<MTLBuffer>"80r^{?=Q[4I][4I]I}88@"<MTLBuffer>"96Q104
Q120@0:8@"<MTLCommandBuffer>"16@"<MTLComputeCommandEncoder>"24Q32Q40@"<MTLBuffer>"48r^{?=Q[4I][4I]I}56@"<MTLBuffer>"64r^{?=Q[4I][4I]I}72@"<MTLBuffer>"80r^{?=Q[4I][4I]I}88r^{?=QQQQQQ}96@"<MTLBuffer>"104Q112
Q132@0:8@16@24Q32Q40@48r^{?=Q[4I][4I]I}56@64r^{?=Q[4I][4I]I}72@80r^{?=Q[4I][4I]I}88@96r^{?=Q[4I][4I]I}104B112@116Q124
Q140@0:8@16@24Q32Q40@48r^{?=Q[4I][4I]I}56@64r^{?=Q[4I][4I]I}72@80r^{?=Q[4I][4I]I}88@96r^{?=Q[4I][4I]I}104r^{?=QQQQQQ}112B120@124Q132
Q132@0:8@"<MTLCommandBuffer>"16@"<MTLComputeCommandEncoder>"24Q32Q40@"<MTLBuffer>"48r^{?=Q[4I][4I]I}56@"<MTLBuffer>"64r^{?=Q[4I][4I]I}72@"<MTLBuffer>"80r^{?=Q[4I][4I]I}88@"<MTLBuffer>"96r^{?=Q[4I][4I]I}104B112@"<MTLBuffer>"116Q124
Q140@0:8@"<MTLCommandBuffer>"16@"<MTLComputeCommandEncoder>"24Q32Q40@"<MTLBuffer>"48r^{?=Q[4I][4I]I}56@"<MTLBuffer>"64r^{?=Q[4I][4I]I}72@"<MTLBuffer>"80r^{?=Q[4I][4I]I}88@"<MTLBuffer>"96r^{?=Q[4I][4I]I}104r^{?=QQQQQQ}112B120@"<MTLBuffer>"124Q132
@136@0:8{MPSPluginNDArrayConvolutionSizes=[3Q]}16Q40Q48{MPSPluginNDArrayConvolutionSizes=[3Q]}56{MPSPluginNDArrayConvolutionSizes=[3Q]}80Q104Q112Q120I128I132
{MPSPluginNDArrayConvolutionSizes=[3Q]}16@0:8
{MPSPluginNDArrayConvolutionSizes="size"[3Q]}
i16@0:8
@40@0:8@16@24@32
@52@0:8@16@24@32^@40B48
v64@0:8@16@24@32@40@48@56
v24@0:8r^{MPSScaleTransform=dddd}16
r^{MPSScaleTransform=dddd}16@0:8
{MPSScaleTransform="scaleX"d"scaleY"d"translateX"d"translateY"d}
^{MPSScaleTransform=dddd}
@28@0:8@16i24
@44@0:8@16Q24i32B36B40
^{NDArraySrcInfo=Q}
v40@0:8@16@24@32
v52@0:8@16@24@32@40I48
@"MPSNDArray"40@0:8@"<MTLCommandBuffer>"16@"MPSNDArrayDescriptor"24@"MPSKernel"32
@48@0:8@16@24@32@40
{?=[16q]}24@0:8Q16
Q24@0:8Q16
{?=[16Q]}24@0:8Q16
v56@0:8^@16@24@32@40Q48
v48@0:8^@16@24@32@40
@"<MPSNDArrayAllocator>"
@44@0:8@16@24^@32B40
@32@0:8@16^Q24
v72@0:8@16@24@32@40@48@56@64
@"MPSMatrixDecompositionLU"
@36@0:8@16Q24i32
@"NSArray"
@56@0:8@16@24Q32^Q40@48
@64@0:8@16@24@32Q40^Q48@56
B56@0:8^v16@24^{MPSNDArrayDataTensorDescriptor=QQQQQI}32^{MPSNDArrayDataTensorDescriptor=QQQQQI}40^{MPSNDArrayWeightsTensorDescriptor=QQQQQI}48
{MPSNDArrayConvolutionOffsets=[2q]}16@0:8
v32@0:8{MPSNDArrayConvolutionOffsets=[2q]}16
{MPSNDArrayConvolutionOffsets="offset"[2q]}
@"MPSExternalNDArrayBinary"
@"MPSExternalNDArrayBinaryGradient"
{MPSNDArrayStencilOffsets_s=[4q]}16@0:8
v48@0:8{MPSNDArrayStencilOffsets_s=[4q]}16
{MPSNDArrayStencilSizes_s=[4Q]}16@0:8
v48@0:8{MPSNDArrayStencilSizes_s=[4Q]}16
{MPSNDArrayStencilOffsets_s="offsets"[4q]}
{MPSNDArrayStencilSizes_s="sizes"[4Q]}
@60@0:8@16{MPSNDArrayPoolingSizes_s=[4Q]}24i56
@64@0:8@16{MPSNDArrayPoolingSizes_s=[4Q]}24i56i60
{MPSNDArrayPoolingSizes_s=[4Q]}16@0:8
{MPSNDArrayPoolingOffsets_s=[4q]}16@0:8
v48@0:8{MPSNDArrayPoolingOffsets_s=[4q]}16
v48@0:8{MPSNDArrayPoolingSizes_s=[4Q]}16
{MPSNDArrayPoolingSizes_s="sizes"[4Q]}
{MPSNDArrayPoolingOffsets_s="offsets"[4q]}
@64@0:8@16{MPSNDArrayPoolingSizes_s=[4Q]}24i56B60
