textStyle
defaultTextStyle
defaultParagraphStyle
mutableCopy
_gkAttributedStringByApplyingStyle:
size
setHeadIndent:
setFirstLineHeadIndent:
componentsSeparatedByString:
stringWithFormat:
componentsJoinedByString:
stringByAppendingString:
length
addAttribute:value:range:
attributedStringForString:
initWithFrame:
setNumberOfLines:
setTextAlignment:
addSubview:
target
buttonAction
setUserInteractionEnabled:
initWithTarget:action:
addGestureRecognizer:
propertyForKey:
setTextStyle:
setText:
dealloc
sizeThatFits:
preferredHeightForWidth:
layoutSubviews
bounds
setFrame:
settingsFooter
setAttributedText:
setNeedsLayout
initWithSpecifier:
preferredHeightForWidth:inTableView:
specifier
text
label
setLabel:
_specifier
_text
_textStyle
_label
initWithStyle:reuseIdentifier:specifier:
settingsButton
attributedString:byReplayingFromBaseStyle:systemContentSizeDidChange:
textLabel
setTitle:
initWithActivityIndicatorStyle:
startAnimating
sizeToFit
frame
spinnerView
setSpinnerView:
_spinnerView
groupSpecifierWithName:
setProperty:forKey:
preferenceSpecifierNamed:target:set:get:detail:cell:edit:
setButtonAction:
groupSpecifierWithName:subheader:footer:
groupSpecifierWithName:subheader:
groupSpecifierWithName:footer:
cellSpecifierWithName:target:action:
buttonSpecifierWithName:target:action:
switchSpecifierWithName:property:target:
textFieldSpecifierWithName:property:target:
substringToIndex:
uppercaseString
substringFromIndex:
valueForKey:
setValue:forKey:
performSelector:withObject:
textFieldShouldReturn:
addGroupToListController:
groupRemovedFromListController
_listController
_specifiers
addObject:
setZoneFetchInProgress:
countByEnumeratingWithState:objects:count:
didSelectGame:
setControllerLoadAction:
reloadSpecifiers
getZonesWithCompletionHandler:
name
initWithZone:
setSpecifier:
setParentController:
rootController
setRootController:
showController:animate:
specifiers
isZoneFetchInProgress
_zoneFetchInProgress
init
setSessionFetchInProgress:
arrayWithArray:
setSessions:
sessions
title
getSessionsForZone:completionHandler:
containsObject:
removeObject:
removeSession:
isSessionFetchInProgress
_zone
_sessionFetchInProgress
_sessions
setSession:
minPlayers:
maxPlayers:
maxNumberOfConnectedPlayers
initWithSession:
session
_session
addObjectsFromArray:
viewWillAppear:
isMovingToParentViewController
viewWillDisappear:
isMovingFromParentViewController
_gamesGroup
indexPathForSpecifier:
isEqual:
identifier
sessionsGroup
removeSpecifier:animated:
removeSessionWithIdentifier:completionHandler:
sessionSpecifierAtIndexPath:
performDelete:
tableView:canEditRowAtIndexPath:
tableView:commitEditingStyle:forRowAtIndexPath:
setSessionsGroup:
_sessionsGroup
parentController
navigationController
popViewControllerAnimated:
emptyGroupSpecifier
deleteSession:
deleteButtonSpecifierWithName:target:action:
_detailsGroup
named:
setActivity:
authenticatedLocalPlayers
firstObject
accountName
arrayWithObjects:count:
preloadImagesForPlayers:size:
daemonProxy
setDataUpdateDelegate:
setAuthenticationPersonality:
authenticatorForPlayerWithUsername:password:withPresentingViewController:
finishAuthenticationWithResponse:error:
authenticateWithCompletionHandler:
defaultCenter
observeEnterForegroundNotification:
addObserver:selector:name:object:
execute:
_gkReachabilityForInternetConnection
setReachability:
reachability
_gkStartNotifier
reachabilityDidChange:
removeObserver:
shared
isInternalBuild
presentedAlertController
presentingViewController
dismissViewControllerAnimated:completion:
activity
child
localPlayer
proxyForPlayer:
accountServicePrivate
authenticatePlayerWithUsername:password:rawPassword:altDSID:usingFastPath:handler:
showGreenBuddyForAccountName:
defaultAppleID
setAppleID:
setLocalPlayer:
isAuthenticated
setSettingsMode:
profileHeaderView
createTableHeaderView
refreshViewForLocalPlayer
authenticatedPlayerDidChange:
loadProfileWithCompletionHandler:
synchronize
clearInMemoryCachedAvatars
host
alertControllerWithTitle:message:preferredStyle:
sharedApplication
openURL:withCompletionHandler:
actionWithTitle:style:handler:
addAction:
_gkAddCancelButtonWithNoAction
presentViewController:animated:completion:
setPresentedAlertController:
objectForKeyedSubscript:
URLWithString:
dictionaryWithObjects:forKeys:count:
showGreenBuddyForAccountName:url:postBody:
postURL:postBody:completion:
authenticateUsingAuthUIAllowingAppleIDCreation:usernameEditable:dismissHandler:completionHandler:
authenticatedLocalPlayersWithStatus:
showGreenBuddyForLocalPlayer:url:postBody:
enumerateObjectsUsingBlock:
domain
isEqualToString:
code
userInfo
userErrorForCode:underlyingError:
authenticationDidCompleteWithError:
signOutWithCompletionHandler:
showAuthKitAlertFromGreenBuddyWithAuthInfo:completion:
_gkPresentAlertForError:title:defaultMessage:
initWithRemoteUIController:
setModalPresentationStyle:
sharedTheme
formSheetSize
setFormSheetSize:
view
layer
setMasksToBounds:
formSheetCornerRadius
setCornerRadius:
_gkPresentAlertWithTitle:message:buttonTitle:
isServerAuthenticated
setCompletionHandler:
accountRemoteUIControllerForPlayer:mode:url:postBody:completionHandler:
alertTitle
alertMessage
_gkPresentAlertWithTitle:message:buttonTitle:dismissHandler:
settingsMode
reloadSpecifierID:
objectForKey:
credential
altDSID
setAltDSID:
passwordChangeURL
showPasswordChangeAlertWithURL:
copy
loadFreshSpecifiers
signInUsingAAUISignInViewController
didTapSignOutButton:
shouldAllowNearbyMultiplayer
setShouldAllowNearbyMultiplayer:
utilityServicePrivate
refreshPreferences
alias
table
setTableHeaderView:
array
specifiersForSignedOutMode
specifiersForSignedInMode
specifiersForPendingMode
getFriendCount
nicknameGroupSpecifier
friendsGroupSpecifier
isMultiplayerGamingRestricted
gameInvitesTurnOnSwitchSpecifiers
aboutGameCenterSpecifier
TermsAndConditionsGroupSpecifier
signOutButtonSpecifiers
setProfileHeaderView:
arrayWithCapacity:
gameCenterTurnOnSwitchSpecifiers
groupSpecifierWithID:
isUsingPrimaryICloudAccountForGameCenter
setObject:forKeyedSubscript:
rangeOfString:
valueWithNonretainedObject:
usePrimaryAccountForGameCenter:
appendAboutGameCenterFooterToGroupSpecifier:
isAccountModificationRestricted
numberWithBool:
_gkCurrentReachabilityStatus
nicknameFooter
nicknameSpecifier
friendListSpecifier
addFriends:
openTerms:
setNickname:withSpecifier:
getNickname:
setKeyboardType:autoCaps:autoCorrection:
setIdentifier:
getFriendLabel:
showAllFriends:
friendCountLabel
dispatchGroup
numberWithInt:
predicateWithFormat:
filteredArrayUsingPredicate:
count
numberWithUnsignedInteger:
setFriendCountLabel:
loadRecentPlayersWithCompletionHandler:
perform:
specifierForID:
reloadSpecifier:
notifyOnMainQueueWithBlock:
numberWithInteger:
linkWithBundleIdentifier:
flow
localizedButtonTitle
showPrivacySheet:
presenterForPrivacySplashWithIdentifer:
setPresentingViewController:
present
presentAvatarPicker
presentDeleteAvatarImageAlert
local
setResult:
loadPlayerContactForAvatarControllerWithImageSize:handler:
result
photoPickerForGameCenterWithContact:
setDelegate:
setAssignActionTitleOverride:
initWithRootViewController:
deleteAvatarAlertControllerWithHandler:
setPhotoFromCNContactImage:pendingContact:withCompletionHandler:
bundleForClass:
loadNibNamed:owner:options:
heightAnchor
constraintEqualToConstant:
setActive:
tableView:cellForRowAtIndexPath:
textField
setReturnKeyType:
setClearButtonMode:
removeObserver:name:object:
textFieldValueDidChange:
textFieldDidEndEditing:
setNicknameTextField:
nicknameTextField
setNicknameController:
activityIndicator
nicknameController
setActivityIndicator:
setNickname:
setShouldShakeTextFieldOnError:
startObservingKeyboardEvents
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
aa_isPrimaryAccount
aa_personID
aa_altDSID
accountPropertyForKey:
enableOrDisableNicknameEditing
setNicknameFooter:
isFirstResponder
nickname
stopObservingKeyboardEvents
resignFirstResponder
object
specifierForTextField:
setValue:forSpecifier:
objectAtIndex:
indexPathForIndex:
cellForRowAtIndexPath:
firstResponder
setServiceType:
_setShouldForceOperation:
setSignInController:
prepareInViewController:completion:
profileServicePrivate
initWithURL:
getTermsAndConditionsURLWithHandler:
storyboardWithName:bundle:
instantiateViewControllerWithIdentifier:
reporter
report:
pushViewController:animated:
reportEvent:payload:
class
self
performSelector:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
setBadgeCount:forType:
refreshContentsForDataType:userInfo:
friendRequestSelected:
authenticationShowGreenBuddyUIForLocalPlayer:
authenticationShowSignInUIForLocalPlayer:
navigationController:willShowViewController:animated:
navigationController:didShowViewController:animated:
navigationControllerSupportedInterfaceOrientations:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationController:interactionControllerForAnimationController:
navigationController:animationControllerForOperation:fromViewController:toViewController:
signInController:didCompleteWithSuccess:error:
signInControllerDidCancel:
avatarView:didSelectImageWithEditingEnabled:
photoPickerDidCancel:
photoPicker:didUpdatePhotoForContact:withContactImage:
keyboardWillShow:
keyboardWillHide:
nicknameDidBecomeFirstResponder
nicknameDidResignFirstResponder
nicknameUpdateRequestCompletedWithStatus:error:
nicknameTextDidChangeWithMessage:
safariViewController:activityItemsForURL:title:
safariViewController:excludedActivityTypesForURL:title:
safariViewControllerDidFinish:
safariViewController:didCompleteInitialLoad:
safariViewController:initialLoadDidRedirectToURL:
updateFriendsSpecifierLabel:
isInternalDevice
isGameCenterTurnedOn
setGameCenterTurnedOn:
allowNearbyMultiplayer
setAllowNearbyMultiplayer:
useDifferentAppleIDWasTapped:
.cxx_destruct
appleID
setDefaultAppleID:
emailAddress
setEmailAddress:
availableExternalServices
setAvailableExternalServices:
specifiersSensitiveToConnectivity
signInController
signInPath
setSignInPath:
suggestedNicknames
setSuggestedNicknames:
_presentedAlertControllerWeak
_gameCenterTurnedOn
_settingsMode
_appleID
_defaultAppleID
_altDSID
_nickname
_emailAddress
_availableExternalServices
_localPlayer
_specifiersSensitiveToConnectivity
_signInController
_signInPath
_activity
_profileHeaderView
_suggestedNicknames
_nicknameTextField
_reachability
_nicknameController
_activityIndicator
_nicknameFooter
_friendCountLabel
currentDevice
userInterfaceIdiom
settingsBoldButton
_gkAttributedStringByApplyingStylesForTags:untaggedStyle:
GKTextStyle
label
T@"GKLabel",&,N,V_label
specifier
T@"PSSpecifier",R,N
text
T@"NSString",&,N,V_text
textStyle
T@"GKTextStyle",&,N,V_textStyle
defaultTextStyle
T@"GKTextStyle",R,N
spinnerView
T@"UIActivityIndicatorView",&,N,V_spinnerView
set%@%@:withSpecifier:
@24@?0@8@"PSSpecifier"16
@@:@
v32@?0@8@16@"PSSpecifier"24
v@:@@
SETTINGS_SESSION_GAMES_GROUP_TITLE
GK Settings app: getZonesWithCompletionHandler error: %@
v24@?0@"NSArray"8@"NSError"16
zoneFetchInProgress
TB,N,GisZoneFetchInProgress,V_zoneFetchInProgress
SETTINGS_SESSIONS_GROUP_TITLE
GK Settings app: getSessionsForZone error: %@
SETTINGS_SESSION_NAME_UNTITLED
GameSessionKey
GK Settings app: Attempted to delete a session that was not in the sessions cache
sessionFetchInProgress
TB,N,GisSessionFetchInProgress,V_sessionFetchInProgress
sessions
T@"NSMutableArray",&,N,V_sessions
SETTINGS_SESSION_DETAILS_MIN_PLAYERS_LABEL
SETTINGS_SESSION_DETAILS_MAX_PLAYERS_LABEL
session
T@"GKGameSession",&,N,V_session
GK Settings app: deleteSession error: %@
v16@?0@"NSError"8
sessionsGroup
T@"GKSettingsSessionsGroupController",N,V_sessionsGroup
SETTINGS_SESSION_DETAILS_DELETE_BUTTON_TEXT
turnOnSwitchID
friendSpecifierID
nicknameSpecifierID
appleID
gameCenterTurnedOn
allowNearbyMultiplayer
altDSID
dsid
signOutGroupSpecifierID
signOutButtonID
privacyGroupID
Game Center Preferences
auth response:%@ error:%@
v40@?0q8@"GKLocalPlayer"16@"NSError"24@"GKAuthenticateResponse"32
v8@?0
GKNetworkReachabilityChangedNotification
v24@?0@"GKAuthenticateResponse"8@"NSError"16
ACCOUNT_PASSWORD_EXPIRED
ACCOUNT_PASSWORD_RESET_URL_FORMAT_MESSAGE
ACCOUNT_PASSWORD_RESET_BUTTON_TITLE
v16@?0@"UIAlertAction"8
v64@?0@"NSString"8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSError"56
v32@?0@"GKLocalPlayer"8Q16^B24
REMOTEUI_AUTHORIZE_ACCOUNT
CANNOT_CONNECT_TO_SERVER_FOR_REASONS_UNKNOWN
REMOTEUI_SERVER_COMMUNICATION_ERROR
OK_BUTTON
v24@?0@"GKRemoteUIController"8@"NSError"16
v24@?0@"GKAccountRemoteUIController"8@"NSError"16
GKSettingsViewController finishAuthenticationWithResponse:%@ localPlayer:%@ error:%@
UNABLE_TO_CONNECT_TO_SERVER
SETTINGS_SIGNIN_FAILED_TITLE
SETTINGS_SIGNIN_FAILED_MESSAGE
SETTINGS_SIGNIN_FAILED_BUTTON
Spyglass:Error signing out player: %@
SETTINGS_GAMECENTER_TOGGLE_ON_FOOTER_PRIMARY
SETTINGS_GAMECENTER_TOGGLE_ON_FOOTER_NON_PRIMARY
SETTINGS_GAMECENTER_TOGGLE_ON_FOOTER_LINK
SETTINGS_GAMECENTER_TOGGLE_OFF_FOOTER
GAME_CENTER
SETTINGS_GAME_INVITES_FOOTER
wapi
SETTINGS_GAME_INVITES_FOOTER_WLAN
SETTINGS_GAME_INVITES_HEADER
SETTINGS_ALLOW_NEARBY_MULTIPLAYER
NICKNAME_ONLINE_MESSAGE
NICKNAME_MESSAGE
NICKNAME_LABEL
SETTINGS_FRIENDS_FOOTER
ADD_FRIENDS_TITLE
SETTINGS_TERMS_CONDITIONS_HEADER
FRIENDS_SCREEN_TITLE
Going to filter the array using predicate on friendBiDirectional:%@
friendBiDirectional == %@
Filtered the array using predicate on friendDirectional:%@
FRIENDS_NONE_TITLE
v16@?0@?<v@?>8
SIGN_OUT_BUTTON
%@ %@
v24@?0@"CNMutableContact"8@"GKPlayer"16
SETTINGS_ACCEPT_AVATAR
Error setting avatar image from avatar picker %@
GKAvatarContainerView
v32@?0@"ACAccount"8Q16^B24
Spyglass:GKSettingsViewController - AAUISignInController: should continue with displaying auth:%@ and error:%@
Spyglass:GKSettingsViewController - AAUISignInController: should NOT continue, also returned error: %@
v20@?0B8@"NSError"12
GKSettingsViewContrller signInController:didCompleteWithSuccess:%@ error:%@
GKSettingsViewController signInControllerDidCancel:
v24@?0@"NSString"8@"NSError"16
GKFriendList
GKFriendListVC
eventType
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
settingsMode
Tq,N,V_settingsMode
TB,N,GisGameCenterTurnedOn,V_gameCenterTurnedOn
TB,N
T@"NSString",&,N,V_appleID
defaultAppleID
T@"NSString",&,N,V_defaultAppleID
T@"NSString",&,N,V_altDSID
nickname
T@"NSString",&,N,V_nickname
emailAddress
T@"NSString",&,N,V_emailAddress
availableExternalServices
T@"NSArray",&,N,V_availableExternalServices
localPlayer
T@"GKLocalPlayer",&,N,V_localPlayer
specifiersSensitiveToConnectivity
T@"NSArray",R,N,V_specifiersSensitiveToConnectivity
presentedAlertController
T@"UIAlertController",W,N
signInController
T@"AAUISignInController",&,N,V_signInController
signInPath
Tq,N,V_signInPath
activity
T@"GKActivity",&,N,V_activity
profileHeaderView
T@"GKAvatarContainerView",&,N,V_profileHeaderView
suggestedNicknames
T@"NSMutableArray",&,N,V_suggestedNicknames
nicknameTextField
T@"UITextField",&,N,V_nicknameTextField
reachability
T@"GKReachability",&,N,V_reachability
nicknameController
T@"GKNicknameController",&,N,V_nicknameController
activityIndicator
T@"UIActivityIndicatorView",&,N,V_activityIndicator
nicknameFooter
T@"NSString",&,N,V_nicknameFooter
friendCountLabel
T@"NSString",&,N,V_friendCountLabel
bold
GKSettingsBulletedFooterView
GKSettingsAttributedFooterView
PSHeaderFooterView
GKSettingsButtonTableCell
GKSettingsSpinnerView
GameKit
GKSettingsEditableTableCell
GKSettingsGroupController
GKSettingsSessionGamesGroupController
GKSettingsSessionsGroupController
GKSettingsSessionDetailsGroupController
GKSettingsSessionGamesViewController
GKSettingsSessionsViewController
GKSettingsSessionDetailsViewController
GKSettingsViewController
GKDaemonProxyDataUpdateDelegate
NSObject
GKLocalPlayerAuthenticationUIPersonality
AAUISignInControllerDelegate
UINavigationControllerDelegate
GKAvatarContainerViewDelegate
CNPhotoPickerViewControllerDelegate
GKNicknameControllerDelegate
SFSafariViewControllerDelegate
GKFriendListViewControllerDelegate
GKSettingsAppleIDButtonTableCell
@24@0:8@16
d24@0:8d16
d32@0:8d16@24
@"UIView<PSHeaderFooterView>"24@0:8@"PSSpecifier"16
d32@0:8d16@"UITableView"24
v16@0:8
@16@0:8
v24@0:8@16
@"PSSpecifier"
@"NSString"
@"GKTextStyle"
@"GKLabel"
@40@0:8q16@24@32
@"UIActivityIndicatorView"
@40@0:8@16@24@32
@32@0:8@16@24
@40@0:8@16@24:32
B24@0:8@16
@"PSListController"
@"NSMutableArray"
B16@0:8
v20@0:8B16
@"GKGameSession"
@"GKSettingsSessionGamesGroupController"
B32@0:8@16@24
v40@0:8@16q24@32
@"GKSettingsSessionsGroupController"
@"GKSettingsSessionDetailsGroupController"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8Q16Q24
v28@0:8I16@20
v28@0:8I16@"NSDictionary"20
v24@0:8@"GKFriendRequestInternal"16
v24@0:8@"GKLocalPlayer"16
v36@0:8@16@24B32
Q24@0:8@16
q24@0:8@16
@48@0:8@16q24@32@40
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
v36@0:8@16B24@28
v36@0:8@"AAUISignInController"16B24@"NSError"28
v24@0:8@"AAUISignInController"16
v28@0:8@16B24
v28@0:8@"GKAvatarContainerView"16B24
v40@0:8@16@24@32
v24@0:8@"CNPhotoPickerViewController"16
v40@0:8@"CNPhotoPickerViewController"16@"CNMutableContact"24@"CNContactImage"32
v32@0:8@16@24
v24@0:8@"NSNotification"16
v32@0:8@"NSString"16@"NSError"24
v24@0:8@"NSString"16
@"NSArray"40@0:8@"SFSafariViewController"16@"NSURL"24@"NSString"32
v24@0:8@"SFSafariViewController"16
v28@0:8@"SFSafariViewController"16B24
v32@0:8@"SFSafariViewController"16@"NSURL"24
v24@0:8q16
v32@0:8@16@?24
q16@0:8
@"UIAlertController"
@"NSArray"
@"GKLocalPlayer"
@"AAUISignInController"
@"GKActivity"
@"GKAvatarContainerView"
@"UITextField"
@"GKReachability"
@"GKNicknameController"
%{public}@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.private.avatar.store</key>
<true/>
<key>com.apple.private.dprivacyd.allow</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMicrophone</string>
<string>kTCCServiceCamera</string>
</array>
</dict>
</plist>
