@(#)PROGRAM:HMFoundation  PROJECT:HMFoundation-725.3.1
fffff
%{public}@Missing internal location manager
%{public}@Marking as having received location
%{public}@Failed to mark with exception: %@
%{public}@Creating transaction '%@'
%{public}@Completed transaction '%@' - held for %.3fs
%{public}@Releasing transaction '%@'
%{public}@Failed to mark
%{public}@Successfully marked
%{public}@Failed to unarchive with error: %@
%{public}@Failed to unarchive due to invalid data: %@
%{public}@Notify of expired value: %@ committed value: %@ delegate: %@
%{public}@[HMFTimer] Expiration, %f, must be greater than 0
%{public}@[HMFExponentialBackoffTimer] The exponential factor cannot be 0
%{public}@[HMFExponentialBackoffTimer] The minimum time interval, %f, must be greater than 0
%{public}@[HMFExponentialBackoffTimer] The maximum time interval, %f, must be greater than or equal to the minimum time interval, %f
%{public}@Exception while searching list (%@)
%{public}@The identifier is required
%{public}@The public key is required
%{public}@The pairing key data must be %tu bytes long
%{public}@Parameter is requred: 'methodPredicate'
%{public}@Invalid method predicate
%{public}@Parameter is requred: 'URLPredicate'
%{public}@Invalid URL predicate
HMF API Misuse: Unsupported type %@ with 'pii' annotation
%{public}@Reachability changed to: %@
%{public}@Notifying delegate address is reachable
%{public}@Notifying delegate address is unreachable
%{public}@Activating with options: %@
%{public}@Deactivating
%{public}@Updating activation with options: %@
%{public}@Taking active assertion with reason: %@
%{public}@Taking WoW assertion
%{public}@Releasing WoW assertion
%{public}@Re-Enabling WoW
%{public}@WiFi link is %@
%{public}@Current network SSID updated from %@ to %@
%{public}@Starting to monitor with observer: %@
%{public}@Observer deallocated, stopping monitoring for observer: %@
%{public}@Stopping to monitor with observer: %@
%{public}@Location support not available, unable to request authorization
%{public}@Failed to request authorization with error: %@
%{public}@completing location authorization mark
%{public}@Received notification of authorization status changed to: %d
%{public}@Starting to monitor
%{public}@Stop monitoring
%{public}@Received notification authorized: %@
%{public}@Decrementing by %tu
%{public}@Cannot decrement, not enough budget
%{public}@Starting timer
%{public}@Successfully decremented to: %tu
%{public}@Incrementing
%{public}@Stopping timer
%{public}@Incremented to: %tu
%{public}@Failed to create version string regex with error: %@
%{public}@Invalid version string: %@
%{public}@Failed to create assertion with error: %ld
%{public}@[%@] Creating session with service name: %@
%{public}@[%@] Submitting event: %@
%{public}@Failed to convert string to hardware address %@: %d
%{public}@Failed to create hardware address with invalid length: %lu
%{public}@Failed to create hardware address with data of invalid length: %@
%{public}@Failed to create MAC address with string of invalid length: %lu
%{public}@Failed to create MAC address with data of invalid length: %@
%{public}@Failed to deserialize object of classes: %@, from data %@, with error: %@
%{public}@Failed to create internal net service browser
%{public}@The browser is already browsing
%{public}@Start browsing for %@%@
%{public}@Stopping the browse
%{public}@Browser started browsing
%{public}@Browse did stop
%{public}@Failed to browse
%{public}@Failed to browse with error: %@
%{public}@Added service: %@
%{public}@The browse domain, %@, was removed
%{public}@Removed service: %@
%{public}@Received system memory pressure source event: %@
%{public}@Received process memory pressure source event: %@
%{public}@Failed to create server, server is invalid
%{public}@Requiring TLS in anonymous mode
%{public}@Failed to bind server
%{public}@Server invalidated
%{public}@Server received error: %@
%{public}@Server did open connection: %@
%{public}@Server did close connection: %@
%{public}@Unable to acquire the assertion : %@
%{public}@Thread left active (%tu): %@
Identifier = %@, Parent = %@, Name = %@
HMFActivity
%{public}@Started
%{public}@Failed to create memory assertion
%{public}@Failed to create power assertion
%{public}@Using existing clientMetricIdentifier: %@ and dropping: %@
Reason = %@
%{public}@Marked with reason: %@
%{public}@Marked
%{public}@Attempted to enabled logging with service name %@ when service name %@ was already enabled in the current activity
Identifier = %@, Name = %@
%{public}@Invalidated after %fs
%{public}@Begining activity in context: %@
%{public}@Adopting voucher: %@
%{public}@Ending activity in context: %@
%{public}@Restoring voucher: %@
%{public}@Unable to request authorization
%{public}@Requesting authorization
%{public}@Received notification of status: %d
%{public}@Invalidating during deallocation
%{public}@Acquiring
%{public}@Invalidating
%{public}@Object %@ of class %@ mismatches cache class %@:
%{public}@Object %@ of class %@ does not conform to NSCopying protocol
%{public}@Expecting to be able to convert %@ into a UUID.
%{public}@Processing pending index operations : [handlers: %@] [destinationHandlerIndexes : %@] [nameHandlerIndexes : %@]
%{public}@Finished processing index operations  : [handlers: %@] [destinationHandlerIndexes : %@] [nameHandlerIndexes : %@]
%{public}@Time take to index: %f
%{public}@Removing handlers at indexes: %@
%{public}@Dispatching message: %@
%{public}@Message %@ rejected by %@: %@
%{public}@Invoking handler: %@
%{public}@No handlers for message: %@
%{public}@Successfully dispatched message: %@
%{public}@Message %@ was not handled with error: %@
%{public}@Cannot send with response handler if the message already has a response handler
%{public}@Registering handler: %@
%{public}@Updating handler: %@
%{public}@Failed to create connection, connection is invalid
%{public}@Closed
%{public}@Opened
%{public}@Received request: %@
%{public}@No body stream for request: %@
%{public}@Opening body stream for request: %@
%{public}@Failed to open request body stream for request %@
%{public}@Sending a 500 (Internal Server Error) for the request: %@
%{public}@Received complete request: %@
%{public}@Sending a 501 (Not Implemented) for the request: %@
%{public}@Closing body stream for request: %@
%{public}@Reading %ld bytes for request: %@
%{public}@Failed to read available data for request: %@
%{public}@Got zero bytes read and no accumulated read bytes for request: %@
%{public}@Received body stream error for request: %@
%{public}@Received unknown event: %ld, for request: %@
%{public}@Failed to send internal response, %@, with error: %@
%{public}@The response is invalid: %@
%{public}@Sending response: %@
%{public}@Completed sending response, %@, with error: %@
%{public}@Failed to send response, %@, with error: %@
%{public}@Successfully sent response: %@
%{public}@Connection invalidated
%{public}@Connection received error: %@
%{public}@Unable to determine the current battery level
%{public}@Unable to determine the current battery state
%{public}@Battery state changed: %tu
%{public}@Cannot create HMFWiFiNetworkInfo with MACAddress: %@ and SSID: %@
%{public}@Adding new preference: %@
%{public}@Invalid preference key representation: %@
%{public}@Unknown preference value: %@
%{public}@Unable to determine current audit token
%{public}@Scheme is required
%{public}@Host address is required
%{public}@Port is required
%{public}@Invalid base URL: %@
%{public}@Network service is required
%{public}@Registering for WOW assertion
%{public}@No available IPv4 address, falling back to '%@', WoW may fail.
%{public}@Starting net service reachability resolution
%{public}@Starting confirmation for service: %@
%{public}@Failed to confirm service, marking the client as unreachable
%{public}@Failed to confirm service, the client is already unreachable
%{public}@Confirmed service, requesting application ping
%{public}@Service is unreachable, performing a one-time ping
%{public}@Client ping in progress, dropping ping request
%{public}@Requesting client to perform a ping
%{public}@Delegated ping failed, marking the client as unreachable
%{public}@Delegated ping failed, the client is already unreachable
%{public}@Delegated ping succeeded, marking the client as reachable
%{public}@Going to attempt to retry delegated ping later
%{public}@Request timed out, marking the client as unreachable
%{public}@Request timed out, the client is already unreachable
%{public}@Request failed, starting reachability probe
%{public}@Request cancelled, reachability probe is not started
%{public}@Override the request URL to: %@
%{public}@Sending request: %@
%{public}@Received response, %@, to request, %@, with error: %@
%{public}@Failed to send request, %@, with error: %@
%{public}@Received response: %@
%{public}@Resuming task: %@
%{public}@Cancelling all pending requests
%{public}@Canceling task: %@
%{public}@Invalidating the client
%{public}@Received notification that the client is now reachable
%{public}@Received notification that the client is no longer reachable
%{public}@Delegated ping timer fired
%{public}@Retrying delegated ping
%{public}@Session did become invalid with error: %@
%{public}@Received challenge: %@
%{public}@Received connection challenge, accepting the server's certificate as the client is set to allow anonymous connections
%{public}@Notifying delegate of reachablity change to %@
%{public}@Failed to resolve service with error: %@
%{public}@Received notification that the server is now reachable
%{public}@Cancelling pending confirmations due to reachability change
%{public}@Received notification that the server is now unreachable
%{public}@Updated system name to '%@'
%{public}@Updated migration status to '%@'
%{public}@Unable to determine preferred cache directory
%{public}@Overriding unknown QoS '%tu' to NSQualityOfServiceDefault
%{public}@Name is a required argument
%{public}@Destination is a required argument
%{public}@Invalid userInfo class provided, %@, for message, see <rdar://problem/37677418>
%{public}@Failed to create store
%{public}@Failed to set Notification on DynamicStore
%{public}@Failed to set DispatchQueue on DynamicStore
%{public}@Opening
%{public}@Failed to open connection
%{public}@Closing
%{public}@Received unhandled request: %@
%{public}@Invalid receiver: %@
%{public}@Invalid sockaddr, must be AF_INET
%{public}@Invalid sockaddr, must be AF_INET6
%{public}@inet_ntop() failed  with '%s' (%d) for sockaddr_in6: %@
%{public}@Invalid hostname
%{public}@Invalid socket address family: 0x%02x
%{public}@Operation is already executing
%{public}@Operation is not ready
%{public}@Operation is already complete, aborting.
%{public}@Cancelled operation was not marked finished, marking finished
%{public}@Starting operation
%{public}@Subclasses should override main
%{public}@Cancelling with error: %@
%{public}@Finishing operation
%{public}@Cannot set an activity once an operation has started executing
%{public}@Cannot set an activity once an activity has been set
%{public}@Operation timed out, cancelling
%{public}@Executing %tu blocks
%{public}@A valid object is required
%{public}@Message is not supported: %@
%{public}@Attempting to privately log legacy attribute description for object: %@
%{public}@Failed to create message
%{public}@Marking as ready
%{public}@A valid name is required for publishing
%{public}@Starting
%{public}@Failed to start server
%{public}@Enabling WoW
%{public}@Started server on port %tu
%{public}@Publishing
%{public}@Failed to publish net service with error: %@
%{public}@Published
%{public}@Stopped with error: %@
%{public}@Adding request handler: %@
%{public}@Removing request handler: %@
%{public}@Received request, %@, from connection: %@
%{public}@Failed to handle request: %@
%{public}@Found a matching request handler, %@, for the request, %@, but there was no request block
%{public}@Found a matching request handler, %@, for the request, %@
%{public}@Received connection: %@
%{public}@Accepted connection: %@
%{public}@Failed to open connection, %@, with error: %@
%{public}@Opened connection: %@
%{public}@Rejecting connection: %@
%{public}@Connection closed: %@
%{public}@Closing connection: %@
%{public}@Failed to create network reachability monitor%@.
%{public}@Initial flags: %@
%{public}@Failed to get initial reachability
%{public}@Received notification of updated flags: %@
%{public}@Updating reachability to: %@
%{public}@Deallocating
%{public}@Invalidated
%{public}@Registering
%{public}@Unregistering
%{public}@Received change: %@
%{public}@Skipping resolving service, already have a cached address: %@
%{public}@Skipping resolving service, still running and already resolved
%{public}@Starting to resolve service
%{public}@Net service will resolve
%{public}@Net service resolved
%{public}@Net service failed to resolve with error: %@
%{public}@Net service stopped resolving
%{public}@Net service TXT record updated: %@
%{public}@Service domain is required
%{public}@Service type is required
%{public}@Service name is required
%{public}@Invalid TXT record key, %@, error: %@
%{public}@Invalid TXT record value, %@, error: %@
%{public}@Failed to update TXT record
%{public}@The service is already publishing
%{public}@Cannot publish without a resolved port
%{public}@Failed to create internal net service
%{public}@Start publishing the net service
%{public}@Stopping the net service
%{public}@Net service will publish
%{public}@Failed to publish
%{public}@Failed to publish with error: %@
%{public}@Net service did stop
%{public}@Failed to serialize TXT record key with exception: %@
%{public}@Failed to serialize TXT record value with exception: %@
%{public}@No configured RTC backends for service %@
%{public}@%lu sessions already queued; creating a nil session for service %@
%{public}@[%@] Queuing session containing %lu messages for submission
%{public}@Checking for stale backend sessions
%{public}@Found stale session for service %@
Operation failed.
Unexpected internal state.
v8@?0
Location.Authorization.Mark
%@ is unavailable
v24@?0@"NSDictionary"8@"NSError"16
message && !message.responseHandler
v24@?0@"NSError"8@"NSDictionary"16
v16@?0@"NSError"8
%@ s, 
%@ m, 
%@ h, 
%@ d, 
%@ mo, 
@"HMFTimer"16@?0d8
StagedValue
Timer
Running
Interval
Repeating
HMFTimer delegateQueue can only be set before activation (resume/fire)
You must override %@ in a subclass
keyPath
name
uuid
zoneID
uniqueIdentifier
contextSPIUniqueIdentifier
instanceID
characteristicType
<redacted>
<HMFFuture %p (%@)>
pending
settled
v24@?0@8@"NSError"16
future
%@ %@
Identifier
Public Key
Private Key
HAP.identifier
HAP.publicKey
HAP.privateKey
HAPPairingKey
Hash
HAP.data
<[%tu] %@%@%@>
 ... 
v40@?0r^v8{_NSRange=QQ}16^B32
EEE, d MMM yyyy HH:mm:ss z
en_US
Networking.Monitor
Host
Transfer-Encoding
Content-Length
Content-Type
Date
HMFErrorDomain
HMFDetailedErrorsKey
Already exists.
Not found.
Invalid parameter.
Unconfigured parameter.
Operation not supported.
Server failed to start.
Server failed to advertise.
Nil parameter.
Operation in progress.
Server search failed.
Generic error.
Operation cancelled.
Operation timed out.
Request not handled.
Unexpected result.
Exception.
Aggregate error.
Broken promise.
Unknown error
Identity
State
Homed Version
Home Manager
Sync Manager
Home
Room
Zone
Metadata
Characteristic
Service
Pending Invites
Incoming Invites
Outgoing Invites
BulletinNotification
BulletinNotificationGroup
BulletinNotificationGroupServices
BulletinNotificationGroupCameras
Service Group
Accessory
Secondary Accessory
Bridge
Bridged Accessory
Category
Action Set
Trigger
Timer Trigger
Location
Event
Predicate
Recurrence
Execute Once
Execute Session
User
User Access Token
Removed User
Current User
Resident
Accessory Profile
Accessory Transport
Write Action
Media Action
Keychain
Keychain Item
Mesh
Application Data
HomeNotificationRegistrations
SetupHash
Pending Read Responses
NetService
Shared Home Source Version
Shared Home Update Handler
Shared Home Update Session
HMFWiFiManagerCurrentNetworkDidChangeNotification
manager
reason
Networking.WiFi.Manager
Down
None
Foreground
HMFLocationAuthorizationUpdatedNotification
isAuthorized
authorized
isMonitoring
monitoring
bundleIdentifier
bundle
Authorized
Cannot set queue once the location authorization has started.
B24@?0@"HMFObjectObserver"8^B16
CoreLocation not available
Location authorization in progress
Location.Authorization
CLLocationManager
Unable to find class %s
Get Location Authorization
    
(null)
v32@?0@8@16^B24
model
IOPlatformSerialNumber
IOPlatformExpertDevice
value
full
empty
Limit must be nonzero
Rate is invalid
OperationBudget
^(\d+)(\.(\d+))?(\.(\d+))?.*$
%tu.%tu.%tu
%tu.%tu
HM.major
HM.minor
HM.update
^(\d+)(\.(\d+))?(\.(\d+))?((;(.*))|(\s*\((.*)\))|(\.(.*)))?.*$
%@ (%@)
%ld.%ld.%ld
HM.build
{_HMFFutureBlockOutcome=q@}16@?0@8
{_HMFFutureBlockOutcome=q@}16@?0@"NSError"8
PreventUserIdleSystemSleep
TimeoutActionTurnOff
service
HMFLogging
 formattedString=%@
HMF.data
%@%@{
%@%@ = 
com.apple.HMFoundation.%@%@%@.%tu
<%@%@, Domain = %@, Service Type = %@>
Networking.Service.Browser
%@ - %@
Failed to search for services.
The search domain was removed.
HomeKitEvent
CameraConfiguration
HomeConfiguration
HomeKitRegistration
kHMFPowerLogEventType
HomeKitLinkTypeIP
HomeKitLinkTypeBluetoothLE
HomeKitLinkTypeUnknown
HMFMemoryMonitorSystemMemoryStateDidChangeNotification
HMFMemoryMonitorProcessMemoryPressureNotification
HMFSystemMemoryStateUpdateKey
HMFProcessMemoryStateUpdateKey
HMFSystemMemoryStateUnknown
HMFSystemMemoryStateNormal
HMFSystemMemoryStateWarning
HMFSystemMemoryStateCritical
HMFSystemMemoryStateUndefined
HMFProcessMemoryStateUnknown
HMFProcessMemoryStateWarning
HMFProcessMemoryStateCritical
HMFProcessMemoryStateUndefined
capacity > 0
port <= UINT16_MAX
Networking.HTTP.Server.Internal
assertions.count
nil == self->_internalAssertions
v32@?0@"HMFAssertion"8Q16^B24
Started child activity: %@
%@.%@
%@ %@ (%@)
Parent
Assertions
Valid
Beginning an invalidated activity is prohibited: %@
block
HMFActivity.loggingSessionAlreadyActive
newServiceName
HMFLogging.subsession
subsessionServiceName
subsessionUUID
EnableReporting
clientMetricIdentifier
Activity
<Context: Thread = %@, Count = %tu>
Stopped child activity: %@
Memory
Power
Unknown
Status Code
Headers
Body
Request
authorization
Location.Authorization.Request
Assertion
Name
workQ
Invalid filter class '%@', must be subclass of %@
B32@?0@"__HMFMessageHandler"8Q16^B24
v32@?0@"__HMFMessageHandler"8Q16^B24
messageName
policies
selector
targetUUID
messageHandler
(unspecified error)
The dispatcher does not have a valid transport
Messaging.Dispatcher
B24@?0Q8^B16
Opening body stream
Closing body stream
Sending
Networking.HTTP.Server.Connection.Internal
HMFPowerManagerBatteryStateDidChangeNotification
HMFPowerManagerBatteryLevelDidChangeNotification
CurrentCapacity
MaxCapacity
ExternalChargeCapable
FullyCharged
IOServiceFirstMatch
IOPMPowerSource
BatteryInstalled
IOGeneralInterest
HMF.wowAssertionKey
com.apple.developer.device-information.user-assigned-device-name
com.apple.private.MobileGestalt.AllowedProtectedKeys
ProductType
ModelNumber
RegionInfo
ProductName
DeviceClass
ReleaseType
BuildVersion
bluetooth-le
DeviceColor
UserAssignedDeviceName
SerialNumber
WifiAddress
iPhone
iPod
iPad
AppleTV
Watch
AudioAccessory
Beta
Carrier
Internal
v24@?0^{__CFString=}8^{__CFDictionary=}16
 MACAddress=%@ SSID=%@
HMF.MACAddress
HMF.SSID
type && [type length] > 0
data
%@ type: %@ length: %@
HMF.kt
HMF.ks
HMFPreferenceUpdatedNotification
, Preferences = 
Preference
, Domain = %@, Key = %@, Value = %@
Load Default Preferences
Determining preference location
Preferences
plist
SIMULATOR_ROOT
System/Library/PrivateFrameworks/HomeKitDaemon.framework
Parsing preferences
Value
Customer
Developer
application-identifier
Process %d
Application Identifier
ProcessInfo
[self isExecuting]
queue
%@://[%@]:%tu
%@://%@:%tu
reachabilityProbeQueue
@"HMFTimer"8@?0
<%@ URL = %@, Session = %@, active = %d, pinging = %d, proxy = %d, reachable = %d>
v12@?0B8
Resolving
Resolved
v24@?0@"HMFHTTPResponse"8@"NSError"16
v24@?0@"NSURL"8@"NSError"16
Invalid response scheme type
Received response
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
v16@?0@"NSArray"8
v24@?0@"HMFNetAddress"8@"NSError"16
Networking.HTTP.Client
%@%@%@
https
http
reachable
unreachable
Unable to determine the address of the server
count >= 1
futures.count >= 1
Precondition not satisfied: 
HMFSystemInfoNameUpdatedNotification
HMFSystemInfoNameNotificationKey
HMFSystemInfoMigratingUpdatedNotification
Mac OS X
macOS
iPhone OS
Watch OS
Apple TVOS
MacBook
Macmini
iMac
MacPro
Black
White
Yellow
Orange
Blue
Unknown (%@)
Platform
Product Class
Product Variant
Software Version
Product Color
Model Identifier
HMF.platform
HMF.class
HMF.variant
HMF.softwareVersion
HMF.majorVersion
HMF.minorVersion
HMF.patchVersion
HMF.color
HMF.modelIdentifier
com.apple.HomeKit
com.apple.HMFoundation
[%@] 
Library
Caches
Message:
Background
Default
Utility
User Initiated
User Interactive
%@%@
%@ %@(%@)
<%@%@, Identifier = %@, Name = %@, QoS = %@, Destination = %@, Activity = %@, 
User Info = %@,
Headers = %@>
HMF.identifier
HMF.name
HMF.timeout
HMF.qos
HMF.destination
HMF.headers
HMF.payload
: NSMutableArray
[%tu]
v32@?0@8Q16^B24
: NSMutableDictionary
: invalid dictionary key
[%@]
: NSMutableSet
v24@?0@8^B16
: NSMutableString
HMF.keys
HMF.objects
Count of objects (%lu) differs from count of keys (%lu)
notFoundMarker
%@ and %@ must be present
count of objects (%lu) differs from count of keys (%lu)
HostNameChange
isFinished
Error Domain=%@ Code=%ld "%@"
Address
Failed to open connection.
Networking.HTTP.Server.Connection
Receiver does not respond to %@
Target
Policies
Receiver
Messaging.Handler
%@(%@)
message
BlockMessage Invocation
SelectorMessage Invocation
default
DumpState
MM/dd/yyyy HH:mm:ss
%s%%%s
%s%%%u
SHA-1
SHA-224
SHA-256
SHA-384
SHA-512
SHA1
SHA224
SHA256
SHA384
SHA512
, Algorithm = %@, Value = %@
HM.algorithm
HM.value;
00:00:00:00:00:00
isExecuting
executing
finished
Operation is already executing.
Operation:%@
Starting operation
Operation
Operation is already executing or has finished.
[NSThread isMainThread]
HMFMainThreadAsyncContext
HMFCallerAsyncContext
No current HMFAsyncContext
HMF.target
HMFMessageDestination.target is required
HTTPRequest
HTTPResponse
Method
Test
Missing required policy
%@ required by %@ is missing
filter
Messaging.Filter
Message
shouldLogPrivateInformation
q24@?0@8@16
<%@%@%@>
%@: %@
<private>
ready
Location.Authorization.Operation
_http
%@ %tu
Service Type
Port
Connection Idle Timeout
B32@?0@"HMFHTTPRequestHandler"8Q16^B24
Calling request handler
B32@?0@"HMFHTTPClientConnection"8Q16^B24
Server invalidated.
Networking.HTTP.Server
clientConnections
Enabled
Disabled
[otherNumber isKindOfClass:NSNumber.class]
size == 1
HMF.value
for %@
%@ '%@'
localhost
Reachable
WWAN
object
The observed object must be an NSObject.
Cannot set a handler on an invalidated observer.
KVO.observer
handler
com.apple.HMFoundation.Scheduler
%@%@(
isResolved
isPublishing
resolved
publishing
NSNetServiceErrorDomain
<%@%@, Domain = %@, Type = %@, Name = %@, Port = %tu, Addresses = %@, isPublishing = %d, ResolveState = %d, ResolveRunningState = %d, ResolveBlocksCount = %d>
Networking.Service
Failed to resolve.
Cancelled.
Net service stopped resolving.
Cannot publish without a resolved port.
Failed to create record.
Failed to publish net service.
Net service stopped publishing.
Invalid TXT record key.
Invalid TXT record value.
HMFTimestamp
HMFEventName
HMFSessionIdentifier
home
com.apple.HomeKitDaemon
HMFMeta
HMFMetaEventName
ExceededSessionMax
HMFCorrespondingServiceName
d8@?0
HMFLogging.StaleSession
softlink:o:path:/System/Library/Frameworks/CoreLocation.framework/CoreLocation
softlink:o:path:/System/Library/Frameworks/CoreLocation.framework/CoreLocation
__HMFLocationAuthorizationMarkOperation
HMFLogging
NSObject
HMFOSTransaction
HMFFuture
HMFMemoryAssertion
HMFoundation
HMFDeprecated
HMFCalendarCreation
HMFStagedValue
HMFTimerDelegate
HMFTimer
HMFExponentialBackoffTimer
HMFMessagePolicy
NSCopying
KeyPathLookup
HMFObject
HMFPrivateObjectFormatter
HMFPrivateDescriptionFormatter
HMFFulfilledFuture
HMFRejectedFuture
HMFAsyncFuture
HMFPromise
HMFZeroing
HMFPairingIdentity
NSSecureCoding
NSCoding
HMFPairingKey
_HMFCFHTTPMessage
Timeout
HMFHTTPRequestHandler
HMFLogEventCoding
__HMFSoftwareVersionDataSource
HMFSystemInfoSoftwareVersionDataSource
HMFNetMonitor
_HMFObjectObserverInternal
HMFObjectObserver
HMFError
HMFDumpCategory
__HMFWiFiAssertion
HMFWiFiManager
HMFWiFiManagerDataSourceDelegate
HMFLocationAuthorization
CLLocationManagerDelegate
HMFCollection
NSFastEnumeration
HMFAssociativeCollection
__HMFIOKitDataSource
HMFSystemInfoSerialNumberDataSource
HMFSystemInfoProductInfoDataSource
HMFOperationBudget
HMFVersion
HMFLocalizable
HMFSoftwareVersion
Convenience
HMFPowerAssertion
HMFLogEventSessionVoucher
HMFNullLogEventSession
HMFLogEventSession
HMFLogEventSessionFactory
HMFHardwareAddress
HMFMACAddress
HMFMutableThreadSafeDictionary
HMFMutableAssociativeCollection
Waiting
HMFMerging
HMFMessageTransport
HMFNetServiceBrowser
NSNetServiceBrowserDelegate
HMFPowerLogger
HMFMemoryMonitor
HMFRingBuffer
_HMFCFHTTPServer
HMFStringIndentation
HMUIndent
__HMFActivityManager
HMFActivity
HMFActivityMarking
__HMFThreadContext
HMFHTTPResponseInternal
HMFHTTPResponse
NSMutableCopying
HMFMutableHTTPResponse
__HMFLocationAuthorizationRequest
HMFAssertion
HMFObjectCacheNSUUID
StringSupport
HMFMessageDispatcher
HMFMessageTransportDelegate
Deprecated
_HMFCFHTTPServerConnection
HMFPowerManager
_HMFNetManagerWoWAssertion
HMFNetManager
HMFTimeZoneCreation
__HMFMobileGestaltDataSource
HMFSystemInfoNameDataSource
HMFSystemInfoMarketingInformationDataSource
HMFSystemInfoWiFiDataSource
HMFSystemInfoBluetoothLEDataSource
HMFSystemInfoProductColorDataSource
HMFWiFiNetworkInfo
HMFKey
HMFPreferences
HMFPreference
HMFSystemPreference
HMFProcessInfo
HMFDispatchContext
HMFAsyncContext
HMFDispatchExecutor
HMFHTTPClientConfiguration
HMFHTTPClient
HMFNetMonitorDelegate
NSURLSessionDelegate
Combinators
HMFSystemInfo
HMFSystemInfoNameDataSourceDelegate
HMFSystemInfoMigrationDataSourceDelegate
HMFProductInfo
_HMFCFHTTPServerRequest
HMFCache
HMFMessageInternal
HMFMessage
MessagePayload
HMFMutableMessage
HMFObjectCacheNSString
CollectionSupport
HMFOrderedDictionary
HMFMutableOrderedDictionary
__HMFSystemConfigurationDataSource
NSOperation
HMFOperationFutureAdapter
HMFHTTPClientConnection
_HMFCFHTTPServerConnectionDelegate
__HMFMessageHandler
__HMFBlockMessageHandler
__HMFSelectorMessageHandler
__HMFDispatchExecutorMessageHandler
Version5
HMFNotificationCenter
__HMFEmbeddedSystemInfo
HMFNetAddressInternal
_HMFNetAddressIPV4
_HMFNetAddressIPV6
_HMFNetAddressHostname
HMFNetAddress
__HMFNetServiceMonitor
HMFDigest
HMFWiFiManagerDataSource
HMFOperation
HMFBlockOperation
HMFWeakObject
_HMFMainThreadAsyncContext
_HMFCallerAsyncContext
HMFMessageDestination
HMFHTTPRequestInternal
HMFHTTPRequest
HMFMutableHTTPRequest
HMFMessageFilter
HMFAttributeDescription
HMFClassRegistry
_HMFCFHTTPServerResponse
__HMFLocationManagerOperation
HMFCancellationHandler
HMFCancellable
HMFHTTPServer
_HMFCFHTTPServerDelegate
HMFHTTPClientConnectionDelegate
HMFDumpState
HMFBoolean
__HMFBoolean
__HMFBooleanTrue
__HMFBooleanFalse
__HMFNetAddressMonitor
HMFKeyValueBlockObserver
HMFKeyValueObserving
HMFLock
HMFLocking
NSLocking
HMFUnfairLock
__HMFOSUnfairLock
__HMFOSUnfairRecursiveLock
HMFScheduler
HMFQueue
HMFNetService
NSNetServiceDelegate
HMFMutableNetService
HMFLogEventSessionManager
HMFRTCSessionFactory
HMFQueuingLogBackendSession
HMFLogBackendSession
HMFQueuingLogBackendOperation
HMFQueuingLogBackendSessionManager
_HMFLogBackendSubmitterDelegate
HMFLogBackendSessionManager
manager
hmfErrorWithCode:description:reason:suggestion:
cancelWithError:
markAsHavingReceivedLocation
finish
hmf_errorWithException:
hmfErrorWithCode:reason:suggestion:underlyingError:
logCategory
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
logIdentifier
main
stringWithFormat:
exceptionWithName:reason:userInfo:
init
timeIntervalSinceReferenceDate
UUID
UUIDString
stringByAppendingString:
UTF8String
transaction
creationTime
dealloc
initWithName:
.cxx_destruct
_transaction
_creationTime
T@"NSObject<OS_os_transaction>",R,N,V_transaction
Td,R,N,V_creationTime
responseHandler
getResultWithCompletion:
respondWithOutcomeOf:
futureWithPromise:
mutableCopy
rejectWithError:
fulfillWithValue:
setResponseHandler:
sendMessage:completionHandler:
sendMessageExpectingResponse:
uniqueDescription
invalidate
setInternal:
mark
internal
_internal
T@"NSObject<OS_os_transaction>",&,N,V_internal
initForReadingFromData:error:
setDecodingFailurePolicy:
setClass:forClassName:
decodeTopLevelObjectOfClass:forKey:error:
finishDecoding
hmf_unarchivedObjectOfClass:fromClassName:fromData:error:
unarchivedObjectOfClasses:fromData:error:
countByEnumeratingWithState:objects:count:
deserializeObjectWithData:allowedClasses:
deserializeObjectWithData:allowedClass:frameworkClasses:
unarchivedObjectOfClass:fromData:error:
hmf_unarchiveFromData:error:
second
numberWithInteger:
appendString:
minute
hour
month
copy
hmf_localTimeDescription
localTimeDescription
setWithObjects:
decodeDateComponents
decodeArrayOfDateComponents
decodeCalendar
initWithTimeInterval:options:
_stageValue:withTimer:
_commitValue:
_unstageValue
setDelegate:
resume
delegate
stagedValue:didExpireValue:
timerDidFire:
initWithValue:
stageValue:withTimeout:
stageValue:
commitValue:
value
committedValue
isStaged
setCommittedValue:
timer
setTimer:
timerFactory
setTimerFactory:
_lock
_stagedValue
_isStaged
_committedValue
_timer
_delegate
_timerFactory
T@,&,V_committedValue
T@"HMFTimer",&,V_timer
T@?,C,V_timerFactory
T@,R
staged
TB,R,GisStaged
T@"<HMFStagedValueDelegate>",W,V_delegate
unlock
isRunning
initWithName:value:
timeInterval
numberWithDouble:
options
arrayWithObjects:count:
distantFuture
raise:format:
__fire
date
shortDescription
attributeDescriptions
leeway
fireDate
setFireDate:
delegateQueue
setDelegateQueue:
suspend
kick
fire
__handleExpiration
_delegateQueue
_timerQueue
_timeInterval
_leeway
_running
_fireDate
_options
T@"NSObject<OS_dispatch_source>",R,N,V_timer
TQ,R,N,V_options
T@"<HMFTimerDelegate>",W,V_delegate
T@"NSObject<OS_dispatch_queue>",&
Td,R,N,V_timeInterval
TQ,R,N
running
TB,R,GisRunning
T@"NSDate",R,C,V_fireDate
initWithMinimumTimeInterval:maximumTimeInterval:exponentialFactor:options:
isIncreasing
exponentialFactor
maximumTimeInterval
minimumTimeInterval
reset
_increasing
_minimumTimeInterval
_maximumTimeInterval
_exponentialFactor
increasing
TB,R,N,GisIncreasing,V_increasing
Td,R,N,V_minimumTimeInterval
Td,R,N,V_maximumTimeInterval
Tq,R,N,V_exponentialFactor
dateWithTimeIntervalSinceNow:
copyWithZone:
valueForKeyPath:
hmf_firstObjectWithValue:forKeyPath:
hmf_firstObjectWithName:
hmf_firstObjectWithUUID:
hmf_firstObjectWithZoneID:
hmf_firstObjectWithUniqueIdentifier:
hmf_firstObjectWithSPIUniqueIdentifier:
hmf_firstObjectWithInstanceID:
hmf_firstObjectWithCharacteristicType:
privateDescription
propertyDescription
T@"NSArray",R,C,N
defaultFormatter
privateStringForObjectValue:
stringForObjectValue:
hmfUnspecifiedError
futureWithValue:
futureWithError:
performBlock:
isPending
inContext:perform:
outcomeIfSettled
then:
recover:
then:orRecover:
inContext:then:
inContext:recover:
inContext:then:orRecover:
T{_HMFFutureBlockOutcome=q@},R
pending
TB,R,GisPending
_value
_error
_state
_promise
hmfErrorWithCode:
resolveWithFuture:
_future
_completion
_resolved
bytes
length
_newZeroingDataWithBytes:length:
hmf_zeroingCopy
initWithPairingKeyData:
initWithIdentifier:publicKey:privateKey:
identifier
publicKey
isEqualToString:
privateKey
initWithName:value:options:formatter:
decodeObjectOfClass:forKey:
encodeObject:forKey:
pairingIdentity
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
publicPairingIdentity
_identifier
_publicKey
_privateKey
T@"NSString",R,C,N,V_identifier
T@"HMFPairingKey",R,C,N,V_publicKey
T@"HMFPairingKey",R,C,N,V_privateKey
T@"HMFPairingIdentity",R,C
setClassName:forClass:
data
isEqualToData:
setClassMappingForNSCoder
_data
T@"NSData",R,C,N,V_data
characterSetWithCharactersInString:
subdataWithRange:
stringByTrimmingCharactersInSet:
enumerateByteRangesUsingBlock:
stringByReplacingOccurrencesOfString:withString:
hasPrefix:
getCharacters:range:
initWithBytesNoCopy:length:freeWhenDone:
initWithBytesNoCopy:length:encoding:freeWhenDone:
hmf_hexadecimalStringWithOptions:
hmf_isZeroed
hmf_initWithHexadecimalString:options:
hmf_hexadecimalRepresentation
hmf_zeroed
TB,R,Ghmf_isZeroed
T@"NSString",R
setDateFormat:
initWithLocaleIdentifier:
setLocale:
timeZoneWithAbbreviation:
setTimeZone:
initWithMessageRef:
message
valueForHeaderField:
dateFormatter
dateFromString:
stringFromDate:
setValue:forHeaderField:
integerValue
setContentLength:
requestWithMethod:url:protocolVersion:
responseWithStatusCode:statusDescription:protocolVersion:
headerFields
setDate:
contentType
setContentType:
contentLength
body
setBody:
_message
T^{__CFHTTPMessage=},R,N,V_message
T@"NSDictionary",R,N
T@"NSData",C,N
anySettled:
timeout:
futureWithDelay:
_isValidMethodPrediate:
_isValidURLPredicate:
initWithMethodPredicate:URLPredicate:matchBlock:
methodPredicate
URLPredicate
matchBlock
requestBlock
setRequestBlock:
_methodPredicate
_URLPredicate
_matchBlock
_requestBlock
T@"NSPredicate",R,C,N,V_methodPredicate
T@"NSPredicate",R,C,N,V_URLPredicate
T@?,R,C,N,V_matchBlock
T@?,C,N,V_requestBlock
dataWithCapacity:
appendData:
dataWithLength:
mutableBytes
voucher
uuid
getUUIDBytes:
dataWithBytesNoCopy:length:freeWhenDone:
numberWithChar:
numberWithUnsignedChar:
numberWithShort:
numberWithUnsignedShort:
numberWithInt:
numberWithUnsignedInt:
numberWithLong:
numberWithUnsignedLong:
numberWithLongLong:
numberWithUnsignedLongLong:
logEventDictionary
stringWithUTF8String:
initWithBytes:length:encoding:
dataWithBytes:length:
setObject:forKeyedSubscript:
productVariant
getBytes:length:
initWithUUIDBytes:
dataUsingEncoding:
base64EncodedStringWithOptions:
processInfo
operatingSystemVersion
initWithMajorVersion:minorVersion:updateVersion:buildVersion:
softwareVersion
T@"HMFSoftwareVersion",R,C,N
initWithNetAddress:
initWithNetService:
networkMonitorIsReachable:
networkMonitorIsUnreachable:
isReachable
setReachable:
reachabilityPath
netAddress
_reachable
_netAddress
reachable
TB,GisReachable
T@"<HMFNetMonitorDelegate>",W,V_delegate
T@"HMFNetAddress",R,C,N,V_netAddress
deallocationBlock
setDeallocationBlock:
_deallocationBlock
T@?,C,N,V_deallocationBlock
_startObserving
_stopObserving
cachedHash
observedObject
initWithObservedObject:
_observedObject
_cachedHash
TQ,R,V_cachedHash
T@,R,W,V_observedObject
T@?,C,V_deallocationBlock
dictionary
name
mainBundle
localizedStringForKey:value:table:
reason
hmfErrorWithCode:userInfo:
hmfErrorWithCode:description:reason:suggestion:underlyingError:
errorWithDomain:code:userInfo:
domain
isHMFError
hmfErrorWithCode:reason:suggestion:
hmfError
TB,R,N,GisHMFError
stringByAppendingFormat:
acquire:
isValid
initWithOptions:manager:reason:
_manager
T@"HMFWiFiManager",R,V_manager
TQ,R,V_options
initWithWorkQueue:
initWithWorkQueue:dataSource:
weakObjectsHashTable
MACAddressString
initWithMACAddressString:
currentNetworkDidChangeForDataSource:
isAssertionActive
isCaptive
activateWithOptions:
deactivate
assertionOptions
addObject:
removeObject:
setWoWAsserted:
performBlockAfterWoWReassertionDelay:
currentNetworkSSID
defaultCenter
postNotificationName:object:
sharedManager
dataSource:didChangeWoWState:
dataSource:didChangeLinkAvailability:
T@"HMFWiFiManager",R
isActive
beginActiveAssertionWithOptions:reason:
endActiveAssertion:
takeWoWAssertion
releaseWoWAssertion
MACAddress
_shouldAssertWoW
_currentNetworkSSID
_MACAddress
_workQueue
_dataSource
_activeAssertions
T@"HMFMACAddress",R,C,V_MACAddress
active
TB,R,GisActive
captive
TB,R,GisCaptive
array
componentsJoinedByString:
containsObject:
isAuthorized
status
hmf_isEmpty
objectsPassingTest:
initWithType:authorization:
setQualityOfService:
error
setCompletionBlock:
defaultScheduler
performOperation:
initWithAuthorization:
locationOperationCompleted
authorizationStatus
bundlePath
processName
initialize
automaticallyNotifiesObserversForKey:
sharedAuthorization
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManagerDidChangeAuthorization:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
initWithBundleIdentifier:
initWithBundle:
queue
setQueue:
isMonitoring
registerObserver:
unregisterObserver:
requestAuthorization:completionHandler:
bundleIdentifier
bundle
_status
_observers
_request
_operation
_queue
_bundleIdentifier
_bundle
T@"NSString",R,C,V_bundleIdentifier
T@"NSBundle",R,V_bundle
T@"CLLocationManager",R,V_internal
Ti,R
T@"NSObject<OS_dispatch_queue>",&,V_queue
authorized
TB,R,GisAuthorized
monitoring
TB,R,GisMonitoring
initWithName:parent:options:
authorizationStatusForBundleIdentifier:
authorizationStatusForBundle:
initWithEffectiveBundleIdentifier:delegate:onQueue:
initWithEffectiveBundle:delegate:onQueue:
_initWithDelegate:onQueue:
willChangeValueForKey:
didChangeValueForKey:
_stringRepresentation
objectEnumerator
count
objectForKey:
objectForKeyedSubscript:
objectsForKeys:notFoundMarker:
keyEnumerator
enumerateKeysAndObjectsUsingBlock:
enumerateKeysAndObjectsWithOptions:usingBlock:
allKeys
allValues
T@"NSArray",R,C
serialNumber
T@"NSString",R,C,N
productPlatform
productClass
modelIdentifier
Tq,R,N
initWithData:encoding:
decrementByCount:
isFull
initWithLimit:rate:
isEmpty
decrement
limit
rate
_limit
_rate
TQ,R,N,V_limit
T{_HMFRate=Qd},R,N,V_rate
TQ,R,V_value
full
TB,R,GisFull
empty
TB,R,GisEmpty
regularExpressionWithPattern:options:error:
matchesInString:options:range:
objectAtIndexedSubscript:
numberOfRanges
rangeAtIndex:
substringWithRange:
initWithMajorVersion:minorVersion:updateVersion:
updateVersion
majorVersion
minorVersion
localizedDescription
versionString
isEqualToVersion:
compare:
decodeIntegerForKey:
encodeInteger:forKey:
initWithVersionString:
isAtLeastVersion:
isGreaterThanVersion:
_majorVersion
_minorVersion
_updateVersion
TQ,R,V_majorVersion
TQ,R,V_minorVersion
TQ,R,V_updateVersion
buildVersion
productInfo
compare:options:
versionFromOperatingSystemVersion:
shortVersionString
_buildVersion
T@"NSString",R,C,V_buildVersion
finally:
inContext:finally:
ignoreErrors
ignoreResult
ignoreOutcome
futureWithNoValue
fulfillWithNoValue
resolverBlock
errorOnlyResolverBlock
voidResolverBlock
T@?,R,C
_cleanUpPowerAssertion
setIdentifier:
initWithName:timeout:
TI,N,V_identifier
initWithUUID:serviceName:
serviceName
_serviceName
_uuid
T@"NSString",R,N,V_serviceName
T@"NSUUID",R,N,V_uuid
submitEventWithName:payload:
T@"NSUUID",R,N
T@"NSString",R,N
T@"HMFLogEventSessionVoucher",R,N
timeIntervalSince1970
commonFields
addEntriesFromDictionary:
backend
sendMessage:
initWithUUID:serviceName:commonFields:backend:
_commonFields
_backend
T@"NSDictionary",R,N,V_commonFields
T@"<HMFLogBackendSession>",R,N,V_backend
sharedSessionManager
logBackendSessionWithServiceName:sessionUUID:isRealtime:
sessionWithUUID:serviceName:uploadImmediately:commonFields:
initWithAddressData:
formattedString
isEqualToAddress:
initWithAddressString:length:
_formattedString
T@"NSData",R,C,V_data
T@"NSString",R,C,V_formattedString
initWithDictionary:
setObject:forKey:
removeObjectForKey:
removeObjectsForKeys:
rawDictionarySnapshot
threadSafeDictionary
_dictionary
T@"NSDictionary",R,C
waitForResult:orError:withTimeout:
minusSet:
intersectSet:
hmf_addedObjectsFromSet:
hmf_removedObjectsFromSet:
hmf_commonObjectsFromSet:
member:
mergeObject:
shouldMergeObject:
secureDescriptionWithIndent:newLine:blacklistedKeys:
dictionaryWithCapacity:
hmf_arrayForKey:
hmf_stringForKey:
initWithBase64EncodedString:options:
hmf_boolForKey:isPresent:
hmf_numberForKey:
boolValue
initWithUUIDString:
setWithArray:
hmf_dataForKey:
hmf_arrayForKey:ofClasses:
hmf_mutableArrayForKey:
hmf_base64EncodedDataForKey:
hmf_boolForKey:
hmf_boolForKey:error:
hmf_calendarForKey:
hmf_dateForKey:
hmf_dateComponentsForKey:
hmf_dictionaryForKey:
hmf_mutableDictionaryForKey:
hmf_errorForKey:
hmf_nullForKey:
hmf_integerForKey:error:
hmf_setForKey:
hmf_mutableSetForKey:
hmf_timeZoneForKey:
hmf_URLForKey:
hmf_UUIDForKey:
hmf_valueForKey:
hmf_unarchivedObjectForKey:ofClasses:
hmf_fileHandleForKey:
string
appendFormat:
indentationByLevels:
indentation
sortedArrayUsingSelector:
decodeTimeZone
dateComponentsFromDataForKey:
setWithObject:
secureDescriptionWithBlacklistKeys:
uuidForKey:
uuidFromStringForKey:
stringForKey:
numberForKey:
boolForKey:
boolForKey:keyPresent:
dictionaryForKey:
mutableDictionaryForKey:
mutableArrayForKey:
arrayForKey:
mutableSetForKey:
setForKey:
dataForKey:
base64EncodedDataForKey:
dateForKey:
timeZoneForKey:
timeZoneFromDataForKey:
dateComponentsForKey:
errorForKey:
errorFromDataForKey:
calendarForKey:
calendarFromDataForKey:
predicateFromDataForKey:
nullForKey:
nsValueForKey:
urlForKey:
arrayOfDateComponentsFromDataForKey:
T@"<HMFMessageTransportDelegate>",W,V_delegate
appendBytes:length:
currentRunLoop
removeFromRunLoop:forMode:
mainRunLoop
scheduleInRunLoop:forMode:
serviceType
descriptionWithPointer:
orderedSet
isPublishing
clientQueue
isBrowsing
setBrowsing:
setBrowseBlock:
searchForServicesOfType:inDomain:
_stopBrowsingWithError:
stop
browseBlock
errorFromNetServiceErrorDict:
setPublishing:
addNetServiceToCache:
netServiceBrowserWillSearch:
netServiceBrowserDidStopSearch:
netServiceBrowser:didNotSearch:
netServiceBrowser:didFindDomain:moreComing:
netServiceBrowser:didFindService:moreComing:
netServiceBrowser:didRemoveDomain:moreComing:
netServiceBrowser:didRemoveService:moreComing:
initWithDomain:serviceType:
shouldCache
setShouldCache:
cachedNetServices
startBrowsingWithCompletionHandler:
stopBrowsing
_netServices
_cachedNetServices
_browsing
_domain
_serviceType
_clientQueue
_browseBlock
T@"NSObject<OS_dispatch_queue>",R,N,V_clientQueue
T@"NSNetServiceBrowser",R,N,V_internal
browsing
TB,N,GisBrowsing,V_browsing
T@?,C,N,V_browseBlock
T@"<HMFNetServiceBrowserDelegate>",W,V_delegate
T@"NSString",R,C,N,V_domain
T@"NSString",R,C,N,V_serviceType
TB,N
netServiceBrowser:didStopBrowsingWithError:
netServiceBrowser:didAddService:
netServiceBrowser:didRemoveService:
sharedPowerLogger
linkTypeDescription:
reportToPowerLogDestinationTable:withEventDictionary:
memoryPressureSource
setMonitoring:
dictionaryWithObjects:forKeys:count:
postNotificationName:object:userInfo:
lastProcessMemoryStateUpdateTime
timeIntervalSinceDate:
lastProcessMemoryState
setLastProcessMemoryStateUpdateTime:
setLastProcessMemoryState:
memoryMonitor
T@"HMFMemoryMonitor",R
start
systemMemoryState
setSystemMemoryState:
_monitoring
_memoryPressureSource
_systemMemoryState
_lastProcessMemoryState
_lastProcessMemoryStateUpdateTime
T@"NSObject<OS_dispatch_source>",R,N,V_memoryPressureSource
TB,N,GisMonitoring,V_monitoring
Tq,N,V_systemMemoryState
Tq,V_lastProcessMemoryState
T@"NSDate",&,N,V_lastProcessMemoryStateUpdateTime
initWithCapacity:
buffer
capacity
removeObjectAtIndex:
insertObject:atIndex:
_capacity
_buffer
TQ,R,V_capacity
T@"NSMutableArray",R,V_buffer
initWithWeakObject:
unsignedIntegerValue
doubleValue
port
initWithPort:options:
connectionIdleTimeout
setConnectionIdleTimeout:
watchdogTimeout
setWatchdogTimeout:
connections
_port
_connections
T^{_CFHTTPServer=},R,N,V_internal
T@"NSMutableArray",R,N,V_connections
T@"<_HMFCFHTTPServerDelegate>",W,V_delegate
TQ,R,N,V_port
valid
TB,R,N,GisValid
object
serverDidInvalidate:
initWithConnectionRef:
server:didOpenConnection:
close
server:didCloseConnection:
indentationWithWidth:
initWithWidth:
width
level
stringByPaddingToLength:withString:startingAtIndex:
_width
_level
TQ,R,V_width
TQ,R,V_level
indentWithLevel:
indentByFactor:
_activities
activityWithName:parent:options:block:
currentActivityForMarking
markWithReason:
initWithFormat:arguments:
initWithIdentifier:name:parent:options:
enumerateObjectsUsingBlock:
clientMetricIdentifier
logSession
thread
hasStarted
parent
markWithFormat:
arrayWithCapacity:
assertions
blockWithBlock:
enableReportingWithServiceName:uuid:
sessionWithUUID:serviceName:uploadImmediately:
activityWithName:block:
activityWithName:parent:block:
activityWithName:parent:assertions:block:
currentActivity
markCurrentActivity
markCurrentActivityWithReason:
markCurrentActivityWithFormat:
T@"HMFActivity",R
T@"<HMFActivityMarking>",R
initWithName:parent:
initWithName:parent:assertions:
initWithIdentifier:name:parent:assertions:
setClientMetricIdentifier:
begin
blockWithQualityOfService:block:
isEventReportingEnabled
enableReportingWithServiceName:
_voucher
_threadContexts
_valid
_logSession
_parent
_name
_clientMetricIdentifier
_internalAssertions
_startMachTime
T@"NSUUID",R,C,V_identifier
T@"HMFActivity",R,W,V_parent
T@"NSString",R,C,V_name
T@"NSString",C,N,V_clientMetricIdentifier
TB,R,GisValid,V_valid
started
TB,R,GhasStarted
eventReportingEnabled
TB,R,GisEventReportingEnabled
T@"<HMFLogEventSession>",R,V_logSession
currentThread
__init
currentContext
T@"__HMFThreadContext",R,C
setCount:
setVoucher:
shouldRestoreVoucher
setShouldRestoreVoucher:
_shouldRestoreVoucher
_thread
_count
T@"NSThread",R,V_thread
TQ,N,V_count
T@"NSObject<OS_voucher>",&,N,V_voucher
TB,N,V_shouldRestoreVoucher
getBytes:range:
allocWithZone:
initWithStatusCode:headerFields:body:
statusCode
setHeaderValue:forHeaderKey:
activity
setActivity:
setHeaderFields:
_activity
_statusCode
_headerFields
_body
Tq,R,N,V_statusCode
T@"NSDictionary",C,N,V_headerFields
T@"NSData",C,N,V_body
T@"HMFActivity",&,N,V_activity
request
initWithRequest:internalResponse:
mutableCopyWithZone:
T@"HMFHTTPResponseInternal",R,N,V_internal
T@"HMFHTTPRequest",R,N,V_request
T@"NSData",R,N
T@"NSData",C,D,N
initWithTimeout:
authorization
removeObserver:forKeyPath:context:
addObserver:forKeyPath:options:context:
requestAlwaysAuthorization
requestWhenInUseAuthorization
isExecuting
underlyingQueue
observeValueForKeyPath:ofObject:change:context:
initWithType:
type
_requested
_type
Tq,R,V_type
hmf_cachedInstanceForNSUUID:
hmf_cachedInstanceForNSString:
hmf_zeroUUID
isSubclassOfClass:
isIndexed
numberWithUnsignedInteger:
hasReceiver:
indexesOfObjectsWithOptions:passingTest:
removeObjectsAtIndexes:
target
indexSetWithIndex:
addIndex:
initWithDictionary:copyItems:
index
registerForMessage:receiver:policies:selector:
registerForMessage:receiver:policies:messageHandler:
messageTargetUUID
registerForMessage:targetUUID:receiver:policies:selector:
handlerWithReceiver:targetUUID:name:policies:selector:
handlerWithReceiver:name:policies:handler:
objectsAtIndexes:
handlersForMessage:
filterClasses
receiver
policies
filterMessage:withPolicies:error:
invokeWithMessage:
respondWithError:
transport
dispatchMessage:
allMessagesForMessageNameTarget
messageTransport:didReceiveMessage:
initWithTransport:
setFilterClasses:
registerForMessage:receiver:selector:
registerForMessage:receiver:messageHandler:
deregisterForMessage:receiver:
deregisterReceiver:
shouldAutomaticallyIndex
setShouldAutomaticallyIndex:
workQueue
_handlers
_indexWatchdog
_destinationHandlerIndexes
_nameHandlerIndexes
_indexed
_shouldAutomaticallyIndex
_filterClasses
_transport
indexed
TB,R,GisIndexed,V_indexed
TB,N,V_shouldAutomaticallyIndex
T@"NSObject<OS_dispatch_queue>",R,V_workQueue
T@"HMFMessageTransport",R,N,V_transport
T@"NSSet",C,V_filterClasses
allMessageTargets
destination
initWithTarget:
setDestination:
sendMessage:target:responseQueue:responseHandler:completionHandler:
dispatchMessage:target:
sendMessage:target:
sendMessage:target:responseQueue:responseHandler:
sendMessage:target:andInvokeCompletionHandler:
containsIndex:
indexesPassingTest:
addIndexes:
indexOfObject:
replaceObjectAtIndex:withObject:
initWithConnection:requestRef:
bodyStream
_handleCompletedReceivedRequest:error:
_stopReadBody:
_sendStatusCode:forRequest:
connection:didReceiveRequest:
appendBodyData:
_sendStatusCode:forRequest:bodyData:
initWithRequest:statusCode:
setCompletionHandler:
sendResponse:
completionHandler
pendingRespones
responseRef
address
addressString
open
_handleReceivedRequestRef:
handleRequest:bodyReadStream:eventType:
_handleCompletedResponse:error:
pendingRequests
_address
_pendingRequests
_pendingRespones
T@"NSMutableArray",R,N,V_pendingRequests
T@"NSMutableArray",R,N,V_pendingRespones
T^{_CFHTTPServerConnection=},R,N,V_internal
T@"<_HMFCFHTTPServerConnectionDelegate>",W,V_delegate
T@"HMFNetAddress",R,N,V_address
initWithSocketAddress:
connection
_deregisterForPowerSourceNotifications:
setRunning:
_registerForPowerSourceNotifications
notificationPort
interestNotification
batteryState
batteryLevel
updateBatteryState:
hasBattery
_hasBattery
_batteryLevel
_interestNotification
_batteryState
_notificationPort
TB,N,GisRunning,V_running
T^{IONotificationPort=},R,N,V_notificationPort
TI,R,N,V_interestNotification
TB,R,V_hasBattery
Tq,R,V_batteryState
Tf,R,V_batteryLevel
initWithWifiManager:
T@"HMFWiFiManager",R,N,V_manager
initWithWiFiManager:
deregisterWoWAssertionForObject:
wowAssertion
wifiManager
setWowAssertion:
T@"HMFNetManager",R,N
deregisterObject:
registerWoWAssertionForObject:
_wowAssertion
_wifiManager
T@"_HMFNetManagerWoWAssertion",W,V_wowAssertion
T@"HMFWiFiManager",R,N,V_wifiManager
valueForEntitlement:
T@"<HMFSystemInfoNameDataSourceDelegate>",W
model
regionInfo
WiFiInterfaceMACAddress
T@"HMFMACAddress",R,C
supportsBLE
productColor
Tq,R
shouldFetchUserAssignedDeviceName
shouldFetchProtectedKey:
notificationToken
_supportsBLE
_modelIdentifier
_model
_regionInfo
_serialNumber
_productPlatform
_productClass
_productVariant
_softwareVersion
_WiFiInterfaceMACAddress
_productColor
_notificationToken
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T^{MGNotificationTokenStruct=},R,V_notificationToken
T@"<HMFSystemInfoNameDataSourceDelegate>",W,V_delegate
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_model
T@"NSString",R,C,N,V_regionInfo
T@"NSString",R,C,N,V_serialNumber
Tq,R,N,V_productPlatform
Tq,R,N,V_productClass
Tq,R,N,V_productVariant
T@"NSString",R,C,N,V_modelIdentifier
T@"HMFSoftwareVersion",R,C,N,V_softwareVersion
T@"HMFMACAddress",R,C,V_WiFiInterfaceMACAddress
TB,R,V_supportsBLE
Tq,R,V_productColor
arrayWithArray:
lowercaseString
containsString:
dataSource:didUpdateName:
SSID
isEqualToNetworkInfo:
initWithMACAddress:SSID:
_SSID
T@"NSString",R,C,V_SSID
size
containsValueForKey:
initWithType:size:data:
_size
TQ,R,V_size
T@"NSString",R,C,V_type
initWithDefaultClass:
classRegistry
classForKey:
setClass:forKey:
defaultValues
preferences
preferenceClassForPreferenceKey:
defaultValueForPreferenceKey:
initWithKey:options:defaultValue:
sharedPreferences
setPreferenceClass:forPreferenceKey:
setDefaultValue:forPreferenceKey:
preferenceForKey:
_preferences
_classRegistry
T@"HMFClassRegistry",R,V_classRegistry
initWithKey:options:defaultValue:parent:
numberValue
setNumberStyle:
numberFromString:
stringValue
dataValue
setValue:
_key
T@"NSString",R,V_key
T@"<NSObject>",C,V_value
T@"HMFPreference",R,W,V_parent
TB,R,N
T@"NSNumber",R,C,N
T@"NSData",R,C,N
initWithKey:options:domain:defaultValue:parent:
initWithKey:options:domain:defaultValue:
T@"NSString",R,C,V_domain
URLForResource:withExtension:
environment
stringByAppendingPathComponent:
bundleWithPath:
dictionaryWithContentsOfURL:
systemInfo
auditToken
initWithAuditToken:
initWithIdentifier:
applicationIdentifier
mainBundleURL
bundleWithURL:
booleanWithBool:
processInfoForXPCConnection:
T@"HMFProcessInfo",R
getAuditToken:
isCodeSigned
isPlatformBinary
executableURL
signingIdentifier
_auditToken
_executableURL
_mainBundleURL
_applicationIdentifier
_signingIdentifier
Ti,R,V_identifier
T@"NSURL",R,C,V_executableURL
T@"NSURL",R,C,V_mainBundleURL
T@"NSBundle",R,C
T@"NSString",R,C,V_applicationIdentifier
T@"NSString",R,C,V_signingIdentifier
codeSigned
T@"HMFBoolean",R,C,GisCodeSigned
platformBinary
T@"HMFBoolean",R,C,GisPlatformBinary
initWithUTF8String:
initFileURLWithPath:isDirectory:
initWithQueue:alwaysDispatch:
initWithQueue:
blessWithImplicitContext:
assertIsExecuting
_alwaysDispatch
T@"NSObject<OS_dispatch_queue>",R
requiresEncryption
allowsAnonymousConnection
allowsCellularAccess
supportsWakeOnLAN
monitorsReachability
defaultConfiguration
setRequiresEncryption:
setAllowsAnonymousConnection:
setAllowsCellularAccess:
setSupportsWakeOnLAN:
setMonitorsReachability:
_requiresEncryption
_allowsAnonymousConnection
_allowsCellularAccess
_supportsWakeOnLAN
_monitorsReachability
TB,V_requiresEncryption
TB,V_allowsAnonymousConnection
TB,V_allowsCellularAccess
TB,V_supportsWakeOnLAN
TB,V_monitorsReachability
addressFamily
URLWithString:
initWithBaseURL:configuration:
initWithBaseURL:configuration:netManager:
baseURL
host
initWithHostname:
createNSURLSession:
initWithBaseURL:configuration:session:reachabilityMonitor:netManager:
finishCommonInitialization
initWithService:configuration:
initWithService:configuration:netManager:
initWithService:configuration:session:reachabilityMonitor:netManager:
setName:
setMaxConcurrentOperationCount:
defaultSessionConfiguration
setHTTPCookieAcceptPolicy:
setHTTPCookieStorage:
setHTTPShouldSetCookies:
setURLCredentialStorage:
setURLCache:
setHTTPShouldUsePipelining:
mainQueue
sessionWithConfiguration:delegate:delegateQueue:
resolveWithCompletionHandler:
session
isPinging
hostName
addresses
firstObject
baseURLWithScheme:hostAddress:port:
isCancelled
reachabilityProbeQueue
cancelAllOperations
delegatedPingTimer
requestClientReachabilityPingWithRetry:
confirmWithTimeout:completionHandler:
addExecutionBlock:
addOperation:
client:didRequestPingWithCompletionHandler:
setPinging:
startDelegatedPingTimer
stopDelegatedPingTimer
setDelegatedPingTimer:
startReachabilityProbe
setActive:
_sendRequest:baseURL:completionHandler:
urlRequest
relativePath
URLWithString:relativeToURL:
setURL:
valueForHTTPHeaderField:
componentsWithURL:resolvingAgainstBaseURL:
setValue:forHTTPHeaderField:
responseWithStatusCode:
allHeaderFields
dataTaskWithRequest:completionHandler:
cancel
getAllTasksWithCompletionHandler:
invalidateAndCancel
resolveWithTimeout:completionHandler:
absoluteString
allowAnonymousConnection
protectionSpace
serverTrust
credentialForTrust:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
initWithBaseURL:options:
initWithNetService:options:
configuration
sendRequest:completionHandler:
cancelPendingRequests
netService
setAllowAnonymousConnection:
reachabilityMonitor
netManager
_pinging
_allowAnonymousConnection
_active
_configuration
_baseURL
_netService
_session
_reachabilityMonitor
_reachabilityProbeQueue
_netManager
_delegatedPingTimer
T@"NSURLSession",R,N,V_session
TB,N,GisActive,V_active
T@"HMFNetMonitor",R,N,V_reachabilityMonitor
T@"NSOperationQueue",R,N,V_reachabilityProbeQueue
T@"HMFNetManager",R,N,V_netManager
T@"HMFTimer",&,N,V_delegatedPingTimer
pinging
TB,N,GisPinging,V_pinging
TB,N,GisReachable,V_reachable
T@"<HMFHTTPClientDelegate>",W,V_delegate
T@"NSURL",R,C,N,V_baseURL
T@"HMFNetService",R,C,N,V_netService
TB,N,V_allowAnonymousConnection
T@"HMFHTTPClientConfiguration",R,C,V_configuration
scheme
clientDidBecomeReachable:
clientDidBecomeUnreachable:
isResolved
code
operations
null
all:
allSettled:
any:
nameDataSource
marketingDataSource
serialNumberDataSource
productInfoDataSource
softwareVersionDataSource
migrationDataSource
isMigrating
WiFiDataSource
bluetoothLEDataSource
productColorDataSource
dataSource:didUpdateMigrating:
_nameDataSource
_marketingDataSource
_serialNumberDataSource
_productInfoDataSource
_softwareVersionDataSource
_migrationDataSource
_WiFiDataSource
_bluetoothLEDataSource
_productColorDataSource
T@"<HMFSystemInfoNameDataSource>",R,N,V_nameDataSource
T@"<HMFSystemInfoMarketingInformationDataSource>",R,N,V_marketingDataSource
T@"<HMFSystemInfoSerialNumberDataSource>",R,N,V_serialNumberDataSource
T@"<HMFSystemInfoProductInfoDataSource>",R,N,V_productInfoDataSource
T@"<HMFSystemInfoSoftwareVersionDataSource>",R,N,V_softwareVersionDataSource
T@"<HMFSystemInfoMigrationDataSource>",R,N,V_migrationDataSource
T@"<HMFSystemInfoWiFiDataSource>",R,N,V_WiFiDataSource
T@"<HMFSystemInfoBluetoothLEDataSource>",R,N,V_bluetoothLEDataSource
T@"<HMFSystemInfoProductColorDataSource>",R,N,V_productColorDataSource
T@"HMFSoftwareVersion",R,C
migrating
TB,R,GisMigrating
initWithPlatform:class:variant:softwareVersion:color:modelIdentifier:
decodeSoftwareVersionWithCoder:
encodeSoftwareVersion:withCoder:
initWithPlatform:class:softwareVersion:
initWithPlatform:class:variant:softwareVersion:
initWithPlatform:class:variant:softwareVersion:color:
initWithPlatform:class:softwareVersion:modelIdentifier:
Tq,R,V_productPlatform
Tq,R,V_productClass
Tq,R,V_productVariant
T@"HMFSoftwareVersion",R,N,V_softwareVersion
Tq,R,N,V_productColor
T@"NSString",R,N,V_modelIdentifier
requestRef
bodyData
method
setMethod:
setHeaders:
_requestRef
_bodyStream
_connection
_bodyData
T@"NSMutableData",R,N,V_bodyData
T^{_CFHTTPServerRequest=},R,N,V_requestRef
T^{__CFReadStream=},R,N,V_bodyStream
T@"_HMFCFHTTPServerConnection",R,W,N,V_connection
defaultCache
T@"HMFCache",R
isExists
_exists
_URL
T@"NSURL",R,C,V_URL
exists
TB,R,GisExists,V_exists
defaultManager
URLsForDirectory:inDomains:
URLByAppendingPathComponent:
path
fileExistsAtPath:isDirectory:
fileURLWithPathComponents:
timeout
qualityOfService
userInfo
headers
messagePayload
logEventSession
setTimeout:
setTransport:
setUserInfo:
setMessagePayload:
setLogEventSession:
_timeout
_qualityOfService
_destination
_userInfo
_headers
_messagePayload
_logEventSession
_responseHandler
T@"NSUUID",C,N,V_identifier
T@"NSString",C,N,V_name
Td,N,V_timeout
Tq,N,V_qualityOfService
T@"HMFMessageDestination",&,N,V_destination
T@"HMFMessageTransport",W,N,V_transport
T@"NSDictionary",C,N,V_userInfo
T@"NSDictionary",C,N,V_headers
T@"NSDictionary",C,N,V_messagePayload
T@"HMFLogEventSession",&,N,V_logEventSession
T@?,C,N,V_responseHandler
initWithName:destination:payload:
initWithName:qualityOfService:destination:payload:
initWithName:qualityOfService:destination:userInfo:headers:payload:
__initWithInternalMessage:
respondWithPayload:
initWithInternalMessage:
decodeDoubleForKey:
allowedClassesForXPC
decodeObjectOfClasses:forKey:
encodeDouble:forKey:
activityNameWithMessageName:
messageWithName:destination:payload:
messageWithName:qualityOfService:destination:payload:
T@"NSSet",R,C
respondWithSuccess
respondWithPayload:error:
T@"HMFMessageInternal",R,N,V_internal
T@"NSUUID",C,N
T@"HMFMessageDestination",&,N
T@"NSDictionary",C,N
T@?,C,N
Td,R,N
T@"HMFMessageTransport",R,W,N
T@"HMFActivity",R,N
T@"NSDictionary",R,C,N
initWithName:identifier:messagePayload:responseHandler:
allMessageDestinations
messageWithName:messagePayload:
messageWithName:messagePayload:responseHandler:
messageWithName:identifier:messagePayload:
messageWithMessage:messagePayload:
messageWithMessage:messagePayload:responseHandler:
unarchivedObjectForKey:ofClasses:
hmf_objectsAreKindOfClass:
URLForKey:
predicateForKey:
arrayOfDateComponentsForKey:
fileHandleForKey:
setUserInfoValue:forKey:
setHeaderValue:forKey:
T@"NSUUID",C,D,N
T@"NSString",C,D,N
Td,D,N
Tq,D,N
T@"HMFMessageDestination",&,D,N
T@"HMFMessageTransport",W,D,N
T@"HMFActivity",&,D,N
T@"NSDictionary",C,D,N
T@?,C,D,N
insertString:atIndex:
hmf_cachedInstanceForString:
setWithCapacity:
hmf_setOfCachedInstancesForStrings:
initWithObject:forKey:
initWithArray:copyItems:
initWithObjects:orderedKeySet:
initWithObjects:forKeys:copyObjects:copyKeys:
initBySortingDictionary:copyItems:keyComparator:
objectAtIndex:
enumerateObjectsWithOptions:usingBlock:
isEqualToOrderedSet:
isEqualToArray:
failWithError:
initWithObjects:forKeys:
orderedDictionary
orderedDictionaryWithObject:forKey:
initBySortingDictionary:
unorderedCopy
mutableUnorderedCopy
_objects
_keys
setArray:
removeAllObjects
unionOrderedSet:
setBySortingDictionary:keyComparator:
addObjectsFromArray:
setOrderedDictionary:
setBySortingDictionary:
sortedArrayUsingComparator:
store
_store
T^{__SCDynamicStore=},R,N,V_store
futureForOperation:
isFinished
peerAddress
connection:didCloseWithError:
initWithInternalRequest:
initWithConnection:
openWithCompletionHandler:
sendResponse:completionHandler:
T@"_HMFCFHTTPServerConnection",R,N,V_internal
T@"HMFNetAddress",R,N
T@"<HMFHTTPClientConnectionDelegate>",W,V_delegate
initWithReceiver:targetUUID:name:policies:
dispatchContextForMessage:
_hash
_receiver
_target
_policies
T@"NSObject<OS_dispatch_queue>",R,V_queue
T@"<HMFMessageReceiver>",R,W,V_receiver
T@"NSUUID",R,C,V_target
T@"NSArray",R,C,V_policies
TQ,R,V_hash
handler
_handler
T@?,R,C,V_handler
selector
_selector
T:,R,V_selector
messageReceiveQueue
hmf_isEqualToUUID:
hmf_bytesAsData
hmf_isEqualToUUIDString:
zeroUUID
hmf_UUIDWithBytesAsData:
T@"NSData",R
initWithNamespace:data:
hmf_UUIDWithNamespace:data:
addObserver:selector:name:object:
removeObserver:name:object:
removeObserver:
postNotification:
initWithTimeInterval:sinceDate:
currentCalendar
components:fromDate:toDate:options:
localTimeZone
hmf_dateComponentsUsingTimeZone:
components:fromDate:
hmf_dateComponents
T@"NSDateComponents",R,C
dateComponents
timeIntervalDescription:
_addressFamily
_addressString
TQ,R,N,V_addressFamily
T@"NSString",R,C,N,V_addressString
_in6
rangeOfString:options:
stringByReplacingCharactersInRange:withString:
normalizedHostname:
hostname
_hostname
T@"NSString",R,C,N,V_hostname
localAddress
T@"HMFNetAddressInternal",R,N,V_internal
hmf_isInteger
whitespaceCharacterSet
decimalDigitCharacterSet
invertedSet
rangeOfCharacterFromSet:
hmf_isNumeric
hmf_numeric
TB,R,Ghmf_isNumeric
hmf_integer
TB,R,Ghmf_isInteger
removeObserver:forKeyPath:
service
_service
T@"HMFNetService",R,V_service
caseInsensitiveCompare:
algorithm
initWithAlgorithm:value:
_algorithm
Tq,R,V_algorithm
T@"NSData",R,C,V_value
isWoWAsserted
T@"<HMFWiFiManagerDataSourceDelegate>",W,N
assertionActive
TB,R,GisAssertionActive
wowAsserted
TB,N,GisWoWAsserted,SsetWoWAsserted:
TB,R,N,GisCaptive
cancelAllOperationsWithError:
_willChangeValuesForKeys:
isReady
_didChangeValuesForKeys:
isAsynchronous
timeoutDate
_executing
_finished
_qosWasSet
T@"NSUUID",R,V_identifier
T@"HMFTimer",R,N,V_timer
T@"HMFActivity",&,V_activity
T@"NSDate",R,C
T@"NSError",R,C
arrayByAddingObject:
executionBlocks
blockOperationWithBlock:
_executionBlocks
T@"NSArray",R,C,V_executionBlocks
pointerAtIndex:
removePointerAtIndex:
hmf_removePointer:
addPointer:
hmf_removeObject:
hmf_addObject:
objectHash
_object
_objectHash
TQ,R,N,V_objectHash
T@,R,W,V_object
isMainThread
T@"HMFMessageDestination",R,C
T@"NSUUID",R,C
T@"NSUUID",R,C,N,V_target
_method
T@"NSURL",C,N,V_URL
T@"NSString",C,N,V_method
T@"NSDictionary",&,N,V_headerFields
T@"NSData",&,N,V_body
T@"HMFActivity",R,N,V_activity
timeoutInterval
initWithURL:cachePolicy:timeoutInterval:
setHTTPBody:
setHTTPMethod:
setAllHTTPHeaderFields:
setTimeoutInterval:
_timeoutInterval
Td,N,V_timeoutInterval
T@"HMFHTTPRequestInternal",R,N,V_internal
T@"NSURL",R,C,N
T@"NSURLRequest",R,C,N
initWithURL:method:body:timeoutInterval:
canInitWithMessage:
initWithMessage:
policyClasses
requiredPolicyOfClass:fromPolicies:error:
acceptWithPolicies:error:
policyOfClass:fromPolicies:
T@"HMFMessage",R,C,V_message
redactedDescription
capitalizedString
formatter
_formatter
T@"<NSObject>",R,N,V_value
T@"NSFormatter",R,C,N,V_formatter
floatValue
isEqualToNumber:
allObjects
hmf_empty
TB,R,Ghmf_isEmpty
defaultClass
_classes
_defaultClass
T#,R,N,V_defaultClass
response
_responseRef
_completionHandler
_response
T@"_HMFCFHTTPMessage",R,N,V_response
T@"_HMFCFHTTPServerRequest",R,N,V_request
T^{_CFHTTPServerResponse=},R,N,V_responseRef
T@?,C,N,V_completionHandler
_ready
_authorization
T@"HMFLocationAuthorization",R,V_authorization
T@"CLLocationManager",R,V_manager
initWithBlock:
_block
initWithServiceType:name:port:options:netManager:
initWithDomain:type:name:port:
stopPublishing
setPort:
startPublishingWithCompletionHandler:
stopWithError:
_stopWithError:
server:didStopWithError:
requestHandlers
evaluateWithObject:
hmf_objectPassingTest:
server:shouldAcceptConnection:
addConnection:
removeConnection:
_handleOpenedConnection:
_handleClosedConnection:
_handleReceivedRequest:connection:
dumpState
initWithServiceType:name:port:options:
startWithCompletionHandler:
registerRequestHandler:
unregisterRequestHandler:
_requestHandlers
_connectionIdleTimeout
T@"_HMFCFHTTPServer",&,N,V_internal
T@"<HMFHTTPServerDelegate>",W,V_delegate
TQ,R,V_port
Td,V_connectionIdleTimeout
T@"HMFMutableNetService",R,N,V_netService
T@"NSArray",R,C,V_connections
getValue:size:
encodeBool:forKey:
numberWithFloat:
numberWithBool:
initWithBool:
getValue:
objCType
charValue
classForCoder
decodeBoolForKey:
initWithChar:
initWithUnsignedChar:
initWithShort:
initWithUnsignedShort:
initWithInt:
initWithUnsignedInt:
initWithLong:
initWithUnsignedLong:
initWithLongLong:
initWithUnsignedLongLong:
initWithFloat:
initWithDouble:
initWithInteger:
initWithUnsignedInteger:
currentNetworkFlags
setCurrentNetworkFlags:
handleNetworkReachabilityChange:
networkReachabilityRef
_currentNetworkFlags
_networkReachabilityRef
T^{__SCNetworkReachability=},R,N,V_networkReachabilityRef
TI,N,V_currentNetworkFlags
initWithKeyPath:object:options:
__invalidate
keyPath
initWithKeyPath:object:
setHandler:
_observing
_keyPath
T@"NSString",R,C,V_keyPath
T@?,C,V_handler
hmf_registerObserverForKeyPath:options:handler:
lock
lockWithOptions:
initWithOptions:
assertOwner
assertNotOwner
_internalOptions
mainScheduler
performWithQualityOfService:block:
performSelector:target:argument:
performSelector:target:argument:qualityOfService:
_operationQueue
queuePriority
setQueuePriority:
initWithTarget:selector:object:
hmf_objectWithOptions:passingTest:
indexOfObjectWithOptions:passingTest:
hmf_objectsWithOptions:passingTest:
hmf_objectsPassingTest:
describeElements:
hmf_removeFirstObject
hmf_dequeue
hmf_maybeDequeue
hmf_enqueue:
hmf_enqueueMultiple:
initWithDomain:type:name:
TXTRecordData
updateTXTRecordWithData:
startMonitoring
stopMonitoring
resolveBlocks
netServiceDidStartPublishing:
netServiceDidStopPublishing:
notifyUpdatedAddresses:
netService:didUpdateAddresses:
isEqualToDictionary:
dictionaryFromTXTRecordData:
setTXTRecord:
removeAllTXTRecordObjects
resolveState
bestAddress
_reallyResolveWithTimeout:completionHandler:
resolveRunningState
setResolveRunningState:
resolveWithTimeout:
setResolveState:
setHostname:
setAddresses:
setResolved:
netServiceWillPublish:
netServiceDidPublish:
netService:didNotPublish:
netServiceWillResolve:
netServiceDidResolveAddress:
netService:didNotResolve:
netServiceDidStop:
netService:didUpdateTXTRecordData:
netService:didAcceptConnectionWithInputStream:outputStream:
TXTRecord
_addresses
_TXTRecord
_publishing
_hostName
_resolveState
_resolveRunningState
_resolveBlocks
T@"NSMutableArray",R,N,V_resolveBlocks
Tq,N,V_resolveState
Tq,N,V_resolveRunningState
T@"NSNetService",R,N,V_internal
publishing
TB,GisPublishing,V_publishing
T@"<HMFNetServiceDelegate>",W,V_delegate
resolved
TB,R,GisResolved,V_resolved
T@"HMFNetAddress",R,C,V_hostName
updateTXTRecord
dataFromTXTRecordDictionary:
setTXTRecordData:
setPublishBlock:
publishWithOptions:
publishBlock
setTXTRecordValue:forKey:
removeTXTRecordValueForKey:
_publishBlock
T@?,C,N,V_publishBlock
TQ,D
T@"NSDictionary",C,D
netService:didUpdateTXTRecord:
dictionaryWithDictionary:
submitEventWithName:serviceName:uploadImmediately:payload:
setSessionFactory:
addCommonField:withValue:
removeCommonField:
submitEventWithName:serviceName:payload:
_sessionFactory
initWithSessionInfo:userInfo:frameworksToCheck:
sessionWithServiceName:samplingUUID:containsRealtime:
submitter
sessionUUID
isRealtime
submitMessages:serviceName:sessionUUID:isRealtime:
initWithServiceName:sessionUUID:isRealtime:submitter:timeSourceBlock:
lastEventTime
timeSourceBlock
_isOpen
_queuedEvents
_isRealtime
_lastEventTime
_sessionUUID
_submitter
_timeSourceBlock
T@"NSUUID",R,N,V_sessionUUID
TB,R,N,V_isRealtime
T@"<_HMFLogBackendSubmitterDelegate>",R,W,N,V_submitter
T@?,R,N,V_timeSourceBlock
Td,R,N,V_lastEventTime
changeOperationState:
rtcFactory
messages
sendMessageWithDictionary:error:
startConfigurationWithCompletionHandler:
staleSessionBlock
initWithMessages:serviceName:sessionUUID:isRealtime:rtcFactory:staleSessionBlock:
_operationState
_messages
_rtcFactory
_staleSessionBlock
T@"NSArray",R,N,V_messages
T@"<HMFRTCSessionFactory>",R,N,V_rtcFactory
T@?,R,N,V_staleSessionBlock
weakObjectsPointerArray
initWithRTCFactory:timeSourceBlock:
setDay:
setMonth:
setYear:
initWithCalendarIdentifier:
timeZoneForSecondsFromGMT:
dateFromComponents:
_isTimeValid
compact
sendMetaEventWithName:forServiceName:
checkForStaleSessions
_activeSessions
_nextStaleCheckTime
__isTimeValid
T@"NSOperationQueue",R,N,V_queue
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSObject"16@0:8
v16@0:8
@24@0:8@16
d16@0:8
@"NSObject<OS_os_transaction>"
v24@0:8@16
@48@0:8#16@24@32^@40
@32@0:8@16@24
@40@0:8@16#24@32
@32@0:8@16^@24
v24@0:8@"HMFTimer"16
v32@0:8@16d24
v32@0:8@16@24
@?16@0:8
v24@0:8@?16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"HMFTimer"
@"<HMFStagedValueDelegate>"
@32@0:8d16Q24
@"NSObject<OS_dispatch_queue>"
@"NSDate"
@"<HMFTimerDelegate>"
@"NSObject<OS_dispatch_source>"
@48@0:8d16d24q32Q40
q16@0:8
@24@0:8^{_NSZone=}16
@"NSArray"16@0:8
@"NSString"24@0:8@16
@24@0:8^@16
@32@0:8@16@?24
{_HMFFutureBlockOutcome=q@}16@0:8
@24@0:8@?16
@32@0:8@?16@?24
@40@0:8@16@?24@?32
@"NSError"
@"HMFPromise"
@"HMFAsyncFuture"
{atomic_flag="_Value"AB}
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8@16@24@32
@"NSString"
@"HMFPairingKey"
@"NSData"
@32@0:8@16Q24
@24@0:8Q16
@40@0:8@16@24q32
@40@0:8q16@24q32
@24@0:8^{__CFHTTPMessage=}16
v24@0:8q16
^{__CFHTTPMessage=}16@0:8
^{__CFHTTPMessage=}
@24@0:8d16
@40@0:8@16@24@?32
@"NSPredicate"
@"NSDictionary"16@0:8
@"HMFSoftwareVersion"16@0:8
v20@0:8B16
@"<HMFNetMonitorDelegate>"
@"HMFNetAddress"
@40@0:8q16@24@32
@48@0:8q16@24@32@40
@56@0:8q16@24@32@40@48
@24@0:8q16
@32@0:8q16@24
@40@0:8Q16@24@32
B24@0:8^@16
@"HMFWiFiManager"
v28@0:8@16B24
v28@0:8@"<HMFWiFiManagerDataSource>"16B24
v24@0:8@"<HMFWiFiManagerDataSource>"16
@32@0:8Q16@24
@"HMFMACAddress"
@"<HMFWiFiManagerDataSource>"
@"NSHashTable"
v40@0:8@16@24@32
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
i16@0:8
v32@0:8q16@?24
{hmf_unfair_data_lock_s="lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}}
@"NSMutableSet"
@"__HMFLocationAuthorizationRequest"
@"__HMFLocationAuthorizationMarkOperation"
@"NSBundle"
@"CLLocationManager"
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@"NSEnumerator"16@0:8
v32@0:8Q16@?24
@"NSArray"32@0:8@"NSArray"16@24
v24@0:8@?<v@?@@^B>16
v32@0:8Q16@?<v@?@@^B>24
@40@0:8Q16{_HMFRate=Qd}24
B24@0:8Q16
{_HMFRate=Qd}16@0:8
{os_unfair_recursive_lock_s="ourl_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"ourl_count"I}
{_HMFRate="value"Q"period"d}
@40@0:8Q16Q24Q32
q24@0:8@16
@40@0:8{?=qqq}16
@48@0:8Q16Q24Q32@40
{?=qqq}16@0:8
@32@0:8@16d24
I16@0:8
v20@0:8I16
@"NSUUID"
v32@0:8@"NSString"16@"NSDictionary"24
@"NSUUID"16@0:8
@"HMFLogEventSessionVoucher"16@0:8
@48@0:8@16@24@32@40
@"NSDictionary"
@"<HMFLogBackendSession>"
@44@0:8@16@24B32@36
@"<HMFLogEventSession>"44@0:8@"NSUUID"16@"NSString"24B32@"NSDictionary"36
v32@0:8@16@"<NSCopying>"24
v24@0:8@"NSArray"16
@"NSMutableDictionary"
B40@0:8^@16^@24d32
B32@0:8@16^B24
B32@0:8@16^@24
q32@0:8@16^@24
@36@0:8@16B24@28
v32@0:8@16@?24
@"<HMFMessageTransportDelegate>"
v36@0:8@16@24B32
v24@0:8@"NSNetServiceBrowser"16
v32@0:8@"NSNetServiceBrowser"16@"NSDictionary"24
v36@0:8@"NSNetServiceBrowser"16@"NSString"24B32
v36@0:8@"NSNetServiceBrowser"16@"NSNetService"24B32
@20@0:8B16
@"NSMutableOrderedSet"
@"<HMFNetServiceBrowserDelegate>"
@"NSNetServiceBrowser"
v32@0:8^{__CFString=}16@24
@"NSMutableArray"
@32@0:8Q16Q24
v24@0:8d16
^{_CFHTTPServer=}16@0:8
@"<_HMFCFHTTPServerDelegate>"
^{_CFHTTPServer=}
v40@0:8@16@24@?32
v48@0:8@16@24Q32@?40
v24@0:8@"NSString"16
@40@0:8@16@24Q32
@48@0:8@16@24@32Q40
@?24@0:8@?16
@?32@0:8q16@?24
@"NSObject<OS_os_activity>"
@"NSObject<OS_voucher>"
@"<HMFLogEventSession>"
@"HMFActivity"
@"NSArray"
v24@0:8Q16
@"NSThread"
@"HMFHTTPResponseInternal"
@"HMFHTTPRequest"
v48@0:8@16@24@32^v40
v32@0:8@"HMFMessageTransport"16@"HMFMessage"24
v40@0:8@16@24:32
v48@0:8@16@24@32:40
v56@0:8@16@24@32@40:48
v48@0:8@16@24@32@?40
@"NSSet"
@"HMFMessageTransport"
v56@0:8@16@24@32@?40@?48
@24@0:8^{_CFHTTPServerConnection=}16
v24@0:8^{_CFHTTPServerRequest=}16
v40@0:8@16^{__CFReadStream=}24Q32
v32@0:8q16@24
v40@0:8q16@24@32
v32@0:8^{_CFHTTPServerResponse=}16@24
^{_CFHTTPServerConnection=}16@0:8
@"<_HMFCFHTTPServerConnectionDelegate>"
^{_CFHTTPServerConnection=}
f16@0:8
^{IONotificationPort=}16@0:8
^{IONotificationPort=}
@"_HMFNetManagerWoWAssertion"
@"<HMFSystemInfoNameDataSourceDelegate>"16@0:8
v24@0:8@"<HMFSystemInfoNameDataSourceDelegate>"16
@"HMFMACAddress"16@0:8
^{MGNotificationTokenStruct=}16@0:8
@"<HMFSystemInfoNameDataSourceDelegate>"
@"HMFSoftwareVersion"
^{MGNotificationTokenStruct=}
@40@0:8@16Q24@32
#24@0:8@16
v32@0:8#16@24
@"HMFClassRegistry"
@48@0:8@16Q24@32@40
@"<NSObject>"
@"HMFPreference"
@56@0:8@16Q24@32@40@48
@48@0:8{?=[8I]}16
@20@0:8i16
B24@0:8^{?=[8I]}16
^{?=[8I]}
@"NSURL"
v24@0:8@?<v@?>16
@28@0:8@16B24
v24@0:8@"HMFNetMonitor"16
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
@56@0:8@16@24@32@40@48
B20@0:8B16
@"HMFHTTPClientConfiguration"
@"<HMFHTTPClientDelegate>"
@"HMFNetService"
@"NSURLSession"
@"HMFNetMonitor"
@"NSOperationQueue"
@"HMFNetManager"
v32@0:8@"<HMFSystemInfoNameDataSource>"16@"NSString"24
v28@0:8@"<HMFSystemInfoMigrationDataSource>"16B24
@"<HMFSystemInfoNameDataSource>"
@"<HMFSystemInfoMarketingInformationDataSource>"
@"<HMFSystemInfoSerialNumberDataSource>"
@"<HMFSystemInfoProductInfoDataSource>"
@"<HMFSystemInfoSoftwareVersionDataSource>"
@"<HMFSystemInfoMigrationDataSource>"
@"<HMFSystemInfoWiFiDataSource>"
@"<HMFSystemInfoBluetoothLEDataSource>"
@"<HMFSystemInfoProductColorDataSource>"
@40@0:8q16q24@32
@48@0:8q16q24q32@40
@56@0:8q16q24q32@40q48
@48@0:8q16q24@32@40
@64@0:8q16q24q32@40q48@56
@32@0:8@16^{_CFHTTPServerRequest=}24
^{_CFHTTPServerRequest=}16@0:8
^{__CFReadStream=}16@0:8
^{_CFHTTPServerRequest=}
^{__CFReadStream=}
@"_HMFCFHTTPServerConnection"
@"NSMutableData"
@"HMFMessageDestination"
@"HMFLogEventSession"
@48@0:8@16q24@32@40
@64@0:8@16q24@32@40@48@56
B32@0:8@16@24
@"HMFMessageInternal"
@48@0:8@16@24@32@?40
@40@0:8@16@24B32B36
@36@0:8@16B24@?28
@"NSOrderedSet"
^{__SCDynamicStore=}16@0:8
^{__SCDynamicStore=}
@"HMFFuture"
v32@0:8@"_HMFCFHTTPServerConnection"16@"_HMFCFHTTPServerRequest"24
@"<HMFHTTPClientConnectionDelegate>"
@56@0:8@16@24@32@40:48
@"<HMFMessageReceiver>"
:16@0:8
v48@0:8@16:24@32@40
@24@0:8r^{sockaddr=CC[14c]}16
{sockaddr_in="sin_len"C"sin_family"C"sin_port"S"sin_addr"{in_addr="s_addr"I}"sin_zero"[8c]}
{sockaddr_in6="sin6_len"C"sin6_family"C"sin6_port"S"sin6_flowinfo"I"sin6_addr"{in6_addr="__u6_addr"(?="__u6_addr8"[16C]"__u6_addr16"[8S]"__u6_addr32"[4I])}"sin6_scope_id"I}
@"HMFNetAddressInternal"
@"<HMFWiFiManagerDataSourceDelegate>"16@0:8
v24@0:8@"<HMFWiFiManagerDataSourceDelegate>"16
B24@0:8^v16
@"HMFHTTPRequestInternal"
@48@0:8@16@24@32d40
q40@0:8@16@24^@32
@32@0:8#16@24
@40@0:8#16@24^@32
@"HMFMessage"
@48@0:8@16@24Q32@40
@"NSFormatter"
@24@0:8#16
@32@0:8@16q24
^{_CFHTTPServerResponse=}16@0:8
^{_CFHTTPServerResponse=}
@"_HMFCFHTTPServerRequest"
@"_HMFCFHTTPMessage"
@"HMFLocationAuthorization"
v24@0:8@"_HMFCFHTTPServer"16
v32@0:8@"_HMFCFHTTPServer"16@"_HMFCFHTTPServerConnection"24
v32@0:8@"HMFHTTPClientConnection"16@"HMFHTTPRequest"24
v32@0:8@"HMFHTTPClientConnection"16@"NSError"24
@48@0:8@16@24Q32Q40
@56@0:8@16@24Q32Q40@48
@"_HMFCFHTTPServer"
@"<HMFHTTPServerDelegate>"
@"HMFMutableNetService"
@20@0:8c16
@20@0:8C16
@20@0:8s16
@20@0:8S16
@20@0:8I16
@20@0:8f16
v24@0:8^v16
v32@0:8^v16Q24
r*16@0:8
c16@0:8
^{__SCNetworkReachability=}16@0:8
^{__SCNetworkReachability=}
@40@0:8@16Q24@?32
@32@0:8q16@?24
@48@0:8:16@24@32q40
@32@0:8Q16@?24
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
v32@0:8d16@?24
@"NSNetService"
@"<HMFNetServiceDelegate>"
@36@0:8@16@24B32
v44@0:8@16@24B32@36
@"<HMFLogEventSessionFactory>"
@"<HMFRTCReporting>"36@0:8@"NSString"16@"NSUUID"24B32
B24@0:8@"NSDictionary"16
@52@0:8@16@24B32@36@?44
@"<_HMFLogBackendSubmitterDelegate>"
@60@0:8@16@24@32B40@44@?52
@"<HMFRTCSessionFactory>"
v44@0:8@16@24@32B40
v44@0:8@"NSArray"16@"NSString"24@"NSUUID"32B40
@"<HMFLogBackendSession>"36@0:8@"NSString"16@"NSUUID"24B32
@"NSPointerArray"
@(#)PROGRAM:HMFoundation  PROJECT:HMFoundation-725.3.1
fffff
V\>>>
W]>>>(].
CLU^g
%{public}@Missing internal location manager
%{public}@Marking as having received location
%{public}@Failed to mark with exception: %@
%{public}@Creating transaction '%@'
%{public}@Completed transaction '%@' - held for %.3fs
%{public}@Releasing transaction '%@'
%{public}@Failed to mark
%{public}@Successfully marked
%{public}@Failed to unarchive with error: %@
%{public}@Failed to unarchive due to invalid data: %@
%{public}@Notify of expired value: %@ committed value: %@ delegate: %@
%{public}@[HMFTimer] Expiration, %f, must be greater than 0
%{public}@[HMFExponentialBackoffTimer] The exponential factor cannot be 0
%{public}@[HMFExponentialBackoffTimer] The minimum time interval, %f, must be greater than 0
%{public}@[HMFExponentialBackoffTimer] The maximum time interval, %f, must be greater than or equal to the minimum time interval, %f
%{public}@Exception while searching list (%@)
%{public}@The identifier is required
%{public}@The public key is required
%{public}@The pairing key data must be %tu bytes long
%{public}@Parameter is requred: 'methodPredicate'
%{public}@Invalid method predicate
%{public}@Parameter is requred: 'URLPredicate'
%{public}@Invalid URL predicate
HMF API Misuse: Unsupported type %@ with 'pii' annotation
%{public}@Reachability changed to: %@
%{public}@Notifying delegate address is reachable
%{public}@Notifying delegate address is unreachable
%{public}@Activating with options: %@
%{public}@Deactivating
%{public}@Updating activation with options: %@
%{public}@Taking active assertion with reason: %@
%{public}@Taking WoW assertion
%{public}@Releasing WoW assertion
%{public}@Re-Enabling WoW
%{public}@WiFi link is %@
%{public}@Current network SSID updated from %@ to %@
%{public}@Starting to monitor with observer: %@
%{public}@Observer deallocated, stopping monitoring for observer: %@
%{public}@Stopping to monitor with observer: %@
%{public}@Location support not available, unable to request authorization
%{public}@Failed to request authorization with error: %@
%{public}@completing location authorization mark
%{public}@Received notification of authorization status changed to: %d
%{public}@Starting to monitor
%{public}@Stop monitoring
%{public}@Received notification authorized: %@
%{public}@Decrementing by %tu
%{public}@Cannot decrement, not enough budget
%{public}@Starting timer
%{public}@Successfully decremented to: %tu
%{public}@Incrementing
%{public}@Stopping timer
%{public}@Incremented to: %tu
%{public}@Failed to create version string regex with error: %@
%{public}@Invalid version string: %@
%{public}@Failed to create assertion with error: %ld
%{public}@[%@] Creating session with service name: %@
%{public}@[%@] Submitting event: %@
%{public}@Failed to convert string to hardware address %@: %d
%{public}@Failed to create hardware address with invalid length: %lu
%{public}@Failed to create hardware address with data of invalid length: %@
%{public}@Failed to create MAC address with string of invalid length: %lu
%{public}@Failed to create MAC address with data of invalid length: %@
%{public}@Failed to deserialize object of classes: %@, from data %@, with error: %@
%{public}@Failed to create internal net service browser
%{public}@The browser is already browsing
%{public}@Start browsing for %@%@
%{public}@Stopping the browse
%{public}@Browser started browsing
%{public}@Browse did stop
%{public}@Failed to browse
%{public}@Failed to browse with error: %@
%{public}@Added service: %@
%{public}@The browse domain, %@, was removed
%{public}@Removed service: %@
%{public}@Received system memory pressure source event: %@
%{public}@Received process memory pressure source event: %@
%{public}@Failed to create server, server is invalid
%{public}@Requiring TLS in anonymous mode
%{public}@Failed to bind server
%{public}@Server invalidated
%{public}@Server received error: %@
%{public}@Server did open connection: %@
%{public}@Server did close connection: %@
%{public}@Unable to acquire the assertion : %@
HMFActivity
%{public}@Thread left active (%tu): %@
Identifier = %@, Parent = %@, Name = %@
%{public}@Started
%{public}@Failed to create memory assertion
%{public}@Failed to create power assertion
%{public}@Using existing clientMetricIdentifier: %@ and dropping: %@
Reason = %@
%{public}@Marked with reason: %@
%{public}@Marked
%{public}@Attempted to enabled logging with service name %@ when service name %@ was already enabled in the current activity
Identifier = %@, Name = %@
%{public}@Invalidated after %fs
%{public}@Begining activity in context: %@
%{public}@Adopting voucher: %@
%{public}@Ending activity in context: %@
%{public}@Restoring voucher: %@
%{public}@Unable to request authorization
%{public}@Requesting authorization
%{public}@Received notification of status: %d
%{public}@Invalidating during deallocation
%{public}@Acquiring
%{public}@Invalidating
%{public}@Object %@ of class %@ mismatches cache class %@:
%{public}@Object %@ of class %@ does not conform to NSCopying protocol
%{public}@Expecting to be able to convert %@ into a UUID.
%{public}@Processing pending index operations : [handlers: %@] [destinationHandlerIndexes : %@] [nameHandlerIndexes : %@]
%{public}@Finished processing index operations  : [handlers: %@] [destinationHandlerIndexes : %@] [nameHandlerIndexes : %@]
%{public}@Time take to index: %f
%{public}@Removing handlers at indexes: %@
%{public}@Dispatching message: %@
%{public}@Message %@ rejected by %@: %@
%{public}@Invoking handler: %@
%{public}@No handlers for message: %@
%{public}@Successfully dispatched message: %@
%{public}@Message %@ was not handled with error: %@
%{public}@Cannot send with response handler if the message already has a response handler
%{public}@Registering handler: %@
%{public}@Updating handler: %@
%{public}@Failed to create connection, connection is invalid
%{public}@Closed
%{public}@Opened
%{public}@Received request: %@
%{public}@No body stream for request: %@
%{public}@Opening body stream for request: %@
%{public}@Failed to open request body stream for request %@
%{public}@Sending a 500 (Internal Server Error) for the request: %@
%{public}@Received complete request: %@
%{public}@Sending a 501 (Not Implemented) for the request: %@
%{public}@Closing body stream for request: %@
%{public}@Reading %ld bytes for request: %@
%{public}@Failed to read available data for request: %@
%{public}@Got zero bytes read and no accumulated read bytes for request: %@
%{public}@Received body stream error for request: %@
%{public}@Received unknown event: %ld, for request: %@
%{public}@Failed to send internal response, %@, with error: %@
%{public}@The response is invalid: %@
%{public}@Sending response: %@
%{public}@Completed sending response, %@, with error: %@
%{public}@Failed to send response, %@, with error: %@
%{public}@Successfully sent response: %@
%{public}@Connection invalidated
%{public}@Connection received error: %@
%{public}@Unable to determine the current battery level
%{public}@Unable to determine the current battery state
%{public}@Battery state changed: %tu
%{public}@Cannot create HMFWiFiNetworkInfo with MACAddress: %@ and SSID: %@
%{public}@Adding new preference: %@
%{public}@Invalid preference key representation: %@
%{public}@Unknown preference value: %@
%{public}@Unable to determine current audit token
%{public}@Scheme is required
%{public}@Host address is required
%{public}@Port is required
%{public}@Invalid base URL: %@
%{public}@Network service is required
%{public}@Registering for WOW assertion
%{public}@No available IPv4 address, falling back to '%@', WoW may fail.
%{public}@Starting net service reachability resolution
%{public}@Starting confirmation for service: %@
%{public}@Failed to confirm service, marking the client as unreachable
%{public}@Failed to confirm service, the client is already unreachable
%{public}@Confirmed service, requesting application ping
%{public}@Service is unreachable, performing a one-time ping
%{public}@Client ping in progress, dropping ping request
%{public}@Requesting client to perform a ping
%{public}@Delegated ping failed, marking the client as unreachable
%{public}@Delegated ping failed, the client is already unreachable
%{public}@Delegated ping succeeded, marking the client as reachable
%{public}@Going to attempt to retry delegated ping later
%{public}@Request timed out, marking the client as unreachable
%{public}@Request timed out, the client is already unreachable
%{public}@Request failed, starting reachability probe
%{public}@Request cancelled, reachability probe is not started
%{public}@Override the request URL to: %@
%{public}@Sending request: %@
%{public}@Received response, %@, to request, %@, with error: %@
%{public}@Failed to send request, %@, with error: %@
%{public}@Received response: %@
%{public}@Resuming task: %@
%{public}@Cancelling all pending requests
%{public}@Canceling task: %@
%{public}@Invalidating the client
%{public}@Received notification that the client is now reachable
%{public}@Received notification that the client is no longer reachable
%{public}@Delegated ping timer fired
%{public}@Retrying delegated ping
%{public}@Session did become invalid with error: %@
%{public}@Received challenge: %@
%{public}@Received connection challenge, accepting the server's certificate as the client is set to allow anonymous connections
%{public}@Notifying delegate of reachablity change to %@
%{public}@Failed to resolve service with error: %@
%{public}@Received notification that the server is now reachable
%{public}@Cancelling pending confirmations due to reachability change
%{public}@Received notification that the server is now unreachable
%{public}@Updated system name to '%@'
%{public}@Updated migration status to '%@'
%{public}@Unable to determine preferred cache directory
%{public}@Overriding unknown QoS '%tu' to NSQualityOfServiceDefault
%{public}@Name is a required argument
%{public}@Destination is a required argument
%{public}@Invalid userInfo class provided, %@, for message, see <rdar://problem/37677418>
%{public}@Failed to create store
%{public}@Failed to set Notification on DynamicStore
%{public}@Failed to set DispatchQueue on DynamicStore
%{public}@Opening
%{public}@Failed to open connection
%{public}@Closing
%{public}@Received unhandled request: %@
%{public}@Invalid receiver: %@
%{public}@Invalid sockaddr, must be AF_INET
%{public}@Invalid sockaddr, must be AF_INET6
%{public}@inet_ntop() failed  with '%s' (%d) for sockaddr_in6: %@
%{public}@Invalid hostname
%{public}@Invalid socket address family: 0x%02x
%{public}@Operation is already executing
%{public}@Operation is not ready
%{public}@Operation is already complete, aborting.
%{public}@Cancelled operation was not marked finished, marking finished
%{public}@Starting operation
%{public}@Subclasses should override main
%{public}@Cancelling with error: %@
%{public}@Finishing operation
%{public}@Cannot set an activity once an operation has started executing
%{public}@Cannot set an activity once an activity has been set
%{public}@Operation timed out, cancelling
%{public}@Executing %tu blocks
%{public}@A valid object is required
%{public}@Message is not supported: %@
%{public}@Attempting to privately log legacy attribute description for object: %@
%{public}@Failed to create message
%{public}@Marking as ready
%{public}@A valid name is required for publishing
%{public}@Starting
%{public}@Failed to start server
%{public}@Enabling WoW
%{public}@Started server on port %tu
%{public}@Publishing
%{public}@Failed to publish net service with error: %@
%{public}@Published
%{public}@Stopped with error: %@
%{public}@Adding request handler: %@
%{public}@Removing request handler: %@
%{public}@Received request, %@, from connection: %@
%{public}@Failed to handle request: %@
%{public}@Found a matching request handler, %@, for the request, %@, but there was no request block
%{public}@Found a matching request handler, %@, for the request, %@
%{public}@Received connection: %@
%{public}@Accepted connection: %@
%{public}@Failed to open connection, %@, with error: %@
%{public}@Opened connection: %@
%{public}@Rejecting connection: %@
%{public}@Connection closed: %@
%{public}@Closing connection: %@
%{public}@Failed to create network reachability monitor%@.
%{public}@Initial flags: %@
%{public}@Failed to get initial reachability
%{public}@Received notification of updated flags: %@
%{public}@Updating reachability to: %@
%{public}@Deallocating
%{public}@Invalidated
%{public}@Registering
%{public}@Unregistering
%{public}@Received change: %@
%{public}@Skipping resolving service, already have a cached address: %@
%{public}@Skipping resolving service, still running and already resolved
%{public}@Starting to resolve service
%{public}@Net service will resolve
%{public}@Net service resolved
%{public}@Net service failed to resolve with error: %@
%{public}@Net service stopped resolving
%{public}@Net service TXT record updated: %@
%{public}@Service domain is required
%{public}@Service type is required
%{public}@Service name is required
%{public}@Invalid TXT record key, %@, error: %@
%{public}@Invalid TXT record value, %@, error: %@
%{public}@Failed to update TXT record
%{public}@The service is already publishing
%{public}@Cannot publish without a resolved port
%{public}@Failed to create internal net service
%{public}@Start publishing the net service
%{public}@Stopping the net service
%{public}@Net service will publish
%{public}@Failed to publish
%{public}@Failed to publish with error: %@
%{public}@Net service did stop
%{public}@Failed to serialize TXT record key with exception: %@
%{public}@Failed to serialize TXT record value with exception: %@
%{public}@No configured RTC backends for service %@
%{public}@%lu sessions already queued; creating a nil session for service %@
%{public}@[%@] Queuing session containing %lu messages for submission
%{public}@Checking for stale backend sessions
%{public}@Found stale session for service %@
Operation failed.
Unexpected internal state.
v8@?0
Location.Authorization.Mark
%@ is unavailable
v24@?0@"NSDictionary"8@"NSError"16
message && !message.responseHandler
v24@?0@"NSError"8@"NSDictionary"16
v16@?0@"NSError"8
%@ s, 
%@ m, 
%@ h, 
%@ d, 
%@ mo, 
@"HMFTimer"16@?0d8
StagedValue
Timer
Running
Interval
Repeating
HMFTimer delegateQueue can only be set before activation (resume/fire)
You must override %@ in a subclass
keyPath
name
uuid
zoneID
uniqueIdentifier
contextSPIUniqueIdentifier
instanceID
characteristicType
<redacted>
<HMFFuture %p (%@)>
pending
settled
v24@?0@8@"NSError"16
future
%@ %@
Identifier
Public Key
Private Key
HAP.identifier
HAP.publicKey
HAP.privateKey
HAPPairingKey
Hash
HAP.data
<[%tu] %@%@%@>
 ... 
v40@?0r^v8{_NSRange=QQ}16^B32
EEE, d MMM yyyy HH:mm:ss z
en_US
Networking.Monitor
Host
Transfer-Encoding
Content-Length
Content-Type
Date
HMFErrorDomain
HMFDetailedErrorsKey
Already exists.
Not found.
Invalid parameter.
Unconfigured parameter.
Operation not supported.
Server failed to start.
Server failed to advertise.
Nil parameter.
Operation in progress.
Server search failed.
Generic error.
Operation cancelled.
Operation timed out.
Request not handled.
Unexpected result.
Exception.
Aggregate error.
Broken promise.
Unknown error
Identity
State
Homed Version
Home Manager
Sync Manager
Home
Room
Zone
Metadata
Characteristic
Service
Pending Invites
Incoming Invites
Outgoing Invites
BulletinNotification
BulletinNotificationGroup
BulletinNotificationGroupServices
BulletinNotificationGroupCameras
Service Group
Accessory
Secondary Accessory
Bridge
Bridged Accessory
Category
Action Set
Trigger
Timer Trigger
Location
Event
Predicate
Recurrence
Execute Once
Execute Session
User
User Access Token
Removed User
Current User
Resident
Accessory Profile
Accessory Transport
Write Action
Media Action
Keychain
Keychain Item
Mesh
Application Data
HomeNotificationRegistrations
SetupHash
Pending Read Responses
NetService
Shared Home Source Version
Shared Home Update Handler
Shared Home Update Session
HMFWiFiManagerCurrentNetworkDidChangeNotification
manager
reason
Networking.WiFi.Manager
Down
None
Foreground
HMFLocationAuthorizationUpdatedNotification
isAuthorized
authorized
isMonitoring
monitoring
bundleIdentifier
bundle
Authorized
Cannot set queue once the location authorization has started.
B24@?0@"HMFObjectObserver"8^B16
CoreLocation not available
Location authorization in progress
Location.Authorization
CLLocationManager
Unable to find class %s
Get Location Authorization
    
(null)
v32@?0@8@16^B24
model
IOPlatformSerialNumber
IOPlatformExpertDevice
value
full
empty
Limit must be nonzero
Rate is invalid
OperationBudget
^(\d+)(\.(\d+))?(\.(\d+))?.*$
%tu.%tu.%tu
%tu.%tu
HM.major
HM.minor
HM.update
^(\d+)(\.(\d+))?(\.(\d+))?((;(.*))|(\s*\((.*)\))|(\.(.*)))?.*$
%@ (%@)
%ld.%ld.%ld
HM.build
{_HMFFutureBlockOutcome=q@}16@?0@8
v24@?0@8@"NSError"16
{_HMFFutureBlockOutcome=q@}16@?0@"NSError"8
PreventUserIdleSystemSleep
TimeoutActionTurnOff
service
HMFLogging
 formattedString=%@
HMF.data
%@%@{
%@%@ = 
com.apple.HMFoundation.%@%@%@.%tu
<%@%@, Domain = %@, Service Type = %@>
Networking.Service.Browser
%@ - %@
Failed to search for services.
The search domain was removed.
HomeKitEvent
CameraConfiguration
HomeConfiguration
HomeKitRegistration
kHMFPowerLogEventType
HomeKitLinkTypeIP
HomeKitLinkTypeBluetoothLE
HomeKitLinkTypeUnknown
HMFMemoryMonitorSystemMemoryStateDidChangeNotification
HMFMemoryMonitorProcessMemoryPressureNotification
HMFSystemMemoryStateUpdateKey
HMFProcessMemoryStateUpdateKey
HMFSystemMemoryStateUnknown
HMFSystemMemoryStateNormal
HMFSystemMemoryStateWarning
HMFSystemMemoryStateCritical
HMFSystemMemoryStateUndefined
HMFProcessMemoryStateUnknown
HMFProcessMemoryStateWarning
HMFProcessMemoryStateCritical
HMFProcessMemoryStateUndefined
capacity > 0
port <= UINT16_MAX
Networking.HTTP.Server.Internal
assertions.count
nil == self->_internalAssertions
v32@?0@"HMFAssertion"8Q16^B24
Started child activity: %@
%@.%@
%@ %@ (%@)
Parent
Assertions
Valid
Beginning an invalidated activity is prohibited: %@
block
HMFActivity.loggingSessionAlreadyActive
newServiceName
HMFLogging.subsession
subsessionServiceName
subsessionUUID
EnableReporting
clientMetricIdentifier
Activity
<Context: Thread = %@, Count = %tu>
Stopped child activity: %@
Memory
Power
Unknown
Status Code
Headers
Body
Request
authorization
Location.Authorization.Request
Assertion
Name
workQ
Invalid filter class '%@', must be subclass of %@
B32@?0@"__HMFMessageHandler"8Q16^B24
v32@?0@"__HMFMessageHandler"8Q16^B24
messageName
policies
selector
targetUUID
messageHandler
(unspecified error)
The dispatcher does not have a valid transport
Messaging.Dispatcher
B24@?0Q8^B16
Opening body stream
Closing body stream
Sending
Networking.HTTP.Server.Connection.Internal
HMFPowerManagerBatteryStateDidChangeNotification
HMFPowerManagerBatteryLevelDidChangeNotification
CurrentCapacity
MaxCapacity
ExternalChargeCapable
FullyCharged
IOServiceFirstMatch
IOPMPowerSource
BatteryInstalled
IOGeneralInterest
HMF.wowAssertionKey
com.apple.developer.device-information.user-assigned-device-name
com.apple.private.MobileGestalt.AllowedProtectedKeys
ProductType
ModelNumber
RegionInfo
ProductName
DeviceClass
ReleaseType
BuildVersion
bluetooth-le
DeviceColor
UserAssignedDeviceName
SerialNumber
WifiAddress
iPhone
iPod
iPad
AppleTV
Watch
AudioAccessory
Beta
Carrier
Internal
v24@?0^{__CFString=}8^{__CFDictionary=}16
 MACAddress=%@ SSID=%@
HMF.MACAddress
HMF.SSID
type && [type length] > 0
data
%@ type: %@ length: %@
HMF.kt
HMF.ks
HMFPreferenceUpdatedNotification
, Preferences = 
Preference
, Domain = %@, Key = %@, Value = %@
Load Default Preferences
Determining preference location
Preferences
plist
SIMULATOR_ROOT
System/Library/PrivateFrameworks/HomeKitDaemon.framework
Parsing preferences
Value
Customer
Developer
application-identifier
Process %d
Application Identifier
ProcessInfo
[self isExecuting]
queue
%@://[%@]:%tu
%@://%@:%tu
reachabilityProbeQueue
@"HMFTimer"8@?0
<%@ URL = %@, Session = %@, active = %d, pinging = %d, proxy = %d, reachable = %d>
v12@?0B8
Resolving
Resolved
v24@?0@"HMFHTTPResponse"8@"NSError"16
v24@?0@"NSURL"8@"NSError"16
Invalid response scheme type
Received response
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
v16@?0@"NSArray"8
v24@?0@"HMFNetAddress"8@"NSError"16
Networking.HTTP.Client
%@%@%@
https
http
reachable
unreachable
Unable to determine the address of the server
count >= 1
futures.count >= 1
Precondition not satisfied: 
HMFSystemInfoNameUpdatedNotification
HMFSystemInfoNameNotificationKey
HMFSystemInfoMigratingUpdatedNotification
Mac OS X
macOS
iPhone OS
Watch OS
Apple TVOS
MacBook
Macmini
iMac
MacPro
Black
White
Yellow
Orange
Blue
Unknown (%@)
Platform
Product Class
Product Variant
Software Version
Product Color
Model Identifier
HMF.platform
HMF.class
HMF.variant
HMF.softwareVersion
HMF.majorVersion
HMF.minorVersion
HMF.patchVersion
HMF.color
HMF.modelIdentifier
com.apple.HomeKit
com.apple.HMFoundation
[%@] 
Library
Caches
Message:
Background
Default
Utility
User Initiated
User Interactive
%@%@
%@ %@(%@)
<%@%@, Identifier = %@, Name = %@, QoS = %@, Destination = %@, Activity = %@, 
User Info = %@,
Headers = %@>
HMF.identifier
HMF.name
HMF.timeout
HMF.qos
HMF.destination
HMF.headers
HMF.payload
: NSMutableArray
[%tu]
v32@?0@8Q16^B24
: NSMutableDictionary
: invalid dictionary key
[%@]
: NSMutableSet
v24@?0@8^B16
: NSMutableString
HMF.keys
HMF.objects
Count of objects (%lu) differs from count of keys (%lu)
notFoundMarker
%@ and %@ must be present
count of objects (%lu) differs from count of keys (%lu)
HostNameChange
isFinished
Error Domain=%@ Code=%ld "%@"
Address
Failed to open connection.
Networking.HTTP.Server.Connection
Receiver does not respond to %@
Target
Policies
Receiver
Messaging.Handler
%@(%@)
message
BlockMessage Invocation
SelectorMessage Invocation
default
DumpState
MM/dd/yyyy HH:mm:ss
%s%%%s
%s%%%u
SHA-1
SHA-224
SHA-256
SHA-384
SHA-512
SHA1
SHA224
SHA256
SHA384
SHA512
, Algorithm = %@, Value = %@
HM.algorithm
HM.value;
00:00:00:00:00:00
isExecuting
executing
finished
Operation is already executing.
Operation:%@
Starting operation
Operation
Operation is already executing or has finished.
[NSThread isMainThread]
HMFMainThreadAsyncContext
HMFCallerAsyncContext
No current HMFAsyncContext
HMF.target
HMFMessageDestination.target is required
HTTPRequest
HTTPResponse
Method
Test
Missing required policy
%@ required by %@ is missing
filter
Messaging.Filter
Message
shouldLogPrivateInformation
q24@?0@8@16
<%@%@%@>
%@: %@
<private>
ready
Location.Authorization.Operation
_http
%@ %tu
Service Type
Port
Connection Idle Timeout
B32@?0@"HMFHTTPRequestHandler"8Q16^B24
Calling request handler
B32@?0@"HMFHTTPClientConnection"8Q16^B24
Server invalidated.
Networking.HTTP.Server
clientConnections
Enabled
Disabled
[otherNumber isKindOfClass:NSNumber.class]
size == 1
HMF.value
for %@
%@ '%@'
localhost
Reachable
WWAN
object
The observed object must be an NSObject.
Cannot set a handler on an invalidated observer.
KVO.observer
handler
com.apple.HMFoundation.Scheduler
%@%@(
isResolved
isPublishing
resolved
publishing
NSNetServiceErrorDomain
<%@%@, Domain = %@, Type = %@, Name = %@, Port = %tu, Addresses = %@, isPublishing = %d, ResolveState = %d, ResolveRunningState = %d, ResolveBlocksCount = %d>
Networking.Service
Failed to resolve.
Cancelled.
Net service stopped resolving.
Cannot publish without a resolved port.
Failed to create record.
Failed to publish net service.
Net service stopped publishing.
Invalid TXT record key.
Invalid TXT record value.
HMFTimestamp
HMFEventName
HMFSessionIdentifier
home
com.apple.HomeKitDaemon
HMFMeta
HMFMetaEventName
ExceededSessionMax
HMFCorrespondingServiceName
d8@?0
HMFLogging.StaleSession
softlink:o:path:/System/Library/Frameworks/CoreLocation.framework/CoreLocation
softlink:o:path:/System/Library/Frameworks/CoreLocation.framework/CoreLocation
__HMFLocationAuthorizationMarkOperation
HMFLogging
NSObject
HMFOSTransaction
HMFFuture
HMFMemoryAssertion
HMFoundation
HMFDeprecated
HMFCalendarCreation
HMFStagedValue
HMFTimerDelegate
HMFTimer
HMFExponentialBackoffTimer
HMFMessagePolicy
NSCopying
KeyPathLookup
HMFObject
HMFPrivateObjectFormatter
HMFPrivateDescriptionFormatter
HMFFulfilledFuture
HMFRejectedFuture
HMFAsyncFuture
HMFPromise
HMFZeroing
HMFPairingIdentity
NSSecureCoding
NSCoding
HMFPairingKey
_HMFCFHTTPMessage
Timeout
HMFHTTPRequestHandler
HMFLogEventCoding
__HMFSoftwareVersionDataSource
HMFSystemInfoSoftwareVersionDataSource
HMFNetMonitor
_HMFObjectObserverInternal
HMFObjectObserver
HMFError
HMFDumpCategory
__HMFWiFiAssertion
HMFWiFiManager
HMFWiFiManagerDataSourceDelegate
HMFLocationAuthorization
CLLocationManagerDelegate
HMFCollection
NSFastEnumeration
HMFAssociativeCollection
__HMFIOKitDataSource
HMFSystemInfoSerialNumberDataSource
HMFSystemInfoProductInfoDataSource
HMFOperationBudget
HMFVersion
HMFLocalizable
HMFSoftwareVersion
Convenience
HMFPowerAssertion
HMFLogEventSessionVoucher
HMFNullLogEventSession
HMFLogEventSession
HMFLogEventSessionFactory
HMFHardwareAddress
HMFMACAddress
HMFMutableThreadSafeDictionary
HMFMutableAssociativeCollection
Waiting
HMFMerging
HMFMessageTransport
HMFNetServiceBrowser
NSNetServiceBrowserDelegate
HMFPowerLogger
HMFMemoryMonitor
HMFRingBuffer
_HMFCFHTTPServer
HMFStringIndentation
HMUIndent
__HMFActivityManager
HMFActivity
HMFActivityMarking
__HMFThreadContext
HMFHTTPResponseInternal
HMFHTTPResponse
NSMutableCopying
HMFMutableHTTPResponse
__HMFLocationAuthorizationRequest
HMFAssertion
HMFObjectCacheNSUUID
StringSupport
HMFMessageDispatcher
HMFMessageTransportDelegate
Deprecated
_HMFCFHTTPServerConnection
HMFPowerManager
_HMFNetManagerWoWAssertion
HMFNetManager
HMFTimeZoneCreation
__HMFMobileGestaltDataSource
HMFSystemInfoNameDataSource
HMFSystemInfoMarketingInformationDataSource
HMFSystemInfoWiFiDataSource
HMFSystemInfoBluetoothLEDataSource
HMFSystemInfoProductColorDataSource
HMFWiFiNetworkInfo
HMFKey
HMFPreferences
HMFPreference
HMFSystemPreference
HMFProcessInfo
HMFDispatchContext
HMFAsyncContext
HMFDispatchExecutor
HMFHTTPClientConfiguration
HMFHTTPClient
HMFNetMonitorDelegate
NSURLSessionDelegate
Combinators
HMFSystemInfo
HMFSystemInfoNameDataSourceDelegate
HMFSystemInfoMigrationDataSourceDelegate
HMFProductInfo
_HMFCFHTTPServerRequest
HMFCache
HMFMessageInternal
HMFMessage
MessagePayload
HMFMutableMessage
HMFObjectCacheNSString
CollectionSupport
HMFOrderedDictionary
HMFMutableOrderedDictionary
__HMFSystemConfigurationDataSource
NSOperation
HMFOperationFutureAdapter
HMFHTTPClientConnection
_HMFCFHTTPServerConnectionDelegate
__HMFMessageHandler
__HMFBlockMessageHandler
__HMFSelectorMessageHandler
__HMFDispatchExecutorMessageHandler
Version5
HMFNotificationCenter
__HMFEmbeddedSystemInfo
HMFNetAddressInternal
_HMFNetAddressIPV4
_HMFNetAddressIPV6
_HMFNetAddressHostname
HMFNetAddress
__HMFNetServiceMonitor
HMFDigest
HMFWiFiManagerDataSource
HMFOperation
HMFBlockOperation
HMFWeakObject
_HMFMainThreadAsyncContext
_HMFCallerAsyncContext
HMFMessageDestination
HMFHTTPRequestInternal
HMFHTTPRequest
HMFMutableHTTPRequest
HMFMessageFilter
HMFAttributeDescription
HMFClassRegistry
_HMFCFHTTPServerResponse
__HMFLocationManagerOperation
HMFCancellationHandler
HMFCancellable
HMFHTTPServer
_HMFCFHTTPServerDelegate
HMFHTTPClientConnectionDelegate
HMFDumpState
HMFBoolean
__HMFBoolean
__HMFBooleanTrue
__HMFBooleanFalse
__HMFNetAddressMonitor
HMFKeyValueBlockObserver
HMFKeyValueObserving
HMFLock
HMFLocking
NSLocking
HMFUnfairLock
__HMFOSUnfairLock
__HMFOSUnfairRecursiveLock
HMFScheduler
HMFQueue
HMFNetService
NSNetServiceDelegate
HMFMutableNetService
HMFLogEventSessionManager
HMFRTCSessionFactory
HMFQueuingLogBackendSession
HMFLogBackendSession
HMFQueuingLogBackendOperation
HMFQueuingLogBackendSessionManager
_HMFLogBackendSubmitterDelegate
HMFLogBackendSessionManager
substringWithRange:
initWithUUIDString:
null
bytes
setClassName:forClass:
environment
valueForKeyPath:
numberFromString:
initWithBytes:length:encoding:
setCompletionBlock:
matchesInString:options:range:
regularExpressionWithPattern:options:error:
decodeTopLevelObjectOfClass:forKey:error:
numberOfRanges
scheduleInRunLoop:forMode:
initWithBytesNoCopy:length:encoding:freeWhenDone:
appendBytes:length:
scheme
initWithBytesNoCopy:length:freeWhenDone:
errorWithDomain:code:userInfo:
member:
appendData:
searchForServicesOfType:inDomain:
relativePath
cancelAllOperations
evaluateWithObject:
TXTRecordData
weakObjectsHashTable
initWithCalendarIdentifier:
credentialForTrust:
second
setQueuePriority:
appendFormat:
exceptionWithName:reason:userInfo:
_stringRepresentation
appendString:
removeAllObjects
weakObjectsPointerArray
defaultManager
sortedArrayUsingComparator:
URLByAppendingPathComponent:
currentCalendar
whitespaceCharacterSet
sortedArrayUsingSelector:
insertObject:atIndex:
setDateFormat:
isSubclassOfClass:
URLForResource:withExtension:
capitalizedString
_willChangeValuesForKeys:
array
defaultSessionConfiguration
caseInsensitiveCompare:
insertString:atIndex:
removeFromRunLoop:forMode:
absoluteString
setDay:
integerValue
arrayByAddingObject:
initWithData:encoding:
URLWithString:
removeObject:
failWithError:
willChangeValueForKey:
messageTargetUUID
arrayWithArray:
setDecodingFailurePolicy:
characterSetWithCharactersInString:
sendMessageWithDictionary:error:
timeIntervalSince1970
URLWithString:relativeToURL:
removeObjectAtIndex:
fileExistsAtPath:isDirectory:
arrayWithCapacity:
startConfigurationWithCompletionHandler:
timeIntervalSinceDate:
fileURLWithPathComponents:
URLsForDirectory:inDomains:
currentRunLoop
arrayWithObjects:count:
intersectSet:
host
UTF8String
timeIntervalSinceReferenceDate
initWithDictionary:copyItems:
currentThread
removeObjectsAtIndexes:
UUID
invalidateAndCancel
UUIDString
processName
timeZoneForSecondsFromGMT:
hour
invertedSet
timeZoneWithAbbreviation:
initWithEffectiveBundle:delegate:onQueue:
addEntriesFromDictionary:
removeObserver:forKeyPath:
setHTTPBody:
dataFromTXTRecordDictionary:
setTXTRecordData:
finishDecoding
initWithEffectiveBundleIdentifier:delegate:onQueue:
auditToken
setHTTPCookieAcceptPolicy:
setTimeZone:
minusSet:
removeObserver:forKeyPath:context:
initWithFormat:arguments:
setHTTPCookieStorage:
minute
addIndex:
dataTaskWithRequest:completionHandler:
authorizationStatus
firstObject
addIndexes:
localTimeZone
setHTTPMethod:
removePointerAtIndex:
dictionary
authorizationStatusForBundle:
objectAtIndex:
floatValue
setHTTPShouldSetCookies:
dataWithBytes:length:
authorizationStatusForBundleIdentifier:
objectAtIndexedSubscript:
replaceObjectAtIndex:withObject:
stopMonitoring
code
dictionaryFromTXTRecordData:
localizedStringForKey:value:table:
dataWithBytesNoCopy:length:freeWhenDone:
setHTTPShouldUsePipelining:
dictionaryWithCapacity:
isCancelled
serverTrust
dataWithCapacity:
month
requestAlwaysAuthorization
setURLCache:
base64EncodedStringWithOptions:
addObjectsFromArray:
dictionaryWithContentsOfURL:
dataWithLength:
mutableBytes
addObserver:forKeyPath:options:context:
setURLCredentialStorage:
compact
dictionaryWithDictionary:
protectionSpace
dictionaryWithObjects:forKeys:count:
string
objectsAtIndexes:
indexOfObject:
compare:options:
addOperation:
stringByAppendingFormat:
didChangeValueForKey:
isEqualToArray:
indexOfObjectWithOptions:passingTest:
unarchivedObjectOfClass:fromData:error:
_didChangeValuesForKeys:
setValue:forHTTPHeaderField:
addPointer:
objectsPassingTest:
indexSetWithIndex:
stringByAppendingPathComponent:
sessionWithConfiguration:delegate:delegateQueue:
unarchivedObjectOfClasses:fromData:error:
getAllTasksWithCompletionHandler:
components:fromDate:
requestWhenInUseAuthorization
publishWithOptions:
initWithSessionInfo:userInfo:frameworksToCheck:
stringByAppendingString:
indexesOfObjectsWithOptions:passingTest:
dateFromComponents:
isEqualToDictionary:
components:fromDate:toDate:options:
getBytes:length:
dateFromString:
distantFuture
stringByPaddingToLength:withString:startingAtIndex:
indexesPassingTest:
initWithLocaleIdentifier:
componentsJoinedByString:
getBytes:range:
dateWithTimeIntervalSinceNow:
setWithArray:
unionOrderedSet:
isEqualToNumber:
stringByReplacingCharactersInRange:withString:
getCharacters:range:
componentsWithURL:resolvingAgainstBaseURL:
setWithCapacity:
queuePriority
stringByReplacingOccurrencesOfString:withString:
doubleValue
setLocale:
lowercaseString
isEqualToOrderedSet:
raise:format:
setWithObject:
initWithTarget:selector:object:
isEqualToString:
stringByTrimmingCharactersInSet:
initFileURLWithPath:isDirectory:
rangeAtIndex:
getUUIDBytes:
operations
unsignedIntegerValue
setWithObjects:
allHeaderFields
initForReadingFromData:error:
_initWithDelegate:onQueue:
encodeBool:forKey:
setMaxConcurrentOperationCount:
initWithTimeInterval:sinceDate:
rangeOfCharacterFromSet:
stringFromDate:
orderedSet
encodeDouble:forKey:
rangeOfString:options:
decimalDigitCharacterSet
encodeInteger:forKey:
resolveWithTimeout:
setAllHTTPHeaderFields:
mainQueue
stringWithFormat:
encodeObject:forKey:
setYear:
mainRunLoop
decodeBoolForKey:
stringWithUTF8String:
path
initWithArray:copyItems:
_newZeroingDataWithBytes:length:
reason
setArray:
initWithURL:cachePolicy:timeoutInterval:
isMainThread
subdataWithRange:
allObjects
containsIndex:
setMonth:
enumerateByteRangesUsingBlock:
initWithUTF8String:
decodeDoubleForKey:
initWithBase64EncodedString:options:
containsString:
markAsHavingReceivedLocation
hasPrefix:
setNumberStyle:
decodeIntegerForKey:
bundlePath
decodeObjectOfClass:forKey:
containsValueForKey:
setClass:forClassName:
enumerateObjectsUsingBlock:
bundleWithPath:
valueForHTTPHeaderField:
decodeObjectOfClasses:forKey:
initWithUUIDBytes:
bundleWithURL:
enumerateObjectsWithOptions:usingBlock:
pointerAtIndex:
logCategory
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
logIdentifier
main
init
dealloc
initWithName:
transaction
creationTime
.cxx_destruct
_transaction
_creationTime
T@"NSObject<OS_os_transaction>",R,N,V_transaction
Td,R,N,V_creationTime
respondWithOutcomeOf:
sendMessageExpectingResponse:
invalidate
mark
internal
setInternal:
_internal
T@"NSObject<OS_os_transaction>",&,N,V_internal
hmf_unarchivedObjectOfClass:fromClassName:fromData:error:
deserializeObjectWithData:allowedClasses:
deserializeObjectWithData:allowedClass:frameworkClasses:
hmf_unarchiveFromData:error:
hmf_localTimeDescription
localTimeDescription
decodeDateComponents
decodeArrayOfDateComponents
decodeCalendar
stagedValue:didExpireValue:
timerDidFire:
initWithValue:
stageValue:withTimeout:
stageValue:
commitValue:
_stageValue:withTimer:
_unstageValue
_commitValue:
value
committedValue
isStaged
setCommittedValue:
timer
setTimer:
delegate
setDelegate:
timerFactory
setTimerFactory:
_lock
_stagedValue
_isStaged
_committedValue
_timer
_delegate
_timerFactory
T@,&,V_committedValue
T@"HMFTimer",&,V_timer
T@?,C,V_timerFactory
T@,R
staged
TB,R,GisStaged
T@"<HMFStagedValueDelegate>",W,V_delegate
shortDescription
initWithTimeInterval:options:
attributeDescriptions
leeway
isRunning
fireDate
setFireDate:
delegateQueue
setDelegateQueue:
resume
suspend
kick
fire
__fire
__handleExpiration
timeInterval
options
_delegateQueue
_timerQueue
_timeInterval
_leeway
_running
_fireDate
_options
T@"NSObject<OS_dispatch_source>",R,N,V_timer
TQ,R,N,V_options
T@"<HMFTimerDelegate>",W,V_delegate
T@"NSObject<OS_dispatch_queue>",&
Td,R,N,V_timeInterval
TQ,R,N
running
TB,R,GisRunning
T@"NSDate",R,C,V_fireDate
initWithMinimumTimeInterval:maximumTimeInterval:exponentialFactor:options:
reset
minimumTimeInterval
maximumTimeInterval
exponentialFactor
isIncreasing
_increasing
_minimumTimeInterval
_maximumTimeInterval
_exponentialFactor
increasing
TB,R,N,GisIncreasing,V_increasing
Td,R,N,V_minimumTimeInterval
Td,R,N,V_maximumTimeInterval
Tq,R,N,V_exponentialFactor
copyWithZone:
hmf_firstObjectWithValue:forKeyPath:
hmf_firstObjectWithName:
hmf_firstObjectWithUUID:
hmf_firstObjectWithZoneID:
hmf_firstObjectWithUniqueIdentifier:
hmf_firstObjectWithSPIUniqueIdentifier:
hmf_firstObjectWithInstanceID:
hmf_firstObjectWithCharacteristicType:
privateDescription
propertyDescription
T@"NSArray",R,C,N
defaultFormatter
privateStringForObjectValue:
stringForObjectValue:
futureWithValue:
futureWithError:
futureWithPromise:
inContext:perform:
isPending
outcomeIfSettled
getResultWithCompletion:
then:
recover:
then:orRecover:
inContext:then:
inContext:recover:
inContext:then:orRecover:
T{_HMFFutureBlockOutcome=q@},R
pending
TB,R,GisPending
_value
_error
_state
_promise
fulfillWithValue:
rejectWithError:
resolveWithFuture:
_future
_completion
_resolved
hmf_zeroingCopy
pairingIdentity
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithIdentifier:publicKey:privateKey:
publicPairingIdentity
identifier
publicKey
privateKey
_identifier
_publicKey
_privateKey
T@"NSString",R,C,N,V_identifier
T@"HMFPairingKey",R,C,N,V_publicKey
T@"HMFPairingKey",R,C,N,V_privateKey
T@"HMFPairingIdentity",R,C
setClassMappingForNSCoder
initWithPairingKeyData:
data
_data
T@"NSData",R,C,N,V_data
hmf_isZeroed
hmf_initWithHexadecimalString:options:
hmf_hexadecimalStringWithOptions:
hmf_hexadecimalRepresentation
hmf_zeroed
TB,R,Ghmf_isZeroed
T@"NSString",R
dateFormatter
requestWithMethod:url:protocolVersion:
responseWithStatusCode:statusDescription:protocolVersion:
initWithMessageRef:
headerFields
valueForHeaderField:
setValue:forHeaderField:
date
setDate:
contentType
setContentType:
contentLength
setContentLength:
body
setBody:
message
_message
T^{__CFHTTPMessage=},R,N,V_message
T@"NSDictionary",R,N
T@"NSData",C,N
timeout:
futureWithDelay:
_isValidMethodPrediate:
_isValidURLPredicate:
initWithMethodPredicate:URLPredicate:matchBlock:
methodPredicate
URLPredicate
matchBlock
requestBlock
setRequestBlock:
_methodPredicate
_URLPredicate
_matchBlock
_requestBlock
T@"NSPredicate",R,C,N,V_methodPredicate
T@"NSPredicate",R,C,N,V_URLPredicate
T@?,R,C,N,V_matchBlock
T@?,C,N,V_requestBlock
logEventDictionary
softwareVersion
T@"HMFSoftwareVersion",R,C,N
networkMonitorIsReachable:
networkMonitorIsUnreachable:
initWithNetAddress:
initWithNetService:
isReachable
setReachable:
reachabilityPath
netAddress
_reachable
_netAddress
reachable
TB,GisReachable
T@"<HMFNetMonitorDelegate>",W,V_delegate
T@"HMFNetAddress",R,C,N,V_netAddress
deallocationBlock
setDeallocationBlock:
_deallocationBlock
T@?,C,N,V_deallocationBlock
initWithObservedObject:
_startObserving
_stopObserving
observedObject
cachedHash
_observedObject
_cachedHash
TQ,R,V_cachedHash
T@,R,W,V_observedObject
T@?,C,V_deallocationBlock
isHMFError
hmf_errorWithException:
hmfErrorWithCode:reason:suggestion:
hmfErrorWithCode:reason:suggestion:underlyingError:
hmfErrorWithCode:description:reason:suggestion:underlyingError:
hmfErrorWithCode:description:reason:suggestion:
hmfErrorWithCode:
hmfErrorWithCode:userInfo:
hmfUnspecifiedError
hmfError
TB,R,N,GisHMFError
acquire:
initWithOptions:manager:reason:
manager
_manager
T@"HMFWiFiManager",R,V_manager
TQ,R,V_options
sharedManager
dataSource:didChangeWoWState:
dataSource:didChangeLinkAvailability:
currentNetworkDidChangeForDataSource:
T@"HMFWiFiManager",R
initWithWorkQueue:dataSource:
currentNetworkSSID
isActive
isCaptive
beginActiveAssertionWithOptions:reason:
endActiveAssertion:
takeWoWAssertion
releaseWoWAssertion
MACAddress
_shouldAssertWoW
_currentNetworkSSID
_MACAddress
_workQueue
_dataSource
_activeAssertions
T@"HMFMACAddress",R,C,V_MACAddress
active
TB,R,GisActive
captive
TB,R,GisCaptive
initialize
automaticallyNotifiesObserversForKey:
sharedAuthorization
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManagerDidChangeAuthorization:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
initWithBundleIdentifier:
initWithBundle:
queue
setQueue:
isAuthorized
status
isMonitoring
registerObserver:
unregisterObserver:
requestAuthorization:completionHandler:
locationOperationCompleted
bundleIdentifier
bundle
_status
_observers
_request
_operation
_queue
_bundleIdentifier
_bundle
T@"NSString",R,C,V_bundleIdentifier
T@"NSBundle",R,V_bundle
T@"CLLocationManager",R,V_internal
Ti,R
T@"NSObject<OS_dispatch_queue>",&,V_queue
authorized
TB,R,GisAuthorized
monitoring
TB,R,GisMonitoring
countByEnumeratingWithState:objects:count:
objectEnumerator
containsObject:
count
objectForKey:
objectForKeyedSubscript:
objectsForKeys:notFoundMarker:
keyEnumerator
enumerateKeysAndObjectsUsingBlock:
enumerateKeysAndObjectsWithOptions:usingBlock:
allKeys
allValues
T@"NSArray",R,C
serialNumber
T@"NSString",R,C,N
productPlatform
productClass
productVariant
modelIdentifier
Tq,R,N
initWithLimit:rate:
isFull
isEmpty
decrement
decrementByCount:
limit
rate
_limit
_rate
TQ,R,N,V_limit
T{_HMFRate=Qd},R,N,V_rate
TQ,R,V_value
full
TB,R,GisFull
empty
TB,R,GisEmpty
localizedDescription
initWithMajorVersion:minorVersion:updateVersion:
initWithVersionString:
versionString
compare:
isEqualToVersion:
isAtLeastVersion:
isGreaterThanVersion:
majorVersion
minorVersion
updateVersion
_majorVersion
_minorVersion
_updateVersion
TQ,R,V_majorVersion
TQ,R,V_minorVersion
TQ,R,V_updateVersion
versionFromOperatingSystemVersion:
initWithMajorVersion:minorVersion:updateVersion:buildVersion:
shortVersionString
operatingSystemVersion
buildVersion
_buildVersion
T@"NSString",R,C,V_buildVersion
finally:
inContext:finally:
ignoreErrors
ignoreResult
ignoreOutcome
futureWithNoValue
fulfillWithNoValue
resolverBlock
errorOnlyResolverBlock
voidResolverBlock
T@?,R,C
initWithName:timeout:
_cleanUpPowerAssertion
setIdentifier:
TI,N,V_identifier
initWithUUID:serviceName:
serviceName
uuid
_serviceName
_uuid
T@"NSString",R,N,V_serviceName
T@"NSUUID",R,N,V_uuid
submitEventWithName:payload:
voucher
T@"NSUUID",R,N
T@"NSString",R,N
T@"HMFLogEventSessionVoucher",R,N
initWithUUID:serviceName:commonFields:backend:
commonFields
backend
_commonFields
_backend
T@"NSDictionary",R,N,V_commonFields
T@"<HMFLogBackendSession>",R,N,V_backend
sessionWithUUID:serviceName:uploadImmediately:commonFields:
initWithAddressString:length:
initWithAddressData:
length
formattedString
isEqualToAddress:
_formattedString
T@"NSData",R,C,V_data
T@"NSString",R,C,V_formattedString
initWithMACAddressString:
threadSafeDictionary
setObject:forKey:
setObject:forKeyedSubscript:
removeObjectForKey:
removeObjectsForKeys:
initWithDictionary:
rawDictionarySnapshot
_dictionary
T@"NSDictionary",R,C
waitForResult:orError:withTimeout:
hmf_addedObjectsFromSet:
hmf_removedObjectsFromSet:
hmf_commonObjectsFromSet:
mergeObject:
shouldMergeObject:
hmf_arrayForKey:
hmf_arrayForKey:ofClasses:
hmf_mutableArrayForKey:
hmf_base64EncodedDataForKey:
hmf_boolForKey:
hmf_boolForKey:isPresent:
hmf_boolForKey:error:
hmf_calendarForKey:
hmf_dataForKey:
hmf_dateForKey:
hmf_dateComponentsForKey:
hmf_dictionaryForKey:
hmf_mutableDictionaryForKey:
hmf_errorForKey:
hmf_nullForKey:
hmf_integerForKey:error:
hmf_numberForKey:
hmf_setForKey:
hmf_mutableSetForKey:
hmf_stringForKey:
hmf_timeZoneForKey:
hmf_URLForKey:
hmf_UUIDForKey:
hmf_valueForKey:
hmf_unarchivedObjectForKey:ofClasses:
hmf_fileHandleForKey:
secureDescriptionWithIndent:newLine:blacklistedKeys:
secureDescriptionWithBlacklistKeys:
uuidForKey:
uuidFromStringForKey:
stringForKey:
numberForKey:
boolForKey:
boolForKey:keyPresent:
dictionaryForKey:
mutableDictionaryForKey:
mutableArrayForKey:
arrayForKey:
mutableSetForKey:
setForKey:
dataForKey:
base64EncodedDataForKey:
dateForKey:
timeZoneForKey:
timeZoneFromDataForKey:
dateComponentsForKey:
dateComponentsFromDataForKey:
errorForKey:
errorFromDataForKey:
calendarForKey:
calendarFromDataForKey:
predicateFromDataForKey:
nullForKey:
nsValueForKey:
urlForKey:
arrayOfDateComponentsFromDataForKey:
sendMessage:completionHandler:
T@"<HMFMessageTransportDelegate>",W,V_delegate
netServiceBrowserWillSearch:
netServiceBrowserDidStopSearch:
netServiceBrowser:didNotSearch:
netServiceBrowser:didFindDomain:moreComing:
netServiceBrowser:didFindService:moreComing:
netServiceBrowser:didRemoveDomain:moreComing:
netServiceBrowser:didRemoveService:moreComing:
initWithDomain:serviceType:
descriptionWithPointer:
shouldCache
setShouldCache:
cachedNetServices
addNetServiceToCache:
isBrowsing
setBrowsing:
startBrowsingWithCompletionHandler:
stopBrowsing
_stopBrowsingWithError:
domain
serviceType
clientQueue
browseBlock
setBrowseBlock:
_netServices
_cachedNetServices
_browsing
_domain
_serviceType
_clientQueue
_browseBlock
T@"NSObject<OS_dispatch_queue>",R,N,V_clientQueue
T@"NSNetServiceBrowser",R,N,V_internal
browsing
TB,N,GisBrowsing,V_browsing
T@?,C,N,V_browseBlock
T@"<HMFNetServiceBrowserDelegate>",W,V_delegate
T@"NSString",R,C,N,V_domain
T@"NSString",R,C,N,V_serviceType
TB,N
netServiceBrowser:didStopBrowsingWithError:
netServiceBrowser:didAddService:
netServiceBrowser:didRemoveService:
sharedPowerLogger
linkTypeDescription:
reportToPowerLogDestinationTable:withEventDictionary:
memoryMonitor
T@"HMFMemoryMonitor",R
start
stop
systemMemoryState
lastProcessMemoryState
lastProcessMemoryStateUpdateTime
memoryPressureSource
setMonitoring:
setSystemMemoryState:
setLastProcessMemoryState:
setLastProcessMemoryStateUpdateTime:
_monitoring
_memoryPressureSource
_systemMemoryState
_lastProcessMemoryState
_lastProcessMemoryStateUpdateTime
T@"NSObject<OS_dispatch_source>",R,N,V_memoryPressureSource
TB,N,GisMonitoring,V_monitoring
Tq,N,V_systemMemoryState
Tq,V_lastProcessMemoryState
T@"NSDate",&,N,V_lastProcessMemoryStateUpdateTime
initWithCapacity:
addObject:
capacity
buffer
_capacity
_buffer
TQ,R,V_capacity
T@"NSMutableArray",R,V_buffer
initWithPort:options:
connectionIdleTimeout
setConnectionIdleTimeout:
watchdogTimeout
setWatchdogTimeout:
isValid
port
connections
_port
_connections
T^{_CFHTTPServer=},R,N,V_internal
T@"NSMutableArray",R,N,V_connections
T@"<_HMFCFHTTPServerDelegate>",W,V_delegate
TQ,R,N,V_port
valid
TB,R,N,GisValid
indentation
indentationWithWidth:
initWithWidth:
indentationByLevels:
width
level
_width
_level
TQ,R,V_width
TQ,R,V_level
indentWithLevel:
indentByFactor:
_activities
hasStarted
activityWithName:block:
activityWithName:parent:block:
activityWithName:parent:assertions:block:
activityWithName:parent:options:block:
currentActivity
currentActivityForMarking
markCurrentActivity
markCurrentActivityWithReason:
markCurrentActivityWithFormat:
markWithReason:
markWithFormat:
T@"HMFActivity",R
T@"<HMFActivityMarking>",R
initWithName:parent:
initWithName:parent:assertions:
initWithName:parent:options:
initWithIdentifier:name:parent:assertions:
initWithIdentifier:name:parent:options:
setClientMetricIdentifier:
assertions
begin
blockWithBlock:
blockWithQualityOfService:block:
performBlock:
logSession
isEventReportingEnabled
enableReportingWithServiceName:
enableReportingWithServiceName:uuid:
parent
name
clientMetricIdentifier
_voucher
_threadContexts
_valid
_logSession
_parent
_name
_clientMetricIdentifier
_internalAssertions
_startMachTime
T@"NSUUID",R,C,V_identifier
T@"HMFActivity",R,W,V_parent
T@"NSString",R,C,V_name
T@"NSString",C,N,V_clientMetricIdentifier
TB,R,GisValid,V_valid
started
TB,R,GhasStarted
eventReportingEnabled
TB,R,GisEventReportingEnabled
T@"<HMFLogEventSession>",R,V_logSession
currentContext
T@"__HMFThreadContext",R,C
__init
thread
setCount:
setVoucher:
shouldRestoreVoucher
setShouldRestoreVoucher:
_shouldRestoreVoucher
_thread
_count
T@"NSThread",R,V_thread
TQ,N,V_count
T@"NSObject<OS_voucher>",&,N,V_voucher
TB,N,V_shouldRestoreVoucher
initWithStatusCode:headerFields:body:
setHeaderValue:forHeaderKey:
activity
setActivity:
statusCode
setHeaderFields:
_activity
_statusCode
_headerFields
_body
Tq,R,N,V_statusCode
T@"NSDictionary",C,N,V_headerFields
T@"NSData",C,N,V_body
T@"HMFActivity",&,N,V_activity
mutableCopyWithZone:
initWithRequest:internalResponse:
request
T@"HMFHTTPResponseInternal",R,N,V_internal
T@"HMFHTTPRequest",R,N,V_request
T@"NSData",R,N
T@"NSData",C,D,N
initWithTimeout:
initWithAuthorization:
observeValueForKeyPath:ofObject:change:context:
initWithType:
initWithType:authorization:
type
_requested
_type
Tq,R,V_type
uniqueDescription
hmf_cachedInstanceForNSUUID:
hmf_cachedInstanceForNSString:
isIndexed
allMessagesForMessageNameTarget
messageTransport:didReceiveMessage:
initWithTransport:
filterClasses
setFilterClasses:
index
handlersForMessage:
registerForMessage:receiver:selector:
registerForMessage:receiver:messageHandler:
registerForMessage:receiver:policies:selector:
registerForMessage:targetUUID:receiver:policies:selector:
registerForMessage:receiver:policies:messageHandler:
deregisterForMessage:receiver:
deregisterReceiver:
dispatchMessage:
sendMessage:
transport
shouldAutomaticallyIndex
setShouldAutomaticallyIndex:
workQueue
_handlers
_indexWatchdog
_destinationHandlerIndexes
_nameHandlerIndexes
_indexed
_shouldAutomaticallyIndex
_filterClasses
_transport
indexed
TB,R,GisIndexed,V_indexed
TB,N,V_shouldAutomaticallyIndex
T@"NSObject<OS_dispatch_queue>",R,V_workQueue
T@"HMFMessageTransport",R,N,V_transport
T@"NSSet",C,V_filterClasses
dispatchMessage:target:
sendMessage:target:
sendMessage:target:responseQueue:responseHandler:
sendMessage:target:andInvokeCompletionHandler:
sendMessage:target:responseQueue:responseHandler:completionHandler:
connection:didReceiveRequest:
initWithConnectionRef:
open
close
_handleReceivedRequestRef:
_handleCompletedReceivedRequest:error:
_stopReadBody:
handleRequest:bodyReadStream:eventType:
_sendStatusCode:forRequest:
_sendStatusCode:forRequest:bodyData:
sendResponse:
_handleCompletedResponse:error:
address
pendingRequests
pendingRespones
_address
_pendingRequests
_pendingRespones
T@"NSMutableArray",R,N,V_pendingRequests
T@"NSMutableArray",R,N,V_pendingRespones
T^{_CFHTTPServerConnection=},R,N,V_internal
T@"<_HMFCFHTTPServerConnectionDelegate>",W,V_delegate
T@"HMFNetAddress",R,N,V_address
batteryState
batteryLevel
updateBatteryState:
_registerForPowerSourceNotifications
_deregisterForPowerSourceNotifications:
interestNotification
hasBattery
setRunning:
notificationPort
_hasBattery
_batteryLevel
_interestNotification
_batteryState
_notificationPort
TB,N,GisRunning,V_running
T^{IONotificationPort=},R,N,V_notificationPort
TI,R,N,V_interestNotification
TB,R,V_hasBattery
Tq,R,V_batteryState
Tf,R,V_batteryLevel
initWithWifiManager:
T@"HMFWiFiManager",R,N,V_manager
T@"HMFNetManager",R,N
initWithWiFiManager:
deregisterObject:
registerWoWAssertionForObject:
deregisterWoWAssertionForObject:
wowAssertion
setWowAssertion:
wifiManager
_wowAssertion
_wifiManager
T@"_HMFNetManagerWoWAssertion",W,V_wowAssertion
T@"HMFWiFiManager",R,N,V_wifiManager
decodeTimeZone
T@"<HMFSystemInfoNameDataSourceDelegate>",W
model
regionInfo
WiFiInterfaceMACAddress
T@"HMFMACAddress",R,C
supportsBLE
productColor
Tq,R
shouldFetchUserAssignedDeviceName
shouldFetchProtectedKey:
notificationToken
_supportsBLE
_modelIdentifier
_model
_regionInfo
_serialNumber
_productPlatform
_productClass
_productVariant
_softwareVersion
_WiFiInterfaceMACAddress
_productColor
_notificationToken
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T^{MGNotificationTokenStruct=},R,V_notificationToken
T@"<HMFSystemInfoNameDataSourceDelegate>",W,V_delegate
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_model
T@"NSString",R,C,N,V_regionInfo
T@"NSString",R,C,N,V_serialNumber
Tq,R,N,V_productPlatform
Tq,R,N,V_productClass
Tq,R,N,V_productVariant
T@"NSString",R,C,N,V_modelIdentifier
T@"HMFSoftwareVersion",R,C,N,V_softwareVersion
T@"HMFMACAddress",R,C,V_WiFiInterfaceMACAddress
TB,R,V_supportsBLE
Tq,R,V_productColor
initWithMACAddress:SSID:
isEqualToNetworkInfo:
SSID
_SSID
T@"NSString",R,C,V_SSID
initWithType:size:data:
isEqualToData:
size
_size
TQ,R,V_size
T@"NSString",R,C,V_type
sharedPreferences
classRegistry
preferenceClassForPreferenceKey:
setPreferenceClass:forPreferenceKey:
defaultValues
defaultValueForPreferenceKey:
setDefaultValue:forPreferenceKey:
preferences
preferenceForKey:
_preferences
_classRegistry
T@"HMFClassRegistry",R,V_classRegistry
initWithKey:options:defaultValue:
initWithKey:options:defaultValue:parent:
boolValue
numberValue
stringValue
dataValue
setValue:
_key
T@"NSString",R,V_key
T@"<NSObject>",C,V_value
T@"HMFPreference",R,W,V_parent
TB,R,N
T@"NSNumber",R,C,N
T@"NSData",R,C,N
initWithKey:options:domain:defaultValue:
initWithKey:options:domain:defaultValue:parent:
T@"NSString",R,C,V_domain
processInfo
processInfoForXPCConnection:
T@"HMFProcessInfo",R
initWithAuditToken:
initWithIdentifier:
mainBundle
getAuditToken:
isCodeSigned
isPlatformBinary
valueForEntitlement:
executableURL
mainBundleURL
applicationIdentifier
signingIdentifier
_auditToken
_executableURL
_mainBundleURL
_applicationIdentifier
_signingIdentifier
Ti,R,V_identifier
T@"NSURL",R,C,V_executableURL
T@"NSURL",R,C,V_mainBundleURL
T@"NSBundle",R,C
T@"NSString",R,C,V_applicationIdentifier
T@"NSString",R,C,V_signingIdentifier
codeSigned
T@"HMFBoolean",R,C,GisCodeSigned
platformBinary
T@"HMFBoolean",R,C,GisPlatformBinary
blessWithImplicitContext:
assertIsExecuting
initWithQueue:
initWithQueue:alwaysDispatch:
_alwaysDispatch
T@"NSObject<OS_dispatch_queue>",R
defaultConfiguration
requiresEncryption
setRequiresEncryption:
allowsAnonymousConnection
setAllowsAnonymousConnection:
allowsCellularAccess
setAllowsCellularAccess:
supportsWakeOnLAN
setSupportsWakeOnLAN:
monitorsReachability
setMonitorsReachability:
_requiresEncryption
_allowsAnonymousConnection
_allowsCellularAccess
_supportsWakeOnLAN
_monitorsReachability
TB,V_requiresEncryption
TB,V_allowsAnonymousConnection
TB,V_allowsCellularAccess
TB,V_supportsWakeOnLAN
TB,V_monitorsReachability
client:didRequestPingWithCompletionHandler:
baseURLWithScheme:hostAddress:port:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
initWithBaseURL:options:
initWithBaseURL:configuration:
initWithBaseURL:configuration:netManager:
initWithBaseURL:configuration:session:reachabilityMonitor:netManager:
initWithNetService:options:
initWithService:configuration:
initWithService:configuration:netManager:
initWithService:configuration:session:reachabilityMonitor:netManager:
createNSURLSession:
finishCommonInitialization
configuration
baseURL
isPinging
setPinging:
startReachabilityProbe
requestClientReachabilityPingWithRetry:
startDelegatedPingTimer
stopDelegatedPingTimer
sendRequest:completionHandler:
_sendRequest:baseURL:completionHandler:
cancelPendingRequests
resolveWithCompletionHandler:
netService
allowAnonymousConnection
setAllowAnonymousConnection:
session
setActive:
reachabilityMonitor
reachabilityProbeQueue
netManager
delegatedPingTimer
setDelegatedPingTimer:
_pinging
_allowAnonymousConnection
_active
_configuration
_baseURL
_netService
_session
_reachabilityMonitor
_reachabilityProbeQueue
_netManager
_delegatedPingTimer
T@"NSURLSession",R,N,V_session
TB,N,GisActive,V_active
T@"HMFNetMonitor",R,N,V_reachabilityMonitor
T@"NSOperationQueue",R,N,V_reachabilityProbeQueue
T@"HMFNetManager",R,N,V_netManager
T@"HMFTimer",&,N,V_delegatedPingTimer
pinging
TB,N,GisPinging,V_pinging
TB,N,GisReachable,V_reachable
T@"<HMFHTTPClientDelegate>",W,V_delegate
T@"NSURL",R,C,N,V_baseURL
T@"HMFNetService",R,C,N,V_netService
TB,N,V_allowAnonymousConnection
T@"HMFHTTPClientConfiguration",R,C,V_configuration
clientDidBecomeReachable:
clientDidBecomeUnreachable:
all:
allSettled:
any:
anySettled:
allocWithZone:
systemInfo
dataSource:didUpdateName:
dataSource:didUpdateMigrating:
isMigrating
nameDataSource
marketingDataSource
serialNumberDataSource
productInfoDataSource
softwareVersionDataSource
migrationDataSource
WiFiDataSource
bluetoothLEDataSource
productColorDataSource
_nameDataSource
_marketingDataSource
_serialNumberDataSource
_productInfoDataSource
_softwareVersionDataSource
_migrationDataSource
_WiFiDataSource
_bluetoothLEDataSource
_productColorDataSource
T@"<HMFSystemInfoNameDataSource>",R,N,V_nameDataSource
T@"<HMFSystemInfoMarketingInformationDataSource>",R,N,V_marketingDataSource
T@"<HMFSystemInfoSerialNumberDataSource>",R,N,V_serialNumberDataSource
T@"<HMFSystemInfoProductInfoDataSource>",R,N,V_productInfoDataSource
T@"<HMFSystemInfoSoftwareVersionDataSource>",R,N,V_softwareVersionDataSource
T@"<HMFSystemInfoMigrationDataSource>",R,N,V_migrationDataSource
T@"<HMFSystemInfoWiFiDataSource>",R,N,V_WiFiDataSource
T@"<HMFSystemInfoBluetoothLEDataSource>",R,N,V_bluetoothLEDataSource
T@"<HMFSystemInfoProductColorDataSource>",R,N,V_productColorDataSource
T@"HMFSoftwareVersion",R,C
migrating
TB,R,GisMigrating
productInfo
decodeSoftwareVersionWithCoder:
encodeSoftwareVersion:withCoder:
initWithPlatform:class:softwareVersion:
initWithPlatform:class:variant:softwareVersion:
initWithPlatform:class:variant:softwareVersion:color:
initWithPlatform:class:softwareVersion:modelIdentifier:
initWithPlatform:class:variant:softwareVersion:color:modelIdentifier:
Tq,R,V_productPlatform
Tq,R,V_productClass
Tq,R,V_productVariant
T@"HMFSoftwareVersion",R,N,V_softwareVersion
Tq,R,N,V_productColor
T@"NSString",R,N,V_modelIdentifier
initWithConnection:requestRef:
responseWithStatusCode:
appendBodyData:
method
setURL:
setMethod:
setHeaders:
requestRef
bodyStream
connection
bodyData
_requestRef
_bodyStream
_connection
_bodyData
T@"NSMutableData",R,N,V_bodyData
T^{_CFHTTPServerRequest=},R,N,V_requestRef
T^{__CFReadStream=},R,N,V_bodyStream
T@"_HMFCFHTTPServerConnection",R,W,N,V_connection
defaultCache
T@"HMFCache",R
isExists
_exists
_URL
T@"NSURL",R,C,V_URL
exists
TB,R,GisExists,V_exists
setQualityOfService:
setName:
timeout
setTimeout:
qualityOfService
destination
setDestination:
setTransport:
userInfo
setUserInfo:
headers
messagePayload
setMessagePayload:
logEventSession
setLogEventSession:
responseHandler
setResponseHandler:
_timeout
_qualityOfService
_destination
_userInfo
_headers
_messagePayload
_logEventSession
_responseHandler
T@"NSUUID",C,N,V_identifier
T@"NSString",C,N,V_name
Td,N,V_timeout
Tq,N,V_qualityOfService
T@"HMFMessageDestination",&,N,V_destination
T@"HMFMessageTransport",W,N,V_transport
T@"NSDictionary",C,N,V_userInfo
T@"NSDictionary",C,N,V_headers
T@"NSDictionary",C,N,V_messagePayload
T@"HMFLogEventSession",&,N,V_logEventSession
T@?,C,N,V_responseHandler
copy
mutableCopy
activityNameWithMessageName:
messageWithName:destination:payload:
messageWithName:qualityOfService:destination:payload:
allowedClassesForXPC
T@"NSSet",R,C
initWithName:destination:payload:
initWithName:qualityOfService:destination:payload:
initWithName:qualityOfService:destination:userInfo:headers:payload:
initWithInternalMessage:
__initWithInternalMessage:
respondWithSuccess
respondWithPayload:
respondWithError:
respondWithPayload:error:
T@"HMFMessageInternal",R,N,V_internal
T@"NSUUID",C,N
T@"HMFMessageDestination",&,N
T@"NSDictionary",C,N
T@?,C,N
Td,R,N
T@"HMFMessageTransport",R,W,N
T@"HMFActivity",R,N
T@"NSDictionary",R,C,N
initWithName:identifier:messagePayload:responseHandler:
messageWithName:messagePayload:
messageWithName:messagePayload:responseHandler:
messageWithName:identifier:messagePayload:
messageWithMessage:messagePayload:
messageWithMessage:messagePayload:responseHandler:
URLForKey:
predicateForKey:
arrayOfDateComponentsForKey:
unarchivedObjectForKey:ofClasses:
fileHandleForKey:
setUserInfoValue:forKey:
setHeaderValue:forKey:
T@"NSUUID",C,D,N
T@"NSString",C,D,N
Td,D,N
Tq,D,N
T@"HMFMessageDestination",&,D,N
T@"HMFMessageTransport",W,D,N
T@"HMFActivity",&,D,N
T@"NSDictionary",C,D,N
T@?,C,D,N
hmf_cachedInstanceForString:
hmf_setOfCachedInstancesForStrings:
orderedDictionary
orderedDictionaryWithObject:forKey:
initWithObjects:orderedKeySet:
initWithObjects:forKeys:copyObjects:copyKeys:
initWithObject:forKey:
initWithObjects:forKeys:
initBySortingDictionary:
initBySortingDictionary:copyItems:keyComparator:
unorderedCopy
mutableUnorderedCopy
_objects
_keys
setOrderedDictionary:
setBySortingDictionary:
setBySortingDictionary:keyComparator:
store
_store
T^{__SCDynamicStore=},R,N,V_store
futureForOperation:
connection:didCloseWithError:
initWithConnection:
peerAddress
openWithCompletionHandler:
sendResponse:completionHandler:
T@"_HMFCFHTTPServerConnection",R,N,V_internal
T@"HMFNetAddress",R,N
T@"<HMFHTTPClientConnectionDelegate>",W,V_delegate
dispatchContextForMessage:
handlerWithReceiver:name:policies:handler:
handlerWithReceiver:targetUUID:name:policies:selector:
invokeWithMessage:
initWithReceiver:targetUUID:name:policies:
hasReceiver:
receiver
target
policies
_hash
_receiver
_target
_policies
T@"NSObject<OS_dispatch_queue>",R,V_queue
T@"<HMFMessageReceiver>",R,W,V_receiver
T@"NSUUID",R,C,V_target
T@"NSArray",R,C,V_policies
TQ,R,V_hash
handler
_handler
T@?,R,C,V_handler
selector
_selector
T:,R,V_selector
messageReceiveQueue
hmf_bytesAsData
hmf_isEqualToUUID:
hmf_isEqualToUUIDString:
hmf_zeroUUID
zeroUUID
hmf_UUIDWithBytesAsData:
T@"NSData",R
initWithNamespace:data:
hmf_UUIDWithNamespace:data:
defaultCenter
addObserver:selector:name:object:
removeObserver:name:object:
removeObserver:
postNotification:
postNotificationName:object:userInfo:
postNotificationName:object:
hmf_dateComponents
hmf_dateComponentsUsingTimeZone:
T@"NSDateComponents",R,C
dateComponents
timeIntervalDescription:
dataUsingEncoding:
addressFamily
addressString
_addressFamily
_addressString
TQ,R,N,V_addressFamily
T@"NSString",R,C,N,V_addressString
initWithSocketAddress:
_in6
normalizedHostname:
initWithHostname:
hostname
_hostname
T@"NSString",R,C,N,V_hostname
localAddress
T@"HMFNetAddressInternal",R,N,V_internal
hmf_isNumeric
hmf_isInteger
hmf_numeric
TB,R,Ghmf_isNumeric
hmf_integer
TB,R,Ghmf_isInteger
isPublishing
service
_service
T@"HMFNetService",R,V_service
initWithAlgorithm:value:
algorithm
_algorithm
Tq,R,V_algorithm
T@"NSData",R,C,V_value
MACAddressString
activateWithOptions:
deactivate
performBlockAfterWoWReassertionDelay:
isAssertionActive
assertionOptions
isWoWAsserted
setWoWAsserted:
T@"<HMFWiFiManagerDataSourceDelegate>",W,N
assertionActive
TB,R,GisAssertionActive
wowAsserted
TB,N,GisWoWAsserted,SsetWoWAsserted:
TB,R,N,GisCaptive
initWithWorkQueue:
cancelAllOperationsWithError:
cancel
underlyingQueue
isAsynchronous
isExecuting
isFinished
error
timeoutDate
cancelWithError:
finish
_executing
_finished
_qosWasSet
T@"NSUUID",R,V_identifier
T@"HMFTimer",R,N,V_timer
T@"HMFActivity",&,V_activity
T@"NSDate",R,C
T@"NSError",R,C
blockOperationWithBlock:
executionBlocks
addExecutionBlock:
_executionBlocks
T@"NSArray",R,C,V_executionBlocks
hmf_removePointer:
hmf_removeObject:
hmf_addObject:
initWithWeakObject:
object
objectHash
_object
_objectHash
TQ,R,N,V_objectHash
T@,R,W,V_object
allMessageTargets
allMessageDestinations
T@"HMFMessageDestination",R,C
T@"NSUUID",R,C
initWithTarget:
T@"NSUUID",R,C,N,V_target
_method
T@"NSURL",C,N,V_URL
T@"NSString",C,N,V_method
T@"NSDictionary",&,N,V_headerFields
T@"NSData",&,N,V_body
T@"HMFActivity",R,N,V_activity
initWithInternalRequest:
urlRequest
timeoutInterval
setTimeoutInterval:
_timeoutInterval
Td,N,V_timeoutInterval
T@"HMFHTTPRequestInternal",R,N,V_internal
T@"NSURL",R,C,N
T@"NSURLRequest",R,C,N
initWithURL:method:body:timeoutInterval:
filterMessage:withPolicies:error:
policyOfClass:fromPolicies:
requiredPolicyOfClass:fromPolicies:error:
canInitWithMessage:
policyClasses
acceptWithPolicies:error:
initWithMessage:
T@"HMFMessage",R,C,V_message
redactedDescription
initWithName:value:
initWithName:value:options:formatter:
formatter
_formatter
T@"<NSObject>",R,N,V_value
T@"NSFormatter",R,C,N,V_formatter
hmf_isEmpty
hmf_empty
TB,R,Ghmf_isEmpty
initWithDefaultClass:
classForKey:
setClass:forKey:
defaultClass
_classes
_defaultClass
T#,R,N,V_defaultClass
initWithRequest:statusCode:
responseRef
completionHandler
setCompletionHandler:
response
_responseRef
_completionHandler
_response
T@"_HMFCFHTTPMessage",R,N,V_response
T@"_HMFCFHTTPServerRequest",R,N,V_request
T^{_CFHTTPServerResponse=},R,N,V_responseRef
T@?,C,N,V_completionHandler
isReady
authorization
_ready
_authorization
T@"HMFLocationAuthorization",R,V_authorization
T@"CLLocationManager",R,V_manager
initWithBlock:
_block
server:didStopWithError:
server:shouldAcceptConnection:
server:didOpenConnection:
server:didCloseConnection:
serverDidInvalidate:
dumpState
initWithServiceType:name:port:options:
initWithServiceType:name:port:options:netManager:
addConnection:
removeConnection:
startWithCompletionHandler:
stopWithError:
_stopWithError:
requestHandlers
registerRequestHandler:
unregisterRequestHandler:
_handleReceivedRequest:connection:
_handleOpenedConnection:
_handleClosedConnection:
_requestHandlers
_connectionIdleTimeout
T@"_HMFCFHTTPServer",&,N,V_internal
T@"<HMFHTTPServerDelegate>",W,V_delegate
TQ,R,V_port
Td,V_connectionIdleTimeout
T@"HMFMutableNetService",R,N,V_netService
T@"NSArray",R,C,V_connections
booleanWithBool:
numberWithChar:
numberWithUnsignedChar:
numberWithShort:
numberWithUnsignedShort:
numberWithInt:
numberWithUnsignedInt:
numberWithLong:
numberWithUnsignedLong:
numberWithLongLong:
numberWithUnsignedLongLong:
numberWithFloat:
numberWithDouble:
numberWithInteger:
numberWithUnsignedInteger:
numberWithBool:
initWithBool:
getValue:
getValue:size:
objCType
charValue
classForCoder
initWithChar:
initWithUnsignedChar:
initWithShort:
initWithUnsignedShort:
initWithInt:
initWithUnsignedInt:
initWithLong:
initWithUnsignedLong:
initWithLongLong:
initWithUnsignedLongLong:
initWithFloat:
initWithDouble:
initWithInteger:
initWithUnsignedInteger:
handleNetworkReachabilityChange:
networkReachabilityRef
currentNetworkFlags
setCurrentNetworkFlags:
_currentNetworkFlags
_networkReachabilityRef
T^{__SCNetworkReachability=},R,N,V_networkReachabilityRef
TI,N,V_currentNetworkFlags
initWithKeyPath:object:
initWithKeyPath:object:options:
__invalidate
setHandler:
keyPath
_observing
_keyPath
T@"NSString",R,C,V_keyPath
T@?,C,V_handler
hmf_registerObserverForKeyPath:options:handler:
lock
unlock
lockWithOptions:
assertOwner
assertNotOwner
initWithOptions:
_internalOptions
defaultScheduler
mainScheduler
performOperation:
performWithQualityOfService:block:
performSelector:target:argument:
performSelector:target:argument:qualityOfService:
_operationQueue
hmf_objectsAreKindOfClass:
hmf_objectPassingTest:
hmf_objectWithOptions:passingTest:
hmf_objectsPassingTest:
hmf_objectsWithOptions:passingTest:
describeElements:
hmf_removeFirstObject
hmf_dequeue
hmf_maybeDequeue
hmf_enqueue:
hmf_enqueueMultiple:
netServiceDidStartPublishing:
netServiceDidStopPublishing:
netService:didUpdateAddresses:
errorFromNetServiceErrorDict:
netServiceWillPublish:
netServiceDidPublish:
netService:didNotPublish:
netServiceWillResolve:
netServiceDidResolveAddress:
netService:didNotResolve:
netServiceDidStop:
netService:didUpdateTXTRecordData:
netService:didAcceptConnectionWithInputStream:outputStream:
initWithDomain:type:name:
startMonitoring
isResolved
setResolved:
setPublishing:
resolveState
setResolveState:
resolveRunningState
setResolveRunningState:
hostName
setHostname:
addresses
setAddresses:
notifyUpdatedAddresses:
TXTRecord
setTXTRecord:
removeAllTXTRecordObjects
updateTXTRecordWithData:
bestAddress
resolveWithTimeout:completionHandler:
confirmWithTimeout:completionHandler:
_reallyResolveWithTimeout:completionHandler:
resolveBlocks
_addresses
_TXTRecord
_publishing
_hostName
_resolveState
_resolveRunningState
_resolveBlocks
T@"NSMutableArray",R,N,V_resolveBlocks
Tq,N,V_resolveState
Tq,N,V_resolveRunningState
T@"NSNetService",R,N,V_internal
publishing
TB,GisPublishing,V_publishing
T@"<HMFNetServiceDelegate>",W,V_delegate
resolved
TB,R,GisResolved,V_resolved
T@"HMFNetAddress",R,C,V_hostName
initWithDomain:type:name:port:
setPort:
setTXTRecordValue:forKey:
removeTXTRecordValueForKey:
updateTXTRecord
startPublishingWithCompletionHandler:
stopPublishing
publishBlock
setPublishBlock:
_publishBlock
T@?,C,N,V_publishBlock
TQ,D
T@"NSDictionary",C,D
netService:didUpdateTXTRecord:
setSessionFactory:
sessionWithUUID:serviceName:uploadImmediately:
addCommonField:withValue:
removeCommonField:
submitEventWithName:serviceName:uploadImmediately:payload:
submitEventWithName:serviceName:payload:
_sessionFactory
sessionWithServiceName:samplingUUID:containsRealtime:
initWithServiceName:sessionUUID:isRealtime:submitter:timeSourceBlock:
lastEventTime
sessionUUID
isRealtime
submitter
timeSourceBlock
_isOpen
_queuedEvents
_isRealtime
_lastEventTime
_sessionUUID
_submitter
_timeSourceBlock
T@"NSUUID",R,N,V_sessionUUID
TB,R,N,V_isRealtime
T@"<_HMFLogBackendSubmitterDelegate>",R,W,N,V_submitter
T@?,R,N,V_timeSourceBlock
Td,R,N,V_lastEventTime
initWithMessages:serviceName:sessionUUID:isRealtime:rtcFactory:staleSessionBlock:
changeOperationState:
messages
rtcFactory
staleSessionBlock
_operationState
_messages
_rtcFactory
_staleSessionBlock
T@"NSArray",R,N,V_messages
T@"<HMFRTCSessionFactory>",R,N,V_rtcFactory
T@?,R,N,V_staleSessionBlock
sharedSessionManager
submitMessages:serviceName:sessionUUID:isRealtime:
logBackendSessionWithServiceName:sessionUUID:isRealtime:
initWithRTCFactory:timeSourceBlock:
_isTimeValid
sendMetaEventWithName:forServiceName:
checkForStaleSessions
_activeSessions
_nextStaleCheckTime
__isTimeValid
T@"NSOperationQueue",R,N,V_queue
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSObject"16@0:8
v16@0:8
@24@0:8@16
d16@0:8
@"NSObject<OS_os_transaction>"
v24@0:8@16
@48@0:8#16@24@32^@40
@32@0:8@16@24
@40@0:8@16#24@32
@32@0:8@16^@24
v24@0:8@"HMFTimer"16
v32@0:8@16d24
v32@0:8@16@24
@?16@0:8
v24@0:8@?16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"HMFTimer"
@"<HMFStagedValueDelegate>"
@32@0:8d16Q24
@"NSObject<OS_dispatch_queue>"
@"NSDate"
@"<HMFTimerDelegate>"
@"NSObject<OS_dispatch_source>"
@48@0:8d16d24q32Q40
q16@0:8
@24@0:8^{_NSZone=}16
@"NSArray"16@0:8
@"NSString"24@0:8@16
@24@0:8^@16
@32@0:8@16@?24
{_HMFFutureBlockOutcome=q@}16@0:8
@24@0:8@?16
@32@0:8@?16@?24
@40@0:8@16@?24@?32
@"NSError"
@"HMFPromise"
@"HMFAsyncFuture"
{atomic_flag="_Value"AB}
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8@16@24@32
@"NSString"
@"HMFPairingKey"
@"NSData"
@32@0:8@16Q24
@24@0:8Q16
@40@0:8@16@24q32
@40@0:8q16@24q32
@24@0:8^{__CFHTTPMessage=}16
v24@0:8q16
^{__CFHTTPMessage=}16@0:8
^{__CFHTTPMessage=}
@24@0:8d16
@40@0:8@16@24@?32
@"NSPredicate"
@"NSDictionary"16@0:8
@"HMFSoftwareVersion"16@0:8
v20@0:8B16
@"<HMFNetMonitorDelegate>"
@"HMFNetAddress"
@40@0:8q16@24@32
@48@0:8q16@24@32@40
@56@0:8q16@24@32@40@48
@24@0:8q16
@32@0:8q16@24
@40@0:8Q16@24@32
B24@0:8^@16
@"HMFWiFiManager"
v28@0:8@16B24
v28@0:8@"<HMFWiFiManagerDataSource>"16B24
v24@0:8@"<HMFWiFiManagerDataSource>"16
@32@0:8Q16@24
@"HMFMACAddress"
@"<HMFWiFiManagerDataSource>"
@"NSHashTable"
v40@0:8@16@24@32
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
i16@0:8
v32@0:8q16@?24
{hmf_unfair_data_lock_s="lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}}
@"NSMutableSet"
@"__HMFLocationAuthorizationRequest"
@"__HMFLocationAuthorizationMarkOperation"
@"NSBundle"
@"CLLocationManager"
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@"NSEnumerator"16@0:8
v32@0:8Q16@?24
@"NSArray"32@0:8@"NSArray"16@24
v24@0:8@?<v@?@@^B>16
v32@0:8Q16@?<v@?@@^B>24
@40@0:8Q16{_HMFRate=Qd}24
B24@0:8Q16
{_HMFRate=Qd}16@0:8
{os_unfair_recursive_lock_s="ourl_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"ourl_count"I}
{_HMFRate="value"Q"period"d}
@40@0:8Q16Q24Q32
q24@0:8@16
@40@0:8{?=qqq}16
@48@0:8Q16Q24Q32@40
{?=qqq}16@0:8
@32@0:8@16d24
I16@0:8
v20@0:8I16
@"NSUUID"
v32@0:8@"NSString"16@"NSDictionary"24
@"NSUUID"16@0:8
@"HMFLogEventSessionVoucher"16@0:8
@48@0:8@16@24@32@40
@"NSDictionary"
@"<HMFLogBackendSession>"
@44@0:8@16@24B32@36
@"<HMFLogEventSession>"44@0:8@"NSUUID"16@"NSString"24B32@"NSDictionary"36
v32@0:8@16@"<NSCopying>"24
v24@0:8@"NSArray"16
@"NSMutableDictionary"
B40@0:8^@16^@24d32
B32@0:8@16^B24
B32@0:8@16^@24
q32@0:8@16^@24
@36@0:8@16B24@28
v32@0:8@16@?24
@"<HMFMessageTransportDelegate>"
v36@0:8@16@24B32
v24@0:8@"NSNetServiceBrowser"16
v32@0:8@"NSNetServiceBrowser"16@"NSDictionary"24
v36@0:8@"NSNetServiceBrowser"16@"NSString"24B32
v36@0:8@"NSNetServiceBrowser"16@"NSNetService"24B32
@20@0:8B16
@"NSMutableOrderedSet"
@"<HMFNetServiceBrowserDelegate>"
@"NSNetServiceBrowser"
v32@0:8^{__CFString=}16@24
@"NSMutableArray"
@32@0:8Q16Q24
v24@0:8d16
^{_CFHTTPServer=}16@0:8
@"<_HMFCFHTTPServerDelegate>"
^{_CFHTTPServer=}
v40@0:8@16@24@?32
v48@0:8@16@24Q32@?40
v24@0:8@"NSString"16
@40@0:8@16@24Q32
@48@0:8@16@24@32Q40
@?24@0:8@?16
@?32@0:8q16@?24
@"NSObject<OS_os_activity>"
@"NSObject<OS_voucher>"
@"<HMFLogEventSession>"
@"HMFActivity"
@"NSArray"
v24@0:8Q16
@"NSThread"
@"HMFHTTPResponseInternal"
@"HMFHTTPRequest"
v48@0:8@16@24@32^v40
v32@0:8@"HMFMessageTransport"16@"HMFMessage"24
v40@0:8@16@24:32
v48@0:8@16@24@32:40
v56@0:8@16@24@32@40:48
v48@0:8@16@24@32@?40
@"NSSet"
@"HMFMessageTransport"
v56@0:8@16@24@32@?40@?48
@24@0:8^{_CFHTTPServerConnection=}16
v24@0:8^{_CFHTTPServerRequest=}16
v40@0:8@16^{__CFReadStream=}24Q32
v32@0:8q16@24
v40@0:8q16@24@32
v32@0:8^{_CFHTTPServerResponse=}16@24
^{_CFHTTPServerConnection=}16@0:8
@"<_HMFCFHTTPServerConnectionDelegate>"
^{_CFHTTPServerConnection=}
f16@0:8
^{IONotificationPort=}16@0:8
^{IONotificationPort=}
@"_HMFNetManagerWoWAssertion"
@"<HMFSystemInfoNameDataSourceDelegate>"16@0:8
v24@0:8@"<HMFSystemInfoNameDataSourceDelegate>"16
@"HMFMACAddress"16@0:8
^{MGNotificationTokenStruct=}16@0:8
@"<HMFSystemInfoNameDataSourceDelegate>"
@"HMFSoftwareVersion"
^{MGNotificationTokenStruct=}
@40@0:8@16Q24@32
#24@0:8@16
v32@0:8#16@24
@"HMFClassRegistry"
@48@0:8@16Q24@32@40
@"<NSObject>"
@"HMFPreference"
@56@0:8@16Q24@32@40@48
@48@0:8{?=[8I]}16
@20@0:8i16
B24@0:8^{?=[8I]}16
^{?=[8I]}
@"NSURL"
v24@0:8@?<v@?>16
@28@0:8@16B24
v24@0:8@"HMFNetMonitor"16
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
@56@0:8@16@24@32@40@48
B20@0:8B16
@"HMFHTTPClientConfiguration"
@"<HMFHTTPClientDelegate>"
@"HMFNetService"
@"NSURLSession"
@"HMFNetMonitor"
@"NSOperationQueue"
@"HMFNetManager"
v32@0:8@"<HMFSystemInfoNameDataSource>"16@"NSString"24
v28@0:8@"<HMFSystemInfoMigrationDataSource>"16B24
@"<HMFSystemInfoNameDataSource>"
@"<HMFSystemInfoMarketingInformationDataSource>"
@"<HMFSystemInfoSerialNumberDataSource>"
@"<HMFSystemInfoProductInfoDataSource>"
@"<HMFSystemInfoSoftwareVersionDataSource>"
@"<HMFSystemInfoMigrationDataSource>"
@"<HMFSystemInfoWiFiDataSource>"
@"<HMFSystemInfoBluetoothLEDataSource>"
@"<HMFSystemInfoProductColorDataSource>"
@40@0:8q16q24@32
@48@0:8q16q24q32@40
@56@0:8q16q24q32@40q48
@48@0:8q16q24@32@40
@64@0:8q16q24q32@40q48@56
@32@0:8@16^{_CFHTTPServerRequest=}24
^{_CFHTTPServerRequest=}16@0:8
^{__CFReadStream=}16@0:8
^{_CFHTTPServerRequest=}
^{__CFReadStream=}
@"_HMFCFHTTPServerConnection"
@"NSMutableData"
@"HMFMessageDestination"
@"HMFLogEventSession"
@48@0:8@16q24@32@40
@64@0:8@16q24@32@40@48@56
B32@0:8@16@24
@"HMFMessageInternal"
@48@0:8@16@24@32@?40
@40@0:8@16@24B32B36
@36@0:8@16B24@?28
@"NSOrderedSet"
^{__SCDynamicStore=}16@0:8
^{__SCDynamicStore=}
@"HMFFuture"
v32@0:8@"_HMFCFHTTPServerConnection"16@"_HMFCFHTTPServerRequest"24
@"<HMFHTTPClientConnectionDelegate>"
@56@0:8@16@24@32@40:48
@"<HMFMessageReceiver>"
:16@0:8
v48@0:8@16:24@32@40
@24@0:8r^{sockaddr=CC[14c]}16
{sockaddr_in="sin_len"C"sin_family"C"sin_port"S"sin_addr"{in_addr="s_addr"I}"sin_zero"[8c]}
{sockaddr_in6="sin6_len"C"sin6_family"C"sin6_port"S"sin6_flowinfo"I"sin6_addr"{in6_addr="__u6_addr"(?="__u6_addr8"[16C]"__u6_addr16"[8S]"__u6_addr32"[4I])}"sin6_scope_id"I}
@"HMFNetAddressInternal"
@"<HMFWiFiManagerDataSourceDelegate>"16@0:8
v24@0:8@"<HMFWiFiManagerDataSourceDelegate>"16
B24@0:8^v16
@"HMFHTTPRequestInternal"
@48@0:8@16@24@32d40
q40@0:8@16@24^@32
@32@0:8#16@24
@40@0:8#16@24^@32
@"HMFMessage"
@48@0:8@16@24Q32@40
@"NSFormatter"
@24@0:8#16
@32@0:8@16q24
^{_CFHTTPServerResponse=}16@0:8
^{_CFHTTPServerResponse=}
@"_HMFCFHTTPServerRequest"
@"_HMFCFHTTPMessage"
@"HMFLocationAuthorization"
v24@0:8@"_HMFCFHTTPServer"16
v32@0:8@"_HMFCFHTTPServer"16@"_HMFCFHTTPServerConnection"24
v32@0:8@"HMFHTTPClientConnection"16@"HMFHTTPRequest"24
v32@0:8@"HMFHTTPClientConnection"16@"NSError"24
@48@0:8@16@24Q32Q40
@56@0:8@16@24Q32Q40@48
@"_HMFCFHTTPServer"
@"<HMFHTTPServerDelegate>"
@"HMFMutableNetService"
@20@0:8c16
@20@0:8C16
@20@0:8s16
@20@0:8S16
@20@0:8I16
@20@0:8f16
v24@0:8^v16
v32@0:8^v16Q24
r*16@0:8
c16@0:8
^{__SCNetworkReachability=}16@0:8
^{__SCNetworkReachability=}
@40@0:8@16Q24@?32
@32@0:8q16@?24
@48@0:8:16@24@32q40
@32@0:8Q16@?24
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
v32@0:8d16@?24
@"NSNetService"
@"<HMFNetServiceDelegate>"
@36@0:8@16@24B32
v44@0:8@16@24B32@36
@"<HMFLogEventSessionFactory>"
@"<HMFRTCReporting>"36@0:8@"NSString"16@"NSUUID"24B32
B24@0:8@"NSDictionary"16
@52@0:8@16@24B32@36@?44
@"<_HMFLogBackendSubmitterDelegate>"
@60@0:8@16@24@32B40@44@?52
@"<HMFRTCSessionFactory>"
v44@0:8@16@24@32B40
v44@0:8@"NSArray"16@"NSString"24@"NSUUID"32B40
@"<HMFLogBackendSession>"36@0:8@"NSString"16@"NSUUID"24B32
@"NSPointerArray"
