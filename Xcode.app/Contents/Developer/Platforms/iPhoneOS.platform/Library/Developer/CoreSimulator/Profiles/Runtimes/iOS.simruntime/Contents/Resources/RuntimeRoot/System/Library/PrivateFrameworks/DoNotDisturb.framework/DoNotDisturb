@(#)PROGRAM:DoNotDisturb  PROJECT:DoNotDisturb-305.122
<h: %lu; m: %lu>
hour
minute
match schedule
schedule end
<invalid>
v8@?0
com.apple.donotdisturb.DNDAppInfoService.service.lock
v24@?0@"NSNumber"8@"NSError"16
com.apple.donotdisturb.DNDAuxiliaryStateService
cloud: %@; paired: %@;
<N/A>
cloud
hasCloud
paired
hasPaired
SilenceLists
{ %@ }
<none>
essential
time-sensitive
predicate will be ignored because it is too large
operator '%@' is not allowed
operator '%@' is not recognized
expression '%@' is not allowed
expression '%@' is not recognized
iPhone
iPod
iPad
Apple TV
Apple Watch
<unknown>
Lifetime expired
User changed state
Override ended by client
Override replaced by client
Server unresponsive
Client unresponsive
Location lifetime expired
Calendar event lifetime expired
DNDErrorDomain
Contact
Favorite
<%@: %p; allowedContactTypes: %@; deniedContactTypes: %@; allowedContactGroups: %@; deniedContactGroups: %@; allowedContacts: %@; deniedContacts: %@; phoneCallBypassSettings: %@>
allowedContacts
deniedContacts
allowedContactTypes
deniedContactTypes
allowedContactGroups
deniedContactGroups
phoneCallBypassSettings
com.apple.donotdisturb.DNDMeDeviceService.service.lock
v24@?0@"DNDMeDeviceState"8@"NSError"16
com.apple.donotdisturb.DNDMeDeviceService
com.apple.donotdisturb.DNDMeDeviceService.call-out
v32@?0@"NSNumber"8@"DNDMeDeviceState"16@"NSError"24
Custom
Default
Sleep
Driving
Fitness
Work
Personal
Reading
Gaming
Mindfulness
moon.fill
bed.double.fill
car.fill
figure.run
person.lanyardcard.fill
person.fill
book.closed.fill
rocket.fill
apple.mindfulness
MODE_NAME_DEFAULT
MODE_NAME_SLEEP
MODE_NAME_DRIVING
MODE_NAME_FITNESS
MODE_NAME_WORK
MODE_NAME_PERSONAL
MODE_NAME_READING
MODE_NAME_GAMING
MODE_NAME_MINDFULNESS
Inclusive
Exclusive
Unconfigured
<%@: %p; suppressionType: %@; allowedApplicationIdentifiers: %@; deniedApplicationIdentifiers: %@; allowedWebApplicationIdentifiers: %@; deniedWebApplicationIdentifiers: %@; senderConfiguration: %@; minimumBreakthroughUrgency: %@; hideApplicationBadges: %@; applicationConfigurationType: %@; senderConfigurationType: %@; compatibilityVersion: %@; >
suppressionType
allowedApplicationIdentifiers
deniedApplicationIdentifiers
allowedWebApplicationIdentifiers
deniedWebApplicationIdentifiers
senderConfiguration
minimumBreakthroughUrgency
hideApplicationBadges
applicationConfigurationType
senderConfigurationType
compatibilityVersion
compatibility
Q24@?0@"DNDApplicationIdentifier"8@"NSString"16
v24@?0@"DNDContact"8^B16
<%@: %p; UUID: %@; startDate: %@; details: %@; source: %@>
UUID
startDate
details
source
<%@: %p; interruptionBehaviorSetting: %@>
interruptionBehaviorSetting
com.apple.donotdisturb
AuxiliaryState
AppConfiguration
BehaviorResolution
GlobalConfiguration
ModeAssertion
ModeConfiguration
ModeSelection
RemoteConnection
Settings
State
DNDMeDeviceService.client
XPCEventObserver
unknown
no-device
this-device
other-device
<%@: %p; meDeviceStatus: %@; meDeviceName: %@>
meDeviceStatus
meDeviceName
default
disabled
enabled
none
silence
delay delivery
None
%@%@: {%@%@}
%@{%@%@}
%@%@: object1: %@; object2: %@
%@object1: %@; object2: %@
%llu
added
removed
<%@: %p; dateInterval: %@>
dateInterval
LNAction
Failed to encode/decode app action: LinkServices framework is not loaded.
WFAppIntentArchiver
LNFullyQualifiedActionIdentifier
Failed to (un)archive action: VoiceShortcut or LinkServices framework is not loaded.
DNDActionEnabled
DNDActionEncodedAction
DNDActionActionIdentifier
DNDActionBundleIdentifierKey
DNDActionAction
AppConfigurationActionPayload
<%@: %p; identifier: %@; enabled: %@; action: %@; hasEncoded: %@; bundleIdentifier: %@>
SkyF
Sydney
SydneyE
DNDCompatibilityVersionSky
DNDCompatibilityVersionSkyF
DNDCompatibilityVersionSydney
DNDCompatibilityVersionSydneyE
DNDCompatibilityVersionMax
<%@: %p; source: %@; applicationIdentifier: %@; displayName: %@; storeIconURL: %@; cachedIconURL: %@>
applicationIdentifier
displayName
storeIconURL
cachedIconURL
telephony
v24@?0q8^B16
Every Day
<period: s: %@; e: %@; weekdays: %@>
startTime
endTime
weekdays
<%@: %p; bundleID: %@; platform: %@>
bundleID:%@;platform:%@
bundleID
platform
<%@: %p; assertion: %@; invalidationDate: %@; details: %@; source: %@; reason: %@; reasonOverride: %@>
assertion
invalidationDate
reason
reasonOverride
<%@: %p; reason: %@; source: %@; options: %@; state: %@; previousState: %@>
previousState
state
options
DeviceClassNumber
<%@: %p; deviceClass: %@; deviceCapabilities: %@; frameworkVersion: %@>
com.apple.donotdisturb.DNDAppConfigurationService.service.lock
v24@?0@"LNAction"8@"NSError"16
favorite
contact
contact from group
%@:%@
<%@: %p; clientIdentifier: '%@'; auditUUID: %@; timestamp: %llu>
clientIdentifier
auditUUID
timestamp
com.apple.donotdisturb.DNDAvailabilityService.service.lock
<%@: %p; eventUniqueID: '%@'; occurrenceDate: %@; onlyDuringEvent: %@>
eventUniqueID
occurrenceDate
onlyDuringEvent
<%@: %p; minimumBreakthroughUrgency: %@; allowedThreads: %@; deniedThreads: %@; >
minimumBreakthroughUrgency:%@;
allowedThreads:%@;
deniedThreads:%@;
allowedThreads
deniedThreads
WFToggleSettingContextualAction
WFReverseContextualAction
Failed to store system action: VoiceShortcutClient framework is not loaded.
DNDActionReverseAction
<%@: %p; identifier: %@; enabled: %@; action: %@; reverse: %@>
Do Not Disturb
systemIndigoColor
<%@: %p; name: %@; modeIdentifier: %@; symbolImageName: %@; tintColorName: %@; semanticType: %zd; visibility: %lu; identifier: %@; isPlaceHolder: %@>
name
modeIdentifier
symbolImageName
tintColorName
semanticType
visibility
identifier
calendar event
date interval
current-location
schedule
explicit-region
never interrupt
interrupt when unlocked
com.apple.donotdisturb.DNDModeConfigurationService.service.lock
v24@?0@"NSArray"8@"NSError"16
com.apple.sleep.sleep-mode
com.apple.donotdisturb.mode.workout
com.apple.focus.work
com.apple.focus.personal-time
com.apple.focus.reading
com.apple.focus.gaming
com.apple.focus.mindfulness
Mode not supported.
v24@?0@"DNDModeConfiguration"8@"NSError"16
v24@?0@"NSString"8@"NSError"16
v24@?0@"NSArray<__DNDMode__>"8@"NSError"16
v24@?0@"NSPredicate"8@"NSError"16
v24@?0@"DNDAppConfigurationTargetContentIdentifierPrefixesBox"8@"NSError"16
com.apple.focus.current-sentinel
v24@?0@"DNDAppActionsBox"8@"NSError"16
v24@?0@"NSArray<__DNDSystemAction__>"8@"NSError"16
com.apple.donotdisturb.mode.driving
com.apple.donotdisturb.DNDModeConfigurationService
com.apple.donotdisturb.DNDModeConfigurationService.call-out
v32@?0@"NSNumber"8@"DNDModeAssertion"16@"NSError"24
v24@?0@"DNDMode"8^B16
No template found for mode identifier.
Mode configuration already exists for mode identifier.
<%@: %p; enabledSetting: %llu; compatibilityVersion: %@>
enabledSetting
<%@: %p; enabledSetting: %llu; region: %@; detail: %@>
region
detail
<%@: %p; enabledSetting: %llu; timePeriod: %@; creationDate: %@>
timePeriod
creationDate
<%@: %p; enabledSetting: %llu; applicationIdentifier: %@>
Allow
Deny
com.apple.donotdisturb.DNDEventBehaviorResolutionService.service.lock
v24@?0@"DNDClientEventBehavior"8@"NSError"16
user action
client action
lifetime
system state
scheduled
automation
local
ForceStatusUpdate
<%@: %p; contactIdentifier: %@; firstName: %@; middleName: %@; lastName: %@; nickName: %@; organizationName: %@; phoneNumbers: %@; emailAddresses: %@;>
contactIdentifier:%@;
firstName:%@;
middleName:%@;
lastName:%@;
nickName:%@;
organizationName:%@;
phoneNumbers:%@;
emailAddresses:%@;
contactIdentifier
firstName
middleName
lastName
nickName
organizationName
phoneNumbers
emailAddresses
<%@: %p; eventDetails: %@; interruptionSuppression: %@; resolutionReason: %@; activeModeUUID: %@>
eventDetails
interruptionSuppression
resolutionReason
activeModeUUID
<%@: %p; suppressionState: %@; startDate: %@; userVisibleTransitionDate: %@; userVisibleTransitionLifetimeType: %@; activeModeConfiguration: %@; activeModeIdentifier: %@>
suppressionState
activeModeAssertionMetadata
userVisibleTransitionDate
userVisibleTransitionLifetimeType
activeModeConfiguration
overrideModeIdentifier
tvOS
macOS
watchOS
<%@: %p; immediateBypassEventSourceType: %@; immediateBypassCNGroupIdentifier: '%@'; repeatEventSourceBehaviorEnabledSetting: %@>
immediateBypassEventSourceType:%@;immediateBypassCNGroupIdentifier:%@;repeatEventSourceBehaviorEnabledSetting:%@
immediateBypassEventSourceType
immediateBypassCNGroupIdentifier
repeatEventSourceBehaviorEnabledSetting
<%@: %p; identifier: '%@'>
inactive
always
while UI locked
com.apple.donotdisturb.mode.default
com.apple.donotdisturb.mode.bedtime
com.apple.donotdisturb.DNDStateService.service.lock
com.apple.donotdisturb.StateService
com.apple.donotdisturb.StateService.call-out
v24@?0@"DNDState"8@"NSError"16
Call
Call-Record
Direct-Message
Group-Message
Time-Sensitive
Essential
Legacy
<%@: %p; identifier: '%@'; bundleIdentifier:: %@; type: %@; urgency: %@; sender: %@; threadIdentifier: %@; filterCritera: %@; notifyAnyway: %d; behavior: %@>
bundleIdentifier
type
urgency
sender
threadIdentifier
filterCriteria
notifyAnyway
behavior
com.apple.donotdisturbd.focus_configuration_events
DNDFocusConfigurationEventBundleIdentifierKey
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.donotdisturb.xpc.event
com.apple.donotdisturb.availability.service
dnd.service
v16@?0@"BSServiceConnection<BSServiceConnectionContext>"8
v16@?0@"<BSServiceConnectionConfiguring>"8
DNDModeConfigurationSmartTrigger
nothing to merge with
automaticallyGenerated
lastModified same
lastModified distantPast
lastModified
fallthrough
<%@: %p; mode: %@; configuration: %@; triggers: %@; impactsAvailability: %@; dimsLockScreen: %@; created: %@; lastModified: %@; automaticallyGenerated: %@; compatibilityVersion: %@; resolvedCompatibilityVersion: %@; hasSecureData: %@; modFrameworkVersion: %@; modDeviceID: %@>
<%@: %p; mode: %@; impactsAvailability: %@; dimsLockScreen: %@>
mode
configuration
triggers
impactsAvailability
dimsLockScreen
created
lastModifiedByVersion
lastModifiedByDeviceID
isAutomaticallyGenerated
<%@: %p>
<%@: %p; region: '%@'>
System
Library
LocationBundles
DoNotDisturb.bundle
PrivateFrameworks
DoNotDisturb.framework
com.apple.donotdisturb.system
<%@: %p; clientIdentifier: '%@'; deviceIdentifier: '%@'>
deviceIdentifier
%@.%@.%@
<%@: %p; webIdentifier: %@; givenName: %@>
webIdentifier
givenName
webIdentifier:%@;givenName:%@
<schedule: enabled: %@; period: %@; bedtime: %@>
scheduleEnabledSetting
bedtimeBehaviorEnabledSetting
<%@: %p; identifier: '%@'; modeIdentifier: '%@'; modeConfigurationModifiedDate: %@; lifetime: %@; reason: %@; userVisibleEndDate: %@>
modeConfigurationModifiedDate
userVisibleEndDate
<%@: %p; scheduleIdentifier: '%@'; behavior: %@>
scheduleIdentifier
com.apple.donotdisturb.ModeAssertionService.call-out
v24@?0@"DNDModeAssertion"8@"NSError"16
v24@?0@"DNDModeAssertionInvalidation"8@"NSError"16
v24@?0@"NSArray<__DNDModeAssertion__>"8@"NSError"16
v20@?0B8@"NSError"12
email
phone
<%@: %p; contactIdentifier: %@; type: %@; value: %@;>
value
com.apple.donotdisturb.DNDModeSelectionService.service.lock
com.apple.donotdisturb.DNDModeSelectionService
com.apple.donotdisturb.DNDModeSelectionService.call-out
User action
Schedule
System state
com.apple.donotdisturb.DNDGlobalConfigurationService.service.lock
prevented
not prevented
Bypass settings are now per mode configuration
v24@?0@"DNDAccountFeatureSupport"8@"NSError"16
v24@?0@"NSDictionary"8@"NSError"16
com.apple.donotdisturb.DNDGlobalConfigurationService
com.apple.donotdisturb.DNDGlobalConfigurationService.callout
prefs:root=DO_NOT_DISTURB
prefs:root=DO_NOT_DISTURB&path=setup
prefs:root=DO_NOT_DISTURB&path=setup&type=%ld
prefs:root=DO_NOT_DISTURB&path=%@
v24@?0@"DNDAppInfo"8@"NSError"16
com.apple.donotdisturb.DNDAppInfoService
com.apple.donotdisturb.schedule.default
<%@: %p; clientIdentifier: '%@'; modeIdentifier: '%@'; lifetimeType: %@; activeDateInterval: %@; userVisibleEndDate: %@>
lifetimeType
activeDateInterval
@"LNAction"16@?0@"DNDAppAction"8
boxed
com.apple.donotdisturb.monitor
com.apple.donotdisturb.service
com.apple.donotdisturb.service.non-launching
v24@?0@"DNDBehaviorSettings"8@"NSError"16
v24@?0@"DNDScheduleSettings"8@"NSError"16
v24@?0@"NSArray<__DNDModeConfiguration__>"8@"NSError"16
@"NSString"16@?0@"DNDMode"8
Failed to set predicate.
DNDAppConfigurationService is only supported when linking LinkServices
Failed to set target content identifier prefix.
Failed to save action.
DNDAppConfigurationService is only supported when linking VoiceShortcutClient
v24@?0@"NSArray<__WFToggleSettingContextualAction__>"8@"NSError"16
device unlocked
always interrupt flag
always bypass
no bypass
group contact
repeat event
emergency contact
mode configuration type
mode configuration for application
mode configuration for application thread
mode configuration for contacts
mode configuration for favorites
mode configuration for contact group
mode configuration for contact
mode configuration urgency
mode configuration notify anyway
display mirrored
display shared
presentation mode
incompatible configuration
application predicate for mode
com.apple.donotdisturb.DNDSettingsService.service.lock
com.apple.donotdisturb.SettingsService
com.apple.donotdisturb.SettingsService.call-out
com.apple.donotdisturb.appconfiguration.service
com.apple.donotdisturb.DNDAuxiliaryStateService.setScreenIsShared:screenIsMirrored:
[%{public}@] Set auxiliary state; isScreenShared=%d isScreenMirrored=%d
[%{public}@] Error when setting auxiliary state; error='%{public}@' isScreenShared=%d isScreenMirrored=%d
com.apple.donotdisturb.DNDMeDeviceService.queryCurrentState.async
[%{public}@] Processing async 'Me Device' state request
[%{public}@] Error when getting 'Me Device' state, error='%{public}@'
[%{public}@] Got current 'Me Device' state, meDeviceStatus=%{public}@, meDeviceName=%{public}@
com.apple.donotdisturb.DNDMeDeviceService.addListener
Adding 'Me Device' state update listener: listener=%{public}@
Registered for 'Me Device' state updates: listener=%{public}@
Did not register for 'Me Device' state updates, will remove listener: listener=%{public}@
com.apple.donotdisturb.DNDMeDeviceService.removeListener
Removing 'Me Device' state update listener: listener=%{public}@
com.apple.donotdisturb.DNDMeDeviceService.registerForUpdates
[%{public}@] Registering 'Me Device' state update listener
[%{public}@] Error when registering 'Me Device' state update listener, error='%{public}@'
[%{public}@] Begin configuration
[%{public}@] suppressionType: %{public}@; minimumBreakthroughUrgency: %{public}@; hideApplicationBadges: %{public}@; applicationConfigurationType: %{public}@; senderConfigurationType: %{public}@; compatibilityVersion: %{public}@
[%{public}@] Allowed app: %{private}@; %{private}@
[%{public}@] Denied app: %{private}@
[%{public}@] Allowed Web app: %{private}@
[%{public}@] Denied Web app: %{private}@
[%{public}@] senderConfiguration: %{private}@
[%{public}@] End configuration
nil startDate provided to DNDModeAssertion initializer. %@
[%{public}@] Begin diff
[%{public}@] %{private}@
[%{public}@] End diff
Failed to encode/decode app action: LinkServices framework is not loaded.
Failed to (un)archive action: VoiceShortcut or LinkServices framework is not loaded.
Failed to unarchive settings: %{public}@
Failed to unarchive settings using fallback: %{public}@
Unarchived settings using fallback. %@
Unarchived settings. %@
Failed to archive settings: %{public}@
Unexpected Project Source Version: %@
Parsed current version: %@; source: %@
com.apple.donotdisturb.DNDAppConfigurationService.getCurrentAppConfigurationForActionIdentifier
[%{public}@] Getting current app configuration for action identifier %@
[%{public}@] Error when getting current app configuration for action identifier %@, error='%{public}@'
[%{public}@] Got current app configuration for action identifier %@
com.apple.donotdisturb.DNDAppConfigurationService.invalidateAppContextForActionIdentifier
[%{public}@] Invalidating app context for action identifier %@
[%{public}@] Error when getting invalidating app context for actionIdentifier %@, error='%{public}@'
[%{public}@] Invalidated app context for actionIdentifier %@
com.apple.donotdisturb.DNDAvailabilityService.getIsLocalUserAvailable
[%{public}@] Get user availability, availability=%{public}@
[%{public}@] Error when getting user availability in current mode for contact, error='%{public}@'
Failed to store system action: VoiceShortcutClient framework is not loaded.
com.apple.donotdisturb.DNDModeConfigurationService.hasActivelyConfiguredModes
[%{public}@] Determined if modes have been actively configured, hasActivelyConfiguredModes=%{public}@
[%{public}@] Error determining if modes have been actively configured, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.setModeConfiguration
[%{public}@] Set mode configuration, configuration=%{public}@
[%{public}@] Error when setting mode configuration, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.removeModeConfiguration
com.apple.donotdisturb.DNDModeConfigurationService.getModeConfigurations
[%{public}@] Get mode configurations
[%{public}@] Error when getting mode configurations, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.getModeConfiguration
[%{public}@] Get mode configuration, identifier=%{public}@
com.apple.donotdisturb.DNDModeConfigurationService.getIsLocalUserAvailable
[%{public}@] Get user availability in current mode for contact, availability=%{public}@, handle=%{private}@
com.apple.donotdisturb.DNDModeConfigurationService.getAllowedModesForContact
[%{public}@] Get allowed modes for contact, handle=%{private}@
[%{public}@] Error when getting allowed modes for contact, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.getSilencedModesForContact
[%{public}@] Get silenced modes for contact, handle=%{private}@
[%{public}@] Error when getting silenced modes for contact, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.publishCurrentStatusKitAvailability
[%{public}@] Request to publish statuskit availability succeeded: %{public}@
[%{public}@] Error when publishing statuskit availability, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.allModes
[%{public}@] Got all modes, modes=%{public}@
com.apple.donotdisturb.DNDModeConfigurationService.availableModes
[%{public}@] Got available modes, modes=%{public}@
com.apple.donotdisturb.DNDModeConfigurationService.setAppConfigurationPredicate
[%{public}@] Set app configuration predicate, predicate=%{public}@ applicationIdentifier=%{public}@ modeIdentifier=%{public}@
[%{public}@] Error when setting app configuration predicate, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.getAppConfigurationPredicate
[%{public}@] Got app configuration predicate, predicate=%{public}@ applicationIdentifier=%{public}@ modeIdentifier=%{public}@
[%{public}@] Error when getting app configuration predicate, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.setAppConfigurationTargetContentIdentifierPrefix
[%{public}@] Set target content identifier prefix, prefix=%{public}@ applicationIdentifier=%{public}@ modeIdentifier=%{public}@
[%{public}@] Error when setting target content identifier prefix, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.getAppConfigurationTargetContentIdentifierPrefixes
[%{public}@] Got %@ target content identifier prefixes for modeIdentifier %{public}@
[%{public}@] Error when getting target content identifier prefixes, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.setAppConfigurationAction
com.apple.donotdisturb.DNDModeConfigurationService.clearAppConfigurationAction
com.apple.donotdisturb.DNDModeConfigurationService.getAppConfigurationActions
com.apple.donotdisturb.DNDModeConfigurationService.setAppAction
[%{public}@] Set app action, action=%{public}@; modeIdentifier=%{public}@
[%{public}@] Error when setting app configuration action, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.clearAppAction
[%{public}@] Clear app action, identifier=%{public}@ applicationIdentifier=%{public}@ modeIdentifier=%{public}@
[%{public}@] Error when clearing app action, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.getAppActionsForModeIdentifier
[%{public}@] Got %@ app actions for modeIdentifier %{public}@. actions = %@
[%{public}@] Error when getting app actions, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.setSystemAction
[%{public}@] Set system action, action=%{public}@; modeIdentifier=%{public}@
[%{public}@] Error when setting system configuration action, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.clearSystemAction
[%{public}@] Clear system action, identifier=%{public}@ modeIdentifier=%{public}@
[%{public}@] Error when clearing system action, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.getSystemActionsForModeIdentifier
[%{public}@] Got %@ system actions for modeIdentifier %{public}@
[%{public}@] Error when getting system actions, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.setSystemConfigurationAction
com.apple.donotdisturb.DNDModeConfigurationService.clearSystemConfigurationAction
com.apple.donotdisturb.DNDModeConfigurationService.getSystemConfigurationActions
com.apple.donotdisturb.DNDModeConfigurationService.getSyncPreferenceEnabled
[%{public}@] Got sync preference enabled=%{public}@
[%{public}@] Error when getting sync preference enabled, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.getSyncAvailable
[%{public}@] Got sync available=%{public}@
[%{public}@] Error when getting sync available, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.getSyncEnabled
[%{public}@] Got sync enabled=%{public}@
[%{public}@] Error when getting sync enabled, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.setSyncPreferenceEnabled
[%{public}@] Set sync preference enabled=%{public}@
[%{public}@] Error when setting sync enabled, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.addListener
Adding update listener: listener=%{public}@
Registered for updates: listener=%{public}@
Did not register for updates, will remove listener: listener=%{public}@
com.apple.donotdisturb.DNDModeConfigurationService.removeListener
Removing update listener: listener=%{public}@
received updated available mode identifiers: identifiers=%{public}@
received updated app configuration context for mode identifier: identifier=%{public}@
com.apple.donotdisturb.DNDModeConfigurationService.syncModeConfigurations
[%{public}@] Synced mode configurations
com.apple.donotdisturb.DNDModeConfigurationService.createDefaultDrivingModeConfiguration
[%{public}@] Creating Driving mode configuration from template
com.apple.donotdisturb.DNDModeConfigurationService.createDefaultSleepingModeConfiguration
[%{public}@] Creating Sleeping mode configuration from template
com.apple.donotdisturb.DNDModeConfigurationService.createDefaultWorkoutModeConfiguration
[%{public}@] Creating Workout mode configuration from template
com.apple.donotdisturb.DNDModeConfigurationService.createModeConfigurationUsingTemplateForModeIdentifier
[%{public}@] Creating mode configuration from template for identifier: identifier=%{pubic}@
com.apple.donotdisturb.DNDModeConfigurationService.createEmptyModeConfigurationForMode
[%{public}@] Remove mode configuration, identifier=%{public}@
[%{public}@] Error when removing mode configuration, error='%{public}@'
[%{public}@] Error mode configuration for identifier cannot be removed, identifier=%{public}@
com.apple.donotdisturb.DNDModeConfigurationService.registerForUpdates
[%{public}@] Registering update listener
[%{public}@] Error when registering update listener, error='%{public}@'
com.apple.donotdisturb.DNDEventBehaviorResolutionService.resolveEvent
[%{public}@] Resolving behavior for event, details=%@
[%{public}@] Error when resolving behavior, error='%{public}@'
[%{public}@] Resolved event, details=%@ behavior=%@
%{public}@ normalizing phonenumber %{private}@
%{public}@ couldnt normalize phonenumber %{private}@
com.apple.donotdisturb.DNDStateService.queryCurrentState.async
[%{public}@] Processing async state request
[%{public}@] Error when getting state, error='%{public}@'
[%{public}@] Got current state, state=%{public}@
com.apple.donotdisturb.DNDStateService.queryCurrentState
[%{public}@] Processing state request
com.apple.donotdisturb.DNDStateService.addStateUpdateListener
Adding state update listener: listener=%{public}@
Registered for state updates: listener=%{public}@
Did not register for state updates, will remove listener: listener=%{public}@
com.apple.donotdisturb.DNDStateService.removeStateUpdateListener
Removing state update listener: listener=%{public}@
com.apple.donotdisturb.DNDStateService.registerForStateUpdates
[%{public}@] Registering state update listener
[%{public}@] Error when registering state update listener, error='%{public}@'
Received XPC event for %s
XPC events subscriber received error: %s
XPC events subscriber received event of unexpected type %s
XPC request connection was activated: connection=%p
XPC request connection was interrupted: connection=%p
XPC request connection was invalidated, cannot recover: connection=%p
Merge decision: self; reason: %{public}@
Merge decision: other; reason: %{public}@
[%{public}@] Begin: %{public}@
[%{public}@] %{public}@
[%{public}@] created: %{public}@; lastModified: %{public}@; isAutomaticallyGenerated: %{public}d; hasSecureData: %{public}d; compatibilityVersion: %{public}@; 
[%{public}@] triggers: %{private}@
[%{public}@] End
com.apple.donotdisturb.DNDModeAssertionService.takeModeAssertion
[%{public}@] Taking mode assertion; details=%{public}@
[%{public}@] Error when taking mode assertion, error='%{public}@'
[%{public}@] Took mode assertion, assertion=%{public}@
com.apple.donotdisturb.DNDModeAssertionService.invalidateActiveModeAssertion
[%{public}@] Invalidating active mode assertion
[%{public}@] Error when invalidating mode assertion, error='%{public}@'
[%{public}@] Invalidated mode assertion, invalidation=%{public}@
com.apple.donotdisturb.DNDModeAssertionService.activeModeAssertion
[%{public}@] Getting active mode assertion
[%{public}@] Error when requesting active mode assertion, error='%{public}@'
[%{public}@] Got mode assertion, assertion=%{public}@
com.apple.donotdisturb.DNDModeAssertionService.latestModeAssertionInvalidation
[%{public}@] Getting latest mode assertion invalidation
[%{public}@] Error when requesting latest mode assertion invalidation, error='%{public}@'
[%{public}@] Got invalidation, invalidation=%{public}@
com.apple.donotdisturb.DNDModeAssertionService.invalidateAllActiveModeAssertions
[%{public}@] Invalidating all active mode assertions
[%{public}@] Error when invalidating all active mode assertions, error='%{public}@'
[%{public}@] Invalidated all active mode assertions, success=%{BOOL}u
com.apple.donotdisturb.DNDModeAssertionService.allModeAssertionsWithError
[%{public}@] Requesting all active mode assertions
[%{public}@] Error when requesting all active mode assertions, error='%{public}@'
[%{public}@] Requested all active mode assertions, success=%{BOOL}u
com.apple.donotdisturb.DNDModeAssertionService.addAssertionUpdateListener
[%{public}@] Adding assertion update listener: listener=%{public}@
[%{public}@] Registered for assertion updates: listener=%{public}@
[%{public}@] Did not register for assertion updates, will remove listener: listener=%{public}@, error=%{public}@
com.apple.donotdisturb.DNDModeAssertionService.removeAssertionUpdateListener
[%{public}@] Removing assertion update listener: listener=%{public}@
[%{public}@] Remote service got assertion change: service=%{public}@, assertion=%{public}@, invalidation=%{public}@
[%{public}@] Will deliver assertion invalidation to listener: invalidation=%{public}@, listener=%{public}@
[%{public}@] Will deliver assertion change to listener: assertion=%{public}@, listener=%{public}@
com.apple.donotdisturb.DNDModeAssertionService.registerForAssertionUpdates
[%{public}@] Registering assertion update listener
com.apple.donotdisturb.DNDModeSelectionService.activateModeWithIdentifier
[%{public}@] Activate mode with identifier, modeIdentifier=%{public}@
[%{public}@] Error when setting mode with identifier, modeIdentifier=%{public}@ error='%{public}@'
com.apple.donotdisturb.DNDModeSelectionService.invalidateModeAssertionWithUUID
[%{public}@] Invalidate mode assertion with UUID, assertionUUID=%{public}@
[%{public}@] Error when invalidating mode assertion with UUID, assertionUUID=%{public}@ error='%{public}@'
com.apple.donotdisturb.DNDModeSelectionService.activeModeAssertion
[%{public}@] Getting active mode assertion; not restricted by client identifier
com.apple.donotdisturb.DNDModeSelectionService.addListener
com.apple.donotdisturb.DNDModeSelectionService.removeListener
com.apple.donotdisturb.DNDModeSelectionService.registerForUpdates
[%{public}@] Error when registering mode selection update listener, error='%{public}@'
com.apple.donotdisturb.DNDGlobalConfigurationService.getPreventAutoReply
[%{public}@] Auto reply is %{public}@
[%{public}@] Error when getting prevent-auto-reply state, error='%{public}@'
com.apple.donotdisturb.DNDGlobalConfigurationService.setPreventAutoReply
[%{public}@] Set auto reply to %{public}@
[%{public}@] Error when setting prevent-auto-reply state, error='%{public}@'
com.apple.donotdisturb.DNDGlobalConfigurationService.modesCanImpactAvailability
[%{public}@] Modes can%{public}@ impact availability.
[%{public}@] Error when getting overall availability state, error='%{public}@'
com.apple.donotdisturb.DNDGlobalConfigurationService.setModesCanImpactAvailability
[%{public}@] Set modesCanImpactAvailability to %{public}@
[%{public}@] Error when setting modesCanImpactAvailability state, error='%{public}@'
Bypass settings are now per mode configuration
com.apple.donotdisturb.DNDModeConfigurationService.getCloudSyncState
[%{public}@] Got cloud sync state=%{public}@
[%{public}@] Error when getting cloud sync state, error='%{public}@'
[%{public}@] Set cloud sync preference enabled=%{public}@
[%{public}@] Error when setting cloud sync enabled, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.getPairSyncState
[%{public}@] Got pair sync state=%{public}@
[%{public}@] Error when getting pair sync state, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.setPairSyncPreferenceEnabled
[%{public}@] Set pair sync preference enabled=%{public}@
[%{public}@] Error when setting pair sync enabled, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.didChangeFocusStatusSharingSettingForApplicationIdentifier
[%{public}@] Signaled change to focus status sharing setting, applicationIdentifier=%{public}@ success=%{public}@
[%{public}@] Error when signaling change to focus status sharing setting, applicationIdentifier=%{public}@ error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.getAccountFeatureSupport
[%{public}@] Got account feature support=%{public}@
[%{public}@] Error when getting account feature support; error='%{public}@'
com.apple.donotdisturb.DNDGlobalConfigurationService.addListener
com.apple.donotdisturb.DNDGlobalConfigurationService.removeListener
com.apple.donotdisturb.DNDModeConfigurationService.getStateDump
[%{public}@] Got state dump
[%{public}@] Error when getting state dump, error='%{public}@'
com.apple.donotdisturb.DNDGlobalConfigurationService.registerForUpdates
com.apple.donotdisturb.DNDAppInfoService.getAppInfoForBundleIdentifier
[%{public}@] App info is %{private}@
[%{public}@] Error when getting app info, error='%{public}@'
com.apple.donotdisturb.DNDAppInfoService.getAppInfoForBundleIdentifiers
XPC monitor connection was activated: connection=%p
Remote service connection failed to register for assertion updates on activation: requestDetails=%{public}@, error=%{public}@
Remote service connection failed to register for state updates on activation: requestDetails=%{public}@, error=%{public}@
Remote service connection failed to register for settings updates on activation: requestDetails=%{public}@, error=%{public}@
Remote service connection failed to register for available mode identifier updates on activation: requestDetails=%{public}@, error=%{public}@
Remote service connection failed to register for global configuration updates on activation: requestDetails=%{public}@, error=%{public}@
Remote service connection failed to register for 'Me Device' state updates on activation: requestDetails=%{public}@, error=%{public}@
XPC monitor connection was interrupted, reactivating: connection=%p
XPC monitor connection was invalidated, cannot recover: connection=%p
Unable to create monitor endpoint.
Remote service connection got assertion update: assertion=%{public}@, invalidation=%{public}@, clientIdentifiers=%{public}@
com.apple.donotdisturb.DNDSettingsService.behaviorSettings
[%{public}@] Error when getting behavior settings, error='%{public}@'
[%{public}@] Got behavior settings, settings=%{public}@
com.apple.donotdisturb.DNDSettingsService.setBehaviorSettings
[%{public}@] Set behavior settings, settings=%{public}@
[%{public}@] Error setting behavior settings, settings=%{public}@, error='%{public}@'
com.apple.donotdisturb.DNDSettingsService.scheduleSettings
[%{public}@] Error when getting schedule settings, error='%{public}@'
[%{public}@] Got schedule settings, settings=%{public}@
com.apple.donotdisturb.DNDSettingsService.setScheduleSettings
[%{public}@] Set schedule settings, settings=%{public}@
[%{public}@] Error setting schedule settings, settings=%{public}@, error='%{public}@'
com.apple.donotdisturb.DNDSettingsService.addSettingsUpdateListener
Adding settings update listener: listener=%{public}@
Registered for settings updates: listener=%{public}@
Did not register for settings updates, will remove listener: listener=%{public}@
com.apple.donotdisturb.DNDSettingsService.removeSettingsUpdateListener
Removing settings update listener: listener=%{public}@
com.apple.donotdisturb.DNDSettingsService.registerForSettingsUpdates
[%{public}@] Registering settings update listener
[%{public}@] Error when registering settings update listener, error='%{public}@'
DNDScheduleTime
NSCopying
NSMutableCopying
NSSecureCoding
NSCoding
DNDMutableScheduleTime
DNDAuxiliaryStateService
DNDAccountFeatureSupport
DNDNotificationFilterPredicateValidator
NSPredicateVisitor
DNDSenderConfiguration
DNDMutableSenderConfiguration
DNDMeDeviceService
DNDRemoteServiceConnectionEventListener
NSObject
DNDConfiguration
DNDMutableConfiguration
DNDModeAssertion
DNDBehaviorSettings
DNDMutableBehaviorSettings
Deprecated
DNDMeDeviceState
DNDDiffBuilder
DiffBuilding
DNDModeAssertionDateIntervalLifetime
DNDAppAction
DNDMutableAppAction
DNDAppInfo
DNDMutableAppInfo
DNDScheduleTimePeriod
DNDMutableScheduleTimePeriod
DNDApplicationIdentifier
DNDEventSourceIdentifying
DNDModeAssertionInvalidation
DNDStateUpdate
DNDDevice
DNDAppConfigurationService
DNDModeAssertionLifetime
DNDRequestDetails
DNDAvailabilityService
DNDModeAssertionCalendarEventLifetime
DNDApplicationConfiguration
DNDMutableApplicationConfiguration
DNDSystemAction
DNDMutableSystemAction
DNDMode
DNDMutableMode
DateComponents
DNDModeConfigurationService
DNDModeConfigurationTrigger
DNDModeConfigurationLocationTrigger
DNDModeConfigurationScheduleTrigger
DNDModeConfigurationAppForegroundTrigger
DNDModeConfigurationDrivingTrigger
DNDModeConfigurationGameControllerTrigger
DNDModeConfigurationSleepingTrigger
DNDModeConfigurationSmartTrigger
DNDModeConfigurationWorkoutTrigger
DNDModeConfigurationMindfulnessTrigger
DNDModeConfigurationScreenActivityTrigger
DNDEventBehaviorResolutionService
DNDContact
DNDMutableContact
DNDClientEventBehavior
DNDState
DNDBypassSettings
DNDMutableBypassSettings
DNDModeAssertionInvalidationDetails
DNDMutableModeAssertionInvalidationDetails
DNDStateService
DeprecatedUpdateListener
DNDClientEventDetails
DNDMutableClientEventDetails
DNDXPCEventObserver
DNDRemoteAvailabilityServiceServerProtocol
DNDRemoteAvailabilityServiceConnection
DNDModeConfiguration
DNDDiffBuilding
DNDMutableModeConfiguration
DoNotDisturb
DNDModeAssertionCurrentLocationLifetime
DNDModeAssertionExplicitRegionLifetime
DNDModeAssertionSource
DNDModeAssertionUserRequestedLifetime
DNDWebApplicationIdentifier
DNDScheduleSettings
DNDMutableScheduleSettings
DNDModeAssertionDetails
DNDMutableModeAssertionDetails
DNDModeAssertionScheduleLifetime
DNDModeAssertionService
DNDContactHandle
DNDMutableContactHandle
DNDModeSelectionService
DNDGlobalConfigurationService
DNDAppInfoService
DNDStateModeAssertionMetadata
DNDAppActionsBox
DNDAppConfigurationTargetContentIdentifierPrefixesBox
DNDRemoteMonitorServerProtocol
DNDRemoteMonitorServerModeAssertionProtocol
DNDRemoteMonitorServerStateProtocol
DNDRemoteMonitorServerSettingsProtocol
DNDRemoteMonitorServerModeSelectionProtocol
DNDRemoteMonitorServerGlobalConfigurationProtocol
DNDRemoteMonitorServerMeDeviceStateProtocol
DNDRemoteServiceClientProtocol
DNDRemoteServiceClientModeAssertionProtocol
DNDRemoteServiceClientStateProtocol
DNDRemoteServiceClientSettingsProtocol
DNDRemoteServiceClientModeSelectionProtocol
DNDRemoteServiceClientGlobalConfigurationProtocol
DNDRemoteServiceClientMeDeviceStateProtocol
DNDRemoteServiceServerProtocol
DNDRemoteServiceServerBehaviorResolutionProtocol
DNDRemoteServiceServerModeAssertionProtocol
DNDRemoteServiceServerStateProtocol
DNDRemoteServiceServerSettingsProtocol
DNDRemoteServiceServerModeConfigurationProtocol
DNDRemoteServiceServerModeSelectionProtocol
DNDRemoteServiceServerGlobalConfigurationProtocol
DNDRemoteServiceServerAppInfoProtocol
DNDRemoteServiceServerMeDeviceStateProtocol
DNDRemoteServiceServerAuxiliaryStateProtocol
DNDRemoteServiceAppConfigurationProtocol
DNDRemoteServiceServerProtocolLinkUnavailable
DNDRemoteServiceConnection
DNDSettingsService
DNDRemoteAppConfigurationServiceServerProtocol
DNDRemoteAppConfigurationServiceConnection
T@"DNDScheduleTimePeriod",C,D,N
T#,R
T@"NSDate",R,C,N,V_lastModified
T@"DNDApplicationIdentifier",C,D,N
T@"NSSet",R,C,N
T@"DNDBypassSettings",C,D,N
T@"NSString",R,C,N,V_identifier
T@"DNDBypassSettings",R,C,N,V_phoneCallBypassSettings
T@"NSURL",C,D,N
T@"DNDConfiguration",C,D,N
T@"NSURL",R,C,N,V_cachedIconURL
T@"DNDContactHandle",C,D,N
TQ,R,N,V_reason
T@"DNDMode",C,D,N
Tq,R,N,V_source
T@"DNDModeAssertion",R,C,N,V_assertion
_action
T@"DNDModeAssertionInvalidationDetails",R,C,N,V_details
_allowedThreads
T@"DNDModeAssertionLifetime",R,C,N,V_lifetime
_connectionLock
T@"DNDModeConfiguration",R,C,N,V_activeModeConfiguration
_detail
T@"DNDScheduleTime",R,C,N,V_endTime
_emailAddresses
T@"DNDScheduleTimePeriod",R,C,N,V_timePeriod
_eventListeners
T@"DNDSenderConfiguration",R,C,N,V_senderConfiguration
_immediateBypassEventSourceType
T@"DNDState",R,C,N,V_state
_minute
T@"LNAction",C,N,V_rawAction
_occurrenceDate
T@"NSArray",C,D,N
_reason
T@"NSArray",R,C,N
_region
T@"NSData",C,N,V_encodedAction
_source
T@"NSDate",R,C,N,V_created
allowEvaluation
T@"NSDate",R,C,N,V_modeConfigurationModifiedDate
allowedContacts
T@"NSDate",R,C,N,V_startDate
bs_map:
T@"NSDate",R,C,N,V_userVisibleTransitionDate
containsObject:
T@"NSDateInterval",R,C,N,V_dateInterval
deliverUpdatedBehaviorSettings:
T@"NSDictionary",C,N,V_appActionsForModeIdentifier
deniedWebApplicationIdentifiers
T@"NSDictionary",R,C,N
diffDescription
T@"NSMutableSet",C,D,N
endDate
T@"NSSet",C,N,V_deniedWebApplicationIdentifiers
exceptionForApplication:thread:
T@"NSSet",R,C,N,V_allowedContactTypes
getSyncAvailableReturningError:
T@"NSSet",R,C,N,V_allowedThreads
initWithRegion:
T@"NSSet",R,C,N,V_deniedContactGroups
isUserRequested
T@"NSSet",R,C,N,V_deniedContacts
matchesContact:
T@"NSSet",R,C,N,V_phoneNumbers
numberWithBool:
T@"NSString",C,N,V_bundleIdentifier
object2
T@"NSString",R,C
options
T@"NSString",R,C,N
registerForSettingsUpdatesWithRequestDetails:completionHandler:
T@"NSString",R,C,N,V_bundleIdentifier
remoteService:didReceiveUpdatedActiveModeAssertion:stateUpdate:
T@"NSString",R,C,N,V_contactIdentifier
removeListener:
T@"NSString",R,C,N,V_detail
T@"NSString",R,C,N,V_displayName
setDisplayName:
T@"NSString",R,C,N,V_filterCriteria
setSyncPreferenceEnabled:error:
T@"NSString",R,C,N,V_givenName
setWithObjects:
T@"NSString",R,C,N,V_lastModifiedByDeviceID
symbolImageName
T@"NSString",R,C,N,V_meDeviceName
visitPredicate:
.cxx_destruct
T@"NSDate",R,C,N,V_creationDate
T@"CLCircularRegion",R,C,N,V_region
T@"NSSet",C,D,N
T@"DNDApplicationIdentifier",R,C,N,V_applicationIdentifier
T@"NSSet",R,C,N,V_deniedThreads
T@"DNDBypassSettings",R,C,N
T@"NSString",R,C,N,V_middleName
T@"DNDClientEventDetails",R,C,N,V_eventDetails
T@"NSURL",R,C,N
T@"DNDConfiguration",R,C,N,V_configuration
TQ,R,N,V_minute
T@"DNDContactHandle",R,C,N,V_sender
TQ,R,N,V_scheduleEnabledSetting
T@"DNDMode",R,C,N,V_mode
T{?=qqq},R,N,V_frameworkVersion
T@"DNDModeAssertionDetails",R,C,N,V_details
_activeModeUUID
T@"DNDModeAssertionLifetime",C,D,N
_assertionMonitorRequestDetails
T@"DNDModeAssertionSource",R,C,N,V_source
_deniedContacts
T@"DNDScheduleTime",C,D,N
_dimsLockScreen
T@"DNDScheduleTime",R,C,N,V_startTime
_enabledSetting
T@"DNDSenderConfiguration",C,D,N
_filterCriteria
T@"DNDState",R,C,N,V_previousState
_meDeviceStatus
T@"LNAction",C,D,N
_modeIdentifier
T@"LNAction",R,C,D,N
_pairedFeatures
T@"NSArray",R,C,D,N
_reasonOverride
T@"NSArray",R,C,N,V_triggers
_sender
T@"NSDate",C,D,N
allKeys
T@"NSDate",R,C,N,V_invalidationDate
allowSmartEntry
T@"NSDate",R,C,N,V_occurrenceDate
behaviorSettingsReturningError:
T@"NSDate",R,C,N,V_userVisibleEndDate
bundleForClass:
T@"NSDateInterval",R,C,N,V_activeDateInterval
created
T@"NSDictionary",C,D,N
deliverUpdatedScheduleSettings:
T@"NSDictionary",C,N,V_appConfigurationTargetContentIdentifierPrefixesForModeIdentifier
details
T@"NSDictionary",R,C,N,V_allowedApplicationIdentifiers
enabled
T@"NSSet",C,N,V_allowedWebApplicationIdentifiers
endTime
T@"NSSet",R,C,N,V_allowedContactGroups
getPairSyncStateReturningError:
T@"NSSet",R,C,N,V_allowedContacts
hasCloudDevices
T@"NSSet",R,C,N,V_deniedApplicationIdentifiers
isProxy
T@"NSSet",R,C,N,V_deniedContactTypes
log:withPrefix:
T@"NSSet",R,C,N,V_emailAddresses
normalizedValue
T@"NSString",C,D,N
object1
T@"NSString",C,N,V_identifier
onlyDuringEvent
T@"NSString",R,C,D,N
rawResolvedCompatibilityVersion
T@"NSString",R,C,N,V_bundleID
release
T@"NSString",R,C,N,V_clientIdentifier
removeExceptionForContactGroup:
T@"NSString",R,C,N,V_description
scheduleSettingsReturningError:
T@"NSString",R,C,N,V_deviceIdentifier
setAppActionsForModeIdentifier:
T@"NSString",R,C,N,V_eventUniqueID
setInterruptionBehaviorSetting:
T@"NSString",R,C,N,V_firstName
setTargetQueue:
T@"NSString",R,C,N,V_immediateBypassCNGroupIdentifier
suppressionType
T@"NSString",R,C,N,V_lastName
urgency
T@"NSString",R,C,N,V_modeIdentifier
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_nickName
T@"NSString",R,C,N,V_organizationName
T@"NSString",R,C,N,V_scheduleIdentifier
T@"NSString",R,C,N,V_symbolImageName
T@"NSString",R,C,N,V_threadIdentifier
T@"NSString",R,C,N,V_tintColorName
T@"NSString",R,C,N,V_value
T@"NSString",R,C,N,V_webIdentifier
T@"NSURL",R,C,N,V_storeIconURL
T@"NSUUID",R,C,D,N
T@"NSUUID",R,C,N,V_UUID
T@"NSUUID",R,C,N,V_activeModeUUID
T@"NSUUID",R,C,N,V_auditUUID
T@"NSUUID",R,C,N,V_identifier
T@"WFReverseContextualAction",&,D,N
T@"WFReverseContextualAction",R,&,N,V_reverseAction
T@"WFToggleSettingContextualAction",&,D,N
T@"WFToggleSettingContextualAction",R,&,N,V_action
T@,R,N,V_object1
T@,R,N,V_object2
TB,D,N
TB,D,N,GisAutomaticallyGenerated
TB,D,N,GisEnabled
TB,D,N,GisPlaceholder
TB,R
TB,R,D,N
TB,R,D,N,GisActive
TB,R,D,N,GisUserRequested
TB,R,N
TB,R,N,GisAutomaticallyGenerated,V_automaticallyGenerated
TB,R,N,GisEnabled,V_enabled
TB,R,N,GisOnlyDuringEvent,V_onlyDuringEvent
TB,R,N,GisSupportedConfiguration
TB,R,N,V_hasCloudDevices
TB,R,N,V_hasPairedDevices
TB,R,N,V_notifyAnyway
TQ,D,N
TQ,R
TQ,R,D,N
TQ,R,N
TQ,R,N,V_applicationConfigurationType
TQ,R,N,V_bedtimeBehaviorEnabledSetting
TQ,R,N,V_behavior
TQ,R,N,V_cloudFeatures
TQ,R,N,V_deviceCapabilities
TQ,R,N,V_deviceClass
TQ,R,N,V_dimsLockScreen
TQ,R,N,V_enabledSetting
TQ,R,N,V_hideApplicationBadges
TQ,R,N,V_hour
TQ,R,N,V_immediateBypassEventSourceType
TQ,R,N,V_impactsAvailability
TQ,R,N,V_interruptionBehaviorSetting
TQ,R,N,V_interruptionSuppression
TQ,R,N,V_lifetimeType
TQ,R,N,V_meDeviceStatus
TQ,R,N,V_minimumBreakthroughUrgency
TQ,R,N,V_pairedFeatures
TQ,R,N,V_platform
TQ,R,N,V_reasonOverride
TQ,R,N,V_repeatEventSourceBehaviorEnabledSetting
TQ,R,N,V_resolutionReason
TQ,R,N,V_senderConfigurationType
TQ,R,N,V_suppressionState
TQ,R,N,V_suppressionType
TQ,R,N,V_timestamp
TQ,R,N,V_type
TQ,R,N,V_urgency
TQ,R,N,V_userVisibleTransitionLifetimeType
TQ,R,N,V_visibility
TQ,R,N,V_weekdays
Tq,D,N
Tq,R,N
Tq,R,N,V_compatibilityVersion
Tq,R,N,V_options
Tq,R,N,V_semanticType
T{?=qqq},D,N
T{?=qqq},R,N,V_lastModifiedByVersion
URLWithString:
UUID
UUIDString
_UUID
_activeAssertion
_activeAssertionLock
_activeAssertionQueried
_activeDateInterval
_activeModeAssertionMetadata
_activeModeConfiguration
_allowedApplicationIdentifiers
_allowedContactGroups
_allowedContactTypes
_allowedContacts
_allowedWebApplicationIdentifiers
_appActionsForModeIdentifier
_appConfigurationTargetContentIdentifierPrefixesForModeIdentifier
_applicationConfigurationType
_applicationIdentifier
_assertion
_assertionUpdateListeners
_auditUUID
_automaticallyGenerated
_bedtimeBehaviorEnabledSetting
_behavior
_bundleID
_bundleIdentifier
_cachedIconURL
_calloutQueue
_children
_clientIdentifier
_cloudFeatures
_compatibilityVersion
_compileTimeIssues
_configuration
_configurationForApplicationIdentifier:
_configurationWasModified
_connectionLock_connection
_connectionLock_createConnection
_connectionLock_invalidateConnection
_contactIdentifier
_containsSecureTriggers:
_createDefaultModeConfigurationForIdentifier:withRequestDetails:error:
_createEmptyModeConfigurationForMode:withRequestDetails:error:
_created
_creationDate
_creationdate
_dateInterval
_defaultConfigurationTypeForModeSemanticType:
_deniedApplicationIdentifiers
_deniedContactGroups
_deniedContactTypes
_deniedThreads
_deniedWebApplicationIdentifiers
_description
_descriptionForRedacted:
_details
_deviceCapabilities
_deviceClass
_deviceIdentifier
_displayName
_enabled
_encodedAction
_endTime
_evaluatedBypassSettings:
_eventDetails
_eventUniqueID
_exceptionForApplicationIdentifier:thread:
_firstName
_frameworkVersion
_givenName
_globalConfigurationMonitorRequestDetails
_globalConfigurationService
_handleChangeActiveModeAssertion:invalidation:
_hasCloudDevices
_hasPairedDevices
_hasSecureData
_hideApplicationBadges
_hour
_identifier
_immediateBypassCNGroupIdentifier
_impactsAvailability
_init
_initWithAction:bundleIdentifier:actionIdentifier:encodedAction:enabled:
_initWithAllowedContactTypes:deniedContactTypes:allowedContactGroups:deniedContactGroups:allowedContacts:deniedContacts:phoneCallBypassSettings:
_initWithAppInfo:
_initWithClientIdentifier:
_initWithCloud:hasCloud:paired:hasPaired:
_initWithConfigurationType:
_initWithContactIdentifier:firstName:middleName:lastName:nickName:organizationName:phoneNumbers:emailAddresses:
_initWithContactIdentifier:type:value:
_initWithDetails:
_initWithHour:minute:
_initWithIdentifier:
_initWithIdentifier:bundleIdentifier:type:urgency:sender:threadIdentifier:filterCriteria:notifyAnyway:behavior:
_initWithIdentifier:modeIdentifier:modeConfigurationModifiedDate:lifetime:reason:userVisibleEndDate:
_initWithImmediateBypassEventSourceType:immediateBypassCNGroupIdentifier:repeatEventSourceBehaviorEnabledSetting:
_initWithInterruptionBehaviorSetting:
_initWithMinimumBreakthroughUrgency:allowedThreads:deniedThreads:
_initWithMode:
_initWithModeConfiguration:
_initWithPeriod:
_initWithSettings:
_initWithStartTime:endTime:weekdays:
_initWithSuppressionType:allowedApplicationIdentifiers:deniedApplicationIdentifiers:allowedWebApplicationIdentifiers:deniedWebApplicationIdentifiers:senderConfiguration:minimumBreakthroughUrgency:hideApplicationBadges:compatibilityVersion:applicationConfigurationType:senderConfigurationType:
_initWithTime:
_interruptionBehaviorSetting
_interruptionSuppression
_invalidationDate
_lastModified
_lastModifiedByDeviceID
_lastModifiedByVersion
_lastName
_lastReceivedState
_lifetime
_lifetimeType
_listeners
_lock
_maxTriggerCompatibilityVersion:
_meDeviceName
_meDeviceStateMonitorRequestDetails
_middleName
_minimumBreakthroughUrgency
_mode
_modeConfigurationModifiedDate
_modeConfigurationService
_modeIdentifiersMonitorRequestDetails
_monitorLock
_monitorLock_createMonitorConnection
_monitorLock_invalidateMonitorConnection
_monitorLock_monitorService
_monitorState
_monitorTarget
_name
_nickName
_normalizedValue
_notifyAnyway
_object1
_object2
_onlyDuringEvent
_options
_organizationName
_overrideModeIdentifier
_phoneCallBypassSettings
_phoneNumbers
_platform
_previousState
_queue
_queuePriority
_queue_connection
_queue_createConnection
_queue_invalidateConnection
_queue_registerForSettingsUpdatesIfRequired
_queue_registerForStateUpdatesIfRequired
_queue_registerForUpdatesIfRequired
_queue_remoteTarget
_rawAction
_redactedDescriptionsForContacts:
_redactedDescriptionsForStrings:
_registerEventHandler:forStream:
_registerForAssertionUpdatesIfRequiredWithCompletionHandler:
_registeredForUpdates
_remoteTarget
_repeatEventSourceBehaviorEnabledSetting
_resolutionReason
_reverseAction
_scheduleEnabledSetting
_scheduleIdentifier
_secureCodingLifetimeClasses
_semanticType
_senderConfiguration
_senderConfigurationType
_setMonitorState:
_settingsMonitorRequestDetails
_settingsUpdateListeners
_startDate
_startTime
_state
_stateLock
_stateMonitorRequestDetails
_stateUpdateListeners
_storeIconURL
_subscribeToStream:clientIdentifier:
_suppressionState
_suppressionType
_symbolImageName
_threadIdentifier
_timePeriod
_timestamp
_tintColorName
_triggers
_type
_unsubscribeFromStream:clientIdentifier:
_updateListenersOfCloudSyncPreferenceChange:
_urgency
_userVisibleEndDate
_userVisibleTransitionDate
_userVisibleTransitionLifetimeType
_value
_visibility
_webIdentifier
_weekdays
absoluteString
acceptVisitor:flags:
accountFeaturesWithCloud:hasCloudDevices:paired:hasPairedDevices:
action
activate
activateModeWithDetails:error:
activateModeWithDetails:withRequestDetails:completionHandler:
active
activeDateInterval
activeModeAssertionMetadata
activeModeAssertionWithError:
activeModeAssertionWithRequestDetails:completionHandler:
activeModeConfiguration
activeModeIdentifier
activeModeIdentifiers
activeModeUUID
addAssertionUpdateListener:error:
addAssertionUpdateListener:withCompletionHandler:
addEventListener:
addListener:withCompletionHandler:
addObject:
addObjectsFromArray:
addSettingsUpdateListener:error:
addSettingsUpdateListener:withCompletionHandler:
addStateUpdateListener:error:
addStateUpdateListener:withCompletionHandler:
allModeAssertionsWithError:
allModesReturningError:
allModesWithError:
allObjects
allocWithZone:
allowedApplicationIdentifiers
allowedApplications
allowedContactGroups
allowedContactTypes
allowedModesForContactHandle:error:
allowedThreads
allowedWebApplicationIdentifiers
appActionFromDictionaryRepresentation:
appActionsForModeIdentifier
appConfigurationActionsForModeIdentifier
appConfigurationTargetContentIdentifierPrefixesForModeIdentifier
appendFormat:
appendString:
applicationConfigurationType
applicationIdentifier
applicationsWithExceptions
archiveAction:error:
archivedDataWithRootObject:requiringSecureCoding:error:
archivingIsSupported:
array
arrayWithObjects:count:
assertion
auditUUID
automaticallyGenerated
autorelease
availableModesReturningError:
availableModesWithError:
awakeAfterUsingCoder:
bedtimeBehaviorEnabledSetting
behavior
boolValue
bs_compactMap:
bundleID
bundleIdentifier
bundleWithURL:
cachedIconURL
calendarWithIdentifier:
canRemoveModeConfigurationForModeIdentifier:
children
class
clearAppActionWithIdentifier:forApplicationIdentifier:modeIdentifier:error:
clearAppActionWithIdentifier:forApplicationIdentifier:modeIdentifier:withRequestDetails:completionHandler:
clearAppConfigurationActionWithIdentifier:forApplicationIdentifier:modeIdentifier:error:
clearAppConfigurationActionWithIdentifier:forApplicationIdentifier:modeIdentifier:withRequestDetails:completionHandler:
clearSystemActionWithIdentifier:forModeIdentifier:error:
clearSystemActionWithIdentifier:forModeIdentifier:withRequestDetails:completionHandler:
clearSystemConfigurationActionWithIdentifier:modeIdentifier:error:
clearSystemConfigurationActionWithIdentifier:modeIdentifier:withRequestDetails:completionHandler:
clientIdentifier
cloudFeatures
compare:
compatibilityVersion
componentsJoinedByString:
componentsSeparatedByString:
configuration
configurationForModeIdentifier:error:
configurationOfType:
configureConnection:
conformsToProtocol:
connectionWithEndpoint:
contactIdentifier
contactsWithExceptions
containsDate:
containsValueForKey:
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createDefaultDrivingModeConfigurationWithError:
createDefaultSleepingModeConfigurationWithError:
createDefaultWorkoutModeConfigurationWithError:
createEmptyModeConfigurationForMode:error:
createModeConfigurationUsingTemplateForModeIdentifier:error:
createModeConfigurationUsingTemplateForModeSemanticType:error:
creationDate
currentDevice
currentLocale
date
dateComponents
dateInterval
debugDescription
decodeBoolForKey:
decodeInt64ForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultConfiguration
defaultConfigurationType
defaultEndTime
defaultMinimumBreakthroughUrgency
defaultMode
defaultModeConfiguration
defaultScheduleTrigger
defaultStartTime
defaultSuppressionType
defaultTintColorName
deliverActiveModeAssertion:stateUpdate:clientIdentifiers:
deliverActiveModeAssertionUpdate:invalidation:clientIdentifiers:
deliverAllModes:
deliverAvailableModes:
deliverMeDeviceState:
deliverStateUpdate:
deliverUpdatedPairSyncState:
deliverUpdatedPhoneCallBypassSettings:
deliverUpdatedPreventAutoReplySetting:
deniedApplicationIdentifiers
deniedApplications
deniedContactGroups
deniedContactTypes
deniedContacts
deniedThreads
description
descriptionWithIndent:
detail
detailsRepresentingNowWithClientIdentifier:
detailsWithIdentifier:modeIdentifier:lifetime:
detailsWithIdentifier:modeIdentifier:lifetime:reason:
deviceCapabilities
deviceClass
deviceIdentifier
deviceWithClass:deviceCapabilities:
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
didChangeFocusStatusSharingSettingForApplicationIdentifier:
didChangeFocusStatusSharingSettingForApplicationIdentifier:withRequestDetails:completionHandler:
diffAgainstObject:usingDiffBuilder:withDescription:
diffObject:againstObject:
diffObject:againstObject:withDescription:
dimsLockScreen
displayName
distantPast
dnd_defaultSettingsURL
dnd_defaultSetupURL
dnd_doNotDisturbLocalizationBundle
dnd_locationBundle
dnd_privacyObfuscatedString
dnd_settingsURLWithModeIdentifier:
dnd_setupURLWithSemanticType:
doesNotRecognizeSelector:
effectiveBundleIdentifier
emailAddresses
enabledSetting
encodeBool:forKey:
encodeInt64:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
encodedAction
endpointForMachName:service:instance:
enumerateObjectsUsingBlock:
errorWithDomain:code:userInfo:
eventDetails
eventUniqueID
exceptionForApplication:
exceptionForApplicationIdentifier:
exceptionForApplicationIdentifier:thread:
exceptionForContact:
exceptionForContactHandle:
exceptionForWebApplicationIdentifier:
expressionType
fileURLWithPath:
fileURLWithPathComponents:
filterCriteria
firstName
firstWeekday
frameworkVersion
getAccountFeatureSupportWithError:
getAccountFeatureSupportWithRequestDetails:completionHandler:
getActiveModeAssertionWithRequestDetails:completionHandler:
getAllModeAssertionsWithRequestDetails:completionHandler:
getAllModesWithRequestDetails:completionHandler:
getAllowedModesForContactHandle:withRequestDetails:completionHandler:
getAppActionsForModeIdentifier:error:
getAppActionsForModeIdentifier:withRequestDetails:completionHandler:
getAppConfigurationActionsForModeIdentifier:error:
getAppConfigurationActionsForModeIdentifier:withRequestDetails:completionHandler:
getAppConfigurationPredicateForActionIdentifier:forApplicationIdentifier:modeIdentifier:error:
getAppConfigurationPredicateForActionIdentifier:forApplicationIdentifier:modeIdentifier:withRequestDetails:completionHandler:
getAppConfigurationTargetContentIdentifierPrefixesForCurrentModeReturningError:
getAppConfigurationTargetContentIdentifierPrefixesForModeIdentifier:error:
getAppConfigurationTargetContentIdentifierPrefixesForModeIdentifier:withRequestDetails:completionHandler:
getAppInfoForBundleIdentifier:error:
getAppInfoForBundleIdentifier:withRequestDetails:completionHandler:
getAppInfoForBundleIdentifiers:error:
getAppInfoForBundleIdentifiers:withRequestDetails:completionHandler:
getAvailableModesWithRequestDetails:completionHandler:
getBehaviorSettingsWithRequestDetails:completionHandler:
getCloudSyncStateReturningError:
getCloudSyncStateWithRequestDetails:completionHandler:
getCurrentAppConfigurationForActionIdentifier:withCompletionHandler:
getCurrentAppConfigurationForActionIdentifier:withRequestDetails:completionHandler:
getIsLocalUserAvailableWithRequestDetails:completionHandler:
getLatestModeAssertionInvalidationWithRequestDetails:completionHandler:
getModeConfigurationForModeIdentifier:withRequestDetails:completionHandler:
getModeConfigurationsWithRequestDetails:completionHandler:
getModesCanImpactAvailabilityWithRequestDetails:completionHandler:
getPairSyncStateWithRequestDetails:completionHandler:
getPhoneCallBypassSettingsReturningError:
getPreventAutoReplyReturningError:
getPreventAutoReplyWithRequestDetails:completionHandler:
getScheduleSettingsWithRequestDetails:completionHandler:
getSilencedModesForContactHandle:withRequestDetails:completionHandler:
getStateDumpReturningError:
getStateDumpWithRequestDetails:completionHandler:
getSyncEnabledReturningError:
getSyncPreferenceEnabledReturningError:
getSystemActionsForModeIdentifier:error:
getSystemActionsForModeIdentifier:withRequestDetails:completionHandler:
getSystemConfigurationActionsForModeIdentifier:error:
getSystemConfigurationActionsForModeIdentifier:withRequestDetails:completionHandler:
getUserAvailabilityInActiveModeForContactHandle:withRequestDetails:completionHandler:
givenName
globalConfigurationService:didEditCloudSyncPreference:
globalConfigurationService:didReceiveUpdatedPairSyncState:
globalConfigurationService:didReceiveUpdatedPhoneCallBypassSettings:
globalConfigurationService:didReceiveUpdatedPreventAutoReplySetting:
hasActivelyConfiguredModes:error:
hasActivelyConfiguredModesReturningError:
hasDifferences
hasPairedDevices
hasSecureData
hash
hashTableWithOptions:
hideApplicationBadges
hour
identifier
immediateBypassCNGroupIdentifier
immediateBypassEventSourceType
impactsAvailability
init
initWithAction:enabled:
initWithAction:reverseAction:enabled:
initWithActionIdentifier:bundleIdentifier:
initWithApplicationIdentifier:enabledSetting:
initWithAssertion:invalidationDate:details:source:reason:reasonOverride:
initWithBundleID:
initWithBundleID:platform:
initWithBundleIdentifier:enabledSetting:
initWithClass:deviceCapabilities:frameworkVersion:
initWithClientIdentifier:auditUUID:timestamp:
initWithClientIdentifier:deviceIdentifier:
initWithClientIdentifier:modeIdentifier:lifetimeType:activeDateInterval:userVisibleEndDate:
initWithCoder:
initWithContactIdentifier:
initWithDateInterval:
initWithEnabledSetting:
initWithEncodedAction:actionIdentifier:bundleIdentifier:enabled:
initWithEventDetails:interruptionSuppression:resolutionReason:activeModeUUID:
initWithEventUniqueID:occurrenceDate:onlyDuringEvent:
initWithIdentifier:actionMetadata:
initWithMode:configuration:triggers:
initWithMode:configuration:triggers:impactsAvailability:dimsLockScreen:created:lastModified:automaticallyGenerated:compatibilityVersion:lastModifiedByVersion:lastModifiedByDeviceID:
initWithName:modeIdentifier:symbolImageName:tintColorName:semanticType:
initWithName:modeIdentifier:symbolImageName:tintColorName:semanticType:visibility:identifier:
initWithPreviousState:state:reason:source:options:
initWithRegion:detail:enabledSetting:
initWithScheduleEnabledSetting:timePeriod:bedtimeBehaviorEnabledSetting:
initWithScheduleIdentifier:behavior:
initWithSource:applicationIdentifier:displayName:storeIconURL:cachedIconURL:
initWithStartDate:duration:
initWithStatus:name:
initWithSuppressionState:activeModeAssertionMetadata:startDate:userVisibleTransitionDate:userVisibleTransitionLifetimeType:activeModeConfiguration:
initWithTimePeriod:creationDate:enabledSetting:
initWithTimePeriod:enabledSetting:
initWithUUID:startDate:details:source:
initWithWebIdentifier:givenName:
initialize
integerValue
interfaceWithIdentifier:
interruptionBehavior
interruptionBehaviorSetting
interruptionSuppression
intersectSet:
invalidate
invalidateActiveModeAssertionWithDetails:reasonOverride:requestDetails:completionHandler:
invalidateActiveModeAssertionWithError:
invalidateActiveModeAssertionWithInvalidationDetails:reasonOverride:error:
invalidateAllActiveModeAssertionsWithError:
invalidateAllActiveModeAssertionsWithRequestDetails:completionHandler:
invalidateAppContextForActionIdentifier:
invalidateAppContextForActionIdentifier:withRequestDetails:completionHandler:
invalidateModeAssertionWithUUID:error:
invalidateModeAssertionWithUUID:withRequestDetails:completionHandler:
invalidationDate
isActive
isActiveForDate:
isAutoReplyPrevented
isAutomaticallyGenerated
isCloudSyncActive
isCloudSyncActiveWithCompletionHandler:
isEnabled
isEqual:
isEqualToDate:
isEqualToString:
isKindOfClass:
isLocalUserAvailableForContactInActiveMode:error:
isLocalUserAvailableReturningError:
isMemberOfClass:
isOnlyDuringEvent
isPlaceholder
isSupportedConfiguration
lastModified
lastModifiedByDeviceID
lastModifiedByVersion
lastName
laterDate:
latestModeAssertionInvalidationWithError:
length
lifetime
lifetimeForUserRequest
lifetimeMatchingScheduleWithIdentifier:
lifetimeType
lifetimeUntilEndOfCalendarEventWithUniqueID:occurrenceDate:
lifetimeUntilEndOfScheduleWithIdentifier:
lifetimeWithCalendarEventUniqueID:occurrenceDate:
lifetimeWithCurrentLocation
lifetimeWithDateInterval:
lifetimeWithDuration:
lifetimeWithExplicitRegion:
localizedStringForKey:value:table:
log:withMessage:
mapTableWithKeyOptions:valueOptions:
matchesContactHandle:
maxUIAddableModes
meDeviceName
meDeviceService:didReceiveMeDeviceState:
meDeviceStatus
mergeDecision:reason:
mergeWithRemoteModeConfiguration:
middleName
minimumBreakthroughUrgency
minusSet:
minute
mode
modeAssertionService:didReceiveModeAssertionInvalidation:
modeAssertionService:didUpdateActiveModeAssertion:
modeConfigurationForModeIdentifier:error:
modeConfigurationModifiedDate
modeConfigurationService:didReceiveAppConfigurationContextUpdateForModeIdentifier:
modeConfigurationService:didReceiveAvailableModesUpdate:
modeConfigurationsReturningError:
modeIdentifier
modeSelectionService:didReceiveAvailableModesUpdate:
modeSelectionService:didReceiveModesUpdate:
modeSelectionService:didReceiveUpdatedActiveModeAssertion:stateUpdate:
modesCanImpactAvailability
mutableCopy
mutableCopyWithZone:
name
nickName
normalizePhoneNumber:
normalizedPhoneNumbers
notifyAnyway
numberWithInt:
numberWithInteger:
numberWithUnsignedInteger:
objectAtIndexedSubscript:
objectForInfoDictionaryKey:
objectForKey:
objectForKeyedSubscript:
occurrenceDate
operatorType
organizationName
pairedFeatures
path
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
phoneCallBypassSettings
phoneCallBypassSettingsReturningError:
phoneNumbers
placeholder
placeholderModeFromMode:
platform
previousState
promotePlaceholderWithModeIdentifier:error:
promotedPlaceholderWithModeIdentifier:error:
protocolForProtocol:
publishCurrentStatusKitAvailabilityReturningError:
publishStatusKitAvailabilityWithRequestDetails:completionHandler:
queryCurrentStateWithCompletionHandler:
queryCurrentStateWithError:
queryMeDeviceStateWithRequestDetails:completionHandler:
queryStateForUpdateWithRequestDetails:completionHandler:
queryStateWithRequestDetails:completionHandler:
rawAction
rawCompatibilityVersion
reason
reasonOverride
redactedDescription
region
registerForAssertionUpdatesWithRequestDetails:completionHandler:
registerForGlobalConfigurationUpdatesWithRequestDetails:completionHandler:
registerForMeDeviceStateUpdatesWithRequestDetails:completionHandler:
registerForModeSelectionUpdatesWithRequestDetails:completionHandler:
registerForStateUpdatesWithRequestDetails:completionHandler:
relativePriority
remoteService:didChangeActiveModeAssertion:invalidation:
remoteService:didReceiveAppConfigurationContextUpdateForModeIdentifier:
remoteService:didReceiveDoNotDisturbStateUpdate:
remoteService:didReceiveUpdatedAvailableModeIdentifiers:
remoteService:didReceiveUpdatedAvailableModes:
remoteService:didReceiveUpdatedBehaviorSettings:
remoteService:didReceiveUpdatedMeDeviceState:
remoteService:didReceiveUpdatedModeIdentifiers:
remoteService:didReceiveUpdatedModes:
remoteService:didReceiveUpdatedPairSyncState:
remoteService:didReceiveUpdatedPhoneCallBypassSettings:
remoteService:didReceiveUpdatedPreventAutoReplySetting:
remoteService:didReceiveUpdatedScheduleSettings:
remoteTarget
removeAllowedContactMatchingContact:
removeAssertionUpdateListener:
removeAssertionUpdateListener:error:
removeDeniedContactMatchingContact:
removeEventListener:
removeExceptionForApplication:
removeExceptionForApplication:thread:
removeExceptionForApplicationIdentifier:
removeExceptionForApplicationIdentifier:thread:
removeExceptionForContact:
removeExceptionForContactType:
removeExceptionForWebApplicationIdentifier:
removeModeConfigurationForModeIdentifier:deletePlaceholder:error:
removeModeConfigurationForModeIdentifier:deletePlaceholder:withRequestDetails:completionHandler:
removeModeConfigurationForModeIdentifier:error:
removeObject:
removeObjectForKey:
removeSettingsUpdateListener:
removeSettingsUpdateListener:error:
removeStateUpdateListener:
removeStateUpdateListener:error:
repeatEventSourceBehaviorEnabledSetting
resolutionReason
resolveBehaviorForEventDetails:error:
resolveBehaviorForEventDetails:requestDetails:completionHandler:
resolvedCompatibilityVersion
respondsToSelector:
retain
retainCount
reverseAction
runtimeIsSupported:
scheduleEnabledSetting
scheduleIdentifier
self
semanticType
sender
senderConfiguration
senderConfigurationType
serial
serviceClass
serviceClass:relativePriority:
serviceForClientIdentifier:
setAction:
setActivationHandler:
setAllowedApplicationIdentifiers:
setAllowedApplications:
setAllowedContactGroups:
setAllowedContactTypes:
setAllowedContacts:
setAllowedThreads:
setAllowedWebApplicationIdentifiers:
setAppAction:forApplicationIdentifier:modeIdentifier:error:
setAppAction:forApplicationIdentifier:modeIdentifier:withRequestDetails:completionHandler:
setAppConfigurationAction:forApplicationIdentifier:modeIdentifier:error:
setAppConfigurationAction:forApplicationIdentifier:modeIdentifier:withRequestDetails:completionHandler:
setAppConfigurationPredicate:forActionIdentifier:forApplicationIdentifier:modeIdentifier:error:
setAppConfigurationPredicate:forActionIdentifier:forApplicationIdentifier:modeIdentifier:withRequestDetails:completionHandler:
setAppConfigurationTargetContentIdentifierPrefix:forActionIdentifier:forApplicationIdentifier:modeIdentifier:error:
setAppConfigurationTargetContentIdentifierPrefix:forActionIdentifier:forApplicationIdentifier:modeIdentifier:withRequestDetails:completionHandler:
setAppConfigurationTargetContentIdentifierPrefixesForModeIdentifier:
setApplicationConfigurationType:
setApplicationIdentifier:
setAutomaticallyGenerated:
setBedtimeBehaviorEnabledSetting:
setBehavior:
setBehaviorSettings:error:
setBehaviorSettings:returningError:
setBehaviorSettings:withRequestDetails:completionHandler:
setBundleIdentifier:
setCachedIconURL:
setClient:
setClientMessagingExpectation:
setCloudSyncPreferenceEnabled:error:
setCloudSyncPreferenceEnabled:withRequestDetails:completionHandler:
setCompatibilityVersion:
setConfiguration:
setConfiguration:forModeIdentifier:error:
setContactIdentifier:
setCreated:
setDeniedApplicationIdentifiers:
setDeniedApplications:
setDeniedContactGroups:
setDeniedContactTypes:
setDeniedContacts:
setDeniedThreads:
setDeniedWebApplicationIdentifiers:
setDimsLockScreen:
setEmailAddresses:
setEnabled:
setEncodedAction:
setEndTime:
setExceptionForApplication:
setExceptionForApplication:thread:
setExceptionForApplicationIdentifier:
setExceptionForApplicationIdentifier:thread:
setExceptionForContact:
setExceptionForContactGroup:
setExceptionForContactType:
setExceptionForWebApplicationIdentifier:
setExceptionOfType:forApplication:
setExceptionOfType:forApplication:thread:
setExceptionOfType:forApplicationIdentifier:
setExceptionOfType:forApplicationIdentifier:thread:
setExceptionOfType:forContact:
setExceptionOfType:forContactGroup:
setExceptionOfType:forContactType:
setFilterCriteria:
setFirstName:
setFocusConfigurationStreamEventHandler:
setHideApplicationBadges:
setHour:
setIdentifier:
setImmediateBypassCNGroupIdentifier:
setImmediateBypassEventSourceType:
setImpactsAvailability:
setInterface:
setInterfaceTarget:
setInterruptionBehavior:
setInterruptionHandler:
setInvalidationHandler:
setLastModified:
setLastModifiedByDeviceID:
setLastModifiedByVersion:
setLastName:
setLifetime:
setMiddleName:
setMinimumBreakthroughUrgency:
setMinimumBreakthroughUrgency:forApplication:
setMinimumBreakthroughUrgency:forApplicationIdentifier:
setMinute:
setMode:
setModeConfiguration:error:
setModeConfiguration:withRequestDetails:completionHandler:
setModeConfigurationModifiedDate:
setModeIdentifier:
setModesCanImpactAvailability:error:
setModesCanImpactAvailability:withRequestDetails:completionHandler:
setName:
setNickName:
setNotifyAnyway:
setObject:forKey:
setObject:forKeyedSubscript:
setOrganizationName:
setOverrideModeIdentifier:
setPairSyncPreferenceEnabled:error:
setPairSyncPreferenceEnabled:withRequestDetails:completionHandler:
setPhoneCallBypassSettings:
setPhoneCallBypassSettings:error:
setPhoneCallBypassSettings:returningError:
setPhoneNumbers:
setPreventAutoReply:error:
setPreventAutoReply:withRequestDetails:completionHandler:
setRawAction:
setReason:
setRepeatEventSourceBehaviorEnabledSetting:
setReverseAction:
setScheduleEnabledSetting:
setScheduleSettings:error:
setScheduleSettings:returningError:
setScheduleSettings:withRequestDetails:completionHandler:
setScreenIsShared:screenIsMirrored:error:
setScreenIsShared:screenIsMirrored:withRequestDetails:completionHandler:
setSecond:
setSender:
setSenderConfiguration:
setSenderConfigurationType:
setServer:
setServiceQuality:
setShouldAlwaysInterrupt:
setSource:
setStartTime:
setStoreIconURL:
setSuppressionType:
setSymbolImageName:
setSystemAction:forModeIdentifier:error:
setSystemAction:forModeIdentifier:withRequestDetails:completionHandler:
setSystemConfigurationAction:modeIdentifier:error:
setSystemConfigurationAction:modeIdentifier:withRequestDetails:completionHandler:
setThreadIdentifier:
setTimePeriod:
setTintColorName:
setTriggers:
setType:
setUrgency:
setUserVisibleEndDate:
setValue:
setWeekdays:
setWithArray:
setWithCapacity:
settingsService:didReceiveUpdatedBehaviorSettings:
settingsService:didReceiveUpdatedPhoneCallBypassSettings:
settingsService:didReceiveUpdatedScheduleSettings:
settingsURL
setupURL
sharedInstance
shortDescription
shouldAlwaysInterrupt
signalAppConfigurationContextUpdateForModeIdentifier:
silencedModesForContactHandle:error:
source
startDate
startTime
state
stateService:didReceiveDoNotDisturbStateUpdate:
storeIconURL
string
stringByPaddingToLength:withString:startingAtIndex:
stringValue
stringWithFormat:
subscribeToFocusConfigurationStreamWithIdentifier:
superclass
supportedConfiguration
supportsSecureCoding
suppressionState
symbol
syncModeConfigurationsReturningError:
syncModeConfigurationsWithRequestDetails:completionHandler:
takeModeAssertionWithDetails:error:
takeModeAssertionWithDetails:requestDetails:completionHandler:
threadConfigurationType
threadIdentifier
threadsWithExceptions
timePeriod
timestamp
tintColorName
triggerWithClientTrigger:creationDate:
triggers
type
unarchiveActionFromData:error:
unarchivedObjectOfClass:fromData:error:
unsignedIntegerValue
unsubscribeFromFocusConfigurationStreamWithIdentifier:
userInitiated
userRequested
userRequestedAssertionDetailsWithIdentifier:modeIdentifier:lifetime:
userVisibleEndDate
userVisibleTransitionDate
userVisibleTransitionLifetimeType
validatePredicate:compileTimeIssues:runTimeIssues:
value
visibility
visitPredicateExpression:
visitPredicateExpression:keyPathScope:key:
visitPredicateOperator:
webApplicationsWithExceptions
webIdentifier
weekdays
willSuppressInterruptions
zone
@16@0:8
B16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8Q16Q24
Q16@0:8
B24@0:8@16
v24@0:8Q16
v16@0:8
B32@0:8B16B20^@24
@"NSObject<OS_dispatch_queue>"
@"NSString"
@40@0:8Q16B24Q28B36
v40@0:8@16@24@32
v24@0:8@"NSPredicate"16
v24@0:8@"NSExpression"16
v24@0:8@"NSPredicateOperator"16
v40@0:8@"NSExpression"16@"NSString"24@"NSString"32
B40@0:8@16^@24^@32
@72@0:8@16@24@32@40@48@56@64
@20@0:8B16
@"NSMutableSet"
@"DNDBypassSettings"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v32@0:8@16Q24
v28@0:8@16B24
v32@0:8@"DNDRemoteServiceConnection"16@"DNDStateUpdate"24
v40@0:8@"DNDRemoteServiceConnection"16@"DNDModeAssertion"24@"DNDModeAssertionInvalidation"32
v32@0:8@"DNDRemoteServiceConnection"16@"DNDBehaviorSettings"24
v32@0:8@"DNDRemoteServiceConnection"16@"DNDScheduleSettings"24
v32@0:8@"DNDRemoteServiceConnection"16Q24
v32@0:8@"DNDRemoteServiceConnection"16@"DNDBypassSettings"24
v28@0:8@"DNDRemoteServiceConnection"16B24
v40@0:8@"DNDRemoteServiceConnection"16@"DNDModeAssertion"24@"DNDStateUpdate"32
v32@0:8@"DNDRemoteServiceConnection"16@"NSArray"24
v32@0:8@"DNDRemoteServiceConnection"16@"NSString"24
v32@0:8@"DNDRemoteServiceConnection"16@"DNDMeDeviceState"24
v24@0:8@?16
v32@0:8@16@?24
@"NSHashTable"
@24@0:8Q16
@104@0:8Q16@24@32@40@48@56Q64Q72q80Q88Q96
Q24@0:8@16
Q32@0:8@16@24
q16@0:8
@"NSMutableDictionary"
@"DNDMutableSenderConfiguration"
v24@0:8q16
v32@0:8Q16@24
v40@0:8Q16@24@32
v32@0:8Q16Q24
@48@0:8@16@24@32@40
@"NSUUID"
@"NSDate"
@"DNDModeAssertionDetails"
@"DNDModeAssertionSource"
@32@0:8Q16@24
@"NSMutableArray"
@"NSDateInterval"
B24@0:8^@16
@28@0:8@16B24
@44@0:8@16@24@32B40
@52@0:8@16@24@32@40B48
v20@0:8B16
@"LNAction"
@"NSData"
@56@0:8q16@24@32@40@48
@"DNDApplicationIdentifier"
@"NSURL"
@40@0:8@16@24Q32
@"DNDScheduleTime"
@32@0:8@16Q24
@64@0:8@16@24@32@40Q48Q56
@"DNDModeAssertion"
@"DNDModeAssertionInvalidationDetails"
@56@0:8@16@24Q32q40q48
@"DNDState"
@56@0:8Q16Q24{?=qqq}32
{?=qqq}16@0:8
{?="majorVersion"q"minorVersion"q"patchVersion"q}
@24@0:8d16
@32@0:8@16@24
@36@0:8@16@24B32
@40@0:8Q16@24@32
@"WFToggleSettingContextualAction"
@"WFReverseContextualAction"
@56@0:8@16@24@32@40q48
@72@0:8@16@24@32@40q48Q56@64
B32@0:8^B16^@24
@32@0:8q16^@24
B32@0:8@16^@24
@24@0:8^@16
@32@0:8@16^@24
B56@0:8@16@24@32@40^@48
@48@0:8@16@24@32^@40
B48@0:8@16@24@32^@40
B40@0:8@16@24^@32
B28@0:8B16^@20
B36@0:8@16B24^@28
Q24@0:8q16
@40@0:8@16@24^@32
@"CLCircularRegion"
@"DNDScheduleTimePeriod"
@80@0:8@16@24@32@40@48@56@64@72
@"NSSet"
@48@0:8@16Q24Q32@40
@"DNDClientEventDetails"
@64@0:8Q16@24@32@40Q48@56
@"NSArray"
@"DNDModeConfiguration"
@40@0:8Q16@24Q32
@84@0:8@16@24Q32Q40@48@56@64B72Q76
@"DNDContactHandle"
v24@0:8r*16
v32@0:8@?16r*24
v32@0:8r*16r*24
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSNumber"@"NSError">24
@"BSServiceConnection"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"BSServiceQuality"
v40@0:8@"<DNDDiffBuilding>"16@"DNDDiffBuilder"24@"NSString"32
@40@0:8@16@24@32
@116@0:8@16@24@32Q40Q48@56@64B72q76{?=qqq}84@108
q24@0:8@16
@"DNDMode"
@"DNDConfiguration"
v40@0:8{?=qqq}16
@48@0:8@16@24@32Q40
@64@0:8@16@24@32@40Q48@56
@"DNDModeAssertionLifetime"
@40@0:8@16Q24^@32
{atomic_flag="_Value"AB}
@40@0:8@16Q24@32
@"DNDModeConfigurationService"
Q24@0:8^@16
@24@0:8q16
@56@0:8@16@24Q32@40@48
@"NSDictionary"
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSNumber"@"DNDModeAssertion"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSNumber"@"DNDMeDeviceState"@"NSError">24
Vv40@0:8@16@24@32
Vv40@0:8@"DNDModeAssertion"16@"DNDModeAssertionInvalidation"24@"NSArray<__NSString__>"32
Vv24@0:8@16
Vv24@0:8@"DNDStateUpdate"16
Vv24@0:8@"DNDBehaviorSettings"16
Vv24@0:8@"DNDScheduleSettings"16
Vv40@0:8@"DNDModeAssertion"16@"DNDStateUpdate"24@"NSArray<__NSString__>"32
Vv24@0:8@"NSArray<__DNDMode__>"16
Vv24@0:8@"NSString"16
Vv24@0:8@"NSNumber"16
Vv24@0:8@"DNDBypassSettings"16
Vv24@0:8@"DNDMeDeviceState"16
v40@0:8@16@24@?32
v40@0:8@"DNDClientEventDetails"16@"DNDRequestDetails"24@?<v@?@"DNDClientEventBehavior"@"NSError">32
v48@0:8@16@24@32@?40
v40@0:8@"DNDModeAssertionDetails"16@"DNDRequestDetails"24@?<v@?@"DNDModeAssertion"@"NSError">32
v48@0:8@"DNDModeAssertionInvalidationDetails"16@"NSNumber"24@"DNDRequestDetails"32@?<v@?@"DNDModeAssertionInvalidation"@"NSError">40
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDModeAssertion"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDModeAssertionInvalidation"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSArray<__DNDModeAssertion__>"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDState"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDBehaviorSettings"@"NSError">24
v40@0:8@"DNDBehaviorSettings"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDScheduleSettings"@"NSError">24
v40@0:8@"DNDScheduleSettings"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v40@0:8@"DNDModeConfiguration"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v48@0:8@"NSString"16@"NSNumber"24@"DNDRequestDetails"32@?<v@?@"NSNumber"@"NSError">40
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSArray<__DNDModeConfiguration__>"@"NSError">24
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"DNDModeConfiguration"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSArray<__DNDMode__>"@"NSError">24
v40@0:8@"DNDContactHandle"16@"DNDRequestDetails"24@?<v@?@"NSArray<__NSString__>"@"NSError">32
v40@0:8@"DNDContactHandle"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"DNDModeAssertionDetails"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v40@0:8@"NSUUID"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
Vv40@0:8@16@24@?32
v40@0:8@"NSNumber"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSDictionary"@"NSError">24
Vv40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDAccountFeatureSupport"@"NSError">24
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"DNDAppInfo"@"NSError">32
v40@0:8@"NSArray<__NSString__>"16@"DNDRequestDetails"24@?<v@?@"NSArray<__DNDAppInfo__>"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDMeDeviceState"@"NSError">24
v48@0:8@"NSNumber"16@"NSNumber"24@"DNDRequestDetails"32@?<v@?@"NSNumber"@"NSError">40
v64@0:8@16@24@32@40@48@?56
v56@0:8@16@24@32@40@?48
v64@0:8@"NSPredicate"16@"NSString"24@"DNDApplicationIdentifier"32@"NSString"40@"DNDRequestDetails"48@?<v@?@"NSNumber"@"NSError">56
v56@0:8@"NSString"16@"DNDApplicationIdentifier"24@"NSString"32@"DNDRequestDetails"40@?<v@?@"NSPredicate"@"NSError">48
v64@0:8@"NSString"16@"NSString"24@"DNDApplicationIdentifier"32@"NSString"40@"DNDRequestDetails"48@?<v@?@"NSNumber"@"NSError">56
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"DNDAppConfigurationTargetContentIdentifierPrefixesBox"@"NSError">32
v56@0:8@"DNDAppAction"16@"DNDApplicationIdentifier"24@"NSString"32@"DNDRequestDetails"40@?<v@?@"NSNumber"@"NSError">48
v56@0:8@"NSString"16@"DNDApplicationIdentifier"24@"NSString"32@"DNDRequestDetails"40@?<v@?@"NSNumber"@"NSError">48
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"DNDAppActionsBox"@"NSError">32
v48@0:8@"DNDSystemAction"16@"NSString"24@"DNDRequestDetails"32@?<v@?@"NSNumber"@"NSError">40
v48@0:8@"NSString"16@"NSString"24@"DNDRequestDetails"32@?<v@?@"NSNumber"@"NSError">40
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"NSArray<__DNDSystemAction__>"@"NSError">32
@"DNDGlobalConfigurationService"
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"LNAction"@"NSError">32
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
@(#)PROGRAM:DoNotDisturb  PROJECT:DoNotDisturb-305.122
<h: %lu; m: %lu>
hour
minute
match schedule
schedule end
<invalid>
v8@?0
com.apple.donotdisturb.DNDAppInfoService.service.lock
v24@?0@"NSNumber"8@"NSError"16
com.apple.donotdisturb.DNDAuxiliaryStateService
cloud: %@; paired: %@;
<N/A>
cloud
hasCloud
paired
hasPaired
SilenceLists
{ %@ }
<none>
essential
time-sensitive
predicate will be ignored because it is too large
operator '%@' is not allowed
operator '%@' is not recognized
expression '%@' is not allowed
expression '%@' is not recognized
iPhone
iPod
iPad
Apple TV
Apple Watch
<unknown>
Lifetime expired
User changed state
Override ended by client
Override replaced by client
Server unresponsive
Client unresponsive
Location lifetime expired
Calendar event lifetime expired
DNDErrorDomain
Contact
Favorite
<%@: %p; allowedContactTypes: %@; deniedContactTypes: %@; allowedContactGroups: %@; deniedContactGroups: %@; allowedContacts: %@; deniedContacts: %@; phoneCallBypassSettings: %@>
allowedContacts
deniedContacts
allowedContactTypes
deniedContactTypes
allowedContactGroups
deniedContactGroups
phoneCallBypassSettings
com.apple.donotdisturb.DNDMeDeviceService.service.lock
v24@?0@"DNDMeDeviceState"8@"NSError"16
com.apple.donotdisturb.DNDMeDeviceService
com.apple.donotdisturb.DNDMeDeviceService.call-out
v32@?0@"NSNumber"8@"DNDMeDeviceState"16@"NSError"24
Custom
Default
Sleep
Driving
Fitness
Work
Personal
Reading
Gaming
Mindfulness
moon.fill
bed.double.fill
car.fill
figure.run
person.lanyardcard.fill
person.fill
book.closed.fill
rocket.fill
apple.mindfulness
MODE_NAME_DEFAULT
MODE_NAME_SLEEP
MODE_NAME_DRIVING
MODE_NAME_FITNESS
MODE_NAME_WORK
MODE_NAME_PERSONAL
MODE_NAME_READING
MODE_NAME_GAMING
MODE_NAME_MINDFULNESS
Inclusive
Exclusive
Unconfigured
<%@: %p; suppressionType: %@; allowedApplicationIdentifiers: %@; deniedApplicationIdentifiers: %@; allowedWebApplicationIdentifiers: %@; deniedWebApplicationIdentifiers: %@; senderConfiguration: %@; minimumBreakthroughUrgency: %@; hideApplicationBadges: %@; applicationConfigurationType: %@; senderConfigurationType: %@; compatibilityVersion: %@; >
suppressionType
allowedApplicationIdentifiers
deniedApplicationIdentifiers
allowedWebApplicationIdentifiers
deniedWebApplicationIdentifiers
senderConfiguration
minimumBreakthroughUrgency
hideApplicationBadges
applicationConfigurationType
senderConfigurationType
compatibilityVersion
compatibility
Q24@?0@"DNDApplicationIdentifier"8@"NSString"16
v24@?0@"DNDContact"8^B16
<%@: %p; UUID: %@; startDate: %@; details: %@; source: %@>
UUID
startDate
details
source
<%@: %p; interruptionBehaviorSetting: %@>
interruptionBehaviorSetting
com.apple.donotdisturb
AuxiliaryState
AppConfiguration
BehaviorResolution
GlobalConfiguration
ModeAssertion
ModeConfiguration
ModeSelection
RemoteConnection
Settings
State
DNDMeDeviceService.client
XPCEventObserver
unknown
no-device
this-device
other-device
<%@: %p; meDeviceStatus: %@; meDeviceName: %@>
meDeviceStatus
meDeviceName
default
disabled
enabled
none
silence
delay delivery
None
%@%@: {%@%@}
%@{%@%@}
%@%@: object1: %@; object2: %@
%@object1: %@; object2: %@
%llu
added
removed
<%@: %p; dateInterval: %@>
dateInterval
LNAction
Failed to encode/decode app action: LinkServices framework is not loaded.
WFAppIntentArchiver
LNFullyQualifiedActionIdentifier
Failed to (un)archive action: VoiceShortcut or LinkServices framework is not loaded.
DNDActionEnabled
DNDActionEncodedAction
DNDActionActionIdentifier
DNDActionBundleIdentifierKey
DNDActionAction
AppConfigurationActionPayload
<%@: %p; identifier: %@; enabled: %@; action: %@; hasEncoded: %@; bundleIdentifier: %@>
SkyF
Sydney
SydneyE
DNDCompatibilityVersionSky
DNDCompatibilityVersionSkyF
DNDCompatibilityVersionSydney
DNDCompatibilityVersionSydneyE
DNDCompatibilityVersionMax
<%@: %p; source: %@; applicationIdentifier: %@; displayName: %@; storeIconURL: %@; cachedIconURL: %@>
applicationIdentifier
displayName
storeIconURL
cachedIconURL
telephony
v24@?0q8^B16
Every Day
<period: s: %@; e: %@; weekdays: %@>
startTime
endTime
weekdays
<%@: %p; bundleID: %@; platform: %@>
bundleID:%@;platform:%@
bundleID
platform
<%@: %p; assertion: %@; invalidationDate: %@; details: %@; source: %@; reason: %@; reasonOverride: %@>
assertion
invalidationDate
reason
reasonOverride
<%@: %p; reason: %@; source: %@; options: %@; state: %@; previousState: %@>
previousState
state
options
DeviceClassNumber
<%@: %p; deviceClass: %@; deviceCapabilities: %@; frameworkVersion: %@>
com.apple.donotdisturb.DNDAppConfigurationService.service.lock
v24@?0@"LNAction"8@"NSError"16
favorite
contact
contact from group
%@:%@
<%@: %p; clientIdentifier: '%@'; auditUUID: %@; timestamp: %llu>
clientIdentifier
auditUUID
timestamp
com.apple.donotdisturb.DNDAvailabilityService.service.lock
<%@: %p; eventUniqueID: '%@'; occurrenceDate: %@; onlyDuringEvent: %@>
eventUniqueID
occurrenceDate
onlyDuringEvent
<%@: %p; minimumBreakthroughUrgency: %@; allowedThreads: %@; deniedThreads: %@; >
minimumBreakthroughUrgency:%@;
allowedThreads:%@;
deniedThreads:%@;
allowedThreads
deniedThreads
WFToggleSettingContextualAction
WFReverseContextualAction
Failed to store system action: VoiceShortcutClient framework is not loaded.
DNDActionReverseAction
<%@: %p; identifier: %@; enabled: %@; action: %@; reverse: %@>
Do Not Disturb
systemIndigoColor
<%@: %p; name: %@; modeIdentifier: %@; symbolImageName: %@; tintColorName: %@; semanticType: %zd; visibility: %lu; identifier: %@; isPlaceHolder: %@>
name
modeIdentifier
symbolImageName
tintColorName
semanticType
visibility
identifier
calendar event
date interval
current-location
schedule
explicit-region
never interrupt
interrupt when unlocked
com.apple.donotdisturb.DNDModeConfigurationService.service.lock
v24@?0@"NSArray"8@"NSError"16
com.apple.sleep.sleep-mode
com.apple.donotdisturb.mode.workout
com.apple.focus.work
com.apple.focus.personal-time
com.apple.focus.reading
com.apple.focus.gaming
com.apple.focus.mindfulness
Mode not supported.
v24@?0@"DNDModeConfiguration"8@"NSError"16
v24@?0@"NSString"8@"NSError"16
v24@?0@"NSArray<__DNDMode__>"8@"NSError"16
v24@?0@"NSPredicate"8@"NSError"16
v24@?0@"DNDAppConfigurationTargetContentIdentifierPrefixesBox"8@"NSError"16
com.apple.focus.current-sentinel
v24@?0@"DNDAppActionsBox"8@"NSError"16
v24@?0@"NSArray<__DNDSystemAction__>"8@"NSError"16
com.apple.donotdisturb.mode.driving
com.apple.donotdisturb.DNDModeConfigurationService
com.apple.donotdisturb.DNDModeConfigurationService.call-out
v32@?0@"NSNumber"8@"DNDModeAssertion"16@"NSError"24
v24@?0@"DNDMode"8^B16
No template found for mode identifier.
Mode configuration already exists for mode identifier.
<%@: %p; enabledSetting: %llu; compatibilityVersion: %@>
enabledSetting
<%@: %p; enabledSetting: %llu; region: %@; detail: %@>
region
detail
<%@: %p; enabledSetting: %llu; timePeriod: %@; creationDate: %@>
timePeriod
creationDate
<%@: %p; enabledSetting: %llu; applicationIdentifier: %@>
Allow
Deny
com.apple.donotdisturb.DNDEventBehaviorResolutionService.service.lock
v24@?0@"DNDClientEventBehavior"8@"NSError"16
user action
client action
lifetime
system state
scheduled
automation
local
ForceStatusUpdate
<%@: %p; contactIdentifier: %@; firstName: %@; middleName: %@; lastName: %@; nickName: %@; organizationName: %@; phoneNumbers: %@; emailAddresses: %@;>
contactIdentifier:%@;
firstName:%@;
middleName:%@;
lastName:%@;
nickName:%@;
organizationName:%@;
phoneNumbers:%@;
emailAddresses:%@;
contactIdentifier
firstName
middleName
lastName
nickName
organizationName
phoneNumbers
emailAddresses
<%@: %p; eventDetails: %@; interruptionSuppression: %@; resolutionReason: %@; activeModeUUID: %@>
eventDetails
interruptionSuppression
resolutionReason
activeModeUUID
<%@: %p; suppressionState: %@; startDate: %@; userVisibleTransitionDate: %@; userVisibleTransitionLifetimeType: %@; activeModeConfiguration: %@; activeModeIdentifier: %@>
suppressionState
activeModeAssertionMetadata
userVisibleTransitionDate
userVisibleTransitionLifetimeType
activeModeConfiguration
overrideModeIdentifier
tvOS
macOS
watchOS
<%@: %p; immediateBypassEventSourceType: %@; immediateBypassCNGroupIdentifier: '%@'; repeatEventSourceBehaviorEnabledSetting: %@>
immediateBypassEventSourceType:%@;immediateBypassCNGroupIdentifier:%@;repeatEventSourceBehaviorEnabledSetting:%@
immediateBypassEventSourceType
immediateBypassCNGroupIdentifier
repeatEventSourceBehaviorEnabledSetting
<%@: %p; identifier: '%@'>
inactive
always
while UI locked
com.apple.donotdisturb.mode.default
com.apple.donotdisturb.mode.bedtime
com.apple.donotdisturb.DNDStateService.service.lock
com.apple.donotdisturb.StateService
com.apple.donotdisturb.StateService.call-out
v24@?0@"DNDState"8@"NSError"16
Call
Call-Record
Direct-Message
Group-Message
Time-Sensitive
Essential
Legacy
<%@: %p; identifier: '%@'; bundleIdentifier:: %@; type: %@; urgency: %@; sender: %@; threadIdentifier: %@; filterCritera: %@; notifyAnyway: %d; behavior: %@>
bundleIdentifier
type
urgency
sender
threadIdentifier
filterCriteria
notifyAnyway
behavior
com.apple.donotdisturbd.focus_configuration_events
DNDFocusConfigurationEventBundleIdentifierKey
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.donotdisturb.xpc.event
com.apple.donotdisturb.availability.service
dnd.service
v16@?0@"BSServiceConnection<BSServiceConnectionContext>"8
v16@?0@"<BSServiceConnectionConfiguring>"8
DNDModeConfigurationSmartTrigger
nothing to merge with
automaticallyGenerated
lastModified same
lastModified distantPast
lastModified
fallthrough
<%@: %p; mode: %@; configuration: %@; triggers: %@; impactsAvailability: %@; dimsLockScreen: %@; created: %@; lastModified: %@; automaticallyGenerated: %@; compatibilityVersion: %@; resolvedCompatibilityVersion: %@; hasSecureData: %@; modFrameworkVersion: %@; modDeviceID: %@>
<%@: %p; mode: %@; impactsAvailability: %@; dimsLockScreen: %@>
mode
configuration
triggers
impactsAvailability
dimsLockScreen
created
lastModifiedByVersion
lastModifiedByDeviceID
isAutomaticallyGenerated
<%@: %p>
<%@: %p; region: '%@'>
System
Library
LocationBundles
DoNotDisturb.bundle
PrivateFrameworks
DoNotDisturb.framework
com.apple.donotdisturb.system
<%@: %p; clientIdentifier: '%@'; deviceIdentifier: '%@'>
deviceIdentifier
%@.%@.%@
<%@: %p; webIdentifier: %@; givenName: %@>
webIdentifier
givenName
webIdentifier:%@;givenName:%@
<schedule: enabled: %@; period: %@; bedtime: %@>
scheduleEnabledSetting
bedtimeBehaviorEnabledSetting
<%@: %p; identifier: '%@'; modeIdentifier: '%@'; modeConfigurationModifiedDate: %@; lifetime: %@; reason: %@; userVisibleEndDate: %@>
modeConfigurationModifiedDate
userVisibleEndDate
<%@: %p; scheduleIdentifier: '%@'; behavior: %@>
scheduleIdentifier
com.apple.donotdisturb.ModeAssertionService.call-out
v24@?0@"DNDModeAssertion"8@"NSError"16
v24@?0@"DNDModeAssertionInvalidation"8@"NSError"16
v24@?0@"NSArray<__DNDModeAssertion__>"8@"NSError"16
v20@?0B8@"NSError"12
email
phone
<%@: %p; contactIdentifier: %@; type: %@; value: %@;>
value
com.apple.donotdisturb.DNDModeSelectionService.service.lock
com.apple.donotdisturb.DNDModeSelectionService
com.apple.donotdisturb.DNDModeSelectionService.call-out
User action
Schedule
System state
com.apple.donotdisturb.DNDGlobalConfigurationService.service.lock
prevented
not prevented
Bypass settings are now per mode configuration
v24@?0@"DNDAccountFeatureSupport"8@"NSError"16
v24@?0@"NSDictionary"8@"NSError"16
com.apple.donotdisturb.DNDGlobalConfigurationService
com.apple.donotdisturb.DNDGlobalConfigurationService.callout
prefs:root=DO_NOT_DISTURB
prefs:root=DO_NOT_DISTURB&path=setup
prefs:root=DO_NOT_DISTURB&path=setup&type=%ld
prefs:root=DO_NOT_DISTURB&path=%@
v24@?0@"DNDAppInfo"8@"NSError"16
com.apple.donotdisturb.DNDAppInfoService
com.apple.donotdisturb.schedule.default
<%@: %p; clientIdentifier: '%@'; modeIdentifier: '%@'; lifetimeType: %@; activeDateInterval: %@; userVisibleEndDate: %@>
lifetimeType
activeDateInterval
@"LNAction"16@?0@"DNDAppAction"8
boxed
com.apple.donotdisturb.monitor
com.apple.donotdisturb.service
com.apple.donotdisturb.service.non-launching
v24@?0@"DNDBehaviorSettings"8@"NSError"16
v24@?0@"DNDScheduleSettings"8@"NSError"16
v24@?0@"NSArray<__DNDModeConfiguration__>"8@"NSError"16
@"NSString"16@?0@"DNDMode"8
Failed to set predicate.
DNDAppConfigurationService is only supported when linking LinkServices
Failed to set target content identifier prefix.
Failed to save action.
DNDAppConfigurationService is only supported when linking VoiceShortcutClient
v24@?0@"NSArray<__WFToggleSettingContextualAction__>"8@"NSError"16
device unlocked
always interrupt flag
always bypass
no bypass
group contact
repeat event
emergency contact
mode configuration type
mode configuration for application
mode configuration for application thread
mode configuration for contacts
mode configuration for favorites
mode configuration for contact group
mode configuration for contact
mode configuration urgency
mode configuration notify anyway
display mirrored
display shared
presentation mode
incompatible configuration
application predicate for mode
com.apple.donotdisturb.DNDSettingsService.service.lock
com.apple.donotdisturb.SettingsService
com.apple.donotdisturb.SettingsService.call-out
com.apple.donotdisturb.appconfiguration.service
com.apple.donotdisturb.DNDAuxiliaryStateService.setScreenIsShared:screenIsMirrored:
[%{public}@] Set auxiliary state; isScreenShared=%d isScreenMirrored=%d
[%{public}@] Error when setting auxiliary state; error='%{public}@' isScreenShared=%d isScreenMirrored=%d
com.apple.donotdisturb.DNDMeDeviceService.queryCurrentState.async
[%{public}@] Processing async 'Me Device' state request
[%{public}@] Error when getting 'Me Device' state, error='%{public}@'
[%{public}@] Got current 'Me Device' state, meDeviceStatus=%{public}@, meDeviceName=%{public}@
com.apple.donotdisturb.DNDMeDeviceService.addListener
Adding 'Me Device' state update listener: listener=%{public}@
Registered for 'Me Device' state updates: listener=%{public}@
Did not register for 'Me Device' state updates, will remove listener: listener=%{public}@
com.apple.donotdisturb.DNDMeDeviceService.removeListener
Removing 'Me Device' state update listener: listener=%{public}@
com.apple.donotdisturb.DNDMeDeviceService.registerForUpdates
[%{public}@] Registering 'Me Device' state update listener
[%{public}@] Error when registering 'Me Device' state update listener, error='%{public}@'
[%{public}@] Begin configuration
[%{public}@] suppressionType: %{public}@; minimumBreakthroughUrgency: %{public}@; hideApplicationBadges: %{public}@; applicationConfigurationType: %{public}@; senderConfigurationType: %{public}@; compatibilityVersion: %{public}@
[%{public}@] Allowed app: %{private}@; %{private}@
[%{public}@] Denied app: %{private}@
[%{public}@] Allowed Web app: %{private}@
[%{public}@] Denied Web app: %{private}@
[%{public}@] senderConfiguration: %{private}@
[%{public}@] End configuration
nil startDate provided to DNDModeAssertion initializer. %@
[%{public}@] Begin diff
[%{public}@] %{private}@
[%{public}@] End diff
Failed to encode/decode app action: LinkServices framework is not loaded.
Failed to (un)archive action: VoiceShortcut or LinkServices framework is not loaded.
Failed to unarchive settings: %{public}@
Failed to unarchive settings using fallback: %{public}@
Unarchived settings using fallback. %@
Unarchived settings. %@
Failed to archive settings: %{public}@
Unexpected Project Source Version: %@
Parsed current version: %@; source: %@
com.apple.donotdisturb.DNDAppConfigurationService.getCurrentAppConfigurationForActionIdentifier
[%{public}@] Getting current app configuration for action identifier %@
[%{public}@] Error when getting current app configuration for action identifier %@, error='%{public}@'
[%{public}@] Got current app configuration for action identifier %@
com.apple.donotdisturb.DNDAppConfigurationService.invalidateAppContextForActionIdentifier
[%{public}@] Invalidating app context for action identifier %@
[%{public}@] Error when getting invalidating app context for actionIdentifier %@, error='%{public}@'
[%{public}@] Invalidated app context for actionIdentifier %@
com.apple.donotdisturb.DNDAvailabilityService.getIsLocalUserAvailable
[%{public}@] Get user availability, availability=%{public}@
[%{public}@] Error when getting user availability in current mode for contact, error='%{public}@'
Failed to store system action: VoiceShortcutClient framework is not loaded.
com.apple.donotdisturb.DNDModeConfigurationService.hasActivelyConfiguredModes
[%{public}@] Determined if modes have been actively configured, hasActivelyConfiguredModes=%{public}@
[%{public}@] Error determining if modes have been actively configured, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.setModeConfiguration
[%{public}@] Set mode configuration, configuration=%{public}@
[%{public}@] Error when setting mode configuration, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.removeModeConfiguration
com.apple.donotdisturb.DNDModeConfigurationService.getModeConfigurations
[%{public}@] Get mode configurations
[%{public}@] Error when getting mode configurations, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.getModeConfiguration
[%{public}@] Get mode configuration, identifier=%{public}@
com.apple.donotdisturb.DNDModeConfigurationService.getIsLocalUserAvailable
[%{public}@] Get user availability in current mode for contact, availability=%{public}@, handle=%{private}@
com.apple.donotdisturb.DNDModeConfigurationService.getAllowedModesForContact
[%{public}@] Get allowed modes for contact, handle=%{private}@
[%{public}@] Error when getting allowed modes for contact, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.getSilencedModesForContact
[%{public}@] Get silenced modes for contact, handle=%{private}@
[%{public}@] Error when getting silenced modes for contact, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.publishCurrentStatusKitAvailability
[%{public}@] Request to publish statuskit availability succeeded: %{public}@
[%{public}@] Error when publishing statuskit availability, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.allModes
[%{public}@] Got all modes, modes=%{public}@
com.apple.donotdisturb.DNDModeConfigurationService.availableModes
[%{public}@] Got available modes, modes=%{public}@
com.apple.donotdisturb.DNDModeConfigurationService.setAppConfigurationPredicate
[%{public}@] Set app configuration predicate, predicate=%{public}@ applicationIdentifier=%{public}@ modeIdentifier=%{public}@
[%{public}@] Error when setting app configuration predicate, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.getAppConfigurationPredicate
[%{public}@] Got app configuration predicate, predicate=%{public}@ applicationIdentifier=%{public}@ modeIdentifier=%{public}@
[%{public}@] Error when getting app configuration predicate, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.setAppConfigurationTargetContentIdentifierPrefix
[%{public}@] Set target content identifier prefix, prefix=%{public}@ applicationIdentifier=%{public}@ modeIdentifier=%{public}@
[%{public}@] Error when setting target content identifier prefix, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.getAppConfigurationTargetContentIdentifierPrefixes
[%{public}@] Got %@ target content identifier prefixes for modeIdentifier %{public}@
[%{public}@] Error when getting target content identifier prefixes, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.setAppConfigurationAction
com.apple.donotdisturb.DNDModeConfigurationService.clearAppConfigurationAction
com.apple.donotdisturb.DNDModeConfigurationService.getAppConfigurationActions
com.apple.donotdisturb.DNDModeConfigurationService.setAppAction
[%{public}@] Set app action, action=%{public}@; modeIdentifier=%{public}@
[%{public}@] Error when setting app configuration action, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.clearAppAction
[%{public}@] Clear app action, identifier=%{public}@ applicationIdentifier=%{public}@ modeIdentifier=%{public}@
[%{public}@] Error when clearing app action, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.getAppActionsForModeIdentifier
[%{public}@] Got %@ app actions for modeIdentifier %{public}@. actions = %@
[%{public}@] Error when getting app actions, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.setSystemAction
[%{public}@] Set system action, action=%{public}@; modeIdentifier=%{public}@
[%{public}@] Error when setting system configuration action, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.clearSystemAction
[%{public}@] Clear system action, identifier=%{public}@ modeIdentifier=%{public}@
[%{public}@] Error when clearing system action, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.getSystemActionsForModeIdentifier
[%{public}@] Got %@ system actions for modeIdentifier %{public}@
[%{public}@] Error when getting system actions, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.setSystemConfigurationAction
com.apple.donotdisturb.DNDModeConfigurationService.clearSystemConfigurationAction
com.apple.donotdisturb.DNDModeConfigurationService.getSystemConfigurationActions
com.apple.donotdisturb.DNDModeConfigurationService.getSyncPreferenceEnabled
[%{public}@] Got sync preference enabled=%{public}@
[%{public}@] Error when getting sync preference enabled, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.getSyncAvailable
[%{public}@] Got sync available=%{public}@
[%{public}@] Error when getting sync available, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.getSyncEnabled
[%{public}@] Got sync enabled=%{public}@
[%{public}@] Error when getting sync enabled, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.setSyncPreferenceEnabled
[%{public}@] Set sync preference enabled=%{public}@
[%{public}@] Error when setting sync enabled, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.addListener
Adding update listener: listener=%{public}@
Registered for updates: listener=%{public}@
Did not register for updates, will remove listener: listener=%{public}@
com.apple.donotdisturb.DNDModeConfigurationService.removeListener
Removing update listener: listener=%{public}@
received updated available mode identifiers: identifiers=%{public}@
received updated app configuration context for mode identifier: identifier=%{public}@
com.apple.donotdisturb.DNDModeConfigurationService.syncModeConfigurations
[%{public}@] Synced mode configurations
com.apple.donotdisturb.DNDModeConfigurationService.createDefaultDrivingModeConfiguration
[%{public}@] Creating Driving mode configuration from template
com.apple.donotdisturb.DNDModeConfigurationService.createDefaultSleepingModeConfiguration
[%{public}@] Creating Sleeping mode configuration from template
com.apple.donotdisturb.DNDModeConfigurationService.createDefaultWorkoutModeConfiguration
[%{public}@] Creating Workout mode configuration from template
com.apple.donotdisturb.DNDModeConfigurationService.createModeConfigurationUsingTemplateForModeIdentifier
[%{public}@] Creating mode configuration from template for identifier: identifier=%{pubic}@
com.apple.donotdisturb.DNDModeConfigurationService.createEmptyModeConfigurationForMode
[%{public}@] Remove mode configuration, identifier=%{public}@
[%{public}@] Error when removing mode configuration, error='%{public}@'
[%{public}@] Error mode configuration for identifier cannot be removed, identifier=%{public}@
com.apple.donotdisturb.DNDModeConfigurationService.registerForUpdates
[%{public}@] Registering update listener
[%{public}@] Error when registering update listener, error='%{public}@'
com.apple.donotdisturb.DNDEventBehaviorResolutionService.resolveEvent
[%{public}@] Resolving behavior for event, details=%@
[%{public}@] Error when resolving behavior, error='%{public}@'
[%{public}@] Resolved event, details=%@ behavior=%@
%{public}@ normalizing phonenumber %{private}@
%{public}@ couldnt normalize phonenumber %{private}@
com.apple.donotdisturb.DNDStateService.queryCurrentState.async
[%{public}@] Processing async state request
[%{public}@] Error when getting state, error='%{public}@'
[%{public}@] Got current state, state=%{public}@
com.apple.donotdisturb.DNDStateService.queryCurrentState
[%{public}@] Processing state request
com.apple.donotdisturb.DNDStateService.addStateUpdateListener
Adding state update listener: listener=%{public}@
Registered for state updates: listener=%{public}@
Did not register for state updates, will remove listener: listener=%{public}@
com.apple.donotdisturb.DNDStateService.removeStateUpdateListener
Removing state update listener: listener=%{public}@
com.apple.donotdisturb.DNDStateService.registerForStateUpdates
[%{public}@] Registering state update listener
[%{public}@] Error when registering state update listener, error='%{public}@'
Received XPC event for %s
XPC events subscriber received error: %s
XPC events subscriber received event of unexpected type %s
XPC request connection was activated: connection=%p
XPC request connection was interrupted: connection=%p
XPC request connection was invalidated, cannot recover: connection=%p
Merge decision: self; reason: %{public}@
Merge decision: other; reason: %{public}@
[%{public}@] Begin: %{public}@
[%{public}@] %{public}@
[%{public}@] created: %{public}@; lastModified: %{public}@; isAutomaticallyGenerated: %{public}d; hasSecureData: %{public}d; compatibilityVersion: %{public}@; 
[%{public}@] triggers: %{private}@
[%{public}@] End
com.apple.donotdisturb.DNDModeAssertionService.takeModeAssertion
[%{public}@] Taking mode assertion; details=%{public}@
[%{public}@] Error when taking mode assertion, error='%{public}@'
[%{public}@] Took mode assertion, assertion=%{public}@
com.apple.donotdisturb.DNDModeAssertionService.invalidateActiveModeAssertion
[%{public}@] Invalidating active mode assertion
[%{public}@] Error when invalidating mode assertion, error='%{public}@'
[%{public}@] Invalidated mode assertion, invalidation=%{public}@
com.apple.donotdisturb.DNDModeAssertionService.activeModeAssertion
[%{public}@] Getting active mode assertion
[%{public}@] Error when requesting active mode assertion, error='%{public}@'
[%{public}@] Got mode assertion, assertion=%{public}@
com.apple.donotdisturb.DNDModeAssertionService.latestModeAssertionInvalidation
[%{public}@] Getting latest mode assertion invalidation
[%{public}@] Error when requesting latest mode assertion invalidation, error='%{public}@'
[%{public}@] Got invalidation, invalidation=%{public}@
com.apple.donotdisturb.DNDModeAssertionService.invalidateAllActiveModeAssertions
[%{public}@] Invalidating all active mode assertions
[%{public}@] Error when invalidating all active mode assertions, error='%{public}@'
[%{public}@] Invalidated all active mode assertions, success=%{BOOL}u
com.apple.donotdisturb.DNDModeAssertionService.allModeAssertionsWithError
[%{public}@] Requesting all active mode assertions
[%{public}@] Error when requesting all active mode assertions, error='%{public}@'
[%{public}@] Requested all active mode assertions, success=%{BOOL}u
com.apple.donotdisturb.DNDModeAssertionService.addAssertionUpdateListener
[%{public}@] Adding assertion update listener: listener=%{public}@
[%{public}@] Registered for assertion updates: listener=%{public}@
[%{public}@] Did not register for assertion updates, will remove listener: listener=%{public}@, error=%{public}@
com.apple.donotdisturb.DNDModeAssertionService.removeAssertionUpdateListener
[%{public}@] Removing assertion update listener: listener=%{public}@
[%{public}@] Remote service got assertion change: service=%{public}@, assertion=%{public}@, invalidation=%{public}@
[%{public}@] Will deliver assertion invalidation to listener: invalidation=%{public}@, listener=%{public}@
[%{public}@] Will deliver assertion change to listener: assertion=%{public}@, listener=%{public}@
com.apple.donotdisturb.DNDModeAssertionService.registerForAssertionUpdates
[%{public}@] Registering assertion update listener
com.apple.donotdisturb.DNDModeSelectionService.activateModeWithIdentifier
[%{public}@] Activate mode with identifier, modeIdentifier=%{public}@
[%{public}@] Error when setting mode with identifier, modeIdentifier=%{public}@ error='%{public}@'
com.apple.donotdisturb.DNDModeSelectionService.invalidateModeAssertionWithUUID
[%{public}@] Invalidate mode assertion with UUID, assertionUUID=%{public}@
[%{public}@] Error when invalidating mode assertion with UUID, assertionUUID=%{public}@ error='%{public}@'
com.apple.donotdisturb.DNDModeSelectionService.activeModeAssertion
[%{public}@] Getting active mode assertion; not restricted by client identifier
com.apple.donotdisturb.DNDModeSelectionService.addListener
com.apple.donotdisturb.DNDModeSelectionService.removeListener
com.apple.donotdisturb.DNDModeSelectionService.registerForUpdates
[%{public}@] Error when registering mode selection update listener, error='%{public}@'
com.apple.donotdisturb.DNDGlobalConfigurationService.getPreventAutoReply
[%{public}@] Auto reply is %{public}@
[%{public}@] Error when getting prevent-auto-reply state, error='%{public}@'
com.apple.donotdisturb.DNDGlobalConfigurationService.setPreventAutoReply
[%{public}@] Set auto reply to %{public}@
[%{public}@] Error when setting prevent-auto-reply state, error='%{public}@'
com.apple.donotdisturb.DNDGlobalConfigurationService.modesCanImpactAvailability
[%{public}@] Modes can%{public}@ impact availability.
[%{public}@] Error when getting overall availability state, error='%{public}@'
com.apple.donotdisturb.DNDGlobalConfigurationService.setModesCanImpactAvailability
[%{public}@] Set modesCanImpactAvailability to %{public}@
[%{public}@] Error when setting modesCanImpactAvailability state, error='%{public}@'
Bypass settings are now per mode configuration
com.apple.donotdisturb.DNDModeConfigurationService.getCloudSyncState
[%{public}@] Got cloud sync state=%{public}@
[%{public}@] Error when getting cloud sync state, error='%{public}@'
[%{public}@] Set cloud sync preference enabled=%{public}@
[%{public}@] Error when setting cloud sync enabled, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.getPairSyncState
[%{public}@] Got pair sync state=%{public}@
[%{public}@] Error when getting pair sync state, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.setPairSyncPreferenceEnabled
[%{public}@] Set pair sync preference enabled=%{public}@
[%{public}@] Error when setting pair sync enabled, error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.didChangeFocusStatusSharingSettingForApplicationIdentifier
[%{public}@] Signaled change to focus status sharing setting, applicationIdentifier=%{public}@ success=%{public}@
[%{public}@] Error when signaling change to focus status sharing setting, applicationIdentifier=%{public}@ error='%{public}@'
com.apple.donotdisturb.DNDModeConfigurationService.getAccountFeatureSupport
[%{public}@] Got account feature support=%{public}@
[%{public}@] Error when getting account feature support; error='%{public}@'
com.apple.donotdisturb.DNDGlobalConfigurationService.addListener
com.apple.donotdisturb.DNDGlobalConfigurationService.removeListener
com.apple.donotdisturb.DNDModeConfigurationService.getStateDump
[%{public}@] Got state dump
[%{public}@] Error when getting state dump, error='%{public}@'
com.apple.donotdisturb.DNDGlobalConfigurationService.registerForUpdates
com.apple.donotdisturb.DNDAppInfoService.getAppInfoForBundleIdentifier
[%{public}@] App info is %{private}@
[%{public}@] Error when getting app info, error='%{public}@'
com.apple.donotdisturb.DNDAppInfoService.getAppInfoForBundleIdentifiers
XPC monitor connection was activated: connection=%p
Remote service connection failed to register for assertion updates on activation: requestDetails=%{public}@, error=%{public}@
Remote service connection failed to register for state updates on activation: requestDetails=%{public}@, error=%{public}@
Remote service connection failed to register for settings updates on activation: requestDetails=%{public}@, error=%{public}@
Remote service connection failed to register for available mode identifier updates on activation: requestDetails=%{public}@, error=%{public}@
Remote service connection failed to register for global configuration updates on activation: requestDetails=%{public}@, error=%{public}@
Remote service connection failed to register for 'Me Device' state updates on activation: requestDetails=%{public}@, error=%{public}@
XPC monitor connection was interrupted, reactivating: connection=%p
XPC monitor connection was invalidated, cannot recover: connection=%p
Unable to create monitor endpoint.
Remote service connection got assertion update: assertion=%{public}@, invalidation=%{public}@, clientIdentifiers=%{public}@
com.apple.donotdisturb.DNDSettingsService.behaviorSettings
[%{public}@] Error when getting behavior settings, error='%{public}@'
[%{public}@] Got behavior settings, settings=%{public}@
com.apple.donotdisturb.DNDSettingsService.setBehaviorSettings
[%{public}@] Set behavior settings, settings=%{public}@
[%{public}@] Error setting behavior settings, settings=%{public}@, error='%{public}@'
com.apple.donotdisturb.DNDSettingsService.scheduleSettings
[%{public}@] Error when getting schedule settings, error='%{public}@'
[%{public}@] Got schedule settings, settings=%{public}@
com.apple.donotdisturb.DNDSettingsService.setScheduleSettings
[%{public}@] Set schedule settings, settings=%{public}@
[%{public}@] Error setting schedule settings, settings=%{public}@, error='%{public}@'
com.apple.donotdisturb.DNDSettingsService.addSettingsUpdateListener
Adding settings update listener: listener=%{public}@
Registered for settings updates: listener=%{public}@
Did not register for settings updates, will remove listener: listener=%{public}@
com.apple.donotdisturb.DNDSettingsService.removeSettingsUpdateListener
Removing settings update listener: listener=%{public}@
com.apple.donotdisturb.DNDSettingsService.registerForSettingsUpdates
[%{public}@] Registering settings update listener
[%{public}@] Error when registering settings update listener, error='%{public}@'
DNDScheduleTime
NSCopying
NSMutableCopying
NSSecureCoding
NSCoding
DNDMutableScheduleTime
DNDAuxiliaryStateService
DNDAccountFeatureSupport
DNDNotificationFilterPredicateValidator
NSPredicateVisitor
DNDSenderConfiguration
DNDMutableSenderConfiguration
DNDMeDeviceService
DNDRemoteServiceConnectionEventListener
NSObject
DNDConfiguration
DNDMutableConfiguration
DNDModeAssertion
DNDBehaviorSettings
DNDMutableBehaviorSettings
Deprecated
DNDMeDeviceState
DNDDiffBuilder
DiffBuilding
DNDModeAssertionDateIntervalLifetime
DNDAppAction
DNDMutableAppAction
DNDAppInfo
DNDMutableAppInfo
DNDScheduleTimePeriod
DNDMutableScheduleTimePeriod
DNDApplicationIdentifier
DNDEventSourceIdentifying
DNDModeAssertionInvalidation
DNDStateUpdate
DNDDevice
DNDAppConfigurationService
DNDModeAssertionLifetime
DNDRequestDetails
DNDAvailabilityService
DNDModeAssertionCalendarEventLifetime
DNDApplicationConfiguration
DNDMutableApplicationConfiguration
DNDSystemAction
DNDMutableSystemAction
DNDMode
DNDMutableMode
DateComponents
DNDModeConfigurationService
DNDModeConfigurationTrigger
DNDModeConfigurationLocationTrigger
DNDModeConfigurationScheduleTrigger
DNDModeConfigurationAppForegroundTrigger
DNDModeConfigurationDrivingTrigger
DNDModeConfigurationGameControllerTrigger
DNDModeConfigurationSleepingTrigger
DNDModeConfigurationSmartTrigger
DNDModeConfigurationWorkoutTrigger
DNDModeConfigurationMindfulnessTrigger
DNDModeConfigurationScreenActivityTrigger
DNDEventBehaviorResolutionService
DNDContact
DNDMutableContact
DNDClientEventBehavior
DNDState
DNDBypassSettings
DNDMutableBypassSettings
DNDModeAssertionInvalidationDetails
DNDMutableModeAssertionInvalidationDetails
DNDStateService
DeprecatedUpdateListener
DNDClientEventDetails
DNDMutableClientEventDetails
DNDXPCEventObserver
DNDRemoteAvailabilityServiceServerProtocol
DNDRemoteAvailabilityServiceConnection
DNDModeConfiguration
DNDDiffBuilding
DNDMutableModeConfiguration
DoNotDisturb
DNDModeAssertionCurrentLocationLifetime
DNDModeAssertionExplicitRegionLifetime
DNDModeAssertionSource
DNDModeAssertionUserRequestedLifetime
DNDWebApplicationIdentifier
DNDScheduleSettings
DNDMutableScheduleSettings
DNDModeAssertionDetails
DNDMutableModeAssertionDetails
DNDModeAssertionScheduleLifetime
DNDModeAssertionService
DNDContactHandle
DNDMutableContactHandle
DNDModeSelectionService
DNDGlobalConfigurationService
DNDAppInfoService
DNDStateModeAssertionMetadata
DNDAppActionsBox
DNDAppConfigurationTargetContentIdentifierPrefixesBox
DNDRemoteMonitorServerProtocol
DNDRemoteMonitorServerModeAssertionProtocol
DNDRemoteMonitorServerStateProtocol
DNDRemoteMonitorServerSettingsProtocol
DNDRemoteMonitorServerModeSelectionProtocol
DNDRemoteMonitorServerGlobalConfigurationProtocol
DNDRemoteMonitorServerMeDeviceStateProtocol
DNDRemoteServiceClientProtocol
DNDRemoteServiceClientModeAssertionProtocol
DNDRemoteServiceClientStateProtocol
DNDRemoteServiceClientSettingsProtocol
DNDRemoteServiceClientModeSelectionProtocol
DNDRemoteServiceClientGlobalConfigurationProtocol
DNDRemoteServiceClientMeDeviceStateProtocol
DNDRemoteServiceServerProtocol
DNDRemoteServiceServerBehaviorResolutionProtocol
DNDRemoteServiceServerModeAssertionProtocol
DNDRemoteServiceServerStateProtocol
DNDRemoteServiceServerSettingsProtocol
DNDRemoteServiceServerModeConfigurationProtocol
DNDRemoteServiceServerModeSelectionProtocol
DNDRemoteServiceServerGlobalConfigurationProtocol
DNDRemoteServiceServerAppInfoProtocol
DNDRemoteServiceServerMeDeviceStateProtocol
DNDRemoteServiceServerAuxiliaryStateProtocol
DNDRemoteServiceAppConfigurationProtocol
DNDRemoteServiceServerProtocolLinkUnavailable
DNDRemoteServiceConnection
DNDSettingsService
DNDRemoteAppConfigurationServiceServerProtocol
DNDRemoteAppConfigurationServiceConnection
T@"DNDScheduleTimePeriod",C,D,N
T#,R
T@"NSDate",R,C,N,V_lastModified
T@"DNDApplicationIdentifier",C,D,N
T@"NSSet",R,C,N
T@"DNDBypassSettings",C,D,N
T@"NSString",R,C,N,V_identifier
T@"DNDBypassSettings",R,C,N,V_phoneCallBypassSettings
T@"NSURL",C,D,N
T@"DNDConfiguration",C,D,N
T@"NSURL",R,C,N,V_cachedIconURL
T@"DNDContactHandle",C,D,N
TQ,R,N,V_reason
T@"DNDMode",C,D,N
Tq,R,N,V_source
T@"DNDModeAssertion",R,C,N,V_assertion
_action
T@"DNDModeAssertionInvalidationDetails",R,C,N,V_details
_allowedThreads
T@"DNDModeAssertionLifetime",R,C,N,V_lifetime
_connectionLock
T@"DNDModeConfiguration",R,C,N,V_activeModeConfiguration
_detail
T@"DNDScheduleTime",R,C,N,V_endTime
_emailAddresses
T@"DNDScheduleTimePeriod",R,C,N,V_timePeriod
_eventListeners
T@"DNDSenderConfiguration",R,C,N,V_senderConfiguration
_immediateBypassEventSourceType
T@"DNDState",R,C,N,V_state
_minute
T@"LNAction",C,N,V_rawAction
_occurrenceDate
T@"NSArray",C,D,N
_reason
T@"NSArray",R,C,N
_region
T@"NSData",C,N,V_encodedAction
_source
T@"NSDate",R,C,N,V_created
allowEvaluation
T@"NSDate",R,C,N,V_modeConfigurationModifiedDate
allowedContacts
T@"NSDate",R,C,N,V_startDate
bs_map:
T@"NSDate",R,C,N,V_userVisibleTransitionDate
containsObject:
T@"NSDateInterval",R,C,N,V_dateInterval
deliverUpdatedBehaviorSettings:
T@"NSDictionary",C,N,V_appActionsForModeIdentifier
deniedWebApplicationIdentifiers
T@"NSDictionary",R,C,N
diffDescription
T@"NSMutableSet",C,D,N
endDate
T@"NSSet",C,N,V_deniedWebApplicationIdentifiers
exceptionForApplication:thread:
T@"NSSet",R,C,N,V_allowedContactTypes
getSyncAvailableReturningError:
T@"NSSet",R,C,N,V_allowedThreads
initWithRegion:
T@"NSSet",R,C,N,V_deniedContactGroups
isUserRequested
T@"NSSet",R,C,N,V_deniedContacts
matchesContact:
T@"NSSet",R,C,N,V_phoneNumbers
numberWithBool:
T@"NSString",C,N,V_bundleIdentifier
object2
T@"NSString",R,C
options
T@"NSString",R,C,N
registerForSettingsUpdatesWithRequestDetails:completionHandler:
T@"NSString",R,C,N,V_bundleIdentifier
remoteService:didReceiveUpdatedActiveModeAssertion:stateUpdate:
T@"NSString",R,C,N,V_contactIdentifier
removeListener:
T@"NSString",R,C,N,V_detail
T@"NSString",R,C,N,V_displayName
setDisplayName:
T@"NSString",R,C,N,V_filterCriteria
setSyncPreferenceEnabled:error:
T@"NSString",R,C,N,V_givenName
setWithObjects:
T@"NSString",R,C,N,V_lastModifiedByDeviceID
symbolImageName
T@"NSString",R,C,N,V_meDeviceName
visitPredicate:
.cxx_destruct
T@"NSDate",R,C,N,V_creationDate
T@"CLCircularRegion",R,C,N,V_region
T@"NSSet",C,D,N
T@"DNDApplicationIdentifier",R,C,N,V_applicationIdentifier
T@"NSSet",R,C,N,V_deniedThreads
T@"DNDBypassSettings",R,C,N
T@"NSString",R,C,N,V_middleName
T@"DNDClientEventDetails",R,C,N,V_eventDetails
T@"NSURL",R,C,N
T@"DNDConfiguration",R,C,N,V_configuration
TQ,R,N,V_minute
T@"DNDContactHandle",R,C,N,V_sender
TQ,R,N,V_scheduleEnabledSetting
T@"DNDMode",R,C,N,V_mode
T{?=qqq},R,N,V_frameworkVersion
T@"DNDModeAssertionDetails",R,C,N,V_details
_activeModeUUID
T@"DNDModeAssertionLifetime",C,D,N
_assertionMonitorRequestDetails
T@"DNDModeAssertionSource",R,C,N,V_source
_deniedContacts
T@"DNDScheduleTime",C,D,N
_dimsLockScreen
T@"DNDScheduleTime",R,C,N,V_startTime
_enabledSetting
T@"DNDSenderConfiguration",C,D,N
_filterCriteria
T@"DNDState",R,C,N,V_previousState
_meDeviceStatus
T@"LNAction",C,D,N
_modeIdentifier
T@"LNAction",R,C,D,N
_pairedFeatures
T@"NSArray",R,C,D,N
_reasonOverride
T@"NSArray",R,C,N,V_triggers
_sender
T@"NSDate",C,D,N
allKeys
T@"NSDate",R,C,N,V_invalidationDate
allowSmartEntry
T@"NSDate",R,C,N,V_occurrenceDate
behaviorSettingsReturningError:
T@"NSDate",R,C,N,V_userVisibleEndDate
bundleForClass:
T@"NSDateInterval",R,C,N,V_activeDateInterval
created
T@"NSDictionary",C,D,N
deliverUpdatedScheduleSettings:
T@"NSDictionary",C,N,V_appConfigurationTargetContentIdentifierPrefixesForModeIdentifier
details
T@"NSDictionary",R,C,N,V_allowedApplicationIdentifiers
enabled
T@"NSSet",C,N,V_allowedWebApplicationIdentifiers
endTime
T@"NSSet",R,C,N,V_allowedContactGroups
getPairSyncStateReturningError:
T@"NSSet",R,C,N,V_allowedContacts
hasCloudDevices
T@"NSSet",R,C,N,V_deniedApplicationIdentifiers
isProxy
T@"NSSet",R,C,N,V_deniedContactTypes
log:withPrefix:
T@"NSSet",R,C,N,V_emailAddresses
normalizedValue
T@"NSString",C,D,N
object1
T@"NSString",C,N,V_identifier
onlyDuringEvent
T@"NSString",R,C,D,N
rawResolvedCompatibilityVersion
T@"NSString",R,C,N,V_bundleID
release
T@"NSString",R,C,N,V_clientIdentifier
removeExceptionForContactGroup:
T@"NSString",R,C,N,V_description
scheduleSettingsReturningError:
T@"NSString",R,C,N,V_deviceIdentifier
setAppActionsForModeIdentifier:
T@"NSString",R,C,N,V_eventUniqueID
setInterruptionBehaviorSetting:
T@"NSString",R,C,N,V_firstName
setTargetQueue:
T@"NSString",R,C,N,V_immediateBypassCNGroupIdentifier
suppressionType
T@"NSString",R,C,N,V_lastName
urgency
T@"NSString",R,C,N,V_modeIdentifier
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_nickName
T@"NSString",R,C,N,V_organizationName
T@"NSString",R,C,N,V_scheduleIdentifier
T@"NSString",R,C,N,V_symbolImageName
T@"NSString",R,C,N,V_threadIdentifier
T@"NSString",R,C,N,V_tintColorName
T@"NSString",R,C,N,V_value
T@"NSString",R,C,N,V_webIdentifier
T@"NSURL",R,C,N,V_storeIconURL
T@"NSUUID",R,C,D,N
T@"NSUUID",R,C,N,V_UUID
T@"NSUUID",R,C,N,V_activeModeUUID
T@"NSUUID",R,C,N,V_auditUUID
T@"NSUUID",R,C,N,V_identifier
T@"WFReverseContextualAction",&,D,N
T@"WFReverseContextualAction",R,&,N,V_reverseAction
T@"WFToggleSettingContextualAction",&,D,N
T@"WFToggleSettingContextualAction",R,&,N,V_action
T@,R,N,V_object1
T@,R,N,V_object2
TB,D,N
TB,D,N,GisAutomaticallyGenerated
TB,D,N,GisEnabled
TB,D,N,GisPlaceholder
TB,R
TB,R,D,N
TB,R,D,N,GisActive
TB,R,D,N,GisUserRequested
TB,R,N
TB,R,N,GisAutomaticallyGenerated,V_automaticallyGenerated
TB,R,N,GisEnabled,V_enabled
TB,R,N,GisOnlyDuringEvent,V_onlyDuringEvent
TB,R,N,GisSupportedConfiguration
TB,R,N,V_hasCloudDevices
TB,R,N,V_hasPairedDevices
TB,R,N,V_notifyAnyway
TQ,D,N
TQ,R
TQ,R,D,N
TQ,R,N
TQ,R,N,V_applicationConfigurationType
TQ,R,N,V_bedtimeBehaviorEnabledSetting
TQ,R,N,V_behavior
TQ,R,N,V_cloudFeatures
TQ,R,N,V_deviceCapabilities
TQ,R,N,V_deviceClass
TQ,R,N,V_dimsLockScreen
TQ,R,N,V_enabledSetting
TQ,R,N,V_hideApplicationBadges
TQ,R,N,V_hour
TQ,R,N,V_immediateBypassEventSourceType
TQ,R,N,V_impactsAvailability
TQ,R,N,V_interruptionBehaviorSetting
TQ,R,N,V_interruptionSuppression
TQ,R,N,V_lifetimeType
TQ,R,N,V_meDeviceStatus
TQ,R,N,V_minimumBreakthroughUrgency
TQ,R,N,V_pairedFeatures
TQ,R,N,V_platform
TQ,R,N,V_reasonOverride
TQ,R,N,V_repeatEventSourceBehaviorEnabledSetting
TQ,R,N,V_resolutionReason
TQ,R,N,V_senderConfigurationType
TQ,R,N,V_suppressionState
TQ,R,N,V_suppressionType
TQ,R,N,V_timestamp
TQ,R,N,V_type
TQ,R,N,V_urgency
TQ,R,N,V_userVisibleTransitionLifetimeType
TQ,R,N,V_visibility
TQ,R,N,V_weekdays
Tq,D,N
Tq,R,N
Tq,R,N,V_compatibilityVersion
Tq,R,N,V_options
Tq,R,N,V_semanticType
T{?=qqq},D,N
T{?=qqq},R,N,V_lastModifiedByVersion
URLWithString:
UUID
UUIDString
_UUID
_activeAssertion
_activeAssertionLock
_activeAssertionQueried
_activeDateInterval
_activeModeAssertionMetadata
_activeModeConfiguration
_allowedApplicationIdentifiers
_allowedContactGroups
_allowedContactTypes
_allowedContacts
_allowedWebApplicationIdentifiers
_appActionsForModeIdentifier
_appConfigurationTargetContentIdentifierPrefixesForModeIdentifier
_applicationConfigurationType
_applicationIdentifier
_assertion
_assertionUpdateListeners
_auditUUID
_automaticallyGenerated
_bedtimeBehaviorEnabledSetting
_behavior
_bundleID
_bundleIdentifier
_cachedIconURL
_calloutQueue
_children
_clientIdentifier
_cloudFeatures
_compatibilityVersion
_compileTimeIssues
_configuration
_configurationForApplicationIdentifier:
_configurationWasModified
_connectionLock_connection
_connectionLock_createConnection
_connectionLock_invalidateConnection
_contactIdentifier
_containsSecureTriggers:
_createDefaultModeConfigurationForIdentifier:withRequestDetails:error:
_createEmptyModeConfigurationForMode:withRequestDetails:error:
_created
_creationDate
_creationdate
_dateInterval
_defaultConfigurationTypeForModeSemanticType:
_deniedApplicationIdentifiers
_deniedContactGroups
_deniedContactTypes
_deniedThreads
_deniedWebApplicationIdentifiers
_description
_descriptionForRedacted:
_details
_deviceCapabilities
_deviceClass
_deviceIdentifier
_displayName
_enabled
_encodedAction
_endTime
_evaluatedBypassSettings:
_eventDetails
_eventUniqueID
_exceptionForApplicationIdentifier:thread:
_firstName
_frameworkVersion
_givenName
_globalConfigurationMonitorRequestDetails
_globalConfigurationService
_handleChangeActiveModeAssertion:invalidation:
_hasCloudDevices
_hasPairedDevices
_hasSecureData
_hideApplicationBadges
_hour
_identifier
_immediateBypassCNGroupIdentifier
_impactsAvailability
_init
_initWithAction:bundleIdentifier:actionIdentifier:encodedAction:enabled:
_initWithAllowedContactTypes:deniedContactTypes:allowedContactGroups:deniedContactGroups:allowedContacts:deniedContacts:phoneCallBypassSettings:
_initWithAppInfo:
_initWithClientIdentifier:
_initWithCloud:hasCloud:paired:hasPaired:
_initWithConfigurationType:
_initWithContactIdentifier:firstName:middleName:lastName:nickName:organizationName:phoneNumbers:emailAddresses:
_initWithContactIdentifier:type:value:
_initWithDetails:
_initWithHour:minute:
_initWithIdentifier:
_initWithIdentifier:bundleIdentifier:type:urgency:sender:threadIdentifier:filterCriteria:notifyAnyway:behavior:
_initWithIdentifier:modeIdentifier:modeConfigurationModifiedDate:lifetime:reason:userVisibleEndDate:
_initWithImmediateBypassEventSourceType:immediateBypassCNGroupIdentifier:repeatEventSourceBehaviorEnabledSetting:
_initWithInterruptionBehaviorSetting:
_initWithMinimumBreakthroughUrgency:allowedThreads:deniedThreads:
_initWithMode:
_initWithModeConfiguration:
_initWithPeriod:
_initWithSettings:
_initWithStartTime:endTime:weekdays:
_initWithSuppressionType:allowedApplicationIdentifiers:deniedApplicationIdentifiers:allowedWebApplicationIdentifiers:deniedWebApplicationIdentifiers:senderConfiguration:minimumBreakthroughUrgency:hideApplicationBadges:compatibilityVersion:applicationConfigurationType:senderConfigurationType:
_initWithTime:
_interruptionBehaviorSetting
_interruptionSuppression
_invalidationDate
_lastModified
_lastModifiedByDeviceID
_lastModifiedByVersion
_lastName
_lastReceivedState
_lifetime
_lifetimeType
_listeners
_lock
_maxTriggerCompatibilityVersion:
_meDeviceName
_meDeviceStateMonitorRequestDetails
_middleName
_minimumBreakthroughUrgency
_mode
_modeConfigurationModifiedDate
_modeConfigurationService
_modeIdentifiersMonitorRequestDetails
_monitorLock
_monitorLock_createMonitorConnection
_monitorLock_invalidateMonitorConnection
_monitorLock_monitorService
_monitorState
_monitorTarget
_name
_nickName
_normalizedValue
_notifyAnyway
_object1
_object2
_onlyDuringEvent
_options
_organizationName
_overrideModeIdentifier
_phoneCallBypassSettings
_phoneNumbers
_platform
_previousState
_queue
_queuePriority
_queue_connection
_queue_createConnection
_queue_invalidateConnection
_queue_registerForSettingsUpdatesIfRequired
_queue_registerForStateUpdatesIfRequired
_queue_registerForUpdatesIfRequired
_queue_remoteTarget
_rawAction
_redactedDescriptionsForContacts:
_redactedDescriptionsForStrings:
_registerEventHandler:forStream:
_registerForAssertionUpdatesIfRequiredWithCompletionHandler:
_registeredForUpdates
_remoteTarget
_repeatEventSourceBehaviorEnabledSetting
_resolutionReason
_reverseAction
_scheduleEnabledSetting
_scheduleIdentifier
_secureCodingLifetimeClasses
_semanticType
_senderConfiguration
_senderConfigurationType
_setMonitorState:
_settingsMonitorRequestDetails
_settingsUpdateListeners
_startDate
_startTime
_state
_stateLock
_stateMonitorRequestDetails
_stateUpdateListeners
_storeIconURL
_subscribeToStream:clientIdentifier:
_suppressionState
_suppressionType
_symbolImageName
_threadIdentifier
_timePeriod
_timestamp
_tintColorName
_triggers
_type
_unsubscribeFromStream:clientIdentifier:
_updateListenersOfCloudSyncPreferenceChange:
_urgency
_userVisibleEndDate
_userVisibleTransitionDate
_userVisibleTransitionLifetimeType
_value
_visibility
_webIdentifier
_weekdays
absoluteString
acceptVisitor:flags:
accountFeaturesWithCloud:hasCloudDevices:paired:hasPairedDevices:
action
activate
activateModeWithDetails:error:
activateModeWithDetails:withRequestDetails:completionHandler:
active
activeDateInterval
activeModeAssertionMetadata
activeModeAssertionWithError:
activeModeAssertionWithRequestDetails:completionHandler:
activeModeConfiguration
activeModeIdentifier
activeModeIdentifiers
activeModeUUID
addAssertionUpdateListener:error:
addAssertionUpdateListener:withCompletionHandler:
addEventListener:
addListener:withCompletionHandler:
addObject:
addObjectsFromArray:
addSettingsUpdateListener:error:
addSettingsUpdateListener:withCompletionHandler:
addStateUpdateListener:error:
addStateUpdateListener:withCompletionHandler:
allModeAssertionsWithError:
allModesReturningError:
allModesWithError:
allObjects
allocWithZone:
allowedApplicationIdentifiers
allowedApplications
allowedContactGroups
allowedContactTypes
allowedModesForContactHandle:error:
allowedThreads
allowedWebApplicationIdentifiers
appActionFromDictionaryRepresentation:
appActionsForModeIdentifier
appConfigurationActionsForModeIdentifier
appConfigurationTargetContentIdentifierPrefixesForModeIdentifier
appendFormat:
appendString:
applicationConfigurationType
applicationIdentifier
applicationsWithExceptions
archiveAction:error:
archivedDataWithRootObject:requiringSecureCoding:error:
archivingIsSupported:
array
arrayWithObjects:count:
assertion
auditUUID
automaticallyGenerated
autorelease
availableModesReturningError:
availableModesWithError:
awakeAfterUsingCoder:
bedtimeBehaviorEnabledSetting
behavior
boolValue
bs_compactMap:
bundleID
bundleIdentifier
bundleWithURL:
cachedIconURL
calendarWithIdentifier:
canRemoveModeConfigurationForModeIdentifier:
children
class
clearAppActionWithIdentifier:forApplicationIdentifier:modeIdentifier:error:
clearAppActionWithIdentifier:forApplicationIdentifier:modeIdentifier:withRequestDetails:completionHandler:
clearAppConfigurationActionWithIdentifier:forApplicationIdentifier:modeIdentifier:error:
clearAppConfigurationActionWithIdentifier:forApplicationIdentifier:modeIdentifier:withRequestDetails:completionHandler:
clearSystemActionWithIdentifier:forModeIdentifier:error:
clearSystemActionWithIdentifier:forModeIdentifier:withRequestDetails:completionHandler:
clearSystemConfigurationActionWithIdentifier:modeIdentifier:error:
clearSystemConfigurationActionWithIdentifier:modeIdentifier:withRequestDetails:completionHandler:
clientIdentifier
cloudFeatures
compare:
compatibilityVersion
componentsJoinedByString:
componentsSeparatedByString:
configuration
configurationForModeIdentifier:error:
configurationOfType:
configureConnection:
conformsToProtocol:
connectionWithEndpoint:
contactIdentifier
contactsWithExceptions
containsDate:
containsValueForKey:
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createDefaultDrivingModeConfigurationWithError:
createDefaultSleepingModeConfigurationWithError:
createDefaultWorkoutModeConfigurationWithError:
createEmptyModeConfigurationForMode:error:
createModeConfigurationUsingTemplateForModeIdentifier:error:
createModeConfigurationUsingTemplateForModeSemanticType:error:
creationDate
currentDevice
currentLocale
date
dateComponents
dateInterval
debugDescription
decodeBoolForKey:
decodeInt64ForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultConfiguration
defaultConfigurationType
defaultEndTime
defaultMinimumBreakthroughUrgency
defaultMode
defaultModeConfiguration
defaultScheduleTrigger
defaultStartTime
defaultSuppressionType
defaultTintColorName
deliverActiveModeAssertion:stateUpdate:clientIdentifiers:
deliverActiveModeAssertionUpdate:invalidation:clientIdentifiers:
deliverAllModes:
deliverAvailableModes:
deliverMeDeviceState:
deliverStateUpdate:
deliverUpdatedPairSyncState:
deliverUpdatedPhoneCallBypassSettings:
deliverUpdatedPreventAutoReplySetting:
deniedApplicationIdentifiers
deniedApplications
deniedContactGroups
deniedContactTypes
deniedContacts
deniedThreads
description
descriptionWithIndent:
detail
detailsRepresentingNowWithClientIdentifier:
detailsWithIdentifier:modeIdentifier:lifetime:
detailsWithIdentifier:modeIdentifier:lifetime:reason:
deviceCapabilities
deviceClass
deviceIdentifier
deviceWithClass:deviceCapabilities:
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
didChangeFocusStatusSharingSettingForApplicationIdentifier:
didChangeFocusStatusSharingSettingForApplicationIdentifier:withRequestDetails:completionHandler:
diffAgainstObject:usingDiffBuilder:withDescription:
diffObject:againstObject:
diffObject:againstObject:withDescription:
dimsLockScreen
displayName
distantPast
dnd_defaultSettingsURL
dnd_defaultSetupURL
dnd_doNotDisturbLocalizationBundle
dnd_locationBundle
dnd_privacyObfuscatedString
dnd_settingsURLWithModeIdentifier:
dnd_setupURLWithSemanticType:
doesNotRecognizeSelector:
effectiveBundleIdentifier
emailAddresses
enabledSetting
encodeBool:forKey:
encodeInt64:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
encodedAction
endpointForMachName:service:instance:
enumerateObjectsUsingBlock:
errorWithDomain:code:userInfo:
eventDetails
eventUniqueID
exceptionForApplication:
exceptionForApplicationIdentifier:
exceptionForApplicationIdentifier:thread:
exceptionForContact:
exceptionForContactHandle:
exceptionForWebApplicationIdentifier:
expressionType
fileURLWithPath:
fileURLWithPathComponents:
filterCriteria
firstName
firstWeekday
frameworkVersion
getAccountFeatureSupportWithError:
getAccountFeatureSupportWithRequestDetails:completionHandler:
getActiveModeAssertionWithRequestDetails:completionHandler:
getAllModeAssertionsWithRequestDetails:completionHandler:
getAllModesWithRequestDetails:completionHandler:
getAllowedModesForContactHandle:withRequestDetails:completionHandler:
getAppActionsForModeIdentifier:error:
getAppActionsForModeIdentifier:withRequestDetails:completionHandler:
getAppConfigurationActionsForModeIdentifier:error:
getAppConfigurationActionsForModeIdentifier:withRequestDetails:completionHandler:
getAppConfigurationPredicateForActionIdentifier:forApplicationIdentifier:modeIdentifier:error:
getAppConfigurationPredicateForActionIdentifier:forApplicationIdentifier:modeIdentifier:withRequestDetails:completionHandler:
getAppConfigurationTargetContentIdentifierPrefixesForCurrentModeReturningError:
getAppConfigurationTargetContentIdentifierPrefixesForModeIdentifier:error:
getAppConfigurationTargetContentIdentifierPrefixesForModeIdentifier:withRequestDetails:completionHandler:
getAppInfoForBundleIdentifier:error:
getAppInfoForBundleIdentifier:withRequestDetails:completionHandler:
getAppInfoForBundleIdentifiers:error:
getAppInfoForBundleIdentifiers:withRequestDetails:completionHandler:
getAvailableModesWithRequestDetails:completionHandler:
getBehaviorSettingsWithRequestDetails:completionHandler:
getCloudSyncStateReturningError:
getCloudSyncStateWithRequestDetails:completionHandler:
getCurrentAppConfigurationForActionIdentifier:withCompletionHandler:
getCurrentAppConfigurationForActionIdentifier:withRequestDetails:completionHandler:
getIsLocalUserAvailableWithRequestDetails:completionHandler:
getLatestModeAssertionInvalidationWithRequestDetails:completionHandler:
getModeConfigurationForModeIdentifier:withRequestDetails:completionHandler:
getModeConfigurationsWithRequestDetails:completionHandler:
getModesCanImpactAvailabilityWithRequestDetails:completionHandler:
getPairSyncStateWithRequestDetails:completionHandler:
getPhoneCallBypassSettingsReturningError:
getPreventAutoReplyReturningError:
getPreventAutoReplyWithRequestDetails:completionHandler:
getScheduleSettingsWithRequestDetails:completionHandler:
getSilencedModesForContactHandle:withRequestDetails:completionHandler:
getStateDumpReturningError:
getStateDumpWithRequestDetails:completionHandler:
getSyncEnabledReturningError:
getSyncPreferenceEnabledReturningError:
getSystemActionsForModeIdentifier:error:
getSystemActionsForModeIdentifier:withRequestDetails:completionHandler:
getSystemConfigurationActionsForModeIdentifier:error:
getSystemConfigurationActionsForModeIdentifier:withRequestDetails:completionHandler:
getUserAvailabilityInActiveModeForContactHandle:withRequestDetails:completionHandler:
givenName
globalConfigurationService:didEditCloudSyncPreference:
globalConfigurationService:didReceiveUpdatedPairSyncState:
globalConfigurationService:didReceiveUpdatedPhoneCallBypassSettings:
globalConfigurationService:didReceiveUpdatedPreventAutoReplySetting:
hasActivelyConfiguredModes:error:
hasActivelyConfiguredModesReturningError:
hasDifferences
hasPairedDevices
hasSecureData
hash
hashTableWithOptions:
hideApplicationBadges
hour
identifier
immediateBypassCNGroupIdentifier
immediateBypassEventSourceType
impactsAvailability
init
initWithAction:enabled:
initWithAction:reverseAction:enabled:
initWithActionIdentifier:bundleIdentifier:
initWithApplicationIdentifier:enabledSetting:
initWithAssertion:invalidationDate:details:source:reason:reasonOverride:
initWithBundleID:
initWithBundleID:platform:
initWithBundleIdentifier:enabledSetting:
initWithClass:deviceCapabilities:frameworkVersion:
initWithClientIdentifier:auditUUID:timestamp:
initWithClientIdentifier:deviceIdentifier:
initWithClientIdentifier:modeIdentifier:lifetimeType:activeDateInterval:userVisibleEndDate:
initWithCoder:
initWithContactIdentifier:
initWithDateInterval:
initWithEnabledSetting:
initWithEncodedAction:actionIdentifier:bundleIdentifier:enabled:
initWithEventDetails:interruptionSuppression:resolutionReason:activeModeUUID:
initWithEventUniqueID:occurrenceDate:onlyDuringEvent:
initWithIdentifier:actionMetadata:
initWithMode:configuration:triggers:
initWithMode:configuration:triggers:impactsAvailability:dimsLockScreen:created:lastModified:automaticallyGenerated:compatibilityVersion:lastModifiedByVersion:lastModifiedByDeviceID:
initWithName:modeIdentifier:symbolImageName:tintColorName:semanticType:
initWithName:modeIdentifier:symbolImageName:tintColorName:semanticType:visibility:identifier:
initWithPreviousState:state:reason:source:options:
initWithRegion:detail:enabledSetting:
initWithScheduleEnabledSetting:timePeriod:bedtimeBehaviorEnabledSetting:
initWithScheduleIdentifier:behavior:
initWithSource:applicationIdentifier:displayName:storeIconURL:cachedIconURL:
initWithStartDate:duration:
initWithStatus:name:
initWithSuppressionState:activeModeAssertionMetadata:startDate:userVisibleTransitionDate:userVisibleTransitionLifetimeType:activeModeConfiguration:
initWithTimePeriod:creationDate:enabledSetting:
initWithTimePeriod:enabledSetting:
initWithUUID:startDate:details:source:
initWithWebIdentifier:givenName:
initialize
integerValue
interfaceWithIdentifier:
interruptionBehavior
interruptionBehaviorSetting
interruptionSuppression
intersectSet:
invalidate
invalidateActiveModeAssertionWithDetails:reasonOverride:requestDetails:completionHandler:
invalidateActiveModeAssertionWithError:
invalidateActiveModeAssertionWithInvalidationDetails:reasonOverride:error:
invalidateAllActiveModeAssertionsWithError:
invalidateAllActiveModeAssertionsWithRequestDetails:completionHandler:
invalidateAppContextForActionIdentifier:
invalidateAppContextForActionIdentifier:withRequestDetails:completionHandler:
invalidateModeAssertionWithUUID:error:
invalidateModeAssertionWithUUID:withRequestDetails:completionHandler:
invalidationDate
isActive
isActiveForDate:
isAutoReplyPrevented
isAutomaticallyGenerated
isCloudSyncActive
isCloudSyncActiveWithCompletionHandler:
isEnabled
isEqual:
isEqualToDate:
isEqualToString:
isKindOfClass:
isLocalUserAvailableForContactInActiveMode:error:
isLocalUserAvailableReturningError:
isMemberOfClass:
isOnlyDuringEvent
isPlaceholder
isSupportedConfiguration
lastModified
lastModifiedByDeviceID
lastModifiedByVersion
lastName
laterDate:
latestModeAssertionInvalidationWithError:
length
lifetime
lifetimeForUserRequest
lifetimeMatchingScheduleWithIdentifier:
lifetimeType
lifetimeUntilEndOfCalendarEventWithUniqueID:occurrenceDate:
lifetimeUntilEndOfScheduleWithIdentifier:
lifetimeWithCalendarEventUniqueID:occurrenceDate:
lifetimeWithCurrentLocation
lifetimeWithDateInterval:
lifetimeWithDuration:
lifetimeWithExplicitRegion:
localizedStringForKey:value:table:
log:withMessage:
mapTableWithKeyOptions:valueOptions:
matchesContactHandle:
maxUIAddableModes
meDeviceName
meDeviceService:didReceiveMeDeviceState:
meDeviceStatus
mergeDecision:reason:
mergeWithRemoteModeConfiguration:
middleName
minimumBreakthroughUrgency
minusSet:
minute
mode
modeAssertionService:didReceiveModeAssertionInvalidation:
modeAssertionService:didUpdateActiveModeAssertion:
modeConfigurationForModeIdentifier:error:
modeConfigurationModifiedDate
modeConfigurationService:didReceiveAppConfigurationContextUpdateForModeIdentifier:
modeConfigurationService:didReceiveAvailableModesUpdate:
modeConfigurationsReturningError:
modeIdentifier
modeSelectionService:didReceiveAvailableModesUpdate:
modeSelectionService:didReceiveModesUpdate:
modeSelectionService:didReceiveUpdatedActiveModeAssertion:stateUpdate:
modesCanImpactAvailability
mutableCopy
mutableCopyWithZone:
name
nickName
normalizePhoneNumber:
normalizedPhoneNumbers
notifyAnyway
numberWithInt:
numberWithInteger:
numberWithUnsignedInteger:
objectAtIndexedSubscript:
objectForInfoDictionaryKey:
objectForKey:
objectForKeyedSubscript:
occurrenceDate
operatorType
organizationName
pairedFeatures
path
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
phoneCallBypassSettings
phoneCallBypassSettingsReturningError:
phoneNumbers
placeholder
placeholderModeFromMode:
platform
previousState
promotePlaceholderWithModeIdentifier:error:
promotedPlaceholderWithModeIdentifier:error:
protocolForProtocol:
publishCurrentStatusKitAvailabilityReturningError:
publishStatusKitAvailabilityWithRequestDetails:completionHandler:
queryCurrentStateWithCompletionHandler:
queryCurrentStateWithError:
queryMeDeviceStateWithRequestDetails:completionHandler:
queryStateForUpdateWithRequestDetails:completionHandler:
queryStateWithRequestDetails:completionHandler:
rawAction
rawCompatibilityVersion
reason
reasonOverride
redactedDescription
region
registerForAssertionUpdatesWithRequestDetails:completionHandler:
registerForGlobalConfigurationUpdatesWithRequestDetails:completionHandler:
registerForMeDeviceStateUpdatesWithRequestDetails:completionHandler:
registerForModeSelectionUpdatesWithRequestDetails:completionHandler:
registerForStateUpdatesWithRequestDetails:completionHandler:
relativePriority
remoteService:didChangeActiveModeAssertion:invalidation:
remoteService:didReceiveAppConfigurationContextUpdateForModeIdentifier:
remoteService:didReceiveDoNotDisturbStateUpdate:
remoteService:didReceiveUpdatedAvailableModeIdentifiers:
remoteService:didReceiveUpdatedAvailableModes:
remoteService:didReceiveUpdatedBehaviorSettings:
remoteService:didReceiveUpdatedMeDeviceState:
remoteService:didReceiveUpdatedModeIdentifiers:
remoteService:didReceiveUpdatedModes:
remoteService:didReceiveUpdatedPairSyncState:
remoteService:didReceiveUpdatedPhoneCallBypassSettings:
remoteService:didReceiveUpdatedPreventAutoReplySetting:
remoteService:didReceiveUpdatedScheduleSettings:
remoteTarget
removeAllowedContactMatchingContact:
removeAssertionUpdateListener:
removeAssertionUpdateListener:error:
removeDeniedContactMatchingContact:
removeEventListener:
removeExceptionForApplication:
removeExceptionForApplication:thread:
removeExceptionForApplicationIdentifier:
removeExceptionForApplicationIdentifier:thread:
removeExceptionForContact:
removeExceptionForContactType:
removeExceptionForWebApplicationIdentifier:
removeModeConfigurationForModeIdentifier:deletePlaceholder:error:
removeModeConfigurationForModeIdentifier:deletePlaceholder:withRequestDetails:completionHandler:
removeModeConfigurationForModeIdentifier:error:
removeObject:
removeObjectForKey:
removeSettingsUpdateListener:
removeSettingsUpdateListener:error:
removeStateUpdateListener:
removeStateUpdateListener:error:
repeatEventSourceBehaviorEnabledSetting
resolutionReason
resolveBehaviorForEventDetails:error:
resolveBehaviorForEventDetails:requestDetails:completionHandler:
resolvedCompatibilityVersion
respondsToSelector:
retain
retainCount
reverseAction
runtimeIsSupported:
scheduleEnabledSetting
scheduleIdentifier
self
semanticType
sender
senderConfiguration
senderConfigurationType
serial
serviceClass
serviceClass:relativePriority:
serviceForClientIdentifier:
setAction:
setActivationHandler:
setAllowedApplicationIdentifiers:
setAllowedApplications:
setAllowedContactGroups:
setAllowedContactTypes:
setAllowedContacts:
setAllowedThreads:
setAllowedWebApplicationIdentifiers:
setAppAction:forApplicationIdentifier:modeIdentifier:error:
setAppAction:forApplicationIdentifier:modeIdentifier:withRequestDetails:completionHandler:
setAppConfigurationAction:forApplicationIdentifier:modeIdentifier:error:
setAppConfigurationAction:forApplicationIdentifier:modeIdentifier:withRequestDetails:completionHandler:
setAppConfigurationPredicate:forActionIdentifier:forApplicationIdentifier:modeIdentifier:error:
setAppConfigurationPredicate:forActionIdentifier:forApplicationIdentifier:modeIdentifier:withRequestDetails:completionHandler:
setAppConfigurationTargetContentIdentifierPrefix:forActionIdentifier:forApplicationIdentifier:modeIdentifier:error:
setAppConfigurationTargetContentIdentifierPrefix:forActionIdentifier:forApplicationIdentifier:modeIdentifier:withRequestDetails:completionHandler:
setAppConfigurationTargetContentIdentifierPrefixesForModeIdentifier:
setApplicationConfigurationType:
setApplicationIdentifier:
setAutomaticallyGenerated:
setBedtimeBehaviorEnabledSetting:
setBehavior:
setBehaviorSettings:error:
setBehaviorSettings:returningError:
setBehaviorSettings:withRequestDetails:completionHandler:
setBundleIdentifier:
setCachedIconURL:
setClient:
setClientMessagingExpectation:
setCloudSyncPreferenceEnabled:error:
setCloudSyncPreferenceEnabled:withRequestDetails:completionHandler:
setCompatibilityVersion:
setConfiguration:
setConfiguration:forModeIdentifier:error:
setContactIdentifier:
setCreated:
setDeniedApplicationIdentifiers:
setDeniedApplications:
setDeniedContactGroups:
setDeniedContactTypes:
setDeniedContacts:
setDeniedThreads:
setDeniedWebApplicationIdentifiers:
setDimsLockScreen:
setEmailAddresses:
setEnabled:
setEncodedAction:
setEndTime:
setExceptionForApplication:
setExceptionForApplication:thread:
setExceptionForApplicationIdentifier:
setExceptionForApplicationIdentifier:thread:
setExceptionForContact:
setExceptionForContactGroup:
setExceptionForContactType:
setExceptionForWebApplicationIdentifier:
setExceptionOfType:forApplication:
setExceptionOfType:forApplication:thread:
setExceptionOfType:forApplicationIdentifier:
setExceptionOfType:forApplicationIdentifier:thread:
setExceptionOfType:forContact:
setExceptionOfType:forContactGroup:
setExceptionOfType:forContactType:
setFilterCriteria:
setFirstName:
setFocusConfigurationStreamEventHandler:
setHideApplicationBadges:
setHour:
setIdentifier:
setImmediateBypassCNGroupIdentifier:
setImmediateBypassEventSourceType:
setImpactsAvailability:
setInterface:
setInterfaceTarget:
setInterruptionBehavior:
setInterruptionHandler:
setInvalidationHandler:
setLastModified:
setLastModifiedByDeviceID:
setLastModifiedByVersion:
setLastName:
setLifetime:
setMiddleName:
setMinimumBreakthroughUrgency:
setMinimumBreakthroughUrgency:forApplication:
setMinimumBreakthroughUrgency:forApplicationIdentifier:
setMinute:
setMode:
setModeConfiguration:error:
setModeConfiguration:withRequestDetails:completionHandler:
setModeConfigurationModifiedDate:
setModeIdentifier:
setModesCanImpactAvailability:error:
setModesCanImpactAvailability:withRequestDetails:completionHandler:
setName:
setNickName:
setNotifyAnyway:
setObject:forKey:
setObject:forKeyedSubscript:
setOrganizationName:
setOverrideModeIdentifier:
setPairSyncPreferenceEnabled:error:
setPairSyncPreferenceEnabled:withRequestDetails:completionHandler:
setPhoneCallBypassSettings:
setPhoneCallBypassSettings:error:
setPhoneCallBypassSettings:returningError:
setPhoneNumbers:
setPreventAutoReply:error:
setPreventAutoReply:withRequestDetails:completionHandler:
setRawAction:
setReason:
setRepeatEventSourceBehaviorEnabledSetting:
setReverseAction:
setScheduleEnabledSetting:
setScheduleSettings:error:
setScheduleSettings:returningError:
setScheduleSettings:withRequestDetails:completionHandler:
setScreenIsShared:screenIsMirrored:error:
setScreenIsShared:screenIsMirrored:withRequestDetails:completionHandler:
setSecond:
setSender:
setSenderConfiguration:
setSenderConfigurationType:
setServer:
setServiceQuality:
setShouldAlwaysInterrupt:
setSource:
setStartTime:
setStoreIconURL:
setSuppressionType:
setSymbolImageName:
setSystemAction:forModeIdentifier:error:
setSystemAction:forModeIdentifier:withRequestDetails:completionHandler:
setSystemConfigurationAction:modeIdentifier:error:
setSystemConfigurationAction:modeIdentifier:withRequestDetails:completionHandler:
setThreadIdentifier:
setTimePeriod:
setTintColorName:
setTriggers:
setType:
setUrgency:
setUserVisibleEndDate:
setValue:
setWeekdays:
setWithArray:
setWithCapacity:
settingsService:didReceiveUpdatedBehaviorSettings:
settingsService:didReceiveUpdatedPhoneCallBypassSettings:
settingsService:didReceiveUpdatedScheduleSettings:
settingsURL
setupURL
sharedInstance
shortDescription
shouldAlwaysInterrupt
signalAppConfigurationContextUpdateForModeIdentifier:
silencedModesForContactHandle:error:
source
startDate
startTime
state
stateService:didReceiveDoNotDisturbStateUpdate:
storeIconURL
string
stringByPaddingToLength:withString:startingAtIndex:
stringValue
stringWithFormat:
subscribeToFocusConfigurationStreamWithIdentifier:
superclass
supportedConfiguration
supportsSecureCoding
suppressionState
symbol
syncModeConfigurationsReturningError:
syncModeConfigurationsWithRequestDetails:completionHandler:
takeModeAssertionWithDetails:error:
takeModeAssertionWithDetails:requestDetails:completionHandler:
threadConfigurationType
threadIdentifier
threadsWithExceptions
timePeriod
timestamp
tintColorName
triggerWithClientTrigger:creationDate:
triggers
type
unarchiveActionFromData:error:
unarchivedObjectOfClass:fromData:error:
unsignedIntegerValue
unsubscribeFromFocusConfigurationStreamWithIdentifier:
userInitiated
userRequested
userRequestedAssertionDetailsWithIdentifier:modeIdentifier:lifetime:
userVisibleEndDate
userVisibleTransitionDate
userVisibleTransitionLifetimeType
validatePredicate:compileTimeIssues:runTimeIssues:
value
visibility
visitPredicateExpression:
visitPredicateExpression:keyPathScope:key:
visitPredicateOperator:
webApplicationsWithExceptions
webIdentifier
weekdays
willSuppressInterruptions
zone
@16@0:8
B16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8Q16Q24
Q16@0:8
B24@0:8@16
v24@0:8Q16
v16@0:8
B32@0:8B16B20^@24
@"NSObject<OS_dispatch_queue>"
@"NSString"
@40@0:8Q16B24Q28B36
v40@0:8@16@24@32
v24@0:8@"NSPredicate"16
v24@0:8@"NSExpression"16
v24@0:8@"NSPredicateOperator"16
v40@0:8@"NSExpression"16@"NSString"24@"NSString"32
B40@0:8@16^@24^@32
@72@0:8@16@24@32@40@48@56@64
@20@0:8B16
@"NSMutableSet"
@"DNDBypassSettings"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v32@0:8@16Q24
v28@0:8@16B24
v32@0:8@"DNDRemoteServiceConnection"16@"DNDStateUpdate"24
v40@0:8@"DNDRemoteServiceConnection"16@"DNDModeAssertion"24@"DNDModeAssertionInvalidation"32
v32@0:8@"DNDRemoteServiceConnection"16@"DNDBehaviorSettings"24
v32@0:8@"DNDRemoteServiceConnection"16@"DNDScheduleSettings"24
v32@0:8@"DNDRemoteServiceConnection"16Q24
v32@0:8@"DNDRemoteServiceConnection"16@"DNDBypassSettings"24
v28@0:8@"DNDRemoteServiceConnection"16B24
v40@0:8@"DNDRemoteServiceConnection"16@"DNDModeAssertion"24@"DNDStateUpdate"32
v32@0:8@"DNDRemoteServiceConnection"16@"NSArray"24
v32@0:8@"DNDRemoteServiceConnection"16@"NSString"24
v32@0:8@"DNDRemoteServiceConnection"16@"DNDMeDeviceState"24
v24@0:8@?16
v32@0:8@16@?24
@"NSHashTable"
@24@0:8Q16
@104@0:8Q16@24@32@40@48@56Q64Q72q80Q88Q96
Q24@0:8@16
Q32@0:8@16@24
q16@0:8
@"NSMutableDictionary"
@"DNDMutableSenderConfiguration"
v24@0:8q16
v32@0:8Q16@24
v40@0:8Q16@24@32
v32@0:8Q16Q24
@48@0:8@16@24@32@40
@"NSUUID"
@"NSDate"
@"DNDModeAssertionDetails"
@"DNDModeAssertionSource"
@32@0:8Q16@24
@"NSMutableArray"
@"NSDateInterval"
B24@0:8^@16
@28@0:8@16B24
@44@0:8@16@24@32B40
@52@0:8@16@24@32@40B48
v20@0:8B16
@"LNAction"
@"NSData"
@56@0:8q16@24@32@40@48
@"DNDApplicationIdentifier"
@"NSURL"
@40@0:8@16@24Q32
@"DNDScheduleTime"
@32@0:8@16Q24
@64@0:8@16@24@32@40Q48Q56
@"DNDModeAssertion"
@"DNDModeAssertionInvalidationDetails"
@56@0:8@16@24Q32q40q48
@"DNDState"
@56@0:8Q16Q24{?=qqq}32
{?=qqq}16@0:8
{?="majorVersion"q"minorVersion"q"patchVersion"q}
@24@0:8d16
@32@0:8@16@24
@36@0:8@16@24B32
@40@0:8Q16@24@32
@"WFToggleSettingContextualAction"
@"WFReverseContextualAction"
@56@0:8@16@24@32@40q48
@72@0:8@16@24@32@40q48Q56@64
B32@0:8^B16^@24
@32@0:8q16^@24
B32@0:8@16^@24
@24@0:8^@16
@32@0:8@16^@24
B56@0:8@16@24@32@40^@48
@48@0:8@16@24@32^@40
B48@0:8@16@24@32^@40
B40@0:8@16@24^@32
B28@0:8B16^@20
B36@0:8@16B24^@28
Q24@0:8q16
@40@0:8@16@24^@32
@"CLCircularRegion"
@"DNDScheduleTimePeriod"
@80@0:8@16@24@32@40@48@56@64@72
@"NSSet"
@48@0:8@16Q24Q32@40
@"DNDClientEventDetails"
@64@0:8Q16@24@32@40Q48@56
@"NSArray"
@"DNDModeConfiguration"
@40@0:8Q16@24Q32
@84@0:8@16@24Q32Q40@48@56@64B72Q76
@"DNDContactHandle"
v24@0:8r*16
v32@0:8@?16r*24
v32@0:8r*16r*24
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSNumber"@"NSError">24
@"BSServiceConnection"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"BSServiceQuality"
v40@0:8@"<DNDDiffBuilding>"16@"DNDDiffBuilder"24@"NSString"32
@40@0:8@16@24@32
@116@0:8@16@24@32Q40Q48@56@64B72q76{?=qqq}84@108
q24@0:8@16
@"DNDMode"
@"DNDConfiguration"
v40@0:8{?=qqq}16
@48@0:8@16@24@32Q40
@64@0:8@16@24@32@40Q48@56
@"DNDModeAssertionLifetime"
@40@0:8@16Q24^@32
{atomic_flag="_Value"AB}
@40@0:8@16Q24@32
@"DNDModeConfigurationService"
Q24@0:8^@16
@24@0:8q16
@56@0:8@16@24Q32@40@48
@"NSDictionary"
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSNumber"@"DNDModeAssertion"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSNumber"@"DNDMeDeviceState"@"NSError">24
Vv40@0:8@16@24@32
Vv40@0:8@"DNDModeAssertion"16@"DNDModeAssertionInvalidation"24@"NSArray<__NSString__>"32
Vv24@0:8@16
Vv24@0:8@"DNDStateUpdate"16
Vv24@0:8@"DNDBehaviorSettings"16
Vv24@0:8@"DNDScheduleSettings"16
Vv40@0:8@"DNDModeAssertion"16@"DNDStateUpdate"24@"NSArray<__NSString__>"32
Vv24@0:8@"NSArray<__DNDMode__>"16
Vv24@0:8@"NSString"16
Vv24@0:8@"NSNumber"16
Vv24@0:8@"DNDBypassSettings"16
Vv24@0:8@"DNDMeDeviceState"16
v40@0:8@16@24@?32
v40@0:8@"DNDClientEventDetails"16@"DNDRequestDetails"24@?<v@?@"DNDClientEventBehavior"@"NSError">32
v48@0:8@16@24@32@?40
v40@0:8@"DNDModeAssertionDetails"16@"DNDRequestDetails"24@?<v@?@"DNDModeAssertion"@"NSError">32
v48@0:8@"DNDModeAssertionInvalidationDetails"16@"NSNumber"24@"DNDRequestDetails"32@?<v@?@"DNDModeAssertionInvalidation"@"NSError">40
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDModeAssertion"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDModeAssertionInvalidation"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSArray<__DNDModeAssertion__>"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDState"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDBehaviorSettings"@"NSError">24
v40@0:8@"DNDBehaviorSettings"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDScheduleSettings"@"NSError">24
v40@0:8@"DNDScheduleSettings"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v40@0:8@"DNDModeConfiguration"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v48@0:8@"NSString"16@"NSNumber"24@"DNDRequestDetails"32@?<v@?@"NSNumber"@"NSError">40
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSArray<__DNDModeConfiguration__>"@"NSError">24
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"DNDModeConfiguration"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSArray<__DNDMode__>"@"NSError">24
v40@0:8@"DNDContactHandle"16@"DNDRequestDetails"24@?<v@?@"NSArray<__NSString__>"@"NSError">32
v40@0:8@"DNDContactHandle"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"DNDModeAssertionDetails"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v40@0:8@"NSUUID"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
Vv40@0:8@16@24@?32
v40@0:8@"NSNumber"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSDictionary"@"NSError">24
Vv40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDAccountFeatureSupport"@"NSError">24
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"DNDAppInfo"@"NSError">32
v40@0:8@"NSArray<__NSString__>"16@"DNDRequestDetails"24@?<v@?@"NSArray<__DNDAppInfo__>"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDMeDeviceState"@"NSError">24
v48@0:8@"NSNumber"16@"NSNumber"24@"DNDRequestDetails"32@?<v@?@"NSNumber"@"NSError">40
v64@0:8@16@24@32@40@48@?56
v56@0:8@16@24@32@40@?48
v64@0:8@"NSPredicate"16@"NSString"24@"DNDApplicationIdentifier"32@"NSString"40@"DNDRequestDetails"48@?<v@?@"NSNumber"@"NSError">56
v56@0:8@"NSString"16@"DNDApplicationIdentifier"24@"NSString"32@"DNDRequestDetails"40@?<v@?@"NSPredicate"@"NSError">48
v64@0:8@"NSString"16@"NSString"24@"DNDApplicationIdentifier"32@"NSString"40@"DNDRequestDetails"48@?<v@?@"NSNumber"@"NSError">56
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"DNDAppConfigurationTargetContentIdentifierPrefixesBox"@"NSError">32
v56@0:8@"DNDAppAction"16@"DNDApplicationIdentifier"24@"NSString"32@"DNDRequestDetails"40@?<v@?@"NSNumber"@"NSError">48
v56@0:8@"NSString"16@"DNDApplicationIdentifier"24@"NSString"32@"DNDRequestDetails"40@?<v@?@"NSNumber"@"NSError">48
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"DNDAppActionsBox"@"NSError">32
v48@0:8@"DNDSystemAction"16@"NSString"24@"DNDRequestDetails"32@?<v@?@"NSNumber"@"NSError">40
v48@0:8@"NSString"16@"NSString"24@"DNDRequestDetails"32@?<v@?@"NSNumber"@"NSError">40
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"NSArray<__DNDSystemAction__>"@"NSError">32
@"DNDGlobalConfigurationService"
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"LNAction"@"NSError">32
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
