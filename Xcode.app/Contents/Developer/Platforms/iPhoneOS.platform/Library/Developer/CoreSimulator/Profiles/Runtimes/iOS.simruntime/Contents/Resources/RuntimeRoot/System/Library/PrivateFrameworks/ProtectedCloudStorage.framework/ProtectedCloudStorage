@(#)PROGRAM:ProtectedCloudStorage  PROJECT:ProtectedCloudStorage-797.60.2.112.1
?456789:;<=
 !"#$%&'()*+,-./0123
fingerprint
PCSForwardMasterCertification
PCSPEMReader
v8@?0
<PCSPEMReader@%p>
-----BEGIN 
-----
-----END 
%d %d %d
PCSEventGetRollEpoch
PCSEventKeyRollStateChange
PCSEventTestKeyRollStateChange
PCSEventKeyRollOperation
PCSEventMobileRestore
PCSEventMBValidate
PCSEventKeyCreation
PCSEventPushNotificationReceived
PCSEventItemAddedToOutgoingQueue
recoverableError
errorDomain
errorCode
%@/com.apple.ProtectedCloudStorage
PCSAnalytics.db
last_success_%@
EscrowRecordID
AKS not available
keyRoll
PCSNextTTRDate
com.apple.ProtectedCloudStorage
Tap-To-Radar
Go away
tap-to-radar://new?Reproducibilty=Always&Title=LocalBackup%%20IdentityMissing&ComponentName=ProtectedCloudStorage&ComponentVersion=all&Reproducibility=Not%%20Applicable&ComponentID=574585&Classification=Crash/Hang/Data%%20Loss&Description=%@
v24@?0@"NSDictionary"8@"NSError"16
LSApplicationWorkspace
Unable to find class %s
/System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
/System/Library/Frameworks/MobileCoreServices.framework/Contents/MacOS/MobileCoreServices
%@ %@
encryptionPrivateKey
signingPrivateKey
PCSShareProtectionObject no longer alive (overrelease):(sp)->alive == pcsfpTruelyAlive
wrapped data too small
can't unwrap object w/o masterkey
Failed to find master key of id %@
PCSFPCopyUnwrappedKey
PCSEncryption.c
obytes == (size_t)CFDataGetLength(unwrappedKey)
auth decrypt failed (%d)
PCSFPCopyWrappedKey
obytes == (size_t)CFDataGetLength(wrappedKey)
wrap failed (%d)
EncryptedData sp argument NULL
EncryptedData plaintext argument not CFData
can't encrypt object w/o masterkey
DecryptedData sp argument NULL
DecryptedData cryptotext argument not CFData
can't decrypt object w/o masterkey
TruncatedKeyID is not data
Crypto text too short
Unsupported crypto data version: %u
Crypto text too short for header
Version 0 encrypted data only support on internal releases
Tag doesn't verify: keyid: 0x%02x%02x
Tag doesn't verify: version %d
Failure with no CFError, made this one up.
Library/Logs
-Sim
ProtectedCloudStorage%@.log
PCSLogContext
general
%ld - %s
<PCSLogContext: %@>
logging
SecureBackupPassphrase
SecureBackupMetadata
SecureBackupStingrayMetadata
ClientMetadata
SecureBackupAuthenticationAppleID
SecureBackupAuthenticationPassword
SecureBackupStingrayMetadataHash
SecureBackupAuthenticationAuthToken
SecureBackupAuthenticationEscrowProxyURL
SecureBackupAuthenticationDSID
SecureBackupEnabled
SecureBackupiCloudIdentityData
SecureBackupiCloudIdentityPublicData
SecureBackupiCloudDataProtection
SecureBackupStableMetadata
EscrowKey
LooseLeaves
SecureBackupKeyRegistry
PublicIdentities
SecureBackupTriggerUpdate
SecureBackupClientVersion
SecureBackupiCloudIdentityPCSKeys
SecureBackupContainsiCloudIdentity
SecureBackupAuthenticationiCloudEnvironment
CloudServicesErrorDomain
SecureBackupErrorDomain
SecureBackupGetAccountInfoWithInfo
SecureBackupEnableWithInfo
SecureBackupRecoverWithInfo
SecureBackupDisableWithInfo
SecureBackupUpdateMetadataWithInfo
IUseiCloudKeychain
v24@?0^{__CFDictionary=}8^{__CFError=}16
v16@?0^{__CFError=}8
SecureBackup didn't return data key
symbol %s is missing
/System/Library/PrivateFrameworks/CloudServices.framework/CloudServices
SecureBackupExcludeiCDPRecords
SecureBackup didn't return identity nor error
internal asn1 error
MasterKey
Photos
iCloudDrive
CloudKit
Escrow
Maildrop
Backup
Notes
iMessage
News
Sharing
KeyboardServices
Activities
Gaming
BulkMail
BTPairing
BTAnnouncement
TTYCallHistory
Continuity
Safari
CloudKitApple
com.apple.textinput.KeyboardServices.Secure
com.apple.routined
com.apple.health.sync
com.apple.siri.profile
com.apple.siri.knowledge
com.apple.knowledgestore
com.apple.wallet.paymentservices
com.apple.news.private.secure
BluetoothCloudPairing
MessagesDevelopment
Messages
IDServicesEngram
CoreSuggestionsPseudoEvents
AccessibilityVOPronunciation
AccountData
MapsSync
Messages2
Messages3
com.apple.textinput.KeyboardServices.Secure2
com.apple.routined2
com.apple.health.sync2
com.apple.siri.profile2
com.apple.siri.knowledge2
com.apple.knowledgestore2
com.apple.wallet.paymentservices2
com.apple.news.private.secure2
BluetoothCloudPairing2
CoreSuggestionsPseudoEvents2
AccessibilityVOPronunciation2
AccessibilityVOPronunciation3
kPCSCoreIDVServiceMessages
Rawhide
ManateeSharingTesting
pendingRollEpoch
com.apple.protectedcloudstorage.protectedcloudkeysyncing
com.apple.ProtectedCloudStorage.HaveCredentials
com.apple.ProtectedCloudStorage.RemovedCredentials
PCS PRIVATE IDENTITY COLLECTION
PCS BACKUP METADATA
RAW ProtectedCloudStorage
PCS OBJECT ENCRYPTED DATA
PCS OBJECT WRAPPED KEY
PCS SHARE PROTECTION
PCS ZONE SHARE PROTECTION
RAW EC KEY
RAW COMPACT EC KEY
Compact
PCSKey
PCSIdentity
invalid-Circle-FingerPrint
old-identity2
%Y%m%d%H%M%S
%s;%s
PCSPublicIdentity
PCSAbort: %s
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
-----BEGIN %@-----
%@-----END %@-----
Unsupported signature type: %d
decode PCSPrivateKey
unsupported keytype: %d
decode PCSPrivateKeyV2
SyntheticManateeSharing
PCSPublicKeyInfo
failed to export full key
PCSIdentityCopyExternalForm: identity missing
PCSIdentityCopyExternalForm_block_invoke
CloudIdentity.m
n < count
v24@?0r^v8r^v16
PCSIdentityCopyExternalForm
n == count
PCSKeySet encode error: %d
Invalid format: %d
failed to decode PCSKeySet: %d
Master key is missing
Key: %d %@ - %@ (priv key size %d)
WARNING: key is duplicated
PCSKeySet not the full buffer
Name: %s
Checksum: %@
ksID: %@
Keys %u:
Key bag:
Current keys:
keys service: %d data: %@
unepexcted service 0
expected service not found service %d
unexpected service 0
current service found %u of service %d
No Identity Set Specified
No Service Specified
Identity not a full identity
Identity not a compact identity
failed to get public identity:keydata != NULL
failed to allocate keydata:_PCSFillOctetString(&data->keyData, keydata)
no such keyid: %@
unknown service key: %@
PCSPublicIdentityGetService
PCSPublicIdentityGetTypeID() == CFGetTypeID(si)
Signing of service key failed
Verification failed, ret=%d, %svalid
identity has no signing identity
Failed to encode PCSPrivateKeyProtoBuf
failed to create PCSManateeShareableIdentity data
v24@?0@"NSData"8@"NSError"16
%@-%@
love
<unnamed>
Bladerunner
Hyperion
Liverpool
PianoMover
BMycS1yGRBKGgm7GQ4xH95cndQlxM85ooVjHUSEWqm9qLHwNzyX4OnRFVlAoZMSbwKlGRubuRTsR8EKAA6pKDTo=
BEimGALiM/yaHq70FByLCKBsBa07Mt5Chak59oNEaCzsr0UkEAYWs8gMP9J0NPR/ouXyQv7ySGBp8PUCwnnqWNM=
BMtvr/FlG7I5MKd0vB0rWoT4kjvDOJGnQbaJTiAoN46rCGpoHmy+F0ZFGsD2wVhal94Q6uhY1DrHpRPqQtAMnoA=
BCurbEH3EvpdME9ee6hAJRlDMByVJmVEP04AJ1pEdruyrZsTdzLl/n7NcV7JDc9F6FjK5zi8/hDBsjgxjoQPf+o=
BO1/IAgUe8VsvwOnlJHWY5yTCMixxpf4MOGoWYxm4dqUNNTVc8NKrKayvkXpWh+FPLQ3vCqWU1vOM99DQZjPsAo=
BPjOHhdoQ2WTLzy7I424pgH63+zhroOSWKCC6ze6xfmNxk1XbOzVn9A/xFw6tVniFy1Iy6ayt7u6qXkX5VB01G8=
BGgEEH/Fx+iMlWKEGIX1FY8fOO7gDb5S/dE76KJKPA5ZXghQA9IZ6IlCi5OlRm54v/t+ifHvk6ARdSgb2ZEzcZ4=
kPCSSetupEnvionment
kPCSSetupStingray
kPCSSetupForceNewIdentity
kPCSSetupUsername
kPCSSetupRecoverMode
kPCSSetupKeychain
kPCSSetupPassword
kPCSSetupTimeout
kPCSSetupAuthToken
kPCSSetupEscrowURL
kPCSSetupForceValidateKey
kPCSSetupDontImportManatee
kPCSSetupForceLogging
kPCSSetupStingrayLargeDataSupport
kPCSSetupStingrayUpdateSupport
kPCSSetupPreferLocalKeyPreference
kPCSSetupForceUpdate
kPCSSetupStatistics
kPCSSetupInitialSyncState
kPCSSetupHSMContent
kPCSSetupHSMMetaData
kPCSSetupService
kPCSSetupRollIdentity
kPCSSetupRegistryCleanup
kPCSSetupMTTCallback
SyncTimeout
SyncTimeoutNotInCircle
SyncComplete
SyncSecureBackup
kPCSSetupDSID
kPCSSetupDSIDAny
kPCSSetupiCloudEnvironment
kPCSSetupLogFacility
kPCSSetupLogContext
kPCSSetupLimitToServices
kPCSSetupDisableiCDP
kPCSSetupReadwriteKeyset
kPCSSetupICSC
kPCSSetupDeviceIdentifier
kPCSSetupMetadata
kPCSSetupBoundaryNoCreate
kPCSMetadataiCDPArmed
kPCSMetadataiCDP
kPCSMetadataiCDPWalrus
kPCSMetadataiCDPDrop
kPCSMetadataFDEBackup
kPCSMetadataBackupEscrow
kPCSMetadataEscrowedKeys
Destroy
Failed to copy FDE identity
Failed to copy public FDE identity
no key to sign with
Failed encoding signature: %d
Failed to decode signature: %d
Can't find signature for signer: %@
v16@?0r^v8
input data to key wrapping missing
wrap failed with %d
unwrap failed with %d
<PCSKey@%p keyid: %@>
raw-identity
old-identity
service
invalid-BAT
name: 
pubkey
<PCSIdentity %@%@ pubkey: %@ service: %@ BAT: %@ %@>
<PCSPublicIdentity@%p pubkey: %@ (%@) service: %d%s>
 div
_PCSKeyAllocateDiversizedKey
key->flags.diversified
Key size %zd unsupported
Failed to import compact public key
Failed to import public key
SetKeyID
key->keyid == NULL
failed to deserialize PCSManateeShareableIdentity
missing encryption key
missing signing key
unexpected choice type for PCSPrivateKeyV2: %d
diversify
checksum wrong length %d
checksum wrong
0123456789abcdef
WARNING: public key and private does doesn't agree on what the public key is
WARNING: public key is not a public key
WARNING: key data is not a public key
WARNING: public keys are of different compact-ness
WARNING: public keys are of differnt N
GOOD: public keys have same X, will probably work anyway
ERROR: public keys are just different, all is lost
ERROR: failed to wrap with private key
ERROR: failed to unwrap with private key
Failed to parse the exported public key
Failed to parse the PKI from the public key
Different compactness
Different n of the keys
Different X between the keys, all is lost
Service ID 0 not acceptable
No such service identity %lu
ManateeFlags
Failed to decode PCSUserPublicKeys: %d
Missing signature
Diversified keys not support for verification: %@
Unsupported signer: %@ (ID: %lu)
Non-master key default signnature not allowed
Couldn't get public identity for %@
self asserted signature missing
Self signed attributes encode failure: %d
addNameService
serviceID
serv
addPublicNameService
UNKNOWN-BUILD
Can't find the public key of the signer
Unsupported signer: %@)
Unsupported length of signerID
signerID doesn't match
CreateIdentityOperation service: %@
Starting: %s
-[PCSCKKSCreateIdentityOperation start]
Have an identity and no need to create a new
Server denied keyrolling until %@
Server wants service %@ to keyroll next time at %@
PCSStoreIdentity
Failed to get attributes from %@
PCSAddIdentitySyncQueue
ckks
Timed out waiting for add to complete: %@
timeout waiting SecItemAdd for service: %@
Store manatee and sync, but didn't get a pref/sha1
Stored identity with pref: %@
Failed to push service %@ to CKKS: %@
Failed but no error on addandnotifyonsync: %@
v20@?0B8^{__CFError=}12
Item already in keychain, find it so we can set it to current
Failed  get view hint from identity %@
Set current: %@
Failed to find manatee identity %@: %d
Failed to find in local keychain: %@
Failed to find %@ from local keychain: %@
Setting already stored identity %@ with pref %@ to current
Failed to store manatee identity %@ with error: %d
Failed to store service %@ to local keychain: %@
Failed to store manatee identity %@, operation timed out
Failed to store service %@ to CKKS: %@
Saving identity %@ to keychain
No view hint for %@
CKKSSetCurrentIdentity
Could not get ProtectedCloudKeyStorage defaults
ProtectedCloudStorage
PCSDataProtectionSetting
ProtectedCloudStoragePublic
PCSServiceiCloudKeychainSyncing
PCSServiceBackup
PCSiCloudServiceMarkerName
kPCSCircleMarkerName
kPCSPlesioMarkerName
kPCSPlesioMarkerNewName
default
PCSBoundaryKey
com.apple.ProtectedCloudStorage.backup
com.apple.PublicCloudStorage
iCDPUseStingray
iCDPEnabled
PCS-MasterKey
fetch
The item we where looking for %@ was not found, instead we found %@
SecItem failed to delete on private identity
SecItem failed to delete on public identity
SecItem failed to delete iCDP %@ domain
SecItem failed to %@ %@
Failed to update: %@: item: %@ query: %@
fetchRecordZoneChanges
lastfetchRecordZoneChangesAtStart
pushNotifications
zoneReset
recordFetch
recordModify
never
%Y-%m-%d-%H:%M:%S
UserRegistryStats:
fetchRecordZoneChanges: %lld
lastfetchRecordZoneChangesAtStart: %s
pushNotifications: %lld
zoneReset: %lld
recordFetch: %lld
recordModify: %lld
fetch_record_zone_changes
last_fetch_record_zone_changes_at_start
push_notifications
zone_reset
record_fetch
record_modify
kPCSFPService
kPCSFPIdentity
kPCSFPSigningIdentity
kPCSFPIdentitySet
kPCSFPZoneObject
kPCSFPObjectKind
v1.5
v2.0
light
unspec
pppcs
invite
zone
record
PCSErrorObjectIdentities
PCSErrorSetIdentities
PCSShareProtection
ShareEntry
Derivation to sizes larger than %d not supported (%d requested)
Masterkey: %@
Masterkey: ---- NO MASTERKEY available----
MasterkeyID: %@
Validated: %@
ReadWrite: %@
Expose zone key: %@
Version2: %@
Light: %@
PCS keys %d: %@
Share peer %d: %@ (%@) flags: %d
is CloudKit Public Identity
old master key %d: %@
old master key ID %d: %@
public identity %d: %@ (%@)%s
Top Level Service ID: %u
Validation identity: %@
Owner identity: %@
cannot sign or request PPPCS signature without a public identity
can't export object w/o masterkey
share is readonly for unwrapping identity
Failed to get anonymous wrapped key:wrappedKey != NULL
Failed to get wrapped key: %@
failed to fill PCSSPKey:_PCSPublicIdentityExportPCSSPKey(se->identity, &share.tbs.shareList.val[n].key)
failed to randomly fill PCSSPKey:_PCSExportRandomPCSSPKey(&share.tbs.shareList.val[n].key)
Failed allocate flags
failed to allocate wrappedMaster:FillOctetString(&share.tbs.shareList.val[n].wrappedMaster, wrappedKey)
_PCSFPCopyExportedWithOptions_block_invoke
PCSShareProtection.m
wrong number of PublicKeys:n == count
_PCSFPCopyExportedWithOptions
cannot request PPPCS signature without a public identity
failed to fill manatee sharee PCSSPKey:_PCSPublicIdentityExportPCSSPKey(shareeSignatureIdentity, &expectedPublicKey)
failed to fill ownerIdentity PCSSPKey:_PCSPublicIdentityExportPCSSPKey(sp->ownerIdentity, &ownerPublicKey)
version 2 but read only:!sp->flags.readonly
no ObjectKey, yet version2:getObjectKey(sp)
no ObjectKey, yet public keys:getObjectKey(sp)
can't do authorship w/o selfSign
can't do pppcs signing without a signing key
encode PCSSignature
PCSFPCreateWithExported need an identity
decode PCSShareProtection
decode PCSObjectSignature
DerivedDataFromMasterKey
PCSShareProtection %p have a NULL master key
PCSShareProtection %p have a NULL oldMasterKeys
Share is a readonly share
Share is rolled w/o export
Share master key rolled too much
read write master key NULL in version 2 key:sp->readwriteMasterKey
read write master key not NULL in version 1 key:sp->readwriteMasterKey == NULL
fpkeyRoll
Failed to deserialize PCSManateeShareInvitation
missing signing identity
<no-masterkey>
<PCSShareProtection@%p: [ MasterKey ID: %@ PCSKey: %@ PCSPublic: %@ validated: %@ version2: %@ light: %@ readwrite: %@] >
<ShareEntry: %p: identity %@ flags: 0x%08x>
getting other key when not version2 ?:sp->version == VERSION2
getting other key when not version2 ?:!sp->flags.rolled
unknown type in array
Not a light object
EagleDance
_CreateLightPCSObject
obytes == wrappedKeySize
More then one share object
PCSSignatureKeyIDEncryption
full master key
unexpected version:sp->version == VERSION2 || sp->version == VERSION1_5
no object key:objectKey
PCSShareProtection missing signing identity; cannot generate pppcs signature
PCSSignatureEncryption
diversified keys needs a non empty set
decode PCSEncryptedKeys
PCSShareProtectionObject no longer alive (overrelease):(spret)->alive == pcsfpTruelyAlive
light-object
PCS object didn't contain any of the identities [%@], it contained [%@]
%@, 
Signature of wrong length
No verification key
self sign but not version 1.5 or 2:sp->version == VERSION2 || sp->version == VERSION1_5
Author signature supposed to exists, it doesn't
decode PCSSPKey
identity missing:sp->identity
Couldn't find validation identity.
require pppcs signature, but no unsigned attributes are present
decode PCSSignature
did not find pppcs signature for key: %@
Author signature exists, but no self signature
Author signature required for service: %d
HMAC doesn't match
decode PCSObjectChaining
decode PCSSPKeyList
encode PCSObjectChaining
encode PCSSPKeyList
copy PCSSPKeyList
old master key length incorrect:n == ids.len
asn1 encoding failure:data.length == length
RO object can't upgrade key
Light object can't upgrade key
Rolling not required, refusing to roll
Wrap identity not known
Wrap identity service type is not known
Failed to get rolling identity
Asked to roll, but we're already using that service identity
fprollKeys
PCSFPCreateWithExportedManateeSharingInvitation need an identity
Identity rolling disabled
v24@?0^{_PCSIdentityData=}8@"NSError"16
v48@?0I8^{__CFString=}12B20B24i28^{__CFString=}32^{__CFString=}40
EnsurePCSFields service: %@
com.apple.private.ckks.plaintextfields
-[PCSCKKSEnsurePCSFieldsOperation start]
EnsurePCSAttributes
Updated identity %@ with CKKS attributes: status: %d
Could not build CKKS attributes for %@
Get PCS DataProtection settings
Failed to get kPCSDataProtectionSetting
Failed to update setting
SyncViewOperation service: %@
-[PCSCKKSSyncViewOperation start]
v16@?0Q8
CKKSSyncView
Syncing CKKS view %@ failed with: %@
Syncing CKKS view %@ successful
v16@?0@"NSError"8
lockassertion
 though piggyback
Memory
Manatee is not available
Cannot retrieve the current identity for %@ while a keyroll is pending
PCSIdentityCopyExternalForm: Identity missing
PCSIdentityCopyExternalForm: data missing
PCSKeySet decode error: %d
PCSIdentitySet
DSID not a string
PCS %@ - %@
Options parameter missing
cloudd
<PCSIdentitySet:%p>
service %@ not found
service missing
Identity of service type %@ missing in memory keyset
Memory set readonly
Memory is not for iCDP
Memory is not for Plesio
Memory sets do not support Walrus
Memory is not for circle state
Keychain
Failed to find identity %@ in keychain: %d
No CKKS on multiuser device
KeychainCopyCurrentIdentity
Identity missing CKKS attributes: %@
v24@?0^{__CFData=}8^{__CFError=}16
Manatee identity timed out fetching from local store
Failed finding service %@
return data not array
SecItemAdd
Failed to remove current on attributes
Failed to mark %@ as current
v12@?0i8
Marker (%@) return unexpected error code: %d
Failed getting iCDP data
Entry in iCDP not iCDP!
PCS iCloud Data Protection
Failed to update: %@
Failed to add: %@
Failed to delete: %@
OctagonTrust not available
Walrus setting not consistent
Keychain can't be copied
<<VALUE>>
PCSMigrationState
messages
/var/mobile/Library/Application Support/com.apple.ProtectedCloudStorage/Backup
SynchronizeKeys
MigrateiCDP
CloseDoor
MigrateHSM
MigrateDropHSM
MigrateRestoreHSM
SetupIdentities
LegacySetupIdentities
Missing options
Missing kPCSSetupInitialSyncState
CheckInitialSync
needPassword param missing
ValidateCredentials
PCS skipping validation failure since error is network issue: %@
No local backup on this platform
MigrateRestoreHSMBackup
iCDPSignOut missing DSID
RecoveryFDE
<PCSMigrationState: %p>
%@/%@-%@.%@
LogStatus
PreCheckKeychain
FetchMetaData
PrepareMetaData
CheckForceUpdate
DifferentOnDroppedKeys
EnsureClassicContent
ExtractKey
SynchronizeiCDP
OverrideiCDP
SynchronizeWithLocalstore
ValidateRegistry
AddMissing
ValidateLooseLeaves
StoreHSM
StoreLocal
StoreiCDPState
TriggerSecureBackup
AddMissingCurrentPointers
Master identity: %@
Failed getting master key: %@
Failed getting iCDPState: %@
Local iCDP status is %d
No local credential store: %@
PCS%@ options: %@
Missing parameter: dsid
Stingray iCDP status is armed %d icdp %d walrus %d plesio %d
EnoughToUpdate: %@ though %@ (master %@, content %@)
Registry
First modern
local and iCKC not the same PCS keys
no PCS keys in keychain!
EnsureCurrents
ValidateEscrowedKeys
AddMissingFromRegistry
IsLocalStoringService
Migration.m
state->limitLocalStoring
Metadata missing
iCDP enabled and no stingray content
No writing allowed
DSID not provided for sign-in
PCSCopyStingrayData failed
No need to use escorw proxy at this point
Merge required: %@
sync and non sync keychain doesn't match!
Need password to push identities
Detected missing/lost escrow data, will attempt to restore.
Congestion event at read happen restarting state machine
BackupKeybagDigest
KeybagDigest missing
Keybag hash mismatch
Escrowed keys not CFData
Have escrowed keys, but no escrow identity
Encrypted metadata keys failure: %@
Invalid escrow identity key: %@
v16@?0^{__CFString=}8
No escrow identity, even with iCDP data
No escrow identity, even with only classic keys
Keyset was a dropped keyset, metadata was not
iCDP state mismatching, using the most restrictive (local)
iCDP state mismatching, using the most restrictive (remote)
   iCDP state is (%@)
adding local service to memory store: %@
was a manatee identity, skipping update of metadata
Registry contains Manatee service: %@
Failed to parse identity: %@
Need regen of registry since %@ have the service %@ (%@) in it
Found identity %@ in registry for %@
Identities not in registry, updating needed: %@
Triggering update for metadata
   master identity missing from registry, adding one
   master identity NOT missing from registry, refusing to add one
   not creating Manatee service: %@
   not creating tooRolled service: %@
Can't add master to set %@
   service %@ identity missing: %@ invalid: %@, manatee: %@. adding one
Skipping too rolled identity for loose leaves: %@
Service %@ have an un-decrypted item
Identity %@ not found locally, adding it from LooseLeaves
Local identity %@ missing in LooseLeaves, adding it
Re-adding preexisting LooseLeaves identity %@
Asked to restore HSM content, but flag in HSM doesn't match
Asked to drop HSM content, but flag in HSM already set
Escrow identity not in escrowed set
Escrow identity not same
MetadataHashKey missing
_PCSSecureBackupEnableWithInfo: %@
New HSM content (update)
MetadataHashKey missing: %s
with content, this will not end well
no content
_PCSSecureBackup%sWithInfo: %@
Enable
UpdateMetadata
Congestion event happen restarting state machine: %@
  Removing Manatee service from registry: %@
  Updating service %@ registry
     %d: %@
adding service to localStore: %@
marking identity current: %@
Updating iCDP
Updating Walrus
Failed getting Walrus state, will not update: %@
Updating Plesio
Failed getting Walrus state after set: %@
Just stored status: %d (iCDPArmed), checked afterward, it was: %d
Just stored status: %d (Walrus), checked afterward, it was: %d
Just stored status: %d (Plesio), checked afterward, it was: %d
CDP not enabled, skipping AddMissingCurrentPointers
PreCheckHSM
FailOnDroppedKeys
SetiCDPEnabled
StoreiCDPEnabled
NotifyChange
Missing parameter: username
Missing parameter: password
Keys dropped from HSM
com.apple.ProtectedCloudStorage.updatedKeys
EnableiCDPIfArmed
can't close door with new identity
SetiCDPDisabled
StoreiCDPDisable
DropStingray
FailOnNotDroppedKeys
IgnoreKeysInHSM
UndropStingray
Keys was NOT dropped from HSM
Missing options dictionary
Log facility not a string
PCSMigration
PCSMisc
ValidateiCDP
Checking for ValidateiCDP migration
Using Walrus account
Using Plesio account
Using iCDP account
Using SA account
PCSMigrationEngine
%@ start
  running %@ step %@%s
 (modified)
  starting migration to the begining: %u
numberIdentityMissing
modified
missingFromRegistry
brokenEncryptedMetadatakeys
%@ complete: %@ (error: %@)
success
failed
ExitOnDroppedKeys
CheckInStatus
ExitOnNoneiCDP
CheckInitialSyncIdentities
Triggering fetching keys
DifferentOniCDP
DifferentOniCDP: not enough in sync: %@
DifferentOniCDP: %@ triggerUpdate: %@
HSMRestore
Missing parameter: hsmcontent
Missing parameter: metadata
ForceRecover
PCSServiceItem
/System/Library/Preferences/ProtectedCloudStorage/Identities
ServiceName
OldName
ServiceNumber
ViewHint
RollIdentity
RollInterval
KeyDescription
KCItemClass
Classic7
Manatee
ManateeSharing
Authorship
AllowKeyExport
AnonymousSharing
v24@?0^{__CFString=}8^{__OpaquePCSServiceItem={__CFRuntimeBase=QAQ}^{__CFString}ii^{__CFNumber}^{__CFString}^{__CFString}^{__CFString}^{__CFString}BBBBBBBBI}16
PCS-
IdentityServicesEngram
SI@%p
<%@: [name/oldName: %@/%@] [viewHint: %@] [class: %@] [keyDescription: %@] [number: %@] [%c%c%c%c%c%c%c] %08d %08x
v16@?0^{__CFDictionary=}8
SIMULATOR_ROOT
%s%@
plist
SecureBackupPublicKeybag
encode PCSBackupEscrow
decode PCSBackupEscrow
size PCSBackupEscrow
wrong type: %d
Escrow identity missing: %@
data
flags
CKAcceptableValueClasses
CKPrettyError
CKRecordID
NSURL
NSURLError
NSError
PCSRequestKeysAsync
v28@?0B8@"PCSMTT"12@"NSError"20
v20@?0B8@"NSError"12
No ServiceName Specified
v32@?0@"NSData"8@"PCSMTT"16@"NSError"24
v12@?0I8
ManateeStatus
/System/Library/Frameworks/CloudKit.framework/CloudKit
%@;%@
com.apple.protectedcloudstorage.operation
isFinished
isExecuting
[MTTPoint:%@:%d:%lf]
name
time
[MTT:%@:%lf
uuid
completedPoints
returnedExistingIdentity
PCSMTT
UUID
parentUUID
points
CreateIdentity: %@
CKErrorDomain
CKPartialErrors
securityd
CKKSErrorDomain
PCSCreateNewIdentity
%s-%@
Failed to get an lock assertion continue w/o one
roll
sync
retryLeftCount
com.apple.protectedcloudstorage.roll.%@
com.apple.protectedcloudstorage.identity-creation
dsid not available
Boundary key not available: %d
out of random
Failed to write into keychain: %d
com.apple.protectedcloudstorage
Failed to %s: %d
out of memory
v28@?0I8I12I16@"NSError"20
v40@?0@"NSNumber"8@"NSNumber"16@"NSNumber"24@"NSError"32
FetchCurrentOperation service: %@
-[PCSCKKSFetchCurrentOperation start]
CKKSFetchCurrent
Fetch current identity failed for service %@
Server fetching service %@ from view %@
Failed to create identity from persistent ref: %@
PCSCopyWrappedKey
KeyWrapper.c
PCSCopyUnwrappedKey
PCSMMCS2
exportedPCSData
shareePublicKeyData
UserDB
KeysSyncing{,Version2}-%@-%@*
KeysSyncingVersion3-%@-%@.db
CREATE TABLE IF NOT EXISTS PCSKeys ( recordID TEXT PRIMARY KEY, type INTEGER NOT NULL, data BLOB, publicKey TEXT);CREATE TABLE IF NOT EXISTS SyncDevices ( deviceID TEXT PRIMARY KEY NOT NULL, lastSeen TEXT, firstSeen TEXT, version TEXT );CREATE TABLE IF NOT EXISTS MirrorKeys ( publicKey TEXT PRIMARY KEY NOT NULL, escrow BLOB, dsid TEXT NOT NULL, service INTEGER NOT NULL, current INTEGER NOT NULL, type INTEGER NOT NULL,publicIdentity BLOB );CREATE TABLE IF NOT EXISTS SyncedKeys ( deviceNumber INTEGER NOT NULL, pubkeyNumber INTEGER NOT NULL, current INTEGER DEFAULT 0, PRIMARY KEY (deviceNumber,pubkeyNumber) ) ;CREATE TABLE IF NOT EXISTS EscrowedKeys ( publicKey TEXT PRIMARY KEY NOT NULL, escrow BLOB,dsid TEXT NOT NULL );CREATE TRIGGER IF NOT EXISTS removeSyncedKeys DELETE ON SyncDevices    FOR EACH ROW BEGIN        DELETE FROM SyncedKeys WHERE OLD.rowid = SyncedKeys.deviceNumber ;    END  ; CREATE TRIGGER IF NOT EXISTS removeMirrorKeys DELETE ON MirrorKeys    FOR EACH ROW BEGIN        DELETE FROM SyncedKeys WHERE OLD.rowid = SyncedKeys.pubkeyNumber ;    END  ; CREATE TABLE IF NOT EXISTS UpdateLimits ( updateType TEXT PRIMARY KEY NOT NULL, mod_date DATETIME DEFAULT CURRENT_TIMESTAMP, counter INTEGER, digest TEXT);
PRAGMA journal_mode=WAL;
SELECT data FROM PCSKeys WHERE recordID = ? AND type = ?;
REPLACE INTO PCSKeys (recordID,type,data,publicKey) VALUES(?,?,?,?);
DELETE FROM PCSKeys WHERE recordID = ?;
INSERT OR IGNORE INTO SyncDevices (deviceID,firstSeen) VALUES(?,?);
UPDATE SyncDevices SET lastSeen = ? AND version = ? WHERE deviceID = ?;
INSERT INTO MirrorKeys (publicKey,dsid,service,current,type,publicIdentity) VALUES(?,?,?,0,?,?);
UPDATE MirrorKeys SET current=?,type=? WHERE publicKey = ? AND type = ? AND dsid = ?;
UPDATE MirrorKeys SET type=? WHERE service = ? AND dsid = ?;
DELETE FROM MirrorKeys WHERE service = ?;
INSERT OR REPLACE INTO EscrowedKeys (publicKey,escrow,dsid) VALUES(?,?,?);
UPDATE EscrowedKeys SET escrow=? WHERE publicKey = ? AND dsid = ?;
DELETE FROM EscrowedKeys WHERE publicKey = ? AND dsid = ?;
SELECT escrow FROM EscrowedKeys WHERE publicKey = ? AND dsid = ?
SELECT publicKey,escrow FROM EscrowedKeys WHERE dsid = ?
INSERT INTO SyncedKeys (deviceNumber,pubkeyNumber) SELECT SyncDevices.rowid,MirrorKeys.rowid FROM SyncDevices,MirrorKeys WHERE (SyncDevices.deviceID = ? AND MirrorKeys.publicKey = ? AND MirrorKeys.type = ? AND MirrorKeys.dsid = ?);
UPDATE MirrorKeys SET current = 0 WHERE service=? AND dsid=?;
SELECT MirrorKeys.publicKey FROM MirrorKeys WHERE MirrorKeys.dsid = ? AND MirrorKeys.type = ? AND (MirrorKeys.rowid NOT IN   (SELECT SyncedKeys.pubkeyNumber FROM SyncedKeys,SyncDevices WHERE (SyncDevices.deviceID = ? AND SyncedKeys.deviceNumber = SyncDevices.rowid))) ORDER BY MirrorKeys.current != 0
SELECT deviceID FROM SyncDevices;
DELETE FROM PCSKeys; DELETE FROM SyncedKeys; DELETE FROM MirrorKeys; DELETE FROM SyncDevices;DELETE FROM UpdateLimits;
BEGIN EXCLUSIVE TRANSACTION;
COMMIT TRANSACTION;
ROLLBACK TRANSACTION;
privateKey
publicKeyInfo
Failed to get ApplicationSupport directory
Failed to create ApplicationSupport directory: %@
Skipping Rolling Service Identity for %@
Asked to roll key for Manatee Service Identity %@
Asked to roll key for Non-Manatee Service Identity %@
Failed to create key for Service Identity %@
Failed to add new key for Service Identity %@
Failed to set new key as current for Service Identity %@
PCS Triggering TTR: %@: %@
%{public}@
__PCSAccountHasStingrayIdentities
PCSHasStingrayIdentities: %s
PCSStoreStingrayIdentity: %@
PCSStoreStingrayIdentity: %{public}s
PCSCopyHSMData: %{public}@ (error: %{public}@)
PCSCopyStingrayIdentity: %{public}@ (error: %{public}@)
__PCSCopyStingrayInfo
PCSCopyStingrayInfo: %s
__PCSDisableStingrayIdentity
__PCSDisableStingrayIdentity: %{public}s: %{public}@
PCSCopyStingray: error: %{public}@
Couldn't get circle generation fingerprint %@
Couldn't ASN1 encode circle finger print: %d
Failed to add circle finger print to attributes: %d
PCSIdentityCollectionSetup
PCSIdentityCollectionSetup: return %@ error: %@
PCSIdentityCollectionCopyCurrent
PCSIdentityCollectionCopyCurrent: return %@
PCSIdentityCollectionDestroy: %{public}@ options: %{public}@
PCSIdentitySetCopyPublishableIdentities found unpublishable identity: %@
PCSIdentitySetCopyPublishableIdentities found invalid match: expected %@ found %@
PCSKeyCheckForInvalidPublicKey: %@
Strong self no longer exists
PCSDaemonKeyRollIsPending error: %@
FP Failed Roll for zone %@ %@
FP Rolled for Zone %@
generating a sharing request with no owner; this will not work
PCFPOptionCopyIdentity(kPCSFPIdentitySet) but failed to find identity: %@
CCDeriveKey failed: %d
CCKDFParametersCreateHkdf failed: %d
Not rolling zone key %@
Rolled Service Identity %@ expiration %d
Checking if CKKS reports bad state: %@
CKKS response for known state(%@): Likely good
CKKS response for known state(%@): TLKs missing
CKKS response for known state(%@): Needs unlock
CKKS response for known state(%@): unknown but likely fatal error: %d
Syncing ckks view: %@
assertion %@ trying to hold lock assertion
Got lock assertion%s
assertion %@ dropping lock assertion
dropped lock assertion
PCSIdentitySetAddIdentity failed with: %@
Identity have unknown service: %{public}@
Identity not selected for migration: %{public}@
skipping key since its broken: %u
skipping import of manatee identity %@
Failed to fetch item: %@: %d
invalid identity: incorrect dsid
invalid identity: incorrect acct
invalid identity: incorrect sdmn
invalid identity: no data
Failed to parse identity item: %@: %@
PCSIdentitySetCreate: %{public}@ %{public}@
PCSIdentitySetCreate: triggering fetching of keys
Failed to update identity %@ to set CKKS PCS public attributes: %d
Failed to get CKKS current service %{public}@: %{public}@
Failed to fetch identity from security within timeout
Failed to parse identity from keychain: %@
KeychainGetStatus(%@): keychain: %d
KeychainGetStatus(%@): status: %s
upgradeServiceMarker
_PCSIsiCDPEnabled: status: %d
KeychainIsICDPNetwork: status: %d
setting Octagon CDP failed: %@
KeychainSetICDP: setting %@ status to %s
KeychainSetSecurityDomainStatus(%@): failed to store keychain with %d: %@
No mobile backup on this platform, so its off
Failed to get CKKS view for service %@
Failed to get CKKS current item pointer for service %@: %@
Found current item pointer for service %@
Failed to get service ID for %@
Failed to get current in local keychain for service %@: %d
Failed to get CKKS pref and digest %@
Failed to setting CKKS current for service %@: %@
Set CKKS current for service %@ to the identity: %@
PCSMigrationEngine
PCSKeySyncingRequestKeys: %@
PCSMobileBackupStatusXPC failed:%@
PCSIdentitySetCreateManatee
PCSIdentitySetCreateManatee: %{public}@ %{public}@
PCSReportManateeStatus: %d
PCSReportKeyRollPending: %d: %@
no server connection
pcs xpc connection handle invalid
server connection rejected us
measure:%@:%@:%@:%f:%d
Item needs upgrading
Item upgrade resulted in: %d
PCSError: %d : %{public}@
PCSErrorCreate: %@
PCSRestoreCKBackupWithCompletion returned recoverIssue %u missing %u present %u error: %@
PCSRestoreCKBackupWithCompletion
PCSMobileBackupStatus
PCSMobileBackupStatus %@ error %@
Failed to get CKKS current service %@: %@
failed to prepare (%d): %s
Found %d PCS databases files to delete
removing: %s
Failed to open userDB database: %s
Create schema for database: %s
Failed deleting all records: %s
failed to set escrow key (%d)
softlink:r:path:/System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
PCSAnalytics
PCSManateeShareableIdentity
NSCopying
PCSManatee
PCSAccountManager
PCSCKKSCreateIdentityOperation
UserRegistryStats
NSSecureCoding
NSCoding
PCSShareProtectionObject
PCSCKKSEnsurePCSFieldsOperation
PCSCKKSSyncViewOperation
PCSLockAssertion
PCSLockManager
PCSMobileBackup
PCSKeybagKey
NoServerHandler
PCSSyncingProtocol
PCSCKKSOperationBlock
PCSCKKSOperation
PCSMTTPoint
PCSMTT
PCSCKKSItemModifyContext
PCSCKKS
PCSCKKSFetchCurrentOperation
PCSManateeShareInvitation
UserRegistryDB
PCSManateePrivateKey
PCSUtilities
count
objectAtIndexedSubscript:
stringWithFormat:
defaultManager
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
stringByAppendingPathComponent:
logger
logSuccessForEventNamed:
date
setDateProperty:forKey:
domain
code
numberWithInteger:
dictionaryWithObjects:forKeys:count:
mutableCopy
setValuesForKeysWithDictionary:
logSoftFailureForEventNamed:withAttributes:
logHardFailureForEventNamed:withAttributes:
noteEventNamed:
datePropertyForKey:
databasePath
logSuccessForEvent:
logRecoverableError:forEvent:withAttributes:
logUnrecoverableError:forEvent:withAttributes:
noteEvent:
dateOfLastSuccessForEvent:
dateWithTimeIntervalSinceNow:
compare:
URLQueryAllowedCharacterSet
formUnionWithCharacterSet:
removeCharactersInString:
stringByAddingPercentEncodingWithAllowedCharacters:
URLWithString:
defaultWorkspace
openURL:configuration:completionHandler:
description
dictionaryRepresentation
dictionary
setObject:forKey:
setEncryptionPrivateKey:
setSigningPrivateKey:
allocWithZone:
init
copyWithZone:
isMemberOfClass:
isEqual:
hash
mergeFrom:
hasEncryptionPrivateKey
hasSigningPrivateKey
readFrom:
writeTo:
copyTo:
encryptionPrivateKey
signingPrivateKey
.cxx_destruct
_encryptionPrivateKey
_signingPrivateKey
TB,R,N
T@"PCSManateePrivateKey",&,N,V_encryptionPrivateKey
T@"PCSManateePrivateKey",&,N,V_signingPrivateKey
objectForKeyedSubscript:
deviceNeedsCompanion
setDsid:
setContext:
initWithContextData:
setUseCachedAccountStatus:
fetchCliqueStatus:error:
containsObject:
setPrivateKey:
setPublicKeyInfo:
data
bytes
length
addManateeCircleFingerPrint:
dsid
initWithDSID:
accountStatus
_dsid
T@"NSString",&,V_dsid
base64EncodedStringWithOptions:
replaceOccurrencesOfString:withString:options:range:
dataWithBytes:length:
initWithData:
hasPrivateKey
privateKey
publicKeyInfo
service
setName:
startOperation
roll
existingItemReference
currentIdentity
setReturnedExistingIdentity:
completeOperation
server_NextRollDate
errorWithDomain:code:userInfo:
setError:
resetIdentities
createPCSIdentity
storePCSIdentity:
context
measurePoint:
complete:
timeoutValue
setRollItemReference:
setRollItemSHA1:
setRollIdentity:
setIdentityToCurrent
addAndNotifyOnSync:attributes:returnAttributes:complete:
error
itemStored:
rollItemReference
rollItemSHA1
existingItemSHA1
setCurrentItemReference:
setCurrentIdentity:
rollIdentity
initWithItemModifyContext:
start
_context
T@"PCSCKKSItemModifyContext",&,V_context
objectForKey:
timeIntervalSinceNow
dateWithTimeIntervalSince1970:
initWithSuiteName:
fetchRecordZoneChanges
encodeInt64:forKey:
lastfetchRecordZoneChangesAtStart
pushNotifications
zoneReset
recordFetch
recordModify
decodeInt64ForKey:
setFetchRecordZoneChanges:
setLastfetchRecordZoneChangesAtStart:
setPushNotifications:
setZoneReset:
setRecordFetch:
setRecordModify:
numberWithLongLong:
setObject:forKeyedSubscript:
initWithUTF8String:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
printUserRegistryStats:
getUserRegistryStats
_fetchRecordZoneChanges
_lastfetchRecordZoneChangesAtStart
_pushNotifications
_zoneReset
_recordFetch
_recordModify
Tq,V_fetchRecordZoneChanges
Tq,V_lastfetchRecordZoneChangesAtStart
Tq,V_pushNotifications
Tq,V_zoneReset
Tq,V_recordFetch
Tq,V_recordModify
isEqualToString:
hasExportedPCSData
exportedPCSData
dealloc
sharingRequestDataForIdentity:flags:error:
sharingRequestDataForIdentity:owner:flags:error:
setExportedPCSData:
setShareePublicKeyData:
initWithShareProtectionRef:
initWithSharingRequestData:identitySet:error:
sharingRequestDataForIdentity:error:
exportAcceptedSharingRequestWithError:
shareProtection
_shareProtection
_identity
T^{_OpaquePCSShareProtection={__CFRuntimeBase=QAQ}^{_PCSIdentitySetData}^{_PCSIdentitySetData}^{_PCSIdentitySetData}^{__CFDictionary}^{__CFArray}^{__CFDictionary}^{__CFData}^{__CFData}^{__CFData}^{_PCSKeyData}^{__CFData}^{_PCSKeyData}^{__CFDictionary}II{PCSAttributes=I^{PCSTypeValue}}^{_PCSPublicIdentityData}^{_PCSPublicIdentityData}^{_PCSPublicIdentityData}^{_PCSPublicIdentityData}^{_PCSIdentityData}^{_PCSIdentityData}Ii{?=BBBBBBB}I},R,N,V_shareProtection
initWithBytes:length:
numberWithInt:
intValue
currentItemReference
haveCKKSPlaintextEntitlements
updateKeychain:withAttributes:
sync
setView:
view
checkTLKStatus
controlObject:
setCKKSControl:
CKKSControl
ensureControl
syncView
rpcKnownBadState:reply:
rpcFetchAndProcessChangesIfNoRecentFetch:reply:
_CKKSControl
_view
T@"PCSCKKSItemModifyContext",R,V_context
T@"CKKSControl",&,V_CKKSControl
T@"NSString",&,V_view
holdAssertion:
dropAssertion:
removeAssertion:
initAssertion:manager:
holdAssertion
dropAssertion
name
manager
setManager:
held
setHeld:
_held
_name
_manager
T@"NSString",&,V_name
T@"PCSLockManager",&,V_manager
TB,V_held
weakObjectsHashTable
initManager
addObject:
removeObject:
_onlockDropAssertion:
lockAssertion:
observers
setObservers:
holders
setHolders:
setLog:
_observers
_holders
_log
T@"NSHashTable",&,V_observers
T@"NSHashTable",&,V_holders
T@"NSObject<OS_os_log>",&,V_log
setCDPEnabled:error:
fetchAccountWideSettings:error:
tag1
enabled
defaultMobileBackup
isBackupEnabled
initWithFormat:
arrayWithObjects:count:
numberWithUnsignedInt:
numberWithBool:
setWithArray:
encodeObject:forKey:
flags
decodeObjectOfClass:forKey:
setData:
setFlags:
_data
_flags
T@"NSData",&,V_data
Tq,V_flags
initWithHandler:
call
handler
_handler
T@?,R,V_handler
setWithSet:
getAllClients:
setClasses:forSelector:argumentIndex:ofReply:
syncKeys:withReply:
requestKeys:withReply:
triggerDaily:withReply:
setWithObjects:
triggerSyncingWithEscrowProxy:dsid:complete:
createIdentity:roll:sync:complete:
fetchStats:
remoteObjectProxyWithErrorHandler:
setupIdentitiesForAccount:withParameters:optional:
synchronousRemoteObjectProxyWithErrorHandler:
migrateToiCDPForAccount:withParameters:complete:
triggerWatchSyncing:
triggerUserRegistryCheck:withReply:
restoreMobileBackup:withReply:
mobileBackupStatus:
mobileBackupRecordIDsWithReply:
userDBBackupRecordIDsWithReply:
manateeStatus:complete:
keyRollPending:complete:
fetchAllDeviceKeys:withReply:
triggerKeyRolling
checkForBackupStateChange
shouldRoll
getServicesToRoll
interfaceWithProtocol:
initWithMachServiceName:options:
setRemoteObjectInterface:
setInvalidationHandler:
resume
setInterruptionHandler:
block
checkDependencies
setBlock:
_block
T@?,C,V_block
array
addDependency:
countByEnumeratingWithState:objects:count:
isFinished
isCancelled
willChangeValueForKey:
didChangeValueForKey:
operation:block:
addSuccessDependency:
isExecuting
setExecuting:
setFinished:
setCancelled:
successDependencies
setSuccessDependencies:
executing
finished
cancelled
_error
_successDependencies
T@"NSMutableArray",&,V_successDependencies
TB,GisExecuting,Vexecuting
TB,GisFinished,Vfinished
TB,GisCancelled,Vcancelled
T@"NSError",&,V_error
success
time
numberWithDouble:
timeIntervalSinceDate:
complete:time:
completePoint:
initWithMTT:name:
boolValue
doubleValue
jsonDict
setMtt:
setStart:
_success
_time
_mtt
_start
T@"PCSMTT",W,V_mtt
T@"NSDate",&,V_start
Td,R,V_time
TB,R,V_success
UUID
appendString:
appendFormat:
completedPoints
arrayWithCapacity:
UUIDString
returnedExistingIdentity
parentUUID
decodeObjectOfClasses:forKey:
initWithMTT:
stop
measure:block:
measure:success:time:
startTime
setStartTime:
setCompletedPoints:
_returnedExistingIdentity
_startTime
_completedPoints
_parentUUID
_UUID
T@"NSDate",&,V_startTime
T@"NSMutableArray",&,V_completedPoints
T@"NSUUID",R,V_parentUUID
T@"NSUUID",R,V_UUID
TB,V_returnedExistingIdentity
setSet:
setTimeoutValue:
setService:
setExistingItemReference:
setExistingItemSHA1:
setServer_NextRollDate:
setSync:
setRoll:
retryLeftCount
setRetryLeftCount:
transaction
setTransaction:
lockAssertion
setLockAssertion:
activityAssertion
setActivityAssertion:
_rollAttributes
_sync
_roll
_retryLeftCount
_set
_timeoutValue
_service
_currentIdentity
_currentItemReference
_existingItemReference
_existingItemSHA1
_rollIdentity
_rollItemReference
_rollItemSHA1
_server_NextRollDate
_transaction
_lockAssertion
_activityAssertion
T@"NSObject<OS_os_transaction>",&,V_transaction
T@"PCSLockAssertion",&,V_lockAssertion
T@,&,V_activityAssertion
T^{_PCSIdentitySetData=},V_set
T^{__PCSLogContext=},V_log
Tq,V_timeoutValue
T@"NSString",&,V_service
T^{_PCSIdentityData=},V_currentIdentity
T@"NSData",&,V_currentItemReference
T@"NSData",&,V_existingItemReference
T@"NSData",&,V_existingItemSHA1
T^{_PCSIdentityData=},V_rollIdentity
T@"NSData",&,V_rollItemReference
T@"NSData",&,V_rollItemSHA1
T@"NSDate",&,V_server_NextRollDate
TB,V_sync
TB,V_roll
Ti,V_retryLeftCount
T@"PCSMTT",R,V_mtt
setMaxConcurrentOperationCount:
syncViewOperation:
fetchCurrentOperation:
ensurePCSFieldsOperation:
createIdentityOperation:
stripOperationErrorIfPCSError:
queue
addOperations:waitUntilFinished:
userInfo
stringWithUTF8String:
processInfo
beginActivityWithOptions:reason:
endActivity:
UTF8String
createIdentity:complete:
shouldRetryWithSync:
submitRequest:complete:
initWithIdentitySet:dsid:
createNewIdentity:roll:sync:complete:
setQueue:
_queue
T@"NSOperationQueue",&,V_queue
dictionaryWithDictionary:
earlierDate:
initWithFormat:arguments:
initWithDomain:code:userInfo:
unsignedIntValue
fetchComplete:point:error:
fetchCurrentItem:viewhint:complete:
fetchPersistentRef:
hasShareePublicKeyData
shareePublicKeyData
_exportedPCSData
_shareePublicKeyData
T@"NSData",&,N,V_exportedPCSData
T@"NSData",&,N,V_shareePublicKeyData
setOslog:
setupDatabase
oslog
beginExclusiveTransaction
endTransaction:
prepare:statement:
getData:type:
replaceRecord:type:data:publicKey:
setValue:forKey:
deleteRecordAll
getConfigData:
replaceConfigRecord:data:
getRecordIDData:
replaceRecordID:data:publicKey:
deleteRecordID:
setMirrorKey:service:type:publicIdentity:
markMirrorKey:type:
updateMirrorKey:service:type:newType:current:
deleteMirrorKeys:
setEscrowKey:escrowBlob:
updateEscrowKey:escrowBlob:
deleteEscrowKey:
queryEscrowKey:
queryEscrowKeys
updateSyncDevice:seen:version:
syncedKeyToDevice:type:device:
syncDevices
missingKeysFromDevice:type:
sqliteHandle
setSqliteHandle:
recordIDStatment
setRecordIDStatment:
replaceStatment
setReplaceStatment:
deleteStatment
setDeleteStatment:
insertWatch
setInsertWatch:
updateWatch
setUpdateWatch:
insertMirrorKey
setInsertMirrorKey:
updateMirrorKey
setUpdateMirrorKey:
markMirrorKey
setMarkMirrorKey:
deleteMirrorKeys
setDeleteMirrorKeys:
resetCurrentMirrorKey
setResetCurrentMirrorKey:
insertEscrowKey
setInsertEscrowKey:
updateEscrowKey
setUpdateEscrowKey:
deleteEscrowKey
setDeleteEscrowKey:
queryEscrowKey
setQueryEscrowKey:
queryEscrowKeysAll
setQueryEscrowKeysAll:
insertWatchKey
setInsertWatchKey:
queryMissingKeys
setQueryMissingKeys:
queryWatches
setQueryWatches:
_sqliteHandle
_recordIDStatment
_replaceStatment
_deleteStatment
_insertWatch
_updateWatch
_insertMirrorKey
_updateMirrorKey
_markMirrorKey
_deleteMirrorKeys
_resetCurrentMirrorKey
_insertEscrowKey
_updateEscrowKey
_deleteEscrowKey
_queryEscrowKey
_queryEscrowKeysAll
_insertWatchKey
_queryMissingKeys
_queryWatches
_oslog
T^{sqlite3=},V_sqliteHandle
T^{sqlite3_stmt=},V_recordIDStatment
T^{sqlite3_stmt=},V_replaceStatment
T^{sqlite3_stmt=},V_deleteStatment
T^{sqlite3_stmt=},V_insertWatch
T^{sqlite3_stmt=},V_updateWatch
T^{sqlite3_stmt=},V_insertMirrorKey
T^{sqlite3_stmt=},V_updateMirrorKey
T^{sqlite3_stmt=},V_markMirrorKey
T^{sqlite3_stmt=},V_deleteMirrorKeys
T^{sqlite3_stmt=},V_resetCurrentMirrorKey
T^{sqlite3_stmt=},V_insertEscrowKey
T^{sqlite3_stmt=},V_updateEscrowKey
T^{sqlite3_stmt=},V_deleteEscrowKey
T^{sqlite3_stmt=},V_queryEscrowKey
T^{sqlite3_stmt=},V_queryEscrowKeysAll
T^{sqlite3_stmt=},V_insertWatchKey
T^{sqlite3_stmt=},V_queryMissingKeys
T^{sqlite3_stmt=},V_queryWatches
T@"NSObject<OS_os_log>",&,V_oslog
hasPublicKeyInfo
_privateKey
_publicKeyInfo
T@"NSData",&,N,V_privateKey
T@"NSData",&,N,V_publicKeyInfo
@16@0:8
v24@0:8@16
v40@0:8@16@24@32
@24@0:8@16
@24@0:8^{_NSZone=}16
B16@0:8
B24@0:8@16
Q16@0:8
v16@0:8
@"PCSManateePrivateKey"
B24@0:8^{PCSAttributes=I^{PCSTypeValue}}16
@"NSString"
v24@0:8^{_PCSIdentityData=}16
i48@0:8^{_PCSIdentityData=}16^{__CFDictionary=}24r^^{__CFDictionary}32@?40
@"PCSCKKSItemModifyContext"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v24@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16
q16@0:8
v24@0:8q16
@24@0:8^{_OpaquePCSShareProtection={__CFRuntimeBase=QAQ}^{_PCSIdentitySetData}^{_PCSIdentitySetData}^{_PCSIdentitySetData}^{__CFDictionary}^{__CFArray}^{__CFDictionary}^{__CFData}^{__CFData}^{__CFData}^{_PCSKeyData}^{__CFData}^{_PCSKeyData}^{__CFDictionary}II{PCSAttributes=I^{PCSTypeValue}}^{_PCSPublicIdentityData}^{_PCSPublicIdentityData}^{_PCSPublicIdentityData}^{_PCSPublicIdentityData}^{_PCSIdentityData}^{_PCSIdentityData}Ii{?=BBBBBBB}I}16
@40@0:8@16^{_PCSIdentitySetData=}24^@32
@32@0:8^{_PCSPublicIdentityData=}16^@24
@36@0:8^{_PCSPublicIdentityData=}16I24^@28
@44@0:8^{_PCSPublicIdentityData=}16^v24I32^@36
@24@0:8^@16
^{_OpaquePCSShareProtection={__CFRuntimeBase=QAQ}^{_PCSIdentitySetData}^{_PCSIdentitySetData}^{_PCSIdentitySetData}^{__CFDictionary}^{__CFArray}^{__CFDictionary}^{__CFData}^{__CFData}^{__CFData}^{_PCSKeyData}^{__CFData}^{_PCSKeyData}^{__CFDictionary}II{PCSAttributes=I^{PCSTypeValue}}^{_PCSPublicIdentityData}^{_PCSPublicIdentityData}^{_PCSPublicIdentityData}^{_PCSPublicIdentityData}^{_PCSIdentityData}^{_PCSIdentityData}Ii{?=BBBBBBB}I}16@0:8
^{_OpaquePCSShareProtection={__CFRuntimeBase=QAQ}^{_PCSIdentitySetData}^{_PCSIdentitySetData}^{_PCSIdentitySetData}^{__CFDictionary}^{__CFArray}^{__CFDictionary}^{__CFData}^{__CFData}^{__CFData}^{_PCSKeyData}^{__CFData}^{_PCSKeyData}^{__CFDictionary}II{PCSAttributes=I^{PCSTypeValue}}^{_PCSPublicIdentityData}^{_PCSPublicIdentityData}^{_PCSPublicIdentityData}^{_PCSPublicIdentityData}^{_PCSIdentityData}^{_PCSIdentityData}Ii{?=BBBBBBB}I}
^{_PCSIdentityData=}
i32@0:8@16@24
@"CKKSControl"
@32@0:8@16@24
v20@0:8B16
@"PCSLockManager"
@"NSHashTable"
@"NSObject<OS_os_log>"
@"NSData"
@24@0:8@?16
@?16@0:8
v24@0:8@?16
v32@0:8@16@?24
v40@0:8@16@24@?32
v36@0:8@16@24B32
v40@0:8@16B24B28@?32
v28@0:8B16@?20
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?>16
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"PCSMTT"@"NSError">32
v36@0:8@"NSString"16@"NSDictionary"24B32
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?B@"NSError">32
v40@0:8@"NSString"16B24B28@?<v@?@"NSData"@"PCSMTT"@"NSError">32
v32@0:8@"NSString"16@?<v@?I>24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSString"@"NSData"@"NSData"@"NSArray"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSArray"@"NSError">16
v28@0:8B16@?<v@?@"NSNumber"@"NSNumber"@"NSNumber"@"NSError">20
v24@0:8@?<v@?@"UserRegistryStats">16
v24@0:8@?<v@?B@"NSError">16
@"NSArray"16@0:8
@32@0:8@16@?24
@"NSError"
@"NSMutableArray"
v28@0:8B16d20
d16@0:8
@"PCSMTT"
@"NSDate"
v36@0:8@16B24d28
@"NSUUID"
^{_PCSIdentitySetData=}16@0:8
v24@0:8^{_PCSIdentitySetData=}16
^{__PCSLogContext=}16@0:8
v24@0:8^{__PCSLogContext=}16
^{_PCSIdentityData=}16@0:8
i16@0:8
v20@0:8i16
^{__CFDictionary=}
^{_PCSIdentitySetData=}
^{__PCSLogContext=}
@"NSObject<OS_os_transaction>"
@"PCSLockAssertion"
@32@0:8^{_PCSIdentitySetData=}16@24
@"NSOperationQueue"
v40@0:8^{__CFData=}16@24^{__CFError=}32
B32@0:8r*16^^{sqlite3_stmt}24
B20@0:8B16
@28@0:8@16i24
B44@0:8@16i24@28@36
B32@0:8@16@24
B40@0:8@16@24@32
B40@0:8@16i24i28@32
B24@0:8i16i20
B40@0:8@16i24i28i32B36
B20@0:8i16
B36@0:8@16i24@28
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
^{sqlite3_stmt=}16@0:8
v24@0:8^{sqlite3_stmt=}16
^{sqlite3=}
^{sqlite3_stmt=}
wrapping key wrap me
encryption key key m
MsaeEooevaX fooo 012
hmackey-of-masterkey
master key id labell
M key input data 2 u
iCloudDataProtection
