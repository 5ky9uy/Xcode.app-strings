@(#)PROGRAM:SyncedDefaults  PROJECT:SyncedDefaults-
com.apple.kvs
v8@?0
Misc
CloudKit
CoreData
Connection
Analytics
Accounts
Migration
AccessorSignposts
SyncSignposts
SYDRemotePreferencesSourceDidChangeNotification
SYDRemotePreferencesSourceConfigurationDidChangeNotification
SYDUbiquitousKeyValueStoreDidChangeExternallyNotification
SYDRemotePreferencesSource.m
Trying to call %s on invalid class %@
-[SYDRemotePreferencesSource objectForKey:error:]
-[SYDRemotePreferencesSource getValueForKey:]
-[SYDRemotePreferencesSource setObject:forKey:error:]
-[SYDRemotePreferencesSource setValue:forKey:]
-[SYDRemotePreferencesSource setDefaultsConfiguration:]
-[SYDRemotePreferencesSource scheduleRemoteSynchronization]
-[SYDRemotePreferencesSource synchronizationWithCompletionHandler:]
SyncedDefaults
Trying to call a method on an invalid object.
-[SYDRemotePreferencesSource synchronize]
-[SYDRemotePreferencesSource synchronizeForced:]
-[SYDRemotePreferencesSource _synchronizeForced:]
-[SYDRemotePreferencesSource hasExternalChanges]
-[SYDRemotePreferencesSource copyDictionary]
-[SYDRemotePreferencesSource registerForSynchronizedDefaults]
-[SYDRemotePreferencesSource unregisterForSynchronizedDefaults]
-[SYDRemotePreferencesSource updateConfiguration]
-[SYDRemotePreferencesSource ping]
NoEncryption
EndToEndEncryption
EndToEndEncryptionAllPlatforms
Unknown
com.apple.security.cloudkeychainproxy3
com.apple.sbd3
identifier
type
persona
SYDStoreID.m
Trying to instantiate a %@ without an identifier
<%@: %p; identifier=%@ type=%@
 persona=%@
SYDClientToDaemonConnection.m
Trying to initialize NSUbiquitousKeyValueStore without a store identifier. Please specify your store identifier in the '%@' entitlement.
com.apple.developer.ubiquity-kvstore-identifier
Must specify a store configuration when initializing %@
com.apple.kvs.client
com.apple.kvs.client.callback
com.apple.kvs.client.analytics
Please use -%@
<%@: %p; storeConfiguration=%@>
v16@?0@"NSError"8
v24@?0@"NSArray"8@"NSError"16
com.apple.sbd
accountsd
com.apple.accounts
com.apple.finder
com.apple.VoiceOverTouch
com.apple.TextInput.kbd
com.apple.inputmethod.kbd
com.apple.nanoweatherprefsd
com.apple.weather
com.apple.springboard
com.apple.backboardd
com.apple.datamigrator
com.apple.CoreSuggestions
com.apple.cmfsyncagent
com.apple.accessibility.heard
com.apple.HearingAids
com.apple.wifid
com.apple.wifid.known-networks
com.apple.coretelephony
com.apple.mediaaccessibilityd
com.apple.mediaaccessibility
com.apple.tipsd
com.apple.touristd
NSUbiquitousKeyValueStore key '%@' is longer than the maximum allowed size (%ld)
v24@?0@8@"NSError"16
com.apple.kvs.cachedObjectForKey
keyHash
storeIdentifier
objectExistedInCache
@"NSDictionary"8@?0
 (from cache)
v24@?0@"NSDictionary"8@"NSError"16
v32@?0@8@16^B24
v24@?0@"NSData"8@"NSError"16
Invalid key parameter provided
NSUbiquitousKeyValueStoreDidChangeExternallyNotificationUserInfo
ChangeToken
v12@?0B8
com.apple.kvsd
com.apple.syncdefaultsd.daemon.wake
v12@?0i8
UIApplicationWillEnterForegroundNotification
cfprefsd
v32@?0@"NSString"8@"NSNumber"16^B24
Expected non-nil XPC connection
Expected non-nil XPC connection queue
SYDStoreConfiguration.m
Must specify a non-nil storeID when initializing %@
Use -[%@ %@]
<%@: %p; storeID=%@
Initializing %@ with applicationID=%@ storeID=%@
Trying to initialize NSUbiquitousKeyValueStore without a store identifier. Please specify a store identifier in your entitlements or initializer.
Initializing %@ with configuration %@ store <(%@)>
Deallocating daemon connection %@
Invalidating XPC connection for %@
kvs/all-store-identifiers
Error obtaining synchronous remote object proxy to process account changes: %@
Checking entitlements for KVS store identifier
Found entitlement for KVS store: %@
Unable to find entitlement for KVS store
Unable to get a SecTaskRef to check for KVS store entitlement
KVS store identifier (%@) for (%@) was inferred from a hardcoded list. Please specify a store identifier in your NSUbiquitousKeyValueStore initializer or in the %@ entitlement.
kvs/set-object
StoreIdentifier=%{signpost.description:attribute}s Key=%{signpost.description:attribute}s
SetObject
Setting object for key <(%{private, mask.hash}@)> = <(%{private, mask.hash}@)> in store <(%@)>
Not setting identical object for key <(%{private, mask.hash}@)> in store <(%@)>
Not setting identical nil value for key <(%{private, mask.hash}@)> in store <(%@)>
Caching object for key <(%{private, mask.hash}@)> after setting in store <(%@)>
Caching NSNull key <(%{private, mask.hash}@)> after setting to nil in store <(%@)>
Quota error saving (%{private}@)): %@
Did set object for key <(%{private, mask.hash}@)> in store <(%@)>
kvs/remove-object
Removing object for key <(%{private, mask.hash}@)> in store <(%@)>
Not removing already-nil object for key <(%{private, mask.hash}@)> from store <(%@)>
Caching NSNull for key <(%{private, mask.hash}@)> after removing it for store <(%@)>
Did remove object for key <(%{private, mask.hash}@)> in store <(%@)>
RemoveObject
kvs/get-object
Getting object for key <(%{private, mask.hash}@)> in store <(%@)>
Found cached NSNull for key <(%{private, mask.hash}@)> in store <(%@)>
Found cached object for key <(%{private, mask.hash}@)> in store <(%@)>
Caching object for key <(%{private, mask.hash}@)> from daemon in store <(%@)>
Caching NSNull for key <(%{private, mask.hash}@)> from daemon in store <(%@)>
Returning object%@ for key <(%{private, mask.hash}@)> = <(%{private, mask.hash}@)> in store <(%@)>
GetObject
kvs/dictionary-representation
StoreIdentifier=%{signpost.description:attribute}s
Getting dictionary representation for store <(%@)>
Caching object from dictionary representation for key <(%{private, mask.hash}@)> in store <(%@)>
Returning dictionary representation for store <%@>: %{private}@
GetDictionaryRepresentation
kvs/save-change-token
Saving change token to daemon for %@
Error saving change token to daemon: %@
Saved change token to daemon
kvs/get-change-token
Getting change token from daemon for %@
Error getting change token from daemon: %@
Got change token from daemon
kvs/synchronize
Not getting change dictionary from the daemon because we don't need to
Synchronizing for store <(%@)>
Received change dictionary from daemon for %@
Did not receive change dictionary from daemon for %@
Invalidating cached value for changed key <(%{private, mask.hash}@)>
On queue posting change notification for %@ with reason=%@ and %ld changed key(s)
kvs/cloud-sync
StoreIdentifier=%{signpost.description:attribute}s enableTelemetry=YES 
Synchronizing with cloud for store <(%@)> %@
Error synchronizing with cloud for store <(%@)>: %@
Done synchronizing with cloud for store <(%@)>
Sync
kvs/cloud-sync-multiple
Stores=%{signpost.description:attribute}s enableTelemetry=YES 
Synchronizing stores of type %@ with the cloud: %@
Error obtaining remote object proxy for syncing multiple stores: %@
Error synchronizing multiple stores with cloud: %@
BUG IN CLIENT OF KVS: Tried to sync multiple stores, but not entitled for all of them: %@
Done synchronizing with cloud for stores: %@
SyncMultiple
kvs/is-cloud-sync-enabled
Setting cloud sync to enabled for store: %@
Setting cloud sync to disabled for store: %@
Cloud sync XPC connection was interrupted
Cloud sync XPC connection was invalidated
kvs/register
Registering for change notifications
Error getting proxy to register: %@
Error registering for change notifications: %@
Finished registering for change notifications
kvs/ping
Pinged from daemon. IT'S ALIVE!!!
Registering for UI change notifications on iPhone / tvOS
Performing moved to foreground sync for store <(%@)>
Completed foreground move triggered sync for store <(%@)>
Not performing initial sync in cfprefsd
Not performing initial sync for store <(%@)> because we're not in an app
Not performing initial sync for store <(%@)> because we've already initialized it
Performing initial sync for store <(%@)>
Done performing initial sync for store <(%@)>
BUG IN CLIENT OF KVS: Tried to access NSUbiquitousKeyValueStore '%@' without the proper entitlements. If your process is not entitled to access this store, then any attempts to get data will return nil, and any attempts to set data will be ignored. Please add the proper entitlements to access this store, or stop trying to access it in an unentitled process.
BUG IN CLIENT OF KVS: Tried to access encrypted store '%@' before first unlock. When this fault occurs, NSUbiquitousKeyValueStore is about to return a nil value for any key you just asked for, even if there
s data in the store for that key. Depending on what might be done with that return value, this could result in data loss.
BUG IN KVS: Tried to access store that is unknown to the system (%@). Please send this bug to NSUbiquitousKeyValueStore.
BUG IN CLIENT OF KVS: Cannot use a zero-length or nil key
BUG IN CLIENT OF KVS: Tried to access NSUbiquitousKeyValueStore without being able to mach-lookup `com.apple.kvsd`. Please allow mach-lookup for `com.apple.kvsd` in your sandbox profile or entitlements.
kvs/store-did-change
Received storeDidChange for store <(%@)>
Waiting to process change dictionary until the end of the cloud sync
Received storeDidChange for store that is not our store: self.configuration=%@ configuration=%@
kvs/process-account-changes
Telling daemon to process account changes
Error obtaining asynchronous remote object proxy to process account changes: %@
Failed to tell daemon to process account changes: %@
Finished telling daemon to process account changes
Creating new XPC connection
XPC connection was interrupted
XPC connection was invalidated
Error obtaining synchronous remote object proxy: %@
Error obtaining asynchronous remote object proxy: %@
SYDRemotePreferencesSource
SYDManagement
SYDStoreID
NSCopying
NSSecureCoding
NSCoding
SYDDaemonProtocol
SYDClientProtocol
SYDClientToDaemonConnection
SYDClientProtocolProxy
SYDStoreConfiguration
initWithApplicationID:storeID:shared:additionalSource:containerPath:
initWithApplicationID:storeID:shared:additionalSource:containerPath:storeType:
defaultStoreIdentifierForCurrentProcessWithApplicationIdentifier:
initWithStoreIdentifier:type:
dealloc
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
copyDictionary
SYDRemotePreferencesSourceDidChangeNotification
SYDRemotePreferencesSourceConfigurationDidChangeNotification
SYDUbiquitousKeyValueStoreDidChangeExternallyNotification
maximumKeyCount
maximumKeyLength
maximumDataLengthPerKey
maximumTotalDataLength
initWithApplicationID:shared:
initWithApplicationID:storeID:shared:
initWithApplicationID:storeID:shared:additionalSource:
objectForKey:error:
getValueForKey:
setObject:forKey:error:
setValue:forKey:
setDefaultsConfiguration:
scheduleRemoteSynchronization
synchronizationWithCompletionHandler:
synchronize
synchronizeForced:
_synchronizeForced:
hasExternalChanges
copyExternalChangesWithChangeCount:
discardExternalChangesForChangeCount:
dictionaryRepresentationWithError:
registerForSynchronizedDefaults
unregisterForSynchronizedDefaults
updateConfiguration
ping
migrateSyncedDefaultsForBundleIdentifier:
domain
isEqualToString:
code
localizedDescription
userInfo
objectForKeyedSubscript:
setObject:forKeyedSubscript:
integerValue
numberWithInteger:
type
URLByAppendingPathComponent:isDirectory:
identifier
URLHostAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
URLByAppendingPathComponent:
defaultManager
stringWithFileSystemRepresentation:length:
fileURLWithPath:
stringWithUTF8String:
URLForDirectory:inDomain:appropriateForURL:create:error:
raise:format:
containerIdentifier
environment
stringWithFormat:
stringByAppendingPathExtension:
initWithContainerIdentifier:environment:
handleFailureInFunction:file:lineNumber:description:
initWithZoneName:ownerName:
initWithRecordName:zoneID:
currentPersona
isDataSeparatedPersona
copyCurrentPersonaContextWithError:
generateAndRestorePersonaContextWithPersonaUniqueString:
restorePersonaWithSavedPersonaContext:
setWithObjects:
count
objectAtIndexedSubscript:
addObject:
allKeys
countByEnumeratingWithState:objects:count:
initWithDomain:code:userInfo:
enumerateObjectsUsingBlock:
init
userPersonaUniqueString
copy
personaUniqueString
appendFormat:
appendString:
hash
isMemberOfClass:
allocWithZone:
initWithIdentifier:type:
setPersonaUniqueString:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
encodeObject:forKey:
encodeInteger:forKey:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
description
isEqual:
setIdentifier:
setType:
.cxx_destruct
_identifier
_type
_personaUniqueString
T@"NSString",C,N,V_identifier
Tq,N,V_type
T@"NSString",C,N,V_personaUniqueString
initWithStoreID:
initWithStoreConfiguration:
storeID
registerForDaemonDidWakeNotifications
registerForApplicationLifecycleEvents
performInitialSyncIfNecessary
storeConfiguration
defaultCenter
removeObserver:
suspend
invalidate
syncingWithCloudCounter
newXPCConnection
synchronousRemoteObjectProxyWithErrorHandler:
allStoreIdentifiersWithCompletionHandler:
disgustingUglyHardcodedKnownStoreIdentifierForApplicationIdentifier:
queue
cacheLock
lock
cachedObjects
removeObjectForKey:
unlock
storeIdentifier
UTF8String
validateKey:error:
logFaultIfNecessaryForError:
length
objectForKey:
null
synchronousDaemonWithErrorHandler:
setObject:forKey:inStoreWithConfiguration:reply:
setObject:forKey:
_handleCacheErrorForKey:
callbackQueue
arrayWithObjects:count:
postNotificationName:object:userInfo:
removeObjectForKey:inStoreWithConfiguration:reply:
objectForKey:inStoreWithConfiguration:reply:
analyticsQueue
numberWithUnsignedInteger:
numberWithBool:
removeAllObjects
dictionaryRepresentationForStoreWithConfiguration:reply:
enumerateKeysAndObjectsUsingBlock:
dictionaryRepresentation
saveChangeToken:forStoreWithConfiguration:reply:
changeTokenForStoreWithConfiguration:reply:
needsChangeDictionaryFromDaemon
changeToken
changeDictionarySinceChangeToken:inStoreWithConfiguration:reply:
setNeedsChangeDictionaryFromDaemon:
processChangeDictionary:
_clearCachedObjects
setChangeToken:
setSyncingWithCloudCounter:
asyncDaemonWithErrorHandler:
synchronizeStoreWithConfiguration:completionHandler:
componentsJoinedByString:
remoteObjectProxyWithErrorHandler:
setInvalidationHandler:
setInterruptionHandler:
synchronizeStoresWithIdentifiers:type:completionHandler:
isCloudSyncUserDefaultEnabledForStoreIdentifier:completionHandler:
setCloudSyncUserDefaultEnabled:storeIdentifier:
initWithMachServiceName:options:
daemonProtocolInterface
setRemoteObjectInterface:
resume
registerForChangeNotificationsForStoreWithConfiguration:reply:
daemonDidWake
applicationWillEnterForeground
addObserver:selector:name:object:
processInfo
processName
currentProcess
isApplication
hasInitializedStoreWithIdentifier:
setHasInitializedStoreWithIdentifier:
containsObject:
didLogFaultForEntitlements
setDidLogFaultForEntitlements:
isSyncingWithCloud
processAccountChangesWithCompletionHandler:
interfaceWithProtocol:
dictionary
setClasses:forSelector:argumentIndex:ofReply:
storeDidChangeWithStoreID:changeDictionary:reply:
setXpcConnection:
clientProtocolInterface
setExportedInterface:
initWithTarget:
setExportedObject:
xpcConnection
_queue
allStoreIdentifiersWithError:
isCloudSyncUserDefaultEnabledForStoreIdentifier:
setShouldSyncOnFirstInitializationOverride:
shouldSyncOnFirstInitializationOverride
storeType
setStoreConfiguration:
setQueue:
setCallbackQueue:
setAnalyticsQueue:
daemonWakeNotifyToken
setDaemonWakeNotifyToken:
setCachedObjects:
setCacheLock:
_didLogFaultForEntitlements
_needsChangeDictionaryFromDaemon
_daemonWakeNotifyToken
_storeConfiguration
_xpcConnection
_callbackQueue
_analyticsQueue
_cachedObjects
_cacheLock
_syncingWithCloudCounter
T@"SYDStoreConfiguration",&,N,V_storeConfiguration
T@"NSXPCConnection",&,N,V_xpcConnection
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_analyticsQueue
Ti,N,V_daemonWakeNotifyToken
TB,N,V_didLogFaultForEntitlements
TB,V_needsChangeDictionaryFromDaemon
T@"NSCache",&,N,V_cachedObjects
T@"NSLock",&,N,V_cacheLock
TB,R,N
TQ,V_syncingWithCloudCounter
T@"NSString",R,N
Tq,R,N
target
setTarget:
_target
T@"<SYDClientProtocol>",W,N,V_target
setProcessName:
setStoreID:
_storeID
_processName
T@"SYDStoreID",&,N,V_storeID
T@"NSString",C,N,V_processName
@16@0:8
q16@0:8
@28@0:8^{__CFString=}16B24
@36@0:8^{__CFString=}16^{__CFString=}24B32
@40@0:8^{__CFString=}16^{__CFString=}24B32B36
@48@0:8^{__CFString=}16^{__CFString=}24B32B36^{__CFString=}40
@56@0:8^{__CFString=}16^{__CFString=}24B32B36^{__CFString=}40q48
v16@0:8
@32@0:8@16^@24
^v24@0:8^{__CFString=}16
B40@0:8@16@24^@32
v32@0:8^v16^{__CFString=}24
v24@0:8@16
v24@0:8@?16
C16@0:8
C20@0:8C16
@24@0:8^q16
v24@0:8q16
@24@0:8^@16
^{__CFDictionary=}16@0:8
B16@0:8
@24@0:8^{_NSZone=}16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8@16q24
Q16@0:8
B24@0:8@16
@"NSString"
v48@0:8@16@24@32@?40
v40@0:8@16@24@?32
v32@0:8@16@?24
v40@0:8@16q24@?32
v28@0:8B16@20
v48@0:8@16@"NSString"24@"SYDStoreConfiguration"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"SYDStoreConfiguration"24@?<v@?@@"NSError">32
v40@0:8@"NSString"16@"SYDStoreConfiguration"24@?<v@?@"NSError">32
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSError">24
v40@0:8@"NSData"16@"SYDStoreConfiguration"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSData"@"NSError">24
v40@0:8@"NSData"16@"SYDStoreConfiguration"24@?<v@?@"NSError">32
v40@0:8@"NSArray"16q24@?<v@?@"NSError">32
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSString"16@?<v@?B>24
v28@0:8B16@"NSString"20
v24@0:8@?<v@?@"NSArray"@"NSError">16
v40@0:8@"SYDStoreID"16@"NSDictionary"24@?<v@?>32
v32@0:8@16@24
B32@0:8@16^@24
@24@0:8@?16
i16@0:8
v20@0:8i16
v20@0:8B16
v24@0:8Q16
@"SYDStoreConfiguration"
@"NSXPCConnection"
@"NSObject<OS_dispatch_queue>"
@"NSCache"
@"NSLock"
@"<SYDClientProtocol>"
@"SYDStoreID"
@(#)PROGRAM:SyncedDefaults  PROJECT:SyncedDefaults-
com.apple.kvs
v8@?0
Misc
CloudKit
CoreData
Connection
Analytics
Accounts
Migration
AccessorSignposts
SyncSignposts
SYDRemotePreferencesSourceDidChangeNotification
SYDRemotePreferencesSourceConfigurationDidChangeNotification
SYDUbiquitousKeyValueStoreDidChangeExternallyNotification
SYDRemotePreferencesSource.m
Trying to call %s on invalid class %@
-[SYDRemotePreferencesSource objectForKey:error:]
-[SYDRemotePreferencesSource getValueForKey:]
-[SYDRemotePreferencesSource setObject:forKey:error:]
-[SYDRemotePreferencesSource setValue:forKey:]
-[SYDRemotePreferencesSource setDefaultsConfiguration:]
-[SYDRemotePreferencesSource scheduleRemoteSynchronization]
-[SYDRemotePreferencesSource synchronizationWithCompletionHandler:]
SyncedDefaults
Trying to call a method on an invalid object.
-[SYDRemotePreferencesSource synchronize]
-[SYDRemotePreferencesSource synchronizeForced:]
-[SYDRemotePreferencesSource _synchronizeForced:]
-[SYDRemotePreferencesSource hasExternalChanges]
-[SYDRemotePreferencesSource copyDictionary]
-[SYDRemotePreferencesSource registerForSynchronizedDefaults]
-[SYDRemotePreferencesSource unregisterForSynchronizedDefaults]
-[SYDRemotePreferencesSource updateConfiguration]
-[SYDRemotePreferencesSource ping]
NoEncryption
EndToEndEncryption
EndToEndEncryptionAllPlatforms
Unknown
com.apple.security.cloudkeychainproxy3
com.apple.sbd3
identifier
type
persona
SYDStoreID.m
Trying to instantiate a %@ without an identifier
<%@: %p; identifier=%@ type=%@
 persona=%@
SYDClientToDaemonConnection.m
Trying to initialize NSUbiquitousKeyValueStore without a store identifier. Please specify your store identifier in the '%@' entitlement.
com.apple.developer.ubiquity-kvstore-identifier
Must specify a store configuration when initializing %@
com.apple.kvs.client
com.apple.kvs.client.callback
com.apple.kvs.client.analytics
Please use -%@
<%@: %p; storeConfiguration=%@>
v16@?0@"NSError"8
v24@?0@"NSArray"8@"NSError"16
com.apple.sbd
accountsd
com.apple.accounts
com.apple.finder
com.apple.VoiceOverTouch
com.apple.TextInput.kbd
com.apple.inputmethod.kbd
com.apple.nanoweatherprefsd
com.apple.weather
com.apple.springboard
com.apple.backboardd
com.apple.datamigrator
com.apple.CoreSuggestions
com.apple.cmfsyncagent
com.apple.accessibility.heard
com.apple.HearingAids
com.apple.wifid
com.apple.wifid.known-networks
com.apple.coretelephony
com.apple.mediaaccessibilityd
com.apple.mediaaccessibility
com.apple.tipsd
com.apple.touristd
NSUbiquitousKeyValueStore key '%@' is longer than the maximum allowed size (%ld)
v24@?0@8@"NSError"16
com.apple.kvs.cachedObjectForKey
keyHash
storeIdentifier
objectExistedInCache
@"NSDictionary"8@?0
 (from cache)
v24@?0@"NSDictionary"8@"NSError"16
v32@?0@8@16^B24
v24@?0@"NSData"8@"NSError"16
Invalid key parameter provided
NSUbiquitousKeyValueStoreDidChangeExternallyNotificationUserInfo
ChangeToken
v12@?0B8
com.apple.kvsd
com.apple.syncdefaultsd.daemon.wake
v12@?0i8
UIApplicationWillEnterForegroundNotification
cfprefsd
v32@?0@"NSString"8@"NSNumber"16^B24
Expected non-nil XPC connection
Expected non-nil XPC connection queue
SYDStoreConfiguration.m
Must specify a non-nil storeID when initializing %@
Use -[%@ %@]
<%@: %p; storeID=%@
Initializing %@ with applicationID=%@ storeID=%@
Trying to initialize NSUbiquitousKeyValueStore without a store identifier. Please specify a store identifier in your entitlements or initializer.
Initializing %@ with configuration %@ store <(%@)>
Deallocating daemon connection %@
Invalidating XPC connection for %@
kvs/all-store-identifiers
Error obtaining synchronous remote object proxy to process account changes: %@
Checking entitlements for KVS store identifier
Found entitlement for KVS store: %@
Unable to find entitlement for KVS store
Unable to get a SecTaskRef to check for KVS store entitlement
KVS store identifier (%@) for (%@) was inferred from a hardcoded list. Please specify a store identifier in your NSUbiquitousKeyValueStore initializer or in the %@ entitlement.
kvs/set-object
StoreIdentifier=%{signpost.description:attribute}s Key=%{signpost.description:attribute}s
Setting object for key <(%{private, mask.hash}@)> = <(%{private, mask.hash}@)> in store <(%@)>
Not setting identical object for key <(%{private, mask.hash}@)> in store <(%@)>
Not setting identical nil value for key <(%{private, mask.hash}@)> in store <(%@)>
Caching object for key <(%{private, mask.hash}@)> after setting in store <(%@)>
Caching NSNull key <(%{private, mask.hash}@)> after setting to nil in store <(%@)>
Quota error saving (%{private}@)): %@
Did set object for key <(%{private, mask.hash}@)> in store <(%@)>
SetObject
kvs/remove-object
Removing object for key <(%{private, mask.hash}@)> in store <(%@)>
Not removing already-nil object for key <(%{private, mask.hash}@)> from store <(%@)>
Caching NSNull for key <(%{private, mask.hash}@)> after removing it for store <(%@)>
Did remove object for key <(%{private, mask.hash}@)> in store <(%@)>
RemoveObject
kvs/get-object
Getting object for key <(%{private, mask.hash}@)> in store <(%@)>
Found cached NSNull for key <(%{private, mask.hash}@)> in store <(%@)>
Found cached object for key <(%{private, mask.hash}@)> in store <(%@)>
Caching object for key <(%{private, mask.hash}@)> from daemon in store <(%@)>
Caching NSNull for key <(%{private, mask.hash}@)> from daemon in store <(%@)>
Returning object%@ for key <(%{private, mask.hash}@)> = <(%{private, mask.hash}@)> in store <(%@)>
GetObject
kvs/dictionary-representation
StoreIdentifier=%{signpost.description:attribute}s
Getting dictionary representation for store <(%@)>
Caching object from dictionary representation for key <(%{private, mask.hash}@)> in store <(%@)>
Returning dictionary representation for store <%@>: %{private}@
GetDictionaryRepresentation
kvs/save-change-token
Saving change token to daemon for %@
Error saving change token to daemon: %@
Saved change token to daemon
kvs/get-change-token
Getting change token from daemon for %@
Error getting change token from daemon: %@
Got change token from daemon
kvs/synchronize
Not getting change dictionary from the daemon because we don't need to
Synchronizing for store <(%@)>
Received change dictionary from daemon for %@
Did not receive change dictionary from daemon for %@
Invalidating cached value for changed key <(%{private, mask.hash}@)>
On queue posting change notification for %@ with reason=%@ and %ld changed key(s)
kvs/cloud-sync
StoreIdentifier=%{signpost.description:attribute}s enableTelemetry=YES 
Sync
Synchronizing with cloud for store <(%@)> %@
Error synchronizing with cloud for store <(%@)>: %@
Done synchronizing with cloud for store <(%@)>
kvs/cloud-sync-multiple
Stores=%{signpost.description:attribute}s enableTelemetry=YES 
SyncMultiple
Synchronizing stores of type %@ with the cloud: %@
Error obtaining remote object proxy for syncing multiple stores: %@
Error synchronizing multiple stores with cloud: %@
BUG IN CLIENT OF KVS: Tried to sync multiple stores, but not entitled for all of them: %@
Done synchronizing with cloud for stores: %@
kvs/is-cloud-sync-enabled
Setting cloud sync to enabled for store: %@
Setting cloud sync to disabled for store: %@
Cloud sync XPC connection was interrupted
Cloud sync XPC connection was invalidated
kvs/register
Registering for change notifications
Error getting proxy to register: %@
Error registering for change notifications: %@
Finished registering for change notifications
kvs/ping
Pinged from daemon. IT'S ALIVE!!!
Registering for UI change notifications on iPhone / tvOS
Performing moved to foreground sync for store <(%@)>
Completed foreground move triggered sync for store <(%@)>
Not performing initial sync in cfprefsd
Not performing initial sync for store <(%@)> because we're not in an app
Not performing initial sync for store <(%@)> because we've already initialized it
Performing initial sync for store <(%@)>
Done performing initial sync for store <(%@)>
BUG IN CLIENT OF KVS: Tried to access NSUbiquitousKeyValueStore '%@' without the proper entitlements. If your process is not entitled to access this store, then any attempts to get data will return nil, and any attempts to set data will be ignored. Please add the proper entitlements to access this store, or stop trying to access it in an unentitled process.
BUG IN CLIENT OF KVS: Tried to access encrypted store '%@' before first unlock. When this fault occurs, NSUbiquitousKeyValueStore is about to return a nil value for any key you just asked for, even if there
s data in the store for that key. Depending on what might be done with that return value, this could result in data loss.
BUG IN KVS: Tried to access store that is unknown to the system (%@). Please send this bug to NSUbiquitousKeyValueStore.
BUG IN CLIENT OF KVS: Cannot use a zero-length or nil key
BUG IN CLIENT OF KVS: Tried to access NSUbiquitousKeyValueStore without being able to mach-lookup `com.apple.kvsd`. Please allow mach-lookup for `com.apple.kvsd` in your sandbox profile or entitlements.
kvs/store-did-change
Received storeDidChange for store <(%@)>
Waiting to process change dictionary until the end of the cloud sync
Received storeDidChange for store that is not our store: self.configuration=%@ configuration=%@
kvs/process-account-changes
Telling daemon to process account changes
Error obtaining asynchronous remote object proxy to process account changes: %@
Failed to tell daemon to process account changes: %@
Finished telling daemon to process account changes
Creating new XPC connection
XPC connection was interrupted
XPC connection was invalidated
Error obtaining synchronous remote object proxy: %@
Error obtaining asynchronous remote object proxy: %@
SYDRemotePreferencesSource
SYDManagement
SYDStoreID
NSCopying
NSSecureCoding
NSCoding
SYDDaemonProtocol
SYDClientProtocol
SYDClientToDaemonConnection
SYDClientProtocolProxy
SYDStoreConfiguration
userPersonaUniqueString
unlock
synchronousRemoteObjectProxyWithErrorHandler:
suspend
stringWithFormat:
setWithObjects:
setRemoteObjectInterface:
setObject:forKeyedSubscript:
setInvalidationHandler:
setInterruptionHandler:
setExportedObject:
setExportedInterface:
setClasses:forSelector:argumentIndex:ofReply:
resume
removeObserver:
removeAllObjects
remoteObjectProxyWithErrorHandler:
raise:format:
processInfo
postNotificationName:object:userInfo:
objectForKeyedSubscript:
numberWithUnsignedInteger:
numberWithBool:
null
lock
length
isMemberOfClass:
isEqualToString:
isDataSeparatedPersona
isApplication
invalidate
interfaceWithProtocol:
integerValue
initWithMachServiceName:options:
handleFailureInMethod:object:file:lineNumber:description:
errorWithDomain:code:userInfo:
enumerateKeysAndObjectsUsingBlock:
encodeObject:forKey:
encodeInteger:forKey:
domain
dictionaryWithObjects:forKeys:count:
dictionary
defaultCenter
decodeObjectOfClass:forKey:
decodeIntegerForKey:
currentProcess
currentPersona
currentHandler
countByEnumeratingWithState:objects:count:
count
copy
containsObject:
componentsJoinedByString:
code
arrayWithObjects:count:
appendString:
appendFormat:
allocWithZone:
addObserver:selector:name:object:
addObject:
UTF8String
dealloc
SYDRemotePreferencesSourceDidChangeNotification
SYDRemotePreferencesSourceConfigurationDidChangeNotification
SYDUbiquitousKeyValueStoreDidChangeExternallyNotification
maximumKeyCount
maximumKeyLength
maximumDataLengthPerKey
maximumTotalDataLength
initWithApplicationID:shared:
initWithApplicationID:storeID:shared:
initWithApplicationID:storeID:shared:additionalSource:
initWithApplicationID:storeID:shared:additionalSource:containerPath:
initWithApplicationID:storeID:shared:additionalSource:containerPath:storeType:
objectForKey:error:
getValueForKey:
setObject:forKey:error:
setValue:forKey:
setDefaultsConfiguration:
scheduleRemoteSynchronization
synchronizationWithCompletionHandler:
synchronize
synchronizeForced:
_synchronizeForced:
hasExternalChanges
copyExternalChangesWithChangeCount:
discardExternalChangesForChangeCount:
dictionaryRepresentationWithError:
copyDictionary
registerForSynchronizedDefaults
unregisterForSynchronizedDefaults
updateConfiguration
ping
migrateSyncedDefaultsForBundleIdentifier:
init
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
initWithIdentifier:type:
description
hash
isEqual:
identifier
setIdentifier:
type
setType:
personaUniqueString
setPersonaUniqueString:
.cxx_destruct
_identifier
_type
_personaUniqueString
T@"NSString",C,N,V_identifier
Tq,N,V_type
T@"NSString",C,N,V_personaUniqueString
initWithStoreIdentifier:type:
applicationWillEnterForeground
setObject:forKey:inStoreWithConfiguration:reply:
objectForKey:inStoreWithConfiguration:reply:
removeObjectForKey:inStoreWithConfiguration:reply:
dictionaryRepresentationForStoreWithConfiguration:reply:
registerForChangeNotificationsForStoreWithConfiguration:reply:
changeDictionarySinceChangeToken:inStoreWithConfiguration:reply:
changeTokenForStoreWithConfiguration:reply:
saveChangeToken:forStoreWithConfiguration:reply:
synchronizeStoreWithConfiguration:completionHandler:
synchronizeStoresWithIdentifiers:type:completionHandler:
processAccountChangesWithCompletionHandler:
isCloudSyncUserDefaultEnabledForStoreIdentifier:completionHandler:
setCloudSyncUserDefaultEnabled:storeIdentifier:
allStoreIdentifiersWithCompletionHandler:
storeDidChangeWithStoreID:changeDictionary:reply:
allStoreIdentifiersWithError:
defaultStoreIdentifierForCurrentProcessWithApplicationIdentifier:
disgustingUglyHardcodedKnownStoreIdentifierForApplicationIdentifier:
isCloudSyncUserDefaultEnabledForStoreIdentifier:
newXPCConnection
setHasInitializedStoreWithIdentifier:
hasInitializedStoreWithIdentifier:
setShouldSyncOnFirstInitializationOverride:
shouldSyncOnFirstInitializationOverride
daemonProtocolInterface
clientProtocolInterface
initWithStoreConfiguration:
storeIdentifier
storeType
isSyncingWithCloud
_handleCacheErrorForKey:
setObject:forKey:
removeObjectForKey:
objectForKey:
_clearCachedObjects
dictionaryRepresentation
setChangeToken:
changeToken
validateKey:error:
processChangeDictionary:
registerForDaemonDidWakeNotifications
daemonDidWake
registerForApplicationLifecycleEvents
performInitialSyncIfNecessary
logFaultIfNecessaryForError:
xpcConnection
synchronousDaemonWithErrorHandler:
asyncDaemonWithErrorHandler:
storeConfiguration
setStoreConfiguration:
setXpcConnection:
queue
setQueue:
callbackQueue
setCallbackQueue:
analyticsQueue
setAnalyticsQueue:
daemonWakeNotifyToken
setDaemonWakeNotifyToken:
didLogFaultForEntitlements
setDidLogFaultForEntitlements:
needsChangeDictionaryFromDaemon
setNeedsChangeDictionaryFromDaemon:
cachedObjects
setCachedObjects:
cacheLock
setCacheLock:
syncingWithCloudCounter
setSyncingWithCloudCounter:
_didLogFaultForEntitlements
_needsChangeDictionaryFromDaemon
_daemonWakeNotifyToken
_storeConfiguration
_xpcConnection
_queue
_callbackQueue
_analyticsQueue
_cachedObjects
_cacheLock
_syncingWithCloudCounter
T@"SYDStoreConfiguration",&,N,V_storeConfiguration
T@"NSXPCConnection",&,N,V_xpcConnection
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_analyticsQueue
Ti,N,V_daemonWakeNotifyToken
TB,N,V_didLogFaultForEntitlements
TB,V_needsChangeDictionaryFromDaemon
T@"NSCache",&,N,V_cachedObjects
T@"NSLock",&,N,V_cacheLock
TB,R,N
TQ,V_syncingWithCloudCounter
T@"NSString",R,N
Tq,R,N
initWithTarget:
target
setTarget:
_target
T@"<SYDClientProtocol>",W,N,V_target
initWithStoreID:
storeID
setStoreID:
processName
setProcessName:
_storeID
_processName
T@"SYDStoreID",&,N,V_storeID
T@"NSString",C,N,V_processName
@16@0:8
q16@0:8
@28@0:8^{__CFString=}16B24
@36@0:8^{__CFString=}16^{__CFString=}24B32
@40@0:8^{__CFString=}16^{__CFString=}24B32B36
@48@0:8^{__CFString=}16^{__CFString=}24B32B36^{__CFString=}40
@56@0:8^{__CFString=}16^{__CFString=}24B32B36^{__CFString=}40q48
v16@0:8
@32@0:8@16^@24
^v24@0:8^{__CFString=}16
B40@0:8@16@24^@32
v32@0:8^v16^{__CFString=}24
v24@0:8@16
v24@0:8@?16
C16@0:8
C20@0:8C16
@24@0:8^q16
v24@0:8q16
@24@0:8^@16
^{__CFDictionary=}16@0:8
B16@0:8
@24@0:8^{_NSZone=}16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8@16q24
Q16@0:8
B24@0:8@16
@"NSString"
v48@0:8@16@24@32@?40
v40@0:8@16@24@?32
v32@0:8@16@?24
v40@0:8@16q24@?32
v28@0:8B16@20
v48@0:8@16@"NSString"24@"SYDStoreConfiguration"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"SYDStoreConfiguration"24@?<v@?@@"NSError">32
v40@0:8@"NSString"16@"SYDStoreConfiguration"24@?<v@?@"NSError">32
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSError">24
v40@0:8@"NSData"16@"SYDStoreConfiguration"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSData"@"NSError">24
v40@0:8@"NSData"16@"SYDStoreConfiguration"24@?<v@?@"NSError">32
v40@0:8@"NSArray"16q24@?<v@?@"NSError">32
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSString"16@?<v@?B>24
v28@0:8B16@"NSString"20
v24@0:8@?<v@?@"NSArray"@"NSError">16
v40@0:8@"SYDStoreID"16@"NSDictionary"24@?<v@?>32
v32@0:8@16@24
B32@0:8@16^@24
@24@0:8@?16
i16@0:8
v20@0:8i16
v20@0:8B16
v24@0:8Q16
@"SYDStoreConfiguration"
@"NSXPCConnection"
@"NSObject<OS_dispatch_queue>"
@"NSCache"
@"NSLock"
@"<SYDClientProtocol>"
@"SYDStoreID"
