@(#)PROGRAM:SyncedDefaults  PROJECT:SyncedDefaults-
com.apple.sydclient
com.apple.syncdefaultsd-sim
v16@?0@"NSObject<OS_xpc_object>"8
v8@?0
-[SYDClient _newMessageWithName:userInfo:]
SYDClient.m
name
message
userinfo
bundleIdentifier
storeIdentifier
additionalStore
error
domain
code
com.apple.syncdefaults
com.apple.kvs
Default
Scheduler
Trace
Reachability
Misc
CloudKit
CoreData
Connection
Analytics
Accounts
Migration
SYDRemotePreferencesSourceDidChangeNotification
SYDRemotePreferencesSourceConfigurationDidChangeNotification
SYDUbiquitousKeyValueStoreDidChangeExternallyNotification
maxKeyCount
maxKeyNameLen
maxKeyDataLen
maxKeyDataSum
CFFIXED_USER_HOME
SYDRemotePreferencesConfigurationDidChangeNotification
SYDRemotePreferencesSourceDidChangeExternally
com.apple.sydregistration
com.apple.sydprotection
com.apple.syd-remote-prefs.transaction
SYDRemotePreferencesSource.m
NSUbiquitousKeyValueStore: value is not property-list compatible: %@
NSUbiquitousKeyValueStore: key '%@' is too long.
NSUbiquitousKeyValueStore: CFPropertyListCreateDeepCopy failed -- out of memory?
values
changecount
initialsync
versionid
setDefaultsConfig
synchronizeRemote
trackSynchronizeRemote
v16@?0@"NSDictionary"8
changes
synchronize
com.apple.security.cloudkeychainproxy3
v32@?0@8@16^B24
discardJournalEntries
register
unregister
getConfiguration
ping
printDebugDescription
resetapps
migrate
parameter
Library/SyncedPreferences
%@-%@.plist
%@.plist
timestamp
value
remotevalue
KVSOnCloudKitForAll
SyncedDefaults
com.apple.sbd3
identifier
type
SYDStoreID.m
Trying to instantiate a %@ without an identifier
<%@: %p; identifier=%@ type=%d>
journal
count
change
-[SYDJournal addChange:forKey:changeCount:]
SYDJournal.m
!_readonly
-[SYDJournal removeChangesUntilChangeCount:]
Journal: %@
SYDClientToDaemonConnection.m
Must specify a store identifier when initializing %@
Must specify a store configuration when initializing %@
com.apple.kvs.client
com.apple.kvs.client.callback
com.apple.kvs.client.analytics
Please use -%@
<%@: %p; storeConfiguration=%@>
com.apple.developer.ubiquity-kvstore-identifier
com.apple.sbd
accountsd
com.apple.accounts
com.apple.finder
com.apple.accessibility.AccessibilityUIServer
com.apple.VoiceOverTouch
com.apple.TextInput.kbd
com.apple.inputmethod.kbd
com.apple.nanoweatherprefsd
com.apple.weather
com.apple.springboard
com.apple.backboardd
com.apple.datamigrator
com.apple.CoreSuggestions
com.apple.cmfsyncagent
com.apple.accessibility.heard
com.apple.HearingAids
com.apple.wifid
com.apple.wifid.known-networks
com.apple.coretelephony
com.apple.mediaaccessibilityd
com.apple.mediaaccessibility
com.apple.tipsd
com.apple.touristd
NSUbiquitousKeyValueStore key '%@' is longer than the maximum allowed size (%ld)
v16@?0@"NSError"8
v24@?0@8@"NSError"16
com.apple.kvs.cachedObjectForKey
keyHash
objectExistedInCache
@"NSDictionary"8@?0
 (from cache)
v24@?0@"NSDictionary"8@"NSError"16
v24@?0@"NSData"8@"NSError"16
NSUbiquitousKeyValueStoreDidChangeExternallyNotificationUserInfo
ChangeToken
com.apple.syncdefaultsd.daemon.wake
v12@?0i8
cfprefsd
com.apple.kvsd
v32@?0@"NSString"8@"NSNumber"16^B24
Expected non-nil XPC connection
Expected non-nil XPC connection queue
SYDStoreConfiguration.m
Must specify a non-nil storeID when initializing %@
Use -[%@ %@]
<%@: %p; storeID=%@
 personaUniqueString=%@
%@: %@
Can't get information on %@
v16@?0@"SYDRemotePreferencesSource"8
connection to SYD service went invalid
connection to SYD service interrupted
unexpected error connecting to SYD service
unexpected event connecting to SYD service
About to send message synchronously to server: %@
error sending message %@ to SYD server
no reply sending message %@ to SYD server
error unable to construct message from %@
got a reply from the SYD daemon,
message:%@,
reply:%@
About to send message with no reply to server: %@
About to send message to server: %@
Storing configuration: %@
Initializing %@ with applicationID=%@ storeID=%@
Forcing KVS-on-CloudKit for applicationID=%@ storeID=%@
Trying to initialize NSUbiquitousKeyValueStore without a store identifier. Please specify a store identifier in your entitlements or initializer.
URL for %@ (shared: %@ - contained: %@ - storeID: %@ - additionalSource: %@) is %@
NSUbiquitousKeyValueStore does not support empty keys
Bailing out for key in cache to %@
New dirtyKeys %@
Adding dirty key to %@ : %@
urlOnDisk:%@, hasDict:%d
Incorrect NSUbiquitousKeyValueStore journal change count: %lld - should be at least %lld
Detecting initial sync from server
No content for %@
Trash dirty keys %@
Write failure for %@
forced:%@, changeCount:%lld, result:%@
hasExternalChanges: %@
changeCount: %lld, hasExternalChanges: %@
changeCount: %lld, changes: %@
changeCount: %lld/%lld
NSUbiquitousKeyValueStore error: %@
Setting alwaysUseKVSOnCloudKit to %d
Received memory warning for KVS
Cache already empty
Recent KVS use, aborting %f
Dirty keys %@
Clearing cache
%@ notes accounts changed: %@
Reply from request to migrate %@ ubiquitous key value store: %@
Error sending request to synced defaults daemon to migrate %@ ubiquitous key value store: %@
SYDRemotePreferencesCreateURLForStorage %@ - %@
Initializing %@ with configuration %@ store <(%@)>
Deallocating daemon connection %@
Invalidating XPC connection for %@
Checking entitlements for KVS store identifier
Found entitlement for KVS store: %@
Unable to find entitlement for KVS store
Unable to get a SecTaskRef to check for KVS store entitlement
KVS store identifier (%@) for (%@) was inferred from a hardcoded list. Please specify a store identifier in your NSUbiquitousKeyValueStore initializer or in the %@ entitlement.
kvs/set-object
Setting object for key <(%{private, mask.hash}@)> = <(%{private, mask.hash}@)> in store <(%@)>
Not setting identical object for key <(%{private, mask.hash}@)> in store <(%@)>
Not setting identical nil value for key <(%{private, mask.hash}@)> in store <(%@)>
Caching object for key <(%{private, mask.hash}@)> after setting in store <(%@)>
Caching NSNull key <(%{private, mask.hash}@)> after setting to nil in store <(%@)>
Quota error saving (%{private}@)): %@
Did set object for key <(%{private, mask.hash}@)> in store <(%@)>
kvs/remove-object
Removing object for key <(%{private, mask.hash}@)> in store <(%@)>
Not removing already-nil object for key <(%{private, mask.hash}@)> from store <(%@)>
Caching NSNull for key <(%{private, mask.hash}@)> after removing it for store <(%@)>
Did remove object for key <(%{private, mask.hash}@)> in store <(%@)>
kvs/get-object
Getting object for key <(%{private, mask.hash}@)> in store <(%@)>
Found cached NSNull for key <(%{private, mask.hash}@)> in store <(%@)>
Found cached object for key <(%{private, mask.hash}@)> in store <(%@)>
Caching object for key <(%{private, mask.hash}@)> from daemon in store <(%@)>
Caching NSNull for key <(%{private, mask.hash}@)> from daemon in store <(%@)>
Returning object%@ for key <(%{private, mask.hash}@)> = <(%{private, mask.hash}@)> in store <(%@)>
kvs/dictionary-representation
Getting dictionary representation for store <(%@)>
Caching object from dictionary representation for key <(%{private, mask.hash}@)> in store <(%@)>
Returning dictionary representation for store <%@>: %{private}@
kvs/save-change-token
Saving change token to daemon for %@
Error saving change token to daemon: %@
Saved change token to daemon
kvs/get-change-token
Getting change token from daemon for %@
Error getting change token from daemon: %@
Got change token from daemon
kvs/synchronize
Not getting change dictionary from the daemon because we don't need to
Synchronizing for store <(%@)>
Received change dictionary from daemon for %@
Did not receive change dictionary from daemon for %@
Invalidating cached value for changed key <(%{private, mask.hash}@)>
On queue posting change notification for %@ with reason=%@ and %ld changed key(s)
kvs/cloud-sync
Synchronizing with cloud for store <(%@)> %@
Error synchronizing with cloud for store <(%@)>: %@
Done synchronizing with cloud for store <(%@)>
kvs/register
Registering for change notifications
Error getting proxy to register: %@
Error registering for change notifications: %@
Finished registering for change notifications
kvs/ping
Pinged from daemon. IT'S ALIVE!!!
Not performing initial sync in cfprefsd
Not performing initial sync for store <(%@)> because we're not in an app
Not performing initial sync for store <(%@)> because we've already initialized it
Performing initial sync for store <(%@)>
Done performing initial sync for store <(%@)>
BUG IN CLIENT OF KVS: Tried to access NSUbiquitousKeyValueStore '%@' without the proper entitlements. If your process is not entitled to access this store, then any attempts to get data will return nil, and any attempts to set data will be ignored. Please add the proper entitlements to access this store, or stop trying to access it in an unentitled process.
BUG IN CLIENT OF KVS: Tried to access encrypted store '%@' before first unlock. When this fault occurs, NSUbiquitousKeyValueStore is about to return a nil value for any key you just asked for, even if there
s data in the store for that key. Depending on what might be done with that return value, this could result in data loss.
BUG IN CLIENT OF KVS: Tried to access NSUbiquitousKeyValueStore without being able to mach-lookup `com.apple.kvsd`. Please allow mach-lookup for `com.apple.kvsd` in your sandbox profile or entitlements.
kvs/store-did-change
Received storeDidChange for store <(%@)>
Waiting to process change dictionary until the end of the cloud sync
Received storeDidChange for store that is not our store: self.configuration=%@ configuration=%@
kvs/process-account-changes
Telling daemon to process account changes
Account change XPC connection was interrupted
Account change XPC connection was invalidated
Error obtaining asynchronous remote object proxy to process account changes: %@
Failed to tell daemon to process account changes: %@
Finished telling daemon to process account changes
Creating new XPC connection
XPC connection was interrupted
XPC connection was invalidated
Error obtaining synchronous remote object proxy: %@
Error obtaining asynchronous remote object proxy: %@
SYDClient
SYDRemotePreferencesSource
SYDManagement
SYDStoreID
NSCopying
NSSecureCoding
NSCoding
SYDJournal
SYDDaemonProtocol
SYDClientProtocol
SYDClientToDaemonConnection
SYDClientProtocolProxy
SYDStoreConfiguration
SYDDebug
init
copy
initWithQueue:bundleIdentifier:storeIdentifier:additionalSource:
_resetConnection
dictionary
initWithObjectsAndKeys:
setObject:forKey:
numberWithBool:
_createConnectionIfNecessary
objectForKey:
stringWithUTF8String:
dictionaryWithObjects:forKeys:count:
initWithDomain:code:userInfo:
integerValue
errorWithDomain:code:userInfo:
_newMessageWithName:userInfo:
_sendMessageNoReply:
_sendMessageWithReplySync:
_sendMessage:replyHandler:
initWithQueue:bundleIdentifier:storeIdentifier:
shutdown
sendMessageWithName:
sendMessageWithName:userInfo:
sendMessageWithName:replyHandler:
sendMessageWithName:userInfo:replyHandler:
.cxx_destruct
_queue
_connection
_bundleIdentifier
_storeIdentifier
_additionalSource
numberWithUnsignedInteger:
unsignedIntegerValue
configurationValueForKey:
initWithApplicationID:storeID:shared:additionalSource:containerPath:
initWithApplicationID:storeID:shared:additionalSource:containerPath:storeType:
alwaysUseKVSOnCloudKit
defaultStoreIdentifierForCurrentProcessWithApplicationIdentifier:
initWithStoreIdentifier:type:
_createMemoryWarningSource
setCache:
dealloc
getValueForKey:
_locked_syd_start_transaction
_synchronizeForced:
_locked_syd_end_transaction
setValue:forKey:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
maximumKeyLength
initWithContentsOfURL:
initWithStore:
changesSinceChangeCount:
maximumChangeCount
mutableCopy
addEntriesFromDictionary:
longLongValue
allKeys
initWithMutableStore:
keyEnumerator
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
isEqual:
addChange:forKey:changeCount:
removeObject:
_forceRegistrationNow
_cachePlistFromDisk
numberWithLongLong:
mainBundle
bundleIdentifier
isEqualToString:
count
intValue
initWithInt:
addObject:
enumerateKeysAndObjectsUsingBlock:
copyDictionary
_storeConfiguration:
boolValue
_warningSource
_didReceiveMemoryWarning
description
initialize
setAlwaysUseKVSOnCloudKit:
SYDRemotePreferencesSourceDidChangeNotification
SYDRemotePreferencesSourceConfigurationDidChangeNotification
SYDUbiquitousKeyValueStoreDidChangeExternallyNotification
TB,N
copyConfigurationDictionary
maximumKeyCount
maximumDataLengthPerKey
maximumTotalDataLength
initWithApplicationID:shared:
initWithApplicationID:storeID:shared:
initWithApplicationID:storeID:shared:additionalSource:
objectForKey:error:
setObject:forKey:error:
setDefaultsConfiguration:
scheduleRemoteSynchronization
synchronizationWithCompletionHandler:
synchronize
synchronizeForced:
isInitialSync
hasExternalChanges
copyExternalChangesWithChangeCount:
discardExternalChangesForChangeCount:
copyKeyList
dictionaryRepresentationWithError:
generationCount
registerForSynchronizedDefaults
unregisterForSynchronizedDefaults
updateConfiguration
ping
serverSideDebugDescription
_generationCount
_lastGenerationFromDisk
_preferenceID
_urlOnDisk
_cache
_storageChangeCount
_initialSyncChangeCount
_isInitialSync
_dirtyKeys
_configurationDictionary
_externalChanges
_client
_registrationBlock
_registrationQueue
_protectionQueue
_memoryWarningSourceEnabled
_memoryWarningSource
_lastAccess
_forceNextSynchronization
_isExecutingForClient
firstObject
dictionaryWithObject:forKey:
resetAllApplicationsWithCompletionHandler:
noteAccountChanges:
migrateSyncedDefaultsForBundleIdentifier:
defaultCenter
postNotificationName:object:userInfo:
initWithUTF8String:
domain
code
localizedDescription
userInfo
setObject:forKeyedSubscript:
numberWithInteger:
type
URLByAppendingPathComponent:isDirectory:
identifier
URLByAppendingPathComponent:
defaultManager
stringWithFileSystemRepresentation:length:
fileURLWithPath:
URLForDirectory:inDomain:appropriateForURL:create:error:
raise:format:
containerIdentifier
environment
stringWithFormat:
stringByAppendingPathExtension:
initWithContainerIdentifier:environment:
handleFailureInFunction:file:lineNumber:description:
initWithZoneName:ownerName:
initWithRecordName:zoneID:
currentPersona
isDataSeparatedPersona
copyCurrentPersonaContextWithError:
generateAndRestorePersonaContextWithPersonaUniqueString:
restorePersonaWithSavedPersonaContext:
setWithObjects:
objectAtIndexedSubscript:
enumerateObjectsUsingBlock:
hash
isMemberOfClass:
allocWithZone:
initWithIdentifier:type:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
encodeObject:forKey:
encodeInteger:forKey:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
setIdentifier:
setType:
_identifier
_type
T@"NSString",C,N,V_identifier
Tq,N,V_type
removeObjectForKey:
initWithLongLong:
changeSinceChangeCount:forKey:
removeChangesUntilChangeCount:
_store
_journal
_readonly
initWithStoreID:
initWithStoreConfiguration:
storeID
registerForDaemonDidWakeNotifications
performInitialSyncIfNecessary
storeConfiguration
suspend
invalidate
syncingWithCloudCounter
disgustingUglyHardcodedKnownStoreIdentifierForApplicationIdentifier:
queue
cacheLock
lock
cachedObjects
unlock
storeIdentifier
length
null
synchronousDaemonWithErrorHandler:
setObject:forKey:inStoreWithConfiguration:reply:
_handleCacheErrorForKey:
callbackQueue
arrayWithObjects:count:
logFaultIfNecessaryForError:
removeObjectForKey:inStoreWithConfiguration:reply:
objectForKey:inStoreWithConfiguration:reply:
analyticsQueue
dictionaryRepresentationForStoreWithConfiguration:reply:
dictionaryRepresentation
saveChangeToken:forStoreWithConfiguration:reply:
changeTokenForStoreWithConfiguration:reply:
needsChangeDictionaryFromDaemon
changeToken
changeDictionarySinceChangeToken:inStoreWithConfiguration:reply:
setNeedsChangeDictionaryFromDaemon:
processChangeDictionary:
setChangeToken:
setSyncingWithCloudCounter:
asyncDaemonWithErrorHandler:
synchronizeStoreWithConfiguration:completionHandler:
registerForChangeNotificationsForStoreWithConfiguration:reply:
daemonDidWake
processInfo
processName
bundleRecordForCurrentProcess
hasInitializedStoreWithIdentifier:
setHasInitializedStoreWithIdentifier:
containsObject:
didLogFaultForEntitlements
setDidLogFaultForEntitlements:
isSyncingWithCloud
initWithMachServiceName:options:
setInterruptionHandler:
setInvalidationHandler:
daemonProtocolInterface
setRemoteObjectInterface:
resume
synchronousRemoteObjectProxyWithErrorHandler:
processAccountChangesWithCompletionHandler:
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
storeDidChangeWithConfiguration:changeDictionary:reply:
setXpcConnection:
clientProtocolInterface
setExportedInterface:
initWithTarget:
setExportedObject:
xpcConnection
remoteObjectProxyWithErrorHandler:
setShouldSyncOnFirstInitializationOverride:
shouldSyncOnFirstInitializationOverride
storeType
setStoreConfiguration:
setQueue:
setCallbackQueue:
setAnalyticsQueue:
daemonWakeNotifyToken
setDaemonWakeNotifyToken:
setCachedObjects:
setCacheLock:
_didLogFaultForEntitlements
_needsChangeDictionaryFromDaemon
_daemonWakeNotifyToken
_storeConfiguration
_xpcConnection
_callbackQueue
_analyticsQueue
_cachedObjects
_cacheLock
_syncingWithCloudCounter
T@"SYDStoreConfiguration",&,N,V_storeConfiguration
T@"NSXPCConnection",&,N,V_xpcConnection
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_analyticsQueue
Ti,N,V_daemonWakeNotifyToken
TB,N,V_didLogFaultForEntitlements
TB,V_needsChangeDictionaryFromDaemon
T@"NSCache",&,N,V_cachedObjects
T@"NSLock",&,N,V_cacheLock
TB,R,N
TQ,V_syncingWithCloudCounter
T@"NSString",R,N
Tq,R,N
target
setTarget:
_target
T@"<SYDClientProtocol>",W,N,V_target
userPersonaUniqueString
personaUniqueString
appendFormat:
appendString:
setPersonaUniqueString:
setStoreID:
_storeID
_personaUniqueString
T@"SYDStoreID",&,N,V_storeID
T@"NSString",C,N,V_personaUniqueString
_useSourceSyncWithBlock:
_printDebugDescription
@44@0:8@16^{__CFString=}24^{__CFString=}32B40
@40@0:8@16^{__CFString=}24^{__CFString=}32
v16@0:8
@32@0:8@16@24
@24@0:8@16
v24@0:8@16
v32@0:8@16@?24
v40@0:8@16@24@?32
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_xpc_object>"
@"NSString"
v20@0:8B16
B16@0:8
@16@0:8
v24@0:8^{__CFDictionary=}16
^{__CFDictionary=}16@0:8
q24@0:8^{__CFString=}16
q16@0:8
@28@0:8^{__CFString=}16B24
@36@0:8^{__CFString=}16^{__CFString=}24B32
@40@0:8^{__CFString=}16^{__CFString=}24B32B36
@48@0:8^{__CFString=}16^{__CFString=}24B32B36^{__CFString=}40
@56@0:8^{__CFString=}16^{__CFString=}24B32B36^{__CFString=}40q48
@32@0:8@16^@24
^v24@0:8^{__CFString=}16
B40@0:8@16@24^@32
v32@0:8^v16^{__CFString=}24
v24@0:8@?16
C16@0:8
C20@0:8C16
@24@0:8^q16
v24@0:8q16
^{__CFArray=}16@0:8
@24@0:8^@16
^{__CFString=}
^{__CFURL=}
^{__CFDictionary=}
^{__CFSet=}
@"NSMutableDictionary"
@"SYDClient"
@"NSObject<OS_dispatch_source>"
@"NSObject<OS_os_transaction>"
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8@16q24
Q16@0:8
B24@0:8@16
i32@0:8q16@24
@24@0:8q16
v36@0:8i16@20q28
B24@0:8q16
v48@0:8@16@24@32@?40
v48@0:8@16@"NSString"24@"SYDStoreConfiguration"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"SYDStoreConfiguration"24@?<v@?@@"NSError">32
v40@0:8@"NSString"16@"SYDStoreConfiguration"24@?<v@?@"NSError">32
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSError">24
v40@0:8@"NSData"16@"SYDStoreConfiguration"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSData"@"NSError">24
v40@0:8@"NSData"16@"SYDStoreConfiguration"24@?<v@?@"NSError">32
v24@0:8@?<v@?@"NSError">16
v40@0:8@"SYDStoreConfiguration"16@"NSDictionary"24@?<v@?>32
v32@0:8@16@24
@24@0:8@?16
i16@0:8
v20@0:8i16
v24@0:8Q16
@"SYDStoreConfiguration"
@"NSXPCConnection"
@"NSCache"
@"NSLock"
@"<SYDClientProtocol>"
@"SYDStoreID"
@(#)PROGRAM:SyncedDefaults  PROJECT:SyncedDefaults-
com.apple.sydclient
com.apple.syncdefaultsd-sim
v16@?0@"NSObject<OS_xpc_object>"8
v8@?0
-[SYDClient _newMessageWithName:userInfo:]
SYDClient.m
name
message
userinfo
bundleIdentifier
storeIdentifier
additionalStore
error
domain
code
com.apple.syncdefaults
com.apple.kvs
Default
Scheduler
Trace
Reachability
Misc
CloudKit
CoreData
Connection
Analytics
Accounts
Migration
SYDRemotePreferencesSourceDidChangeNotification
SYDRemotePreferencesSourceConfigurationDidChangeNotification
SYDUbiquitousKeyValueStoreDidChangeExternallyNotification
maxKeyCount
maxKeyNameLen
maxKeyDataLen
maxKeyDataSum
CFFIXED_USER_HOME
SYDRemotePreferencesConfigurationDidChangeNotification
SYDRemotePreferencesSourceDidChangeExternally
com.apple.sydregistration
com.apple.sydprotection
com.apple.syd-remote-prefs.transaction
SYDRemotePreferencesSource.m
NSUbiquitousKeyValueStore: value is not property-list compatible: %@
NSUbiquitousKeyValueStore: key '%@' is too long.
NSUbiquitousKeyValueStore: CFPropertyListCreateDeepCopy failed -- out of memory?
values
changecount
initialsync
versionid
setDefaultsConfig
synchronizeRemote
trackSynchronizeRemote
v16@?0@"NSDictionary"8
changes
synchronize
com.apple.security.cloudkeychainproxy3
v32@?0@8@16^B24
discardJournalEntries
register
unregister
getConfiguration
ping
printDebugDescription
resetapps
migrate
parameter
Library/SyncedPreferences
%@-%@.plist
%@.plist
timestamp
value
remotevalue
KVSOnCloudKitForAll
SyncedDefaults
com.apple.sbd3
identifier
type
SYDStoreID.m
Trying to instantiate a %@ without an identifier
<%@: %p; identifier=%@ type=%d>
journal
count
change
-[SYDJournal addChange:forKey:changeCount:]
SYDJournal.m
!_readonly
-[SYDJournal removeChangesUntilChangeCount:]
Journal: %@
SYDClientToDaemonConnection.m
Must specify a store identifier when initializing %@
Must specify a store configuration when initializing %@
com.apple.kvs.client
com.apple.kvs.client.callback
com.apple.kvs.client.analytics
Please use -%@
<%@: %p; storeConfiguration=%@>
com.apple.developer.ubiquity-kvstore-identifier
com.apple.sbd
accountsd
com.apple.accounts
com.apple.finder
com.apple.accessibility.AccessibilityUIServer
com.apple.VoiceOverTouch
com.apple.TextInput.kbd
com.apple.inputmethod.kbd
com.apple.nanoweatherprefsd
com.apple.weather
com.apple.springboard
com.apple.backboardd
com.apple.datamigrator
com.apple.CoreSuggestions
com.apple.cmfsyncagent
com.apple.accessibility.heard
com.apple.HearingAids
com.apple.wifid
com.apple.wifid.known-networks
com.apple.coretelephony
com.apple.mediaaccessibilityd
com.apple.mediaaccessibility
com.apple.tipsd
com.apple.touristd
NSUbiquitousKeyValueStore key '%@' is longer than the maximum allowed size (%ld)
v16@?0@"NSError"8
v24@?0@8@"NSError"16
com.apple.kvs.cachedObjectForKey
keyHash
objectExistedInCache
@"NSDictionary"8@?0
 (from cache)
v24@?0@"NSDictionary"8@"NSError"16
v24@?0@"NSData"8@"NSError"16
NSUbiquitousKeyValueStoreDidChangeExternallyNotificationUserInfo
ChangeToken
com.apple.syncdefaultsd.daemon.wake
v12@?0i8
cfprefsd
com.apple.kvsd
v32@?0@"NSString"8@"NSNumber"16^B24
Expected non-nil XPC connection
Expected non-nil XPC connection queue
SYDStoreConfiguration.m
Must specify a non-nil storeID when initializing %@
Use -[%@ %@]
<%@: %p; storeID=%@
 personaUniqueString=%@
%@: %@
Can't get information on %@
v16@?0@"SYDRemotePreferencesSource"8
connection to SYD service went invalid
connection to SYD service interrupted
unexpected error connecting to SYD service
unexpected event connecting to SYD service
About to send message synchronously to server: %@
error sending message %@ to SYD server
no reply sending message %@ to SYD server
error unable to construct message from %@
got a reply from the SYD daemon,
message:%@,
reply:%@
About to send message with no reply to server: %@
About to send message to server: %@
Storing configuration: %@
Initializing %@ with applicationID=%@ storeID=%@
Forcing KVS-on-CloudKit for applicationID=%@ storeID=%@
Trying to initialize NSUbiquitousKeyValueStore without a store identifier. Please specify a store identifier in your entitlements or initializer.
URL for %@ (shared: %@ - contained: %@ - storeID: %@ - additionalSource: %@) is %@
NSUbiquitousKeyValueStore does not support empty keys
Bailing out for key in cache to %@
New dirtyKeys %@
Adding dirty key to %@ : %@
urlOnDisk:%@, hasDict:%d
Incorrect NSUbiquitousKeyValueStore journal change count: %lld - should be at least %lld
Detecting initial sync from server
No content for %@
Trash dirty keys %@
Write failure for %@
forced:%@, changeCount:%lld, result:%@
hasExternalChanges: %@
changeCount: %lld, hasExternalChanges: %@
changeCount: %lld, changes: %@
changeCount: %lld/%lld
NSUbiquitousKeyValueStore error: %@
Setting alwaysUseKVSOnCloudKit to %d
Received memory warning for KVS
Cache already empty
Recent KVS use, aborting %f
Dirty keys %@
Clearing cache
%@ notes accounts changed: %@
Reply from request to migrate %@ ubiquitous key value store: %@
Error sending request to synced defaults daemon to migrate %@ ubiquitous key value store: %@
SYDRemotePreferencesCreateURLForStorage %@ - %@
Initializing %@ with configuration %@ store <(%@)>
Deallocating daemon connection %@
Invalidating XPC connection for %@
Checking entitlements for KVS store identifier
Found entitlement for KVS store: %@
Unable to find entitlement for KVS store
Unable to get a SecTaskRef to check for KVS store entitlement
KVS store identifier (%@) for (%@) was inferred from a hardcoded list. Please specify a store identifier in your NSUbiquitousKeyValueStore initializer or in the %@ entitlement.
kvs/set-object
Setting object for key <(%{private, mask.hash}@)> = <(%{private, mask.hash}@)> in store <(%@)>
Not setting identical object for key <(%{private, mask.hash}@)> in store <(%@)>
Not setting identical nil value for key <(%{private, mask.hash}@)> in store <(%@)>
Caching object for key <(%{private, mask.hash}@)> after setting in store <(%@)>
Caching NSNull key <(%{private, mask.hash}@)> after setting to nil in store <(%@)>
Quota error saving (%{private}@)): %@
Did set object for key <(%{private, mask.hash}@)> in store <(%@)>
kvs/remove-object
Removing object for key <(%{private, mask.hash}@)> in store <(%@)>
Not removing already-nil object for key <(%{private, mask.hash}@)> from store <(%@)>
Caching NSNull for key <(%{private, mask.hash}@)> after removing it for store <(%@)>
Did remove object for key <(%{private, mask.hash}@)> in store <(%@)>
kvs/get-object
Getting object for key <(%{private, mask.hash}@)> in store <(%@)>
Found cached NSNull for key <(%{private, mask.hash}@)> in store <(%@)>
Found cached object for key <(%{private, mask.hash}@)> in store <(%@)>
Caching object for key <(%{private, mask.hash}@)> from daemon in store <(%@)>
Caching NSNull for key <(%{private, mask.hash}@)> from daemon in store <(%@)>
Returning object%@ for key <(%{private, mask.hash}@)> = <(%{private, mask.hash}@)> in store <(%@)>
kvs/dictionary-representation
Getting dictionary representation for store <(%@)>
Caching object from dictionary representation for key <(%{private, mask.hash}@)> in store <(%@)>
Returning dictionary representation for store <%@>: %{private}@
kvs/save-change-token
Saving change token to daemon for %@
Error saving change token to daemon: %@
Saved change token to daemon
kvs/get-change-token
Getting change token from daemon for %@
Error getting change token from daemon: %@
Got change token from daemon
kvs/synchronize
Not getting change dictionary from the daemon because we don't need to
Synchronizing for store <(%@)>
Received change dictionary from daemon for %@
Did not receive change dictionary from daemon for %@
Invalidating cached value for changed key <(%{private, mask.hash}@)>
On queue posting change notification for %@ with reason=%@ and %ld changed key(s)
kvs/cloud-sync
Synchronizing with cloud for store <(%@)> %@
Error synchronizing with cloud for store <(%@)>: %@
Done synchronizing with cloud for store <(%@)>
kvs/register
Registering for change notifications
Error getting proxy to register: %@
Error registering for change notifications: %@
Finished registering for change notifications
kvs/ping
Pinged from daemon. IT'S ALIVE!!!
Not performing initial sync in cfprefsd
Not performing initial sync for store <(%@)> because we're not in an app
Not performing initial sync for store <(%@)> because we've already initialized it
Performing initial sync for store <(%@)>
Done performing initial sync for store <(%@)>
BUG IN CLIENT OF KVS: Tried to access NSUbiquitousKeyValueStore '%@' without the proper entitlements. If your process is not entitled to access this store, then any attempts to get data will return nil, and any attempts to set data will be ignored. Please add the proper entitlements to access this store, or stop trying to access it in an unentitled process.
BUG IN CLIENT OF KVS: Tried to access encrypted store '%@' before first unlock. When this fault occurs, NSUbiquitousKeyValueStore is about to return a nil value for any key you just asked for, even if there
s data in the store for that key. Depending on what might be done with that return value, this could result in data loss.
BUG IN CLIENT OF KVS: Tried to access NSUbiquitousKeyValueStore without being able to mach-lookup `com.apple.kvsd`. Please allow mach-lookup for `com.apple.kvsd` in your sandbox profile or entitlements.
kvs/store-did-change
Received storeDidChange for store <(%@)>
Waiting to process change dictionary until the end of the cloud sync
Received storeDidChange for store that is not our store: self.configuration=%@ configuration=%@
kvs/process-account-changes
Telling daemon to process account changes
Account change XPC connection was interrupted
Account change XPC connection was invalidated
Error obtaining asynchronous remote object proxy to process account changes: %@
Failed to tell daemon to process account changes: %@
Finished telling daemon to process account changes
Creating new XPC connection
XPC connection was interrupted
XPC connection was invalidated
Error obtaining synchronous remote object proxy: %@
Error obtaining asynchronous remote object proxy: %@
SYDClient
SYDRemotePreferencesSource
SYDManagement
SYDStoreID
NSCopying
NSSecureCoding
NSCoding
SYDJournal
SYDDaemonProtocol
SYDClientProtocol
SYDClientToDaemonConnection
SYDClientProtocolProxy
SYDStoreConfiguration
SYDDebug
init
copy
initWithQueue:bundleIdentifier:storeIdentifier:additionalSource:
_resetConnection
dictionary
initWithObjectsAndKeys:
setObject:forKey:
numberWithBool:
_createConnectionIfNecessary
objectForKey:
stringWithUTF8String:
dictionaryWithObjects:forKeys:count:
initWithDomain:code:userInfo:
integerValue
errorWithDomain:code:userInfo:
_newMessageWithName:userInfo:
_sendMessageNoReply:
_sendMessageWithReplySync:
_sendMessage:replyHandler:
initWithQueue:bundleIdentifier:storeIdentifier:
shutdown
sendMessageWithName:
sendMessageWithName:userInfo:
sendMessageWithName:replyHandler:
sendMessageWithName:userInfo:replyHandler:
.cxx_destruct
_queue
_connection
_bundleIdentifier
_storeIdentifier
_additionalSource
numberWithUnsignedInteger:
unsignedIntegerValue
configurationValueForKey:
initWithApplicationID:storeID:shared:additionalSource:containerPath:
initWithApplicationID:storeID:shared:additionalSource:containerPath:storeType:
alwaysUseKVSOnCloudKit
defaultStoreIdentifierForCurrentProcessWithApplicationIdentifier:
initWithStoreIdentifier:type:
_createMemoryWarningSource
setCache:
dealloc
getValueForKey:
_locked_syd_start_transaction
_synchronizeForced:
_locked_syd_end_transaction
setValue:forKey:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
maximumKeyLength
initWithContentsOfURL:
initWithStore:
changesSinceChangeCount:
maximumChangeCount
mutableCopy
addEntriesFromDictionary:
longLongValue
allKeys
initWithMutableStore:
keyEnumerator
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
isEqual:
addChange:forKey:changeCount:
removeObject:
_forceRegistrationNow
_cachePlistFromDisk
numberWithLongLong:
mainBundle
bundleIdentifier
isEqualToString:
count
intValue
initWithInt:
addObject:
enumerateKeysAndObjectsUsingBlock:
copyDictionary
_storeConfiguration:
boolValue
_warningSource
_didReceiveMemoryWarning
description
initialize
setAlwaysUseKVSOnCloudKit:
SYDRemotePreferencesSourceDidChangeNotification
SYDRemotePreferencesSourceConfigurationDidChangeNotification
SYDUbiquitousKeyValueStoreDidChangeExternallyNotification
TB,N
copyConfigurationDictionary
maximumKeyCount
maximumDataLengthPerKey
maximumTotalDataLength
initWithApplicationID:shared:
initWithApplicationID:storeID:shared:
initWithApplicationID:storeID:shared:additionalSource:
objectForKey:error:
setObject:forKey:error:
setDefaultsConfiguration:
scheduleRemoteSynchronization
synchronizationWithCompletionHandler:
synchronize
synchronizeForced:
isInitialSync
hasExternalChanges
copyExternalChangesWithChangeCount:
discardExternalChangesForChangeCount:
copyKeyList
dictionaryRepresentationWithError:
generationCount
registerForSynchronizedDefaults
unregisterForSynchronizedDefaults
updateConfiguration
ping
serverSideDebugDescription
_generationCount
_lastGenerationFromDisk
_preferenceID
_urlOnDisk
_cache
_storageChangeCount
_initialSyncChangeCount
_isInitialSync
_dirtyKeys
_configurationDictionary
_externalChanges
_client
_registrationBlock
_registrationQueue
_protectionQueue
_memoryWarningSourceEnabled
_memoryWarningSource
_lastAccess
_forceNextSynchronization
_isExecutingForClient
firstObject
dictionaryWithObject:forKey:
resetAllApplicationsWithCompletionHandler:
noteAccountChanges:
migrateSyncedDefaultsForBundleIdentifier:
defaultCenter
postNotificationName:object:userInfo:
initWithUTF8String:
domain
code
localizedDescription
userInfo
setObject:forKeyedSubscript:
numberWithInteger:
type
URLByAppendingPathComponent:isDirectory:
identifier
URLByAppendingPathComponent:
defaultManager
stringWithFileSystemRepresentation:length:
fileURLWithPath:
URLForDirectory:inDomain:appropriateForURL:create:error:
raise:format:
containerIdentifier
environment
stringWithFormat:
stringByAppendingPathExtension:
initWithContainerIdentifier:environment:
handleFailureInFunction:file:lineNumber:description:
initWithZoneName:ownerName:
initWithRecordName:zoneID:
currentPersona
isDataSeparatedPersona
copyCurrentPersonaContextWithError:
generateAndRestorePersonaContextWithPersonaUniqueString:
restorePersonaWithSavedPersonaContext:
setWithObjects:
objectAtIndexedSubscript:
enumerateObjectsUsingBlock:
hash
isMemberOfClass:
allocWithZone:
initWithIdentifier:type:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
encodeObject:forKey:
encodeInteger:forKey:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
setIdentifier:
setType:
_identifier
_type
T@"NSString",C,N,V_identifier
Tq,N,V_type
removeObjectForKey:
initWithLongLong:
changeSinceChangeCount:forKey:
removeChangesUntilChangeCount:
_store
_journal
_readonly
initWithStoreID:
initWithStoreConfiguration:
storeID
registerForDaemonDidWakeNotifications
performInitialSyncIfNecessary
storeConfiguration
suspend
invalidate
syncingWithCloudCounter
disgustingUglyHardcodedKnownStoreIdentifierForApplicationIdentifier:
queue
cacheLock
lock
cachedObjects
unlock
storeIdentifier
length
null
synchronousDaemonWithErrorHandler:
setObject:forKey:inStoreWithConfiguration:reply:
_handleCacheErrorForKey:
callbackQueue
arrayWithObjects:count:
logFaultIfNecessaryForError:
removeObjectForKey:inStoreWithConfiguration:reply:
objectForKey:inStoreWithConfiguration:reply:
analyticsQueue
dictionaryRepresentationForStoreWithConfiguration:reply:
dictionaryRepresentation
saveChangeToken:forStoreWithConfiguration:reply:
changeTokenForStoreWithConfiguration:reply:
needsChangeDictionaryFromDaemon
changeToken
changeDictionarySinceChangeToken:inStoreWithConfiguration:reply:
setNeedsChangeDictionaryFromDaemon:
processChangeDictionary:
setChangeToken:
setSyncingWithCloudCounter:
asyncDaemonWithErrorHandler:
synchronizeStoreWithConfiguration:completionHandler:
registerForChangeNotificationsForStoreWithConfiguration:reply:
daemonDidWake
processInfo
processName
bundleRecordForCurrentProcess
hasInitializedStoreWithIdentifier:
setHasInitializedStoreWithIdentifier:
containsObject:
didLogFaultForEntitlements
setDidLogFaultForEntitlements:
isSyncingWithCloud
initWithMachServiceName:options:
setInterruptionHandler:
setInvalidationHandler:
daemonProtocolInterface
setRemoteObjectInterface:
resume
synchronousRemoteObjectProxyWithErrorHandler:
processAccountChangesWithCompletionHandler:
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
storeDidChangeWithConfiguration:changeDictionary:reply:
setXpcConnection:
clientProtocolInterface
setExportedInterface:
initWithTarget:
setExportedObject:
xpcConnection
remoteObjectProxyWithErrorHandler:
setShouldSyncOnFirstInitializationOverride:
shouldSyncOnFirstInitializationOverride
storeType
setStoreConfiguration:
setQueue:
setCallbackQueue:
setAnalyticsQueue:
daemonWakeNotifyToken
setDaemonWakeNotifyToken:
setCachedObjects:
setCacheLock:
_didLogFaultForEntitlements
_needsChangeDictionaryFromDaemon
_daemonWakeNotifyToken
_storeConfiguration
_xpcConnection
_callbackQueue
_analyticsQueue
_cachedObjects
_cacheLock
_syncingWithCloudCounter
T@"SYDStoreConfiguration",&,N,V_storeConfiguration
T@"NSXPCConnection",&,N,V_xpcConnection
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_analyticsQueue
Ti,N,V_daemonWakeNotifyToken
TB,N,V_didLogFaultForEntitlements
TB,V_needsChangeDictionaryFromDaemon
T@"NSCache",&,N,V_cachedObjects
T@"NSLock",&,N,V_cacheLock
TB,R,N
TQ,V_syncingWithCloudCounter
T@"NSString",R,N
Tq,R,N
target
setTarget:
_target
T@"<SYDClientProtocol>",W,N,V_target
userPersonaUniqueString
personaUniqueString
appendFormat:
appendString:
setPersonaUniqueString:
setStoreID:
_storeID
_personaUniqueString
T@"SYDStoreID",&,N,V_storeID
T@"NSString",C,N,V_personaUniqueString
_useSourceSyncWithBlock:
_printDebugDescription
@44@0:8@16^{__CFString=}24^{__CFString=}32B40
@40@0:8@16^{__CFString=}24^{__CFString=}32
v16@0:8
@32@0:8@16@24
@24@0:8@16
v24@0:8@16
v32@0:8@16@?24
v40@0:8@16@24@?32
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_xpc_object>"
@"NSString"
v20@0:8B16
B16@0:8
@16@0:8
v24@0:8^{__CFDictionary=}16
^{__CFDictionary=}16@0:8
q24@0:8^{__CFString=}16
q16@0:8
@28@0:8^{__CFString=}16B24
@36@0:8^{__CFString=}16^{__CFString=}24B32
@40@0:8^{__CFString=}16^{__CFString=}24B32B36
@48@0:8^{__CFString=}16^{__CFString=}24B32B36^{__CFString=}40
@56@0:8^{__CFString=}16^{__CFString=}24B32B36^{__CFString=}40q48
@32@0:8@16^@24
^v24@0:8^{__CFString=}16
B40@0:8@16@24^@32
v32@0:8^v16^{__CFString=}24
v24@0:8@?16
C16@0:8
C20@0:8C16
@24@0:8^q16
v24@0:8q16
^{__CFArray=}16@0:8
@24@0:8^@16
^{__CFString=}
^{__CFURL=}
^{__CFDictionary=}
^{__CFSet=}
@"NSMutableDictionary"
@"SYDClient"
@"NSObject<OS_dispatch_source>"
@"NSObject<OS_os_transaction>"
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8@16q24
Q16@0:8
B24@0:8@16
i32@0:8q16@24
@24@0:8q16
v36@0:8i16@20q28
B24@0:8q16
v48@0:8@16@24@32@?40
v48@0:8@16@"NSString"24@"SYDStoreConfiguration"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"SYDStoreConfiguration"24@?<v@?@@"NSError">32
v40@0:8@"NSString"16@"SYDStoreConfiguration"24@?<v@?@"NSError">32
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSError">24
v40@0:8@"NSData"16@"SYDStoreConfiguration"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSData"@"NSError">24
v40@0:8@"NSData"16@"SYDStoreConfiguration"24@?<v@?@"NSError">32
v24@0:8@?<v@?@"NSError">16
v40@0:8@"SYDStoreConfiguration"16@"NSDictionary"24@?<v@?>32
v32@0:8@16@24
@24@0:8@?16
i16@0:8
v20@0:8i16
v24@0:8Q16
@"SYDStoreConfiguration"
@"NSXPCConnection"
@"NSCache"
@"NSLock"
@"<SYDClientProtocol>"
@"SYDStoreID"
