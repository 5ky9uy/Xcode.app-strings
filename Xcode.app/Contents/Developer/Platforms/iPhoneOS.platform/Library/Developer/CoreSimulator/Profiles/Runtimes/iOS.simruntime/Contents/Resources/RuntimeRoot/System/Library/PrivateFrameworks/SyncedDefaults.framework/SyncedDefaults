@(#)PROGRAM:SyncedDefaults  PROJECT:SyncedDefaults-
com.apple.kvs
v8@?0
Misc
CloudKit
CoreData
Connection
Analytics
Accounts
Migration
AccessorSignposts
SyncSignposts
SYDRemotePreferencesSourceDidChangeNotification
SYDRemotePreferencesSourceConfigurationDidChangeNotification
SYDUbiquitousKeyValueStoreDidChangeExternallyNotification
SYDRemotePreferencesSource.m
Trying to call %s on invalid class %@
-[SYDRemotePreferencesSource objectForKey:error:]
-[SYDRemotePreferencesSource getValueForKey:]
-[SYDRemotePreferencesSource setObject:forKey:error:]
-[SYDRemotePreferencesSource setValue:forKey:]
-[SYDRemotePreferencesSource setDefaultsConfiguration:]
-[SYDRemotePreferencesSource scheduleRemoteSynchronization]
-[SYDRemotePreferencesSource synchronizationWithCompletionHandler:]
SyncedDefaults
Trying to call a method on an invalid object.
-[SYDRemotePreferencesSource synchronize]
-[SYDRemotePreferencesSource synchronizeForced:]
-[SYDRemotePreferencesSource _synchronizeForced:]
-[SYDRemotePreferencesSource hasExternalChanges]
-[SYDRemotePreferencesSource copyDictionary]
-[SYDRemotePreferencesSource registerForSynchronizedDefaults]
-[SYDRemotePreferencesSource unregisterForSynchronizedDefaults]
-[SYDRemotePreferencesSource updateConfiguration]
-[SYDRemotePreferencesSource ping]
NoEncryption
EndToEndEncryption
EndToEndEncryptionAllPlatforms
Unknown
com.apple.security.cloudkeychainproxy3
com.apple.sbd3
identifier
type
persona
SYDStoreID.m
Trying to instantiate a %@ without an identifier
<%@: %p; identifier=%@ type=%@
 persona=%@
SYDClientToDaemonConnection.m
Trying to initialize NSUbiquitousKeyValueStore without a store identifier. Please specify your store identifier in the '%@' entitlement.
com.apple.developer.ubiquity-kvstore-identifier
Must specify a store configuration when initializing %@
com.apple.kvs.client
com.apple.kvs.client.callback
com.apple.kvs.client.analytics
Please use -%@
<%@: %p; storeConfiguration=%@>
v16@?0@"NSError"8
v24@?0@"NSArray"8@"NSError"16
com.apple.sbd
accountsd
com.apple.accounts
com.apple.finder
com.apple.VoiceOverTouch
com.apple.TextInput.kbd
com.apple.inputmethod.kbd
com.apple.nanoweatherprefsd
com.apple.weather
com.apple.springboard
com.apple.backboardd
com.apple.datamigrator
com.apple.CoreSuggestions
com.apple.cmfsyncagent
com.apple.accessibility.heard
com.apple.HearingAids
com.apple.wifid
com.apple.wifid.known-networks
com.apple.coretelephony
com.apple.mediaaccessibilityd
com.apple.mediaaccessibility
com.apple.tipsd
com.apple.touristd
NSUbiquitousKeyValueStore key '%@' is longer than the maximum allowed size (%ld)
v24@?0@8@"NSError"16
com.apple.kvs.cachedObjectForKey
keyHash
storeIdentifier
objectExistedInCache
@"NSDictionary"8@?0
 (from cache)
v24@?0@"NSDictionary"8@"NSError"16
v32@?0@8@16^B24
v24@?0@"NSData"8@"NSError"16
Invalid key parameter provided
NSUbiquitousKeyValueStoreDidChangeExternallyNotificationUserInfo
ChangeToken
v12@?0B8
com.apple.kvsd
com.apple.syncdefaultsd.daemon.wake
v12@?0i8
UIApplicationWillEnterForegroundNotification
cfprefsd
v32@?0@"NSString"8@"NSNumber"16^B24
Expected non-nil XPC connection
Expected non-nil XPC connection queue
SYDStoreConfiguration.m
Must specify a non-nil storeID when initializing %@
Use -[%@ %@]
<%@: %p; storeID=%@
Initializing %@ with applicationID=%@ storeID=%@
BUG IN CLIENT OF KVS: Trying to initialize NSUbiquitousKeyValueStore without a store identifier. Please specify a store identifier in your entitlements or initializer.
Initializing %@ with configuration %@ store <(%@)>
Deallocating daemon connection %@
Invalidating XPC connection for %@
kvs/all-store-identifiers
Error obtaining synchronous remote object proxy to process account changes: %@
Checking entitlements for KVS store identifier
Found entitlement for KVS store: %@
Unable to find entitlement for KVS store
Unable to get a SecTaskRef to check for KVS store entitlement
BUG IN CLIENT OF KVS: KVS store identifier (%@) for (%@) was inferred from a hardcoded list. Please specify a store identifier in your NSUbiquitousKeyValueStore initializer or in the %@ entitlement.
kvs/set-object
StoreIdentifier=%{signpost.description:attribute}s Key=%{signpost.description:attribute}s
SetObject
Setting object for key <(%{private, mask.hash}@)> = <(%{private, mask.hash}@)> in store <(%@)>
Not setting identical object for key <(%{private, mask.hash}@)> in store <(%@)>
Not setting identical nil value for key <(%{private, mask.hash}@)> in store <(%@)>
Caching object for key <(%{private, mask.hash}@)> after setting in store <(%@)>
Caching NSNull key <(%{private, mask.hash}@)> after setting to nil in store <(%@)>
Quota error saving (%{private}@)): %@
Did set object for key <(%{private, mask.hash}@)> in store <(%@)>
kvs/remove-object
Removing object for key <(%{private, mask.hash}@)> in store <(%@)>
Not removing already-nil object for key <(%{private, mask.hash}@)> from store <(%@)>
Caching NSNull for key <(%{private, mask.hash}@)> after removing it for store <(%@)>
Did remove object for key <(%{private, mask.hash}@)> in store <(%@)>
RemoveObject
kvs/get-object
Getting object for key <(%{private, mask.hash}@)> in store <(%@)>
Found cached NSNull for key <(%{private, mask.hash}@)> in store <(%@)>
Found cached object for key <(%{private, mask.hash}@)> in store <(%@)>
Caching object for key <(%{private, mask.hash}@)> from daemon in store <(%@)>
Caching NSNull for key <(%{private, mask.hash}@)> from daemon in store <(%@)>
Returning object%@ for key <(%{private, mask.hash}@)> = <(%{private, mask.hash}@)> in store <(%@)>
GetObject
kvs/dictionary-representation
StoreIdentifier=%{signpost.description:attribute}s
Getting dictionary representation for store <(%@)>
Caching object from dictionary representation for key <(%{private, mask.hash}@)> in store <(%@)>
Returning dictionary representation for store <%@>: %{private}@
GetDictionaryRepresentation
kvs/save-change-token
Saving change token to daemon for %@
Error saving change token to daemon: %@
Saved change token to daemon
kvs/get-change-token
Getting change token from daemon for %@
Error getting change token from daemon: %@
Got change token from daemon
kvs/synchronize
Not getting change dictionary from the daemon because we don't need to
Synchronizing for store <(%@)>
Received change dictionary from daemon for %@
Did not receive change dictionary from daemon for %@
Invalidating cached value for changed key <(%{private, mask.hash}@)>
On queue posting change notification for %@ with reason=%@ and %ld changed key(s)
kvs/cloud-sync
StoreIdentifier=%{signpost.description:attribute}s enableTelemetry=YES 
Synchronizing with cloud for store <(%@)> %@
Error synchronizing with cloud for store <(%@)>: %@
Done synchronizing with cloud for store <(%@)>
Sync
kvs/cloud-sync-multiple
Stores=%{signpost.description:attribute}s enableTelemetry=YES 
Synchronizing stores of type %@ with the cloud: %@
Error obtaining remote object proxy for syncing multiple stores: %@
Error synchronizing multiple stores with cloud: %@
BUG IN CLIENT OF KVS: Tried to sync multiple stores, but not entitled for all of them: %@
Done synchronizing with cloud for stores: %@
SyncMultiple
kvs/is-cloud-sync-enabled
Setting cloud sync to enabled for store: %@
Setting cloud sync to disabled for store: %@
Cloud sync XPC connection was interrupted
Cloud sync XPC connection was invalidated
kvs/register
Registering for change notifications
Error getting proxy to register: %@
Error registering for change notifications: %@
Finished registering for change notifications
kvs/ping
Pinged from daemon. IT'S ALIVE!!!
Registering for UI change notifications on iPhone / tvOS
Performing moved to foreground sync for store <(%@)>
Completed foreground move triggered sync for store <(%@)>
Not performing initial sync in cfprefsd
Not performing initial sync for store <(%@)> because we're not in an app
Not performing initial sync for store <(%@)> because we've already initialized it
Performing initial sync for store <(%@)>
Done performing initial sync for store <(%@)>
BUG IN CLIENT OF KVS: Tried to access NSUbiquitousKeyValueStore '%@' without the proper entitlements. If your process is not entitled to access this store, then any attempts to get data will return nil, and any attempts to set data will be ignored. Please add the proper entitlements to access this store, or stop trying to access it in an unentitled process.
BUG IN CLIENT OF KVS: Tried to access encrypted store '%@' before first unlock. When this fault occurs, NSUbiquitousKeyValueStore is about to return a nil value for any key you just asked for, even if there
s data in the store for that key. Depending on what might be done with that return value, this could result in data loss.
BUG IN KVS: Tried to access store that is unknown to the system (%{public}@). Please send this bug to NSUbiquitousKeyValueStore.
BUG IN CLIENT OF KVS: %{public}@
BUG IN CLIENT OF KVS: Tried to access NSUbiquitousKeyValueStore without being able to mach-lookup `com.apple.kvsd`. Please allow mach-lookup for `com.apple.kvsd` in your sandbox profile or entitlements.
kvs/store-did-change
Received storeDidChange for store <(%@)>
Waiting to process change dictionary until the end of the cloud sync
Received storeDidChange for store that is not our store: self.configuration=%@ configuration=%@
kvs/process-account-changes
Telling daemon to process account changes
Error obtaining asynchronous remote object proxy to process account changes: %@
Failed to tell daemon to process account changes: %@
Finished telling daemon to process account changes
Creating new XPC connection
XPC connection was interrupted
XPC connection was invalidated
Error obtaining synchronous remote object proxy: %@
Error obtaining asynchronous remote object proxy: %@
SYDRemotePreferencesSource
SYDManagement
SYDStoreID
NSCopying
NSSecureCoding
NSCoding
SYDDaemonProtocol
SYDClientProtocol
SYDClientToDaemonConnection
SYDClientProtocolProxy
SYDStoreConfiguration
T@"NSCache",&,N,V_cachedObjects
SYDRemotePreferencesSourceConfigurationDidChangeNotification
_target
SYDUbiquitousKeyValueStoreDidChangeExternallyNotification
containsObject:
T@"NSLock",&,N,V_cacheLock
getValueForKey:
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
maximumKeyCount
T@"NSString",C,N,V_identifier
numberWithBool:
T@"NSString",C,N,V_processName
removeObserver:
T@"NSXPCConnection",&,N,V_xpcConnection
setChangeToken:
T@"SYDStoreID",&,N,V_storeID
setWithObjects:
TB,R
storeIdentifier
TB,V_needsChangeDictionaryFromDaemon
suspend
.cxx_destruct
_analyticsQueue
SYDRemotePreferencesSourceDidChangeNotification
allKeys
T@"<SYDClientProtocol>",W,N,V_target
dealloc
T@"NSObject<OS_dispatch_queue>",&,N,V_analyticsQueue
initWithTarget:
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
needsChangeDictionaryFromDaemon
T@"NSString",C,N,V_personaUniqueString
registerForSynchronizedDefaults
T@"NSString",R,N
T@"SYDStoreConfiguration",&,N,V_storeConfiguration
setProcessName:
TB,N,V_didLogFaultForEntitlements
storeID
TB,R,N
stringByAppendingPathExtension:
TQ,V_syncingWithCloudCounter
Ti,N,V_daemonWakeNotifyToken
Tq,N,V_type
Tq,R,N
URLByAppendingPathComponent:
URLByAppendingPathComponent:isDirectory:
URLForDirectory:inDomain:appropriateForURL:create:error:
URLHostAllowedCharacterSet
UTF8String
___For_some_reason_NSUbiquitousKeyValueStore_thinks_you_dont_exist___
___NSUbiquitousKeyValueStore_isnt_sure_exactly_what_you_did_but_it_was_invalid___:
___You_are_about_to_lose_data_in_NSUbiquitousKeyValueStore___
___You_are_not_entitled_for_NSUbiquitousKeyValueStore___
___You_think_you_can_just_XPC_into_any_process_all_willy_nilly_well_think_again___
_cacheLock
_cachedObjects
_callbackQueue
_clearCachedObjects
_daemonWakeNotifyToken
_didLogFaultForEntitlements
_handleCacheErrorForKey:
_identifier
_needsChangeDictionaryFromDaemon
_personaUniqueString
_processName
_queue
_storeConfiguration
_storeID
_synchronizeForced:
_syncingWithCloudCounter
_type
_xpcConnection
addObject:
addObserver:selector:name:object:
allStoreIdentifiersWithCompletionHandler:
allStoreIdentifiersWithError:
allocWithZone:
analyticsQueue
appendFormat:
appendString:
applicationWillEnterForeground
arrayWithObjects:count:
asyncDaemonWithErrorHandler:
cacheLock
cachedObjects
callbackQueue
changeDictionarySinceChangeToken:inStoreWithConfiguration:reply:
changeToken
changeTokenForStoreWithConfiguration:reply:
clientProtocolInterface
code
componentsJoinedByString:
containerIdentifier
copy
copyCurrentPersonaContextWithError:
copyDictionary
copyExternalChangesWithChangeCount:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
currentHandler
currentPersona
currentProcess
daemonDidWake
daemonProtocolInterface
daemonWakeNotifyToken
decodeIntegerForKey:
decodeObjectOfClass:forKey:
defaultCenter
defaultManager
defaultStoreIdentifierForCurrentProcessWithApplicationIdentifier:
description
dictionary
dictionaryRepresentation
dictionaryRepresentationForStoreWithConfiguration:reply:
dictionaryRepresentationWithError:
dictionaryWithObjects:forKeys:count:
didLogFaultForEntitlements
discardExternalChangesForChangeCount:
disgustingUglyHardcodedKnownStoreIdentifierForApplicationIdentifier:
domain
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
environment
errorWithDomain:code:userInfo:
fileURLWithPath:
generateAndRestorePersonaContextWithPersonaUniqueString:
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
hasExternalChanges
hasInitializedStoreWithIdentifier:
hash
identifier
init
initWithApplicationID:shared:
initWithApplicationID:storeID:shared:
initWithApplicationID:storeID:shared:additionalSource:
initWithApplicationID:storeID:shared:additionalSource:containerPath:
initWithApplicationID:storeID:shared:additionalSource:containerPath:storeType:
initWithCoder:
initWithContainerIdentifier:environment:
initWithDomain:code:userInfo:
initWithIdentifier:type:
initWithMachServiceName:options:
initWithRecordName:zoneID:
initWithStoreConfiguration:
initWithStoreID:
initWithStoreIdentifier:type:
initWithZoneName:ownerName:
integerValue
interfaceWithProtocol:
invalidate
isApplication
isCloudSyncUserDefaultEnabledForStoreIdentifier:
isCloudSyncUserDefaultEnabledForStoreIdentifier:completionHandler:
isDataSeparatedPersona
isEqual:
isEqualToString:
isMemberOfClass:
isSyncingWithCloud
length
localizedDescription
lock
logFaultIfNecessaryForError:
maximumDataLengthPerKey
maximumKeyLength
maximumTotalDataLength
migrateSyncedDefaultsForBundleIdentifier:
newXPCConnection
null
numberWithInteger:
numberWithUnsignedInteger:
objectAtIndexedSubscript:
objectForKey:
objectForKey:error:
objectForKey:inStoreWithConfiguration:reply:
objectForKeyedSubscript:
performInitialSyncIfNecessary
personaUniqueString
ping
postNotificationName:object:userInfo:
processAccountChangesWithCompletionHandler:
processChangeDictionary:
processInfo
processName
queue
raise:format:
registerForApplicationLifecycleEvents
registerForChangeNotificationsForStoreWithConfiguration:reply:
registerForDaemonDidWakeNotifications
remoteObjectProxyWithErrorHandler:
removeAllObjects
removeObjectForKey:
removeObjectForKey:inStoreWithConfiguration:reply:
restorePersonaWithSavedPersonaContext:
resume
saveChangeToken:forStoreWithConfiguration:reply:
scheduleRemoteSynchronization
setAnalyticsQueue:
setCacheLock:
setCachedObjects:
setCallbackQueue:
setClasses:forSelector:argumentIndex:ofReply:
setCloudSyncUserDefaultEnabled:storeIdentifier:
setDaemonWakeNotifyToken:
setDefaultsConfiguration:
setDidLogFaultForEntitlements:
setExportedInterface:
setExportedObject:
setHasInitializedStoreWithIdentifier:
setIdentifier:
setInterruptionHandler:
setInvalidationHandler:
setNeedsChangeDictionaryFromDaemon:
setObject:forKey:
setObject:forKey:error:
setObject:forKey:inStoreWithConfiguration:reply:
setObject:forKeyedSubscript:
setPersonaUniqueString:
setQueue:
setRemoteObjectInterface:
setShouldSyncOnFirstInitializationOverride:
setStoreConfiguration:
setStoreID:
setSyncingWithCloudCounter:
setTarget:
setType:
setValue:forKey:
setXpcConnection:
shouldSyncOnFirstInitializationOverride
storeConfiguration
storeDidChangeWithStoreID:changeDictionary:reply:
storeType
stringByAddingPercentEncodingWithAllowedCharacters:
stringByAppendingFormat:
stringWithFileSystemRepresentation:length:
stringWithFormat:
stringWithUTF8String:
supportsSecureCoding
synchronizationWithCompletionHandler:
synchronize
synchronizeForced:
synchronizeStoreWithConfiguration:completionHandler:
synchronizeStoresWithIdentifiers:type:completionHandler:
synchronousDaemonWithErrorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
syncingWithCloudCounter
target
type
unlock
unregisterForSynchronizedDefaults
updateConfiguration
userInfo
userPersonaUniqueString
validateKey:error:
xpcConnection
@16@0:8
q16@0:8
@28@0:8^{__CFString=}16B24
@36@0:8^{__CFString=}16^{__CFString=}24B32
@40@0:8^{__CFString=}16^{__CFString=}24B32B36
@48@0:8^{__CFString=}16^{__CFString=}24B32B36^{__CFString=}40
@56@0:8^{__CFString=}16^{__CFString=}24B32B36^{__CFString=}40q48
v16@0:8
@32@0:8@16^@24
^v24@0:8^{__CFString=}16
B40@0:8@16@24^@32
v32@0:8^v16^{__CFString=}24
v24@0:8@16
v24@0:8@?16
C16@0:8
C20@0:8C16
@24@0:8^q16
v24@0:8q16
@24@0:8^@16
^{__CFDictionary=}16@0:8
B16@0:8
@24@0:8^{_NSZone=}16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8@16q24
Q16@0:8
B24@0:8@16
@"NSString"
v48@0:8@16@24@32@?40
v40@0:8@16@24@?32
v32@0:8@16@?24
v40@0:8@16q24@?32
v28@0:8B16@20
v48@0:8@16@"NSString"24@"SYDStoreConfiguration"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"SYDStoreConfiguration"24@?<v@?@@"NSError">32
v40@0:8@"NSString"16@"SYDStoreConfiguration"24@?<v@?@"NSError">32
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSError">24
v40@0:8@"NSData"16@"SYDStoreConfiguration"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSData"@"NSError">24
v40@0:8@"NSData"16@"SYDStoreConfiguration"24@?<v@?@"NSError">32
v40@0:8@"NSArray"16q24@?<v@?@"NSError">32
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSString"16@?<v@?B>24
v28@0:8B16@"NSString"20
v24@0:8@?<v@?@"NSArray"@"NSError">16
v40@0:8@"SYDStoreID"16@"NSDictionary"24@?<v@?>32
v32@0:8@16@24
B32@0:8@16^@24
@24@0:8@?16
i16@0:8
v20@0:8i16
v20@0:8B16
v24@0:8Q16
@"SYDStoreConfiguration"
@"NSXPCConnection"
@"NSObject<OS_dispatch_queue>"
@"NSCache"
@"NSLock"
@"<SYDClientProtocol>"
@"SYDStoreID"
@(#)PROGRAM:SyncedDefaults  PROJECT:SyncedDefaults-
com.apple.kvs
v8@?0
Misc
CloudKit
CoreData
Connection
Analytics
Accounts
Migration
AccessorSignposts
SyncSignposts
SYDRemotePreferencesSourceDidChangeNotification
SYDRemotePreferencesSourceConfigurationDidChangeNotification
SYDUbiquitousKeyValueStoreDidChangeExternallyNotification
SYDRemotePreferencesSource.m
Trying to call %s on invalid class %@
-[SYDRemotePreferencesSource objectForKey:error:]
-[SYDRemotePreferencesSource getValueForKey:]
-[SYDRemotePreferencesSource setObject:forKey:error:]
-[SYDRemotePreferencesSource setValue:forKey:]
-[SYDRemotePreferencesSource setDefaultsConfiguration:]
-[SYDRemotePreferencesSource scheduleRemoteSynchronization]
-[SYDRemotePreferencesSource synchronizationWithCompletionHandler:]
SyncedDefaults
Trying to call a method on an invalid object.
-[SYDRemotePreferencesSource synchronize]
-[SYDRemotePreferencesSource synchronizeForced:]
-[SYDRemotePreferencesSource _synchronizeForced:]
-[SYDRemotePreferencesSource hasExternalChanges]
-[SYDRemotePreferencesSource copyDictionary]
-[SYDRemotePreferencesSource registerForSynchronizedDefaults]
-[SYDRemotePreferencesSource unregisterForSynchronizedDefaults]
-[SYDRemotePreferencesSource updateConfiguration]
-[SYDRemotePreferencesSource ping]
NoEncryption
EndToEndEncryption
EndToEndEncryptionAllPlatforms
Unknown
com.apple.security.cloudkeychainproxy3
com.apple.sbd3
identifier
type
persona
SYDStoreID.m
Trying to instantiate a %@ without an identifier
<%@: %p; identifier=%@ type=%@
 persona=%@
SYDClientToDaemonConnection.m
Trying to initialize NSUbiquitousKeyValueStore without a store identifier. Please specify your store identifier in the '%@' entitlement.
com.apple.developer.ubiquity-kvstore-identifier
Must specify a store configuration when initializing %@
com.apple.kvs.client
com.apple.kvs.client.callback
com.apple.kvs.client.analytics
Please use -%@
<%@: %p; storeConfiguration=%@>
v16@?0@"NSError"8
v24@?0@"NSArray"8@"NSError"16
com.apple.sbd
accountsd
com.apple.accounts
com.apple.finder
com.apple.VoiceOverTouch
com.apple.TextInput.kbd
com.apple.inputmethod.kbd
com.apple.nanoweatherprefsd
com.apple.weather
com.apple.springboard
com.apple.backboardd
com.apple.datamigrator
com.apple.CoreSuggestions
com.apple.cmfsyncagent
com.apple.accessibility.heard
com.apple.HearingAids
com.apple.wifid
com.apple.wifid.known-networks
com.apple.coretelephony
com.apple.mediaaccessibilityd
com.apple.mediaaccessibility
com.apple.tipsd
com.apple.touristd
NSUbiquitousKeyValueStore key '%@' is longer than the maximum allowed size (%ld)
v24@?0@8@"NSError"16
com.apple.kvs.cachedObjectForKey
keyHash
storeIdentifier
objectExistedInCache
@"NSDictionary"8@?0
 (from cache)
v24@?0@"NSDictionary"8@"NSError"16
v32@?0@8@16^B24
v24@?0@"NSData"8@"NSError"16
Invalid key parameter provided
NSUbiquitousKeyValueStoreDidChangeExternallyNotificationUserInfo
ChangeToken
v12@?0B8
com.apple.kvsd
com.apple.syncdefaultsd.daemon.wake
v12@?0i8
UIApplicationWillEnterForegroundNotification
cfprefsd
v32@?0@"NSString"8@"NSNumber"16^B24
Expected non-nil XPC connection
Expected non-nil XPC connection queue
SYDStoreConfiguration.m
Must specify a non-nil storeID when initializing %@
Use -[%@ %@]
<%@: %p; storeID=%@
Initializing %@ with applicationID=%@ storeID=%@
BUG IN CLIENT OF KVS: Trying to initialize NSUbiquitousKeyValueStore without a store identifier. Please specify a store identifier in your entitlements or initializer.
Initializing %@ with configuration %@ store <(%@)>
Deallocating daemon connection %@
Invalidating XPC connection for %@
kvs/all-store-identifiers
Error obtaining synchronous remote object proxy to process account changes: %@
Checking entitlements for KVS store identifier
Found entitlement for KVS store: %@
Unable to find entitlement for KVS store
Unable to get a SecTaskRef to check for KVS store entitlement
BUG IN CLIENT OF KVS: KVS store identifier (%@) for (%@) was inferred from a hardcoded list. Please specify a store identifier in your NSUbiquitousKeyValueStore initializer or in the %@ entitlement.
kvs/set-object
StoreIdentifier=%{signpost.description:attribute}s Key=%{signpost.description:attribute}s
Setting object for key <(%{private, mask.hash}@)> = <(%{private, mask.hash}@)> in store <(%@)>
Not setting identical object for key <(%{private, mask.hash}@)> in store <(%@)>
Not setting identical nil value for key <(%{private, mask.hash}@)> in store <(%@)>
Caching object for key <(%{private, mask.hash}@)> after setting in store <(%@)>
Caching NSNull key <(%{private, mask.hash}@)> after setting to nil in store <(%@)>
Quota error saving (%{private}@)): %@
Did set object for key <(%{private, mask.hash}@)> in store <(%@)>
SetObject
kvs/remove-object
Removing object for key <(%{private, mask.hash}@)> in store <(%@)>
Not removing already-nil object for key <(%{private, mask.hash}@)> from store <(%@)>
Caching NSNull for key <(%{private, mask.hash}@)> after removing it for store <(%@)>
Did remove object for key <(%{private, mask.hash}@)> in store <(%@)>
RemoveObject
kvs/get-object
Getting object for key <(%{private, mask.hash}@)> in store <(%@)>
Found cached NSNull for key <(%{private, mask.hash}@)> in store <(%@)>
Found cached object for key <(%{private, mask.hash}@)> in store <(%@)>
Caching object for key <(%{private, mask.hash}@)> from daemon in store <(%@)>
Caching NSNull for key <(%{private, mask.hash}@)> from daemon in store <(%@)>
Returning object%@ for key <(%{private, mask.hash}@)> = <(%{private, mask.hash}@)> in store <(%@)>
GetObject
kvs/dictionary-representation
StoreIdentifier=%{signpost.description:attribute}s
Getting dictionary representation for store <(%@)>
Caching object from dictionary representation for key <(%{private, mask.hash}@)> in store <(%@)>
Returning dictionary representation for store <%@>: %{private}@
GetDictionaryRepresentation
kvs/save-change-token
Saving change token to daemon for %@
Error saving change token to daemon: %@
Saved change token to daemon
kvs/get-change-token
Getting change token from daemon for %@
Error getting change token from daemon: %@
Got change token from daemon
kvs/synchronize
Not getting change dictionary from the daemon because we don't need to
Synchronizing for store <(%@)>
Received change dictionary from daemon for %@
Did not receive change dictionary from daemon for %@
Invalidating cached value for changed key <(%{private, mask.hash}@)>
On queue posting change notification for %@ with reason=%@ and %ld changed key(s)
kvs/cloud-sync
StoreIdentifier=%{signpost.description:attribute}s enableTelemetry=YES 
Sync
Synchronizing with cloud for store <(%@)> %@
Error synchronizing with cloud for store <(%@)>: %@
Done synchronizing with cloud for store <(%@)>
kvs/cloud-sync-multiple
Stores=%{signpost.description:attribute}s enableTelemetry=YES 
SyncMultiple
Synchronizing stores of type %@ with the cloud: %@
Error obtaining remote object proxy for syncing multiple stores: %@
Error synchronizing multiple stores with cloud: %@
BUG IN CLIENT OF KVS: Tried to sync multiple stores, but not entitled for all of them: %@
Done synchronizing with cloud for stores: %@
kvs/is-cloud-sync-enabled
Setting cloud sync to enabled for store: %@
Setting cloud sync to disabled for store: %@
Cloud sync XPC connection was interrupted
Cloud sync XPC connection was invalidated
kvs/register
Registering for change notifications
Error getting proxy to register: %@
Error registering for change notifications: %@
Finished registering for change notifications
kvs/ping
Pinged from daemon. IT'S ALIVE!!!
Registering for UI change notifications on iPhone / tvOS
Performing moved to foreground sync for store <(%@)>
Completed foreground move triggered sync for store <(%@)>
Not performing initial sync in cfprefsd
Not performing initial sync for store <(%@)> because we're not in an app
Not performing initial sync for store <(%@)> because we've already initialized it
Performing initial sync for store <(%@)>
Done performing initial sync for store <(%@)>
BUG IN CLIENT OF KVS: Tried to access NSUbiquitousKeyValueStore '%@' without the proper entitlements. If your process is not entitled to access this store, then any attempts to get data will return nil, and any attempts to set data will be ignored. Please add the proper entitlements to access this store, or stop trying to access it in an unentitled process.
BUG IN CLIENT OF KVS: Tried to access encrypted store '%@' before first unlock. When this fault occurs, NSUbiquitousKeyValueStore is about to return a nil value for any key you just asked for, even if there
s data in the store for that key. Depending on what might be done with that return value, this could result in data loss.
BUG IN KVS: Tried to access store that is unknown to the system (%{public}@). Please send this bug to NSUbiquitousKeyValueStore.
BUG IN CLIENT OF KVS: %{public}@
BUG IN CLIENT OF KVS: Tried to access NSUbiquitousKeyValueStore without being able to mach-lookup `com.apple.kvsd`. Please allow mach-lookup for `com.apple.kvsd` in your sandbox profile or entitlements.
kvs/store-did-change
Received storeDidChange for store <(%@)>
Waiting to process change dictionary until the end of the cloud sync
Received storeDidChange for store that is not our store: self.configuration=%@ configuration=%@
kvs/process-account-changes
Telling daemon to process account changes
Error obtaining asynchronous remote object proxy to process account changes: %@
Failed to tell daemon to process account changes: %@
Finished telling daemon to process account changes
Creating new XPC connection
XPC connection was interrupted
XPC connection was invalidated
Error obtaining synchronous remote object proxy: %@
Error obtaining asynchronous remote object proxy: %@
SYDRemotePreferencesSource
SYDManagement
SYDStoreID
NSCopying
NSSecureCoding
NSCoding
SYDDaemonProtocol
SYDClientProtocol
SYDClientToDaemonConnection
SYDClientProtocolProxy
SYDStoreConfiguration
T@"NSCache",&,N,V_cachedObjects
SYDRemotePreferencesSourceConfigurationDidChangeNotification
_target
SYDUbiquitousKeyValueStoreDidChangeExternallyNotification
dealloc
T@"NSLock",&,N,V_cacheLock
initWithTarget:
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
needsChangeDictionaryFromDaemon
T@"NSString",C,N,V_identifier
registerForSynchronizedDefaults
T@"NSString",C,N,V_processName
T@"NSXPCConnection",&,N,V_xpcConnection
setProcessName:
T@"SYDStoreID",&,N,V_storeID
storeID
TB,R
suspend
.cxx_destruct
_analyticsQueue
SYDRemotePreferencesSourceDidChangeNotification
containsObject:
T@"<SYDClientProtocol>",W,N,V_target
getValueForKey:
T@"NSObject<OS_dispatch_queue>",&,N,V_analyticsQueue
maximumKeyCount
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
numberWithBool:
T@"NSString",C,N,V_personaUniqueString
removeObserver:
T@"NSString",R,N
setChangeToken:
T@"SYDStoreConfiguration",&,N,V_storeConfiguration
setWithObjects:
TB,N,V_didLogFaultForEntitlements
storeIdentifier
TB,R,N
TB,V_needsChangeDictionaryFromDaemon
TQ,V_syncingWithCloudCounter
Ti,N,V_daemonWakeNotifyToken
Tq,N,V_type
Tq,R,N
UTF8String
___For_some_reason_NSUbiquitousKeyValueStore_thinks_you_dont_exist___
___NSUbiquitousKeyValueStore_isnt_sure_exactly_what_you_did_but_it_was_invalid___:
___You_are_about_to_lose_data_in_NSUbiquitousKeyValueStore___
___You_are_not_entitled_for_NSUbiquitousKeyValueStore___
___You_think_you_can_just_XPC_into_any_process_all_willy_nilly_well_think_again___
_cacheLock
_cachedObjects
_callbackQueue
_clearCachedObjects
_daemonWakeNotifyToken
_didLogFaultForEntitlements
_handleCacheErrorForKey:
_identifier
_needsChangeDictionaryFromDaemon
_personaUniqueString
_processName
_queue
_storeConfiguration
_storeID
_synchronizeForced:
_syncingWithCloudCounter
_type
_xpcConnection
addObject:
addObserver:selector:name:object:
allStoreIdentifiersWithCompletionHandler:
allStoreIdentifiersWithError:
allocWithZone:
analyticsQueue
appendFormat:
appendString:
applicationWillEnterForeground
arrayWithObjects:count:
asyncDaemonWithErrorHandler:
cacheLock
cachedObjects
callbackQueue
changeDictionarySinceChangeToken:inStoreWithConfiguration:reply:
changeToken
changeTokenForStoreWithConfiguration:reply:
clientProtocolInterface
code
componentsJoinedByString:
copy
copyDictionary
copyExternalChangesWithChangeCount:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
currentHandler
currentPersona
currentProcess
daemonDidWake
daemonProtocolInterface
daemonWakeNotifyToken
decodeIntegerForKey:
decodeObjectOfClass:forKey:
defaultCenter
defaultStoreIdentifierForCurrentProcessWithApplicationIdentifier:
description
dictionary
dictionaryRepresentation
dictionaryRepresentationForStoreWithConfiguration:reply:
dictionaryRepresentationWithError:
dictionaryWithObjects:forKeys:count:
didLogFaultForEntitlements
discardExternalChangesForChangeCount:
disgustingUglyHardcodedKnownStoreIdentifierForApplicationIdentifier:
domain
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
enumerateKeysAndObjectsUsingBlock:
errorWithDomain:code:userInfo:
handleFailureInMethod:object:file:lineNumber:description:
hasExternalChanges
hasInitializedStoreWithIdentifier:
hash
identifier
init
initWithApplicationID:shared:
initWithApplicationID:storeID:shared:
initWithApplicationID:storeID:shared:additionalSource:
initWithApplicationID:storeID:shared:additionalSource:containerPath:
initWithApplicationID:storeID:shared:additionalSource:containerPath:storeType:
initWithCoder:
initWithIdentifier:type:
initWithMachServiceName:options:
initWithStoreConfiguration:
initWithStoreID:
initWithStoreIdentifier:type:
integerValue
interfaceWithProtocol:
invalidate
isApplication
isCloudSyncUserDefaultEnabledForStoreIdentifier:
isCloudSyncUserDefaultEnabledForStoreIdentifier:completionHandler:
isDataSeparatedPersona
isEqual:
isEqualToString:
isMemberOfClass:
isSyncingWithCloud
length
lock
logFaultIfNecessaryForError:
maximumDataLengthPerKey
maximumKeyLength
maximumTotalDataLength
migrateSyncedDefaultsForBundleIdentifier:
newXPCConnection
null
numberWithUnsignedInteger:
objectForKey:
objectForKey:error:
objectForKey:inStoreWithConfiguration:reply:
objectForKeyedSubscript:
performInitialSyncIfNecessary
personaUniqueString
ping
postNotificationName:object:userInfo:
processAccountChangesWithCompletionHandler:
processChangeDictionary:
processInfo
processName
queue
raise:format:
registerForApplicationLifecycleEvents
registerForChangeNotificationsForStoreWithConfiguration:reply:
registerForDaemonDidWakeNotifications
remoteObjectProxyWithErrorHandler:
removeAllObjects
removeObjectForKey:
removeObjectForKey:inStoreWithConfiguration:reply:
resume
saveChangeToken:forStoreWithConfiguration:reply:
scheduleRemoteSynchronization
setAnalyticsQueue:
setCacheLock:
setCachedObjects:
setCallbackQueue:
setClasses:forSelector:argumentIndex:ofReply:
setCloudSyncUserDefaultEnabled:storeIdentifier:
setDaemonWakeNotifyToken:
setDefaultsConfiguration:
setDidLogFaultForEntitlements:
setExportedInterface:
setExportedObject:
setHasInitializedStoreWithIdentifier:
setIdentifier:
setInterruptionHandler:
setInvalidationHandler:
setNeedsChangeDictionaryFromDaemon:
setObject:forKey:
setObject:forKey:error:
setObject:forKey:inStoreWithConfiguration:reply:
setObject:forKeyedSubscript:
setPersonaUniqueString:
setQueue:
setRemoteObjectInterface:
setShouldSyncOnFirstInitializationOverride:
setStoreConfiguration:
setStoreID:
setSyncingWithCloudCounter:
setTarget:
setType:
setValue:forKey:
setXpcConnection:
shouldSyncOnFirstInitializationOverride
storeConfiguration
storeDidChangeWithStoreID:changeDictionary:reply:
storeType
stringWithFormat:
supportsSecureCoding
synchronizationWithCompletionHandler:
synchronize
synchronizeForced:
synchronizeStoreWithConfiguration:completionHandler:
synchronizeStoresWithIdentifiers:type:completionHandler:
synchronousDaemonWithErrorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
syncingWithCloudCounter
target
type
unlock
unregisterForSynchronizedDefaults
updateConfiguration
userPersonaUniqueString
validateKey:error:
xpcConnection
@16@0:8
q16@0:8
@28@0:8^{__CFString=}16B24
@36@0:8^{__CFString=}16^{__CFString=}24B32
@40@0:8^{__CFString=}16^{__CFString=}24B32B36
@48@0:8^{__CFString=}16^{__CFString=}24B32B36^{__CFString=}40
@56@0:8^{__CFString=}16^{__CFString=}24B32B36^{__CFString=}40q48
v16@0:8
@32@0:8@16^@24
^v24@0:8^{__CFString=}16
B40@0:8@16@24^@32
v32@0:8^v16^{__CFString=}24
v24@0:8@16
v24@0:8@?16
C16@0:8
C20@0:8C16
@24@0:8^q16
v24@0:8q16
@24@0:8^@16
^{__CFDictionary=}16@0:8
B16@0:8
@24@0:8^{_NSZone=}16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8@16q24
Q16@0:8
B24@0:8@16
@"NSString"
v48@0:8@16@24@32@?40
v40@0:8@16@24@?32
v32@0:8@16@?24
v40@0:8@16q24@?32
v28@0:8B16@20
v48@0:8@16@"NSString"24@"SYDStoreConfiguration"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"SYDStoreConfiguration"24@?<v@?@@"NSError">32
v40@0:8@"NSString"16@"SYDStoreConfiguration"24@?<v@?@"NSError">32
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSError">24
v40@0:8@"NSData"16@"SYDStoreConfiguration"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSData"@"NSError">24
v40@0:8@"NSData"16@"SYDStoreConfiguration"24@?<v@?@"NSError">32
v40@0:8@"NSArray"16q24@?<v@?@"NSError">32
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSString"16@?<v@?B>24
v28@0:8B16@"NSString"20
v24@0:8@?<v@?@"NSArray"@"NSError">16
v40@0:8@"SYDStoreID"16@"NSDictionary"24@?<v@?>32
v32@0:8@16@24
B32@0:8@16^@24
@24@0:8@?16
i16@0:8
v20@0:8i16
v20@0:8B16
v24@0:8Q16
@"SYDStoreConfiguration"
@"NSXPCConnection"
@"NSObject<OS_dispatch_queue>"
@"NSCache"
@"NSLock"
@"<SYDClientProtocol>"
@"SYDStoreID"
