Password
Domain
Class
Type
altDSID
DisplayName
Username
Hostname
AccountInfoDidChange
AuthenticationScheme
SSLEnabled
SSLClientIdentity
SSLEnabledIsEditable
SSLIsDirect
PerMessageSMIMEEnabled
SMIMESigningEnabled
SMIMEEncryptionEnabled
SMIMESigningIdentity
SMIMEEncryptionIdentity
SMIMESigningUserOverrideable
SMIMESigningIdentityUserOverrideable
SMIMEEncryptByDefaultUserOverrideable
SMIMEEncryptionIdentityUserOverrideable
PortNumber
NumberOfDaysToKeepTrash
DeliveryHostname
DeliverySSLEnabled
DeliveryPortNumber
ManagedTag
mcProfileUUID
MFRestrictMessageTransfersToOtherAccounts
MFRestrictSendingFromExternalProcesses
Prevent Recents Syncing
MFAccountSupportsMailDrop
showAlertNow
dateLastFetchAceDB
OAuth2Token
OAuth2RefreshToken
ASStoreDraftsOnServer
MFServerSSLCertificateIsTrusted
B16@?0@"ECAuthenticationScheme"8
com.apple.Message.ReleaseAllConnections
Cannot set persistent account on account with unsaved account properties
<%@ %p> ID=%@
 displayName=%@
Account
%@:%@@%@
NOT 
, error:
v24@?0q8@"NSError"16
success
failure
v20@?0B8@"NSError"12
v16@?0@"NSHashTable"8
-[MFAccount certUIService]
Account.m
0 && "Must be implemented by subclass"
NO_PASSWORD_PROVIDED_FOR_USER_FORMAT
Message
NO_PASSWORD_PROVIDED_FOR_ACCOUNT_FORMAT
PASSWORD_INACCESSIBLE_FOR_ACCOUNT_FORMAT
LOGIN_DISABLED_FOR_ACCOUNT_FORMAT
  account : %@
Protocol
Incoming
Outgoing
AccountConfigUsernameIncludesDomain
POPAccount
IMAPAccount
service
note
unsupported
null
UTF-8
domain
TestAccountConfiguration
EasySetupHost
mdev.apple.com
EasySetupUseSSL
iphone-services.apple.com
https
http
/iconfig/conf
POST
Apple iPhone MailConfig v%@
User-agent
domain=%@&version=1
EmailDomains
protocol
IMAP
requires
port
authentication
usernameIncludesDomain
SMTP
lang
content
v20@?0@"MFAccount"8B16
FAILED_LOGIN
Delayed
SMTP_CONNECTION_FAILED_MESSAGE_FORMAT
Assistant
CONNECTION_FAILED_MESSAGE_FORMAT
CHECKING_CONNECTION
Checking connection
MonitoredActivityStarted
MonitoredActivityEnded
MonitoredActivityMessage
MonitoredActivityCurrentCount
MonitoredActivityMaxCount
MonitoredActivityReset
MonitoredActivityInvocation
MonitoredActivityReasonCompacting
MonitoredActivityReasonFetching
MonitoredActivityReasonArchiving
MonitoredActivityReasonDeleting
MonitoredActivityReasonJunking
MonitoredActivityReasonMoving
RESET
aolAccountIcon
%@@aol.com
Sent
Trash
Drafts
Spam
AOL_DELIVERY_HOSTNAME
AOL SMTP Server
CRAM-MD5
GSSAPI
KERBEROS_V4
X-APOP
NTLM
DIGEST-MD5
FullUserName
EmailAddress
imapHostname
imapPort
imapRequiresSSL
smtpHostname
smtpPort
smtpRequiresSSL
dotMacMailSupported
CastleIMAPErrorDomain
icloud.com
iCloud-%@
iCloud
%@-%p
CastleIMAPAccount.m
Invalid parameter not satisfying: %@
nil != _appleAccountLock
mac.com
me.com
Mailbox is over quota
v16@?0@"CastleEmailAliasUpdateResult"8
castleAccountIcon
(CHANGEDSINCE %@)
(FLAGS)
%llu
MFReloadNetworkLoggingNotification
LogActivityOnAllPorts
LogActivityOnPort
LogActivityOnHost
logLock
v12@?0i8
%@ _socket: %p
com.apple.Message.CertUIPromptScheduler
-[MFConnection _setupSocketWithSettings:]
Connection.m
_socket
v12@?0B8
B24@?0^{__SecTrust=}8^@16
DONT_KNOW_SERVICE_PORT
%s can only be called from unit tests
-[MFConnection test_setSocket:]
AUTH_NOT_SUPPORTED_FORMAT
AUTH=
-[MFConnection writeBytes:length:dontLogBytesInRange:]
Z_STREAM_ERROR != err
Internal error: -[%@ %@] needs to be implemented in a concrete subclass.
-[MFConnection startCompression]
zlibStream
1.2.11
==== Connection State ====
    Host: %@
    Port Number: %u
    SSL Version: %@
    Socket: %@
    Thread: %p
%@<%@>:%d %s SSL (%s)%s%s%s%@
direct
indirect
 (opportunistic)
 disallows trust prompt
, source application: 
CONNECTED
READ
READ(encrypted)
WROTE
WROTE(encrypted)
CONNECTION_TIMED_OUT
HOST_UNREACHABLE
MF_SSL_CONNECTION_FAILURE
CONNECTION_REFUSED
CONNECTION_FAILED
SSL_CERT_CHAIN_INVALID_FORMAT
The certificate for the server is invalid.
SSL_BAD_CERT_FORMAT
The format of the certificate for the server is bad.
SSL_UNKNOWN_ROOT_CERT_FORMAT
The root certificate for this server could not be verified.
SSL_NO_ROOT_CERT_FORMAT
There is no root certificate for this server.
SSL_CERT_EXPIRED_FORMAT
The certificate for this server has expired.
SSL_HOST_MISMATCH_MESSAGE
SSL_GENERIC_READ_ERROR
SSL_ALERT_TITLE_FORMAT
Unable to verify SSL server %@
[Omitted]
SSL_GENERIC_WRITE_ERROR
_fillBuffer
MESSAGE_AUTH_CRAM_MD5
MD5 Challenge-Response
%02x
B16@?0@"MFMessageCriterion"8
@"MFMessageCriterion"16@?0@"MFMessageCriterion"8
B16@?0@"EMSearchableItemSnippetData"8
NOT (%@)
SELECT messages.ROWID FROM %@ WHERE %@
messages.ROWID IN (%@)
 UNION 
mailbox IN (SELECT rowid FROM mailboxes WHERE url IN (%@))
 AND 
 OR 
NULL
%@ %@ NULL
IS NOT
CriterionAdditions.m
Only =, <, > are supported for date comparision
Magic comparision must be $magicString,$field,$offset
%@ %@ (%@ + %lf)
messages.ROWID NOT IN (%@)
messages.ROWID
messages.external_id
cpsearch(subject, '%@', %d)
messages.message_id
%@ %@ %lld
messages.message_id IN (%@)
messages.message_id NOT IN (%@)
%@ %@ %@
messages.global_message_id IN (%@)
messages.global_message_id NOT IN (%@)
messages.global_message_id
sender LIKE '%%%@%%'
cpsearch(sender, '%@', %d)
Only MessageRuleIsEqualTo is supported for ListIDHashCriterionType
messages.list_id_hash = %lld
Only MessageRuleIsEqualTo is supported for DocumentIDCriterionType
messages.document_id = '%@'
cpsearch(IFNULL(sender, '') || ' ' || IFNULL(subject, '') || ' ' || IFNULL(_to, '') || ' ' || IFNULL(cc, ''), '%@', %d)
messages.conversation_id IN (%@)
messages.conversation_id NOT IN (%@)
(_to LIKE '%%%@%%' OR cc LIKE '%%%@%%')
cpsearch(IFNULL(_to, '') || ' ' || IFNULL(cc, ''), '%@', %d)
(messages.flags & %@) = %@
read = %d
flagged = %d
unlikely
likely
%@(deleted = %d)
%@(journaled = %d)
sender_vip = %d
messages.conversation_id in (select rowid from conversations where flags = 1)
messages.conversation_id in (select rowid from conversations where flags = 4)
((messages.flags&(63<<10))>>10) BETWEEN 1 AND 62
(messages.flags&(1<<39)) > 0
(messages.flags&(1<<40)) > 0
(messages.flags&(3<<39)) > 0
and64
not and64
%@(messages.flags, %@)
flag_color = %d
ifnull(%@, %ld) IN (%@)
ifnull(%@, %ld) %@ %@
unsupported criterion type %ld
Qualifier not supported
mailbox %@ IFNULL((SELECT ROWID FROM mailboxes WHERE %@), -1)
mailbox IN (SELECT ROWID FROM mailboxes WHERE %@)
LIKE
NOT LIKE
'%@'
'%%%@%%'
'%@%%'
'%%%@'
ASHTTPConnectionErrorDomain
70FB9178-576E-4CAA-A08E-F68D57BFD01E
DAFolderID
DAMailboxUid
MFWalkUpDAErrorChain
DAMailAccount.m
error && "Error ref passed in to here must not be NULL."
ExchangeActiveSync
%@%@
Exchange ActiveSync
Exchange
DAChangedFolders
SEARCH_ALL_MAILBOXES
Search
kDAMailAccountAllMailboxesFolderID
com.apple.Preferences
com.apple.dataaccess.dataaccessd
com.apple.Accounts
com.apple.datamigrator
com.apple.managedconfiguration.profiled
junk e-mail
junk email
should never make account conduits in %@.
folderID must be non-nil
v16@?0@"MFDAFolderChangeResult"8
&<>:;/()+'"\
MAILBOX_NAME_INCLUDES_SPECIAL_CHARACTERS
mbox
FolderID
v32@?0@"EFPair"8Q16^B24
Archive
Junk
requested relative path for unsupported mailbox type %ld
exchangeAccountIcon
outlookAccountIcon
HatesAppleDesign
appleAccountIcon
@"NSString"16@?0@"MFMailboxUid"8
reachable
unreachable
SMIME_MISSING_REMOTE_ENCRYPTION_CERT_MESSAGE
v24@?0@"NSArray"8^B16
MIME_GENERIC_REMOTE_ENCRYPTION_CERT_MESSAGE
An error occurred while retrieving the encryption certificate.
SMIME_CANT_ENCRYPT_TITLE
Unable to Encrypt
[message isKindOfClass:[MFMailMessage class]]
RelativePath
-[MFDAMailbox displayName]
INBOX_SPECIAL_MAILBOX_NAME
Inbox
 folderID=%@
MFDAMailAccountConsumer_doneCondition
_MFDAResolveRecipientsConsumer_Lock
MaxMessageBytes
DeliveryAccounts
ShouldUseAuthentication
DeliveryAccountWillBeRemoved
DeliveryAccountsDidChange
%@:%@
SMTPServers
%@@%@
HTTP MD5 Digest
username
realm
nonce
cnonce
digest-uri
response
maxbuf
charset
utf-8
stale
algorithm
md5-sess
cipher-opts
rspauth
auth
auth-int
auth-conf
%08x
%@/%@
Digest session key to server-to-client signing key magic constant
Digest session key to client-to-server signing key magic constant
AUTHENTICATE
IMAPESearchMinKey
IMAPESearchMaxKey
IMAPESearchAllKey
IMAPESearchCountKey
IMAPESearchTagKey
-[MFIMAPConnection(ESearch) eSearchIDSet:areMessageSequenceNumbers:arguments:success:returning:]
ESearch.m
returning && "Should have at least one return request on an esearch command."
RETURN
Expected space
Expected number for minimum result
Expected number for maximum result
COUNT
Expected number for count result
Did not find a valid search return.
Expected right paren
StoreDraftsOnServer
StoreSentMessagesOnServer
Sent Items
Deleted Items
Contacts
Calendar
Journal
Notes
Tasks
<HTML><BODY>
</BODY></HTML>
format
flowed
delsp
From 
AppleTextBreakLocale
<BLOCKQUOTE type="cite">
<SPAN>
 &nbsp; &nbsp;
&nbsp;
&lt;
&gt;
&amp;
</SPAN><BR>
</BLOCKQUOTE>
System/Library/PrivateFrameworks/DataDetectorsCore.framework/DataDetectorsCore
DDURLifier
ja_JP_TRADITIONAL
REPLY_ATTRIBUTION_SENDER
%@ <%@>
REPLY_ATTRIBUTION
On %@, at %@, %@ wrote:
\Important
\Starred
\AllMail
\Spam
gmail.com
Gmail
Your account is not enabled for IMAP use.
IDToken
gmailAccountIcon
VERIFICATION_REQUIRED_TITLE
Verification Required
WEBLOGIN_PROMPT_FORMAT
Log in to your %@ account
MailErrorHandlerDoNotSanitize
xwebalert
webalert
EnableSchema
EnableHost
EnablePath
apple
%@ (%@)
GMAIL_ALL_MAIL_SPECIAL_MAILBOX_NAME
All Mail
self
GMAIL_DELIVERY_HOSTNAME
Gmail SMTP Server
PLAIN-CLIENTTOKEN
MESSAGE_AUTH_GMAIL_CLIENTTOKEN
Gmail Client Token
office365.com
Outlook
%@@outlook.com
HOTMAIL_DELIVERY_HOSTNAME
Outlook SMTP Server
ServerPathPrefix
lastPushRegistrationTime
ListsSubscribedOnly
PreventDismemberment
PushedMailboxes
NotesPushedMailboxes
NotesNotificationPrefix
separator
namespace
capabilities
push-service-level
aps-topic
push-registered-mailboxes
connectionLock
163AccountIcon
126AccountIcon
qqAccountIcon
-[IMAPAccount test_setTaskManager:]
Mail
IMAPNewStack
MailIMAPNewStack
imapmbox
imap
imaps
IMAP_SERVER_ALERT_FORMAT
WARNING_TITLE
Warning
DeleteInPlace
Trying to use old IMAP while new IMAP is enabled
IMAP_OPEN_FAILED_TITLE_FORMAT
VerifiedESEARCH
com.apple.mail.IMAPAccount.ESearchVerificationFailure
@"NSDictionary"8@?0
MailboxName
Apple Mail To Do
method
_releaseAllConnectionsAndCallSuper
edgeOnly
IMAP account %@ (%@)
com.apple.mail.imap.offlinestatuschange
INBOX
INBOX%@INBOX
-[IMAPAccount _newMailboxWithParent:name:attributes:dictionary:withCreationOption:]
IMAPAccount.m
creationOption == MailboxCreationOptionDefault
DISABLED_STATUS
v32@?0@"NSString"8@"NSDictionary"16^B24
B16@?0@"MFMailboxUid"8
@16@?0@"MFMailboxUid"8
IMAP_REMOVING_CACHE_FILES
MAILBOX_NAME_INCLUDES_PATH_SEPARATOR
NO_OFFLINE_MAILBOX_RENAMING
.OfflineCache
v32@?0@"NSString"8@"NSString"16^B24
.%@.%@
RelatedMessagesShouldIncludeDrafts
not 
CANNOT
is NOT
    topic: %@
    known capabilities: %@
    negotiated push service level: %@
    last push registration time: %@
<never>
    mailboxes registered for push: %@
MOVE
Got store of class %@ for mailbox %@
Got wrong type of store for mailboxURL
X-APPLE-REMOTE-LINKS
mail-automation: IMAPAccount
StoreTrashOnServer
StoreArchiveOnServer
<null>
<unavailable>
<unknown>
version 1
version 2
version 3
_pushServiceLevelName
0 && "unknown push service level"
IMAPMailboxAttributes
DELETED
Source UIDS
Destination UIDS
\Archive
\Drafts
\Trash
aps-version
sender
NONE
aps-account-id
aps-device-token
aps-subtopic
mailboxes
(BODY.PEEK[HEADER.FIELDS (MESSAGE-ID)])
(UID FLAGS)
+FLAGS.SILENT
-FLAGS.SILENT
d-MMM-yyyy
(){ %*\"
    supports IDLE: %@
    using IDLE: %@ (seq=%lu)
STARTTLS
LITERAL+
LITERAL-
UIDPLUS
CHILDREN
IDLE
QUOTA
NAMESPACE
MULTIAPPEND
UNSELECT
LOGINDISABLED
XLIST
COMPRESS=DEFLATE
ESEARCH
CONDSTORE
SASL-IR
XYMHIGHESTMODSEQ
X-GM-EXT-1
SPECIAL-USE
LIST-STATUS
LIST-EXTENDED
"%@"
"%@ (%@)"
"name"
"version"
"os"
"iOS"
"os-version"
DEFLATE
TLS_NOT_SUPPORTED_FORMAT
FAILED_FETCH_TITLE
Cannot Get Mail
outNonSynchronizingLiteral
{%lu%s}
%lu 
v40@?0r^v8{_NSRange=QQ}16^B32
B32@?0r*8Q16B24B28
IMAP_OPEN_FAILED_MSG_FORMAT
IMAP_COMMAND_FAILED_FORMAT1
STATUS %@
RETURN (%@)
@"NSNull"16@?0^@8
*** Server doesn't support UIDPLUS
B8@?0
(\Deleted)
BEFORE
uids
mailboxName
-[MFIMAPConnection storeGmailLabels:state:forUIDs:]
IMAPConnection.m
MinFetchChunkSize
MaxFetchChunkSize
FetchDeltaTarget
%llu:*
%llu:%llu
v32@?0{_NSRange=QQ}8^B24
TLS_FAILED_FORMAT
<%@:%p> [%@%s] delegate=%p mailbox=<%@>
, Fetching
<%@:%p> [%@%s] delegate=%p
Disconnected
Non-authenticated
Authenticated
Selected
%@ delegate=%p
<%p:%@> [%@ (%@)]
<%p:%@> [%@]
(INTERNALDATE UID RFC822.SIZE FLAGS 
MODSEQ 
X-GM-MSGID 
BODY.PEEK[HEADER])
%@ ...
%@ %@
 ...
%@ %@%@
%lu %s %@
<%@: %p>
%@ set %@
%@ unset %@
CAPABILITY
NOOP
LOGOUT
LOGIN
LIST
LSUB
STATUS
EXAMINE
CREATE
DELETE
RENAME
SELECT
SUBSCRIBE
UNSUBSCRIBE
EXPUNGE
UID EXPUNGE
CLOSE
APPEND
FETCH
UID FETCH
UID STORE
UID COPY
UID SEARCH
GETQUOTAROOT
GETQUOTA
DONE
SEARCH
XDELIVER
COMPRESS
UID MOVE
DisableESEARCH
DisableCOMPRESS
DisableCONDSTORE
"dd-MMM-yyyy HH:mm:ss ZZ"
operations
In-Reply-To:
References:
BODY[HEADER.FIELDS (REFERENCES IN-REPLY-TO)]
HEADER
Message-ID
v32@?0@"NSString"8Q16^B24
UNDELETED
InvocationQueue_lock
DebugWorkerThreads
MFInvocationQueue starting invocation %p [%s %s]
MFInvocationQueue finished invocation %p [%s %s] in %5.5fs
==== %@Invocation Queue <%@: %p> ====
Shared 
number of running threads: %d
==== Queued ====
  %@
(empty)
Store %@ has no mailboxURL
LibraryIMAPStore.m
We have a library IMAP store without a mailboxURL
@"EDServerMessagePersistence"16@?0^@8
@"NSString"12@?0I8
temp-%lu
temp-
 libraryID=%lld remoteID=%@
LibraryMessage.m
Expected message %@ to be self %@
DetectData
%@ = %@
%@ == '*'
= '%@*'cdwt
= '*%@'cdwt
= '%@'cd
!= '%@'cd
= '*%@*'c
< %@
> %@
-[MFMessageCriterion(MFLibrarySearchableIndexAdditions) _comparisonOperationMatchingValue:qualifier:]
LibrarySearchableIndex.m
0 && "unexpected qualifier type"
@"NSString"16@?0@"NSString"8
v32@?0@"MFMessageCriterion"8Q16^B24
@"NSNumber"16@?0@"MFMessageCriterion"8
v32@?0@"NSString"8@"NSMutableArray"16^B24
@"NSString"16@?0@"MFMessageCriterion"8
$time.absolute(%f)
!(%@)
messages
MailMessageStoreMessageFlagsChanged
MailMessageStoreMessagesAdded
MailMessageStoreMessagesWillBeCompacted
MailMessageStoreMessagesRemoved
<%@: %p (uid=%@)>
LibraryStore.m
messages shouldn't have a zero generation number.
FetchWithoutLimits
%@|%lu|%@|%d
com.apple.message.fetchMobileSynchronously
oldFlagsByMessage
multipart
SUCCESS
FAILED
X-Apple-Content-Length: %lu
Q24@?0@"MFMessage"8q16
q24@?0@8@16
LocalAccountId
Mailboxes
local:
LocalAccount
Local
PERSONAL_MAILBOXES
Local Mailboxes
MAILBOX_EXISTS_FORMAT
x-apple-transient-drafts
x-apple-send-later
EmailAddresses
ReceiveEmailAliasAddresses
LastEmailAliasesSyncDate
LastEmailAliasesSyncEntityTag
SMTPIdentifier
SMTPCarrierFallbackAllowed
SMTPDisabled
CustomSignature
SMTPAlternateIdentifiers
DraftsMailboxName
SentMessagesMailboxName
TrashMailboxName
ArchiveMailboxName
JunkMailboxName
AccountIcon
SaveSentMessages
ArchiveMessages
CachePolicy
DefaultSendingAccount
MFMailDefaultSendingAccountDidChange
defaultAddress
MFNameKey
AccountMailboxListingDidChange
AccountMailboxListingWillLoad
AccountMailboxListingDidLoad
AccountMailboxListingWillFetch
AccountMailboxListingDidFetch
mboxes
MailboxAttributes
MailboxChildren
MailboxExtraAttributes
MailAccountContentsDidChange
MailAccountContentsDidChangeUids
MFMailAccountPushedMailboxUidsDidChange
.mboxCache.plist
SendingIdentities
EncryptionIdentities
B16@?0@"MailAccount"8
@16@?0@"NSString"8
Outbox
@"MFMailboxUid"16@?0@"MailAccount"8
-[MailAccount test_setTaskManager:]
+[MailAccount test_tearDown]
-[MailAccount test_tearDown]
AccountPath
CachedMailboxenLock
MailAccountDeletionLock
com.apple.mail.account
%@-%@@%@
@"NSArray"16@?0@"NSString"8
@"NSSet"8@?0
q24@?0@"MFMailboxUid"8@"MFMailboxUid"16
RENAME_FAILED
DELETE_FAILED_FORMAT
-[MailAccount storeClass]
MailAccount.m
Account URL is nil
plist
Send Later
MFMailboxDictClientCount
MFMailboxDictLock
ChokeLock
-[MailAccount didFinishActionForChokePoint:coalescePoint:withResult:]
OldChildren
NewChildren
 path=%@
-%@-(%@)
Sent Messages
Deleted Messages
LogDeleteActivity
 (%@)
otherAccountIcon
com.apple.MailAccount-ExtProperties
-[MailAccount _setValueInAccountLookAsideProperties:forKey:subKey:]
[dictionary isKindOfClass:[NSDictionary class]]
-[MailAccount archiveDestinationForMailbox:]
[self supportsArchiving] && "only accounts that support archiving should call into this"
mail-automation: MailAccount
Account Info
com.apple.email.MailAccount
MailAccount.cachedMailboxUIDs
_readMailboxCache
self->_rootMailboxUid
BOOL _readMailboxCache(MailAccount *__strong)
Invalid
Rootless
Generic
Root
InboxSpecial
JunkSpecial
ArchiveSpecial
TrashSpecial
SentMessagesSpecial
DraftsSpecial
OutboxSpecial
MailboxUidDidBecomeInvalidNotification
MFMailboxUidWasRenamedNotification
Info.plist
*** Orphaned mailbox %@
DRAFTS_SPECIAL_MAILBOX_NAME
SENT_MESSAGES_SPECIAL_MAILBOX_NAME
TRASH_SPECIAL_MAILBOX_NAME
OUTBOX_SPECIAL_MAILBOX_NAME
ARCHIVE_SPECIAL_MAILBOX_NAME
JUNK_SPECIAL_MAILBOX_NAME
URLString
IncludeDefaultSecurePortNumber
 relativePath=%@
<%@ %p> ID=%lld type=%@ attributes=%lu
IsDirty
suggestionsLostMessageSearchResultCount
suggestionsLostMessageSearchTimestamp
@"MFFollowUpWarningResult"16@?0^@8
%@ (
SEND_MESSAGE_FORMAT
Sending message: %@
NO_SUBJECT
No subject
INTERNAL_DELIVERY_ERROR_FORMAT
NO_RECIPIENTS
FollowUp
using DebugStartDate (original startDate:%@, endDate:%@)
FORWARDED_MESSAGE_PREFIX
Begin forwarded message:
%@ globalMessageID=%lld
_Encoding
Envelope Index
Protected Index
subjects
summaries
protected_message_data
message_global_data
conversations
read_later
MFColumnAlias
MFDefaultValue
emlxpart
MailMessageLibraryWillBecomeUnavailable
MailMessageLibraryDidBecomeAvailable
MailMessageLibraryDidFinishReconciliation
MailMessageLibraryProtectedDataAvailibilityKey
.reset-database
com.apple.message.journal-reconciliation
NeedToMigrateFiles
NeedToMigrateAttachments
UseLegacyMessageIDHashFormat
LibraryMessageAttachmentDataBecameAvailableNotification
com.apple.email.signposts
userAgent
@"MFLibraryMessage"16@?0@"NSNumber"8
com.apple.message.library
com.apple.message.library.stats
com.apple.message.library.keybag
com.apple.message.library.conversationcalculation
com.apple.message.library.fileRemovalAfterCompaction
Library Stats
protectedDataAvailable
messagesMarkedAsJournaled
messageData
messagesDeleted
messageDataDeleted
mailboxesNeedingReconcilication
protectedMessages
protectedMessageData
messagesIndexed
messagesToIndex
indexableMessages
attachmentsIndexed
attachmentsToIndex
indexableAttachments
indexing
ROWID
remote_id
date_sent
size
subject_prefix
subject
comment
sender_comment
sender_address
summary
original_mailbox
content_type
conversation_id
encoding
external_id
global_message_id
message_id
unique_id
conversation_flags
list_id_hash
document_id
date
read_later_date
send_later
send_later_date
unsubscribe_type
follow_up_start_date
follow_up_end_date
bucket
senders
sender_bucket
brand_indicators
brand_indicator_location
+[MFMailMessageLibrary test_setDefaultInstance:]
com.apple.mail.Persistence.MessageIDHashFormat
useLegacyFormat
-[MFMailMessageLibrary test_tearDown]
B16@?0@"EDPersistenceDatabaseConnection"8
UPDATE messages SET flags = (flags|:flags) WHERE rowid = :rowid
:flags
:rowid
setting flags
SELECT flags FROM messages WHERE ROWID = ?;
Q16@?0Q8
, flag_color = NULL
, flag_color = %@
, flag_color = %lu
UPDATE messages SET flags = ((flags | ?) & ?)%@%@ WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?)
mass updating flags
@"MFSearchableIndexItem_iOS"16@?0@"MFLibraryMessage"8
SELECT messages.ROWID, messages.message_id, messages.conversation_id, messages.subject_prefix, subjects.subject, addresses.comment, addresses.address, messages.date_sent FROM messages JOIN subjects ON messages.subject = subjects.ROWID JOIN addresses ON messages.sender = addresses.ROWID WHERE subjects.subject = ? AND messages.mailbox = ?
v32@?0@"EFSQLRow"8Q16^B24
querying subject references for threads
v32@?0@"NSNumber"8@"MFMessageReferenceContext"16^B24
message_references
message
reference
is_originator
v24@?0q8^B16
inserting message_references
UPDATE messages SET conversation_id = ?, content_index_transaction_id = NULL, flags = flags & ~(1<<33) WHERE rowid = ?
inserting conversation id into message row
INSERT OR IGNORE INTO conversations (conversation_id) VALUES (?)
inserting row into conversations table
INSERT OR IGNORE INTO conversation_id_message_id (conversation_id, message_id) SELECT ?, reference FROM message_references WHERE message = ?
inserting row into conversation_id_message_id table (1)
INSERT OR REPLACE INTO conversation_id_message_id (conversation_id, message_id, date_sent) VALUES (?, ?, ?)
inserting row into conversation_id_message_id table (2)
UPDATE messages SET conversation_id = ?, content_index_transaction_id = NULL, flags = flags & ~(1<<33) WHERE conversation_id = ?
udpating other conversations to point to this one
UPDATE OR IGNORE conversation_id_message_id SET conversation_id = ? WHERE conversation_id = ?
v32@?0@"NSNumber"8@"NSArray"16^B24
deleting row from conversations table
SELECT addresses.comment AS sender_comment, addresses.address AS sender_address, subjects.subject, messages.remote_mailbox, messages.original_mailbox, content_type, messages.message_id, messages.external_id, messages.unique_id, messages.list_id_hash, messages.document_id, messages.unsubscribe_type FROM messages LEFT OUTER JOIN addresses ON messages.sender = addresses.ROWID LEFT OUTER JOIN subjects ON messages.subject = subjects.ROWID WHERE messages.ROWID = ?
remote_mailbox
Fetching fields for message
INSERT INTO messages (remote_id, sender, subject_prefix, global_message_id, subject, summary, date_sent, date_received, display_date, mailbox, remote_mailbox, original_mailbox, flags, read, flagged, flag_color, deleted, sender_vip, visible, size, encoding, content_type, message_id, sequence_identifier, external_id, unique_id, list_id_hash, journaled, document_id, unsubscribe_type) values (:remote_id, :sender, :subject_prefix, :global_message_id, :subject, :summary, :date_sent, :date_received, :display_date, :mailbox, :remote_mailbox, :original_mailbox, :flags, :read, :flagged, :flag_color, :deleted, :sender_vip, :visible, :size, :encoding, :content_type, :message_id, :sequence_identifier, :external_id, :unique_id, :list_id_hash, :journaled, :document_id, :unsubscribe_type)
:remote_id
:sender
:subject_prefix
:global_message_id
:subject
:summary
:date_sent
:date_received
:display_date
:mailbox
:remote_mailbox
:original_mailbox
:visible
:size
:content_type
:sequence_identifier
:external_id
:unique_id
:list_id_hash
:journaled
:document_id
:unsubscribe_type
Inserting message
INSERT OR REPLACE INTO pop_uids (mailbox, uid, date_added) VALUES (?, ?, ?);
inserting POP UID
v24@?0q8q16
X-Apple-Content-Length: %lu
@16@?0@"<ECMessage>"8
v32@?0@"MFMailboxUid"8@"NSArray"16^B24
INSERT INTO recipients (message, address, type, position) VALUES (?, ?, ?, ?)
Inserting address
v32@?0@"_MFEmailAddress"8Q16^B24
B24@?0@"NSArray"8Q16
SELECT ROWID FROM addresses WHERE address = ? AND comment = ?
Looking up address ROWID
INSERT INTO addresses (address, comment) VALUES (?, ?)
SELECT ROWID FROM %@ WHERE %@ = ?
Looking up %@ ROWID
INSERT INTO %@ (%@) VALUES (?)
Inserting %@
INSERT OR IGNORE INTO conversation_id_message_id (conversation_id, message_id) VALUES (?, ?)
inserting row into conversation_id_message_id table (3)
SELECT ROWID FROM message_global_data WHERE message_id = ?
Got a confict trying to set global message ID %llu, but couldn't find conflicting row
SELECT message_id FROM messages WHERE rowid = ?
pulling out the faked message-id
The message didn't get updated
ifnull(%@, %@)
%@ AS %@
v24@?0#8:16
SELECT %@ 
SELECT messages.conversation_id 
SELECT COUNT(DISTINCT(messages.message_id)) 
loading messages
full.emlx
partial.emlx
{?=II}
B24@?0I8I12q16
(server_messages.remote_id < %llu OR %llu <= server_messages.remote_id)
,%llu
v24@?0Q8^B16
server_messages.remote_id NOT IN (%@)
SELECT messages.global_message_id, server_messages.remote_id, messages.size FROM messages INNER JOIN server_messages ON messages.ROWID = server_messages.message WHERE messages.rowid IN (SELECT rowid FROM messages WHERE mailbox == %llu ORDER BY date_received DESC LIMIT %llu) AND %@ AND messages.summary IS NULL ORDER BY messages.date_received DESC
SELECT messages.global_message_id, server_messages.remote_id, messages.size FROM messages INNER JOIN server_messages ON messages.ROWID = server_messages.message WHERE messages.mailbox == %llu AND %@ AND messages.summary IS NULL ORDER BY messages.date_received DESC
error performing query: %@
SELECT date_received FROM messages WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND flags & 128 = 0 ORDER BY date_received ASC LIMIT 1;
SELECT date_received FROM messages JOIN searchable_messages ON messages.ROWID = searchable_messages.message_id WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND flags & 128 = 0 AND searchable_messages.transaction_id != 0 ORDER BY date_received ASC LIMIT 1
attached
not attached
SELECT COUNT() %@;
SELECT mailboxes.url, COUNT(DISTINCT(messages.message_id)) %@ GROUP BY 1;
INSERT INTO temp_selected_messages SELECT rowid FROM messages WHERE mailbox = ifnull((SELECT rowid FROM mailboxes WHERE url = :url), -1) AND deleted = '0' ORDER BY date_received DESC, ROWID DESC LIMIT :limit OFFSET :offset;
:url
:limit
:offset
SELECT messages.ROWID, remote_id, date_received, date_sent, display_date, flags, size, messages.subject_prefix, subjects.subject, sender.comment AS sender_comment, sender.address AS sender_address, mailbox, original_mailbox, content_type, summaries.summary, encoding FROM temp_selected_messages AS selection LEFT OUTER JOIN messages ON selection.message_id = messages.rowid LEFT OUTER JOIN addresses AS sender ON messages.sender = sender.ROWID LEFT OUTER JOIN subjects ON messages.subject = subjects.ROWID LEFT OUTER JOIN summaries ON messages.summary = summaries.ROWID;
DELETE FROM temp_selected_messages;
messagesWithSummariesForMailbox
INSERT INTO temp_selected_messages SELECT rowid FROM messages WHERE rowid >= 0 AND rowid <= :maxRowId ORDER BY rowid DESC LIMIT :limit;
:maxRowId
 FROM temp_selected_messages AS selection LEFT OUTER JOIN messages ON selection.message_id = messages.rowid LEFT OUTER JOIN addresses AS sender ON messages.sender = sender.ROWID LEFT OUTER JOIN subjects ON messages.subject = subjects.ROWID;
orderedBatchOfMessagesEndingAtRowId
error performing query: %@: %@
@"MFMessageCriterion"16@?0@"NSString"8
%@: Unable to form query for criteria
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE flags&%llu = 0 AND mailbox IN (%@)
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags&16 > 0 AND flags&2 = 0) AND mailbox IN (%@)
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE ((((flags&(63<<10))>>10) BETWEEN 1 AND 62) AND flags&1 = 0) AND mailbox IN (%@)
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE ((flags&(3<<39)>>39) > 0 AND flags&1 = 0) AND mailbox IN (%@)
SELECT COUNT(DISTINCT(message_id)) FROM messages JOIN read_later ON messages.global_message_id = read_later.global_message_id WHERE mailbox IN (%@)
SELECT COUNT() FROM message_global_data JOIN send_later ON message_global_data.ROWID = send_later.global_message_id WHERE mailbox IN (%@)
url = %Q
SELECT ROWID FROM mailboxes WHERE %@
SELECT unread_count FROM mailboxes WHERE url = ?
SELECT flagged_count FROM mailboxes WHERE url = ?
SELECT attachment_count FROM mailboxes WHERE url = ?
SELECT to_cc_count FROM mailboxes WHERE url = ?
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (((flags&(63<<10))>>10) BETWEEN 1 AND 62) AND mailbox IN (%@)
SELECT count(messages.rowid) FROM messages JOIN mailboxes ON messages.mailbox = mailboxes.rowid WHERE url = ? AND (flags & %llu = 0) AND deleted = '0'
SELECT COUNT(messages.rowid) FROM messages JOIN mailboxes ON messages.mailbox = mailboxes.rowid WHERE url = ? AND flags & %llu AND deleted = '0'
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags & %llu = 0) AND (deleted = '0') AND mailbox IN (%@)
SELECT server_unread_count FROM mailboxes WHERE url = ?
SELECT count() FROM (SELECT searchable_messages.transaction_id FROM messages JOIN searchable_messages ON messages.ROWID = searchable_messages.message_id WHERE mailbox IN (SELECT ROWID FROM mailboxes WHERE url = ?) ORDER BY ROWID DESC LIMIT %lu) WHERE transaction_id != 0
SELECT count() FROM messages JOIN searchable_messages ON messages.ROWID = searchable_messages.message_id JOIN mailboxes ON messages.mailbox = mailboxes.rowid WHERE url = ? AND searchable_messages.transaction_id != 0
UPDATE mailboxes SET server_unread_count = ? WHERE url = ?
updating server unread-only-on-server count
last_sync_status_count
most_recent_status_count
SELECT most_recent_status_count FROM mailboxes WHERE url = ?
UPDATE mailboxes SET most_recent_status_count = ? WHERE rowid = ?
setting unseen count
%@ FROM messages WHERE remote_mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND messages.remote_id = ? LIMIT 1
finding message for UID
v24@?0@"NSString"8^B16
%@ FROM messages %s WHERE remote_mailbox = (SELECT ROWID FROM mailboxes WHERE url = %@) AND messages.remote_id IN (%@)
SELECT sequence_identifier FROM mailboxes WHERE url = ?
loading mailbox sequence identifier
UPDATE mailboxes SET sequence_identifier = ? WHERE ROWID = ?
setting mailbox sequence identifier
SELECT MIN(messages.sequence_identifier) FROM messages JOIN mailboxes ON messages.mailbox = mailboxes.rowid WHERE url = ? AND remote_id IN (?
loading per-message minimum sequence identifier
UPDATE messages SET sequence_identifier = ? WHERE ROWID = ?
setting per-message sequence identifier
UPDATE messages SET sequence_identifier = ? WHERE MAILBOX = (SELECT ROWID FROM mailboxes WHERE url = ?) AND remote_id IN(?
setting en masse per-message sequence identifier
Unsupported option for fetching message
%@FROM messages%s
, messages.mailbox 
%@ %@ WHERE messages.ROWID = ?%@ LIMIT 1
 AND mailbox = ?
 AND mailbox IN (SELECT ROWID FROM mailboxes WHERE url = ?)
%@ %@ WHERE messages.ROWID = ? LIMIT 1
Fetching message for library ID
SELECT conversation_id FROM messages WHERE rowid IN (SELECT message FROM message_references WHERE reference IN (SELECT reference FROM message_references WHERE message = ?));
Ref Ref Error! Ref!
SELECT conversation_id FROM messages WHERE message_id IN (SELECT reference FROM message_references WHERE message = ?);
Ref Error!
SELECT messages.conversation_id FROM message_references, messages WHERE reference IN (SELECT message_id FROM messages WHERE rowid = ?) AND messages.rowid = message_references.message;
Deref error!
SELECT conversation_id FROM messages WHERE message_id = ? AND rowid != ?;
Message error!
SELECT message_references.message, reference FROM message_references LEFT OUTER JOIN messages ON reference = messages.message_id WHERE message_references.message IN (SELECT rowid FROM messages WHERE conversation_id in (SELECT conversation_id FROM messages WHERE rowid = ?)) AND messages.rowid IS NULL
Getting references that do not exist in the DB in this conversation.
v32@?0@"NSNumber"8@"EFMutableInt64Set"16^B24
SELECT ROWID, url FROM mailboxes
selecting mailbox URLs
SELECT url FROM mailboxes WHERE ROWID = ?;
-[MFMailMessageLibrary mailboxURLsForIDs:]
MailMessageLibrary.m
urlsByID.count == mailboxIDs.count
v32@?0@"NSNumber"8@"NSString"16^B24
SELECT rowid FROM mailboxes WHERE url = ?;
SELECT ROWID FROM messages WHERE (ROWID IN (%@)) AND (flags & %llu != 0)
SELECT flags FROM conversations WHERE conversation_id = ?
fetching conversation flags
UPDATE conversations SET flags = ? WHERE conversation_id = ?
setting conversation flags
UPDATE conversations SET flags = ?, sync_key = ? WHERE conversation_id = ?
setting conversation flags and sync key
%lld
SELECT DISTINCT(conversation_id) FROM conversation_id_message_id WHERE message_id IN (%@)
finding conversation id
SELECT value FROM properties WHERE key = ?
INSERT OR REPLACE INTO properties (key, value) VALUES (?,?)
DELETE FROM properties WHERE key = ?
%@ property %@
updating
deleting
UPDATE pop_uids SET flags = ? WHERE mailbox = ? AND uid = ?
Clearing flags in pop_uids
messages.count <= EDMessageBatchSize
@"NSString"16@?0@"MFLibraryMessage"8
SELECT sender, subject, summary, brand_indicator FROM messages WHERE ROWID IN (%@)
Fetching messages to delete
SELECT DISTINCT address FROM recipients WHERE message IN (%@)
Fetching recipient addresses for messages
DELETE FROM messages WHERE ROWID IN (%@)
Deleting messages
recipients
addresses
brand_indicator
Transaction for removing files after compaction
v24@?0@"NSNumber"8^B16
v24@?0@"MailAccount"8^B16
v32@?0@"MailAccount"8@"NSMutableSet"16^B24
SELECT DISTINCT %@ FROM %@ WHERE %@ IN (%@)
Fetching value
DELETE FROM %@ WHERE ROWID IN (%@)
Deleting rows
UPDATE mailboxes SET url = '%q' WHERE url = '%q';
DELETE FROM mailboxes WHERE url = '%q'
deleting mailbox URL
renaming mailbox
deleting mailbox
headers.emlx
Attempting to store summary in protected message data table
SELECT rowid FROM message_data WHERE message_id = ? AND part = ?
searching for existing message_data entry
INSERT INTO message_data (message_id, part, partial, complete, length) VALUES (:message_id, :part, :partial, :complete, :length)
UPDATE message_data SET message_id = :message_id, part = :part, partial = :partial, complete = :complete, length = :length WHERE rowid = :rowid
:message_id
:part
:partial
:complete
:length
inserting message data (unprotected)
preparing insert statement
INSERT OR REPLACE INTO protected_message_data (ROWID, data) VALUES (%lld, NULL);
INSERT OR REPLACE INTO protected_message_data (ROWID, data) VALUES (%lld, X'%s');
INSERT OR REPLACE INTO protected_message_data (ROWID, data) VALUES (%lld, %Q);
Inserting into protected_message_data
Checking for message existence when setting summary
UPDATE messages SET summary = ? WHERE ROWID = ?
Setting summary
Attempting to load summary from protected message data table
SELECT data FROM protected_message_data WHERE ROWID = (SELECT ROWID FROM message_data WHERE message_id = ? AND part = ?)
Fetching message data
@16@?0@"NSData"8
SELECT complete FROM message_data WHERE message_id = ? and part = ?
SELECT length, complete, partial FROM message_data WHERE message_id = ? AND part IS NULL
length
complete
partial
checking message_data
addresses AS sender JOIN messages ON sender.ROWID = messages.sender %s
addresses AS recipient JOIN recipients ON recipient.ROWID = recipients.address JOIN messages ON recipients.message = messages.ROWID %s
attachments AS attachment JOIN messages ON attachment.message_id = messages.ROWID %s
mailboxes JOIN messages ON mailboxes.ROWID = messages.mailbox %s
read_later JOIN messages ON read_later.global_message_id = messages.global_message_id %s
send_later JOIN messages ON send_later.global_message_id = messages.global_message_id %s
senders JOIN sender_addresses ON senders.ROWID = sender_addresses.sender JOIN messages ON senders_addresses.address = messages.sender %s
brand_indicators JOIN messages ON brand_indicators.ROWID = messages.brand_indicator %s
messages %s
%@ FROM %@ WHERE %@
%@ FROM %@ WHERE %@%@
 ORDER BY %1$s %2$s, messages.ROWID %2$s
display_date
date_received
DESC
 LIMIT %lu
 OFFSET %lu
FALSE
@"NSString"16@?0@"EFQuery"8
 ORDER 
 LIMIT 
%@ UNION %@
@"NSString"24@?0@"NSString"8@"NSString"16
@"NSString"16@?0@"EDPersistenceDatabaseConnection"8
@"EFQuery"16@?0@"NSPredicate"8
@"NSPredicate"16@?0@"EMObjectID"8
@"NSPredicate"16@?0@"NSPredicate"8
v32@?0@"NSPredicate"8Q16^B24
DELETE FROM accounts WHERE text_id = ?
deleting an account entry
 AND +messages.mailbox IN (SELECT ROWID FROM mailboxes WHERE %@) 
@"EFSQLBinaryExpression"16@?0@"MailAccount"8
UPDATE pop_uids SET del = 1 WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND uid = ?;
setting pop_uid.del = 1
SELECT uid FROM pop_uids WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND del NOT NULL;
SELECT uid FROM pop_uids WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?);
SELECT uid FROM pop_uids AS uid LEFT OUTER JOIN messages AS message ON uid.mailbox = message.remote_mailbox AND uid.uid = message.remote_id WHERE uid.mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND message.rowid IS NULL OR (message.flags & 2) > 0;
SELECT message_id FROM messages_deleted
collecting deleted message identifiers
DELETE FROM protected_message_data WHERE ROWID IN (SELECT message_data_id FROM message_data_deleted)
DELETE FROM message_data_deleted
cleaning up protected tables
LogDatabaseStats
v16@?0@"NSObject<OS_xpc_object>"8
Wrong kind of database connection
protected
PRAGMA %@.freelist_count;
PRAGMA %@.page_count;
PRAGMA %@.incremental_vacuum(%lld);
main
journal reconciliation failed
-[MFMailMessageLibrary journalReconciliationFailed]
0 && "journal reconciliation failed"
#Performance Moving database files
SavedFolders
#Performance Removing 
 LIMIT %ld
%@ FROM messages %s WHERE %@ %@ ORDER BY %@%@
%@ FROM messages %s WHERE %@ %@%@
%@ FROM messages %s ORDER BY %@%@
%@ FROM messages %s %@
v32@?0@"MFLibraryMessage"8Q16^B24
%@.%lld
follow_up_jsonstringformodelevaluationforsuggestions
SELECT addresses.ROWID, addresses.address, addresses.comment, recipients.type FROM recipients JOIN addresses ON recipients.address = addresses.ROWID WHERE recipients.message = ? ORDER BY recipients.position
type
Fetching recipients
Must include at least one recipient type
SELECT addresses.address, addresses.comment, recipients.type, recipients.message FROM recipients JOIN addresses ON recipients.address = addresses.ROWID WHERE recipients.message IN (%@) AND type IN (%@) ORDER BY recipients.position
stringValue
Unknown recipient type
SELECT * FROM mailboxes;
url: %@
  total Count: %@
total_count
  unread Count: %@
unread_count
  deleted Count: %@
deleted_count
  flagged Count: %@
flagged_count
  server Unread Count: %@
server_unread_count
  last Sync Status Count: %@
  most Recent Status Count: %@
Selecting mailboxes
SELECT length FROM message_data WHERE message_id = ? AND part = ?
SELECT length FROM message_data WHERE message_id = ? AND part IS NULL
RichLinks
v16@?0@"MFMimePart"8
alternative
v32@?0@"EDRichLinkData"8Q16^B24
v16@?0@"EDWebContentParserResults"8
feature not enabled
SELECT 1 FROM messages WHERE ROWID = ?;
testing for message existence
DELETE FROM message_data WHERE message_id = ? AND part = ?
DELETE FROM message_data WHERE message_id = ? AND part IS NULL
deleting message data
fullAddress
com.apple.message.statisticsLogging
UPDATE messages SET flags = :flags, read = :read, flagged = :flagged, flag_color = :flag_color, deleted = :deleted, sender_vip = :sender_vip, encoding = :encoding, remote_id = :uid
 WHERE ROWID = :rowid
:read
:flagged
:flag_color
:deleted
:sender_vip
:uid
:encoding
read
deleted
sender_vip
, %@ = '%d'
v32@?0@"NSString"8@16^B24
audio
video
application
INSERT INTO mailboxes (url) values ('%q')
inserting mailbox URL
 LEFT OUTER JOIN subjects ON messages.subject = subjects.ROWID
 LEFT OUTER JOIN addresses AS sender ON messages.sender = sender.ROWID
 JOIN mailboxes AS mailbox ON messages.mailbox = mailbox.ROWID
 LEFT OUTER JOIN summaries ON messages.summary = summaries.ROWID
 JOIN conversations AS conversations ON messages.conversation_id = conversations.conversation_id
 LEFT OUTER JOIN read_later ON messages.global_message_id = read_later.global_message_id
 LEFT OUTER JOIN send_later ON messages.global_message_id = send_later.global_message_id
 LEFT OUTER JOIN message_global_data ON messages.global_message_id = message_global_data.ROWID
 LEFT OUTER JOIN sender_addresses ON messages.sender = sender_addresses.address LEFT OUTER JOIN senders ON sender_addresses.sender = senders.ROWID
 LEFT OUTER JOIN brand_indicators ON messages.brand_indicator = brand_indicators.ROWID
 JOIN searchable_rebuild ON messages.rowid = searchable_rebuild.message_id
%s%s%s%s%s%s%s%s%s%s%s%s
@"NSString"16@?0@"NSNumber"8
SELECT ROWID, url FROM mailboxes WHERE ROWID IN (%@);
preparing statement for fetching mailbox URLs
iterating results for mailbox URLs
_dataForMessageAndPart
![part isEqualToString:MFMessagePartNameSummary]
SELECT %@ FROM message_data AS a JOIN protected_message_data AS b ON a.rowid = b.rowid AND a.message_id = ? AND %@
b.data, a.complete
part = ?
part IS NULL
b.data
part = ? AND complete IS NOT NULL
part IS NULL AND complete IS NOT NULL
%@ AND partial IS NULL
Fetching data for message part
handleIterativeSearchRow
c->handlerWantsMessageObjects
loading UIDs to delete
com.apple.message.db.vacuum
_writeDataHolderForMessageAndPart
directory
BOOL _writeDataHolderForMessageAndPart(MFMailMessageLibrary *__strong, EDPersistenceDatabaseConnection *__strong, EMDatabaseID, EMGlobalMessageID, NSString *__strong, NSString *__strong, MFDataHolder *__strong, BOOL, BOOL, MFFileCompressionQueue *__strong, MailAccount *__strong)
cannot write partial MIME parts.
&aid=%@
Partial message, part %@ of %@
To read this message, select all of the parts of the message and select the Message --> MIME --> Combine Messages menu item.
number
total
VIPCriterion
ThreadNotifyCriterionName
ThreadMuteCriterionName
FlaggedCriterion
FlagColorCriterion
UnreadCriterion
ReadCriterion
IncludesMeCriterion
ToMeCriterionName
CcMeCriterionName
HasAttachmentsCriterion
SenderBucketCriterion
TodayCriterion
YesterdayCriterion
LastWeekCriterion
ReadLaterCriterion
FollowUpCriterion
SendLaterCriterion
UnsubscribeCriterion
MFPropertyMapperLookupKeyCriterionType
--compare-field
CriterionUniqueId
Header
GlobalMessageID
MessageIdHash
Expression
Qualifier
Name
AllCriteriaMustBeSatisfied
Criteria
DateUnitType
DateIsRelative
AccountURL
To or Cc
Body
SenderIsInAddressBook
SenderIsNotInAddressBook
SenderIsMemberOfGroup
SenderIsNotMemberOfGroup
SenderHeader
AnyMessage
Mailbox
AnyRecipient
DateSent
DateReceived
DisplayDate
SenderIsInAddressHistory
SenderIsNotInAddressHistory
AnyRecipientIncludesFullName
NoRecipientIncludesFullName
IsDigitallySigned
IsEncrypted
PriorityIsNormal
PriorityIsHigh
PriorityIsLow
AnyAttachment
MessageNumber
ExternalID
Negation
Compound
Flag
FlagColor
NotInTrashMailbox
ContainsAttachments
InSpecialMailbox
NotInASpecialMailbox
SpotlightSearch
ConversationID
ListIDHash
DocumentID
ToRecipient
CcRecipient
DateLastViewed
ReadLater
FollowUpStartDate
FollowUpEndDate
SendLater
Unsubscribe
SenderBucket
BeginsWith
EndsWith
IsEqualTo
IsNotEqualTo
DoesNotContain
Contains
ASCIIContains
IsLessThan
IsGreaterThan
(none)
%@Criterion: %@
%@%@  All criteria must be satisfied: %@
%@  Criteria: %@
%@  Name: %@
%@Criterion: %@
%@ Sub-Criterion: 
%@Criterion: %@
%@  Qualifier: %@
%@  Expression: %@
<%@: %p> %@
From
 or 
@"MFMessageCriterion"16@?0@"MFMailboxUid"8
    
MessageIsRead
MessageIsDeleted
MessageIsJournaled
MessageIsFlagged
MessageFlagColor
MessageWasRepliedTo
MessageWasForwarded
MessageWasRedirected
MessagePriorityLevel
MessageIsEncrypted
MessageIsSigned
MessageSenderIsVIP
MessageToContainsAccountAddress
MessageCcContainsAccountAddress
MessageToOrCcContainsAccountAddress
MFMessageHasAttachments
MessageIsJunk
MessageIsNotJunk
MessageNumberOfAttachmentsChanged
MessageFontSizeDelta
MessageHighlightTextInTOC
MessageHasBeenViewed
MessageViewedDate
MessageIsServerSearchResult
MessageIsThreadSearchResult
EMMessageDeliveryStatusInProgress
MessageQueuedForDelivery
shouldUseICSRepresentation
MessageConversationIsVIP
MessageConversationIsMuted
MessageChangeReason
MessageIsReadLater
0x%llx (%s
unread
, junk
, not-junk
, deleted
, answered
, forwarded
, redirected
, flagged
, flagColor=%lu
, VIP
, encrypted
, signed
, recent
, draft
, server search result
, thread search result
, priority=%x
, partial
, delivery
, temp UID
, indexed message body
v32@?0@"NSString"8@"NSNumber"16^B24
x-apple-msg-load
Library
folder
paperplane
tray
archivebox
xmark.bin
tray.2
star
flag
flag.fill
paperclip
bell.slash
bell
clock
envelope.open.badge.clock
arrow.up.circle.badge.clock
xmark
calendar
envelope.badge
chevron.forward
chevron.down
square.and.pencil
magnifyingglass
plus
meeting
meeting data
meeting metadata
com.apple.Message
MFSignerInfoErrorKey
SMIME_DAMAGED_SIG
SMIME_UNREADABLE_SIG
There was a problem reading the digital signature for this message.
SMIME_SIG_TITLE
Unable to verify message signature
readstatus
received-date
UseFormatFlowedForWrapping
plain
mixed
@16@?0@8
html
related
inline
-[MFMessageWriter setMessageClassToInstantiate:]
MessageWriter.m
BAD_CHARSET_FORMAT
BAD_CHARSET_TITLE
Invalid Text Encoding
filename
external-body
local-file
access-type
x-unix-mode
octet-stream
remote-image
x-apple-content-length
base64
boundary
signed
binary
8bit
7bit
quoted-printable
MFAccountAutoFetchController
MFAccountLoaderErrorDomain
MailServices
InstantiableMailAccountClasses
AOLAccount
GmailAccount
YahooAccount
SMTPAccount
MFUpdateAccountsInPlaceKey
v16@?0@"<MFActivityConditionBuilder>"8
MFActivityCondition.m
builderBlock
com.apple.mail.MFActivityCondition
v16@?0@"NSNumber"8
@"NSNumber"16@?0@"NSArray"8
v16@?0@"NSError"8
com.apple.frontboard.visibility
v32@?0@"RBSProcessMonitor"8@"RBSProcessHandle"16@"RBSProcessStateUpdate"24
v16@?0@"<RBSProcessMonitorConfiguring>"8
MFAPSManagerDeviceTokenChangedNote
com.apple.mobilemail.dummyTopicToForceServerConnection
com.apple.mobilemail.push.
com.apple.mail.
account-id
com.apple.email.maild.aps
com.apple.message.apsManager
System/Library/PrivateFrameworks/ApplePushService.framework
APSConnection
development
production
MFUseAPSDevelopmentEnvironment
==== MFAPSManager ====
  push service: %@
  watched topics: {%@}
  ignored topics: {%@}
  device token (%@): '%@'
waiting for token
has token
_tokenConditionString
MFAPSManager.m
0 && "unknown token condition"
com.apple.mobileconfig
com.apple.mobileprovision
com.apple.ical.ics
com.apple.ical.vcs
com.apple.iwork
MFAttachmentIsSinglePagePDFKey
<%@: %p> url=%@, path=%@, contentID=%@, mimeType=%@, mimePart=%@, isMailDrop=%d
<%@: %p> contentID=%@, mimeType=%@, isMailDrop=%d
x-uuencode
v24@?0@"NSData"8@"NSError"16
x-attach-maildrop
x-attach-maildrop-image
MFAttachmentIsPlaceholder
MFAttachmentMailDropMetaData
DisableAttachmentFilters
VERSION:1.0
VERSION:2.0
text/calendar
_MFEventUniqueID
_MFMeetingStorePersistentID
_MFICSRepresentation
x-attach-RFC822
message/rfc822
message/delivery-status
x-attach-compose
MFAttachmentFileNameKey
MFAttachmentRemoteImageFileNameKey
MFAttachmentPathKey
MFAttachmentUTTypeKey
application/zip
v16@?0@"UTType"8
MFAttachmentMimetypeKey
MFAttachmentDecodedFileSizeKey
MFAttachmentEncodedFileSizeKey
text/html
text/
_MFAttachmentEncodingKey
v24@?0B8@"NSError"12B20
apple_ak
enc_base_image
enc_model
B24@?0^{__CFString=}8^{CGImageMetadataTag=}16
MFMailAttachmentUploadLimitKey
MFMailAttachmentMessageLimitKey
MFMailAttachmentMailDropThresholdKey
MFMailAttachmentPlaceholderThresholdKey
MFMailAttachmentPlaceholdersAvailableKey
MFMailAttachmentMailDropAvailableKey
MFMailAttachmentMailDropConfiguredKey
MailDropShortExp
mailDrop
AttachmentPlaceholderLowerLimit
com.apple.mail.attachmentComposeManagerAttachmentURLArray
fractionCompleted
v16@?0@"NSDictionary"8
Success
Failed
FetchDataForURL
com.apple.message.MFAttachmentComposeManager
x-attach-compose://%@
MFAttachmentComposeManager.m
mimeType || mimeType.length > 0
MFAttachmentDataProviderErrorDomain
v32@?0Q8Q16Q24
Could not retrieve library data for attachment.
No Data Found
Invalid attachment URL.
Invalid Attachment URL
x-attach
MFLocalizedDescriptionKey
MFErrorTitleKey
Could not find a provider for the given URL.
No Provider Found
x-attach://
MFAttachmentCollectionFilterKey
MFAttachmentAttachmentKey
MFAttachmentPrimaryConsumerKey
MFAttachmentMonitorKey
MFAttachmentSyncLockKey
MFAttachmentInvocationURLKey
MFAttachmentInvocationFilterKey
MFAttachmentContentIDKey
MFMailAttachmentCachedSizesChangedNotification
com.apple.mail.attachmentManagerAttachmentArray
com.apple.message.attachmentManager.imagescaling
Invalid attachment URL.  Too few parts.
v32@?0@"NSURL"8@"NSDictionary"16^B24
Succeeded
-[MFAttachmentManager _fetchDataForAttachment:withProvider:request:syncLock:]
MFAttachmentManager.m
B16@?0@"_MFAttachmentActiveRequest"8
v16@?0@"_MFAttachmentActiveRequest"8
B32@?0@"_MFAttachmentActiveRequest"8Q16^B24
Download Canceled.
Download Canceled
-[MFAttachmentManager attachmentForItemProvider:mimeType:fileName:contentID:context:]
=FA=CA=DE{
fileName
fileSize
mimeType
fileURL
contentID
application/x-apple-placeholder
%@ %lu [%@] @ %@ : %@ [%s]
MailDrop
@"<EFFuture>"16@?0@"NSData"8
AttachmentPlaceholders
EFPropertyKey_data
EFPropertyKey_fileName
EFPropertyKey_mimeType
EFPropertyKey_contentID
/MobileMailAttachments
XXXXXXXXXXXXXXXX
MFAttachmentUtilities.m
Path is too long.
XXXXX.%@
Invalid placeholder
@"MFAttachmentPlaceholder"16@?0^@8
B24@?0@"NSURL"8@"NSError"16
B16@?0@"NSError"8
v16@?0@"NSURL"8
-[MFBaseSyncResponseQueue sequenceIdentifierForItem:]
MFBaseSyncResponseQueue.m
[item isKindOfClass:[NSArray class]]
aliases
emails
canSendFrom
fullName
com.apple.message.icloud.alias-update
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
ETag
p99-
Authorization
If-Modified-Since
If-None-Match
EEE, dd MMM yyyy HH:mm:ss zzz
maild
MFCertificateTrustInfo.m
trust
MFCertificateTrustInfoEMCertificateTrustInformationTransformer.m
certificateTrustInfo
MFCertificateTrustDidChangeNotification
Could not find data for compose attachment.
MFContentErrorDocument.m
mimePart
CANNOT_DECODE_MULTIPART_MESSAGE
This message cannot be displayed because of the way it is formatted. Ask the sender to send it again using a different format or email program.
%@/%@
_MFDAFolderChangeConsumer_Lock
MFDAFolderChangeConsumer.m
%@ should not be called twice
%@ status %ld, error %@, folderID "%@", folderName "%@"
MFDAMailAccountSyncConsumer.m
we failed to find a sync actions consumer! requests: %@
DOWNLOADING_STATUS
Downloading
@sum.size
MFDAMessageContentConsumer.m
sanity check 
 removal
sanity check 
 removal.
191AF69B-0088-47D2-AD66-6C9D08949C46
meeting.ics
-[MFDAMessageStore fetchNumMessages:preservingUID:options:]
MFDAMessageStore.m
[[self library] isKindOfClass:[MFMailMessageLibrary class]]
update consumer queue should be empty at this point.
-[MFDAMessageStore _remoteIDsMatchingSearchText:predicate:limit:offset:filterByDate:handler:]
v24@?0q8@"MFMailMessageStoreSearchResult"16
-[MFDAMessageStore replayFlagChange:forRemoteIDs:error:completed:]
should only have LibraryMessages in %s
-[MFDAMessageStore loadMeetingExternalIDForMessage:]
-[MFDAMessageStore loadMeetingDataForMessage:]
-[MFDAMessageStore loadMeetingMetadataForMessage:]
rfc822
was cancelled
timed out
-[MFDAMessageStore _fetchDataForMimePart:range:isComplete:consumer:]
fetchable messages should have non-zero generationNumer
should only reach here in the error case.
done
@"<NSCopying>"16@?0@"MFDAMessage"8
should not have error and response
should not get streaming responses
multipart/alternative; boundary="%@"
Unknown remote identifier. No valid longID or serverID found
v32@?0@8@16^B24
MFDAStoreDraftConsumer.m
got non-successful status code %ld for response
got a successful response with no server id
%s %d : Caught exception %@
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Message/Message/DataAccess/MFDAStoreDraftConsumer.m
v16@?0@"<ECServerMessageBuilder>"8
MFDATransferActionReplayer.m
Copy is not supported for DA accounts
v32@?0@"NSString"8@"ECTransferMessageActionItem"16^B24
@"MFLibraryMessage"16@?0@"ECTransferMessageActionItem"8
Failures 
Interrupted
Vault
-[MFDbJournal _processJournalFile:connection:]
MFDbJournal.m
buf && "failed to allocate buffer during journal merge"
opening journal file
executing SQL statement from journal (%s)
SELECT url FROM mailboxes WHERE reconcile = '1'
getting mailboxes to be reconciled
UPDATE mailboxes SET reconcile = ? WHERE url = ?
last capabilities
Could not retrieve decrypted data for attachment.
EMMessageDeliveryStatusFatalError
EMMessageDeliveryStatusTransientError
EMMessageDeliveryStatusPermanentError
EMMessageDeliveryStatusCancelled
EMMessageDeliveryStatusConfigurationError
EMMessageDeliveryStatusSucceeded
EMMessageDeliveryStatusQueued
EMMessageDeliveryStatusMailDropIncomplete
status: %@, duration:%f, bytesSent: %d, isWifi: %d
MFMessageErrorDomain
UserFriendlyErrorDescription
RecoveryAttemptorClassName
RequestedWebLoginURLKey
MFAccountsWithErrorsKey
_MFMoreInfo
_MFShortDescription
MFNoErrorLog
@"NSString"16@?0q8
MSG_SERVER_ERROR
The server error encountered was: %@
MFSSLErrorCertificateKey
MFSSLErrorCertificateDigestKey
Account Is Locked Out
Unrecoverable Server Error
User Cancelled
Internal
Unknown Service
Authentication Failed
Server Unavailable
Command Failed
Unsupported Feature
Encryption
Signature
User Confirmation Required
Character Set
No Internet Connection
No Host
Socket Read
Invalid Sender
No Recipients
Invalid Recipient
Sender Mailbox Full
Missing Password
Inaccessible Password
Login Disabled
Account In Use
No Delivery Accounts Configured
Missing Identity
Message Rejected
Message Too Large
Data Blocked By Call
Account Needs Web Login
Multiple Account Errors
Unknown Error Code %ld
content-class
urn:content-classes:message
urn:content-classes:appointment
(UID FLAGS BODY.PEEK[HEADER.FIELDS (content-class)])
 content-class
<%@: %p> min=%lu, max=%lu, remaining=%lu
MFFileArchiveDomain
Input range:%lu:%lu
Input data:%lu
Output data:%lu
MFFileArchiveStatusOK
MFFileArchiveStatusFatal
MFFileArchiveStatusFailed
MFFileArchiveStatusWarn
MFFileArchiveStatusRetry
MFFileArchiveStatusFailedHeaderWrite
MFFileArchiveStatusFailedDataWrite
MFFileArchiveStatusUnknown
Failed to close archive
hdrcharset=UTF-8:zip:compression=deflate
Class:%@
URL:%@
Entries[%@]
B32@?0@8Q16^B24
__MACOSX/
%@ Path:%@ Data:%lu Uncompressed:%lu Range:[%lu:%lu]
com.apple.message.fileCompressionQueueActivity
BODYSTRUCTURE
BODY
.PEEK
TEXT
BODY.PEEK[
B16@?0@"MFIMAPDownload"8
-[MFIMAPFetchResult envelope]
MFIMAPFetchResult.m
Invalid item type %d
-[MFIMAPFetchResult setEnvelope:]
-[MFIMAPFetchResult internalDate]
-[MFIMAPFetchResult setInternalDate:]
-[MFIMAPFetchResult fetchData]
-[MFIMAPFetchResult setFetchData:]
-[MFIMAPFetchResult messageSize]
-[MFIMAPFetchResult setMessageSize:]
-[MFIMAPFetchResult bodyStructure]
-[MFIMAPFetchResult setBodyStructure:]
-[MFIMAPFetchResult startOffset]
-[MFIMAPFetchResult setStartOffset:]
-[MFIMAPFetchResult section]
-[MFIMAPFetchResult setSection:]
-[MFIMAPFetchResult uid]
-[MFIMAPFetchResult setUid:]
-[MFIMAPFetchResult uniqueRemoteId]
-[MFIMAPFetchResult setUniqueRemoteId:]
-[MFIMAPFetchResult flagsArray]
-[MFIMAPFetchResult setFlagsArray:]
-[MFIMAPFetchResult setMessageFlags:]
-[MFIMAPFetchResult setCustomFlagsArray:]
-[MFIMAPFetchResult customFlagsArray]
-[MFIMAPFetchResult appleRemoteLinks]
-[MFIMAPFetchResult setAppleRemoteLinks:]
* INVALID *
ENVELOPE %@
INTERNALDATE
RFC822.SIZE %u
BODYSTRUCTURE %@
BODY[%@]<%lu> {%lu}...
BODY[%@] {%lu}...
UID %u
X-GM-MSGID %llu
FLAGS (%@%@%@)
MODSEQ %d
@"NSString"16@?0@"NSURL"8
X-APPLE-REMOTE-LINKS (%@)
 remoteID=%@
%s%u
MFIMAPMessageDownload
q16@?0@"NSData"8
\Seen
\Answered
\Deleted
\Draft
\Recent
$MDNSent
$SubmitPending
$Submitted
$Forwarded
Forwarded
Redirected
$Junk
$NotJunk
NotJunk
JunkRecorded
$MailFlagBit0
$MailFlagBit1
$MailFlagBit2
%@: Unexpected byte %x at position %lu
MFIMAPOperation.m
Invalid method for type %d
CREATE [%@]
DELETE [%@]
[%@] STORE 
 ** expunged **
 <+FLAGS.SILENT%@>
 <-FLAGS.SILENT%@> 
APPEND [%@] %@ {%u}
COPY [%@] [%@]
-[MFIMAPParseContext setStart:]
MFIMAPParseContext.m
start >= _originalStart && "Should not put the start before the original start."
-[MFIMAPParseContext setEnd:]
end <= _originalEnd && "Should not put the end past the original end."
Error while parsing IMAP response %@: %@
Remaining text: <%@>
Expected number in literal
Expected right curly brace
Expected end-of-line
Read failure
Ignoring extra bytes read during literal
d-MMM-yyyy H:mm:ss ZZZ
Can't parse array contents
RECENT
EXISTS
_IMAPNameQuotaKey
_IMAPCurrentUsageQuotaKey
_IMAPMaxUsageQuotaKey
_IMAPNamespacePrefixKey
_IMAPNamespaceDelimiterKey
_IMAPNamespaceExtensionsKey
CHARSET=
%@ is invalid for %s
%@ is invalid for response type %d
-[MFIMAPResponse fetchResults]
MFIMAPResponse.m
_responseType == IMAPFetchResponse && "Invalid response type for fetchResults"
(%@)
 ==> (%@)
 "%@"
 (%@ %@/%@)
 %@ %c%@
*nil*
("%@" 
 "%@" ("%@")
v32@?0@"NSString"8@"NSArray"16^B24
v16@?0@"NSArray"8
 TAG ("%@") UID ALL (returned %lu uids, lowest = %lu, highest = %lu)
 TAG ("%@") UID MAX %@
 TAG ("%@") UID MIN %@
 TAG ("%@") UID COUNT %@
should not register multiple consumers for the same section: %@
--Not Set--
PREAUTH
FLAGS
QUOTAROOT
--OTHER--
X-UID-FLAGS
ALERT
UNAVAILABLE
EXPIRED
PRIVACYREQUIRED
CONTACTADMIN
NOPERM
INUSE
EXPUNGEISSUED
CORRUPTION
SERVERBUG
LIMIT
OVERQUOTA
ALREADYEXISTS
NONEXISTENT
BADCHARSET
NEWNAME
PARSE
READ-ONLY
READ-WRITE
TRYCREATE
NOMODSEQ
PERMANENTFLAGS
APPENDUID
COPYUID
CLIENTBUG
Expected ]
Expected list or NIL
\Noinferiors
\Noselect
\Marked
\Unmarked
\HasChildren
\HasNoChildren
\NonExistent
Invalid FETCH response
Couldn't parse FETCH: no space character in input
ENVELOPE
X-GM-MSGID
RFC822.SIZE
RFC822.HEADER
RFC822.TEXT
MODSEQ
BODY[
HEADER.
Unable to parse header keys array
Couldn't parse FETCH: no square brace character in input
Expected number
Expected >
Unrecognized FETCH key
Expected a right paren
Couldn't parse FETCH: X-APPLE-REMOTE-LINKS has invalid format
X-APPLE-REMOTE-LINKS contains non-string value
@"NSURL"16@?0@"NSString"8
couldn't parse NAMESPACE: unexpected atom
couldn't parse namespace response: prefix and/or delimiter were not strings
couldn't parse namespace response extensions: invalid key or value
couldn't parse namespace response extensions: not enough values for keys
@"NSArray"8@?0
--EXTENSION--
Incomplete response
Junk at end of response
CachedConnectionLock
%@ - '%@'
DOWNLOADING_STATUS_FORMAT
Downloading %@ of %@
SEEN
FLAGGED
ANSWERED
KEYWORD
%lu:*
v16@?0@"MFIMAPConnection"8
%lu:%lu
LibraryIMAPStoreErrorDomain
v32@?0Q8@"NSIndexSet"16@"NSError"24
IMAP_COMPACT_FAILED
Couldn't make replayer for action %@
com.apple.message.imap (IDLE)
DeletedSearchLimit
compactMessagesToUID
limit
CHARSET
v16@?0@"NSString"8
SUBJECT
fetchArgumentsForCriterion
MFLegacyIMAPMailboxTaskManager.m
0 && "Message ID header criterion must have a MessageRuleIsEqualTo qualifier"
FROM
(OR TO
NSArray *fetchArgumentsForCriterion(MFMessageCriterion *__strong, BOOL)
could not map expression to flag: %@
UNKEYWORD 
KEYWORD 
SINCE
0 && "Need to handle criterion for IMAP headers"
(OR FROM
(OR SUBJECT
(OR CC
Reconciling all messages
Reconciling context based messages
Reconciling inbox messages
@16@?0@"EFQuery"8
@"NSNumber"16@?0@"MFLibraryMessage"8
journaled
Cleaning up messages after reconciliation
@16@?0@"NSPredicate"8
@16@?0@"MailAccount"8
com.apple.message.library.reconciliationcleanup
Reconciling threads
threads
conversation
scope
MFListUnsubscribeMessageGenerator_iOS.m
command
mailtoValues
-[MFLocalActionPersistence_iOS initWithDatabase:gmailLabelPersistence:]
MFLocalActionPersistence_iOS.m
-[MFLocalActionPersistence_iOS initWithDatabase:]
-[MFLocalActionPersistence_iOS labelNameForLabelID:]
com.apple.mobilemail.localActionReplayScheduler
%@ for account: %@
<BR>
Reply-To
Subject
Date
Attachments
Resent-To
Resent-Cc
Resent-From
&nbsp; 
<B>%@:</B> 
<B>%@</B><BR>
%@<BR>
com.apple.message.lockStateMonitor
com.apple.message.lockStateMonitor.notifyq
com.apple.springboard.lockstate
@"NSNumber"16@?0@"EMMailboxObjectID"8
MFMailboxProvider.m
-[MFMailboxProvider test_tearDown]
v16@?0@"<EMMailboxBuilder>"8
com.apple.mobilemail.MailDropDownload
com.apple.mobilemail.MailDropDownloadWIFIOnly
downloadPromise
primaryConsumer
kMFMailDropServiceKey
MainAccount
MailDropDeliveryStateKey
com.apple.largeattachment
mailAttachment
data
contentType
uploadDate
v24@?0@"CKRecordZoneID"8@"NSError"16
v40@?0@"CKRecordID"8@"NSString"16@"CKAsset"24@"NSError"32
filesize
v24@?0@"CKRecord"8d16
v24@?0@"CKRecord"8@"NSError"16
@"EFFuture"16@?0@"CKRecord"8
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v24@?0@"CKRecordZone"8@"NSError"16
Could not get zoneID to create zone.
CREATE INDEX IF NOT EXISTS messages_journaled_conversation_id_date_received_index ON messages(journaled, conversation_id, date_received);
Creating messages_journaled_conversation_id_date_received_index
DROP INDEX IF EXISTS messages_journaled_conversation_id_index;
Dropping messages_journaled_conversation_id_index
DROP TABLE attachments
Dropping attachments
CREATE TABLE attachments (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, message INTEGER NOT NULL REFERENCES messages(ROWID) ON DELETE CASCADE, attachment_id TEXT COLLATE BINARY, name TEXT COLLATE BINARY, UNIQUE(message, attachment_id) ON CONFLICT ABORT);
Creating attachments
CREATE INDEX IF NOT EXISTS attachments_message_attachment_id_index ON attachments(message, attachment_id);
Creating attachments_message_attachment_id_index
CREATE INDEX IF NOT EXISTS attachments_message_name_index ON attachments(message, name);
Creating attachments_message_name_index
CREATE INDEX IF NOT EXISTS searchable_attachments_attachment_index ON searchable_attachments(attachment);
Creating searchable_attachments_attachment_index
CREATE INDEX IF NOT EXISTS searchable_attachments_message_id_index ON searchable_attachments(message_id);
Creating searchable_attachments_message_id_index
ALTER TABLE searchable_message_tombstones RENAME TO searchable_message_tombstones_old;
Renaming searchable_message_tombstones
CREATE TABLE searchable_message_tombstones (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, type INTEGER NOT NULL, identifier TEXT COLLATE BINARY NOT NULL, transaction_id INTEGER, UNIQUE(type, identifier) ON CONFLICT ABORT);
Creating searchable_message_tombstones_new
INSERT INTO searchable_message_tombstones SELECT * FROM searchable_message_tombstones_old;
Copying searchable_message_tombstones to new table
DROP TABLE searchable_message_tombstones_old;
Dropping searchable_message_tombstones_old
CREATE INDEX IF NOT EXISTS searchable_message_tombstones_transaction_id_type_identifier_index ON searchable_message_tombstones(transaction_id, type, identifier);
Creating searchable_message_tombstones_transaction_id_type_identifier_index
CREATE TABLE IF NOT EXISTS mailbox_actions (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, account_identifier TEXT, action_type INTEGER, mailbox_name TEXT);
Creating mailbox_actions table
.OfflineCache/operations
INSERT INTO mailbox_actions (account_identifier, action_type, mailbox_name) VALUES (?, ?, ?)
CREATE TABLE IF NOT EXISTS searchable_messages (message_id INTEGER PRIMARY KEY, message INTEGER REFERENCES messages(ROWID) ON DELETE SET NULL, transaction_id INTEGER NOT NULL, message_body_indexed INTEGER NOT NULL, reindex_type INTEGER NOT NULL);
Creating searchable_messages table
CREATE INDEX IF NOT EXISTS searchable_messages_message_reindex_type_transaction_id_index ON searchable_messages(message, reindex_type, transaction_id);
Creating searchable_messages_message_reindex_type_transaction_id_index
CREATE INDEX IF NOT EXISTS searchable_messages_message_id_reindex_type_index ON searchable_messages(message_id, reindex_type);
Creating searchable_messages_message_id_reindex_type_index
CREATE TABLE IF NOT EXISTS searchable_message_tombstones (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, type INTEGER NOT NULL, identifier TEXT NOT NULL, transaction_id INTEGER, UNIQUE(type, identifier));
Creating searchable_message_tombstones table
CREATE TABLE IF NOT EXISTS attachments (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, message INTEGER NOT NULL REFERENCES messages(ROWID) ON DELETE CASCADE, attachment_id TEXT, name TEXT, UNIQUE(message, attachment_id));
Creating attachments table
CREATE TABLE IF NOT EXISTS searchable_attachments (attachment_id INTEGER PRIMARY KEY, attachment INTEGER REFERENCES attachments(ROWID) ON DELETE SET NULL, message_id INTEGER, transaction_id INTEGER NOT NULL);
Creating searchable_attachments table
DROP TABLE IF EXISTS spotlight_tombstones;
Dropping spotlight_tombstones table
DROP TABLE IF EXISTS spotlight_message_reindex;
Dropping spotlight_message_reindex table
ssms_mem
DETACH DATABASE ssms_mem
Detaching ssms_mem database
date_last_viewed
visible
sequence_identifier
content_index_transaction_id
flag_color
@"NSMutableArray"16@?0@"NSArray"8
@"EFSQLIndexedColumnSchema"16@?0@"NSString"8
attachment_count
to_cc_count
reconcile
position
sync_key
conversation_id_message_id
properties
value
message_data
part
message_data_deleted
message_data_id
pop_uids
date_added
accounts
text_id
spotlight_tombstones
transaction_id
spotlight_message_reindex
MFMailMessageLibraryAdoptSharedSchemaMigrationStep.m
Protected database must be attached
CREATE TABLE IF NOT EXISTS protected.messages (message_id INTEGER PRIMARY KEY, sender, subject, _to, cc, bcc)
Creating protected messages
CREATE TABLE IF NOT EXISTS protected.message_data (message_data_id INTEGER PRIMARY KEY, data)
Creating protected message_data
ALTER TABLE main.messages RENAME TO messages_old
Moving messages table aside
ALTER TABLE mailboxes RENAME TO mailboxes_old
Moving mailboxes table aside
ALTER TABLE conversations RENAME TO conversations_old
Moving conversations table aside
ALTER TABLE conversation_id_message_id RENAME TO conversation_id_message_id_old
Moving conversation_id_message_id table aside
ALTER TABLE properties RENAME TO properties_old
Moving properties table aside
ALTER TABLE main.message_data RENAME TO message_data_old
Moving message_data table aside
ALTER TABLE message_data_deleted RENAME TO message_data_deleted_old
Moving message_data_deleted_old table aside
ALTER TABLE pop_uids RENAME TO pop_uids_old
Moving pop_uids table aside
ALTER TABLE accounts RENAME TO accounts_old
Moving accounts table aside
ALTER TABLE spotlight_tombstones RENAME TO spotlight_tombstones_old
Moving spotlight_tombstones table aside
ALTER TABLE spotlight_message_reindex RENAME TO spotlight_message_reindex_old
Moving spotlight_message_reindex table aside
Unable to create new tables
Unable to create new protected tables
ATTACH DATABASE ':memory:' AS ssms_mem
Unable to create in-memory database
CREATE TABLE ssms_mem.parsed_subjects ( original PRIMARY KEY ON CONFLICT IGNORE, prefix TEXT COLLATE BINARY, unprefixed TEXT COLLATE RTRIM ) WITHOUT ROWID
Creating ssms_mem.parsed_subjects table
CREATE TABLE ssms_mem.summary_id_by_message ( message INTEGER PRIMARY KEY, summary_id INTEGER )
Creating ssms_mem.summary_id_by_message table
CREATE TABLE ssms_mem.parsed_addresses ( fullAddress TEXT NOT NULL PRIMARY KEY ON CONFLICT IGNORE, address TEXT, comment TEXT ) WITHOUT ROWID
Creating ssms_mem.parsed_addresses table
DROP TABLE ssms_mem.parsed_subjects
Dropping ssms_mem.subject_prefixes table
DROP TABLE ssms_mem.parsed_addresses
Dropping ssms_mem.parsed_addresses table
DROP TABLE ssms_mem.summary_id_by_message
Dropping ssms_mem.summary_id_by_message table
INSERT INTO message_references (message, reference, is_originator) SELECT message_id, ifnull(reference, 0), ifnull(is_originator, 0) FROM threads
Populating message_references
INSERT INTO mailboxes (ROWID, url, total_count, unread_count, deleted_count, sequence_identifier, flagged_count, to_cc_count, server_unread_count, last_sync_status_count, most_recent_status_count, reconcile) SELECT ROWID, url, ifnull(total_count, 0), ifnull(unread_count, 0), ifnull(deleted_count, 0), sequence_identifier, ifnull(flagged_count, 0), ifnull(to_cc_count, 0), ifnull(server_unread_count, 0), ifnull(last_sync_status_count, 0), ifnull(most_recent_status_count, 0), ifnull(reconcile, 0) FROM mailboxes_old
Populating mailboxes
INSERT INTO conversations (conversation_id, flags, sync_key) SELECT conversation_id, (ifnull(flags, 0) & ~0x2) | ((ifnull(flags, 0) & 0x2) << 1), sync_key FROM conversations_old 
Populating conversations
INSERT INTO conversation_id_message_id (conversation_id, message_id, date_sent) SELECT conversation_id, message_id, ifnull(date_sent, 0) FROM conversation_id_message_id_old
Populating conversation_id_message_id
INSERT INTO properties (key, value) SELECT key, value FROM properties_old
Populating properties
INSERT INTO main.message_data (ROWID, message_id, part, partial, complete, length) SELECT ROWID, message_id, part, partial, complete, length FROM message_data_old WHERE part != 'summary' 
Populating message_data
INSERT INTO message_data_deleted (message_data_id) SELECT message_data_id FROM message_data_deleted_old
Populating message_data_deleted
INSERT INTO pop_uids (mailbox, uid, date_added, flags, del) SELECT mailbox, uid, date_added, flags, del FROM pop_uids_old
Populating pop_uids
INSERT INTO accounts (ROWID, text_id) SELECT ROWID, text_id FROM accounts_old
Populating accounts
INSERT INTO spotlight_tombstones (ROWID, type, identifier, transaction_id) SELECT ROWID, type, identifier, transaction_id FROM spotlight_tombstones_old
Populating spotlight_tombstones
INSERT INTO spotlight_message_reindex (message_id, type) SELECT message_id, type FROM spotlight_message_reindex_old
Populating spotlight_message_reindex
SELECT DISTINCT subject FROM protected.messages JOIN main.messages_old ON main.messages_old.ROWID = protected.messages.message_id 
INSERT INTO ssms_mem.parsed_subjects (original, prefix, unprefixed) VALUES (?1, ?2, ?3)
INSERT INTO ssms_mem.parsed_subjects (original, prefix, unprefixed) VALUES (?1, NULL, ?1)
Inserting into ssms_mem.parsed_subjects
Populating ssms_mem.parsed_subjects
INSERT OR IGNORE INTO protected.subjects (subject) SELECT unprefixed FROM ssms_mem.parsed_subjects
Populating protected.subjects table
CREATE TABLE ssms_mem.temp_summaries ( message INTEGER PRIMARY KEY, summary TEXT NOT NULL )
Creating ssms_mem.temp_summaries table
INSERT INTO ssms_mem.temp_summaries (message, summary) SELECT main.message_data_old.message_id, protected.message_data.data FROM main.message_data_old JOIN protected.message_data ON protected.message_data.message_data_id = main.message_data_old.ROWID WHERE main.message_data_old.part = 'summary' AND protected.message_data.data IS NOT NULL 
Populating ssms_mem.temp_summaries
INSERT OR IGNORE INTO protected.summaries (summary) SELECT summary FROM ssms_mem.temp_summaries 
Populating protected.summaries
INSERT INTO ssms_mem.summary_id_by_message (message, summary_id) SELECT ssms_mem.temp_summaries.message, protected.summaries.ROWID FROM ssms_mem.temp_summaries JOIN protected.summaries ON protected.summaries.summary = ssms_mem.temp_summaries.summary 
Populating ssms_mem.summary_id_by_message
DROP TABLE ssms_mem.temp_summaries
Dropping ssms_mem.temp_summaries table
rawAddress
error creating user function rawAddress
error creating user function displayName
CREATE TABLE ssms_mem.temp_recipients ( message INTEGER NOT NULL, fullAddress TEXT NOT NULL, type INTEGER NOT NULL, position INTEGER NOT NULL )
Creating ssms_mem.temp_recipients table
INSERT INTO ssms_mem.temp_recipients (message, fullAddress, type, position) VALUES (?, ?, ?, ?)
Inserting recipient into ssms_mem.temp_recipients
B28@?0i8r*12Q20
B32@?0q8r*16Q24
SELECT protected.messages.message_id, protected.messages._to, protected.messages.cc, protected.messages.bcc FROM protected.messages JOIN main.messages_old ON main.messages_old.ROWID = protected.messages.message_id 
Populating ssms_mem.temp_recipients
INSERT INTO ssms_mem.parsed_addresses (fullAddress) SELECT sender FROM protected.messages JOIN main.messages_old ON main.messages_old.ROWID = protected.messages.message_id WHERE sender IS NOT NULL UNION ALL SELECT fullAddress FROM ssms_mem.temp_recipients WHERE fullAddress IS NOT NULL 
Populating ssms_mem.parsed_addresses
UPDATE ssms_mem.parsed_addresses SET address = rawAddress(fullAddress), comment = displayName(fullAddress)
Parsing addresses in ssms_mem.parsed_addresses
INSERT OR IGNORE INTO protected.addresses (address, comment) SELECT address, comment FROM ssms_mem.parsed_addresses
Populating protected.addresses
INSERT INTO main.recipients (message, address, type, position) SELECT ssms_mem.temp_recipients.message, protected.addresses.ROWID, ssms_mem.temp_recipients.type, ssms_mem.temp_recipients.position FROM ssms_mem.temp_recipients JOIN ssms_mem.parsed_addresses ON ssms_mem.parsed_addresses.fullAddress = ssms_mem.temp_recipients.fullAddress JOIN protected.addresses ON protected.addresses.address = ssms_mem.parsed_addresses.address AND protected.addresses.comment = ssms_mem.parsed_addresses.comment 
Populating main.recipients
DROP TABLE ssms_mem.temp_recipients
Dropping ssms_mem.temp_recipients table
error deleting user function rawAddress
error deleting user function displayName
DELETE FROM protected.messages WHERE ROWID IN (SELECT message_id FROM messages_deleted)
Deleting rows from protected.messages
messages_old
messages_old.ROWID
ifnull(messages_old.message_id, 0)
protected.addresses.ROWID
ssms_mem.parsed_subjects.prefix
protected.subjects.ROWID
ssms_mem.summary_id_by_message.summary_id
ifnull(flags, 0)
ifnull(read, 0)
ifnull(flagged, 0)
ifnull(deleted, 0)
ifnull(size, 0)
ifnull(conversation_id, 0)
CASE WHEN messages_old.flags & 16 THEN ((messages_old.flags & (7 << 41)) >> 41) ELSE NULL END
INSERT INTO main.messages (%@) SELECT %@ FROM messages_old JOIN protected.messages ON messages_old.ROWID = protected.messages.message_id JOIN ssms_mem.parsed_subjects ON ssms_mem.parsed_subjects.original = ifnull(protected.messages.subject, '') JOIN protected.subjects ON protected.subjects.subject = ssms_mem.parsed_subjects.unprefixed LEFT OUTER JOIN ssms_mem.parsed_addresses ON ssms_mem.parsed_addresses.fullAddress = protected.messages.sender LEFT OUTER JOIN protected.addresses ON protected.addresses.address = ssms_mem.parsed_addresses.address AND protected.addresses.comment = ssms_mem.parsed_addresses.comment LEFT OUTER JOIN ssms_mem.summary_id_by_message ON ssms_mem.summary_id_by_message.message = messages_old.ROWID 
Populating messages
Unable to create new indexes
DROP TABLE IF EXISTS messages_old
Dropping old messages table
DROP TABLE IF EXISTS mailboxes_old
Dropping old mailboxes table
DROP TABLE IF EXISTS threads
Dropping threads table
DROP TABLE IF EXISTS conversations_old
Dropping old conversations table
DROP TABLE IF EXISTS conversation_id_message_id_old
Dropping old conversation_id_message_id table
DROP TABLE IF EXISTS properties_old
Dropping old properties table
DROP TABLE IF EXISTS message_data_old
Dropping old message_data table
DROP TABLE IF EXISTS message_data_deleted_old
Dropping old message_data_deleted table
DROP TABLE IF EXISTS pop_uids_old
Dropping old pop_uids table
DROP TABLE IF EXISTS accounts_old
Dropping old accounts table
DROP TABLE IF EXISTS spotlight_tombstones_old
DROP TABLE IF EXISTS spotlight_message_reindex_old
DROP TABLE IF EXISTS messages_deleted
Dropping messages_deleted table
DROP TABLE IF EXISTS protected.messages
Dropping protected.messages
DROP TABLE IF EXISTS protected.message_data
Dropping protected.message_data
Creating new pop_uids table
INSERT OR REPLACE INTO pop_uids (mailbox, uid, date_added, flags, del) SELECT mailbox, uid, date_added, flags, del FROM pop_uids_old ORDER BY ROWID ASC 
DROP TABLE pop_uids_old
Dropping pop_uids_old
Creating pop_uids indexes
CREATE TABLE message_global_data (ROWID INTEGER PRIMARY KEY AUTOINCREMENT,
message_id INTEGER,
UNIQUE(message_id) ON CONFLICT ABORT)
Creating message_global_data
INSERT INTO message_global_data (message_id) SELECT DISTINCT message_id FROM messages
Populating message_global_data table
DROP TRIGGER IF EXISTS after_delete_message;
Dropping trigger
ALTER TABLE messages RENAME TO messages_old
Adding new messages table
INSERT INTO messages (ROWID, message_id, global_message_id, remote_id, document_id, sender, subject_prefix, subject, summary, date_sent, date_received, mailbox, remote_mailbox, flags, read, flagged, deleted, size, conversation_id, date_last_viewed, original_mailbox, visible, sender_vip, encoding, content_type, sequence_identifier, external_id, unique_id, content_index_transaction_id, list_id_hash, journaled, flag_color, searchable_message) SELECT messages_old.ROWID, messages_old.message_id, message_global_data.ROWID, remote_id, document_id, sender, subject_prefix, subject, summary, date_sent, date_received, mailbox, remote_mailbox, flags, read, flagged, deleted, size, conversation_id, date_last_viewed, original_mailbox, visible, sender_vip, encoding, content_type, sequence_identifier, external_id, unique_id, content_index_transaction_id, list_id_hash, journaled, flag_color, searchable_message FROM messages_old JOIN message_global_data ON messages_old.message_id = message_global_data.message_id
Copying messages to new table
DROP TABLE messages_old
Adding trigger
INSERT INTO properties  (key, value) VALUES ("NeedToMigrateFiles",1)
Setting need to upgrade property
CREATE TABLE messages (ROWID INTEGER PRIMARY KEY AUTOINCREMENT,
message_id INTEGER NOT NULL DEFAULT 0,
global_message_id INTEGER NOT NULL REFERENCES message_global_data(ROWID) ON DELETE CASCADE,
remote_id INTEGER,
document_id TEXT COLLATE BINARY,
sender INTEGER,
subject_prefix TEXT COLLATE BINARY,
subject INTEGER NOT NULL,
summary INTEGER,
date_sent INTEGER,
date_received INTEGER,
mailbox INTEGER NOT NULL,
remote_mailbox INTEGER,
flags INTEGER NOT NULL DEFAULT 0,
read INTEGER NOT NULL DEFAULT 0,
flagged INTEGER NOT NULL DEFAULT 0,
deleted INTEGER NOT NULL DEFAULT 0,
size INTEGER NOT NULL DEFAULT 0,
conversation_id INTEGER NOT NULL DEFAULT 0,
date_last_viewed INTEGER,
original_mailbox INTEGER,
visible INTEGER,
sender_vip INTEGER,
encoding INTEGER,
content_type INTEGER,
sequence_identifier INTEGER DEFAULT 0,
external_id TEXT COLLATE BINARY,
unique_id INTEGER,
content_index_transaction_id INTEGER,
list_id_hash INTEGER,
journaled INTEGER,
flag_color INTEGER,
searchable_message INTEGER REFERENCES searchable_messages(message_id) ON DELETE SET NULL);
CREATE INDEX messages_message_id_mailbox_index ON messages(message_id, mailbox);
CREATE INDEX messages_global_message_id_mailbox_index ON messages(global_message_id, mailbox);
CREATE INDEX messages_document_id_index ON messages(document_id);
CREATE INDEX messages_sender_index ON messages(sender);
CREATE INDEX messages_subject_index ON messages(subject);
CREATE INDEX messages_summary_index ON messages(summary);
CREATE INDEX messages_date_received_index ON messages(date_received);
CREATE INDEX messages_mailbox_date_received_index ON messages(mailbox, date_received);
CREATE INDEX messages_mailbox_conversation_id_date_received_deleted_index ON messages(mailbox, conversation_id, date_received, deleted);
CREATE INDEX messages_remote_mailbox_remote_id_index ON messages(remote_mailbox, remote_id);
CREATE INDEX messages_read_index ON messages(read);
CREATE INDEX messages_flagged_index ON messages(flagged);
CREATE INDEX messages_deleted_date_received_index ON messages(deleted, date_received);
CREATE INDEX messages_conversation_id_mailbox_read_date_received_deleted_index ON messages(conversation_id, mailbox, read, date_received, deleted);
CREATE INDEX messages_date_last_viewed_index ON messages(date_last_viewed);
CREATE INDEX messages_conversation_id_mailbox_flagged_deleted_index ON messages(conversation_id, mailbox, flagged, deleted);
CREATE INDEX messages_conversation_id_mailbox_deleted_index ON messages(conversation_id, mailbox, deleted);
CREATE INDEX messages_conversation_id_mailbox_sender_date_received_deleted_index ON messages(conversation_id, mailbox, sender, date_received, deleted);
CREATE INDEX messages_conversation_id_mailbox_flags_deleted_index ON messages(conversation_id, mailbox, flags, deleted);
CREATE INDEX messages_mailbox_deleted_journaled_read_sender_vip_flags_conversation_id_date_sent_message_id_date_received_rowid_index ON messages(mailbox, deleted, journaled, read, sender_vip, flags, conversation_id, date_sent, message_id, date_received DESC, ROWID DESC);
CREATE INDEX messages_mailbox_visible_date_received_rowid_index ON messages(mailbox, visible, date_received DESC, ROWID DESC);
CREATE INDEX messages_content_index_transaction_id_deleted_date_received_rowid_index ON messages(content_index_transaction_id, deleted, date_received DESC, ROWID);
CREATE INDEX messages_mailbox_remote_id_sequence_identifier_index ON messages(mailbox, remote_id, sequence_identifier);
CREATE INDEX messages_mailbox_content_index_transaction_id_flags_date_received_index ON messages(mailbox, content_index_transaction_id, flags, date_received ASC);
CREATE INDEX messages_list_id_hash_index ON messages(list_id_hash);
CREATE INDEX messages_journaled_conversation_id_date_received_index ON messages(journaled, conversation_id, date_received);
CREATE INDEX messages_mailbox_conversation_id_flag_color_date_received_journaled_index ON messages(mailbox, conversation_id, flag_color, date_received, journaled);
CREATE INDEX messages_message_id_deleted_journaled_read_mailbox_index ON messages(message_id, deleted, journaled, read, mailbox);
CREATE INDEX messages_deleted_conversation_id_date_received_index ON messages(deleted, conversation_id, date_received);
CREATE INDEX messages_deleted_journaled_mailbox_index ON messages(deleted, journaled, mailbox);
CREATE INDEX messages_deleted_mailbox_date_received_index ON messages(deleted, mailbox, date_received);
CREATE INDEX messages_deleted_sender_vip_date_received_index ON messages(deleted, sender_vip, date_received);
CREATE INDEX messages_deleted_read_journaled_mailbox_conversation_id_sender_vip_index ON messages(deleted, read, journaled, mailbox, conversation_id, sender_vip);
CREATE INDEX messages_flagged_deleted_journaled_mailbox_index ON messages(flagged, deleted, journaled, mailbox);
CREATE INDEX messages_conversation_id_read_deleted_journaled_index ON messages(conversation_id, read, deleted, journaled);
CREATE INDEX messages_sender_vip_deleted_journaled_read_message_id_index ON messages(sender_vip, deleted, journaled, read, message_id) WHERE (sender_vip = 1 AND journaled = 0 AND deleted = 0 AND read = 0);
CREATE INDEX messages_date_received_deleted0_journaled0_read0_index ON messages(date_received) WHERE (deleted = 0 AND journaled = 0 AND read = 0);
CREATE INDEX messages_mailbox_date_received_deleted0_journaled0_read0_index ON messages(mailbox, date_received) WHERE (deleted = 0 AND journaled = 0 AND read = 0);
CREATE INDEX messages_journaled_deleted_date_received_index ON messages(journaled, deleted, date_received) WHERE (journaled = 1 AND deleted = 0);
CREATE INDEX messages_searchable_message_deleted_index ON messages(searchable_message, deleted);
CREATE INDEX messages_mailbox_deleted_date_received_index ON messages(mailbox, deleted, date_received) WHERE journaled = 0;
Adding index
CREATE TRIGGER after_delete_message AFTER DELETE ON messages
    BEGIN
        DELETE FROM message_data WHERE message_id = OLD.ROWID;
    END;
Creating server messages and local actions tables
DROP TABLE offline_cache_operations
Dropping offline_cache_operations
DROP TABLE offline_cache_replay_data
Dropping offline_cache_replay_data
messages.mailbox
messages.remote_id
messages.flags & 1
(messages.flags & (1 << 1)) != 0
replied
(messages.flags & (1 << 2)) != 0
(messages.flags & (1 << 4)) != 0
draft
(messages.flags & (1 << 6)) != 0
forwarded
(messages.flags & (1 << 8)) != 0
redirected
(messages.flags & (1 << 9)) != 0
junk_level_set_by_user
junk_level
(((messages.flags & (1 << 21)) != 0) AND ((messages.flags & (1 << 31)) == 0)) | ((((messages.flags & (1 << 21)) == 0) AND ((messages.flags & (1 << 31)) != 0)) << 1)
((messages.flags & (1 << 32)) == 0) AND (mailboxes.url LIKE 'imap://%%')
INSERT OR IGNORE INTO server_messages (%@) SELECT %@ FROM messages JOIN mailboxes ON messages.mailbox = mailboxes.ROWID WHERE %@
Creating server_messages from messages
SELECT operation_data FROM offline_cache_operations WHERE completed = '0' ORDER BY rowid ASC
getting offline cache operations
CREATE TABLE IF NOT EXISTS server_messages (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, message INTEGER REFERENCES messages(ROWID) ON DELETE SET NULL, mailbox INTEGER NOT NULL REFERENCES mailboxes(ROWID) ON DELETE CASCADE, sequence_identifier INTEGER, read INTEGER NOT NULL, deleted INTEGER NOT NULL, replied INTEGER NOT NULL, flagged INTEGER NOT NULL, draft INTEGER NOT NULL, forwarded INTEGER NOT NULL, redirected INTEGER NOT NULL, junk_level_set_by_user INTEGER NOT NULL, junk_level INTEGER NOT NULL, flag_color INTEGER NOT NULL, remote_id INTEGER NOT NULL, UNIQUE(mailbox, remote_id) ON CONFLICT ABORT);
CREATE INDEX IF NOT EXISTS server_messages_message_index ON server_messages(message);
CREATE TABLE IF NOT EXISTS server_labels (server_message INTEGER REFERENCES server_messages(ROWID) ON DELETE CASCADE, label INTEGER REFERENCES mailboxes(ROWID) ON DELETE CASCADE, PRIMARY KEY(server_message, label)) WITHOUT ROWID;
CREATE TABLE IF NOT EXISTS local_message_actions (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, mailbox INTEGER REFERENCES mailboxes(ROWID) ON DELETE CASCADE, source_mailbox INTEGER REFERENCES mailboxes(ROWID) ON DELETE CASCADE, destination_mailbox INTEGER REFERENCES mailboxes(ROWID) ON DELETE CASCADE, action_type INTEGER, user_initiated INTEGER);
CREATE INDEX IF NOT EXISTS local_message_actions_mailbox_rowid_index ON local_message_actions(mailbox, ROWID);
CREATE TABLE IF NOT EXISTS action_messages (ROWID INTEGER PRIMARY KEY, action INTEGER REFERENCES local_message_actions(ROWID) ON DELETE CASCADE, action_phase INTEGER, message INTEGER REFERENCES messages(ROWID) ON DELETE SET NULL, remote_id INTEGER, destination_message INTEGER REFERENCES messages(ROWID) ON DELETE CASCADE);
CREATE INDEX IF NOT EXISTS action_messages_action_index ON action_messages(action);
CREATE INDEX IF NOT EXISTS action_messages_message_index ON action_messages(message);
CREATE INDEX IF NOT EXISTS action_messages_destination_message_index ON action_messages(destination_message);
CREATE TABLE IF NOT EXISTS action_labels (ROWID INTEGER PRIMARY KEY, action INTEGER REFERENCES local_message_actions(ROWID) ON DELETE CASCADE, do_add INTEGER, label INTEGER REFERENCES mailboxes(ROWID) ON DELETE CASCADE);
CREATE INDEX IF NOT EXISTS action_labels_action_index ON action_labels(action);
CREATE INDEX IF NOT EXISTS action_labels_label_index ON action_labels(label);
CREATE TABLE IF NOT EXISTS action_flags (ROWID INTEGER PRIMARY KEY, action INTEGER REFERENCES local_message_actions(ROWID) ON DELETE CASCADE, flag_type INTEGER, flag_value INTEGER);
CREATE INDEX IF NOT EXISTS action_flags_action_index ON action_flags(action);
SELECT ROWID, mailbox FROM messages WHERE remote_id = ? LIMIT 1
Fetching database ID and mailbox for message
-[_MFDADeferredSetFlagsOperation initWithCoder:]
MFMailMessageLibraryLocalActionsTablesMigrationStep.m
[aDecoder allowsKeyedCoding] && "aDecoder must allow keyed coding"
OnFlags
OffFlags
MessageID
-[_MFDADeferredSetFlagsOperation encodeWithCoder:]
[aCoder allowsKeyedCoding] && "aCoder must allow keyed coding"
INSERT INTO local_message_actions (action_type, mailbox, source_mailbox, destination_mailbox, user_initiated) VALUES (3, ?, NULL, NULL, 0)
Inserting flag change action
INSERT INTO action_flags (action, flag_type, flag_value) VALUES (?, 1, ?)
Inserting read flag change
INSERT INTO action_flags (action, flag_type, flag_value) VALUES (?, 4, ?)
Inserting flagged flag change
INSERT INTO action_messages (action, message, remote_id, destination_message, action_phase) VALUES (?, ?, ?, NULL, 0)
Inserting message for flag change
%@ message-id "%@", on-flags %llu, off-flags %llu
-[_MFDADeferredDeleteMessageOperation initWithCoder:]
-[_MFDADeferredDeleteMessageOperation encodeWithCoder:]
INSERT INTO local_message_actions (action_type, mailbox, source_mailbox, destination_mailbox, user_initiated) VALUES (5, ?, ?, NULL, 0)
Inserting delete action
INSERT INTO action_messages (action, message, remote_id, destination_message, action_phase) VALUES (?, ?, ?, NULL, 4)
Inserting message for delete
%@ message-id "%@"
-[MFDADeferredMessageMoveOperation initWithCoder:]
SourceMailbox
DestinationMailbox
SourceRemoteIDs
OriginalFlags
TemporaryIDs
-[MFDADeferredMessageMoveOperation encodeWithCoder:]
SELECT messages.ROWID, messages.mailbox, mailboxes.url FROM messages JOIN mailboxes ON messages.mailbox = mailboxes.ROWID WHERE remote_id IN (%@)
ef_quotedSQLEscapedString
Selecting messages with temporary remote IDs
SELECT ROWID FROM mailboxes WHERE URL = ? LIMIT 1
Selecting source mailbox
INSERT INTO local_message_actions (action_type, mailbox, source_mailbox, destination_mailbox, user_initiated) VALUES (6, ?, ?, ?, 0)
Inserting move action
INSERT INTO action_messages (action, message, remote_id, destination_message, action_phase) VALUES (?, NULL, ?, ?, 3)
Inserting message for move
v32@?0@"NSNumber"8Q16^B24
%@ source "%@", destination "%@", %lu messages
-[MFDADeferredStoreDraftOperation initWithCoder:]
-[MFDADeferredStoreDraftOperation encodeWithCoder:]
SELECT ROWID, mailbox FROM messages JOIN WHERE message_id = ? LIMIT 1
Selecting message for append
INSERT INTO local_message_actions (action_type, mailbox, source_mailbox, destination_mailbox, user_initiated) VALUES (2, ?, NULL, ?, 0)
Inserting append action
INSERT INTO action_messages (action, message, remote_id, destination_message, action_phase) VALUES (?, NULL, NULL, ?, 3)
Inserting message for append
-[_MFDADeferredNewMailboxOperation initWithCoder:]
ParentFolderID
TemporaryFolderID
-[_MFDADeferredNewMailboxOperation encodeWithCoder:]
%@ display-name "%@", parent-folder-id "%@", temporary-folder-id "%@"
-[_MFDADeferredDeleteMailboxOperation initWithCoder:]
-[_MFDADeferredDeleteMailboxOperation encodeWithCoder:]
%@ folder-id "%@"
-[_MFDADeferredModifyMailboxOperation initWithCoder:]
NewParentFolderID
NewDisplayName
-[_MFDADeferredModifyMailboxOperation encodeWithCoder:]
%@ folder-id "%@", new-parent-folder-id "%@", new-display-name "%@"
-[_MFDADeferredSelectMailboxOperation initWithCoder:]
-[_MFDADeferredSelectMailboxOperation encodeWithCoder:]
SELECT url FROM mailboxes WHERE %@
MobileMailMigratorNeedsSpotlightReIndexKey
com.apple.message.MFMailMessageLibraryMigrator.contentProtectionQueue
PRAGMA foreign_keys = OFF;
disabling foreign keys
PRAGMA foreign_keys = ON;
v16@?0@"EDPersistenceDatabaseConnection"8
TellurideVersion
SundanceConversationHashesMustBeNonZeroVersion
SundanceCreateMessageInfosCoveringIndexVersion
SundanceMessagesHaveVIPSenderFlag
InnsbruckMessagesHaveUniqueRemoteID
InnsbruckMessagesHaveContentTransactionID
InnsbruckBetterMessageConversationIndexes
InnsbruckCondStoreSequenceIdentifierIndex
InnsbruckFlaggedAndAttachmentCounts
InnsbruckToCcCounts
InnsbruckServerOnlyUnreadCounts
SochiFixFlaggedCount
SochiFixFlaggedCount2
OkemoConversationFlags
MonarchAddSuggestionsProcessingStateColumn
MonarchResetSuggestionsProcessingStateColumn
MonarchDuplicatesSuppression
MonarchRestoreTriggers
MonarchUpdateMessageInfoCoveringIndex
MonarchUnreadCountDuplicateSuppression
MonarchUnreadCountIgnoreSearchResult
MonarchUnreadCountPreventNegativeValue
MonarchFasterSpotlightIndexing
MonarchOldestNonIndexedMessagesLookup
MonarchForceSpotlightReindex
BoulderAddSpotlightTombstones
BoulderForceSpotlightReindex
BoulderForceSpotlightReindex2
BoulderForceSpotlightReindex3
BoulderZeroOutPOPServerUnreadCount
BoulderForceSpotlightReindex4
WhitetailAddListIDColumn
WhitetailRemoveDecluttering
WhitetailForceSpotlightReindex
WhitetailForceSpotlightReindex2
TigrisForceSpotlightReindexConversationID
TigrisAddUnseenCountColumn
TigrisAddReconcileColumn
TigrisAddSpotlightReindexTable
TigrisAddMBLQueueTable
TigrisForceSpotlightReindexSupportDND
TigrisRemoveMBDLQueueTable
TigrisAddUnmergedColumn
TigrisResetStatusCountsForDrafts
TigrisSetSpotlightDataTypes
TigrisUpgradePadding70
TigrisUpgradePadding71
TigrisUpgradePadding72
LastDeprecatedNumberingScheme
EmetBaseline
EmetSetSpotlightDataOwner
PeaceBaseline
PeaceAddMessageJournaledIndex
PeaceAddMessageJournaledConversationIndex
YukonBaseline
YukonAddDocumentIDColumn
YukonUpdateMuteThreadFlagBit
YukonAddMessageJournaledIndex
YukonAddLocalMessageActionsTables
YukonMessageInteractionMetricsColumns
YukonAddCategoryColumnsNoLongerUsed
YukonFixBrokenUpgradesFromPeace
YukonAddCategoryColumns
YukonRemoveOfflineCacheTables
YukonModifyColumnDefinitions
YukonAdoptSharedSchema
YukonAddProtectedDataIndexes
YukonAddInteractionLogTable
YukonAddReadLaterTable
Renaming threads to message_references
YukonRenameThreadsTable
Creating messages deleted date received index
YukonAddMessageDeletedDateReceivedIndex
Creating searchable index tables
YukonAddSearchableIndexTables
YukonAddJournaledConversationIDDateReceivedIndex
Adding thread tables
YukonAddThreadTables
YukonAddThreadsScopeConverationDateIndex
YukonMigrateEmailUserDefaults
Setting conflict resolution for primary key of thread_senders and thread_recipients
YukonSetConflictResolutionForThreadSendersAndRecipients
Reset sequence_identifier for messages
YukonResetSequenceIdentifierForFlagColors
YukonAddThreadSendersAndRecipientsIndexes
Adding flag support to threads
YukonAddThreadFlagColorsColumns
YukonAddThreadJournaledColumn
YukonAddMessageIndexesForThreadQueries
YukonAddMessageIDIndex
YukonSenderVIPCountQueryIndex
YukonRemoveCategorySchema
YukonModifyDeletedMailboxIndex
YukonAddJournaledUndeletedIndex
YukonCachedMetadataTableUnused1
YukonRemoveReadLaterSchema
YukonRemoveReadLaterSchemaDotsubmission
YukonCachedMetadataTableUnused2
YukonAddTableMetadataTable
YukonCachedMetadataTable
YukonFixPopUidsUniquenessConstraint
YukonAddThreadJournaledDateIndex
YukonMigrateBlockedSenderEnabledToActionEnum
YukonAddUnreadCountIndexes
YukonAddAppBadgeCountIndexes
YukonResetThreadScopes
YukonResetSummary
YukonAddSenderVIPAndConversationIndexes
YukonResetThreadScopes2
YukonAddFilterIndexesAndRemoveTriggers
Removing deleted column from threads
YukonResetThreadScopes3
YukonCDEBaseline
Adding searchable_message column to messages
YukonCDEAddMessagesSearchableMessageColumn
YukonCDEModifyMessagesSearchableMessageIndex
YukonCDEAddInMemoryThreadIndex
AzulBaseline
Adding global data table
AzulAddMessageGlobalData
AzulResetMessageMetadata
Adding remote_content_links table
AzulAddRemoteContentLinksTable
AzulRecreateMessageIndices
AzulSetUseLegacyMessageIDHashFormat
AzulReindexMessagesMailMessageID
AzulRemoveRemoteContentLinksTable
Adding searchable_messages index
AzulUpdateSearchableMessagesIndex
Updating globalMessageID index
AzulUpdateGlobalMessageIDIndex
SkyAddRemoteContentLinksTable
SkyMigrateRemoteContentDefault
SkyBogusStep
SkyBogusStep2
Adding message_attachments table and update attachment table
SkyAddMessageAttachmentsAndUpdateAttachmentsTable
SkyBIndexSpotlightWithGlobalMessageID
Adding read_later table
SydneyAddReadLaterTable
Adding unsubscribe_type column
SydneyAddUnsubscribeFlags
Adding send_later table
SydneyAddSendLaterTable
SydneyAddDataDetectionTable
SydneyAddMailboxActionsTable
Adding searchable data detection table
SydneyAddSearchableDataDetectionTable
Adding brand_indicator column to messages table
SydneyAddBrandIndicatorTable
SydneyReindexSenderAttachmentItems
Adding follow_up_date column to message_global_data table
SydneyAddMessagesFollowUpColumnUpgradeStep
SydneyAddSendersTableUpgradeStep
Adding senders and sender_addresses tables
SydneyRepopulateSendersTableUpgradeStep
Re-adding brand_indicators table
SydneyReAddBrandIndicatorsTableUpgradeStep
SydneyRemoveIncompatibleBrandIndicatorsIndexUpgradeStep
SydneyAddMailboxRenameActionStep
Adding rebuild table
SydneyAddRebuildTableUpgradeStep
SydneyTriggerSpotlightReIndexUpgradeStep
SydneyAddDisplayDateColumnUpgradeStep
SydneyAddRichLinkTable
Adding rich links table
SydneyAddSearchableRichLinkTable
Populating senders and sender_addresses tables
SydneyRepopulateSendersTableUpgradeStep2
SydneyAddSearchableFlagColorsUpgradeStep
SydneyAddSearchableMailAttachmentTypeUpgradeStep
SydneyCleanUpLocalMboxCacheUpgradeStep
SydneyAddThreadsDisplayDateColumn
SydneySetThreadScopePredicateFilter
SydneyAddFollowUpJsonStringForModelEvaluationForSuggestionsColumnUpgradeStep
PRAGMA foreign_key_check
Checking foreign keys
_MFTTRUserPromptLastResponseUserDefaultsKey
_MFTTRUserPromptLastResponseVersionUserDefaultsKey
SELECT value FROM properties WHERE key = 'version'
INSERT OR REPLACE INTO properties (key, value) values ('version', ?)
setting library version
preparing library version insert statement
performing statements from schema definition
triggers.sql
performing statements from file "triggers.sql"
PRAGMA page_size = 4096;
setting page_size
setting auto_vacuum
PRAGMA journal_mode=WAL
setting journal mode
PRAGMA auto_vacuum=2
SELECT rowid FROM messages WHERE conversation_id = 0 or conversation_id is NULL
gathering library ids of messages without conversation hashes
UPDATE messages SET conversation_id = ?, content_index_transaction_id = NULL WHERE rowid = ?
updating messages with new conversation hashes
DROP INDEX message_deleted_index
dropping message deleted index
ALTER TABLE messages ADD COLUMN sender_vip;
adding sender_vip column
ALTER TABLE messages ADD COLUMN unique_id;
adding unique_id column
ALTER TABLE messages ADD COLUMN content_index_transaction_id INTEGER;
adding content_index_transaction_id column
CREATE INDEX message_content_index_transaction_id_index ON messages(content_index_transaction_id);
adding content_index_transaction_id index
DROP INDEX IF EXISTS message_conversation_id_index;
CREATE INDEX message_conversation_id_index ON messages(conversation_id, mailbox, read, date_received);
DROP INDEX IF EXISTS message_oldest_conversation_index;
CREATE INDEX message_oldest_conversation_index on messages(mailbox, conversation_id, date_received);
replacing conversation indexes
DROP INDEX IF EXISTS message_sequence_identifier_index;
CREATE INDEX message_sequence_identifier_index ON messages(mailbox, remote_id, sequence_identifier);
adding sequence identifier index
ALTER TABLE mailboxes ADD COLUMN flagged_count INTEGER DEFAULT 0; ALTER TABLE mailboxes ADD COLUMN attachment_count INTEGER DEFAULT 0;
altering mailboxes table
update mailboxes set flagged_count = (select count(*) from messages where mailbox = mailboxes.rowid AND flags&16 > 0);
updating flagged_count
update mailboxes set attachment_count = (select count(*) from messages where mailbox = mailboxes.rowid AND (((flags&(63<<10))>>10) BETWEEN 1 AND 62) AND flags&1 = 0);
updating attachment_count
ALTER TABLE mailboxes ADD COLUMN to_cc_count INTEGER DEFAULT 0;
INSERT OR REPLACE INTO properties (key, value) VALUES ('MaxRowIdForMigrationToVersion31', (SELECT MAX(rowid) FROM messages));
adding maxrowid property
ALTER TABLE mailboxes ADD COLUMN server_unread_count INTEGER DEFAULT 0;
UPDATE mailboxes SET flagged_count = (select count(*) FROM messages WHERE mailbox = mailboxes.rowid AND flags&16 > 0 AND flags&2 == 0);
CREATE TABLE conversations (conversation_id INTEGER PRIMARY KEY, flags INTEGER DEFAULT 0, sync_key TEXT);
CREATE TABLE conversation_id_message_id (conversation_id INTEGER, message_id INTEGER, date_sent INTEGER DEFAULT 0, UNIQUE (conversation_id, message_id), FOREIGN KEY (conversation_id) REFERENCES conversations(conversation_id) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE INDEX conversation_id_message_id_index ON conversation_id_message_id(conversation_id, message_id); CREATE INDEX message_id_conversation_id_index ON conversation_id_message_id(message_id, conversation_id);
INSERT INTO conversations (conversation_id) SELECT DISTINCT(conversation_id) FROM messages;
INSERT OR IGNORE INTO conversation_id_message_id (conversation_id,message_id,date_sent) SELECT conversation_id, message_id, date_sent FROM messages;
INSERT OR IGNORE INTO conversation_id_message_id (conversation_id,message_id) SELECT messages.conversation_id, threads.reference FROM messages, threads WHERE messages.rowid = threads.message_id;
creating conversations and conversation_id_message_id tables
DROP INDEX IF EXISTS message_infos_index;
CREATE INDEX message_infos_index ON messages(mailbox, deleted, journaled, sender_vip, flags, conversation_id, date_sent, message_id, date_received DESC, ROWID DESC);
updating message_infos_index covering index
UPDATE mailboxes SET total_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (mailbox = mailboxes.ROWID));
UPDATE mailboxes SET unread_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags&1 = 0) AND (mailbox = mailboxes.ROWID));
UPDATE mailboxes SET deleted_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags&2 > 0) AND (mailbox = mailboxes.ROWID));
UPDATE mailboxes SET flagged_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags&16 > 0 AND flags&2 = 0) AND (mailbox = mailboxes.ROWID));
UPDATE mailboxes SET attachment_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE ((((flags&(63<<10))>>10) BETWEEN 1 AND 62) AND flags&1 = 0) AND (mailbox = mailboxes.ROWID));
UPDATE mailboxes SET to_cc_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE ((flags&(3<<39)>>39) > 0 AND flags&1 = 0) AND (mailbox = mailboxes.ROWID));
updating mailboxes counts
UPDATE mailboxes SET unread_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags&1 = 0 AND flags&128 = 0 AND flags&1048576 = 0) AND (mailbox = mailboxes.ROWID));
updating mailboxes unread_count
DROP INDEX message_content_index_transaction_id_index;
CREATE INDEX message_content_index_transaction_id_index ON messages(content_index_transaction_id, deleted, date_received DESC, ROWID);
updating message_content_index_transaction_id
CREATE INDEX message_mailbox_content_index ON messages (mailbox, content_index_transaction_id, flags, date_received ASC)
adding message_mailbox_content_index
DROP TABLE IF EXISTS spotlight_tombstones
CREATE TABLE spotlight_tombstones (ROWID INTEGER PRIMARY KEY AUTOINCREMENT,
                                   type INTEGER,
                                   identifier TEXT,
                                   transaction_id INTEGER,
                                   UNIQUE(type, identifier))
CREATE INDEX spotlight_tombstones_transaction_index ON spotlight_tombstones(transaction_id, type, identifier)
adding spotlight tombstones table
UPDATE mailboxes SET server_unread_count = 0 WHERE url LIKE "pop:%";
ALTER TABLE messages ADD COLUMN list_id_hash INTEGER;
adding list_id_hash column
CREATE INDEX message_list_id_hash_index ON messages(list_id_hash);
adding message_list_id_hash_index index
ALTER TABLE mailboxes ADD COLUMN last_sync_status_count INTEGER DEFAULT 0;
ALTER TABLE mailboxes ADD COLUMN most_recent_status_count INTEGER DEFAULT 0;
adding mailboxes status count columns
SELECT DISTINCT mailbox FROM messages WHERE flags&64 = 64;
finding mailbox IDs of draft mailboxes
UPDATE mailboxes SET last_sync_status_count = unread_count + server_unread_count, most_recent_status_count = unread_count + server_unread_count WHERE url LIKE 'imap:%%' AND rowid NOT IN (%s)
updating count columns for non-draft mailboxes
UPDATE mailboxes SET last_sync_status_count = unread_count + server_unread_count, most_recent_status_count = unread_count + server_unread_count WHERE url LIKE 'imap:%'
updating count columns
ALTER TABLE mailboxes ADD COLUMN reconcile;
adding reconcile column
CREATE TABLE spotlight_message_reindex (message_id INTEGER,
                                        type INTEGER,
                                        UNIQUE(message_id),
                                        FOREIGN KEY (message_id) REFERENCES messages(ROWID) ON DELETE CASCADE);
CREATE INDEX spotlight_message_reindex_index ON spotlight_message_reindex(message_id, type);
adding spotlight message reindex table
DROP TABLE IF EXISTS mbl_queue;
removing mbl_queue table
ALTER TABLE messages ADD COLUMN journaled DEFAULT '0';
adding journaled column
UPDATE mailboxes SET last_sync_status_count = 0, most_recent_status_count = 0 WHERE url LIKE 'imap:%%' AND rowid IN (%s)
DROP TABLE IF EXISTS offline_cache_operations;
DROP TABLE IF EXISTS offline_cache_replay_data;
DROP TRIGGER after_delete_account;
removing offline cache tables
CREATE INDEX IF NOT EXISTS messages_subject_index ON messages(subject);
CREATE INDEX IF NOT EXISTS messages_summary_index ON messages(summary);
CREATE INDEX IF NOT EXISTS recipients_address_index ON recipients(address);
Creating indexes to protected data
CREATE INDEX IF NOT EXISTS thread_senders_address_thread_index ON thread_senders(address, thread);
CREATE INDEX IF NOT EXISTS thread_senders_thread_priority_date_index ON thread_senders(thread, priority, date);
CREATE INDEX IF NOT EXISTS thread_recipients_address_thread_index ON thread_recipients(address, thread);
CREATE INDEX IF NOT EXISTS thread_recipients_thread_priority_date_index ON thread_recipients(thread, priority, date);
Creating indexes for thread_senders and thread_recipients
ALTER TABLE threads ADD COLUMN journaled INTEGER NOT NULL DEFAULT 0;
CREATE INDEX IF NOT EXISTS threads_journaled_scope_date_conversation_index ON threads(journaled, scope, date, conversation);
CREATE INDEX IF NOT EXISTS threads_journaled_date_scope_conversation_index ON threads(journaled, date, scope, conversation) WHERE journaled = 1;
DROP INDEX IF EXISTS threads_scope_read_date_conversation_index;
DROP INDEX IF EXISTS threads_scope_flagged_date_conversation_index;
DROP INDEX IF EXISTS threads_scope_has_red_flag_date_conversation_index;
DROP INDEX IF EXISTS threads_scope_has_orange_flag_date_conversation_index;
DROP INDEX IF EXISTS threads_scope_has_yellow_flag_date_conversation_index;
DROP INDEX IF EXISTS threads_scope_has_green_flag_date_conversation_index;
DROP INDEX IF EXISTS threads_scope_has_blue_flag_date_conversation_index;
DROP INDEX IF EXISTS threads_scope_has_purple_flag_date_conversation_index;
DROP INDEX IF EXISTS threads_scope_has_gray_flag_date_conversation_index;
CREATE INDEX IF NOT EXISTS messages_mailbox_conversation_id_flag_color_date_received_journaled_index ON messages(mailbox, conversation_id, flag_color, date_received, journaled);
DROP INDEX IF EXISTS messages_mailbox_conversation_id_flag_color_date_received_index;
Adding threads.journaled and tweaking some indexes
@"NSString"16@?0@"EFSQLIndexSchema"8
Creating messages_message_id_deleted_journaled_read_mailbox_index
Creating messages_sender_vip_deleted_journaled_read_message_id_index
DROP INDEX IF EXISTS messages_deleted_mailbox_index;
Creating messages_deleted_mailbox_date_received_index
Creating messages_journaled_deleted_date_received_index
DROP TABLE IF EXISTS message_metadata;
Dropping table message_metadata.
CREATE TABLE message_metadata (message_id INTEGER PRIMARY KEY, timestamp INTEGER NOT NULL, json_values TEXT COLLATE BINARY NOT NULL);
Creating message_metadata table.
CREATE INDEX message_metadata_timestamp_index ON message_metadata(timestamp);
Creating message_metadata index.
CREATE TABLE IF NOT EXISTS table_metadata (table_name TEXT COLLATE BINARY NOT NULL,
                                           largest_deleted_rowid INTEGER NOT NULL DEFAULT 0,
                                           PRIMARY KEY(table_name)) WITHOUT ROWID;
creating table_metadata table
Creating threads_journaled_date_scope_conversation_index
Creating indexes for conversations and message unread counts
CREATE INDEX IF NOT EXISTS
   messages_mailbox_deleted_journaled_read_sender_vip_flags_conversation_id_date_sent_message_id_date_received_rowid_index
   ON messages(
       mailbox, deleted, journaled, read, sender_vip, flags, conversation_id,
       date_sent, message_id, date_received DESC, ROWID DESC);
DROP INDEX IF EXISTS
   messages_mailbox_deleted_journaled_sender_vip_flags_conversation_id_date_sent_message_id_date_received_rowid_index;
Updating indexes for unread counts
thread_mailboxes
DROP INDEX IF EXISTS messages_flagged_deleted_journaled_index
Creating indexes for app badge count
UPDATE messages SET summary = NULL WHERE summary in (select rowid from protected.summaries where summary = 'This message has no content');
DELETE FROM protected.summaries where summary = 'This message has no content'
Deleting all summaries = 'This message has no content' in protected data
Adding sender_vip/conversation message indexes
DROP INDEX IF EXISTS messages_mailbox_conversation_id_date_received_index;
DROP INDEX IF EXISTS messages_conversation_id_mailbox_read_date_received_index;
DROP INDEX IF EXISTS messages_conversation_id_mailbox_flagged_index;
DROP INDEX IF EXISTS messages_conversation_id_mailbox_sender_date_received_index;
DROP INDEX IF EXISTS messages_conversation_id_mailbox_flags_index;
Adding deleted to conversation_id indexes
messages_date_received_deleted0_journaled0_read0_index
messages_mailbox_date_received_deleted0_journaled0_read0_index
newest_read_message
display_message
DROP TRIGGER IF EXISTS after_add_message;
DROP TRIGGER IF EXISTS after_update_message;
CREATE TRIGGER after_delete_message AFTER DELETE ON messages
    BEGIN
        DELETE FROM message_data WHERE message_id = OLD.ROWID;
    END;
Creating indexes for unread filters and dropping triggers
DROP INDEX IF EXISTS messages_deleted_searchable_message_index;
CREATE INDEX IF NOT EXISTS messages_searchable_message_deleted_index ON messages(searchable_message, deleted);
Replacing messages_deleted_searchable_message_index with messages_searchable_message_deleted_index
CREATE INDEX IF NOT EXISTS messages_mailbox_deleted_date_received_index ON messages(mailbox, deleted, date_received) WHERE journaled = 0;
Adding messages_mailbox_deleted_date_received_index
DELETE FROM message_metadata;
Removing all entries from message_metadata.
INSERT INTO properties (key, value) VALUES ('UseLegacyMessageIDHashFormat', 1) ON CONFLICT(key) DO UPDATE SET value = 1;
Inserting UseLegacyMessageIDHashFormat property.
DROP TABLE IF EXISTS remote_content_links;
Removing remote_content_links table.
DROP INDEX IF EXISTS brand_indicators_indicator_url_indicator_hash_hash_algorithm_index;
Removing brand_indicators_indicator_url_indicator_hash_hash_algorithm_index.
ALTER TABLE mailbox_actions ADD COLUMN new_mailbox_name TEXT;
Adding new_mailbox_name column.
DROP INDEX IF EXISTS messages_global_message_id_index;
Unable to drop index messages_global_message_id_index
Unable to add index messages_global_message_id_mailbox_index
CREATE INDEX IF NOT EXISTS messages_mailbox_deleted_display_date_index ON messages(mailbox, deleted, display_date) WHERE journaled = 0;CREATE INDEX IF NOT EXISTS messages_deleted_conversation_id_display_date_index ON messages(deleted, conversation_id, display_date);
ALTER TABLE threads ADD COLUMN display_date INTEGER NOT NULL DEFAULT 0;UPDATE threads SET display_date = date;CREATE INDEX IF NOT EXISTS threads_scope_display_date_conversation_index ON threads(scope, display_date, conversation);
@"NSString"16@?0@"MailAccount"8
thread_scopes
filter_predicate
mailbox_type
ALTER TABLE message_global_data ADD COLUMN follow_up_jsonstringformodelevaluationforsuggestions TEXT COLLATE BINARY;CREATE INDEX IF NOT EXISTS message_global_data_follow_up_jsonstringformodelevaluationforsuggestions_index ON message_global_data(follow_up_jsonstringformodelevaluationforsuggestions);
server_messages
server_labels
server_message
label
local_message_actions
action_messages
action_labels
action_flags
action
source_mailbox
destination_mailbox
destination_message
action_type
user_initiated
action_phase
do_add
flag_type
flag_value
ALTER TABLE server_messages RENAME TO server_messages_old
Renaming old server_messages
Creating new server_messages
INSERT INTO server_messages SELECT * FROM server_messages_old
Populating new server_messages from old server_messages
DROP TABLE IF EXISTS server_messages_old
Dropping old server_messages
Creating new indexes for server_messages
ALTER TABLE local_message_actions RENAME TO local_message_actions_old
Renaming old local_message_actions
Creating new local_message_actions
INSERT INTO local_message_actions SELECT * FROM local_message_actions_old
Populating new local_message_actions from old local_message_actions
DROP TABLE IF EXISTS local_message_actions_old
Dropping old local_message_actions
Creating new indexes for local_message_actions
@"NSURL"16@?0@"MailAccount"8
has_red_flag
has_orange_flag
has_yellow_flag
has_green_flag
has_blue_flag
has_purple_flag
has_gray_flag
has_unflagged
has_attachments
count
v32@?0@"NSString"8@"EFSQLTableSchema"16Q24
v24@?0@"NSString"8@"EFSQLTableSchema"16
DROP TABLE threads
Dropping threads
DELETE FROM thread_scopes
Clearing thread_scopes
DELETE FROM thread_mailboxes
Clearing thread_mailboxes
DELETE FROM thread_senders
Clearing thread_senders
DELETE FROM thread_recipients
Clearing thread_recipients
Creating new threads
DROP INDEX messages_message_id_mailbox_index;
DROP INDEX messages_global_message_id_index;
DROP INDEX messages_document_id_index;
DROP INDEX messages_sender_index;
DROP INDEX messages_subject_index;
DROP INDEX messages_summary_index;
DROP INDEX messages_date_received_index;
DROP INDEX messages_mailbox_date_received_index;
DROP INDEX messages_mailbox_conversation_id_date_received_deleted_index;
DROP INDEX messages_remote_mailbox_remote_id_index;
DROP INDEX messages_read_index;
DROP INDEX messages_flagged_index;
DROP INDEX messages_deleted_date_received_index;
DROP INDEX messages_conversation_id_mailbox_read_date_received_deleted_index;
DROP INDEX messages_date_last_viewed_index;
DROP INDEX messages_conversation_id_mailbox_flagged_deleted_index;
DROP INDEX messages_conversation_id_mailbox_deleted_index;
DROP INDEX messages_conversation_id_mailbox_sender_date_received_deleted_index;
DROP INDEX messages_conversation_id_mailbox_flags_deleted_index;
DROP INDEX messages_searchable_message_deleted_index;
DROP INDEX messages_mailbox_deleted_journaled_read_sender_vip_flags_conversation_id_date_sent_message_id_date_received_rowid_index;
DROP INDEX messages_mailbox_visible_date_received_rowid_index;
DROP INDEX messages_content_index_transaction_id_deleted_date_received_rowid_index;
DROP INDEX messages_mailbox_remote_id_sequence_identifier_index;
DROP INDEX messages_mailbox_content_index_transaction_id_flags_date_received_index;
DROP INDEX messages_list_id_hash_index;
DROP INDEX messages_journaled_conversation_id_date_received_index;
DROP INDEX messages_mailbox_conversation_id_flag_color_date_received_journaled_index;
DROP INDEX messages_message_id_deleted_journaled_read_mailbox_index;
DROP INDEX messages_deleted_conversation_id_date_received_index;
DROP INDEX messages_deleted_journaled_mailbox_index;
DROP INDEX messages_deleted_mailbox_date_received_index;
DROP INDEX messages_deleted_sender_vip_date_received_index;
DROP INDEX messages_deleted_read_journaled_mailbox_conversation_id_sender_vip_index;
DROP INDEX messages_flagged_deleted_journaled_mailbox_index;
DROP INDEX messages_conversation_id_read_deleted_journaled_index;
DROP INDEX messages_sender_vip_deleted_journaled_read_message_id_index;
DROP INDEX messages_date_received_deleted0_journaled0_read0_index;
DROP INDEX messages_mailbox_date_received_deleted0_journaled0_read0_index;
DROP INDEX messages_journaled_deleted_date_received_index;
DROP INDEX messages_mailbox_deleted_date_received_index;
CREATE INDEX messages_global_message_id_index ON messages(global_message_id);
UPDATE messages SET sequence_identifier = 0
thread_senders
thread
priority
thread_recipients
v32@?0@"EFSQLTableSchema"8@"NSString"16@"EFSQLTableSchema"24
ALTER TABLE thread_senders RENAME TO thread_senders_old
Renaming thread_senders
ALTER TABLE thread_recipients RENAME TO thread_recipients_old
Renaming thread_recipients
Creating new thread_senders and thread_recipients
INSERT INTO thread_senders SELECT * FROM thread_senders_old
Repopulating thread_senders
INSERT INTO thread_recipients SELECT * FROM thread_recipients_old
Repopulating thread_recipients
DROP TABLE thread_senders_old
Dropping old thread_senders
DROP TABLE thread_recipients_old
Dropping old thread_recipients
ALTER TABLE messages ADD COLUMN flag_color INTEGER
Adding messages.flag_color
CREATE INDEX IF NOT EXISTS messages_mailbox_conversation_id_flag_color_date_received_index ON messages(mailbox, conversation_id, flag_color, date_received)
Creating messages_mailbox_conversation_id_flag_color_date_received_index
UPDATE messages SET flag_color = ((flags & (7 << 41)) >> 41) WHERE (flags & 16) != 0
Setting flag_color
DROP TABLE thread_flag_colors
Dropping thread_flag_colors
UPDATE thread_scopes SET needs_update = 1
Resetting thread_scopes
v32@?0@"MFMailboxUid"8@"NSMutableSet"16^B24
com.apple.email.MFMessageAttachmentMigrator
com.apple.message.MFMessageAttachmentMigrator.contentProtectionQueue
SELECT ROWID FROM messages WHERE (((flags&(63<<10))>>10) BETWEEN 1 AND 62) AND global_message_id NOT IN (SELECT DISTINCT global_message_id FROM message_attachments)
successful
unsuccessful
Successfully
Unsuccessfully
com.apple.mail.attachmentMigrator
MFMessageBodyHTMLParserErrorDomain
<(body|BODY)(\s|>)
</%@
<%@>
"%@..."
%@...
Messages
com.apple.email.MFMessageBodyMigrator
emlx
v24@?0@"MFLibraryMessage"8^B16
B16@?0@"NSString"8
@"NSMutableArray"8@?0
blockquote
title
script
style
-[MFMessageBodyParser messageBodyElementClass]
MFMessageBodyParser.m
cite
gmail_quote
class
Not all requested attributes have a valid values
<%@: %p; text="%@">
AttributionPatterns
Single Line
^(\u200f*|\u200e*)\s*(%@)\s*$
Separators
Signatures
Couldn't create regular expression for key %@: %@
v24@?0@"<MFMessageBodyElement>"8Q16
v16@?0@"<MFMessageBodyElement>"8
B16@?0@"<ECMessage>"8
MFMessageChangeManager_iOS.m
[messages.firstObject isKindOfClass:[MFMessage class]]
v32@?0@"MFMailMessage"8@"MFLibraryMessage"16^B24
B32@?0@"<ECMessage>"8Q16^B24
[message isKindOfClass:[MFLibraryMessage class]]
@"NSDictionary"16@?0@"EMMessage"8
@"NSArray"16@?0@"NSArray"8
@"NSString"16@?0@"<ECEmailAddressConvertible>"8
q24@?0@"NSString"8@"NSString"16
v32@?0@"<ECMailbox>"8@"NSMutableArray"16^B24
maild.isMailDropAttachmentPresent
v16@?0@"EFCancelationToken"8
Loading context completed without vending a result
@"EFFuture"16@?0@"MFMessageLoadingContextEvent"8
v16@?0@"EMContentRepresentation"8
@"EFFuture"16@?0@"NSString"8
@"EFFuture"16@?0@"NSError"8
@"EFFuture"16@?0@"<MFCollectingDataConsumer>"8
v16@?0@"EFFuture"8
v24@?0@"NSDictionary"8@"NSError"16
Failed to generate snippets for attachments: nil delegate
v24@?0@"NSArray"8@"NSError"16
@"EFFuture"16@?0@"_MFLoadingContextEventResult"8
v24@?0@"EMContentRepresentation"8@"NSError"16
@"NSProgress"16@?0@?<v@?@"EMContentRepresentation"@"NSError">8
@"NSProgress"24@?0Q8@?<v@?@"NSError">16
@"NSProgress"32@?0@"EMContentRequestOptions"8@"<EMContentItemRequestDelegate>"16@?<v@?@"EMContentRepresentation"@"NSError">24
@"NSProgress"8@?0
%@://%@%@
MFMessageCriterion+MailboxPrediction.m
NSNumber variable required, got %@
NSString variable required, got %@
ECAngleBracketIDHash variable required, got %@
NSSet variable required, got %@
Should not have reached this case, check the previous switch!
BccRecipient
senderAddress.emailAddressValue.simpleAddress
Spotlight
body
subject.subjectWithoutPrefix
IsRead
HasAttachments
Flagged
readLaterDate
sendLaterDate
followUpStartDate
followUpEndDate
unsubscribeType
senderBucket
@"NSPredicate"16@?0@"NSString"8
@"NSPredicate"16@?0@"MFMessageCriterion"8
@"NSNumber"16@?0@"NSString"8
@"MFMessageCriterion"16@?0@"NSPredicate"8
<%@: %p> message %@
 hLCB=%@ hLBAP=%@ remainingBytes=%lu
 error: %@
 SMIME error: %@
 error: %@/%ld
 SMIME error: %@/%ld
 content: %@
 %lu content items
MFMessageLoadingContext.m
_inputObservable must not already be configured
B16@?0@"MFMessageLoadingContextEvent"8
v16@?0@"MFMessageLoadingContextEvent"8
body must be a MIME body
@16@?0@"MFMessageTextAttachment"8
@"EMMessageSigner"16@?0@"MFMessageSigner"8
com.apple.email.messagePersistence.contentLoad.network
com.apple.email.messagePersistence.contentLoad.offline
SummaryLoaderQueue
Buckets
BIMI
client_%d
v16@?0@"<EMContentRequestOptionsBuilder>"8
@"NSNumber"8@?0
Q16@?0@"NSString"8
SELECT COUNT(*) FROM message_data
SELECT COUNT(*) FROM message_data_deleted
SELECT COUNT(*) FROM messages WHERE journaled = '1'
SELECT COUNT(*) FROM mailboxes WHERE reconcile = '1'
SELECT COUNT(*) FROM protected_message_data
SELECT COUNT(*) FROM message_attachments WHERE message_attachments.attachment IS NOT NULL
SELECT COUNT(*) FROM searchable_attachments
SELECT COUNT(*) FROM message_attachments LEFT OUTER JOIN searchable_attachments ON (message_attachments.ROWID = searchable_attachments.attachment_id) WHERE searchable_attachments.attachment_id IS NULL AND message_attachments.attachment IS NOT NULL;
NetworkConfigurationDidChangeNotification
MFCarrierBundleChangedNotification
MFNetworkSimulationBitfieldKey
NetworkSymptomsHasAlternativeAdvice
com.apple.message.mfnetworkcontroller
v16@?0@"NSMutableArray"8
cellular-data
wi-fi
com.apple.wifi.plist
com.apple.message.MFNetworkController.dataStatus
com.apple.mail.radioPreferences
UIApplicationWillEnterForegroundNotification
B16@?0@"CTXPCServiceSubscriptionContext"8
com.apple.symptoms.hasAlternateAdvice
-[MFNetworkController dealloc]
MFNetworkController.m
NULL == _store
NULL == _reachability
@"<EFCancelable>"16@?0@"<EFObserver>"8
@"NSNumber"16@?0@"MFNetworkController"8
Network Controller State
Data Status
0x%02x
Reachability Flags
WiFi Enabled
Cell Data
Data Status Indicator
Roaming Allowed
Active Calls
Core Telephony Client
@"NSMutableDictionary"8@?0
%s (%d)
None
2.5G
3.5G
3.75G
H Plus
Unknown
EmailAuthNone
EmailAuthCRAMMD5
EmailAuthNTLM
EmailAuthHTTPMD5
EmailDomain
EmailAccountName
IncomingMailServerAuthentication
OutgoingMailServerAuthentication
OSXServerIMAPErrorDomain
OS X Server
com.apple.mobilemail.sentMessageSize
MFPersistence_iOS.m
-[MFPersistence_iOS test_tearDown]
MFPersistenceDatabase_iOS.m
Trying to access the database in MobileMail
Got wrong type of connection
CREATE TEMPORARY TABLE temp_selected_messages (message_id INTEGER);
enabling extended error codes
icusearch
creating custom icusearch function
cpsearch
creating custom cpsearch function
setting cache_size
configuring sql connection for %@
database corrupt
-[MFPersistenceDatabaseConnection_iOS _handleCorruptDatabase]
MFPersistenceDatabaseConnection_iOS.m
0 && "database corrupt"
file system out of space
-[MFPersistenceDatabaseConnection_iOS _handleFullDatabase]
0 && "file system out of space"
database I/O error, missing sqlDB pointer
-[MFPersistenceDatabaseConnection_iOS _handleInvalidDatabaseIOError]
0 && "database I/O error, missing sqlDB pointer"
protected database went missing
-[MFPersistenceDatabaseConnection_iOS _handleDetachedDatabaseIOError]
0 && "protected database went missing"
database I/O error
-[MFPersistenceDatabaseConnection_iOS _handleIOError]
0 && "database I/O error"
SQLITE_BUSY
-[MFPersistenceDatabaseConnection_iOS _handleBusyError]
0 && "SQLITE_BUSY"
PRAGMA cache_size = 1000;
MFPowerStateDidChange
MFBatteryLevelDidChange
MFPowerAssertionDidExpire
MFBatterySaverModeDidChange
com.apple.message.MFPowerController.state
com.apple.message.MFPowerController.power
+[MFPowerController sharedInstance]
MFPowerController.m
instance != nil
plugged in
unplugged
assertion IS NOT NULL
assertion timer IS NOT nil
com.apple.message.preventSleep
assertion IS NULL
assertion timer IS nil
task assertion IS NOT NULL
com.apple.message.backgroundTaskAssertion
task assertion IS NULL
@16@?0@"NSNotification"8
@"NSNumber"16@?0@"MFPowerController"8
@"NSNumber"16@?0@8
==== Power State ====
  charging: %@
  low-power mode: %@
  holding assertion: %@
==== Internal Assertions ====
  %@: %d
journal
Could not retrieve RFC822 data for attachment.
@"EDSearchableIndexItem"16@?0@"<EDPersistedMessage>"8
@"NSNull"16@?0@8
com.apple.mobilemail.contentIndex
likely(deleted = '0')
v16@?0@"<EDSearchableIndexAttachmentItemMetadatumBuilder>"8
v24@?0@"NSArray"8@"NSArray"16
v24@?0@"NSURL"8@"MFLibraryMessage"16
deleted = '0' AND messages.ROWID IN (%@)
ShouldSign
ShouldEncrypt
SigningIdentity
EncryptionIdentity
RecipientCertificates
IdentityRef
IdentityError
ErrorsByRecipient
CertificatesByRecipient
MFSecureMIMECompositionManager_lock
com.apple.mobilemail.MFSecureMIMECompositionManagerQueue
-[MFSecureMIMECompositionManager _determineSigningStatusWithSendingAddress:]
MFSecureMIMECompositionManager.m
_signingStatusSemaphore > 0
-[MFSecureMIMECompositionManager _determineEncryptionStatusWithSendingAddress:]
_encryptionStatusSemaphore > 0
-[MFSecureMIMECompositionManager _determineEncryptionStatusWithNewRecipients:]
-[MFSecureMIMECompositionManager compositionSpecification]
_signingIdentity
_encryptionIdentity
SMIME_MISSING_SIGNING_IDENTITY_FORMAT
SMIME_MISSING_ENCRYPTION_IDENTITY_FORMAT
SMIME_OTHER_ENCRYPTION_CERT_ERROR_MESSAGE
SMIME_MISSING_ENCRYPTION_CERT_MESSAGE
MF_SMIME_CERTIFICATE_NOT_YET_VALID_FORMAT
MF_SMIME_CERTIFICATE_EXPIRED_FORMAT
checkCertificateExpiration
com.apple.private.accounts.allaccounts
GSDeviceName
_SIMULATOR
%@_%@
DEFAULT_SIGNATURE
DEFAULT_SIGNATURE_IPHONE
Sent from my iPhone
SignatureKey
com.apple.mail.MailAccountSignaturesChanged
UseAccountSignatures
<br/><br/>
X-AOL-OUTBOX-COPY
PIPELINING
SMTPUTF8
ENHANCEDSTATUSCODES
CHUNKING
DisableCHUNKING
SIZE
AUTH
FAILED_SEND_SSL_NEEDED
FAILED_SEND_TITLE
Cannot Send Mail
BDAT %lu LAST
> SMTPUTF8
 imapmailbox="%@"
SMTP_INVALID_SENDER_ADDRESS
SMTP_SENDING_CONTENT_FAILED
Sending the message content to the server failed.
SMTP_1_BAD_RECIPIENT
MFSMTPFailureReason
SMTP_SENDING_CONTENT_LATER
Mail will try to send the message again later.
SMTP_BAD_RECIPIENTS
The recipients were rejected by the server.
SMTP_RECIPIENTS_UNRECOGNIZED
Verify that you have addressed this message correctly. Check your SMTP server settings in Mail Preferences and verify any advanced settings with your system administrator.
SMTP_SENDING_FAILED_TITLE
Unable to Send Email
SMTP_GENERIC_ERROR_FORMAT
^([0-9]+)([- ])?(.*)$
Unable to init regular expression from %@
-[MFSMTPConnection _readResponseRange:isContinuation:]
MFSMTPConnection.m
[match numberOfRanges] == 4
FAILED_SEND
smtpclient.apple
SSNT
B16@?0@"MFMessageReferenceContext"8
q24@?0@"MFMessageReferenceContext"8@"MFMessageReferenceContext"16
probe_message_update
probe_message_add
probe_message_delete
CREATE TEMPORARY TRIGGER probe_message_update AFTER UPDATE OF flags ON messages BEGIN SELECT probe_message_update(OLD.ROWID, OLD.flags, NEW.flags, NEW.message_id, NEW.mailbox); END
CREATE TEMPORARY TRIGGER probe_message_add AFTER INSERT ON messages BEGIN SELECT probe_message_add(NEW.ROWID, NEW.flags, NEW.message_id, NEW.mailbox); END
CREATE TEMPORARY TRIGGER probe_message_delete AFTER DELETE ON messages BEGIN SELECT probe_message_delete(OLD.ROWID, OLD.flags, OLD.message_id, OLD.mailbox); END
ROW: %lld; 
Count: %ld -> %ld; 
Flags: %llu -> %llu (
R: %@ -> %@ | 
SR: %@ -> %@ | 
TSR: %@ -> %@ ); 
dup msgs: %lu;
#Update
SELECT message_id FROM messages WHERE message_id = ? AND rowid != ? AND flags&2 > 0 AND mailbox = ? AND (flags&1 = 0 AND flags&128 = 0 AND flags&1048576 = 0)
SELECT unread_count FROM mailboxes WHERE ROWID = ?
Flags: %llu (
R: %@ | 
SR: %@ | 
TSR: %@ ); 
#Add
#Delete
com.apple.mobilemail
ReplyToSelf
AuthSchemeKey
BlockRemoteImages
CollapseReadConversationMessages
ConversationViewExcludesRelatedMessages
ConversationViewShowsNewestAtTop
Deceleration
DisableQuoteIncrease
DisableThreading
IncludeAttachmentReplies
IncludeAttachmentRepliesAlways
IncludeAttachmentRepliesAsk
IncludeAttachmentRepliesNever
IncludeAttachmentRepliesWhenAdding
LeftEdgeSwipeAction
LinesOfPreview
MailDefaultsChangedNotification
MarkAsRead
MoveToArchiveOrDelete
MutedThreadActionKey
NoNotification
POPDeleteIntervalKey
RightEdgeSwipeAction
ShowMessageDeleteConfirmation
ShowToCCIndicators
SwipeActionAlternateDestructiveAction
SwipeActionArchive
SwipeActionFlag
SwipeActionMove
SwipeActionNone
SwipeActionRead
SwipeActionTrash
outgoing_key
MFLibraryCompressorDefaultsUpgradeStateKey
MobileMailVersion
Preferences
Found
Not Found
MailAccountExtPropertiesMigratedToSharedAppGroup
DeviceIdentifier
com.apple.EmailFoundation
MFWeakObjectCache.m
couldn't create a weak reference for %@
bold
italic
fixed
smaller
bigger
x-tad-bigger
x-tad-smaller
fontfamily
color
underline
nofill
excerpt
param
x-fontsize
superscript
subscript
paragraph
signature
heading
footing
no-op
</U>
<SUP>
</SUP>
<SUB>
</SUB>
<SPAN style="
color: %s; 
font-size: %dpt; 
</SPAN>
&nbsp;&nbsp;&nbsp;&nbsp;
<br/>
-[MFMimeEnrichedReader setupFontStackEntry:]
MimeEnrichedReader.m
NULL != stackEntry
font-weight: bold
font-style: italic
rgba(%d, %d, %d, 1)
font-family: 
font-face: Helvetica
<%@:%p
_commandStack = %p (%ld entries):
[%@ parameter=%@]
_outputBuffer=%@
_outputString=%@
-------------------------------------------------------------------
<%@: %p priority: %lu target: %@ selector: %s>
ATOKEN
MESSAGE_AUTH_ATOKEN
Apple Token
CASTLE_SMTP_SERVER
iCloud SMTP Server
MFMessageKeychainManagerCertificateDeniedDomain
keychainLock
1.2.840.113635.100.6.7
B16@?0^{__SecIdentity=}8
S/MIME Encryption for %@
%@-%d.%@
%@-%d
<br>
MESSAGE_AUTH_NTLM
XOAUTH2
MESSAGE_AUTH_OAUTH2TOKEN
OAuth 2.0 Token
user=%@
auth=Bearer %@
smtp
MESSAGE_AUTH_PLAIN_TEXT
user
pass
string
quoteLevel
ProgressiveMimeParseErrorDomain
Data is not as long as reported
Unable to parse Content-type header in top-level part
No Content-type header found in top-level part
Invalid parser state (%d)
x-apple-smime-error
x-apple-smime-signers
sha-256
--%@
SMIME_CANT_DECRYPT_MESSAGE
This message is encrypted.  Install a profile containing your encryption identity to decrypt this message.
%@://%@
x-attach-SMIME
SecureMimePart.m
The message body should be a MFMimeBody.
SMIME_CANT_DECRYPT_TITLE
Unable to decrypt message
(Unknown)
SMIME_CANT_SIGN_MESSAGE
application/pkcs7-signature
micalg
pkcs7-signature
smime.p7s
SMIME_CANT_SIGN_TITLE
Unable to Sign
SMIME_CANT_ENCRYPT_MESSAGE
An error occurred while trying to encrypt your message. Verify that you have valid certificates in your keychain for all of the recipients.
pkcs7-mime
smime.p7m
enveloped-data
smime-type
NO_SMTP_HOST
You have not specified an SMTP server in Mail Preferences. You must specify a server before you can send mail.
SMTP_NO_CONNECTION
MF_SMTP_RECIPIENT_INVALID_ADDRESS
MESSAGE_TOO_LARGE
Your message has size %@, which exceeds %@, the maximum allowed by the server.
MFSMTPFailureReasonUserUnknown
MFSMTPFailureReasonRelayingNotAllowed
MFSMTPFailureReasonInvalidAddress
MFSMTPFailureReasonSendingLimitExceeded
MFSMTPFailureReasonNoAuthCommandGiven
MFSMTPFailureReasonInvalidSenderAddress
MFSMTPFailureReasonBadCredentials
MFSMTPFailureReasonWebLoginRequired
MFSMTPFailureReasonUnknown
^([0-9]+)\.([0-9]+)\.([0-9]+)([ ]+)(.*)
SMTPResponse.m
MF_SMTP_RECIPIENT_UNKNOWN
MF_SMTP_RECIPIENT_RELAYING_NOT_ALLOWED
MF_SMTP_SENDING_LIMIT_EXCEEDED
Sending the message failed because you exceeded your sending limit.
NO_PASSWORD_PROVIDED_ERROR
No password provided.
Please go to Mail Account Settings and enter a password.
%lu (%d.%d.%d) %@
%lu %@
sending limit
from address is not one of your addresses
SELECT ROWID from mailboxes WHERE url = ?;
SELECT 1 FROM pop_uids WHERE mailbox = ? AND uid = ? AND flags IS NULL;
SELECT uid FROM pop_uids WHERE mailbox = ? AND date_added < ?;
SELECT uid FROM pop_uids WHERE mailbox = ?;
DELETE FROM pop_uids WHERE mailbox = ? AND uid = ?;
SELECT COUNT() FROM pop_uids WHERE mailbox = ?;
DELETE FROM pop_uids WHERE mailbox = ?;
SELECT flags FROM pop_uids WHERE mailbox = ? AND uid = ?;
-journal
-wal
-shm
 Journals
MFWebAttachmentSource_AttachmentLock
<%@ %p>, attachments=%@
x-msg://%ul/
MFWebMessageDocument/%ul
yahoo.com
YahooAllowSSL
YahooIMAPPort
Draft
Bulk Mail
%@@yahoo.com
ymail://?fid=%@&mid=%@
yahoo.co.jp
ybb.ne.jp
yahooAccountIcon
YAHOO_DELIVERY_HOSTNAME
Yahoo! SMTP Server
com.apple.email.BackFillMessageBodyActivity
Ending activity for %{sensitive,mask.mailbox}s
Updating activity for %{sensitive,mask.mailbox}s to status %{public}s
Starting activity for %{sensitive,mask.mailbox}s with status %{public}s
Message/Activity.swift
Unexpectedly found nil while implicitly unwrapping an Optional value
IMAPLastSyncDate
Couldn't find existing activity for %{sensitive,mask.mailbox}s
Couldn't find existing activity for %{sensitive,mask.mailbox}s, starting new one
Fetching failed (unknown error)
Fetching failed because of an authentication error
Fetching failed because server was unreachable
EDAccountsProvider
receivingAddresses
T@"NSArray",N,R
hasActiveAccounts
TB,N,R
@"NSArray"16@0:8
OS_xpc_object
OS_dispatch_source_timer
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
hash
Tq,N,R
superclass
description
T@"NSString",N,R
debugDescription
B24@0:8@"Protocol"16
@"NSString"16@0:8
EDBaseMessage
globalMessageID
account
T@"<EDIndexableAccount>",N,R
T@"<EDIndexableMailbox>",N,R
displayDate
T@"NSDate",N,R
readLater
T@"EMReadLater",N,R
followUp
T@"EMFollowUp",N,R
brandIndicatorLocation
T@"NSURL",N,R
brandIndicator
T@"NSData",N,R
dataDetectionAttributes
T@"NSDictionary",N,R
bccIfAvailable
@"<EDIndexableAccount>"16@0:8
@"<EDIndexableMailbox>"16@0:8
@"NSDate"16@0:8
@"EMReadLater"16@0:8
@"EMFollowUp"16@0:8
@"NSURL"16@0:8
@"NSData"16@0:8
@"NSDictionary"16@0:8
EDPersistedMessage
v32@0:8@16@24
persistentID
persistedMessageID
conversationFlags
TQ,N,R
T@"NSDate",N,C
T@"EMReadLater",N,&
accountForSender
T@"<EDAccount>",N,R
T@"EMFollowUp",N,&
basePath
v24@0:8@"NSDate"16
v24@0:8@"EMReadLater"16
@"<EDAccount>"16@0:8
v24@0:8@"EMFollowUp"16
v32@0:8@"NSURL"16@"NSData"24
ECMessage
@24@0:8^B16
T@"ECSubject",N,R
from
dateReceived
dateSent
T@"<ECMailbox>",N,R
conversationID
isServerSearchResult
T@"ECMessageFlags",N,R
partOfExistingThread
mimeBody
T@"<ECMimeBody>",N,R
headersDictionary
messageIDHeader
messageIDHeaderHash
T@"ECAngleBracketIDHash",N,R
labels
T@"NSSet",N,R
T@"<ECMailAccount>",N,R
headers
T@"<ECMessageHeaders>",N,R
references
documentID
T@"NSUUID",N,R
numberOfAttachments
listIDHash
@"NSString"24@0:8^B16
@"ECSubject"16@0:8
@"<ECMailbox>"16@0:8
@"ECMessageFlags"16@0:8
@"<ECMimeBody>"16@0:8
@"ECAngleBracketIDHash"16@0:8
@"NSSet"16@0:8
@"<ECMailAccount>"16@0:8
@"<ECMessageHeaders>"16@0:8
@"NSUUID"16@0:8
EFObservable
@"<EFCancelable>"24@0:8@"<EFObserver>"16
v36@0:8i16@20@?28
v16@0:8
B32@0:8@16@24
v36@0:8i16@"NSArray"20@?<v@?>28
v24@0:8@"<MFBackFillingMessageBodyDownloadRequest>"16
v24@0:8@"ECLocalMessageAction"16
B24@0:8@"NSString"16
B32@0:8@"NSString"16@"NSString"24
EDAccount
identifier
systemAccount
T@"ACAccount",N,R
statisticsKind
primaryiCloudAccount
isActive
displayName
T@"NSString",N,C
@"ACAccount"16@0:8
v24@0:8@"NSString"16
OS_dispatch_source
@24@0:8^{_NSZone=}16
ECMailAccount
emailAddressStrings
hostname
password
ECAccountPropertyProviding
@24@0:8@"NSString"16
Message.BackFillMessageBodyScheduler
Message/BackFillMessageBodies.swift
StaticString should have Unicode scalar representation
Swift/StaticString.swift
Not enough bits to represent the passed value
Swift/Integers.swift
Unexpectedly found nil while unwrapping an Optional value
StaticString should have pointer representation
Swift/UnsafeBufferPointer.swift
UnsafeBufferPointer has a nil start and nonzero count
MFBackFillMessageBodyScheduler
@16@0:8
didSetCriteria
activity
accountProvider
_TtCC7Message28BackFillMessageBodyScheduler7Request
v20@0:8i16
_TtCC7Message28BackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity
scheduler
running
timer
didComplete
error
noWork
pendingWork
Message.Request
%lx: Received '%{public}s' without request.
%lx: Received '%{public}s' from request.
Can't unsafeBitCast between types of different sizes
Swift/Builtin.swift
%lx: %ld out of %ld are still running.
%lx: Completed with status: %{public}s
%lx: Failed to set completion status to %{public}s
Activity '%lx' did complete, but we no longer have a reference to it.
Activity '%lx' did complete.
self must be a properly aligned pointer for types Pointee and T
Swift/UnsafePointer.swift
Division results in an overflow in remainder operation
Swift/IntegerTypes.swift
Division by zero in remainder operation
UnsafeBufferPointer with negative count
Swift/AssertCommon.swift
Not enough bits to represent a signed value
Registering.
v16@?0@"<OS_xpc_object>"8
Checked in.
Checking in: Updating criteria to %{public}s
Unable to set state to CONTINUE.
Received new activity '%lx', but already have an existing one %lx.
%lx: Running.
Found %ld task managers for %ld accounts.
%lx: Starting back-filling messages on task manager %lx.
com.apple.email.back-fill-message-bodies
BackFillMessageBodyActivity
MFBackFillingMessageBodyDownloadRequest
NSObject
q16@0:8
#16@0:8
@24@0:8:16
_TtCC7Message18PersistenceAdaptor19ClientStateObserver
token
persistenceAdaptor
v16@?0@"NSNotification"8
Message.ClientStateObserver
init()
Message/ClientState.swift
Message/Configuration.swift
No account while trying to create credentials.
Renewing OAuth credentials.
v24@?0Q8@"MFError"16
OAuth credentials will expire in %ld seconds.
OAuth credentials did expire %ld seconds ago.
Failed to renew credentials: %@
Failed to renew credentials.
Did renew OAuth credentials.
Missing details for using oAuth Token auth for account 
%{sensitive,mask.mailacco}s
 %{public}s
Adding oAuth Token auth for account 
%{sensitive,mask.mailacco}s
 %{public}s
Missing details for using Apple Token auth for account 
%{sensitive,mask.mailacco}s
 %{public}s
Adding Apple Token auth for account 
%{sensitive,mask.mailacco}s
 %{public}s
Missing username/password for account 
%{sensitive,mask.mailacco}s
 %{public}s
Adding username + password auth for account 
%{sensitive,mask.mailacco}s
 %{public}s
PLAIN
Unsupported auth method 
%{public}s
 for account 
%{sensitive,mask.mailacco}s
 %{public}s
No auth schemes for account 
%{sensitive,mask.mailacco}s
 %{public}s
_TtCE7MessageV16IMAP2Persistence11Environment7Wrapped
environment
Index out of range
Swift/ContiguousArrayBuffer.swift
Down-casted Array element failed to match the target type
Expected 
UInt8
 but found 
inout rules were violated: the array was overwritten
Swift/ArrayBuffer.swift
v16@?0@"<ECTransferMessageActionResultsBuilder>"8
v16@?0@"<ECFlagChangeMessageActionResultsBuilder>"8
v16@?0@"<ECMessageFlagsBuilder>"8
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Message/IMAPPersistence/Shared/Flags.swift
v16@?0@"<ECMessageFlagChangeBuilder>"8
Found %ld (limit %ld) messages with changed flags.
Only found %ld server messages for %ld flag changes.
Found invalid UID '%{public}s' while looking for deleted messages.
Found invalid UID '%{public}s' while looking for flag changes.
listUnsubscribe
remoteID
flags
NSCopying
T#,N,R
MFSwiftIMAPMailboxTaskManager
v24@0:8@16
@32@0:8@16@24
library
mailbox
taskManager
T@"MFMailMessageLibrary",N,&,Vlibrary
B16@0:8
q32@0:8@16Q24
q40@0:8q16@24Q32
@32@0:8@16^B24
@24@0:8@16
B56@0:8@16{_NSRange=QQ}24^B40@48
@44@0:8@16I24@28^@36
v24@0:8i16B20
v40@0:8@16@24@32
v20@0:8B16
canFetchMessageIDs
canFetchSearchResults
Message/IMAPMailboxTaskManager.swift
replayAction: should not get called with new IMAP stack
Message.IMAPMailboxTaskManager
MFIMAPMailboxTaskManager
q40@0:8Q16@24Q32
T@"MFMailMessageLibrary",N,&
@"MFMailMessageLibrary"16@0:8
v24@0:8@"MFMailMessageLibrary"16
q32@0:8@"NSSet"16Q24
q40@0:8Q16@"NSString"24Q32
@"NSData"32@0:8@"MFLibraryMessage"16^B24
@"NSData"24@0:8@"MFLibraryMessage"16
B56@0:8@"MFMimePart"16{_NSRange=QQ}24^B40@"MFProgressFilterDataConsumer"48
@"NSData"32@0:8@"MFMessage<MFIMAPMessage>"16^B24
@"MFMailMessageStoreSearchResult"44@0:8@"MFMessageCriterion"16I24@"NSDate"28^@36
v40@0:8@"NSArray"16@"NSDictionary"24@"NSDictionary"32
@"ECLocalMessageActionResults"24@0:8@"ECLocalMessageAction"16
@"NSSet"24@0:8@"NSSet"16
_TtC7Message25InProgressMessageDownload
existingHeaders
newMessageHeaders
concatenators
sections
Invalid state for section '%{public}s' data for %u.
Added %ld bytes for section '%{public}s' for %u.
Completed section '%{public}s' for %u (%ld) bytes.
Wrong header type for %u.
InProgressMessageDownload already has new headers for %u.
Added message header for %u.
Failed to combine MIME parts: %@
No part '%{public}s' in message UID %u.
Range requires lowerBound <= upperBound
Swift/Range.swift
Double value cannot be converted to Int because it is either infinite or NaN
Double value cannot be converted to Int because the result would be less than Int.min
Double value cannot be converted to Int because the result would be greater than Int.max
_TtCC7Message18PersistenceAdaptor18MailboxNameMapping
pathSeparator
_TtC7Message24MailboxPersistenceHelper
mailboxURL
store
serverMessagePersistence
messageChangeManager
actionPersistentID
messagePersistentID
Message/MailboxPersistenceHelper.swift
Message/MailboxTree.swift
Failed to update local mailboxes: %@
Found %ld local mailbox(es).
\Sent
\Junk
\Flagged
\All
Creating new top level local mailbox '%{sensitive,mask.mailbox}s'.
Creating new local mailbox '%{sensitive,mask.mailbox}s' inside parent '%{sensitive,mask.mailbox}s.'
_TtC7Message23MessagesBeingDownloaded
elements
Clearing state for in-progress download of message %u in '%{sensitive,mask.mailbox}s'
Received message body segment for unknown message %u.
_TtCV7Message30MessageSectionDataConcatenator13TemporaryFile
section.XXXXXXXXXXXXXXXX
Message/MessageSectionDataConcatenator.swift
sourceUID
destinationPersistentID
v16@?0@"<ECIMAPServerMessageBuilder>"8
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Message/IMAPPersistence/Shared/MoveAndCopy.swift
Message/MoveAndCopy.swift
Action has no target mailbox for move/copy action %s
Unable to get target mailbox name for URL '%s' for move/copy action %s
Unable to create MoveReference for item in move/copy action %s
Invalid source UID '%s' in move/copy action %s
Received a new UID %u from the server, but there
s no local destinationPersistentID.
Unable to find action item for move/copy '%s'
Received didMoveOrCopyMessages, but the opaque ID can
t be decoded.
Received didMoveOrCopyMessages, but the local action no longer exists.
Missing information for user-initiated download.
[%{sensitive,mask.mailbox}s] Requesting download of %u in '%{sensitive,mask.mailbox}s'
_TtC7Message18PersistenceAdaptor
_nextActionID
_sendReply
messagesBeingDownloaded
_mailboxPathSeparator
didTearDown
lastActivity
emailActivities
statusIsolationQueue
workQueue
opaqueIDCoder
nameMapping
_allLocalMessageActions
_allLocalMailboxActions
lastKnownLocalAction
downloads
clientStateObserver
cancelationToken
runningSyncs
currentBackFillSync
Action %{public}s failed: %@
UnsafeRawBufferPointer with negative count
Swift/UnsafeRawBufferPointer.swift
UnsafeMutableRawBufferPointer.copyMemory source has too many elements
UnsafeMutableRawPointer.copyMemory with negative count
Swift/UnsafeRawPointer.swift
Swift/StringTesting.swift
UnsafeMutableRawPointer.initializeMemory with negative count
UnsafeMutableRawPointer.initializeMemory overlapping range
UnsafeMutableBufferPointer with negative count
newElements.underestimatedCount was an overestimate
Swift/Array.swift
Division results in an overflow
Division by zero
UnsafeMutablePointer.moveInitialize with negative count
UnsafeMutablePointer.initialize with negative count
UnsafeMutablePointer.initialize overlapping range
Attempt to copy contents into nil buffer pointer
Insufficient space allocated to copy array contents
Insufficient space allocated to copy string contents
Swift/StringUTF8View.swift
invalid Collection: more than 'count' elements in collection
invalid Collection: less than 'count' elements in collection
String index is out of bounds
%ld download requests completed.
Ignoring failure to create mailbox '%{sensitive,mask.mailbox}s'.
Got didUploadMessage but opaque data is invalid. Ignoring.
Got didUploadMessage but opaque data does not match any local actions. Ignoring.
Got sendMessageDataForUpload but opaque data is invalid. Ignoring.
Got sendMessageDataForUpload but opaque data does not match any local actions. Ignoring.
No destination message for local action. Ignoring.
Unable to encode message as upload data. Ignoring.
No downloaded data for %u in '%s' found.
findNewestMessagesMissingSections in %{sensitive,mask.mailbox}s: %ld UIDs
Looking up UIDs in %{sensitive,mask.mailbox}s in %{public}s.
Received %ld remote mailbox(es). Returning %ld local mailboxes.
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Message/IMAPPersistence/Shared/PersistenceAdaptor.swift
Completed sync request(s) %s.
Still running %ld sync(s) (%s) after completing %ld sync(s).
Sync #%u was not in the list of running syncs. Ignoring.
v12@?0I8
Deleting all server messages in '%s' due to validity change: %u 
 0x%x
Message/PersistenceAdaptor.swift
Failed to parse headers for some messages (%ld vs. %ld). Skipping.
Removing messages in range %s, keeping %{public}s
Found %ld existing messages to be removed in range %{public}s.
Deleting %ld messages in range %{public}s.
No persisted message for UID %u.
Did download all section for UID %u: %ld bytes, isPartial: %{BOOL}d 
Unable to get message data for message upload. Ignoring.
Setting UID %u on APPEND destination '%s'
Unable to encode move/copy reference.
UnsafeMutableRawBufferPointer with negative count
Did create local modifications.
Created %ld event updates from %ld local actions.
Retrieving new local actions (last ID = %lld).
Unable to get local actions.
No new local actions found. Ignoring.
Last local actions has an invalid messageActionPersistentID.
Got %ld new local actions found, new last ID: %lld.
Request to stop back-fill, but no back-fill is running.
Stopping back-fill sync (#%u) and reporting as 
has pending work
 to xpc.
Back-fill sync is already running (#%u).
Requesting sync #%u, kind: %{public}s, mailbox count: %ld. Running syncs count: %ld
backFill
userInitiated
push
powerNap
periodic
Back-fill sync (#%u) completed, but new back-fill sync is running (#%u).
Completing back-fill sync (#%u).
Assertion failed
com.apple.email.PersistenceAdaptor.statusIsolationQueue
com.apple.email
PersistenceAdaptor.
com.apple.mail.MFSwiftIMAPTaskManager.Persistence/
v16@?0@8
com.apple.mail.MFSwiftIMAPTaskManager.action-id-isolation
MFSwiftIMAPTaskManager
persistenceWorkloop
makeEngineAndAdaptor
_engine
_adaptor
engineIsolation
bodyFetchContext
Message1
Message2
MFSwiftIMAPBodyFetchContext
TaskManager.BodyFetchContext
Message.BodyFetchContext
Message/TaskManager.swift
[%{public}s] Ignoring 'addLocalAction'.
[%{public}s] Ignoring 'renameMailbox'.
[%{public}s] Ignoring 'deleteMailbox'.
[%{public}s] Ignoring 'createMailbox'.
[%{public}s] Account changed. Re-creating engine and adaptor.
[%{public}s] Setting engine and adaptor. (%{BOOL}d, %{BOOL}d)
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Message/IMAPPersistence/Shared/TaskManager.swift
com.apple.email.TaskManager.engineIsolation
Message.TaskManager
[%{public}s] Unable to create engine configuration for account.
com.apple.mail.MFSwiftIMAPTaskManager
com.apple.mail.MFSwiftIMAPTaskManager.main
TaskManager.
MFTaskManager
Swift/ClosedRange.swift
Fatal error
(Node in _0867628E3482960B71C3EBACEC5CAE06)
NSArray element failed to match the Swift Array Element type
Expected 
_TtCVV13IMAP2Behavior5State12LocalMailbox6Logger
ID: '%@' sync: %d steps: %d
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Marking step %s as complete
Swift/Dictionary.swift
Swift/NativeDictionary.swift
Duplicate values for key: '
%s%.*hhx%s%{sensitive,mask.mailbox}s%s Mailbox has pending updates while being deselected.
LocalMailboxRemoved
%s%.*hhx%s Need to de-select %ld locally known mailboxes.
%s%.*hhx%s Updated %ld locally known mailboxes.
%s%.*hhx%s Removed %ld locally known mailboxes.
%s%.*hhx%s Added %ld locally known mailboxes.
%s%.*hhx%s Received %ld locally known mailboxes.
%s%.*hhx%s Persistence passed list of mailboxes with duplicate names.
%s%.*hhx%s Setting %ld visible mailboxes. 1st one is '%{sensitive,mask.mailbox}s'
%s%.*hhx%s Setting visible mailboxes to none.
%s%.*hhx%s Setting %ld download requests.
MailboxSyncState(messageCount: 
, uidValidity: 0x
), syncSteps: completed: {}, restart: {}, messagesWithTemporaryUploadFailure: 
%s%.*hhx%s%{sensitive,mask.mailbox}s%s Received expunge %u, but mMessage is already zero.
%s%.*hhx%s%{sensitive,mask.mailbox}s%s Received expunge %u. Message count is now %ld.
%s%.*hhx%s%{sensitive,mask.mailbox}s%s Updating message count to %u
%s%.*hhx%s%{sensitive,mask.mailbox}s%s Updating highest mod-seq to %llu
%s%.*hhx%s%{public}s%s Attempting to store HIGHESTMODSEQ, but PendingServerResponses does not support CONDSTORE.
%s%.*hhx%s%{sensitive,mask.mailbox}s%s Inserting flag/label change without UID. Sequence number %u.
%s%.*hhx%s%{sensitive,mask.mailbox}s%s Inserting flag/label change for UID %u.
changesWithoutUID
%s%.*hhx%s%{sensitive,mask.mailbox}s%s Mailbox supports CONDSTORE, but flag change has no MODSEQ.
newModificationSequenceValue
commandsToWaitOn
%s%.*hhx%s Adding mailbox '%{sensitive,mask.mailbox}s'
    %s%.*hhx%s     Server support: move: %{BOOL}d,     Gmail labels: %{BOOL}d',     cond-store: %{BOOL}d,     message-seq-numbers: %{BOOL}d
_TtCV13IMAP2Behavior5State6Logger
%s%.*hhx%s Received environment update.
UpdateLocalFlags
ExpungeServerMessages
MoveAndCopyMessages
UploadFlagChanges
DetectFlagChangesInRecent
DetectFlagChanges
DetectRemovedMessagesInRecent
DetectRemovedMessages
FindPendingAttachmentDownload
FindPendingTextDownload
FindMissingMessages
userInitiatedDownload
mailboxesToSelect
mostRecentPathAttributes
runningSyncRequests
mailboxesNeedToBeUpdated
downloadRequests
userVisibleMailboxes
authenticatedTask
highestModificationSequence
messagesWithTemporaryUploadFailure
pendingServerResponses
pendingPersistenceUpdates
userInitiatedDownloadUIDs
mailboxOfInterest
selectedConnection
userInitiatedDownloads
supportsGmailLabels
supportsCondStore
bogusSequenceNumberBehavior
completedCommandCount
completedActionCount
needsToUploadMessages
needsToUploadFlagChanges
needsToMoveAndCopyMessages
messagesPendingTextDownload
messagesPendingAttachmentDownload
messagesWithDownloadFailures
highestModificationSequenceValue
%s%.*hhx%s Updating running download requests.
%s%.*hhx%s No new and no running tasks for '%{sensitive,mask.mailbox}s'. Marking as done.
%s%.*hhx%s Re-starting blocked non-mailbox tasks.
%s%.*hhx%s Pruned %ld completed tasks.
%s%.*hhx%s Failed to de-select mailbox '%{sensitive,mask.mailbox}s'
%s%.*hhx%s De-selected '%{sensitive,mask.mailbox}s' on %{public}s
BehaviorAction
ID: %u name: %@ %u %u
BehaviorCommand
tag: %@ name: %@ %u %u %u
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Marking task as complete.
%s%.*hhx%s%{public}s%s Marking task as complete.
%s%.*hhx%s%{public}s%s Sent '%{public}s' command as %s
%s%.*hhx%s [%{sensitive,mask.mailbox}s] Marking task '%{public}s' as failed.
%s%.*hhx%s Marking task '%{public}s' as failed.
%s%.*hhx%s [%{sensitive,mask.mailbox}s] Marking task '%{public}s' as failed because we de-selected its mailbox.
%s%.*hhx%s%{public}s%s Completed '%{public}s' (%{public}s, #%u)
%s%.*hhx%s%{public}s%s Completed action '%{public}s' (#%u)
BehaviorTask
A ID: |%{sensitive}@|
M ID: |%{sensitive}@| mailbox: |%{sensitive}@|
%s%.*hhx%s Pruning task %{public}s
%s%.*hhx%s Pruned %ld mailbox task(s) without mailbox affinity.
%s%.*hhx%s%{public}s%s Pruning. No mailbox affinity, not targeting mailboxes-to-be-selected.
%s%.*hhx%s Connection %{public}s failed while %ld command(s) were running. No mailbox selected.
%s%.*hhx%s Connection %{public}s failed while %ld command(s) were running and '%{sensitive,mask.mailbox}s' was selected.
Create Mailboxes
%s%.*hhx%s%{public}s%s Failed to create '%{sensitive,mask.mailbox}s'.
%s%.*hhx%s%{public}s%s Did create '%{sensitive,mask.mailbox}s'.
%s%.*hhx%s%{public}s%s Received %s for '%{sensitive,mask.mailbox}s'.
%s%.*hhx%s%{public}s%s Created task for %ld mailboxes, first: '%{sensitive,mask.mailbox}s'.
%s%.*hhx%s%{public}s%s Created task for %ld mailboxes.
%s%.*hhx%s%{public}s%s Created task for '%{sensitive,mask.mailbox}s'
%s%.*hhx%s%{public}s%s Failed to delete '%{sensitive,mask.mailbox}s'.
%s%.*hhx%s%{public}s%s Did delete '%{sensitive,mask.mailbox}s'.
%s%.*hhx%s%{public}s%s Skipped deleting '%{sensitive,mask.mailbox}s' because it's in use.
Delete Mailboxes
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Setting mailbox HIGHESTMODSEQ to %llu.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removed %ld changes without UID, still %ld remaining.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removed all changes without UID.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Fetch completed. Got %ld messages for UID range %s.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Ignoring sequence number.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Lowest sequence number is %u, expected 1. Numbers are non-contiguous.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Sequence numbers are non-contiguous.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Lowest sequence number is %u, expected 1.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] No lowest sequence number, expected 1.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Received duplicate sequence number %u with UID %u.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Received duplicate UID %u with sequence number %u.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removing messages in range %s, keeping %ld UIDs.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Mailbox is empty. DetectChangesToMessages will not do any updates.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task. Fetching highest-mod-seq: %{BOOL}d, no existing
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task. Fetching highest-mod-seq: %{BOOL}d, existing: %s
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removed all %ld EXPUNGE messages.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removed %ld EXPUNGE messages, still %ld remaining.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Fetch completed. Got %ld messages in UID range of interest %{public}s.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removing  %ld messages in range of interest %{public}s, keeping %ld UIDs.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removing messages %{public}s in range of interest %{public}s, keeping %ld UIDs.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Not removing any messages in range of interest %{public}s.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task. UID range of interest: %{public}s
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Did not remove any pending expunge.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Mailbox is empty. Did not remove any messages.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removed %ld messages.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removed UIDs %{public}s.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removed no messages.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removed %ld pending expunge, %ld left.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Search completed without any UIDs
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Search completed. Got %ld UIDs in range: %{public}s.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removing %ld messages in %{public}s, keeping %ld number of UIDs.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removing %ld messages in %{public}s, keeping UIDs %{public}s.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task. last-seed-UID: %u
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removed %ld messages in %{public}s.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removed UIDs %{public}s in %{public}s.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removed no messages in %{public}s.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Search completed. Found %ld UIDs locally, %ld on server in range %{public}s.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] '%s'
attachment
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task for %{public}s %s '%{public}s' -- full message download for %{public}s
text
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task for %{public}s %s '%{public}s'
Downloading message sections data (
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Completed fetching Body Structure for messages %s
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Requested to download %ld sections for message %u, but we don
t have a body structure for this message.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Adding %ld sections for message %u. Downloading message headers: %{BOOL}d
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Requested to download %ld sections for message %u.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Requested to download %ld sections for message %u -- but sections for this message have already been added.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] UID %u: Adding multi-part section '%{public}s'
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] UID %u: Adding section '%{public}s'
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Received body structure for message %u.
%s%.*hhx%s%{public}s%s No header data in response for '%{public}s'
Unable to append body section data for UID %u. Marking as failed. (%@)
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] UID %u: Received body section data for section '%{public}s'
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] UID %u: Received BodySection with empty data for section '%{public}s'
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] UID %u: All data for section '%{public}s' has been received.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] UID %u: Received %ld bytes for section '%{public}s'
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] UID %u: Received %ld bytes (offset %u) for section '%{public}s'
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Completed download of %ld sections for message %u.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Completed download for message %u, but we don
t have a body structure for this message.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] UID %u: Forwarding %ld bytes for section '%{public}s' to the persistence.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Requesting sections to download for message %u.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Fetching headers for message %u
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Expunge failed.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Expunge completed.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] No more missing messages.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Still missing %ld messages (%ld completed). Will run again.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] No new messages.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] %ld new message(s).
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task with last-seen-UID %u (persisted) -> %u (new)
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task with missing %ld UIDs, last-seen-UID %u (persisted) -> %u (new)
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task with missing %{public}s, last-seen-UID %u (persisted) -> %u (new)
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Limiting new UIDs to %ld UIDs: %{public}s.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Found %ld UIDs on server, %ld UIDs locally -> found %ld new UIDs missing locally.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Found %ld UIDs on server, %ld UIDs locally -> found UIDs %{public}s to be missing locally.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Found %ld UIDs on server, %ld UIDs locally -> found no UIDs to be missing locally.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] No missing message; last seen UID: nil
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] No missing message; last seen UID: %u
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Total missing message count: %ld; %ld done; last seen UID: nil
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Total missing message count: %ld; %ld done; last seen UID: %u
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task with last-seen-UID %u, ranges %s, UID limit: %ld
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Persistence returned no messages to download.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Persistence returned UIDs %{public}s to download.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Persistence returned %ld (min:  %u, max: %u) messages to download.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Adding %{public}s (%ld out of %ld) to download.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Adding %ld messages (out of %ld) to download.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task. Excluding %ld, %{public}s
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task. Excluding %{public}s, %{public}s
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task. %ld identifier(s).
%s%.*hhx%s%{public}s%s Created task.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Persistence has more messages to move/copy. Will mark as needing to re-run.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Task is completing, but not done.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Marking mailbox as needing to run upload-messages.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Marking mailbox '%{sensitive,mask.mailbox}s' as needing to run find-missing-messages.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Marking no more messages needing move or copy.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Server failed to %{public}s messages %{public}s: %s
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Server completed %{public}s of messages %{public}s without destination UIDs
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Server completed %{public}s of messages %{public}s with destination UIDs %s and UIDValidity 0x%x
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Persistence returned %ld moves / copies.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Copying messages %{public}s.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Marking source messages %{public}s as deleted.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task. Server supports move: %{BOOL}d
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Ignoring message data.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Ignoring UID %u outside of range-of-interest %{public}s.
%s%.*hhx%s%{public}s%s Created task for %s.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Number of changes to-be-sent to the persistence: %ld.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task. highest-mod-seq local: %llu, changes without UID: %ld, server: %llu
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task. Local UID validity: 0x%x
%s%.*hhx%s%{public}s%s Failed to rename '%{sensitive,mask.mailbox}s' to '%{sensitive,mask.mailbox}s'.
%s%.*hhx%s%{public}s%s Did rename '%{sensitive,mask.mailbox}s' to '%{sensitive,mask.mailbox}s'.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Updating local HIGHESTMODSEQ to %llu.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Clearing local HIGHESTMODSEQ.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] No change to local HIGHESTMODSEQ.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Sent %ld changes to the persistence.
%s%.*hhx%s%{public}s%s Got %ld flag/label changes.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Persistence has more flag changes to upload. Will mark as needing to re-run.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Marking no more flag changes pending upload.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Received local flag changes for %ld messages.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Grouped the local flag changes into %ld message sets. Expecting %ld commands.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] No flag changes for messages %s
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removing all messages pending upload.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Persistence has more messages to upload. Will mark as needing to re-run.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] APPEND failed.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] APPEND failed with 
No, try create
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] APPEND succeeded without UIDValidity.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] APPEND succeeded with UID %u.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Unexpectedly received multiple .uploadMessages
ConnectionEvent.betterPathDidChange
ConnectionEvent.pathAttributesDidChange
ConnectionEvent.stateDidChange
ConnectionEvent.empty
ConnectionEvent.mailboxSelected
no mailbox
mailbox %@
ConnectionEvent.commandDidComplete
tag: %@ response: %hhu
ConnectionEvent.untagged
response: %hhu
ConnectionEvent.connectionDidFail
error: %hhu
ConnectionEvent.connectionDidAuthenticate
PersistenceEvent.update.moveOrCopyMessages
mailbox: '%{sensitive}@' message count: %lld {%u %u}, isLast: %d
PersistenceEvent.update.uploadMessagesWithChangedFlagAfterCopy
mailbox: '%{sensitive}@' message count: %lld
PersistenceEvent.update.uploadChangedFlags
PersistenceEvent.update.uploadMessages
mailbox: '%{sensitive}@' count: %lld, isLast: %d
PersistenceEvent.update.downloadSectionData
kind: %hhu UID: %u sections: '%{public}@' mailbox: '%{sensitive}@' messageHeaders: %d
PersistenceEvent.update.downloadSectionsInMessages
kind: %hhu messageCount: %d mailbox: '%{sensitive}@'
PersistenceEvent.update.didFindMessageUIDs
mailbox: '%{sensitive}@' UID count: %u range UID cound: %u
PersistenceEvent.update.setUIDsForDownloadRequests
mailbox: '%{sensitive}@' UID count: %u
PersistenceEvent.update.setDownloadRequests
count: %u 
PersistenceEvent.update.setUserVisibleMailboxes
PersistenceEvent.update.sync
PersistenceEvent.update.setLocalMailboxes
PersistenceEvent.update.environmentDidChange
power: %@, foreground? %u, locked? %u, thermals: %@
PersistenceEvent.actionDidComplete
ID: %u
PersistenceEvent.update.messageDataForUpload
mailbox: '%{sensitive}@' id: %.*P flags: %{public}@ date: %g data %lld
%s%.*hhx%s%{public}s%s Received 'BAD'
%s%.*hhx%s%{public}s%s Received 'BAD: %s'
%s%.*hhx%s%{public}s%s Received 'NO'
%s%.*hhx%s%{public}s%s Received 'NO: %s'
%s%.*hhx%s%{public}s%s Received bytes in range %s -- some of which have previously been received: %s
MESSAGES
UIDNEXT
UIDVALIDITY
UNSEEN
HIGHESTMODSEQ
RFC822
infinity
inet_pton(addressFamily:addressDescription:address:)
inet_ntop(addressFamily:addressBytes:addressDescription:addressDescriptionLength:)
NIOIMAPCore2/Body.swift
Must contain at least one number
_ByteBufferSlice { 
ByteBuffer { readerIndex: 
, readableBytes: 
, storageCapacity: 
readable bytes (max 1k): 
_TtCV12NIOIMAPCore210ByteBuffer8_Storage
capacity
bytes
allocator
NIOIMAPCore2/ByteBuffer-views.swift
offset element 
 (bufferCapacity: 
: Broken strerror, unknown error: 
_TtC12NIOIMAPCore219NIONetworkInterface
name
address
netmask
broadcastAddress
pointToPointDestinationAddress
multicastSupported
interfaceIndex
_TtCV12NIOIMAPCore216NIONetworkDeviceP33_0376AFE35F6C75FF3DBC73C1B95A56AC7Backing
NIOIMAPCore2/SocketAddresses.swift
INSIDE_LITERAL: 
 bytes required)
 is out of range
QUOTED-PRINTABLE
"MESSAGE" "RFC822"
CREATE-SPECIAL-USE
ANNOTATE-EXPERIMENT-1
The path separator must be an ascii value
 cannot contain the separator 
Need a path separator to make a sub mailbox
VANISHED (EARLIER) 
selected-delayed
XAPPLEPUSHSERVICE 
XAPPLEPUSHSERVICE
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/IMAPv4/Modules/Sources/NIOIMAPCore/ParserLibrary.swift
Unknown XAPPLEPUSHSERVICE response type: 
Invalid 
aps-version
Expected 
aps-topic
, not 
COMPRESSIONACTIVE
AUTHORIZATIONFAILED
AUTHENTICATIONFAILED
URLMECH INTERNAL
METADATA NOPRIVATE
METADATA TOOMANY
METADATA MAXSIZE 
METADATA LONGENTRIES 
.HEADER.FIELDS.NOT (
.HEADER.FIELDS (
HEADER.FIELDS.NOT 
lower upper 
NIOIMAPCore2/RangeSetStorage.swift
Can't access elements of empty storage
_TtC12NIOIMAPCore221ChannelHandlerContext
responses
integer too large
NIOIMAPCore2/GrammarParser+Commands.swift
This should never happen
 which was not a status attribute
Invalid internal date.
Building TimeZone from 
No month match for 
Invalid date components 
Expected 1 or 2 bytes, got 
Mod-seq value is too large.
Can't make unknown message identfiier from 
Expected quoted char found 
Didn't find parser for 
Invalid response code: 
PERMANENTFLAGS (
Sequence set is empty.
Sequence number out of range.
tag missing for SearchCorrelator
Not all components present for SearchCorrelator
Invalid UID validity.
UID set is empty.
NIOIMAPCore2/Pair.swift
' is out of range
Expect bchar, got 
Expect achar, got 
Expected 2 hex digits, got 
Expected sub-delims-sh char, got 
Expected unreserved char, got 
Found invalid character in 
Invalid escape in quoted string '
Found NUL byte in literal
Invalid character
Couldn't read string from buffer
 is not a valid fchar
Partial range is invalid: <
Range is invalid: <
Partial range count is invalid.
Partial range start is invalid.
Failed to construct esearch source options
Failed to unwrap ESearchScopeOptions which should be impossible.
Failed to unwrap mailboxes which should be impossible
catenate extension
NIOIMAPCore2/ResponseParser.swift
Unexpected state 
none of the options match
whilst looking for 
, found no bytes
Expected space, found 
Found unexpected 
 is not a number
Need one of encoded user or iauth
Need at least one UID
case insensitively looking for 
case sensitively looking for 
Cannot use MIME with an empty section part
first second 
NIOIMAPCore2/_HashTable+BucketIterator.swift
Hash table has no unoccupied buckets
, reservedScale: 
_HashTable.Header
_HashTable.UnsafeHandle
_HashTable.Storage
  load factor: 
BucketIterator(scale: 
_TtCV12NIOIMAPCore210_HashTable7Storage
key value 
Unkeyed container reached end before value in key-value pair
Duplicate key at offset 
OrderedDictionary<
NIOIMAPCore2/OrderedDictionary+Deprecations.swift
Decoded elements aren't unique (first duplicate at offset 
offset element associatedWith 
_TtCV12IMAP2Helpers10AtomicFlag7Storage
atomic_flag_clear
atomic_flag_test_and_set
_TtC12IMAP2Helpers12StateCapture
handle
^v16@?0^v8
os_state_add_handler
Unable to encode data for state capture of %{public}s
os_state_remove_handler
dispatch_workloop_create
_TtC12IMAP2Tracing20EngineTracingIDOwner
tracingID
com.apple.email.IMAP.tracing.activeIDIsolation
com.apple.email.IMAP
UID SEARCH (extended)
EEE',' d MMM y HH':'mm':'ss ZZZ
EEE',' d MMM y HH':'mm':'ss zzz
EEE MMM d HH':'mm':'ss zzz y
d MMM y HH':'mm':'ss ZZZ
d MMM y HH':'mm':'ss zzz
EEE',' d MMM y HH':'mm ZZZ
EEE',' d MMM y HH':'mm zzz
d MMM y HH':'mm ZZZ
d MMM y HH':'mm zzz
'"'dd'-'MMM'-'y HH':'mm':'ss ZZZ'"'
EEE MMM d HH':'mm':'ss y
y'-'MM'-'d HH':'mm':'ss ZZZ
EEE',' d MMM y HH':'mm':'ss
d MMM y HH':'mm':'ss
MM'/'d HH':'mm a
MM'/'d'/'y HH':'mm a
MMM d',' y  HH':'mm':'ss a vvvv
EEE',' MMM d y HH':'mm':'ss ZZZ
EEE',' MMM d',' y HH':'mm zzz
EEE MMM d',' y HH':'mm':'ss vvvv
MMMM d',' y HH':'mm':'ss zzz
EEE',' MMM d',' y 'at' HH':'mm a
 %a, %d %b %Y %H:%M:%S %z 
 %d %b %Y %H:%M:%S %z 
 %a, %d %b %Y %H:%M %z 
 %d %b %Y %H:%M %z 
 "%d-%b-%Y %H:%M:%S %z" 
 %a %b %d %H:%M:%S %Y 
 %Y-%m-%d %H:%M:%S %z 
 %a, %d %b %Y %H:%M:%S 
 %d %b %Y %H:%M:%S 
 %m/%d %H:%M %p 
 %m/%d/%Y %H:%M %p 
 %a, %b %d %Y %H:%M:%S %z 
 %a, %b %d, %Y at %H:%M %p 
noSelect
marked
unmarked
nonExistent
noInferiors
subscribed
remote
hasChildren
hasNoChildren
archive
drafts
flagged
junk
sent
trash
<unable to decode>
Binary, Literal-
Binary, Literal+
IMAP2Protocol/InternetMessageDateParsing.swift
%a, %d %b %Y %H:%M:%S %z
%+05d
IMAP.protocol.dateFormatter
IMAP2Protocol/NIOEncoder.swift
 aps-account-id 
 aps-device-token 
Received invalid data frame from server: %{sensitive}.*P
IMAP2Protocol/ServerResponseTranscoder.swift
authenticationChallenge
fetch(streamingEnd)
fetch(streamingBytes)
fetch(streamingBegin)
fetch(simpleAttribute)
untagged(applePushService)
untagged(metadata)
untagged(quotaRoot)
untagged(enableData)
untagged(capabilityData)
untagged(messageData)
untagged(mailboxData)
untagged(conditionalState)
downloadRequestsDidComplete
getUIDsForDownloadRequests
activityDidChange
failedToCreateMailboxOnServer
connectionStatusDidChange
didMoveOrCopyMessages
findMovedOrCopiedMessages
findMessagesWithFlagChangeAppliedAfterCopy
findMessagesWithChangedFlags
failedToUploadMessage
didUploadMessage
sendMessageDataForUpload
findMessagesToBeUploaded
didDownloadAllSections
appendMessageSectionData
messageHeadersDownloaded
chooseMessageDataToDownload
findNewestMessagesMissingSections
updateMailboxHighestModificationSequenceValue
updateMailboxLastSeenUID
removeUnknownMessages
createNewMessages
removeAllMessagesAndUpdateMetadata
didDeselectMailboxes
updateRemoteMailboxes
syncRequestsDidComplete
fetching messages done
fetching messages (
fetching messages (not started)
authenticationFailed
serverUnreachable
, thermal state: 
MessageFlagsWithModifications(flags: 
gray
purple
blue
green
yellow
orange
clear
notJunk
unknown
FlagsUpdate(unread: 
noop
idle
B24@0:8@16
[%.*hhx-%{public}s] Caught error processing Handshake query
[%.*hhx-%{public}s] Authentication plugin failed generating response
[%.*hhx-%{public}s] Authenticated with '%{public}s'.
[%.*hhx-%{public}s] Using authentication mechanism '%{public}s'.
IMAP2Connection/AuthenticationTaskState.swift
[%.*hhx-%{public}s] Only %ld of %ld credential(s) are allowed given the connection security.
[%.*hhx-%{public}s] No credentials are allowed given the connection security.
[%.*hhx-%{public}s] XOAUTH2 error (%{iec-bytes}ld)
[%.*hhx-%{public}s] Unable to decode XOAUTH2 error response.
[%.*hhx-%{public}s] XOAUTH2 error: status '%{public}s',  schemes '%{public}s',  scope '%{private}s'
[%.*hhx-%{public}s] XOAUTH2 error: %{public}.*P
[%.*hhx-%{public}s] Cancel.
[%.*hhx-%{public}s] Setting new delegate (better path available).
_TtC15IMAP2Connection17CommandConnection
connection
delegate
commandCounter
runningCommands
engineID
state
enqueuedEvents
idleKind
idleTimer
idleRefreshInterval
makeCredentials
getPushInformation
finishPushRegistration
pathAttributes
[%.*hhx-%{public}s] withEnqueuedSend() called while we already have enqueued events.
[%.*hhx-%{public}s] Trying to send nil enqueued events.
[%.*hhx-%{public}s] Connection did start TLS.
[%.*hhx-%{public}s] Received handshake query from server, but not in a state where we expect it: %@
[%.*hhx-%{public}s] Received handshake.
[%.*hhx-%{public}s] Command with unknown tag %s completed.
[%.*hhx-%{public}s] Command %s completed.
[%.*hhx-%{public}s] %s IDLE completed.
[%.*hhx-%{public}s] %s NOOP completed.
[%.*hhx-%{public}s] Connection did fail (%ld running command(s)): %@
[%.*hhx-%{public}s] Connection did fail: %s
[%.*hhx-%{public}s] No idle kind set.
[%.*hhx-%{public}s] %s IDLE is %ld seconds old (< %ld). Not refreshing.
[%.*hhx-%{public}s] Not sending IDLE. No mailbox selected.
[%.*hhx-%{public}s] Unable to enqueue NOOP.
[%.*hhx-%{public}s] Sending NOOP as %s
[%.*hhx-%{public}s] Unable to enqueue IDLE.
[%.*hhx-%{public}s] Sending IDLE as %s
[%.*hhx-%{public}s] Trying to enqueue event outside withEnqueuedSend.
[%.*hhx-%{public}s] Trying to send handshake reply, but no barrier command is running.
[%.*hhx-%{public}s] Finishing push registration.
[%.*hhx-%{public}s] Requesting credentials.
[%.*hhx-%{public}s] Requesting push information.
[%.*hhx-%{public}s] Received '%s' from network.
[%.*hhx-%{public}s] Received BYE (without resp-text).
[%.*hhx-%{public}s] Received BYE %s
[%.*hhx-%{public}s] Mailbox selection changed.
[%.*hhx-%{public}s] Connection did authenticate.
Connection.imapStateUpdate
_TtC15IMAP2Connection10Connection
logger
receiveTranscoder
delegateQueue
networkQueue
pendingHandshakeReplyCount
Connection.networkStateUpdate
[%.*hhx-%{public}s] Sent 'C: %{public}s'
[%.*hhx-%{public}s] Failed to send data: %@
[%.*hhx-%{public}s] Starting
[%.*hhx-%{public}s] Better path available: %{BOOL}d
[%.*hhx-%{public}s] Is viable: %{BOOL}d
[%.*hhx-%{public}s] Path did change. Constrained: %{BOOL}d, interfaces: %{public}s, IPv4: %{BOOL}d, IPv6: %{BOOL}d
[%.*hhx-%{public}s] state: <unknown>
[%.*hhx-%{public}s] state: cancelled
[%.*hhx-%{public}s] state: failed, %@
[%.*hhx-%{public}s] state: ready
[%.*hhx-%{public}s] state: preparing
[%.*hhx-%{public}s] state: waiting, %@
[%.*hhx-%{public}s] state: setup
[%.*hhx-%{public}s] Failed to transcode response: %@ -- %{public}s
authenticated(selected))
authenticated(selecting))
authenticated(none)
unauthenticated(done)
unauthenticated(waitingForTLS)
unauthenticated(startingTLS)
unauthenticated(failed)
unauthenticated(registeringForPush)
unauthenticated(requestingPushRegistrationInfo)
unauthenticated(enablingCompression)
unauthenticated(requestingCompression)
unauthenticated(identifyingServer)
unauthenticated(gettingPostAuthCapabilities)
unauthenticated(authenticating)
unauthenticated(requestingCredentials)
unauthenticated(gettingPreAuthCapabilities)
unauthenticated(checkingIfPreAuthIsAllowed)
unauthenticated(connecting)
connecting(cancelled)
connecting(failed)
connecting(ready)
connecting(preparing)
connecting(waiting)
connecting(setup)
[%.*hhx-%{public}s] Selecting mailbox '%{sensitive,mask.mailbox}s'.
[%.*hhx-%{public}s] Failed to select mailbox: %@
[%.*hhx-%{public}s] Received HandshakeQuery, but not in unauthenticated state.
[%.*hhx-%{public}s] All authentication mechanism failed.
[%.*hhx-%{public}s] Authentication failed.
[%.*hhx-%{public}s] Authentication completed.
[%.*hhx-%{public}s] Authentication completed with server %{public}s
[%.*hhx-%{public}s] Authentication is sending %{public}s.
[%.*hhx-%{public}s] Received did-start-TLS, but not in unauthenticated state.
_TtCO15IMAP2Connection7Deflate10Compressor
stream
currentKind
_TtCO15IMAP2Connection7Deflate12Decompressor
_TtCO15IMAP2Connection7DeflateP33_85B4B7D50F9E6C0051A8CAEBC1010C166Stream
kind
IMAP2Connection/Deflate.swift
sysctl(3) failed: 
Better path available did change
Path attributes did change
State did change
Did unselect mailbox
Connection did fail (
Connection did authenticated {
_TtC15IMAP2Connection6Framer
inputBuffer
outputBuffer
encodingOptions
compression
[%.*hhx-%{public}s] Error while handling output: %@
[%.*hhx-%{public}s] Unable to append command to output buffer. Invalid state. %@
[%.*hhx-%{public}s] Protocol error while sending. %@
[%.*hhx-%{public}s] Output buffer still holds %{iec-bytes}ld. Waiting for server response.
Connection.didSendData
%u - %u
[%.*hhx-%{public}s] Flushing %{iec-bytes}ld from output buffer to network (tags %s - %s).
[%.*hhx-%{public}s] Flushing %{iec-bytes}ld from output buffer to network (tag %s).
[%.*hhx-%{public}s] Flushing %{iec-bytes}ld (of total %{iec-bytes}ld) from output buffer to network (tags %s - %s).
[%.*hhx-%{public}s] Flushing %{iec-bytes}ld (of total %{iec-bytes}ld) from output buffer to network (tag %s).
[%.*hhx-%{public}s] Adding TLS to the protocol stack.
[%.*hhx-%{public}s] Enabling RFC 4978 compression.
imapEncodingOptions
imapEnableCompression
Message has no outbound content.
imapOutboundContent
[%.*hhx-%{public}s]: Failed to parse: %@. Buffer: %{sensitive}.*P
[%.*hhx-%{public}s]: Framing error: %@
[%.*hhx-%{public}s]: Framing error. Buffer: %{sensitive}.*P
[%.*hhx-%{public}s] parseInput() returned %{bool}d
[%.*hhx-%{public}s] failed to inflate received data.
[%.*hhx-%{public}s] Appending %{iec-bytes}ld to receive buffer. Now has %{iec-bytes}ld.
Connection.didReceiveData
[%.*hhx-%{public}s] IMAP framer loaded.
[%.*hhx-%{public}s] New IMAP framer
Connection.didEnqueue
Connection.didFailToSendData
Received invalid message.
MarketingProductName
kern.osproductversion
CFBundleShortVersionString
_TtCC15IMAP2Connection10Connection6Logger
[%.*hhx-%{public}s] Received command completion for unknown command '%{public}s'
registeringForPush
requestingPushRegistrationInfo
identifyingServer
enablingCompression
requestingCompression
gettingPostAuthCapabilities
requestingCredentials
gettingPreAuthCapabilities
checkingIfPreAuthIsAllowed
selectingMailbox
v8@?0
_TtC15IMAP2Connection5Timer
workItem
underlying
counter
[%.*hhx-%{public}s] Unexpected unableToGetPushResponse
[%.*hhx-%{public}s] Unable to get push response
[%.*hhx-%{public}s] Unexpected gotPushResponse
[%.*hhx-%{public}s] Unexpected setPushInformation
[%.*hhx-%{public}s] Unexpected identifiedServer
[%.*hhx-%{public}s] Unexpected enabledCompress
[%.*hhx-%{public}s] Unexpected serverAcceptedCompress
[%.*hhx-%{public}s] Server accepted compression.
[%.*hhx-%{public}s] Unexpected startTLS
[%.*hhx-%{public}s] Received unexpected credentials.
[%.*hhx-%{public}s] Credentials don't allow PREAUTH.
[%.*hhx-%{public}s] Authenticated with PREAUTH.
[%.*hhx-%{public}s] Received capabilities from server
[%.*hhx-%{public}s] Authentication failed with '%{public}s'.
[%.*hhx-%{public}s] Ignoring unexpected %s.
[%.*hhx-%{public}s] Server sent BYE.
[%.*hhx-%{public}s] Got post-auth capabilities: %s.
[%.*hhx-%{public}s] Got pre-auth capabilities: %s.
[%.*hhx-%{public}s] Untagged OK from server.
[%.*hhx-%{public}s] Received OK greeting from server.
[%.*hhx-%{public}s] Received OK greeting with capabilities from server: %s.
[%.*hhx-%{public}s] Received unexpected PREAUTH greeting from server.
[%.*hhx-%{public}s] Received PREAUTH greeting from server. Requesting credentials.
[%.*hhx-%{public}s] Not using TLS.
[%.*hhx-%{public}s] Connection is insecure, but server does not support STARTTLS.
[%.*hhx-%{public}s] Server supports STARTTLS and connection is insecure. Attempting STARTTLS.
[%.*hhx-%{public}s] Using TLS protocol %hu, cipher suite %hu
[%.*hhx-%{public}s] No connection available to send command.
[%.*hhx-%{public}s] Checking for new actions.
[%.*hhx-%{public}s] Received did-start-TLS from network, but we
re in the wrong state.
[%.*hhx-%{public}s] We ran STARTTLS, but the connection is not using TLS.
[%.*hhx-%{public}s] STARTTLS completed: %hu / %hu
[%.*hhx-%{public}s] We ran STARTTLS, but the connection is not secure: %hu.
_TtC22IMAP2ConnectionControl19BetterPathEvaluator
queue
makeUnderlyingConnection
coalesceDelay
[%.*hhx] Trying to promote connection generation %ld, but there
s no connection.
[%.*hhx] Promoting connection generation %ld.
[%.*hhx] Cancelling connection generation %ld
[%.*hhx] Cancelling connection generation %ld: %{public}s
[%.*hhx] Connection generation %ld state did change.
[%.*hhx] Did cancel connection %{public}s, generation %ld
[%.*hhx] Did create connection %{public}s (%llu), generation %ld
[%.*hhx] Did cancel timer.
[%.*hhx] Did create timer.
com.apple.email.imap.persistence
_TtC22IMAP2ConnectionControl6Engine
workloop
persistenceEventQueue
sendAction
logName
tracingIDOwner
betterPathEvaluator
didStart
isProcessingUpdates
pendingUpdates
externalState
lastConnectionStatus
stateCapture
%s%.*hhx%s Processing %ld update(s)
%s%.*hhx%s Processing %ld update(s) from network and persistence
%s%.*hhx%s Processing %ld update(s) from persistence
%s%.*hhx%s Processing %ld update(s) from network
com.apple.mail.IMAP.engine.
_TtC22IMAP2ConnectionControlP33_02737B06E3BD0A3D42A98FBBAE158A079EngineBox
_TtC22IMAP2ConnectionControl14ConnectionPool
configuration
connections
engine
nextConnectionID
backoff
backoffTimer
backoffLoggingRateLimit
lastError
lastStatus
[%.*hhx] Received authenticated connection with better path. Cancelling all (%ld) existing connection and switching to the new connection %{public}s (%llu).
CommandConnection
[%.*hhx] Connection %{public}s is cancelled.
[%.*hhx] Connection %{public}s failed.
[%.*hhx] Connection %{public}s: authentication failed.
[%.*hhx] Connection %{public}s is authenticated.
[%.*hhx] Connection %{public}s is unauthenticated.
[%.*hhx] Connection %{public}s is connecting.
[%.*hhx] Cancelling connection %{public}s.
[%.*hhx] Cancelling %ld (of %ld) connections since we
re above the connection limits (max idle: %ld, max: %ld).
[%.*hhx] Not cancelling any connection (count: %ld).
[%.*hhx] %ld connections are actively connecting.
[%.*hhx] Failed to send command '%{public}s' on connection %{public}s
[%.*hhx] Sent command '%{public}s %{public}s' on connection %{public}s
[%.*hhx] Pool has %ld connections.
[%.*hhx] Created connection %{public}s (%llu)
[%.*hhx] Backed off (failure count %ld). Not creating a new connection.
[%.*hhx] Attempt to send on connection %{public}s -- but it does not exist.
[%.*hhx] Mailbox '%{sensitive,mask.mailbox}s' is selected (or in progress) on connection %{public}s.
[%.*hhx] Will select mailbox '%{sensitive,mask.mailbox}s' on connection %{public}s for new mailbox affinity.
[%.*hhx] Created mailbox affinity for '%{sensitive,mask.mailbox}s' on connection %{public}s with mailbox already selected.
[%.*hhx] nil enqueued events after enqueueing.
[%.*hhx] withEnqueuedSend() called while we already have enqueued events.
[%.*hhx] Got callback for connection %{public}s but this connection is unknown to the pool.
[%.*hhx] Closing connection %{public}s. Remaining connection count: %ld.
[%.*hhx] Cancelling backoff timer.
[%.*hhx] Setting up backoff timer for %f s (count %ld) from now.
[%.*hhx] Backoff timer expired, but we still have to wait %f seconds.
[%.*hhx] Backoff timer has expired. Re-trying.
[%.*hhx] Failed to authenticate connection %{public}s.
[%.*hhx] Network error on connection %{public}s: %{public}s
[%.*hhx] Network error on connection %{public}s: TLS %d
[%.*hhx] Network error on connection %{public}s: DNS %d
[%.*hhx] Network error on connection %{public}s: posix %{darwin.errno}d
[%.*hhx] Connection %{public}s is in invalid continuation state.
[%.*hhx] Connection %{public}s failed to parse server response.
[%.*hhx] Connection %{public}s did close.
[%.*hhx] Mailbox selection changed on %{public}s.
[%.*hhx] %{public}s: -
[%.*hhx] %{public}s: '%{sensitive,mask.mailbox}s'
[%.*hhx] %{public}s: - *
[%.*hhx] %{public}s: '%{sensitive,mask.mailbox}s' * messageCount %ld, firstUnseenMessage %u, nextUID %u, uidValidity 0x%x, isReadOnly %{bool}d
[%.*hhx] Trying to enqueue event outside withEnqueuedSend.
Encountered error while fetching credential for %@ (will %screate new credential): %{public}@
Creating new credential for account %{public}@
Credential renewal result: %ld%@%@
Renewing credential for account: %{public}@ with force:%{public}@ avoidUI:%{public}@
Web login result: %@%@%@
Connections constrained for account %{public}@ with connection %@
#ACE-DB using url %s
#ACE-DB payload is %s
#ACE-DB response is %s
#ACE-DB error retrieving configuration: %{public}@
Account database: failed to parse db file
Account database: couldn't find path to db file
#ACE-DB ignoring service because capability '%s' is not satisfied
#Warning Activity monitor cancelled on the Main Thread.  Why?
%@ (%@) failed to get auth token: %{public}@
Over quota error message: %@
[%{public}@] Clearing last update date for email aliases.
[%{public}@] No last update date for email aliases. Requesting update.
[%{public}@] Last update was %g minutes ago. Requesting update.
[%{public}@] Last update was %g minutes ago. Not requesting update.
[%{public}@] Completed update.
-[CastleIMAPAccount pushUpdateForAliasData] %d %p
%{public}s <%{public}@:%p> [%@:%u%{public}@]
%{public}s <%{public}@:%p> [%@:%u%{public}@] %{mobilemail:networkData}.*P
#Network %d for %@
#Network low data mode (constrained): %d
Making sure buffer is empty, currently has %lu bytes
deflateInit2 failed with error %d
inflateInit2 failed with error %d
<%{public}@:%p> Got SecTrustResultType %u for %@
trust manager said DENY for connection %p (error: %@)
Supressing trust prompt as user denied earlier for connection %p (error: %@).
user said DENY for connection %p (error: %@). Supressing trust prompt till maild restarts
Unsupported header criterion %@
#Warning unsupported qualifier %d in flag criterion
unsupported operator %d
Sending message with type: %{public}u, folderID: %{public}@, originalMessageID: %{public}@, originalLongID: %{public}@, useSmartTask: %{public}d
#Warning warning, %@ got ping for folder ID %{public}@, but can't find mailboxUid with that ID.
mailbox listing has changed for account %{public}@
Enqueing request pairs %@ for mailbox %@
Performing %lu mailbox requests with %{public}@, folder-id %{public}@, anchor %@, user requested %s
Mail db had no sync anchor for %{public}@, folderID %{public}@.  Will erase local messages, perform full sync.
server returned null sync key for sync of %{public}@, folderID %{public}@.  Will erase local messages, perform full sync.
setting sync key %@ for mailbox %{public}@
canceled mailbox request for %{public}@, folderID %{public}@
DAMAilAccount %p is invalidating
DAMailAccount %p is deallocating
watched folder IDs changed: %@
account %{public}@ will NOT start listening for notifications: Not in maild
account %{public}@ will NOT start listening for notifications: battery-saver mode is ON
Requesting push for folders: %@
#Warning mailboxForFolderID returned nil (folderId = %@)
#Warning Missing folder ID for mailbox: %{public}@
%@: Network became %s
%s [10463402] fixing bogus EAS inbox name for %{public}@
reslove recipients task %@ failed with code %ld
*** Missing rspauth value in server message
*** Bogus rspauth value returned from the server
*** Unexpected character '%c', aborting
*** Duplicate value for %@. Ignoring
*** Unexpected value %@ for %@. Ignoring
*** Unable to parse %@. Ignoring
*** Unable to parse %@. Aborting
*** Parse failure(unexpected character '%c'). Ignoring
*** Missing algorithm=md5-sess in server response
*** ECSASLPrivacySecurityLevel is not supported.
Got a response, but it was not for our tag.  Throwing out the results.
Got invalid value in sequence set
Bad line break index
#Warning Failed to load DataDetectorsCore.framework (%s)
#Warning NSClassFromString(@"DDURLifier") returned Nil
#Warning failed to create date formatter
#Warning failed to create time formatter
Bad arguments to %@, %@
#Warning failed to get client token
Using MFSwiftIMAPTaskManager for account %{public}@ on %{public}@
Unable to use MFSwiftIMAPTaskManager for account %{public}@ on %{public}@
Connection %{public}@ state: %d
*** Unable to determine name for %@
Checking in connection and clearing delegate: %{public}@
#Warning Unselected connection checked back in, mailbox: %@, connection: %@
#Network %@: -[%@ _releaseAllConnectionsAndCallSuper:%{BOOL}d synchronously:%{BOOL}d edgeForcedOnly:%{BOOL}d saveOfflineCache:%{BOOL}d]
#Network All connections: %@
#Network EDGE ONLY
#Network Dropping connections: %@
%{public}@ deleting messages from mailbox: %{public}@ older than %d days
#aps-push warning, can't find mailbox with name '%{public}@' (%{public}@)
#aps-push failed to generate hash for mailbox named '%{public}@'
#aps-push Setting aps-topic '%@' for account %@
#aps-push account <%@:%p> scheduling push registration connection
#aps-push account %@ IMAPv4 not forcing push registration connection
#aps-push account %@ forcing push registration connection
#aps-push account %@ will NOT force push registration connection, didRequestPushRegistration: %s, mustRegisterOnNextConnection: %s
#aps-push MCC push settings are not set to push (%d != PCStylePush) for account %@
#aps-push account %@ has no pushed mailboxes, skipping
#aps-push account %@ last registered for push %.3f seconds ago
#aps-push {mailboxes=%@, topic=%@, version=%d}
#aps-push could not create mailbox names for: %@, pushed mailboxes: %{public}@ (sep: %{public}@ prefix: %@)
#aps-push Received notification for account '%@', will %@handle push
#aps-push warning, %@ got a notification for mailbox %@, but we're not enabled for the appropriate dataclass
#aps-push warning, %@ got a notification for mailbox with hash '%@', but can't find that mailbox.
#aps-push account %@ will NOT start listening for notifications, canRegisterForAPSPush returned NO
#aps-push account %@ will NOT start listening for notifications, battery-saver mode is ON
#aps-push account %@ told to start listening for notifications
#aps-push account %@ did NOT register for push, %s register for push and PCConnectionStyle %s push
#aps-push account %@ told to stop listening for notifications
Couldn't get store from mailbox %@
Couldn't get mailbox from URL
Attempting to find a cached connection. _cachedConnections:
%{public}@
Checking out cached connection: %{public}@
No cached connection found. Creating new connection: %{public}@
sending ID command: %@
server response to ID request: %@
server does not support ID extension
#aps-push not registering for push on unauthenticated connection for account %@
#aps-push connection doesn't support XAPPLEPUSHSERVICE for account %@
#aps-push account %@ not registering for push
#aps-push failed to get device token while registering for push on account %@
#aps-push Including Sender paramenter. Argument: {%{public}@}
#aps-push account %@ registering for push: {%@}
#aps-push account %@ will send pushes for mailbox '%@'
#aps-push account %@ (version %@) ignoring invalid version in push response '%@'
#aps-push account %@ (version %@) sent unknown push response %@
#aps-push account %@ will NOT push these mailboxes {%@}
#aps-push account %@ will push all requested mailboxes
#aps-push account %@ specified bad version/topic in response: %@
#aps-push account %@ received mailbox responses but version 1 response, ignoring mailboxes
#aps-push account %@ rejected XAPPLEPUSHSERVICE request: %@
server supports deflate compression, sending COMPRESS request
server rejected our COMPRESS request: %@
*** Failed to read initial response from %@
*** Expected untagged initial response from %@
*** Invalid IMAP command %d
%{public}@ WROTE: %{public}@
%{public}@ failed to write commands
%{public}@ READ: %d untagged fetch responses
%{public}@ READ: %d untagged list responses
%{public}@ READ: %{public}@
LOGIN failed due to non-ascii username: %{public}@
LOGIN failed with error %{public}@
Idle: connection <%p> received response while idling: %@
Idle: connection <%p> starting IDLE state for delegate %@
Idle: connection <%p> failed to enter IDLE state: %@
Idle: connection <%p> delegate rejected starting IDLE state: %@
Idle: connection <%p> leaving IDLE state for delegate: %@
Idle: connection <%p> timer fired for delayed IDLE reset after %0.2fs delay: %@
Idle: connection <%p> resetting IDLE state: %@
inconsistent esearch counts detected, ignoring esearch capability
#Warning Invalid response from SEARCH command
<%{public}@> Server does not support move.
IMAPConnection: source UIDs count is different from destination UIDs (source: %@; destination: %@)
#Warning %@ claimed to support initial response data, and didn't supply an initial response
IMAP protocol error: %@
IMAP auth failure: %@
*** Unexpected response during authentication: %@
debugDescription for _connectionState: %@
Unhandled response to command %s: %@
MFIMAPConnection was lost during processing of command %s: %@.
*** Error while creating %@: %{public}@
replaying %lu operations with connection %@
replaying %@
removing failed operation from offline cache: %@
*** Error while selecting %@: %{public}@
ERROR: UNKNOWN RESULT: %@ %d
-[MFLibraryIMAPStore _dataForMessage:] bad message data
Missing either a MIME part number or Mail Drop remote URL for attachment %@
Issuing fetch for mailbox: %@
#CacheLoads requesting data for MIME part %{public}@:%{public}@
#CacheLoads found full cached data for %{public}@:%{public}@
#CacheLoads found part data in database %{public}@:%{public}@
#CacheLoads extracted part data from full body data in database %{public}@:%{public}@
#CacheLoads downloading part data from server %{public}@:%{public}@
#CacheLoads %@ downloading part data from server %{public}@:%{public}@
#CacheLoads extracted part data from full body data via download %{public}@:%{public}@
Storing data for MIME part: %{public}@ of message: %{public}@ complete: %{public}d
#CacheLoads returning cached full body data for %@
#CacheLoads returning cached body data for %{public}@
#CacheLoads returning body data from Library for %{public}@
#CacheLoads fetching body data from network (download=%d) for %{public}@
[LogMessageDeletionTimes] Deleting %lu messages took %4.5f seconds (%4.5f s/msg)
[LogMessageDeletionTimes] Searching for and deleting %lu messages in %@ took: %fs
Exception while getting all email addresses: %@
#Warning Returned unhandled email addresses %@
failed to remove path %@
Mailbox UID from account: cache miss. ('%@')
invalidateEmailAliases: no-op
updateEmailAliasesIfNeeded: no-op
#Warning %@: Cannot set library to %@. See rdar://problem/42167098.
#Warning <%@ %p>: no library!
Account: %@ willPerformActionForChokePoint: %@ - coalescePoint: %@
Clients for choke point - %@
Waiting for existing fetch to finish for choke point: %@
Result: %@ returned for chokepoint: %@
Removing choke point from current actions: %@
Account: %@ didFinishActionForChokePoint: %@ - coalescePoint: %@ - result: %@
Updating result for for choke point: %@ - result: %@
#Warning <rdar://problem/17733540> _currentChokedActions: %@
mailboxDict: %@
Finished writting to disk mailbox cache %{public}@
Removing lookaside properties for accounts with identifiers: %@
%{public}@: shouldArchiveByDefault: Get bool for account info key: %{BOOL}d
%{public}@: shouldArchiveByDefault: Account does not support archiving
Clearing mailbox UID from account cache.
Read mailbox cache from disk %{public}@
Failed to read cached info for %{public}@: %@
No URL for mailbox. Account: %@ Mailbox: %@
change in mailbox type [Inbox -> Generic]: %@
_followUpFuture calling suggestionService with Subject: %{public}@ Body: %{public}@
suggestionService warning.score:%{public}@ followUp:%{public}@ %{public}@
Unexpected flag key "%@"
access to protected data is allowed
access to protected data is not allowed
Using legacy message-id hash format
found message flags discrepancy
could not set protection class for %@
wrote wrong number of bytes to file %@!
failed to open a file for message data at path %@, (error: %d, %s)
Threading %lld: found conversation from fuzzy matching: messageID: %lld, conversationID: %lld, subject: %{public}@
Threading %lld: adding in previously tracked messages IDs with the same subject: %@
Threading: inserted message references for message with databaseID %lld: %@
Threading %lld: resolving for message (database ID: %lld), mailbox: %lld, subject: %{public}@, explicitReferences: %@
Threading %lld: adding external conversation ID to explicit references: %lld
Threading %lld: found conversation ID from explicit references: %lld
Threading %lld: Merging current conversation %lld with another conversation %lld
Threading %lld: Using current conversation %lld
Threading %lld: Using external conversation ID %lld
Threading %lld: Merging with existing conversation %lld
Threading %lld: Setting conversation ID to message ID
Threading %lld: Using newly created conversation ID %lld
Threading %lld: Resolved message's conversation ID to %lld
adding message references took %.2f (messageID: %lld)
Threading %lld: deleting merged conversations from table: %@
source mailbox is nil
couldn't load headers for %@, skipping
failed to find mailbox row for message %{public}@: mailboxURL = %@ for %{public}@
Adding message with message_id: %lld, globalMessageID: %lld, remote_id: %@, subject: %{public}@ (%lld), sender: %{public}@ (%lld), date: %{public}@, summary: %{public}@ (%lld), unsubscribeType: %{public}@
#Warning [addMessages] setting conversation id for message with library id %lld failed
error importing message %{public}@, aborting
inserting message failed, rolling back transaction
Found database ID %lld in cache for table: %{public}@, column: %{public}@
Inserted new database ID %lld in database for table: %{public}@, column: %{public}@
Found database ID %lld in database for table: %{public}@, column: %{public}@
Threading %lld: updating message's conversationID from %lld to %lld
The message didn't get updated: message.conversationID: %lld, resolved conversationID: %lld
#Warning [updateThreadingInfoForMessage] updating conversation id for message with library id %lld failed
#SQLite #Performance %.3f seconds to load first batch of %lu messages
#SQLite #Performance loaded %d messages in %.3f seconds
Could not execute sqlite statement: %@
criterion %@ couldn't be turned into a query, <db:%p, protected %@>
criterion %ld couldn't be turned into a query, <db:%p, protected %@>
#Warning Error setting the protection class on "%@": %@
could not update sequence identifier for mailbox %@
couldn't load message with libraryID %lld because protected data is unavailable
Threading %lld: conversation IDs of messages in the same thread: %@
Error %d performing query: %s
#SQLite #Performance %0.4f seconds to perform query %@
Could not get url for mailboxID %lld
Compacted %lu messages (%f seconds)
Update largest_deleted_rowid for %{public}@ to %lld
Deleted %lld bytes of attachments for message %{public}@
Unable to read attachment at URL %@
Data for message %{public}@ is being processed multiple times
Summary updated for %lld
Could not get mailbox for message %{public}@ (store: %@)
Could not get mailbox for message %p (store: %p)
Skipping summary update for non-existent message with row ID: %lld; summary: %@
Updating summary for message with row ID: %lld; summary: %@
Fetching partName: %@ for message: %@
Result row `%@:%@` for query: %@
Protected Data Not Available while fetching partName %@ for message %@
Loaded Meeting data %@ for message : %@
Loaded Exchange Calendar externalID: %@ for message: %@
Loaded Exchange Calendar meeting data %@ for message : %@
#CacheLoads body data from file of length %lu for message %{public}@
#CacheLoads data from file of length %lu for message %{public}@ part %{public}@
#CacheLoads data from file at path %@ had error: %{public}@
Failed to convert the predicate to SQL: %{private}@
 Exception: %{public}@. See <rdar://problem/48813824>.
%{public}@: Unable to form sql query, protected data available: %{public}@
Posting %@
cleanupProtectedTables took %.4f seconds
skipping cleaning up protected tables because protected data is not available
STATS %.2fs j:%lu m:%lu pm:%lu md:%lu pmd:%lu mdel:%lu mddel:%lu mbox:%lu im:%lu mti:%lu mi:%lu ia:%lu ati:%lu ai:%lu
STATS %.2fs j:%lu m:%lu pm:* md:%lu pmd:* mdel:%lu mddel:%lu mbox:%lu
Key bag locked
Key bag unlocked
register %@ activity
#Warning Unable to transition %@ activity to state 'done'
#Warning Unable to transition %@ activity to state 'continue'
cancelling %@ activity
Failed to open %s (error: %d). Retrying %d more times.
Threading %lld: resolving threads after journal reconciliation
Updated conversation hashes on %lu messages (%.4f seconds)
Threading: deferring thread resolution until unlock for message database ID %lld
Starting incremental vacuum for %@ database
Skipping incremental vacuum because protected tables are not available
Skipping incremental vacuum because free count (%lld) is below limit (256)
Skipping incremental vacuum because load factor (%.2f) is above threshold (0.85)
Error performing incremental vacuum: %s
Successfully performed incremental vacuum on %@ database
Abort if mobilemail: journal reconciliation failed
Could not open fd for %@
Could not set protection class on %@
Mail db will be reset on next launch
Could not create %@
#Warning SearchableIndex: Skipping message search request until we have determined our active non-local accounts
SearchableIndex: Failed to prepare statement: %@
No externalID for %@
Message has no subject: %lld
Message has no sender: %lld
Skipping remote content parsing (not yet enabled by user).
Skipping remote content parsing (%lx).
Skipping remote content parsing (%{public}@).
Skipping remote content parsing (prohibited by MDM).
Skipping remote content parsing and data detection (no header or body data).
Skipping remote content parsing (non-HTML part).
Downloading plain text message %@, will perform data detection
Sanitized path for libraryID %lld - %@
Storing message: %{public}@ in database part: %{public}@, is complete: %{public}d, in the database: %{public}@
Exception occurred while message with ID %lld: %@
writing out no data since existing data is equally long
not saving message data for non-existent message
Writing message: %{public}@, part: %{public}@ (incomplete: %{public}d to disk at path: %{public}@
storage path is nil! _libary: %@ _message: %@ _part: %@ _partial: %@ messageUrl: %@
Error attempting to write to file "%@": %{public}@
Couldn't make complete path "%@"
Exception occurred while writing to "%@": %@
Created rowid %lld from mailbox: %{public}@
Empty message data
#CacheLoads data from database of length %lu for message %{public}@ part %{public}@
%@ : took %fs
Writing body data for message database ID: %{public}lld, partial: %{public}d, part: %{public}@
#Warning Unhandled qualifier %ld for type %ld
#Warning Unhandled criterion type %ld
#Warning Could not open fd for %@
#Warning Could not set protection class on %@
#SMIMEErrors Verification was not good (%ld)
#SMIMEErrors Verification went south (%ld)
Exception raised during message encoding: %@
*** BAD!!! Used old attachments for %@
*** Unexpected object <%@:%p>
#Warning Must be called with a subclass of MFOutgoingMessage.  You provided %@
Unable to encode %@ as a MIME attachment
Trying to fetch with %@ account that doesn't have a task manager
Loaded bundle at %@
Ignoring MailServices bundle %@ for %@
Missing account type for identifier %{public}@
Failed to fetch accounts for types [%{public}@]: %{public}@
Primary iCloud IMAPMail account %{public}@ found for parent iCloud account %{public}@
Duplicate Primary iCloud IMAPMail account %{public}@ found for parent iCloud account %{public}@
Mail account %{public}@ found for parent account %{public}@
Failed to load account for persistent account "%{public}@"%s%{public}@
"%@" has Non-ASCII username - Disabling Notes for account (%{public}@)
Saved account "%@" (%{public}@)
Failed to save account "%@" (%@) error: %{public}@
Nothing to save for account "%@" (%{public}@)
Removed account "%@" (%{public}@)
Failed to remove account "%@" (%{public}@) error: %{public}@
Received %@ notification
lpm:%d locked:%d wifi:%d onpower:%d thermals:%lu battery:%.2f
error occurred while observing conditions: %{public}@
invalid battery-level value (%f)
[RBSProcessMonitor] Is visible: %{BOOL}d (initial)
Unable to create RBSProcessMonitor for %{public}@: %@
[RBSProcessMonitor] Is visible: %{BOOL}d (was %{BOOL}d), state: %d (was %d), pid = %d
[RBSProcessMonitor] Is visible: %{BOOL}d (was %{BOOL}d), state: %d (was %d), pid = %d -- (no app visibility change)
#aps-push Unable to open ApplePushService at %@
#aps-push Push service already running.
#aps-push Using %@ APS environment.
#aps-push A launchd mach service name is required but none was provided, pushes will not work - this will turn into an assert in the future
#aps-push Starting MFAPSManager.
#aps-push Starting MFAPSManager. Waiting for public token.
#aps-push Stopped MFAPSManager.
#aps-push Start watching topic '%@'
#aps-push Stop watching topic '%@'
#aps-push Swapping registered topic '%@' for topic '%@'
#aps-push Received public token '%@'.
#aps-push received notification on topic '%@', userInfo=%@
#Attachments %@ performing no conversion (isDataAvailableLocally=%d, isContainedInRFC822=%d, isMailDrop=%d, part=%p, contentTransferEncoding=%{public}@)
#Attachments %@ stripping line endings (contentTransferEncoding=%{public}@)
#Attachments %@ quoted-printable
#Attachments %@ base64
#Attachments %@ uuencode
#Attachments %@ unknown encoding (contentTransferEncoding=%{public}@)
#Attachments Failed to fetch data for attachment [%@]
FIXME: calls that come from the main thread should use fetchLocalData
#Attachments Failed to fetch data for attachment [%@] due to %{public}@
#Attachments Using placeholder file for '%{mask.hash}@'.
#Attachments Failed to get attachment data for '%{mask.hash}@'.
#Attachments Unable to create temp file for data (%{bytes}llu) for '%{mask.hash}@'.
#Attachments Failed to fetch candidate placeholder contents for attachment [%@]
#Attachments Unable to obtain data provider for attachemnt [%@] due to %{public}@
UTType [%@] for filename:[%@] via extension:[%@] mimeType:[%@]
UTType [%@] for filename:[%@] could not derive extension
UTType [%@] for filename:[%@] extension:[%@] via mimeType:[%@]
#Attachments UTType for filename:[%@] extension:[%@] mimeType:[%@] indeterminate
UTType [%@] for filename:[%@] via cache
#Attachments Unable to read file URL [%@] due to error: %{public}@
requesting download of attachment %p with URL %@ (primaryConsumer: %@)
Write attachment to database
%@ attachment %{public}@ write to persistence
not writing attachment. Missing filename: %{public}@
not writing attachment %p %@ to disk (no-existing-attachment-dictionary)
not writing attachment %p %@ to disk (shouldWriteToDisk=%d, success=%d, data.length=%lu, error=%@)
Calling progress block for %@.  %lu/%lu
#Attachments ContextID was nil for filename:%@ contentID:%@
#Attachments Data was nil for filename:%@ contentID:%@
#Attachments nil path detected in initializer
#Attachments Failed to create file for attachment %@: %@
#Attachments Failed to create directory for attachment %@: %@
#Attachments failed to find a store for message %{public}@, things may behave unexpectedly
Setup attachment %{public}@, name = %@, part number = %{public}@
Inserting message attachment metadata for attachments %{public}@ into the persistence
%@ at inserting message attachment metadata for attachments %{public}@ for message %lld
#Attachments FIXME: Blocking call requested on the main thread
removing attachment %@
Canceling download for attachment %@
#Attachments Exception thrown when writing file: %@ : %@
#Attachments Exception thrown when writing data: %@ : %@
#Attachments Failed to deserialize placeholder
#Attachments Failed to serialize placeholder
#Attachments Failed obtain data for temporary file
#Attachments Attempted to resolve placeholder for non-existant file: %@
#Attachments Placeholder attachment data write error %{public}@
#Attachments Unable to set resource values on placeholder attachment data: %{public}@
#Attachments Failed to remove temporary file
#Attachments Failed to create placeholder directory %@
#Attachments Unable to create base dir for temp files: %{public}@
#Attachments Path '%{public}s' is too long.
#Attachments Unable to create temp dir: %{errno}d.
#Attachments Created temp directory '%@'.
#Attachments Failed to create temporary directory.
#Attachments Failed to create temporary file (%{bytes}llu): %{public}@
#Attachments Failed 2nd attempt to create temporary file: %{public}@
#Attachments Error acquiring attachment placeholder for file: %@, Error: %@
#Attachments Error acquiring attachment security scope for fileURL: %@, Error: %@
#Attachments Failed to enumerate URL [%@] due to error [%{public}@]
#Attachments Failed to read bundle URL [%@]
#Attachments Failed to archive bundle attachment URL: %@ due to error: %{public}@
#Attachments Failed to read attachment URL: %@
#Attachments Failed to access attachment URL: %@
#Attachments URL is not a bundle: %@
NSFileCoordinator ops can block, the caller should move to a background thread
#Attachments Error accessing secure write URL [%{public}@]
#Attachments Error confirming URL is writeable [%@]
#Attachments Error accessing secure read URL [%{public}@]
#Attachments Error confirming URL is readable [%@]
#Attachments Failed to create temporary read URL [%@] error [%{public}@]
#Attachments Failed to create temporary read directory [%@]
Failed to remove temporary read URL [%@] error [%@]
Failed to remove temporary read directory [%@] error [%@]
[%{public}@] updateEmailAddressAndAliases: Update already running.
[%{public}@ #%u] Starting URL session task %llu
[%{public}@ #%u] updateEmailAddressAndAliases: Email alias request failed: %{public}@
[%{public}@ #%u] updateEmailAddressAndAliases: Received (status=%d) '%@'
[%{public}@ #%u] updateEmailAddressAndAliases: Not Modified.
[%{public}@ #%u] updateEmailAddressAndAliases: Got response. aliases: %d, emails: %d, defaultEmail: %{BOOL}d, entityTag: %{public}@
[%{public}@ #%u] updateEmailAddressAndAliases: Email alias request to [%@] failed with status code [%d]
[%{public}@ #%u] updateEmailAddressAndAliases: Email alias requests configured to use [%@], scheduling reprovision
[%{public}@ #%u] updateEmailAddressAndAliases: Network is not up.
Added trust exception for %@
Removed trust exception for %@
Error when retrieving encryption certificate for %@: %{public}@
failed to get attachment data for [%@], error:%@
No attachment for [%@]
Zero length attachment for [%@]
server indicated invalid sync state for task %@ (code %ld).  resetting mailbox sync key.
server has reset the sync state %@ times in the same sync attempt, giving up.
#Power [New Message] subject=%@;
About to process remote ids matching searchtext:%@ predicate: %@
Invalid search returned for predicate: %@
Received a protocol mismatch error when peforming search
%@ Seems like the server exhausted the search results (%ld of %lu), un-setting a continue offset
Searching for criterion: %@
Predicate is not supported, bailing.
Caller did not supply searchText. Generated basic search text:%@ from criterion:%@
Attempted to fetch messages from DA without searchText
Replaying flag change %@ for remote ids: %@
Adding flag change requests: %@
Adding delete requests: %@
No request needed for flag change: %@
No folder ID for mailbox: %@
Fetching body data for remote id: %@
failed to download body for message "%@"
Fetching body data for search result %@ in folder %@
Search result body fetch for message %@ %s
Fetching body data for message %@. format: %d
Successfully downloaded body for message: %@. format: %d
Failed to download body for message "%@"
#Warning DAMessageStore: this is not a MFLibraryMessage: %@
#Warning DAMessageStore: this is not a MFMailMessage: %@
Downloading headers for messages
#Warning Error while fetching headers for message %@: %@
#Warning don't know how to fetch data for mime part %@
Account search capability: %{public}u. canFetchSearchResults: %{public}@
Attempting to store text/html data as message part 2
Erasing locally cached messages for folderID %@
Failed erasing messages for folderID %@ - no such local mailbox.
received a redundant SyncAddAction for a message with remote-id %@
#Warning Caught exception %@
error syncing folder: %@
DAMessageStore - allMailboxes searchQuery returned result with invalid folderID: %@
Inserting Exchange Calendar meeting Data %@ for message : %@
Move succeeded but missing new remote ID for message ID: %{public}@
got %@ with untracked sourceID "%@"
Deleting source messages from transfer: %{public}@
message %@ was successfully transferred, but we don't have a new remote ID for it
Transfer action completed with successful items: %@. Failed items: %@. StatusCode: %lu
Transfer failed with Invalid Source Error. Moving the messages locally
processing journal file %@
read wrong number of version bytes from journal, expected: %lu actual: %zd
found journal file of wrong version, expected: %d actual: %lu
realloc failed when merging journal with database
read wrong number of bytes from journal, expected: %lu actual: %zd
Could not find mailbox for %@
MFProtectedDatabaseMergeResult %@
An error occurred while processing %@ (error %d: %s)
An error occurred while committing transaction for %@ (sqlite error %d)
Successfully reconciled journal file %@
Skipping empty journal file %@
No journal files found
Error %d %@ at path %@: %s
Created error: %{public}@
#Attachments Couldn't create archive, input is not a directory.
#Attachments Couldn't add file to archive. Error: %{public}@
#Attachments Failed to write entire data buffer
#Attachments Failed to validate archive central header
#Attachments Failed to validate archive central directory
Failed to mark file as purgeable before compression: %@
Mail File Compression Queue Activity
Failed to transition from state %ld to state %ld.
Registering File Compression Activity
Unregistering File Compression Activity
Running File Compression Queue Activity. %ld files in the queue
Deferring based on system conditions
Compressed all files in File Compression Queue
Stopped before compressing all files in File Compression Queue.
Exiting Compression Queue Activity. %ld files left in the queue
Server returned less bytes than expected for part %{public}@ (%lu versus %lu)
uid of message %{public}@ is 0
Unexpected byte %u at position %lu
deserialized offline operation was invalid - skipping
attempt to create an invalid offline operation of type %d with no mailbox name %p
attempt to create an invalid store-flags offline operation: %lu true flags, %lu false flags, %lu uids
attempt to create an invalid copy-message offline operation: %lu srcUids, %lu dstUids, dstMailbox=%p (%lu)
*** Warning while parsing %@: %@
Remaining text: <%@>
Invalid for response type %d
#Warning caught %@: %@
caught %@: %@
server returned data we don't have a consumer for, might be expected for section %@
We did something bad: we just got back a CLIENTBUG from the server.
#Power [Server Fetch Time] InternalDate=%@
%{public}@: Fetching skeletons for %lu uids (%lu new)
%{public}@: Fetching flags for %lu uids
%{public}@: Compacting %lu messages during IMAP sync
%{public}@: Search for recent UIDs returned %lu items (success=%@)
%{public}@: starting UID sync idRange=%@ limit=%lu topUIDToCompact=%lu topKnownUID=%lu UIDCount=%lu lowUID=%lu highUID=%lu serverMessagesIndex=%lu serverMessagesUIDs found=%u to %u
%{public}@: preserving UID %lu!
%{public}@: Compacting %u (1)
Syncing %lu
%{public}@: Fetching %lu
%{public}@: Compacting %lu (2)
%{public}@: _fetchMessagesWithArguments returns %lu
%{public}@: fetchNumMessages started with options 0x%lX, numMessages = %lu
%@: "Connecting..." starting
store and connection mailboxes differ: store=%@ connection=%@ (%p, valid: '%{public}@')
canceling fetch because connection is invalid
canceling fetch because mailbox could not be selected
store and connection mailboxes differ
%@: "Connecting..." completed
%{public}@: fetchNumMessages finished with result %ld
IMAP Account %{public}@ deleting messages from store: %@ older than %d days using connection: %@
Download fetched 0 bytes for UID %u
failed to download data, message.remoteID may be null
performOperationRequiringConnection: mailbox='%{public}@' connection=%p cached=%@ options=%d
%{public}@: Received UIDNEXT = %u
%{public}@: Forcing reload of '%{public}@' because of UIDVALIDITY change (old:%lu new:%lu)
%{public}@: Got EXISTS = %llu
#imap-idle error occurred while observing conditions for IDLE: %{public}@
#imap-idle scheduling IDLE transition (should-use-idle %@): %@
%{public}@: Got new UIDNEXT (old = %u, new = %u)
%{public}@: No messages to compact
%{public}@: Compacting all messages. Found %u (> %u).
%{public}@: Compacting messages with UIDs <= %lu. Found %u (> %u).
%{public}@: Not compacting messages. Found %u (<= %u).
#Warning unsupported header criterion type %@
#Warning Ignoring criterion %@ IMAP search
#Warning need to handle criterion for IMAP search: %@
Starting message reconciliation for all messages
Starting all message reconciliation enableTelemetry=YES 
Reconciling all journaled messages
Finished message reconciliation for all messages. Reconciled %lu messages
MessagesReconciled=%{public,signpost.telemetry:number1}lu enableTelemetry=YES 
MFLibraryMessageAllMessageReconciliation
Starting context based message reconciliation
Starting context based reconciliation enableTelemetry=YES 
MFLibraryMessageContextBasedReconciliation
Finished context based message reconciliation. Reconciled %lu messages
Starting inbox reconciliation
Starting inbox reconciliation enableTelemetry=YES 
Finished inbox reconciliation. Reconciled %lu messages
Failed to create criterion based on query: %@
Reconciling for query
reconciled %llu messages
Reconciled all messages. Cleaning up...
Starting library reconciliation
MFLibraryReconciliation
Library reconciliation finished
Starting context based library message reconciliation
Starting context based library message reconciliation enableTelemetry=YES 
Context based library message reconciliation finished. Reconciled %lu conversations
ContextType=%{public,signpost.telemetry:number1}ld Conversations=%{public,signpost.telemetry:number2}lu enableTelemetry=YES 
MFLibraryContextBasedReconciliation
Starting context based library thread reconciliation
Context based library thread reconciliation finished. Reconciled %lu conversations
Starting context based library inbox reconciliation
Starting inbox library reconciliation
Inbox library reconciliation finished. Reconciled %lu conversations
Starting library reconciliation for remaining entries
Starting library all remaining entries reconciliation enableTelemetry=YES 
Finished library reconciliation for remaining entries
MFLibraryAllRemainingReconciliation
Starting thread reconciliation for all threads
Starting reconciliation of all threads enableTelemetry=YES 
Finished thread reconciliation for all threads. Reconciled %lu threads
ThreadsReconciled=%{public,signpost.telemetry:number1}lu enableTelemetry=YES 
MFLibraryThreadReconciliation
Starting context based thread reconciliation for threads
Finished context based thread reconciliation for threads. Reconciled %lu threads
MFLibraryThreadContextBasedReconciliation
Reconciling %lu threads in batch
Marked %lu threads as reconciled
Reconciled %lu threads in batch, but marked %lu threads as reconciled
Created %{public}@ for account %{public}@
%{public}@ connection established
%{public}@ added action %{public}@
Replaying all actions %@: %ld action(s) to replay
%{public}@ replaying action %{public}@
%{public}@ Did not get results back for action: %{public}@. Will stop replaying actions.
%{public}@ action %{public}@ finished, needToReplayAction = %d
%{public}@ Finished replaying actions. %ld action(s) left to replay
Downloading Mail Drop attachment: %@ using URL session: %@
Canceling download for Mail Drop attachment %@
Delivering Mail Drop message
Finished processing attachments with state: %lu
Continuing with Mail Drop message delivery
MailDrop message is undeliverable
MailDrop message is incomplete
Processing attachments
Mail Drop couldn't create zone. Error: %{public}@
Mail Drop couldn't create file for attachment '%{mask.hash}@'. Ignoring attachment.
Mail Drop added record '%{mask.hash}@' for attachment '%{mask.hash}@'.
Adding attachment '%{mask.hash}@' as image.
Mail Drop couldn't create archive. Error: %{public}@
Mail Drop couldn't create record.
Unable to access attachments when generating MailDrop message
Mail Drop attachments finished processing with result: %lu, error:%{public}@
Mail Drop attachment: %@
#Attachments Mail Drop error publishing asset. %{public}@
Mail Drop asset URL: %@
Mail Drop progress %f for record:%@
#Attachments Mail Drop error for record: %{public}@
#Attachments Mail Drop complete for record:%@
#Attachments Mail Drop error with upload. %{public}@
Start uploading records to CloudKit database [%@] ...
#Attachments Failure encountered during Mail Drop processing [%{public}@]
Start fetching CloudKit record zone for ID [%@] ...
#Attachments Error encountered while fetching CloudKit record zone [%{public}@]
#Attachments Error encountered while saving CloudKit record zone [%{public}@]
#Attachments failed to get zone identifier from keychain: %{public}@
Unexpected type while unarchiving offline cache operation: %d
Unexpected operationType while unarchiving offline cache %u at position %lu
Couldn't deserialize mailboxName while unarchiving offline cache operation
Got error %@ inserting mailboxAction
wrong number of arguments (%d) to rawAddress
wrong number of arguments (%d) to displayName
Exception thrown while unarchiving offline cache operation: %@
DAMessageID: %@ and corresponding mailboxNumber not found.
Not enough _sourceRemoteIDs(%ld) or _temporaryRemoteIDs(%ld) to migrate for source mailbox %{public}@
Unable to find source mailbox in database for source mailbox id: %{public}@
Unable to find source mailbox URL for source mailbox id: %{public}@
#MobileMailMigrator: No Legacy Path For Account %{public}@, skipping migration...
#MobileMailMigrator: Start Migrating Mailbox FilePath for Account %{public}@ from %@ to %@...
#MobileMailMigrator Failed to Rename Path from %@ to %@ Due to Error %{public}@. Deleting the legacyMailboxPath.
#MobileMailMigrator: Finished Migrating Mailbox FilePath for Account: %{public}@
#MobileMailMigrator: Start Migrating Mailbox URLs for Account: %{public}@
#MobileMailMigrator: Finish Migrating Mailbox URLs for Account: %{public}@ with result %d
#MobileMailMigrator: Starting Purge of Orphaned Mailboxes...
#MobileMailMigrator: Finished Purge of Orphaned Mailboxes...
#MobileMailMigrator Could not migrate Mailbox URLs due to sqlite error: (%d)
#MobileMailMigrator For Account %{public}@ Renaming Mailboxes From URL %@ To %@
#MobileMailMigrator No Mailboxes found for account %{public}@ to migrate.
#MobileMailMigrator Updating mailbox table from Old URL %@ to New URL %@ failed with sqlite code (%d).
#MobileMailMigrator Purging Orphaned Mailbox storage at Directory URL %@
#MobileMailMigrator Unable to delete Orphaned Mailbox storage at Directory URL %@ due to Error: %@.
Error: invalid connection
Error initializing database parameters: %{public}@
Database is already at current version %lld. No migration needed.
Starting migration
Starting migration steps from version %lld, attempt %lu
Finished migration
Failed migration
Starting write transaction at version %lld
Initializing schema
Upgrading from %lu (%s)
Migrated to current version %lu
Error: Downgrading from version %d to version %ld is not supported
Error: Migration is not supported for version %d
Rebuilding triggers
Rebuilding Message Info Index
Updating library version
Protected Index unavailable
Foreign key violation on row %lld of table %{public}@ with reference to table %{public}@
Error attaching protected index while migrating: %{public}@
Protected Index became available
Error %d %{public}@: %{public}s
Error: failed to get contents of "%@": %{public}@
Error: failed to find "%@"
Error removing local account mboxCache: %{public}@
Found %lu messages to migrate
Migration for %lu messages was %@
Did on demand migration for message %{public}@, success = %d
Migrate message attachment
Migrating message %@ attachment %@
No attachment file for message %@ attachment %@. Persisting attachment metadata
%@ migrated message %@ attachment %@
Device about to lock
Scanner info: %lu %@
Got error %@ creating body file directory
Got error %@ creating attachment parent directory
Got error %@ moving attachment directory %@
No externalID for message %{public}@
Did find error: %{public}@
Notifying CoreDuet about %lu new messages in %{public}@
messagesInMailboxURLCriterion is nil for mailboxURL %@
content not available for unknown representation type %{public}@ content for message %{public}@
returning raw representation %{public}@ for message %@
reading raw content for message %{public}@
Network usage is not allowed. Setting shouldDownload to NO
Duplicate content IDs for content items: %@. Ignoring
decoded HTML data with preferred encoding %x, used encoding %x
failed to decode HTML data with length %lu and preferred encoding %x
EMContentItemRequestDelegate failed! %{public}@
failed to generate snippets for attachments: %{public}@
failed to generate snippets for attachments: nil delegate
Could not create a body subset from partials for message: %{public}@
Did not find any content for message: %{public}@, using placeholder html
generated initial HTML content at URL %@: %lu bytes
EMContentItemRequestDelegate failed generating MailDrop attachments: %{public}@
failed to generate snippets for mail drop attachments: %{public}@
MailDrop node insertion to original HTML content failed with error %{public}@
MailDrop node parsing finished with error %{public}@
requesting %{public}@ content for message %{public}@
MailDrop: Received MailDrop Nodes %@
Begin work on scheduler
End work on scheduler
MFMessageContentRequestScheduler
Received unexpected qualifier %d for MessageIsRead criterion.
Received unknown criterion type for criterion: %@
Attempted to handle unsupported criterion %@
Returning criterion:%@ result:%@
Unsupported expressionType:%lu
Compound Criterion should not appear here - should be an NSCompoundPredicate
VIP criterion should be 'equal to' or 'not equal to'
Received unknown criterion type for predicate: %@
Attempted to handle unsupported predicate %@
#MailServices Cannot currently handle a NOT predicate with more than one sub
Got unexpected Predicate: %@
Received unhandled MessageRuleQualifier value:%d - assuming contains
Received unhandled NSPredicateOperatorType value:%lu - assuming contains
Starting
Compression: Failed to enumerate URL [%@] due to error [%{public}@]
Error setting the protection class on "%@": %{public}@
Finished
unable to get an event with external id %@ after it was successfully reconstituted.
Download supported, getting body
Download not supported, getting body if available
Failed to get the body for messageID %{public}@
Creating MFAttachment for part number %{public}@ textAttachment %@
Load attachment
Loading attachments %{public}@
Message body download not complete. Remaining bytes: %ld
MFMessageLoadingContextEvent hasLoadedCompleteMessage %{BOOL}d, hasLoadedBestAlternativePart %{BOOL}d, transportType %ld
See <rdar://48898701> : Internal Settings Switch to execute SQL query from EDMessageQueryParser
Predicate: %@
SQL Query: %@
Conversion Database IDs
Criterion Database IDs
requestContent: no library message for objectID %{public}@
requesting %{public}@ content for message %{public}@ (%{public}@)
Retrying the request %{public}@ content for message %{public}@ with network
Skipping the retry for message content with network
Requesting summary immediately for: %@
Cannot create summary loader. No Library Message for object ID: %@
Error setting the protection class on "%@": %@
Could not find mailbox for message with database ID %lld
#Warning #Network SCDynamicStoreCreateRunLoopSource failed - returned NULL.
#Warning #Network Could not create SCDynamicStore
MFNetworkControllerInit
#Network retrieved CT subscription info: %@ with error: %@
#Network failed to get data status for context %@ with error: %@
#Network failed to find data-preferred context
#Network setting data status: %@
#Network failed to aquire network assertion
#Network copyCarrierBundleValue returned error: %@
#Network could not get subscription info: %@
#Network failed to bring up data context (context: %@, connection: %u, error: %d
#Network preferred data sim was changed to slot %lu
#Network SIM is now ready (slot %lu)
#Network %d active calls
User agent says canUseSpotlightIndex - Enabling searchable index.
Couldn't reset file protection of protected database. The device is probably locked. %{public}@
Failed to reset file protection of protected database: %{public}@
Resetting mailbox cache after database transaction failed
Abort if mobilemail: database corrupt
Abort if mobilemail: file system out of space
#Warning %@
Access to protected data went away during transaction.
Abort if mobilemail: database I/O error, missing sqlDB pointer
Abort if mobilemail: protected database went missing
Abort if mobilemail: database I/O error
Abort if mobilemail: SQLITE_BUSY
#Warning %@/%@ bytes (free/total)
#Warning failure to get file system size: %@
Device is now %@
Listening for low-power mode notifications
Low-power mode changed to %@
#Assertions [*] cancel power assertion timer
#Assertions [*] schedule %d sec power assertion timer
#Assertions [*] power assertion timer expired
#Assertions [+] %@
#Assertions Could not create power assertion.
#Assertions [-] %@
#Assertions Active Assertions: %lu
RequestClass=%{signpost.description:attribute,public}@ RequestType=%{public, signpost.telemetry:number1}lu RequestCount=%{public, signpost.telemetry:number2}lu enableTelemetry=YES 
REQUEST QUEUE
#Warning Exception raised while processing requests: %@
fetching attachment %@
Encountered an attachment without a name for attachmentID:%@ attachmentPersistentID:%{public}@ messagePersistentID:%{public}@
Unable to retrieve a fileURL for a message in the attachments table for attachmentID:%{public}@ attachmentPersistentID:%{public}@ messageID:%{public}@ name:%@
Encountered a reference to a non-existent message in the attachments table for attachmentID:%{public}@ attachmentPersistentID:%{public}@ messageID:%{public}@ name:%@
#SMIMEErrors SecIdentityCopyCertificate could not find certificate for %@, returned %d
#SMIMEErrors SecCertificateCreateWithData() failed for %@
#SMIMEErrors SecTrustCreateWithCertificates returned %ld
#SMIMEErrors Certificate %@ for address %@ is not currently valid: %{public}@
MFSMTPConnection[%p]: Unexpected response during authentication for SMTP account %{public}@
SMTP error for recipient %@: %@
SMTP delivery:%d valid recipients; invalid recipients = %@
MFSMTPConnection[%p]: Trying EHLO using clientDomainName [%{public}@]
MFSMTPConnection[%p]: EHLO using clientDomainName [%{public}@] - Success.
MFSMTPConnection[%p]: Got unexpected EHLO response using clientDomainName [%{public}@] ESMTP params %@
MFSMTPConnection[%p]: EHLO using clientDomainName [%{public}@] - Failed. Falling back to HELO
Acquired task assertion: %{public}@
could not aquire task assertion: %{public}@
#Warning Error %d: %s
#UnreadCount [UnreadCount] %@ %s
MobileMail container path not found - Skipping extProperties migration.
extPropertiesDomain %{public}@ at path: %@
Migrating extPropertiesDomain to shared app group.
Migrated following extPropertiesDomain defaults to shared app group: %@
No keys found to migrate in extPropertiesDomain.
extPropertiesDomain already migrated to shared app group.
Migrating %@ to %@ with default %@
No default for key %@
Ignoring unmatched </%@> command
elapsed time %gs (input length=%ld, output length=%lu)
deallocating %p %@
Exception raised during monitored invocation of %{public}@, %{public}@
Stack:
%{public}@
#Warning couldn't find our CastleAccount for our sending account: %@
-[NewcastleAuthentication responseForServerData]
#Warning SecItemCopyMatching result: %d
SecItemCopyMatching succeeded with empty results
#Warning SecItemAdd result: %ld
#Warning SecItemUpdate result: %ld
#Warning SecItemDelete result: %ld
#SMIMEErrors Found %lu (out of %lu) matching signing identities for "%@"
#SMIMEErrors Found %lu (out of %lu) matching encryption identities for "%@"
#SMIMEErrors SecItemCopyMatching returned %ld
#SMIMEErrors Found no certificates for "%@" (%ld)
#SMIMEErrors Found %s certificate for "%@".
#SMIMEErrors Error saving encryption certificate for "%@": %@
NTLM authentication succeeded
NTLM authentication failed
start NTLM authentication
*** Unexpected server response during NTLM authentication
NTLM - respond to server challenge; user = %@; domain = %@
*** Error %ld occurred during NTLM authentication
#SMIMEErrors Missing signed data!
#SMIMEErrors Missing signature part!
#SMIMEErrors decodeMultipartSigned failed with %{public}@
#SMIMEErrors There was no error while decrypting the message but there was no body either!
#SMIMEErrors decodeApplicationPkcs7_mime failed with %{public}@
#SMIMEErrors SecCmsDecoderCreate returned %ld
#SMIMEErrors SecCmsDecoderUpdate returned %ld for %lu bytes
#SMIMEErrors SecCmsDecoderFinish returned %ld
#SMIMEErrors SecCmsDigestContextStartMultiple failed
#SMIMEErrors -appendData: called on _MFSecCMSDecoder after an error has occurred!
#SMIMEErrors -appendData: called on _MFSecCMSDecoder with no signed or enveloped data!
#SMIMEErrors SecCmsSignedDataSetDigestContext on -done returned %ld
#SMIMEErrors _MFSecCMSDecoder asked to verify with pending error (%ld)
#SMIMEErrors There were no digests in the message
#SMIMEErrors The message sender is missing
#SMIMEErrors SecCmsSignedDataVerifySignerInfo returned %ld for #%d:%@
#SMIMEErrors There was a signing error %{public}@
#SMIMEErrors newSignedPart... failed with %{public}@
#SMIMEErrors newEncryptedPart... failed with %{public}@
#SMIMEErrors Found no identity for "%@"
#SMIMEErrors SecCmsMessageCreate for signing failed
#SMIMEErrors SecCmsSignedDataCreate failed
#SMIMEErrors SecCmsContentInfoSetContentSignedData returned %ld
#SMIMEErrors SecCmsContentInfoSetContentData for signing returned %ld
#SMIMEErrors SecCmsSignerInfoCreate failed
#SMIMEErrors SecCmsSignerInfoIncludeCerts returned %ld
#SMIMEErrors SecCmsSignedDataAddCertChain returned %ld
#SMIMEErrors SecCmsMessageCreate for encryption failed
#SMIMEErrors SecCmsEnvelopedDataCreate failed
#SMIMEErrors SecCmsContentInfoSetContentEnvelopedData returned %ld
#SMIMEErrors SecCmsContentInfoSetContentData for encryption returned %ld
#SMIMEErrors Failed to create all the required recipients
#SMIMEErrors -appendData: called on _MFSecCMSEncoder after an error has occurred!
#SMIMEErrors SecCmsMessageEncode returned %ld
#SMIMEErrors -appendData: called twice _MFSecCMSEncoder (only once is allowed for now)!
#SMIMEErrors SecCmsEncoderFinish on -done returned %ld
#SMIMEErrors SecTrustCreateWithCertificates returned %d
#SMIMEErrors SecTrustCreateWithCertificates returned a null SecTrustRef
Enabling SMTPUTF8 support for message delivery: %@
SMTP Delivery for messageID %@ failed with error %{public}@
no entry for mailbox %@?
Error %d on connection %p %{public}@: %{public}s - I/O error %d (%s)
Error %d on connection %p %{public}@: %{public}s
wrong number of arguments (%d) to icusearch
Renaming database %@ to %@
?333333
?333333
L=AUTH 
STARTTLS
RCPT TO:<
NOOP
QUIT
MAIL FROM:<
DATA
SSNT
EHLO 
RSET
HELO 
MbP?K
$s7Message18PersistenceAdaptorC19MailboxStatusChange33_BF49CAC5CAF7F83739A49B51D199525BLLO
MailboxStatusChange
SearchOptions
NNSDataSearchOptions
Foundation
EMFetchOption
EMActivityFetchState
EMActivityUserInfoKey
ECJunkMailLevel
ECMessageFlagColor
ECTransferMessageActionType
MFMailMessageLibraryUIDMessageSize
MFMessageFlags
MailboxAttributes
ProgressUserInfoKey
NNSProgressUserInfoKey
BackFillMessageBodyScheduler
Status
Request
$s7Message08BackFillA13BodySchedulerC8Activity33_8C94728D29B9D9CACC7F5FFB5564322BLLC
Activity
$s7Message08BackFillA13BodySchedulerC7Running33_8C94728D29B9D9CACC7F5FFB5564322BLLV
Running
Element
ClientStateObserver
AuthenticationMethodKind
Wrapped
EventUpdateHelper
EventUpdateGroup
$s7Message11UIDAndFlags33_1C746FA85EDB6BDACD51B912D19842F4LLV
UIDAndFlags
Message
IMAPMailboxTaskManager
InProgressMessageDownload
Kind
EMLX
MessageHeaders
Error
MailboxNameMapping
Message
$s7Message16NoPathComponents33_BBE5679FF8D561D58D7D6164A8568604LLV
NoPathComponents
$sSS7MessageE6bufferSSSg12NIOIMAPCore210ByteBufferV_tc33_BBE5679FF8D561D58D7D6164A8568604Llfc
$sSS7MessageE6bufferSSSg12NIOIMAPCore210ByteBufferV_tc33_BBE5679FF8D561D58D7D6164A8568604Llfc12InvalidInputL_V
InvalidInput
MailboxPersistenceHelper
UploadReference
$s7Message15UploadReferenceV10CodingKeys33_E87CEF920D217353F5ABDC0B17AA6767LLO
CodingKeys
Move
Operation
LocallyModifiedMailboxes
UpdateMailboxesResult
$s7Message17MailboxUpdateTree33_9756C92D0D431C9DA10B9422B1759BA4LLV
MailboxUpdateTree
ChangedParent
Element
FindResult
Name
$s7Message17MailboxUpdateTree33_9756C92D0D431C9DA10B9422B1759BA4LLV7account11nameMappingADSo11IMAPAccountC_AA18PersistenceAdaptorC0b4NameO0CtKcfc
$s7Message17MailboxUpdateTree33_9756C92D0D431C9DA10B9422B1759BA4LLV7account11nameMappingADSo11IMAPAccountC_AA18PersistenceAdaptorC0b4NameO0CtKcfc0B17NamesAreNotUniqueL_V
MailboxNamesAreNotUnique
$s7Message17MailboxUpdateTree33_9756C92D0D431C9DA10B9422B1759BA4LLV7ElementV4make7mailbox7account11nameMappingSayAFGSo12MFMailboxUidC_So11IMAPAccountCAA18PersistenceAdaptorC0b4NameR0CtKFZ
$s7Message17MailboxUpdateTree33_9756C92D0D431C9DA10B9422B1759BA4LLV7ElementV4make7mailbox7account11nameMappingSayAFGSo12MFMailboxUidC_So11IMAPAccountCAA18PersistenceAdaptorC0b4NameR0CtKFZ22PathSeparatorIsUnknownL_V
PathSeparatorIsUnknown
$s7Message17MailboxUpdateTree33_9756C92D0D431C9DA10B9422B1759BA4LLV7ElementV4make7mailbox7account11nameMappingSayAFGSo12MFMailboxUidC_So11IMAPAccountCAA18PersistenceAdaptorC0b4NameR0CtKFZ0bX9IsUnknownL_V
MailboxNameIsUnknown
MessagesBeingDownloaded
Error
MessageSectionDataConcatenator
CreateResult
CompleteSection
TemporaryFile
$s7Message0A23SectionDataConcatenatorVyAC16IMAP2Persistence0abC0VKc33_90462B0BCDCAE26FCBE7EF88E9C96BE4Llfc
$s7Message0A23SectionDataConcatenatorVyAC16IMAP2Persistence0abC0VKc33_90462B0BCDCAE26FCBE7EF88E9C96BE4Llfc16NoInitialSegmentL_V
NoInitialSegment
$s7Message0A23SectionDataConcatenatorV13TemporaryFileC04makeC08Dispatch0hC0VyKF
$s7Message0A23SectionDataConcatenatorV13TemporaryFileC04makeC08Dispatch0hC0VyKF19MemoryMappingFailedL_V
MemoryMappingFailed
$s7Message0A23SectionDataConcatenatorV13TemporaryFileC04makeeF06System0F10DescriptorV_10Foundation3URLVtyKFZ
$s7Message0A23SectionDataConcatenatorV13TemporaryFileC04makeeF06System0F10DescriptorV_10Foundation3URLVtyKFZ014FailedToCreateeF0L_V
FailedToCreateTemporaryFile
CompletedMoveOrCopy
MoveReference
$s7Message13MoveReferenceV10CodingKeys33_BB516BFA24FD5C56FA85DA903ECB35AALLO
CodingKeys
OpaquePersistedMessageIdentifierCoder
UserInitiatedDownloadFailed
DownloadState
MessageRequest
PersistenceAdaptor
Error
$s7Message6Upload33_6E9ADBBA6FF43272EC74977344F4BF48LLV
Upload
$s7Message18PersistenceAdaptorC12test_message3forSo09MFLibraryA0CSg05IMAP2B0015OpaquePersistedA10IdentifierV_tKF
$s7Message18PersistenceAdaptorC12test_message3forSo09MFLibraryA0CSg05IMAP2B0015OpaquePersistedA10IdentifierV_tKFAHyKXEfU_
$s7Message18PersistenceAdaptorC12test_message3forSo09MFLibraryA0CSg05IMAP2B0015OpaquePersistedA10IdentifierV_tKFAHyKXEfU_07InvalidI2IDL_V
InvalidOpaqueID
RunningSyncs
Element
BackFillSync
Status
Message
TaskManager
$s7Message11TaskManagerC6Config33_4058589F4459B058528ADD61815F9D4FLLV
Config
Error
BodyFetchContext
ThermalState
NNSProcessInfoThermalState
Command
Affinity
ConnectionLimits
ConnectionIDsGroupedByState
ConnectionLimitsAndUsage
FlagEncoder
FlagDecoder
FlagUpdatesToBeSent
Logger
LocalMailbox
SelectedState
TracingID
LocalMailboxes
Local
MailboxSyncState
MessagesPendingDownload
MissingMessages
IMAP2Behavior
PendingPersistenceUpdates
PendingServerResponsesBehavior
CapturedValue
Change
PendingServerResponses
CodingKeys
BasicCodingKeys
CondStoreCodingKeys
SequenceChange
ExpungedMessages
ChangeWithoutUID
BasicResponses
CapturedValue
CodingKeys
CondStoreResponses
SequenceUpdate
CapturedValue
CodingKeys
Server
Remote
ExtendedSearchSupport
SequenceNumbersBehavior
CondStoreSupport
GmailLabelSupport
MoveSupport
Logger
State
NextTask
SyncSteps
SyncStep
SyncSteps
UserVisible
MailboxesToSelect
Reason
CapturedValue
MailboxesToSelect
RunningTasksCapturedValue
StateCapturedValue
CodingKeys
Mailbox
MailboxSyncState
MessagesPendingDownload
UserInitiated
UserInitiatedDownload
UsageElement
CapturedTask
MailboxTask
CapturedLocal
CapturedRemote
CapturedSyncRequest
PathAttributes
PendingPersistenceUpdates
MissingMessages
MailboxOfInterest
History
Server
StateWithTasks
ConnectionFailure
SyncBehavior
DetectChangesToMessages
FetchMessages
MessageBodyDownload
AuthenticatedTask
CommandID ActionID
BoxProtocol
AnyAuthenticatedTask
Error
MailboxTask
CommandID ActionID
BoxProtocol
AnyMailboxTask
Error
Error
MailboxWasDeselected
CommandID
Task
TracingID
RunningTask
Generator
ActionID
RunningTasks
TaskID
Task
Logger
RemovedID
TaskHistory
Running
Previous
EnumWithKind
Kind
Action
Command
TaskHistoryWithCustomIDs
CustomIDMap
CreateMailboxes
CommandID
ActionID
MailboxDeletionResult
DeleteMailboxes
DeleteMailbox
ActionID
DetectChangesToMessages
CommandID
ActionID
DetectChangesToMessagesInRecent
CommandID
ActionID
DetectRemovedMessages
CommandID
ActionID
DetectRemovedMessagesInRecent
CommandID
ActionID
TaskIDValue
DownloadTask
CommandID
Kind
ActionID
Batch
MessageSectionsToDownload
Section
MessageWithBodyStructure
InProgressMessages
MessageHeaderStatus
Part
SectionDataRequest
SectionDownloadStatus
ExpungeServerMessages
ExpungeFailed
CommandID
FetchMessages
CommandID
ActionID
FindMissingMessages
CommandID
ActionID
QueryRanges
Element
Persistence
TaskIDValue
FindPendingDownload
ActionID
GetUIDsForDownloadRequests
ActionID
ListMailboxes
CommandID
ActionID
MoveAndCopyMessages
CommandID
Kind
MessageInfo
CountMismatch
ActionID
Move
Copy
CompletedCommand
UIDPairs
NewServerMessages
NotifySyncRequestCompletion
ActionID
QuickFlagChangesResync
CommandID
ReSyncMailbox
ActionID
RenameMailboxes
NotifyOfRename
UpdateLocalFlags
ActionID
UploadFlagChanges
EncodedFlags
Element
CommandID
ActionID
DependencyStatus
FlagsToUpload
PendingUpload
UploadMessages
ActionID
Kind
CommandID
CompletedUpload
Status
Update
Kind
UserInitiatedDownload
Error
State
DependencyGraph
Node
DirectedAcyclicGraph
ExistingUIDSet
Error
ByteCount
SegmentResequencer
SegmentRange
Error
NoHeaderSeparatorFound
PopResult
ANSWERED
DELETED
FLAGGED
RECENT
SEEN
UNSEEN
UNANSWER@
UNDELETEH
UNFLAGGEP
DRAFT
UNDRAFT
Base64
EncodingOptions
DecodingOptions
sockaddr_storage
HeapObject
in6_addr
sockaddr_un
sockaddr_in6
sockaddr_in
sockaddr
InlineRefCountsPlaceholder
__Unnamed_union___u6_addr
in_addr
DecodingError
NIOBSDSocket
AddressFamily
ProtocolFamily
OptionLevel
Option
_ByteBufferSlice
ByteBufferAllocator
ByteBuffer
_Storage
CopyBytesError
BaseError
Endianness
ByteBufferView
CircularBuffer
Index
IOError
FailureDescription
Error
NIOIMAPCore2
_IntegerBitPacking
IntegerBitPacking
_UInt24
_UInt56
NIONetworkInterface
NIONetworkDevice
Backing
SocketAddressError
FailedToParseIPByteBuffer
SocketAddress
IPv4Address
IPv6Address
UnixSocketAddress
SockAddrProtocol
System
CommandEncodeBuffer
CommandEncodingOptions
EncodeBuffer
Mode
Chunk
InvalidFrame
LiteralSizeParsingError
FramingResult
FramingParser
State
QuotedState
LiteralHeaderState
LineFeedByteStrategy
AbsoluteMessagePath
Access
AppendData
AppendMessage
AppendOptions
AttributeFlag
AuthenticatedURL
AuthenticatedURLRump
AuthenticatedURLVerifier
AuthenticationMechanism
BodyStructure
MediaSubtype
BodyExtension
DispositionKind
Disposition
DispositionAndLanguage
Encoding
Fields
LanguageLocation
LocationAndExtensions
Multipart
Extension
Singlepart
Kind
Message
Text
Extension
Capability
ContextKind
SortKind
ThreadKind
StatusKind
UTF8Kind
RightsKind
CompressionKind
ChangedSinceModifier
UnchangedSinceModifier
Command
AppendCommand
CatenateData
CommandStreamPart
CustomCommandPayload
TaggedCommand
CreateParameter
IMAPCalendarDay
ServerMessageDate
Components
EItemVendorTag
ExtendedSearchOptions
ExtendedSearchScopeOptions
ExtendedSearchSourceOptions
EmailAddress
EncodedAuthenticationType
EncodedMailbox
EncodedSearch
EncodedSearchQuery
EncodedSection
EncodedAuthenticatedURL
EncodedUser
EntryFlagName
EntryKindRequest
EntryKindResponse
Envelope
Expire
FetchAttribute
FetchModificationResponse
FetchModifier
Flag
Keyword
PermanentFlag
StoreOperation
StoreData
StoreGmailLabels
StoreFlags
FullAuthenticatedURL
FullDateTime
FullDate
FullTime
IMAPServer
IMAPURL
IMAPURLAuthenticationMechanism
InitialResponse
InternetMessageDate
KeyValue
IMAPEncodable
LastCommandSet
ListSelectBaseOption
ListSelectIndependentOption
ListSelectOption
ListSelectOptions
MailboxAttribute
MailboxStatus
MailboxData
SearchSort
EmailAddressGroup
EmailAddressListElement
MailboxInfo
Attribute
MailboxTooBigError
InvalidMailboxNameError
InvalidPathSeparatorError
MailboxPath
MailboxName
MailboxPatterns
MailboxUIDValidity
MechanismBase64
BasicKind
Basic
Media
Message
GmailLabel
MessageAttribute
MessageData
MessageID
MessagePath
MetadataEntryName
MetadataOption
MetadataResponse
MetadataValue
ModificationSequenceValue
NamespaceDescription
NamespaceResponse
NetworkMessagePath
NetworkPath
MailboxFilter
Mailboxes
OptionExtensionKind
OptionValueComp
IPartial
PartialRange
QuotaLimit
QuotaResource
QuotaRoot
RelativeIMAPURL
ApplePushService
ContinuationRequest
ExtendedSearchResponse
ResponseOrContinuationRequest
Response
FetchResponse
StreamingKind
ResponseCodeAppend
ResponseCodeCopy
ResponsePayload
ResponseText
ResponseTextCode
TaggedResponse
State
UntaggedStatus
ReturnOption
RumpAuthenticatedURL
RumpURLAndMechanism
ScopeOption
_Backing
SearchCorrelator
SearchKey
SearchModificationSequence
SearchReturnData
SearchReturnOption
SectionSpecifier
Part
Kind
QResyncParameter
SelectParameter
SequenceNumber
CodingKeys
SequenceMatchData
SortData
StoreModifier
ParameterValue
InvalidUID
IUID
MessageIdentifier
UnknownMessageIdentifier
CodingKeys
MessageIdentifierRange
MessageIdentifierSet
RangeView
Index
MessageIdentificationShiftWrapper
MessageIdentifierSetNonEmpty
CodingKeys
UIDValidity
URLAuthenticationMechanism
URLCommand
URLFetchData
URLFetchType
URLMessageSection
UseAttribute
UserAuthenticationMechanism
IMAPDefaults
MailboxLoggerID
ModifiedUTF7
OddByteCountError
EncodingRoundtripError
ByteToMessageDecoder
MessageToByteEncoder
ChannelHandlerContext
DecodingState
PayloadTooLargeError
ByteToMessageDecoderError
SynchronizedCommand
CommandParser
Mode
AppendOrCatenateMessage
_FetchResponse
MailboxValue
ExceededLiteralSizeLimitError
GrammarParser
StackTracker
Parser
ExceededMaximumMessageAttributesError
ExceededMaximumBodySizeError
ResponseParser
Mode
_Response
ResponseState
SynchronizingLiteralParser
FramingResult
State
BadCommand
ParserError
TooMuchRecursion
IncompleteMessage
ParseBuffer
PipeliningRequirement
PipeliningBehavior
ResponseEncodeBuffer
ResponseEncodingOptions
Index
DiscontiguousSlice
Pair
Ranges
RangeSet
_Storage
_RangeSetStorage
_ByteBufferAPITemplate
_ByteBufferViewAPITemplate
Iterator
_Storage
_UnsafeHandle
Deque
_DequeBuffer
_DequeBufferHeader
_DequeSlot
_UnsafeWrappedBuffer
_UnsafeMutableWrappedBuffer
Bucket
BucketIterator
UnsafeHandle
_HashTable
Storage
Header
SubSequence
Iterator
Elements
Iterator
Values
OrderedDictionary
SubSequence
UnorderedView
_UnstableInternals
OrderedSet
_UnsafeBitset
Iterator
Word
AtomicFlag
Storage
MonotonicTime
PCG32Random
IMAP2Helpers
StateCapture
CapturedData
IMAP2Tracing
EngineTracingID
EngineTracingIDOwner
TaskName
TaskLoggerID
EngineLoggerID
TraceKind
ClientCommand
FetchData
SelectOption
Kind
LoggableCommand
HeapObject
InlineRefCountsPlaceholder
Encoded
EncodingOptions
Literal
MessageBodyEncoding
Mode
ConnectionID
EncodedString
CodingKeys
MessageSectionHeaders
ConnectionLoggerID
Mailbox
Attribute
MessageData
BodySection
IMAP2Protocol
ClientCommandEncoder
PushRegistrationInfo
PushRegistrationResponse
UntaggedResponse
CommandCompletionResponse
Response
ServerID
ServerResponseTranscoder
ServerResponseFramingParser
Frame
ResponseParser
Error
UnknownServerResponse
StreamedBodySection
ParseError
SpecialUse
IMAP2Persistence
Action
Kind
ActionID
MailboxMetadata
MessageFlagUpdate
ThermalState
NNSProcessInfoThermalState
HeapObject
Foundation
ComparisonResult
NNSComparisonResult
InlineRefCountsPlaceholder
Activity
MailboxStatus
Info
FetchingMessages
Credentials
TLSRequirement
DownloadRequest
Kind
Environment
Power
CapturedValue
CodingKeys
Event
Update
OpaquePersistedMessageIdentifier
MessageFlagsWithModifications
MoveOrCopy
Operation
Result
MailboxToRename
Flags
JunkStatus
Label
FlagsWithModifications
FlagsUpdate
FlagKind
MailboxOfInterest
LocalModification
MessageMetadata
UnparsedHeader
MessageSectionKind
MessageSectionData
Segment
Initial
MessageSize
UIDAndMessageSize
RenameRollback
Step
ConnectionStatus
SyncRequest
Kind
UIDWithValidity
kern.osversion
z_stream_s
AppleToken
State
tls_ciphersuite_t
tls_protocol_version_t
ReceivedTextAsAuthenticationQuery
Error
Challenge
Response
Authentication
IMAP2Connection
AuthenticationMechanism
SASLAuthenticationMechanism
AuthenticationTask
ImplementationRequestsSecondQuery
Step
State
Authenticator
CRAMMD5
State
Login
SASLKind
MechanismKind
OAuthToken
State
CodingKeys
Plain
State
AuthenticationResult
GetCapabilities
CommandConnection
CommandConnectionDelegate
IdleKind
CommandID
CommandCounter
ConnectionCommandIDSet
CommandOutputBuffer
ServerExpectsContinuation
ServerDoesNotExpectHandshakeReply
CanNotAppendHandshakeUnlessBufferIsEmpty
ServerExpectsHandshakeReply
Command
Continuation
Handshake
IdleDone
SendData
Element
Compress
ConnectionDelegate
ConnectionConfiguration
ConnectionError
Connection
OutboundContent
ConnectionEvent
ConnectionCommand
ConnectionState
Kind
AuthenticatedState
Selection
AlreadyAuthenticatedWhenReceivingHandshakeQuery
Compressor
Decompressor
Stream
Kind
InputKind
Deflate
Error
PartialResult
OutputStatus
Result
InputBuffer
Statistics
OutputHelper
Chunk
Event
Payload
Framer
NoContent
OutboundMessage
InboundMessage
Compression
OutgoingData
DeflateCompression
HandshakeReply
HandshakeQuery
Encoded
IdentifyServer
Logger
Error
MailboxSelectionState
MailboxSelectionUsage
Priority
MailboxesSelectionUsage
Value
Element
PathAttribute
BetterPathAvailability
PathViability
PipeliningRequirement
PipeliningBehavior
ProtocolMetadata
RegisterForPush
RunningCommands
NeedToWaitOnRequirements
TooManyCommandsRunning
Command
Kind
SelectedMailbox
ModificationSequence
StartTLS
CapturedValue
Authenticated
CodingKeys
noop
idle
Task
TaskID
Command
Timer
UnauthenticatedState
Update
Error
UnauthenticatedStateWithTasks
UnexpectedDidStartTLS
NoAuthenticationTaskRunning
V@IMAP2ConnectionControl
Backoff
BetterPathEvaluator
BetterPathEvaluatorDelegate
Connection
State
Action
Generation
Configuration
ProtocolOptions
Engine
Logger
ExternalState
Persistence
EngineBox
ConnectionPool
ConnectionPoolDelegate
CapturedValue
Error
CodingKeys
RateLimit
4name_
3oldAC3newt
4name_
4name_t
$ss25ExpressibleByArrayLiteralP
$sSY
$ss9OptionSetP
$ss10SetAlgebraP
Iego_
Iegr_
SSIego_
ySpy
Gz_SpySo8NSObjectCSgGSgzSpyypGSgztc
So8NSObjectCSg
Iegd_
_ypt
So10EMActivityCG
So8NSStringC
$ss21_ObjectiveCBridgeableP
So8NSObjectC
So18EDAccountsProvider_p
So17OS_dispatch_queueC
SgXw
SgXw
So13OS_xpc_object_p
So24OS_dispatch_source_timer_pSg
SgXw
SuIegd_
SuIegr_
SiIegd_
SiIegr_
SayySpy
Gz_SpySo8NSObjectCSgGSgzSpyypGSgztcG
SaySo13MFTaskManager_pG
ySaySo13MFTaskManager_pGG
So13MFTaskManager_p
So9EDAccount_p
SaySo9EDAccount_pG
So8NSObject_pSg
SgXw
SgXw
SaySo17EMMailboxObjectIDCG
4host_
4portt
So11IMAPAccountCSgXw
So11IMAPAccountCSgXwz_Xx
SaySSG
ShySSG
_ypt
GIegg_
So11IMAPAccountC
So7MFErrorC
So8NSObjectCIego_
So8NSObjectCSgIego_
ySay
So9MFAccountC
ySS_G
So12EFObservable_p
SayyXlG
SaySo20ECLocalMessageActionCG
ySay
ySay
7mailbox_Say
GSb6isLastt
SaySo27ECTransferMessageActionItemCG
7mailbox_Say
GSb6isLastt
13sourceMailbox_Say
GSb6isLastt
So6EFPairC
SaySo23ECTransferMessageActionCG
So30ECTransferMessageActionResultsC_So07ECLocalbC0Ct
SaySo30ECTransferMessageActionResultsC_So07ECLocalbC0CtG
So37ECTransferMessageActionResultsBuilder_pIgg_
SaySo15ECServerMessageCG
SaySo16MFLibraryMessageCG
SaySo25ECFlagChangeMessageActionCG
So32ECFlagChangeMessageActionResultsC_So07ECLocalcD0Ct
SaySo32ECFlagChangeMessageActionResultsC_So07ECLocalcD0CtG
So9ECMessage_p
SaySo9ECMessage_pG
So39ECFlagChangeMessageActionResultsBuilder_pIgg_
So21ECMessageFlagsBuilder_pIgg_
SaySo6EFPairCG
So14ECMessageFlagsC
So26ECMessageFlagChangeBuilder_pIgg_
_So14ECMessageFlagsCt
So14ECMessageFlagsCG
So27ECTransferMessageActionItemC
So14ECMessageFlagsCSg
Gz_Xx
ySaySo20ECLocalMessageActionCGG
yAAySaySo20ECLocalMessageActionCGSo012ECFlagChangebC0CSgGGAGG
Siz_Xx
yACy
yACySaySo20ECLocalMessageActionCGSo012ECFlagChangebC0CSgGGAIGSay
GGGG
yACy
yACySaySo20ECLocalMessageActionCGSo012ECFlagChangebC0CSgGGAIGSay
GGGG
So20MFMailMessageLibraryCSg
So12MFMailboxUidC
So6NSDataCSg
SSSg
Iego_
Iegd_
Iegd_
Iegr_
SDySo10MFMimePartCSo6NSDataCG
SnySiG
SJSg
So18MFLibraryIMAPStoreC
So26EDServerMessagePersistenceC
So22EDMessageChangeManagerC
SaySo7NSValueCG
Sg_ABt
So15EDMailboxActionC
SaySo12MFMailboxUidCG
_AAt
SaySo15EDMailboxActionCG
AB_G
_Sit
_SitG
ypSg
yS2SG
So23ECTransferMessageActionC
So26ECIMAPServerMessageBuilder_pIgg_
yAAySaySo20ECLocalMessageActionCGSo010ECTransferbC0CSgGGAGG
yACy
yACySaySo20ECLocalMessageActionCGSo010ECTransferbC0CSgGGAIGSay
GGGG
yABy
yABySaySo20ECLocalMessageActionCGSo010ECTransferbC0CSgGGAHGSay
yAAy
yAAySaySo20ECLocalMessageActionCGSo010ECTransferbC0CSgGGAGGSay
ySaySo20ECLocalMessageActionCGSo010ECTransferbC0CSgGG
ySaySo20ECLocalMessageActionCGSo010ECTransferbC0CSgG
yADy
yADySaySo20ECLocalMessageActionCGSo010ECTransferbC0CSgGGAJGSay
GGGGG
Iegr_
So20ECLocalMessageActionCSg
So23ECTransferMessageActionC_So0abC4ItemCt
yAAySaySo20ECLocalMessageActionCGSo010ECTransferbC0C_So0dbC4ItemCtSgGGAG_AItG
ySaySo20ECLocalMessageActionCGSo010ECTransferbC0C_So0dbC4ItemCtSgGG
ySaySo20ECLocalMessageActionCGSo010ECTransferbC0C_So0dbC4ItemCtSgG
So9EFPromiseCySo6NSDataCG
ySay
So8EFFutureC
So9EFPromiseC
SaySo20ECLocalMessageActionCGSg
SaySo15EDMailboxActionCGSg
So18EFCancelationTokenC
Iegd_
_SDy
7mailbox_Say
G8messagest
7mailbox_
7message
5flags
Sg12creationDate
4datat
7mailbox_
4kind
7messageSay
G8sectionsSb22downloadMessageHeaderst
7mailbox_
4kindSDy
G8messagest
GIego_
7mailbox_
G4uidsSay
yADGG2int
Iegd_
Igy_
SgIegd_
So13EDBaseMessage_p
SaySo22MFIMAPMessageWithCacheCG
SaySo13EDBaseMessage_pG
So18EDPersistedMessage_p
GIegr_
GIegd_
SbIegd_
Iegd_
Iegr_
yACy
yACySaySo20ECLocalMessageActionCGSo010ECTransferbC0CSgGGAIGSay
GGGG
yABy
yABySaySo20ECLocalMessageActionCGSo010ECTransferbC0CSgGGAHGSay
yAAy
yAAySaySo20ECLocalMessageActionCGSo010ECTransferbC0CSgGGAGGSay
yADy
yADySaySo20ECLocalMessageActionCGSo010ECTransferbC0CSgGGAJGSay
GGGGG
SaySo20ECLocalMessageActionC_So0abC7ResultsCtG
So20ECLocalMessageActionC_So0abC7ResultsCt
ySaySo9ECMessage_pGG
SgIegnyr_
ySDy
yAAySDy
SgGGAFG
Iegd_
Iegr_
So39MFBackFillingMessageBodyDownloadRequest_p
SgXwz_Xx
Iegd_
Iegr_
SaySo12MFMailboxUidCGSg
Ieg_
_So10EMActivityCt
tSgyc
SgXw
ytSg
IeyB_
SgSbt
SgIegr_
So12EFObservableCy
So8EFFutureCSg
SNySiG
4into_Shy
G5flags
Sg4date
7messaget
SnySiG
SaySSG
ySiG
3key_
5valuetG
3key_
5valuet
_SitG
_Sit
ySSG
_ABtG
_AAt
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
ySny
SgtG
__GG
ySi6offset_Sny
Sgt7elementtG
Si6offset_Sny
Sgt7elementt
__GG
yyXlG
__GG
__GG
__GG
7oldName_t
$ss12IdentifiableP
Sg_ABt
_pSg
ySnySiGG
$sSY
3key_
5valuetSg
G_Say
SJSg
G7missing_
yABG4doneABSg11lastSeenUIDt
Sg11lastSeenUID_t
$s13IMAP2Behavior022PendingServerResponsesB0P
_p_AA_pt
_AAt
Si5count_t
$ss12CaseIterableP
ySSSay
SSSg
SbSg
SaySSGSg
SDySSSay
SDyS2SG
ySSSay
yS2SG
_GShyADGG
yAB_GG
$s13IMAP2Behavior17AuthenticatedTaskP
8ActionID
9CommandID
$s13IMAP2Behavior11BoxProtocol33_60155CC90A692337B0235A3D21BA77E9LLP
y9CommandID
Qz06ActionB0ACQz_G
$s13IMAP2Behavior11MailboxTaskP
8ActionID
9CommandID
$s13IMAP2Behavior11BoxProtocol33_B65632C0EC6A6864CD47FEF18522012DLLP
y9CommandID
Qz06ActionB0ACQz_G
_pIgngdzo_
ypXp
_AAt
$s13IMAP2Behavior12EnumWithKindP
4Kind
yxq___GG
yxq___GG
yxq__G
13sourceMailbox_Si5limitt
Iego_
Iegd_
Iego_
Iego_
Iegd_
Iegr_
SSIego_
Iegr_
SgIegd_
Iegd_
Iegr_
Iegd_
Iegd_
7mailbox_SNy
G5range
yACG4keept
7mailbox_Say
GG2int
SiSg
7mailbox_
4kind
7messaget
So8NSObjectCSg
7mailbox_
7message
0B7Headerst
7mailbox_
4kind
7message
0C4Size
13bodyStructuret
7mailbox_
Sg5valuet
7mailbox_Say
7mailbox_
4kind
G9excludingSiSg8inLatestSi5limitt
_Shy
_G_G
Iego_
13sourceMailbox_SDy
_A13At
7mailbox_
8metadatat
7mailbox_Say
G7updatest
7mailbox_
Sg5valuet
7mailbox_Si5limitt
7mailbox_
7message
5flags
Sg12creationDate
4datat
7mailbox_
7messaget
7mailbox_
7message
Sg3uidt
$ss25ExpressibleByArrayLiteralP
SDyx
yx_GG
_GGIgo_
yx_GG
yx_GShyABGG
SgtSg
8existing_Sny
G6addingt
8existing_
10totalCountt
6offset_t
11knownLength_AA6offsett
8knownMax_AA6offsetSi5countt
7minimum_AA3maxt
SaySny
SgtG
$ss9OptionSetP
$ss10SetAlgebraP
$sSY
$ss25ExpressibleByArrayLiteralP
_A7At
_A103At
_A5At
_A111At
_A13At
ySiG
ySny
SvSgSiXC
SvSgAA_SitXC
ySvSgXC
ySv_SVSitXC
SnySiG
$sSk
$sSK
$sSl
$sST
$sSM
$sSm
qd__
xxIegnr_
ySiG
ySiG
yx_G
yxGG
yxGG
yxSgG
xXMT
7address_SS4hosttG
7address_SS4hosttG
SS4host_Si4portt
$s12NIOIMAPCore216SockAddrProtocolP
SiSg
ySiSgG
SS_SSt
ySS_SStG
ySay
ySSG
ySay
yyXlG
ySiG
7options_t
Sb19streamingAttributes_
7optionst
ySay
ySSSgG
SSSg
14remainingBytest
16lineFeedStrategy_
9remainingt
$ss26ExpressibleByStringLiteralP
$ss43ExpressibleByExtendedGraphemeClusterLiteralP
$ss33ExpressibleByUnicodeScalarLiteralP
yS2SG
SaySSG
_Say
_Say
9reference
9reference
9reference_
7patternt
4from_AA2to
SgG10parameterst
_Say
9mechanism_
Sg15initialResponset
SS8username_SS8passwordt
GG_Say
GSay
GG_Say
3key_SSSg7charsetSay
G13returnOptionst
yS2SSgG
GG_Say
GSay
GG_Say
_Say
G7options_
7mailboxSay
G7entriest
7mailbox_
G7entriest
Sg7mailbox_Say
G10mechanismst
SS4name_Say
G8payloadst
SS3tag_
11appendingTot
7message_t
7options_t
Si4size_t
Sb10extensions_t
Sb4peek_
GSgt
Sb4peek_
7sectionSNy
GSg7partialt
7section_t
$s12NIOIMAPCore213IMAPEncodableP
$ss12CaseIterableP
SaySS_SStG
SaySiG
SJSg
_Sb16hasExtensionDatat
7section_
Sg4datat
7section_Si4sizet
G6values_
7mailboxt
G4list_
7mailboxt
$ss27ExpressibleByIntegerLiteralP
$sSx
SayABGG
yS2SG
Si_SS5topict
4kind_Si9byteCountt
7section_SiSg6offsett
7section_SiSg6offsett
_Say
SS_SSSgt
_AAt
$s12NIOIMAPCore217MessageIdentifierP
6StrideSxQz
SNyxG
yx_GG
yx_GG
yx_G
yxGG
yxGG
yxGG
4path_
Sg16authenticatedURLt
3ref_
3uid
Sg7section
Sg7partialt
3uid_
Sg7section
Sg7partialt
7section_
Sg7partialt
Iegd_
SgIegd_
GIegd_
GIego_
GIego_
Iegd_
SgIegd_
Iegd_
SgIegd_
Iegd_
SgIegd_
Iego_
Iego_
Iego_
Iego_
GIego_
Iego_
Iego_
Iego_
$s12NIOIMAPCore220ByteToMessageDecoderP
$s12NIOIMAPCore220MessageToByteEncoderP
Sb16seenPreviousPart_t
tKcG
_pIeglyozo_
ySS_
tKctG
_pIeglyrzo_
tKcG
tKcG
_pIeglyrzo_
tKcG
_pIeglyrzo_
ySay
tKcG
_pIeglyozo_
ySS_
tKctG
_pIeglyrzo_
tKcG
_pIeglyrzo_
tKcG
_pIeglyrzo_
tKcG
_pIeglydzo_
tKcG
_pIeglyozo_
ySS_
tKctG
_pIeglyrzo_
tKcG
tKcG
tKcG
tKcG
_pIeglyozo_
tKcG
_pIeglyrzo_
tKcG
_pIeglyozo_
ySS_
tKcG
_pIeglyozo_
S2Sc
tKcG
_pIeglyozo_
tKcG
_pIeglyozo_
ySS_SSSgtG
tKcG
_pIeglyozo_
tKcG
_pIeglyozo_
tKcG
_pIeglyozo_
ySay
tKcG
_pIeglyozo_
tKcG
_pIeglyrzo_
tKcG
_pIeglyozo_
$s12NIOIMAPCore26ParserP
S2SIegnr_
S2SIeggo_
Si14attributeCount_t
Si_Si14attributeCountt
tKcG
_pIeglyrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
tKcG
_pIeglyozo_
7ElementSTQz
yx_G
yxGG
yxGG
5IndexSlQz
y5IndexSlQzG
x5first_x6secondt
yxGG
yxGG
SnyxG
yx_GG
yx_GG
yxGG
yxGG
Si4high_
3lowt
SaySnyxGG
yx_G
$s12NIOIMAPCore222_ByteBufferAPITemplateP
$s12NIOIMAPCore226_ByteBufferViewAPITemplateP
$sSt
yx_G
yxGG
yx_G
yypG
SpyxG
yytG
SRyxG
SRyxGSg
SryxG
SryxGSg
ySaySiSgGSSG
SaySiSgG
x3key_q_5valuet
yxq____G
yxq___G
yxq_G
yxq__G
$ss30ExpressibleByDictionaryLiteralP
yxq__GG
yxq__GG
yq_G
yx_GG
SiSg5index_
6buckett
yxGG
yx_G
yx_GG
ySVSgXC
SbSVSgXC
xSgIegr_
SgIego_
SVSg_A2BXBtXC
SVSg
SVSgSPy
GSgXC
Iegd_
Iego_
Iego_
Iegd_
$sSY
4into_Shy
G5flags
Sg4date
7messaget
SaySSG
9mechanism_
Sg15initialResponset
SS8username_SS8passwordt
_Shy
4from_AA2tot
Sg9reference_AB11namePatternt
_Say
_Say
G13returnOptionst
G8messages_
4datat
G8messages_
4datat
G8messages_
5itemst
G8messages_
2tot
yS2SSgG
ySSSgG
SSSg
ySSG
Sg_ABt
_AAt
$sSY
ypSg
Iego_
Iegd_
Iegd_
Iegd_
Iegd_
Iegr_
SJSg
_A13At
$ss12IdentifiableP
$ss12CaseIterableP
SnySiG
ySnySiGG
ySS_
SSSgGtG
SiSg
$sSY
7mailbox_
8metadatat
7mailbox_Say
GG2int
7mailbox_Say
7mailbox_SNy
G5range
yACG4keept
7mailbox_
Sg5valuet
7mailbox_
Sg5valuet
7mailbox_
4kind
G9excludingSiSg8inLatestSi5limitt
7mailbox_
4kind
7message
0C4Size
13bodyStructuret
7mailbox_
7message
0B7Headerst
7mailbox_
4kind
7messaget
7mailbox_Say
G7updatest
7mailbox_Si5limitt
7mailbox_
7messaget
7mailbox_
7message
Sg3uidt
13sourceMailbox_Si5limitt
13sourceMailbox_SDy
_Shy
Si9remaining_Si9completedt
_AA8password
11requirementt
8personID_AA5tokenAA07machineB0AA15oneTimePasswordAA10clientInfo
11requirementt
SS8username_SS11accessToken
11requirementt
11requirement_t
$ss12IdentifiableP
7mailbox_
G4uidsSay
yADGG2int
7mailbox_
4kindSDy
G8messagest
7mailbox_
4kind
7messageSay
G8sectionsSb22downloadMessageHeaderst
7mailbox_Say
GSb6isLastt
7mailbox_
7message
5flags
Sg12creationDate
4datat
7mailbox_Say
GSb6isLastt
7mailbox_Say
G8messagest
13sourceMailbox_Say
GSb6isLastt
_SDy
Sg_ABt
SbG_SStG
SaySSG
$ss12CaseIterableP
SbSg
SnySiG
ySSG
Iegr_
SgIegd_
Iegd_
Iegd_
Iegd_
Iegd_
Iegd_
Iegd_
Iegd_
Iegd_
Iegd_
7oldName_t
_AAt
SiSg
$ss27ExpressibleByIntegerLiteralP
7ElementSTQz
ySnySiGG
SvSgAA_
ABtXCSg
ySvSg_AAtXCSg
SvSg
$sSY
SaySSG
$s15IMAP2Connection23AuthenticationMechanismP
$s15IMAP2Connection27SASLAuthenticationMechanismP
_p_AA_pt
Sg_ABt
SS8username_SS8passwordt
8username_AA8passwordt
8personID_AA5tokenAA07machineB0AA15oneTimePasswordAA10clientInfot
SS8username_SS11accessTokent
SSSg
So17OS_dispatch_queueC
_pSgXw
yySay
Sgcc
$s15IMAP2Connection07CommandB8DelegateP
So8NSObjectCSg
SgXw
SgXw
GIegg_Iegg_
SgXwz_Xx
SgIegn_Iegg_
_AAt
_Gz_Xx
$sST
Si6offset_
7elementt
$s15IMAP2Connection0B8DelegateP
_pSgXw
4into_Shy
G5flags
Sg4date
7messaget
_AAt
_AAt
_pSg
SgXwz_Xx
Sgz_Xx
SgSb
SgIegggyn_
_A13At
_AAt
Sg13failedMailbox_t
ypSg
yyXlG
_Sit
_pSg
SgIegn_
SbIegy_
SiSg
yS2SSgG
yS2SSgGSg
SnySiG
_ptG
$ss12CaseIterableP
$ss12IdentifiableP
SbSg
ySnySiGG
ySSG
ySi_
ySSSgG
$s15IMAP2Connection4TaskP
9mechanism_
Sg15initialResponset
SgXw
SgXwz_Xx
Ieg_
So24OS_dispatch_source_timer_pSg
_Say
_AAt
_ptG
_pSg
So17OS_dispatch_queueC
_pSgXw
So24OS_dispatch_source_timer_pSg
$s22IMAP2ConnectionControl27BetterPathEvaluatorDelegateP
SgXw
yySay
Sgcc
SgXw
SgXw
$s22IMAP2ConnectionControl11PersistenceP
_pSgXw
$s22IMAP2ConnectionControl0B12PoolDelegateP
yyXlG
SSSg
change
started
stopped
rawValue
ArrayLiteralElement
RawValue
Element
messageSize
_rawValue
_ObjectiveCType
didSetCriteria
activity
accountProvider
queue
complete
pendingWork
noWork
error
scheduler
underlying
running
timer
didComplete
elements
request
status
RawValue
queue
token
persistenceAdaptor
username
appleToken
oAuthToken
environment
opaqueIDCoder
nameMapping
updates
flags
library
mailbox
taskManager
kind
existingHeaders
newMessageHeaders
concatenators
sections
part
full
data
isPartial
mailbox
message
messageHeaders
invalidUID
noHeaders
account
logger
pathSeparator
mailbox
mailboxURL
account
store
serverMessagePersistence
messageChangeManager
actionPersistentID
messagePersistentID
operation
sourceMessage
targetMailbox
reference
move
copy
RawValue
created
deleted
renamed
oldNamesForRenamedMailboxes
didChange
noChanges
rawValue
account
mailboxes
changedParents
insertedMailboxes
mailbox
originalChildren
path
found
parent
topLevel
notFound
displayName
imapName
RawValue
elements
message
mailbox
unableToFindPersistedMessage
message
section
initial
temporaryFile
concatenator
complete
invalid
data
count
move
result
action
item
sourceUID
destinationPersistentID
targetMailbox
actionPersistentID
encoder
decoder
nextID
messageRequests
opaqueMessageID
mailbox
messageSize
dataPromise
_nextActionID
_sendReply
messagesBeingDownloaded
_mailboxPathSeparator
didTearDown
lastActivity
emailActivities
statusIsolationQueue
account
workQueue
opaqueIDCoder
nameMapping
logger
_allLocalMessageActions
_allLocalMailboxActions
lastKnownLocalAction
downloads
clientStateObserver
cancelationToken
runningSyncs
currentBackFillSync
unableToGetDataSource
flags
creationDate
data
elements
nextID
request
completion
complete
pendingWork
persistenceWorkloop
queue
logger
identifier
makeEngineAndAdaptor
_engine
_adaptor
engineIsolation
bodyFetchContext
notImplemented
taskManager
anyConnection
withAffinity
createAffinity
deselect
connection
mailbox
maximumIdleConnectionCount
maximumConnectionCount
activelyConnecting
other
limits
usage
draft
flagged
forwarded
redirected
forwardedRedirectedLegacy
junk
notJunk
junkLegacy
supportsFlagColorFlags
supportsForwarded
supportsRedirected
supportsJunk
supportsColoredLabel
remove
connection
syncState
mailboxOfInterest
selectedState
syncRequests
userInitiatedDownloads
tracingID
rawValue
RawValue
mailboxes
mailboxesCreatedOnRemote
userVisibleMailboxes
_nextTracingID
unknown
known
messageCount
nextUID
uidValidity
highestModificationSequence
flagEncoder
flagDecoder
syncSteps
messagesWithTemporaryUploadFailure
pendingServerResponses
pendingPersistenceUpdates
userInitiatedDownloadUIDs
missingMessages
pending
done
completed
unknown
needsToUploadMessages
needsToUploadFlagChanges
needsToMoveAndCopyMessages
messagesPendingTextDownload
messagesPendingAttachmentDownload
messagesWithDownloadFailures
flags
gmailLabels
basic
condStore
behavior
expungedMessages
sequenceNumber
change
many
noChange
clear
changesWithUID
changesWithoutUID
newModificationSequenceValue
sequenceUpdates
changesWithUID
changesWithoutUID
_newModificationSequenceValue
newModificationSequenceValue
commandsToWaitOn
sequenceValue
server
mailboxes
mailboxesNeedToBeUpdated
separator
moveSupport
gmailLabelSupport
condStoreSupport
sequenceNumberBehavior
extendedSearchSupport
supported
unavailable
compliant
bogus
environment
mostRecentPathAttributes
runningSyncRequests
remote
local
blockedSteps
listMailboxes
createMailboxes
syncMailboxes
deleteMailboxes
task
completedMailboxes
completedSteps
stepsToRestart
stepsWithDependencies
resync
fetchMessages
detectRemovedMessages
detectRemovedMessagesInRecent
detectFlagChanges
detectFlagChangesInRecent
uploadMessages
uploadFlagChanges
moveAndCopyMessages
expungeServerMessages
findPendingTextDownload
findPendingAttachmentDownload
updateLocalFlags
findMissingMessages
AllCases
userInitiatedDownload
userVisible
activeTask
activeSync
needsSync
priorityOrder
reasons
visible
notVisible
logName
engineID
state
tasks
mailboxesToSelect
environment
mostRecentPathAttributes
runningSyncRequests
remote
local
mailboxes
usage
needsToUploadMessages
needsToUploadFlagChanges
needsToMoveAndCopyMessages
messagesPendingTextDownload
messagesPendingAttachmentDownload
messagesWithDownloadFailures
constrained
kind
server
mailboxesNeedToBeUpdated
separator
pendingSync
downloadRequests
userVisibleMailboxes
mailbox
connection
history
authenticatedTask
mailboxTask
completed
failed
name
mailboxOfInterest
selectedConnection
syncState
syncRequests
userInitiatedDownloads
message
size
pending
done
messageCount
nextUID
uidValidity
highestModificationSequence
syncSteps
messagesWithTemporaryUploadFailure
pendingServerResponses
pendingPersistenceUpdates
userInitiatedDownloadUIDs
missingMessages
pathSeparator
attributes
specialUse
supportsMove
supportsGmailLabels
supportsCondStore
bogusSequenceNumberBehavior
runningCommands
runningActions
completedCommandCount
completedActionCount
lowestUID
lastSeenUID
highestModificationSequenceValue
unknown
missing
state
runningTasks
logName
logger
error
connection
selectedMailbox
runningCommands
messageBodyDownload
fetchMessages
detectChangesToMessages
onlyNew
idMap
unknownRunningTaskCommandID
unknownRunningTaskActionID
prerequisiteSyncSteps
idMap
unknownRunningTaskCommandID
unknownRunningTaskActionID
task
history
logger
tracingID
actionIDGenerator
commandIDGenerator
notifyTaskStarted
notifyTaskCompleted
rawValue
authenticated
mailbox
failed
completed
mailboxHasConnectionAffinityButNoSyncStateAvailable
RawValue
current
tracingID
tasks
nextTaskTracingID
schedulingRandomNumberGenerator
task
value
authenticated
mailbox
command
action
running
previous
commands
actions
underlying
runningTaskID
customID
debugDescription
mailboxes
createdMailboxes
CommandID
ActionID
notifyFailure
create
list
unknown
inUse
failure
success
results
mailboxesToCheckForPendingMessages
mailboxesToDelete
CommandID
ActionID
checkForPendingMoveAndCopy
notifyOfDelete
mailbox
mailbox
syncSteps
gmailLabels
fetchModificationSequence
flagChangesBeforeRequesting
existingUIDs
sequenceNumberBehavior
CommandID
ActionID
removeUnknownMessages
fetch
mailbox
syncSteps
rangeOfInterest
remoteMessageCount
uidsFoundLocally
gmailLabels
flagChangesBeforeRequesting
expungedMessagesBeforeRequesting
existingUIDs
sequenceNumberBehavior
CommandID
ActionID
getLocalUIDs
removeUnknownMessages
fetch
mailbox
lastSeenUID
extendedSearch
uidsRemainingOnServer
expungedMessagesBeforeRequestingCount
CommandID
ActionID
removeUnknownMessages
search
mailbox
rangeOfInterest
remoteMessageCount
extendedSearch
uidsFoundLocally
uidsRemainingOnServer
expungedMessagesBeforeRequesting
CommandID
ActionID
getLocalUIDs
removeUnknownMessages
search
Kind
mailboxName
messageSectionKind
fetchBodyStructure
fetchMessageHeaders
fetchSectionData
syncSteps
kind
batch
inProgressMessages
fullMessageDownloadUIDs
CommandID
ActionID
chooseMessageDataToDownload
messageHeadersDownloaded
didDownloadAllSections
findNewestMessagesMissingSections
appendMessageSectionData
userInitiated
mailbox
messages
AllCases
part
downloadStatus
headers
message
headerStatus
sectionsInProgress
completedSections
section
fullMessage
downloaded
notRequested
requested
inProgress
mailbox
messagesWithBodyStructure
sectionsBeingDownloaded
messagesWithFailures
completeMessageSize
bodyStructure
messages
section
range
mailbox
message
section
byteCountUpperBound
resequencer
didSendInitialData
didFail
mailbox
syncSteps
CommandID
ActionID
response
expunge
syncSteps
mailbox
serverMessages
allMissingUIDs
persistedLastSeenUID
newLastSeenUID
CommandID
ActionID
createNewMessage
updateLastSeenUID
fetch
debugDescription
mailbox
syncSteps
queryRanges
extendedSearch
uidCountLimit
serverUIDs
localUIDs
CommandID
ActionID
searchLocal
searchServer
range
persistence
elements
lastSeenUID
needToQuery
knownToNotExist
mailboxName
messageSectionKind
messagesToDownload
mailbox
syncSteps
kind
exclude
inLatest
CommandID
ActionID
findNewestMessagesMissingSections
mailbox
messages
syncSteps
uidAndSizes
CommandID
ActionID
getUIDsForDownloadRequests
newMailboxes
separator
CommandID
ActionID
updateRemoteMailboxes
listMailboxes
Kind
markAsDeleted
copy
move
mailbox
syncSteps
moveSupport
messageCount
needsToRunAgain
commandsToRun
completedCommands
targetMailboxesNeedingFindMissingMessages
targetMailboxesNeedingUpload
CommandID
ActionID
source
target
targetMailbox
messages
operation
targetMessage
result
findMessages
completed
mailbox
uids
flagDecoder
gmailLabels
messages
debugDescription
requestIDs
CommandID
ActionID
syncRequestsDidComplete
mailbox
syncSteps
localModSeq
serverModSeq
flagChangesBeforeRequesting
gmailLabels
CommandID
ActionID
fetch
mailbox
syncSteps
oldValidityValue
newMeta
CommandID
ActionID
removeMessages
mailboxesToRename
renamedMailboxes
CommandID
ActionID
mailbox
syncSteps
mailbox
needsToRunAgain
sentChanges
updateCount
CommandID
ActionID
updateModSeq
updateFlags
mailbox
syncSteps
flagsToUpload
uploadedMessageCount
needsToRunAgain
didDeleteMessage
dependencyStatus
CommandID
ActionID
persistence
encoded
empty
unknown
waiting
noDependencies
hasDependencies
messages
update
pendingAdd
elements
remainingElements
findDependencies
findMessages
store
Kind
message
flags
creationDate
data
reportUploadCompletion
findMessages
sendMessageData
mailbox
syncSteps
messagesToUpload
remainingMessagesToUpload
pending
currentMessageBeingUploaded
messagesWithTemporaryFailures
completed
needsToRunAgain
CommandID
ActionID
status
append
success
permanentFailure
network
networkStatusDidChange
persistence
checkForWork
message
kind
response
ArrayLiteralElement
running
completed
graph
state
value
nodes
incoming
outgoing
ArrayLiteralElement
duplicateUID
duplicateSequenceNumber
sequenceNumbersHaveGaps
validRange
uids
sequenceNumbers
error
data
noData
offsetIsNotMultipleOfSegmentLength
dataSpansMultipleSegments
someBytesAreDuplicated
bytesAlreadyDownloadedWhenAddingCompleteRange
receivedDataPastKnownEnd
receivedDataPastKnownMax
dataSpansPastKnownMaximumAfterInsert
rawValue
segments
bodyOffset
knownByteCount
exactly
lessThanOrEqual
unknown
RawValue
Element
RawValue
ArrayLiteralElement
rawValue
sin_len
sin_family
sin_port
sin_addr
sin_zero
sin6_len
sin6_family
sin6_port
sin6_flowinfo
sin6_addr
sin6_scope_id
sun_len
sun_family
sun_path
__u6_addr
metadata
refCounts
ss_len
ss_family
__ss_pad1
__ss_align
__ss_pad2
s_addr
sa_len
sa_family
sa_data
invalidCharacter
invalidLength
unexpectedPaddingCharacter
unexpectedEnd
RawValue
rawValue
upperBound
_begin
malloc
realloc
free
memcpy
_storage
_readerIndex
_writerIndex
_slice
capacity
bytes
allocator
baseError
negativeLength
unreadableSourceBytes
little
Element
Index
SubSequence
Indices
Iterator
ArrayLiteralElement
_buffer
_range
Element
Index
Iterator
SubSequence
Indices
ArrayLiteralElement
_buffer
headBackingIndex
tailBackingIndex
_backingIndex
_backingCheck
isIndexGEQHeadIndex
failureDescription
error
function
reason
errno
_backing
name
address
netmask
broadcastAddress
pointToPointDestinationAddress
multicastSupported
interfaceIndex
backing
unknown
failedToParseIPString
unsupported
unixDomainSocketPathTooLong
address
unixDomainSocket
_storage
value
buffer
encodedAtLeastOneCatenateElement
useQuotedString
useSynchronizingLiteral
useNonSynchronizingLiteralPlus
useNonSynchronizingLiteralMinus
useBinaryLiteral
loggingMode
mode
buffer
stopPoints
client
server
bytes
waitForContinuation
buffer
complete
incomplete
insideLiteral
invalid
state
frameLength
bufferSizeLimit
normalTraversal
searchingForLiteralHeader
insideQuoted
foundCR
ignoreFirst
includeInFrame
findingSize
findingLiteralExtension
findingClosingCurly
findingCR
findingBinaryFlag
normal
escaped
command
submit
user
authenticateUser
anonymous
byteCount
withoutContentTransferEncoding
options
data
flagList
internalDate
extensions
stringValue
authenticatedURL
verifier
expire
access
urlAuthenticationMechanism
encodedAuthenticationURL
rawValue
Element
Index
SubSequence
Indices
Iterator
singlepart
multipart
stringValue
string
number
RawValue
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
rawValue
kind
parameters
disposition
language
stringValue
parameters
contentDescription
encoding
octetCount
languages
location
location
extensions
parts
mediaSubtype
extension
parameters
dispositionAndLanguage
kind
fields
extension
basic
message
text
envelope
body
lineCount
mediaText
digest
dispositionAndLanguage
rawValue
splitIndex
modificationSequence
create
delete
examine
list
listIndependent
lsub
rename
select
status
subscribe
unsubscribe
authenticate
login
enable
copy
fetch
store
search
move
uidCopy
uidMove
uidFetch
uidSearch
uidStore
uidExpunge
getQuota
getQuotaRoot
setQuota
getMetadata
setMetadata
extendedSearch
resetKey
generateAuthorizedURL
urlFetch
compress
custom
capability
logout
noop
startTLS
check
close
expunge
unselect
idleStart
namespace
start
beginMessage
messageBytes
beginCatenate
catenateURL
catenateData
endMessage
endCatenate
finish
begin
bytes
tagged
append
continuationResponse
idleDone
literal
verbatim
command
labelled
attributes
year
month
rawValue
year
month
hour
minute
second
zoneMinutes
token
atom
charset
returnOptions
sourceOptions
content
sourceMailbox
scopeOptions
personName
sourceRoot
mailbox
host
authenticationType
mailbox
query
mailboxUIDValidity
encodedSearch
section
data
data
flag
backing
backing
date
subject
from
sender
reply
inReplyTo
messageID
dateTime
bodyStructure
bodySection
modificationSequenceValue
binary
binarySize
envelope
flags
internalDate
rfc822
rfc822Header
rfc822Size
rfc822Text
modificationSequence
gmailMessageID
gmailThreadID
gmailLabels
modificationSequenceValue
changedSince
other
stringValue
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
rawValue
flag
wildcard
RawValue
remove
replace
flags
gmailLabels
operation
silent
networkMessagePath
authenticatedURL
date
time
year
month
hour
minute
second
fraction
userAuthenticationMechanism
host
port
server
command
type
data
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
value
value
lastCommand
option
subscribed
option
remote
specialUse
option
subscribed
remote
specialUse
recursiveMatch
baseOption
options
RawValue
AllCases
messageCount
recentCount
uidNext
uidValidity
unseenCount
size
highestModificationSequence
nextUID
flags
list
lsub
search
extendedSearch
status
exists
recent
namespace
searchSort
identifiers
modificationSequence
groupName
sourceRoot
children
singleAddress
group
attributes
path
extensions
backing
maximumSize
actualSize
description
name
pathSeparator
bytes
hashValue
mailbox
pattern
encodedMailbox
uidValidity
mechanism
base64
stringValue
kind
subtype
RawValue
rfc822
buffer
flags
envelope
internalDate
rfc822Size
body
binary
binarySize
fetchModificationResponse
gmailMessageID
gmailThreadID
gmailLabels
expunge
vanished
vanishedEarlier
generateAuthorizedURL
urlFetch
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
rawValue
mailboxReference
iUID
section
range
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
backing
maxSize
scope
other
values
list
bytes
IntegerLiteralType
Stride
value
string
delimiter
responseExtensions
userNamespace
otherUserNamespace
sharedNamespace
server
messagePath
server
command
subtree
mailboxes
subtreeOne
inboxes
personal
subscribed
selected
selectedDelayed
content
standard
vendor
ArrayLiteralElement
string
array
range
offset
length
resourceName
limit
resourceName
usage
limit
storage
networkPath
absolutePath
empty
mailbox
version
responseText
data
correlator
returnData
continuationRequest
response
untagged
fetch
tagged
fatal
authenticationChallenge
idleStarted
start
simpleAttribute
streamingBegin
streamingBytes
streamingEnd
finish
binary
body
rfc822
rfc822Text
rfc822Header
uidValidity
uids
destinationUIDValidity
sourceUIDs
destinationUIDs
conditionalState
mailboxData
messageData
capabilityData
enableData
quotaRoot
quota
metadata
applePushService
code
text
badCharset
capability
permanentFlags
uidNext
uidValidity
unseen
namespace
uidAppend
uidCopy
other
modified
highestModificationSequence
metadataLongEntries
metadataMaxsize
urlMechanisms
referral
alert
parse
readOnly
readWrite
tryCreate
uidNotSticky
useAttribute
notSaved
closed
noModificationSequence
metadataTooMany
metadataNoPrivate
unavailable
authenticationFailed
authorizationFailed
expired
privacyRequired
contactAdmin
noPermission
inUse
expungeIssued
corruption
serverBug
clientBug
cannot
limit
overQuota
alreadyExists
nonExistent
compressionActive
state
preauth
statusOption
optionExtension
subscribed
children
specialUse
authenticatedURL
authenticatedURLRump
urlRump
mechanism
_backing
zero
infinity
RawValue
mailbox
uidValidity
before
body
from
keyword
since
subject
text
unkeyword
header
messageSizeLarger
sentBefore
sentOn
sentSince
messageSizeSmaller
sequenceNumbers
older
younger
filter
modificationSequence
answered
deleted
flagged
recent
seen
unanswered
undeleted
unflagged
unseen
draft
undraft
extensions
sequenceValue
count
modificationSequence
dataExtension
optionExtension
count
save
ArrayLiteralElement
part
kind
array
headerFields
headerFieldsNot
complete
header
MIMEHeader
text
uidValidity
modificationSequenceValue
knownUIDs
sequenceMatchData
basic
qresync
condStore
IntegerLiteralType
Stride
rawValue
knownSequenceSet
knownUidSet
identifiers
modificationSequence
unchangedSince
other
sequence
comp
IntegerLiteralType
Stride
rawValue
IntegerLiteralType
range
Element
Index
SubSequence
Indices
Iterator
ArrayLiteralElement
_ranges
underlying
rangeIndex
indexInRange
rawValue
Stride
ArrayLiteralElement
IntegerLiteralType
Stride
rawValue
IntegerLiteralType
rawValue
stringValue
messageList
fetch
data
refUidSectionPartial
uidSectionPartial
sectionPartial
partialOnly
encodedSection
stringValue
encodedUser
authenticationMechanism
engine
mailbox
byteCount
buffer
responses
continue
needMoreData
numberOfSynchronisingLiterals
commandPart
parser
bufferLimit
mode
synchronisingLiteralParser
streamingBytes
waitingForCatenatePart
streamingCatenateBytes
lines
idle
waitingForMessage
streamingEnd
streamingCatenateEnd
append
catenate
start
simpleAttribute
literalStreamingBegin
quotedStreamingBegin
finish
messages
uidNext
uidValidity
unseen
size
recent
highestModifierSequence
parsedStringCache
literalSizeLimit
messageBodySizeLimit
stackDepth
maximumStackDepth
parser
bufferLimit
messageAttributeLimit
bodySizeLimit
mode
response
streamingQuoted
attributeBytes
fetchMiddle
fetchOrNormal
untaggedResponse
fetchResponse
offset
synchronisingLiterals
state
maximumValidBytes
synchronizingLiteralCount
waitingForLiteralBytes
waitingForCompleteLine
commandTag
parserError
hint
file
line
limit
bytes
noFlagChanges
noFlagReads
noMailboxCommandsRunning
noUntaggedExpungeResponse
noUIDBasedCommandRunning
changesFlags
readsFlags
changesMailboxSelection
dependsOnMailboxSelection
mayTriggerUntaggedExpunge
isUIDBased
barrier
buffer
useQuotedString
Element
Index
SubSequence
Indices
Iterator
_rangeOffset
base
subranges
pair
Element
Iterator
Index
SubSequence
Indices
_ranges
Element
Iterator
Index
SubSequence
Indices
SubSequence
Element
Iterator
Index
Indices
singleRange
variadic
empty
_storage
Element
Iterator
Index
SubSequence
Indices
_storage
_nextSlot
_endSlot
ArrayLiteralElement
_buffer
_header
_elements
_storage
capacity
count
startSlot
position
first
second
offset
_hashTable
_currentBucket
_currentRawValue
_nextBits
_remainingBitCount
_wrappedAround
_header
_buckets
_storage
_scaleAndSeed
_reservedScaleAndBias
Element
Iterator
Index
SubSequence
Indices
_base
_bounds
_end
_index
Element
Iterator
Index
SubSequence
Indices
_base
Value
Element
Iterator
_base
_position
Element
Iterator
Index
SubSequence
Indices
_base
_keys
_values
ArrayLiteralElement
Element
Iterator
Index
SubSequence
Indices
Element
Iterator
Index
SubSequence
Indices
_base
_bounds
ArrayLiteralElement
Element
_base
base
__storage
_elements
Element
Iterator
_words
_count
bitset
index
word
value
storage
rawValue
state
handle
description
encodedData
rawValue
tracingID
RawValue
rawValue
name
RawValue
engine
connection
action
command
task
localMailbox
authenticate
login
select
examine
create
delete
rename
list
status
append
uidSearch
extendedUIDSearch
fetch
uidFetch
uidStore
uidCopy
uidMove
registerPush
capability
noop
startTLS
check
close
expunge
compress
items
changedSince
condStore
searchUID
fetchUID
moveUID
storeUID
copyUID
command
metadata
refCounts
command
continuations
literal
messageBodyEncoding
mode
standard
plus
minus
binary
normal
logging
RawValue
rawValue
rawValue
message
mime
engine
connection
path
attributes
specialUse
RawValue
AllCases
noSelect
marked
unmarked
nonExistent
noInferiors
subscribed
remote
hasChildren
hasNoChildren
body
bodySections
bodyStructure
envelope
flags
gmailLabels
internalDate
messageSize
modificationSequence
section
origin
data
options
apsVersion
accountID
deviceToken
subtopic
mailboxes
topic
preAuth
capability
list
listSubscription
status
search
extendedSearch
flags
exists
recent
expunge
fetch
applePushService
untagged
commandCompletion
name
version
osVersion
vendor
supportURL
address
date
command
arguments
environment
outputBuffer
framingParser
responseParser
byteCountNeededToCompleteFrame
parsedFrames
response
framingError
parsingError
needMoreData
partialFetchResponse
invalidStateForPartialFetchResponse
runAwayFetchResponseWithTooManyParts
runAwayFetchResponseWithTooManyAttributes
runAwayFetchResponseWithTooMuchBinaryData
repeatedStreamBegin
streamingBytesBeforeBegin
streamingEndBeforeBegin
bodySectionOffsetOutOfRange
unexpectedAuthenticationChallenge
unexpectedIdleStart
underlying
input
invalidTag
invalidMessageSequenceNumber
valueOutOfRange
framingFailed
invalidFrame
section
offset
data
RawValue
AllCases
archive
drafts
flagged
junk
sent
trash
connectionIdentifier
commandCounter
RawValue
syncRequestsDidComplete
updateRemoteMailboxes
didDeselectMailboxes
removeAllMessagesAndUpdateMetadata
getMessageUIDs
createNewMessages
removeUnknownMessages
updateMailboxLastSeenUID
updateMailboxHighestModificationSequenceValue
findNewestMessagesMissingSections
chooseMessageDataToDownload
messageHeadersDownloaded
appendMessageSectionData
didDownloadAllSections
updateFlags
findMessagesToBeUploaded
sendMessageDataForUpload
didUploadMessage
failedToUploadMessage
findMessagesWithChangedFlags
findMessagesWithFlagChangeAppliedAfterCopy
findMovedOrCopiedMessages
didMoveOrCopyMessages
connectionStatusDidChange
failedToCreateMailboxOnServer
activityDidChange
getUIDsForDownloadRequests
downloadRequestsDidComplete
rawValue
validity
lastSeenUID
highestModificationSequenceValue
message
flags
gmailLabels
metadata
refCounts
elements
connected
serverUnreachable
connecting
authenticationFailed
error
fetchingMessages
downloadingMessageBodies
done
running
notStarted
username
appleToken
oAuthToken
preAuth
plaintextIsAllowed
requireTLS12
mailbox
message
kind
attachment
text
rawValue
power
isForeground
isLocked
thermalState
lowPower
onBattery
pluggedIn
RawValue
actionDidComplete
update
environmentDidChange
sync
retractSync
setLocalMailboxes
setUserVisibleMailboxes
didFindMessageUIDs
downloadSectionsInMessages
downloadSectionData
uploadMessages
messageDataForUpload
uploadChangedFlags
uploadMessagesWithChangedFlagAfterCopy
moveOrCopyMessages
setDownloadRequests
setUIDsForDownloadRequests
rawValue
message
flags
operation
sourceMessage
targetMailbox
targetMessage
move
copy
succeeded
failed
succeededWithoutUID
mailbox
newName
AllCases
unread
deleted
answered
draft
forwarded
redirected
junk
label
unknown
notJunk
clear
colorRed
colorOrange
colorYellow
colorGreen
colorBlue
colorPurple
colorGray
flags
originalFlags
color
setWithoutColor
name
uidValidity
lowestUID
lastSeenUID
highestModificationSequenceValue
localModification
renamed
none
deleted
created
RawValue
internalDate
flags
gmailLabels
messageHeader
messageSize
rawValue
RawValue
AllCases
text
attachment
mailbox
message
section
segment
data
isFinal
initial
encoding
headers
RawValue
IntegerLiteralType
byteCount
unknown
messageSize
rename
connected
connecting
serverUnreachable
authenticationFailed
error
kind
mailboxes
rawValue
periodic
powerNap
push
userInitiated
backFillMessageBodies
uidValidity
next_in
avail_in
total_in
next_out
avail_out
total_out
state
zalloc
zfree
opaque
data_type
adler
reserved
saslKind
responseReady
done
RawValue
rawValue
invalidState
responseNotSupported
challengeNotSupported
invalidImplementationState
RawValue
authentication
logger
allowInitialResponse
mechanism
step
responseReady
didFail
initial
waitingForInitialChallenge
waitingForChallenge
preparingResponse
mechanisms
allowInitialResponse
failedMechanisms
nextAuthenticationTask
saslKind
state
username
password
challengeReceived
started
done
kind
command
login
sasl
plain
appleToken
oAuthToken
challengeResponseMD5
saslKind
state
responseReady
responseSent
errorReceived
status
schemes
scope
saslKind
state
responseReady
done
authenticationSucceeded
authenticationFailed
allCredentialsFailed
connection
queue
logger
delegate
commandCounter
runningCommands
engineID
state
enqueuedEvents
idleKind
idleTimer
idleRefreshInterval
makeCredentials
getPushInformation
finishPushRegistration
pathAttributes
noop
idle
RawValue
RawValue
Element
Iterator
connection
commandCounter
rawValue
commands
elements
continuationRequestCount
pendingHandshakeReplyCount
command
continuation
idleDone
handshakeReply
content
kind
index
endpoint
tlsOptions
networkError
closed
failedToParseServerResponse
failedToAuthenticate
invalidContinuationState
logger
delegate
connection
receiveTranscoder
delegateQueue
networkQueue
pendingHandshakeReplyCount
command
handshake
idle
stateDidChange
connectionFailure
untagged
commandCompletion
pathDidChange
betterPathDidChange
didStartTLS
didStartCompression
connecting
unauthenticated
authenticated
authenticationFailed
failed
cancelled
waiting
capabilities
serverID
selectedMailbox
none
selecting
selected
stream
currentKind
state
kind
normal
append
deflate
inflate
dispatch
output
statistics
lifetimeStatistics
loopCount
done
needsNewOutputBuffer
remainingInput
outputResult
code
inputCount
outputCount
data
kind
originalCount
output
chunk
compressor
connection
payload
runningCommandIDs
connectionDidAuthenticate
connectionDidFail
didSelectMailbox
received
commandCompleted
pathAttributesDidChange
betterPathDidChange
didUnselectMailbox
empty
stateDidChange
inputBuffer
outputBuffer
encodingOptions
compression
outbound
startTLS
setOptions
flushOutputBuffer
enableCompression
responses
deflate
uncompressed
compressor
decompressor
data
originalCount
compressedCount
firstTag
lastTag
text
binary
content
clientIdentity
serverIdentity
name
isReadOnly
commandID
flags
messageCount
firstUnseedMessage
permanentFlags
nextUID
uidValidity
modificationSequenceValue
selectionResult
commandFailed
mailboxAttributesAreMissing
RawValue
inactiveWithPriority
inactiveWithoutPriority
activeSync
activeTask
rawValue
elements
mailbox
usage
connection
constrained
unavailable
available
viable
impracticable
changesMailboxSelection
dependsOnMailboxSelection
mayTriggerUntaggedExpunge
isUIDBased
changesFlags
readsFlags
returnsNonExtendedSearchResult
barrier
noMailboxCommandsRunning
noUntaggedExpungeResponse
noUIDBasedCommandRunning
noFlagChanges
noFlagReads
noNonExtendedSearchRunning
AllCases
underlying
negotiatedTLSProtocolVersion
negotiatedTLSCipherSuite
info
mailboxes
version
topic
commands
behavior
kind
enqueueTime
normal
noop
idle
name
flags
messageCount
firstUnseenMessage
permanentFlags
nextUID
uidValidity
modificationSequenceValue
isReadOnly
highest
notSupported
didReceiveUntagged
runningCommands
idleKind
state
underlying
kind
connecting
unauthenticated
authenticated
authenticationFailed
failed
cancelled
path
endpoint
capabilities
serverID
failedMailbox
selectingMailbox
selectedMailbox
login
authenticate
registerForPush
requestCapabilities
startTLS
compress
kind
capabilities
workItem
underlying
counter
queue
checkingIfPreAuthIsAllowed
requestingCredentials
authenticating
identifyingServer
requestingCompression
enablingCompression
requestingPushRegistrationInfo
registeringForPush
done
failed
connecting
gettingPreAuthCapabilities
startingTLS
waitingForTLS
gettingPostAuthCapabilities
protocolError
authenticationFailure
unableToGetCapabilities
unableToGetPushResponse
otherError
preAuthDisallowed
startTLSFailed
startTLSButNoTLS
authenticated
setCredentials
mechanismFailed
identifiedServer
setPushInformation
gotPushResponse
startTLS
serverAcceptedCompress
serverDeniedCompress
enabledCompress
state
currentlyRunning
failureCount
backOffUntil
queue
engineID
delegate
state
timer
connection
makeUnderlyingConnection
coalesceDelay
underlying
generation
idle
betterPathIsAvailable
evaluatingBetterPath
rawValue
cancelConnection
none
promoteConnection
logName
endpoint
protocolOptions
makeCredentials
getPushInformation
finishPushRegistration
workloop
persistenceEventQueue
sendAction
logger
logName
tracingIDOwner
state
connections
betterPathEvaluator
didStart
isProcessingUpdates
pendingUpdates
externalState
lastConnectionStatus
didTearDown
stateCapture
lastActivity
lastSelectedMailboxes
engine
logger
queue
configuration
engineID
didTearDown
connections
engine
nextConnectionID
backoff
backoffTimer
backoffLoggingRateLimit
lastError
lastStatus
stateCapture
enqueuedEvents
connectionWithGivenIDDoesNotExist
connectionWithGivenIDDoesNotHaveGivenMailboxSelected
logName
lastPass
intervalInNanoseconds
MFAccount
EDAccount
ECMailAccount
NSObject
NSCopying
ECAccountPropertyProviding
ECAuthenticatableAccount
EFPubliclyDescribable
_MFAccountInformation
MFAccountValidator
MFActivityMonitor
EFCancelable
AOLAccount
MFOAuth2TokenAuthProtocol
MFAOLSMTPAccount
MFAuthScheme
MFBufferedQueue
CastleIMAPAccount
CondStore
MFConnection
ECAuthenticatableConnection
MFDiagnosticsGenerator
MFConnectionSettings
MFCRAM_MD5AuthScheme
MFCRAM_MD5Authenticator
_MFSQLGenerationContext
LibraryAdditions
PrivateLibraryAdditions
DADeliveryAccount
MFDADeliveryConsumer
DAMessageSendConsumer
DAActionConsumer
MFDADelivery
EFLoggable
DAMailAccount
ECLocalActionReplayerDelegate
MFDAMailbox
MFDAMailAccountConsumer
MFDARequestQueue
MFDAMessagePayloadFetchResponseImpl
MFDAMessagePayloadFetchResponse
_MFDAResolveRecipientsConsumer
DAResolveRecipientsConsumer
DeliveryAccount
EDDeliveryAccount
MFDigestMD5AuthScheme
_MFDigestMD5Authenticator
ESearch
ExchangeAccount
FormatFlowedSupportInternal
FormatFlowedSupport
_MFFormatFlowedWriter
Goodies
GmailAccount
MFClientTokenAuthProtocol
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
MFGmailSMTPAccount
MFGmailClientTokenAuthScheme
_MFGmailClientTokenAuthenticator
HotmailDeliveryAccount
HotmailAccount
MFHotmailSMTPAccount
_MFIMAPMailboxDeletionQueueEntry
IMAPAccount
MFIMAPConnectionDelegate
MFIMAPMailboxListFilter
_MFIMAPCommandParameters
MFIMAPConnection
ECIMAPServerInterface
MFIMAPConnectionFlagSearchResults
MFIMAPConnectionFlagSearchRequest
IMAPNameEncoding
MFIMAPOperationCache
ReferenceSearching
MFInvocationQueue
MFLibraryIMAPStore
MFLibraryMessage
EDPersistedMessage
EDBaseMessage
ECMessage
MFIMAPMessage
MFLibrarySearchableIndexAdditions
EDSearchableCriterion
MFLibraryStore
MFMailMessageStore
LocalAccount
_MFRootlessMailboxUid
MailAccount
EDReceivingAccount
EDIndexableAccount
SortedMailboxes
MFMailboxUid
EDIndexableMailbox
ECMailbox
_MFMailboxUidEnumerator
_MFMailboxUidChildrenEnumerator
MFFollowUpWarningResult
MFMailDelivery
MFMailDataMessageStore
MFMailMessage
UnreadCountCriterion
MFMailMessageLibrary
EDMessageChangeHookResponder
EFSignpostable
EFContentProtectionObserver
_MFMessageCollector
MessageConsumer
QueryProgressMonitor
_MFBlockIterationHandler
MFSearchResultHandler
_MFDataCollector
MFGuaranteedCollectingDataConsumer
MFCollectingDataConsumer
MFDataConsumer
_MFEmailAddress
_MFRecipientCollection
_MFObjectProperty
_MFAddableMessage
MFMailMimePart
DecodeMessage
MFMailMimeTextAttachment
MFMessageCriterion
_MFMessageFlags
NSCoding
MFBasicMessageDataSection
MFMessageDataSection
MFMessageSigner
MFMessageWriter
_MFOutgoingMessageBody
MFOutgoingMessage
MFAccountAutoFetchController
MFAccountFactory_iOS
EDAccountFactory
MFAccountLoader
iTunesSync
MFAccountStore
_MFSatisfiedActivityCondition
MFActivityCondition
MFActivityConditionBuilder
MFAppStateMonitor
MFAPSManager
APSConnectionDelegate
MFAttachment
_MFAttachmentActiveRequest
MFAttachmentCapabilities
MFAttachmentComposeManager
MFAttachmentCompositionContext
MFAttachmentDataProvider
MFAttachmentLibraryDataProvider
MFAttachmentDataProviderProtocol
MFAttachmentLibraryManager
MFAttachmentManager
MFAttachmentPlaceholder
MFAttachmentRaw
NSSecureCoding
MFAttachmentUtilities
MFAttachmentBundle
MFAttachmentSecurityScope
MFBaseSyncResponseQueue
MFCastleEmailAliasUpdater
CastleEmailAliasUpdateResult
MFCertificateTrustInfo
MFCertificateTrustInfoEMCertificateTrustInformationTransformer
MFCertificateTrustInformationKeychainManager
MFComposeAttachmentDataProvider
MFContentErrorDocument
MFDAFolderChangeConsumer
DAFolderChangeConsumer
MFDAFolderChangeResult
MFDASyncResponseConsumer
MFRequestQueueResponseConsumer
MFDASyncActionsConsumer
MFDAMailAccountSyncConsumer
DAMailboxRequestConsumer
DAMailboxStreamingContentConsumer
MFDAMessage
MFDAMessageContentConsumer
MFDAStreamingContentConsumer
MFDAMessageStore
MFAdditions
_MFDAMessageStoreGetUpdatesRequest
MFDAMailAccountRequest
_MFDAMessageStoreSetFlagsRequest
_MFDAMessageStoreDeleteRequest
_MFDAMessageStoreFetchHeadersRequest
_MFDAMessageStoreFetchRequest
_MFDAMessageStoreFetchUsingRemoteIDRequest
_MFDAMSBasicConsumer
_MFDAMSUpdateConsumer
_MFDAMSSearchResponseConsumer
DASearchQueryConsumer
_MFDAMessageHeaderFetchConsumer
_MFDAMessageBodyFetchConsumer
DAMailAccountStreamConsumerFactory
_MFDALibraryConsumerFactory
MFMessageDataConsumerFactory
_MFDAMessageFetchAttachmentConsumer
DAMessageFetchAttachmentConsumer
_MFDAMessageStoreSearchResultBodyConsumer
DAMailboxFetchSearchResultConsumer
MFDADraftMessage
MFDAMessageStoreSaveDraftRequest
MFDAMoveResponseConsumer
DAMessageMoveRequestConsumer
MFDAStoreDraftConsumer
MFDATransferActionReplayer
ECTransferActionReplayerSubclassMethods
MFDbJournal
MFDebugAccountState
MFDecryptedAttachmentDataProvider
MFDeliveryResult
MFError
MessageAdditions
MFExchangeConnection
MFFetchLimits
MFFetchResponseQueue
MFFile
MFFileArchive
MFFileArchiveDirectory
MFFileArchiveEntry
MFFileCompressionQueue
MFFileCompressionQueueActivityManager
MFIMAPCommandPipeline
_MFIMAPFetchUnit
MFIMAPDownload
MFIMAPSimpleDownload
MFIMAPCompoundDownload
MFIMAPDownloadCache
MFIMAPFetchResult
MFIMAPMessageDownload
MFIMAPMessageWithCache
MFIMAPOperation
MFIMAPOfflineCopyOnStupidServerOperation
MFIMAPParseContext
MFIMAPResponse
MFIMAPResponseConsumer
MFLegacyIMAPMailboxTaskManager
MFIMAPSequenceIdentifierProvider
ECIMAPLocalActionReplayerDelegate
MFIMAPMailboxTaskManager
MFLibraryMessageReconciler
MFLibraryReconciler
EDProtectedDataReconciliationHookResponder
EDDatabaseChangeHookResponder
MFLibraryThreadReconciler
MFListUnsubscribeMessageGenerator_iOS
MFLocalActionPersistence_iOS
MFLocalActionReplayHandler
MFLocalizedMessageHeaders
MFLockStateMonitor
MFMailboxPersistence_iOS
MFMailboxProvider
MFMailboxUidTransformer
MFMailDropAttachmentDataProvider
NSURLSessionDownloadDelegate
MFMailDropAttachmentPreviewDataProvider
MFMailDropMailDelivery
MFMailMessageLibraryAddJournaledConversationIDDateReceivedUpgradeStep
EDTableUpgradeStep
_MFOldIMAPOfflineOperation
MFMailMessageLibraryAddMailboxActionsUpgradeStep
MFMailMessageLibraryAddSearchableIndexTablesUpgradeStep
MFMailMessageLibraryAdoptSharedSchemaMigrationStep
MFMailMessageLibraryFixPopUidsUniquenessConstraintUpgradeStep
MFMailMessageLibraryGlobalDataUpgradeStep
MFMailMessageLibraryLocalActionsTablesMigrationStep
_MFOfflineCacheOperation
_MFDADeferredSetFlagsOperation
_MFDADeferredDeleteMessageOperation
MFDADeferredMessageMoveOperation
MFDADeferredStoreDraftOperation
_MFDADeferredNewMailboxOperation
_MFDADeferredDeleteMailboxOperation
_MFDADeferredModifyMailboxOperation
_MFDADeferredSelectMailboxOperation
MFMailMessageLibraryMailboxURLMigrationStep
MFMailMessageLibraryMigrator
MFMailMessageLibraryModifyColumnDefinitionsMigrationStep
MFMailMessageLibraryPopulateSendersTableMigrationStep
MFMailMessageLibraryQueryTransformer
MFMessageCriterionConverterDelegate
MFMailMessageLibraryRebuildThreadsTableUpgradeStep
MFMailMessageLibraryRecreateMessageIndicesUpgradeStep
MFMailMessageLibraryResetSequenceNumberMigrationStep
MFMailMessageLibrarySetThreadSendersRecipientsConflictResolutionUpgradeStep
MFMailMessageLibraryThreadFlagColorsUpgradeStep
MFMailMessageStoreSearchResult
MFMessageAttachmentMigrator
MFMessageBodyHTMLParser
_MFParsedHTMLNode
MFMessageBodyTreeNode
MFMessageBodyConsumableInnerTextNode
_MFParsedHTMLTag
_MFParsedHTMLText
_MFMessageBodyHTMLElement
_MFMessageBodyConsumableNewline
MFMessageBodyHTMLParserExtras
MFMessageBodyMigrator
MFMessageBodyOriginalTextSubparser
MFMessageBodyParser_HorizontalSeparator
MFMessageBodyParserObject
MFMessageBodyParser
MFMessageBodySubparser
MFMessageBodyElement
MFMessageBodyElement_Private
MFMessageBodyParsingUtils
MFMessageBodyStringAccumulator
MFMessageChangeManager_iOS
EDMessageChangeManagerSubClassMethods
_MFLoadingContextEventResult
MFMessageContentRequest
_MFMessageContentRequestScheduler
EFScheduler
_MFDASearchCriterionConverterDelegate
DASearch
MailboxPrediction
MFMessageCriterionConverter
MFMessageLibrarySetContentProtectionForAttachmentsUpgradeStep
MFMessageLoadingContextEvent
MFMessageLoadingContext
MFMessageLoadingContextToEMSecurityInformationTransformer
MFMessagePersistence_iOS
_MFMessagePersistenceQueryIterator
_MFFlushableMessageSetIterator
_MFMessageQueryConversionIterator
_MFPersistedMessageForwardingIterator
MFMessagePersistenceStatistics_iOS
MFMessageReferenceContext
MFMessageSignerEMMessageSignerTransformer
MFMigrationPersistence
MFUserAgent
MFNetworkController
RadiosPreferencesDelegate
CXCallObserverDelegate
_MFNetworkObserver
MFOSXServerIMAPAccount
MFOSXServerSMTPAccount
MFOutgoingMessageContent
MFOutgoingLibraryMessageContent
MFOutgoingRichtextMessageContent
MFOutgoingMultipartRelatedContent
MFOutgoingMessageDelivery
MFPersistence_iOS
MFPersistenceDatabase_iOS
MFMailMessageLibraryMigratorDelegate
MFPersistenceDatabaseConnection_iOS
MFPersistenceDatabaseSchema_iOS
EDPersistenceDatabaseSchemaProvider
MFPowerController
MFProtectedDatabasePersistence_iOS
MFQuotedAttachmentsInfo
MFRequestQueue
MFRFC822AttachmentDataProvider
MFSearchableIndex_iOS
MFSearchableIndexItem_iOS
MFSearchableIndexManager_iOS
EDSearchableIndexReasonProvider
MFSearchableIndexPersistence_iOS
MFSearchFetchResponseQueue
MFSearchResponseQueue
MFSecureMIMECompositionManager
MFServerMessagePersistenceFactory_iOS
MFSignatures
MFSMTPConnection
MFSyncResponseQueue
MFTaskAssertion
MFThreadFuzzyMatcher
MFUnreadCountProbe
MFUserDefaultMigrator
_MFWeakObjectCacheRef
MFWeakObjectCache
MFMimeEnrichedReader
MimeEnrichedReader
MailExtensions
MFMonitoredInvocation
MFNewcastleAuthScheme
_MFNewcastleAuthenticator
MFNewcastleSMTPAccount
MFMessageKeychainManager
NSStringUtils
AttachmentURLUtilities
MFNTLMAuthScheme
_MFNTLMAuthenticator
MFOAuth2TokenAuthScheme
_MFOAuth2TokenAuthenticator
MFDirectoryPathUtils
MFSharedResourcesDirectoryPathUtils
MFPlainAuthScheme
_MFPlainAuthenticator
_MFLoginAuthenticator
MFPlainTextFragment
MFPlainTextDocument
MFProgressiveMimeParser
SMIMESupport
SMIMEDecoding
_MFSecCMSDecoder
SMIMEEncoding
_MFSecCMSEncoder
SMTPAccount
MFSMTPDelivery
MFSMTPResponse
MFSqliteMessageIDStore
_MFSearchMatcherContext
MFWebAttachmentSource
MFWebMessageDocument
YahooDeliveryAccount
YahooAccount
MFYahooSMTPAccount
code
domain
isEqualToString:
shouldHealAccounts
accountWithProperties:
setWithObjects:
initWithProperties:
knownSchemes
canAuthenticateAccountClass:connection:
ef_filter:
initWithPersistentAccount:
mutableCopy
_accountClass
setObject:forKey:
_setAccountProperties:
_newPersistentAccount
init
accountWithSystemAccount:
setPersistentAccount:
weakObjectsHashTable
initWithObject:
uniqueID
hash
sharedAccountStore
existingAccountWithPersistentAccount:
accountTypeIdentifier
newPersistentAccountWithAccountTypeIdentifier:
supportedDataclassesWithAccountTypeIdentifier:
countByEnumeratingWithState:objects:count:
setProvisioned:forDataclass:
setEnabled:forDataclass:
setAuthenticated:
serialDispatchQueueSchedulerWithName:qualityOfService:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
releaseAllConnectionsScheduler
releaseAllConnections
performBlock:
baseAccount
setSystemAccount:
persistentAccountDidChange:previousAccount:
savePersistentAccountWithAccount:
removePersistentAccountWithAccount:
accountPropertyForKey:
systemAccount
parentAccount
parentAccountIdentifier
doesNotRecognizeSelector:
_objectForAccountInfoKey:
stringWithFormat:
ef_sha256Digest
ef_hexString
_privacySafeDescription
stringByAppendingFormat:
currentDevice
isInternal
description
persistentAccount
properties
_basicPropertyForKey:persistentAccount:
objectForKey:
_setBasicProperty:forKey:persistentAccount:
setAccountProperty:forKey:
setValue:forKey:
removeObjectForKey:
identifier
username
accountDescription
setIdentifier:
setUsername:
setAccountDescription:
accountTypeString
displayedAccountTypeString
accountInfoDidChange
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
initWithData:encoding:
setOAuth2Token:refreshToken:
excludedAccountPropertyKeys
containsObject:
setPassword:
isEqual:
addressListFromEncodedString:
_queueAccountInfoDidChange
removeAccountPropertyForKey:
usesSSL
numberWithBool:
password
componentsJoinedByString:
allKeys
boolValue
isActive
setActive:
hostname
displayName
length
mf_stringWithNoExtraSpaces
MCIsManaged
accountIsManaged:
isManaged
_boolForAccountInfoKey:defaultValue:
credential
_credentialCreateIfNecessary:error:
credentialWithError:
ef_publicDescription
setCredential:
preferredAuthScheme
requiresPassword
_password
_passwordWithError:
mf_isInaccessibleAccountCredentialError
oauthToken
sourceApplicationBundleIdentifier
accountForRenewingCredentials
persistentStore
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:localizedDescription:title:userInfo:
objectForKeyedSubscript:
renewCredentialsForAccount:options:completion:
dictionaryWithDictionary:
dictionary
primaryiCloudAccount
setObject:forKeyedSubscript:
_renewCredentialsWithOptions:completion:
openAuthenticationURL:forAccount:shouldConfirm:completion:
personaIdentifier
authenticatedConnection
name
intValue
defaultSecurePortNumber
defaultPortNumber
portNumber
predefinedValueForKey:
_shouldTryDirectSSLConnectionOnPort:
copyIdentityForPersistentReference:error:
copyClientSSLIdentityForHostName:error:
arrayWithObjects:count:
count
objectAtIndex:
persistentReferenceForIdentity:error:
defaultCenter
postNotificationName:object:userInfo:
requiresAuthentication
schemeWithName:
connectionClass
currentConnections
addObject:
performWhileLocked:
connectionClassForAccountClass:
_newConnection
_connectAndAuthenticate:
isValid
isConstrained
external
setUsesSSL:
setHostname:
setPortNumber:
certUIService
setCertUIService:
clientCertificates
setClientCertificates:
setTryDirectSSL:
tryDirectSSL
secureServiceName
serviceName
setServiceName:
connectionServiceType
setConnectionServiceType:
allowsTrustPrompt
setAllowsTrustPrompt:
setAccountIdentifier:
networkAccountIdentifier
setNetworkAccountIdentifier:
setSourceApplicationBundleIdentifier:
setIsNonAppInitiated:
defaultConnectionSettings
credentialAccessibility
currentMonitor
localizedDescription
customDescriptionForError:authScheme:defaultDescription:
setLocalizedDescription:
setError:
shouldCancel
connectUsingFallbacksForAccount:
authenticateUsingAccount:
disconnect
error
reportAuthenticationError:authScheme:
aa_isAccountClass:
enabledDataclasses
isEnabledForDataclass:
initWithFormat:
missingPasswordErrorWithTitle:
setShouldHealAccounts:
newAccountWithDictionary:
authSchemesForAccountClass
accountWithPersistentAccount:
existingAccountForUniqueID:
isPredefinedAccountType
propertiesWhichRequireValidation
displayedShortAccountTypeString
legacyKeychainProtocol
accountPropertiesValueForKey:value:
accountSourceIsManaged:
accountIsPreventedFromSendingFromExternalProcesses:
accountIsRestrictedFromTransfersToOtherAccounts:
accountRestrictsRecentsSyncing:
isCommonPortNumber:
isSSLEditable
saslProfileName
supportedDataclasses
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
copyWithZone:
emailAddressStrings
T@"NSArray",R,C,N
T@"NSString",C,N
T@"NSString",R,C,N
T@"ACAccount",R,N
canAuthenticateWithCurrentCredentials
hasPasswordCredential
savePersistentAccount
altDSID
statisticsKind
setDisplayName:
TB,R,N
setMissingPasswordError
oauth2Token
T@"NSString",R,N
shouldFetchACEDBInfoForError:
removePersistentAccount
type
accountClass
setValueInAccountProperties:forKey:
removeValueInAccountPropertiesForKey:
valueInAccountPropertiesForKey:
canGoOffline
managedTag
supportsMailDrop
_credential
_credentialCreateIfNecessary:
renewCredentialsWithOptions:completion:
promptUserForWebLoginWithURL:shouldConfirm:completionHandler:
fetchTokensIfNecessary:
releaseAllForcedConnections
setDomain:
setPreferredAuthScheme:
connectionsAreConstrained
applySettingsAsDefault:
alternateConnectionSettings
insecureConnectionSettings
secureConnectionSettings
syncStoreIdentifier
nameForMailboxUid:
shouldEnableAfterError:
enableAccount
shouldDisplayHostnameInErrorMessages
inaccessiblePasswordErrorWithTitle:
loginDisabledErrorWithTitle:
isSyncingNotes
copyDiagnosticInformation
.cxx_destruct
_persistentAccount
_persistentAccountLock
_unsavedAccountProperties
_descriptionLock
_privacyDescriptionLock
_cachedPrivacySafeDescription
_cachedDescription
_allowsTrustPrompt
_baseAccount
_sourceApplicationBundleIdentifier
_currentConnections
T@"EFLocked",R,N,V_currentConnections
T@"ACAccount",R
T@"NSString",R
T@"ECAccount",R,N,V_baseAccount
managed
TB,R,N,GisManaged
T@"NSDictionary",R
T@"NSString",R,&,N
T@"NSString",C,N,V_sourceApplicationBundleIdentifier
TI,N
TB,N
TB,V_allowsTrustPrompt
T@"NSString",&,N
T@"ECAuthenticationScheme",&,N
T@"NSArray",R,C,N,VemailAddressStrings
mf_isMissingAccountCredentialError
UUID
UUIDString
account
setAccount:
deliveryAccount
setDeliveryAccount:
localizedNotes
setLocalizedNotes:
_account
_deliveryAccount
_localizedNotes
T@"MailAccount",&,N,V_account
T@"DeliveryAccount",&,N,V_deliveryAccount
T@"NSDictionary",&,N,V_localizedNotes
rangeOfString:
substringWithRange:
bytes
UTF8String
emailAddressValue
lowercaseString
array
standardUserDefaults
boolForKey:
stringForKey:
setScheme:
setHost:
setPath:
requestWithURL:
setHTTPMethod:
addValue:forHTTPHeaderField:
dataUsingEncoding:
setHTTPBody:
bundleForClass:
pathForResource:ofType:
fileSystemRepresentation
stringWithUTF8String:
indexOfObject:
initWithUTF8String:
initWithPerformsValidationInBackground:
stop
dealloc
accountValidator:finishedValidationOfAccount:usedSSL:
validateAccount:useSSL:withCompletion:
_validateAccount:withFallbacks:
validateAccountWithoutFallbacks:withCompletion:
authenticationSchemesForAccount:connection:
shouldUseAuthentication
initWithArray:
initWithObjects:
connectUsingAccount:
arrayWithCapacity:
addObjectsFromArray:
errorWithDomain:code:localizedDescription:
removeObject:
userInfo
pep_getInvocation:
_backgroundValidateAccountFinished:authSchemes:
retainArguments
invoke
performSelectorOnMainThread:withObject:waitUntilDone:
cancel
_validateAccount:
_validateAccountWithoutFallbacks:
invocationWithSelector:target:object:taskName:priority:canBeCancelled:
monitor
setCanBeCancelled:
performsValidationInBackground
sharedInvocationQueue
addInvocation:
_outgoingServerValid
_incomingServerValid
validateAccount:useSSL:
validateAccountWithoutFallbacks:
cancelValidation
_ispAccountInfo
accountValidationCanceled
validationInvocation
accountIsValid
accountSupportsSSL
delegate
setDelegate:
_accountValidationActivity
_validationInvocation
_completionBlock
_flags
_incomingServerValidationError
_smtpServerValidationError
_incomingServerAuthSchemes
_smtpServerAuthSchemes
_delegate
T@"MFMonitoredInvocation",R,N
T@"<MFAccountValidatorDelegate>",W,N,V_delegate
T@"MFError",R,N
T@"MFAccount",R,N
copy
arrayByAddingObjectsFromArray:
shouldTryFallbacksAfterError:
hasEncryption
firstObject
quit
postNotificationName:object:
initWithObjectsAndKeys:
mf_lock
currentThread
mf_unlock
threadDictionary
resetConnectionStats
postActivityStarting
mf_clearLocks
postActivityFinished:
numberWithUnsignedInteger:
userInfoForNotification
postDidChangeWithUserInfo:
_ntsThrottledUserInfoDict
setWithSet:
setStatusMessage:percentDone:withKey:
setPercentDone:withKey:
setDisplayName:maxCount:
isMainThread
_cancelAssociatedCancelables
cancelMessage
performSelector:onThread:withObject:waitUntilDone:
_didChange
makeObjectsPerformSelector:
setShouldCancel:
currentDesignator
pushNewDesignator
destroyCurrentDesignator
setStatusMessage:withKey:
pushNewMonitor
destroyMonitor
T@"MFActivityMonitor",R
startActivity
finishedActivity:
setCurrentCount:
setPercentDoneOfCurrentItem:
reset
setGotNewMessagesState:
gotNewMessagesState
addReason:
reasons
setStatusMessage:percentDone:
setPercentDone:
percentDone
startTime
setExpectedLength:
expectedLength
canBeCancelled
addCancelable:
removeCancelable:
acquireExclusiveAccessKey
relinquishExclusiveAccessKey:
recordBytesRead:
recordBytesWritten:
bytesRead
bytesWritten
recordTransportType:
mailbox
setMailbox:
startedFetch
setStartedFetch:
isRemoteSearch
setIsRemoteSearch:
transportType
_runningThread
_displayName
_statusMessage
_percentDone
_key
_canCancel
_shouldCancel
_isActive
_error
_expectedLength
_maxCount
_currentCount
_mailbox
_lastTime
_startTime
_gotNewMessagesState
_bytesRead
_bytesWritten
_reasons
_associatedCancelables
_isRemoteSearch
_startedFetch
_transportType
T@"MFMailboxUid",&,V_mailbox
T@?,C,V_startedFetch
TQ,N
Td,R,N
Td,N
TB,N,V_isRemoteSearch
TQ,R,N
Tq,R,N,V_transportType
T@"MFError",&,N
_defaultSpecialMailboxNameForType:
setMailAccount:
standardAccountClass:valueForKey:
unsignedIntValue
emailAddressWithUsername:
deliveryAccountHostname
deliveryAccountUsesSSL
deliveryAccountPortNumber
iconString
derivesDeliveryAccountInfoFromMailAccount
URLForMessage:
_deliveryAccountCreateIfNeeded:
displayHostname
mailAccountIfAvailable
mailAccount
T@"AOLAccount",&,N,GmailAccountIfAvailable,V_account
initWithMaximumSize:latency:
sizeForItem:
flushIfNecessary
removeAllObjects
handleItems:
_flush
addItem:
flush
isEmpty
size
maximumSize
setMaximumSize:
maximumLatency
setMaximumLatency:
_maximumSize
_maximumLatency
_timeOfLastFlush
_queue
_currentSize
TI,R,N,V_currentSize
TI,N,V_maximumSize
Td,N,V_maximumLatency
canUsePersistence
supportsAppleRemoteLinks
defaultInstance
persistence
remoteContentManager
shouldAddRemoteContentLinksForMessageWithDateReceived:
initWithLibrary:persistentAccount:
initWithName:andDelegate:
initWithAppleAccount:
initWithAccountID:aliasSupport:
_resetAppleAccount
isAccountClassEquivalentTo:
isUsernameEquivalentTo:
shouldRegisterForPush
canAttemptPushRegistration
canReceiveNewMailNotifications
separatorChar
startListeningForNotifications
lock
_accountsChanged:
accountStore
addObserver:selector:name:object:
unlock
removeObserver:name:object:
appleAccount
propertiesForDataclass:
isProvisionedForDataclass:
childAccounts
accountType
aa_firstName
setGivenName:
aa_lastName
setFamilyName:
localizedStringFromPersonNameComponents:style:options:
defaultPath
setParentAccount:
setAuthenticationType:
_mailPropertyFromAppleAccountForKey:
defaultEmailAddress
aa_personID
authTokenWithError:
aa_authTokenWithError:
aliasSupport
anisetteDataWithError:
clientInfoHeader
firstEmailAddress
emailAddressesAndAliases
_fromEmailAddressesIncludingDisabled:
emailAddressesDictionary
receiveEmailAliasAddresses
valueForKey:
aa_password
handleOverQuotaResponse:
handleAlertResponse:
initForDataclass:
showWithHandler:
deliveryHostname
deliveryPortNumber
deliveryUsesSSL
setCastleAccount:
setDefaultEmailAddress:
setLocalDefaultEmailAddress:
setEmailAddresses:
setReceiveEmailAliasAddresses:
setLocallyEnabled:forEmailAddress:
setLastEmailAliasesSyncDate:
_emailAliasesAreStale
_updateEmailAddressAndAliases
lastEmailAliasesSyncDate
sharedInstance
isVisible
timeIntervalSinceNow
aliasUpdater
lastEmailAliasesSyncEntityTag
_updateEmailAddressAndAliasesWithResult:
isSuccess
date
notModified
entityTag
setLastEmailAliasesSyncEntityTag:
getEmailAddressAndAliasesWithLastSyncDate:entityTag:handler:
emailAddresses
fromEmailAddresses
objectAtIndexedSubscript:
accountNeedsToUpdateProperties
aa_updatePropertiesForAppleAccount:completion:
pushUpdateForAliasDataWithEmailAddresses:defaultEmailAddress:
initialize
emailAddressHostPart
defaultPathNameForAccountWithHostname:username:
usernameIsEmailAddress
primaryDeliveryAccountIsDynamic
newChildAccountWithParentAccount:error:
shouldFetchRemoteLinksWithDateReceived:
isEquivalentTo:hostname:username:
uniqueIdForPersistentConnection
displayUsername
personID
authToken
clientInfo
emailAddressesAndAliasesList
fromEmailAddressesIncludingDisabled
setPasswordInKeychain:
_removePasswordInKeychain
passwordFromKeychain
setEnabled:forEmailAddress:
invalidateEmailAliases
updateEmailAliasesIfNeeded
pushUpdateForAliasData
supportsArchiving
aliasLookupURL
_appleAccountLock
_appleAccount
_readyForPushRegistration
_aliasChanges
_updatedDefaultEmail
_aliasUpdateQueue
_aliasLookupURL
_aliasSupport
_aliasUpdater
T@"ACAccountStore",R,N
TI,R,N
T@"NSURL",R,N,V_aliasLookupURL
T@"EDiCloudAliasSupport",R,N,V_aliasSupport
T@"MFCastleEmailAliasUpdater",R,N,V_aliasUpdater
messageSetForNumbers:
initWithCommand:arguments:
_responseFromSendingCommands:
responseType
untaggedResponses
fetchResults
modSequenceNumber
didFinishCommands:
sendResponsesForCondStoreFlagFetchForUIDs:withSequenceIdentifier:toQueue:
stringArrayForKey:
componentsSeparatedByString:
readLoggingDefaults
securityProtocol
sharedController
addDiagnosticsGenerator:
close
isCellularConnection
enableThroughputMonitoring:
usesOpportunisticSockets
setUsesOpportunisticSockets:
accountIdentifier
isNonAppInitiated
setSecurityProtocol:
networkActivityStarted:
networkActivityEnded:
setNetworkActivityChangeBlock:
_evaluateTrust:errorPtr:
setServerTrustHandler:
_setupSocketWithSettings:
inAirplaneMode
connectToHost:withPort:service:
connectUsingSettings:
authenticatorForAccount:connection:
authenticationMechanisms
saslName
authenticateUsingAccount:authenticator:
securityLayer
humanReadableName
capabilities
rangeOfString:options:range:
substringFromIndex:
uppercaseString
encryptionBufferSize
appendBytes:length:
initWithCapacity:
createEncryptedDataForBytes:length:
setLength:
appendData:
writeBytes:length:
errorWithException:
writeBytes:length:dontLogBytesInRange:
writeData:dontLogBytesInRange:
stopActivity
_clearBuffer
endCompression
isReadable
service
_certificateIsTrustedForAccount:
defaultTrustManager
remoteHostname
rawTrustResultForSSLTrust:hostname:service:
_setCertificateIsTrusted:forAccount:
setService:
setTrust:
certUIPromptScheduler
allowTrust:forHost:service:
showPromptWithOptions:responseBlock:
performSyncBlock:
appendString:
appendFormat:
remotePortNumber
logConnection:type:data:
flushLog
logClasses
setLogClasses:
logAllSocketActivity
setLogAllSocketActivity:
logActivityOnPorts
setLogActivityOnPorts:
logActivityOnHosts
setLogActivityOnHosts:
loginDisabled
T@"NSArray",R,N
isFetching
setIsFetching:
test_setSocket:
writeData:
setDesiredReadBufferLength:
logReadChars:length:
readLineIntoData:
readBytesIntoData:desiredLength:
startTLSForAccount:
enableSSL
startCompression
hasBytesAvailable
lastUsedTime
connectionSettings
setConnectionSettings:
accountLogString
_securityLayer
_connectionSettings
_socket
_lastUsedTime
_buffer
_bufferRemainingBytes
_bufferStart
_bufferLength
_desiredBufferLength
_deflater
_inflater
_zbuffer
_readBytesNotLogged
_isFetching
_compressionEnabled
_accountLogString
T@"NSString",R,N,V_accountLogString
_hostname
_serviceName
_certUIService
_clientCertificates
_portNumber
_connectionServiceType
_usesSSL
_usesOpportunisticSockets
_tryDirectSSLConnection
_isNonAppInitiated
_accountIdentifier
_networkAccountIdentifier
T@"NSString",C,N,V_certUIService
T@"NSString",C,N,V_hostname
T@"NSString",C,N,V_serviceName
T@"NSArray",C,N,V_clientCertificates
T@"NSString",C,N,V_accountIdentifier
T@"NSString",C,N,V_networkAccountIdentifier
TI,N,V_portNumber
TB,N,V_usesSSL
TB,N,V_usesOpportunisticSockets
TB,N,V_tryDirectSSLConnection
TB,N,V_allowsTrustPrompt
TB,N,V_isNonAppInitiated
serverCertificates
mf_isUserCancelledError
setUserInfoObject:forKey:
setShortDescription:
data
logBytes:length:
createDecryptedDataForBytes:length:
getBytes:length:
raise
readBytesIntoBuffer:maxLength:
authenticatorClass
sendsPlainTextPasswords
responseForServerData:
searchableIndex
mailboxIDs
tables
baseTable
propertyMapper
usedBaseTable
haveLibraryIDCriterion
protectedDataAvailable
simplifiedCriterion
fixOnce
_criterionForSQL
suggestion
setSuggestion:
criterionType
criteria
_containsNotCriterion
ef_any:
_evaluateFTSCriterionWithIndex:mailboxIDs:
notCriterionWithCriterion:
ef_map:
setCriterionType:
allCriteriaMustBeSatisfied
setAllCriteriaMustBeSatisfied:
setCriteria:
searchableItemSnippetDataMatchingCriterion:
indexSet
searchableItemIdentifier
integerValue
addIndex:
snippetHints
initWithType:qualifier:expression:
setLibraryIdentifiers:
libraryIdentifiers
qualifier
indexSetWithIndex:
addIndexes:
intersectIndexes:
isFullTextSearchableCriterion
_resolveWithIndex:mailboxIDs:
subarrayWithRange:
arrayWithArray:
_collapsedMessageNumberCriterion:allMustBeSatisfied:collapsedIndexes:
removeObjectsAtIndexes:
insertObject:atIndex:
hasLibraryIDCriterion
SQLExpressionWithContext:depth:
expression
bestBaseTable
_addCriteriaSatisfyingPredicate:toCollector:
includesCriterionSatisfyingPredicate:restrictive:
criterionByApplyingTransform:
lastObject
criteriaSatisfyingPredicate:
orCompoundCriterionWithCriteria:
unreadMessageCriterion
criterionForSQL
SQLExpressionWithTables:baseTable:protectedDataAvailable:searchableIndex:mailboxIDs:propertyMapper:
extractedDateCriterion
extractedUnreadCriterion
ef_SQLExpression
numberWithInteger:
columnNameForLookupKey:value:
hasPrefix:
doubleValue
criterionTypeForString:
dateIsRelative
dateUnits
setDateUnits:
setDateIsRelative:
andCompoundCriterionWithCriteria:
currentCalendar
components:fromDate:
setDay:
hour
setHour:
minute
setMinute:
second
setSecond:
dateByAddingComponents:toDate:options:
weekday
setMonth:
setYear:
month
timeIntervalSince1970
criterionIdentifier
ef_SQLEscapedString
longLongValue
_SQLExpressionForMailboxCriterion
expressionIsSanitized
dictionaryWithObjectsAndKeys:
initWithName:
equalTo:
beginsWith:caseSensitive:
endsWith:caseSensitive:
contains:caseSensitive:
doesNotContain:caseSensitive:
newDeliveryWithMessage:
setDAMailAccount:
newDeliveryWithHeaders:mixedContent:textPartsAreHTML:
newDeliveryWithHeaders:HTML:plainTextAlternative:other:
initWithDAMailAccount:
deliveryClass
_DAMailAccount
setDone:
actionFailed:forTask:error:
messageDidSendWithContext:
messageDidSendWithContext:sentBytesCount:receivedBytesCount:
status
_status
T@"MFError",&,N,V_error
Tq,R,N,V_status
TQ,R,N,V_bytesRead
TQ,R,N,V_bytesWritten
newMessageWriter
setAllowsQuotedPrintable:
message
messageIDHeaderInFortyBytesOrLess
originalMessage
_updateBasedOnOriginalMessage:
action
shouldSign
shouldEncrypt
messageDataHolder
accountConduit
isUserRequested
sendMessageWithRFC822Data:messageID:outgoingMessageType:originalMessageFolderID:originalMessageItemID:originalMessageLongID:originalAccountID:useSmartTasksIfPossible:isUserRequested:consumer:context:
waitUntilDone
initWithStatus:
setDuration:
setBytesSent:
supportsThreadOperations
conversationFlags
mailboxUidOfType:createIfNeeded:
messageStore
DAMailMessage
longID
remoteID
folderID
isSearchResultWithBogusRemoteId
folderIDForFetching
T@"NSObject<OS_os_log>",R
deliverSynchronously
_library
_folderID
_accountID
_originalMessageID
_originalLongID
defaultAccountDirectory
stringByAppendingPathComponent:
mf_betterStringByResolvingSymlinksInPath
componentsWithString:
setUser:
setPort:
absoluteString
isMobileMail
sharedNetworkObserver
_reachabilityChanged:
addNetworkReachableObserver:selector:
isNetworkReachable
accountID
initWithPath:
setDAAccount:
object
mailboxForFolderID:
backingAccountInfo
allMailboxUids
resetSpecialMailboxes
initWithName:attributes:account:folderID:
rootMailbox
setParent:
virtualAllSearchMailbox
emptyFrequencyForMailboxType:
mainBundle
bundleIdentifier
numberWithInt:
_loadChildrenForParent:fromMap:intoArray:replacingInbox:withID:
folderName
isRunningInDisallowedBundle
_isUnitTesting
mf_invocationWithSelector:target:object:
mailboxes
inboxFolder
sentItemsFolder
deletedItemsFolder
draftsFolder
allValues
supportsServerDrafts
parentFolderID
caseInsensitiveCompare:
_loadMailboxListingIntoCache:attributes:children:parent:
_writeMailboxCacheWithPrejudice:
foldersContentsChanged:
_accountConduitClass
initWithDAAccount:
accountHierarchyChanged:
stopListeningForNotifications
sharedConnection
updateFolderListForAccountID:andDataclasses:
_ensureWeHaveLoadedInitialMailboxList
_copyMailboxUidWithParent:name:attributes:existingMailboxUid:dictionary:
setFolderID:
_newMailboxWithParent:name:attributes:dictionary:withCreationOption:
folderIDForMailbox:
initFolderChangeWithChangeType:folderId:parentFolderId:displayName:dataclass:consumer:
wasSuccessful
_performFolderChange:completion:
_renameMailbox:newName:parent:
setConsumer:
performFolderChange:isUserRequested:
waitForResult
newMailboxNameIsAcceptable:reasonForFailure:
characterSetWithCharactersInString:
rangeOfCharacterFromSet:
_URLScheme
encryptionIdentityPersistentReference
accountBoolPropertyForKey:
isHotmailAccount
persistentUUID
enabledForDADataclass:
emailAddress
supportsMailboxSearch
supportsEmailFlagging
mailNumberOfPastDaysToSync
pathComponents
removeObjectsInRange:
pathWithComponents:
pairWithFirst:second:
addRequests:mailbox:
addRequests:mailbox:combine:
initWithAccount:folderID:
addRequests:combine:
performRequests:mailbox:
syncAnchorForFolderID:mailbox:
first
enumerateObjectsUsingBlock:
initWithCurrentTag:accountID:requests:
performMailboxRequests:mailbox:previousTag:clientWinsOnSyncConflict:isUserRequested:consumer:
cancelTaskWithID:
tokenWithCancelationBlock:
setSyncAnchor:forFolderID:mailbox:
moreAvailable
shouldRetryRequest
_relativePathForType:
mailboxUidForRelativePath:create:
isMailboxLocalForType:
_localMailboxNameForType:usingDisplayName:
localAccount
_relativePathSpecialMailboxUidWithType:create:
mailboxUidForRelativePath:create:withOption:
setRepresentedAccount:
primaryMailboxUid
supportsUniqueServerId
supportsDraftFolderSync
preferenceEnabled:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:
shutdown
invalidate
isAppleInternalInstall
isAppleEmployeeAccount
removeNetworkReachableObserver:
mf_invocationWithSelector:target:
loadMeetingData
reattemptInvitationLinkageForMetaData:inFolderWithId:
unactionableICSRepresentationForMetaData:inFolderWithId:outSummary:
folderIDsThatExternalClientsCareAboutForDataclasses:withTag:
_inboxFolderID
isEqualToSet:
isMaild
isBatterySaverModeEnabled
pushedFoldersPrefsChanged:
_updateWatchedFolderIdsAndNotify:
allObjects
monitorFoldersForUpdates:persistent:
stopMonitoringAllFolders
library
URLString
sequenceIdentifierForMailbox:
setSequenceIdentifier:forMailbox:
supportsConversations
performSearchQuery:
cancelSearchQuery:
_watchedFolderIds
ef_compactMap:
_folderIdsForMailboxUids:
setFolderIdsThatExternalClientsCareAboutAdded:deleted:foldersTag:
globalAsyncScheduler
replayHandler
connectionEstablished
afterDelay:performBlock:
signingIdentityPersistentReference
setSigningIdentityPersistentReference:
setEncryptionIdentityPersistentReference:
initWithString:
simpleAddress
initWithEmailAddresses:
performResolveRecipientsRequest:consumer:
waitForResolvedRecipients
resolvedEmailToX509Certs
ef_flatten
ef_enumerateObjectsInBatchesOfSize:block:
isFatPipe
isPluggedIn
is4GConnection
is3GConnection
setFetchMaxBytes:
mailboxURL
mailboxUidForURL:
storeForMailboxUid:
initWithAction:
replayActionUsingStore:
_remoteIDsForFlagChangeAction:
flagChange
replayFlagChange:forRemoteIDs:error:completed:
initWithError:
remoteIDs
messages
messageDataIsComplete:downloadIfNecessary:
accountWithURL:
legacyPathForAccountIdentifier:withHostname:username:
csAccountTypeString
accountIDForDirectoryName:isAccountDirectory:
messageDataForMessage:
moveSupportedFromMailboxURL:toURL:
URLStringFromLegacyURLString:
mustArchiveSentMessages
canArchiveSentMessages
allMailMailboxUid
finishedInitialMailboxListLoad
fetchMailboxList
storeClass
_copyMailboxWithParent:name:attributes:dictionary:
_synchronouslyLoadListingForParent:
renameMailbox:newName:parent:
_deleteMailbox:reflectToServer:
mailboxPathExtension
syncAnchorForMailbox:
supportsRemoteAppend
supportsMailboxEditing
_infoForMatchingURL:
mailboxUidForInfo:
addRequest:consumer:mailbox:
processRequests:mailbox:
_specialMailboxUidWithType:create:
supportsMessageFlagging
shouldArchiveByDefault
sourceIsManaged
shouldFetchAgainWithError:foregroundRequest:
uniqueServerIdForMessage:
reconstituteOrphanedMeetingInMessage:
unactionableInvitationICSRepresentationInMessage:summary:
meetingStorePersistentID
shouldRestoreMessagesAfterFailedDelete
supportsServerSearch
daysToSync
supportsUserPushedMailboxes
pushedMailboxUids
changePushedMailboxUidsAdded:deleted:
signingIdentityPersistentReferenceForAddress:
setSigningIdentityPersistentReference:forAddress:
encryptionIdentityPersistentReferenceForAddress:
setEncryptionIdentityPersistentReference:forAddress:
perMessageEncryptionEnabledForAddress:
secureCompositionSigningPolicyForAddress:
secureCompositionEncryptionPolicyForAddress:
copyDataForRemoteEncryptionCertificatesForAddresses:errors:
copyDataForRemoteEncryptionCertificatesForAddress:error:
restrictedFromTransferingMessagesToOtherAccounts
restrictedFromSendingExternally
restrictedFromSyncingRecents
fetchLimits
unsupportedHandoffTypes
moveSupported
replayAction:
setVirtualAllSearchMailbox:
_accountConduit
_daAccount
_isNetworkReachable
_cachedAccountID
_cachedAccountPersistentUUID
_cachedDisplayName
_cachedEmailAddress
_cachedEmailAddresses
_cachedIconString
_cachedIsActive
_cachedIsHotmailAccount
_cachedCalendarEnabled
_cachedPerMessageEncryptionEnabled
_cachedSecureMIMEShouldSign
_cachedSecureMIMEShouldEncrypt
_cachedRestrictMessageTransfersToOtherAccounts
_cachedRestrictSendingFromExternalProcesses
_cachedRestrictSyncingRecents
_cachedIsManaged
_cachedSupportsMailDrop
_cachedArchiveByDefault
_cachedSourceIsManaged
_cachedStoreDraftsOnServer
_cachedInboxFolderID
_cachedSentMessagesFolderID
_cachedTrashFolderID
_cachedJunkFolderID
_cachedDraftsFolderID
_temporaryInbox
_loadedInitialMailboxList
_receivedInitialMailboxUpdate
_doneInitialInboxCheck
_observingPushedFoldersPrefsChanged
_supportsServerSearch
_supportsMessageFlagging
_supportsConversations
_supportsServerDrafts
_supportsUniqueServerId
_daysToSync
_requestQueuesByFolderID
_watchedFolderIdsLock
_folderTag
_supportsUniqueServerIdLock
_virtualAllSearchMailbox
T@"MFMailboxUid",&,N,V_virtualAllSearchMailbox
initWithName:attributes:forAccount:extraAttributes:
mergeWithUserInfo:
saveUserInfo
flushCriteria
userInfoObjectForKey:
URLForInfo:
mutableDictionaryRepresentation
URLWithAccount:
dictionaryRepresentation
T@"NSString",C
initWithAlwaysReportFailures:
initWithName:condition:andDelegate:
unlockWithCondition:
lockWhenCondition:beforeDate:
lockWhenCondition:
taskFailed:statusCode:error:
waitUntilDoneBeforeDate:
_doneCondition
_shouldRetryRequest
_alwaysReportFailures
shouldSend
filterRequests:
bodyFormat
processRequests:
streaming
streamingDone
initWithData:streaming:streamingDone:
resolvedRecipientsByEmailAddress:
_conditionLock
_resolvedRecipientsByEmailAddress
T@"NSError",R
notificationWithName:object:userInfo:
postNotification:
_postDeliveryAccountsHaveChanged
notificationWithName:object:
deliveryAccounts
accountWithIdentifier:
accountWithHostname:username:lookForExistingAccounts:
existingAccountWithHostname:username:
_updateAccountDescriptionWithUsername:hostname:
addDeliveryAccount:
copyCarrierBundleValue:
substringToIndex:
initWithMessage:
initWithHeaders:mixedContent:textPartsAreHTML:
initWithHeaders:HTML:plainTextAlternative:other:
setShouldUseAuthentication:
unsignedLongLongValue
maximumMessageBytes
numberWithUnsignedLongLong:
mailAccounts
reloadDeliveryAccounts
removeDeliveryAccount:
accountWithUniqueId:
existingAccountWithIdentifier:
accountWithHostname:username:
carrierDeliveryAccount
newDefaultInstance
setMaximumMessageBytes:
hasNoReferences
canBeFallbackAccount
hasEnoughInformationForEasySetup
supportsOutboxCopy
shouldUseSaveSentForAccount:
accountsWithTypeIdentifiers:error:
mainThreadScheduler
setAuthenticationState:
authenticationState
setSecurityLevel:
securityLevel
setMaxBuffer:
setCryptInfo:
setExpectedResponse:
_maxbuf
_securityLevel
_expectedResponse
_cryptInfo
mf_appendCString:
mf_encodeBase64WithoutLineBreaks
keyValuePairs
sequenceNumber
removeObjectAtIndex:
copyArgumentForSearchTerm:
eSearchIDSet:areMessageSequenceNumbers:arguments:success:returning:
isAtEnd
scanInteger:
scanLocation
characterAtIndex:
setScanLocation:
addIndexesInRange:
start
match:
parseSpace
emitWarning:
copyNumber
emitError:
response
copyMessageSet
parseIndexSetFromSequenceSet:
copyQuotedString
parseSearchReturn:
eSearchIDSet:areMessageSequenceNumbers:forTerms:success:returning:
parseESearchResponseWithContext:
_filterMailboxList:forMailboxWithPath:iisServer:
_syncOnly_defaultValueForShouldStoreJunkOnServer
storeDraftsOnServer
storeSentMessagesOnServer
filterMailboxList:forMailbox:options:
mf_lineBreakBeforeIndex:withinRange:
mf_nextWordFromIndex:forward:
whitespaceAndNewlineCharacterSet
getLineStart:end:contentsEnd:forRange:
setString:
mf_convertFromFlowedText:visuallyEmpty:
newWithPlainTextDocument:encoding:
outputString
addedTrailingSpaces
quotedString
getFormatFlowedString:insertedTrailingSpaces:encoding:
quotedString:
bodyParameterForKey:
formatFlowedOptions
urlMatchesForString:
range
rangeOfComposedCharacterSequenceAtIndex:
_findLineBreakInRange:maxCharWidthCount:endIsURL:
deleteCharactersInRange:
replaceOccurrencesOfString:withString:options:range:
fragmentCount
getString:quoteLevel:ofFragmentAtIndex:
_outputQuotedParagraph:range:withQuoteLevel:
_inputDocument
_encoding
_outputString
_quotedString
_addedTrailingSpaces
_lineString
currentLocale
localeIdentifier
getCharacters:
initWithCharacters:length:
ec_descriptionForMimeHeaders
localeWithLocaleIdentifier:
mf_descriptionForMimeHeaders
mf_replyPrefixForSender:
mf_boolForKey:
mf_integerForKey:
mf_setBool:forKey:
mf_setInteger:forKey:
mf_addObject:forKey:
mf_objectForKey:ofClass:
stringValue
removePasswordForServiceName:accountName:
passwordForServiceName:accountName:synchronizable:error:
_consumeExistingPreAuthToken
addClientToken:forAccount:
clientTokenForAccount:
archiveDestinationForMailbox:
previousFailureCount
initWithUser:password:persistence:
sender
useCredential:forAuthenticationChallenge:
statusCode
finishWithResult:
finishWithError:
stringByRemovingPercentEncoding
ef_gmailAuthAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
URLWithString:
responseCode
responseInfo
_URLFromUncleanString:
_webLoginErrorWithURL:
errorForResponse:
sharedCredentialStorage
allCredentials
removeCredential:forProtectionSpace:
future
initWithURL:
setValue:forHTTPHeaderField:
ephemeralSessionConfiguration
set_sourceApplicationBundleIdentifier:
sessionWithConfiguration:delegate:delegateQueue:
dataTaskWithRequest:
resume
resultWithTimeout:error:
invalidateAndCancel
_removeCredential:
supportsCapability:
specialUseAttributeForType:
specialUseAttributesForMailbox:
extraAttributes
setWithObject:
mailboxType
displayNameUsingSpecialNamesForMailboxUid:
anyObject
initWithKey:ascending:
sortedArrayUsingDescriptors:
_childOfMailbox:withComponentName:
childWithExtraAttribute:
imapNotEnabledPrefix
clientToken
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
_deleteHook
supportsFastRemoteBodySearch
xListSupportedOnConnection:
persistentNameForMailbox:
_enablingPromise
_clientToken
continuationResponses
failureReason
statusString
_urlFromResponse:
T@"GmailAccount",&,N,GmailAccountIfAvailable,V_account
registerSchemeClass:
isSubclassOfClass:
supportsInitialClientResponse
justSentPlainTextPassword
_sentResponse
saveSentFolder
T@"HotmailAccount",&,N,GmailAccountIfAvailable,V_account
urls
setUrls:
paths
setPaths:
T@"NSArray",C,Vurls
T@"NSArray",C,Vpaths
T@"IMAPAccount",&,Vaccount
flushOfflineCache
setHandlerForOfflineCacheFlush:
apsVersion
_readCustomInfoFromMailboxCache:
_writeCustomInfoToMailboxCache:
sharedManager
stopWatchingForTopic:
offlineCacheIfExists
saveChanges
saveState
test_setTaskManager:
test_tearDown
_useNewIMAPStack
initWithAccount:
_renameLocalSpecialMailboxesToName:
setConnectionError:
isResponseWithCode:
isAlertResponse
offlineCacheDirectoryPath
initWithContentsOfFile:options:error:
deleteInPlaceForAllMailboxes
isOffline
connectionState
_updateSeparatorAndNamespaceWithConnection:
throttledGetMailboxListWithConnection:
isNetworkUp
setIsOffline:
readBufferSize
setReadBufferSize:
mailboxActionPersistence
nextMailboxActionForAccountID:
actionType
mailboxName
createMailbox:
deleteMailbox:
actionID
deleteMailboxAction:
taskManager
_nameForMailboxUid:
noop
examineMailbox:
selectMailbox:withAccount:
checkInConnection:
checkInConnection:destroy:
mf_tryLock
gotBadResponse
_setCapabilities:
selectedMailbox
_shouldLogDeleteActivity
logout
disconnectAndNotifyDelegate:
powerlog:eventData:
_releaseAllConnectionsAndCallSuper:synchronously:edgeForcedOnly:saveOfflineCache:
_invokeBlock:
mailboxUidForName:
autofetchAccount:mailboxUid:
connectionForMailbox:delegate:options:failedToSelectMailbox:
_flushOfflineCache
invocationWithSelector:target:taskName:priority:canBeCancelled:
networkAssertionWithIdentifier:
networkChanged
userString
command
statusEntries
unsignedIntegerValue
updateMostRecentStatusCount:
_releaseAllConnectionsAndCallSuper:
serverPathPrefix
fetchSeparatorChar
_incrementCacheDirtyCount
isEqualToArray:
setFetchMinBytes:
setMinBytesLeft:
serverPathPrefixAccountValue
subscribedListingForMailbox:options:
listingForMailbox:options:getSpecialUse:statusDataItems:statusEntriesByMailbox:
initWithDictionary:
replaceObjectAtIndex:withObject:
ef_insertObject:usingSortFunction:context:allowDuplicates:
_listingForMailboxUid:listAllChildren:onlySubscribed:statusDataItems:withConnection:statusEntriesByMailbox:
_listingForMailboxUid:listAllChildren:onlySubscribed:
accountRelativePath
mf_fileSystemString
setActionType:
setMailboxName:
saveMailboxActionForAccountID:action:
localMailboxesDidChange
unselectMailbox:
isStore
parent
_listingForMailboxUid:listAllChildren:
mf_indexOfMailboxDictionaryWithName:
_setSpecialMailbox:forType:
setStoreMailboxType:onServer:
storeMailboxTypeOnServer:
descendantWithExtraAttribute:
specialMailboxNameForType:
isSpecialMailbox:
setWithArray:
intersectSet:
_mailboxListingChanged
_writeMailboxCacheWithPrejudice:completionHandler:
isForeground
getMailboxListWithConnection:statusDataItems:statusEntriesByMailbox:
isDraftsMailboxType:
enumerateKeysAndObjectsUsingBlock:
fetchStatusForMailboxes:args:
_assignSpecialMailboxToAppropriateIvar:forType:
setName:
setAttributes:
setExtraAttributes:
attributes
_deleteQueuedMailboxes:
_mailboxesWereRemovedFromTree:withFileSystemPaths:
_waitForMailboxListingLoadToComplete
mailboxUidFromActiveAccountsForURL:
deleteMailboxes:account:
_uidNameForPathComponent:
renameMailbox:toMailbox:
setRenamedMailboxName:
store
reselectMailbox
mf_decodedIMAPMailboxName
mf_encodedIMAPMailboxName
isShared
rangeOfString:options:
childWithName:
canMailboxBeDeleted:
_pathComponentForUidName:
_fileSystemServerPathPrefix
deleteMessagesFromMailboxUid:olderThanNumberOfDays:
initWithIMAPAccount:
path
offlineCache
hasPendingOfflineOperations
dictionaryWithCapacity:
redactedName:
dataUsingEncoding:allowLossyConversion:
ef_md5Digest
startWatchingForTopic:
swapTopic:forNewTopic:
mustRegisterForPushOnNextConnection
initWithSet:
_externalMailboxUids
unionSet:
setMustRegisterForPushOnNextConnection:
lastPushRegistration
supportedPushServiceLevel
updatePushRegisteredMailboxes:
setSupportedPushServiceLevel:
setAPSTopic:
setLastPushRegistration:
_notificationNameForMailbox:withPrefix:
localizedCompare:
sortUsingSelector:
_copyMailboxListForNames:
resetMailboxTimer
_schedulePushRegistrationConnection
canFetch
_copyMailboxListPreferenceForKey:
_copyUserPushedMailboxes
_updatePushedMailboxesAndNotify:
_notesPrefix
_copyPushedMailboxesForPrefix:
setWithCapacity:
mailboxesRegisteredForPushByHash
_apsDeviceTokenChanged:
connect
canRegisterForAPSPush
_registerForDeviceTokenChanges
apsTopic
_unregisterForDeviceTokenChanges
descriptionWithLocale:indent:
dateWithTimeIntervalSinceReferenceDate:
localActionPersistence
messageActionsForAccountURL:previousActionID:
lastKnownCapabilities
connection:shouldHandleUntaggedResponse:forCommand:
connection:didReceiveResponse:forCommand:
connectionDidDisconnect:
willRemoveDelegation:
setServerMessageCount:
setHighestModSequence:
shouldStartIdleForConnection:
mf_lockOrdering
minID
_dataForTemporaryUid:
allowsPartialDownloads
setAllowsPartialDownloads:
deleteInPlaceForMailbox:
connectAndAuthenticate:
_replayMailboxActionsWithConnection:
checkInConnectionsForStore:
verifyESearchSupportWithBlock:
releaseAllConnectionsSynchronously
acquireNetworkAssertion
releaseNetworkAssertion
setServerPathPrefix:
_mailboxPathPrefix
offlineCacheIfOffline
supportsAppend
serverRegisteredMailboxes:withTopic:version:
notificationNamesForPrefix:mailboxUids:
_registerPushNotificationPrefix:forMailboxNames:
mailboxNamesForPushRegistration
handlePushNotificationOnMailboxes:missedNotifications:
transferNotificationSessionToAccount:
messageActionsAfterActionID:
stateCaptureTitle
apsSenderArgument
setApsSenderArgument:
setApsVersion:
_separatorChar
_serverNamespace
_cachedConnections
_offlineCache
_timeLastFetchedMailboxList
_connectionLock
_nextConnectionTag
_packetContextAssertion
_lockOrderingArray
_readBufferSize
_offlineCacheFlushHandler
_fetchedMailboxList
_isOffline
_lastKnownCapabilities
_eSearchSupportedLock
_eSearchSupported
_lastPushRegistration
_apsTopic
_pushedMailboxUids
_pushRegisteredMailboxes
_supportedPushServiceLevel
_taskManager
_mustRegisterForPushOnNextConnection
_didRequestPushRegistration
_listeningForDeviceTokenChanges
_didUpdateSeparatorAndNamespace
_apsVersion
_apsSenderArgument
T@"NSString",C,N,V_apsSenderArgument
Ti,N,V_apsVersion
TB,R
setTag:
setMailboxListFilter:
hasSuffix:
initWithCommand:
initWithCommand:sequenceNumber:
setCommand:
arguments
setArguments:
setUntaggedResponses:
setSequenceNumber:
responseConsumer
setResponseConsumer:
_command
_arguments
_untaggedResponses
_sequenceNumber
_responseConsumer
Ti,N,V_command
T@"NSArray",&,N,V_arguments
T@"NSMutableArray",&,N,V_untaggedResponses
TQ,N,V_sequenceNumber
T@"MFIMAPResponseConsumer",&,N,V_responseConsumer
ef_posixLocale
setLocale:
setDateFormat:
stringFromDate:
stringWithCString:encoding:
setReadSizeParameters
isIdle
idleCommandSequenceNumber
_addCapabilities:
arrayWithObjects:
parenthesizedStringWithObjects:
copyDeviceToken
stringWithString:
serverInfo
minusSet:
_connectSocketUsingAccount:
_copyNextServerResponseForCommand:
isUntagged
_clearCapabilities
_doBasicConnectionUsingAccount:
_updateCapabilitiesForAccount:withAuthenticationResponse:
_tryConnectionUsingAccount:
unregisterForBytesAvailable
locked_finishIdle
numberOfNewlinesNeedingConversion:
fillLiteralBuffer:count:dataLength:nonSynchronizingLiteral:
_copyNextTaggedOrContinuationResponseForCommand:
enumerateByteRangesUsingBlock:
enumerateConvertingNewlinesUsingBlock:
_connectionLogPrefix
_logStringForCommand:
initWithConnection:responseConsumer:
useGenericDescription:
_fetchCapabilities
timeout
setTimeout:
loginWithAccount:password:
_sendApplePushForAccountIfSupported:
_sendClientInfoIfSupported
_enableCompressionIfSupported
_serverErrorForAccount:response:command:
setMoreInfo:
_doIMAPLoginForAccount:quotedUsername:password:
_sendCommands:response:
_doListCommand:withReference:mailboxName:options:getSpecialUse:statusDataItems:statusEntriesByMailbox:
_doNamespaceCommand
privateNamespaces
mailboxAttributes
separator
numberWithUnsignedInt:
_listingForMailbox:options:getSpecialUse:statusDataItems:statusEntriesByMailbox:withCommand:
_handleBytesAvailableInternal
handleBytesAvailable
registerForBytesAvailableWithHandler:
null
lazyFutureWithBlock:
result:
locked_scheduleIdleResetAfterDelay:
idleSubscriptionCancelable
hasValidConnection
globalAsyncSchedulerWithQualityOfService:
locked_startIdle
setIdleSubscriptionCancelable:
_errorForResponse:commandParams:
messageSetForUIDs:
_updateSearchCapabilityWithAccount:
_sendMailboxCommand:withArguments:
quotas
initWithFloat:
firstIndex
indexGreaterThanIndex:
searchIDSet:forTerms:success:
searchUidSet:forTerms:success:
countForSearchOfIDSet:forTerms:success:
searchResults
initWithType:
setFlagsArray:
setResponseType:
setUidFlagsChange:
setUids:
setFlagsFetchResult:
storeFlags:state:forMessageSet:
messageSetForRange:
calendarWithIdentifier:
dateByAddingUnit:value:toDate:options:
storeFlags:state:forUIDs:
_responseFromSendingCommand:andPossiblyCreateMailbox:
copyInfoForMessageInfo:
setUidValidity:
_dictionaryFromSourceUIDs:destinationUIDs:
setSourceUIDsToDestinationUIDs:
permanentFlags
appendData:toMailboxNamed:flags:dateReceived:newMessageInfo:
setNewMessageUID:
fetchResultWithType:
fetchData
initWithData:
mf_convertNetworkLineEndingsToUnix
initWithHeaderData:encoding:
copyFirstStringValueForKey:
integerForKey:
floatForKey:
removeIndexes:
messageSetForUIDs:maxTokens:remainder:
stringWithCapacity:
indexSetWithIndexesInRange:
enumerateRangesUsingBlock:
authenticationScheme
arrayWithObject:
userData
usesBase64EncodeResponseData
setData:
mf_lockWithPriority
_connectionStateDescription
partiallyRedactedStringForString:
mutableBytes
mutableCopyWithZone:
locked_scheduleIdle
sendResponsesForCommand:toQueue:
_fetchArgumentForMessageSkeletonsWithAllHeaders
sendResponsesForUIDFetchForUIDs:fields:toQueue:
sequenceIdentifierForUIDs:
setSequenceIdentifier:forUIDs:
_fetchArgumentForMessageUidsAndFlags
sendResponsesForUIDs:fields:flagSearchResults:toQueue:
setSearchResults:
searchTerms
mask
isPositiveMatch
cacheStateForUIDs:mask:existenceSetsFlag:
copyResponseForUID:
number
_logStringForIDs:
expunge
expungeUIDs:
storeFlagChange:forUIDs:
storeGmailLabels:state:forUIDs:
copyUIDs:toMailboxNamed:copyInfo:error:
moveUIDs:toMailboxNamed:copyInfo:error:
appendData:toMailboxNamed:flags:dateReceived:appendInfo:error:
fetchPipeline
downloadCache
mailboxListFilter
closeAndLogout
unselect
finishIdle
scheduleIdleReset
subscribeMailbox:
unsubscribeMailbox:
quotaPercentagesForMailbox:
countForSearchOfUidSet:forTerms:success:
getMailboxIDForUID:
storeFlags:state:forRange:
deleteMessagesOlderThanNumberOfDays:
_indexSetForIMAPInlineSet:
_headersToFetchIncludingThoseRequiredForRouting:withRecipients:
fetchMessageIdsForUids:
performCustomCommand:withArguments:
setReadBufferSizeFromElapsedTime:bytesRead:
messageSetForRange:butNotNumbers:
literalChunkSize
_readDataOfLength:
_isFetchResponseValid:
sendSkeletonResponsesForUIDs:includeTo:toQueue:
sendUidAndFlagResponsesForUIDs:sequenceIdentifierProvider:flagSearchResults:toQueue:
sendUidResponsesForSearchArguments:toQueue:
searchUIDs:withFlagRequests:
connectTime
setIdleCommandSequenceNumber:
setPermanentFlags:
_mailboxListFilter
_capabilityFlags
_verifiedESearchResponse
_gotBadResponse
_tag
_connectTime
_connectionState
_selectedMailbox
_capabilities
_lastRequiredHeaders
_commandNumber
_data
_expirationTime
_streamEventQueue
_noModSequence
_delegateState
_permanentFlags
_downloadCache
_fetchPipeline
_idleCommandSequenceNumber
_idleSubscriptionCancelable
TQ,N,V_idleCommandSequenceNumber
T@"<EFCancelable>",&,N,V_idleSubscriptionCancelable
TI,N,V_permanentFlags
T@"MFIMAPCommandPipeline",R,&,N,V_fetchPipeline
T@"MFIMAPDownloadCache",R,&,N,V_downloadCache
T@"<MFIMAPConnectionDelegate>",W,N,V_delegate
Ti,N,V_tag
Td,R,N,V_connectTime
TB,R,N,V_gotBadResponse
idle
TB,R,N,GisIdle
containsIndex:
_indexSetFromUIDs:
setUid:
_flagsForUID:
setMessageFlags:
setFetchResults:
_uidsWithFlagMaskSet
_uidsWithoutFlagMaskSet
initWithMask:searchTerms:positiveMatch:
requestWithMask:searchTerms:positiveMatch:
_isPositiveMatch
_mask
_searchTerms
TQ,R,N,V_mask
T@"NSArray",R,N,V_searchTerms
TB,R,N,V_isPositiveMatch
isPlatform:
compare:
mf_encodeModifiedBase64
dataWithBytes:length:
initWithLength:
mf_decodeModifiedBase64
operationType
flagsToSet
usesRealUids
uids
copyRemoteIDForTemporaryUid:
flagsToClear
initWithFlagsToSet:flagsToClear:forUIDs:inMailbox:
setUsesRealUids:
initWithMailboxToCreate:
_queueDeferredOperation:
initWithMailboxToDelete:
hasTemporaryUid
fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:downloadIfNecessary:didDownload:
headerDataForMessage:downloadIfNecessary:
writeToFile:options:error:
firstTemporaryUid
headers
firstHeaderForKey:
dateReceived
initWithAppendedUid:approximateSize:flags:internalDate:mailbox:
isSourceOfTemporaryUid:
actsOnTemporaryUid:
expungeTemporaryUid:
approximateSize
_performCreateOperation:withContext:
_performDeleteOperation:withContext:
_performStoreOperation:withContext:
_performAppendOperation:withContext:
_performCopyOperation:withContext:
drain
failureCount
setFailureCount:
setShouldFlattenCacheOperations:
firstUidForCopyingMessages:fromMailbox:toMailbox:
uidForAppendingMessageData:withFlags:andInternalDate:toMailbox:
hasOperationsForMailbox:
performDeferredOperationsWithConnection:
deferredOperations
_handle
_ops
_lastUid
_lastSave
_lastUidValidity
_opsPending
deserializedCopyFromData:cursor:
lastTemporaryUid
initWithUidsToCopy:fromMailbox:toMailbox:firstNewUid:
defaultManager
mf_makeCompletePath:mode:
serializeIntoData:
initWithBytes:length:encoding:
stringByTrimmingCharactersInSet:
_messageIDsFromFetchResultData:
ef_subarraysOfSize:
_searchUidsForMessageIDs:excludeDeleted:
_uidsForMessageIDs:excludeDeleted:
_getReferencesForMessageSet:
_getFirstLevelMessageIDsForReference:
uidsReferencedBy:
initWithMaxThreadCount:
setThreadRecycleTimeout:
condition
priority
_drainQueue:
initWithTarget:selector:object:
setQualityOfService:
mf_shouldLogInvocation
target
selector
initWithTimeIntervalSinceNow:
currentRunLoop
dateWithTimeIntervalSinceNow:
runUntilDate:
flushAllInvocationQueues
setMaxThreadCount:
maxThreadCount
invocationCount
removeAllItems
didCancel:
threadCount
threadPriorityTrigger
setThreadPriorityTrigger:
threadRecycleTimeout
_lock
_items
_numThreads
_maxThreads
_threadPriorityTrigger
_threadRecycleTimeout
TQ,N,V_threadPriorityTrigger
Td,N,V_threadRecycleTimeout
TQ,R,N,V_numThreads
initWithMailbox:readOnly:
initWithMailbox:taskManager:
initWithMailbox:
setLibrary:
serverMessagePersistenceFactory
serverMessagePersistenceForMailboxURL:
canCompact
canFetchMessageIDs
canFetchSearchResults
growFetchWindow
fetchMessagesWithMessageIDs:andSetFlags:
fetchNumMessages:preservingUID:options:
updateServerUnreadCountClosingConnection:
messageIdRollCall:
storeSearchResultMatchingCriterion:limit:offset:error:
compact
deleteMessagesOlderThanNumberOfDays:compact:
messageData
mf_rangeOfRFC822HeaderData
mf_subdataWithRange:
fetchDataForMimePart:range:isComplete:consumer:
fetchDataForMessage:didDownload:
initWithData:partial:incomplete:
_cachedBodyDataContainerForMessage:valueIfNotPresent:
_fetchBodyDataForMessage:andHeaderDataIfReadilyAvailable:downloadIfNecessary:partial:
_dataForMessage:readHeadersOnly:
fetchDataForMessage:partial:
_fetchHeaderDataForMessage:downloadIfNecessary:
fetchHeadersForMessage:
_handleFlagsChangedForMessages:flags:oldFlagsByMessage:
handleFlagsChangedForMessages:flags:oldFlagsByMessage:
messageForRemoteID:inMailbox:
messageWithRemoteID:inRemoteMailbox:
setMessageStore:
copyMessagesWithRemoteIDs:options:inMailbox:
fileExistsAtPath:
allowsAppend
setAllowsAppend:
bodyFetchRequiresNetworkActivity
doCompact
_fetchDataForMimePart:range:isComplete:consumer:
_fetchFullBodyDataForMessage:andHeaderDataIfReadilyAvailable:downloadIfNecessary:didDownload:
messageForRemoteID:
messagesWithRemoteIDs:
serverMessagePersistence
uidNext
setUidNext:
uidValidity
newHighestModSequence
setNewHighestModSequence:
hasValidCacheFileForMessage:
_serverMessagePersistenceFuture
T@"<MFIMAPMailboxTaskManager>",R,N,V_taskManager
T@"EDServerMessagePersistence",R,N
T@"IMAPAccount",R,D,N
initWithLibraryID:
originalMailboxID
urlForMailboxID:
messageBasePathForAccount:
fileURLWithPath:
mailboxUidForMessage:
_updateUID
libraryID
setRemoteID:
commit
setMessage:isPartial:
areMessageContentsLocallyAvailable:fullContentsAvailble:
setPreferredEncoding:
messageFlags
setFlags:forMessage:
summary
setSummary:
setSummary:forMessage:
setMessageFlagsWithoutCommitting:
dataPathForMessage:
dataPathForMessage:part:
sharedInstanceIfExists
accountForMessage:
setFlagsFromDictionary:forMessages:
originalMailboxURL
setData:forMessage:isPartial:
dataConsumerForMessage:part:
attachmentPersistenceManager
attachmentMigrator
migrateAttachmentsForMessageIfNecessary:
fileURLWithPath:isDirectory:
mimePartNumber
part
partNumber
globalMessageID
attachmentURLForGlobalMessageID:mimePartNumber:basePath:
mailDropMetadata
directUrl
attachmentURLForGlobalMessageID:remoteURL:basePath:
migrateMaildropFileForMessage:mailDropMetadata:
mailboxID
messageWithLibraryID:options:inMailbox:
_forceLoadOfMessageSummaryFromProtectedStore
loadCachedHeaderValuesFromHeaders:
fileAttributesForMessage:
fileSize
references
firstSender
accountContainingEmailAddress:
setDataDetectionAttributes
dataDetectionPersistence
getDataDetectionResultsForGlobalMessageID:
messageWithLibraryID:
bestAlternativePart:
persistentID
subject
from
senders
dateSent
listUnsubscribe
conversationID
isServerSearchResult
flags
isPartOfExistingThread
mimeBody
headersDictionary
messageIDHeader
messageIDHeaderHash
labels
documentID
numberOfAttachments
listIDHash
T@"ECSubject",R,C,N
T@"NSDate",R,N
T@"<ECMailbox>",R,N
Tq,R,N
T@"ECMessageFlags",R,N
partOfExistingThread
TB,R,N,GisPartOfExistingThread
T@"<ECMimeBody>",R,N
T@"NSDictionary",R,C,N
T@"ECAngleBracketIDHash",R,N
T@"NSSet",R
T@"<ECMailAccount>",R,N
T@"<ECMessageHeaders>",R,N
T@"NSUUID",R,C,N
displayDate
readLater
followUp
sendLaterDate
brandIndicatorLocation
brandIndicator
dataDetectionAttributes
bccIfAvailable
T@"<EDIndexableAccount>",R,N
T@"<EDIndexableMailbox>",R,N
T@"NSDate",R
T@"EMReadLater",R
T@"EMFollowUp",R,N
T@"NSURL",R,N
T@"NSData",R,N
T@"NSArray",R,C
setBrandIndicatorLocation:andData:
persistedMessageID
senderBucket
setDisplayDate:
setReadLater:
setSendLaterDate:
accountForSender
setFollowUp:
unsubscribeType
basePath
T@"NSDate",&
T@"EMReadLater",&
T@"<EDAccount>",R,N
T@"EMFollowUp",&,N
messageID
setMailboxID:
setOriginalMailboxID:
messageSize
setMessageSize:
uniqueRemoteId
setUniqueRemoteId:
isPartial
setIsPartial:
isMessageContentsLocallyAvailable
setHasTemporaryUid:
compareByUidWithMessage:
setFlags:
setMutableInfoFromMessage:
dataPathForMimePart:
markAsViewed
markAsNotViewed
markAsFlagged
markAsNotFlagged
markAsReplied
markAsForwarded
preferredAccountToUseForReplying
setConversationFlags:
setSenderBucket:
setRemoteID:flags:size:mailboxID:originalMailboxID:
setMessageData:isPartial:
dataConsumerForMimePart:
isLibraryMessage
storageLocationForAttachment:
setUnsubscribeType:
setReferences:
setReadLaterDate:
remoteContentLinks
setRemoteContentLinks:
setBrandIndicatorLocation:
_libraryID
_remoteID
_uid
_uniqueRemoteId
_size
_mailboxID
_originalMailboxID
_messageID
_conversationFlags
_senderBucket
_unsubscribeType
_references
_remoteContentLinks
_dataDetectionAttributes
_displayDate
_readLater
_sendLaterDate
_followUp
_brandIndicatorLocation
_brandIndicator
T@"MFMailboxUid",R,D,N
T@"MailAccount",R,D,N
T@"MFMessageHeaders",R,D,N
T@"NSArray",C,N,V_references
T@"MFLibraryStore",&,D,N
T@"NSArray",C,V_remoteContentLinks
Tq,N
T@"NSURL",&,N,V_brandIndicatorLocation
T@"NSDate",&,V_displayDate
T@"EMReadLater",&,V_readLater
T@"NSDate",&,V_sendLaterDate
T@"EMFollowUp",&,N,V_followUp
T@"NSData",R,N,V_brandIndicator
T@"NSDictionary",R,C,N,V_dataDetectionAttributes
T@"NSUUID",R,C,D,N
hasNonFullTextSearchableCriterion
_spotlightQuerySearchString:
queryStringByJoiningQueries:withOperand:
expressionWithQueryString:searchString:updatedSuggestion:
em_stringForQuotingWithCharacter:
_queryWithAttributes:matchingValue:qualifier:
_comparisonOperationMatchingValue:qualifier:
criteriaForSpotlightCriteria:
_queryWithAttributes:matchingValue:
_attributesForHeaderCriterion
dateWithTimeIntervalSince1970:
timeIntervalSinceReferenceDate
spotlightQueryExpression
fullTextSearchableCriterion
TB,R,N,GisFullTextSearchableCriterion
preferFullTextSearch
criterion
initWithCriterion:mailbox:readOnly:
_flushAllMessageData
_setOrGetBody:forMessage:updateFlags:
calculateAttachmentInfoFromBody:
_queueMessagesAdded:
_queueMessageFlagsChanged:
_queueMessagesWillBeCompacted:
_queueMessagesWereCompacted:
invalidateFetchWindow
groupedMessagesCountForCriterion:groupBy:
allNonDeleteCountForMailbox:includeServerSearchResults:includeThreadSearchResults:
messagesWithSummariesForMailbox:range:
messageIsDeletedCriterion:
messageIsServerSearchResultCriterion:
messagesMatchingCriterion:options:range:
generationNumber
copyOfMessagesInRange:options:generation:
copyOfMessagesInRange:options:
messagesWereAdded:
addCountsForMessages:shouldUpdateUnreadCount:
copyOfAllMessagesWithOptions:
messagesMatchingCriterion:options:
makeObjectsPerformSelector:withObject:
copyMessagesWithRemoteIDs:options:inRemoteMailbox:
serverSearchResultMessagesForMailbox:
dateOfOldestNonIndexedNonSearchResultMessageInMailbox:
dateOfOldestNonSearchResultMessageInMailbox:
setEarliestReceivedDate:
_fetchWindowMultiple
_fetchWindowMinimum
allNonDeletedCountIncludingServerSearch:andThreadSearch:
fetchWindowCap
serverMessageCount
fetchWindow
hasMoreFetchableMessages
_calculateFetchWindowWithAdditionalMultiple:
em_userDefaults
fetchMobileSynchronously:preservingUID:options:
willPerformActionForChokePoint:coalescePoint:result:
powerAssertionIdentifierWithPrefix:
retainAssertionWithIdentifier:withAccount:
didFinishActionForChokePoint:coalescePoint:withResult:
releaseAssertionWithIdentifier:
messageWithMessageID:options:inMailbox:
messageForMessageID:options:
filterContiguousMessages:forCriterion:options:
messagesWereAdded:earliestReceivedDate:
distantPast
filterMessagesByMembership:
messageFlagsDidChange:flags:
allMessageFlagsDidChange:
_memberMessagesWithCompactionNotification:
messagesWereCompacted:
messagesWillBeCompacted:
_cachedHeaderDataForMessage:valueIfNotPresent:
headerDataForMessage:
bodyDataForMessage:andHeaderDataIfReadilyAvailable:
initWithConsumer:
dataForMimePart:inRange:isComplete:withConsumer:downloadIfNecessary:didDownload:
done
parentPart
fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:downloadIfNecessary:usePartDatas:didDownload:
dataForMimePart:isComplete:
isHTML
storeRemoteContentLinksFromData:forMessage:mimePart:
detectDataFromPlainTextMessage:globalMessageID:mimePart:
dataConsumerForMessage:part:incomplete:
firstChildPart
nextSiblingPart
isAttachment
dataForMimePart:inRange:isComplete:downloadIfNecessary:didDownload:
decodedDataForData:
appendDataForMimePart:toData:withPartData:
fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:
messageBodyUpdatingFlags:
messageBodyIfAvailableUpdatingFlags:
topLevelPart
_copyDataFromMimePart:threshold:downloadIfNecessary:
bodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:
canArchiveForMailbox:
messageChangeManager
moveMessages:destinationMailboxURL:userInitiated:
deleteMessages:
messagesForMailbox:olderThanNumberOfDays:
compactMessages:
hasChanges
applyFlagChange:toMessages:
setFlagsLocallyFromDictionary:forMessages:
setNumberOfAttachments:isSigned:isEncrypted:forMessage:
isOpened
compactMailbox:
serverUnreadOnlyOnServerCount
unreadCount
externalID
setKeyGenerator:
setComparator:
_cachedHeadersForMessage:valueIfNotPresent:
nonDeletedCountForMailbox:
purgeMessages:
accountThatMessageIsFrom:
handleMessagesAdded:earliestReceivedDate:
_addInvocationToQueue:
handleMessageFlagsChanged:
handleMessagesWillBeCompacted:
handleMessagesCompacted:
hasCompleteDataForMimePart:
classForMimePart
defaultLoadOptions
storeWithMailbox:
headersClass
shouldDownloadBodyDataForMessage:
storageLocationForAttachment:withMessage:
storeData:forMimePart:isComplete:
mailboxUid
T@"MailAccount",R,N
T@"MFMailboxUid",R,N
openSynchronously
totalCount
copyOfAllMessages
copyMessagesMatchingCriterion:options:
serverSearchResults
dateOfOldestNonIndexedNonSearchResultMessage
willFetchMessages
shouldGrowFetchWindow
fetchMobileSynchronously:
storeSearchResultMatchingSearchText:criterion:limit:offset:error:
loadMeetingExternalIDForMessage:
loadMeetingDataForMessage:
loadMeetingMetadataForMessage:
bodyDataForMessage:isComplete:isPartial:downloadIfNecessary:
shouldDeleteInPlace
shouldArchive
archiveDestination
deleteMessages:moveToTrash:
messagesWereDeleted:
setFlag:state:forMessages:
updateMetadata
_setNeedsAutosave
newObjectCache
_cachedBodyForMessage:valueIfNotPresent:
purgeMessagesBeyondLimit:
hasMessageForAccount:
earliestReceivedDate
_state
_deletedMessagesSize
_deletedMessageCount
_generationNumber
_earliestReceivedDate
_criterion
_fetchWindow
_lastFetchCount
T@"NSDate",&,N,V_earliestReceivedDate
T@"MFMailMessageLibrary",&,N
_loadEntriesFromFileSystemPath:parent:
isContainer
_setChildren:forMailboxUid:
mf_isSubdirectoryOfPath:
fullPath
pathExtension
mf_stringByExpandingTildeWithSharedResourcesDirectoryInPath
fileExistsAtPath:isDirectory:
setMailboxType:
mutableCopyOfChildren
setChildren:
lastPathComponent
transientDraftsFolderShouldCreate:
sendLaterFolderShouldCreate:
resourceSpecifier
legacyPathNameForAccountWithHostname:username:
T@"LocalAccount",R,N
legacySQLExpressionToMatchAllMailboxes
isLocalAccount
_shouldConfigureMailboxCache
supportsPurge
mailboxUidForFileSystemPath:
transientDraftsFolder
sendLaterFolder
displayNameAtPath:
_addAccountToSortedPaths:
_loadDataAccessAccountsWithError:
existingDAMailAccountForDAAccount:
_removeLookAsideValuesNotInAccountList:
da_accountsWithAccountTypeIdentifiers:outError:
disableMailboxListingNotifications
_loadAllAccountsWithError:
_setMailAccounts:saveIfChanged:alreadyLocked:
enableMailboxListingNotifications:
mailAccountsWithError:
reloadAccounts
setMailAccounts:saveIfChanged:
setMaxConcurrentOperationCount:
indexOfObjectIdenticalTo:
_setupSortedPathsForAccounts:
addOperationWithBlock:
waitUntilAllOperationsAreFinished
notifyOfAccountsAdded:accountsRemoved:changedAccounts:
activeAccountsWithError:
activeAccounts
ef_firstObjectPassingTest:
hookRegistry
accountsAdded:
accountsRemoved:
accountsChanged:
isHostnameEquivalentTo:
compare:options:
fullUserName
_accountContainingEmailAddress:matchingAddress:fullUserName:includingInactive:
copyAddressListForResentFrom
accountContainingEmailAddress:includingInactive:
headersIfAvailable
accountForHeaders:message:includingInactive:
copyAddressListForTo
copyAddressListForCc
_setOutboxMailboxUid:
outboxMailboxUid
allMailboxUidsForAccounts:
purgeableAccounts
removeLastObject
setCacheHasBeenRead:
isActiveWithPersistentAccount:
_didBecomeActive:
_invalidateCachedMailboxen
newAccountWithPath:
deliveryAccountWillBeRemoved:
setupLibrary
storeClassForMailbox:
initWithBlock:
initWithLibrary:account:
_registerStateCaptureHandler
_setPath:
initWithLibrary:path:
mailAccountDirectory
baseAccountDirectoryPathForPersonaIdentifier:
_defaultMailAccountForDeliveryIncludingRestricted:
defaultMailAccountForDelivery
initWithBool:
string
numberWithDouble:
addEntriesFromDictionary:
mf_emailAddressesWithEquivalentDomains
ef_flatMap:
objectForKey:generator:
invalidateAccount:
arrayByApplyingSelector:
allLocalMailboxUids
outboxMessageStore:
deleteAccount:
deleteDeliveryAccountIfNeeded
_invalidateAndDeleteAccountData:
_asynchronouslyInvalidateAndDeleteAccountData:
emptyTrash
deliveryAccountInUseByOtherAccounts:
deliveryAccountAlternates
isStandardizedMailboxUid
_cachedSpecialMailboxOfType:
ownsMailboxUidWithURL:
allMailboxesFilteringNotes:
isNotesMailboxUid
exchangeObjectAtIndex:withObjectAtIndex:
suggestionsLostMessageSearchTimestamp
suggestionsLostMessageSearchResultCount
sortedArrayUsingComparator:
_canEmptyMessagesFromMailboxUid:
_emptyFrequencyForKey:defaultValue:
_setEmptyFrequency:forKey:
mailboxListingNotificationsAreEnabled
_resetSpecialMailboxes
depthFirstEnumerator
stringByDeletingLastPathComponent
ef_pathByReplacingRelativePathWithFolderName:
renameMailboxes:to:
stringByDeletingPathExtension
mf_stringByReallyAbbreviatingSharedResourcesDirectoryWithTildeInPath
cacheHasBeenRead
deleteMailbox:reflectToServer:
nextObject
children
arrayByExcludingObjectsInArray:
_resetAllMailboxURLs:
scheme
ef_hostNilForEmpty
_URLForInfo:
sharedReporter
reportIssueType:description:
infoForURL:
dataWithContentsOfFile:
propertyListWithData:options:format:error:
isSendLaterMailbox
checkForNewLocalActions
newActionsAdded
addNewAction:
mailboxUidForFileSystemPath:create:
_removeAccountFromSortedPaths:
accountBecameActive:
accountBecameInactive:
hasChildren
_cleanInboxDuplication:
contentsOfDirectoryAtPath:error:
mf_makeDirectoryWithMode:
mailboxCachePath
mailboxCacheWriteScheduler
dataWithPropertyList:format:options:error:
_setSpecialMailboxName:forType:
ef_accountAllowedCharacterSet
relativePath
globalMessageURL
pathRelativeToMailbox:
canMoveMessagesFromAccount:toAccount:profileConnection:
mayOpenFromManagedToUnmanaged
mayOpenFromUnmanagedToManaged
dictionaryForKey:
removeObjectsInArray:
removeObjectsForKeys:
synchronize
valueInAccountLookAsidePropertiesForKey:
setValueInAccountLookAsideProperties:forKey:
_setValueInAccountLookAsideProperties:forKey:subKey:
preventArchiveForMailbox:
emailAddressesFromStrings:invalidAddresses:
debugAccountState
initWithStateEventDictionary:identifier:lastKnownCapabilities:
lastMailAccountsReloadDate
setMailAccounts:
activeNonLocalAccounts
existingAccountWithType:hostname:username:
resetMailboxTimers
accountThatMessageIsFrom:includingInactive:
addressesThatReceivedMessage:
allPurgeableMailboxUids
allActivePrimaryMailboxUids
accountWithPath:
defaultMailAccountForDeliveryExcludingRestricted
defaultDeliveryAccount
saveStateForAllAccounts
accountWithURLString:
updateEmailAliasesForActiveAccounts
getConfigurationFromServerForEmail:
_accountWithPath:
canMoveMessagesFromAccount:toAccount:
mailboxForType:
containsMailboxWithURL:
smtpIdentifier
T@"ECAccount",R,N
T@"NSObject<OS_os_log>",R,N
T^{os_unfair_recursive_lock_s={os_unfair_lock_s=I}I},R
setFullUserName:
isPrimaryDeliveryAccountDisabled
setPrimaryDeliveryAccountDisabled:
setDeliveryAccountAlternates:
canUseDeliveryAccount:
setCanUseCarrierDeliveryFallback:
canUseCarrierDeliveryFallback
copyReceivingEmailAddresses
invalidateAndDelete
_synchronizeMailboxListWithFileSystem
forceFetchMailboxList
rootMailboxUid
mailboxesForSuggestionsLostMessageSearchPriorToTime:
transferDisabledMailboxUids
setMailboxUid:forMailboxType:
setEmptyFrequency:forMailboxType:
canCreateNewMailboxes
canMailboxBeRenamed:
moveMailbox:intoParent:
renameMailbox:newName:
resetMailboxURLs
connectionError
systemDidWake
systemWillSleep
supportsSyncingReadState
loggingIdentifier
setMailboxCachePath:
resetMailboxCache
newMailboxWithParent:name:
customSignature
setCustomSignature:
supportsHandoffType:
setMailboxCacheWriteScheduler:
setReplayHandler:
_path
_nonPersistentPath
_rootMailboxUid
_flagsLock
_inboxMailboxUid
_draftsMailboxUid
_sentMessagesMailboxUid
_trashMailboxUid
_archiveMailboxUid
_junkMailboxUid
_cachedMailboxenLock
_deletionLock
_lastConnectionError
_currentChokedActions
_mailboxCachePath
_messageStoresCache
_supportsFastRemoteBodySearch
_mailboxCacheWriteScheduler
_replayHandler
T@"<EFScheduler>",&,N,V_mailboxCacheWriteScheduler
T@"MFLocalActionReplayHandler",&,N,V_replayHandler
T@"<MFTaskManager>",R,N
T@"NSDate",&,N
TB,R,N,V_supportsFastRemoteBodySearch
setCountLimit:
handleFailureInFunction:file:lineNumber:description:
stringByAppendingPathExtension:
initWithName:attributes:forAccount:extraAttributes:type:
_initWithName:attributes:forAccount:
_dictionaryRepresentation
retainedReference
specialNameForType:
representedAccount
serverUnreadOnlyOnServerCountForMailbox:
unreadCountForMailbox:
unreadCountForMailbox:matchingCriterion:
defaultScheduler
mostRecentStatusCountForMailbox:
setMostRecentStatusCount:forMailbox:
_mutableChildren
childEnumeratorIncludingHiddenChildren:
_initWithMailbox:includeHiddenChildren:
numberOfDescendants
URLStringNonNil
fullPathNonNil
sortUsingFunction:context:
reference
topMailbox
removeChild:
isStandardizedMailboxUidType:
isSentMailboxType:
isOutgoingMailboxType:
ancestralAccount
mailboxIDForURLString:
callStackSymbols
initWithContentsOfFile:
_loadUserInfo
keyEnumerator
criterionForMailboxURL:
addToPostOrderTraversal:
fullyRedactedStringForString:
fileURLForMailboxURL:
typeIsValidTransferDestination:
uniqueId
decodedName
isRootMailbox
displayNameUsingSpecialNames
accountDisplayName
unreadCountMatchingCriterion:
shouldUseNonDeletedForUnreadCount
childEnumerator
numberOfChildren
childAtIndex:
indexOfChild:
sortChildren
isSpecialMailboxUid
isSentMailboxUid
isOutgoingMailboxUid
realFullPath
pathRelativeToMailboxForDisplay:
oldURLString
objectID
compareWithMailboxUid:
indexToInsertChildMailboxUid:
isDescendantOfMailbox:
userInfoBoolForKey:
setUserInfoBool:forKey:
userInfoDictionary
setUserInfoWithDictionary:
userInfoForSerialization
alwaysWriteFullMessageFile
updateSuggestionsLostMessageSearchResultCount:
_pathComponent
_parent
_children
_representedAccount
_realFullPath
_extraAttributes
_pendingLevel
_type
_isSendLater
_userInfo
_attributes
T@"EMMailboxObjectID",R,N
T@"NSArray",&,N,V_extraAttributes
TQ,N,V_attributes
T@"NSEnumerator",R,N
T@"MFMailboxUid",&,N
_mailboxes
_index
_includeHidden
compare:options:range:locale:
weakReferenceWithObject:
removeObjectIdenticalTo:
ef_sanitizedFileName
initWithFollowUpWarning:error:
followUpWarning
_followUpWarning
T@"SGMailIntelligenceFollowUpWarning",R,N,V_followUpWarning
T@"NSError",R,N,V_error
newWithMessage:
subjectString
_htmlBodyForMessage:
snippetFromHTMLBody:withMaxLength:preservingQuotedForwardedContent:
ec_partiallyRedactedStringForSubjectOrSummary:
serviceForMail
setSyncTimeout:
identifyFollowUpWarningFromSubject:body:date:error:
updateOriginalMessageFromHeaders:
stripInternalHeaders
setMessageBody:
compositionSpecification
initWithCompositionSpecification:
createMessageWithHTMLStringAndMIMECharset:plainTextAlternative:otherHtmlStringsAndAttachments:headers:
createMessageWithPlainTextDocumentsAndAttachments:headers:
setDateSentAsTimeIntervalSince1970:
originalHeaders
removeHeaderForKey:
setHeader:forKey:
headersForDelivery
messageBody
rawData
appendHeaderData:andRecipients:
dataHolderWithData:
addData:
deliverMessageData:toRecipients:
setStatus:
addNewMessages:mailboxURL:userInitiated:
_checkAndApplyFollowUpToDeliveredMessage:
initWithBase64EncodedData:options:
objectIDFromSerializedRepresentation:
startDate
dateByAddingTimeInterval:
endDate
toLightJson
initWithStartDate:endDate:jsonStringForModelEvaluationForSuggestions:
score
applyFollowUp:toMessages:
messageBodyIfAvailable
htmlContent
htmlData
preferredCharacterSet
newWithHeaders:mixedContent:textPartsAreHTML:
newWithHeaders:HTML:plainTextAlternative:other:
deliverMessage:
archiveAccount
setArchiveAccount:
deliveryStatus
deliveryResult
deliverAsynchronously
setCellDataOnly:
archive
setCompositionSpecification:
setIsUserRequested:
originalMessageObjectID
setOriginalMessageObjectID:
setOriginalMessage:
setAction:
setShouldSign:
setShouldEncrypt:
_message
_archiveAccount
_result
_headers
_compositionSpecification
_mixedContent
_textPartsAreHTML
_htmlString
_plainTextAlternative
_otherStringsAndAttachments
_threaded
_useCellDataOnly
_followUpFuture
_isUserRequested
_shouldSign
_shouldEncrypt
_originalMessageObjectID
_originalMessage
_action
T@"NSDictionary",&,N,V_compositionSpecification
TQ,N,V_conversationFlags
TB,N,V_isUserRequested
T@"EMMessageObjectID",&,N,V_originalMessageObjectID
T@"MFMailMessage",&,N,V_originalMessage
Tq,N,V_action
TB,N,V_shouldSign
TB,N,V_shouldEncrypt
T@,W,N
firstSenderAddress
mailboxScopeForMailboxObjectIDs:forExclusion:
initWithGlobalMessageID:mailboxScope:
validatePriority:
headersForMessage:fetchIfNotAvailable:
setPriorityFromHeaders:
setMessageIDHash:
componentsWithEmailAddress:
mailMessageStore
URLPathAllowedCharacterSet
removeCharactersInString:
setPercentEncodedPath:
setSubject:to:cc:bcc:sender:dateReceived:dateSent:summary:withOptions:
contentToOffset:resultOffset:downloadIfNecessary:asHTML:isComplete:
bestAlternativeInPart:
isVisuallyEmpty
preferredEncoding
listUnsubscribeCommands
hasHeaderForKey:
hasReplyPrefix
headersForKey:
forwardedMessagePrefixWithSpacer:
dataMessageStoreToUse
displayablePriorityForPriority:
setModSequenceNumber:
preferredEmailAddressToReplyWith
loadMeetingExternalID
loadMeetingMetadata
setSourceIsManaged:
remoteMailboxURL
shouldSetSummary
externalConversationID
bestAlternativePart
flagged
read
answered
junk
conversationVIP
conversationMuted
conversationHash
deleted
shouldUseMailDrop
setShouldUseMailDrop:
setGlobalMessageID:
_messageFlags
_modSequenceNumber
_globalMessageURL
_useInternalSourceIsManaged
_sourceIsManaged
_shouldUseMailDrop
_globalMessageID
Tq,N,V_globalMessageID
T@"EMMessageObjectID",R,N
TB,N,V_shouldUseMailDrop
T@"MFMessageStore<MFMailMessageStore>",&,D,N
T@"NSString",&,D,N
T@"NSURL",R,N,VbrandIndicatorLocation
T@"NSData",R,N,VbrandIndicator
T@"NSDictionary",R,C,N,VdataDetectionAttributes
useFlaggedForUnreadCount
unreadCountCriterion
signpostLog
renameOrRemoveDatabaseIfNeeded
initWithPath:inMemoryIdentifier:library:propertyMapper:
registerMessageChangeHookResponder:
database
setSetupIsComplete:
isAllowedToAccessProtectedData
URLByAppendingPathComponent:
allowedToAccessProtectedData
_setProtectedDataAvailabilityState:
messagePersistence
collectStatistics
messagesMarkedAsJournaled
messagesDeleted
messageDataDeleted
mailboxesNeedingReconcilication
protectedMessages
protectedMessageData
messagesIndexed
messagesToIndex
indexableMessages
attachmentsIndexed
attachmentsToIndex
indexableAttachments
initWithPath:inMemoryIdentifier:userAgent:
_cancelPendingJournalReconciliation
closeDatabaseConnections
stateCaptureCancelable
messagesTableName
registerColumnName:table:lookupKeys:forClass:property:
prefix
subjectWithoutPrefix
address
contentType
messageIDHash
messageGlobalDataTableName
persistenceDidInvalidate
unregisterAllHookResponders
fileRemovalAfterCompactionScheduler
reconcileJournalWithCompletionBlock:
applicationWillResume
storedIntegerPropertyWithName:
initWithLibrary:
setBodyMigrator:
bodyMigrator
startMigratingBodies
setAttachmentMigrator:
startMigratingAttachments
setBool:forKey:
remoteContentParser
invalidateAndWait
test_setDefaultInstance:
setStoredIntegerPropertyWithName:value:
pendingIndexItemsCount
searchableIndexManager
index
performWriteBlock:
postOldFlags:newFlags:forMessage:
postFlagsChangedForMessages:flags:oldFlagsByMessage:
preparedStatementForQueryString:
compiled
handleSQLResult:message:
removeSearchableItemsForMessages:
updateFlagsForMessages:changes:transformer:
transactionGeneration
insertGeneration:
persistenceDidUpdateProperties:message:generationWindow:
removeItemAtPath:error:
_fileType:orHigherExistsAtDirectory:
_writeEmlxFile:withData:protectionClass:
_removeEmlxFilesOfTypeLessThanType:inDirectory:
itemWithMessage:bodyData:fetchBody:
indexItems:
messageIDsBySubject
numberWithLongLong:
numberValue
int64Value
setConversationIDHash:
initWithPrefix:subjectWithoutPrefix:
setSubject:
setSender:
setDateSentInterval:
executeWithIndexedBindings:usingBlock:error:
handleError:message:
_recipientsForMessagesWithDatabaseIDs:includeTo:includeCC:includeBCC:
toRecipientStrings
setTo:
ccRecipientStrings
setCc:
bccRecipientStrings
setBcc:
matchMessageReferenceContext:withCandidateMessageReferenceContexts:
conversationIDHash
_insertThreadReferences:toMessageWithLibraryID:usingDatabaseConnection:
initWithTable:
addValue
enumerateIndexesUsingBlock:
executeInsertStatement:error:
conversationFlagsRef
isProtectedDataAvailable:
prefixLength
_addMessageToThreadAtUnlock:
_addThreadingInfoWithContext:usingDatabaseConnection:
conversationIDsOfMessagesInSameThreadAsMessageWithLibraryID:messageIDHash:
_conversationIdForMessageIds:
removeIndex:
persistenceWillChangeConversationID:messages:
checkForConnectionErrorWithMessage:
dateSentAsTimeIntervalSince1970
setConversationID:
flagsForConversationId:
criterionForNotDeletedConversationID:
setFlags:forConversationId:
persistenceIsChangingConversationID:messages:generationWindow:
column:
initWithTable:where:
executeDeleteStatement:error:
addMessages:withMailbox:newMessagesByOldMessage:remoteIDs:setFlags:addPOPUIDs:dataSectionsByMessage:generationWindow:
duplicateMessages:newRemoteIDs:forMailbox:setFlags:createNewCacheFiles:
messageDataHolderIsComplete:downloadIfNecessary:
initWithAddress:displayName:
objectValue
_recipientsForMessageWithDatabaseID:connection:recipientsCache:
initWithLibraryMessage:messageIDHash:mailboxURL:
persistenceWillAddMessage:fromExistingMessage:
ef_UTF8ConvertibleString
copyAddressListForSender
initWithAddress:
addToRecipient:
addCCRecipient:
copyAddressListForBcc
addBCCRecipient:
parseContentTypeHeader:type:subtype:
dateReceivedAsTimeIntervalSince1970
ef_UUID
referencesFromHeaders:
_findOrCreateDatabaseIDForAddress:comment:cache:connection:
_findOrCreateDatabaseIDForGlobalData:cache:connection:
_findOrCreateDatabaseIDForSubject:cache:connection:
_findOrCreateDatabaseIDForSummary:cache:connection:
executeWithNamedBindings:usingBlock:error:
lastInsertedDatabaseID
_addRecipients:toMessageWithDatabaseID:cache:connection:
setMessage:
setLibraryID:
subjectWithString:
setMessageIDsBySubject:
setConversationFlagsRef:
fullAddress
addReferenceForContext:usingDatabaseConnection:generationWindow:mergeHandler:
messageDataDirectoryURLForGlobalMessageID:basePath:purgeable:
partName
dataHolder
isComplete
_writeEmlxFileOfType:forAccount:toDirectory:withData:protectionClass:
mf_locationsOfUnixNewlinesNeedingConversion
_libraryMessageWithLibraryID:wasCached:
setGenerationNumber:
sendersIfCached
toIfCached
ccIfCached
bccIfCached
setSubject:to:cc:bcc:sender:dateReceived:dateSent:summary:
setContentType:
setExternalID:
initWithHash:
setListIDHash:
setMessageIDHeader:
persistenceIsAddingMessages:journaled:generationWindow:
ef_groupBy:
toRecipients
ccRecipients
bccRecipients
formattedAddressWithName:email:useQuotes:
_findOrCreateDatabaseIDForValue:inTable:column:cache:connection:created:
_removeDataFilesForGlobalID:
removeItemAtURL:error:
setWhereClause:
executeUpdateStatement:error:
databaseIDValue
setSenderList:
setToList:
setCcList:
setBccList:
persistenceDidChangeGlobalMessageID:orConversationID:message:generationWindow:
qualifiedColumnExpressionsForClass:property:availableTables:
hasLookupKey:class:property:
valueForLookupKey:class:property:
_selectExpressionForMessageWithAvailableTables:
sqlDB
executeUsingBlock:error:
_iterateStatement:connection:withProgressMonitor:andRowHandler:context:
newMessagesAvailable:
_messagesForMailbox:olderThanNumberOfDays:limit:
fileURLWithPath:relativeToURL:
checkResourceIsReachableAndReturnError:
valueWithBytes:objCType:
_enumerateMessageRemoteIDAndGlobalForMailbox:excluding:inLatest:block:
initWithIndexSet:
removeIndexesInRange:
performReadBlock:
sendMessagesMatchingCriterion:to:options:baseTable:range:
sendMessagesMatchingCriterion:to:options:baseTable:
distantFuture
_firstDateForQuery:inMailbox:
queryForCriterion:connection:options:baseTable:
setExpressionIsSanitized:
_int64ForQuery:connection:textArgument:
criterionForMailboxPredictionMessageQuery:variable:
queryForCriterion:connection:options:baseTable:isSubquery:
setAllowedExecutionTime:
_sendMessagesForStatement:connection:to:options:timestamp:
stringByAppendingString:
unreadCountForAggregatedMailboxes:matchingCriterion:
unreadCountForAggregatedMailboxes:
_flaggedCountForAggregatedMailboxes:
_attachmentCountForAggregatedMailboxes:
_includesMeCountForAggregatedMailboxes:
_readLaterCountForAggregatedMailboxes:
_sendLaterCountForAggregatedMailboxes:
includeRelatedMessages
countOfRelatedMessagesMatchingCriterion:forConversationsContainingMessagesMatchingCriterion:forMailboxCriterion:
queryForCriterion:connection:options:
_computeUnreadCountForMailboxes:
_queryForMailboxesIDsFromMailboxes:
_integerForQuery:withTextArgument:
flaggedCountForMailbox:
attachmentCountForMailbox:
includesMeCountForMailbox:
countMessagesMatchingCriterion:
nonDeletedCountForMailbox:includeServerSearchResults:includeThreadSearchResults:
nonDeletedCountForAggregatedMailboxes:includeServerSearchResults:includeThreadSearchResults:
persistenceDidUpdateServerCount:forMailboxWithObjectID:generationWindow:
persistenceDidUpdateLastSyncAndMostRecentStatusCount:forMailboxWithObjectID:generationWindow:
dataPathForMessage:type:
mf_protectFileAtPath:withClass:error:
persistenceDidUpdateMostRecentStatusCount:forMailboxWithObjectID:generationWindow:
_selectClauseForOptions:protectedDataAvailable:
_messageForRow:options:timestamp:connection:isProtectedDataAvailable:recipientsCache:
_canSelectMessagesWithOptions:connection:
ef_quotedSQLEscapedString
copyMessages
setCriterionIdentifier:
messageWithLibraryID:options:inMailbox:temporarilyUnavailable:
_keyForOptions:protectedDataAvailable:mailboxAvailable:mailboxCached:
remoteStoreForMessage:
_copyReferenceHashesWithoutMessagesForMessageWithConversation:
_getReferencesForHashesWithOwners:
stringForQuery:monitor:
reloadMailboxCacheWithConnection:
mailboxURLForMessage:
_schedulePeriodicStatisticsLogging
_scheduleIncrementalVacuum
addPostMigrationStep:
compactMessages:permanently:
ef_addObjectIfAbsent:
_notifyDidCompact:messages:mailboxes:
persistenceWillDeleteMessages:
_deleteMessages:connection:
persistenceIsDeletingMessages:generationWindow:
_removeSearchableItemsWithLibraryIDs:
cleanupProtectedTables
_addAddressesFromRecipientsForMessages:toSet:connection:
_deleteMessages:andCleanUpAddresses:subjects:summaries:brandIndicators:connection:
_removeGlobalDataForMessagesIfNecessary:connection:
executeStatementString:errorMessage:
_existingValuesForColumn:table:fromValues:connection:
_deleteRows:fromTable:connection:
transactionWithDescription:
initWithResultColumn:table:
setWhere:
executeSelectStatement:withBlock:error:
_maxRowIDInSet:
updateLargestDeletedRowID:forTableName:withConnection:
persistenceIsDeletingAllMessagesInMailboxWithURL:generationWindow:
persistenceDidDeleteAllMessagesInMailboxesWithURLs:generationWindow:
removeAllMessagesFromMailbox:removeMailbox:andNotify:
removeSearchableItemsForMailbox:
migrateBodyForMessageIfNecessary:
URLByAppendingPathComponent:isDirectory:
attachmentsForMessage:withSchemes:
attributesOfItemAtPath:error:
persistenceManager
attachmentURLForMessageAttachmentID:basePath:
isReadableFileAtPath:
initWithLibrary:message:part:partial:incomplete:relaxDataProtection:compressionQueue:
storeRemoteContentLinksFromFullData:forMessage:
dataConsumerForMessage:isPartial:
cStringUsingEncoding:
_setSummary:forMessageWithRowID:connection:
initWithResult:table:
setLimit:
dataValue
originalString
loadData:forMessage:usingBlock:
unarchivedObjectOfClasses:fromData:error:
bodyDataAtPath:headerData:
headerDataAtPath:
dataWithContentsOfFile:options:error:
_equalToMailboxIDsFromCriterion:
_activeAccountsClause
queryForCriterion:connection:options:baseTable:isSubquery:range:
sendMessagesMatchingCriterion:to:options:baseTable:range:success:
queryParser
sqlQueryForQuery:
predicate
queriesSeparatedByMailboxForQuery:
_sqlQueryForQuery:byConvertingToCriteria:queryTransformer:connection:options:
ef_reduce:
_iterateMessagesWithResultHandler:options:monitor:sqlQueryGenerator:
handleMessage:
sqlQueryWithConversionLogForQuery:
criterionForQuery:
messageIsJournaledCriterion:
queryOptions
ef_simplifiedPredicate
_predicatesSeparatedByMailboxForPredicate:containsMailboxPredicate:
targetClass
sortDescriptors
limit
label
initWithTargetClass:predicate:sortDescriptors:suggestion:limit:queryOptions:label:
targetClassOptions
initWithTargetClass:predicate:sortDescriptors:limit:queryOptions:targetClassOptions:label:
ef_matchesEverything
ef_matchesNothing
compoundPredicateType
_predicatesSeparatedByMailboxForOrPredicate:containsMailboxPredicate:
_predicatesSeparatedByMailboxForAndPredicate:containsMailboxPredicate:
isPredicateForMessagesInMailboxObjectID:mailboxObjectID:
isPredicateForMessagesInMailboxWithType:mailboxType:
mailboxPersistence
mailboxObjectIDsForMailboxType:
predicateForMessagesInMailboxWithObjectID:
subpredicates
ef_prefix:
andPredicateWithSubpredicates:
schema
protectedSchema
accountsProvider
vipManager
initWithSchema:protectedSchema:searchableIndex:accountsProvider:vipManager:messagePersistence:mailboxPersistence:
iterateMessagesMatchingCriterion:withResultHandler:options:withMonitor:
sendMessagesMatchingCriterion:to:options:range:
sendMessagesMatchingCriterion:to:options:
removeSearchableItemsForAccount:
initWithExpressions:
rebuildActiveAccountMailboxesExpression:
rebuildActiveAccountsClauseWithActiveAccounts:inactiveAccounts:
disqualified
_mailboxesClauseForAccounts:
suspend
refresh
enableIndexingAndBeginScheduling:
setPersistenceAvailable:
duration
_shouldLogDatabaseStats
_logStatistics
protectedDatabaseAttached
_scheduleJournalReconciliation
updateThreadingInfoForMessage:fromHeaders:
openConnectionIsWriter:
performIncrementalVacuumForSchema:
closeAllConnections
removeLibraryOnNextLaunch
_renameLibraryAtPath:
createFileAtPath:contents:attributes:
mf_uniqueFilenameWithRespectToFilenames:
_nonLocalAccountsClause
removeSearchableItemsForAccount:mailboxID:
removeItemsForDomainIdentifier:
_stringsForIndexSet:
removeItemsWithIdentifiers:
reindexSearchableItemsWithIdentifiers:acknowledgementHandler:
reindexAllSearchableItemsWithAcknowledgementHandler:
objectForKey:wasCached:
dateValue
columnExistsWithName:
initWithUUIDString:
setDateReceivedAsTimeIntervalSince1970:
ec_integerDate
setDocumentID:
initWithDate:
persistenceWillReadMessage:fromRow:
addToRecipientWithAddress:displayName:
addCCRecipientWithAddress:displayName:
addBCCRecipientWithAddress:displayName:
initWithOptions:cancelationToken:
shouldAddRemoteContentLinksForMessage:logMessage:
isMailPrivacyProtectionAllowed
shouldVerifyRemoteLinks
addRemoteContentLinks:
_shouldStoreRemoteContentForMessage:
_storeRemoteContentLinksCachedOnMessage:linksToVerify:
_shouldPerformDataDetectionForMessage:
_processMessageData:forMessage:linksToVerify:parsingOptions:
_findHTMLPartsFromHeaderData:bodyData:forMessage:linksToVerify:parsingOptions:
setTopLevelPart:
setMimeBody:
parseMimeBodyFromHeaderData:bodyData:isPartial:
subdataWithRange:
_processRemoteContentFromData:forMimePart:linksToVerify:forMessage:parsingOptions:
textHtmlPart
subtype
subparts
preferredMimeCharset
charsetName
addRemoteContentLinks:andVerifyWithParsedLinks:defaultCharsetName:
addRemoteContentLinks:requiredParsing:
dataDetectionResults
addDataDetectionResults:globalMessageID:
richLinkResults
richLinkPersistence
saveRichLinkData:globalMessageID:basePath:
parseHTMLData:withOptions:characterEncodingName:forMessage:completionHandler:
_getHTMLFromPlainTextData:mimePart:
textEncoding
persistenceWillBeginUpdates
persistenceDidFinishUpdates
persistenceDidAddMessages:generationWindow:
persistenceDidReconcileJournaledMessages:generationWindow:
persistenceDidUpdateData:message:
persistenceDidDeleteMessages:generationWindow:
persistenceWillChangeFlags:messages:
persistenceIsChangingFlags:messages:generationWindow:
persistenceDidChangeFlags:messages:generationWindow:
persistenceWillChangeReadLaterDate:messages:
persistenceDidChangeReadLaterDate:messages:changeIsRemote:generationWindow:
persistenceDidUpdateSendLaterDate:messages:generationWindow:
persistenceDidUpdateFollowUpForMessages:generationWindow:
persistenceWillUpdateDisplayDateForMessages:
persistenceIsUpdatingDisplayDateForMessage:fromDate:generation:
persistenceDidUpdateDisplayDateForMessages:changeIsRemote:generation:
persistenceDidChangeVIPStatus:messages:
persistenceDidChangeConversationNotificationLevel:conversationID:generationWindow:
persistenceDidAddLabels:removeLabels:messages:generationWindow:
persistenceWillTransferMessages:transferType:destinationMailboxURL:userInitiated:
persistenceDidAddDataDetectionResults:generationWindow:
signpostID
contentProtectionStateChanged:previousState:
T@"MFMailMessageLibrary",R
_setSuspendedUnderLock:
bodyMigrationFinished
attachmentMigrationFinished
updateFlagsForMessagesInPlace:success:
setFlagsFromDictionary:forMessagesInMailboxURLString:
notifyNewDataAvailableForMessages:
duplicateMessages:newRemoteIDs:forMailbox:setFlags:clearFlags:messageFlagsForMessages:createNewCacheFiles:
willStartPersistenceDidAddMessages:
didFinishPersistenceDidAddMessages:
updateAdditionalThreadingInfoForSentMessageWithHeaders:externalConversationID:
iterateStatement:connection:withProgressMonitor:andRowHandler:context:
messagesForMailbox:limit:
newestUIDsMissingBodyDataForMailbox:excluding:inLatest:limit:
groupedMessagesCountByMailboxMatchingQuery:variable:
orderedBatchOfMessagesEndingAtRowId:limit:success:
countDistinctMessagesMatchingCriterion:
attachmentCountForMailboxes:
nonDeletedCountForAggregatedMailboxes:
totalCountForMailbox:
indexedCountForMailbox:limit:
setServerUnreadOnlyOnServerCount:forMailbox:
setLastSyncAndMostRecentStatusCount:forMailbox:
increaseProtectionOnFileForMessage:
sequenceIdentifierForMessagesWithRemoteIDs:inMailbox:
setSequenceIdentifier:forMessageWithLibraryID:
setSequenceIdentifier:forMessagesWithRemoteIDs:inMailbox:
messagesWithMessageIDHeader:
loadMoreMessagesForThreadContainingMessage:hasNoMoreMessages:
stringForQuery:
reloadMailboxCacheIfNecessaryWithConnection:
mailboxURLsForIDs:
mailboxIDForURLString:createIfNecessary:
clearServerSearchFlagsForMessagesWithLibraryIDs:
scheduleRecurringActivity
setConversationInfo:syncKey:flags:
deleteAttachmentsForMessage:inMailboxFileURL:
fileURLForAttachmentPersistentID:messageID:result:
dataConsumerForMessage:
setData:forMessageToAppend:
_setMessageData:libraryID:part:partial:complete:connection:
bodyDataForMessage:
queryForCriterion:connection:options:range:
iterateMessagesMatchingQuery:byConvertingToCriteria:queryTransformer:withResultHandler:options:withMonitor:
iterateMessagesMatchingCriterion:options:handler:
messagesMatchingCriterion:options:range:success:
messagesMatchingCriterion:options:success:
rebuildActiveAccountsClausesAndExpressionsWithAccounts:
enabledAccountMailboxesExpression
deletePOPUID:inMailbox:
UIDsToDeleteInMailbox:
allUIDsInMailbox:
hiddenPOPUIDsInMailbox:
protectedDataAvailability
_indexSetOfMessagesDeleted
_canAccessProtectedData
journalWasReconciled
migrate
journalReconciliationFailed
handleFailedMigration
indexableMessagesWhere:sortedBy:limit:options:
removeMessagesFromCacheWithLibraryIDs:
_libraryMessageCache
stringFromAllMailboxUnreadCount
messageDataExistsInDatabaseForMessageLibraryID:part:length:
storeRemoteContentLinksFromHeaderData:bodyData:forMessage:
dataProvider
searchableIndexScheduler
setSearchableIndexScheduler:
setQueryParser:
setFileRemovalAfterCompactionScheduler:
currentAddedMessagesMap
setCurrentAddedMessagesMap:
messagesParsedCache
_attachmentDataProvider
_mailboxCache
_statsQueue
_activeAccountClause
_nonLocalAccountClause
_enabledAccountMailboxesExpression
_protectedDataAvailability
_keyBagQueue
_conversationCalculationQueue
_messagesToThreadAtUnlock
_compressionQueue
_searchableIndex
_searchableIndexLock
_suspendedUnderLock
_remoteContentParser
_remoteContentParserLock
_messagesParsedCache
_mailboxLock
_addedMessagesMapLock
_mailboxURLsToMailboxIDs
_optionsToQueries
_allowedToAccessProtectedData
_persistence
_database
_searchableIndexScheduler
_queryParser
_fileRemovalAfterCompactionScheduler
_currentAddedMessagesMap
_bodyMigrator
_stateCaptureCancelable
_attachmentMigrator
T@"EDSearchableIndexScheduler",&,N,V_searchableIndexScheduler
T@"EDMessageQueryParser",&,N,V_queryParser
T@"<EFScheduler>",&,N,V_fileRemovalAfterCompactionScheduler
T@"NSMutableDictionary",&,N,V_currentAddedMessagesMap
T@"MFMessageBodyMigrator",&,V_bodyMigrator
T@"<EFCancelable>",R,N,V_stateCaptureCancelable
T@"EDWebContentParser",R,N
T@"NSCache",R,N,V_messagesParsedCache
T@"EDPersistenceHookRegistry",R,N
T@"MFMessageAttachmentMigrator",&,V_attachmentMigrator
T@"EDPersistence",R,V_persistence
T@"MFPersistenceDatabase_iOS",R,V_database
T@"MFMessageChangeManager_iOS",R
TB,R,N,V_allowedToAccessProtectedData
transmogrifier
setTransmogrifier:
_messages
_monitor
_transmogrifier
T@?,C,N,V_transmogrifier
_block
_cancelled
pathForStorage
_consumer
_part
_partial
_incomplete
_relaxDataProtection
ef_stringByTrimmingOuterQuotes
_fullAddress
_address
T@"NSString",R,C,N,V_address
T@"NSString",R,C,N,V_displayName
_bcc
setClass:
setProperty:
objectPropertyWithClass:property:
property
_class
_property
T#,N,V_class
T:,N,V_property
libraryMessage
urlString
forwardingTargetForSelector:
_messageIDHash
_libraryMessage
_urlString
T@"MFLibraryMessage",R,N,V_libraryMessage
T@"NSString",R,C,N,V_urlString
T@"NSString",R,C,D,N
T@"ECSubject",R,C,D,N
T@"NSArray",R,C,D,N
T@"NSDate",R,D,N
T@"<ECMailbox>",R,D,N
Tq,R,D,N
T@"ECMessageFlags",R,D,N
TB,R,D,N,GisPartOfExistingThread
T@"<ECMimeBody>",R,D,N
T@"NSDictionary",R,C,D,N
T@"NSSet",R,D
T@"<ECMailAccount>",R,D,N
T@"<ECMessageHeaders>",R,D,N
TQ,R,D,N
T@"ECAngleBracketIDHash",R,D,N
persistenceIsAddingMailboxWithDatabaseID:objectID:generationWindow:
initWithFile:account:
addFile:
mf_stringFromMimeRichTextString:asHTML:
initWithMimePart:htmlData:encoding:
mf_stringFromMimeEnrichedString:asHTML:
copyBodyDataToOffset:resultOffset:downloadIfNecessary:isComplete:
htmlContentToOffset:resultOffset:downloadIfNecessary:
mf_dataUsingEncoding:
setVisuallyEmpty:
bodyData
fileWrapperForcingDownload:
fileWrapper
fileWrapperForDecodedObject:withFileData:
configureFileWrapper:
setURL:
isRecognizedClassForContent:
initWithMimePart:
_shouldContinueDecodingProcess
attachmentClass
decodeTextRichtext
decodeTextEnriched
decodeTextHtml
htmlContentToOffset:resultOffset:
decodeTextPlain
decodeTextCalendar
decodeMultipartAppledouble
storeData:inMessage:isComplete:
decodeText
messageWithRFC822Data:withParentPart:
messageURL
setMessageURL:
initWithMessageData:parentPart:
allManagers
addProvider:forBaseURL:
isGenerated
contentToOffset:resultOffset:asHTML:isComplete:
decodeMessageDelivery_status
decodeMessageRfc822
decodeMessagePartial
decodeMessageExternal_body
hasBeenDownloaded
isOnWWAN
_displayedMimePart
approximateRawSize
shouldDownloadAttachmentOnDisplay
criteriaFromDefaultsArray:removingRecognizedKeys:
initWithDictionary:andRemoveRecognizedKeysIfMutable:
setExpression:
setQualifier:
initWithCriterion:expression:
messageRuleQualifierForString:
includeRemoteBodyContent
descriptionWithDepth:
_qualifierString
stringForCriterionType:
stringForMessageRuleQualifier:
commaSeparatedString
uniqueHeaderKeyStringForString:
doesMessageSatisfyCriterion:
_headersRequiredForEvaluation
copyHeadersForKey:
isStructuredHeaderKey:
_evaluatePartOfStructure:
localizedCaseInsensitiveCompare:
rangeOfString:options:range:locale:
attachments
mimePart
attachmentFilename
setWeekOfYear:
_evaluateCompoundCriterion:
_evaluateFlagCriterion:
_evaluateAddressBookCriterion:
_evaluateHeaderCriterion:
_evaluateSenderHeaderCriterion:
_evaluateAccountCriterion:
_evaluateDateCriterion:
_evaluateAddressHistoryCriterion:
_evaluateFullNameCriterion:
_evaluateIsDigitallySignedCriterion:
_evaluateIsEncryptedCriterion:
_evaluatePriorityIsNormalCriterion:
_evaluatePriorityIsHighCriterion:
_evaluatePriorityIsLowCriterion:
_evaluateAttachmentCriterion:
_evaluateConversationIDCriterion:
_evaluateMailboxCriterion:
_evaluateReadLaterCriterion:
_evaluateSenderBucketCriterion:
simplifyOnce
criterionForMailbox:
criterionForConversationID:
setUseFlaggedForUnreadCount:
_todayDateComponents
_criterionForDateReceivedBetweenDateComponents:endDateComponents:
expressionForDate:
dateFromComponents:
_criterionForDateReceivedBetween:endDate:
criterionForDateReceivedNewerThanDate:
criterionForDateReceivedOlderThanDate:
criteriaFromDefaultsArray:
defaultsArrayFromCriteria:
criterionFromDefaultsDictionary:
defaultsDictionaryFromCriterion:
criterionForAccount:
criterionExcludingMailboxes:
criterionForLibraryID:
criterionForDocumentID:
senderIsVIPCriterion:
threadNotifyMessageCriterion
threadMuteMessageCriterion
flaggedMessageCriterion
criterionForFlagColor:
readMessageCriterion
includesMeCriterion
toMeCriterion
ccMeCriterion
hasAttachmentsCriterion
todayMessageCriterion
yesterdayMessageCriterion
lastWeekMessageCriterion
readLaterMessageCriterion
followUpMessageCriterion
sendLaterMessageCriterion
messageCriterionForUnsubscribeTypeNotMatching:
matchEverythingCriterion
matchNothingCriterion
dateFromExpression
isVIPCriterion
expressionLanguages
setExpressionLanguages:
setPreferFullTextSearch:
setIncludeRelatedMessages:
setIncludeRemoteBodyContent:
_criterionIdentifier
_qualifier
_name
_uniqueId
_expression
_criteria
_dateUnitType
_allCriteriaMustBeSatisfied
_dateIsRelative
_includeRelatedMessages
_requiredHeaders
_preferFullTextSearch
_useFlaggedForUnreadCount
_expressionIsSanitized
_includeRemoteBodyContent
_expressionLanguages
_suggestion
_libraryIdentifiers
Ti,N,V_qualifier
T@"NSArray",C,N,V_expressionLanguages
T@"CSSuggestion",C,N,V_suggestion
T@"EFMutableInt64Set",&,N,V_libraryIdentifiers
TB,N,V_preferFullTextSearch
TB,N,V_useFlaggedForUnreadCount
TB,N,V_includeRelatedMessages
TB,N,V_expressionIsSanitized
TB,N,V_includeRemoteBodyContent
T@"NSString",&,N,V_name
T@"NSArray",C,N
decodeValueOfObjCType:at:
encodeValueOfObjCType:at:
encodeWithCoder:
initWithCoder:
realFlags
setRead:
setDeleted:
setReplied:
setFlagged:
setFlagColor:
setDraft:
setForwarded:
setRedirected:
setJunkLevel:
initWithBuilder:
replied
flagColor
draft
forwarded
redirected
junkLevel
changesReadTo:
changesDeletedTo:
changesRepliedTo:
changesFlaggedTo:
changesFlagColorTo:
changesForwardedTo:
changesRedirectedTo:
changesJunkLevelTo:
setReason:
readChanged
deletedChanged
repliedChanged
flaggedChanged
flagColorChanged
forwardedChanged
redirectedChanged
junkLevelChanged
reason
draftChanged
initFileURLWithPath:
setDataHolder:
setPartial:
setComplete:
setPartName:
_dataHolder
_complete
_partName
partial
TB,N,GisPartial,V_partial
complete
TB,N,GisComplete,V_complete
T@"MFDataHolder",&,N,V_dataHolder
T@"NSString",&,N,V_partName
bundleWithIdentifier:
localizedStringForKey:value:table:
initWithCertificateType:trust:sender:
initWithSender:signingTrust:encryptionTrust:verification:
signingCertificateTrustInfo
encryptionCertificateTrustInfo
_signingCertificateTrustInfo
_encryptionCertificateTrustInfo
_sender
T@"MFCertificateTrustInfo",R,N,V_signingCertificateTrustInfo
T@"MFCertificateTrustInfo",R,N,V_encryptionCertificateTrustInfo
T@"NSString",R,N,V_sender
senderAddressComment
setType:
setSubtype:
addSubpart:
mf_utf8HTMLStringWithString:
charset
callStackReturnAddresses
setBodyParameter:forKey:
disposition
setContentID:
setMutableHeaders:
createMessageWithString:headers:
createMessageWithHtmlString:plainTextAlternative:otherHtmlStringsAndAttachments:headers:
createMessageWithHtmlString:attachments:headers:
appendHeadersForMimePart:toHeaders:
newDataForMimePart:withPartData:
allows8BitMimeParts
setAllows8BitMimeParts:
allowsBinaryMimeParts
setAllowsBinaryMimeParts:
allowsQuotedPrintable
setWriteSizeDispositionParameter:
setMessageClassToInstantiate:
shouldWriteAttachmentPlaceholders
setShouldWriteAttachmentPlaceholders:
_messageClassToInstantiate
_allows8BitMimeParts
_allowsBinaryMimeParts
_writeSizeDispositionParameter
_allowsQuotedPrintable
_shouldWriteAttachmentPlaceholders
T@,W,N,V_delegate
T@"NSDictionary",R,N,V_compositionSpecification
TB,N,V_shouldWriteAttachmentPlaceholders
isLastCharacterNewLine
_rawData
_count
_lastNewLine
encodedHeaders
dataWithCapacity:
mf_makeImmutable
mutableHeaders
messageData:messageSize:isComplete:downloadIfNecessary:
messageDataHolder:messageSize:isComplete:downloadIfNecessary:
_messageBody
_messageHeaders
mf_bestMimeCharsetUsingHint:
cfStringEncoding
charsetForEncoding:
mf_bestMimeCharsetForMessageDeliveryUsingSubtype:
stringByReplacingOccurrencesOfString:withString:
preferredFilename
isImageFile
setDispositionParameter:forKey:
setDisposition:
isSymbolicLink
symbolicLinkDestination
isRegularFile
regularFileContents
fileAttributes
contentID
mimeType
setMimeType:
setPathExtension:
setFilename:
osType
setOsType:
setPreferredFilename:
metadataValueForKey:
fileName
isPlaceholder
fetchPlaceholderData
fetchDataSynchronously:stripPrivateMetadata:
setFileName:
contentTransferEncoding
setStandardLineBreak
setAllowSlash:
setPadChar:
ef_lossyDefaultCStringBytes
messageWriter:willGenerateHeadersForMimePart:
copyNewMimeBoundary
bodyParameterKeys
mf_appendRFC2231CompliantValue:forKey:
dispositionParameterKeys
dispositionParameterForKey:
contentDescription
languages
contentLocation
messageWriter:willEncodeHeaders:forMimePart:
insertString:atIndex:
setContentTransferEncoding:
isReadableText
mf_dataByConvertingUnixNewlinesToNetwork
setForTextPart:
initWithBytesNoCopy:length:freeWhenDone:
newSignedPartWithData:sender:compositionSpecification:signatureData:
newEncryptedPartWithData:compositionSpecification:encryptedData:
mf_messageIDStringWithDomainHint:
versionString
fetchNow:
fetchNow:withMailboxes:completion:
fetchNow:withAccount:
fetchNow:withMailboxes:fromAccount:completion:
accountClassForPersistentAccount:error:
_accountClassStringWithPersistentAccount:error:
_accountClassForString:error:
errorWithDomain:code:userInfo:
loadBundleForAccountClassString:error:
_bundlePathForAccountClassString:
bundleWithPath:
loadAndReturnError:
bundlePath
accountWithPersistentAccount:error:
accountWithAccountTypeIdentifier:error:
setPersistentStore:
_accountsStoreChanged:
accountTypeWithAccountTypeIdentifier:
initWithAccountType:
defaultStore
accountsWithAccountTypeIdentifiers:error:
_shouldUpdateAccountsInPlace
_accountWithPersistentAccount:useExisting:
_accountWithAccountClass:persistentAccount:useExisting:
isDirty
saveVerifiedAccount:withCompletionHandler:
removeAccount:withCompletionHandler:
_accountStoreLock
_accountStore
T@"ACAccountStore",R
observableWithResult:
isSatisfied
conditionsObservable
satisfied
TB,R,N,GisSatisfied
T@"EFObservable",R,N
_isValidConfiguration
setSatisfied:
subscribeWithResultBlock:
scheduler
lowPowerModeObservable
pluggedInObservable
batteryLevelObservable
wifiObservable
lockStateObservable
processInfo
mf_thermalStateObservable
combineLatest:
floatValue
requireExternalPower
minBatteryLevel
requireLowPowerModeDisabled
requireWiFi
requireScreenLocked
maxThermalPressureLevel
map:
distinctUntilChanged
doOnError:
observeOn:
alwaysSatisfiedCondition
setRequireExternalPower:
setRequireWiFi:
setRequireScreenLocked:
setRequireLowPowerModeDisabled:
setMinBatteryLevel:
setMaxThermalPressureLevel:
Tf,N
T@"<MFActivityCondition>",R,N
cancellationToken
setCancellationToken:
setScheduler:
_requireExternalPower
_requireWiFi
_requireScreenLocked
_requireLowPowerModeDisabled
_satisfied
_minBatteryLevel
_maxThermalPressureLevel
_cancellationToken
_scheduler
TB,N,V_requireExternalPower
TB,N,V_requireWiFi
TB,N,V_requireScreenLocked
TB,N,V_requireLowPowerModeDisabled
Tf,N,V_minBatteryLevel
Tq,N,V_maxThermalPressureLevel
TB,N,GisSatisfied,V_satisfied
T@"EFCancelationToken",&,N,V_cancellationToken
T@"<EFScheduler>",&,N,V_scheduler
initWithBundleId:
observableObserver
predicateMatchingBundleIdentifier:
handleForPredicate:error:
currentState
endowmentNamespaces
descriptor
setValues:
setEndowmentNamespaces:
setStateDescriptor:
setPredicates:
setUpdateHandler:
monitorWithConfiguration:
state
taskState
previousState
observerDidReceiveResult:
T@"MFAppStateMonitor",R,N
appIsVisibleObservable
_isVisible
_underlyingMonitor
_observable
visible
TB,R,N,GisVisible
initWithCondition:
classNamed:
apsEnvironment
APSConnection
initWithEnvironmentName:namedDelegatePort:queue:
publicToken
connection:didReceivePublicToken:
_startAPS_nts
enabledTopicsWithTopics:
setEnabledTopics:ignoredTopics:
countForObject:
cloudKitAPSTopics
topic
wasFromStorage
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveToken:forInfo:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
setLaunchMachServiceName:
_stopAPS_nts
_pushService
_watchedTopics
_unwatchedTopics
_deviceTokenLock
_deviceToken
_launchMachServiceName
isMailDrop
metadataForAttachment:forKey:
setMetadataForAttachment:toValue:forKey:
filterWithConsumer:
isDataAvailableLocally
isContainedInRFC822
fetchDataForAttachment:
fetchLocalData:stripPrivateMetadata:
isContainedInCompose
promise
discreteProgressWithTotalUnitCount:
_dataProvider
fetchDataForAttachment:consumer:progress:completion:
readFromDisk
filterData:
fileURL
fetchCompletionBlock
finishWithResult:error:
setFetchCompletionBlock:
fetchDataSynchronouslyForAttachment:
isPlaceholderSerializedRepresentation:
placeholderFromSerializedRepresentation:
dataForPlaceholder:
setPlaceholder:
placeholder
fetchDataSynchronously:
writeData:toTemporaryFileURLWithFileName:
fetchLocalData
initRegularFileWithContents:
rawDataForContentID:
rangedFilterWithConsumer:range:
serializedRepresentation
placeholdersAvailable
setMetadataValue:forKey:
encodedFileSize
progressWithTotalUnitCount:
setCompletedUnitCount:
contentTypeConformsToEventVCS
filterVCSData:
rangeOfData:options:range:
replaceBytesInRange:withBytes:length:
isInvalid
isExpired
isCached
icsRepresentation
eventID
_dataProviderForAttachmentURL:error:
dataProviderWithURL:
exists
messageForAttachment:
fetchMaxBytes
currentDownloadLimit
mf_stringForMimeTypeFromFileName:
conformsToType:
isVideoFile
fileNameByStrippingZipIfNeeded:
updatePath
_filePathForAttachment:
ef_declaredUTTypeFromExtension
isDynamic
typeWithMIMEType:
_fileUTTypeForFileName:
_contentIDForAttachment:
setContentID:forAttachment:
isPDFFile
isSinglePagePDF:
_isSinglePagePDFFileFetchLocalData:
sizeOnDisk
decodedFileSize
numberWithUnsignedLong:
dataWithContentsOfURL:options:error:
textEncodingGuessWithData:
fileUTType
typeWithIdentifier:
contentTypeConformsToEventICS
conformsToTypeIdentifier:
initWithURL:attachmentManager:
decodeFilterWithDataConsumer:
fetchDataToURL:
fileWrapperUsingFetchedLocalData
isMailDropPhotoArchive
setIsPlaceholder:
setMailDropMetadata:
newDownloadProgress
filterICSData:
isAvailable
isCalendarFile
setEventID:
setMeetingStorePersistentID:
setIcsRepresentation:
hasCalendarMetadata
shouldAutoDownload
inferredMimeType
isRFC822
isMediaFile
remoteImageFileName
setRemoteImageFileName:
attachmentContentTypeForFileName:
isSinglePagePDFFile
setDecodedFileSize:
setEncodedFileSize:
textEncodingNameForData:mimeType:
contentTypeConformsToVCard
contentTypeConformsToEvent
contentTypeConformsToProvisionment
contentTypeConformsToMarkup
contentTypeConformsToPassbook
contentTypeConformsToIWork
setUrl:
setPart:
setMimePartNumber:
isAutoArchive
attachmentDataProvider
setAttachmentDataProvider:
customConsumer
setCustomConsumer:
wantsCompletionBlockOffMainThread
setWantsCompletionBlockOffMainThread:
imageDimensions
setImageDimensions:
_attachmentManager
_placeholder
_isAutoArchive
_wantsCompletionBlockOffMainThread
_url
_mimePartNumber
_disposition
_fetchCompletionBlock
_customConsumer
_imageDimensions
T@"NSURL",&,N,V_url
T@"MFMimePart",&,N,V_part
T@"NSString",C,D,N
T@"NSString",R,D
T@"NSString",C,N,V_mimePartNumber
T@"NSString",C,N,V_disposition
TB,R,V_isAutoArchive
TB,D
T@"MFAttachmentPlaceholder",&,N,V_placeholder
T@"NSItemProvider",&,N,V_attachmentDataProvider
T@"EMMailDropMetadata",&,D,N
T@?,C,N,V_fetchCompletionBlock
T@"<MFDataConsumer>",&,N,V_customConsumer
TB,N,V_wantsCompletionBlockOffMainThread
T{CGSize=dd},N,V_imageDimensions
initWithAttachment:
completeWithData:error:
attachment
downloadProgress
lastProgressBytes
setLastProgressBytes:
lastProgressTime
setLastProgressTime:
_attachment
_downloadProgress
_lastProgressBytes
_lastProgressTime
T@"MFAttachment",R,N,V_attachment
T@"NSProgress",R,N,V_downloadProgress
T@?,R,C,N,V_fetchCompletionBlock
TB,R,N,V_wantsCompletionBlockOffMainThread
Tq,N,V_lastProgressBytes
Td,N,V_lastProgressTime
capabilitiesDictionary
mailDropAvailableForAccount:
_mailDropLimit
mailDropAvailable
aa_primaryAppleAccount
_isMailDropDevice
mailDropConfigured
currentUploadLimit
currentMessageLimit
mailDropThreshold
currentPlaceholderThreshold
attachmentCapabilities
currentUploadLimitForAccount:
mailDropExpiration
mailDropPreferences
attachmentDownloadQueue
T@"MFInvocationQueue",R,N
addDataConsumer:
initWithMainConsumer:
completedUnitCount
totalUnitCount
_callProgressBlockForAttachmentURL:withBytes:expectedSize:
ef_observeKeyPath:options:usingBlock:
setFileAttributes:
initWithGlobalMessageID:name:mimePart:attachmentID:remoteURL:
persistAttachment:attachmentMetadata:basePath:error:
ef_connectionInterruptedError
_fetchCompletedForAttachment:error:
_fetchInvocationCallUsingBlock:
setPowerAssertionId:
_queueForAttachment:
attachmentForURL:error:
componentsWithURL:resolvingAgainstBaseURL:
setQuery:
attachmentForContentID:preferredSchemes:
_providerForURL:
_contentIDWithoutBracket:
addData:forContentID:
initWithData:forContentID:
ef_filenameWithExtensionForMimeType:
sharedMappings
MIMETypeForExtension:
addDataItemProvider:forContentID:
initWithAttachmentDataItemProvider:forContentID:
attachmentForCID:
attachmentForData:mimeType:fileName:contentID:context:
removeDataForAttachment:
_composeAttachmentDataProviderForContext:
recordPasteboardDataForAttachments:
recordUndoDataForAttachments:
_fetchDataForAttachment:withProvider:request:syncLock:
attachmentsForContext:
attachmentForItemProvider:mimeType:fileName:contentID:context:
loadAttachmentURL:forContextID:
updateAttachment:withNewData:
removeAttachmentForURL:
recordPasteboardAttachmentsForURLs:forContextID:
recordUndoAttachmentsForURLs:forContextID:
_defaultDownloadQueue
_composeAttachmentURLs
_composeAttachmentsQueue
attachmentsManager
clearMetadataForAttachment:
attachmentsBaseURL
removeProviderForBaseURL:
initWithContextID:
contextID
attachmentForContentID:
setHostIdentifier:forAttachment:
attachmentForHostIdentifier:
setAttachmentsBaseURL:
setAttachmentsManager:
_hostIdentifierToAttachmentContentIDMap
_contextID
_attachmentsBaseURL
_attachmentsManager
T@"NSString",R,N,V_contextID
T@"NSURL",&,N,V_attachmentsBaseURL
T@"MFAttachmentManager",&,N,V_attachmentsManager
isFileURL
_isFileURL
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_fileAttributes:
dataProviderWithPath:
errorWithMessage:code:
save:
T@"NSURL",&,V_url
setMessageLibrary:
messageLibrary
setTotalUnitCount:
mf_lastPartNumber
initWithConsumers:expectedSize:
setProgressBlock:
partWithNumber:
dataForMimePart:inRange:withConsumer:downloadIfNecessary:
mf_rowID
setPersistenceManager:
_messageLibrary
_persistenceManager
T@"EDAttachmentPersistenceManager",&,N,V_persistenceManager
T@"MFMailMessageLibrary",W,V_messageLibrary
partURL
attachmentForURL:withMimeBody:error:
initWithPrimaryLibrary:
allKeysForObject:
mf_isValidAttachmentURL
mf_partNumbers
URLByDeletingLastPathComponent
_setupAttachment:withMimeBody:error:
persistAttachmentMetadata:
addChild:withPendingUnitCount:
_cancelFetchForAttachment:
setCancellationHandler:
tryLockWhenCondition:
ef_partition:
indexesOfObjectsPassingTest:
objectsAtIndexes:
supportedDocumentUTIs
removeProvider:
imageScalingQueue
compressionQueue
attachmentsForURLs:error:
attachmentForTextAttachment:error:
insertMessageAttachmentMetadataToPersistence:forMessage:
_arrayAccessQueue
_providers
_providersLock
_attachments
_metadata
_metaDataLock
_imageScalingQueue
makeAttachmentPlaceholder:fileSize:mimeType:contentID:
securityScopeForFileURL:
startWriteAccess
cloneFileAtURL:toPlaceholderURL:
stopAccess
writeData:forURL:
fileURLString
useMailDrop
placeholderDirectory
JSONObjectWithData:options:error:
_setJSONDictionary:
_placeholderMagic
dataWithJSONObject:options:error:
dataWithData:
securityScopedURL:withToken:
futureWithResult:
completionHandlerAdapter
securityScopeForPlaceholderURL:completionBlock:
then:
writeToURL:options:error:
copyItemAtURL:toURL:error:
dataWithContentsOfURL:
setResourceValues:error:
setResourceValue:forKey:error:
removePlaceholderForFileURL:
mf_canonicalizedAbsolutePath
_localStoreURLForFileData:contentID:
setFileSize:
setFileURLString:
attachmentPlaceholderForFileURL:fileName:fileSize:type:contentID:
attachmentPlaceholderForData:fileName:type:contentID:
hasPlaceholderRepresentation:
placeholderRepresentations:
setFileProtectionForFileAt:error:
removePlaceholder:
serializedPlaceholderForFileName:fileSize:mimeType:contentID:
setUseMailDrop:
_jsonDictionary
attachmentData:fileName:mimeType:contentID:
decodeObjectOfClass:forKey:
encodeObject:forKey:
attachmentData:fileName:mimeType:
supportsSecureCoding
_fileName
_mimeType
_contentID
T@"NSData",&,N,V_data
T@"NSString",&,N,V_fileName
T@"NSString",&,N,V_mimeType
T@"NSString",C,N,V_contentID
temporaryDirectory
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
_temporaryDirectoryUniqueURL
initFileURLWithPath:isDirectory:
placeholderAttachmentForFileName:fileSize:mimeType:contentID:completionBlock:
temporaryFileURLWithExtension:
mimeTypeForFileName:
shouldCreatePlaceholderAttachmentForAttachmentWithSize:
securityScopedURL:
isBundle
isFileBundleURL:
archiveDirectory
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
getResourceValue:forKey:error:
_stripBundlePath:entryPath:
initWithContents:path:
setArchiveEntry:
contents
compressContents:completion:
dataForFileBundleURL:
initWithSecurityScopedURL:withToken:
_attachSecurityScope
startAccessingSecurityScopedResource
coordinateWritingItemAtURL:options:error:byAccessor:
isWritableFileAtPath:
checkPromisedItemIsReachableAndReturnError:
_temporaryReadURL:error:
coordinateReadingItemAtURL:options:error:byAccessor:
linkItemAtURL:toURL:error:
stopAccessingSecurityScopedResource
_removeTemporaryReadURL
initWithBytesNoCopy:length:
securityScopeToken
startReadAccess
_fileCoordinator
_securityScopedURL
_securityScopeToken
_secureReadURL
_securedRead
_secureWriteURL
_securedWrite
uidForItem:
initWithIndexesInRange:
serverMessagesForIMAPUIDs:limit:returnLastEntries:
imapUID
shouldSyncFlags
flagsForItem:
messagePersistentID
sequenceIdentifierForItem:
reflectDeletedMessagesWithRemoteIDs:mailboxURL:
_store
_connection
_currentUID
_missingUIDs
_serverMessages
_shouldCompact
_shouldFetch
_isSearching
serverFlags
changeFrom:to:
reflectFlagChanges:forMessagesWithRemoteIDs:mailboxURL:
dataTaskWithRequest:completionHandler:
taskIdentifier
initWithReceiveEmailAliasAddresses:emailAddresses:defaultEmailAddress:entityTag:isSuccess:notModified:accountNeedsToUpdateProperties:
valueForHTTPHeaderField:
host
aliasAuthorizationHeader
aliasUserAgent
ak_addDeviceUDIDHeader
ak_addClientInfoHeader
setTimeoutIntervalForResource:
initWithIdentifier:
set_appleIDContext:
setUnderlyingQueue:
_isRunning
_requestCount
_accountNeedsToUpdateProperties
_isSuccess
_notModified
_receiveEmailAliasAddresses
_emailAddresses
_defaultEmailAddress
_entityTag
T@"NSDictionary",R,N,V_receiveEmailAliasAddresses
T@"NSDictionary",R,N,V_emailAddresses
T@"NSString",R,N,V_defaultEmailAddress
TB,R,N,V_accountNeedsToUpdateProperties
T@"NSString",R,N,V_entityTag
TB,R,N,V_isSuccess
TB,R,N,V_notModified
mf_blockRemoteContent
evaluateTrust:withOptions:signerEmailAddress:
trustEvaluation
trust
certificateType
_unevaluatedTrust
_trustEvaluation
_uncommentedSender
_certificateType
TQ,R,N,V_certificateType
T@"NSString",R,C,N,V_sender
T@"ECSecureMIMETrustEvaluation",R,N
T^{__SecTrust=},R,N
initWithTrust:certificateType:sender:
certificateTrustInformationFromMFCertificateTrustInfo:
newTrustManager
addressForSaving
actionForSMIMETrust:sender:
_hasExceptionsForSMIMETrust:sender:
addSMIMETrust:sender:
removeSMIMETrust:sender:
canSaveCertificateToKeychain
certificate
saveEncryptionCertificate:forAddress:
copyEncryptionCertificateForAddress:error:
initWithTrustInformation:
hasTrustException
addTrustException
removeTrustException
saveCertificateToKeychain
removeCertificateFromKeychain
keychainStatus
_addressForSaving
_trustInformation
_keychainManager
Ti,R,N
T@"NSString",R,C,N,V_addressForSaving
_commonInitWithDataProvider:forContentID:
isEqualToData:
dataForContentID:
registeredTypeIdentifiers
loadDataRepresentationForTypeIdentifier:completionHandler:
_dataForAttachment:
_attachmentsData
_attachmentsPlaceholderData
_attachmentsPasteboardData
_attachmentsUndoData
mf_decodeFailedErrorWithUserInfo:
content
folderId
initWithStatusCode:error:folderID:folderName:
folderChange:finishedWithStatus:error:
_statusCode
_folderName
Tq,R,V_statusCode
T@"NSError",R,V_error
T@"NSString",R,V_folderID
T@"NSString",R,V_folderName
mf_alwaysReportFailures
handleResponse:error:
drainMailbox
receiveSyncActions:
commitSyncActions
actionsConsumer
initWithItemChangeType:changedItem:serverId:
serverId
originalThreadMonitor
handleSyncResponses:
setStreamConsumer:
requestType
streamingContentConsumer
streamConsumer
shouldBeginStreamingForMailMessage:format:
consumeData:length:format:mailMessage:
didEndStreamingForMailMessage:
refreshFolderHierarchyAndWait:
updateFolderListForAccountID:andDataclasses:requireChangedFolders:isUserRequested:
resultsForMailbox:newTag:actions:responses:percentComplete:moreAvailable:
resultsForMailbox:newTag:actions:responses:percentComplete:moreAvailable:sentBytesCount:receivedBytesCount:
partialResultsForMailbox:actions:responses:percentComplete:moreAvailable:
_requestPairs
_bodyData
_receivedFirstItem
_firstSyncBatch
_syncKeyResets
_serverErrors
_syncResponseConsumersByMessageId
_accountHierarchyLock
_moreAvailable
_streamConsumer
T@"NSString",C,N,V_tag
T@"<DAMailboxStreamingContentConsumer>",&,N,V_streamConsumer
TB,R,N,V_moreAvailable
conversationId
mf_encodeBase64
rfc822Data
messageWithRFC822Data:
lastVerb
meetingRequestUUID
bodySize
valueForKeyPath:
initWithDAMailMessage:mailbox:
_rfc822CreatedMessage
_externalConversationID
_DAMailMessage
T@"DAMailMessage",R,N,V_DAMailMessage
consumerFactory
dataConsumerForPart:
setAlternatePartConsumer:
alternatePartConsumer
dataConsumer
succeeded
didBeginStreaming
timeOfLastActivity
setDataConsumer:
setConsumerFactory:
requestedFormat
setRequestedFormat:
_requestedFormat
_dataConsumer
_alternatePartConsumer
_consumerFactory
_triedCreatingAlternatePartConsumer
_didBeginStreaming
_succeeded
_timeOfLastActivity
Ti,N,V_requestedFormat
T@"<MFCollectingDataConsumer>",&,N,V_dataConsumer
T@"<MFCollectingDataConsumer>",&,N,V_alternatePartConsumer
T@"<MFMessageDataConsumerFactory>",&,N,V_consumerFactory
T@"DAMailMessage",R,N,V_message
T@"NSMutableData",R,N,V_bodyData
Td,R,N,V_timeOfLastActivity
setMonitor:
initRequestForBodyFormat:withBodySizeLimit:isUserRequested:
isEqualToDate:
setLatestDateToAdd:
backedByVirtualAllSearchMailbox
mailboxSearchQueryWithSearchString:predicate:consumer:
setBodyType:
setCollectionID:
setMIMESupport:
setRange:
setTruncationSize:
setPriorToDate:
setDeepTraversal:
resetDoneCondition
searchResult
setContinueOffset:
daSearchPredicate
daBasicSearchString
_remoteIDsMatchingSearchText:predicate:limit:offset:filterByDate:handler:
initRequestWithSetFlags:unsetFlags:message:
initRequestWithMessageID:
isMostDefinitelyBase64ed
setIsGenerated:
initRequestForBodyFormat:withMessageID:withBodySizeLimit:
initRequestForBodyFormat:withFolderID:withServerID:withLongID:withBodySizeLimit:
performFetchMessageSearchResultRequests:consumer:
hasLocalCopyOfData
_fetchBodyDataForSearchResult:folderID:format:streamConsumer:
_fetchBodyDataForNormalMessage:format:part:streamConsumer:
setStore:
initWithActivityMonitor:
initWithAttachmentName:andMessageServerID:
initWithConsumer:expectedSize:
progressBlock
setProgressFilter:
performFetchAttachmentRequest:consumer:
fetchSucceeded
dataWasBase64
decryptedTopLevelPartForPart:
defaultAlternativeForPart:
copyBodyDataToOffset:resultOffset:downloadIfNecessary:
alternativeAtIndex:
bestAlternativeForPart:
wantsLineEndingConversionForMIMEPart:
fetchBodyDataForRemoteID:
_downloadHeadersForMessages:
messageCanBeTriaged:
setBackedByVirtualAllSearchMailbox:
_DAFolder
_backedByVirtualAllSearchMailbox
TB,N,V_backedByVirtualAllSearchMailbox
initRequestForBodyFormat:withBodySizeLimit:
deferredOperation
consumer
format
numNewMessages
T@"MFActivityMonitor",&,N,Vmonitor
T@"MFError",&,N,Verror
itemChangeType
isDraft
readIsSet
flaggedIsSet
verbIsSet
clearRead
reflectFlagChanges:forMessages:
setRead
clearFlagged
setFlagged
setReplied
setForwarded
reflectDeletedMessages:
earlierDate:
serverID
addRemoteID:mailbox:
searchQuery:returnedResults:
searchQuery:finishedWithError:
searchQuery:returnedTotalCount:
latestDateToAdd
earliestDateAdded
doneCondition
timeReceivedLastResponse
T@"NSDate",&,N,VlatestDateToAdd
T@"NSDate",R,N,VearliestDateAdded
T@"MFMailMessageStoreSearchResult",R,N,VsearchResult
changedItem
wantsData
TB,R,N,V_succeeded
T@"MFDAMessageStore",&,N,V_store
setHasLocalCopyOfData:
_hasLocalCopyOfData
T@"<MFDAStreamingContentConsumer>",&,N,V_streamConsumer
TB,N,V_hasLocalCopyOfData
T@"MFMailMessageLibrary",&,N,V_library
T@"MFMessage",&,N,V_message
progressFilter
consumeData:ofContentType:forAttachmentNamed:ofMessageWithServerID:
attachmentFetchCompletedWithStatus:forAttachmentNamed:ofMessageWithServerID:dataWasBase64:
attachmentFetchCompletedWithStatus:forAttachmentNamed:ofMessageWithServerID:dataWasBase64:sentBytesCount:receivedBytesCount:
_progressFilter
_accumulatedLength
_dataWasBase64
_fetchSucceeded
T@"MFProgressFilterDataConsumer",&,N,V_progressFilter
TQ,N,V_expectedLength
TB,R,V_dataWasBase64
TB,R,V_fetchSucceeded
searchResultFetchedWithResponses:
setAddressListForSender:
setAddressListForTo:
setAddressListForCc:
setAddressListForBcc:
body
smimeType
meetingRequestMetaData
meetingRequestIsActionable
archivedDataWithRootObject:requiringSecureCoding:error:
didReflectNewMessages:
initWithMailMessage:clientID:
replyTo
clientID
setClientID:
bodyType
_clientID
initWithRequestType:message:send:
initWithMessage:mailbox:
_messageIDHeader
sourceID
destID
resultsForMessageMove:
initWithSourceRemoteIDs:destinationRemoteIDsBySourceRemoteIDs:failures:
_sourceRemoteIDs
_destinationRemoteIDsBySourceRemoteIDs
_failures
Tq,R,N,V_statusCode
success
_success
_serverId
T@"NSString",R,N,V_serverId
T@"MFError",R,N,V_error
TB,R,N,V_success
replayAction
setPhaseForResults:
setCompletedItems:
setFailedItems:
destinationMessage
setMessagePersistentID:
initWithServerMessageBuilder:
setCreatedServerMessages:
itemsToDelete
sourceRemoteID
sourceMessage
itemsToCopy
sourceMailboxURL
destinationMailboxURL
initMoveRequestWithMessage:fromFolder:toFolder:
performMoveRequests:consumer:
isRecoverableError:
fetchBodyDataForRemoteID:mailboxURL:
downloadFailed
copyItems:destinationMailboxURL:
moveItems:destinationMailboxURL:
appendItem:mailboxURL:
deleteSourceMessagesFromTransferItems:
legacyJournal
_journalForMailbox:
mergeUsingConnection:
_processJournalFile:connection:
performWithOptions:transactionError:block:
_markMailboxForReconciliation:connection:
mergeAllJournalsUsingConnection:
sortedArrayUsingFunction:context:
setLastKnownCapabilities:
_identifier
_mailAccount
T@"NSString",&,N,V_identifier
T@"NSArray",&,N,V_lastKnownCapabilities
T@"MailAccount",&,N,V_mailAccount
initWithDecryptedMessage:
bytesSent
isWifi
setIsWifi:
_isWifi
_duration
_bytesSent
Tq,N,V_status
Td,N,V_duration
TQ,N,V_bytesSent
TB,N,V_isWifi
Tq,N,V_attributes
initWithString:charset:
ef_setDecoder:forDomain:
initWithDomain:code:userInfo:
mf_moreInfo
mf_shortDescription
recoveryAttempter
_moreUserInfo
ef_isCancelledError
mf_isSMIMEError
mf_shouldBeReportedToUser
mf_shouldFailDownload
fetchMinBytes
minBytesLeft
_fetchMinBytes
_fetchMaxBytes
_minBytesLeft
TQ,N,V_fetchMinBytes
TQ,N,V_fetchMaxBytes
TQ,N,V_minBytesLeft
reflectNewMessages:mailboxURL:
insertMessages:
internalDate
encoding
shouldAddUID:
initWithFlags:size:uid:
setHeaders:
initWithIndex:
messageToSyncFlagsForUID:
_numNewUIDs
_newMessageCount
_highestModSequence
initWithFile:isPurgeable:
markPurgeableWithError:
isPurgeable
setIsPurgeable:
_isPurgeable
TB,N,V_isPurgeable
unregisterBlocks
readerBlock
writerBlock
outputData
rangeOfCentralDirectoryInData:
_compressionArchive
_compressContents:withArchive:error:
_errorForArchiveStatus:
_compressContents:error:
setContents:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
initWithDirectoryPath:
archiveEntries
isDirectory
_archiveDirectoryName:withArchive:error:
_compressContents:fileName:withArchive:error:
_compressionCompleteForArchive:error:
_compressionArchiveEntryWithName:length:isDirectory:
_decompressionArchive
_decompressArchive:intoArchiveDirectory:error:
_decompressionCompleteForArchive:error:
_decompressContents:inMemoryWithError:mainEntry:
registerBlocks:writer:
compressFolder:error:
_compressWithArchive:error:
decompressContents:completion:
inputData
setInputData:
inputRange
setInputRange:
setOutputData:
setReaderBlock:
setWriterBlock:
_inputData
_outputData
_readerBlock
_writerBlock
_inputRange
T@"NSData",&,N,V_inputData
T{_NSRange=QQ},N,V_inputRange
T@"NSMutableData",&,N,V_outputData
T@?,C,N,V_readerBlock
T@?,C,N,V_writerBlock
inputWithData:
_rangeOfCentralDirectory:
_centralDirectory:
_entriesFromCentralDictionary:inData:archiveData:
_centralHeader:
archiveEntryWithCentralHeader:archiveData:
_scrubContentDirectory
indexOfObjectPassingTest:
uncompressedSize
merge:
_hasZipSignature:
inputWithURL:
mainEntry
setMainEntry:
scrubbedArchiveEntries
_entries
_scrubbedEntries
_mainEntry
_contents
T@"NSData",&,N,V_contents
T@"NSError",R,&,N,V_error
archiveEntry
setUncompressedSize:
setIsDeflated:
setCompressedRange:
compressedRange
isDeflated
compressedSize
setIsDirectory:
_isDeflated
_isDirectory
_uncompressedSize
_compressedRange
T@"NSString",&,V_path
Tq,V_uncompressedSize
T{_NSRange=QQ},V_compressedRange
TB,V_isDeflated
TB,V_isDirectory
T@"NSData",&,V_contents
scheduleActivityIfNeeded
T@"MFFileCompressionQueue",R
hasNext
nextFile
fileCompressionQueue
setFileCompressionQueue:
_fileCompressionQueueLock
_fileCompressionQueue
T@"NSMutableArray",&,N,V_fileCompressionQueue
_registerXPCActivity
_unregisterXPCActivity
compressFilesInQueue:shouldDefer:
compressFile:error:
unregisterXPCActivity
setFetchItem:
setBodyDataConsumer:
setConsumerSection:
matchesFetchResponse:
fetchItem
bodyDataConsumer
consumerSection
addConsumer:forSection:
_removeFetchUnitMatchingResponse:
copyFailedFetchResponse
addFetchCommandForUid:fetchItem:expectedLength:bodyDataConsumer:consumerSection:
expectedSize
setChunkSize:
chunkSize
setFull:
isFull
failureResponsesFromSendingCommandsWithConnection:
isSending
_chunkSize
_expectedSize
_full
_sending
_fetchUnits
setSection:
setStartOffset:
_setupExpectedFetchResult
section
setNumber:
initWithObjects:count:
_expectedFetchResult
_bodyDataConsumer
_consumerSection
_fetchItem
T@"<MFDataConsumer>",&,N,V_bodyDataConsumer
T@"NSString",&,N,V_consumerSection
T@"NSString",C,N,V_fetchItem
TI,N,V_uid
initWithUid:
isSuccessful
bytesFetched
handleFetchResult:
processResults
addCommandsToPipeline:withCache:
lengthOfDataBeforeLineConversion
mainConsumer
_pendingFetchResults
_countingConsumer
_mainConsumer
T@"MFBaseFilterDataConsumer",R,N,V_mainConsumer
initWithConsumers:
initWithUid:section:length:lengthIsKnown:range:consumer:
initWithUid:section:estimatedLength:consumer:
initWithUid:section:length:consumer:
initWithUid:section:range:consumer:
_section
_length
_lastBytesFetched
_knownLength
_range
_originalDataLength
_offsetAdjustment
ef_all:
subdownloads
addSubdownload:
removeSubdownload:
_subdownloads
startOffset
downloadForMessage:
downloadForUid:section:length:consumer:
downloadForUid:section:expectedLength:consumer:
downloadForUid:section:range:consumer:
handleFetchResponse:forUid:
handleFetchResponses:
processResultsForUid:
cleanUpDownloadsForUid:
addCommandsForDownload:toPipeline:
_downloads
consumers
flagsArray
envelope
bodyStructure
customFlagsArray
appleRemoteLinks
setEnvelope:
setInternalDate:
setFetchData:
setBodyStructure:
setCustomFlagsArray:
setAppleRemoteLinks:
_itemType
_typeSpecific
compareByNumberWithMessage:
initWithBytes:length:
parseIMAPPropertyList:
getNumberOfAttachments:isSigned:isEncrypted:
initWithAppendHandler:doneHandler:
filterWithConsumers:
_networkConverterWithConsumer:didReceiveData:
setFetchBodyData:
fetchBodyData
_topLevelPart
_allowsPartialDownloads
_usingPartialDownloads
_fetchingMessageContents
_fetchingBodyText
_doneAddingSubdownloads
_fetchBodyData
_headerConsumer
_textConsumer
_receivedHeaders
_receivedText
ef_caseInsensitiveIsEqualToString:
headerData
_messageData
getBytes:range:
raise:format:
_deserializeOpSpecificValuesFromData:cursor:
_magic
initWithType:mailbox:
sourceUids
destinationUids
destinationMailbox
sourceUidForTemporaryUid:
getMessageId:andInternalDate:forDestinationUid:
setMessageId:andInternalDate:forMessageWithSourceUid:
_failureCount
_temporaryUids
_mailboxName
_opSpecific
messageIds
internalDates
copyStringFrom:to:withCaseOption:
lookAhead
getNumber:
initWithUnsignedLongLong:
literalWithResponseConsumer:section:
appendData:forSection:
copyLiteral
copyLiteralString
copyAtom
dateFromString:
copyArrayAllowingNulls:
increment
hadWarningOrError
resetWarningOrError
initWithConnection:response:start:end:
connection
setStart:
setEnd:
logReadChars
match:upToSpecial:
copyNilOrString
copyAString
copyDateTime
copyArray
nextSeparator
_response
_start
_end
_originalStart
_originalEnd
_lastLoggedChar
_invalid
isValidBase64:
mf_decodeBase64
_descriptionWithFullData:
quotaRootNames
quotaRootName
uidFlagsChange
flagsFetchResult
publicNamespaces
sharedNamespaces
lastIndex
responseName
parameters
setUserData:responseCode:responseInfo:
setCapabilities:
setServerInfo:
setMailboxName:statusEntries:
setMailboxAttributes:separator:mailboxName:extraAttributes:
setMailboxName:quotaRootNames:
setQuotaRootName:quotas:
setPrivateNamespaces:
setPublicNamespaces:
setSharedNamespaces:
setResponseName:parameters:
initWithResponseType:
_responseType
_keyValuePairs
consumersBySection
_consumersBySection
ef_urlWithString:
initWithImmutableData:
sources
calendarItemsWithExternalIdentifier:
calendar
source
rowID
_observeChangesInIdleConditions
_fetchMessagesWithUIDs:connection:newCount:flagsToSet:queueClass:
syncMessagesWithUIDs:connection:serverMessages:flagSearchResults:
_searchFlagsForUIDs:usingConnection:
_performActionsOnConnection:uidsToFetch:uidsToSync:messagesToCompact:serverMessages:flagSearchResults:shouldForce:newUIDsToFetch:
ef_insertObject:usingComparator:allowDuplicates:
performOperationRequiringConnection:withOptions:failedToSelectMailbox:operation:
updateDeletedCountWithNotDeletedCount:
initWithDomain:type:
_selectMailbox:withConnection:
minimumIMAPUID
maximumIMAPUID
_shouldContinueToPreservedUID:
_fetchMessagesWithArguments:idRange:onConnection:synchronize:limit:topUIDToCompact:topKnownUID:success:examinedRange:fetchableUIDsFound:preserveUID:numFetchedUIDs:
_fetchServerUnreadCountWithConnection:
stopActivityWithSuccess:
_updateServerUnreadCount:
isGmailAccount
_remoteBodySearchForCriterion:
_newSearchResponseQueueForConnection:limit:
_fetchMessagesMatchingCriterion:limit:withOptions:handler:
deletedMessages
setServerInterface:
failActionWithError:
_fetchFullMessageDataForMessage:download:
_waitForDataFromDownload:uid:downloadCache:connection:
_downloadForMessageBodyData:usingDownloadCache:
_performBodyDataDownload:usingConnection:downloadCache:isPartial:
deleteAllServerMessagesInMailbox
shouldUseIDLE
_idleConditionsObservable
_scheduleIdleTransition:
observerWithResultBlock:
subscribe:
setShouldUseIDLE:
updateDeletedCount
imapMailboxNameForMailboxURL:
flagsForIMAPUIDs:mailboxURL:
checkUIDValidity:mailboxURL:
messageDataForRemoteID:mailboxURL:
errorIsIMAPError:
cancelationToken
setCancelationToken:
_supportsForwardedFlag
_supportsDollarForwardedFlag
_supportsFlagColorBitFlags
_settingServerCount
_activeFetchVsReplayLock
_serverCountLock
_serverMessageCount
_serverDeletedCount
_lastHighestModSequence
_cachedConnection
_cachedConnectionLock
_loggingPrefix
_shouldUseIDLE
_cancelationToken
T@"MFMailboxUid",R,N,V_mailbox
TB,V_shouldUseIDLE
T@"EFCancelationToken",&,N,V_cancelationToken
T@"IMAPAccount",R,N,V_account
whitespaceCharacterSet
ef_localesFromLanguages:
ef_stringByRemovingQuotedSubstringsForLocales:tokenizationHandler:
ef_stringByRemovingTokenizedLinksUsingTokenizationHandler:
ef_wordComponentsForLocale:minimumWordLength:
initWithMessagePersistence:
sqlConnection
executeStatementString:error:
leftExpression
rightExpression
predicateOperatorType
keyPath
constantValue
displayedAccounts
initWithLibrary:accountsProvider:
numberOfUnreconciledMessages
reconcileAllObjectsWithWindow:
reconcileWithMessageReconciliationQueries:window:
reconcileWithThreadReconciliationQueries:window:
reconcileInboxMessagesWithWindow:
_hookRegistry
_accountsProvider
_transformer
initWithHookRegistry:persistence:
registerProtectedDataReconciliationHookResponder:
registerDatabaseChangeHookResponder:
messageReconciliationQueries
threadReconciliationQueries
reconcileWithThreadsWithConversationIDs:window:
persistenceWillReplaceDatabaseID:with:forTable:column:
persistenceDidReconcileProtectedData
persistenceIsInitializingDatabaseWithConnection:
persistenceDidInitializeConversationSubscriptionProvider
initWithLibrary:queryProvider:accountsProvider:
_reconciliationCleanupScheduler
_queryProvider
_messageReconciler
_threadReconciler
threadPersistence
addResultColumn:
orderByColumn:ascending:
threadScopesByDatabaseID
initWithConversationID:threadScope:
setPriorityForDisplayMessageSenderForThreadObjectID:
executeUpdateStatement:rowsChanged:
persistenceIsReconcilingJournaledThreadsWithObjectIDs:generationWindow:
persistenceDidFinishThreadUpdates
_threadPersistence
mailtoValues
messageHeadersWithCommand:headersFactory:
localizedBodyForCommand:
appendString:withQuoteLevel:
deliveryForCommand:
senderForCommand:
gmailLabelPersistence
initWithDatabase:gmailLabelPersistence:
initWithLibrary:database:
initWithDatabase:
messageForDatabaseID:
mailboxURLForDatabaseID:
mailboxDatabaseIDForURL:
labelNameForLabelID:
handledFailedCopyForMessages:
T@"MFMailMessageLibrary",W,N,V_library
actionsToReplay
replayingActions
setNeedToCheckForNewActions:
_replayAllActions
setReplayingActions:
replayScheduler
_checkForNewActions
persistResults:forAction:
needToCheckForNewActions
messageActionPersistentID
setActionsToReplay:
_replayingActions
_needToCheckForNewActions
_actionsToReplay
_replayScheduler
T@"MailAccount",W,N,V_account
T@"NSMutableArray",&,N,V_actionsToReplay
T@"<EFScheduler>",R,N,V_replayScheduler
TB,N,V_needToCheckForNewActions
TB,V_replayingActions
copyFormattedHeaderValueFromAddressList:
basicHeaders
_capitalizedKeyForKey:
appendHeaderMarkupForKey:value:toString:
localizedHeaders
localizedHeadersFromEnglishHeaders:
englishHeadersFromLocalizedHeaders:
markupString
subjectStringForDisplayForSubjectString:
mf_copyDateInCommonFormatsWithString:
_receiveLockState:
isLocked
startWith:
T@"MFLockStateMonitor",R,N
_token
_isLocked
locked
TB,R,GisLocked
initWithMailboxProvider:
mailboxProvider
legacyMailboxForObjectID:
allMailboxesScope
allMailboxObjectIDsWithMailboxTypeResolver:forExclusion:
mailboxDatabaseIDsForMailboxObjectIDs:createIfNecessary:
notIn:
mailboxesTableName
initWithMailboxProvider:database:library:
createMailbox:parentMailboxID:
moveMailbox:newParentMailboxID:
serverCountsForMailboxScope:block:
T@"EDPersistenceDatabase",R,N,V_database
T@"MFMailMessageLibrary",R,W,N,V_library
T@"MFMailboxProvider",&,D,N
initWithAccountsProvider:
_mailboxInvalidated:
_didChangeMailboxList:
_willReloadMailboxList:
_didReloadMailboxList:
_willFetchMailboxList:
_didFetchMailboxList:
removeObserver:
transformMailboxUid:uidToMailboxMap:objectIDToUidMap:
_transformMailbox:legacyMailboxToMailboxMap:objectIDToLegacyMailboxMap:
_fetchMailboxesForAccount:
mailboxUidTransformer
setMailboxUidTransformer:
_mailboxUidTransformer
T@"MFMailboxUidTransformer",&,N,V_mailboxUidTransformer
canContainMessages
initWithRepresentedObjectID:
setCanContainMessages:
initWithObjectID:repository:name:accountIdentifier:type:builder:
isMailbox:equalTo:uidToMailboxMap:
_defaultDownloadSessionForAttachment:
downloadTaskWithURL:
setTaskDescription:
taskDescription
URLSession:downloadTask:didFinishDownloadingToURL:
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
_requests
backgroundSessionConfigurationWithIdentifier:
setTimeoutIntervalForRequest:
setAllowsCellularAccess:
fullResolutionStorageLocationForAttachmentWithMimePart:withMessage:
fullResolutionAttachmentURLForAttachmentURL:
fullResolutionAttachmentForAttachment:
attachmentURLs
_processAttachments
deliverSynchronouslyWithCompletion:
containerWithIdentifier:
privateCloudDatabase
ckDatabase
initWithRecordType:zoneID:
initWithFileURL:
recordID
_uploadAttachmentsViaCloudKit:zone:records:zippedPhotos:attachmentRecords:images:
scaledImages:
setAttachments:
_recordZoneIDInDatabase:completionHandler:
updateMessageWithAttachmentsSynchronously
initWithRecordIDs:
setConfiguration:
setRequestedTTL:
setFileNamesByAssetFieldNames:
downloadURL
parseURL:intoMetadata:
downloadURLExpiration
setExpiration:
imageArchiveMetadata
setAssetPublishedBlock:
addOperation:
setImageArchiveMetadata:
initWithRecordsToSave:recordIDsToDelete:
setDatabase:
setQueuePriority:
values
setPerRecordProgressBlock:
setPerRecordCompletionBlock:
publishRecord:database:attachmentRecords:images:allowsCellularAccess:
join:
addSuccessBlock:
addFailureBlock:
setModifyRecordsCompletionBlock:
_mailDropZone
initWithZoneName:ownerName:
initWithZoneID:
saveRecordZone:completionHandler:
fetchRecordZoneWithID:completionHandler:
addPassword:forServiceName:accountName:keychainAccessibility:synchronizable:error:
mailDropState
setMailDropState:
_imageArchiveMetadata
_mailDropState
T@"NSArray",&,N,V_attachments
T@"EMMailDropMetadata",&,N,V_imageArchiveMetadata
Tq,N,V_mailDropState
runWithConnection:
setOperationType:
_createStringFromData:cursor:
_operationType
Ti,N,V_operationType
T@"NSString",&,N,V_mailboxName
_readSavedOperationsAtPath:
databaseIsAttached:
_messagesTableSchema
_recipientsTableSchema
_messageReferencesTableSchema
_conversationsTableSchema
_conversationIDMessageIDTableSchema
_spotlightMessageReindexTableSchema
columnForName:
setAsForeignKeyForTable:onDelete:onUpdate:
_mailboxesTableSchema
_propertiesTableSchema
_messageDataTableSchema
_messageDataDeletedTableSchema
_popUIDsTableSchema
_accountsTableSchema
_spotlightTombstonesTableSchema
initWithTables:
integerColumnWithName:nullable:defaultValue:
integerColumnWithName:nullable:
textColumnWithName:collation:nullable:
initWithName:rowIDType:columns:
initWithColumnName:
addIndexForColumns:
initWithColumnName:orderDirection:
initWithTableName:indexedColumns:
addUniquenessConstraintForColumns:conflictResolution:
initWithName:rowIDType:rowIDAlias:columns:
initWithName:columns:primaryKeyColumns:
blobColumnWithName:nullable:
_addressesTableSchema
_subjectsTableSchema
_summariesTableSchema
_protectedMessageDataTableSchema
_initializeOldProtectedSchema
_transformSchema
_transformProtectedSchema
_createTemporaryTables
_migrateData
_dropTemporaryTables
_createIndexes
_cleanupOldSchema
definitionWithDatabaseName:includeIndexes:
protectedDatabaseName
definitionWithDatabaseName:
_migrateNonMessages
_migrateSubjects
_migrateSummaries
_migrateSendersAndRecipients
_migrateMessages
initWithBytesNoCopy:length:encoding:freeWhenDone:
prefixLengthForSubject:
columnExists:inTable:type:
indexDefinitionsWithDatabaseName:
cleanUpAfterMigrationWithConnection:
initWithSQLiteConnection:protectedDatabaseName:
performMigrationStep
setConnection:
_protectedDatabaseName
T@"EDPersistenceDatabaseConnection",&,N,V_connection
T@"NSString",R,C,N,V_protectedDatabaseName
T@"EFSQLSchema",R,N
ef_SQLiteErrorWithCode:
rawAddressFromFullAddress:cacheResults:
displayNameFromAddress:cacheResults:
_messagesTableDefinition
_recreateMessagesIndices:
_triggerDefinition
_serverMessagesTableDefinition
_serverMessagesMessageIndexDefinition
_serverLabelsTableDefinition
_localMessageActionsTableDefinition
_localMessageActionsMailboxRowIDIndexDefinition
_actionMessagesTableDefinition
_actionMessagesActionIndexDefinition
_actionMessagesMessageIndexDefinition
_actionMessagesDestinationMessageIndexDefinition
_actionLabelsTableDefinition
_actionLabelsActionIndexDefinition
_actionLabelsLabelIndexDefinition
_actionFlagsTableDefinition
_actionFlagsActionIndexDefinition
_populateServerMessages
_offlineCacheOperations
translateToLocalActionWithConnection:
unarchivedObjectOfClass:fromData:error:
initWithSQLiteConnection:
databaseID:andMailbox:forMessageWithRemoteID:connection:
allowsKeyedCoding
decodeInt64ForKey:
encodeInt64:forKey:
_onFlags
_offFlags
decodeObjectOfClasses:forKey:
_originalFlags
_temporaryRemoteIDs
_sourceMailboxID
_destinationMailboxID
initWithMessageIDHeader:mailbox:
_parentFolderID
_temporaryFolderID
initWithFolderID:newParentFolderID:newDisplayName:
_newParentFolderID
_newDisplayName
_renameMailboxDataFolders:
moveItemAtPath:toPath:error:
_renameMailboxURLsForMailAccount:inSQLiteDB:
_purgeFoldersMatchingPatterns:
_updateMailboxURLsInSQLitedb:withOldURLToNewURLMap:
regularExpressionWithPattern:options:error:
numberOfMatchesInString:options:range:
sqliteConnection
setSqliteConnection:
_sqliteConnection
T@"EDPersistenceDatabaseConnection",&,N,V_sqliteConnection
migrationState
_runMigrationStepsFromVersion:connection:schema:
indexGreaterThanOrEqualToIndex:
attachProtectedDatabaseWithConnection:
detachProtectedDatabaseWithConnection:
addPostMigrationBlock:
noteNeedsSpotlightReindex
mailMessageLibraryMigrator:isInitializingDatabaseWithConnection:
noteRebuildMessageInfoIndex
noteNeedsRebuildTriggers
resetTTRPromptAndForceReindex
runWithConnection:databaseName:
baseMailDirectory
attachmentDirectoryURLWithBasePath:
initWithBaseAttachmentsDirectory:
_checkForeignKeysWithConnection:
needsRebuildTriggers
needsRebuildMessageInfoIndex
runPostMigrationBlocksWithConnection:
needsSpotlightReindex
mailMessageLibraryMigratorScheduleSpotlightReindex:
_checkContentProtectionState
contentProtectionQueue
mailMessageLibraryMigrator:attachProtectedDatabaseWithName:connection:error:
mailMessageLibraryMigrator:detachProtectedDatabaseWithConnection:
currentVersion
Ti,R
initWithDelegate:
migrateWithDatabaseConnection:schema:
_needsSpotlightReindex
_needsRebuildTriggers
_needsRebuildMessageInfoIndex
_postMigrationBlocks
_contentProtectionQueue
_migrationState
T@"<MFMailMessageLibraryMigratorDelegate>",R,W,N,V_delegate
T@"NSObject<OS_dispatch_queue>",R,N,V_contentProtectionQueue
T@"NSConditionLock",R,N,V_migrationState
initWithContentsOfFile:encoding:error:
propertiesToMigrate
migrateDefaults:
initWithTableName:columnNames:
initWithTableName:columnNames:where:unique:
initWithName:tableName:indexedColumns:where:unique:
combined:
tableExists:inDatabase:
messagesTableStubSchema
mailboxesTableStubSchema
serverMessagesTableSchema
serverLabelsTableSchema
localMessageActionsTableSchema
actionMessagesTableSchema
actionLabelsTableSchema
actionFlagsTableSchema
tableForName:
runWithConnection:sentMailboxURLs:contactStore:
messageObjectIDCriterionExpressionForPredicateValue:
criterionConverter
messageCriterionFromPredicate:
ascending
messageCriterionConverter:predicateKeysForCriterionType:
messageCriterionConverter:willUsePredicateOperatorType:forKey:
messageCriterionConverter:criterionTypeForKey:
messageCriterionConverter:expressionForConstantValue:withCriterionType:
mailAccountForIdentifier:
optionsForQuery:
setCriterionConverter:
_criterionConverter
_messagePersistence
T@"MFMessageCriterionConverter",&,N,V_criterionConverter
T@"EDMessagePersistence",R,W,N,V_messagePersistence
_threadsTableSchemaWithMessagesTable:conversationsTable:threadScopesTable:
initWithName:columns:primaryKeyColumns:conflictResolution:
threadSendersTableSchema
threadRecipientsTableSchema
_schemaWithThreadsTable:
T@"EFSQLTableSchema",R,N
mailboxToRemoteIdDictionary
enumerateMailboxesAndRemoteIDsUsingBlock:
continueOffset
setMailboxToRemoteIdDictionary:
_continueOffset
_mailboxToRemoteIdDictionary
T@"NSMutableDictionary",&,N,V_mailboxToRemoteIdDictionary
T@"NSDate",&,N,V_continueOffset
backgroundMigrationScheduler
_setMigratingAttachmentsOnThread:
_migrateAttachmentsForMessage:connection:
_isMigratingAttachmentsOnThread
_messageHasAttachmentsToMigrate:
persistAttachmentWithURL:attachmentMetadata:basePath:error:
setBackgroundMigrationScheduler:
_upgradeLock
_backgroundMigrationScheduler
T@"<EFScheduler>",&,N,V_backgroundMigrationScheduler
setCharactersToBeSkipped:
endLocation
firstChild
tagName
enqueueParagraphNode:withTagName:
nextSibling
parentNode
flushParagraphNodes
initWithPattern:options:error:
mf_scanUpToRegularExpression:
_findBody
willBeginParsing
shouldProceedParsing
scanUpToString:intoString:
setHtmlString:
setStartLocation:
setEndLocation:
lastChild
appendChild:
isLandmarkTagName:
_consumeNodesFromNode:upToNode:
scanString:intoString:
didFindError:
scanUpToCharactersFromSet:intoString:
_isMilestoneTagName:
shouldIgnoreTagWithTagName:
setTagName:
didFinishParsing
collectDescendanceIntoArray:
initWithHTML:
messageBodyStringAccumulatorDefaultOptions
messageBodyElementClass
parse
_scanner
setParentNode:
setNextSibling:
addRecursiveDescriptionWithLevel:toString:
copyConsumableNodesAndAppendInnerTextToStringAccumulator:
hasChildNodes
copyMutableConsumableNodesAndAppendInnerTextToStringAccumulator:
recursiveDescription
htmlString
startLocation
_childNodes
_parentNode
_nextSibling
_startLocation
_endLocation
T@"_MFParsedHTMLNode",W,N,V_parentNode
T@"_MFParsedHTMLNode",W,N,V_nextSibling
T@"_MFParsedHTMLNode",R,N
T@"NSString",&,N,V_htmlString
TQ,N,V_startLocation
TQ,N,V_endLocation
isLinebreakImpliedBeforeTagName:
appendNewline
isLinebreakImpliedAfterTagName:
_tagName
appendRange:ofString:
initWithOptions:lengthLimit:
appendInnerTextWithConsumableNode:
accumulatedString
nodes
rangeOfFirstMatchInString:options:range:
_rangeOfFirstMatchWithRegularExpression:
mf_remainingString
initWithCountLimit:
mailboxesToCheck
_mailboxHasUnmigratedFiles:
_migrateAllFilesForMailbox:
_migrateDataFilesForMessage:
_filesForMessage:
moveItemAtURL:toURL:error:
legacyAttachmentDirectoryForMessage:
_legacyAttachmentDataDirectoryURLForGlobalMessageID:basePath:purgeable:
_directoryContentsForPath:
directoryContentCache
setDirectoryContentCache:
setMailboxesToCheck:
_directoryContentCache
_mailboxesToCheck
T@"EFLazyCache",&,N,V_directoryContentCache
T@"NSMutableArray",&,N,V_mailboxesToCheck
releaseExternally
copyBlocks
valueForAttributes:
quoteLevel
_consumeTextElement:isAttribution:
_consumeAnyLastTextElementAsAttribution:
retainExternally
setFoundTextBlock:
setFoundWhitespaceBlock:
messageBodyParser:foundMessageBodyElement:
messageBodyParserDidFinishParsing:
_lastTextElements
_lastNonWhitespaceTextElement
_foundTextBlock
_foundWhitespaceBlock
_foundText
_foundForwardSeparator
_fastCharacterContents
getCharacters:range:
mf_isHorizontalSeparator
timeoutInterval
messageBodyParserWillBeginParsing:
abortParsing
areBlocksCopied
setTimeoutInterval:
_timeoutTime
_shouldAbort
_didTimeout
_copyBlocks
_timeoutInterval
Td,N,V_timeoutInterval
setParser:
messageBodyStringAccumulatorClass
isExternallyRetained
getAvailableMessageBodyElement
setNodes:
didFindBodyElement:
getLevel:quoteLevel:forBodyNode:
cacheRetainsNodes
getAttribute:
parserError
newStringAccumulatorWithOptions:lengthLimit:
setFoundMessageBodyElementBlock:
addSubparser:
removeSubparser:
quoteLevelForBodyNode:
options
setOptions:
_subparsers
_elementPool
_paragraphNodes
_foundMessageBodyElementBlock
_parserError
_nodesStackCache
_nodesLevelCache
_nodesQuoteLevelCache
_options
TQ,N,V_options
_hasValueForAttributes:
parser
_setValue:forAttributes:
mf_isWhitespace
mf_isAttribution
mf_isAttributionPrefix
mf_isForwardSeparator
mf_isSignature
T@"NSArray",&,N
getQuoteLevel
_parser
_nodes
_quoteLevel
_externalRetainCount
_validAttributes
T@"MFMessageBodyParser",W,N,V_parser
invertedSet
mf_attributionExpression
mf_attributionPrefixExpression
mf_forwardSeparatorExpression
mf_signatureExpression
escapedPatternForString:
mf_copyAttributionRegularExpressionForType:
T@"NSRegularExpression",R
appendCustomEntityWithTag:stringRepresentation:
appendCharacters:length:
characterIsMember:
newlineCharacterSet
reverseObjectEnumerator
_accumulatedString
_remainingLength
_lastEntity
_lastCustomEntityTag
_isFull
initWithDatabase:localActionPersistence:messagePersistence:serverMessagePersistenceFactory:readLaterPersistence:bimiManager:hookResponder:hookRegistry:
copyMessages:destinationMailboxURL:userInitiated:
mailboxURLIsInRemoteAccount:
mailboxURL:isInSameAccountAsMailboxURL:
ef_objectsPassingTest:
messagesForPersistedMessages:mailboxScope:
identifierKey
incomingKey
subjectKey
senderAddress
senderKey
toList
ccList
bccList
ef_uniquifyWithComparator:
recipientsKey
representedObjectID
accountIdentifierKey
keyPathForRecentEmails
userContext
accountForMailboxURL:
messagesForRemoteIDs:mailboxURL:
iterateMessagesInMailboxURLs:excludingMessages:batchSize:returnMessagesForFlagChange:handler:
persistNewMessages:mailboxURL:oldMessagesByNewMessage:fromSyncing:
deletePersistedMessages:
haveCompleteMIMEForMessage:
applyFlagChange:toMessagesInDatabase:
applyVIPStatus:toMessagesInDatabase:
resetStatusCountsForMailboxWithURL:
addLabels:removeLabels:toMessagesInDatabase:
setRemoteID:onMessageWithDatabaseID:
setData:onMessage:
checkForNewActionsInMailboxID:
actionHasChangedAccount:
displayErrorForTransferAction:withResults:
messageWasAppended:
mailboxIsAllMail:
mailboxPartOfAllMail:
initWithLibrary:database:localActionPersistence:messagePersistence:serverMessagePersistenceFactory:readLaterPersistence:bimiManager:hookResponder:hookRegistry:
messagesToJournalForMessages:inMailbox:
_contentURL
_relatedContentItems
_cleanupInvocable
_publicMessageURL
cachedMetadataJSONForKey:messageID:
setCachedMetadataJSON:forKey:messageID:
isMessageKnownToHaveNoMailDropAttachment:
setIsMailDropAttachmentPresent:forMessage:
onScheduler:requestID:requestContentForObjectID:messagePersistence:legacyMessage:messageTransformer:mailDropAttachmentGenerator:listUnsubscribeHandler:clientIdentifier:options:delegate:completionHandler:
beginRequestWithCompletionHandler:
synchronousRemoteObjectProxyWithErrorHandler:
requestedRepresentation
requestRawRepresentationWithCompletionHandler:
requestHTMLRepresentationWithCompletionHandler:
isCanceled
_dataHolderWithCancelationToken:
initWithData:clientIdentifier:preferredFilename:extension:relatedItems:securityInformation:
setTransportType:
setPublicMessageURL:
copyAddressListForReplyTo
setReplyToList:
performCancelableBlock:
networkUsage
contentObservable
skip:
firstResultObserverAdapter
em_internalErrorWithReason:userInfo:
futureWithError:
_contentRepresentationForLoadingEvent:existingRepresentation:
initWithMessage:attachmentManager:
_generateRepresentationForLoadingContext:existingRepresentation:completion:
load:scheduler:shouldDownload:
recover:
context
attachmentManager
_contentItemForAttachment:manager:managed:
delegateWithErrorHandler:
contentObjectID:generateHTMLSnippetsForRelatedContentItems:completionHandler:
em_internalErrorWithReason:
loadedBody
hasLoadedBestAlternativePart
hasLoadedCompleteBody
contentObjectID:placeholderHTMLForEmptyContentWithCompletionHandler:
temporaryURLWithData:clientIdentifier:preferredFilename:pathExtension:cleanupInvocable:error:
_processContentLoadingContextEvent:
ef_isTimeoutError
_attachmentContentItemsForMailDropNodes:withContext:
insertMailDropAttachmentViewForContentURL:HTMLByContentID:completionHandler:
contentObjectID:generateHTMLSnippetsForMailDropContentItems:completionHandler:
generateMailDropMetadataForContentURL:completionHandler:
_contentRepresentationForEvent:contentURL:relatedItems:existingRepresentation:invocable:
securityInformationFromMFMessageLoadingContextEvent:
initWithContentURL:relatedItems:securityInformation:
addInvalidationHandler:
_includeSuggestionItemsIfNeededForRepresentation:message:
_includeHeadersIfNeededForRepresentation:message:options:
setHasMoreContent:
remainingBytes
setRemainingByteCount:
contentURL
replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:
mergeUpdatedRepresentation:
requestMoreContentBlock
setRequestMoreContentBlock:
unsubscribeCommand
unsubscribeWithCommand:completion:
ignoreWithCommand:completion:
setListUnsubscribeBlock:
includeSuggestionItems
suggestionsSearchableItemWithMessage:
setSearchableItem:
commandForMessage:
setUnsubscribeCommand:
requestedHeaderKeys
requestAllHeaders
allHeaderKeys
initWithHeaders:
setRequestedHeaders:
mailboxScope
onScheduler:requestContentForObjectID:messagePersistence:legacyMessage:messageTransformer:mailDropAttachmentGenerator:listUnsubscribeHandler:clientIdentifier:options:delegate:completionHandler:
transformBaseMessage:mailboxScope:loaderBlock:
initWithMessageData:parentPart:managed:
_messageForLegacyMessage:
initWithContentMessage:data:clientIdentifier:preferredFilename:extension:
setUniformTypeIdentifier:
setIsAvailableLocally:
setDataTransferByteCount:
setStorageByteCount:
uniformTypeIdentifier
setExchangeEventUID:
setAvailableRepresentations:
exchangeEventUID
setLoaderBlock:
_requestContentForAttachment:manager:options:managed:completion:
_maildropMetadataFromContext:
metadataWithDictionary:
_attachmentForMailDropMetaData:context:
parseHeaderValue:forField:
parseExpiration:
_objectID
_legacyMessage
_messageTransformer
_clientIdentifier
_mailDropAttachmentGenerator
_listUnsubscribeHandler
performDatabaseWorkInBlockWithHighPriority:
performSyncBarrierBlock:
performVoucherPreservingBlock:
onScheduler:performWithObject:
performWithObject:
_requestID
_shouldConvertEqualsToContainsForKey:
predicateFromMessageCriterion:
initWithType:subpredicates:
expressionForConstantValue:
_proposedPredicateOperatorType:forKey:
predicateWithLeftExpression:rightExpression:modifier:type:options:
_predicateForKey:value:qualifier:
_simplifiedCompoundPredicateOfType:forSubqueries:
_defaultKeysForCriterionType:
_predicateKeysForCriterion:
_searchPredicateForCriterion:
_orPredicateForAttributes:matchingValue:qualifier:
notPredicateWithSubpredicate:
spotlightRecipientSearchPredicateForValue:operator:
spotlightSenderSearchPredicateForValue:operator:
spotlightSubjectSearchPredicateForValue:operator:
spotlightBodySearchPredicateForValue:
orPredicateWithSubpredicates:
expressionForKeyPath:
_defaultCriterionTypeForKey:
expressionType
_criterionTypeForKey:
_criterionTypeFromExpression:
ef_mapSelector:
_messageCriterionForCompoundPredicate:
_messageCriterionForComparisonPredicate:
predicateWithFormat:
spotlightSearchPredicateForValue:
messageCriterionFromPredicateFormatString:
T@"<MFMessageCriterionConverterDelegate>",W,N,V_delegate
baseAttachmentsDirectory
initWithURL:options:error:
_baseAttachmentsDirectory
T@"NSURL",R,N,V_baseAttachmentsDirectory
SMIMEError
smimeError
_descriptionForDebugging:
setContext:
setContent:
setHasLoadedCompleteBody:
setHasLoadedBestAlternativePart:
setRemainingBytes:
loadedPart
setLoadedPart:
setLoadedBody:
_hasLoadedCompleteBody
_hasLoadedBestAlternativePart
_context
_content
_remainingBytes
_loadedPart
_loadedBody
T@"MFMessageLoadingContext",W,N,V_context
T@"NSArray",C,N,V_content
TB,N,V_hasLoadedCompleteBody
TB,N,V_hasLoadedBestAlternativePart
TQ,N,V_remainingBytes
Tq,N,V_transportType
T@"NSError",&,N,V_error
T@"NSError",R,N
T@"MFMimePart",&,N,V_loadedPart
T@"MFMimeBody",&,N,V_loadedBody
T@"MFMailMessage",R,N
_setupMeetingData
_setupObservableStreams
calendarItemExternalIdentifier
title
replay:
assignAttachmentManagerToContent:
processMeetingInvitations:
filter:
observerWithResultBlock:completionBlock:failureBlock:
immediateScheduler
onScheduler:addLoadObserver:
load:scheduler:
setHasLoadedSomeContent:
_load:shouldDownload:
_reallyLoad:shouldDownload:
addCancelationBlock:
_setMessageBody:
contentOffset
totalTextSize
_nextOffsetForOffset:totalLength:requestedAmount:
defaultAlternativeInPart:
setContentOffset:
rfc822DecodedMessageBody
numberOfAttachmentsSigned:encrypted:
setNumberOfAttachments:isSigned:isEncrypted:
setHasLoadedCompleteMessage:
setAttachmentManager:
addLoadObserver:
load:
_setMessage:
_setAttachmentManager:
hasLoadedSomeContent
hasLoadedCompleteMessage
isOutgoingMessage
isDraftMessage
isEditableMessage
_cancelable
_inputObservable
_eventUniqueID
_meetingName
_meetingStorePersistentID
_eventICSRepresentation
_hasLoadedSomeContent
_hasLoadedCompleteMessage
_outgoingMessage
_draftMessage
_editableMessage
_contentObservable
_contentOffset
T@"MFMailMessage",&,N,S_setMessage:,V_message
T@"MFMimeBody",&,N,S_setMessageBody:,V_messageBody
T@"MFAttachmentManager",&,N,S_setAttachmentManager:,V_attachmentManager
TQ,N,V_contentOffset
TB,N,V_hasLoadedSomeContent
TB,N,V_hasLoadedCompleteMessage
outgoingMessage
TB,R,N,GisOutgoingMessage,V_outgoingMessage
draftMessage
TB,R,N,GisDraftMessage,V_draftMessage
editableMessage
TB,R,N,GisEditableMessage,V_editableMessage
T@"EFObservable",R,N,V_contentObservable
copySigners
messageSignerFromMFMessageSigner:
hasEncryptedDescendantPart
initWithSigners:isEncrypted:hasEncryptedDescendantPart:smimeError:
initWithMailboxPersistence:database:hookRegistry:userProfileProvider:blockedSenderManager:vipReader:
_countOfMessagesMatchingCriteria:includingDuplicates:
iterateMessagesMatchingSmartSortQuery:limit:handler:
initWithMessagePersistence:query:batchSize:firstBatchSize:limit:handler:
_iterateMessagesMatchingQuery:options:cancelationToken:resultHandler:monitor:
queryWithExpandedMailboxesFromQuery:
messageSet
removeAllCancelationBlocks
libraryMessageForMessageObjectID:
em_itemNotFoundError
currentConnection
processIdentifier
listUnsubscribeHandler
isCancelled
generateSummaryForMessage:
securityInformation
hasMoreContent
messageTransformer
setNetworkUsage:
copyWithBuilder:
summaryLoaderProvider
messageSummaryLoaderForMessage:
requestSummaryImmediatelyFromDownloadedMessage:
_requestSummaryForLibraryMessage:
requestSummary
persistedMessagesForMessageObjectIDs:requireProtectedData:temporarilyUnavailableMessageObjectIDs:
cachedObjectForKey:
join:sourceColumn:targetColumn:
table:column:
noMailboxesScope
collectStatisticsWithStatistics:
setProtectedDataAvailable:
setMessageData:
setMessageDataDeleted:
setMessagesMarkedAsJournaled:
setMailboxesNeedingReconcilication:
setProtectedMessages:
setProtectedMessageData:
setIndexableAttachments:
setAttachmentsIndexed:
setAttachmentsToIndex:
initWithMailboxPersistence:database:userProfileProvider:blockedSenderManager:vipReader:hookRegistry:library:
countOfMessagesWithGlobalMessageID:matchingQuery:
countOfMessagesMatchingQuery:
iterateMessagesMatchingQuery:batchSize:firstBatchSize:limit:cancelationToken:handler:
iteratePersistedMessagesMatchingQuery:limit:cancelationToken:handler:
persistedMessagesForDatabaseIDs:requireProtectedData:temporarilyUnavailableDatabaseIDs:
persistedMessageForOutgoingMessage:isDraft:
requestContentForMessageObjectID:requestID:options:delegate:completionHandler:
requestSummaryForMessageObjectID:
cachedDatabaseIDsDictionaryForGlobalMessageIDs:
compressDirectory:shouldCancel:error:
setContentProtectionForAttachmentFile:
globalIDForMessageWithDatabaseID:mailboxScope:
setSummaryLoaderProvider:
_summaryLock
_summaryLoaders
_obsoleteGlobalMessageIDToDatabaseIDMap
_summaryLoaderProvider
_queryTransformer
_networkContentLoadScheduler
_offlineContentLoadScheduler
_requestSummaryQueue
T@"<MFMessageSummaryLoaderProvider>",&,N,V_summaryLoaderProvider
addPersistedMessage:
setMessageSet:
_messageSet
T@"NSMutableIndexSet",&,N,V_messageSet
_handler
T@"NSMutableIndexSet",R,N,V_messageSet
_protectedDataAvailable
_protectedMessages
_protectedMessageData
_messagesMarkedAsJournaled
_mailboxesNeedingReconcilication
TB,N,V_protectedDataAvailable
TQ,N,V_protectedMessages
TQ,N,V_protectedMessageData
TQ,N,V_messagesMarkedAsJournaled
TQ,N,V_mailboxesNeedingReconcilication
senderList
participants
dateSentInterval
_senderList
_toList
_ccList
_bccList
_subject
_messageIDsBySubject
_conversationIDHash
_conversationFlagsRef
_dateSentInterval
T@"MFMailMessage",&,N,V_message
Tq,N,V_libraryID
Tq,N,V_messageIDHash
T@"ECSubject",C,N,V_subject
T@"EFMutableInt64Set",&,N,V_references
T@"NSMutableDictionary",&,N,V_messageIDsBySubject
Tq,N,V_mailboxID
Tq,N,V_conversationIDHash
T^Q,N,V_conversationFlagsRef
Td,N,V_dateSentInterval
T@"NSArray",C,N,V_senderList
T@"NSArray",C,N,V_toList
T@"NSArray",C,N,V_ccList
T@"NSArray",C,N,V_bccList
T@"<ECEmailAddressConvertible>",C,N,V_sender
T@"<ECEmailAddressConvertible>",C,N,V_to
T@"<ECEmailAddressConvertible>",C,N,V_cc
T@"<ECEmailAddressConvertible>",C,N,V_bcc
T@"NSSet",R,N
initWithSigningTrust:encryptionTrust:
initWithBasePath:hookRegistry:
initWithBasePath:databaseName:maxConcurrentReaders:schema:protectedSchema:propertyMapper:protectedDatabasePersistence:
migrateDatabaseAtPath:
canUseSpotlightIndex
addNetworkObserverBlock:queue:
observers
execute
_checkKeys:forStore:
initWithQueue:
_setupSymptoms
_resetDataStatusInitialized
getSubscriptionInfoWithError:
subscriptions
userDataPreferred
getDataStatus:error:
_setDataStatus_nts:
setDelegate:queue:
_updateActiveCalls
indicator
roamAllowed
attached
_initializeDataStatus
_isNetworkUp_nts
dataStatus
_simulationOverrideForType:actualValue:
dataIndicator
performExecuteOnObservers
_networkAssertionWithIdentifier:
initWithBundleType:
copyCarrierBundleValue:key:bundleType:error:
initWithBlock:queue:
removeNetworkObserver:
observableWithBlock:
networkObservable
_carrierBundleDidChange
slotID
calls
hasEnded
setReachabilityFlags:
setDnsEnabled:
setWifiEnabled:
setCellData:
setDataIndicator:
setRoamingAllowed:
setNumActiveCalls:
airplaneModeChanged
callObserver:callChanged:
T@"MFNetworkController",R,N
isDataAvailable
_setFlags:forReachability:
_handleWiFiNotification:
connectionActivationError:connection:error:
preferredDataSimChanged:
dataStatus:dataStatusInfo:
simStatusDidChange:status:
awdNetworkDiagnosticReport
_stateCancelable
_reachability
_store_source
_callObserver
_hasDNS
_activeCalls
_wiFiPreferences
_hasCellDataCapability
_hasWiFiCapability
_isWiFiEnabled
_isRoamingAllowed
_radiosPreferences
_prefsQueue
_symptomsToken
_ctc
_dataStatusQueue
_cellularDataAvailable
_dataStatusInitializerLock
_dataStatusInitialized
_callObserverInitialized
_dataIndicator
Ti,R,V_dataIndicator
Tq,R
T@"AWDMailNetworkDiagnosticsReport",R,N
userFullName
_authSchemeForAuthenticationMethod:
parentAccountMailProperties
T@"MFOSXServerIMAPAccount",&,N,GmailAccountIfAvailable,V_mailAccount
T@"NSDictionary",R,N
setPlaceholders:
libraryContent
richtextContent
multipartContent
placeholders
_placeholders
T@"MFMutableMessageHeaders",&,N,V_headers
T@"NSArray",&,N,V_placeholders
T@"MFOutgoingLibraryMessageContent",R,N
T@"MFOutgoingRichtextMessageContent",R,N
T@"MFOutgoingMultipartRelatedContent",R,N
setLibraryMessage:
T@"MFLibraryMessage",&,N,V_libraryMessage
setPlaintextAlternative:
setMixedContent:
textPartsAreHTML
setTextPartsAreHTML:
plaintextAlternative
mixedContent
_plaintextAlternative
TB,N,V_textPartsAreHTML
T@"MFPlainTextDocument",&,N,V_plaintextAlternative
T@"NSArray",&,N,V_mixedContent
setHtmlBody:
htmlBody
_htmlBody
T@"NSString",&,N,V_htmlBody
_currentDeliveryObject
sharedAggregateDictionary
pushValue:forKey:
_deliverSynchronouslyWithCurrentSettings:
notifyUserDeliverySucceeded:
_deliveryAccountForInitializers
attachmentContext
setAttachmentContext:
originalConversationId
setOriginalConversationId:
_otherHTMLAndAttachments
_attachmentContext
_originalConversationId
T@"<MFDeliveryDelegate>",W,N,V_delegate
T@"MFAttachmentCompositionContext",&,N,V_attachmentContext
Tq,N,V_originalConversationId
initWithDatabase:hookRegistry:
initWithBaseURL:diskCapacity:
diskCapacity
cacheURL
initWithMemoryCapacity:diskCapacity:directoryURL:
initWithCache:sourceBundleIdentifier:
initWithDatabase:useAdditionalTable:
initWithRemoteContentPersistence:contentRuleListManager:urlSession:
initWithDatabase:hookResponder:
blockedSenderManager
initWithDatabase:blockedSenderManager:hookRegistry:contactStore:
userProfileProvider
remoteContentURLSession
initWithMessagePersistence:urlSession:
readLaterPersistence
initWithDatabase:messagePersistence:
initWithMessagePersistence:database:hookRegistry:vipManager:blockedSenderManager:
alarmScheduler
initWithHookRegistry:messagePersistence:alarmScheduler:
_configureAttachmentPersistenceManager
initWithDatabase:messagePersistence:hookResponder:
_configureSearchableIndexManagerIfNecessary
initWithDatabase:messagePersistence:richLinkPersistence:hookResponder:
persistenceStateWithStatistics:
isIndexingEnabledForActivityType:
budgetedItemCountRemaining
setUpWithMailboxProvider:remoteSearchProvider:
persistenceStatistics
setAccountsProvider:
conversationPersistence
setMailboxPersistence:
remoteSearchProvider
senderPersistence
remoteContentPersistence
remoteContentCacheConfiguration
remoteContentURLCache
setRemoteContentURLCache:
setRemoteContentURLSession:
sendLaterPersistence
bimiManager
remindMeNotificationController
setUserProfileProvider:
_conversationPersistence
_dataDetectionPersistence
_localActionPersistence
_mailboxActionPersistence
_mailboxPersistence
_messageChangeManager
_remoteSearchProvider
_searchableIndexManager
_serverMessagePersistenceFactory
_senderPersistence
_remoteContentManager
_remoteContentPersistence
_richLinkPersistence
_attachmentPersistenceManager
_remoteContentCacheConfiguration
_remoteContentURLCache
_remoteContentURLSession
_readLaterPersistence
_sendLaterPersistence
_bimiManager
_remindMeNotificationController
_userProfileProvider
T@"EDMailboxPersistence",&,N,V_mailboxPersistence
T@"<EDAccountsProvider>",&,N,V_accountsProvider
T@"<EMUserProfileProvider>",&,N,V_userProfileProvider
checkOutConnectionIsWriter:
databaseName
initWithBasePath:databaseName:isWriter:delegate:
open
migrationLock
migrationHasRun
_migrateWithDatabaseConnection:migrator:
setMigrationHasRun:
createdTempTable
setCreatedTempTable:
postMigrationSteps
databaseMigrationCompleted:
fileProtectionForDatabaseType:
protectedDatabasePath
urlForDatabasePath:type:fileProtection:
attachProtectedDatabaseWithName:url:error:
detachProtectedDatabase
urlForDatabasePath:type:
setFileProtection:forDatabaseAtURL:error:
setNeedsReindex
enforceDataProtection
setPostMigrationSteps:
_migrationHasRun
_createdTempTable
_migrationLock
_postMigrationSteps
T@,R,N,V_migrationLock
TB,N,V_migrationHasRun
TB,N,V_createdTempTable
T@"NSMutableArray",&,N,V_postMigrationSteps
configureSQLConnection
attributesOfFileSystemForPath:error:
transactionTypeForWriting
_ICUSearchContext
_CPSearchContext
recipientsTableSchemaAndForeignKeysToResolve:associationsToResolve:
messageGlobalDataTableSchema
propertiesTableSchema
partialMessagesTableSchemaAndForeignKeysToResolve:associationsToResolve:
addColumn:
partialMailboxesTableSchema
additionalSchemaProviders
tablesAndForeignKeysToResolve:associationsToResolve:
_applicationForegroundStateChanged:
_releasePowerAssertion_nts
_retainPowerAssertion_nts
_lowPowerModeChangedNotification:
isLowPowerModeEnabled
_assertionTimeout
assertionDidExpire
_setupAssertionTimer:
_retainTaskAssertion_nts
retainAssertionWithIdentifier:
_releaseTaskAssertion_nts
_applicationForegroundStateChanged_nts:
observableOnDefaultNotificationCenterWithName:object:
powerObservable
batteryLevelStateChangeNotificationObservable
batteryLevel
numberWithFloat:
T@"MFPowerController",R,N
_setPluggedIn:
isHoldingAssertion
_isHoldingTaskAssertion
startListeningForBatterySaverNotifications
_powerQueue
_pluggedIn
_powerToken
_batteryNotificationToken
_identifiers
_appStateCancelable
_isForeground
_batteryLevel
Tf,R,N,V_batteryLevel
pluggedIn
TB,R,GisPluggedIn
batterySaverModeEnabled
TB,R,GisBatterySaverModeEnabled
holdingAssertion
TB,R,GisHoldingAssertion
finishJournalReconciliation:
addAdditionalCriteriaToCleanupActivity:
journalDatabaseName
supportsJournaling
initWithContentIDs:
contentIDs
_contentIDs
T@"NSArray",R,N,V_contentIDs
sendRequests:
_processRequests:
processRequest:
addRequests:
addRequest:
requestPairs
setRequestPairs:
T@"NSMutableArray",&,N,V_requestPairs
messageWithRFC822Data:withParentPart:generateMessageIDHash:
bodyForMessage:fetchIfNotAvailable:updateFlags:
initWithMessage:managed:
initWithName:dataSource:reasonProvider:
setForeground:
attachmentBecameAvailable:
initWithMessage:bodyData:fetchBody:
setIndexingType:
isIncrementalIndexingType:
indexItems:immediately:
_indexMessage:includeBody:indexingType:
indexMessages:includeBody:indexingType:
logPowerEventWithIdentifier:eventData:
shouldCancelSearchQuery
addSearchQueryCancelable:
removeSearchQueryCancelable:
searchableIndexItemWithIdentifier:message:type:
searchableItem
itemWithIdentifier:message:bodyData:fetchBody:
shouldExcludeFromIndex
setNeedsAllAttributesIndexingType
setNeedsAllAttributesIncludingDataDetectionResultsIndexingType
setAttachmentTypes:
setMailAttachmentTypes:
setAttachmentNames:
setAttachmentPaths:
indexingType
nullFuture
_shouldAutoDownloadAttachment:
searchableIndexItemsFromMessages:type:
preprocess
addAttachmentAttributesToAttributeSet:
fetchIndexableAttachments
defaultConfiguration
enableIndexingAndBeginScheduling:budgetConfiguration:
setIndex:
setSearchableIndexBundleID:
initWithSchedulable:budgetConfiguration:
setSchedulableDelegate:
dataSourceRefreshReasons
purgeReasons
exclusionReasons
currentReasons
T@"NSSet",R,C,N
setPersistence:
_indexLock
T@"EDSearchableIndex",&,N,V_index
T@"EDSearchableIndexPersistence",&,N,V_persistence
T@"EDSearchableIndexScheduler",&,N,V_scheduler
rebuildIndexState
domainIdentifierForMessage:
setDomainIdentifier:
accountIdentifierForMessage:
setMailboxIdentifiers:
setDateSent:
setDateReceived:
setSenderAddress:
setRecipientAddresses:
initWithAttachmentFileURL:builder:
mailboxIdentifiersForMessage:result:
setTransactionID:
rawAddressFromFullAddress:
setToEmailAddresses:
_verificationDataFromMessage:messageIDTransactionIDDictionary:
additionalFilterClause
messagesWhere:sortedBy:limit:
attachmentItemMetadataForAttachmentID:attachmentPersistentID:messagePersistentID:name:mailboxID:result:
attachmentItemMetadataForAttachmentID:messagePersistentID:name:mailboxID:result:
allMailboxIdentifiersForMessage:result:
verificationDataSamplesFromMessageIDTransactionIDDictionary:
indexLessThanIndex:
T@"NSIndexSet",R,&,N,VindexSet
initWithSendingAccount:signingPolicy:encryptionPolicy:
copySigningIdentityForAccount:sendingAddress:error:
copyEncryptionIdentityForAccount:sendingAddress:error:
evaluateTrustForSigningCertificate:sendingAddress:
secureMIMECompositionManager:signingStatusDidChange:context:
copyEncryptionCertificatesForAccount:recipientAddresses:errorsByAddress:
secureMIMECompositionManager:encryptionStatusDidChange:context:
copySMIMESigningPolicyForAddress:
trustResult
initWithSigningPolicy:encryptionPolicy:
addRecipients:
removeRecipients:
setSendingAddress:
sendingAddress
sendingAccount
signingPolicy
encryptionPolicy
signingStatus
encryptionStatus
recipients
shouldAllowSend
_sendingAccount
_sendingAddress
_signingIdentity
_signingIdentityError
_encryptionIdentity
_encryptionIdentityError
_recipients
_errorsByRecipient
_certificatesByRecipient
_signingPolicy
_encryptionPolicy
_signingStatus
_encryptionStatus
_encryptionStatusSemaphore
_signingStatusSemaphore
_invalidated
T@"<MFSecureMIMECompositionManagerDelegate>",W
T@"MailAccount",R
setDateStyle:
setTimeStyle:
mailboxIDForMailboxURL:useNumericSearch:supportsLabels:
_modelSpecificLocalizedStringKeyForKey:
_getValue:
defaultSignature
signature
signatureForAccount:
useAccountSignatures
plainTextFromHTMLSnippet:
setSignature:forAccount:
signatureForSendingEmailAddress:
signatureMarkupFormat:
signaturePlainTextFormat:
setSignature:
clearSignature
setUseAccountSignatures:
setSignature:forEmailAddress:
signatureMarkupForSendingEmailAddress:
signaturePlainTextForSendingEmailAddress:
_hasParameter:forKeyword:
_supportsSaveSentExtension
_supportsExtension:
_sendCommand:length:argument:trailer:
_getReply
lastResponseLine
_connectUsingAccount:
_doHandshakeUsingAccount:
_sendData:progressHandler:
_trailerForMailFromWithEmailAddressFormatStyle:
_dataForCommand:length:argument:trailer:
supportsChunking
initWithStyle:
stringFromEmailAddressConvertible:
supportsPipelining
dataForMailFrom:emailFormatStyle:
dataForRcptTo:
dataForDataCmd
_sendData:
errorMessageWithAddress:defaultMessage:
sendBData:
sendData:
mailFrom:emailFormatStyle:
rcptTo:
_setLastResponse:
_sendBytes:length:progressHandler:
precomposedStringWithCanonicalMapping
_readResponseRange:isContinuation:
setLastResponseLine:
setContinuationResponses:
firstMatchInString:options:range:
numberOfRanges
rangeAtIndex:
isWritable
lastResponse
domainName
setDomainName:
supportsSMTPUTF8
supportsEnhancedStatusCodes
abort
mailFrom:recipients:withData:host:emailFormatStyle:errorTitle:errorMessage:serverResponse:displayError:errorCode:errorUserInfo:
timeLastCommandWasSent
setUseSaveSent:toFolder:
_lastResponse
_serviceExtensions
_mdata
_domainName
_saveSentMbox
_originalSocketTimeout
_lastCommandTimestamp
_hideLoggedData
_useSaveSent
_dislikesSaveSentMbox
_shouldSyncFlags
initWithPID:flags:reason:name:withHandler:
initWithName:expiration:preventIdleSleep:
cancelTimer
valid
initWithName:preventIdleSleep:
_transaction
_assertion
_timer
isEqualToSubjectIgnoringPrefix:
intersectsSet:
addProbeWithConnection:
applicationProxyForIdentifier:
dataContainerURL
oldKeysToNewKeysMap
migrateDefaultsFromOldKeysToNewKeys:
_keysToMigrateToSharedAppGroup
_migrateExtPropertiesPlist
currentDeviceIdentifer
migratePropertyForOldKey:newKey:
mobileMailDefaultForKey:
removeMobileMailDefaultForKey:
migratePreferencesToSharedAppGroup
objectForKey:shouldGenerate:wasCached:
setKey:
cache
setCache:
_cache
T@"<NSCopying>",C,N,V_key
T@"MFWeakObjectCache",W,N,V_cache
_dictionary
currentFont
parenSet
parseParameterString:
nowWouldBeAGoodTimeToAppendToTheAttributedString
handleNoParameterCommand:
setupFontStackEntry:
mismatchError:
scannerWithString:
scanHexInt:
punctuationSet
appendNewLine:
resetStateWithString:outputString:
readTokenInto:
beginCommand:
endCommand:
appendStringToBuffer:
closeUpQuoting
setWantsHTML:
convertRichTextString:intoOutputString:
convertEnrichedString:intoOutputString:
_inputBuffer
_currentIndex
_inputLength
_noFillLevel
_eatOneNewline
_insideComment
_wantsPlainText
_lastQuoteLevel
_commandStack
_outputBuffer
_prependHTML
_postpendHTML
_indentWidth
methodSignatureForSelector:
invocationWithMethodSignature:
setSelector:
setTarget:
methodSignature
numberOfArguments
setArgument:atIndex:
mf_invocationWithSelector:target:object1:object2:
setPriority:
addObserverForName:object:queue:usingBlock:
invocationWithSelector:target:object1:object2:taskName:priority:canBeCancelled:
setShouldLogInvocation:
powerAssertionId
_shouldLogInvocation
_powerAssertionId
T@"MFActivityMonitor",R,N,V_monitor
T@"NSString",C,N,V_powerAssertionId
initWithAuthenticationScheme:account:connection:
castleAccount
machineID
oneTimePassword
_castleAccount
T@"CastleIMAPAccount",&,N,V_castleAccount
mf_waitForLock
_passwordForHost:username:port:keychainProtocol:
_passwordForGenericAccount:service:error:
passwordForServiceName:accountName:error:
_matchSSLClientIdentity:withHostname:
validateSigningIdentity:forAddress:error:
_copyAllIdentitiesWithError:usingBlock:
validateEncryptionIdentity:forAddress:error:
_copyAllIdentitiesFromSyncableKeychain:withError:usingBlock:
_validateIdentity:forAddress:policy:usage:error:
copySMIMEEncryptionPolicyForAddress:
initWithObjects:forKeys:count:
_copyCertificateForPersistent:error:
_removeCertificateForPersistent:
_addCertificate:persistent:
_addPersistentMapping:forAddress:
passwordForHost:username:port:keychainProtocol:
setPassword:forHost:username:port:keychainProtocol:keychainAccessibility:
removePasswordForHost:username:port:keychainProtocol:
passwordForServiceName:accountName:
setPassword:forServiceName:accountName:keychainAccessibility:
copyAllSigningIdentitiesForAddress:error:
copyAllEncryptionIdentitiesForAddress:error:
stringByEncodingDomainName:
getFileSystemRepresentation:maxLength:
mf_containsSubstring:options:
mf_stringByEscapingHTMLCodes
mf_containsSubstring:
mf_stringByTrimmingWhitespaceAndNewlineCharacters
mf_prefixToString:
mf_stringRepresentationForBytes:
mf_stringWithAttachmentCharacter
ef_hasScheme:
mf_isResourceURL
mf_firstPartNumber
_ntlmGeneratorRef
_ntlmError
mf_stringByAbbreviatingSharedResourcesDirectoryWithTildeInPath
stringByResolvingSymlinksInPath
stringWithFileSystemRepresentation:length:
stringWithCharacters:length:
_justSentPassword
archivedRepresentation
appendArchivedRepresentation:
_text
_fragments
_initializeTopLevelPartWithHeaders:
_continueParsing
progressiveMimeParser:beganMimePart:
progressiveMimeParser:finishedMimePart:
progressiveMimeParser:beganDataForMimePart:
progressiveMimeParser:failedWithError:
_reportError:
mf_rangeOfCString:options:range:
_currentBoundary
mf_rangeOfData:options:range:
_continueParsingStartOfPart
_continueParsingHeaders
_continueParsingBody
initWithBodyData:topLevelHeaders:headersToPreserve:
noteDataLengthChanged:
currentPart
_preserveHeaders
_cursor
_lastLength
_currentPart
_parserFlags
contentsForTextSystem
usesKnownSignatureProtocol
dataForMimePart:
signedData
decryptedMessageBodyIsEncrypted:isSigned:
setMessagePropertiesFromMessage:
_setDecryptedMessageBody:isEncrypted:isSigned:
setSigners:
setIsEncrypted:
decodeMultipartSigned
decodeApplicationPkcs7_mime
_setObjectInOtherIvars:forKey:
_SecCMSError
_digest
_signers
_signedData
_envelopedData
_isEncrypted
_encoder
_singleShot
_defaultSettingsWithPort:useSSL:directSSL:
connectionSettingsForAuthentication:secure:insecure:
setSupportsPipelining:
setSupportsOutboxCopy:
disconnect:
connectionExpired:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setTimer
_isAppleServiceDeliveryHostname:
registerAppleServiceDeliveryHostname:
setDeliveryClass:
customAuthenticationErrorStringForError:authScheme:
authenticatedConnection:
_deliveryClass
_lastTimerSetTime
_supportsPipelining
_supportsOutboxCopy
_openConnection
headersRequiringSMTPUTF8Support
_updateEnhancedStatusCodesFromLastResponse
statusClass
statusSubject
statusDetail
_lastResponseLine
_statusClass
_statusSubject
_statusDetail
_statusString
_continuationResponses
TQ,R,N,V_status
TI,R,N,V_statusClass
TI,R,N,V_statusSubject
TI,R,N,V_statusDetail
T@"NSString",R,N,V_statusString
T@"NSArray",&,N,V_continuationResponses
_loadMailboxRowidIfNecessary:
objectEnumerator
initWithLibrary:URLString:
knownMessageIDsFromSet:
messageIDsAddedBeforeDate:
deleteUIDsNotInArray:
numberOfMessageIDs
deleteAllUIDs
flagsForUID:
_mailboxRowid
lastMatcher
setLastMatcher:
lastSearchString
setLastSearchString:
lastSearchStringLength
setLastSearchStringLength:
matchers
setMatchers:
_lastMatcher
_lastSearchString
_lastSearchStringLength
_matchers
T@"CPSearchMatcher",&,N,V_lastMatcher
T*,N,V_lastSearchString
TQ,N,V_lastSearchStringLength
T@"NSMutableDictionary",&,N,V_matchers
initWithSearchString:options:
matches:matchType:
_setOfAllSources
allSources
attachmentForURL:
setAttachment:forURL:
_attachmentsLock
_attachmentsByURL
ef_defaultAllowedCharacterSet
_initWithMimePart:htmlData:
initWithString:relativeToURL:
absoluteURL
mimePartForURL:
initWithMimeBody:
attachmentsInDocument
baseURL
_baseURL
_mimeBody
_htmlPart
_htmlData
_partsByURL
_partsByFilename
_preferredEncoding
_visuallyEmpty
visuallyEmpty
TB,GisVisuallyEmpty,V_visuallyEmpty
T@"NSURL",R,V_baseURL
T@"MFMimeBody",R,V_mimeBody
T@"MFMimePart",R,V_htmlPart
T@"NSData",R,V_htmlData
TI,V_preferredEncoding
T@"MFAttachmentManager",&,N,V_attachmentManager
T@"YahooAccount",&,N,GmailAccountIfAvailable,V_account
activityPersistence
startActivityOfType:userInfo:
progress
activityWithID:setCompletedCount:totalCount:
activityWithID:setUserInfoObject:forKey:
activityWithID:finishedWithError:
receivingAddresses
hasActiveAccounts
startBackFillingMessageBodyDownloadWithRequest:
stopBackFillingMessageBodyDownload
addLocalAction:
completeWithStatus:
visibleMailboxObjectIDs
expiryDate
thermalState
transferType
applySortedFlags:
completedUIDs
initWithFirst:second:
initWithUnsignedInt:
reflectSortedFlagChanges:mailboxURL:
changesDraftTo:
childPartWithNumber:
getValue:size:
renamedMailboxName
allMailboxActionForAccountID:
deleteMailboxActions:
initWithLongLong:
setContentLocation:
setLanguages:
setContentDescription:
_fixupDispositionParametersRFC2231Values
_fixupBodyParametersRFC2231Values
initWithIMAPServerMessageBuilder:
setServerFlags:
setImapUID:
itemsToDownload
enumerateUIDsInRanges:withBlock:
valueWithRange:
reflectAllMessagesDeletedInMailboxURL:
setDownloadedDataByCopyItems:
dispatchQueueSchedulerWithQueue:
accountDidChange:
result
setLenient:
setTimeZone:
infoDictionary
v20@0:8B16
B16@0:8
@24@0:8@16
@16@0:8
@32@0:8@16@24
B40@0:8@16@24@32
^v16@0:8
B24@0:8@16
I16@0:8
B20@0:8I16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8^{_NSZone=}16
@24@0:8@"NSString"16
v24@0:8@16
@"NSArray"16@0:8
v24@0:8@"NSString"16
@"ACAccount"16@0:8
v16@0:8
v32@0:8@16@24
B28@0:8@16B24
@20@0:8B16
@28@0:8B16^@20
@24@0:8^@16
B32@0:8@16@?24
B36@0:8@16B24@?28
B24@0:8^@16
v20@0:8I16
^{__CFString=}16@0:8
@40@0:8@16@24@32
@"ACAccount"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableDictionary"
@"NSString"
@"NSArray"
@"ECAccount"
@"EFLocked"
@"MailAccount"
@"DeliveryAccount"
@"NSDictionary"
v28@0:8@16B24
v36@0:8@16B24@?28
v32@0:8@16@?24
@"MFAccount"
@"MFActivityMonitor"
@"MFMonitoredInvocation"
{?="useSSL"b1"incomingServerSupportsSSL"b1"smtpServerSupportsSSL"b1"canceled"b1"performsValidationInBackground"b1"unused"b27}
@"MFError"
@"<MFAccountValidatorDelegate>"
v24@0:8Q16
v24@0:8d16
v32@0:8@16d24
d16@0:8
v32@0:8@16Q24
i16@0:8
v20@0:8i16
v36@0:8@16d24i32
v28@0:8@16i24
v28@0:8d16i24
v24@0:8q16
@?16@0:8
v24@0:8@?16
q16@0:8
@"NSThread"
@"MFMailboxUid"
@"NSMutableSet"
@20@0:8i16
@"AOLAccount"
@28@0:8I16d20
Q24@0:8@16
@"NSMutableArray"
@32@0:8@16^@24
v28@0:8B16@20
@"MFLock"
@"NSObject<OS_dispatch_queue>"
@"NSURL"
@"EDiCloudAliasSupport"
@"MFCastleEmailAliasUpdater"
B40@0:8@16^@24@32
v40@0:8@16q24@32
B48@0:8r*16Q24{_NSRange=QQ}32
B40@0:8@16{_NSRange=QQ}24
v32@0:8r*16Q24
B32@0:8@16Q24
B32@0:8@16@24
B32@0:8^{__SecTrust=}16^@24
@"<ECSASLSecurityLayer>"
@"MFConnectionSettings"
@"<ECNWConnectionWrapper>"
^{z_stream_s=*IQ*IQ*^{internal_state}^?^?^viQQ}
v24@0:8^{__CFString=}16
^{__CFString=}
B32@0:8#16@24
@"EDSearchableIndex"
@"EFMutableInt64Set"
@"EFSQLPropertyMapper"
@36@0:8@16B24^@28
@56@0:8^I16I24B28@32@40@48
v32@0:8^?16@24
@24@0:8^?16
B28@0:8^?16B24
@24@0:8@?16
@28@0:8@16I24
@36@0:8@16@24B32
@48@0:8@16@24@32@40
@"DAMailAccount"
v40@0:8q16@24@32
v40@0:8q16@24@"NSError"32
v40@0:8@16Q24Q32
@"NSObject<OS_os_log>"16@0:8
@"MFMailMessageLibrary"
@32@0:8@16^B24
@"NSData"24@0:8@"<ECMessage>"16
B32@0:8@"NSURL"16@"NSURL"24
i20@0:8i16
v56@0:8@16@24@32@40@48
@48@0:8@16@24Q32@40
@56@0:8@16@24Q32@40@48
@48@0:8@16@24I32@36i44
B32@0:8@16^@24
B36@0:8@16@24B32
@24@0:8i16B20
B20@0:8i16
v40@0:8@16@24^@32
i24@0:8@16
@"NSObject<ASAccountActorMessages>"
@"DAAccount"
@"MFDAMailbox"
@"NSLock"
@"NSSet"
@48@0:8@16Q24@32@40
@"NSConditionLock"
@"NSData"16@0:8
@32@0:8@16B24B28
@"NSData"
v24@0:8@"NSDictionary"16
@"MFConditionLock"
@"NSError"
v24@0:8^v16
@48@0:8@16B24@28^B36i44
v36@0:8@16@24i32
v40@0:8@16@24@32
Q40@0:8Q16{_NSRange=QQ}24
Q28@0:8Q16B24
@28@0:8I16^B20
v36@0:8^@16^B24I32
@20@0:8I16
Q44@0:8{_NSRange=QQ}16Q32B40
v44@0:8@16{_NSRange=QQ}24I40
@"MFPlainTextDocument"
@"NSMutableString"
v28@0:8i16@20
@32@0:8@16#24
v40@0:8@16@24@?32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@"EFPromise"
@"NSURLCredential"
@"GmailAccount"
@"HotmailAccount"
@"IMAPAccount"
B40@0:8@"MFIMAPConnection"16@"MFIMAPResponse"24@"_MFIMAPCommandParameters"32
v40@0:8@"MFIMAPConnection"16@"MFIMAPResponse"24@"_MFIMAPCommandParameters"32
v24@0:8@"MFIMAPConnection"16
B24@0:8@"MFIMAPConnection"16
v36@0:8@"NSMutableArray"16@"NSString"24i32
v24@0:8i16B20
@44@0:8@16@24i32^B36
B24@0:8@?16
v32@0:8B16B20B24B28
@56@0:8@16B24B28@32@40^@48
@28@0:8@16B24
B40@0:8@16@24^@32
v28@0:8@16I24
@24@0:8q16
^{__CFArray=}
@"MFIMAPOperationCache"
@"NSRecursiveLock"
@"NSNumber"
@"<MFTaskManager>"
@28@0:8i16@20
@28@0:8i16Q20
@"MFIMAPResponseConsumer"
B36@0:8@16B24@28
B48@0:8@16@24^@32^@40
B64@0:8@16@24@32@40^@48^@56
B24@0:8@"NSIndexSet"16
B32@0:8@"ECMessageFlagChange"16@"NSIndexSet"24
B36@0:8@"NSArray"16B24@"NSIndexSet"28
B48@0:8@"NSIndexSet"16@"NSString"24^@32^@40
B64@0:8@"NSData"16@"NSString"24@"ECMessageFlags"32@"NSDate"40^@48^@56
i48@0:8*16Q24Q32^B40
Q32@0:8@16^@24
i40@0:8@16@24@32
@60@0:8i16@20@28i36B40@44^@52
@52@0:8@16i24B28@32^@40i48
@48@0:8@16i24B28@32^@40
@28@0:8@16i24
B28@0:8i16@20
@40@0:8@16@24^B32
Q40@0:8@16@24^B32
I20@0:8I16
B36@0:8@16B24{?=II}28
B56@0:8@16@24@32@40^@48
@24@0:8B16B20
v32@0:8d16Q24
@24@0:8{?=II}16
@32@0:8{?=II}16@24
@40@0:8@16Q24^@32
B48@0:8@16@24@32@40
@"<MFIMAPMailboxListFilter>"
@"NSMutableData"
@"MFInvocationQueue"
{?="shouldHandleUntaggedResponse"b1"didReceiveResponse"b1"didFinishSelect"b1"didDisconnect"b1"setServerMessageCount"b1"setHighestModSequence"b1"willRemoveDelegation"b1"shouldStartIdle"b1}
@"MFIMAPDownloadCache"
@"MFIMAPCommandPipeline"
@"<MFIMAPConnectionDelegate>"
@"<EFCancelable>"
Q24@0:8Q16
v36@0:8@16Q24B32
@24@0:8Q16
@36@0:8Q16@24B32
I40@0:8@16@24@32
I48@0:8@16@24@32@40
v32@0:8@16^{?=@@^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}IIi}24
@"NSFileHandle"
q32@0:8@16Q24
q40@0:8Q16@24Q32
@44@0:8@16I24@28^@36
B56@0:8@16{_NSRange=QQ}24^B40@48
@44@0:8@16^@24B32^B36
@"EFFuture"
@"<MFIMAPMailboxTaskManager>"
@24@0:8^B16
@"NSString"24@0:8^B16
@"ECSubject"16@0:8
@"NSDate"16@0:8
@"<ECMailbox>"16@0:8
@"ECMessageFlags"16@0:8
@"<ECMimeBody>"16@0:8
@"NSDictionary"16@0:8
@"ECAngleBracketIDHash"16@0:8
@"NSSet"16@0:8
@"<ECMailAccount>"16@0:8
@"<ECMessageHeaders>"16@0:8
@"NSUUID"16@0:8
@"<EDIndexableAccount>"16@0:8
@"<EDIndexableMailbox>"16@0:8
@"EMReadLater"16@0:8
@"EMFollowUp"16@0:8
@"NSURL"16@0:8
v32@0:8@"NSURL"16@"NSData"24
v24@0:8@"NSDate"16
v24@0:8@"EMReadLater"16
@"<EDAccount>"16@0:8
v24@0:8@"EMFollowUp"16
q24@0:8@16
v52@0:8@16Q24I32q36q44
@"NSDate"
@"EMReadLater"
@"EMFollowUp"
@36@0:8@16@24i32
@"EMSearchableIndexQueryExpression"16@0:8
B24@0:8@"MFMailMessage"16
@"NSString"32@0:8@"MFAttachment"16@"MFMailMessage"24
@"NSData"36@0:8@"NSData"16@"MFMimePart"24B32
@"MailAccount"16@0:8
@"MFMailboxUid"16@0:8
Q24@0:8B16B20
@44@0:8{_NSRange=QQ}16I32^Q36
@36@0:8{_NSRange=QQ}16I32
@36@0:8@16I24@28
Q20@0:8B16
q24@0:8Q16
@52@0:8@16@24I32@36^@44
@60@0:8@16{_NSRange=QQ}24^B40B48^B52
B68@0:8@16{_NSRange=QQ}24^B40@48B56^B60
@32@0:8@16I24B28
@56@0:8@16^@24^B32B40B44^B48
@52@0:8@16^@24^B32B40^B44
@44@0:8@16^B24^B32B40
v36@0:8@16B24@28
v36@0:8I16B20B24@28
{?="isReadOnly"b1"hasUnsavedChangesToMessageData"b1"haveOpenLockFile"b1"compacting"b1"cancelInvalidation"b1"forceInvalidation"b1"isWritingChangesToDisk"b1"isTryingToClose"b1"compactOnClose"b1"reserved"b23}
@"MFMessageCriterion"
@32@0:8@16B24i28
^{os_unfair_recursive_lock_s={os_unfair_lock_s=I}I}16@0:8
v32@0:8@16B24B28
@44@0:8@16^@24^@32B40
@32@0:8#16@24
@"<EDDeliveryAccount>"16@0:8
v24@0:8@"<EDDeliveryAccount>"16
@"<ECMailbox>"24@0:8q16
B24@0:8@"NSURL"16
@"ECAccount"16@0:8
@24@0:8d16
v24@0:8i16i20
#24@0:8@16
i32@0:8@16@24
B44@0:8@16I24@28@36
v28@0:8B16@?20
B28@0:8@16i24
{?="cacheDirtyCount"b16"cacheHasBeenRead"b1"disableCacheWrite"b1"_UNUSED_"b14}
@"MFWeakObjectCache"
@"<EFScheduler>"
@"MFLocalActionReplayHandler"
@40@0:8@16Q24@32
@52@0:8@16Q24@32@40i48
@"MFWeakReferenceHolder"
@"SGMailIntelligenceFollowUpWarning"
@"MFMailMessage"
@"MFDeliveryResult"
@"MFMutableMessageHeaders"
@"ECHTMLStringAndMIMECharset"
@"EMMessageObjectID"
I20@0:8i16
v84@0:8@16@24@32@40@48d56d64@72I80
v44@0:8@16@24B32@36
v40@0:8@16@24q32
v36@0:8@16B24q28
v40@0:8q16q24@32
v48@0:8@16@24@32@40
v32@0:8q16@24
v48@0:8q16q24@32@40
v44@0:8@16q24@32B40
v28@0:8@"<ECMessage>"16B24
v36@0:8@"NSArray"16B24@"EDPersistenceDatabaseGenerationWindow"28
v32@0:8@"NSArray"16@"EDPersistenceDatabaseGenerationWindow"24
v32@0:8@"NSData"16@"<EDPersistedMessage>"24
v40@0:8@"NSArray"16@"<EDPersistedMessage>"24@"EDPersistenceDatabaseGenerationWindow"32
v24@0:8@"NSArray"16
v32@0:8@"NSURL"16@"EDPersistenceDatabaseGenerationWindow"24
v32@0:8@"ECMessageFlagChange"16@"NSArray"24
v40@0:8@"ECMessageFlagChange"16@"NSArray"24@"EDPersistenceDatabaseGenerationWindow"32
v32@0:8@"NSDate"16@"NSArray"24
v44@0:8@"NSDate"16@"NSArray"24B32@"EDPersistenceDatabaseGenerationWindow"36
v40@0:8@"NSDate"16@"NSArray"24@"EDPersistenceDatabaseGenerationWindow"32
v40@0:8@"<EDPersistedMessage>"16@"NSDate"24q32
v36@0:8@"NSArray"16B24q28
v28@0:8B16@"NSArray"20
v40@0:8q16q24@"EDPersistenceDatabaseGenerationWindow"32
v48@0:8@"NSSet"16@"NSSet"24@"NSArray"32@"EDPersistenceDatabaseGenerationWindow"40
v32@0:8q16@"NSArray"24
v40@0:8q16@"NSArray"24@"EDPersistenceDatabaseGenerationWindow"32
v48@0:8q16q24@"<EDPersistedMessage>"32@"EDPersistenceDatabaseGenerationWindow"40
v44@0:8@"NSArray"16q24@"NSURL"32B40
v32@0:8q16q24
v32@0:8Q16@24
v40@0:8Q16Q24@32
v32@0:8@16^B24
@40@0:8@16@24@?32
B32@0:8q16@24
B52@0:8q16@24@32@40i48
B36@0:8@16@24i32
B40@0:8@16q24@32
q48@0:8@16@24@32@?40
@52@0:8@16@24@32Q40B48
@68@0:8@16@24@32Q40Q48@56B64
@76@0:8@16@24@32@40Q48B56@60@68
B48@0:8@16q24@32@40
q48@0:8@16@24@32@40
q40@0:8q16@24@32
q40@0:8@16@24@32
q64@0:8@16@24@32@40@48^B56
v32@0:8@16q24
@24@0:8I16B20
v56@0:8@16@24@32^?40r^{?=@@@IfQdII^{sqlite3}B@B}48
v56@0:8^{sqlite3_stmt=}16@24@32^?40^v48
v52@0:8@16@24@32I40Q44
@32@0:8@16Q24
@48@0:8@16@24q32q40
v48@0:8@16@24q32@?40
@36@0:8@16i24Q28
@32@0:8Q16@24
@40@0:8@16{_NSRange=QQ}24
@36@0:8q16I24^B28
I32@0:8@16@24
I24@0:8@16
I32@0:8@16B24B28
Q32@0:8@16Q24
@32@0:8I16B20B24B28
@36@0:8q16I24@28
@44@0:8q16I24@28^B36
@32@0:8q16q24
q32@0:8@16^B24
q28@0:8@16B24
B28@0:8I16@20
Q24@0:8q16
v32@0:8Q16q24
v40@0:8q16@24Q32
v36@0:8B16@20@28
B64@0:8@16@24@32@40@48@56
@32@0:8@16q24
q32@0:8@16@24
v36@0:8@16@24B32
B56@0:8@16q24@32B40B44@48
@40@0:8@16^@24^B32
B32@0:8@16^B24
@60@0:8@16@24I32I36B40{_NSRange=QQ}44
@44@0:8@16@24I32I36B40
@40@0:8@16@24I32I36
@52@0:8@16@24I32{_NSRange=QQ}36
@36@0:8@16@24I32
v64@0:8@16@24I32I36{_NSRange=QQ}40^B56
v56@0:8@16@24I32I36{_NSRange=QQ}40
v40@0:8@16@24I32I36
v52@0:8@16@24I32{_NSRange=QQ}36
v36@0:8@16@24I32
v56@0:8@16B24@28@36I44@48
v44@0:8@16I24@28@?36
@48@0:8@16B24@28@36I44
v44@0:8@16@24I32@36
v36@0:8@16I24@?28
@44@0:8@16I24{_NSRange=QQ}28
@52@0:8@16I24{_NSRange=QQ}28^B44
@36@0:8@16I24^B28
@44@0:8@16@24q32I40
@32@0:8q16^B24
@56@0:8@16I24Q28@36B44@48
@40@0:8q16@24@32
@36@0:8@16B24B28B32
B40@0:8q16@24^Q32
v48@0:8@16@24@32Q40
v56@0:8@16@24@32@40Q48
@"MFAttachmentLibraryDataProvider"
@"<EFSQLValueExpressable>"
@"MFFileCompressionQueue"
@"MFLibrarySearchableIndex"
@"EDWebContentParser"
@"NSCache"
@"EDPersistence"
@"MFPersistenceDatabase_iOS"
@"EDSearchableIndexScheduler"
@"EDMessageQueryParser"
@"MFMessageBodyMigrator"
@"MFMessageAttachmentMigrator"
B24@0:8@"MFLibraryMessage"16
q24@0:8@"NSData"16
@60@0:8@16@24@32B40B44B48@52
@"MFLibraryMessage"
@"MFBufferedDataConsumer"
@32@0:8#16:24
v24@0:8#16
:16@0:8
v24@0:8:16
@40@0:8@16q24@32
@36@0:8Q16^Q24B32
@32@0:8Q16^Q24
@48@0:8Q16^Q24B32B36^B40
@36@0:8q16i24@28
@"CSSuggestion"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"MFDataHolder"16@0:8
@"MFDataHolder"
@44@0:8@16^{__SecTrust=}24^{__SecTrust=}32i40
@"MFCertificateTrustInfo"
B44@0:8^@16^Q24^B32B40
@"MFMessageBody"
v44@0:8i16@20@28@?36
@"<EDAccount>"24@0:8@"NSString"16
@"<EDAccount>"24@0:8@"ACAccount"16
#32@0:8@16^@24
@36@0:8#16@24B32
@"ACAccountStore"
@"EFObservable"16@0:8
f16@0:8
v20@0:8f16
@"EFCancelationToken"
@"RBSProcessMonitor"
@"EFObservable<EFObserver>"
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
v32@0:8@"NSString"16@"NSString"24
@"APSConnection"
@"NSCountedSet"
@28@0:8^@16B24
B20@0:8B16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
@"MFAttachmentManager"
@"MFAttachmentPlaceholder"
@"MFMimePart"
@"NSItemProvider"
@"<MFDataConsumer>"
{CGSize="width"d"height"d}
@"MFAttachment"
@"NSProgress"
@48@0:8@16@24@32^@40
v40@0:8@16q24q32
@56@0:8@16@24@32@40@48
v48@0:8@"MFAttachment"16@"<MFDataConsumer>"24@"NSProgress"32@?<v@?B@"NSError"B>40
@"MFMessage"24@0:8@"MFAttachment"16
@"EDAttachmentPersistenceManager"
@40@0:8@16@24^@32
@56@0:8@16@24q32@40@48
@48@0:8@16q24@32@40
B24@0:8q16
@"NSFileCoordinator"
@"MFLibraryIMAPStore"
@"MFIMAPConnection"
@60@0:8@16@24@32@40B48B52B56
@40@0:8Q16^{__SecTrust=}24@32
^{__SecTrust=}16@0:8
^{__SecTrust=}
@"ECSecureMIMETrustEvaluation"
@"EMCertificateTrustInformation"
@"CertUITrustManager"
v40@0:8@"DAFolderChange"16q24@"NSError"32
@"MFDAFolderChangeResult"
@48@0:8q16@24@32@40
v32@0:8@16@"MFError"24
v60@0:8@16@24@32@40d48B56
v76@0:8@16@24@32@40d48B56Q60Q68
v60@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40d48B56
v76@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40d48B56Q60Q68
v40@0:8*16i24i28@32
B28@0:8@"DAMailMessage"16i24
v40@0:8*16i24i28@"DAMailMessage"32
v24@0:8@"DAMailMessage"16
v52@0:8@16@24@32d40B48
B24@0:8Q16
@"<DAMailboxStreamingContentConsumer>"
@"MFMessage"
@"DAMailMessage"
@"<MFCollectingDataConsumer>"
@"<MFMessageDataConsumerFactory>"
v56@0:8@16@24I32@36B44@?48
B48@0:8@16@24^@32^B40
@44@0:8@16@24i32@36
@44@0:8@16i24@28@36
@"DAFolder"
@28@0:8i16i20B24
@"<MFRequestQueueResponseConsumer>"
@"MFDAMessageStore"
@"<MFRequestQueueResponseConsumer><DAMailAccountStreamConsumerFactory>"
v32@0:8@"DASearchQuery"16@"NSArray"24
v32@0:8@"DASearchQuery"16@"NSError"24
v32@0:8@"DASearchQuery"16@"NSNumber"24
@"MFMailMessageStoreSearchResult"
@"<DAMailboxStreamingContentConsumer>"16@0:8
@"<MFDAStreamingContentConsumer>"
@"<MFCollectingDataConsumer>"24@0:8@"NSString"16
v44@0:8q16@24@32B40
v60@0:8q16@24@32B40Q44Q52
v48@0:8@"NSData"16@"NSString"24@"NSString"32@"NSString"40
v44@0:8q16@"NSString"24@"NSString"32B40
v60@0:8q16@"NSString"24@"NSString"32B40Q44Q52
@"MFProgressFilterDataConsumer"
@"NSData"32@0:8@"NSString"16@"NSURL"24
B24@0:8@"NSError"16
@"ECTransferMessageActionResults"32@0:8@"NSDictionary"16@"NSURL"24
@"ECTransferMessageActionResults"32@0:8@"ECTransferMessageActionItem"16@"NSURL"24
B24@0:8@"NSArray"16
B28@0:8B16@20
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
@56@0:8@16q24@32@40@48
v32@0:8@?16@?24
^{archive=}16@0:8
i40@0:8@16^{archive=}24^@32
i32@0:8^{archive=}16^@24
^{archive_entry=}36@0:8@16Q24B32
i48@0:8@16@24^{archive=}32^@40
B36@0:8@16^@24B32
B40@0:8^{archive=}16@24^@32
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
{_NSRange="location"Q"length"Q}
{_NSRange=QQ}24@0:8@16
@40@0:8^{CentralDirectory=[4C]SSSSIIS}16@24@32
^{CentralHeader=[4C]CCCCSSIIIISSSSSII*}24@0:8@16
^{CentralDirectory=[4C]SSSSIIS}24@0:8@16
{_NSRange=QQ}24@0:8q16
@"MFFileArchiveEntry"
@32@0:8^{CentralHeader=[4C]CCCCSSIIIISSSSSII*}16@24
v52@0:8I16@20Q28@36@44
@"MFIMAPFetchResult"
@"MFCountingDataConsumer"
@"MFBaseFilterDataConsumer"
@64@0:8I16@20Q28B36{_NSRange=QQ}40@56
@44@0:8I16@20Q28@36
@52@0:8I16@20{_NSRange=QQ}28@44
(?="envelope"@"NSArray""internalDate"@"NSDate""messageSize"Q"bodyStructure"@"NSArray""appleRemoteLinks"@"NSArray""bodySectionInfo"{?="section"@"NSString""startOffset"Q"sectionData"@"NSData"}"uid"I"uniqueRemoteId"Q"flags"{?="messageFlags"Q"customFlags"@"NSArray"})
@36@0:8Q16Q24I32
@32@0:8@16@?24
@"MFMessageHeaders"
@32@0:8@16^Q24
C16@0:8
@44@0:8@16@24@32I40
@48@0:8I16I20@24@32@40
B36@0:8^@16^@24I32
(?="store"{?="trueFlags"@"NSArray""falseFlags"@"NSArray""uids"^{__CFArray}}"append"{?="uid"I"flags"@"NSArray""internalDate"i"size"I}"copy"{?="srcUids"^{__CFArray}"dstUids"^{__CFArray}"destinationMailbox"@"NSString"})
@48@0:8@16@24r*32r*40
r*16@0:8
v24@0:8r*16
B24@0:8^Q16
B24@0:8r*16
B32@0:8r*16r*24
^{__CFArray=}20@0:8B16
@36@0:8r*16r*24i32
@"MFIMAPResponse"
v36@0:8@16i24@28
v48@0:8Q16@24@32@40
(_IMAPResponseData="basic"{?="responseCode"i"responseInfoAndOrUserData"@}"capabilities"@"NSArray""number"Q"flags"@"NSArray""status"{?="mailboxName"@"NSString""entries"@"NSDictionary"}"searchResults"@"NSArray""list"{?="mailboxAttributes"Q"separatorAndOrMboxName"@"extraAttributes"@"NSArray"}"fetch"{?="number"Q"items"@"NSArray""modSeqNumber"Q}"quotaRoot"{?="mailboxName"@"NSString""quotaRootNames"@"NSArray"}"quota"{?="quotaRootName"@"NSString""quotas"@"NSArray"}"uidFlags"{?="uids"@"NSString""flagsFetchResult"@"MFIMAPFetchResult""change"b1}"serverInfo"@"NSDictionary""namespace"{?="private"@"NSArray""public"@"NSArray""shared"@"NSArray"}"other"{?="name"@"NSString""parameters"@"NSArray"})
@"NSString"24@0:8@"NSArray"16
v32@0:8@"NSString"16@"NSArray"24
@"NSString"24@0:8@"NSURL"16
@"NSDictionary"32@0:8@"NSIndexSet"16@"NSURL"24
B28@0:8I16@"NSURL"20
q32@0:8@"NSSet"16Q24
q40@0:8Q16@"NSString"24Q32
@"NSData"32@0:8@"MFLibraryMessage"16^B24
@"NSData"24@0:8@"MFLibraryMessage"16
B56@0:8@"MFMimePart"16{_NSRange=QQ}24^B40@"MFProgressFilterDataConsumer"48
@"NSData"32@0:8@"MFMessage<MFIMAPMessage>"16^B24
@"MFMailMessageStoreSearchResult"44@0:8@"MFMessageCriterion"16I24@"NSDate"28^@36
v40@0:8@"NSArray"16@"NSDictionary"24@"NSDictionary"32
@"ECLocalMessageActionResults"24@0:8@"ECLocalMessageAction"16
@"NSSet"24@0:8@"NSSet"16
@"MFMailMessageLibrary"16@0:8
v24@0:8@"MFMailMessageLibrary"16
Q56@0:8@16@24Q32Q40#48
Q48@0:8@16@24@32@40
v76@0:8@16^@24^@32^@40@48@56B64^I68
Q108@0:8@16@24@32B40Q44Q52Q60^B68^{_NSRange=QQ}76^Q84^Q92^Q100
v40@0:8@16I24i28@?32
@48@0:8@16@24@32^B40
B40@0:8B16i20^B24@?32
@"EDPersistenceHookRegistry"
@"EDPersistenceDatabase"
@"<MFAccountsProvider>"
@"MFMailMessageLibraryQueryTransformer"
v48@0:8q16q24@"NSString"32@"NSString"40
v24@0:8@"EDPersistenceDatabaseConnection"16
@"<EDReconciliationQueryProvider>"
@"MFLibraryMessageReconciler"
@"MFLibraryThreadReconciler"
@"EDThreadPersistence"
@"MFMailboxUidTransformer"
v48@0:8@16@24q32q40
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURL"32
v56@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40
@52@0:8@16@24@32@40B48
@"EMMailDropMetadata"
i24@0:8@"EDPersistenceDatabaseConnection"16
@"EDPersistenceDatabaseConnection"
B48@0:8^@16^@24@32@40
B24@0:8^{sqlite3=}16
B32@0:8@16^{sqlite3=}24
B32@0:8^{sqlite3=}16@24
q36@0:8i16@20@28
@"<MFMailMessageLibraryMigratorDelegate>"
Q40@0:8@16Q24@32
@40@0:8@16@24q32
@"NSArray"32@0:8@"MFMessageCriterionConverter"16q24
Q40@0:8@"MFMessageCriterionConverter"16Q24@"NSString"32
q32@0:8@"MFMessageCriterionConverter"16@"NSString"24
@"NSString"40@0:8@"MFMessageCriterionConverter"16@24q32
@"MailAccount"24@0:8@"NSString"16
@"MFMessageCriterionConverter"
@"EDMessagePersistence"
@"NSScanner"
v24@0:8@"NSMutableArray"16
@"NSArray"24@0:8@"<MFMessageBodyStringAccumulator>"16
@"_MFParsedHTMLNode"
@36@0:8q16@24B32
@"EFLazyCache"
@"<MFMessageBodyElement_Private>"
v40@0:8^q16^q24@32
^{__CFDictionary=}
@"<MFMessageBodyElement_Private>"16@0:8
@"MFMessageBodyParser"
@36@0:8@16Q24B32
v40@0:8{_NSRange=QQ}16@32
v32@0:8r^S16Q24
v40@0:8{_NSRange=QQ}16@"NSString"32
v24@0:8@"<MFMessageBodyConsumableInnerTextNode>"16
v32@0:8Q16@"NSString"24
@56@0:8@16@24Q32@40@?48
B44@0:8@16@24@32B40
q24@0:8@"NSURL"16
@"<EDReceivingAccount>"24@0:8@"NSURL"16
@"<EDPersistedMessage>"24@0:8q16
@"NSArray"32@0:8@"NSArray"16@"NSURL"24
@"NSDictionary"56@0:8@"NSArray"16@"NSArray"24Q32@"ECMessageFlagChange"40@?<v@?@"NSArray">48
B44@0:8@"NSArray"16@"NSURL"24@"NSMutableDictionary"32B40
B24@0:8@"<EDBaseMessage>"16
@"NSArray"32@0:8@"ECMessageFlagChange"16@"NSArray"24
v24@0:8@"NSURL"16
@"NSArray"40@0:8@"NSSet"16@"NSSet"24@"NSArray"32
v32@0:8@"NSString"16q24
v32@0:8@"NSData"16@"<EDBaseMessage>"24
v24@0:8@"ECLocalMessageAction"16
v32@0:8@"ECTransferMessageAction"16@"ECTransferMessageActionResults"24
v24@0:8@"<EDBaseMessage>"16
@88@0:8@16@24@32@40@48@56@64@72@80
@"<EFInvocable>"
@104@0:8@16@24@32@40@48@56@64@72@80@88@?96
@112@0:8@16Q24@32@40@48@56@64@72@80@88@96@?104
@52@0:8@16@24@32B40@?44
@"EDMessageTransformer"
@"EMContentRequestOptions"
@"EDMailDropMetadataGenerator"
@"EDListUnsubscribeHandler"
@"<EMContentItemRequestDelegate>"
@32@0:8d16@?24
v24@0:8@?<v@?>16
@"<EFCancelable>"24@0:8@?<v@?@"EFCancelationToken">16
@"<EFCancelable>"32@0:8d16@?<v@?>24
Q32@0:8Q16@24
@"<MFMessageCriterionConverterDelegate>"
@"MFMessageLoadingContext"
@"MFMimeBody"
Q40@0:8Q16Q24Q32
v36@0:8q16@24B32
v28@0:8q16B24
@28@0:8q16B24
@"EFObservable"
@72@0:8@16@24@32@40@48@56@64
q32@0:8q16@24
Q28@0:8@16B24
v64@0:8@16q24q32q40@48@?56
v48@0:8@16q24@32@?40
v52@0:8@16I24@28@36@44
@56@0:8@16Q24@32@40@?48
B40@0:8@16@?24^@32
q32@0:8q16^@24
@"<MFMessageSummaryLoaderProvider>"
@"NSMutableIndexSet"16@0:8
@"NSMutableIndexSet"
^Q16@0:8
v24@0:8^Q16
@"<ECEmailAddressConvertible>"
@"ECSubject"
v32@0:8@"MailAccount"16@"MFMailboxUid"24
@32@0:8@?16@24
v32@0:8@"CXCallObserver"16@"CXCall"24
B28@0:8Q16B24
v28@0:8I16^{__SCNetworkReachability=}20
v32@0:8@16^{__SCDynamicStore=}24
v32@0:8@16i24i28
^{__SCNetworkReachability=}
^{__SCDynamicStore=}
^{__CFRunLoopSource=}
@"CXCallObserver"
^{__CFRunLoop=}
^{__SCPreferences=}
@"RadiosPreferences"
@"CoreTelephonyClient"
@"MFOSXServerIMAPAccount"
@"MFMailDelivery"
@"<MFDeliveryDelegate>"
@"MFAttachmentCompositionContext"
@"<EDAccountsProvider>"
@"EDConversationPersistence"
@"EDDataDetectionPersistence"
@"EDLocalActionPersistence"
@"EDMailboxActionPersistence"
@"EDMailboxPersistence"
@"EDMessageChangeManager"
@"<EDRemoteSearchProvider>"
@"EDSearchableIndexManager"
@"EDServerMessagePersistenceFactory"
@"EDSenderPersistence"
@"EDRemoteContentManager"
@"EDRemoteContentPersistence"
@"EDRichLinkPersistence"
@"EDRemoteContentCacheConfiguration"
@"EMRemoteContentURLCache"
@"EMRemoteContentURLSession"
@"EDReadLaterPersistence"
@"EDSendLaterPersistence"
@"EDBIMIManager"
@"EDRemindMeNotificationController"
@"<EMUserProfileProvider>"
B48@0:8@16@24@32^@40
B48@0:8@"MFMailMessageLibraryMigrator"16@"NSString"24@"EDPersistenceDatabaseConnection"32^@40
v32@0:8@"MFMailMessageLibraryMigrator"16@"EDPersistenceDatabaseConnection"24
v24@0:8@"MFMailMessageLibraryMigrator"16
@72@0:8@16@24Q32@40@48@56@64
B40@0:8Q16^@24@?32
@"_MFSearchMatcherContext"
@32@0:8^@16^@24
@"NSArray"32@0:8^@16^@24
@"EDSearchableIndexPersistence"
v64@0:8@16@24@32@40q48@?56
v56@0:8@16@24@32q40@?48
^{__SecIdentity=}40@0:8@16@24^@32
I32@0:8^{__SecCertificate=}16@24
@24@0:8i16i20
@32@0:8@16i24i28
^{__SecIdentity=}
@"<MFSecureMIMECompositionManagerDelegate>"
q40@0:8@16^B24^B32
r*24@0:8q16
Q32@0:8@16q24
q104@0:8@16@24@32@40q48^@56^@64^@72^B80^i88^@96
Q40@0:8r*16Q24@?32
Q32@0:8@16@?24
@48@0:8r*16Q24@32r*40
Q48@0:8r*16Q24@32r*40
Q32@0:8^{_NSRange=QQ}16^B24
@"MFSMTPResponse"
@36@0:8@16d24B32
@"EFProcessTransaction"
@"BKSProcessAssertion"
@"NSObject<OS_dispatch_source>"
@"<NSCopying>"
@36@0:8@16B24^B28
^{__CFCharacterSet=}16@0:8
v24@0:8r^{?=@b1b1b1b2}16
v24@0:8^{_CommandStackEntry=^{?}@}16
i24@0:8^@16
{?="buffer"[64S]"theString"^{__CFString}"directUniCharBuffer"^S"directCStringBuffer"*"rangeToBuffer"{?="location"q"length"q}"bufferedRangeStart"q"bufferedRangeEnd"q}
@48@0:8:16@24@32@40
@52@0:8:16@24@32Q40B48
@60@0:8:16@24@32@40Q48B56
@68@0:8:16@24@32@40@48Q56B64
@"CastleIMAPAccount"
@44@0:8@16@24i32^{__CFString=}36
@44@0:8@16@24i32^v36
v60@0:8@16@24@32i40^v44^v52
v44@0:8@16@24i32^v36
@44@0:8@16@24B32^@36
B60@0:8@16@24@32^v40B48^@52
v48@0:8@16@24@32^v40
^{__SecPolicy=}24@0:8@16
^{__SecIdentity=}32@0:8@16^@24
@32@0:8^{__SecIdentity=}16^@24
B32@0:8^{__SecIdentity=}16@24
@32@0:8^@16@?24
@36@0:8B16^@20@?28
B40@0:8^{__SecIdentity=}16@24^@32
B52@0:8^{__SecIdentity=}16@24^{__SecPolicy=}32I40^@44
^{__SecCertificate=}32@0:8@16^@24
@32@0:8^{__SecCertificate=}16^@24
@32@0:8^{__SecCertificate=}16@24
^{NtlmGenerator=}
v40@0:8^@16^I24Q32
{?="delegateBeganMimePart"b1"delegateFinishedMimePart"b1"delegateBeganData"b1"delegateFailed"b1"state"b3}
^{SecCmsMessageStr=}
^{SecCmsDigestContextStr=}
^{SecCmsSignedDataStr=}
^{SecCmsEnvelopedDataStr=}
^{SecCmsEncoderStr=}
@28@0:8I16B20B24
@36@0:8B16@20@28
@"MFSMTPConnection"
@"NSTimer"
*16@0:8
v24@0:8*16
@"CPSearchMatcher"
@"YahooAccount"
AAAABBBBCCCCDDDDEEEEFFFFGGGGHHHHIIIIJJJJKKKKLLLLMMMMNNNNOOOOPPPPQQQQRRRRSSSSTTTTUUUUVVVVWWWWXXXXYYYYZZZZaaaabbbbccccddddeeeeffffgggghhhhiiiijjjjkkkkllllmmmmnnnnooooppppqqqqrrrrssssttttuuuuvvvvwwwwxxxxyyyyzzzz0000111122223333444455556666777788889999++++////
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
AAAABBBBCCCCDDDDEEEEFFFFGGGGHHHHIIIIJJJJKKKKLLLLMMMMNNNNOOOOPPPPQQQQRRRRSSSSTTTTUUUUVVVVWWWWXXXXYYYYZZZZaaaabbbbccccddddeeeeffffgggghhhhiiiijjjjkkkkllllmmmmnnnnooooppppqqqqrrrrssssttttuuuuvvvvwwwwxxxxyyyyzzzz0000111122223333444455556666777788889999----____
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_
TOKEN
PLAIN
PTOKEN
WETOKEN
WSTOKEN
GSSAPI
SEARCH
SORT
DISPLAY
ORDEREDSUBJECT
REFERENCES
SIZE
ACCEPT
TEKX
DEFLATE
priv
shared
priv
shared
\Answered
\Flagged
\Deleted
\Seen
\Draft
$Forwarded
$Junk
$NotJunk
Redirected
Forwarded
Junk
NotJunk
$MailFlagBit0
$MailFlagBit1
$MailFlagBit2
$MDNSent
INTERNAL
\All
\Archive
\Drafts
\Flagged
\Junk
\Sent
\Trash
4?   JU]
(0 8
MUX[^
!$'*-
$'*-03
?333333
44Ll
\ 4$4(444444`,4444
44d04h
9AIhn
6>BMa
JUU*N
$_
-iiiiii/135
$tttt&t(tttt*,tt.024t6Vb
O...:.::
""""
?333333
L=AUTH 
STARTTLS
RCPT TO:<
NOOP
QUIT
MAIL FROM:<
DATA
SSNT
EHLO 
RSET
HELO 
MbP?
$s7Message18PersistenceAdaptorC19MailboxStatusChange33_BF49CAC5CAF7F83739A49B51D199525BLLO
MailboxStatusChange
SearchOptions
NNSDataSearchOptions
Foundation
EMFetchOption
EMActivityFetchState
EMActivityUserInfoKey
ECJunkMailLevel
ECMessageFlagColor
ECTransferMessageActionType
MFMailMessageLibraryUIDMessageSize
MFMessageFlags
MailboxAttributes
ProgressUserInfoKey
NNSProgressUserInfoKey
BackFillMessageBodyScheduler
Status
Request
$s7Message08BackFillA13BodySchedulerC8Activity33_8C94728D29B9D9CACC7F5FFB5564322BLLC
Activity
$s7Message08BackFillA13BodySchedulerC7Running33_8C94728D29B9D9CACC7F5FFB5564322BLLV
Running
Element
ClientStateObserver
AuthenticationMethodKind
Wrapped
EventUpdateHelper
EventUpdateGroup
$s7Message11UIDAndFlags33_1C746FA85EDB6BDACD51B912D19842F4LLV
UIDAndFlags
Message
IMAPMailboxTaskManager
InProgressMessageDownload
Kind
EMLX
MessageHeaders
Error
MailboxNameMapping
Message
$s7Message16NoPathComponents33_BBE5679FF8D561D58D7D6164A8568604LLV
NoPathComponents
$sSS7MessageE6bufferSSSg12NIOIMAPCore210ByteBufferV_tc33_BBE5679FF8D561D58D7D6164A8568604Llfc
$sSS7MessageE6bufferSSSg12NIOIMAPCore210ByteBufferV_tc33_BBE5679FF8D561D58D7D6164A8568604Llfc12InvalidInputL_V
InvalidInput
MailboxPersistenceHelper
UploadReference
$s7Message15UploadReferenceV10CodingKeys33_E87CEF920D217353F5ABDC0B17AA6767LLO
CodingKeys
Move
Operation
LocallyModifiedMailboxes
UpdateMailboxesResult
$s7Message17MailboxUpdateTree33_9756C92D0D431C9DA10B9422B1759BA4LLV
MailboxUpdateTree
ChangedParent
Element
FindResult
Name
$s7Message17MailboxUpdateTree33_9756C92D0D431C9DA10B9422B1759BA4LLV7account11nameMappingADSo11IMAPAccountC_AA18PersistenceAdaptorC0b4NameO0CtKcfc
$s7Message17MailboxUpdateTree33_9756C92D0D431C9DA10B9422B1759BA4LLV7account11nameMappingADSo11IMAPAccountC_AA18PersistenceAdaptorC0b4NameO0CtKcfc0B17NamesAreNotUniqueL_V
MailboxNamesAreNotUnique
$s7Message17MailboxUpdateTree33_9756C92D0D431C9DA10B9422B1759BA4LLV7ElementV4make7mailbox7account11nameMappingSayAFGSo12MFMailboxUidC_So11IMAPAccountCAA18PersistenceAdaptorC0b4NameR0CtKFZ
$s7Message17MailboxUpdateTree33_9756C92D0D431C9DA10B9422B1759BA4LLV7ElementV4make7mailbox7account11nameMappingSayAFGSo12MFMailboxUidC_So11IMAPAccountCAA18PersistenceAdaptorC0b4NameR0CtKFZ22PathSeparatorIsUnknownL_V
PathSeparatorIsUnknown
$s7Message17MailboxUpdateTree33_9756C92D0D431C9DA10B9422B1759BA4LLV7ElementV4make7mailbox7account11nameMappingSayAFGSo12MFMailboxUidC_So11IMAPAccountCAA18PersistenceAdaptorC0b4NameR0CtKFZ0bX9IsUnknownL_V
MailboxNameIsUnknown
MessagesBeingDownloaded
Error
MessageSectionDataConcatenator
CreateResult
CompleteSection
TemporaryFile
$s7Message0A23SectionDataConcatenatorVyAC16IMAP2Persistence0abC0VKc33_90462B0BCDCAE26FCBE7EF88E9C96BE4Llfc
$s7Message0A23SectionDataConcatenatorVyAC16IMAP2Persistence0abC0VKc33_90462B0BCDCAE26FCBE7EF88E9C96BE4Llfc16NoInitialSegmentL_V
NoInitialSegment
$s7Message0A23SectionDataConcatenatorV13TemporaryFileC04makeC08Dispatch0hC0VyKF
$s7Message0A23SectionDataConcatenatorV13TemporaryFileC04makeC08Dispatch0hC0VyKF19MemoryMappingFailedL_V
MemoryMappingFailed
$s7Message0A23SectionDataConcatenatorV13TemporaryFileC04makeeF06System0F10DescriptorV_10Foundation3URLVtyKFZ
$s7Message0A23SectionDataConcatenatorV13TemporaryFileC04makeeF06System0F10DescriptorV_10Foundation3URLVtyKFZ014FailedToCreateeF0L_V
FailedToCreateTemporaryFile
CompletedMoveOrCopy
MoveReference
$s7Message13MoveReferenceV10CodingKeys33_BB516BFA24FD5C56FA85DA903ECB35AALLO
CodingKeys
OpaquePersistedMessageIdentifierCoder
UserInitiatedDownloadFailed
DownloadState
MessageRequest
PersistenceAdaptor
Error
$s7Message6Upload33_6E9ADBBA6FF43272EC74977344F4BF48LLV
Upload
$s7Message18PersistenceAdaptorC12test_message3forSo09MFLibraryA0CSg05IMAP2B0015OpaquePersistedA10IdentifierV_tKF
$s7Message18PersistenceAdaptorC12test_message3forSo09MFLibraryA0CSg05IMAP2B0015OpaquePersistedA10IdentifierV_tKFAHyKXEfU_
$s7Message18PersistenceAdaptorC12test_message3forSo09MFLibraryA0CSg05IMAP2B0015OpaquePersistedA10IdentifierV_tKFAHyKXEfU_07InvalidI2IDL_V
InvalidOpaqueID
RunningSyncs
Element
BackFillSync
Status
Message
TaskManager
$s7Message11TaskManagerC6Config33_4058589F4459B058528ADD61815F9D4FLLV
Config
Error
BodyFetchContext
ThermalState
NNSProcessInfoThermalState
Command
Affinity
ConnectionLimits
ConnectionIDsGroupedByState
ConnectionLimitsAndUsage
"%(+.1
"%(+.1m
FlagEncoder
FlagDecoder
FlagUpdatesToBeSent
 #&),/2
"%(+.1Logger
LocalMailbox
SelectedState
TracingID
"%(+.1
LocalMailboxes
Local
MailboxSyncState
MessagesPendingDownload
MissingMessages
IMAP2Behavior
PendingPersistenceUpdates
PendingServerResponsesBehavior
CapturedValue
Change
PendingServerResponses
CodingKeys
BasicCodingKeys
CondStoreCodingKeys
SequenceChange
ExpungedMessages
ChangeWithoutUID
BasicResponses
CapturedValue
CodingKeys
CondStoreResponses
SequenceUpdate
CapturedValue
CodingKeys
Server
Remote
ExtendedSearchSupport
SequenceNumbersBehavior
CondStoreSupport
GmailLabelSupport
MoveSupport
Logger
State
NextTask
SyncSteps
'.4:@FL
SyncStep
SyncSteps
UserVisible
MailboxesToSelect
Reason
!),3
CapturedValue
MailboxesToSelect
RunningTasksCapturedValue
StateCapturedValue
CodingKeys
Mailbox
MailboxSyncState
MessagesPendingDownload
UserInitiated
UserInitiatedDownload
UsageElement
CapturedTask
MailboxTask
CapturedLocal
CapturedRemote
CapturedSyncRequest
PathAttributes
PendingPersistenceUpdates
MissingMessages
MailboxOfInterest
History
Server
StateWithTasks
ConnectionFailure
SyncBehavior
DetectChangesToMessages
FetchMessages
MessageBodyDownload
AuthenticatedTask
CommandID ActionID
BoxProtocol
AnyAuthenticatedTask
Error
MailboxTask
CommandID ActionID
BoxProtocol
AnyMailboxTask
Error
#&-BD
U]hhh+++h
Error
MailboxWasDeselected
CommandID
Task
TracingID
RunningTask
Generator
ActionID
RunningTasks
TaskID
Task
Logger
"-4;BMXc
"-4;BMXc
RemovedID
TaskHistory
Running
Previous
EnumWithKind
Kind
Action
Command
TaskHistoryWithCustomIDs
CustomIDMap
CreateMailboxes
CommandID
ActionID
MailboxDeletionResult
DeleteMailboxes
DeleteMailbox
ActionID
DetectChangesToMessages
CommandID
ActionID
DetectChangesToMessagesInRecent
CommandID
ActionID
DetectRemovedMessages
CommandID
ActionID
DetectRemovedMessagesInRecent
CommandID
ActionID
TaskIDValue
DownloadTask
CommandID
Kind
ActionID
Batch
MessageSectionsToDownload
Section
MessageWithBodyStructure
InProgressMessages
MessageHeaderStatus
Part
SectionDataRequest
SectionDownloadStatus
ExpungeServerMessages
ExpungeFailed
CommandID
FetchMessages
CommandID
ActionID
FindMissingMessages
CommandID
ActionID
QueryRanges
Element
Persistence
TaskIDValue
FindPendingDownload
ActionID
GetUIDsForDownloadRequests
ActionID
ListMailboxes
CommandID
ActionID
MoveAndCopyMessages
CommandID
Kind
MessageInfo
CountMismatch
ActionID
Move
Copy
CompletedCommand
UIDPairs
NewServerMessages
NotifySyncRequestCompletion
ActionID
QuickFlagChangesResync
CommandID
ReSyncMailbox
ActionID
RenameMailboxes
NotifyOfRename
UpdateLocalFlags
ActionID
UploadFlagChanges
EncodedFlags
Element
CommandID
ActionID
DependencyStatus
FlagsToUpload
PendingUpload
UploadMessages
ActionID
Kind
CommandID
CompletedUpload
Status
Update
Kind
UserInitiatedDownload
Error
State
DependencyGraph
Node
DirectedAcyclicGraph
ExistingUIDSet
Error
ByteCount
SegmentResequencer
SegmentRange
Error
NoHeaderSeparatorFound
PopResult
ANSWERED
DELETED
FLAGGED
RECENT
SEEN
UNSEEN
UNANSWERD
UNDELETEL
UNFLAGGET
DRAFT
UNDRAFT
Base64
EncodingOptions
DecodingOptions
sockaddr_storage
HeapObject
in6_addr
sockaddr_un
sockaddr_in6
sockaddr_in
sockaddr
InlineRefCountsPlaceholder
__Unnamed_union___u6_addr
in_addr
DecodingError
NIOBSDSocket
AddressFamily
ProtocolFamily
OptionLevel
Option
NIOIMAPCore2
_ByteBufferSlice
ByteBufferAllocator
ByteBuffer
_Storage
CopyBytesError
BaseError
Endianness
ByteBufferView
CircularBuffer
Index
IOError
FailureDescription
Error
_IntegerBitPacking
IntegerBitPacking
_UInt24
_UInt56
NIONetworkInterface
NIONetworkDevice
Backing
SocketAddressError
FailedToParseIPByteBuffer
SocketAddress
IPv4Address
IPv6Address
UnixSocketAddress
SockAddrProtocol
System
CommandEncodeBuffer
CommandEncodingOptions
EncodeBuffer
Mode
Chunk
InvalidFrame
LiteralSizeParsingError
FramingResult
FramingParser
State
QuotedState
LiteralHeaderState
LineFeedByteStrategy
AbsoluteMessagePath
Access
AppendData
AppendMessage
AppendOptions
AttributeFlag
AuthenticatedURL
AuthenticatedURLRump
AuthenticatedURLVerifier
AuthenticationMechanism
*,.$
BodyStructure
MediaSubtype
BodyExtension
DispositionKind
Disposition
DispositionAndLanguage
Encoding
Fields
LanguageLocation
LocationAndExtensions
Multipart
Extension
Singlepart
Kind
Message
Text
Extension
Capability
ContextKind
SortKind
ThreadKind
StatusKind
UTF8Kind
RightsKind
CompressionKind
ChangedSinceModifier
UnchangedSinceModifier
(BMO
*DPS
Command
AppendCommand
CatenateData
CommandStreamPart
CustomCommandPayload
TaggedCommand
CreateParameter
IMAPCalendarDay
ServerMessageDate
Components
EItemVendorTag
ExtendedSearchOptions
ExtendedSearchScopeOptions
ExtendedSearchSourceOptions
EmailAddress
EncodedAuthenticationType
EncodedMailbox
EncodedSearch
EncodedSearchQuery
EncodedSection
EncodedAuthenticatedURL
EncodedUser
EntryFlagName
EntryKindRequest
EntryKindResponse
Envelope
Expire
FetchAttribute
FetchModificationResponse
FetchModifier
Flag
Keyword
PermanentFlag
StoreOperation
StoreData
StoreGmailLabels
StoreFlags
FullAuthenticatedURL
FullDateTime
FullDate
FullTime
IMAPServer
IMAPURL
IMAPURLAuthenticationMechanism
InitialResponse
InternetMessageDate
KeyValue
IMAPEncodable
LastCommandSet
ListSelectBaseOption
ListSelectIndependentOption
ListSelectOption
ListSelectOptions
MailboxAttribute
MailboxStatus
L$Y,o
MailboxData
SearchSort
EmailAddressGroup
EmailAddressListElement
MailboxInfo
Attribute
MailboxTooBigError
InvalidMailboxNameError
InvalidPathSeparatorError
MailboxPath
MailboxName
MailboxPatterns
MailboxUIDValidity
MechanismBase64
BasicKind
Basic
Media
Message
GmailLabel
13)))3
MessageAttribute
MessageData
MessageID
MessagePath
MetadataEntryName
MetadataOption
MetadataResponse
MetadataValue
ModificationSequenceValue
NamespaceDescription
NamespaceResponse
NetworkMessagePath
NetworkPath
MailboxFilter
Mailboxes
OptionExtensionKind
OptionValueComp
IPartial
PartialRange
QuotaLimit
QuotaResource
QuotaRoot
RelativeIMAPURL
ApplePushService
ContinuationRequest
ExtendedSearchResponse
--!+/?7
',0A8
ResponseOrContinuationRequest
Response
FetchResponse
StreamingKind
ResponseCodeAppend
ResponseCodeCopy
ResponsePayload
ResponseText
ResponseTextCode
TaggedResponse
State
UntaggedStatus
ReturnOption
RumpAuthenticatedURL
RumpURLAndMechanism
ScopeOption
_Backing
SearchCorrelator
SearchKey
SearchModificationSequence
SearchReturnData
SearchReturnOption
SectionSpecifier
Part
Kind
QResyncParameter
SelectParameter
SequenceNumber
CodingKeys
SequenceMatchData
SortData
StoreModifier
ParameterValue
InvalidUID
IUID
MessageIdentifier
UnknownMessageIdentifier
CodingKeys
MessageIdentifierRange
MessageIdentifierSet
RangeView
Index
MessageIdentificationShiftWrapper
MessageIdentifierSetNonEmpty
CodingKeys
UIDValidity
URLAuthenticationMechanism
URLCommand
URLFetchData
URLFetchType
URLMessageSection
UseAttribute
UserAuthenticationMechanism
IMAPDefaults
MailboxLoggerID
ModifiedUTF7
OddByteCountError
EncodingRoundtripError
ByteToMessageDecoder
MessageToByteEncoder
ChannelHandlerContext
DecodingState
PayloadTooLargeError
ByteToMessageDecoderError
SynchronizedCommand
CommandParser
Mode
AppendOrCatenateMessage
_FetchResponse
MailboxValue
ExceededLiteralSizeLimitError
GrammarParser
StackTracker
Parser
ExceededMaximumMessageAttributesError
ExceededMaximumBodySizeError
ResponseParser
Mode
_Response
ResponseState
SynchronizingLiteralParser
FramingResult
State
BadCommand
ParserError
TooMuchRecursion
IncompleteMessage
ParseBuffer
PipeliningRequirement
PipeliningBehavior
ResponseEncodeBuffer
ResponseEncodingOptions
Index
DiscontiguousSlice
Pair
Ranges
RangeSet
_Storage
_RangeSetStorage
_ByteBufferAPITemplate
_ByteBufferViewAPITemplate
Iterator
_Storage
_UnsafeHandle
Deque
_DequeBuffer
_DequeBufferHeader
_DequeSlot
_UnsafeWrappedBuffer
_UnsafeMutableWrappedBuffer
Bucket
BucketIterator
UnsafeHandle
_HashTable
Storage
Header
SubSequence
Iterator
Elements
Iterator
Values
OrderedDictionary
SubSequence
UnorderedView
_UnstableInternals
OrderedSet
_UnsafeBitset
Iterator
Word
AtomicFlag
Storage
MonotonicTime
PCG32Random
IMAP2Helpers
StateCapture
CapturedData
IMAP2Tracing
EngineTracingID
EngineTracingIDOwner
TaskName
TaskLoggerID
EngineLoggerID
TraceKind
 &.3
 '.5JNT_ju
"-4;BMXc
ClientCommand
FetchData
SelectOption
Kind
LoggableCommand
HeapObject
InlineRefCountsPlaceholder
Encoded
EncodingOptions
Literal
MessageBodyEncoding
Mode
ConnectionID
EncodedString
CodingKeys
MessageSectionHeaders
ConnectionLoggerID
"'/7
 )0>
Mailbox
"'/7
Attribute
MessageData
BodySection
(BMO
*DPS
ClientCommandEncoder
PushRegistrationInfo
PushRegistrationResponse
$m-15:?EJOTZ_b
$m-15:?EJOTZ_b
IMAP2Protocol
UntaggedResponse
CommandCompletionResponse
Response
ServerID
 27?
W]bg
"'/7
 )0M
',0A8
--!+/?7
13)))3
ServerResponseTranscoder
ServerResponseFramingParser
Frame
ResponseParser
Error
UnknownServerResponse
StreamedBodySection
ParseError
SpecialUse
 $(,/26>AHLPTX\`dhlp
TX\`
IMAP2Persistence
Action
Kind
ActionID
MailboxMetadata
MessageFlagUpdate
ThermalState
NNSProcessInfoThermalState
HeapObject
Foundation
ComparisonResult
NNSComparisonResult
InlineRefCountsPlaceholder
Activity
MailboxStatus
Info
FetchingMessages
Credentials
TLSRequirement
DownloadRequest
Kind
Environment
Power
CapturedValue
CodingKeys
Event
Update
OpaquePersistedMessageIdentifier
MessageFlagsWithModifications
MoveOrCopy
Operation
Result
MailboxToRename
)7CQ
Flags
JunkStatus
Label
FlagsWithModifications
FlagsUpdate
FlagKind
MailboxOfInterest
LocalModification
MessageMetadata
UnparsedHeader
MessageSectionKind
MessageSectionData
Segment
Initial
MessageSize
UIDAndMessageSize
RenameRollback
Step
ConnectionStatus
SyncRequest
Kind
UIDWithValidity
 kern.osversion
z_stream_s
AppleToken
State
tls_ciphersuite_t
tls_protocol_version_t
ReceivedTextAsAuthenticationQuery
Error
Challenge
Response
Authentication
IMAP2Connection
AuthenticationMechanism
SASLAuthenticationMechanism
AuthenticationTask
ImplementationRequestsSecondQuery
Step
State
Authenticator
CRAMMD5
State
Login
*TpSASLKind
MechanismKind
OAuthToken
State
CodingKeys
Plain
State
AuthenticationResult
GetCapabilities
CommandConnection
CommandConnectionDelegate
IdleKind
CommandID
CommandCounter
ConnectionCommandIDSet
!0CommandOutputBuffer
ServerExpectsContinuation
ServerDoesNotExpectHandshakeReply
CanNotAppendHandshakeUnlessBufferIsEmpty
ServerExpectsHandshakeReply
Command
Continuation
Handshake
IdleDone
SendData
Element
Compress
--!+/?7
13)))3
',0A8
ConnectionDelegate
ConnectionConfiguration
ConnectionError
Connection
OutboundContent
ConnectionEvent
ConnectionCommand
 @Ec
!AFd
ConnectionState
Kind
AuthenticatedState
Selection
AlreadyAuthenticatedWhenReceivingHandshakeQuery
Compressor
Decompressor
Stream
Kind
InputKind
Deflate
Error
PartialResult
OutputStatus
Result
InputBuffer
Statistics
OutputHelper
Chunk
u,DS
Event
Payload
Framer
NoContent
OutboundMessage
InboundMessage
Compression
OutgoingData
DeflateCompression
HandshakeReply
HandshakeQuery
Encoded
IdentifyServer
Logger
UUUUUUUUUUCMS
=DK66666R6666YError
MailboxSelectionState
MailboxSelectionUsage
Priority
MailboxesSelectionUsage
Value
Element
PathAttribute
BetterPathAvailability
PathViability
PipeliningRequirement
PipeliningBehavior
ProtocolMetadata
RegisterForPush
RunningCommands
NeedToWaitOnRequirements
TooManyCommandsRunning
Command
Kind
SelectedMailbox
ModificationSequence
StartTLS
CapturedValue
Authenticated
CodingKeys
noop
idle
Task
TaskID
Command
Timer
%)9IYm}
[bip
UnauthenticatedState
Update
Error
;@]z
UnauthenticatedStateWithTasks
UnexpectedDidStartTLS
NoAuthenticationTaskRunning
IMAP2ConnectionControl
Backoff
BetterPathEvaluator
BetterPathEvaluatorDelegate
Connection
State
Action
Generation
Configuration
ProtocolOptions
Engine
Logger
ExternalState
Persistence
EngineBox
ConnectionPool
ConnectionPoolDelegate
CapturedValue
Error
CodingKeys
RateLimit
Password
Domain
Class
Type
altDSID
DisplayName
Username
Hostname
AccountInfoDidChange
AuthenticationScheme
SSLEnabled
SSLClientIdentity
SSLEnabledIsEditable
SSLIsDirect
PerMessageSMIMEEnabled
SMIMESigningEnabled
SMIMEEncryptionEnabled
SMIMESigningIdentity
SMIMEEncryptionIdentity
SMIMESigningUserOverrideable
SMIMESigningIdentityUserOverrideable
SMIMEEncryptByDefaultUserOverrideable
SMIMEEncryptionIdentityUserOverrideable
PortNumber
NumberOfDaysToKeepTrash
DeliveryHostname
DeliverySSLEnabled
DeliveryPortNumber
ManagedTag
mcProfileUUID
MFRestrictMessageTransfersToOtherAccounts
MFRestrictSendingFromExternalProcesses
Prevent Recents Syncing
MFAccountSupportsMailDrop
showAlertNow
dateLastFetchAceDB
OAuth2Token
OAuth2RefreshToken
ASStoreDraftsOnServer
MFServerSSLCertificateIsTrusted
B16@?0@"ECAuthenticationScheme"8
com.apple.Message.ReleaseAllConnections
Cannot set persistent account on account with unsaved account properties
<%@ %p> ID=%@
 displayName=%@
Account
%@:%@@%@
NOT 
, error:
v24@?0q8@"NSError"16
success
failure
v20@?0B8@"NSError"12
v16@?0@"NSHashTable"8
-[MFAccount certUIService]
Account.m
0 && "Must be implemented by subclass"
NO_PASSWORD_PROVIDED_FOR_USER_FORMAT
Message
NO_PASSWORD_PROVIDED_FOR_ACCOUNT_FORMAT
PASSWORD_INACCESSIBLE_FOR_ACCOUNT_FORMAT
LOGIN_DISABLED_FOR_ACCOUNT_FORMAT
  account : %@
Protocol
Incoming
Outgoing
AccountConfigUsernameIncludesDomain
POPAccount
IMAPAccount
service
note
unsupported
null
UTF-8
domain
TestAccountConfiguration
EasySetupHost
mdev.apple.com
EasySetupUseSSL
iphone-services.apple.com
https
http
/iconfig/conf
POST
Apple iPhone MailConfig v%@
User-agent
domain=%@&version=1
EmailDomains
protocol
IMAP
requires
port
authentication
usernameIncludesDomain
SMTP
lang
content
v20@?0@"MFAccount"8B16
FAILED_LOGIN
Delayed
SMTP_CONNECTION_FAILED_MESSAGE_FORMAT
Assistant
CONNECTION_FAILED_MESSAGE_FORMAT
CHECKING_CONNECTION
Checking connection
MonitoredActivityStarted
MonitoredActivityEnded
MonitoredActivityMessage
MonitoredActivityCurrentCount
MonitoredActivityMaxCount
MonitoredActivityReset
MonitoredActivityInvocation
MonitoredActivityReasonCompacting
MonitoredActivityReasonFetching
MonitoredActivityReasonArchiving
MonitoredActivityReasonDeleting
MonitoredActivityReasonJunking
MonitoredActivityReasonMoving
RESET
aolAccountIcon
%@@aol.com
Sent
Trash
Drafts
Spam
AOL_DELIVERY_HOSTNAME
AOL SMTP Server
CRAM-MD5
GSSAPI
KERBEROS_V4
X-APOP
NTLM
DIGEST-MD5
FullUserName
EmailAddress
imapHostname
imapPort
imapRequiresSSL
smtpHostname
smtpPort
smtpRequiresSSL
dotMacMailSupported
CastleIMAPErrorDomain
icloud.com
iCloud-%@
iCloud
%@-%p
CastleIMAPAccount.m
Invalid parameter not satisfying: %@
nil != _appleAccountLock
mac.com
me.com
Mailbox is over quota
v16@?0@"CastleEmailAliasUpdateResult"8
castleAccountIcon
(CHANGEDSINCE %@)
(FLAGS)
%llu
MFReloadNetworkLoggingNotification
LogActivityOnAllPorts
LogActivityOnPort
LogActivityOnHost
logLock
v12@?0i8
%@ _socket: %p
com.apple.Message.CertUIPromptScheduler
-[MFConnection _setupSocketWithSettings:]
Connection.m
_socket
v12@?0B8
B24@?0^{__SecTrust=}8^@16
DONT_KNOW_SERVICE_PORT
%s can only be called from unit tests
-[MFConnection test_setSocket:]
AUTH_NOT_SUPPORTED_FORMAT
AUTH=
-[MFConnection writeBytes:length:dontLogBytesInRange:]
Z_STREAM_ERROR != err
Internal error: -[%@ %@] needs to be implemented in a concrete subclass.
-[MFConnection startCompression]
zlibStream
1.2.11
==== Connection State ====
    Host: %@
    Port Number: %u
    SSL Version: %@
    Socket: %@
    Thread: %p
%@<%@>:%d %s SSL (%s)%s%s%s%@
direct
indirect
 (opportunistic)
 disallows trust prompt
, source application: 
CONNECTED
READ
READ(encrypted)
WROTE
WROTE(encrypted)
CONNECTION_TIMED_OUT
HOST_UNREACHABLE
MF_SSL_CONNECTION_FAILURE
CONNECTION_REFUSED
CONNECTION_FAILED
SSL_CERT_CHAIN_INVALID_FORMAT
The certificate for the server is invalid.
SSL_BAD_CERT_FORMAT
The format of the certificate for the server is bad.
SSL_UNKNOWN_ROOT_CERT_FORMAT
The root certificate for this server could not be verified.
SSL_NO_ROOT_CERT_FORMAT
There is no root certificate for this server.
SSL_CERT_EXPIRED_FORMAT
The certificate for this server has expired.
SSL_HOST_MISMATCH_MESSAGE
SSL_GENERIC_READ_ERROR
SSL_ALERT_TITLE_FORMAT
Unable to verify SSL server %@
[Omitted]
SSL_GENERIC_WRITE_ERROR
_fillBuffer
MESSAGE_AUTH_CRAM_MD5
MD5 Challenge-Response
%02x
B16@?0@"MFMessageCriterion"8
@"MFMessageCriterion"16@?0@"MFMessageCriterion"8
B16@?0@"EMSearchableItemSnippetData"8
NOT (%@)
SELECT messages.ROWID FROM %@ WHERE %@
messages.ROWID IN (%@)
 UNION 
mailbox IN (SELECT rowid FROM mailboxes WHERE url IN (%@))
 AND 
 OR 
NULL
%@ %@ NULL
IS NOT
CriterionAdditions.m
Only =, <, > are supported for date comparision
Magic comparision must be $magicString,$field,$offset
%@ %@ (%@ + %lf)
messages.ROWID NOT IN (%@)
messages.ROWID
messages.external_id
cpsearch(subject, '%@', %d)
messages.message_id
%@ %@ %lld
messages.message_id IN (%@)
messages.message_id NOT IN (%@)
%@ %@ %@
messages.global_message_id IN (%@)
messages.global_message_id NOT IN (%@)
messages.global_message_id
sender LIKE '%%%@%%'
cpsearch(sender, '%@', %d)
Only MessageRuleIsEqualTo is supported for ListIDHashCriterionType
messages.list_id_hash = %lld
Only MessageRuleIsEqualTo is supported for DocumentIDCriterionType
messages.document_id = '%@'
cpsearch(IFNULL(sender, '') || ' ' || IFNULL(subject, '') || ' ' || IFNULL(_to, '') || ' ' || IFNULL(cc, ''), '%@', %d)
messages.conversation_id IN (%@)
messages.conversation_id NOT IN (%@)
(_to LIKE '%%%@%%' OR cc LIKE '%%%@%%')
cpsearch(IFNULL(_to, '') || ' ' || IFNULL(cc, ''), '%@', %d)
(messages.flags & %@) = %@
read = %d
flagged = %d
unlikely
likely
%@(deleted = %d)
%@(journaled = %d)
sender_vip = %d
messages.conversation_id in (select rowid from conversations where flags = 1)
messages.conversation_id in (select rowid from conversations where flags = 4)
((messages.flags&(63<<10))>>10) BETWEEN 1 AND 62
(messages.flags&(1<<39)) > 0
(messages.flags&(1<<40)) > 0
(messages.flags&(3<<39)) > 0
and64
not and64
%@(messages.flags, %@)
flag_color = %d
ifnull(%@, %ld) IN (%@)
ifnull(%@, %ld) %@ %@
unsupported criterion type %ld
Qualifier not supported
mailbox %@ IFNULL((SELECT ROWID FROM mailboxes WHERE %@), -1)
mailbox IN (SELECT ROWID FROM mailboxes WHERE %@)
LIKE
NOT LIKE
'%@'
'%%%@%%'
'%@%%'
'%%%@'
ASHTTPConnectionErrorDomain
70FB9178-576E-4CAA-A08E-F68D57BFD01E
DAFolderID
DAMailboxUid
MFWalkUpDAErrorChain
DAMailAccount.m
error && "Error ref passed in to here must not be NULL."
ExchangeActiveSync
%@%@
Exchange ActiveSync
Exchange
DAChangedFolders
SEARCH_ALL_MAILBOXES
Search
kDAMailAccountAllMailboxesFolderID
com.apple.Preferences
com.apple.dataaccess.dataaccessd
com.apple.Accounts
com.apple.datamigrator
com.apple.managedconfiguration.profiled
junk e-mail
junk email
should never make account conduits in %@.
folderID must be non-nil
v16@?0@"MFDAFolderChangeResult"8
&<>:;/()+'"\
MAILBOX_NAME_INCLUDES_SPECIAL_CHARACTERS
mbox
FolderID
v32@?0@"EFPair"8Q16^B24
Archive
Junk
requested relative path for unsupported mailbox type %ld
exchangeAccountIcon
outlookAccountIcon
HatesAppleDesign
appleAccountIcon
@"NSString"16@?0@"MFMailboxUid"8
reachable
unreachable
SMIME_MISSING_REMOTE_ENCRYPTION_CERT_MESSAGE
v24@?0@"NSArray"8^B16
MIME_GENERIC_REMOTE_ENCRYPTION_CERT_MESSAGE
An error occurred while retrieving the encryption certificate.
SMIME_CANT_ENCRYPT_TITLE
Unable to Encrypt
[message isKindOfClass:[MFMailMessage class]]
RelativePath
-[MFDAMailbox displayName]
INBOX_SPECIAL_MAILBOX_NAME
Inbox
 folderID=%@
MFDAMailAccountConsumer_doneCondition
_MFDAResolveRecipientsConsumer_Lock
MaxMessageBytes
DeliveryAccounts
ShouldUseAuthentication
DeliveryAccountWillBeRemoved
DeliveryAccountsDidChange
%@:%@
SMTPServers
%@@%@
HTTP MD5 Digest
username
realm
nonce
cnonce
digest-uri
response
maxbuf
charset
utf-8
stale
algorithm
md5-sess
cipher-opts
rspauth
auth
auth-int
auth-conf
%08x
%@/%@
Digest session key to server-to-client signing key magic constant
Digest session key to client-to-server signing key magic constant
AUTHENTICATE
IMAPESearchMinKey
IMAPESearchMaxKey
IMAPESearchAllKey
IMAPESearchCountKey
IMAPESearchTagKey
-[MFIMAPConnection(ESearch) eSearchIDSet:areMessageSequenceNumbers:arguments:success:returning:]
ESearch.m
returning && "Should have at least one return request on an esearch command."
RETURN
Expected space
Expected number for minimum result
Expected number for maximum result
COUNT
Expected number for count result
Did not find a valid search return.
Expected right paren
StoreDraftsOnServer
StoreSentMessagesOnServer
Sent Items
Deleted Items
Contacts
Calendar
Journal
Notes
Tasks
<HTML><BODY>
</BODY></HTML>
format
flowed
delsp
From 
AppleTextBreakLocale
<BLOCKQUOTE type="cite">
<SPAN>
 &nbsp; &nbsp;
&nbsp;
&lt;
&gt;
&amp;
</SPAN><BR>
</BLOCKQUOTE>
System/Library/PrivateFrameworks/DataDetectorsCore.framework/DataDetectorsCore
DDURLifier
ja_JP_TRADITIONAL
REPLY_ATTRIBUTION_SENDER
%@ <%@>
REPLY_ATTRIBUTION
On %@, at %@, %@ wrote:
\Important
\Starred
\AllMail
\Spam
gmail.com
Gmail
Your account is not enabled for IMAP use.
IDToken
gmailAccountIcon
VERIFICATION_REQUIRED_TITLE
Verification Required
WEBLOGIN_PROMPT_FORMAT
Log in to your %@ account
MailErrorHandlerDoNotSanitize
xwebalert
webalert
EnableSchema
EnableHost
EnablePath
apple
%@ (%@)
GMAIL_ALL_MAIL_SPECIAL_MAILBOX_NAME
All Mail
self
GMAIL_DELIVERY_HOSTNAME
Gmail SMTP Server
PLAIN-CLIENTTOKEN
MESSAGE_AUTH_GMAIL_CLIENTTOKEN
Gmail Client Token
office365.com
Outlook
%@@outlook.com
HOTMAIL_DELIVERY_HOSTNAME
Outlook SMTP Server
ServerPathPrefix
lastPushRegistrationTime
ListsSubscribedOnly
PreventDismemberment
PushedMailboxes
NotesPushedMailboxes
NotesNotificationPrefix
separator
namespace
capabilities
push-service-level
aps-topic
push-registered-mailboxes
connectionLock
163AccountIcon
126AccountIcon
qqAccountIcon
-[IMAPAccount test_setTaskManager:]
Mail
IMAPNewStack
MailIMAPNewStack
imapmbox
imap
imaps
IMAP_SERVER_ALERT_FORMAT
WARNING_TITLE
Warning
DeleteInPlace
Trying to use old IMAP while new IMAP is enabled
IMAP_OPEN_FAILED_TITLE_FORMAT
VerifiedESEARCH
com.apple.mail.IMAPAccount.ESearchVerificationFailure
@"NSDictionary"8@?0
MailboxName
Apple Mail To Do
method
_releaseAllConnectionsAndCallSuper
edgeOnly
IMAP account %@ (%@)
com.apple.mail.imap.offlinestatuschange
INBOX
INBOX%@INBOX
-[IMAPAccount _newMailboxWithParent:name:attributes:dictionary:withCreationOption:]
IMAPAccount.m
creationOption == MailboxCreationOptionDefault
DISABLED_STATUS
v32@?0@"NSString"8@"NSDictionary"16^B24
B16@?0@"MFMailboxUid"8
@16@?0@"MFMailboxUid"8
IMAP_REMOVING_CACHE_FILES
MAILBOX_NAME_INCLUDES_PATH_SEPARATOR
NO_OFFLINE_MAILBOX_RENAMING
.OfflineCache
v32@?0@"NSString"8@"NSString"16^B24
.%@.%@
RelatedMessagesShouldIncludeDrafts
not 
CANNOT
is NOT
    topic: %@
    known capabilities: %@
    negotiated push service level: %@
    last push registration time: %@
<never>
    mailboxes registered for push: %@
MOVE
Got store of class %@ for mailbox %@
Got wrong type of store for mailboxURL
X-APPLE-REMOTE-LINKS
mail-automation: IMAPAccount
StoreTrashOnServer
StoreArchiveOnServer
<null>
<unavailable>
<unknown>
version 1
version 2
version 3
_pushServiceLevelName
0 && "unknown push service level"
IMAPMailboxAttributes
DELETED
Source UIDS
Destination UIDS
\Archive
\Drafts
\Trash
aps-version
sender
NONE
aps-account-id
aps-device-token
aps-subtopic
mailboxes
(BODY.PEEK[HEADER.FIELDS (MESSAGE-ID)])
(UID FLAGS)
+FLAGS.SILENT
-FLAGS.SILENT
d-MMM-yyyy
(){ %*\"
    supports IDLE: %@
    using IDLE: %@ (seq=%lu)
STARTTLS
LITERAL+
LITERAL-
UIDPLUS
CHILDREN
IDLE
QUOTA
NAMESPACE
MULTIAPPEND
UNSELECT
LOGINDISABLED
XLIST
COMPRESS=DEFLATE
ESEARCH
CONDSTORE
SASL-IR
XYMHIGHESTMODSEQ
X-GM-EXT-1
SPECIAL-USE
LIST-STATUS
LIST-EXTENDED
"%@"
"%@ (%@)"
"name"
"version"
"os"
"iOS"
"os-version"
DEFLATE
TLS_NOT_SUPPORTED_FORMAT
FAILED_FETCH_TITLE
Cannot Get Mail
outNonSynchronizingLiteral
{%lu%s}
%lu 
v40@?0r^v8{_NSRange=QQ}16^B32
B32@?0r*8Q16B24B28
IMAP_OPEN_FAILED_MSG_FORMAT
IMAP_COMMAND_FAILED_FORMAT1
STATUS %@
RETURN (%@)
@"NSNull"16@?0^@8
*** Server doesn't support UIDPLUS
B8@?0
(\Deleted)
BEFORE
uids
mailboxName
-[MFIMAPConnection storeGmailLabels:state:forUIDs:]
IMAPConnection.m
MinFetchChunkSize
MaxFetchChunkSize
FetchDeltaTarget
%llu:*
%llu:%llu
v32@?0{_NSRange=QQ}8^B24
TLS_FAILED_FORMAT
<%@:%p> [%@%s] delegate=%p mailbox=<%@>
, Fetching
<%@:%p> [%@%s] delegate=%p
Disconnected
Non-authenticated
Authenticated
Selected
%@ delegate=%p
<%p:%@> [%@ (%@)]
<%p:%@> [%@]
(INTERNALDATE UID RFC822.SIZE FLAGS 
MODSEQ 
X-GM-MSGID 
BODY.PEEK[HEADER])
%@ ...
%@ %@
 ...
%@ %@%@
%lu %s %@
<%@: %p>
%@ set %@
%@ unset %@
CAPABILITY
NOOP
LOGOUT
LOGIN
LIST
LSUB
STATUS
EXAMINE
CREATE
DELETE
RENAME
SELECT
SUBSCRIBE
UNSUBSCRIBE
EXPUNGE
UID EXPUNGE
CLOSE
APPEND
FETCH
UID FETCH
UID STORE
UID COPY
UID SEARCH
GETQUOTAROOT
GETQUOTA
DONE
SEARCH
XDELIVER
COMPRESS
UID MOVE
DisableESEARCH
DisableCOMPRESS
DisableCONDSTORE
"dd-MMM-yyyy HH:mm:ss ZZ"
operations
In-Reply-To:
References:
BODY[HEADER.FIELDS (REFERENCES IN-REPLY-TO)]
HEADER
Message-ID
v32@?0@"NSString"8Q16^B24
UNDELETED
InvocationQueue_lock
DebugWorkerThreads
MFInvocationQueue starting invocation %p [%s %s]
MFInvocationQueue finished invocation %p [%s %s] in %5.5fs
==== %@Invocation Queue <%@: %p> ====
Shared 
number of running threads: %d
==== Queued ====
  %@
(empty)
Store %@ has no mailboxURL
LibraryIMAPStore.m
We have a library IMAP store without a mailboxURL
@"EDServerMessagePersistence"16@?0^@8
@"NSString"12@?0I8
temp-%lu
temp-
 libraryID=%lld remoteID=%@
LibraryMessage.m
Expected message %@ to be self %@
DetectData
%@ = %@
%@ == '*'
= '%@*'cdwt
= '*%@'cdwt
= '%@'cd
!= '%@'cd
= '*%@*'c
< %@
> %@
-[MFMessageCriterion(MFLibrarySearchableIndexAdditions) _comparisonOperationMatchingValue:qualifier:]
LibrarySearchableIndex.m
0 && "unexpected qualifier type"
@"NSString"16@?0@"NSString"8
v32@?0@"MFMessageCriterion"8Q16^B24
@"NSNumber"16@?0@"MFMessageCriterion"8
v32@?0@"NSString"8@"NSMutableArray"16^B24
@"NSString"16@?0@"MFMessageCriterion"8
$time.absolute(%f)
!(%@)
messages
MailMessageStoreMessageFlagsChanged
MailMessageStoreMessagesAdded
MailMessageStoreMessagesWillBeCompacted
MailMessageStoreMessagesRemoved
<%@: %p (uid=%@)>
LibraryStore.m
messages shouldn't have a zero generation number.
FetchWithoutLimits
%@|%lu|%@|%d
com.apple.message.fetchMobileSynchronously
oldFlagsByMessage
multipart
SUCCESS
FAILED
X-Apple-Content-Length: %lu
Q24@?0@"MFMessage"8q16
q24@?0@8@16
LocalAccountId
Mailboxes
local:
LocalAccount
Local
PERSONAL_MAILBOXES
Local Mailboxes
MAILBOX_EXISTS_FORMAT
x-apple-transient-drafts
x-apple-send-later
EmailAddresses
ReceiveEmailAliasAddresses
LastEmailAliasesSyncDate
LastEmailAliasesSyncEntityTag
SMTPIdentifier
SMTPCarrierFallbackAllowed
SMTPDisabled
CustomSignature
SMTPAlternateIdentifiers
DraftsMailboxName
SentMessagesMailboxName
TrashMailboxName
ArchiveMailboxName
JunkMailboxName
AccountIcon
SaveSentMessages
ArchiveMessages
CachePolicy
DefaultSendingAccount
MFMailDefaultSendingAccountDidChange
defaultAddress
MFNameKey
AccountMailboxListingDidChange
AccountMailboxListingWillLoad
AccountMailboxListingDidLoad
AccountMailboxListingWillFetch
AccountMailboxListingDidFetch
mboxes
MailboxAttributes
MailboxChildren
MailboxExtraAttributes
MailAccountContentsDidChange
MailAccountContentsDidChangeUids
MFMailAccountPushedMailboxUidsDidChange
.mboxCache.plist
SendingIdentities
EncryptionIdentities
B16@?0@"MailAccount"8
@16@?0@"NSString"8
Outbox
@"MFMailboxUid"16@?0@"MailAccount"8
-[MailAccount test_setTaskManager:]
+[MailAccount test_tearDown]
-[MailAccount test_tearDown]
AccountPath
CachedMailboxenLock
MailAccountDeletionLock
com.apple.mail.account
%@-%@@%@
@"NSArray"16@?0@"NSString"8
@"NSSet"8@?0
q24@?0@"MFMailboxUid"8@"MFMailboxUid"16
RENAME_FAILED
DELETE_FAILED_FORMAT
-[MailAccount storeClass]
MailAccount.m
Account URL is nil
plist
Send Later
MFMailboxDictClientCount
MFMailboxDictLock
ChokeLock
-[MailAccount didFinishActionForChokePoint:coalescePoint:withResult:]
OldChildren
NewChildren
 path=%@
-%@-(%@)
Sent Messages
Deleted Messages
LogDeleteActivity
 (%@)
otherAccountIcon
com.apple.MailAccount-ExtProperties
-[MailAccount _setValueInAccountLookAsideProperties:forKey:subKey:]
[dictionary isKindOfClass:[NSDictionary class]]
-[MailAccount archiveDestinationForMailbox:]
[self supportsArchiving] && "only accounts that support archiving should call into this"
mail-automation: MailAccount
Account Info
com.apple.email.MailAccount
MailAccount.cachedMailboxUIDs
_readMailboxCache
self->_rootMailboxUid
BOOL _readMailboxCache(MailAccount *__strong)
Invalid
Rootless
Generic
Root
InboxSpecial
JunkSpecial
ArchiveSpecial
TrashSpecial
SentMessagesSpecial
DraftsSpecial
OutboxSpecial
MailboxUidDidBecomeInvalidNotification
MFMailboxUidWasRenamedNotification
Info.plist
*** Orphaned mailbox %@
DRAFTS_SPECIAL_MAILBOX_NAME
SENT_MESSAGES_SPECIAL_MAILBOX_NAME
TRASH_SPECIAL_MAILBOX_NAME
OUTBOX_SPECIAL_MAILBOX_NAME
ARCHIVE_SPECIAL_MAILBOX_NAME
JUNK_SPECIAL_MAILBOX_NAME
URLString
IncludeDefaultSecurePortNumber
 relativePath=%@
<%@ %p> ID=%lld type=%@ attributes=%lu
IsDirty
suggestionsLostMessageSearchResultCount
suggestionsLostMessageSearchTimestamp
@"MFFollowUpWarningResult"16@?0^@8
%@ (
SEND_MESSAGE_FORMAT
Sending message: %@
NO_SUBJECT
No subject
INTERNAL_DELIVERY_ERROR_FORMAT
NO_RECIPIENTS
FollowUp
using DebugStartDate (original startDate:%@, endDate:%@)
FORWARDED_MESSAGE_PREFIX
Begin forwarded message:
%@ globalMessageID=%lld
_Encoding
Envelope Index
Protected Index
subjects
summaries
protected_message_data
message_global_data
conversations
read_later
MFColumnAlias
MFDefaultValue
emlxpart
MailMessageLibraryWillBecomeUnavailable
MailMessageLibraryDidBecomeAvailable
MailMessageLibraryDidFinishReconciliation
MailMessageLibraryProtectedDataAvailibilityKey
.reset-database
com.apple.message.journal-reconciliation
NeedToMigrateFiles
NeedToMigrateAttachments
UseLegacyMessageIDHashFormat
LibraryMessageAttachmentDataBecameAvailableNotification
com.apple.email.signposts
userAgent
@"MFLibraryMessage"16@?0@"NSNumber"8
com.apple.message.library
com.apple.message.library.stats
com.apple.message.library.keybag
com.apple.message.library.conversationcalculation
com.apple.message.library.fileRemovalAfterCompaction
Library Stats
protectedDataAvailable
messagesMarkedAsJournaled
messageData
messagesDeleted
messageDataDeleted
mailboxesNeedingReconcilication
protectedMessages
protectedMessageData
messagesIndexed
messagesToIndex
indexableMessages
attachmentsIndexed
attachmentsToIndex
indexableAttachments
indexing
ROWID
remote_id
date_sent
size
subject_prefix
subject
comment
sender_comment
sender_address
summary
original_mailbox
content_type
conversation_id
encoding
external_id
global_message_id
message_id
unique_id
conversation_flags
list_id_hash
document_id
date
read_later_date
send_later
send_later_date
unsubscribe_type
follow_up_start_date
follow_up_end_date
bucket
senders
sender_bucket
brand_indicators
brand_indicator_location
+[MFMailMessageLibrary test_setDefaultInstance:]
com.apple.mail.Persistence.MessageIDHashFormat
useLegacyFormat
-[MFMailMessageLibrary test_tearDown]
B16@?0@"EDPersistenceDatabaseConnection"8
UPDATE messages SET flags = (flags|:flags) WHERE rowid = :rowid
:flags
:rowid
setting flags
SELECT flags FROM messages WHERE ROWID = ?;
Q16@?0Q8
, flag_color = NULL
, flag_color = %@
, flag_color = %lu
UPDATE messages SET flags = ((flags | ?) & ?)%@%@ WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?)
mass updating flags
@"MFSearchableIndexItem_iOS"16@?0@"MFLibraryMessage"8
SELECT messages.ROWID, messages.message_id, messages.conversation_id, messages.subject_prefix, subjects.subject, addresses.comment, addresses.address, messages.date_sent FROM messages JOIN subjects ON messages.subject = subjects.ROWID JOIN addresses ON messages.sender = addresses.ROWID WHERE subjects.subject = ? AND messages.mailbox = ?
v32@?0@"EFSQLRow"8Q16^B24
querying subject references for threads
v32@?0@"NSNumber"8@"MFMessageReferenceContext"16^B24
message_references
message
reference
is_originator
v24@?0q8^B16
inserting message_references
UPDATE messages SET conversation_id = ?, content_index_transaction_id = NULL, flags = flags & ~(1<<33) WHERE rowid = ?
inserting conversation id into message row
INSERT OR IGNORE INTO conversations (conversation_id) VALUES (?)
inserting row into conversations table
INSERT OR IGNORE INTO conversation_id_message_id (conversation_id, message_id) SELECT ?, reference FROM message_references WHERE message = ?
inserting row into conversation_id_message_id table (1)
INSERT OR REPLACE INTO conversation_id_message_id (conversation_id, message_id, date_sent) VALUES (?, ?, ?)
inserting row into conversation_id_message_id table (2)
UPDATE messages SET conversation_id = ?, content_index_transaction_id = NULL, flags = flags & ~(1<<33) WHERE conversation_id = ?
udpating other conversations to point to this one
UPDATE OR IGNORE conversation_id_message_id SET conversation_id = ? WHERE conversation_id = ?
v32@?0@"NSNumber"8@"NSArray"16^B24
deleting row from conversations table
SELECT addresses.comment AS sender_comment, addresses.address AS sender_address, subjects.subject, messages.remote_mailbox, messages.original_mailbox, content_type, messages.message_id, messages.external_id, messages.unique_id, messages.list_id_hash, messages.document_id, messages.unsubscribe_type FROM messages LEFT OUTER JOIN addresses ON messages.sender = addresses.ROWID LEFT OUTER JOIN subjects ON messages.subject = subjects.ROWID WHERE messages.ROWID = ?
remote_mailbox
Fetching fields for message
INSERT INTO messages (remote_id, sender, subject_prefix, global_message_id, subject, summary, date_sent, date_received, display_date, mailbox, remote_mailbox, original_mailbox, flags, read, flagged, flag_color, deleted, sender_vip, visible, size, encoding, content_type, message_id, sequence_identifier, external_id, unique_id, list_id_hash, journaled, document_id, unsubscribe_type) values (:remote_id, :sender, :subject_prefix, :global_message_id, :subject, :summary, :date_sent, :date_received, :display_date, :mailbox, :remote_mailbox, :original_mailbox, :flags, :read, :flagged, :flag_color, :deleted, :sender_vip, :visible, :size, :encoding, :content_type, :message_id, :sequence_identifier, :external_id, :unique_id, :list_id_hash, :journaled, :document_id, :unsubscribe_type)
:remote_id
:sender
:subject_prefix
:global_message_id
:subject
:summary
:date_sent
:date_received
:display_date
:mailbox
:remote_mailbox
:original_mailbox
:visible
:size
:content_type
:sequence_identifier
:external_id
:unique_id
:list_id_hash
:journaled
:document_id
:unsubscribe_type
Inserting message
INSERT OR REPLACE INTO pop_uids (mailbox, uid, date_added) VALUES (?, ?, ?);
inserting POP UID
v24@?0q8q16
X-Apple-Content-Length: %lu
@16@?0@"<ECMessage>"8
v32@?0@"MFMailboxUid"8@"NSArray"16^B24
INSERT INTO recipients (message, address, type, position) VALUES (?, ?, ?, ?)
Inserting address
v32@?0@"_MFEmailAddress"8Q16^B24
B24@?0@"NSArray"8Q16
SELECT ROWID FROM addresses WHERE address = ? AND comment = ?
Looking up address ROWID
INSERT INTO addresses (address, comment) VALUES (?, ?)
SELECT ROWID FROM %@ WHERE %@ = ?
Looking up %@ ROWID
INSERT INTO %@ (%@) VALUES (?)
Inserting %@
INSERT OR IGNORE INTO conversation_id_message_id (conversation_id, message_id) VALUES (?, ?)
inserting row into conversation_id_message_id table (3)
SELECT ROWID FROM message_global_data WHERE message_id = ?
Got a confict trying to set global message ID %llu, but couldn't find conflicting row
SELECT message_id FROM messages WHERE rowid = ?
pulling out the faked message-id
The message didn't get updated
ifnull(%@, %@)
%@ AS %@
v24@?0#8:16
SELECT %@ 
SELECT messages.conversation_id 
SELECT COUNT(DISTINCT(messages.message_id)) 
loading messages
full.emlx
partial.emlx
{?=II}
B24@?0I8I12q16
(server_messages.remote_id < %llu OR %llu <= server_messages.remote_id)
,%llu
v24@?0Q8^B16
server_messages.remote_id NOT IN (%@)
SELECT messages.global_message_id, server_messages.remote_id, messages.size FROM messages INNER JOIN server_messages ON messages.ROWID = server_messages.message WHERE messages.rowid IN (SELECT rowid FROM messages WHERE mailbox == %llu ORDER BY date_received DESC LIMIT %llu) AND %@ AND messages.summary IS NULL ORDER BY messages.date_received DESC
SELECT messages.global_message_id, server_messages.remote_id, messages.size FROM messages INNER JOIN server_messages ON messages.ROWID = server_messages.message WHERE messages.mailbox == %llu AND %@ AND messages.summary IS NULL ORDER BY messages.date_received DESC
error performing query: %@
SELECT date_received FROM messages WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND flags & 128 = 0 ORDER BY date_received ASC LIMIT 1;
SELECT date_received FROM messages JOIN searchable_messages ON messages.ROWID = searchable_messages.message_id WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND flags & 128 = 0 AND searchable_messages.transaction_id != 0 ORDER BY date_received ASC LIMIT 1
attached
not attached
SELECT COUNT() %@;
SELECT mailboxes.url, COUNT(DISTINCT(messages.message_id)) %@ GROUP BY 1;
INSERT INTO temp_selected_messages SELECT rowid FROM messages WHERE mailbox = ifnull((SELECT rowid FROM mailboxes WHERE url = :url), -1) AND deleted = '0' ORDER BY date_received DESC, ROWID DESC LIMIT :limit OFFSET :offset;
:url
:limit
:offset
SELECT messages.ROWID, remote_id, date_received, date_sent, display_date, flags, size, messages.subject_prefix, subjects.subject, sender.comment AS sender_comment, sender.address AS sender_address, mailbox, original_mailbox, content_type, summaries.summary, encoding FROM temp_selected_messages AS selection LEFT OUTER JOIN messages ON selection.message_id = messages.rowid LEFT OUTER JOIN addresses AS sender ON messages.sender = sender.ROWID LEFT OUTER JOIN subjects ON messages.subject = subjects.ROWID LEFT OUTER JOIN summaries ON messages.summary = summaries.ROWID;
DELETE FROM temp_selected_messages;
messagesWithSummariesForMailbox
INSERT INTO temp_selected_messages SELECT rowid FROM messages WHERE rowid >= 0 AND rowid <= :maxRowId ORDER BY rowid DESC LIMIT :limit;
:maxRowId
 FROM temp_selected_messages AS selection LEFT OUTER JOIN messages ON selection.message_id = messages.rowid LEFT OUTER JOIN addresses AS sender ON messages.sender = sender.ROWID LEFT OUTER JOIN subjects ON messages.subject = subjects.ROWID;
orderedBatchOfMessagesEndingAtRowId
error performing query: %@: %@
@"MFMessageCriterion"16@?0@"NSString"8
%@: Unable to form query for criteria
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE flags&%llu = 0 AND mailbox IN (%@)
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags&16 > 0 AND flags&2 = 0) AND mailbox IN (%@)
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE ((((flags&(63<<10))>>10) BETWEEN 1 AND 62) AND flags&1 = 0) AND mailbox IN (%@)
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE ((flags&(3<<39)>>39) > 0 AND flags&1 = 0) AND mailbox IN (%@)
SELECT COUNT(DISTINCT(message_id)) FROM messages JOIN read_later ON messages.global_message_id = read_later.global_message_id WHERE mailbox IN (%@)
SELECT COUNT() FROM message_global_data JOIN send_later ON message_global_data.ROWID = send_later.global_message_id WHERE mailbox IN (%@)
url = %Q
SELECT ROWID FROM mailboxes WHERE %@
SELECT unread_count FROM mailboxes WHERE url = ?
SELECT flagged_count FROM mailboxes WHERE url = ?
SELECT attachment_count FROM mailboxes WHERE url = ?
SELECT to_cc_count FROM mailboxes WHERE url = ?
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (((flags&(63<<10))>>10) BETWEEN 1 AND 62) AND mailbox IN (%@)
SELECT count(messages.rowid) FROM messages JOIN mailboxes ON messages.mailbox = mailboxes.rowid WHERE url = ? AND (flags & %llu = 0) AND deleted = '0'
SELECT COUNT(messages.rowid) FROM messages JOIN mailboxes ON messages.mailbox = mailboxes.rowid WHERE url = ? AND flags & %llu AND deleted = '0'
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags & %llu = 0) AND (deleted = '0') AND mailbox IN (%@)
SELECT server_unread_count FROM mailboxes WHERE url = ?
SELECT count() FROM (SELECT searchable_messages.transaction_id FROM messages JOIN searchable_messages ON messages.ROWID = searchable_messages.message_id WHERE mailbox IN (SELECT ROWID FROM mailboxes WHERE url = ?) ORDER BY ROWID DESC LIMIT %lu) WHERE transaction_id != 0
SELECT count() FROM messages JOIN searchable_messages ON messages.ROWID = searchable_messages.message_id JOIN mailboxes ON messages.mailbox = mailboxes.rowid WHERE url = ? AND searchable_messages.transaction_id != 0
UPDATE mailboxes SET server_unread_count = ? WHERE url = ?
updating server unread-only-on-server count
last_sync_status_count
most_recent_status_count
SELECT most_recent_status_count FROM mailboxes WHERE url = ?
UPDATE mailboxes SET most_recent_status_count = ? WHERE rowid = ?
setting unseen count
%@ FROM messages WHERE remote_mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND messages.remote_id = ? LIMIT 1
finding message for UID
v24@?0@"NSString"8^B16
%@ FROM messages %s WHERE remote_mailbox = (SELECT ROWID FROM mailboxes WHERE url = %@) AND messages.remote_id IN (%@)
SELECT sequence_identifier FROM mailboxes WHERE url = ?
loading mailbox sequence identifier
UPDATE mailboxes SET sequence_identifier = ? WHERE ROWID = ?
setting mailbox sequence identifier
SELECT MIN(messages.sequence_identifier) FROM messages JOIN mailboxes ON messages.mailbox = mailboxes.rowid WHERE url = ? AND remote_id IN (?
loading per-message minimum sequence identifier
UPDATE messages SET sequence_identifier = ? WHERE ROWID = ?
setting per-message sequence identifier
UPDATE messages SET sequence_identifier = ? WHERE MAILBOX = (SELECT ROWID FROM mailboxes WHERE url = ?) AND remote_id IN(?
setting en masse per-message sequence identifier
Unsupported option for fetching message
%@FROM messages%s
, messages.mailbox 
%@ %@ WHERE messages.ROWID = ?%@ LIMIT 1
 AND mailbox = ?
 AND mailbox IN (SELECT ROWID FROM mailboxes WHERE url = ?)
%@ %@ WHERE messages.ROWID = ? LIMIT 1
Fetching message for library ID
SELECT conversation_id FROM messages WHERE rowid IN (SELECT message FROM message_references WHERE reference IN (SELECT reference FROM message_references WHERE message = ?));
Ref Ref Error! Ref!
SELECT conversation_id FROM messages WHERE message_id IN (SELECT reference FROM message_references WHERE message = ?);
Ref Error!
SELECT messages.conversation_id FROM message_references, messages WHERE reference IN (SELECT message_id FROM messages WHERE rowid = ?) AND messages.rowid = message_references.message;
Deref error!
SELECT conversation_id FROM messages WHERE message_id = ? AND rowid != ?;
Message error!
SELECT message_references.message, reference FROM message_references LEFT OUTER JOIN messages ON reference = messages.message_id WHERE message_references.message IN (SELECT rowid FROM messages WHERE conversation_id in (SELECT conversation_id FROM messages WHERE rowid = ?)) AND messages.rowid IS NULL
Getting references that do not exist in the DB in this conversation.
v32@?0@"NSNumber"8@"EFMutableInt64Set"16^B24
SELECT ROWID, url FROM mailboxes
selecting mailbox URLs
SELECT url FROM mailboxes WHERE ROWID = ?;
-[MFMailMessageLibrary mailboxURLsForIDs:]
MailMessageLibrary.m
urlsByID.count == mailboxIDs.count
v32@?0@"NSNumber"8@"NSString"16^B24
SELECT rowid FROM mailboxes WHERE url = ?;
SELECT ROWID FROM messages WHERE (ROWID IN (%@)) AND (flags & %llu != 0)
SELECT flags FROM conversations WHERE conversation_id = ?
fetching conversation flags
UPDATE conversations SET flags = ? WHERE conversation_id = ?
setting conversation flags
UPDATE conversations SET flags = ?, sync_key = ? WHERE conversation_id = ?
setting conversation flags and sync key
%lld
SELECT DISTINCT(conversation_id) FROM conversation_id_message_id WHERE message_id IN (%@)
finding conversation id
SELECT value FROM properties WHERE key = ?
INSERT OR REPLACE INTO properties (key, value) VALUES (?,?)
DELETE FROM properties WHERE key = ?
%@ property %@
updating
deleting
UPDATE pop_uids SET flags = ? WHERE mailbox = ? AND uid = ?
Clearing flags in pop_uids
messages.count <= EDMessageBatchSize
@"NSString"16@?0@"MFLibraryMessage"8
SELECT sender, subject, summary, brand_indicator FROM messages WHERE ROWID IN (%@)
Fetching messages to delete
SELECT DISTINCT address FROM recipients WHERE message IN (%@)
Fetching recipient addresses for messages
DELETE FROM messages WHERE ROWID IN (%@)
Deleting messages
recipients
addresses
brand_indicator
Transaction for removing files after compaction
v24@?0@"NSNumber"8^B16
v24@?0@"MailAccount"8^B16
v32@?0@"MailAccount"8@"NSMutableSet"16^B24
SELECT DISTINCT %@ FROM %@ WHERE %@ IN (%@)
Fetching value
DELETE FROM %@ WHERE ROWID IN (%@)
Deleting rows
UPDATE mailboxes SET url = '%q' WHERE url = '%q';
DELETE FROM mailboxes WHERE url = '%q'
deleting mailbox URL
renaming mailbox
deleting mailbox
headers.emlx
Attempting to store summary in protected message data table
SELECT rowid FROM message_data WHERE message_id = ? AND part = ?
searching for existing message_data entry
INSERT INTO message_data (message_id, part, partial, complete, length) VALUES (:message_id, :part, :partial, :complete, :length)
UPDATE message_data SET message_id = :message_id, part = :part, partial = :partial, complete = :complete, length = :length WHERE rowid = :rowid
:message_id
:part
:partial
:complete
:length
inserting message data (unprotected)
preparing insert statement
INSERT OR REPLACE INTO protected_message_data (ROWID, data) VALUES (%lld, NULL);
INSERT OR REPLACE INTO protected_message_data (ROWID, data) VALUES (%lld, X'%s');
INSERT OR REPLACE INTO protected_message_data (ROWID, data) VALUES (%lld, %Q);
Inserting into protected_message_data
Checking for message existence when setting summary
UPDATE messages SET summary = ? WHERE ROWID = ?
Setting summary
Attempting to load summary from protected message data table
SELECT data FROM protected_message_data WHERE ROWID = (SELECT ROWID FROM message_data WHERE message_id = ? AND part = ?)
Fetching message data
@16@?0@"NSData"8
SELECT complete FROM message_data WHERE message_id = ? and part = ?
SELECT length, complete, partial FROM message_data WHERE message_id = ? AND part IS NULL
length
complete
partial
checking message_data
addresses AS sender JOIN messages ON sender.ROWID = messages.sender %s
addresses AS recipient JOIN recipients ON recipient.ROWID = recipients.address JOIN messages ON recipients.message = messages.ROWID %s
attachments AS attachment JOIN messages ON attachment.message_id = messages.ROWID %s
mailboxes JOIN messages ON mailboxes.ROWID = messages.mailbox %s
read_later JOIN messages ON read_later.global_message_id = messages.global_message_id %s
send_later JOIN messages ON send_later.global_message_id = messages.global_message_id %s
senders JOIN sender_addresses ON senders.ROWID = sender_addresses.sender JOIN messages ON senders_addresses.address = messages.sender %s
brand_indicators JOIN messages ON brand_indicators.ROWID = messages.brand_indicator %s
messages %s
%@ FROM %@ WHERE %@
%@ FROM %@ WHERE %@%@
 ORDER BY %1$s %2$s, messages.ROWID %2$s
display_date
date_received
DESC
 LIMIT %lu
 OFFSET %lu
FALSE
@"NSString"16@?0@"EFQuery"8
 ORDER 
 LIMIT 
%@ UNION %@
@"NSString"24@?0@"NSString"8@"NSString"16
@"NSString"16@?0@"EDPersistenceDatabaseConnection"8
@"EFQuery"16@?0@"NSPredicate"8
@"NSPredicate"16@?0@"EMObjectID"8
@"NSPredicate"16@?0@"NSPredicate"8
v32@?0@"NSPredicate"8Q16^B24
DELETE FROM accounts WHERE text_id = ?
deleting an account entry
 AND +messages.mailbox IN (SELECT ROWID FROM mailboxes WHERE %@) 
@"EFSQLBinaryExpression"16@?0@"MailAccount"8
UPDATE pop_uids SET del = 1 WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND uid = ?;
setting pop_uid.del = 1
SELECT uid FROM pop_uids WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND del NOT NULL;
SELECT uid FROM pop_uids WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?);
SELECT uid FROM pop_uids AS uid LEFT OUTER JOIN messages AS message ON uid.mailbox = message.remote_mailbox AND uid.uid = message.remote_id WHERE uid.mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND message.rowid IS NULL OR (message.flags & 2) > 0;
SELECT message_id FROM messages_deleted
collecting deleted message identifiers
DELETE FROM protected_message_data WHERE ROWID IN (SELECT message_data_id FROM message_data_deleted)
DELETE FROM message_data_deleted
cleaning up protected tables
LogDatabaseStats
v16@?0@"NSObject<OS_xpc_object>"8
Wrong kind of database connection
protected
PRAGMA %@.freelist_count;
PRAGMA %@.page_count;
PRAGMA %@.incremental_vacuum(%lld);
main
journal reconciliation failed
-[MFMailMessageLibrary journalReconciliationFailed]
0 && "journal reconciliation failed"
#Performance Moving database files
SavedFolders
#Performance Removing 
 LIMIT %ld
%@ FROM messages %s WHERE %@ %@ ORDER BY %@%@
%@ FROM messages %s WHERE %@ %@%@
%@ FROM messages %s ORDER BY %@%@
%@ FROM messages %s %@
v32@?0@"MFLibraryMessage"8Q16^B24
%@.%lld
follow_up_jsonstringformodelevaluationforsuggestions
SELECT addresses.ROWID, addresses.address, addresses.comment, recipients.type FROM recipients JOIN addresses ON recipients.address = addresses.ROWID WHERE recipients.message = ? ORDER BY recipients.position
type
Fetching recipients
Must include at least one recipient type
SELECT addresses.address, addresses.comment, recipients.type, recipients.message FROM recipients JOIN addresses ON recipients.address = addresses.ROWID WHERE recipients.message IN (%@) AND type IN (%@) ORDER BY recipients.position
stringValue
Unknown recipient type
SELECT * FROM mailboxes;
url: %@
  total Count: %@
total_count
  unread Count: %@
unread_count
  deleted Count: %@
deleted_count
  flagged Count: %@
flagged_count
  server Unread Count: %@
server_unread_count
  last Sync Status Count: %@
  most Recent Status Count: %@
Selecting mailboxes
SELECT length FROM message_data WHERE message_id = ? AND part = ?
SELECT length FROM message_data WHERE message_id = ? AND part IS NULL
RichLinks
v16@?0@"MFMimePart"8
alternative
v32@?0@"EDRichLinkData"8Q16^B24
v16@?0@"EDWebContentParserResults"8
feature not enabled
SELECT 1 FROM messages WHERE ROWID = ?;
testing for message existence
DELETE FROM message_data WHERE message_id = ? AND part = ?
DELETE FROM message_data WHERE message_id = ? AND part IS NULL
deleting message data
fullAddress
com.apple.message.statisticsLogging
UPDATE messages SET flags = :flags, read = :read, flagged = :flagged, flag_color = :flag_color, deleted = :deleted, sender_vip = :sender_vip, encoding = :encoding, remote_id = :uid
 WHERE ROWID = :rowid
:read
:flagged
:flag_color
:deleted
:sender_vip
:uid
:encoding
read
deleted
sender_vip
, %@ = '%d'
v32@?0@"NSString"8@16^B24
audio
video
application
INSERT INTO mailboxes (url) values ('%q')
inserting mailbox URL
 LEFT OUTER JOIN subjects ON messages.subject = subjects.ROWID
 LEFT OUTER JOIN addresses AS sender ON messages.sender = sender.ROWID
 JOIN mailboxes AS mailbox ON messages.mailbox = mailbox.ROWID
 LEFT OUTER JOIN summaries ON messages.summary = summaries.ROWID
 JOIN conversations AS conversations ON messages.conversation_id = conversations.conversation_id
 LEFT OUTER JOIN read_later ON messages.global_message_id = read_later.global_message_id
 LEFT OUTER JOIN send_later ON messages.global_message_id = send_later.global_message_id
 LEFT OUTER JOIN message_global_data ON messages.global_message_id = message_global_data.ROWID
 LEFT OUTER JOIN sender_addresses ON messages.sender = sender_addresses.address LEFT OUTER JOIN senders ON sender_addresses.sender = senders.ROWID
 LEFT OUTER JOIN brand_indicators ON messages.brand_indicator = brand_indicators.ROWID
 JOIN searchable_rebuild ON messages.rowid = searchable_rebuild.message_id
%s%s%s%s%s%s%s%s%s%s%s%s
@"NSString"16@?0@"NSNumber"8
SELECT ROWID, url FROM mailboxes WHERE ROWID IN (%@);
preparing statement for fetching mailbox URLs
iterating results for mailbox URLs
_dataForMessageAndPart
![part isEqualToString:MFMessagePartNameSummary]
SELECT %@ FROM message_data AS a JOIN protected_message_data AS b ON a.rowid = b.rowid AND a.message_id = ? AND %@
b.data, a.complete
part = ?
part IS NULL
b.data
part = ? AND complete IS NOT NULL
part IS NULL AND complete IS NOT NULL
%@ AND partial IS NULL
Fetching data for message part
handleIterativeSearchRow
c->handlerWantsMessageObjects
loading UIDs to delete
com.apple.message.db.vacuum
_writeDataHolderForMessageAndPart
directory
BOOL _writeDataHolderForMessageAndPart(MFMailMessageLibrary *__strong, EDPersistenceDatabaseConnection *__strong, EMDatabaseID, EMGlobalMessageID, NSString *__strong, NSString *__strong, MFDataHolder *__strong, BOOL, BOOL, MFFileCompressionQueue *__strong, MailAccount *__strong)
cannot write partial MIME parts.
&aid=%@
Partial message, part %@ of %@
To read this message, select all of the parts of the message and select the Message --> MIME --> Combine Messages menu item.
number
total
VIPCriterion
ThreadNotifyCriterionName
ThreadMuteCriterionName
FlaggedCriterion
FlagColorCriterion
UnreadCriterion
ReadCriterion
IncludesMeCriterion
ToMeCriterionName
CcMeCriterionName
HasAttachmentsCriterion
SenderBucketCriterion
TodayCriterion
YesterdayCriterion
LastWeekCriterion
ReadLaterCriterion
FollowUpCriterion
SendLaterCriterion
UnsubscribeCriterion
MFPropertyMapperLookupKeyCriterionType
--compare-field
CriterionUniqueId
Header
GlobalMessageID
MessageIdHash
Expression
Qualifier
Name
AllCriteriaMustBeSatisfied
Criteria
DateUnitType
DateIsRelative
AccountURL
To or Cc
Body
SenderIsInAddressBook
SenderIsNotInAddressBook
SenderIsMemberOfGroup
SenderIsNotMemberOfGroup
SenderHeader
AnyMessage
Mailbox
AnyRecipient
DateSent
DateReceived
DisplayDate
SenderIsInAddressHistory
SenderIsNotInAddressHistory
AnyRecipientIncludesFullName
NoRecipientIncludesFullName
IsDigitallySigned
IsEncrypted
PriorityIsNormal
PriorityIsHigh
PriorityIsLow
AnyAttachment
MessageNumber
ExternalID
Negation
Compound
Flag
FlagColor
NotInTrashMailbox
ContainsAttachments
InSpecialMailbox
NotInASpecialMailbox
SpotlightSearch
ConversationID
ListIDHash
DocumentID
ToRecipient
CcRecipient
DateLastViewed
ReadLater
FollowUpStartDate
FollowUpEndDate
SendLater
Unsubscribe
SenderBucket
BeginsWith
EndsWith
IsEqualTo
IsNotEqualTo
DoesNotContain
Contains
ASCIIContains
IsLessThan
IsGreaterThan
(none)
%@Criterion: %@
%@%@  All criteria must be satisfied: %@
%@  Criteria: %@
%@  Name: %@
%@Criterion: %@
%@ Sub-Criterion: 
%@Criterion: %@
%@  Qualifier: %@
%@  Expression: %@
<%@: %p> %@
From
 or 
@"MFMessageCriterion"16@?0@"MFMailboxUid"8
    
MessageIsRead
MessageIsDeleted
MessageIsJournaled
MessageIsFlagged
MessageFlagColor
MessageWasRepliedTo
MessageWasForwarded
MessageWasRedirected
MessagePriorityLevel
MessageIsEncrypted
MessageIsSigned
MessageSenderIsVIP
MessageToContainsAccountAddress
MessageCcContainsAccountAddress
MessageToOrCcContainsAccountAddress
MFMessageHasAttachments
MessageIsJunk
MessageIsNotJunk
MessageNumberOfAttachmentsChanged
MessageFontSizeDelta
MessageHighlightTextInTOC
MessageHasBeenViewed
MessageViewedDate
MessageIsServerSearchResult
MessageIsThreadSearchResult
EMMessageDeliveryStatusInProgress
MessageQueuedForDelivery
shouldUseICSRepresentation
MessageConversationIsVIP
MessageConversationIsMuted
MessageChangeReason
MessageIsReadLater
0x%llx (%s
unread
, junk
, not-junk
, deleted
, answered
, forwarded
, redirected
, flagged
, flagColor=%lu
, VIP
, encrypted
, signed
, recent
, draft
, server search result
, thread search result
, priority=%x
, partial
, delivery
, temp UID
, indexed message body
v32@?0@"NSString"8@"NSNumber"16^B24
x-apple-msg-load
Library
folder
paperplane
tray
archivebox
xmark.bin
tray.2
star
flag
flag.fill
paperclip
bell.slash
bell
clock
envelope.open.badge.clock
arrow.up.circle.badge.clock
xmark
calendar
envelope.badge
chevron.forward
chevron.down
square.and.pencil
magnifyingglass
plus
meeting
meeting data
meeting metadata
com.apple.Message
MFSignerInfoErrorKey
SMIME_DAMAGED_SIG
SMIME_UNREADABLE_SIG
There was a problem reading the digital signature for this message.
SMIME_SIG_TITLE
Unable to verify message signature
readstatus
received-date
UseFormatFlowedForWrapping
plain
mixed
@16@?0@8
html
related
inline
-[MFMessageWriter setMessageClassToInstantiate:]
MessageWriter.m
BAD_CHARSET_FORMAT
BAD_CHARSET_TITLE
Invalid Text Encoding
filename
external-body
local-file
access-type
x-unix-mode
octet-stream
remote-image
x-apple-content-length
base64
boundary
signed
name=
binary
8bit
7bit
quoted-printable
MFAccountAutoFetchController
MFAccountLoaderErrorDomain
MailServices
InstantiableMailAccountClasses
AOLAccount
GmailAccount
YahooAccount
SMTPAccount
MFUpdateAccountsInPlaceKey
v16@?0@"<MFActivityConditionBuilder>"8
MFActivityCondition.m
builderBlock
com.apple.mail.MFActivityCondition
v16@?0@"NSNumber"8
@"NSNumber"16@?0@"NSArray"8
v16@?0@"NSError"8
com.apple.frontboard.visibility
v32@?0@"RBSProcessMonitor"8@"RBSProcessHandle"16@"RBSProcessStateUpdate"24
v16@?0@"<RBSProcessMonitorConfiguring>"8
MFAPSManagerDeviceTokenChangedNote
com.apple.mobilemail.dummyTopicToForceServerConnection
com.apple.mobilemail.push.
com.apple.mail.
account-id
com.apple.email.maild.aps
com.apple.message.apsManager
System/Library/PrivateFrameworks/ApplePushService.framework
APSConnection
development
production
MFUseAPSDevelopmentEnvironment
==== MFAPSManager ====
  push service: %@
  watched topics: {%@}
  ignored topics: {%@}
  device token (%@): '%@'
waiting for token
has token
_tokenConditionString
MFAPSManager.m
0 && "unknown token condition"
com.apple.mobileconfig
com.apple.mobileprovision
com.apple.ical.ics
com.apple.ical.vcs
com.apple.iwork
MFAttachmentIsSinglePagePDFKey
<%@: %p> url=%@, path=%@, contentID=%@, mimeType=%@, mimePart=%@, isMailDrop=%d
<%@: %p> contentID=%@, mimeType=%@, isMailDrop=%d
x-uuencode
v24@?0@"NSData"8@"NSError"16
x-attach-maildrop
x-attach-maildrop-image
MFAttachmentIsPlaceholder
MFAttachmentMailDropMetaData
DisableAttachmentFilters
VERSION:1.0
VERSION:2.0
text/calendar
_MFEventUniqueID
_MFMeetingStorePersistentID
_MFICSRepresentation
x-attach-RFC822
message/rfc822
message/delivery-status
x-attach-compose
MFAttachmentFileNameKey
MFAttachmentRemoteImageFileNameKey
MFAttachmentPathKey
MFAttachmentUTTypeKey
application/zip
v16@?0@"UTType"8
MFAttachmentMimetypeKey
MFAttachmentDecodedFileSizeKey
MFAttachmentEncodedFileSizeKey
text/html
text/
_MFAttachmentEncodingKey
v24@?0B8@"NSError"12B20
apple_ak
enc_base_image
enc_model
B24@?0^{__CFString=}8^{CGImageMetadataTag=}16
MFMailAttachmentUploadLimitKey
MFMailAttachmentMessageLimitKey
MFMailAttachmentMailDropThresholdKey
MFMailAttachmentPlaceholderThresholdKey
MFMailAttachmentPlaceholdersAvailableKey
MFMailAttachmentMailDropAvailableKey
MFMailAttachmentMailDropConfiguredKey
MailDropShortExp
mailDrop
AttachmentPlaceholderLowerLimit
com.apple.mail.attachmentComposeManagerAttachmentURLArray
fractionCompleted
v16@?0@"NSDictionary"8
Success
Failed
FetchDataForURL
com.apple.message.MFAttachmentComposeManager
x-attach-compose://%@
MFAttachmentComposeManager.m
mimeType || mimeType.length > 0
MFAttachmentDataProviderErrorDomain
v32@?0Q8Q16Q24
Could not retrieve library data for attachment.
No Data Found
Invalid attachment URL.
Invalid Attachment URL
x-attach
MFLocalizedDescriptionKey
MFErrorTitleKey
Could not find a provider for the given URL.
No Provider Found
x-attach://
MFAttachmentCollectionFilterKey
MFAttachmentAttachmentKey
MFAttachmentPrimaryConsumerKey
MFAttachmentMonitorKey
MFAttachmentSyncLockKey
MFAttachmentInvocationURLKey
MFAttachmentInvocationFilterKey
MFAttachmentContentIDKey
MFMailAttachmentCachedSizesChangedNotification
com.apple.mail.attachmentManagerAttachmentArray
com.apple.message.attachmentManager.imagescaling
Invalid attachment URL.  Too few parts.
v32@?0@"NSURL"8@"NSDictionary"16^B24
Succeeded
-[MFAttachmentManager _fetchDataForAttachment:withProvider:request:syncLock:]
MFAttachmentManager.m
B16@?0@"_MFAttachmentActiveRequest"8
v16@?0@"_MFAttachmentActiveRequest"8
B32@?0@"_MFAttachmentActiveRequest"8Q16^B24
Download Canceled.
Download Canceled
-[MFAttachmentManager attachmentForItemProvider:mimeType:fileName:contentID:context:]
=FA=CA=DE{
fileName
fileSize
mimeType
fileURL
contentID
application/x-apple-placeholder
%@ %lu [%@] @ %@ : %@ [%s]
MailDrop
@"<EFFuture>"16@?0@"NSData"8
AttachmentPlaceholders
EFPropertyKey_data
EFPropertyKey_fileName
EFPropertyKey_mimeType
EFPropertyKey_contentID
/MobileMailAttachments
XXXXXXXXXXXXXXXX
MFAttachmentUtilities.m
Path is too long.
XXXXX.%@
Invalid placeholder
@"MFAttachmentPlaceholder"16@?0^@8
B24@?0@"NSURL"8@"NSError"16
B16@?0@"NSError"8
v16@?0@"NSURL"8
-[MFBaseSyncResponseQueue sequenceIdentifierForItem:]
MFBaseSyncResponseQueue.m
[item isKindOfClass:[NSArray class]]
aliases
emails
canSendFrom
fullName
com.apple.message.icloud.alias-update
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
ETag
p99-
Authorization
If-Modified-Since
If-None-Match
EEE, dd MMM yyyy HH:mm:ss zzz
maild
MFCertificateTrustInfo.m
trust
MFCertificateTrustInfoEMCertificateTrustInformationTransformer.m
certificateTrustInfo
MFCertificateTrustDidChangeNotification
Could not find data for compose attachment.
MFContentErrorDocument.m
mimePart
CANNOT_DECODE_MULTIPART_MESSAGE
This message cannot be displayed because of the way it is formatted. Ask the sender to send it again using a different format or email program.
%@/%@
_MFDAFolderChangeConsumer_Lock
MFDAFolderChangeConsumer.m
%@ should not be called twice
%@ status %ld, error %@, folderID "%@", folderName "%@"
MFDAMailAccountSyncConsumer.m
we failed to find a sync actions consumer! requests: %@
DOWNLOADING_STATUS
Downloading
@sum.size
MFDAMessageContentConsumer.m
sanity check 
 removal
sanity check 
 removal.
191AF69B-0088-47D2-AD66-6C9D08949C46
meeting.ics
-[MFDAMessageStore fetchNumMessages:preservingUID:options:]
MFDAMessageStore.m
[[self library] isKindOfClass:[MFMailMessageLibrary class]]
update consumer queue should be empty at this point.
-[MFDAMessageStore _remoteIDsMatchingSearchText:predicate:limit:offset:filterByDate:handler:]
v24@?0q8@"MFMailMessageStoreSearchResult"16
-[MFDAMessageStore replayFlagChange:forRemoteIDs:error:completed:]
should only have LibraryMessages in %s
-[MFDAMessageStore loadMeetingExternalIDForMessage:]
-[MFDAMessageStore loadMeetingDataForMessage:]
-[MFDAMessageStore loadMeetingMetadataForMessage:]
rfc822
was cancelled
timed out
-[MFDAMessageStore _fetchDataForMimePart:range:isComplete:consumer:]
fetchable messages should have non-zero generationNumer
should only reach here in the error case.
done
@"<NSCopying>"16@?0@"MFDAMessage"8
should not have error and response
should not get streaming responses
multipart/alternative; boundary="%@"
Unknown remote identifier. No valid longID or serverID found
v32@?0@8@16^B24
MFDAStoreDraftConsumer.m
got non-successful status code %ld for response
got a successful response with no server id
%s %d : Caught exception %@
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Message/Message/DataAccess/MFDAStoreDraftConsumer.m
v16@?0@"<ECServerMessageBuilder>"8
MFDATransferActionReplayer.m
Copy is not supported for DA accounts
v32@?0@"NSString"8@"ECTransferMessageActionItem"16^B24
@"MFLibraryMessage"16@?0@"ECTransferMessageActionItem"8
Failures 
Interrupted
Vault
-[MFDbJournal _processJournalFile:connection:]
MFDbJournal.m
buf && "failed to allocate buffer during journal merge"
opening journal file
executing SQL statement from journal (%s)
SELECT url FROM mailboxes WHERE reconcile = '1'
getting mailboxes to be reconciled
UPDATE mailboxes SET reconcile = ? WHERE url = ?
last capabilities
Could not retrieve decrypted data for attachment.
EMMessageDeliveryStatusFatalError
EMMessageDeliveryStatusTransientError
EMMessageDeliveryStatusPermanentError
EMMessageDeliveryStatusCancelled
EMMessageDeliveryStatusConfigurationError
EMMessageDeliveryStatusSucceeded
EMMessageDeliveryStatusQueued
EMMessageDeliveryStatusMailDropIncomplete
status: %@, duration:%f, bytesSent: %d, isWifi: %d
MFMessageErrorDomain
UserFriendlyErrorDescription
RecoveryAttemptorClassName
RequestedWebLoginURLKey
MFAccountsWithErrorsKey
_MFMoreInfo
_MFShortDescription
MFNoErrorLog
@"NSString"16@?0q8
MSG_SERVER_ERROR
The server error encountered was: %@
MFSSLErrorCertificateKey
MFSSLErrorCertificateDigestKey
Account Is Locked Out
Unrecoverable Server Error
User Cancelled
Internal
Unknown Service
Authentication Failed
Server Unavailable
Command Failed
Unsupported Feature
Encryption
Signature
User Confirmation Required
Character Set
No Internet Connection
No Host
Socket Read
Invalid Sender
No Recipients
Invalid Recipient
Sender Mailbox Full
Missing Password
Inaccessible Password
Login Disabled
Account In Use
No Delivery Accounts Configured
Missing Identity
Message Rejected
Message Too Large
Data Blocked By Call
Account Needs Web Login
Multiple Account Errors
Unknown Error Code %ld
content-class
urn:content-classes:message
urn:content-classes:appointment
(UID FLAGS BODY.PEEK[HEADER.FIELDS (content-class)])
 content-class
<%@: %p> min=%lu, max=%lu, remaining=%lu
MFFileArchiveDomain
Input range:%lu:%lu
Input data:%lu
Output data:%lu
MFFileArchiveStatusOK
MFFileArchiveStatusFatal
MFFileArchiveStatusFailed
MFFileArchiveStatusWarn
MFFileArchiveStatusRetry
MFFileArchiveStatusFailedHeaderWrite
MFFileArchiveStatusFailedDataWrite
MFFileArchiveStatusUnknown
Failed to close archive
hdrcharset=UTF-8:zip:compression=deflate
Class:%@
URL:%@
Entries[%@]
B32@?0@8Q16^B24
__MACOSX/
%@ Path:%@ Data:%lu Uncompressed:%lu Range:[%lu:%lu]
com.apple.message.fileCompressionQueueActivity
BODYSTRUCTURE
BODY
.PEEK
TEXT
BODY.PEEK[
B16@?0@"MFIMAPDownload"8
-[MFIMAPFetchResult envelope]
MFIMAPFetchResult.m
Invalid item type %d
-[MFIMAPFetchResult setEnvelope:]
-[MFIMAPFetchResult internalDate]
-[MFIMAPFetchResult setInternalDate:]
-[MFIMAPFetchResult fetchData]
-[MFIMAPFetchResult setFetchData:]
-[MFIMAPFetchResult messageSize]
-[MFIMAPFetchResult setMessageSize:]
-[MFIMAPFetchResult bodyStructure]
-[MFIMAPFetchResult setBodyStructure:]
-[MFIMAPFetchResult startOffset]
-[MFIMAPFetchResult setStartOffset:]
-[MFIMAPFetchResult section]
-[MFIMAPFetchResult setSection:]
-[MFIMAPFetchResult uid]
-[MFIMAPFetchResult setUid:]
-[MFIMAPFetchResult uniqueRemoteId]
-[MFIMAPFetchResult setUniqueRemoteId:]
-[MFIMAPFetchResult flagsArray]
-[MFIMAPFetchResult setFlagsArray:]
-[MFIMAPFetchResult setMessageFlags:]
-[MFIMAPFetchResult setCustomFlagsArray:]
-[MFIMAPFetchResult customFlagsArray]
-[MFIMAPFetchResult appleRemoteLinks]
-[MFIMAPFetchResult setAppleRemoteLinks:]
* INVALID *
ENVELOPE %@
INTERNALDATE
RFC822.SIZE %u
BODYSTRUCTURE %@
BODY[%@]<%lu> {%lu}...
BODY[%@] {%lu}...
UID %u
X-GM-MSGID %llu
FLAGS (%@%@%@)
MODSEQ %d
@"NSString"16@?0@"NSURL"8
X-APPLE-REMOTE-LINKS (%@)
 remoteID=%@
%s%u
MFIMAPMessageDownload
q16@?0@"NSData"8
\Seen
\Answered
\Deleted
\Draft
\Recent
$MDNSent
$SubmitPending
$Submitted
$Forwarded
Forwarded
Redirected
$Junk
$NotJunk
NotJunk
JunkRecorded
$MailFlagBit0
$MailFlagBit1
$MailFlagBit2
%@: Unexpected byte %x at position %lu
MFIMAPOperation.m
Invalid method for type %d
CREATE [%@]
DELETE [%@]
[%@] STORE 
 ** expunged **
 <+FLAGS.SILENT%@>
 <-FLAGS.SILENT%@> 
APPEND [%@] %@ {%u}
COPY [%@] [%@]
-[MFIMAPParseContext setStart:]
MFIMAPParseContext.m
start >= _originalStart && "Should not put the start before the original start."
-[MFIMAPParseContext setEnd:]
end <= _originalEnd && "Should not put the end past the original end."
Error while parsing IMAP response %@: %@
Remaining text: <%@>
Expected number in literal
Expected right curly brace
Expected end-of-line
Read failure
Ignoring extra bytes read during literal
d-MMM-yyyy H:mm:ss ZZZ
Can't parse array contents
RECENT
EXISTS
_IMAPNameQuotaKey
_IMAPCurrentUsageQuotaKey
_IMAPMaxUsageQuotaKey
_IMAPNamespacePrefixKey
_IMAPNamespaceDelimiterKey
_IMAPNamespaceExtensionsKey
CHARSET=
%@ is invalid for %s
%@ is invalid for response type %d
-[MFIMAPResponse fetchResults]
MFIMAPResponse.m
_responseType == IMAPFetchResponse && "Invalid response type for fetchResults"
(%@)
 ==> (%@)
 "%@"
 (%@ %@/%@)
 %@ %c%@
*nil*
("%@" 
 "%@" ("%@")
v32@?0@"NSString"8@"NSArray"16^B24
v16@?0@"NSArray"8
 TAG ("%@") UID ALL (returned %lu uids, lowest = %lu, highest = %lu)
 TAG ("%@") UID MAX %@
 TAG ("%@") UID MIN %@
 TAG ("%@") UID COUNT %@
should not register multiple consumers for the same section: %@
--Not Set--
PREAUTH
FLAGS
QUOTAROOT
--OTHER--
X-UID-FLAGS
ALERT
UNAVAILABLE
EXPIRED
PRIVACYREQUIRED
CONTACTADMIN
NOPERM
INUSE
EXPUNGEISSUED
CORRUPTION
SERVERBUG
LIMIT
OVERQUOTA
ALREADYEXISTS
NONEXISTENT
BADCHARSET
NEWNAME
PARSE
READ-ONLY
READ-WRITE
TRYCREATE
NOMODSEQ
PERMANENTFLAGS
APPENDUID
COPYUID
CLIENTBUG
Expected ]
Expected list or NIL
\Noinferiors
\Noselect
\Marked
\Unmarked
\HasChildren
\HasNoChildren
\NonExistent
Invalid FETCH response
Couldn't parse FETCH: no space character in input
ENVELOPE
X-GM-MSGID
RFC822.SIZE
RFC822.HEADER
RFC822.TEXT
MODSEQ
BODY[
HEADER.
Unable to parse header keys array
Couldn't parse FETCH: no square brace character in input
Expected number
Expected >
Unrecognized FETCH key
Expected a right paren
Couldn't parse FETCH: X-APPLE-REMOTE-LINKS has invalid format
X-APPLE-REMOTE-LINKS contains non-string value
@"NSURL"16@?0@"NSString"8
couldn't parse NAMESPACE: unexpected atom
couldn't parse namespace response: prefix and/or delimiter were not strings
couldn't parse namespace response extensions: invalid key or value
couldn't parse namespace response extensions: not enough values for keys
@"NSArray"8@?0
--EXTENSION--
Incomplete response
Junk at end of response
CachedConnectionLock
%@ - '%@'
DOWNLOADING_STATUS_FORMAT
Downloading %@ of %@
SEEN
FLAGGED
ANSWERED
KEYWORD
%lu:*
v16@?0@"MFIMAPConnection"8
%lu:%lu
LibraryIMAPStoreErrorDomain
v32@?0Q8@"NSIndexSet"16@"NSError"24
IMAP_COMPACT_FAILED
Couldn't make replayer for action %@
com.apple.message.imap (IDLE)
DeletedSearchLimit
compactMessagesToUID
limit
CHARSET
v16@?0@"NSString"8
SUBJECT
fetchArgumentsForCriterion
MFLegacyIMAPMailboxTaskManager.m
0 && "Message ID header criterion must have a MessageRuleIsEqualTo qualifier"
FROM
(OR TO
NSArray *fetchArgumentsForCriterion(MFMessageCriterion *__strong, BOOL)
could not map expression to flag: %@
UNKEYWORD 
KEYWORD 
SINCE
0 && "Need to handle criterion for IMAP headers"
(OR FROM
(OR SUBJECT
(OR CC
Reconciling all messages
Reconciling context based messages
Reconciling inbox messages
@16@?0@"EFQuery"8
@"NSNumber"16@?0@"MFLibraryMessage"8
journaled
Cleaning up messages after reconciliation
@16@?0@"NSPredicate"8
@16@?0@"MailAccount"8
com.apple.message.library.reconciliationcleanup
Reconciling threads
threads
conversation
scope
MFListUnsubscribeMessageGenerator_iOS.m
command
mailtoValues
-[MFLocalActionPersistence_iOS initWithDatabase:gmailLabelPersistence:]
MFLocalActionPersistence_iOS.m
-[MFLocalActionPersistence_iOS initWithDatabase:]
-[MFLocalActionPersistence_iOS labelNameForLabelID:]
com.apple.mobilemail.localActionReplayScheduler
%@ for account: %@
<BR>
Reply-To
Subject
Date
Attachments
Resent-To
Resent-Cc
Resent-From
&nbsp; 
<B>%@:</B> 
<B>%@</B><BR>
%@<BR>
com.apple.message.lockStateMonitor
com.apple.message.lockStateMonitor.notifyq
com.apple.springboard.lockstate
@"NSNumber"16@?0@"EMMailboxObjectID"8
MFMailboxProvider.m
-[MFMailboxProvider test_tearDown]
v16@?0@"<EMMailboxBuilder>"8
com.apple.mobilemail.MailDropDownload
com.apple.mobilemail.MailDropDownloadWIFIOnly
downloadPromise
primaryConsumer
kMFMailDropServiceKey
MainAccount
MailDropDeliveryStateKey
com.apple.largeattachment
mailAttachment
data
contentType
uploadDate
v24@?0@"CKRecordZoneID"8@"NSError"16
v40@?0@"CKRecordID"8@"NSString"16@"CKAsset"24@"NSError"32
filesize
v24@?0@"CKRecord"8d16
v24@?0@"CKRecord"8@"NSError"16
@"EFFuture"16@?0@"CKRecord"8
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v24@?0@"CKRecordZone"8@"NSError"16
Could not get zoneID to create zone.
CREATE INDEX IF NOT EXISTS messages_journaled_conversation_id_date_received_index ON messages(journaled, conversation_id, date_received);
Creating messages_journaled_conversation_id_date_received_index
DROP INDEX IF EXISTS messages_journaled_conversation_id_index;
Dropping messages_journaled_conversation_id_index
DROP TABLE attachments
Dropping attachments
CREATE TABLE attachments (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, message INTEGER NOT NULL REFERENCES messages(ROWID) ON DELETE CASCADE, attachment_id TEXT COLLATE BINARY, name TEXT COLLATE BINARY, UNIQUE(message, attachment_id) ON CONFLICT ABORT);
Creating attachments
CREATE INDEX IF NOT EXISTS attachments_message_attachment_id_index ON attachments(message, attachment_id);
Creating attachments_message_attachment_id_index
CREATE INDEX IF NOT EXISTS attachments_message_name_index ON attachments(message, name);
Creating attachments_message_name_index
CREATE INDEX IF NOT EXISTS searchable_attachments_attachment_index ON searchable_attachments(attachment);
Creating searchable_attachments_attachment_index
CREATE INDEX IF NOT EXISTS searchable_attachments_message_id_index ON searchable_attachments(message_id);
Creating searchable_attachments_message_id_index
ALTER TABLE searchable_message_tombstones RENAME TO searchable_message_tombstones_old;
Renaming searchable_message_tombstones
CREATE TABLE searchable_message_tombstones (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, type INTEGER NOT NULL, identifier TEXT COLLATE BINARY NOT NULL, transaction_id INTEGER, UNIQUE(type, identifier) ON CONFLICT ABORT);
Creating searchable_message_tombstones_new
INSERT INTO searchable_message_tombstones SELECT * FROM searchable_message_tombstones_old;
Copying searchable_message_tombstones to new table
DROP TABLE searchable_message_tombstones_old;
Dropping searchable_message_tombstones_old
CREATE INDEX IF NOT EXISTS searchable_message_tombstones_transaction_id_type_identifier_index ON searchable_message_tombstones(transaction_id, type, identifier);
Creating searchable_message_tombstones_transaction_id_type_identifier_index
CREATE TABLE IF NOT EXISTS mailbox_actions (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, account_identifier TEXT, action_type INTEGER, mailbox_name TEXT);
Creating mailbox_actions table
.OfflineCache/operations
INSERT INTO mailbox_actions (account_identifier, action_type, mailbox_name) VALUES (?, ?, ?)
CREATE TABLE IF NOT EXISTS searchable_messages (message_id INTEGER PRIMARY KEY, message INTEGER REFERENCES messages(ROWID) ON DELETE SET NULL, transaction_id INTEGER NOT NULL, message_body_indexed INTEGER NOT NULL, reindex_type INTEGER NOT NULL);
Creating searchable_messages table
CREATE INDEX IF NOT EXISTS searchable_messages_message_reindex_type_transaction_id_index ON searchable_messages(message, reindex_type, transaction_id);
Creating searchable_messages_message_reindex_type_transaction_id_index
CREATE INDEX IF NOT EXISTS searchable_messages_message_id_reindex_type_index ON searchable_messages(message_id, reindex_type);
Creating searchable_messages_message_id_reindex_type_index
CREATE TABLE IF NOT EXISTS searchable_message_tombstones (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, type INTEGER NOT NULL, identifier TEXT NOT NULL, transaction_id INTEGER, UNIQUE(type, identifier));
Creating searchable_message_tombstones table
CREATE TABLE IF NOT EXISTS attachments (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, message INTEGER NOT NULL REFERENCES messages(ROWID) ON DELETE CASCADE, attachment_id TEXT, name TEXT, UNIQUE(message, attachment_id));
Creating attachments table
CREATE TABLE IF NOT EXISTS searchable_attachments (attachment_id INTEGER PRIMARY KEY, attachment INTEGER REFERENCES attachments(ROWID) ON DELETE SET NULL, message_id INTEGER, transaction_id INTEGER NOT NULL);
Creating searchable_attachments table
DROP TABLE IF EXISTS spotlight_tombstones;
Dropping spotlight_tombstones table
DROP TABLE IF EXISTS spotlight_message_reindex;
Dropping spotlight_message_reindex table
ssms_mem
DETACH DATABASE ssms_mem
Detaching ssms_mem database
date_last_viewed
visible
sequence_identifier
content_index_transaction_id
flag_color
@"NSMutableArray"16@?0@"NSArray"8
@"EFSQLIndexedColumnSchema"16@?0@"NSString"8
attachment_count
to_cc_count
reconcile
position
sync_key
conversation_id_message_id
properties
value
message_data
part
message_data_deleted
message_data_id
pop_uids
date_added
accounts
text_id
spotlight_tombstones
transaction_id
spotlight_message_reindex
MFMailMessageLibraryAdoptSharedSchemaMigrationStep.m
Protected database must be attached
CREATE TABLE IF NOT EXISTS protected.messages (message_id INTEGER PRIMARY KEY, sender, subject, _to, cc, bcc)
Creating protected messages
CREATE TABLE IF NOT EXISTS protected.message_data (message_data_id INTEGER PRIMARY KEY, data)
Creating protected message_data
ALTER TABLE main.messages RENAME TO messages_old
Moving messages table aside
ALTER TABLE mailboxes RENAME TO mailboxes_old
Moving mailboxes table aside
ALTER TABLE conversations RENAME TO conversations_old
Moving conversations table aside
ALTER TABLE conversation_id_message_id RENAME TO conversation_id_message_id_old
Moving conversation_id_message_id table aside
ALTER TABLE properties RENAME TO properties_old
Moving properties table aside
ALTER TABLE main.message_data RENAME TO message_data_old
Moving message_data table aside
ALTER TABLE message_data_deleted RENAME TO message_data_deleted_old
Moving message_data_deleted_old table aside
ALTER TABLE pop_uids RENAME TO pop_uids_old
Moving pop_uids table aside
ALTER TABLE accounts RENAME TO accounts_old
Moving accounts table aside
ALTER TABLE spotlight_tombstones RENAME TO spotlight_tombstones_old
Moving spotlight_tombstones table aside
ALTER TABLE spotlight_message_reindex RENAME TO spotlight_message_reindex_old
Moving spotlight_message_reindex table aside
Unable to create new tables
Unable to create new protected tables
ATTACH DATABASE ':memory:' AS ssms_mem
Unable to create in-memory database
CREATE TABLE ssms_mem.parsed_subjects ( original PRIMARY KEY ON CONFLICT IGNORE, prefix TEXT COLLATE BINARY, unprefixed TEXT COLLATE RTRIM ) WITHOUT ROWID
Creating ssms_mem.parsed_subjects table
CREATE TABLE ssms_mem.summary_id_by_message ( message INTEGER PRIMARY KEY, summary_id INTEGER )
Creating ssms_mem.summary_id_by_message table
CREATE TABLE ssms_mem.parsed_addresses ( fullAddress TEXT NOT NULL PRIMARY KEY ON CONFLICT IGNORE, address TEXT, comment TEXT ) WITHOUT ROWID
Creating ssms_mem.parsed_addresses table
DROP TABLE ssms_mem.parsed_subjects
Dropping ssms_mem.subject_prefixes table
DROP TABLE ssms_mem.parsed_addresses
Dropping ssms_mem.parsed_addresses table
DROP TABLE ssms_mem.summary_id_by_message
Dropping ssms_mem.summary_id_by_message table
INSERT INTO message_references (message, reference, is_originator) SELECT message_id, ifnull(reference, 0), ifnull(is_originator, 0) FROM threads
Populating message_references
INSERT INTO mailboxes (ROWID, url, total_count, unread_count, deleted_count, sequence_identifier, flagged_count, to_cc_count, server_unread_count, last_sync_status_count, most_recent_status_count, reconcile) SELECT ROWID, url, ifnull(total_count, 0), ifnull(unread_count, 0), ifnull(deleted_count, 0), sequence_identifier, ifnull(flagged_count, 0), ifnull(to_cc_count, 0), ifnull(server_unread_count, 0), ifnull(last_sync_status_count, 0), ifnull(most_recent_status_count, 0), ifnull(reconcile, 0) FROM mailboxes_old
Populating mailboxes
INSERT INTO conversations (conversation_id, flags, sync_key) SELECT conversation_id, (ifnull(flags, 0) & ~0x2) | ((ifnull(flags, 0) & 0x2) << 1), sync_key FROM conversations_old 
Populating conversations
INSERT INTO conversation_id_message_id (conversation_id, message_id, date_sent) SELECT conversation_id, message_id, ifnull(date_sent, 0) FROM conversation_id_message_id_old
Populating conversation_id_message_id
INSERT INTO properties (key, value) SELECT key, value FROM properties_old
Populating properties
INSERT INTO main.message_data (ROWID, message_id, part, partial, complete, length) SELECT ROWID, message_id, part, partial, complete, length FROM message_data_old WHERE part != 'summary' 
Populating message_data
INSERT INTO message_data_deleted (message_data_id) SELECT message_data_id FROM message_data_deleted_old
Populating message_data_deleted
INSERT INTO pop_uids (mailbox, uid, date_added, flags, del) SELECT mailbox, uid, date_added, flags, del FROM pop_uids_old
Populating pop_uids
INSERT INTO accounts (ROWID, text_id) SELECT ROWID, text_id FROM accounts_old
Populating accounts
INSERT INTO spotlight_tombstones (ROWID, type, identifier, transaction_id) SELECT ROWID, type, identifier, transaction_id FROM spotlight_tombstones_old
Populating spotlight_tombstones
INSERT INTO spotlight_message_reindex (message_id, type) SELECT message_id, type FROM spotlight_message_reindex_old
Populating spotlight_message_reindex
SELECT DISTINCT subject FROM protected.messages JOIN main.messages_old ON main.messages_old.ROWID = protected.messages.message_id 
INSERT INTO ssms_mem.parsed_subjects (original, prefix, unprefixed) VALUES (?1, ?2, ?3)
INSERT INTO ssms_mem.parsed_subjects (original, prefix, unprefixed) VALUES (?1, NULL, ?1)
Inserting into ssms_mem.parsed_subjects
Populating ssms_mem.parsed_subjects
INSERT OR IGNORE INTO protected.subjects (subject) SELECT unprefixed FROM ssms_mem.parsed_subjects
Populating protected.subjects table
CREATE TABLE ssms_mem.temp_summaries ( message INTEGER PRIMARY KEY, summary TEXT NOT NULL )
Creating ssms_mem.temp_summaries table
INSERT INTO ssms_mem.temp_summaries (message, summary) SELECT main.message_data_old.message_id, protected.message_data.data FROM main.message_data_old JOIN protected.message_data ON protected.message_data.message_data_id = main.message_data_old.ROWID WHERE main.message_data_old.part = 'summary' AND protected.message_data.data IS NOT NULL 
Populating ssms_mem.temp_summaries
INSERT OR IGNORE INTO protected.summaries (summary) SELECT summary FROM ssms_mem.temp_summaries 
Populating protected.summaries
INSERT INTO ssms_mem.summary_id_by_message (message, summary_id) SELECT ssms_mem.temp_summaries.message, protected.summaries.ROWID FROM ssms_mem.temp_summaries JOIN protected.summaries ON protected.summaries.summary = ssms_mem.temp_summaries.summary 
Populating ssms_mem.summary_id_by_message
DROP TABLE ssms_mem.temp_summaries
Dropping ssms_mem.temp_summaries table
rawAddress
error creating user function rawAddress
error creating user function displayName
CREATE TABLE ssms_mem.temp_recipients ( message INTEGER NOT NULL, fullAddress TEXT NOT NULL, type INTEGER NOT NULL, position INTEGER NOT NULL )
Creating ssms_mem.temp_recipients table
INSERT INTO ssms_mem.temp_recipients (message, fullAddress, type, position) VALUES (?, ?, ?, ?)
Inserting recipient into ssms_mem.temp_recipients
B28@?0i8r*12Q20
B32@?0q8r*16Q24
SELECT protected.messages.message_id, protected.messages._to, protected.messages.cc, protected.messages.bcc FROM protected.messages JOIN main.messages_old ON main.messages_old.ROWID = protected.messages.message_id 
Populating ssms_mem.temp_recipients
INSERT INTO ssms_mem.parsed_addresses (fullAddress) SELECT sender FROM protected.messages JOIN main.messages_old ON main.messages_old.ROWID = protected.messages.message_id WHERE sender IS NOT NULL UNION ALL SELECT fullAddress FROM ssms_mem.temp_recipients WHERE fullAddress IS NOT NULL 
Populating ssms_mem.parsed_addresses
UPDATE ssms_mem.parsed_addresses SET address = rawAddress(fullAddress), comment = displayName(fullAddress)
Parsing addresses in ssms_mem.parsed_addresses
INSERT OR IGNORE INTO protected.addresses (address, comment) SELECT address, comment FROM ssms_mem.parsed_addresses
Populating protected.addresses
INSERT INTO main.recipients (message, address, type, position) SELECT ssms_mem.temp_recipients.message, protected.addresses.ROWID, ssms_mem.temp_recipients.type, ssms_mem.temp_recipients.position FROM ssms_mem.temp_recipients JOIN ssms_mem.parsed_addresses ON ssms_mem.parsed_addresses.fullAddress = ssms_mem.temp_recipients.fullAddress JOIN protected.addresses ON protected.addresses.address = ssms_mem.parsed_addresses.address AND protected.addresses.comment = ssms_mem.parsed_addresses.comment 
Populating main.recipients
DROP TABLE ssms_mem.temp_recipients
Dropping ssms_mem.temp_recipients table
error deleting user function rawAddress
error deleting user function displayName
DELETE FROM protected.messages WHERE ROWID IN (SELECT message_id FROM messages_deleted)
Deleting rows from protected.messages
messages_old
messages_old.ROWID
ifnull(messages_old.message_id, 0)
protected.addresses.ROWID
ssms_mem.parsed_subjects.prefix
protected.subjects.ROWID
ssms_mem.summary_id_by_message.summary_id
ifnull(flags, 0)
ifnull(read, 0)
ifnull(flagged, 0)
ifnull(deleted, 0)
ifnull(size, 0)
ifnull(conversation_id, 0)
CASE WHEN messages_old.flags & 16 THEN ((messages_old.flags & (7 << 41)) >> 41) ELSE NULL END
INSERT INTO main.messages (%@) SELECT %@ FROM messages_old JOIN protected.messages ON messages_old.ROWID = protected.messages.message_id JOIN ssms_mem.parsed_subjects ON ssms_mem.parsed_subjects.original = ifnull(protected.messages.subject, '') JOIN protected.subjects ON protected.subjects.subject = ssms_mem.parsed_subjects.unprefixed LEFT OUTER JOIN ssms_mem.parsed_addresses ON ssms_mem.parsed_addresses.fullAddress = protected.messages.sender LEFT OUTER JOIN protected.addresses ON protected.addresses.address = ssms_mem.parsed_addresses.address AND protected.addresses.comment = ssms_mem.parsed_addresses.comment LEFT OUTER JOIN ssms_mem.summary_id_by_message ON ssms_mem.summary_id_by_message.message = messages_old.ROWID 
Populating messages
Unable to create new indexes
DROP TABLE IF EXISTS messages_old
Dropping old messages table
DROP TABLE IF EXISTS mailboxes_old
Dropping old mailboxes table
DROP TABLE IF EXISTS threads
Dropping threads table
DROP TABLE IF EXISTS conversations_old
Dropping old conversations table
DROP TABLE IF EXISTS conversation_id_message_id_old
Dropping old conversation_id_message_id table
DROP TABLE IF EXISTS properties_old
Dropping old properties table
DROP TABLE IF EXISTS message_data_old
Dropping old message_data table
DROP TABLE IF EXISTS message_data_deleted_old
Dropping old message_data_deleted table
DROP TABLE IF EXISTS pop_uids_old
Dropping old pop_uids table
DROP TABLE IF EXISTS accounts_old
Dropping old accounts table
DROP TABLE IF EXISTS spotlight_tombstones_old
DROP TABLE IF EXISTS spotlight_message_reindex_old
DROP TABLE IF EXISTS messages_deleted
Dropping messages_deleted table
DROP TABLE IF EXISTS protected.messages
Dropping protected.messages
DROP TABLE IF EXISTS protected.message_data
Dropping protected.message_data
Creating new pop_uids table
INSERT OR REPLACE INTO pop_uids (mailbox, uid, date_added, flags, del) SELECT mailbox, uid, date_added, flags, del FROM pop_uids_old ORDER BY ROWID ASC 
DROP TABLE pop_uids_old
Dropping pop_uids_old
Creating pop_uids indexes
CREATE TABLE message_global_data (ROWID INTEGER PRIMARY KEY AUTOINCREMENT,
message_id INTEGER,
UNIQUE(message_id) ON CONFLICT ABORT)
Creating message_global_data
INSERT INTO message_global_data (message_id) SELECT DISTINCT message_id FROM messages
Populating message_global_data table
DROP TRIGGER IF EXISTS after_delete_message;
Dropping trigger
ALTER TABLE messages RENAME TO messages_old
Adding new messages table
INSERT INTO messages (ROWID, message_id, global_message_id, remote_id, document_id, sender, subject_prefix, subject, summary, date_sent, date_received, mailbox, remote_mailbox, flags, read, flagged, deleted, size, conversation_id, date_last_viewed, original_mailbox, visible, sender_vip, encoding, content_type, sequence_identifier, external_id, unique_id, content_index_transaction_id, list_id_hash, journaled, flag_color, searchable_message) SELECT messages_old.ROWID, messages_old.message_id, message_global_data.ROWID, remote_id, document_id, sender, subject_prefix, subject, summary, date_sent, date_received, mailbox, remote_mailbox, flags, read, flagged, deleted, size, conversation_id, date_last_viewed, original_mailbox, visible, sender_vip, encoding, content_type, sequence_identifier, external_id, unique_id, content_index_transaction_id, list_id_hash, journaled, flag_color, searchable_message FROM messages_old JOIN message_global_data ON messages_old.message_id = message_global_data.message_id
Copying messages to new table
DROP TABLE messages_old
Adding trigger
INSERT INTO properties  (key, value) VALUES ("NeedToMigrateFiles",1)
Setting need to upgrade property
CREATE TABLE messages (ROWID INTEGER PRIMARY KEY AUTOINCREMENT,
message_id INTEGER NOT NULL DEFAULT 0,
global_message_id INTEGER NOT NULL REFERENCES message_global_data(ROWID) ON DELETE CASCADE,
remote_id INTEGER,
document_id TEXT COLLATE BINARY,
sender INTEGER,
subject_prefix TEXT COLLATE BINARY,
subject INTEGER NOT NULL,
summary INTEGER,
date_sent INTEGER,
date_received INTEGER,
mailbox INTEGER NOT NULL,
remote_mailbox INTEGER,
flags INTEGER NOT NULL DEFAULT 0,
read INTEGER NOT NULL DEFAULT 0,
flagged INTEGER NOT NULL DEFAULT 0,
deleted INTEGER NOT NULL DEFAULT 0,
size INTEGER NOT NULL DEFAULT 0,
conversation_id INTEGER NOT NULL DEFAULT 0,
date_last_viewed INTEGER,
original_mailbox INTEGER,
visible INTEGER,
sender_vip INTEGER,
encoding INTEGER,
content_type INTEGER,
sequence_identifier INTEGER DEFAULT 0,
external_id TEXT COLLATE BINARY,
unique_id INTEGER,
content_index_transaction_id INTEGER,
list_id_hash INTEGER,
journaled INTEGER,
flag_color INTEGER,
searchable_message INTEGER REFERENCES searchable_messages(message_id) ON DELETE SET NULL);
CREATE INDEX messages_message_id_mailbox_index ON messages(message_id, mailbox);
CREATE INDEX messages_global_message_id_mailbox_index ON messages(global_message_id, mailbox);
CREATE INDEX messages_document_id_index ON messages(document_id);
CREATE INDEX messages_sender_index ON messages(sender);
CREATE INDEX messages_subject_index ON messages(subject);
CREATE INDEX messages_summary_index ON messages(summary);
CREATE INDEX messages_date_received_index ON messages(date_received);
CREATE INDEX messages_mailbox_date_received_index ON messages(mailbox, date_received);
CREATE INDEX messages_mailbox_conversation_id_date_received_deleted_index ON messages(mailbox, conversation_id, date_received, deleted);
CREATE INDEX messages_remote_mailbox_remote_id_index ON messages(remote_mailbox, remote_id);
CREATE INDEX messages_read_index ON messages(read);
CREATE INDEX messages_flagged_index ON messages(flagged);
CREATE INDEX messages_deleted_date_received_index ON messages(deleted, date_received);
CREATE INDEX messages_conversation_id_mailbox_read_date_received_deleted_index ON messages(conversation_id, mailbox, read, date_received, deleted);
CREATE INDEX messages_date_last_viewed_index ON messages(date_last_viewed);
CREATE INDEX messages_conversation_id_mailbox_flagged_deleted_index ON messages(conversation_id, mailbox, flagged, deleted);
CREATE INDEX messages_conversation_id_mailbox_deleted_index ON messages(conversation_id, mailbox, deleted);
CREATE INDEX messages_conversation_id_mailbox_sender_date_received_deleted_index ON messages(conversation_id, mailbox, sender, date_received, deleted);
CREATE INDEX messages_conversation_id_mailbox_flags_deleted_index ON messages(conversation_id, mailbox, flags, deleted);
CREATE INDEX messages_mailbox_deleted_journaled_read_sender_vip_flags_conversation_id_date_sent_message_id_date_received_rowid_index ON messages(mailbox, deleted, journaled, read, sender_vip, flags, conversation_id, date_sent, message_id, date_received DESC, ROWID DESC);
CREATE INDEX messages_mailbox_visible_date_received_rowid_index ON messages(mailbox, visible, date_received DESC, ROWID DESC);
CREATE INDEX messages_content_index_transaction_id_deleted_date_received_rowid_index ON messages(content_index_transaction_id, deleted, date_received DESC, ROWID);
CREATE INDEX messages_mailbox_remote_id_sequence_identifier_index ON messages(mailbox, remote_id, sequence_identifier);
CREATE INDEX messages_mailbox_content_index_transaction_id_flags_date_received_index ON messages(mailbox, content_index_transaction_id, flags, date_received ASC);
CREATE INDEX messages_list_id_hash_index ON messages(list_id_hash);
CREATE INDEX messages_journaled_conversation_id_date_received_index ON messages(journaled, conversation_id, date_received);
CREATE INDEX messages_mailbox_conversation_id_flag_color_date_received_journaled_index ON messages(mailbox, conversation_id, flag_color, date_received, journaled);
CREATE INDEX messages_message_id_deleted_journaled_read_mailbox_index ON messages(message_id, deleted, journaled, read, mailbox);
CREATE INDEX messages_deleted_conversation_id_date_received_index ON messages(deleted, conversation_id, date_received);
CREATE INDEX messages_deleted_journaled_mailbox_index ON messages(deleted, journaled, mailbox);
CREATE INDEX messages_deleted_mailbox_date_received_index ON messages(deleted, mailbox, date_received);
CREATE INDEX messages_deleted_sender_vip_date_received_index ON messages(deleted, sender_vip, date_received);
CREATE INDEX messages_deleted_read_journaled_mailbox_conversation_id_sender_vip_index ON messages(deleted, read, journaled, mailbox, conversation_id, sender_vip);
CREATE INDEX messages_flagged_deleted_journaled_mailbox_index ON messages(flagged, deleted, journaled, mailbox);
CREATE INDEX messages_conversation_id_read_deleted_journaled_index ON messages(conversation_id, read, deleted, journaled);
CREATE INDEX messages_sender_vip_deleted_journaled_read_message_id_index ON messages(sender_vip, deleted, journaled, read, message_id) WHERE (sender_vip = 1 AND journaled = 0 AND deleted = 0 AND read = 0);
CREATE INDEX messages_date_received_deleted0_journaled0_read0_index ON messages(date_received) WHERE (deleted = 0 AND journaled = 0 AND read = 0);
CREATE INDEX messages_mailbox_date_received_deleted0_journaled0_read0_index ON messages(mailbox, date_received) WHERE (deleted = 0 AND journaled = 0 AND read = 0);
CREATE INDEX messages_journaled_deleted_date_received_index ON messages(journaled, deleted, date_received) WHERE (journaled = 1 AND deleted = 0);
CREATE INDEX messages_searchable_message_deleted_index ON messages(searchable_message, deleted);
CREATE INDEX messages_mailbox_deleted_date_received_index ON messages(mailbox, deleted, date_received) WHERE journaled = 0;
Adding index
CREATE TRIGGER after_delete_message AFTER DELETE ON messages
    BEGIN
        DELETE FROM message_data WHERE message_id = OLD.ROWID;
    END;
Creating server messages and local actions tables
DROP TABLE offline_cache_operations
Dropping offline_cache_operations
DROP TABLE offline_cache_replay_data
Dropping offline_cache_replay_data
messages.mailbox
messages.remote_id
messages.flags & 1
(messages.flags & (1 << 1)) != 0
replied
(messages.flags & (1 << 2)) != 0
(messages.flags & (1 << 4)) != 0
draft
(messages.flags & (1 << 6)) != 0
forwarded
(messages.flags & (1 << 8)) != 0
redirected
(messages.flags & (1 << 9)) != 0
junk_level_set_by_user
junk_level
(((messages.flags & (1 << 21)) != 0) AND ((messages.flags & (1 << 31)) == 0)) | ((((messages.flags & (1 << 21)) == 0) AND ((messages.flags & (1 << 31)) != 0)) << 1)
((messages.flags & (1 << 32)) == 0) AND (mailboxes.url LIKE 'imap://%%')
INSERT OR IGNORE INTO server_messages (%@) SELECT %@ FROM messages JOIN mailboxes ON messages.mailbox = mailboxes.ROWID WHERE %@
Creating server_messages from messages
SELECT operation_data FROM offline_cache_operations WHERE completed = '0' ORDER BY rowid ASC
getting offline cache operations
CREATE TABLE IF NOT EXISTS server_messages (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, message INTEGER REFERENCES messages(ROWID) ON DELETE SET NULL, mailbox INTEGER NOT NULL REFERENCES mailboxes(ROWID) ON DELETE CASCADE, sequence_identifier INTEGER, read INTEGER NOT NULL, deleted INTEGER NOT NULL, replied INTEGER NOT NULL, flagged INTEGER NOT NULL, draft INTEGER NOT NULL, forwarded INTEGER NOT NULL, redirected INTEGER NOT NULL, junk_level_set_by_user INTEGER NOT NULL, junk_level INTEGER NOT NULL, flag_color INTEGER NOT NULL, remote_id INTEGER NOT NULL, UNIQUE(mailbox, remote_id) ON CONFLICT ABORT);
CREATE INDEX IF NOT EXISTS server_messages_message_index ON server_messages(message);
CREATE TABLE IF NOT EXISTS server_labels (server_message INTEGER REFERENCES server_messages(ROWID) ON DELETE CASCADE, label INTEGER REFERENCES mailboxes(ROWID) ON DELETE CASCADE, PRIMARY KEY(server_message, label)) WITHOUT ROWID;
CREATE TABLE IF NOT EXISTS local_message_actions (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, mailbox INTEGER REFERENCES mailboxes(ROWID) ON DELETE CASCADE, source_mailbox INTEGER REFERENCES mailboxes(ROWID) ON DELETE CASCADE, destination_mailbox INTEGER REFERENCES mailboxes(ROWID) ON DELETE CASCADE, action_type INTEGER, user_initiated INTEGER);
CREATE INDEX IF NOT EXISTS local_message_actions_mailbox_rowid_index ON local_message_actions(mailbox, ROWID);
CREATE TABLE IF NOT EXISTS action_messages (ROWID INTEGER PRIMARY KEY, action INTEGER REFERENCES local_message_actions(ROWID) ON DELETE CASCADE, action_phase INTEGER, message INTEGER REFERENCES messages(ROWID) ON DELETE SET NULL, remote_id INTEGER, destination_message INTEGER REFERENCES messages(ROWID) ON DELETE CASCADE);
CREATE INDEX IF NOT EXISTS action_messages_action_index ON action_messages(action);
CREATE INDEX IF NOT EXISTS action_messages_message_index ON action_messages(message);
CREATE INDEX IF NOT EXISTS action_messages_destination_message_index ON action_messages(destination_message);
CREATE TABLE IF NOT EXISTS action_labels (ROWID INTEGER PRIMARY KEY, action INTEGER REFERENCES local_message_actions(ROWID) ON DELETE CASCADE, do_add INTEGER, label INTEGER REFERENCES mailboxes(ROWID) ON DELETE CASCADE);
CREATE INDEX IF NOT EXISTS action_labels_action_index ON action_labels(action);
CREATE INDEX IF NOT EXISTS action_labels_label_index ON action_labels(label);
CREATE TABLE IF NOT EXISTS action_flags (ROWID INTEGER PRIMARY KEY, action INTEGER REFERENCES local_message_actions(ROWID) ON DELETE CASCADE, flag_type INTEGER, flag_value INTEGER);
CREATE INDEX IF NOT EXISTS action_flags_action_index ON action_flags(action);
SELECT ROWID, mailbox FROM messages WHERE remote_id = ? LIMIT 1
Fetching database ID and mailbox for message
-[_MFDADeferredSetFlagsOperation initWithCoder:]
MFMailMessageLibraryLocalActionsTablesMigrationStep.m
[aDecoder allowsKeyedCoding] && "aDecoder must allow keyed coding"
OnFlags
OffFlags
MessageID
-[_MFDADeferredSetFlagsOperation encodeWithCoder:]
[aCoder allowsKeyedCoding] && "aCoder must allow keyed coding"
INSERT INTO local_message_actions (action_type, mailbox, source_mailbox, destination_mailbox, user_initiated) VALUES (3, ?, NULL, NULL, 0)
Inserting flag change action
INSERT INTO action_flags (action, flag_type, flag_value) VALUES (?, 1, ?)
Inserting read flag change
INSERT INTO action_flags (action, flag_type, flag_value) VALUES (?, 4, ?)
Inserting flagged flag change
INSERT INTO action_messages (action, message, remote_id, destination_message, action_phase) VALUES (?, ?, ?, NULL, 0)
Inserting message for flag change
%@ message-id "%@", on-flags %llu, off-flags %llu
-[_MFDADeferredDeleteMessageOperation initWithCoder:]
-[_MFDADeferredDeleteMessageOperation encodeWithCoder:]
INSERT INTO local_message_actions (action_type, mailbox, source_mailbox, destination_mailbox, user_initiated) VALUES (5, ?, ?, NULL, 0)
Inserting delete action
INSERT INTO action_messages (action, message, remote_id, destination_message, action_phase) VALUES (?, ?, ?, NULL, 4)
Inserting message for delete
%@ message-id "%@"
-[MFDADeferredMessageMoveOperation initWithCoder:]
SourceMailbox
DestinationMailbox
SourceRemoteIDs
OriginalFlags
TemporaryIDs
-[MFDADeferredMessageMoveOperation encodeWithCoder:]
SELECT messages.ROWID, messages.mailbox, mailboxes.url FROM messages JOIN mailboxes ON messages.mailbox = mailboxes.ROWID WHERE remote_id IN (%@)
ef_quotedSQLEscapedString
Selecting messages with temporary remote IDs
SELECT ROWID FROM mailboxes WHERE URL = ? LIMIT 1
Selecting source mailbox
INSERT INTO local_message_actions (action_type, mailbox, source_mailbox, destination_mailbox, user_initiated) VALUES (6, ?, ?, ?, 0)
Inserting move action
INSERT INTO action_messages (action, message, remote_id, destination_message, action_phase) VALUES (?, NULL, ?, ?, 3)
Inserting message for move
v32@?0@"NSNumber"8Q16^B24
%@ source "%@", destination "%@", %lu messages
-[MFDADeferredStoreDraftOperation initWithCoder:]
-[MFDADeferredStoreDraftOperation encodeWithCoder:]
SELECT ROWID, mailbox FROM messages JOIN WHERE message_id = ? LIMIT 1
Selecting message for append
INSERT INTO local_message_actions (action_type, mailbox, source_mailbox, destination_mailbox, user_initiated) VALUES (2, ?, NULL, ?, 0)
Inserting append action
INSERT INTO action_messages (action, message, remote_id, destination_message, action_phase) VALUES (?, NULL, NULL, ?, 3)
Inserting message for append
-[_MFDADeferredNewMailboxOperation initWithCoder:]
ParentFolderID
TemporaryFolderID
-[_MFDADeferredNewMailboxOperation encodeWithCoder:]
%@ display-name "%@", parent-folder-id "%@", temporary-folder-id "%@"
-[_MFDADeferredDeleteMailboxOperation initWithCoder:]
-[_MFDADeferredDeleteMailboxOperation encodeWithCoder:]
%@ folder-id "%@"
-[_MFDADeferredModifyMailboxOperation initWithCoder:]
NewParentFolderID
NewDisplayName
-[_MFDADeferredModifyMailboxOperation encodeWithCoder:]
%@ folder-id "%@", new-parent-folder-id "%@", new-display-name "%@"
-[_MFDADeferredSelectMailboxOperation initWithCoder:]
-[_MFDADeferredSelectMailboxOperation encodeWithCoder:]
SELECT url FROM mailboxes WHERE %@
MobileMailMigratorNeedsSpotlightReIndexKey
com.apple.message.MFMailMessageLibraryMigrator.contentProtectionQueue
PRAGMA foreign_keys = OFF;
disabling foreign keys
PRAGMA foreign_keys = ON;
v16@?0@"EDPersistenceDatabaseConnection"8
TellurideVersion
SundanceConversationHashesMustBeNonZeroVersion
SundanceCreateMessageInfosCoveringIndexVersion
SundanceMessagesHaveVIPSenderFlag
InnsbruckMessagesHaveUniqueRemoteID
InnsbruckMessagesHaveContentTransactionID
InnsbruckBetterMessageConversationIndexes
InnsbruckCondStoreSequenceIdentifierIndex
InnsbruckFlaggedAndAttachmentCounts
InnsbruckToCcCounts
InnsbruckServerOnlyUnreadCounts
SochiFixFlaggedCount
SochiFixFlaggedCount2
OkemoConversationFlags
MonarchAddSuggestionsProcessingStateColumn
MonarchResetSuggestionsProcessingStateColumn
MonarchDuplicatesSuppression
MonarchRestoreTriggers
MonarchUpdateMessageInfoCoveringIndex
MonarchUnreadCountDuplicateSuppression
MonarchUnreadCountIgnoreSearchResult
MonarchUnreadCountPreventNegativeValue
MonarchFasterSpotlightIndexing
MonarchOldestNonIndexedMessagesLookup
MonarchForceSpotlightReindex
BoulderAddSpotlightTombstones
BoulderForceSpotlightReindex
BoulderForceSpotlightReindex2
BoulderForceSpotlightReindex3
BoulderZeroOutPOPServerUnreadCount
BoulderForceSpotlightReindex4
WhitetailAddListIDColumn
WhitetailRemoveDecluttering
WhitetailForceSpotlightReindex
WhitetailForceSpotlightReindex2
TigrisForceSpotlightReindexConversationID
TigrisAddUnseenCountColumn
TigrisAddReconcileColumn
TigrisAddSpotlightReindexTable
TigrisAddMBLQueueTable
TigrisForceSpotlightReindexSupportDND
TigrisRemoveMBDLQueueTable
TigrisAddUnmergedColumn
TigrisResetStatusCountsForDrafts
TigrisSetSpotlightDataTypes
TigrisUpgradePadding70
TigrisUpgradePadding71
TigrisUpgradePadding72
LastDeprecatedNumberingScheme
EmetBaseline
EmetSetSpotlightDataOwner
PeaceBaseline
PeaceAddMessageJournaledIndex
PeaceAddMessageJournaledConversationIndex
YukonBaseline
YukonAddDocumentIDColumn
YukonUpdateMuteThreadFlagBit
YukonAddMessageJournaledIndex
YukonAddLocalMessageActionsTables
YukonMessageInteractionMetricsColumns
YukonAddCategoryColumnsNoLongerUsed
YukonFixBrokenUpgradesFromPeace
YukonAddCategoryColumns
YukonRemoveOfflineCacheTables
YukonModifyColumnDefinitions
YukonAdoptSharedSchema
YukonAddProtectedDataIndexes
YukonAddInteractionLogTable
YukonAddReadLaterTable
Renaming threads to message_references
YukonRenameThreadsTable
Creating messages deleted date received index
YukonAddMessageDeletedDateReceivedIndex
Creating searchable index tables
YukonAddSearchableIndexTables
YukonAddJournaledConversationIDDateReceivedIndex
Adding thread tables
YukonAddThreadTables
YukonAddThreadsScopeConverationDateIndex
YukonMigrateEmailUserDefaults
Setting conflict resolution for primary key of thread_senders and thread_recipients
YukonSetConflictResolutionForThreadSendersAndRecipients
Reset sequence_identifier for messages
YukonResetSequenceIdentifierForFlagColors
YukonAddThreadSendersAndRecipientsIndexes
Adding flag support to threads
YukonAddThreadFlagColorsColumns
YukonAddThreadJournaledColumn
YukonAddMessageIndexesForThreadQueries
YukonAddMessageIDIndex
YukonSenderVIPCountQueryIndex
YukonRemoveCategorySchema
YukonModifyDeletedMailboxIndex
YukonAddJournaledUndeletedIndex
YukonCachedMetadataTableUnused1
YukonRemoveReadLaterSchema
YukonRemoveReadLaterSchemaDotsubmission
YukonCachedMetadataTableUnused2
YukonAddTableMetadataTable
YukonCachedMetadataTable
YukonFixPopUidsUniquenessConstraint
YukonAddThreadJournaledDateIndex
YukonMigrateBlockedSenderEnabledToActionEnum
YukonAddUnreadCountIndexes
YukonAddAppBadgeCountIndexes
YukonResetThreadScopes
YukonResetSummary
YukonAddSenderVIPAndConversationIndexes
YukonResetThreadScopes2
YukonAddFilterIndexesAndRemoveTriggers
Removing deleted column from threads
YukonResetThreadScopes3
YukonCDEBaseline
Adding searchable_message column to messages
YukonCDEAddMessagesSearchableMessageColumn
YukonCDEModifyMessagesSearchableMessageIndex
YukonCDEAddInMemoryThreadIndex
AzulBaseline
Adding global data table
AzulAddMessageGlobalData
AzulResetMessageMetadata
Adding remote_content_links table
AzulAddRemoteContentLinksTable
AzulRecreateMessageIndices
AzulSetUseLegacyMessageIDHashFormat
AzulReindexMessagesMailMessageID
AzulRemoveRemoteContentLinksTable
Adding searchable_messages index
AzulUpdateSearchableMessagesIndex
Updating globalMessageID index
AzulUpdateGlobalMessageIDIndex
SkyAddRemoteContentLinksTable
SkyMigrateRemoteContentDefault
SkyBogusStep
SkyBogusStep2
Adding message_attachments table and update attachment table
SkyAddMessageAttachmentsAndUpdateAttachmentsTable
SkyBIndexSpotlightWithGlobalMessageID
Adding read_later table
SydneyAddReadLaterTable
Adding unsubscribe_type column
SydneyAddUnsubscribeFlags
Adding send_later table
SydneyAddSendLaterTable
SydneyAddDataDetectionTable
SydneyAddMailboxActionsTable
Adding searchable data detection table
SydneyAddSearchableDataDetectionTable
Adding brand_indicator column to messages table
SydneyAddBrandIndicatorTable
SydneyReindexSenderAttachmentItems
Adding follow_up_date column to message_global_data table
SydneyAddMessagesFollowUpColumnUpgradeStep
SydneyAddSendersTableUpgradeStep
Adding senders and sender_addresses tables
SydneyRepopulateSendersTableUpgradeStep
Re-adding brand_indicators table
SydneyReAddBrandIndicatorsTableUpgradeStep
SydneyRemoveIncompatibleBrandIndicatorsIndexUpgradeStep
SydneyAddMailboxRenameActionStep
Adding rebuild table
SydneyAddRebuildTableUpgradeStep
SydneyTriggerSpotlightReIndexUpgradeStep
SydneyAddDisplayDateColumnUpgradeStep
SydneyAddRichLinkTable
Adding rich links table
SydneyAddSearchableRichLinkTable
Populating senders and sender_addresses tables
SydneyRepopulateSendersTableUpgradeStep2
SydneyAddSearchableFlagColorsUpgradeStep
SydneyAddSearchableMailAttachmentTypeUpgradeStep
SydneyCleanUpLocalMboxCacheUpgradeStep
SydneyAddThreadsDisplayDateColumn
SydneySetThreadScopePredicateFilter
SydneyAddFollowUpJsonStringForModelEvaluationForSuggestionsColumnUpgradeStep
PRAGMA foreign_key_check
Checking foreign keys
_MFTTRUserPromptLastResponseUserDefaultsKey
_MFTTRUserPromptLastResponseVersionUserDefaultsKey
SELECT value FROM properties WHERE key = 'version'
INSERT OR REPLACE INTO properties (key, value) values ('version', ?)
setting library version
preparing library version insert statement
performing statements from schema definition
triggers.sql
performing statements from file "triggers.sql"
PRAGMA page_size = 4096;
setting page_size
setting auto_vacuum
PRAGMA journal_mode=WAL
setting journal mode
PRAGMA auto_vacuum=2
SELECT rowid FROM messages WHERE conversation_id = 0 or conversation_id is NULL
gathering library ids of messages without conversation hashes
UPDATE messages SET conversation_id = ?, content_index_transaction_id = NULL WHERE rowid = ?
updating messages with new conversation hashes
DROP INDEX message_deleted_index
dropping message deleted index
ALTER TABLE messages ADD COLUMN sender_vip;
adding sender_vip column
ALTER TABLE messages ADD COLUMN unique_id;
adding unique_id column
ALTER TABLE messages ADD COLUMN content_index_transaction_id INTEGER;
adding content_index_transaction_id column
CREATE INDEX message_content_index_transaction_id_index ON messages(content_index_transaction_id);
adding content_index_transaction_id index
DROP INDEX IF EXISTS message_conversation_id_index;
CREATE INDEX message_conversation_id_index ON messages(conversation_id, mailbox, read, date_received);
DROP INDEX IF EXISTS message_oldest_conversation_index;
CREATE INDEX message_oldest_conversation_index on messages(mailbox, conversation_id, date_received);
replacing conversation indexes
DROP INDEX IF EXISTS message_sequence_identifier_index;
CREATE INDEX message_sequence_identifier_index ON messages(mailbox, remote_id, sequence_identifier);
adding sequence identifier index
ALTER TABLE mailboxes ADD COLUMN flagged_count INTEGER DEFAULT 0; ALTER TABLE mailboxes ADD COLUMN attachment_count INTEGER DEFAULT 0;
altering mailboxes table
update mailboxes set flagged_count = (select count(*) from messages where mailbox = mailboxes.rowid AND flags&16 > 0);
updating flagged_count
update mailboxes set attachment_count = (select count(*) from messages where mailbox = mailboxes.rowid AND (((flags&(63<<10))>>10) BETWEEN 1 AND 62) AND flags&1 = 0);
updating attachment_count
ALTER TABLE mailboxes ADD COLUMN to_cc_count INTEGER DEFAULT 0;
INSERT OR REPLACE INTO properties (key, value) VALUES ('MaxRowIdForMigrationToVersion31', (SELECT MAX(rowid) FROM messages));
adding maxrowid property
ALTER TABLE mailboxes ADD COLUMN server_unread_count INTEGER DEFAULT 0;
UPDATE mailboxes SET flagged_count = (select count(*) FROM messages WHERE mailbox = mailboxes.rowid AND flags&16 > 0 AND flags&2 == 0);
CREATE TABLE conversations (conversation_id INTEGER PRIMARY KEY, flags INTEGER DEFAULT 0, sync_key TEXT);
CREATE TABLE conversation_id_message_id (conversation_id INTEGER, message_id INTEGER, date_sent INTEGER DEFAULT 0, UNIQUE (conversation_id, message_id), FOREIGN KEY (conversation_id) REFERENCES conversations(conversation_id) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE INDEX conversation_id_message_id_index ON conversation_id_message_id(conversation_id, message_id); CREATE INDEX message_id_conversation_id_index ON conversation_id_message_id(message_id, conversation_id);
INSERT INTO conversations (conversation_id) SELECT DISTINCT(conversation_id) FROM messages;
INSERT OR IGNORE INTO conversation_id_message_id (conversation_id,message_id,date_sent) SELECT conversation_id, message_id, date_sent FROM messages;
INSERT OR IGNORE INTO conversation_id_message_id (conversation_id,message_id) SELECT messages.conversation_id, threads.reference FROM messages, threads WHERE messages.rowid = threads.message_id;
creating conversations and conversation_id_message_id tables
DROP INDEX IF EXISTS message_infos_index;
CREATE INDEX message_infos_index ON messages(mailbox, deleted, journaled, sender_vip, flags, conversation_id, date_sent, message_id, date_received DESC, ROWID DESC);
updating message_infos_index covering index
UPDATE mailboxes SET total_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (mailbox = mailboxes.ROWID));
UPDATE mailboxes SET unread_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags&1 = 0) AND (mailbox = mailboxes.ROWID));
UPDATE mailboxes SET deleted_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags&2 > 0) AND (mailbox = mailboxes.ROWID));
UPDATE mailboxes SET flagged_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags&16 > 0 AND flags&2 = 0) AND (mailbox = mailboxes.ROWID));
UPDATE mailboxes SET attachment_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE ((((flags&(63<<10))>>10) BETWEEN 1 AND 62) AND flags&1 = 0) AND (mailbox = mailboxes.ROWID));
UPDATE mailboxes SET to_cc_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE ((flags&(3<<39)>>39) > 0 AND flags&1 = 0) AND (mailbox = mailboxes.ROWID));
updating mailboxes counts
UPDATE mailboxes SET unread_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags&1 = 0 AND flags&128 = 0 AND flags&1048576 = 0) AND (mailbox = mailboxes.ROWID));
updating mailboxes unread_count
DROP INDEX message_content_index_transaction_id_index;
CREATE INDEX message_content_index_transaction_id_index ON messages(content_index_transaction_id, deleted, date_received DESC, ROWID);
updating message_content_index_transaction_id
CREATE INDEX message_mailbox_content_index ON messages (mailbox, content_index_transaction_id, flags, date_received ASC)
adding message_mailbox_content_index
DROP TABLE IF EXISTS spotlight_tombstones
CREATE TABLE spotlight_tombstones (ROWID INTEGER PRIMARY KEY AUTOINCREMENT,
                                   type INTEGER,
                                   identifier TEXT,
                                   transaction_id INTEGER,
                                   UNIQUE(type, identifier))
CREATE INDEX spotlight_tombstones_transaction_index ON spotlight_tombstones(transaction_id, type, identifier)
adding spotlight tombstones table
UPDATE mailboxes SET server_unread_count = 0 WHERE url LIKE "pop:%";
ALTER TABLE messages ADD COLUMN list_id_hash INTEGER;
adding list_id_hash column
CREATE INDEX message_list_id_hash_index ON messages(list_id_hash);
adding message_list_id_hash_index index
ALTER TABLE mailboxes ADD COLUMN last_sync_status_count INTEGER DEFAULT 0;
ALTER TABLE mailboxes ADD COLUMN most_recent_status_count INTEGER DEFAULT 0;
adding mailboxes status count columns
SELECT DISTINCT mailbox FROM messages WHERE flags&64 = 64;
finding mailbox IDs of draft mailboxes
UPDATE mailboxes SET last_sync_status_count = unread_count + server_unread_count, most_recent_status_count = unread_count + server_unread_count WHERE url LIKE 'imap:%%' AND rowid NOT IN (%s)
updating count columns for non-draft mailboxes
UPDATE mailboxes SET last_sync_status_count = unread_count + server_unread_count, most_recent_status_count = unread_count + server_unread_count WHERE url LIKE 'imap:%'
updating count columns
ALTER TABLE mailboxes ADD COLUMN reconcile;
adding reconcile column
CREATE TABLE spotlight_message_reindex (message_id INTEGER,
                                        type INTEGER,
                                        UNIQUE(message_id),
                                        FOREIGN KEY (message_id) REFERENCES messages(ROWID) ON DELETE CASCADE);
CREATE INDEX spotlight_message_reindex_index ON spotlight_message_reindex(message_id, type);
adding spotlight message reindex table
DROP TABLE IF EXISTS mbl_queue;
removing mbl_queue table
ALTER TABLE messages ADD COLUMN journaled DEFAULT '0';
adding journaled column
UPDATE mailboxes SET last_sync_status_count = 0, most_recent_status_count = 0 WHERE url LIKE 'imap:%%' AND rowid IN (%s)
DROP TABLE IF EXISTS offline_cache_operations;
DROP TABLE IF EXISTS offline_cache_replay_data;
DROP TRIGGER after_delete_account;
removing offline cache tables
CREATE INDEX IF NOT EXISTS messages_subject_index ON messages(subject);
CREATE INDEX IF NOT EXISTS messages_summary_index ON messages(summary);
CREATE INDEX IF NOT EXISTS recipients_address_index ON recipients(address);
Creating indexes to protected data
CREATE INDEX IF NOT EXISTS thread_senders_address_thread_index ON thread_senders(address, thread);
CREATE INDEX IF NOT EXISTS thread_senders_thread_priority_date_index ON thread_senders(thread, priority, date);
CREATE INDEX IF NOT EXISTS thread_recipients_address_thread_index ON thread_recipients(address, thread);
CREATE INDEX IF NOT EXISTS thread_recipients_thread_priority_date_index ON thread_recipients(thread, priority, date);
Creating indexes for thread_senders and thread_recipients
ALTER TABLE threads ADD COLUMN journaled INTEGER NOT NULL DEFAULT 0;
CREATE INDEX IF NOT EXISTS threads_journaled_scope_date_conversation_index ON threads(journaled, scope, date, conversation);
CREATE INDEX IF NOT EXISTS threads_journaled_date_scope_conversation_index ON threads(journaled, date, scope, conversation) WHERE journaled = 1;
DROP INDEX IF EXISTS threads_scope_read_date_conversation_index;
DROP INDEX IF EXISTS threads_scope_flagged_date_conversation_index;
DROP INDEX IF EXISTS threads_scope_has_red_flag_date_conversation_index;
DROP INDEX IF EXISTS threads_scope_has_orange_flag_date_conversation_index;
DROP INDEX IF EXISTS threads_scope_has_yellow_flag_date_conversation_index;
DROP INDEX IF EXISTS threads_scope_has_green_flag_date_conversation_index;
DROP INDEX IF EXISTS threads_scope_has_blue_flag_date_conversation_index;
DROP INDEX IF EXISTS threads_scope_has_purple_flag_date_conversation_index;
DROP INDEX IF EXISTS threads_scope_has_gray_flag_date_conversation_index;
CREATE INDEX IF NOT EXISTS messages_mailbox_conversation_id_flag_color_date_received_journaled_index ON messages(mailbox, conversation_id, flag_color, date_received, journaled);
DROP INDEX IF EXISTS messages_mailbox_conversation_id_flag_color_date_received_index;
Adding threads.journaled and tweaking some indexes
@"NSString"16@?0@"EFSQLIndexSchema"8
Creating messages_message_id_deleted_journaled_read_mailbox_index
Creating messages_sender_vip_deleted_journaled_read_message_id_index
DROP INDEX IF EXISTS messages_deleted_mailbox_index;
Creating messages_deleted_mailbox_date_received_index
Creating messages_journaled_deleted_date_received_index
DROP TABLE IF EXISTS message_metadata;
Dropping table message_metadata.
CREATE TABLE message_metadata (message_id INTEGER PRIMARY KEY, timestamp INTEGER NOT NULL, json_values TEXT COLLATE BINARY NOT NULL);
Creating message_metadata table.
CREATE INDEX message_metadata_timestamp_index ON message_metadata(timestamp);
Creating message_metadata index.
CREATE TABLE IF NOT EXISTS table_metadata (table_name TEXT COLLATE BINARY NOT NULL,
                                           largest_deleted_rowid INTEGER NOT NULL DEFAULT 0,
                                           PRIMARY KEY(table_name)) WITHOUT ROWID;
creating table_metadata table
Creating threads_journaled_date_scope_conversation_index
Creating indexes for conversations and message unread counts
CREATE INDEX IF NOT EXISTS
   messages_mailbox_deleted_journaled_read_sender_vip_flags_conversation_id_date_sent_message_id_date_received_rowid_index
   ON messages(
       mailbox, deleted, journaled, read, sender_vip, flags, conversation_id,
       date_sent, message_id, date_received DESC, ROWID DESC);
DROP INDEX IF EXISTS
   messages_mailbox_deleted_journaled_sender_vip_flags_conversation_id_date_sent_message_id_date_received_rowid_index;
Updating indexes for unread counts
thread_mailboxes
DROP INDEX IF EXISTS messages_flagged_deleted_journaled_index
Creating indexes for app badge count
UPDATE messages SET summary = NULL WHERE summary in (select rowid from protected.summaries where summary = 'This message has no content');
DELETE FROM protected.summaries where summary = 'This message has no content'
Deleting all summaries = 'This message has no content' in protected data
Adding sender_vip/conversation message indexes
DROP INDEX IF EXISTS messages_mailbox_conversation_id_date_received_index;
DROP INDEX IF EXISTS messages_conversation_id_mailbox_read_date_received_index;
DROP INDEX IF EXISTS messages_conversation_id_mailbox_flagged_index;
DROP INDEX IF EXISTS messages_conversation_id_mailbox_sender_date_received_index;
DROP INDEX IF EXISTS messages_conversation_id_mailbox_flags_index;
Adding deleted to conversation_id indexes
messages_date_received_deleted0_journaled0_read0_index
messages_mailbox_date_received_deleted0_journaled0_read0_index
newest_read_message
display_message
DROP TRIGGER IF EXISTS after_add_message;
DROP TRIGGER IF EXISTS after_update_message;
CREATE TRIGGER after_delete_message AFTER DELETE ON messages
    BEGIN
        DELETE FROM message_data WHERE message_id = OLD.ROWID;
    END;
Creating indexes for unread filters and dropping triggers
DROP INDEX IF EXISTS messages_deleted_searchable_message_index;
CREATE INDEX IF NOT EXISTS messages_searchable_message_deleted_index ON messages(searchable_message, deleted);
Replacing messages_deleted_searchable_message_index with messages_searchable_message_deleted_index
CREATE INDEX IF NOT EXISTS messages_mailbox_deleted_date_received_index ON messages(mailbox, deleted, date_received) WHERE journaled = 0;
Adding messages_mailbox_deleted_date_received_index
DELETE FROM message_metadata;
Removing all entries from message_metadata.
INSERT INTO properties (key, value) VALUES ('UseLegacyMessageIDHashFormat', 1) ON CONFLICT(key) DO UPDATE SET value = 1;
Inserting UseLegacyMessageIDHashFormat property.
DROP TABLE IF EXISTS remote_content_links;
Removing remote_content_links table.
DROP INDEX IF EXISTS brand_indicators_indicator_url_indicator_hash_hash_algorithm_index;
Removing brand_indicators_indicator_url_indicator_hash_hash_algorithm_index.
ALTER TABLE mailbox_actions ADD COLUMN new_mailbox_name TEXT;
Adding new_mailbox_name column.
DROP INDEX IF EXISTS messages_global_message_id_index;
Unable to drop index messages_global_message_id_index
Unable to add index messages_global_message_id_mailbox_index
CREATE INDEX IF NOT EXISTS messages_mailbox_deleted_display_date_index ON messages(mailbox, deleted, display_date) WHERE journaled = 0;CREATE INDEX IF NOT EXISTS messages_deleted_conversation_id_display_date_index ON messages(deleted, conversation_id, display_date);
ALTER TABLE threads ADD COLUMN display_date INTEGER NOT NULL DEFAULT 0;UPDATE threads SET display_date = date;CREATE INDEX IF NOT EXISTS threads_scope_display_date_conversation_index ON threads(scope, display_date, conversation);
@"NSString"16@?0@"MailAccount"8
thread_scopes
filter_predicate
mailbox_type
ALTER TABLE message_global_data ADD COLUMN follow_up_jsonstringformodelevaluationforsuggestions TEXT COLLATE BINARY;CREATE INDEX IF NOT EXISTS message_global_data_follow_up_jsonstringformodelevaluationforsuggestions_index ON message_global_data(follow_up_jsonstringformodelevaluationforsuggestions);
server_messages
server_labels
server_message
label
local_message_actions
action_messages
action_labels
action_flags
action
source_mailbox
destination_mailbox
destination_message
action_type
user_initiated
action_phase
do_add
flag_type
flag_value
ALTER TABLE server_messages RENAME TO server_messages_old
Renaming old server_messages
Creating new server_messages
INSERT INTO server_messages SELECT * FROM server_messages_old
Populating new server_messages from old server_messages
DROP TABLE IF EXISTS server_messages_old
Dropping old server_messages
Creating new indexes for server_messages
ALTER TABLE local_message_actions RENAME TO local_message_actions_old
Renaming old local_message_actions
Creating new local_message_actions
INSERT INTO local_message_actions SELECT * FROM local_message_actions_old
Populating new local_message_actions from old local_message_actions
DROP TABLE IF EXISTS local_message_actions_old
Dropping old local_message_actions
Creating new indexes for local_message_actions
@"NSURL"16@?0@"MailAccount"8
has_red_flag
has_orange_flag
has_yellow_flag
has_green_flag
has_blue_flag
has_purple_flag
has_gray_flag
has_unflagged
has_attachments
count
v32@?0@"NSString"8@"EFSQLTableSchema"16Q24
v24@?0@"NSString"8@"EFSQLTableSchema"16
DROP TABLE threads
Dropping threads
DELETE FROM thread_scopes
Clearing thread_scopes
DELETE FROM thread_mailboxes
Clearing thread_mailboxes
DELETE FROM thread_senders
Clearing thread_senders
DELETE FROM thread_recipients
Clearing thread_recipients
Creating new threads
DROP INDEX messages_message_id_mailbox_index;
DROP INDEX messages_global_message_id_index;
DROP INDEX messages_document_id_index;
DROP INDEX messages_sender_index;
DROP INDEX messages_subject_index;
DROP INDEX messages_summary_index;
DROP INDEX messages_date_received_index;
DROP INDEX messages_mailbox_date_received_index;
DROP INDEX messages_mailbox_conversation_id_date_received_deleted_index;
DROP INDEX messages_remote_mailbox_remote_id_index;
DROP INDEX messages_read_index;
DROP INDEX messages_flagged_index;
DROP INDEX messages_deleted_date_received_index;
DROP INDEX messages_conversation_id_mailbox_read_date_received_deleted_index;
DROP INDEX messages_date_last_viewed_index;
DROP INDEX messages_conversation_id_mailbox_flagged_deleted_index;
DROP INDEX messages_conversation_id_mailbox_deleted_index;
DROP INDEX messages_conversation_id_mailbox_sender_date_received_deleted_index;
DROP INDEX messages_conversation_id_mailbox_flags_deleted_index;
DROP INDEX messages_searchable_message_deleted_index;
DROP INDEX messages_mailbox_deleted_journaled_read_sender_vip_flags_conversation_id_date_sent_message_id_date_received_rowid_index;
DROP INDEX messages_mailbox_visible_date_received_rowid_index;
DROP INDEX messages_content_index_transaction_id_deleted_date_received_rowid_index;
DROP INDEX messages_mailbox_remote_id_sequence_identifier_index;
DROP INDEX messages_mailbox_content_index_transaction_id_flags_date_received_index;
DROP INDEX messages_list_id_hash_index;
DROP INDEX messages_journaled_conversation_id_date_received_index;
DROP INDEX messages_mailbox_conversation_id_flag_color_date_received_journaled_index;
DROP INDEX messages_message_id_deleted_journaled_read_mailbox_index;
DROP INDEX messages_deleted_conversation_id_date_received_index;
DROP INDEX messages_deleted_journaled_mailbox_index;
DROP INDEX messages_deleted_mailbox_date_received_index;
DROP INDEX messages_deleted_sender_vip_date_received_index;
DROP INDEX messages_deleted_read_journaled_mailbox_conversation_id_sender_vip_index;
DROP INDEX messages_flagged_deleted_journaled_mailbox_index;
DROP INDEX messages_conversation_id_read_deleted_journaled_index;
DROP INDEX messages_sender_vip_deleted_journaled_read_message_id_index;
DROP INDEX messages_date_received_deleted0_journaled0_read0_index;
DROP INDEX messages_mailbox_date_received_deleted0_journaled0_read0_index;
DROP INDEX messages_journaled_deleted_date_received_index;
DROP INDEX messages_mailbox_deleted_date_received_index;
CREATE INDEX messages_global_message_id_index ON messages(global_message_id);
UPDATE messages SET sequence_identifier = 0
thread_senders
thread
priority
thread_recipients
v32@?0@"EFSQLTableSchema"8@"NSString"16@"EFSQLTableSchema"24
ALTER TABLE thread_senders RENAME TO thread_senders_old
Renaming thread_senders
ALTER TABLE thread_recipients RENAME TO thread_recipients_old
Renaming thread_recipients
Creating new thread_senders and thread_recipients
INSERT INTO thread_senders SELECT * FROM thread_senders_old
Repopulating thread_senders
INSERT INTO thread_recipients SELECT * FROM thread_recipients_old
Repopulating thread_recipients
DROP TABLE thread_senders_old
Dropping old thread_senders
DROP TABLE thread_recipients_old
Dropping old thread_recipients
ALTER TABLE messages ADD COLUMN flag_color INTEGER
Adding messages.flag_color
CREATE INDEX IF NOT EXISTS messages_mailbox_conversation_id_flag_color_date_received_index ON messages(mailbox, conversation_id, flag_color, date_received)
Creating messages_mailbox_conversation_id_flag_color_date_received_index
UPDATE messages SET flag_color = ((flags & (7 << 41)) >> 41) WHERE (flags & 16) != 0
Setting flag_color
DROP TABLE thread_flag_colors
Dropping thread_flag_colors
UPDATE thread_scopes SET needs_update = 1
Resetting thread_scopes
v32@?0@"MFMailboxUid"8@"NSMutableSet"16^B24
com.apple.email.MFMessageAttachmentMigrator
com.apple.message.MFMessageAttachmentMigrator.contentProtectionQueue
SELECT ROWID FROM messages WHERE (((flags&(63<<10))>>10) BETWEEN 1 AND 62) AND global_message_id NOT IN (SELECT DISTINCT global_message_id FROM message_attachments)
successful
unsuccessful
Successfully
Unsuccessfully
com.apple.mail.attachmentMigrator
MFMessageBodyHTMLParserErrorDomain
<(body|BODY)(\s|>)
</%@
<%@>
"%@..."
%@...
Messages
com.apple.email.MFMessageBodyMigrator
emlx
v24@?0@"MFLibraryMessage"8^B16
B16@?0@"NSString"8
@"NSMutableArray"8@?0
blockquote
title
script
style
-[MFMessageBodyParser messageBodyElementClass]
MFMessageBodyParser.m
cite
gmail_quote
class
Not all requested attributes have a valid values
<%@: %p; text="%@">
AttributionPatterns
Single Line
^(\u200f*|\u200e*)\s*(%@)\s*$
Separators
Signatures
Couldn't create regular expression for key %@: %@
v24@?0@"<MFMessageBodyElement>"8Q16
v16@?0@"<MFMessageBodyElement>"8
B16@?0@"<ECMessage>"8
MFMessageChangeManager_iOS.m
[messages.firstObject isKindOfClass:[MFMessage class]]
v32@?0@"MFMailMessage"8@"MFLibraryMessage"16^B24
B32@?0@"<ECMessage>"8Q16^B24
[message isKindOfClass:[MFLibraryMessage class]]
@"NSDictionary"16@?0@"EMMessage"8
@"NSArray"16@?0@"NSArray"8
@"NSString"16@?0@"<ECEmailAddressConvertible>"8
q24@?0@"NSString"8@"NSString"16
v32@?0@"<ECMailbox>"8@"NSMutableArray"16^B24
maild.isMailDropAttachmentPresent
v16@?0@"EFCancelationToken"8
Loading context completed without vending a result
@"EFFuture"16@?0@"MFMessageLoadingContextEvent"8
v16@?0@"EMContentRepresentation"8
@"EFFuture"16@?0@"NSString"8
@"EFFuture"16@?0@"NSError"8
@"EFFuture"16@?0@"<MFCollectingDataConsumer>"8
v16@?0@"EFFuture"8
v24@?0@"NSDictionary"8@"NSError"16
Failed to generate snippets for attachments: nil delegate
v24@?0@"NSArray"8@"NSError"16
@"EFFuture"16@?0@"_MFLoadingContextEventResult"8
v24@?0@"EMContentRepresentation"8@"NSError"16
@"NSProgress"16@?0@?<v@?@"EMContentRepresentation"@"NSError">8
@"NSProgress"24@?0Q8@?<v@?@"NSError">16
@"NSProgress"32@?0@"EMContentRequestOptions"8@"<EMContentItemRequestDelegate>"16@?<v@?@"EMContentRepresentation"@"NSError">24
@"NSProgress"8@?0
%@://%@%@
MFMessageCriterion+MailboxPrediction.m
NSNumber variable required, got %@
NSString variable required, got %@
ECAngleBracketIDHash variable required, got %@
NSSet variable required, got %@
Should not have reached this case, check the previous switch!
BccRecipient
senderAddress.emailAddressValue.simpleAddress
Spotlight
body
subject.subjectWithoutPrefix
IsRead
HasAttachments
Flagged
readLaterDate
sendLaterDate
followUpStartDate
followUpEndDate
unsubscribeType
senderBucket
@"NSPredicate"16@?0@"NSString"8
@"NSPredicate"16@?0@"MFMessageCriterion"8
@"NSNumber"16@?0@"NSString"8
@"MFMessageCriterion"16@?0@"NSPredicate"8
<%@: %p> message %@
 hLCB=%@ hLBAP=%@ remainingBytes=%lu
 error: %@
 SMIME error: %@
 error: %@/%ld
 SMIME error: %@/%ld
 content: %@
 %lu content items
MFMessageLoadingContext.m
_inputObservable must not already be configured
B16@?0@"MFMessageLoadingContextEvent"8
v16@?0@"MFMessageLoadingContextEvent"8
body must be a MIME body
@16@?0@"MFMessageTextAttachment"8
@"EMMessageSigner"16@?0@"MFMessageSigner"8
com.apple.email.messagePersistence.contentLoad.network
com.apple.email.messagePersistence.contentLoad.offline
SummaryLoaderQueue
Buckets
BIMI
client_%d
v16@?0@"<EMContentRequestOptionsBuilder>"8
@"NSNumber"8@?0
Q16@?0@"NSString"8
SELECT COUNT(*) FROM message_data
SELECT COUNT(*) FROM message_data_deleted
SELECT COUNT(*) FROM messages WHERE journaled = '1'
SELECT COUNT(*) FROM mailboxes WHERE reconcile = '1'
SELECT COUNT(*) FROM protected_message_data
SELECT COUNT(*) FROM message_attachments WHERE message_attachments.attachment IS NOT NULL
SELECT COUNT(*) FROM searchable_attachments
SELECT COUNT(*) FROM message_attachments LEFT OUTER JOIN searchable_attachments ON (message_attachments.ROWID = searchable_attachments.attachment_id) WHERE searchable_attachments.attachment_id IS NULL AND message_attachments.attachment IS NOT NULL;
NetworkConfigurationDidChangeNotification
MFCarrierBundleChangedNotification
MFNetworkSimulationBitfieldKey
NetworkSymptomsHasAlternativeAdvice
com.apple.message.mfnetworkcontroller
v16@?0@"NSMutableArray"8
cellular-data
wi-fi
com.apple.wifi.plist
com.apple.message.MFNetworkController.dataStatus
com.apple.mail.radioPreferences
UIApplicationWillEnterForegroundNotification
B16@?0@"CTXPCServiceSubscriptionContext"8
com.apple.symptoms.hasAlternateAdvice
-[MFNetworkController dealloc]
MFNetworkController.m
NULL == _store
NULL == _reachability
@"<EFCancelable>"16@?0@"<EFObserver>"8
@"NSNumber"16@?0@"MFNetworkController"8
Network Controller State
Data Status
0x%02x
Reachability Flags
WiFi Enabled
Cell Data
Data Status Indicator
Roaming Allowed
Active Calls
Core Telephony Client
@"NSMutableDictionary"8@?0
%s (%d)
None
2.5G
3.5G
3.75G
H Plus
Unknown
EmailAuthNone
EmailAuthCRAMMD5
EmailAuthNTLM
EmailAuthHTTPMD5
EmailDomain
EmailAccountName
IncomingMailServerAuthentication
OutgoingMailServerAuthentication
OSXServerIMAPErrorDomain
OS X Server
com.apple.mobilemail.sentMessageSize
MFPersistence_iOS.m
-[MFPersistence_iOS test_tearDown]
MFPersistenceDatabase_iOS.m
Trying to access the database in MobileMail
Got wrong type of connection
CREATE TEMPORARY TABLE temp_selected_messages (message_id INTEGER);
enabling extended error codes
icusearch
creating custom icusearch function
cpsearch
creating custom cpsearch function
setting cache_size
configuring sql connection for %@
database corrupt
-[MFPersistenceDatabaseConnection_iOS _handleCorruptDatabase]
MFPersistenceDatabaseConnection_iOS.m
0 && "database corrupt"
file system out of space
-[MFPersistenceDatabaseConnection_iOS _handleFullDatabase]
0 && "file system out of space"
database I/O error, missing sqlDB pointer
-[MFPersistenceDatabaseConnection_iOS _handleInvalidDatabaseIOError]
0 && "database I/O error, missing sqlDB pointer"
protected database went missing
-[MFPersistenceDatabaseConnection_iOS _handleDetachedDatabaseIOError]
0 && "protected database went missing"
database I/O error
-[MFPersistenceDatabaseConnection_iOS _handleIOError]
0 && "database I/O error"
SQLITE_BUSY
-[MFPersistenceDatabaseConnection_iOS _handleBusyError]
0 && "SQLITE_BUSY"
PRAGMA cache_size = 1000;
MFPowerStateDidChange
MFBatteryLevelDidChange
MFPowerAssertionDidExpire
MFBatterySaverModeDidChange
com.apple.message.MFPowerController.state
com.apple.message.MFPowerController.power
+[MFPowerController sharedInstance]
MFPowerController.m
instance != nil
plugged in
unplugged
assertion IS NOT NULL
assertion timer IS NOT nil
com.apple.message.preventSleep
assertion IS NULL
assertion timer IS nil
task assertion IS NOT NULL
com.apple.message.backgroundTaskAssertion
task assertion IS NULL
@16@?0@"NSNotification"8
@"NSNumber"16@?0@"MFPowerController"8
@"NSNumber"16@?0@8
==== Power State ====
  charging: %@
  low-power mode: %@
  holding assertion: %@
==== Internal Assertions ====
  %@: %d
journal
Could not retrieve RFC822 data for attachment.
@"EDSearchableIndexItem"16@?0@"<EDPersistedMessage>"8
@"NSNull"16@?0@8
com.apple.mobilemail.contentIndex
likely(deleted = '0')
v16@?0@"<EDSearchableIndexAttachmentItemMetadatumBuilder>"8
v24@?0@"NSArray"8@"NSArray"16
v24@?0@"NSURL"8@"MFLibraryMessage"16
deleted = '0' AND messages.ROWID IN (%@)
ShouldSign
ShouldEncrypt
SigningIdentity
EncryptionIdentity
RecipientCertificates
IdentityRef
IdentityError
ErrorsByRecipient
CertificatesByRecipient
MFSecureMIMECompositionManager_lock
com.apple.mobilemail.MFSecureMIMECompositionManagerQueue
-[MFSecureMIMECompositionManager _determineSigningStatusWithSendingAddress:]
MFSecureMIMECompositionManager.m
_signingStatusSemaphore > 0
-[MFSecureMIMECompositionManager _determineEncryptionStatusWithSendingAddress:]
_encryptionStatusSemaphore > 0
-[MFSecureMIMECompositionManager _determineEncryptionStatusWithNewRecipients:]
-[MFSecureMIMECompositionManager compositionSpecification]
_signingIdentity
_encryptionIdentity
SMIME_MISSING_SIGNING_IDENTITY_FORMAT
SMIME_MISSING_ENCRYPTION_IDENTITY_FORMAT
SMIME_OTHER_ENCRYPTION_CERT_ERROR_MESSAGE
SMIME_MISSING_ENCRYPTION_CERT_MESSAGE
MF_SMIME_CERTIFICATE_NOT_YET_VALID_FORMAT
MF_SMIME_CERTIFICATE_EXPIRED_FORMAT
checkCertificateExpiration
com.apple.private.accounts.allaccounts
GSDeviceName
_SIMULATOR
%@_%@
DEFAULT_SIGNATURE
DEFAULT_SIGNATURE_IPHONE
Sent from my iPhone
SignatureKey
com.apple.mail.MailAccountSignaturesChanged
UseAccountSignatures
<br/><br/>
X-AOL-OUTBOX-COPY
PIPELINING
SMTPUTF8
ENHANCEDSTATUSCODES
CHUNKING
DisableCHUNKING
SIZE
AUTH
FAILED_SEND_SSL_NEEDED
FAILED_SEND_TITLE
Cannot Send Mail
BDAT %lu LAST
> SMTPUTF8
 imapmailbox="%@"
SMTP_INVALID_SENDER_ADDRESS
SMTP_SENDING_CONTENT_FAILED
Sending the message content to the server failed.
SMTP_1_BAD_RECIPIENT
MFSMTPFailureReason
SMTP_SENDING_CONTENT_LATER
Mail will try to send the message again later.
SMTP_BAD_RECIPIENTS
The recipients were rejected by the server.
SMTP_RECIPIENTS_UNRECOGNIZED
Verify that you have addressed this message correctly. Check your SMTP server settings in Mail Preferences and verify any advanced settings with your system administrator.
SMTP_SENDING_FAILED_TITLE
Unable to Send Email
SMTP_GENERIC_ERROR_FORMAT
^([0-9]+)([- ])?(.*)$
Unable to init regular expression from %@
-[MFSMTPConnection _readResponseRange:isContinuation:]
MFSMTPConnection.m
[match numberOfRanges] == 4
FAILED_SEND
smtpclient.apple
SSNT
B16@?0@"MFMessageReferenceContext"8
q24@?0@"MFMessageReferenceContext"8@"MFMessageReferenceContext"16
probe_message_update
probe_message_add
probe_message_delete
CREATE TEMPORARY TRIGGER probe_message_update AFTER UPDATE OF flags ON messages BEGIN SELECT probe_message_update(OLD.ROWID, OLD.flags, NEW.flags, NEW.message_id, NEW.mailbox); END
CREATE TEMPORARY TRIGGER probe_message_add AFTER INSERT ON messages BEGIN SELECT probe_message_add(NEW.ROWID, NEW.flags, NEW.message_id, NEW.mailbox); END
CREATE TEMPORARY TRIGGER probe_message_delete AFTER DELETE ON messages BEGIN SELECT probe_message_delete(OLD.ROWID, OLD.flags, OLD.message_id, OLD.mailbox); END
ROW: %lld; 
Count: %ld -> %ld; 
Flags: %llu -> %llu (
R: %@ -> %@ | 
SR: %@ -> %@ | 
TSR: %@ -> %@ ); 
dup msgs: %lu;
#Update
SELECT message_id FROM messages WHERE message_id = ? AND rowid != ? AND flags&2 > 0 AND mailbox = ? AND (flags&1 = 0 AND flags&128 = 0 AND flags&1048576 = 0)
SELECT unread_count FROM mailboxes WHERE ROWID = ?
Flags: %llu (
R: %@ | 
SR: %@ | 
TSR: %@ ); 
#Add
#Delete
com.apple.mobilemail
ReplyToSelf
AuthSchemeKey
BlockRemoteImages
CollapseReadConversationMessages
ConversationViewExcludesRelatedMessages
ConversationViewShowsNewestAtTop
Deceleration
DisableQuoteIncrease
DisableThreading
IncludeAttachmentReplies
IncludeAttachmentRepliesAlways
IncludeAttachmentRepliesAsk
IncludeAttachmentRepliesNever
IncludeAttachmentRepliesWhenAdding
LeftEdgeSwipeAction
LinesOfPreview
MailDefaultsChangedNotification
MarkAsRead
MoveToArchiveOrDelete
MutedThreadActionKey
NoNotification
POPDeleteIntervalKey
RightEdgeSwipeAction
ShowMessageDeleteConfirmation
ShowToCCIndicators
SwipeActionAlternateDestructiveAction
SwipeActionArchive
SwipeActionFlag
SwipeActionMove
SwipeActionNone
SwipeActionRead
SwipeActionTrash
outgoing_key
MFLibraryCompressorDefaultsUpgradeStateKey
MobileMailVersion
Preferences
Found
Not Found
MailAccountExtPropertiesMigratedToSharedAppGroup
DeviceIdentifier
com.apple.EmailFoundation
MFWeakObjectCache.m
couldn't create a weak reference for %@
bold
italic
fixed
smaller
bigger
x-tad-bigger
x-tad-smaller
fontfamily
color
underline
nofill
excerpt
param
x-fontsize
superscript
subscript
paragraph
signature
heading
footing
no-op
</U>
<SUP>
</SUP>
<SUB>
</SUB>
<SPAN style="
color: %s; 
font-size: %dpt; 
</SPAN>
&nbsp;&nbsp;&nbsp;&nbsp;
<br/>
-[MFMimeEnrichedReader setupFontStackEntry:]
MimeEnrichedReader.m
NULL != stackEntry
font-weight: bold
font-style: italic
rgba(%d, %d, %d, 1)
font-family: 
font-face: Helvetica
<%@:%p
_commandStack = %p (%ld entries):
[%@ parameter=%@]
_outputBuffer=%@
_outputString=%@
-------------------------------------------------------------------
<%@: %p priority: %lu target: %@ selector: %s>
ATOKEN
MESSAGE_AUTH_ATOKEN
Apple Token
CASTLE_SMTP_SERVER
iCloud SMTP Server
MFMessageKeychainManagerCertificateDeniedDomain
keychainLock
1.2.840.113635.100.6.7
B16@?0^{__SecIdentity=}8
S/MIME Encryption for %@
%@-%d.%@
%@-%d
<br>
MESSAGE_AUTH_NTLM
XOAUTH2
MESSAGE_AUTH_OAUTH2TOKEN
OAuth 2.0 Token
user=%@
auth=Bearer %@
smtp
MESSAGE_AUTH_PLAIN_TEXT
user
pass
string
quoteLevel
ProgressiveMimeParseErrorDomain
Data is not as long as reported
Unable to parse Content-type header in top-level part
No Content-type header found in top-level part
Invalid parser state (%d)
x-apple-smime-error
x-apple-smime-signers
sha-256
--%@
SMIME_CANT_DECRYPT_MESSAGE
This message is encrypted.  Install a profile containing your encryption identity to decrypt this message.
%@://%@
x-attach-SMIME
SecureMimePart.m
The message body should be a MFMimeBody.
SMIME_CANT_DECRYPT_TITLE
Unable to decrypt message
(Unknown)
SMIME_CANT_SIGN_MESSAGE
application/pkcs7-signature
micalg
pkcs7-signature
smime.p7s
SMIME_CANT_SIGN_TITLE
Unable to Sign
SMIME_CANT_ENCRYPT_MESSAGE
An error occurred while trying to encrypt your message. Verify that you have valid certificates in your keychain for all of the recipients.
pkcs7-mime
smime.p7m
enveloped-data
smime-type
NO_SMTP_HOST
You have not specified an SMTP server in Mail Preferences. You must specify a server before you can send mail.
SMTP_NO_CONNECTION
MF_SMTP_RECIPIENT_INVALID_ADDRESS
MESSAGE_TOO_LARGE
Your message has size %@, which exceeds %@, the maximum allowed by the server.
MFSMTPFailureReasonUserUnknown
MFSMTPFailureReasonRelayingNotAllowed
MFSMTPFailureReasonInvalidAddress
MFSMTPFailureReasonSendingLimitExceeded
MFSMTPFailureReasonNoAuthCommandGiven
MFSMTPFailureReasonInvalidSenderAddress
MFSMTPFailureReasonBadCredentials
MFSMTPFailureReasonWebLoginRequired
MFSMTPFailureReasonUnknown
^([0-9]+)\.([0-9]+)\.([0-9]+)([ ]+)(.*)
SMTPResponse.m
MF_SMTP_RECIPIENT_UNKNOWN
MF_SMTP_RECIPIENT_RELAYING_NOT_ALLOWED
MF_SMTP_SENDING_LIMIT_EXCEEDED
Sending the message failed because you exceeded your sending limit.
NO_PASSWORD_PROVIDED_ERROR
No password provided.
Please go to Mail Account Settings and enter a password.
%lu (%d.%d.%d) %@
%lu %@
sending limit
from address is not one of your addresses
SELECT ROWID from mailboxes WHERE url = ?;
SELECT 1 FROM pop_uids WHERE mailbox = ? AND uid = ? AND flags IS NULL;
SELECT uid FROM pop_uids WHERE mailbox = ? AND date_added < ?;
SELECT uid FROM pop_uids WHERE mailbox = ?;
DELETE FROM pop_uids WHERE mailbox = ? AND uid = ?;
SELECT COUNT() FROM pop_uids WHERE mailbox = ?;
DELETE FROM pop_uids WHERE mailbox = ?;
SELECT flags FROM pop_uids WHERE mailbox = ? AND uid = ?;
-journal
-wal
-shm
 Journals
MFWebAttachmentSource_AttachmentLock
<%@ %p>, attachments=%@
x-msg://%ul/
MFWebMessageDocument/%ul
yahoo.com
YahooAllowSSL
YahooIMAPPort
Draft
Bulk Mail
%@@yahoo.com
ymail://?fid=%@&mid=%@
yahoo.co.jp
ybb.ne.jp
yahooAccountIcon
YAHOO_DELIVERY_HOSTNAME
Yahoo! SMTP Server
com.apple.email.BackFillMessageBodyActivity
Ending activity for %{sensitive,mask.mailbox}s
Updating activity for %{sensitive,mask.mailbox}s to status %{public}s
Starting activity for %{sensitive,mask.mailbox}s with status %{public}s
Message/Activity.swift
Unexpectedly found nil while implicitly unwrapping an Optional value
IMAPLastSyncDate
Couldn't find existing activity for %{sensitive,mask.mailbox}s
Couldn't find existing activity for %{sensitive,mask.mailbox}s, starting new one
Fetching failed (unknown error)
Fetching failed because of an authentication error
Fetching failed because server was unreachable
EDAccountsProvider
receivingAddresses
T@"NSArray",N,R
hasActiveAccounts
TB,N,R
@"NSArray"16@0:8
OS_xpc_object
OS_dispatch_source_timer
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
hash
Tq,N,R
superclass
description
T@"NSString",N,R
debugDescription
B24@0:8@"Protocol"16
@"NSString"16@0:8
EDBaseMessage
globalMessageID
account
T@"<EDIndexableAccount>",N,R
T@"<EDIndexableMailbox>",N,R
displayDate
T@"NSDate",N,R
readLater
T@"EMReadLater",N,R
followUp
T@"EMFollowUp",N,R
brandIndicatorLocation
T@"NSURL",N,R
brandIndicator
T@"NSData",N,R
dataDetectionAttributes
T@"NSDictionary",N,R
bccIfAvailable
@"<EDIndexableAccount>"16@0:8
@"<EDIndexableMailbox>"16@0:8
@"NSDate"16@0:8
@"EMReadLater"16@0:8
@"EMFollowUp"16@0:8
@"NSURL"16@0:8
@"NSData"16@0:8
@"NSDictionary"16@0:8
EDPersistedMessage
v32@0:8@16@24
persistentID
persistedMessageID
conversationFlags
TQ,N,R
T@"NSDate",N,C
T@"EMReadLater",N,&
accountForSender
T@"<EDAccount>",N,R
T@"EMFollowUp",N,&
basePath
v24@0:8@"NSDate"16
v24@0:8@"EMReadLater"16
@"<EDAccount>"16@0:8
v24@0:8@"EMFollowUp"16
v32@0:8@"NSURL"16@"NSData"24
ECMessage
@24@0:8^B16
T@"ECSubject",N,R
from
dateReceived
dateSent
T@"<ECMailbox>",N,R
conversationID
isServerSearchResult
T@"ECMessageFlags",N,R
partOfExistingThread
mimeBody
T@"<ECMimeBody>",N,R
headersDictionary
messageIDHeader
messageIDHeaderHash
T@"ECAngleBracketIDHash",N,R
labels
T@"NSSet",N,R
T@"<ECMailAccount>",N,R
headers
T@"<ECMessageHeaders>",N,R
references
documentID
T@"NSUUID",N,R
numberOfAttachments
listIDHash
@"NSString"24@0:8^B16
@"ECSubject"16@0:8
@"<ECMailbox>"16@0:8
@"ECMessageFlags"16@0:8
@"<ECMimeBody>"16@0:8
@"ECAngleBracketIDHash"16@0:8
@"NSSet"16@0:8
@"<ECMailAccount>"16@0:8
@"<ECMessageHeaders>"16@0:8
@"NSUUID"16@0:8
EFObservable
@"<EFCancelable>"24@0:8@"<EFObserver>"16
v36@0:8i16@20@?28
v16@0:8
B32@0:8@16@24
v36@0:8i16@"NSArray"20@?<v@?>28
v24@0:8@"<MFBackFillingMessageBodyDownloadRequest>"16
v24@0:8@"ECLocalMessageAction"16
B24@0:8@"NSString"16
B32@0:8@"NSString"16@"NSString"24
EDAccount
identifier
systemAccount
T@"ACAccount",N,R
statisticsKind
primaryiCloudAccount
isActive
displayName
T@"NSString",N,C
@"ACAccount"16@0:8
v24@0:8@"NSString"16
OS_dispatch_source
@24@0:8^{_NSZone=}16
ECMailAccount
emailAddressStrings
hostname
password
ECAccountPropertyProviding
@24@0:8@"NSString"16
Message.BackFillMessageBodyScheduler
Message/BackFillMessageBodies.swift
StaticString should have Unicode scalar representation
Swift/StaticString.swift
Not enough bits to represent the passed value
Swift/Integers.swift
Unexpectedly found nil while unwrapping an Optional value
StaticString should have pointer representation
Swift/UnsafeBufferPointer.swift
UnsafeBufferPointer has a nil start and nonzero count
MFBackFillMessageBodyScheduler
@16@0:8
didSetCriteria
activity
accountProvider
_TtCC7Message28BackFillMessageBodyScheduler7Request
v20@0:8i16
_TtCC7Message28BackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity
scheduler
running
timer
didComplete
error
noWork
pendingWork
Message.Request
%lx: Received '%{public}s' without request.
%lx: Received '%{public}s' from request.
Can't unsafeBitCast between types of different sizes
Swift/Builtin.swift
%lx: %ld out of %ld are still running.
%lx: Completed with status: %{public}s
%lx: Failed to set completion status to %{public}s
Activity '%lx' did complete, but we no longer have a reference to it.
Activity '%lx' did complete.
self must be a properly aligned pointer for types Pointee and T
Swift/UnsafePointer.swift
Division results in an overflow in remainder operation
Swift/IntegerTypes.swift
Division by zero in remainder operation
UnsafeBufferPointer with negative count
Swift/AssertCommon.swift
Not enough bits to represent a signed value
Registering.
v16@?0@"<OS_xpc_object>"8
Checked in.
Checking in: Updating criteria to %{public}s
Unable to set state to CONTINUE.
Received new activity '%lx', but already have an existing one %lx.
%lx: Running.
Found %ld task managers for %ld accounts.
%lx: Starting back-filling messages on task manager %lx.
com.apple.email.back-fill-message-bodies
BackFillMessageBodyActivity
MFBackFillingMessageBodyDownloadRequest
NSObject
q16@0:8
#16@0:8
@24@0:8:16
_TtCC7Message18PersistenceAdaptor19ClientStateObserver
token
persistenceAdaptor
v16@?0@"NSNotification"8
Message.ClientStateObserver
init()
Message/ClientState.swift
Message/Configuration.swift
No account while trying to create credentials.
Renewing OAuth credentials.
v24@?0Q8@"MFError"16
OAuth credentials will expire in %ld seconds.
OAuth credentials did expire %ld seconds ago.
Failed to renew credentials: %@
Failed to renew credentials.
Did renew OAuth credentials.
Missing details for using oAuth Token auth for account 
%{sensitive,mask.mailacco}s
 %{public}s
Adding oAuth Token auth for account 
%{sensitive,mask.mailacco}s
 %{public}s
Missing details for using Apple Token auth for account 
%{sensitive,mask.mailacco}s
 %{public}s
Adding Apple Token auth for account 
%{sensitive,mask.mailacco}s
 %{public}s
Missing username/password for account 
%{sensitive,mask.mailacco}s
 %{public}s
Adding username + password auth for account 
%{sensitive,mask.mailacco}s
 %{public}s
PLAIN
Unsupported auth method 
%{public}s
 for account 
%{sensitive,mask.mailacco}s
 %{public}s
No auth schemes for account 
%{sensitive,mask.mailacco}s
 %{public}s
_TtCE7MessageV16IMAP2Persistence11Environment7Wrapped
environment
Index out of range
Swift/ContiguousArrayBuffer.swift
Down-casted Array element failed to match the target type
Expected 
UInt8
 but found 
inout rules were violated: the array was overwritten
Swift/ArrayBuffer.swift
v16@?0@"<ECTransferMessageActionResultsBuilder>"8
v16@?0@"<ECFlagChangeMessageActionResultsBuilder>"8
v16@?0@"<ECMessageFlagsBuilder>"8
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Message/IMAPPersistence/Shared/Flags.swift
v16@?0@"<ECMessageFlagChangeBuilder>"8
Found %ld (limit %ld) messages with changed flags.
Only found %ld server messages for %ld flag changes.
Found invalid UID '%{public}s' while looking for deleted messages.
Found invalid UID '%{public}s' while looking for flag changes.
listUnsubscribe
remoteID
flags
NSCopying
T#,N,R
MFSwiftIMAPMailboxTaskManager
v24@0:8@16
@32@0:8@16@24
library
mailbox
taskManager
T@"MFMailMessageLibrary",N,&,Vlibrary
B16@0:8
q32@0:8@16Q24
q40@0:8q16@24Q32
@32@0:8@16^B24
@24@0:8@16
B56@0:8@16{_NSRange=QQ}24^B40@48
@44@0:8@16I24@28^@36
v24@0:8i16B20
v40@0:8@16@24@32
v20@0:8B16
canFetchMessageIDs
canFetchSearchResults
Message/IMAPMailboxTaskManager.swift
replayAction: should not get called with new IMAP stack
Message.IMAPMailboxTaskManager
MFIMAPMailboxTaskManager
q40@0:8Q16@24Q32
T@"MFMailMessageLibrary",N,&
@"MFMailMessageLibrary"16@0:8
v24@0:8@"MFMailMessageLibrary"16
q32@0:8@"NSSet"16Q24
q40@0:8Q16@"NSString"24Q32
@"NSData"32@0:8@"MFLibraryMessage"16^B24
@"NSData"24@0:8@"MFLibraryMessage"16
B56@0:8@"MFMimePart"16{_NSRange=QQ}24^B40@"MFProgressFilterDataConsumer"48
@"NSData"32@0:8@"MFMessage<MFIMAPMessage>"16^B24
@"MFMailMessageStoreSearchResult"44@0:8@"MFMessageCriterion"16I24@"NSDate"28^@36
v40@0:8@"NSArray"16@"NSDictionary"24@"NSDictionary"32
@"ECLocalMessageActionResults"24@0:8@"ECLocalMessageAction"16
@"NSSet"24@0:8@"NSSet"16
_TtC7Message25InProgressMessageDownload
existingHeaders
newMessageHeaders
concatenators
sections
Invalid state for section '%{public}s' data for %u.
Added %ld bytes for section '%{public}s' for %u.
Completed section '%{public}s' for %u (%ld) bytes.
Wrong header type for %u.
InProgressMessageDownload already has new headers for %u.
Added message header for %u.
Failed to combine MIME parts: %@
No part '%{public}s' in message UID %u.
Range requires lowerBound <= upperBound
Swift/Range.swift
Double value cannot be converted to Int because it is either infinite or NaN
Double value cannot be converted to Int because the result would be less than Int.min
Double value cannot be converted to Int because the result would be greater than Int.max
_TtCC7Message18PersistenceAdaptor18MailboxNameMapping
pathSeparator
_TtC7Message24MailboxPersistenceHelper
mailboxURL
store
serverMessagePersistence
messageChangeManager
actionPersistentID
messagePersistentID
Message/MailboxPersistenceHelper.swift
Message/MailboxTree.swift
Failed to update local mailboxes: %@
Found %ld local mailbox(es).
\Sent
\Junk
\Flagged
\All
Creating new top level local mailbox '%{sensitive,mask.mailbox}s'.
Creating new local mailbox '%{sensitive,mask.mailbox}s' inside parent '%{sensitive,mask.mailbox}s.'
_TtC7Message23MessagesBeingDownloaded
elements
Clearing state for in-progress download of message %u in '%{sensitive,mask.mailbox}s'
Received message body segment for unknown message %u.
_TtCV7Message30MessageSectionDataConcatenator13TemporaryFile
section.XXXXXXXXXXXXXXXX
Message/MessageSectionDataConcatenator.swift
sourceUID
destinationPersistentID
v16@?0@"<ECIMAPServerMessageBuilder>"8
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Message/IMAPPersistence/Shared/MoveAndCopy.swift
Message/MoveAndCopy.swift
Action has no target mailbox for move/copy action %s
Unable to get target mailbox name for URL '%s' for move/copy action %s
Unable to create MoveReference for item in move/copy action %s
Invalid source UID '%s' in move/copy action %s
Received a new UID %u from the server, but there
s no local destinationPersistentID.
Unable to find action item for move/copy '%s'
Received didMoveOrCopyMessages, but the opaque ID can
t be decoded.
Received didMoveOrCopyMessages, but the local action no longer exists.
Missing information for user-initiated download.
[%{sensitive,mask.mailbox}s] Requesting download of %u in '%{sensitive,mask.mailbox}s'
_TtC7Message18PersistenceAdaptor
_nextActionID
_sendReply
messagesBeingDownloaded
_mailboxPathSeparator
didTearDown
lastActivity
emailActivities
statusIsolationQueue
workQueue
opaqueIDCoder
nameMapping
_allLocalMessageActions
_allLocalMailboxActions
lastKnownLocalAction
downloads
clientStateObserver
cancelationToken
runningSyncs
currentBackFillSync
Action %{public}s failed: %@
UnsafeRawBufferPointer with negative count
Swift/UnsafeRawBufferPointer.swift
UnsafeMutableRawBufferPointer.copyMemory source has too many elements
UnsafeMutableRawPointer.copyMemory with negative count
Swift/UnsafeRawPointer.swift
Swift/StringTesting.swift
UnsafeMutableRawPointer.initializeMemory with negative count
UnsafeMutableRawPointer.initializeMemory overlapping range
UnsafeMutableBufferPointer with negative count
newElements.underestimatedCount was an overestimate
Swift/Array.swift
Division results in an overflow
Division by zero
UnsafeMutablePointer.moveInitialize with negative count
UnsafeMutablePointer.initialize with negative count
UnsafeMutablePointer.initialize overlapping range
Attempt to copy contents into nil buffer pointer
Insufficient space allocated to copy array contents
Insufficient space allocated to copy string contents
Swift/StringUTF8View.swift
invalid Collection: more than 'count' elements in collection
invalid Collection: less than 'count' elements in collection
String index is out of bounds
%ld download requests completed.
Ignoring failure to create mailbox '%{sensitive,mask.mailbox}s'.
Got didUploadMessage but opaque data is invalid. Ignoring.
Got didUploadMessage but opaque data does not match any local actions. Ignoring.
Got sendMessageDataForUpload but opaque data is invalid. Ignoring.
Got sendMessageDataForUpload but opaque data does not match any local actions. Ignoring.
No destination message for local action. Ignoring.
Unable to encode message as upload data. Ignoring.
No downloaded data for %u in '%s' found.
findNewestMessagesMissingSections in %{sensitive,mask.mailbox}s: %ld UIDs
Looking up UIDs in %{sensitive,mask.mailbox}s in %{public}s.
Received %ld remote mailbox(es). Returning %ld local mailboxes.
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Message/IMAPPersistence/Shared/PersistenceAdaptor.swift
Completed sync request(s) %s.
Still running %ld sync(s) (%s) after completing %ld sync(s).
Sync #%u was not in the list of running syncs. Ignoring.
v12@?0I8
Deleting all server messages in '%s' due to validity change: %u 
 0x%x
Message/PersistenceAdaptor.swift
Failed to parse headers for some messages (%ld vs. %ld). Skipping.
Removing messages in range %s, keeping %{public}s
Found %ld existing messages to be removed in range %{public}s.
Deleting %ld messages in range %{public}s.
No persisted message for UID %u.
Did download all section for UID %u: %ld bytes, isPartial: %{BOOL}d 
Unable to get message data for message upload. Ignoring.
Setting UID %u on APPEND destination '%s'
Unable to encode move/copy reference.
UnsafeMutableRawBufferPointer with negative count
Did create local modifications.
Created %ld event updates from %ld local actions.
Retrieving new local actions (last ID = %lld).
Unable to get local actions.
No new local actions found. Ignoring.
Last local actions has an invalid messageActionPersistentID.
Got %ld new local actions found, new last ID: %lld.
Request to stop back-fill, but no back-fill is running.
Stopping back-fill sync (#%u) and reporting as 
has pending work
 to xpc.
Back-fill sync is already running (#%u).
Requesting sync #%u, kind: %{public}s, mailbox count: %ld. Running syncs count: %ld
backFill
userInitiated
push
powerNap
periodic
Back-fill sync (#%u) completed, but new back-fill sync is running (#%u).
Completing back-fill sync (#%u).
Assertion failed
com.apple.email.PersistenceAdaptor.statusIsolationQueue
com.apple.email
PersistenceAdaptor.
com.apple.mail.MFSwiftIMAPTaskManager.Persistence/
v16@?0@8
com.apple.mail.MFSwiftIMAPTaskManager.action-id-isolation
MFSwiftIMAPTaskManager
persistenceWorkloop
makeEngineAndAdaptor
_engine
_adaptor
engineIsolation
bodyFetchContext
Message1
Message2
MFSwiftIMAPBodyFetchContext
TaskManager.BodyFetchContext
Message.BodyFetchContext
Message/TaskManager.swift
[%{public}s] Ignoring 'addLocalAction'.
[%{public}s] Ignoring 'renameMailbox'.
[%{public}s] Ignoring 'deleteMailbox'.
[%{public}s] Ignoring 'createMailbox'.
[%{public}s] Account changed. Re-creating engine and adaptor.
[%{public}s] Setting engine and adaptor. (%{BOOL}d, %{BOOL}d)
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Message/IMAPPersistence/Shared/TaskManager.swift
com.apple.email.TaskManager.engineIsolation
Message.TaskManager
[%{public}s] Unable to create engine configuration for account.
com.apple.mail.MFSwiftIMAPTaskManager
com.apple.mail.MFSwiftIMAPTaskManager.main
TaskManager.
MFTaskManager
Swift/ClosedRange.swift
Fatal error
(Node in _0867628E3482960B71C3EBACEC5CAE06)
NSArray element failed to match the Swift Array Element type
Expected 
_TtCVV13IMAP2Behavior5State12LocalMailbox6Logger
ID: '%@' sync: %d steps: %d
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Marking step %s as complete
Swift/Dictionary.swift
Swift/NativeDictionary.swift
Duplicate values for key: '
%s%.*hhx%s%{sensitive,mask.mailbox}s%s Mailbox has pending updates while being deselected.
LocalMailboxRemoved
%s%.*hhx%s Need to de-select %ld locally known mailboxes.
%s%.*hhx%s Updated %ld locally known mailboxes.
%s%.*hhx%s Removed %ld locally known mailboxes.
%s%.*hhx%s Added %ld locally known mailboxes.
%s%.*hhx%s Received %ld locally known mailboxes.
%s%.*hhx%s Persistence passed list of mailboxes with duplicate names.
%s%.*hhx%s Setting %ld visible mailboxes. 1st one is '%{sensitive,mask.mailbox}s'
%s%.*hhx%s Setting visible mailboxes to none.
%s%.*hhx%s Setting %ld download requests.
MailboxSyncState(messageCount: 
, uidValidity: 0x
), syncSteps: completed: {}, restart: {}, messagesWithTemporaryUploadFailure: 
%s%.*hhx%s%{sensitive,mask.mailbox}s%s Received expunge %u, but mMessage is already zero.
%s%.*hhx%s%{sensitive,mask.mailbox}s%s Received expunge %u. Message count is now %ld.
%s%.*hhx%s%{sensitive,mask.mailbox}s%s Updating message count to %u
%s%.*hhx%s%{sensitive,mask.mailbox}s%s Updating highest mod-seq to %llu
%s%.*hhx%s%{public}s%s Attempting to store HIGHESTMODSEQ, but PendingServerResponses does not support CONDSTORE.
%s%.*hhx%s%{sensitive,mask.mailbox}s%s Inserting flag/label change without UID. Sequence number %u.
%s%.*hhx%s%{sensitive,mask.mailbox}s%s Inserting flag/label change for UID %u.
changesWithoutUID
%s%.*hhx%s%{sensitive,mask.mailbox}s%s Mailbox supports CONDSTORE, but flag change has no MODSEQ.
newModificationSequenceValue
commandsToWaitOn
%s%.*hhx%s Adding mailbox '%{sensitive,mask.mailbox}s'
    %s%.*hhx%s     Server support: move: %{BOOL}d,     Gmail labels: %{BOOL}d',     cond-store: %{BOOL}d,     message-seq-numbers: %{BOOL}d
_TtCV13IMAP2Behavior5State6Logger
%s%.*hhx%s Received environment update.
UpdateLocalFlags
ExpungeServerMessages
MoveAndCopyMessages
UploadFlagChanges
DetectFlagChangesInRecent
DetectFlagChanges
DetectRemovedMessagesInRecent
DetectRemovedMessages
FindPendingAttachmentDownload
FindPendingTextDownload
FindMissingMessages
userInitiatedDownload
mailboxesToSelect
mostRecentPathAttributes
runningSyncRequests
mailboxesNeedToBeUpdated
downloadRequests
userVisibleMailboxes
authenticatedTask
highestModificationSequence
messagesWithTemporaryUploadFailure
pendingServerResponses
pendingPersistenceUpdates
userInitiatedDownloadUIDs
mailboxOfInterest
selectedConnection
userInitiatedDownloads
supportsGmailLabels
supportsCondStore
bogusSequenceNumberBehavior
completedCommandCount
completedActionCount
needsToUploadMessages
needsToUploadFlagChanges
needsToMoveAndCopyMessages
messagesPendingTextDownload
messagesPendingAttachmentDownload
messagesWithDownloadFailures
highestModificationSequenceValue
%s%.*hhx%s Updating running download requests.
%s%.*hhx%s No new and no running tasks for '%{sensitive,mask.mailbox}s'. Marking as done.
%s%.*hhx%s Re-starting blocked non-mailbox tasks.
%s%.*hhx%s Pruned %ld completed tasks.
%s%.*hhx%s Failed to de-select mailbox '%{sensitive,mask.mailbox}s'
%s%.*hhx%s De-selected '%{sensitive,mask.mailbox}s' on %{public}s
BehaviorAction
ID: %u name: %@ %u %u
BehaviorCommand
tag: %@ name: %@ %u %u %u
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Marking task as complete.
%s%.*hhx%s%{public}s%s Marking task as complete.
%s%.*hhx%s%{public}s%s Sent '%{public}s' command as %s
%s%.*hhx%s [%{sensitive,mask.mailbox}s] Marking task '%{public}s' as failed.
%s%.*hhx%s Marking task '%{public}s' as failed.
%s%.*hhx%s [%{sensitive,mask.mailbox}s] Marking task '%{public}s' as failed because we de-selected its mailbox.
%s%.*hhx%s%{public}s%s Completed '%{public}s' (%{public}s, #%u)
%s%.*hhx%s%{public}s%s Completed action '%{public}s' (#%u)
BehaviorTask
A ID: |%{sensitive}@|
M ID: |%{sensitive}@| mailbox: |%{sensitive}@|
%s%.*hhx%s Pruning task %{public}s
%s%.*hhx%s Pruned %ld mailbox task(s) without mailbox affinity.
%s%.*hhx%s%{public}s%s Pruning. No mailbox affinity, not targeting mailboxes-to-be-selected.
%s%.*hhx%s Connection %{public}s failed while %ld command(s) were running. No mailbox selected.
%s%.*hhx%s Connection %{public}s failed while %ld command(s) were running and '%{sensitive,mask.mailbox}s' was selected.
Create Mailboxes
%s%.*hhx%s%{public}s%s Failed to create '%{sensitive,mask.mailbox}s'.
%s%.*hhx%s%{public}s%s Did create '%{sensitive,mask.mailbox}s'.
%s%.*hhx%s%{public}s%s Received %s for '%{sensitive,mask.mailbox}s'.
%s%.*hhx%s%{public}s%s Created task for %ld mailboxes, first: '%{sensitive,mask.mailbox}s'.
%s%.*hhx%s%{public}s%s Created task for %ld mailboxes.
%s%.*hhx%s%{public}s%s Created task for '%{sensitive,mask.mailbox}s'
%s%.*hhx%s%{public}s%s Failed to delete '%{sensitive,mask.mailbox}s'.
%s%.*hhx%s%{public}s%s Did delete '%{sensitive,mask.mailbox}s'.
%s%.*hhx%s%{public}s%s Skipped deleting '%{sensitive,mask.mailbox}s' because it's in use.
Delete Mailboxes
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Setting mailbox HIGHESTMODSEQ to %llu.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removed %ld changes without UID, still %ld remaining.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removed all changes without UID.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Fetch completed. Got %ld messages for UID range %s.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Ignoring sequence number.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Lowest sequence number is %u, expected 1. Numbers are non-contiguous.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Sequence numbers are non-contiguous.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Lowest sequence number is %u, expected 1.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] No lowest sequence number, expected 1.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Received duplicate sequence number %u with UID %u.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Received duplicate UID %u with sequence number %u.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removing messages in range %s, keeping %ld UIDs.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Mailbox is empty. DetectChangesToMessages will not do any updates.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task. Fetching highest-mod-seq: %{BOOL}d, no existing
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task. Fetching highest-mod-seq: %{BOOL}d, existing: %s
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removed all %ld EXPUNGE messages.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removed %ld EXPUNGE messages, still %ld remaining.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Fetch completed. Got %ld messages in UID range of interest %{public}s.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removing  %ld messages in range of interest %{public}s, keeping %ld UIDs.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removing messages %{public}s in range of interest %{public}s, keeping %ld UIDs.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Not removing any messages in range of interest %{public}s.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task. UID range of interest: %{public}s
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Did not remove any pending expunge.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Mailbox is empty. Did not remove any messages.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removed %ld messages.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removed UIDs %{public}s.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removed no messages.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removed %ld pending expunge, %ld left.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Search completed without any UIDs
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Search completed. Got %ld UIDs in range: %{public}s.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removing %ld messages in %{public}s, keeping %ld number of UIDs.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removing %ld messages in %{public}s, keeping UIDs %{public}s.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task. last-seed-UID: %u
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removed %ld messages in %{public}s.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removed UIDs %{public}s in %{public}s.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removed no messages in %{public}s.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Search completed. Found %ld UIDs locally, %ld on server in range %{public}s.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] '%s'
attachment
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task for %{public}s %s '%{public}s' -- full message download for %{public}s
text
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task for %{public}s %s '%{public}s'
Downloading message sections data (
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Completed fetching Body Structure for messages %s
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Requested to download %ld sections for message %u, but we don
t have a body structure for this message.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Adding %ld sections for message %u. Downloading message headers: %{BOOL}d
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Requested to download %ld sections for message %u.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Requested to download %ld sections for message %u -- but sections for this message have already been added.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] UID %u: Adding multi-part section '%{public}s'
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] UID %u: Adding section '%{public}s'
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Received body structure for message %u.
%s%.*hhx%s%{public}s%s No header data in response for '%{public}s'
Unable to append body section data for UID %u. Marking as failed. (%@)
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] UID %u: Received body section data for section '%{public}s'
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] UID %u: Received BodySection with empty data for section '%{public}s'
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] UID %u: All data for section '%{public}s' has been received.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] UID %u: Received %ld bytes for section '%{public}s'
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] UID %u: Received %ld bytes (offset %u) for section '%{public}s'
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Completed download of %ld sections for message %u.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Completed download for message %u, but we don
t have a body structure for this message.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] UID %u: Forwarding %ld bytes for section '%{public}s' to the persistence.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Requesting sections to download for message %u.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Fetching headers for message %u
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Expunge failed.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Expunge completed.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] No more missing messages.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Still missing %ld messages (%ld completed). Will run again.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] No new messages.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] %ld new message(s).
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task with last-seen-UID %u (persisted) -> %u (new)
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task with missing %ld UIDs, last-seen-UID %u (persisted) -> %u (new)
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task with missing %{public}s, last-seen-UID %u (persisted) -> %u (new)
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Limiting new UIDs to %ld UIDs: %{public}s.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Found %ld UIDs on server, %ld UIDs locally -> found %ld new UIDs missing locally.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Found %ld UIDs on server, %ld UIDs locally -> found UIDs %{public}s to be missing locally.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Found %ld UIDs on server, %ld UIDs locally -> found no UIDs to be missing locally.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] No missing message; last seen UID: nil
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] No missing message; last seen UID: %u
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Total missing message count: %ld; %ld done; last seen UID: nil
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Total missing message count: %ld; %ld done; last seen UID: %u
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task with last-seen-UID %u, ranges %s, UID limit: %ld
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Persistence returned no messages to download.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Persistence returned UIDs %{public}s to download.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Persistence returned %ld (min:  %u, max: %u) messages to download.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Adding %{public}s (%ld out of %ld) to download.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Adding %ld messages (out of %ld) to download.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task. Excluding %ld, %{public}s
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task. Excluding %{public}s, %{public}s
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task. %ld identifier(s).
%s%.*hhx%s%{public}s%s Created task.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Persistence has more messages to move/copy. Will mark as needing to re-run.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Task is completing, but not done.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Marking mailbox as needing to run upload-messages.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Marking mailbox '%{sensitive,mask.mailbox}s' as needing to run find-missing-messages.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Marking no more messages needing move or copy.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Server failed to %{public}s messages %{public}s: %s
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Server completed %{public}s of messages %{public}s without destination UIDs
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Server completed %{public}s of messages %{public}s with destination UIDs %s and UIDValidity 0x%x
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Persistence returned %ld moves / copies.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Copying messages %{public}s.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Marking source messages %{public}s as deleted.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task. Server supports move: %{BOOL}d
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Ignoring message data.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Ignoring UID %u outside of range-of-interest %{public}s.
%s%.*hhx%s%{public}s%s Created task for %s.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Number of changes to-be-sent to the persistence: %ld.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task. highest-mod-seq local: %llu, changes without UID: %ld, server: %llu
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Created task. Local UID validity: 0x%x
%s%.*hhx%s%{public}s%s Failed to rename '%{sensitive,mask.mailbox}s' to '%{sensitive,mask.mailbox}s'.
%s%.*hhx%s%{public}s%s Did rename '%{sensitive,mask.mailbox}s' to '%{sensitive,mask.mailbox}s'.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Updating local HIGHESTMODSEQ to %llu.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Clearing local HIGHESTMODSEQ.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] No change to local HIGHESTMODSEQ.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Sent %ld changes to the persistence.
%s%.*hhx%s%{public}s%s Got %ld flag/label changes.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Persistence has more flag changes to upload. Will mark as needing to re-run.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Marking no more flag changes pending upload.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Received local flag changes for %ld messages.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Grouped the local flag changes into %ld message sets. Expecting %ld commands.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] No flag changes for messages %s
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Removing all messages pending upload.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Persistence has more messages to upload. Will mark as needing to re-run.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] APPEND failed.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] APPEND failed with 
No, try create
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] APPEND succeeded without UIDValidity.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] APPEND succeeded with UID %u.
%s%.*hhx%s%{public}s%s [%{sensitive,mask.mailbox}s] Unexpectedly received multiple .uploadMessages
ConnectionEvent.betterPathDidChange
ConnectionEvent.pathAttributesDidChange
ConnectionEvent.stateDidChange
ConnectionEvent.empty
ConnectionEvent.mailboxSelected
no mailbox
mailbox %@
ConnectionEvent.commandDidComplete
tag: %@ response: %hhu
ConnectionEvent.untagged
response: %hhu
ConnectionEvent.connectionDidFail
error: %hhu
ConnectionEvent.connectionDidAuthenticate
PersistenceEvent.update.moveOrCopyMessages
mailbox: '%{sensitive}@' message count: %lld {%u %u}, isLast: %d
PersistenceEvent.update.uploadMessagesWithChangedFlagAfterCopy
mailbox: '%{sensitive}@' message count: %lld
PersistenceEvent.update.uploadChangedFlags
PersistenceEvent.update.uploadMessages
mailbox: '%{sensitive}@' count: %lld, isLast: %d
PersistenceEvent.update.downloadSectionData
kind: %hhu UID: %u sections: '%{public}@' mailbox: '%{sensitive}@' messageHeaders: %d
PersistenceEvent.update.downloadSectionsInMessages
kind: %hhu messageCount: %d mailbox: '%{sensitive}@'
PersistenceEvent.update.didFindMessageUIDs
mailbox: '%{sensitive}@' UID count: %u range UID cound: %u
PersistenceEvent.update.setUIDsForDownloadRequests
mailbox: '%{sensitive}@' UID count: %u
PersistenceEvent.update.setDownloadRequests
count: %u 
PersistenceEvent.update.setUserVisibleMailboxes
PersistenceEvent.update.sync
PersistenceEvent.update.setLocalMailboxes
PersistenceEvent.update.environmentDidChange
power: %@, foreground? %u, locked? %u, thermals: %@
PersistenceEvent.actionDidComplete
ID: %u
PersistenceEvent.update.messageDataForUpload
mailbox: '%{sensitive}@' id: %.*P flags: %{public}@ date: %g data %lld
%s%.*hhx%s%{public}s%s Received 'BAD'
%s%.*hhx%s%{public}s%s Received 'BAD: %s'
%s%.*hhx%s%{public}s%s Received 'NO'
%s%.*hhx%s%{public}s%s Received 'NO: %s'
%s%.*hhx%s%{public}s%s Received bytes in range %s -- some of which have previously been received: %s
MESSAGES
UIDNEXT
UIDVALIDITY
UNSEEN
HIGHESTMODSEQ
RFC822
infinity
inet_pton(addressFamily:addressDescription:address:)
inet_ntop(addressFamily:addressBytes:addressDescription:addressDescriptionLength:)
NIOIMAPCore2/Body.swift
Must contain at least one number
_ByteBufferSlice { 
ByteBuffer { readerIndex: 
, readableBytes: 
, storageCapacity: 
readable bytes (max 1k): 
_TtCV12NIOIMAPCore210ByteBuffer8_Storage
capacity
bytes
allocator
NIOIMAPCore2/ByteBuffer-views.swift
offset element 
 (bufferCapacity: 
: Broken strerror, unknown error: 
_TtC12NIOIMAPCore219NIONetworkInterface
name
address
netmask
broadcastAddress
pointToPointDestinationAddress
multicastSupported
interfaceIndex
_TtCV12NIOIMAPCore216NIONetworkDeviceP33_0376AFE35F6C75FF3DBC73C1B95A56AC7Backing
NIOIMAPCore2/SocketAddresses.swift
INSIDE_LITERAL: 
 bytes required)
 is out of range
QUOTED-PRINTABLE
"MESSAGE" "RFC822"
CREATE-SPECIAL-USE
ANNOTATE-EXPERIMENT-1
The path separator must be an ascii value
 cannot contain the separator 
Need a path separator to make a sub mailbox
VANISHED (EARLIER) 
selected-delayed
XAPPLEPUSHSERVICE 
XAPPLEPUSHSERVICE
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/IMAPv4/Modules/Sources/NIOIMAPCore/ParserLibrary.swift
Unknown XAPPLEPUSHSERVICE response type: 
Invalid 
aps-version
Expected 
aps-topic
, not 
COMPRESSIONACTIVE
AUTHORIZATIONFAILED
AUTHENTICATIONFAILED
URLMECH INTERNAL
METADATA NOPRIVATE
METADATA TOOMANY
METADATA MAXSIZE 
METADATA LONGENTRIES 
.HEADER.FIELDS.NOT (
.HEADER.FIELDS (
HEADER.FIELDS.NOT 
lower upper 
NIOIMAPCore2/RangeSetStorage.swift
Can't access elements of empty storage
_TtC12NIOIMAPCore221ChannelHandlerContext
responses
integer too large
NIOIMAPCore2/GrammarParser+Commands.swift
This should never happen
 which was not a status attribute
Invalid internal date.
Building TimeZone from 
No month match for 
Invalid date components 
Expected 1 or 2 bytes, got 
Mod-seq value is too large.
Can't make unknown message identfiier from 
Expected quoted char found 
Didn't find parser for 
Invalid response code: 
PERMANENTFLAGS (
Sequence set is empty.
Sequence number out of range.
tag missing for SearchCorrelator
Not all components present for SearchCorrelator
Invalid UID validity.
UID set is empty.
NIOIMAPCore2/Pair.swift
' is out of range
Expect bchar, got 
Expect achar, got 
Expected 2 hex digits, got 
Expected sub-delims-sh char, got 
Expected unreserved char, got 
Found invalid character in 
Invalid escape in quoted string '
Found NUL byte in literal
Invalid character
Couldn't read string from buffer
 is not a valid fchar
Partial range is invalid: <
Range is invalid: <
Partial range count is invalid.
Partial range start is invalid.
Failed to construct esearch source options
Failed to unwrap ESearchScopeOptions which should be impossible.
Failed to unwrap mailboxes which should be impossible
catenate extension
NIOIMAPCore2/ResponseParser.swift
Unexpected state 
none of the options match
whilst looking for 
, found no bytes
Expected space, found 
Found unexpected 
 is not a number
Need one of encoded user or iauth
Need at least one UID
case insensitively looking for 
case sensitively looking for 
Cannot use MIME with an empty section part
first second 
NIOIMAPCore2/_HashTable+BucketIterator.swift
Hash table has no unoccupied buckets
, reservedScale: 
_HashTable.Header
_HashTable.UnsafeHandle
_HashTable.Storage
  load factor: 
BucketIterator(scale: 
_TtCV12NIOIMAPCore210_HashTable7Storage
key value 
Unkeyed container reached end before value in key-value pair
Duplicate key at offset 
OrderedDictionary<
NIOIMAPCore2/OrderedDictionary+Deprecations.swift
Decoded elements aren't unique (first duplicate at offset 
offset element associatedWith 
_TtCV12IMAP2Helpers10AtomicFlag7Storage
atomic_flag_clear
atomic_flag_test_and_set
_TtC12IMAP2Helpers12StateCapture
handle
^v16@?0^v8
os_state_add_handler
Unable to encode data for state capture of %{public}s
os_state_remove_handler
dispatch_workloop_create
_TtC12IMAP2Tracing20EngineTracingIDOwner
tracingID
com.apple.email.IMAP.tracing.activeIDIsolation
com.apple.email.IMAP
UID SEARCH (extended)
EEE',' d MMM y HH':'mm':'ss ZZZ
EEE',' d MMM y HH':'mm':'ss zzz
EEE MMM d HH':'mm':'ss zzz y
d MMM y HH':'mm':'ss ZZZ
d MMM y HH':'mm':'ss zzz
EEE',' d MMM y HH':'mm ZZZ
EEE',' d MMM y HH':'mm zzz
d MMM y HH':'mm ZZZ
d MMM y HH':'mm zzz
'"'dd'-'MMM'-'y HH':'mm':'ss ZZZ'"'
EEE MMM d HH':'mm':'ss y
y'-'MM'-'d HH':'mm':'ss ZZZ
EEE',' d MMM y HH':'mm':'ss
d MMM y HH':'mm':'ss
MM'/'d HH':'mm a
MM'/'d'/'y HH':'mm a
MMM d',' y  HH':'mm':'ss a vvvv
EEE',' MMM d y HH':'mm':'ss ZZZ
EEE',' MMM d',' y HH':'mm zzz
EEE MMM d',' y HH':'mm':'ss vvvv
MMMM d',' y HH':'mm':'ss zzz
EEE',' MMM d',' y 'at' HH':'mm a
 %a, %d %b %Y %H:%M:%S %z 
 %d %b %Y %H:%M:%S %z 
 %a, %d %b %Y %H:%M %z 
 %d %b %Y %H:%M %z 
 "%d-%b-%Y %H:%M:%S %z" 
 %a %b %d %H:%M:%S %Y 
 %Y-%m-%d %H:%M:%S %z 
 %a, %d %b %Y %H:%M:%S 
 %d %b %Y %H:%M:%S 
 %m/%d %H:%M %p 
 %m/%d/%Y %H:%M %p 
 %a, %b %d %Y %H:%M:%S %z 
 %a, %b %d, %Y at %H:%M %p 
noSelect
marked
unmarked
nonExistent
noInferiors
subscribed
remote
hasChildren
hasNoChildren
archive
drafts
flagged
junk
sent
trash
<unable to decode>
Binary, Literal-
Binary, Literal+
IMAP2Protocol/InternetMessageDateParsing.swift
%a, %d %b %Y %H:%M:%S %z
%+05d
IMAP.protocol.dateFormatter
IMAP2Protocol/NIOEncoder.swift
 aps-account-id 
 aps-device-token 
Received invalid data frame from server: %{sensitive}.*P
IMAP2Protocol/ServerResponseTranscoder.swift
authenticationChallenge
fetch(streamingEnd)
fetch(streamingBytes)
fetch(streamingBegin)
fetch(simpleAttribute)
untagged(applePushService)
untagged(metadata)
untagged(quotaRoot)
untagged(enableData)
untagged(capabilityData)
untagged(messageData)
untagged(mailboxData)
untagged(conditionalState)
downloadRequestsDidComplete
getUIDsForDownloadRequests
activityDidChange
failedToCreateMailboxOnServer
connectionStatusDidChange
didMoveOrCopyMessages
findMovedOrCopiedMessages
findMessagesWithFlagChangeAppliedAfterCopy
findMessagesWithChangedFlags
failedToUploadMessage
didUploadMessage
sendMessageDataForUpload
findMessagesToBeUploaded
didDownloadAllSections
appendMessageSectionData
messageHeadersDownloaded
chooseMessageDataToDownload
findNewestMessagesMissingSections
updateMailboxHighestModificationSequenceValue
updateMailboxLastSeenUID
removeUnknownMessages
createNewMessages
removeAllMessagesAndUpdateMetadata
didDeselectMailboxes
updateRemoteMailboxes
syncRequestsDidComplete
fetching messages done
fetching messages (
fetching messages (not started)
authenticationFailed
serverUnreachable
, thermal state: 
MessageFlagsWithModifications(flags: 
gray
purple
blue
green
yellow
orange
clear
notJunk
unknown
FlagsUpdate(unread: 
noop
idle
B24@0:8@16
[%.*hhx-%{public}s] Caught error processing Handshake query
[%.*hhx-%{public}s] Authentication plugin failed generating response
[%.*hhx-%{public}s] Authenticated with '%{public}s'.
[%.*hhx-%{public}s] Using authentication mechanism '%{public}s'.
IMAP2Connection/AuthenticationTaskState.swift
[%.*hhx-%{public}s] Only %ld of %ld credential(s) are allowed given the connection security.
[%.*hhx-%{public}s] No credentials are allowed given the connection security.
[%.*hhx-%{public}s] XOAUTH2 error (%{iec-bytes}ld)
[%.*hhx-%{public}s] Unable to decode XOAUTH2 error response.
[%.*hhx-%{public}s] XOAUTH2 error: status '%{public}s',  schemes '%{public}s',  scope '%{private}s'
[%.*hhx-%{public}s] XOAUTH2 error: %{public}.*P
[%.*hhx-%{public}s] Cancel.
[%.*hhx-%{public}s] Setting new delegate (better path available).
_TtC15IMAP2Connection17CommandConnection
connection
delegate
commandCounter
runningCommands
engineID
state
enqueuedEvents
idleKind
idleTimer
idleRefreshInterval
makeCredentials
getPushInformation
finishPushRegistration
pathAttributes
[%.*hhx-%{public}s] withEnqueuedSend() called while we already have enqueued events.
[%.*hhx-%{public}s] Trying to send nil enqueued events.
[%.*hhx-%{public}s] Connection did start TLS.
[%.*hhx-%{public}s] Received handshake query from server, but not in a state where we expect it: %@
[%.*hhx-%{public}s] Received handshake.
[%.*hhx-%{public}s] Command with unknown tag %s completed.
[%.*hhx-%{public}s] Command %s completed.
[%.*hhx-%{public}s] %s IDLE completed.
[%.*hhx-%{public}s] %s NOOP completed.
[%.*hhx-%{public}s] Connection did fail (%ld running command(s)): %@
[%.*hhx-%{public}s] Connection did fail: %s
[%.*hhx-%{public}s] No idle kind set.
[%.*hhx-%{public}s] %s IDLE is %ld seconds old (< %ld). Not refreshing.
[%.*hhx-%{public}s] Not sending IDLE. No mailbox selected.
[%.*hhx-%{public}s] Unable to enqueue NOOP.
[%.*hhx-%{public}s] Sending NOOP as %s
[%.*hhx-%{public}s] Unable to enqueue IDLE.
[%.*hhx-%{public}s] Sending IDLE as %s
[%.*hhx-%{public}s] Trying to enqueue event outside withEnqueuedSend.
[%.*hhx-%{public}s] Trying to send handshake reply, but no barrier command is running.
[%.*hhx-%{public}s] Finishing push registration.
[%.*hhx-%{public}s] Requesting credentials.
[%.*hhx-%{public}s] Requesting push information.
[%.*hhx-%{public}s] Received '%s' from network.
[%.*hhx-%{public}s] Received BYE (without resp-text).
[%.*hhx-%{public}s] Received BYE %s
[%.*hhx-%{public}s] Mailbox selection changed.
[%.*hhx-%{public}s] Connection did authenticate.
Connection.imapStateUpdate
_TtC15IMAP2Connection10Connection
logger
receiveTranscoder
delegateQueue
networkQueue
pendingHandshakeReplyCount
Connection.networkStateUpdate
[%.*hhx-%{public}s] Sent 'C: %{public}s'
[%.*hhx-%{public}s] Failed to send data: %@
[%.*hhx-%{public}s] Starting
[%.*hhx-%{public}s] Better path available: %{BOOL}d
[%.*hhx-%{public}s] Is viable: %{BOOL}d
[%.*hhx-%{public}s] Path did change. Constrained: %{BOOL}d, interfaces: %{public}s, IPv4: %{BOOL}d, IPv6: %{BOOL}d
[%.*hhx-%{public}s] state: <unknown>
[%.*hhx-%{public}s] state: cancelled
[%.*hhx-%{public}s] state: failed, %@
[%.*hhx-%{public}s] state: ready
[%.*hhx-%{public}s] state: preparing
[%.*hhx-%{public}s] state: waiting, %@
[%.*hhx-%{public}s] state: setup
[%.*hhx-%{public}s] Failed to transcode response: %@ -- %{public}s
authenticated(selected))
authenticated(selecting))
authenticated(none)
unauthenticated(done)
unauthenticated(waitingForTLS)
unauthenticated(startingTLS)
unauthenticated(failed)
unauthenticated(registeringForPush)
unauthenticated(requestingPushRegistrationInfo)
unauthenticated(enablingCompression)
unauthenticated(requestingCompression)
unauthenticated(identifyingServer)
unauthenticated(gettingPostAuthCapabilities)
unauthenticated(authenticating)
unauthenticated(requestingCredentials)
unauthenticated(gettingPreAuthCapabilities)
unauthenticated(checkingIfPreAuthIsAllowed)
unauthenticated(connecting)
connecting(cancelled)
connecting(failed)
connecting(ready)
connecting(preparing)
connecting(waiting)
connecting(setup)
[%.*hhx-%{public}s] Selecting mailbox '%{sensitive,mask.mailbox}s'.
[%.*hhx-%{public}s] Failed to select mailbox: %@
[%.*hhx-%{public}s] Received HandshakeQuery, but not in unauthenticated state.
[%.*hhx-%{public}s] All authentication mechanism failed.
[%.*hhx-%{public}s] Authentication failed.
[%.*hhx-%{public}s] Authentication completed.
[%.*hhx-%{public}s] Authentication completed with server %{public}s
[%.*hhx-%{public}s] Authentication is sending %{public}s.
[%.*hhx-%{public}s] Received did-start-TLS, but not in unauthenticated state.
_TtCO15IMAP2Connection7Deflate10Compressor
stream
currentKind
_TtCO15IMAP2Connection7Deflate12Decompressor
_TtCO15IMAP2Connection7DeflateP33_85B4B7D50F9E6C0051A8CAEBC1010C166Stream
kind
IMAP2Connection/Deflate.swift
sysctl(3) failed: 
Better path available did change
Path attributes did change
State did change
Did unselect mailbox
Connection did fail (
Connection did authenticated {
_TtC15IMAP2Connection6Framer
inputBuffer
outputBuffer
encodingOptions
compression
[%.*hhx-%{public}s] Error while handling output: %@
[%.*hhx-%{public}s] Unable to append command to output buffer. Invalid state. %@
[%.*hhx-%{public}s] Protocol error while sending. %@
[%.*hhx-%{public}s] Output buffer still holds %{iec-bytes}ld. Waiting for server response.
Connection.didSendData
%u - %u
[%.*hhx-%{public}s] Flushing %{iec-bytes}ld from output buffer to network (tags %s - %s).
[%.*hhx-%{public}s] Flushing %{iec-bytes}ld from output buffer to network (tag %s).
[%.*hhx-%{public}s] Flushing %{iec-bytes}ld (of total %{iec-bytes}ld) from output buffer to network (tags %s - %s).
[%.*hhx-%{public}s] Flushing %{iec-bytes}ld (of total %{iec-bytes}ld) from output buffer to network (tag %s).
[%.*hhx-%{public}s] Adding TLS to the protocol stack.
[%.*hhx-%{public}s] Enabling RFC 4978 compression.
imapEncodingOptions
imapEnableCompression
Message has no outbound content.
imapOutboundContent
[%.*hhx-%{public}s]: Failed to parse: %@. Buffer: %{sensitive}.*P
[%.*hhx-%{public}s]: Framing error: %@
[%.*hhx-%{public}s]: Framing error. Buffer: %{sensitive}.*P
[%.*hhx-%{public}s] parseInput() returned %{bool}d
[%.*hhx-%{public}s] failed to inflate received data.
[%.*hhx-%{public}s] Appending %{iec-bytes}ld to receive buffer. Now has %{iec-bytes}ld.
Connection.didReceiveData
[%.*hhx-%{public}s] IMAP framer loaded.
[%.*hhx-%{public}s] New IMAP framer
Connection.didEnqueue
Connection.didFailToSendData
Received invalid message.
MarketingProductName
kern.osproductversion
CFBundleShortVersionString
_TtCC15IMAP2Connection10Connection6Logger
[%.*hhx-%{public}s] Received command completion for unknown command '%{public}s'
registeringForPush
requestingPushRegistrationInfo
identifyingServer
enablingCompression
requestingCompression
gettingPostAuthCapabilities
requestingCredentials
gettingPreAuthCapabilities
checkingIfPreAuthIsAllowed
selectingMailbox
v8@?0
_TtC15IMAP2Connection5Timer
workItem
underlying
counter
[%.*hhx-%{public}s] Unexpected unableToGetPushResponse
[%.*hhx-%{public}s] Unable to get push response
[%.*hhx-%{public}s] Unexpected gotPushResponse
[%.*hhx-%{public}s] Unexpected setPushInformation
[%.*hhx-%{public}s] Unexpected identifiedServer
[%.*hhx-%{public}s] Unexpected enabledCompress
[%.*hhx-%{public}s] Unexpected serverAcceptedCompress
[%.*hhx-%{public}s] Server accepted compression.
[%.*hhx-%{public}s] Unexpected startTLS
[%.*hhx-%{public}s] Received unexpected credentials.
[%.*hhx-%{public}s] Credentials don't allow PREAUTH.
[%.*hhx-%{public}s] Authenticated with PREAUTH.
[%.*hhx-%{public}s] Received capabilities from server
[%.*hhx-%{public}s] Authentication failed with '%{public}s'.
[%.*hhx-%{public}s] Ignoring unexpected %s.
[%.*hhx-%{public}s] Server sent BYE.
[%.*hhx-%{public}s] Got post-auth capabilities: %s.
[%.*hhx-%{public}s] Got pre-auth capabilities: %s.
[%.*hhx-%{public}s] Untagged OK from server.
[%.*hhx-%{public}s] Received OK greeting from server.
[%.*hhx-%{public}s] Received OK greeting with capabilities from server: %s.
[%.*hhx-%{public}s] Received unexpected PREAUTH greeting from server.
[%.*hhx-%{public}s] Received PREAUTH greeting from server. Requesting credentials.
[%.*hhx-%{public}s] Not using TLS.
[%.*hhx-%{public}s] Connection is insecure, but server does not support STARTTLS.
[%.*hhx-%{public}s] Server supports STARTTLS and connection is insecure. Attempting STARTTLS.
[%.*hhx-%{public}s] Using TLS protocol %hu, cipher suite %hu
[%.*hhx-%{public}s] No connection available to send command.
[%.*hhx-%{public}s] Checking for new actions.
[%.*hhx-%{public}s] Received did-start-TLS from network, but we
re in the wrong state.
[%.*hhx-%{public}s] We ran STARTTLS, but the connection is not using TLS.
[%.*hhx-%{public}s] STARTTLS completed: %hu / %hu
[%.*hhx-%{public}s] We ran STARTTLS, but the connection is not secure: %hu.
_TtC22IMAP2ConnectionControl19BetterPathEvaluator
queue
makeUnderlyingConnection
coalesceDelay
[%.*hhx] Trying to promote connection generation %ld, but there
s no connection.
[%.*hhx] Promoting connection generation %ld.
[%.*hhx] Cancelling connection generation %ld
[%.*hhx] Cancelling connection generation %ld: %{public}s
[%.*hhx] Connection generation %ld state did change.
[%.*hhx] Did cancel connection %{public}s, generation %ld
[%.*hhx] Did create connection %{public}s (%llu), generation %ld
[%.*hhx] Did cancel timer.
[%.*hhx] Did create timer.
com.apple.email.imap.persistence
_TtC22IMAP2ConnectionControl6Engine
workloop
persistenceEventQueue
sendAction
logName
tracingIDOwner
betterPathEvaluator
didStart
isProcessingUpdates
pendingUpdates
externalState
lastConnectionStatus
stateCapture
%s%.*hhx%s Processing %ld update(s)
%s%.*hhx%s Processing %ld update(s) from network and persistence
%s%.*hhx%s Processing %ld update(s) from persistence
%s%.*hhx%s Processing %ld update(s) from network
com.apple.mail.IMAP.engine.
_TtC22IMAP2ConnectionControlP33_02737B06E3BD0A3D42A98FBBAE158A079EngineBox
_TtC22IMAP2ConnectionControl14ConnectionPool
configuration
connections
engine
nextConnectionID
backoff
backoffTimer
backoffLoggingRateLimit
lastError
lastStatus
[%.*hhx] Received authenticated connection with better path. Cancelling all (%ld) existing connection and switching to the new connection %{public}s (%llu).
CommandConnection
[%.*hhx] Connection %{public}s is cancelled.
[%.*hhx] Connection %{public}s failed.
[%.*hhx] Connection %{public}s: authentication failed.
[%.*hhx] Connection %{public}s is authenticated.
[%.*hhx] Connection %{public}s is unauthenticated.
[%.*hhx] Connection %{public}s is connecting.
[%.*hhx] Cancelling connection %{public}s.
[%.*hhx] Cancelling %ld (of %ld) connections since we
re above the connection limits (max idle: %ld, max: %ld).
[%.*hhx] Not cancelling any connection (count: %ld).
[%.*hhx] %ld connections are actively connecting.
[%.*hhx] Failed to send command '%{public}s' on connection %{public}s
[%.*hhx] Sent command '%{public}s %{public}s' on connection %{public}s
[%.*hhx] Pool has %ld connections.
[%.*hhx] Created connection %{public}s (%llu)
[%.*hhx] Backed off (failure count %ld). Not creating a new connection.
[%.*hhx] Attempt to send on connection %{public}s -- but it does not exist.
[%.*hhx] Mailbox '%{sensitive,mask.mailbox}s' is selected (or in progress) on connection %{public}s.
[%.*hhx] Will select mailbox '%{sensitive,mask.mailbox}s' on connection %{public}s for new mailbox affinity.
[%.*hhx] Created mailbox affinity for '%{sensitive,mask.mailbox}s' on connection %{public}s with mailbox already selected.
[%.*hhx] nil enqueued events after enqueueing.
[%.*hhx] withEnqueuedSend() called while we already have enqueued events.
[%.*hhx] Got callback for connection %{public}s but this connection is unknown to the pool.
[%.*hhx] Closing connection %{public}s. Remaining connection count: %ld.
[%.*hhx] Cancelling backoff timer.
[%.*hhx] Setting up backoff timer for %f s (count %ld) from now.
[%.*hhx] Backoff timer expired, but we still have to wait %f seconds.
[%.*hhx] Backoff timer has expired. Re-trying.
[%.*hhx] Failed to authenticate connection %{public}s.
[%.*hhx] Network error on connection %{public}s: %{public}s
[%.*hhx] Network error on connection %{public}s: TLS %d
[%.*hhx] Network error on connection %{public}s: DNS %d
[%.*hhx] Network error on connection %{public}s: posix %{darwin.errno}d
[%.*hhx] Connection %{public}s is in invalid continuation state.
[%.*hhx] Connection %{public}s failed to parse server response.
[%.*hhx] Connection %{public}s did close.
[%.*hhx] Mailbox selection changed on %{public}s.
[%.*hhx] %{public}s: -
[%.*hhx] %{public}s: '%{sensitive,mask.mailbox}s'
[%.*hhx] %{public}s: - *
[%.*hhx] %{public}s: '%{sensitive,mask.mailbox}s' * messageCount %ld, firstUnseenMessage %u, nextUID %u, uidValidity 0x%x, isReadOnly %{bool}d
[%.*hhx] Trying to enqueue event outside withEnqueuedSend.
Encountered error while fetching credential for %@ (will %screate new credential): %{public}@
Creating new credential for account %{public}@
Credential renewal result: %ld%@%@
Renewing credential for account: %{public}@ with force:%{public}@ avoidUI:%{public}@
Web login result: %@%@%@
Connections constrained for account %{public}@ with connection %@
#ACE-DB using url %s
#ACE-DB payload is %s
#ACE-DB response is %s
#ACE-DB error retrieving configuration: %{public}@
Account database: failed to parse db file
Account database: couldn't find path to db file
#ACE-DB ignoring service because capability '%s' is not satisfied
#Warning Activity monitor cancelled on the Main Thread.  Why?
%@ (%@) failed to get auth token: %{public}@
Over quota error message: %@
[%{public}@] Clearing last update date for email aliases.
[%{public}@] No last update date for email aliases. Requesting update.
[%{public}@] Last update was %g minutes ago. Requesting update.
[%{public}@] Last update was %g minutes ago. Not requesting update.
[%{public}@] Completed update.
-[CastleIMAPAccount pushUpdateForAliasData] %d %p
%{public}s <%{public}@:%p> [%@:%u%{public}@]
%{public}s <%{public}@:%p> [%@:%u%{public}@] %{mobilemail:networkData}.*P
#Network %d for %@
#Network low data mode (constrained): %d
Making sure buffer is empty, currently has %lu bytes
deflateInit2 failed with error %d
inflateInit2 failed with error %d
<%{public}@:%p> Got SecTrustResultType %u for %@
trust manager said DENY for connection %p (error: %@)
Supressing trust prompt as user denied earlier for connection %p (error: %@).
user said DENY for connection %p (error: %@). Supressing trust prompt till maild restarts
Unsupported header criterion %@
#Warning unsupported qualifier %d in flag criterion
unsupported operator %d
Sending message with type: %{public}u, folderID: %{public}@, originalMessageID: %{public}@, originalLongID: %{public}@, useSmartTask: %{public}d
#Warning warning, %@ got ping for folder ID %{public}@, but can't find mailboxUid with that ID.
mailbox listing has changed for account %{public}@
Enqueing request pairs %@ for mailbox %@
Performing %lu mailbox requests with %{public}@, folder-id %{public}@, anchor %@, user requested %s
Mail db had no sync anchor for %{public}@, folderID %{public}@.  Will erase local messages, perform full sync.
server returned null sync key for sync of %{public}@, folderID %{public}@.  Will erase local messages, perform full sync.
setting sync key %@ for mailbox %{public}@
canceled mailbox request for %{public}@, folderID %{public}@
DAMAilAccount %p is invalidating
DAMailAccount %p is deallocating
watched folder IDs changed: %@
account %{public}@ will NOT start listening for notifications: Not in maild
account %{public}@ will NOT start listening for notifications: battery-saver mode is ON
Requesting push for folders: %@
#Warning mailboxForFolderID returned nil (folderId = %@)
#Warning Missing folder ID for mailbox: %{public}@
%@: Network became %s
%s [10463402] fixing bogus EAS inbox name for %{public}@
reslove recipients task %@ failed with code %ld
*** Missing rspauth value in server message
*** Bogus rspauth value returned from the server
*** Unexpected character '%c', aborting
*** Duplicate value for %@. Ignoring
*** Unexpected value %@ for %@. Ignoring
*** Unable to parse %@. Ignoring
*** Unable to parse %@. Aborting
*** Parse failure(unexpected character '%c'). Ignoring
*** Missing algorithm=md5-sess in server response
*** ECSASLPrivacySecurityLevel is not supported.
Got a response, but it was not for our tag.  Throwing out the results.
Got invalid value in sequence set
Bad line break index
#Warning Failed to load DataDetectorsCore.framework (%s)
#Warning NSClassFromString(@"DDURLifier") returned Nil
#Warning failed to create date formatter
#Warning failed to create time formatter
Bad arguments to %@, %@
#Warning failed to get client token
Using MFSwiftIMAPTaskManager for account %{public}@ on %{public}@
Unable to use MFSwiftIMAPTaskManager for account %{public}@ on %{public}@
Connection %{public}@ state: %d
*** Unable to determine name for %@
Checking in connection and clearing delegate: %{public}@
#Warning Unselected connection checked back in, mailbox: %@, connection: %@
#Network %@: -[%@ _releaseAllConnectionsAndCallSuper:%{BOOL}d synchronously:%{BOOL}d edgeForcedOnly:%{BOOL}d saveOfflineCache:%{BOOL}d]
#Network All connections: %@
#Network EDGE ONLY
#Network Dropping connections: %@
%{public}@ deleting messages from mailbox: %{public}@ older than %d days
#aps-push warning, can't find mailbox with name '%{public}@' (%{public}@)
#aps-push failed to generate hash for mailbox named '%{public}@'
#aps-push Setting aps-topic '%@' for account %@
#aps-push account <%@:%p> scheduling push registration connection
#aps-push account %@ IMAPv4 not forcing push registration connection
#aps-push account %@ forcing push registration connection
#aps-push account %@ will NOT force push registration connection, didRequestPushRegistration: %s, mustRegisterOnNextConnection: %s
#aps-push MCC push settings are not set to push (%d != PCStylePush) for account %@
#aps-push account %@ has no pushed mailboxes, skipping
#aps-push account %@ last registered for push %.3f seconds ago
#aps-push {mailboxes=%@, topic=%@, version=%d}
#aps-push could not create mailbox names for: %@, pushed mailboxes: %{public}@ (sep: %{public}@ prefix: %@)
#aps-push Received notification for account '%@', will %@handle push
#aps-push warning, %@ got a notification for mailbox %@, but we're not enabled for the appropriate dataclass
#aps-push warning, %@ got a notification for mailbox with hash '%@', but can't find that mailbox.
#aps-push account %@ will NOT start listening for notifications, canRegisterForAPSPush returned NO
#aps-push account %@ will NOT start listening for notifications, battery-saver mode is ON
#aps-push account %@ told to start listening for notifications
#aps-push account %@ did NOT register for push, %s register for push and PCConnectionStyle %s push
#aps-push account %@ told to stop listening for notifications
Couldn't get store from mailbox %@
Couldn't get mailbox from URL
Attempting to find a cached connection. _cachedConnections:
%{public}@
Checking out cached connection: %{public}@
No cached connection found. Creating new connection: %{public}@
sending ID command: %@
server response to ID request: %@
server does not support ID extension
#aps-push not registering for push on unauthenticated connection for account %@
#aps-push connection doesn't support XAPPLEPUSHSERVICE for account %@
#aps-push account %@ not registering for push
#aps-push failed to get device token while registering for push on account %@
#aps-push Including Sender paramenter. Argument: {%{public}@}
#aps-push account %@ registering for push: {%@}
#aps-push account %@ will send pushes for mailbox '%@'
#aps-push account %@ (version %@) ignoring invalid version in push response '%@'
#aps-push account %@ (version %@) sent unknown push response %@
#aps-push account %@ will NOT push these mailboxes {%@}
#aps-push account %@ will push all requested mailboxes
#aps-push account %@ specified bad version/topic in response: %@
#aps-push account %@ received mailbox responses but version 1 response, ignoring mailboxes
#aps-push account %@ rejected XAPPLEPUSHSERVICE request: %@
server supports deflate compression, sending COMPRESS request
server rejected our COMPRESS request: %@
*** Failed to read initial response from %@
*** Expected untagged initial response from %@
*** Invalid IMAP command %d
%{public}@ WROTE: %{public}@
%{public}@ failed to write commands
%{public}@ READ: %d untagged fetch responses
%{public}@ READ: %d untagged list responses
%{public}@ READ: %{public}@
LOGIN failed due to non-ascii username: %{public}@
LOGIN failed with error %{public}@
Idle: connection <%p> received response while idling: %@
Idle: connection <%p> starting IDLE state for delegate %@
Idle: connection <%p> failed to enter IDLE state: %@
Idle: connection <%p> delegate rejected starting IDLE state: %@
Idle: connection <%p> leaving IDLE state for delegate: %@
Idle: connection <%p> timer fired for delayed IDLE reset after %0.2fs delay: %@
Idle: connection <%p> resetting IDLE state: %@
inconsistent esearch counts detected, ignoring esearch capability
#Warning Invalid response from SEARCH command
<%{public}@> Server does not support move.
IMAPConnection: source UIDs count is different from destination UIDs (source: %@; destination: %@)
#Warning %@ claimed to support initial response data, and didn't supply an initial response
IMAP protocol error: %@
IMAP auth failure: %@
*** Unexpected response during authentication: %@
debugDescription for _connectionState: %@
Unhandled response to command %s: %@
MFIMAPConnection was lost during processing of command %s: %@.
*** Error while creating %@: %{public}@
replaying %lu operations with connection %@
replaying %@
removing failed operation from offline cache: %@
*** Error while selecting %@: %{public}@
ERROR: UNKNOWN RESULT: %@ %d
-[MFLibraryIMAPStore _dataForMessage:] bad message data
Missing either a MIME part number or Mail Drop remote URL for attachment %@
Issuing fetch for mailbox: %@
#CacheLoads requesting data for MIME part %{public}@:%{public}@
#CacheLoads found full cached data for %{public}@:%{public}@
#CacheLoads found part data in database %{public}@:%{public}@
#CacheLoads extracted part data from full body data in database %{public}@:%{public}@
#CacheLoads downloading part data from server %{public}@:%{public}@
#CacheLoads %@ downloading part data from server %{public}@:%{public}@
#CacheLoads extracted part data from full body data via download %{public}@:%{public}@
Storing data for MIME part: %{public}@ of message: %{public}@ complete: %{public}d
#CacheLoads returning cached full body data for %@
#CacheLoads returning cached body data for %{public}@
#CacheLoads returning body data from Library for %{public}@
#CacheLoads fetching body data from network (download=%d) for %{public}@
[LogMessageDeletionTimes] Deleting %lu messages took %4.5f seconds (%4.5f s/msg)
[LogMessageDeletionTimes] Searching for and deleting %lu messages in %@ took: %fs
Exception while getting all email addresses: %@
#Warning Returned unhandled email addresses %@
failed to remove path %@
Mailbox UID from account: cache miss. ('%@')
invalidateEmailAliases: no-op
updateEmailAliasesIfNeeded: no-op
#Warning %@: Cannot set library to %@. See rdar://problem/42167098.
#Warning <%@ %p>: no library!
Account: %@ willPerformActionForChokePoint: %@ - coalescePoint: %@
Clients for choke point - %@
Waiting for existing fetch to finish for choke point: %@
Result: %@ returned for chokepoint: %@
Removing choke point from current actions: %@
Account: %@ didFinishActionForChokePoint: %@ - coalescePoint: %@ - result: %@
Updating result for for choke point: %@ - result: %@
#Warning <rdar://problem/17733540> _currentChokedActions: %@
mailboxDict: %@
Finished writting to disk mailbox cache %{public}@
Removing lookaside properties for accounts with identifiers: %@
%{public}@: shouldArchiveByDefault: Get bool for account info key: %{BOOL}d
%{public}@: shouldArchiveByDefault: Account does not support archiving
Clearing mailbox UID from account cache.
Read mailbox cache from disk %{public}@
Failed to read cached info for %{public}@: %@
No URL for mailbox. Account: %@ Mailbox: %@
change in mailbox type [Inbox -> Generic]: %@
_followUpFuture calling suggestionService with Subject: %{public}@ Body: %{public}@
suggestionService warning.score:%{public}@ followUp:%{public}@ %{public}@
Unexpected flag key "%@"
access to protected data is allowed
access to protected data is not allowed
Using legacy message-id hash format
found message flags discrepancy
could not set protection class for %@
wrote wrong number of bytes to file %@!
failed to open a file for message data at path %@, (error: %d, %s)
Threading %lld: found conversation from fuzzy matching: messageID: %lld, conversationID: %lld, subject: %{public}@
Threading %lld: adding in previously tracked messages IDs with the same subject: %@
Threading: inserted message references for message with databaseID %lld: %@
Threading %lld: resolving for message (database ID: %lld), mailbox: %lld, subject: %{public}@, explicitReferences: %@
Threading %lld: adding external conversation ID to explicit references: %lld
Threading %lld: found conversation ID from explicit references: %lld
Threading %lld: Merging current conversation %lld with another conversation %lld
Threading %lld: Using current conversation %lld
Threading %lld: Using external conversation ID %lld
Threading %lld: Merging with existing conversation %lld
Threading %lld: Setting conversation ID to message ID
Threading %lld: Using newly created conversation ID %lld
Threading %lld: Resolved message's conversation ID to %lld
adding message references took %.2f (messageID: %lld)
Threading %lld: deleting merged conversations from table: %@
source mailbox is nil
couldn't load headers for %@, skipping
failed to find mailbox row for message %{public}@: mailboxURL = %@ for %{public}@
Adding message with message_id: %lld, globalMessageID: %lld, remote_id: %@, subject: %{public}@ (%lld), sender: %{public}@ (%lld), date: %{public}@, summary: %{public}@ (%lld), unsubscribeType: %{public}@
#Warning [addMessages] setting conversation id for message with library id %lld failed
error importing message %{public}@, aborting
inserting message failed, rolling back transaction
Found database ID %lld in cache for table: %{public}@, column: %{public}@
Inserted new database ID %lld in database for table: %{public}@, column: %{public}@
Found database ID %lld in database for table: %{public}@, column: %{public}@
Threading %lld: updating message's conversationID from %lld to %lld
The message didn't get updated: message.conversationID: %lld, resolved conversationID: %lld
#Warning [updateThreadingInfoForMessage] updating conversation id for message with library id %lld failed
#SQLite #Performance %.3f seconds to load first batch of %lu messages
#SQLite #Performance loaded %d messages in %.3f seconds
Could not execute sqlite statement: %@
criterion %@ couldn't be turned into a query, <db:%p, protected %@>
criterion %ld couldn't be turned into a query, <db:%p, protected %@>
#Warning Error setting the protection class on "%@": %@
could not update sequence identifier for mailbox %@
couldn't load message with libraryID %lld because protected data is unavailable
Threading %lld: conversation IDs of messages in the same thread: %@
Error %d performing query: %s
#SQLite #Performance %0.4f seconds to perform query %@
Could not get url for mailboxID %lld
Compacted %lu messages (%f seconds)
Update largest_deleted_rowid for %{public}@ to %lld
Deleted %lld bytes of attachments for message %{public}@
Unable to read attachment at URL %@
Data for message %{public}@ is being processed multiple times
Summary updated for %lld
Could not get mailbox for message %{public}@ (store: %@)
Could not get mailbox for message %p (store: %p)
Skipping summary update for non-existent message with row ID: %lld; summary: %@
Updating summary for message with row ID: %lld; summary: %@
Fetching partName: %@ for message: %@
Result row `%@:%@` for query: %@
Protected Data Not Available while fetching partName %@ for message %@
Loaded Meeting data %@ for message : %@
Loaded Exchange Calendar externalID: %@ for message: %@
Loaded Exchange Calendar meeting data %@ for message : %@
#CacheLoads body data from file of length %lu for message %{public}@
#CacheLoads data from file of length %lu for message %{public}@ part %{public}@
#CacheLoads data from file at path %@ had error: %{public}@
Failed to convert the predicate to SQL: %{private}@
 Exception: %{public}@. See <rdar://problem/48813824>.
%{public}@: Unable to form sql query, protected data available: %{public}@
Posting %@
cleanupProtectedTables took %.4f seconds
skipping cleaning up protected tables because protected data is not available
STATS %.2fs j:%lu m:%lu pm:%lu md:%lu pmd:%lu mdel:%lu mddel:%lu mbox:%lu im:%lu mti:%lu mi:%lu ia:%lu ati:%lu ai:%lu
STATS %.2fs j:%lu m:%lu pm:* md:%lu pmd:* mdel:%lu mddel:%lu mbox:%lu
Key bag locked
Key bag unlocked
register %@ activity
#Warning Unable to transition %@ activity to state 'done'
#Warning Unable to transition %@ activity to state 'continue'
cancelling %@ activity
Failed to open %s (error: %d). Retrying %d more times.
Threading %lld: resolving threads after journal reconciliation
Updated conversation hashes on %lu messages (%.4f seconds)
Threading: deferring thread resolution until unlock for message database ID %lld
Starting incremental vacuum for %@ database
Skipping incremental vacuum because protected tables are not available
Skipping incremental vacuum because free count (%lld) is below limit (256)
Skipping incremental vacuum because load factor (%.2f) is above threshold (0.85)
Error performing incremental vacuum: %s
Successfully performed incremental vacuum on %@ database
Abort if mobilemail: journal reconciliation failed
Could not open fd for %@
Could not set protection class on %@
Mail db will be reset on next launch
Could not create %@
#Warning SearchableIndex: Skipping message search request until we have determined our active non-local accounts
SearchableIndex: Failed to prepare statement: %@
No externalID for %@
Message has no subject: %lld
Message has no sender: %lld
Skipping remote content parsing (not yet enabled by user).
Skipping remote content parsing (%lx).
Skipping remote content parsing (%{public}@).
Skipping remote content parsing (prohibited by MDM).
Skipping remote content parsing and data detection (no header or body data).
Skipping remote content parsing (non-HTML part).
Downloading plain text message %@, will perform data detection
Sanitized path for libraryID %lld - %@
Storing message: %{public}@ in database part: %{public}@, is complete: %{public}d, in the database: %{public}@
Exception occurred while message with ID %lld: %@
writing out no data since existing data is equally long
not saving message data for non-existent message
Writing message: %{public}@, part: %{public}@ (incomplete: %{public}d to disk at path: %{public}@
storage path is nil! _libary: %@ _message: %@ _part: %@ _partial: %@ messageUrl: %@
Error attempting to write to file "%@": %{public}@
Couldn't make complete path "%@"
Exception occurred while writing to "%@": %@
Created rowid %lld from mailbox: %{public}@
Empty message data
#CacheLoads data from database of length %lu for message %{public}@ part %{public}@
%@ : took %fs
Writing body data for message database ID: %{public}lld, partial: %{public}d, part: %{public}@
#Warning Unhandled qualifier %ld for type %ld
#Warning Unhandled criterion type %ld
#Warning Could not open fd for %@
#Warning Could not set protection class on %@
#SMIMEErrors Verification was not good (%ld)
#SMIMEErrors Verification went south (%ld)
Exception raised during message encoding: %@
*** BAD!!! Used old attachments for %@
*** Unexpected object <%@:%p>
#Warning Must be called with a subclass of MFOutgoingMessage.  You provided %@
Unable to encode %@ as a MIME attachment
Trying to fetch with %@ account that doesn't have a task manager
Loaded bundle at %@
Ignoring MailServices bundle %@ for %@
Missing account type for identifier %{public}@
Failed to fetch accounts for types [%{public}@]: %{public}@
Primary iCloud IMAPMail account %{public}@ found for parent iCloud account %{public}@
Duplicate Primary iCloud IMAPMail account %{public}@ found for parent iCloud account %{public}@
Mail account %{public}@ found for parent account %{public}@
Failed to load account for persistent account "%{public}@"%s%{public}@
"%@" has Non-ASCII username - Disabling Notes for account (%{public}@)
Saved account "%@" (%{public}@)
Failed to save account "%@" (%@) error: %{public}@
Nothing to save for account "%@" (%{public}@)
Removed account "%@" (%{public}@)
Failed to remove account "%@" (%{public}@) error: %{public}@
Received %@ notification
lpm:%d locked:%d wifi:%d onpower:%d thermals:%lu battery:%.2f
error occurred while observing conditions: %{public}@
invalid battery-level value (%f)
[RBSProcessMonitor] Is visible: %{BOOL}d (initial)
Unable to create RBSProcessMonitor for %{public}@: %@
[RBSProcessMonitor] Is visible: %{BOOL}d (was %{BOOL}d), state: %d (was %d), pid = %d
[RBSProcessMonitor] Is visible: %{BOOL}d (was %{BOOL}d), state: %d (was %d), pid = %d -- (no app visibility change)
#aps-push Unable to open ApplePushService at %@
#aps-push Push service already running.
#aps-push Using %@ APS environment.
#aps-push A launchd mach service name is required but none was provided, pushes will not work - this will turn into an assert in the future
#aps-push Starting MFAPSManager.
#aps-push Starting MFAPSManager. Waiting for public token.
#aps-push Stopped MFAPSManager.
#aps-push Start watching topic '%@'
#aps-push Stop watching topic '%@'
#aps-push Swapping registered topic '%@' for topic '%@'
#aps-push Received public token '%@'.
#aps-push received notification on topic '%@', userInfo=%@
#Attachments %@ performing no conversion (isDataAvailableLocally=%d, isContainedInRFC822=%d, isMailDrop=%d, part=%p, contentTransferEncoding=%{public}@)
#Attachments %@ stripping line endings (contentTransferEncoding=%{public}@)
#Attachments %@ quoted-printable
#Attachments %@ base64
#Attachments %@ uuencode
#Attachments %@ unknown encoding (contentTransferEncoding=%{public}@)
#Attachments Failed to fetch data for attachment [%@]
FIXME: calls that come from the main thread should use fetchLocalData
#Attachments Failed to fetch data for attachment [%@] due to %{public}@
#Attachments Using placeholder file for '%{mask.hash}@'.
#Attachments Failed to get attachment data for '%{mask.hash}@'.
#Attachments Unable to create temp file for data (%{bytes}llu) for '%{mask.hash}@'.
#Attachments Failed to fetch candidate placeholder contents for attachment [%@]
#Attachments Unable to obtain data provider for attachemnt [%@] due to %{public}@
UTType [%@] for filename:[%@] via extension:[%@] mimeType:[%@]
UTType [%@] for filename:[%@] could not derive extension
UTType [%@] for filename:[%@] extension:[%@] via mimeType:[%@]
#Attachments UTType for filename:[%@] extension:[%@] mimeType:[%@] indeterminate
UTType [%@] for filename:[%@] via cache
#Attachments Unable to read file URL [%@] due to error: %{public}@
requesting download of attachment %p with URL %@ (primaryConsumer: %@)
Write attachment to database
%@ attachment %{public}@ write to persistence
not writing attachment. Missing filename: %{public}@
not writing attachment %p %@ to disk (no-existing-attachment-dictionary)
not writing attachment %p %@ to disk (shouldWriteToDisk=%d, success=%d, data.length=%lu, error=%@)
Calling progress block for %@.  %lu/%lu
#Attachments ContextID was nil for filename:%@ contentID:%@
#Attachments Data was nil for filename:%@ contentID:%@
#Attachments nil path detected in initializer
#Attachments Failed to create file for attachment %@: %@
#Attachments Failed to create directory for attachment %@: %@
#Attachments failed to find a store for message %{public}@, things may behave unexpectedly
Setup attachment %{public}@, name = %@, part number = %{public}@
Inserting message attachment metadata for attachments %{public}@ into the persistence
%@ at inserting message attachment metadata for attachments %{public}@ for message %lld
#Attachments FIXME: Blocking call requested on the main thread
removing attachment %@
Canceling download for attachment %@
#Attachments Exception thrown when writing file: %@ : %@
#Attachments Exception thrown when writing data: %@ : %@
#Attachments Failed to deserialize placeholder
#Attachments Failed to serialize placeholder
#Attachments Failed obtain data for temporary file
#Attachments Attempted to resolve placeholder for non-existant file: %@
#Attachments Placeholder attachment data write error %{public}@
#Attachments Unable to set resource values on placeholder attachment data: %{public}@
#Attachments Failed to remove temporary file
#Attachments Failed to create placeholder directory %@
#Attachments Unable to create base dir for temp files: %{public}@
#Attachments Path '%{public}s' is too long.
#Attachments Unable to create temp dir: %{errno}d.
#Attachments Created temp directory '%@'.
#Attachments Failed to create temporary directory.
#Attachments Failed to create temporary file (%{bytes}llu): %{public}@
#Attachments Failed 2nd attempt to create temporary file: %{public}@
#Attachments Error acquiring attachment placeholder for file: %@, Error: %@
#Attachments Error acquiring attachment security scope for fileURL: %@, Error: %@
#Attachments Failed to enumerate URL [%@] due to error [%{public}@]
#Attachments Failed to read bundle URL [%@]
#Attachments Failed to archive bundle attachment URL: %@ due to error: %{public}@
#Attachments Failed to read attachment URL: %@
#Attachments Failed to access attachment URL: %@
#Attachments URL is not a bundle: %@
NSFileCoordinator ops can block, the caller should move to a background thread
#Attachments Error accessing secure write URL [%{public}@]
#Attachments Error confirming URL is writeable [%@]
#Attachments Error accessing secure read URL [%{public}@]
#Attachments Error confirming URL is readable [%@]
#Attachments Failed to create temporary read URL [%@] error [%{public}@]
#Attachments Failed to create temporary read directory [%@]
Failed to remove temporary read URL [%@] error [%@]
Failed to remove temporary read directory [%@] error [%@]
[%{public}@] updateEmailAddressAndAliases: Update already running.
[%{public}@ #%u] Starting URL session task %llu
[%{public}@ #%u] updateEmailAddressAndAliases: Email alias request failed: %{public}@
[%{public}@ #%u] updateEmailAddressAndAliases: Received (status=%d) '%@'
[%{public}@ #%u] updateEmailAddressAndAliases: Not Modified.
[%{public}@ #%u] updateEmailAddressAndAliases: Got response. aliases: %d, emails: %d, defaultEmail: %{BOOL}d, entityTag: %{public}@
[%{public}@ #%u] updateEmailAddressAndAliases: Email alias request to [%@] failed with status code [%d]
[%{public}@ #%u] updateEmailAddressAndAliases: Email alias requests configured to use [%@], scheduling reprovision
[%{public}@ #%u] updateEmailAddressAndAliases: Network is not up.
Added trust exception for %@
Removed trust exception for %@
Error when retrieving encryption certificate for %@: %{public}@
failed to get attachment data for [%@], error:%@
No attachment for [%@]
Zero length attachment for [%@]
server indicated invalid sync state for task %@ (code %ld).  resetting mailbox sync key.
server has reset the sync state %@ times in the same sync attempt, giving up.
#Power [New Message] subject=%@;
About to process remote ids matching searchtext:%@ predicate: %@
Invalid search returned for predicate: %@
Received a protocol mismatch error when peforming search
%@ Seems like the server exhausted the search results (%ld of %lu), un-setting a continue offset
Searching for criterion: %@
Predicate is not supported, bailing.
Caller did not supply searchText. Generated basic search text:%@ from criterion:%@
Attempted to fetch messages from DA without searchText
Replaying flag change %@ for remote ids: %@
Adding flag change requests: %@
Adding delete requests: %@
No request needed for flag change: %@
No folder ID for mailbox: %@
Fetching body data for remote id: %@
failed to download body for message "%@"
Fetching body data for search result %@ in folder %@
Search result body fetch for message %@ %s
Fetching body data for message %@. format: %d
Successfully downloaded body for message: %@. format: %d
Failed to download body for message "%@"
#Warning DAMessageStore: this is not a MFLibraryMessage: %@
#Warning DAMessageStore: this is not a MFMailMessage: %@
Downloading headers for messages
#Warning Error while fetching headers for message %@: %@
#Warning don't know how to fetch data for mime part %@
Account search capability: %{public}u. canFetchSearchResults: %{public}@
Attempting to store text/html data as message part 2
Erasing locally cached messages for folderID %@
Failed erasing messages for folderID %@ - no such local mailbox.
received a redundant SyncAddAction for a message with remote-id %@
#Warning Caught exception %@
error syncing folder: %@
DAMessageStore - allMailboxes searchQuery returned result with invalid folderID: %@
Inserting Exchange Calendar meeting Data %@ for message : %@
Move succeeded but missing new remote ID for message ID: %{public}@
got %@ with untracked sourceID "%@"
Deleting source messages from transfer: %{public}@
message %@ was successfully transferred, but we don't have a new remote ID for it
Transfer action completed with successful items: %@. Failed items: %@. StatusCode: %lu
Transfer failed with Invalid Source Error. Moving the messages locally
processing journal file %@
read wrong number of version bytes from journal, expected: %lu actual: %zd
found journal file of wrong version, expected: %d actual: %lu
realloc failed when merging journal with database
read wrong number of bytes from journal, expected: %lu actual: %zd
Could not find mailbox for %@
MFProtectedDatabaseMergeResult %@
An error occurred while processing %@ (error %d: %s)
An error occurred while committing transaction for %@ (sqlite error %d)
Successfully reconciled journal file %@
Skipping empty journal file %@
No journal files found
Error %d %@ at path %@: %s
Created error: %{public}@
#Attachments Couldn't create archive, input is not a directory.
#Attachments Couldn't add file to archive. Error: %{public}@
#Attachments Failed to write entire data buffer
#Attachments Failed to validate archive central header
#Attachments Failed to validate archive central directory
Failed to mark file as purgeable before compression: %@
Mail File Compression Queue Activity
Failed to transition from state %ld to state %ld.
Registering File Compression Activity
Unregistering File Compression Activity
Running File Compression Queue Activity. %ld files in the queue
Deferring based on system conditions
Compressed all files in File Compression Queue
Stopped before compressing all files in File Compression Queue.
Exiting Compression Queue Activity. %ld files left in the queue
Server returned less bytes than expected for part %{public}@ (%lu versus %lu)
uid of message %{public}@ is 0
Unexpected byte %u at position %lu
deserialized offline operation was invalid - skipping
attempt to create an invalid offline operation of type %d with no mailbox name %p
attempt to create an invalid store-flags offline operation: %lu true flags, %lu false flags, %lu uids
attempt to create an invalid copy-message offline operation: %lu srcUids, %lu dstUids, dstMailbox=%p (%lu)
*** Warning while parsing %@: %@
Remaining text: <%@>
Invalid for response type %d
#Warning caught %@: %@
caught %@: %@
server returned data we don't have a consumer for, might be expected for section %@
We did something bad: we just got back a CLIENTBUG from the server.
#Power [Server Fetch Time] InternalDate=%@
%{public}@: Fetching skeletons for %lu uids (%lu new)
%{public}@: Fetching flags for %lu uids
%{public}@: Compacting %lu messages during IMAP sync
%{public}@: Search for recent UIDs returned %lu items (success=%@)
%{public}@: starting UID sync idRange=%@ limit=%lu topUIDToCompact=%lu topKnownUID=%lu UIDCount=%lu lowUID=%lu highUID=%lu serverMessagesIndex=%lu serverMessagesUIDs found=%u to %u
%{public}@: preserving UID %lu!
%{public}@: Compacting %u (1)
Syncing %lu
%{public}@: Fetching %lu
%{public}@: Compacting %lu (2)
%{public}@: _fetchMessagesWithArguments returns %lu
%{public}@: fetchNumMessages started with options 0x%lX, numMessages = %lu
%@: "Connecting..." starting
store and connection mailboxes differ: store=%@ connection=%@ (%p, valid: '%{public}@')
canceling fetch because connection is invalid
canceling fetch because mailbox could not be selected
store and connection mailboxes differ
%@: "Connecting..." completed
%{public}@: fetchNumMessages finished with result %ld
IMAP Account %{public}@ deleting messages from store: %@ older than %d days using connection: %@
Download fetched 0 bytes for UID %u
failed to download data, message.remoteID may be null
performOperationRequiringConnection: mailbox='%{public}@' connection=%p cached=%@ options=%d
%{public}@: Received UIDNEXT = %u
%{public}@: Forcing reload of '%{public}@' because of UIDVALIDITY change (old:%lu new:%lu)
%{public}@: Got EXISTS = %llu
#imap-idle error occurred while observing conditions for IDLE: %{public}@
#imap-idle scheduling IDLE transition (should-use-idle %@): %@
%{public}@: Got new UIDNEXT (old = %u, new = %u)
%{public}@: No messages to compact
%{public}@: Compacting all messages. Found %u (> %u).
%{public}@: Compacting messages with UIDs <= %lu. Found %u (> %u).
%{public}@: Not compacting messages. Found %u (<= %u).
#Warning unsupported header criterion type %@
#Warning Ignoring criterion %@ IMAP search
#Warning need to handle criterion for IMAP search: %@
Starting message reconciliation for all messages
Starting all message reconciliation enableTelemetry=YES 
Reconciling all journaled messages
Finished message reconciliation for all messages. Reconciled %lu messages
MessagesReconciled=%{public,signpost.telemetry:number1}lu enableTelemetry=YES 
MFLibraryMessageAllMessageReconciliation
Starting context based message reconciliation
Starting context based reconciliation enableTelemetry=YES 
MFLibraryMessageContextBasedReconciliation
Finished context based message reconciliation. Reconciled %lu messages
Starting inbox reconciliation
Starting inbox reconciliation enableTelemetry=YES 
Finished inbox reconciliation. Reconciled %lu messages
Failed to create criterion based on query: %@
Reconciling for query
reconciled %llu messages
Reconciled all messages. Cleaning up...
Starting library reconciliation
MFLibraryReconciliation
Library reconciliation finished
Starting context based library message reconciliation
Starting context based library message reconciliation enableTelemetry=YES 
Context based library message reconciliation finished. Reconciled %lu conversations
ContextType=%{public,signpost.telemetry:number1}ld Conversations=%{public,signpost.telemetry:number2}lu enableTelemetry=YES 
MFLibraryContextBasedReconciliation
Starting context based library thread reconciliation
Context based library thread reconciliation finished. Reconciled %lu conversations
Starting context based library inbox reconciliation
Starting inbox library reconciliation
Inbox library reconciliation finished. Reconciled %lu conversations
Starting library reconciliation for remaining entries
Starting library all remaining entries reconciliation enableTelemetry=YES 
Finished library reconciliation for remaining entries
MFLibraryAllRemainingReconciliation
Starting thread reconciliation for all threads
Starting reconciliation of all threads enableTelemetry=YES 
Finished thread reconciliation for all threads. Reconciled %lu threads
ThreadsReconciled=%{public,signpost.telemetry:number1}lu enableTelemetry=YES 
MFLibraryThreadReconciliation
Starting context based thread reconciliation for threads
Finished context based thread reconciliation for threads. Reconciled %lu threads
MFLibraryThreadContextBasedReconciliation
Reconciling %lu threads in batch
Marked %lu threads as reconciled
Reconciled %lu threads in batch, but marked %lu threads as reconciled
Created %{public}@ for account %{public}@
%{public}@ connection established
%{public}@ added action %{public}@
Replaying all actions %@: %ld action(s) to replay
%{public}@ replaying action %{public}@
%{public}@ Did not get results back for action: %{public}@. Will stop replaying actions.
%{public}@ action %{public}@ finished, needToReplayAction = %d
%{public}@ Finished replaying actions. %ld action(s) left to replay
Downloading Mail Drop attachment: %@ using URL session: %@
Canceling download for Mail Drop attachment %@
Delivering Mail Drop message
Finished processing attachments with state: %lu
Continuing with Mail Drop message delivery
MailDrop message is undeliverable
MailDrop message is incomplete
Processing attachments
Mail Drop couldn't create zone. Error: %{public}@
Mail Drop couldn't create file for attachment '%{mask.hash}@'. Ignoring attachment.
Mail Drop added record '%{mask.hash}@' for attachment '%{mask.hash}@'.
Adding attachment '%{mask.hash}@' as image.
Mail Drop couldn't create archive. Error: %{public}@
Mail Drop couldn't create record.
Unable to access attachments when generating MailDrop message
Mail Drop attachments finished processing with result: %lu, error:%{public}@
Mail Drop attachment: %@
#Attachments Mail Drop error publishing asset. %{public}@
Mail Drop asset URL: %@
Mail Drop progress %f for record:%@
#Attachments Mail Drop error for record: %{public}@
#Attachments Mail Drop complete for record:%@
#Attachments Mail Drop error with upload. %{public}@
Start uploading records to CloudKit database [%@] ...
#Attachments Failure encountered during Mail Drop processing [%{public}@]
Start fetching CloudKit record zone for ID [%@] ...
#Attachments Error encountered while fetching CloudKit record zone [%{public}@]
#Attachments Error encountered while saving CloudKit record zone [%{public}@]
#Attachments failed to get zone identifier from keychain: %{public}@
Unexpected type while unarchiving offline cache operation: %d
Unexpected operationType while unarchiving offline cache %u at position %lu
Couldn't deserialize mailboxName while unarchiving offline cache operation
Got error %@ inserting mailboxAction
wrong number of arguments (%d) to rawAddress
wrong number of arguments (%d) to displayName
Exception thrown while unarchiving offline cache operation: %@
DAMessageID: %@ and corresponding mailboxNumber not found.
Not enough _sourceRemoteIDs(%ld) or _temporaryRemoteIDs(%ld) to migrate for source mailbox %{public}@
Unable to find source mailbox in database for source mailbox id: %{public}@
Unable to find source mailbox URL for source mailbox id: %{public}@
#MobileMailMigrator: No Legacy Path For Account %{public}@, skipping migration...
#MobileMailMigrator: Start Migrating Mailbox FilePath for Account %{public}@ from %@ to %@...
#MobileMailMigrator Failed to Rename Path from %@ to %@ Due to Error %{public}@. Deleting the legacyMailboxPath.
#MobileMailMigrator: Finished Migrating Mailbox FilePath for Account: %{public}@
#MobileMailMigrator: Start Migrating Mailbox URLs for Account: %{public}@
#MobileMailMigrator: Finish Migrating Mailbox URLs for Account: %{public}@ with result %d
#MobileMailMigrator: Starting Purge of Orphaned Mailboxes...
#MobileMailMigrator: Finished Purge of Orphaned Mailboxes...
#MobileMailMigrator Could not migrate Mailbox URLs due to sqlite error: (%d)
#MobileMailMigrator For Account %{public}@ Renaming Mailboxes From URL %@ To %@
#MobileMailMigrator No Mailboxes found for account %{public}@ to migrate.
#MobileMailMigrator Updating mailbox table from Old URL %@ to New URL %@ failed with sqlite code (%d).
#MobileMailMigrator Purging Orphaned Mailbox storage at Directory URL %@
#MobileMailMigrator Unable to delete Orphaned Mailbox storage at Directory URL %@ due to Error: %@.
Error: invalid connection
Error initializing database parameters: %{public}@
Database is already at current version %lld. No migration needed.
Starting migration
Starting migration steps from version %lld, attempt %lu
Finished migration
Failed migration
Starting write transaction at version %lld
Initializing schema
Upgrading from %lu (%s)
Migrated to current version %lu
Error: Downgrading from version %d to version %ld is not supported
Error: Migration is not supported for version %d
Rebuilding triggers
Rebuilding Message Info Index
Updating library version
Protected Index unavailable
Foreign key violation on row %lld of table %{public}@ with reference to table %{public}@
Error attaching protected index while migrating: %{public}@
Protected Index became available
Error %d %{public}@: %{public}s
Error: failed to get contents of "%@": %{public}@
Error: failed to find "%@"
Error removing local account mboxCache: %{public}@
Found %lu messages to migrate
Migration for %lu messages was %@
Did on demand migration for message %{public}@, success = %d
Migrate message attachment
Migrating message %@ attachment %@
No attachment file for message %@ attachment %@. Persisting attachment metadata
%@ migrated message %@ attachment %@
Device about to lock
Scanner info: %lu %@
Got error %@ creating body file directory
Got error %@ creating attachment parent directory
Got error %@ moving attachment directory %@
No externalID for message %{public}@
Did find error: %{public}@
Notifying CoreDuet about %lu new messages in %{public}@
messagesInMailboxURLCriterion is nil for mailboxURL %@
content not available for unknown representation type %{public}@ content for message %{public}@
returning raw representation %{public}@ for message %@
reading raw content for message %{public}@
Network usage is not allowed. Setting shouldDownload to NO
Duplicate content IDs for content items: %@. Ignoring
decoded HTML data with preferred encoding %x, used encoding %x
failed to decode HTML data with length %lu and preferred encoding %x
EMContentItemRequestDelegate failed! %{public}@
failed to generate snippets for attachments: %{public}@
failed to generate snippets for attachments: nil delegate
Could not create a body subset from partials for message: %{public}@
Did not find any content for message: %{public}@, using placeholder html
generated initial HTML content at URL %@: %lu bytes
EMContentItemRequestDelegate failed generating MailDrop attachments: %{public}@
failed to generate snippets for mail drop attachments: %{public}@
MailDrop node insertion to original HTML content failed with error %{public}@
MailDrop node parsing finished with error %{public}@
requesting %{public}@ content for message %{public}@
MailDrop: Received MailDrop Nodes %@
Begin work on scheduler
End work on scheduler
MFMessageContentRequestScheduler
Received unexpected qualifier %d for MessageIsRead criterion.
Received unknown criterion type for criterion: %@
Attempted to handle unsupported criterion %@
Returning criterion:%@ result:%@
Unsupported expressionType:%lu
Compound Criterion should not appear here - should be an NSCompoundPredicate
VIP criterion should be 'equal to' or 'not equal to'
Received unknown criterion type for predicate: %@
Attempted to handle unsupported predicate %@
#MailServices Cannot currently handle a NOT predicate with more than one sub
Got unexpected Predicate: %@
Received unhandled MessageRuleQualifier value:%d - assuming contains
Received unhandled NSPredicateOperatorType value:%lu - assuming contains
Starting
Compression: Failed to enumerate URL [%@] due to error [%{public}@]
Error setting the protection class on "%@": %{public}@
Finished
unable to get an event with external id %@ after it was successfully reconstituted.
Download supported, getting body
Download not supported, getting body if available
Failed to get the body for messageID %{public}@
Creating MFAttachment for part number %{public}@ textAttachment %@
Load attachment
Loading attachments %{public}@
Message body download not complete. Remaining bytes: %ld
MFMessageLoadingContextEvent hasLoadedCompleteMessage %{BOOL}d, hasLoadedBestAlternativePart %{BOOL}d, transportType %ld
See <rdar://48898701> : Internal Settings Switch to execute SQL query from EDMessageQueryParser
Predicate: %@
SQL Query: %@
Conversion Database IDs
Criterion Database IDs
requestContent: no library message for objectID %{public}@
requesting %{public}@ content for message %{public}@ (%{public}@)
Retrying the request %{public}@ content for message %{public}@ with network
Skipping the retry for message content with network
Requesting summary immediately for: %@
Cannot create summary loader. No Library Message for object ID: %@
Error setting the protection class on "%@": %@
Could not find mailbox for message with database ID %lld
#Warning #Network SCDynamicStoreCreateRunLoopSource failed - returned NULL.
#Warning #Network Could not create SCDynamicStore
MFNetworkControllerInit
#Network retrieved CT subscription info: %@ with error: %@
#Network failed to get data status for context %@ with error: %@
#Network failed to find data-preferred context
#Network setting data status: %@
#Network failed to aquire network assertion
#Network copyCarrierBundleValue returned error: %@
#Network could not get subscription info: %@
#Network failed to bring up data context (context: %@, connection: %u, error: %d
#Network preferred data sim was changed to slot %lu
#Network SIM is now ready (slot %lu)
#Network %d active calls
User agent says canUseSpotlightIndex - Enabling searchable index.
Couldn't reset file protection of protected database. The device is probably locked. %{public}@
Failed to reset file protection of protected database: %{public}@
Resetting mailbox cache after database transaction failed
Abort if mobilemail: database corrupt
Abort if mobilemail: file system out of space
#Warning %@
Access to protected data went away during transaction.
Abort if mobilemail: database I/O error, missing sqlDB pointer
Abort if mobilemail: protected database went missing
Abort if mobilemail: database I/O error
Abort if mobilemail: SQLITE_BUSY
#Warning %@/%@ bytes (free/total)
#Warning failure to get file system size: %@
Device is now %@
Listening for low-power mode notifications
Low-power mode changed to %@
#Assertions [*] cancel power assertion timer
#Assertions [*] schedule %d sec power assertion timer
#Assertions [*] power assertion timer expired
#Assertions [+] %@
#Assertions Could not create power assertion.
#Assertions [-] %@
#Assertions Active Assertions: %lu
RequestClass=%{signpost.description:attribute,public}@ RequestType=%{public, signpost.telemetry:number1}lu RequestCount=%{public, signpost.telemetry:number2}lu enableTelemetry=YES 
REQUEST QUEUE
#Warning Exception raised while processing requests: %@
fetching attachment %@
Encountered an attachment without a name for attachmentID:%@ attachmentPersistentID:%{public}@ messagePersistentID:%{public}@
Unable to retrieve a fileURL for a message in the attachments table for attachmentID:%{public}@ attachmentPersistentID:%{public}@ messageID:%{public}@ name:%@
Encountered a reference to a non-existent message in the attachments table for attachmentID:%{public}@ attachmentPersistentID:%{public}@ messageID:%{public}@ name:%@
#SMIMEErrors SecIdentityCopyCertificate could not find certificate for %@, returned %d
#SMIMEErrors SecCertificateCreateWithData() failed for %@
#SMIMEErrors SecTrustCreateWithCertificates returned %ld
#SMIMEErrors Certificate %@ for address %@ is not currently valid: %{public}@
MFSMTPConnection[%p]: Unexpected response during authentication for SMTP account %{public}@
SMTP error for recipient %@: %@
SMTP delivery:%d valid recipients; invalid recipients = %@
MFSMTPConnection[%p]: Trying EHLO using clientDomainName [%{public}@]
MFSMTPConnection[%p]: EHLO using clientDomainName [%{public}@] - Success.
MFSMTPConnection[%p]: Got unexpected EHLO response using clientDomainName [%{public}@] ESMTP params %@
MFSMTPConnection[%p]: EHLO using clientDomainName [%{public}@] - Failed. Falling back to HELO
Acquired task assertion: %{public}@
could not aquire task assertion: %{public}@
#Warning Error %d: %s
#UnreadCount [UnreadCount] %@ %s
MobileMail container path not found - Skipping extProperties migration.
extPropertiesDomain %{public}@ at path: %@
Migrating extPropertiesDomain to shared app group.
Migrated following extPropertiesDomain defaults to shared app group: %@
No keys found to migrate in extPropertiesDomain.
extPropertiesDomain already migrated to shared app group.
Migrating %@ to %@ with default %@
No default for key %@
Ignoring unmatched </%@> command
elapsed time %gs (input length=%ld, output length=%lu)
deallocating %p %@
Exception raised during monitored invocation of %{public}@, %{public}@
Stack:
%{public}@
#Warning couldn't find our CastleAccount for our sending account: %@
-[NewcastleAuthentication responseForServerData]
#Warning SecItemCopyMatching result: %d
SecItemCopyMatching succeeded with empty results
#Warning SecItemAdd result: %ld
#Warning SecItemUpdate result: %ld
#Warning SecItemDelete result: %ld
#SMIMEErrors Found %lu (out of %lu) matching signing identities for "%@"
#SMIMEErrors Found %lu (out of %lu) matching encryption identities for "%@"
#SMIMEErrors SecItemCopyMatching returned %ld
#SMIMEErrors Found no certificates for "%@" (%ld)
#SMIMEErrors Found %s certificate for "%@".
#SMIMEErrors Error saving encryption certificate for "%@": %@
NTLM authentication succeeded
NTLM authentication failed
start NTLM authentication
*** Unexpected server response during NTLM authentication
NTLM - respond to server challenge; user = %@; domain = %@
*** Error %ld occurred during NTLM authentication
#SMIMEErrors Missing signed data!
#SMIMEErrors Missing signature part!
#SMIMEErrors decodeMultipartSigned failed with %{public}@
#SMIMEErrors There was no error while decrypting the message but there was no body either!
#SMIMEErrors decodeApplicationPkcs7_mime failed with %{public}@
#SMIMEErrors SecCmsDecoderCreate returned %ld
#SMIMEErrors SecCmsDecoderUpdate returned %ld for %lu bytes
#SMIMEErrors SecCmsDecoderFinish returned %ld
#SMIMEErrors SecCmsDigestContextStartMultiple failed
#SMIMEErrors -appendData: called on _MFSecCMSDecoder after an error has occurred!
#SMIMEErrors -appendData: called on _MFSecCMSDecoder with no signed or enveloped data!
#SMIMEErrors SecCmsSignedDataSetDigestContext on -done returned %ld
#SMIMEErrors _MFSecCMSDecoder asked to verify with pending error (%ld)
#SMIMEErrors There were no digests in the message
#SMIMEErrors The message sender is missing
#SMIMEErrors SecCmsSignedDataVerifySignerInfo returned %ld for #%d:%@
#SMIMEErrors There was a signing error %{public}@
#SMIMEErrors newSignedPart... failed with %{public}@
#SMIMEErrors newEncryptedPart... failed with %{public}@
#SMIMEErrors Found no identity for "%@"
#SMIMEErrors SecCmsMessageCreate for signing failed
#SMIMEErrors SecCmsSignedDataCreate failed
#SMIMEErrors SecCmsContentInfoSetContentSignedData returned %ld
#SMIMEErrors SecCmsContentInfoSetContentData for signing returned %ld
#SMIMEErrors SecCmsSignerInfoCreate failed
#SMIMEErrors SecCmsSignerInfoIncludeCerts returned %ld
#SMIMEErrors SecCmsSignedDataAddCertChain returned %ld
#SMIMEErrors SecCmsMessageCreate for encryption failed
#SMIMEErrors SecCmsEnvelopedDataCreate failed
#SMIMEErrors SecCmsContentInfoSetContentEnvelopedData returned %ld
#SMIMEErrors SecCmsContentInfoSetContentData for encryption returned %ld
#SMIMEErrors Failed to create all the required recipients
#SMIMEErrors -appendData: called on _MFSecCMSEncoder after an error has occurred!
#SMIMEErrors SecCmsMessageEncode returned %ld
#SMIMEErrors -appendData: called twice _MFSecCMSEncoder (only once is allowed for now)!
#SMIMEErrors SecCmsEncoderFinish on -done returned %ld
#SMIMEErrors SecTrustCreateWithCertificates returned %d
#SMIMEErrors SecTrustCreateWithCertificates returned a null SecTrustRef
Enabling SMTPUTF8 support for message delivery: %@
SMTP Delivery for messageID %@ failed with error %{public}@
no entry for mailbox %@?
Error %d on connection %p %{public}@: %{public}s - I/O error %d (%s)
Error %d on connection %p %{public}@: %{public}s
wrong number of arguments (%d) to icusearch
Renaming database %@ to %@
4name_
3oldAC3newt
4name_
4name_t
$ss25ExpressibleByArrayLiteralP
$sSY
$ss9OptionSetP
$ss10SetAlgebraP
Iego_
Iegr_
SSIego_
ySpy
Gz_SpySo8NSObjectCSgGSgzSpyypGSgztc
So8NSObjectCSg
Iegd_
_ypt
So10EMActivityCG
So8NSStringC
$ss21_ObjectiveCBridgeableP
So8NSObjectC
So18EDAccountsProvider_p
So17OS_dispatch_queueC
SgXw
SgXw
So13OS_xpc_object_p
So24OS_dispatch_source_timer_pSg
SgXw
SuIegd_
SuIegr_
SiIegd_
SiIegr_
SayySpy
Gz_SpySo8NSObjectCSgGSgzSpyypGSgztcG
SaySo13MFTaskManager_pG
ySaySo13MFTaskManager_pGG
So13MFTaskManager_p
So9EDAccount_p
SaySo9EDAccount_pG
So8NSObject_pSg
SgXw
SgXw
SaySo17EMMailboxObjectIDCG
4host_
4portt
So11IMAPAccountCSgXw
So11IMAPAccountCSgXwz_Xx
SaySSG
ShySSG
_ypt
GIegg_
So11IMAPAccountC
So7MFErrorC
So8NSObjectCIego_
So8NSObjectCSgIego_
ySay
So9MFAccountC
ySS_G
So12EFObservable_p
SayyXlG
SaySo20ECLocalMessageActionCG
ySay
ySay
7mailbox_Say
GSb6isLastt
SaySo27ECTransferMessageActionItemCG
7mailbox_Say
GSb6isLastt
13sourceMailbox_Say
GSb6isLastt
So6EFPairC
SaySo23ECTransferMessageActionCG
So30ECTransferMessageActionResultsC_So07ECLocalbC0Ct
SaySo30ECTransferMessageActionResultsC_So07ECLocalbC0CtG
So37ECTransferMessageActionResultsBuilder_pIgg_
SaySo15ECServerMessageCG
SaySo16MFLibraryMessageCG
SaySo25ECFlagChangeMessageActionCG
So32ECFlagChangeMessageActionResultsC_So07ECLocalcD0Ct
SaySo32ECFlagChangeMessageActionResultsC_So07ECLocalcD0CtG
So9ECMessage_p
SaySo9ECMessage_pG
So39ECFlagChangeMessageActionResultsBuilder_pIgg_
So21ECMessageFlagsBuilder_pIgg_
SaySo6EFPairCG
So14ECMessageFlagsC
So26ECMessageFlagChangeBuilder_pIgg_
_So14ECMessageFlagsCt
So14ECMessageFlagsCG
So27ECTransferMessageActionItemC
So14ECMessageFlagsCSg
Gz_Xx
ySaySo20ECLocalMessageActionCGG
yAAySaySo20ECLocalMessageActionCGSo012ECFlagChangebC0CSgGGAGG
Siz_Xx
yACy
yACySaySo20ECLocalMessageActionCGSo012ECFlagChangebC0CSgGGAIGSay
GGGG
yACy
yACySaySo20ECLocalMessageActionCGSo012ECFlagChangebC0CSgGGAIGSay
GGGG
So20MFMailMessageLibraryCSg
So12MFMailboxUidC
So6NSDataCSg
SSSg
Iego_
Iegd_
Iegd_
Iegr_
SDySo10MFMimePartCSo6NSDataCG
SnySiG
SJSg
So18MFLibraryIMAPStoreC
So26EDServerMessagePersistenceC
So22EDMessageChangeManagerC
SaySo7NSValueCG
Sg_ABt
So15EDMailboxActionC
SaySo12MFMailboxUidCG
_AAt
SaySo15EDMailboxActionCG
AB_G
_Sit
_SitG
ypSg
yS2SG
So23ECTransferMessageActionC
So26ECIMAPServerMessageBuilder_pIgg_
yAAySaySo20ECLocalMessageActionCGSo010ECTransferbC0CSgGGAGG
yACy
yACySaySo20ECLocalMessageActionCGSo010ECTransferbC0CSgGGAIGSay
GGGG
yABy
yABySaySo20ECLocalMessageActionCGSo010ECTransferbC0CSgGGAHGSay
yAAy
yAAySaySo20ECLocalMessageActionCGSo010ECTransferbC0CSgGGAGGSay
ySaySo20ECLocalMessageActionCGSo010ECTransferbC0CSgGG
ySaySo20ECLocalMessageActionCGSo010ECTransferbC0CSgG
yADy
yADySaySo20ECLocalMessageActionCGSo010ECTransferbC0CSgGGAJGSay
GGGGG
Iegr_
So20ECLocalMessageActionCSg
So23ECTransferMessageActionC_So0abC4ItemCt
yAAySaySo20ECLocalMessageActionCGSo010ECTransferbC0C_So0dbC4ItemCtSgGGAG_AItG
ySaySo20ECLocalMessageActionCGSo010ECTransferbC0C_So0dbC4ItemCtSgGG
ySaySo20ECLocalMessageActionCGSo010ECTransferbC0C_So0dbC4ItemCtSgG
So9EFPromiseCySo6NSDataCG
ySay
So8EFFutureC
So9EFPromiseC
SaySo20ECLocalMessageActionCGSg
SaySo15EDMailboxActionCGSg
So18EFCancelationTokenC
Iegd_
_AAt
_SDy
7mailbox_Say
G8messagest
7mailbox_
7message
5flags
Sg12creationDate
4datat
7mailbox_
4kind
7messageSay
G8sectionsSb22downloadMessageHeaderst
7mailbox_
4kindSDy
G8messagest
GIego_
7mailbox_
G4uidsSay
yADGG2int
Iegd_
Igy_
SgIegd_
So13EDBaseMessage_p
SaySo22MFIMAPMessageWithCacheCG
SaySo13EDBaseMessage_pG
So18EDPersistedMessage_p
GIegr_
GIegd_
SbIegd_
Iegd_
Iegr_
yACy
yACySaySo20ECLocalMessageActionCGSo010ECTransferbC0CSgGGAIGSay
GGGG
yABy
yABySaySo20ECLocalMessageActionCGSo010ECTransferbC0CSgGGAHGSay
yAAy
yAAySaySo20ECLocalMessageActionCGSo010ECTransferbC0CSgGGAGGSay
yADy
yADySaySo20ECLocalMessageActionCGSo010ECTransferbC0CSgGGAJGSay
GGGGG
SaySo20ECLocalMessageActionC_So0abC7ResultsCtG
So20ECLocalMessageActionC_So0abC7ResultsCt
ySaySo9ECMessage_pGG
SgIegnyr_
ySDy
yAAySDy
SgGGAFG
Iegd_
Iegr_
So39MFBackFillingMessageBodyDownloadRequest_p
SgXwz_Xx
Iegd_
Iegr_
SaySo12MFMailboxUidCGSg
Ieg_
_So10EMActivityCt
tSgyc
SgXw
ytSg
IeyB_
SgSbt
SgIegr_
So12EFObservableCy
So8EFFutureCSg
SNySiG
4into_Shy
G5flags
Sg4date
7messaget
SnySiG
SaySSG
ySiG
3key_
5valuetG
3key_
5valuet
_SitG
_Sit
ySSG
_ABtG
_AAt
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
__GG
ySny
SgtG
__GG
ySi6offset_Sny
Sgt7elementtG
Si6offset_Sny
Sgt7elementt
__GG
yyXlG
__GG
__GG
__GG
7oldName_t
$ss12IdentifiableP
Sg_ABt
_pSg
ySnySiGG
$sSY
3key_
5valuetSg
G_Say
SJSg
G7missing_
yABG4doneABSg11lastSeenUIDt
Sg11lastSeenUID_t
$s13IMAP2Behavior022PendingServerResponsesB0P
_p_AA_pt
_AAt
Si5count_t
$ss12CaseIterableP
ySSSay
SSSg
SbSg
SaySSGSg
SDySSSay
SDyS2SG
ySSSay
yS2SG
_GShyADGG
yAB_GG
$s13IMAP2Behavior17AuthenticatedTaskP
8ActionID
9CommandID
$s13IMAP2Behavior11BoxProtocol33_60155CC90A692337B0235A3D21BA77E9LLP
y9CommandID
Qz06ActionB0ACQz_G
$s13IMAP2Behavior11MailboxTaskP
8ActionID
9CommandID
$s13IMAP2Behavior11BoxProtocol33_B65632C0EC6A6864CD47FEF18522012DLLP
y9CommandID
Qz06ActionB0ACQz_G
_pIgngdzo_
ypXp
_AAt
$s13IMAP2Behavior12EnumWithKindP
4Kind
yxq___GG
yxq___GG
yxq__G
13sourceMailbox_Si5limitt
Iego_
Iegd_
Iego_
Iego_
Iegd_
Iegr_
SSIego_
Iegr_
SgIegd_
Iegd_
Iegr_
Iegd_
Iegd_
7mailbox_SNy
G5range
yACG4keept
7mailbox_Say
GG2int
SiSg
7mailbox_
4kind
7messaget
So8NSObjectCSg
7mailbox_
7message
0B7Headerst
7mailbox_
4kind
7message
0C4Size
13bodyStructuret
7mailbox_
Sg5valuet
7mailbox_Say
7mailbox_
4kind
G9excludingSiSg8inLatestSi5limitt
_Shy
_G_G
Iego_
13sourceMailbox_SDy
_A13At
7mailbox_
8metadatat
7mailbox_Say
G7updatest
7mailbox_
Sg5valuet
7mailbox_Si5limitt
7mailbox_
7message
5flags
Sg12creationDate
4datat
7mailbox_
7messaget
7mailbox_
7message
Sg3uidt
$ss25ExpressibleByArrayLiteralP
SDyx
yx_GG
_GGIgo_
yx_GG
yx_GShyABGG
SgtSg
8existing_Sny
G6addingt
8existing_
10totalCountt
6offset_t
11knownLength_AA6offsett
8knownMax_AA6offsetSi5countt
7minimum_AA3maxt
SaySny
SgtG
$ss9OptionSetP
$ss10SetAlgebraP
$sSY
$ss25ExpressibleByArrayLiteralP
_A7At
_A103At
_A5At
_A111At
_A13At
ySiG
ySny
SvSgSiXC
SvSgAA_SitXC
ySvSgXC
ySv_SVSitXC
SnySiG
$sSk
$sSK
$sSl
$sST
$sSM
$sSm
qd__
xxIegnr_
ySiG
ySiG
yx_G
yxGG
yxGG
yxSgG
xXMT
7address_SS4hosttG
7address_SS4hosttG
SS4host_Si4portt
$s12NIOIMAPCore216SockAddrProtocolP
SiSg
ySiSgG
SS_SSt
ySS_SStG
ySay
ySSG
ySay
yyXlG
ySiG
7options_t
Sb19streamingAttributes_
7optionst
ySay
ySSSgG
SSSg
14remainingBytest
16lineFeedStrategy_
9remainingt
$ss26ExpressibleByStringLiteralP
$ss43ExpressibleByExtendedGraphemeClusterLiteralP
$ss33ExpressibleByUnicodeScalarLiteralP
yS2SG
SaySSG
_Say
_Say
9reference
9reference
9reference_
7patternt
4from_AA2to
SgG10parameterst
_Say
9mechanism_
Sg15initialResponset
SS8username_SS8passwordt
GG_Say
GSay
GG_Say
3key_SSSg7charsetSay
G13returnOptionst
yS2SSgG
GG_Say
GSay
GG_Say
_Say
G7options_
7mailboxSay
G7entriest
7mailbox_
G7entriest
Sg7mailbox_Say
G10mechanismst
SS4name_Say
G8payloadst
SS3tag_
11appendingTot
7message_t
7options_t
Si4size_t
Sb10extensions_t
Sb4peek_
GSgt
Sb4peek_
7sectionSNy
GSg7partialt
7section_t
$s12NIOIMAPCore213IMAPEncodableP
$ss12CaseIterableP
SaySS_SStG
SaySiG
SJSg
_Sb16hasExtensionDatat
7section_
Sg4datat
7section_Si4sizet
G6values_
7mailboxt
G4list_
7mailboxt
$ss27ExpressibleByIntegerLiteralP
$sSx
SayABGG
yS2SG
Si_SS5topict
4kind_Si9byteCountt
7section_SiSg6offsett
7section_SiSg6offsett
_Say
SS_SSSgt
_AAt
$s12NIOIMAPCore217MessageIdentifierP
6StrideSxQz
SNyxG
yx_GG
yx_GG
yx_G
yxGG
yxGG
yxGG
4path_
Sg16authenticatedURLt
3ref_
3uid
Sg7section
Sg7partialt
3uid_
Sg7section
Sg7partialt
7section_
Sg7partialt
Iegd_
SgIegd_
GIegd_
GIego_
GIego_
Iegd_
SgIegd_
Iegd_
SgIegd_
Iegd_
SgIegd_
Iego_
Iego_
Iego_
Iego_
GIego_
Iego_
Iego_
Iego_
$s12NIOIMAPCore220ByteToMessageDecoderP
$s12NIOIMAPCore220MessageToByteEncoderP
Sb16seenPreviousPart_t
tKcG
_pIeglyozo_
ySS_
tKctG
_pIeglyrzo_
tKcG
tKcG
_pIeglyrzo_
tKcG
_pIeglyrzo_
ySay
tKcG
_pIeglyozo_
ySS_
tKctG
_pIeglyrzo_
tKcG
_pIeglyrzo_
tKcG
_pIeglyrzo_
tKcG
_pIeglydzo_
tKcG
_pIeglyozo_
ySS_
tKctG
_pIeglyrzo_
tKcG
tKcG
tKcG
tKcG
_pIeglyozo_
tKcG
_pIeglyrzo_
tKcG
_pIeglyozo_
ySS_
tKcG
_pIeglyozo_
S2Sc
tKcG
_pIeglyozo_
tKcG
_pIeglyozo_
ySS_SSSgtG
tKcG
_pIeglyozo_
tKcG
_pIeglyozo_
tKcG
_pIeglyozo_
ySay
tKcG
_pIeglyozo_
tKcG
_pIeglyrzo_
tKcG
_pIeglyozo_
$s12NIOIMAPCore26ParserP
S2SIegnr_
S2SIeggo_
Si14attributeCount_t
Si_Si14attributeCountt
tKcG
_pIeglyrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
_pIeglnrzo_
tKcG
_pIeglyozo_
7ElementSTQz
yx_G
yxGG
yxGG
5IndexSlQz
y5IndexSlQzG
x5first_x6secondt
yxGG
yxGG
SnyxG
yx_GG
yx_GG
yxGG
yxGG
Si4high_
3lowt
SaySnyxGG
yx_G
$s12NIOIMAPCore222_ByteBufferAPITemplateP
$s12NIOIMAPCore226_ByteBufferViewAPITemplateP
$sSt
yx_G
yxGG
yx_G
yypG
SpyxG
yytG
SRyxG
SRyxGSg
SryxG
SryxGSg
ySaySiSgGSSG
SaySiSgG
x3key_q_5valuet
yxq____G
yxq___G
yxq_G
yxq__G
$ss30ExpressibleByDictionaryLiteralP
yxq__GG
yxq__GG
yq_G
yx_GG
SiSg5index_
6buckett
yxGG
yx_G
yx_GG
ySVSgXC
SbSVSgXC
xSgIegr_
SgIego_
SVSg_A2BXBtXC
SVSg
SVSgSPy
GSgXC
Iegd_
Iego_
Iego_
Iegd_
$sSY
4into_Shy
G5flags
Sg4date
7messaget
SaySSG
9mechanism_
Sg15initialResponset
SS8username_SS8passwordt
_Shy
4from_AA2tot
Sg9reference_AB11namePatternt
_Say
_Say
G13returnOptionst
G8messages_
4datat
G8messages_
4datat
G8messages_
5itemst
G8messages_
2tot
yS2SSgG
ySSSgG
SSSg
ySSG
Sg_ABt
_AAt
$sSY
ypSg
Iego_
Iegd_
Iegd_
Iegd_
Iegd_
Iegr_
SJSg
_A13At
$ss12IdentifiableP
$ss12CaseIterableP
SnySiG
ySnySiGG
ySS_
SSSgGtG
SiSg
$sSY
7mailbox_
8metadatat
7mailbox_Say
GG2int
7mailbox_Say
7mailbox_SNy
G5range
yACG4keept
7mailbox_
Sg5valuet
7mailbox_
Sg5valuet
7mailbox_
4kind
G9excludingSiSg8inLatestSi5limitt
7mailbox_
4kind
7message
0C4Size
13bodyStructuret
7mailbox_
7message
0B7Headerst
7mailbox_
4kind
7messaget
7mailbox_Say
G7updatest
7mailbox_Si5limitt
7mailbox_
7messaget
7mailbox_
7message
Sg3uidt
13sourceMailbox_Si5limitt
13sourceMailbox_SDy
_Shy
Si9remaining_Si9completedt
_AA8password
11requirementt
8personID_AA5tokenAA07machineB0AA15oneTimePasswordAA10clientInfo
11requirementt
SS8username_SS11accessToken
11requirementt
11requirement_t
$ss12IdentifiableP
7mailbox_
G4uidsSay
yADGG2int
7mailbox_
4kindSDy
G8messagest
7mailbox_
4kind
7messageSay
G8sectionsSb22downloadMessageHeaderst
7mailbox_Say
GSb6isLastt
7mailbox_
7message
5flags
Sg12creationDate
4datat
7mailbox_Say
GSb6isLastt
7mailbox_Say
G8messagest
13sourceMailbox_Say
GSb6isLastt
_SDy
Sg_ABt
SbG_SStG
SaySSG
$ss12CaseIterableP
SbSg
SnySiG
ySSG
Iegr_
SgIegd_
Iegd_
Iegd_
Iegd_
Iegd_
Iegd_
Iegd_
Iegd_
Iegd_
Iegd_
7oldName_t
_AAt
SiSg
$ss27ExpressibleByIntegerLiteralP
7ElementSTQz
ySnySiGG
SvSgAA_
ABtXCSg
ySvSg_AAtXCSg
SvSg
$sSY
SaySSG
$s15IMAP2Connection23AuthenticationMechanismP
$s15IMAP2Connection27SASLAuthenticationMechanismP
_p_AA_pt
Sg_ABt
SS8username_SS8passwordt
8username_AA8passwordt
8personID_AA5tokenAA07machineB0AA15oneTimePasswordAA10clientInfot
SS8username_SS11accessTokent
SSSg
So17OS_dispatch_queueC
_pSgXw
yySay
Sgcc
$s15IMAP2Connection07CommandB8DelegateP
So8NSObjectCSg
SgXw
SgXw
GIegg_Iegg_
SgXwz_Xx
SgIegn_Iegg_
_AAt
_Gz_Xx
$sST
Si6offset_
7elementt
$s15IMAP2Connection0B8DelegateP
_pSgXw
4into_Shy
G5flags
Sg4date
7messaget
_AAt
_AAt
_pSg
SgXwz_Xx
Sgz_Xx
SgSb
SgIegggyn_
_A13At
_AAt
Sg13failedMailbox_t
ypSg
yyXlG
_Sit
_pSg
SgIegn_
SbIegy_
SiSg
yS2SSgG
yS2SSgGSg
SnySiG
_ptG
$ss12CaseIterableP
$ss12IdentifiableP
SbSg
ySnySiGG
ySSG
ySi_
ySSSgG
$s15IMAP2Connection4TaskP
9mechanism_
Sg15initialResponset
SgXw
SgXwz_Xx
Ieg_
So24OS_dispatch_source_timer_pSg
_Say
_AAt
_ptG
_pSg
So17OS_dispatch_queueC
_pSgXw
So24OS_dispatch_source_timer_pSg
$s22IMAP2ConnectionControl27BetterPathEvaluatorDelegateP
SgXw
yySay
Sgcc
SgXw
SgXw
$s22IMAP2ConnectionControl11PersistenceP
_pSgXw
$s22IMAP2ConnectionControl0B12PoolDelegateP
yyXlG
SSSg
change
started
stopped
rawValue
ArrayLiteralElement
RawValue
Element
messageSize
_rawValue
_ObjectiveCType
didSetCriteria
activity
accountProvider
queue
complete
pendingWork
noWork
error
scheduler
underlying
running
timer
didComplete
elements
request
status
RawValue
queue
token
persistenceAdaptor
username
appleToken
oAuthToken
environment
opaqueIDCoder
nameMapping
updates
flags
library
mailbox
taskManager
kind
existingHeaders
newMessageHeaders
concatenators
sections
part
full
data
isPartial
mailbox
message
messageHeaders
invalidUID
noHeaders
account
logger
pathSeparator
mailbox
mailboxURL
account
store
serverMessagePersistence
messageChangeManager
actionPersistentID
messagePersistentID
operation
sourceMessage
targetMailbox
reference
move
copy
RawValue
created
deleted
renamed
oldNamesForRenamedMailboxes
didChange
noChanges
rawValue
account
mailboxes
changedParents
insertedMailboxes
mailbox
originalChildren
path
found
parent
topLevel
notFound
displayName
imapName
RawValue
elements
message
mailbox
unableToFindPersistedMessage
message
section
initial
temporaryFile
concatenator
complete
invalid
data
count
move
result
action
item
sourceUID
destinationPersistentID
targetMailbox
actionPersistentID
encoder
decoder
nextID
messageRequests
opaqueMessageID
mailbox
messageSize
dataPromise
_nextActionID
_sendReply
messagesBeingDownloaded
_mailboxPathSeparator
didTearDown
lastActivity
emailActivities
statusIsolationQueue
account
workQueue
opaqueIDCoder
nameMapping
logger
_allLocalMessageActions
_allLocalMailboxActions
lastKnownLocalAction
downloads
clientStateObserver
cancelationToken
runningSyncs
currentBackFillSync
unableToGetDataSource
flags
creationDate
data
elements
nextID
request
completion
complete
pendingWork
persistenceWorkloop
queue
logger
identifier
makeEngineAndAdaptor
_engine
_adaptor
engineIsolation
bodyFetchContext
notImplemented
taskManager
anyConnection
withAffinity
createAffinity
deselect
connection
mailbox
maximumIdleConnectionCount
maximumConnectionCount
activelyConnecting
other
limits
usage
draft
flagged
forwarded
redirected
forwardedRedirectedLegacy
junk
notJunk
junkLegacy
supportsFlagColorFlags
supportsForwarded
supportsRedirected
supportsJunk
supportsColoredLabel
remove
connection
syncState
mailboxOfInterest
selectedState
syncRequests
userInitiatedDownloads
tracingID
rawValue
RawValue
mailboxes
mailboxesCreatedOnRemote
userVisibleMailboxes
_nextTracingID
unknown
known
messageCount
nextUID
uidValidity
highestModificationSequence
flagEncoder
flagDecoder
syncSteps
messagesWithTemporaryUploadFailure
pendingServerResponses
pendingPersistenceUpdates
userInitiatedDownloadUIDs
missingMessages
pending
done
completed
unknown
needsToUploadMessages
needsToUploadFlagChanges
needsToMoveAndCopyMessages
messagesPendingTextDownload
messagesPendingAttachmentDownload
messagesWithDownloadFailures
flags
gmailLabels
basic
condStore
behavior
expungedMessages
sequenceNumber
change
many
noChange
clear
changesWithUID
changesWithoutUID
newModificationSequenceValue
sequenceUpdates
changesWithUID
changesWithoutUID
_newModificationSequenceValue
newModificationSequenceValue
commandsToWaitOn
sequenceValue
server
mailboxes
mailboxesNeedToBeUpdated
separator
moveSupport
gmailLabelSupport
condStoreSupport
sequenceNumberBehavior
extendedSearchSupport
supported
unavailable
compliant
bogus
environment
mostRecentPathAttributes
runningSyncRequests
remote
local
blockedSteps
listMailboxes
createMailboxes
syncMailboxes
deleteMailboxes
task
completedMailboxes
completedSteps
stepsToRestart
stepsWithDependencies
resync
fetchMessages
detectRemovedMessages
detectRemovedMessagesInRecent
detectFlagChanges
detectFlagChangesInRecent
uploadMessages
uploadFlagChanges
moveAndCopyMessages
expungeServerMessages
findPendingTextDownload
findPendingAttachmentDownload
updateLocalFlags
findMissingMessages
AllCases
userInitiatedDownload
userVisible
activeTask
activeSync
needsSync
priorityOrder
reasons
visible
notVisible
logName
engineID
state
tasks
mailboxesToSelect
environment
mostRecentPathAttributes
runningSyncRequests
remote
local
mailboxes
usage
needsToUploadMessages
needsToUploadFlagChanges
needsToMoveAndCopyMessages
messagesPendingTextDownload
messagesPendingAttachmentDownload
messagesWithDownloadFailures
constrained
kind
server
mailboxesNeedToBeUpdated
separator
pendingSync
downloadRequests
userVisibleMailboxes
mailbox
connection
history
authenticatedTask
mailboxTask
completed
failed
name
mailboxOfInterest
selectedConnection
syncState
syncRequests
userInitiatedDownloads
message
size
pending
done
messageCount
nextUID
uidValidity
highestModificationSequence
syncSteps
messagesWithTemporaryUploadFailure
pendingServerResponses
pendingPersistenceUpdates
userInitiatedDownloadUIDs
missingMessages
pathSeparator
attributes
specialUse
supportsMove
supportsGmailLabels
supportsCondStore
bogusSequenceNumberBehavior
runningCommands
runningActions
completedCommandCount
completedActionCount
lowestUID
lastSeenUID
highestModificationSequenceValue
unknown
missing
state
runningTasks
logName
logger
error
connection
selectedMailbox
runningCommands
messageBodyDownload
fetchMessages
detectChangesToMessages
onlyNew
idMap
unknownRunningTaskCommandID
unknownRunningTaskActionID
prerequisiteSyncSteps
idMap
unknownRunningTaskCommandID
unknownRunningTaskActionID
task
history
logger
tracingID
actionIDGenerator
commandIDGenerator
notifyTaskStarted
notifyTaskCompleted
rawValue
authenticated
mailbox
failed
completed
mailboxHasConnectionAffinityButNoSyncStateAvailable
RawValue
current
tracingID
tasks
nextTaskTracingID
schedulingRandomNumberGenerator
task
value
authenticated
mailbox
command
action
running
previous
commands
actions
underlying
runningTaskID
customID
debugDescription
mailboxes
createdMailboxes
CommandID
ActionID
notifyFailure
create
list
unknown
inUse
failure
success
results
mailboxesToCheckForPendingMessages
mailboxesToDelete
CommandID
ActionID
checkForPendingMoveAndCopy
notifyOfDelete
mailbox
mailbox
syncSteps
gmailLabels
fetchModificationSequence
flagChangesBeforeRequesting
existingUIDs
sequenceNumberBehavior
CommandID
ActionID
removeUnknownMessages
fetch
mailbox
syncSteps
rangeOfInterest
remoteMessageCount
uidsFoundLocally
gmailLabels
flagChangesBeforeRequesting
expungedMessagesBeforeRequesting
existingUIDs
sequenceNumberBehavior
CommandID
ActionID
getLocalUIDs
removeUnknownMessages
fetch
mailbox
lastSeenUID
extendedSearch
uidsRemainingOnServer
expungedMessagesBeforeRequestingCount
CommandID
ActionID
removeUnknownMessages
search
mailbox
rangeOfInterest
remoteMessageCount
extendedSearch
uidsFoundLocally
uidsRemainingOnServer
expungedMessagesBeforeRequesting
CommandID
ActionID
getLocalUIDs
removeUnknownMessages
search
Kind
mailboxName
messageSectionKind
fetchBodyStructure
fetchMessageHeaders
fetchSectionData
syncSteps
kind
batch
inProgressMessages
fullMessageDownloadUIDs
CommandID
ActionID
chooseMessageDataToDownload
messageHeadersDownloaded
didDownloadAllSections
findNewestMessagesMissingSections
appendMessageSectionData
userInitiated
mailbox
messages
AllCases
part
downloadStatus
headers
message
headerStatus
sectionsInProgress
completedSections
section
fullMessage
downloaded
notRequested
requested
inProgress
mailbox
messagesWithBodyStructure
sectionsBeingDownloaded
messagesWithFailures
completeMessageSize
bodyStructure
messages
section
range
mailbox
message
section
byteCountUpperBound
resequencer
didSendInitialData
didFail
mailbox
syncSteps
CommandID
ActionID
response
expunge
syncSteps
mailbox
serverMessages
allMissingUIDs
persistedLastSeenUID
newLastSeenUID
CommandID
ActionID
createNewMessage
updateLastSeenUID
fetch
debugDescription
mailbox
syncSteps
queryRanges
extendedSearch
uidCountLimit
serverUIDs
localUIDs
CommandID
ActionID
searchLocal
searchServer
range
persistence
elements
lastSeenUID
needToQuery
knownToNotExist
mailboxName
messageSectionKind
messagesToDownload
mailbox
syncSteps
kind
exclude
inLatest
CommandID
ActionID
findNewestMessagesMissingSections
mailbox
messages
syncSteps
uidAndSizes
CommandID
ActionID
getUIDsForDownloadRequests
newMailboxes
separator
CommandID
ActionID
updateRemoteMailboxes
listMailboxes
Kind
markAsDeleted
copy
move
mailbox
syncSteps
moveSupport
messageCount
needsToRunAgain
commandsToRun
completedCommands
targetMailboxesNeedingFindMissingMessages
targetMailboxesNeedingUpload
CommandID
ActionID
source
target
targetMailbox
messages
operation
targetMessage
result
findMessages
completed
mailbox
uids
flagDecoder
gmailLabels
messages
debugDescription
requestIDs
CommandID
ActionID
syncRequestsDidComplete
mailbox
syncSteps
localModSeq
serverModSeq
flagChangesBeforeRequesting
gmailLabels
CommandID
ActionID
fetch
mailbox
syncSteps
oldValidityValue
newMeta
CommandID
ActionID
removeMessages
mailboxesToRename
renamedMailboxes
CommandID
ActionID
mailbox
syncSteps
mailbox
needsToRunAgain
sentChanges
updateCount
CommandID
ActionID
updateModSeq
updateFlags
mailbox
syncSteps
flagsToUpload
uploadedMessageCount
needsToRunAgain
didDeleteMessage
dependencyStatus
CommandID
ActionID
persistence
encoded
empty
unknown
waiting
noDependencies
hasDependencies
messages
update
pendingAdd
elements
remainingElements
findDependencies
findMessages
store
Kind
message
flags
creationDate
data
reportUploadCompletion
findMessages
sendMessageData
mailbox
syncSteps
messagesToUpload
remainingMessagesToUpload
pending
currentMessageBeingUploaded
messagesWithTemporaryFailures
completed
needsToRunAgain
CommandID
ActionID
status
append
success
permanentFailure
network
networkStatusDidChange
persistence
checkForWork
message
kind
response
ArrayLiteralElement
running
completed
graph
state
value
nodes
incoming
outgoing
ArrayLiteralElement
duplicateUID
duplicateSequenceNumber
sequenceNumbersHaveGaps
validRange
uids
sequenceNumbers
error
data
noData
offsetIsNotMultipleOfSegmentLength
dataSpansMultipleSegments
someBytesAreDuplicated
bytesAlreadyDownloadedWhenAddingCompleteRange
receivedDataPastKnownEnd
receivedDataPastKnownMax
dataSpansPastKnownMaximumAfterInsert
rawValue
segments
bodyOffset
knownByteCount
exactly
lessThanOrEqual
unknown
RawValue
Element
RawValue
ArrayLiteralElement
rawValue
sin_len
sin_family
sin_port
sin_addr
sin_zero
sin6_len
sin6_family
sin6_port
sin6_flowinfo
sin6_addr
sin6_scope_id
sun_len
sun_family
sun_path
__u6_addr
metadata
refCounts
ss_len
ss_family
__ss_pad1
__ss_align
__ss_pad2
s_addr
sa_len
sa_family
sa_data
invalidCharacter
invalidLength
unexpectedPaddingCharacter
unexpectedEnd
RawValue
rawValue
upperBound
_begin
malloc
realloc
free
memcpy
_storage
_readerIndex
_writerIndex
_slice
capacity
bytes
allocator
baseError
negativeLength
unreadableSourceBytes
little
Element
Index
SubSequence
Indices
Iterator
ArrayLiteralElement
_buffer
_range
Element
Index
Iterator
SubSequence
Indices
ArrayLiteralElement
_buffer
headBackingIndex
tailBackingIndex
_backingIndex
_backingCheck
isIndexGEQHeadIndex
failureDescription
error
function
reason
errno
_backing
name
address
netmask
broadcastAddress
pointToPointDestinationAddress
multicastSupported
interfaceIndex
backing
unknown
failedToParseIPString
unsupported
unixDomainSocketPathTooLong
address
unixDomainSocket
_storage
value
buffer
encodedAtLeastOneCatenateElement
useQuotedString
useSynchronizingLiteral
useNonSynchronizingLiteralPlus
useNonSynchronizingLiteralMinus
useBinaryLiteral
loggingMode
mode
buffer
stopPoints
client
server
bytes
waitForContinuation
buffer
complete
incomplete
insideLiteral
invalid
state
frameLength
bufferSizeLimit
normalTraversal
searchingForLiteralHeader
insideQuoted
foundCR
ignoreFirst
includeInFrame
findingSize
findingLiteralExtension
findingClosingCurly
findingCR
findingBinaryFlag
normal
escaped
command
submit
user
authenticateUser
anonymous
byteCount
withoutContentTransferEncoding
options
data
flagList
internalDate
extensions
stringValue
authenticatedURL
verifier
expire
access
urlAuthenticationMechanism
encodedAuthenticationURL
rawValue
Element
Index
SubSequence
Indices
Iterator
singlepart
multipart
stringValue
string
number
RawValue
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
rawValue
kind
parameters
disposition
language
stringValue
parameters
contentDescription
encoding
octetCount
languages
location
location
extensions
parts
mediaSubtype
extension
parameters
dispositionAndLanguage
kind
fields
extension
basic
message
text
envelope
body
lineCount
mediaText
digest
dispositionAndLanguage
rawValue
splitIndex
modificationSequence
create
delete
examine
list
listIndependent
lsub
rename
select
status
subscribe
unsubscribe
authenticate
login
enable
copy
fetch
store
search
move
uidCopy
uidMove
uidFetch
uidSearch
uidStore
uidExpunge
getQuota
getQuotaRoot
setQuota
getMetadata
setMetadata
extendedSearch
resetKey
generateAuthorizedURL
urlFetch
compress
custom
capability
logout
noop
startTLS
check
close
expunge
unselect
idleStart
namespace
start
beginMessage
messageBytes
beginCatenate
catenateURL
catenateData
endMessage
endCatenate
finish
begin
bytes
tagged
append
continuationResponse
idleDone
literal
verbatim
command
labelled
attributes
year
month
rawValue
year
month
hour
minute
second
zoneMinutes
token
atom
charset
returnOptions
sourceOptions
content
sourceMailbox
scopeOptions
personName
sourceRoot
mailbox
host
authenticationType
mailbox
query
mailboxUIDValidity
encodedSearch
section
data
data
flag
backing
backing
date
subject
from
sender
reply
inReplyTo
messageID
dateTime
bodyStructure
bodySection
modificationSequenceValue
binary
binarySize
envelope
flags
internalDate
rfc822
rfc822Header
rfc822Size
rfc822Text
modificationSequence
gmailMessageID
gmailThreadID
gmailLabels
modificationSequenceValue
changedSince
other
stringValue
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
rawValue
flag
wildcard
RawValue
remove
replace
flags
gmailLabels
operation
silent
networkMessagePath
authenticatedURL
date
time
year
month
hour
minute
second
fraction
userAuthenticationMechanism
host
port
server
command
type
data
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
value
value
lastCommand
option
subscribed
option
remote
specialUse
option
subscribed
remote
specialUse
recursiveMatch
baseOption
options
RawValue
AllCases
messageCount
recentCount
uidNext
uidValidity
unseenCount
size
highestModificationSequence
nextUID
flags
list
lsub
search
extendedSearch
status
exists
recent
namespace
searchSort
identifiers
modificationSequence
groupName
sourceRoot
children
singleAddress
group
attributes
path
extensions
backing
maximumSize
actualSize
description
name
pathSeparator
bytes
hashValue
mailbox
pattern
encodedMailbox
uidValidity
mechanism
base64
stringValue
kind
subtype
RawValue
rfc822
buffer
flags
envelope
internalDate
rfc822Size
body
binary
binarySize
fetchModificationResponse
gmailMessageID
gmailThreadID
gmailLabels
expunge
vanished
vanishedEarlier
generateAuthorizedURL
urlFetch
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
rawValue
mailboxReference
iUID
section
range
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
backing
maxSize
scope
other
values
list
bytes
IntegerLiteralType
Stride
value
string
delimiter
responseExtensions
userNamespace
otherUserNamespace
sharedNamespace
server
messagePath
server
command
subtree
mailboxes
subtreeOne
inboxes
personal
subscribed
selected
selectedDelayed
content
standard
vendor
ArrayLiteralElement
string
array
range
offset
length
resourceName
limit
resourceName
usage
limit
storage
networkPath
absolutePath
empty
mailbox
version
responseText
data
correlator
returnData
continuationRequest
response
untagged
fetch
tagged
fatal
authenticationChallenge
idleStarted
start
simpleAttribute
streamingBegin
streamingBytes
streamingEnd
finish
binary
body
rfc822
rfc822Text
rfc822Header
uidValidity
uids
destinationUIDValidity
sourceUIDs
destinationUIDs
conditionalState
mailboxData
messageData
capabilityData
enableData
quotaRoot
quota
metadata
applePushService
code
text
badCharset
capability
permanentFlags
uidNext
uidValidity
unseen
namespace
uidAppend
uidCopy
other
modified
highestModificationSequence
metadataLongEntries
metadataMaxsize
urlMechanisms
referral
alert
parse
readOnly
readWrite
tryCreate
uidNotSticky
useAttribute
notSaved
closed
noModificationSequence
metadataTooMany
metadataNoPrivate
unavailable
authenticationFailed
authorizationFailed
expired
privacyRequired
contactAdmin
noPermission
inUse
expungeIssued
corruption
serverBug
clientBug
cannot
limit
overQuota
alreadyExists
nonExistent
compressionActive
state
preauth
statusOption
optionExtension
subscribed
children
specialUse
authenticatedURL
authenticatedURLRump
urlRump
mechanism
_backing
zero
infinity
RawValue
mailbox
uidValidity
before
body
from
keyword
since
subject
text
unkeyword
header
messageSizeLarger
sentBefore
sentOn
sentSince
messageSizeSmaller
sequenceNumbers
older
younger
filter
modificationSequence
answered
deleted
flagged
recent
seen
unanswered
undeleted
unflagged
unseen
draft
undraft
extensions
sequenceValue
count
modificationSequence
dataExtension
optionExtension
count
save
ArrayLiteralElement
part
kind
array
headerFields
headerFieldsNot
complete
header
MIMEHeader
text
uidValidity
modificationSequenceValue
knownUIDs
sequenceMatchData
basic
qresync
condStore
IntegerLiteralType
Stride
rawValue
knownSequenceSet
knownUidSet
identifiers
modificationSequence
unchangedSince
other
sequence
comp
IntegerLiteralType
Stride
rawValue
IntegerLiteralType
range
Element
Index
SubSequence
Indices
Iterator
ArrayLiteralElement
_ranges
underlying
rangeIndex
indexInRange
rawValue
Stride
ArrayLiteralElement
IntegerLiteralType
Stride
rawValue
IntegerLiteralType
rawValue
stringValue
messageList
fetch
data
refUidSectionPartial
uidSectionPartial
sectionPartial
partialOnly
encodedSection
stringValue
encodedUser
authenticationMechanism
engine
mailbox
byteCount
buffer
responses
continue
needMoreData
numberOfSynchronisingLiterals
commandPart
parser
bufferLimit
mode
synchronisingLiteralParser
streamingBytes
waitingForCatenatePart
streamingCatenateBytes
lines
idle
waitingForMessage
streamingEnd
streamingCatenateEnd
append
catenate
start
simpleAttribute
literalStreamingBegin
quotedStreamingBegin
finish
messages
uidNext
uidValidity
unseen
size
recent
highestModifierSequence
parsedStringCache
literalSizeLimit
messageBodySizeLimit
stackDepth
maximumStackDepth
parser
bufferLimit
messageAttributeLimit
bodySizeLimit
mode
response
streamingQuoted
attributeBytes
fetchMiddle
fetchOrNormal
untaggedResponse
fetchResponse
offset
synchronisingLiterals
state
maximumValidBytes
synchronizingLiteralCount
waitingForLiteralBytes
waitingForCompleteLine
commandTag
parserError
hint
file
line
limit
bytes
noFlagChanges
noFlagReads
noMailboxCommandsRunning
noUntaggedExpungeResponse
noUIDBasedCommandRunning
changesFlags
readsFlags
changesMailboxSelection
dependsOnMailboxSelection
mayTriggerUntaggedExpunge
isUIDBased
barrier
buffer
useQuotedString
Element
Index
SubSequence
Indices
Iterator
_rangeOffset
base
subranges
pair
Element
Iterator
Index
SubSequence
Indices
_ranges
Element
Iterator
Index
SubSequence
Indices
SubSequence
Element
Iterator
Index
Indices
singleRange
variadic
empty
_storage
Element
Iterator
Index
SubSequence
Indices
_storage
_nextSlot
_endSlot
ArrayLiteralElement
_buffer
_header
_elements
_storage
capacity
count
startSlot
position
first
second
offset
_hashTable
_currentBucket
_currentRawValue
_nextBits
_remainingBitCount
_wrappedAround
_header
_buckets
_storage
_scaleAndSeed
_reservedScaleAndBias
Element
Iterator
Index
SubSequence
Indices
_base
_bounds
_end
_index
Element
Iterator
Index
SubSequence
Indices
_base
Value
Element
Iterator
_base
_position
Element
Iterator
Index
SubSequence
Indices
_base
_keys
_values
ArrayLiteralElement
Element
Iterator
Index
SubSequence
Indices
Element
Iterator
Index
SubSequence
Indices
_base
_bounds
ArrayLiteralElement
Element
_base
base
__storage
_elements
Element
Iterator
_words
_count
bitset
index
word
value
storage
rawValue
state
handle
description
encodedData
rawValue
tracingID
RawValue
rawValue
name
RawValue
engine
connection
action
command
task
localMailbox
authenticate
login
select
examine
create
delete
rename
list
status
append
uidSearch
extendedUIDSearch
fetch
uidFetch
uidStore
uidCopy
uidMove
registerPush
capability
noop
startTLS
check
close
expunge
compress
items
changedSince
condStore
searchUID
fetchUID
moveUID
storeUID
copyUID
command
metadata
refCounts
command
continuations
literal
messageBodyEncoding
mode
standard
plus
minus
binary
normal
logging
RawValue
rawValue
rawValue
message
mime
engine
connection
path
attributes
specialUse
RawValue
AllCases
noSelect
marked
unmarked
nonExistent
noInferiors
subscribed
remote
hasChildren
hasNoChildren
body
bodySections
bodyStructure
envelope
flags
gmailLabels
internalDate
messageSize
modificationSequence
section
origin
data
options
apsVersion
accountID
deviceToken
subtopic
mailboxes
topic
preAuth
capability
list
listSubscription
status
search
extendedSearch
flags
exists
recent
expunge
fetch
applePushService
untagged
commandCompletion
name
version
osVersion
vendor
supportURL
address
date
command
arguments
environment
outputBuffer
framingParser
responseParser
byteCountNeededToCompleteFrame
parsedFrames
response
framingError
parsingError
needMoreData
partialFetchResponse
invalidStateForPartialFetchResponse
runAwayFetchResponseWithTooManyParts
runAwayFetchResponseWithTooManyAttributes
runAwayFetchResponseWithTooMuchBinaryData
repeatedStreamBegin
streamingBytesBeforeBegin
streamingEndBeforeBegin
bodySectionOffsetOutOfRange
unexpectedAuthenticationChallenge
unexpectedIdleStart
underlying
input
invalidTag
invalidMessageSequenceNumber
valueOutOfRange
framingFailed
invalidFrame
section
offset
data
RawValue
AllCases
archive
drafts
flagged
junk
sent
trash
connectionIdentifier
commandCounter
RawValue
syncRequestsDidComplete
updateRemoteMailboxes
didDeselectMailboxes
removeAllMessagesAndUpdateMetadata
getMessageUIDs
createNewMessages
removeUnknownMessages
updateMailboxLastSeenUID
updateMailboxHighestModificationSequenceValue
findNewestMessagesMissingSections
chooseMessageDataToDownload
messageHeadersDownloaded
appendMessageSectionData
didDownloadAllSections
updateFlags
findMessagesToBeUploaded
sendMessageDataForUpload
didUploadMessage
failedToUploadMessage
findMessagesWithChangedFlags
findMessagesWithFlagChangeAppliedAfterCopy
findMovedOrCopiedMessages
didMoveOrCopyMessages
connectionStatusDidChange
failedToCreateMailboxOnServer
activityDidChange
getUIDsForDownloadRequests
downloadRequestsDidComplete
rawValue
validity
lastSeenUID
highestModificationSequenceValue
message
flags
gmailLabels
metadata
refCounts
elements
connected
serverUnreachable
connecting
authenticationFailed
error
fetchingMessages
downloadingMessageBodies
done
running
notStarted
username
appleToken
oAuthToken
preAuth
plaintextIsAllowed
requireTLS12
mailbox
message
kind
attachment
text
rawValue
power
isForeground
isLocked
thermalState
lowPower
onBattery
pluggedIn
RawValue
actionDidComplete
update
environmentDidChange
sync
retractSync
setLocalMailboxes
setUserVisibleMailboxes
didFindMessageUIDs
downloadSectionsInMessages
downloadSectionData
uploadMessages
messageDataForUpload
uploadChangedFlags
uploadMessagesWithChangedFlagAfterCopy
moveOrCopyMessages
setDownloadRequests
setUIDsForDownloadRequests
rawValue
message
flags
operation
sourceMessage
targetMailbox
targetMessage
move
copy
succeeded
failed
succeededWithoutUID
mailbox
newName
AllCases
unread
deleted
answered
draft
forwarded
redirected
junk
label
unknown
notJunk
clear
colorRed
colorOrange
colorYellow
colorGreen
colorBlue
colorPurple
colorGray
flags
originalFlags
color
setWithoutColor
name
uidValidity
lowestUID
lastSeenUID
highestModificationSequenceValue
localModification
renamed
none
deleted
created
RawValue
internalDate
flags
gmailLabels
messageHeader
messageSize
rawValue
RawValue
AllCases
text
attachment
mailbox
message
section
segment
data
isFinal
initial
encoding
headers
RawValue
IntegerLiteralType
byteCount
unknown
messageSize
rename
connected
connecting
serverUnreachable
authenticationFailed
error
kind
mailboxes
rawValue
periodic
powerNap
push
userInitiated
backFillMessageBodies
uidValidity
next_in
avail_in
total_in
next_out
avail_out
total_out
state
zalloc
zfree
opaque
data_type
adler
reserved
saslKind
responseReady
done
RawValue
rawValue
invalidState
responseNotSupported
challengeNotSupported
invalidImplementationState
RawValue
authentication
logger
allowInitialResponse
mechanism
step
responseReady
didFail
initial
waitingForInitialChallenge
waitingForChallenge
preparingResponse
mechanisms
allowInitialResponse
failedMechanisms
nextAuthenticationTask
saslKind
state
username
password
challengeReceived
started
done
kind
command
login
sasl
plain
appleToken
oAuthToken
challengeResponseMD5
saslKind
state
responseReady
responseSent
errorReceived
status
schemes
scope
saslKind
state
responseReady
done
authenticationSucceeded
authenticationFailed
allCredentialsFailed
connection
queue
logger
delegate
commandCounter
runningCommands
engineID
state
enqueuedEvents
idleKind
idleTimer
idleRefreshInterval
makeCredentials
getPushInformation
finishPushRegistration
pathAttributes
noop
idle
RawValue
RawValue
Element
Iterator
connection
commandCounter
rawValue
commands
elements
continuationRequestCount
pendingHandshakeReplyCount
command
continuation
idleDone
handshakeReply
content
kind
index
endpoint
tlsOptions
networkError
closed
failedToParseServerResponse
failedToAuthenticate
invalidContinuationState
logger
delegate
connection
receiveTranscoder
delegateQueue
networkQueue
pendingHandshakeReplyCount
command
handshake
idle
stateDidChange
connectionFailure
untagged
commandCompletion
pathDidChange
betterPathDidChange
didStartTLS
didStartCompression
connecting
unauthenticated
authenticated
authenticationFailed
failed
cancelled
waiting
capabilities
serverID
selectedMailbox
none
selecting
selected
stream
currentKind
state
kind
normal
append
deflate
inflate
dispatch
output
statistics
lifetimeStatistics
loopCount
done
needsNewOutputBuffer
remainingInput
outputResult
code
inputCount
outputCount
data
kind
originalCount
output
chunk
compressor
connection
payload
runningCommandIDs
connectionDidAuthenticate
connectionDidFail
didSelectMailbox
received
commandCompleted
pathAttributesDidChange
betterPathDidChange
didUnselectMailbox
empty
stateDidChange
inputBuffer
outputBuffer
encodingOptions
compression
outbound
startTLS
setOptions
flushOutputBuffer
enableCompression
responses
deflate
uncompressed
compressor
decompressor
data
originalCount
compressedCount
firstTag
lastTag
text
binary
content
clientIdentity
serverIdentity
name
isReadOnly
commandID
flags
messageCount
firstUnseedMessage
permanentFlags
nextUID
uidValidity
modificationSequenceValue
selectionResult
commandFailed
mailboxAttributesAreMissing
RawValue
inactiveWithPriority
inactiveWithoutPriority
activeSync
activeTask
rawValue
elements
mailbox
usage
connection
constrained
unavailable
available
viable
impracticable
changesMailboxSelection
dependsOnMailboxSelection
mayTriggerUntaggedExpunge
isUIDBased
changesFlags
readsFlags
returnsNonExtendedSearchResult
barrier
noMailboxCommandsRunning
noUntaggedExpungeResponse
noUIDBasedCommandRunning
noFlagChanges
noFlagReads
noNonExtendedSearchRunning
AllCases
underlying
negotiatedTLSProtocolVersion
negotiatedTLSCipherSuite
info
mailboxes
version
topic
commands
behavior
kind
enqueueTime
normal
noop
idle
name
flags
messageCount
firstUnseenMessage
permanentFlags
nextUID
uidValidity
modificationSequenceValue
isReadOnly
highest
notSupported
didReceiveUntagged
runningCommands
idleKind
state
underlying
kind
connecting
unauthenticated
authenticated
authenticationFailed
failed
cancelled
path
endpoint
capabilities
serverID
failedMailbox
selectingMailbox
selectedMailbox
login
authenticate
registerForPush
requestCapabilities
startTLS
compress
kind
capabilities
workItem
underlying
counter
queue
checkingIfPreAuthIsAllowed
requestingCredentials
authenticating
identifyingServer
requestingCompression
enablingCompression
requestingPushRegistrationInfo
registeringForPush
done
failed
connecting
gettingPreAuthCapabilities
startingTLS
waitingForTLS
gettingPostAuthCapabilities
protocolError
authenticationFailure
unableToGetCapabilities
unableToGetPushResponse
otherError
preAuthDisallowed
startTLSFailed
startTLSButNoTLS
authenticated
setCredentials
mechanismFailed
identifiedServer
setPushInformation
gotPushResponse
startTLS
serverAcceptedCompress
serverDeniedCompress
enabledCompress
state
currentlyRunning
failureCount
backOffUntil
queue
engineID
delegate
state
timer
connection
makeUnderlyingConnection
coalesceDelay
underlying
generation
idle
betterPathIsAvailable
evaluatingBetterPath
rawValue
cancelConnection
none
promoteConnection
logName
endpoint
protocolOptions
makeCredentials
getPushInformation
finishPushRegistration
workloop
persistenceEventQueue
sendAction
logger
logName
tracingIDOwner
state
connections
betterPathEvaluator
didStart
isProcessingUpdates
pendingUpdates
externalState
lastConnectionStatus
didTearDown
stateCapture
lastActivity
lastSelectedMailboxes
engine
logger
queue
configuration
engineID
didTearDown
connections
engine
nextConnectionID
backoff
backoffTimer
backoffLoggingRateLimit
lastError
lastStatus
stateCapture
enqueuedEvents
connectionWithGivenIDDoesNotExist
connectionWithGivenIDDoesNotHaveGivenMailboxSelected
logName
lastPass
intervalInNanoseconds
ThFv
MFAccount
EDAccount
ECMailAccount
NSObject
NSCopying
ECAccountPropertyProviding
ECAuthenticatableAccount
EFPubliclyDescribable
_MFAccountInformation
MFAccountValidator
MFActivityMonitor
EFCancelable
AOLAccount
MFOAuth2TokenAuthProtocol
MFAOLSMTPAccount
MFAuthScheme
MFBufferedQueue
CastleIMAPAccount
CondStore
MFConnection
ECAuthenticatableConnection
MFDiagnosticsGenerator
MFConnectionSettings
MFCRAM_MD5AuthScheme
MFCRAM_MD5Authenticator
_MFSQLGenerationContext
LibraryAdditions
PrivateLibraryAdditions
DADeliveryAccount
MFDADeliveryConsumer
DAMessageSendConsumer
DAActionConsumer
MFDADelivery
EFLoggable
DAMailAccount
ECLocalActionReplayerDelegate
MFDAMailbox
MFDAMailAccountConsumer
MFDARequestQueue
MFDAMessagePayloadFetchResponseImpl
MFDAMessagePayloadFetchResponse
_MFDAResolveRecipientsConsumer
DAResolveRecipientsConsumer
DeliveryAccount
EDDeliveryAccount
MFDigestMD5AuthScheme
_MFDigestMD5Authenticator
ESearch
ExchangeAccount
FormatFlowedSupportInternal
FormatFlowedSupport
_MFFormatFlowedWriter
Goodies
GmailAccount
MFClientTokenAuthProtocol
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
MFGmailSMTPAccount
MFGmailClientTokenAuthScheme
_MFGmailClientTokenAuthenticator
HotmailDeliveryAccount
HotmailAccount
MFHotmailSMTPAccount
_MFIMAPMailboxDeletionQueueEntry
IMAPAccount
MFIMAPConnectionDelegate
MFIMAPMailboxListFilter
_MFIMAPCommandParameters
MFIMAPConnection
ECIMAPServerInterface
MFIMAPConnectionFlagSearchResults
MFIMAPConnectionFlagSearchRequest
IMAPNameEncoding
MFIMAPOperationCache
ReferenceSearching
MFInvocationQueue
MFLibraryIMAPStore
MFLibraryMessage
EDPersistedMessage
EDBaseMessage
ECMessage
MFIMAPMessage
MFLibrarySearchableIndexAdditions
EDSearchableCriterion
MFLibraryStore
MFMailMessageStore
LocalAccount
_MFRootlessMailboxUid
MailAccount
EDReceivingAccount
EDIndexableAccount
SortedMailboxes
MFMailboxUid
EDIndexableMailbox
ECMailbox
_MFMailboxUidEnumerator
_MFMailboxUidChildrenEnumerator
MFFollowUpWarningResult
MFMailDelivery
MFMailDataMessageStore
MFMailMessage
UnreadCountCriterion
MFMailMessageLibrary
EDMessageChangeHookResponder
EFSignpostable
EFContentProtectionObserver
_MFMessageCollector
MessageConsumer
QueryProgressMonitor
_MFBlockIterationHandler
MFSearchResultHandler
_MFDataCollector
MFGuaranteedCollectingDataConsumer
MFCollectingDataConsumer
MFDataConsumer
_MFEmailAddress
_MFRecipientCollection
_MFObjectProperty
_MFAddableMessage
MFMailMimePart
DecodeMessage
MFMailMimeTextAttachment
MFMessageCriterion
_MFMessageFlags
NSCoding
MFBasicMessageDataSection
MFMessageDataSection
MFMessageSigner
MFMessageWriter
_MFOutgoingMessageBody
MFOutgoingMessage
MFAccountAutoFetchController
MFAccountFactory_iOS
EDAccountFactory
MFAccountLoader
iTunesSync
MFAccountStore
_MFSatisfiedActivityCondition
MFActivityCondition
MFActivityConditionBuilder
MFAppStateMonitor
MFAPSManager
APSConnectionDelegate
MFAttachment
_MFAttachmentActiveRequest
MFAttachmentCapabilities
MFAttachmentComposeManager
MFAttachmentCompositionContext
MFAttachmentDataProvider
MFAttachmentLibraryDataProvider
MFAttachmentDataProviderProtocol
MFAttachmentLibraryManager
MFAttachmentManager
MFAttachmentPlaceholder
MFAttachmentRaw
NSSecureCoding
MFAttachmentUtilities
MFAttachmentBundle
MFAttachmentSecurityScope
MFBaseSyncResponseQueue
MFCastleEmailAliasUpdater
CastleEmailAliasUpdateResult
MFCertificateTrustInfo
MFCertificateTrustInfoEMCertificateTrustInformationTransformer
MFCertificateTrustInformationKeychainManager
MFComposeAttachmentDataProvider
MFContentErrorDocument
MFDAFolderChangeConsumer
DAFolderChangeConsumer
MFDAFolderChangeResult
MFDASyncResponseConsumer
MFRequestQueueResponseConsumer
MFDASyncActionsConsumer
MFDAMailAccountSyncConsumer
DAMailboxRequestConsumer
DAMailboxStreamingContentConsumer
MFDAMessage
MFDAMessageContentConsumer
MFDAStreamingContentConsumer
MFDAMessageStore
MFAdditions
_MFDAMessageStoreGetUpdatesRequest
MFDAMailAccountRequest
_MFDAMessageStoreSetFlagsRequest
_MFDAMessageStoreDeleteRequest
_MFDAMessageStoreFetchHeadersRequest
_MFDAMessageStoreFetchRequest
_MFDAMessageStoreFetchUsingRemoteIDRequest
_MFDAMSBasicConsumer
_MFDAMSUpdateConsumer
_MFDAMSSearchResponseConsumer
DASearchQueryConsumer
_MFDAMessageHeaderFetchConsumer
_MFDAMessageBodyFetchConsumer
DAMailAccountStreamConsumerFactory
_MFDALibraryConsumerFactory
MFMessageDataConsumerFactory
_MFDAMessageFetchAttachmentConsumer
DAMessageFetchAttachmentConsumer
_MFDAMessageStoreSearchResultBodyConsumer
DAMailboxFetchSearchResultConsumer
MFDADraftMessage
MFDAMessageStoreSaveDraftRequest
MFDAMoveResponseConsumer
DAMessageMoveRequestConsumer
MFDAStoreDraftConsumer
MFDATransferActionReplayer
ECTransferActionReplayerSubclassMethods
MFDbJournal
MFDebugAccountState
MFDecryptedAttachmentDataProvider
MFDeliveryResult
MFError
MessageAdditions
MFExchangeConnection
MFFetchLimits
MFFetchResponseQueue
MFFile
MFFileArchive
MFFileArchiveDirectory
MFFileArchiveEntry
MFFileCompressionQueue
MFFileCompressionQueueActivityManager
MFIMAPCommandPipeline
_MFIMAPFetchUnit
MFIMAPDownload
MFIMAPSimpleDownload
MFIMAPCompoundDownload
MFIMAPDownloadCache
MFIMAPFetchResult
MFIMAPMessageDownload
MFIMAPMessageWithCache
MFIMAPOperation
MFIMAPOfflineCopyOnStupidServerOperation
MFIMAPParseContext
MFIMAPResponse
MFIMAPResponseConsumer
MFLegacyIMAPMailboxTaskManager
MFIMAPSequenceIdentifierProvider
ECIMAPLocalActionReplayerDelegate
MFIMAPMailboxTaskManager
MFLibraryMessageReconciler
MFLibraryReconciler
EDProtectedDataReconciliationHookResponder
EDDatabaseChangeHookResponder
MFLibraryThreadReconciler
MFListUnsubscribeMessageGenerator_iOS
MFLocalActionPersistence_iOS
MFLocalActionReplayHandler
MFLocalizedMessageHeaders
MFLockStateMonitor
MFMailboxPersistence_iOS
MFMailboxProvider
MFMailboxUidTransformer
MFMailDropAttachmentDataProvider
NSURLSessionDownloadDelegate
MFMailDropAttachmentPreviewDataProvider
MFMailDropMailDelivery
MFMailMessageLibraryAddJournaledConversationIDDateReceivedUpgradeStep
EDTableUpgradeStep
_MFOldIMAPOfflineOperation
MFMailMessageLibraryAddMailboxActionsUpgradeStep
MFMailMessageLibraryAddSearchableIndexTablesUpgradeStep
MFMailMessageLibraryAdoptSharedSchemaMigrationStep
MFMailMessageLibraryFixPopUidsUniquenessConstraintUpgradeStep
MFMailMessageLibraryGlobalDataUpgradeStep
MFMailMessageLibraryLocalActionsTablesMigrationStep
_MFOfflineCacheOperation
_MFDADeferredSetFlagsOperation
_MFDADeferredDeleteMessageOperation
MFDADeferredMessageMoveOperation
MFDADeferredStoreDraftOperation
_MFDADeferredNewMailboxOperation
_MFDADeferredDeleteMailboxOperation
_MFDADeferredModifyMailboxOperation
_MFDADeferredSelectMailboxOperation
MFMailMessageLibraryMailboxURLMigrationStep
MFMailMessageLibraryMigrator
MFMailMessageLibraryModifyColumnDefinitionsMigrationStep
MFMailMessageLibraryPopulateSendersTableMigrationStep
MFMailMessageLibraryQueryTransformer
MFMessageCriterionConverterDelegate
MFMailMessageLibraryRebuildThreadsTableUpgradeStep
MFMailMessageLibraryRecreateMessageIndicesUpgradeStep
MFMailMessageLibraryResetSequenceNumberMigrationStep
MFMailMessageLibrarySetThreadSendersRecipientsConflictResolutionUpgradeStep
MFMailMessageLibraryThreadFlagColorsUpgradeStep
MFMailMessageStoreSearchResult
MFMessageAttachmentMigrator
MFMessageBodyHTMLParser
_MFParsedHTMLNode
MFMessageBodyTreeNode
MFMessageBodyConsumableInnerTextNode
_MFParsedHTMLTag
_MFParsedHTMLText
_MFMessageBodyHTMLElement
_MFMessageBodyConsumableNewline
MFMessageBodyHTMLParserExtras
MFMessageBodyMigrator
MFMessageBodyOriginalTextSubparser
MFMessageBodyParser_HorizontalSeparator
MFMessageBodyParserObject
MFMessageBodyParser
MFMessageBodySubparser
MFMessageBodyElement
MFMessageBodyElement_Private
MFMessageBodyParsingUtils
MFMessageBodyStringAccumulator
MFMessageChangeManager_iOS
EDMessageChangeManagerSubClassMethods
_MFLoadingContextEventResult
MFMessageContentRequest
_MFMessageContentRequestScheduler
EFScheduler
_MFDASearchCriterionConverterDelegate
DASearch
MailboxPrediction
MFMessageCriterionConverter
MFMessageLibrarySetContentProtectionForAttachmentsUpgradeStep
MFMessageLoadingContextEvent
MFMessageLoadingContext
MFMessageLoadingContextToEMSecurityInformationTransformer
MFMessagePersistence_iOS
_MFMessagePersistenceQueryIterator
_MFFlushableMessageSetIterator
_MFMessageQueryConversionIterator
_MFPersistedMessageForwardingIterator
MFMessagePersistenceStatistics_iOS
MFMessageReferenceContext
MFMessageSignerEMMessageSignerTransformer
MFMigrationPersistence
MFUserAgent
MFNetworkController
RadiosPreferencesDelegate
CXCallObserverDelegate
_MFNetworkObserver
MFOSXServerIMAPAccount
MFOSXServerSMTPAccount
MFOutgoingMessageContent
MFOutgoingLibraryMessageContent
MFOutgoingRichtextMessageContent
MFOutgoingMultipartRelatedContent
MFOutgoingMessageDelivery
MFPersistence_iOS
MFPersistenceDatabase_iOS
MFMailMessageLibraryMigratorDelegate
MFPersistenceDatabaseConnection_iOS
MFPersistenceDatabaseSchema_iOS
EDPersistenceDatabaseSchemaProvider
MFPowerController
MFProtectedDatabasePersistence_iOS
MFQuotedAttachmentsInfo
MFRequestQueue
MFRFC822AttachmentDataProvider
MFSearchableIndex_iOS
MFSearchableIndexItem_iOS
MFSearchableIndexManager_iOS
EDSearchableIndexReasonProvider
MFSearchableIndexPersistence_iOS
MFSearchFetchResponseQueue
MFSearchResponseQueue
MFSecureMIMECompositionManager
MFServerMessagePersistenceFactory_iOS
MFSignatures
MFSMTPConnection
MFSyncResponseQueue
MFTaskAssertion
MFThreadFuzzyMatcher
MFUnreadCountProbe
MFUserDefaultMigrator
_MFWeakObjectCacheRef
MFWeakObjectCache
MFMimeEnrichedReader
MimeEnrichedReader
MailExtensions
MFMonitoredInvocation
MFNewcastleAuthScheme
_MFNewcastleAuthenticator
MFNewcastleSMTPAccount
MFMessageKeychainManager
NSStringUtils
AttachmentURLUtilities
MFNTLMAuthScheme
_MFNTLMAuthenticator
MFOAuth2TokenAuthScheme
_MFOAuth2TokenAuthenticator
MFDirectoryPathUtils
MFSharedResourcesDirectoryPathUtils
MFPlainAuthScheme
_MFPlainAuthenticator
_MFLoginAuthenticator
MFPlainTextFragment
MFPlainTextDocument
MFProgressiveMimeParser
SMIMESupport
SMIMEDecoding
_MFSecCMSDecoder
SMIMEEncoding
_MFSecCMSEncoder
SMTPAccount
MFSMTPDelivery
MFSMTPResponse
MFSqliteMessageIDStore
_MFSearchMatcherContext
MFWebAttachmentSource
MFWebMessageDocument
YahooDeliveryAccount
YahooAccount
MFYahooSMTPAccount
recipientsTableSchemaAndForeignKeysToResolve:associationsToResolve:
ec_descriptionForMimeHeaders
resume
setUnderlyingQueue:
initWithContentMessage:data:clientIdentifier:preferredFilename:extension:
initWithTargetClass:predicate:sortDescriptors:limit:queryOptions:targetClassOptions:label:
setForTextPart:
setArgument:atIndex:
retainArguments
dateByAddingComponents:toDate:options:
setPercentEncodedPath:
ec_integerDate
tryLockWhenCondition:
setAsForeignKeyForTable:onDelete:onUpdate:
numberOfAttachmentsSigned:encrypted:
initWithContentURL:relatedItems:securityInformation:
accountType
initWithTargetClass:predicate:sortDescriptors:suggestion:limit:queryOptions:label:
setUniformTypeIdentifier:
mf_dataUsingEncoding:
coordinateReadingItemAtURL:options:error:byAccessor:
handleFailureInFunction:file:lineNumber:description:
dateByAddingTimeInterval:
cancelTaskWithID:
ec_partiallyRedactedStringForSubjectOrSummary:
setForeground:
isStructuredHeaderKey:
initWithTimeIntervalSinceNow:
persistenceIsReconcilingJournaledThreadsWithObjectIDs:generationWindow:
reconcileJournalWithCompletionBlock:
setAssetPublishedBlock:
handleFailureInMethod:object:file:lineNumber:description:
isSubclassOfClass:
dateByAddingUnit:value:toDate:options:
coordinateWritingItemAtURL:options:error:byAccessor:
setForwarded
setPersistenceAvailable:
ef_SQLEscapedString
initWithContentsOfFile:
mf_decodeBase64
typeWithIdentifier:
mailboxURL:isInSameAccountAsMailboxURL:
numberOfMatchesInString:options:range:
setUnsubscribeCommand:
applicationProxyForIdentifier:
initWithTrust:certificateType:sender:
numberOfNewlinesNeedingConversion:
mf_decodeFailedErrorWithUserInfo:
applicationWillResume
dateFromComponents:
ef_SQLExpression
typeWithMIMEType:
mf_decodeModifiedBase64
initWithContentsOfFile:encoding:error:
accountTypeWithAccountTypeIdentifier:
applyFlagChange:toMessages:
retainedReference
initWithContentsOfFile:options:error:
accountValidator:finishedValidationOfAccount:usedSSL:
numberOfRanges
ef_SQLiteErrorWithCode:
copyAddressListForBcc
mailboxURLIsInRemoteAccount:
applyFollowUp:toMessages:
isSymbolicLink
ef_UTF8ConvertibleString
setUpdateHandler:
reverseObjectEnumerator
copyAddressListForCc
mf_emailAddressesWithEquivalentDomains
setAttachmentNames:
setGenerationNumber:
numberValue
caseInsensitiveCompare:
ef_UUID
initWithConversationID:threadScope:
setGivenName:
rfc822Data
mf_encodeBase64
setAttachmentPaths:
numberWithBool:
copyAddressListForReplyTo
approximateRawSize
handleForPredicate:error:
initWithType:subpredicates:
ef_accountAllowedCharacterSet
persistenceWillReadMessage:fromRow:
rfc822DecodedMessageBody
initWithCountLimit:
mf_encodeBase64WithoutLineBreaks
setAttachmentTypes:
copyAddressListForResentFrom
numberWithDouble:
ef_addObjectIfAbsent:
mf_encodeModifiedBase64
copyAddressListForSender
setPort:
unactionableICSRepresentationForMetaData:inFolderWithId:outSummary:
recordID
richLinkResults
ccIfCached
ef_all:
setHTTPBody:
numberWithFloat:
setAttachmentsIndexed:
copyAddressListForTo
numberWithInt:
ef_any:
setUser:
MIMETypeForExtension:
rightExpression
initWithUTF8String:
setHTTPMethod:
initWithURL:options:error:
setAttachmentsToIndex:
numberWithInteger:
dateReceivedAsTimeIntervalSince1970
isValidBase64:
unarchivedObjectOfClass:fromData:error:
roamAllowed
ef_caseInsensitiveIsEqualToString:
initWithUUIDString:
numberWithLongLong:
setAuthenticated:
unarchivedObjectOfClasses:fromData:error:
setPredicates:
ef_compactMap:
numberWithUnsignedInt:
dateSentAsTimeIntervalSince1970
recover:
rowID
ef_connectionInterruptedError
accountsAdded:
numberWithUnsignedInteger:
setAuthenticationType:
uniformTypeIdentifier
persistentUUID
accountsChanged:
initWithData:
ef_declaredUTTypeFromExtension
copyBodyDataToOffset:resultOffset:downloadIfNecessary:
unionSet:
numberWithUnsignedLong:
initWithData:clientIdentifier:preferredFilename:extension:relatedItems:securityInformation:
setAvailableRepresentations:
stringArrayForKey:
isWritable
ef_defaultAllowedCharacterSet
copyBodyDataToOffset:resultOffset:downloadIfNecessary:isComplete:
numberWithUnsignedLongLong:
runUntilDate:
dateValue
redirectedChanged
uniqueHeaderKeyStringForString:
setPreferredFilename:
initWithData:encoding:
isWritableFileAtPath:
mailboxes
ef_enumerateObjectsInBatchesOfSize:block:
stringByAddingPercentEncodingWithAllowedCharacters:
accountsRemoved:
reference
certificate
dateWithTimeIntervalSince1970:
URLByAppendingPathComponent:isDirectory:
setPriorToDate:
setValue:forHTTPHeaderField:
itemChangeType
ef_filenameWithExtensionForMimeType:
stringByAppendingFormat:
accountsWithAccountTypeIdentifiers:error:
initWithUnsignedLongLong:
oauthToken
dateWithTimeIntervalSinceNow:
setHasMoreContent:
hasBeenDownloaded
copyCarrierBundleValue:key:bundleType:error:
runWithConnection:databaseName:
ef_filter:
MCIsManaged
itemWithIdentifier:message:bodyData:fetchBody:
initWithData:partial:incomplete:
stringByAppendingPathComponent:
setPriority:
initWithUser:password:persistence:
setHeader:forKey:
object
dateWithTimeIntervalSinceReferenceDate:
itemWithMessage:bodyData:fetchBody:
ef_firstObjectPassingTest:
cfStringEncoding
placeholderAttachmentForFileName:fileSize:mimeType:contentID:completionBlock:
setPriorityForDisplayMessageSenderForThreadObjectID:
stringByAppendingPathExtension:
reflectDeletedMessages:
runWithConnection:sentMailboxURLs:contactStore:
mailboxesTableName
initWithZoneID:
unlock
objectAtIndex:
hasChanges
ef_flatMap:
changeFrom:to:
archivedDataWithRootObject:requiringSecureCoding:error:
stringByAppendingString:
objectAtIndexedSubscript:
unlockWithCondition:
initWithZoneName:ownerName:
ef_flatten
setValues:
changedItem
setHost:
stringByDeletingLastPathComponent
reflectFlagChanges:forMessages:
initWithDatabase:blockedSenderManager:hookRegistry:contactStore:
setProgressBlock:
ef_gmailAuthAllowedCharacterSet
setBodyType:
objectEnumerator
mailtoValues
initWithDatabase:hookRegistry:
stringByDeletingPathExtension
array
setBool:forKey:
ef_groupBy:
reflectFlagChanges:forMessagesWithRemoteIDs:mailboxURL:
setHour:
hasEncryptedDescendantPart
initWithDatabase:hookResponder:
insertGeneration:
plainTextFromHTMLSnippet:
arrayByAddingObjectsFromArray:
objectForKey:generator:
fetchRecordZoneWithID:completionHandler:
stringByEncodingDomainName:
decodeInt64ForKey:
stringByRemovingPercentEncoding
initWithDatabase:messagePersistence:
refresh
actionForSMIMETrust:sender:
saveMailboxActionForAccountID:action:
arrayByApplyingSelector:
ef_hasScheme:
insertMailDropAttachmentViewForContentURL:HTMLByContentID:completionHandler:
decodeObjectOfClass:forKey:
iterateMessagesMatchingSmartSortQuery:limit:handler:
mainThreadScheduler
hasEnded
setWeekOfYear:
stringByReplacingOccurrencesOfString:withString:
arrayByExcludingObjectsInArray:
initWithDatabase:messagePersistence:hookResponder:
hasHeaderForKey:
join:
URLWithString:
ef_hostNilForEmpty
decodeObjectOfClasses:forKey:
setWhere:
registerColumnName:table:lookupKeys:forClass:property:
arrayWithArray:
UTF8String
makeObjectsPerformSelector:
stringByResolvingSymlinksInPath
decodeText
setWhereClause:
join:sourceColumn:targetColumn:
insertObject:atIndex:
ef_insertObject:usingComparator:allowDuplicates:
copyFirstStringValueForKey:
stringByTrimmingCharactersInSet:
setProvisioned:forDataclass:
arrayWithCapacity:
initWithDatabase:useAdditionalTable:
registerDatabaseChangeHookResponder:
decodeValueOfObjCType:at:
UUID
saveRecordZone:completionHandler:
ef_insertObject:usingSortFunction:context:allowDuplicates:
makeObjectsPerformSelector:withObject:
initWithDate:
registerForBytesAvailableWithHandler:
mf_locationsOfUnixNewlinesNeedingConversion
_displayedMimePart
setCachedMetadataJSON:forKey:messageID:
arrayWithObject:
decodedDataForData:
objectIDFromSerializedRepresentation:
setWifiEnabled:
insertString:atIndex:
unregisterAllHookResponders
saveRichLinkData:globalMessageID:basePath:
setPublicMessageURL:
UUIDString
setWithArray:
stringForKey:
mf_lock
registerMessageChangeHookResponder:
ef_isCancelledError
int64Value
arrayWithObjects:
copyHeadersForKey:
characterAtIndex:
setWithCapacity:
setCanContainMessages:
ef_isTimeoutError
mf_lockWithPriority
arrayWithObjects:count:
unregisterForBytesAvailable
registerProtectedDataReconciliationHookResponder:
objectValue
hasLookupKey:class:property:
setWithObject:
junkLevelChanged
setCancellationHandler:
registerSchemeClass:
decryptedMessageBodyIsEncrypted:isSigned:
mf_makeCompletePath:mode:
ef_localesFromLanguages:
characterIsMember:
setQualityOfService:
objectsAtIndexes:
integerColumnWithName:nullable:
decryptedTopLevelPartForPart:
setWithObjects:
postNotificationName:object:
characterSetWithCharactersInString:
ascending
stringFromDate:
hasMoreContent
ef_lossyDefaultCStringBytes
copyItemAtURL:toURL:error:
registeredTypeIdentifiers
saveVerifiedAccount:withCompletionHandler:
observableObserver
integerColumnWithName:nullable:defaultValue:
setQuery:
postNotificationName:object:userInfo:
setWithSet:
setIndexableAttachments:
ef_map:
integerForKey:
charset
fileExistsAtPath:
mf_makeImmutable
unsignedIntValue
keyEnumerator
regularExpressionWithPattern:options:error:
setIndexingType:
setQueuePriority:
setYear:
stringFromEmailAddressConvertible:
charsetForEncoding:
defaultAlternativeInPart:
fileExistsAtPath:isDirectory:
observableOnDefaultNotificationCenterWithName:object:
ef_mapSelector:
regularFileContents
unsignedIntegerValue
_setDecryptedMessageBody:isEncrypted:isSigned:
keyPath
observableWithBlock:
ef_matchesEverything
charsetName
attachProtectedDatabaseWithName:url:error:
stringWithCString:encoding:
scanHexInt:
set_appleIDContext:
initWithDomain:type:
unsignedLongLongValue
scanInteger:
observableWithResult:
setRange:
initWithEmailAddresses:
set_sourceApplicationBundleIdentifier:
checkForConnectionErrorWithMessage:
setIsAvailableLocally:
keyPathForRecentEmails
ef_matchesNothing
attached
intersectIndexes:
stringWithCapacity:
defaultConfiguration
setCellData:
hasPrefix:
scanLocation
ef_md5Digest
initWithEnvironmentName:namedDelegatePort:queue:
unsubscribeCommand
intersectSet:
setReachabilityFlags:
relativePath
URLByDeletingLastPathComponent
knownSchemes
hasReplyPrefix
observerDidReceiveResult:
fileProtectionForDatabaseType:
attachmentCapabilities
initWithError:
stringWithCharacters:length:
setRead
scanString:intoString:
setIsEncrypted:
ef_objectsPassingTest:
unsubscribeWithCommand:completion:
precomposedStringWithCanonicalMapping
mf_protectFileAtPath:withClass:error:
hasSuffix:
label
intersectsSet:
stringWithFileSystemRepresentation:length:
observerWithResultBlock:
initWithExpressions:
stringWithFormat:
scanUpToCharactersFromSet:intoString:
ef_observeKeyPath:options:usingBlock:
setCharactersToBeSkipped:
copyNewMimeBoundary
matches:matchType:
setIsGenerated:
languages
addCancelationBlock:
mf_rangeOfCString:options:range:
predicate
ef_partition:
scanUpToString:intoString:
checkPromisedItemIsReachableAndReturnError:
fileSystemRepresentation
stringWithString:
observerWithResultBlock:completionBlock:failureBlock:
addChild:withPendingUnitCount:
sharedAggregateDictionary
attachmentDirectoryURLWithBasePath:
sharedConnection
ef_pathByReplacingRelativePathWithFolderName:
mf_rangeOfData:options:range:
checkResourceIsReachableAndReturnError:
predicateForMessagesInMailboxWithObjectID:
addClientToken:forAccount:
invalidateAndCancel
scannerWithString:
stringWithUTF8String:
childAccounts
sharedController
ef_posixLocale
maximumIMAPUID
initWithFileURL:
stripInternalHeaders
addColumn:
sharedCredentialStorage
attachmentFilename
ef_prefix:
predicateMatchingBundleIdentifier:
subarrayWithRange:
_setObjectInOtherIvars:forKey:
setReason:
lastIndex
mayOpenFromManagedToUnmanaged
URLPathAllowedCharacterSet
setCollectionID:
subdataWithRange:
predicateOperatorType
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
updateFolderListForAccountID:andDataclasses:
URLByAppendingPathComponent:
invertedSet
lastInsertedDatabaseID
initWithFloat:
setComparator:
mayOpenFromUnmanagedToManaged
fileURLWithPath:
ef_quotedSQLEscapedString
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
predicateWithFormat:
updateFolderListForAccountID:andDataclasses:requireChangedFolders:isUserRequested:
ef_reduce:
setRecipientAddresses:
fileURLWithPath:isDirectory:
meetingRequestIsActionable
updateLargestDeletedRowID:forTableName:withConnection:
predicateWithLeftExpression:rightExpression:modifier:type:options:
subjectKey
initWithFormat:
ef_sanitizedFileName
meetingRequestMetaData
setKeyGenerator:
subjectString
addData:
lastObject
scheme
fileURLWithPath:relativeToURL:
defaultStore
preferenceEnabled:
initWithGlobalMessageID:mailboxScope:
setCompletedUnitCount:
sharedMappings
meetingRequestUUID
onScheduler:performWithObject:
ef_setDecoder:forDomain:
subjectStringForDisplayForSubjectString:
defaultTrustManager
lastPathComponent
ef_sha256Digest
setRemainingByteCount:
classNamed:
initWithGlobalMessageID:name:mimePart:attachmentID:remoteURL:
subjectWithString:
score
headersForKey:
addDataConsumer:
definitionWithDatabaseName:
sharedNetworkObserver
ef_simplifiedPredicate
addDataDetectionResults:globalMessageID:
fileWrapperForcingDownload:
headersForMessage:fetchIfNotAvailable:
sharedReporter
initWithHash:
definitionWithDatabaseName:includeIndexes:
ef_stringByRemovingQuotedSubstringsForLocales:tokenizationHandler:
setConfiguration:
subparts
open
shouldAddRemoteContentLinksForMessage:logMessage:
subpredicates
ef_stringByRemovingTokenizedLinksUsingTokenizationHandler:
openAuthenticationURL:forAccount:shouldConfirm:completion:
mergeUpdatedRepresentation:
filter:
shouldAddRemoteContentLinksForMessageWithDateReceived:
ef_stringByTrimmingOuterQuotes
preferredFilename
clearFlagged
addDiagnosticsGenerator:
remoteHostname
headersRequiringSMTPUTF8Support
initWithHeaders:
setConsumer:
ef_subarraysOfSize:
copyWithBuilder:
preferredMimeCharset
addEntriesFromDictionary:
uppercaseString
setRenamedMailboxName:
host
deleteAllServerMessagesInMailbox
remoteIDs
clearRead
deleteCharactersInRange:
ef_uniquifyWithComparator:
addFailureBlock:
attachmentURLForGlobalMessageID:mimePartNumber:basePath:
prefixLength
ef_urlWithString:
countByEnumeratingWithState:objects:count:
isAppleEmployeeAccount
initWithHookRegistry:messagePersistence:alarmScheduler:
hour
attachmentURLForGlobalMessageID:remoteURL:basePath:
subscriptions
lastVerb
messageActionsForAccountURL:previousActionID:
setReplied
ef_wordComponentsForLocale:minimumWordLength:
substringFromIndex:
isAppleInternalInstall
urlForDatabasePath:type:
prefixLengthForSubject:
lazyFutureWithBlock:
attachmentURLForMessageAttachmentID:basePath:
urlForDatabasePath:type:fileProtection:
remotePortNumber
addIndex:
substringToIndex:
preparedStatementForQueryString:
countForObject:
leftExpression
attachmentURLs
clientInfoHeader
setReplyToList:
orPredicateWithSubpredicates:
substringWithRange:
setLength:
mf_tryLock
isAttachment
initWithIdentifier:
urlMatchesForString:
em_internalErrorWithReason:userInfo:
filterWithConsumer:
previousFailureCount
addIndexForColumns:
initWithImmutableData:
orderByColumn:ascending:
em_itemNotFoundError
subtype
removeAccount:withCompletionHandler:
filterWithConsumers:
clientTokenForAccount:
em_stringForQuotingWithCharacter:
setRequestMoreContentBlock:
previousState
mf_unlock
addIndexesInRange:
searchableItem
initWithIndex:
searchableItemIdentifier
deleteMailboxAction:
em_userDefaults
messageBodyIfAvailableUpdatingFlags:
setContentType:
initWithIndexSet:
searchableItemSnippetDataMatchingCriterion:
addInvalidationHandler:
emailAddress
removeAllCancelationBlocks
initWithIndexesInRange:
setRequestedHeaders:
createDecryptedDataForBytes:length:
second
useCredential:forAuthenticationChallenge:
deleteMessages:
mf_waitForLock
closeAllConnections
initWithItemChangeType:changedItem:serverId:
setRequestedTTL:
setLimit:
finishWithResult:error:
attachmentsIndexed
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
setResourceValue:forKey:error:
initWithKey:ascending:
isCanceled
setListIDHash:
length
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
isCancelled
originalString
emailAddressValue
initWithLength:
setResourceValues:error:
privateCloudDatabase
identifierKey
createEncryptedDataForBytes:length:
identifyFollowUpWarningFromSubject:body:date:error:
attachmentsToIndex
setListUnsubscribeBlock:
addNetworkReachableObserver:selector:
first
cloudKitAPSTopics
removeCharactersInString:
createFileAtPath:contents:attributes:
osType
code
messageBodyUpdatingFlags:
userContext
processIdentifier
setConversationID:
removeCredential:forProtectionSpace:
firstChildPart
attributesOfFileSystemForPath:error:
attributesOfItemAtPath:error:
_fastCharacterContents
deletedChanged
ignoreWithCommand:completion:
setLoaderBlock:
securityInformation
userDataPreferred
setRoamingAllowed:
deletedItemsFolder
setCountLimit:
column:
userFullName
addObjectsFromArray:
securityLayer
setScanLocation:
emailAddressesFromStrings:invalidAddresses:
columnExists:inTable:type:
addObserver:selector:name:object:
firstIndex
removeHeaderForKey:
columnExistsWithName:
immediateScheduler
setSchedulableDelegate:
removeIndex:
pairWithFirst:second:
firstMatchInString:options:range:
setCredential:
linkItemAtURL:toURL:error:
credentialWithError:
firstObject
removeIndexes:
columnForName:
setScheme:
listUnsubscribeCommands
columnNameForLookupKey:value:
addOperation:
addOperationWithBlock:
removeIndexesInRange:
isDirty
securityScopeForPlaceholderURL:completionBlock:
setMIMESupport:
listUnsubscribeHandler
firstResultObserverAdapter
firstSender
progressBlock
removeItemAtPath:error:
isDraft
inboxFolder
messageDataDeleted
supportsConversations
setSearchableIndexBundleID:
firstSenderAddress
usesBase64EncodeResponseData
authenticationScheme
combined:
addPersistedMessage:
messageDataDirectoryURLForGlobalMessageID:basePath:purgeable:
supportsDraftFolderSync
setSearchableItem:
commaSeparatedString
progressWithTotalUnitCount:
removeItemsForDomainIdentifier:
authenticationSchemesForAccount:connection:
setSecond:
isDynamic
shouldVerifyRemoteLinks
supportsEmailFlagging
usesKnownSignatureProtocol
removeItemsWithIdentifiers:
authenticationState
setMailAttachmentTypes:
includeSuggestionItems
flagChange
removeLastObject
commandForMessage:
parentFolderID
showPromptWithOptions:responseBlock:
messageDataHolderIsComplete:downloadIfNecessary:
setSecurityProtocol:
selector
showWithHandler:
loadAndReturnError:
isEqualToArray:
flagColorChanged
parentPart
incomingKey
promise
valid
shutdown
supportsMailboxSearch
minusSet:
setSelector:
isEqualToData:
minute
removeNetworkReachableObserver:
addRemoteContentLinks:
flaggedChanged
isEqualToDate:
propertiesForDataclass:
enabledForDADataclass:
setMailboxIdentifiers:
backgroundSessionConfigurationWithIdentifier:
initWithMainConsumer:
removeObject:
isEqualToSet:
addRemoteContentLinks:andVerifyWithParsedLinks:defaultCharsetName:
backingAccountInfo
parseContentTypeHeader:type:subtype:
loadDataRepresentationForTypeIdentifier:completionHandler:
setSenderAddress:
propertiesToMigrate
isEqualToString:
removeObjectAtIndex:
addRemoteContentLinks:requiredParsing:
flaggedIsSet
indexDefinitionsWithDatabaseName:
encodeInt64:forKey:
sendMessageWithRFC822Data:messageID:outgoingMessageType:originalMessageFolderID:originalMessageItemID:originalMessageLongID:originalAccountID:useSmartTasksIfPossible:isUserRequested:consumer:context:
indexGreaterThanIndex:
baseAccountDirectoryPathForPersonaIdentifier:
isEqualToSubjectIgnoringPrefix:
compare:options:
parseExpiration:
propertyListWithData:options:format:error:
removeObjectIdenticalTo:
encodeObject:forKey:
parseHTMLData:withOptions:characterEncodingName:forMessage:completionHandler:
indexGreaterThanOrEqualToIndex:
compare:options:range:locale:
messageGlobalDataTableName
encodeValueOfObjCType:at:
removeObjectsAtIndexes:
setDataIndicator:
initWithMemoryCapacity:diskCapacity:directoryURL:
isExpired
indexItems:
signedData
JSONObjectWithData:options:error:
valueForHTTPHeaderField:
compiled
monitorFoldersForUpdates:persistent:
baseMailDirectory
setDataTransferByteCount:
removeObjectsForKeys:
parseHeaderValue:forField:
valueForKey:
descriptionWithLocale:indent:
messageGlobalDataTableSchema
parseIMAPPropertyList:
signingIdentityPersistentReference
protectedDatabaseAttached
encodedHeaders
messageHeadersWithCommand:headersFactory:
removeObjectsInArray:
indexItems:immediately:
_capitalizedKeyForKey:
setDatabase:
monitorWithConfiguration:
descriptor
valueForKeyPath:
completedUnitCount
basicHeaders
month
removeObjectsInRange:
indexLessThanIndex:
initWithMessage:bodyData:fetchBody:
indexOfObject:
valueForLookupKey:class:property:
parseMimeBodyFromHeaderData:bodyData:isPartial:
encryptionBufferSize
addResultColumn:
completionHandlerAdapter
setMaxConcurrentOperationCount:
indexOfObjectIdenticalTo:
protectedDatabasePath
addSMIMETrust:sender:
destID
components:fromDate:
simpleAddress
removeObserver:name:object:
floatForKey:
setDateReceived:
isFileURL
componentsJoinedByString:
indexOfObjectPassingTest:
encryptionIdentityPersistentReference
setServerInterface:
suspend
moveItemAtPath:toPath:error:
componentsSeparatedByString:
messageIDHeaderInFortyBytesOrLess
valueWithBytes:objCType:
indexSetWithIndex:
setDateSent:
bccIfCached
moveItemAtURL:toURL:error:
parseURL:intoMetadata:
values
componentsWithEmailAddress:
currentCalendar
setServerTrustHandler:
localeIdentifier
indexSetWithIndexesInRange:
initWithMessagePersistence:database:hookRegistry:vipManager:blockedSenderManager:
symbolicLinkDestination
verbIsSet
componentsWithString:
addSuccessBlock:
publicToken
detachProtectedDatabase
localeWithLocaleIdentifier:
isGenerated
indexableAttachments
currentConnection
componentsWithURL:resolvingAgainstBaseURL:
initWithMessagePersistence:urlSession:
setService:
indexableMessages
setDateStyle:
isGmailAccount
versionString
currentDevice
isHTML
localizedBodyForCommand:
skip:
synchronize
dictionary
partNumber
vipManager
setMessageData:
localizedCaseInsensitiveCompare:
setDay:
compoundPredicateType
removeSMIMETrust:sender:
slotID
addUniquenessConstraintForColumns:conflictResolution:
dictionaryForKey:
setSetupIsComplete:
partURL
endowmentNamespaces
indexesOfObjectsPassingTest:
isHotmailAccount
mutableBytes
addValue
beginsWith:caseSensitive:
partWithNumber:
initWithName:andDelegate:
endsWith:caseSensitive:
setMessageDataDeleted:
senderAddress
setDeepTraversal:
smimeType
addValue:forHTTPHeaderField:
indexingType
messageObjectIDCriterionExpressionForPredicateValue:
dictionaryWithCapacity:
bestAlternativeInPart:
table:column:
senderAddressComment
pushUpdateForAliasDataWithEmailAddresses:defaultEmailAddress:
currentHandler
indicator
dictionaryWithDictionary:
waitUntilAllOperationsAreFinished
snippetHints
tableExists:inDatabase:
localizedStringForKey:value:table:
currentLocale
mutableCopyWithZone:
partialMessagesTableSchemaAndForeignKeysToResolve:associationsToResolve:
messagePersistentID
localizedStringFromPersonNameComponents:style:options:
pushValue:forKey:
tableForName:
dictionaryWithObject:forKey:
isIncrementalIndexingType:
partiallyRedactedStringForString:
enumerateByteRangesUsingBlock:
condition
folderIDsThatExternalClientsCareAboutForDataclasses:withTag:
sortDescriptors
setMessageIDHeader:
messageReconciliationQueries
dictionaryWithObjects:forKeys:
initFileURLWithPath:
setDelegate:queue:
blobColumnWithName:nullable:
enumerateConvertingNewlinesUsingBlock:
sortUsingFunction:context:
qualifiedColumnExpressionsForClass:property:availableTables:
isIndexingEnabledForActivityType:
senderKey
addressListFromEncodedString:
isInternal
initWithName:columns:primaryKeyColumns:
dictionaryWithObjects:forKeys:count:
folderId
initFileURLWithPath:isDirectory:
sortUsingSelector:
enumerateIndexesUsingBlock:
blockedSenderManager
initWithName:columns:primaryKeyColumns:conflictResolution:
target
dictionaryWithObjectsAndKeys:
initFolderChangeWithChangeType:folderId:parentFolderId:displayName:dataclass:consumer:
lockWhenCondition:
isInvalid
wasFromStorage
initWithName:condition:andDelegate:
enumerateKeysAndObjectsUsingBlock:
sortedArrayUsingComparator:
currentRunLoop
targetClass
initForDataclass:
lockWhenCondition:beforeDate:
sendersIfCached
enumerateObjectsUsingBlock:
sortedArrayUsingDescriptors:
targetClassOptions
currentState
weakObjectsHashTable
sentItemsFolder
ak_addClientInfoHeader
setMessagePropertiesFromMessage:
enumerateRangesUsingBlock:
initMoveRequestWithMessage:fromFolder:toFolder:
renewCredentialsForAccount:options:completion:
setSigners:
sortedArrayUsingFunction:context:
ak_addDeviceUDIDHeader
pathComponents
setSigningIdentityPersistentReference:
taskDescription
weakReferenceWithObject:
initRegularFileWithContents:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
source
replaceBytesInRange:withBytes:length:
initWithName:rowIDType:columns:
weekday
alarmScheduler
pathExtension
setMessageURL:
aliasAuthorizationHeader
initWithName:rowIDType:rowIDAlias:columns:
taskIdentifier
pathForResource:ofType:
whitespaceAndNewlineCharacterSet
connectToHost:withPort:service:
ephemeralSessionConfiguration
replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:
queryOptions
initRequestForBodyFormat:withFolderID:withServerID:withLongID:withBodySizeLimit:
sourceID
replaceObjectAtIndex:withObject:
initWithName:tableName:indexedColumns:where:unique:
setDnsEnabled:
setSourceUIDsToDestinationUIDs:
initWithObject:
equalTo:
initRequestForBodyFormat:withMessageID:withBodySizeLimit:
replaceOccurrencesOfString:withString:options:range:
whitespaceCharacterSet
setDocumentID:
formattedAddressWithName:email:useQuotes:
taskState
logBytes:length:
setStandardLineBreak
initRequestWithMessageID:
queryStringByJoiningQueries:withOperand:
bodyForMessage:fetchIfNotAvailable:updateFlags:
initWithObjectID:repository:name:accountIdentifier:type:builder:
messageSummaryLoaderForMessage:
pathWithComponents:
bodyFormat
setDomainIdentifier:
replay:
initRequestWithSetFlags:unsetFlags:message:
initWithObjects:
sourceMessage
forwardedChanged
aliasUserAgent
queryWithExpandedMailboxesFromQuery:
replayAction
messageTransformer
messageURL
initWithObjects:count:
allCredentials
isMailPrivacyProtectionAllowed
setMimeBody:
serialDispatchQueueSchedulerWithName:qualityOfService:
directUrl
networkUsage
temporaryURLWithData:clientIdentifier:preferredFilename:pathExtension:cleanupInvocable:error:
sources
da_accountsWithAccountTypeIdentifiers:outError:
pep_getInvocation:
bodyParameterForKey:
initWithObjects:forKeys:count:
initWithObjectsAndKeys:
setStateDescriptor:
bodyParameterKeys
initWithAccountType:
allHeaderKeys
initWithOptions:cancelationToken:
allKeys
isMainThread
errorWithDomain:code:userInfo:
serverCertificates
writeBytes:length:
_hasExceptionsForSMIMETrust:sender:
initWithAction:
setEnabled:forDataclass:
bodySize
setMinute:
allKeysForObject:
longID
textColumnWithName:collation:nullable:
connectionClassForAccountClass:
setEnabledTopics:ignoredTopics:
messageWithRFC822Data:
escapedPatternForString:
boolForKey:
longLongValue
initWithPID:flags:reason:name:withHandler:
textEncoding
discreteProgressWithTotalUnitCount:
messageWithRFC822Data:withParentPart:
setStorageByteCount:
performDatabaseWorkInBlockWithHighPriority:
evaluateTrust:withOptions:signerEmailAddress:
setEncryptionIdentityPersistentReference:
diskCapacity
textHtmlPart
messageWithRFC822Data:withParentPart:generateMessageIDHash:
repliedChanged
raise
allMailboxObjectIDsWithMailboxTypeResolver:forExclusion:
performFetchAttachmentRequest:consumer:
budgetedItemCountRemaining
then:
isMostDefinitelyBase64ed
lowercaseString
bundleForClass:
performFetchMessageSearchResultRequests:consumer:
setModifyRecordsCompletionBlock:
initWithAppendHandler:doneHandler:
dataContainerURL
raise:format:
initWithPattern:options:error:
isNetworkReachable
reportIssueType:description:
performFolderChange:isUserRequested:
writeToFile:options:error:
range
setEndowmentNamespaces:
setMonth:
sqlConnection
dataDetectionResults
exchangeEventUID
initWithAppleAccount:
setString:
displayNameAtPath:
bundlePath
writeToURL:options:error:
exchangeObjectAtIndex:withObjectAtIndex:
sqlDB
allMailboxesScope
initWithArray:
performMailboxRequests:mailbox:previousTag:clientWinsOnSyncConflict:isUserRequested:consumer:
rangeAtIndex:
representedObjectID
mailAccountDirectory
aa_authTokenWithError:
bundleWithIdentifier:
messagesDeleted
initWithPrefix:subjectWithoutPrefix:
sqlQueryForQuery:
fullyRedactedStringForString:
displayNameFromAddress:cacheResults:
serverMessagePersistenceForMailboxURL:
setSubject:to:cc:bcc:sender:dateReceived:dateSent:summary:
requestAllHeaders
bundleWithPath:
aa_firstName
rangeOfCharacterFromSet:
executeDeleteStatement:error:
constantValue
bytes
aa_isAccountClass:
performMoveRequests:consumer:
rangeOfComposedCharacterSequenceAtIndex:
executeInsertStatement:error:
threadReconciliationQueries
setExchangeEventUID:
requestMoreContentBlock
standardUserDefaults
aa_lastName
executeSelectStatement:withBlock:error:
dataForMimePart:
rangeOfData:options:range:
initWithAttachmentFileURL:builder:
messagesForPersistedMessages:mailboxScope:
futureWithResult:
initWithQueue:
threadScopesByDatabaseID
performReadBlock:
aa_password
initWithAttachmentName:andMessageServerID:
messagesIndexed
displayedAccounts
allObjects
executeStatementString:error:
rangeOfFirstMatchInString:options:range:
cStringUsingEncoding:
generateMailDropMetadataForContentURL:completionHandler:
rangeOfString:
aa_personID
requestSummary
executeStatementString:errorMessage:
startAccessingSecurityScopedResource
consumers
allValues
initWithRecordIDs:
dataForMimePart:inRange:withConsumer:downloadIfNecessary:
setExpiration:
performResolveRecipientsRequest:consumer:
requestSummaryImmediatelyFromDownloadedMessage:
initWithBase64EncodedData:options:
rangeOfString:options:
setNeedsReindex
dispositionParameterForKey:
executeUpdateStatement:error:
aa_primaryAppleAccount
allowTrust:forHost:service:
timeIntervalSince1970
containerWithIdentifier:
initWithRecordType:zoneID:
dispositionParameterKeys
aa_updatePropertiesForAppleAccount:completion:
rangeOfString:options:range:
contains:caseSensitive:
requestType
timeIntervalSinceNow
setNetworkActivityChangeBlock:
executeUpdateStatement:rowsChanged:
initWithRecordsToSave:recordIDsToDelete:
performSelector:onThread:withObject:waitUntilDone:
disqualified
initWithBasePath:databaseName:isWriter:delegate:
containsIndex:
messagesTableName
setExternalID:
executeUsingBlock:error:
rangeOfString:options:range:locale:
requestWithURL:
timeIntervalSinceReferenceDate
initWithRemoteContentPersistence:contentRuleListManager:urlSession:
performSelector:withObject:afterDelay:
distantFuture
newlineCharacterSet
setNetworkUsage:
containsObject:
cacheURL
executeWithIndexedBindings:usingBlock:error:
rangedFilterWithConsumer:range:
getBytes:length:
setNewMessageUID:
initWithRepresentedObjectID:
allowsKeyedCoding
performSelectorOnMainThread:withObject:waitUntilDone:
requestedHeaderKeys
distantPast
cachedMetadataJSONForKey:messageID:
absoluteString
messagesToIndex
executeWithNamedBindings:usingBlock:error:
initWithBasePath:hookRegistry:
initWithResult:table:
nextMailboxActionForAccountID:
isPlatform:
dataHolderWithData:
getBytes:range:
service
setSyncTimeout:
distinctUntilChanged
rawAddressFromFullAddress:
cachedObjectForKey:
requestedRepresentation
initWithBaseURL:diskCapacity:
initWithResultColumn:table:
contentDescription
getCharacters:
rawAddressFromFullAddress:cacheResults:
timeout
setSystemAccount:
calculateAttachmentInfoFromBody:
absoluteURL
setFamilyName:
serviceForMail
doOnError:
getCharacters:range:
calendar
accountBecameActive:
setNumActiveCalls:
contentLocation
getDataDetectionResultsForGlobalMessageID:
isPredicateForMessagesInMailboxObjectID:mailboxObjectID:
performWhileLocked:
sessionWithConfiguration:delegate:delegateQueue:
initWithBool:
rawTrustResultForSSLTrust:hostname:service:
title
accountBecameInactive:
calendarItemExternalIdentifier
nextSiblingPart
isPredicateForMessagesInMailboxWithType:mailboxType:
contentObjectID:generateHTMLSnippetsForMailDropContentItems:completionHandler:
doesNotContain:caseSensitive:
initWithSchedulable:budgetConfiguration:
alternativeAtIndex:
setNumberOfAttachments:isSigned:isEncrypted:
calendarItemsWithExternalIdentifier:
accountBoolPropertyForKey:
getDataStatus:error:
setTarget:
initWithSchema:protectedSchema:searchableIndex:accountsProvider:vipManager:messagePersistence:mailboxPersistence:
toIfCached
contentObjectID:generateHTMLSnippetsForRelatedContentItems:completionHandler:
doesNotRecognizeSelector:
calendarWithIdentifier:
performWriteBlock:
noMailboxesScope
setTaskDescription:
contentObjectID:placeholderHTMLForEmptyContentWithCompletionHandler:
initWithSearchString:options:
mailNumberOfPastDaysToSync
callStackReturnAddresses
getFileSystemRepresentation:maxLength:
initWithBundleType:
isProvisionedForDataclass:
setObject:forKey:
startWith:
setAccountDescription:
callStackSymbols
initWithBytes:length:
readBytesIntoBuffer:maxLength:
domainIdentifierForMessage:
setTimeStyle:
dataTaskWithRequest:
andPredicateWithSubpredicates:
setTimeout:
initWithBytes:length:encoding:
persistAttachment:attachmentMetadata:basePath:error:
calls
getLineStart:end:contentsEnd:forRange:
expressionForConstantValue:
doubleValue
dataTaskWithRequest:completionHandler:
persistAttachmentMetadata:
accountDescription
contentToOffset:resultOffset:asHTML:isComplete:
initWithBytesNoCopy:length:
readChanged
setTimeoutIntervalForRequest:
dataUsingEncoding:
anyObject
setFileAttributes:
initWithServerMessageBuilder:
setTimeoutIntervalForResource:
methodSignature
initWithBytesNoCopy:length:encoding:freeWhenDone:
persistAttachmentWithURL:attachmentMetadata:basePath:error:
initWithSet:
tokenWithCancelationBlock:
dataUsingEncoding:allowLossyConversion:
isReadableFileAtPath:
expressionForKeyPath:
setActionType:
methodSignatureForSelector:
initWithBytesNoCopy:length:freeWhenDone:
contentTransferEncoding
readIsSet
appendBytes:length:
dataValue
isReadableText
setFileNamesByAssetFieldNames:
initWithSigners:isEncrypted:hasEncryptedDescendantPart:smimeError:
notIn:
persistedMessagesForMessageObjectIDs:requireProtectedData:temporarilyUnavailableMessageObjectIDs:
initWithCache:sourceBundleIdentifier:
setToEmailAddresses:
setOsType:
initWithSigningTrust:encryptionTrust:
setFileProtection:forDatabaseAtURL:error:
getNumberOfAttachments:isSigned:isEncrypted:
mf_appendCString:
setAddressListForBcc:
dataWithBytes:length:
setPadChar:
isRegularFile
expressionType
topic
getResourceValue:forKey:error:
setAddressListForCc:
notPredicateWithSubpredicate:
accountID
expressionWithQueryString:searchString:updatedSuggestion:
initWithStartDate:endDate:jsonStringForModelEvaluationForSuggestions:
mf_appendRFC2231CompliantValue:forKey:
dataWithCapacity:
initWithCharacters:length:
contentURL
setTotalUnitCount:
setAddressListForSender:
canContainMessages
setFilename:
setParentAccount:
resolvedEmailToX509Certs
dataWithContentsOfFile:
setAddressListForTo:
totalTextSize
downloadTaskWithURL:
getSubscriptionInfoWithError:
initWithColumnName:
setTransactionID:
globalAsyncScheduler
resourceSpecifier
dataWithContentsOfFile:options:error:
accountIdentifierForMessage:
persistenceDidFinishThreadUpdates
contentsForTextSystem
downloadURL
external
initWithColumnName:orderDirection:
contentsOfDirectoryAtPath:error:
mf_bestMimeCharsetForMessageDeliveryUsingSubtype:
notificationWithName:object:
setFlagged
globalAsyncSchedulerWithQualityOfService:
accountIdentifierKey
transactionGeneration
setAllowSlash:
setTruncationSize:
dataWithContentsOfURL:
downloadURLExpiration
mailboxIdentifiersForMessage:result:
mf_bestMimeCharsetUsingHint:
notificationWithName:object:userInfo:
setTrust:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
transactionWithDescription:
dataWithContentsOfURL:options:error:
setAllowedExecutionTime:
reason
appendFormat:
stopAccessingSecurityScopedResource
initWithString:charset:
dataWithData:
draftChanged
transformBaseMessage:mailboxScope:loaderBlock:
appendHeaderData:andRecipients:
mf_blockRemoteContent
dataWithJSONObject:options:error:
draftsFolder
initWithString:relativeToURL:
persistenceDidUpdateLastSyncAndMostRecentStatusCount:forMailboxWithObjectID:generationWindow:
gmailLabelPersistence
reattemptInvitationLinkageForMetaData:inFolderWithId:
setAllowsCellularAccess:
stopActivityWithSuccess:
failActionWithError:
dataWithPropertyList:format:options:error:
drain
persistenceDidUpdateMostRecentStatusCount:forMailboxWithObjectID:generationWindow:
initWithStyle:
mailboxObjectIDsForMailboxType:
setURL:
initWithCondition:
initWithTable:
mf_clearLocks
stopMonitoringAllFolders
initWithTable:where:
setPathExtension:
persistenceDidUpdateServerCount:forMailboxWithObjectID:generationWindow:
initWithTableName:columnNames:
null
rebuildIndexState
databaseIDValue
initWithConsumer:
persistenceIsAddingMailboxWithDatabaseID:objectID:generationWindow:
setPerRecordCompletionBlock:
initWithTableName:columnNames:where:unique:
databaseIsAttached:
initWithConsumer:expectedSize:
mf_convertNetworkLineEndingsToUnix
nullFuture
mailboxScope
result:
initWithTableName:indexedColumns:
mailboxScopeForMailboxObjectIDs:forExclusion:
setPerRecordProgressBlock:
setFolderIdsThatExternalClientsCareAboutAdded:deleted:foldersTag:
databaseMigrationCompleted:
initWithConsumers:
conversationId
resultWithTimeout:error:
initWithTables:
mailboxSearchQueryWithSearchString:predicate:consumer:
recipientsKey
databaseName
initWithConsumers:expectedSize:
trustResult
earlierDate:
initWithTarget:selector:object:
numberOfArguments
mf_copyDateInCommonFormatsWithString:
handleError:message:
cancelPreviousPerformRequestsWithTarget:selector:object:
init
accountInfoDidChange
sourceApplicationBundleIdentifier
setShouldHealAccounts:
shouldHealAccounts
newAccountWithDictionary:
excludedAccountPropertyKeys
accountWithProperties:
authSchemesForAccountClass
accountWithPersistentAccount:
_newPersistentAccount
_accountClass
accountTypeIdentifier
releaseAllConnectionsScheduler
existingAccountForUniqueID:
isPredefinedAccountType
predefinedValueForKey:
propertiesWhichRequireValidation
_basicPropertyForKey:persistentAccount:
_setBasicProperty:forKey:persistentAccount:
accountTypeString
displayedAccountTypeString
displayedShortAccountTypeString
legacyKeychainProtocol
accountPropertiesValueForKey:value:
hostname
accountIsManaged:
accountSourceIsManaged:
accountIsPreventedFromSendingFromExternalProcesses:
accountIsRestrictedFromTransfersToOtherAccounts:
accountRestrictsRecentsSyncing:
defaultPortNumber
defaultSecurePortNumber
isCommonPortNumber:
usesSSL
isSSLEditable
saslProfileName
supportedDataclasses
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
copyWithZone:
accountPropertyForKey:
emailAddressStrings
setHostname:
password
setPassword:
identifier
systemAccount
T@"NSArray",R,C,N
T@"NSString",C,N
T@"NSString",R,C,N
T@"ACAccount",R,N
canAuthenticateWithCurrentCredentials
hasPasswordCredential
savePersistentAccount
altDSID
statisticsKind
primaryiCloudAccount
isActive
displayName
setDisplayName:
username
TB,R,N
setMissingPasswordError
domain
oauth2Token
T@"NSString",R,N
ef_publicDescription
shouldFetchACEDBInfoForError:
initWithProperties:
initWithPersistentAccount:
setPersistentAccount:
persistentAccountDidChange:previousAccount:
persistentAccount
removePersistentAccount
parentAccount
parentAccountIdentifier
type
accountClass
_privacySafeDescription
properties
setAccountProperty:forKey:
removeAccountPropertyForKey:
_queueAccountInfoDidChange
_setAccountProperties:
setValueInAccountProperties:forKey:
removeValueInAccountPropertiesForKey:
valueInAccountPropertiesForKey:
_objectForAccountInfoKey:
_boolForAccountInfoKey:defaultValue:
setActive:
canGoOffline
setUsername:
isManaged
managedTag
supportsMailDrop
_credential
_credentialCreateIfNecessary:
_credentialCreateIfNecessary:error:
_password
_passwordWithError:
credentialAccessibility
setOAuth2Token:refreshToken:
_renewCredentialsWithOptions:completion:
renewCredentialsWithOptions:completion:
promptUserForWebLoginWithURL:shouldConfirm:completionHandler:
accountForRenewingCredentials
personaIdentifier
fetchTokensIfNecessary:
portNumber
setPortNumber:
serviceName
secureServiceName
connectionServiceType
releaseAllConnections
releaseAllForcedConnections
setUsesSSL:
allowsTrustPrompt
setAllowsTrustPrompt:
setTryDirectSSL:
setDomain:
clientCertificates
setClientCertificates:
preferredAuthScheme
setPreferredAuthScheme:
_newConnection
connectionClass
requiresAuthentication
authenticatedConnection
connectionsAreConstrained
certUIService
defaultConnectionSettings
applySettingsAsDefault:
alternateConnectionSettings
insecureConnectionSettings
secureConnectionSettings
_shouldTryDirectSSLConnectionOnPort:
customDescriptionForError:authScheme:defaultDescription:
reportAuthenticationError:authScheme:
_connectAndAuthenticate:
uniqueID
syncStoreIdentifier
networkAccountIdentifier
nameForMailboxUid:
shouldEnableAfterError:
enableAccount
shouldDisplayHostnameInErrorMessages
missingPasswordErrorWithTitle:
inaccessiblePasswordErrorWithTitle:
loginDisabledErrorWithTitle:
enabledDataclasses
isEnabledForDataclass:
isSyncingNotes
copyDiagnosticInformation
baseAccount
setSourceApplicationBundleIdentifier:
currentConnections
.cxx_destruct
_persistentAccount
_persistentAccountLock
_unsavedAccountProperties
_descriptionLock
_privacyDescriptionLock
_cachedPrivacySafeDescription
_cachedDescription
_allowsTrustPrompt
_baseAccount
_sourceApplicationBundleIdentifier
_currentConnections
T@"EFLocked",R,N,V_currentConnections
T@"ACAccount",R
T@"NSString",R
T@"ECAccount",R,N,V_baseAccount
managed
TB,R,N,GisManaged
T@"NSDictionary",R
T@"NSString",R,&,N
T@"NSString",C,N,V_sourceApplicationBundleIdentifier
TI,N
TB,N
TB,V_allowsTrustPrompt
T@"NSString",&,N
T@"ECAuthenticationScheme",&,N
T@"NSArray",R,C,N,VemailAddressStrings
mf_isMissingAccountCredentialError
mf_isInaccessibleAccountCredentialError
account
setAccount:
deliveryAccount
setDeliveryAccount:
localizedNotes
setLocalizedNotes:
_account
_deliveryAccount
_localizedNotes
T@"MailAccount",&,N,V_account
T@"DeliveryAccount",&,N,V_deliveryAccount
T@"NSDictionary",&,N,V_localizedNotes
dealloc
invoke
_validateAccount:
_validateAccountWithoutFallbacks:
initWithPerformsValidationInBackground:
validateAccount:useSSL:
validateAccount:useSSL:withCompletion:
validateAccountWithoutFallbacks:
validateAccountWithoutFallbacks:withCompletion:
cancelValidation
_ispAccountInfo
_backgroundValidateAccountFinished:authSchemes:
_incomingServerValid
_outgoingServerValid
stop
accountValidationCanceled
_validateAccount:withFallbacks:
performsValidationInBackground
validationInvocation
accountIsValid
accountSupportsSSL
error
delegate
setDelegate:
_accountValidationActivity
_validationInvocation
_completionBlock
_flags
_incomingServerValidationError
_smtpServerValidationError
_incomingServerAuthSchemes
_smtpServerAuthSchemes
_delegate
T@"MFMonitoredInvocation",R,N
T@"<MFAccountValidatorDelegate>",W,N,V_delegate
T@"MFError",R,N
T@"MFAccount",R,N
cancelMessage
cancel
currentDesignator
pushNewDesignator
destroyCurrentDesignator
currentMonitor
pushNewMonitor
destroyMonitor
T@"MFActivityMonitor",R
postActivityStarting
postActivityFinished:
startActivity
finishedActivity:
userInfoForNotification
postDidChangeWithUserInfo:
_didChange
setCurrentCount:
_ntsThrottledUserInfoDict
setPercentDoneOfCurrentItem:
reset
setGotNewMessagesState:
gotNewMessagesState
addReason:
reasons
setStatusMessage:percentDone:
setPercentDone:
percentDone
startTime
setExpectedLength:
expectedLength
setDisplayName:maxCount:
canBeCancelled
setCanBeCancelled:
shouldCancel
setShouldCancel:
addCancelable:
removeCancelable:
_cancelAssociatedCancelables
acquireExclusiveAccessKey
relinquishExclusiveAccessKey:
setStatusMessage:percentDone:withKey:
setStatusMessage:withKey:
setPercentDone:withKey:
setError:
resetConnectionStats
recordBytesRead:
recordBytesWritten:
bytesRead
bytesWritten
recordTransportType:
mailbox
setMailbox:
startedFetch
setStartedFetch:
isRemoteSearch
setIsRemoteSearch:
transportType
_runningThread
_displayName
_statusMessage
_percentDone
_key
_canCancel
_shouldCancel
_isActive
_error
_expectedLength
_maxCount
_currentCount
_mailbox
_lastTime
_startTime
_gotNewMessagesState
_bytesRead
_bytesWritten
_reasons
_associatedCancelables
_isRemoteSearch
_startedFetch
_transportType
T@"MFMailboxUid",&,V_mailbox
T@?,C,V_startedFetch
TQ,N
Td,R,N
Td,N
TB,N,V_isRemoteSearch
TQ,R,N
Tq,R,N,V_transportType
T@"MFError",&,N
_defaultSpecialMailboxNameForType:
emailAddressWithUsername:
deliveryAccountHostname
deliveryAccountUsesSSL
deliveryAccountPortNumber
iconString
derivesDeliveryAccountInfoFromMailAccount
URLForMessage:
_deliveryAccountCreateIfNeeded:
displayHostname
shouldUseAuthentication
mailAccountIfAvailable
setMailAccount:
mailAccount
T@"AOLAccount",&,N,GmailAccountIfAvailable,V_account
schemeWithName:
initWithMaximumSize:latency:
addItem:
removeAllObjects
_flush
flush
flushIfNecessary
isEmpty
sizeForItem:
handleItems:
size
maximumSize
setMaximumSize:
maximumLatency
setMaximumLatency:
_maximumSize
_maximumLatency
_timeOfLastFlush
_queue
_currentSize
TI,R,N,V_currentSize
TI,N,V_maximumSize
Td,N,V_maximumLatency
initWithLibrary:persistentAccount:
shouldRegisterForPush
canAttemptPushRegistration
canReceiveNewMailNotifications
startListeningForNotifications
_accountsChanged:
firstEmailAddress
handleAlertResponse:
setDefaultEmailAddress:
initialize
emailAddressHostPart
defaultPathNameForAccountWithHostname:username:
usernameIsEmailAddress
primaryDeliveryAccountIsDynamic
newChildAccountWithParentAccount:error:
shouldFetchRemoteLinksWithDateReceived:
isEquivalentTo:hostname:username:
appleAccount
_resetAppleAccount
accountStore
_mailPropertyFromAppleAccountForKey:
uniqueIdForPersistentConnection
displayUsername
personID
authToken
authTokenWithError:
anisetteDataWithError:
clientInfo
emailAddressesAndAliasesList
fromEmailAddresses
fromEmailAddressesIncludingDisabled
_fromEmailAddressesIncludingDisabled:
setPasswordInKeychain:
_removePasswordInKeychain
passwordFromKeychain
handleOverQuotaResponse:
deliveryHostname
deliveryPortNumber
deliveryUsesSSL
setLocalDefaultEmailAddress:
setLocallyEnabled:forEmailAddress:
setEnabled:forEmailAddress:
invalidateEmailAliases
updateEmailAliasesIfNeeded
_emailAliasesAreStale
_updateEmailAddressAndAliases
_updateEmailAddressAndAliasesWithResult:
pushUpdateForAliasData
supportsArchiving
aliasLookupURL
aliasSupport
aliasUpdater
_appleAccountLock
_appleAccount
_readyForPushRegistration
_aliasChanges
_updatedDefaultEmail
_aliasUpdateQueue
_aliasLookupURL
_aliasSupport
_aliasUpdater
T@"ACAccountStore",R,N
TI,R,N
T@"NSURL",R,N,V_aliasLookupURL
T@"EDiCloudAliasSupport",R,N,V_aliasSupport
T@"MFCastleEmailAliasUpdater",R,N,V_aliasUpdater
sendResponsesForCondStoreFlagFetchForUIDs:withSequenceIdentifier:toQueue:
readLoggingDefaults
logConnection:type:data:
flushLog
logClasses
setLogClasses:
logAllSocketActivity
setLogAllSocketActivity:
logActivityOnPorts
setLogActivityOnPorts:
logActivityOnHosts
setLogActivityOnHosts:
certUIPromptScheduler
shouldTryFallbacksAfterError:
authenticationMechanisms
securityProtocol
loginDisabled
T@"NSArray",R,N
isCellularConnection
isConstrained
isFetching
setIsFetching:
_setupSocketWithSettings:
connectUsingSettings:
connectUsingAccount:
connectUsingFallbacksForAccount:
test_setSocket:
authenticateUsingAccount:
capabilities
usesOpportunisticSockets
writeBytes:length:dontLogBytesInRange:
writeData:dontLogBytesInRange:
writeData:
setDesiredReadBufferLength:
stopActivity
enableThroughputMonitoring:
logReadChars:length:
readLineIntoData:
readBytesIntoData:desiredLength:
authenticateUsingAccount:authenticator:
startTLSForAccount:
enableSSL
_clearBuffer
startCompression
endCompression
isValid
disconnect
hasBytesAvailable
lastUsedTime
connectionSettings
setConnectionSettings:
_certificateIsTrustedForAccount:
_setCertificateIsTrusted:forAccount:
_evaluateTrust:errorPtr:
accountLogString
_securityLayer
_connectionSettings
_socket
_lastUsedTime
_buffer
_bufferRemainingBytes
_bufferStart
_bufferLength
_desiredBufferLength
_deflater
_inflater
_zbuffer
_readBytesNotLogged
_isFetching
_compressionEnabled
_accountLogString
T@"NSString",R,N,V_accountLogString
setConnectionServiceType:
tryDirectSSL
setCertUIService:
setServiceName:
accountIdentifier
setAccountIdentifier:
setNetworkAccountIdentifier:
setUsesOpportunisticSockets:
isNonAppInitiated
setIsNonAppInitiated:
_hostname
_serviceName
_certUIService
_clientCertificates
_portNumber
_connectionServiceType
_usesSSL
_usesOpportunisticSockets
_tryDirectSSLConnection
_isNonAppInitiated
_accountIdentifier
_networkAccountIdentifier
T@"NSString",C,N,V_certUIService
T@"NSString",C,N,V_hostname
T@"NSString",C,N,V_serviceName
T@"NSArray",C,N,V_clientCertificates
T@"NSString",C,N,V_accountIdentifier
T@"NSString",C,N,V_networkAccountIdentifier
TI,N,V_portNumber
TB,N,V_usesSSL
TB,N,V_usesOpportunisticSockets
TB,N,V_tryDirectSSLConnection
TB,N,V_allowsTrustPrompt
TB,N,V_isNonAppInitiated
canAuthenticateAccountClass:connection:
authenticatorClass
name
humanReadableName
sendsPlainTextPasswords
hasEncryption
responseForServerData:
searchableIndex
mailboxIDs
tables
baseTable
propertyMapper
usedBaseTable
haveLibraryIDCriterion
protectedDataAvailable
_criterionForSQL
criterionForSQL
_containsNotCriterion
_evaluateFTSCriterionWithIndex:mailboxIDs:
_collapsedMessageNumberCriterion:allMustBeSatisfied:collapsedIndexes:
_resolveWithIndex:mailboxIDs:
SQLExpressionWithTables:baseTable:protectedDataAvailable:searchableIndex:mailboxIDs:propertyMapper:
bestBaseTable
_addCriteriaSatisfyingPredicate:toCollector:
criteriaSatisfyingPredicate:
includesCriterionSatisfyingPredicate:restrictive:
criterionByApplyingTransform:
extractedDateCriterion
extractedUnreadCriterion
fixOnce
SQLExpressionWithContext:depth:
hasLibraryIDCriterion
_SQLExpressionForMailboxCriterion
newDeliveryWithMessage:
newDeliveryWithHeaders:mixedContent:textPartsAreHTML:
newDeliveryWithHeaders:HTML:plainTextAlternative:other:
initWithDAMailAccount:
deliveryClass
_DAMailAccount
actionFailed:forTask:error:
messageDidSendWithContext:
messageDidSendWithContext:sentBytesCount:receivedBytesCount:
status
_status
T@"MFError",&,N,V_error
Tq,R,N,V_status
TQ,R,N,V_bytesRead
TQ,R,N,V_bytesWritten
newMessageWriter
T@"NSObject<OS_os_log>",R
setDAMailAccount:
deliverSynchronously
_updateBasedOnOriginalMessage:
_library
_folderID
_accountID
_originalMessageID
_originalLongID
_reachabilityChanged:
initWithPath:
allMailboxUids
resetSpecialMailboxes
emptyFrequencyForMailboxType:
foldersContentsChanged:
accountHierarchyChanged:
_copyMailboxUidWithParent:name:attributes:existingMailboxUid:dictionary:
folderID
_newMailboxWithParent:name:attributes:dictionary:withCreationOption:
_renameMailbox:newName:parent:
newMailboxNameIsAcceptable:reasonForFailure:
primaryMailboxUid
invalidate
pushedFoldersPrefsChanged:
_accountConduitClass
legacyPathForAccountIdentifier:withHostname:username:
csAccountTypeString
_URLScheme
accountIDForDirectoryName:isAccountDirectory:
messageDataForMessage:
moveSupportedFromMailboxURL:toURL:
URLStringFromLegacyURLString:
initWithDAAccount:
mustArchiveSentMessages
canArchiveSentMessages
virtualAllSearchMailbox
allMailMailboxUid
isRunningInDisallowedBundle
_loadChildrenForParent:fromMap:intoArray:replacingInbox:withID:
accountConduit
finishedInitialMailboxListLoad
fetchMailboxList
storeClass
_copyMailboxWithParent:name:attributes:dictionary:
folderIDForMailbox:
_synchronouslyLoadListingForParent:
renameMailbox:newName:parent:
_deleteMailbox:reflectToServer:
_performFolderChange:completion:
mailboxPathExtension
setDAAccount:
syncAnchorForMailbox:
supportsRemoteAppend
supportsMailboxEditing
_infoForMatchingURL:
mailboxForFolderID:
mailboxUidForInfo:
addRequest:consumer:mailbox:
addRequests:mailbox:
addRequests:mailbox:combine:
processRequests:mailbox:
performRequests:mailbox:
_relativePathForType:
_relativePathSpecialMailboxUidWithType:create:
_specialMailboxUidWithType:create:
isMailboxLocalForType:
_ensureWeHaveLoadedInitialMailboxList
supportsMessageFlagging
supportsThreadOperations
supportsUniqueServerId
supportsServerDrafts
shouldArchiveByDefault
sourceIsManaged
_isUnitTesting
shouldFetchAgainWithError:foregroundRequest:
uniqueServerIdForMessage:
reconstituteOrphanedMeetingInMessage:
unactionableInvitationICSRepresentationInMessage:summary:
meetingStorePersistentID
_inboxFolderID
_updateWatchedFolderIdsAndNotify:
stopListeningForNotifications
syncAnchorForFolderID:mailbox:
setSyncAnchor:forFolderID:mailbox:
performSearchQuery:
cancelSearchQuery:
shouldRestoreMessagesAfterFailedDelete
supportsServerSearch
daysToSync
supportsUserPushedMailboxes
pushedMailboxUids
_folderIdsForMailboxUids:
changePushedMailboxUidsAdded:deleted:
_watchedFolderIds
signingIdentityPersistentReferenceForAddress:
setSigningIdentityPersistentReference:forAddress:
encryptionIdentityPersistentReferenceForAddress:
setEncryptionIdentityPersistentReference:forAddress:
perMessageEncryptionEnabledForAddress:
secureCompositionSigningPolicyForAddress:
secureCompositionEncryptionPolicyForAddress:
copyDataForRemoteEncryptionCertificatesForAddresses:errors:
copyDataForRemoteEncryptionCertificatesForAddress:error:
restrictedFromTransferingMessagesToOtherAccounts
restrictedFromSendingExternally
restrictedFromSyncingRecents
fetchLimits
unsupportedHandoffTypes
moveSupported
replayAction:
_remoteIDsForFlagChangeAction:
setVirtualAllSearchMailbox:
_accountConduit
_daAccount
_isNetworkReachable
_cachedAccountID
_cachedAccountPersistentUUID
_cachedDisplayName
_cachedEmailAddress
_cachedEmailAddresses
_cachedIconString
_cachedIsActive
_cachedIsHotmailAccount
_cachedCalendarEnabled
_cachedPerMessageEncryptionEnabled
_cachedSecureMIMEShouldSign
_cachedSecureMIMEShouldEncrypt
_cachedRestrictMessageTransfersToOtherAccounts
_cachedRestrictSendingFromExternalProcesses
_cachedRestrictSyncingRecents
_cachedIsManaged
_cachedSupportsMailDrop
_cachedArchiveByDefault
_cachedSourceIsManaged
_cachedStoreDraftsOnServer
_cachedInboxFolderID
_cachedSentMessagesFolderID
_cachedTrashFolderID
_cachedJunkFolderID
_cachedDraftsFolderID
_temporaryInbox
_loadedInitialMailboxList
_receivedInitialMailboxUpdate
_doneInitialInboxCheck
_observingPushedFoldersPrefsChanged
_supportsServerSearch
_supportsMessageFlagging
_supportsConversations
_supportsServerDrafts
_supportsUniqueServerId
_daysToSync
_requestQueuesByFolderID
_watchedFolderIdsLock
_folderTag
_supportsUniqueServerIdLock
_virtualAllSearchMailbox
T@"MFMailboxUid",&,N,V_virtualAllSearchMailbox
initWithName:attributes:forAccount:extraAttributes:
mergeWithUserInfo:
mutableDictionaryRepresentation
initWithName:attributes:account:folderID:
setFolderID:
URLWithAccount:
dictionaryRepresentation
T@"NSString",C
initWithAlwaysReportFailures:
setDone:
waitUntilDoneBeforeDate:
waitUntilDone
taskFailed:statusCode:error:
shouldRetryRequest
_doneCondition
_shouldRetryRequest
_alwaysReportFailures
initWithAccount:folderID:
filterRequests:
processRequests:
data
streaming
streamingDone
initWithData:streaming:streamingDone:
resolvedRecipientsByEmailAddress:
waitForResolvedRecipients
_conditionLock
_resolvedRecipientsByEmailAddress
T@"NSError",R
_postDeliveryAccountsHaveChanged
reloadDeliveryAccounts
deliveryAccounts
addDeliveryAccount:
removeDeliveryAccount:
accountWithUniqueId:
accountWithIdentifier:
existingAccountWithIdentifier:
existingAccountWithHostname:username:
accountWithHostname:username:
accountWithHostname:username:lookForExistingAccounts:
carrierDeliveryAccount
newDefaultInstance
maximumMessageBytes
setShouldUseAuthentication:
setMaximumMessageBytes:
hasNoReferences
canBeFallbackAccount
hasEnoughInformationForEasySetup
supportsOutboxCopy
shouldUseSaveSentForAccount:
_updateAccountDescriptionWithUsername:hostname:
setAuthenticationState:
setSecurityLevel:
securityLevel
setMaxBuffer:
setCryptInfo:
setExpectedResponse:
_maxbuf
_securityLevel
_expectedResponse
_cryptInfo
eSearchIDSet:areMessageSequenceNumbers:arguments:success:returning:
eSearchIDSet:areMessageSequenceNumbers:forTerms:success:returning:
parseIndexSetFromSequenceSet:
parseSearchReturn:
parseESearchResponseWithContext:
_syncOnly_defaultValueForShouldStoreJunkOnServer
storeDraftsOnServer
storeSentMessagesOnServer
filterMailboxList:forMailbox:options:
_filterMailboxList:forMailboxWithPath:iisServer:
mf_lineBreakBeforeIndex:withinRange:
mf_nextWordFromIndex:forward:
mf_convertFromFlowedText:visuallyEmpty:
getFormatFlowedString:insertedTrailingSpaces:encoding:
quotedString:
formatFlowedOptions
newWithPlainTextDocument:encoding:
_findLineBreakInRange:maxCharWidthCount:endIsURL:
_outputQuotedParagraph:range:withQuoteLevel:
outputString
quotedString
addedTrailingSpaces
_inputDocument
_encoding
_outputString
_quotedString
_addedTrailingSpaces
_lineString
mf_descriptionForMimeHeaders
mf_replyPrefixForSender:
mf_boolForKey:
mf_integerForKey:
mf_setBool:forKey:
mf_setInteger:forKey:
mf_addObject:forKey:
mf_objectForKey:ofClass:
archiveDestinationForMailbox:
statusCode
errorForResponse:
specialUseAttributeForType:
specialUseAttributesForMailbox:
displayNameUsingSpecialNamesForMailboxUid:
_childOfMailbox:withComponentName:
imapNotEnabledPrefix
clientToken
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
_deleteHook
_consumeExistingPreAuthToken
supportsFastRemoteBodySearch
_webLoginErrorWithURL:
_URLFromUncleanString:
_removeCredential:
xListSupportedOnConnection:
persistentNameForMailbox:
_enablingPromise
_clientToken
_urlFromResponse:
T@"GmailAccount",&,N,GmailAccountIfAvailable,V_account
authenticatorForAccount:connection:
saslName
supportsInitialClientResponse
justSentPlainTextPassword
_sentResponse
saveSentFolder
T@"HotmailAccount",&,N,GmailAccountIfAvailable,V_account
urls
setUrls:
paths
setPaths:
T@"NSArray",C,Vurls
T@"NSArray",C,Vpaths
T@"IMAPAccount",&,Vaccount
intValue
_readCustomInfoFromMailboxCache:
_writeCustomInfoToMailboxCache:
saveState
test_setTaskManager:
_invokeBlock:
_flushOfflineCache
networkChanged
_setSpecialMailbox:forType:
isSpecialMailbox:
_deleteQueuedMailboxes:
_mailboxesWereRemovedFromTree:withFileSystemPaths:
canMailboxBeDeleted:
URLString
deleteMessagesFromMailboxUid:olderThanNumberOfDays:
mailboxUidForRelativePath:create:
localizedCompare:
canFetch
_apsDeviceTokenChanged:
connection:shouldHandleUntaggedResponse:forCommand:
connection:didReceiveResponse:forCommand:
connectionDidDisconnect:
willRemoveDelegation:
setServerMessageCount:
setHighestModSequence:
shouldStartIdleForConnection:
mf_lockOrdering
minID
_useNewIMAPStack
taskManager
storeMailboxTypeOnServer:
setStoreMailboxType:onServer:
readBufferSize
setReadBufferSize:
_dataForTemporaryUid:
allowsPartialDownloads
setAllowsPartialDownloads:
deleteInPlaceForAllMailboxes
deleteInPlaceForMailbox:
connectAndAuthenticate:
_replayMailboxActionsWithConnection:
connectionForMailbox:delegate:options:failedToSelectMailbox:
checkInConnection:
checkInConnection:destroy:
checkInConnectionsForStore:
verifyESearchSupportWithBlock:
unselectMailbox:
_releaseAllConnectionsAndCallSuper:synchronously:edgeForcedOnly:saveOfflineCache:
_releaseAllConnectionsAndCallSuper:
releaseAllConnectionsSynchronously
flushOfflineCache
setHandlerForOfflineCacheFlush:
acquireNetworkAssertion
releaseNetworkAssertion
isOffline
setIsOffline:
_updateSeparatorAndNamespaceWithConnection:
separatorChar
lastKnownCapabilities
_setCapabilities:
_listingForMailboxUid:listAllChildren:onlySubscribed:statusDataItems:withConnection:statusEntriesByMailbox:
_listingForMailboxUid:listAllChildren:onlySubscribed:
_listingForMailboxUid:listAllChildren:
_renameLocalSpecialMailboxesToName:
resetMailboxTimer
getMailboxListWithConnection:statusDataItems:statusEntriesByMailbox:
throttledGetMailboxListWithConnection:
_waitForMailboxListingLoadToComplete
_pathComponentForUidName:
_uidNameForPathComponent:
_nameForMailboxUid:
mailboxUidForName:
serverPathPrefix
serverPathPrefixAccountValue
setServerPathPrefix:
_fileSystemServerPathPrefix
_mailboxPathPrefix
offlineCacheIfExists
offlineCacheIfOffline
offlineCache
offlineCacheDirectoryPath
hasPendingOfflineOperations
supportsAppend
lastPushRegistration
setLastPushRegistration:
mustRegisterForPushOnNextConnection
setMustRegisterForPushOnNextConnection:
supportedPushServiceLevel
setSupportedPushServiceLevel:
mailboxesRegisteredForPushByHash
updatePushRegisteredMailboxes:
apsTopic
setAPSTopic:
_schedulePushRegistrationConnection
serverRegisteredMailboxes:withTopic:version:
_notificationNameForMailbox:withPrefix:
_notesPrefix
notificationNamesForPrefix:mailboxUids:
_registerPushNotificationPrefix:forMailboxNames:
_copyMailboxListForNames:
_copyMailboxListPreferenceForKey:
_copyUserPushedMailboxes
_copyPushedMailboxesForPrefix:
_updatePushedMailboxesAndNotify:
_externalMailboxUids
mailboxNamesForPushRegistration
_mailboxListingChanged
handlePushNotificationOnMailboxes:missedNotifications:
_registerForDeviceTokenChanges
_unregisterForDeviceTokenChanges
transferNotificationSessionToAccount:
messageActionsAfterActionID:
supportsAppleRemoteLinks
stateCaptureTitle
apsSenderArgument
setApsSenderArgument:
apsVersion
setApsVersion:
_separatorChar
_serverNamespace
_cachedConnections
_offlineCache
_timeLastFetchedMailboxList
_connectionLock
_nextConnectionTag
_packetContextAssertion
_lockOrderingArray
_readBufferSize
_offlineCacheFlushHandler
_fetchedMailboxList
_isOffline
_lastKnownCapabilities
_eSearchSupportedLock
_eSearchSupported
_lastPushRegistration
_apsTopic
_pushedMailboxUids
_pushRegisteredMailboxes
_supportedPushServiceLevel
_taskManager
_mustRegisterForPushOnNextConnection
_didRequestPushRegistration
_listeningForDeviceTokenChanges
_didUpdateSeparatorAndNamespace
_apsVersion
_apsSenderArgument
T@"NSString",C,N,V_apsSenderArgument
Ti,N,V_apsVersion
TB,R
flushCriteria
initWithCommand:
initWithCommand:arguments:
initWithCommand:sequenceNumber:
command
setCommand:
arguments
setArguments:
untaggedResponses
setUntaggedResponses:
sequenceNumber
setSequenceNumber:
responseConsumer
setResponseConsumer:
_command
_arguments
_untaggedResponses
_sequenceNumber
_responseConsumer
Ti,N,V_command
T@"NSArray",&,N,V_arguments
T@"NSMutableArray",&,N,V_untaggedResponses
TQ,N,V_sequenceNumber
T@"MFIMAPResponseConsumer",&,N,V_responseConsumer
_handleBytesAvailableInternal
setReadSizeParameters
expunge
expungeUIDs:
storeFlagChange:forUIDs:
storeGmailLabels:state:forUIDs:
copyUIDs:toMailboxNamed:copyInfo:error:
moveUIDs:toMailboxNamed:copyInfo:error:
appendData:toMailboxNamed:flags:dateReceived:appendInfo:error:
hasValidConnection
fetchPipeline
downloadCache
mailboxListFilter
setMailboxListFilter:
_clearCapabilities
_addCapabilities:
_fetchCapabilities
_sendClientInfoIfSupported
_sendApplePushForAccountIfSupported:
_enableCompressionIfSupported
_connectSocketUsingAccount:
_doBasicConnectionUsingAccount:
_tryConnectionUsingAccount:
disconnectAndNotifyDelegate:
connectionState
fillLiteralBuffer:count:dataLength:nonSynchronizingLiteral:
_sendCommands:response:
_copyNextServerResponseForCommand:
_copyNextTaggedOrContinuationResponseForCommand:
_errorForResponse:commandParams:
supportsCapability:
noop
_serverErrorForAccount:response:command:
_updateCapabilitiesForAccount:withAuthenticationResponse:
_doIMAPLoginForAccount:quotedUsername:password:
loginWithAccount:password:
logout
_doNamespaceCommand
_doListCommand:withReference:mailboxName:options:getSpecialUse:statusDataItems:statusEntriesByMailbox:
_listingForMailbox:options:getSpecialUse:statusDataItems:statusEntriesByMailbox:withCommand:
listingForMailbox:options:getSpecialUse:statusDataItems:statusEntriesByMailbox:
subscribedListingForMailbox:options:
close
closeAndLogout
unselect
handleBytesAvailable
locked_startIdle
locked_finishIdle
finishIdle
isIdle
locked_scheduleIdle
scheduleIdleReset
locked_scheduleIdleResetAfterDelay:
fetchStatusForMailboxes:args:
examineMailbox:
selectMailbox:withAccount:
selectedMailbox
createMailbox:
deleteMailbox:
renameMailbox:toMailbox:
subscribeMailbox:
unsubscribeMailbox:
quotaPercentagesForMailbox:
_sendMailboxCommand:withArguments:
copyArgumentForSearchTerm:
searchUidSet:forTerms:success:
searchIDSet:forTerms:success:
countForSearchOfIDSet:forTerms:success:
countForSearchOfUidSet:forTerms:success:
_updateSearchCapabilityWithAccount:
getMailboxIDForUID:
storeFlags:state:forMessageSet:
storeFlags:state:forUIDs:
storeFlags:state:forRange:
deleteMessagesOlderThanNumberOfDays:
_responseFromSendingCommand:andPossiblyCreateMailbox:
copyInfoForMessageInfo:
_dictionaryFromSourceUIDs:destinationUIDs:
_indexSetForIMAPInlineSet:
appendData:toMailboxNamed:flags:dateReceived:newMessageInfo:
_headersToFetchIncludingThoseRequiredForRouting:withRecipients:
fetchMessageIdsForUids:
performCustomCommand:withArguments:
setReadBufferSizeFromElapsedTime:bytesRead:
messageSetForRange:
messageSetForRange:butNotNumbers:
messageSetForNumbers:
messageSetForUIDs:
messageSetForUIDs:maxTokens:remainder:
parenthesizedStringWithObjects:
lock
_connectionStateDescription
_connectionLogPrefix
literalChunkSize
_readDataOfLength:
_fetchArgumentForMessageUidsAndFlags
_fetchArgumentForMessageSkeletonsWithAllHeaders
_isFetchResponseValid:
_responseFromSendingCommands:
sendResponsesForCommand:toQueue:
sendResponsesForUIDFetchForUIDs:fields:toQueue:
sendSkeletonResponsesForUIDs:includeTo:toQueue:
sendUidAndFlagResponsesForUIDs:sequenceIdentifierProvider:flagSearchResults:toQueue:
sendUidResponsesForSearchArguments:toQueue:
searchUIDs:withFlagRequests:
sendResponsesForUIDs:fields:flagSearchResults:toQueue:
didFinishCommands:
_logStringForIDs:
_logStringForCommand:
connectTime
gotBadResponse
setTag:
idleCommandSequenceNumber
setIdleCommandSequenceNumber:
idleSubscriptionCancelable
setIdleSubscriptionCancelable:
permanentFlags
setPermanentFlags:
_mailboxListFilter
_capabilityFlags
_verifiedESearchResponse
_gotBadResponse
_tag
_connectTime
_connectionState
_selectedMailbox
_capabilities
_lastRequiredHeaders
_commandNumber
_data
_expirationTime
_streamEventQueue
_noModSequence
_delegateState
_permanentFlags
_downloadCache
_fetchPipeline
_idleCommandSequenceNumber
_idleSubscriptionCancelable
TQ,N,V_idleCommandSequenceNumber
T@"<EFCancelable>",&,N,V_idleSubscriptionCancelable
TI,N,V_permanentFlags
T@"MFIMAPCommandPipeline",R,&,N,V_fetchPipeline
T@"MFIMAPDownloadCache",R,&,N,V_downloadCache
T@"<MFIMAPConnectionDelegate>",W,N,V_delegate
Ti,N,V_tag
Td,R,N,V_connectTime
TB,R,N,V_gotBadResponse
idle
TB,R,N,GisIdle
_flagsForUID:
_indexSetFromUIDs:
cacheStateForUIDs:mask:existenceSetsFlag:
copyResponseForUID:
_uidsWithFlagMaskSet
_uidsWithoutFlagMaskSet
requestWithMask:searchTerms:positiveMatch:
initWithMask:searchTerms:positiveMatch:
mask
searchTerms
isPositiveMatch
_isPositiveMatch
_mask
_searchTerms
TQ,R,N,V_mask
T@"NSArray",R,N,V_searchTerms
TB,R,N,V_isPositiveMatch
compare:
mf_encodedIMAPMailboxName
mf_decodedIMAPMailboxName
setShouldFlattenCacheOperations:
initWithIMAPAccount:
_queueDeferredOperation:
firstUidForCopyingMessages:fromMailbox:toMailbox:
uidForAppendingMessageData:withFlags:andInternalDate:toMailbox:
expungeTemporaryUid:
saveChanges
hasOperationsForMailbox:
_performCreateOperation:withContext:
_performDeleteOperation:withContext:
_performStoreOperation:withContext:
_performAppendOperation:withContext:
_performCopyOperation:withContext:
performDeferredOperationsWithConnection:
deferredOperations
_handle
_ops
_lastUid
_lastSave
_lastUidValidity
_opsPending
_messageIDsFromFetchResultData:
_getReferencesForMessageSet:
_searchUidsForMessageIDs:excludeDeleted:
_uidsForMessageIDs:excludeDeleted:
_getFirstLevelMessageIDsForReference:
uidsReferencedBy:
_drainQueue:
sharedInvocationQueue
flushAllInvocationQueues
initWithMaxThreadCount:
setMaxThreadCount:
maxThreadCount
invocationCount
addInvocation:
removeAllItems
didCancel:
threadCount
threadPriorityTrigger
setThreadPriorityTrigger:
threadRecycleTimeout
setThreadRecycleTimeout:
_lock
_items
_numThreads
_maxThreads
_threadPriorityTrigger
_threadRecycleTimeout
TQ,N,V_threadPriorityTrigger
Td,N,V_threadRecycleTimeout
TQ,R,N,V_numThreads
initWithMailbox:readOnly:
setLibrary:
canCompact
growFetchWindow
_fetchBodyDataForMessage:andHeaderDataIfReadilyAvailable:downloadIfNecessary:partial:
_fetchHeaderDataForMessage:downloadIfNecessary:
_handleFlagsChangedForMessages:flags:oldFlagsByMessage:
copyRemoteIDForTemporaryUid:
allowsAppend
setAllowsAppend:
bodyFetchRequiresNetworkActivity
canFetchMessageIDs
canFetchSearchResults
fetchMessagesWithMessageIDs:andSetFlags:
fetchNumMessages:preservingUID:options:
updateServerUnreadCountClosingConnection:
messageIdRollCall:
storeSearchResultMatchingCriterion:limit:offset:error:
doCompact
deleteMessagesOlderThanNumberOfDays:compact:
_dataForMessage:readHeadersOnly:
_fetchDataForMimePart:range:isComplete:consumer:
_fetchFullBodyDataForMessage:andHeaderDataIfReadilyAvailable:downloadIfNecessary:didDownload:
messageForRemoteID:
messageForRemoteID:inMailbox:
messagesWithRemoteIDs:
serverMessagePersistence
uidNext
setUidNext:
uidValidity
setUidValidity:
newHighestModSequence
setNewHighestModSequence:
hasValidCacheFileForMessage:
reselectMailbox
_serverMessagePersistenceFuture
T@"<MFIMAPMailboxTaskManager>",R,N,V_taskManager
T@"EDServerMessagePersistence",R,N
T@"IMAPAccount",R,D,N
messageStore
libraryID
setPreferredEncoding:
summary
setSummary:
loadCachedHeaderValuesFromHeaders:
references
messageWithLibraryID:
bestAlternativePart:
persistentID
subject
from
senders
dateReceived
dateSent
listUnsubscribe
remoteID
conversationID
isServerSearchResult
flags
isPartOfExistingThread
mimeBody
headersDictionary
messageIDHeader
messageIDHeaderHash
labels
headers
documentID
numberOfAttachments
listIDHash
T@"ECSubject",R,C,N
T@"NSDate",R,N
T@"<ECMailbox>",R,N
Tq,R,N
T@"ECMessageFlags",R,N
partOfExistingThread
TB,R,N,GisPartOfExistingThread
T@"<ECMimeBody>",R,N
T@"NSDictionary",R,C,N
T@"ECAngleBracketIDHash",R,N
T@"NSSet",R
T@"<ECMailAccount>",R,N
T@"<ECMessageHeaders>",R,N
T@"NSUUID",R,C,N
globalMessageID
fileSize
displayDate
date
readLater
followUp
sendLaterDate
brandIndicatorLocation
brandIndicator
dataDetectionAttributes
bccIfAvailable
T@"<EDIndexableAccount>",R,N
T@"<EDIndexableMailbox>",R,N
T@"NSDate",R
T@"EMReadLater",R
T@"EMFollowUp",R,N
T@"NSURL",R,N
T@"NSData",R,N
T@"NSArray",R,C
setBrandIndicatorLocation:andData:
persistedMessageID
conversationFlags
senderBucket
setDisplayDate:
setReadLater:
setSendLaterDate:
accountForSender
setFollowUp:
unsubscribeType
basePath
T@"NSDate",&
T@"EMReadLater",&
T@"<EDAccount>",R,N
T@"EMFollowUp",&,N
setUid:
initWithLibraryID:
library
messageID
mailboxID
setMailboxID:
originalMailboxID
setOriginalMailboxID:
originalMailboxURL
messageSize
setMessageSize:
_updateUID
setRemoteID:
uniqueRemoteId
setUniqueRemoteId:
isPartial
setIsPartial:
isMessageContentsLocallyAvailable
hasTemporaryUid
setHasTemporaryUid:
mailboxName
compareByUidWithMessage:
setMessageFlagsWithoutCommitting:
setMessageFlags:
setFlags:
commit
setMutableInfoFromMessage:
path
dataPathForMimePart:
markAsViewed
markAsNotViewed
markAsFlagged
markAsNotFlagged
markAsReplied
markAsForwarded
preferredAccountToUseForReplying
setConversationFlags:
setSenderBucket:
setRemoteID:flags:size:mailboxID:originalMailboxID:
setMessageData:isPartial:
dataConsumerForMimePart:
isLibraryMessage
storageLocationForAttachment:
_forceLoadOfMessageSummaryFromProtectedStore
setUnsubscribeType:
setReferences:
setReadLaterDate:
setDataDetectionAttributes
remoteContentLinks
setRemoteContentLinks:
setBrandIndicatorLocation:
_libraryID
_remoteID
_uid
_uniqueRemoteId
_size
_mailboxID
_originalMailboxID
_messageID
_conversationFlags
_senderBucket
_unsubscribeType
_references
_remoteContentLinks
_dataDetectionAttributes
_displayDate
_readLater
_sendLaterDate
_followUp
_brandIndicatorLocation
_brandIndicator
T@"MFMailboxUid",R,D,N
T@"MailAccount",R,D,N
T@"MFMessageHeaders",R,D,N
T@"NSArray",C,N,V_references
T@"MFLibraryStore",&,D,N
T@"NSArray",C,V_remoteContentLinks
Tq,N
T@"NSURL",&,N,V_brandIndicatorLocation
T@"NSDate",&,V_displayDate
T@"EMReadLater",&,V_readLater
T@"NSDate",&,V_sendLaterDate
T@"EMFollowUp",&,N,V_followUp
T@"NSData",R,N,V_brandIndicator
T@"NSDictionary",R,C,N,V_dataDetectionAttributes
T@"NSUUID",R,C,D,N
hasNonFullTextSearchableCriterion
isFullTextSearchableCriterion
spotlightQueryExpression
_attributesForHeaderCriterion
_comparisonOperationMatchingValue:qualifier:
_queryWithAttributes:matchingValue:
_queryWithAttributes:matchingValue:qualifier:
criteriaForSpotlightCriteria:
_spotlightQuerySearchString:
fullTextSearchableCriterion
TB,R,N,GisFullTextSearchableCriterion
_flushAllMessageData
_setOrGetBody:forMessage:updateFlags:
_queueMessagesAdded:
_queueMessageFlagsChanged:
_queueMessagesWillBeCompacted:
_queueMessagesWereCompacted:
setMessageStore:
_cachedHeadersForMessage:valueIfNotPresent:
_cachedHeaderDataForMessage:valueIfNotPresent:
_cachedBodyDataContainerForMessage:valueIfNotPresent:
handleMessageFlagsChanged:
handleMessagesWillBeCompacted:
handleMessagesCompacted:
hasCompleteDataForMimePart:
classForMimePart
defaultLoadOptions
storeWithMailbox:
headersClass
sharedInstance
sharedInstanceIfExists
shouldDownloadBodyDataForMessage:
storageLocationForAttachment:withMessage:
storeData:forMimePart:isComplete:
mailboxUid
T@"MailAccount",R,N
T@"MFMailboxUid",R,N
initWithCriterion:mailbox:readOnly:
initWithMailbox:
addCountsForMessages:shouldUpdateUnreadCount:
_addInvocationToQueue:
openSynchronously
isOpened
totalCount
allNonDeletedCountIncludingServerSearch:andThreadSearch:
serverMessageCount
copyOfMessagesInRange:options:generation:
copyOfMessagesInRange:options:
copyOfAllMessagesWithOptions:
copyOfAllMessages
copyMessagesMatchingCriterion:options:
copyMessagesWithRemoteIDs:options:inMailbox:
serverSearchResults
dateOfOldestNonIndexedNonSearchResultMessage
willFetchMessages
_fetchWindowMultiple
_fetchWindowMinimum
_calculateFetchWindowWithAdditionalMultiple:
invalidateFetchWindow
hasMoreFetchableMessages
shouldGrowFetchWindow
fetchWindow
fetchWindowCap
fetchMobileSynchronously:
fetchMobileSynchronously:preservingUID:options:
storeSearchResultMatchingSearchText:criterion:limit:offset:error:
messageForMessageID:options:
loadMeetingExternalIDForMessage:
loadMeetingDataForMessage:
loadMeetingMetadataForMessage:
filterMessagesByMembership:
handleMessagesAdded:earliestReceivedDate:
messagesWereAdded:
messagesWereAdded:earliestReceivedDate:
messagesWillBeCompacted:
messagesWereCompacted:
messageFlagsDidChange:flags:
allMessageFlagsDidChange:
_memberMessagesWithCompactionNotification:
headerDataForMessage:downloadIfNecessary:
dataForMimePart:inRange:isComplete:downloadIfNecessary:didDownload:
dataForMimePart:inRange:isComplete:withConsumer:downloadIfNecessary:didDownload:
_copyDataFromMimePart:threshold:downloadIfNecessary:
fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:downloadIfNecessary:usePartDatas:didDownload:
fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:downloadIfNecessary:didDownload:
bodyDataForMessage:isComplete:isPartial:downloadIfNecessary:
shouldDeleteInPlace
shouldArchive
archiveDestination
deleteMessages:moveToTrash:
messagesWereDeleted:
setFlag:state:forMessages:
setFlagsFromDictionary:forMessages:
setFlagsLocallyFromDictionary:forMessages:
setNumberOfAttachments:isSigned:isEncrypted:forMessage:
compactMessages:
dataPathForMessage:part:
updateMetadata
_setNeedsAutosave
criterion
serverUnreadOnlyOnServerCount
unreadCount
newObjectCache
_cachedBodyForMessage:valueIfNotPresent:
purgeMessages:
purgeMessagesBeyondLimit:
hasMessageForAccount:
earliestReceivedDate
setEarliestReceivedDate:
_state
_deletedMessagesSize
_deletedMessageCount
_generationNumber
_earliestReceivedDate
_criterion
_fetchWindow
_lastFetchCount
T@"NSDate",&,N,V_earliestReceivedDate
T@"MFMailMessageLibrary",&,N
_setChildren:forMailboxUid:
mailboxUidForRelativePath:create:withOption:
localAccount
legacyPathNameForAccountWithHostname:username:
T@"LocalAccount",R,N
legacySQLExpressionToMatchAllMailboxes
isLocalAccount
_shouldConfigureMailboxCache
supportsPurge
mailboxUidForFileSystemPath:
transientDraftsFolderShouldCreate:
transientDraftsFolder
sendLaterFolderShouldCreate:
sendLaterFolder
fullPath
storeForMailboxUid:
deliveryAccountWillBeRemoved:
mailboxListingNotificationsAreEnabled
disableMailboxListingNotifications
enableMailboxListingNotifications:
_addAccountToSortedPaths:
_setupSortedPathsForAccounts:
existingDAMailAccountForDAAccount:
_loadAllAccountsWithError:
_loadDataAccessAccountsWithError:
reloadAccounts
mailAccounts
mailAccountsWithError:
lastMailAccountsReloadDate
setMailAccounts:
setMailAccounts:saveIfChanged:
_setMailAccounts:saveIfChanged:alreadyLocked:
_removeAccountFromSortedPaths:
activeAccounts
activeNonLocalAccounts
activeAccountsWithError:
purgeableAccounts
notifyOfAccountsAdded:accountsRemoved:changedAccounts:
existingAccountWithType:hostname:username:
resetMailboxTimers
_accountContainingEmailAddress:matchingAddress:fullUserName:includingInactive:
accountContainingEmailAddress:includingInactive:
accountContainingEmailAddress:
accountForHeaders:message:includingInactive:
accountThatMessageIsFrom:includingInactive:
accountThatMessageIsFrom:
addressesThatReceivedMessage:
outboxMailboxUid
outboxMessageStore:
allPurgeableMailboxUids
allMailboxUidsForAccounts:
allActivePrimaryMailboxUids
accountWithPath:
newAccountWithPath:
test_tearDown
defaultAccountDirectory
defaultMailAccountForDelivery
defaultMailAccountForDeliveryExcludingRestricted
_defaultMailAccountForDeliveryIncludingRestricted:
defaultDeliveryAccount
saveStateForAllAccounts
mailboxUidForFileSystemPath:create:
accountWithURL:
infoForURL:
URLForInfo:
accountWithURLString:
mailboxUidFromActiveAccountsForURL:
updateEmailAliasesForActiveAccounts
standardAccountClass:valueForKey:
getConfigurationFromServerForEmail:
_accountWithPath:
_setOutboxMailboxUid:
canMoveMessagesFromAccount:toAccount:
canMoveMessagesFromAccount:toAccount:profileConnection:
_removeLookAsideValuesNotInAccountList:
mailboxForType:
containsMailboxWithURL:
emailAddresses
smtpIdentifier
rootMailbox
T@"ECAccount",R,N
T@"NSObject<OS_os_log>",R,N
T^{os_unfair_recursive_lock_s={os_unfair_lock_s=I}I},R
cacheHasBeenRead
setCacheHasBeenRead:
isUsernameEquivalentTo:
_invalidateCachedMailboxen
initWithLibrary:path:
defaultPath
setPath:
fullUserName
setFullUserName:
isPrimaryDeliveryAccountDisabled
setPrimaryDeliveryAccountDisabled:
deliveryAccountAlternates
setDeliveryAccountAlternates:
canUseDeliveryAccount:
setCanUseCarrierDeliveryFallback:
canUseCarrierDeliveryFallback
defaultEmailAddress
setEmailAddresses:
emailAddressesDictionary
receiveEmailAliasAddresses
setReceiveEmailAliasAddresses:
lastEmailAliasesSyncDate
setLastEmailAliasesSyncDate:
lastEmailAliasesSyncEntityTag
setLastEmailAliasesSyncEntityTag:
emailAddressesAndAliases
copyReceivingEmailAddresses
_invalidateAndDeleteAccountData:
_asynchronouslyInvalidateAndDeleteAccountData:
invalidateAndDelete
_synchronizeMailboxListWithFileSystem
forceFetchMailboxList
rootMailboxUid
deleteDeliveryAccountIfNeeded
deliveryAccountInUseByOtherAccounts:
mailboxUidOfType:createIfNeeded:
specialMailboxNameForType:
allMailboxesFilteringNotes:
mailboxesForSuggestionsLostMessageSearchPriorToTime:
transferDisabledMailboxUids
setMailboxUid:forMailboxType:
_setEmptyFrequency:forKey:
setEmptyFrequency:forMailboxType:
_resetSpecialMailboxes
canCreateNewMailboxes
canMailboxBeRenamed:
moveMailbox:intoParent:
renameMailbox:newName:
deleteMailbox:reflectToServer:
_resetAllMailboxURLs:
resetMailboxURLs
isHostnameEquivalentTo:
isAccountClassEquivalentTo:
setConnectionError:
connectionError
storeClassForMailbox:
mailboxUidForURL:
ownsMailboxUidWithURL:
emptyTrash
systemDidWake
systemWillSleep
setupLibrary
supportsSyncingReadState
loggingIdentifier
newActionsAdded
addNewAction:
willPerformActionForChokePoint:coalescePoint:result:
didFinishActionForChokePoint:coalescePoint:withResult:
_setPath:
isActiveWithPersistentAccount:
_didBecomeActive:
_emptyFrequencyForKey:defaultValue:
_loadMailboxListingIntoCache:attributes:children:parent:
mailboxCachePath
setMailboxCachePath:
resetMailboxCache
_loadEntriesFromFileSystemPath:parent:
_writeMailboxCacheWithPrejudice:
_writeMailboxCacheWithPrejudice:completionHandler:
_incrementCacheDirtyCount
powerAssertionIdentifierWithPrefix:
_cachedSpecialMailboxOfType:
_assignSpecialMailboxToAppropriateIvar:forType:
_setSpecialMailboxName:forType:
_canEmptyMessagesFromMailboxUid:
_shouldLogDeleteActivity
_URLForInfo:
_cleanInboxDuplication:
newMailboxWithParent:name:
_localMailboxNameForType:usingDisplayName:
allLocalMailboxUids
valueInAccountLookAsidePropertiesForKey:
setValueInAccountLookAsideProperties:forKey:
_setValueInAccountLookAsideProperties:forKey:subKey:
customSignature
setCustomSignature:
preventArchiveForMailbox:
canArchiveForMailbox:
supportsHandoffType:
_registerStateCaptureHandler
debugAccountState
mailboxCacheWriteScheduler
setMailboxCacheWriteScheduler:
replayHandler
setReplayHandler:
_path
_nonPersistentPath
_rootMailboxUid
_flagsLock
_inboxMailboxUid
_draftsMailboxUid
_sentMessagesMailboxUid
_trashMailboxUid
_archiveMailboxUid
_junkMailboxUid
_cachedMailboxenLock
_deletionLock
_lastConnectionError
_currentChokedActions
_mailboxCachePath
_messageStoresCache
_supportsFastRemoteBodySearch
_mailboxCacheWriteScheduler
_replayHandler
T@"<EFScheduler>",&,N,V_mailboxCacheWriteScheduler
T@"MFLocalActionReplayHandler",&,N,V_replayHandler
T@"<MFTaskManager>",R,N
T@"NSDate",&,N
TB,R,N,V_supportsFastRemoteBodySearch
mf_indexOfMailboxDictionaryWithName:
URLStringNonNil
fullPathNonNil
defaultScheduler
fileURLForMailboxURL:
specialNameForType:
isStandardizedMailboxUidType:
isOutgoingMailboxType:
isDraftsMailboxType:
isSentMailboxType:
typeIsValidTransferDestination:
initWithAccount:
_initWithName:attributes:forAccount:
initWithName:attributes:forAccount:extraAttributes:type:
_dictionaryRepresentation
uniqueId
decodedName
isRootMailbox
displayNameUsingSpecialNames
setName:
accountDisplayName
unreadCountMatchingCriterion:
updateMostRecentStatusCount:
shouldUseNonDeletedForUnreadCount
children
_mutableChildren
hasChildren
childEnumerator
childEnumeratorIncludingHiddenChildren:
depthFirstEnumerator
numberOfChildren
numberOfDescendants
childAtIndex:
indexOfChild:
childWithName:
childWithExtraAttribute:
descendantWithExtraAttribute:
mutableCopyOfChildren
setChildren:
sortChildren
parent
removeChild:
setParent:
setRepresentedAccount:
representedAccount
topMailbox
isContainer
isStore
isStandardizedMailboxUid
isSpecialMailboxUid
isSendLaterMailbox
isSentMailboxUid
isOutgoingMailboxUid
isNotesMailboxUid
accountRelativePath
realFullPath
pathRelativeToMailbox:
pathRelativeToMailboxForDisplay:
oldURLString
objectID
compareWithMailboxUid:
indexToInsertChildMailboxUid:
isDescendantOfMailbox:
mailboxType
setMailboxType:
isVisible
_loadUserInfo
userInfoObjectForKey:
setUserInfoObject:forKey:
userInfoBoolForKey:
setUserInfoBool:forKey:
saveUserInfo
userInfoDictionary
setUserInfoWithDictionary:
userInfoForSerialization
ancestralAccount
store
isShared
alwaysWriteFullMessageFile
addToPostOrderTraversal:
suggestionsLostMessageSearchResultCount
suggestionsLostMessageSearchTimestamp
updateSuggestionsLostMessageSearchResultCount:
redactedName:
extraAttributes
setExtraAttributes:
attributes
setAttributes:
_pathComponent
_parent
_children
_representedAccount
allCriteriaMustBeSatisfied
_realFullPath
_extraAttributes
_pendingLevel
_type
_isSendLater
_userInfo
_attributes
T@"EMMailboxObjectID",R,N
T@"NSArray",&,N,V_extraAttributes
TQ,N,V_attributes
T@"NSEnumerator",R,N
T@"MFMailboxUid",&,N
nextObject
_mailboxes
_index
_initWithMailbox:includeHiddenChildren:
_includeHidden
initWithFollowUpWarning:error:
followUpWarning
_followUpWarning
T@"SGMailIntelligenceFollowUpWarning",R,N,V_followUpWarning
T@"NSError",R,N,V_error
toLightJson
newWithMessage:
newWithHeaders:mixedContent:textPartsAreHTML:
newWithHeaders:HTML:plainTextAlternative:other:
deliverMessage:
initWithMessage:
initWithHeaders:mixedContent:textPartsAreHTML:
initWithHeaders:HTML:plainTextAlternative:other:
message
archiveAccount
setArchiveAccount:
deliveryStatus
deliveryResult
originalHeaders
headersForDelivery
deliverAsynchronously
deliverMessageData:toRecipients:
setCellDataOnly:
archive
updateOriginalMessageFromHeaders:
_checkAndApplyFollowUpToDeliveredMessage:
_htmlBodyForMessage:
compositionSpecification
setCompositionSpecification:
isUserRequested
setIsUserRequested:
originalMessageObjectID
setOriginalMessageObjectID:
originalMessage
setOriginalMessage:
action
setAction:
shouldSign
setShouldSign:
shouldEncrypt
setShouldEncrypt:
_message
_archiveAccount
_result
_headers
_compositionSpecification
_mixedContent
_textPartsAreHTML
_htmlString
_plainTextAlternative
_otherStringsAndAttachments
_threaded
_useCellDataOnly
_followUpFuture
_isUserRequested
_shouldSign
_shouldEncrypt
_originalMessageObjectID
_originalMessage
_action
T@"NSDictionary",&,N,V_compositionSpecification
TQ,N,V_conversationFlags
TB,N,V_isUserRequested
T@"EMMessageObjectID",&,N,V_originalMessageObjectID
T@"MFMailMessage",&,N,V_originalMessage
Tq,N,V_action
TB,N,V_shouldSign
TB,N,V_shouldEncrypt
T@,W,N
setSubject:to:cc:bcc:sender:dateReceived:dateSent:summary:withOptions:
forwardedMessagePrefixWithSpacer:
dataMessageStoreToUse
validatePriority:
displayablePriorityForPriority:
mailMessageStore
modSequenceNumber
setModSequenceNumber:
messageFlags
setPriorityFromHeaders:
priority
preferredEmailAddressToReplyWith
loadMeetingExternalID
loadMeetingData
loadMeetingMetadata
setSourceIsManaged:
remoteMailboxURL
globalMessageURL
shouldSetSummary
externalConversationID
bestAlternativePart
isSearchResultWithBogusRemoteId
flagged
read
answered
junk
conversationVIP
conversationMuted
conversationHash
deleted
shouldUseMailDrop
setShouldUseMailDrop:
setGlobalMessageID:
_messageFlags
_modSequenceNumber
_globalMessageURL
_useInternalSourceIsManaged
_sourceIsManaged
_shouldUseMailDrop
_globalMessageID
Tq,N,V_globalMessageID
T@"EMMessageObjectID",R,N
TB,N,V_shouldUseMailDrop
T@"MFMessageStore<MFMailMessageStore>",&,D,N
T@"NSString",&,D,N
T@"NSURL",R,N,VbrandIndicatorLocation
T@"NSData",R,N,VbrandIndicator
T@"NSDictionary",R,C,N,VdataDetectionAttributes
unreadCountCriterion
prefix
subjectWithoutPrefix
address
contentType
preferredEncoding
externalID
messageIDHash
startDate
endDate
handleMessage:
signpostLog
canUsePersistence
defaultInstance
test_setDefaultInstance:
removeLibraryOnNextLaunch
_renameLibraryAtPath:
persistenceWillBeginUpdates
persistenceDidFinishUpdates
persistenceWillAddMessage:fromExistingMessage:
persistenceIsAddingMessages:journaled:generationWindow:
persistenceDidAddMessages:generationWindow:
persistenceDidReconcileJournaledMessages:generationWindow:
persistenceDidUpdateData:message:
persistenceDidUpdateProperties:message:generationWindow:
persistenceWillDeleteMessages:
persistenceIsDeletingMessages:generationWindow:
persistenceDidDeleteMessages:generationWindow:
persistenceIsDeletingAllMessagesInMailboxWithURL:generationWindow:
persistenceDidDeleteAllMessagesInMailboxesWithURLs:generationWindow:
persistenceWillChangeFlags:messages:
persistenceIsChangingFlags:messages:generationWindow:
persistenceDidChangeFlags:messages:generationWindow:
persistenceWillChangeReadLaterDate:messages:
persistenceDidChangeReadLaterDate:messages:changeIsRemote:generationWindow:
persistenceDidUpdateSendLaterDate:messages:generationWindow:
persistenceDidUpdateFollowUpForMessages:generationWindow:
persistenceWillUpdateDisplayDateForMessages:
persistenceIsUpdatingDisplayDateForMessage:fromDate:generation:
persistenceDidUpdateDisplayDateForMessages:changeIsRemote:generation:
persistenceDidChangeVIPStatus:messages:
persistenceDidChangeConversationNotificationLevel:conversationID:generationWindow:
persistenceDidAddLabels:removeLabels:messages:generationWindow:
persistenceWillChangeConversationID:messages:
persistenceIsChangingConversationID:messages:generationWindow:
persistenceDidChangeGlobalMessageID:orConversationID:message:generationWindow:
persistenceWillTransferMessages:transferType:destinationMailboxURL:userInitiated:
persistenceDidAddDataDetectionResults:generationWindow:
signpostID
contentProtectionStateChanged:previousState:
T@"MFMailMessageLibrary",R
initWithPath:inMemoryIdentifier:userAgent:
invalidateAndWait
_setSuspendedUnderLock:
start
messageBasePathForAccount:
bodyMigrationFinished
attachmentMigrationFinished
pendingIndexItemsCount
messageChangeManager
setFlags:forMessage:
postOldFlags:newFlags:forMessage:
postFlagsChangedForMessages:flags:oldFlagsByMessage:
updateFlagsForMessagesInPlace:success:
updateFlagsForMessages:changes:transformer:
setFlagsFromDictionary:forMessagesInMailboxURLString:
setMessage:isPartial:
_fileType:orHigherExistsAtDirectory:
_removeEmlxFilesOfTypeLessThanType:inDirectory:
_writeEmlxFileOfType:forAccount:toDirectory:withData:protectionClass:
_writeEmlxFile:withData:protectionClass:
notifyNewDataAvailableForMessages:
referencesFromHeaders:
_addThreadingInfoWithContext:usingDatabaseConnection:
_insertThreadReferences:toMessageWithLibraryID:usingDatabaseConnection:
addReferenceForContext:usingDatabaseConnection:generationWindow:mergeHandler:
hookRegistry
duplicateMessages:newRemoteIDs:forMailbox:setFlags:createNewCacheFiles:
duplicateMessages:newRemoteIDs:forMailbox:setFlags:clearFlags:messageFlagsForMessages:createNewCacheFiles:
addMessages:withMailbox:newMessagesByOldMessage:remoteIDs:setFlags:addPOPUIDs:dataSectionsByMessage:generationWindow:
willStartPersistenceDidAddMessages:
didFinishPersistenceDidAddMessages:
_addRecipients:toMessageWithDatabaseID:cache:connection:
_findOrCreateDatabaseIDForAddress:comment:cache:connection:
_findOrCreateDatabaseIDForGlobalData:cache:connection:
_findOrCreateDatabaseIDForSubject:cache:connection:
_findOrCreateDatabaseIDForSummary:cache:connection:
_findOrCreateDatabaseIDForValue:inTable:column:cache:connection:created:
_removeDataFilesForGlobalID:
updateAdditionalThreadingInfoForSentMessageWithHeaders:externalConversationID:
updateThreadingInfoForMessage:fromHeaders:
_selectExpressionForMessageWithAvailableTables:
_selectClauseForOptions:protectedDataAvailable:
_iterateStatement:connection:withProgressMonitor:andRowHandler:context:
iterateStatement:connection:withProgressMonitor:andRowHandler:context:
_sendMessagesForStatement:connection:to:options:timestamp:
messagesForMailbox:limit:
newestUIDsMissingBodyDataForMailbox:excluding:inLatest:limit:
_enumerateMessageRemoteIDAndGlobalForMailbox:excluding:inLatest:block:
messagesForMailbox:olderThanNumberOfDays:
_messagesForMailbox:olderThanNumberOfDays:limit:
serverSearchResultMessagesForMailbox:
_firstDateForQuery:inMailbox:
dateOfOldestNonSearchResultMessageInMailbox:
dateOfOldestNonIndexedNonSearchResultMessageInMailbox:
countOfRelatedMessagesMatchingCriterion:forConversationsContainingMessagesMatchingCriterion:forMailboxCriterion:
countMessagesMatchingCriterion:
groupedMessagesCountByMailboxMatchingQuery:variable:
groupedMessagesCountForCriterion:groupBy:
messagesWithSummariesForMailbox:range:
orderedBatchOfMessagesEndingAtRowId:limit:success:
_int64ForQuery:connection:textArgument:
_integerForQuery:withTextArgument:
unreadCountForMailbox:matchingCriterion:
unreadCountForAggregatedMailboxes:matchingCriterion:
countDistinctMessagesMatchingCriterion:
unreadCountForAggregatedMailboxes:
_computeUnreadCountForMailboxes:
_flaggedCountForAggregatedMailboxes:
_attachmentCountForAggregatedMailboxes:
_includesMeCountForAggregatedMailboxes:
_readLaterCountForAggregatedMailboxes:
_sendLaterCountForAggregatedMailboxes:
_queryForMailboxesIDsFromMailboxes:
unreadCountForMailbox:
flaggedCountForMailbox:
attachmentCountForMailbox:
includesMeCountForMailbox:
attachmentCountForMailboxes:
allNonDeleteCountForMailbox:includeServerSearchResults:includeThreadSearchResults:
nonDeletedCountForMailbox:includeServerSearchResults:includeThreadSearchResults:
nonDeletedCountForMailbox:
nonDeletedCountForAggregatedMailboxes:includeServerSearchResults:includeThreadSearchResults:
nonDeletedCountForAggregatedMailboxes:
totalCountForMailbox:
serverUnreadOnlyOnServerCountForMailbox:
indexedCountForMailbox:limit:
setServerUnreadOnlyOnServerCount:forMailbox:
setLastSyncAndMostRecentStatusCount:forMailbox:
increaseProtectionOnFileForMessage:
mostRecentStatusCountForMailbox:
setMostRecentStatusCount:forMailbox:
messageWithRemoteID:inRemoteMailbox:
copyMessagesWithRemoteIDs:options:inRemoteMailbox:
sequenceIdentifierForMailbox:
setSequenceIdentifier:forMailbox:
sequenceIdentifierForMessagesWithRemoteIDs:inMailbox:
setSequenceIdentifier:forMessageWithLibraryID:
setSequenceIdentifier:forMessagesWithRemoteIDs:inMailbox:
messageWithMessageID:options:inMailbox:
messagesWithMessageIDHeader:
_keyForOptions:protectedDataAvailable:mailboxAvailable:mailboxCached:
messageWithLibraryID:options:inMailbox:
messageWithLibraryID:options:inMailbox:temporarilyUnavailable:
conversationIDsOfMessagesInSameThreadAsMessageWithLibraryID:messageIDHash:
_copyReferenceHashesWithoutMessagesForMessageWithConversation:
_getReferencesForHashesWithOwners:
loadMoreMessagesForThreadContainingMessage:hasNoMoreMessages:
stringForQuery:monitor:
stringForQuery:
reloadMailboxCacheIfNecessaryWithConnection:
reloadMailboxCacheWithConnection:
urlForMailboxID:
mailboxURLsForIDs:
mailboxIDForURLString:createIfNecessary:
mailboxIDForURLString:
mailboxURLForMessage:
mailboxUidForMessage:
remoteStoreForMessage:
accountForMessage:
_canSelectMessagesWithOptions:connection:
clearServerSearchFlagsForMessagesWithLibraryIDs:
scheduleRecurringActivity
addPostMigrationStep:
flagsForConversationId:
setFlags:forConversationId:
setConversationInfo:syncKey:flags:
_conversationIdForMessageIds:
storedIntegerPropertyWithName:
setStoredIntegerPropertyWithName:value:
_notifyDidCompact:messages:mailboxes:
compactMessages:permanently:
_deleteMessages:connection:
_addAddressesFromRecipientsForMessages:toSet:connection:
_deleteMessages:andCleanUpAddresses:subjects:summaries:brandIndicators:connection:
_removeGlobalDataForMessagesIfNecessary:connection:
_existingValuesForColumn:table:fromValues:connection:
_maxRowIDInSet:
_deleteRows:fromTable:connection:
compactMailbox:
renameMailboxes:to:
deleteMailboxes:account:
removeAllMessagesFromMailbox:removeMailbox:andNotify:
dataPathForMessage:type:
dataPathForMessage:
deleteAttachmentsForMessage:inMailboxFileURL:
fileAttributesForMessage:
fileURLForAttachmentPersistentID:messageID:result:
dataConsumerForMessage:part:
dataConsumerForMessage:part:incomplete:
dataConsumerForMessage:isPartial:
dataConsumerForMessage:
setData:forMessage:isPartial:
setData:forMessageToAppend:
_setMessageData:libraryID:part:partial:complete:connection:
setSummary:forMessage:
_setSummary:forMessageWithRowID:connection:
loadData:forMessage:usingBlock:
bodyDataAtPath:headerData:
headerDataAtPath:
bodyDataForMessage:andHeaderDataIfReadilyAvailable:
bodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:
bodyDataForMessage:
headerDataForMessage:
fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:
dataForMimePart:isComplete:
areMessageContentsLocallyAvailable:fullContentsAvailble:
_equalToMailboxIDsFromCriterion:
queryForCriterion:connection:options:baseTable:isSubquery:range:
queryForCriterion:connection:options:baseTable:isSubquery:
queryForCriterion:connection:options:baseTable:
queryForCriterion:connection:options:range:
queryForCriterion:connection:options:
sendMessagesMatchingCriterion:to:options:baseTable:range:success:
sendMessagesMatchingCriterion:to:options:baseTable:range:
sendMessagesMatchingCriterion:to:options:baseTable:
sendMessagesMatchingCriterion:to:options:range:
sendMessagesMatchingCriterion:to:options:
sqlQueryWithConversionLogForQuery:
iterateMessagesMatchingQuery:byConvertingToCriteria:queryTransformer:withResultHandler:options:withMonitor:
_iterateMessagesWithResultHandler:options:monitor:sqlQueryGenerator:
_sqlQueryForQuery:byConvertingToCriteria:queryTransformer:connection:options:
queriesSeparatedByMailboxForQuery:
_predicatesSeparatedByMailboxForPredicate:containsMailboxPredicate:
_predicatesSeparatedByMailboxForAndPredicate:containsMailboxPredicate:
_predicatesSeparatedByMailboxForOrPredicate:containsMailboxPredicate:
queryParser
iterateMessagesMatchingCriterion:withResultHandler:options:withMonitor:
iterateMessagesMatchingCriterion:options:handler:
messagesMatchingCriterion:options:range:
messagesMatchingCriterion:options:range:success:
messagesMatchingCriterion:options:success:
messagesMatchingCriterion:options:
filterContiguousMessages:forCriterion:options:
invalidateAccount:
deleteAccount:
_mailboxesClauseForAccounts:
rebuildActiveAccountsClausesAndExpressionsWithAccounts:
rebuildActiveAccountMailboxesExpression:
rebuildActiveAccountsClauseWithActiveAccounts:inactiveAccounts:
enabledAccountMailboxesExpression
_activeAccountsClause
_nonLocalAccountsClause
deletePOPUID:inMailbox:
UIDsToDeleteInMailbox:
allUIDsInMailbox:
hiddenPOPUIDsInMailbox:
_setProtectedDataAvailabilityState:
protectedDataAvailability
_indexSetOfMessagesDeleted
cleanupProtectedTables
_shouldLogDatabaseStats
_logStatistics
_schedulePeriodicStatisticsLogging
isProtectedDataAvailable:
_scheduleJournalReconciliation
_cancelPendingJournalReconciliation
_canAccessProtectedData
journalWasReconciled
_addMessageToThreadAtUnlock:
migrate
performIncrementalVacuumForSchema:
_scheduleIncrementalVacuum
closeDatabaseConnections
journalReconciliationFailed
handleFailedMigration
renameOrRemoveDatabaseIfNeeded
_stringsForIndexSet:
indexableMessagesWhere:sortedBy:limit:options:
removeSearchableItemsForAccount:
removeSearchableItemsForMailbox:
removeSearchableItemsForMessages:
removeSearchableItemsForAccount:mailboxID:
_removeSearchableItemsWithLibraryIDs:
reindexSearchableItemsWithIdentifiers:acknowledgementHandler:
reindexAllSearchableItemsWithAcknowledgementHandler:
removeMessagesFromCacheWithLibraryIDs:
_libraryMessageCache
_libraryMessageWithLibraryID:wasCached:
_messageForRow:options:timestamp:connection:isProtectedDataAvailable:recipientsCache:
_recipientsForMessageWithDatabaseID:connection:recipientsCache:
_recipientsForMessagesWithDatabaseIDs:includeTo:includeCC:includeBCC:
stringFromAllMailboxUnreadCount
messageDataExistsInDatabaseForMessageLibraryID:part:length:
remoteContentParser
_shouldStoreRemoteContentForMessage:
_storeRemoteContentLinksCachedOnMessage:linksToVerify:
storeRemoteContentLinksFromFullData:forMessage:
_processMessageData:forMessage:linksToVerify:parsingOptions:
storeRemoteContentLinksFromHeaderData:bodyData:forMessage:
_findHTMLPartsFromHeaderData:bodyData:forMessage:linksToVerify:parsingOptions:
storeRemoteContentLinksFromData:forMessage:mimePart:
_processRemoteContentFromData:forMimePart:linksToVerify:forMessage:parsingOptions:
dataProvider
_shouldPerformDataDetectionForMessage:
detectDataFromPlainTextMessage:globalMessageID:mimePart:
_getHTMLFromPlainTextData:mimePart:
persistence
database
allowedToAccessProtectedData
searchableIndexScheduler
setSearchableIndexScheduler:
setQueryParser:
fileRemovalAfterCompactionScheduler
setFileRemovalAfterCompactionScheduler:
currentAddedMessagesMap
setCurrentAddedMessagesMap:
bodyMigrator
setBodyMigrator:
stateCaptureCancelable
messagesParsedCache
attachmentMigrator
setAttachmentMigrator:
_attachmentDataProvider
_mailboxCache
_statsQueue
_activeAccountClause
_nonLocalAccountClause
_enabledAccountMailboxesExpression
_protectedDataAvailability
_keyBagQueue
_conversationCalculationQueue
_messagesToThreadAtUnlock
_compressionQueue
_searchableIndex
_searchableIndexLock
_suspendedUnderLock
_remoteContentParser
_remoteContentParserLock
_messagesParsedCache
_mailboxLock
_addedMessagesMapLock
_mailboxURLsToMailboxIDs
_optionsToQueries
_allowedToAccessProtectedData
_persistence
_database
_searchableIndexScheduler
_queryParser
_fileRemovalAfterCompactionScheduler
_currentAddedMessagesMap
_bodyMigrator
_stateCaptureCancelable
_attachmentMigrator
T@"EDSearchableIndexScheduler",&,N,V_searchableIndexScheduler
T@"EDMessageQueryParser",&,N,V_queryParser
T@"<EFScheduler>",&,N,V_fileRemovalAfterCompactionScheduler
T@"NSMutableDictionary",&,N,V_currentAddedMessagesMap
T@"MFMessageBodyMigrator",&,V_bodyMigrator
T@"<EFCancelable>",R,N,V_stateCaptureCancelable
T@"EDWebContentParser",R,N
T@"NSCache",R,N,V_messagesParsedCache
T@"EDPersistenceHookRegistry",R,N
T@"MFMessageAttachmentMigrator",&,V_attachmentMigrator
T@"EDPersistence",R,V_persistence
T@"MFPersistenceDatabase_iOS",R,V_database
T@"MFMessageChangeManager_iOS",R
TB,R,N,V_allowedToAccessProtectedData
newMessagesAvailable:
messages
copyMessages
transmogrifier
setTransmogrifier:
_messages
_monitor
_transmogrifier
T@?,C,N,V_transmogrifier
initWithBlock:
_block
_cancelled
appendData:
done
initWithLibrary:message:part:partial:incomplete:relaxDataProtection:compressionQueue:
pathForStorage
_consumer
_part
_partial
_incomplete
_relaxDataProtection
initWithAddress:displayName:
initWithAddress:
fullAddress
_fullAddress
_address
T@"NSString",R,C,N,V_address
T@"NSString",R,C,N,V_displayName
toRecipients
toRecipientStrings
addToRecipient:
addToRecipientWithAddress:displayName:
ccRecipients
ccRecipientStrings
addCCRecipient:
addCCRecipientWithAddress:displayName:
bccRecipients
bccRecipientStrings
addBCCRecipient:
addBCCRecipientWithAddress:displayName:
_bcc
objectPropertyWithClass:property:
setClass:
property
setProperty:
_class
_property
T#,N,V_class
T:,N,V_property
initWithLibraryMessage:messageIDHash:mailboxURL:
forwardingTargetForSelector:
libraryMessage
urlString
_messageIDHash
_libraryMessage
_urlString
T@"MFLibraryMessage",R,N,V_libraryMessage
T@"NSString",R,C,N,V_urlString
T@"NSString",R,C,D,N
T@"ECSubject",R,C,D,N
T@"NSArray",R,C,D,N
T@"NSDate",R,D,N
T@"<ECMailbox>",R,D,N
Tq,R,D,N
T@"ECMessageFlags",R,D,N
TB,R,D,N,GisPartOfExistingThread
T@"<ECMimeBody>",R,D,N
T@"NSDictionary",R,C,D,N
T@"NSSet",R,D
T@"<ECMailAccount>",R,D,N
T@"<ECMessageHeaders>",R,D,N
TQ,R,D,N
T@"ECAngleBracketIDHash",R,D,N
fileWrapperForDecodedObject:withFileData:
configureFileWrapper:
isRecognizedClassForContent:
contentToOffset:resultOffset:downloadIfNecessary:asHTML:isComplete:
attachmentClass
decodeTextRichtext
decodeTextEnriched
decodeTextHtml
htmlContentToOffset:resultOffset:downloadIfNecessary:
htmlContentToOffset:resultOffset:
htmlContent
decodeTextPlain
decodeTextCalendar
decodeMultipartAppledouble
storeData:inMessage:isComplete:
_shouldContinueDecodingProcess
decodeMessageDelivery_status
decodeMessageRfc822
decodeMessagePartial
decodeMessageExternal_body
shouldDownloadAttachmentOnDisplay
criteriaFromDefaultsArray:
criteriaFromDefaultsArray:removingRecognizedKeys:
defaultsArrayFromCriteria:
criterionFromDefaultsDictionary:
defaultsDictionaryFromCriterion:
criterionTypeForString:
stringForCriterionType:
expressionForDate:
criterionForMailbox:
criterionForMailboxURL:
criterionForAccount:
criterionExcludingMailboxes:
messageIsDeletedCriterion:
messageIsJournaledCriterion:
criterionForNotDeletedConversationID:
criterionForConversationID:
criterionForLibraryID:
criterionForDocumentID:
messageIsServerSearchResultCriterion:
senderIsVIPCriterion:
threadNotifyMessageCriterion
threadMuteMessageCriterion
flaggedMessageCriterion
criterionForFlagColor:
unreadMessageCriterion
readMessageCriterion
includesMeCriterion
toMeCriterion
ccMeCriterion
hasAttachmentsCriterion
todayMessageCriterion
yesterdayMessageCriterion
lastWeekMessageCriterion
readLaterMessageCriterion
followUpMessageCriterion
sendLaterMessageCriterion
messageCriterionForUnsubscribeTypeNotMatching:
_todayDateComponents
_criterionForDateReceivedBetweenDateComponents:endDateComponents:
_criterionForDateReceivedBetween:endDate:
criterionForDateReceivedOlderThanDate:
criterionForDateReceivedNewerThanDate:
notCriterionWithCriterion:
andCompoundCriterionWithCriteria:
orCompoundCriterionWithCriteria:
matchEverythingCriterion
matchNothingCriterion
initWithCriterion:expression:
initWithType:qualifier:expression:
initWithDictionary:
initWithDictionary:andRemoveRecognizedKeysIfMutable:
descriptionWithDepth:
criterionType
setCriterionType:
criterionIdentifier
setCriterionIdentifier:
_qualifierString
expression
setExpression:
_headersRequiredForEvaluation
_evaluateCompoundCriterion:
_evaluateFlagCriterion:
_evaluateHeaderCriterion:
_evaluateSenderHeaderCriterion:
_evaluatePartOfStructure:
_evaluateAddressBookCriterion:
_evaluateFullNameCriterion:
_evaluateIsDigitallySignedCriterion:
_evaluateIsEncryptedCriterion:
_evaluatePriorityIsNormalCriterion:
_evaluatePriorityIsHighCriterion:
_evaluatePriorityIsLowCriterion:
_evaluateAttachmentCriterion:
_evaluateAccountCriterion:
_evaluateAddressHistoryCriterion:
_evaluateDateCriterion:
_evaluateConversationIDCriterion:
_evaluateMailboxCriterion:
_evaluateReadLaterCriterion:
_evaluateSenderBucketCriterion:
doesMessageSatisfyCriterion:
messageRuleQualifierForString:
stringForMessageRuleQualifier:
criteria
setCriteria:
setAllCriteriaMustBeSatisfied:
dateUnits
setDateUnits:
dateIsRelative
setDateIsRelative:
dateFromExpression
simplifyOnce
simplifiedCriterion
isVIPCriterion
qualifier
setQualifier:
expressionLanguages
setExpressionLanguages:
suggestion
setSuggestion:
libraryIdentifiers
setLibraryIdentifiers:
preferFullTextSearch
setPreferFullTextSearch:
useFlaggedForUnreadCount
setUseFlaggedForUnreadCount:
includeRelatedMessages
setIncludeRelatedMessages:
expressionIsSanitized
setExpressionIsSanitized:
includeRemoteBodyContent
setIncludeRemoteBodyContent:
_criterionIdentifier
_qualifier
_name
_uniqueId
_expression
_criteria
_dateUnitType
_allCriteriaMustBeSatisfied
_dateIsRelative
_includeRelatedMessages
_requiredHeaders
_preferFullTextSearch
_useFlaggedForUnreadCount
_expressionIsSanitized
_includeRemoteBodyContent
_expressionLanguages
_suggestion
_libraryIdentifiers
Ti,N,V_qualifier
T@"NSArray",C,N,V_expressionLanguages
T@"CSSuggestion",C,N,V_suggestion
T@"EFMutableInt64Set",&,N,V_libraryIdentifiers
TB,N,V_preferFullTextSearch
TB,N,V_useFlaggedForUnreadCount
TB,N,V_includeRelatedMessages
TB,N,V_expressionIsSanitized
TB,N,V_includeRemoteBodyContent
T@"NSString",&,N,V_name
T@"NSArray",C,N
encodeWithCoder:
initWithCoder:
realFlags
partName
isComplete
dataHolder
setData:
setDataHolder:
setPartial:
setComplete:
setPartName:
_dataHolder
_complete
_partName
partial
TB,N,GisPartial,V_partial
complete
TB,N,GisComplete,V_complete
T@"MFDataHolder",&,N,V_dataHolder
T@"NSString",&,N,V_partName
initWithSender:signingTrust:encryptionTrust:verification:
signingCertificateTrustInfo
encryptionCertificateTrustInfo
sender
_signingCertificateTrustInfo
_encryptionCertificateTrustInfo
_sender
T@"MFCertificateTrustInfo",R,N,V_signingCertificateTrustInfo
T@"MFCertificateTrustInfo",R,N,V_encryptionCertificateTrustInfo
T@"NSString",R,N,V_sender
initWithCompositionSpecification:
appendDataForMimePart:toData:withPartData:
createMessageWithString:headers:
createMessageWithPlainTextDocumentsAndAttachments:headers:
createMessageWithHtmlString:plainTextAlternative:otherHtmlStringsAndAttachments:headers:
createMessageWithHTMLStringAndMIMECharset:plainTextAlternative:otherHtmlStringsAndAttachments:headers:
createMessageWithHtmlString:attachments:headers:
appendHeadersForMimePart:toHeaders:
newDataForMimePart:withPartData:
allows8BitMimeParts
setAllows8BitMimeParts:
allowsBinaryMimeParts
setAllowsBinaryMimeParts:
allowsQuotedPrintable
setAllowsQuotedPrintable:
setWriteSizeDispositionParameter:
setMessageClassToInstantiate:
shouldWriteAttachmentPlaceholders
setShouldWriteAttachmentPlaceholders:
_messageClassToInstantiate
_allows8BitMimeParts
_allowsBinaryMimeParts
_writeSizeDispositionParameter
_allowsQuotedPrintable
_shouldWriteAttachmentPlaceholders
T@,W,N,V_delegate
T@"NSDictionary",R,N,V_compositionSpecification
TB,N,V_shouldWriteAttachmentPlaceholders
count
isLastCharacterNewLine
rawData
_rawData
_count
_lastNewLine
setMessageBody:
messageBody
messageBodyIfAvailable
messageData
messageData:messageSize:isComplete:downloadIfNecessary:
messageDataHolder
messageDataHolder:messageSize:isComplete:downloadIfNecessary:
mutableHeaders
setMutableHeaders:
headersIfAvailable
_messageBody
_messageHeaders
messageWriter:willGenerateHeadersForMimePart:
messageWriter:willEncodeHeaders:forMimePart:
fetchNow:withAccount:
fetchNow:withMailboxes:fromAccount:completion:
accountWithSystemAccount:
accountWithPersistentAccount:error:
accountClassForPersistentAccount:error:
_accountClassStringWithPersistentAccount:error:
_accountClassForString:error:
loadBundleForAccountClassString:error:
_bundlePathForAccountClassString:
accountWithAccountTypeIdentifier:error:
_accountsStoreChanged:
boolValue
sharedAccountStore
_accountWithAccountClass:persistentAccount:useExisting:
_shouldUpdateAccountsInPlace
persistentStore
setPersistentStore:
newPersistentAccountWithAccountTypeIdentifier:
supportedDataclassesWithAccountTypeIdentifier:
accountsWithTypeIdentifiers:error:
existingAccountWithPersistentAccount:
_accountWithPersistentAccount:useExisting:
savePersistentAccountWithAccount:
removePersistentAccountWithAccount:
_accountStoreLock
_accountStore
T@"ACAccountStore",R
isSatisfied
conditionsObservable
satisfied
TB,R,N,GisSatisfied
T@"EFObservable",R,N
alwaysSatisfiedCondition
requireExternalPower
setRequireExternalPower:
requireWiFi
setRequireWiFi:
requireScreenLocked
setRequireScreenLocked:
requireLowPowerModeDisabled
setRequireLowPowerModeDisabled:
minBatteryLevel
setMinBatteryLevel:
maxThermalPressureLevel
setMaxThermalPressureLevel:
Tf,N
T@"<MFActivityCondition>",R,N
initWithBuilder:
_isValidConfiguration
setSatisfied:
cancellationToken
setCancellationToken:
scheduler
setScheduler:
_requireExternalPower
_requireWiFi
_requireScreenLocked
_requireLowPowerModeDisabled
_satisfied
_minBatteryLevel
_maxThermalPressureLevel
_cancellationToken
_scheduler
TB,N,V_requireExternalPower
TB,N,V_requireWiFi
TB,N,V_requireScreenLocked
TB,N,V_requireLowPowerModeDisabled
Tf,N,V_minBatteryLevel
Tq,N,V_maxThermalPressureLevel
TB,N,GisSatisfied,V_satisfied
T@"EFCancelationToken",&,N,V_cancellationToken
T@"<EFScheduler>",&,N,V_scheduler
T@"MFAppStateMonitor",R,N
initWithBundleId:
appIsVisibleObservable
_isVisible
_underlyingMonitor
_observable
visible
TB,R,N,GisVisible
sharedManager
APSConnection
apsEnvironment
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveToken:forInfo:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
setLaunchMachServiceName:
startWatchingForTopic:
stopWatchingForTopic:
swapTopic:forNewTopic:
connect
copyDeviceToken
_startAPS_nts
_stopAPS_nts
enabledTopicsWithTopics:
_pushService
_watchedTopics
_unwatchedTopics
_deviceTokenLock
_deviceToken
_launchMachServiceName
isSinglePagePDF:
initWithURL:attachmentManager:
metadataValueForKey:
setMetadataValue:forKey:
decodeFilterWithDataConsumer:
fetchData
fetchLocalData
fetchLocalData:stripPrivateMetadata:
fetchDataSynchronously:
fetchDataSynchronously:stripPrivateMetadata:
fetchDataToURL:
fileWrapperUsingFetchedLocalData
isMailDrop
isMailDropPhotoArchive
fetchPlaceholderData
placeholder
setIsPlaceholder:
isPlaceholder
setMailDropMetadata:
mailDropMetadata
newDownloadProgress
fileURL
filterData:
filterVCSData:
filterICSData:
isAvailable
isCalendarFile
eventID
setEventID:
setMeetingStorePersistentID:
icsRepresentation
setIcsRepresentation:
hasCalendarMetadata
_dataProvider
isDataAvailableLocally
shouldAutoDownload
inferredMimeType
isContainedInRFC822
isContainedInCompose
isRFC822
isImageFile
isVideoFile
isMediaFile
isPDFFile
fileNameByStrippingZipIfNeeded:
fileName
setFileName:
remoteImageFileName
setRemoteImageFileName:
updatePath
_fileUTTypeForFileName:
fileUTType
attachmentContentTypeForFileName:
contentID
setContentID:
mimeType
setMimeType:
_isSinglePagePDFFileFetchLocalData:
isSinglePagePDFFile
decodedFileSize
setDecodedFileSize:
encodedFileSize
setEncodedFileSize:
isCached
fileAttributes
sizeOnDisk
readFromDisk
textEncodingNameForData:mimeType:
textEncodingGuessWithData:
conformsToType:
conformsToTypeIdentifier:
contentTypeConformsToVCard
contentTypeConformsToEvent
contentTypeConformsToEventVCS
contentTypeConformsToEventICS
contentTypeConformsToProvisionment
contentTypeConformsToMarkup
contentTypeConformsToPassbook
contentTypeConformsToIWork
setUrl:
part
setPart:
mimePartNumber
setMimePartNumber:
disposition
setDisposition:
isAutoArchive
setPlaceholder:
attachmentDataProvider
setAttachmentDataProvider:
fetchCompletionBlock
setFetchCompletionBlock:
customConsumer
setCustomConsumer:
wantsCompletionBlockOffMainThread
setWantsCompletionBlockOffMainThread:
imageDimensions
setImageDimensions:
_attachmentManager
_placeholder
_isAutoArchive
_wantsCompletionBlockOffMainThread
_url
_mimePartNumber
_disposition
_fetchCompletionBlock
_customConsumer
_imageDimensions
T@"NSURL",&,N,V_url
T@"MFMimePart",&,N,V_part
T@"NSString",C,D,N
T@"NSString",R,D
T@"NSString",C,N,V_mimePartNumber
T@"NSString",C,N,V_disposition
TB,R,V_isAutoArchive
TB,D
T@"MFAttachmentPlaceholder",&,N,V_placeholder
T@"NSItemProvider",&,N,V_attachmentDataProvider
T@"EMMailDropMetadata",&,D,N
T@?,C,N,V_fetchCompletionBlock
T@"<MFDataConsumer>",&,N,V_customConsumer
TB,N,V_wantsCompletionBlockOffMainThread
T{CGSize=dd},N,V_imageDimensions
initWithAttachment:
completeWithData:error:
attachment
downloadProgress
lastProgressBytes
setLastProgressBytes:
lastProgressTime
setLastProgressTime:
_attachment
_downloadProgress
_lastProgressBytes
_lastProgressTime
T@"MFAttachment",R,N,V_attachment
T@"NSProgress",R,N,V_downloadProgress
T@?,R,C,N,V_fetchCompletionBlock
TB,R,N,V_wantsCompletionBlockOffMainThread
Tq,N,V_lastProgressBytes
Td,N,V_lastProgressTime
currentMessageLimit
currentDownloadLimit
currentUploadLimit
currentUploadLimitForAccount:
_isMailDropDevice
mailDropThreshold
_mailDropLimit
mailDropConfigured
mailDropAvailableForAccount:
mailDropAvailable
mailDropExpiration
mailDropPreferences
currentPlaceholderThreshold
placeholdersAvailable
capabilitiesDictionary
attachmentDownloadQueue
T@"MFInvocationQueue",R,N
_fetchInvocationCallUsingBlock:
_queueForAttachment:
_fetchDataForAttachment:withProvider:request:syncLock:
_callProgressBlockForAttachmentURL:withBytes:expectedSize:
attachmentsForContext:
attachmentForCID:
_providerForURL:
_composeAttachmentDataProviderForContext:
attachmentForData:mimeType:fileName:contentID:context:
attachmentForItemProvider:mimeType:fileName:contentID:context:
_contentIDWithoutBracket:
loadAttachmentURL:forContextID:
updateAttachment:withNewData:
removeAttachmentForURL:
recordPasteboardAttachmentsForURLs:forContextID:
recordUndoAttachmentsForURLs:forContextID:
_defaultDownloadQueue
_composeAttachmentURLs
_composeAttachmentsQueue
initWithContextID:
attachments
setHostIdentifier:forAttachment:
attachmentForHostIdentifier:
contextID
attachmentsBaseURL
setAttachmentsBaseURL:
attachmentsManager
setAttachmentsManager:
_hostIdentifierToAttachmentContentIDMap
_contextID
_attachmentsBaseURL
_attachmentsManager
T@"NSString",R,N,V_contextID
T@"NSURL",&,N,V_attachmentsBaseURL
T@"MFAttachmentManager",&,N,V_attachmentsManager
dataProviderWithURL:
dataProviderWithPath:
initWithURL:
errorWithMessage:code:
_isFileURL
exists
_fileAttributes:
save:
T@"NSURL",&,V_url
fetchDataForAttachment:consumer:progress:completion:
messageForAttachment:
initWithLibrary:
persistenceManager
messageLibrary
setMessageLibrary:
setPersistenceManager:
_messageLibrary
_persistenceManager
T@"EDAttachmentPersistenceManager",&,N,V_persistenceManager
T@"MFMailMessageLibrary",W,V_messageLibrary
_dataProviderForAttachmentURL:error:
removeProviderForBaseURL:
initWithPrimaryLibrary:
attachmentsForMessage:withSchemes:
allManagers
defaultManager
supportedDocumentUTIs
addProvider:forBaseURL:
removeProvider:
imageScalingQueue
compressionQueue
_setupAttachment:withMimeBody:error:
_filePathForAttachment:
attachmentForURL:error:
attachmentForURL:withMimeBody:error:
attachmentsForURLs:error:
attachmentForTextAttachment:error:
attachmentForContentID:
attachmentForContentID:preferredSchemes:
insertMessageAttachmentMetadataToPersistence:forMessage:
fetchDataForAttachment:
fetchDataSynchronouslyForAttachment:
_fetchCompletedForAttachment:error:
_cancelFetchForAttachment:
setContentID:forAttachment:
_contentIDForAttachment:
setMetadataForAttachment:toValue:forKey:
metadataForAttachment:forKey:
clearMetadataForAttachment:
_arrayAccessQueue
_providers
_providersLock
_attachments
_metadata
_metaDataLock
_imageScalingQueue
attachmentPlaceholderForFileURL:fileName:fileSize:type:contentID:
attachmentPlaceholderForData:fileName:type:contentID:
_localStoreURLForFileData:contentID:
placeholderFromSerializedRepresentation:
_placeholderMagic
isPlaceholderSerializedRepresentation:
hasPlaceholderRepresentation:
placeholderRepresentations:
dataForPlaceholder:
writeData:forURL:
cloneFileAtURL:toPlaceholderURL:
setFileProtectionForFileAt:error:
removePlaceholderForFileURL:
removePlaceholder:
placeholderDirectory
serializedPlaceholderForFileName:fileSize:mimeType:contentID:
_setJSONDictionary:
setFileSize:
fileURLString
setFileURLString:
useMailDrop
setUseMailDrop:
serializedRepresentation
_jsonDictionary
attachmentData:fileName:mimeType:
attachmentData:fileName:mimeType:contentID:
supportsSecureCoding
_fileName
_mimeType
_contentID
T@"NSData",&,N,V_data
T@"NSString",&,N,V_fileName
T@"NSString",&,N,V_mimeType
T@"NSString",C,N,V_contentID
temporaryDirectory
_temporaryDirectoryUniqueURL
temporaryFileURLWithExtension:
writeData:toTemporaryFileURLWithFileName:
mimeTypeForFileName:
shouldCreatePlaceholderAttachmentForAttachmentWithSize:
makeAttachmentPlaceholder:fileSize:mimeType:contentID:
securityScopeForFileURL:
isFileBundleURL:
_stripBundlePath:entryPath:
dataForFileBundleURL:
securityScopedURL:
securityScopedURL:withToken:
initWithSecurityScopedURL:withToken:
startWriteAccess
startReadAccess
_temporaryReadURL:error:
_removeTemporaryReadURL
stopAccess
securityScopeToken
_attachSecurityScope
isReadable
isBundle
_fileCoordinator
_securityScopedURL
_securityScopeToken
_secureReadURL
_securedRead
_secureWriteURL
_securedWrite
uidForItem:
flagsForItem:
sequenceIdentifierForItem:
shouldSyncFlags
_store
_connection
_currentUID
_missingUIDs
_serverMessages
_shouldCompact
_shouldFetch
_isSearching
initWithAccountID:aliasSupport:
getEmailAddressAndAliasesWithLastSyncDate:entityTag:handler:
_isRunning
_requestCount
initWithReceiveEmailAliasAddresses:emailAddresses:defaultEmailAddress:entityTag:isSuccess:notModified:accountNeedsToUpdateProperties:
accountNeedsToUpdateProperties
entityTag
isSuccess
notModified
_accountNeedsToUpdateProperties
_isSuccess
_notModified
_receiveEmailAliasAddresses
_emailAddresses
_defaultEmailAddress
_entityTag
T@"NSDictionary",R,N,V_receiveEmailAliasAddresses
T@"NSDictionary",R,N,V_emailAddresses
T@"NSString",R,N,V_defaultEmailAddress
TB,R,N,V_accountNeedsToUpdateProperties
T@"NSString",R,N,V_entityTag
TB,R,N,V_isSuccess
TB,R,N,V_notModified
initWithCertificateType:trust:sender:
trustEvaluation
trust
certificateType
_unevaluatedTrust
_trustEvaluation
_uncommentedSender
_certificateType
TQ,R,N,V_certificateType
T@"NSString",R,C,N,V_sender
T@"ECSecureMIMETrustEvaluation",R,N
T^{__SecTrust=},R,N
certificateTrustInformationFromMFCertificateTrustInfo:
initWithTrustInformation:
canSaveCertificateToKeychain
hasTrustException
addTrustException
removeTrustException
saveCertificateToKeychain
removeCertificateFromKeychain
keychainStatus
addressForSaving
_addressForSaving
_trustInformation
_keychainManager
Ti,R,N
T@"NSString",R,C,N,V_addressForSaving
initWithData:forContentID:
initWithAttachmentDataItemProvider:forContentID:
_commonInitWithDataProvider:forContentID:
addData:forContentID:
addDataItemProvider:forContentID:
removeDataForAttachment:
recordPasteboardDataForAttachments:
recordUndoDataForAttachments:
_dataForAttachment:
dataForContentID:
rawDataForContentID:
_attachmentsData
_attachmentsPlaceholderData
_attachmentsPasteboardData
_attachmentsUndoData
initWithMimePart:
content
folderChange:finishedWithStatus:error:
waitForResult
initWithStatusCode:error:folderID:folderName:
wasSuccessful
folderName
_statusCode
_folderName
Tq,R,V_statusCode
T@"NSError",R,V_error
T@"NSString",R,V_folderID
T@"NSString",R,V_folderName
handleResponse:error:
drainMailbox
receiveSyncActions:
commitSyncActions
streamingContentConsumer
resultsForMailbox:newTag:actions:responses:percentComplete:moreAvailable:
resultsForMailbox:newTag:actions:responses:percentComplete:moreAvailable:sentBytesCount:receivedBytesCount:
shouldBeginStreamingForMailMessage:format:
consumeData:length:format:mailMessage:
didEndStreamingForMailMessage:
initWithCurrentTag:accountID:requests:
originalThreadMonitor
actionsConsumer
handleSyncResponses:
partialResultsForMailbox:actions:responses:percentComplete:moreAvailable:
refreshFolderHierarchyAndWait:
streamConsumer
setStreamConsumer:
moreAvailable
_requestPairs
_bodyData
_receivedFirstItem
_firstSyncBatch
_syncKeyResets
_serverErrors
_syncResponseConsumersByMessageId
_accountHierarchyLock
_moreAvailable
_streamConsumer
T@"NSString",C,N,V_tag
T@"<DAMailboxStreamingContentConsumer>",&,N,V_streamConsumer
TB,R,N,V_moreAvailable
initWithDAMailMessage:mailbox:
DAMailMessage
_rfc822CreatedMessage
_externalConversationID
_DAMailMessage
T@"DAMailMessage",R,N,V_DAMailMessage
succeeded
didBeginStreaming
timeOfLastActivity
dataConsumerForPart:
dataConsumer
setDataConsumer:
alternatePartConsumer
setAlternatePartConsumer:
bodyData
consumerFactory
setConsumerFactory:
requestedFormat
setRequestedFormat:
_requestedFormat
_dataConsumer
_alternatePartConsumer
_consumerFactory
_triedCreatingAlternatePartConsumer
_didBeginStreaming
_succeeded
_timeOfLastActivity
Ti,N,V_requestedFormat
T@"<MFCollectingDataConsumer>",&,N,V_dataConsumer
T@"<MFCollectingDataConsumer>",&,N,V_alternatePartConsumer
T@"<MFMessageDataConsumerFactory>",&,N,V_consumerFactory
T@"DAMailMessage",R,N,V_message
T@"NSMutableData",R,N,V_bodyData
Td,R,N,V_timeOfLastActivity
defaultAlternativeForPart:
bestAlternativeForPart:
folderIDForFetching
_remoteIDsMatchingSearchText:predicate:limit:offset:filterByDate:handler:
replayFlagChange:forRemoteIDs:error:completed:
wantsLineEndingConversionForMIMEPart:
fetchBodyDataForRemoteID:
_fetchBodyDataForSearchResult:folderID:format:streamConsumer:
_fetchBodyDataForNormalMessage:format:part:streamConsumer:
_downloadHeadersForMessages:
messageCanBeTriaged:
backedByVirtualAllSearchMailbox
setBackedByVirtualAllSearchMailbox:
_DAFolder
_backedByVirtualAllSearchMailbox
TB,N,V_backedByVirtualAllSearchMailbox
mf_alwaysReportFailures
initRequestForBodyFormat:withBodySizeLimit:
generationNumber
shouldSend
initRequestForBodyFormat:withBodySizeLimit:isUserRequested:
deferredOperation
consumer
format
monitor
setMonitor:
numNewMessages
T@"MFActivityMonitor",&,N,Vmonitor
T@"MFError",&,N,Verror
searchQuery:returnedResults:
searchQuery:finishedWithError:
searchQuery:returnedTotalCount:
resetDoneCondition
latestDateToAdd
setLatestDateToAdd:
searchResult
earliestDateAdded
doneCondition
timeReceivedLastResponse
T@"NSDate",&,N,VlatestDateToAdd
T@"NSDate",R,N,VearliestDateAdded
T@"MFMailMessageStoreSearchResult",R,N,VsearchResult
wantsData
setStore:
TB,R,N,V_succeeded
T@"MFDAMessageStore",&,N,V_store
hasLocalCopyOfData
setHasLocalCopyOfData:
_hasLocalCopyOfData
T@"<MFDAStreamingContentConsumer>",&,N,V_streamConsumer
TB,N,V_hasLocalCopyOfData
setMessage:
T@"MFMailMessageLibrary",&,N,V_library
T@"MFMessage",&,N,V_message
consumeData:ofContentType:forAttachmentNamed:ofMessageWithServerID:
attachmentFetchCompletedWithStatus:forAttachmentNamed:ofMessageWithServerID:dataWasBase64:
attachmentFetchCompletedWithStatus:forAttachmentNamed:ofMessageWithServerID:dataWasBase64:sentBytesCount:receivedBytesCount:
initWithActivityMonitor:
progressFilter
setProgressFilter:
dataWasBase64
fetchSucceeded
_progressFilter
_accumulatedLength
_dataWasBase64
_fetchSucceeded
T@"MFProgressFilterDataConsumer",&,N,V_progressFilter
TQ,N,V_expectedLength
TB,R,V_dataWasBase64
TB,R,V_fetchSucceeded
searchResultFetchedWithResponses:
initWithMailMessage:clientID:
replyTo
body
clientID
setClientID:
serverID
bodyType
_clientID
initWithRequestType:message:send:
initWithMessage:mailbox:
_messageIDHeader
resultsForMessageMove:
initWithSourceRemoteIDs:destinationRemoteIDsBySourceRemoteIDs:failures:
_sourceRemoteIDs
_destinationRemoteIDsBySourceRemoteIDs
_failures
Tq,R,N,V_statusCode
serverId
success
_success
_serverId
T@"NSString",R,N,V_serverId
T@"MFError",R,N,V_error
TB,R,N,V_success
fetchBodyDataForRemoteID:mailboxURL:
isRecoverableError:
downloadFailed
copyItems:destinationMailboxURL:
moveItems:destinationMailboxURL:
appendItem:mailboxURL:
deleteSourceMessagesFromTransferItems:
replayActionUsingStore:
_journalForMailbox:
legacyJournal
mergeAllJournalsUsingConnection:
_processJournalFile:connection:
mergeUsingConnection:
_markMailboxForReconciliation:connection:
initWithStateEventDictionary:identifier:lastKnownCapabilities:
setIdentifier:
setLastKnownCapabilities:
_identifier
_mailAccount
T@"NSString",&,N,V_identifier
T@"NSArray",&,N,V_lastKnownCapabilities
T@"MailAccount",&,N,V_mailAccount
initWithDecryptedMessage:
initWithStatus:
setStatus:
duration
setDuration:
bytesSent
setBytesSent:
isWifi
setIsWifi:
_isWifi
_duration
_bytesSent
Tq,N,V_status
Td,N,V_duration
TQ,N,V_bytesSent
TB,N,V_isWifi
Tq,N,V_attributes
mf_utf8HTMLStringWithString:
initWithDomain:code:userInfo:
userInfo
localizedDescription
mf_moreInfo
mf_shortDescription
errorWithDomain:code:localizedDescription:
errorWithDomain:code:localizedDescription:title:userInfo:
errorWithException:
recoveryAttempter
setLocalizedDescription:
setMoreInfo:
setShortDescription:
useGenericDescription:
_moreUserInfo
mf_isUserCancelledError
mf_isSMIMEError
mf_shouldBeReportedToUser
mf_shouldFailDownload
fetchMinBytes
setFetchMinBytes:
fetchMaxBytes
setFetchMaxBytes:
minBytesLeft
setMinBytesLeft:
_fetchMinBytes
_fetchMaxBytes
_minBytesLeft
TQ,N,V_fetchMinBytes
TQ,N,V_fetchMaxBytes
TQ,N,V_minBytesLeft
shouldAddUID:
messageToSyncFlagsForUID:
insertMessages:
_numNewUIDs
_newMessageCount
_highestModSequence
initWithFile:account:
initWithFile:isPurgeable:
markPurgeableWithError:
isPurgeable
setIsPurgeable:
_isPurgeable
TB,N,V_isPurgeable
_errorForArchiveStatus:
registerBlocks:writer:
unregisterBlocks
_compressContents:error:
compressContents:completion:
compressFolder:error:
_compressionArchive
_compressContents:withArchive:error:
_compressWithArchive:error:
_compressionArchiveEntryWithName:length:isDirectory:
_compressContents:fileName:withArchive:error:
_archiveDirectoryName:withArchive:error:
_compressionCompleteForArchive:error:
_decompressContents:inMemoryWithError:mainEntry:
decompressContents:completion:
_decompressionArchive
_decompressArchive:intoArchiveDirectory:error:
_decompressionCompleteForArchive:error:
inputData
setInputData:
inputRange
setInputRange:
outputData
setOutputData:
readerBlock
setReaderBlock:
writerBlock
setWriterBlock:
_inputData
_outputData
_readerBlock
_writerBlock
_inputRange
T@"NSData",&,N,V_inputData
T{_NSRange=QQ},N,V_inputRange
T@"NSMutableData",&,N,V_outputData
T@?,C,N,V_readerBlock
T@?,C,N,V_writerBlock
archiveDirectory
rangeOfCentralDirectoryInData:
_entriesFromCentralDictionary:inData:archiveData:
_centralHeader:
_centralDirectory:
_rangeOfCentralDirectory:
_hasZipSignature:
archiveEntries
inputWithURL:
inputWithData:
mainEntry
setMainEntry:
_scrubContentDirectory
scrubbedArchiveEntries
setArchiveEntry:
contents
setContents:
_entries
_scrubbedEntries
_mainEntry
_contents
T@"NSData",&,N,V_contents
T@"NSError",R,&,N,V_error
archiveEntry
archiveEntryWithCentralHeader:archiveData:
initWithContents:path:
initWithDirectoryPath:
compressedSize
merge:
uncompressedSize
setUncompressedSize:
compressedRange
setCompressedRange:
isDeflated
setIsDeflated:
isDirectory
setIsDirectory:
_isDeflated
_isDirectory
_uncompressedSize
_compressedRange
T@"NSString",&,V_path
Tq,V_uncompressedSize
T{_NSRange=QQ},V_compressedRange
TB,V_isDeflated
TB,V_isDirectory
T@"NSData",&,V_contents
T@"MFFileCompressionQueue",R
addFile:
hasNext
nextFile
fileCompressionQueue
setFileCompressionQueue:
_fileCompressionQueueLock
_fileCompressionQueue
T@"NSMutableArray",&,N,V_fileCompressionQueue
scheduleActivityIfNeeded
unregisterXPCActivity
_registerXPCActivity
_unregisterXPCActivity
compressFilesInQueue:shouldDefer:
addFetchCommandForUid:fetchItem:expectedLength:bodyDataConsumer:consumerSection:
expectedSize
setChunkSize:
chunkSize
setFull:
isFull
_removeFetchUnitMatchingResponse:
failureResponsesFromSendingCommandsWithConnection:
isSending
_chunkSize
_expectedSize
_full
_sending
_fetchUnits
_setupExpectedFetchResult
matchesFetchResponse:
copyFailedFetchResponse
bodyDataConsumer
setBodyDataConsumer:
consumerSection
setConsumerSection:
fetchItem
setFetchItem:
_expectedFetchResult
_bodyDataConsumer
_consumerSection
_fetchItem
T@"<MFDataConsumer>",&,N,V_bodyDataConsumer
T@"NSString",&,N,V_consumerSection
T@"NSString",C,N,V_fetchItem
TI,N,V_uid
initWithUid:
isSuccessful
bytesFetched
handleFetchResult:
processResults
addCommandsToPipeline:withCache:
lengthOfDataBeforeLineConversion
mainConsumer
_pendingFetchResults
_countingConsumer
_mainConsumer
T@"MFBaseFilterDataConsumer",R,N,V_mainConsumer
initWithUid:section:length:lengthIsKnown:range:consumer:
initWithUid:section:estimatedLength:consumer:
initWithUid:section:length:consumer:
initWithUid:section:range:consumer:
section
_section
_length
_lastBytesFetched
_knownLength
_range
_originalDataLength
_offsetAdjustment
subdownloads
addSubdownload:
removeSubdownload:
_subdownloads
downloadForMessage:
downloadForUid:section:length:consumer:
downloadForUid:section:expectedLength:consumer:
downloadForUid:section:range:consumer:
handleFetchResponse:forUid:
handleFetchResponses:
processResultsForUid:
cleanUpDownloadsForUid:
addCommandsForDownload:toPipeline:
_downloads
initWithType:
envelope
setEnvelope:
internalDate
setInternalDate:
setFetchData:
bodyStructure
setBodyStructure:
startOffset
setStartOffset:
setSection:
flagsArray
setFlagsArray:
setCustomFlagsArray:
customFlagsArray
appleRemoteLinks
setAppleRemoteLinks:
encoding
_itemType
_typeSpecific
initWithFlags:size:uid:
compareByNumberWithMessage:
topLevelPart
setTopLevelPart:
_networkConverterWithConsumer:didReceiveData:
setFetchBodyData:
fetchBodyData
_topLevelPart
_allowsPartialDownloads
_usingPartialDownloads
_fetchingMessageContents
_fetchingBodyText
_doneAddingSubdownloads
_fetchBodyData
_headerConsumer
_textConsumer
_receivedHeaders
_receivedText
headerData
setHeaders:
_messageData
deserializedCopyFromData:cursor:
_magic
_deserializeOpSpecificValuesFromData:cursor:
serializeIntoData:
initWithType:mailbox:
initWithMailboxToCreate:
initWithMailboxToDelete:
initWithFlagsToSet:flagsToClear:forUIDs:inMailbox:
initWithUidsToCopy:fromMailbox:toMailbox:firstNewUid:
initWithAppendedUid:approximateSize:flags:internalDate:mailbox:
isSourceOfTemporaryUid:
actsOnTemporaryUid:
firstTemporaryUid
lastTemporaryUid
operationType
approximateSize
failureCount
setFailureCount:
usesRealUids
setUsesRealUids:
flagsToSet
flagsToClear
uids
sourceUids
destinationUids
destinationMailbox
sourceUidForTemporaryUid:
getMessageId:andInternalDate:forDestinationUid:
setMessageId:andInternalDate:forMessageWithSourceUid:
_failureCount
_temporaryUids
_mailboxName
_opSpecific
messageIds
internalDates
hadWarningOrError
resetWarningOrError
initWithConnection:response:start:end:
connection
response
setStart:
increment
setEnd:
emitWarning:
emitError:
logReadChars
copyAtom
getNumber:
copyNumber
match:
match:upToSpecial:
copyLiteral
literalWithResponseConsumer:section:
copyLiteralString
copyQuotedString
copyNilOrString
copyAString
copyDateTime
copyArrayAllowingNulls:
copyArray
copyMessageSet
copyStringFrom:to:withCaseOption:
parseSpace
lookAhead
nextSeparator
_response
_start
_end
_originalStart
_originalEnd
_lastLoggedChar
_invalid
responseType
setResponseType:
isUntagged
isAlertResponse
isResponseWithCode:
responseCode
responseInfo
userData
userString
setUserData:responseCode:responseInfo:
setCapabilities:
serverInfo
setServerInfo:
number
setNumber:
statusEntries
setMailboxName:statusEntries:
searchResults
setSearchResults:
mailboxAttributes
separator
setMailboxAttributes:separator:mailboxName:extraAttributes:
fetchResultWithType:
fetchResults
setFetchResults:
quotaRootNames
setMailboxName:quotaRootNames:
quotaRootName
quotas
setQuotaRootName:quotas:
uidFlagsChange
setUidFlagsChange:
setUids:
flagsFetchResult
setFlagsFetchResult:
privateNamespaces
setPrivateNamespaces:
publicNamespaces
setPublicNamespaces:
sharedNamespaces
setSharedNamespaces:
responseName
parameters
setValue:forKey:
keyValuePairs
setResponseName:parameters:
_descriptionWithFullData:
initWithConnection:responseConsumer:
initWithString:
initWithResponseType:
_responseType
_keyValuePairs
addConsumer:forSection:
appendData:forSection:
consumersBySection
_consumersBySection
updateDeletedCount
sequenceIdentifierForUIDs:
setSequenceIdentifier:forUIDs:
imapMailboxNameForMailboxURL:
flagsForIMAPUIDs:mailboxURL:
checkUIDValidity:mailboxURL:
messageDataForRemoteID:mailboxURL:
errorIsIMAPError:
compact
fetchDataForMessage:partial:
fetchHeadersForMessage:
fetchDataForMimePart:range:isComplete:consumer:
fetchDataForMessage:didDownload:
handleFlagsChangedForMessages:flags:oldFlagsByMessage:
_fetchMessagesWithUIDs:connection:newCount:flagsToSet:queueClass:
syncMessagesWithUIDs:connection:serverMessages:flagSearchResults:
_performActionsOnConnection:uidsToFetch:uidsToSync:messagesToCompact:serverMessages:flagSearchResults:shouldForce:newUIDsToFetch:
_searchFlagsForUIDs:usingConnection:
_fetchMessagesWithArguments:idRange:onConnection:synchronize:limit:topUIDToCompact:topKnownUID:success:examinedRange:fetchableUIDsFound:preserveUID:numFetchedUIDs:
updateDeletedCountWithNotDeletedCount:
_shouldContinueToPreservedUID:
_fetchServerUnreadCountWithConnection:
_updateServerUnreadCount:
_remoteBodySearchForCriterion:
_newSearchResponseQueueForConnection:limit:
_fetchMessagesMatchingCriterion:limit:withOptions:handler:
_fetchFullMessageDataForMessage:download:
_waitForDataFromDownload:uid:downloadCache:connection:
_downloadForMessageBodyData:usingDownloadCache:
_performBodyDataDownload:usingConnection:downloadCache:isPartial:
performOperationRequiringConnection:withOptions:failedToSelectMailbox:operation:
_selectMailbox:withConnection:
_idleConditionsObservable
_observeChangesInIdleConditions
_scheduleIdleTransition:
deletedMessages
shouldUseIDLE
setShouldUseIDLE:
cancelationToken
setCancelationToken:
_supportsForwardedFlag
_supportsDollarForwardedFlag
_supportsFlagColorBitFlags
_settingServerCount
_activeFetchVsReplayLock
_serverCountLock
_serverMessageCount
_serverDeletedCount
_lastHighestModSequence
_cachedConnection
_cachedConnectionLock
_loggingPrefix
_shouldUseIDLE
_cancelationToken
T@"MFMailboxUid",R,N,V_mailbox
TB,V_shouldUseIDLE
T@"EFCancelationToken",&,N,V_cancelationToken
T@"IMAPAccount",R,N,V_account
initWithLibrary:accountsProvider:
numberOfUnreconciledMessages
reconcileAllObjectsWithWindow:
reconcileWithMessageReconciliationQueries:window:
reconcileWithThreadReconciliationQueries:window:
reconcileInboxMessagesWithWindow:
_hookRegistry
_accountsProvider
_transformer
persistenceWillReplaceDatabaseID:with:forTable:column:
persistenceDidReconcileProtectedData
persistenceIsInitializingDatabaseWithConnection:
persistenceDidInvalidate
persistenceDidInitializeConversationSubscriptionProvider
initWithLibrary:queryProvider:accountsProvider:
_reconciliationCleanupScheduler
_queryProvider
_messageReconciler
_threadReconciler
initWithHookRegistry:persistence:
reconcileWithThreadsWithConversationIDs:window:
_threadPersistence
deliveryForCommand:
senderForCommand:
initWithDatabase:gmailLabelPersistence:
initWithLibrary:database:
initWithDatabase:
messageForDatabaseID:
mailboxURLForDatabaseID:
mailboxDatabaseIDForURL:
labelNameForLabelID:
handledFailedCopyForMessages:
T@"MFMailMessageLibrary",W,N,V_library
initWithLibrary:account:
connectionEstablished
_replayAllActions
_checkForNewActions
replayingActions
setReplayingActions:
actionsToReplay
setActionsToReplay:
replayScheduler
needToCheckForNewActions
setNeedToCheckForNewActions:
_replayingActions
_needToCheckForNewActions
_actionsToReplay
_replayScheduler
T@"MailAccount",W,N,V_account
T@"NSMutableArray",&,N,V_actionsToReplay
T@"<EFScheduler>",R,N,V_replayScheduler
TB,N,V_needToCheckForNewActions
TB,V_replayingActions
localizedHeaders
localizedHeadersFromEnglishHeaders:
englishHeadersFromLocalizedHeaders:
copyFormattedHeaderValueFromAddressList:
appendHeaderMarkupForKey:value:toString:
markupString
T@"MFLockStateMonitor",R,N
lockStateObservable
isLocked
_receiveLockState:
_token
_isLocked
locked
TB,R,GisLocked
initWithMailboxProvider:
initWithMailboxProvider:database:library:
mailboxDatabaseIDsForMailboxObjectIDs:createIfNecessary:
createMailbox:parentMailboxID:
moveMailbox:newParentMailboxID:
serverCountsForMailboxScope:block:
T@"EDPersistenceDatabase",R,N,V_database
T@"MFMailMessageLibrary",R,W,N,V_library
mailboxProvider
T@"MFMailboxProvider",&,D,N
initWithAccountsProvider:
_mailboxInvalidated:
_didChangeMailboxList:
_willReloadMailboxList:
_didReloadMailboxList:
_willFetchMailboxList:
_didFetchMailboxList:
legacyMailboxForObjectID:
_transformMailbox:legacyMailboxToMailboxMap:objectIDToLegacyMailboxMap:
_fetchMailboxesForAccount:
mailboxUidTransformer
setMailboxUidTransformer:
_mailboxUidTransformer
T@"MFMailboxUidTransformer",&,N,V_mailboxUidTransformer
isMailbox:equalTo:uidToMailboxMap:
transformMailboxUid:uidToMailboxMap:objectIDToUidMap:
URLSession:downloadTask:didFinishDownloadingToURL:
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
_defaultDownloadSessionForAttachment:
_requests
fullResolutionStorageLocationForAttachmentWithMimePart:withMessage:
fullResolutionAttachmentForAttachment:
fullResolutionAttachmentURLForAttachmentURL:
deliverSynchronouslyWithCompletion:
_mailDropZone
scaledImages:
updateMessageWithAttachmentsSynchronously
ckDatabase
_processAttachments
publishRecord:database:attachmentRecords:images:allowsCellularAccess:
_uploadAttachmentsViaCloudKit:zone:records:zippedPhotos:attachmentRecords:images:
_recordZoneIDInDatabase:completionHandler:
setAttachments:
imageArchiveMetadata
setImageArchiveMetadata:
mailDropState
setMailDropState:
_imageArchiveMetadata
_mailDropState
T@"NSArray",&,N,V_attachments
T@"EMMailDropMetadata",&,N,V_imageArchiveMetadata
Tq,N,V_mailDropState
runWithConnection:
_createStringFromData:cursor:
setOperationType:
setMailboxName:
_operationType
Ti,N,V_operationType
T@"NSString",&,N,V_mailboxName
_readSavedOperationsAtPath:
cleanUpAfterMigrationWithConnection:
initWithSQLiteConnection:protectedDatabaseName:
schema
_messagesTableSchema
_mailboxesTableSchema
_recipientsTableSchema
_messageReferencesTableSchema
_conversationsTableSchema
_conversationIDMessageIDTableSchema
_propertiesTableSchema
_messageDataTableSchema
_messageDataDeletedTableSchema
_popUIDsTableSchema
_accountsTableSchema
_spotlightTombstonesTableSchema
_spotlightMessageReindexTableSchema
protectedSchema
_addressesTableSchema
_subjectsTableSchema
_summariesTableSchema
_protectedMessageDataTableSchema
performMigrationStep
_initializeOldProtectedSchema
_transformSchema
_transformProtectedSchema
_createTemporaryTables
_dropTemporaryTables
_migrateData
_migrateNonMessages
_migrateSubjects
_migrateSummaries
_migrateSendersAndRecipients
_migrateMessages
_createIndexes
_cleanupOldSchema
setConnection:
protectedDatabaseName
_protectedDatabaseName
T@"EDPersistenceDatabaseConnection",&,N,V_connection
T@"NSString",R,C,N,V_protectedDatabaseName
T@"EFSQLSchema",R,N
_messagesTableDefinition
_recreateMessagesIndices:
_triggerDefinition
initWithSQLiteConnection:
_populateServerMessages
_offlineCacheOperations
_serverMessagesTableDefinition
_serverMessagesMessageIndexDefinition
_serverLabelsTableDefinition
_localMessageActionsTableDefinition
_localMessageActionsMailboxRowIDIndexDefinition
_actionMessagesTableDefinition
_actionMessagesActionIndexDefinition
_actionMessagesMessageIndexDefinition
_actionMessagesDestinationMessageIndexDefinition
_actionLabelsTableDefinition
_actionLabelsActionIndexDefinition
_actionLabelsLabelIndexDefinition
_actionFlagsTableDefinition
_actionFlagsActionIndexDefinition
translateToLocalActionWithConnection:
databaseID:andMailbox:forMessageWithRemoteID:connection:
_onFlags
_offFlags
_originalFlags
_temporaryRemoteIDs
_sourceMailboxID
_destinationMailboxID
initWithMessageIDHeader:mailbox:
_parentFolderID
_temporaryFolderID
initWithFolderID:newParentFolderID:newDisplayName:
_newParentFolderID
_newDisplayName
_renameMailboxDataFolders:
_renameMailboxURLsForMailAccount:inSQLiteDB:
_updateMailboxURLsInSQLitedb:withOldURLToNewURLMap:
_purgeFoldersMatchingPatterns:
sqliteConnection
setSqliteConnection:
_sqliteConnection
T@"EDPersistenceDatabaseConnection",&,N,V_sqliteConnection
currentVersion
Ti,R
initWithDelegate:
migrateWithDatabaseConnection:schema:
_runMigrationStepsFromVersion:connection:schema:
_checkContentProtectionState
_checkForeignKeysWithConnection:
noteNeedsRebuildTriggers
needsRebuildTriggers
noteRebuildMessageInfoIndex
needsRebuildMessageInfoIndex
resetTTRPromptAndForceReindex
noteNeedsSpotlightReindex
needsSpotlightReindex
addPostMigrationBlock:
runPostMigrationBlocksWithConnection:
attachProtectedDatabaseWithConnection:
detachProtectedDatabaseWithConnection:
contentProtectionQueue
migrationState
_needsSpotlightReindex
_needsRebuildTriggers
_needsRebuildMessageInfoIndex
_postMigrationBlocks
_contentProtectionQueue
_migrationState
T@"<MFMailMessageLibraryMigratorDelegate>",R,W,N,V_delegate
T@"NSObject<OS_dispatch_queue>",R,N,V_contentProtectionQueue
T@"NSConditionLock",R,N,V_migrationState
messagesTableStubSchema
mailboxesTableStubSchema
serverMessagesTableSchema
serverLabelsTableSchema
localMessageActionsTableSchema
actionMessagesTableSchema
actionLabelsTableSchema
actionFlagsTableSchema
messageCriterionConverter:predicateKeysForCriterionType:
messageCriterionConverter:willUsePredicateOperatorType:forKey:
messageCriterionConverter:criterionTypeForKey:
messageCriterionConverter:expressionForConstantValue:withCriterionType:
mailAccountForIdentifier:
initWithMessagePersistence:
criterionForQuery:
optionsForQuery:
criterionConverter
setCriterionConverter:
messagePersistence
_criterionConverter
_messagePersistence
T@"MFMessageCriterionConverter",&,N,V_criterionConverter
T@"EDMessagePersistence",R,W,N,V_messagePersistence
_threadsTableSchemaWithMessagesTable:conversationsTable:threadScopesTable:
threadSendersTableSchema
threadRecipientsTableSchema
_schemaWithThreadsTable:
T@"EFSQLTableSchema",R,N
addRemoteID:mailbox:
enumerateMailboxesAndRemoteIDsUsingBlock:
continueOffset
setContinueOffset:
mailboxToRemoteIdDictionary
setMailboxToRemoteIdDictionary:
_continueOffset
_mailboxToRemoteIdDictionary
T@"NSMutableDictionary",&,N,V_mailboxToRemoteIdDictionary
T@"NSDate",&,N,V_continueOffset
migrateMaildropFileForMessage:mailDropMetadata:
startMigratingAttachments
migrateAttachmentsForMessageIfNecessary:
_messageHasAttachmentsToMigrate:
_migrateAttachmentsForMessage:connection:
_setMigratingAttachmentsOnThread:
_isMigratingAttachmentsOnThread
backgroundMigrationScheduler
setBackgroundMigrationScheduler:
_upgradeLock
_backgroundMigrationScheduler
T@"<EFScheduler>",&,N,V_backgroundMigrationScheduler
didFindError:
initWithHTML:
messageBodyStringAccumulatorDefaultOptions
messageBodyElementClass
_consumeNodesFromNode:upToNode:
_isMilestoneTagName:
_findBody
parse
_scanner
collectDescendanceIntoArray:
copyConsumableNodesAndAppendInnerTextToStringAccumulator:
appendChild:
hasChildNodes
firstChild
lastChild
tagName
copyMutableConsumableNodesAndAppendInnerTextToStringAccumulator:
addRecursiveDescriptionWithLevel:toString:
recursiveDescription
parentNode
setParentNode:
nextSibling
setNextSibling:
htmlString
setHtmlString:
startLocation
setStartLocation:
endLocation
setEndLocation:
_childNodes
_parentNode
_nextSibling
_startLocation
_endLocation
T@"_MFParsedHTMLNode",W,N,V_parentNode
T@"_MFParsedHTMLNode",W,N,V_nextSibling
T@"_MFParsedHTMLNode",R,N
T@"NSString",&,N,V_htmlString
TQ,N,V_startLocation
TQ,N,V_endLocation
setTagName:
_tagName
_rangeOfFirstMatchWithRegularExpression:
mf_scanUpToRegularExpression:
mf_remainingString
startMigratingBodies
migrateBodyForMessageIfNecessary:
_migrateDataFilesForMessage:
_mailboxHasUnmigratedFiles:
_legacyAttachmentDataDirectoryURLForGlobalMessageID:basePath:purgeable:
_migrateAllFilesForMailbox:
_filesForMessage:
legacyAttachmentDirectoryForMessage:
_directoryContentsForPath:
directoryContentCache
setDirectoryContentCache:
mailboxesToCheck
setMailboxesToCheck:
_directoryContentCache
_mailboxesToCheck
T@"EFLazyCache",&,N,V_directoryContentCache
T@"NSMutableArray",&,N,V_mailboxesToCheck
releaseExternally
copyBlocks
setFoundTextBlock:
setFoundWhitespaceBlock:
_consumeTextElement:isAttribution:
_consumeAnyLastTextElementAsAttribution:
messageBodyParser:foundMessageBodyElement:
messageBodyParserDidFinishParsing:
_lastTextElements
_lastNonWhitespaceTextElement
_foundTextBlock
_foundWhitespaceBlock
_foundText
_foundForwardSeparator
mf_isHorizontalSeparator
messageBodyParserWillBeginParsing:
abortParsing
shouldProceedParsing
areBlocksCopied
timeoutInterval
setTimeoutInterval:
_timeoutTime
_shouldAbort
_didTimeout
_copyBlocks
_timeoutInterval
Td,N,V_timeoutInterval
getAttribute:
cacheRetainsNodes
isLinebreakImpliedBeforeTagName:
isLinebreakImpliedAfterTagName:
parserError
newStringAccumulatorWithOptions:lengthLimit:
setFoundMessageBodyElementBlock:
addSubparser:
removeSubparser:
getAvailableMessageBodyElement
isLandmarkTagName:
shouldIgnoreTagWithTagName:
messageBodyStringAccumulatorClass
enqueueParagraphNode:withTagName:
flushParagraphNodes
didFindBodyElement:
willBeginParsing
didFinishParsing
quoteLevelForBodyNode:
getLevel:quoteLevel:forBodyNode:
options
setOptions:
_subparsers
_elementPool
_paragraphNodes
_foundMessageBodyElementBlock
_parserError
_nodesStackCache
_nodesLevelCache
_nodesQuoteLevelCache
_options
TQ,N,V_options
quoteLevel
valueForAttributes:
nodes
setNodes:
T@"NSArray",&,N
retainExternally
isExternallyRetained
getQuoteLevel
_hasValueForAttributes:
_setValue:forAttributes:
parser
setParser:
_parser
_nodes
_quoteLevel
_externalRetainCount
_validAttributes
T@"MFMessageBodyParser",W,N,V_parser
mf_isWhitespace
mf_isAttribution
mf_isAttributionPrefix
mf_isForwardSeparator
mf_isSignature
mf_copyAttributionRegularExpressionForType:
mf_attributionExpression
mf_attributionPrefixExpression
mf_forwardSeparatorExpression
mf_signatureExpression
T@"NSRegularExpression",R
snippetFromHTMLBody:withMaxLength:preservingQuotedForwardedContent:
appendNewline
appendString:
appendRange:ofString:
appendCharacters:length:
appendInnerTextWithConsumableNode:
accumulatedString
appendCustomEntityWithTag:stringRepresentation:
initWithOptions:lengthLimit:
_accumulatedString
_remainingLength
_lastEntity
_lastCustomEntityTag
_isFull
initWithDatabase:localActionPersistence:messagePersistence:serverMessagePersistenceFactory:readLaterPersistence:bimiManager:hookResponder:hookRegistry:
moveMessages:destinationMailboxURL:userInitiated:
copyMessages:destinationMailboxURL:userInitiated:
addNewMessages:mailboxURL:userInitiated:
didReflectNewMessages:
accountForMailboxURL:
messagesForRemoteIDs:mailboxURL:
iterateMessagesInMailboxURLs:excludingMessages:batchSize:returnMessagesForFlagChange:handler:
persistNewMessages:mailboxURL:oldMessagesByNewMessage:fromSyncing:
deletePersistedMessages:
haveCompleteMIMEForMessage:
applyFlagChange:toMessagesInDatabase:
applyVIPStatus:toMessagesInDatabase:
resetStatusCountsForMailboxWithURL:
addLabels:removeLabels:toMessagesInDatabase:
setRemoteID:onMessageWithDatabaseID:
setData:onMessage:
checkForNewActionsInMailboxID:
actionHasChangedAccount:
displayErrorForTransferAction:withResults:
messageWasAppended:
mailboxIsAllMail:
mailboxPartOfAllMail:
initWithLibrary:database:localActionPersistence:messagePersistence:serverMessagePersistenceFactory:readLaterPersistence:bimiManager:hookResponder:hookRegistry:
messagesToJournalForMessages:inMailbox:
_contentURL
_relatedContentItems
_cleanupInvocable
_publicMessageURL
isMessageKnownToHaveNoMailDropAttachment:
setIsMailDropAttachmentPresent:forMessage:
synchronousRemoteObjectProxyWithErrorHandler:
finishWithError:
onScheduler:requestContentForObjectID:messagePersistence:legacyMessage:messageTransformer:mailDropAttachmentGenerator:listUnsubscribeHandler:clientIdentifier:options:delegate:completionHandler:
onScheduler:requestID:requestContentForObjectID:messagePersistence:legacyMessage:messageTransformer:mailDropAttachmentGenerator:listUnsubscribeHandler:clientIdentifier:options:delegate:completionHandler:
metadataWithDictionary:
delegateWithErrorHandler:
beginRequestWithCompletionHandler:
requestRawRepresentationWithCompletionHandler:
_dataHolderWithCancelationToken:
_generateRepresentationForLoadingContext:existingRepresentation:completion:
requestHTMLRepresentationWithCompletionHandler:
_processContentLoadingContextEvent:
_contentRepresentationForLoadingEvent:existingRepresentation:
_contentRepresentationForEvent:contentURL:relatedItems:existingRepresentation:invocable:
_includeSuggestionItemsIfNeededForRepresentation:message:
_includeHeadersIfNeededForRepresentation:message:options:
_messageForLegacyMessage:
_requestContentForAttachment:manager:options:managed:completion:
_contentItemForAttachment:manager:managed:
_attachmentContentItemsForMailDropNodes:withContext:
_maildropMetadataFromContext:
_attachmentForMailDropMetaData:context:
_objectID
_legacyMessage
_messageTransformer
_clientIdentifier
_mailDropAttachmentGenerator
_listUnsubscribeHandler
performBlock:
performSyncBlock:
performSyncBarrierBlock:
performVoucherPreservingBlock:
performCancelableBlock:
afterDelay:performBlock:
performWithObject:
_requestID
_shouldConvertEqualsToContainsForKey:
daBasicSearchString
daSearchPredicate
criterionForMailboxPredictionMessageQuery:variable:
stringValue
spotlightSearchPredicateForValue:
spotlightRecipientSearchPredicateForValue:operator:
spotlightSenderSearchPredicateForValue:operator:
spotlightSubjectSearchPredicateForValue:operator:
spotlightBodySearchPredicateForValue:
_simplifiedCompoundPredicateOfType:forSubqueries:
_proposedPredicateOperatorType:forKey:
_predicateForKey:value:qualifier:
_orPredicateForAttributes:matchingValue:qualifier:
_defaultKeysForCriterionType:
_predicateKeysForCriterion:
_searchPredicateForCriterion:
predicateFromMessageCriterion:
_defaultCriterionTypeForKey:
_criterionTypeForKey:
_criterionTypeFromExpression:
_messageCriterionForComparisonPredicate:
_messageCriterionForCompoundPredicate:
messageCriterionFromPredicate:
messageCriterionFromPredicateFormatString:
T@"<MFMessageCriterionConverterDelegate>",W,N,V_delegate
initWithBaseAttachmentsDirectory:
baseAttachmentsDirectory
_baseAttachmentsDirectory
T@"NSURL",R,N,V_baseAttachmentsDirectory
smimeError
_descriptionForDebugging:
context
setContext:
setContent:
hasLoadedCompleteBody
setHasLoadedCompleteBody:
hasLoadedBestAlternativePart
setHasLoadedBestAlternativePart:
remainingBytes
setRemainingBytes:
setTransportType:
loadedPart
setLoadedPart:
loadedBody
setLoadedBody:
_hasLoadedCompleteBody
_hasLoadedBestAlternativePart
_context
_content
_remainingBytes
_loadedPart
_loadedBody
T@"MFMessageLoadingContext",W,N,V_context
T@"NSArray",C,N,V_content
TB,N,V_hasLoadedCompleteBody
TB,N,V_hasLoadedBestAlternativePart
TQ,N,V_remainingBytes
Tq,N,V_transportType
T@"NSError",&,N,V_error
T@"NSError",R,N
T@"MFMimePart",&,N,V_loadedPart
T@"MFMimeBody",&,N,V_loadedBody
T@"MFMailMessage",R,N
htmlData
_nextOffsetForOffset:totalLength:requestedAmount:
initWithMessage:attachmentManager:
_setupMeetingData
_setupObservableStreams
onScheduler:addLoadObserver:
addLoadObserver:
load:
load:scheduler:
load:scheduler:shouldDownload:
_load:shouldDownload:
_reallyLoad:shouldDownload:
assignAttachmentManagerToContent:
processMeetingInvitations:
_setMessage:
_setMessageBody:
attachmentManager
_setAttachmentManager:
hasLoadedSomeContent
setHasLoadedSomeContent:
hasLoadedCompleteMessage
setHasLoadedCompleteMessage:
isOutgoingMessage
isDraftMessage
isEditableMessage
contentObservable
contentOffset
setContentOffset:
_cancelable
_inputObservable
_eventUniqueID
_meetingName
_meetingStorePersistentID
_eventICSRepresentation
_hasLoadedSomeContent
_hasLoadedCompleteMessage
_outgoingMessage
_draftMessage
_editableMessage
_contentObservable
_contentOffset
T@"MFMailMessage",&,N,S_setMessage:,V_message
T@"MFMimeBody",&,N,S_setMessageBody:,V_messageBody
T@"MFAttachmentManager",&,N,S_setAttachmentManager:,V_attachmentManager
TQ,N,V_contentOffset
TB,N,V_hasLoadedSomeContent
TB,N,V_hasLoadedCompleteMessage
outgoingMessage
TB,R,N,GisOutgoingMessage,V_outgoingMessage
draftMessage
TB,R,N,GisDraftMessage,V_draftMessage
editableMessage
TB,R,N,GisEditableMessage,V_editableMessage
T@"EFObservable",R,N,V_contentObservable
securityInformationFromMFMessageLoadingContextEvent:
initWithMailboxPersistence:database:hookRegistry:userProfileProvider:blockedSenderManager:vipReader:
collectStatisticsWithStatistics:
initWithMailboxPersistence:database:userProfileProvider:blockedSenderManager:vipReader:hookRegistry:library:
countOfMessagesWithGlobalMessageID:matchingQuery:
countOfMessagesMatchingQuery:
_countOfMessagesMatchingCriteria:includingDuplicates:
iterateMessagesMatchingQuery:batchSize:firstBatchSize:limit:cancelationToken:handler:
iteratePersistedMessagesMatchingQuery:limit:cancelationToken:handler:
_iterateMessagesMatchingQuery:options:cancelationToken:resultHandler:monitor:
persistedMessagesForDatabaseIDs:requireProtectedData:temporarilyUnavailableDatabaseIDs:
persistedMessageForOutgoingMessage:isDraft:
requestContentForMessageObjectID:requestID:options:delegate:completionHandler:
generateSummaryForMessage:
requestSummaryForMessageObjectID:
_requestSummaryForLibraryMessage:
libraryMessageForMessageObjectID:
cachedDatabaseIDsDictionaryForGlobalMessageIDs:
compressFile:error:
compressDirectory:shouldCancel:error:
setContentProtectionForAttachmentFile:
globalIDForMessageWithDatabaseID:mailboxScope:
collectStatistics
summaryLoaderProvider
setSummaryLoaderProvider:
_summaryLock
_summaryLoaders
_obsoleteGlobalMessageIDToDatabaseIDMap
_summaryLoaderProvider
_queryTransformer
_networkContentLoadScheduler
_offlineContentLoadScheduler
_requestSummaryQueue
T@"<MFMessageSummaryLoaderProvider>",&,N,V_summaryLoaderProvider
messageSet
setMessageSet:
_messageSet
T@"NSMutableIndexSet",&,N,V_messageSet
initWithMessagePersistence:query:batchSize:firstBatchSize:limit:handler:
_handler
T@"NSMutableIndexSet",R,N,V_messageSet
setProtectedDataAvailable:
protectedMessages
setProtectedMessages:
protectedMessageData
setProtectedMessageData:
messagesMarkedAsJournaled
setMessagesMarkedAsJournaled:
mailboxesNeedingReconcilication
setMailboxesNeedingReconcilication:
_protectedDataAvailable
_protectedMessages
_protectedMessageData
_messagesMarkedAsJournaled
_mailboxesNeedingReconcilication
TB,N,V_protectedDataAvailable
TQ,N,V_protectedMessages
TQ,N,V_protectedMessageData
TQ,N,V_messagesMarkedAsJournaled
TQ,N,V_mailboxesNeedingReconcilication
setSender:
senderList
setSenderList:
setTo:
toList
setToList:
setCc:
ccList
setCcList:
setBcc:
bccList
setBccList:
participants
setLibraryID:
setMessageIDHash:
setSubject:
messageIDsBySubject
setMessageIDsBySubject:
conversationIDHash
setConversationIDHash:
conversationFlagsRef
setConversationFlagsRef:
dateSentInterval
setDateSentInterval:
_senderList
_toList
_ccList
_bccList
_subject
_messageIDsBySubject
_conversationIDHash
_conversationFlagsRef
_dateSentInterval
T@"MFMailMessage",&,N,V_message
Tq,N,V_libraryID
Tq,N,V_messageIDHash
T@"ECSubject",C,N,V_subject
T@"EFMutableInt64Set",&,N,V_references
T@"NSMutableDictionary",&,N,V_messageIDsBySubject
Tq,N,V_mailboxID
Tq,N,V_conversationIDHash
T^Q,N,V_conversationFlagsRef
Td,N,V_dateSentInterval
T@"NSArray",C,N,V_senderList
T@"NSArray",C,N,V_toList
T@"NSArray",C,N,V_ccList
T@"NSArray",C,N,V_bccList
T@"<ECEmailAddressConvertible>",C,N,V_sender
T@"<ECEmailAddressConvertible>",C,N,V_to
T@"<ECEmailAddressConvertible>",C,N,V_cc
T@"<ECEmailAddressConvertible>",C,N,V_bcc
T@"NSSet",R,N
messageSignerFromMFMessageSigner:
migrateDatabaseAtPath:
autofetchAccount:mailboxUid:
networkActivityStarted:
networkActivityEnded:
isForeground
isMobileMail
isMaild
isAllowedToAccessProtectedData
canRegisterForAPSPush
canUseSpotlightIndex
execute
_resetDataStatusInitialized
observers
performExecuteOnObservers
networkAssertionWithIdentifier:
addNetworkObserverBlock:queue:
removeNetworkObserver:
airplaneModeChanged
callObserver:callChanged:
T@"MFNetworkController",R,N
_initializeDataStatus
_setupSymptoms
_simulationOverrideForType:actualValue:
_setDataStatus_nts:
dataStatus
isDataAvailable
_isNetworkUp_nts
isNetworkUp
isFatPipe
isOnWWAN
inAirplaneMode
is3GConnection
is4GConnection
_setFlags:forReachability:
_checkKeys:forStore:
_handleWiFiNotification:
_networkAssertionWithIdentifier:
copyCarrierBundleValue:
networkObservable
wifiObservable
_carrierBundleDidChange
connectionActivationError:connection:error:
preferredDataSimChanged:
dataStatus:dataStatusInfo:
simStatusDidChange:status:
_updateActiveCalls
awdNetworkDiagnosticReport
dataIndicator
_stateCancelable
_reachability
_store_source
_callObserver
_hasDNS
_activeCalls
_wiFiPreferences
_hasCellDataCapability
_hasWiFiCapability
_isWiFiEnabled
_isRoamingAllowed
_radiosPreferences
_prefsQueue
_symptomsToken
_ctc
_dataStatusQueue
_cellularDataAvailable
_dataStatusInitializerLock
_dataStatusInitialized
_callObserverInitialized
_dataIndicator
Ti,R,V_dataIndicator
Tq,R
T@"AWDMailNetworkDiagnosticsReport",R,N
initWithBlock:queue:
_authSchemeForAuthenticationMethod:
parentAccountMailProperties
T@"MFOSXServerIMAPAccount",&,N,GmailAccountIfAvailable,V_mailAccount
T@"NSDictionary",R,N
copy
libraryContent
richtextContent
multipartContent
placeholders
setPlaceholders:
_placeholders
T@"MFMutableMessageHeaders",&,N,V_headers
T@"NSArray",&,N,V_placeholders
T@"MFOutgoingLibraryMessageContent",R,N
T@"MFOutgoingRichtextMessageContent",R,N
T@"MFOutgoingMultipartRelatedContent",R,N
setLibraryMessage:
T@"MFLibraryMessage",&,N,V_libraryMessage
textPartsAreHTML
setTextPartsAreHTML:
plaintextAlternative
setPlaintextAlternative:
mixedContent
setMixedContent:
_plaintextAlternative
TB,N,V_textPartsAreHTML
T@"MFPlainTextDocument",&,N,V_plaintextAlternative
T@"NSArray",&,N,V_mixedContent
htmlBody
setHtmlBody:
_htmlBody
T@"NSString",&,N,V_htmlBody
notifyUserDeliverySucceeded:
_currentDeliveryObject
_deliverSynchronouslyWithCurrentSettings:
_deliveryAccountForInitializers
attachmentContext
setAttachmentContext:
originalConversationId
setOriginalConversationId:
_otherHTMLAndAttachments
_attachmentContext
_originalConversationId
T@"<MFDeliveryDelegate>",W,N,V_delegate
T@"MFAttachmentCompositionContext",&,N,V_attachmentContext
Tq,N,V_originalConversationId
persistenceStateWithStatistics:
initWithPath:inMemoryIdentifier:library:propertyMapper:
setUpWithMailboxProvider:remoteSearchProvider:
_configureSearchableIndexManagerIfNecessary
_configureAttachmentPersistenceManager
persistenceStatistics
accountsProvider
setAccountsProvider:
conversationPersistence
dataDetectionPersistence
localActionPersistence
mailboxActionPersistence
mailboxPersistence
setMailboxPersistence:
remoteSearchProvider
searchableIndexManager
serverMessagePersistenceFactory
threadPersistence
senderPersistence
remoteContentManager
remoteContentPersistence
richLinkPersistence
attachmentPersistenceManager
remoteContentCacheConfiguration
remoteContentURLCache
setRemoteContentURLCache:
remoteContentURLSession
setRemoteContentURLSession:
readLaterPersistence
sendLaterPersistence
bimiManager
remindMeNotificationController
userProfileProvider
setUserProfileProvider:
_conversationPersistence
_dataDetectionPersistence
_localActionPersistence
_mailboxActionPersistence
_mailboxPersistence
_messageChangeManager
_remoteSearchProvider
_searchableIndexManager
_serverMessagePersistenceFactory
_senderPersistence
_remoteContentManager
_remoteContentPersistence
_richLinkPersistence
_attachmentPersistenceManager
_remoteContentCacheConfiguration
_remoteContentURLCache
_remoteContentURLSession
_readLaterPersistence
_sendLaterPersistence
_bimiManager
_remindMeNotificationController
_userProfileProvider
T@"EDMailboxPersistence",&,N,V_mailboxPersistence
T@"<EDAccountsProvider>",&,N,V_accountsProvider
T@"<EMUserProfileProvider>",&,N,V_userProfileProvider
initWithBasePath:databaseName:maxConcurrentReaders:schema:protectedSchema:propertyMapper:protectedDatabasePersistence:
checkOutConnectionIsWriter:
mailMessageLibraryMigrator:attachProtectedDatabaseWithName:connection:error:
mailMessageLibraryMigrator:detachProtectedDatabaseWithConnection:
mailMessageLibraryMigrator:isInitializingDatabaseWithConnection:
mailMessageLibraryMigratorScheduleSpotlightReindex:
openConnectionIsWriter:
_migrateWithDatabaseConnection:migrator:
enforceDataProtection
migrationLock
migrationHasRun
setMigrationHasRun:
createdTempTable
setCreatedTempTable:
postMigrationSteps
setPostMigrationSteps:
_migrationHasRun
_createdTempTable
_migrationLock
_postMigrationSteps
T@,R,N,V_migrationLock
TB,N,V_migrationHasRun
TB,N,V_createdTempTable
T@"NSMutableArray",&,N,V_postMigrationSteps
configureSQLConnection
performWithOptions:transactionError:block:
transactionTypeForWriting
handleSQLResult:message:
_ICUSearchContext
_CPSearchContext
propertiesTableSchema
partialMailboxesTableSchema
additionalSchemaProviders
tablesAndForeignKeysToResolve:associationsToResolve:
_lowPowerModeChangedNotification:
assertionDidExpire
powerlog:eventData:
T@"MFPowerController",R,N
_setPluggedIn:
isPluggedIn
isHoldingAssertion
_isHoldingTaskAssertion
startListeningForBatterySaverNotifications
isBatterySaverModeEnabled
_assertionTimeout
_setupAssertionTimer:
_retainPowerAssertion_nts
_releasePowerAssertion_nts
_retainTaskAssertion_nts
_releaseTaskAssertion_nts
retainAssertionWithIdentifier:
retainAssertionWithIdentifier:withAccount:
releaseAssertionWithIdentifier:
_applicationForegroundStateChanged_nts:
_applicationForegroundStateChanged:
powerObservable
pluggedInObservable
lowPowerModeObservable
batteryLevelStateChangeNotificationObservable
batteryLevelObservable
batteryLevel
_powerQueue
_pluggedIn
_powerToken
_batteryNotificationToken
_identifiers
_appStateCancelable
_isForeground
_batteryLevel
Tf,R,N,V_batteryLevel
pluggedIn
TB,R,GisPluggedIn
batterySaverModeEnabled
TB,R,GisBatterySaverModeEnabled
holdingAssertion
TB,R,GisHoldingAssertion
finishJournalReconciliation:
addAdditionalCriteriaToCleanupActivity:
journalDatabaseName
supportsJournaling
initWithContentIDs:
contentIDs
_contentIDs
T@"NSArray",R,N,V_contentIDs
addRequests:
addRequests:combine:
addRequest:
sendRequests:
processRequest:
_processRequests:
requestPairs
setRequestPairs:
T@"NSMutableArray",&,N,V_requestPairs
initWithMessageData:parentPart:
initWithMessageData:parentPart:managed:
initWithMessage:managed:
initWithName:dataSource:reasonProvider:
attachmentBecameAvailable:
_indexMessage:includeBody:indexingType:
indexMessages:includeBody:indexingType:
logPowerEventWithIdentifier:eventData:
shouldCancelSearchQuery
addSearchQueryCancelable:
removeSearchQueryCancelable:
shouldExcludeFromIndex
setNeedsAllAttributesIndexingType
setNeedsAllAttributesIncludingDataDetectionResultsIndexingType
suggestionsSearchableItemWithMessage:
searchableIndexItemsFromMessages:type:
searchableIndexItemWithIdentifier:message:type:
preprocess
addAttachmentAttributesToAttributeSet:
_shouldAutoDownloadAttachment:
fetchIndexableAttachments
initWithDatabase:messagePersistence:richLinkPersistence:hookResponder:
enableIndexingAndBeginScheduling:budgetConfiguration:
dataSourceRefreshReasons
purgeReasons
exclusionReasons
currentReasons
T@"NSSet",R,C,N
enableIndexingAndBeginScheduling:
index
setIndex:
setPersistence:
_indexLock
T@"EDSearchableIndex",&,N,V_index
T@"EDSearchableIndexPersistence",&,N,V_persistence
T@"EDSearchableIndexScheduler",&,N,V_scheduler
additionalFilterClause
messagesWhere:sortedBy:limit:
attachmentItemMetadataForAttachmentID:attachmentPersistentID:messagePersistentID:name:mailboxID:result:
attachmentItemMetadataForAttachmentID:messagePersistentID:name:mailboxID:result:
_verificationDataFromMessage:messageIDTransactionIDDictionary:
allMailboxIdentifiersForMessage:result:
verificationDataSamplesFromMessageIDTransactionIDDictionary:
indexSet
limit
T@"NSIndexSet",R,&,N,VindexSet
secureMIMECompositionManager:signingStatusDidChange:context:
secureMIMECompositionManager:encryptionStatusDidChange:context:
copySigningIdentityForAccount:sendingAddress:error:
copyEncryptionIdentityForAccount:sendingAddress:error:
copyEncryptionCertificatesForAccount:recipientAddresses:errorsByAddress:
evaluateTrustForSigningCertificate:sendingAddress:
initWithSigningPolicy:encryptionPolicy:
initWithSendingAccount:signingPolicy:encryptionPolicy:
addRecipients:
removeRecipients:
setSendingAddress:
sendingAddress
sendingAccount
signingPolicy
encryptionPolicy
signingStatus
encryptionStatus
recipients
shouldAllowSend
_sendingAccount
_sendingAddress
_signingIdentity
_signingIdentityError
_encryptionIdentity
_encryptionIdentityError
_recipients
_errorsByRecipient
_certificatesByRecipient
_signingPolicy
_encryptionPolicy
_signingStatus
_encryptionStatus
_encryptionStatusSemaphore
_signingStatusSemaphore
_invalidated
T@"<MFSecureMIMECompositionManagerDelegate>",W
T@"MailAccount",R
mailboxIDForMailboxURL:useNumericSearch:supportsLabels:
signatureMarkupFormat:
signaturePlainTextFormat:
_modelSpecificLocalizedStringKeyForKey:
defaultSignature
_getValue:
signature
setSignature:
clearSignature
useAccountSignatures
setUseAccountSignatures:
signatureForAccount:
setSignature:forAccount:
signatureForSendingEmailAddress:
setSignature:forEmailAddress:
signatureMarkupForSendingEmailAddress:
signaturePlainTextForSendingEmailAddress:
state
lastResponse
domainName
setDomainName:
supportsPipelining
supportsSMTPUTF8
supportsEnhancedStatusCodes
supportsChunking
rcptTo:
sendBData:
sendData:
quit
abort
_trailerForMailFromWithEmailAddressFormatStyle:
mailFrom:emailFormatStyle:
dataForMailFrom:emailFormatStyle:
dataForRcptTo:
dataForDataCmd
mailFrom:recipients:withData:host:emailFormatStyle:errorTitle:errorMessage:serverResponse:displayError:errorCode:errorUserInfo:
timeLastCommandWasSent
_sendBytes:length:progressHandler:
_sendData:
_sendData:progressHandler:
_dataForCommand:length:argument:trailer:
_sendCommand:length:argument:trailer:
_getReply
_readResponseRange:isContinuation:
_connectUsingAccount:
_doHandshakeUsingAccount:
_hasParameter:forKeyword:
_supportsExtension:
_setLastResponse:
lastResponseLine
_supportsSaveSentExtension
setUseSaveSent:toFolder:
_lastResponse
_serviceExtensions
_mdata
_domainName
_saveSentMbox
_originalSocketTimeout
_lastCommandTimestamp
_hideLoggedData
_useSaveSent
_dislikesSaveSentMbox
_shouldSyncFlags
initWithName:expiration:preventIdleSleep:
initWithName:
initWithName:preventIdleSleep:
cancelTimer
_transaction
_assertion
_timer
matchMessageReferenceContext:withCandidateMessageReferenceContexts:
addProbeWithConnection:
oldKeysToNewKeysMap
_keysToMigrateToSharedAppGroup
_migrateExtPropertiesPlist
migratePreferencesToSharedAppGroup
migrateDefaults:
migrateDefaultsFromOldKeysToNewKeys:
migratePropertyForOldKey:newKey:
currentDeviceIdentifer
mobileMailDefaultForKey:
removeMobileMailDefaultForKey:
setKey:
cache
setCache:
_cache
T@"<NSCopying>",C,N,V_key
T@"MFWeakObjectCache",W,N,V_cache
objectForKey:
objectForKey:wasCached:
objectForKey:shouldGenerate:wasCached:
removeObjectForKey:
_dictionary
punctuationSet
parenSet
setWantsHTML:
mismatchError:
appendStringToBuffer:
resetStateWithString:outputString:
nowWouldBeAGoodTimeToAppendToTheAttributedString
closeUpQuoting
handleNoParameterCommand:
setupFontStackEntry:
beginCommand:
endCommand:
parseParameterString:
currentFont
appendNewLine:
readTokenInto:
convertRichTextString:intoOutputString:
convertEnrichedString:intoOutputString:
_inputBuffer
_currentIndex
_inputLength
_noFillLevel
_eatOneNewline
_insideComment
_wantsPlainText
_lastQuoteLevel
_commandStack
_outputBuffer
_prependHTML
_postpendHTML
_indentWidth
mf_stringFromMimeRichTextString:asHTML:
mf_stringFromMimeEnrichedString:asHTML:
mf_shouldLogInvocation
mf_invocationWithSelector:target:
mf_invocationWithSelector:target:object:
mf_invocationWithSelector:target:object1:object2:
invocationWithMethodSignature:
invocationWithSelector:target:taskName:priority:canBeCancelled:
invocationWithSelector:target:object:taskName:priority:canBeCancelled:
invocationWithSelector:target:object1:object2:taskName:priority:canBeCancelled:
setShouldLogInvocation:
powerAssertionId
setPowerAssertionId:
_shouldLogInvocation
_powerAssertionId
T@"MFActivityMonitor",R,N,V_monitor
T@"NSString",C,N,V_powerAssertionId
requiresPassword
initWithAuthenticationScheme:account:connection:
castleAccount
setCastleAccount:
_castleAccount
T@"CastleIMAPAccount",&,N,V_castleAccount
_passwordForHost:username:port:keychainProtocol:
passwordForHost:username:port:keychainProtocol:
setPassword:forHost:username:port:keychainProtocol:keychainAccessibility:
removePasswordForHost:username:port:keychainProtocol:
_passwordForGenericAccount:service:error:
passwordForServiceName:accountName:synchronizable:error:
passwordForServiceName:accountName:error:
passwordForServiceName:accountName:
addPassword:forServiceName:accountName:keychainAccessibility:synchronizable:error:
setPassword:forServiceName:accountName:keychainAccessibility:
removePasswordForServiceName:accountName:
copySMIMESigningPolicyForAddress:
copySMIMEEncryptionPolicyForAddress:
copyIdentityForPersistentReference:error:
persistentReferenceForIdentity:error:
_matchSSLClientIdentity:withHostname:
copyClientSSLIdentityForHostName:error:
copyAllSigningIdentitiesForAddress:error:
copyAllEncryptionIdentitiesForAddress:error:
_copyAllIdentitiesWithError:usingBlock:
_copyAllIdentitiesFromSyncableKeychain:withError:usingBlock:
validateSigningIdentity:forAddress:error:
validateEncryptionIdentity:forAddress:error:
_validateIdentity:forAddress:policy:usage:error:
copyEncryptionCertificateForAddress:error:
_addCertificate:persistent:
_copyCertificateForPersistent:error:
_addPersistentMapping:forAddress:
_removeCertificateForPersistent:
saveEncryptionCertificate:forAddress:
newTrustManager
mf_fileSystemString
mf_stringWithNoExtraSpaces
mf_uniqueFilenameWithRespectToFilenames:
mf_stringByEscapingHTMLCodes
mf_containsSubstring:options:
mf_containsSubstring:
mf_stringByTrimmingWhitespaceAndNewlineCharacters
mf_prefixToString:
mf_messageIDStringWithDomainHint:
mf_stringRepresentationForBytes:
mf_stringWithAttachmentCharacter
mf_stringForMimeTypeFromFileName:
mf_isValidAttachmentURL
mf_isResourceURL
mf_rowID
mf_partNumbers
mf_lastPartNumber
mf_firstPartNumber
_ntlmGeneratorRef
_ntlmError
mf_makeDirectoryWithMode:
mf_isSubdirectoryOfPath:
mf_stringByReallyAbbreviatingSharedResourcesDirectoryWithTildeInPath
mf_betterStringByResolvingSymlinksInPath
mf_canonicalizedAbsolutePath
mf_stringByExpandingTildeWithSharedResourcesDirectoryInPath
mf_stringByAbbreviatingSharedResourcesDirectoryWithTildeInPath
_justSentPassword
appendString:withQuoteLevel:
fragmentCount
getString:quoteLevel:ofFragmentAtIndex:
string
archivedRepresentation
appendArchivedRepresentation:
_text
_fragments
progressiveMimeParser:beganMimePart:
progressiveMimeParser:finishedMimePart:
progressiveMimeParser:beganDataForMimePart:
progressiveMimeParser:failedWithError:
initWithBodyData:topLevelHeaders:headersToPreserve:
noteDataLengthChanged:
currentPart
_initializeTopLevelPartWithHeaders:
_continueParsingStartOfPart
_continueParsingHeaders
_currentBoundary
_continueParsingBody
_continueParsing
_reportError:
_preserveHeaders
_cursor
_lastLength
_currentPart
_parserFlags
SMIMEError
copySigners
decodeMultipartSigned
decodeApplicationPkcs7_mime
_SecCMSError
_digest
_signers
_signedData
_envelopedData
_isEncrypted
newSignedPartWithData:sender:compositionSpecification:signatureData:
newEncryptedPartWithData:compositionSpecification:encryptedData:
_encoder
_singleShot
disconnect:
connectionExpired:
setTimer
registerAppleServiceDeliveryHostname:
setDeliveryClass:
_defaultSettingsWithPort:useSSL:directSSL:
connectionSettingsForAuthentication:secure:insecure:
customAuthenticationErrorStringForError:authScheme:
setSupportsPipelining:
setSupportsOutboxCopy:
authenticatedConnection:
_isAppleServiceDeliveryHostname:
_deliveryClass
_lastTimerSetTime
_supportsPipelining
_supportsOutboxCopy
_openConnection
_updateEnhancedStatusCodesFromLastResponse
setLastResponseLine:
failureReason
errorMessageWithAddress:defaultMessage:
statusClass
statusSubject
statusDetail
statusString
continuationResponses
setContinuationResponses:
_lastResponseLine
_statusClass
_statusSubject
_statusDetail
_statusString
_continuationResponses
TQ,R,N,V_status
TI,R,N,V_statusClass
TI,R,N,V_statusSubject
TI,R,N,V_statusDetail
T@"NSString",R,N,V_statusString
T@"NSArray",&,N,V_continuationResponses
initWithLibrary:URLString:
_loadMailboxRowidIfNecessary:
knownMessageIDsFromSet:
messageIDsAddedBeforeDate:
deleteUIDsNotInArray:
numberOfMessageIDs
deleteAllUIDs
flagsForUID:
_mailboxRowid
lastMatcher
setLastMatcher:
lastSearchString
setLastSearchString:
lastSearchStringLength
setLastSearchStringLength:
matchers
setMatchers:
_lastMatcher
_lastSearchString
_lastSearchStringLength
_matchers
T@"CPSearchMatcher",&,N,V_lastMatcher
T*,N,V_lastSearchString
TQ,N,V_lastSearchStringLength
T@"NSMutableDictionary",&,N,V_matchers
_setOfAllSources
allSources
attachmentForURL:
setAttachment:forURL:
_attachmentsLock
_attachmentsByURL
initWithMimeBody:
_initWithMimePart:htmlData:
initWithMimePart:htmlData:encoding:
mimePartForURL:
attachmentsInDocument
preferredCharacterSet
fileWrapper
baseURL
mimePart
isVisuallyEmpty
setVisuallyEmpty:
setAttachmentManager:
_baseURL
_mimeBody
_htmlPart
_htmlData
_partsByURL
_partsByFilename
_preferredEncoding
_visuallyEmpty
visuallyEmpty
TB,GisVisuallyEmpty,V_visuallyEmpty
T@"NSURL",R,V_baseURL
T@"MFMimeBody",R,V_mimeBody
T@"MFMimePart",R,V_htmlPart
T@"NSData",R,V_htmlData
TI,V_preferredEncoding
T@"MFAttachmentManager",&,N,V_attachmentManager
T@"YahooAccount",&,N,GmailAccountIfAvailable,V_account
activityPersistence
startActivityOfType:userInfo:
progress
activityWithID:setCompletedCount:totalCount:
totalUnitCount
activityWithID:setUserInfoObject:forKey:
activityWithID:finishedWithError:
em_internalErrorWithReason:
receivingAddresses
hasActiveAccounts
subscribe:
fetchNow:
fetchNow:withMailboxes:completion:
startBackFillingMessageBodyDownloadWithRequest:
stopBackFillingMessageBodyDownload
checkForNewLocalActions
addLocalAction:
localMailboxesDidChange
fetchSeparatorChar
completeWithStatus:
defaultCenter
addObserverForName:object:queue:usingBlock:
visibleMailboxObjectIDs
removeObserver:
mainBundle
bundleIdentifier
ef_hexString
machineID
oneTimePassword
credential
expiryDate
processInfo
isLowPowerModeEnabled
thermalState
mf_thermalStateObservable
combineLatest:
map:
floatValue
integerValue
transferType
destinationMailboxURL
itemsToCopy
sourceMailboxURL
mailboxURL
applySortedFlags:
persistResults:forAction:
itemsToDelete
setPhaseForResults:
setCompletedItems:
sourceRemoteID
completedUIDs
addIndexes:
junkLevel
flagColor
replied
draft
forwarded
redirected
imapUID
serverFlags
initWithFirst:second:
setRead:
setDeleted:
setReplied:
setDraft:
setForwarded:
setRedirected:
setJunkLevel:
setFlagged:
setFlagColor:
initWithUnsignedInt:
reflectSortedFlagChanges:mailboxURL:
changesFlagColorTo:
changesFlaggedTo:
changesJunkLevelTo:
changesRedirectedTo:
changesForwardedTo:
changesDraftTo:
changesRepliedTo:
changesDeletedTo:
changesReadTo:
initWithMailbox:taskManager:
mf_rangeOfRFC822HeaderData
mf_subdataWithRange:
mutableCopy
childPartWithNumber:
getValue:size:
messageActionPersistentID
destinationMessage
actionType
renamedMailboxName
actionID
allMailboxActionForAccountID:
postNotification:
deleteMailboxActions:
initWithLongLong:
firstHeaderForKey:
setDateReceivedAsTimeIntervalSince1970:
setDateSentAsTimeIntervalSince1970:
initWithHeaderData:encoding:
removeItemAtURL:error:
setType:
setSubtype:
setContentLocation:
setLanguages:
setContentTransferEncoding:
setContentDescription:
addSubpart:
_fixupDispositionParametersRFC2231Values
setDispositionParameter:forKey:
_fixupBodyParametersRFC2231Values
setBodyParameter:forKey:
initWithIMAPServerMessageBuilder:
setMessagePersistentID:
setServerFlags:
setImapUID:
itemsToDownload
setFailedItems:
setCreatedServerMessages:
finishWithResult:
future
futureWithError:
minimumIMAPUID
enumerateUIDsInRanges:withBlock:
valueWithRange:
reflectAllMessagesDeletedInMailboxURL:
reflectNewMessages:mailboxURL:
reflectDeletedMessagesWithRemoteIDs:mailboxURL:
serverMessagesForIMAPUIDs:limit:returnLastEntries:
messageDataIsComplete:downloadIfNecessary:
mf_dataByConvertingUnixNewlinesToNetwork
setDownloadedDataByCopyItems:
dispatchQueueSchedulerWithQueue:
observeOn:
subscribeWithResultBlock:
accountDidChange:
result
setDateFormat:
setLenient:
dateFromString:
currentThread
threadDictionary
objectForKeyedSubscript:
setLocale:
setTimeZone:
setObject:forKeyedSubscript:
isAtEnd
initWithCapacity:
addObject:
infoDictionary
v20@0:8B16
B16@0:8
@24@0:8@16
@16@0:8
@32@0:8@16@24
B40@0:8@16@24@32
^v16@0:8
B24@0:8@16
I16@0:8
B20@0:8I16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8^{_NSZone=}16
@24@0:8@"NSString"16
v24@0:8@16
@"NSArray"16@0:8
v24@0:8@"NSString"16
@"ACAccount"16@0:8
v16@0:8
v32@0:8@16@24
B28@0:8@16B24
@20@0:8B16
@28@0:8B16^@20
@24@0:8^@16
B32@0:8@16@?24
B36@0:8@16B24@?28
B24@0:8^@16
v20@0:8I16
^{__CFString=}16@0:8
@40@0:8@16@24@32
@"ACAccount"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableDictionary"
@"NSString"
@"NSArray"
@"ECAccount"
@"EFLocked"
@"MailAccount"
@"DeliveryAccount"
@"NSDictionary"
v28@0:8@16B24
v36@0:8@16B24@?28
v32@0:8@16@?24
@"MFAccount"
@"MFActivityMonitor"
@"MFMonitoredInvocation"
{?="useSSL"b1"incomingServerSupportsSSL"b1"smtpServerSupportsSSL"b1"canceled"b1"performsValidationInBackground"b1"unused"b27}
@"MFError"
@"<MFAccountValidatorDelegate>"
v24@0:8Q16
v24@0:8d16
v32@0:8@16d24
d16@0:8
v32@0:8@16Q24
i16@0:8
v20@0:8i16
v36@0:8@16d24i32
v28@0:8@16i24
v28@0:8d16i24
v24@0:8q16
@?16@0:8
v24@0:8@?16
q16@0:8
@"NSThread"
@"MFMailboxUid"
@"NSMutableSet"
@20@0:8i16
@"AOLAccount"
@28@0:8I16d20
Q24@0:8@16
@"NSMutableArray"
@32@0:8@16^@24
v28@0:8B16@20
@"MFLock"
@"NSObject<OS_dispatch_queue>"
@"NSURL"
@"EDiCloudAliasSupport"
@"MFCastleEmailAliasUpdater"
B40@0:8@16^@24@32
v40@0:8@16q24@32
B48@0:8r*16Q24{_NSRange=QQ}32
B40@0:8@16{_NSRange=QQ}24
v32@0:8r*16Q24
B32@0:8@16Q24
B32@0:8@16@24
B32@0:8^{__SecTrust=}16^@24
@"<ECSASLSecurityLayer>"
@"MFConnectionSettings"
@"<ECNWConnectionWrapper>"
^{z_stream_s=*IQ*IQ*^{internal_state}^?^?^viQQ}
v24@0:8^{__CFString=}16
^{__CFString=}
B32@0:8#16@24
@"EDSearchableIndex"
@"EFMutableInt64Set"
@"EFSQLPropertyMapper"
@36@0:8@16B24^@28
@56@0:8^I16I24B28@32@40@48
v32@0:8^?16@24
@24@0:8^?16
B28@0:8^?16B24
@24@0:8@?16
@28@0:8@16I24
@36@0:8@16@24B32
@48@0:8@16@24@32@40
@"DAMailAccount"
v40@0:8q16@24@32
v40@0:8q16@24@"NSError"32
v40@0:8@16Q24Q32
@"NSObject<OS_os_log>"16@0:8
@"MFMailMessageLibrary"
@32@0:8@16^B24
@"NSData"24@0:8@"<ECMessage>"16
B32@0:8@"NSURL"16@"NSURL"24
i20@0:8i16
v56@0:8@16@24@32@40@48
@48@0:8@16@24Q32@40
@56@0:8@16@24Q32@40@48
@48@0:8@16@24I32@36i44
B32@0:8@16^@24
B36@0:8@16@24B32
@24@0:8i16B20
B20@0:8i16
v40@0:8@16@24^@32
i24@0:8@16
@"NSObject<ASAccountActorMessages>"
@"DAAccount"
@"MFDAMailbox"
@"NSLock"
@"NSSet"
@48@0:8@16Q24@32@40
@"NSConditionLock"
@"NSData"16@0:8
@32@0:8@16B24B28
@"NSData"
v24@0:8@"NSDictionary"16
@"MFConditionLock"
@"NSError"
v24@0:8^v16
@48@0:8@16B24@28^B36i44
v36@0:8@16@24i32
v40@0:8@16@24@32
Q40@0:8Q16{_NSRange=QQ}24
Q28@0:8Q16B24
@28@0:8I16^B20
v36@0:8^@16^B24I32
@20@0:8I16
Q44@0:8{_NSRange=QQ}16Q32B40
v44@0:8@16{_NSRange=QQ}24I40
@"MFPlainTextDocument"
@"NSMutableString"
v28@0:8i16@20
@32@0:8@16#24
v40@0:8@16@24@?32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@"EFPromise"
@"NSURLCredential"
@"GmailAccount"
@"HotmailAccount"
@"IMAPAccount"
B40@0:8@"MFIMAPConnection"16@"MFIMAPResponse"24@"_MFIMAPCommandParameters"32
v40@0:8@"MFIMAPConnection"16@"MFIMAPResponse"24@"_MFIMAPCommandParameters"32
v24@0:8@"MFIMAPConnection"16
B24@0:8@"MFIMAPConnection"16
v36@0:8@"NSMutableArray"16@"NSString"24i32
v24@0:8i16B20
@44@0:8@16@24i32^B36
B24@0:8@?16
v32@0:8B16B20B24B28
@56@0:8@16B24B28@32@40^@48
@28@0:8@16B24
B40@0:8@16@24^@32
v28@0:8@16I24
@24@0:8q16
^{__CFArray=}
@"MFIMAPOperationCache"
@"NSRecursiveLock"
@"NSNumber"
@"<MFTaskManager>"
@28@0:8i16@20
@28@0:8i16Q20
@"MFIMAPResponseConsumer"
B36@0:8@16B24@28
B48@0:8@16@24^@32^@40
B64@0:8@16@24@32@40^@48^@56
B24@0:8@"NSIndexSet"16
B32@0:8@"ECMessageFlagChange"16@"NSIndexSet"24
B36@0:8@"NSArray"16B24@"NSIndexSet"28
B48@0:8@"NSIndexSet"16@"NSString"24^@32^@40
B64@0:8@"NSData"16@"NSString"24@"ECMessageFlags"32@"NSDate"40^@48^@56
i48@0:8*16Q24Q32^B40
Q32@0:8@16^@24
i40@0:8@16@24@32
@60@0:8i16@20@28i36B40@44^@52
@52@0:8@16i24B28@32^@40i48
@48@0:8@16i24B28@32^@40
@28@0:8@16i24
B28@0:8i16@20
@40@0:8@16@24^B32
Q40@0:8@16@24^B32
I20@0:8I16
B36@0:8@16B24{?=II}28
B56@0:8@16@24@32@40^@48
@24@0:8B16B20
v32@0:8d16Q24
@24@0:8{?=II}16
@32@0:8{?=II}16@24
@40@0:8@16Q24^@32
B48@0:8@16@24@32@40
@"<MFIMAPMailboxListFilter>"
@"NSMutableData"
@"MFInvocationQueue"
{?="shouldHandleUntaggedResponse"b1"didReceiveResponse"b1"didFinishSelect"b1"didDisconnect"b1"setServerMessageCount"b1"setHighestModSequence"b1"willRemoveDelegation"b1"shouldStartIdle"b1}
@"MFIMAPDownloadCache"
@"MFIMAPCommandPipeline"
@"<MFIMAPConnectionDelegate>"
@"<EFCancelable>"
Q24@0:8Q16
v36@0:8@16Q24B32
@24@0:8Q16
@36@0:8Q16@24B32
I40@0:8@16@24@32
I48@0:8@16@24@32@40
v32@0:8@16^{?=@@^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}IIi}24
@"NSFileHandle"
q32@0:8@16Q24
q40@0:8Q16@24Q32
@44@0:8@16I24@28^@36
B56@0:8@16{_NSRange=QQ}24^B40@48
@44@0:8@16^@24B32^B36
@"EFFuture"
@"<MFIMAPMailboxTaskManager>"
@24@0:8^B16
@"NSString"24@0:8^B16
@"ECSubject"16@0:8
@"NSDate"16@0:8
@"<ECMailbox>"16@0:8
@"ECMessageFlags"16@0:8
@"<ECMimeBody>"16@0:8
@"NSDictionary"16@0:8
@"ECAngleBracketIDHash"16@0:8
@"NSSet"16@0:8
@"<ECMailAccount>"16@0:8
@"<ECMessageHeaders>"16@0:8
@"NSUUID"16@0:8
@"<EDIndexableAccount>"16@0:8
@"<EDIndexableMailbox>"16@0:8
@"EMReadLater"16@0:8
@"EMFollowUp"16@0:8
@"NSURL"16@0:8
v32@0:8@"NSURL"16@"NSData"24
v24@0:8@"NSDate"16
v24@0:8@"EMReadLater"16
@"<EDAccount>"16@0:8
v24@0:8@"EMFollowUp"16
q24@0:8@16
v52@0:8@16Q24I32q36q44
@"NSDate"
@"EMReadLater"
@"EMFollowUp"
@36@0:8@16@24i32
@"EMSearchableIndexQueryExpression"16@0:8
B24@0:8@"MFMailMessage"16
@"NSString"32@0:8@"MFAttachment"16@"MFMailMessage"24
@"NSData"36@0:8@"NSData"16@"MFMimePart"24B32
@"MailAccount"16@0:8
@"MFMailboxUid"16@0:8
Q24@0:8B16B20
@44@0:8{_NSRange=QQ}16I32^Q36
@36@0:8{_NSRange=QQ}16I32
@36@0:8@16I24@28
Q20@0:8B16
q24@0:8Q16
@52@0:8@16@24I32@36^@44
@60@0:8@16{_NSRange=QQ}24^B40B48^B52
B68@0:8@16{_NSRange=QQ}24^B40@48B56^B60
@32@0:8@16I24B28
@56@0:8@16^@24^B32B40B44^B48
@52@0:8@16^@24^B32B40^B44
@44@0:8@16^B24^B32B40
v36@0:8@16B24@28
v36@0:8I16B20B24@28
{?="isReadOnly"b1"hasUnsavedChangesToMessageData"b1"haveOpenLockFile"b1"compacting"b1"cancelInvalidation"b1"forceInvalidation"b1"isWritingChangesToDisk"b1"isTryingToClose"b1"compactOnClose"b1"reserved"b23}
@"MFMessageCriterion"
@32@0:8@16B24i28
^{os_unfair_recursive_lock_s={os_unfair_lock_s=I}I}16@0:8
v32@0:8@16B24B28
@44@0:8@16^@24^@32B40
@32@0:8#16@24
@"<EDDeliveryAccount>"16@0:8
v24@0:8@"<EDDeliveryAccount>"16
@"<ECMailbox>"24@0:8q16
B24@0:8@"NSURL"16
@"ECAccount"16@0:8
@24@0:8d16
v24@0:8i16i20
#24@0:8@16
i32@0:8@16@24
B44@0:8@16I24@28@36
v28@0:8B16@?20
B28@0:8@16i24
{?="cacheDirtyCount"b16"cacheHasBeenRead"b1"disableCacheWrite"b1"_UNUSED_"b14}
@"MFWeakObjectCache"
@"<EFScheduler>"
@"MFLocalActionReplayHandler"
@40@0:8@16Q24@32
@52@0:8@16Q24@32@40i48
@"MFWeakReferenceHolder"
@"SGMailIntelligenceFollowUpWarning"
@"MFMailMessage"
@"MFDeliveryResult"
@"MFMutableMessageHeaders"
@"ECHTMLStringAndMIMECharset"
@"EMMessageObjectID"
I20@0:8i16
v84@0:8@16@24@32@40@48d56d64@72I80
v44@0:8@16@24B32@36
v40@0:8@16@24q32
v36@0:8@16B24q28
v40@0:8q16q24@32
v48@0:8@16@24@32@40
v32@0:8q16@24
v48@0:8q16q24@32@40
v44@0:8@16q24@32B40
v28@0:8@"<ECMessage>"16B24
v36@0:8@"NSArray"16B24@"EDPersistenceDatabaseGenerationWindow"28
v32@0:8@"NSArray"16@"EDPersistenceDatabaseGenerationWindow"24
v32@0:8@"NSData"16@"<EDPersistedMessage>"24
v40@0:8@"NSArray"16@"<EDPersistedMessage>"24@"EDPersistenceDatabaseGenerationWindow"32
v24@0:8@"NSArray"16
v32@0:8@"NSURL"16@"EDPersistenceDatabaseGenerationWindow"24
v32@0:8@"ECMessageFlagChange"16@"NSArray"24
v40@0:8@"ECMessageFlagChange"16@"NSArray"24@"EDPersistenceDatabaseGenerationWindow"32
v32@0:8@"NSDate"16@"NSArray"24
v44@0:8@"NSDate"16@"NSArray"24B32@"EDPersistenceDatabaseGenerationWindow"36
v40@0:8@"NSDate"16@"NSArray"24@"EDPersistenceDatabaseGenerationWindow"32
v40@0:8@"<EDPersistedMessage>"16@"NSDate"24q32
v36@0:8@"NSArray"16B24q28
v28@0:8B16@"NSArray"20
v40@0:8q16q24@"EDPersistenceDatabaseGenerationWindow"32
v48@0:8@"NSSet"16@"NSSet"24@"NSArray"32@"EDPersistenceDatabaseGenerationWindow"40
v32@0:8q16@"NSArray"24
v40@0:8q16@"NSArray"24@"EDPersistenceDatabaseGenerationWindow"32
v48@0:8q16q24@"<EDPersistedMessage>"32@"EDPersistenceDatabaseGenerationWindow"40
v44@0:8@"NSArray"16q24@"NSURL"32B40
v32@0:8q16q24
v32@0:8Q16@24
v40@0:8Q16Q24@32
v32@0:8@16^B24
@40@0:8@16@24@?32
B32@0:8q16@24
B52@0:8q16@24@32@40i48
B36@0:8@16@24i32
B40@0:8@16q24@32
q48@0:8@16@24@32@?40
@52@0:8@16@24@32Q40B48
@68@0:8@16@24@32Q40Q48@56B64
@76@0:8@16@24@32@40Q48B56@60@68
B48@0:8@16q24@32@40
q48@0:8@16@24@32@40
q40@0:8q16@24@32
q40@0:8@16@24@32
q64@0:8@16@24@32@40@48^B56
v32@0:8@16q24
@24@0:8I16B20
v56@0:8@16@24@32^?40r^{?=@@@IfQdII^{sqlite3}B@B}48
v56@0:8^{sqlite3_stmt=}16@24@32^?40^v48
v52@0:8@16@24@32I40Q44
@32@0:8@16Q24
@48@0:8@16@24q32q40
v48@0:8@16@24q32@?40
@36@0:8@16i24Q28
@32@0:8Q16@24
@40@0:8@16{_NSRange=QQ}24
@36@0:8q16I24^B28
I32@0:8@16@24
I24@0:8@16
I32@0:8@16B24B28
Q32@0:8@16Q24
@32@0:8I16B20B24B28
@36@0:8q16I24@28
@44@0:8q16I24@28^B36
@32@0:8q16q24
q32@0:8@16^B24
q28@0:8@16B24
B28@0:8I16@20
Q24@0:8q16
v32@0:8Q16q24
v40@0:8q16@24Q32
v36@0:8B16@20@28
B64@0:8@16@24@32@40@48@56
@32@0:8@16q24
q32@0:8@16@24
v36@0:8@16@24B32
B56@0:8@16q24@32B40B44@48
@40@0:8@16^@24^B32
B32@0:8@16^B24
@60@0:8@16@24I32I36B40{_NSRange=QQ}44
@44@0:8@16@24I32I36B40
@40@0:8@16@24I32I36
@52@0:8@16@24I32{_NSRange=QQ}36
@36@0:8@16@24I32
v64@0:8@16@24I32I36{_NSRange=QQ}40^B56
v56@0:8@16@24I32I36{_NSRange=QQ}40
v40@0:8@16@24I32I36
v52@0:8@16@24I32{_NSRange=QQ}36
v36@0:8@16@24I32
v56@0:8@16B24@28@36I44@48
v44@0:8@16I24@28@?36
@48@0:8@16B24@28@36I44
v44@0:8@16@24I32@36
v36@0:8@16I24@?28
@44@0:8@16I24{_NSRange=QQ}28
@52@0:8@16I24{_NSRange=QQ}28^B44
@36@0:8@16I24^B28
@44@0:8@16@24q32I40
@32@0:8q16^B24
@56@0:8@16I24Q28@36B44@48
@40@0:8q16@24@32
@36@0:8@16B24B28B32
B40@0:8q16@24^Q32
v48@0:8@16@24@32Q40
v56@0:8@16@24@32@40Q48
@"MFAttachmentLibraryDataProvider"
@"<EFSQLValueExpressable>"
@"MFFileCompressionQueue"
@"MFLibrarySearchableIndex"
@"EDWebContentParser"
@"NSCache"
@"EDPersistence"
@"MFPersistenceDatabase_iOS"
@"EDSearchableIndexScheduler"
@"EDMessageQueryParser"
@"MFMessageBodyMigrator"
@"MFMessageAttachmentMigrator"
B24@0:8@"MFLibraryMessage"16
q24@0:8@"NSData"16
@60@0:8@16@24@32B40B44B48@52
@"MFLibraryMessage"
@"MFBufferedDataConsumer"
@32@0:8#16:24
v24@0:8#16
:16@0:8
v24@0:8:16
@40@0:8@16q24@32
@36@0:8Q16^Q24B32
@32@0:8Q16^Q24
@48@0:8Q16^Q24B32B36^B40
@36@0:8q16i24@28
@"CSSuggestion"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"MFDataHolder"16@0:8
@"MFDataHolder"
@44@0:8@16^{__SecTrust=}24^{__SecTrust=}32i40
@"MFCertificateTrustInfo"
B44@0:8^@16^Q24^B32B40
@"MFMessageBody"
v44@0:8i16@20@28@?36
@"<EDAccount>"24@0:8@"NSString"16
@"<EDAccount>"24@0:8@"ACAccount"16
#32@0:8@16^@24
@36@0:8#16@24B32
@"ACAccountStore"
@"EFObservable"16@0:8
f16@0:8
v20@0:8f16
@"EFCancelationToken"
@"RBSProcessMonitor"
@"EFObservable<EFObserver>"
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
v32@0:8@"NSString"16@"NSString"24
@"APSConnection"
@"NSCountedSet"
@28@0:8^@16B24
B20@0:8B16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
@"MFAttachmentManager"
@"MFAttachmentPlaceholder"
@"MFMimePart"
@"NSItemProvider"
@"<MFDataConsumer>"
{CGSize="width"d"height"d}
@"MFAttachment"
@"NSProgress"
@48@0:8@16@24@32^@40
v40@0:8@16q24q32
@56@0:8@16@24@32@40@48
v48@0:8@"MFAttachment"16@"<MFDataConsumer>"24@"NSProgress"32@?<v@?B@"NSError"B>40
@"MFMessage"24@0:8@"MFAttachment"16
@"EDAttachmentPersistenceManager"
@40@0:8@16@24^@32
@56@0:8@16@24q32@40@48
@48@0:8@16q24@32@40
B24@0:8q16
@"NSFileCoordinator"
@"MFLibraryIMAPStore"
@"MFIMAPConnection"
@60@0:8@16@24@32@40B48B52B56
@40@0:8Q16^{__SecTrust=}24@32
^{__SecTrust=}16@0:8
^{__SecTrust=}
@"ECSecureMIMETrustEvaluation"
@"EMCertificateTrustInformation"
@"CertUITrustManager"
v40@0:8@"DAFolderChange"16q24@"NSError"32
@"MFDAFolderChangeResult"
@48@0:8q16@24@32@40
v32@0:8@16@"MFError"24
v60@0:8@16@24@32@40d48B56
v76@0:8@16@24@32@40d48B56Q60Q68
v60@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40d48B56
v76@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40d48B56Q60Q68
v40@0:8*16i24i28@32
B28@0:8@"DAMailMessage"16i24
v40@0:8*16i24i28@"DAMailMessage"32
v24@0:8@"DAMailMessage"16
v52@0:8@16@24@32d40B48
B24@0:8Q16
@"<DAMailboxStreamingContentConsumer>"
@"MFMessage"
@"DAMailMessage"
@"<MFCollectingDataConsumer>"
@"<MFMessageDataConsumerFactory>"
v56@0:8@16@24I32@36B44@?48
B48@0:8@16@24^@32^B40
@44@0:8@16@24i32@36
@44@0:8@16i24@28@36
@"DAFolder"
@28@0:8i16i20B24
@"<MFRequestQueueResponseConsumer>"
@"MFDAMessageStore"
@"<MFRequestQueueResponseConsumer><DAMailAccountStreamConsumerFactory>"
v32@0:8@"DASearchQuery"16@"NSArray"24
v32@0:8@"DASearchQuery"16@"NSError"24
v32@0:8@"DASearchQuery"16@"NSNumber"24
@"MFMailMessageStoreSearchResult"
@"<DAMailboxStreamingContentConsumer>"16@0:8
@"<MFDAStreamingContentConsumer>"
@"<MFCollectingDataConsumer>"24@0:8@"NSString"16
v44@0:8q16@24@32B40
v60@0:8q16@24@32B40Q44Q52
v48@0:8@"NSData"16@"NSString"24@"NSString"32@"NSString"40
v44@0:8q16@"NSString"24@"NSString"32B40
v60@0:8q16@"NSString"24@"NSString"32B40Q44Q52
@"MFProgressFilterDataConsumer"
@"NSData"32@0:8@"NSString"16@"NSURL"24
B24@0:8@"NSError"16
@"ECTransferMessageActionResults"32@0:8@"NSDictionary"16@"NSURL"24
@"ECTransferMessageActionResults"32@0:8@"ECTransferMessageActionItem"16@"NSURL"24
B24@0:8@"NSArray"16
B28@0:8B16@20
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
@56@0:8@16q24@32@40@48
v32@0:8@?16@?24
^{archive=}16@0:8
i40@0:8@16^{archive=}24^@32
i32@0:8^{archive=}16^@24
^{archive_entry=}36@0:8@16Q24B32
i48@0:8@16@24^{archive=}32^@40
B36@0:8@16^@24B32
B40@0:8^{archive=}16@24^@32
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
{_NSRange="location"Q"length"Q}
{_NSRange=QQ}24@0:8@16
@40@0:8^{CentralDirectory=[4C]SSSSIIS}16@24@32
^{CentralHeader=[4C]CCCCSSIIIISSSSSII*}24@0:8@16
^{CentralDirectory=[4C]SSSSIIS}24@0:8@16
{_NSRange=QQ}24@0:8q16
@"MFFileArchiveEntry"
@32@0:8^{CentralHeader=[4C]CCCCSSIIIISSSSSII*}16@24
v52@0:8I16@20Q28@36@44
@"MFIMAPFetchResult"
@"MFCountingDataConsumer"
@"MFBaseFilterDataConsumer"
@64@0:8I16@20Q28B36{_NSRange=QQ}40@56
@44@0:8I16@20Q28@36
@52@0:8I16@20{_NSRange=QQ}28@44
(?="envelope"@"NSArray""internalDate"@"NSDate""messageSize"Q"bodyStructure"@"NSArray""appleRemoteLinks"@"NSArray""bodySectionInfo"{?="section"@"NSString""startOffset"Q"sectionData"@"NSData"}"uid"I"uniqueRemoteId"Q"flags"{?="messageFlags"Q"customFlags"@"NSArray"})
@36@0:8Q16Q24I32
@32@0:8@16@?24
@"MFMessageHeaders"
@32@0:8@16^Q24
C16@0:8
@44@0:8@16@24@32I40
@48@0:8I16I20@24@32@40
B36@0:8^@16^@24I32
(?="store"{?="trueFlags"@"NSArray""falseFlags"@"NSArray""uids"^{__CFArray}}"append"{?="uid"I"flags"@"NSArray""internalDate"i"size"I}"copy"{?="srcUids"^{__CFArray}"dstUids"^{__CFArray}"destinationMailbox"@"NSString"})
@48@0:8@16@24r*32r*40
r*16@0:8
v24@0:8r*16
B24@0:8^Q16
B24@0:8r*16
B32@0:8r*16r*24
^{__CFArray=}20@0:8B16
@36@0:8r*16r*24i32
@"MFIMAPResponse"
v36@0:8@16i24@28
v48@0:8Q16@24@32@40
(_IMAPResponseData="basic"{?="responseCode"i"responseInfoAndOrUserData"@}"capabilities"@"NSArray""number"Q"flags"@"NSArray""status"{?="mailboxName"@"NSString""entries"@"NSDictionary"}"searchResults"@"NSArray""list"{?="mailboxAttributes"Q"separatorAndOrMboxName"@"extraAttributes"@"NSArray"}"fetch"{?="number"Q"items"@"NSArray""modSeqNumber"Q}"quotaRoot"{?="mailboxName"@"NSString""quotaRootNames"@"NSArray"}"quota"{?="quotaRootName"@"NSString""quotas"@"NSArray"}"uidFlags"{?="uids"@"NSString""flagsFetchResult"@"MFIMAPFetchResult""change"b1}"serverInfo"@"NSDictionary""namespace"{?="private"@"NSArray""public"@"NSArray""shared"@"NSArray"}"other"{?="name"@"NSString""parameters"@"NSArray"})
@"NSString"24@0:8@"NSArray"16
v32@0:8@"NSString"16@"NSArray"24
@"NSString"24@0:8@"NSURL"16
@"NSDictionary"32@0:8@"NSIndexSet"16@"NSURL"24
B28@0:8I16@"NSURL"20
q32@0:8@"NSSet"16Q24
q40@0:8Q16@"NSString"24Q32
@"NSData"32@0:8@"MFLibraryMessage"16^B24
@"NSData"24@0:8@"MFLibraryMessage"16
B56@0:8@"MFMimePart"16{_NSRange=QQ}24^B40@"MFProgressFilterDataConsumer"48
@"NSData"32@0:8@"MFMessage<MFIMAPMessage>"16^B24
@"MFMailMessageStoreSearchResult"44@0:8@"MFMessageCriterion"16I24@"NSDate"28^@36
v40@0:8@"NSArray"16@"NSDictionary"24@"NSDictionary"32
@"ECLocalMessageActionResults"24@0:8@"ECLocalMessageAction"16
@"NSSet"24@0:8@"NSSet"16
@"MFMailMessageLibrary"16@0:8
v24@0:8@"MFMailMessageLibrary"16
Q56@0:8@16@24Q32Q40#48
Q48@0:8@16@24@32@40
v76@0:8@16^@24^@32^@40@48@56B64^I68
Q108@0:8@16@24@32B40Q44Q52Q60^B68^{_NSRange=QQ}76^Q84^Q92^Q100
v40@0:8@16I24i28@?32
@48@0:8@16@24@32^B40
B40@0:8B16i20^B24@?32
@"EDPersistenceHookRegistry"
@"EDPersistenceDatabase"
@"<MFAccountsProvider>"
@"MFMailMessageLibraryQueryTransformer"
v48@0:8q16q24@"NSString"32@"NSString"40
v24@0:8@"EDPersistenceDatabaseConnection"16
@"<EDReconciliationQueryProvider>"
@"MFLibraryMessageReconciler"
@"MFLibraryThreadReconciler"
@"EDThreadPersistence"
@"MFMailboxUidTransformer"
v48@0:8@16@24q32q40
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURL"32
v56@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40
@52@0:8@16@24@32@40B48
@"EMMailDropMetadata"
i24@0:8@"EDPersistenceDatabaseConnection"16
@"EDPersistenceDatabaseConnection"
B48@0:8^@16^@24@32@40
B24@0:8^{sqlite3=}16
B32@0:8@16^{sqlite3=}24
B32@0:8^{sqlite3=}16@24
q36@0:8i16@20@28
@"<MFMailMessageLibraryMigratorDelegate>"
Q40@0:8@16Q24@32
@40@0:8@16@24q32
@"NSArray"32@0:8@"MFMessageCriterionConverter"16q24
Q40@0:8@"MFMessageCriterionConverter"16Q24@"NSString"32
q32@0:8@"MFMessageCriterionConverter"16@"NSString"24
@"NSString"40@0:8@"MFMessageCriterionConverter"16@24q32
@"MailAccount"24@0:8@"NSString"16
@"MFMessageCriterionConverter"
@"EDMessagePersistence"
@"NSScanner"
v24@0:8@"NSMutableArray"16
@"NSArray"24@0:8@"<MFMessageBodyStringAccumulator>"16
@"_MFParsedHTMLNode"
@36@0:8q16@24B32
@"EFLazyCache"
@"<MFMessageBodyElement_Private>"
v40@0:8^q16^q24@32
^{__CFDictionary=}
@"<MFMessageBodyElement_Private>"16@0:8
@"MFMessageBodyParser"
@36@0:8@16Q24B32
v40@0:8{_NSRange=QQ}16@32
v32@0:8r^S16Q24
v40@0:8{_NSRange=QQ}16@"NSString"32
v24@0:8@"<MFMessageBodyConsumableInnerTextNode>"16
v32@0:8Q16@"NSString"24
@56@0:8@16@24Q32@40@?48
B44@0:8@16@24@32B40
q24@0:8@"NSURL"16
@"<EDReceivingAccount>"24@0:8@"NSURL"16
@"<EDPersistedMessage>"24@0:8q16
@"NSArray"32@0:8@"NSArray"16@"NSURL"24
@"NSDictionary"56@0:8@"NSArray"16@"NSArray"24Q32@"ECMessageFlagChange"40@?<v@?@"NSArray">48
B44@0:8@"NSArray"16@"NSURL"24@"NSMutableDictionary"32B40
B24@0:8@"<EDBaseMessage>"16
@"NSArray"32@0:8@"ECMessageFlagChange"16@"NSArray"24
v24@0:8@"NSURL"16
@"NSArray"40@0:8@"NSSet"16@"NSSet"24@"NSArray"32
v32@0:8@"NSString"16q24
v32@0:8@"NSData"16@"<EDBaseMessage>"24
v24@0:8@"ECLocalMessageAction"16
v32@0:8@"ECTransferMessageAction"16@"ECTransferMessageActionResults"24
v24@0:8@"<EDBaseMessage>"16
@88@0:8@16@24@32@40@48@56@64@72@80
@"<EFInvocable>"
@104@0:8@16@24@32@40@48@56@64@72@80@88@?96
@112@0:8@16Q24@32@40@48@56@64@72@80@88@96@?104
@52@0:8@16@24@32B40@?44
@"EDMessageTransformer"
@"EMContentRequestOptions"
@"EDMailDropMetadataGenerator"
@"EDListUnsubscribeHandler"
@"<EMContentItemRequestDelegate>"
@32@0:8d16@?24
v24@0:8@?<v@?>16
@"<EFCancelable>"24@0:8@?<v@?@"EFCancelationToken">16
@"<EFCancelable>"32@0:8d16@?<v@?>24
Q32@0:8Q16@24
@"<MFMessageCriterionConverterDelegate>"
@"MFMessageLoadingContext"
@"MFMimeBody"
Q40@0:8Q16Q24Q32
v36@0:8q16@24B32
v28@0:8q16B24
@28@0:8q16B24
@"EFObservable"
@72@0:8@16@24@32@40@48@56@64
q32@0:8q16@24
Q28@0:8@16B24
v64@0:8@16q24q32q40@48@?56
v48@0:8@16q24@32@?40
v52@0:8@16I24@28@36@44
@56@0:8@16Q24@32@40@?48
B40@0:8@16@?24^@32
q32@0:8q16^@24
@"<MFMessageSummaryLoaderProvider>"
@"NSMutableIndexSet"16@0:8
@"NSMutableIndexSet"
^Q16@0:8
v24@0:8^Q16
@"<ECEmailAddressConvertible>"
@"ECSubject"
v32@0:8@"MailAccount"16@"MFMailboxUid"24
@32@0:8@?16@24
v32@0:8@"CXCallObserver"16@"CXCall"24
B28@0:8Q16B24
v28@0:8I16^{__SCNetworkReachability=}20
v32@0:8@16^{__SCDynamicStore=}24
v32@0:8@16i24i28
^{__SCNetworkReachability=}
^{__SCDynamicStore=}
^{__CFRunLoopSource=}
@"CXCallObserver"
^{__CFRunLoop=}
^{__SCPreferences=}
@"RadiosPreferences"
@"CoreTelephonyClient"
@"MFOSXServerIMAPAccount"
@"MFMailDelivery"
@"<MFDeliveryDelegate>"
@"MFAttachmentCompositionContext"
@"<EDAccountsProvider>"
@"EDConversationPersistence"
@"EDDataDetectionPersistence"
@"EDLocalActionPersistence"
@"EDMailboxActionPersistence"
@"EDMailboxPersistence"
@"EDMessageChangeManager"
@"<EDRemoteSearchProvider>"
@"EDSearchableIndexManager"
@"EDServerMessagePersistenceFactory"
@"EDSenderPersistence"
@"EDRemoteContentManager"
@"EDRemoteContentPersistence"
@"EDRichLinkPersistence"
@"EDRemoteContentCacheConfiguration"
@"EMRemoteContentURLCache"
@"EMRemoteContentURLSession"
@"EDReadLaterPersistence"
@"EDSendLaterPersistence"
@"EDBIMIManager"
@"EDRemindMeNotificationController"
@"<EMUserProfileProvider>"
B48@0:8@16@24@32^@40
B48@0:8@"MFMailMessageLibraryMigrator"16@"NSString"24@"EDPersistenceDatabaseConnection"32^@40
v32@0:8@"MFMailMessageLibraryMigrator"16@"EDPersistenceDatabaseConnection"24
v24@0:8@"MFMailMessageLibraryMigrator"16
@72@0:8@16@24Q32@40@48@56@64
B40@0:8Q16^@24@?32
@"_MFSearchMatcherContext"
@32@0:8^@16^@24
@"NSArray"32@0:8^@16^@24
@"EDSearchableIndexPersistence"
v64@0:8@16@24@32@40q48@?56
v56@0:8@16@24@32q40@?48
^{__SecIdentity=}40@0:8@16@24^@32
I32@0:8^{__SecCertificate=}16@24
@24@0:8i16i20
@32@0:8@16i24i28
^{__SecIdentity=}
@"<MFSecureMIMECompositionManagerDelegate>"
q40@0:8@16^B24^B32
r*24@0:8q16
Q32@0:8@16q24
q104@0:8@16@24@32@40q48^@56^@64^@72^B80^i88^@96
Q40@0:8r*16Q24@?32
Q32@0:8@16@?24
@48@0:8r*16Q24@32r*40
Q48@0:8r*16Q24@32r*40
Q32@0:8^{_NSRange=QQ}16^B24
@"MFSMTPResponse"
@36@0:8@16d24B32
@"EFProcessTransaction"
@"BKSProcessAssertion"
@"NSObject<OS_dispatch_source>"
@"<NSCopying>"
@36@0:8@16B24^B28
^{__CFCharacterSet=}16@0:8
v24@0:8r^{?=@b1b1b1b2}16
v24@0:8^{_CommandStackEntry=^{?}@}16
i24@0:8^@16
{?="buffer"[64S]"theString"^{__CFString}"directUniCharBuffer"^S"directCStringBuffer"*"rangeToBuffer"{?="location"q"length"q}"bufferedRangeStart"q"bufferedRangeEnd"q}
@48@0:8:16@24@32@40
@52@0:8:16@24@32Q40B48
@60@0:8:16@24@32@40Q48B56
@68@0:8:16@24@32@40@48Q56B64
@"CastleIMAPAccount"
@44@0:8@16@24i32^{__CFString=}36
@44@0:8@16@24i32^v36
v60@0:8@16@24@32i40^v44^v52
v44@0:8@16@24i32^v36
@44@0:8@16@24B32^@36
B60@0:8@16@24@32^v40B48^@52
v48@0:8@16@24@32^v40
^{__SecPolicy=}24@0:8@16
^{__SecIdentity=}32@0:8@16^@24
@32@0:8^{__SecIdentity=}16^@24
B32@0:8^{__SecIdentity=}16@24
@32@0:8^@16@?24
@36@0:8B16^@20@?28
B40@0:8^{__SecIdentity=}16@24^@32
B52@0:8^{__SecIdentity=}16@24^{__SecPolicy=}32I40^@44
^{__SecCertificate=}32@0:8@16^@24
@32@0:8^{__SecCertificate=}16^@24
@32@0:8^{__SecCertificate=}16@24
^{NtlmGenerator=}
v40@0:8^@16^I24Q32
{?="delegateBeganMimePart"b1"delegateFinishedMimePart"b1"delegateBeganData"b1"delegateFailed"b1"state"b3}
^{SecCmsMessageStr=}
^{SecCmsDigestContextStr=}
^{SecCmsSignedDataStr=}
^{SecCmsEnvelopedDataStr=}
^{SecCmsEncoderStr=}
@28@0:8I16B20B24
@36@0:8B16@20@28
@"MFSMTPConnection"
@"NSTimer"
*16@0:8
v24@0:8*16
@"CPSearchMatcher"
@"YahooAccount"
AAAABBBBCCCCDDDDEEEEFFFFGGGGHHHHIIIIJJJJKKKKLLLLMMMMNNNNOOOOPPPPQQQQRRRRSSSSTTTTUUUUVVVVWWWWXXXXYYYYZZZZaaaabbbbccccddddeeeeffffgggghhhhiiiijjjjkkkkllllmmmmnnnnooooppppqqqqrrrrssssttttuuuuvvvvwwwwxxxxyyyyzzzz0000111122223333444455556666777788889999++++////
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
AAAABBBBCCCCDDDDEEEEFFFFGGGGHHHHIIIIJJJJKKKKLLLLMMMMNNNNOOOOPPPPQQQQRRRRSSSSTTTTUUUUVVVVWWWWXXXXYYYYZZZZaaaabbbbccccddddeeeeffffgggghhhhiiiijjjjkkkkllllmmmmnnnnooooppppqqqqrrrrssssttttuuuuvvvvwwwwxxxxyyyyzzzz0000111122223333444455556666777788889999----____
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_
TOKEN
PLAIN
PTOKEN
WETOKEN
WSTOKEN
GSSAPI
SEARCH
SORT
DISPLAY
ORDEREDSUBJECT
REFERENCES
SIZE
ACCEPT
TEKX
DEFLATE
priv
shared
priv
shared
\Answered
\Flagged
\Deleted
\Seen
\Draft
$Forwarded
$Junk
$NotJunk
Redirected
Forwarded
Junk
NotJunk
$MailFlagBit0
$MailFlagBit1
$MailFlagBit2
$MDNSent
INTERNAL
\All
\Archive
\Drafts
\Flagged
\Junk
\Sent
\Trash
