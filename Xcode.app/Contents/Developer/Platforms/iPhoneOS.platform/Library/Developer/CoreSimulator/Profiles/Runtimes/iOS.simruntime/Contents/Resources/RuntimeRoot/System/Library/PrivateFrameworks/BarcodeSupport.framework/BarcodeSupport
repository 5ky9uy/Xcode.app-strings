%@ %@
timestamp
clientType
barcodeDataType
barcodeURLType
appLinkActivationOpenStrategy
barcodeSourceType
BARCODECLIENTTYPE_OTHER
BARCODECLIENTTYPE_NOTIFICATION_SERVICE
BARCODECLIENTTYPE_SAFARI
(unknown: %i)
BARCODEDATATYPE_INVALID
BARCODEDATATYPE_URL
BARCODEDATATYPE_CONTACT
BARCODEDATATYPE_EMAIL
BARCODEDATATYPE_TELEPHONE
BARCODEDATATYPE_MESSAGE
BARCODEDATATYPE_LOCATION
BARCODEDATATYPE_EVENT
BARCODEDATATYPE_WIFI
BARCODEDATATYPE_HOMEKIT_URL
BARCODEDATATYPE_STRING
BARCODEDATATYPE_OTHER
BARCODEURLTYPE_NON_APPLINK
BARCODEURLTYPE_SINGLE_APPLINK
BARCODEURLTYPE_MULTIPLE_APPLINKS
BARCODEAPPLINKOPENSTRATEGY_OPEN_IN_SAFARI
BARCODEAPPLINKOPENSTRATEGY_OPEN_IN_APP
BARCODESOURCETYPE_QR
BARCODESOURCETYPE_OTHER
BCSDetectedCodeErrorDomain
v24@?0@"<BCSAction>"8@"NSError"16
VNBarcodeSymbology getVNBarcodeSymbologyAppClipCode(void)
BCSDetectedCode.m
VNBarcodeSymbologyAppClipCode
void *VisionLibrary(void)
/System/Library/Frameworks/Vision.framework/Vision
/System/Library/Frameworks/Vision.framework/Contents/MacOS/Vision
detection_time_ms
invalidBarcodeDataType
appLinkPreferredOpenStrategy
INVALIDBARCODEDATATYPE_OTHER
INVALIDBARCODEDATATYPE_URL
INVALIDBARCODEDATATYPE_CONTACT
INVALIDBARCODEDATATYPE_EMAIL
INVALIDBARCODEDATATYPE_TELEPHONE
INVALIDBARCODEDATATYPE_MESSAGE
INVALIDBARCODEDATATYPE_LOCATION
INVALIDBARCODEDATATYPE_EVENT
INVALIDBARCODEDATATYPE_WIFI
INVALIDBARCODEDATATYPE_HOMEKIT_URL
square.and.arrow.up
previewContentType
DATA_DETECTORS_SCANNED_RESULT
CALENDAR_EVENT
CONTACT
STRING
OTHER
BCSActionErrorDomain
v12@?0B8
BCSAction.m
Subclasses must implement this
Open
actionClass
actionDescription
defaultActionDescription
actionInfo
v8@?0
QR Code
qrcode.viewfinder
v16@?0@"UIAction"8
@"UIMenu"24@?0@8@"NSArray"16
qrcode
QR CODE DETECTED
NFC TAG DETECTED
wapi
WLAN QR CODE
WI-FI QR CODE
TEXT QR CODE
APP QR CODE
APP CLIP QR CODE
com.apple.mobilesafari
WEBSITE QR CODE
%@ QR CODE
v16@?0@"NSError"8
(NSError: domain: %@, code: %ld)
/System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
/System/Library/PrivateFrameworks/MobileCoreServices.framework/MobileCoreServices
/AppleInternal/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
void *MobileCoreServicesLibrary(void)
MobileCoreServicesSoftLink.m
LSAppLink
Class getLSAppLinkClass(void)_block_invoke
Unable to find class %s
LSApplicationProxy
Class getLSApplicationProxyClass(void)_block_invoke
LSApplicationRecord
Class getLSApplicationRecordClass(void)_block_invoke
LSApplicationWorkspace
Class getLSApplicationWorkspaceClass(void)_block_invoke
B8@?0
Cancel
v16@?0@"UIAlertAction"8
BarcodeRawData
BarcodeType
SymbolVersion
QRMASK
ErrorCorrectionLevel
RawData
Version
com.apple.AppClipCode
v32@?0@"AVMetadataMachineReadableCodeObject"8Q16^B24
hostsToLastUsedApps
schemesToLastUsedApps
B32@?0@"<BCSApp>"8Q16^B24
com.apple.BarcodeSupport.BCSNFCReaderConnection
com.apple.BarcodeSupport
BCSNFCReaderConnection
wifi
com.apple.BarcodeSupport.BarcodeNotificationService
icsString
BEGIN:VEVENT
BEGIN:VCALENDAR
END:VCALENDAR
BEGIN:VCALENDAR
contact
Copy
Copy Link
doc.on.doc
scannerResult
type
extraPreviewText
Choose Action
address
actions
person.crop.circle.fill
calendar
com.apple.datadetectors.DDShareAction
/System/Library/Frameworks/DataDetectorsCore.framework/DataDetectorsCore
/System/Library/PrivateFrameworks/DataDetectorsCore.framework/DataDetectorsCore
/AppleInternal/Library/Frameworks/DataDetectorsCore.framework/DataDetectorsCore
void *DataDetectorsCoreLibrary(void)
DataDetectorsCoreSoftLink.m
DDScannerResult
Class getDDScannerResultClass(void)_block_invoke
CFStringRef _DDResultCopyExtractedURL(DDResultRef)
BCSDDResultUtilities.m
DDResultCopyExtractedURL
v20@?0B8@"NSError"12
com.apple.BarcodeSupport.Helper
v16@?0@"NSURL"8
street
city
state
country
/System/Library/Frameworks/CoreNFC.framework/CoreNFC
/System/Library/PrivateFrameworks/CoreNFC.framework/CoreNFC
/AppleInternal/Library/Frameworks/CoreNFC.framework/CoreNFC
void *CoreNFCLibrary(void)
CoreNFCSoftLink.m
NFCNDEFMessage
Class getNFCNDEFMessageClass(void)_block_invoke
matmsg:
BODY
mailto:
subject=%@
body=%@
BCSErrorDomain
mailto
DDScannerRef _DDScannerCreate(DDScannerType, DDScannerOptions, CFErrorRef *)
BCSGenericDataParser.m
DDScannerCreate
DDScanQueryRef _DDScanQueryCreateFromString(CFAllocatorRef, CFStringRef, CFRange)
DDScanQueryCreateFromString
Boolean _DDScannerScanQuery(DDScannerRef, DDScanQueryRef)
DDScannerScanQuery
CFArrayRef _DDScannerCopyResultsWithOptions(DDScannerRef, DDScannerCopyResultsOptions)
DDScannerCopyResultsWithOptions
CFRange _DDResultGetRange(DDResultRef)
DDResultGetRange
DDResultCategory _DDResultGetCategory(DDResultRef)
DDResultGetCategory
geo:
http://maps.apple.com/?q=%@
^(-?\d{1,2}(?:\.\d+)?),(-?\d{1,3}(?:\.\d+)?)
public.png
com.apple.BarcodeSupport.Notification
CGImageDestinationRef _CGImageDestinationCreateWithData(CFMutableDataRef, CFStringRef, size_t, CFDictionaryRef)
BCSGraphicsUtilities.m
CGImageDestinationCreateWithData
void *ImageIOLibrary(void)
/System/Library/Frameworks/ImageIO.framework/ImageIO
/System/Library/Frameworks/ImageIO.framework/Contents/MacOS/ImageIO
CFStringRef getkCGImagePropertyPNGCompressionFilter(void)
kCGImagePropertyPNGCompressionFilter
CFStringRef getkCGImagePropertyPNGDictionary(void)
kCGImagePropertyPNGDictionary
CFStringRef getkCGImagePropertyPNGBandCount(void)
kCGImagePropertyPNGBandCount
void _CGImageDestinationAddImage(CGImageDestinationRef, CGImageRef, CFDictionaryRef)
CGImageDestinationAddImage
_Bool _CGImageDestinationFinalize(CGImageDestinationRef)
CGImageDestinationFinalize
CGImageSourceRef _CGImageSourceCreateWithURL(CFURLRef, CFDictionaryRef)
CGImageSourceCreateWithURL
CGImageRef _CGImageSourceCreateImageAtIndex(CGImageSourceRef, size_t, CFDictionaryRef)
CGImageSourceCreateImageAtIndex
ISIcon
Class getISIconClass(void)_block_invoke
void *IconServicesLibrary(void)
/System/Library/PrivateFrameworks/IconServices.framework/IconServices
/System/Library/PrivateFrameworks/IconServices.framework/Contents/MacOS/IconServices
ISImage
Class getISImageClass(void)_block_invoke
void _CGImageRelease(CGImageRef)
CGImageRelease
ISImageDescriptor
Class getISImageDescriptorClass(void)_block_invoke
CIContext
Class getCIContextClass(void)_block_invoke
void *CoreImageLibrary(void)
/System/Library/Frameworks/CoreImage.framework/CoreImage
/System/Library/Frameworks/CoreImage.framework/Contents/MacOS/CoreImage
com.apple.BarcodeSupport.DidActivateNFCReader
com.apple.BarcodeSupport.DidScanNFCTag
com.apple.BarcodeSupport.DidDetectBarcode
com.apple.BarcodeSupport.DidActivateBarcode
com.apple.BarcodeSupport.DidPreviewContent
com.apple.BarcodeSupport.Analytics
tagDataType
@"NSDictionary"8@?0
Invalid
Contact
Email
Telephone
Message
Location
Calendar
WiFi
HomeKit
Text
Other
client
codeType
dataType
applinks
openInApp
contentType
appclip
No usable data found
/System/Library/Frameworks/iCalendar.framework/iCalendar
/System/Library/PrivateFrameworks/iCalendar.framework/iCalendar
/AppleInternal/Library/Frameworks/iCalendar.framework/iCalendar
void *iCalendarLibrary(void)
ICalendarSoftLink.m
ICSDocument
Class getICSDocumentClass(void)_block_invoke
ICSEvent
Class getICSEventClass(void)_block_invoke
invalidDataType
invalidURLScheme
invalidContents
MECARD:
barcodeNotificationCategory
barcodeNotificationDefaultViewCategory
com.apple.BarcodeSupport.Notification.QRCode
com.apple.BarcodeSupport.Notification.Other
com.apple.BarcodeSupport.Notification.Payload
extraPrviewText
previewFooterTitle
previewFooterSubtitle
notificationActions
contentIsPreviewable
QR Code Detected
NFC Tag Detected
Website NFC Tag
%@ NFC Tag
WLAN QR Code
Wi-Fi QR Code
Text QR Code
App QR Code
App Clip QR Code
Passkey QR Code
Apple QR Code
Website QR Code
%@ QR Code
com.apple.Maps
Transfer.vcf
com.apple.MobileAddressBook
v12@?0C8
com.apple.mobilephone
com.apple.InCallService
com.apple.facetime
facetime
facetime-audio
telemergencycall
Choose App to Open URL
SBUserNotificationForcesModalAlertAppearance
SBUserNotificationDisplayActionButtonOnLockScreen
q24@?0@"BCSActionPickerItem"8@"BCSActionPickerItem"16
EKEventStore
Class getEKEventStoreClass(void)_block_invoke
BCSNotification.m
void *EventKitLibrary(void)
/System/Library/Frameworks/EventKit.framework/EventKit
/System/Library/Frameworks/EventKit.framework/Contents/MacOS/EventKit
BOOL _SBSGetScreenLockStatus(Boolean *)
SBSGetScreenLockStatus
void *SpringBoardServicesLibrary(void)
/System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices
/System/Library/PrivateFrameworks/SpringBoardServices.framework/Contents/MacOS/SpringBoardServices
void _SBSRequestPasscodeUnlockUI(void (^__strong)(Boolean))
SBSRequestPasscodeUnlockUI
NSString *getFBSOpenApplicationOptionKeyLaunchOrigin(void)
FBSOpenApplicationOptionKeyLaunchOrigin
void *FrontBoardServicesLibrary(void)
/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
/System/Library/PrivateFrameworks/FrontBoardServices.framework/Contents/MacOS/FrontBoardServices
TLAlertConfiguration
Class getTLAlertConfigurationClass(void)_block_invoke
void *ToneLibraryLibrary(void)
/System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary
/System/Library/PrivateFrameworks/ToneLibrary.framework/Contents/MacOS/ToneLibrary
NSString *getTLAlertTopicPassbookNFCScanComplete(void)
TLAlertTopicPassbookNFCScanComplete
NSString *getFBSOpenApplicationOptionKeyPromptUnlockDevice(void)
FBSOpenApplicationOptionKeyPromptUnlockDevice
NSString *getFBSOpenApplicationOptionKeyUnlockDevice(void)
FBSOpenApplicationOptionKeyUnlockDevice
QR_section_icon
NFC_section_icon
main-screen-scale
com.apple.ios.StoreKitUIService
com.apple.AMSEngagementViewService
AppClips@2x
AppClips@3x
%@.png
CGImageRef _LICreateIconFromCachedBitmap(CFDataRef)
BCSNotificationIcon.mm
LICreateIconFromCachedBitmap
void *MobileIconsLibrary()
/System/Library/PrivateFrameworks/MobileIcons.framework/MobileIcons
/System/Library/PrivateFrameworks/MobileIcons.framework/Contents/MacOS/MobileIcons
com.apple.barcodesupport.qrcode
com.apple.barcodesupport.nfc
v16@?0@"<BCSAction>"8
com.apple.private.barcodesupport.allowNotifications
/System/Library/Frameworks/UIKit.framework/UIKit
/System/Library/PrivateFrameworks/UIKit.framework/UIKit
/AppleInternal/Library/Frameworks/UIKit.framework/UIKit
void *UIKitLibrary(void)
UIKitSoftLink.m
UIAlertAction
Class getUIAlertActionClass(void)_block_invoke
UIAlertController
Class getUIAlertControllerClass(void)_block_invoke
UIApplication
Class getUIApplicationClass(void)_block_invoke
UIImage
Class getUIImageClass(void)_block_invoke
UIPasteboard
Class getUIPasteboardClass(void)_block_invoke
UIAction
Class getUIActionClass(void)_block_invoke
UIActivityViewController
Class getUIActivityViewControllerClass(void)_block_invoke
UIMenu
Class getUIMenuClass(void)_block_invoke
UIView
Class getUIViewClass(void)_block_invoke
https://redirect.health.apple.com/SMARTHealthCard/
https://redirect.health.apple.com/SMARTHealthCard/#
https://redirect.health.apple.com/EU-DCC/#
http
https
maps
maps.apple.com
otpauth
apple-otpauth
x-barcode-datadetectors-action
www.
x-web-search://?%@
shc:/
hc1:
HKSignedClinicalDataSource
Class getHKSignedClinicalDataSourceClass(void)_block_invoke
BCSNSURLExtras.m
void *HealthRecordServicesLibrary(void)
/System/Library/PrivateFrameworks/HealthRecordServices.framework/HealthRecordServices
/System/Library/PrivateFrameworks/HealthRecordServices.framework/Contents/MacOS/HealthRecordServices
HKVerifiableHealthRecordsParser
Class getHKVerifiableHealthRecordsParserClass(void)_block_invoke
void *HealthRecordsExtractionLibrary(void)
/System/Library/PrivateFrameworks/HealthRecordsExtraction.framework/HealthRecordsExtraction
/System/Library/PrivateFrameworks/HealthRecordsExtraction.framework/Contents/MacOS/HealthRecordsExtraction
preferredBundleID
v24@?0@"<BCSParsedData>"8@"NSError"16
v24@?0@"NSURL"8@"NSError"16
com.apple.BarcodeSupport.ParsingService
/System/Library/Frameworks/DataDetectorsUI.framework/DataDetectorsUI
/System/Library/PrivateFrameworks/DataDetectorsUI.framework/DataDetectorsUI
/AppleInternal/Library/Frameworks/DataDetectorsUI.framework/DataDetectorsUI
void *DataDetectorsUILibrary(void)
DataDetectorsUISoftLink.m
DDDetectionController
Class getDDDetectionControllerClass(void)_block_invoke
DDCopyAction
Class getDDCopyActionClass(void)_block_invoke
DDContextMenuAction
Class getDDContextMenuActionClass(void)_block_invoke
DDUIEventForResults
EKEvent *_DDUIEventForResults(EKEventStore *__strong, NSArray *__strong, NSDictionary *__strong)
localized string not found
v16@?0@"<BCSActionPrivate>"8
v16@?0@"<BCSParsedDataPrivate>"8
v24@?0@"NSError"8@"AWDBarcodeSupportCodeDetectedEvent"16
smsto:
sms:%@&body=%@
sms:%@
Search Web in Safari
safari.fill
Search Web
X-HM
com.apple.Home-private
com.apple.Home
Tap here to learn more
targetApplication
Add to Reading List
eyeglasses
Open in Safari
homekit
arrow.up.forward.appclip
health.fill
key.fill
arrow.up.forward.app.fill
Title for the menu to open an application when a QR code is deteced in lock screen
https://found.apple.com/airtag?
com.apple.BarcodeScanner
v24@?0@"CPSClipMetadata"8@"NSError"16
v24@?0@"NSArray"8@"NSError"16
Powered by %@
com.apple.AppStore
com.apple.MobileStore
View in %@
com.apple.Preferences
Add Verification Code in Passwords
Open in %@
Open Link
data
ams.apple.com
amsui.apple.com
amsue.apple.com
one.apple.com
fido
Sign in with passkey
SSReadingList
Class getSSReadingListClass(void)_block_invoke
BCSURLAction.m
void *SafariServicesLibrary(void)
/System/Library/Frameworks/SafariServices.framework/SafariServices
/System/Library/Frameworks/SafariServices.framework/Contents/MacOS/SafariServices
NSString *getCPSSessionLaunchReasonQR(void)
CPSSessionLaunchReasonQR
void *ClipServicesLibrary(void)
/System/Library/PrivateFrameworks/ClipServices.framework/ClipServices
/System/Library/PrivateFrameworks/ClipServices.framework/Contents/MacOS/ClipServices
NSString *getCPSSessionLaunchReasonNFC(void)
CPSSessionLaunchReasonNFC
CPSClipRequest
Class getCPSClipRequestClass(void)_block_invoke
BOOL _CPSClipsFeatureEnabled(void)
CPSClipsFeatureEnabled
CPSClipMetadataRequest
Class getCPSClipMetadataRequestClass(void)_block_invoke
safari
arrow.up.forward.app
x-hm
URL:
smsto
com.apple.SafariViewService
platform-application
_DKKnowledgeStore
Class get_DKKnowledgeStoreClass(void)_block_invoke
BCSUtilities.m
void *CoreDuetLibrary(void)
/System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet
/System/Library/PrivateFrameworks/CoreDuet.framework/Contents/MacOS/CoreDuet
_DKEventQuery
Class get_DKEventQueryClass(void)_block_invoke
_DKSystemEventStreams
Class get_DKSystemEventStreamsClass(void)_block_invoke
_DKQuery
Class get_DKQueryClass(void)_block_invoke
SecTaskRef _SecTaskCreateFromSelf(CFAllocatorRef _Nullable)
SecTaskCreateFromSelf
void *SecurityLibrary(void)
/System/Library/Frameworks/Security.framework/Security
/System/Library/Frameworks/Security.framework/Contents/MacOS/Security
CFTypeRef _SecTaskCopyValueForEntitlement(SecTaskRef, CFStringRef, CFErrorRef *)
SecTaskCopyValueForEntitlement
BEGIN:VCARD
Open App Clip
/System/Library/Frameworks/Contacts.framework/Contacts
/System/Library/PrivateFrameworks/Contacts.framework/Contacts
/AppleInternal/Library/Frameworks/Contacts.framework/Contacts
void *ContactsLibrary(void)
ContactsSoftLink.m
CNContact
Class getCNContactClass(void)_block_invoke
CNContactVCardSerialization
Class getCNContactVCardSerializationClass(void)_block_invoke
CNContactStore
Class getCNContactStoreClass(void)_block_invoke
ssid
password
isWEP
true
false
isHidden
Join Network
payloadData
com.apple.BarcodeSupport.BCSAppClipCodeURLDecoderErrorDomain
WPA2
WPA/WPA2
nopass
WIFI:
softlink:r:path:/System/Library/Frameworks/Vision.framework/Vision
softlink:r:path:/System/Library/PrivateFrameworks/ClipServices.framework/ClipServices
softlink:r:fw:MobileCoreServices
softlink:r:fw:DataDetectorsCore
softlink:r:fw:CoreNFC
softlink:r:path:/System/Library/Frameworks/ImageIO.framework/ImageIO
softlink:r:path:/System/Library/PrivateFrameworks/IconServices.framework/IconServices
softlink:r:path:/System/Library/Frameworks/CoreImage.framework/CoreImage
softlink:r:fw:iCalendar
softlink:r:path:/System/Library/Frameworks/EventKit.framework/EventKit
softlink:r:path:/System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices
softlink:r:path:/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
softlink:r:path:/System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary
softlink:r:path:/System/Library/PrivateFrameworks/ClipServices.framework/ClipServices
softlink:r:path:/System/Library/PrivateFrameworks/MobileIcons.framework/MobileIcons
softlink:r:fw:UIKit
softlink:r:path:/System/Library/PrivateFrameworks/HealthRecordsExtraction.framework/HealthRecordsExtraction
softlink:r:path:/System/Library/PrivateFrameworks/HealthRecordServices.framework/HealthRecordServices
softlink:r:fw:DataDetectorsUI
softlink:r:path:/System/Library/Frameworks/SafariServices.framework/SafariServices
softlink:r:path:/System/Library/PrivateFrameworks/ClipServices.framework/ClipServices
softlink:r:path:/System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet
softlink:r:path:/System/Library/Frameworks/Security.framework/Security
softlink:r:path:/System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices
softlink:r:path:/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
softlink:r:fw:Contacts
parseCodeWithCompletion:
BCSDetectedCode: (%@) did receive VNObservation with symbology %{private}@
BCSShareActionPickerItem: can't find presenting view controller, please set up the action's delegate.
%@: -[BCSAction presentingViewControllerForAction:] must be implemented to perform action.
%@: -[BCSAction presentingViewControllerForAction:] must return non-nil view controller to perform action.
%@: -[BCSAction sourceRectForPopoverActionPicker:] must be implemented to show action picker.
BCSAction: Presenting action picker
BCSActionPickerItem: _actionHandler called in -performAction
BCSActionPickerViewAssistant: No presenting view controller is specified
BCSActionPickerViewAssistant: Host view controller is already presenting a view.
BCSActionPickerViewAssistant: Action picker is already being shown.
BCSAVParsingSession (%p): Created
BCSAVParsingSession (%p): Deallocated
BCSAVParsingSession (%p): Skip processing of same QR code
BCSAVParsingSession: Skipping a QR code since an app clip code was selected a short while ago (< 750ms).
BCSAppRanker: Found last used app for scanned URL
Notification service connection is non-nil when starting reader
Sent invalid barcode detected event to AWD; data type = %d; client type = %d; source type = %d; detection time = %llu; barcodeURLType: %d; appLinkPreferredOpenStrategy: %d; invalid data type = %d
Sent barcode detected event to AWD; data type = %d; client type = %d; source type = %d; detection time = %llu; barcodeURLType: %d; appLinkPreferredOpenStrategy: %d
Sent barcode activated event to AWD; data type = %d; client type = %d; source type = %d; barcodeURLType: %d; appLinkPreferredOpenStrategy: %d
Sent barcode previewed event to AWD; content type = %ld
BCSAWDLogger: Encountered invalid invalidDataType: %ld
BCSCalendarEventParser: Begin parsing
BCSCalendarEventParser: vCalendar/vEvent prefix not found
BCSCalendarEventParser: ics string is not valid
BCSCalendarEventParser: Cannot get calendar from ICSDocument
BCSCalendarEventParser: Found event from payload
BCSCalendarEventParser: Cannot find event from calendar
BCSCIImageExtras: image has multiple QR codes
BCSCopyActionPickerItem: performing action
BCSDataDetectionActionPickerItem: performing action
BCSDataDetectorsSupportedAction: perform the default DD action.
BCSDataDetectorsSupportedAction: -[BCSAction presentingViewControllerForAction:] must be implemented to perform action.
BCSDataDetectorsSupportedAction: -[BCSAction presentingViewControllerForAction:] must return non-nil view controller to perform action.
BCSDataDetectorsSupportedAction: performing default DDAction
BCSDataDetectorsSupportedAction: -[BCSDataDetectorSupportedAction _hostingViewForAction:] must be implemented to perform action.
BCSDataDetectorsSupportedAction: -[BCSDataDetectorSupportedAction _hostingViewForAction:] must return non-nil view controller to perform action.
BCSDataDetectorsSupportedAction: -[BCSDataDetectorSupportedAction _setUpActionMenuIfNeeded:] uses a dummy view for actions and menus, please file a radar!
BCSConfigurationManager: Error getting remote object proxy: %{public}@
BCSDocomoEmailParser: Begin parsing
BCSDocomoEmailParser: Payload length is too short
BCSDocomoEmailParser: matmsg scheme not found
BCSDocomoEmailParser: Parsed valid recipient email
BCSDocomoEmailParser: matmsg has no valid email address, subject, or body
BCSDocomoEmailParser: Parsed email subject
BCSDocomoEmailParser: Parsed email body
BCSDocomoEmailParser: Converted mailto URL cannot be constructed
BCSDocomoEmailParser: Successfully converted matmsg data to mailto link
BCSGenericDataParser: Begin parsing
BCSGenericDataParser: Cannot create DDScanner
BCSGenericDataParser: Cannot create DDScanQuery
BCSGenericDataParser: Did not find any interesting data
BCSGenericDataParser: Failed to get results from scanner
BCSGenericDataParser: Extracted URL from generic string
BCSGenericDataParser: Failed to create scanner result from core result
BCSGenericDataParser: Extracted scanner result from generic string
BCSGeoDataParser: Begin parsing
BCSGeoDataParser: Payload length is too short
BCSGeoDataParser: geo scheme not found.
BCSGeoDataParser: Successfully converted geo link to maps link.
BCSGeoDataParser: invalid latitude and longitude.
BCSGeoDataParser: latitude is out of range.
BCSGeoDataParser: longitude is out of range.
BCSNotificationIcon: Failed to get caches directory with error %{public}@
BCSNotificationIcon: Cannot create folder at URL: %{private}@ with error %{public}@
_bcs_applyTreatmentToIcon: notification icon path is nil
_bcs_applyTreatmentToIcon: Failed to get PNG image data
_bcs_applyTreatmentToIcon: Failed to write PNG image data to disk with error %{public}@
BCSMeCardParser: Begin parsing
BCSMeCardParser: Payload length is too short
BCSMeCardParser: MECARD prefix is not found
BCSMeCardParser: Failed to parse contact from MECARD string
BCSMeCardParser: Found contact from MECARD string
BCSNotification: Setting up UNNotificationAction that will be handled locally with URL %{private}@ and target application %{private}@
BCSNotification: Setting up UNNotificationAction with URL %{private}@
BCSNotification: Handling event action
BCSNotification: error saving EKEvent: %{public}@
BCSNotification: cannot open Calendar app with the event's externalURL
BCSNotification: cannot create folder at URL: %@
BCSNotification: Handling contact action
BCSNotification: error accessing Contacts store: %{public}@
BCSNotification: put up an alert to allow the user to choose app
Failed to create an attachment with url %{private}@ and error %{public}@
BCSNotification: can't find a default URL for action with type: %ld
BCSNotification: User has more than 2 apps to choose from.
Cannot create CFUserNotification with error code: %{public}d
BCSNotificationIcon: target app identifier is nil
BCSNotificationIcon: app proxy is nil
BCSNotificationIcon: processed icon URL after timeout = %@
BCSNotificationIcon: notification icon path is nil
BCSNotificationIcon: icon data from LSApplicationProxy is nil
BCSNotificationIcon: Failed to create icon from cached bitmap
BCSNotificationIcon: Failed to get PNG image data
BCSNotificationIcon: Failed to write PNG image data to disk with error %{public}@
BCSNotificationManager: error adding notification request: %{public}@
BCSNotificationManager: did receive notification response with action identifier %{public}@ and request identifier %{public}@
BarcodeNotificationService: Received parsed barcode data.
BCSNotificationService: Detected QR code is not actionable
BCSNotificationService: Detected QR code has resolved to action of class %@
Cannot connect to remote service with error: %{public}@
BCSNotificationServiceDelegate: Connection rejected for lacking entitlement for pid %d
BCSURLAction: Unable to create HKSignedClinicalDataSource for: %{private}@ error: %{private}@
BCSURLAction: error obtaining result from HKVerifiableHealthRecordsParser: %{private}@
BCSURLAction: obtained multiple HKVerifiableHealthRecordsParsingResult entries: %{private}@
BCSParsingServiceConnection: Error getting remote object proxy: %{public}@
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p QR code is not actionable
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p QR code has resolved to action of class %@
BCSQRCodeParser: no feature detected in the image.
BCSQRCodeParser: we don't support multiple codes in the same image.
BCSQRCodeParser: image has no QR code.
BCSQRCodeParser: Start parsing CIQRCodeFeature %p
BCSQRCodeParser: QR code from CIQRCodeFeature %p has unrecognized format
BCSQRCodeParser: QR code from CIQRCodeFeature %p has type %ld
BCSQRCodeParser: QR code from CIQRCodeFeature %p is not actionable
BCSQRCodeParser: QR code from CIQRCodeFeature %p has resolved to action of class %@
BCSQRCodeParser: QR code payload string has unrecognized format
BCSQRCodeParser: Detected QR code has type %ld
BCSQRCodeParser: Detected QR code is not actionable
BCSQRCodeParser: Detected QR code has resolved to action of class %@
BCSQRCodeParser: QR code payload image has unrecognized format
BCSQRCodeParser: QR code from image has type %ld
BCSQRCodeParser: Finished notification with error %{public}@
BCSQRCodeParser: Finished notification successfully
BCSQRCodeParser: Start parsing AVMetadataMachineReadableCodeObject %p
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p has no basicDescriptor
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p QR code has payload with unrecognized format
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p QR code has type %ld
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p has app clip code version %ld
BCSQRCodeParser: failed to decode app clip code payload with error: %{private}@
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p has app clip code with url %{private}@
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p has non-QR-code type: %@
BCSSMSTODataParser: Begin parsing
BCSSMSTODataParser: Payload length is too short
BCSSMSTODataParser: smsto scheme not found.
BCSNFCCodeParser: Does not recognize NFC URL
BCSNFCCodeParser: Detected NFC URL has type %ld
BCSNFCCodeParser: Error posting notification: %@
BCSNFCCodeParser: Finished posting notification
BCSStringAction: performing search
BCSURLAction: we shouldn't show the non system app name in lock screen for bundle ID: %{private}@
BCSURLAction: -actionPickerItems is called on an invalid action
BCSURLAction: cannot open Home app with sensitive URL.
BCSURLAction: No target application to open
BCSURLAction: Clip is indicated to be available, however clip request failed with CPSErrorClipURLUnavailable. Handling with LSApplicationWorkspace operation.
BCSURLAction: Error performing app clip open action: %{public}@
BCSURLAction: perform action with default app link
BCSURLAction: Opening top ranked UPI handling app
BCSURLAction: perform default action by opening URL
BCSURLAction: detected an Find My URL, skip app clips checking. %{sensitive}@
BCSURLAction: Begin resolving target application for URL
BCSURLAction: URL is blocked from being handled
BCSURLAction: Found app links for URL
BCSURLAction: Resolved default URL action uses app link
BCSURLAction: Failed to get application record %{public}@
BCSURLAction: Ignoring resolved URL with private scheme '%{private}@'
BCSURLAction: Device is locked when resolving target application with bundleID %{private}@ for URL %{private}@
BCSURLAction: Found application for opening URL
BCSURLAction: Cannot find application to open URL
BCSURLActionPickerItem: opening app link
BCSURLActionPickerItem: opening url
BCSURLAction: cannot open Home app with sensitive URL with error: %{private}@
BCSURLDataParser: Begin parsing
BCSURLDataParser: QR code payload, with %ld characters, is too long
BCSURLDataParser: QR code payload has the URL: scheme
BCSURLDataParser: Cannot create URL
BCSURLDataParser: URL has no scheme
BCSURLDataParser: Found HomeKit URL
BCSURLDataParser: Found SMARTHealthCard URL
BCSUtilities: Error opening user activity %{public}@ with payload.
BCSUtilities: Error opening user activity %{public}@
Querying last used date failed for app
_bcs_lastTimeAppWasUsed: Looking up last launch time for app took %.3f ms
User cancelled device unlock.
BCSVCardParser: Begin parsing
BCSVCardParser: Payload length is too short
BCSVCardParser: vCard prefix is not found
BCSVCardParser: Failed to parse contact from vCard string
BCSVCardParser: Found contact from vCard string
BCSWiFiConfigurationAction: Action is either not actionable or -determineActionabilityWithCompletionHandler has not been called
BCSAppClipCodeURLDecoder: App clip code payload [%p] is not actionable
BCSAppClipCodeURLDecoder: App clip code [%p] has resolved to action of class %@
BCSWiFiConfigurationParser: Begin parsing
BCSWiFiConfigurationParser: Payload length is too short
BCSWiFiConfigurationParser: WIFI scheme not found
BCSWiFiConfigurationParser: Network SSID not specified
BCSWiFiConfigurationParser: Illegal authentication type specified
BCSWiFiConfigurationParser: Successfully parsed WiFi Network configuration
f * %
, i 
AWDBarcodeSupportCodeActivatedEvent
NSCopying
BCSDetectedCode
AWDBarcodeSupportCodeDetectedEvent
BCSShareActionPickerItem
AWDBarcodeSupportCodePreviewedEvent
BCSAction
BCSActionPrivate
NSObject
BCSActionPickerItem
BCSNSErrorExtras
BCSActionPickerViewAssistant
BCSActionPickerItemDelegate
BCSAVMetadataMachineReadableCodeObjectExtras
BCSAVParsingSession
BCSAppRanker
BCSApp
BCSNFCReaderConnection
BCSWiFiConfigurationActionPickerItem
BCSAWDLogger
BCSCalendarEventData
BCSParsedDataPrivate
BCSParsedData
NSSecureCoding
NSCoding
BCSCalendarEventParser
BCSDataParser
BCSCIImageExtras
BCSContactData
BCSCopyActionPickerItem
BCSDataDetectionActionPickerItem
DDDetectionControllerInteractionDelegate
BCSDataDetectorsScannerResultData
BCSDataDetectorsSupportedAction
BCSActionDelegate
BarcodeSupportHelperProtocol
BCSConfigurationManager
BCSDocomoEmailParser
BCSGenericDataParser
BCSGeoDataParser
BCSAnalyticsLogger
BCSInvalidDataAction
BCSInvalidParsedData
BCSKeyValueParser
BCSMeCardParser
BCSNotification
BCSNotificationIcon
BCSNotificationManager
UNUserNotificationCenterDelegate
BCSNotificationService
BCSNotificationServiceProtocol
BCSNFCReaderDelegate
BCSNotificationServiceConnection
BCSNotificationServiceDelegate
NSXPCListenerDelegate
BCSNSCoderExtras
BCSNSStringExtras
BCSNSURLExtras
BCSParsedURLData
BCSParser
BarcodeParsingServiceProtocol
BCSParsingServiceConnection
BCSQRCodeParser
BCSSMSTODataParser
BCSNFCCodeParser
BCSStringAction
BCSNSUserDefaults
BCSStringData
BCSURLAction
BCSURLActionPickerItem
BCSURLDataParser
BCSVCardParser
BCSAppClipActionPickerItem
BCSWiFiConfigurationAction
BCSQRCodePayload
BCSCodePayload
BCSNFCCodePayload
BCSWiFiConfigurationData
BCSAppClipCodeURLDecoder
BCSWiFiConfigurationParser
description
dictionaryRepresentation
stringWithFormat:
dictionary
numberWithUnsignedLongLong:
setObject:forKey:
allocWithZone:
init
isMemberOfClass:
copyWithZone:
setTimestamp:
setHasTimestamp:
hasTimestamp
clientType
setClientType:
setHasClientType:
hasClientType
clientTypeAsString:
StringAsClientType:
barcodeDataType
setBarcodeDataType:
setHasBarcodeDataType:
hasBarcodeDataType
barcodeDataTypeAsString:
StringAsBarcodeDataType:
barcodeURLType
setBarcodeURLType:
setHasBarcodeURLType:
hasBarcodeURLType
barcodeURLTypeAsString:
StringAsBarcodeURLType:
appLinkActivationOpenStrategy
setAppLinkActivationOpenStrategy:
setHasAppLinkActivationOpenStrategy:
hasAppLinkActivationOpenStrategy
appLinkActivationOpenStrategyAsString:
StringAsAppLinkActivationOpenStrategy:
barcodeSourceType
setBarcodeSourceType:
setHasBarcodeSourceType:
hasBarcodeSourceType
barcodeSourceTypeAsString:
StringAsBarcodeSourceType:
readFrom:
writeTo:
copyTo:
isEqual:
hash
mergeFrom:
timestamp
_timestamp
_appLinkActivationOpenStrategy
_barcodeDataType
_barcodeSourceType
_barcodeURLType
_clientType
_has
TB,N
TQ,N,V_timestamp
Ti,N,V_clientType
Ti,N,V_barcodeDataType
Ti,N,V_barcodeURLType
Ti,N,V_appLinkActivationOpenStrategy
Ti,N,V_barcodeSourceType
isEqualToString:
setDetectedCode:
sharedParser
parseCodeFromMetadataMachineReadableCodeObject:completionHandler:
symbology
payloadDataValue
appClipCodeMetadataValue
errorWithDomain:code:userInfo:
sharedDecoder
unsignedIntValue
parseEncodedURLData:version:completion:
payloadStringValue
parseCodeFromString:completionHandler:
mrcObject
basicDescriptor
_bcs_probablyContainsSameCodeInBasicDescriptor:
observation
detectedCodeWithMachineReadableObject:
detectedCodeWithBarcodeObservation:
parseCodeWithCompletion:
isLikelyEqualToCode:
.cxx_destruct
_mrcObject
_observation
T@"AVMetadataMachineReadableCodeObject",R,N,V_mrcObject
T@"VNBarcodeObservation",R,N,V_observation
currentHandler
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
setDetectionTimeMs:
setHasDetectionTimeMs:
hasDetectionTimeMs
invalidBarcodeDataType
setInvalidBarcodeDataType:
setHasInvalidBarcodeDataType:
hasInvalidBarcodeDataType
invalidBarcodeDataTypeAsString:
StringAsInvalidBarcodeDataType:
appLinkPreferredOpenStrategy
setAppLinkPreferredOpenStrategy:
setHasAppLinkPreferredOpenStrategy:
hasAppLinkPreferredOpenStrategy
appLinkPreferredOpenStrategyAsString:
StringAsAppLinkPreferredOpenStrategy:
detectionTimeMs
_detectionTimeMs
_appLinkPreferredOpenStrategy
_invalidBarcodeDataType
TQ,N,V_detectionTimeMs
Ti,N,V_invalidBarcodeDataType
Ti,N,V_appLinkPreferredOpenStrategy
initWithAction:
array
urlThatCanBeOpened
addObject:
systemImageNamed:
initWithActivityItems:applicationActivities:
popoverPresentationController
action
delegate
presentingViewControllerForAction:
_setCentersPopoverIfSourceViewNotSet:
presentViewController:animated:completion:
label
icon
performActionWithFBOptions:
canGroupInSubmenu
_itemsToShare
previewContentType
setPreviewContentType:
setHasPreviewContentType:
hasPreviewContentType
previewContentTypeAsString:
StringAsPreviewContentType:
_previewContentType
Ti,N,V_previewContentType
type
initWithData:codePayload:
determineActionabilityWithCompletionHandler:
performDefaultAction
sourceRectForPopoverActionPicker:
actionPickerItems
actionPickerItemsForAction:proposedItems:
showActionPickerWithItems:fromViewController:presentingRect:
localizedDefaultActionDescription
handleFailureInMethod:object:file:lineNumber:description:
arrayWithObjects:count:
localizedActionDescription
dictionaryWithObjects:forKeys:count:
debugDescriptionExtraInfoDictionary
mutableCopy
setObject:forKeyedSubscript:
data
extraPreviewText
codeType
performActionWithOptions:completion:
detectedCode
countByEnumeratingWithState:objects:count:
menuWithTitle:image:identifier:options:children:
actionWithTitle:image:identifier:handler:
useInlineMenu
count
arrayWithObject:
preferItemsInSubmenu
subMenuWithMenuItems:
arrayByAddingObject:
arrayByAddingObjectsFromArray:
contentPreviewString
menuElements
localizedDefaultActionTitle
length
shouldRequireUserToPickTargetApp
clipMetadataRequest
defaultActionTargetApplicationBundleIdentifier
_fallbackDataTypeDisplayString
applicationProxyForIdentifier:
localizedName
getActionWithData:codePayload:completionHandler:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
performAction
showActionPicker
setDelegate:
performDefaultActionWithCompletionHandler:
T@"<BCSActionDelegate>",W,N
T@"NSURL",R,N
T@"NSString",R,C,N
T@"NSArray",R,C,N
debugDescriptionDictionary
appLinks
isInvalidDataAction
isWiFiAction
hasSensitiveURL
setClipMetadataRequest:
isAMSAction
isPasskeyAction
T@"NSDictionary",R,C,N
TB,R,N
Tq,R,N
T@"CPSClipMetadataRequest",&,N
performActionWithCompletion:
menuProvider
shortDescription
menuElementsCount
actionIcon
dataTypeDisplayString
payloadDataType
codePayload
_actionPickerViewAssistant
_detectedCode
_contentPreviewString
_data
_url
_codePayload
T@"<BCSParsedDataPrivate>",R,N,V_data
T@"NSURL",R,N,V_url
T@"<BCSCodePayload>",R,N,V_codePayload
T@"BCSDetectedCode",&,N,V_detectedCode
T@"NSArray",R,N
TQ,R,N
T@?,R,N
T@"NSString",R,N
T@"UIImage",R,N
T@"NSString",R,N,V_contentPreviewString
T@"NSArray",R,C,N,VappLinks
TB,R,N,VisInvalidDataAction
TB,R,N,VisWiFiAction
TB,R,N,VshouldRequireUserToPickTargetApp
TB,R,N,VhasSensitiveURL
T@"CPSClipMetadataRequest",&,N,VclipMetadataRequest
TB,R,N,VisAMSAction
TB,R,N,VisPasskeyAction
T@"<BCSActionDelegate>",W,N,Vdelegate
T@"NSURL",R,N,VurlThatCanBeOpened
initWithLabel:actionHandler:
copy
initWithLabel:action:
didPerformAction
sharedLogger
logBarcodeActivatedEventForAction:
actionPickerItemWithLabel:actionHandler:
shouldDismissAlertWhenActionIsTaken
dataType
actionPickerItemDelegate
setActionPickerItemDelegate:
setIcon:
actionURL
targetApplicationBundleIdentifier
isCopyActionItem
_actionHandler
_action
_copyActionItem
_useInlineMenu
_canGroupInSubmenu
_actionPickerItemDelegate
_label
_icon
_actionURL
_targetApplicationBundleIdentifier
T@"UIImage",&,N,V_icon
T@"<BCSActionPickerItemDelegate>",W,N,V_actionPickerItemDelegate
T@"NSString",R,C,N,V_label
T@"BCSAction",R,W,N,V_action
T@"NSURL",R,C,N,V_actionURL
T@"NSString",R,C,N,V_targetApplicationBundleIdentifier
copyActionItem
TB,R,N,GisCopyActionItem,V_copyActionItem
TB,R,N,V_useInlineMenu
TB,R,N,V_canGroupInSubmenu
domain
code
_bcs_privacyPreservingDescription
presentedViewController
isShowingPicker
_cleanUpAlertController
_addActionWithTitle:style:handler:shouldDismissHandler:
actionWithTitle:style:handler:
addAction:
view
setSourceView:
setSourceRect:
actionPickerItemAlertController:
actionPickerItem:didDismissAlertController:
_alertController
showingPicker
TB,R,N,GisShowingPicker
objectForKeyedSubscript:
isEqualToData:
isEqualToNumber:
integerValue
charValue
stopQRCodeParsingSession
dealloc
_isLikelyLastScannedObject:
startQRCodeParsingSessionWithMetadataObject:completionHandler:
_bestObjectForParsing:
_shouldSkipIncomingObject:
_updateSessionWithMetadataObject:completionHandler:
firstObject
bounds
_temporalStickyFactorForObject:
enumerateObjectsUsingBlock:
objectAtIndex:
updateSessionWithMetadataObjects:completionHandler:
updateSessionWithMetadataObjects:
_parser
_lastScannedCodeBasicDescriptor
_lastScannedTime
orderApps:forLastUsedApp:
bundleIdentifier
indexOfObjectPassingTest:
removeObjectAtIndex:
insertObject:atIndex:
host
_bcs_isUPIURL
scheme
bcs_barcodeSupportDefaults
valueForKey:
removeObjectForKey:
synchronize
orderAppLinks:forLastUsedApp:
orderApplicationRecords:forPreferredBundleID:
setLastUsedApp:forURL:
bundleIdentifierOfLastUsedAppForURL:
targetApplicationProxy
_isNFCEnabled
_enableNFC
_hardwareSupportState
setInterruptionHandler:
startNFCReaderWithDelegate:errorHandler:
stopNFCReaderWithErrorHandler:
checkNFCEnabledWithCompletionHandler:
enableNFCWithCompletionHandler:
checkHardwareSupportStateWithCompletionHandler:
startReaderWithDelegate:errorHandler:interruptionHandler:
stopReaderWithErrorHandler:
disconnect
_notificationServiceConnection
_queue
_awdBarcodeClientType
_awdBarcodeSourceTypeForAction:
_awdBarcodeDataTypeFromAction:
_awdInvalidBarcodeDataTypeFromInvalidData:
_awdBarcodeURLTypeFromURLAction:
_awdBarcodePreferredAppLinkOpenStrategyFromURLAction:
barcodeDetectedEventForAction:
logBarcodeDetectedEvent:startTime:
mainBundle
invalidDataType
appLinkCount
mustOpenAppLinkInApp
logBarcodeDetectedEventForAction:startTime:
logBarcodePreviewedEventForContentType:
_bcs_strictlyDecodeObjectOfClass:forKey:
initWithICSString:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
icsString
_icsString
T@"NSString",R,C,N,V_icsString
_bcs_hasCaseInsensitivePrefix:
_validatedICSString:
initWithInvalidDataType:invalidContents:
initWithICSString:options:error:
calendar
components
removeAllObjects
ICSStringWithOptions:
parseString:
detectorOfType:context:options:
featuresInImage:
messageString
_bcs_stringValueIfQRCode
initWithContact:
contact
_contact
T@"CNContact",R,C,N,V_contact
generalPasteboard
setString:
setURL:
initWithAction:textToCopy:
initWithAction:urlToCopy:
textToCopy
urlToCopy
_textToCopy
_urlToCopy
T@"NSString",R,C,N,V_textToCopy
T@"NSURL",R,C,N,V_urlToCopy
hasUserInterface
isSymbolImage
notificationIconBundleIdentifier
notificationURL
context
sharedController
performAction:fromAlertController:interactionDelegate:
action:didDismissAlertController:
actionWillStart:
actionDidFinish:
actionDidFinish:shouldDismiss:
initWithAction:ddAction:
_ddAction
T@"CNContact",R,N
initWithScannerResult:type:extraPreviewText:
encodeInteger:forKey:
scannerResult
_type
_extraPreviewText
_scannerResult
T@"DDScannerResult",R,N,V_scannerResult
Tq,R,N,V_type
T@"NSString",R,C,N,V_extraPreviewText
coreResult
notificationTitle
arrayWithCapacity:
_performActionAndShowActionPickerIfNeeded:
dd_performAction
performAction:inView:interactionDelegate:
absoluteString
_actionStringsArray
barcodeActionsForContext:URL:result:contact:ics:
_setUpActionMenuIfNeeded
image
title
compactTitle
_hostingViewForAction
initWithFrame:
buttonActionsForURL:result:contact:icsString:context:view:identifier:suggestedActions:defaultAction:
children
identifier
hasPrefix:
_actions
_ddUIMenu
_defaultDDAction
URLWithString:
serviceConnection
remoteObjectProxyWithErrorHandler:
setUpQRCodeControlCenterModuleWithReply:
initWithServiceName:
processAppClipImageWithURL:scale:reply:
interfaceWithProtocol:
setRemoteObjectInterface:
setServiceConnection:
setInvalidationHandler:
resume
setUpQRCodeControlCenterModuleWithCompletionHandler:
processAppClipImageWithURL:scale:completion:
_serviceConnection
T@"NSXPCConnection",&,N,V_serviceConnection
getStreet:city:state:zip:country:
substringToIndex:
lowercaseString
initWithString:startIndex:
keyValuePairs
_bcs_trimmedString
stringWithString:
_bcs_looksLikeEmailAddress
appendString:
_bcs_urlEncodedQueryValue
appendFormat:
initWithURL:type:
objectAtIndexedSubscript:
_parsedDataFromDDResult:decodedString:
initWithURL:type:extraPreviewText:
resultFromCoreResult:
_validateLatitudeAndLongitudeInString:range:
initWithPattern:options:error:
firstMatchInString:options:range:
rangeAtIndex:
substringWithRange:
doubleValue
range
initWithLong:
initWithObjectsAndKeys:
numberWithLong:
defaultManager
URLForDirectory:inDomain:appropriateForURL:create:error:
URLByAppendingPathComponent:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
initWithCGImage:scale:
initWithImages:
setSize:
setScale:
setShape:
prepareImagesForImageDescriptors:
CGImageForImageDescriptor:
_IS_sharedIconCompositorContext
clearCaches
lastPathComponent
URLByAppendingPathComponent:
fileExistsAtPath:isDirectory:
writeToURL:options:error:
_initWithQueue:
_sendEventLazyWithName:payload:
_stringForCodeType:
_stringForDataType:
numberWithUnsignedInteger:
numberWithBool:
logBarcodeDetectedEventForAction:fromBundleID:
_eventPayloadForAction:
numberWithInteger:
didActivateNFCReader
didScanNFCTagOfType:
setInvalidURLScheme:
setInvalidContents:
invalidContents
invalidURLScheme
_invalidDataType
_invalidContents
_invalidURLScheme
Tq,R,N,V_invalidDataType
T@"NSString",C,N,V_invalidContents
T@"NSString",C,N,V_invalidURLScheme
_parseNextKeyValuePair
_indexOfDelimiter:range:
_bcs_unescapedString
rangeOfString:options:range:
_numberOfPreviousBackSlashesFromIndex:withinRange:
characterAtIndex:
_string
_currentIndex
_stringLength
_keyValuePairs
contactsWithMECARDString:error:
_initWithAction:
UUID
UUIDString
_actionTypeStringForQRCode
_actionTypeStringForNFC
_shouldRequireUserToPickTargetApp
_bcs_displayString
_notificationActionFromActionPickerItem:
_shouldHandleActionPickerItemLocally:
canHandleActionLocally
_bcs_isDataDetectorURL
appLink
_actionDescriptionString
_contentIsPreviewable
_shouldManuallyRequireAuthenticationForURL:
actionWithIdentifier:title:url:options:
actionWithIdentifier:title:options:
_supplementActions
initRequiringSecureCoding:
_bcs_isHTTPFamilyURL
_bcs_fullURLDisplayString
encodedData
saveEvent:span:error:
reset
defaultWorkspace
externalURL
_fbOptionsHandlingUnlockIfNecessary
openSensitiveURL:withOptions:error:
removeEvent:span:error:
requestAccessToEntityType:completion:
dataWithContacts:error:
tempVCardFileURL
writeToURL:atomically:
isInstalled
isRestricted
operationToOpenResource:usingApplication:uniqueDocumentIdentifier:sourceIsManaged:userInfo:options:delegate:
start
applicationProxyForSystemPlaceholder:
_LSFailedToOpenURL:withBundle:
requestAccessForEntityType:completionHandler:
shouldSkipBanner
shouldHandleBulletinActionWithIdentifier:
objectForKey:
_handleCalendarEventWithICSString:
_performActionAfterUnlock:
_handleContactInfo:
_showAppPickerAlertWithFBOptions:
performDefaultActionWithFBOptions:
initWithType:
setTopic:
imageURL
setCategoryIdentifier:
_contentExtensionData
setUserInfo:
_title
setTitle:
getClipMetadataSynchronously
clipName
setSubtitle:
setBody:
nfcIcon
setThreadIdentifier:
qrCodeIcon
setShouldHideDate:
setShouldIgnoreDoNotDisturb:
soundWithAlertType:
setAlertTopic:
setSound:
_attachmentIconURL
attachmentWithIdentifier:URL:options:error:
setAttachments:
_defaultURL
setShouldBackgroundDefaultAction:
setDefaultActionURL:
setShouldAuthenticateDefaultAction:
_shouldScheduleBackgroundActionForLaunchBundleID:
_content
requestWithIdentifier:content:trigger:
hasPreferredAppLink
_orderAppLinkActionsByRecency:
_pickerLabelForURLActionPickerItem:
weakToStrongObjectsMapTable
compare:
sortUsingComparator:
notificationForAction:
_tlAlertConfiguration
handleActionWithIdentifier:notificationResponseOriginID:
request
didHandleBulletinActionWithIdentifier:
requestingProcessID
setRequestingProcessID:
_identifier
_attachmentIcon
_localActions
_requestingProcessID
T@"UNNotificationRequest",R,N
Ti,N,V_requestingProcessID
iconNamed:
_clipIconURLForAction:scale:
_notificationIconDataURLForApp:scale:
requestDownloadedIconWithMetadata:completion:
bundleForClass:
URLForResource:withExtension:
iconDataForVariant:
T@"UNNotificationIcon",R,N
T@"NSURL",R,C,N
_configureUserNotificationCenter
initWithBundleIdentifier:
setWantsNotificationResponsesDelivered
removeAllPendingNotificationRequests
_addRequestForNotification:codeType:
_userNotificationCenterForCodeType:
addNotificationRequest:withCompletionHandler:
removePendingNotificationRequestsWithIdentifiers:
removeDeliveredNotificationsWithIdentifiers:
removeObject:
actionIdentifier
notification
_notificationWithIdentifier:
originIdentifier
didReceiveNotificationResponse:
sharedManager
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
invalidate
scheduleNotification:codeType:
withdrawNotificationsWithProcessID:codeType:
_qrCodeUserNotificationCenter
_nfcUserNotificationCenter
_notifications
auditToken
bundleProxyWithAuditToken:error:
_cancelNotificationsForCodeType:
processIdentifier
_didReceiveNotificationResponse:
notifyParsedCodeWithData:codePayload:shouldReplacePreviousNotifications:reply:
cancelNotificationsForCodeType:
startNFCReaderWithDelegate:
stopNFCReader
initWithConnection:
_connection
initWithMachServiceName:options:
nfcReaderStateDidChange:
nfcReaderDidDetectNonNDEFTag
setInterface:forSelector:argumentIndex:ofReply:
notifyParsedCodeWithData:codePayload:shouldReplacePreviousNotifications:withReply:
interruptionHandler
_interruptionHandler
T@?,C,N,V_interruptionHandler
valueForEntitlement:
boolValue
setWithArray:
setClasses:forSelector:argumentIndex:ofReply:
setByAddingObject:
setExportedInterface:
setExportedObject:
listener:shouldAcceptNewConnection:
decodeObjectOfClass:forKey:
whitespaceAndNewlineCharacterSet
addCharactersInString:
stringByTrimmingCharactersInSet:
rangeOfString:
stringWithCapacity:
URLQueryAllowedCharacterSet
removeCharactersInString:
stringByAddingPercentEncodingWithAllowedCharacters:
rangeOfString:options:
_bcs_stringForcingLeftToRightDirection
_bcs_stringWithEnclosingDoubleQuotesRemoved
safari_hasCaseInsensitivePrefix:
substringFromIndex:
safari_hasScheme:
_lp_simplifiedDisplayString
_lp_highLevelDomain
_lp_userVisibleString
componentsWithURL:resolvingAgainstBaseURL:
isEqualToIgnoringCase:
stringByAppendingString:
URLFragmentAllowedCharacterSet
sourceWithQRCodeValue:error:
parseDataSource:options:error:
localizedTypeDisplayNames
_bcs_searchURLWithQuery:
_lp_URLWithUserTypedString:relativeToURL:
_bcs_isMapsURL
_bcs_isSHCURL
_bcs_isRedirectedSHCURL
_bcs_isOtpauthURL
_bcs_hostWithoutWwwDot
_bcs_redirectedHealthURLWithOriginalString:
_bcs_localizedDisplayNameForRedirectedSHCURL
_bcs_appStoreSearchURLWithScheme:
_bcs_URLWithUserTypedString:
initWithURL:type:extraPreviewText:preferredBundleID:
initWithURL:
preferredBundleID
_preferredBundleID
T@"NSString",R,N,V_preferredBundleID
initWithString:
parsingServiceConnection
parseQRCodeString:withReply:
parseQRCodeMetadata:withReply:
parseQRCodeFeature:withReply:
decodeAppClipCodeURLWithEncodedData:codingVersion:requiresAuthorization:withReply:
setPreferredBundleIdentifier:forURL:
setParsingServiceConnection:
_parsingServiceConnection
T@"NSXPCConnection",&,N,V_parsingServiceConnection
stringWithFileSystemRepresentation:length:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
bundleWithURL:
localizedStringForKey:value:table:
_payloadForMRCObject:
_parseMetadataObject:reply:completionHandler:
initWithCGImage:options:
_qrCodeFeatureFromImage:
notificationServiceConnection
descriptor
initWithBarcodeDescriptor:
parseCodeFromImage:completionHandler:
postNotificationAfterParsingCodeFromImage:completion:
T@"BCSNotificationServiceConnection",R,N
parseURL:
initWithNFCPayload:
postNotificationForURL:payload:completionHandler:
initWithLabel:action:url:applicationRecord:
sharedApplication
openURL:options:completionHandler:
initWithSuiteName:
_passkeyActionDescription
targetApplication
_actionDescriptionForURL:application:shouldShowHostNameForSafariURL:
_actionDescriptionWithoutTargetApplicationForURL:
supportsURL:
defaultReadingList
addReadingListItemWithURL:title:previewText:error:
initWithBundleIdentifier:allowPlaceholder:error:
_willOpenInSafari
_commonActionPickerItemsForURL
addObjectsFromArray:
developerType
_systemImageNamed:
initWithLabel:action:appLink:codePayload:
initWithLabel:action:url:applicationRecord:preferApplicationIcon:
targetApplicationRecord
initWithLabel:action:appLink:codePayload:preferApplicationIcon:
_additionalActionPickerItems
_actionPickerItemsForAppClip
_actionPickerItemsForLockScreenVisibleApps
_actionPickerItemsForUnlockedAppLinks
_appclipLaunchReason
sessionProxy
configuration
setLaunchReason:
operationToOpenResource:usingApplication:uniqueDocumentIdentifier:isContentManaged:sourceAuditToken:userInfo:options:delegate:
requestClipWithCompletion:
openURL:withOptions:error:
isLikelyAvailable
sessionConfiguration
_isVisualCode
requestMetadataWithCompletion:
_resolveTargetApplicationForURL:completionHandler:
_resolveAppClipForURL:completion:
_shouldOpenInAppForAppLink:
_shouldBlockHandlingURL:
_queryApplicationRecordForURL:completionHandler:
getAppLinksWithURL:completionHandler:
URLOverrideForURL:
applicationsAvailableForOpeningURL:
isApplicationAvailableToOpenURL:includePrivateURLSchemes:error:
applicationState
isRemovedSystemApp
isPoweredByThirdParty
clipCaption
fullAppName
_actionDescriptionForAppClip
openStrategy
_menuElementForActionPicker:
_isCodeFromQRScanner
_appLinks
_userVisibleAppRecord
_upiApplicationRecords
_deviceDataIsUnavailable
_appStoreSearchURLForUnsupportedScheme
_hasPreferredAppLink
T@"LSApplicationRecord",R,N
TB,R,N,V_hasPreferredAppLink
_applicationIconImageForBundleIdentifier:format:scale:
_applicationRecord
_preferApplicationIcon
_appLink
T@"LSAppLink",R,N,V_appLink
parseURL:originalString:
_canonicalizeMessageURL:
_dataTypeForSchemeIfSupportedByDataDetectors:
initWithURL:resolvingAgainstBaseURL:
setScheme:
setQuery:
path
setPath:
initWithActivityType:
setWebpageURL:
savePayloadInUserActivity:
setFrontBoardOptions:
setIgnoreAppLinkEnabledProperty:
openWithConfiguration:completionHandler:
openUserActivity:withApplicationProxy:options:completionHandler:
knowledgeStoreWithDirectReadOnlyAccess
appInFocusStream
setEventStreams:
startDateSortDescriptorAscending:
setSortDescriptors:
predicateForEventsWithStringValue:
setPredicate:
setLimit:
executeQuery:error:
startDate
dataUsingEncoding:
contactsWithData:error:
getDownloadedIconURLSynchronously
setCountLimit:
initWithCGImage:
clipOpenButtonTitle
_wiFiConfigurationData
ssid
password
isWEP
isHidden
_barcodeDescriptor
setNdefMessagePayload:
_nfcPayload
initWithSSID:isWEP:password:isHidden:
_WEP
_hidden
_ssid
_password
T@"NSString",R,C,N,V_ssid
TB,R,N,GisWEP,V_WEP
T@"NSString",R,C,N,V_password
hidden
TB,R,N,GisHidden,V_hidden
decodeURLWithEncodedData:codingVersion:requiresAuthorization:completionHandler:
@24@0:8^{_NSZone=}16
v24@0:8Q16
v20@0:8B16
B16@0:8
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
{?="timestamp"b1"appLinkActivationOpenStrategy"b1"barcodeDataType"b1"barcodeSourceType"b1"barcodeURLType"b1"clientType"b1}
@24@0:8@16
v24@0:8@?16
v16@0:8
@"AVMetadataMachineReadableCodeObject"
@"VNBarcodeObservation"
{?="detectionTimeMs"b1"timestamp"b1"appLinkPreferredOpenStrategy"b1"barcodeDataType"b1"barcodeSourceType"b1"barcodeURLType"b1"clientType"b1"invalidBarcodeDataType"b1}
@"NSMutableArray"
{?="timestamp"b1"previewContentType"b1}
v40@0:8@16@24@?32
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"<BCSActionDelegate>"16@0:8
v24@0:8@"<BCSActionDelegate>"16
@"NSURL"16@0:8
@"NSArray"16@0:8
v24@0:8@?<v@?@"NSError">16
q16@0:8
@"NSDictionary"16@0:8
@"CPSClipMetadataRequest"16@0:8
v24@0:8@"CPSClipMetadataRequest"16
@32@0:8@16@24
v32@0:8@16@?24
@?16@0:8
@"BCSActionPickerViewAssistant"
@"<BCSActionDelegate>"
@"NSURL"
@"NSArray"
@"CPSClipMetadataRequest"
@"BCSDetectedCode"
@"NSString"
@"<BCSParsedDataPrivate>"
@"<BCSCodePayload>"
@32@0:8@16@?24
@"BCSAction"
@"<BCSActionPickerItemDelegate>"
@"UIImage"
v32@0:8@16@24
@"UIAlertController"24@0:8@"BCSActionPickerItem"16
v32@0:8@"BCSActionPickerItem"16@"UIAlertController"24
B64@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32
@"UIAlertController"
d24@0:8@16
@"BCSQRCodeParser"
@"NSDictionary"
v40@0:8@16@?24@?32
@"BCSNotificationServiceConnection"
@"NSObject<OS_dispatch_queue>"
v32@0:8@16Q24
v24@0:8q16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"<BCSParsedData>"24@0:8@"NSString"16
@"CNContact"
v28@0:8@16B24
v32@0:8@"DDAction"16@"UIAlertController"24
v24@0:8@"DDAction"16
v28@0:8@"DDAction"16B24
@"DDAction"
@40@0:8@16q24@32
@"DDScannerResult"
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
@"UIViewController"24@0:8@"<BCSAction>"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"<BCSAction>"16
@"NSArray"32@0:8@"<BCSAction>"16@"NSArray"24
@"UIMenu"
@"DDUIAction"
v40@0:8@16d24@?32
v24@0:8@?<v@?B@"NSError">16
v40@0:8@"NSURL"16d24@?<v@?@"NSURL">32
@"NSXPCConnection"
@32@0:8^{__DDResult=}16@24
@40@0:8@16{_NSRange=QQ}24
@24@0:8q16
@32@0:8q16@24
@32@0:8@16Q24
Q40@0:8@16{_NSRange=QQ}24
Q40@0:8Q16{_NSRange=QQ}24
@"NSMutableDictionary"
@"BCSNotificationIcon"
@32@0:8@16d24
@28@0:8@16f24
@"<BCSAction>"
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
v32@0:8@16q24
v28@0:8i16q20
@"UNUserNotificationCenter"
@"NSMutableSet"
v44@0:8@16@24B32@?36
v44@0:8@"<BCSParsedData>"16@"<BCSCodePayload>"24B32@?<v@?@"NSError"@"AWDBarcodeSupportCodeDetectedEvent">36
v24@0:8@"UNNotificationResponse"16
v24@0:8@"<BCSNFCReaderDelegate>"16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@32@0:8#16@24
@32@0:8@16q24
@48@0:8@16q24@32@40
v44@0:8@16Q24B32@?36
v32@0:8@"NSString"16@?<v@?@"<BCSParsedData>"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"<BCSParsedData>"@"NSError">24
v32@0:8@"CIQRCodeFeature"16@?<v@?@"<BCSParsedData>"@"NSError">24
v32@0:8@"NSString"16@"NSURL"24
v44@0:8@"NSData"16Q24B32@?<v@?@"NSURL"@"NSError">36
@24@0:8^{CGImage=}16
v32@0:8^{CGImage=}16@?24
@"BCSParsingServiceConnection"
@36@0:8@16@24B32
@"LSApplicationRecord"
@52@0:8@16@24@32@40B48
@48@0:8@16@24@32@40
@"LSAppLink"
q24@0:8@16
v24@0:8@"NSUserActivity"16
@"CIBarcodeDescriptor"
@"NFCNDEFMessage"
@40@0:8@16B24@28B36
v40@0:8@16Q24@?32
!$'*
"(%,
!$'*&
%@ %@
timestamp
clientType
barcodeDataType
barcodeURLType
appLinkActivationOpenStrategy
barcodeSourceType
BARCODECLIENTTYPE_OTHER
BARCODECLIENTTYPE_NOTIFICATION_SERVICE
BARCODECLIENTTYPE_SAFARI
(unknown: %i)
BARCODEDATATYPE_INVALID
BARCODEDATATYPE_URL
BARCODEDATATYPE_CONTACT
BARCODEDATATYPE_EMAIL
BARCODEDATATYPE_TELEPHONE
BARCODEDATATYPE_MESSAGE
BARCODEDATATYPE_LOCATION
BARCODEDATATYPE_EVENT
BARCODEDATATYPE_WIFI
BARCODEDATATYPE_HOMEKIT_URL
BARCODEDATATYPE_STRING
BARCODEDATATYPE_OTHER
BARCODEURLTYPE_NON_APPLINK
BARCODEURLTYPE_SINGLE_APPLINK
BARCODEURLTYPE_MULTIPLE_APPLINKS
BARCODEAPPLINKOPENSTRATEGY_OPEN_IN_SAFARI
BARCODEAPPLINKOPENSTRATEGY_OPEN_IN_APP
BARCODESOURCETYPE_QR
BARCODESOURCETYPE_OTHER
BCSDetectedCodeErrorDomain
v24@?0@"<BCSAction>"8@"NSError"16
VNBarcodeSymbology getVNBarcodeSymbologyAppClipCode(void)
BCSDetectedCode.m
VNBarcodeSymbologyAppClipCode
void *VisionLibrary(void)
/System/Library/Frameworks/Vision.framework/Vision
/System/Library/Frameworks/Vision.framework/Contents/MacOS/Vision
detection_time_ms
invalidBarcodeDataType
appLinkPreferredOpenStrategy
INVALIDBARCODEDATATYPE_OTHER
INVALIDBARCODEDATATYPE_URL
INVALIDBARCODEDATATYPE_CONTACT
INVALIDBARCODEDATATYPE_EMAIL
INVALIDBARCODEDATATYPE_TELEPHONE
INVALIDBARCODEDATATYPE_MESSAGE
INVALIDBARCODEDATATYPE_LOCATION
INVALIDBARCODEDATATYPE_EVENT
INVALIDBARCODEDATATYPE_WIFI
INVALIDBARCODEDATATYPE_HOMEKIT_URL
square.and.arrow.up
previewContentType
DATA_DETECTORS_SCANNED_RESULT
CALENDAR_EVENT
CONTACT
STRING
OTHER
BCSActionErrorDomain
v12@?0B8
BCSAction.m
Subclasses must implement this
Open
actionClass
actionDescription
defaultActionDescription
actionInfo
v8@?0
QR Code
qrcode.viewfinder
v16@?0@"UIAction"8
@"UIMenu"24@?0@8@"NSArray"16
qrcode
QR CODE DETECTED
NFC TAG DETECTED
wapi
WLAN QR CODE
WI-FI QR CODE
TEXT QR CODE
APP QR CODE
APP CLIP QR CODE
com.apple.mobilesafari
WEBSITE QR CODE
%@ QR CODE
v16@?0@"NSError"8
(NSError: domain: %@, code: %ld)
/System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
/System/Library/PrivateFrameworks/MobileCoreServices.framework/MobileCoreServices
/AppleInternal/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
void *MobileCoreServicesLibrary(void)
MobileCoreServicesSoftLink.m
LSAppLink
Class getLSAppLinkClass(void)_block_invoke
Unable to find class %s
LSApplicationProxy
Class getLSApplicationProxyClass(void)_block_invoke
LSApplicationRecord
Class getLSApplicationRecordClass(void)_block_invoke
LSApplicationWorkspace
Class getLSApplicationWorkspaceClass(void)_block_invoke
B8@?0
Cancel
v16@?0@"UIAlertAction"8
BarcodeRawData
BarcodeType
SymbolVersion
QRMASK
ErrorCorrectionLevel
RawData
Version
com.apple.AppClipCode
v32@?0@"AVMetadataMachineReadableCodeObject"8Q16^B24
hostsToLastUsedApps
schemesToLastUsedApps
B32@?0@"<BCSApp>"8Q16^B24
com.apple.BarcodeSupport.BCSNFCReaderConnection
com.apple.BarcodeSupport
BCSNFCReaderConnection
wifi
com.apple.BarcodeSupport.BarcodeNotificationService
icsString
BEGIN:VEVENT
BEGIN:VCALENDAR
END:VCALENDAR
BEGIN:VCALENDAR
contact
Copy
Copy Link
doc.on.doc
scannerResult
type
extraPreviewText
Choose Action
address
actions
person.crop.circle.fill
calendar
com.apple.datadetectors.DDShareAction
/System/Library/Frameworks/DataDetectorsCore.framework/DataDetectorsCore
/System/Library/PrivateFrameworks/DataDetectorsCore.framework/DataDetectorsCore
/AppleInternal/Library/Frameworks/DataDetectorsCore.framework/DataDetectorsCore
void *DataDetectorsCoreLibrary(void)
DataDetectorsCoreSoftLink.m
DDScannerResult
Class getDDScannerResultClass(void)_block_invoke
CFStringRef _DDResultCopyExtractedURL(DDResultRef)
BCSDDResultUtilities.m
DDResultCopyExtractedURL
v20@?0B8@"NSError"12
com.apple.BarcodeSupport.Helper
v16@?0@"NSURL"8
street
city
state
country
/System/Library/Frameworks/CoreNFC.framework/CoreNFC
/System/Library/PrivateFrameworks/CoreNFC.framework/CoreNFC
/AppleInternal/Library/Frameworks/CoreNFC.framework/CoreNFC
void *CoreNFCLibrary(void)
CoreNFCSoftLink.m
NFCNDEFMessage
Class getNFCNDEFMessageClass(void)_block_invoke
matmsg:
BODY
mailto:
subject=%@
body=%@
BCSErrorDomain
mailto
DDScannerRef _DDScannerCreate(DDScannerType, DDScannerOptions, CFErrorRef *)
BCSGenericDataParser.m
DDScannerCreate
DDScanQueryRef _DDScanQueryCreateFromString(CFAllocatorRef, CFStringRef, CFRange)
DDScanQueryCreateFromString
Boolean _DDScannerScanQuery(DDScannerRef, DDScanQueryRef)
DDScannerScanQuery
CFArrayRef _DDScannerCopyResultsWithOptions(DDScannerRef, DDScannerCopyResultsOptions)
DDScannerCopyResultsWithOptions
CFRange _DDResultGetRange(DDResultRef)
DDResultGetRange
DDResultCategory _DDResultGetCategory(DDResultRef)
DDResultGetCategory
geo:
http://maps.apple.com/?q=%@
^(-?\d{1,2}(?:\.\d+)?),(-?\d{1,3}(?:\.\d+)?)
public.png
com.apple.BarcodeSupport.Notification
CGImageDestinationRef _CGImageDestinationCreateWithData(CFMutableDataRef, CFStringRef, size_t, CFDictionaryRef)
BCSGraphicsUtilities.m
CGImageDestinationCreateWithData
void *ImageIOLibrary(void)
/System/Library/Frameworks/ImageIO.framework/ImageIO
/System/Library/Frameworks/ImageIO.framework/Contents/MacOS/ImageIO
CFStringRef getkCGImagePropertyPNGCompressionFilter(void)
kCGImagePropertyPNGCompressionFilter
CFStringRef getkCGImagePropertyPNGDictionary(void)
kCGImagePropertyPNGDictionary
CFStringRef getkCGImagePropertyPNGBandCount(void)
kCGImagePropertyPNGBandCount
void _CGImageDestinationAddImage(CGImageDestinationRef, CGImageRef, CFDictionaryRef)
CGImageDestinationAddImage
_Bool _CGImageDestinationFinalize(CGImageDestinationRef)
CGImageDestinationFinalize
CGImageSourceRef _CGImageSourceCreateWithURL(CFURLRef, CFDictionaryRef)
CGImageSourceCreateWithURL
CGImageRef _CGImageSourceCreateImageAtIndex(CGImageSourceRef, size_t, CFDictionaryRef)
CGImageSourceCreateImageAtIndex
ISIcon
Class getISIconClass(void)_block_invoke
void *IconServicesLibrary(void)
/System/Library/PrivateFrameworks/IconServices.framework/IconServices
/System/Library/PrivateFrameworks/IconServices.framework/Contents/MacOS/IconServices
ISImage
Class getISImageClass(void)_block_invoke
void _CGImageRelease(CGImageRef)
CGImageRelease
ISImageDescriptor
Class getISImageDescriptorClass(void)_block_invoke
CIContext
Class getCIContextClass(void)_block_invoke
void *CoreImageLibrary(void)
/System/Library/Frameworks/CoreImage.framework/CoreImage
/System/Library/Frameworks/CoreImage.framework/Contents/MacOS/CoreImage
com.apple.BarcodeSupport.DidActivateNFCReader
com.apple.BarcodeSupport.DidScanNFCTag
com.apple.BarcodeSupport.DidDetectBarcode
com.apple.BarcodeSupport.DidActivateBarcode
com.apple.BarcodeSupport.DidPreviewContent
com.apple.BarcodeSupport.Analytics
tagDataType
@"NSDictionary"8@?0
Invalid
Contact
Email
Telephone
Message
Location
Calendar
WiFi
HomeKit
Text
Other
client
codeType
dataType
applinks
openInApp
contentType
appclip
No usable data found
/System/Library/Frameworks/iCalendar.framework/iCalendar
/System/Library/PrivateFrameworks/iCalendar.framework/iCalendar
/AppleInternal/Library/Frameworks/iCalendar.framework/iCalendar
void *iCalendarLibrary(void)
ICalendarSoftLink.m
ICSDocument
Class getICSDocumentClass(void)_block_invoke
ICSEvent
Class getICSEventClass(void)_block_invoke
invalidDataType
invalidURLScheme
invalidContents
MECARD:
barcodeNotificationCategory
barcodeNotificationDefaultViewCategory
com.apple.BarcodeSupport.Notification.QRCode
com.apple.BarcodeSupport.Notification.Other
com.apple.BarcodeSupport.Notification.Payload
extraPrviewText
previewFooterTitle
previewFooterSubtitle
notificationActions
contentIsPreviewable
QR Code Detected
NFC Tag Detected
Website NFC Tag
%@ NFC Tag
WLAN QR Code
Wi-Fi QR Code
Text QR Code
App QR Code
App Clip QR Code
Passkey QR Code
Apple QR Code
Website QR Code
%@ QR Code
com.apple.Maps
Transfer.vcf
com.apple.MobileAddressBook
v12@?0C8
com.apple.mobilephone
com.apple.InCallService
com.apple.facetime
facetime
facetime-audio
telemergencycall
Choose App to Open URL
SBUserNotificationForcesModalAlertAppearance
SBUserNotificationDisplayActionButtonOnLockScreen
q24@?0@"BCSActionPickerItem"8@"BCSActionPickerItem"16
EKEventStore
Class getEKEventStoreClass(void)_block_invoke
BCSNotification.m
void *EventKitLibrary(void)
/System/Library/Frameworks/EventKit.framework/EventKit
/System/Library/Frameworks/EventKit.framework/Contents/MacOS/EventKit
BOOL _SBSGetScreenLockStatus(Boolean *)
SBSGetScreenLockStatus
void *SpringBoardServicesLibrary(void)
/System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices
/System/Library/PrivateFrameworks/SpringBoardServices.framework/Contents/MacOS/SpringBoardServices
void _SBSRequestPasscodeUnlockUI(void (^__strong)(Boolean))
SBSRequestPasscodeUnlockUI
NSString *getFBSOpenApplicationOptionKeyLaunchOrigin(void)
FBSOpenApplicationOptionKeyLaunchOrigin
void *FrontBoardServicesLibrary(void)
/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
/System/Library/PrivateFrameworks/FrontBoardServices.framework/Contents/MacOS/FrontBoardServices
TLAlertConfiguration
Class getTLAlertConfigurationClass(void)_block_invoke
void *ToneLibraryLibrary(void)
/System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary
/System/Library/PrivateFrameworks/ToneLibrary.framework/Contents/MacOS/ToneLibrary
NSString *getTLAlertTopicPassbookNFCScanComplete(void)
TLAlertTopicPassbookNFCScanComplete
NSString *getFBSOpenApplicationOptionKeyPromptUnlockDevice(void)
FBSOpenApplicationOptionKeyPromptUnlockDevice
NSString *getFBSOpenApplicationOptionKeyUnlockDevice(void)
FBSOpenApplicationOptionKeyUnlockDevice
QR_section_icon
NFC_section_icon
main-screen-scale
com.apple.ios.StoreKitUIService
com.apple.AMSEngagementViewService
AppClips@2x
AppClips@3x
%@.png
CGImageRef _LICreateIconFromCachedBitmap(CFDataRef)
BCSNotificationIcon.mm
LICreateIconFromCachedBitmap
void *MobileIconsLibrary()
/System/Library/PrivateFrameworks/MobileIcons.framework/MobileIcons
/System/Library/PrivateFrameworks/MobileIcons.framework/Contents/MacOS/MobileIcons
com.apple.barcodesupport.qrcode
com.apple.barcodesupport.nfc
v16@?0@"<BCSAction>"8
com.apple.private.barcodesupport.allowNotifications
/System/Library/Frameworks/UIKit.framework/UIKit
/System/Library/PrivateFrameworks/UIKit.framework/UIKit
/AppleInternal/Library/Frameworks/UIKit.framework/UIKit
void *UIKitLibrary(void)
UIKitSoftLink.m
UIAlertAction
Class getUIAlertActionClass(void)_block_invoke
UIAlertController
Class getUIAlertControllerClass(void)_block_invoke
UIApplication
Class getUIApplicationClass(void)_block_invoke
UIImage
Class getUIImageClass(void)_block_invoke
UIPasteboard
Class getUIPasteboardClass(void)_block_invoke
UIAction
Class getUIActionClass(void)_block_invoke
UIActivityViewController
Class getUIActivityViewControllerClass(void)_block_invoke
UIMenu
Class getUIMenuClass(void)_block_invoke
UIView
Class getUIViewClass(void)_block_invoke
https://redirect.health.apple.com/SMARTHealthCard/
https://redirect.health.apple.com/SMARTHealthCard/#
https://redirect.health.apple.com/EU-DCC/#
http
https
maps
maps.apple.com
otpauth
apple-otpauth
x-barcode-datadetectors-action
www.
x-web-search://?%@
shc:/
hc1:
HKSignedClinicalDataSource
Class getHKSignedClinicalDataSourceClass(void)_block_invoke
BCSNSURLExtras.m
void *HealthRecordServicesLibrary(void)
/System/Library/PrivateFrameworks/HealthRecordServices.framework/HealthRecordServices
/System/Library/PrivateFrameworks/HealthRecordServices.framework/Contents/MacOS/HealthRecordServices
HKVerifiableHealthRecordsParser
Class getHKVerifiableHealthRecordsParserClass(void)_block_invoke
void *HealthRecordsExtractionLibrary(void)
/System/Library/PrivateFrameworks/HealthRecordsExtraction.framework/HealthRecordsExtraction
/System/Library/PrivateFrameworks/HealthRecordsExtraction.framework/Contents/MacOS/HealthRecordsExtraction
preferredBundleID
v24@?0@"<BCSParsedData>"8@"NSError"16
v24@?0@"NSURL"8@"NSError"16
com.apple.BarcodeSupport.ParsingService
/System/Library/Frameworks/DataDetectorsUI.framework/DataDetectorsUI
/System/Library/PrivateFrameworks/DataDetectorsUI.framework/DataDetectorsUI
/AppleInternal/Library/Frameworks/DataDetectorsUI.framework/DataDetectorsUI
void *DataDetectorsUILibrary(void)
DataDetectorsUISoftLink.m
DDDetectionController
Class getDDDetectionControllerClass(void)_block_invoke
DDCopyAction
Class getDDCopyActionClass(void)_block_invoke
DDContextMenuAction
Class getDDContextMenuActionClass(void)_block_invoke
DDUIEventForResults
EKEvent *_DDUIEventForResults(EKEventStore *__strong, NSArray *__strong, NSDictionary *__strong)
localized string not found
v16@?0@"<BCSActionPrivate>"8
v16@?0@"<BCSParsedDataPrivate>"8
v24@?0@"NSError"8@"AWDBarcodeSupportCodeDetectedEvent"16
smsto:
sms:%@&body=%@
sms:%@
Search Web in Safari
safari.fill
Search Web
X-HM
com.apple.Home-private
com.apple.Home
Tap here to learn more
targetApplication
Add to Reading List
eyeglasses
Open in Safari
homekit
arrow.up.forward.appclip
health.fill
key.fill
arrow.up.forward.app.fill
Title for the menu to open an application when a QR code is deteced in lock screen
https://found.apple.com/airtag?
com.apple.BarcodeScanner
v24@?0@"CPSClipMetadata"8@"NSError"16
v24@?0@"NSArray"8@"NSError"16
Powered by %@
com.apple.AppStore
com.apple.MobileStore
View in %@
com.apple.Preferences
Add Verification Code in Passwords
Open in %@
Open Link
data
ams.apple.com
amsui.apple.com
amsue.apple.com
one.apple.com
fido
Sign in with passkey
SSReadingList
Class getSSReadingListClass(void)_block_invoke
BCSURLAction.m
void *SafariServicesLibrary(void)
/System/Library/Frameworks/SafariServices.framework/SafariServices
/System/Library/Frameworks/SafariServices.framework/Contents/MacOS/SafariServices
NSString *getCPSSessionLaunchReasonQR(void)
CPSSessionLaunchReasonQR
void *ClipServicesLibrary(void)
/System/Library/PrivateFrameworks/ClipServices.framework/ClipServices
/System/Library/PrivateFrameworks/ClipServices.framework/Contents/MacOS/ClipServices
NSString *getCPSSessionLaunchReasonNFC(void)
CPSSessionLaunchReasonNFC
CPSClipRequest
Class getCPSClipRequestClass(void)_block_invoke
BOOL _CPSClipsFeatureEnabled(void)
CPSClipsFeatureEnabled
CPSClipMetadataRequest
Class getCPSClipMetadataRequestClass(void)_block_invoke
safari
arrow.up.forward.app
x-hm
URL:
smsto
com.apple.SafariViewService
platform-application
_DKKnowledgeStore
Class get_DKKnowledgeStoreClass(void)_block_invoke
BCSUtilities.m
void *CoreDuetLibrary(void)
/System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet
/System/Library/PrivateFrameworks/CoreDuet.framework/Contents/MacOS/CoreDuet
_DKEventQuery
Class get_DKEventQueryClass(void)_block_invoke
_DKSystemEventStreams
Class get_DKSystemEventStreamsClass(void)_block_invoke
_DKQuery
Class get_DKQueryClass(void)_block_invoke
SecTaskRef _SecTaskCreateFromSelf(CFAllocatorRef _Nullable)
SecTaskCreateFromSelf
void *SecurityLibrary(void)
/System/Library/Frameworks/Security.framework/Security
/System/Library/Frameworks/Security.framework/Contents/MacOS/Security
CFTypeRef _SecTaskCopyValueForEntitlement(SecTaskRef, CFStringRef, CFErrorRef *)
SecTaskCopyValueForEntitlement
BEGIN:VCARD
Open App Clip
/System/Library/Frameworks/Contacts.framework/Contacts
/System/Library/PrivateFrameworks/Contacts.framework/Contacts
/AppleInternal/Library/Frameworks/Contacts.framework/Contacts
void *ContactsLibrary(void)
ContactsSoftLink.m
CNContact
Class getCNContactClass(void)_block_invoke
CNContactVCardSerialization
Class getCNContactVCardSerializationClass(void)_block_invoke
CNContactStore
Class getCNContactStoreClass(void)_block_invoke
ssid
password
isWEP
true
false
isHidden
Join Network
payloadData
com.apple.BarcodeSupport.BCSAppClipCodeURLDecoderErrorDomain
WPA2
WPA/WPA2
nopass
WIFI:
softlink:r:path:/System/Library/Frameworks/Vision.framework/Vision
softlink:r:path:/System/Library/PrivateFrameworks/ClipServices.framework/ClipServices
softlink:r:fw:MobileCoreServices
softlink:r:fw:DataDetectorsCore
softlink:r:fw:CoreNFC
softlink:r:path:/System/Library/Frameworks/ImageIO.framework/ImageIO
softlink:r:path:/System/Library/PrivateFrameworks/IconServices.framework/IconServices
softlink:r:path:/System/Library/Frameworks/CoreImage.framework/CoreImage
softlink:r:fw:iCalendar
softlink:r:path:/System/Library/Frameworks/EventKit.framework/EventKit
softlink:r:path:/System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices
softlink:r:path:/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
softlink:r:path:/System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary
softlink:r:path:/System/Library/PrivateFrameworks/ClipServices.framework/ClipServices
softlink:r:path:/System/Library/PrivateFrameworks/MobileIcons.framework/MobileIcons
softlink:r:fw:UIKit
softlink:r:path:/System/Library/PrivateFrameworks/HealthRecordsExtraction.framework/HealthRecordsExtraction
softlink:r:path:/System/Library/PrivateFrameworks/HealthRecordServices.framework/HealthRecordServices
softlink:r:fw:DataDetectorsUI
softlink:r:path:/System/Library/Frameworks/SafariServices.framework/SafariServices
softlink:r:path:/System/Library/PrivateFrameworks/ClipServices.framework/ClipServices
softlink:r:path:/System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet
softlink:r:path:/System/Library/Frameworks/Security.framework/Security
softlink:r:path:/System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices
softlink:r:path:/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
softlink:r:fw:Contacts
parseCodeWithCompletion:
BCSDetectedCode: (%@) did receive VNObservation with symbology %{private}@
BCSShareActionPickerItem: can't find presenting view controller, please set up the action's delegate.
%@: -[BCSAction presentingViewControllerForAction:] must be implemented to perform action.
%@: -[BCSAction presentingViewControllerForAction:] must return non-nil view controller to perform action.
%@: -[BCSAction sourceRectForPopoverActionPicker:] must be implemented to show action picker.
BCSAction: Presenting action picker
BCSActionPickerItem: _actionHandler called in -performAction
BCSActionPickerViewAssistant: No presenting view controller is specified
BCSActionPickerViewAssistant: Host view controller is already presenting a view.
BCSActionPickerViewAssistant: Action picker is already being shown.
BCSAVParsingSession (%p): Created
BCSAVParsingSession (%p): Deallocated
BCSAVParsingSession (%p): Skip processing of same QR code
BCSAVParsingSession: Skipping a QR code since an app clip code was selected a short while ago (< 750ms).
BCSAppRanker: Found last used app for scanned URL
Notification service connection is non-nil when starting reader
Sent invalid barcode detected event to AWD; data type = %d; client type = %d; source type = %d; detection time = %llu; barcodeURLType: %d; appLinkPreferredOpenStrategy: %d; invalid data type = %d
Sent barcode detected event to AWD; data type = %d; client type = %d; source type = %d; detection time = %llu; barcodeURLType: %d; appLinkPreferredOpenStrategy: %d
Sent barcode activated event to AWD; data type = %d; client type = %d; source type = %d; barcodeURLType: %d; appLinkPreferredOpenStrategy: %d
Sent barcode previewed event to AWD; content type = %ld
BCSAWDLogger: Encountered invalid invalidDataType: %ld
BCSCalendarEventParser: Begin parsing
BCSCalendarEventParser: vCalendar/vEvent prefix not found
BCSCalendarEventParser: ics string is not valid
BCSCalendarEventParser: Cannot get calendar from ICSDocument
BCSCalendarEventParser: Found event from payload
BCSCalendarEventParser: Cannot find event from calendar
BCSCIImageExtras: image has multiple QR codes
BCSCopyActionPickerItem: performing action
BCSDataDetectionActionPickerItem: performing action
BCSDataDetectorsSupportedAction: perform the default DD action.
BCSDataDetectorsSupportedAction: -[BCSAction presentingViewControllerForAction:] must be implemented to perform action.
BCSDataDetectorsSupportedAction: -[BCSAction presentingViewControllerForAction:] must return non-nil view controller to perform action.
BCSDataDetectorsSupportedAction: performing default DDAction
BCSDataDetectorsSupportedAction: -[BCSDataDetectorSupportedAction _hostingViewForAction:] must be implemented to perform action.
BCSDataDetectorsSupportedAction: -[BCSDataDetectorSupportedAction _hostingViewForAction:] must return non-nil view controller to perform action.
BCSDataDetectorsSupportedAction: -[BCSDataDetectorSupportedAction _setUpActionMenuIfNeeded:] uses a dummy view for actions and menus, please file a radar!
BCSConfigurationManager: Error getting remote object proxy: %{public}@
BCSDocomoEmailParser: Begin parsing
BCSDocomoEmailParser: Payload length is too short
BCSDocomoEmailParser: matmsg scheme not found
BCSDocomoEmailParser: Parsed valid recipient email
BCSDocomoEmailParser: matmsg has no valid email address, subject, or body
BCSDocomoEmailParser: Parsed email subject
BCSDocomoEmailParser: Parsed email body
BCSDocomoEmailParser: Converted mailto URL cannot be constructed
BCSDocomoEmailParser: Successfully converted matmsg data to mailto link
BCSGenericDataParser: Begin parsing
BCSGenericDataParser: Cannot create DDScanner
BCSGenericDataParser: Cannot create DDScanQuery
BCSGenericDataParser: Did not find any interesting data
BCSGenericDataParser: Failed to get results from scanner
BCSGenericDataParser: Extracted URL from generic string
BCSGenericDataParser: Failed to create scanner result from core result
BCSGenericDataParser: Extracted scanner result from generic string
BCSGeoDataParser: Begin parsing
BCSGeoDataParser: Payload length is too short
BCSGeoDataParser: geo scheme not found.
BCSGeoDataParser: Successfully converted geo link to maps link.
BCSGeoDataParser: invalid latitude and longitude.
BCSGeoDataParser: latitude is out of range.
BCSGeoDataParser: longitude is out of range.
BCSNotificationIcon: Failed to get caches directory with error %{public}@
BCSNotificationIcon: Cannot create folder at URL: %{private}@ with error %{public}@
_bcs_applyTreatmentToIcon: notification icon path is nil
_bcs_applyTreatmentToIcon: Failed to get PNG image data
_bcs_applyTreatmentToIcon: Failed to write PNG image data to disk with error %{public}@
BCSMeCardParser: Begin parsing
BCSMeCardParser: Payload length is too short
BCSMeCardParser: MECARD prefix is not found
BCSMeCardParser: Failed to parse contact from MECARD string
BCSMeCardParser: Found contact from MECARD string
BCSNotification: Setting up UNNotificationAction that will be handled locally with URL %{private}@ and target application %{private}@
BCSNotification: Setting up UNNotificationAction with URL %{private}@
BCSNotification: Handling event action
BCSNotification: error saving EKEvent: %{public}@
BCSNotification: cannot open Calendar app with the event's externalURL
BCSNotification: cannot create folder at URL: %@
BCSNotification: Handling contact action
BCSNotification: error accessing Contacts store: %{public}@
BCSNotification: put up an alert to allow the user to choose app
Failed to create an attachment with url %{private}@ and error %{public}@
BCSNotification: can't find a default URL for action with type: %ld
BCSNotification: User has more than 2 apps to choose from.
Cannot create CFUserNotification with error code: %{public}d
BCSNotificationIcon: target app identifier is nil
BCSNotificationIcon: app proxy is nil
BCSNotificationIcon: processed icon URL after timeout = %@
BCSNotificationIcon: notification icon path is nil
BCSNotificationIcon: icon data from LSApplicationProxy is nil
BCSNotificationIcon: Failed to create icon from cached bitmap
BCSNotificationIcon: Failed to get PNG image data
BCSNotificationIcon: Failed to write PNG image data to disk with error %{public}@
BCSNotificationManager: error adding notification request: %{public}@
BCSNotificationManager: did receive notification response with action identifier %{public}@ and request identifier %{public}@
BarcodeNotificationService: Received parsed barcode data.
BCSNotificationService: Detected QR code is not actionable
BCSNotificationService: Detected QR code has resolved to action of class %@
Cannot connect to remote service with error: %{public}@
BCSNotificationServiceDelegate: Connection rejected for lacking entitlement for pid %d
BCSURLAction: Unable to create HKSignedClinicalDataSource for: %{private}@ error: %{private}@
BCSURLAction: error obtaining result from HKVerifiableHealthRecordsParser: %{private}@
BCSURLAction: obtained multiple HKVerifiableHealthRecordsParsingResult entries: %{private}@
BCSParsingServiceConnection: Error getting remote object proxy: %{public}@
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p QR code is not actionable
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p QR code has resolved to action of class %@
BCSQRCodeParser: no feature detected in the image.
BCSQRCodeParser: we don't support multiple codes in the same image.
BCSQRCodeParser: image has no QR code.
BCSQRCodeParser: Start parsing CIQRCodeFeature %p
BCSQRCodeParser: QR code from CIQRCodeFeature %p has unrecognized format
BCSQRCodeParser: QR code from CIQRCodeFeature %p has type %ld
BCSQRCodeParser: QR code from CIQRCodeFeature %p is not actionable
BCSQRCodeParser: QR code from CIQRCodeFeature %p has resolved to action of class %@
BCSQRCodeParser: QR code payload string has unrecognized format
BCSQRCodeParser: Detected QR code has type %ld
BCSQRCodeParser: Detected QR code is not actionable
BCSQRCodeParser: Detected QR code has resolved to action of class %@
BCSQRCodeParser: QR code payload image has unrecognized format
BCSQRCodeParser: QR code from image has type %ld
BCSQRCodeParser: Finished notification with error %{public}@
BCSQRCodeParser: Finished notification successfully
BCSQRCodeParser: Start parsing AVMetadataMachineReadableCodeObject %p
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p has no basicDescriptor
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p QR code has payload with unrecognized format
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p QR code has type %ld
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p has app clip code version %ld
BCSQRCodeParser: failed to decode app clip code payload with error: %{private}@
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p has app clip code with url %{private}@
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p has non-QR-code type: %@
BCSSMSTODataParser: Begin parsing
BCSSMSTODataParser: Payload length is too short
BCSSMSTODataParser: smsto scheme not found.
BCSNFCCodeParser: Does not recognize NFC URL
BCSNFCCodeParser: Detected NFC URL has type %ld
BCSNFCCodeParser: Error posting notification: %@
BCSNFCCodeParser: Finished posting notification
BCSStringAction: performing search
BCSURLAction: we shouldn't show the non system app name in lock screen for bundle ID: %{private}@
BCSURLAction: -actionPickerItems is called on an invalid action
BCSURLAction: cannot open Home app with sensitive URL.
BCSURLAction: No target application to open
BCSURLAction: Clip is indicated to be available, however clip request failed with CPSErrorClipURLUnavailable. Handling with LSApplicationWorkspace operation.
BCSURLAction: Error performing app clip open action: %{public}@
BCSURLAction: perform action with default app link
BCSURLAction: Opening top ranked UPI handling app
BCSURLAction: perform default action by opening URL
BCSURLAction: detected an Find My URL, skip app clips checking. %{sensitive}@
BCSURLAction: Begin resolving target application for URL
BCSURLAction: URL is blocked from being handled
BCSURLAction: Found app links for URL
BCSURLAction: Resolved default URL action uses app link
BCSURLAction: Failed to get application record %{public}@
BCSURLAction: Ignoring resolved URL with private scheme '%{private}@'
BCSURLAction: Device is locked when resolving target application with bundleID %{private}@ for URL %{private}@
BCSURLAction: Found application for opening URL
BCSURLAction: Cannot find application to open URL
BCSURLActionPickerItem: opening app link
BCSURLActionPickerItem: opening url
BCSURLAction: cannot open Home app with sensitive URL with error: %{private}@
BCSURLDataParser: Begin parsing
BCSURLDataParser: QR code payload, with %ld characters, is too long
BCSURLDataParser: QR code payload has the URL: scheme
BCSURLDataParser: Cannot create URL
BCSURLDataParser: URL has no scheme
BCSURLDataParser: Found HomeKit URL
BCSURLDataParser: Found SMARTHealthCard URL
BCSUtilities: Error opening user activity %{public}@ with payload.
BCSUtilities: Error opening user activity %{public}@
Querying last used date failed for app
_bcs_lastTimeAppWasUsed: Looking up last launch time for app took %.3f ms
User cancelled device unlock.
BCSVCardParser: Begin parsing
BCSVCardParser: Payload length is too short
BCSVCardParser: vCard prefix is not found
BCSVCardParser: Failed to parse contact from vCard string
BCSVCardParser: Found contact from vCard string
BCSWiFiConfigurationAction: Action is either not actionable or -determineActionabilityWithCompletionHandler has not been called
BCSAppClipCodeURLDecoder: App clip code payload [%p] is not actionable
BCSAppClipCodeURLDecoder: App clip code [%p] has resolved to action of class %@
BCSWiFiConfigurationParser: Begin parsing
BCSWiFiConfigurationParser: Payload length is too short
BCSWiFiConfigurationParser: WIFI scheme not found
BCSWiFiConfigurationParser: Network SSID not specified
BCSWiFiConfigurationParser: Illegal authentication type specified
BCSWiFiConfigurationParser: Successfully parsed WiFi Network configuration
f * %
, i 
AWDBarcodeSupportCodeActivatedEvent
NSCopying
BCSDetectedCode
AWDBarcodeSupportCodeDetectedEvent
BCSShareActionPickerItem
AWDBarcodeSupportCodePreviewedEvent
BCSAction
BCSActionPrivate
NSObject
BCSActionPickerItem
BCSNSErrorExtras
BCSActionPickerViewAssistant
BCSActionPickerItemDelegate
BCSAVMetadataMachineReadableCodeObjectExtras
BCSAVParsingSession
BCSAppRanker
BCSApp
BCSNFCReaderConnection
BCSWiFiConfigurationActionPickerItem
BCSAWDLogger
BCSCalendarEventData
BCSParsedDataPrivate
BCSParsedData
NSSecureCoding
NSCoding
BCSCalendarEventParser
BCSDataParser
BCSCIImageExtras
BCSContactData
BCSCopyActionPickerItem
BCSDataDetectionActionPickerItem
DDDetectionControllerInteractionDelegate
BCSDataDetectorsScannerResultData
BCSDataDetectorsSupportedAction
BCSActionDelegate
BarcodeSupportHelperProtocol
BCSConfigurationManager
BCSDocomoEmailParser
BCSGenericDataParser
BCSGeoDataParser
BCSAnalyticsLogger
BCSInvalidDataAction
BCSInvalidParsedData
BCSKeyValueParser
BCSMeCardParser
BCSNotification
BCSNotificationIcon
BCSNotificationManager
UNUserNotificationCenterDelegate
BCSNotificationService
BCSNotificationServiceProtocol
BCSNFCReaderDelegate
BCSNotificationServiceConnection
BCSNotificationServiceDelegate
NSXPCListenerDelegate
BCSNSCoderExtras
BCSNSStringExtras
BCSNSURLExtras
BCSParsedURLData
BCSParser
BarcodeParsingServiceProtocol
BCSParsingServiceConnection
BCSQRCodeParser
BCSSMSTODataParser
BCSNFCCodeParser
BCSStringAction
BCSNSUserDefaults
BCSStringData
BCSURLAction
BCSURLActionPickerItem
BCSURLDataParser
BCSVCardParser
BCSAppClipActionPickerItem
BCSWiFiConfigurationAction
BCSQRCodePayload
BCSCodePayload
BCSNFCCodePayload
BCSWiFiConfigurationData
BCSAppClipCodeURLDecoder
BCSWiFiConfigurationParser
description
dictionaryRepresentation
stringWithFormat:
dictionary
numberWithUnsignedLongLong:
setObject:forKey:
allocWithZone:
init
isMemberOfClass:
copyWithZone:
setTimestamp:
setHasTimestamp:
hasTimestamp
clientType
setClientType:
setHasClientType:
hasClientType
clientTypeAsString:
StringAsClientType:
barcodeDataType
setBarcodeDataType:
setHasBarcodeDataType:
hasBarcodeDataType
barcodeDataTypeAsString:
StringAsBarcodeDataType:
barcodeURLType
setBarcodeURLType:
setHasBarcodeURLType:
hasBarcodeURLType
barcodeURLTypeAsString:
StringAsBarcodeURLType:
appLinkActivationOpenStrategy
setAppLinkActivationOpenStrategy:
setHasAppLinkActivationOpenStrategy:
hasAppLinkActivationOpenStrategy
appLinkActivationOpenStrategyAsString:
StringAsAppLinkActivationOpenStrategy:
barcodeSourceType
setBarcodeSourceType:
setHasBarcodeSourceType:
hasBarcodeSourceType
barcodeSourceTypeAsString:
StringAsBarcodeSourceType:
readFrom:
writeTo:
copyTo:
isEqual:
hash
mergeFrom:
timestamp
_timestamp
_appLinkActivationOpenStrategy
_barcodeDataType
_barcodeSourceType
_barcodeURLType
_clientType
_has
TB,N
TQ,N,V_timestamp
Ti,N,V_clientType
Ti,N,V_barcodeDataType
Ti,N,V_barcodeURLType
Ti,N,V_appLinkActivationOpenStrategy
Ti,N,V_barcodeSourceType
isEqualToString:
setDetectedCode:
sharedParser
parseCodeFromMetadataMachineReadableCodeObject:completionHandler:
symbology
payloadDataValue
appClipCodeMetadataValue
errorWithDomain:code:userInfo:
sharedDecoder
unsignedIntValue
parseEncodedURLData:version:completion:
payloadStringValue
parseCodeFromString:completionHandler:
mrcObject
basicDescriptor
_bcs_probablyContainsSameCodeInBasicDescriptor:
observation
detectedCodeWithMachineReadableObject:
detectedCodeWithBarcodeObservation:
parseCodeWithCompletion:
isLikelyEqualToCode:
.cxx_destruct
_mrcObject
_observation
T@"AVMetadataMachineReadableCodeObject",R,N,V_mrcObject
T@"VNBarcodeObservation",R,N,V_observation
currentHandler
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
setDetectionTimeMs:
setHasDetectionTimeMs:
hasDetectionTimeMs
invalidBarcodeDataType
setInvalidBarcodeDataType:
setHasInvalidBarcodeDataType:
hasInvalidBarcodeDataType
invalidBarcodeDataTypeAsString:
StringAsInvalidBarcodeDataType:
appLinkPreferredOpenStrategy
setAppLinkPreferredOpenStrategy:
setHasAppLinkPreferredOpenStrategy:
hasAppLinkPreferredOpenStrategy
appLinkPreferredOpenStrategyAsString:
StringAsAppLinkPreferredOpenStrategy:
detectionTimeMs
_detectionTimeMs
_appLinkPreferredOpenStrategy
_invalidBarcodeDataType
TQ,N,V_detectionTimeMs
Ti,N,V_invalidBarcodeDataType
Ti,N,V_appLinkPreferredOpenStrategy
initWithAction:
array
urlThatCanBeOpened
addObject:
systemImageNamed:
initWithActivityItems:applicationActivities:
popoverPresentationController
action
delegate
presentingViewControllerForAction:
_setCentersPopoverIfSourceViewNotSet:
presentViewController:animated:completion:
label
icon
performActionWithFBOptions:
canGroupInSubmenu
_itemsToShare
previewContentType
setPreviewContentType:
setHasPreviewContentType:
hasPreviewContentType
previewContentTypeAsString:
StringAsPreviewContentType:
_previewContentType
Ti,N,V_previewContentType
type
initWithData:codePayload:
determineActionabilityWithCompletionHandler:
performDefaultAction
sourceRectForPopoverActionPicker:
actionPickerItems
actionPickerItemsForAction:proposedItems:
showActionPickerWithItems:fromViewController:presentingRect:
localizedDefaultActionDescription
handleFailureInMethod:object:file:lineNumber:description:
arrayWithObjects:count:
localizedActionDescription
dictionaryWithObjects:forKeys:count:
debugDescriptionExtraInfoDictionary
mutableCopy
setObject:forKeyedSubscript:
data
extraPreviewText
codeType
performActionWithOptions:completion:
detectedCode
countByEnumeratingWithState:objects:count:
menuWithTitle:image:identifier:options:children:
actionWithTitle:image:identifier:handler:
useInlineMenu
count
arrayWithObject:
preferItemsInSubmenu
subMenuWithMenuItems:
arrayByAddingObject:
arrayByAddingObjectsFromArray:
contentPreviewString
menuElements
localizedDefaultActionTitle
length
shouldRequireUserToPickTargetApp
clipMetadataRequest
defaultActionTargetApplicationBundleIdentifier
_fallbackDataTypeDisplayString
applicationProxyForIdentifier:
localizedName
getActionWithData:codePayload:completionHandler:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
performAction
showActionPicker
setDelegate:
performDefaultActionWithCompletionHandler:
T@"<BCSActionDelegate>",W,N
T@"NSURL",R,N
T@"NSString",R,C,N
T@"NSArray",R,C,N
debugDescriptionDictionary
appLinks
isInvalidDataAction
isWiFiAction
hasSensitiveURL
setClipMetadataRequest:
isAMSAction
isPasskeyAction
T@"NSDictionary",R,C,N
TB,R,N
Tq,R,N
T@"CPSClipMetadataRequest",&,N
performActionWithCompletion:
menuProvider
shortDescription
menuElementsCount
actionIcon
dataTypeDisplayString
payloadDataType
codePayload
_actionPickerViewAssistant
_detectedCode
_contentPreviewString
_data
_url
_codePayload
T@"<BCSParsedDataPrivate>",R,N,V_data
T@"NSURL",R,N,V_url
T@"<BCSCodePayload>",R,N,V_codePayload
T@"BCSDetectedCode",&,N,V_detectedCode
T@"NSArray",R,N
TQ,R,N
T@?,R,N
T@"NSString",R,N
T@"UIImage",R,N
T@"NSString",R,N,V_contentPreviewString
T@"NSArray",R,C,N,VappLinks
TB,R,N,VisInvalidDataAction
TB,R,N,VisWiFiAction
TB,R,N,VshouldRequireUserToPickTargetApp
TB,R,N,VhasSensitiveURL
T@"CPSClipMetadataRequest",&,N,VclipMetadataRequest
TB,R,N,VisAMSAction
TB,R,N,VisPasskeyAction
T@"<BCSActionDelegate>",W,N,Vdelegate
T@"NSURL",R,N,VurlThatCanBeOpened
initWithLabel:actionHandler:
copy
initWithLabel:action:
didPerformAction
sharedLogger
logBarcodeActivatedEventForAction:
actionPickerItemWithLabel:actionHandler:
shouldDismissAlertWhenActionIsTaken
dataType
actionPickerItemDelegate
setActionPickerItemDelegate:
setIcon:
actionURL
targetApplicationBundleIdentifier
isCopyActionItem
_actionHandler
_action
_copyActionItem
_useInlineMenu
_canGroupInSubmenu
_actionPickerItemDelegate
_label
_icon
_actionURL
_targetApplicationBundleIdentifier
T@"UIImage",&,N,V_icon
T@"<BCSActionPickerItemDelegate>",W,N,V_actionPickerItemDelegate
T@"NSString",R,C,N,V_label
T@"BCSAction",R,W,N,V_action
T@"NSURL",R,C,N,V_actionURL
T@"NSString",R,C,N,V_targetApplicationBundleIdentifier
copyActionItem
TB,R,N,GisCopyActionItem,V_copyActionItem
TB,R,N,V_useInlineMenu
TB,R,N,V_canGroupInSubmenu
domain
code
_bcs_privacyPreservingDescription
presentedViewController
isShowingPicker
_cleanUpAlertController
_addActionWithTitle:style:handler:shouldDismissHandler:
actionWithTitle:style:handler:
addAction:
view
setSourceView:
setSourceRect:
actionPickerItemAlertController:
actionPickerItem:didDismissAlertController:
_alertController
showingPicker
TB,R,N,GisShowingPicker
objectForKeyedSubscript:
isEqualToData:
isEqualToNumber:
integerValue
charValue
stopQRCodeParsingSession
dealloc
_isLikelyLastScannedObject:
startQRCodeParsingSessionWithMetadataObject:completionHandler:
_bestObjectForParsing:
_shouldSkipIncomingObject:
_updateSessionWithMetadataObject:completionHandler:
firstObject
bounds
_temporalStickyFactorForObject:
enumerateObjectsUsingBlock:
objectAtIndex:
updateSessionWithMetadataObjects:completionHandler:
updateSessionWithMetadataObjects:
_parser
_lastScannedCodeBasicDescriptor
_lastScannedTime
orderApps:forLastUsedApp:
bundleIdentifier
indexOfObjectPassingTest:
removeObjectAtIndex:
insertObject:atIndex:
host
_bcs_isUPIURL
scheme
bcs_barcodeSupportDefaults
valueForKey:
removeObjectForKey:
synchronize
orderAppLinks:forLastUsedApp:
orderApplicationRecords:forPreferredBundleID:
setLastUsedApp:forURL:
bundleIdentifierOfLastUsedAppForURL:
targetApplicationProxy
_isNFCEnabled
_enableNFC
_hardwareSupportState
setInterruptionHandler:
startNFCReaderWithDelegate:errorHandler:
stopNFCReaderWithErrorHandler:
checkNFCEnabledWithCompletionHandler:
enableNFCWithCompletionHandler:
checkHardwareSupportStateWithCompletionHandler:
startReaderWithDelegate:errorHandler:interruptionHandler:
stopReaderWithErrorHandler:
disconnect
_notificationServiceConnection
_queue
_awdBarcodeClientType
_awdBarcodeSourceTypeForAction:
_awdBarcodeDataTypeFromAction:
_awdInvalidBarcodeDataTypeFromInvalidData:
_awdBarcodeURLTypeFromURLAction:
_awdBarcodePreferredAppLinkOpenStrategyFromURLAction:
barcodeDetectedEventForAction:
logBarcodeDetectedEvent:startTime:
mainBundle
invalidDataType
appLinkCount
mustOpenAppLinkInApp
logBarcodeDetectedEventForAction:startTime:
logBarcodePreviewedEventForContentType:
_bcs_strictlyDecodeObjectOfClass:forKey:
initWithICSString:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
icsString
_icsString
T@"NSString",R,C,N,V_icsString
_bcs_hasCaseInsensitivePrefix:
_validatedICSString:
initWithInvalidDataType:invalidContents:
initWithICSString:options:error:
calendar
components
removeAllObjects
ICSStringWithOptions:
parseString:
detectorOfType:context:options:
featuresInImage:
messageString
_bcs_stringValueIfQRCode
initWithContact:
contact
_contact
T@"CNContact",R,C,N,V_contact
generalPasteboard
setString:
setURL:
initWithAction:textToCopy:
initWithAction:urlToCopy:
textToCopy
urlToCopy
_textToCopy
_urlToCopy
T@"NSString",R,C,N,V_textToCopy
T@"NSURL",R,C,N,V_urlToCopy
hasUserInterface
isSymbolImage
notificationIconBundleIdentifier
notificationURL
context
sharedController
performAction:fromAlertController:interactionDelegate:
action:didDismissAlertController:
actionWillStart:
actionDidFinish:
actionDidFinish:shouldDismiss:
initWithAction:ddAction:
_ddAction
T@"CNContact",R,N
initWithScannerResult:type:extraPreviewText:
encodeInteger:forKey:
scannerResult
_type
_extraPreviewText
_scannerResult
T@"DDScannerResult",R,N,V_scannerResult
Tq,R,N,V_type
T@"NSString",R,C,N,V_extraPreviewText
coreResult
notificationTitle
arrayWithCapacity:
_performActionAndShowActionPickerIfNeeded:
dd_performAction
performAction:inView:interactionDelegate:
absoluteString
_actionStringsArray
barcodeActionsForContext:URL:result:contact:ics:
_setUpActionMenuIfNeeded
image
title
compactTitle
_hostingViewForAction
initWithFrame:
buttonActionsForURL:result:contact:icsString:context:view:identifier:suggestedActions:defaultAction:
children
identifier
hasPrefix:
_actions
_ddUIMenu
_defaultDDAction
URLWithString:
serviceConnection
remoteObjectProxyWithErrorHandler:
setUpQRCodeControlCenterModuleWithReply:
initWithServiceName:
processAppClipImageWithURL:scale:reply:
interfaceWithProtocol:
setRemoteObjectInterface:
setServiceConnection:
setInvalidationHandler:
resume
setUpQRCodeControlCenterModuleWithCompletionHandler:
processAppClipImageWithURL:scale:completion:
_serviceConnection
T@"NSXPCConnection",&,N,V_serviceConnection
getStreet:city:state:zip:country:
substringToIndex:
lowercaseString
initWithString:startIndex:
keyValuePairs
_bcs_trimmedString
stringWithString:
_bcs_looksLikeEmailAddress
appendString:
_bcs_urlEncodedQueryValue
appendFormat:
initWithURL:type:
objectAtIndexedSubscript:
_parsedDataFromDDResult:decodedString:
initWithURL:type:extraPreviewText:
resultFromCoreResult:
_validateLatitudeAndLongitudeInString:range:
initWithPattern:options:error:
firstMatchInString:options:range:
rangeAtIndex:
substringWithRange:
doubleValue
range
initWithLong:
initWithObjectsAndKeys:
numberWithLong:
defaultManager
URLForDirectory:inDomain:appropriateForURL:create:error:
URLByAppendingPathComponent:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
initWithCGImage:scale:
initWithImages:
setSize:
setScale:
setShape:
prepareImagesForImageDescriptors:
CGImageForImageDescriptor:
_IS_sharedIconCompositorContext
clearCaches
lastPathComponent
URLByAppendingPathComponent:
fileExistsAtPath:isDirectory:
writeToURL:options:error:
_initWithQueue:
_sendEventLazyWithName:payload:
_stringForCodeType:
_stringForDataType:
numberWithUnsignedInteger:
numberWithBool:
logBarcodeDetectedEventForAction:fromBundleID:
_eventPayloadForAction:
numberWithInteger:
didActivateNFCReader
didScanNFCTagOfType:
setInvalidURLScheme:
setInvalidContents:
invalidContents
invalidURLScheme
_invalidDataType
_invalidContents
_invalidURLScheme
Tq,R,N,V_invalidDataType
T@"NSString",C,N,V_invalidContents
T@"NSString",C,N,V_invalidURLScheme
_parseNextKeyValuePair
_indexOfDelimiter:range:
_bcs_unescapedString
rangeOfString:options:range:
_numberOfPreviousBackSlashesFromIndex:withinRange:
characterAtIndex:
_string
_currentIndex
_stringLength
_keyValuePairs
contactsWithMECARDString:error:
_initWithAction:
UUID
UUIDString
_actionTypeStringForQRCode
_actionTypeStringForNFC
_shouldRequireUserToPickTargetApp
_bcs_displayString
_notificationActionFromActionPickerItem:
_shouldHandleActionPickerItemLocally:
canHandleActionLocally
_bcs_isDataDetectorURL
appLink
_actionDescriptionString
_contentIsPreviewable
_shouldManuallyRequireAuthenticationForURL:
actionWithIdentifier:title:url:options:
actionWithIdentifier:title:options:
_supplementActions
initRequiringSecureCoding:
_bcs_isHTTPFamilyURL
_bcs_fullURLDisplayString
encodedData
saveEvent:span:error:
reset
defaultWorkspace
externalURL
_fbOptionsHandlingUnlockIfNecessary
openSensitiveURL:withOptions:error:
removeEvent:span:error:
requestAccessToEntityType:completion:
dataWithContacts:error:
tempVCardFileURL
writeToURL:atomically:
isInstalled
isRestricted
operationToOpenResource:usingApplication:uniqueDocumentIdentifier:sourceIsManaged:userInfo:options:delegate:
start
applicationProxyForSystemPlaceholder:
_LSFailedToOpenURL:withBundle:
requestAccessForEntityType:completionHandler:
shouldSkipBanner
shouldHandleBulletinActionWithIdentifier:
objectForKey:
_handleCalendarEventWithICSString:
_performActionAfterUnlock:
_handleContactInfo:
_showAppPickerAlertWithFBOptions:
performDefaultActionWithFBOptions:
initWithType:
setTopic:
imageURL
setCategoryIdentifier:
_contentExtensionData
setUserInfo:
_title
setTitle:
getClipMetadataSynchronously
clipName
setSubtitle:
setBody:
nfcIcon
setThreadIdentifier:
qrCodeIcon
setShouldHideDate:
setShouldIgnoreDoNotDisturb:
soundWithAlertType:
setAlertTopic:
setSound:
_attachmentIconURL
attachmentWithIdentifier:URL:options:error:
setAttachments:
_defaultURL
setShouldBackgroundDefaultAction:
setDefaultActionURL:
setShouldAuthenticateDefaultAction:
_shouldScheduleBackgroundActionForLaunchBundleID:
_content
requestWithIdentifier:content:trigger:
hasPreferredAppLink
_orderAppLinkActionsByRecency:
_pickerLabelForURLActionPickerItem:
weakToStrongObjectsMapTable
compare:
sortUsingComparator:
notificationForAction:
_tlAlertConfiguration
handleActionWithIdentifier:notificationResponseOriginID:
request
didHandleBulletinActionWithIdentifier:
requestingProcessID
setRequestingProcessID:
_identifier
_attachmentIcon
_localActions
_requestingProcessID
T@"UNNotificationRequest",R,N
Ti,N,V_requestingProcessID
iconNamed:
_clipIconURLForAction:scale:
_notificationIconDataURLForApp:scale:
requestDownloadedIconWithMetadata:completion:
bundleForClass:
URLForResource:withExtension:
iconDataForVariant:
T@"UNNotificationIcon",R,N
T@"NSURL",R,C,N
_configureUserNotificationCenter
initWithBundleIdentifier:
setWantsNotificationResponsesDelivered
removeAllPendingNotificationRequests
_addRequestForNotification:codeType:
_userNotificationCenterForCodeType:
addNotificationRequest:withCompletionHandler:
removePendingNotificationRequestsWithIdentifiers:
removeDeliveredNotificationsWithIdentifiers:
removeObject:
actionIdentifier
notification
_notificationWithIdentifier:
originIdentifier
didReceiveNotificationResponse:
sharedManager
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
invalidate
scheduleNotification:codeType:
withdrawNotificationsWithProcessID:codeType:
_qrCodeUserNotificationCenter
_nfcUserNotificationCenter
_notifications
auditToken
bundleProxyWithAuditToken:error:
_cancelNotificationsForCodeType:
processIdentifier
_didReceiveNotificationResponse:
notifyParsedCodeWithData:codePayload:shouldReplacePreviousNotifications:reply:
cancelNotificationsForCodeType:
startNFCReaderWithDelegate:
stopNFCReader
initWithConnection:
_connection
initWithMachServiceName:options:
nfcReaderStateDidChange:
nfcReaderDidDetectNonNDEFTag
setInterface:forSelector:argumentIndex:ofReply:
notifyParsedCodeWithData:codePayload:shouldReplacePreviousNotifications:withReply:
interruptionHandler
_interruptionHandler
T@?,C,N,V_interruptionHandler
valueForEntitlement:
boolValue
setWithArray:
setClasses:forSelector:argumentIndex:ofReply:
setByAddingObject:
setExportedInterface:
setExportedObject:
listener:shouldAcceptNewConnection:
decodeObjectOfClass:forKey:
whitespaceAndNewlineCharacterSet
addCharactersInString:
stringByTrimmingCharactersInSet:
rangeOfString:
stringWithCapacity:
URLQueryAllowedCharacterSet
removeCharactersInString:
stringByAddingPercentEncodingWithAllowedCharacters:
rangeOfString:options:
_bcs_stringForcingLeftToRightDirection
_bcs_stringWithEnclosingDoubleQuotesRemoved
safari_hasCaseInsensitivePrefix:
substringFromIndex:
safari_hasScheme:
_lp_simplifiedDisplayString
_lp_highLevelDomain
_lp_userVisibleString
componentsWithURL:resolvingAgainstBaseURL:
isEqualToIgnoringCase:
stringByAppendingString:
URLFragmentAllowedCharacterSet
sourceWithQRCodeValue:error:
parseDataSource:options:error:
localizedTypeDisplayNames
_bcs_searchURLWithQuery:
_lp_URLWithUserTypedString:relativeToURL:
_bcs_isMapsURL
_bcs_isSHCURL
_bcs_isRedirectedSHCURL
_bcs_isOtpauthURL
_bcs_hostWithoutWwwDot
_bcs_redirectedHealthURLWithOriginalString:
_bcs_localizedDisplayNameForRedirectedSHCURL
_bcs_appStoreSearchURLWithScheme:
_bcs_URLWithUserTypedString:
initWithURL:type:extraPreviewText:preferredBundleID:
initWithURL:
preferredBundleID
_preferredBundleID
T@"NSString",R,N,V_preferredBundleID
initWithString:
parsingServiceConnection
parseQRCodeString:withReply:
parseQRCodeMetadata:withReply:
parseQRCodeFeature:withReply:
decodeAppClipCodeURLWithEncodedData:codingVersion:requiresAuthorization:withReply:
setPreferredBundleIdentifier:forURL:
setParsingServiceConnection:
_parsingServiceConnection
T@"NSXPCConnection",&,N,V_parsingServiceConnection
stringWithFileSystemRepresentation:length:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
bundleWithURL:
localizedStringForKey:value:table:
_payloadForMRCObject:
_parseMetadataObject:reply:completionHandler:
initWithCGImage:options:
_qrCodeFeatureFromImage:
notificationServiceConnection
descriptor
initWithBarcodeDescriptor:
parseCodeFromImage:completionHandler:
postNotificationAfterParsingCodeFromImage:completion:
T@"BCSNotificationServiceConnection",R,N
parseURL:
initWithNFCPayload:
postNotificationForURL:payload:completionHandler:
initWithLabel:action:url:applicationRecord:
sharedApplication
openURL:options:completionHandler:
initWithSuiteName:
_passkeyActionDescription
targetApplication
_actionDescriptionForURL:application:shouldShowHostNameForSafariURL:
_actionDescriptionWithoutTargetApplicationForURL:
supportsURL:
defaultReadingList
addReadingListItemWithURL:title:previewText:error:
initWithBundleIdentifier:allowPlaceholder:error:
_willOpenInSafari
_commonActionPickerItemsForURL
addObjectsFromArray:
developerType
_systemImageNamed:
initWithLabel:action:appLink:codePayload:
initWithLabel:action:url:applicationRecord:preferApplicationIcon:
targetApplicationRecord
initWithLabel:action:appLink:codePayload:preferApplicationIcon:
_additionalActionPickerItems
_actionPickerItemsForAppClip
_actionPickerItemsForLockScreenVisibleApps
_actionPickerItemsForUnlockedAppLinks
_appclipLaunchReason
sessionProxy
configuration
setLaunchReason:
operationToOpenResource:usingApplication:uniqueDocumentIdentifier:isContentManaged:sourceAuditToken:userInfo:options:delegate:
requestClipWithCompletion:
openURL:withOptions:error:
isLikelyAvailable
sessionConfiguration
_isVisualCode
requestMetadataWithCompletion:
_resolveTargetApplicationForURL:completionHandler:
_resolveAppClipForURL:completion:
_shouldOpenInAppForAppLink:
_shouldBlockHandlingURL:
_queryApplicationRecordForURL:completionHandler:
getAppLinksWithURL:completionHandler:
URLOverrideForURL:
applicationsAvailableForOpeningURL:
isApplicationAvailableToOpenURL:includePrivateURLSchemes:error:
applicationState
isRemovedSystemApp
isPoweredByThirdParty
clipCaption
fullAppName
_actionDescriptionForAppClip
openStrategy
_menuElementForActionPicker:
_isCodeFromQRScanner
_appLinks
_userVisibleAppRecord
_upiApplicationRecords
_deviceDataIsUnavailable
_appStoreSearchURLForUnsupportedScheme
_hasPreferredAppLink
T@"LSApplicationRecord",R,N
TB,R,N,V_hasPreferredAppLink
_applicationIconImageForBundleIdentifier:format:scale:
_applicationRecord
_preferApplicationIcon
_appLink
T@"LSAppLink",R,N,V_appLink
parseURL:originalString:
_canonicalizeMessageURL:
_dataTypeForSchemeIfSupportedByDataDetectors:
initWithURL:resolvingAgainstBaseURL:
setScheme:
setQuery:
path
setPath:
initWithActivityType:
setWebpageURL:
savePayloadInUserActivity:
setFrontBoardOptions:
setIgnoreAppLinkEnabledProperty:
openWithConfiguration:completionHandler:
openUserActivity:withApplicationProxy:options:completionHandler:
knowledgeStoreWithDirectReadOnlyAccess
appInFocusStream
setEventStreams:
startDateSortDescriptorAscending:
setSortDescriptors:
predicateForEventsWithStringValue:
setPredicate:
setLimit:
executeQuery:error:
startDate
dataUsingEncoding:
contactsWithData:error:
getDownloadedIconURLSynchronously
setCountLimit:
initWithCGImage:
clipOpenButtonTitle
_wiFiConfigurationData
ssid
password
isWEP
isHidden
_barcodeDescriptor
setNdefMessagePayload:
_nfcPayload
initWithSSID:isWEP:password:isHidden:
_WEP
_hidden
_ssid
_password
T@"NSString",R,C,N,V_ssid
TB,R,N,GisWEP,V_WEP
T@"NSString",R,C,N,V_password
hidden
TB,R,N,GisHidden,V_hidden
decodeURLWithEncodedData:codingVersion:requiresAuthorization:completionHandler:
@24@0:8^{_NSZone=}16
v24@0:8Q16
v20@0:8B16
B16@0:8
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
{?="timestamp"b1"appLinkActivationOpenStrategy"b1"barcodeDataType"b1"barcodeSourceType"b1"barcodeURLType"b1"clientType"b1}
@24@0:8@16
v24@0:8@?16
v16@0:8
@"AVMetadataMachineReadableCodeObject"
@"VNBarcodeObservation"
{?="detectionTimeMs"b1"timestamp"b1"appLinkPreferredOpenStrategy"b1"barcodeDataType"b1"barcodeSourceType"b1"barcodeURLType"b1"clientType"b1"invalidBarcodeDataType"b1}
@"NSMutableArray"
{?="timestamp"b1"previewContentType"b1}
v40@0:8@16@24@?32
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"<BCSActionDelegate>"16@0:8
v24@0:8@"<BCSActionDelegate>"16
@"NSURL"16@0:8
@"NSArray"16@0:8
v24@0:8@?<v@?@"NSError">16
q16@0:8
@"NSDictionary"16@0:8
@"CPSClipMetadataRequest"16@0:8
v24@0:8@"CPSClipMetadataRequest"16
@32@0:8@16@24
v32@0:8@16@?24
@?16@0:8
@"BCSActionPickerViewAssistant"
@"<BCSActionDelegate>"
@"NSURL"
@"NSArray"
@"CPSClipMetadataRequest"
@"BCSDetectedCode"
@"NSString"
@"<BCSParsedDataPrivate>"
@"<BCSCodePayload>"
@32@0:8@16@?24
@"BCSAction"
@"<BCSActionPickerItemDelegate>"
@"UIImage"
v32@0:8@16@24
@"UIAlertController"24@0:8@"BCSActionPickerItem"16
v32@0:8@"BCSActionPickerItem"16@"UIAlertController"24
B64@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32
@"UIAlertController"
d24@0:8@16
@"BCSQRCodeParser"
@"NSDictionary"
v40@0:8@16@?24@?32
@"BCSNotificationServiceConnection"
@"NSObject<OS_dispatch_queue>"
v32@0:8@16Q24
v24@0:8q16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"<BCSParsedData>"24@0:8@"NSString"16
@"CNContact"
v28@0:8@16B24
v32@0:8@"DDAction"16@"UIAlertController"24
v24@0:8@"DDAction"16
v28@0:8@"DDAction"16B24
@"DDAction"
@40@0:8@16q24@32
@"DDScannerResult"
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
@"UIViewController"24@0:8@"<BCSAction>"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"<BCSAction>"16
@"NSArray"32@0:8@"<BCSAction>"16@"NSArray"24
@"UIMenu"
@"DDUIAction"
v40@0:8@16d24@?32
v24@0:8@?<v@?B@"NSError">16
v40@0:8@"NSURL"16d24@?<v@?@"NSURL">32
@"NSXPCConnection"
@32@0:8^{__DDResult=}16@24
@40@0:8@16{_NSRange=QQ}24
@24@0:8q16
@32@0:8q16@24
@32@0:8@16Q24
Q40@0:8@16{_NSRange=QQ}24
Q40@0:8Q16{_NSRange=QQ}24
@"NSMutableDictionary"
@"BCSNotificationIcon"
@32@0:8@16d24
@28@0:8@16f24
@"<BCSAction>"
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
v32@0:8@16q24
v28@0:8i16q20
@"UNUserNotificationCenter"
@"NSMutableSet"
v44@0:8@16@24B32@?36
v44@0:8@"<BCSParsedData>"16@"<BCSCodePayload>"24B32@?<v@?@"NSError"@"AWDBarcodeSupportCodeDetectedEvent">36
v24@0:8@"UNNotificationResponse"16
v24@0:8@"<BCSNFCReaderDelegate>"16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@32@0:8#16@24
@32@0:8@16q24
@48@0:8@16q24@32@40
v44@0:8@16Q24B32@?36
v32@0:8@"NSString"16@?<v@?@"<BCSParsedData>"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"<BCSParsedData>"@"NSError">24
v32@0:8@"CIQRCodeFeature"16@?<v@?@"<BCSParsedData>"@"NSError">24
v32@0:8@"NSString"16@"NSURL"24
v44@0:8@"NSData"16Q24B32@?<v@?@"NSURL"@"NSError">36
@24@0:8^{CGImage=}16
v32@0:8^{CGImage=}16@?24
@"BCSParsingServiceConnection"
@36@0:8@16@24B32
@"LSApplicationRecord"
@52@0:8@16@24@32@40B48
@48@0:8@16@24@32@40
@"LSAppLink"
q24@0:8@16
v24@0:8@"NSUserActivity"16
@"CIBarcodeDescriptor"
@"NFCNDEFMessage"
@40@0:8@16B24@28B36
v40@0:8@16Q24@?32
