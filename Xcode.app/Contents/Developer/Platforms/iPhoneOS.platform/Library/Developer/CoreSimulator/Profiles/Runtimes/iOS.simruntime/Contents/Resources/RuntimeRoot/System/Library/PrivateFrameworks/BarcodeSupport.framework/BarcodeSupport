%@ %@
timestamp
clientType
barcodeDataType
barcodeURLType
appLinkActivationOpenStrategy
barcodeSourceType
BARCODECLIENTTYPE_OTHER
BARCODECLIENTTYPE_NOTIFICATION_SERVICE
BARCODECLIENTTYPE_SAFARI
(unknown: %i)
BARCODEDATATYPE_INVALID
BARCODEDATATYPE_URL
BARCODEDATATYPE_CONTACT
BARCODEDATATYPE_EMAIL
BARCODEDATATYPE_TELEPHONE
BARCODEDATATYPE_MESSAGE
BARCODEDATATYPE_LOCATION
BARCODEDATATYPE_EVENT
BARCODEDATATYPE_WIFI
BARCODEDATATYPE_HOMEKIT_URL
BARCODEDATATYPE_STRING
BARCODEDATATYPE_OTHER
BARCODEURLTYPE_NON_APPLINK
BARCODEURLTYPE_SINGLE_APPLINK
BARCODEURLTYPE_MULTIPLE_APPLINKS
BARCODEAPPLINKOPENSTRATEGY_OPEN_IN_SAFARI
BARCODEAPPLINKOPENSTRATEGY_OPEN_IN_APP
BARCODESOURCETYPE_QR
BARCODESOURCETYPE_OTHER
BCSDetectedCodeErrorDomain
v24@?0@"<BCSAction>"8@"NSError"16
VNBarcodeSymbology getVNBarcodeSymbologyAppClipCode(void)
BCSDetectedCode.m
VNBarcodeSymbologyAppClipCode
v8@?0
void *VisionLibrary(void)
detection_time_ms
invalidBarcodeDataType
appLinkPreferredOpenStrategy
INVALIDBARCODEDATATYPE_OTHER
INVALIDBARCODEDATATYPE_URL
INVALIDBARCODEDATATYPE_CONTACT
INVALIDBARCODEDATATYPE_EMAIL
INVALIDBARCODEDATATYPE_TELEPHONE
INVALIDBARCODEDATATYPE_MESSAGE
INVALIDBARCODEDATATYPE_LOCATION
INVALIDBARCODEDATATYPE_EVENT
INVALIDBARCODEDATATYPE_WIFI
INVALIDBARCODEDATATYPE_HOMEKIT_URL
square.and.arrow.up
previewContentType
DATA_DETECTORS_SCANNED_RESULT
CALENDAR_EVENT
CONTACT
STRING
OTHER
BCSActionErrorDomain
v12@?0B8
BCSAction.m
Subclasses must implement this
Open
actionClass
actionDescription
defaultActionDescription
actionInfo
QR Code
qrcode.viewfinder
v16@?0@"UIAction"8
@"UIMenu"24@?0@8@"NSArray"16
qrcode
QR CODE DETECTED
NFC TAG DETECTED
wapi
WLAN QR CODE
WI-FI QR CODE
TEXT QR CODE
APP QR CODE
APP CLIP QR CODE
com.apple.mobilesafari
WEBSITE QR CODE
%@ QR CODE
v16@?0@"NSError"8
(NSError: domain: %@, code: %ld)
/System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
/System/Library/PrivateFrameworks/MobileCoreServices.framework/MobileCoreServices
/AppleInternal/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
void *MobileCoreServicesLibrary(void)
MobileCoreServicesSoftLink.m
LSAppLink
Class getLSAppLinkClass(void)_block_invoke
Unable to find class %s
LSApplicationProxy
Class getLSApplicationProxyClass(void)_block_invoke
LSApplicationRecord
Class getLSApplicationRecordClass(void)_block_invoke
LSApplicationWorkspace
Class getLSApplicationWorkspaceClass(void)_block_invoke
B8@?0
Cancel
v16@?0@"UIAlertAction"8
BarcodeRawData
BarcodeType
SymbolVersion
QRMASK
ErrorCorrectionLevel
RawData
Version
com.apple.AppClipCode
v32@?0@"AVMetadataMachineReadableCodeObject"8Q16^B24
hostsToLastUsedApps
schemesToLastUsedApps
B32@?0@"<BCSApp>"8Q16^B24
com.apple.BarcodeSupport.BCSNFCReaderConnection
com.apple.BarcodeSupport
BCSNFCReaderConnection
wifi
com.apple.BarcodeSupport.BarcodeNotificationService
icsString
BEGIN:VEVENT
BEGIN:VCALENDAR
END:VCALENDAR
BEGIN:VCALENDAR
contact
Copy
Copy Link
doc.on.doc
scannerResult
type
extraPreviewText
Choose Action
address
actions
person.crop.circle.fill
calendar
{CGRect={CGPoint=dd}{CGSize=dd}}8@?0
com.apple.datadetectors.DDShareAction
NSString *getkDataDetectorsSourceRectKey(void)
DataDetectorsUISoftLink.h
kDataDetectorsSourceRectKey
/System/Library/Frameworks/DataDetectorsCore.framework/DataDetectorsCore
/System/Library/PrivateFrameworks/DataDetectorsCore.framework/DataDetectorsCore
/AppleInternal/Library/Frameworks/DataDetectorsCore.framework/DataDetectorsCore
void *DataDetectorsCoreLibrary(void)
DataDetectorsCoreSoftLink.m
DDScannerResult
Class getDDScannerResultClass(void)_block_invoke
CFStringRef _DDResultCopyExtractedURL(DDResultRef)
BCSDDResultUtilities.m
DDResultCopyExtractedURL
v20@?0B8@"NSError"12
com.apple.BarcodeSupport.Helper
v16@?0@"NSURL"8
street
city
state
country
/System/Library/Frameworks/CoreNFC.framework/CoreNFC
/System/Library/PrivateFrameworks/CoreNFC.framework/CoreNFC
/AppleInternal/Library/Frameworks/CoreNFC.framework/CoreNFC
void *CoreNFCLibrary(void)
CoreNFCSoftLink.m
NFCNDEFMessage
Class getNFCNDEFMessageClass(void)_block_invoke
matmsg:
BODY
mailto:
subject=%@
body=%@
BCSErrorDomain
mailto
DDScannerRef _DDScannerCreate(DDScannerType, DDScannerOptions, CFErrorRef *)
BCSGenericDataParser.m
DDScannerCreate
DDScanQueryRef _DDScanQueryCreateFromString(CFAllocatorRef, CFStringRef, CFRange)
DDScanQueryCreateFromString
Boolean _DDScannerScanQuery(DDScannerRef, DDScanQueryRef)
DDScannerScanQuery
CFArrayRef _DDScannerCopyResultsWithOptions(DDScannerRef, DDScannerCopyResultsOptions)
DDScannerCopyResultsWithOptions
CFRange _DDResultGetRange(DDResultRef)
DDResultGetRange
DDResultCategory _DDResultGetCategory(DDResultRef)
DDResultGetCategory
geo:
http://maps.apple.com/?q=%@
^(-?\d{1,2}(?:\.\d+)?),(-?\d{1,3}(?:\.\d+)?)
public.png
com.apple.BarcodeSupport.Notification
main-screen-scale
CGImageDestinationRef _CGImageDestinationCreateWithData(CFMutableDataRef, CFStringRef, size_t, CFDictionaryRef)
BCSGraphicsUtilities.m
CGImageDestinationCreateWithData
void *ImageIOLibrary(void)
CFStringRef getkCGImagePropertyPNGCompressionFilter(void)
kCGImagePropertyPNGCompressionFilter
CFStringRef getkCGImagePropertyPNGDictionary(void)
kCGImagePropertyPNGDictionary
CFStringRef getkCGImagePropertyPNGBandCount(void)
kCGImagePropertyPNGBandCount
void _CGImageDestinationAddImage(CGImageDestinationRef, CGImageRef, CFDictionaryRef)
CGImageDestinationAddImage
_Bool _CGImageDestinationFinalize(CGImageDestinationRef)
CGImageDestinationFinalize
CGImageSourceRef _CGImageSourceCreateWithURL(CFURLRef, CFDictionaryRef)
CGImageSourceCreateWithURL
CGImageRef _CGImageSourceCreateImageAtIndex(CGImageSourceRef, size_t, CFDictionaryRef)
CGImageSourceCreateImageAtIndex
ISIcon
Class getISIconClass(void)_block_invoke
void *IconServicesLibrary(void)
ISImage
Class getISImageClass(void)_block_invoke
ISImageDescriptor
Class getISImageDescriptorClass(void)_block_invoke
CIContext
Class getCIContextClass(void)_block_invoke
void *CoreImageLibrary(void)
com.apple.BarcodeSupport.DidActivateNFCReader
com.apple.BarcodeSupport.DidScanNFCTag
com.apple.BarcodeSupport.DidDetectBarcode
com.apple.BarcodeSupport.DidActivateBarcode
com.apple.BarcodeSupport.DidPreviewContent
com.apple.BarcodeSupport.Analytics
tagDataType
@"NSDictionary"8@?0
Invalid
Contact
Email
Telephone
Message
Location
Calendar
WiFi
HomeKit
Text
PasskeyAssertion
PasskeyRegistration
Other
client
codeType
dataType
applinks
openInApp
contentType
appclip
No usable data found
/System/Library/Frameworks/iCalendar.framework/iCalendar
/System/Library/PrivateFrameworks/iCalendar.framework/iCalendar
/AppleInternal/Library/Frameworks/iCalendar.framework/iCalendar
void *iCalendarLibrary(void)
ICalendarSoftLink.m
ICSDocument
Class getICSDocumentClass(void)_block_invoke
ICSEvent
Class getICSEventClass(void)_block_invoke
invalidDataType
invalidURLScheme
invalidContents
MECARD:
barcodeNotificationCategory
barcodeNotificationDefaultViewCategory
com.apple.BarcodeSupport.Notification.QRCode
com.apple.BarcodeSupport.Notification.Other
com.apple.BarcodeSupport.Notification.Payload
extraPrviewText
previewFooterTitle
previewFooterSubtitle
notificationActions
contentIsPreviewable
QR Code Detected
NFC Tag Detected
Website NFC Tag
%@ NFC Tag
WLAN QR Code
Wi-Fi QR Code
Text QR Code
App QR Code
App Clip QR Code
Passkey QR Code
Apple QR Code
Website QR Code
%@ QR Code
com.apple.Maps
Transfer.vcf
com.apple.MobileAddressBook
v12@?0C8
com.apple.mobilephone
com.apple.InCallService
com.apple.facetime
facetime
facetime-audio
telemergencycall
Choose App to Open URL
SBUserNotificationForcesModalAlertAppearance
SBUserNotificationDisplayActionButtonOnLockScreen
q24@?0@"BCSActionPickerItem"8@"BCSActionPickerItem"16
EKEventStore
Class getEKEventStoreClass(void)_block_invoke
BCSNotification.m
void *EventKitLibrary(void)
BOOL _SBSGetScreenLockStatus(Boolean *)
SBSGetScreenLockStatus
void *SpringBoardServicesLibrary(void)
void _SBSRequestPasscodeUnlockUI(void (^__strong)(Boolean))
SBSRequestPasscodeUnlockUI
NSString *getFBSOpenApplicationOptionKeyLaunchOrigin(void)
FBSOpenApplicationOptionKeyLaunchOrigin
void *FrontBoardServicesLibrary(void)
TLAlertConfiguration
Class getTLAlertConfigurationClass(void)_block_invoke
void *ToneLibraryLibrary(void)
NSString *getTLAlertTopicPassbookNFCScanComplete(void)
TLAlertTopicPassbookNFCScanComplete
NSString *getFBSOpenApplicationOptionKeyPromptUnlockDevice(void)
FBSOpenApplicationOptionKeyPromptUnlockDevice
NSString *getFBSOpenApplicationOptionKeyUnlockDevice(void)
FBSOpenApplicationOptionKeyUnlockDevice
QR_section_icon
NFC_section_icon
com.apple.ios.StoreKitUIService
com.apple.AMSEngagementViewService
AppClips@2x
AppClips@3x
%@.png
CGImageRef _LICreateIconFromCachedBitmap(CFDataRef)
BCSNotificationIcon.mm
LICreateIconFromCachedBitmap
void *MobileIconsLibrary()
com.apple.barcodesupport.qrcode
com.apple.barcodesupport.nfc
v16@?0@"<BCSAction>"8
com.apple.private.barcodesupport.allowNotifications
/System/Library/Frameworks/UIKit.framework/UIKit
/System/Library/PrivateFrameworks/UIKit.framework/UIKit
/AppleInternal/Library/Frameworks/UIKit.framework/UIKit
void *UIKitLibrary(void)
UIKitSoftLink.m
UIAlertAction
Class getUIAlertActionClass(void)_block_invoke
UIAlertController
Class getUIAlertControllerClass(void)_block_invoke
UIApplication
Class getUIApplicationClass(void)_block_invoke
UIImage
Class getUIImageClass(void)_block_invoke
UIPasteboard
Class getUIPasteboardClass(void)_block_invoke
UIAction
Class getUIActionClass(void)_block_invoke
UIActivityViewController
Class getUIActivityViewControllerClass(void)_block_invoke
UIMenu
Class getUIMenuClass(void)_block_invoke
UIView
Class getUIViewClass(void)_block_invoke
https://redirect.health.apple.com/SMARTHealthCard/
https://redirect.health.apple.com/SMARTHealthCard/#
https://redirect.health.apple.com/EU-DCC/#
http
https
maps
maps.apple.com
otpauth
apple-otpauth
x-barcode-datadetectors-action
www.
x-web-search://?%@
shc:/
hc1:
HKSignedClinicalDataSource
Class getHKSignedClinicalDataSourceClass(void)_block_invoke
BCSNSURLExtras.m
void *HealthRecordServicesLibrary(void)
HKVerifiableHealthRecordsParser
Class getHKVerifiableHealthRecordsParserClass(void)_block_invoke
void *HealthRecordsExtractionLibrary(void)
preferredBundleID
v24@?0@"<BCSParsedData>"8@"NSError"16
v24@?0@"NSURL"8@"NSError"16
com.apple.BarcodeSupport.ParsingService
/System/Library/Frameworks/DataDetectorsUI.framework/DataDetectorsUI
/System/Library/PrivateFrameworks/DataDetectorsUI.framework/DataDetectorsUI
/AppleInternal/Library/Frameworks/DataDetectorsUI.framework/DataDetectorsUI
void *DataDetectorsUILibrary(void)
DataDetectorsUISoftLink.m
DDDetectionController
Class getDDDetectionControllerClass(void)_block_invoke
DDCopyAction
Class getDDCopyActionClass(void)_block_invoke
DDContextMenuAction
Class getDDContextMenuActionClass(void)_block_invoke
DDUIEventForResults
EKEvent *_DDUIEventForResults(EKEventStore *__strong, NSArray *__strong, NSDictionary *__strong)
localized string not found
v16@?0@"<BCSActionPrivate>"8
v16@?0@"<BCSParsedDataPrivate>"8
v24@?0@"NSError"8@"AWDBarcodeSupportCodeDetectedEvent"16
smsto:
sms:%@&body=%@
sms:%@
Search Web in Safari
safari.fill
Search Web
X-HM
com.apple.Home-private
com.apple.Home
Tap here to learn more
targetApplication
Add to Reading List
eyeglasses
Open in Safari
homekit
arrow.up.forward.appclip
health.fill
person.badge.key.fill
arrow.up.forward.app.fill
Title for the menu to open an application or the browser when a QR code is deteced in lock screen
Open Link
https://found.apple.com/airtag?
com.apple.BarcodeScanner
v24@?0@"CPSClipMetadata"8@"NSError"16
v24@?0@"NSArray"8@"NSError"16
Powered by %@
com.apple.AppStore
com.apple.MobileStore
View in %@
com.apple.Preferences
Add Verification Code in Passwords
Open in %@
data
ams.apple.com
amsui.apple.com
amsue.apple.com
one.apple.com
Sign in with a passkey
Save a passkey
SSReadingList
Class getSSReadingListClass(void)_block_invoke
BCSURLAction.m
void *SafariServicesLibrary(void)
NSString *getCPSSessionLaunchReasonQR(void)
CPSSessionLaunchReasonQR
void *ClipServicesLibrary(void)
NSString *getCPSSessionLaunchReasonNFC(void)
CPSSessionLaunchReasonNFC
CPSClipRequest
Class getCPSClipRequestClass(void)_block_invoke
BOOL _CPSClipsFeatureEnabled(void)
CPSClipsFeatureEnabled
CPSClipMetadataRequest
Class getCPSClipMetadataRequestClass(void)_block_invoke
safari
arrow.up.forward.app
x-hm
URL:
smsto
fido
DeviceClass
iPad
com.apple.SafariViewService
platform-application
_DKKnowledgeStore
Class get_DKKnowledgeStoreClass(void)_block_invoke
BCSUtilities.m
void *CoreDuetLibrary(void)
_DKEventQuery
Class get_DKEventQueryClass(void)_block_invoke
_DKSystemEventStreams
Class get_DKSystemEventStreamsClass(void)_block_invoke
_DKQuery
Class get_DKQueryClass(void)_block_invoke
SecTaskRef _SecTaskCreateFromSelf(CFAllocatorRef _Nullable)
SecTaskCreateFromSelf
void *SecurityLibrary(void)
CFTypeRef _SecTaskCopyValueForEntitlement(SecTaskRef, CFStringRef, CFErrorRef *)
SecTaskCopyValueForEntitlement
BEGIN:VCARD
Open App Clip
/System/Library/Frameworks/Contacts.framework/Contacts
/System/Library/PrivateFrameworks/Contacts.framework/Contacts
/AppleInternal/Library/Frameworks/Contacts.framework/Contacts
void *ContactsLibrary(void)
ContactsSoftLink.m
CNContact
Class getCNContactClass(void)_block_invoke
CNContactVCardSerialization
Class getCNContactVCardSerializationClass(void)_block_invoke
CNContactStore
Class getCNContactStoreClass(void)_block_invoke
ssid
password
isWEP
true
false
isHidden
Join Network
payloadData
com.apple.BarcodeSupport.BCSAppClipCodeURLDecoderErrorDomain
WPA2
WPA/WPA2
nopass
WIFI:
parseCodeWithCompletion:
BCSDetectedCode: (%@) did receive VNObservation with symbology %{private}@
BCSShareActionPickerItem: can't find presenting view controller, please set up the action's delegate.
%@: -[BCSAction presentingViewControllerForAction:] must be implemented to perform action.
%@: -[BCSAction presentingViewControllerForAction:] must return non-nil view controller to perform action.
%@: -[BCSAction sourceRectForPopoverActionPicker:] must be implemented to show action picker.
BCSAction: Presenting action picker
BCSActionPickerItem: _actionHandler called in -performAction
BCSActionPickerViewAssistant: No presenting view controller is specified
BCSActionPickerViewAssistant: Host view controller is already presenting a view.
BCSActionPickerViewAssistant: Action picker is already being shown.
BCSAVParsingSession (%p): Created
BCSAVParsingSession (%p): Deallocated
BCSAVParsingSession (%p): Skip processing of same QR code
BCSAVParsingSession: Skipping a QR code since an app clip code was selected a short while ago (< 750ms).
BCSAppRanker: Found last used app for scanned URL
Notification service connection is non-nil when starting reader
Sent invalid barcode detected event to AWD; data type = %d; client type = %d; source type = %d; detection time = %llu; barcodeURLType: %d; appLinkPreferredOpenStrategy: %d; invalid data type = %d
Sent barcode detected event to AWD; data type = %d; client type = %d; source type = %d; detection time = %llu; barcodeURLType: %d; appLinkPreferredOpenStrategy: %d
Sent barcode activated event to AWD; data type = %d; client type = %d; source type = %d; barcodeURLType: %d; appLinkPreferredOpenStrategy: %d
Sent barcode previewed event to AWD; content type = %ld
BCSAWDLogger: Encountered invalid invalidDataType: %ld
BCSCalendarEventParser: Begin parsing
BCSCalendarEventParser: vCalendar/vEvent prefix not found
BCSCalendarEventParser: ics string is not valid
BCSCalendarEventParser: Cannot get calendar from ICSDocument
BCSCalendarEventParser: Found event from payload
BCSCalendarEventParser: Cannot find event from calendar
BCSCIImageExtras: image has multiple QR codes
BCSCopyActionPickerItem: performing action
BCSDataDetectionActionPickerItem: performing action
BCSDataDetectorsSupportedAction: perform the default DD action.
BCSDataDetectorsSupportedAction: -[BCSAction presentingViewControllerForAction:] must be implemented to perform action.
BCSDataDetectorsSupportedAction: -[BCSAction presentingViewControllerForAction:] must return non-nil view controller to perform action.
BCSDataDetectorsSupportedAction: performing default DDAction
BCSDataDetectorsSupportedAction: -[BCSDataDetectorSupportedAction _hostingViewForAction:] must be implemented to perform action.
BCSDataDetectorsSupportedAction: -[BCSDataDetectorSupportedAction _hostingViewForAction:] must return non-nil view controller to perform action.
BCSDataDetectorsSupportedAction: -[BCSDataDetectorSupportedAction _setUpActionMenuIfNeeded:] uses a dummy view for actions and menus, please file a radar!
BCSConfigurationManager: Error getting remote object proxy: %{public}@
BCSDocomoEmailParser: Begin parsing
BCSDocomoEmailParser: Payload length is too short
BCSDocomoEmailParser: matmsg scheme not found
BCSDocomoEmailParser: Parsed valid recipient email
BCSDocomoEmailParser: matmsg has no valid email address, subject, or body
BCSDocomoEmailParser: Parsed email subject
BCSDocomoEmailParser: Parsed email body
BCSDocomoEmailParser: Converted mailto URL cannot be constructed
BCSDocomoEmailParser: Successfully converted matmsg data to mailto link
BCSGenericDataParser: Begin parsing
BCSGenericDataParser: Cannot create DDScanner
BCSGenericDataParser: Cannot create DDScanQuery
BCSGenericDataParser: Did not find any interesting data
BCSGenericDataParser: Failed to get results from scanner
BCSGenericDataParser: Extracted URL from generic string
BCSGenericDataParser: Failed to create scanner result from core result
BCSGenericDataParser: Extracted scanner result from generic string
BCSGeoDataParser: Begin parsing
BCSGeoDataParser: Payload length is too short
BCSGeoDataParser: geo scheme not found.
BCSGeoDataParser: Successfully converted geo link to maps link.
BCSGeoDataParser: invalid latitude and longitude.
BCSGeoDataParser: latitude is out of range.
BCSGeoDataParser: longitude is out of range.
BCSNotificationIcon: Failed to get caches directory with error %{public}@
BCSNotificationIcon: Cannot create folder at URL: %{private}@ with error %{public}@
_bcs_applyTreatmentToIcon: notification icon path is nil
_bcs_applyTreatmentToIcon: Failed to get PNG image data
_bcs_applyTreatmentToIcon: Failed to write PNG image data to disk with error %{public}@
BCSMeCardParser: Begin parsing
BCSMeCardParser: Payload length is too short
BCSMeCardParser: MECARD prefix is not found
BCSMeCardParser: Failed to parse contact from MECARD string
BCSMeCardParser: Found contact from MECARD string
BCSNotification: Setting up UNNotificationAction that will be handled locally with URL %{private}@ and target application %{private}@
BCSNotification: Setting up UNNotificationAction with URL %{private}@
BCSNotification: Handling event action
BCSNotification: error saving EKEvent: %{public}@
BCSNotification: cannot open Calendar app with the event's externalURL
BCSNotification: cannot create folder at URL: %@
BCSNotification: Handling contact action
BCSNotification: error accessing Contacts store: %{public}@
BCSNotification: put up an alert to allow the user to choose app
Failed to create an attachment with url %{private}@ and error %{public}@
BCSNotification: can't find a default URL for action with type: %ld
BCSNotification: User has more than 2 apps to choose from.
Cannot create CFUserNotification with error code: %{public}d
BCSNotificationIcon: target app identifier is nil
BCSNotificationIcon: app proxy is nil
BCSNotificationIcon: processed icon URL after timeout = %@
BCSNotificationIcon: notification icon path is nil
BCSNotificationIcon: icon data from LSApplicationProxy is nil
BCSNotificationIcon: Failed to create icon from cached bitmap
BCSNotificationIcon: Failed to get PNG image data
BCSNotificationIcon: Failed to write PNG image data to disk with error %{public}@
BCSNotificationManager: error adding notification request: %{public}@
BCSNotificationManager: did receive notification response with action identifier %{public}@ and request identifier %{public}@
BarcodeNotificationService: Received parsed barcode data.
BCSNotificationService: Detected QR code is not actionable
BCSNotificationService: Detected QR code has resolved to action of class %@
Cannot connect to remote service with error: %{public}@
BCSNotificationServiceDelegate: Connection rejected for lacking entitlement for pid %d
BCSURLAction: Unable to create HKSignedClinicalDataSource for: %{private}@ error: %{private}@
BCSURLAction: error obtaining result from HKVerifiableHealthRecordsParser: %{private}@
BCSURLAction: obtained multiple HKVerifiableHealthRecordsParsingResult entries: %{private}@
BCSParsingServiceConnection: Error getting remote object proxy: %{public}@
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p QR code is not actionable
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p QR code has resolved to action of class %@
BCSQRCodeParser: no feature detected in the image.
BCSQRCodeParser: we don't support multiple codes in the same image.
BCSQRCodeParser: image has no QR code.
BCSQRCodeParser: Start parsing CIQRCodeFeature %p
BCSQRCodeParser: QR code from CIQRCodeFeature %p has unrecognized format
BCSQRCodeParser: QR code from CIQRCodeFeature %p has type %ld
BCSQRCodeParser: QR code from CIQRCodeFeature %p is not actionable
BCSQRCodeParser: QR code from CIQRCodeFeature %p has resolved to action of class %@
BCSQRCodeParser: QR code payload string has unrecognized format
BCSQRCodeParser: Detected QR code has type %ld
BCSQRCodeParser: Detected QR code is not actionable
BCSQRCodeParser: Detected QR code has resolved to action of class %@
BCSQRCodeParser: QR code payload image has unrecognized format
BCSQRCodeParser: QR code from image has type %ld
BCSQRCodeParser: Finished notification with error %{public}@
BCSQRCodeParser: Finished notification successfully
BCSQRCodeParser: Start parsing AVMetadataMachineReadableCodeObject %p
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p has no basicDescriptor
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p QR code has payload with unrecognized format
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p QR code has type %ld
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p has app clip code version %ld
BCSQRCodeParser: failed to decode app clip code payload with error: %{private}@
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p has app clip code with url %{private}@
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p has non-QR-code type: %@
BCSSMSTODataParser: Begin parsing
BCSSMSTODataParser: Payload length is too short
BCSSMSTODataParser: smsto scheme not found.
BCSNFCCodeParser: Does not recognize NFC URL
BCSNFCCodeParser: Detected NFC URL has type %ld
BCSNFCCodeParser: Error posting notification: %@
BCSNFCCodeParser: Finished posting notification
BCSStringAction: performing search
BCSURLAction: we shouldn't show the non system app name in lock screen for bundle ID: %{private}@
BCSURLAction: -actionPickerItems is called on an invalid action
BCSURLAction: cannot open Home app with sensitive URL.
BCSURLAction: No target application to open
BCSURLAction: Clip is indicated to be available, however clip request failed with CPSErrorClipURLUnavailable. Handling with LSApplicationWorkspace operation.
BCSURLAction: Error performing app clip open action: %{public}@
BCSURLAction: perform action with default app link
BCSURLAction: Opening top ranked UPI handling app
BCSURLAction: perform default action by opening URL
BCSURLAction: detected an Find My URL, skip app clips checking. %{sensitive}@
BCSURLAction: Begin resolving target application for URL
BCSURLAction: URL is blocked from being handled
BCSURLAction: Found app links for URL
BCSURLAction: Resolved default URL action uses app link
BCSURLAction: Failed to get application record %{public}@
BCSURLAction: Ignoring resolved URL with private scheme '%{private}@'
BCSURLAction: Device is locked when resolving target application with bundleID %{private}@ for URL %{private}@
BCSURLAction: Found application for opening URL
BCSURLAction: Cannot find application to open URL
BCSURLActionPickerItem: opening app link
BCSURLActionPickerItem: opening url
BCSURLAction: cannot open Home app with sensitive URL with error: %{private}@
BCSURLDataParser: Begin parsing
BCSURLDataParser: QR code payload, with %ld characters, is too long
BCSURLDataParser: QR code payload has the URL: scheme
BCSURLDataParser: Cannot create URL
BCSURLDataParser: URL has no scheme
BCSURLDataParser: Found HomeKit URL
BCSURLDataParser: Found SMARTHealthCard URL
BCSURLDataParser: Found Passkey Registration URL
BCSURLDataParser: Found Passkey Assertion URL
BCSUtilities: Error opening user activity %{public}@ with payload.
BCSUtilities: Error opening user activity %{public}@
Querying last used date failed for app
_bcs_lastTimeAppWasUsed: Looking up last launch time for app took %.3f ms
User cancelled device unlock.
BCSVCardParser: Begin parsing
BCSVCardParser: Payload length is too short
BCSVCardParser: vCard prefix is not found
BCSVCardParser: Failed to parse contact from vCard string
BCSVCardParser: Found contact from vCard string
BCSWiFiConfigurationAction: Action is either not actionable or -determineActionabilityWithCompletionHandler has not been called
BCSAppClipCodeURLDecoder: App clip code payload [%p] is not actionable
BCSAppClipCodeURLDecoder: App clip code [%p] has resolved to action of class %@
BCSWiFiConfigurationParser: Begin parsing
BCSWiFiConfigurationParser: Payload length is too short
BCSWiFiConfigurationParser: WIFI scheme not found
BCSWiFiConfigurationParser: Network SSID not specified
BCSWiFiConfigurationParser: Illegal authentication type specified
BCSWiFiConfigurationParser: Successfully parsed WiFi Network configuration
softlink:r:path:/System/Library/Frameworks/Vision.framework/Vision
softlink:r:path:/System/Library/Frameworks/ImageIO.framework/ImageIO
softlink:r:path:/System/Library/PrivateFrameworks/IconServices.framework/IconServices
softlink:r:path:/System/Library/Frameworks/CoreImage.framework/CoreImage
softlink:r:path:/System/Library/Frameworks/EventKit.framework/EventKit
softlink:r:path:/System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices
softlink:r:path:/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
softlink:r:path:/System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary
softlink:r:path:/System/Library/PrivateFrameworks/MobileIcons.framework/MobileIcons
softlink:r:path:/System/Library/PrivateFrameworks/HealthRecordServices.framework/HealthRecordServices
softlink:r:path:/System/Library/PrivateFrameworks/HealthRecordsExtraction.framework/HealthRecordsExtraction
softlink:r:path:/System/Library/Frameworks/SafariServices.framework/SafariServices
softlink:r:path:/System/Library/PrivateFrameworks/ClipServices.framework/ClipServices
softlink:r:path:/System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet
softlink:r:path:/System/Library/Frameworks/Security.framework/Security
softlink:r:path:/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
softlink:r:path:/System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices
f * %
, i 
AWDBarcodeSupportCodeActivatedEvent
NSCopying
BCSDetectedCode
AWDBarcodeSupportCodeDetectedEvent
BCSShareActionPickerItem
AWDBarcodeSupportCodePreviewedEvent
BCSAction
BCSActionPrivate
NSObject
BCSActionPickerItem
BCSNSErrorExtras
BCSActionPickerViewAssistant
BCSActionPickerItemDelegate
BCSAVMetadataMachineReadableCodeObjectExtras
BCSAVParsingSession
BCSAppRanker
BCSApp
BCSNFCReaderConnection
BCSWiFiConfigurationActionPickerItem
BCSAWDLogger
BCSCalendarEventData
BCSParsedDataPrivate
BCSParsedData
NSSecureCoding
NSCoding
BCSCalendarEventParser
BCSDataParser
BCSCIImageExtras
BCSContactData
BCSCopyActionPickerItem
BCSDataDetectionActionPickerItem
DDDetectionControllerInteractionDelegate
BCSDataDetectorsScannerResultData
UpdatingRectValue
BCSDataDetectorsSupportedAction
BCSActionDelegate
BarcodeSupportHelperProtocol
BCSConfigurationManager
BCSDocomoEmailParser
BCSGenericDataParser
BCSGeoDataParser
BCSAnalyticsLogger
BCSInvalidDataAction
BCSInvalidParsedData
BCSKeyValueParser
BCSMeCardParser
BCSNotification
BCSNotificationIcon
BCSNotificationManager
UNUserNotificationCenterDelegate
BCSNotificationService
BCSNotificationServiceProtocol
BCSNFCReaderDelegate
BCSNotificationServiceConnection
BCSNotificationServiceDelegate
NSXPCListenerDelegate
BCSNSCoderExtras
BCSNSStringExtras
BCSNSURLExtras
BCSParsedURLData
BCSParser
BarcodeParsingServiceProtocol
BCSParsingServiceConnection
BCSQRCodeParser
BCSSMSTODataParser
BCSNFCCodeParser
BCSStringAction
BCSNSUserDefaults
BCSStringData
BCSURLAction
BCSURLActionPickerItem
BCSURLDataParser
BCSVCardParser
BCSAppClipActionPickerItem
BCSWiFiConfigurationAction
BCSQRCodePayload
BCSCodePayload
BCSNFCCodePayload
BCSWiFiConfigurationData
BCSAppClipCodeURLDecoder
BCSWiFiConfigurationParser
StringAsInvalidBarcodeDataType:
CGImageForImageDescriptor:
T@"NSString",R,C,N,V_textToCopy
ICSStringWithOptions:
T@"UIImage",R,N
StringAsAppLinkPreferredOpenStrategy:
StringAsBarcodeSourceType:
_IS_sharedIconCompositorContext
StringAsClientType:
_attachmentIcon
T#,R
_barcodeURLType
T@"<BCSActionDelegate>",W,N,Vdelegate
_copyActionItem
T@"<BCSCodePayload>",R,N,V_codePayload
_initWithQueue:
T@"AVMetadataMachineReadableCodeObject",R,N,V_mrcObject
_parser
T@"BCSDetectedCode",&,N,V_detectedCode
_string
T@"CNContact",R,C,N,V_contact
appLink
T@"CPSClipMetadataRequest",&,N
barcodeDataType
T@"DDScannerResult",R,N,V_scannerResult
bundleForClass:
T@"LSApplicationRecord",R,N
contact
T@"NSArray",R,C,N,VappLinks
context
T@"NSString",C,N,V_invalidContents
dealloc
T@"NSString",R,C
detectorOfType:context:options:
T@"NSString",R,C,N,V_extraPreviewText
enableNFCWithCompletionHandler:
T@"NSString",R,C,N,V_label
hasSensitiveURL
T@"NSString",R,C,N,V_ssid
initWithImages:
T@"NSString",R,N
initWithString:
T@"NSString",R,N,V_preferredBundleID
invalidContents
T@"NSURL",R,C,N,V_urlToCopy
isApplicationAvailableToOpenURL:includePrivateURLSchemes:error:
T@"NSURL",R,N,V_url
isProxy
T@"NSXPCConnection",&,N,V_parsingServiceConnection
lowercaseString
T@"UIImage",&,N,V_icon
notificationURL
T@"UNNotificationRequest",R,N
numberWithLong:
T@?,C,N,V_interruptionHandler
release
TB,R
TB,R,N,GisCopyActionItem,V_copyActionItem
setURL:
TB,R,N,GisShowingPicker
.cxx_destruct
T@"NSArray",R,N
CGRectValue
T@"NSURL",R,C,N
StringAsAppLinkActivationOpenStrategy:
T@?,R,N
StringAsBarcodeDataType:
StringAsBarcodeURLType:
_action
StringAsPreviewContentType:
_awdBarcodeSourceTypeForAction:
T@"<BCSActionDelegate>",W,N
_bcs_hasScheme:
T@"<BCSActionPickerItemDelegate>",W,N,V_actionPickerItemDelegate
_hidden
T@"<BCSParsedDataPrivate>",R,N,V_data
_lastScannedCodeBasicDescriptor
T@"BCSAction",R,W,N,V_action
_sendEventLazyWithName:payload:
T@"BCSNotificationServiceConnection",R,N
_temporalStickyFactorForObject:
T@"CNContact",R,N
as_isPasskeyURL
T@"CPSClipMetadataRequest",&,N,VclipMetadataRequest
basicDescriptor
T@"LSAppLink",R,N,V_appLink
cancelNotificationsForCodeType:
T@"NSArray",R,C,N
contactsWithMECARDString:error:
T@"NSDictionary",R,C,N
copyTo:
T@"NSString",C,N,V_invalidURLScheme
detectionTimeMs
T@"NSString",R,C,N
didReceiveNotificationResponse:
T@"NSString",R,C,N,V_icsString
hasAppLinkPreferredOpenStrategy
T@"NSString",R,C,N,V_password
initWithAction:
T@"NSString",R,C,N,V_targetApplicationBundleIdentifier
initWithLabel:action:appLink:codePayload:preferApplicationIcon:
T@"NSString",R,N,V_contentPreviewString
invalidBarcodeDataTypeAsString:
T@"NSURL",R,C,N,V_actionURL
invalidDataType
T@"NSURL",R,N
isPasskeyAction
T@"NSURL",R,N,VurlThatCanBeOpened
isShowingPicker
T@"NSXPCConnection",&,N,V_serviceConnection
nfcIcon
T@"UNNotificationIcon",R,N
numberWithBool:
T@"VNBarcodeObservation",R,N,V_observation
payloadDataType
TB,N
request
TB,R,N
setAttachments:
TB,R,N,GisHidden,V_hidden
TB,R,N,GisWEP,V_WEP
TB,R,N,V_canGroupInSubmenu
TB,R,N,V_hasPreferredAppLink
TB,R,N,V_useInlineMenu
TB,R,N,VhasSensitiveURL
TB,R,N,VisAMSAction
TB,R,N,VisInvalidDataAction
TB,R,N,VisPasskeyAction
TB,R,N,VisPasskeyAssertionAction
TB,R,N,VisPasskeyRegistrationAction
TB,R,N,VisWiFiAction
TB,R,N,VshouldRequireUserToPickTargetApp
TQ,N,V_detectionTimeMs
TQ,N,V_timestamp
TQ,R
TQ,R,N
Ti,N,V_appLinkActivationOpenStrategy
Ti,N,V_appLinkPreferredOpenStrategy
Ti,N,V_barcodeDataType
Ti,N,V_barcodeSourceType
Ti,N,V_barcodeURLType
Ti,N,V_clientType
Ti,N,V_invalidBarcodeDataType
Ti,N,V_previewContentType
Ti,N,V_requestingProcessID
Tq,R,N
Tq,R,N,V_invalidDataType
Tq,R,N,V_type
URLByAppendingPathComponent:
URLByAppendingPathComponent:isDirectory:
URLForDirectory:inDomain:appropriateForURL:create:error:
URLForResource:withExtension:
URLFragmentAllowedCharacterSet
URLOverrideForURL:
URLQueryAllowedCharacterSet
URLWithString:
UUID
UUIDString
_LSFailedToOpenURL:withBundle:
_WEP
_actionDescriptionForAppClip
_actionDescriptionForURL:application:shouldShowHostNameForSafariURL:
_actionDescriptionString
_actionDescriptionWithoutTargetApplicationForURL:
_actionHandler
_actionPickerItemDelegate
_actionPickerItemsForAppClip
_actionPickerItemsForLockScreenVisibleApps
_actionPickerItemsForUnlockedAppLinks
_actionPickerViewAssistant
_actionStringsArray
_actionTypeStringForNFC
_actionTypeStringForQRCode
_actionURL
_actions
_addActionWithTitle:style:handler:shouldDismissHandler:
_addRequestForNotification:codeType:
_additionalActionPickerItems
_alertController
_appLink
_appLinkActivationOpenStrategy
_appLinkPreferredOpenStrategy
_appLinks
_appStoreSearchURLForUnsupportedScheme
_appclipLaunchReason
_applicationIconImageForBundleIdentifier:format:scale:
_applicationRecord
_attachmentIconURL
_awdBarcodeClientType
_awdBarcodeDataTypeFromAction:
_awdBarcodePreferredAppLinkOpenStrategyFromURLAction:
_awdBarcodeURLTypeFromURLAction:
_awdInvalidBarcodeDataTypeFromInvalidData:
_barcodeDataType
_barcodeDescriptor
_barcodeSourceType
_bcs_URLWithUserTypedString:
_bcs_appStoreSearchURLWithScheme:
_bcs_displayString
_bcs_fullURLDisplayString
_bcs_hasCaseInsensitivePrefix:
_bcs_hostWithoutWwwDot
_bcs_isDataDetectorURL
_bcs_isHTTPFamilyURL
_bcs_isMapsURL
_bcs_isOtpauthURL
_bcs_isRedirectedSHCURL
_bcs_isSHCURL
_bcs_isUPIURL
_bcs_localizedDisplayNameForRedirectedSHCURL
_bcs_looksLikeEmailAddress
_bcs_privacyPreservingDescription
_bcs_probablyContainsSameCodeInBasicDescriptor:
_bcs_redirectedHealthURLWithOriginalString:
_bcs_searchURLWithQuery:
_bcs_strictlyDecodeObjectOfClass:forKey:
_bcs_stringForcingLeftToRightDirection
_bcs_stringValueIfQRCode
_bcs_stringWithEnclosingDoubleQuotesRemoved
_bcs_trimmedString
_bcs_unescapedString
_bcs_urlEncodedQueryValue
_bestObjectForParsing:
_canGroupInSubmenu
_cancelNotificationsForCodeType:
_canonicalizeMessageURL:
_cleanUpAlertController
_clientType
_clipIconURLForAction:scale:
_codePayload
_commonActionPickerItemsForURL
_configureUserNotificationCenter
_connection
_contact
_content
_contentExtensionData
_contentIsPreviewable
_contentPreviewString
_currentIndex
_data
_dataTypeForSchemeIfSupportedByDataDetectors:
_ddAction
_ddUIMenu
_defaultDDAction
_defaultURL
_detectedCode
_detectionTimeMs
_deviceDataIsUnavailable
_didReceiveNotificationResponse:
_enableNFC
_eventPayloadForAction:
_extraPreviewText
_fallbackDataTypeDisplayString
_fbOptionsHandlingUnlockIfNecessary
_handleCalendarEventWithICSString:
_handleContactInfo:
_hardwareSupportState
_has
_hasPreferredAppLink
_hostingViewForAction
_icon
_icsString
_identifier
_indexOfDelimiter:range:
_initWithAction:
_interruptionHandler
_invalidBarcodeDataType
_invalidContents
_invalidDataType
_invalidURLScheme
_isCodeFromQRScanner
_isLikelyLastScannedObject:
_isNFCEnabled
_isVisualCode
_itemsToShare
_keyValuePairs
_label
_lastScannedTime
_localActions
_lp_URLWithUserTypedString:relativeToURL:
_lp_highLevelDomain
_lp_simplifiedDisplayString
_lp_userVisibleString
_menuElementForActionPicker:
_mrcObject
_nfcPayload
_nfcUserNotificationCenter
_notificationActionFromActionPickerItem:
_notificationIconDataURLForApp:scale:
_notificationServiceConnection
_notificationWithIdentifier:
_notifications
_numberOfPreviousBackSlashesFromIndex:withinRange:
_observation
_orderAppLinkActionsByRecency:
_parseMetadataObject:reply:completionHandler:
_parseNextKeyValuePair
_parsedDataFromDDResult:decodedString:
_parsingServiceConnection
_passkeyAssertionActionDescription
_passkeyRegistrationActionDescription
_password
_payloadForMRCObject:
_performActionAfterUnlock:
_performActionAndShowActionPickerIfNeeded:
_pickerLabelForURLActionPickerItem:
_preferApplicationIcon
_preferredBundleID
_previewContentType
_qrCodeFeatureFromImage:
_qrCodeUserNotificationCenter
_queryApplicationRecordForURL:completionHandler:
_queue
_requestingProcessID
_resolveAppClipForURL:completion:
_resolveTargetApplicationForURL:completionHandler:
_scannerResult
_serviceConnection
_setCentersPopoverIfSourceViewNotSet:
_setUpActionMenuIfNeeded
_shouldBlockHandlingURL:
_shouldHandleActionPickerItemLocally:
_shouldManuallyRequireAuthenticationForURL:
_shouldOpenInAppForAppLink:
_shouldRequireUserToPickTargetApp
_shouldScheduleBackgroundActionForLaunchBundleID:
_shouldSkipIncomingObject:
_showAppPickerAlertWithFBOptions:
_ssid
_stringForCodeType:
_stringForDataType:
_stringLength
_supplementActions
_systemImageNamed:
_targetApplicationBundleIdentifier
_textToCopy
_timestamp
_title
_tlAlertConfiguration
_type
_updateBlock
_updateSessionWithMetadataObject:completionHandler:
_upiApplicationRecords
_url
_urlToCopy
_useInlineMenu
_userNotificationCenterForCodeType:
_userVisibleAppRecord
_validateLatitudeAndLongitudeInString:range:
_validatedICSString:
_wiFiConfigurationData
_willOpenInSafari
absoluteString
action
action:didDismissAlertController:
actionDidFinish:
actionDidFinish:shouldDismiss:
actionIcon
actionIdentifier
actionPickerItem:didDismissAlertController:
actionPickerItemAlertController:
actionPickerItemDelegate
actionPickerItemWithLabel:actionHandler:
actionPickerItems
actionPickerItemsForAction:proposedItems:
actionURL
actionWillStart:
actionWithIdentifier:title:options:
actionWithIdentifier:title:url:options:
actionWithTitle:image:identifier:handler:
actionWithTitle:style:handler:
addAction:
addCharactersInString:
addNotificationRequest:withCompletionHandler:
addObject:
addObjectsFromArray:
addReadingListItemWithURL:title:previewText:error:
allocWithZone:
appClipCodeMetadataValue
appInFocusStream
appLinkActivationOpenStrategy
appLinkActivationOpenStrategyAsString:
appLinkCount
appLinkPreferredOpenStrategy
appLinkPreferredOpenStrategyAsString:
appLinks
appendFormat:
appendString:
applicationProxyForIdentifier:
applicationProxyForSystemPlaceholder:
applicationState
applicationsAvailableForOpeningURL:
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:count:
as_isPasskeyRegistrationURL
attachmentWithIdentifier:URL:options:error:
auditToken
autorelease
barcodeActionsForContext:URL:result:contact:ics:
barcodeDataTypeAsString:
barcodeDetectedEventForAction:
barcodeSourceType
barcodeSourceTypeAsString:
barcodeURLType
barcodeURLTypeAsString:
bcs_barcodeSupportDefaults
boolValue
bounds
bundleIdentifier
bundleIdentifierOfLastUsedAppForURL:
bundleProxyWithAuditToken:error:
bundleWithURL:
buttonActionsForURL:result:contact:icsString:context:view:identifier:suggestedActions:defaultAction:
calendar
canGroupInSubmenu
canHandleActionLocally
caseInsensitiveCompare:
charValue
characterAtIndex:
checkHardwareSupportStateWithCompletionHandler:
checkNFCEnabledWithCompletionHandler:
children
class
clearCaches
clientType
clientTypeAsString:
clipCaption
clipMetadataRequest
clipName
clipOpenButtonTitle
code
codePayload
codeType
compactTitle
compare:
components
componentsWithURL:resolvingAgainstBaseURL:
configuration
conformsToProtocol:
contactsWithData:error:
contentPreviewString
copy
copyActionItem
copyWithZone:
coreResult
count
countByEnumeratingWithState:objects:count:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
currentHandler
data
dataType
dataTypeDisplayString
dataUsingEncoding:
dataWithContacts:error:
dd_performAction
dd_performActionWithRect:
debugDescription
debugDescriptionDictionary
debugDescriptionExtraInfoDictionary
decodeAppClipCodeURLWithEncodedData:codingVersion:requiresAuthorization:withReply:
decodeObjectOfClass:forKey:
decodeURLWithEncodedData:codingVersion:requiresAuthorization:completionHandler:
defaultActionTargetApplicationBundleIdentifier
defaultManager
defaultReadingList
defaultWorkspace
delegate
description
descriptor
detectedCode
detectedCodeWithBarcodeObservation:
detectedCodeWithMachineReadableObject:
determineActionabilityWithCompletionHandler:
developerType
dictionary
dictionaryRepresentation
dictionaryWithObjects:forKeys:count:
didActivateNFCReader
didHandleBulletinActionWithIdentifier:
didPerformAction
didScanNFCTagOfType:
disconnect
domain
doubleValue
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
encodedData
enumerateObjectsUsingBlock:
errorWithDomain:code:userInfo:
executeQuery:error:
externalURL
extraPreviewText
featuresInImage:
fileExistsAtPath:isDirectory:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
firstMatchInString:options:range:
firstObject
fullAppName
generalPasteboard
getActionWithData:codePayload:completionHandler:
getAppLinksWithURL:completionHandler:
getClipMetadataSynchronously
getDownloadedIconURLSynchronously
getStreet:city:state:zip:country:
handleActionWithIdentifier:notificationResponseOriginID:
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
hasAppLinkActivationOpenStrategy
hasBarcodeDataType
hasBarcodeSourceType
hasBarcodeURLType
hasClientType
hasDetectionTimeMs
hasInvalidBarcodeDataType
hasPreferredAppLink
hasPrefix:
hasPreviewContentType
hasTimestamp
hasUserInterface
hash
hidden
host
icon
iconDataForVariant:
iconNamed:
icsString
identifier
image
imageURL
indexOfObjectPassingTest:
init
initRequiringSecureCoding:
initWithAction:ddAction:
initWithAction:textToCopy:
initWithAction:urlToCopy:
initWithActivityItems:applicationActivities:
initWithActivityType:
initWithBarcodeDescriptor:
initWithBundleIdentifier:
initWithBundleIdentifier:allowPlaceholder:error:
initWithCGImage:
initWithCGImage:options:
initWithCGImage:scale:
initWithCoder:
initWithConnection:
initWithContact:
initWithData:codePayload:
initWithFrame:
initWithICSString:
initWithICSString:options:error:
initWithInvalidDataType:invalidContents:
initWithLabel:action:
initWithLabel:action:appLink:codePayload:
initWithLabel:action:url:applicationRecord:
initWithLabel:action:url:applicationRecord:preferApplicationIcon:
initWithLabel:actionHandler:
initWithLong:
initWithMachServiceName:options:
initWithNFCPayload:
initWithObjectsAndKeys:
initWithPattern:options:error:
initWithSSID:isWEP:password:isHidden:
initWithScannerResult:type:extraPreviewText:
initWithServiceName:
initWithString:startIndex:
initWithSuiteName:
initWithType:
initWithURL:
initWithURL:resolvingAgainstBaseURL:
initWithURL:type:
initWithURL:type:extraPreviewText:
initWithURL:type:extraPreviewText:preferredBundleID:
initWithUpdateBlock:
insertObject:atIndex:
integerValue
interfaceWithProtocol:
interruptionHandler
invalidBarcodeDataType
invalidURLScheme
invalidate
isAMSAction
isCopyActionItem
isEqual:
isEqualToData:
isEqualToNumber:
isEqualToString:
isHidden
isInstalled
isInvalidDataAction
isKindOfClass:
isLikelyAvailable
isLikelyEqualToCode:
isLiveCameraOnlyAction
isMemberOfClass:
isPasskeyAssertionAction
isPasskeyRegistrationAction
isPoweredByThirdParty
isRemovedSystemApp
isRestricted
isSymbolImage
isWEP
isWiFiAction
keyValuePairs
knowledgeStoreWithDirectReadOnlyAccess
label
lastPathComponent
length
listener:shouldAcceptNewConnection:
localizedActionDescription
localizedDefaultActionDescription
localizedDefaultActionTitle
localizedName
localizedStringForKey:value:table:
localizedTypeDisplayNames
logBarcodeActivatedEventForAction:
logBarcodeDetectedEvent:startTime:
logBarcodeDetectedEventForAction:fromBundleID:
logBarcodeDetectedEventForAction:startTime:
logBarcodePreviewedEventForContentType:
mainBundle
menuElements
menuElementsCount
menuProvider
menuWithTitle:image:identifier:options:children:
mergeFrom:
messageString
mrcObject
mustOpenAppLinkInApp
mutableCopy
nfcReaderDidDetectNonNDEFTag
nfcReaderStateDidChange:
notification
notificationForAction:
notificationIconBundleIdentifier
notificationServiceConnection
notificationTitle
notifyParsedCodeWithData:codePayload:shouldReplacePreviousNotifications:reply:
notifyParsedCodeWithData:codePayload:shouldReplacePreviousNotifications:withReply:
numberWithInteger:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
observation
openSensitiveURL:withOptions:error:
openStrategy
openURL:options:completionHandler:
openURL:withOptions:error:
openUserActivity:withApplicationProxy:options:completionHandler:
openWithConfiguration:completionHandler:
operationToOpenResource:usingApplication:uniqueDocumentIdentifier:isContentManaged:sourceAuditToken:userInfo:options:delegate:
operationToOpenResource:usingApplication:uniqueDocumentIdentifier:sourceIsManaged:userInfo:options:delegate:
orderAppLinks:forLastUsedApp:
orderApplicationRecords:forPreferredBundleID:
orderApps:forLastUsedApp:
originIdentifier
parseCodeFromImage:completionHandler:
parseCodeFromMetadataMachineReadableCodeObject:completionHandler:
parseCodeFromString:completionHandler:
parseCodeWithCompletion:
parseDataSource:options:error:
parseEncodedURLData:version:completion:
parseQRCodeFeature:withReply:
parseQRCodeMetadata:withReply:
parseQRCodeString:withReply:
parseString:
parseURL:
parseURL:originalString:
parsingServiceConnection
password
path
payloadDataValue
payloadStringValue
performAction
performAction:fromAlertController:interactionDelegate:
performAction:inView:interactionDelegate:
performActionWithCompletion:
performActionWithFBOptions:
performActionWithOptions:completion:
performDefaultAction
performDefaultActionWithCompletionHandler:
performDefaultActionWithFBOptions:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
popoverPresentationController
postNotificationAfterParsingCodeFromImage:completion:
postNotificationForURL:payload:completionHandler:
predicateForEventsWithStringValue:
preferItemsInSubmenu
preferredBundleID
prepareImagesForImageDescriptors:
presentViewController:animated:completion:
presentedViewController
presentingViewControllerForAction:
previewContentType
previewContentTypeAsString:
processAppClipImageWithURL:scale:completion:
processAppClipImageWithURL:scale:reply:
processIdentifier
qrCodeIcon
range
rangeAtIndex:
rangeOfString:
rangeOfString:options:
rangeOfString:options:range:
readFrom:
remoteObjectProxyWithErrorHandler:
removeAllObjects
removeAllPendingNotificationRequests
removeCharactersInString:
removeDeliveredNotificationsWithIdentifiers:
removeEvent:span:error:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removePendingNotificationRequestsWithIdentifiers:
requestAccessForEntityType:completionHandler:
requestAccessToEntityType:completion:
requestClipWithCompletion:
requestDownloadedIconWithMetadata:completion:
requestMetadataWithCompletion:
requestWithIdentifier:content:trigger:
requestingProcessID
reset
respondsToSelector:
resultFromCoreResult:
resume
retain
retainCount
safari_hasCaseInsensitivePrefix:
safari_isCaseInsensitiveEqualToString:
saveEvent:span:error:
savePayloadInUserActivity:
scannerResult
scheduleNotification:codeType:
scheme
self
serviceConnection
sessionConfiguration
sessionProxy
setActionPickerItemDelegate:
setAlertTopic:
setAppLinkActivationOpenStrategy:
setAppLinkPreferredOpenStrategy:
setBarcodeDataType:
setBarcodeSourceType:
setBarcodeURLType:
setBody:
setByAddingObject:
setCategoryIdentifier:
setClasses:forSelector:argumentIndex:ofReply:
setClientType:
setClipMetadataRequest:
setCountLimit:
setDefaultActionURL:
setDelegate:
setDetectedCode:
setDetectionTimeMs:
setEventStreams:
setExportedInterface:
setExportedObject:
setFrontBoardOptions:
setHasAppLinkActivationOpenStrategy:
setHasAppLinkPreferredOpenStrategy:
setHasBarcodeDataType:
setHasBarcodeSourceType:
setHasBarcodeURLType:
setHasClientType:
setHasDetectionTimeMs:
setHasInvalidBarcodeDataType:
setHasPreviewContentType:
setHasTimestamp:
setIcon:
setIgnoreAppLinkEnabledProperty:
setInterface:forSelector:argumentIndex:ofReply:
setInterruptionHandler:
setInvalidBarcodeDataType:
setInvalidContents:
setInvalidURLScheme:
setInvalidationHandler:
setLastUsedApp:forURL:
setLaunchReason:
setLimit:
setNdefMessagePayload:
setObject:forKey:
setObject:forKeyedSubscript:
setParsingServiceConnection:
setPath:
setPredicate:
setPreferredBundleIdentifier:forURL:
setPreviewContentType:
setQuery:
setRemoteObjectInterface:
setRequestingProcessID:
setScale:
setScheme:
setServiceConnection:
setShape:
setShouldAuthenticateDefaultAction:
setShouldBackgroundDefaultAction:
setShouldHideDate:
setShouldIgnoreDoNotDisturb:
setSize:
setSortDescriptors:
setSound:
setSourceRect:
setSourceView:
setString:
setSubtitle:
setThreadIdentifier:
setTimestamp:
setTitle:
setTopic:
setUpQRCodeControlCenterModuleWithCompletionHandler:
setUpQRCodeControlCenterModuleWithReply:
setUserInfo:
setWantsNotificationResponsesDelivered
setWebpageURL:
setWithArray:
sharedApplication
sharedController
sharedDecoder
sharedLogger
sharedManager
sharedParser
shortDescription
shouldDismissAlertWhenActionIsTaken
shouldHandleBulletinActionWithIdentifier:
shouldRequireUserToPickTargetApp
shouldSkipBanner
showActionPicker
showActionPickerWithItems:fromViewController:presentingRect:
showingPicker
sortUsingComparator:
soundWithAlertType:
sourceRectForPopoverActionPicker:
sourceWithQRCodeValue:error:
ssid
start
startDate
startDateSortDescriptorAscending:
startNFCReaderWithDelegate:
startNFCReaderWithDelegate:errorHandler:
startQRCodeParsingSessionWithMetadataObject:completionHandler:
startReaderWithDelegate:errorHandler:interruptionHandler:
stopNFCReader
stopNFCReaderWithErrorHandler:
stopQRCodeParsingSession
stopReaderWithErrorHandler:
stringByAddingPercentEncodingWithAllowedCharacters:
stringByAppendingString:
stringByTrimmingCharactersInSet:
stringWithCapacity:
stringWithFileSystemRepresentation:length:
stringWithFormat:
stringWithString:
stringWithUTF8String:
subMenuWithMenuItems:
substringFromIndex:
substringToIndex:
substringWithRange:
superclass
supportsSecureCoding
supportsURL:
symbology
synchronize
systemImageNamed:
targetApplication
targetApplicationBundleIdentifier
targetApplicationProxy
targetApplicationRecord
tempVCardFileURL
textToCopy
timestamp
title
type
unsignedIntValue
updateSessionWithMetadataObjects:
updateSessionWithMetadataObjects:completionHandler:
urlThatCanBeOpened
urlToCopy
useInlineMenu
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
userNotificationCenter:willPresentNotification:withCompletionHandler:
valueForEntitlement:
valueForKey:
view
weakToStrongObjectsMapTable
whitespaceAndNewlineCharacterSet
withdrawNotificationsWithProcessID:codeType:
writeTo:
writeToURL:atomically:
writeToURL:options:error:
zone
@24@0:8^{_NSZone=}16
v24@0:8Q16
v20@0:8B16
B16@0:8
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
{?="timestamp"b1"appLinkActivationOpenStrategy"b1"barcodeDataType"b1"barcodeSourceType"b1"barcodeURLType"b1"clientType"b1}
@24@0:8@16
v24@0:8@?16
v16@0:8
@"AVMetadataMachineReadableCodeObject"
@"VNBarcodeObservation"
{?="detectionTimeMs"b1"timestamp"b1"appLinkPreferredOpenStrategy"b1"barcodeDataType"b1"barcodeSourceType"b1"barcodeURLType"b1"clientType"b1"invalidBarcodeDataType"b1}
@"NSMutableArray"
{?="timestamp"b1"previewContentType"b1}
v40@0:8@16@24@?32
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"<BCSActionDelegate>"16@0:8
v24@0:8@"<BCSActionDelegate>"16
@"NSURL"16@0:8
@"NSArray"16@0:8
v24@0:8@?<v@?@"NSError">16
q16@0:8
@"NSDictionary"16@0:8
@"CPSClipMetadataRequest"16@0:8
v24@0:8@"CPSClipMetadataRequest"16
@32@0:8@16@24
v32@0:8@16@?24
@?16@0:8
@"BCSActionPickerViewAssistant"
@"<BCSActionDelegate>"
@"NSURL"
@"NSArray"
@"CPSClipMetadataRequest"
@"BCSDetectedCode"
@"NSString"
@"<BCSParsedDataPrivate>"
@"<BCSCodePayload>"
@32@0:8@16@?24
@"BCSAction"
@"<BCSActionPickerItemDelegate>"
@"UIImage"
v32@0:8@16@24
@"UIAlertController"24@0:8@"BCSActionPickerItem"16
v32@0:8@"BCSActionPickerItem"16@"UIAlertController"24
B64@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32
@"UIAlertController"
d24@0:8@16
@"BCSQRCodeParser"
@"NSDictionary"
v40@0:8@16@?24@?32
@"BCSNotificationServiceConnection"
@"NSObject<OS_dispatch_queue>"
v32@0:8@16Q24
v24@0:8q16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"<BCSParsedData>"24@0:8@"NSString"16
@"CNContact"
v28@0:8@16B24
v32@0:8@"DDAction"16@"UIAlertController"24
v24@0:8@"DDAction"16
v28@0:8@"DDAction"16B24
@"DDAction"
@40@0:8@16q24@32
@"DDScannerResult"
@24@0:8@?16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
@"UIViewController"24@0:8@"<BCSAction>"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"<BCSAction>"16
@"NSArray"32@0:8@"<BCSAction>"16@"NSArray"24
@"UIMenu"
@"DDUIAction"
v40@0:8@16d24@?32
v24@0:8@?<v@?B@"NSError">16
v40@0:8@"NSURL"16d24@?<v@?@"NSURL">32
@"NSXPCConnection"
@32@0:8^{__DDResult=}16@24
@40@0:8@16{_NSRange=QQ}24
@24@0:8q16
@32@0:8q16@24
@32@0:8@16Q24
Q40@0:8@16{_NSRange=QQ}24
Q40@0:8Q16{_NSRange=QQ}24
@"NSMutableDictionary"
@"BCSNotificationIcon"
@32@0:8@16d24
@28@0:8@16f24
@"<BCSAction>"
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
v32@0:8@16q24
v28@0:8i16q20
@"UNUserNotificationCenter"
@"NSMutableSet"
v44@0:8@16@24B32@?36
v44@0:8@"<BCSParsedData>"16@"<BCSCodePayload>"24B32@?<v@?@"NSError"@"AWDBarcodeSupportCodeDetectedEvent">36
v24@0:8@"UNNotificationResponse"16
v24@0:8@"<BCSNFCReaderDelegate>"16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@32@0:8#16@24
@32@0:8@16q24
@48@0:8@16q24@32@40
v44@0:8@16Q24B32@?36
v32@0:8@"NSString"16@?<v@?@"<BCSParsedData>"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"<BCSParsedData>"@"NSError">24
v32@0:8@"CIQRCodeFeature"16@?<v@?@"<BCSParsedData>"@"NSError">24
v32@0:8@"NSString"16@"NSURL"24
v44@0:8@"NSData"16Q24B32@?<v@?@"NSURL"@"NSError">36
@24@0:8^{CGImage=}16
v32@0:8^{CGImage=}16@?24
@"BCSParsingServiceConnection"
@36@0:8@16@24B32
@"LSApplicationRecord"
@52@0:8@16@24@32@40B48
@48@0:8@16@24@32@40
@"LSAppLink"
q24@0:8@16
v24@0:8@"NSUserActivity"16
@"CIBarcodeDescriptor"
@"NFCNDEFMessage"
@40@0:8@16B24@28B36
v40@0:8@16Q24@?32
%@ %@
timestamp
clientType
barcodeDataType
barcodeURLType
appLinkActivationOpenStrategy
barcodeSourceType
BARCODECLIENTTYPE_OTHER
BARCODECLIENTTYPE_NOTIFICATION_SERVICE
BARCODECLIENTTYPE_SAFARI
(unknown: %i)
BARCODEDATATYPE_INVALID
BARCODEDATATYPE_URL
BARCODEDATATYPE_CONTACT
BARCODEDATATYPE_EMAIL
BARCODEDATATYPE_TELEPHONE
BARCODEDATATYPE_MESSAGE
BARCODEDATATYPE_LOCATION
BARCODEDATATYPE_EVENT
BARCODEDATATYPE_WIFI
BARCODEDATATYPE_HOMEKIT_URL
BARCODEDATATYPE_STRING
BARCODEDATATYPE_OTHER
BARCODEURLTYPE_NON_APPLINK
BARCODEURLTYPE_SINGLE_APPLINK
BARCODEURLTYPE_MULTIPLE_APPLINKS
BARCODEAPPLINKOPENSTRATEGY_OPEN_IN_SAFARI
BARCODEAPPLINKOPENSTRATEGY_OPEN_IN_APP
BARCODESOURCETYPE_QR
BARCODESOURCETYPE_OTHER
BCSDetectedCodeErrorDomain
v24@?0@"<BCSAction>"8@"NSError"16
VNBarcodeSymbology getVNBarcodeSymbologyAppClipCode(void)
BCSDetectedCode.m
VNBarcodeSymbologyAppClipCode
v8@?0
void *VisionLibrary(void)
detection_time_ms
invalidBarcodeDataType
appLinkPreferredOpenStrategy
INVALIDBARCODEDATATYPE_OTHER
INVALIDBARCODEDATATYPE_URL
INVALIDBARCODEDATATYPE_CONTACT
INVALIDBARCODEDATATYPE_EMAIL
INVALIDBARCODEDATATYPE_TELEPHONE
INVALIDBARCODEDATATYPE_MESSAGE
INVALIDBARCODEDATATYPE_LOCATION
INVALIDBARCODEDATATYPE_EVENT
INVALIDBARCODEDATATYPE_WIFI
INVALIDBARCODEDATATYPE_HOMEKIT_URL
square.and.arrow.up
previewContentType
DATA_DETECTORS_SCANNED_RESULT
CALENDAR_EVENT
CONTACT
STRING
OTHER
BCSActionErrorDomain
v12@?0B8
BCSAction.m
Subclasses must implement this
Open
actionClass
actionDescription
defaultActionDescription
actionInfo
QR Code
qrcode.viewfinder
v16@?0@"UIAction"8
@"UIMenu"24@?0@8@"NSArray"16
qrcode
QR CODE DETECTED
NFC TAG DETECTED
wapi
WLAN QR CODE
WI-FI QR CODE
TEXT QR CODE
APP QR CODE
APP CLIP QR CODE
com.apple.mobilesafari
WEBSITE QR CODE
%@ QR CODE
v16@?0@"NSError"8
(NSError: domain: %@, code: %ld)
/System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
/System/Library/PrivateFrameworks/MobileCoreServices.framework/MobileCoreServices
/AppleInternal/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
void *MobileCoreServicesLibrary(void)
MobileCoreServicesSoftLink.m
LSAppLink
Class getLSAppLinkClass(void)_block_invoke
Unable to find class %s
LSApplicationProxy
Class getLSApplicationProxyClass(void)_block_invoke
LSApplicationRecord
Class getLSApplicationRecordClass(void)_block_invoke
LSApplicationWorkspace
Class getLSApplicationWorkspaceClass(void)_block_invoke
B8@?0
Cancel
v16@?0@"UIAlertAction"8
BarcodeRawData
BarcodeType
SymbolVersion
QRMASK
ErrorCorrectionLevel
RawData
Version
com.apple.AppClipCode
v32@?0@"AVMetadataMachineReadableCodeObject"8Q16^B24
hostsToLastUsedApps
schemesToLastUsedApps
B32@?0@"<BCSApp>"8Q16^B24
com.apple.BarcodeSupport.BCSNFCReaderConnection
com.apple.BarcodeSupport
BCSNFCReaderConnection
wifi
com.apple.BarcodeSupport.BarcodeNotificationService
icsString
BEGIN:VEVENT
BEGIN:VCALENDAR
END:VCALENDAR
BEGIN:VCALENDAR
contact
Copy
Copy Link
doc.on.doc
scannerResult
type
extraPreviewText
Choose Action
address
actions
person.crop.circle.fill
calendar
{CGRect={CGPoint=dd}{CGSize=dd}}8@?0
com.apple.datadetectors.DDShareAction
NSString *getkDataDetectorsSourceRectKey(void)
DataDetectorsUISoftLink.h
kDataDetectorsSourceRectKey
/System/Library/Frameworks/DataDetectorsCore.framework/DataDetectorsCore
/System/Library/PrivateFrameworks/DataDetectorsCore.framework/DataDetectorsCore
/AppleInternal/Library/Frameworks/DataDetectorsCore.framework/DataDetectorsCore
void *DataDetectorsCoreLibrary(void)
DataDetectorsCoreSoftLink.m
DDScannerResult
Class getDDScannerResultClass(void)_block_invoke
CFStringRef _DDResultCopyExtractedURL(DDResultRef)
BCSDDResultUtilities.m
DDResultCopyExtractedURL
v20@?0B8@"NSError"12
com.apple.BarcodeSupport.Helper
v16@?0@"NSURL"8
street
city
state
country
/System/Library/Frameworks/CoreNFC.framework/CoreNFC
/System/Library/PrivateFrameworks/CoreNFC.framework/CoreNFC
/AppleInternal/Library/Frameworks/CoreNFC.framework/CoreNFC
void *CoreNFCLibrary(void)
CoreNFCSoftLink.m
NFCNDEFMessage
Class getNFCNDEFMessageClass(void)_block_invoke
matmsg:
BODY
mailto:
subject=%@
body=%@
BCSErrorDomain
mailto
DDScannerRef _DDScannerCreate(DDScannerType, DDScannerOptions, CFErrorRef *)
BCSGenericDataParser.m
DDScannerCreate
DDScanQueryRef _DDScanQueryCreateFromString(CFAllocatorRef, CFStringRef, CFRange)
DDScanQueryCreateFromString
Boolean _DDScannerScanQuery(DDScannerRef, DDScanQueryRef)
DDScannerScanQuery
CFArrayRef _DDScannerCopyResultsWithOptions(DDScannerRef, DDScannerCopyResultsOptions)
DDScannerCopyResultsWithOptions
CFRange _DDResultGetRange(DDResultRef)
DDResultGetRange
DDResultCategory _DDResultGetCategory(DDResultRef)
DDResultGetCategory
geo:
http://maps.apple.com/?q=%@
^(-?\d{1,2}(?:\.\d+)?),(-?\d{1,3}(?:\.\d+)?)
public.png
com.apple.BarcodeSupport.Notification
main-screen-scale
CGImageDestinationRef _CGImageDestinationCreateWithData(CFMutableDataRef, CFStringRef, size_t, CFDictionaryRef)
BCSGraphicsUtilities.m
CGImageDestinationCreateWithData
void *ImageIOLibrary(void)
CFStringRef getkCGImagePropertyPNGCompressionFilter(void)
kCGImagePropertyPNGCompressionFilter
CFStringRef getkCGImagePropertyPNGDictionary(void)
kCGImagePropertyPNGDictionary
CFStringRef getkCGImagePropertyPNGBandCount(void)
kCGImagePropertyPNGBandCount
void _CGImageDestinationAddImage(CGImageDestinationRef, CGImageRef, CFDictionaryRef)
CGImageDestinationAddImage
_Bool _CGImageDestinationFinalize(CGImageDestinationRef)
CGImageDestinationFinalize
CGImageSourceRef _CGImageSourceCreateWithURL(CFURLRef, CFDictionaryRef)
CGImageSourceCreateWithURL
CGImageRef _CGImageSourceCreateImageAtIndex(CGImageSourceRef, size_t, CFDictionaryRef)
CGImageSourceCreateImageAtIndex
ISIcon
Class getISIconClass(void)_block_invoke
void *IconServicesLibrary(void)
ISImage
Class getISImageClass(void)_block_invoke
ISImageDescriptor
Class getISImageDescriptorClass(void)_block_invoke
CIContext
Class getCIContextClass(void)_block_invoke
void *CoreImageLibrary(void)
com.apple.BarcodeSupport.DidActivateNFCReader
com.apple.BarcodeSupport.DidScanNFCTag
com.apple.BarcodeSupport.DidDetectBarcode
com.apple.BarcodeSupport.DidActivateBarcode
com.apple.BarcodeSupport.DidPreviewContent
com.apple.BarcodeSupport.Analytics
tagDataType
@"NSDictionary"8@?0
Invalid
Contact
Email
Telephone
Message
Location
Calendar
WiFi
HomeKit
Text
PasskeyAssertion
PasskeyRegistration
Other
client
codeType
dataType
applinks
openInApp
contentType
appclip
No usable data found
/System/Library/Frameworks/iCalendar.framework/iCalendar
/System/Library/PrivateFrameworks/iCalendar.framework/iCalendar
/AppleInternal/Library/Frameworks/iCalendar.framework/iCalendar
void *iCalendarLibrary(void)
ICalendarSoftLink.m
ICSDocument
Class getICSDocumentClass(void)_block_invoke
ICSEvent
Class getICSEventClass(void)_block_invoke
invalidDataType
invalidURLScheme
invalidContents
MECARD:
barcodeNotificationCategory
barcodeNotificationDefaultViewCategory
com.apple.BarcodeSupport.Notification.QRCode
com.apple.BarcodeSupport.Notification.Other
com.apple.BarcodeSupport.Notification.Payload
extraPrviewText
previewFooterTitle
previewFooterSubtitle
notificationActions
contentIsPreviewable
QR Code Detected
NFC Tag Detected
Website NFC Tag
%@ NFC Tag
WLAN QR Code
Wi-Fi QR Code
Text QR Code
App QR Code
App Clip QR Code
Passkey QR Code
Apple QR Code
Website QR Code
%@ QR Code
com.apple.Maps
Transfer.vcf
com.apple.MobileAddressBook
v12@?0C8
com.apple.mobilephone
com.apple.InCallService
com.apple.facetime
facetime
facetime-audio
telemergencycall
Choose App to Open URL
SBUserNotificationForcesModalAlertAppearance
SBUserNotificationDisplayActionButtonOnLockScreen
q24@?0@"BCSActionPickerItem"8@"BCSActionPickerItem"16
EKEventStore
Class getEKEventStoreClass(void)_block_invoke
BCSNotification.m
void *EventKitLibrary(void)
BOOL _SBSGetScreenLockStatus(Boolean *)
SBSGetScreenLockStatus
void *SpringBoardServicesLibrary(void)
void _SBSRequestPasscodeUnlockUI(void (^__strong)(Boolean))
SBSRequestPasscodeUnlockUI
NSString *getFBSOpenApplicationOptionKeyLaunchOrigin(void)
FBSOpenApplicationOptionKeyLaunchOrigin
void *FrontBoardServicesLibrary(void)
TLAlertConfiguration
Class getTLAlertConfigurationClass(void)_block_invoke
void *ToneLibraryLibrary(void)
NSString *getTLAlertTopicPassbookNFCScanComplete(void)
TLAlertTopicPassbookNFCScanComplete
NSString *getFBSOpenApplicationOptionKeyPromptUnlockDevice(void)
FBSOpenApplicationOptionKeyPromptUnlockDevice
NSString *getFBSOpenApplicationOptionKeyUnlockDevice(void)
FBSOpenApplicationOptionKeyUnlockDevice
QR_section_icon
NFC_section_icon
com.apple.ios.StoreKitUIService
com.apple.AMSEngagementViewService
AppClips@2x
AppClips@3x
%@.png
CGImageRef _LICreateIconFromCachedBitmap(CFDataRef)
BCSNotificationIcon.mm
LICreateIconFromCachedBitmap
void *MobileIconsLibrary()
com.apple.barcodesupport.qrcode
com.apple.barcodesupport.nfc
v16@?0@"<BCSAction>"8
com.apple.private.barcodesupport.allowNotifications
/System/Library/Frameworks/UIKit.framework/UIKit
/System/Library/PrivateFrameworks/UIKit.framework/UIKit
/AppleInternal/Library/Frameworks/UIKit.framework/UIKit
void *UIKitLibrary(void)
UIKitSoftLink.m
UIAlertAction
Class getUIAlertActionClass(void)_block_invoke
UIAlertController
Class getUIAlertControllerClass(void)_block_invoke
UIApplication
Class getUIApplicationClass(void)_block_invoke
UIImage
Class getUIImageClass(void)_block_invoke
UIPasteboard
Class getUIPasteboardClass(void)_block_invoke
UIAction
Class getUIActionClass(void)_block_invoke
UIActivityViewController
Class getUIActivityViewControllerClass(void)_block_invoke
UIMenu
Class getUIMenuClass(void)_block_invoke
UIView
Class getUIViewClass(void)_block_invoke
https://redirect.health.apple.com/SMARTHealthCard/
https://redirect.health.apple.com/SMARTHealthCard/#
https://redirect.health.apple.com/EU-DCC/#
http
https
maps
maps.apple.com
otpauth
apple-otpauth
x-barcode-datadetectors-action
www.
x-web-search://?%@
shc:/
hc1:
HKSignedClinicalDataSource
Class getHKSignedClinicalDataSourceClass(void)_block_invoke
BCSNSURLExtras.m
void *HealthRecordServicesLibrary(void)
HKVerifiableHealthRecordsParser
Class getHKVerifiableHealthRecordsParserClass(void)_block_invoke
void *HealthRecordsExtractionLibrary(void)
preferredBundleID
v24@?0@"<BCSParsedData>"8@"NSError"16
v24@?0@"NSURL"8@"NSError"16
com.apple.BarcodeSupport.ParsingService
/System/Library/Frameworks/DataDetectorsUI.framework/DataDetectorsUI
/System/Library/PrivateFrameworks/DataDetectorsUI.framework/DataDetectorsUI
/AppleInternal/Library/Frameworks/DataDetectorsUI.framework/DataDetectorsUI
void *DataDetectorsUILibrary(void)
DataDetectorsUISoftLink.m
DDDetectionController
Class getDDDetectionControllerClass(void)_block_invoke
DDCopyAction
Class getDDCopyActionClass(void)_block_invoke
DDContextMenuAction
Class getDDContextMenuActionClass(void)_block_invoke
DDUIEventForResults
EKEvent *_DDUIEventForResults(EKEventStore *__strong, NSArray *__strong, NSDictionary *__strong)
localized string not found
v16@?0@"<BCSActionPrivate>"8
v16@?0@"<BCSParsedDataPrivate>"8
v24@?0@"NSError"8@"AWDBarcodeSupportCodeDetectedEvent"16
smsto:
sms:%@&body=%@
sms:%@
Search Web in Safari
safari.fill
Search Web
X-HM
com.apple.Home-private
com.apple.Home
Tap here to learn more
targetApplication
Add to Reading List
eyeglasses
Open in Safari
homekit
arrow.up.forward.appclip
health.fill
person.badge.key.fill
arrow.up.forward.app.fill
Title for the menu to open an application or the browser when a QR code is deteced in lock screen
Open Link
https://found.apple.com/airtag?
com.apple.BarcodeScanner
v24@?0@"CPSClipMetadata"8@"NSError"16
v24@?0@"NSArray"8@"NSError"16
Powered by %@
com.apple.AppStore
com.apple.MobileStore
View in %@
com.apple.Preferences
Add Verification Code in Passwords
Open in %@
data
ams.apple.com
amsui.apple.com
amsue.apple.com
one.apple.com
Sign in with a passkey
Save a passkey
SSReadingList
Class getSSReadingListClass(void)_block_invoke
BCSURLAction.m
void *SafariServicesLibrary(void)
NSString *getCPSSessionLaunchReasonQR(void)
CPSSessionLaunchReasonQR
void *ClipServicesLibrary(void)
NSString *getCPSSessionLaunchReasonNFC(void)
CPSSessionLaunchReasonNFC
CPSClipRequest
Class getCPSClipRequestClass(void)_block_invoke
BOOL _CPSClipsFeatureEnabled(void)
CPSClipsFeatureEnabled
CPSClipMetadataRequest
Class getCPSClipMetadataRequestClass(void)_block_invoke
safari
arrow.up.forward.app
x-hm
URL:
smsto
fido
DeviceClass
iPad
com.apple.SafariViewService
platform-application
_DKKnowledgeStore
Class get_DKKnowledgeStoreClass(void)_block_invoke
BCSUtilities.m
void *CoreDuetLibrary(void)
_DKEventQuery
Class get_DKEventQueryClass(void)_block_invoke
_DKSystemEventStreams
Class get_DKSystemEventStreamsClass(void)_block_invoke
_DKQuery
Class get_DKQueryClass(void)_block_invoke
SecTaskRef _SecTaskCreateFromSelf(CFAllocatorRef _Nullable)
SecTaskCreateFromSelf
void *SecurityLibrary(void)
CFTypeRef _SecTaskCopyValueForEntitlement(SecTaskRef, CFStringRef, CFErrorRef *)
SecTaskCopyValueForEntitlement
BEGIN:VCARD
Open App Clip
/System/Library/Frameworks/Contacts.framework/Contacts
/System/Library/PrivateFrameworks/Contacts.framework/Contacts
/AppleInternal/Library/Frameworks/Contacts.framework/Contacts
void *ContactsLibrary(void)
ContactsSoftLink.m
CNContact
Class getCNContactClass(void)_block_invoke
CNContactVCardSerialization
Class getCNContactVCardSerializationClass(void)_block_invoke
CNContactStore
Class getCNContactStoreClass(void)_block_invoke
ssid
password
isWEP
true
false
isHidden
Join Network
payloadData
com.apple.BarcodeSupport.BCSAppClipCodeURLDecoderErrorDomain
WPA2
WPA/WPA2
nopass
WIFI:
parseCodeWithCompletion:
BCSDetectedCode: (%@) did receive VNObservation with symbology %{private}@
BCSShareActionPickerItem: can't find presenting view controller, please set up the action's delegate.
%@: -[BCSAction presentingViewControllerForAction:] must be implemented to perform action.
%@: -[BCSAction presentingViewControllerForAction:] must return non-nil view controller to perform action.
%@: -[BCSAction sourceRectForPopoverActionPicker:] must be implemented to show action picker.
BCSAction: Presenting action picker
BCSActionPickerItem: _actionHandler called in -performAction
BCSActionPickerViewAssistant: No presenting view controller is specified
BCSActionPickerViewAssistant: Host view controller is already presenting a view.
BCSActionPickerViewAssistant: Action picker is already being shown.
BCSAVParsingSession (%p): Created
BCSAVParsingSession (%p): Deallocated
BCSAVParsingSession (%p): Skip processing of same QR code
BCSAVParsingSession: Skipping a QR code since an app clip code was selected a short while ago (< 750ms).
BCSAppRanker: Found last used app for scanned URL
Notification service connection is non-nil when starting reader
Sent invalid barcode detected event to AWD; data type = %d; client type = %d; source type = %d; detection time = %llu; barcodeURLType: %d; appLinkPreferredOpenStrategy: %d; invalid data type = %d
Sent barcode detected event to AWD; data type = %d; client type = %d; source type = %d; detection time = %llu; barcodeURLType: %d; appLinkPreferredOpenStrategy: %d
Sent barcode activated event to AWD; data type = %d; client type = %d; source type = %d; barcodeURLType: %d; appLinkPreferredOpenStrategy: %d
Sent barcode previewed event to AWD; content type = %ld
BCSAWDLogger: Encountered invalid invalidDataType: %ld
BCSCalendarEventParser: Begin parsing
BCSCalendarEventParser: vCalendar/vEvent prefix not found
BCSCalendarEventParser: ics string is not valid
BCSCalendarEventParser: Cannot get calendar from ICSDocument
BCSCalendarEventParser: Found event from payload
BCSCalendarEventParser: Cannot find event from calendar
BCSCIImageExtras: image has multiple QR codes
BCSCopyActionPickerItem: performing action
BCSDataDetectionActionPickerItem: performing action
BCSDataDetectorsSupportedAction: perform the default DD action.
BCSDataDetectorsSupportedAction: -[BCSAction presentingViewControllerForAction:] must be implemented to perform action.
BCSDataDetectorsSupportedAction: -[BCSAction presentingViewControllerForAction:] must return non-nil view controller to perform action.
BCSDataDetectorsSupportedAction: performing default DDAction
BCSDataDetectorsSupportedAction: -[BCSDataDetectorSupportedAction _hostingViewForAction:] must be implemented to perform action.
BCSDataDetectorsSupportedAction: -[BCSDataDetectorSupportedAction _hostingViewForAction:] must return non-nil view controller to perform action.
BCSDataDetectorsSupportedAction: -[BCSDataDetectorSupportedAction _setUpActionMenuIfNeeded:] uses a dummy view for actions and menus, please file a radar!
BCSConfigurationManager: Error getting remote object proxy: %{public}@
BCSDocomoEmailParser: Begin parsing
BCSDocomoEmailParser: Payload length is too short
BCSDocomoEmailParser: matmsg scheme not found
BCSDocomoEmailParser: Parsed valid recipient email
BCSDocomoEmailParser: matmsg has no valid email address, subject, or body
BCSDocomoEmailParser: Parsed email subject
BCSDocomoEmailParser: Parsed email body
BCSDocomoEmailParser: Converted mailto URL cannot be constructed
BCSDocomoEmailParser: Successfully converted matmsg data to mailto link
BCSGenericDataParser: Begin parsing
BCSGenericDataParser: Cannot create DDScanner
BCSGenericDataParser: Cannot create DDScanQuery
BCSGenericDataParser: Did not find any interesting data
BCSGenericDataParser: Failed to get results from scanner
BCSGenericDataParser: Extracted URL from generic string
BCSGenericDataParser: Failed to create scanner result from core result
BCSGenericDataParser: Extracted scanner result from generic string
BCSGeoDataParser: Begin parsing
BCSGeoDataParser: Payload length is too short
BCSGeoDataParser: geo scheme not found.
BCSGeoDataParser: Successfully converted geo link to maps link.
BCSGeoDataParser: invalid latitude and longitude.
BCSGeoDataParser: latitude is out of range.
BCSGeoDataParser: longitude is out of range.
BCSNotificationIcon: Failed to get caches directory with error %{public}@
BCSNotificationIcon: Cannot create folder at URL: %{private}@ with error %{public}@
_bcs_applyTreatmentToIcon: notification icon path is nil
_bcs_applyTreatmentToIcon: Failed to get PNG image data
_bcs_applyTreatmentToIcon: Failed to write PNG image data to disk with error %{public}@
BCSMeCardParser: Begin parsing
BCSMeCardParser: Payload length is too short
BCSMeCardParser: MECARD prefix is not found
BCSMeCardParser: Failed to parse contact from MECARD string
BCSMeCardParser: Found contact from MECARD string
BCSNotification: Setting up UNNotificationAction that will be handled locally with URL %{private}@ and target application %{private}@
BCSNotification: Setting up UNNotificationAction with URL %{private}@
BCSNotification: Handling event action
BCSNotification: error saving EKEvent: %{public}@
BCSNotification: cannot open Calendar app with the event's externalURL
BCSNotification: cannot create folder at URL: %@
BCSNotification: Handling contact action
BCSNotification: error accessing Contacts store: %{public}@
BCSNotification: put up an alert to allow the user to choose app
Failed to create an attachment with url %{private}@ and error %{public}@
BCSNotification: can't find a default URL for action with type: %ld
BCSNotification: User has more than 2 apps to choose from.
Cannot create CFUserNotification with error code: %{public}d
BCSNotificationIcon: target app identifier is nil
BCSNotificationIcon: app proxy is nil
BCSNotificationIcon: processed icon URL after timeout = %@
BCSNotificationIcon: notification icon path is nil
BCSNotificationIcon: icon data from LSApplicationProxy is nil
BCSNotificationIcon: Failed to create icon from cached bitmap
BCSNotificationIcon: Failed to get PNG image data
BCSNotificationIcon: Failed to write PNG image data to disk with error %{public}@
BCSNotificationManager: error adding notification request: %{public}@
BCSNotificationManager: did receive notification response with action identifier %{public}@ and request identifier %{public}@
BarcodeNotificationService: Received parsed barcode data.
BCSNotificationService: Detected QR code is not actionable
BCSNotificationService: Detected QR code has resolved to action of class %@
Cannot connect to remote service with error: %{public}@
BCSNotificationServiceDelegate: Connection rejected for lacking entitlement for pid %d
BCSURLAction: Unable to create HKSignedClinicalDataSource for: %{private}@ error: %{private}@
BCSURLAction: error obtaining result from HKVerifiableHealthRecordsParser: %{private}@
BCSURLAction: obtained multiple HKVerifiableHealthRecordsParsingResult entries: %{private}@
BCSParsingServiceConnection: Error getting remote object proxy: %{public}@
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p QR code is not actionable
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p QR code has resolved to action of class %@
BCSQRCodeParser: no feature detected in the image.
BCSQRCodeParser: we don't support multiple codes in the same image.
BCSQRCodeParser: image has no QR code.
BCSQRCodeParser: Start parsing CIQRCodeFeature %p
BCSQRCodeParser: QR code from CIQRCodeFeature %p has unrecognized format
BCSQRCodeParser: QR code from CIQRCodeFeature %p has type %ld
BCSQRCodeParser: QR code from CIQRCodeFeature %p is not actionable
BCSQRCodeParser: QR code from CIQRCodeFeature %p has resolved to action of class %@
BCSQRCodeParser: QR code payload string has unrecognized format
BCSQRCodeParser: Detected QR code has type %ld
BCSQRCodeParser: Detected QR code is not actionable
BCSQRCodeParser: Detected QR code has resolved to action of class %@
BCSQRCodeParser: QR code payload image has unrecognized format
BCSQRCodeParser: QR code from image has type %ld
BCSQRCodeParser: Finished notification with error %{public}@
BCSQRCodeParser: Finished notification successfully
BCSQRCodeParser: Start parsing AVMetadataMachineReadableCodeObject %p
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p has no basicDescriptor
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p QR code has payload with unrecognized format
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p QR code has type %ld
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p has app clip code version %ld
BCSQRCodeParser: failed to decode app clip code payload with error: %{private}@
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p has app clip code with url %{private}@
BCSQRCodeParser: AVMetadataMachineReadableCodeObject %p has non-QR-code type: %@
BCSSMSTODataParser: Begin parsing
BCSSMSTODataParser: Payload length is too short
BCSSMSTODataParser: smsto scheme not found.
BCSNFCCodeParser: Does not recognize NFC URL
BCSNFCCodeParser: Detected NFC URL has type %ld
BCSNFCCodeParser: Error posting notification: %@
BCSNFCCodeParser: Finished posting notification
BCSStringAction: performing search
BCSURLAction: we shouldn't show the non system app name in lock screen for bundle ID: %{private}@
BCSURLAction: -actionPickerItems is called on an invalid action
BCSURLAction: cannot open Home app with sensitive URL.
BCSURLAction: No target application to open
BCSURLAction: Clip is indicated to be available, however clip request failed with CPSErrorClipURLUnavailable. Handling with LSApplicationWorkspace operation.
BCSURLAction: Error performing app clip open action: %{public}@
BCSURLAction: perform action with default app link
BCSURLAction: Opening top ranked UPI handling app
BCSURLAction: perform default action by opening URL
BCSURLAction: detected an Find My URL, skip app clips checking. %{sensitive}@
BCSURLAction: Begin resolving target application for URL
BCSURLAction: URL is blocked from being handled
BCSURLAction: Found app links for URL
BCSURLAction: Resolved default URL action uses app link
BCSURLAction: Failed to get application record %{public}@
BCSURLAction: Ignoring resolved URL with private scheme '%{private}@'
BCSURLAction: Device is locked when resolving target application with bundleID %{private}@ for URL %{private}@
BCSURLAction: Found application for opening URL
BCSURLAction: Cannot find application to open URL
BCSURLActionPickerItem: opening app link
BCSURLActionPickerItem: opening url
BCSURLAction: cannot open Home app with sensitive URL with error: %{private}@
BCSURLDataParser: Begin parsing
BCSURLDataParser: QR code payload, with %ld characters, is too long
BCSURLDataParser: QR code payload has the URL: scheme
BCSURLDataParser: Cannot create URL
BCSURLDataParser: URL has no scheme
BCSURLDataParser: Found HomeKit URL
BCSURLDataParser: Found SMARTHealthCard URL
BCSURLDataParser: Found Passkey Registration URL
BCSURLDataParser: Found Passkey Assertion URL
BCSUtilities: Error opening user activity %{public}@ with payload.
BCSUtilities: Error opening user activity %{public}@
Querying last used date failed for app
_bcs_lastTimeAppWasUsed: Looking up last launch time for app took %.3f ms
User cancelled device unlock.
BCSVCardParser: Begin parsing
BCSVCardParser: Payload length is too short
BCSVCardParser: vCard prefix is not found
BCSVCardParser: Failed to parse contact from vCard string
BCSVCardParser: Found contact from vCard string
BCSWiFiConfigurationAction: Action is either not actionable or -determineActionabilityWithCompletionHandler has not been called
BCSAppClipCodeURLDecoder: App clip code payload [%p] is not actionable
BCSAppClipCodeURLDecoder: App clip code [%p] has resolved to action of class %@
BCSWiFiConfigurationParser: Begin parsing
BCSWiFiConfigurationParser: Payload length is too short
BCSWiFiConfigurationParser: WIFI scheme not found
BCSWiFiConfigurationParser: Network SSID not specified
BCSWiFiConfigurationParser: Illegal authentication type specified
BCSWiFiConfigurationParser: Successfully parsed WiFi Network configuration
softlink:r:path:/System/Library/Frameworks/Vision.framework/Vision
softlink:r:path:/System/Library/Frameworks/ImageIO.framework/ImageIO
softlink:r:path:/System/Library/PrivateFrameworks/IconServices.framework/IconServices
softlink:r:path:/System/Library/Frameworks/CoreImage.framework/CoreImage
softlink:r:path:/System/Library/Frameworks/EventKit.framework/EventKit
softlink:r:path:/System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices
softlink:r:path:/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
softlink:r:path:/System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary
softlink:r:path:/System/Library/PrivateFrameworks/MobileIcons.framework/MobileIcons
softlink:r:path:/System/Library/PrivateFrameworks/HealthRecordServices.framework/HealthRecordServices
softlink:r:path:/System/Library/PrivateFrameworks/HealthRecordsExtraction.framework/HealthRecordsExtraction
softlink:r:path:/System/Library/Frameworks/SafariServices.framework/SafariServices
softlink:r:path:/System/Library/PrivateFrameworks/ClipServices.framework/ClipServices
softlink:r:path:/System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet
softlink:r:path:/System/Library/Frameworks/Security.framework/Security
softlink:r:path:/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
softlink:r:path:/System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices
f * %
, i 
AWDBarcodeSupportCodeActivatedEvent
NSCopying
BCSDetectedCode
AWDBarcodeSupportCodeDetectedEvent
BCSShareActionPickerItem
AWDBarcodeSupportCodePreviewedEvent
BCSAction
BCSActionPrivate
NSObject
BCSActionPickerItem
BCSNSErrorExtras
BCSActionPickerViewAssistant
BCSActionPickerItemDelegate
BCSAVMetadataMachineReadableCodeObjectExtras
BCSAVParsingSession
BCSAppRanker
BCSApp
BCSNFCReaderConnection
BCSWiFiConfigurationActionPickerItem
BCSAWDLogger
BCSCalendarEventData
BCSParsedDataPrivate
BCSParsedData
NSSecureCoding
NSCoding
BCSCalendarEventParser
BCSDataParser
BCSCIImageExtras
BCSContactData
BCSCopyActionPickerItem
BCSDataDetectionActionPickerItem
DDDetectionControllerInteractionDelegate
BCSDataDetectorsScannerResultData
UpdatingRectValue
BCSDataDetectorsSupportedAction
BCSActionDelegate
BarcodeSupportHelperProtocol
BCSConfigurationManager
BCSDocomoEmailParser
BCSGenericDataParser
BCSGeoDataParser
BCSAnalyticsLogger
BCSInvalidDataAction
BCSInvalidParsedData
BCSKeyValueParser
BCSMeCardParser
BCSNotification
BCSNotificationIcon
BCSNotificationManager
UNUserNotificationCenterDelegate
BCSNotificationService
BCSNotificationServiceProtocol
BCSNFCReaderDelegate
BCSNotificationServiceConnection
BCSNotificationServiceDelegate
NSXPCListenerDelegate
BCSNSCoderExtras
BCSNSStringExtras
BCSNSURLExtras
BCSParsedURLData
BCSParser
BarcodeParsingServiceProtocol
BCSParsingServiceConnection
BCSQRCodeParser
BCSSMSTODataParser
BCSNFCCodeParser
BCSStringAction
BCSNSUserDefaults
BCSStringData
BCSURLAction
BCSURLActionPickerItem
BCSURLDataParser
BCSVCardParser
BCSAppClipActionPickerItem
BCSWiFiConfigurationAction
BCSQRCodePayload
BCSCodePayload
BCSNFCCodePayload
BCSWiFiConfigurationData
BCSAppClipCodeURLDecoder
BCSWiFiConfigurationParser
StringAsInvalidBarcodeDataType:
CGImageForImageDescriptor:
T@"NSString",R,C,N,V_textToCopy
ICSStringWithOptions:
T@"UIImage",R,N
StringAsAppLinkPreferredOpenStrategy:
StringAsBarcodeSourceType:
_IS_sharedIconCompositorContext
StringAsClientType:
_attachmentIcon
T#,R
_barcodeURLType
T@"<BCSActionDelegate>",W,N,Vdelegate
_copyActionItem
T@"<BCSCodePayload>",R,N,V_codePayload
_initWithQueue:
T@"AVMetadataMachineReadableCodeObject",R,N,V_mrcObject
_parser
T@"BCSDetectedCode",&,N,V_detectedCode
_string
T@"CNContact",R,C,N,V_contact
appLink
T@"CPSClipMetadataRequest",&,N
barcodeDataType
T@"DDScannerResult",R,N,V_scannerResult
bundleForClass:
T@"LSApplicationRecord",R,N
contact
T@"NSArray",R,C,N,VappLinks
context
T@"NSString",C,N,V_invalidContents
dealloc
T@"NSString",R,C
detectorOfType:context:options:
T@"NSString",R,C,N,V_extraPreviewText
enableNFCWithCompletionHandler:
T@"NSString",R,C,N,V_label
hasSensitiveURL
T@"NSString",R,C,N,V_ssid
initWithImages:
T@"NSString",R,N
initWithString:
T@"NSString",R,N,V_preferredBundleID
invalidContents
T@"NSURL",R,C,N,V_urlToCopy
isApplicationAvailableToOpenURL:includePrivateURLSchemes:error:
T@"NSURL",R,N,V_url
isProxy
T@"NSXPCConnection",&,N,V_parsingServiceConnection
lowercaseString
T@"UIImage",&,N,V_icon
notificationURL
T@"UNNotificationRequest",R,N
numberWithLong:
T@?,C,N,V_interruptionHandler
release
TB,R
TB,R,N,GisCopyActionItem,V_copyActionItem
setURL:
TB,R,N,GisShowingPicker
.cxx_destruct
T@"NSArray",R,N
CGRectValue
T@"NSURL",R,C,N
StringAsAppLinkActivationOpenStrategy:
T@?,R,N
StringAsBarcodeDataType:
StringAsBarcodeURLType:
_action
StringAsPreviewContentType:
_awdBarcodeSourceTypeForAction:
T@"<BCSActionDelegate>",W,N
_bcs_hasScheme:
T@"<BCSActionPickerItemDelegate>",W,N,V_actionPickerItemDelegate
_hidden
T@"<BCSParsedDataPrivate>",R,N,V_data
_lastScannedCodeBasicDescriptor
T@"BCSAction",R,W,N,V_action
_sendEventLazyWithName:payload:
T@"BCSNotificationServiceConnection",R,N
_temporalStickyFactorForObject:
T@"CNContact",R,N
as_isPasskeyURL
T@"CPSClipMetadataRequest",&,N,VclipMetadataRequest
basicDescriptor
T@"LSAppLink",R,N,V_appLink
cancelNotificationsForCodeType:
T@"NSArray",R,C,N
contactsWithMECARDString:error:
T@"NSDictionary",R,C,N
copyTo:
T@"NSString",C,N,V_invalidURLScheme
detectionTimeMs
T@"NSString",R,C,N
didReceiveNotificationResponse:
T@"NSString",R,C,N,V_icsString
hasAppLinkPreferredOpenStrategy
T@"NSString",R,C,N,V_password
initWithAction:
T@"NSString",R,C,N,V_targetApplicationBundleIdentifier
initWithLabel:action:appLink:codePayload:preferApplicationIcon:
T@"NSString",R,N,V_contentPreviewString
invalidBarcodeDataTypeAsString:
T@"NSURL",R,C,N,V_actionURL
invalidDataType
T@"NSURL",R,N
isPasskeyAction
T@"NSURL",R,N,VurlThatCanBeOpened
isShowingPicker
T@"NSXPCConnection",&,N,V_serviceConnection
nfcIcon
T@"UNNotificationIcon",R,N
numberWithBool:
T@"VNBarcodeObservation",R,N,V_observation
payloadDataType
TB,N
request
TB,R,N
setAttachments:
TB,R,N,GisHidden,V_hidden
TB,R,N,GisWEP,V_WEP
TB,R,N,V_canGroupInSubmenu
TB,R,N,V_hasPreferredAppLink
TB,R,N,V_useInlineMenu
TB,R,N,VhasSensitiveURL
TB,R,N,VisAMSAction
TB,R,N,VisInvalidDataAction
TB,R,N,VisPasskeyAction
TB,R,N,VisPasskeyAssertionAction
TB,R,N,VisPasskeyRegistrationAction
TB,R,N,VisWiFiAction
TB,R,N,VshouldRequireUserToPickTargetApp
TQ,N,V_detectionTimeMs
TQ,N,V_timestamp
TQ,R
TQ,R,N
Ti,N,V_appLinkActivationOpenStrategy
Ti,N,V_appLinkPreferredOpenStrategy
Ti,N,V_barcodeDataType
Ti,N,V_barcodeSourceType
Ti,N,V_barcodeURLType
Ti,N,V_clientType
Ti,N,V_invalidBarcodeDataType
Ti,N,V_previewContentType
Ti,N,V_requestingProcessID
Tq,R,N
Tq,R,N,V_invalidDataType
Tq,R,N,V_type
URLByAppendingPathComponent:
URLByAppendingPathComponent:isDirectory:
URLForDirectory:inDomain:appropriateForURL:create:error:
URLForResource:withExtension:
URLFragmentAllowedCharacterSet
URLOverrideForURL:
URLQueryAllowedCharacterSet
URLWithString:
UUID
UUIDString
_LSFailedToOpenURL:withBundle:
_WEP
_actionDescriptionForAppClip
_actionDescriptionForURL:application:shouldShowHostNameForSafariURL:
_actionDescriptionString
_actionDescriptionWithoutTargetApplicationForURL:
_actionHandler
_actionPickerItemDelegate
_actionPickerItemsForAppClip
_actionPickerItemsForLockScreenVisibleApps
_actionPickerItemsForUnlockedAppLinks
_actionPickerViewAssistant
_actionStringsArray
_actionTypeStringForNFC
_actionTypeStringForQRCode
_actionURL
_actions
_addActionWithTitle:style:handler:shouldDismissHandler:
_addRequestForNotification:codeType:
_additionalActionPickerItems
_alertController
_appLink
_appLinkActivationOpenStrategy
_appLinkPreferredOpenStrategy
_appLinks
_appStoreSearchURLForUnsupportedScheme
_appclipLaunchReason
_applicationIconImageForBundleIdentifier:format:scale:
_applicationRecord
_attachmentIconURL
_awdBarcodeClientType
_awdBarcodeDataTypeFromAction:
_awdBarcodePreferredAppLinkOpenStrategyFromURLAction:
_awdBarcodeURLTypeFromURLAction:
_awdInvalidBarcodeDataTypeFromInvalidData:
_barcodeDataType
_barcodeDescriptor
_barcodeSourceType
_bcs_URLWithUserTypedString:
_bcs_appStoreSearchURLWithScheme:
_bcs_displayString
_bcs_fullURLDisplayString
_bcs_hasCaseInsensitivePrefix:
_bcs_hostWithoutWwwDot
_bcs_isDataDetectorURL
_bcs_isHTTPFamilyURL
_bcs_isMapsURL
_bcs_isOtpauthURL
_bcs_isRedirectedSHCURL
_bcs_isSHCURL
_bcs_isUPIURL
_bcs_localizedDisplayNameForRedirectedSHCURL
_bcs_looksLikeEmailAddress
_bcs_privacyPreservingDescription
_bcs_probablyContainsSameCodeInBasicDescriptor:
_bcs_redirectedHealthURLWithOriginalString:
_bcs_searchURLWithQuery:
_bcs_strictlyDecodeObjectOfClass:forKey:
_bcs_stringForcingLeftToRightDirection
_bcs_stringValueIfQRCode
_bcs_stringWithEnclosingDoubleQuotesRemoved
_bcs_trimmedString
_bcs_unescapedString
_bcs_urlEncodedQueryValue
_bestObjectForParsing:
_canGroupInSubmenu
_cancelNotificationsForCodeType:
_canonicalizeMessageURL:
_cleanUpAlertController
_clientType
_clipIconURLForAction:scale:
_codePayload
_commonActionPickerItemsForURL
_configureUserNotificationCenter
_connection
_contact
_content
_contentExtensionData
_contentIsPreviewable
_contentPreviewString
_currentIndex
_data
_dataTypeForSchemeIfSupportedByDataDetectors:
_ddAction
_ddUIMenu
_defaultDDAction
_defaultURL
_detectedCode
_detectionTimeMs
_deviceDataIsUnavailable
_didReceiveNotificationResponse:
_enableNFC
_eventPayloadForAction:
_extraPreviewText
_fallbackDataTypeDisplayString
_fbOptionsHandlingUnlockIfNecessary
_handleCalendarEventWithICSString:
_handleContactInfo:
_hardwareSupportState
_has
_hasPreferredAppLink
_hostingViewForAction
_icon
_icsString
_identifier
_indexOfDelimiter:range:
_initWithAction:
_interruptionHandler
_invalidBarcodeDataType
_invalidContents
_invalidDataType
_invalidURLScheme
_isCodeFromQRScanner
_isLikelyLastScannedObject:
_isNFCEnabled
_isVisualCode
_itemsToShare
_keyValuePairs
_label
_lastScannedTime
_localActions
_lp_URLWithUserTypedString:relativeToURL:
_lp_highLevelDomain
_lp_simplifiedDisplayString
_lp_userVisibleString
_menuElementForActionPicker:
_mrcObject
_nfcPayload
_nfcUserNotificationCenter
_notificationActionFromActionPickerItem:
_notificationIconDataURLForApp:scale:
_notificationServiceConnection
_notificationWithIdentifier:
_notifications
_numberOfPreviousBackSlashesFromIndex:withinRange:
_observation
_orderAppLinkActionsByRecency:
_parseMetadataObject:reply:completionHandler:
_parseNextKeyValuePair
_parsedDataFromDDResult:decodedString:
_parsingServiceConnection
_passkeyAssertionActionDescription
_passkeyRegistrationActionDescription
_password
_payloadForMRCObject:
_performActionAfterUnlock:
_performActionAndShowActionPickerIfNeeded:
_pickerLabelForURLActionPickerItem:
_preferApplicationIcon
_preferredBundleID
_previewContentType
_qrCodeFeatureFromImage:
_qrCodeUserNotificationCenter
_queryApplicationRecordForURL:completionHandler:
_queue
_requestingProcessID
_resolveAppClipForURL:completion:
_resolveTargetApplicationForURL:completionHandler:
_scannerResult
_serviceConnection
_setCentersPopoverIfSourceViewNotSet:
_setUpActionMenuIfNeeded
_shouldBlockHandlingURL:
_shouldHandleActionPickerItemLocally:
_shouldManuallyRequireAuthenticationForURL:
_shouldOpenInAppForAppLink:
_shouldRequireUserToPickTargetApp
_shouldScheduleBackgroundActionForLaunchBundleID:
_shouldSkipIncomingObject:
_showAppPickerAlertWithFBOptions:
_ssid
_stringForCodeType:
_stringForDataType:
_stringLength
_supplementActions
_systemImageNamed:
_targetApplicationBundleIdentifier
_textToCopy
_timestamp
_title
_tlAlertConfiguration
_type
_updateBlock
_updateSessionWithMetadataObject:completionHandler:
_upiApplicationRecords
_url
_urlToCopy
_useInlineMenu
_userNotificationCenterForCodeType:
_userVisibleAppRecord
_validateLatitudeAndLongitudeInString:range:
_validatedICSString:
_wiFiConfigurationData
_willOpenInSafari
absoluteString
action
action:didDismissAlertController:
actionDidFinish:
actionDidFinish:shouldDismiss:
actionIcon
actionIdentifier
actionPickerItem:didDismissAlertController:
actionPickerItemAlertController:
actionPickerItemDelegate
actionPickerItemWithLabel:actionHandler:
actionPickerItems
actionPickerItemsForAction:proposedItems:
actionURL
actionWillStart:
actionWithIdentifier:title:options:
actionWithIdentifier:title:url:options:
actionWithTitle:image:identifier:handler:
actionWithTitle:style:handler:
addAction:
addCharactersInString:
addNotificationRequest:withCompletionHandler:
addObject:
addObjectsFromArray:
addReadingListItemWithURL:title:previewText:error:
allocWithZone:
appClipCodeMetadataValue
appInFocusStream
appLinkActivationOpenStrategy
appLinkActivationOpenStrategyAsString:
appLinkCount
appLinkPreferredOpenStrategy
appLinkPreferredOpenStrategyAsString:
appLinks
appendFormat:
appendString:
applicationProxyForIdentifier:
applicationProxyForSystemPlaceholder:
applicationState
applicationsAvailableForOpeningURL:
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:count:
as_isPasskeyRegistrationURL
attachmentWithIdentifier:URL:options:error:
auditToken
autorelease
barcodeActionsForContext:URL:result:contact:ics:
barcodeDataTypeAsString:
barcodeDetectedEventForAction:
barcodeSourceType
barcodeSourceTypeAsString:
barcodeURLType
barcodeURLTypeAsString:
bcs_barcodeSupportDefaults
boolValue
bounds
bundleIdentifier
bundleIdentifierOfLastUsedAppForURL:
bundleProxyWithAuditToken:error:
bundleWithURL:
buttonActionsForURL:result:contact:icsString:context:view:identifier:suggestedActions:defaultAction:
calendar
canGroupInSubmenu
canHandleActionLocally
caseInsensitiveCompare:
charValue
characterAtIndex:
checkHardwareSupportStateWithCompletionHandler:
checkNFCEnabledWithCompletionHandler:
children
class
clearCaches
clientType
clientTypeAsString:
clipCaption
clipMetadataRequest
clipName
clipOpenButtonTitle
code
codePayload
codeType
compactTitle
compare:
components
componentsWithURL:resolvingAgainstBaseURL:
configuration
conformsToProtocol:
contactsWithData:error:
contentPreviewString
copy
copyActionItem
copyWithZone:
coreResult
count
countByEnumeratingWithState:objects:count:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
currentHandler
data
dataType
dataTypeDisplayString
dataUsingEncoding:
dataWithContacts:error:
dd_performAction
dd_performActionWithRect:
debugDescription
debugDescriptionDictionary
debugDescriptionExtraInfoDictionary
decodeAppClipCodeURLWithEncodedData:codingVersion:requiresAuthorization:withReply:
decodeObjectOfClass:forKey:
decodeURLWithEncodedData:codingVersion:requiresAuthorization:completionHandler:
defaultActionTargetApplicationBundleIdentifier
defaultManager
defaultReadingList
defaultWorkspace
delegate
description
descriptor
detectedCode
detectedCodeWithBarcodeObservation:
detectedCodeWithMachineReadableObject:
determineActionabilityWithCompletionHandler:
developerType
dictionary
dictionaryRepresentation
dictionaryWithObjects:forKeys:count:
didActivateNFCReader
didHandleBulletinActionWithIdentifier:
didPerformAction
didScanNFCTagOfType:
disconnect
domain
doubleValue
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
encodedData
enumerateObjectsUsingBlock:
errorWithDomain:code:userInfo:
executeQuery:error:
externalURL
extraPreviewText
featuresInImage:
fileExistsAtPath:isDirectory:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
firstMatchInString:options:range:
firstObject
fullAppName
generalPasteboard
getActionWithData:codePayload:completionHandler:
getAppLinksWithURL:completionHandler:
getClipMetadataSynchronously
getDownloadedIconURLSynchronously
getStreet:city:state:zip:country:
handleActionWithIdentifier:notificationResponseOriginID:
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
hasAppLinkActivationOpenStrategy
hasBarcodeDataType
hasBarcodeSourceType
hasBarcodeURLType
hasClientType
hasDetectionTimeMs
hasInvalidBarcodeDataType
hasPreferredAppLink
hasPrefix:
hasPreviewContentType
hasTimestamp
hasUserInterface
hash
hidden
host
icon
iconDataForVariant:
iconNamed:
icsString
identifier
image
imageURL
indexOfObjectPassingTest:
init
initRequiringSecureCoding:
initWithAction:ddAction:
initWithAction:textToCopy:
initWithAction:urlToCopy:
initWithActivityItems:applicationActivities:
initWithActivityType:
initWithBarcodeDescriptor:
initWithBundleIdentifier:
initWithBundleIdentifier:allowPlaceholder:error:
initWithCGImage:
initWithCGImage:options:
initWithCGImage:scale:
initWithCoder:
initWithConnection:
initWithContact:
initWithData:codePayload:
initWithFrame:
initWithICSString:
initWithICSString:options:error:
initWithInvalidDataType:invalidContents:
initWithLabel:action:
initWithLabel:action:appLink:codePayload:
initWithLabel:action:url:applicationRecord:
initWithLabel:action:url:applicationRecord:preferApplicationIcon:
initWithLabel:actionHandler:
initWithLong:
initWithMachServiceName:options:
initWithNFCPayload:
initWithObjectsAndKeys:
initWithPattern:options:error:
initWithSSID:isWEP:password:isHidden:
initWithScannerResult:type:extraPreviewText:
initWithServiceName:
initWithString:startIndex:
initWithSuiteName:
initWithType:
initWithURL:
initWithURL:resolvingAgainstBaseURL:
initWithURL:type:
initWithURL:type:extraPreviewText:
initWithURL:type:extraPreviewText:preferredBundleID:
initWithUpdateBlock:
insertObject:atIndex:
integerValue
interfaceWithProtocol:
interruptionHandler
invalidBarcodeDataType
invalidURLScheme
invalidate
isAMSAction
isCopyActionItem
isEqual:
isEqualToData:
isEqualToNumber:
isEqualToString:
isHidden
isInstalled
isInvalidDataAction
isKindOfClass:
isLikelyAvailable
isLikelyEqualToCode:
isLiveCameraOnlyAction
isMemberOfClass:
isPasskeyAssertionAction
isPasskeyRegistrationAction
isPoweredByThirdParty
isRemovedSystemApp
isRestricted
isSymbolImage
isWEP
isWiFiAction
keyValuePairs
knowledgeStoreWithDirectReadOnlyAccess
label
lastPathComponent
length
listener:shouldAcceptNewConnection:
localizedActionDescription
localizedDefaultActionDescription
localizedDefaultActionTitle
localizedName
localizedStringForKey:value:table:
localizedTypeDisplayNames
logBarcodeActivatedEventForAction:
logBarcodeDetectedEvent:startTime:
logBarcodeDetectedEventForAction:fromBundleID:
logBarcodeDetectedEventForAction:startTime:
logBarcodePreviewedEventForContentType:
mainBundle
menuElements
menuElementsCount
menuProvider
menuWithTitle:image:identifier:options:children:
mergeFrom:
messageString
mrcObject
mustOpenAppLinkInApp
mutableCopy
nfcReaderDidDetectNonNDEFTag
nfcReaderStateDidChange:
notification
notificationForAction:
notificationIconBundleIdentifier
notificationServiceConnection
notificationTitle
notifyParsedCodeWithData:codePayload:shouldReplacePreviousNotifications:reply:
notifyParsedCodeWithData:codePayload:shouldReplacePreviousNotifications:withReply:
numberWithInteger:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
observation
openSensitiveURL:withOptions:error:
openStrategy
openURL:options:completionHandler:
openURL:withOptions:error:
openUserActivity:withApplicationProxy:options:completionHandler:
openWithConfiguration:completionHandler:
operationToOpenResource:usingApplication:uniqueDocumentIdentifier:isContentManaged:sourceAuditToken:userInfo:options:delegate:
operationToOpenResource:usingApplication:uniqueDocumentIdentifier:sourceIsManaged:userInfo:options:delegate:
orderAppLinks:forLastUsedApp:
orderApplicationRecords:forPreferredBundleID:
orderApps:forLastUsedApp:
originIdentifier
parseCodeFromImage:completionHandler:
parseCodeFromMetadataMachineReadableCodeObject:completionHandler:
parseCodeFromString:completionHandler:
parseCodeWithCompletion:
parseDataSource:options:error:
parseEncodedURLData:version:completion:
parseQRCodeFeature:withReply:
parseQRCodeMetadata:withReply:
parseQRCodeString:withReply:
parseString:
parseURL:
parseURL:originalString:
parsingServiceConnection
password
path
payloadDataValue
payloadStringValue
performAction
performAction:fromAlertController:interactionDelegate:
performAction:inView:interactionDelegate:
performActionWithCompletion:
performActionWithFBOptions:
performActionWithOptions:completion:
performDefaultAction
performDefaultActionWithCompletionHandler:
performDefaultActionWithFBOptions:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
popoverPresentationController
postNotificationAfterParsingCodeFromImage:completion:
postNotificationForURL:payload:completionHandler:
predicateForEventsWithStringValue:
preferItemsInSubmenu
preferredBundleID
prepareImagesForImageDescriptors:
presentViewController:animated:completion:
presentedViewController
presentingViewControllerForAction:
previewContentType
previewContentTypeAsString:
processAppClipImageWithURL:scale:completion:
processAppClipImageWithURL:scale:reply:
processIdentifier
qrCodeIcon
range
rangeAtIndex:
rangeOfString:
rangeOfString:options:
rangeOfString:options:range:
readFrom:
remoteObjectProxyWithErrorHandler:
removeAllObjects
removeAllPendingNotificationRequests
removeCharactersInString:
removeDeliveredNotificationsWithIdentifiers:
removeEvent:span:error:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removePendingNotificationRequestsWithIdentifiers:
requestAccessForEntityType:completionHandler:
requestAccessToEntityType:completion:
requestClipWithCompletion:
requestDownloadedIconWithMetadata:completion:
requestMetadataWithCompletion:
requestWithIdentifier:content:trigger:
requestingProcessID
reset
respondsToSelector:
resultFromCoreResult:
resume
retain
retainCount
safari_hasCaseInsensitivePrefix:
safari_isCaseInsensitiveEqualToString:
saveEvent:span:error:
savePayloadInUserActivity:
scannerResult
scheduleNotification:codeType:
scheme
self
serviceConnection
sessionConfiguration
sessionProxy
setActionPickerItemDelegate:
setAlertTopic:
setAppLinkActivationOpenStrategy:
setAppLinkPreferredOpenStrategy:
setBarcodeDataType:
setBarcodeSourceType:
setBarcodeURLType:
setBody:
setByAddingObject:
setCategoryIdentifier:
setClasses:forSelector:argumentIndex:ofReply:
setClientType:
setClipMetadataRequest:
setCountLimit:
setDefaultActionURL:
setDelegate:
setDetectedCode:
setDetectionTimeMs:
setEventStreams:
setExportedInterface:
setExportedObject:
setFrontBoardOptions:
setHasAppLinkActivationOpenStrategy:
setHasAppLinkPreferredOpenStrategy:
setHasBarcodeDataType:
setHasBarcodeSourceType:
setHasBarcodeURLType:
setHasClientType:
setHasDetectionTimeMs:
setHasInvalidBarcodeDataType:
setHasPreviewContentType:
setHasTimestamp:
setIcon:
setIgnoreAppLinkEnabledProperty:
setInterface:forSelector:argumentIndex:ofReply:
setInterruptionHandler:
setInvalidBarcodeDataType:
setInvalidContents:
setInvalidURLScheme:
setInvalidationHandler:
setLastUsedApp:forURL:
setLaunchReason:
setLimit:
setNdefMessagePayload:
setObject:forKey:
setObject:forKeyedSubscript:
setParsingServiceConnection:
setPath:
setPredicate:
setPreferredBundleIdentifier:forURL:
setPreviewContentType:
setQuery:
setRemoteObjectInterface:
setRequestingProcessID:
setScale:
setScheme:
setServiceConnection:
setShape:
setShouldAuthenticateDefaultAction:
setShouldBackgroundDefaultAction:
setShouldHideDate:
setShouldIgnoreDoNotDisturb:
setSize:
setSortDescriptors:
setSound:
setSourceRect:
setSourceView:
setString:
setSubtitle:
setThreadIdentifier:
setTimestamp:
setTitle:
setTopic:
setUpQRCodeControlCenterModuleWithCompletionHandler:
setUpQRCodeControlCenterModuleWithReply:
setUserInfo:
setWantsNotificationResponsesDelivered
setWebpageURL:
setWithArray:
sharedApplication
sharedController
sharedDecoder
sharedLogger
sharedManager
sharedParser
shortDescription
shouldDismissAlertWhenActionIsTaken
shouldHandleBulletinActionWithIdentifier:
shouldRequireUserToPickTargetApp
shouldSkipBanner
showActionPicker
showActionPickerWithItems:fromViewController:presentingRect:
showingPicker
sortUsingComparator:
soundWithAlertType:
sourceRectForPopoverActionPicker:
sourceWithQRCodeValue:error:
ssid
start
startDate
startDateSortDescriptorAscending:
startNFCReaderWithDelegate:
startNFCReaderWithDelegate:errorHandler:
startQRCodeParsingSessionWithMetadataObject:completionHandler:
startReaderWithDelegate:errorHandler:interruptionHandler:
stopNFCReader
stopNFCReaderWithErrorHandler:
stopQRCodeParsingSession
stopReaderWithErrorHandler:
stringByAddingPercentEncodingWithAllowedCharacters:
stringByAppendingString:
stringByTrimmingCharactersInSet:
stringWithCapacity:
stringWithFileSystemRepresentation:length:
stringWithFormat:
stringWithString:
stringWithUTF8String:
subMenuWithMenuItems:
substringFromIndex:
substringToIndex:
substringWithRange:
superclass
supportsSecureCoding
supportsURL:
symbology
synchronize
systemImageNamed:
targetApplication
targetApplicationBundleIdentifier
targetApplicationProxy
targetApplicationRecord
tempVCardFileURL
textToCopy
timestamp
title
type
unsignedIntValue
updateSessionWithMetadataObjects:
updateSessionWithMetadataObjects:completionHandler:
urlThatCanBeOpened
urlToCopy
useInlineMenu
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
userNotificationCenter:willPresentNotification:withCompletionHandler:
valueForEntitlement:
valueForKey:
view
weakToStrongObjectsMapTable
whitespaceAndNewlineCharacterSet
withdrawNotificationsWithProcessID:codeType:
writeTo:
writeToURL:atomically:
writeToURL:options:error:
zone
@24@0:8^{_NSZone=}16
v24@0:8Q16
v20@0:8B16
B16@0:8
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
{?="timestamp"b1"appLinkActivationOpenStrategy"b1"barcodeDataType"b1"barcodeSourceType"b1"barcodeURLType"b1"clientType"b1}
@24@0:8@16
v24@0:8@?16
v16@0:8
@"AVMetadataMachineReadableCodeObject"
@"VNBarcodeObservation"
{?="detectionTimeMs"b1"timestamp"b1"appLinkPreferredOpenStrategy"b1"barcodeDataType"b1"barcodeSourceType"b1"barcodeURLType"b1"clientType"b1"invalidBarcodeDataType"b1}
@"NSMutableArray"
{?="timestamp"b1"previewContentType"b1}
v40@0:8@16@24@?32
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"<BCSActionDelegate>"16@0:8
v24@0:8@"<BCSActionDelegate>"16
@"NSURL"16@0:8
@"NSArray"16@0:8
v24@0:8@?<v@?@"NSError">16
q16@0:8
@"NSDictionary"16@0:8
@"CPSClipMetadataRequest"16@0:8
v24@0:8@"CPSClipMetadataRequest"16
@32@0:8@16@24
v32@0:8@16@?24
@?16@0:8
@"BCSActionPickerViewAssistant"
@"<BCSActionDelegate>"
@"NSURL"
@"NSArray"
@"CPSClipMetadataRequest"
@"BCSDetectedCode"
@"NSString"
@"<BCSParsedDataPrivate>"
@"<BCSCodePayload>"
@32@0:8@16@?24
@"BCSAction"
@"<BCSActionPickerItemDelegate>"
@"UIImage"
v32@0:8@16@24
@"UIAlertController"24@0:8@"BCSActionPickerItem"16
v32@0:8@"BCSActionPickerItem"16@"UIAlertController"24
B64@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32
@"UIAlertController"
d24@0:8@16
@"BCSQRCodeParser"
@"NSDictionary"
v40@0:8@16@?24@?32
@"BCSNotificationServiceConnection"
@"NSObject<OS_dispatch_queue>"
v32@0:8@16Q24
v24@0:8q16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"<BCSParsedData>"24@0:8@"NSString"16
@"CNContact"
v28@0:8@16B24
v32@0:8@"DDAction"16@"UIAlertController"24
v24@0:8@"DDAction"16
v28@0:8@"DDAction"16B24
@"DDAction"
@40@0:8@16q24@32
@"DDScannerResult"
@24@0:8@?16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
@"UIViewController"24@0:8@"<BCSAction>"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"<BCSAction>"16
@"NSArray"32@0:8@"<BCSAction>"16@"NSArray"24
@"UIMenu"
@"DDUIAction"
v40@0:8@16d24@?32
v24@0:8@?<v@?B@"NSError">16
v40@0:8@"NSURL"16d24@?<v@?@"NSURL">32
@"NSXPCConnection"
@32@0:8^{__DDResult=}16@24
@40@0:8@16{_NSRange=QQ}24
@24@0:8q16
@32@0:8q16@24
@32@0:8@16Q24
Q40@0:8@16{_NSRange=QQ}24
Q40@0:8Q16{_NSRange=QQ}24
@"NSMutableDictionary"
@"BCSNotificationIcon"
@32@0:8@16d24
@28@0:8@16f24
@"<BCSAction>"
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
v32@0:8@16q24
v28@0:8i16q20
@"UNUserNotificationCenter"
@"NSMutableSet"
v44@0:8@16@24B32@?36
v44@0:8@"<BCSParsedData>"16@"<BCSCodePayload>"24B32@?<v@?@"NSError"@"AWDBarcodeSupportCodeDetectedEvent">36
v24@0:8@"UNNotificationResponse"16
v24@0:8@"<BCSNFCReaderDelegate>"16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@32@0:8#16@24
@32@0:8@16q24
@48@0:8@16q24@32@40
v44@0:8@16Q24B32@?36
v32@0:8@"NSString"16@?<v@?@"<BCSParsedData>"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"<BCSParsedData>"@"NSError">24
v32@0:8@"CIQRCodeFeature"16@?<v@?@"<BCSParsedData>"@"NSError">24
v32@0:8@"NSString"16@"NSURL"24
v44@0:8@"NSData"16Q24B32@?<v@?@"NSURL"@"NSError">36
@24@0:8^{CGImage=}16
v32@0:8^{CGImage=}16@?24
@"BCSParsingServiceConnection"
@36@0:8@16@24B32
@"LSApplicationRecord"
@52@0:8@16@24@32@40B48
@48@0:8@16@24@32@40
@"LSAppLink"
q24@0:8@16
v24@0:8@"NSUserActivity"16
@"CIBarcodeDescriptor"
@"NFCNDEFMessage"
@40@0:8@16B24@28B36
v40@0:8@16Q24@?32
