@(#)PROGRAM:iCloudQuota  PROJECT:iCloudQuota-1
alertInfo
title
mesg
altMesg
hideOnLock
actions
Actions
btnDefault
BtnDefault
btnAction
BtnAction
CHANGE_STORAGE_PLAN
MANAGE_STORAGE
openURL
URLQueryParameters
ServerLinkId
ICQActionNone
ICQActionDismiss
ICQActionRejectOffer
ICQActionPresentPurchaseFlow
ICQActionPresentManageStorage
ICQActionPurchaseBuy
ICQActionPurchaseComplete
ICQActionOpenURL
ICQActionCancel
ICQActionShowInlineAlert
ICQActionOpenPaymentUpdate
ICQActionOpenCloudBackup
ICQActionCloudUpgrade
ICQActionPhotosOptimize
ICQActionPhotosCloudEnable
ICQActionPhotosCloudUpgradeEnable
ICQActionFamilySetup
ICQActionLaunchRemoteUI
ICQActionLaunchJITAppKitUI
ICQActionLaunchAMSDynamicUI
ICQActionCloudUpgradeOslo
ICQActionPhotosCloudUpgradeEnableOslo
ICQActionHTTPCall
ICQActionHTTPGETCall
v8@?0
header
altHeader
footer
actionBtn
buyBtn
doneBtn
actionBtn2
notNowBtn
learnMore
%@: title:%@ message:%@ purchase:%@ purchase2:%@ bottom:%@ fine:%@
appId
icloudApps
com.apple.cloud.quota
ICQEnableUnifiedMessaging
_ICQEnableServerMocking
com.apple.icq
com.apple.iCloudQuotaDaemon.ICQFollowupRegular
com.apple.iCloudQuotaDaemon.ICQFollowupPremium
com.apple.iCloudQuotaDaemon.ICQFollowup
com.apple.iCloudQuotaDaemon.StorageManagement.followup
com.apple.Dataclass.Quota
ICQDaemonOfferChangedDueToPushDarwinNotificationRegular
ICQDaemonOfferChangedDueToPushDarwinNotificationPremium
ICQDaemonOfferChangedDueToPushDarwinNotificationDefault
default
format
premium
buddy
regular
fetching all offers
com.apple.RemoteiCloudQuotaUI
offer
flowOptions
preloadedRemoteUIData
contextData
deviceBackupUdid
newExpirationDate
extensionAllowed
_ICQCachedPremiumOfferInternal
offerType
type
PremiumJourneys
Storage Upgraded
You now have 50 GB of total storage.
iCloud will continue to backup your iPhone and keep your photos, documents, contacts and more up to date across all your devices.
[ENG: LOCAL SAMPLE UI]
Done
application/json
text/plain
POST
Content-Type
Timed out
Bad URL
Network failure
Unknown URL request errro
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
Upgrade your storage soon to keep these photos and videos up to date in your iCloud Photo Library. %@
[ENG: LOCAL SAMPLE UI]
Upgrade%CStorage%C>
Upgrade your storage to keep these photos and videos up to date in your iCloud Photo Library. %@
[ENG: LOCAL SAMPLE UI]
_ICQMegaBackupErrorDomain
quotaBackupCheckURL
quotaBackupUpdateStatusURL
quotaBackupExtensionURL
v32@?0q8@"NSNumber"16@"NSError"24
v24@?0@"_ICQMegaBackupEligibilityRequest"8@"NSError"16
v24@?0@"_ICQMegaBackupUpdateStatusRequest"8@"NSError"16
v24@?0@"_ICQMegaBackupExtendExpirationRequest"8@"NSError"16
_ICQCachedDefaultOfferInternal
isDefaultOffer
en_US_POSIX
yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'
prefs:root=APPLE_ACCOUNT&aaaction=setupFamily&clientAppContext=iCloudStorage
prefs:root=APPLE_ACCOUNT&path=ICLOUD_SERVICE/BACKUP
prefs:root=APPLE_ACCOUNT&path=ICLOUD_SERVICE/STORAGE_AND_BACKUP/MANAGE_STORAGE
prefs:root=APPLE_ACCOUNT&path=PAYMENT_AND_SHIPPING/PRIMARY_PAYMENT
prefs:root=APPLE_ACCOUNT&path=ICLOUD_SERVICE/STORAGE_AND_BACKUP/STORAGE_UPGRADE
prefs:root=APPLE_ACCOUNT&path=ICLOUD_SERVICE/STORAGE_AND_BACKUP/MANAGE_STORAGE/CHANGE_STORAGE_PLAN
prefs:root=ROOT
ICQFetchOfferURLSession
application/x-plist
application/x-buddyml
Accept
%@: "%@" options:%@ action:%@ parameters:%@
placeHolderExists
bannerFooter
params
bannerFooter.params
mesg.params
actParams.openUrl
Add iCloud Storage
You are using 4.6 GB of your 5 GB iCloud storage. Add more storage to keep using iCloud Photo Library, iCloud Mail, and Backup.
Manage Storage
Not Now
iCloud Storage is Full
iCloud Photo Library, iCloud Mail, and Backup are no longer updating. Add more storage to keep using iCloud.
[ENG: LOCAL SAMPLE UI]
btnActParams
buyQueryParam
&autoSelectPlan=true&minReqdSize=1000000
btnId
upgrade
btnTitle
Upgrade Storage
DISMISS_ALERT
cancelled
alertAckAction
action
quotaAckEventURL
dataClass
Quota
SAMPLE ALERT: Upgrade your storage to keep using iCloud Mail, iCloud Drive, and Backup.
iCloud Storage is Almost Full
offerId
criteria
ICQCurrentOfferChangedNotification
ICQCurrentPremiumOfferChangedNotification
com.apple.icloud.quota.cached.offer
v24@?0@"ICQOffer"8@"NSError"16
v12@?0B8
v24@?0@"ICQPremiumOffer"8@"NSError"16
com.apple.mobileslideshow
v24@?0@"_ICQDeviceInfo"8@"NSError"16
com.apple.purplebuddy
CFBundleShortVersionString
YASE
NERP
status
start
expirationDate
com.apple.iCloud.FollowUp
v16@?0@"NSError"8
quotaUpdateOfferURL
dsid
true
directAction
update offer
bundleIdentifier
contextDictionary
Unknown
PushTeardown
Reboot
Login
icqctl
CacheDelete
HeartBeat
FallBelowVeryLowDisk
FallBelowLowDisk
FallBelowNearLowDisk
RiseAboveLowDisk
RiseAboveDesiredDisk
ICPLStateChanged
PhotosOptimizeStateChanged
ReasonAccountUpdate
RegistrationHeartbeat
DeviceNameChange
DevicePairing
NewPushToken
event
hardwareId
CKHardwareID
dsId
notificationId
debugAlert
alert
dismiss
teardown
_ICQSimulatedDeviceStorageAlmostFull
_ICQShouldDirectToStorageManagement
_ICQSimulatedPhotosLibrarySize
_ICQUseFetchOffersDataDirectly
_ICQBuddyOfferEnable
_ICQLegacyDeviceStorageLevelNotification
_ICQOfferSource
server-sample
local-sample
_ICQEnableServerPremiumOffers
_ICQAddFetchOffersHeaders
quotaFetchOffersURL
buddy:quotaFetchOffersURL
quotaRefreshOfferDetailsURL
com.apple.icloud.quota
context dictionary response is missing device offers
v24@?0@"NSDictionary"8@"NSError"16
v24@?0@"ICQDaemonOffer"8@"NSError"16
@"ICQDaemonOfferStub"16@?0@"ICQDaemonOfferStubs"8
-[ICQDaemonOfferManager renewCredentialsWithCompletion:]
DEVICE_FULL_FOLLOWUP_MANAGE_STORAGE_BUTTON_TITLE
Localizable
prefs:root=General&path=STORAGE_MGMT
DEVICE_FULL_FOLLOWUP_LEARN_MORE_BUTTON_TITLE
https://support.apple.com/HT206504
DEVICE_FULL_ALERT_TITLE
DEVICE_FULL_ALERT_MESSAGE
DEVICE_FULL_ALERT_ACTIVATE_BUTTON_TITLE
com.apple.iCloudQuota.StorageManagement.followup
DEVICE_FULL_FOLLOWUP_TITLE
DEVICE_FULL_FOLLOWUP_MESSAGE
v20@?0B8@"NSError"12
v24@?0@"ICQDaemonOfferStubs"8@"NSError"16
v16@?0@"NSString"8
unable to get URL for account:%@ quotaKey:%@
quota_alert
ck_hw_id
reason
X-Apple-All-Device-Offers
X-Apple-InvoiceEvent-Simulate
AlmostFull
X-Apple-QuotaEvent-Simulate
X-Apple-Storage-Has-SubscriptionOffer
X-Apple-Storage-Include-BuddyOffer
X-Apple-Storage-Include-BackupOffer
X-Apple-Itunes-DSID
useWlanTerm
unable to convert post dict to JSON
fetch offer
x-apple-opt-in-flow
v32@?0@8@16^B24
_ICQ_MOCK_FETCH_OFFER
_ICQ_MOCK_%@
quotaInfo
totalQuota
total_quota
buddy 
v24@?0q8@"NSDictionary"16
-[ICQDaemonOfferManager _postDaemonOfferChangedDueToPushDarwinNotificationRequestType:]
and notify
v16@?0@?<v@?@>8
com.apple.ind
com.apple.backup.ios
v24@?0@"NSString"8@"NSError"16
v16@?0@"ICQDaemonOffer"8
malformed daemon offer stubs
B24@?0@8@"NSDictionary"16
lockTitle
lockMessage
actParams
display
OOBE_EXPIRED
GSDeviceName
_SIMULATOR
%@_%@
wapi
CKContainer
Unable to find class %s
/System/Library/PrivateFrameworks/CloudKit.framework/CloudKit
/System/Library/PrivateFrameworks/CloudKit.framework/Contents/MacOS/CloudKit
ICQDaemonAlertLock
ICQDaemonAlertQueue
 (but not on lock screen)
com.apple.springboard
_ICQMockPhotoCount
_ICQMockVideoCount
v24@?0@"PLiCPLTransferProgress"8@"NSError"16
ICQOfferTypeUnknown
ICQOfferTypeCloudStorageUpgrade
ICQOfferTypePhotosOptimizeEnable
ICQOfferTypePhotosCloudEnable
ICQOfferTypePhotosCloudUpgradeEnable
ICQOfferTypeUpdateBillingInfo
ICQOfferTypeBuddyCloudStorageUpgrade
ICQOfferTypeBuddyPhotosCloudUpgradeEnable
ICQOfferTypePremiumJourneys
UpgradeStorage
OptimizeICPL
EnableICPL
UpgradeEnableICPL
Invoice
buddyUpgradeDrive
buddyUpgradeWithICPL
retrievalDate
callbackInterval
altDSID
serverDict
failedToFetchFromServer
failureDetails
ICQDaemonOfferPersistedNotificationName
ErrorDomain
ErrorCode
ErrorDescription
None
invalid
totalAvailable
ICQUpgradeComplete
Insufficient
Full
Device
Billing
UpgradeOffer
UpgradeComplete
UpgradeSuccessWiFi
UpgradeFailure
UpgradeFailureNetwork
upgradeInfo
actionInfo
postUpgradeInfo
successInfo
failureInfo
network
wifi
needsWifi
offerInfo
deviceOffers
needsUpgrade
followUpEnabled
hasUIFlow
appBannerInfo
iPhone storage is almost full. Free up space by using iCloud Photo Library. %@
Learn More >
ENABLE_ICPL
RW5hYmxlSUNQTA==
sbAlertEnabled
Use iCloud Photo Library
enableICPLAction
More Space, for More Photos
backBtn
Cancel
cancelEnableICPLAction
CANCEL_AND_CLOSE_ACTION
Free up space and take more photos by using iCloud Photo Library.
Your photos and videos will be safely stored in iCloud, and only smaller versions will be kept on your iPhone.
Uploads to and downloads from iCloud Photo Library will require an Internet connection.
exitCloseAction
EXIT_AND_CLOSE_ACTION
iCloud Photo Library has been turned on
Your photos and videos will start uploading when you're connected to Wi-Fi
Try Later
errorCloseAction
Unble to enable iCloud Photo Library
We were not able to enable iCloud Photo Library
priority
followUpInfo
iPhone Storage Almost Full
settingsTitle
Free up space and take more photos by using iCloud Photo Library. Your photos and videos will be safely stored in iCloud, and only smaller versions will be kept on your iPhone.
Use iCloud Photo Libary
dlUpgrade
DISMISS_AND_CLOSE_ACTION
dlCancel
iCPLEnabled
minPhotoLibraryInBytes
deviceStorageAlmostFull
maxPhotoLibraryInBytes
Get more storage, and keep all your photos safely stored in iCloud
With 50 GB of iCloud storage and iCloud Photo Library, you can keep all your photos and videos safely stored in iCloud and free up space on your iPhone too.
UPGRADE_ENABLE_ICPL
planDetails
productType
Software
pricingParameters
STDQ
salableAdamId
916860110
prsId
price
planSize
appleId
sj_ic3_15@icloud.com
pricePerYear
$0.99 per month.
totalStorage
iPhone storage is almost full. Get more storage, and keep all your photos safely stored in iCloud. %@
VXBncmFkZUVuYWJsZUlDUEw=
Buy 50 GB for $0.99/mo.
buyEnableICPLAction
cancelCloseAction
You will be charged $0.99 right now and each month. You can cancel at any time. Contact Apple within 15 days for a refund. Partial refunds are available where required.
You now have 50GB of total iCloud storage
3068
iCloud Photo Library Will Be Updated
warnCloseAction
More Space Will be available for More Photos
You can start taking more photos shortly by using iCloud Photo Library
Unable to upgrade and enable iCloud Photo Library
Unable to free up space to take more photos
iPhone storage is almost full. Free up space by using original photos in iCloud only. %@
Optimize Now >
SHOW_INLINE_ALERT
alertKey
optimizeICPL
T3B0aW1pemVJQ1BM
inlineAlertInfo
Optimize iPhone Storage
Free up space by keeping your original photos in iCloud, and smaller versions on you iPhone
Optimize
ENABLE_OPTIMIZE_ICPL
optimize
cancel
Free up space by keeping your original photos in iCloud only
Free up space on your iPhone by keeping your original photos and videos in iCloud only
buddyOffers
YnVkZHlVcGdyYWRlV2l0aElDUEw=
With 50 GB of iCloud storage, you can keep all your photos and videos safely in iCloud Photo Library and free up space on your iPhone.
< Back
backCloseAction
buddyBuyEnableICPLAction
Continue
iCloud Photo Library is on
iCloud Photo Library Will Be Enabled
You will have 50 GB of total iCloud storage
Unable to enable iCloud Photo Library
Failed to enable iCloud Photo Library
YnVkZHlVcGdyYWRlRHJpdmU=
Your iPhone has been backing up in iCloud each night but your iCloud storage is now almost full.
With 50 GB of iCloud storage, all your important things like photos, videos, documents and apps can keep backing up automatically.
Keep your iPhone backed up
com.apple.iCloudDriveApp
buyId
iCloud Storage Upgraded
You now have 50 GB of total iCloud storage
iCloud Storage Will Be Upgraded
Unable to upgrade iCloud Storage
Failed to upgrade iCloud Storage
totalUsed
rulesForDisplay
delegateDecision
alwaysShow
onDismiss
UNIFIED_MESSAGING
%$PhotosCount
%$VideosCount
%$TotalPhotosVideosCount
v24@?0@"_ICQPhotosInfo"8@"NSError"16
eventType
bundleId
newiCloudStoragePlan
newAppleOneStoragePlan
com.apple.iCloudQuotaUI
iCloudQuotaUI
photosLibraryFooter
homeDashboardHeader
v24@?0@"AMSEngagementMessageEventResponse"8@"NSError"16
opportunityBubbleDetails
message
imageDetails
LAUNCH_REMOTE_UI
openUrl
HTTP_CALL
iCloudQuota:dismissal
iCloudQuota:impression
iCloudQuota:storage-level-changed
iCloudQuota:none
com.apple.Home
ICQRemoteViewController
/private/var
CACHE_DELETE_VOLUME
CACHE_DELETE_ERROR
CACHE_DELETE_AMOUNT
v24@?0@"NSNumber"8@"NSError"16
v16@?0@"NSDictionary"8
PLIsCPLDataclassEnabled
/System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
/System/Library/PrivateFrameworks/PhotoLibraryServices.framework/Contents/MacOS/PhotoLibraryServices
PLCPLHasBeenEnabledForCurrentAccount
PLCloudPhotoLibraryKeepOriginalsIsEnabled
PLPhotoLibrary
PLGatekeeperClient
/System/Library/PrivateFrameworks/PhotoLibraryServicesCore.framework/PhotoLibraryServicesCore
/System/Library/PrivateFrameworks/PhotoLibraryServicesCore.framework/Contents/MacOS/PhotoLibraryServicesCore
replacementStrings
com.apple.quota.photoLibrary
placeholderKey
%@: %@
<%@: %@: %@>
Upgrade your iCloud Storage
Add more storage to continue using iCloud and keep the most important things on your iPhone safe.
Buy 50 GB for $0.99%C/%Cmo
Learn about managing storage
http://www.apple.com/icloud/
You will be charged $0.99 right now and each month. You can cancel at any time. Contact Apple within 15 days for a refund. Partial refunds are available where required. See %@.
Terms & Conditions
https://www.apple.com/legal/internet-services/icloud/en/terms.html
accountAltDSID
notificationID
appVersionId
context
requestedRemoteUIURL
journeyLinks
settingsPrivateNetwork
__WILDCARD__
com.apple.icloud.docs
com.apple.icloud.drive
clientContext
Offer server dictionary: %@
placeHolderInfo
iTunesAccountExists
planDetailsByBtnId
detailAppBannerInfo
universalLinkInfo
appContextInfo
_ICQCachedOfferStubsInternal
q24@?0@8@16
defaultOffers
premiumOffers
v32@?0@8Q16^B24
opportunitySheetDetails
unlimited
detailedFormat
badgeApp
opportunityBubble
bundleQuotaInBytes
commerceQuotaInBytes
opportunitySheet
com.apple.mobilemail
com.apple.icloud.quota.ICQ-Adopt
fail
optimizeEnabled
com.apple.iCloudQuota.ICQFollowup
_ICQLegacyQuotaFollowupCleanup.2
notifyingAppId
isPremiumOffer
ICQLinkAction
ICQLinkParameters
success
failure: 
altMessage
lockMesg
altLockMesg
altLockMessage
enableDirectAction
X-MMe-Timezone
Accept-Language
UniqueDeviceID
X-Mme-Device-Id
X-Apple-Cloud-Bkp-Id
X-Apple-Cloud-Bkp-Time
X-Client-Backup-UUID
false
com.apple.iCloudQuota
core
core.signpost
notificationInfo
showAlert
showBanner
container
appContextInfo: appId:%@ offerInfo: 
app-independent offerInfo: 
planDetails: 
quotaInfo: 
got response
no response
missing
v16@?0@8
lockScreenInfo
ICQUpdateOfferKeyIsZeroAction
isBuddyOffer
isForFetchOffers
FALSE
TRUE
OPEN_EXT_LINK
UPGRADE_ICLOUD_STORAGE
OPEN_FAMILY_SETUP
OPEN_PAYMENT_UPDATE
OPEN_ICLOUD_BACKUP
DISP_STORAGE_UPGRADE
UPGRADE_ICLOUD_STORAGE_OSLO
UPGRADE_ENABLE_ICPL_OSLO
LAUNCH_JITAPP_UI
LAUNCH_AMS_DYNAMIC_UI
buyQueryParams
linkURL
link
BtnTitle
BtnActParams
BtnId
btnVisible
com.apple.cloud.mail
com.apple.cloud.docs
com.apple.cloud.photos
com.apple.__mobilebackup__
com.apple.cloud.backup
_ICQCachedBuddyOfferInternal
_ICQCachedOfferInternal
PhotoLibrarySize
PhotoLibraryUploadSize
PhotosVideosCount
%@%@
followupInfo
displayStyle
INLINE_EXPANDED
sfSymbolId
sfSymbolBundlePath
deviceTotalUsedSpace
entryMethodType
entryMethodURL
backupStatus
needsTemporaryStorage
durationInDays
ALLOWED
NOT_ALLOWED
no alertInfo provided
alertInfo: expected NSDictionary, got %@
_ICQActionFromString - illegal action %@
defaults key %@ is not of correct type
Invalid string
Caught error (%@) deserializing context data (%@)
Successfully formed context: %@
Caught error (%@) serializing ICQRemoteContext
ICQRemoteContext %@ encoded successfully
Failed to get anisette data: %@
Creating premium offer placeholder
Received response %@ Status Code: %{public}lu (%{public}lu bytes): %@
Response %@ headers: %{public}@
Received error for request: %{public}@
Malormed JSON
Non-dict JSON
Received text response from %@: "%{public}@"
Received large text response from %@ (%{public}lu bytes)
Unexpected response format with Content-Type "%{public}@"
Received status code response: %{public}ld
Invalid request body
Sending request %@ %@ (%{public}lu body bytes)
No URL in bag for quotaBackupCheckURL
Failed to create eligibility request: %{public}@
Body JSON for _ICQMegaBackupEligibilityRequest: %{public}@
Calling completion for request %@ with error: %{public}@
missing quotaBackupCheckURL for account %@
invalid URL string %@ for quotaBackupCheckURL account %@
No URL in bag for updateMegaBackupStatusURL
Failed to create update status request: %{public}@
Calling completion for request %{public}@ with error: %{public}@
Received new expiration date %{public}@
missing updateStatusURL for account %@
Invalid URL string for update status: %@, account %@
No URL in bag for extendExpirationDateURL
Failed to create extend expiration date request: %{public}@
Server says extended expiration date is allowed (%{public}@) and updated expiration date is %{public}@
missing extendExpirationURL for account: %@
Invalid URL string for extend expiration: %@, account %@
attempt to open URL %@ of class %@
link - presenting purchase flow in Settings
link - presenting manage storage in Settings
link - presenting family setup in Settings
link - offer rejected
link - opening URL %@
ICQLink: performAction: %@ not handled since it requires context
ICQLink: performAction: %@ not handled
HTTP Call - server call to URL %@
Error making HTTP call to url: %@
Could not convert message body to JSON. Error: %@
Body: %@
invalid banner spec server message:%@
Received incorrect class %@ when requesting currentPremiumOffer for bundle ID %@
Offer received was nil when requesting currentPremiumOffer for bundle ID %@
Requested a premium offer with an opportunity bubble.
Returning premium offer %@, opportunity bubble %@, error %@
Failed to fetch offer. Error: %@
options: %@
GetOffer
SIGNPOST BEGIN [id: %hu]: GetOffer options: %@
%@ %@
SIGNPOST END   [id: %hu]: (%.4fs) GetOffer %@ %@
Returned offer doesn't match the requested offer type. Requested options: %@
Returning cached offer %@
registering for darwin notification %@
unregistering for darwin notification %@
push received -- refetching offer type %@
offer expired -- refetching
Premium offer expired -- refetching
mini-buddy might need to run: %@
received push received darwin notification %@
darwin notification %@ is not handled
ICQUserNotifications: got URL: %@
performOfferUpdateWithContext:%@ - %@ zeroAction:%d account:%@
update offer - failed to create request to URL %@
update offer request: %@ headers: %@ body: %@ body (as string): %@
context dictionary response is missing device offers
error %@ fetching offers with context dictionary %{public}@ resulting in serverDict %@
Did not find a persisted daemon offer of class %{public}@
Skipping persisted daemon offer of class %{public}@ because it expired: daemon offer retrieval date %@, callback interval: %f
Returning persisted daemon offer of class %@
Skipping persisted daemon offer of class %{public}@ due to account mismatch: daemon offer account alt dsid: %@, account alt dsid: %@. Persisted offer was %@
teardown offers related to primary account %@ due to user logout
teardown for non-primary account %@ - ignoring
%s - Renewing credentials
Error posting Storage Management followup %{public}@; error: %{public}@
Posted Storage Management followup %{public}@
Error clearing Storage Management followup; error: %{public}@
Cleared Storage Management followup
Reconsidering local offers
Unable to get offer stubs; error: %@
Offer is no longer valid, removing CFU.
Offer is valid, posting CFU
Clearing all followups
Failed to clear followups with error %{public}@
SIGNPOST BEGIN [id: %hu]: FetchOffers 
SIGNPOST END   [id: %hu]: (%.4fs) FetchOffers 
using cached offer stubs - expires %@
FetchOffers
Invalid cache while reconsidering offers locally
PushNotification
SIGNPOST EVENT [id: %hu] PushNotification 
_processPushNotificationDictionary: %@
push notification with bad event %@
ignoring push (CKHardwareID:%@ does not match local CKHardwareID:%@)
push targeted to this device only with CKHardwareID:%@
push notification with bad dsid of class %@
dsid mismatch: ignoring
handling push event %@
push notification with bad notificationId %@
push event (alert)
flushed stubs; fetching offer for notificationID %@
showing alert
skipping alert
fetch error %@
push event (%{public}@)
reconsidered offers success:%d error:%{public}@
push notification with unexpected event %@ (ignored)
_fetchDictionaryForAccount:%@ quotaKey:%@ quotaReason:%@ stub:%@ notificationID:%@ contextDictionary:%@
fetchOffer(s) with postDict %@
request: %@ headers: %@ body: %@ body (as string): %@
sending request for latest offer
error parsing fetched offer: %@
Mocking the server response
Mocking Not Supported in case of both stub and notification id are nil
Mocking Not Supported for %@
getting mock server dict from %@
error parsing mock offer: %@
mockServerDict = %@
Quota for %@ changed from %@ to %@; updating last known quota
Updated account quota information with success: %@, error: %@
WARNING: both stub and notificationID are nil -- attempting blind refresh
RefreshOfferDetails
SIGNPOST BEGIN [id: %hu]: RefreshOfferDetails 
Fetched offerId (%@) does not match requested offerId (%@)
missing buddyOffer flag after refresh offer details
Fetched buddy daemon offer
Fetched premium daemon offer
Fetched default daemon offer
Fetched regular daemon offer
Finished persisting %{public}@ offer; expires on %@
error %{public}@ occurred fetching %{public}@offer -- persisting placeholder
SIGNPOST END   [id: %hu]: (%.4fs) RefreshOfferDetails %@
Finished persisting placeholder %{public}@ offer; expires on %@
fetched local sample offer
Finished persisting local offer stubs; expires on %@
Unable to get local offer stubs; dropping through to server stubs
Fetching offer stubs - calling %@
fetched offers:
Finished persisting offer stubs; expires on %@
error %{public}@ occurred fetching offer stubs -- persisting placeholder
Finished persisting placeholder stubs; expires on %@
showing alert for daemonOffer %@
Skipping alert from daemon offer level %@ alertSpecification %@
Showing alert from daemon with offer level %@ alertSpecification %@
Daemon alert completed with action %@ parameters %@
no buttonId, skipping teardown ack
Invalid type %ld passed to %s. Must post darwin notifications for individual offer types.
posting push received darwin notification: %@
DarwinNotification
SIGNPOST EVENT [id: %hu] DarwinNotification %@
regular daemon offer / alerts / followups were torn down without replacement; notifying clients
regular daemon offer / alerts / followups were torn down but will be replaced; not notifying clients until then
default daemon offer torn down without replacement; notifying clients
default daemon offer torn down but will be replaced; not notifying clients until then
premium daemon offer / followups were torn down without replacement; notifying clients
premium daemon offer / alerts / followups were torn down but will be replaced; not notifying clients until then
TeardownAllOffers
SIGNPOST EVENT [id: %hu] TeardownAllOffers %@
Fetching CloudKit backup container device id...
Error fetching CloudKit backup container device id: %{public}@
Fetched CloudKit backup container device id: %@
Reconsidering offers with options %@
ReconsiderOffers
SIGNPOST BEGIN [id: %hu]: ReconsiderOffers %@
SIGNPOST END   [id: %hu]: (%.4fs) ReconsiderOffers 
Error: Unable to create offer stubs from dict %@
Persisting placeholder & clearing any existing followups
Choice handler block returned stub %@
Missing offer id in stub %@
Default offer is missing from fetchOffers response! Something went wrong
No stub matched for %@ offer -- persisting placeholder
Choosing all available stubs
ChooseBuddyStub returned stub %@
Chose premium stub %@
Chose default stub %@
Chose regular stub %@
Adding regular offer stub %@
Adding premium offer stub %@
Adding default offer stub %@
Unexpected error %@
Error: Unexpected nil daemonOffer
Error: Requested buddy offer but got non-buddy offer!
Error: Requested offer but got buddy offer!
there's no follow up info but lock screen info ... attempting to post a user notification
error %{public}@ posting followup
posted followup for offer type: %@
posting user notification, title:%@, message:%@, url:%@
failed to post user notificaiton: %@
Invalid scale %ld
attempt to create alert with nil daemonOffer
attempt to create alert for invalid daemonOffer %@
alert already shown; skipping
alert not shown: no alert specification
showing alert for daemonOffer%@
dismissing alert for daemonOffer %@
alert not showing; skipping dismiss
waiting for alert %@ to dismiss
finished waiting for alert %@ to dismiss
remember alert for notification %@
dismissing old alert for notification %@
forget alert for notification %@
Could not find alert for notification %@, dismissing unlabeled alert
dismissing alert for notification %@
Could not find alert for notification %@
dismissing all alerts
Photos transfer progress %@
Photos transfer error %@
_ICQOfferTypeForString - illegal offer type %@
_ICQOfferTypeForServerString - illegal server offer type %@
Clearing persisted object for %{public}@
Persisting %{public}@ using key %@ at location %@
bad retrieval date %@
bad callbackInterval %@
persisted offer missing server dict
bad server dict %@
validated persistence dictionary
persistence dictionary is invalid: %@
returning failure dictionary: %{public}@
persisted offer(s) bad %@: %@
no upgrade success page available
no upgrade failure page available
missing wireless network success page, falling back on generic
missing network failure page, falling back on generic
missing page spec for error: %@
missing upgradeInfo and actionInfo
missing postUpgradeInfo and successInfo
missing failureInfo
missing network failure page (might not be needed)
missing wifi failure page (might not be needed)
GUARD_OBJECT_CLASS: expected %s, got %@
device Info = %@
error = %@
Sending AMSMetricEvent for %@
Sending AMS metricEvent to start on-device journey with bundleID %@
Enqueued metricEvent to AMSEngagement: %@
Enqueueing a messageEvent to amsengagementd to determine if we should show OpportunityBubble.
Received error from amsngagementd %@
Received response from amsngagementd.
AMSEngagementMessageRequests: %@
ICQTileView should be shown.
ICQTileView shouldn't be shown.
Enqueued metricEvent from AMSEngagementMessageRequest to AMSEngagement: %@
Enqueueing a messageEvent to amsengagementd to pull bubble content from Mercury.
Received response from amsngagementd for bubble content.
AMSEngagementMessageRequests for bubble content: %@
Enqueued metricEvent from AMSDialogRequest to AMSEngagement after pulling for bubble content: %@
Enqueueing a messageEvent to amsengagementd to send impression event.
Enqueued metricEvent from AMSDialogRequest to AMSEngagement: %@
Requesting current storage level
Current iCloudStorageLevel: %@ appleOneStorageLevel %@
No premium offer return with error: %@
Missing message property %@ in opportunityBubble: %@
Malformed actions property in opportunityBubble: %@
Missing title from server action dictionary %@
Unable to get user volume status
Found %{public}llu bytes of free space
Failed to get purgable space from Cache Delete: %@
Found %{public}llu bytes of purgeable space
user volume is eating into the reserve -- too low for offers
photosLibrarySize took %@ seconds
photosLibraryUploadSize took %@ seconds
photosVideosCount took %@ seconds
Unable to look up placeholder for key %@, becuase it is too short
placeholderDict = %@
No placeholder info found for %@ in offer
placeHolderDict is missing 'appID'
key = %@  wordsToReplace = %@
%{public}@ subclass must implement %{public}@
warning: missing appBannerInfo that could be considered a button
app specific spec for %@ not found in appId array; using workaround
appId array: %@
app specific spec still not found using workaround
Offer %@ will show count
remoteUI url = %@
expected inlineAlertInfo to be NSArray<NSDictionary *> but found %@
found app-specific flow for %@
app-specific flow for %@ not found; using top-level flow
%{public}@ is missing
invalid %{public}@ of class %@
invalid %{public}@[%ld] of class %@
choose stub: none present
checking criteria for offer type %{public}@ type %{public}@ criteria
%{public}@
choose stub: none with matching criteria found
choose offer type (%@):
skipping server offer type %@ (%@) because it doesn't match requested %@
choose offer type (%@): none found
choose offer type: none present
Malformed key/format properties in message property of opportunitySheet: %@
format array "%@" "%@"
Cannot initialize premium offer from server dict due to invalid type: %@
Successfully initialized premium offer from server response: %@
The requested RemoteUI URL is nil! We won't be able to present a remoteUI flow
Current bundle storage level from Premium offer: %@
Current commerce storage level from Premium offer: %@
bubble not nil: %@
Using Unified Messaging based on Internal Settings
Not using Unified Messaging based on Internal Settings
criteria: missing, substituting empty criteria (always succeeds)
criteria: expected NSDictionary, got %@
criterion: %@: %@ not convertible to long long
criterion: photos library size unknown
criterion: %{public}@: %lld %{public}@ %lld
unexpected criterion key %@
criterion: %{public}@ matches %{public}@
criterion: %{public}@ doesn't match %{public}@
criterion: expected bool value, got %@
not badging app
Posted ICQFollowup item (title:%@ group:%@) %@%@
Skipping legacy CFU cleanup. Already been done
Clearing legacy ICQFollowup items
legacy ICQFollowup items clear completed with success: %@, error: %@
Clearing ICQFollowup items for %@ offer
missing quota key %@ for account %@
invalid URL string %@ for quota key %@ account %@
request: stub missing offerId
request: missing conditions when stub was chosen; using live conditions
event details: nil
event details: unexpected class %@
offerType: %{public}@
type: %{public}@
notificationInfo: present %@
notificationInfo: missing
iTunesAccountExists: %d
iTunesAccountExists: unexpected class %@
callbackInterval: %g
callbackInterval: unexpected class %@
showAlert: %d
showAlert: unexpected class %@
alertInfo: present
alertInfo: missing
showBanner: %d
showBanner: unexpected class %@
appBannerInfo: present
appBannerInfo: missing
appContextInfo: present
appContextInfo: missing
followUpInfo: present
followUpInfo: missing
container: %@
%@ request completed; %@
data: %@
response: %@
error: %@
%{public}@%{public}@
request for detail notification object
"lockTitle" field not present or of undefined type in lockScreenInfo
"lockMessage" field not present or of undefined type in lockScreenInfo
Lockscreen info contains notifyingAppId %@
"title" field not present or of undefined type in followups
"mesg" field not present or of undefined type in followups
Posting detail notification
lockScreenTitle = %@
lockScreenMessage = %@
followupTitle = %@
followupMessage = %@
expected NSString from key %@ but got %@
expected NSDictionary from key %@ but got %@
unexpected server action %@
link overrides action in text:%@ action:%@ params:%@ link:%@
link: expected dict: invalid server message parameter:%@
Invalid link: %@
links: expected array: invalid server message parameters:%@
format is "%@"; button may not contain more than one "%%@"
expected message; bad plist object:%@
Error: buddy offer object of incorrect class -- will persist at the wrong key
Error: default offer object of incorrect class -- will persist at the wrong key
Error: premium offer object of incorrect class -- will persist at the wrong key
photosLibraryUploadSize: %@ < %lld -- recommending alternate string
photosVideosCount: %@ < %lld -- recommending alternate string
no substitution for placeholder %@%@
substituting for placeholder %{public}@ = %@
missing substitution for substring "%{public}@"
no followupInfo provided
followupInfo: expected NSDictionary, got %@
deepLinkURL must be non-nil when entryMethod is _ICQMegaBackupEntryMethodDeepLink
softlink:r:path:/System/Library/PrivateFrameworks/CloudKit.framework/CloudKit
softlink:r:path:/System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
softlink:r:path:/System/Library/PrivateFrameworks/PhotoLibraryServicesCore.framework/PhotoLibraryServicesCore
_ICQAlertSpecification
_ICQUpgradeOfferPageSpecification
ICQPreferences
_ICQHelperFunctions
ICQRemoteContext
NSSecureCoding
NSCoding
_ICQMegaBackupExtendExpirationRequest
ICQDaemonPremiumOffer
ICQDebugging
_ICQMegaBackupNetworkRequest
_ICQMegaBackupManager
ICQAdditions
ICQDaemonDefaultOffer
ICQDaemon
ICQLink
_ICQBannerSpecification
ICQDaemonOfferStub
ICQOfferManager
Private
ICQBuddy
Testing
_ICQMegaBackupUpdateStatusRequest
ICQUserNotifications
ICQOfferUpdateController
ICQDaemonOfferManager
_ICQOpportunityBubbleImageDetails
ICQDaemonAlert
_ICQPhotosInfo
ICQDaemonPersisted
Convenience
_ICQUpgradeCompletePageSpecification
_ICQUpgradeFlowSpecification
_ICQOpportunityBubbleReportingSpecification
ICQOfferUpdateRequestContext
_ICQDeviceInfo
ICQOpportunityBubbleDetailsSpecification
ICQEngagementReporter
ICQOpportunityFlowSpecification
ICQRemotePresentationManager
ICQDaemonOfferConditions
NSCopying
_ICQXMLSpecification
_ICQPageSpecification
_ICQAccountManager
_ICQFlowSpecification
ICQOffer
Internal
ICQDaemonOfferStubs
ICQTestingStubs
ICQOpportunityBubbleSpecification
ICQOpportunitySheetDetailsSpecification
_ICQButtonSpecification
ICQPremiumOffer
ICQDaemonOfferCriteria
_ICQFollowupSpecification
ICQRequestProvider
ICQAsyncValueLoader
_ICQDetailFollowupSpecification
ICQDaemonBuddyOffer
ICQDaemonOffer
Debugging
_ICQMegaBackupEligibilityRequest
objectForKeyedSubscript:
setServerDict:
init
linkForButtonIndex
numberWithInteger:
objectForKey:
setObject:forKey:
removeObjectForKey:
setDefaultButtonIndex:
setLink:forButtonIndex:
count
objectAtIndexedSubscript:
setLink:forButtonIndex:defaultButton:
setTitle:
setMessage:
setAltMessage:
setDisableLockScreenAlert:
_setLinks:defaultIndex:
initWithServerDictionary:
linkForButtonIndex:
serverDict
title
message
altMessage
lockScreenTitle
setLockScreenTitle:
lockScreenMessage
setLockScreenMessage:
altLockScreenMessage
setAltLockScreenMessage:
disableLockScreenAlert
defaultButtonIndex
setLinkForButtonIndex:
.cxx_destruct
_serverDict
_disableLockScreenAlert
_title
_message
_altMessage
_lockScreenTitle
_lockScreenMessage
_altLockScreenMessage
_defaultButtonIndex
_linkForButtonIndex
T@"NSMutableDictionary",&,V_linkForButtonIndex
T@"NSDictionary",&,N
T@"NSString",&,N,V_title
T@"NSString",&,N,V_message
T@"NSString",&,N,V_altMessage
T@"NSString",&,N,V_lockScreenTitle
T@"NSString",&,N,V_lockScreenMessage
T@"NSString",&,N,V_altLockScreenMessage
TB,N,V_disableLockScreenAlert
Tq,N,V_defaultButtonIndex
initWithCapacity:
countByEnumeratingWithState:objects:count:
addObject:
copy
boolValue
isEqualToString:
integerValue
UUID
UUIDString
initWithServerDictionary:pageIdentifier:
setPageIdentifier:
setIconBundleIdentifier:
setMessageLinks:
setAltMessageLinks:
setFineprintFormat:
setFineprintLinks:
setPurchaseLink:
pageIdentifier
linkWithText:action:parameters:
setPurchase2Link:
setPurchase2LinkVisibleKey:
setBottomLink:
setBottomLinkVisibleKey:
setHasCancelButtonForBack:
debugDescription
purchaseLink
text
purchase2Link
bottomLink
fineprintFormat
stringWithFormat:
purchase2LinkVisibleKey
bottomLinkVisibleKey
copyWithBindings:
iconBundleIdentifier
messageLinks
altMessageLinks
fineprintLinks
_iconBundleIdentifier
_messageLinks
_altMessageLinks
_purchaseLink
_purchase2Link
_bottomLink
_fineprintFormat
_fineprintLinks
_purchase2LinkVisibleKey
_bottomLinkVisibleKey
T@"NSDictionary",R,N,V_serverDict
T@"NSString",&,N,V_iconBundleIdentifier
T@"NSArray",&,N,V_messageLinks
T@"NSArray",&,N,V_altMessageLinks
T@"ICQLink",&,N,V_purchaseLink
T@"ICQLink",&,N,V_purchase2Link
T@"ICQLink",&,N,V_bottomLink
T@"NSString",&,N,V_fineprintFormat
T@"NSArray",&,N,V_fineprintLinks
T@"NSString",&,N,V_purchase2LinkVisibleKey
T@"NSString",&,N,V_bottomLinkVisibleKey
numberWithBool:
shouldEnableUnifiedMessaging
setShouldEnableUnifiedMessaging:
stringByReplacingOccurrencesOfString:withString:
containsString:
whitespaceCharacterSet
componentsSeparatedByCharactersInSet:
hasPrefix:
standardUserDefaults
setBool:forKey:
boolForKey:
defaultValueForKey:
defaultKeyExists:
currentLocale
setLocale:
setNumberStyle:
setUsesGroupingSeparator:
setMaximumFractionDigits:
stringFromNumber:
dataUsingEncoding:
base64EncodedStringWithOptions:
_checkOptions:forKey:
_requestedFetchOffersInOptions:
_requestedPremiumOfferInOptions:
_requestedDefaultOfferInOptions:
replaceWordsIn:with:
stringFromTemplates:key:
findPlaceholdersInString:
setUserDefaultsBool:forKey:
userDefaultsBoolValueForKey:
defaultStringValueForKey:
parseTemplates:
isServerMockingEnabled
getStringFromNumber:
base64EncodeString:
_getOfferRequestTypeFromOptions:bundleId:isBuddy:
_getOfferDescriptionFromRequestType:
_darwinNotificationNameForRequestType:
isInternalUI
userInfo
unarchivedObjectOfClass:fromData:error:
archivedDataWithRootObject:requiringSecureCoding:error:
_serializedData
dictionaryWithObjects:forKeys:count:
encodeObject:forKey:
decodeObjectOfClass:forKey:
ICQContextFromRemoteAlertContext:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithOffer:flowOptionsData:preloadedRemoteUIData:
toDictionary
offer
flowOptionsData
preloadedRemoteUIData
_offer
_flowOptionsData
_preloadedRemoteUIData
T@"ICQOffer",R,N,V_offer
T@"NSData",R,N,V_flowOptionsData
T@"NSData",R,N,V_preloadedRemoteUIData
initWithRequestURL:URLSession:queue:
anisetteDataWithError:
ak_anisetteHeadersWithData:
timeIntervalSince1970
numberWithDouble:
addAdditionalRequestHeaders:
doubleValue
dateWithTimeIntervalSince1970:
extendExpirationRequestWithAccount:deviceBackupUUID:requestedExpirationDate:requestURL:URLSession:queue:error:
additionalRequestHeaders
bodyJSON
handleResponse:body:
account
deviceBackupUUID
requestedExpirationDate
isExtensionAllowed
updatedExpirationDate
_extensionAllowed
_account
_deviceBackupUUID
_requestedExpirationDate
_updatedExpirationDate
T@"ACAccount",R,N,V_account
T@"NSString",R,C,N,V_deviceBackupUUID
T@"NSDate",R,C,N,V_requestedExpirationDate
extensionAllowed
TB,R,N,GisExtensionAllowed,V_extensionAllowed
T@"NSDate",R,N,V_updatedExpirationDate
_mutablePlaceholderPersistanceDictionary
_initWithAccount:error:
serverDictionary
mutableCopy
setServerDictionary:
persistenceKey
upgradeCompletePageSpecificationSampleForLevel:
setDoneLink:
upgradeFlowSpecificationSampleForLevel:
upgradeOfferPageSpecificationSampleForLevel:
arrayWithObjects:count:
initWithPages:
cancel
_createURLRequestWithError:
_performURLRequest:
_completeWithError:
absoluteString
statusCode
_dictionaryFromData:response:error:
length
allHeaderFields
errorForUnsuccessfulResponse:body:
_errorForURLRequestError:
errorWithDomain:code:userInfo:
MIMEType
JSONObjectWithData:options:error:
initWithData:encoding:
isValidJSONObject:
dataWithJSONObject:options:error:
requestURL
initWithURL:
requestHeaders
setAllHTTPHeaderFields:
setHTTPBody:
setHTTPMethod:
setObject:forKeyedSubscript:
addEntriesFromDictionary:
domain
code
initWithDictionary:
handleURLResponse:data:error:
dataTaskWithRequest:completionHandler:
allHTTPHeaderFields
HTTPBody
resume
invalidate
resumeWithCompletionHandler:
error
_queue
_URLSession
_URLSessionTask
_completionHandler
_requestURL
_error
T@"NSURL",R,C,N,V_requestURL
T@"NSDictionary",R,C,N
T@"NSError",R,C,N,V_error
bannerSpecificationSampleForLevel:
setLinksFormat:
setLinks:
linkWithText:options:action:parameters:
requestMegaBackupForAccount:deviceBackupUUID:deviceTotalUsedSpaceInBytes:entryMethod:deepLinkURL:queue:completion:
_quotaBackupCheckURLForAccount:
sharedSession
eligibilityRequestWithAccount:deviceBackupUUID:deviceTotalUsedSpaceInBytes:entryMethod:deepLinkURL:requestURL:URLSession:queue:error:
isBackupAllowed
needsTemporaryStorage
daysUntilExpiration
propertiesForDataclass:
aa_altDSID
URLWithString:
_updateStatusURLForAccount:
updateStatusRequestWithAccount:deviceBackupUUID:status:requestURL:URLSession:queue:error:
expirationDate
extendExpirationForAccount:deviceBackupUUID:requestedExpirationDate:queue:completion:
_extendExpirationURLForAccount:
requestMegaBackupForAccount:deviceBackupUUID:deviceTotalUsedSpaceInBytes:queue:completion:
updateMegaBackupStatusForAccount:deviceBackupUUID:status:queue:completion:
extendExpirationForAccount:deviceBackupUUID:queue:completion:
stringWithNonBreakingSpaces
isDefaultOffer
initWithLocaleIdentifier:
setDateFormat:
timeZoneForSecondsFromGMT:
setTimeZone:
stringFromDate:
icq_serverFriendlyString
defaultWorkspace
openSensitiveURL:withOptions:
initWithText:options:action:parameters:
initWithText:action:parameters:
options
action
parameters
valueForKey:
initWithString:
performActionWithOptions:
performAction:parameters:options:
performHTTPPOSTCallWithParams:options:
performHTTPGETCallWithParams:options:
defaultSessionConfiguration
initWithIdentifier:
set_appleIDContext:
sessionWithConfiguration:
requestWithURL:cachePolicy:timeoutInterval:
addHeadersToRequest:
setValue:forHTTPHeaderField:
urlRequestWithParams:options:
addPOSTParams:toRequest:
startDataTaskWithRequest:
urlSession
localizedDescription
aa_primaryAppleAccount
initWithAccount:
addBasicHeadersToRequest:
remoteUIURL
performAction
setRemoteUIURL:
_text
_options
_action
_parameters
_remoteUIURL
T@"NSString",R,C,N,V_text
Tq,R,N,V_options
Tq,R,N,V_action
T@"NSDictionary",R,C,N,V_parameters
T@"NSURL",&,N,V_remoteUIURL
setMessageWithServerMessage:
isDetailBannerInfoAvailable
valueForKeyPath:
titleTemplates
messageTemplates
initWithDetailBannerInfo:
titleWithKey:
messageWithKey:
linksFormat
links
placeholderExists
_isDetailBannerInfoAvailable
_placeholderExists
_messageTemplates
_titleTemplates
_linksFormat
_links
T@"NSDictionary",R,N,V_messageTemplates
T@"NSDictionary",R,N,V_titleTemplates
T@"NSString",&,N,V_linksFormat
T@"NSArray",&,N,V_links
TB,R,N,V_isDetailBannerInfoAvailable
TB,R,N,V_placeholderExists
alertSpecificationSampleForLevel:
alertSpecificationDictionarySampleForLevel:
isBuddyOffer
isPremiumOffer
offerClass
persistedObject
offerId
criteria
persistedOffer
conditionsWhenChosen
setConditionsWhenChosen:
_conditionsWhenChosen
T@"NSString",R,N
buddyOffer
TB,R,N,GisBuddyOffer
defaultOffer
TB,R,N,GisDefaultOffer
premiumOffer
TB,R,N,GisPremiumOffer
T@"ICQDaemonOfferCriteria",R,N
T@"ICQDaemonOfferConditions",C,N,V_conditionsWhenChosen
T@"NSDictionary",R,N
mainBundle
bundleIdentifier
defaultBundleIdentifier
_teardownRegularOfferInvalidationTimer
_teardownPremiumOfferInvalidationTimer
_unregisterForAllDarwinNotifications
dealloc
currentOfferForBundleIdentifier:
currentPremiumOfferForBundleIdentifier:
_getOfferForBundleIdentifier:options:offerContext:completion:
_currentOfferForBundleIdentifier:options:
_premiumOptions
description
getOfferForBundleIdentifier:completion:
getPremiumOfferForBundleIdentifier:completion:
getPremiumOfferAndOpportunityBubbleForBundleIdentifier:completion:
opportunityBubble
shouldShowOpportunityBubbleWithCompletion:
offerType
isPhotosCloudEnabled
defaultStore
_getOfferForAccount:bundleIdentifier:options:offerContext:completion:
_shouldUseOffer:forBundleIdentifier:
_offerTypeMatchesRequestOptions:offer:
showsPhotoVideoCounts
setDeviceInfo:
getInfoWithBundleId:completion:
cachedOfferForType:
isExpired
accountAltDSID
setCachedOfferForType:newOffer:
infoDictionary
setAppVersionId:
cachedOffers
setCachedOffers:
_registerForDarwinNotification:
_setupTimerForInvalidationDate:forType:
defaultCenter
postNotificationName:object:
getOfferWithCompletion:
getPremiumOfferWithCompletion:
registeredDarwinNotifications
setRegisteredDarwinNotifications:
_unregisterForDarwinNotification:
_refetchRegularOffer
_refetchPremiumOffer
_refetchDefaultOffer
_setupTimerForRegularOfferInvalidationDate:
_setupTimerForPremiumOfferInvalidationDate:
date
timeIntervalSinceDate:
_firedRegularOfferInvalidationTimer:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
_firedPremiumOfferInvalidationTimer:
isValid
sharedOfferManager
currentOffer
currentPremiumOffer
getDefaultOfferWithCompletion:
currentDefaultOffer
getPremiumOfferAndOpportunityBubbleWithCompletion:
getOfferForBundleIdentifier:offerContext:completion:
getPremiumOfferForBundleIdentifier:offerContext:completion:
fetchOfferIfNeeded
_handlePushReceivedDarwinNotificationRequestType:
_teardownInvalidationTimerForRequestType:
_cachedOfferQueue
_regularOfferInvalidationTimer
_premiumOfferInvalidationTimer
_cachedOffers
_registeredDarwinNotifications
T@"NSMutableDictionary",&,N,V_cachedOffers
T@"NSMutableDictionary",&,N,V_registeredDarwinNotifications
defaultPlaceholderKeys
stringWithPlaceholderFormat:alternateString:
sharedDaemonOfferManager
clearFollowupsIsPremiumOffer:completion:
clearFollowups
updateOfferId:buttonId:info:completion:
isCachedCloudQuotaAlmostFullOrFull
isDeviceStorageNearLowButNotLow
buddyOfferMightNeedPresenting
_legacyBuddyOfferMightNeedPresenting
forcePostFollowup
postOfferType:
postBuddyOfferType:
teardownCachedOffer
teardownCachedBuddyOffer
tearDownCachedPremiumOffer
teardownCachedOffers
ckBackupDeviceID
isDeviceStorageAlmostFull
isSimulatedDeviceStorageAlmostFull
setSimulatedDeviceStorageAlmostFull:
simulatedPhotosLibrarySize
setSimulatedPhotosLibrarySize:
photosLibrarySize
isBuddyOfferEnabled
setBuddyOfferEnabled:
teardownCachedPremiumOffer
TB,R,N
simulatedDeviceStorageAlmostFull
TB,N,GisSimulatedDeviceStorageAlmostFull
T@"NSNumber",&,N
T@"NSNumber",R,N
buddyOfferEnabled
TB,N,GisBuddyOfferEnabled
status
_status
_expirationDate
Tq,R,N,V_status
T@"NSDate",R,N,V_expirationDate
setBody:
setDefaultActionURL:
requestWithIdentifier:content:trigger:
initWithBundleIdentifier:
addNotificationRequest:withCompletionHandler:
postUserNotificationWithIdentifier:title:bodyText:url:completion:
buttonId
isZeroAction
urlForQuotaKey:
dictionary
aa_personID
attemptSetRequest:toPostWithJSONDict:
addCommonHeadersToRequest:
initWithSession:
performOfferUpdateWithContext:completion:
_sharedURLSession
initWithAccountManager:
initWithClientIdentifier:
daemonBuddyOfferDictionaryForAccount:completion:
_initWithAccount:serverDictionary:
chooseFirstStub
_persistenceDictionary
_fetchDictionaryForAccount:quotaKey:quotaReason:stub:notificationID:contextDictionary:completion:
daemonOfferClassFromBundleId:options:
isValidForAccount:
retrievalDate
callbackInterval
notificationID
_postDaemonOfferChangedDueToPushDarwinNotificationRequestType:
_postFollowupForDaemonOffer:completion:
_fetchDaemonOfferForAccount:stub:notificationID:completion:
_getHandlerForBundleId:options:
_reconsiderOffersForAccount:isForBuddy:quotaReason:options:choiceHandler:completion:
chooseFirstDefaultStub
chooseFirstPremiumStub
_reconsiderOffersForAccount:isForBuddy:quotaReason:choiceHandler:completion:
_processPushNotificationCheckHardwareIDWithDictionary:completion:
aa_isPrimaryAccount
_teardownCachedOffersAndNotify:
earlierDate:
renewCredentialsForAccount:force:reason:completion:
bundleForClass:
localizedStringForKey:value:table:
actionWithLabel:url:
setInformativeText:
setActivateAction:
setFrequency:
setWithArray:
setOptions:
setUniqueIdentifier:
setGroupIdentifier:
setDisplayStyle:
_storageManagementFollowupActions
setActions:
_storageManagementFollowupNotification
setNotification:
_storageManagementFollowupItem
postFollowUpItem:error:
clearPendingFollowUpItemsWithUniqueIdentifiers:error:
shouldDirectToStorageManagement
setShouldDirectToStorageManagement:
_postStorageManagementFollowup
_clearStorageManagementFollowup
reconsiderOffersWithReason:reuseLocalOffers:completion:
accountManager
accountStore
_reconsiderLocalOffersWithReason:account:completion:
clearPersistedObject
chooseStub
choosePremiumStub
_processOfferStub:account:isPremiumOffer:
_daemonLocalOfferStubsDictionaryForAccount:requestType:completion:
_isCachedDaemonOfferValid:forAccount:
clearLegacyFollowupWithController:
clearFollowupWithController:isPremium:completion:
clearLegacyFollowups
_isCacheValidForRequestType:offerStubs:
_fetchDaemonOfferStubsForAccount:isForBuddy:quotaReason:completion:
chooseDefaultStub
lowercaseString
_processPushNotificationDictionary:completion:
getCkBackupDeviceIDWithCompletionHandler:
stringValue
isEqual:
_addSampleAlert
shouldShowForDaemonOffer:
_showDaemonAlertForOffer:notificationDictionary:store:account:completion:
clearAllFollowupsWithCompletion:
_updateOffer:buttonId:info:account:accountStore:completion:
addEntriesToPostDictionary:forStub:
isEnabledForDataclass:
enabledDataclassesForAccount:
containsObject:
_mockFetchDictionaryForAccount:quotaKey:stub:notificationID:contextDictionary:completion:
_useFetchOffersDataDirectly
URLForAccount:quotaKey:
_addEntriesToPostDictionary:forStub:
daemonOfferSource
deviceOffersContainType:
addPremiumOffersHeaderIfNeededForRequest:
_isBackupEnabledForAccount:
ams_sharedAccountStore
ams_activeiTunesAccount
ams_DSID
_attemptSetRequest:toPostWithJSONDict:
_addCommonHeadersToRequest:account:
enumerateKeysAndObjectsUsingBlock:
defaultManager
longLongValue
numberWithLongLong:
aa_lastKnownQuota
isEqualToNumber:
reload
aa_setLastKnownQuota:
saveVerifiedAccount:withCompletionHandler:
_updateQuotaForAccount:withServerDictionary:
setNotificationID:
persistObject
_placeholderOfferForAccount:isForPremium:isForBuddy:error:
daemonOfferStubsDictionarySample
dismissAlert
level
alertSpecification
initWithDaemonOffer:
showAlertWithCompletion:
setAccount:
setButtonId:
setOfferId:
setZeroAction:
dismissAlertsWithNotificationID:
_teardownCachedBuddyOffer
_teardownCachedPremiumOfferAndNotify:
_teardownCachedOfferAndNotify:
_teardownCachedDefaultOfferAndNotify:
containerWithIdentifier:
fetchCurrentDeviceIDWithCompletionHandler:
initWithDefaultValue:valueFetcher:
value
setDidUpdate:
_getStubsForRequestType:fromDaemonStubs:
predicateWithBlock:
filteredArrayUsingPredicate:
firstObject
_logErrorsForFetchOfferResultWithOffer:error:isForBuddy:
_handlerMultipleStubs:forAccount:completion:
_daemonOfferStubsDictionaryForAccount:requestType:quotaReason:completion:
_getFetchOfferStubsFromStubs:
chooseBuddyStub
followupSpecification
lockScreenInfo
_postUserNotification:completion:
postFollowupWithController:completion:
_postOfferType:isForBuddy:
chooseBuddyStubForOfferType:
chooseStubForOfferType:
daemonOfferDictionaryForAccount:options:completion:
processPushNotificationDictionary:completion:
teardownOffersForAccount:completion:
soonestOfferOrStubExpirationDate
renewCredentialsWithCompletion:
startDirectingToStorageManagement
stopDirectingToStorageManagement
reconsiderOffersWithCompletion:
updateOfferForAccount:offerId:buttonId:info:completion:
isLegacyDeviceStorageLevelNotificationEnabled
setLegacyDeviceStorageLevelNotificationEnabled:
sharedURLSession
_followUpController
_accountManager
T@"_ICQAccountManager",R,N,V_accountManager
T@"NSURLSession",R,N,V_sharedURLSession
TB,N
legacyDeviceStorageLevelNotificationEnabled
TB,N,GisLegacyDeviceStorageLevelNotificationEnabled
uppercaseString
hasSuffix:
rangeOfString:
substringToIndex:
setUrlFor3x:
setUrlFor2x:
setUrlFor1x:
urlFor1x
urlFor2x
urlFor3x
getURLForScale:
_urlFor3x
_urlFor2x
_urlFor1x
T@"NSString",C,N,V_urlFor3x
T@"NSString",C,N,V_urlFor2x
T@"NSString",C,N,V_urlFor1x
setName:
lock
daemonOffer
unlock
showOnlyInSpringboard
handleActionsBeforeCallingCompletionHandler
_handleLink:
setShowOnlyInSpringboard:
setHandleActionsBeforeCallingCompletionHandler:
_alertLock
_alertState
_cfAlert
_alertSema
_alertQueue
_showOnlyInSpringboard
_handleActionsBeforeCallingCompletionHandler
_daemonOffer
T@"ICQDaemonOffer",R,N,V_daemonOffer
TB,N,V_showOnlyInSpringboard
TB,N,V_handleActionsBeforeCallingCompletionHandler
mockCount:
setPhotoCount:
setVideoCount:
systemPhotoLibrary
notUploadedPhotosCount
notUploadedVideosCount
getInfoWithCompletion:
photoCount
videoCount
_photoCount
_videoCount
TQ,N,V_photoCount
TQ,N,V_videoCount
persistenceDomain
initWithSuiteName:
_placeholderPersistenceDictionary
userDefaults
dateByAddingTimeInterval:
compare:
dateWithTimeIntervalSinceReferenceDate:
defaultCallbackInterval
setRetrievalDate:
_callbackIntervalFromServerObject:
setCallbackInterval:
setAccountAltDSID:
_initWithAccountAltDSID:error:
setFailedToFetchFromServer:
setFailureDetails:
_placeholderObject
Td,R,N
T@"NSMutableDictionary",R,N
_mutablePersistenceDictionary
_cachedQuotaAvailable
failedToFetchFromServer
failureDetails
_failedToFetchFromServer
_retrievalDate
_callbackInterval
_accountAltDSID
_serverDictionary
_failureDetails
T@"NSDate",&,N,V_retrievalDate
Td,N,V_callbackInterval
T@"NSDate",R,N
expired
TB,R,N,GisExpired
T@"NSString",C,N,V_accountAltDSID
T@"NSDictionary",&,N,V_serverDictionary
TB,N,V_failedToFetchFromServer
T@"NSDictionary",&,N,V_failureDetails
propertyList:isValidForFormat:
hasCancelButtonForBack
doneLink
_doneLink
T@"ICQLink",&,N,V_doneLink
pagesByIdentifier
upgradeSuccessPage
upgradeFailurePage
_upgradePageIdentifierForError:
sanitizedUpgradeFlowServerDict:
array
insertObject:atIndex:
upgradePageForSuccess:
upgradeSuccessPageForWiFi
upgradeFailurePageForNetwork
upgradePageForError:
setOfferType:
needsWiFi
setNeedsWiFi:
_needsWiFi
_offerType
Tq,N,V_offerType
TB,N,V_needsWiFi
_setDisplayRuleFromServerDict:
_getDismissReportingRuleFromServerDict:
dimissServerParam
setDimissServerParam:
displayRuleType
setDisplayRuleType:
dismissRuleType
setDismissRuleType:
displayRuleServerAlwaysShow
setDisplayRuleServerAlwaysShow:
_displayRuleServerAlwaysShow
_dimissServerParam
_displayRuleType
_dismissRuleType
T@"NSDictionary",&,N,V_dimissServerParam
TQ,N,V_displayRuleType
TQ,N,V_dismissRuleType
TB,N,V_displayRuleServerAlwaysShow
setAccountStore:
_zeroAction
_accountStore
_buttonId
_offerId
T@"ACAccount",&,N,V_account
T@"ACAccountStore",&,N,V_accountStore
T@"NSString",C,N,V_buttonId
T@"NSString",&,N,V_offerId
zeroAction
TB,N,GisZeroAction,V_zeroAction
appendString:
setBundleId:
templateKeyForPhotos:video:
setKey:
numberWithUnsignedLongLong:
setWordsToReplace:
defaultDeviceInfoWithBundleId:
getInfoWithBundleId:
wordsToReplace
bundleId
_key
_wordsToReplace
_bundleId
T@"NSString",&,N,V_key
T@"NSDictionary",&,N,V_wordsToReplace
T@"NSString",&,N,V_bundleId
_eventNameForEngagementType:
_sendSubscriptionChangedEvent
_sendBubbleDisplayedEventFor:
_sendImpressionEventWithName:bundleID:
initWithUnderlyingDictionary:
underlyingDictionary
enqueueData:
setWithObjects:
initWithServiceType:placements:
enqueueMessageEvent:
messageActions
placements
_placementDictionary
metricsEvent
addFinishBlock:
makeDialogRequest
_createOpportunityBubbleFrom:bundleID:
iconURL
buttonActions
identifier
deepLink
initWithOpportunityBubble:andOpportunitySheet:
commerceQuotaInfo
bundleQuotaInfo
null
sendEventFor:withBundleID:link:
shouldShowOpportunityBubbleWithBundleID:completion:
fetchBubbleContentWithBundleID:completion:
makeMessageFromServerDict:
makeActionsFromServerDict:
actions
imageDetails
setImageDetails:
_actions
_imageDetails
T@"NSString",C,N,V_title
T@"NSString",C,N,V_message
T@"_ICQOpportunityBubbleImageDetails",&,N,V_imageDetails
T@"NSArray",&,N,V_actions
initWithServiceName:viewControllerClassName:
setUserInfo:
setXpcEndpoint:
newHandleWithDefinition:configurationContext:
activateWithContext:
initWithRemoteContext:
presentHiddenFreshmintFlowWithEndpoint:
remoteContext
_remoteContext
T@"ICQRemoteContext",R,N,V_remoteContext
initWithCurrentConditions
setDeviceStorageAlmostFull:
setPhotosCloudEnabled:
isPhotosOptimizeEnabled
setPhotosOptimizeEnabled:
setPhotosLibrarySize:
initWithPath:
availableSpace
unsignedLongLongValue
lowDiskThreshold
nearLowDiskThreshold
timeIntervalSinceNow
getPhotosLibrarySizeWithCompletion:
getPhotosLibraryUploadSizeWithCompletion:
sharedPhotoLibrary
getPhotoCount:videoCount:
numberWithUnsignedLong:
sharedInstance
getLibrarySizes:
getLibrarySizesFromDB:handler:
currentConditions
hasPhotosCloudEverBeenEnabled
photosLibraryUploadSize
photosVideosCount
copyWithZone:
_deviceStorageAlmostFull
_photosCloudEnabled
_photosOptimizeEnabled
_photosLibrarySize
deviceStorageAlmostFull
TB,N,GisDeviceStorageAlmostFull,V_deviceStorageAlmostFull
photosCloudEnabled
TB,N,GisPhotosCloudEnabled,V_photosCloudEnabled
photosOptimizeEnabled
TB,N,GisPhotosOptimizeEnabled,V_photosOptimizeEnabled
T@"NSNumber",C,N,V_photosLibrarySize
stringForPlaceholder:withDeviceInfo:
substringFromIndex:
initWithPlaceholderInfo:
stringForPlaceholder:
_placeholderInfo
pageClassIdentifier
pageTitle
setPageTitle:
setPageClassIdentifier:
_hasCancelButtonForBack
_pageIdentifier
_pageTitle
_pageClassIdentifier
T@"NSString",&,N,V_pageIdentifier
T@"NSString",&,N,V_pageTitle
TB,N,V_hasCancelButtonForBack
T@"NSString",&,N,V_pageClassIdentifier
initWithAccountStore:
T@"ACAccountStore",R,V_accountStore
startPage
startAlert
setStartAlert:
_startPage
_pagesByIdentifier
_startAlert
T@"_ICQPageSpecification",R,N,V_startPage
T@"NSDictionary",R,N,V_pagesByIdentifier
T@"_ICQAlertSpecification",&,N,V_startAlert
isDetailAppBannerOffer
encodeDouble:forKey:
requestedRemoteUIURL
decodeObjectOfClasses:forKey:
decodeDoubleForKey:
setRequestedRemoteUIURL:
setContext:
initWithServerDictionary:accountAltDSID:notificationID:retrievalDate:callbackInterval:bundleIdentifier:
context
_processICQURL:
componentsWithURL:resolvingAgainstBaseURL:
queryItems
arrayWithArray:
componentsWithString:
name
queryItemWithName:value:
addObjectsFromArray:
setQueryItems:
journeyLinkForId:
setLevel:
setBundleIdentifier:
appVersionId
bannerSpecification
setBannerSpecification:
buttonSpecification
setButtonSpecification:
setFollowupSpecification:
upgradeFlowSpecification
setUpgradeFlowSpecification:
XMLSpecification
setXMLSpecification:
deviceInfo
iTunesAccountExists
setITunesAccountExists:
_planDetailsOverride
_actionOverride
_iTunesAccountExists
_level
_bundleIdentifier
_appVersionId
_notificationID
_bannerSpecification
_buttonSpecification
_followupSpecification
_upgradeFlowSpecification
_XMLSpecification
_deviceInfo
_context
_requestedRemoteUIURL
Tq,N,V_level
T@"NSString",&,N,V_bundleIdentifier
T@"NSString",&,N,V_appVersionId
T@"NSString",&,N,V_accountAltDSID
T@"NSString",&,N,V_notificationID
T@"_ICQBannerSpecification",&,N,V_bannerSpecification
T@"_ICQButtonSpecification",&,N,V_buttonSpecification
T@"_ICQFollowupSpecification",&,N,V_followupSpecification
T@"_ICQUpgradeFlowSpecification",&,N,V_upgradeFlowSpecification
T@"_ICQXMLSpecification",&,N,V_XMLSpecification
T@"_ICQDeviceInfo",&,N,V_deviceInfo
T@"NSString",&,N,V_context
TB,N,V_iTunesAccountExists
T@"NSURL",&,N,V_requestedRemoteUIURL
Tq,R,N,V_offerType
T@"NSURL",R,N
buttonSpecificationSampleForLevel:
sampleOfferForLevel:
buttonLink
updateOfferWithPlanDetails:actionString:
storagePurchaseKeybagForButtonId:
alertSpecificationForAlertKey:
alertSpecificationAtIndex:
_updateRequestedRemoteUIURLWithURL:
T@"_ICQBannerSpecification",R,N
T@"_ICQButtonSpecification",R,N
T@"_ICQFollowupSpecification",R,N
T@"_ICQUpgradeFlowSpecification",R,N
T@"_ICQXMLSpecification",R,N
T@"_ICQDeviceInfo",&,N
T@"NSString",&,N
Tq,R,N
serverStubs
_chooseStubFromServerStubs:conditions:
buddyStubs
defaultStubs
premiumStubs
_initServerStubsFromServerDictionary
sortedArrayWithOptions:usingComparator:
_isValidServerStubs:key:
sortedServerStubs:
enumerateObjectsUsingBlock:
isSatisfiedByConditions:
chooseStubForConditions:
chooseBuddyStubForConditions:
chooseDefaultStubForConditions:
choosePremiumStubForConditions:
_serverStubs
_buddyStubs
_defaultStubs
_premiumStubs
T@"NSArray",R,N,V_serverStubs
T@"NSArray",R,N,V_buddyStubs
T@"NSArray",R,N,V_defaultStubs
T@"NSArray",R,N,V_premiumStubs
_chooseStubFromServerStubs:offerType:
bubbleDetails
appId
setAppId:
setBubbleDetails:
sheetDetails
setSheetDetails:
reportingDetails
setReportingDetails:
_appId
_bubbleDetails
_sheetDetails
_reportingDetails
T@"NSString",C,N,V_appId
T@"ICQOpportunityBubbleDetailsSpecification",&,N,V_bubbleDetails
T@"ICQOpportunitySheetDetailsSpecification",&,N,V_sheetDetails
T@"_ICQOpportunityBubbleReportingSpecification",&,N,V_reportingDetails
dictionaryWithCapacity:
messagesInfo
messageForKey:
setMessagesInfo:
_messagesInfo
T@"NSDictionary",&,N,V_messagesInfo
objectAtIndex:
linkForBundleIdentifier:
linkForBundleIdentifier
buttonFormat
textFormat
linkFormat
setLinkForBundleIdentifier:
_buttonLink
_buttonFormat
_textFormat
_linkFormat
_linkForBundleIdentifier
T@"NSString",R,N,V_buttonFormat
T@"ICQLink",R,N
T@"NSString",R,N,V_textFormat
T@"NSString",R,N,V_linkFormat
T@"NSDictionary",&,N,V_linkForBundleIdentifier
getBadgeAppFromServerDict:
setIsBadgeApp:
_ICQOpportunityBubbleSpecificationForServerDict:bundleId:
setOpportunityBubble:
_bundleStorageLevelFromServerDict:
setBundleQuotaInfo:
_commerceStorageLevelFromServerDict:
setCommerceQuotaInfo:
_hasFollowupEnabledFromServerDict:
setShouldStartOnDeviceJourney:
_remoteUIURLFromOfferContents
_parseQuotaInfo:
shouldShowOpportunityBubbleWithDisplayRuleResult:completion:
isBadgeApp
shouldStartOnDeviceJourney
dismissed
setDismissed:
_isBadgeApp
_shouldStartOnDeviceJourney
_dismissed
_opportunityBubble
_bundleQuotaInfo
_commerceQuotaInfo
TB,N,V_dismissed
TB,N,V_isBadgeApp
TB,N,V_shouldStartOnDeviceJourney
T@"ICQOpportunityBubbleSpecification",&,N,V_opportunityBubble
T@"NSNumber",&,N,V_bundleQuotaInfo
T@"NSNumber",&,N,V_commerceQuotaInfo
followupActionForLink:needsFlow:
noteActivateLink
noteTitle
noteMessage
altNoteMessage
noteClearLink
followupActionForLink:
setClearAction:
identifierPrefix
setExtensionIdentifier:
addNotifyingAppIdForItem:
isForAccountGroup
displayStyle
badgeApp
followupDisplayStyle
sfSymbolID
setBundleIconName:
sfSymbolBundlePath
setRepresentingBundlePath:
groupIdentifier
postFollowUpItem:completion:
clearPendingFollowUpItemsWithUniqueIdentifiers:completion:
setNoteTitle:
setNoteMessage:
setAltNoteMessage:
setNoteActivateLink:
notifyingAppId
postFollowupWithController:
setNoteClearLink:
setForAccountGroup:
setBadgeApp:
setFollowupDisplayStyle:
setSfSymbolID:
setSfSymbolBundlePath:
setNotifyingAppId:
setPremiumOffer:
_forAccountGroup
_badgeApp
_premiumOffer
_noteTitle
_noteMessage
_altNoteMessage
_noteActivateLink
_noteClearLink
_followupDisplayStyle
_sfSymbolID
_sfSymbolBundlePath
_notifyingAppId
TB,N,V_premiumOffer
T@"NSString",C,N,V_altMessage
T@"NSString",C,N,V_noteTitle
T@"NSString",C,N,V_noteMessage
T@"NSString",C,N,V_altNoteMessage
T@"ICQLink",&,N,V_noteActivateLink
T@"ICQLink",&,N,V_noteClearLink
forAccountGroup
TB,N,GisForAccountGroup,V_forAccountGroup
TB,N,V_badgeApp
Tq,N,V_followupDisplayStyle
T@"NSString",C,N,V_sfSymbolID
T@"NSString",C,N,V_sfSymbolBundlePath
T@"NSString",C,N,V_notifyingAppId
aa_addBasicAuthorizationHeaderWithAccount:preferUsingPassword:
ak_addClientInfoHeader
systemTimeZone
abbreviation
preferredLanguages
ak_addCountryHeader
_stringTimeOfLastBackup
addBasicAndCloudBackupHeadersToRequest:
getBackupDeviceUUID
allKeys
fetchValueAsynchronously
fetchValue
didUpdate
setFetchValue:
setValue:
_valueLock
_didUpdate
_fetchValue
_value
T@?,C,N,V_fetchValue
T@,&,N,V_value
T@?,C,N,V_didUpdate
setLockScreenInfo:
setFollowUpInfo:
setTitleTemplates:
setMesgTemplates:
setFollowupTitleTemplates:
setFollowupMesgTemplates:
mesgTemplates
mesgWithKey:
followupTitleTemplates
followupMesgTemplates
followUpInfo
_lockScreenInfo
_followUpInfo
_mesgTemplates
_followupMesgTemplates
_followupTitleTemplates
T@"NSDictionary",&,N,V_lockScreenInfo
T@"NSDictionary",&,N,V_followUpInfo
T@"NSDictionary",&,N,V_mesgTemplates
T@"NSDictionary",&,N,V_titleTemplates
T@"NSDictionary",&,N,V_followupMesgTemplates
T@"NSDictionary",&,N,V_followupTitleTemplates
rangeOfString:options:range:
substringWithRange:
componentsSeparatedByString:
_initSubclassFromServerDictionary
internalAlertSpecification
setInternalAlertSpecification:
internalFollowupSpecification
setInternalFollowupSpecification:
_internalAlertSpecification
_internalFollowupSpecification
T@"_ICQAlertSpecification",&,N,V_internalAlertSpecification
T@"_ICQFollowupSpecification",&,N,V_internalFollowupSpecification
T@"NSString",C,N,V_offerId
stringFromByteCount:countStyle:
substitutionForPlaceholderKey:outIsBelowMin:
substitutionsForPlaceholderKeys:checkIfBelowMin:outIsMissingSubstitution:
placeholderExistsInString:
placeholderKeysInString:fromKeys:
stringWithPlaceholderFormat:substitutions:
substitutionsForPlaceholderKeys:
stringWithPlaceholderFormat:
T@"_ICQAlertSpecification",R,N
initWithObjectsAndKeys:
deviceTotalUsedSpaceInBytes
entryMethod
deepLinkURL
_backupAllowed
_needsTemporaryStorage
_deviceTotalUsedSpaceInBytes
_entryMethod
_deepLinkURL
_daysUntilExpiration
T@"NSNumber",R,C,N,V_deviceTotalUsedSpaceInBytes
Tq,R,N,V_entryMethod
T@"NSString",R,C,N,V_deepLinkURL
backupAllowed
TB,R,N,GisBackupAllowed,V_backupAllowed
TB,R,N,V_needsTemporaryStorage
T@"NSNumber",R,N,V_daysUntilExpiration
@16@0:8
@24@0:8@16
@24@0:8q16
v32@0:8@16q24
v36@0:8@16q24B32
v32@0:8@16Q24
v24@0:8@16
B16@0:8
v20@0:8B16
q16@0:8
v24@0:8q16
v16@0:8
@"NSDictionary"
@"NSString"
@"NSMutableDictionary"
@32@0:8@16@24
@"NSArray"
@"ICQLink"
v28@0:8B16@20
B24@0:8@16
B32@0:8@16@24
q36@0:8@16@24B32
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8@16@24@32
@"ICQOffer"
@"NSData"
@72@0:8@16@24@32@40@48@56^@64
@"ACAccount"
@"NSDate"
v24@0:8@?16
v40@0:8@16@24@32
@40@0:8@16@24^@32
@24@0:8^@16
@"NSObject<OS_dispatch_queue>"
@"NSURLSession"
@"NSURLSessionTask"
@"NSURL"
@"NSError"
v56@0:8@16@24@32@40@?48
v72@0:8@16@24@32q40@48@56@?64
v56@0:8@16@24q32@40@?48
v48@0:8@16@24@32@?40
@40@0:8@16q24@32
@48@0:8@16q24q32@40
B40@0:8q16@24q32
@32@0:8@16q24
v32@0:8@16@24
B24@0:8q16
#16@0:8
@"ICQDaemonOfferConditions"
v32@0:8@16@?24
v40@0:8@16@24@?32
v32@0:8q16@24
@"NSTimer"
@72@0:8@16@24q32@40@48@56^@64
@24@0:8@?16
@?32@0:8@16@24
#32@0:8@16@24
v36@0:8@16B24@?28
v36@0:8@16@24B32
v28@0:8B16@?20
Q16@0:8
v48@0:8@16q24@32@?40
v40@0:8@16q24@?32
B32@0:8q16@24
v72@0:8@16@24@32@40@48@56@?64
v64@0:8@16@24@32@40@48@?56
v44@0:8@16B24@28@?36
@40@0:8@16B24B28@32
v52@0:8@16B24@28@?36@?44
v60@0:8@16B24@28@36@?44@?52
@32@0:8q16@24
v28@0:8@16B24
@"FLFollowUpController"
@"_ICQAccountManager"
B24@0:8@?16
@"NSLock"
^{__CFUserNotification=}
@"NSObject<OS_dispatch_semaphore>"
@"ICQDaemonOffer"
v24@0:8Q16
d16@0:8
d24@0:8@16
v24@0:8d16
@20@0:8B16
@"ACAccountStore"
@32@0:8Q16Q24
v40@0:8q16@24@32
@"_ICQOpportunityBubbleImageDetails"
@"ICQRemoteContext"
@24@0:8^{_NSZone=}16
@"NSNumber"
@"_ICQPageSpecification"
@"_ICQAlertSpecification"
@"_ICQBannerSpecification"
@"_ICQButtonSpecification"
@"_ICQFollowupSpecification"
@"_ICQUpgradeFlowSpecification"
@"_ICQXMLSpecification"
@"_ICQDeviceInfo"
@64@0:8@16@24@32@40d48@56
@24@0:8Q16
@"ICQOpportunityBubbleDetailsSpecification"
@"ICQOpportunitySheetDetailsSpecification"
@"_ICQOpportunityBubbleReportingSpecification"
@"ICQOpportunityBubbleSpecification"
@28@0:8@16B24
@32@0:8@16@?24
@?16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@32@0:8@16^B24
@36@0:8@16B24^B28
@88@0:8@16@24@32q40@48@56@64@72^@80
@(#)PROGRAM:iCloudQuota  PROJECT:iCloudQuota-1
69<?B
!$'*-0369<
alertInfo
title
mesg
altMesg
hideOnLock
actions
Actions
btnDefault
BtnDefault
btnAction
BtnAction
CHANGE_STORAGE_PLAN
MANAGE_STORAGE
openURL
URLQueryParameters
ServerLinkId
ICQActionNone
ICQActionDismiss
ICQActionRejectOffer
ICQActionPresentPurchaseFlow
ICQActionPresentManageStorage
ICQActionPurchaseBuy
ICQActionPurchaseComplete
ICQActionOpenURL
ICQActionCancel
ICQActionShowInlineAlert
ICQActionOpenPaymentUpdate
ICQActionOpenCloudBackup
ICQActionCloudUpgrade
ICQActionPhotosOptimize
ICQActionPhotosCloudEnable
ICQActionPhotosCloudUpgradeEnable
ICQActionFamilySetup
ICQActionLaunchRemoteUI
ICQActionLaunchJITAppKitUI
ICQActionLaunchAMSDynamicUI
ICQActionCloudUpgradeOslo
ICQActionPhotosCloudUpgradeEnableOslo
ICQActionHTTPCall
ICQActionHTTPGETCall
v8@?0
header
altHeader
footer
actionBtn
buyBtn
doneBtn
actionBtn2
notNowBtn
learnMore
%@: title:%@ message:%@ purchase:%@ purchase2:%@ bottom:%@ fine:%@
appId
icloudApps
com.apple.cloud.quota
ICQEnableUnifiedMessaging
_ICQEnableServerMocking
com.apple.icq
com.apple.iCloudQuotaDaemon.ICQFollowupRegular
com.apple.iCloudQuotaDaemon.ICQFollowupPremium
com.apple.iCloudQuotaDaemon.ICQFollowup
com.apple.iCloudQuotaDaemon.StorageManagement.followup
com.apple.Dataclass.Quota
ICQDaemonOfferChangedDueToPushDarwinNotificationRegular
ICQDaemonOfferChangedDueToPushDarwinNotificationPremium
ICQDaemonOfferChangedDueToPushDarwinNotificationDefault
default
format
premium
buddy
regular
fetching all offers
com.apple.RemoteiCloudQuotaUI
offer
flowOptions
preloadedRemoteUIData
contextData
deviceBackupUdid
newExpirationDate
extensionAllowed
_ICQCachedPremiumOfferInternal
offerType
type
PremiumJourneys
Storage Upgraded
You now have 50 GB of total storage.
iCloud will continue to backup your iPhone and keep your photos, documents, contacts and more up to date across all your devices.
[ENG: LOCAL SAMPLE UI]
Done
application/json
text/plain
POST
Content-Type
Timed out
Bad URL
Network failure
Unknown URL request errro
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
Upgrade your storage soon to keep these photos and videos up to date in your iCloud Photo Library. %@
[ENG: LOCAL SAMPLE UI]
Upgrade%CStorage%C>
Upgrade your storage to keep these photos and videos up to date in your iCloud Photo Library. %@
[ENG: LOCAL SAMPLE UI]
_ICQMegaBackupErrorDomain
quotaBackupCheckURL
quotaBackupUpdateStatusURL
quotaBackupExtensionURL
v32@?0q8@"NSNumber"16@"NSError"24
v24@?0@"_ICQMegaBackupEligibilityRequest"8@"NSError"16
v24@?0@"_ICQMegaBackupUpdateStatusRequest"8@"NSError"16
v24@?0@"_ICQMegaBackupExtendExpirationRequest"8@"NSError"16
_ICQCachedDefaultOfferInternal
isDefaultOffer
en_US_POSIX
yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'
prefs:root=APPLE_ACCOUNT&aaaction=setupFamily&clientAppContext=iCloudStorage
prefs:root=APPLE_ACCOUNT&path=ICLOUD_SERVICE/BACKUP
prefs:root=APPLE_ACCOUNT&path=ICLOUD_SERVICE/STORAGE_AND_BACKUP/MANAGE_STORAGE
prefs:root=APPLE_ACCOUNT&path=PAYMENT_AND_SHIPPING/PRIMARY_PAYMENT
prefs:root=APPLE_ACCOUNT&path=ICLOUD_SERVICE/STORAGE_AND_BACKUP/STORAGE_UPGRADE
prefs:root=APPLE_ACCOUNT&path=ICLOUD_SERVICE/STORAGE_AND_BACKUP/MANAGE_STORAGE/CHANGE_STORAGE_PLAN
prefs:root=ROOT
ICQFetchOfferURLSession
application/x-plist
application/x-buddyml
Accept
%@: "%@" options:%@ action:%@ parameters:%@
placeHolderExists
bannerFooter
params
bannerFooter.params
mesg.params
actParams.openUrl
Add iCloud Storage
You are using 4.6 GB of your 5 GB iCloud storage. Add more storage to keep using iCloud Photo Library, iCloud Mail, and Backup.
Manage Storage
Not Now
iCloud Storage is Full
iCloud Photo Library, iCloud Mail, and Backup are no longer updating. Add more storage to keep using iCloud.
[ENG: LOCAL SAMPLE UI]
btnActParams
buyQueryParam
&autoSelectPlan=true&minReqdSize=1000000
btnId
upgrade
btnTitle
Upgrade Storage
DISMISS_ALERT
cancelled
alertAckAction
action
quotaAckEventURL
dataClass
Quota
SAMPLE ALERT: Upgrade your storage to keep using iCloud Mail, iCloud Drive, and Backup.
iCloud Storage is Almost Full
offerId
criteria
ICQCurrentOfferChangedNotification
ICQCurrentPremiumOfferChangedNotification
com.apple.icloud.quota.cached.offer
v24@?0@"ICQOffer"8@"NSError"16
v12@?0B8
v24@?0@"ICQPremiumOffer"8@"NSError"16
com.apple.mobileslideshow
v24@?0@"_ICQDeviceInfo"8@"NSError"16
com.apple.purplebuddy
CFBundleShortVersionString
YASE
NERP
status
start
expirationDate
com.apple.iCloud.FollowUp
v16@?0@"NSError"8
quotaUpdateOfferURL
dsid
true
directAction
update offer
bundleIdentifier
contextDictionary
Unknown
PushTeardown
Reboot
Login
icqctl
CacheDelete
HeartBeat
FallBelowVeryLowDisk
FallBelowLowDisk
FallBelowNearLowDisk
RiseAboveLowDisk
RiseAboveDesiredDisk
ICPLStateChanged
PhotosOptimizeStateChanged
ReasonAccountUpdate
RegistrationHeartbeat
DeviceNameChange
DevicePairing
NewPushToken
event
hardwareId
CKHardwareID
dsId
notificationId
debugAlert
alert
dismiss
teardown
_ICQSimulatedDeviceStorageAlmostFull
_ICQShouldDirectToStorageManagement
_ICQSimulatedPhotosLibrarySize
_ICQUseFetchOffersDataDirectly
_ICQBuddyOfferEnable
_ICQLegacyDeviceStorageLevelNotification
_ICQOfferSource
server-sample
local-sample
_ICQEnableServerPremiumOffers
_ICQAddFetchOffersHeaders
quotaFetchOffersURL
buddy:quotaFetchOffersURL
quotaRefreshOfferDetailsURL
com.apple.icloud.quota
context dictionary response is missing device offers
v24@?0@"NSDictionary"8@"NSError"16
v24@?0@"ICQDaemonOffer"8@"NSError"16
@"ICQDaemonOfferStub"16@?0@"ICQDaemonOfferStubs"8
-[ICQDaemonOfferManager renewCredentialsWithCompletion:]
DEVICE_FULL_FOLLOWUP_MANAGE_STORAGE_BUTTON_TITLE
Localizable
prefs:root=General&path=STORAGE_MGMT
DEVICE_FULL_FOLLOWUP_LEARN_MORE_BUTTON_TITLE
https://support.apple.com/HT206504
DEVICE_FULL_ALERT_TITLE
DEVICE_FULL_ALERT_MESSAGE
DEVICE_FULL_ALERT_ACTIVATE_BUTTON_TITLE
com.apple.iCloudQuota.StorageManagement.followup
DEVICE_FULL_FOLLOWUP_TITLE
DEVICE_FULL_FOLLOWUP_MESSAGE
v20@?0B8@"NSError"12
v24@?0@"ICQDaemonOfferStubs"8@"NSError"16
v16@?0@"NSString"8
unable to get URL for account:%@ quotaKey:%@
quota_alert
ck_hw_id
reason
X-Apple-All-Device-Offers
X-Apple-InvoiceEvent-Simulate
AlmostFull
X-Apple-QuotaEvent-Simulate
X-Apple-Storage-Has-SubscriptionOffer
X-Apple-Storage-Include-BuddyOffer
X-Apple-Storage-Include-BackupOffer
X-Apple-Itunes-DSID
useWlanTerm
unable to convert post dict to JSON
fetch offer
x-apple-opt-in-flow
v32@?0@8@16^B24
_ICQ_MOCK_FETCH_OFFER
_ICQ_MOCK_%@
quotaInfo
totalQuota
total_quota
buddy 
v24@?0q8@"NSDictionary"16
-[ICQDaemonOfferManager _postDaemonOfferChangedDueToPushDarwinNotificationRequestType:]
and notify
v16@?0@?<v@?@>8
com.apple.ind
com.apple.backup.ios
v24@?0@"NSString"8@"NSError"16
v16@?0@"ICQDaemonOffer"8
malformed daemon offer stubs
B24@?0@8@"NSDictionary"16
lockTitle
lockMessage
actParams
display
OOBE_EXPIRED
GSDeviceName
_SIMULATOR
%@_%@
wapi
CKContainer
Unable to find class %s
/System/Library/PrivateFrameworks/CloudKit.framework/CloudKit
/System/Library/PrivateFrameworks/CloudKit.framework/Contents/MacOS/CloudKit
ICQDaemonAlertLock
ICQDaemonAlertQueue
 (but not on lock screen)
com.apple.springboard
_ICQMockPhotoCount
_ICQMockVideoCount
v24@?0@"PLiCPLTransferProgress"8@"NSError"16
ICQOfferTypeUnknown
ICQOfferTypeCloudStorageUpgrade
ICQOfferTypePhotosOptimizeEnable
ICQOfferTypePhotosCloudEnable
ICQOfferTypePhotosCloudUpgradeEnable
ICQOfferTypeUpdateBillingInfo
ICQOfferTypeBuddyCloudStorageUpgrade
ICQOfferTypeBuddyPhotosCloudUpgradeEnable
ICQOfferTypePremiumJourneys
UpgradeStorage
OptimizeICPL
EnableICPL
UpgradeEnableICPL
Invoice
buddyUpgradeDrive
buddyUpgradeWithICPL
retrievalDate
callbackInterval
altDSID
serverDict
failedToFetchFromServer
failureDetails
ICQDaemonOfferPersistedNotificationName
ErrorDomain
ErrorCode
ErrorDescription
None
invalid
totalAvailable
ICQUpgradeComplete
Insufficient
Full
Device
Billing
UpgradeOffer
UpgradeComplete
UpgradeSuccessWiFi
UpgradeFailure
UpgradeFailureNetwork
upgradeInfo
actionInfo
postUpgradeInfo
successInfo
failureInfo
network
wifi
needsWifi
offerInfo
deviceOffers
needsUpgrade
followUpEnabled
hasUIFlow
appBannerInfo
iPhone storage is almost full. Free up space by using iCloud Photo Library. %@
Learn More >
ENABLE_ICPL
RW5hYmxlSUNQTA==
sbAlertEnabled
Use iCloud Photo Library
enableICPLAction
More Space, for More Photos
backBtn
Cancel
cancelEnableICPLAction
CANCEL_AND_CLOSE_ACTION
Free up space and take more photos by using iCloud Photo Library.
Your photos and videos will be safely stored in iCloud, and only smaller versions will be kept on your iPhone.
Uploads to and downloads from iCloud Photo Library will require an Internet connection.
exitCloseAction
EXIT_AND_CLOSE_ACTION
iCloud Photo Library has been turned on
Your photos and videos will start uploading when you're connected to Wi-Fi
Try Later
errorCloseAction
Unble to enable iCloud Photo Library
We were not able to enable iCloud Photo Library
priority
followUpInfo
iPhone Storage Almost Full
settingsTitle
Free up space and take more photos by using iCloud Photo Library. Your photos and videos will be safely stored in iCloud, and only smaller versions will be kept on your iPhone.
Use iCloud Photo Libary
dlUpgrade
DISMISS_AND_CLOSE_ACTION
dlCancel
iCPLEnabled
minPhotoLibraryInBytes
deviceStorageAlmostFull
maxPhotoLibraryInBytes
Get more storage, and keep all your photos safely stored in iCloud
With 50 GB of iCloud storage and iCloud Photo Library, you can keep all your photos and videos safely stored in iCloud and free up space on your iPhone too.
UPGRADE_ENABLE_ICPL
planDetails
productType
Software
pricingParameters
STDQ
salableAdamId
916860110
prsId
price
planSize
appleId
sj_ic3_15@icloud.com
pricePerYear
$0.99 per month.
totalStorage
iPhone storage is almost full. Get more storage, and keep all your photos safely stored in iCloud. %@
VXBncmFkZUVuYWJsZUlDUEw=
Buy 50 GB for $0.99/mo.
buyEnableICPLAction
cancelCloseAction
You will be charged $0.99 right now and each month. You can cancel at any time. Contact Apple within 15 days for a refund. Partial refunds are available where required.
You now have 50GB of total iCloud storage
3068
iCloud Photo Library Will Be Updated
warnCloseAction
More Space Will be available for More Photos
You can start taking more photos shortly by using iCloud Photo Library
Unable to upgrade and enable iCloud Photo Library
Unable to free up space to take more photos
iPhone storage is almost full. Free up space by using original photos in iCloud only. %@
Optimize Now >
SHOW_INLINE_ALERT
alertKey
optimizeICPL
T3B0aW1pemVJQ1BM
inlineAlertInfo
Optimize iPhone Storage
Free up space by keeping your original photos in iCloud, and smaller versions on you iPhone
Optimize
ENABLE_OPTIMIZE_ICPL
optimize
cancel
Free up space by keeping your original photos in iCloud only
Free up space on your iPhone by keeping your original photos and videos in iCloud only
buddyOffers
YnVkZHlVcGdyYWRlV2l0aElDUEw=
With 50 GB of iCloud storage, you can keep all your photos and videos safely in iCloud Photo Library and free up space on your iPhone.
< Back
backCloseAction
buddyBuyEnableICPLAction
Continue
iCloud Photo Library is on
iCloud Photo Library Will Be Enabled
You will have 50 GB of total iCloud storage
Unable to enable iCloud Photo Library
Failed to enable iCloud Photo Library
YnVkZHlVcGdyYWRlRHJpdmU=
Your iPhone has been backing up in iCloud each night but your iCloud storage is now almost full.
With 50 GB of iCloud storage, all your important things like photos, videos, documents and apps can keep backing up automatically.
Keep your iPhone backed up
com.apple.iCloudDriveApp
buyId
iCloud Storage Upgraded
You now have 50 GB of total iCloud storage
iCloud Storage Will Be Upgraded
Unable to upgrade iCloud Storage
Failed to upgrade iCloud Storage
totalUsed
rulesForDisplay
delegateDecision
alwaysShow
onDismiss
UNIFIED_MESSAGING
%$PhotosCount
%$VideosCount
%$TotalPhotosVideosCount
v24@?0@"_ICQPhotosInfo"8@"NSError"16
eventType
bundleId
newiCloudStoragePlan
newAppleOneStoragePlan
com.apple.iCloudQuotaUI
iCloudQuotaUI
photosLibraryFooter
homeDashboardHeader
v24@?0@"AMSEngagementMessageEventResponse"8@"NSError"16
opportunityBubbleDetails
message
imageDetails
LAUNCH_REMOTE_UI
openUrl
HTTP_CALL
iCloudQuota:dismissal
iCloudQuota:impression
iCloudQuota:storage-level-changed
iCloudQuota:none
com.apple.Home
ICQRemoteViewController
/private/var
CACHE_DELETE_VOLUME
CACHE_DELETE_ERROR
CACHE_DELETE_AMOUNT
v24@?0@"NSNumber"8@"NSError"16
v16@?0@"NSDictionary"8
PLIsCPLDataclassEnabled
/System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
/System/Library/PrivateFrameworks/PhotoLibraryServices.framework/Contents/MacOS/PhotoLibraryServices
PLCPLHasBeenEnabledForCurrentAccount
PLCloudPhotoLibraryKeepOriginalsIsEnabled
PLPhotoLibrary
PLGatekeeperClient
/System/Library/PrivateFrameworks/PhotoLibraryServicesCore.framework/PhotoLibraryServicesCore
/System/Library/PrivateFrameworks/PhotoLibraryServicesCore.framework/Contents/MacOS/PhotoLibraryServicesCore
replacementStrings
com.apple.quota.photoLibrary
placeholderKey
%@: %@
<%@: %@: %@>
Upgrade your iCloud Storage
Add more storage to continue using iCloud and keep the most important things on your iPhone safe.
Buy 50 GB for $0.99%C/%Cmo
Learn about managing storage
http://www.apple.com/icloud/
You will be charged $0.99 right now and each month. You can cancel at any time. Contact Apple within 15 days for a refund. Partial refunds are available where required. See %@.
Terms & Conditions
https://www.apple.com/legal/internet-services/icloud/en/terms.html
accountAltDSID
notificationID
appVersionId
context
requestedRemoteUIURL
journeyLinks
settingsPrivateNetwork
__WILDCARD__
com.apple.icloud.docs
com.apple.icloud.drive
clientContext
Offer server dictionary: %@
placeHolderInfo
iTunesAccountExists
planDetailsByBtnId
detailAppBannerInfo
universalLinkInfo
appContextInfo
_ICQCachedOfferStubsInternal
q24@?0@8@16
defaultOffers
premiumOffers
v32@?0@8Q16^B24
opportunitySheetDetails
unlimited
detailedFormat
badgeApp
opportunityBubble
bundleQuotaInBytes
commerceQuotaInBytes
opportunitySheet
com.apple.mobilemail
com.apple.icloud.quota.ICQ-Adopt
fail
optimizeEnabled
com.apple.iCloudQuota.ICQFollowup
_ICQLegacyQuotaFollowupCleanup.2
notifyingAppId
isPremiumOffer
ICQLinkAction
ICQLinkParameters
success
failure: 
altMessage
lockMesg
altLockMesg
altLockMessage
enableDirectAction
X-MMe-Timezone
Accept-Language
UniqueDeviceID
X-Mme-Device-Id
X-Apple-Cloud-Bkp-Id
X-Apple-Cloud-Bkp-Time
X-Client-Backup-UUID
false
com.apple.iCloudQuota
core
core.signpost
notificationInfo
showAlert
showBanner
container
appContextInfo: appId:%@ offerInfo: 
app-independent offerInfo: 
planDetails: 
quotaInfo: 
got response
no response
missing
v16@?0@8
lockScreenInfo
ICQUpdateOfferKeyIsZeroAction
isBuddyOffer
isForFetchOffers
FALSE
TRUE
OPEN_EXT_LINK
UPGRADE_ICLOUD_STORAGE
OPEN_FAMILY_SETUP
OPEN_PAYMENT_UPDATE
OPEN_ICLOUD_BACKUP
DISP_STORAGE_UPGRADE
UPGRADE_ICLOUD_STORAGE_OSLO
UPGRADE_ENABLE_ICPL_OSLO
LAUNCH_JITAPP_UI
LAUNCH_AMS_DYNAMIC_UI
buyQueryParams
linkURL
link
BtnTitle
BtnActParams
BtnId
btnVisible
com.apple.cloud.mail
com.apple.cloud.docs
com.apple.cloud.photos
com.apple.__mobilebackup__
com.apple.cloud.backup
_ICQCachedBuddyOfferInternal
_ICQCachedOfferInternal
PhotoLibrarySize
PhotoLibraryUploadSize
PhotosVideosCount
%@%@
followupInfo
displayStyle
INLINE_EXPANDED
sfSymbolId
sfSymbolBundlePath
deviceTotalUsedSpace
entryMethodType
entryMethodURL
backupStatus
needsTemporaryStorage
durationInDays
ALLOWED
NOT_ALLOWED
no alertInfo provided
alertInfo: expected NSDictionary, got %@
_ICQActionFromString - illegal action %@
defaults key %@ is not of correct type
Invalid string
Caught error (%@) deserializing context data (%@)
Successfully formed context: %@
Caught error (%@) serializing ICQRemoteContext
ICQRemoteContext %@ encoded successfully
Failed to get anisette data: %@
Creating premium offer placeholder
Received response %@ Status Code: %{public}lu (%{public}lu bytes): %@
Response %@ headers: %{public}@
Received error for request: %{public}@
Malormed JSON
Non-dict JSON
Received text response from %@: "%{public}@"
Received large text response from %@ (%{public}lu bytes)
Unexpected response format with Content-Type "%{public}@"
Received status code response: %{public}ld
Invalid request body
Sending request %@ %@ (%{public}lu body bytes)
No URL in bag for quotaBackupCheckURL
Failed to create eligibility request: %{public}@
Body JSON for _ICQMegaBackupEligibilityRequest: %{public}@
Calling completion for request %@ with error: %{public}@
missing quotaBackupCheckURL for account %@
invalid URL string %@ for quotaBackupCheckURL account %@
No URL in bag for updateMegaBackupStatusURL
Failed to create update status request: %{public}@
Calling completion for request %{public}@ with error: %{public}@
Received new expiration date %{public}@
missing updateStatusURL for account %@
Invalid URL string for update status: %@, account %@
No URL in bag for extendExpirationDateURL
Failed to create extend expiration date request: %{public}@
Server says extended expiration date is allowed (%{public}@) and updated expiration date is %{public}@
missing extendExpirationURL for account: %@
Invalid URL string for extend expiration: %@, account %@
attempt to open URL %@ of class %@
link - presenting purchase flow in Settings
link - presenting manage storage in Settings
link - presenting family setup in Settings
link - offer rejected
link - opening URL %@
ICQLink: performAction: %@ not handled since it requires context
ICQLink: performAction: %@ not handled
HTTP Call - server call to URL %@
Error making HTTP call to url: %@
Could not convert message body to JSON. Error: %@
Body: %@
invalid banner spec server message:%@
Received incorrect class %@ when requesting currentPremiumOffer for bundle ID %@
Offer received was nil when requesting currentPremiumOffer for bundle ID %@
Requested a premium offer with an opportunity bubble.
Returning premium offer %@, opportunity bubble %@, error %@
Failed to fetch offer. Error: %@
options: %@
GetOffer
SIGNPOST BEGIN [id: %hu]: GetOffer options: %@
%@ %@
SIGNPOST END   [id: %hu]: (%.4fs) GetOffer %@ %@
Returned offer doesn't match the requested offer type. Requested options: %@
Returning cached offer %@
registering for darwin notification %@
unregistering for darwin notification %@
push received -- refetching offer type %@
offer expired -- refetching
Premium offer expired -- refetching
mini-buddy might need to run: %@
received push received darwin notification %@
darwin notification %@ is not handled
ICQUserNotifications: got URL: %@
performOfferUpdateWithContext:%@ - %@ zeroAction:%d account:%@
update offer - failed to create request to URL %@
update offer request: %@ headers: %@ body: %@ body (as string): %@
context dictionary response is missing device offers
error %@ fetching offers with context dictionary %{public}@ resulting in serverDict %@
Did not find a persisted daemon offer of class %{public}@
Skipping persisted daemon offer of class %{public}@ because it expired: daemon offer retrieval date %@, callback interval: %f
Returning persisted daemon offer of class %@
Skipping persisted daemon offer of class %{public}@ due to account mismatch: daemon offer account alt dsid: %@, account alt dsid: %@. Persisted offer was %@
teardown offers related to primary account %@ due to user logout
teardown for non-primary account %@ - ignoring
%s - Renewing credentials
Error posting Storage Management followup %{public}@; error: %{public}@
Posted Storage Management followup %{public}@
Error clearing Storage Management followup; error: %{public}@
Cleared Storage Management followup
Reconsidering local offers
Unable to get offer stubs; error: %@
Offer is no longer valid, removing CFU.
Offer is valid, posting CFU
Clearing all followups
Failed to clear followups with error %{public}@
SIGNPOST BEGIN [id: %hu]: FetchOffers 
FetchOffers
SIGNPOST END   [id: %hu]: (%.4fs) FetchOffers 
using cached offer stubs - expires %@
Invalid cache while reconsidering offers locally
PushNotification
SIGNPOST EVENT [id: %hu] PushNotification 
_processPushNotificationDictionary: %@
push notification with bad event %@
ignoring push (CKHardwareID:%@ does not match local CKHardwareID:%@)
push targeted to this device only with CKHardwareID:%@
push notification with bad dsid of class %@
dsid mismatch: ignoring
handling push event %@
push notification with bad notificationId %@
push event (alert)
flushed stubs; fetching offer for notificationID %@
showing alert
skipping alert
fetch error %@
push event (%{public}@)
reconsidered offers success:%d error:%{public}@
push notification with unexpected event %@ (ignored)
_fetchDictionaryForAccount:%@ quotaKey:%@ quotaReason:%@ stub:%@ notificationID:%@ contextDictionary:%@
fetchOffer(s) with postDict %@
request: %@ headers: %@ body: %@ body (as string): %@
sending request for latest offer
error parsing fetched offer: %@
Mocking the server response
Mocking Not Supported in case of both stub and notification id are nil
Mocking Not Supported for %@
getting mock server dict from %@
error parsing mock offer: %@
mockServerDict = %@
Quota for %@ changed from %@ to %@; updating last known quota
Updated account quota information with success: %@, error: %@
WARNING: both stub and notificationID are nil -- attempting blind refresh
RefreshOfferDetails
SIGNPOST BEGIN [id: %hu]: RefreshOfferDetails 
Fetched offerId (%@) does not match requested offerId (%@)
missing buddyOffer flag after refresh offer details
Fetched buddy daemon offer
Fetched premium daemon offer
Fetched default daemon offer
Fetched regular daemon offer
Finished persisting %{public}@ offer; expires on %@
error %{public}@ occurred fetching %{public}@offer -- persisting placeholder
SIGNPOST END   [id: %hu]: (%.4fs) RefreshOfferDetails %@
Finished persisting placeholder %{public}@ offer; expires on %@
fetched local sample offer
Finished persisting local offer stubs; expires on %@
Unable to get local offer stubs; dropping through to server stubs
Fetching offer stubs - calling %@
fetched offers:
Finished persisting offer stubs; expires on %@
error %{public}@ occurred fetching offer stubs -- persisting placeholder
Finished persisting placeholder stubs; expires on %@
showing alert for daemonOffer %@
Skipping alert from daemon offer level %@ alertSpecification %@
Showing alert from daemon with offer level %@ alertSpecification %@
Daemon alert completed with action %@ parameters %@
no buttonId, skipping teardown ack
Invalid type %ld passed to %s. Must post darwin notifications for individual offer types.
posting push received darwin notification: %@
DarwinNotification
SIGNPOST EVENT [id: %hu] DarwinNotification %@
regular daemon offer / alerts / followups were torn down without replacement; notifying clients
regular daemon offer / alerts / followups were torn down but will be replaced; not notifying clients until then
default daemon offer torn down without replacement; notifying clients
default daemon offer torn down but will be replaced; not notifying clients until then
premium daemon offer / followups were torn down without replacement; notifying clients
premium daemon offer / alerts / followups were torn down but will be replaced; not notifying clients until then
TeardownAllOffers
SIGNPOST EVENT [id: %hu] TeardownAllOffers %@
Fetching CloudKit backup container device id...
Error fetching CloudKit backup container device id: %{public}@
Fetched CloudKit backup container device id: %@
Reconsidering offers with options %@
ReconsiderOffers
SIGNPOST BEGIN [id: %hu]: ReconsiderOffers %@
SIGNPOST END   [id: %hu]: (%.4fs) ReconsiderOffers 
Error: Unable to create offer stubs from dict %@
Persisting placeholder & clearing any existing followups
Choice handler block returned stub %@
Missing offer id in stub %@
Default offer is missing from fetchOffers response! Something went wrong
No stub matched for %@ offer -- persisting placeholder
Choosing all available stubs
ChooseBuddyStub returned stub %@
Chose premium stub %@
Chose default stub %@
Chose regular stub %@
Adding regular offer stub %@
Adding premium offer stub %@
Adding default offer stub %@
Unexpected error %@
Error: Unexpected nil daemonOffer
Error: Requested buddy offer but got non-buddy offer!
Error: Requested offer but got buddy offer!
there's no follow up info but lock screen info ... attempting to post a user notification
error %{public}@ posting followup
posted followup for offer type: %@
posting user notification, title:%@, message:%@, url:%@
failed to post user notificaiton: %@
Invalid scale %ld
attempt to create alert with nil daemonOffer
attempt to create alert for invalid daemonOffer %@
alert already shown; skipping
alert not shown: no alert specification
showing alert for daemonOffer%@
dismissing alert for daemonOffer %@
alert not showing; skipping dismiss
waiting for alert %@ to dismiss
finished waiting for alert %@ to dismiss
remember alert for notification %@
dismissing old alert for notification %@
forget alert for notification %@
Could not find alert for notification %@, dismissing unlabeled alert
dismissing alert for notification %@
Could not find alert for notification %@
dismissing all alerts
Photos transfer progress %@
Photos transfer error %@
_ICQOfferTypeForString - illegal offer type %@
_ICQOfferTypeForServerString - illegal server offer type %@
Clearing persisted object for %{public}@
Persisting %{public}@ using key %@ at location %@
bad retrieval date %@
bad callbackInterval %@
persisted offer missing server dict
bad server dict %@
validated persistence dictionary
persistence dictionary is invalid: %@
returning failure dictionary: %{public}@
persisted offer(s) bad %@: %@
no upgrade success page available
no upgrade failure page available
missing wireless network success page, falling back on generic
missing network failure page, falling back on generic
missing page spec for error: %@
missing upgradeInfo and actionInfo
missing postUpgradeInfo and successInfo
missing failureInfo
missing network failure page (might not be needed)
missing wifi failure page (might not be needed)
GUARD_OBJECT_CLASS: expected %s, got %@
device Info = %@
error = %@
Sending AMSMetricEvent for %@
Sending AMS metricEvent to start on-device journey with bundleID %@
Enqueued metricEvent to AMSEngagement: %@
Enqueueing a messageEvent to amsengagementd to determine if we should show OpportunityBubble.
Received error from amsngagementd %@
Received response from amsngagementd.
AMSEngagementMessageRequests: %@
ICQTileView should be shown.
ICQTileView shouldn't be shown.
Enqueued metricEvent from AMSEngagementMessageRequest to AMSEngagement: %@
Enqueueing a messageEvent to amsengagementd to pull bubble content from Mercury.
Received response from amsngagementd for bubble content.
AMSEngagementMessageRequests for bubble content: %@
Enqueued metricEvent from AMSDialogRequest to AMSEngagement after pulling for bubble content: %@
Enqueueing a messageEvent to amsengagementd to send impression event.
Enqueued metricEvent from AMSDialogRequest to AMSEngagement: %@
Requesting current storage level
Current iCloudStorageLevel: %@ appleOneStorageLevel %@
No premium offer return with error: %@
Missing message property %@ in opportunityBubble: %@
Malformed actions property in opportunityBubble: %@
Missing title from server action dictionary %@
Unable to get user volume status
Found %{public}llu bytes of free space
Failed to get purgable space from Cache Delete: %@
Found %{public}llu bytes of purgeable space
user volume is eating into the reserve -- too low for offers
photosLibrarySize took %@ seconds
photosLibraryUploadSize took %@ seconds
photosVideosCount took %@ seconds
Unable to look up placeholder for key %@, becuase it is too short
placeholderDict = %@
No placeholder info found for %@ in offer
placeHolderDict is missing 'appID'
key = %@  wordsToReplace = %@
%{public}@ subclass must implement %{public}@
warning: missing appBannerInfo that could be considered a button
app specific spec for %@ not found in appId array; using workaround
appId array: %@
app specific spec still not found using workaround
Offer %@ will show count
remoteUI url = %@
expected inlineAlertInfo to be NSArray<NSDictionary *> but found %@
found app-specific flow for %@
app-specific flow for %@ not found; using top-level flow
%{public}@ is missing
invalid %{public}@ of class %@
invalid %{public}@[%ld] of class %@
choose stub: none present
checking criteria for offer type %{public}@ type %{public}@ criteria
%{public}@
choose stub: none with matching criteria found
choose offer type (%@):
skipping server offer type %@ (%@) because it doesn't match requested %@
choose offer type (%@): none found
choose offer type: none present
Malformed key/format properties in message property of opportunitySheet: %@
format array "%@" "%@"
Cannot initialize premium offer from server dict due to invalid type: %@
Successfully initialized premium offer from server response: %@
The requested RemoteUI URL is nil! We won't be able to present a remoteUI flow
Current bundle storage level from Premium offer: %@
Current commerce storage level from Premium offer: %@
bubble not nil: %@
Using Unified Messaging based on Internal Settings
Not using Unified Messaging based on Internal Settings
criteria: missing, substituting empty criteria (always succeeds)
criteria: expected NSDictionary, got %@
criterion: %@: %@ not convertible to long long
criterion: photos library size unknown
criterion: %{public}@: %lld %{public}@ %lld
unexpected criterion key %@
criterion: %{public}@ matches %{public}@
criterion: %{public}@ doesn't match %{public}@
criterion: expected bool value, got %@
not badging app
Posted ICQFollowup item (title:%@ group:%@) %@%@
Skipping legacy CFU cleanup. Already been done
Clearing legacy ICQFollowup items
legacy ICQFollowup items clear completed with success: %@, error: %@
Clearing ICQFollowup items for %@ offer
missing quota key %@ for account %@
invalid URL string %@ for quota key %@ account %@
request: stub missing offerId
request: missing conditions when stub was chosen; using live conditions
event details: nil
event details: unexpected class %@
offerType: %{public}@
type: %{public}@
notificationInfo: present %@
notificationInfo: missing
iTunesAccountExists: %d
iTunesAccountExists: unexpected class %@
callbackInterval: %g
callbackInterval: unexpected class %@
showAlert: %d
showAlert: unexpected class %@
alertInfo: present
alertInfo: missing
showBanner: %d
showBanner: unexpected class %@
appBannerInfo: present
appBannerInfo: missing
appContextInfo: present
appContextInfo: missing
followUpInfo: present
followUpInfo: missing
container: %@
%@ request completed; %@
data: %@
response: %@
error: %@
%{public}@%{public}@
request for detail notification object
"lockTitle" field not present or of undefined type in lockScreenInfo
"lockMessage" field not present or of undefined type in lockScreenInfo
Lockscreen info contains notifyingAppId %@
"title" field not present or of undefined type in followups
"mesg" field not present or of undefined type in followups
Posting detail notification
lockScreenTitle = %@
lockScreenMessage = %@
followupTitle = %@
followupMessage = %@
expected NSString from key %@ but got %@
expected NSDictionary from key %@ but got %@
unexpected server action %@
link overrides action in text:%@ action:%@ params:%@ link:%@
link: expected dict: invalid server message parameter:%@
Invalid link: %@
links: expected array: invalid server message parameters:%@
format is "%@"; button may not contain more than one "%%@"
expected message; bad plist object:%@
Error: buddy offer object of incorrect class -- will persist at the wrong key
Error: default offer object of incorrect class -- will persist at the wrong key
Error: premium offer object of incorrect class -- will persist at the wrong key
photosLibraryUploadSize: %@ < %lld -- recommending alternate string
photosVideosCount: %@ < %lld -- recommending alternate string
no substitution for placeholder %@%@
substituting for placeholder %{public}@ = %@
missing substitution for substring "%{public}@"
no followupInfo provided
followupInfo: expected NSDictionary, got %@
deepLinkURL must be non-nil when entryMethod is _ICQMegaBackupEntryMethodDeepLink
softlink:r:path:/System/Library/PrivateFrameworks/CloudKit.framework/CloudKit
softlink:r:path:/System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
softlink:r:path:/System/Library/PrivateFrameworks/PhotoLibraryServicesCore.framework/PhotoLibraryServicesCore
_ICQAlertSpecification
_ICQUpgradeOfferPageSpecification
ICQPreferences
_ICQHelperFunctions
ICQRemoteContext
NSSecureCoding
NSCoding
_ICQMegaBackupExtendExpirationRequest
ICQDaemonPremiumOffer
ICQDebugging
_ICQMegaBackupNetworkRequest
_ICQMegaBackupManager
ICQAdditions
ICQDaemonDefaultOffer
ICQDaemon
ICQLink
_ICQBannerSpecification
ICQDaemonOfferStub
ICQOfferManager
Private
ICQBuddy
Testing
_ICQMegaBackupUpdateStatusRequest
ICQUserNotifications
ICQOfferUpdateController
ICQDaemonOfferManager
_ICQOpportunityBubbleImageDetails
ICQDaemonAlert
_ICQPhotosInfo
ICQDaemonPersisted
Convenience
_ICQUpgradeCompletePageSpecification
_ICQUpgradeFlowSpecification
_ICQOpportunityBubbleReportingSpecification
ICQOfferUpdateRequestContext
_ICQDeviceInfo
ICQOpportunityBubbleDetailsSpecification
ICQEngagementReporter
ICQOpportunityFlowSpecification
ICQRemotePresentationManager
ICQDaemonOfferConditions
NSCopying
_ICQXMLSpecification
_ICQPageSpecification
_ICQAccountManager
_ICQFlowSpecification
ICQOffer
Internal
ICQDaemonOfferStubs
ICQTestingStubs
ICQOpportunityBubbleSpecification
ICQOpportunitySheetDetailsSpecification
_ICQButtonSpecification
ICQPremiumOffer
ICQDaemonOfferCriteria
_ICQFollowupSpecification
ICQRequestProvider
ICQAsyncValueLoader
_ICQDetailFollowupSpecification
ICQDaemonBuddyOffer
ICQDaemonOffer
Debugging
_ICQMegaBackupEligibilityRequest
objectForKeyedSubscript:
setServerDict:
init
linkForButtonIndex
numberWithInteger:
objectForKey:
setObject:forKey:
removeObjectForKey:
setDefaultButtonIndex:
setLink:forButtonIndex:
count
objectAtIndexedSubscript:
setLink:forButtonIndex:defaultButton:
setTitle:
setMessage:
setAltMessage:
setDisableLockScreenAlert:
_setLinks:defaultIndex:
initWithServerDictionary:
linkForButtonIndex:
serverDict
title
message
altMessage
lockScreenTitle
setLockScreenTitle:
lockScreenMessage
setLockScreenMessage:
altLockScreenMessage
setAltLockScreenMessage:
disableLockScreenAlert
defaultButtonIndex
setLinkForButtonIndex:
.cxx_destruct
_serverDict
_disableLockScreenAlert
_title
_message
_altMessage
_lockScreenTitle
_lockScreenMessage
_altLockScreenMessage
_defaultButtonIndex
_linkForButtonIndex
T@"NSMutableDictionary",&,V_linkForButtonIndex
T@"NSDictionary",&,N
T@"NSString",&,N,V_title
T@"NSString",&,N,V_message
T@"NSString",&,N,V_altMessage
T@"NSString",&,N,V_lockScreenTitle
T@"NSString",&,N,V_lockScreenMessage
T@"NSString",&,N,V_altLockScreenMessage
TB,N,V_disableLockScreenAlert
Tq,N,V_defaultButtonIndex
initWithCapacity:
countByEnumeratingWithState:objects:count:
addObject:
copy
boolValue
isEqualToString:
integerValue
UUID
UUIDString
initWithServerDictionary:pageIdentifier:
setPageIdentifier:
setIconBundleIdentifier:
setMessageLinks:
setAltMessageLinks:
setFineprintFormat:
setFineprintLinks:
setPurchaseLink:
pageIdentifier
linkWithText:action:parameters:
setPurchase2Link:
setPurchase2LinkVisibleKey:
setBottomLink:
setBottomLinkVisibleKey:
setHasCancelButtonForBack:
debugDescription
purchaseLink
text
purchase2Link
bottomLink
fineprintFormat
stringWithFormat:
purchase2LinkVisibleKey
bottomLinkVisibleKey
copyWithBindings:
iconBundleIdentifier
messageLinks
altMessageLinks
fineprintLinks
_iconBundleIdentifier
_messageLinks
_altMessageLinks
_purchaseLink
_purchase2Link
_bottomLink
_fineprintFormat
_fineprintLinks
_purchase2LinkVisibleKey
_bottomLinkVisibleKey
T@"NSDictionary",R,N,V_serverDict
T@"NSString",&,N,V_iconBundleIdentifier
T@"NSArray",&,N,V_messageLinks
T@"NSArray",&,N,V_altMessageLinks
T@"ICQLink",&,N,V_purchaseLink
T@"ICQLink",&,N,V_purchase2Link
T@"ICQLink",&,N,V_bottomLink
T@"NSString",&,N,V_fineprintFormat
T@"NSArray",&,N,V_fineprintLinks
T@"NSString",&,N,V_purchase2LinkVisibleKey
T@"NSString",&,N,V_bottomLinkVisibleKey
numberWithBool:
shouldEnableUnifiedMessaging
setShouldEnableUnifiedMessaging:
stringByReplacingOccurrencesOfString:withString:
containsString:
whitespaceCharacterSet
componentsSeparatedByCharactersInSet:
hasPrefix:
standardUserDefaults
setBool:forKey:
boolForKey:
defaultValueForKey:
defaultKeyExists:
currentLocale
setLocale:
setNumberStyle:
setUsesGroupingSeparator:
setMaximumFractionDigits:
stringFromNumber:
dataUsingEncoding:
base64EncodedStringWithOptions:
_checkOptions:forKey:
_requestedFetchOffersInOptions:
_requestedPremiumOfferInOptions:
_requestedDefaultOfferInOptions:
replaceWordsIn:with:
stringFromTemplates:key:
findPlaceholdersInString:
setUserDefaultsBool:forKey:
userDefaultsBoolValueForKey:
defaultStringValueForKey:
parseTemplates:
isServerMockingEnabled
getStringFromNumber:
base64EncodeString:
_getOfferRequestTypeFromOptions:bundleId:isBuddy:
_getOfferDescriptionFromRequestType:
_darwinNotificationNameForRequestType:
isInternalUI
userInfo
unarchivedObjectOfClass:fromData:error:
archivedDataWithRootObject:requiringSecureCoding:error:
_serializedData
dictionaryWithObjects:forKeys:count:
encodeObject:forKey:
decodeObjectOfClass:forKey:
ICQContextFromRemoteAlertContext:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithOffer:flowOptionsData:preloadedRemoteUIData:
toDictionary
offer
flowOptionsData
preloadedRemoteUIData
_offer
_flowOptionsData
_preloadedRemoteUIData
T@"ICQOffer",R,N,V_offer
T@"NSData",R,N,V_flowOptionsData
T@"NSData",R,N,V_preloadedRemoteUIData
initWithRequestURL:URLSession:queue:
anisetteDataWithError:
ak_anisetteHeadersWithData:
timeIntervalSince1970
numberWithDouble:
addAdditionalRequestHeaders:
doubleValue
dateWithTimeIntervalSince1970:
extendExpirationRequestWithAccount:deviceBackupUUID:requestedExpirationDate:requestURL:URLSession:queue:error:
additionalRequestHeaders
bodyJSON
handleResponse:body:
account
deviceBackupUUID
requestedExpirationDate
isExtensionAllowed
updatedExpirationDate
_extensionAllowed
_account
_deviceBackupUUID
_requestedExpirationDate
_updatedExpirationDate
T@"ACAccount",R,N,V_account
T@"NSString",R,C,N,V_deviceBackupUUID
T@"NSDate",R,C,N,V_requestedExpirationDate
extensionAllowed
TB,R,N,GisExtensionAllowed,V_extensionAllowed
T@"NSDate",R,N,V_updatedExpirationDate
_mutablePlaceholderPersistanceDictionary
_initWithAccount:error:
serverDictionary
mutableCopy
setServerDictionary:
persistenceKey
upgradeCompletePageSpecificationSampleForLevel:
setDoneLink:
upgradeFlowSpecificationSampleForLevel:
upgradeOfferPageSpecificationSampleForLevel:
arrayWithObjects:count:
initWithPages:
cancel
_createURLRequestWithError:
_performURLRequest:
_completeWithError:
absoluteString
statusCode
_dictionaryFromData:response:error:
length
allHeaderFields
errorForUnsuccessfulResponse:body:
_errorForURLRequestError:
errorWithDomain:code:userInfo:
MIMEType
JSONObjectWithData:options:error:
initWithData:encoding:
isValidJSONObject:
dataWithJSONObject:options:error:
requestURL
initWithURL:
requestHeaders
setAllHTTPHeaderFields:
setHTTPBody:
setHTTPMethod:
setObject:forKeyedSubscript:
addEntriesFromDictionary:
domain
code
initWithDictionary:
handleURLResponse:data:error:
dataTaskWithRequest:completionHandler:
allHTTPHeaderFields
HTTPBody
resume
invalidate
resumeWithCompletionHandler:
error
_queue
_URLSession
_URLSessionTask
_completionHandler
_requestURL
_error
T@"NSURL",R,C,N,V_requestURL
T@"NSDictionary",R,C,N
T@"NSError",R,C,N,V_error
bannerSpecificationSampleForLevel:
setLinksFormat:
setLinks:
linkWithText:options:action:parameters:
requestMegaBackupForAccount:deviceBackupUUID:deviceTotalUsedSpaceInBytes:entryMethod:deepLinkURL:queue:completion:
_quotaBackupCheckURLForAccount:
sharedSession
eligibilityRequestWithAccount:deviceBackupUUID:deviceTotalUsedSpaceInBytes:entryMethod:deepLinkURL:requestURL:URLSession:queue:error:
isBackupAllowed
needsTemporaryStorage
daysUntilExpiration
propertiesForDataclass:
aa_altDSID
URLWithString:
_updateStatusURLForAccount:
updateStatusRequestWithAccount:deviceBackupUUID:status:requestURL:URLSession:queue:error:
expirationDate
extendExpirationForAccount:deviceBackupUUID:requestedExpirationDate:queue:completion:
_extendExpirationURLForAccount:
requestMegaBackupForAccount:deviceBackupUUID:deviceTotalUsedSpaceInBytes:queue:completion:
updateMegaBackupStatusForAccount:deviceBackupUUID:status:queue:completion:
extendExpirationForAccount:deviceBackupUUID:queue:completion:
stringWithNonBreakingSpaces
isDefaultOffer
initWithLocaleIdentifier:
setDateFormat:
timeZoneForSecondsFromGMT:
setTimeZone:
stringFromDate:
icq_serverFriendlyString
defaultWorkspace
openSensitiveURL:withOptions:
initWithText:options:action:parameters:
initWithText:action:parameters:
options
action
parameters
valueForKey:
initWithString:
performActionWithOptions:
performAction:parameters:options:
performHTTPPOSTCallWithParams:options:
performHTTPGETCallWithParams:options:
defaultSessionConfiguration
initWithIdentifier:
set_appleIDContext:
sessionWithConfiguration:
requestWithURL:cachePolicy:timeoutInterval:
addHeadersToRequest:
setValue:forHTTPHeaderField:
urlRequestWithParams:options:
addPOSTParams:toRequest:
startDataTaskWithRequest:
urlSession
localizedDescription
aa_primaryAppleAccount
initWithAccount:
addBasicHeadersToRequest:
remoteUIURL
performAction
setRemoteUIURL:
_text
_options
_action
_parameters
_remoteUIURL
T@"NSString",R,C,N,V_text
Tq,R,N,V_options
Tq,R,N,V_action
T@"NSDictionary",R,C,N,V_parameters
T@"NSURL",&,N,V_remoteUIURL
setMessageWithServerMessage:
isDetailBannerInfoAvailable
valueForKeyPath:
titleTemplates
messageTemplates
initWithDetailBannerInfo:
titleWithKey:
messageWithKey:
linksFormat
links
placeholderExists
_isDetailBannerInfoAvailable
_placeholderExists
_messageTemplates
_titleTemplates
_linksFormat
_links
T@"NSDictionary",R,N,V_messageTemplates
T@"NSDictionary",R,N,V_titleTemplates
T@"NSString",&,N,V_linksFormat
T@"NSArray",&,N,V_links
TB,R,N,V_isDetailBannerInfoAvailable
TB,R,N,V_placeholderExists
alertSpecificationSampleForLevel:
alertSpecificationDictionarySampleForLevel:
isBuddyOffer
isPremiumOffer
offerClass
persistedObject
offerId
criteria
persistedOffer
conditionsWhenChosen
setConditionsWhenChosen:
_conditionsWhenChosen
T@"NSString",R,N
buddyOffer
TB,R,N,GisBuddyOffer
defaultOffer
TB,R,N,GisDefaultOffer
premiumOffer
TB,R,N,GisPremiumOffer
T@"ICQDaemonOfferCriteria",R,N
T@"ICQDaemonOfferConditions",C,N,V_conditionsWhenChosen
T@"NSDictionary",R,N
mainBundle
bundleIdentifier
defaultBundleIdentifier
_teardownRegularOfferInvalidationTimer
_teardownPremiumOfferInvalidationTimer
_unregisterForAllDarwinNotifications
dealloc
currentOfferForBundleIdentifier:
currentPremiumOfferForBundleIdentifier:
_getOfferForBundleIdentifier:options:offerContext:completion:
_currentOfferForBundleIdentifier:options:
_premiumOptions
description
getOfferForBundleIdentifier:completion:
getPremiumOfferForBundleIdentifier:completion:
getPremiumOfferAndOpportunityBubbleForBundleIdentifier:completion:
opportunityBubble
shouldShowOpportunityBubbleWithCompletion:
offerType
isPhotosCloudEnabled
defaultStore
_getOfferForAccount:bundleIdentifier:options:offerContext:completion:
_shouldUseOffer:forBundleIdentifier:
_offerTypeMatchesRequestOptions:offer:
showsPhotoVideoCounts
setDeviceInfo:
getInfoWithBundleId:completion:
cachedOfferForType:
isExpired
accountAltDSID
setCachedOfferForType:newOffer:
infoDictionary
setAppVersionId:
cachedOffers
setCachedOffers:
_registerForDarwinNotification:
_setupTimerForInvalidationDate:forType:
defaultCenter
postNotificationName:object:
getOfferWithCompletion:
getPremiumOfferWithCompletion:
registeredDarwinNotifications
setRegisteredDarwinNotifications:
_unregisterForDarwinNotification:
_refetchRegularOffer
_refetchPremiumOffer
_refetchDefaultOffer
_setupTimerForRegularOfferInvalidationDate:
_setupTimerForPremiumOfferInvalidationDate:
date
timeIntervalSinceDate:
_firedRegularOfferInvalidationTimer:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
_firedPremiumOfferInvalidationTimer:
isValid
sharedOfferManager
currentOffer
currentPremiumOffer
getDefaultOfferWithCompletion:
currentDefaultOffer
getPremiumOfferAndOpportunityBubbleWithCompletion:
getOfferForBundleIdentifier:offerContext:completion:
getPremiumOfferForBundleIdentifier:offerContext:completion:
fetchOfferIfNeeded
_handlePushReceivedDarwinNotificationRequestType:
_teardownInvalidationTimerForRequestType:
_cachedOfferQueue
_regularOfferInvalidationTimer
_premiumOfferInvalidationTimer
_cachedOffers
_registeredDarwinNotifications
T@"NSMutableDictionary",&,N,V_cachedOffers
T@"NSMutableDictionary",&,N,V_registeredDarwinNotifications
defaultPlaceholderKeys
stringWithPlaceholderFormat:alternateString:
sharedDaemonOfferManager
clearFollowupsIsPremiumOffer:completion:
clearFollowups
updateOfferId:buttonId:info:completion:
isCachedCloudQuotaAlmostFullOrFull
isDeviceStorageNearLowButNotLow
buddyOfferMightNeedPresenting
_legacyBuddyOfferMightNeedPresenting
forcePostFollowup
postOfferType:
postBuddyOfferType:
teardownCachedOffer
teardownCachedBuddyOffer
tearDownCachedPremiumOffer
teardownCachedOffers
ckBackupDeviceID
isDeviceStorageAlmostFull
isSimulatedDeviceStorageAlmostFull
setSimulatedDeviceStorageAlmostFull:
simulatedPhotosLibrarySize
setSimulatedPhotosLibrarySize:
photosLibrarySize
isBuddyOfferEnabled
setBuddyOfferEnabled:
teardownCachedPremiumOffer
TB,R,N
simulatedDeviceStorageAlmostFull
TB,N,GisSimulatedDeviceStorageAlmostFull
T@"NSNumber",&,N
T@"NSNumber",R,N
buddyOfferEnabled
TB,N,GisBuddyOfferEnabled
status
_status
_expirationDate
Tq,R,N,V_status
T@"NSDate",R,N,V_expirationDate
setBody:
setDefaultActionURL:
requestWithIdentifier:content:trigger:
initWithBundleIdentifier:
addNotificationRequest:withCompletionHandler:
postUserNotificationWithIdentifier:title:bodyText:url:completion:
buttonId
isZeroAction
urlForQuotaKey:
dictionary
aa_personID
attemptSetRequest:toPostWithJSONDict:
addCommonHeadersToRequest:
initWithSession:
performOfferUpdateWithContext:completion:
_sharedURLSession
initWithAccountManager:
initWithClientIdentifier:
daemonBuddyOfferDictionaryForAccount:completion:
_initWithAccount:serverDictionary:
chooseFirstStub
_persistenceDictionary
_fetchDictionaryForAccount:quotaKey:quotaReason:stub:notificationID:contextDictionary:completion:
daemonOfferClassFromBundleId:options:
isValidForAccount:
retrievalDate
callbackInterval
notificationID
_postDaemonOfferChangedDueToPushDarwinNotificationRequestType:
_postFollowupForDaemonOffer:completion:
_fetchDaemonOfferForAccount:stub:notificationID:completion:
_getHandlerForBundleId:options:
_reconsiderOffersForAccount:isForBuddy:quotaReason:options:choiceHandler:completion:
chooseFirstDefaultStub
chooseFirstPremiumStub
_reconsiderOffersForAccount:isForBuddy:quotaReason:choiceHandler:completion:
_processPushNotificationCheckHardwareIDWithDictionary:completion:
aa_isPrimaryAccount
_teardownCachedOffersAndNotify:
earlierDate:
renewCredentialsForAccount:force:reason:completion:
bundleForClass:
localizedStringForKey:value:table:
actionWithLabel:url:
setInformativeText:
setActivateAction:
setFrequency:
setWithArray:
setOptions:
setUniqueIdentifier:
setGroupIdentifier:
setDisplayStyle:
_storageManagementFollowupActions
setActions:
_storageManagementFollowupNotification
setNotification:
_storageManagementFollowupItem
postFollowUpItem:error:
clearPendingFollowUpItemsWithUniqueIdentifiers:error:
shouldDirectToStorageManagement
setShouldDirectToStorageManagement:
_postStorageManagementFollowup
_clearStorageManagementFollowup
reconsiderOffersWithReason:reuseLocalOffers:completion:
accountManager
accountStore
_reconsiderLocalOffersWithReason:account:completion:
clearPersistedObject
chooseStub
choosePremiumStub
_processOfferStub:account:isPremiumOffer:
_daemonLocalOfferStubsDictionaryForAccount:requestType:completion:
_isCachedDaemonOfferValid:forAccount:
clearLegacyFollowupWithController:
clearFollowupWithController:isPremium:completion:
clearLegacyFollowups
_isCacheValidForRequestType:offerStubs:
_fetchDaemonOfferStubsForAccount:isForBuddy:quotaReason:completion:
chooseDefaultStub
lowercaseString
_processPushNotificationDictionary:completion:
getCkBackupDeviceIDWithCompletionHandler:
stringValue
isEqual:
_addSampleAlert
shouldShowForDaemonOffer:
_showDaemonAlertForOffer:notificationDictionary:store:account:completion:
clearAllFollowupsWithCompletion:
_updateOffer:buttonId:info:account:accountStore:completion:
addEntriesToPostDictionary:forStub:
isEnabledForDataclass:
enabledDataclassesForAccount:
containsObject:
_mockFetchDictionaryForAccount:quotaKey:stub:notificationID:contextDictionary:completion:
_useFetchOffersDataDirectly
URLForAccount:quotaKey:
_addEntriesToPostDictionary:forStub:
daemonOfferSource
deviceOffersContainType:
addPremiumOffersHeaderIfNeededForRequest:
_isBackupEnabledForAccount:
ams_sharedAccountStore
ams_activeiTunesAccount
ams_DSID
_attemptSetRequest:toPostWithJSONDict:
_addCommonHeadersToRequest:account:
enumerateKeysAndObjectsUsingBlock:
defaultManager
longLongValue
numberWithLongLong:
aa_lastKnownQuota
isEqualToNumber:
reload
aa_setLastKnownQuota:
saveVerifiedAccount:withCompletionHandler:
_updateQuotaForAccount:withServerDictionary:
setNotificationID:
persistObject
_placeholderOfferForAccount:isForPremium:isForBuddy:error:
daemonOfferStubsDictionarySample
dismissAlert
level
alertSpecification
initWithDaemonOffer:
showAlertWithCompletion:
setAccount:
setButtonId:
setOfferId:
setZeroAction:
dismissAlertsWithNotificationID:
_teardownCachedBuddyOffer
_teardownCachedPremiumOfferAndNotify:
_teardownCachedOfferAndNotify:
_teardownCachedDefaultOfferAndNotify:
containerWithIdentifier:
fetchCurrentDeviceIDWithCompletionHandler:
initWithDefaultValue:valueFetcher:
value
setDidUpdate:
_getStubsForRequestType:fromDaemonStubs:
predicateWithBlock:
filteredArrayUsingPredicate:
firstObject
_logErrorsForFetchOfferResultWithOffer:error:isForBuddy:
_handlerMultipleStubs:forAccount:completion:
_daemonOfferStubsDictionaryForAccount:requestType:quotaReason:completion:
_getFetchOfferStubsFromStubs:
chooseBuddyStub
followupSpecification
lockScreenInfo
_postUserNotification:completion:
postFollowupWithController:completion:
_postOfferType:isForBuddy:
chooseBuddyStubForOfferType:
chooseStubForOfferType:
daemonOfferDictionaryForAccount:options:completion:
processPushNotificationDictionary:completion:
teardownOffersForAccount:completion:
soonestOfferOrStubExpirationDate
renewCredentialsWithCompletion:
startDirectingToStorageManagement
stopDirectingToStorageManagement
reconsiderOffersWithCompletion:
updateOfferForAccount:offerId:buttonId:info:completion:
isLegacyDeviceStorageLevelNotificationEnabled
setLegacyDeviceStorageLevelNotificationEnabled:
sharedURLSession
_followUpController
_accountManager
T@"_ICQAccountManager",R,N,V_accountManager
T@"NSURLSession",R,N,V_sharedURLSession
TB,N
legacyDeviceStorageLevelNotificationEnabled
TB,N,GisLegacyDeviceStorageLevelNotificationEnabled
uppercaseString
hasSuffix:
rangeOfString:
substringToIndex:
setUrlFor3x:
setUrlFor2x:
setUrlFor1x:
urlFor1x
urlFor2x
urlFor3x
getURLForScale:
_urlFor3x
_urlFor2x
_urlFor1x
T@"NSString",C,N,V_urlFor3x
T@"NSString",C,N,V_urlFor2x
T@"NSString",C,N,V_urlFor1x
setName:
lock
daemonOffer
unlock
showOnlyInSpringboard
handleActionsBeforeCallingCompletionHandler
_handleLink:
setShowOnlyInSpringboard:
setHandleActionsBeforeCallingCompletionHandler:
_alertLock
_alertState
_cfAlert
_alertSema
_alertQueue
_showOnlyInSpringboard
_handleActionsBeforeCallingCompletionHandler
_daemonOffer
T@"ICQDaemonOffer",R,N,V_daemonOffer
TB,N,V_showOnlyInSpringboard
TB,N,V_handleActionsBeforeCallingCompletionHandler
mockCount:
setPhotoCount:
setVideoCount:
systemPhotoLibrary
notUploadedPhotosCount
notUploadedVideosCount
getInfoWithCompletion:
photoCount
videoCount
_photoCount
_videoCount
TQ,N,V_photoCount
TQ,N,V_videoCount
persistenceDomain
initWithSuiteName:
_placeholderPersistenceDictionary
userDefaults
dateByAddingTimeInterval:
compare:
dateWithTimeIntervalSinceReferenceDate:
defaultCallbackInterval
setRetrievalDate:
_callbackIntervalFromServerObject:
setCallbackInterval:
setAccountAltDSID:
_initWithAccountAltDSID:error:
setFailedToFetchFromServer:
setFailureDetails:
_placeholderObject
Td,R,N
T@"NSMutableDictionary",R,N
_mutablePersistenceDictionary
_cachedQuotaAvailable
failedToFetchFromServer
failureDetails
_failedToFetchFromServer
_retrievalDate
_callbackInterval
_accountAltDSID
_serverDictionary
_failureDetails
T@"NSDate",&,N,V_retrievalDate
Td,N,V_callbackInterval
T@"NSDate",R,N
expired
TB,R,N,GisExpired
T@"NSString",C,N,V_accountAltDSID
T@"NSDictionary",&,N,V_serverDictionary
TB,N,V_failedToFetchFromServer
T@"NSDictionary",&,N,V_failureDetails
propertyList:isValidForFormat:
hasCancelButtonForBack
doneLink
_doneLink
T@"ICQLink",&,N,V_doneLink
pagesByIdentifier
upgradeSuccessPage
upgradeFailurePage
_upgradePageIdentifierForError:
sanitizedUpgradeFlowServerDict:
array
insertObject:atIndex:
upgradePageForSuccess:
upgradeSuccessPageForWiFi
upgradeFailurePageForNetwork
upgradePageForError:
setOfferType:
needsWiFi
setNeedsWiFi:
_needsWiFi
_offerType
Tq,N,V_offerType
TB,N,V_needsWiFi
_setDisplayRuleFromServerDict:
_getDismissReportingRuleFromServerDict:
dimissServerParam
setDimissServerParam:
displayRuleType
setDisplayRuleType:
dismissRuleType
setDismissRuleType:
displayRuleServerAlwaysShow
setDisplayRuleServerAlwaysShow:
_displayRuleServerAlwaysShow
_dimissServerParam
_displayRuleType
_dismissRuleType
T@"NSDictionary",&,N,V_dimissServerParam
TQ,N,V_displayRuleType
TQ,N,V_dismissRuleType
TB,N,V_displayRuleServerAlwaysShow
setAccountStore:
_zeroAction
_accountStore
_buttonId
_offerId
T@"ACAccount",&,N,V_account
T@"ACAccountStore",&,N,V_accountStore
T@"NSString",C,N,V_buttonId
T@"NSString",&,N,V_offerId
zeroAction
TB,N,GisZeroAction,V_zeroAction
appendString:
setBundleId:
templateKeyForPhotos:video:
setKey:
numberWithUnsignedLongLong:
setWordsToReplace:
defaultDeviceInfoWithBundleId:
getInfoWithBundleId:
wordsToReplace
bundleId
_key
_wordsToReplace
_bundleId
T@"NSString",&,N,V_key
T@"NSDictionary",&,N,V_wordsToReplace
T@"NSString",&,N,V_bundleId
_eventNameForEngagementType:
_sendSubscriptionChangedEvent
_sendBubbleDisplayedEventFor:
_sendImpressionEventWithName:bundleID:
initWithUnderlyingDictionary:
underlyingDictionary
enqueueData:
setWithObjects:
initWithServiceType:placements:
enqueueMessageEvent:
messageActions
placements
_placementDictionary
metricsEvent
addFinishBlock:
makeDialogRequest
_createOpportunityBubbleFrom:bundleID:
iconURL
buttonActions
identifier
deepLink
initWithOpportunityBubble:andOpportunitySheet:
commerceQuotaInfo
bundleQuotaInfo
null
sendEventFor:withBundleID:link:
shouldShowOpportunityBubbleWithBundleID:completion:
fetchBubbleContentWithBundleID:completion:
makeMessageFromServerDict:
makeActionsFromServerDict:
actions
imageDetails
setImageDetails:
_actions
_imageDetails
T@"NSString",C,N,V_title
T@"NSString",C,N,V_message
T@"_ICQOpportunityBubbleImageDetails",&,N,V_imageDetails
T@"NSArray",&,N,V_actions
initWithServiceName:viewControllerClassName:
setUserInfo:
setXpcEndpoint:
newHandleWithDefinition:configurationContext:
activateWithContext:
initWithRemoteContext:
presentHiddenFreshmintFlowWithEndpoint:
remoteContext
_remoteContext
T@"ICQRemoteContext",R,N,V_remoteContext
initWithCurrentConditions
setDeviceStorageAlmostFull:
setPhotosCloudEnabled:
isPhotosOptimizeEnabled
setPhotosOptimizeEnabled:
setPhotosLibrarySize:
initWithPath:
availableSpace
unsignedLongLongValue
lowDiskThreshold
nearLowDiskThreshold
timeIntervalSinceNow
getPhotosLibrarySizeWithCompletion:
getPhotosLibraryUploadSizeWithCompletion:
sharedPhotoLibrary
getPhotoCount:videoCount:
numberWithUnsignedLong:
sharedInstance
getLibrarySizes:
getLibrarySizesFromDB:handler:
currentConditions
hasPhotosCloudEverBeenEnabled
photosLibraryUploadSize
photosVideosCount
copyWithZone:
_deviceStorageAlmostFull
_photosCloudEnabled
_photosOptimizeEnabled
_photosLibrarySize
deviceStorageAlmostFull
TB,N,GisDeviceStorageAlmostFull,V_deviceStorageAlmostFull
photosCloudEnabled
TB,N,GisPhotosCloudEnabled,V_photosCloudEnabled
photosOptimizeEnabled
TB,N,GisPhotosOptimizeEnabled,V_photosOptimizeEnabled
T@"NSNumber",C,N,V_photosLibrarySize
stringForPlaceholder:withDeviceInfo:
substringFromIndex:
initWithPlaceholderInfo:
stringForPlaceholder:
_placeholderInfo
pageClassIdentifier
pageTitle
setPageTitle:
setPageClassIdentifier:
_hasCancelButtonForBack
_pageIdentifier
_pageTitle
_pageClassIdentifier
T@"NSString",&,N,V_pageIdentifier
T@"NSString",&,N,V_pageTitle
TB,N,V_hasCancelButtonForBack
T@"NSString",&,N,V_pageClassIdentifier
initWithAccountStore:
T@"ACAccountStore",R,V_accountStore
startPage
startAlert
setStartAlert:
_startPage
_pagesByIdentifier
_startAlert
T@"_ICQPageSpecification",R,N,V_startPage
T@"NSDictionary",R,N,V_pagesByIdentifier
T@"_ICQAlertSpecification",&,N,V_startAlert
isDetailAppBannerOffer
encodeDouble:forKey:
requestedRemoteUIURL
decodeObjectOfClasses:forKey:
decodeDoubleForKey:
setRequestedRemoteUIURL:
setContext:
initWithServerDictionary:accountAltDSID:notificationID:retrievalDate:callbackInterval:bundleIdentifier:
context
_processICQURL:
componentsWithURL:resolvingAgainstBaseURL:
queryItems
arrayWithArray:
componentsWithString:
name
queryItemWithName:value:
addObjectsFromArray:
setQueryItems:
journeyLinkForId:
setLevel:
setBundleIdentifier:
appVersionId
bannerSpecification
setBannerSpecification:
buttonSpecification
setButtonSpecification:
setFollowupSpecification:
upgradeFlowSpecification
setUpgradeFlowSpecification:
XMLSpecification
setXMLSpecification:
deviceInfo
iTunesAccountExists
setITunesAccountExists:
_planDetailsOverride
_actionOverride
_iTunesAccountExists
_level
_bundleIdentifier
_appVersionId
_notificationID
_bannerSpecification
_buttonSpecification
_followupSpecification
_upgradeFlowSpecification
_XMLSpecification
_deviceInfo
_context
_requestedRemoteUIURL
Tq,N,V_level
T@"NSString",&,N,V_bundleIdentifier
T@"NSString",&,N,V_appVersionId
T@"NSString",&,N,V_accountAltDSID
T@"NSString",&,N,V_notificationID
T@"_ICQBannerSpecification",&,N,V_bannerSpecification
T@"_ICQButtonSpecification",&,N,V_buttonSpecification
T@"_ICQFollowupSpecification",&,N,V_followupSpecification
T@"_ICQUpgradeFlowSpecification",&,N,V_upgradeFlowSpecification
T@"_ICQXMLSpecification",&,N,V_XMLSpecification
T@"_ICQDeviceInfo",&,N,V_deviceInfo
T@"NSString",&,N,V_context
TB,N,V_iTunesAccountExists
T@"NSURL",&,N,V_requestedRemoteUIURL
Tq,R,N,V_offerType
T@"NSURL",R,N
buttonSpecificationSampleForLevel:
sampleOfferForLevel:
buttonLink
updateOfferWithPlanDetails:actionString:
storagePurchaseKeybagForButtonId:
alertSpecificationForAlertKey:
alertSpecificationAtIndex:
_updateRequestedRemoteUIURLWithURL:
T@"_ICQBannerSpecification",R,N
T@"_ICQButtonSpecification",R,N
T@"_ICQFollowupSpecification",R,N
T@"_ICQUpgradeFlowSpecification",R,N
T@"_ICQXMLSpecification",R,N
T@"_ICQDeviceInfo",&,N
T@"NSString",&,N
Tq,R,N
serverStubs
_chooseStubFromServerStubs:conditions:
buddyStubs
defaultStubs
premiumStubs
_initServerStubsFromServerDictionary
sortedArrayWithOptions:usingComparator:
_isValidServerStubs:key:
sortedServerStubs:
enumerateObjectsUsingBlock:
isSatisfiedByConditions:
chooseStubForConditions:
chooseBuddyStubForConditions:
chooseDefaultStubForConditions:
choosePremiumStubForConditions:
_serverStubs
_buddyStubs
_defaultStubs
_premiumStubs
T@"NSArray",R,N,V_serverStubs
T@"NSArray",R,N,V_buddyStubs
T@"NSArray",R,N,V_defaultStubs
T@"NSArray",R,N,V_premiumStubs
_chooseStubFromServerStubs:offerType:
bubbleDetails
appId
setAppId:
setBubbleDetails:
sheetDetails
setSheetDetails:
reportingDetails
setReportingDetails:
_appId
_bubbleDetails
_sheetDetails
_reportingDetails
T@"NSString",C,N,V_appId
T@"ICQOpportunityBubbleDetailsSpecification",&,N,V_bubbleDetails
T@"ICQOpportunitySheetDetailsSpecification",&,N,V_sheetDetails
T@"_ICQOpportunityBubbleReportingSpecification",&,N,V_reportingDetails
dictionaryWithCapacity:
messagesInfo
messageForKey:
setMessagesInfo:
_messagesInfo
T@"NSDictionary",&,N,V_messagesInfo
objectAtIndex:
linkForBundleIdentifier:
linkForBundleIdentifier
buttonFormat
textFormat
linkFormat
setLinkForBundleIdentifier:
_buttonLink
_buttonFormat
_textFormat
_linkFormat
_linkForBundleIdentifier
T@"NSString",R,N,V_buttonFormat
T@"ICQLink",R,N
T@"NSString",R,N,V_textFormat
T@"NSString",R,N,V_linkFormat
T@"NSDictionary",&,N,V_linkForBundleIdentifier
getBadgeAppFromServerDict:
setIsBadgeApp:
_ICQOpportunityBubbleSpecificationForServerDict:bundleId:
setOpportunityBubble:
_bundleStorageLevelFromServerDict:
setBundleQuotaInfo:
_commerceStorageLevelFromServerDict:
setCommerceQuotaInfo:
_hasFollowupEnabledFromServerDict:
setShouldStartOnDeviceJourney:
_remoteUIURLFromOfferContents
_parseQuotaInfo:
shouldShowOpportunityBubbleWithDisplayRuleResult:completion:
isBadgeApp
shouldStartOnDeviceJourney
dismissed
setDismissed:
_isBadgeApp
_shouldStartOnDeviceJourney
_dismissed
_opportunityBubble
_bundleQuotaInfo
_commerceQuotaInfo
TB,N,V_dismissed
TB,N,V_isBadgeApp
TB,N,V_shouldStartOnDeviceJourney
T@"ICQOpportunityBubbleSpecification",&,N,V_opportunityBubble
T@"NSNumber",&,N,V_bundleQuotaInfo
T@"NSNumber",&,N,V_commerceQuotaInfo
followupActionForLink:needsFlow:
noteActivateLink
noteTitle
noteMessage
altNoteMessage
noteClearLink
followupActionForLink:
setClearAction:
identifierPrefix
setExtensionIdentifier:
addNotifyingAppIdForItem:
isForAccountGroup
displayStyle
badgeApp
followupDisplayStyle
sfSymbolID
setBundleIconName:
sfSymbolBundlePath
setRepresentingBundlePath:
groupIdentifier
postFollowUpItem:completion:
clearPendingFollowUpItemsWithUniqueIdentifiers:completion:
setNoteTitle:
setNoteMessage:
setAltNoteMessage:
setNoteActivateLink:
notifyingAppId
postFollowupWithController:
setNoteClearLink:
setForAccountGroup:
setBadgeApp:
setFollowupDisplayStyle:
setSfSymbolID:
setSfSymbolBundlePath:
setNotifyingAppId:
setPremiumOffer:
_forAccountGroup
_badgeApp
_premiumOffer
_noteTitle
_noteMessage
_altNoteMessage
_noteActivateLink
_noteClearLink
_followupDisplayStyle
_sfSymbolID
_sfSymbolBundlePath
_notifyingAppId
TB,N,V_premiumOffer
T@"NSString",C,N,V_altMessage
T@"NSString",C,N,V_noteTitle
T@"NSString",C,N,V_noteMessage
T@"NSString",C,N,V_altNoteMessage
T@"ICQLink",&,N,V_noteActivateLink
T@"ICQLink",&,N,V_noteClearLink
forAccountGroup
TB,N,GisForAccountGroup,V_forAccountGroup
TB,N,V_badgeApp
Tq,N,V_followupDisplayStyle
T@"NSString",C,N,V_sfSymbolID
T@"NSString",C,N,V_sfSymbolBundlePath
T@"NSString",C,N,V_notifyingAppId
aa_addBasicAuthorizationHeaderWithAccount:preferUsingPassword:
ak_addClientInfoHeader
systemTimeZone
abbreviation
preferredLanguages
ak_addCountryHeader
_stringTimeOfLastBackup
addBasicAndCloudBackupHeadersToRequest:
getBackupDeviceUUID
allKeys
fetchValueAsynchronously
fetchValue
didUpdate
setFetchValue:
setValue:
_valueLock
_didUpdate
_fetchValue
_value
T@?,C,N,V_fetchValue
T@,&,N,V_value
T@?,C,N,V_didUpdate
setLockScreenInfo:
setFollowUpInfo:
setTitleTemplates:
setMesgTemplates:
setFollowupTitleTemplates:
setFollowupMesgTemplates:
mesgTemplates
mesgWithKey:
followupTitleTemplates
followupMesgTemplates
followUpInfo
_lockScreenInfo
_followUpInfo
_mesgTemplates
_followupMesgTemplates
_followupTitleTemplates
T@"NSDictionary",&,N,V_lockScreenInfo
T@"NSDictionary",&,N,V_followUpInfo
T@"NSDictionary",&,N,V_mesgTemplates
T@"NSDictionary",&,N,V_titleTemplates
T@"NSDictionary",&,N,V_followupMesgTemplates
T@"NSDictionary",&,N,V_followupTitleTemplates
rangeOfString:options:range:
substringWithRange:
componentsSeparatedByString:
_initSubclassFromServerDictionary
internalAlertSpecification
setInternalAlertSpecification:
internalFollowupSpecification
setInternalFollowupSpecification:
_internalAlertSpecification
_internalFollowupSpecification
T@"_ICQAlertSpecification",&,N,V_internalAlertSpecification
T@"_ICQFollowupSpecification",&,N,V_internalFollowupSpecification
T@"NSString",C,N,V_offerId
stringFromByteCount:countStyle:
substitutionForPlaceholderKey:outIsBelowMin:
substitutionsForPlaceholderKeys:checkIfBelowMin:outIsMissingSubstitution:
placeholderExistsInString:
placeholderKeysInString:fromKeys:
stringWithPlaceholderFormat:substitutions:
substitutionsForPlaceholderKeys:
stringWithPlaceholderFormat:
T@"_ICQAlertSpecification",R,N
initWithObjectsAndKeys:
deviceTotalUsedSpaceInBytes
entryMethod
deepLinkURL
_backupAllowed
_needsTemporaryStorage
_deviceTotalUsedSpaceInBytes
_entryMethod
_deepLinkURL
_daysUntilExpiration
T@"NSNumber",R,C,N,V_deviceTotalUsedSpaceInBytes
Tq,R,N,V_entryMethod
T@"NSString",R,C,N,V_deepLinkURL
backupAllowed
TB,R,N,GisBackupAllowed,V_backupAllowed
TB,R,N,V_needsTemporaryStorage
T@"NSNumber",R,N,V_daysUntilExpiration
@16@0:8
@24@0:8@16
@24@0:8q16
v32@0:8@16q24
v36@0:8@16q24B32
v32@0:8@16Q24
v24@0:8@16
B16@0:8
v20@0:8B16
q16@0:8
v24@0:8q16
v16@0:8
@"NSDictionary"
@"NSString"
@"NSMutableDictionary"
@32@0:8@16@24
@"NSArray"
@"ICQLink"
v28@0:8B16@20
B24@0:8@16
B32@0:8@16@24
q36@0:8@16@24B32
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8@16@24@32
@"ICQOffer"
@"NSData"
@72@0:8@16@24@32@40@48@56^@64
@"ACAccount"
@"NSDate"
v24@0:8@?16
v40@0:8@16@24@32
@40@0:8@16@24^@32
@24@0:8^@16
@"NSObject<OS_dispatch_queue>"
@"NSURLSession"
@"NSURLSessionTask"
@"NSURL"
@"NSError"
v56@0:8@16@24@32@40@?48
v72@0:8@16@24@32q40@48@56@?64
v56@0:8@16@24q32@40@?48
v48@0:8@16@24@32@?40
@40@0:8@16q24@32
@48@0:8@16q24q32@40
B40@0:8q16@24q32
@32@0:8@16q24
v32@0:8@16@24
B24@0:8q16
#16@0:8
@"ICQDaemonOfferConditions"
v32@0:8@16@?24
v40@0:8@16@24@?32
v32@0:8q16@24
@"NSTimer"
@72@0:8@16@24q32@40@48@56^@64
@24@0:8@?16
@?32@0:8@16@24
#32@0:8@16@24
v36@0:8@16B24@?28
v36@0:8@16@24B32
v28@0:8B16@?20
Q16@0:8
v48@0:8@16q24@32@?40
v40@0:8@16q24@?32
B32@0:8q16@24
v72@0:8@16@24@32@40@48@56@?64
v64@0:8@16@24@32@40@48@?56
v44@0:8@16B24@28@?36
@40@0:8@16B24B28@32
v52@0:8@16B24@28@?36@?44
v60@0:8@16B24@28@36@?44@?52
@32@0:8q16@24
v28@0:8@16B24
@"FLFollowUpController"
@"_ICQAccountManager"
B24@0:8@?16
@"NSLock"
^{__CFUserNotification=}
@"NSObject<OS_dispatch_semaphore>"
@"ICQDaemonOffer"
v24@0:8Q16
d16@0:8
d24@0:8@16
v24@0:8d16
@20@0:8B16
@"ACAccountStore"
@32@0:8Q16Q24
v40@0:8q16@24@32
@"_ICQOpportunityBubbleImageDetails"
@"ICQRemoteContext"
@24@0:8^{_NSZone=}16
@"NSNumber"
@"_ICQPageSpecification"
@"_ICQAlertSpecification"
@"_ICQBannerSpecification"
@"_ICQButtonSpecification"
@"_ICQFollowupSpecification"
@"_ICQUpgradeFlowSpecification"
@"_ICQXMLSpecification"
@"_ICQDeviceInfo"
@64@0:8@16@24@32@40d48@56
@24@0:8Q16
@"ICQOpportunityBubbleDetailsSpecification"
@"ICQOpportunitySheetDetailsSpecification"
@"_ICQOpportunityBubbleReportingSpecification"
@"ICQOpportunityBubbleSpecification"
@28@0:8@16B24
@32@0:8@16@?24
@?16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@32@0:8@16^B24
@36@0:8@16B24^B28
@88@0:8@16@24@32q40@48@56@64@72^@80
