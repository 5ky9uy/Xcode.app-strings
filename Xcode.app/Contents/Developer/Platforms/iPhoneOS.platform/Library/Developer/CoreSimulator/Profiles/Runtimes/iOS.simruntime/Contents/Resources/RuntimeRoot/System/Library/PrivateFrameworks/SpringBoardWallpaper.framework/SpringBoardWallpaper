@(#)PROGRAM:SpringBoardWallpaper  PROJECT:SpringBoard-1
<333333
Affffff
?333333
?333333
$@333333
SBWWallpaperSceneSessionRoleWallpaper
v16@?0@"SBWMutableWallpaperWindowSceneClientSettings"8
SBWWallpaperWindowSceneSettings
SBWWallpaperWindowSceneClientSettings
SBWMutableWallpaperWindowSceneClientSettings
v16@?0@"FBSMutableSceneClientSettings"8
v32@?0@"UIImage"8@"NSURL"16q24
v8@?0
Update and prewarm
v24@?0Q8^v16
slotIdentifier
actualStyle
size
imageURL
ioSurface
SBWallpaperEffectViewIsDarkOrHiddenReason
v12@?0B8
variant
SBWErrorDomain
locations
wallpaperMode
SBWallpaperBackdropGroupName
SBWallpaperViewIsDarkOrHiddenReason
enableWallpaperDimming
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
SBFIrisWallpaperView
settingVariant
SBWWallpaperViewController.m
invalid wallpaper style priority (%i)
Invalid parameter not satisfying: %@
reason
Invalid wallpaper variant to legibilitySettingsForVariant:
HomeScreen
StyleInfo
homescreenStyleChangeDelayReasons
LockScreen
suspendColorSamplingAssertions
suspendWallpaperAnimationAssertions
requireWallpaperAssertions
wallpaperConfigurationManager
unpaired disallowRastrizationBlock decrement
v24@?0q8^B16
.Solid_Black
.Solid Black
SpringBoard
SkipPrecacheWallpaperStyles
WallpaperStyleHidden
com.apple.SpringBoardServer.GenerateStaticWallpaperThumbnailImages
SkipPrewarmWallpaperAlternateMode
This assertion was not invalidated before dealloc!
wallpaperViewController
type
isInvalidated
scale
%@ -> %@ (%.02f)
Default
Alert
AlertAnimation
Application
ApplicationAnimation
GuidedAccess
Medusa
MedusaAnimation
PushPop
Switcher
SystemGesture
INVALID
TestingOnly
desiredStyle
traitCollection
identifier
com.apple.PaperBoard.SBWWallpaperServer.queue
com.apple.paperboard
v16@?0@"<BSServiceConnectionListenerConfiguring>"8
v16@?0@"BSServiceConnection"8
v16@?0@"<BSServiceConnectionConfiguring>"8
SBWWallpaperWindowScene
SBWWallpaperWindowSceneVariantSettingsDiffAction.m
windowScene
windowSceneSettings
SBWWallpaperWindowSceneTwoCurveTransitionContext
v16@?0^v8
SBWallpaperWorkspaceIdentifier
v16@?0@"SBWMutableWallpaperWindowSceneSettings"8
External assertion
traitCollectionDidChange
v16@?0@"NSTimer"8
v16@?0@"BSActionResponse"8
DidChangeWallpaperConfiguration
SBWImageSlotView
SBWImageSlot
unfulfilled
fulfilled
ImageForWallpaperStyle
SBWWallpaperEffectImageRequestActionResponse
SBWMutableWallpaperWindowSceneSettings
Wallpaper scale %f
v24@?0@"BSSimpleAssertion"8@"BSUIAnimationFactory"16
@"FBSSceneTransitionContext"16@?0@"FBSMutableSceneSettings"8
ColorSamplingSuspended
WallpaperAnimationSuspended
WallpaperRequired
UpdateWallpaperForLocations
wallpaperWillChange
wallpaperDidChange
scenePresenter
reconnectPolicy
lockscreenObservers
@16@?0@8
homescreenObservers
lockscreenBlurViews
homescreenBlurViews
disallowRasterizationReasonsLockVariant
disallowRasterizationReasonsHomeVariant
hideWallpaperReasonsLockVariant
hideWallpaperReasonsHomeVariant
colorSamplingSuspendedReasons
wallpaperAnimationSuspendedReasons
wallpaperRequiredReasons
homescreenChangesDelayedReasons
homescreenScaleAssertions
liveModeAssertions
sceneModeAssertions
externalSceneModeAssertionActions
sceneModeAssertionForViewMode
scenePresentationView
staticBackgroundView
missingEffectViewImages
pendingEffectViewImageSlots
eventQueue
remoteIrisWallpaperPlayer
cachingIdentifier
reachabilityCoordinator
wallpaperPresentingDelegate
viewMode
sceneDeactivationTimer
scene
Perform with live scene
Update scene settings
v16@?0@"FBSMutableSceneSettings"8
v20@?0B8@"NSError"12
Setup scene
v24@?0@"FBSMutableSceneSettings"8@"FBSSceneTransitionContext"16
v16@?0@"<FBSceneCreating>"8
com.apple.PaperBoard
sceneID:com.apple.PaperBoard-wallpaper
v16@?0@"FBSMutableSceneParameters"8
SBWWallpaperRemoteViewController-%ld
v16@?0@"UIMutableScenePresentationContext"8
SBWWallpaperRemoteViewController.m
reasonsSet
updater
v16@?0@"BSSimpleAssertion"8
B32@?0@"_SBWFakeBlurConfiguration"8@"_SBWFakeBlurAsset"16^B24
Update scene mode to idle
SBWWallpaperRemoteViewController.sceneMode
SBWWallpaperRemoteViewController.liveMode
viewMode must not be set to .Unknown except at initialization
View Mode
SBWWallpaperRemoteViewController - %p
@8@?0
SBWWallpaperRemoteViewController - %p - Scene
SBWWallpaperRemoteViewController - %p - SceneMode
@16@?0@"_SBWWallpaperRemoteViewControllerSceneModeAssertion"8
SBWWallpaperRemoteViewController - %p - ViewMode
View Mode Assertions
@16@?0@"<BSInvalidatable>"8
SBWWallpaperRemoteViewController - %p - WallpaperConfigurationManager
sceneMode
invalidationBlock
_SBWallpaperRemoteViewControllerScaleAssertion
WallpaperScale
q8@?0
B8@?0
requestedStyle
traitCollection.userInterfaceStyle
image
Unspecified
Light
Dark
Unknown (%ld)
unknown
effect-view
live-scene
idle
background support
foreground support
foreground
SBWWallpaperWindowSceneSettingsDiffAction.m
homescreenMinimumWallpaperScale
lockscreenMinimumWallpaperScale
homescreenLegibilitySettings
lockscreenLegibilitySettings
homescreenAverageColor
lockscreenAverageColor
homescreenContrast
lockscreenContrast
homescreenParallaxFactor
lockscreenParallaxFactor
homescreenParallaxEnabled
lockscreenParallaxEnabled
homescreenZoomFactor
lockscreenZoomFactor
homescreenContentStatic
lockscreenContentStatic
lockscreenContentLiveWallpaper
liveWallpaperPlaybackState
Normal
Hidden
Black
Blur
UltraLightBlurOnly
SemiLightBlurOnly
FlatSemiLightBlurOnly
LightBlurOnly
DarkBlurOnly
UltraLightTintedBlur
SemiLightTintedBlur
FlatSemiLightTintedBlur
LightTintedBlur
MediumTintedBlur
MediumGrayTintedBlur
DarkTintedBlur
UltraLightTintOnly
SemiLightTintOnly
FlatSemiLightTintOnly
LightTintOnly
DarkTintOnly
DarkerTintOnly
BackgroundLightBlurOnly
BackgroundLightTintedBlur
BackgroundLightTintOnly
ForegroundLightBlurOnly
ForegroundLightTintedBlur
ForegroundLightTintOnly
DockTintedBlur
IconComponentBlur
(%li)
com.apple.springboard.wallpaper-access
com.apple.springboard.setWallpaperVariant
effectiveStyle
style
AlignFakeWallpaperToLayer-%p
UIImageView
UIImage
_SBWFakeBlurView.m
Unexpected variant %@ (expected %@)
Bad index to priorityInfoAtIndex:
Bad index to setPriorityInfo:atIndex:
Bad index to removePriorityInfoForPriority:
styleTransitionState
priorityInfo
table
priority
startStyle
endStyle
transitionFraction
-initWithFrame: unavailable
This class does not support unarchiving from a nib
SBWWallpaperEffectViewBase.m
SBWallpaperEffectView does not support style Hidden
inAnimationSettings
outAnimationSettings
wallpaperVariant
lockscreenWallpaperContentsRect
lockscreenWallpaperAlpha
homescreenWallpaperAlpha
lockscreenOnlyWallpaperAlpha
disallowHomescreenRasterization
disallowLockscreenRasterization
homescreenWallpaperHidden
lockscreenWallpaperHidden
homescreenWallpaperScale
lockscreenWallpaperScale
colorSamplingSuspended
wallpaperAnimationSuspended
wallpaperRequred
homescreenStyleChangesDelayed
homescreenStyleTransitionState
lockscreenStyleTransitionState
liveWallpaperTouchActive
liveWallpaperInteractive
Disabling parallax because of requested wallpaper style
Enabling parallax because of requested wallpaper style
Adding wallpaper animation (and parallax) assertion: %@ 
All assertions: %@
Set wallpaper style state for priority %li for variant %{public}@ to %{public}@
Remove wallpaper style for priority %li for variant %{public}@
Removing wallpaper animation (and parallax) assertion: %@ 
All assertions: %@
Substituting flat color '%@' for wallpaper with name '%@'
Disabling dynamic wallpapers and parallax because of requested wallpaper style
Enabling dynamic wallpapers and parallax because of requested wallpaper style
SBWWallpaperServer received connection: %{public}@
SBWWallpaperServer received connection invalidation: %{public}@
Adding Connection: %{public}@
Removing Connection: %{public}@
Acquiring foreground scene mode assertion %p for external assertion action %{public}@
Invalidating foreground scene mode assertion %p
Acquiring live scene view mode assertion for appearance change
Releasing live scene view mode assertion for appearance change
Setting wallpaper mode to %@
Wallpaper did change for variants: %{public}@
Acquiring foreground support scene mode assertion for wallpaper change
Releasing foreground support scene mode assertion for wallpaper change
Fetching image for wallpaper style:%{public}@ variant:%{public}@ traitCollection.userInterfaceStyle:%{public}@
Satisfied image request from cache with image %{public}@
Satisfied image request from cache with image URL %{public}@
Received cached image URL %{public}@ but could not load image.
Image slot invalidated: %{public}@ (%{public}@)
Acquiring foreground scene mode assertion for image request %{public}@
Sending image slot request action for image slot request %{public}@
Releasing foreground scene mode assertion for image request %{public}@
Received image URL %{public}@ resulting in image %{public}@ for image request %{public}@
Received IOSurface %{public}@ size %{public}@ for image request %{public}@
Unexpected response %{public}@ for image request %{public}@
Did not receive response for image request %{public}@
Sending image request action for image slot request %{public}@
Setting wallpaper variant to %{public}@ from %{public}@
Setting alpha %f for variant %{public}@
Setting lockscreen wallpaper contents rect %{public}@
Setting lockscreen-only wallpaper alpha %f
Removing invalidated homescreen wallpaper scale assertion %p (scale %f)
Acquiring homescreen wallpaper scale assertion %p (scale %f)
Setting lockscreen wallpaper scale to %f
Setting rasterization disabled:%{BOOL}u for variant %{public}@ with reason %{public}@ (was disabled: %{BOOL}u)
Setting wallpaper hidden:%{BOOL}u for variant %{public}@ with reason %{public}@ (was hidden: %{BOOL}u)
Color sampling suspension assertion for reason %{public}@ invalidated. Setting sampling suspended:%{BOOL}u
Suspending color sampling for reason %{public}@ assertion %p
Animation suspension assertion for reason %{public}@ invalidated. Setting sampling suspended:%{BOOL}u
Suspending animation for reason %{public}@ assertion %p
Updating iris wallpaper for interactive mode
Updating view mode after updating iris wallpaper for interactive mode
Updating iris wallpaper for static mode
Updating view mode after updating iris wallpaper for static mode
Setting wallpaper style transition state %{public}@ for priority %{public}@ variant %{public}@. Is different:%{BOOL}u
Removing wallpaper style transition state for priority %{public}@ variant %{public}@. Is different:%{BOOL}u
Ending wallpaper requiring with reason %{public}@. Setting wallpaper required:%{BOOL}u
Beginning wallpaper requiring for reason %{public}@ assertion %p
Sending wallpaper preheat action for variant %{public}@
Beginning delaying homescreen style changes for reason %{public}@
Ending delaying homescreen style changes for reason %{public}@. Remaining reasons: %ld
Acquiring foreground support scene mode assertion for wallpaper update
Invalidating foreground support scene mode assertion for wallpaper update
Sending wallpaper update locations action for locations %{public}@ wallpaper mode %{public}@
Setting live wallpaper touch active: %{BOOL}u
Received action %{public}@
Acquiring live scene view mode assertion %p for wallpaper will change.
Invalidating live scene view mode assertion %p for wallpaper will change.
Acquiring live scene view mode assertion %p for wallpaper did change.
Invalidating live scene view mode assertion %p for wallpaper did change.
Remote wallpaper controller %p scene did deactivate with error: %@
shouldReactivateForViewMode: %{BOOL}u
shouldReactivateForSceneMode: %{BOOL}u
shouldReactivateForEffectImages: %{BOOL}u
Attempting reactivation of remote wallpaper controller %p scene in %0.3f seconds.
Reactivating remote wallpaper controller scene %p.
Content-is-static changed. Updating view mode.
Live wallpaper playback state changed. Playback state: %{public}@
Scene setup completed. Success: %{BOOL}u Error: %{public}@
Activating existing wallpaper scene %{public}@
Created new wallpaper scene %{public}@
Installing live scene view on scene setup
Updating homescreen wallpaper scale from %f to %f
Caching asset %{public}@ for configuration %{public}@
Retrieved cached asset %{public}@ for configuration %{public}@
Invalidating cached assets for configurations %{public}@
Error deserializing wallpaper image from URL %{public}@: %{public}@
Modifying scene settings for scene mode %{public}@
Deactivating idle wallpaper scene due to inactivity.
Evaluating view mode. Selected %{public}@.
variant: %{public}@
contentIsStatic: %{BOOL}u
contentIsInteractiveLiveWallpaper: %{BOOL}u
lockscreen is live wallpaper: %{BOOL}u
live wallpaper is interactive: %{BOOL}u
[_liveModeAssertions count]: %ld
Updating view mode from %{public}@ to %{public}@
Removing live scene view and adding static background view
Removing static background view and adding live scene view
SBWWallpaperWindowScene
SBWWallpaperWindowSceneClientSettingsDiffInspector
SBWImageSlotRepository
_SBWImageSlotRepositoryEntry
SBWWallpaperEffectImageRequestAction
SBWWallpaperEffectImageRequestActionResponse
SBWWallpaperEffectImageRequestActionImageURLResponse
SBWWallpaperEffectImageRequestActionIOSurfaceResponse
SBWWallpaperStaticBackgroundView
SBWWallpaperDidChangeAction
SBWWallpaperDidCompleteWallpaperChangeAction
SBWRemoteIrisWallpaperPlayer
UIGestureRecognizerDelegate
NSObject
SBFIrisWallpaperPlaying
SBWWallpaperUpdateLocationsAction
SBWWallpaperUpdateActionResponse
SBWWallpaperViewController
SBFWallpaperConfigurationManagerDelegate
SBFLegibilitySettingsProviderDelegate
SBFWallpaperViewInternalObserver
PTSettingsKeyObserver
BSDescriptionProviding
SBFWallpaperViewDelegate
SBWWallpaperPresenting
SBWWallpaperLegibilityProviding
_SBWWallpaperViewControllerAssertion
BSInvalidatable
_SBWWallpaperViewControllerScaleAssertion
SBWWallpaperScaleInvalidating
SBWWallpaperImageSlotRequestAction
SBWWallpaperServer
BSServiceConnectionListenerDelegate
SBSUIWallpaperClientToServerInterface
SBWWallpaperWindowSceneVariantSettingsDiffAction
_UISceneSettingsDiffAction
SBWWallpaperWindowSceneSpecification
SBWWallpaperUpdateAndPrewarmAction
SBWDefaultSessionReconnectPolicy
SBWSessionReconnectPolicy
SBWWallpaperRemoteViewController
FBSceneDelegate
FBSceneObserver
FBSceneLayerManagerObserver
_SBWFakeBlurImageProviding
_SBWFakeBlurViewRegistering
SBWRemoteIrisWallpaperPlayerDelegate
_SBWWallpaperRemoteViewControllerSceneModeAssertion
_SBWallpaperRemoteViewControllerScaleAssertion
_SBWFakeBlurConfiguration
NSCopying
_SBWFakeBlurAsset
SBWWallpaperWindowSceneSettingsDiffAction
SBWWallpaperWindowSceneClientSettings
SBWMutableWallpaperWindowSceneClientSettings
SBWWallpaperWillChangeAction
SBWWallpaperWindowSceneSettingsDiffInspector
SBWWallpaperWindowSceneBSActionHandler
_UISceneBSActionHandler
_SBWFakeBlurView
_SBWFakeBlur
SBWallpaperReachabilityObserving
_SBAccessibilityTintView
SBWallpaperObserver
SBWallpaperStyleInfo
SBWWallpaperWindowSceneStyleTransitionState
BSXPCCoding
SBWWallpaperPreheatAction
SBWWallpaperEffectViewBase
_SBWFakeBlurObserver
_SBMaskingContainerView
_SBTintView
SBWImageSlot
SBWDeferredImageSlot
SBWImageSlotView
SBWDeferredImageSlotObserving
SBWWallpaperWindowSceneTwoCurveTransitionContext
SBWWallpaperWindowSceneSettings
SBWMutableWallpaperWindowSceneSettings
_wallpaperSceneSettings
wallpaperVariant
lockscreenWallpaperContentsRect
lockscreenWallpaperAlpha
homescreenWallpaperAlpha
lockscreenOnlyWallpaperAlpha
disallowHomescreenRasterization
disallowLockscreenRasterization
homescreenWallpaperScale
lockscreenWallpaperScale
colorSamplingSuspended
wallpaperAnimationSuspended
wallpaperRequired
homescreenStyleChangesDelayed
cachingIdentifier
homescreenStyleTransitionState
lockscreenStyleTransitionState
liveWallpaperTouchActive
liveWallpaperInteractive
_wallpaperSceneClientSettings
homescreenMinimumWallpaperScale
setHomescreenMinimumWallpaperScale:
_updateWallpaperSceneClientSettingsWithBlock:
lockscreenMinimumWallpaperScale
setLockscreenMinimumWallpaperScale:
homescreenLegibilitySettings
setHomescreenLegibilitySettings:
lockscreenLegibilitySettings
setLockscreenLegibilitySettings:
homescreenAverageColor
setHomescreenAverageColor:
lockscreenAverageColor
setLockscreenAverageColor:
homescreenContrast
setHomescreenContrast:
lockscreenContrast
setLockscreenContrast:
homescreenParallaxFactor
setHomescreenParallaxFactor:
lockscreenParallaxFactor
setLockscreenParallaxFactor:
homescreenParallaxEnabled
setHomescreenParallaxEnabled:
lockscreenParallaxEnabled
setLockscreenParallaxEnabled:
homescreenZoomFactor
setHomescreenZoomFactor:
lockscreenZoomFactor
setLockscreenZoomFactor:
isHomescreenContentStatic
setHomescreenContentStatic:
isLockscreenContentStatic
setLockscreenContentStatic:
isLockscreenContentLiveWallpaper
setLockscreenContentLiveWallpaper:
liveWallpaperPlaybackState
setLiveWallpaperPlaybackState:
_FBSScene
initWithVariant:
setWithObject:
sendActions:
settings
clientSettings
updateClientSettingsWithBlock:
delegate
wallpaperWindowScene:didUpdateVariant:inAnimationSettings:outAnimationSettings:
wallpaperWindowScene:didUpdateLockscreenWallpaperContentsRect:
wallpaperWindowScene:didUpdateLockscreenWallpaperAlpha:
wallpaperWindowScene:didUpdateHomescreenWallpaperAlpha:
wallpaperWindowScene:didUpdateLockscreenOnlyWallpaperAlpha:
wallpaperWindowScene:didUpdateRasterizationDisallowedForHomescreen:lockscreen:
wallpaperWindowScene:didUpdateHomescreenWallpaperHidden:lockscreenWallpaperHidden:
wallpaperWindowScene:didUpdateHomescreenWallpaperScale:
wallpaperWindowScene:didUpdateLockscreenWallpaperScale:
wallpaperWindowScene:didUpdateColorSamplingSuspended:
wallpaperWindowScene:didUpdateWallpaperAnimationSuspended:
wallpaperWindowScene:didUpdateWallpaperRequired:
wallpaperWindowScene:didUpdateHomescreenStyleChangesDelayed:
wallpaperWindowScene:didUpdateHomescreenStyleTransitionStateTo:from:
wallpaperWindowScene:didUpdateLockscreenStyleTransitionStateTo:from:
wallpaperWindowScene:didUpdateLiveWallpaperTouchActive:
wallpaperWindowScene:didUpdateLiveWallpaperInteractive:
wallpaperWindowScene:requestsWallpaperEffectImageForVariant:style:traitCollection:result:
desiredStyle
variant
traitCollection
slotIdentifier
initWithWindowScene:
size
allocateImageSlotForIdentifier:size:actualStyle:url:lifetimeObject:
freeImageSlotWithIdentifier:lifetime:
setInvalidationHandler:
setImageSlot:forIdentifier:
hasSlotForIdentifier:
canSendResponse
sizeForIdentifier:
actualStyleForIdentifier:
urlForIdentifier:
initWithActualStyle:size:imageURL:
ioSurfaceForIdentifier:
initWithActualStyle:size:ioSurface:
errorWithDomain:code:userInfo:
responseForError:
sendResponse:
wallpaperWindowScene:didReceivePreheatRequestForVariant:
wallpaperWindowSceneDidReceiveUpdateAndPrewarmRequest:
sharedApplication
beginBackgroundTaskWithName:expirationHandler:
endBackgroundTask:
response
wallpaperWindowScene:didReceiveUpdateRequestForLocations:wallpaperMode:completion:
locations
wallpaperMode
setLockscreenContentIsLiveWallpaper:
noteWallpaperWillChangeForVariant:
noteWallpaperDidChangeForVariant:
noteWallpaperDidCompleteWallpaperChange
_updateWallpaperVariant:inAnimationSettings:outAnimationSettings:
_updateLockscreenWallpaperContentsRect:
_updateLockscreenWallpaperAlpha:
_updateHomescreenWallpaperAlpha:
_updateLockscreenOnlyWallpaperAlpha:
_updateDisallowRasterizationForHomescreen:lockscreen:
_updateWallpaperHiddenForHomescreen:lockscreen:
_updateHomescreenWallpaperScale:
_updateLockscreenWallpaperScale:
_updateColorSamplingSuspended:
_updateWallpaperAnimationSuspended:
_updateWallpaperRequired:
_updateHomescreenStyleChangesDelayed:
_updateHomescreenStyleTransitionStateTo:from:
_updateLockscreenStyleTransitionStateTo:from:
_updateLiveWallpaperTouchActive:
_updateLiveWallpaperInteractive:
_handleImageSlotRequestAction:
_handleWallpaperEffectImageRequestAction:
_handlePreheatAction:
_handleUpdateAndPrewarmAction:
_handleUpdateLocationsAction:
homescreenWallpaperHidden
lockscreenWallpaperHidden
.cxx_destruct
_wallpaperEffectImageSlots
_homescreenWallpaperHidden
_lockscreenWallpaperHidden
Tq,R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
Td,R,N
TB,R,N
TB,R,N,V_homescreenWallpaperHidden
TB,R,N,V_lockscreenWallpaperHidden
T@"NSString",R,C,N
T@"SBWWallpaperWindowSceneStyleTransitionState",R,C,N
Td,N
T@"_UILegibilitySettings",C,N
T@"UIColor",C,N
TB,N
homescreenContentStatic
TB,N,GisHomescreenContentStatic
lockscreenContentStatic
TB,N,GisLockscreenContentStatic
lockscreenContentIsLiveWallpaper
TB,N,GisLockscreenContentLiveWallpaper
Tq,N
_observeOtherSetting:withBlock:
observeOtherSetting:withBlock:
observeHomescreenMinimumWallpaperScaleWithBlock:
observeLockscreenMinimumWallpaperScaleWithBlock:
observeHomescreenLegibilitySettingsWithBlock:
observeLockscreenLegibilitySettingsWithBlock:
observeHomescreenAverageColorWithBlock:
observeLockscreenAverageColorWithBlock:
observeHomescreenContrastWithBlock:
observeLockscreenContrastWithBlock:
observeHomescreenParallaxFactorWithBlock:
observeLockscreenParallaxFactorWithBlock:
observeHomescreenParallaxEnabledWithBlock:
observeLockscreenParallaxEnabledWithBlock:
observeHomescreenZoomFactorWithBlock:
observeLockscreenZoomFactorWithBlock:
observeHomescreenContentStaticWithBlock:
observeLockscreenContentStaticWithBlock:
observeLockscreenContentLiveWallpaperWithBlock:
observeLiveWallpaperPlaybackStateWithBlock:
init
dictionary
addObject:
setUrl:
setSize:
setActualStyle:
setObject:forKey:
objectForKeyedSubscript:
removeObjectForKey:
removeObject:
setImage:
objectForKey:
actualStyle
ioSurface
_lifetimes
_slots
_setBlockSet:
dealloc
image
_blockSet
_ioSurface
_url
_actualStyle
_image
_size
T@"NSURL",C,N,V_url
T{CGSize=dd},N,V_size
Tq,N,V_actualStyle
T@"UIImage",&,N,V_image
T@"IOSurface",R,N
setObject:forSetting:
initWithInfo:timeout:forResponseOnQueue:withHandler:
info
objectForSetting:
initWithSlotIdentifier:forResponseOnQueue:withHandler:
keyDescriptionForSetting:
integerValue
CGSizeValue
valueDescriptionForFlag:object:ofSetting:
T{CGSize=dd},R,N
numberWithInteger:
valueWithCGSize:
filePathURL
path
initWithInfo:error:
fileURLWithPath:
imageURL
T@"NSURL",R,C,N
_newEffectViewForVariant:transitionState:
invalidate
setVariant:withOutAnimationFactory:inAnimationFactory:completion:
_effectViewForVariant:
setAlpha:
animateWithFactory:actions:completion:
prepareToAnimateToTransitionState:
animateWithFactory:actions:
_setEffectView:forVariant:
_shouldSuspendMotionEffectsForState:
_endSuspendingMotionEffectsForStyleIfNeeded
setTransitionState:
currentTransitionStateIsOpaque
removeFromSuperview
_updateMotionEffectsForState:
wallpaperStyleAnimationAssertion
suspendWallpaperAnimationForReason:
setWallpaperStyleAnimationAssertion:
_beginSuspendingMotionEffectsForStyleIfNeeded
initWithWallpaperPresenter:variant:transformOptions:
setForcesOpaque:
bounds
setFrame:
setAutoresizingMask:
addSubview:
_shouldSuspendMotionEffectsForStyle:
initWithWallpaperPresenter:
setVariant:
setWallpaperStyleTransitionState:forVariant:withAnimationFactory:
_wallpaperPresenter
_lockscreenWallpaperEffectView
_homescreenWallpaperEffectView
_variant
_wallpaperStyleAnimationAssertion
T@"<BSInvalidatable>",&,N,V_wallpaperStyleAnimationAssertion
Tq,N,V_variant
_wallpaperGestureChanged:
initWithTarget:action:
setMinimumPressDuration:
setCancelsTouchesInView:
irisDelegate
irisWallpaperPlayerPlaybackStateDidChange:
isTouchActive
state
_handleWallpaperGestureBegan
_handleWallpaperGestureEnded
_handleWallpaperGestureChanged
_setTouchActive:
remoteIrisWallpaperPlayer:touchActiveChanged:
irisWallpaperPlayerIsInteractingDidChange:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
irisGestureRecognizer
setIrisDelegate:
irisPlaybackState
isIrisInteracting
T@"<SBFIrisWallpaperPlayerDelegate>",W,N
_setIrisPlaybackState:
setDelegate:
_gestureRecognizer
_touchActive
_irisDelegate
_irisPlaybackState
_delegate
touchActive
TB,N,GisTouchActive,S_setTouchActive:,V_touchActive
T@"<SBWRemoteIrisWallpaperPlayerDelegate>",W,N,V_delegate
Tq,N,S_setIrisPlaybackState:,V_irisPlaybackState
T@"<SBFIrisWallpaperPlayerDelegate>",W,N,V_irisDelegate
initWithInfo:responder:
initWithLocations:wallpaperMode:responder:
initWithNibName:bundle:
weakObjectsHashTable
enableWallpaperDimming
setEnableWallpaperDimming:
defaultCenter
_accessibilityReduceTransparencyChanged:
addObserver:selector:name:object:
stringWithUTF8String:
_updateWallpaperForWallpaperDimming:
observeDefault:onQueue:withBlock:
removeObserver:
descriptionWithMultilinePrefix:
viewDidLoad
view
initWithFrame:
layer
mainScreen
scale
setRasterizationScale:
setClipsToBounds:
_updateAndPrewarmWallpapers
performWithoutAnimation:
_toWindowOrientation
_fromWindowOrientation
noteWillAnimateToInterfaceOrientation:
noteDidRotateFromInterfaceOrientation:
animateAlongsideTransition:completion:
traitCollectionDidChange:
userInterfaceStyle
_updateWallpaperForWallpaperMode:
_wallpaperViewForVariant:
_imageForStyle:withSource:overrideTraitCollection:result:
beginSimulatedTouchWithReason:
endSimulatedTouchWithReason:
suspendColorSamplingForReason:
_beginDisallowRasterizationBlock
styleTransitionState
_endDisallowRasterizationBlock
wallpaperEffectView
setHidden:
_updateWallpaperHidden
_updateWallpaperParallax
setVariant:withAnimationFactory:
sendSubviewToBack:
prepareToDisappear
prepareToAppear
setZoomFactor:withAnimationFactory:
setContentsRect:
hasContentOutsideVisibleBounds
_isInAnimationBlock
animateWithDuration:animations:completion:
countByEnumeratingWithState:objects:count:
initWithWallpaperViewController:scale:
_updateHomeScreenWallpaperScaleWithAnimationFactory:
minimumWallpaperScaleForVariant:
parallaxFactor
wallpaperConfigurationManager
wallpaperSize
parallaxDeviceType
bestWallpaperSizeForWallpaperSize:deviceType:parallaxFactor:portrait:
setLockscreenWallpaperScale:withAnimationFactory:
_setDisallowRasterization:withReason:reasons:
_updateRasterizationState
_setWallpaperHidden:variant:reason:
initWithWallpaperViewController:type:reason:
_suspendOrResumeColorSampling
_suspendOrResumeWallpaperAnimation
window
_removeAllRetargetableAnimations:
homescreenStyleInfo
setWallpaperStyleTransitionState:forPriority:forVariant:withAnimationFactory:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
wallpaperStyleInfoForVariant:
setPriorityInfo:forPriority:
_updateEffectViewForVariant:withFactory:
removePriorityInfoForPriority:
preheatImageData
shouldDelayHomescreenStyleUpdates
switchToIrisMode:
setRotating:
_activeWallpaperView
needsImmediateLayoutBeforeRotation
layoutIfNeeded
rotateToInterfaceOrientation:
wallpaperPresenter:requestsOrientationWithRefresh:
initWithVariant:wallpaperViewController:
setTransformOptions:
initWithVariant:wallpaperViewController:transformOptions:reachabilityCoordinator:
_updateWallpaperForLocations:options:wallpaperMode:withCompletion:
legibilitySettings
exceptionWithName:reason:userInfo:
legibilitySettingsForVariant:
contentColor
averageColorInRect:forVariant:withSmudgeRadius:
_screen
coordinateSpace
convertRect:fromCoordinateSpace:
averageColorInRect:withSmudgeRadius:
averageColorForVariant:
contrast
contrastInRect:
wallpaperConfigurationForVariant:includingValuesForTypes:
_handleWallpaperLegibilitySettingsChanged:forVariant:
_updateBlurImagesForVariant:
setLowLatency:
_reconfigureBlurViewsForVariant:
descriptionBuilderWithMultilinePrefix:
build
builderWithObject:
appendObject:withName:
allObjects
appendArraySection:withName:skipIfEmpty:
appendBodySectionWithName:multilinePrefix:block:
lockscreenStyleInfo
count
succinctDescriptionBuilder
containsObject:
_isRasterizationDisallowedForCurrentVariant
wantsRasterization
shouldRasterize
setShouldRasterize:
setContinuousColorSamplingEnabled:
setWallpaperAnimationEnabled:
type
_removeColorSamplingAssertion:
_removeWallpaperAnimationAssertion:
removeWallpaperRequiredAssertion:
_isWallpaperHiddenForVariant:
isHidden
lockScreenWallpaperConfigurationIncludingValuesForTypes:
wallpaperOptions
setParallaxFactor:
setParallaxEnabled:
homeScreenWallpaperConfigurationIncludingValuesForTypes:
hasSuffix:
blackColor
wallpaperType
name
substitutionFlatColorForWallpaperName:
initWithVariant:type:
setWallpaperColor:
setWallpaperOptions:
variantsShareWallpaper
_updateSharedWallpaperWithOptions:wallpaperMode:
_updateSeparateWallpaperForVariants:options:wallpaperMode:
setLockscreenWallpaperScale:
setLockscreenOnlyWallpaperAlpha:
_updateBlurGeneration
isDisplayingWallpaperWithConfiguration:forVariant:
wallpaperConfigurationForUpdatingWallpaperViewsForVariant:wallpaperMode:
_isWallpaperView:displayingWallpaperWithConfiguration:forVariant:
subviews
indexOfObject:
_clearWallpaperView:
setSharedWallpaperView:
insertSubview:atIndex:
setLockscreenWallpaperView:
setHomescreenWallpaperView:
_makeWallpaperViewWithConfiguration:forVariant:shared:options:
cleanupOldSharedWallpaper:lockSreenWallpaper:homeScreenWallpaper:
animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:
traitCollectionWithUserInterfaceStyle:
setFakeBlurViewOverrideTraitCollection:
_precacheStyles:usingTraitCollection:
_handleWallpaperChangedForVariant:
wallpaperPresentingDelegate
wallpaperPresenter:didChangeWallpaperForLocations:withConfiguration:
_imageForStyle:withSource:overrideTraitCollection:
insertSubview:above:
highestValidPriority
priorityInfoForPriority:
setStyleTransitionState:
_newWallpaperEffectViewForVariant:transitionState:
setWallpaperEffectView:
_clearWallpaperEffectView:
_updateEffectViewForVariant:oldState:newState:oldEffectView:newEffectView:
_observersForVariant:
copy
wallpaperWillChangeForVariant:
wallpaperDidChangeForVariant:
variantsShareWallpaperConfigurationForTypes:
wallpaperDataTypesToRequestForUpdatingWallpaperViews
wallpaperConfigurationForVariant:includingValuesForTypes:wallpaperMode:
substitutionWallpaperConfigurationForWallpaperConfiguration:
setGeneratesBlurredImages:
supportsCropping
wallpaperViewClassForWallpaperType:
_bestWallpaperViewInitializationOptionsForVariant:shared:wallpaperOptions:options:
_wallpaperViewClassForType:
initWithFrame:configuration:variant:cacheGroup:delegate:options:
setInternalObserver:
_vendWallpaperViewForConfiguration:forVariant:shared:options:
wallpaperLegibilitySettingsDidChange:forVariant:
_blurViewsForVariant:
reconfigureWithSource:
updateImageWithSource:
setWallpaperMode:
dataStores
hasWallpaperImageForVariant:wallpaperMode:
wallpaperPresenterDidCompleteWallpaperChange:
wallpaperConfigurationManager:didChangeWallpaperConfigurationForVariants:
wallpaperConfigurationManager:isVideoSupportedForVariant:
wallpaperConfigurationManager:legibilitySettingsForVariant:
providerLegibilitySettingsChanged:
wallpaperViewDidInvalidateBlurs:
wallpaperView:didChangeZoomFactor:
wallpaperViewDidChangeWantsRasterization:
settings:changedValueForKey:
succinctDescription
wallpaperView:wallpaperConfigurationIncludingValueTypes:
addObserver:forVariant:
removeObserver:forVariant:
setAlpha:forWallpaperVariant:
setLockscreenWallpaperContentsRect:
setHomescreenWallpaperScale:withAnimationFactory:
setDisallowsRasterization:forVariant:withReason:
setWallpaperHidden:variant:reason:
updateIrisWallpaperForInteractiveMode
updateIrisWallpaperForStaticMode
cancelInProcessAnimations
setWallpaperStyle:forPriority:forVariant:withAnimationFactory:
removeWallpaperStyleForPriority:forVariant:withAnimationFactory:
beginRequiringWithReason:
preheatWallpaperForVariant:
beginDelayingHomescreenStyleChangesForReason:
endDelayingHomescreenStyleChangesForReason:animationFactory:
newFakeBlurViewForVariant:style:transformOptions:
updateWallpaperForLocations:withCompletion:
updateWallpaperForLocations:wallpaperMode:withCompletion:
setWallpaperPresentingDelegate:
minimumHomescreenWallpaperScale
minimumLockscreenWallpaperScale
irisWallpaperPlayer
currentHomescreenStyleTransitionState
noteWillAnimateToInterfaceOrientation:duration:
T@"<SBWWallpaperPresentingDelegate>",W,N
T@"<SBFIrisWallpaperPlaying>",R,N
T{?=qqd},R,N
averageColorInRect:forVariant:
contrastForVariant:
contrastInRect:forVariant:
viewWillTransitionToSize:withTransitionCoordinator:
shouldAutorotate
_canShowWhileLocked
setWallpaperConfigurationManager:
noteWallpapersDidUpdate
wallpaperEffectImageForStyle:variant:traitCollection:result:
beginSimulatedLiveWallpaperTouchWithReason:
endSimulatedLiveWallpaperTouchWithReason:
_removeWallpaperScaleAssertion:withAnimationFactory:
_invalidateWallpaperAssertion:
_registerFakeBlurView:
_unregisterFakeBlurView:
_sourceForFakeBlurView:
setCachingIdentifier:
reachabilityCoordinator
setReachabilityCoordinator:
fixedOrientation
setFixedOrientation:
lockscreenWallpaperView
homescreenWallpaperView
sharedWallpaperView
fakeBlurViewOverrideTraitCollection
_wallpaperContainerView
_lockscreenObservers
_homescreenObservers
_suspendColorSamplingAssertions
_suspendWallpaperAnimationAssertions
_requireWallpaperAssertions
_hideHomescreenWallpaperReasons
_hideLockscreenWallpaperReasons
_displayedVariant
_lockscreenOnlyWallpaperAlpha
_lockscreenBlurViews
_homescreenBlurViews
_disallowRasterizationBlockCount
_disallowRasterizationReasonsHomeVariant
_disallowRasterizationReasonsLockVariant
_homescreenStyleChangeDelayReasons
_wallpaperDefaults
_wallpaperEnableDimmingObserver
_homescreenWallpaperScaleAssertions
_fixedOrientation
_wallpaperConfigurationManager
_wallpaperPresentingDelegate
_lockscreenWallpaperScale
_cachingIdentifier
_reachabilityCoordinator
_lockscreenWallpaperView
_homescreenWallpaperView
_sharedWallpaperView
_homescreenStyleInfo
_lockscreenStyleInfo
_fakeBlurViewOverrideTraitCollection
T@"SBFWallpaperView",&,N,V_lockscreenWallpaperView
T@"SBFWallpaperView",&,N,V_homescreenWallpaperView
T@"SBFWallpaperView",&,N,V_sharedWallpaperView
T@"SBWallpaperStyleInfo",R,N,V_homescreenStyleInfo
T@"SBWallpaperStyleInfo",R,N,V_lockscreenStyleInfo
T@"UITraitCollection",&,N,V_fakeBlurViewOverrideTraitCollection
T@"SBFWallpaperConfigurationManager",&,N,V_wallpaperConfigurationManager
T@"NSString",C,N,V_cachingIdentifier
T@"<SBWallpaperReachabilityCoordinating>",&,N,V_reachabilityCoordinator
TB,N,V_fixedOrientation
T@"<SBWWallpaperPresentingDelegate>",W,N,V_wallpaperPresentingDelegate
Td,N,V_lockscreenWallpaperScale
isInvalidated
setInvalidated:
wallpaperViewController
appendPointer:withName:
appendInteger:withName:
reason
appendBool:withName:ifEqualTo:
_invalidated
_wallpaperViewController
_type
_reason
invalidated
TB,N,GisInvalidated,V_invalidated
T@"SBWWallpaperViewController",R,W,N,V_wallpaperViewController
Tq,R,V_type
T@"NSString",R,C,N,V_reason
invalidateWithAnimationFactory:
appendFloat:withName:
_scale
Td,R,V_scale
stringWithFormat:
archivedDataWithRootObject:requiringSecureCoding:error:
unarchivedObjectOfClass:fromData:error:
initWithVariant:desiredStyle:traitCollection:slotIdentifier:forResponseOnQueue:withHandler:
T@"UITraitCollection",R,C,N
initWithEntitlement:additionalCredentials:
setDomain:
identifier
setService:
listenerWithConfigurator:
array
serviceQuality
setServiceQuality:
interface
setInterface:
setInterfaceTarget:
_queue_removeConnection:
setTargetQueue:
configureConnection:
remoteProcess
auditToken
authenticateAuditToken:
_queue_addConnection:
activate
setWallpaperImage:adjustedImage:thumbnailData:imageHashData:wallpaperOptions:forLocations:currentWallpaperMode:
setProceduralWallpaperIdentifier:options:locations:
removeWallpaperVideo
setWallpaperWithVideo:sandboxToken:cropRect:wallpaperMode:
restoreDefaultWallpaper
setWallpaperColor:darkColor:forLocations:
setWallpaperGradient:forLocations:
getWallpaperOptionsForVariant:
getWallpaperLegibilitySettingsForVariant:
listener:didReceiveConnection:withContext:
_clientAuthenticator
_queue
_connectionListener
_connections
T@"<SBWWallpaperServerDelegate>",W,N,V_delegate
_wallpaperVariantSceneSettingsDiffInspector
inspectDiff:withContext:
animationFence
_synchronizeDrawingWithFence:
inAnimationSettings
outAnimationSettings
animationSettings
observeWallpaperVariantWithBlock:
_performActionsForUIScene:withUpdatedFBSScene:settingsDiff:fromSettings:transitionContext:lifecycleActionType:
initialActionHandlers
arrayByAddingObject:
initialSettingsDiffActions
arrayWithObjects:count:
arrayByAddingObjectsFromArray:
clientSettingsClass
settingsClass
uiSceneSessionRole
uiSceneMinimumClass
initWithResponder:
timeIntervalSinceDate:
sessionDidDisconnect
sessionReconnectDelay
_lastDisconnect
_intervalMovingAverage
_alpha
initWithName:onQueue:
_addStateCaptureHandlers
_updateViewMode
isEqualToString:
_updateWallpaperSceneSettingsWithBlock:
isValid
_acquireSceneModeAssertionForReason:sceneMode:
setNullificationHandler:
_performWithLiveScene:
_setupScene
_updateFallbackView
transitionDuration
hasDifferentColorAppearanceComparedToTraitCollection:
_acquireLiveModeAssertionForReason:
scheduledTimerWithTimeInterval:repeats:block:
setUserInterfaceStyle:
responderWithHandler:
setWithArray:
imageSlot
setImageSlot:
_cachedBlurAssetForVariant:requestedStyle:traitCollection:
initWithImage:lifetimeToken:
_blurImageFromURL:
UUID
UUIDString
initWithLifetimeToken:
setFallbackColor:
updateWithImage:
_cacheBlurImageForVariant:requestedStyle:actualStyle:traitCollection:image:imageURL:
width
sbf_imageWithIOSurface:scale:orientation:
setNeedsLayout
_sceneClientSettings
isActive
setInAnimationSettings:
setOutAnimationSettings:
windowScene
_synchronizeDrawing
_synchronizedDrawingFence
setAnimationFence:
mutableCopy
setWallpaperVariant:
updateSettings:withTransitionContext:
setHomescreenWallpaperAlpha:
setLockscreenWallpaperAlpha:
_sceneSettings
_updateHomescreenWallpaperScaleWithAnimationSettings:
initWithScale:forReason:invalidationBlock:
transitionContext
setAnimationSettings:
updateSettingsWithTransitionBlock:
_disallowRasterizationReasonsForVariant:
setDisallowHomescreenRasterization:
setDisallowLockscreenRasterization:
_hideWallpaperReasonsForVariant:
setHomescreenWallpaperHidden:
setLockscreenWallpaperHidden:
setColorSamplingSuspended:
_simpleAssertionWithReasonsSet:identifier:reason:updater:
setWallpaperAnimationSuspended:
setLiveWallpaperInteractive:
_updateWallpaperSceneSettingsWithBlock:postUpdateBlock:
highestPriorityStyleTransitionState
setWallpaperStyleTransitionState:forPriority:
setHomescreenStyleTransitionState:
setLockscreenStyleTransitionState:
removeWallpaperStyleTransitionStateForPriority:
setWallpaperRequired:
setHomescreenStyleChangesDelayed:
initWithVariant:wallpaperPresenter:wallpaperLegibilityProvider:
initWithVariant:imageProvider:fakeBlurRegistry:wallpaperViewDelegate:transformOptions:reachabilityCoordinator:
setQueue:
setTimeout:
settingsWithDuration:
setInterfaceOrientation:
initWithStyle:
clearColor
setLiveWallpaperTouchActive:
_updateBlurViewsForVariant:
_effectiveSceneMode
evaluateWithInspector:context:
succinctDescriptionForObject:
appendArraySection:withName:skipIfEmpty:objectTransformer:
appendString:withName:
appendObject:withName:skipIfNil:
_setupSceneWithCompletion:
eventWithName:handler:
executeOrInsertEvent:atPosition:
updateSettingsWithBlock:
_notifyAllObserversOfNewWallpaperScene
removeAllObjects
_modifySceneSettings:forSceneMode:
performUpdate:withCompletion:
identityForEmbeddedApplicationIdentifier:
setIdentifier:
specification
setSpecification:
identityForProcessIdentity:
setClientIdentity:
createScene:
layerManager
addObserver:
mainConfiguration
activeInterfaceOrientation
setDisplayConfiguration:
setHomescreenWallpaperScale:
configureParameters:
uiPresentationManager
createPresenterWithIdentifier:
setPresentedLayerTypes:
setAppearanceStyle:
modifyPresentationContext:
presentationView
systemTealColor
setBackgroundColor:
initWithIdentifier:forReason:invalidationBlock:
_computeHomescreenWallpaperScale
reconfigureFromProvider
_invalidateBlurCacheForVariant:
updateImageFromProviderForWallpaperMode:
setObject:forKeyedSubscript:
keysOfEntriesPassingTest:
removeObjectsForKeys:
floatValue
initWithCGImage:scale:orientation:wallpaperFileURL:
sceneMode
setActivityMode:
setForeground:
deactivateWithTransitionContext:
_updateSceneModeWithCompletion:
_scheduleSceneDeactivation
_cancelSceneDeactivation
updateSettings:withTransitionContext:completion:
_acquireSceneModeAssertionForReason:sceneMode:completion:
_updateSceneMode
initWithIdentifier:forReason:sceneMode:invalidationBlock:
setViewMode:
deactivate
_setSceneModeAssertionForViewMode:
bs_map:
dictionaryWithObjects:forKeys:count:
sceneContentStateDidChange:
sceneDidActivate:
sceneWillDeactivate:withError:
sceneDidInvalidate:
scene:clientDidConnect:
scene:didPrepareUpdateWithContext:
scene:didApplyUpdateWithContext:
scene:didCompleteUpdateWithContext:error:
scene:didUpdateClientSettingsWithDiff:oldClientSettings:transitionContext:
scene:didReceiveActions:
sceneDidDeactivate:withError:
sceneLayerManagerDidStartTrackingLayers:
sceneLayerManagerDidStopTrackingLayers:
sceneLayerManagerDidUpdateLayers:
newImageProviderView
imageForWallpaperStyle:variant:traitCollection:
updateImageProviderView:withImage:
parallaxFactorForVariant:
parallaxEnabledForVariant:
zoomFactorForVariant:
acquireActiveWallpaperSceneAssertionWithAction:completion:
supportedInterfaceOrientations
viewMode
_scene
_scenePresenter
_reconnectPolicy
_fakeBlurCache
_hideWallpaperReasonsHomeVariant
_hideWallpaperReasonsLockVariant
_colorSamplingSuspendedReasons
_wallpaperAnimationSuspendedReasons
_wallpaperRequiredReasons
_homescreenChangesDelayedReasons
_homescreenScaleAssertions
_liveModeAssertions
_sceneModeAssertions
_externalSceneModeAssertionActions
_sceneModeAssertionForViewMode
_sceneDeactivationTimer
_scenePresentationView
_staticBackgroundView
_missingEffectViewImages
_pendingEffectViewImageSlots
_eventQueue
_remoteIrisWallpaperPlayer
_stateCaptureHandles
_viewMode
Tq,N,V_viewMode
_sceneMode
Tq,R,N,V_sceneMode
_invalidationAnimationFactory
Td,R,N,V_scale
builder
appendInteger:
builderWithObject:ofExpectedClass:
appendInteger:counterpart:
containsTraitsInCollection:
appendEqualsBlocks:
isEqual
copyWithZone:
_requestedStyle
_traitCollection
_imageURL
initWithIdentifier:
_wallpaperSceneSettingsDiffInspector
observeLockscreenWallpaperContentsRectWithBlock:
observeLockscreenWallpaperAlphaWithBlock:
observeHomescreenWallpaperAlphaWithBlock:
observeLockscreenOnlyWallpaperAlphaWithBlock:
observeDisallowHomescreenRasterizationWithBlock:
observeDisallowLockscreenRasterizationWithBlock:
observeHomescreenWallpaperHiddenWithBlock:
observeLockscreenWallpaperHiddenWithBlock:
observeHomescreenWallpaperScaleWithBlock:
observeLockscreenWallpaperScaleWithBlock:
observeColorSamplingSuspendedWithBlock:
observeWallpaperAnimationSuspendedWithBlock:
observeWallpaperRequiredWithBlock:
observeHomescreenStyleChangesDelayedWithBlock:
observeHomescreenStyleTransitionStateWithBlock:
observeLockscreenStyleTransitionStateWithBlock:
observeLiveWallpaperTouchActiveWithBlock:
observeLiveWallpaperInteractiveWithBlock:
otherSettings
doubleValue
flagForSetting:
initWithSettings:
mutableCopyWithZone:
T@"_UILegibilitySettings",R,C,N
T@"UIColor",R,C,N
TB,R,N,GisHomescreenContentStatic
TB,R,N,GisLockscreenContentStatic
lockscreenContentLiveWallpaper
TB,R,N,GisLockscreenContentLiveWallpaper
numberWithDouble:
setFlag:forSetting:
green
blue
alpha
colorWithRed:green:blue:alpha:
getRed:green:blue:alpha:
observeCachingIdentifierWithBlock:
getHue:saturation:brightness:alpha:
_respondToActions:forFBSScene:inUIScene:fromTransitionContext:
_launchOptionsFromActions:forFBSScene:uiSceneSession:transitionContext:
appendSuper
zoomFactor
setZoomFactor:
setOpaque:
setContentsOpaque:
setContentView:
addReachabilityObserver:
removeReachabilityObserver:
transformOptions
parallaxEnabled
_allowsParallax
sizeToFit
fakeBlurView:didChangeStyle:
setTransform:
blurredImage
blurredImageURL
imageForBackdropParameters:includeTint:overrideTraitCollection:
imageURLForBackdropParameters:includeTint:overrideTraitCollection:
snapshotImage
snapshotImageURL
layoutSubviews
isWindowIgnoredForReachability:
effectiveReachabilityYOffset
willMoveToWindow:
removeAllAnimations
didMoveToWindow
superlayer
animationKeys
setSourceLayer:
valueWithCGPoint:
setSourcePoints:
setDuration:
setFillMode:
setRemovedOnCompletion:
addAnimation:forKey:
removeAnimationForKey:
_imageForStyle:withSource:
requestStyle:
effectiveStyle
offsetWallpaperBy:
observer
setObserver:
zoomScale
setZoomScale:
isFullscreen
setFullscreen:
T@"<_SBWFakeBlurObserver>",W,N
fullscreen
TB,N,GisFullscreen
TQ,N
handleReachabilityYOffsetDidChange
imageProvider
fakeBlurRegistry
_transformOptions
_effectiveStyle
_wallpaperView
_fullscreen
_providedImageView
_wallpaperOffset
_observer
_imageProvider
_fakeBlurRegistry
TB,N,GisFullscreen,V_fullscreen
T@"<_SBWFakeBlurImageProviding>",R,W,N,V_imageProvider
T@"<_SBWFakeBlurViewRegistering>",R,W,N,V_fakeBlurRegistry
T@"<SBWallpaperReachabilityCoordinating>",R,N,V_reachabilityCoordinator
T@"<_SBWFakeBlurObserver>",W,N,V_observer
TQ,N,V_transformOptions
_updateBackgroundColor
wallpaperPresenter
superview
wallpaperLegibilityProvider
didMoveToSuperview
_wallpaperLegibilityProvider
T@"<SBWWallpaperPresenting>",R,W,N,V_wallpaperPresenter
T@"<SBWWallpaperLegibilityProviding>",R,W,N,V_wallpaperLegibilityProvider
enumerateValidPrioritiesUsingBlock:
_priorityInfo
_wallpaperEffectView
_styleTransitionState
T@"SBWWallpaperEffectViewBase",&,N,V_wallpaperEffectView
T{?=qqd},N,V_styleTransitionState
appendUnsignedInteger:
appendCGFloat:
appendDouble:withName:decimalPrecision:
initWithXPCDictionary:
encodeWithXPCDictionary:
fallbackXPCEncodableClass
diffFromWallpaperWindowSceneStyleTransitionState:updateHandler:removeHandler:
_stateTable
setAllowsEdgeAntialiasing:
appendFloat:withName:decimalPrecision:
setBlurView:
setTransitionBlurView:
_configureFromScratch
_isEffectivelyFullscreen
_configureViewsForFullscreen:
_setTransitionFraction:
_configureForCurrentBlurStyle
_updateWallpaperAverageColor:
setStyle:
_needsBlurViewForStyle:
setMaskImageView:
setMask:
setTintMaskingContainer:
setBlurMaskingContainer:
_configureViews
_configureGrayscaleAndColorTintViewForStartStyle:
setGrayscaleTintView:
setColorTintView:
setTransitionGrayscaleTintView:
setTransitionColorTintView:
grayscaleTintAlpha
grayscaleTintLevel
colorWithWhite:alpha:
grayscaleTintView
transitionGrayscaleTintView
colorTintAlpha
colorTint
colorWithAlphaComponent:
colorTintView
transitionColorTintView
initWithCoder:
setMaskImage:masksBlur:masksTint:
wallpaperStyle
setWallpaperStyle:
setBarTintColor:
setBarStyle:
setTranslucent:
setBarWantsAdaptiveBackdrop:
appearanceStorage
setAppearanceStorage:
updateBackgroundImage
_setIsContainedInPopover:
_setFrame:forceUpdateBackgroundImage:
forcesOpaque
blurView
transitionBlurView
maskImageView
blurMaskingContainer
tintMaskingContainer
_wallpaperAverageColor
_startStyle
_endStyle
_transitionFraction
_blurView
_grayscaleTintView
_colorTintView
_transitionBlurView
_transitionGrayscaleTintView
_transitionColorTintView
_maskImageView
_blurMaskingContainer
_tintMaskingContainer
_maskImage
_shouldMaskBlur
_shouldMaskTint
_forcesOpaque
_accessibilityReduceTransparencyEnabled
T@"UIView<_SBWFakeBlur>",&,N,V_blurView
T@"UIView",&,N,V_grayscaleTintView
T@"UIView",&,N,V_colorTintView
T@"UIView<_SBWFakeBlur>",&,N,V_transitionBlurView
T@"UIView",&,N,V_transitionGrayscaleTintView
T@"UIView",&,N,V_transitionColorTintView
T@"UIImageView",&,N,V_maskImageView
T@"UIView",&,N,V_blurMaskingContainer
T@"UIView",&,N,V_tintMaskingContainer
T@"<SBWWallpaperPresenting><SBWWallpaperLegibilityProviding>",R,N,V_wallpaperPresenter
TB,N,V_forcesOpaque
_initWithImage:lifetimeToken:
_deferredImageSlot
_setImage:
lifetimeToken
_lifetimeToken
T@"UIImage",&,S_setImage:,V_image
T@"<BSInvalidatable>",R,N,V_lifetimeToken
deferredImageSlot:didUpdateImage:
addImageSlotObserver:
removeImageSlotObserver:
fallbackColor
_imageSlotObservers
_fallbackColor
T@"UIColor",&,N,V_fallbackColor
_updateWithImage:
invalidateIntrinsicContentSize
_pointSize
intrinsicContentSize
sizeThatFits:
_imageView
_imageSlot
T@"SBWImageSlot",&,N,V_imageSlot
T@"BSAnimationSettings",C,N
CGRectValue
valueWithCGRect:
T{CGRect={CGPoint=dd}{CGSize=dd}},N
T@"NSString",C,N
T@"SBWWallpaperWindowSceneStyleTransitionState",C,N
q16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
d16@0:8
B16@0:8
@16@0:8
v24@0:8d16
v24@0:8@16
v20@0:8B16
v24@0:8q16
v16@0:8
v24@0:8@?16
v40@0:8q16@24@32
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8B16B20
v32@0:8@16@24
@"SBWImageSlotRepository"
v32@0:8Q16@?24
@24@0:8@16
v64@0:8@16{CGSize=dd}24q40@48@56
B24@0:8@16
{CGSize=dd}24@0:8@16
q24@0:8@16
@"NSMutableSet"
@"NSMutableDictionary"
v24@0:8^{CGImageBlockSet=}16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
^{CGImageBlockSet=}
@"IOSurface"
@"NSURL"
@"UIImage"
{CGSize="width"d"height"d}
@40@0:8@16@24@?32
@24@0:8Q16
@40@0:8q16@24Q32
@48@0:8q16{CGSize=dd}24@40
v48@0:8q16@24@32@?40
B56@0:8{?=qqd}16q40@48
v40@0:8{?=qqd}16
@24@0:8q16
v32@0:8@16q24
@48@0:8q16{?=qqd}24
B24@0:8q16
B40@0:8{?=qqd}16
@"<SBWWallpaperPresenting><SBWWallpaperLegibilityProviding>"
@"SBWWallpaperEffectViewBase"
@"<BSInvalidatable>"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
@"UIGestureRecognizer"16@0:8
@"<SBFIrisWallpaperPlayerDelegate>"16@0:8
v24@0:8@"<SBFIrisWallpaperPlayerDelegate>"16
@"UILongPressGestureRecognizer"
@"<SBFIrisWallpaperPlayerDelegate>"
@"<SBWRemoteIrisWallpaperPlayerDelegate>"
@40@0:8q16q24@32
B32@0:8@16q24
@32@0:8@16q24
v32@0:8@"SBFWallpaperConfigurationManager"16q24
B32@0:8@"SBFWallpaperConfigurationManager"16q24
@"_UILegibilitySettings"32@0:8@"SBFWallpaperConfigurationManager"16q24
v24@0:8@"<SBFLegibilitySettingsProvider>"16
v32@0:8@16d24
v24@0:8@"SBFWallpaperView"16
v32@0:8@"SBFWallpaperView"16d24
v32@0:8@"PTSettings"16@"NSString"24
@"NSString"24@0:8@"NSString"16
@"BSDescriptionBuilder"24@0:8@"NSString"16
@"BSDescriptionBuilder"16@0:8
@32@0:8@16Q24
@"SBFWallpaperConfiguration"32@0:8@"SBFWallpaperView"16Q24
v32@0:8d16q24
@32@0:8d16@24
v32@0:8d16@24
v36@0:8B16q20@28
B48@0:8q16q24q32@40
B64@0:8{?=qqd}16q40q48@56
B40@0:8q16q24@32
@40@0:8q16q24Q32
v32@0:8q16@?24
v40@0:8q16q24@?32
{?=qqd}16@0:8
v32@0:8q16d24
v48@0:8q16@"BSUIAnimationFactory"24@"BSUIAnimationFactory"32@?<v@?>40
v32@0:8@"<SBWallpaperObserver>"16q24
@"<SBWWallpaperScaleInvalidating>"32@0:8d16@"BSUIAnimationFactory"24
v32@0:8d16@"BSUIAnimationFactory"24
v36@0:8B16q20@"NSString"28
@"<BSInvalidatable>"24@0:8@"NSString"16
B48@0:8q16q24q32@"BSUIAnimationFactory"40
B64@0:8{?=qqd}16q40q48@"BSUIAnimationFactory"56
B40@0:8q16q24@"BSUIAnimationFactory"32
v24@0:8@"NSString"16
v32@0:8@"NSString"16@"BSUIAnimationFactory"24
@"UIView<_SBWFakeBlur>"40@0:8q16q24Q32
v32@0:8q16@?<v@?>24
v40@0:8q16q24@?<v@?>32
@"<SBWWallpaperPresentingDelegate>"16@0:8
v24@0:8@"<SBWWallpaperPresentingDelegate>"16
@"<SBFIrisWallpaperPlaying>"16@0:8
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48d56
d24@0:8q16
d56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
@"_UILegibilitySettings"24@0:8q16
@"UIColor"24@0:8q16
@"UIColor"56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
@"UIColor"64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48d56
@32@0:8@16@24
v40@0:8{CGSize=dd}16@32
v48@0:8q16q24@32@?40
B36@0:8B16@20@28
v48@0:8q16Q24q32@?40
B40@0:8@16@24q32
v32@0:8Q16q24
v40@0:8q16Q24q32
B56@0:8q16^{?=qqd}24^{?=qqd}32^@40^@48
B32@0:8q16@24
@32@0:8q16q24
@40@0:8q16Q24q32
Q44@0:8q16B24@28Q36
#24@0:8q16
@44@0:8@16q24B32Q36
v40@0:8@16@24@32
@"UIView"
@"NSHashTable"
@"SBWallpaperDefaults"
@"<BSDefaultObserver>"
@"SBFWallpaperConfigurationManager"
@"<SBWWallpaperPresentingDelegate>"
@"NSString"
@"<SBWallpaperReachabilityCoordinating>"
@"SBFWallpaperView"
@"SBWallpaperStyleInfo"
@"UITraitCollection"
@40@0:8@16q24@32
@"SBWWallpaperViewController"
v24@0:8@"BSUIAnimationFactory"16
@32@0:8@16d24
@64@0:8q16q24@32@40@48@?56
v40@0:8@"BSServiceConnectionListener"16@"BSServiceConnection<BSServiceConnectionHost>"24@"<BSXPCDecoding>"32
B72@0:8@16@24@32@40@48@56@64
B48@0:8@16@24@32@40
B40@0:8@16@24@32
B72@0:8@"NSObject<OS_xpc_object>"16@"NSObject<OS_xpc_object>"24@"NSData"32@"NSData"40@"SBFWallpaperOptions"48@"NSString"56@"NSString"64
v40@0:8@"NSString"16@"NSDictionary"24@"NSString"32
B48@0:8@"NSURL"16@"NSData"24@"NSString"32@"NSString"40
B40@0:8@"UIColor"16@"UIColor"24@"NSString"32
B32@0:8@"SBFGradient"16@"NSString"24
@"SBFWallpaperOptions"24@0:8@"NSString"16
@"_UILegibilitySettings"24@0:8@"NSString"16
@"FBServiceClientAuthenticator"
@"NSObject<OS_dispatch_queue>"
@"BSServiceConnectionListener"
@"NSMutableArray"
@"<SBWWallpaperServerDelegate>"
v60@0:8@16@24@32@40@48I56
v60@0:8@"UIScene"16@"FBSScene"24@"FBSSceneSettingsDiff"32@"FBSSceneSettings"40@"FBSSceneTransitionContext"48I56
@"SBWWallpaperWindowSceneSettingsDiffInspector"
@"NSDate"
v48@0:8@16@24@32@40
v24@0:8@"FBScene"16
v32@0:8@"FBScene"16@"NSError"24
v32@0:8@"FBScene"16@"FBSceneClientHandle"24
v32@0:8@"FBScene"16@"FBSceneUpdateContext"24
v40@0:8@"FBScene"16@"FBSceneUpdateContext"24@"NSError"32
v48@0:8@"FBScene"16@"FBSSceneClientSettingsDiff"24@"FBSSceneClientSettings"32@"FBSSceneTransitionContext"40
v32@0:8@"FBScene"16@"NSSet"24
v24@0:8@"FBSceneLayerManager"16
@40@0:8N^q16q24@32
@"UIView"16@0:8
@40@0:8N^q16q24@"UITraitCollection"32
B32@0:8@"UIView"16@24
v24@0:8@"_SBWFakeBlurView"16
v28@0:8@16B24
v28@0:8@"SBWRemoteIrisWallpaperPlayer"16B24
v32@0:8@16@?24
v32@0:8@?16@?24
@48@0:8@16@24@32@?40
v64@0:8q16q24q32@40@48@56
@40@0:8@16q24@?32
@"FBScene"
@"<UIScenePresenter>"
@"<SBWSessionReconnectPolicy>"
@"NSTimer"
@"UIView<UIScenePresentation>"
@"SBWWallpaperStaticBackgroundView"
@"BSEventQueue"
@"SBWRemoteIrisWallpaperPlayer"
@48@0:8@16@24q32@?40
@40@0:8d16@24@?32
@"BSUIAnimationFactory"
@24@0:8^{_NSZone=}16
@48@0:8@16@24@32@40
@"NSSet"48@0:8@"NSSet"16@"FBSScene"24@"UIScene"32@"FBSSceneTransitionContext"40
@"_UISceneConnectionOptionsContext"48@0:8@"NSSet"16@"FBSScene"24@"UISceneSession"32@"FBSSceneTransitionContext"40
@32@0:8N^q16@24
@40@0:8N^q16@24@32
v32@0:8{CGPoint=dd}16
v24@0:8Q16
@"<_SBWFakeBlurObserver>"16@0:8
v24@0:8@"<_SBWFakeBlurObserver>"16
@64@0:8q16@24@32@40Q48@56
@48@0:8q16@24Q32@40
{CGPoint="x"d"y"d}
@"<_SBWFakeBlurObserver>"
@"<_SBWFakeBlurImageProviding>"
@"<_SBWFakeBlurViewRegistering>"
v32@0:8@"_UILegibilitySettings"16q24
@32@0:8q16@24
@40@0:8q16@24@32
@"<SBWWallpaperPresenting>"
@"<SBWWallpaperLegibilityProviding>"
{?=B{?=qqd}}24@0:8q16
v56@0:8{?=B{?=qqd}}16q48
[12{?="valid"B"styleTransitionState"{?="startStyle"q"endStyle"q"transitionFraction"d}}]
{?="startStyle"q"endStyle"q"transitionFraction"d}
@24@0:8@"NSObject<OS_xpc_object>"16
v24@0:8@"NSObject<OS_xpc_object>"16
v48@0:8{?=qqd}16q40
v40@0:8@16@?24@?32
[12{?="valid"B"state"{?="startStyle"q"endStyle"q"transitionFraction"d}}]
v32@0:8@"UIView<_SBWFakeBlur>"16q24
@40@0:8@16q24Q32
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
B24@0:8N^{?=qqd}16
v32@0:8@16B24B28
v52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16B48
@"UIColor"
@"UIView<_SBWFakeBlur>"
@"UIImageView"
v32@0:8@"SBWDeferredImageSlot"16@"UIImage"24
{CGSize=dd}32@0:8{CGSize=dd}16
@"SBWImageSlot"
@(#)PROGRAM:SpringBoardWallpaper  PROJECT:SpringBoard-1
333333
 #&),/25
"%(+.147:=@CFILORUXd[^a
ffffff
?333333
?333333
$@333333
 #&),/258;
SBWWallpaperSceneSessionRoleWallpaper
v16@?0@"SBWMutableWallpaperWindowSceneClientSettings"8
SBWWallpaperWindowSceneSettings
SBWWallpaperWindowSceneClientSettings
SBWMutableWallpaperWindowSceneClientSettings
v16@?0@"FBSMutableSceneClientSettings"8
v32@?0@"UIImage"8@"NSURL"16q24
v8@?0
Update and prewarm
v24@?0Q8^v16
slotIdentifier
actualStyle
size
imageURL
ioSurface
SBWallpaperEffectViewIsDarkOrHiddenReason
v12@?0B8
variant
SBWErrorDomain
locations
wallpaperMode
SBWallpaperBackdropGroupName
SBWallpaperViewIsDarkOrHiddenReason
enableWallpaperDimming
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
SBFIrisWallpaperView
settingVariant
SBWWallpaperViewController.m
invalid wallpaper style priority (%i)
Invalid parameter not satisfying: %@
reason
Invalid wallpaper variant to legibilitySettingsForVariant:
HomeScreen
StyleInfo
homescreenStyleChangeDelayReasons
LockScreen
suspendColorSamplingAssertions
suspendWallpaperAnimationAssertions
requireWallpaperAssertions
wallpaperConfigurationManager
unpaired disallowRastrizationBlock decrement
v24@?0q8^B16
.Solid_Black
.Solid Black
SpringBoard
SkipPrecacheWallpaperStyles
WallpaperStyleHidden
com.apple.SpringBoardServer.GenerateStaticWallpaperThumbnailImages
SkipPrewarmWallpaperAlternateMode
This assertion was not invalidated before dealloc!
wallpaperViewController
type
isInvalidated
scale
%@ -> %@ (%.02f)
Default
Alert
AlertAnimation
Application
ApplicationAnimation
GuidedAccess
Medusa
MedusaAnimation
PushPop
Switcher
SystemGesture
INVALID
TestingOnly
desiredStyle
traitCollection
identifier
com.apple.PaperBoard.SBWWallpaperServer.queue
com.apple.paperboard
v16@?0@"<BSServiceConnectionListenerConfiguring>"8
v16@?0@"BSServiceConnection"8
v16@?0@"<BSServiceConnectionConfiguring>"8
SBWWallpaperWindowScene
SBWWallpaperWindowSceneVariantSettingsDiffAction.m
windowScene
windowSceneSettings
SBWWallpaperWindowSceneTwoCurveTransitionContext
v16@?0^v8
SBWallpaperWorkspaceIdentifier
v16@?0@"SBWMutableWallpaperWindowSceneSettings"8
External assertion
traitCollectionDidChange
v16@?0@"NSTimer"8
v16@?0@"BSActionResponse"8
DidChangeWallpaperConfiguration
SBWImageSlotView
SBWImageSlot
unfulfilled
fulfilled
ImageForWallpaperStyle
SBWWallpaperEffectImageRequestActionResponse
SBWMutableWallpaperWindowSceneSettings
Wallpaper scale %f
v24@?0@"BSSimpleAssertion"8@"BSUIAnimationFactory"16
@"FBSSceneTransitionContext"16@?0@"FBSMutableSceneSettings"8
ColorSamplingSuspended
WallpaperAnimationSuspended
WallpaperRequired
UpdateWallpaperForLocations
wallpaperWillChange
wallpaperDidChange
scenePresenter
reconnectPolicy
lockscreenObservers
@16@?0@8
homescreenObservers
lockscreenBlurViews
homescreenBlurViews
disallowRasterizationReasonsLockVariant
disallowRasterizationReasonsHomeVariant
hideWallpaperReasonsLockVariant
hideWallpaperReasonsHomeVariant
colorSamplingSuspendedReasons
wallpaperAnimationSuspendedReasons
wallpaperRequiredReasons
homescreenChangesDelayedReasons
homescreenScaleAssertions
liveModeAssertions
sceneModeAssertions
externalSceneModeAssertionActions
sceneModeAssertionForViewMode
scenePresentationView
staticBackgroundView
missingEffectViewImages
pendingEffectViewImageSlots
eventQueue
remoteIrisWallpaperPlayer
cachingIdentifier
reachabilityCoordinator
wallpaperPresentingDelegate
viewMode
sceneDeactivationTimer
scene
Perform with live scene
Update scene settings
v16@?0@"FBSMutableSceneSettings"8
v20@?0B8@"NSError"12
Setup scene
v24@?0@"FBSMutableSceneSettings"8@"FBSSceneTransitionContext"16
v16@?0@"<FBSceneCreating>"8
com.apple.PaperBoard
sceneID:com.apple.PaperBoard-wallpaper
v16@?0@"FBSMutableSceneParameters"8
SBWWallpaperRemoteViewController-%ld
v16@?0@"UIMutableScenePresentationContext"8
SBWWallpaperRemoteViewController.m
reasonsSet
updater
v16@?0@"BSSimpleAssertion"8
B32@?0@"_SBWFakeBlurConfiguration"8@"_SBWFakeBlurAsset"16^B24
Update scene mode to idle
SBWWallpaperRemoteViewController.sceneMode
SBWWallpaperRemoteViewController.liveMode
viewMode must not be set to .Unknown except at initialization
View Mode
SBWWallpaperRemoteViewController - %p
@8@?0
SBWWallpaperRemoteViewController - %p - Scene
SBWWallpaperRemoteViewController - %p - SceneMode
@16@?0@"_SBWWallpaperRemoteViewControllerSceneModeAssertion"8
SBWWallpaperRemoteViewController - %p - ViewMode
View Mode Assertions
@16@?0@"<BSInvalidatable>"8
SBWWallpaperRemoteViewController - %p - WallpaperConfigurationManager
sceneMode
invalidationBlock
_SBWallpaperRemoteViewControllerScaleAssertion
WallpaperScale
q8@?0
B8@?0
requestedStyle
traitCollection.userInterfaceStyle
image
Unspecified
Light
Dark
Unknown (%ld)
unknown
effect-view
live-scene
idle
background support
foreground support
foreground
SBWWallpaperWindowSceneSettingsDiffAction.m
homescreenMinimumWallpaperScale
lockscreenMinimumWallpaperScale
homescreenLegibilitySettings
lockscreenLegibilitySettings
homescreenAverageColor
lockscreenAverageColor
homescreenContrast
lockscreenContrast
homescreenParallaxFactor
lockscreenParallaxFactor
homescreenParallaxEnabled
lockscreenParallaxEnabled
homescreenZoomFactor
lockscreenZoomFactor
homescreenContentStatic
lockscreenContentStatic
lockscreenContentLiveWallpaper
liveWallpaperPlaybackState
Normal
Hidden
Black
Blur
UltraLightBlurOnly
SemiLightBlurOnly
FlatSemiLightBlurOnly
LightBlurOnly
DarkBlurOnly
UltraLightTintedBlur
SemiLightTintedBlur
FlatSemiLightTintedBlur
LightTintedBlur
MediumTintedBlur
MediumGrayTintedBlur
DarkTintedBlur
UltraLightTintOnly
SemiLightTintOnly
FlatSemiLightTintOnly
LightTintOnly
DarkTintOnly
DarkerTintOnly
BackgroundLightBlurOnly
BackgroundLightTintedBlur
BackgroundLightTintOnly
ForegroundLightBlurOnly
ForegroundLightTintedBlur
ForegroundLightTintOnly
DockTintedBlur
IconComponentBlur
(%li)
com.apple.springboard.wallpaper-access
com.apple.springboard.setWallpaperVariant
effectiveStyle
style
AlignFakeWallpaperToLayer-%p
UIImageView
UIImage
_SBWFakeBlurView.m
Unexpected variant %@ (expected %@)
Bad index to priorityInfoAtIndex:
Bad index to setPriorityInfo:atIndex:
Bad index to removePriorityInfoForPriority:
styleTransitionState
priorityInfo
table
priority
startStyle
endStyle
transitionFraction
-initWithFrame: unavailable
This class does not support unarchiving from a nib
SBWWallpaperEffectViewBase.m
SBWallpaperEffectView does not support style Hidden
inAnimationSettings
outAnimationSettings
wallpaperVariant
lockscreenWallpaperContentsRect
lockscreenWallpaperAlpha
homescreenWallpaperAlpha
lockscreenOnlyWallpaperAlpha
disallowHomescreenRasterization
disallowLockscreenRasterization
homescreenWallpaperHidden
lockscreenWallpaperHidden
homescreenWallpaperScale
lockscreenWallpaperScale
colorSamplingSuspended
wallpaperAnimationSuspended
wallpaperRequred
homescreenStyleChangesDelayed
homescreenStyleTransitionState
lockscreenStyleTransitionState
liveWallpaperTouchActive
liveWallpaperInteractive
Disabling parallax because of requested wallpaper style
Enabling parallax because of requested wallpaper style
Adding wallpaper animation (and parallax) assertion: %@ 
All assertions: %@
Set wallpaper style state for priority %li for variant %{public}@ to %{public}@
Remove wallpaper style for priority %li for variant %{public}@
Removing wallpaper animation (and parallax) assertion: %@ 
All assertions: %@
Substituting flat color '%@' for wallpaper with name '%@'
Disabling dynamic wallpapers and parallax because of requested wallpaper style
Enabling dynamic wallpapers and parallax because of requested wallpaper style
SBWWallpaperServer received connection: %{public}@
SBWWallpaperServer received connection invalidation: %{public}@
Adding Connection: %{public}@
Removing Connection: %{public}@
Acquiring foreground scene mode assertion %p for external assertion action %{public}@
Invalidating foreground scene mode assertion %p
Acquiring live scene view mode assertion for appearance change
Releasing live scene view mode assertion for appearance change
Setting wallpaper mode to %@
Wallpaper did change for variants: %{public}@
Acquiring foreground support scene mode assertion for wallpaper change
Releasing foreground support scene mode assertion for wallpaper change
Fetching image for wallpaper style:%{public}@ variant:%{public}@ traitCollection.userInterfaceStyle:%{public}@
Satisfied image request from cache with image %{public}@
Satisfied image request from cache with image URL %{public}@
Received cached image URL %{public}@ but could not load image.
Image slot invalidated: %{public}@ (%{public}@)
Acquiring foreground scene mode assertion for image request %{public}@
Sending image slot request action for image slot request %{public}@
Releasing foreground scene mode assertion for image request %{public}@
Received image URL %{public}@ resulting in image %{public}@ for image request %{public}@
Received IOSurface %{public}@ size %{public}@ for image request %{public}@
Unexpected response %{public}@ for image request %{public}@
Did not receive response for image request %{public}@
Sending image request action for image slot request %{public}@
Setting wallpaper variant to %{public}@ from %{public}@
Setting alpha %f for variant %{public}@
Setting lockscreen wallpaper contents rect %{public}@
Setting lockscreen-only wallpaper alpha %f
Removing invalidated homescreen wallpaper scale assertion %p (scale %f)
Acquiring homescreen wallpaper scale assertion %p (scale %f)
Setting lockscreen wallpaper scale to %f
Setting rasterization disabled:%{BOOL}u for variant %{public}@ with reason %{public}@ (was disabled: %{BOOL}u)
Setting wallpaper hidden:%{BOOL}u for variant %{public}@ with reason %{public}@ (was hidden: %{BOOL}u)
Color sampling suspension assertion for reason %{public}@ invalidated. Setting sampling suspended:%{BOOL}u
Suspending color sampling for reason %{public}@ assertion %p
Animation suspension assertion for reason %{public}@ invalidated. Setting sampling suspended:%{BOOL}u
Suspending animation for reason %{public}@ assertion %p
Updating iris wallpaper for interactive mode
Updating view mode after updating iris wallpaper for interactive mode
Updating iris wallpaper for static mode
Updating view mode after updating iris wallpaper for static mode
Setting wallpaper style transition state %{public}@ for priority %{public}@ variant %{public}@. Is different:%{BOOL}u
Removing wallpaper style transition state for priority %{public}@ variant %{public}@. Is different:%{BOOL}u
Ending wallpaper requiring with reason %{public}@. Setting wallpaper required:%{BOOL}u
Beginning wallpaper requiring for reason %{public}@ assertion %p
Sending wallpaper preheat action for variant %{public}@
Beginning delaying homescreen style changes for reason %{public}@
Ending delaying homescreen style changes for reason %{public}@. Remaining reasons: %ld
Acquiring foreground support scene mode assertion for wallpaper update
Invalidating foreground support scene mode assertion for wallpaper update
Sending wallpaper update locations action for locations %{public}@ wallpaper mode %{public}@
Setting live wallpaper touch active: %{BOOL}u
Received action %{public}@
Acquiring live scene view mode assertion %p for wallpaper will change.
Invalidating live scene view mode assertion %p for wallpaper will change.
Acquiring live scene view mode assertion %p for wallpaper did change.
Invalidating live scene view mode assertion %p for wallpaper did change.
Remote wallpaper controller %p scene did deactivate with error: %@
shouldReactivateForViewMode: %{BOOL}u
shouldReactivateForSceneMode: %{BOOL}u
shouldReactivateForEffectImages: %{BOOL}u
Attempting reactivation of remote wallpaper controller %p scene in %0.3f seconds.
Reactivating remote wallpaper controller scene %p.
Content-is-static changed. Updating view mode.
Live wallpaper playback state changed. Playback state: %{public}@
Scene setup completed. Success: %{BOOL}u Error: %{public}@
Activating existing wallpaper scene %{public}@
Created new wallpaper scene %{public}@
Installing live scene view on scene setup
Updating homescreen wallpaper scale from %f to %f
Caching asset %{public}@ for configuration %{public}@
Retrieved cached asset %{public}@ for configuration %{public}@
Invalidating cached assets for configurations %{public}@
Error deserializing wallpaper image from URL %{public}@: %{public}@
Modifying scene settings for scene mode %{public}@
Deactivating idle wallpaper scene due to inactivity.
Evaluating view mode. Selected %{public}@.
variant: %{public}@
contentIsStatic: %{BOOL}u
contentIsInteractiveLiveWallpaper: %{BOOL}u
lockscreen is live wallpaper: %{BOOL}u
live wallpaper is interactive: %{BOOL}u
[_liveModeAssertions count]: %ld
Updating view mode from %{public}@ to %{public}@
Removing live scene view and adding static background view
Removing static background view and adding live scene view
SBWWallpaperWindowScene
SBWWallpaperWindowSceneClientSettingsDiffInspector
SBWImageSlotRepository
_SBWImageSlotRepositoryEntry
SBWWallpaperEffectImageRequestAction
SBWWallpaperEffectImageRequestActionResponse
SBWWallpaperEffectImageRequestActionImageURLResponse
SBWWallpaperEffectImageRequestActionIOSurfaceResponse
SBWWallpaperStaticBackgroundView
SBWWallpaperDidChangeAction
SBWWallpaperDidCompleteWallpaperChangeAction
SBWRemoteIrisWallpaperPlayer
UIGestureRecognizerDelegate
NSObject
SBFIrisWallpaperPlaying
SBWWallpaperUpdateLocationsAction
SBWWallpaperUpdateActionResponse
SBWWallpaperViewController
SBFWallpaperConfigurationManagerDelegate
SBFLegibilitySettingsProviderDelegate
SBFWallpaperViewInternalObserver
PTSettingsKeyObserver
BSDescriptionProviding
SBFWallpaperViewDelegate
SBWWallpaperPresenting
SBWWallpaperLegibilityProviding
_SBWWallpaperViewControllerAssertion
BSInvalidatable
_SBWWallpaperViewControllerScaleAssertion
SBWWallpaperScaleInvalidating
SBWWallpaperImageSlotRequestAction
SBWWallpaperServer
BSServiceConnectionListenerDelegate
SBSUIWallpaperClientToServerInterface
SBWWallpaperWindowSceneVariantSettingsDiffAction
_UISceneSettingsDiffAction
SBWWallpaperWindowSceneSpecification
SBWWallpaperUpdateAndPrewarmAction
SBWDefaultSessionReconnectPolicy
SBWSessionReconnectPolicy
SBWWallpaperRemoteViewController
FBSceneDelegate
FBSceneObserver
FBSceneLayerManagerObserver
_SBWFakeBlurImageProviding
_SBWFakeBlurViewRegistering
SBWRemoteIrisWallpaperPlayerDelegate
_SBWWallpaperRemoteViewControllerSceneModeAssertion
_SBWallpaperRemoteViewControllerScaleAssertion
_SBWFakeBlurConfiguration
NSCopying
_SBWFakeBlurAsset
SBWWallpaperWindowSceneSettingsDiffAction
SBWWallpaperWindowSceneClientSettings
SBWMutableWallpaperWindowSceneClientSettings
SBWWallpaperWillChangeAction
SBWWallpaperWindowSceneSettingsDiffInspector
SBWWallpaperWindowSceneBSActionHandler
_UISceneBSActionHandler
_SBWFakeBlurView
_SBWFakeBlur
SBWallpaperReachabilityObserving
_SBAccessibilityTintView
SBWallpaperObserver
SBWallpaperStyleInfo
SBWWallpaperWindowSceneStyleTransitionState
BSXPCCoding
SBWWallpaperPreheatAction
SBWWallpaperEffectViewBase
_SBWFakeBlurObserver
_SBMaskingContainerView
_SBTintView
SBWImageSlot
SBWDeferredImageSlot
SBWImageSlotView
SBWDeferredImageSlotObserving
SBWWallpaperWindowSceneTwoCurveTransitionContext
SBWWallpaperWindowSceneSettings
SBWMutableWallpaperWindowSceneSettings
_wallpaperSceneSettings
wallpaperVariant
lockscreenWallpaperContentsRect
lockscreenWallpaperAlpha
homescreenWallpaperAlpha
lockscreenOnlyWallpaperAlpha
disallowHomescreenRasterization
disallowLockscreenRasterization
homescreenWallpaperScale
lockscreenWallpaperScale
colorSamplingSuspended
wallpaperAnimationSuspended
wallpaperRequired
homescreenStyleChangesDelayed
cachingIdentifier
homescreenStyleTransitionState
lockscreenStyleTransitionState
liveWallpaperTouchActive
liveWallpaperInteractive
_wallpaperSceneClientSettings
homescreenMinimumWallpaperScale
setHomescreenMinimumWallpaperScale:
_updateWallpaperSceneClientSettingsWithBlock:
lockscreenMinimumWallpaperScale
setLockscreenMinimumWallpaperScale:
homescreenLegibilitySettings
setHomescreenLegibilitySettings:
lockscreenLegibilitySettings
setLockscreenLegibilitySettings:
homescreenAverageColor
setHomescreenAverageColor:
lockscreenAverageColor
setLockscreenAverageColor:
homescreenContrast
setHomescreenContrast:
lockscreenContrast
setLockscreenContrast:
homescreenParallaxFactor
setHomescreenParallaxFactor:
lockscreenParallaxFactor
setLockscreenParallaxFactor:
homescreenParallaxEnabled
setHomescreenParallaxEnabled:
lockscreenParallaxEnabled
setLockscreenParallaxEnabled:
homescreenZoomFactor
setHomescreenZoomFactor:
lockscreenZoomFactor
setLockscreenZoomFactor:
isHomescreenContentStatic
setHomescreenContentStatic:
isLockscreenContentStatic
setLockscreenContentStatic:
isLockscreenContentLiveWallpaper
setLockscreenContentLiveWallpaper:
liveWallpaperPlaybackState
setLiveWallpaperPlaybackState:
_FBSScene
initWithVariant:
setWithObject:
sendActions:
settings
clientSettings
updateClientSettingsWithBlock:
delegate
wallpaperWindowScene:didUpdateVariant:inAnimationSettings:outAnimationSettings:
wallpaperWindowScene:didUpdateLockscreenWallpaperContentsRect:
wallpaperWindowScene:didUpdateLockscreenWallpaperAlpha:
wallpaperWindowScene:didUpdateHomescreenWallpaperAlpha:
wallpaperWindowScene:didUpdateLockscreenOnlyWallpaperAlpha:
wallpaperWindowScene:didUpdateRasterizationDisallowedForHomescreen:lockscreen:
wallpaperWindowScene:didUpdateHomescreenWallpaperHidden:lockscreenWallpaperHidden:
wallpaperWindowScene:didUpdateHomescreenWallpaperScale:
wallpaperWindowScene:didUpdateLockscreenWallpaperScale:
wallpaperWindowScene:didUpdateColorSamplingSuspended:
wallpaperWindowScene:didUpdateWallpaperAnimationSuspended:
wallpaperWindowScene:didUpdateWallpaperRequired:
wallpaperWindowScene:didUpdateHomescreenStyleChangesDelayed:
wallpaperWindowScene:didUpdateHomescreenStyleTransitionStateTo:from:
wallpaperWindowScene:didUpdateLockscreenStyleTransitionStateTo:from:
wallpaperWindowScene:didUpdateLiveWallpaperTouchActive:
wallpaperWindowScene:didUpdateLiveWallpaperInteractive:
wallpaperWindowScene:requestsWallpaperEffectImageForVariant:style:traitCollection:result:
desiredStyle
variant
traitCollection
slotIdentifier
initWithWindowScene:
size
allocateImageSlotForIdentifier:size:actualStyle:url:lifetimeObject:
freeImageSlotWithIdentifier:lifetime:
setInvalidationHandler:
setImageSlot:forIdentifier:
hasSlotForIdentifier:
canSendResponse
sizeForIdentifier:
actualStyleForIdentifier:
urlForIdentifier:
initWithActualStyle:size:imageURL:
ioSurfaceForIdentifier:
initWithActualStyle:size:ioSurface:
errorWithDomain:code:userInfo:
responseForError:
sendResponse:
wallpaperWindowScene:didReceivePreheatRequestForVariant:
wallpaperWindowSceneDidReceiveUpdateAndPrewarmRequest:
sharedApplication
beginBackgroundTaskWithName:expirationHandler:
endBackgroundTask:
response
wallpaperWindowScene:didReceiveUpdateRequestForLocations:wallpaperMode:completion:
locations
wallpaperMode
setLockscreenContentIsLiveWallpaper:
noteWallpaperWillChangeForVariant:
noteWallpaperDidChangeForVariant:
noteWallpaperDidCompleteWallpaperChange
_updateWallpaperVariant:inAnimationSettings:outAnimationSettings:
_updateLockscreenWallpaperContentsRect:
_updateLockscreenWallpaperAlpha:
_updateHomescreenWallpaperAlpha:
_updateLockscreenOnlyWallpaperAlpha:
_updateDisallowRasterizationForHomescreen:lockscreen:
_updateWallpaperHiddenForHomescreen:lockscreen:
_updateHomescreenWallpaperScale:
_updateLockscreenWallpaperScale:
_updateColorSamplingSuspended:
_updateWallpaperAnimationSuspended:
_updateWallpaperRequired:
_updateHomescreenStyleChangesDelayed:
_updateHomescreenStyleTransitionStateTo:from:
_updateLockscreenStyleTransitionStateTo:from:
_updateLiveWallpaperTouchActive:
_updateLiveWallpaperInteractive:
_handleImageSlotRequestAction:
_handleWallpaperEffectImageRequestAction:
_handlePreheatAction:
_handleUpdateAndPrewarmAction:
_handleUpdateLocationsAction:
homescreenWallpaperHidden
lockscreenWallpaperHidden
.cxx_destruct
_wallpaperEffectImageSlots
_homescreenWallpaperHidden
_lockscreenWallpaperHidden
Tq,R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
Td,R,N
TB,R,N
TB,R,N,V_homescreenWallpaperHidden
TB,R,N,V_lockscreenWallpaperHidden
T@"NSString",R,C,N
T@"SBWWallpaperWindowSceneStyleTransitionState",R,C,N
Td,N
T@"_UILegibilitySettings",C,N
T@"UIColor",C,N
TB,N
homescreenContentStatic
TB,N,GisHomescreenContentStatic
lockscreenContentStatic
TB,N,GisLockscreenContentStatic
lockscreenContentIsLiveWallpaper
TB,N,GisLockscreenContentLiveWallpaper
Tq,N
_observeOtherSetting:withBlock:
observeOtherSetting:withBlock:
observeHomescreenMinimumWallpaperScaleWithBlock:
observeLockscreenMinimumWallpaperScaleWithBlock:
observeHomescreenLegibilitySettingsWithBlock:
observeLockscreenLegibilitySettingsWithBlock:
observeHomescreenAverageColorWithBlock:
observeLockscreenAverageColorWithBlock:
observeHomescreenContrastWithBlock:
observeLockscreenContrastWithBlock:
observeHomescreenParallaxFactorWithBlock:
observeLockscreenParallaxFactorWithBlock:
observeHomescreenParallaxEnabledWithBlock:
observeLockscreenParallaxEnabledWithBlock:
observeHomescreenZoomFactorWithBlock:
observeLockscreenZoomFactorWithBlock:
observeHomescreenContentStaticWithBlock:
observeLockscreenContentStaticWithBlock:
observeLockscreenContentLiveWallpaperWithBlock:
observeLiveWallpaperPlaybackStateWithBlock:
init
dictionary
addObject:
setUrl:
setSize:
setActualStyle:
setObject:forKey:
objectForKeyedSubscript:
removeObjectForKey:
removeObject:
setImage:
objectForKey:
actualStyle
ioSurface
_lifetimes
_slots
_setBlockSet:
dealloc
image
_blockSet
_ioSurface
_url
_actualStyle
_image
_size
T@"NSURL",C,N,V_url
T{CGSize=dd},N,V_size
Tq,N,V_actualStyle
T@"UIImage",&,N,V_image
T@"IOSurface",R,N
setObject:forSetting:
initWithInfo:timeout:forResponseOnQueue:withHandler:
info
objectForSetting:
initWithSlotIdentifier:forResponseOnQueue:withHandler:
keyDescriptionForSetting:
integerValue
CGSizeValue
valueDescriptionForFlag:object:ofSetting:
T{CGSize=dd},R,N
numberWithInteger:
valueWithCGSize:
filePathURL
path
initWithInfo:error:
fileURLWithPath:
imageURL
T@"NSURL",R,C,N
_newEffectViewForVariant:transitionState:
invalidate
setVariant:withOutAnimationFactory:inAnimationFactory:completion:
_effectViewForVariant:
setAlpha:
animateWithFactory:actions:completion:
prepareToAnimateToTransitionState:
animateWithFactory:actions:
_setEffectView:forVariant:
_shouldSuspendMotionEffectsForState:
_endSuspendingMotionEffectsForStyleIfNeeded
setTransitionState:
currentTransitionStateIsOpaque
removeFromSuperview
_updateMotionEffectsForState:
wallpaperStyleAnimationAssertion
suspendWallpaperAnimationForReason:
setWallpaperStyleAnimationAssertion:
_beginSuspendingMotionEffectsForStyleIfNeeded
initWithWallpaperPresenter:variant:transformOptions:
setForcesOpaque:
bounds
setFrame:
setAutoresizingMask:
addSubview:
_shouldSuspendMotionEffectsForStyle:
initWithWallpaperPresenter:
setVariant:
setWallpaperStyleTransitionState:forVariant:withAnimationFactory:
_wallpaperPresenter
_lockscreenWallpaperEffectView
_homescreenWallpaperEffectView
_variant
_wallpaperStyleAnimationAssertion
T@"<BSInvalidatable>",&,N,V_wallpaperStyleAnimationAssertion
Tq,N,V_variant
_wallpaperGestureChanged:
initWithTarget:action:
setMinimumPressDuration:
setCancelsTouchesInView:
irisDelegate
irisWallpaperPlayerPlaybackStateDidChange:
isTouchActive
state
_handleWallpaperGestureBegan
_handleWallpaperGestureEnded
_handleWallpaperGestureChanged
_setTouchActive:
remoteIrisWallpaperPlayer:touchActiveChanged:
irisWallpaperPlayerIsInteractingDidChange:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
irisGestureRecognizer
setIrisDelegate:
irisPlaybackState
isIrisInteracting
T@"<SBFIrisWallpaperPlayerDelegate>",W,N
_setIrisPlaybackState:
setDelegate:
_gestureRecognizer
_touchActive
_irisDelegate
_irisPlaybackState
_delegate
touchActive
TB,N,GisTouchActive,S_setTouchActive:,V_touchActive
T@"<SBWRemoteIrisWallpaperPlayerDelegate>",W,N,V_delegate
Tq,N,S_setIrisPlaybackState:,V_irisPlaybackState
T@"<SBFIrisWallpaperPlayerDelegate>",W,N,V_irisDelegate
initWithInfo:responder:
initWithLocations:wallpaperMode:responder:
initWithNibName:bundle:
weakObjectsHashTable
enableWallpaperDimming
setEnableWallpaperDimming:
defaultCenter
_accessibilityReduceTransparencyChanged:
addObserver:selector:name:object:
stringWithUTF8String:
_updateWallpaperForWallpaperDimming:
observeDefault:onQueue:withBlock:
removeObserver:
descriptionWithMultilinePrefix:
viewDidLoad
view
initWithFrame:
layer
mainScreen
scale
setRasterizationScale:
setClipsToBounds:
_updateAndPrewarmWallpapers
performWithoutAnimation:
_toWindowOrientation
_fromWindowOrientation
noteWillAnimateToInterfaceOrientation:
noteDidRotateFromInterfaceOrientation:
animateAlongsideTransition:completion:
traitCollectionDidChange:
userInterfaceStyle
_updateWallpaperForWallpaperMode:
_wallpaperViewForVariant:
_imageForStyle:withSource:overrideTraitCollection:result:
beginSimulatedTouchWithReason:
endSimulatedTouchWithReason:
suspendColorSamplingForReason:
_beginDisallowRasterizationBlock
styleTransitionState
_endDisallowRasterizationBlock
wallpaperEffectView
setHidden:
_updateWallpaperHidden
_updateWallpaperParallax
setVariant:withAnimationFactory:
sendSubviewToBack:
prepareToDisappear
prepareToAppear
setZoomFactor:withAnimationFactory:
setContentsRect:
hasContentOutsideVisibleBounds
_isInAnimationBlock
animateWithDuration:animations:completion:
countByEnumeratingWithState:objects:count:
initWithWallpaperViewController:scale:
_updateHomeScreenWallpaperScaleWithAnimationFactory:
minimumWallpaperScaleForVariant:
parallaxFactor
wallpaperConfigurationManager
wallpaperSize
parallaxDeviceType
bestWallpaperSizeForWallpaperSize:deviceType:parallaxFactor:portrait:
setLockscreenWallpaperScale:withAnimationFactory:
_setDisallowRasterization:withReason:reasons:
_updateRasterizationState
_setWallpaperHidden:variant:reason:
initWithWallpaperViewController:type:reason:
_suspendOrResumeColorSampling
_suspendOrResumeWallpaperAnimation
window
_removeAllRetargetableAnimations:
homescreenStyleInfo
setWallpaperStyleTransitionState:forPriority:forVariant:withAnimationFactory:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
wallpaperStyleInfoForVariant:
setPriorityInfo:forPriority:
_updateEffectViewForVariant:withFactory:
removePriorityInfoForPriority:
preheatImageData
shouldDelayHomescreenStyleUpdates
switchToIrisMode:
setRotating:
_activeWallpaperView
needsImmediateLayoutBeforeRotation
layoutIfNeeded
rotateToInterfaceOrientation:
wallpaperPresenter:requestsOrientationWithRefresh:
initWithVariant:wallpaperViewController:
setTransformOptions:
initWithVariant:wallpaperViewController:transformOptions:reachabilityCoordinator:
_updateWallpaperForLocations:options:wallpaperMode:withCompletion:
legibilitySettings
exceptionWithName:reason:userInfo:
legibilitySettingsForVariant:
contentColor
averageColorInRect:forVariant:withSmudgeRadius:
_screen
coordinateSpace
convertRect:fromCoordinateSpace:
averageColorInRect:withSmudgeRadius:
averageColorForVariant:
contrast
contrastInRect:
wallpaperConfigurationForVariant:includingValuesForTypes:
_handleWallpaperLegibilitySettingsChanged:forVariant:
_updateBlurImagesForVariant:
setLowLatency:
_reconfigureBlurViewsForVariant:
descriptionBuilderWithMultilinePrefix:
build
builderWithObject:
appendObject:withName:
allObjects
appendArraySection:withName:skipIfEmpty:
appendBodySectionWithName:multilinePrefix:block:
lockscreenStyleInfo
count
succinctDescriptionBuilder
containsObject:
_isRasterizationDisallowedForCurrentVariant
wantsRasterization
shouldRasterize
setShouldRasterize:
setContinuousColorSamplingEnabled:
setWallpaperAnimationEnabled:
type
_removeColorSamplingAssertion:
_removeWallpaperAnimationAssertion:
removeWallpaperRequiredAssertion:
_isWallpaperHiddenForVariant:
isHidden
lockScreenWallpaperConfigurationIncludingValuesForTypes:
wallpaperOptions
setParallaxFactor:
setParallaxEnabled:
homeScreenWallpaperConfigurationIncludingValuesForTypes:
hasSuffix:
blackColor
wallpaperType
name
substitutionFlatColorForWallpaperName:
initWithVariant:type:
setWallpaperColor:
setWallpaperOptions:
variantsShareWallpaper
_updateSharedWallpaperWithOptions:wallpaperMode:
_updateSeparateWallpaperForVariants:options:wallpaperMode:
setLockscreenWallpaperScale:
setLockscreenOnlyWallpaperAlpha:
_updateBlurGeneration
isDisplayingWallpaperWithConfiguration:forVariant:
wallpaperConfigurationForUpdatingWallpaperViewsForVariant:wallpaperMode:
_isWallpaperView:displayingWallpaperWithConfiguration:forVariant:
subviews
indexOfObject:
_clearWallpaperView:
setSharedWallpaperView:
insertSubview:atIndex:
setLockscreenWallpaperView:
setHomescreenWallpaperView:
_makeWallpaperViewWithConfiguration:forVariant:shared:options:
cleanupOldSharedWallpaper:lockSreenWallpaper:homeScreenWallpaper:
animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:
traitCollectionWithUserInterfaceStyle:
setFakeBlurViewOverrideTraitCollection:
_precacheStyles:usingTraitCollection:
_handleWallpaperChangedForVariant:
wallpaperPresentingDelegate
wallpaperPresenter:didChangeWallpaperForLocations:withConfiguration:
_imageForStyle:withSource:overrideTraitCollection:
insertSubview:above:
highestValidPriority
priorityInfoForPriority:
setStyleTransitionState:
_newWallpaperEffectViewForVariant:transitionState:
setWallpaperEffectView:
_clearWallpaperEffectView:
_updateEffectViewForVariant:oldState:newState:oldEffectView:newEffectView:
_observersForVariant:
copy
wallpaperWillChangeForVariant:
wallpaperDidChangeForVariant:
variantsShareWallpaperConfigurationForTypes:
wallpaperDataTypesToRequestForUpdatingWallpaperViews
wallpaperConfigurationForVariant:includingValuesForTypes:wallpaperMode:
substitutionWallpaperConfigurationForWallpaperConfiguration:
setGeneratesBlurredImages:
supportsCropping
wallpaperViewClassForWallpaperType:
_bestWallpaperViewInitializationOptionsForVariant:shared:wallpaperOptions:options:
_wallpaperViewClassForType:
initWithFrame:configuration:variant:cacheGroup:delegate:options:
setInternalObserver:
_vendWallpaperViewForConfiguration:forVariant:shared:options:
wallpaperLegibilitySettingsDidChange:forVariant:
_blurViewsForVariant:
reconfigureWithSource:
updateImageWithSource:
setWallpaperMode:
dataStores
hasWallpaperImageForVariant:wallpaperMode:
wallpaperPresenterDidCompleteWallpaperChange:
wallpaperConfigurationManager:didChangeWallpaperConfigurationForVariants:
wallpaperConfigurationManager:isVideoSupportedForVariant:
wallpaperConfigurationManager:legibilitySettingsForVariant:
providerLegibilitySettingsChanged:
wallpaperViewDidInvalidateBlurs:
wallpaperView:didChangeZoomFactor:
wallpaperViewDidChangeWantsRasterization:
settings:changedValueForKey:
succinctDescription
wallpaperView:wallpaperConfigurationIncludingValueTypes:
addObserver:forVariant:
removeObserver:forVariant:
setAlpha:forWallpaperVariant:
setLockscreenWallpaperContentsRect:
setHomescreenWallpaperScale:withAnimationFactory:
setDisallowsRasterization:forVariant:withReason:
setWallpaperHidden:variant:reason:
updateIrisWallpaperForInteractiveMode
updateIrisWallpaperForStaticMode
cancelInProcessAnimations
setWallpaperStyle:forPriority:forVariant:withAnimationFactory:
removeWallpaperStyleForPriority:forVariant:withAnimationFactory:
beginRequiringWithReason:
preheatWallpaperForVariant:
beginDelayingHomescreenStyleChangesForReason:
endDelayingHomescreenStyleChangesForReason:animationFactory:
newFakeBlurViewForVariant:style:transformOptions:
updateWallpaperForLocations:withCompletion:
updateWallpaperForLocations:wallpaperMode:withCompletion:
setWallpaperPresentingDelegate:
minimumHomescreenWallpaperScale
minimumLockscreenWallpaperScale
irisWallpaperPlayer
currentHomescreenStyleTransitionState
noteWillAnimateToInterfaceOrientation:duration:
T@"<SBWWallpaperPresentingDelegate>",W,N
T@"<SBFIrisWallpaperPlaying>",R,N
T{?=qqd},R,N
averageColorInRect:forVariant:
contrastForVariant:
contrastInRect:forVariant:
viewWillTransitionToSize:withTransitionCoordinator:
shouldAutorotate
_canShowWhileLocked
setWallpaperConfigurationManager:
noteWallpapersDidUpdate
wallpaperEffectImageForStyle:variant:traitCollection:result:
beginSimulatedLiveWallpaperTouchWithReason:
endSimulatedLiveWallpaperTouchWithReason:
_removeWallpaperScaleAssertion:withAnimationFactory:
_invalidateWallpaperAssertion:
_registerFakeBlurView:
_unregisterFakeBlurView:
_sourceForFakeBlurView:
setCachingIdentifier:
reachabilityCoordinator
setReachabilityCoordinator:
fixedOrientation
setFixedOrientation:
lockscreenWallpaperView
homescreenWallpaperView
sharedWallpaperView
fakeBlurViewOverrideTraitCollection
_wallpaperContainerView
_lockscreenObservers
_homescreenObservers
_suspendColorSamplingAssertions
_suspendWallpaperAnimationAssertions
_requireWallpaperAssertions
_hideHomescreenWallpaperReasons
_hideLockscreenWallpaperReasons
_displayedVariant
_lockscreenOnlyWallpaperAlpha
_lockscreenBlurViews
_homescreenBlurViews
_disallowRasterizationBlockCount
_disallowRasterizationReasonsHomeVariant
_disallowRasterizationReasonsLockVariant
_homescreenStyleChangeDelayReasons
_wallpaperDefaults
_wallpaperEnableDimmingObserver
_homescreenWallpaperScaleAssertions
_fixedOrientation
_wallpaperConfigurationManager
_wallpaperPresentingDelegate
_lockscreenWallpaperScale
_cachingIdentifier
_reachabilityCoordinator
_lockscreenWallpaperView
_homescreenWallpaperView
_sharedWallpaperView
_homescreenStyleInfo
_lockscreenStyleInfo
_fakeBlurViewOverrideTraitCollection
T@"SBFWallpaperView",&,N,V_lockscreenWallpaperView
T@"SBFWallpaperView",&,N,V_homescreenWallpaperView
T@"SBFWallpaperView",&,N,V_sharedWallpaperView
T@"SBWallpaperStyleInfo",R,N,V_homescreenStyleInfo
T@"SBWallpaperStyleInfo",R,N,V_lockscreenStyleInfo
T@"UITraitCollection",&,N,V_fakeBlurViewOverrideTraitCollection
T@"SBFWallpaperConfigurationManager",&,N,V_wallpaperConfigurationManager
T@"NSString",C,N,V_cachingIdentifier
T@"<SBWallpaperReachabilityCoordinating>",&,N,V_reachabilityCoordinator
TB,N,V_fixedOrientation
T@"<SBWWallpaperPresentingDelegate>",W,N,V_wallpaperPresentingDelegate
Td,N,V_lockscreenWallpaperScale
isInvalidated
setInvalidated:
wallpaperViewController
appendPointer:withName:
appendInteger:withName:
reason
appendBool:withName:ifEqualTo:
_invalidated
_wallpaperViewController
_type
_reason
invalidated
TB,N,GisInvalidated,V_invalidated
T@"SBWWallpaperViewController",R,W,N,V_wallpaperViewController
Tq,R,V_type
T@"NSString",R,C,N,V_reason
invalidateWithAnimationFactory:
appendFloat:withName:
_scale
Td,R,V_scale
stringWithFormat:
archivedDataWithRootObject:requiringSecureCoding:error:
unarchivedObjectOfClass:fromData:error:
initWithVariant:desiredStyle:traitCollection:slotIdentifier:forResponseOnQueue:withHandler:
T@"UITraitCollection",R,C,N
initWithEntitlement:additionalCredentials:
setDomain:
identifier
setService:
listenerWithConfigurator:
array
serviceQuality
setServiceQuality:
interface
setInterface:
setInterfaceTarget:
_queue_removeConnection:
setTargetQueue:
configureConnection:
remoteProcess
auditToken
authenticateAuditToken:
_queue_addConnection:
activate
setWallpaperImage:adjustedImage:thumbnailData:imageHashData:wallpaperOptions:forLocations:currentWallpaperMode:
setProceduralWallpaperIdentifier:options:locations:
removeWallpaperVideo
setWallpaperWithVideo:sandboxToken:cropRect:wallpaperMode:
restoreDefaultWallpaper
setWallpaperColor:darkColor:forLocations:
setWallpaperGradient:forLocations:
getWallpaperOptionsForVariant:
getWallpaperLegibilitySettingsForVariant:
listener:didReceiveConnection:withContext:
_clientAuthenticator
_queue
_connectionListener
_connections
T@"<SBWWallpaperServerDelegate>",W,N,V_delegate
_wallpaperVariantSceneSettingsDiffInspector
inspectDiff:withContext:
animationFence
_synchronizeDrawingWithFence:
inAnimationSettings
outAnimationSettings
animationSettings
observeWallpaperVariantWithBlock:
_performActionsForUIScene:withUpdatedFBSScene:settingsDiff:fromSettings:transitionContext:lifecycleActionType:
initialActionHandlers
arrayByAddingObject:
initialSettingsDiffActions
arrayWithObjects:count:
arrayByAddingObjectsFromArray:
clientSettingsClass
settingsClass
uiSceneSessionRole
uiSceneMinimumClass
initWithResponder:
timeIntervalSinceDate:
sessionDidDisconnect
sessionReconnectDelay
_lastDisconnect
_intervalMovingAverage
_alpha
initWithName:onQueue:
_addStateCaptureHandlers
_updateViewMode
isEqualToString:
_updateWallpaperSceneSettingsWithBlock:
isValid
_acquireSceneModeAssertionForReason:sceneMode:
setNullificationHandler:
_performWithLiveScene:
_setupScene
_updateFallbackView
transitionDuration
hasDifferentColorAppearanceComparedToTraitCollection:
_acquireLiveModeAssertionForReason:
scheduledTimerWithTimeInterval:repeats:block:
setUserInterfaceStyle:
responderWithHandler:
setWithArray:
imageSlot
setImageSlot:
_cachedBlurAssetForVariant:requestedStyle:traitCollection:
initWithImage:lifetimeToken:
_blurImageFromURL:
UUID
UUIDString
initWithLifetimeToken:
setFallbackColor:
updateWithImage:
_cacheBlurImageForVariant:requestedStyle:actualStyle:traitCollection:image:imageURL:
width
sbf_imageWithIOSurface:scale:orientation:
setNeedsLayout
_sceneClientSettings
isActive
setInAnimationSettings:
setOutAnimationSettings:
windowScene
_synchronizeDrawing
_synchronizedDrawingFence
setAnimationFence:
mutableCopy
setWallpaperVariant:
updateSettings:withTransitionContext:
setHomescreenWallpaperAlpha:
setLockscreenWallpaperAlpha:
_sceneSettings
_updateHomescreenWallpaperScaleWithAnimationSettings:
initWithScale:forReason:invalidationBlock:
transitionContext
setAnimationSettings:
updateSettingsWithTransitionBlock:
_disallowRasterizationReasonsForVariant:
setDisallowHomescreenRasterization:
setDisallowLockscreenRasterization:
_hideWallpaperReasonsForVariant:
setHomescreenWallpaperHidden:
setLockscreenWallpaperHidden:
setColorSamplingSuspended:
_simpleAssertionWithReasonsSet:identifier:reason:updater:
setWallpaperAnimationSuspended:
setLiveWallpaperInteractive:
_updateWallpaperSceneSettingsWithBlock:postUpdateBlock:
highestPriorityStyleTransitionState
setWallpaperStyleTransitionState:forPriority:
setHomescreenStyleTransitionState:
setLockscreenStyleTransitionState:
removeWallpaperStyleTransitionStateForPriority:
setWallpaperRequired:
setHomescreenStyleChangesDelayed:
initWithVariant:wallpaperPresenter:wallpaperLegibilityProvider:
initWithVariant:imageProvider:fakeBlurRegistry:wallpaperViewDelegate:transformOptions:reachabilityCoordinator:
setQueue:
setTimeout:
settingsWithDuration:
setInterfaceOrientation:
initWithStyle:
clearColor
setLiveWallpaperTouchActive:
_updateBlurViewsForVariant:
_effectiveSceneMode
evaluateWithInspector:context:
succinctDescriptionForObject:
appendArraySection:withName:skipIfEmpty:objectTransformer:
appendString:withName:
appendObject:withName:skipIfNil:
_setupSceneWithCompletion:
eventWithName:handler:
executeOrInsertEvent:atPosition:
updateSettingsWithBlock:
_notifyAllObserversOfNewWallpaperScene
removeAllObjects
_modifySceneSettings:forSceneMode:
performUpdate:withCompletion:
identityForEmbeddedApplicationIdentifier:
setIdentifier:
specification
setSpecification:
identityForProcessIdentity:
setClientIdentity:
createScene:
layerManager
addObserver:
mainConfiguration
activeInterfaceOrientation
setDisplayConfiguration:
setHomescreenWallpaperScale:
configureParameters:
uiPresentationManager
createPresenterWithIdentifier:
setPresentedLayerTypes:
setAppearanceStyle:
modifyPresentationContext:
presentationView
systemTealColor
setBackgroundColor:
initWithIdentifier:forReason:invalidationBlock:
_computeHomescreenWallpaperScale
reconfigureFromProvider
_invalidateBlurCacheForVariant:
updateImageFromProviderForWallpaperMode:
setObject:forKeyedSubscript:
keysOfEntriesPassingTest:
removeObjectsForKeys:
floatValue
initWithCGImage:scale:orientation:wallpaperFileURL:
sceneMode
setActivityMode:
setForeground:
deactivateWithTransitionContext:
_updateSceneModeWithCompletion:
_scheduleSceneDeactivation
_cancelSceneDeactivation
updateSettings:withTransitionContext:completion:
_acquireSceneModeAssertionForReason:sceneMode:completion:
_updateSceneMode
initWithIdentifier:forReason:sceneMode:invalidationBlock:
setViewMode:
deactivate
_setSceneModeAssertionForViewMode:
bs_map:
dictionaryWithObjects:forKeys:count:
sceneContentStateDidChange:
sceneDidActivate:
sceneWillDeactivate:withError:
sceneDidInvalidate:
scene:clientDidConnect:
scene:didPrepareUpdateWithContext:
scene:didApplyUpdateWithContext:
scene:didCompleteUpdateWithContext:error:
scene:didUpdateClientSettingsWithDiff:oldClientSettings:transitionContext:
scene:didReceiveActions:
sceneDidDeactivate:withError:
sceneLayerManagerDidStartTrackingLayers:
sceneLayerManagerDidStopTrackingLayers:
sceneLayerManagerDidUpdateLayers:
newImageProviderView
imageForWallpaperStyle:variant:traitCollection:
updateImageProviderView:withImage:
parallaxFactorForVariant:
parallaxEnabledForVariant:
zoomFactorForVariant:
acquireActiveWallpaperSceneAssertionWithAction:completion:
supportedInterfaceOrientations
viewMode
_scene
_scenePresenter
_reconnectPolicy
_fakeBlurCache
_hideWallpaperReasonsHomeVariant
_hideWallpaperReasonsLockVariant
_colorSamplingSuspendedReasons
_wallpaperAnimationSuspendedReasons
_wallpaperRequiredReasons
_homescreenChangesDelayedReasons
_homescreenScaleAssertions
_liveModeAssertions
_sceneModeAssertions
_externalSceneModeAssertionActions
_sceneModeAssertionForViewMode
_sceneDeactivationTimer
_scenePresentationView
_staticBackgroundView
_missingEffectViewImages
_pendingEffectViewImageSlots
_eventQueue
_remoteIrisWallpaperPlayer
_stateCaptureHandles
_viewMode
Tq,N,V_viewMode
_sceneMode
Tq,R,N,V_sceneMode
_invalidationAnimationFactory
Td,R,N,V_scale
builder
appendInteger:
builderWithObject:ofExpectedClass:
appendInteger:counterpart:
containsTraitsInCollection:
appendEqualsBlocks:
isEqual
copyWithZone:
_requestedStyle
_traitCollection
_imageURL
initWithIdentifier:
_wallpaperSceneSettingsDiffInspector
observeLockscreenWallpaperContentsRectWithBlock:
observeLockscreenWallpaperAlphaWithBlock:
observeHomescreenWallpaperAlphaWithBlock:
observeLockscreenOnlyWallpaperAlphaWithBlock:
observeDisallowHomescreenRasterizationWithBlock:
observeDisallowLockscreenRasterizationWithBlock:
observeHomescreenWallpaperHiddenWithBlock:
observeLockscreenWallpaperHiddenWithBlock:
observeHomescreenWallpaperScaleWithBlock:
observeLockscreenWallpaperScaleWithBlock:
observeColorSamplingSuspendedWithBlock:
observeWallpaperAnimationSuspendedWithBlock:
observeWallpaperRequiredWithBlock:
observeHomescreenStyleChangesDelayedWithBlock:
observeHomescreenStyleTransitionStateWithBlock:
observeLockscreenStyleTransitionStateWithBlock:
observeLiveWallpaperTouchActiveWithBlock:
observeLiveWallpaperInteractiveWithBlock:
otherSettings
doubleValue
flagForSetting:
initWithSettings:
mutableCopyWithZone:
T@"_UILegibilitySettings",R,C,N
T@"UIColor",R,C,N
TB,R,N,GisHomescreenContentStatic
TB,R,N,GisLockscreenContentStatic
lockscreenContentLiveWallpaper
TB,R,N,GisLockscreenContentLiveWallpaper
numberWithDouble:
setFlag:forSetting:
green
blue
alpha
colorWithRed:green:blue:alpha:
getRed:green:blue:alpha:
observeCachingIdentifierWithBlock:
getHue:saturation:brightness:alpha:
_respondToActions:forFBSScene:inUIScene:fromTransitionContext:
_launchOptionsFromActions:forFBSScene:uiSceneSession:transitionContext:
appendSuper
zoomFactor
setZoomFactor:
setOpaque:
setContentsOpaque:
setContentView:
addReachabilityObserver:
removeReachabilityObserver:
transformOptions
parallaxEnabled
_allowsParallax
sizeToFit
fakeBlurView:didChangeStyle:
setTransform:
blurredImage
blurredImageURL
imageForBackdropParameters:includeTint:overrideTraitCollection:
imageURLForBackdropParameters:includeTint:overrideTraitCollection:
snapshotImage
snapshotImageURL
layoutSubviews
isWindowIgnoredForReachability:
effectiveReachabilityYOffset
willMoveToWindow:
removeAllAnimations
didMoveToWindow
superlayer
animationKeys
setSourceLayer:
valueWithCGPoint:
setSourcePoints:
setDuration:
setFillMode:
setRemovedOnCompletion:
addAnimation:forKey:
removeAnimationForKey:
_imageForStyle:withSource:
requestStyle:
effectiveStyle
offsetWallpaperBy:
observer
setObserver:
zoomScale
setZoomScale:
isFullscreen
setFullscreen:
T@"<_SBWFakeBlurObserver>",W,N
fullscreen
TB,N,GisFullscreen
TQ,N
handleReachabilityYOffsetDidChange
imageProvider
fakeBlurRegistry
_transformOptions
_effectiveStyle
_wallpaperView
_fullscreen
_providedImageView
_wallpaperOffset
_observer
_imageProvider
_fakeBlurRegistry
TB,N,GisFullscreen,V_fullscreen
T@"<_SBWFakeBlurImageProviding>",R,W,N,V_imageProvider
T@"<_SBWFakeBlurViewRegistering>",R,W,N,V_fakeBlurRegistry
T@"<SBWallpaperReachabilityCoordinating>",R,N,V_reachabilityCoordinator
T@"<_SBWFakeBlurObserver>",W,N,V_observer
TQ,N,V_transformOptions
_updateBackgroundColor
wallpaperPresenter
superview
wallpaperLegibilityProvider
didMoveToSuperview
_wallpaperLegibilityProvider
T@"<SBWWallpaperPresenting>",R,W,N,V_wallpaperPresenter
T@"<SBWWallpaperLegibilityProviding>",R,W,N,V_wallpaperLegibilityProvider
enumerateValidPrioritiesUsingBlock:
_priorityInfo
_wallpaperEffectView
_styleTransitionState
T@"SBWWallpaperEffectViewBase",&,N,V_wallpaperEffectView
T{?=qqd},N,V_styleTransitionState
appendUnsignedInteger:
appendCGFloat:
appendDouble:withName:decimalPrecision:
initWithXPCDictionary:
encodeWithXPCDictionary:
fallbackXPCEncodableClass
diffFromWallpaperWindowSceneStyleTransitionState:updateHandler:removeHandler:
_stateTable
setAllowsEdgeAntialiasing:
appendFloat:withName:decimalPrecision:
setBlurView:
setTransitionBlurView:
_configureFromScratch
_isEffectivelyFullscreen
_configureViewsForFullscreen:
_setTransitionFraction:
_configureForCurrentBlurStyle
_updateWallpaperAverageColor:
setStyle:
_needsBlurViewForStyle:
setMaskImageView:
setMask:
setTintMaskingContainer:
setBlurMaskingContainer:
_configureViews
_configureGrayscaleAndColorTintViewForStartStyle:
setGrayscaleTintView:
setColorTintView:
setTransitionGrayscaleTintView:
setTransitionColorTintView:
grayscaleTintAlpha
grayscaleTintLevel
colorWithWhite:alpha:
grayscaleTintView
transitionGrayscaleTintView
colorTintAlpha
colorTint
colorWithAlphaComponent:
colorTintView
transitionColorTintView
initWithCoder:
setMaskImage:masksBlur:masksTint:
wallpaperStyle
setWallpaperStyle:
setBarTintColor:
setBarStyle:
setTranslucent:
setBarWantsAdaptiveBackdrop:
appearanceStorage
setAppearanceStorage:
updateBackgroundImage
_setIsContainedInPopover:
_setFrame:forceUpdateBackgroundImage:
forcesOpaque
blurView
transitionBlurView
maskImageView
blurMaskingContainer
tintMaskingContainer
_wallpaperAverageColor
_startStyle
_endStyle
_transitionFraction
_blurView
_grayscaleTintView
_colorTintView
_transitionBlurView
_transitionGrayscaleTintView
_transitionColorTintView
_maskImageView
_blurMaskingContainer
_tintMaskingContainer
_maskImage
_shouldMaskBlur
_shouldMaskTint
_forcesOpaque
_accessibilityReduceTransparencyEnabled
T@"UIView<_SBWFakeBlur>",&,N,V_blurView
T@"UIView",&,N,V_grayscaleTintView
T@"UIView",&,N,V_colorTintView
T@"UIView<_SBWFakeBlur>",&,N,V_transitionBlurView
T@"UIView",&,N,V_transitionGrayscaleTintView
T@"UIView",&,N,V_transitionColorTintView
T@"UIImageView",&,N,V_maskImageView
T@"UIView",&,N,V_blurMaskingContainer
T@"UIView",&,N,V_tintMaskingContainer
T@"<SBWWallpaperPresenting><SBWWallpaperLegibilityProviding>",R,N,V_wallpaperPresenter
TB,N,V_forcesOpaque
_initWithImage:lifetimeToken:
_deferredImageSlot
_setImage:
lifetimeToken
_lifetimeToken
T@"UIImage",&,S_setImage:,V_image
T@"<BSInvalidatable>",R,N,V_lifetimeToken
deferredImageSlot:didUpdateImage:
addImageSlotObserver:
removeImageSlotObserver:
fallbackColor
_imageSlotObservers
_fallbackColor
T@"UIColor",&,N,V_fallbackColor
_updateWithImage:
invalidateIntrinsicContentSize
_pointSize
intrinsicContentSize
sizeThatFits:
_imageView
_imageSlot
T@"SBWImageSlot",&,N,V_imageSlot
T@"BSAnimationSettings",C,N
CGRectValue
valueWithCGRect:
T{CGRect={CGPoint=dd}{CGSize=dd}},N
T@"NSString",C,N
T@"SBWWallpaperWindowSceneStyleTransitionState",C,N
q16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
d16@0:8
B16@0:8
@16@0:8
v24@0:8d16
v24@0:8@16
v20@0:8B16
v24@0:8q16
v16@0:8
v24@0:8@?16
v40@0:8q16@24@32
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8B16B20
v32@0:8@16@24
@"SBWImageSlotRepository"
v32@0:8Q16@?24
@24@0:8@16
v64@0:8@16{CGSize=dd}24q40@48@56
B24@0:8@16
{CGSize=dd}24@0:8@16
q24@0:8@16
@"NSMutableSet"
@"NSMutableDictionary"
v24@0:8^{CGImageBlockSet=}16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
^{CGImageBlockSet=}
@"IOSurface"
@"NSURL"
@"UIImage"
{CGSize="width"d"height"d}
@40@0:8@16@24@?32
@24@0:8Q16
@40@0:8q16@24Q32
@48@0:8q16{CGSize=dd}24@40
v48@0:8q16@24@32@?40
B56@0:8{?=qqd}16q40@48
v40@0:8{?=qqd}16
@24@0:8q16
v32@0:8@16q24
@48@0:8q16{?=qqd}24
B24@0:8q16
B40@0:8{?=qqd}16
@"<SBWWallpaperPresenting><SBWWallpaperLegibilityProviding>"
@"SBWWallpaperEffectViewBase"
@"<BSInvalidatable>"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
@"UIGestureRecognizer"16@0:8
@"<SBFIrisWallpaperPlayerDelegate>"16@0:8
v24@0:8@"<SBFIrisWallpaperPlayerDelegate>"16
@"UILongPressGestureRecognizer"
@"<SBFIrisWallpaperPlayerDelegate>"
@"<SBWRemoteIrisWallpaperPlayerDelegate>"
@40@0:8q16q24@32
B32@0:8@16q24
@32@0:8@16q24
v32@0:8@"SBFWallpaperConfigurationManager"16q24
B32@0:8@"SBFWallpaperConfigurationManager"16q24
@"_UILegibilitySettings"32@0:8@"SBFWallpaperConfigurationManager"16q24
v24@0:8@"<SBFLegibilitySettingsProvider>"16
v32@0:8@16d24
v24@0:8@"SBFWallpaperView"16
v32@0:8@"SBFWallpaperView"16d24
v32@0:8@"PTSettings"16@"NSString"24
@"NSString"24@0:8@"NSString"16
@"BSDescriptionBuilder"24@0:8@"NSString"16
@"BSDescriptionBuilder"16@0:8
@32@0:8@16Q24
@"SBFWallpaperConfiguration"32@0:8@"SBFWallpaperView"16Q24
v32@0:8d16q24
@32@0:8d16@24
v32@0:8d16@24
v36@0:8B16q20@28
B48@0:8q16q24q32@40
B64@0:8{?=qqd}16q40q48@56
B40@0:8q16q24@32
@40@0:8q16q24Q32
v32@0:8q16@?24
v40@0:8q16q24@?32
{?=qqd}16@0:8
v32@0:8q16d24
v48@0:8q16@"BSUIAnimationFactory"24@"BSUIAnimationFactory"32@?<v@?>40
v32@0:8@"<SBWallpaperObserver>"16q24
@"<SBWWallpaperScaleInvalidating>"32@0:8d16@"BSUIAnimationFactory"24
v32@0:8d16@"BSUIAnimationFactory"24
v36@0:8B16q20@"NSString"28
@"<BSInvalidatable>"24@0:8@"NSString"16
B48@0:8q16q24q32@"BSUIAnimationFactory"40
B64@0:8{?=qqd}16q40q48@"BSUIAnimationFactory"56
B40@0:8q16q24@"BSUIAnimationFactory"32
v24@0:8@"NSString"16
v32@0:8@"NSString"16@"BSUIAnimationFactory"24
@"UIView<_SBWFakeBlur>"40@0:8q16q24Q32
v32@0:8q16@?<v@?>24
v40@0:8q16q24@?<v@?>32
@"<SBWWallpaperPresentingDelegate>"16@0:8
v24@0:8@"<SBWWallpaperPresentingDelegate>"16
@"<SBFIrisWallpaperPlaying>"16@0:8
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48d56
d24@0:8q16
d56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
@"_UILegibilitySettings"24@0:8q16
@"UIColor"24@0:8q16
@"UIColor"56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
@"UIColor"64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48d56
@32@0:8@16@24
v40@0:8{CGSize=dd}16@32
v48@0:8q16q24@32@?40
B36@0:8B16@20@28
v48@0:8q16Q24q32@?40
B40@0:8@16@24q32
v32@0:8Q16q24
v40@0:8q16Q24q32
B56@0:8q16^{?=qqd}24^{?=qqd}32^@40^@48
B32@0:8q16@24
@32@0:8q16q24
@40@0:8q16Q24q32
Q44@0:8q16B24@28Q36
#24@0:8q16
@44@0:8@16q24B32Q36
v40@0:8@16@24@32
@"UIView"
@"NSHashTable"
@"SBWallpaperDefaults"
@"<BSDefaultObserver>"
@"SBFWallpaperConfigurationManager"
@"<SBWWallpaperPresentingDelegate>"
@"NSString"
@"<SBWallpaperReachabilityCoordinating>"
@"SBFWallpaperView"
@"SBWallpaperStyleInfo"
@"UITraitCollection"
@40@0:8@16q24@32
@"SBWWallpaperViewController"
v24@0:8@"BSUIAnimationFactory"16
@32@0:8@16d24
@64@0:8q16q24@32@40@48@?56
v40@0:8@"BSServiceConnectionListener"16@"BSServiceConnection<BSServiceConnectionHost>"24@"<BSXPCDecoding>"32
B72@0:8@16@24@32@40@48@56@64
B48@0:8@16@24@32@40
B40@0:8@16@24@32
B72@0:8@"NSObject<OS_xpc_object>"16@"NSObject<OS_xpc_object>"24@"NSData"32@"NSData"40@"SBFWallpaperOptions"48@"NSString"56@"NSString"64
v40@0:8@"NSString"16@"NSDictionary"24@"NSString"32
B48@0:8@"NSURL"16@"NSData"24@"NSString"32@"NSString"40
B40@0:8@"UIColor"16@"UIColor"24@"NSString"32
B32@0:8@"SBFGradient"16@"NSString"24
@"SBFWallpaperOptions"24@0:8@"NSString"16
@"_UILegibilitySettings"24@0:8@"NSString"16
@"FBServiceClientAuthenticator"
@"NSObject<OS_dispatch_queue>"
@"BSServiceConnectionListener"
@"NSMutableArray"
@"<SBWWallpaperServerDelegate>"
v60@0:8@16@24@32@40@48I56
v60@0:8@"UIScene"16@"FBSScene"24@"FBSSceneSettingsDiff"32@"FBSSceneSettings"40@"FBSSceneTransitionContext"48I56
@"SBWWallpaperWindowSceneSettingsDiffInspector"
@"NSDate"
v48@0:8@16@24@32@40
v24@0:8@"FBScene"16
v32@0:8@"FBScene"16@"NSError"24
v32@0:8@"FBScene"16@"FBSceneClientHandle"24
v32@0:8@"FBScene"16@"FBSceneUpdateContext"24
v40@0:8@"FBScene"16@"FBSceneUpdateContext"24@"NSError"32
v48@0:8@"FBScene"16@"FBSSceneClientSettingsDiff"24@"FBSSceneClientSettings"32@"FBSSceneTransitionContext"40
v32@0:8@"FBScene"16@"NSSet"24
v24@0:8@"FBSceneLayerManager"16
@40@0:8N^q16q24@32
@"UIView"16@0:8
@40@0:8N^q16q24@"UITraitCollection"32
B32@0:8@"UIView"16@24
v24@0:8@"_SBWFakeBlurView"16
v28@0:8@16B24
v28@0:8@"SBWRemoteIrisWallpaperPlayer"16B24
v32@0:8@16@?24
v32@0:8@?16@?24
@48@0:8@16@24@32@?40
v64@0:8q16q24q32@40@48@56
@40@0:8@16q24@?32
@"FBScene"
@"<UIScenePresenter>"
@"<SBWSessionReconnectPolicy>"
@"NSTimer"
@"UIView<UIScenePresentation>"
@"SBWWallpaperStaticBackgroundView"
@"BSEventQueue"
@"SBWRemoteIrisWallpaperPlayer"
@48@0:8@16@24q32@?40
@40@0:8d16@24@?32
@"BSUIAnimationFactory"
@24@0:8^{_NSZone=}16
@48@0:8@16@24@32@40
@"NSSet"48@0:8@"NSSet"16@"FBSScene"24@"UIScene"32@"FBSSceneTransitionContext"40
@"_UISceneConnectionOptionsContext"48@0:8@"NSSet"16@"FBSScene"24@"UISceneSession"32@"FBSSceneTransitionContext"40
@32@0:8N^q16@24
@40@0:8N^q16@24@32
v32@0:8{CGPoint=dd}16
v24@0:8Q16
@"<_SBWFakeBlurObserver>"16@0:8
v24@0:8@"<_SBWFakeBlurObserver>"16
@64@0:8q16@24@32@40Q48@56
@48@0:8q16@24Q32@40
{CGPoint="x"d"y"d}
@"<_SBWFakeBlurObserver>"
@"<_SBWFakeBlurImageProviding>"
@"<_SBWFakeBlurViewRegistering>"
v32@0:8@"_UILegibilitySettings"16q24
@32@0:8q16@24
@40@0:8q16@24@32
@"<SBWWallpaperPresenting>"
@"<SBWWallpaperLegibilityProviding>"
{?=B{?=qqd}}24@0:8q16
v56@0:8{?=B{?=qqd}}16q48
[12{?="valid"B"styleTransitionState"{?="startStyle"q"endStyle"q"transitionFraction"d}}]
{?="startStyle"q"endStyle"q"transitionFraction"d}
@24@0:8@"NSObject<OS_xpc_object>"16
v24@0:8@"NSObject<OS_xpc_object>"16
v48@0:8{?=qqd}16q40
v40@0:8@16@?24@?32
[12{?="valid"B"state"{?="startStyle"q"endStyle"q"transitionFraction"d}}]
v32@0:8@"UIView<_SBWFakeBlur>"16q24
@40@0:8@16q24Q32
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
B24@0:8N^{?=qqd}16
v32@0:8@16B24B28
v52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16B48
@"UIColor"
@"UIView<_SBWFakeBlur>"
@"UIImageView"
v32@0:8@"SBWDeferredImageSlot"16@"UIImage"24
{CGSize=dd}32@0:8{CGSize=dd}16
@"SBWImageSlot"
