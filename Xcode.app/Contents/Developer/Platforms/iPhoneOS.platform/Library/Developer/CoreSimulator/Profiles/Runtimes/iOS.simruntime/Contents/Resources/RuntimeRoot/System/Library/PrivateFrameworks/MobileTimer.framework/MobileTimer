%s %@
%s Failed to %@ pause timer intent %@%@
%s Successfully %@ pause timer attribute intent %@ with response %@
%s Failed to %@ resume timer intent %@%@
%s Successfully %@ resume timer attribute intent %@ with response %@
exportedObject: %{public}@ must conform to protocol: %{public}@
%s intent:%@
%{public}@ alarm fetch returned alarms: %{public}@
%{public}@ found no alarm to enable
%{public}@ Alarm being modified: %{public}@. Enabled state from intent: %{public}@, current alarm enable state: %i
%{public}@ alarm state already matches intent state : %{public}@
%{public}@ Updating enable state to %i for alarm: %{public}@
%{public}@ error reading into widgets config: %{public}@
%{public}@ read widget intent ClocksIntent
%{public}@ read widget intent ClocksSingleIntent
%{public}@ read clock widget timezones: %{public}@
%{public}@ reloading widget timeline
mobiletimerd - System language changed, terminating daemon
Initializing %{public}@
%{public}@ loading timers
%{public}@ migration needed
%{public}@ migrated timer is %{public}@
%{public}@ no timer created during migration.
%{public}@ has no timers
%{public}@ binary data storage version detected.  Using old reader.
%{public}@ unexpected error reading data %{public}@
%{public}@ loaded %{public}@
%{public}@ setting all timers %{public}@
%{public}@ setting all timers
%{public}@ received request for timers
%{public}@ returning timers: %{public}@, next timer: %{public}@
%{public}@ adding timer %{public}@
MTTimerStorage - Adding Timer
%{public}@ updating timer %{public}@
MTTimerStorage - Updating Timer
%{public}@ removing timer %{public}@
MTTimerStorage - Removing Timer
%{public}@ dismissing timer with ID %{public}@
MTTimerStorage - Dismissing Timer
%{public}@ repeating timer with ID %{public}@
MTTimerStorage - Repeating Timer
Timer already exists
MTTimerStorage - Failed Adding Timer
MTTimerStorage - Finished Adding Timer
MTTimerStorage - Finished Updating Timer
MTTimerStorage - Failed Updating Timer
%{public}@
MTTimerStorage - Finished Removing Timer
Timer doesn't exist
MTTimerStorage - Failed Removing Timer
Dismissed timer %{public}@ at %{public}@
MTTimerStorage - Finished Dismissing Timer
%{public}@ couldn't find matching timer to dismiss for %{public}@
MTTimerStorage - Failed Dismissing Timer
Repeated timer %{public}@
MTTimerStorage - Finished Repeating Timer
MTTimerStorage - Failed Repeating Timer
%{public}@ notifying observers for timer addition
%{public}@ notifying observers for timer update
%{public}@ notifying observers for timer removal
%{public}@ notifying observers for timer dismissal
%{public}@ notifying observers for timer firing
%{public}@ notifying observers for next timer change
-----MTTimerStorage-----
Timers: %{public}@
Last Modified: %{public}@
MTTimerStorage - Next Timer Changed
MTTimerStorage - Fired Timer
%{public}@ removing all timers
%{public}@ registered %{public}@
%{public}@ is registering for distributed notifications
%{public}@ is registering for darwin notifications
%{public}@ is registering for alarm notifications
%{public}@ is registering for darwin notification %{public}@
%{public}@ received notification %{public}@
%{public}@ Using a scheduling power assertion timeout of %{public}d
%{public}@ Alarm added - Request snapshot
%{public}@ Alarm updated - Request snapshot
%{public}@ Alarm removed - Request snapshot
%{public}@ has no sync manager.
MTAlarmSyncDataModel - Syncing Alarm Dismiss
MTAlarmSyncDataModel - Syncing Alarm Snooze
%{public}@ performing action %{public}@
MTAlarmSyncDataModel - Applying Alarm Dismiss
MTAlarmSyncDataModel - Applying Alarm Snooze
-----%{public}@-----
Alarm Sync Manager: %{public}@
%{public}@ no sleep alarm, sleep disabled
%{public}@ sleep schedule disabled
%{public}@ haven't dismissed morning alarm yet so we're sleeping
%{public}@ wake up alarm was snoozed (%{public}@) so we're sleeping
%{public}@ next trigger is for wake up (%{public}@) so we're sleeping
%{public}@ bedtime reminder was snoozed (%{public}@) for after the bedtime: (%{public}@). it is currently before bedtime and the snooze date
%{public}@ bedtime reminder was snoozed (%{public}@) for after the bedtime. it is currently past bedtime but before the snooze date.
%{public}@ user confirmed go to bed notification (%{public}@) so we're sleeping until %{public}@
%{public}@ haven't seen go to bed reminder yet (%{public}@)
%{public}@ not bedtime yet (%{public}@)
%{public}@ bedtime reached, checking state
%{public}@ waketime reached but alarm not enabled, dismissing
%{public}@ scheduling alarm timeout
%{public}@ alarm timeout occurred, dismissing
%{public}@ received %{public}@
%{public}@ Active Paired Device: %{public}@ (version: %{public}@)
%{public}@ no paired device detected
%{public}@ paired watch version is too old for sync
%{public}@ has active paired watch%{public}@
-----MTPairedDeviceListener-----
Paired Device: %{public}@ - %{public}@ - %{public}@
Paired Device Active: %{public}d
%{public}@ received willPresentNotification
%{public}@ completing with UNNotificationPresentationOptionAlert for %{public}@
%{public}@ completing with UNNotificationPresentationOptionAlert|UNNotificationPresentationOptionSound for %{public}@
Connection info must be non-nil
Initializing %{public}@ with info %{public}@
%{public}@ deallocing...
%{public}@ rebuilding connection
%{public}@ connection interrupted
%{public}@ connection invalidated
%{public}@ will retry connection because the response to the lifecycle notification failed
%{public}@ connection invalidated.  Retrying
%{public}@ not retrying invalidated connection
%{public}@ received lifecycle darwin notification. Reestablishing connection.
%{public}@ received lifecycle darwin notification.  Reconnecting.
%{public}@ received lifecycle darwin notification but does not have a reconnection handler.
Failed to reconnect for provider %{public}@ with error %{public}@.
%{public}@ retrying failed reconnect
%{public}@ attempting to reconnect.
%{public}@ failed to reconnect too many times
%{public}@ received a remote proxy error: %{public}@
%{public}@ expected non-nil proxy@
%{public}@ expected non-nil connection
%{public}@ invalidating
%{public}@ Handling manual %{public}@ invalidation
%{public}@ Keeping off until: %{public}@
%{public}@ Not in user sleep window
%{public}@ We are past keepOffUntilDate: %{public}@
%{public}@ ignoring updateState until keepOffUntilDate: %{public}@
%{public}@ Failed adding assertion update listener: %@
%{public}@ Added assertion update listener
%{public}@ engageUntilDate:userEngaged
%{public}@ already have assertion
%{public}@ updating active assertion with new end date %{public}@, isUserRequested %d
%{public}@ acquiring assertion with details %{public}@
%{public}@ Failed to acquire assertion with %{public}@
%{public}@ Successfully acquired assertion
%{public}@ clearKeepOff:
%{public}@ disengage:
%{public}@ there is no assertion
%{public}@ Failed to release assertion with %{public}@
%{public}@ Successfully released assertion
%{public}@ keepOffUntilDate: %{public}@
%{public}@ scheduleUpdateForSecondsFromNow: %f
%{public}@ re-checking %{public}@
%{public}@ user manually turning off %{public}@ (%{public}@)
%{public}@ didReceiveModeAssertionInvalidation %{public}@
%{public}@ user woke up, turning off %{public}@ if it's on
%{public}@ user went to bed, checking %{public}@
%{public}@ bedtime reminder fired, checking %{public}@
%{public}@ it's the user's bedtime, checking %{public}@
%{public}@ wake up alarm fired, checking %{public}@
%{public}@ wake up alarm snoozed, checking %{public}@
%{public}@ user %{public}@ sleep alarm, checking %{public}@
%{public}@ significant time change detected, checking %{public}@
-----%@-----
isEnabled: %d, isUserRequested: %d
%{public}@ resuming sync service
%{public}@ sync currently disabled, not starting, and removing any pending changes.
%{public}@ stopping sync service
%{public}@ removing pending changes
%{public}@ still has changes
%{public}@ no pending changes
%{public}@ syncing %{public}@
%{public}@ ignoring sync because we're not started
%{public}@ applying change %{public}@
%{public}@ nothing to apply
%{public}@ resetting data store
%{public}@ successfully sent %lu changes
%{public}@ incremental sync requested
%{public}@ sync isn't disabled.
%{public}@ sync is disabled.
Sync Service: %@
Sync Status: %lu
Pending Changes: %lu
%{public}@ createAlarm requested without time
%{public}@ no alarm, disabling
%{public}@ feature not enabled
%{public}@ user confirmed bedtime reminder (%{public}@).  Starting session.
%{public}@ user woke up at %@ (%{public}@)
%{public}@ received notification response
%{public}@ received response for category %{public}@ and action %{public}@
Unexpected alarm notification action: %{public}@
%{public}@ calling completion
%{public}@ received snooze action for %{public}@
%{public}@ received go to bed action for bedtime notification %{public}@
%{public}@ received dismiss action for wakeup alarm %{public}@
%{public}@ received dismiss action for bedtime notification %{public}@
%{public}@ received dismiss action for snooze countdown notification %{public}@
%{public}@ received dismiss action for alarm %{public}@
%{public}@ received response for action %{public}@
Unexpected timer notification action: %{public}@
%{public}@ received dismiss action for timer %{public}@
%{public}@ received repeat action for timer %{public}@
Initializing %{public}@ with persistence %{public}@ and migrator %{public}@
%{public}@ cleaning up snooze fire date for sleep alarm %{public}@
%{public}@ cleaning up repeat schedule for sleep alarm %{public}@
%{public}@ loading alarms
%{public}@ To set as a marker we are hitting here with updated root
%{public}@ has no alarms
%{public}@ clean-up needed
%{public}@ Migrating sleep alarm: %{public}@ 
%{public}@ Donate signal for existing bedtime
%{public}@ Don't donate signal because no existing bedtime
%{public}@ Failed to release assertion with %{public}@, failure error:%{public}@
%{public}@ Migrating sleep alarm: %{public}@ to regular: %{public}@
%{public}@ loaded %{public}@, sleep alarms %{public}@
%{public}@ loaded %{public}ld alarms, %{public}ld sleep alarms
%{public}@ persistence is nil
%{public}@ ignoring misplaced sleep alarm %{public}@
%{public}@ ignoring misplaced regular alarm %{public}@
%{public}@ received request for alarms
%{public}@ returning ordered alarms: %{public}@, sleep alarms: %{public}@, next alarm: %{public}@
%{public}@ calling completion block with alarms %@
%{public}@ adding alarm %{public}@
MTAlarmStorage - Adding Alarm
%{public}@ updating alarm %{public}@
MTAlarmStorage - Updating Alarm
%{public}@ updating %{public}@ with changes %{public}@
%{public}@ removing alarm %{public}@
MTAlarmStorage - Removing Alarm
%{public}@ removing alarm with ID %{public}@
%{public}@ removing all alarms
%{public}@ setting all alarms %{public}@, sleep alarms %{public}@
%{public}@ setting all alarms
%{public}@ setting sleep alarms %{public}@
%{public}@ transferring metadata from existing sleep alarms %{public}@
%{public}@ snoozing for %{public}lu minutes
%{public}@ snoozing alarm with ID %{public}@ and action %ld
MTAlarmStorage - Snoozing Alarm
%{public}@ dismissing alarm with ID %{public}@ and action %{public}@
MTAlarmStorage - Dismissing Alarm
Alarm already exists
MTAlarmStorage - Failed Adding Alarm
MTAlarmStorage - Finished Adding Alarm
Alarm doesn't exist
MTAlarmStorage - Failed Updating Alarm
%{public}@ Alarm %{public}@ disabled while firing (%{public}@).  Dismissing: %{public}@ (last dismissed: %{public}@)
%{public}@ Alarm %{public}@ modified during save.  Notifying everyone.
%{public}@ Changes: %{public}@
MTAlarmStorage - Finished Updating Alarm
MTAlarmStorage - Finished Removing Alarm
MTAlarmStorage - Failed Removing Alarm
%{public}@ was snoozed and isn't enabled anywhere. Cancelling.
%{public}@ was snoozed but had relevant changes. Cancelling.
%{public}@ was snoozed but early wake up was confirmed (%{public}@). Cancelling.
%{public}@ setting alarms:%{public}@, sleep alarms: %{public}@, persist: %i, notify %i, override: %i
%{public}@ setting alarms - needs update: %i
%{public}@ has a snooze fire date of %{public}@ and we want to snooze until %{public}@.  Picking later date
%{public}@ has a bed-time snooze fire date of %{public}@ and we want to snooze until %{public}@.  Picking later date
MTAlarmStorage - Finished Snoozing Alarm
%{public}@ couldn't find matching alarm to snooze for %{public}@
MTAlarmStorage - Failed Snoozing Alarm
%{public}@ Setting non-repeating alarm %{public}@ to disabled
%{public}@ dismissed alarm %{public}@ at %{public}@
MTAlarmStorage - Finished Dismissing Alarm
%{public}@ couldn't find matching alarm to dismiss for %{public}@
MTAlarmStorage - Failed Dismissing Alarm
%{public}@ notifying observers for alarm addition
%{public}@ notifying observers for alarm change
%{public}@ notifying observers for alarm removal
%{public}@ notifying observers for alarm snooze
%{public}@ notifying observers for alarm dismissal
%{public}@ notifying observers for alarm fire
%{public}@ notifying observers for next alarm change
MTAlarmStorage - Next Alarm Changed
MTAlarmStorage - Fired Alarm
%{public}@ significant time change detected, rescheduling alarms
%{public}@ resetting firedDate on %{public}@ because it's in the future
%{public}@ resetting dismissedDate on %{public}@ because it's in the future
%{public}@ resetting bedtimeFiredDate on %{public}@ because it's in the future
%{public}@ resetting bedtimeDismissedDate on %{public}@ because it's in the future
%{public}@ resetting lastModifiedDate on %{public}@ because it's in the future
%{public}@ handling notification %{public}@
-----MTAlarmStorage-----
Alarms: %{public}@
Sleep Alarms: %{public}@
%{public}@ removing all alarms (sans sleep)
Start monitoring : Springboard/Carousel start
Cannot start monitoring Springboard/Carousel start because it was already started
Stop monitoring : Springboard/Carousel start
Springboard/Carousel started = %{public}@
%s Handled resolve label for intent: %@ with result: %@
%s Failed to fetch timers for intent: %@, error: %@
%s Handled resolve duration for intent: %@ with result: %@
%s Handled resolve type for intent: %@ with result: %@
%s Attempting to remove conflicting timer: %@
%s Successfully removed conflicting timer: %@
%s Failed to remove conflicting timer: %@ with error: %@
%s Successfully %@ create timer intent %@ with response %@
%s Failed to %@ create timer intent %@ with response: %@, error: %@
[Sound] Converting %{public}@ to UNNotificationSound for category %{public}@
[Sound] Made %@
[Sound] Converting %@ to MTSound
%{public}@ rescheduling %{public}ld alarms
%{public}@ scheduling %{public}ld alarms
%{public}@ scheduling %{public}ld additional alarms
%{public}@ fired last alarm more than %d minutes ago.  Seeing if we have to fire any alarms we missed since %{public}@
%{public}@ the last alarm fire date is ahead of the current date (probably because we went back in time).
%{public}@ fired last alarm less than %d minutes ago.  Seeing if we have to fire any alarms we missed since %{public}@
%{public}@ Setting really old snoozed alarm %{public}@ to disabled
%{public}@ Clearing fire date for really old snoozed alarm %{public}@
%{public}@ Clearing fire date for really old firing alarm %{public}@
%{public}@ scheduling %{public}lu alarms
%{public}@ scheduled alarms: %{public}@
%{public}@ unscheduling %{public}lu alarms
%{public}@ next alarm changed: %{public}@
MTAlarmScheduler - Changing Next Alarm
%{public}@ has %{public}ld scheduled alerts and notifications
%{public}@ Scheduling persistent timer for next alert at %{public}@
%{public}@ Timer will fire %f minutes from now
%{public}@ Timer will fire %f seconds from now
%{public}@ Timer should have fired.  Triggering it now
%{public}@ Unscheduling persistent timer.
%{public}@ Alarm timer fired
%{public}@ Alarm %{public}@ is for non-visible event %{public}@
%{public}@ Alarm %{public}@ doesn't play on this device
MTAlarmScheduler - Firing Alarm
%{public}@ %{public}@ fired (scheduled fire date: %{public}@)
%{public}@ first dismissing related notifications for %{public}@
%{public}@ post notification for %{public}@
%{public}@ not posting notification for %{public}@
%{public}@ no next alarm
%{public}@ Alarm %{public}@ was supposed to fire but is no longer scheduled
%{public}@ Scheduled alarms: %{public}@
%{public}@ Find notifications with current trigger date in range %{public}@
%{public}@ Alarm %{public}@ should actually fire in %f seconds
%{public}@ fired all alarms.  Rescheduling.
%{public}@ Setting last alarm trigger date to %{public}@
%{public}@ received update of alarms %{public}@.  Rescheduling them.
%{public}@ posting snooze countdown notification for snoozed alarm %{public}@
-----MTAlarmScheduler-----
Scheduled Alarms: %{public}@
Not scheduling %{public}@ because sleep schedule is disabled
Not scheduling alarm %{public}@ because it's disabled
Not scheduling bedtime triggers
%{public}@ widget refresh requested within throttle interval, dropping
Failed to reload alarm widget timeline %{public}@, error: %{public}@
%{public}@: didAddAlarms
%{public}@: didRemoveAlarms
%{public}@: didDismissAlarm
%{public}@: didFireAlarm
%{public}@: didSnoozeAlarm
%{public}@: didUpdateAlarms
%{public}@: alarm %{public}@ requested widget reload bypass
Dropping undecodeable sync data from %{public}@
%{public}@ Processing os_state handler
State: %{public}@
%{public}@ Error serializing state data: %{public}@
%{public}@ Ignoring user bedtime %@.
%{public}@ stopping session with reason %{public}@
%{public}@ User bed time unset.  Using: %@
%{public}@ User bed time was: %@
%{public}@ User wake time was: %@
[Triggers] %{public}@ handleSystemReadyWithAlarmStorage %lu alarms
[Triggers] %{public}@ didAddAlarms: %{public}@
[Triggers] %{public}@ didUpdateAlarms: %{public}@
[Triggers] %{public}@ didChangeNextAlarm: %{public}@
[Triggers] %{public}@ didSnoozeAlarm: %{public}@, snoozeAction: %{public}@
[Triggers] %{public}@ Telling context store and knowledge store that alarm (%{public}@) has snoozed
[Triggers] %{public}@ didDismissAlarm: %{public}@, dismissAction: %{public}@
[Triggers] %{public}@ Telling context store and knowledge store that alarm (%{public}@) has been dismissed
[Triggers] %{public}@ Ignoring dismissAction (%{public}@)
[Triggers] %{public}@ didFireAlarm: %{public}@, triggerType: %{public}@
[Triggers] %{public}@ Telling context store and knowledge store that alarm (%{public}@) has fired
[Triggers] %{public}@ Ignoring triggerType (%{public}@)
[Triggers] %{public}@ didRemoveAlarms: %{public}@
%{public}@ could not save objects to knowledge store with error: %{public}@
[Triggers writeAlarmUpdatedEventForAlarms] set isEnableDisableModification for alarm %@
[Triggers writeAlarmUpdatedEventForAlarms] set isTimeDifferenceModification for alarm %@
[Triggers writeAlarmUpdatedEventForAlarms] could not find old alarm
[Triggers writeAlarmUpdatedEventForAlarms] isTimeDifferenceModification and isEnableDisableModification are false
Did NOT save alarm biome event of type: %@ because device is class c locked
%{public}@ didAddTimers %{public}@
%{public}@ didUpdateTimers %{public}@
%{public}@ didFireTimer %{public}@
%{public}@ Donating intent: %{public}@
Error donating timer create intent: %{public}@
%@ donated successfully
%@ - Cache Miss
%{public}@ - Error getting alarms: %{public}@
%{public}@ posting distributed notification for alarm: %{public}@
%{public}@ posting distributed notification for timer: %{public}@
%{public}@ System is ready.
Restore is done or not needed.
Restore isn't done.
%{public}@ verifying restore is done
%{public}@ has been notified that restore is done (received %{public}@) or not needed.
%{public}@ restore already handled
%{public}@ has been notified of F5 demo
-----MTSystemStateListener-----
Restore done: %{public}d
%{public}@ loading cities, needs city data update: %d
%{public}@ userWentToBed
%{public}@ telling observers user went to bed
%{public}@ userWokeUp
%{public}@ telling observers user woke up
%{public}@ dismissWakeUpAlarm (%{public}@)
%{public}@ shouldScheduleAlarmTimeoutForSecondsFromNow
%{public}@ telling observers about added sleep alarm
%{public}@ telling observers about removed sleep alarm
%{public}@ sleep alarm changes: %@
%{public}@ telling observers about modified sleep alarm
%{public}@ sleep alarm changes unimportant.
%{public}@ sleep alarm dismissed: (%{public}@)
%{public}@ telling observers bedtime reminder fired at %{public}@
%{public}@ telling observers bedtime reminder was confirmed at %{public}@
%{public}@ telling observers bedtime reminder was snoozed until %{public}@
%{public}@ telling observers bedtime was reached at %{public}@
%{public}@ telling observers waketime time was reached at %{public}@
%{public}@ telling observers wake up alarm fired at %{public}@
%{public}@ telling observers wake up alarm was snoozed until %{public}@
%{public}@ telling observers wake up alarm was dismissed at %{public}@ (%{public}@)
%{public}@ telling observers %{public}@ ended at %{public}@
%{public}@ significant time change detected
%{public}@ pairedDevicePreferencesChanged
-----MTSleepCoordinator-----
%@: %d
%s Failed to %@ delete timer intent %@ %@, response: %@
%s Successfully %@ delete timer attribute intent %@ with response %@
%s Deleting%@ timer %@ from timer manager %@
%s Failed to delete%@ timer %@ from timer manager %@ due to error %@
%s Filtering timer for delete to single unnamed timer: %@
%s Failed to %@ set timer attribute intent %@%@
%s Successfully %@ set timer attribute intent %@ with response %@
[Sound] No tone ID is specified in defaults. Fall back to the ToneLibrary default
[Sound] No media item ID is specified in defaults. Switch to the tone type and use the ToneLibrary default
[Sound] Alarm sound from stored defaults (toneID: %@, mediaItemID: %@)
[Sound] No vibration ID is specified in defaults. Use the ToneLibrary default
[Sound] Alarm vibration from stored defaults (vibrationID: %@)
[Sound] Default alarm sound is %@
[Sound] Default timer sound is %@
[Sound] Storing Alarm Defaults (soundTypeKey: %@, toneIDKey: %@, mediaItemIDKey: %@, vibrationIDKey: %@)
[Sound] Storing Timer Defaults (toneIDKey: %@)
%{public}@ Using snapshot quiescing window of %{public}f
%{public}@ skipping migration from old storage, as this device doesn't support the old storage
%{public}@ migrating old alarms and notifications to storage
%{public}@ need to migrate alarms: %{public}@ and sleep alarm: %{public}@
%{public}@ need to migrate %{public}ld alarms and sleep alarm %{public}d
%{public}@ migrated alarm %{public}@ (enabled: %{public}d)
%{public}@ migrated sleep alarm %{public}@ (enabled: %{public}d)
%{public}@ migrated to alarms: %{public}@ and sleep alarm: %{public}@
%{public}@ skipping migration removal, as this device doesn't support the old storage
%{public}@ removing old alarms and notifications from storage
%{public}@ notification cleanup, as this device doesn't support the old storage
%{public}@ cleaning up old notifications
Date before computing earlierst trigger date for %{public}@: %{public}@
Computing next fire date for %{public}@ after %{public}@
Alarm %{public}@ is snoozed:%d, repeats: %d
Alarm %{public}@ override alarm date: %{public}@
Alarm %{public}@ next alarm date: %{public}@
Alarm %{public}@ alarm trigger: %{public}@
%{public}@ has next fire date %{public}@ after %{public}@
Alarm %{public}@ include snooze: %d
Snooze hasn't fired yet (%{public}@) for alert %{public}@
Snooze has already fired (%{public}@) for alert %{public}@
Alarm %{public}@ candidate triggers after sorting: %{public}@
%{public}@ has next trigger %{public}@
%{public}@ %{public}@ after %{public}@ (%{public}@)
%{public}@ %{public}@ %{public}@
%{public}@ %{public}@ %{public}@ is nil
%{public}@ earliest trigger date: %{public}@
[Migration] (1.8) pushAlertsEnabled: %d
[Migration] (1.8) playOptions: %lu
[Migration] (2.6) old enabled: %d, sleepSchedule: %d
[Migration] (2.6) new enabled: %d, sleepSchedule: %d
Initializing %{public}@ with tracker: %{public}@
%{public}@ sessionDidComplete: %{public}@
%{public}@ writing session
%{public}@ notifying %{public}@
%{public}@ session has nothing to write
%{public}@ session is ready to write
%{public}@ session needs additional processing
%{public}@ failed to process session
%{public}@ archiving session
%{public}@ archiveSession: %{public}@
%{public}@ creating %{public}@ directory at %{public}@
%{public}@ failed to create directory at %{public}@
%{public}@ wrote sessions to file %{public}@
%{public}@ failed to write sessions file %{public}@
%{public}@ writeSession: %{public}@
%{public}@ can write session data
%{public}@ no unprocessed in bed intervals to save
%{public}@ device hasn't been unlocked since boot.  Waiting for unlock...
%{public}@ device has been unlocked.  Writing samples to HealthKit
%{public}@ device has been unlocked but no unprocessed intervals to save
%{public}@ caught exception %{public}@ when trying to read sessions
%{public}@ unarchiving failed with error %{public}@
%{public}@ no data found in file %{public}@
%{public}@ failed to remove session data file error %{public}@
%{public}@ doesn't have write access for HKCategoryTypeIdentifierSleepAnalysis
%{public}@ Processing session: %@
%{public}@ Skipping session due to missing bedtime or wake time: %@
%{public}@ Interval is nil.
%{public}@ sleep interval: %f greater than allowed: %f. Will not be used
%{public}@ Timer added - Request snapshot
%{public}@ Timer updated - Request snapshot
%{public}@ Timer removed - Request snapshot
%{public}@ initializing...
%{public}@ broadcasting %{public}@
%{public}@ registering %{public}@ for %{public}@
%{public}@ posting %{public}@ for %{public}@
%{public}@ unregistering %{public}@ for %{public}@
%{public}@ sensitiveUIStateChanged
%{public}@: %{public}@
%{public}@: Returning widget URL: %{public}@
%{public}@: widget override date: %{public}@
Initializing %{public}@...
%{public}@ calling update handler with %{public}@
%{public}@ _handleAlarmsDidChange
%{public}@ setting up notification centers
%{public}@ setting %lu categories for %{public}@
%{public}@ handling responses with %{public}@
%{public}@ firing %{public}@
%{public}@ adding request %{public}@
%{public}@ failed to fire %{public}@ with error %{public}@
%{public}@ fired %{public}@
%{public}@ dismissing related notifications for %{public}@
%{public}@ dismissing any notifications for %{public}@
%{public}@ alarm is nil
%{public}@ dismissing notifications for %{public}@ (%{public}@)
%{public}@ dismissing notifications with identifiers %{public}@
%{public}@ tearDownNotificationsForEventIdentifiers %{public}@
%{public}@ Tearing down %{public}@
%{public}@ not interrupting audio or locking device because we're in a call
%{public}@ interrupting audio
%{public}@ locking device
%{public}@ dismissing %{public}@
%{public}@ timer is nil
%{public}@ removing all delivered notifications.
%{public}@ migrating old timers to storage
%{public}@ removing old timers and notifications from storage
%{public}@ received significant time change notification. Notifying observers
%{public}@ timeZone: %{public}@
Add Alarm
Update Alarm
Dismiss Alarm
Snooze Alarm
Sync Update Alarm
Sync Remove Alarm
Sync Dismiss Alarm
Sync Snooze Alarm
Fire Alarm
Schedule Alarm
Add Timer
Update Timer
Remove Timer
Dismiss Timer
Repeat Timer
Schedule Timer
Fire Timer
Remove Alarm
Sync Add Alarm
%{public}@ executing %{public}@ immediately
%{public}@ scheduling %{public}@
%{public}@ opening transaction for %{public}@
%{public}@ closing transaction for %{public}@
%{public}@ %{public}@ completed
%{public}@ %{public}@ has no tasks
%{public}@ Not taking power assert for %{public}@ because assertion timeout is 0.
%{public}@ - Error getting timers: %{public}@
%{public}@ warming...
%{public}@ setting default duration to %f
%{public}@ Error getting timers:%{public}@
%{public}@ addTimer:%{public}@
MTTimerManager - Adding Timer
%{public}@ updateTimer:%{public}@
MTTimerManager - Updating Timer
%{public}@ removeTimer:%{public}@
MTTimerManager - Removing Timer
%{public}@ dismissTimerWithIdentifier:%{public}@
MTTimerManager - Dismissing Timer
%{public}@ repeatTimerWithIdentifier:%{public}@
MTTimerManager - Repeating Timer
%{public}@ received MTTimerServerReadyNotification
%{public}@ notified timers added: %{public}@
MTTimerManager - Timer Added
%{public}@ notified timers update: %{public}@
MTTimerManager - Timer Updated
%{public}@ notified timers removed: %{public}@
MTTimerManager - Timer Removed
%{public}@ notified timer fired: %{public}@
MTTimerManager - Timer Fired
%{public}@ notified timer dismissed: %{public}@
MTTimerManager - Timer Dismissed
%{public}@ notified next timer changed: %{public}@
MTTimerManager - Next Timer Changed
%s Failed to %@ reset timer intent %@ %@, response: %@
%s Successfully %@ reset timer intent %@ with response %@
%{public}@ checking in...
%{public}@ reconnecting...
%{public}@ updating cache %{public}@
%{public}@ calling connection provider %{public}@
%{public}@ remote block being called on connection provider %{public}@...
%{public}@ error while reconnecting: %{public}@
%{public}@ finish block called for next alarm
%{public}@ finish block called with no next alarm
%{public}@ finish block called with next alarm: %{public}@, error: %{public}@
%{public}@ addAlarm:%{public}@
MTAlarmManager - Adding Alarm
%{public}@ updateAlarm:%{public}@
MTAlarmManager - Updating Alarm
%{public}@ removeAlarm:%{public}@
MTAlarmManager - Removing Alarm
%{public}@ snoozeAlarmWithIdentifier:%{public}@
MTAlarmManager - Snoozing Alarm
%{public}@ dismissAlarmWithIdentifier:%{public}@ (%{public}@)
MTAlarmManager - Dismissing Alarm
%{public}@ received MTAlarmServerReadyNotification
%{public}@ received MTAlarmServerReadyNotification, posting MTAlarmManagerStateReset
%{public}@ notified alarms added: %{public}@
MTAlarmManager - Alarm Added
%{public}@ notified alarms updated: %{public}@
MTAlarmManager - Alarm Updated
%{public}@ notified alarms removed: %{public}@
MTAlarmManager - Alarm Removed
%{public}@ notified alarm snoozed: %{public}@
MTAlarmManager - Alarm Snoozed
%{public}@ notified alarm fired: %{public}@
MTAlarmManager - Alarm Fired
%{public}@ notified alarm dismissed: %{public}@
MTAlarmManager - Alarm Dismissed
%{public}@ notifying next alarm changed: %{public}@
MTAlarmManager - Next Alarm Changed
%{public}@ notified next alarm changed: %{public}@
%{public}@ notified alarms changed: %{public}@
MTAlarmManager - Refreshing Sleep Alarms
MTAlarmManager - Resetting Sleep Alarms Snooze State
%{public}@ handleSystemReady, has active timer session, processing update
%{public}@ handleSystemReady, no active session found
%{public}@ did add timers, starting sessions
%{public}@ did fire timer, finishing session
%{public}@ did update timer, updating session
%{public}@ didUpdateTimers inside serializer
%{public}@ didUpdateTimers inside na each
%{public}@ processTimerUpdate
%{public}@ starting/resuming timer
%{public}@ pausing timer
%{public}@ stopping timer
%{public}@ cannot process timer state change: %{public}@
%{public}@ activating BSServiceConnection
%{public}@ created connection: %{public}@
%{public}@ launch angel connection activated to bundle id: %{public}@
%{public}@ launch angel connection interrupted to bundle id: %{public}@
%{public}@ launch angel connection invalidated to bundle id: %{public}@
%{public}@ calling connection activate
%{public}@ no server connection, rebuilding
%{public}@ server connection created
%{public}@ server not created for connection: %{public}@
%{public}@ resuming timer
%{public}@ resending timer data entry
%{public}@ updating timer to state %lu
%{public}@ error pausing timer from widget listerener: %{public}@
%{public}@ updated timer state to %lu successfully
%s Updating%@ timer %@ from timer manager %@
%s Failed to update%@ timer %@ from timer manager %@ due to error %@
%s Filtering timer for update to single unnamed timer: %@
%s Successfully handled search timers intent: %@ with response %@
%s Failed to handle search timers with intent: %@ due to error %@
%{public}@ Updating keep off until date: %{public}@
%{public}@ We are before keep off until date: %{public}@, turning off %{public}@ if it's on
%{public}@ no sleep alarm, turning off %{public}@ if it's on
%{public}@ sleep schedule for %{public}@ not enabled, turning off %{public}@ if it's on
%{public}@ %{public}@ not enabled for alarm %{public}@, turning off %{public}@ if it's on
%{public}@ waiting 60 seconds before turning on %{public}@ for alarm %{public}@
%{public}@ turning on %{public}@ if it's not on for alarm %{public}@
%{public}@ not in sleep window for alarm %{public}@, turning off %{public}@ if it's on
%{public}@ ignoring user requested off because it's for previous sleep window
%{public}@ Alarm added - Donating intent: %{public}@
Error donating alarm create intent: %{public}@
Error deleting donations for update: %{public}@
%{public}@ Interactions for updated alarm %@ deleted successfully
%{public}@ Updated alarm - Donating intent: %{public}@
%{public}@ Updated Alarm %@ donated successfully
Error donating alarm enable intent: %{public}@
%{public}@ Alarm updated - Donating intent: %{public}@
Error donating alarm update intent: %{public}@
Error deleting donations: %{public}@
Interactions for %@ deleted successfully
%{public}@ loading legacy data
%{public}@ loading user preferences
%{public}@ loading scheduled notifications
%{public}@ found %lu scheduled notifications
%{public}@ migrated from springboard defaults
%{public}@ upgrading alarms
%{public}@ found %ld alarms to upgrade
%{public}@ Old alarms being upgraded: %@
%{public}@ New alarms already present: %@
%{public}@ No alarms found to upgrade
%{public}@ upgrading timer
%{public}@ setting current sound: %@
%{public}@ setting current sound: Stop Playing
%{public}@ Removing AlarmList
%{public}@ Removing SBCountdownTimerSoundIdentifier
%{public}@ Removing SBCountdownTimerTimeIdentifier
%{public}@ Reading alarms from preferences: %@
%{public}@ Invalid alarm found in preferences :: %@
%{public}@ Reading sleep alarm from preferences: %@
%{public}@ reconiling alarms with notifications
%{public}@ found scheduled notification matching alarm %{public}@.  Forcing active for migration.
%{public}@ finished reconiling alarms with notifications
%{public}@ loading timer defaults
%{public}@ purging legacy data
%{public}@ deleting defaults
%{public}@ cancelling notifications
%{public}@ resuming connection
Listener %{public}@ posting lifecycle darwin notification %{public}@
%{public}@ invalidation handler called for connection %{public}@...
Connection %{public}@ not entitled
Connection to server via %{public}@ mach port was interrupted.
Connection to server via %{public}@ mach port was invalidated. Removing server side connection
%{public}@: Adding XPC client: %{public}@
%{public}@: Already has XPC client: %{public}@
%{public}@: Current XPC clients: %{public}@
%{public}@: Removing XPC client: %{public}@
%{public}@ has launched
%{public}@ supports sessions, setting up coordinator
%{public}@ does not support sessions
%{public}@ system is ready
%{public}@ migration finished
Launched: %{public}@
------------------------
%{public}@ removing user defaults
%{public}@ initializing
%{public}@ received %{public}@ notification for %d alarms.
%{public}@ received MTAlarmManagerStateReset notification.
%{public}@ asynchronously reloading alarms
%{public}@ calling reload block
%{public}@ finished reloading
%{public}@ failed reloading: %{public}@
%{public}@ creating sync directory at %{public}@
%{public}@ failed to write create directory at %{public}@
%{public}@ wrote pending changes %{public}@ to file %{public}@
%{public}@ failed to write pending changes to file %{public}@
%{public}@ stored sync version is too old
%{public}@ read pending changes %{public}@ from file %{public}@
%{public}@ got nil pending changes.
%{public}@ caught exception %{public}@ when trying to read pending changes
%{public}@ had no pending changes in file %{public}@
%{public}@ failed to remove bogus pending changes with error %{public}@
[%{public}@] Will enter state %@ with previous state %{public}@
[%{public}@] Did enter state %{public}@ with previous state %{public}@
%{public}@ _handlePrefsChanged: pushAlertsEnabled = %d
%{public}@ unexpected error getting bundle identifier for %{public}@: %{public}@
%{public}@ rescheduling %{public}ld timers
%{public}@ fired last timer more than %d minutes ago.  Seeing if we have to fire any timers we missed since %{public}@
%{public}@ the last timer fire date is ahead of the current date (probably because we went back in time).
%{public}@ fired last timer less than %d minutes ago.  Seeing if we have to fire any timers we missed since %{public}@
%{public}@ Setting really old running timer %{public}@ to stopped
%{public}@ scheduling %{public}lu timers
%{public}@ scheduled timers: %{public}@
%{public}@ unscheduling %{public}lu timers
%{public}@ next timer changed: %{public}@
MTTimerScheduler - Changing Next Timer
%{public}@ Updating persistent timer for %{public}ld scheduled timers
%{public}@ Scheduling persistent timer for next timer at %{public}@
%{public}@ Timer should have fired. Triggering it now
%{public}@ Timer timer fired
MTTimerScheduler - Firing Timer
%{public}@ no next timer
%{public}@ Timer %{public}@ was supposed to fire but is no longer scheduled
%{public}@ Scheduled timers: %{public}@
%{public}@ Timer %{public}@ should actually fire in %f seconds
%{public}@ fired all timers.  Rescheduling.
%{public}@ Setting last timer trigger date to %{public}@
-----MTTimerScheduler-----
Scheduled Timers: %{public}@
%{public}@ Dismissing notifications for timer: %{public}@
Initializing %{public}@ with delegate %{public}@
%{public}@ will enqueue changes %{public}@
%{public}@ ready to enqueue changes
%{public}@ enqueued %{public}@
%{public}@ stopped enqueing at %{public}@
%{public}@ continuing session...
%{public}@ enqueued all %lu changes
%{public}@ has %lu changes to apply
%{public}@ applying %{public}@
%{public}@ skipping invalid change %{public}@
%{public}@ finished applying %lu changes
%{public}@ session %{public}@ wants to reset data store
%{public}@ completed succesfully
%{public}@ failed with error %{public}@
%{public}@ received notification
%{public}@ device has been unlocked
%{public}@ device hasn't been unlocked
%{public}@ posting MTDeviceHasBeenUnlockedForFirstTime notification
%{public}@ Found initial hasBeenUnlockedSinceBoot value of [%d]
-----MTDeviceListener-----
Unlocked since boot: %{public}d
%{public}@ sleep manager initialized
%{public}@ updateSleepAlarms
%{public}@ retrieving sleep schedule model
%{public}@ failed to retrieve sleep schedule model with error: %{public}@
%{public}@ retrieved sleep schedule model: %{public}@
%{public}@ sleep schedule is nil before completing onboarding
%{public}@ sleep schedule is nil after completing onboarding.
%{public}@ mapping sleep model to alarms
%{public}@ setting mapped alarms to storage
%{public}@ completed sleep onboarding check with result: %{public}@, error: %{public}@ 
%{public}@ resetSleepAlarmSnoozeState
%{public}@ needs sleep migration, fetching watchSleepFeaturesEnabled async
%{public}@ failed to get sleep settings, error: %{public}@ 
%{public}@ fetching sleep alarm from health
%{public}@ failed to retrieve upcoming sleep occurrence with error: %{public}@
%{public}@ failed to retrieve sleep schedule with error: %{public}@
%{public}@ no upcoming sleep schedule occurrence
%{public}@ not informing sleep store of alarm dismiss: %{public}@, action: %{public}@
%{public}@ informing sleep store of alarm dismiss: %{public}@, dismiss date:%{public}@ action: %{public}@
%{public}@ sleep store sleepAlarmWasDismissedOnDate completed for alarm id: %{public}@ with status: %d, error: %{public}@
%{public}@ sleep store sleepAlarmWasSnoozedUntilDate completed for alarm id: %{public}@ with status: %d, error: %{public}@
%{public}@ sleep store sleepAlarmWasModified completed with status: %d, error: %{public}@
%{public}@ no active paired device supporting syncing.  Syncing is disabled
%{public}@ this device doesn't support syncing.
%{public}@ active paired device changed.
%{public}@ modified after %{public}@ (%{public}@)
%{public}@ already fired after %{public}@ (%{public}@)
%{public}@ already dismissed after %{public}@ (%{public}@)
Next trigger date %{public}@ is prior to requested date %{public}@
%{public}@ read data version: %f
Illegal fire time class %{public}@
Starting %{public}@
Stopping %{public}@
System is ready: %{public}@.  Will post MTAlarmServerReadyNotification.
System isn't ready...
MTAlarmServer - Adding Alarm
MTAlarmServer - Updating Alarm
MTAlarmServer - Removing Alarm
MTAlarmServer - Snoozing Alarm
MTAlarmServer - Dismissing Alarm
%{public}@ calling to refresh sleep alarms
%{public}@ could not refresh sleep alarms:%{public}@
%{public}@ calling to reset sleep alarms snooze state
%{public}@ could not reset sleep alarms snooze state:%{public}@
-----MTAlarmServer-----
System Ready: %@
Clients: %{public}@
%s Failed to retrieve timers from timer manager %@: %@
%s Failed to resolve timer %@ from timer manager %@ due to error %@
%s Filtering matched timers for allowedTimerStatesForFollowup:%@ to: %@
%s Filtering resolved timer matches to single unnamed timer: %@
%s Found %ld matching timers for multi target timer: %@
%s Disambiguating %ld matching timers for single target timer: %@
%s Found no matching timers but 1 alternate timer: %@ for target timer: %@
%s Found no matching timers for target timer: %@
%s Found matching timer: %@ for target timer: %@
System is ready: %{public}@.  Will post MTTimerServerReadyNotification.
MTTimerServer - Adding Timer
MTTimerServer - Updating Timer
MTTimerServer - Removing Timer
MTTimerServer - Dismissing Timer
MTTimerServer - Repeating Timer
-----MTTimerServer-----
%{public}@ posting CFUserNotification for %{public}@
%{public}@ failed to post CFUserNotification
%{public}@ cancelling CFUserNotification for %{public}@
%{public}@ calling handler for %{public}@
%{public}@ couldn't find callback for notification %{public}@
%{public}@ loading changes
%{public}@ loaded %lu changes
%{public}@ unsupported change type %{public}@
%{public}@ enqueuing action %{public}@
%{public}@ jumping over pending change %{public}@
%{public}@ unable to merge %{public}@ into %{public}@
%{public}@ dequeing changes %{public}@
%{public}@ resolving incoming change %{public}@
%{public}@ incoming change %{public}@ conflicts with pending change %{public}@
%{public}@ dropping conflicting pending change %{public}@
%{public}@ dropping conflicting incoming change %{public}@
%{public}@ retry timer fired (%{public}@)
Initialized %{public}@
%{public}@ resuming service
%{public}@ suspending service
%{public}@ requests sync %{public}@
%{public}@ setHasChangesAvailable
%{public}@ wants to start sending session %{public}@ for request %{public}@
%{public}@ starting sending session %{public}@
%{public}@ not ok to sync yet
%{public}@ starting receiving session %{public}@
%{public}@ finished sending session %{public}@
%{public}@ finished sending session %{public}@ with error %{public}@
%{public}@ finished request %{public}@ with error %{public}@
%{public}@ finished receiving session %{public}@
%{public}@ finished receiving session %{public}@ with error %{public}@
%{public}@ had a conflict between %{public}@ (preferred) and %{public}@ (rejected)
%{public}@ retrying %{public}@
%{public}@ told it's ok to sync from %{public}@.
-[MTPauseResumeTimerIntentHandler resolveTargetTimerForPauseTimer:withCompletion:]
v24@?0@"INTimerResolutionResult"8@"NSError"16
-[MTPauseResumeTimerIntentHandler resolvePauseMultipleForPauseTimer:withCompletion:]
-[MTPauseResumeTimerIntentHandler confirmPauseTimer:completion:]
-[MTPauseResumeTimerIntentHandler handlePauseTimer:completion:]
B16@?0@"<MTTimerIntentSupport>"8
@"NSError"16@?0@"MTMutableTimer"8
v24@?0@"NSArray"8@"NSError"16
-[MTPauseResumeTimerIntentHandler resolveTargetTimerForResumeTimer:withCompletion:]
-[MTPauseResumeTimerIntentHandler resolveResumeMultipleForResumeTimer:withCompletion:]
-[MTPauseResumeTimerIntentHandler confirmResumeTimer:completion:]
-[MTPauseResumeTimerIntentHandler handleResumeTimer:completion:]
-[MTPauseResumeTimerIntentHandler _responseToPauseTimerIntent:withPausedTimers:error:dryRun:]
confirm
handle
due to error %@
confirmed
handled
-[MTPauseResumeTimerIntentHandler _responseToResumeTimerIntent:withResumedTimers:error:dryRun:]
StartDate
EndDate
EndReason
Intervals
MetaData
NeedsAdditionalProcessing
needsAdditionalProcessing: %d
intervals: %lu
<%@ %p start: %@ end: %@ %@ reason: %@ metadata: %@>
AlarmDismissal
WakeTimeReached
ConfigurationChanged
ManualExit
Error
MTSyncSnooze+ProtoBuffer.m
Unsupported class for action %@
Unexpected codeable: %@
data
alarmId
hour
minute
allowsSnooze
isSleepAlarm
bedtimeReminderMinutes
bedtimeHour
bedtimeMinute
daySetting
repeatDay
totalRepeatCount
remainingRepeatCount
title
soundType
sound
soundVolume
soundSongId
lastModified
revision
vibe
AlarmFiredNotificationNamePrefix
AlarmSnoozedNotificationNamePrefix
AlarmEditingProxyID
ALARM_DEFAULT_TITLE
%@::%@
Settings :: ID is wrong type
Settings :: ID is invalid
Settings :: hour is wrong type
Settings :: hour is invalid
Settings :: minute is wrong type
Settings :: minute is invalid
Settings :: day setting is wrong type
Settings :: day setting is invalid
Settings :: settings %@
Settings is nil
Alarms
q24@?0@"Alarm"8@"Alarm"16
x-apple-clock:alarm?id=
Alarm.m
Invalid parameter not satisfying: %@
volumeIsValid
%@ %d:%02d 0x%04X "%@" %@ <%@ #%i> %@
MTXPCConnectionInfo.m
exportedObject: %@ must conform to protocol: %@
<%@:%p %@>
-[MTToggleAlarmIntentHandler handleEnableAlarm:completion:]
v20@?0B8q12
-[MTToggleAlarmIntentHandler handleDisableAlarm:completion:]
v16@?0@"NSError"8
B16@?0@"MTAlarm"8
v16@?0@"NSArray"8
@"MTIntentAlarm"16@?0@"MTAlarm"8
-[MTToggleAlarmIntentHandler handleToggleAlarm:completion:]
Found no alarm to enable/disable
@"NAFuture"16@?0@"NSArray"8
v16@?0@"NSNull"8
com.apple.clock.alarm
cities
@16@?0@"MTCity"8
com.apple.mobiletimer.WorldClockWidget
com.apple.mobiletimer.alarm
alarm update
CHSWidgetConfigurationReader
Class getCHSWidgetConfigurationReaderClass(void)_block_invoke
MTWidgetUtilities.m
Unable to find class %s
v8@?0
void *ChronoServicesLibrary(void)
CHSTimelineController
Class getCHSTimelineControllerClass(void)_block_invoke
B16@?0@"NSString"8
com.apple.language.changed
MTScheduledList.m
Not a mutable ordered collection
v32@?0@"MTScheduledObject"8Q16^B24
q24@?0@"MTScheduledObject"8@"MTScheduledObject"16
B16@?0@"MTScheduledObject"8
@"MTScheduledObject"16@?0@"MTTrigger"8
v16@?0@"MTScheduledObject"8
Alerts: %@, Notifications: %@, Events: %@
MTTimers
MTTimerModifiedDate
MTTimerStorageVersion
com.apple.mobiletimerd.MTTimerStorage
com.apple.MTTimerStorage.access-queue
timerID
Timer already exists!
Can't update timer from %@ to %@
Timer storage: %@
Timer doesn't exist
Timer storage - trying to update timer that does not exist
Timer does not exist!
Timer storage - trying to remove timer that does not exist
Timer storage - trying to dismiss timer that does not exist
Timer storage - trying to repeat timer that does not exist
v16@?0@"<MTTimerObserver>"8
B16@?0@"MTTimer"8
q24@?0@"MTTimer"8@"MTTimer"16
Timers
Timers Last Modified
state
None
fired
modified
toneID: %@, mediaItemID: %@, vibeID: %@, volume: %@
com.apple.MTNotificationManager.serialqueue
com.apple.distnoted.matching
com.apple.notifyd.matching
com.apple.alarm
v16@?0@"NSObject<OS_xpc_object>"8
SchedulingAssertionTimeout
%@%@
com.apple.MTAlarmSyncDataModel
@"MTSyncServiceManager"16@?0@"MTAlarmSyncDataModel"8
AlarmSync.data
Alarm Sync Managers
B16@?0@"MTTrigger"8
MTSleepCoordinatorStateMachineState.m
Unhandled sleep window case!
com.apple.MTPairedDeviceListener.access-queue
v16@?0@"<MTPairedDeviceObserver>"8
C0F3C2C3-0CDE-4DF9-A95A-789AC9A0348B
 with sync capability
%@ %@
alarmProperties
MTXPCConnectionProvider.m
Connection info must be non-nil
Provider XPC connection invalidated
v16@?0@8
@"NAFuture"16@?0@"NSError"8
v24@?0@"NSNumber"8@"NSError"16
@"NAFuture"8@?0
@24@?0@"NSXPCConnection"8@?<v@?@"NSError">16
@"NAFuture"16@?0@"NSXPCConnection"8
sleep mode
MTAlarmCategory
MTAlarmNoSnoozeCategory
MTBedtimeAlarmCategory
MTWakeUpAlarmCategory
MTWakeUpAlarmNoSnoozeCategory
AlarmSnoozeCountdown
MTAlarmDismissAction
MTAlarmSnoozeAction
MTAlarmGoToBedAction
MTBedtimeAlarm
MTSnoozeCountdown
MTScheduledFireDate
MTSnoozeable
MTPlaysOn
MTPresentGoodMorningAlert
MTDismissGoodMorningAlert
com.apple.mobiletimer
com.apple.mobiletimer.user-preferences-and-local-notifications-changed
com.apple.mobiletimer.user-preferences-changed
com.apple.mobiletimer.local-notifications-changed
com.apple.mobiletimer.user-preferences-dirty
com.apple.MobileTimer.critical
MTCriticalEventMessage
@"NSDictionary"8@?0
com.apple.MobileTimer.numberOfAlarms
com.apple.MobileTimer.numberOfActiveAlarms
com.apple.MobileTimer.numberOfRepeatingAlarms
com.apple.MobileTimer.numberOfNamedAlarms
com.apple.MobileTimer.alarmNameLength
com.apple.MobileTimer.Clock.Alarm.adds
com.apple.MobileTimer.Clock.Alarm.removes
com.apple.MobileTimer.Clock.Alarm.activations
com.apple.MobileTimer.Clock.Alarm.deactivations
com.apple.MobileTimer.SleepAlarm.Onboarding.start-views
com.apple.MobileTimer.SleepAlarm.Onboarding.end-views
com.apple.MobileTimer.SleepAlarm.views
com.apple.MobileTimer.SleepAlarm.WakeTime.edits
com.apple.MobileTimer.SleepAlarm.Bedtime.edits
com.apple.MobileTimer.SleepAlarm.activations
com.apple.MobileTimer.SleepAlarm.deactivations
com.apple.MobileTimer.SleepAlarm.History.views
com.apple.MobileTimer.SleepAlarm.sleepalarm
com.apple.MobileTimer.SleepAlarm.wakealarm
com.apple.MobileTimer.SleepAlarm.cycles
com.apple.MobileTimer.SleepAlarm.enabled
com.apple.MobileTimer.SleepAlarm.enabled-days
com.apple.MobileTimer.SleepAlarm.active-days
com.apple.MobileTimer.SleepAlarm.duration
com.apple.MobileTimer.SleepAlarm.enabled-duration
com.apple.MobileTimer.WorldClock.adds
com.apple.MobileTimer.WorldClock.removes
com.apple.MobileTimer.Stopwatch.starts
com.apple.MobileTimer.Stopwatch.resets
com.apple.MobileTimer.Stopwatch.laps
com.apple.MobileTimer.Stopwatch.pauses
com.apple.MobileTimer.Timer.starts
com.apple.MobileTimer.Timer.pauses
com.apple.MobileTimer.Timer.resumes
com.apple.MobileTimer.Timer.cancels
com.apple.MobileTimer.MultipleTimers.running
multipleTimersCount
com.apple.MobileTimer.Siri.Alarm.adds
com.apple.MobileTimer.Siri.Alarm.removes
com.apple.MobileTimer.Siri.Alarm.searches
com.apple.MobileTimer.Siri.Alarm.activations
com.apple.MobileTimer.Siri.Alarm.deactivations
com.apple.MobileTimer.Siri.Alarm.snoozes
com.apple.MobileTimer.Siri.Alarm.dismisses
com.apple.MobileTimer.Siri.Timer.searches
com.apple.MobileTimer.Siri.Timer.sets
com.apple.MobileTimer.Siri.Timer.cancels
com.apple.MobileTimer.Siri.Timer.pauses
com.apple.MobileTimer.Siri.Timer.resumes
com.apple.MobileTimer.Siri.Timer.dismisses
com.apple.MobileTimer.Sync.Error
com.apple.MobileTimer.Sync.success
com.apple.MobileTimer.Sync.failure
com.apple.MobileTimer.Alarm.add
com.apple.MobileTimer.Alarm.delete
com.apple.MobileTimer.Alarm.update
com.apple.MobileTimer.SleepAlarm.add
com.apple.MobileTimer.SleepAlarm.delete
com.apple.MobileTimer.SleepAlarm.update
com.apple.MobileTimer.Alarm.dismiss
com.apple.MobileTimer.Alarm.snooze
com.apple.MobileTimer.Alarm.snooze.stop
com.apple.MobileTimer.Bedtime.dismiss
com.apple.MobileTimer.Bedtime.snooze
com.apple.MobileTimer.Bedtime.confirm
com.apple.MobileTimer.WakeUp.dismiss
com.apple.MobileTimer.WakeUp.snooze
com.apple.MobileTimer.Timer.add
com.apple.MobileTimer.Timer.delete
com.apple.MobileTimer.Timer.update
com.apple.MobileTimer.Timer.dismiss
com.apple.MobileTimer.Timer.repeat
HHmmssSS
HHmmss
mmssSS
mmss
HH%@
%1$@
%2$@
%3$@
%4$@
MTKeepDndOffUntilDate
com.apple.mobiletimer.bedtime-mode
com.apple.mobiletimer.sleep-mode.automatic
v20@?0B8@"NSError"12
removed
isEnabled
isUserRequested
MTDateFormattingLocaleDidChangeNotification
com.apple.MTSyncServiceManager.serialqueue
Sync Service
Sync Status
Pending Changes
@16@?0@"MTIntentRepeatDay"8
Unexpected alert for go to bed action
Unexpected action type: %ld
com.apple.mobiletimerd.reset
MTAlarms
MTSleepAlarm
MTSleepAlarms
MTAlarmModifiedDate
MTAlarmStorageVersion
MTAlarmSnoozeDuration
MTBedtimeSnoozeDuration
com.apple.mobiletimerd.MTAlarmStorage
com.apple.mobiletimer.bedtime.migration.done
com.apple.MTAlarmStorage.access-queue
BED_TIME
Localizable
MTDefaultTimerVibrationID
alarmID
@"<NSCopying>"16@?0@"MTAlarm"8
@"MTAlarm"16@?0@"MTAlarm"8
@16@?0@"MTAlarm"8
Alarm already exists!
Alarm does not exist!
Alarm storage - trying to update alarm that does not exist
Alarm storage - trying to remove alarm that does not exist
v16@?0@"MTAlarm"8
Alarm storage - trying to snooze alarm that does not exist
Alarm storage - trying to dismiss alarm that does not exist
v16@?0@"<MTAlarmObserver>"8
Sleep Alarms
Alarms Last Modified
enabled
firing
snoozed
BMDiscoverabilitySignalEvent
Class getBMDiscoverabilitySignalEventClass(void)_block_invoke
MTAlarmStorage.m
void *BiomeStreamsLibrary(void)
BMStreams
Class getBMStreamsClass(void)_block_invoke
Serial MTSpringboardStartMonitor queue
v12@?0i8
v16@?0@"<MTSpringboardStartMonitorObserver>"8
com.apple.springboard.finishedstartup
-[MTCreateTimerIntentHandler resolveLabelForCreateTimer:withCompletion:]
-[MTCreateTimerIntentHandler resolveLabelForCreateTimer:withCompletion:]_block_invoke_2
-[MTCreateTimerIntentHandler resolveLabelForCreateTimer:withCompletion:]_block_invoke
v12@?0B8
-[MTCreateTimerIntentHandler resolveDurationForCreateTimer:withCompletion:]
-[MTCreateTimerIntentHandler resolveTypeForCreateTimer:withCompletion:]
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
-[MTCreateTimerIntentHandler confirmCreateTimer:completion:]
-[MTCreateTimerIntentHandler handleCreateTimer:completion:]
v12@?0I8
@"NAFuture"16@?0@"NSNull"8
B16@?0@"NSObject<MTTimerIntentSupport>"8
-[MTCreateTimerIntentHandler _createTimerWithIntent:dryRun:completion:]_block_invoke
v16@?0@"NSObject<MTTimerIntentSupport>"8
v28@?0@"INCreateTimerIntent"8B16@?<v@?@"INCreateTimerIntentResponse">20
-[MTCreateTimerIntentHandler _responseToCreateTimerIntent:withCreatedTimer:error:dryRun:]
B32@?0@"NSObject<MTTimerIntentSupport>"8Q16^B24
void _MRMediaRemoteGetNowPlayingApplicationPlaybackState(__strong dispatch_queue_t, void (^__strong)(MRPlaybackState))
MTCreateTimerIntentHandler.m
MRMediaRemoteGetNowPlayingApplicationPlaybackState
void *MediaRemoteLibrary(void)
toneID
mediaID
vibeID
MTAlertSoundDuration
<%@:%p alertTopic: %@, toneID: %@, mediaItemID: %llu, vibeID: %@, volume: %@
MTAlarmLastTriggerDate
com.apple.MTAlarmScheduler.alarm-event
com.apple.MTAlarmTask.fire
com.apple.MTAlarmTask.reschedule
com.apple.MTAlarmScheduler.access-queue
v16@?0@?<v@?>8
MTAlarmScheduler
Scheduled alarms
alarm
<%@:%p %@, Trigger: %@>
com.apple.MTExponentialBackOffTimer.serial
<%@: %p backoff: %ld>
com.apple.mobiletimerd.MTWidgetProvider
Widget Provider - failed to reload alarm widget timeline
MTCompanionSyncSerializer.m
%@ not protobuffer serializable
Create
Update
Enable
Disable
Delete
time
label
identifier
repeat
com.apple.mobiletimer-framework.MobileTimerIntents
v16@?0q8
Alarm
CSSearchableIndex
Class getCSSearchableIndexClass(void)_block_invoke
MTAlarmIntent.m
void *CoreSpotlightLibrary(void)
com.apple.mobiletimerd.diagnostics
com.apple.mobiletimerd
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
Unexpected nil userBedtime
Wake times don't agree
NSString *getHKMetadataKeyTimeZone(void)
MTTimeInBedSessionTracker.m
HKMetadataKeyTimeZone
void *HealthKitLibrary(void)
NSString *get_HKPrivateMetadataKeySleepAlarmUserSetBedtime(void)
_HKPrivateMetadataKeySleepAlarmUserSetBedtime
NSString *get_HKPrivateMetadataKeySleepAlarmUserWakeTime(void)
_HKPrivateMetadataKeySleepAlarmUserWakeTime
ALARM_DETAIL_EVERY_MONDAY
ALARM_DETAIL_EVERY_TUESDAY
ALARM_DETAIL_EVERY_WEDNESDAY
ALARM_DETAIL_EVERY_THURSDAY
ALARM_DETAIL_EVERY_FRIDAY
ALARM_DETAIL_EVERY_SATURDAY
ALARM_DETAIL_EVERY_SUNDAY
ALARM_DETAIL_EVERY_DAY
ALARM_DETAIL_WEEKDAYS
ALARM_DETAIL_WEEKENDS
ALARM_SHORT_MONDAY
ALARM_SHORT_TUESDAY
ALARM_SHORT_WEDNESDAY
ALARM_SHORT_THURSDAY
ALARM_SHORT_FRIDAY
ALARM_SHORT_SATURDAY
ALARM_SHORT_SUNDAY
@"NSString"24@?0@"NSString"8@"NSString"16
@"NSString"32@?0@"NSString"8@"NSString"16@"NSString"24
ALARM_REPEAT_NEVER
ALARM_DETAIL_REPEAT_NEVER
ALARM_EVERY_MONDAY
ALARM_MONDAY
ALARM_EVERY_TUESDAY
ALARM_TUESDAY
ALARM_EVERY_WEDNESDAY
ALARM_WEDNESDAY
ALARM_EVERY_THURSDAY
ALARM_THURSDAY
ALARM_EVERY_FRIDAY
ALARM_FRIDAY
ALARM_EVERY_SATURDAY
ALARM_SATURDAY
ALARM_EVERY_SUNDAY
ALARM_SUNDAY
ALARM_EVERY_DAY
ALARM_WEEKDAYS
ALARM_WEEKENDS
com.apple.mobiletimerd.MTCoreDuetMonitor
transition
com.apple.MTTimerIntentDonor.serialqueue
com.apple.clock.timer
duration
v40@?0@"NSArray"8@"NSArray"16@"MTAlarm"24@"NSError"32
Restore done
MTTimerDataVersion
MTTimerID
MTTimerState
MTTimerDuration
MTTimerFireTimerClass
MTTimerFireTime
MTTimerTitle
MTTimerLastModifiedDate
MTTimerFiredDate
MTTimerDismissedDate
MTTimerSound
MTTimerSiriContext
v32@?0@"ALCity"8Q16^B24
DeviceClass
iPad
PerformanceTestingEnabled
/tmp/WorldClock-performance_test.plist
cityAddTest
timestamp
citySent
q24@?0@"ALCity"8@"ALCity"16
NPSManager
Class getNPSManagerClass(void)_block_invoke
WorldClockManager.m
void *NanoPreferencesSyncLibrary(void)
com.apple.MTSleepCoordinator.wakeupalarmtimeout-event
MTSleepTimeOutMinutesKey
com.apple.MTSleepCoordinator.access-queue
@"NAFuture"16@?0@8
v16@?0@"<MTSleepObserver>"8
sleep session
MTSleepCoordinator
isUserAsleep
com.apple.MTOSTransaction.serial
MTDeleteTimerIntentHandlerErrorDomain
-[MTDeleteTimerIntentHandler resolveTargetTimerForDeleteTimer:withCompletion:]
-[MTDeleteTimerIntentHandler resolveDeleteMultipleForDeleteTimer:withCompletion:]
-[MTDeleteTimerIntentHandler confirmDeleteTimer:completion:]
-[MTDeleteTimerIntentHandler handleDeleteTimer:completion:]
-[MTDeleteTimerIntentHandler _responseToDeleteTimerIntent:withDeletedTimers:error:dryRun:]
-[MTDeleteTimerIntentHandler _deleteTimer:multiple:dryRun:completion:]
 (dry-run)
-[MTDeleteTimerIntentHandler _deleteTimer:multiple:dryRun:completion:]_block_invoke
@16@?0@"NSObject<MTTimerIntentSupport>"8
Failed to delete%@ timer %@ from timer manager %@ due to ambiguity between timers %@
-[MTSetTimerAttributeIntentHandler handleSetTimerAttribute:completion:]
v24@?0@"INTimer"8@"NSError"16
-[MTSetTimerAttributeIntentHandler confirmSetTimerAttribute:completion:]
-[MTSetTimerAttributeIntentHandler resolveToDurationForSetTimerAttribute:withCompletion:]
-[MTSetTimerAttributeIntentHandler resolveTargetTimerForSetTimerAttribute:withCompletion:]
-[MTSetTimerAttributeIntentHandler _responseToSetTimerAttributeIntent:withUpdatedTimer:error:dryRun:]
Failed to update%@ timer %@ from timer manager %@ - renaming from %@ to %@ is not supported.
Failed to update%@ timer %@ from timer manager %@ due to invalid duration %f
snoozeAction
dismissAction
syncDate
syncID
syncVersion
MTSoundType
MTSoundToneID
MTSoundMediaItemID
MTSoundVibrationID
MTSoundVolume
MTDefaultAlarmSoundType
MTDefaultAlarmToneID
MTDefaultAlarmMediaItemID
MTDefaultAlarmVibrationID
MTDefaultTimerToneID
Unexpected MTSoundCategory: %lu
Sound must be nonnull!
Timer
GoToSleep
WakeUp
Generic
Sound type integer value out of bounds: %lu
Unexpected sound type: %lu
Timers only support tones
<%@:%p toneID: %@, mediaItemID: %@, vibeID: %@, volume: %@
v24@?0q8@"NSError"16
citiesLastModified
DefaultCityAdded
LatestUpdateVersion
<%@:%p %@ %@ dismissDate: %@ (%@)>
com.apple.mobiletimer.alarmintent
SnapshotWindow
v16@?0@"Alarm"8
com.apple.mobiletimer.MTAlarmDidFireNotification
MTAlarmID
com.apple.mobiletimer.mode.sleep
Every Day
Weekdays
Weekends
q24@?0@"MTAlarm"8@"MTAlarm"16
apple-internal-install
q24@?0@"MTTrigger"8@"MTTrigger"16
v24@?0@"NSString"8@"NSDate"16
dismissed
bedtime dismissed
bedtime fired
keep off until
overriden for date
MTAlarm.m
Must be a single time override
sleep
month
year
schedule
isSnoozed
isFiring
siriContext
bypassReloadDate
DismissAlarm
DismissGoToBedNotification
ConfirmGoToBedNotification
DismissWakeUpAlarm
DismissSnoozeCountdownNotification
DismissWakeUpAlarmTimeOut
AlarmConfigurationChanged
WakeUpAlarmConfigurationChanged
SnoozeAlarm
SnoozeWakeUpAlarm
SnoozeGoToBedNotification
MTUnprocessedSessions
SleepSession.data
v16@?0@"<MTSleepSession>"8
v24@?0@8@"NSError"16
@"<MTSleepSession>"16@?0@"<MTSleepSession>"8
HKHealthStore
Class getHKHealthStoreClass(void)_block_invoke
MTSleepSessionManager.m
HKObjectType
Class getHKObjectTypeClass(void)_block_invoke
HKCategoryTypeIdentifier getHKCategoryTypeIdentifierSleepAnalysis(void)
HKCategoryTypeIdentifierSleepAnalysis
HKCategorySample
Class getHKCategorySampleClass(void)_block_invoke
HKDevice
Class getHKDeviceClass(void)_block_invoke
com.apple.MTMetrics.serialqueue
%@.%@
com.apple.mobiletimer-framework.preferences-and-notifications-changed
com.apple.mobiletimer-framework.preferences-changed
com.apple.mobiletimer-framework.local-notifications-changed
bundleIdentifier
B16@?0q8
B16@?0d8
com.apple.mobiletimer.MTUserDefaults
Distributed
ReleaseType
Vendor
v16@?0@"<MTSensitiveUIStateObserver>"8
com.apple.NanoAlarm
com.apple.private.NanoTimer
com.apple.private.OldNanoTimer
assistant_service
ForceClock
@"NSDate"8@?0
MTUtilities.m
date can't be nil
en_US
@"NSDate"16@?0@"NSDate"8
clock-worldclock
clock-alarm
clock-sleep-alarm
clock-stopwatch
clock-timer-running
clock-timer
v16@?0@"MTTimer"8
@"NAFuture"16@?0@"NSString"8
%@:%@
default
list
lastTimer
com.apple.%@.serial
HOURS_MINUTES_AHEAD
HOURS_MINUTES_BEHIND
DAY_FORMAT_HOURS_MINUTES_AHEAD
DAY_FORMAT_HOURS_MINUTES_BEHIND
DAY_FORMAT_HOURS_AHEAD
HOURS_AHEAD
DAY_FORMAT_MINUTES_AHEAD
DAY_FORMAT_MINUTES_BEHIND
MINUTES_AHEAD
MINUTES_BEHIND
DAY_FORMAT_ONE_HOUR_AHEAD
DAY_FORMAT_ONE_HOUR_BEHIND
ONE_HOUR_AHEAD
ONE_HOUR_BEHIND
DAY_FORMAT_HOURS_BEHIND
HOURS_BEHIND
_SPACE
clock-worldclock:default
yyyy:MM:dd:HH:mm
com.apple.mobiletimer-framework
WorldClock
type
city
languageCode
timeZone
countryCode
name
unlocalizedName
countryName
unlocalizedCountryName
America/Los_Angeles
Cupertino
%@ %@, %@ || %@ %@ || %@, %@
x-apple-clock:world-clock?
alcid=%d
ccid=
[%@] title: [%@] fireDate: [%@] identifier: [%@] clockAppSectionURL: [%@]
com.apple.MTNextAlarmManager.accessqueue
MTBedtimeExpirationDuration
v16@?0@"UNUserNotificationCenter"8
ALARM_STOP_ACTION
ALARM_SNOOZE_ACTION
stop.circle
SNOOZE_STOP
TIMER_STOP_ACTION
TIMER_REPEAT_ACTION
BEDTIME_GO_TO_BED_ACTION
BEDTIME_SNOOZE_ACTION
Failed to post alarm user notifiation
B16@?0@"UNNotification"8
@16@?0@"UNNotification"8
Failed to post timer user notifiation
TIME_FOR_BED_TITLE
TIME_FOR_BED_ALARM_ON_MESSAGE_FORMAT
_SINGULAR
TIME_FOR_BED_ALARM_OFF_MESSAGE
ALARM_SNOOZING_TITLE
Unexpected trigger type %ld for scheduled alarm %@
Unexpected trigger type %ld for scheduled timer %@
TUCallCenter
Class getTUCallCenterClass(void)_block_invoke
MTUserNotificationCenter.m
void *TelephonyUtilitiesLibrary(void)
Boolean MTMRMediaRemoteSendCommand(MRMediaRemoteCommand, CFDictionaryRef)
MRMediaRemoteSendCommand
MTTimerCategory
MTTimerDismissAction
MTTimerRepeatAction
com.apple.mobiletimer.start-timer
com.apple.mobiletimer.stop-timer
MTTimerUserTitle
fromObject
toObject
<%@:%p %@ = %@ (was %@)>
v16@?0@"MTChange"8
@24@?0@"NSString"8@"MTChange"16
<%@:%p %@ >
SignificantTimeChange
com.apple.MTTimeListener.access-queue
v16@?0@"<MTTimeObserver>"8
MobileTimer
Agent
Sync
Sleep
Activity
com.apple.mobiletimer.logging
dismissDate
-[MTCreateSingleTimerIntentHandler resolveLabelForCreateTimer:withCompletion:]
-[MTCreateSingleTimerIntentHandler resolveDurationForCreateTimer:withCompletion:]
-[MTCreateSingleTimerIntentHandler resolveDurationForCreateTimer:withCompletion:]_block_invoke
-[MTCreateSingleTimerIntentHandler confirmCreateTimer:completion:]
-[MTCreateSingleTimerIntentHandler handleCreateTimer:completion:]
-[MTCreateSingleTimerIntentHandler _responseToCreateTimerIntent:withCreatedTimer:error:dryRun:]
com.apple.mobiletimer-framework.preferences-and-notifications-changed-externally
com.apple.mobiletimer-framework.preferences-changed-externally
com.apple.mobiletimer-framework.local-notifications-changed-externally
com.apple.MTGCDTimer
kMTScheduleTaskOSTransactionId
kMTScheduleTaskGroupOSTransactionId
<%@:%p %@ delay:%f>
<%@:%p tasks: %@>
v32@?0@"NSArray"8@"MTTimer"16@"NSError"24
MTTimerTimeInterval
MTTimerTimeDate
MTTimerManagerTimersAdded
MTTimerManagerTimersUpdated
MTTimerManagerTimersRemoved
MTTimerManagerTimerFired
MTTimerManagerFiringTimerChanged
MTTimerManagerFiringTimerDismissed
MTTimerManagerNextTimerChanged
MTTimerManagerTimersChanged
MTTimerManagerStateReset
MTTimerManagerPreferencesChanged
NextTimer
com.apple.mobiletimerd.MTTimerManager
@"MTXPCConnectionProvider"16@?0@"MTTimerManager"8
v16@?0@"<MTTimerServer>"8
v20@?0@?<v@?@"NSArray"@"MTTimer"@"NSError">8B16
Timer is running but doesn't have a next trigger.
v32@?0@"MTTimer"8Q16^B24
MTTimerManager.m
State can't be unknown
@"NAFuture"16@?0@"MTTimer"8
%@ cannot restart a timer (%@) that isn't stopped.
Start timer isn't finished, but expected it to be
v24@?0@"NSNull"8@"NSError"16
Update Timer isn't finished, but expected it to be
-[MTResetTimerIntentHandler resolveTargetTimerForResetTimer:withCompletion:]
-[MTResetTimerIntentHandler confirmResetTimer:completion:]
-[MTResetTimerIntentHandler handleResetTimer:completion:]
-[MTResetTimerIntentHandler _responseToResetTimerIntent:withResetTimers:error:dryRun:]
MTObserverStore.m
observer cannot be nil
Date
UserVisible
MTAlarmManagerAlarmsAdded
MTAlarmManagerAlarmsUpdated
MTAlarmManagerAlarmsRemoved
MTAlarmManagerNextAlarmChanged
MTAlarmManagerAlarmFired
MTAlarmManagerFiringAlarmDismissed
MTAlarmManagerFiringAlarmChanged
MTAlarmManagerAlarmsChanged
MTAlarmManagerStateReset
NextAlarm
com.apple.mobiletimer.MTAlarmManager
.siri_data_changed
com.apple.alarm.label
@"MTXPCConnectionProvider"16@?0@"MTAlarmManager"8
v16@?0@"<MTAlarmServer>"8
v20@?0@?<v@?@"NSArray"@"NSArray"@"MTAlarm"@"NSError">8B16
@"NSArray"40@?0@"NSArray"8@"NSArray"16@"MTAlarm"24@"NSError"32
MTAlarmManager.m
Expected alarm future to be finished.
Expected next alarm future to be finished.
B32@?0@"MTAlarm"8Q16^B24
v24@?0@"MTAlarm"8@"NSError"16
@"NAFuture"16@?0@"MTAlarm"8
com.apple.MTTimerSessionsCoordinator.serialqueue
com.apple.mobiletimer.launchAngelConnection
com.apple.ClockAngel.mach
com.apple.ClockAngel-service
Clock Angel Connection
v16@?0@"BSServiceConnection<BSServiceConnectionContext>"8
v16@?0@"<BSServiceConnectionConfiguring>"8
com.apple.common
BasicAngelIPC
MTWidgetEventListener
MTSessionsManager
Class getMTSessionsManagerClass(void)_block_invoke
MTTimerSessionsCoordinator.m
void *MobileTimerSupportLibrary(void)
en_US_POSIX
yyyy-MM-dd-HH-mm
DND_BEDTIME_MORNING_GREETING
DND_BEDTIME_MORNING_GREETING_LOWERCASE
DND_BEDTIME_AFTERNOON_GREETING
DND_BEDTIME_AFTERNOON_GREETING_LOWERCASE
DND_BEDTIME_EVENING_GREETING
DND_BEDTIME_EVENING_GREETING_LOWERCASE
Localizable_Burrito
alarms
-[MTUpdateTimerIntentHandler _updateTimer:dryRun:allowMultiple:excludeStoppedTimers:filterBlock:updateBlock:completion:]
-[MTUpdateTimerIntentHandler _updateTimer:dryRun:allowMultiple:excludeStoppedTimers:filterBlock:updateBlock:completion:]_block_invoke
B32@?0@"<MTTimerIntentSupport>"8Q16^B24
Failed to update%@ timer %@ from timer manager %@ due to ambiguity between timers %@
v32@?0@"NSObject<MTTiming>"8Q16^B24
-[MTSearchTimerIntentHandler handleSearchForTimers:completion:]
@16@?0@"<MTTimerIntentSupport>"8
-[MTSearchTimerIntentHandler handleSearchForTimers:completion:]_block_invoke_2
-[MTSearchTimerIntentHandler handleSearchForTimers:completion:]_block_invoke
com.apple.MTAlarmIntentDonor.access-queue
com.apple.MTLegacyManager
com.apple.springboard
UpgradeAttempted
SBCountdownTimerSoundIdentifier
AlarmList
allows snooze
sound path
setting
active
SBCountdownTimerTimeIdentifier
timerSleepiPod
timerSound
SleepAlarm
TIMER_INTERVAL
AlarmsLastModified
void MTGSSendAppPreferencesChanged(CFStringRef, CFStringRef)
MTLegacyManager.m
GSSendAppPreferencesChanged
void *GraphicsServicesLibrary(void)
MTXPCConnectionListenerProvider.m
com.apple.MTXPCConnectionListenerProvider.serialqueue
Listener XPC Connection interrupted
v16@?0@"MTXPCClientInfo"8
com.apple.MTAgent
Launched
v16@?0@"NSObject<MTAlarmDataSourceObserver>"8
v16@?0@"NSNotification"8
MTSyncStoragePendingChanges
MTSyncStorageVersion
com.apple.MTSyncStore.archive-queue
; currentState: %@>
MTPairedDevicePreferencesChanged
BulletinDistributorBBSectionsDidChangeNotification
com.apple.bulletinboard.apps
BPSNanoBulletinShowsAlerts
com.apple.MobileTimer.MTApplicationWorkspaceObserverQueue
v32@?0@"NSString"8@"NSHashTable"16^B24
MTTimerLastTriggerDate
com.apple.MTTimerScheduler.timer-event
com.apple.MTTimerTask.fire
com.apple.MTTimerTask.reschedule
com.apple.MTTimerScheduler.access-queue
Scheduled timers
MTTimerScheduler
id  _Nullable NAAssertCast(Class  _Nonnull __unsafe_unretained, id  _Nonnull __strong)
NSObject+NAAdditions.h
Expected class of %@ but was %@
<%@: %p %@ >
SEND
RECV
com.apple.private.mobiletimerd
com.apple.MobileTimer.alarmserver
com.apple.MobileTimer.timerserver
com.apple.mobile.keybagd.first_unlock
MTDeviceHasBeenUnlockedForFirstTime
com.apple.MTDeviceUtilities.work-queue
Unlocked since boot
MTSleepManagerSettingsDidChange
MTNeedsSleepMigration
@"HKSPSleepStore"24@?0@"NSString"8@"HKHealthStore"16
@"HKSPFeatureAvailabilityStore"16@?0@"HKSPSleepStore"8
%@-updateSleepAlarms
@16@?0@"HKSPSleepScheduleOccurrence"8
v16@?0@"MTMutableAlarm"8
v24@?0@"HKSPSleepSettings"8@"NSError"16
MTSleepManager.m
HKFeatureIdentifier getHKFeatureIdentifierSleepCoaching(void)
HKFeatureIdentifierSleepCoaching
watch-companion
CURRENT_TIMER
MTTimerDefaultDuration
com.apple.mobiletimer.MTTimerDidFireNotification
x-apple-clock:timer?id=
TIMER_DEFAULT_TITLE
<%@:%p TimerID: %@, Title: %@, state:%@, duration:%d, firedDate: %@, dismissedDate: %@, sound: %@, siriContext: %@>
Stopped
Running
Paused
Unknown
Timer duration can only be modified while stopped.
Timer duration must be positive.
Unexpected timer state: %ld
com.apple.MTAlarmServer.wakeup
com.apple.MTAlarmServer.ready
com.apple.mobiletimerd.MTAlarmServer
com.apple.MTAlarmServer.ready-queue
v16@?0@"<MTAlarmClient>"8
Alarm system ready
Alarm clients
processName
MTTimerIntentHandlerErrorDomain
v32@?0@"<MTTimerIntentSupport>"8Q16^B24
-[MTTimerIntentHandler _matchTimersFromIntentsTimer:excludeStoppedTimers:completion:]_block_invoke
-[MTTimerIntentHandler _genericallyResolveTargetTimer:multiple:allowedTimerStatesForFollowup:completion:]_block_invoke
-[MTTimerIntentHandler _genericallyResolveTargetTimer:multiple:allowedTimerStatesForFollowup:completion:]_block_invoke_2
q24@?0@"NSObject<MTTimerIntentSupport>"8@"NSObject<MTTimerIntentSupport>"16
com.apple.MTCompanionSyncRequest.serialqueue
v16@?0@?<v@?@"NSError">8
DELTA
MTTriggerType
MTTriggerDate
Alert
Snoozed
Go To Bed
Snoozed Go To Bed
Wake Up
Snoozed Wake Up
Snooze Countdown
Bedtime
Waketime
trigger
date
isPastOverride
com.apple.MTTimerServer.wakeup
com.apple.MTTimerServer.ready
com.apple.mobiletimerd.MTTimerServer
com.apple.MTTimerServer.ready-queue
v16@?0@"<MTTimerClient>"8
Timer system ready
Timer clients
<%@:%p %@ snoozeDate: %@ (%@)>
snoozeDate
MTSyncDismiss+ProtoBuffer.m
MTAlarmDataVersion
MTAlarmHour
MTAlarmMinute
MTAlarmBedtimeHour
MTAlarmBedtimeMinute
MTAlarmBedtimeReminderMinutes
MTAlarmBedtimeDoNotDisturb
MTAlarmBedtimeDoNotDisturbOptions
MTAlarmSleepModeDetectionKey
MTAlarmSleepTrackingKey
MTAlarmDay
MTAlarmMonth
MTAlarmYear
MTAlarmOverriddenForDate
MTAlarmTimeInBedTrackingKey
MTAlarmSleepScheduleKey
MTAlarmBedtimeForSleepTracking
MTAlarmWakeupForSleepTracking
MTAlarmRepeatSchedule
MTAlarmEnabled
MTAlarmActive
MTAlarmPlayOptions
MTAlarmFiring
MTAlarmIsSleep
MTAlarmAllowsSnooze
MTAlarmSnoozeFireDate
MTAlarmBedtimeSnoozeFireDate
MTAlarmFireDate
MTAlarmDismissDate
MTAlarmLastModifiedDate
MTAlarmBedtimeFireDate
MTAlarmBedtimeDismissDate
MTAlarmBedtimeDismissAction
MTAlarmKeepOffUntilDate
MTAlarmTitle
MTAlarmSound
MTAlarmIsNew
MTAlarmOnboardingVersion
MTAlarmSiriContext
MTAlarmBypassReloadDate
v16@?0@"NSString"8
B16@?0@"MTCFUserNotification"8
MTTimerIntentSupportSiriContextTimerTypeKey
com.apple.MTSyncChangeQueue.serial
Q16@?0@"<MTSyncable>"8
MTSyncChangeQueue.m
Undetermined enqueue result returned
Q24@?0@"<MTSyncable>"8@"<MTSyncable>"16
Invalid conflict result returned
com.apple.private.alloy.mobiletimersync
com.apple.MTCompanionSyncService.serialqueue
Companion sync sending session failed
<%@: %p master: %d >
SYService
Class getSYServiceClass(void)_block_invoke
MTCompanionSyncService.m
void *CompanionSyncLibrary(void)
SYServiceOption getSYServiceOptionDiskBufferProtectionClass(void)
SYServiceOptionDiskBufferProtectionClass
NSString *getIDSSendMessageOptionBypassDuetKey(void)
IDSSendMessageOptionBypassDuetKey
void *IDSLibrary(void)
<%@:%p ProcessName: %@ ProcessID: %@ Connected: %@ Connection: %@>
%@-%d
lastModifiedDate
snoozeFireDate
bedtimeSnoozeFireDate
firedDate
dismissedDate
playOptions
sleepMode
sleepTracking
sleepSchedule
onboardingVersion
sleepModeOptions
timeInBedTracking
dismissedAction
bedtimeFiredDate
bedtimeDismissedDate
bedtimeDismissedAction
keepOffUntilDate
@33
 @ff&@
,@ffF@
L@33S@
softlink:r:path:/System/Library/PrivateFrameworks/ChronoServices.framework/ChronoServices
softlink:r:path:/System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams
softlink:r:path:/System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
softlink:r:path:/System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight
softlink:r:path:/System/Library/Frameworks/HealthKit.framework/HealthKit
softlink:r:path:/System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync
softlink:r:path:/System/Library/Frameworks/HealthKit.framework/HealthKit
softlink:r:path:/System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities
softlink:r:path:/System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
softlink:r:path:/System/Library/PrivateFrameworks/MobileTimerSupport.framework/MobileTimerSupport
softlink:r:path:/System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
softlink:r:path:/System/Library/Frameworks/HealthKit.framework/HealthKit
softlink:r:path:/System/Library/PrivateFrameworks/CompanionSync.framework/CompanionSync
softlink:r:path:/System/Library/PrivateFrameworks/IDS.framework/IDS
MTPauseResumeTimerIntentHandler
INPauseTimerIntentHandling
NSObject
INResumeTimerIntentHandling
MTTimeInBedSession
MTSleepSession
NSSecureCoding
NSCoding
ProtoBuffer
MTProtoBufferSerializable
MTSerializable
Alarm
MTXPCConnectionInfo
MTToggleAlarmIntentHandler
MTEnableAlarmIntentHandling
MTDisableAlarmIntentHandling
MTToggleAlarmIntentHandling
MTWidgetUtilities
MTLanguageChangeListener
MTAgentNotificationListener
MTScheduledList
MTSleepCoordinatorStateMachineAsleepState
MTInMemoryDefaults
MTPersistence
ClocksIntent
ClocksIntentResponse
MTTimerStorage
MTTimerSchedulerDelegate
MTApplicationWorkspaceObserverProtocol
MTAgentDiagnosticDelegate
MTAgentNotificationManager
MTDictionarySerializable
NSCopying
MTStorageWriter
MTSerializer
MTStorageReader
MTStorageReaderV1
MTAlarmSnapshot
MTAlarmObserver
MTAlarmSyncDataModel
MTSource
MTSyncDataModel
MTSleepCoordinatorStateMachineState
MTSleepCoordinatorStateMachineEventHandler
MTStateMachineEventHandler
MTPairedDeviceListener
MTUserNotificationAppDelegate
UNUserNotificationCenterDelegate
MTPBAlarm
MTXPCConnectionProvider
MTSleepModeStateMachineUserRequestedOffState
ClockManager
MTAnalytics
IntentsSupport
MTTimerManagerIntentSupport
MTSleepModeMonitor
DNDModeAssertionUpdateListener
MTSleepModeStateMachineInfoProvider
MTStateMachineInfoProvider
MTSleepModeStateMachineDelegate
MTStateMachineDelegate
MTSleepObserver
MTTimeObserver
MTSleepModeManager
MTSleepModeStateMachine
MTSleepModeStateMachineEventHandler
MTDateFormatting
MTSyncServiceManager
MTSyncStatusProviderDelegate
MTSyncServiceDelegate
MTSyncManager
MTCreateAlarmIntentHandler
MTCreateAlarmIntentHandling
MTSleepSessionTracker
MTUserNotificationActionDispatcher
MTPBAlarmDelete
MTUpdateAlarmIntentHandler
MTUpdateAlarmIntentHandling
MTSleepModeStateMachineInitialState
ClocksSingleIntent
ClocksSingleIntentResponse
MTAlarmStorage
MTAlarmScheduleDelegate
MTSpringboardStartMonitor
MTCreateTimerIntentHandler
INCreateTimerIntentHandling
MTPBSound
MTSound_Notifications
MTAlarmScheduler
MTScheduledListDelegate
MTPBAlarmAdd
MTScheduledObject
NAEquatable
NAHashable
MTScheduling
MTScheduleable
MTExponentialBackOffTimer
MTWidgetProvider
MTCompanionSyncSerializer
SYChangeSerializer
MTAlarmIntent
MTAgentDiagnosticListener
MTTimeInBedSessionTracker
MTCoreDuetMonitor
MTTimerIntentDonor
MTTimerObserver
MTAlarmCache
MTDistributedNotificationPoster
MTNotificationCenter
MTSleepModeStateMachineOffState
MTSystemStateListener
Properties
MTSyncChangeArchiver
MTSyncChangeUnarchiver
WorldClockManager
MTSleepCoordinator
MTSleepCoordinatorStateMachineDelegate
MTSleepCoordinatorStateMachineInfoProvider
SleepCoordinator
MTOSTransaction
CompanionSync
SYChange
MTDeleteTimerIntentHandler
INDeleteTimerIntentHandling
MTSetTimerAttributeIntentHandler
INSetTimerAttributeIntentHandling
MTPBSyncMessage
MTSound
WorldClockPreferences
MTSyncDismiss
MTSyncable
MTSyncableObject
MTAlarmIntentHandler
MTSnapshotScheduler
MTAlarmMigrator
MTAlarm
BSDescriptionProviding
NSMutableCopying
MTMutableAlarm
MTSleepSessionManager
MTSleepSessionTrackerDelegate
MTMetrics
NotificationRelay
MTTimerSnapshot
MTUserDefaults
MTSensitiveUIMonitor
MTUtilities
_MTSerialQueueScheduler
MTScheduler
NAScheduler
MTExpiringFuture
WorldClockCity
MTNextAlarm
MTNextAlarmManager
MTWorldClock
MTWorldClockResolutionResult
MTUserNotificationCenter
MTTimerMigrator
MTChange
MTChangeSet
ChangeSet
MTSleepModeStateMachineOnState
MTDictionarySerializer
MTDictionaryDeserializer
MTTimeListener
MTSleepCoordinatorStateMachineDisabledState
MTPBDismissAction
MTCreateSingleTimerIntentHandler
DistributedNotificationPoster
MTGCDTimer
MTGCDTaskScheduler
MTTaskScheduler
MTTask
MTTaskGroup
MTAgentNotification
MTSleepModeStateMachineWaitingState
MTGetAlarmsIntentHandler
MTGetAlarmsIntentHandling
MTPowerAssertion
MTTimerCache
MTTimerTime
MTTimerTimeInterval
MTTimerDate
MTTimerManager
MTUserDefaultNotificationObserver
MTTimerManagerExportedObject
MTTimerClient
MTResetTimerIntentHandler
INResetTimerIntentHandling
MTObserverStore
MTXPCScheduler
MTSchedulingDelegate
MTAlarmManager
MTAlarmManagerExportedObject
MTAlarmClient
MTNotifiying
Sleep
Widget
ClockAngelServer
ClockAngelClient
MTTimerSessionsCoordinator
Notification
MTPBAlarmState
MTUpdateTimerIntentHandler
MTSearchTimerIntentHandler
INSearchForTimersIntentHandling
MTSleepModeStateMachineState
MTAlarmIntentDonor
MTLegacyManager
MTXPCConnectionListenerProvider
NSXPCListenerDelegate
MTAgent
MTSystemStateDelegate
MTAlarmDataSource
MTPersistentSyncChangeStore
MTSyncChangeStore
MTInMemorySyncChangeStore
MTStateMachineState
MTCity
MTCityResolutionResult
MTStateMachine
MTPairedDevicePreferences
MTApplicationWorkspaceObserver
LSApplicationWorkspaceObserverProtocol
MTTimerManagerProviding
MTSleepUtilities
MTTimerScheduler
MTCompanionSyncSession
SYSessionDelegate
MTAlarmServer
MTXPCServer
MTTimerServer
MTAdditions
MTDeviceListener
MTPBAlarmUpdate
MTSleepManager
HKSPSleepStoreObserver
MTCompanionSyncStatusProvider
MTPairedDeviceObserver
MTSyncStatusProvider
MTTimer
MTMutableTimer
MTTimerIntentHandler
MTCompanionSyncRequest
MTSyncToken
MTTrigger
MTSleepCoordinatorStateMachineAwakeState
MTSyncSnooze
MTPBSnoozeAction
MTCFUserNotification
MTCFUserNotificationPoster
MTTimerIntentSupport
MTSyncChangeQueue
MTCompanionSyncService
SYServiceDelegate
MTSyncService
MTXPCClientInfo
MTPBAlarmProperties
MTSleepCoordinatorStateMachine
MTCreateAlarmIntent
MTCreateAlarmIntentResponse
MTUpdateAlarmIntent
MTUpdateAlarmIntentResponse
MTEnableAlarmIntent
MTEnableAlarmIntentResponse
MTDisableAlarmIntent
MTDisableAlarmIntentResponse
MTToggleAlarmIntent
MTToggleAlarmIntentResponse
MTGetAlarmsIntent
MTGetAlarmsIntentResponse
MTAlarmStateResolutionResult
MTAlarmOperationResolutionResult
MTIntentAlarm
MTIntentAlarmResolutionResult
MTIntentRepeatDay
MTIntentRepeatDayResolutionResult
T@"<MTSyncServiceDelegate>",W,N
AMSymbol
T@"MTMetrics",&,N,V_syncMetrics
SYObjectWithData:
T@"MTTimer",R,N
T@"<AlarmDelegate>",W,N,V_delegate
T@"NRDevice",&,N,V_pairedDevice
T@"<MTAlarmScheduleDelegate>",W,N,V_delegate
T@"NSCoder",R,N
T@"<MTAlarmStorage>",C,N,V_alarmStorage
T@"NSDictionary",&,N,V_metadata
T@"<MTAlarmStorage>",R,N,V_storage
T@"NSMutableArray",&,N,V_alarms
T@"<MTNotificationCenter>",R,N,V_notificationCenter
T@"NSString",C,N,V_syncDataFile
T@"<MTPersistence>",&,N,V_persistence
T@"NSURL",R,C,N
T@"<MTScheduledListDelegate>",W,N,V_delegate
T@?,R,C,N,V_currentDateProvider
T@"<MTSchedulingDelegate>",R,N,V_schedulingDelegate
TB,N,GisSleepAlarm,V_sleepAlarm
T@"<MTSleepSessionTrackerDelegate>",W,N
Td,N,V_duration
T@"<MTStateMachineDelegate>",W,N,V_delegate
_alCity
T@"<MTSyncChangeStore>",&,N,V_changeStore
_alarms
T@"<MTSyncService>",&,N,V_syncService
_cities
T@"<MTSyncStatusProvider>",&,N,V_syncStatusProvider
_currentBackoff
T@"<MTSyncStatusProviderDelegate>",W,N,V_syncStatusProviderDelegate
_enqueueAction:
T@"<MTTaskScheduler>",R,N,V_taskScheduler
_handleAlarmNotification:block:
T@"<MTTimerManagerIntentSupport>",R,N
_knowledgeStore
T@"<MTTimerSchedulerDelegate>",W,N,V_delegate
_loaded
T@"<MTTimerTime>",C,N,V_fireTime
_pendingChanges
T@"<NAScheduler>",&,N,V_serializer
_performSnooze:
T@"<NAScheduler>",R,N,V_archiverScheduler
_purged
T@"<NAScheduler>",R,N,V_serializer
_queue_setLastTimerTriggerDate:
T@"Alarm",&,N,V_sleepAlarm
_repeatSchedule
T@"BSServiceConnection<BSServiceConnectionClient>",&,N,V_connection
_scheduleAlarms:withCompletion:
T@"HKHealthStore",&,N,V_healthStore
_setSnoozeCountdownTitleAndBody:forSnoozeCountdownNotification:
T@"HKSPSleepStore",&,N,V_sleepStore
_sortAndFilter:
T@"LSApplicationWorkspace",&,N,V_applicationWorkspace
_stringForType:
T@"MTAgentNotificationManager",&,N,V_notificationManager
_timerScheduler
T@"MTAlarm",&,N,V_cachedSleepAlarm
_toneIdentifier
T@"MTAlarm",&,N,V_sleepAlarm
_vibeID
T@"MTAlarmIntentDonor",&,N,V_alarmIntentDonor
_writeSessions:
T@"MTAlarmManager",R,N,V_alarmManager
addClientConnection:clientLink:
T@"MTAlarmManagerExportedObject",&,N,V_exportedObject
alarmCategories
T@"MTAlarmScheduler",&,N,V_alarmScheduler
alarmDismissed:
T@"MTAlarmServer",&,N,V_alarmServer
alarmProperties
T@"MTAlarmStorage",&,N,V_alarmStorage
allKeys
T@"MTAlarmSyncDataModel",&,N,V_alarmSyncDataModel
archiveSession:
T@"MTCompanionSyncRequest",&,N,V_request
bedtimeReminder
T@"MTCompanionSyncSession",&,N,V_sendingSession
bundleForClass:
T@"MTExponentialBackOffTimer",&,N,V_retryTimer
changes
T@"MTIntentAlarm",C,D,N
cityDataUpdated
T@"MTLanguageChangeListener",&,N,V_languageChangeListener
completionBlock
T@"MTOSTransaction",&,N,V_transaction
connectionQueue
T@"MTPBAlarm",&,N,V_alarm
content
T@"MTPBDismissAction",&,N,V_dismissAction
copyTo:
T@"MTPBSound",&,N,V_sound
currentCalendar
T@"MTPowerAssertion",&,N,V_powerAssertion
dateFromString:
T@"MTScheduledList",R,N,V_scheduledTimers
T@"MTSleepCoordinator",&,N,V_sleepCoordinator
defaultDuration
T@"MTSleepCoordinatorStateMachine",&,N,V_stateMachine
defaultTimeZone
T@"MTSleepCoordinatorStateMachineDisabledState",&,N,V_disabledState
descriptionWithMultilinePrefix:
T@"MTSleepModeMonitor",&,N,V_sleepModeMonitor
didReceiveLifecycleNotification
T@"MTSleepModeStateMachineInitialState",R,N,V_initialState
dismissedAction
T@"MTSleepModeStateMachineWaitingState",R,N,V_waitingState
enabled
T@"MTSleepSessionTracker",&,N,V_sleepSessionTracker
endDate
T@"MTSound",C,N,V_sound
handleMTEnableAlarm:completion:
T@"MTStateMachineState",&,N,V_currentState
handleWakeUpAlarmForAlarm:date:
T@"MTSyncServiceManager",&,N,V_syncServiceManager
hasAllowsSnooze
T@"MTTimeListener",&,N,V_timeListener
hasHour
T@"MTTimer",&,N,V_timer
hasSnoozeAction
T@"MTTimerIntentDonor",&,N,V_timerIntentDonor
initWithALCity:
T@"MTTimerManagerExportedObject",&,N,V_exportedObject
initWithDomain:
T@"MTTimerScheduler",&,N,V_timerScheduler
initWithIdentifier:healthStore:
T@"MTTimerServer",&,N,V_timerServer
isEqualToAlarm:
T@"MTTimerSnapshot",&,N,V_timerSnapshot
isEqualToState:
T@"MTTimerStorage",R,N,V_storage
isEvent
T@"MTUserNotificationActionDispatcher",&,N,V_actionHandler
isSleep
T@"MTXPCConnectionInfo",&,N,V_info
isWakeUpRelated
T@"MTXPCConnectionProvider",R,N,V_connectionProvider
logTimerUpdated
T@"NAFuture",&,N,V_sleepStateResolved
machServiceName
T@"NSArray",&,N,V_intervals
mediaID
T@"NSArray",&,N,V_scheduledNotifications
modifiedDateKey
T@"NSArray",C,N,V_tasks
mtContainsDate:
T@"NSDate",&,N,V_connectedDate
mtSound
T@"NSDate",&,N,V_dismissDate
mtUserActivityWithActivityType:
T@"NSDate",&,N,V_keepOffUntilDate
na_any:
T@"NSDate",&,N,V_lastModifiedDate
na_map:
T@"NSDate",&,N,V_launchDate
needPrefsUpdate
T@"NSDate",&,N,V_startDate
nextTriggerDate
T@"NSDate",C,D,N
T@"NSDate",C,N,V_bedtimeFiredDate
numberWithLong:
T@"NSDate",C,N,V_bypassReloadDate
pairedDevicePreferencesChanged:
T@"NSDate",C,N,V_dismissedDate
persistChanges:
T@"NSDate",C,N,V_firedDate
prepare
T@"NSDate",C,N,V_lastModifiedDate
purgeLegacyData
T@"NSDate",C,N,V_triggerDate
refreshManagers
T@"NSDate",R,N,V_lastModified
removeAllCities
T@"NSDateComponents",C,D,N
removeObserver:
T@"NSDictionary",&,N,V_notificationCenters
request
T@"NSDictionary",C,N,V_siriContext
rescheduleTimersWithCompletion:
T@"NSError",&,N,V_error
saveSessionData
T@"NSMutableArray",&,N,V_changes
scheduleTimers:
T@"NSMutableArray",&,N,V_listeners
scheduledAlerts
T@"NSMutableArray",&,N,V_orderedTimers
scheduledTimers
T@"NSMutableArray",&,N,V_sleepAlarms
service
T@"NSMutableDictionary",&,N,V_notifications
sessionsManager
T@"NSMutableDictionary",&,N,V_observersForBundleID
setAlarmServer:
T@"NSMutableDictionary",&,N,V_scheduledAlertMap
setAsleepState:
T@"NSMutableDictionary",R,N,V_alarmStatesByAlarmID
setBedtimeHour:
T@"NSMutableOrderedSet",&,N,V_orderedScheduledAlerts
setCachedAlarm:
T@"NSMutableOrderedSet",&,N,V_orderedScheduledNotifications
setChangeStore:
T@"NSMutableSet",R,N,V_donatedTimerIDs
setDiagnostics:
T@"NSNotificationCenter",R,N
setEnabled:valueDidChangeBlock:
T@"NSNumber",C,N
setHealthStore:
T@"NSNumber",R,N
setInteger:forKey:notification:
T@"NSNumber",R,N,V_soundVolume
setNotifyToken:
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionQueue
setPersistence:
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
setReloadTimer:
T@"NSObject<OS_dispatch_queue>",&,N,V_serializer
setResetTimers:
T@"NSObject<OS_dispatch_queue>",R,N,V_internalQueue
setShouldSuppressScreenLightUp:
T@"NSObject<OS_dispatch_source>",&,N,V_timer
setSleepAlarms:
T@"NSSet",&,N,V_changedProperties
setSoundVolume:
T@"NSString",&,N
setSyncService:
T@"NSString",&,N,V_identifier
setSystemReady:
T@"NSString",&,N,V_title
setTimerServer:
T@"NSString",&,N,V_vibeID
setTriggerDate:
T@"NSString",C,N,V_archivedSessionDataFile
setUpdateBlock:
T@"NSString",C,N,V_eventName
setWithObjects:
T@"NSString",C,N,V_lifecycleNotification
snoozed
T@"NSString",C,N,V_name
stateMachineLog
T@"NSString",C,N,V_requiredEntitlement
stopped
T@"NSString",R
stringByAppendingPathComponent:
T@"NSString",R,C,N
successIntentResponseWithAlarm:
T@"NSString",R,N,V_name
syncChangeQueue
T@"NSString",R,N,V_toneIdentifier
timeDesignatorAppearsBeforeTime
T@"NSString",R,W,N
timeListener:didDetectSignificantTimeChangeWithCompletionBlock:
T@"NSURL",&,N,V_alarmIDURL
timerCategories
T@"NSUUID",R,N
timerID
T@"NSUUID",R,N,V_timerID
toLabel
T@"NSXPCConnection",&,N,V_connection
trigger
T@"NSXPCInterface",&,N,V_remoteObjectInterface
unSound
T@"SYService",&,N,V_service
unscheduleTimer
T@"UNUserNotificationCenter",&,N,V_notificationCenter
updateStateForAlarm:alarmEvent:
T@"_DKKnowledgeStore",R,N,V_knowledgeStore
vibrationWithIdentifierIsValid:
T@,&,N,V_clientLink
.cxx_destruct
T@"MTAlarm",R,N
PMSymbol
T@"MTSleepCoordinatorStateMachineAsleepState",&,N,V_asleepState
T#,R
T@"NPSManager",&,N,V_npsManager
T@"<MTAgentDiagnosticDelegate>",W,N,V_delegate
T@"NSArray",R,N
T@"<MTAlarmStorage>",&,N,V_alarmStorage
T@"NSDate",C,N,V_snoozeFireDate
T@"<MTAlarmStorage>",R,N,V_alarmStorage
T@"NSHashTable",&,N,V_observers
T@"<MTNotificationCenter>",&,N,V_notificationCenter
T@"NSString",C,N,V_defaultSound
T@"<MTPersistence>",&,N,V_defaults
T@"NSString",C,N,V_syncDataPath
T@"<MTScheduleable>",C,N,V_scheduleable
T@?,C,N,V_block
T@"<MTScheduler>",&,N,V_serializer
TB,N,GisEnabled
T@"<MTSleepSessionTracker>",&,N,V_sleepSessionTracker
TI,N,V_revision
T@"<MTSleepSessionTrackerDelegate>",W,N,V_sleepSessionTrackerDelegate
Td,N,V_syncDate
T@"<MTStateMachineInfoProvider>",W,N,V_infoProvider
_alarmScheduler
T@"<MTSyncDataModel>",W,N,V_syncDataModel
_cancel
T@"<MTSyncServiceDelegate>",W,N,V_delegate
_connectionLock
T@"<MTSyncStatusProviderDelegate>",W,N
_diagnosticDictionaryForAlarms:
T@"<MTSystemStateDelegate>",W,N,V_delegate
_exportedObject
T@"<MTTimerManagerIntentSupport>",&,N,V_timerManager
_isUpdateNeeded
T@"<MTTimerManagerProviding>",W,N,V_timerManagerProvider
_loadLocaleInfo
T@"<MTTimerStorage>",&,N,V_storage
_minute
T@"<NAScheduler>",&,N,V_callbackScheduler
_performAction:
T@"<NAScheduler>",&,N,V_workScheduler
_powerAssertion
T@"<NAScheduler>",R,N,V_internalScheduler
_queue_setAllAlarms:sleepAlarms:source:persist:notify:override:
T@"ALCity",R,N,V_alCity
_registerForDarwinNotifications
T@"Alarm",R,N,V_editingProxy
_resolveChange:
T@"DNDModeAssertionService",&,N,V_assertionService
_sendingSession
T@"HKSPFeatureAvailabilityStore",&,N,V_featureStore
_snoozeFireDate
T@"INObject",C,D,N
_stopMonitoring
T@"MTAgentDiagnosticListener",&,N,V_diagnostics
_syncID
T@"MTAlarm",&,N,V_cachedAlarm
_toneID
T@"MTAlarm",&,N,V_nextAlarm
_upgradeFromSpringboardDefaults
T@"MTAlarmCache",&,N,V_cache
_widgetProvider
T@"MTAlarmManager",&,N,V_alarmManager
addAlarm:withCompletion:source:
T@"MTAlarmManager",R,W,N,V_alarmManager
addTimer:withCompletion:source:
T@"MTAlarmMigrator",&,N,V_migrator
alarmDidUpdate:
T@"MTAlarmScheduler",W,N,V_scheduler
alarmID
T@"MTAlarmSnapshot",&,N,V_alarmSnapshot
alarmWithIDString:includeSleep:
T@"MTAlarmStorage",R,N,V_storage
applicationsDidFailToUninstall:
T@"MTApplicationWorkspaceObserver",R,N
arrayWithArray:
T@"MTCompanionSyncSession",&,N,V_receivingSession
buildConnection
T@"MTCoreDuetMonitor",&,N,V_coreDuetMonitor
categorySampleWithType:value:startDate:endDate:device:metadata:
T@"MTGCDTimer",&,N,V_timer
checkIn
T@"MTIntentAlarm",R,N
clients
T@"MTMetrics",&,N,V_metrics
confirmDisableAlarm:completion:
T@"MTObserverStore",&,N,V_observers
containsObject:
T@"MTPBAlarmProperties",&,N,V_alarmProperties
context
T@"MTPBSnoozeAction",&,N,V_snoozeAction
coreDuetMonitor
T@"MTPairedDeviceListener",R
dataFromChange:
T@"MTScheduledList",R,N,V_scheduledAlarms
dateWithTimeInterval:sinceDate:
T@"MTSessionsManager",&,N,V_sessionsManager
dealloc
T@"MTSleepCoordinator",W,N,V_sleepCoordinator
defaultPlayOptionsIsSleepAlarm:
T@"MTSleepCoordinatorStateMachineAwakeState",&,N,V_awakeState
dequeueChanges:
T@"MTSleepManager",R,N,V_sleepManager
details
T@"MTSleepModeStateMachine",&,N,V_stateMachine
dismissAlarmWithIdentifier:dismissAction:withCompletion:source:
T@"MTSleepModeStateMachineOffState",R,N,V_offState
donatedTimerIDs
T@"MTSleepSessionManager",&,N,V_sleepSessionManager
T@"MTSound",C,D,N
handleMTCreateAlarm:completion:
T@"MTStateMachine",W,N,V_stateMachine
handleMTUpdateAlarm:completion:
T@"MTSyncChangeQueue",&,N,V_syncChangeQueue
handler
T@"MTSystemStateListener",&,N,V_systemStateListener
hasDefaultTitle
T@"MTTimer",&,N,V_nextTimer
hasIsSleepAlarm
T@"MTTimerCache",&,N,V_cache
hideSensitiveUI
T@"MTTimerManager",R,W,N,V_timerManager
initWithDelegate:isSynchronous:
T@"MTTimerMigrator",&,N,V_migrator
initWithFormat:
T@"MTTimerScheduler",W,N,V_scheduler
initWithString:
T@"MTTimerSessionsCoordinator",&,N,V_timerSessionsCoordinator
isEqualToSound:
T@"MTTimerStorage",&,N,V_timerStorage
isEqualToTimer:
T@"MTTrigger",C,N,V_trigger
isProxy
T@"MTWidgetProvider",&,N,V_widgetProvider
isValid
T@"MTXPCConnectionListenerProvider",R,N,V_connectionListenerProvider
logTimerDeleted
T@"MTXPCScheduler",&,N,V_alarmTimeoutScheduler
lowercaseString
T@"NSArray",&,N,V_alarms
markNeedsUpdate
T@"NSArray",&,N,V_pendingChanges
metrics
T@"NSArray",C,D,N
mtCoder
T@"NSArray",R,N,V_cities
mtIsBeforeDate:
T@"NSDate",&,N,V_date
mtURLForScheme:
T@"NSDate",&,N,V_endDate
na_all:
T@"NSDate",&,N,V_lastLifecycleNotification
na_genericError
T@"NSDate",&,N,V_lastReloadRequestDate
na_timeoutError
T@"NSDate",&,N,V_snoozeDate
nextAlarmsForDateSync:maxCount:
T@"NSDate",&,N,VlastModified
nextTriggersAfterDate:includeSnooze:includeBedtimeNotification:
T@"NSDate",C,N,V_bedtimeDismissedDate
numberWithBool:
T@"NSDate",C,N,V_bedtimeSnoozeFireDate
options
T@"NSDate",C,N,V_date
pendingRequests
T@"NSDate",C,N,V_fireDate
postNotificationForAlarmsEdited
T@"NSDate",C,N,V_keepOffUntilDate
propertiesAffectingNotification
T@"NSDate",C,N,V_overriddenForDate
pushCityPropertiesToPreferences
T@"NSDate",R,N
release
T@"NSDate",R,N,V_sleepModeEndDate
removeAllDeliveredNotifications
T@"NSDictionary",&,N,V_changeDictionary
repeats
T@"NSDictionary",C,D,N
rescheduleAlarmsWithCompletion:
T@"NSDictionary",R,N
resume:
T@"NSMutableArray",&,N,V_changeQueue
scheduleAlarms:
T@"NSMutableArray",&,N,V_completionBlocks
scheduledAlarms
T@"NSMutableArray",&,N,V_orderedAlarms
scheduledAlertsAndNotifications
T@"NSMutableArray",&,N,V_processedChanges
serializerQueue
T@"NSMutableArray",&,N,V_stack
session
T@"NSMutableDictionary",&,N,V_observers
T@"NSMutableDictionary",&,N,V_pendingRequests
setAlarmSoundIdentifier:ofType:
T@"NSMutableDictionary",&,N,V_storage
setAudioVolume:
T@"NSMutableDictionary",R,N,V_alarmsByID
setBool:forKey:
T@"NSMutableOrderedSet",&,N,V_orderedScheduledEvents
setChangeQueue:
T@"NSMutableSet",&,N,V_clients
setDay:
T@"NSNotificationCenter",&,N,V_notificationCenter
setDismissDate:
T@"NSNumber",C,D,N
setHasRevision:
T@"NSNumber",C,N,V_bedtimeReminder
setInitialTime:
T@"NSNumber",R,N,V_mediaItemIdentifier
setNeedsUpdate:
T@"NSObject<OS_dispatch_group>",&,N,V_changesLoaded
setNumberStyle:
T@"NSObject<OS_dispatch_queue>",&,N,V_observerQueue
setPlayOptions:
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
setRequestType:
T@"NSObject<OS_dispatch_queue>",&,N,V_serializerQueue
setSerialQueue:
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
setSiriContext:
T@"NSObject<OS_os_transaction>",&,N,V_transaction
setSleepSessionTrackerDelegate:
T@"NSSet",&,N,V_nextAlarms
setSyncMetrics:
T@"NSString",&,N,V_alarmID
setSyncVersion:
T@"NSString",&,N,V_syncID
setTargetQueue:
T@"NSString",&,N,V_toneID
setTransaction:
T@"NSString",C,D,N
setTriggerType:
T@"NSString",C,N,V_archivedSessionDataPath
setVibrationID:
T@"NSString",C,N,V_identifier
sleepAlarmsSync
T@"NSString",C,N,V_machServiceName
started
T@"NSString",C,N,V_property
stopSyncService
T@"NSString",C,N,V_title
storage
T@"NSString",R,C
stringFromDate:
T@"NSString",R,N
suspend
T@"NSString",R,N,V_sound
syncSession:successfullySynced:
T@"NSString",R,N,V_vibrationIdentifier
timeDesignatorForDate:timeZone:
T@"NSTimer",&,N,V_reloadTimer
timeZonesForCurrentClockWidgets
T@"NSURL",R,N
timerDismissed:
T@"NSUUID",R,N,V_alarmID
timerWithInitialTime:fireBlock:
T@"NSUserDefaults",&,N,V_userDefaults
trackingEnabled
T@"NSXPCInterface",&,N,V_exportedObjectInterface
uiTitle
T@"NSXPCListener",&,N,V_connectionListener
unlocalizedName
T@"SYSession",&,N,V_session
updateSleepStateWithSleepAlarm:
T@"_CDClientContext",R,N,V_context
verifySettings:
T@,&,N,V_changedValue
writeAlarmEventsToBiome:ofType:
T@,&,N,V_exportedObject
T@,&,N,V_originalValue
T@,R,N
T@?,C,N,V_completableBlock
T@?,C,N,V_completionBlock
T@?,C,N,V_currentDateProvider
T@?,C,N,V_errorHandler
T@?,C,N,V_handler
T@?,C,N,V_reconnectHandler
T@?,C,N,V_sleepStoreProvider
T@?,C,N,V_updateBlock
T@?,C,N,V_updateHandler
TB,D,N
TB,D,N,GisEnabled
TB,N
TB,N,GisEnabled,V_enabled
TB,N,GisObserving,V_observing
TB,N,V_allowsSnooze
TB,N,V_completed
TB,N,V_forceActiveForMigration
TB,N,V_hideSensitiveUI
TB,N,V_internalHasBeenUnlockedSinceBoot
TB,N,V_isEnabled
TB,N,V_isHorseman
TB,N,V_isSleepAlarm
TB,N,V_loaded
TB,N,V_needPrefsUpdate
TB,N,V_needsAdditionalProcessing
TB,N,V_needsUpdate
TB,N,V_purged
TB,N,V_refreshManagers
TB,N,V_restoreDoneHandled
TB,N,V_sleepEnabled
TB,N,V_sleepMode
TB,N,V_sleepSchedule
TB,N,V_sleepTracking
TB,N,V_started
TB,N,V_systemReady
TB,N,V_timeInBedTracking
TB,R
TB,R,N
TB,R,N,GisActive
TB,R,N,GisFiring
TB,R,N,GisSnoozed
TB,R,N,GisSnoozed,V_snoozed
TB,R,N,GisSystemReady,V_systemReady
TB,R,N,V_isPastOverrideEvent
TB,R,N,V_pushAlertsEnabled
TB,R,N,V_timeDesignatorAppearsBeforeTime
TB,R,N,V_use24HourTime
TI,N,V_bedtimeDismissedAction
TI,N,V_bedtimeHour
TI,N,V_bedtimeMinute
TI,N,V_bedtimeReminderMinutes
TI,N,V_daySetting
TI,N,V_dismissedAction
TI,N,V_hour
TI,N,V_minute
TI,N,V_onboardingVersion
TI,N,V_playOptions
TI,N,V_sleepModeOptions
TI,N,V_soundType
TI,R,N,V_revision
TQ,D,N
TQ,N
TQ,N,V_backoffFactor
TQ,N,V_bedtimeDismissedAction
TQ,N,V_bedtimeHour
TQ,N,V_bedtimeMinute
TQ,N,V_currentBackoff
TQ,N,V_day
TQ,N,V_dismissedAction
TQ,N,V_endReason
TQ,N,V_hour
TQ,N,V_lastIndex
TQ,N,V_minute
TQ,N,V_month
TQ,N,V_onboardingVersion
TQ,N,V_options
TQ,N,V_playOptions
TQ,N,V_repeatSchedule
TQ,N,V_requestType
TQ,N,V_sleepModeOptions
TQ,N,V_state
TQ,N,V_triggerType
TQ,N,V_year
TQ,R
TQ,R,N
TQ,R,N,V_soundType
T^{__CFUserNotification=},N,V_notification
Td,D,N
Td,N,V_bedtimeDismissedDate
Td,N,V_bedtimeFiredDate
Td,N,V_bedtimeSnoozeFireDate
Td,N,V_defaultDuration
Td,N,V_delay
Td,N,V_dismissDate
Td,N,V_dismissedDate
Td,N,V_firedDate
Td,N,V_initialTime
Td,N,V_keepOffUntilDate
Td,N,V_lastModifiedDate
Td,N,V_mediaID
Td,N,V_snoozeDate
Td,N,V_snoozeFireDate
Td,N,V_syncVersion
Td,R,N
Td,R,N,V_assertionTimeout
Td,R,N,V_remainingTime
Tf,N,V_soundVolume
Tf,N,V_syncVersion
Tf,R,N
Ti,N,V_notifyToken
Ti,R,N
Tq,D,N
Tq,N
Tq,N,V_code
Tq,N,V_type
Tq,R,N
Tq,R,N,V_soundType
T{os_unfair_lock_s=I},N,V_alarmLock
T{os_unfair_lock_s=I},N,V_cacheLock
T{os_unfair_lock_s=I},N,V_lock
T{os_unfair_lock_s=I},N,V_observersLock
T{os_unfair_lock_s=I},R,N,V_connectionLock
URLWithString:
UTF8String
UUID
UUIDString
_actionHandler
_addStateHandler
_additionalAlarmsToScheduleForAlarms:
_alarm
_alarmID
_alarmIDURL
_alarmIntentDonor
_alarmLock
_alarmManager
_alarmNotificationActionForUserNotificationAction:category:
_alarmProperties
_alarmServer
_alarmSnapshot
_alarmStatesByAlarmID
_alarmStorage
_alarmSyncDataModel
_alarmTimeoutScheduler
_alarmUserActivityWithDisableIntent:
_alarmUserActivityWithEnableIntent:
_alarmUserActivityWithIntent:
_alarmWithIDStringAsync:
_alarmsByID
_alarmsIncludingSleepAlarm:doSynchronous:
_alertTypeForCategory:
_alive
_allIdentifiersForAlarm:
_allIdentifiersForAlarm:includeMainIdentifier:
_allIdentifiersForAlarm:includeMainIdentifier:includeSnooze:
_allowsSnooze
_alternateTimersForTargetTimerState:type:inTimers:allowedTimerStates:
_amString
_applicationWorkspace
_applyNecessaryChangesFromExistingAlarm:updatedAlarm:
_applyNecessaryChangesFromOldTimer:currentTimer:
_archivedSessionDataFile
_archivedSessionDataPath
_archiverScheduler
_asleepState
_assertionService
_assertionTimeout
_asyncRemoteObjectProxyWithErrorHandler:
_awakeState
_backoffFactor
_bedtimeDismissedAction
_bedtimeDismissedDate
_bedtimeFiredDate
_bedtimeHour
_bedtimeMinute
_bedtimeReminder
_bedtimeReminderMinutes
_bedtimeSnoozeFireDate
_block
_bundleID
_bundleIDForUNSchedule
_bypassReloadDate
_cache
_cacheLock
_cachedAlarm
_cachedSleepAlarm
_callbackScheduler
_cancelNotifications
_changeDictionary
_changeQueue
_changeStore
_changedProperties
_changedValue
_changes
_changesLoaded
_checkIfRestoreDone
_checkNowPlayingMediaState:
_checkSpringBoardStarted
_className
_cleanUpForInternalBuild:
_cleanUpSleepAlarmRepeat:
_cleanUpSnoozeFireDate:
_cleanupObserversForNotification:
_clearLocaleDependentState
_clientLink
_clients
_code
_completableBlock
_completed
_completionBlock
_completionBlocks
_connectedClients
_connectedDate
_connection
_connectionListener
_connectionListenerProvider
_connectionProvider
_connectionQueue
_connectionRebuildingIfNecessary
_context
_convertSleepAlarmToRegular:
_copyLegacyAlarmsFromPreferences
_copyLegacySleepAlarmFromPreferences
_copyStateOntoAlarm:
_copyStateOntoTimer:
_coreDuetMonitor
_countryCode
_countryName
_createDefaultTimerIfNeededWithCompletion:
_createSleepSessionWithUserWakeTime:endReason:
_createTimerWithIntent:dryRun:completion:
_currentClientForConnection:
_currentDateProvider
_currentState
_date
_date:isOnDay:calendar:
_dateIntervalFilter:
_dateOnlyFormatter
_day
_daySetting
_decodeObject:
_defaultDuration
_defaultSound
_defaults
_delay
_delegate
_deleteTimer:multiple:dryRun:completion:
_deserializer
_diagnosticDictionaryForAlarm:
_diagnosticDictionaryForTimer:
_diagnosticProviders
_diagnosticTimerDictionary
_diagnostics
_dictionaryForProtocolObject:
_dictionaryIsForSerializableObject:
_didCompleteSleepOnboarding
_didInterruptConnection
_didInvalidateConnection
_didInvalidateConnection:
_didReceiveAlarmServerReadyNotification:
_didReceiveTimerServerReadyNotification:
_dirty
_disabledState
_discardOldAlarms
_discardOldTimers
_discardOldVersion
_dismissAction
_dismissDate
_dismissedAction
_dismissedDate
_distributedNotificationForLocalNotification:
_donatedTimerIDs
_duration
_durationComponentsFormatter
_earliestTriggerDateForDate:
_editingProxy
_enabled
_encodeObject:forKey:
_encodeProtocolObject:forKey:
_endDate
_endReason
_enqueueChange:changeCompareBlock:
_error
_errorHandler
_eventName
_exportedObjectInterface
_featureStore
_filterScheduledObjects:withBlock:
_filterSleepAlarmOverrides:date:
_filteredAlarms:afterDate:maxCount:filter:
_fireDate
_fireScheduledAlarm:firedDate:completionBlock:
_fireScheduledTimer:firedDate:completionBlock:
_fireTime
_firedDate
_forceActiveForMigration
_genericallyResolveTargetTimer:multiple:allowedTimerStatesForFollowup:completion:
_getCachedAlarmsWithCompletion:doSynchronous:
_getCachedAlarmsWithFuture:finishBlock:
_getCachedTimersWithCompletion:doSynchronous:
_getCachedTimersWithFuture:finishBlock:
_goToBedIdentifier:
_handleAlarmNotificationResponse:withCompletionHandler:
_handleAlarmsDidChange
_handleF5Reset
_handleLanguageChanged
_handleNotification
_handleNotificationWithName:type:
_handlePauseTimer:dryRun:completion:
_handlePrefsChanged
_handleResetTimer:dryRun:completion:
_handleRestoreDone
_handleResumeTimer:dryRun:completion:
_handleTimerNotificationResponse:withCompletionHandler:
_handledNotifications
_handler
_has
_hasBeenUnlockedSinceBoot
_hasUnprocessedSessions
_healthStore
_hideSensitiveUI
_hour
_identifier
_info
_infoProvider
_initCommon
_initWithConnectionProvidingBlock:metrics:
_initWithConnectionProvidingBlock:metrics:notificationCenter:
_initialState
_initialTime
_internalHasBeenUnlockedSinceBoot
_internalQueue
_internalScheduler
_intervalToCheckForAlarmsToFireBeforeDate:
_intervalToCheckForTimersToFireBeforeDate:
_intervals
_isDefaultTimer:
_isEnabled
_isEqualToAlarm:checkLastModified:
_isEqualToChangeSet:checkOriginalValues:
_isEqualToTimer:checkLastModified:
_isHorseman
_isInternalBuild
_isPastOverrideEvent
_isPlayingMediaFromMRPlaybackState:
_isPushAlertsEnabledInPreferences
_isSleepAlarm
_isSpringBoardStarted
_isSystemReady
_isVendorRelease
_iterateObserversWithBlock:
_keepOffUntilDate
_languageChangeListener
_languageChangeNotification
_lastAlarmTriggerDate
_lastIndex
_lastLifecycleNotification
_lastModified
_lastModifiedDate
_lastReloadRequestDate
_latestKeyBagValueForHasBeenUnlockedSinceBoot
_launchDate
_lifecycleNotification
_listeners
_loadAlarms
_loadAlarmsWithCompletion:
_loadDefaultAlarmSound
_loadDefaultTimerSound
_loadScheduledNotifications
_loadTimerDefaults
_loadTimersWithCompletion:
_loadUserPreferences
_localNotificationForDistributedNotification:
_lock
_machServiceName
_matchTimersFromIntentsTimer:excludeStoppedTimers:completion:
_mediaID
_mediaItemIdentifier
_metadata
_metrics
_migrator
_month
_mtNextDateAfterDate:matchingComponents:backwards:
_mtNextDateAfterDate:matchingUnit:value:backwards:
_mutableContentForScheduledAlarmWithCommonSettings:
_name
_needPrefsUpdate
_needsAdditionalProcessing
_needsUpdate
_newBaseDateComponentsForDay:
_nextAlarm
_nextAlarms
_nextAlarmsForDate:maxCount:includeSleepAlarm:includeBedtimeNotification:doSynchronous:
_nextAlarmsInRange:maxCount:includeSleepAlarm:includeBedtimeNotification:doSynchronous:
_nextDateHelperAfterDate:nextDateBlock:
_nextDateHelperWithDate:calendar:
_nextScheduledAlertIncludingBedtimeNotification:
_nextScheduledObjectInSets:
_nextTimer
_nextTriggerDateForScheduling
_notification
_notificationCenter
_notificationCenterForScheduledAlarm:
_notificationCenterForScheduledTimer
_notificationCenters
_notificationManager
_notifications
_notifyClientsForTriggerType:
_notifyClientsOfChange
_notifyNano
_notifyObserversForAlarmAdd:source:
_notifyObserversForAlarmChange:source:
_notifyObserversForAlarmDismiss:dismissAction:source:
_notifyObserversForAlarmFire:triggerType:source:
_notifyObserversForAlarmRemoval:source:
_notifyObserversForAlarmSnooze:snoozeAction:source:
_notifyObserversForNextAlarmChange:source:
_notifyObserversForSleepAlarmChange:
_notifyObserversWithBlock:
_notifyToken
_npsManager
_numberFromString:
_objectForDictionary:
_observerQueue
_observers
_observersForBundleID
_observersLock
_observing
_offState
_onboardingVersion
_onlyUnnamedTimerInTimers:forTargetTimer:allowMultiple:
_options
_optionsForBackwards:
_orderedAlarms
_orderedScheduledAlerts
_orderedScheduledEvents
_orderedScheduledNotifications
_orderedTimers
_originalValue
_overriddenForDate
_pairedDevice
_pendingRequests
_performBlockOnClientInfos:excludingClient:
_performDismiss:
_performScheduleChangingBlock:withCompletion:
_performScheduleSnapshot
_persistence
_playOptions
_pmString
_postNotification:
_pretendActiveIfProxy
_processedChanges
_property
_purgeAlarmsAndTimers
_pushAlertsEnabled
_queue
_queuePersistAlarm:replacingAlarm:
_queuePersistTimer:replacingTimer:
_queue_actuallyRemoveAlarm:withCompletion:source:
_queue_addAlarm:withCompletion:source:
_queue_addTimer:withCompletion:source:
_queue_alarmMatchingAlarm:
_queue_alarmMatchingAlarmIdentifier:
_queue_allAlarms
_queue_allSleepAlarms
_queue_dismissAlarmWithIdentifier:dismissDate:dismissAction:withCompletion:source:
_queue_dismissMutableAlarm:dismissDate:dismissAction:
_queue_dismissTimerWithIdentifier:withCompletion:source:
_queue_donateCreateTimerIntent:source:
_queue_fireTriggeredAlarmsWithCompletionBlock:
_queue_fireTriggeredTimersWithCompletionBlock:
_queue_hasMatchingAlarm:
_queue_hasMatchingTimer:
_queue_lastTimerTriggerDate
_queue_nextScheduledTimer
_queue_nextTimer
_queue_notifyObserversForNextTimerChange:source:
_queue_notifyObserversForTimerAdd:source:
_queue_notifyObserversForTimerDismiss:source:
_queue_notifyObserversForTimerFire:source:
_queue_notifyObserversForTimerRemoval:source:
_queue_notifyObserversForTimerUpdate:source:
_queue_notifyObserversWithBlock:
_queue_persistAlarms
_queue_persistTimers
_queue_removeAlarm:withCompletion:source:
_queue_removeAlarmWithIdentifier:withCompletion:source:
_queue_removeAllAlarmsForSource:
_queue_removeAllTimersForSource:
_queue_removeTimer:withCompletion:source:
_queue_repeatTimerWithIdentifier:withCompletion:source:
_queue_rescheduleTimersWithCompletion:
_queue_resetAlarmsTo:sleepAlarms:
_queue_scheduleTimers:withCompletion:
_queue_setAllAlarms:sleepAlarms:source:
_queue_setAllAlarms:sleepAlarms:source:persist:notify:
_queue_setAllTimers:source:
_queue_setAllTimers:source:persist:notify:
_queue_snoozeAlarmWithIdentifier:snoozeDate:snoozeAction:withCompletion:source:
_queue_sortAlarms
_queue_sortSleepAlarms
_queue_sortTimers
_queue_timerMatchingTimerIdentifier:
_queue_triggerDidFireForAlarmWithCompletionBlock:
_queue_triggerDidFireForTimerWithCompletionBlock:
_queue_unregisterTimer
_queue_unscheduleTimers:
_queue_updateAlarm:withCompletion:source:
_queue_updateAlarmWithIdentifier:changeSet:withCompletion:source:
_queue_updateNextAlarmTimerWithCompletion:
_queue_updatePersistentTimerForNextTimerWithCompletion:
_queue_updateSleepAlarmsFromExistingAlarms:
_queue_updateTimer:withCompletion:source:
_queue_writeAlarmToKnowledgeStore:category:
_queue_writeCurrentStateToContextStore
_queue_writeNextAlarmStateToContextStore:
_quiescingWindow
_receivingSession
_reconcileAlarmsAndNotifications
_reconnectHandler
_refreshManagers
_registerForAlarmNotifications
_registerForDistributedNotifications
_registerForLiveDarwinNotification:
_registerForLocalNotifications
_registerForNotifications
_registerForXPCStream:notificationType:
_reloadLocaleInfo
_reloadTimer
_remainingTime
_remoteObjectInterface
_remoteObjectProxyWithXPCConnectionProvider:remoteObjectProxyProvider:errorHandler:
_removeAlarmDataIfNecessary:
_removeSessionDataFile
_removeSyncDataFile
_removeTimerDataIfNecessary:
_removeUserDefaultsData
_removeUserDefaultsDataIfNecessary:
_repeatDays
_request
_requestSync:
_requestType
_requiredEntitlement
_rescheduleAlarmsWithCompletion:
_resetCurrentToneIdentifier
_resolveChange:resolutionHandler:
_responseToCreateTimerIntent:withCreatedTimer:error:dryRun:
_responseToDeleteTimerIntent:withDeletedTimers:error:dryRun:
_responseToPauseTimerIntent:withPausedTimers:error:dryRun:
_responseToResetTimerIntent:withResetTimers:error:dryRun:
_responseToResumeTimerIntent:withResumedTimers:error:dryRun:
_responseToSetTimerAttributeIntent:withUpdatedTimer:error:dryRun:
_restoreDoneHandled
_restoreNotification
_retryConnection
_retryConnectionWithRecover:
_retryRequest
_retryTimer
_revision
_runningTimerFromCurrentTimer:withDuration:
_saveDefaultAlarmSound:
_saveDefaultTimerSound:
_scheduleObject:
_scheduleTask:withCompletion:
_scheduleable
_scheduledAlarms
_scheduledAlertMap
_scheduledListForTriggerType:
_scheduledNotifications
_scheduledObjectComparator
_scheduledTimers
_scheduler
_schedulingAssertionTimeout
_schedulingDelegate
_serialQueue
_serializer
_serializerQueue
_serializingProtocol
_service
_session
_sessionsManager
_setDonatedBySiri:
_setDuration:
_setExtensionBundleId:
_setGoToBedTitleAndBody:forGoToBedNotification:
_setLastAlarmTriggerDate:
_setLaunchId:
_setNanoLaunchId:
_setSpecificContent:forGoToBedNotification:
_setSpecificContent:forNormalScheduledAlarm:
_setSpecificContent:forScheduledAlarm:
_setSpecificContent:forSnoozeCountdownNotification:
_settings
_setupAlarms
_setupInitialListeners
_setupNotificationCenter
_setupSecondaryListeners
_setupSync
_setupSyncManagerWithBlock:
_setupTimers
_sharedPublicMetrics
_shouldNotifyForTrigger:
_shouldPostNotificationForScheduledAlarm:
_shouldUseBedtimeDismissedDateForAlarm:
_siriContext
_sleepAlarm
_sleepAlarms
_sleepCoordinator
_sleepEnabled
_sleepManager
_sleepMode
_sleepModeEndDate
_sleepModeMonitor
_sleepModeOptions
_sleepSchedule
_sleepSessionManager
_sleepSessionTracker
_sleepSessionTrackerDelegate
_sleepStateResolved
_sleepStore
_sleepStoreProvider
_sleepTracking
_snoozeAction
_snoozeCountdownIdentifier:
_snoozeDate
_snoozed
_sort:
_sortAndFilter:objectsToScheduleAhead:
_sortedAlarms:date:includeBedtimeNotification:
_sortedNextAlarmsAfterDate:includeSleepAlarm:includeBedtimeNotification:
_sortedNextAlarmsAfterDate:includeSleepAlarm:includeBedtimeNotification:doSynchronous:
_sound
_soundType
_soundVolume
_stack
_startDate
_startMonitoringWithQueue:
_started
_state
_stateMachine
_stateReset
_storage
_syncChangeQueue
_syncDataFile
_syncDataModel
_syncDataPath
_syncDate
_syncMetrics
_syncRemoteObjectProxyWithErrorHandler:
_syncService
_syncServiceManager
_syncStatusProvider
_syncStatusProviderDelegate
_syncVersion
_systemNotReadyError
_systemReady
_systemStateListener
_taskScheduler
_tasks
_timeDesignatorAppearsBeforeTime
_timeFormatter
_timeInBedTracking
_timeListener
_timeOnlyFormatter
_timeZone
_timer
_timer:conflictsWithRunningTimersInTimers:
_timerFromIntentTargetTimer:defaultState:
_timerID
_timerIntentDonor
_timerManager
_timerManagerProvider
_timerNotificationActionForUserNotificationAction:
_timerServer
_timerSessionsCoordinator
_timerSnapshot
_timerStorage
_timerTimeForState:remainingTime:currentDateProvider:
_title
_toggleAlarm:alarmIDString:completion:
_trackingEnabledForSleepAlarm:
_transaction
_trigger
_triggerDate
_triggerType
_type
_unlocalizedCountryName
_unlocalizedName
_unprocessedSessions
_unschedule:
_unscheduleAlarms:
_unscheduleObject:
_unwrap:
_updateAudioVolumeDynamicallyToValue:
_updateBlock
_updateCurrentTimerWithState:
_updateCurrentTimerWithStateSync:
_updateHandler
_updatePropertiesFromDeserializer:
_updateTimer:doSynchronous:
_updateTimer:dryRun:allowMultiple:excludeStoppedTimers:filterBlock:updateBlock:completion:
_updateTimer:dryRun:updateBlock:completion:
_updateTimer:toDuration:toLabel:dryRun:completion:
_upgrade
_upgradeAlarms
_upgradeIfNeverAttempted
_upgradeTimers
_use24HourTime
_userDefaults
_validateCanStartTimer:
_verifyRestoreDone
_vibrationID
_vibrationIdentifier
_waitingState
_wakeUpAlarmStringForAlarm:
_withLock:
_workScheduler
_writeSessionData
_year
abbreviation
actionHandler
actionIdentifier
actionWithIdentifier:title:options:
actionWithIdentifier:title:options:icon:
activate
active
activeModeAssertionWithError:
activePairedDeviceDidChange
activeSleepAlarm
addAlarm:
addAlarm:withCompletion:
addAlarms:
addAssertionUpdateListener:withCompletionHandler:
addCity:
addCompletionBlock:
addDefaultCitiesIfNeeded
addEntriesFromDictionary:
addFailureBlock:
addNotificationRequest:withCompletionHandler:
addObject:
addObjectsFromArray:
addObserver:
addObserver:forBundleIdentifier:
addObserver:selector:name:object:
addObserver:wasFirst:
addObserverForName:object:queue:usingBlock:
addSensitiveUIObserver:
addSuccessBlock:
addTimer:
addTimer:withCompletion:
afterDelay:performBlock:
agent
alCity
alCityId
alarm
alarmAtIndex:
alarmAtRow:
alarmConfiguration
alarmCount
alarmCountIncludingSleepAlarm:
alarmFired:
alarmFromOldAlarm:
alarmFromSleepOccurrence:scheduleEnabled:keepOffUntilDate:
alarmIDIntentObject
alarmIDKey
alarmIDString
alarmIDURL
alarmIntentDisplayString
alarmIntentDonor
alarmLock
alarmManager
alarmRepeatScheduleFrom:
alarmScheduler
alarmServer
alarmSnapshot
alarmSnoozed:
alarmSoundIdentifier
alarmSoundType
alarmSoundVolume
alarmStatesByAlarmID
alarmStorage
alarmStream
alarmSyncDataModel
alarmTimeoutScheduler
alarmURL
alarmWithHour:minute:
alarmWithIDString:
alarmWithIdentifier:withCompletion:
alarms
alarmsAdded:
alarmsAtIndex:
alarmsByID
alarmsCount
alarmsIncludingSleepAlarm:
alarmsRemoved:
alarmsSync
alarmsSyncIncludingSleepAlarm:
alarmsType
alarmsUpdated:
alertTopic
alertType
alertWithConfiguration:
allAlarms
allCities
allConfiguredWidgetsWithCompletion:
allObjects
allValues
allocWithZone:
allowsKeyedCoding
allowsSnooze
amString
appendBool:withName:
appendBool:withName:ifEqualTo:
appendFormat:
appendInteger:withName:
appendObject:withName:
appendObject:withName:skipIfNil:
appendString:
appendString:withName:
appendString:withName:skipIfEmpty:
applicationIconDidChange:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidCancel:
applicationInstallsDidChange:
applicationInstallsDidPause:
applicationInstallsDidPrioritize:
applicationInstallsDidResume:
applicationInstallsDidStart:
applicationInstallsDidUpdateIcon:
applicationState
applicationStateDidChange:
applicationWorkspace
applicationsDidChangePersonas:
applicationsDidFailToInstall:
applicationsDidInstall:
applicationsDidUninstall:
applicationsWillInstall:
applicationsWillUninstall:
applyChange:
applyChangesFromChangeSet:
applyChangesFromEditingProxy
applySettings:
archivedSessionDataFile
archivedSessionDataPath
archiverScheduler
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
asleepState
assertionService
assertionTimeOutForNotification:ofType:
assertionTimeout
assistantSyncNotificationName
assistantUILocalizedStringForKey:table:
attributeWithDomain:name:
audioVolume
authorizationStatusForType:
autorelease
awakeState
backoffFactor
bedtimeCategories
bedtimeComponents
bedtimeDismissedAction
bedtimeDismissedDate
bedtimeFiredDate
bedtimeHour
bedtimeMinute
bedtimeReminderMinutes
bedtimeSnoozeFireDate
beginListening
bestCityForLegacyCity:
block
boolForKey:
boolForKey:exists:
boolValue
bs_dayPeriodForDate:inLocale:
build
builderWithObject:
bundleIdentifier
bundleWithIdentifier:
bypassReloadDate
bypassReloadForAlarm:
bypassReloadForAlarms:
bytes
cStringUsingEncoding:
cache
cacheLock
cachedAlarm
cachedSleepAlarm
calculateNextAlarms
calendarWithIdentifier:
callbackScheduler
canAddCity
cancelNotifications
cancelNotificationsWithIdentifiers:
cancelTimer
caseInsensitiveCompare:
categoryForScheduledAlarm:
categoryForScheduledTimer:
categoryIdentifier
categoryTypeForIdentifier:
categoryWithIdentifier:actions:intentIdentifiers:options:
changeDictionary
changeFromData:ofType:
changeQueue
changeSetByAddingChangeSet:
changeSetWithChangesFromObject:toObject:
changeSetWithChangesFromObject:toObject:inProperties:
changeStore
changeType
changedProperties
changedValue
changedValueForProperty:hasProperty:
changesLoaded
checkForPendingChanges
checkIfCitiesModified
checkSystemReady
cities
citiesMatchingIdentifiers:
citiesMatchingName:
citiesWithIdentifiers:
city
cityDataNeedsUpdate
cityName
cityWithIdUrl:
class
cleanDeliveredNotifications
cleanUpOldNotifications
clearAlarms
clearOutCityUpdatePref
clientInfoForConnection:clientLink:
clientLink
clockAppSectionURL
clocks
code
combineAllFutures:ignoringErrors:scheduler:
combineAllFutures:scheduler:
compare:
compareTime:
completableBlock
complete:
completed
completionBlocks
component:fromDate:
components:fromDate:
componentsJoinedByString:
componentsSeparatedByString:
configureConnection:
confirmCreateTimer:completion:
confirmDeleteTimer:completion:
confirmEnableAlarm:completion:
confirmGetAlarms:completion:
confirmMTCreateAlarm:completion:
confirmMTDisableAlarm:completion:
confirmMTEnableAlarm:completion:
confirmMTUpdateAlarm:completion:
confirmPauseTimer:completion:
confirmResetTimer:completion:
confirmResumeTimer:completion:
confirmSearchForTimers:completion:
confirmSetTimerAttribute:completion:
confirmToggleAlarm:completion:
confirmUpdateAlarm:completion:
confirmationRequiredWithAlarmOperationToConfirm:
confirmationRequiredWithAlarmStateToConfirm:
confirmationRequiredWithAlarmToConfirm:
confirmationRequiredWithMTCityToConfirm:
confirmationRequiredWithMTWorldClockToConfirm:
confirmationRequiredWithObjectToConfirm:
confirmationRequiredWithRepeatDayToConfirm:
confirmationRequiredWithStringToConfirm:
confirmationRequiredWithTimeIntervalToConfirm:
confirmationRequiredWithTimerToConfirm:
confirmationRequiredWithTimerTypeToConfirm:
confirmationRequiredWithValueToConfirm:
confirmedLastBedtimeReminder
conflicts:
conformsToProtocol:
connectedClients
connectedDate
connection
connectionListener
connectionListenerProvider
connectionLock
connectionProvider
connectionWithEndpoint:
containsDate:
containsObserver:
contentForScheduledAlarm:
contentForScheduledTimer:
continueInAppIntentResponseWithState:
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
countryCode
countryName
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createSessionWithTimer:
createUserInfoWithIntentName:alarmIDString:time:label:
currentBackoff
currentCallCount
currentClient
currentConnection
currentDate
currentDateProvider
currentHandler
currentLocale
currentNotificationCenter
currentSleepScheduleWithError:
currentSleepSettingsWithCompletion:
currentSleepSettingsWithError:
currentState
currentTime
currentTimer
currentTimerFromTimers:
data
dataFileName
dataSource:didAddAlarms:
dataSource:didRemoveAlarms:
dataSource:didUpdateAlarms:
dataSourceDidReload:
dataWithPropertyList:format:options:error:
dataWithSYObject:
databaseWasRebuilt
date
dateByAddingTimeInterval:
dateByAddingUnit:value:toDate:options:
dateBySettingHour:minute:second:ofDate:options:
dateComponents
dateFormatFromTemplate:options:locale:
dateFromComponents:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
dayAndTimeZoneOffsetStringFromDate:withTimeZoneOffset:timeZoneAbbreviation:spaceBeforeTimeDesignator:hoursOnly:numericOnly:
daySetting
daylightSavingTimeOffsetForDate:
debugDescription
decodeBoolForKey:
decodeChangeData:fromProtocolVersion:ofType:
decodeDoubleForKey:
decodeFloatForKey:
decodeInt32ForKey:
decodeInt64ForKey:
decodeIntForKey:
decodeIntegerForKey:
decodeObjectForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultAlarmForToggleAlarm:
defaultAssertionTimeOutForNotification:type:
defaultBlock
defaultCenter
defaultCitiesAdded
defaultCitiesForLocaleCode:options:
defaultCitiesShownInWorldClock
defaultManager
defaultPlayOptions
defaultRepeatScheduleForMTCreateAlarm:
defaultSearchableIndex
defaultSleepModeOptions
defaultSound
defaultSoundForCategory:
defaultToneIdentifierForAlertType:
defaultVibrationIdentifierForAlertType:
defaultWorkspace
defaults
defaultsKeys
deferredLocalizedIntentsStringWithFormat:fromTable:bundle:
delay
delegate
deleteCharactersInRange:
deleteInteractionsWithGroupIdentifiers:bundleID:protectionClass:completionHandler:
deleteMultiple
description
descriptionBuilderWithMultilinePrefix:
descriptionForCategory:
descriptionForState:
descriptionWithLocale:
deserialize:
deserializedChangedValueForProperty:hasProperty:
detailsWithIdentifier:modeIdentifier:lifetime:
determineNextState:
determineNextStateForSleepAlarm:
deviceFirstUnlocked
deviceManagementPolicyDidChange:
deviceSupportsSyncing
diagnostics
dictionary
dictionaryForKey:
dictionaryFromChanges:
dictionaryRepresentation
dictionaryWithContentsOfFile:
dictionaryWithDictionary:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
didEnterWithPreviousState:
didExitWithNextState:
didReceiveNotification:
didReceiveNotificationNamed:
didReceiveSpringboardStarted:
disabledState
disambiguationWithAlarmsToDisambiguate:
disambiguationWithMTCitysToDisambiguate:
disambiguationWithMTWorldClocksToDisambiguate:
disambiguationWithObjectsToDisambiguate:
disambiguationWithRepeatDaysToDisambiguate:
disambiguationWithTimersToDisambiguate:
discoverabilitySignal
dismissAction
dismissAlarmWithIdentifier:
dismissAlarmWithIdentifier:dismissAction:
dismissAlarmWithIdentifier:dismissAction:withCompletion:
dismissAlarmWithIdentifier:dismissDate:dismissAction:withCompletion:source:
dismissDate
dismissNotificationsForAlarm:
dismissNotificationsForAlarm:dismissAction:
dismissNotificationsForAlarm:includeMainIdentifier:
dismissNotificationsForAlarm:includeMainIdentifier:includeSnooze:
dismissNotificationsForAlarm:includeSnooze:
dismissNotificationsForTimer:
dismissNotificationsWithIdentifiers:
dismissRelatedNotificationsForScheduledAlarm:
dismissTimerWithIdentifier:
dismissTimerWithIdentifier:withCompletion:
dismissTimerWithIdentifier:withCompletion:source:
dismissedDate
displayNameIncludingCountry:
displayString
displayTitle
distantFuture
distantPast
distributedNotificationPosted:
domain
donateInteractionWithCompletion:
donatesIntent
dontNotify
doubleValue
dropEditingProxy
duration
earlierDate:
editingProxy
encodeBool:forKey:
encodeDouble:forKey:
encodeFloat:forKey:
encodeInt32:forKey:
encodeInt64:forKey:
encodeInt:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeSYChangeForBackwardCompatibility:protocolVersion:
encodeWithCoder:
encodedData
encodedDictionary
endReason
endSessionWithDate:reason:
endpointForMachName:service:instance:
enqueueChange:
enterState:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumerateObservers:
enumerateObserversWithBlock:
error
errorHandler
errorOnlyCompletionHandlerAdapter
errorWithDomain:code:userInfo:
eventName
eventWithStream:startDate:endDate:value:metadata:
expectedFireDateKey
exportedObject
exportedObjectInterface
failureRequiringAppLaunchIntentResponseWithState:
featureStore
fileExistsAtPath:
fileExistsAtPath:isDirectory:
finishDecoding
finishEncoding
finishSessionWithTimer:
finishWithError:
finishWithNoResult
finishWithResult:
finishWithResult:error:
fireDate
fireTime
firedDate
firing
firingAlarmCount
firstIndex
firstObject
firstWeekday
fixUpCityProperties:
flatMap:
floatForKey:
floatForKey:exists:
floatValue
forceActiveForMigration
futureWithError:
futureWithNoResult
futureWithResult:
gatherDiagnostics
getActivePairedDevice
getAlarmsWithCompletion:
getCachedAlarmsSyncWithCompletion:
getCachedAlarmsWithCompletion:
getCachedTimersSyncWithCompletion:
getCachedTimersWithCompletion:
getCurrentTimerSync
getDeliveredNotificationsWithCompletionHandler:
getEnableStateForAlarm:
getOverriddenDate
getPendingNotificationRequestsWithCompletionHandler:
getTimersWithCompletion:
globalAsyncScheduler
handleAlarmNotificationIdentifier:action:category:completionHandler:
handleBedtimeForAlarm:date:
handleBedtimeReminderForAlarm:date:
handleConfirmationOfGoToBedNotificationForAlarm:date:
handleCreateTimer:completion:
handleDeleteTimer:completion:
handleDisableAlarm:completion:
handleDismissForAlarm:dismissAction:date:
handleEnableAlarm:completion:
handleF5Reset
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleGetAlarms:completion:
handleMTDisableAlarm:completion:
handleMigrationFinish
handleNotification:ofType:completion:
handlePauseTimer:completion:
handleResetTimer:completion:
handleResumeTimer:completion:
handleSearchForTimers:completion:
handleSetTimerAttribute:completion:
handleSleepSessionEndedForAlarm:date:reason:
handleSnoozeForAlarm:date:
handleSnoozeOfGoToBedNotificationForAlarm:date:
handleSystemReady
handleToggleAlarm:completion:
handleUpdateAlarm:completion:
handleWakeUpTimeForAlarm:date:
handlesNotification:ofType:
hasActivePairedDevice
hasActivePairedDeviceCheckSyncing:
hasActivePairedDeviceSupportingSyncing
hasActiveTimerSession
hasAlarmID
hasBedtimeDismissedAction
hasBedtimeDismissedDate
hasBedtimeFiredDate
hasBedtimeHour
hasBedtimeMinute
hasBedtimeReminderMinutes
hasBedtimeSnoozeFireDate
hasBeenUnlockedSinceBoot
hasChangeForProperty:
hasChangesInCommonWithChangeSet:
hasChangesInProperties:
hasDaySetting
hasDismissAction
hasDismissedAction
hasDismissedDate
hasFiredDate
hasIsEnabled
hasKeepOffUntilDate
hasLastModifiedDate
hasMediaID
hasMinute
hasOnboardingVersion
hasPendingChanges
hasPlayOptions
hasPrefix:
hasRevision
hasSleepAlarmMatchingAlarmIDString:
hasSleepMode
hasSleepModeOptions
hasSleepSchedule
hasSleepTracking
hasSnoozeFireDate
hasSound
hasSoundVolume
hasTimeInBedTracking
hasTitle
hasToneID
hasVibeID
hash
healthStore
helperPlaceholdersInstalled:
helperPlaceholdersUninstalled:
host
hour
iconWithSystemImageName:
idUrl
identifier
immediateScheduler
inMemoryStore
inProgressIntentResponseWithState:
incomingCall
incrementEventCount:
indexForAlarm:
indexOfObject:
indexOfObjectPassingTest:
indexesOfObjectsPassingTest:
info
infoForMachServiceName:remoteObjectInterface:exportedObject:exportedObjectInterface:lifecycleNotification:requiredEntitlement:options:
infoForMachServiceName:remoteObjectInterface:options:
infoProvider
init
initForReadingFromData:error:
initFromDeserializer:
initRequiringSecureCoding:
initWithALCityIdentifier:
initWithActivityType:
initWithAlarmManager:
initWithAlarmStorage:
initWithAlarmStorage:currentDateProvider:
initWithAlarmStorage:sleepCoordinator:
initWithAlarmStorage:sleepCoordinator:currentDateProvider:
initWithAlarmStorage:sleepCoordinator:sleepSessionTracker:
initWithAlarmStorage:sleepStoreProvider:featureStoreProvider:healthStore:persistence:
initWithAlarmStorage:syncMetrics:
initWithAlarmStorage:syncMetrics:syncServiceManagerBlock:serializer:serialQueue:
initWithAlarmStorage:timerStorage:
initWithArray:
initWithBundleID:
initWithBundleIdentifier:
initWithBundleIdentifier:allowPlaceholder:error:
initWithCallbackScheduler:
initWithCapacity:
initWithChangeDictionary:
initWithChangeStore:
initWithChanges:
initWithCode:userActivity:
initWithCoder:
initWithConnection:clientLink:
initWithConnectionInfo:errorHandler:
initWithConnectionInfo:errorHandler:reconnectHandler:
initWithConnectionProvider:metrics:
initWithConnectionProvider:metrics:notificationCenter:
initWithContentsOfFile:
initWithCurrentTimeFromCurrentDateProvider:
initWithData:
initWithDataModel:
initWithDate:
initWithDate:currentDateProvider:
initWithDate:type:
initWithDate:type:isPastOverrideEvent:
initWithDelegate:
initWithDelegate:infoProvider:
initWithDescription:timeout:timeoutBlock:
initWithDismissedObjectIdentifier:dismissDate:date:version:
initWithDomain:verb:parametersByName:
initWithEncodedDictionary:
initWithEvent:
initWithEventType:alarmID:isSleepAlarm:
initWithExtensionBundleIdentifier:kind:
initWithFeatureIdentifier:sleepStore:
initWithHealthStore:
initWithHour:minute:
initWithHour:minute:currentDateProvider:
initWithIdentifier:
initWithIdentifier:bundleID:context:
initWithIdentifier:displayString:
initWithInitialTime:backoffFactor:fireBlock:queue:
initWithInt:
initWithIntent:response:
initWithKeepOffUntilDate:stateMachine:
initWithLabel:duration:remainingTime:identifier:state:type:
initWithLabel:duration:type:
initWithLocaleIdentifier:
initWithMachServiceName:
initWithMachServiceName:options:
initWithMachServiceName:remoteObjectInterface:exportedObject:exportedObjectInterface:lifecycleNotification:requiredEntitlement:options:
initWithMediaItemIdentifier:vibrationIdentifier:volume:
initWithMetrics:
initWithName:
initWithName:assertionTimeout:
initWithObjects:
initWithPersistence:
initWithPersistence:migrator:serializer:callbackScheduler:currentDateProvider:
initWithPreferences:
initWithProperties:
initWithProperty:changedValue:originalValue:
initWithQueue:
initWithRequestType:
initWithScheduleable:trigger:
initWithService:priority:asMasterStore:options:
initWithSession:delegate:
initWithSession:request:delegate:
initWithSettings:
initWithSleepModeEndDate:stateMachine:
initWithSnoozedObjectIdentifier:snoozeDate:date:version:
initWithSound:usingVolume:
initWithSpokenPhrase:
initWithStartDate:endDate:
initWithStartDate:endDate:intervals:endReason:metadata:
initWithState:duration:
initWithState:duration:currentDateProvider:
initWithStateMachine:
initWithStorage:
initWithStorage:connectionListenerProvider:
initWithStorage:notificationCenter:
initWithStorage:notificationCenter:scheduler:defaults:
initWithStorage:notificationCenter:scheduler:defaults:schedulingDelegate:taskScheduler:currentDateProvider:
initWithSuiteName:
initWithSyncService:syncStatusProvider:syncDataModel:syncMetrics:
initWithSyncService:syncStatusProvider:syncDataModel:syncMetrics:syncChangeStore:
initWithSyncStatusProvider:
initWithTimeInterval:
initWithTimeZone:countryCode:name:countryName:unlocalizedName:unlocalizedCountryName:
initWithTimeout:
initWithTimerManager:
initWithTimerResolutionResult:
initWithToneIdentifier:vibrationIdentifer:volume:
initWithType:
initWithType:name:powerAssertionTimeout:
initWithUUIDString:
initWithUpdateBlock:
initWithUserDefaults:
initialState
initialTime
insertObject:atIndex:
intValue
integerForKey:defaultValue:
integerForKey:exists:
integerForKey:isValid:defaultValue:
integerValue
intent
intentAlarm
intentLabel
interfaceWithIdentifier:
interfaceWithProtocol:
internalHasBeenUnlockedSinceBoot
internalQueue
internalScheduler
interruptAudio
interruptAudioAndLockDeviceWithCompletionBlock:
intersectsSet:
intervals
invalidate
invalidateActiveModeAssertionWithError:
invalidationDate
isActive
isApplicationInstalledForBundleIdentifier:
isApplicationInstalledForBundleIdentifier:allowPlaceholder:
isBedtimeRelated
isBedtimeSnoozed
isCachedLanguageStaleForProperties:
isCachedLanguageStaleForProperties:systemLanguage:
isCurrentOnboardingVersionCompletedWithError:
isCurrentTimer
isDaylightSavingTime
isEnabled
isEqual:
isEqualIgnoringLastModifiedDate:
isEqualToDate:
isEqualToDictionary:
isEqualToScheduledObject:
isEqualToSet:
isEqualToString:
isEqualToTime:
isEqualToTimeZone:
isEqualToTrigger:
isEquivalentToChangeSet:
isFinished
isFiring
isForAlert
isForGoToBed
isForNotification
isForSnooze
isFromOtherDevice
isHorseman
isInstalled
isItemEnabled
isKindOfClass:
isMasterStore
isMemberOfClass:
isObserving
isPastOverrideEvent
isPlaceholder
isPushAlertsEnabled
isScheduled
isScheduled:
isSending
isSilent
isSingleDayOverride
isSingleTime
isSingleTimeAlarm
isSleepAlarm
isSleepItem
isSleepModeEnabled:
isSleepModeEnabled:error:
isSleepModeOn
isSnoozed
isSpringboardStarted
isSystemReady
isSystemRestoreDone
isUserAsleep
isValidDateComponent:
isVisible
isWorldClockCityProperties:
keepOffUntilDate
keyPathForCurrentAlarms
keyPathForNextAlarm
knowledgeStore
label
languageChangeListener
lastIndex
lastLifecycleNotification
lastModified
lastModifiedDate
lastObject
lastReloadRequestDate
laterDate:
latitude
launchDate
launchURLForScheme:
length
lifecycleNotification
lifetime
lifetimeWithDateInterval:
listener:shouldAcceptNewConnection:
listeners
liveDarwinNotifications
loadAlarms
loadAlarmsSync
loadChanges
loadCities
loadLegacyData
loadTimers
loadTimersSync
loadUserPreferences
loaded
localDevice
locale
localeCode
localeIdentifier
localeWithLocaleIdentifier:
localizedCaseInsensitiveContainsString:
localizedStringForKey:value:table:
localizedStringFromDate:dateStyle:timeStyle:
localizedTimeStringFromDate:forTimeZone:timeDesignator:
localizedTimeStringFromDate:timeDesignator:
lock
logAlarmAdded:
logAlarmDeleted:
logAlarmDismissAction:
logAlarmSnoozeAction:
logAlarmUpdated:
logMessage:
logMultipleTimersAdded:
logSyncCompleted
logSyncFailedWithError:
logTimerAdded
logTimerDismissed
logTimerRepeated
longLongValue
longditude
longitude
mainBundle
mainQueue
markModified
markSleepMigrationComplete
maximumAllowedDuration
mediaItemIdentifier
merge:
mergeFrom:
metadata
metadataForAlarm:
migrateFromOldStorage
migrator
minute
modeAssertionService:didReceiveModeAssertionInvalidation:
modeAssertionService:didUpdateActiveModeAssertion:
month
mostRecentlyUpdatedAlarmForAlarms:
moveCityFromIndex:toIndex:
mtCityFromWorldClockCity:
mtClockAppSection
mtDateIntervalWithEndDate:duration:
mtDateNearestMatchingComponents:
mtDateRequiresSingularTimeString:
mtDescription
mtEarliest:
mtFinishWithFuture:
mtGreetingString:
mtGregorianCalendar
mtID
mtIsAfterDate:
mtIsAfterOrSameAsDate:
mtIsBeforeOrSameAsDate:
mtIsForLastTimer
mtIsIn24HourTime
mtIsList
mtLatest:
mtMainThreadScheduler
mtMidnightForDate
mtNextDateAfterDate:matchingComponents:
mtNextDateAfterDate:matchingUnit:value:
mtNotifiyingQueue
mtNow
mtPreviousDateBeforeDate:matchingComponents:
mtPreviousDateBeforeDate:matchingUnit:value:
mtSerialSchedulerForObject:
mtSetIntentDonorFromSource:
mtStringByAppendingNotificationDate:
mtStringByRemovingNotificationDate
mtStringByRemovingNotificationPrefixes
mtSynchronousResult:
mtTimeIntervalSinceComponents:
mtTimeIntervalSinceComponents:now:
mtTimeOnlyFormatter
mtType
mtURLForClockAppSection:
mtURLForClockAppSection:timerManager:
mtUserActivityWithActivityType:title:
mtUserActivityWithActivityType:title:keywords:
mt_Description
mt_deleteDonationsForAlarm:completion:
mt_initWithAlarm:verb:
mt_intentForAlarmCreate:
mt_intentForAlarmDisable:
mt_intentForAlarmEnable:
mt_intentForAlarmUpdate:
mt_nanoAlarmBundleIDForAlarm:
mutableCopy
mutableCopyWithZone:
na_dictionaryByMappingValues:
na_dictionaryWithKeyGenerator:
na_each:
na_filter:
na_firstObjectPassingTest:
na_safeAddObjectsFromArray:
na_safeSetObject:forKey:
name
needsAdditionalProcessing
needsUpdate
needsValue
networkUsageChanged:
nextAlarm
nextAlarmChanged:
nextAlarmInHoursThreshold:
nextAlarmIncludingBedtimeNotification:
nextAlarmSync
nextAlarms
nextAlarmsForDate:maxCount:
nextAlarmsForDate:maxCount:includeBedtimeNotification:
nextAlarmsForDate:maxCount:includeSleepAlarm:
nextAlarmsForDate:maxCount:includeSleepAlarm:includeBedtimeNotification:
nextAlarmsForDateSync:maxCount:includeBedtimeNotification:
nextAlarmsForDateSync:maxCount:includeSleepAlarm:
nextAlarmsForDateSync:maxCount:includeSleepAlarm:includeBedtimeNotification:
nextAlarmsInRange:maxCount:includeSleepAlarm:
nextAlarmsInRange:maxCount:includeSleepAlarm:includeBedtimeNotification:
nextAlarmsInRangeSync:maxCount:includeSleepAlarm:
nextAlarmsInRangeSync:maxCount:includeSleepAlarm:includeBedtimeNotification:
nextDateAfterDate:matchingComponents:options:
nextDateAfterDate:matchingUnit:value:options:
nextExpectedBedtimeDateAfterDate:
nextExpectedRefreshDate
nextExpectedWakeUpDateAfterDate:
nextFireDate
nextFireDateAfterDate:
nextFireDateAfterDate:includeBedtimeNotification:
nextFutureAlarmDate
nextScheduledAlarmIncludingBedtimeNotification:
nextScheduledAlert
nextScheduledAlertOrNotification
nextScheduledObject
nextScheduledObjectWithTriggerType:
nextSleepAlarm
nextSleepAlarmWithCompletion:
nextSleepModeEndDate
nextSleepModeEndDateAfterDate:
nextSleepModeStartDate
nextSleepModeStartDateAfterDate:
nextTimer
nextTimerChanged:
nextTimerDidChange:
nextTimersForDate:maxCount:
nextTrigger
nextTriggerAfterDate:
nextTriggerAfterDate:includeBedtimeNotification:
nextTriggerAfterDate:includeSnooze:includeBedtimeNotification:
nextTriggerAfterDate:ofType:
nextTriggerDateIncludingBedtimeNotification:
nextTriggersAfterDate:
nextTriggersAfterDate:includeBedtime:
nextTriggersAfterDate:inclusionOptions:
nextWidgetAlarmInThreshold
normalizedTimeString:state:
notRequired
notification
notificationCategories
notificationCenter
notificationCenters
notificationManager
notificationObject
notificationPrefixes
notificationWithType:name:
notificationWithType:name:powerAssertionTimeout:
notifications
notifyObserversForSleepAlarmChange:
notifyObserversForSleepAlarmChangeIfNecessary:
notifyObserversWithBlock:
notifyToken
nowDateForOffsetCalculation
npsManager
null
numberFromString:
numberOfAlarms
numberOfScheduledAlerts
numberOfScheduledAlertsAndNotifications
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
objectAtIndex:
objectAtIndexedSubscript:
objectEnumerator
objectForKey:
objectForKey:defaultValue:
objectForKeyedSubscript:
objectIdentifier
objectsAtIndexes:
observeLaunchProhibitedApps
observedApplicationDidInstallForBundleIdentifier:
observedApplicationDidUninstallForBundleIdentifier:
observerQueue
observers
observersForBundleID
observersLock
observing
occurrences
offState
onStateWithSleepModeEndDate:
onboardingVersion
operatingSystemVersionString
operation
orderedAlarms
orderedScheduledAlerts
orderedScheduledEvents
orderedScheduledNotifications
orderedTimers
originalValue
overriddenForDate
overridesAlarm:trigger:calendar:
overridesNextAlarm:date:calendar:
overridesScheduledObject:calendar:
pairedDevice
pairedDeviceVersion
path
pauseCurrentTimer
pauseCurrentTimerSync
pauseMultiple
pauseSessionWithTimeRemainingString:remainingPortion:
pauseTimer
pendingChanges
pendingChangesSent:
performBlock:
performBlockOnAllClients:
performBlockOnAllClients:excludingClient:
performBlockOnAllClients:excludingCurrent:
performBlockOnClientInfos:excludeCurrent:
performBlockOnCurrentClient:
performBlockOnceChangesAreLoaded:async:
performCancelableBlock:
performRemoteBlock:
performRemoteBlock:withErrorHandler:
performRemoteBlock:withErrorHandler:isSynchronous:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performSyncBlock:
persistChanges
persistence
persistentStoreForDataModel:
platformSpecificSourceBundleIdentifier
playOptions
playOptionsForOccurrence:
playWithCompletionHandler:
playsOnThisDevice
pluginsDidInstall:
pluginsDidUninstall:
pluginsWillUninstall:
pmString
postBedtimeNotificationForAlarm:date:
postNotificationForAlarmActiveChanged
postNotificationForScheduledAlarm:completionBlock:
postNotificationForScheduledAlarm:content:completionBlock:
postNotificationForScheduledTimer:completionBlock:
postNotificationForUserPreferences:localNotifications:
postNotificationName:object:
postNotificationName:object:userInfo:
postNotificationName:object:userInfo:deliverImmediately:
postNotificationWithIdentifier:title:message:defaultButtonTitle:otherButtonTitle:bypassDND:handler:
powerAssertion
preferred:
prepareAlarms
prepareEditingProxy
previewWithCompletionHandler:
printDiagnostics
processID
processIdentifier
processInfo
processName
processTimerUpdate:
processedChanges
processedSessionForSession:
properties
propertiesAffectingBedtime
propertiesAffectingSnooze
propertiesAffectingSync
propertiesAffectingWaketime
property
protocol
protocolForProtocol:
provideAlarmOptionsCollectionForToggleAlarm:withCompletion:
provideAlarmOptionsForToggleAlarm:withCompletion:
provideRepeatScheduleOptionsCollectionForMTCreateAlarm:withCompletion:
provideRepeatScheduleOptionsForMTCreateAlarm:withCompletion:
providerWithConnectionInfo:errorHandler:
providerWithConnectionInfo:reconnectHandler:
purged
pushAlertsEnabled
queue
rangeOfString:
rangeOfString:options:
readFrom:
readyIntentResponseWithState:
reason
receivingSession
reconnect
reconnectHandler
recover:
refreshActiveState
refreshManagersForPreferences:localNotifications:
registerActionHandler:
registerForNotifications
registerListener:
registerNotification:observer:
registerObserver:
relayFrameworkNotification:
releaseAssertion
reloadAlarmWidgetTimeline
reloadAlarms
reloadAlarmsNotifyObservers:
reloadTimeline
reloadTimelineWithReason:
reloadTimer
remainingTime
remoteObjectInterface
remoteObjectProxyWithErrorHandler:
remoteProcess
remoteTargetWithLaunchingAssertionAttributes:
removeAlarm:
removeAlarm:withCompletion:
removeAlarm:withCompletion:source:
removeAlarmWithIdentifier:withCompletion:source:
removeAllAlarmsForSource:
removeAllObjects
removeAllPendingNotificationRequests
removeAssertionUpdateListener:
removeCity:
removeCityAtIndex:
removeClientConnection:
removeDeliveredNotificationsWithIdentifiers:
removeFromOldStorage
removeItemAtPath:error:
removeLastObject
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectsInArray:
removeObserver:name:object:
removeObserver:wasLast:
removePendingChanges
removeSensitiveUIObserver:
removeTimer:
removeTimer:withCompletion:
removeTimer:withCompletion:source:
repeatDays
repeatSchedule
repeatScheduleFromOldAlarm:
repeatTimerWithIdentifier:
repeatTimerWithIdentifier:withCompletion:
repeatTimerWithIdentifier:withCompletion:source:
replaceObjectAtIndex:withObject:
requestDescription
requestIdentifierForScheduledAlarm:
requestSync:
requestType
requestWithIdentifier:content:trigger:destinations:
requestWithType:
requiredEntitlement
requiresAppLaunch
reschedule:
rescheduleTimers
resendTimerDataEntry
reset
resetDataStore
resetDataStoreForSyncSession:completion:
resetMultiple
resetSleepAlarmSnoozeState
resetSleepAlarmSnoozeStateWithCompletion:
resetSnoozeFireDate
resetSystemTimeZone
resolutionResultUnsupportedWithReason:
resolveAlarmForToggleAlarm:withCompletion:
resolveChange:
resolveDateComponentsForMTCreateAlarm:withCompletion:
resolveDeleteMultipleForDeleteTimer:withCompletion:
resolveDurationForCreateTimer:withCompletion:
resolveDurationForSearchForTimers:withCompletion:
resolveLabelForCreateTimer:withCompletion:
resolveLabelForMTCreateAlarm:withCompletion:
resolveLabelForSearchForTimers:withCompletion:
resolveOperationForToggleAlarm:withCompletion:
resolvePauseMultipleForPauseTimer:withCompletion:
resolveRepeatScheduleForMTCreateAlarm:withCompletion:
resolveResetMultipleForResetTimer:withCompletion:
resolveResumeMultipleForResumeTimer:withCompletion:
resolveStateForSearchForTimers:withCompletion:
resolveStateForToggleAlarm:withCompletion:
resolveTargetTimerForDeleteTimer:withCompletion:
resolveTargetTimerForPauseTimer:withCompletion:
resolveTargetTimerForResetTimer:withCompletion:
resolveTargetTimerForResumeTimer:withCompletion:
resolveTargetTimerForSetTimerAttribute:withCompletion:
resolveToDurationForSetTimerAttribute:withCompletion:
resolveToLabelForSetTimerAttribute:withCompletion:
resolveTypeForCreateTimer:withCompletion:
resolveTypeForSearchForTimers:withCompletion:
respondsToSelector:
restoreDidFinish
restoreDoneHandled
resume
resumeCurrentTimer
resumeCurrentTimerSync
resumeMultiple
resumeTimer
retain
retainCount
retryTimer
reverseObjectEnumerator
revision
rowForAlarm:
rowForAlarmWithID:
sampleType
saveAndNotifyForUserPreferences:localNotifications:
saveCities
saveObjects:error:
schedule:afterDate:withCompletion:
scheduleActivityWithCriteria:activityHandler:
scheduleActivityWithCriteria:activityHandler:performImmediately:
scheduleOverridenForDate:
scheduleSnapshot
scheduleTask:
scheduleTaskGroup:
scheduleTimerForSeconds:
scheduleable
scheduledAlertMap
scheduledListDidChange:withCompletion:
scheduledNotifications
scheduledObjectForScheduleable:trigger:
scheduledObjects
scheduledObjectsToFireBeforeDate:
scheduledObjectsToFireInInterval:
scheduledTypeForTriggerType:
scheduler
scheduler:didChangeNextAlarm:
scheduler:didChangeNextTimer:
scheduler:didFireAlarm:
scheduler:didFireTimer:
schedulerWithDispatchQueue:
schedulingDelegate
scheme
secondsFromGMTForDate:
self
sendCriticalEvent:
sendEvent:
sendingSession
sensitiveUIStateChanged
sequencer
serialDispatchQueueSchedulerWithName:
serialQueue
serialSchedulerForObject:
serialSchedulerWithName:
serialize
serializeWithSerializer:
serializer
server
service:didSwitchFromPairingID:toPairingID:
service:encounteredError:context:
service:incomingData:completion:
service:incomingStream:metadata:completion:
service:receivingSessionEnded:error:
service:sendingSessionEnded:error:
service:sessionEnded:error:
service:startReceivingSession:error:
service:startSendingSession:error:
service:startSession:error:
service:targetDeviceConnectionChanged:
service:targetDeviceProximityChanged:
service:willPreferSession:overSession:
service:willSwitchFromPairingID:toPairingID:
serviceDidPairDevice:
serviceDidUnpairDevice:
serviceForClientIdentifier:
sessionClass
sessionDescription
setAbbreviation:
setActionHandler:
setActivationHandler:
setAlarm:
setAlarmID:
setAlarmIDURL:
setAlarmIntentDonor:
setAlarmLock:
setAlarmManager:
setAlarmProperties:
setAlarmScheduler:
setAlarmSnapshot:
setAlarmSoundVolume:
setAlarmStorage:
setAlarmSyncDataModel:
setAlarmTimeoutScheduler:
setAlarms:
setAlertTopic:
setAllAlarms:sleepAlarms:source:
setAllTimers:source:
setAllowedUnits:
setAllowsSnooze:
setApplicationWorkspace:
setArchivedSessionDataFile:
setArchivedSessionDataPath:
setAssertionService:
setAwakeState:
setBackoffFactor:
setBedtimeDismissedAction:
setBedtimeDismissedDate:
setBedtimeFiredDate:
setBedtimeMinute:
setBedtimeReminder:
setBedtimeReminderMinutes:
setBedtimeSnoozeFireDate:
setBlock:
setBody:
setBool:forKey:notification:
setBypassReloadDate:
setCache:
setCacheLock:
setCachedSleepAlarm:
setCalendar:
setCallbackScheduler:
setCategoryIdentifier:
setChangeDictionary:
setChangedProperties:
setChangedValue:
setChanges:
setChangesLoaded:
setCities:
setCityName:
setClasses:forSelector:argumentIndex:ofReply:
setClient:
setClientLink:
setClientMessagingExpectation:
setClients:
setCode:
setCompletableBlock:
setCompleted:
setCompletionBlock:
setCompletionBlocks:
setConnectedDate:
setConnection:
setConnectionListener:
setConnectionQueue:
setCoreDuetMonitor:
setCreatedTimer:
setCurrentBackoff:
setCurrentDateProvider:
setCurrentState:
setCurrentToneIdentifier:forAlertType:topic:
setCurrentVibrationIdentifier:forAlertType:topic:
setDate:
setDateComponents:
setDateFormat:
setDateStyle:
setDaySetting:
setDefaultActionURL:
setDefaultCitiesAdded:
setDefaultDuration:
setDefaultSound:
setDefaultSound:forCategory:
setDefaults:
setDelay:
setDelegate:
setDelegate:queue:
setDeletedTimers:
setDisabledState:
setDismissAction:
setDismissedAction:
setDismissedDate:
setDoesRelativeDateFormatting:
setDuration:
setEligibleForHandoff:
setEligibleForPublicIndexing:
setEligibleForSearch:
setEnabled:
setEndDate:
setEndReason:
setError:
setErrorHandler:
setEventName:
setExpirationDate:
setExportedInterface:
setExportedObject:
setExportedObjectInterface:
setFeatureStore:
setFireDate:
setFireTime:
setFiredDate:
setFiring:
setFloat:forKey:
setFloat:forKey:notification:
setForPreview:
setForceActiveForMigration:
setFormattingContext:
setGroupIdentifier:
setHandler:
setHasAllowsSnooze:
setHasBedtimeDismissedAction:
setHasBedtimeDismissedDate:
setHasBedtimeFiredDate:
setHasBedtimeHour:
setHasBedtimeMinute:
setHasBedtimeReminderMinutes:
setHasBedtimeSnoozeFireDate:
setHasChangesAvailable
setHasDaySetting:
setHasDismissedAction:
setHasDismissedDate:
setHasFiredDate:
setHasHour:
setHasIsEnabled:
setHasIsSleepAlarm:
setHasKeepOffUntilDate:
setHasLastModifiedDate:
setHasMediaID:
setHasMinute:
setHasOnboardingVersion:
setHasPlayOptions:
setHasSleepMode:
setHasSleepModeOptions:
setHasSleepSchedule:
setHasSleepTracking:
setHasSnoozeFireDate:
setHasSoundVolume:
setHasTimeInBedTracking:
setHideSensitiveUI:
setHour:
setIdentifier:
setInfo:
setInfoProvider:
setInteger:forKey:
setInterface:
setInterfaceTarget:
setInternalHasBeenUnlockedSinceBoot:
setInterruptionHandler:
setIntervals:
setInvalidationHandler:
setIsEnabled:
setIsHorseman:
setIsSleepAlarm:
setKeepOffUntilDate:
setKeywords:
setLabel:
setLanguageChangeListener:
setLastIndex:
setLastLifecycleNotification:
setLastModified:
setLastModifiedDate:
setLastReloadRequestDate:
setLatitude:
setLaunchDate:
setLifecycleNotification:
setListPriority:
setListeners:
setLoaded:
setLocale:
setLocalizedDateFormatFromTemplate:
setLock:
setLongditude:
setMachServiceName:
setMatchedTimers:
setMaximumDuration:
setMediaID:
setMetadata:
setMetrics:
setMigrator:
setMinute:
setMonth:
setName:
setNeedPrefsUpdate:
setNeedsAdditionalProcessing:
setNextAlarm:
setNextAlarms:
setNextTimer:
setNotification:
setNotificationCategories:
setNotificationCenter:
setNotificationCenters:
setNotificationManager:
setNotifications:
setNpsManager:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKey:notification:
setObject:forKeyedSubscript:
setObserverQueue:
setObservers:
setObserversForBundleID:
setObserversLock:
setObserving:
setOnboardingVersion:
setOperation:
setOptions:
setOrderedAlarms:
setOrderedScheduledAlerts:
setOrderedScheduledEvents:
setOrderedScheduledNotifications:
setOrderedTimers:
setOriginalValue:
setOverriddenDate:
setOverriddenForDate:
setPairedDevice:
setPausedTimers:
setPendingChanges:
setPendingRequests:
setPositiveFormat:
setPowerAssertion:
setProcessedChanges:
setProperty:
setPurged:
setQueue:
setReceivingSession:
setReconnectHandler:
setRefreshManagers:
setRemoteObjectInterface:
setRepeatSchedule:
setRequest:
setRequiredEntitlement:
setRestoreDoneHandled:
setResumedTimers:
setRetryTimer:
setRevision:
setScheduleable:
setScheduledAlertMap:
setScheduledNotifications:
setScheduler:
setSecond:
setSendingSession:
setSerializer:
setSerializerQueue:
setServer:
setService:
setServiceQuality:
setSession:
setSessionsManager:
setShouldBackgroundDefaultAction:
setShouldIgnoreDoNotDisturb:
setShouldIgnoreRingerSwitch:
setShouldPreemptPresentedNotification:
setShouldPreventNotificationDismissalAfterDefaultAction:
setShouldRepeat:
setSleepAlarm:
setSleepCoordinator:
setSleepEnabled:
setSleepMode:
setSleepModeMonitor:
setSleepModeOptions:
setSleepSchedule:
setSleepSessionManager:
setSleepSessionTracker:
setSleepStateResolved:
setSleepStore:
setSleepStoreProvider:
setSleepTracking:
setSnoozeAction:
setSnoozeDate:
setSnoozeFireDate:
setSound:
setSound:ofType:
setSoundType:
setSourceBundleIdentifier:
setStack:
setStartDate:
setStarted:
setState:
setStateMachine:
setStorage:
setSyncChangeQueue:
setSyncDataFile:
setSyncDataModel:
setSyncDataPath:
setSyncDate:
setSyncID:
setSyncServiceManager:
setSyncStatusProvider:
setSyncStatusProviderDelegate:
setSystemStateListener:
setTasks:
setTimeInBedTracking:
setTimeInterval:forKey:
setTimeInterval:forKey:notification:
setTimeListener:
setTimeStyle:
setTimeZone:
setTimeZoneName:
setTimer:
setTimerIntentDonor:
setTimerManager:
setTimerManagerProvider:
setTimerScheduler:
setTimerSessionsCoordinator:
setTimerSnapshot:
setTimerStorage:
setTitle:
setToneID:
setToneIdentifier:
setToneMediaLibraryItemIdentifier:
setTopic:
setTrigger:
setType:
setUnitsStyle:
setUnmatchedTimers:
setUpdateHandler:
setUpdatedTimer:
setUserActivity:
setUserDefaults:
setUserInfo:
setUserVisibleEndDate:
setValue:
setValue:forKey:
setVibeID:
setVibrationIdentifier:
setWantsNotificationResponsesDelivered
setWeekday:
setWeekdayOrdinal:
setWidgetProvider:
setWithArray:
setWithObject:
setWithSet:
setWorkScheduler:
setYear:
settings
setupInterface
setupListeners
setupNotificationCenter
setupSyncDataFileForDataModel:
sharedDeviceListener
sharedInstance
sharedListener
sharedManager
sharedManagerWithPreferences:
sharedMonitor
sharedRelay
sharedToneManager
sharedUserDefaults
sharedVibrationManager
sharedWorkspaceObserver
shouldBeScheduled
shouldBypassWidgetReload
shouldHideForSensitivity:
shouldRetryForError:
shouldScheduleSnapshotForAlarms:
singleTimeOverrideDateInCalendar:
siriContext
sleepAlarm
sleepAlarmSync
sleepAlarmWasDismissedOnDate:source:completion:
sleepAlarmWasModifiedFromSource:completion:
sleepAlarmWasSnoozedUntilDate:source:completion:
sleepAlarmWithHour:minute:
sleepAlarmWithHour:minute:bedtimeHour:bedtimeMinute:
sleepAlarmWithHour:minute:year:month:day:bedtimeHour:bedtimeMinute:
sleepAlarmWithId:
sleepAlarmWithSchedule:
sleepAlarms
sleepCoordinator
sleepCoordinator:bedtimeReminderDidFire:sleepAlarm:
sleepCoordinator:bedtimeReminderWasConfirmed:sleepAlarm:
sleepCoordinator:bedtimeReminderWasSnoozed:sleepAlarm:
sleepCoordinator:bedtimeWasReached:sleepAlarm:
sleepCoordinator:sleepAlarmDidChange:
sleepCoordinator:sleepModeManuallyExited:sleepAlarm:
sleepCoordinator:sleepSessionEnded:reason:sleepAlarm:
sleepCoordinator:userWentToBed:sleepAlarm:
sleepCoordinator:userWokeUp:sleepAlarm:
sleepCoordinator:wakeUpAlarmDidFire:sleepAlarm:
sleepCoordinator:wakeUpAlarmWasDismissed:dismissAction:sleepAlarm:
sleepCoordinator:wakeUpAlarmWasSnoozed:sleepAlarm:
sleepCoordinator:waketimeWasReached:sleepAlarm:
sleepDuration
sleepDurationSeconds
sleepEnabled
sleepEventRecord
sleepManager
sleepMode
sleepMode:
sleepModeEnabled:userRequested:date:
sleepModeEndDate
sleepModeMonitor
sleepModeOptions
sleepModeTimeoutMinutes
sleepSampleWithInterval:sampleType:metadata:
sleepSchedule
sleepScheduleModelWithError:
sleepScheduleString:
sleepSessionManager
sleepSessionTracker
sleepSessionTracker:sessionDidComplete:
sleepSessionTrackerDelegate
sleepStateResolved
sleepStore
sleepStore:sleepEventDidOccur:
sleepStore:sleepModeOnDidChange:
sleepStore:sleepScheduleDidChange:
sleepStore:sleepScheduleStateDidChange:
sleepStore:sleepSettingsDidChange:
sleepStoreProvider
sleepTimeOutMinutes
sleepTimersWithState:
sleepTracking
snoozeAction
snoozeAlarmWithIdentifier:
snoozeAlarmWithIdentifier:snoozeAction:
snoozeAlarmWithIdentifier:snoozeAction:withCompletion:
snoozeAlarmWithIdentifier:snoozeAction:withCompletion:source:
snoozeAlarmWithIdentifier:snoozeDate:snoozeAction:withCompletion:source:
snoozeDate
snoozeFireDate
songSoundWithIdentifier:vibrationIdentifier:volume:
sortUsingComparator:
sortUsingSelector:
sortedArrayUsingComparator:
sound
soundByUpdatingVibrationIdentifier:
soundByUpdatingVolume:
soundFromOldAlarm:
soundType
soundVolume
soundWithAlertType:
source
source:didAddAlarms:
source:didAddTimers:
source:didChangeNextAlarm:
source:didDismissAlarm:dismissAction:
source:didDismissTimer:
source:didFireAlarm:triggerType:
source:didFireTimer:
source:didRemoveAlarms:
source:didRemoveTimers:
source:didSnoozeAlarm:snoozeAction:
source:didUpdateAlarms:
source:didUpdateTimers:
sourceIdentifier
spokenPhrase
springboardStartMonitor:didReceiveStarted:
stack
standardUserDefaults
start
startCurrentTimerWithDuration:
startCurrentTimerWithDurationSync:
startDate
startListening
startOfDayForDate:
startSession
startSessionWithEstimatedEndDate:duartion:
startSyncService
startSyncServices
startTimer:block:
state
stateChangeIsAllowableFromState:toState:
stateKey
stateMachine
stateMachine:disengageSleepModeUserRequested:
stateMachine:dismissWakeUpAlarm:dismissAction:
stateMachine:engageSleepModeUntilDate:userEngaged:
stateMachine:keepSleepModeOffUntilDate:
stateMachine:scheduleUpdateForSecondsFromNow:
stateMachine:shouldScheduleAlarmTimeoutForSecondsFromNow:
stateMachineClearKeepSleepModeOff:
stateMachineName
stateMachineUserWentToBed:
stateMachineUserWokeUp:
stop
stopCurrentTimer
stopCurrentTimerSync
stopListening
stopSession
stopSyncServices
stopTimer
string
stringByAppendingFormat:
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:
stringFromDate:withRelativeToTimeZone:
stringFromDateComponents:
stringFromNumber:
stringValue
stringWithCString:encoding:
stringWithFormat:
stringWithUTF8String:
subarrayWithRange:
submitEvent:eventParameters:
substringFromIndex:
successIntentResponseWithAlarms:
successIntentResponseWithState:alarm:
successWithResolvedAlarm:
successWithResolvedAlarmOperation:
successWithResolvedAlarmState:
successWithResolvedDateComponents:
successWithResolvedMTCity:
successWithResolvedMTWorldClock:
successWithResolvedObject:
successWithResolvedRepeatDay:
successWithResolvedString:
successWithResolvedTimeInterval:
successWithResolvedTimer:
successWithResolvedTimerType:
successWithResolvedValue:
succinctDescription
succinctDescriptionBuilder
superclass
supportsCapability:
supportsSecureCoding
supportsSessions
syncChange:
syncDataFile
syncDataModel
syncDataPath
syncDate
syncDismissOfObjectWithIdentifier:dismissDate:date:
syncDismissOfObjectWithIdentifier:dismissDate:date:version:
syncID
syncIdentifier
syncMetrics
syncService
syncServiceManager
syncSession:applyChanges:completion:
syncSession:didEndWithError:
syncSession:enqueueChanges:error:
syncSession:resetDataStoreWithError:
syncSession:restartChanges:
syncSession:rollbackChangesWithError:
syncSnoozeOfObjectWithIdentifier:snoozeDate:date:
syncSnoozeOfObjectWithIdentifier:snoozeDate:date:version:
syncStatus
syncStatusProvider
syncStatusProvider:didChangeSyncStatus:
syncStatusProviderDelegate
syncType
syncVersion
synchronize
synchronizeUserDefaultsDomain:keys:
synchronousRemoteObjectProxyWithErrorHandler:
systemReady
systemStateListener
systemTimeZone
takeAssertion
takeModeAssertionWithDetails:error:
targetTimer
taskGroupWithTasks:completionBlock:
taskScheduler
taskWithIdentifier:completableBlock:
taskWithIdentifier:delay:completableBlock:
tasks
tearDownNotificationsForEventIdentifiers:
time
timeComparator
timeDesignatorForDate:
timeInBedSessionWithStartDate:endDate:intervals:endReason:metadata:
timeInBedTracking
timeIntervalForKey:defaultValue:
timeIntervalForKey:exists:
timeIntervalForKey:isValid:defaultValue:
timeIntervalSinceDate:
timeIntervalSinceReferenceDate
timeListener
timeObject
timeZone
timeZoneAbbreviation
timeZoneDisplayName
timeZoneForOffsetCalculation
timeZoneForSecondsFromGMT:
timeZoneFromCities:
timeZoneName
timeZoneOffset
timeZoneOffsetFromGMT
timer
timerByRestarting
timerByUpdatingWithState:
timerFinished
timerFired:
timerIDString
timerIntentDonor
timerManager
timerManagerProvider
timerScheduler
timerServer
timerSessionsCoordinator
timerSnapshot
timerStorage
timerURL
timerWithInitialTime:backoffFactor:fireBlock:
timerWithInitialTime:backoffFactor:fireBlock:queue:
timers
timersAdded:
timersRemoved:
timersSync
timersUpdated:
title
toDuration
toneID
toneIdentifier
toneMediaLibraryItemIdentifier
toneSoundWithIdentifier:vibrationIdentifer:volume:
transaction
transactionWithDescription:
transactionWithDescription:timeout:
transactionWithDescription:timeout:timeoutBlock:
transferMetadataForSleepAlarm:fromPrevious:
triggerDate
triggerType
triggerWithDate:triggerType:
triggerWithDate:triggerType:isPastOverrideEvent:
type
unSoundForCategory:
unionSet:
unlocalizedCityName
unlocalizedCountryName
unlocalizedExampleCity
unregisterForNotifications
unregisterNotification:observer:
unregisterObserver:
unschedule:
unscheduleActivity
unscheduleAlarms:
unscheduleTimers:
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unspecifiedIntentResponseWithState:
unsupported
unsupportedForReason:
upcomingScheduleOccurrenceAfterDate:error:
upcomingTriggersAfterDate:
updateALDataWithCity:
updateActiveDeviceInfo
updateAlarm:
updateAlarm:reload:
updateAlarm:withCompletion:
updateAlarm:withCompletion:source:
updateAlarmCaches:
updateAlarmWithIdentifier:changeSet:withCompletion:source:
updateBlock
updateEnableStateForAlarm:enabled:
updateHandler
updateLastModifiedDateForAlarms:
updateModeKeepOffUntilDateIfNecessary
updateMonitorState
updatePreview:
updateSleepAlarms
updateSleepAlarms:source:
updateSleepAlarmsWithBlock:source:
updateSleepAlarmsWithCompletion:
updateSleepState
updateState
updateState:
updateStateForNextAlarm:
updateStateForSleepAlarm:
updateTimer:
updateTimer:withCompletion:
updateTimer:withCompletion:source:
updateTimerWithState:
updatedDataForCityWithID:
updatedTimezoneForCityWithID:
use24HourTime
userBedTimeReached:
userContext
userDefaults
userDisengagedSleepMode
userDisengagedSleepModeOnDate:
userInfo
userInfoForAlarm:
userInfoForTimer:
userInitiated
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userRequestedOffStateWithKeepOffUntilDate:
userWakeTimeReached:
userWakeUpAlarmFired
userWentToBed
userWokeUp
value
valueForEntitlement:
valueForKey:
valueForProperty:
verifyDaySetting:withMessageList:
verifyHourSetting:withMessageList:
verifyIdSetting:withMessageList:
verifyMinuteSetting:withMessageList:
vibeID
vibrationID
vibrationIdentifier
waitForUnlock
waitingState
wakeUpAlarmTimedOut
wakeUpComponents
wakeUpConfirmedUntilDate
warmUp
watchSleepFeaturesEnabled
weakObjectsHashTable
weekdays
widget
widgetConfigurations
widgetOverrideDate
widgetProvider
widgetURL
willEnterWithPreviousState:
willExitWithNextState:
workScheduler
worldClockCityFromPersistenceArray:
worldClockCityFromPersistenceDictionary:
worldClockCityFromPersistenceRepresentation:
writeAlarmEventToBiome:ofType:
writeAlarmToKnowledgeStore:alarmEvent:
writeAlarmUpdatedEventForAlarms:
writeSession:
writeTo:
writeToFile:atomically:
xpcSchedulerWithEvent:
year
zone
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v32@0:8@"INPauseTimerIntent"16@?<v@?@"INPauseTimerIntentResponse">24
v32@0:8@"INPauseTimerIntent"16@?<v@?@"INTimerResolutionResult">24
v32@0:8@"INPauseTimerIntent"16@?<v@?@"INBooleanResolutionResult">24
v32@0:8@"INResumeTimerIntent"16@?<v@?@"INResumeTimerIntentResponse">24
v32@0:8@"INResumeTimerIntent"16@?<v@?@"INTimerResolutionResult">24
v32@0:8@"INResumeTimerIntent"16@?<v@?@"INBooleanResolutionResult">24
v36@0:8@16B24@?28
@44@0:8@16@24@32B40
@56@0:8@16@24@32Q40@48
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
q16@0:8
@"NSDate"16@0:8
@"NSArray"16@0:8
@"NSDictionary"16@0:8
v20@0:8B16
v24@0:8Q16
v16@0:8
@"NSDate"
@"NSArray"
@"NSDictionary"
@"PBCodable"16@0:8
@24@0:8@"PBCodable"16
v24@0:8@"<MTSerializer>"16
@24@0:8@"<MTSerializer>"16
B32@0:8@16@24
@?16@0:8
@24@0:8q16
q24@0:8@16
v20@0:8I16
v24@0:8q16
v32@0:8@16q24
I16@0:8
@"Alarm"
@"NSMutableDictionary"
@"NSString"
@"NSURL"
@"<AlarmDelegate>"
@40@0:8@16@24Q32
@72@0:8@16@24@32@40@48@56Q64
@"NSXPCInterface"
v32@0:8@"MTEnableAlarmIntent"16@?<v@?@"MTEnableAlarmIntentResponse">24
v32@0:8@"MTDisableAlarmIntent"16@?<v@?@"MTDisableAlarmIntentResponse">24
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"MTToggleAlarmIntentResponse">24
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"MTAlarmStateResolutionResult">24
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"MTIntentAlarmResolutionResult">24
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"INObjectCollection"@"NSError">24
@"MTIntentAlarm"24@0:8@"MTToggleAlarmIntent"16
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@16@24@?32
@28@0:8@16B24
B32@0:8@16q24
v40@0:8@16q24@?32
d32@0:8@16q24
B32@0:8@"NSString"16q24
v40@0:8@"NSString"16q24@?<v@?>32
d32@0:8@"NSString"16q24
v32@0:8@16@24
@?24@0:8@16
@32@0:8@16@?24
@24@0:8Q16
v32@0:8@?16@?24
@"<MTScheduledListDelegate>"
@"NSMutableOrderedSet"
@32@0:8@16@24
f24@0:8@16
v28@0:8f16@20
@24@0:8@"NSString"16
@32@0:8@"NSString"16@24
f24@0:8@"NSString"16
v32@0:8@16@"NSString"24
v28@0:8f16@"NSString"20
@32@0:8q16@24
v32@0:8@"MTTimerScheduler"16@"MTTimer"24
v32@0:8@"MTTimerScheduler"16@"MTScheduledObject"24
v24@0:8@"NSString"16
v24@0:8@?16
v40@0:8@16@?24@32
v24@0:8@"<MTTimerObserver>"16
v24@0:8@?<v@?@"NSArray"@"MTTimer"@"NSError">16
v40@0:8@"MTTimer"16@?<v@?@"NSError">24@"<MTSource>"32
v40@0:8@"NSString"16@?<v@?@"NSError">24@"<MTSource>"32
v32@0:8@"NSArray"16@"<MTSource>"24
@"MTTimer"16@0:8
@56@0:8@16@24@32@40@?48
v40@0:8@16@24B32B36
@40@0:8@16@?24@32
@"MTMetrics"
@"MTTimerScheduler"
@"NSMutableArray"
@"MTTimerMigrator"
@"<NAScheduler>"
@"MTObserverStore"
@"<MTPersistence>"
d16@0:8
@24@0:8^{_NSZone=}16
@"NSCoder"16@0:8
v28@0:8B16@20
v32@0:8q16@24
v28@0:8i16@20
v32@0:8d16@24
i24@0:8@16
d24@0:8@16
v40@0:8@16@24Q32
v32@0:8@"<MTSource>"16@"NSArray"24
v40@0:8@"<MTSource>"16@"MTAlarm"24Q32
v32@0:8@"<MTSource>"16@"MTAlarm"24
@"MTAlarmStorage"
v24@0:8@"<MTSyncable>"16
@56@0:8@16@24@?32@40@48
@"MTSyncServiceManager"
@"NSObject<OS_dispatch_queue>"
v24@0:8@"NSDate"16
B20@0:8B16
@"NRDevice"
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
@"UNUserNotificationCenter"
@"MTPBAlarmProperties"
@40@0:8@16@?24@?32
v36@0:8@?16@?24B32
@24@0:8@?16
@40@0:8@?16@?24@?32
{os_unfair_lock_s=I}16@0:8
@"NSXPCConnection"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"MTXPCConnectionInfo"
v24@0:8B16B20
@"NAFuture"16@0:8
@"NAFuture"24@0:8@"NSObject<MTTimerIntentSupport>"16
@"NAFuture"24@0:8Q16
v32@0:8@"DNDModeAssertionService"16@"DNDModeAssertion"24
v32@0:8@"DNDModeAssertionService"16@"DNDModeAssertionInvalidation"24
B24@0:8^B16
@"MTAlarm"16@0:8
B36@0:8@16@24B32
B28@0:8@16B24
v32@0:8@16d24
B36@0:8@"MTSleepModeStateMachine"16@"NSDate"24B32
B28@0:8@"MTSleepModeStateMachine"16B24
v32@0:8@"MTSleepModeStateMachine"16@"NSDate"24
v24@0:8@"MTSleepModeStateMachine"16
v32@0:8@"MTSleepModeStateMachine"16d24
v40@0:8@16@24@32
v48@0:8@16@24Q32@40
v40@0:8@"MTSleepCoordinator"16@"NSDate"24@"MTAlarm"32
v48@0:8@"MTSleepCoordinator"16@"NSDate"24Q32@"MTAlarm"40
v32@0:8@"MTSleepCoordinator"16@"MTAlarm"24
v32@0:8@"MTTimeListener"16@?<v@?>24
@40@0:8@16@24@?32
B32@0:8^B16^@24
B24@0:8^@16
@"<MTAlarmStorage>"
@"MTSleepCoordinator"
@"MTSleepModeStateMachine"
@"DNDModeAssertionService"
v28@0:8B16@?20
v32@0:8B16B20@24
v32@0:8B16B20@"NSDate"24
@"MTSleepModeStateMachineInitialState"
@"MTSleepModeStateMachineOffState"
@"MTSleepModeStateMachineWaitingState"
@32@0:8@16o^@24
@40@0:8@16@24o^@32
@"NSDateFormatter"
v32@0:8@16Q24
v32@0:8@"<MTSyncStatusProvider>"16Q24
v24@0:8@"NSArray"16
@"<MTSyncToken>"24@0:8Q16
@48@0:8@16@24@32@40
@56@0:8@16@24@32@40@48
@"<MTSyncService>"
@"<MTSyncStatusProvider>"
@"<MTSyncDataModel>"
@"MTSyncChangeQueue"
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"MTCreateAlarmIntentResponse">24
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"INStringResolutionResult">24
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"INDateComponentsResolutionResult">24
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"NSArray">24
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"INObjectCollection"@"NSError">24
@"NSArray"24@0:8@"MTCreateAlarmIntent"16
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSDate"16Q24
@"<MTSleepSessionTrackerDelegate>"16@0:8
v24@0:8@"<MTSleepSessionTrackerDelegate>"16
B24@0:8@"MTAlarm"16
@"<MTSleepSession>"24@0:8@"<MTSleepSession>"16
v20@0:8{os_unfair_lock_s=I}16
@"<MTSleepSessionTrackerDelegate>"
@"MTAlarm"
Q32@0:8@16@24
Q24@0:8@16
v48@0:8@16Q24@32@?40
@"MTTimerStorage"
v32@0:8@"MTUpdateAlarmIntent"16@?<v@?@"MTUpdateAlarmIntentResponse">24
v32@0:8@"MTAlarmScheduler"16@"MTScheduledObject"24
v48@0:8@16@24@?32@40
v32@0:8@?16@24
v48@0:8@16Q24@?32@40
v56@0:8@16@24Q32@?40@48
v24@0:8@"<MTAlarmObserver>"16
v24@0:8@?<v@?@"NSArray"@"NSArray"@"MTAlarm"@"NSError">16
v40@0:8@"MTAlarm"16@?<v@?@"NSError">24@"<MTSource>"32
v48@0:8@"NSString"16@"MTChangeSet"24@?<v@?@"NSError">32@"<MTSource>"40
v24@0:8@"<MTSource>"16
v40@0:8@"NSArray"16@"NSArray"24@"<MTSource>"32
v32@0:8@?<v@?@"MTMutableAlarm">16@"<MTSource>"24
v48@0:8@"NSString"16Q24@?<v@?@"NSError">32@"<MTSource>"40
v56@0:8@"NSString"16@"NSDate"24Q32@?<v@?@"NSError">40@"<MTSource>"48
v32@0:8@"NSString"16@?<v@?@"MTAlarm">24
v48@0:8@16@24@32B40B44
v52@0:8@16@24@32B40B44B48
v40@0:8@16Q24@32
@"MTAlarmScheduler"
@"MTAlarmMigrator"
v32@0:8@"INCreateTimerIntent"16@?<v@?@"INCreateTimerIntentResponse">24
v32@0:8@"INCreateTimerIntent"16@?<v@?@"INCreateTimerLabelResolutionResult">24
v32@0:8@"INCreateTimerIntent"16@?<v@?@"INTimeIntervalResolutionResult">24
v32@0:8@"INCreateTimerIntent"16@?<v@?@"INTimerTypeResolutionResult">24
B20@0:8I16
v24@0:8d16
v20@0:8f16
f16@0:8
{?="mediaID"b1"soundVolume"b1}
q24@0:8Q16
v32@0:8@"MTScheduledList"16@?<v@?>24
@72@0:8@16@24@32@40@48@56@?64
@20@0:8B16
@"<MTAlarmScheduleDelegate>"
@"MTScheduledList"
@"<MTNotificationCenter>"
@"<MTSchedulingDelegate>"
@"<MTTaskScheduler>"
@"MTPBAlarm"
Q24@0:8Q16
@"<MTScheduleable>"
@"MTTrigger"
@"NSArray"24@0:8@"NSDate"16
B32@0:8@"MTScheduledObject"16@"NSCalendar"24
@32@0:8d16@?24
@40@0:8d16Q24@?32
@48@0:8d16Q24@?32@40
@"NSObject<OS_dispatch_source>"
@"NSTimer"
@32@0:8@16q24
@40@0:8@16q24q32
@"NSData"24@0:8@"<SYChange>"16
@"<SYChange>"32@0:8@"NSData"16q24
@"NSData"24@0:8@"<SYObject>"16
@"<SYObject>"24@0:8@"NSData"16
@"NSData"32@0:8@"<SYChange>"16q24
@"<SYChange>"40@0:8@"NSData"16q24q32
@"<MTAgentDiagnosticDelegate>"
@32@0:8@16Q24
@"_CDClientContext"
@"_DKKnowledgeStore"
v32@0:8@"<MTSource>"16@"MTTimer"24
v24@0:8@"MTTimer"16
@"NSMutableSet"
v28@0:8@?16B24
v28@0:8@16B24
v32@0:8@"MTScheduledObject"16@?<v@?>24
v24@0:8@"MTAlarm"16
v24@0:8@"MTScheduledObject"16
v32@0:8@"MTAlarm"16Q24
v28@0:8@"MTAlarm"16B24
@"<MTSystemStateDelegate>"
@"<MTScheduler>"
v32@0:8Q16Q24
@"WorldClockPreferences"
v24@0:8@"MTSleepCoordinatorStateMachine"16
v40@0:8@"MTSleepCoordinatorStateMachine"16@"NSDate"24Q32
v32@0:8@"MTSleepCoordinatorStateMachine"16d24
@"MTSleepCoordinatorStateMachine"
@"NAFuture"
@"MTXPCScheduler"
@"MTSleepModeMonitor"
@32@0:8@16d24
@40@0:8@16d24@?32
@"NSObject<OS_os_transaction>"
v32@0:8@"INDeleteTimerIntent"16@?<v@?@"INDeleteTimerIntentResponse">24
v32@0:8@"INDeleteTimerIntent"16@?<v@?@"INTimerResolutionResult">24
v32@0:8@"INDeleteTimerIntent"16@?<v@?@"INBooleanResolutionResult">24
v40@0:8@16B24B28@?32
v32@0:8@"INSetTimerAttributeIntent"16@?<v@?@"INSetTimerAttributeIntentResponse">24
v32@0:8@"INSetTimerAttributeIntent"16@?<v@?@"INSetTimerAttributeTargetTimerResolutionResult">24
v32@0:8@"INSetTimerAttributeIntent"16@?<v@?@"INTimeIntervalResolutionResult">24
v32@0:8@"INSetTimerAttributeIntent"16@?<v@?@"INSpeakableStringResolutionResult">24
v52@0:8@16d24@32B40@?44
@"MTPBDismissAction"
@"MTPBSnoozeAction"
@40@0:8@16@24@32
@"NSNumber"
@44@0:8@16@24@32f40
@"<MTSyncableObject>"24@0:8@"<MTSyncableObject>"16
B24@0:8@"<MTSyncableObject>"16
@"MTAlarmManager"
@32@0:8Q16Q24
@32@0:8q16q24
@48@0:8q16q24q32q40
@72@0:8q16q24q32q40q48q56q64
Q20@0:8B16
B40@0:8@16q24@32
@"NSString"24@0:8@"NSString"16
@"BSDescriptionBuilder"24@0:8@"NSString"16
@"BSDescriptionBuilder"16@0:8
@40@0:8Q16Q24@?32
@32@0:8@16B24B28
B40@0:8@16@24@32
B24@0:8q16
@"NSUUID"
@"MTSound"
@40@0:8@16q24@32
v32@0:8@"<MTSleepSessionTracker>"16@"<MTSleepSession>"24
@"HKHealthStore"
@"<MTSleepSessionTracker>"
v36@0:8f16@20@28
f32@0:8@16^B24
v36@0:8B16@20@28
B32@0:8@16^B24
v40@0:8q16@24@32
q32@0:8@16^B24
q32@0:8@16q24
q40@0:8@16@?24q32
v40@0:8d16@24@32
d32@0:8@16^B24
d32@0:8@16d24
d40@0:8@16@?24d32
@"NSUserDefaults"
i16@0:8
v20@0:8i16
@36@0:8@16@24B32
@40@0:8@16Q24q32
@44@0:8@16Q24q32B40
d32@0:8@16@24
@20@0:8i16
@28@0:8i16@20
v24@0:8@?<v@?>16
@"<NACancelable>"24@0:8@?<v@?@"NACancelationToken">16
@"<NACancelable>"32@0:8d16@?<v@?>24
@24@0:8^@16
@24@0:8d16
@52@0:8@16q24@32B40B44B48
@64@0:8@16@24@32@40@48@56
@"ALCity"
@"NSSet"
v32@0:8@16B24B28
@"MTUserNotificationActionDispatcher"
@"MTTimer"
@32@0:8@16^B24
v32@0:8d16@?24
@"MTPowerAssertion"
v24@0:8@"MTTask"16
v24@0:8@"MTTaskGroup"16
@"MTGCDTimer"
@40@0:8q16@24d32
v32@0:8@"MTGetAlarmsIntent"16@?<v@?@"MTGetAlarmsIntentResponse">24
B24@0:8@"<MTTimerTime>"16
q24@0:8@"<MTTimerTime>"16
@"NSNotificationCenter"16@0:8
@32@0:8@?16@24
@40@0:8@?16@24@32
B24@0:8d16
B24@0:8Q16
@"MTTimerManagerExportedObject"
@"MTXPCConnectionProvider"
@"MTTimerCache"
@"NSNotificationCenter"
@"MTTimerManager"
v32@0:8@"INResetTimerIntent"16@?<v@?@"INResetTimerIntentResponse">24
v32@0:8@"INResetTimerIntent"16@?<v@?@"INTimerResolutionResult">24
v32@0:8@"INResetTimerIntent"16@?<v@?@"INBooleanResolutionResult">24
v32@0:8@16^B24
@"NSHashTable"
v36@0:8@16@?24B32
@48@0:8@16@24Q32@?40
@24@0:8B16B20
@36@0:8@16Q24B32
@40@0:8@16Q24B32B36
@44@0:8@16Q24B32B36B40
@36@0:8@16B24B28B32
@"MTAlarmManagerExportedObject"
@"MTAlarmCache"
v32@0:8@"NSDate"16@"NSNumber"24
v32@0:8@"NSString"16@"NSNumber"24
@32@0:8d16Q24
@"MTSessionsManager"
@"BSServiceConnection<BSServiceConnectionClient>"
v44@0:8@16B24@?28@?36
v60@0:8@16B24B28B32@?36@?44@?52
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INSearchForTimersIntentResponse">24
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INSpeakableStringResolutionResult">24
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INTimeIntervalResolutionResult">24
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INTimerStateResolutionResult">24
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INTimerTypeResolutionResult">24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
@"MTSleepManager"
@"MTAgentNotificationManager"
@"MTSystemStateListener"
@"MTLanguageChangeListener"
@"MTAgentDiagnosticListener"
@"MTTimeListener"
@"MTAlarmServer"
@"MTAlarmSnapshot"
@"MTTimerServer"
@"MTTimerSnapshot"
@"MTAlarmIntentDonor"
@"MTTimerIntentDonor"
@"MTCoreDuetMonitor"
@"MTWidgetProvider"
@"MTTimerSessionsCoordinator"
@"MTSleepSessionManager"
@"MTSleepSessionTracker"
@"MTAlarmSyncDataModel"
@"MTStateMachine"
@"MTStateMachineState"
@"<MTStateMachineDelegate>"
@"<MTStateMachineInfoProvider>"
@"NPSManager"
v32@0:8@"NSArray"16@"NSArray"24
@"LSApplicationWorkspace"
@"<MTTimerManagerIntentSupport>"16@0:8
@36@0:8@16B24@28
@"<MTTimerSchedulerDelegate>"
@"<MTTimerStorage>"
I40@0:8@16@?24^@32
B32@0:8@16^@24
I40@0:8@"SYSession"16@?<B@?@"<SYChange>">24^@32
v40@0:8@"SYSession"16@"NSArray"24@?<v@?B@"NSError">32
v32@0:8@"SYSession"16@"NSError"24
B32@0:8@"SYSession"16^@24
v32@0:8@"SYSession"16@?<v@?B@"NSError">24
v32@0:8@"SYSession"16@"NSSet"24
@"MTCompanionSyncRequest"
@"SYSession"
@"<MTSyncServiceDelegate>"
v40@0:8@16Q24@?32
v32@0:8@"MTAlarm"16@?<v@?@"NSError">24
v40@0:8@"NSString"16Q24@?<v@?@"NSError">32
v24@0:8@?<v@?@"MTAlarm"@"NSError">16
v24@0:8@?<v@?@"NSError">16
v32@0:8@"MTTimer"16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepSchedule"24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepSettings"24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepEvent"24
v32@0:8@"HKSPSleepStore"16Q24
v28@0:8@"HKSPSleepStore"16B24
@56@0:8@16@?24@?32@40@48
@"HKSPSleepStore"
@"HKSPFeatureAvailabilityStore"
@"<MTSyncStatusProviderDelegate>"16@0:8
v24@0:8@"<MTSyncStatusProviderDelegate>"16
@"<MTSyncStatusProviderDelegate>"
B32@0:8Q16Q24
@40@0:8Q16d24@?32
@32@0:8Q16d24
@"<MTTimerTime>"
@"MTXPCConnectionListenerProvider"
v44@0:8@16B24@28@?36
@48@0:8q16q24@32@40
@"<MTTimerManagerProviding>"
@"<MTTimerManagerIntentSupport>"
@"NSError"
^{__CFUserNotification=}16@0:8
v24@0:8^{__CFUserNotification=}16
@"MTOSTransaction"
^{__CFUserNotification=}
v68@0:8@16@24@32@40@48B56@?60
@"NSUUID"16@0:8
@"NSObject<OS_dispatch_group>"
@"<MTSyncChangeStore>"
B40@0:8@16@24^@32
v48@0:8@16@24@32@?40
B40@0:8@"SYService"16@"SYSession"24^@32
v40@0:8@"SYService"16@"SYSession"24@"NSError"32
v40@0:8@"SYService"16@"NSData"24@?<v@?B@"NSError">32
v48@0:8@"SYService"16@"NSInputStream"24@"NSDictionary"32@?<v@?B@"NSError">40
v40@0:8@"SYService"16@"NSError"24@"NSDictionary"32
@"SYSession"40@0:8@"SYService"16@"SYSession"24@"SYSession"32
v40@0:8@"SYService"16@"NSUUID"24@"NSUUID"32
v28@0:8@"SYService"16B24
v24@0:8@"SYService"16
@"<MTSyncServiceDelegate>"16@0:8
v24@0:8@"<MTSyncServiceDelegate>"16
@"SYService"
@"MTCompanionSyncSession"
@"MTExponentialBackOffTimer"
@"MTPBSound"
{?="bedtimeDismissedDate"b1"bedtimeFiredDate"b1"bedtimeSnoozeFireDate"b1"dismissedDate"b1"firedDate"b1"keepOffUntilDate"b1"lastModifiedDate"b1"snoozeFireDate"b1"bedtimeDismissedAction"b1"bedtimeHour"b1"bedtimeMinute"b1"bedtimeReminderMinutes"b1"daySetting"b1"dismissedAction"b1"hour"b1"minute"b1"onboardingVersion"b1"playOptions"b1"revision"b1"sleepModeOptions"b1"allowsSnooze"b1"isEnabled"b1"isSleepAlarm"b1"sleepMode"b1"sleepSchedule"b1"sleepTracking"b1"timeInBedTracking"b1}
@"MTSleepCoordinatorStateMachineAsleepState"
@"MTSleepCoordinatorStateMachineAwakeState"
@"MTSleepCoordinatorStateMachineDisabledState"
@33
@ff&@
,@ffF@
L@33S@
.:C
&/8AJS\enw
%s %@
%s Failed to %@ pause timer intent %@%@
%s Successfully %@ pause timer attribute intent %@ with response %@
%s Failed to %@ resume timer intent %@%@
%s Successfully %@ resume timer attribute intent %@ with response %@
exportedObject: %{public}@ must conform to protocol: %{public}@
%s intent:%@
%{public}@ alarm fetch returned alarms: %{public}@
%{public}@ found no alarm to enable
%{public}@ Alarm being modified: %{public}@. Enabled state from intent: %{public}@, current alarm enable state: %i
%{public}@ alarm state already matches intent state : %{public}@
%{public}@ Updating enable state to %i for alarm: %{public}@
%{public}@ error reading into widgets config: %{public}@
%{public}@ read widget intent ClocksIntent
%{public}@ read widget intent ClocksSingleIntent
%{public}@ read clock widget timezones: %{public}@
%{public}@ reloading widget timeline
mobiletimerd - System language changed, terminating daemon
Initializing %{public}@
%{public}@ loading timers
%{public}@ migration needed
%{public}@ migrated timer is %{public}@
%{public}@ no timer created during migration.
%{public}@ has no timers
%{public}@ binary data storage version detected.  Using old reader.
%{public}@ unexpected error reading data %{public}@
%{public}@ loaded %{public}@
%{public}@ setting all timers %{public}@
%{public}@ setting all timers
%{public}@ received request for timers
%{public}@ returning timers: %{public}@, next timer: %{public}@
%{public}@ adding timer %{public}@
MTTimerStorage - Adding Timer
%{public}@ updating timer %{public}@
MTTimerStorage - Updating Timer
%{public}@ removing timer %{public}@
MTTimerStorage - Removing Timer
%{public}@ dismissing timer with ID %{public}@
MTTimerStorage - Dismissing Timer
%{public}@ repeating timer with ID %{public}@
MTTimerStorage - Repeating Timer
Timer already exists
MTTimerStorage - Failed Adding Timer
MTTimerStorage - Finished Adding Timer
MTTimerStorage - Finished Updating Timer
MTTimerStorage - Failed Updating Timer
%{public}@
MTTimerStorage - Finished Removing Timer
Timer doesn't exist
MTTimerStorage - Failed Removing Timer
Dismissed timer %{public}@ at %{public}@
MTTimerStorage - Finished Dismissing Timer
%{public}@ couldn't find matching timer to dismiss for %{public}@
MTTimerStorage - Failed Dismissing Timer
Repeated timer %{public}@
MTTimerStorage - Finished Repeating Timer
MTTimerStorage - Failed Repeating Timer
%{public}@ notifying observers for timer addition
%{public}@ notifying observers for timer update
%{public}@ notifying observers for timer removal
%{public}@ notifying observers for timer dismissal
%{public}@ notifying observers for timer firing
%{public}@ notifying observers for next timer change
-----MTTimerStorage-----
Timers: %{public}@
Last Modified: %{public}@
MTTimerStorage - Next Timer Changed
MTTimerStorage - Fired Timer
%{public}@ removing all timers
%{public}@ registered %{public}@
%{public}@ is registering for distributed notifications
%{public}@ is registering for darwin notifications
%{public}@ is registering for alarm notifications
%{public}@ is registering for darwin notification %{public}@
%{public}@ received notification %{public}@
%{public}@ Using a scheduling power assertion timeout of %{public}d
%{public}@ Alarm added - Request snapshot
%{public}@ Alarm updated - Request snapshot
%{public}@ Alarm removed - Request snapshot
%{public}@ has no sync manager.
MTAlarmSyncDataModel - Syncing Alarm Dismiss
MTAlarmSyncDataModel - Syncing Alarm Snooze
%{public}@ performing action %{public}@
MTAlarmSyncDataModel - Applying Alarm Dismiss
MTAlarmSyncDataModel - Applying Alarm Snooze
-----%{public}@-----
Alarm Sync Manager: %{public}@
%{public}@ no sleep alarm, sleep disabled
%{public}@ sleep schedule disabled
%{public}@ haven't dismissed morning alarm yet so we're sleeping
%{public}@ wake up alarm was snoozed (%{public}@) so we're sleeping
%{public}@ next trigger is for wake up (%{public}@) so we're sleeping
%{public}@ bedtime reminder was snoozed (%{public}@) for after the bedtime: (%{public}@). it is currently before bedtime and the snooze date
%{public}@ bedtime reminder was snoozed (%{public}@) for after the bedtime. it is currently past bedtime but before the snooze date.
%{public}@ user confirmed go to bed notification (%{public}@) so we're sleeping until %{public}@
%{public}@ haven't seen go to bed reminder yet (%{public}@)
%{public}@ not bedtime yet (%{public}@)
%{public}@ bedtime reached, checking state
%{public}@ waketime reached but alarm not enabled, dismissing
%{public}@ scheduling alarm timeout
%{public}@ alarm timeout occurred, dismissing
%{public}@ received %{public}@
%{public}@ Active Paired Device: %{public}@ (version: %{public}@)
%{public}@ no paired device detected
%{public}@ paired watch version is too old for sync
%{public}@ has active paired watch%{public}@
-----MTPairedDeviceListener-----
Paired Device: %{public}@ - %{public}@ - %{public}@
Paired Device Active: %{public}d
%{public}@ received willPresentNotification
%{public}@ completing with UNNotificationPresentationOptionAlert for %{public}@
%{public}@ completing with UNNotificationPresentationOptionAlert|UNNotificationPresentationOptionSound for %{public}@
Connection info must be non-nil
Initializing %{public}@ with info %{public}@
%{public}@ deallocing...
%{public}@ rebuilding connection
%{public}@ connection interrupted
%{public}@ connection invalidated
%{public}@ will retry connection because the response to the lifecycle notification failed
%{public}@ connection invalidated.  Retrying
%{public}@ not retrying invalidated connection
%{public}@ received lifecycle darwin notification. Reestablishing connection.
%{public}@ received lifecycle darwin notification.  Reconnecting.
%{public}@ received lifecycle darwin notification but does not have a reconnection handler.
Failed to reconnect for provider %{public}@ with error %{public}@.
%{public}@ retrying failed reconnect
%{public}@ attempting to reconnect.
%{public}@ failed to reconnect too many times
%{public}@ received a remote proxy error: %{public}@
%{public}@ expected non-nil proxy@
%{public}@ expected non-nil connection
%{public}@ invalidating
%{public}@ Handling manual %{public}@ invalidation
%{public}@ Keeping off until: %{public}@
%{public}@ Not in user sleep window
%{public}@ We are past keepOffUntilDate: %{public}@
%{public}@ ignoring updateState until keepOffUntilDate: %{public}@
%{public}@ Failed adding assertion update listener: %@
%{public}@ Added assertion update listener
%{public}@ engageUntilDate:userEngaged
%{public}@ already have assertion
%{public}@ updating active assertion with new end date %{public}@, isUserRequested %d
%{public}@ acquiring assertion with details %{public}@
%{public}@ Failed to acquire assertion with %{public}@
%{public}@ Successfully acquired assertion
%{public}@ clearKeepOff:
%{public}@ disengage:
%{public}@ there is no assertion
%{public}@ Failed to release assertion with %{public}@
%{public}@ Successfully released assertion
%{public}@ keepOffUntilDate: %{public}@
%{public}@ scheduleUpdateForSecondsFromNow: %f
%{public}@ re-checking %{public}@
%{public}@ user manually turning off %{public}@ (%{public}@)
%{public}@ didReceiveModeAssertionInvalidation %{public}@
%{public}@ user woke up, turning off %{public}@ if it's on
%{public}@ user went to bed, checking %{public}@
%{public}@ bedtime reminder fired, checking %{public}@
%{public}@ it's the user's bedtime, checking %{public}@
%{public}@ wake up alarm fired, checking %{public}@
%{public}@ wake up alarm snoozed, checking %{public}@
%{public}@ user %{public}@ sleep alarm, checking %{public}@
%{public}@ significant time change detected, checking %{public}@
-----%@-----
isEnabled: %d, isUserRequested: %d
%{public}@ resuming sync service
%{public}@ sync currently disabled, not starting, and removing any pending changes.
%{public}@ stopping sync service
%{public}@ removing pending changes
%{public}@ still has changes
%{public}@ no pending changes
%{public}@ syncing %{public}@
%{public}@ ignoring sync because we're not started
%{public}@ applying change %{public}@
%{public}@ nothing to apply
%{public}@ resetting data store
%{public}@ successfully sent %lu changes
%{public}@ incremental sync requested
%{public}@ sync isn't disabled.
%{public}@ sync is disabled.
Sync Service: %@
Sync Status: %lu
Pending Changes: %lu
%{public}@ createAlarm requested without time
%{public}@ no alarm, disabling
%{public}@ feature not enabled
%{public}@ user confirmed bedtime reminder (%{public}@).  Starting session.
%{public}@ user woke up at %@ (%{public}@)
%{public}@ received notification response
%{public}@ received response for category %{public}@ and action %{public}@
Unexpected alarm notification action: %{public}@
%{public}@ calling completion
%{public}@ received snooze action for %{public}@
%{public}@ received go to bed action for bedtime notification %{public}@
%{public}@ received dismiss action for wakeup alarm %{public}@
%{public}@ received dismiss action for bedtime notification %{public}@
%{public}@ received dismiss action for snooze countdown notification %{public}@
%{public}@ received dismiss action for alarm %{public}@
%{public}@ received response for action %{public}@
Unexpected timer notification action: %{public}@
%{public}@ received dismiss action for timer %{public}@
%{public}@ received repeat action for timer %{public}@
Initializing %{public}@ with persistence %{public}@ and migrator %{public}@
%{public}@ cleaning up snooze fire date for sleep alarm %{public}@
%{public}@ cleaning up repeat schedule for sleep alarm %{public}@
%{public}@ loading alarms
%{public}@ To set as a marker we are hitting here with updated root
%{public}@ has no alarms
%{public}@ clean-up needed
%{public}@ Migrating sleep alarm: %{public}@ 
%{public}@ Donate signal for existing bedtime
%{public}@ Don't donate signal because no existing bedtime
%{public}@ Failed to release assertion with %{public}@, failure error:%{public}@
%{public}@ Migrating sleep alarm: %{public}@ to regular: %{public}@
%{public}@ loaded %{public}@, sleep alarms %{public}@
%{public}@ loaded %{public}ld alarms, %{public}ld sleep alarms
%{public}@ persistence is nil
%{public}@ ignoring misplaced sleep alarm %{public}@
%{public}@ ignoring misplaced regular alarm %{public}@
%{public}@ received request for alarms
%{public}@ returning ordered alarms: %{public}@, sleep alarms: %{public}@, next alarm: %{public}@
%{public}@ calling completion block with alarms %@
%{public}@ adding alarm %{public}@
MTAlarmStorage - Adding Alarm
%{public}@ updating alarm %{public}@
MTAlarmStorage - Updating Alarm
%{public}@ updating %{public}@ with changes %{public}@
%{public}@ removing alarm %{public}@
MTAlarmStorage - Removing Alarm
%{public}@ removing alarm with ID %{public}@
%{public}@ removing all alarms
%{public}@ setting all alarms %{public}@, sleep alarms %{public}@
%{public}@ setting all alarms
%{public}@ setting sleep alarms %{public}@
%{public}@ transferring metadata from existing sleep alarms %{public}@
%{public}@ snoozing for %{public}lu minutes
%{public}@ snoozing alarm with ID %{public}@ and action %ld
MTAlarmStorage - Snoozing Alarm
%{public}@ dismissing alarm with ID %{public}@ and action %{public}@
MTAlarmStorage - Dismissing Alarm
Alarm already exists
MTAlarmStorage - Failed Adding Alarm
MTAlarmStorage - Finished Adding Alarm
Alarm doesn't exist
MTAlarmStorage - Failed Updating Alarm
%{public}@ Alarm %{public}@ disabled while firing (%{public}@).  Dismissing: %{public}@ (last dismissed: %{public}@)
%{public}@ Alarm %{public}@ modified during save.  Notifying everyone.
%{public}@ Changes: %{public}@
MTAlarmStorage - Finished Updating Alarm
MTAlarmStorage - Finished Removing Alarm
MTAlarmStorage - Failed Removing Alarm
%{public}@ was snoozed and isn't enabled anywhere. Cancelling.
%{public}@ was snoozed but had relevant changes. Cancelling.
%{public}@ was snoozed but early wake up was confirmed (%{public}@). Cancelling.
%{public}@ setting alarms:%{public}@, sleep alarms: %{public}@, persist: %i, notify %i, override: %i
%{public}@ setting alarms - needs update: %i
%{public}@ has a snooze fire date of %{public}@ and we want to snooze until %{public}@.  Picking later date
%{public}@ has a bed-time snooze fire date of %{public}@ and we want to snooze until %{public}@.  Picking later date
MTAlarmStorage - Finished Snoozing Alarm
%{public}@ couldn't find matching alarm to snooze for %{public}@
MTAlarmStorage - Failed Snoozing Alarm
%{public}@ Setting non-repeating alarm %{public}@ to disabled
%{public}@ dismissed alarm %{public}@ at %{public}@
MTAlarmStorage - Finished Dismissing Alarm
%{public}@ couldn't find matching alarm to dismiss for %{public}@
MTAlarmStorage - Failed Dismissing Alarm
%{public}@ notifying observers for alarm addition
%{public}@ notifying observers for alarm change
%{public}@ notifying observers for alarm removal
%{public}@ notifying observers for alarm snooze
%{public}@ notifying observers for alarm dismissal
%{public}@ notifying observers for alarm fire
%{public}@ notifying observers for next alarm change
MTAlarmStorage - Next Alarm Changed
MTAlarmStorage - Fired Alarm
%{public}@ significant time change detected, rescheduling alarms
%{public}@ resetting firedDate on %{public}@ because it's in the future
%{public}@ resetting dismissedDate on %{public}@ because it's in the future
%{public}@ resetting bedtimeFiredDate on %{public}@ because it's in the future
%{public}@ resetting bedtimeDismissedDate on %{public}@ because it's in the future
%{public}@ resetting lastModifiedDate on %{public}@ because it's in the future
%{public}@ handling notification %{public}@
-----MTAlarmStorage-----
Alarms: %{public}@
Sleep Alarms: %{public}@
%{public}@ removing all alarms (sans sleep)
Start monitoring : Springboard/Carousel start
Cannot start monitoring Springboard/Carousel start because it was already started
Stop monitoring : Springboard/Carousel start
Springboard/Carousel started = %{public}@
%s Handled resolve label for intent: %@ with result: %@
%s Failed to fetch timers for intent: %@, error: %@
%s Handled resolve duration for intent: %@ with result: %@
%s Handled resolve type for intent: %@ with result: %@
%s Attempting to remove conflicting timer: %@
%s Successfully removed conflicting timer: %@
%s Failed to remove conflicting timer: %@ with error: %@
%s Successfully %@ create timer intent %@ with response %@
%s Failed to %@ create timer intent %@ with response: %@, error: %@
[Sound] Converting %{public}@ to UNNotificationSound for category %{public}@
[Sound] Made %@
[Sound] Converting %@ to MTSound
%{public}@ rescheduling %{public}ld alarms
%{public}@ scheduling %{public}ld alarms
%{public}@ scheduling %{public}ld additional alarms
%{public}@ fired last alarm more than %d minutes ago.  Seeing if we have to fire any alarms we missed since %{public}@
%{public}@ the last alarm fire date is ahead of the current date (probably because we went back in time).
%{public}@ fired last alarm less than %d minutes ago.  Seeing if we have to fire any alarms we missed since %{public}@
%{public}@ Setting really old snoozed alarm %{public}@ to disabled
%{public}@ Clearing fire date for really old snoozed alarm %{public}@
%{public}@ Clearing fire date for really old firing alarm %{public}@
%{public}@ scheduling %{public}lu alarms
%{public}@ scheduled alarms: %{public}@
%{public}@ unscheduling %{public}lu alarms
%{public}@ next alarm changed: %{public}@
MTAlarmScheduler - Changing Next Alarm
%{public}@ has %{public}ld scheduled alerts and notifications
%{public}@ Scheduling persistent timer for next alert at %{public}@
%{public}@ Timer will fire %f minutes from now
%{public}@ Timer will fire %f seconds from now
%{public}@ Timer should have fired.  Triggering it now
%{public}@ Unscheduling persistent timer.
%{public}@ Alarm timer fired
%{public}@ Alarm %{public}@ is for non-visible event %{public}@
%{public}@ Alarm %{public}@ doesn't play on this device
MTAlarmScheduler - Firing Alarm
%{public}@ %{public}@ fired (scheduled fire date: %{public}@)
%{public}@ first dismissing related notifications for %{public}@
%{public}@ post notification for %{public}@
%{public}@ not posting notification for %{public}@
%{public}@ no next alarm
%{public}@ Alarm %{public}@ was supposed to fire but is no longer scheduled
%{public}@ Scheduled alarms: %{public}@
%{public}@ Find notifications with current trigger date in range %{public}@
%{public}@ Alarm %{public}@ should actually fire in %f seconds
%{public}@ fired all alarms.  Rescheduling.
%{public}@ Setting last alarm trigger date to %{public}@
%{public}@ received update of alarms %{public}@.  Rescheduling them.
%{public}@ posting snooze countdown notification for snoozed alarm %{public}@
-----MTAlarmScheduler-----
Scheduled Alarms: %{public}@
Not scheduling %{public}@ because sleep schedule is disabled
Not scheduling alarm %{public}@ because it's disabled
Not scheduling bedtime triggers
%{public}@ widget refresh requested within throttle interval, dropping
Failed to reload alarm widget timeline %{public}@, error: %{public}@
%{public}@: didAddAlarms
%{public}@: didRemoveAlarms
%{public}@: didDismissAlarm
%{public}@: didFireAlarm
%{public}@: didSnoozeAlarm
%{public}@: didUpdateAlarms
%{public}@: alarm %{public}@ requested widget reload bypass
Dropping undecodeable sync data from %{public}@
%{public}@ Processing os_state handler
State: %{public}@
%{public}@ Error serializing state data: %{public}@
%{public}@ Ignoring user bedtime %@.
%{public}@ stopping session with reason %{public}@
%{public}@ User bed time unset.  Using: %@
%{public}@ User bed time was: %@
%{public}@ User wake time was: %@
[Triggers] %{public}@ handleSystemReadyWithAlarmStorage %lu alarms
[Triggers] %{public}@ didAddAlarms: %{public}@
[Triggers] %{public}@ didUpdateAlarms: %{public}@
[Triggers] %{public}@ didChangeNextAlarm: %{public}@
[Triggers] %{public}@ didSnoozeAlarm: %{public}@, snoozeAction: %{public}@
[Triggers] %{public}@ Telling context store and knowledge store that alarm (%{public}@) has snoozed
[Triggers] %{public}@ didDismissAlarm: %{public}@, dismissAction: %{public}@
[Triggers] %{public}@ Telling context store and knowledge store that alarm (%{public}@) has been dismissed
[Triggers] %{public}@ Ignoring dismissAction (%{public}@)
[Triggers] %{public}@ didFireAlarm: %{public}@, triggerType: %{public}@
[Triggers] %{public}@ Telling context store and knowledge store that alarm (%{public}@) has fired
[Triggers] %{public}@ Ignoring triggerType (%{public}@)
[Triggers] %{public}@ didRemoveAlarms: %{public}@
%{public}@ could not save objects to knowledge store with error: %{public}@
[Triggers writeAlarmUpdatedEventForAlarms] set isEnableDisableModification for alarm %@
[Triggers writeAlarmUpdatedEventForAlarms] set isTimeDifferenceModification for alarm %@
[Triggers writeAlarmUpdatedEventForAlarms] could not find old alarm
[Triggers writeAlarmUpdatedEventForAlarms] isTimeDifferenceModification and isEnableDisableModification are false
Did NOT save alarm biome event of type: %@ because device is class c locked
%{public}@ didAddTimers %{public}@
%{public}@ didUpdateTimers %{public}@
%{public}@ didFireTimer %{public}@
%{public}@ Donating intent: %{public}@
Error donating timer create intent: %{public}@
%@ donated successfully
%@ - Cache Miss
%{public}@ - Error getting alarms: %{public}@
%{public}@ posting distributed notification for alarm: %{public}@
%{public}@ posting distributed notification for timer: %{public}@
%{public}@ System is ready.
Restore is done or not needed.
Restore isn't done.
%{public}@ verifying restore is done
%{public}@ has been notified that restore is done (received %{public}@) or not needed.
%{public}@ restore already handled
%{public}@ has been notified of F5 demo
-----MTSystemStateListener-----
Restore done: %{public}d
%{public}@ loading cities, needs city data update: %d
%{public}@ userWentToBed
%{public}@ telling observers user went to bed
%{public}@ userWokeUp
%{public}@ telling observers user woke up
%{public}@ dismissWakeUpAlarm (%{public}@)
%{public}@ shouldScheduleAlarmTimeoutForSecondsFromNow
%{public}@ telling observers about added sleep alarm
%{public}@ telling observers about removed sleep alarm
%{public}@ sleep alarm changes: %@
%{public}@ telling observers about modified sleep alarm
%{public}@ sleep alarm changes unimportant.
%{public}@ sleep alarm dismissed: (%{public}@)
%{public}@ telling observers bedtime reminder fired at %{public}@
%{public}@ telling observers bedtime reminder was confirmed at %{public}@
%{public}@ telling observers bedtime reminder was snoozed until %{public}@
%{public}@ telling observers bedtime was reached at %{public}@
%{public}@ telling observers waketime time was reached at %{public}@
%{public}@ telling observers wake up alarm fired at %{public}@
%{public}@ telling observers wake up alarm was snoozed until %{public}@
%{public}@ telling observers wake up alarm was dismissed at %{public}@ (%{public}@)
%{public}@ telling observers %{public}@ ended at %{public}@
%{public}@ significant time change detected
%{public}@ pairedDevicePreferencesChanged
-----MTSleepCoordinator-----
%@: %d
%s Failed to %@ delete timer intent %@ %@, response: %@
%s Successfully %@ delete timer attribute intent %@ with response %@
%s Deleting%@ timer %@ from timer manager %@
%s Failed to delete%@ timer %@ from timer manager %@ due to error %@
%s Filtering timer for delete to single unnamed timer: %@
%s Failed to %@ set timer attribute intent %@%@
%s Successfully %@ set timer attribute intent %@ with response %@
[Sound] No tone ID is specified in defaults. Fall back to the ToneLibrary default
[Sound] No media item ID is specified in defaults. Switch to the tone type and use the ToneLibrary default
[Sound] Alarm sound from stored defaults (toneID: %@, mediaItemID: %@)
[Sound] No vibration ID is specified in defaults. Use the ToneLibrary default
[Sound] Alarm vibration from stored defaults (vibrationID: %@)
[Sound] Default alarm sound is %@
[Sound] Default timer sound is %@
[Sound] Storing Alarm Defaults (soundTypeKey: %@, toneIDKey: %@, mediaItemIDKey: %@, vibrationIDKey: %@)
[Sound] Storing Timer Defaults (toneIDKey: %@)
%{public}@ Using snapshot quiescing window of %{public}f
%{public}@ skipping migration from old storage, as this device doesn't support the old storage
%{public}@ migrating old alarms and notifications to storage
%{public}@ need to migrate alarms: %{public}@ and sleep alarm: %{public}@
%{public}@ need to migrate %{public}ld alarms and sleep alarm %{public}d
%{public}@ migrated alarm %{public}@ (enabled: %{public}d)
%{public}@ migrated sleep alarm %{public}@ (enabled: %{public}d)
%{public}@ migrated to alarms: %{public}@ and sleep alarm: %{public}@
%{public}@ skipping migration removal, as this device doesn't support the old storage
%{public}@ removing old alarms and notifications from storage
%{public}@ notification cleanup, as this device doesn't support the old storage
%{public}@ cleaning up old notifications
Date before computing earlierst trigger date for %{public}@: %{public}@
Computing next fire date for %{public}@ after %{public}@
Alarm %{public}@ is snoozed:%d, repeats: %d
Alarm %{public}@ override alarm date: %{public}@
Alarm %{public}@ next alarm date: %{public}@
Alarm %{public}@ alarm trigger: %{public}@
%{public}@ has next fire date %{public}@ after %{public}@
Alarm %{public}@ include snooze: %d
Snooze hasn't fired yet (%{public}@) for alert %{public}@
Snooze has already fired (%{public}@) for alert %{public}@
Alarm %{public}@ candidate triggers after sorting: %{public}@
%{public}@ has next trigger %{public}@
%{public}@ %{public}@ after %{public}@ (%{public}@)
%{public}@ %{public}@ %{public}@
%{public}@ %{public}@ %{public}@ is nil
%{public}@ earliest trigger date: %{public}@
[Migration] (1.8) pushAlertsEnabled: %d
[Migration] (1.8) playOptions: %lu
[Migration] (2.6) old enabled: %d, sleepSchedule: %d
[Migration] (2.6) new enabled: %d, sleepSchedule: %d
Initializing %{public}@ with tracker: %{public}@
%{public}@ sessionDidComplete: %{public}@
%{public}@ writing session
%{public}@ notifying %{public}@
%{public}@ session has nothing to write
%{public}@ session is ready to write
%{public}@ session needs additional processing
%{public}@ failed to process session
%{public}@ archiving session
%{public}@ archiveSession: %{public}@
%{public}@ creating %{public}@ directory at %{public}@
%{public}@ failed to create directory at %{public}@
%{public}@ wrote sessions to file %{public}@
%{public}@ failed to write sessions file %{public}@
%{public}@ writeSession: %{public}@
%{public}@ can write session data
%{public}@ no unprocessed in bed intervals to save
%{public}@ device hasn't been unlocked since boot.  Waiting for unlock...
%{public}@ device has been unlocked.  Writing samples to HealthKit
%{public}@ device has been unlocked but no unprocessed intervals to save
%{public}@ caught exception %{public}@ when trying to read sessions
%{public}@ unarchiving failed with error %{public}@
%{public}@ no data found in file %{public}@
%{public}@ failed to remove session data file error %{public}@
%{public}@ doesn't have write access for HKCategoryTypeIdentifierSleepAnalysis
%{public}@ Processing session: %@
%{public}@ Skipping session due to missing bedtime or wake time: %@
%{public}@ Interval is nil.
%{public}@ sleep interval: %f greater than allowed: %f. Will not be used
%{public}@ Timer added - Request snapshot
%{public}@ Timer updated - Request snapshot
%{public}@ Timer removed - Request snapshot
%{public}@ initializing...
%{public}@ broadcasting %{public}@
%{public}@ registering %{public}@ for %{public}@
%{public}@ posting %{public}@ for %{public}@
%{public}@ unregistering %{public}@ for %{public}@
%{public}@ sensitiveUIStateChanged
%{public}@: %{public}@
%{public}@: Returning widget URL: %{public}@
%{public}@: widget override date: %{public}@
Initializing %{public}@...
%{public}@ calling update handler with %{public}@
%{public}@ _handleAlarmsDidChange
%{public}@ setting up notification centers
%{public}@ setting %lu categories for %{public}@
%{public}@ handling responses with %{public}@
%{public}@ firing %{public}@
%{public}@ adding request %{public}@
%{public}@ failed to fire %{public}@ with error %{public}@
%{public}@ fired %{public}@
%{public}@ dismissing related notifications for %{public}@
%{public}@ dismissing any notifications for %{public}@
%{public}@ alarm is nil
%{public}@ dismissing notifications for %{public}@ (%{public}@)
%{public}@ dismissing notifications with identifiers %{public}@
%{public}@ tearDownNotificationsForEventIdentifiers %{public}@
%{public}@ Tearing down %{public}@
%{public}@ not interrupting audio or locking device because we're in a call
%{public}@ interrupting audio
%{public}@ locking device
%{public}@ dismissing %{public}@
%{public}@ timer is nil
%{public}@ removing all delivered notifications.
%{public}@ migrating old timers to storage
%{public}@ removing old timers and notifications from storage
%{public}@ received significant time change notification. Notifying observers
%{public}@ timeZone: %{public}@
Add Alarm
Update Alarm
Remove Alarm
Dismiss Alarm
Snooze Alarm
Sync Add Alarm
Sync Update Alarm
Sync Remove Alarm
Sync Dismiss Alarm
Sync Snooze Alarm
Fire Alarm
Schedule Alarm
Add Timer
Update Timer
Remove Timer
Dismiss Timer
Repeat Timer
Schedule Timer
Fire Timer
%{public}@ executing %{public}@ immediately
%{public}@ scheduling %{public}@
%{public}@ opening transaction for %{public}@
%{public}@ closing transaction for %{public}@
%{public}@ %{public}@ completed
%{public}@ %{public}@ has no tasks
%{public}@ Not taking power assert for %{public}@ because assertion timeout is 0.
%{public}@ - Error getting timers: %{public}@
%{public}@ warming...
%{public}@ setting default duration to %f
%{public}@ Error getting timers:%{public}@
%{public}@ addTimer:%{public}@
MTTimerManager - Adding Timer
%{public}@ updateTimer:%{public}@
MTTimerManager - Updating Timer
%{public}@ removeTimer:%{public}@
MTTimerManager - Removing Timer
%{public}@ dismissTimerWithIdentifier:%{public}@
MTTimerManager - Dismissing Timer
%{public}@ repeatTimerWithIdentifier:%{public}@
MTTimerManager - Repeating Timer
%{public}@ received MTTimerServerReadyNotification
%{public}@ notified timers added: %{public}@
MTTimerManager - Timer Added
%{public}@ notified timers update: %{public}@
MTTimerManager - Timer Updated
%{public}@ notified timers removed: %{public}@
MTTimerManager - Timer Removed
%{public}@ notified timer fired: %{public}@
MTTimerManager - Timer Fired
%{public}@ notified timer dismissed: %{public}@
MTTimerManager - Timer Dismissed
%{public}@ notified next timer changed: %{public}@
MTTimerManager - Next Timer Changed
%s Failed to %@ reset timer intent %@ %@, response: %@
%s Successfully %@ reset timer intent %@ with response %@
%{public}@ checking in...
%{public}@ reconnecting...
%{public}@ updating cache %{public}@
%{public}@ calling connection provider %{public}@
%{public}@ remote block being called on connection provider %{public}@...
%{public}@ error while reconnecting: %{public}@
%{public}@ finish block called for next alarm
%{public}@ finish block called with no next alarm
%{public}@ finish block called with next alarm: %{public}@, error: %{public}@
%{public}@ addAlarm:%{public}@
MTAlarmManager - Adding Alarm
%{public}@ updateAlarm:%{public}@
MTAlarmManager - Updating Alarm
%{public}@ removeAlarm:%{public}@
MTAlarmManager - Removing Alarm
%{public}@ snoozeAlarmWithIdentifier:%{public}@
MTAlarmManager - Snoozing Alarm
%{public}@ dismissAlarmWithIdentifier:%{public}@ (%{public}@)
MTAlarmManager - Dismissing Alarm
%{public}@ received MTAlarmServerReadyNotification
%{public}@ received MTAlarmServerReadyNotification, posting MTAlarmManagerStateReset
%{public}@ notified alarms added: %{public}@
MTAlarmManager - Alarm Added
%{public}@ notified alarms updated: %{public}@
MTAlarmManager - Alarm Updated
%{public}@ notified alarms removed: %{public}@
MTAlarmManager - Alarm Removed
%{public}@ notified alarm snoozed: %{public}@
MTAlarmManager - Alarm Snoozed
%{public}@ notified alarm fired: %{public}@
MTAlarmManager - Alarm Fired
%{public}@ notified alarm dismissed: %{public}@
MTAlarmManager - Alarm Dismissed
%{public}@ notifying next alarm changed: %{public}@
MTAlarmManager - Next Alarm Changed
%{public}@ notified next alarm changed: %{public}@
%{public}@ notified alarms changed: %{public}@
MTAlarmManager - Refreshing Sleep Alarms
MTAlarmManager - Resetting Sleep Alarms Snooze State
%{public}@ handleSystemReady, has active timer session, processing update
%{public}@ handleSystemReady, no active session found
%{public}@ did add timers, starting sessions
%{public}@ did fire timer, finishing session
%{public}@ did update timer, updating session
%{public}@ didUpdateTimers inside serializer
%{public}@ didUpdateTimers inside na each
%{public}@ processTimerUpdate
%{public}@ starting/resuming timer
%{public}@ pausing timer
%{public}@ stopping timer
%{public}@ cannot process timer state change: %{public}@
%{public}@ activating BSServiceConnection
%{public}@ created connection: %{public}@
%{public}@ launch angel connection activated to bundle id: %{public}@
%{public}@ launch angel connection interrupted to bundle id: %{public}@
%{public}@ launch angel connection invalidated to bundle id: %{public}@
%{public}@ calling connection activate
%{public}@ no server connection, rebuilding
%{public}@ server connection created
%{public}@ server not created for connection: %{public}@
%{public}@ resuming timer
%{public}@ resending timer data entry
%{public}@ updating timer to state %lu
%{public}@ error pausing timer from widget listerener: %{public}@
%{public}@ updated timer state to %lu successfully
%s Updating%@ timer %@ from timer manager %@
%s Failed to update%@ timer %@ from timer manager %@ due to error %@
%s Filtering timer for update to single unnamed timer: %@
%s Successfully handled search timers intent: %@ with response %@
%s Failed to handle search timers with intent: %@ due to error %@
%{public}@ Updating keep off until date: %{public}@
%{public}@ We are before keep off until date: %{public}@, turning off %{public}@ if it's on
%{public}@ no sleep alarm, turning off %{public}@ if it's on
%{public}@ sleep schedule for %{public}@ not enabled, turning off %{public}@ if it's on
%{public}@ %{public}@ not enabled for alarm %{public}@, turning off %{public}@ if it's on
%{public}@ waiting 60 seconds before turning on %{public}@ for alarm %{public}@
%{public}@ turning on %{public}@ if it's not on for alarm %{public}@
%{public}@ not in sleep window for alarm %{public}@, turning off %{public}@ if it's on
%{public}@ ignoring user requested off because it's for previous sleep window
%{public}@ Alarm added - Donating intent: %{public}@
Error donating alarm create intent: %{public}@
Error deleting donations for update: %{public}@
%{public}@ Interactions for updated alarm %@ deleted successfully
%{public}@ Updated alarm - Donating intent: %{public}@
%{public}@ Updated Alarm %@ donated successfully
Error donating alarm enable intent: %{public}@
%{public}@ Alarm updated - Donating intent: %{public}@
Error donating alarm update intent: %{public}@
Error deleting donations: %{public}@
Interactions for %@ deleted successfully
%{public}@ loading legacy data
%{public}@ loading user preferences
%{public}@ loading scheduled notifications
%{public}@ found %lu scheduled notifications
%{public}@ migrated from springboard defaults
%{public}@ upgrading alarms
%{public}@ found %ld alarms to upgrade
%{public}@ Old alarms being upgraded: %@
%{public}@ New alarms already present: %@
%{public}@ No alarms found to upgrade
%{public}@ upgrading timer
%{public}@ setting current sound: %@
%{public}@ setting current sound: Stop Playing
%{public}@ Removing AlarmList
%{public}@ Removing SBCountdownTimerSoundIdentifier
%{public}@ Removing SBCountdownTimerTimeIdentifier
%{public}@ Reading alarms from preferences: %@
%{public}@ Invalid alarm found in preferences :: %@
%{public}@ Reading sleep alarm from preferences: %@
%{public}@ reconiling alarms with notifications
%{public}@ found scheduled notification matching alarm %{public}@.  Forcing active for migration.
%{public}@ finished reconiling alarms with notifications
%{public}@ loading timer defaults
%{public}@ purging legacy data
%{public}@ deleting defaults
%{public}@ cancelling notifications
%{public}@ resuming connection
Listener %{public}@ posting lifecycle darwin notification %{public}@
%{public}@ invalidation handler called for connection %{public}@...
Connection %{public}@ not entitled
Connection to server via %{public}@ mach port was interrupted.
Connection to server via %{public}@ mach port was invalidated. Removing server side connection
%{public}@: Adding XPC client: %{public}@
%{public}@: Already has XPC client: %{public}@
%{public}@: Current XPC clients: %{public}@
%{public}@: Removing XPC client: %{public}@
%{public}@ has launched
%{public}@ supports sessions, setting up coordinator
%{public}@ does not support sessions
%{public}@ system is ready
%{public}@ migration finished
Launched: %{public}@
------------------------
%{public}@ removing user defaults
%{public}@ initializing
%{public}@ received %{public}@ notification for %d alarms.
%{public}@ received MTAlarmManagerStateReset notification.
%{public}@ asynchronously reloading alarms
%{public}@ calling reload block
%{public}@ finished reloading
%{public}@ failed reloading: %{public}@
%{public}@ creating sync directory at %{public}@
%{public}@ failed to write create directory at %{public}@
%{public}@ wrote pending changes %{public}@ to file %{public}@
%{public}@ failed to write pending changes to file %{public}@
%{public}@ stored sync version is too old
%{public}@ read pending changes %{public}@ from file %{public}@
%{public}@ got nil pending changes.
%{public}@ caught exception %{public}@ when trying to read pending changes
%{public}@ had no pending changes in file %{public}@
%{public}@ failed to remove bogus pending changes with error %{public}@
[%{public}@] Will enter state %@ with previous state %{public}@
[%{public}@] Did enter state %{public}@ with previous state %{public}@
%{public}@ _handlePrefsChanged: pushAlertsEnabled = %d
%{public}@ unexpected error getting bundle identifier for %{public}@: %{public}@
%{public}@ rescheduling %{public}ld timers
%{public}@ fired last timer more than %d minutes ago.  Seeing if we have to fire any timers we missed since %{public}@
%{public}@ the last timer fire date is ahead of the current date (probably because we went back in time).
%{public}@ fired last timer less than %d minutes ago.  Seeing if we have to fire any timers we missed since %{public}@
%{public}@ Setting really old running timer %{public}@ to stopped
%{public}@ scheduling %{public}lu timers
%{public}@ scheduled timers: %{public}@
%{public}@ unscheduling %{public}lu timers
%{public}@ next timer changed: %{public}@
MTTimerScheduler - Changing Next Timer
%{public}@ Updating persistent timer for %{public}ld scheduled timers
%{public}@ Scheduling persistent timer for next timer at %{public}@
%{public}@ Timer should have fired. Triggering it now
%{public}@ Timer timer fired
MTTimerScheduler - Firing Timer
%{public}@ no next timer
%{public}@ Timer %{public}@ was supposed to fire but is no longer scheduled
%{public}@ Scheduled timers: %{public}@
%{public}@ Timer %{public}@ should actually fire in %f seconds
%{public}@ fired all timers.  Rescheduling.
%{public}@ Setting last timer trigger date to %{public}@
-----MTTimerScheduler-----
Scheduled Timers: %{public}@
%{public}@ Dismissing notifications for timer: %{public}@
Initializing %{public}@ with delegate %{public}@
%{public}@ will enqueue changes %{public}@
%{public}@ ready to enqueue changes
%{public}@ enqueued %{public}@
%{public}@ stopped enqueing at %{public}@
%{public}@ continuing session...
%{public}@ enqueued all %lu changes
%{public}@ has %lu changes to apply
%{public}@ applying %{public}@
%{public}@ skipping invalid change %{public}@
%{public}@ finished applying %lu changes
%{public}@ session %{public}@ wants to reset data store
%{public}@ completed succesfully
%{public}@ failed with error %{public}@
%{public}@ received notification
%{public}@ device has been unlocked
%{public}@ device hasn't been unlocked
%{public}@ posting MTDeviceHasBeenUnlockedForFirstTime notification
%{public}@ Found initial hasBeenUnlockedSinceBoot value of [%d]
-----MTDeviceListener-----
Unlocked since boot: %{public}d
%{public}@ sleep manager initialized
%{public}@ updateSleepAlarms
%{public}@ retrieving sleep schedule model
%{public}@ failed to retrieve sleep schedule model with error: %{public}@
%{public}@ retrieved sleep schedule model: %{public}@
%{public}@ sleep schedule is nil before completing onboarding
%{public}@ sleep schedule is nil after completing onboarding.
%{public}@ mapping sleep model to alarms
%{public}@ setting mapped alarms to storage
%{public}@ completed sleep onboarding check with result: %{public}@, error: %{public}@ 
%{public}@ resetSleepAlarmSnoozeState
%{public}@ needs sleep migration, fetching watchSleepFeaturesEnabled async
%{public}@ failed to get sleep settings, error: %{public}@ 
%{public}@ fetching sleep alarm from health
%{public}@ failed to retrieve upcoming sleep occurrence with error: %{public}@
%{public}@ failed to retrieve sleep schedule with error: %{public}@
%{public}@ no upcoming sleep schedule occurrence
%{public}@ not informing sleep store of alarm dismiss: %{public}@, action: %{public}@
%{public}@ informing sleep store of alarm dismiss: %{public}@, dismiss date:%{public}@ action: %{public}@
%{public}@ sleep store sleepAlarmWasDismissedOnDate completed for alarm id: %{public}@ with status: %d, error: %{public}@
%{public}@ sleep store sleepAlarmWasSnoozedUntilDate completed for alarm id: %{public}@ with status: %d, error: %{public}@
%{public}@ sleep store sleepAlarmWasModified completed with status: %d, error: %{public}@
%{public}@ no active paired device supporting syncing.  Syncing is disabled
%{public}@ this device doesn't support syncing.
%{public}@ active paired device changed.
%{public}@ modified after %{public}@ (%{public}@)
%{public}@ already fired after %{public}@ (%{public}@)
%{public}@ already dismissed after %{public}@ (%{public}@)
Next trigger date %{public}@ is prior to requested date %{public}@
%{public}@ read data version: %f
Illegal fire time class %{public}@
Starting %{public}@
Stopping %{public}@
System is ready: %{public}@.  Will post MTAlarmServerReadyNotification.
System isn't ready...
MTAlarmServer - Adding Alarm
MTAlarmServer - Updating Alarm
MTAlarmServer - Removing Alarm
MTAlarmServer - Snoozing Alarm
MTAlarmServer - Dismissing Alarm
%{public}@ calling to refresh sleep alarms
%{public}@ could not refresh sleep alarms:%{public}@
%{public}@ calling to reset sleep alarms snooze state
%{public}@ could not reset sleep alarms snooze state:%{public}@
-----MTAlarmServer-----
System Ready: %@
Clients: %{public}@
%s Failed to retrieve timers from timer manager %@: %@
%s Failed to resolve timer %@ from timer manager %@ due to error %@
%s Filtering matched timers for allowedTimerStatesForFollowup:%@ to: %@
%s Filtering resolved timer matches to single unnamed timer: %@
%s Found %ld matching timers for multi target timer: %@
%s Disambiguating %ld matching timers for single target timer: %@
%s Found no matching timers but 1 alternate timer: %@ for target timer: %@
%s Found no matching timers for target timer: %@
%s Found matching timer: %@ for target timer: %@
System is ready: %{public}@.  Will post MTTimerServerReadyNotification.
MTTimerServer - Adding Timer
MTTimerServer - Updating Timer
MTTimerServer - Removing Timer
MTTimerServer - Dismissing Timer
MTTimerServer - Repeating Timer
-----MTTimerServer-----
%{public}@ posting CFUserNotification for %{public}@
%{public}@ failed to post CFUserNotification
%{public}@ cancelling CFUserNotification for %{public}@
%{public}@ calling handler for %{public}@
%{public}@ couldn't find callback for notification %{public}@
%{public}@ loading changes
%{public}@ loaded %lu changes
%{public}@ unsupported change type %{public}@
%{public}@ enqueuing action %{public}@
%{public}@ jumping over pending change %{public}@
%{public}@ unable to merge %{public}@ into %{public}@
%{public}@ dequeing changes %{public}@
%{public}@ resolving incoming change %{public}@
%{public}@ incoming change %{public}@ conflicts with pending change %{public}@
%{public}@ dropping conflicting pending change %{public}@
%{public}@ dropping conflicting incoming change %{public}@
%{public}@ retry timer fired (%{public}@)
Initialized %{public}@
%{public}@ resuming service
%{public}@ suspending service
%{public}@ requests sync %{public}@
%{public}@ setHasChangesAvailable
%{public}@ wants to start sending session %{public}@ for request %{public}@
%{public}@ starting sending session %{public}@
%{public}@ not ok to sync yet
%{public}@ starting receiving session %{public}@
%{public}@ finished sending session %{public}@
%{public}@ finished sending session %{public}@ with error %{public}@
%{public}@ finished request %{public}@ with error %{public}@
%{public}@ finished receiving session %{public}@
%{public}@ finished receiving session %{public}@ with error %{public}@
%{public}@ had a conflict between %{public}@ (preferred) and %{public}@ (rejected)
%{public}@ retrying %{public}@
%{public}@ told it's ok to sync from %{public}@.
-[MTPauseResumeTimerIntentHandler resolveTargetTimerForPauseTimer:withCompletion:]
v24@?0@"INTimerResolutionResult"8@"NSError"16
-[MTPauseResumeTimerIntentHandler resolvePauseMultipleForPauseTimer:withCompletion:]
-[MTPauseResumeTimerIntentHandler confirmPauseTimer:completion:]
-[MTPauseResumeTimerIntentHandler handlePauseTimer:completion:]
B16@?0@"<MTTimerIntentSupport>"8
@"NSError"16@?0@"MTMutableTimer"8
v24@?0@"NSArray"8@"NSError"16
-[MTPauseResumeTimerIntentHandler resolveTargetTimerForResumeTimer:withCompletion:]
-[MTPauseResumeTimerIntentHandler resolveResumeMultipleForResumeTimer:withCompletion:]
-[MTPauseResumeTimerIntentHandler confirmResumeTimer:completion:]
-[MTPauseResumeTimerIntentHandler handleResumeTimer:completion:]
-[MTPauseResumeTimerIntentHandler _responseToPauseTimerIntent:withPausedTimers:error:dryRun:]
confirm
handle
due to error %@
confirmed
handled
-[MTPauseResumeTimerIntentHandler _responseToResumeTimerIntent:withResumedTimers:error:dryRun:]
StartDate
EndDate
EndReason
Intervals
MetaData
NeedsAdditionalProcessing
needsAdditionalProcessing: %d
intervals: %lu
<%@ %p start: %@ end: %@ %@ reason: %@ metadata: %@>
AlarmDismissal
WakeTimeReached
ConfigurationChanged
ManualExit
Error
MTSyncSnooze+ProtoBuffer.m
Unsupported class for action %@
Unexpected codeable: %@
data
alarmId
hour
minute
allowsSnooze
isSleepAlarm
bedtimeReminderMinutes
bedtimeHour
bedtimeMinute
daySetting
repeatDay
totalRepeatCount
remainingRepeatCount
title
soundType
sound
soundVolume
soundSongId
lastModified
revision
vibe
AlarmFiredNotificationNamePrefix
AlarmSnoozedNotificationNamePrefix
AlarmEditingProxyID
ALARM_DEFAULT_TITLE
%@::%@
Settings :: ID is wrong type
Settings :: ID is invalid
Settings :: hour is wrong type
Settings :: hour is invalid
Settings :: minute is wrong type
Settings :: minute is invalid
Settings :: day setting is wrong type
Settings :: day setting is invalid
Settings :: settings %@
Settings is nil
Alarms
q24@?0@"Alarm"8@"Alarm"16
x-apple-clock:alarm?id=
Alarm.m
Invalid parameter not satisfying: %@
volumeIsValid
%@ %d:%02d 0x%04X "%@" %@ <%@ #%i> %@
MTXPCConnectionInfo.m
exportedObject: %@ must conform to protocol: %@
<%@:%p %@>
-[MTToggleAlarmIntentHandler handleEnableAlarm:completion:]
v20@?0B8q12
-[MTToggleAlarmIntentHandler handleDisableAlarm:completion:]
v16@?0@"NSError"8
B16@?0@"MTAlarm"8
v16@?0@"NSArray"8
@"MTIntentAlarm"16@?0@"MTAlarm"8
-[MTToggleAlarmIntentHandler handleToggleAlarm:completion:]
Found no alarm to enable/disable
@"NAFuture"16@?0@"NSArray"8
v16@?0@"NSNull"8
com.apple.clock.alarm
cities
@16@?0@"MTCity"8
com.apple.mobiletimer.WorldClockWidget
com.apple.mobiletimer.alarm
alarm update
CHSWidgetConfigurationReader
Class getCHSWidgetConfigurationReaderClass(void)_block_invoke
MTWidgetUtilities.m
Unable to find class %s
v8@?0
void *ChronoServicesLibrary(void)
CHSTimelineController
Class getCHSTimelineControllerClass(void)_block_invoke
B16@?0@"NSString"8
com.apple.language.changed
MTScheduledList.m
Not a mutable ordered collection
v32@?0@"MTScheduledObject"8Q16^B24
q24@?0@"MTScheduledObject"8@"MTScheduledObject"16
B16@?0@"MTScheduledObject"8
@"MTScheduledObject"16@?0@"MTTrigger"8
v16@?0@"MTScheduledObject"8
Alerts: %@, Notifications: %@, Events: %@
MTTimers
MTTimerModifiedDate
MTTimerStorageVersion
com.apple.mobiletimerd.MTTimerStorage
com.apple.MTTimerStorage.access-queue
timerID
Timer already exists!
Can't update timer from %@ to %@
Timer storage: %@
Timer doesn't exist
Timer storage - trying to update timer that does not exist
Timer does not exist!
Timer storage - trying to remove timer that does not exist
Timer storage - trying to dismiss timer that does not exist
Timer storage - trying to repeat timer that does not exist
v16@?0@"<MTTimerObserver>"8
B16@?0@"MTTimer"8
q24@?0@"MTTimer"8@"MTTimer"16
Timers
Timers Last Modified
state
None
fired
modified
toneID: %@, mediaItemID: %@, vibeID: %@, volume: %@
com.apple.MTNotificationManager.serialqueue
com.apple.distnoted.matching
com.apple.notifyd.matching
com.apple.alarm
v16@?0@"NSObject<OS_xpc_object>"8
SchedulingAssertionTimeout
%@%@
com.apple.MTAlarmSyncDataModel
@"MTSyncServiceManager"16@?0@"MTAlarmSyncDataModel"8
AlarmSync.data
Alarm Sync Managers
B16@?0@"MTTrigger"8
MTSleepCoordinatorStateMachineState.m
Unhandled sleep window case!
com.apple.MTPairedDeviceListener.access-queue
v16@?0@"<MTPairedDeviceObserver>"8
C0F3C2C3-0CDE-4DF9-A95A-789AC9A0348B
 with sync capability
%@ %@
alarmProperties
MTXPCConnectionProvider.m
Connection info must be non-nil
Provider XPC connection invalidated
v16@?0@8
@"NAFuture"16@?0@"NSError"8
v24@?0@"NSNumber"8@"NSError"16
@"NAFuture"8@?0
@24@?0@"NSXPCConnection"8@?<v@?@"NSError">16
@"NAFuture"16@?0@"NSXPCConnection"8
sleep mode
MTAlarmCategory
MTAlarmNoSnoozeCategory
MTBedtimeAlarmCategory
MTWakeUpAlarmCategory
MTWakeUpAlarmNoSnoozeCategory
AlarmSnoozeCountdown
MTAlarmDismissAction
MTAlarmSnoozeAction
MTAlarmGoToBedAction
MTBedtimeAlarm
MTSnoozeCountdown
MTScheduledFireDate
MTSnoozeable
MTPlaysOn
MTPresentGoodMorningAlert
MTDismissGoodMorningAlert
com.apple.mobiletimer
com.apple.mobiletimer.user-preferences-and-local-notifications-changed
com.apple.mobiletimer.user-preferences-changed
com.apple.mobiletimer.local-notifications-changed
com.apple.mobiletimer.user-preferences-dirty
com.apple.MobileTimer.critical
MTCriticalEventMessage
@"NSDictionary"8@?0
com.apple.MobileTimer.numberOfAlarms
com.apple.MobileTimer.numberOfActiveAlarms
com.apple.MobileTimer.numberOfRepeatingAlarms
com.apple.MobileTimer.numberOfNamedAlarms
com.apple.MobileTimer.alarmNameLength
com.apple.MobileTimer.Clock.Alarm.adds
com.apple.MobileTimer.Clock.Alarm.removes
com.apple.MobileTimer.Clock.Alarm.activations
com.apple.MobileTimer.Clock.Alarm.deactivations
com.apple.MobileTimer.SleepAlarm.Onboarding.start-views
com.apple.MobileTimer.SleepAlarm.Onboarding.end-views
com.apple.MobileTimer.SleepAlarm.views
com.apple.MobileTimer.SleepAlarm.WakeTime.edits
com.apple.MobileTimer.SleepAlarm.Bedtime.edits
com.apple.MobileTimer.SleepAlarm.activations
com.apple.MobileTimer.SleepAlarm.deactivations
com.apple.MobileTimer.SleepAlarm.History.views
com.apple.MobileTimer.SleepAlarm.sleepalarm
com.apple.MobileTimer.SleepAlarm.wakealarm
com.apple.MobileTimer.SleepAlarm.cycles
com.apple.MobileTimer.SleepAlarm.enabled
com.apple.MobileTimer.SleepAlarm.enabled-days
com.apple.MobileTimer.SleepAlarm.active-days
com.apple.MobileTimer.SleepAlarm.duration
com.apple.MobileTimer.SleepAlarm.enabled-duration
com.apple.MobileTimer.WorldClock.adds
com.apple.MobileTimer.WorldClock.removes
com.apple.MobileTimer.Stopwatch.starts
com.apple.MobileTimer.Stopwatch.resets
com.apple.MobileTimer.Stopwatch.laps
com.apple.MobileTimer.Stopwatch.pauses
com.apple.MobileTimer.Timer.starts
com.apple.MobileTimer.Timer.pauses
com.apple.MobileTimer.Timer.resumes
com.apple.MobileTimer.Timer.cancels
com.apple.MobileTimer.MultipleTimers.running
multipleTimersCount
com.apple.MobileTimer.Siri.Alarm.adds
com.apple.MobileTimer.Siri.Alarm.removes
com.apple.MobileTimer.Siri.Alarm.searches
com.apple.MobileTimer.Siri.Alarm.activations
com.apple.MobileTimer.Siri.Alarm.deactivations
com.apple.MobileTimer.Siri.Alarm.snoozes
com.apple.MobileTimer.Siri.Alarm.dismisses
com.apple.MobileTimer.Siri.Timer.searches
com.apple.MobileTimer.Siri.Timer.sets
com.apple.MobileTimer.Siri.Timer.cancels
com.apple.MobileTimer.Siri.Timer.pauses
com.apple.MobileTimer.Siri.Timer.resumes
com.apple.MobileTimer.Siri.Timer.dismisses
com.apple.MobileTimer.Sync.Error
com.apple.MobileTimer.Sync.success
com.apple.MobileTimer.Sync.failure
com.apple.MobileTimer.Alarm.add
com.apple.MobileTimer.Alarm.delete
com.apple.MobileTimer.Alarm.update
com.apple.MobileTimer.SleepAlarm.add
com.apple.MobileTimer.SleepAlarm.delete
com.apple.MobileTimer.SleepAlarm.update
com.apple.MobileTimer.Alarm.dismiss
com.apple.MobileTimer.Alarm.snooze
com.apple.MobileTimer.Alarm.snooze.stop
com.apple.MobileTimer.Bedtime.dismiss
com.apple.MobileTimer.Bedtime.snooze
com.apple.MobileTimer.Bedtime.confirm
com.apple.MobileTimer.WakeUp.dismiss
com.apple.MobileTimer.WakeUp.snooze
com.apple.MobileTimer.Timer.add
com.apple.MobileTimer.Timer.delete
com.apple.MobileTimer.Timer.update
com.apple.MobileTimer.Timer.dismiss
com.apple.MobileTimer.Timer.repeat
HHmmssSS
HHmmss
mmssSS
mmss
HH%@
%1$@
%2$@
%3$@
%4$@
MTKeepDndOffUntilDate
com.apple.mobiletimer.bedtime-mode
com.apple.mobiletimer.sleep-mode.automatic
v20@?0B8@"NSError"12
removed
isEnabled
isUserRequested
MTDateFormattingLocaleDidChangeNotification
com.apple.MTSyncServiceManager.serialqueue
Sync Service
Sync Status
Pending Changes
@16@?0@"MTIntentRepeatDay"8
Unexpected alert for go to bed action
Unexpected action type: %ld
com.apple.mobiletimerd.reset
MTAlarms
MTSleepAlarm
MTSleepAlarms
MTAlarmModifiedDate
MTAlarmStorageVersion
MTAlarmSnoozeDuration
MTBedtimeSnoozeDuration
com.apple.mobiletimerd.MTAlarmStorage
com.apple.mobiletimer.bedtime.migration.done
com.apple.MTAlarmStorage.access-queue
BED_TIME
Localizable
MTDefaultTimerVibrationID
alarmID
@"<NSCopying>"16@?0@"MTAlarm"8
@"MTAlarm"16@?0@"MTAlarm"8
@16@?0@"MTAlarm"8
Alarm already exists!
Alarm does not exist!
Alarm storage - trying to update alarm that does not exist
Alarm storage - trying to remove alarm that does not exist
v16@?0@"MTAlarm"8
Alarm storage - trying to snooze alarm that does not exist
Alarm storage - trying to dismiss alarm that does not exist
v16@?0@"<MTAlarmObserver>"8
Sleep Alarms
Alarms Last Modified
enabled
firing
snoozed
BMDiscoverabilitySignalEvent
Class getBMDiscoverabilitySignalEventClass(void)_block_invoke
MTAlarmStorage.m
void *BiomeStreamsLibrary(void)
BMStreams
Class getBMStreamsClass(void)_block_invoke
Serial MTSpringboardStartMonitor queue
v12@?0i8
v16@?0@"<MTSpringboardStartMonitorObserver>"8
com.apple.springboard.finishedstartup
-[MTCreateTimerIntentHandler resolveLabelForCreateTimer:withCompletion:]
-[MTCreateTimerIntentHandler resolveLabelForCreateTimer:withCompletion:]_block_invoke_2
-[MTCreateTimerIntentHandler resolveLabelForCreateTimer:withCompletion:]_block_invoke
v12@?0B8
-[MTCreateTimerIntentHandler resolveDurationForCreateTimer:withCompletion:]
-[MTCreateTimerIntentHandler resolveTypeForCreateTimer:withCompletion:]
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
-[MTCreateTimerIntentHandler confirmCreateTimer:completion:]
-[MTCreateTimerIntentHandler handleCreateTimer:completion:]
v12@?0I8
@"NAFuture"16@?0@"NSNull"8
B16@?0@"NSObject<MTTimerIntentSupport>"8
-[MTCreateTimerIntentHandler _createTimerWithIntent:dryRun:completion:]_block_invoke_5
-[MTCreateTimerIntentHandler _createTimerWithIntent:dryRun:completion:]_block_invoke
v16@?0@"NSObject<MTTimerIntentSupport>"8
v28@?0@"INCreateTimerIntent"8B16@?<v@?@"INCreateTimerIntentResponse">20
-[MTCreateTimerIntentHandler _responseToCreateTimerIntent:withCreatedTimer:error:dryRun:]
B32@?0@"NSObject<MTTimerIntentSupport>"8Q16^B24
void _MRMediaRemoteGetNowPlayingApplicationPlaybackState(__strong dispatch_queue_t, void (^__strong)(MRPlaybackState))
MTCreateTimerIntentHandler.m
MRMediaRemoteGetNowPlayingApplicationPlaybackState
void *MediaRemoteLibrary(void)
toneID
mediaID
vibeID
MTAlertSoundDuration
<%@:%p alertTopic: %@, toneID: %@, mediaItemID: %llu, vibeID: %@, volume: %@
MTAlarmLastTriggerDate
com.apple.MTAlarmScheduler.alarm-event
com.apple.MTAlarmTask.fire
com.apple.MTAlarmTask.reschedule
com.apple.MTAlarmScheduler.access-queue
v16@?0@?<v@?>8
MTAlarmScheduler
Scheduled alarms
alarm
<%@:%p %@, Trigger: %@>
com.apple.MTExponentialBackOffTimer.serial
<%@: %p backoff: %ld>
com.apple.mobiletimerd.MTWidgetProvider
Widget Provider - failed to reload alarm widget timeline
MTCompanionSyncSerializer.m
%@ not protobuffer serializable
Create
Update
Enable
Disable
Delete
time
label
identifier
repeat
com.apple.mobiletimer-framework.MobileTimerIntents
v16@?0q8
Alarm
CSSearchableIndex
Class getCSSearchableIndexClass(void)_block_invoke
MTAlarmIntent.m
void *CoreSpotlightLibrary(void)
com.apple.mobiletimerd.diagnostics
com.apple.mobiletimerd
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
Unexpected nil userBedtime
Wake times don't agree
NSString *getHKMetadataKeyTimeZone(void)
MTTimeInBedSessionTracker.m
HKMetadataKeyTimeZone
void *HealthKitLibrary(void)
NSString *get_HKPrivateMetadataKeySleepAlarmUserSetBedtime(void)
_HKPrivateMetadataKeySleepAlarmUserSetBedtime
NSString *get_HKPrivateMetadataKeySleepAlarmUserWakeTime(void)
_HKPrivateMetadataKeySleepAlarmUserWakeTime
ALARM_DETAIL_EVERY_MONDAY
ALARM_DETAIL_EVERY_TUESDAY
ALARM_DETAIL_EVERY_WEDNESDAY
ALARM_DETAIL_EVERY_THURSDAY
ALARM_DETAIL_EVERY_FRIDAY
ALARM_DETAIL_EVERY_SATURDAY
ALARM_DETAIL_EVERY_SUNDAY
ALARM_DETAIL_EVERY_DAY
ALARM_DETAIL_WEEKDAYS
ALARM_DETAIL_WEEKENDS
ALARM_SHORT_MONDAY
ALARM_SHORT_TUESDAY
ALARM_SHORT_WEDNESDAY
ALARM_SHORT_THURSDAY
ALARM_SHORT_FRIDAY
ALARM_SHORT_SATURDAY
ALARM_SHORT_SUNDAY
@"NSString"24@?0@"NSString"8@"NSString"16
@"NSString"32@?0@"NSString"8@"NSString"16@"NSString"24
ALARM_REPEAT_NEVER
ALARM_DETAIL_REPEAT_NEVER
ALARM_EVERY_MONDAY
ALARM_MONDAY
ALARM_EVERY_TUESDAY
ALARM_TUESDAY
ALARM_EVERY_WEDNESDAY
ALARM_WEDNESDAY
ALARM_EVERY_THURSDAY
ALARM_THURSDAY
ALARM_EVERY_FRIDAY
ALARM_FRIDAY
ALARM_EVERY_SATURDAY
ALARM_SATURDAY
ALARM_EVERY_SUNDAY
ALARM_SUNDAY
ALARM_EVERY_DAY
ALARM_WEEKDAYS
ALARM_WEEKENDS
com.apple.mobiletimerd.MTCoreDuetMonitor
transition
com.apple.MTTimerIntentDonor.serialqueue
com.apple.clock.timer
duration
v40@?0@"NSArray"8@"NSArray"16@"MTAlarm"24@"NSError"32
Restore done
MTTimerDataVersion
MTTimerID
MTTimerState
MTTimerDuration
MTTimerFireTimerClass
MTTimerFireTime
MTTimerTitle
MTTimerLastModifiedDate
MTTimerFiredDate
MTTimerDismissedDate
MTTimerSound
MTTimerSiriContext
v32@?0@"ALCity"8Q16^B24
DeviceClass
iPad
PerformanceTestingEnabled
/tmp/WorldClock-performance_test.plist
cityAddTest
timestamp
citySent
q24@?0@"ALCity"8@"ALCity"16
NPSManager
Class getNPSManagerClass(void)_block_invoke
WorldClockManager.m
void *NanoPreferencesSyncLibrary(void)
com.apple.MTSleepCoordinator.wakeupalarmtimeout-event
MTSleepTimeOutMinutesKey
com.apple.MTSleepCoordinator.access-queue
@"NAFuture"16@?0@8
v16@?0@"<MTSleepObserver>"8
sleep session
MTSleepCoordinator
isUserAsleep
com.apple.MTOSTransaction.serial
MTDeleteTimerIntentHandlerErrorDomain
-[MTDeleteTimerIntentHandler resolveTargetTimerForDeleteTimer:withCompletion:]
-[MTDeleteTimerIntentHandler resolveDeleteMultipleForDeleteTimer:withCompletion:]
-[MTDeleteTimerIntentHandler confirmDeleteTimer:completion:]
-[MTDeleteTimerIntentHandler handleDeleteTimer:completion:]
-[MTDeleteTimerIntentHandler _responseToDeleteTimerIntent:withDeletedTimers:error:dryRun:]
-[MTDeleteTimerIntentHandler _deleteTimer:multiple:dryRun:completion:]
 (dry-run)
-[MTDeleteTimerIntentHandler _deleteTimer:multiple:dryRun:completion:]_block_invoke
@16@?0@"NSObject<MTTimerIntentSupport>"8
Failed to delete%@ timer %@ from timer manager %@ due to ambiguity between timers %@
-[MTSetTimerAttributeIntentHandler handleSetTimerAttribute:completion:]
v24@?0@"INTimer"8@"NSError"16
-[MTSetTimerAttributeIntentHandler confirmSetTimerAttribute:completion:]
-[MTSetTimerAttributeIntentHandler resolveToDurationForSetTimerAttribute:withCompletion:]
-[MTSetTimerAttributeIntentHandler resolveTargetTimerForSetTimerAttribute:withCompletion:]
-[MTSetTimerAttributeIntentHandler _responseToSetTimerAttributeIntent:withUpdatedTimer:error:dryRun:]
Failed to update%@ timer %@ from timer manager %@ - renaming from %@ to %@ is not supported.
Failed to update%@ timer %@ from timer manager %@ due to invalid duration %f
snoozeAction
dismissAction
syncDate
syncID
syncVersion
MTSoundType
MTSoundToneID
MTSoundMediaItemID
MTSoundVibrationID
MTSoundVolume
MTDefaultAlarmSoundType
MTDefaultAlarmToneID
MTDefaultAlarmMediaItemID
MTDefaultAlarmVibrationID
MTDefaultTimerToneID
Unexpected MTSoundCategory: %lu
Sound must be nonnull!
Timer
GoToSleep
WakeUp
Generic
Sound type integer value out of bounds: %lu
Unexpected sound type: %lu
Timers only support tones
<%@:%p toneID: %@, mediaItemID: %@, vibeID: %@, volume: %@
v24@?0q8@"NSError"16
citiesLastModified
DefaultCityAdded
LatestUpdateVersion
<%@:%p %@ %@ dismissDate: %@ (%@)>
com.apple.mobiletimer.alarmintent
SnapshotWindow
v16@?0@"Alarm"8
com.apple.mobiletimer.MTAlarmDidFireNotification
MTAlarmID
com.apple.mobiletimer.mode.sleep
Every Day
Weekdays
Weekends
q24@?0@"MTAlarm"8@"MTAlarm"16
apple-internal-install
q24@?0@"MTTrigger"8@"MTTrigger"16
v24@?0@"NSString"8@"NSDate"16
dismissed
bedtime dismissed
bedtime fired
keep off until
overriden for date
MTAlarm.m
Must be a single time override
sleep
month
year
schedule
isSnoozed
isFiring
siriContext
bypassReloadDate
DismissAlarm
DismissGoToBedNotification
ConfirmGoToBedNotification
DismissWakeUpAlarm
DismissSnoozeCountdownNotification
DismissWakeUpAlarmTimeOut
AlarmConfigurationChanged
WakeUpAlarmConfigurationChanged
SnoozeAlarm
SnoozeWakeUpAlarm
SnoozeGoToBedNotification
MTUnprocessedSessions
SleepSession.data
v16@?0@"<MTSleepSession>"8
v24@?0@8@"NSError"16
@"<MTSleepSession>"16@?0@"<MTSleepSession>"8
HKHealthStore
Class getHKHealthStoreClass(void)_block_invoke
MTSleepSessionManager.m
HKObjectType
Class getHKObjectTypeClass(void)_block_invoke
HKCategoryTypeIdentifier getHKCategoryTypeIdentifierSleepAnalysis(void)
HKCategoryTypeIdentifierSleepAnalysis
HKCategorySample
Class getHKCategorySampleClass(void)_block_invoke
HKDevice
Class getHKDeviceClass(void)_block_invoke
com.apple.MTMetrics.serialqueue
%@.%@
com.apple.mobiletimer-framework.preferences-and-notifications-changed
com.apple.mobiletimer-framework.preferences-changed
com.apple.mobiletimer-framework.local-notifications-changed
bundleIdentifier
B16@?0q8
B16@?0d8
com.apple.mobiletimer.MTUserDefaults
Distributed
ReleaseType
Vendor
v16@?0@"<MTSensitiveUIStateObserver>"8
com.apple.NanoAlarm
com.apple.private.NanoTimer
com.apple.private.OldNanoTimer
assistant_service
ForceClock
@"NSDate"8@?0
MTUtilities.m
date can't be nil
en_US
@"NSDate"16@?0@"NSDate"8
clock-worldclock
clock-alarm
clock-sleep-alarm
clock-stopwatch
clock-timer-running
clock-timer
v16@?0@"MTTimer"8
@"NAFuture"16@?0@"NSString"8
%@:%@
default
list
lastTimer
com.apple.%@.serial
HOURS_MINUTES_AHEAD
HOURS_MINUTES_BEHIND
DAY_FORMAT_HOURS_MINUTES_AHEAD
DAY_FORMAT_HOURS_MINUTES_BEHIND
DAY_FORMAT_HOURS_AHEAD
HOURS_AHEAD
DAY_FORMAT_MINUTES_AHEAD
DAY_FORMAT_MINUTES_BEHIND
MINUTES_AHEAD
MINUTES_BEHIND
DAY_FORMAT_ONE_HOUR_AHEAD
DAY_FORMAT_ONE_HOUR_BEHIND
ONE_HOUR_AHEAD
ONE_HOUR_BEHIND
DAY_FORMAT_HOURS_BEHIND
HOURS_BEHIND
_SPACE
clock-worldclock:default
yyyy:MM:dd:HH:mm
com.apple.mobiletimer-framework
WorldClock
type
city
languageCode
timeZone
countryCode
name
unlocalizedName
countryName
unlocalizedCountryName
America/Los_Angeles
Cupertino
%@ %@, %@ || %@ %@ || %@, %@
x-apple-clock:world-clock?
alcid=%d
ccid=
[%@] title: [%@] fireDate: [%@] identifier: [%@] clockAppSectionURL: [%@]
com.apple.MTNextAlarmManager.accessqueue
MTBedtimeExpirationDuration
v16@?0@"UNUserNotificationCenter"8
ALARM_STOP_ACTION
ALARM_SNOOZE_ACTION
stop.circle
SNOOZE_STOP
TIMER_STOP_ACTION
TIMER_REPEAT_ACTION
BEDTIME_GO_TO_BED_ACTION
BEDTIME_SNOOZE_ACTION
Failed to post alarm user notifiation
B16@?0@"UNNotification"8
@16@?0@"UNNotification"8
Failed to post timer user notifiation
TIME_FOR_BED_TITLE
TIME_FOR_BED_ALARM_ON_MESSAGE_FORMAT
_SINGULAR
TIME_FOR_BED_ALARM_OFF_MESSAGE
ALARM_SNOOZING_TITLE
Unexpected trigger type %ld for scheduled alarm %@
Unexpected trigger type %ld for scheduled timer %@
TUCallCenter
Class getTUCallCenterClass(void)_block_invoke
MTUserNotificationCenter.m
void *TelephonyUtilitiesLibrary(void)
Boolean MTMRMediaRemoteSendCommand(MRMediaRemoteCommand, CFDictionaryRef)
MRMediaRemoteSendCommand
MTTimerCategory
MTTimerDismissAction
MTTimerRepeatAction
com.apple.mobiletimer.start-timer
com.apple.mobiletimer.stop-timer
MTTimerUserTitle
fromObject
toObject
<%@:%p %@ = %@ (was %@)>
v16@?0@"MTChange"8
@24@?0@"NSString"8@"MTChange"16
<%@:%p %@ >
SignificantTimeChange
com.apple.MTTimeListener.access-queue
v16@?0@"<MTTimeObserver>"8
MobileTimer
Agent
Sync
Sleep
Activity
com.apple.mobiletimer.logging
dismissDate
-[MTCreateSingleTimerIntentHandler resolveLabelForCreateTimer:withCompletion:]
-[MTCreateSingleTimerIntentHandler resolveDurationForCreateTimer:withCompletion:]
-[MTCreateSingleTimerIntentHandler resolveDurationForCreateTimer:withCompletion:]_block_invoke
-[MTCreateSingleTimerIntentHandler confirmCreateTimer:completion:]
-[MTCreateSingleTimerIntentHandler handleCreateTimer:completion:]
-[MTCreateSingleTimerIntentHandler _responseToCreateTimerIntent:withCreatedTimer:error:dryRun:]
com.apple.mobiletimer-framework.preferences-and-notifications-changed-externally
com.apple.mobiletimer-framework.preferences-changed-externally
com.apple.mobiletimer-framework.local-notifications-changed-externally
com.apple.MTGCDTimer
kMTScheduleTaskOSTransactionId
kMTScheduleTaskGroupOSTransactionId
<%@:%p %@ delay:%f>
<%@:%p tasks: %@>
v32@?0@"NSArray"8@"MTTimer"16@"NSError"24
MTTimerTimeInterval
MTTimerTimeDate
MTTimerManagerTimersAdded
MTTimerManagerTimersUpdated
MTTimerManagerTimersRemoved
MTTimerManagerTimerFired
MTTimerManagerFiringTimerChanged
MTTimerManagerFiringTimerDismissed
MTTimerManagerNextTimerChanged
MTTimerManagerTimersChanged
MTTimerManagerStateReset
MTTimerManagerPreferencesChanged
NextTimer
com.apple.mobiletimerd.MTTimerManager
@"MTXPCConnectionProvider"16@?0@"MTTimerManager"8
v16@?0@"<MTTimerServer>"8
v20@?0@?<v@?@"NSArray"@"MTTimer"@"NSError">8B16
Timer is running but doesn't have a next trigger.
v32@?0@"MTTimer"8Q16^B24
MTTimerManager.m
State can't be unknown
@"NAFuture"16@?0@"MTTimer"8
%@ cannot restart a timer (%@) that isn't stopped.
Start timer isn't finished, but expected it to be
v24@?0@"NSNull"8@"NSError"16
Update Timer isn't finished, but expected it to be
-[MTResetTimerIntentHandler resolveTargetTimerForResetTimer:withCompletion:]
-[MTResetTimerIntentHandler confirmResetTimer:completion:]
-[MTResetTimerIntentHandler handleResetTimer:completion:]
-[MTResetTimerIntentHandler _responseToResetTimerIntent:withResetTimers:error:dryRun:]
MTObserverStore.m
observer cannot be nil
Date
UserVisible
MTAlarmManagerAlarmsAdded
MTAlarmManagerAlarmsUpdated
MTAlarmManagerAlarmsRemoved
MTAlarmManagerNextAlarmChanged
MTAlarmManagerAlarmFired
MTAlarmManagerFiringAlarmDismissed
MTAlarmManagerFiringAlarmChanged
MTAlarmManagerAlarmsChanged
MTAlarmManagerStateReset
NextAlarm
com.apple.mobiletimer.MTAlarmManager
.siri_data_changed
com.apple.alarm.label
@"MTXPCConnectionProvider"16@?0@"MTAlarmManager"8
v16@?0@"<MTAlarmServer>"8
v20@?0@?<v@?@"NSArray"@"NSArray"@"MTAlarm"@"NSError">8B16
@"NSArray"40@?0@"NSArray"8@"NSArray"16@"MTAlarm"24@"NSError"32
MTAlarmManager.m
Expected alarm future to be finished.
Expected next alarm future to be finished.
B32@?0@"MTAlarm"8Q16^B24
v24@?0@"MTAlarm"8@"NSError"16
@"NAFuture"16@?0@"MTAlarm"8
com.apple.MTTimerSessionsCoordinator.serialqueue
com.apple.mobiletimer.launchAngelConnection
com.apple.ClockAngel.mach
com.apple.ClockAngel-service
Clock Angel Connection
v16@?0@"BSServiceConnection<BSServiceConnectionContext>"8
v16@?0@"<BSServiceConnectionConfiguring>"8
com.apple.common
BasicAngelIPC
MTWidgetEventListener
MTSessionsManager
Class getMTSessionsManagerClass(void)_block_invoke
MTTimerSessionsCoordinator.m
void *MobileTimerSupportLibrary(void)
en_US_POSIX
yyyy-MM-dd-HH-mm
DND_BEDTIME_MORNING_GREETING
DND_BEDTIME_MORNING_GREETING_LOWERCASE
DND_BEDTIME_AFTERNOON_GREETING
DND_BEDTIME_AFTERNOON_GREETING_LOWERCASE
DND_BEDTIME_EVENING_GREETING
DND_BEDTIME_EVENING_GREETING_LOWERCASE
Localizable_Burrito
alarms
-[MTUpdateTimerIntentHandler _updateTimer:dryRun:allowMultiple:excludeStoppedTimers:filterBlock:updateBlock:completion:]
-[MTUpdateTimerIntentHandler _updateTimer:dryRun:allowMultiple:excludeStoppedTimers:filterBlock:updateBlock:completion:]_block_invoke
B32@?0@"<MTTimerIntentSupport>"8Q16^B24
Failed to update%@ timer %@ from timer manager %@ due to ambiguity between timers %@
v32@?0@"NSObject<MTTiming>"8Q16^B24
-[MTSearchTimerIntentHandler handleSearchForTimers:completion:]
@16@?0@"<MTTimerIntentSupport>"8
-[MTSearchTimerIntentHandler handleSearchForTimers:completion:]_block_invoke_2
-[MTSearchTimerIntentHandler handleSearchForTimers:completion:]_block_invoke
com.apple.MTAlarmIntentDonor.access-queue
com.apple.MTLegacyManager
com.apple.springboard
UpgradeAttempted
SBCountdownTimerSoundIdentifier
AlarmList
allows snooze
sound path
setting
active
SBCountdownTimerTimeIdentifier
timerSleepiPod
timerSound
SleepAlarm
TIMER_INTERVAL
AlarmsLastModified
void MTGSSendAppPreferencesChanged(CFStringRef, CFStringRef)
MTLegacyManager.m
GSSendAppPreferencesChanged
void *GraphicsServicesLibrary(void)
MTXPCConnectionListenerProvider.m
com.apple.MTXPCConnectionListenerProvider.serialqueue
Listener XPC Connection interrupted
v16@?0@"MTXPCClientInfo"8
com.apple.MTAgent
Launched
v16@?0@"NSObject<MTAlarmDataSourceObserver>"8
v16@?0@"NSNotification"8
MTSyncStoragePendingChanges
MTSyncStorageVersion
com.apple.MTSyncStore.archive-queue
; currentState: %@>
MTPairedDevicePreferencesChanged
BulletinDistributorBBSectionsDidChangeNotification
com.apple.bulletinboard.apps
BPSNanoBulletinShowsAlerts
com.apple.MobileTimer.MTApplicationWorkspaceObserverQueue
v32@?0@"NSString"8@"NSHashTable"16^B24
MTTimerLastTriggerDate
com.apple.MTTimerScheduler.timer-event
com.apple.MTTimerTask.fire
com.apple.MTTimerTask.reschedule
com.apple.MTTimerScheduler.access-queue
Scheduled timers
MTTimerScheduler
id  _Nullable NAAssertCast(Class  _Nonnull __unsafe_unretained, id  _Nonnull __strong)
NSObject+NAAdditions.h
Expected class of %@ but was %@
<%@: %p %@ >
SEND
RECV
com.apple.private.mobiletimerd
com.apple.MobileTimer.alarmserver
com.apple.MobileTimer.timerserver
com.apple.mobile.keybagd.first_unlock
MTDeviceHasBeenUnlockedForFirstTime
com.apple.MTDeviceUtilities.work-queue
Unlocked since boot
MTSleepManagerSettingsDidChange
MTNeedsSleepMigration
@"HKSPSleepStore"24@?0@"NSString"8@"HKHealthStore"16
@"HKSPFeatureAvailabilityStore"16@?0@"HKSPSleepStore"8
%@-updateSleepAlarms
@16@?0@"HKSPSleepScheduleOccurrence"8
v16@?0@"MTMutableAlarm"8
v24@?0@"HKSPSleepSettings"8@"NSError"16
MTSleepManager.m
HKFeatureIdentifier getHKFeatureIdentifierSleepCoaching(void)
HKFeatureIdentifierSleepCoaching
watch-companion
CURRENT_TIMER
MTTimerDefaultDuration
com.apple.mobiletimer.MTTimerDidFireNotification
x-apple-clock:timer?id=
TIMER_DEFAULT_TITLE
<%@:%p TimerID: %@, Title: %@, state:%@, duration:%d, firedDate: %@, dismissedDate: %@, sound: %@, siriContext: %@>
Stopped
Running
Paused
Unknown
Timer duration can only be modified while stopped.
Timer duration must be positive.
Unexpected timer state: %ld
com.apple.MTAlarmServer.wakeup
com.apple.MTAlarmServer.ready
com.apple.mobiletimerd.MTAlarmServer
com.apple.MTAlarmServer.ready-queue
v16@?0@"<MTAlarmClient>"8
Alarm system ready
Alarm clients
processName
MTTimerIntentHandlerErrorDomain
v32@?0@"<MTTimerIntentSupport>"8Q16^B24
-[MTTimerIntentHandler _matchTimersFromIntentsTimer:excludeStoppedTimers:completion:]_block_invoke_3
-[MTTimerIntentHandler _genericallyResolveTargetTimer:multiple:allowedTimerStatesForFollowup:completion:]_block_invoke
-[MTTimerIntentHandler _genericallyResolveTargetTimer:multiple:allowedTimerStatesForFollowup:completion:]_block_invoke_2
q24@?0@"NSObject<MTTimerIntentSupport>"8@"NSObject<MTTimerIntentSupport>"16
com.apple.MTCompanionSyncRequest.serialqueue
v16@?0@?<v@?@"NSError">8
DELTA
MTTriggerType
MTTriggerDate
Alert
Snoozed
Go To Bed
Snoozed Go To Bed
Wake Up
Snoozed Wake Up
Snooze Countdown
Bedtime
Waketime
trigger
date
isPastOverride
com.apple.MTTimerServer.wakeup
com.apple.MTTimerServer.ready
com.apple.mobiletimerd.MTTimerServer
com.apple.MTTimerServer.ready-queue
v16@?0@"<MTTimerClient>"8
Timer system ready
Timer clients
<%@:%p %@ snoozeDate: %@ (%@)>
snoozeDate
MTSyncDismiss+ProtoBuffer.m
MTAlarmDataVersion
MTAlarmHour
MTAlarmMinute
MTAlarmBedtimeHour
MTAlarmBedtimeMinute
MTAlarmBedtimeReminderMinutes
MTAlarmBedtimeDoNotDisturb
MTAlarmBedtimeDoNotDisturbOptions
MTAlarmSleepModeDetectionKey
MTAlarmSleepTrackingKey
MTAlarmDay
MTAlarmMonth
MTAlarmYear
MTAlarmOverriddenForDate
MTAlarmTimeInBedTrackingKey
MTAlarmSleepScheduleKey
MTAlarmBedtimeForSleepTracking
MTAlarmWakeupForSleepTracking
MTAlarmRepeatSchedule
MTAlarmEnabled
MTAlarmActive
MTAlarmPlayOptions
MTAlarmFiring
MTAlarmIsSleep
MTAlarmAllowsSnooze
MTAlarmSnoozeFireDate
MTAlarmBedtimeSnoozeFireDate
MTAlarmFireDate
MTAlarmDismissDate
MTAlarmLastModifiedDate
MTAlarmBedtimeFireDate
MTAlarmBedtimeDismissDate
MTAlarmBedtimeDismissAction
MTAlarmKeepOffUntilDate
MTAlarmTitle
MTAlarmSound
MTAlarmIsNew
MTAlarmOnboardingVersion
MTAlarmSiriContext
MTAlarmBypassReloadDate
v16@?0@"NSString"8
B16@?0@"MTCFUserNotification"8
MTTimerIntentSupportSiriContextTimerTypeKey
com.apple.MTSyncChangeQueue.serial
Q16@?0@"<MTSyncable>"8
MTSyncChangeQueue.m
Undetermined enqueue result returned
Q24@?0@"<MTSyncable>"8@"<MTSyncable>"16
Invalid conflict result returned
com.apple.private.alloy.mobiletimersync
com.apple.MTCompanionSyncService.serialqueue
Companion sync sending session failed
<%@: %p master: %d >
SYService
Class getSYServiceClass(void)_block_invoke
MTCompanionSyncService.m
void *CompanionSyncLibrary(void)
SYServiceOption getSYServiceOptionDiskBufferProtectionClass(void)
SYServiceOptionDiskBufferProtectionClass
NSString *getIDSSendMessageOptionBypassDuetKey(void)
IDSSendMessageOptionBypassDuetKey
void *IDSLibrary(void)
<%@:%p ProcessName: %@ ProcessID: %@ Connected: %@ Connection: %@>
%@-%d
lastModifiedDate
snoozeFireDate
bedtimeSnoozeFireDate
firedDate
dismissedDate
playOptions
sleepMode
sleepTracking
sleepSchedule
onboardingVersion
sleepModeOptions
timeInBedTracking
dismissedAction
bedtimeFiredDate
bedtimeDismissedDate
bedtimeDismissedAction
keepOffUntilDate
softlink:r:path:/System/Library/PrivateFrameworks/ChronoServices.framework/ChronoServices
softlink:r:path:/System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams
softlink:r:path:/System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
softlink:r:path:/System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight
softlink:r:path:/System/Library/Frameworks/HealthKit.framework/HealthKit
softlink:r:path:/System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync
softlink:r:path:/System/Library/Frameworks/HealthKit.framework/HealthKit
softlink:r:path:/System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities
softlink:r:path:/System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
softlink:r:path:/System/Library/PrivateFrameworks/MobileTimerSupport.framework/MobileTimerSupport
softlink:r:path:/System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
softlink:r:path:/System/Library/Frameworks/HealthKit.framework/HealthKit
softlink:r:path:/System/Library/PrivateFrameworks/CompanionSync.framework/CompanionSync
softlink:r:path:/System/Library/PrivateFrameworks/IDS.framework/IDS
MTPauseResumeTimerIntentHandler
INPauseTimerIntentHandling
NSObject
INResumeTimerIntentHandling
MTTimeInBedSession
MTSleepSession
NSSecureCoding
NSCoding
ProtoBuffer
MTProtoBufferSerializable
MTSerializable
Alarm
MTXPCConnectionInfo
MTToggleAlarmIntentHandler
MTEnableAlarmIntentHandling
MTDisableAlarmIntentHandling
MTToggleAlarmIntentHandling
MTWidgetUtilities
MTLanguageChangeListener
MTAgentNotificationListener
MTScheduledList
MTSleepCoordinatorStateMachineAsleepState
MTInMemoryDefaults
MTPersistence
ClocksIntent
ClocksIntentResponse
MTTimerStorage
MTTimerSchedulerDelegate
MTApplicationWorkspaceObserverProtocol
MTAgentDiagnosticDelegate
MTAgentNotificationManager
MTDictionarySerializable
NSCopying
MTStorageWriter
MTSerializer
MTStorageReader
MTStorageReaderV1
MTAlarmSnapshot
MTAlarmObserver
MTAlarmSyncDataModel
MTSource
MTSyncDataModel
MTSleepCoordinatorStateMachineState
MTSleepCoordinatorStateMachineEventHandler
MTStateMachineEventHandler
MTPairedDeviceListener
MTUserNotificationAppDelegate
UNUserNotificationCenterDelegate
MTPBAlarm
MTXPCConnectionProvider
MTSleepModeStateMachineUserRequestedOffState
ClockManager
MTAnalytics
IntentsSupport
MTTimerManagerIntentSupport
MTSleepModeMonitor
DNDModeAssertionUpdateListener
MTSleepModeStateMachineInfoProvider
MTStateMachineInfoProvider
MTSleepModeStateMachineDelegate
MTStateMachineDelegate
MTSleepObserver
MTTimeObserver
MTSleepModeManager
MTSleepModeStateMachine
MTSleepModeStateMachineEventHandler
MTDateFormatting
MTSyncServiceManager
MTSyncStatusProviderDelegate
MTSyncServiceDelegate
MTSyncManager
MTCreateAlarmIntentHandler
MTCreateAlarmIntentHandling
MTSleepSessionTracker
MTUserNotificationActionDispatcher
MTPBAlarmDelete
MTUpdateAlarmIntentHandler
MTUpdateAlarmIntentHandling
MTSleepModeStateMachineInitialState
ClocksSingleIntent
ClocksSingleIntentResponse
MTAlarmStorage
MTAlarmScheduleDelegate
MTSpringboardStartMonitor
MTCreateTimerIntentHandler
INCreateTimerIntentHandling
MTPBSound
MTSound_Notifications
MTAlarmScheduler
MTScheduledListDelegate
MTPBAlarmAdd
MTScheduledObject
NAEquatable
NAHashable
MTScheduling
MTScheduleable
MTExponentialBackOffTimer
MTWidgetProvider
MTCompanionSyncSerializer
SYChangeSerializer
MTAlarmIntent
MTAgentDiagnosticListener
MTTimeInBedSessionTracker
MTCoreDuetMonitor
MTTimerIntentDonor
MTTimerObserver
MTAlarmCache
MTDistributedNotificationPoster
MTNotificationCenter
MTSleepModeStateMachineOffState
MTSystemStateListener
Properties
MTSyncChangeArchiver
MTSyncChangeUnarchiver
WorldClockManager
MTSleepCoordinator
MTSleepCoordinatorStateMachineDelegate
MTSleepCoordinatorStateMachineInfoProvider
SleepCoordinator
MTOSTransaction
CompanionSync
SYChange
MTDeleteTimerIntentHandler
INDeleteTimerIntentHandling
MTSetTimerAttributeIntentHandler
INSetTimerAttributeIntentHandling
MTPBSyncMessage
MTSound
WorldClockPreferences
MTSyncDismiss
MTSyncable
MTSyncableObject
MTAlarmIntentHandler
MTSnapshotScheduler
MTAlarmMigrator
MTAlarm
BSDescriptionProviding
NSMutableCopying
MTMutableAlarm
MTSleepSessionManager
MTSleepSessionTrackerDelegate
MTMetrics
NotificationRelay
MTTimerSnapshot
MTUserDefaults
MTSensitiveUIMonitor
MTUtilities
_MTSerialQueueScheduler
MTScheduler
NAScheduler
MTExpiringFuture
WorldClockCity
MTNextAlarm
MTNextAlarmManager
MTWorldClock
MTWorldClockResolutionResult
MTUserNotificationCenter
MTTimerMigrator
MTChange
MTChangeSet
ChangeSet
MTSleepModeStateMachineOnState
MTDictionarySerializer
MTDictionaryDeserializer
MTTimeListener
MTSleepCoordinatorStateMachineDisabledState
MTPBDismissAction
MTCreateSingleTimerIntentHandler
DistributedNotificationPoster
MTGCDTimer
MTGCDTaskScheduler
MTTaskScheduler
MTTask
MTTaskGroup
MTAgentNotification
MTSleepModeStateMachineWaitingState
MTGetAlarmsIntentHandler
MTGetAlarmsIntentHandling
MTPowerAssertion
MTTimerCache
MTTimerTime
MTTimerTimeInterval
MTTimerDate
MTTimerManager
MTUserDefaultNotificationObserver
MTTimerManagerExportedObject
MTTimerClient
MTResetTimerIntentHandler
INResetTimerIntentHandling
MTObserverStore
MTXPCScheduler
MTSchedulingDelegate
MTAlarmManager
MTAlarmManagerExportedObject
MTAlarmClient
MTNotifiying
Sleep
Widget
ClockAngelServer
ClockAngelClient
MTTimerSessionsCoordinator
Notification
MTPBAlarmState
MTUpdateTimerIntentHandler
MTSearchTimerIntentHandler
INSearchForTimersIntentHandling
MTSleepModeStateMachineState
MTAlarmIntentDonor
MTLegacyManager
MTXPCConnectionListenerProvider
NSXPCListenerDelegate
MTAgent
MTSystemStateDelegate
MTAlarmDataSource
MTPersistentSyncChangeStore
MTSyncChangeStore
MTInMemorySyncChangeStore
MTStateMachineState
MTCity
MTCityResolutionResult
MTStateMachine
MTPairedDevicePreferences
MTApplicationWorkspaceObserver
LSApplicationWorkspaceObserverProtocol
MTTimerManagerProviding
MTSleepUtilities
MTTimerScheduler
MTCompanionSyncSession
SYSessionDelegate
MTAlarmServer
MTXPCServer
MTTimerServer
MTAdditions
MTDeviceListener
MTPBAlarmUpdate
MTSleepManager
HKSPSleepStoreObserver
MTCompanionSyncStatusProvider
MTPairedDeviceObserver
MTSyncStatusProvider
MTTimer
MTMutableTimer
MTTimerIntentHandler
MTCompanionSyncRequest
MTSyncToken
MTTrigger
MTSleepCoordinatorStateMachineAwakeState
MTSyncSnooze
MTPBSnoozeAction
MTCFUserNotification
MTCFUserNotificationPoster
MTTimerIntentSupport
MTSyncChangeQueue
MTCompanionSyncService
SYServiceDelegate
MTSyncService
MTXPCClientInfo
MTPBAlarmProperties
MTSleepCoordinatorStateMachine
MTCreateAlarmIntent
MTCreateAlarmIntentResponse
MTUpdateAlarmIntent
MTUpdateAlarmIntentResponse
MTEnableAlarmIntent
MTEnableAlarmIntentResponse
MTDisableAlarmIntent
MTDisableAlarmIntentResponse
MTToggleAlarmIntent
MTToggleAlarmIntentResponse
MTGetAlarmsIntent
MTGetAlarmsIntentResponse
MTAlarmStateResolutionResult
MTAlarmOperationResolutionResult
MTIntentAlarm
MTIntentAlarmResolutionResult
MTIntentRepeatDay
MTIntentRepeatDayResolutionResult
T@"<MTSyncServiceDelegate>",W,N
AMSymbol
T@"MTMetrics",&,N,V_syncMetrics
SYObjectWithData:
T@"MTTimer",R,N
T@"<AlarmDelegate>",W,N,V_delegate
T@"NRDevice",&,N,V_pairedDevice
T@"<MTAlarmScheduleDelegate>",W,N,V_delegate
T@"NSCoder",R,N
T@"<MTAlarmStorage>",C,N,V_alarmStorage
T@"NSDictionary",&,N,V_metadata
T@"<MTAlarmStorage>",R,N,V_storage
T@"NSMutableArray",&,N,V_alarms
T@"<MTNotificationCenter>",R,N,V_notificationCenter
T@"NSString",C,N,V_syncDataFile
T@"<MTPersistence>",&,N,V_persistence
T@"NSURL",R,C,N
T@"<MTScheduledListDelegate>",W,N,V_delegate
T@?,R,C,N,V_currentDateProvider
T@"<MTSchedulingDelegate>",R,N,V_schedulingDelegate
TB,N,GisSleepAlarm,V_sleepAlarm
T@"<MTSleepSessionTrackerDelegate>",W,N
Td,N,V_duration
T@"<MTStateMachineDelegate>",W,N,V_delegate
_alCity
T@"<MTSyncChangeStore>",&,N,V_changeStore
_alarms
T@"<MTSyncService>",&,N,V_syncService
_cities
T@"<MTSyncStatusProvider>",&,N,V_syncStatusProvider
_currentBackoff
T@"<MTSyncStatusProviderDelegate>",W,N,V_syncStatusProviderDelegate
_enqueueAction:
T@"<MTTaskScheduler>",R,N,V_taskScheduler
_handleAlarmNotification:block:
T@"<MTTimerManagerIntentSupport>",R,N
_knowledgeStore
T@"<MTTimerSchedulerDelegate>",W,N,V_delegate
_loaded
T@"<MTTimerTime>",C,N,V_fireTime
_pendingChanges
T@"<NAScheduler>",&,N,V_serializer
_performSnooze:
T@"<NAScheduler>",R,N,V_archiverScheduler
_purged
T@"<NAScheduler>",R,N,V_serializer
_queue_setLastTimerTriggerDate:
T@"Alarm",&,N,V_sleepAlarm
_repeatSchedule
T@"BSServiceConnection<BSServiceConnectionClient>",&,N,V_connection
_scheduleAlarms:withCompletion:
T@"HKHealthStore",&,N,V_healthStore
_setSnoozeCountdownTitleAndBody:forSnoozeCountdownNotification:
T@"HKSPSleepStore",&,N,V_sleepStore
_sortAndFilter:
T@"LSApplicationWorkspace",&,N,V_applicationWorkspace
_stringForType:
T@"MTAgentNotificationManager",&,N,V_notificationManager
_timerScheduler
T@"MTAlarm",&,N,V_cachedSleepAlarm
_toneIdentifier
T@"MTAlarm",&,N,V_sleepAlarm
_vibeID
T@"MTAlarmIntentDonor",&,N,V_alarmIntentDonor
_writeSessions:
T@"MTAlarmManager",R,N,V_alarmManager
addClientConnection:clientLink:
T@"MTAlarmManagerExportedObject",&,N,V_exportedObject
alarmCategories
T@"MTAlarmScheduler",&,N,V_alarmScheduler
alarmDismissed:
T@"MTAlarmServer",&,N,V_alarmServer
alarmProperties
T@"MTAlarmStorage",&,N,V_alarmStorage
allKeys
T@"MTAlarmSyncDataModel",&,N,V_alarmSyncDataModel
archiveSession:
T@"MTCompanionSyncRequest",&,N,V_request
bedtimeReminder
T@"MTCompanionSyncSession",&,N,V_sendingSession
bundleForClass:
T@"MTExponentialBackOffTimer",&,N,V_retryTimer
changes
T@"MTIntentAlarm",C,D,N
cityDataUpdated
T@"MTLanguageChangeListener",&,N,V_languageChangeListener
completionBlock
T@"MTOSTransaction",&,N,V_transaction
connectionQueue
T@"MTPBAlarm",&,N,V_alarm
content
T@"MTPBDismissAction",&,N,V_dismissAction
copyTo:
T@"MTPBSound",&,N,V_sound
currentCalendar
T@"MTPowerAssertion",&,N,V_powerAssertion
dateFromString:
T@"MTScheduledList",R,N,V_scheduledTimers
T@"MTSleepCoordinator",&,N,V_sleepCoordinator
defaultDuration
T@"MTSleepCoordinatorStateMachine",&,N,V_stateMachine
defaultTimeZone
T@"MTSleepCoordinatorStateMachineDisabledState",&,N,V_disabledState
descriptionWithMultilinePrefix:
T@"MTSleepModeMonitor",&,N,V_sleepModeMonitor
didReceiveLifecycleNotification
T@"MTSleepModeStateMachineInitialState",R,N,V_initialState
dismissedAction
T@"MTSleepModeStateMachineWaitingState",R,N,V_waitingState
enabled
T@"MTSleepSessionTracker",&,N,V_sleepSessionTracker
endDate
T@"MTSound",C,N,V_sound
handleMTEnableAlarm:completion:
T@"MTStateMachineState",&,N,V_currentState
handleWakeUpAlarmForAlarm:date:
T@"MTSyncServiceManager",&,N,V_syncServiceManager
hasAllowsSnooze
T@"MTTimeListener",&,N,V_timeListener
hasHour
T@"MTTimer",&,N,V_timer
hasSnoozeAction
T@"MTTimerIntentDonor",&,N,V_timerIntentDonor
initWithALCity:
T@"MTTimerManagerExportedObject",&,N,V_exportedObject
initWithDomain:
T@"MTTimerScheduler",&,N,V_timerScheduler
initWithIdentifier:healthStore:
T@"MTTimerServer",&,N,V_timerServer
isEqualToAlarm:
T@"MTTimerSnapshot",&,N,V_timerSnapshot
isEqualToState:
T@"MTTimerStorage",R,N,V_storage
isEvent
T@"MTUserNotificationActionDispatcher",&,N,V_actionHandler
isSleep
T@"MTXPCConnectionInfo",&,N,V_info
isWakeUpRelated
T@"MTXPCConnectionProvider",R,N,V_connectionProvider
logTimerUpdated
T@"NAFuture",&,N,V_sleepStateResolved
machServiceName
T@"NSArray",&,N,V_intervals
mediaID
T@"NSArray",&,N,V_scheduledNotifications
modifiedDateKey
T@"NSArray",C,N,V_tasks
mtContainsDate:
T@"NSDate",&,N,V_connectedDate
mtSound
T@"NSDate",&,N,V_dismissDate
mtUserActivityWithActivityType:
T@"NSDate",&,N,V_keepOffUntilDate
na_any:
T@"NSDate",&,N,V_lastModifiedDate
na_map:
T@"NSDate",&,N,V_launchDate
needPrefsUpdate
T@"NSDate",&,N,V_startDate
nextTriggerDate
T@"NSDate",C,D,N
T@"NSDate",C,N,V_bedtimeFiredDate
numberWithLong:
T@"NSDate",C,N,V_bypassReloadDate
pairedDevicePreferencesChanged:
T@"NSDate",C,N,V_dismissedDate
persistChanges:
T@"NSDate",C,N,V_firedDate
prepare
T@"NSDate",C,N,V_lastModifiedDate
purgeLegacyData
T@"NSDate",C,N,V_triggerDate
refreshManagers
T@"NSDate",R,N,V_lastModified
removeAllCities
T@"NSDateComponents",C,D,N
removeObserver:
T@"NSDictionary",&,N,V_notificationCenters
request
T@"NSDictionary",C,N,V_siriContext
rescheduleTimersWithCompletion:
T@"NSError",&,N,V_error
saveSessionData
T@"NSMutableArray",&,N,V_changes
scheduleTimers:
T@"NSMutableArray",&,N,V_listeners
scheduledAlerts
T@"NSMutableArray",&,N,V_orderedTimers
scheduledTimers
T@"NSMutableArray",&,N,V_sleepAlarms
service
T@"NSMutableDictionary",&,N,V_notifications
sessionsManager
T@"NSMutableDictionary",&,N,V_observersForBundleID
setAlarmServer:
T@"NSMutableDictionary",&,N,V_scheduledAlertMap
setAsleepState:
T@"NSMutableDictionary",R,N,V_alarmStatesByAlarmID
setBedtimeHour:
T@"NSMutableOrderedSet",&,N,V_orderedScheduledAlerts
setCachedAlarm:
T@"NSMutableOrderedSet",&,N,V_orderedScheduledNotifications
setChangeStore:
T@"NSMutableSet",R,N,V_donatedTimerIDs
setDiagnostics:
T@"NSNotificationCenter",R,N
setEnabled:valueDidChangeBlock:
T@"NSNumber",C,N
setHealthStore:
T@"NSNumber",R,N
setInteger:forKey:notification:
T@"NSNumber",R,N,V_soundVolume
setNotifyToken:
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionQueue
setPersistence:
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
setReloadTimer:
T@"NSObject<OS_dispatch_queue>",&,N,V_serializer
setResetTimers:
T@"NSObject<OS_dispatch_queue>",R,N,V_internalQueue
setShouldSuppressScreenLightUp:
T@"NSObject<OS_dispatch_source>",&,N,V_timer
setSleepAlarms:
T@"NSSet",&,N,V_changedProperties
setSoundVolume:
T@"NSString",&,N
setSyncService:
T@"NSString",&,N,V_identifier
setSystemReady:
T@"NSString",&,N,V_title
setTimerServer:
T@"NSString",&,N,V_vibeID
setTriggerDate:
T@"NSString",C,N,V_archivedSessionDataFile
setUpdateBlock:
T@"NSString",C,N,V_eventName
setWithObjects:
T@"NSString",C,N,V_lifecycleNotification
snoozed
T@"NSString",C,N,V_name
stateMachineLog
T@"NSString",C,N,V_requiredEntitlement
stopped
T@"NSString",R
stringByAppendingPathComponent:
T@"NSString",R,C,N
successIntentResponseWithAlarm:
T@"NSString",R,N,V_name
syncChangeQueue
T@"NSString",R,N,V_toneIdentifier
timeDesignatorAppearsBeforeTime
T@"NSString",R,W,N
timeListener:didDetectSignificantTimeChangeWithCompletionBlock:
T@"NSURL",&,N,V_alarmIDURL
timerCategories
T@"NSUUID",R,N
timerID
T@"NSUUID",R,N,V_timerID
toLabel
T@"NSXPCConnection",&,N,V_connection
trigger
T@"NSXPCInterface",&,N,V_remoteObjectInterface
unSound
T@"SYService",&,N,V_service
unscheduleTimer
T@"UNUserNotificationCenter",&,N,V_notificationCenter
updateStateForAlarm:alarmEvent:
T@"_DKKnowledgeStore",R,N,V_knowledgeStore
vibrationWithIdentifierIsValid:
T@,&,N,V_clientLink
.cxx_destruct
T@"MTAlarm",R,N
PMSymbol
T@"MTSleepCoordinatorStateMachineAsleepState",&,N,V_asleepState
T#,R
T@"NPSManager",&,N,V_npsManager
T@"<MTAgentDiagnosticDelegate>",W,N,V_delegate
T@"NSArray",R,N
T@"<MTAlarmStorage>",&,N,V_alarmStorage
T@"NSDate",C,N,V_snoozeFireDate
T@"<MTAlarmStorage>",R,N,V_alarmStorage
T@"NSHashTable",&,N,V_observers
T@"<MTNotificationCenter>",&,N,V_notificationCenter
T@"NSString",C,N,V_defaultSound
T@"<MTPersistence>",&,N,V_defaults
T@"NSString",C,N,V_syncDataPath
T@"<MTScheduleable>",C,N,V_scheduleable
T@?,C,N,V_block
T@"<MTScheduler>",&,N,V_serializer
TB,N,GisEnabled
T@"<MTSleepSessionTracker>",&,N,V_sleepSessionTracker
TI,N,V_revision
T@"<MTSleepSessionTrackerDelegate>",W,N,V_sleepSessionTrackerDelegate
Td,N,V_syncDate
T@"<MTStateMachineInfoProvider>",W,N,V_infoProvider
_alarmScheduler
T@"<MTSyncDataModel>",W,N,V_syncDataModel
_cancel
T@"<MTSyncServiceDelegate>",W,N,V_delegate
_connectionLock
T@"<MTSyncStatusProviderDelegate>",W,N
_diagnosticDictionaryForAlarms:
T@"<MTSystemStateDelegate>",W,N,V_delegate
_exportedObject
T@"<MTTimerManagerIntentSupport>",&,N,V_timerManager
_isUpdateNeeded
T@"<MTTimerManagerProviding>",W,N,V_timerManagerProvider
_loadLocaleInfo
T@"<MTTimerStorage>",&,N,V_storage
_minute
T@"<NAScheduler>",&,N,V_callbackScheduler
_performAction:
T@"<NAScheduler>",&,N,V_workScheduler
_powerAssertion
T@"<NAScheduler>",R,N,V_internalScheduler
_queue_setAllAlarms:sleepAlarms:source:persist:notify:override:
T@"ALCity",R,N,V_alCity
_registerForDarwinNotifications
T@"Alarm",R,N,V_editingProxy
_resolveChange:
T@"DNDModeAssertionService",&,N,V_assertionService
_sendingSession
T@"HKSPFeatureAvailabilityStore",&,N,V_featureStore
_snoozeFireDate
T@"INObject",C,D,N
_stopMonitoring
T@"MTAgentDiagnosticListener",&,N,V_diagnostics
_syncID
T@"MTAlarm",&,N,V_cachedAlarm
_toneID
T@"MTAlarm",&,N,V_nextAlarm
_upgradeFromSpringboardDefaults
T@"MTAlarmCache",&,N,V_cache
_widgetProvider
T@"MTAlarmManager",&,N,V_alarmManager
addAlarm:withCompletion:source:
T@"MTAlarmManager",R,W,N,V_alarmManager
addTimer:withCompletion:source:
T@"MTAlarmMigrator",&,N,V_migrator
alarmDidUpdate:
T@"MTAlarmScheduler",W,N,V_scheduler
alarmID
T@"MTAlarmSnapshot",&,N,V_alarmSnapshot
alarmWithIDString:includeSleep:
T@"MTAlarmStorage",R,N,V_storage
applicationsDidFailToUninstall:
T@"MTApplicationWorkspaceObserver",R,N
arrayWithArray:
T@"MTCompanionSyncSession",&,N,V_receivingSession
buildConnection
T@"MTCoreDuetMonitor",&,N,V_coreDuetMonitor
categorySampleWithType:value:startDate:endDate:device:metadata:
T@"MTGCDTimer",&,N,V_timer
checkIn
T@"MTIntentAlarm",R,N
clients
T@"MTMetrics",&,N,V_metrics
confirmDisableAlarm:completion:
T@"MTObserverStore",&,N,V_observers
containsObject:
T@"MTPBAlarmProperties",&,N,V_alarmProperties
context
T@"MTPBSnoozeAction",&,N,V_snoozeAction
coreDuetMonitor
T@"MTPairedDeviceListener",R
dataFromChange:
T@"MTScheduledList",R,N,V_scheduledAlarms
dateWithTimeInterval:sinceDate:
T@"MTSessionsManager",&,N,V_sessionsManager
dealloc
T@"MTSleepCoordinator",W,N,V_sleepCoordinator
defaultPlayOptionsIsSleepAlarm:
T@"MTSleepCoordinatorStateMachineAwakeState",&,N,V_awakeState
dequeueChanges:
T@"MTSleepManager",R,N,V_sleepManager
details
T@"MTSleepModeStateMachine",&,N,V_stateMachine
dismissAlarmWithIdentifier:dismissAction:withCompletion:source:
T@"MTSleepModeStateMachineOffState",R,N,V_offState
donatedTimerIDs
T@"MTSleepSessionManager",&,N,V_sleepSessionManager
T@"MTSound",C,D,N
handleMTCreateAlarm:completion:
T@"MTStateMachine",W,N,V_stateMachine
handleMTUpdateAlarm:completion:
T@"MTSyncChangeQueue",&,N,V_syncChangeQueue
handler
T@"MTSystemStateListener",&,N,V_systemStateListener
hasDefaultTitle
T@"MTTimer",&,N,V_nextTimer
hasIsSleepAlarm
T@"MTTimerCache",&,N,V_cache
hideSensitiveUI
T@"MTTimerManager",R,W,N,V_timerManager
initWithDelegate:isSynchronous:
T@"MTTimerMigrator",&,N,V_migrator
initWithFormat:
T@"MTTimerScheduler",W,N,V_scheduler
initWithString:
T@"MTTimerSessionsCoordinator",&,N,V_timerSessionsCoordinator
isEqualToSound:
T@"MTTimerStorage",&,N,V_timerStorage
isEqualToTimer:
T@"MTTrigger",C,N,V_trigger
isProxy
T@"MTWidgetProvider",&,N,V_widgetProvider
isValid
T@"MTXPCConnectionListenerProvider",R,N,V_connectionListenerProvider
logTimerDeleted
T@"MTXPCScheduler",&,N,V_alarmTimeoutScheduler
lowercaseString
T@"NSArray",&,N,V_alarms
markNeedsUpdate
T@"NSArray",&,N,V_pendingChanges
metrics
T@"NSArray",C,D,N
mtCoder
T@"NSArray",R,N,V_cities
mtIsBeforeDate:
T@"NSDate",&,N,V_date
mtURLForScheme:
T@"NSDate",&,N,V_endDate
na_all:
T@"NSDate",&,N,V_lastLifecycleNotification
na_genericError
T@"NSDate",&,N,V_lastReloadRequestDate
na_timeoutError
T@"NSDate",&,N,V_snoozeDate
nextAlarmsForDateSync:maxCount:
T@"NSDate",&,N,VlastModified
nextTriggersAfterDate:includeSnooze:includeBedtimeNotification:
T@"NSDate",C,N,V_bedtimeDismissedDate
numberWithBool:
T@"NSDate",C,N,V_bedtimeSnoozeFireDate
options
T@"NSDate",C,N,V_date
pendingRequests
T@"NSDate",C,N,V_fireDate
postNotificationForAlarmsEdited
T@"NSDate",C,N,V_keepOffUntilDate
propertiesAffectingNotification
T@"NSDate",C,N,V_overriddenForDate
pushCityPropertiesToPreferences
T@"NSDate",R,N
release
T@"NSDate",R,N,V_sleepModeEndDate
removeAllDeliveredNotifications
T@"NSDictionary",&,N,V_changeDictionary
repeats
T@"NSDictionary",C,D,N
rescheduleAlarmsWithCompletion:
T@"NSDictionary",R,N
resume:
T@"NSMutableArray",&,N,V_changeQueue
scheduleAlarms:
T@"NSMutableArray",&,N,V_completionBlocks
scheduledAlarms
T@"NSMutableArray",&,N,V_orderedAlarms
scheduledAlertsAndNotifications
T@"NSMutableArray",&,N,V_processedChanges
serializerQueue
T@"NSMutableArray",&,N,V_stack
session
T@"NSMutableDictionary",&,N,V_observers
T@"NSMutableDictionary",&,N,V_pendingRequests
setAlarmSoundIdentifier:ofType:
T@"NSMutableDictionary",&,N,V_storage
setAudioVolume:
T@"NSMutableDictionary",R,N,V_alarmsByID
setBool:forKey:
T@"NSMutableOrderedSet",&,N,V_orderedScheduledEvents
setChangeQueue:
T@"NSMutableSet",&,N,V_clients
setDay:
T@"NSNotificationCenter",&,N,V_notificationCenter
setDismissDate:
T@"NSNumber",C,D,N
setHasRevision:
T@"NSNumber",C,N,V_bedtimeReminder
setInitialTime:
T@"NSNumber",R,N,V_mediaItemIdentifier
setNeedsUpdate:
T@"NSObject<OS_dispatch_group>",&,N,V_changesLoaded
setNumberStyle:
T@"NSObject<OS_dispatch_queue>",&,N,V_observerQueue
setPlayOptions:
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
setRequestType:
T@"NSObject<OS_dispatch_queue>",&,N,V_serializerQueue
setSerialQueue:
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
setSiriContext:
T@"NSObject<OS_os_transaction>",&,N,V_transaction
setSleepSessionTrackerDelegate:
T@"NSSet",&,N,V_nextAlarms
setSyncMetrics:
T@"NSString",&,N,V_alarmID
setSyncVersion:
T@"NSString",&,N,V_syncID
setTargetQueue:
T@"NSString",&,N,V_toneID
setTransaction:
T@"NSString",C,D,N
setTriggerType:
T@"NSString",C,N,V_archivedSessionDataPath
setVibrationID:
T@"NSString",C,N,V_identifier
sleepAlarmsSync
T@"NSString",C,N,V_machServiceName
started
T@"NSString",C,N,V_property
stopSyncService
T@"NSString",C,N,V_title
storage
T@"NSString",R,C
stringFromDate:
T@"NSString",R,N
suspend
T@"NSString",R,N,V_sound
syncSession:successfullySynced:
T@"NSString",R,N,V_vibrationIdentifier
timeDesignatorForDate:timeZone:
T@"NSTimer",&,N,V_reloadTimer
timeZonesForCurrentClockWidgets
T@"NSURL",R,N
timerDismissed:
T@"NSUUID",R,N,V_alarmID
timerWithInitialTime:fireBlock:
T@"NSUserDefaults",&,N,V_userDefaults
trackingEnabled
T@"NSXPCInterface",&,N,V_exportedObjectInterface
uiTitle
T@"NSXPCListener",&,N,V_connectionListener
unlocalizedName
T@"SYSession",&,N,V_session
updateSleepStateWithSleepAlarm:
T@"_CDClientContext",R,N,V_context
verifySettings:
T@,&,N,V_changedValue
writeAlarmEventsToBiome:ofType:
T@,&,N,V_exportedObject
T@,&,N,V_originalValue
T@,R,N
T@?,C,N,V_completableBlock
T@?,C,N,V_completionBlock
T@?,C,N,V_currentDateProvider
T@?,C,N,V_errorHandler
T@?,C,N,V_handler
T@?,C,N,V_reconnectHandler
T@?,C,N,V_sleepStoreProvider
T@?,C,N,V_updateBlock
T@?,C,N,V_updateHandler
TB,D,N
TB,D,N,GisEnabled
TB,N
TB,N,GisEnabled,V_enabled
TB,N,GisObserving,V_observing
TB,N,V_allowsSnooze
TB,N,V_completed
TB,N,V_forceActiveForMigration
TB,N,V_hideSensitiveUI
TB,N,V_internalHasBeenUnlockedSinceBoot
TB,N,V_isEnabled
TB,N,V_isHorseman
TB,N,V_isSleepAlarm
TB,N,V_loaded
TB,N,V_needPrefsUpdate
TB,N,V_needsAdditionalProcessing
TB,N,V_needsUpdate
TB,N,V_purged
TB,N,V_refreshManagers
TB,N,V_restoreDoneHandled
TB,N,V_sleepEnabled
TB,N,V_sleepMode
TB,N,V_sleepSchedule
TB,N,V_sleepTracking
TB,N,V_started
TB,N,V_systemReady
TB,N,V_timeInBedTracking
TB,R
TB,R,N
TB,R,N,GisActive
TB,R,N,GisFiring
TB,R,N,GisSnoozed
TB,R,N,GisSnoozed,V_snoozed
TB,R,N,GisSystemReady,V_systemReady
TB,R,N,V_isPastOverrideEvent
TB,R,N,V_pushAlertsEnabled
TB,R,N,V_timeDesignatorAppearsBeforeTime
TB,R,N,V_use24HourTime
TI,N,V_bedtimeDismissedAction
TI,N,V_bedtimeHour
TI,N,V_bedtimeMinute
TI,N,V_bedtimeReminderMinutes
TI,N,V_daySetting
TI,N,V_dismissedAction
TI,N,V_hour
TI,N,V_minute
TI,N,V_onboardingVersion
TI,N,V_playOptions
TI,N,V_sleepModeOptions
TI,N,V_soundType
TI,R,N,V_revision
TQ,D,N
TQ,N
TQ,N,V_backoffFactor
TQ,N,V_bedtimeDismissedAction
TQ,N,V_bedtimeHour
TQ,N,V_bedtimeMinute
TQ,N,V_currentBackoff
TQ,N,V_day
TQ,N,V_dismissedAction
TQ,N,V_endReason
TQ,N,V_hour
TQ,N,V_lastIndex
TQ,N,V_minute
TQ,N,V_month
TQ,N,V_onboardingVersion
TQ,N,V_options
TQ,N,V_playOptions
TQ,N,V_repeatSchedule
TQ,N,V_requestType
TQ,N,V_sleepModeOptions
TQ,N,V_state
TQ,N,V_triggerType
TQ,N,V_year
TQ,R
TQ,R,N
TQ,R,N,V_soundType
T^{__CFUserNotification=},N,V_notification
Td,D,N
Td,N,V_bedtimeDismissedDate
Td,N,V_bedtimeFiredDate
Td,N,V_bedtimeSnoozeFireDate
Td,N,V_defaultDuration
Td,N,V_delay
Td,N,V_dismissDate
Td,N,V_dismissedDate
Td,N,V_firedDate
Td,N,V_initialTime
Td,N,V_keepOffUntilDate
Td,N,V_lastModifiedDate
Td,N,V_mediaID
Td,N,V_snoozeDate
Td,N,V_snoozeFireDate
Td,N,V_syncVersion
Td,R,N
Td,R,N,V_assertionTimeout
Td,R,N,V_remainingTime
Tf,N,V_soundVolume
Tf,N,V_syncVersion
Tf,R,N
Ti,N,V_notifyToken
Ti,R,N
Tq,D,N
Tq,N
Tq,N,V_code
Tq,N,V_type
Tq,R,N
Tq,R,N,V_soundType
T{os_unfair_lock_s=I},N,V_alarmLock
T{os_unfair_lock_s=I},N,V_cacheLock
T{os_unfair_lock_s=I},N,V_lock
T{os_unfair_lock_s=I},N,V_observersLock
T{os_unfair_lock_s=I},R,N,V_connectionLock
URLWithString:
UTF8String
UUID
UUIDString
_actionHandler
_addStateHandler
_additionalAlarmsToScheduleForAlarms:
_alarm
_alarmID
_alarmIDURL
_alarmIntentDonor
_alarmLock
_alarmManager
_alarmNotificationActionForUserNotificationAction:category:
_alarmProperties
_alarmServer
_alarmSnapshot
_alarmStatesByAlarmID
_alarmStorage
_alarmSyncDataModel
_alarmTimeoutScheduler
_alarmUserActivityWithDisableIntent:
_alarmUserActivityWithEnableIntent:
_alarmUserActivityWithIntent:
_alarmWithIDStringAsync:
_alarmsByID
_alarmsIncludingSleepAlarm:doSynchronous:
_alertTypeForCategory:
_alive
_allIdentifiersForAlarm:
_allIdentifiersForAlarm:includeMainIdentifier:
_allIdentifiersForAlarm:includeMainIdentifier:includeSnooze:
_allowsSnooze
_alternateTimersForTargetTimerState:type:inTimers:allowedTimerStates:
_amString
_applicationWorkspace
_applyNecessaryChangesFromExistingAlarm:updatedAlarm:
_applyNecessaryChangesFromOldTimer:currentTimer:
_archivedSessionDataFile
_archivedSessionDataPath
_archiverScheduler
_asleepState
_assertionService
_assertionTimeout
_asyncRemoteObjectProxyWithErrorHandler:
_awakeState
_backoffFactor
_bedtimeDismissedAction
_bedtimeDismissedDate
_bedtimeFiredDate
_bedtimeHour
_bedtimeMinute
_bedtimeReminder
_bedtimeReminderMinutes
_bedtimeSnoozeFireDate
_block
_bundleID
_bundleIDForUNSchedule
_bypassReloadDate
_cache
_cacheLock
_cachedAlarm
_cachedSleepAlarm
_callbackScheduler
_cancelNotifications
_changeDictionary
_changeQueue
_changeStore
_changedProperties
_changedValue
_changes
_changesLoaded
_checkIfRestoreDone
_checkNowPlayingMediaState:
_checkSpringBoardStarted
_className
_cleanUpForInternalBuild:
_cleanUpSleepAlarmRepeat:
_cleanUpSnoozeFireDate:
_cleanupObserversForNotification:
_clearLocaleDependentState
_clientLink
_clients
_code
_completableBlock
_completed
_completionBlock
_completionBlocks
_connectedClients
_connectedDate
_connection
_connectionListener
_connectionListenerProvider
_connectionProvider
_connectionQueue
_connectionRebuildingIfNecessary
_context
_convertSleepAlarmToRegular:
_copyLegacyAlarmsFromPreferences
_copyLegacySleepAlarmFromPreferences
_copyStateOntoAlarm:
_copyStateOntoTimer:
_coreDuetMonitor
_countryCode
_countryName
_createDefaultTimerIfNeededWithCompletion:
_createSleepSessionWithUserWakeTime:endReason:
_createTimerWithIntent:dryRun:completion:
_currentClientForConnection:
_currentDateProvider
_currentState
_date
_date:isOnDay:calendar:
_dateIntervalFilter:
_dateOnlyFormatter
_day
_daySetting
_decodeObject:
_defaultDuration
_defaultSound
_defaults
_delay
_delegate
_deleteTimer:multiple:dryRun:completion:
_deserializer
_diagnosticDictionaryForAlarm:
_diagnosticDictionaryForTimer:
_diagnosticProviders
_diagnosticTimerDictionary
_diagnostics
_dictionaryForProtocolObject:
_dictionaryIsForSerializableObject:
_didCompleteSleepOnboarding
_didInterruptConnection
_didInvalidateConnection
_didInvalidateConnection:
_didReceiveAlarmServerReadyNotification:
_didReceiveTimerServerReadyNotification:
_dirty
_disabledState
_discardOldAlarms
_discardOldTimers
_discardOldVersion
_dismissAction
_dismissDate
_dismissedAction
_dismissedDate
_distributedNotificationForLocalNotification:
_donatedTimerIDs
_duration
_durationComponentsFormatter
_earliestTriggerDateForDate:
_editingProxy
_enabled
_encodeObject:forKey:
_encodeProtocolObject:forKey:
_endDate
_endReason
_enqueueChange:changeCompareBlock:
_error
_errorHandler
_eventName
_exportedObjectInterface
_featureStore
_filterScheduledObjects:withBlock:
_filterSleepAlarmOverrides:date:
_filteredAlarms:afterDate:maxCount:filter:
_fireDate
_fireScheduledAlarm:firedDate:completionBlock:
_fireScheduledTimer:firedDate:completionBlock:
_fireTime
_firedDate
_forceActiveForMigration
_genericallyResolveTargetTimer:multiple:allowedTimerStatesForFollowup:completion:
_getCachedAlarmsWithCompletion:doSynchronous:
_getCachedAlarmsWithFuture:finishBlock:
_getCachedTimersWithCompletion:doSynchronous:
_getCachedTimersWithFuture:finishBlock:
_goToBedIdentifier:
_handleAlarmNotificationResponse:withCompletionHandler:
_handleAlarmsDidChange
_handleF5Reset
_handleLanguageChanged
_handleNotification
_handleNotificationWithName:type:
_handlePauseTimer:dryRun:completion:
_handlePrefsChanged
_handleResetTimer:dryRun:completion:
_handleRestoreDone
_handleResumeTimer:dryRun:completion:
_handleTimerNotificationResponse:withCompletionHandler:
_handledNotifications
_handler
_has
_hasBeenUnlockedSinceBoot
_hasUnprocessedSessions
_healthStore
_hideSensitiveUI
_hour
_identifier
_info
_infoProvider
_initCommon
_initWithConnectionProvidingBlock:metrics:
_initWithConnectionProvidingBlock:metrics:notificationCenter:
_initialState
_initialTime
_internalHasBeenUnlockedSinceBoot
_internalQueue
_internalScheduler
_intervalToCheckForAlarmsToFireBeforeDate:
_intervalToCheckForTimersToFireBeforeDate:
_intervals
_isDefaultTimer:
_isEnabled
_isEqualToAlarm:checkLastModified:
_isEqualToChangeSet:checkOriginalValues:
_isEqualToTimer:checkLastModified:
_isHorseman
_isInternalBuild
_isPastOverrideEvent
_isPlayingMediaFromMRPlaybackState:
_isPushAlertsEnabledInPreferences
_isSleepAlarm
_isSpringBoardStarted
_isSystemReady
_isVendorRelease
_iterateObserversWithBlock:
_keepOffUntilDate
_languageChangeListener
_languageChangeNotification
_lastAlarmTriggerDate
_lastIndex
_lastLifecycleNotification
_lastModified
_lastModifiedDate
_lastReloadRequestDate
_latestKeyBagValueForHasBeenUnlockedSinceBoot
_launchDate
_lifecycleNotification
_listeners
_loadAlarms
_loadAlarmsWithCompletion:
_loadDefaultAlarmSound
_loadDefaultTimerSound
_loadScheduledNotifications
_loadTimerDefaults
_loadTimersWithCompletion:
_loadUserPreferences
_localNotificationForDistributedNotification:
_lock
_machServiceName
_matchTimersFromIntentsTimer:excludeStoppedTimers:completion:
_mediaID
_mediaItemIdentifier
_metadata
_metrics
_migrator
_month
_mtNextDateAfterDate:matchingComponents:backwards:
_mtNextDateAfterDate:matchingUnit:value:backwards:
_mutableContentForScheduledAlarmWithCommonSettings:
_name
_needPrefsUpdate
_needsAdditionalProcessing
_needsUpdate
_newBaseDateComponentsForDay:
_nextAlarm
_nextAlarms
_nextAlarmsForDate:maxCount:includeSleepAlarm:includeBedtimeNotification:doSynchronous:
_nextAlarmsInRange:maxCount:includeSleepAlarm:includeBedtimeNotification:doSynchronous:
_nextDateHelperAfterDate:nextDateBlock:
_nextDateHelperWithDate:calendar:
_nextScheduledAlertIncludingBedtimeNotification:
_nextScheduledObjectInSets:
_nextTimer
_nextTriggerDateForScheduling
_notification
_notificationCenter
_notificationCenterForScheduledAlarm:
_notificationCenterForScheduledTimer
_notificationCenters
_notificationManager
_notifications
_notifyClientsForTriggerType:
_notifyClientsOfChange
_notifyNano
_notifyObserversForAlarmAdd:source:
_notifyObserversForAlarmChange:source:
_notifyObserversForAlarmDismiss:dismissAction:source:
_notifyObserversForAlarmFire:triggerType:source:
_notifyObserversForAlarmRemoval:source:
_notifyObserversForAlarmSnooze:snoozeAction:source:
_notifyObserversForNextAlarmChange:source:
_notifyObserversForSleepAlarmChange:
_notifyObserversWithBlock:
_notifyToken
_npsManager
_numberFromString:
_objectForDictionary:
_observerQueue
_observers
_observersForBundleID
_observersLock
_observing
_offState
_onboardingVersion
_onlyUnnamedTimerInTimers:forTargetTimer:allowMultiple:
_options
_optionsForBackwards:
_orderedAlarms
_orderedScheduledAlerts
_orderedScheduledEvents
_orderedScheduledNotifications
_orderedTimers
_originalValue
_overriddenForDate
_pairedDevice
_pendingRequests
_performBlockOnClientInfos:excludingClient:
_performDismiss:
_performScheduleChangingBlock:withCompletion:
_performScheduleSnapshot
_persistence
_playOptions
_pmString
_postNotification:
_pretendActiveIfProxy
_processedChanges
_property
_purgeAlarmsAndTimers
_pushAlertsEnabled
_queue
_queuePersistAlarm:replacingAlarm:
_queuePersistTimer:replacingTimer:
_queue_actuallyRemoveAlarm:withCompletion:source:
_queue_addAlarm:withCompletion:source:
_queue_addTimer:withCompletion:source:
_queue_alarmMatchingAlarm:
_queue_alarmMatchingAlarmIdentifier:
_queue_allAlarms
_queue_allSleepAlarms
_queue_dismissAlarmWithIdentifier:dismissDate:dismissAction:withCompletion:source:
_queue_dismissMutableAlarm:dismissDate:dismissAction:
_queue_dismissTimerWithIdentifier:withCompletion:source:
_queue_donateCreateTimerIntent:source:
_queue_fireTriggeredAlarmsWithCompletionBlock:
_queue_fireTriggeredTimersWithCompletionBlock:
_queue_hasMatchingAlarm:
_queue_hasMatchingTimer:
_queue_lastTimerTriggerDate
_queue_nextScheduledTimer
_queue_nextTimer
_queue_notifyObserversForNextTimerChange:source:
_queue_notifyObserversForTimerAdd:source:
_queue_notifyObserversForTimerDismiss:source:
_queue_notifyObserversForTimerFire:source:
_queue_notifyObserversForTimerRemoval:source:
_queue_notifyObserversForTimerUpdate:source:
_queue_notifyObserversWithBlock:
_queue_persistAlarms
_queue_persistTimers
_queue_removeAlarm:withCompletion:source:
_queue_removeAlarmWithIdentifier:withCompletion:source:
_queue_removeAllAlarmsForSource:
_queue_removeAllTimersForSource:
_queue_removeTimer:withCompletion:source:
_queue_repeatTimerWithIdentifier:withCompletion:source:
_queue_rescheduleTimersWithCompletion:
_queue_resetAlarmsTo:sleepAlarms:
_queue_scheduleTimers:withCompletion:
_queue_setAllAlarms:sleepAlarms:source:
_queue_setAllAlarms:sleepAlarms:source:persist:notify:
_queue_setAllTimers:source:
_queue_setAllTimers:source:persist:notify:
_queue_snoozeAlarmWithIdentifier:snoozeDate:snoozeAction:withCompletion:source:
_queue_sortAlarms
_queue_sortSleepAlarms
_queue_sortTimers
_queue_timerMatchingTimerIdentifier:
_queue_triggerDidFireForAlarmWithCompletionBlock:
_queue_triggerDidFireForTimerWithCompletionBlock:
_queue_unregisterTimer
_queue_unscheduleTimers:
_queue_updateAlarm:withCompletion:source:
_queue_updateAlarmWithIdentifier:changeSet:withCompletion:source:
_queue_updateNextAlarmTimerWithCompletion:
_queue_updatePersistentTimerForNextTimerWithCompletion:
_queue_updateSleepAlarmsFromExistingAlarms:
_queue_updateTimer:withCompletion:source:
_queue_writeAlarmToKnowledgeStore:category:
_queue_writeCurrentStateToContextStore
_queue_writeNextAlarmStateToContextStore:
_quiescingWindow
_receivingSession
_reconcileAlarmsAndNotifications
_reconnectHandler
_refreshManagers
_registerForAlarmNotifications
_registerForDistributedNotifications
_registerForLiveDarwinNotification:
_registerForLocalNotifications
_registerForNotifications
_registerForXPCStream:notificationType:
_reloadLocaleInfo
_reloadTimer
_remainingTime
_remoteObjectInterface
_remoteObjectProxyWithXPCConnectionProvider:remoteObjectProxyProvider:errorHandler:
_removeAlarmDataIfNecessary:
_removeSessionDataFile
_removeSyncDataFile
_removeTimerDataIfNecessary:
_removeUserDefaultsData
_removeUserDefaultsDataIfNecessary:
_repeatDays
_request
_requestSync:
_requestType
_requiredEntitlement
_rescheduleAlarmsWithCompletion:
_resetCurrentToneIdentifier
_resolveChange:resolutionHandler:
_responseToCreateTimerIntent:withCreatedTimer:error:dryRun:
_responseToDeleteTimerIntent:withDeletedTimers:error:dryRun:
_responseToPauseTimerIntent:withPausedTimers:error:dryRun:
_responseToResetTimerIntent:withResetTimers:error:dryRun:
_responseToResumeTimerIntent:withResumedTimers:error:dryRun:
_responseToSetTimerAttributeIntent:withUpdatedTimer:error:dryRun:
_restoreDoneHandled
_restoreNotification
_retryConnection
_retryConnectionWithRecover:
_retryRequest
_retryTimer
_revision
_runningTimerFromCurrentTimer:withDuration:
_saveDefaultAlarmSound:
_saveDefaultTimerSound:
_scheduleObject:
_scheduleTask:withCompletion:
_scheduleable
_scheduledAlarms
_scheduledAlertMap
_scheduledListForTriggerType:
_scheduledNotifications
_scheduledObjectComparator
_scheduledTimers
_scheduler
_schedulingAssertionTimeout
_schedulingDelegate
_serialQueue
_serializer
_serializerQueue
_serializingProtocol
_service
_session
_sessionsManager
_setDonatedBySiri:
_setDuration:
_setExtensionBundleId:
_setGoToBedTitleAndBody:forGoToBedNotification:
_setLastAlarmTriggerDate:
_setLaunchId:
_setNanoLaunchId:
_setSpecificContent:forGoToBedNotification:
_setSpecificContent:forNormalScheduledAlarm:
_setSpecificContent:forScheduledAlarm:
_setSpecificContent:forSnoozeCountdownNotification:
_settings
_setupAlarms
_setupInitialListeners
_setupNotificationCenter
_setupSecondaryListeners
_setupSync
_setupSyncManagerWithBlock:
_setupTimers
_sharedPublicMetrics
_shouldNotifyForTrigger:
_shouldPostNotificationForScheduledAlarm:
_shouldUseBedtimeDismissedDateForAlarm:
_siriContext
_sleepAlarm
_sleepAlarms
_sleepCoordinator
_sleepEnabled
_sleepManager
_sleepMode
_sleepModeEndDate
_sleepModeMonitor
_sleepModeOptions
_sleepSchedule
_sleepSessionManager
_sleepSessionTracker
_sleepSessionTrackerDelegate
_sleepStateResolved
_sleepStore
_sleepStoreProvider
_sleepTracking
_snoozeAction
_snoozeCountdownIdentifier:
_snoozeDate
_snoozed
_sort:
_sortAndFilter:objectsToScheduleAhead:
_sortedAlarms:date:includeBedtimeNotification:
_sortedNextAlarmsAfterDate:includeSleepAlarm:includeBedtimeNotification:
_sortedNextAlarmsAfterDate:includeSleepAlarm:includeBedtimeNotification:doSynchronous:
_sound
_soundType
_soundVolume
_stack
_startDate
_startMonitoringWithQueue:
_started
_state
_stateMachine
_stateReset
_storage
_syncChangeQueue
_syncDataFile
_syncDataModel
_syncDataPath
_syncDate
_syncMetrics
_syncRemoteObjectProxyWithErrorHandler:
_syncService
_syncServiceManager
_syncStatusProvider
_syncStatusProviderDelegate
_syncVersion
_systemNotReadyError
_systemReady
_systemStateListener
_taskScheduler
_tasks
_timeDesignatorAppearsBeforeTime
_timeFormatter
_timeInBedTracking
_timeListener
_timeOnlyFormatter
_timeZone
_timer
_timer:conflictsWithRunningTimersInTimers:
_timerFromIntentTargetTimer:defaultState:
_timerID
_timerIntentDonor
_timerManager
_timerManagerProvider
_timerNotificationActionForUserNotificationAction:
_timerServer
_timerSessionsCoordinator
_timerSnapshot
_timerStorage
_timerTimeForState:remainingTime:currentDateProvider:
_title
_toggleAlarm:alarmIDString:completion:
_trackingEnabledForSleepAlarm:
_transaction
_trigger
_triggerDate
_triggerType
_type
_unlocalizedCountryName
_unlocalizedName
_unprocessedSessions
_unschedule:
_unscheduleAlarms:
_unscheduleObject:
_unwrap:
_updateAudioVolumeDynamicallyToValue:
_updateBlock
_updateCurrentTimerWithState:
_updateCurrentTimerWithStateSync:
_updateHandler
_updatePropertiesFromDeserializer:
_updateTimer:doSynchronous:
_updateTimer:dryRun:allowMultiple:excludeStoppedTimers:filterBlock:updateBlock:completion:
_updateTimer:dryRun:updateBlock:completion:
_updateTimer:toDuration:toLabel:dryRun:completion:
_upgrade
_upgradeAlarms
_upgradeIfNeverAttempted
_upgradeTimers
_use24HourTime
_userDefaults
_validateCanStartTimer:
_verifyRestoreDone
_vibrationID
_vibrationIdentifier
_waitingState
_wakeUpAlarmStringForAlarm:
_withLock:
_workScheduler
_writeSessionData
_year
abbreviation
actionHandler
actionIdentifier
actionWithIdentifier:title:options:
actionWithIdentifier:title:options:icon:
activate
active
activeModeAssertionWithError:
activePairedDeviceDidChange
activeSleepAlarm
addAlarm:
addAlarm:withCompletion:
addAlarms:
addAssertionUpdateListener:withCompletionHandler:
addCity:
addCompletionBlock:
addDefaultCitiesIfNeeded
addEntriesFromDictionary:
addFailureBlock:
addNotificationRequest:withCompletionHandler:
addObject:
addObjectsFromArray:
addObserver:
addObserver:forBundleIdentifier:
addObserver:selector:name:object:
addObserver:wasFirst:
addObserverForName:object:queue:usingBlock:
addSensitiveUIObserver:
addSuccessBlock:
addTimer:
addTimer:withCompletion:
afterDelay:performBlock:
agent
alCity
alCityId
alarm
alarmAtIndex:
alarmAtRow:
alarmConfiguration
alarmCount
alarmCountIncludingSleepAlarm:
alarmFired:
alarmFromOldAlarm:
alarmFromSleepOccurrence:scheduleEnabled:keepOffUntilDate:
alarmIDIntentObject
alarmIDKey
alarmIDString
alarmIDURL
alarmIntentDisplayString
alarmIntentDonor
alarmLock
alarmManager
alarmRepeatScheduleFrom:
alarmScheduler
alarmServer
alarmSnapshot
alarmSnoozed:
alarmSoundIdentifier
alarmSoundType
alarmSoundVolume
alarmStatesByAlarmID
alarmStorage
alarmStream
alarmSyncDataModel
alarmTimeoutScheduler
alarmURL
alarmWithHour:minute:
alarmWithIDString:
alarmWithIdentifier:withCompletion:
alarms
alarmsAdded:
alarmsAtIndex:
alarmsByID
alarmsCount
alarmsIncludingSleepAlarm:
alarmsRemoved:
alarmsSync
alarmsSyncIncludingSleepAlarm:
alarmsType
alarmsUpdated:
alertTopic
alertType
alertWithConfiguration:
allAlarms
allCities
allConfiguredWidgetsWithCompletion:
allObjects
allValues
allocWithZone:
allowsKeyedCoding
allowsSnooze
amString
appendBool:withName:
appendBool:withName:ifEqualTo:
appendFormat:
appendInteger:withName:
appendObject:withName:
appendObject:withName:skipIfNil:
appendString:
appendString:withName:
appendString:withName:skipIfEmpty:
applicationIconDidChange:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidCancel:
applicationInstallsDidChange:
applicationInstallsDidPause:
applicationInstallsDidPrioritize:
applicationInstallsDidResume:
applicationInstallsDidStart:
applicationInstallsDidUpdateIcon:
applicationState
applicationStateDidChange:
applicationWorkspace
applicationsDidChangePersonas:
applicationsDidFailToInstall:
applicationsDidInstall:
applicationsDidUninstall:
applicationsWillInstall:
applicationsWillUninstall:
applyChange:
applyChangesFromChangeSet:
applyChangesFromEditingProxy
applySettings:
archivedSessionDataFile
archivedSessionDataPath
archiverScheduler
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
asleepState
assertionService
assertionTimeOutForNotification:ofType:
assertionTimeout
assistantSyncNotificationName
assistantUILocalizedStringForKey:table:
attributeWithDomain:name:
audioVolume
authorizationStatusForType:
autorelease
awakeState
backoffFactor
bedtimeCategories
bedtimeComponents
bedtimeDismissedAction
bedtimeDismissedDate
bedtimeFiredDate
bedtimeHour
bedtimeMinute
bedtimeReminderMinutes
bedtimeSnoozeFireDate
beginListening
bestCityForLegacyCity:
block
boolForKey:
boolForKey:exists:
boolValue
bs_dayPeriodForDate:inLocale:
build
builderWithObject:
bundleIdentifier
bundleWithIdentifier:
bypassReloadDate
bypassReloadForAlarm:
bypassReloadForAlarms:
bytes
cStringUsingEncoding:
cache
cacheLock
cachedAlarm
cachedSleepAlarm
calculateNextAlarms
calendarWithIdentifier:
callbackScheduler
canAddCity
cancelNotifications
cancelNotificationsWithIdentifiers:
cancelTimer
caseInsensitiveCompare:
categoryForScheduledAlarm:
categoryForScheduledTimer:
categoryIdentifier
categoryTypeForIdentifier:
categoryWithIdentifier:actions:intentIdentifiers:options:
changeDictionary
changeFromData:ofType:
changeQueue
changeSetByAddingChangeSet:
changeSetWithChangesFromObject:toObject:
changeSetWithChangesFromObject:toObject:inProperties:
changeStore
changeType
changedProperties
changedValue
changedValueForProperty:hasProperty:
changesLoaded
checkForPendingChanges
checkIfCitiesModified
checkSystemReady
cities
citiesMatchingIdentifiers:
citiesMatchingName:
citiesWithIdentifiers:
city
cityDataNeedsUpdate
cityName
cityWithIdUrl:
class
cleanDeliveredNotifications
cleanUpOldNotifications
clearAlarms
clearOutCityUpdatePref
clientInfoForConnection:clientLink:
clientLink
clockAppSectionURL
clocks
code
combineAllFutures:ignoringErrors:scheduler:
combineAllFutures:scheduler:
compare:
compareTime:
completableBlock
complete:
completed
completionBlocks
component:fromDate:
components:fromDate:
componentsJoinedByString:
componentsSeparatedByString:
configureConnection:
confirmCreateTimer:completion:
confirmDeleteTimer:completion:
confirmEnableAlarm:completion:
confirmGetAlarms:completion:
confirmMTCreateAlarm:completion:
confirmMTDisableAlarm:completion:
confirmMTEnableAlarm:completion:
confirmMTUpdateAlarm:completion:
confirmPauseTimer:completion:
confirmResetTimer:completion:
confirmResumeTimer:completion:
confirmSearchForTimers:completion:
confirmSetTimerAttribute:completion:
confirmToggleAlarm:completion:
confirmUpdateAlarm:completion:
confirmationRequiredWithAlarmOperationToConfirm:
confirmationRequiredWithAlarmStateToConfirm:
confirmationRequiredWithAlarmToConfirm:
confirmationRequiredWithMTCityToConfirm:
confirmationRequiredWithMTWorldClockToConfirm:
confirmationRequiredWithObjectToConfirm:
confirmationRequiredWithRepeatDayToConfirm:
confirmationRequiredWithStringToConfirm:
confirmationRequiredWithTimeIntervalToConfirm:
confirmationRequiredWithTimerToConfirm:
confirmationRequiredWithTimerTypeToConfirm:
confirmationRequiredWithValueToConfirm:
confirmedLastBedtimeReminder
conflicts:
conformsToProtocol:
connectedClients
connectedDate
connection
connectionListener
connectionListenerProvider
connectionLock
connectionProvider
connectionWithEndpoint:
containsDate:
containsObserver:
contentForScheduledAlarm:
contentForScheduledTimer:
continueInAppIntentResponseWithState:
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
countryCode
countryName
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createSessionWithTimer:
createUserInfoWithIntentName:alarmIDString:time:label:
currentBackoff
currentCallCount
currentClient
currentConnection
currentDate
currentDateProvider
currentHandler
currentLocale
currentNotificationCenter
currentSleepScheduleWithError:
currentSleepSettingsWithCompletion:
currentSleepSettingsWithError:
currentState
currentTime
currentTimer
currentTimerFromTimers:
data
dataFileName
dataSource:didAddAlarms:
dataSource:didRemoveAlarms:
dataSource:didUpdateAlarms:
dataSourceDidReload:
dataWithPropertyList:format:options:error:
dataWithSYObject:
databaseWasRebuilt
date
dateByAddingTimeInterval:
dateByAddingUnit:value:toDate:options:
dateBySettingHour:minute:second:ofDate:options:
dateComponents
dateFormatFromTemplate:options:locale:
dateFromComponents:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
dayAndTimeZoneOffsetStringFromDate:withTimeZoneOffset:timeZoneAbbreviation:spaceBeforeTimeDesignator:hoursOnly:numericOnly:
daySetting
daylightSavingTimeOffsetForDate:
debugDescription
decodeBoolForKey:
decodeChangeData:fromProtocolVersion:ofType:
decodeDoubleForKey:
decodeFloatForKey:
decodeInt32ForKey:
decodeInt64ForKey:
decodeIntForKey:
decodeIntegerForKey:
decodeObjectForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultAlarmForToggleAlarm:
defaultAssertionTimeOutForNotification:type:
defaultBlock
defaultCenter
defaultCitiesAdded
defaultCitiesForLocaleCode:options:
defaultCitiesShownInWorldClock
defaultManager
defaultPlayOptions
defaultRepeatScheduleForMTCreateAlarm:
defaultSearchableIndex
defaultSleepModeOptions
defaultSound
defaultSoundForCategory:
defaultToneIdentifierForAlertType:
defaultVibrationIdentifierForAlertType:
defaultWorkspace
defaults
defaultsKeys
deferredLocalizedIntentsStringWithFormat:fromTable:bundle:
delay
delegate
deleteCharactersInRange:
deleteInteractionsWithGroupIdentifiers:bundleID:protectionClass:completionHandler:
deleteMultiple
description
descriptionBuilderWithMultilinePrefix:
descriptionForCategory:
descriptionForState:
descriptionWithLocale:
deserialize:
deserializedChangedValueForProperty:hasProperty:
detailsWithIdentifier:modeIdentifier:lifetime:
determineNextState:
determineNextStateForSleepAlarm:
deviceFirstUnlocked
deviceManagementPolicyDidChange:
deviceSupportsSyncing
diagnostics
dictionary
dictionaryForKey:
dictionaryFromChanges:
dictionaryRepresentation
dictionaryWithContentsOfFile:
dictionaryWithDictionary:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
didEnterWithPreviousState:
didExitWithNextState:
didReceiveNotification:
didReceiveNotificationNamed:
didReceiveSpringboardStarted:
disabledState
disambiguationWithAlarmsToDisambiguate:
disambiguationWithMTCitysToDisambiguate:
disambiguationWithMTWorldClocksToDisambiguate:
disambiguationWithObjectsToDisambiguate:
disambiguationWithRepeatDaysToDisambiguate:
disambiguationWithTimersToDisambiguate:
discoverabilitySignal
dismissAction
dismissAlarmWithIdentifier:
dismissAlarmWithIdentifier:dismissAction:
dismissAlarmWithIdentifier:dismissAction:withCompletion:
dismissAlarmWithIdentifier:dismissDate:dismissAction:withCompletion:source:
dismissDate
dismissNotificationsForAlarm:
dismissNotificationsForAlarm:dismissAction:
dismissNotificationsForAlarm:includeMainIdentifier:
dismissNotificationsForAlarm:includeMainIdentifier:includeSnooze:
dismissNotificationsForAlarm:includeSnooze:
dismissNotificationsForTimer:
dismissNotificationsWithIdentifiers:
dismissRelatedNotificationsForScheduledAlarm:
dismissTimerWithIdentifier:
dismissTimerWithIdentifier:withCompletion:
dismissTimerWithIdentifier:withCompletion:source:
dismissedDate
displayNameIncludingCountry:
displayString
displayTitle
distantFuture
distantPast
distributedNotificationPosted:
domain
donateInteractionWithCompletion:
donatesIntent
dontNotify
doubleValue
dropEditingProxy
duration
earlierDate:
editingProxy
encodeBool:forKey:
encodeDouble:forKey:
encodeFloat:forKey:
encodeInt32:forKey:
encodeInt64:forKey:
encodeInt:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeSYChangeForBackwardCompatibility:protocolVersion:
encodeWithCoder:
encodedData
encodedDictionary
endReason
endSessionWithDate:reason:
endpointForMachName:service:instance:
enqueueChange:
enterState:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumerateObservers:
enumerateObserversWithBlock:
error
errorHandler
errorOnlyCompletionHandlerAdapter
errorWithDomain:code:userInfo:
eventName
eventWithStream:startDate:endDate:value:metadata:
expectedFireDateKey
exportedObject
exportedObjectInterface
failureRequiringAppLaunchIntentResponseWithState:
featureStore
fileExistsAtPath:
fileExistsAtPath:isDirectory:
finishDecoding
finishEncoding
finishSessionWithTimer:
finishWithError:
finishWithNoResult
finishWithResult:
finishWithResult:error:
fireDate
fireTime
firedDate
firing
firingAlarmCount
firstIndex
firstObject
firstWeekday
fixUpCityProperties:
flatMap:
floatForKey:
floatForKey:exists:
floatValue
forceActiveForMigration
futureWithError:
futureWithNoResult
futureWithResult:
gatherDiagnostics
getActivePairedDevice
getAlarmsWithCompletion:
getCachedAlarmsSyncWithCompletion:
getCachedAlarmsWithCompletion:
getCachedTimersSyncWithCompletion:
getCachedTimersWithCompletion:
getCurrentTimerSync
getDeliveredNotificationsWithCompletionHandler:
getEnableStateForAlarm:
getOverriddenDate
getPendingNotificationRequestsWithCompletionHandler:
getTimersWithCompletion:
globalAsyncScheduler
handleAlarmNotificationIdentifier:action:category:completionHandler:
handleBedtimeForAlarm:date:
handleBedtimeReminderForAlarm:date:
handleConfirmationOfGoToBedNotificationForAlarm:date:
handleCreateTimer:completion:
handleDeleteTimer:completion:
handleDisableAlarm:completion:
handleDismissForAlarm:dismissAction:date:
handleEnableAlarm:completion:
handleF5Reset
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleGetAlarms:completion:
handleMTDisableAlarm:completion:
handleMigrationFinish
handleNotification:ofType:completion:
handlePauseTimer:completion:
handleResetTimer:completion:
handleResumeTimer:completion:
handleSearchForTimers:completion:
handleSetTimerAttribute:completion:
handleSleepSessionEndedForAlarm:date:reason:
handleSnoozeForAlarm:date:
handleSnoozeOfGoToBedNotificationForAlarm:date:
handleSystemReady
handleToggleAlarm:completion:
handleUpdateAlarm:completion:
handleWakeUpTimeForAlarm:date:
handlesNotification:ofType:
hasActivePairedDevice
hasActivePairedDeviceCheckSyncing:
hasActivePairedDeviceSupportingSyncing
hasActiveTimerSession
hasAlarmID
hasBedtimeDismissedAction
hasBedtimeDismissedDate
hasBedtimeFiredDate
hasBedtimeHour
hasBedtimeMinute
hasBedtimeReminderMinutes
hasBedtimeSnoozeFireDate
hasBeenUnlockedSinceBoot
hasChangeForProperty:
hasChangesInCommonWithChangeSet:
hasChangesInProperties:
hasDaySetting
hasDismissAction
hasDismissedAction
hasDismissedDate
hasFiredDate
hasIsEnabled
hasKeepOffUntilDate
hasLastModifiedDate
hasMediaID
hasMinute
hasOnboardingVersion
hasPendingChanges
hasPlayOptions
hasPrefix:
hasRevision
hasSleepAlarmMatchingAlarmIDString:
hasSleepMode
hasSleepModeOptions
hasSleepSchedule
hasSleepTracking
hasSnoozeFireDate
hasSound
hasSoundVolume
hasTimeInBedTracking
hasTitle
hasToneID
hasVibeID
hash
healthStore
helperPlaceholdersInstalled:
helperPlaceholdersUninstalled:
host
hour
iconWithSystemImageName:
idUrl
identifier
immediateScheduler
inMemoryStore
inProgressIntentResponseWithState:
incomingCall
incrementEventCount:
indexForAlarm:
indexOfObject:
indexOfObjectPassingTest:
indexesOfObjectsPassingTest:
info
infoForMachServiceName:remoteObjectInterface:exportedObject:exportedObjectInterface:lifecycleNotification:requiredEntitlement:options:
infoForMachServiceName:remoteObjectInterface:options:
infoProvider
init
initForReadingFromData:error:
initFromDeserializer:
initRequiringSecureCoding:
initWithALCityIdentifier:
initWithActivityType:
initWithAlarmManager:
initWithAlarmStorage:
initWithAlarmStorage:currentDateProvider:
initWithAlarmStorage:sleepCoordinator:
initWithAlarmStorage:sleepCoordinator:currentDateProvider:
initWithAlarmStorage:sleepCoordinator:sleepSessionTracker:
initWithAlarmStorage:sleepStoreProvider:featureStoreProvider:healthStore:persistence:
initWithAlarmStorage:syncMetrics:
initWithAlarmStorage:syncMetrics:syncServiceManagerBlock:serializer:serialQueue:
initWithAlarmStorage:timerStorage:
initWithArray:
initWithBundleID:
initWithBundleIdentifier:
initWithBundleIdentifier:allowPlaceholder:error:
initWithCallbackScheduler:
initWithCapacity:
initWithChangeDictionary:
initWithChangeStore:
initWithChanges:
initWithCode:userActivity:
initWithCoder:
initWithConnection:clientLink:
initWithConnectionInfo:errorHandler:
initWithConnectionInfo:errorHandler:reconnectHandler:
initWithConnectionProvider:metrics:
initWithConnectionProvider:metrics:notificationCenter:
initWithContentsOfFile:
initWithCurrentTimeFromCurrentDateProvider:
initWithData:
initWithDataModel:
initWithDate:
initWithDate:currentDateProvider:
initWithDate:type:
initWithDate:type:isPastOverrideEvent:
initWithDelegate:
initWithDelegate:infoProvider:
initWithDescription:timeout:timeoutBlock:
initWithDismissedObjectIdentifier:dismissDate:date:version:
initWithDomain:verb:parametersByName:
initWithEncodedDictionary:
initWithEvent:
initWithEventType:alarmID:isSleepAlarm:
initWithExtensionBundleIdentifier:kind:
initWithFeatureIdentifier:sleepStore:
initWithHealthStore:
initWithHour:minute:
initWithHour:minute:currentDateProvider:
initWithIdentifier:
initWithIdentifier:bundleID:context:
initWithIdentifier:displayString:
initWithInitialTime:backoffFactor:fireBlock:queue:
initWithInt:
initWithIntent:response:
initWithKeepOffUntilDate:stateMachine:
initWithLabel:duration:remainingTime:identifier:state:type:
initWithLabel:duration:type:
initWithLocaleIdentifier:
initWithMachServiceName:
initWithMachServiceName:options:
initWithMachServiceName:remoteObjectInterface:exportedObject:exportedObjectInterface:lifecycleNotification:requiredEntitlement:options:
initWithMediaItemIdentifier:vibrationIdentifier:volume:
initWithMetrics:
initWithName:
initWithName:assertionTimeout:
initWithObjects:
initWithPersistence:
initWithPersistence:migrator:serializer:callbackScheduler:currentDateProvider:
initWithPreferences:
initWithProperties:
initWithProperty:changedValue:originalValue:
initWithQueue:
initWithRequestType:
initWithScheduleable:trigger:
initWithService:priority:asMasterStore:options:
initWithSession:delegate:
initWithSession:request:delegate:
initWithSettings:
initWithSleepModeEndDate:stateMachine:
initWithSnoozedObjectIdentifier:snoozeDate:date:version:
initWithSound:usingVolume:
initWithSpokenPhrase:
initWithStartDate:endDate:
initWithStartDate:endDate:intervals:endReason:metadata:
initWithState:duration:
initWithState:duration:currentDateProvider:
initWithStateMachine:
initWithStorage:
initWithStorage:connectionListenerProvider:
initWithStorage:notificationCenter:
initWithStorage:notificationCenter:scheduler:defaults:
initWithStorage:notificationCenter:scheduler:defaults:schedulingDelegate:taskScheduler:currentDateProvider:
initWithSuiteName:
initWithSyncService:syncStatusProvider:syncDataModel:syncMetrics:
initWithSyncService:syncStatusProvider:syncDataModel:syncMetrics:syncChangeStore:
initWithSyncStatusProvider:
initWithTimeInterval:
initWithTimeZone:countryCode:name:countryName:unlocalizedName:unlocalizedCountryName:
initWithTimeout:
initWithTimerManager:
initWithTimerResolutionResult:
initWithToneIdentifier:vibrationIdentifer:volume:
initWithType:
initWithType:name:powerAssertionTimeout:
initWithUUIDString:
initWithUpdateBlock:
initWithUserDefaults:
initialState
initialTime
insertObject:atIndex:
intValue
integerForKey:defaultValue:
integerForKey:exists:
integerForKey:isValid:defaultValue:
integerValue
intent
intentAlarm
intentLabel
interfaceWithIdentifier:
interfaceWithProtocol:
internalHasBeenUnlockedSinceBoot
internalQueue
internalScheduler
interruptAudio
interruptAudioAndLockDeviceWithCompletionBlock:
intersectsSet:
intervals
invalidate
invalidateActiveModeAssertionWithError:
invalidationDate
isActive
isApplicationInstalledForBundleIdentifier:
isApplicationInstalledForBundleIdentifier:allowPlaceholder:
isBedtimeRelated
isBedtimeSnoozed
isCachedLanguageStaleForProperties:
isCachedLanguageStaleForProperties:systemLanguage:
isCurrentOnboardingVersionCompletedWithError:
isCurrentTimer
isDaylightSavingTime
isEnabled
isEqual:
isEqualIgnoringLastModifiedDate:
isEqualToDate:
isEqualToDictionary:
isEqualToScheduledObject:
isEqualToSet:
isEqualToString:
isEqualToTime:
isEqualToTimeZone:
isEqualToTrigger:
isEquivalentToChangeSet:
isFinished
isFiring
isForAlert
isForGoToBed
isForNotification
isForSnooze
isFromOtherDevice
isHorseman
isInstalled
isItemEnabled
isKindOfClass:
isMasterStore
isMemberOfClass:
isObserving
isPastOverrideEvent
isPlaceholder
isPushAlertsEnabled
isScheduled
isScheduled:
isSending
isSilent
isSingleDayOverride
isSingleTime
isSingleTimeAlarm
isSleepAlarm
isSleepItem
isSleepModeEnabled:
isSleepModeEnabled:error:
isSleepModeOn
isSnoozed
isSpringboardStarted
isSystemReady
isSystemRestoreDone
isUserAsleep
isValidDateComponent:
isVisible
isWorldClockCityProperties:
keepOffUntilDate
keyPathForCurrentAlarms
keyPathForNextAlarm
knowledgeStore
label
languageChangeListener
lastIndex
lastLifecycleNotification
lastModified
lastModifiedDate
lastObject
lastReloadRequestDate
laterDate:
latitude
launchDate
launchURLForScheme:
length
lifecycleNotification
lifetime
lifetimeWithDateInterval:
listener:shouldAcceptNewConnection:
listeners
liveDarwinNotifications
loadAlarms
loadAlarmsSync
loadChanges
loadCities
loadLegacyData
loadTimers
loadTimersSync
loadUserPreferences
loaded
localDevice
locale
localeCode
localeIdentifier
localeWithLocaleIdentifier:
localizedCaseInsensitiveContainsString:
localizedStringForKey:value:table:
localizedStringFromDate:dateStyle:timeStyle:
localizedTimeStringFromDate:forTimeZone:timeDesignator:
localizedTimeStringFromDate:timeDesignator:
lock
logAlarmAdded:
logAlarmDeleted:
logAlarmDismissAction:
logAlarmSnoozeAction:
logAlarmUpdated:
logMessage:
logMultipleTimersAdded:
logSyncCompleted
logSyncFailedWithError:
logTimerAdded
logTimerDismissed
logTimerRepeated
longLongValue
longditude
longitude
mainBundle
mainQueue
markModified
markSleepMigrationComplete
maximumAllowedDuration
mediaItemIdentifier
merge:
mergeFrom:
metadata
metadataForAlarm:
migrateFromOldStorage
migrator
minute
modeAssertionService:didReceiveModeAssertionInvalidation:
modeAssertionService:didUpdateActiveModeAssertion:
month
mostRecentlyUpdatedAlarmForAlarms:
moveCityFromIndex:toIndex:
mtCityFromWorldClockCity:
mtClockAppSection
mtDateIntervalWithEndDate:duration:
mtDateNearestMatchingComponents:
mtDateRequiresSingularTimeString:
mtDescription
mtEarliest:
mtFinishWithFuture:
mtGreetingString:
mtGregorianCalendar
mtID
mtIsAfterDate:
mtIsAfterOrSameAsDate:
mtIsBeforeOrSameAsDate:
mtIsForLastTimer
mtIsIn24HourTime
mtIsList
mtLatest:
mtMainThreadScheduler
mtMidnightForDate
mtNextDateAfterDate:matchingComponents:
mtNextDateAfterDate:matchingUnit:value:
mtNotifiyingQueue
mtNow
mtPreviousDateBeforeDate:matchingComponents:
mtPreviousDateBeforeDate:matchingUnit:value:
mtSerialSchedulerForObject:
mtSetIntentDonorFromSource:
mtStringByAppendingNotificationDate:
mtStringByRemovingNotificationDate
mtStringByRemovingNotificationPrefixes
mtSynchronousResult:
mtTimeIntervalSinceComponents:
mtTimeIntervalSinceComponents:now:
mtTimeOnlyFormatter
mtType
mtURLForClockAppSection:
mtURLForClockAppSection:timerManager:
mtUserActivityWithActivityType:title:
mtUserActivityWithActivityType:title:keywords:
mt_Description
mt_deleteDonationsForAlarm:completion:
mt_initWithAlarm:verb:
mt_intentForAlarmCreate:
mt_intentForAlarmDisable:
mt_intentForAlarmEnable:
mt_intentForAlarmUpdate:
mt_nanoAlarmBundleIDForAlarm:
mutableCopy
mutableCopyWithZone:
na_dictionaryByMappingValues:
na_dictionaryWithKeyGenerator:
na_each:
na_filter:
na_firstObjectPassingTest:
na_safeAddObjectsFromArray:
na_safeSetObject:forKey:
name
needsAdditionalProcessing
needsUpdate
needsValue
networkUsageChanged:
nextAlarm
nextAlarmChanged:
nextAlarmInHoursThreshold:
nextAlarmIncludingBedtimeNotification:
nextAlarmSync
nextAlarms
nextAlarmsForDate:maxCount:
nextAlarmsForDate:maxCount:includeBedtimeNotification:
nextAlarmsForDate:maxCount:includeSleepAlarm:
nextAlarmsForDate:maxCount:includeSleepAlarm:includeBedtimeNotification:
nextAlarmsForDateSync:maxCount:includeBedtimeNotification:
nextAlarmsForDateSync:maxCount:includeSleepAlarm:
nextAlarmsForDateSync:maxCount:includeSleepAlarm:includeBedtimeNotification:
nextAlarmsInRange:maxCount:includeSleepAlarm:
nextAlarmsInRange:maxCount:includeSleepAlarm:includeBedtimeNotification:
nextAlarmsInRangeSync:maxCount:includeSleepAlarm:
nextAlarmsInRangeSync:maxCount:includeSleepAlarm:includeBedtimeNotification:
nextDateAfterDate:matchingComponents:options:
nextDateAfterDate:matchingUnit:value:options:
nextExpectedBedtimeDateAfterDate:
nextExpectedRefreshDate
nextExpectedWakeUpDateAfterDate:
nextFireDate
nextFireDateAfterDate:
nextFireDateAfterDate:includeBedtimeNotification:
nextFutureAlarmDate
nextScheduledAlarmIncludingBedtimeNotification:
nextScheduledAlert
nextScheduledAlertOrNotification
nextScheduledObject
nextScheduledObjectWithTriggerType:
nextSleepAlarm
nextSleepAlarmWithCompletion:
nextSleepModeEndDate
nextSleepModeEndDateAfterDate:
nextSleepModeStartDate
nextSleepModeStartDateAfterDate:
nextTimer
nextTimerChanged:
nextTimerDidChange:
nextTimersForDate:maxCount:
nextTrigger
nextTriggerAfterDate:
nextTriggerAfterDate:includeBedtimeNotification:
nextTriggerAfterDate:includeSnooze:includeBedtimeNotification:
nextTriggerAfterDate:ofType:
nextTriggerDateIncludingBedtimeNotification:
nextTriggersAfterDate:
nextTriggersAfterDate:includeBedtime:
nextTriggersAfterDate:inclusionOptions:
nextWidgetAlarmInThreshold
normalizedTimeString:state:
notRequired
notification
notificationCategories
notificationCenter
notificationCenters
notificationManager
notificationObject
notificationPrefixes
notificationWithType:name:
notificationWithType:name:powerAssertionTimeout:
notifications
notifyObserversForSleepAlarmChange:
notifyObserversForSleepAlarmChangeIfNecessary:
notifyObserversWithBlock:
notifyToken
nowDateForOffsetCalculation
npsManager
null
numberFromString:
numberOfAlarms
numberOfScheduledAlerts
numberOfScheduledAlertsAndNotifications
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
objectAtIndex:
objectAtIndexedSubscript:
objectEnumerator
objectForKey:
objectForKey:defaultValue:
objectForKeyedSubscript:
objectIdentifier
objectsAtIndexes:
observeLaunchProhibitedApps
observedApplicationDidInstallForBundleIdentifier:
observedApplicationDidUninstallForBundleIdentifier:
observerQueue
observers
observersForBundleID
observersLock
observing
occurrences
offState
onStateWithSleepModeEndDate:
onboardingVersion
operatingSystemVersionString
operation
orderedAlarms
orderedScheduledAlerts
orderedScheduledEvents
orderedScheduledNotifications
orderedTimers
originalValue
overriddenForDate
overridesAlarm:trigger:calendar:
overridesNextAlarm:date:calendar:
overridesScheduledObject:calendar:
pairedDevice
pairedDeviceVersion
path
pauseCurrentTimer
pauseCurrentTimerSync
pauseMultiple
pauseSessionWithTimeRemainingString:remainingPortion:
pauseTimer
pendingChanges
pendingChangesSent:
performBlock:
performBlockOnAllClients:
performBlockOnAllClients:excludingClient:
performBlockOnAllClients:excludingCurrent:
performBlockOnClientInfos:excludeCurrent:
performBlockOnCurrentClient:
performBlockOnceChangesAreLoaded:async:
performCancelableBlock:
performRemoteBlock:
performRemoteBlock:withErrorHandler:
performRemoteBlock:withErrorHandler:isSynchronous:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performSyncBlock:
persistChanges
persistence
persistentStoreForDataModel:
platformSpecificSourceBundleIdentifier
playOptions
playOptionsForOccurrence:
playWithCompletionHandler:
playsOnThisDevice
pluginsDidInstall:
pluginsDidUninstall:
pluginsWillUninstall:
pmString
postBedtimeNotificationForAlarm:date:
postNotificationForAlarmActiveChanged
postNotificationForScheduledAlarm:completionBlock:
postNotificationForScheduledAlarm:content:completionBlock:
postNotificationForScheduledTimer:completionBlock:
postNotificationForUserPreferences:localNotifications:
postNotificationName:object:
postNotificationName:object:userInfo:
postNotificationName:object:userInfo:deliverImmediately:
postNotificationWithIdentifier:title:message:defaultButtonTitle:otherButtonTitle:bypassDND:handler:
powerAssertion
preferred:
prepareAlarms
prepareEditingProxy
previewWithCompletionHandler:
printDiagnostics
processID
processIdentifier
processInfo
processName
processTimerUpdate:
processedChanges
processedSessionForSession:
properties
propertiesAffectingBedtime
propertiesAffectingSnooze
propertiesAffectingSync
propertiesAffectingWaketime
property
protocol
protocolForProtocol:
provideAlarmOptionsCollectionForToggleAlarm:withCompletion:
provideAlarmOptionsForToggleAlarm:withCompletion:
provideRepeatScheduleOptionsCollectionForMTCreateAlarm:withCompletion:
provideRepeatScheduleOptionsForMTCreateAlarm:withCompletion:
providerWithConnectionInfo:errorHandler:
providerWithConnectionInfo:reconnectHandler:
purged
pushAlertsEnabled
queue
rangeOfString:
rangeOfString:options:
readFrom:
readyIntentResponseWithState:
reason
receivingSession
reconnect
reconnectHandler
recover:
refreshActiveState
refreshManagersForPreferences:localNotifications:
registerActionHandler:
registerForNotifications
registerListener:
registerNotification:observer:
registerObserver:
relayFrameworkNotification:
releaseAssertion
reloadAlarmWidgetTimeline
reloadAlarms
reloadAlarmsNotifyObservers:
reloadTimeline
reloadTimelineWithReason:
reloadTimer
remainingTime
remoteObjectInterface
remoteObjectProxyWithErrorHandler:
remoteProcess
remoteTargetWithLaunchingAssertionAttributes:
removeAlarm:
removeAlarm:withCompletion:
removeAlarm:withCompletion:source:
removeAlarmWithIdentifier:withCompletion:source:
removeAllAlarmsForSource:
removeAllObjects
removeAllPendingNotificationRequests
removeAssertionUpdateListener:
removeCity:
removeCityAtIndex:
removeClientConnection:
removeDeliveredNotificationsWithIdentifiers:
removeFromOldStorage
removeItemAtPath:error:
removeLastObject
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectsInArray:
removeObserver:name:object:
removeObserver:wasLast:
removePendingChanges
removeSensitiveUIObserver:
removeTimer:
removeTimer:withCompletion:
removeTimer:withCompletion:source:
repeatDays
repeatSchedule
repeatScheduleFromOldAlarm:
repeatTimerWithIdentifier:
repeatTimerWithIdentifier:withCompletion:
repeatTimerWithIdentifier:withCompletion:source:
replaceObjectAtIndex:withObject:
requestDescription
requestIdentifierForScheduledAlarm:
requestSync:
requestType
requestWithIdentifier:content:trigger:destinations:
requestWithType:
requiredEntitlement
requiresAppLaunch
reschedule:
rescheduleTimers
resendTimerDataEntry
reset
resetDataStore
resetDataStoreForSyncSession:completion:
resetMultiple
resetSleepAlarmSnoozeState
resetSleepAlarmSnoozeStateWithCompletion:
resetSnoozeFireDate
resetSystemTimeZone
resolutionResultUnsupportedWithReason:
resolveAlarmForToggleAlarm:withCompletion:
resolveChange:
resolveDateComponentsForMTCreateAlarm:withCompletion:
resolveDeleteMultipleForDeleteTimer:withCompletion:
resolveDurationForCreateTimer:withCompletion:
resolveDurationForSearchForTimers:withCompletion:
resolveLabelForCreateTimer:withCompletion:
resolveLabelForMTCreateAlarm:withCompletion:
resolveLabelForSearchForTimers:withCompletion:
resolveOperationForToggleAlarm:withCompletion:
resolvePauseMultipleForPauseTimer:withCompletion:
resolveRepeatScheduleForMTCreateAlarm:withCompletion:
resolveResetMultipleForResetTimer:withCompletion:
resolveResumeMultipleForResumeTimer:withCompletion:
resolveStateForSearchForTimers:withCompletion:
resolveStateForToggleAlarm:withCompletion:
resolveTargetTimerForDeleteTimer:withCompletion:
resolveTargetTimerForPauseTimer:withCompletion:
resolveTargetTimerForResetTimer:withCompletion:
resolveTargetTimerForResumeTimer:withCompletion:
resolveTargetTimerForSetTimerAttribute:withCompletion:
resolveToDurationForSetTimerAttribute:withCompletion:
resolveToLabelForSetTimerAttribute:withCompletion:
resolveTypeForCreateTimer:withCompletion:
resolveTypeForSearchForTimers:withCompletion:
respondsToSelector:
restoreDidFinish
restoreDoneHandled
resume
resumeCurrentTimer
resumeCurrentTimerSync
resumeMultiple
resumeTimer
retain
retainCount
retryTimer
reverseObjectEnumerator
revision
rowForAlarm:
rowForAlarmWithID:
sampleType
saveAndNotifyForUserPreferences:localNotifications:
saveCities
saveObjects:error:
schedule:afterDate:withCompletion:
scheduleActivityWithCriteria:activityHandler:
scheduleActivityWithCriteria:activityHandler:performImmediately:
scheduleOverridenForDate:
scheduleSnapshot
scheduleTask:
scheduleTaskGroup:
scheduleTimerForSeconds:
scheduleable
scheduledAlertMap
scheduledListDidChange:withCompletion:
scheduledNotifications
scheduledObjectForScheduleable:trigger:
scheduledObjects
scheduledObjectsToFireBeforeDate:
scheduledObjectsToFireInInterval:
scheduledTypeForTriggerType:
scheduler
scheduler:didChangeNextAlarm:
scheduler:didChangeNextTimer:
scheduler:didFireAlarm:
scheduler:didFireTimer:
schedulerWithDispatchQueue:
schedulingDelegate
scheme
secondsFromGMTForDate:
self
sendCriticalEvent:
sendEvent:
sendingSession
sensitiveUIStateChanged
sequencer
serialDispatchQueueSchedulerWithName:
serialQueue
serialSchedulerForObject:
serialSchedulerWithName:
serialize
serializeWithSerializer:
serializer
server
service:didSwitchFromPairingID:toPairingID:
service:encounteredError:context:
service:incomingData:completion:
service:incomingStream:metadata:completion:
service:receivingSessionEnded:error:
service:sendingSessionEnded:error:
service:sessionEnded:error:
service:startReceivingSession:error:
service:startSendingSession:error:
service:startSession:error:
service:targetDeviceConnectionChanged:
service:targetDeviceProximityChanged:
service:willPreferSession:overSession:
service:willSwitchFromPairingID:toPairingID:
serviceDidPairDevice:
serviceDidUnpairDevice:
serviceForClientIdentifier:
sessionClass
sessionDescription
setAbbreviation:
setActionHandler:
setActivationHandler:
setAlarm:
setAlarmID:
setAlarmIDURL:
setAlarmIntentDonor:
setAlarmLock:
setAlarmManager:
setAlarmProperties:
setAlarmScheduler:
setAlarmSnapshot:
setAlarmSoundVolume:
setAlarmStorage:
setAlarmSyncDataModel:
setAlarmTimeoutScheduler:
setAlarms:
setAlertTopic:
setAllAlarms:sleepAlarms:source:
setAllTimers:source:
setAllowedUnits:
setAllowsSnooze:
setApplicationWorkspace:
setArchivedSessionDataFile:
setArchivedSessionDataPath:
setAssertionService:
setAwakeState:
setBackoffFactor:
setBedtimeDismissedAction:
setBedtimeDismissedDate:
setBedtimeFiredDate:
setBedtimeMinute:
setBedtimeReminder:
setBedtimeReminderMinutes:
setBedtimeSnoozeFireDate:
setBlock:
setBody:
setBool:forKey:notification:
setBypassReloadDate:
setCache:
setCacheLock:
setCachedSleepAlarm:
setCalendar:
setCallbackScheduler:
setCategoryIdentifier:
setChangeDictionary:
setChangedProperties:
setChangedValue:
setChanges:
setChangesLoaded:
setCities:
setCityName:
setClasses:forSelector:argumentIndex:ofReply:
setClient:
setClientLink:
setClientMessagingExpectation:
setClients:
setCode:
setCompletableBlock:
setCompleted:
setCompletionBlock:
setCompletionBlocks:
setConnectedDate:
setConnection:
setConnectionListener:
setConnectionQueue:
setCoreDuetMonitor:
setCreatedTimer:
setCurrentBackoff:
setCurrentDateProvider:
setCurrentState:
setCurrentToneIdentifier:forAlertType:topic:
setCurrentVibrationIdentifier:forAlertType:topic:
setDate:
setDateComponents:
setDateFormat:
setDateStyle:
setDaySetting:
setDefaultActionURL:
setDefaultCitiesAdded:
setDefaultDuration:
setDefaultSound:
setDefaultSound:forCategory:
setDefaults:
setDelay:
setDelegate:
setDelegate:queue:
setDeletedTimers:
setDisabledState:
setDismissAction:
setDismissedAction:
setDismissedDate:
setDoesRelativeDateFormatting:
setDuration:
setEligibleForHandoff:
setEligibleForPublicIndexing:
setEligibleForSearch:
setEnabled:
setEndDate:
setEndReason:
setError:
setErrorHandler:
setEventName:
setExpirationDate:
setExportedInterface:
setExportedObject:
setExportedObjectInterface:
setFeatureStore:
setFireDate:
setFireTime:
setFiredDate:
setFiring:
setFloat:forKey:
setFloat:forKey:notification:
setForPreview:
setForceActiveForMigration:
setFormattingContext:
setGroupIdentifier:
setHandler:
setHasAllowsSnooze:
setHasBedtimeDismissedAction:
setHasBedtimeDismissedDate:
setHasBedtimeFiredDate:
setHasBedtimeHour:
setHasBedtimeMinute:
setHasBedtimeReminderMinutes:
setHasBedtimeSnoozeFireDate:
setHasChangesAvailable
setHasDaySetting:
setHasDismissedAction:
setHasDismissedDate:
setHasFiredDate:
setHasHour:
setHasIsEnabled:
setHasIsSleepAlarm:
setHasKeepOffUntilDate:
setHasLastModifiedDate:
setHasMediaID:
setHasMinute:
setHasOnboardingVersion:
setHasPlayOptions:
setHasSleepMode:
setHasSleepModeOptions:
setHasSleepSchedule:
setHasSleepTracking:
setHasSnoozeFireDate:
setHasSoundVolume:
setHasTimeInBedTracking:
setHideSensitiveUI:
setHour:
setIdentifier:
setInfo:
setInfoProvider:
setInteger:forKey:
setInterface:
setInterfaceTarget:
setInternalHasBeenUnlockedSinceBoot:
setInterruptionHandler:
setIntervals:
setInvalidationHandler:
setIsEnabled:
setIsHorseman:
setIsSleepAlarm:
setKeepOffUntilDate:
setKeywords:
setLabel:
setLanguageChangeListener:
setLastIndex:
setLastLifecycleNotification:
setLastModified:
setLastModifiedDate:
setLastReloadRequestDate:
setLatitude:
setLaunchDate:
setLifecycleNotification:
setListPriority:
setListeners:
setLoaded:
setLocale:
setLocalizedDateFormatFromTemplate:
setLock:
setLongditude:
setMachServiceName:
setMatchedTimers:
setMaximumDuration:
setMediaID:
setMetadata:
setMetrics:
setMigrator:
setMinute:
setMonth:
setName:
setNeedPrefsUpdate:
setNeedsAdditionalProcessing:
setNextAlarm:
setNextAlarms:
setNextTimer:
setNotification:
setNotificationCategories:
setNotificationCenter:
setNotificationCenters:
setNotificationManager:
setNotifications:
setNpsManager:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKey:notification:
setObject:forKeyedSubscript:
setObserverQueue:
setObservers:
setObserversForBundleID:
setObserversLock:
setObserving:
setOnboardingVersion:
setOperation:
setOptions:
setOrderedAlarms:
setOrderedScheduledAlerts:
setOrderedScheduledEvents:
setOrderedScheduledNotifications:
setOrderedTimers:
setOriginalValue:
setOverriddenDate:
setOverriddenForDate:
setPairedDevice:
setPausedTimers:
setPendingChanges:
setPendingRequests:
setPositiveFormat:
setPowerAssertion:
setProcessedChanges:
setProperty:
setPurged:
setQueue:
setReceivingSession:
setReconnectHandler:
setRefreshManagers:
setRemoteObjectInterface:
setRepeatSchedule:
setRequest:
setRequiredEntitlement:
setRestoreDoneHandled:
setResumedTimers:
setRetryTimer:
setRevision:
setScheduleable:
setScheduledAlertMap:
setScheduledNotifications:
setScheduler:
setSecond:
setSendingSession:
setSerializer:
setSerializerQueue:
setServer:
setService:
setServiceQuality:
setSession:
setSessionsManager:
setShouldBackgroundDefaultAction:
setShouldIgnoreDoNotDisturb:
setShouldIgnoreRingerSwitch:
setShouldPreemptPresentedNotification:
setShouldPreventNotificationDismissalAfterDefaultAction:
setShouldRepeat:
setSleepAlarm:
setSleepCoordinator:
setSleepEnabled:
setSleepMode:
setSleepModeMonitor:
setSleepModeOptions:
setSleepSchedule:
setSleepSessionManager:
setSleepSessionTracker:
setSleepStateResolved:
setSleepStore:
setSleepStoreProvider:
setSleepTracking:
setSnoozeAction:
setSnoozeDate:
setSnoozeFireDate:
setSound:
setSound:ofType:
setSoundType:
setSourceBundleIdentifier:
setStack:
setStartDate:
setStarted:
setState:
setStateMachine:
setStorage:
setSyncChangeQueue:
setSyncDataFile:
setSyncDataModel:
setSyncDataPath:
setSyncDate:
setSyncID:
setSyncServiceManager:
setSyncStatusProvider:
setSyncStatusProviderDelegate:
setSystemStateListener:
setTasks:
setTimeInBedTracking:
setTimeInterval:forKey:
setTimeInterval:forKey:notification:
setTimeListener:
setTimeStyle:
setTimeZone:
setTimeZoneName:
setTimer:
setTimerIntentDonor:
setTimerManager:
setTimerManagerProvider:
setTimerScheduler:
setTimerSessionsCoordinator:
setTimerSnapshot:
setTimerStorage:
setTitle:
setToneID:
setToneIdentifier:
setToneMediaLibraryItemIdentifier:
setTopic:
setTrigger:
setType:
setUnitsStyle:
setUnmatchedTimers:
setUpdateHandler:
setUpdatedTimer:
setUserActivity:
setUserDefaults:
setUserInfo:
setUserVisibleEndDate:
setValue:
setValue:forKey:
setVibeID:
setVibrationIdentifier:
setWantsNotificationResponsesDelivered
setWeekday:
setWeekdayOrdinal:
setWidgetProvider:
setWithArray:
setWithObject:
setWithSet:
setWorkScheduler:
setYear:
settings
setupInterface
setupListeners
setupNotificationCenter
setupSyncDataFileForDataModel:
sharedDeviceListener
sharedInstance
sharedListener
sharedManager
sharedManagerWithPreferences:
sharedMonitor
sharedRelay
sharedToneManager
sharedUserDefaults
sharedVibrationManager
sharedWorkspaceObserver
shouldBeScheduled
shouldBypassWidgetReload
shouldHideForSensitivity:
shouldRetryForError:
shouldScheduleSnapshotForAlarms:
singleTimeOverrideDateInCalendar:
siriContext
sleepAlarm
sleepAlarmSync
sleepAlarmWasDismissedOnDate:source:completion:
sleepAlarmWasModifiedFromSource:completion:
sleepAlarmWasSnoozedUntilDate:source:completion:
sleepAlarmWithHour:minute:
sleepAlarmWithHour:minute:bedtimeHour:bedtimeMinute:
sleepAlarmWithHour:minute:year:month:day:bedtimeHour:bedtimeMinute:
sleepAlarmWithId:
sleepAlarmWithSchedule:
sleepAlarms
sleepCoordinator
sleepCoordinator:bedtimeReminderDidFire:sleepAlarm:
sleepCoordinator:bedtimeReminderWasConfirmed:sleepAlarm:
sleepCoordinator:bedtimeReminderWasSnoozed:sleepAlarm:
sleepCoordinator:bedtimeWasReached:sleepAlarm:
sleepCoordinator:sleepAlarmDidChange:
sleepCoordinator:sleepModeManuallyExited:sleepAlarm:
sleepCoordinator:sleepSessionEnded:reason:sleepAlarm:
sleepCoordinator:userWentToBed:sleepAlarm:
sleepCoordinator:userWokeUp:sleepAlarm:
sleepCoordinator:wakeUpAlarmDidFire:sleepAlarm:
sleepCoordinator:wakeUpAlarmWasDismissed:dismissAction:sleepAlarm:
sleepCoordinator:wakeUpAlarmWasSnoozed:sleepAlarm:
sleepCoordinator:waketimeWasReached:sleepAlarm:
sleepDuration
sleepDurationSeconds
sleepEnabled
sleepEventRecord
sleepManager
sleepMode
sleepMode:
sleepModeEnabled:userRequested:date:
sleepModeEndDate
sleepModeMonitor
sleepModeOptions
sleepModeTimeoutMinutes
sleepSampleWithInterval:sampleType:metadata:
sleepSchedule
sleepScheduleModelWithError:
sleepScheduleString:
sleepSessionManager
sleepSessionTracker
sleepSessionTracker:sessionDidComplete:
sleepSessionTrackerDelegate
sleepStateResolved
sleepStore
sleepStore:sleepEventDidOccur:
sleepStore:sleepModeOnDidChange:
sleepStore:sleepScheduleDidChange:
sleepStore:sleepScheduleStateDidChange:
sleepStore:sleepSettingsDidChange:
sleepStoreProvider
sleepTimeOutMinutes
sleepTimersWithState:
sleepTracking
snoozeAction
snoozeAlarmWithIdentifier:
snoozeAlarmWithIdentifier:snoozeAction:
snoozeAlarmWithIdentifier:snoozeAction:withCompletion:
snoozeAlarmWithIdentifier:snoozeAction:withCompletion:source:
snoozeAlarmWithIdentifier:snoozeDate:snoozeAction:withCompletion:source:
snoozeDate
snoozeFireDate
songSoundWithIdentifier:vibrationIdentifier:volume:
sortUsingComparator:
sortUsingSelector:
sortedArrayUsingComparator:
sound
soundByUpdatingVibrationIdentifier:
soundByUpdatingVolume:
soundFromOldAlarm:
soundType
soundVolume
soundWithAlertType:
source
source:didAddAlarms:
source:didAddTimers:
source:didChangeNextAlarm:
source:didDismissAlarm:dismissAction:
source:didDismissTimer:
source:didFireAlarm:triggerType:
source:didFireTimer:
source:didRemoveAlarms:
source:didRemoveTimers:
source:didSnoozeAlarm:snoozeAction:
source:didUpdateAlarms:
source:didUpdateTimers:
sourceIdentifier
spokenPhrase
springboardStartMonitor:didReceiveStarted:
stack
standardUserDefaults
start
startCurrentTimerWithDuration:
startCurrentTimerWithDurationSync:
startDate
startListening
startOfDayForDate:
startSession
startSessionWithEstimatedEndDate:duartion:
startSyncService
startSyncServices
startTimer:block:
state
stateChangeIsAllowableFromState:toState:
stateKey
stateMachine
stateMachine:disengageSleepModeUserRequested:
stateMachine:dismissWakeUpAlarm:dismissAction:
stateMachine:engageSleepModeUntilDate:userEngaged:
stateMachine:keepSleepModeOffUntilDate:
stateMachine:scheduleUpdateForSecondsFromNow:
stateMachine:shouldScheduleAlarmTimeoutForSecondsFromNow:
stateMachineClearKeepSleepModeOff:
stateMachineName
stateMachineUserWentToBed:
stateMachineUserWokeUp:
stop
stopCurrentTimer
stopCurrentTimerSync
stopListening
stopSession
stopSyncServices
stopTimer
string
stringByAppendingFormat:
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:
stringFromDate:withRelativeToTimeZone:
stringFromDateComponents:
stringFromNumber:
stringValue
stringWithCString:encoding:
stringWithFormat:
stringWithUTF8String:
subarrayWithRange:
submitEvent:eventParameters:
substringFromIndex:
successIntentResponseWithAlarms:
successIntentResponseWithState:alarm:
successWithResolvedAlarm:
successWithResolvedAlarmOperation:
successWithResolvedAlarmState:
successWithResolvedDateComponents:
successWithResolvedMTCity:
successWithResolvedMTWorldClock:
successWithResolvedObject:
successWithResolvedRepeatDay:
successWithResolvedString:
successWithResolvedTimeInterval:
successWithResolvedTimer:
successWithResolvedTimerType:
successWithResolvedValue:
succinctDescription
succinctDescriptionBuilder
superclass
supportsCapability:
supportsSecureCoding
supportsSessions
syncChange:
syncDataFile
syncDataModel
syncDataPath
syncDate
syncDismissOfObjectWithIdentifier:dismissDate:date:
syncDismissOfObjectWithIdentifier:dismissDate:date:version:
syncID
syncIdentifier
syncMetrics
syncService
syncServiceManager
syncSession:applyChanges:completion:
syncSession:didEndWithError:
syncSession:enqueueChanges:error:
syncSession:resetDataStoreWithError:
syncSession:restartChanges:
syncSession:rollbackChangesWithError:
syncSnoozeOfObjectWithIdentifier:snoozeDate:date:
syncSnoozeOfObjectWithIdentifier:snoozeDate:date:version:
syncStatus
syncStatusProvider
syncStatusProvider:didChangeSyncStatus:
syncStatusProviderDelegate
syncType
syncVersion
synchronize
synchronizeUserDefaultsDomain:keys:
synchronousRemoteObjectProxyWithErrorHandler:
systemReady
systemStateListener
systemTimeZone
takeAssertion
takeModeAssertionWithDetails:error:
targetTimer
taskGroupWithTasks:completionBlock:
taskScheduler
taskWithIdentifier:completableBlock:
taskWithIdentifier:delay:completableBlock:
tasks
tearDownNotificationsForEventIdentifiers:
time
timeComparator
timeDesignatorForDate:
timeInBedSessionWithStartDate:endDate:intervals:endReason:metadata:
timeInBedTracking
timeIntervalForKey:defaultValue:
timeIntervalForKey:exists:
timeIntervalForKey:isValid:defaultValue:
timeIntervalSinceDate:
timeIntervalSinceReferenceDate
timeListener
timeObject
timeZone
timeZoneAbbreviation
timeZoneDisplayName
timeZoneForOffsetCalculation
timeZoneForSecondsFromGMT:
timeZoneFromCities:
timeZoneName
timeZoneOffset
timeZoneOffsetFromGMT
timer
timerByRestarting
timerByUpdatingWithState:
timerFinished
timerFired:
timerIDString
timerIntentDonor
timerManager
timerManagerProvider
timerScheduler
timerServer
timerSessionsCoordinator
timerSnapshot
timerStorage
timerURL
timerWithInitialTime:backoffFactor:fireBlock:
timerWithInitialTime:backoffFactor:fireBlock:queue:
timers
timersAdded:
timersRemoved:
timersSync
timersUpdated:
title
toDuration
toneID
toneIdentifier
toneMediaLibraryItemIdentifier
toneSoundWithIdentifier:vibrationIdentifer:volume:
transaction
transactionWithDescription:
transactionWithDescription:timeout:
transactionWithDescription:timeout:timeoutBlock:
transferMetadataForSleepAlarm:fromPrevious:
triggerDate
triggerType
triggerWithDate:triggerType:
triggerWithDate:triggerType:isPastOverrideEvent:
type
unSoundForCategory:
unionSet:
unlocalizedCityName
unlocalizedCountryName
unlocalizedExampleCity
unregisterForNotifications
unregisterNotification:observer:
unregisterObserver:
unschedule:
unscheduleActivity
unscheduleAlarms:
unscheduleTimers:
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unspecifiedIntentResponseWithState:
unsupported
unsupportedForReason:
upcomingScheduleOccurrenceAfterDate:error:
upcomingTriggersAfterDate:
updateALDataWithCity:
updateActiveDeviceInfo
updateAlarm:
updateAlarm:reload:
updateAlarm:withCompletion:
updateAlarm:withCompletion:source:
updateAlarmCaches:
updateAlarmWithIdentifier:changeSet:withCompletion:source:
updateBlock
updateEnableStateForAlarm:enabled:
updateHandler
updateLastModifiedDateForAlarms:
updateModeKeepOffUntilDateIfNecessary
updateMonitorState
updatePreview:
updateSleepAlarms
updateSleepAlarms:source:
updateSleepAlarmsWithBlock:source:
updateSleepAlarmsWithCompletion:
updateSleepState
updateState
updateState:
updateStateForNextAlarm:
updateStateForSleepAlarm:
updateTimer:
updateTimer:withCompletion:
updateTimer:withCompletion:source:
updateTimerWithState:
updatedDataForCityWithID:
updatedTimezoneForCityWithID:
use24HourTime
userBedTimeReached:
userContext
userDefaults
userDisengagedSleepMode
userDisengagedSleepModeOnDate:
userInfo
userInfoForAlarm:
userInfoForTimer:
userInitiated
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userRequestedOffStateWithKeepOffUntilDate:
userWakeTimeReached:
userWakeUpAlarmFired
userWentToBed
userWokeUp
value
valueForEntitlement:
valueForKey:
valueForProperty:
verifyDaySetting:withMessageList:
verifyHourSetting:withMessageList:
verifyIdSetting:withMessageList:
verifyMinuteSetting:withMessageList:
vibeID
vibrationID
vibrationIdentifier
waitForUnlock
waitingState
wakeUpAlarmTimedOut
wakeUpComponents
wakeUpConfirmedUntilDate
warmUp
watchSleepFeaturesEnabled
weakObjectsHashTable
weekdays
widget
widgetConfigurations
widgetOverrideDate
widgetProvider
widgetURL
willEnterWithPreviousState:
willExitWithNextState:
workScheduler
worldClockCityFromPersistenceArray:
worldClockCityFromPersistenceDictionary:
worldClockCityFromPersistenceRepresentation:
writeAlarmEventToBiome:ofType:
writeAlarmToKnowledgeStore:alarmEvent:
writeAlarmUpdatedEventForAlarms:
writeSession:
writeTo:
writeToFile:atomically:
xpcSchedulerWithEvent:
year
zone
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v32@0:8@"INPauseTimerIntent"16@?<v@?@"INPauseTimerIntentResponse">24
v32@0:8@"INPauseTimerIntent"16@?<v@?@"INTimerResolutionResult">24
v32@0:8@"INPauseTimerIntent"16@?<v@?@"INBooleanResolutionResult">24
v32@0:8@"INResumeTimerIntent"16@?<v@?@"INResumeTimerIntentResponse">24
v32@0:8@"INResumeTimerIntent"16@?<v@?@"INTimerResolutionResult">24
v32@0:8@"INResumeTimerIntent"16@?<v@?@"INBooleanResolutionResult">24
v36@0:8@16B24@?28
@44@0:8@16@24@32B40
@56@0:8@16@24@32Q40@48
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
q16@0:8
@"NSDate"16@0:8
@"NSArray"16@0:8
@"NSDictionary"16@0:8
v20@0:8B16
v24@0:8Q16
v16@0:8
@"NSDate"
@"NSArray"
@"NSDictionary"
@"PBCodable"16@0:8
@24@0:8@"PBCodable"16
v24@0:8@"<MTSerializer>"16
@24@0:8@"<MTSerializer>"16
B32@0:8@16@24
@?16@0:8
@24@0:8q16
q24@0:8@16
v20@0:8I16
v24@0:8q16
v32@0:8@16q24
I16@0:8
@"Alarm"
@"NSMutableDictionary"
@"NSString"
@"NSURL"
@"<AlarmDelegate>"
@40@0:8@16@24Q32
@72@0:8@16@24@32@40@48@56Q64
@"NSXPCInterface"
v32@0:8@"MTEnableAlarmIntent"16@?<v@?@"MTEnableAlarmIntentResponse">24
v32@0:8@"MTDisableAlarmIntent"16@?<v@?@"MTDisableAlarmIntentResponse">24
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"MTToggleAlarmIntentResponse">24
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"MTAlarmStateResolutionResult">24
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"MTIntentAlarmResolutionResult">24
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"INObjectCollection"@"NSError">24
@"MTIntentAlarm"24@0:8@"MTToggleAlarmIntent"16
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@16@24@?32
@28@0:8@16B24
B32@0:8@16q24
v40@0:8@16q24@?32
d32@0:8@16q24
B32@0:8@"NSString"16q24
v40@0:8@"NSString"16q24@?<v@?>32
d32@0:8@"NSString"16q24
v32@0:8@16@24
@?24@0:8@16
@32@0:8@16@?24
@24@0:8Q16
v32@0:8@?16@?24
@"<MTScheduledListDelegate>"
@"NSMutableOrderedSet"
@32@0:8@16@24
f24@0:8@16
v28@0:8f16@20
@24@0:8@"NSString"16
@32@0:8@"NSString"16@24
f24@0:8@"NSString"16
v32@0:8@16@"NSString"24
v28@0:8f16@"NSString"20
@32@0:8q16@24
v32@0:8@"MTTimerScheduler"16@"MTTimer"24
v32@0:8@"MTTimerScheduler"16@"MTScheduledObject"24
v24@0:8@"NSString"16
v24@0:8@?16
v40@0:8@16@?24@32
v24@0:8@"<MTTimerObserver>"16
v24@0:8@?<v@?@"NSArray"@"MTTimer"@"NSError">16
v40@0:8@"MTTimer"16@?<v@?@"NSError">24@"<MTSource>"32
v40@0:8@"NSString"16@?<v@?@"NSError">24@"<MTSource>"32
v32@0:8@"NSArray"16@"<MTSource>"24
@"MTTimer"16@0:8
@56@0:8@16@24@32@40@?48
v40@0:8@16@24B32B36
@40@0:8@16@?24@32
@"MTMetrics"
@"MTTimerScheduler"
@"NSMutableArray"
@"MTTimerMigrator"
@"<NAScheduler>"
@"MTObserverStore"
@"<MTPersistence>"
d16@0:8
@24@0:8^{_NSZone=}16
@"NSCoder"16@0:8
v28@0:8B16@20
v32@0:8q16@24
v28@0:8i16@20
v32@0:8d16@24
i24@0:8@16
d24@0:8@16
v40@0:8@16@24Q32
v32@0:8@"<MTSource>"16@"NSArray"24
v40@0:8@"<MTSource>"16@"MTAlarm"24Q32
v32@0:8@"<MTSource>"16@"MTAlarm"24
@"MTAlarmStorage"
v24@0:8@"<MTSyncable>"16
@56@0:8@16@24@?32@40@48
@"MTSyncServiceManager"
@"NSObject<OS_dispatch_queue>"
v24@0:8@"NSDate"16
B20@0:8B16
@"NRDevice"
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
@"UNUserNotificationCenter"
@"MTPBAlarmProperties"
@40@0:8@16@?24@?32
v36@0:8@?16@?24B32
@24@0:8@?16
@40@0:8@?16@?24@?32
{os_unfair_lock_s=I}16@0:8
@"NSXPCConnection"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"MTXPCConnectionInfo"
v24@0:8B16B20
@"NAFuture"16@0:8
@"NAFuture"24@0:8@"NSObject<MTTimerIntentSupport>"16
@"NAFuture"24@0:8Q16
v32@0:8@"DNDModeAssertionService"16@"DNDModeAssertion"24
v32@0:8@"DNDModeAssertionService"16@"DNDModeAssertionInvalidation"24
B24@0:8^B16
@"MTAlarm"16@0:8
B36@0:8@16@24B32
B28@0:8@16B24
v32@0:8@16d24
B36@0:8@"MTSleepModeStateMachine"16@"NSDate"24B32
B28@0:8@"MTSleepModeStateMachine"16B24
v32@0:8@"MTSleepModeStateMachine"16@"NSDate"24
v24@0:8@"MTSleepModeStateMachine"16
v32@0:8@"MTSleepModeStateMachine"16d24
v40@0:8@16@24@32
v48@0:8@16@24Q32@40
v40@0:8@"MTSleepCoordinator"16@"NSDate"24@"MTAlarm"32
v48@0:8@"MTSleepCoordinator"16@"NSDate"24Q32@"MTAlarm"40
v32@0:8@"MTSleepCoordinator"16@"MTAlarm"24
v32@0:8@"MTTimeListener"16@?<v@?>24
@40@0:8@16@24@?32
B32@0:8^B16^@24
B24@0:8^@16
@"<MTAlarmStorage>"
@"MTSleepCoordinator"
@"MTSleepModeStateMachine"
@"DNDModeAssertionService"
v28@0:8B16@?20
v32@0:8B16B20@24
v32@0:8B16B20@"NSDate"24
@"MTSleepModeStateMachineInitialState"
@"MTSleepModeStateMachineOffState"
@"MTSleepModeStateMachineWaitingState"
@32@0:8@16o^@24
@40@0:8@16@24o^@32
@"NSDateFormatter"
v32@0:8@16Q24
v32@0:8@"<MTSyncStatusProvider>"16Q24
v24@0:8@"NSArray"16
@"<MTSyncToken>"24@0:8Q16
@48@0:8@16@24@32@40
@56@0:8@16@24@32@40@48
@"<MTSyncService>"
@"<MTSyncStatusProvider>"
@"<MTSyncDataModel>"
@"MTSyncChangeQueue"
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"MTCreateAlarmIntentResponse">24
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"INStringResolutionResult">24
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"INDateComponentsResolutionResult">24
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"NSArray">24
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"INObjectCollection"@"NSError">24
@"NSArray"24@0:8@"MTCreateAlarmIntent"16
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSDate"16Q24
@"<MTSleepSessionTrackerDelegate>"16@0:8
v24@0:8@"<MTSleepSessionTrackerDelegate>"16
B24@0:8@"MTAlarm"16
@"<MTSleepSession>"24@0:8@"<MTSleepSession>"16
v20@0:8{os_unfair_lock_s=I}16
@"<MTSleepSessionTrackerDelegate>"
@"MTAlarm"
Q32@0:8@16@24
Q24@0:8@16
v48@0:8@16Q24@32@?40
@"MTTimerStorage"
v32@0:8@"MTUpdateAlarmIntent"16@?<v@?@"MTUpdateAlarmIntentResponse">24
v32@0:8@"MTAlarmScheduler"16@"MTScheduledObject"24
v48@0:8@16@24@?32@40
v32@0:8@?16@24
v48@0:8@16Q24@?32@40
v56@0:8@16@24Q32@?40@48
v24@0:8@"<MTAlarmObserver>"16
v24@0:8@?<v@?@"NSArray"@"NSArray"@"MTAlarm"@"NSError">16
v40@0:8@"MTAlarm"16@?<v@?@"NSError">24@"<MTSource>"32
v48@0:8@"NSString"16@"MTChangeSet"24@?<v@?@"NSError">32@"<MTSource>"40
v24@0:8@"<MTSource>"16
v40@0:8@"NSArray"16@"NSArray"24@"<MTSource>"32
v32@0:8@?<v@?@"MTMutableAlarm">16@"<MTSource>"24
v48@0:8@"NSString"16Q24@?<v@?@"NSError">32@"<MTSource>"40
v56@0:8@"NSString"16@"NSDate"24Q32@?<v@?@"NSError">40@"<MTSource>"48
v32@0:8@"NSString"16@?<v@?@"MTAlarm">24
v48@0:8@16@24@32B40B44
v52@0:8@16@24@32B40B44B48
v40@0:8@16Q24@32
@"MTAlarmScheduler"
@"MTAlarmMigrator"
v32@0:8@"INCreateTimerIntent"16@?<v@?@"INCreateTimerIntentResponse">24
v32@0:8@"INCreateTimerIntent"16@?<v@?@"INCreateTimerLabelResolutionResult">24
v32@0:8@"INCreateTimerIntent"16@?<v@?@"INTimeIntervalResolutionResult">24
v32@0:8@"INCreateTimerIntent"16@?<v@?@"INTimerTypeResolutionResult">24
B20@0:8I16
v24@0:8d16
v20@0:8f16
f16@0:8
{?="mediaID"b1"soundVolume"b1}
q24@0:8Q16
v32@0:8@"MTScheduledList"16@?<v@?>24
@72@0:8@16@24@32@40@48@56@?64
@20@0:8B16
@"<MTAlarmScheduleDelegate>"
@"MTScheduledList"
@"<MTNotificationCenter>"
@"<MTSchedulingDelegate>"
@"<MTTaskScheduler>"
@"MTPBAlarm"
Q24@0:8Q16
@"<MTScheduleable>"
@"MTTrigger"
@"NSArray"24@0:8@"NSDate"16
B32@0:8@"MTScheduledObject"16@"NSCalendar"24
@32@0:8d16@?24
@40@0:8d16Q24@?32
@48@0:8d16Q24@?32@40
@"NSObject<OS_dispatch_source>"
@"NSTimer"
@32@0:8@16q24
@40@0:8@16q24q32
@"NSData"24@0:8@"<SYChange>"16
@"<SYChange>"32@0:8@"NSData"16q24
@"NSData"24@0:8@"<SYObject>"16
@"<SYObject>"24@0:8@"NSData"16
@"NSData"32@0:8@"<SYChange>"16q24
@"<SYChange>"40@0:8@"NSData"16q24q32
@"<MTAgentDiagnosticDelegate>"
@32@0:8@16Q24
@"_CDClientContext"
@"_DKKnowledgeStore"
v32@0:8@"<MTSource>"16@"MTTimer"24
v24@0:8@"MTTimer"16
@"NSMutableSet"
v28@0:8@?16B24
v28@0:8@16B24
v32@0:8@"MTScheduledObject"16@?<v@?>24
v24@0:8@"MTAlarm"16
v24@0:8@"MTScheduledObject"16
v32@0:8@"MTAlarm"16Q24
v28@0:8@"MTAlarm"16B24
@"<MTSystemStateDelegate>"
@"<MTScheduler>"
v32@0:8Q16Q24
@"WorldClockPreferences"
v24@0:8@"MTSleepCoordinatorStateMachine"16
v40@0:8@"MTSleepCoordinatorStateMachine"16@"NSDate"24Q32
v32@0:8@"MTSleepCoordinatorStateMachine"16d24
@"MTSleepCoordinatorStateMachine"
@"NAFuture"
@"MTXPCScheduler"
@"MTSleepModeMonitor"
@32@0:8@16d24
@40@0:8@16d24@?32
@"NSObject<OS_os_transaction>"
v32@0:8@"INDeleteTimerIntent"16@?<v@?@"INDeleteTimerIntentResponse">24
v32@0:8@"INDeleteTimerIntent"16@?<v@?@"INTimerResolutionResult">24
v32@0:8@"INDeleteTimerIntent"16@?<v@?@"INBooleanResolutionResult">24
v40@0:8@16B24B28@?32
v32@0:8@"INSetTimerAttributeIntent"16@?<v@?@"INSetTimerAttributeIntentResponse">24
v32@0:8@"INSetTimerAttributeIntent"16@?<v@?@"INSetTimerAttributeTargetTimerResolutionResult">24
v32@0:8@"INSetTimerAttributeIntent"16@?<v@?@"INTimeIntervalResolutionResult">24
v32@0:8@"INSetTimerAttributeIntent"16@?<v@?@"INSpeakableStringResolutionResult">24
v52@0:8@16d24@32B40@?44
@"MTPBDismissAction"
@"MTPBSnoozeAction"
@40@0:8@16@24@32
@"NSNumber"
@44@0:8@16@24@32f40
@"<MTSyncableObject>"24@0:8@"<MTSyncableObject>"16
B24@0:8@"<MTSyncableObject>"16
@"MTAlarmManager"
@32@0:8Q16Q24
@32@0:8q16q24
@48@0:8q16q24q32q40
@72@0:8q16q24q32q40q48q56q64
Q20@0:8B16
B40@0:8@16q24@32
@"NSString"24@0:8@"NSString"16
@"BSDescriptionBuilder"24@0:8@"NSString"16
@"BSDescriptionBuilder"16@0:8
@40@0:8Q16Q24@?32
@32@0:8@16B24B28
B40@0:8@16@24@32
B24@0:8q16
@"NSUUID"
@"MTSound"
@40@0:8@16q24@32
v32@0:8@"<MTSleepSessionTracker>"16@"<MTSleepSession>"24
@"HKHealthStore"
@"<MTSleepSessionTracker>"
v36@0:8f16@20@28
f32@0:8@16^B24
v36@0:8B16@20@28
B32@0:8@16^B24
v40@0:8q16@24@32
q32@0:8@16^B24
q32@0:8@16q24
q40@0:8@16@?24q32
v40@0:8d16@24@32
d32@0:8@16^B24
d32@0:8@16d24
d40@0:8@16@?24d32
@"NSUserDefaults"
i16@0:8
v20@0:8i16
@36@0:8@16@24B32
@40@0:8@16Q24q32
@44@0:8@16Q24q32B40
d32@0:8@16@24
@20@0:8i16
@28@0:8i16@20
v24@0:8@?<v@?>16
@"<NACancelable>"24@0:8@?<v@?@"NACancelationToken">16
@"<NACancelable>"32@0:8d16@?<v@?>24
@24@0:8^@16
@24@0:8d16
@52@0:8@16q24@32B40B44B48
@64@0:8@16@24@32@40@48@56
@"ALCity"
@"NSSet"
v32@0:8@16B24B28
@"MTUserNotificationActionDispatcher"
@"MTTimer"
@32@0:8@16^B24
v32@0:8d16@?24
@"MTPowerAssertion"
v24@0:8@"MTTask"16
v24@0:8@"MTTaskGroup"16
@"MTGCDTimer"
@40@0:8q16@24d32
v32@0:8@"MTGetAlarmsIntent"16@?<v@?@"MTGetAlarmsIntentResponse">24
B24@0:8@"<MTTimerTime>"16
q24@0:8@"<MTTimerTime>"16
@"NSNotificationCenter"16@0:8
@32@0:8@?16@24
@40@0:8@?16@24@32
B24@0:8d16
B24@0:8Q16
@"MTTimerManagerExportedObject"
@"MTXPCConnectionProvider"
@"MTTimerCache"
@"NSNotificationCenter"
@"MTTimerManager"
v32@0:8@"INResetTimerIntent"16@?<v@?@"INResetTimerIntentResponse">24
v32@0:8@"INResetTimerIntent"16@?<v@?@"INTimerResolutionResult">24
v32@0:8@"INResetTimerIntent"16@?<v@?@"INBooleanResolutionResult">24
v32@0:8@16^B24
@"NSHashTable"
v36@0:8@16@?24B32
@48@0:8@16@24Q32@?40
@24@0:8B16B20
@36@0:8@16Q24B32
@40@0:8@16Q24B32B36
@44@0:8@16Q24B32B36B40
@36@0:8@16B24B28B32
@"MTAlarmManagerExportedObject"
@"MTAlarmCache"
v32@0:8@"NSDate"16@"NSNumber"24
v32@0:8@"NSString"16@"NSNumber"24
@32@0:8d16Q24
@"MTSessionsManager"
@"BSServiceConnection<BSServiceConnectionClient>"
v44@0:8@16B24@?28@?36
v60@0:8@16B24B28B32@?36@?44@?52
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INSearchForTimersIntentResponse">24
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INSpeakableStringResolutionResult">24
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INTimeIntervalResolutionResult">24
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INTimerStateResolutionResult">24
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INTimerTypeResolutionResult">24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
@"MTSleepManager"
@"MTAgentNotificationManager"
@"MTSystemStateListener"
@"MTLanguageChangeListener"
@"MTAgentDiagnosticListener"
@"MTTimeListener"
@"MTAlarmServer"
@"MTAlarmSnapshot"
@"MTTimerServer"
@"MTTimerSnapshot"
@"MTAlarmIntentDonor"
@"MTTimerIntentDonor"
@"MTCoreDuetMonitor"
@"MTWidgetProvider"
@"MTTimerSessionsCoordinator"
@"MTSleepSessionManager"
@"MTSleepSessionTracker"
@"MTAlarmSyncDataModel"
@"MTStateMachine"
@"MTStateMachineState"
@"<MTStateMachineDelegate>"
@"<MTStateMachineInfoProvider>"
@"NPSManager"
v32@0:8@"NSArray"16@"NSArray"24
@"LSApplicationWorkspace"
@"<MTTimerManagerIntentSupport>"16@0:8
@36@0:8@16B24@28
@"<MTTimerSchedulerDelegate>"
@"<MTTimerStorage>"
I40@0:8@16@?24^@32
B32@0:8@16^@24
I40@0:8@"SYSession"16@?<B@?@"<SYChange>">24^@32
v40@0:8@"SYSession"16@"NSArray"24@?<v@?B@"NSError">32
v32@0:8@"SYSession"16@"NSError"24
B32@0:8@"SYSession"16^@24
v32@0:8@"SYSession"16@?<v@?B@"NSError">24
v32@0:8@"SYSession"16@"NSSet"24
@"MTCompanionSyncRequest"
@"SYSession"
@"<MTSyncServiceDelegate>"
v40@0:8@16Q24@?32
v32@0:8@"MTAlarm"16@?<v@?@"NSError">24
v40@0:8@"NSString"16Q24@?<v@?@"NSError">32
v24@0:8@?<v@?@"MTAlarm"@"NSError">16
v24@0:8@?<v@?@"NSError">16
v32@0:8@"MTTimer"16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepSchedule"24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepSettings"24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepEvent"24
v32@0:8@"HKSPSleepStore"16Q24
v28@0:8@"HKSPSleepStore"16B24
@56@0:8@16@?24@?32@40@48
@"HKSPSleepStore"
@"HKSPFeatureAvailabilityStore"
@"<MTSyncStatusProviderDelegate>"16@0:8
v24@0:8@"<MTSyncStatusProviderDelegate>"16
@"<MTSyncStatusProviderDelegate>"
B32@0:8Q16Q24
@40@0:8Q16d24@?32
@32@0:8Q16d24
@"<MTTimerTime>"
@"MTXPCConnectionListenerProvider"
v44@0:8@16B24@28@?36
@48@0:8q16q24@32@40
@"<MTTimerManagerProviding>"
@"<MTTimerManagerIntentSupport>"
@"NSError"
^{__CFUserNotification=}16@0:8
v24@0:8^{__CFUserNotification=}16
@"MTOSTransaction"
^{__CFUserNotification=}
v68@0:8@16@24@32@40@48B56@?60
@"NSUUID"16@0:8
@"NSObject<OS_dispatch_group>"
@"<MTSyncChangeStore>"
B40@0:8@16@24^@32
v48@0:8@16@24@32@?40
B40@0:8@"SYService"16@"SYSession"24^@32
v40@0:8@"SYService"16@"SYSession"24@"NSError"32
v40@0:8@"SYService"16@"NSData"24@?<v@?B@"NSError">32
v48@0:8@"SYService"16@"NSInputStream"24@"NSDictionary"32@?<v@?B@"NSError">40
v40@0:8@"SYService"16@"NSError"24@"NSDictionary"32
@"SYSession"40@0:8@"SYService"16@"SYSession"24@"SYSession"32
v40@0:8@"SYService"16@"NSUUID"24@"NSUUID"32
v28@0:8@"SYService"16B24
v24@0:8@"SYService"16
@"<MTSyncServiceDelegate>"16@0:8
v24@0:8@"<MTSyncServiceDelegate>"16
@"SYService"
@"MTCompanionSyncSession"
@"MTExponentialBackOffTimer"
@"MTPBSound"
{?="bedtimeDismissedDate"b1"bedtimeFiredDate"b1"bedtimeSnoozeFireDate"b1"dismissedDate"b1"firedDate"b1"keepOffUntilDate"b1"lastModifiedDate"b1"snoozeFireDate"b1"bedtimeDismissedAction"b1"bedtimeHour"b1"bedtimeMinute"b1"bedtimeReminderMinutes"b1"daySetting"b1"dismissedAction"b1"hour"b1"minute"b1"onboardingVersion"b1"playOptions"b1"revision"b1"sleepModeOptions"b1"allowsSnooze"b1"isEnabled"b1"isSleepAlarm"b1"sleepMode"b1"sleepSchedule"b1"sleepTracking"b1"timeInBedTracking"b1}
@"MTSleepCoordinatorStateMachineAsleepState"
@"MTSleepCoordinatorStateMachineAwakeState"
@"MTSleepCoordinatorStateMachineDisabledState"
