%s %@
%s Failed to %@ pause timer intent %@%@
%s Successfully %@ pause timer attribute intent %@ with response %@
%s Failed to %@ resume timer intent %@%@
%s Successfully %@ resume timer attribute intent %@ with response %@
exportedObject: %{public}@ must conform to protocol: %{public}@
%s intent:%@
%{public}@ alarm fetch returned alarms: %{public}@
%{public}@ found no alarm to enable
%{public}@ Alarm being modified: %{public}@. Enabled state from intent: %{public}@, current alarm enable state: %i
%{public}@ alarm state already matches intent state : %{public}@
%{public}@ Updating enable state to %i for alarm: %{public}@
mobiletimerd - System language changed, terminating daemon
Initializing %{public}@
%{public}@ loading timers
%{public}@ migration needed
%{public}@ migrated timer is %{public}@
%{public}@ no timer created during migration.
%{public}@ has no timers
%{public}@ binary data storage version detected.  Using old reader.
%{public}@ unexpected error reading data %{public}@
%{public}@ loaded %{public}@
%{public}@ setting all timers %{public}@
%{public}@ setting all timers
%{public}@ received request for timers
%{public}@ returning timers: %{public}@, next timer: %{public}@
%{public}@ adding timer %{public}@
MTTimerStorage - Adding Timer
%{public}@ updating timer %{public}@
MTTimerStorage - Updating Timer
%{public}@ removing timer %{public}@
MTTimerStorage - Removing Timer
%{public}@ dismissing timer with ID %{public}@
MTTimerStorage - Dismissing Timer
%{public}@ repeating timer with ID %{public}@
MTTimerStorage - Repeating Timer
Timer already exists
MTTimerStorage - Failed Adding Timer
MTTimerStorage - Finished Adding Timer
MTTimerStorage - Finished Updating Timer
MTTimerStorage - Failed Updating Timer
%{public}@
MTTimerStorage - Finished Removing Timer
Timer doesn't exist
MTTimerStorage - Failed Removing Timer
Dismissed timer %{public}@ at %{public}@
MTTimerStorage - Finished Dismissing Timer
%{public}@ couldn't find matching timer to dismiss for %{public}@
MTTimerStorage - Failed Dismissing Timer
Repeated timer %{public}@
MTTimerStorage - Finished Repeating Timer
MTTimerStorage - Failed Repeating Timer
%{public}@ notifying observers for timer addition
%{public}@ notifying observers for timer update
%{public}@ notifying observers for timer removal
%{public}@ notifying observers for timer dismissal
%{public}@ notifying observers for timer firing
%{public}@ notifying observers for next timer change
-----MTTimerStorage-----
Timers: %{public}@
Last Modified: %{public}@
MTTimerStorage - Next Timer Changed
MTTimerStorage - Fired Timer
%{public}@ registered %{public}@
%{public}@ is registering for distributed notifications
%{public}@ is registering for darwin notifications
%{public}@ is registering for alarm notifications
%{public}@ is registering for darwin notification %{public}@
%{public}@ received notification %{public}@
%{public}@ Using a scheduling power assertion timeout of %{public}d
%{public}@ Alarm added - Request snapshot
%{public}@ Alarm updated - Request snapshot
%{public}@ Alarm removed - Request snapshot
%{public}@ no sleep alarm, sleep disabled
%{public}@ sleep schedule disabled
%{public}@ haven't dismissed morning alarm yet so we're sleeping
%{public}@ wake up alarm was snoozed (%{public}@) so we're sleeping
%{public}@ next trigger is for wake up (%{public}@) so we're sleeping
%{public}@ bedtime reminder was snoozed (%{public}@) for after the bedtime: (%{public}@). it is currently before bedtime and the snooze date
%{public}@ bedtime reminder was snoozed (%{public}@) for after the bedtime. it is currently past bedtime but before the snooze date.
%{public}@ user confirmed go to bed notification (%{public}@) so we're sleeping until %{public}@
%{public}@ haven't seen go to bed reminder yet (%{public}@)
%{public}@ not bedtime yet (%{public}@)
%{public}@ bedtime reached, checking state
%{public}@ waketime reached but alarm not enabled, dismissing
%{public}@ scheduling alarm timeout
%{public}@ alarm timeout occurred, dismissing
%{public}@ received willPresentNotification
%{public}@ completing with UNNotificationPresentationOptionAlert for %{public}@
%{public}@ completing with UNNotificationPresentationOptionAlert|UNNotificationPresentationOptionSound for %{public}@
Connection info must be non-nil
Initializing %{public}@ with info %{public}@
%{public}@ deallocing...
%{public}@ rebuilding connection
%{public}@ connection interrupted
%{public}@ connection invalidated
%{public}@ will retry connection because the response to the lifecycle notification failed
%{public}@ connection invalidated.  Retrying
%{public}@ not retrying invalidated connection
%{public}@ received lifecycle notification. Reestablishing connection.
%{public}@ received lifecycle notification.  Reconnecting.
%{public}@ received lifecycle notification but does not have a reconnection handler.
Failed to reconnect for provider %{public}@ with error %{public}@.
%{public}@ retrying failed reconnect
%{public}@ attempting to reconnect.
%{public}@ failed to reconnect too many times
%{public}@ received a remote proxy error: %{public}@
%{public}@ expected non-nil proxy@
%{public}@ expected non-nil connection
%{public}@ invalidating
%{public}@ Handling manual %{public}@ invalidation
%{public}@ Keeping off until: %{public}@
%{public}@ Not in user sleep window
%{public}@ We are past keepOffUntilDate: %{public}@
%{public}@ ignoring updateState until keepOffUntilDate: %{public}@
%{public}@ Failed adding assertion update listener: %@
%{public}@ Added assertion update listener
%{public}@ engageUntilDate:userEngaged
%{public}@ already have assertion
%{public}@ updating active assertion with new end date %{public}@, isUserRequested %d
%{public}@ acquiring assertion with details %{public}@
%{public}@ Failed to acquire assertion with %{public}@
%{public}@ Successfully acquired assertion
%{public}@ clearKeepOff:
%{public}@ disengage:
%{public}@ there is no assertion
%{public}@ Failed to release assertion with %{public}@
%{public}@ Successfully released assertion
%{public}@ keepOffUntilDate: %{public}@
%{public}@ scheduleUpdateForSecondsFromNow: %f
%{public}@ re-checking %{public}@
%{public}@ user manually turning off %{public}@ (%{public}@)
%{public}@ didReceiveModeAssertionInvalidation %{public}@
%{public}@ user woke up, turning off %{public}@ if it's on
%{public}@ user went to bed, checking %{public}@
%{public}@ bedtime reminder fired, checking %{public}@
%{public}@ it's the user's bedtime, checking %{public}@
%{public}@ wake up alarm fired, checking %{public}@
%{public}@ wake up alarm snoozed, checking %{public}@
%{public}@ user %{public}@ sleep alarm, checking %{public}@
%{public}@ significant time change detected, checking %{public}@
-----%@-----
isEnabled: %d, isUserRequested: %d
%{public}@ createAlarm requested without time
%{public}@ no alarm, disabling
%{public}@ feature not enabled
%{public}@ user confirmed bedtime reminder (%{public}@).  Starting session.
%{public}@ user woke up at %@ (%{public}@)
%{public}@ received notification response
%{public}@ received response for category %{public}@ and action %{public}@
Unexpected alarm notification action: %{public}@
%{public}@ calling completion
%{public}@ received snooze action for %{public}@
%{public}@ received go to bed action for bedtime notification %{public}@
%{public}@ received dismiss action for wakeup alarm %{public}@
%{public}@ received dismiss action for bedtime notification %{public}@
%{public}@ received dismiss action for snooze countdown notification %{public}@
%{public}@ received dismiss action for alarm %{public}@
%{public}@ received response for action %{public}@
Unexpected timer notification action: %{public}@
%{public}@ received dismiss action for timer %{public}@
%{public}@ received repeat action for timer %{public}@
Initializing %{public}@ with persistence %{public}@ and migrator %{public}@
%{public}@ cleaning up snooze fire date for sleep alarm %{public}@
%{public}@ cleaning up repeat schedule for sleep alarm %{public}@
%{public}@ loading alarms
%{public}@ To set as a marker we are hitting here with updated root
%{public}@ has no alarms
%{public}@ clean-up needed
%{public}@ loaded %{public}@, sleep alarm %{public}@
%{public}@ loaded %{public}ld alarms, sleep alarm? %{public}d
%{public}@ persistence is nil
%{public}@ ignoring misplaced sleep alarm %{public}@
%{public}@ received request for alarms
%{public}@ returning ordered alarms: %{public}@, sleep alarm: %{public}@, next alarm: %{public}@
%{public}@ calling completion block with alarms %@
%{public}@ adding alarm %{public}@
MTAlarmStorage - Adding Alarm
%{public}@ updating alarm %{public}@
MTAlarmStorage - Updating Alarm
%{public}@ updating %{public}@ with changes %{public}@
%{public}@ removing alarm %{public}@
MTAlarmStorage - Removing Alarm
%{public}@ removing alarm with ID %{public}@
%{public}@ removing all alarms
%{public}@ setting all alarms %{public}@, sleep alarm %{public}@
%{public}@ setting all alarms
%{public}@ snoozing for %{public}lu minutes
%{public}@ snoozing alarm with ID %{public}@ and action %ld
MTAlarmStorage - Snoozing Alarm
%{public}@ dismissing alarm with ID %{public}@ and action %{public}@
MTAlarmStorage - Dismissing Alarm
Alarm already exists
MTAlarmStorage - Failed Adding Alarm
MTAlarmStorage - Finished Adding Alarm
Alarm doesn't exist
MTAlarmStorage - Failed Updating Alarm
%{public}@ Alarm %{public}@ disabled while firing (%{public}@).  Dismissing: %{public}@ (last dismissed: %{public}@)
%{public}@ Alarm %{public}@ modified during save.  Notifying everyone.
%{public}@ Changes: %{public}@
MTAlarmStorage - Finished Updating Alarm
MTAlarmStorage - Finished Removing Alarm
MTAlarmStorage - Failed Removing Alarm
%{public}@ was snoozed and isn't enabled anywhere. Cancelling.
%{public}@ was snoozed but had relevant changes. Cancelling.
%{public}@ has a snooze fire date of %{public}@ and we want to snooze until %{public}@.  Picking earlier date
%{public}@ has a bed-time snooze fire date of %{public}@ and we want to snooze until %{public}@.  Picking earlier date
MTAlarmStorage - Finished Snoozing Alarm
%{public}@ couldn't find matching alarm to snooze for %{public}@
MTAlarmStorage - Failed Snoozing Alarm
%{public}@ Setting non-repeating alarm %{public}@ to disabled
%{public}@ dismissed alarm %{public}@ at %{public}@
MTAlarmStorage - Finished Dismissing Alarm
%{public}@ couldn't find matching alarm to dismiss for %{public}@
MTAlarmStorage - Failed Dismissing Alarm
%{public}@ notifying observers for alarm addition
%{public}@ notifying observers for alarm change
%{public}@ notifying observers for alarm removal
%{public}@ notifying observers for alarm snooze
%{public}@ notifying observers for alarm dismissal
%{public}@ notifying observers for alarm fire
%{public}@ notifying observers for next alarm change
MTAlarmStorage - Next Alarm Changed
MTAlarmStorage - Fired Alarm
%{public}@ significant time change detected, rescheduling alarms
%{public}@ resetting firedDate on %{public}@ because it's in the future
%{public}@ resetting dismissedDate on %{public}@ because it's in the future
%{public}@ resetting bedtimeFiredDate on %{public}@ because it's in the future
%{public}@ resetting bedtimeDismissedDate on %{public}@ because it's in the future
%{public}@ resetting lastModifiedDate on %{public}@ because it's in the future
%{public}@ handling notification %{public}@
-----MTAlarmStorage-----
Alarms: %{public}@
Sleep Alarm: %{public}@
Start monitoring : Springboard/Carousel start
Cannot start monitoring Springboard/Carousel start because it was already started
Stop monitoring : Springboard/Carousel start
Springboard/Carousel started = %{public}@
%s Handled resolve label for intent: %@ with result: %@
%s Failed to fetch timers for intent: %@, error: %@
%s Handled resolve duration for intent: %@ with result: %@
%s Handled resolve type for intent: %@ with result: %@
%s Attempting to remove conflicting timer: %@
%s Successfully removed conflicting timer: %@
%s Failed to remove conflicting timer: %@ with error: %@
%s Successfully %@ create timer intent %@ with response %@
%s Failed to %@ create timer intent %@ with response: %@, error: %@
[Sound] Converting %{public}@ to UNNotificationSound for category %{public}@
[Sound] Made %@
[Sound] Converting %@ to MTSound
%{public}@ rescheduling %{public}ld alarms
%{public}@ fired last alarm more than %d minutes ago.  Seeing if we have to fire any alarms we missed since %{public}@
%{public}@ the last alarm fire date is ahead of the current date (probably because we went back in time).
%{public}@ fired last alarm less than %d minutes ago.  Seeing if we have to fire any alarms we missed since %{public}@
%{public}@ Setting really old snoozed alarm %{public}@ to disabled
%{public}@ Clearing fire date for really old snoozed alarm %{public}@
%{public}@ scheduling %{public}lu alarms
%{public}@ scheduled alarms: %{public}@
%{public}@ unscheduling %{public}lu alarms
%{public}@ next alarm changed: %{public}@
MTAlarmScheduler - Changing Next Alarm
%{public}@ has %{public}ld scheduled alerts and notifications
%{public}@ Scheduling persistent timer for next alert at %{public}@
%{public}@ Timer will fire %f minutes from now
%{public}@ Timer will fire %f seconds from now
%{public}@ Timer should have fired.  Triggering it now
%{public}@ Unscheduling persistent timer.
%{public}@ Alarm timer fired
%{public}@ Alarm %{public}@ is for non-visible event %{public}@
MTAlarmScheduler - Firing Alarm
%{public}@ %{public}@ fired (scheduled fire date: %{public}@)
%{public}@ first dismissing related notifications for %{public}@
%{public}@ post notification for %{public}@
%{public}@ not posting notification for %{public}@
%{public}@ no next alarm
%{public}@ Alarm %{public}@ was supposed to fire but is no longer scheduled
%{public}@ Scheduled alarms: %{public}@
%{public}@ Find notifications with current trigger date in range %{public}@
%{public}@ Alarm %{public}@ should actually fire in %f seconds
%{public}@ fired all alarms.  Rescheduling.
%{public}@ Setting last alarm trigger date to %{public}@
%{public}@ received update of alarms %{public}@.  Rescheduling them.
%{public}@ posting snooze countdown notification for snoozed alarm %{public}@
-----MTAlarmScheduler-----
Scheduled Alarms: %{public}@
Not scheduling %{public}@ because sleep schedule is disabled
Not scheduling alarm %{public}@ because it's disabled
%{public}@ Processing os_state handler
State: %{public}@
%{public}@ Error serializing state data: %{public}@
%{public}@ Ignoring user bedtime %@.
%{public}@ stopping session with reason %{public}@
%{public}@ User bed time unset.  Using: %@
%{public}@ User bed time was: %@
%{public}@ User wake time was: %@
[Triggers] %{public}@ handleSystemReadyWithAlarmStorage %lu alarms
[Triggers] %{public}@ didUpdateAlarms: %{public}@
[Triggers] %{public}@ alarm %@ isEnabled:%d isFiring:%d isSnoozed:%d
[Triggers] %{public}@ removing disabled alarm: %{public}@
[Triggers] %{public}@ didSnoozeAlarm: %{public}@, snoozeAction: %{public}@
[Triggers] %{public}@ Ignoring snoozeAction (%{public}@)
[Triggers] %{public}@ Telling context store that alarm (%{public}@) has snoozed
[Triggers] %{public}@ didDismissAlarm: %{public}@, dismissAction: %{public}@
[Triggers] Ignoring dismissAction (%{public}@)
[Triggers] %{public}@ Telling context store that alarm (%{public}@) has been dismissed
[Triggers] %{public}@ didFireAlarm: %{public}@, triggerType: %{public}@
[Triggers] %{public}@ Ignoring triggerType (%{public}@)
[Triggers] %{public}@ Telling context store that alarm (%{public}@) has fired
[Triggers] %{public}@ didRemoveAlarms: %{public}@
%{public}@ didAddTimers %{public}@
%{public}@ didUpdateTimers %{public}@
%{public}@ didFireTimer %{public}@
%{public}@ Donating intent: %{public}@
Error donating timer create intent: %{public}@
%@ donated successfully
%@ - Cache Miss
%{public}@ - Error getting alarms: %{public}@
%{public}@ posting distributed notification for alarm: %{public}@
%{public}@ posting distributed notification for timer: %{public}@
%{public}@ System is ready.
Restore is done or not needed.
Restore isn't done.
%{public}@ has been notified that restore is done (received %{public}@) or not needed.
%{public}@ has been notified of F5 demo
-----MTSystemStateListener-----
Restore done: %{public}d
%{public}@ userWentToBed
%{public}@ telling observers user went to bed
%{public}@ userWokeUp
%{public}@ telling observers user woke up
%{public}@ dismissWakeUpAlarm (%{public}@)
%{public}@ shouldScheduleAlarmTimeoutForSecondsFromNow
%{public}@ telling observers about added sleep alarm
%{public}@ telling observers about removed sleep alarm
%{public}@ sleep alarm changes: %@
%{public}@ telling observers about modified sleep alarm
%{public}@ sleep alarm changes unimportant.
%{public}@ sleep alarm dismissed: (%{public}@)
%{public}@ telling observers bedtime reminder fired at %{public}@
%{public}@ telling observers bedtime reminder was confirmed at %{public}@
%{public}@ telling observers bedtime reminder was snoozed until %{public}@
%{public}@ telling observers bedtime was reached at %{public}@
%{public}@ telling observers waketime time was reached at %{public}@
%{public}@ telling observers wake up alarm fired at %{public}@
%{public}@ telling observers wake up alarm was snoozed until %{public}@
%{public}@ telling observers wake up alarm was dismissed at %{public}@ (%{public}@)
%{public}@ telling observers %{public}@ ended at %{public}@
%{public}@ significant time change detected
%{public}@ pairedDevicePreferencesChanged
-----MTSleepCoordinator-----
%@: %d
%s Failed to %@ delete timer intent %@ %@, response: %@
%s Successfully %@ delete timer attribute intent %@ with response %@
%s Deleting%@ timer %@ from timer manager %@
%s Failed to delete%@ timer %@ from timer manager %@ due to error %@
%s Filtering timer for delete to single unnamed timer: %@
%s Failed to %@ set timer attribute intent %@%@
%s Successfully %@ set timer attribute intent %@ with response %@
[Sound] No tone ID is specified in defaults. Fall back to the ToneLibrary default
[Sound] No media item ID is specified in defaults. Switch to the tone type and use the ToneLibrary default
[Sound] Alarm sound from stored defaults (toneID: %@, mediaItemID: %@)
[Sound] No vibration ID is specified in defaults. Use the ToneLibrary default
[Sound] Alarm vibration from stored defaults (vibrationID: %@)
[Sound] Default alarm sound is %@
[Sound] Default timer sound is %@
[Sound] Storing Alarm Defaults (soundTypeKey: %@, toneIDKey: %@, mediaItemIDKey: %@, vibrationIDKey: %@)
[Sound] Storing Timer Defaults (toneIDKey: %@)
%{public}@ Using snapshot quiescing window of %{public}f
%{public}@ skipping migration from old storage, as this device doesn't support the old storage
%{public}@ migrating old alarms and notifications to storage
%{public}@ need to migrate alarms: %{public}@ and sleep alarm: %{public}@
%{public}@ need to migrate %{public}ld alarms and sleep alarm %{public}d
%{public}@ migrated alarm %{public}@ (enabled: %{public}d)
%{public}@ migrated sleep alarm %{public}@ (enabled: %{public}d)
%{public}@ migrated to alarms: %{public}@ and sleep alarm: %{public}@
%{public}@ skipping migration removal, as this device doesn't support the old storage
%{public}@ removing old alarms and notifications from storage
%{public}@ notification cleanup, as this device doesn't support the old storage
%{public}@ cleaning up old notifications
Computing next fire date for %{public}@ after %{public}@
%{public}@ has next fire date %{public}@ after %{public}@
Snooze hasn't fired yet (%{public}@) for alert %{public}@
Bedtime snooze hasn't fired yet (%{public}@) for alert %{public}@
%{public}@ has next trigger %{public}@
%{public}@ has %lu minute reminder before bedtime
%{public}@ has no bedtime reminder
%{public}@ has next bedtime date %{public}@ after %{public}@
%{public}@ has next bedtime reminder date %{public}@ after %{public}@
%{public}@ %{public}@ after %{public}@ (%{public}@)
%{public}@ %{public}@ %{public}@
%{public}@ earliest trigger date: %{public}@
[Migration] (1.8) playOptions: %lu
[Migration] (2.6) old enabled: %d, sleepSchedule: %d
[Migration] (2.6) new enabled: %d, sleepSchedule: %d
Initializing %{public}@ with tracker: %{public}@
%{public}@ sessionDidComplete: %{public}@
%{public}@ writing session
%{public}@ notifying %{public}@
%{public}@ session has nothing to write
%{public}@ session is ready to write
%{public}@ session needs additional processing
%{public}@ failed to process session
%{public}@ archiving session
%{public}@ archiveSession: %{public}@
%{public}@ creating %{public}@ directory at %{public}@
%{public}@ failed to create directory at %{public}@
%{public}@ wrote sessions to file %{public}@
%{public}@ failed to write sessions file %{public}@
%{public}@ writeSession: %{public}@
%{public}@ can write session data
%{public}@ no unprocessed in bed intervals to save
%{public}@ device hasn't been unlocked since boot.  Waiting for unlock...
%{public}@ device has been unlocked.  Writing samples to HealthKit
%{public}@ device has been unlocked but no unprocessed intervals to save
%{public}@ caught exception %{public}@ when trying to read sessions
%{public}@ unarchiving failed with error %{public}@
%{public}@ no data found in file %{public}@
%{public}@ failed to remove session data file error %{public}@
%{public}@ doesn't have write access for HKCategoryTypeIdentifierSleepAnalysis
%{public}@ Processing session: %@
%{public}@ Skipping session due to missing bedtime or wake time: %@
%{public}@ Interval is nil.
%{public}@ sleep interval: %f greater than allowed: %f. Will not be used
%{public}@ Timer added - Request snapshot
%{public}@ Timer updated - Request snapshot
%{public}@ Timer removed - Request snapshot
%{public}@ initializing...
%{public}@ broadcasting %{public}@
%{public}@ registering %{public}@ for %{public}@
%{public}@ posting %{public}@ for %{public}@
%{public}@ unregistering %{public}@ for %{public}@
%{public}@ sensitiveUIStateChanged
Initializing %{public}@...
%{public}@ calling update handler with %{public}@
%{public}@ _handleAlarmsDidChange
%{public}@ setting up notification centers
%{public}@ setting %lu categories for %{public}@
%{public}@ handling responses with %{public}@
%{public}@ firing %{public}@
%{public}@ adding request %{public}@
%{public}@ failed to fire %{public}@ with error %{public}@
%{public}@ fired %{public}@
%{public}@ dismissing related notifications for %{public}@
%{public}@ dismissing any notifications for %{public}@
%{public}@ alarm is nil
%{public}@ dismissing notifications for %{public}@ (%{public}@)
%{public}@ dismissing notifications with identifiers %{public}@
%{public}@ not interrupting audio or locking device because we're in a call
%{public}@ interrupting audio
%{public}@ locking device
%{public}@ dismissing %{public}@
%{public}@ timer is nil
%{public}@ removing all delivered notifications.
%{public}@ migrating old timers to storage
%{public}@ removing old timers and notifications from storage
%{public}@ received significant time change notification. Notifying observers
%{public}@ timeZone: %{public}@
Add Alarm
Update Alarm
Dismiss Alarm
Snooze Alarm
Sync Update Alarm
Sync Remove Alarm
Sync Dismiss Alarm
Sync Snooze Alarm
Fire Alarm
Schedule Alarm
Add Timer
Update Timer
Remove Timer
Dismiss Timer
Repeat Timer
Schedule Timer
Fire Timer
Remove Alarm
Sync Add Alarm
%{public}@ executing %{public}@ immediately
%{public}@ scheduling %{public}@
%{public}@ opening transaction for %{public}@
%{public}@ closing transaction for %{public}@
%{public}@ %{public}@ completed
%{public}@ %{public}@ has no tasks
%{public}@ Not taking power assert for %{public}@ because assertion timeout is 0.
%{public}@ - Error getting timers: %{public}@
%{public}@ warming...
%{public}@ setting default duration to %f
%{public}@ initializing: %{public}@
%{public}@ Error getting timers:%{public}@
%{public}@ addTimer:%{public}@
MTTimerManager - Adding Timer
%{public}@ updateTimer:%{public}@
MTTimerManager - Updating Timer
%{public}@ removeTimer:%{public}@
MTTimerManager - Removing Timer
%{public}@ dismissTimerWithIdentifier:%{public}@
MTTimerManager - Dismissing Timer
%{public}@ repeatTimerWithIdentifier:%{public}@
MTTimerManager - Repeating Timer
%{public}@ received MTTimerServerReadyNotification
%{public}@ notified timers added: %{public}@
MTTimerManager - Timer Added
%{public}@ notified timers update: %{public}@
MTTimerManager - Timer Updated
%{public}@ notified timers removed: %{public}@
MTTimerManager - Timer Removed
%{public}@ notified timer fired: %{public}@
MTTimerManager - Timer Fired
%{public}@ notified timer dismissed: %{public}@
MTTimerManager - Timer Dismissed
%{public}@ notified next timer changed: %{public}@
MTTimerManager - Next Timer Changed
%s Failed to %@ reset timer intent %@ %@, response: %@
%s Successfully %@ reset timer intent %@ with response %@
%{public}@ checking in...
%{public}@ reconnecting...
%{public}@ updating cache %{public}@
%{public}@ calling connection provider %{public}@
%{public}@ remote block being called on connection provider %{public}@...
%{public}@ error while reconnecting: %{public}@
%{public}@ finish block called for next alarm
%{public}@ finish block called with no next alarm
%{public}@ finish block called with next alarm: %{public}@, error: %{public}@
%{public}@ addAlarm:%{public}@
MTAlarmManager - Adding Alarm
%{public}@ updateAlarm:%{public}@
MTAlarmManager - Updating Alarm
%{public}@ removeAlarm:%{public}@
MTAlarmManager - Removing Alarm
%{public}@ snoozeAlarmWithIdentifier:%{public}@
MTAlarmManager - Snoozing Alarm
%{public}@ dismissAlarmWithIdentifier:%{public}@ (%{public}@)
MTAlarmManager - Dismissing Alarm
%{public}@ received MTAlarmServerReadyNotification
%{public}@ received MTAlarmServerReadyNotification, posting MTAlarmManagerStateReset
%{public}@ notified alarms added: %{public}@
MTAlarmManager - Alarm Added
%{public}@ notified alarms updated: %{public}@
MTAlarmManager - Alarm Updated
%{public}@ notified alarms removed: %{public}@
MTAlarmManager - Alarm Removed
%{public}@ notified alarm snoozed: %{public}@
MTAlarmManager - Alarm Snoozed
%{public}@ notified alarm fired: %{public}@
MTAlarmManager - Alarm Fired
%{public}@ notified alarm dismissed: %{public}@
MTAlarmManager - Alarm Dismissed
%{public}@ notifying next alarm changed: %{public}@
MTAlarmManager - Next Alarm Changed
%{public}@ notified next alarm changed: %{public}@
%{public}@ notified alarms changed: %{public}@
%s Updating%@ timer %@ from timer manager %@
%s Failed to update%@ timer %@ from timer manager %@ due to error %@
%s Filtering timer for update to single unnamed timer: %@
%s Successfully handled search timers intent: %@ with response %@
%s Failed to handle search timers with intent: %@ due to error %@
%{public}@ Updating keep off until date: %{public}@
%{public}@ We are before keep off until date: %{public}@, turning off %{public}@ if it's on
%{public}@ no sleep alarm, turning off %{public}@ if it's on
%{public}@ sleep schedule for %{public}@ not enabled, turning off %{public}@ if it's on
%{public}@ %{public}@ not enabled for alarm %{public}@, turning off %{public}@ if it's on
%{public}@ waiting 60 seconds before turning on %{public}@ for alarm %{public}@
%{public}@ turning on %{public}@ if it's not on for alarm %{public}@
%{public}@ not in sleep window for alarm %{public}@, turning off %{public}@ if it's on
%{public}@ ignoring user requested off because it's for previous sleep window
%{public}@ Alarm added - Donating intent: %{public}@
Error donating alarm create intent: %{public}@
Error deleting donations for update: %{public}@
%{public}@ Interactions for updated alarm %@ deleted successfully
%{public}@ Updated alarm - Donating intent: %{public}@
%{public}@ Updated Alarm %@ donated successfully
Error donating alarm enable intent: %{public}@
%{public}@ Alarm updated - Donating intent: %{public}@
Error donating alarm update intent: %{public}@
Error deleting donations: %{public}@
Interactions for %@ deleted successfully
%{public}@ loading legacy data
%{public}@ loading user preferences
%{public}@ loading scheduled notifications
%{public}@ found %lu scheduled notifications
%{public}@ migrated from springboard defaults
%{public}@ upgrading alarms
%{public}@ found %ld alarms to upgrade
%{public}@ Old alarms being upgraded: %@
%{public}@ New alarms already present: %@
%{public}@ No alarms found to upgrade
%{public}@ upgrading timer
%{public}@ setting current sound: %@
%{public}@ setting current sound: Stop Playing
%{public}@ Removing AlarmList
%{public}@ Removing SBCountdownTimerSoundIdentifier
%{public}@ Removing SBCountdownTimerTimeIdentifier
%{public}@ Reading alarms from preferences: %@
%{public}@ Invalid alarm found in preferences :: %@
%{public}@ Reading sleep alarm from preferences: %@
%{public}@ reconiling alarms with notifications
%{public}@ found scheduled notification matching alarm %{public}@.  Forcing active for migration.
%{public}@ finished reconiling alarms with notifications
%{public}@ loading timer defaults
%{public}@ purging legacy data
%{public}@ deleting defaults
%{public}@ cancelling notifications
Listener %{public}@ posting lifecycle notification %{public}@
%{public}@ invalidation handler called for connection %{public}@...
Connection %{public}@ not entitled
Connection to server via %{public}@ mach port was interrupted.
Connection to server via %{public}@ mach port was invalidated. Removing server side connection
%{public}@: Adding XPC client: %{public}@
%{public}@: Already has XPC client: %{public}@
%{public}@: Current XPC clients: %{public}@
%{public}@: Removing XPC client: %{public}@
%{public}@ has launched
%{public}@ system is ready
%{public}@ migration finished
-----%{public}@-----
Launched: %{public}@
------------------------
%{public}@ initializing
%{public}@ received %{public}@ notification for %d alarms.
%{public}@ received MTAlarmManagerStateReset notification.
%{public}@ asynchronously reloading alarms
%{public}@ calling reload block
%{public}@ finished reloading
%{public}@ failed reloading: %{public}@
[%{public}@] Will enter state %@ with previous state %{public}@
[%{public}@] Did enter state %{public}@ with previous state %{public}@
%{public}@ registering sleep observer %{public}@
%{public}@ already have a health observer
%{public}@ sleep data changed.  Notifying %ld observers
%{public}@ unregistering sleep observer %{public}@
%{public}@ no health observer
%{public}@ Fetching sleep data for range %{public}@ with interval %{public}@
%{public}@ Failed to fetch sleep data with error %{public}@
%{public}@ Fetched sleep intervals %@
%{public}@ Fetching sleep days for range %{public}@
%{public}@ Failed to fetch sleep days with error %{public}@
%{public}@ Fetched sleep days %@
%{public}@ Requesting authorization for types %{public}@
%{public}@ Authorization succeeded.  Executing query.
%{public}@ Failed to request HealthKit authorization with error: %@
%{public}@ Skipping authorization.  Executing query.
%{public}@ rescheduling %{public}ld timers
%{public}@ fired last timer more than %d minutes ago.  Seeing if we have to fire any timers we missed since %{public}@
%{public}@ the last timer fire date is ahead of the current date (probably because we went back in time).
%{public}@ fired last timer less than %d minutes ago.  Seeing if we have to fire any timers we missed since %{public}@
%{public}@ Setting really old running timer %{public}@ to stopped
%{public}@ scheduling %{public}lu timers
%{public}@ scheduled timers: %{public}@
%{public}@ unscheduling %{public}lu timers
%{public}@ next timer changed: %{public}@
MTTimerScheduler - Changing Next Timer
%{public}@ Updating persistent timer for %{public}ld scheduled timers
%{public}@ Scheduling persistent timer for next timer at %{public}@
%{public}@ Timer should have fired. Triggering it now
%{public}@ Timer timer fired
MTTimerScheduler - Firing Timer
%{public}@ no next timer
%{public}@ Timer %{public}@ was supposed to fire but is no longer scheduled
%{public}@ Scheduled timers: %{public}@
%{public}@ Timer %{public}@ should actually fire in %f seconds
%{public}@ fired all timers.  Rescheduling.
%{public}@ Setting last timer trigger date to %{public}@
-----MTTimerScheduler-----
Scheduled Timers: %{public}@
%{public}@ Dismissing notifications for timer: %{public}@
%{public}@ received notification
%{public}@ device has been unlocked
%{public}@ device hasn't been unlocked
%{public}@ posting MTDeviceHasBeenUnlockedForFirstTime notification
%{public}@ Found initial hasBeenUnlockedSinceBoot value of [%d]
-----MTDeviceListener-----
Unlocked since boot: %{public}d
%{public}@ modified after %{public}@ (%{public}@)
%{public}@ already fired after %{public}@ (%{public}@)
%{public}@ already dismissed after %{public}@ (%{public}@)
Next trigger date %{public}@ is prior to requested date %{public}@
%{public}@ read data version: %f
Illegal fire time class %{public}@
Starting %{public}@
Stopping %{public}@
System is ready: %{public}@.  Will post MTAlarmServerReadyNotification.
System isn't ready...
MTAlarmServer - Adding Alarm
MTAlarmServer - Updating Alarm
MTAlarmServer - Removing Alarm
MTAlarmServer - Snoozing Alarm
MTAlarmServer - Dismissing Alarm
-----MTAlarmServer-----
System Ready: %@
Clients: %{public}@
%s Failed to retrieve timers from timer manager %@: %@
%s Failed to resolve timer %@ from timer manager %@ due to error %@
%s Filtering matched timers for allowedTimerStatesForFollowup:%@ to: %@
%s Filtering resolved timer matches to single unnamed timer: %@
%s Found %ld matching timers for multi target timer: %@
%s Disambiguating %ld matching timers for single target timer: %@
%s Found no matching timers but 1 alternate timer: %@ for target timer: %@
%s Found no matching timers for target timer: %@
%s Found matching timer: %@ for target timer: %@
System is ready: %{public}@.  Will post MTTimerServerReadyNotification.
MTTimerServer - Adding Timer
MTTimerServer - Updating Timer
MTTimerServer - Removing Timer
MTTimerServer - Dismissing Timer
MTTimerServer - Repeating Timer
-----MTTimerServer-----
%{public}@ posting CFUserNotification for %{public}@
%{public}@ failed to post CFUserNotification
%{public}@ cancelling CFUserNotification for %{public}@
%{public}@ calling handler for %{public}@
%{public}@ couldn't find callback for notification %{public}@
-[MTPauseResumeTimerIntentHandler resolveTargetTimerForPauseTimer:withCompletion:]
v24@?0@"INTimerResolutionResult"8@"NSError"16
-[MTPauseResumeTimerIntentHandler resolvePauseMultipleForPauseTimer:withCompletion:]
-[MTPauseResumeTimerIntentHandler confirmPauseTimer:completion:]
-[MTPauseResumeTimerIntentHandler handlePauseTimer:completion:]
B16@?0@"<MTTimerIntentSupport>"8
@"NSError"16@?0@"MTMutableTimer"8
v24@?0@"NSArray"8@"NSError"16
-[MTPauseResumeTimerIntentHandler resolveTargetTimerForResumeTimer:withCompletion:]
-[MTPauseResumeTimerIntentHandler resolveResumeMultipleForResumeTimer:withCompletion:]
-[MTPauseResumeTimerIntentHandler confirmResumeTimer:completion:]
-[MTPauseResumeTimerIntentHandler handleResumeTimer:completion:]
-[MTPauseResumeTimerIntentHandler _responseToPauseTimerIntent:withPausedTimers:error:dryRun:]
confirm
handle
due to error %@
confirmed
handled
-[MTPauseResumeTimerIntentHandler _responseToResumeTimerIntent:withResumedTimers:error:dryRun:]
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
StartDate
EndDate
EndReason
Intervals
MetaData
NeedsAdditionalProcessing
needsAdditionalProcessing: %d
intervals: %lu
<%@ %p start: %@ end: %@ %@ reason: %@ metadata: %@>
supportsSecureCoding
TB,R
startDate
T@"NSDate",R,N
endDate
intervals
T@"NSArray",R,N
sampleType
Tq,R,N
metadata
T@"NSDictionary",R,N
endReason
TQ,R,N
needsAdditionalProcessing
TB,R,N
T@"NSDate",&,N,V_startDate
T@"NSDate",&,N,V_endDate
T@"NSArray",&,N,V_intervals
TQ,N,V_endReason
T@"NSDictionary",&,N,V_metadata
TB,N,V_needsAdditionalProcessing
AlarmDismissal
WakeTimeReached
ConfigurationChanged
ManualExit
Error
alarmId
hour
minute
allowsSnooze
isSleepAlarm
bedtimeReminderMinutes
bedtimeHour
bedtimeMinute
daySetting
repeatDay
totalRepeatCount
remainingRepeatCount
title
soundType
sound
soundVolume
soundSongId
lastModified
revision
vibe
AlarmFiredNotificationNamePrefix
AlarmSnoozedNotificationNamePrefix
AlarmEditingProxyID
ALARM_DEFAULT_TITLE
%@::%@
Settings :: ID is wrong type
Settings :: ID is invalid
Settings :: hour is wrong type
Settings :: hour is invalid
Settings :: minute is wrong type
Settings :: minute is invalid
Settings :: day setting is wrong type
Settings :: day setting is invalid
Settings :: settings %@
Settings is nil
Alarms
q24@?0@"Alarm"8@"Alarm"16
x-apple-clock:alarm?id=
/Library/Caches/com.apple.xbs/Sources/MobileTimer_Sim/MobileTimer-1207/Framework/Alarm.m
<Unknown File>
Invalid parameter not satisfying: %@
volumeIsValid
%@ %d:%02d 0x%04X "%@" %@ <%@ #%i> %@
alarmID
T@"NSString",&,N,V_alarmID
alarmIDURL
T@"NSURL",&,N,V_alarmIDURL
editingProxy
T@"Alarm",R,N,V_editingProxy
settings
active
TB,R,N,GisActive
snoozed
TB,R,N,GisSnoozed,V_snoozed
TB,N,V_isSleepAlarm
T@"NSNumber",C,N
TI,N,V_hour
TI,N,V_minute
Tq,N
repeats
repeatDays
TI,N,V_daySetting
TB,N,V_allowsSnooze
Tq,R,N,V_soundType
T@"NSString",R,N,V_sound
uiTitle
T@"NSString",R,N
T@"NSString",&,N,V_title
vibrationID
T@"NSString",&,N
T@"NSDate",R,N,V_lastModified
TI,R,N,V_revision
delegate
T@"<AlarmDelegate>",W,N,V_delegate
forceActiveForMigration
TB,N,V_forceActiveForMigration
/Library/Caches/com.apple.xbs/Sources/MobileTimer_Sim/MobileTimer-1207/Framework/MTXPCConnectionInfo.m
exportedObject: %@ must conform to protocol: %@
<%@:%p %@>
machServiceName
T@"NSString",C,N,V_machServiceName
remoteObjectInterface
T@"NSXPCInterface",&,N,V_remoteObjectInterface
exportedObject
T@,&,N,V_exportedObject
exportedObjectInterface
T@"NSXPCInterface",&,N,V_exportedObjectInterface
lifecycleNotification
T@"NSString",C,N,V_lifecycleNotification
requiredEntitlement
T@"NSString",C,N,V_requiredEntitlement
options
TQ,N,V_options
-[MTToggleAlarmIntentHandler handleEnableAlarm:completion:]
v20@?0B8q12
-[MTToggleAlarmIntentHandler handleDisableAlarm:completion:]
v16@?0@"NSError"8
B16@?0@"MTAlarm"8
v16@?0@"NSArray"8
@"MTIntentAlarm"16@?0@"MTAlarm"8
-[MTToggleAlarmIntentHandler handleToggleAlarm:completion:]
Found no alarm to enable/disable
@"NAFuture"16@?0@"NSArray"8
v16@?0@"NSNull"8
com.apple.clock.alarm
B16@?0@"NSString"8
com.apple.language.changed
/Library/Caches/com.apple.xbs/Sources/MobileTimer_Sim/MobileTimer-1207/Framework/MTScheduledList.m
Not a mutable ordered collection
q24@?0@"MTScheduledObject"8@"MTScheduledObject"16
B16@?0@"MTScheduledObject"8
v8@?0
@"MTScheduledObject"16@?0@"MTTrigger"8
v16@?0@"MTScheduledObject"8
Alerts: %@, Notifications: %@, Events: %@
T@"<MTScheduledListDelegate>",W,N,V_delegate
orderedScheduledAlerts
T@"NSMutableOrderedSet",&,N,V_orderedScheduledAlerts
orderedScheduledNotifications
T@"NSMutableOrderedSet",&,N,V_orderedScheduledNotifications
orderedScheduledEvents
T@"NSMutableOrderedSet",&,N,V_orderedScheduledEvents
scheduledAlertMap
T@"NSMutableDictionary",&,N,V_scheduledAlertMap
numberOfScheduledAlerts
numberOfScheduledAlertsAndNotifications
scheduledAlerts
scheduledAlertsAndNotifications
scheduledObjects
storage
T@"NSMutableDictionary",&,N,V_storage
MTTimers
MTTimerModifiedDate
MTTimerStorageVersion
com.apple.mobiletimerd.MTTimerStorage
com.apple.MTTimerStorage.access-queue
timerID
Timer already exists!
Can't update timer from %@ to %@
Timer doesn't exist
Timer does not exist!
v16@?0@"<MTTimerObserver>"8
B16@?0@"MTTimer"8
q24@?0@"MTTimer"8@"MTTimer"16
Timers
Timers Last Modified
state
None
fired
modified
toneID: %@, mediaItemID: %@, vibeID: %@, volume: %@
timers
nextTimer
T@"MTTimer",R,N
lastModifiedDate
orderedTimers
T@"NSMutableArray",&,N,V_orderedTimers
T@"NSDate",C,N,V_lastModifiedDate
currentDateProvider
T@?,R,C,N,V_currentDateProvider
migrator
T@"MTTimerMigrator",&,N,V_migrator
serializer
T@"<NAScheduler>",&,N,V_serializer
observers
T@"MTObserverStore",&,N,V_observers
persistence
T@"<MTPersistence>",&,N,V_persistence
scheduler
T@"MTTimerScheduler",W,N,V_scheduler
com.apple.MTNotificationManager.serialqueue
com.apple.distnoted.matching
com.apple.notifyd.matching
com.apple.alarm
v16@?0@"NSObject<OS_xpc_object>"8
SchedulingAssertionTimeout
listeners
T@"NSMutableArray",&,N,V_listeners
%@%@
mtType
mtCoder
T@"NSCoder",R,N
stack
T@"NSMutableArray",&,N,V_stack
T@"MTAlarmStorage",R,N,V_storage
B16@?0@"MTTrigger"8
/Library/Caches/com.apple.xbs/Sources/MobileTimer_Sim/MobileTimer-1207/Framework/MTSleepCoordinatorStateMachineState.m
Unhandled sleep window case!
notificationCenter
T@"UNUserNotificationCenter",&,N,V_notificationCenter
/Library/Caches/com.apple.xbs/Sources/MobileTimer_Sim/MobileTimer-1207/Framework/MTXPCConnectionProvider.m
Connection info must be non-nil
v16@?0@8
@"NAFuture"16@?0@"NSError"8
v24@?0@"NSNumber"8@"NSError"16
@"NAFuture"8@?0
@24@?0@"NSXPCConnection"8@?<v@?@"NSError">16
@"NAFuture"16@?0@"NSXPCConnection"8
T@"<MTScheduler>",&,N,V_serializer
callbackScheduler
T@"<NAScheduler>",&,N,V_callbackScheduler
info
T@"MTXPCConnectionInfo",&,N,V_info
errorHandler
T@?,C,N,V_errorHandler
reconnectHandler
T@?,C,N,V_reconnectHandler
lastLifecycleNotification
T@"NSDate",&,N,V_lastLifecycleNotification
bedtime dnd
keepOffUntilDate
T@"NSDate",&,N,V_keepOffUntilDate
MTAlarmCategory
MTAlarmNoSnoozeCategory
MTBedtimeAlarmCategory
MTWakeUpAlarmCategory
AlarmSnoozeCountdown
MTAlarmDismissAction
MTAlarmSnoozeAction
MTAlarmGoToBedAction
MTBedtimeAlarm
MTSnoozeCountdown
MTScheduledFireDate
MTSnoozeable
MTPlaysOn
com.apple.mobiletimer
com.apple.mobiletimer.user-preferences-and-local-notifications-changed
com.apple.mobiletimer.user-preferences-changed
com.apple.mobiletimer.local-notifications-changed
com.apple.mobiletimer.user-preferences-dirty
HHmmssSS
HHmmss
mmssSS
mmss
HH%@
%1$@
%2$@
%3$@
%4$@
MTKeepDndOffUntilDate
com.apple.mobiletimer.bedtime-mode
com.apple.mobiletimer.bedtime-mode.automatic
v20@?0B8@"NSError"12
removed
isEnabled
isUserRequested
sleepAlarm
T@"MTAlarm",R,N
currentDate
inUserDefinedSleepWindow
alarmStorage
T@"<MTAlarmStorage>",&,N,V_alarmStorage
sleepCoordinator
T@"MTSleepCoordinator",W,N,V_sleepCoordinator
T@?,C,N,V_currentDateProvider
stateMachine
T@"MTBedtimeDNDStateMachine",&,N,V_stateMachine
assertionService
T@"DNDModeAssertionService",&,N,V_assertionService
initialState
T@"MTBedtimeDNDStateMachineInitialState",R,N,V_initialState
offState
T@"MTBedtimeDNDStateMachineOffState",R,N,V_offState
waitingState
T@"MTBedtimeDNDStateMachineWaitingState",R,N,V_waitingState
MTDateFormattingLocaleDidChangeNotification
amString
T@"NSString",R,W,N
pmString
use24HourTime
TB,R,N,V_use24HourTime
timeDesignatorAppearsBeforeTime
TB,R,N,V_timeDesignatorAppearsBeforeTime
@16@?0@"MTIntentRepeatDay"8
bedtimeSessionTrackerDelegate
T@"<MTBedtimeSessionTrackerDelegate>",W,N
trackingEnabled
T@"MTAlarmStorage",&,N,V_alarmStorage
cachedAlarm
T@"MTAlarm",&,N,V_cachedAlarm
alarmLock
T{os_unfair_lock_s=I},N,V_alarmLock
T@"<MTBedtimeSessionTrackerDelegate>",W,N,V_bedtimeSessionTrackerDelegate
Unexpected alert for go to bed action
Unexpected action type: %ld
timerStorage
T@"MTTimerStorage",&,N,V_timerStorage
metrics
T@"MTMetrics",&,N,V_metrics
com.apple.mobiletimerd.reset
MTAlarms
MTSleepAlarm
MTAlarmModifiedDate
MTAlarmStorageVersion
MTAlarmSnoozeDuration
MTBedtimeSnoozeDuration
com.apple.mobiletimerd.MTAlarmStorage
com.apple.MTAlarmStorage.access-queue
MTDefaultTimerVibrationID
Alarm already exists!
Alarm does not exist!
v16@?0@"MTAlarm"8
v16@?0@"<MTAlarmObserver>"8
Sleep Alarm
Alarms Last Modified
enabled
firing
alarms
nextAlarm
allAlarms
orderedAlarms
T@"NSMutableArray",&,N,V_orderedAlarms
T@"MTAlarm",&,N,V_sleepAlarm
T@"NSDate",&,N,V_lastModifiedDate
T@"MTAlarmMigrator",&,N,V_migrator
T@"MTAlarmScheduler",W,N,V_scheduler
Serial MTSpringboardStartMonitor queue
v12@?0i8
v16@?0@"<MTSpringboardStartMonitorObserver>"8
com.apple.springboard.finishedstartup
-[MTCreateTimerIntentHandler resolveLabelForCreateTimer:withCompletion:]
-[MTCreateTimerIntentHandler resolveLabelForCreateTimer:withCompletion:]_block_invoke_2
-[MTCreateTimerIntentHandler resolveLabelForCreateTimer:withCompletion:]_block_invoke
v12@?0B8
-[MTCreateTimerIntentHandler resolveDurationForCreateTimer:withCompletion:]
-[MTCreateTimerIntentHandler resolveTypeForCreateTimer:withCompletion:]
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
-[MTCreateTimerIntentHandler confirmCreateTimer:completion:]
-[MTCreateTimerIntentHandler handleCreateTimer:completion:]
v12@?0I8
@"NAFuture"16@?0@"NSNull"8
B16@?0@"NSObject<MTTimerIntentSupport>"8
-[MTCreateTimerIntentHandler _createTimerWithIntent:dryRun:completion:]_block_invoke
v16@?0@"NSObject<MTTimerIntentSupport>"8
v28@?0@"INCreateTimerIntent"8B16@?<v@?@"INCreateTimerIntentResponse">20
-[MTCreateTimerIntentHandler _responseToCreateTimerIntent:withCreatedTimer:error:dryRun:]
B32@?0@"NSObject<MTTimerIntentSupport>"8Q16^B24
MRMediaRemoteGetNowPlayingApplicationPlaybackState
/System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
MTAlertSoundDuration
<%@:%p alertTopic: %@, toneID: %@, mediaItemID: %llu, vibeID: %@, volume: %@
MTAlarmLastTriggerDate
com.apple.MTAlarmScheduler.alarm-event
com.apple.MTAlarmTask.fire
com.apple.MTAlarmTask.reschedule
com.apple.MTAlarmScheduler.access-queue
v16@?0@?<v@?>8
MTAlarmScheduler
Scheduled alarms
T@"<MTAlarmStorage>",R,N,V_storage
scheduledAlarms
T@"MTScheduledList",R,N,V_scheduledAlarms
T@"<NAScheduler>",R,N,V_serializer
T@"<MTNotificationCenter>",R,N,V_notificationCenter
schedulingDelegate
T@"<MTSchedulingDelegate>",R,N,V_schedulingDelegate
taskScheduler
T@"<MTTaskScheduler>",R,N,V_taskScheduler
defaults
T@"<MTPersistence>",&,N,V_defaults
T@"<MTAlarmScheduleDelegate>",W,N,V_delegate
<%@:%p %@, Trigger: %@>
scheduleable
T@"<MTScheduleable>",C,N,V_scheduleable
trigger
T@"MTTrigger",C,N,V_trigger
type
isVisible
com.apple.MTExponentialBackOffTimer.serial
<%@: %p backoff: %ld>
timer
T@"NSObject<OS_dispatch_source>",&,N,V_timer
block
T@?,C,N,V_block
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
initialTime
Td,N,V_initialTime
currentBackoff
TQ,N,V_currentBackoff
backoffFactor
TQ,N,V_backoffFactor
Create
Update
Enable
Disable
Delete
time
label
identifier
repeat
com.apple.mobiletimer-framework.MobileTimerIntents
v16@?0q8
Alarm
BED_TIME
intentAlarm
T@"MTIntentAlarm",R,N
CSSearchableIndex
Unable to find class %s
/System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight
com.apple.mobiletimerd.diagnostics
com.apple.mobiletimerd
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
T@"<MTAgentDiagnosticDelegate>",W,N,V_delegate
Unexpected nil userBedtime
Wake times don't agree
ALARM_DETAIL_EVERY_MONDAY
ALARM_DETAIL_EVERY_TUESDAY
ALARM_DETAIL_EVERY_WEDNESDAY
ALARM_DETAIL_EVERY_THURSDAY
ALARM_DETAIL_EVERY_FRIDAY
ALARM_DETAIL_EVERY_SATURDAY
ALARM_DETAIL_EVERY_SUNDAY
ALARM_DETAIL_EVERY_DAY
ALARM_DETAIL_WEEKDAYS
ALARM_DETAIL_WEEKENDS
ALARM_SHORT_MONDAY
ALARM_SHORT_TUESDAY
ALARM_SHORT_WEDNESDAY
ALARM_SHORT_THURSDAY
ALARM_SHORT_FRIDAY
ALARM_SHORT_SATURDAY
ALARM_SHORT_SUNDAY
@"NSString"24@?0@"NSString"8@"NSString"16
@"NSString"32@?0@"NSString"8@"NSString"16@"NSString"24
ALARM_REPEAT_NEVER
ALARM_DETAIL_REPEAT_NEVER
ALARM_EVERY_MONDAY
ALARM_MONDAY
ALARM_EVERY_TUESDAY
ALARM_TUESDAY
ALARM_EVERY_WEDNESDAY
ALARM_WEDNESDAY
ALARM_EVERY_THURSDAY
ALARM_THURSDAY
ALARM_EVERY_FRIDAY
ALARM_FRIDAY
ALARM_EVERY_SATURDAY
ALARM_SATURDAY
ALARM_EVERY_SUNDAY
ALARM_SUNDAY
ALARM_EVERY_DAY
ALARM_WEEKDAYS
ALARM_WEEKENDS
com.apple.mobiletimerd.MTCoreDuetMonitor
serialQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
T@"<MTAlarmStorage>",R,N,V_alarmStorage
alarmStatesByAlarmID
T@"NSMutableDictionary",R,N,V_alarmStatesByAlarmID
modifiedDate
com.apple.MTTimerIntentDonor.serialqueue
com.apple.clock.timer
duration
T@"MTTimerStorage",R,N,V_storage
donatedTimerIDs
T@"NSMutableSet",R,N,V_donatedTimerIDs
v40@?0@"NSArray"8@"MTAlarm"16@"MTAlarm"24@"NSError"32
updateBlock
T@?,C,N,V_updateBlock
T@"MTAlarm",&,N,V_nextAlarm
needsUpdate
TB,N,V_needsUpdate
cacheLock
T{os_unfair_lock_s=I},N,V_cacheLock
Restore done
T@"<MTSystemStateDelegate>",W,N,V_delegate
restoreDoneHandled
TB,N,V_restoreDoneHandled
MTTimerDataVersion
MTTimerID
MTTimerState
MTTimerDuration
MTTimerFireTimerClass
MTTimerFireTime
MTTimerTitle
MTTimerLastModifiedDate
MTTimerFiredDate
MTTimerDismissedDate
MTTimerSound
MTTimerSiriContext
DeviceClass
iPad
PerformanceTestingEnabled
/tmp/WorldClock-performance_test.plist
cityAddTest
timestamp
citySent
T@"NSDate",&,N,VlastModified
cities
T@"NSArray",R,N,V_cities
NPSManager
/System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync
com.apple.MTSleepCoordinator.wakeupalarmtimeout-event
MTSleepTimeOutMinutesKey
com.apple.MTSleepCoordinator.access-queue
@"NAFuture"16@?0@8
v16@?0@"<MTSleepObserver>"8
bedtime session
MTSleepCoordinator
sleepTimeOutMinutes
T@"MTSleepCoordinatorStateMachine",&,N,V_stateMachine
cachedSleepAlarm
T@"MTAlarm",&,N,V_cachedSleepAlarm
sleepStateResolved
T@"NAFuture",&,N,V_sleepStateResolved
T@"<MTAlarmStorage>",C,N,V_alarmStorage
alarmTimeoutScheduler
T@"MTXPCScheduler",&,N,V_alarmTimeoutScheduler
bedtimeDNDMonitor
T@"MTBedtimeDNDMonitor",&,N,V_bedtimeDNDMonitor
@"NSDate"16@?0@"MTTrigger"8
com.apple.MTOSTransaction.serial
transaction
T@"NSObject<OS_os_transaction>",&,N,V_transaction
MTDeleteTimerIntentHandlerErrorDomain
-[MTDeleteTimerIntentHandler resolveTargetTimerForDeleteTimer:withCompletion:]
-[MTDeleteTimerIntentHandler resolveDeleteMultipleForDeleteTimer:withCompletion:]
-[MTDeleteTimerIntentHandler confirmDeleteTimer:completion:]
-[MTDeleteTimerIntentHandler handleDeleteTimer:completion:]
-[MTDeleteTimerIntentHandler _responseToDeleteTimerIntent:withDeletedTimers:error:dryRun:]
-[MTDeleteTimerIntentHandler _deleteTimer:multiple:dryRun:completion:]
 (dry-run)
-[MTDeleteTimerIntentHandler _deleteTimer:multiple:dryRun:completion:]_block_invoke
@16@?0@"NSObject<MTTimerIntentSupport>"8
Failed to delete%@ timer %@ from timer manager %@ due to ambiguity between timers %@
-[MTSetTimerAttributeIntentHandler handleSetTimerAttribute:completion:]
v24@?0@"INTimer"8@"NSError"16
-[MTSetTimerAttributeIntentHandler confirmSetTimerAttribute:completion:]
-[MTSetTimerAttributeIntentHandler resolveToDurationForSetTimerAttribute:withCompletion:]
-[MTSetTimerAttributeIntentHandler resolveTargetTimerForSetTimerAttribute:withCompletion:]
-[MTSetTimerAttributeIntentHandler _responseToSetTimerAttributeIntent:withUpdatedTimer:error:dryRun:]
Failed to update%@ timer %@ from timer manager %@ - renaming from %@ to %@ is not supported.
Failed to update%@ timer %@ from timer manager %@ due to invalid duration %f
MTSoundType
MTSoundToneID
MTSoundMediaItemID
MTSoundVibrationID
MTSoundVolume
MTDefaultAlarmSoundType
MTDefaultAlarmToneID
MTDefaultAlarmMediaItemID
MTDefaultAlarmVibrationID
MTDefaultTimerToneID
Unexpected MTSoundCategory: %lu
Sound must be nonnull!
Timer
GoToSleep
WakeUp
Generic
Sound type integer value out of bounds: %lu
Timers only support tones
<%@:%p toneID: %@, mediaItemID: %@, vibeID: %@, volume: %@
v24@?0q8@"NSError"16
TQ,R,N,V_soundType
toneIdentifier
T@"NSString",R,N,V_toneIdentifier
mediaItemIdentifier
T@"NSNumber",R,N,V_mediaItemIdentifier
vibrationIdentifier
T@"NSString",R,N,V_vibrationIdentifier
T@"NSNumber",R,N,V_soundVolume
citiesLastModified
DefaultCityAdded
com.apple.mobiletimer.alarmintent
alarmManager
T@"MTAlarmManager",R,N,V_alarmManager
SnapshotWindow
v16@?0@"Alarm"8
T@"NSMutableArray",&,N,V_alarms
com.apple.mobiletimer.MTAlarmDidFireNotification
MTAlarmID
com.apple.mobiletimer.mode.bedtime
Every Day
Weekdays
Weekends
q24@?0@"MTAlarm"8@"MTAlarm"16
apple-internal-install
Localizable
q24@?0@"MTTrigger"8@"MTTrigger"16
v24@?0@"NSString"8@"NSDate"16
dismissed
bedtime dismissed
bedtime fired
keep off until
<%@:%p Sleep AlarmID: %@, Title: %@, Hour: %ld, Minute: %ld, Bedtime Hour: %ld, Bedtime Minute: %ld, Schedule: %@, enabled: %d, plays on: %@>
<%@:%p AlarmID: %@, Title: %@, Hour: %ld, Minute: %ld, Schedule: %@, enabled: %d>
none
Phone+Watch
Watch
Phone
TQ,N,V_hour
TQ,N,V_minute
TQ,N,V_bedtimeHour
TQ,N,V_bedtimeMinute
TQ,N
bedtimeReminder
T@"NSNumber",C,N,V_bedtimeReminder
bedtimeDoNotDisturb
TB,N,V_bedtimeDoNotDisturb
bedtimeDoNotDisturbOptions
TQ,N,V_bedtimeDoNotDisturbOptions
timeInBedTracking
TB,N,V_timeInBedTracking
sleepSchedule
TB,N,V_sleepSchedule
repeatSchedule
TQ,N,V_repeatSchedule
TB,N,GisEnabled,V_enabled
playOptions
TQ,N,V_playOptions
TB,N,GisSleepAlarm,V_sleepAlarm
snoozeFireDate
T@"NSDate",C,N,V_snoozeFireDate
bedtimeSnoozeFireDate
T@"NSDate",C,N,V_bedtimeSnoozeFireDate
firedDate
T@"NSDate",C,N,V_firedDate
dismissedDate
T@"NSDate",C,N,V_dismissedDate
dismissedAction
TQ,N,V_dismissedAction
bedtimeFiredDate
T@"NSDate",C,N,V_bedtimeFiredDate
bedtimeDismissedDate
T@"NSDate",C,N,V_bedtimeDismissedDate
bedtimeDismissedAction
TQ,N,V_bedtimeDismissedAction
T@"NSDate",C,N,V_keepOffUntilDate
T@"NSString",C,N,V_title
T@"MTSound",C,N,V_sound
onboardingVersion
TQ,N,V_onboardingVersion
T@"NSUUID",R,N,V_alarmID
alarmURL
T@"NSURL",R,N
playsOnThisDevice
TB,R,N,GisFiring
TB,R,N,GisSnoozed
displayTitle
sleepDuration
nextFireDate
TQ,D,N
T@"NSNumber",C,D,N
TB,D,N
TB,D,N,GisEnabled
T@"NSString",C,D,N
T@"MTSound",C,D,N
DismissAlarm
DismissGoToBedNotification
ConfirmGoToBedNotification
DismissWakeUpAlarm
DismissSnoozeCountdownNotification
DismissWakeUpAlarmTimeOut
AlarmConfigurationChanged
WakeUpAlarmConfigurationChanged
SnoozeAlarm
SnoozeWakeUpAlarm
SnoozeGoToBedNotification
MTUnprocessedSessions
BedtimeSession.data
v16@?0@"<MTBedtimeSession>"8
v24@?0@8@"NSError"16
@"<MTBedtimeSession>"16@?0@"<MTBedtimeSession>"8
healthStore
T@"HKHealthStore",&,N,V_healthStore
archivedSessionDataPath
T@"NSString",C,N,V_archivedSessionDataPath
archivedSessionDataFile
T@"NSString",C,N,V_archivedSessionDataFile
bedtimeSessionTracker
T@"<MTBedtimeSessionTracker>",&,N,V_bedtimeSessionTracker
com.apple.MTMetrics.serialqueue
com.apple.MobileTimer.SleepAlarm.add
com.apple.MobileTimer.Alarm.add
com.apple.MobileTimer.SleepAlarm.delete
com.apple.MobileTimer.Alarm.delete
com.apple.MobileTimer.SleepAlarm.update
com.apple.MobileTimer.Alarm.update
com.apple.MobileTimer.Alarm.snooze
com.apple.MobileTimer.WakeUp.snooze
com.apple.MobileTimer.Bedtime.snooze
com.apple.MobileTimer.Alarm.dismiss
com.apple.MobileTimer.Bedtime.dismiss
com.apple.MobileTimer.Bedtime.confirm
com.apple.MobileTimer.WakeUp.dismiss
com.apple.MobileTimer.Alarm.snooze.stop
com.apple.MobileTimer.Timer.add
com.apple.MobileTimer.Timer.delete
com.apple.MobileTimer.Timer.update
com.apple.MobileTimer.Timer.dismiss
com.apple.MobileTimer.Timer.repeat
com.apple.MobileTimer.Sync.success
com.apple.MobileTimer.Sync.failure
%@.%@
com.apple.MobileTimer.Sync.Error
operationStartTime
TQ,N,V_operationStartTime
com.apple.mobiletimer-framework.preferences-and-notifications-changed
com.apple.mobiletimer-framework.preferences-changed
com.apple.mobiletimer-framework.local-notifications-changed
bundleIdentifier
refreshManagers
TB,N,V_refreshManagers
B16@?0q8
B16@?0d8
com.apple.mobiletimer.MTUserDefaults
Distributed
userDefaults
T@"NSUserDefaults",&,N,V_userDefaults
T@"NSMutableDictionary",&,N,V_observers
ReleaseType
Vendor
v16@?0@"<MTSensitiveUIStateObserver>"8
notifyToken
Ti,N,V_notifyToken
hideSensitiveUI
TB,N,V_hideSensitiveUI
needPrefsUpdate
TB,N,V_needPrefsUpdate
lock
T{os_unfair_lock_s=I},N,V_lock
com.apple.NanoAlarm
com.apple.private.NanoTimer
com.apple.private.OldNanoTimer
assistant_service
@"NSDate"8@?0
/Library/Caches/com.apple.xbs/Sources/MobileTimer_Sim/MobileTimer-1207/Framework/MTUtilities.m
date can't be nil
@"NSDate"16@?0@"NSDate"8
clock-worldclock
clock-alarm
clock-sleep-alarm
clock-stopwatch
clock-timer-running
clock-timer
v16@?0@"MTTimer"8
@"NAFuture"16@?0@"NSString"8
%@:default
list
lastTimer
mtClockAppSection
Ti,R,N
mtIsList
mtIsForLastTimer
mtID
internalScheduler
T@"<NAScheduler>",R,N,V_internalScheduler
internalQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_internalQueue
com.apple.%@.serial
city
languageCode
timeZone
countryCode
name
unlocalizedName
countryName
unlocalizedCountryName
America/Los_Angeles
Cupertino
%@ %@
%@ %@, %@ || %@ %@ || %@, %@
x-apple-clock:world-clock?
alcid=%d
ccid=
properties
alCity
T@"ALCity",R,N,V_alCity
alCityId
T@"NSNumber",R,N
unlocalizedCityName
idUrl
[%@] title: [%@] fireDate: [%@] identifier: [%@] clockAppSectionURL: [%@]
fireDate
T@"NSDate",C,N,V_fireDate
T@"NSString",C,N,V_identifier
clockAppSectionURL
T@"NSURL",R,C,N
com.apple.MTNextAlarmManager.accessqueue
@16@?0@"MTAlarm"8
nextAlarms
T@"NSSet",&,N,V_nextAlarms
T@"MTAlarmManager",&,N,V_alarmManager
updateHandler
T@?,C,N,V_updateHandler
MTBedtimeExpirationDuration
v16@?0@"UNUserNotificationCenter"8
com.apple.mobiletimer-framework
ALARM_STOP_ACTION
Stop
ALARM_SNOOZE_ACTION
Snooze
SNOOZE_STOP
TIMER_STOP_ACTION
TIMER_REPEAT_ACTION
Repeat
BEDTIME_GO_TO_BED_ACTION
Going to Bed Now
BEDTIME_SNOOZE_ACTION
Remind in 10 Min
TIME_FOR_BED_TITLE
Bedtime Reminder
TIME_FOR_BED_ALARM_ON_MESSAGE_FORMAT
_SINGULAR
TIME_FOR_BED_ALARM_OFF_MESSAGE
Your wake-up alarm is turned off.
ALARM_SNOOZING_TITLE
Snoozing
Unexpected trigger type %ld for scheduled alarm %@
Unexpected trigger type %ld for scheduled timer %@
notificationCenters
T@"NSDictionary",&,N,V_notificationCenters
actionHandler
T@"MTUserNotificationActionDispatcher",&,N,V_actionHandler
TUCallCenter
/System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities
MRMediaRemoteSendCommand
T@"MTTimer",&,N,V_timer
MTTimerCategory
MTTimerDismissAction
MTTimerRepeatAction
com.apple.mobiletimer.start-timer
com.apple.mobiletimer.stop-timer
fromObject
toObject
<%@:%p %@ = %@ (was %@)>
property
T@"NSString",C,N,V_property
changedValue
T@,&,N,V_changedValue
originalValue
T@,&,N,V_originalValue
v16@?0@"MTChange"8
@24@?0@"NSString"8@"MTChange"16
<%@:%p %@ >
changedProperties
T@"NSSet",&,N,V_changedProperties
changeDictionary
T@"NSDictionary",&,N,V_changeDictionary
changes
bedtimeDNDEndDate
T@"NSDate",R,N,V_bedtimeDNDEndDate
SignificantTimeChange
com.apple.MTTimeListener.access-queue
v16@?0@"<MTTimeObserver>"8
MobileTimer
Agent
Sync
Sleep
Activity
com.apple.mobiletimer.logging
-[MTCreateSingleTimerIntentHandler resolveLabelForCreateTimer:withCompletion:]
-[MTCreateSingleTimerIntentHandler resolveDurationForCreateTimer:withCompletion:]
-[MTCreateSingleTimerIntentHandler resolveDurationForCreateTimer:withCompletion:]_block_invoke
-[MTCreateSingleTimerIntentHandler confirmCreateTimer:completion:]
-[MTCreateSingleTimerIntentHandler handleCreateTimer:completion:]
-[MTCreateSingleTimerIntentHandler _responseToCreateTimerIntent:withCreatedTimer:error:dryRun:]
com.apple.mobiletimer-framework.preferences-and-notifications-changed-externally
com.apple.mobiletimer-framework.preferences-changed-externally
com.apple.mobiletimer-framework.local-notifications-changed-externally
com.apple.MTGCDTimer
kMTScheduleTaskOSTransactionId
kMTScheduleTaskGroupOSTransactionId
<%@:%p %@ delay:%f>
delay
Td,N,V_delay
completableBlock
T@?,C,N,V_completableBlock
T@"MTGCDTimer",&,N,V_timer
<%@:%p tasks: %@>
tasks
T@"NSArray",C,N,V_tasks
completionBlock
T@?,C,N,V_completionBlock
Tq,N,V_type
T@"NSString",C,N,V_name
powerAssertion
T@"MTPowerAssertion",&,N,V_powerAssertion
assertionTimeout
Td,R,N,V_assertionTimeout
T@"NSString",R,N,V_name
v32@?0@"NSArray"8@"MTTimer"16@"NSError"24
T@"MTTimer",&,N,V_nextTimer
MTTimerTimeInterval
MTTimerTimeDate
remainingTime
Td,R,N
Td,R,N,V_remainingTime
date
T@"NSDate",C,N,V_date
MTTimerManagerTimersAdded
MTTimerManagerTimersUpdated
MTTimerManagerTimersRemoved
MTTimerManagerTimerFired
MTTimerManagerFiringTimerChanged
MTTimerManagerFiringTimerDismissed
MTTimerManagerNextTimerChanged
MTTimerManagerTimersChanged
MTTimerManagerStateReset
MTTimerManagerPreferencesChanged
NextTimer
com.apple.mobiletimerd.MTTimerManager
@"MTXPCConnectionProvider"16@?0@"MTTimerManager"8
v16@?0@"<MTTimerServer>"8
v20@?0@?<v@?@"NSArray"@"MTTimer"@"NSError">8B16
Timer is running but doesn't have a next trigger.
v32@?0@"MTTimer"8Q16^B24
/Library/Caches/com.apple.xbs/Sources/MobileTimer_Sim/MobileTimer-1207/Framework/MTTimerManager.m
State can't be unknown
@"NAFuture"16@?0@"MTTimer"8
%@ cannot restart a timer (%@) that isn't stopped.
Start timer isn't finished, but expected it to be
v24@?0@"NSNull"8@"NSError"16
Update Timer isn't finished, but expected it to be
notificationObject
T@,R,N
T@"NSNotificationCenter",R,N
T@"MTTimerManagerExportedObject",&,N,V_exportedObject
connectionProvider
T@"MTXPCConnectionProvider",R,N,V_connectionProvider
cache
T@"MTTimerCache",&,N,V_cache
T@"NSNotificationCenter",&,N,V_notificationCenter
timerManager
T@"MTTimerManager",R,W,N,V_timerManager
-[MTResetTimerIntentHandler resolveTargetTimerForResetTimer:withCompletion:]
-[MTResetTimerIntentHandler confirmResetTimer:completion:]
-[MTResetTimerIntentHandler handleResetTimer:completion:]
-[MTResetTimerIntentHandler _responseToResetTimerIntent:withResetTimers:error:dryRun:]
/Library/Caches/com.apple.xbs/Sources/MobileTimer_Sim/MobileTimer-1207/Framework/MTObserverStore.m
observer cannot be nil
observersLock
T{os_unfair_lock_s=I},N,V_observersLock
T@"NSHashTable",&,N,V_observers
count
Date
UserVisible
eventName
T@"NSString",C,N,V_eventName
MTAlarmManagerAlarmsAdded
MTAlarmManagerAlarmsUpdated
MTAlarmManagerAlarmsRemoved
MTAlarmManagerNextAlarmChanged
MTAlarmManagerAlarmFired
MTAlarmManagerFiringAlarmDismissed
MTAlarmManagerFiringAlarmChanged
MTAlarmManagerAlarmsChanged
MTAlarmManagerStateReset
NextAlarm
.siri_data_changed
com.apple.alarm.label
@"MTXPCConnectionProvider"16@?0@"MTAlarmManager"8
v16@?0@"<MTAlarmServer>"8
v20@?0@?<v@?@"NSArray"@"MTAlarm"@"MTAlarm"@"NSError">8B16
@"NSArray"40@?0@"NSArray"8@"MTAlarm"16@"MTAlarm"24@"NSError"32
/Library/Caches/com.apple.xbs/Sources/MobileTimer_Sim/MobileTimer-1207/Framework/MTAlarmManager.m
Expected alarm future to be finished.
Expected next alarm future to be finished.
B32@?0@"MTAlarm"8Q16^B24
T@"MTAlarmManagerExportedObject",&,N,V_exportedObject
T@"MTAlarmCache",&,N,V_cache
T@"MTAlarmManager",R,W,N,V_alarmManager
-[MTUpdateTimerIntentHandler _updateTimer:dryRun:allowMultiple:excludeStoppedTimers:filterBlock:updateBlock:completion:]
-[MTUpdateTimerIntentHandler _updateTimer:dryRun:allowMultiple:excludeStoppedTimers:filterBlock:updateBlock:completion:]_block_invoke
B32@?0@"<MTTimerIntentSupport>"8Q16^B24
Failed to update%@ timer %@ from timer manager %@ due to ambiguity between timers %@
v32@?0@"NSObject<MTTiming>"8Q16^B24
-[MTSearchTimerIntentHandler handleSearchForTimers:completion:]
@16@?0@"<MTTimerIntentSupport>"8
-[MTSearchTimerIntentHandler handleSearchForTimers:completion:]_block_invoke
com.apple.MTAlarmIntentDonor.access-queue
alarmsByID
T@"NSMutableDictionary",R,N,V_alarmsByID
com.apple.MTLegacyManager
com.apple.springboard
UpgradeAttempted
SBCountdownTimerSoundIdentifier
AlarmList
allows snooze
sound path
setting
SBCountdownTimerTimeIdentifier
timerSleepiPod
timerSound
SleepAlarm
TIMER_INTERVAL
AlarmsLastModified
T@"NSObject<OS_dispatch_queue>",&,N,V_serializer
scheduledNotifications
T@"NSArray",&,N,V_scheduledNotifications
T@"NSArray",&,N,V_alarms
T@"Alarm",&,N,V_sleepAlarm
defaultDuration
Td,N,V_defaultDuration
defaultSound
T@"NSString",C,N,V_defaultSound
loaded
TB,N,V_loaded
purged
TB,N,V_purged
GSSendAppPreferencesChanged
/System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
/Library/Caches/com.apple.xbs/Sources/MobileTimer_Sim/MobileTimer-1207/Framework/MTXPCConnectionListenerProvider.m
com.apple.MTXPCConnectionListenerProvider.serialqueue
v16@?0@"MTXPCClientInfo"8
clients
T@"NSMutableSet",&,N,V_clients
connectionListener
T@"NSXPCListener",&,N,V_connectionListener
connectedClients
com.apple.MTAgent
Launched
launchDate
T@"NSDate",&,N,V_launchDate
systemReady
TB,N,V_systemReady
notificationManager
T@"MTAgentNotificationManager",&,N,V_notificationManager
systemStateListener
T@"MTSystemStateListener",&,N,V_systemStateListener
languageChangeListener
T@"MTLanguageChangeListener",&,N,V_languageChangeListener
diagnostics
T@"MTAgentDiagnosticListener",&,N,V_diagnostics
timeListener
T@"MTTimeListener",&,N,V_timeListener
alarmServer
T@"MTAlarmServer",&,N,V_alarmServer
alarmScheduler
T@"MTAlarmScheduler",&,N,V_alarmScheduler
alarmSnapshot
T@"MTAlarmSnapshot",&,N,V_alarmSnapshot
timerServer
T@"MTTimerServer",&,N,V_timerServer
timerScheduler
T@"MTTimerScheduler",&,N,V_timerScheduler
timerSnapshot
T@"MTTimerSnapshot",&,N,V_timerSnapshot
T@"<MTNotificationCenter>",&,N,V_notificationCenter
alarmIntentDonor
T@"MTAlarmIntentDonor",&,N,V_alarmIntentDonor
timerIntentDonor
T@"MTTimerIntentDonor",&,N,V_timerIntentDonor
coreDuetMonitor
T@"MTCoreDuetMonitor",&,N,V_coreDuetMonitor
T@"MTSleepCoordinator",&,N,V_sleepCoordinator
bedtimeSessionManager
T@"MTBedtimeSessionManager",&,N,V_bedtimeSessionManager
T@"MTBedtimeSessionTracker",&,N,V_bedtimeSessionTracker
v16@?0@"NSObject<MTAlarmDataSourceObserver>"8
v16@?0@"NSNotification"8
T@"MTStateMachine",W,N,V_stateMachine
; currentState: %@>
currentState
T@"MTStateMachineState",&,N,V_currentState
T@"<MTStateMachineDelegate>",W,N,V_delegate
infoProvider
T@"<MTStateMachineInfoProvider>",W,N,V_infoProvider
com.apple.MTSleepMetrics.serialqueue
v16@?0@"<MTSleepDataObserver>"8
v32@?0@"HKObserverQuery"8@?<v@?>16@"NSError"24
v32@?0@"HKQuery"8@"NSArray"16@"NSError"24
healthObserver
T@"HKObserverQuery",&,N,V_healthObserver
sleepDataObservers
T@"MTObserverStore",&,N,V_sleepDataObservers
T@"<MTTimerManagerIntentSupport>",R,N
MTTimerLastTriggerDate
com.apple.MTTimerScheduler.timer-event
com.apple.MTTimerTask.fire
com.apple.MTTimerTask.reschedule
com.apple.MTTimerScheduler.access-queue
Scheduled timers
MTTimerScheduler
T@"<MTTimerStorage>",&,N,V_storage
scheduledTimers
T@"MTScheduledList",R,N,V_scheduledTimers
T@"<MTTimerSchedulerDelegate>",W,N,V_delegate
id  _Nullable NAAssertCast(Class  _Nonnull __unsafe_unretained, id  _Nonnull __strong)
<Unknown Function>
/SWE/iOS/BuildRoots/BuildRoot1009/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.6.Internal.sdk/System/Library/PrivateFrameworks/NetAppsUtilities.framework/Headers/NSObject+NAAdditions.h
Expected class of %@ but was %@
com.apple.private.mobiletimerd
com.apple.MobileTimer.alarmserver
com.apple.MobileTimer.timerserver
com.apple.mobile.keybagd.first_unlock
MTDeviceHasBeenUnlockedForFirstTime
com.apple.MTDeviceUtilities.work-queue
Unlocked since boot
workScheduler
T@"<NAScheduler>",&,N,V_workScheduler
internalHasBeenUnlockedSinceBoot
TB,N,V_internalHasBeenUnlockedSinceBoot
CURRENT_TIMER
MTTimerDefaultDuration
com.apple.mobiletimer.MTTimerDidFireNotification
x-apple-clock:timer?id=
TIMER_DEFAULT_TITLE
<%@:%p TimerID: %@, Title: %@, state:%@, duration:%d, firedDate: %@, dismissedDate: %@, sound: %@, siriContext: %@>
Stopped
Running
Paused
Unknown
Timer duration can only be modified while stopped.
Timer duration must be positive.
Unexpected timer state: %ld
fireTime
T@"<MTTimerTime>",C,N,V_fireTime
TQ,N,V_state
Td,N,V_duration
siriContext
T@"NSDictionary",C,N,V_siriContext
timerIDString
T@"NSUUID",R,N,V_timerID
timerURL
hasDefaultTitle
T@"NSDate",C,D,N
T@"NSDictionary",C,D,N
Td,D,N
com.apple.MTAlarmServer.wakeup
com.apple.MTAlarmServer.ready
com.apple.mobiletimerd.MTAlarmServer
com.apple.MTAlarmServer.ready-queue
v16@?0@"<MTAlarmClient>"8
Alarm system ready
Alarm clients
processName
connectionListenerProvider
T@"MTXPCConnectionListenerProvider",R,N,V_connectionListenerProvider
TB,R,N,GisSystemReady,V_systemReady
MTTimerIntentHandlerErrorDomain
v32@?0@"<MTTimerIntentSupport>"8Q16^B24
-[MTTimerIntentHandler _matchTimersFromIntentsTimer:excludeStoppedTimers:completion:]_block_invoke
-[MTTimerIntentHandler _genericallyResolveTargetTimer:multiple:allowedTimerStatesForFollowup:completion:]_block_invoke
-[MTTimerIntentHandler _genericallyResolveTargetTimer:multiple:allowedTimerStatesForFollowup:completion:]_block_invoke_2
T@"<MTTimerManagerIntentSupport>",&,N,V_timerManager
timerManagerProvider
T@"<MTTimerManagerProviding>",W,N,V_timerManagerProvider
q24@?0@"NSObject<MTTimerIntentSupport>"8@"NSObject<MTTimerIntentSupport>"16
MTTriggerType
MTTriggerDate
<%@:%p Date: %@, Trigger: %@>
Alert
Snoozed
Go To Bed
Snoozed Go To Bed
Wake Up
Snoozed Wake Up
Snooze Countdown
Bedtime
Waketime
triggerType
TQ,N,V_triggerType
triggerDate
T@"NSDate",C,N,V_triggerDate
isForSnooze
isForGoToBed
isForAlert
isForNotification
isScheduled
isEvent
isBedtimeRelated
isWakeUpRelated
com.apple.MTTimerServer.wakeup
com.apple.MTTimerServer.ready
com.apple.mobiletimerd.MTTimerServer
com.apple.MTTimerServer.ready-queue
v16@?0@"<MTTimerClient>"8
Timer system ready
Timer clients
MTAlarmDataVersion
MTAlarmHour
MTAlarmMinute
MTAlarmBedtimeHour
MTAlarmBedtimeMinute
MTAlarmBedtimeReminderMinutes
MTAlarmBedtimeDoNotDisturb
MTAlarmBedtimeDoNotDisturbOptions
MTAlarmTimeInBedTrackingKey
MTAlarmSleepScheduleKey
MTAlarmBedtimeForSleepTracking
MTAlarmWakeupForSleepTracking
MTAlarmRepeatSchedule
MTAlarmEnabled
MTAlarmActive
MTAlarmPlayOptions
MTAlarmFiring
MTAlarmIsSleep
MTAlarmAllowsSnooze
MTAlarmSnoozeFireDate
MTAlarmBedtimeSnoozeFireDate
MTAlarmFireDate
MTAlarmDismissDate
MTAlarmLastModifiedDate
MTAlarmBedtimeFireDate
MTAlarmBedtimeDismissDate
MTAlarmBedtimeDismissAction
MTAlarmKeepOffUntilDate
MTAlarmTitle
MTAlarmSound
MTAlarmIsNew
MTAlarmOnboardingVersion
handler
T@?,C,N,V_handler
T@"MTOSTransaction",&,N,V_transaction
notification
T^{__CFUserNotification=},N,V_notification
v16@?0@"NSString"8
notifications
T@"NSMutableDictionary",&,N,V_notifications
B16@?0@"MTCFUserNotification"8
MTTimerIntentSupportSiriContextTimerTypeKey
T@"NSUUID",R,N
<%@:%p ProcessName: %@ ProcessID: %@ Connected: %@ Connection: %@>
%@-%d
connection
T@"NSXPCConnection",&,N,V_connection
clientLink
T@,&,N,V_clientLink
connectedDate
T@"NSDate",&,N,V_connectedDate
processID
T@"NSString",R,C,N
asleepState
T@"MTSleepCoordinatorStateMachineAsleepState",&,N,V_asleepState
awakeState
T@"MTSleepCoordinatorStateMachineAwakeState",&,N,V_awakeState
disabledState
T@"MTSleepCoordinatorStateMachineDisabledState",&,N,V_disabledState
T@"INObject",C,D,N
dateComponents
T@"NSDateComponents",C,D,N
requiresAppLaunch
Tq,D,N
T@"NSArray",C,D,N
code
Tq,N,V_code
alarm
T@"MTIntentAlarm",C,D,N
operation
value
@33
 @ff&@
ff&@
MTPauseResumeTimerIntentHandler
INPauseTimerIntentHandling
NSObject
INResumeTimerIntentHandling
MTTimeInBedSession
MTBedtimeSession
NSSecureCoding
NSCoding
Alarm
MTXPCConnectionInfo
MTToggleAlarmIntentHandler
MTEnableAlarmIntentHandling
MTDisableAlarmIntentHandling
MTToggleAlarmIntentHandling
MTLanguageChangeListener
MTAgentNotificationListener
MTScheduledList
MTSleepCoordinatorStateMachineAsleepState
MTInMemoryDefaults
MTPersistence
MTTimerStorage
MTTimerSchedulerDelegate
MTAgentDiagnosticDelegate
MTAgentNotificationManager
MTDictionarySerializable
NSCopying
MTStorageWriter
MTSerializer
MTStorageReader
MTStorageReaderV1
MTAlarmSnapshot
MTAlarmObserver
MTSleepCoordinatorStateMachineState
MTSleepCoordinatorStateMachineEventHandler
MTStateMachineEventHandler
MTUserNotificationAppDelegate
UNUserNotificationCenterDelegate
MTXPCConnectionProvider
MTBedtimeDNDStateMachineUserRequestedOffState
ClockManager
IntentsSupport
MTTimerManagerIntentSupport
MTBedtimeDNDMonitor
DNDModeAssertionUpdateListener
MTBedtimeDNDStateMachineInfoProvider
MTStateMachineInfoProvider
MTBedtimeDNDStateMachineDelegate
MTStateMachineDelegate
MTSleepObserver
MTTimeObserver
MTBedtimeDNDStateMachine
MTBedtimeDNDStateMachineEventHandler
MTDateFormatting
MTCreateAlarmIntentHandler
MTCreateAlarmIntentHandling
MTBedtimeSessionTracker
MTUserNotificationActionDispatcher
MTUpdateAlarmIntentHandler
MTUpdateAlarmIntentHandling
MTBedtimeDNDStateMachineInitialState
MTAlarmStorage
MTAlarmScheduleDelegate
MTSpringboardStartMonitor
MTCreateTimerIntentHandler
INCreateTimerIntentHandling
MTSound_Notifications
MTAlarmScheduler
MTScheduledListDelegate
MTScheduledObject
NAEquatable
NAHashable
MTScheduling
MTScheduleable
MTExponentialBackOffTimer
MTAlarmIntent
MTAgentDiagnosticListener
MTTimeInBedSessionTracker
MTCoreDuetMonitor
MTTimerIntentDonor
MTTimerObserver
MTAlarmCache
MTDistributedNotificationPoster
MTNotificationCenter
MTBedtimeDNDStateMachineOffState
MTSystemStateListener
Properties
WorldClockManager
MTSleepCoordinator
MTSource
MTSleepCoordinatorStateMachineDelegate
MTSleepCoordinatorStateMachineInfoProvider
SleepCoordinator
MTOSTransaction
MTDeleteTimerIntentHandler
INDeleteTimerIntentHandling
MTSetTimerAttributeIntentHandler
INSetTimerAttributeIntentHandling
MTSound
WorldClockPreferences
MTAlarmIntentHandler
MTSnapshotScheduler
MTAlarmMigrator
MTAlarm
MTSerializable
NSMutableCopying
MTMutableAlarm
MTBedtimeSessionManager
MTBedtimeSessionTrackerDelegate
MTMetrics
NotificationRelay
MTTimerSnapshot
MTUserDefaults
MTSensitiveUIMonitor
MTUtilities
_MTSerialQueueScheduler
MTScheduler
NAScheduler
MTExpiringFuture
WorldClockCity
MTNextAlarm
MTNextAlarmManager
MTUserNotificationCenter
MTTimerMigrator
MTChange
MTChangeSet
ChangeSet
MTBedtimeDNDStateMachineOnState
MTDictionarySerializer
MTDictionaryDeserializer
MTTimeListener
MTSleepCoordinatorStateMachineDisabledState
MTCreateSingleTimerIntentHandler
DistributedNotificationPoster
MTGCDTimer
MTGCDTaskScheduler
MTTaskScheduler
MTTask
MTTaskGroup
MTAgentNotification
MTNotification
MTBedtimeDNDStateMachineWaitingState
MTGetAlarmsIntentHandler
MTGetAlarmsIntentHandling
MTPowerAssertion
MTTimerCache
MTTimerTime
MTTimerTimeInterval
MTTimerDate
MTTimerManager
MTUserDefaultNotificationObserver
MTTimerManagerExportedObject
MTTimerClient
MTResetTimerIntentHandler
INResetTimerIntentHandling
MTObserverStore
MTXPCScheduler
MTSchedulingDelegate
MTAlarmManager
MTAlarmManagerExportedObject
MTAlarmClient
MTNotifiying
Notification
MTUpdateTimerIntentHandler
MTSearchTimerIntentHandler
INSearchForTimersIntentHandling
MTBedtimeDNDStateMachineState
MTAlarmIntentDonor
MTLegacyManager
MTXPCConnectionListenerProvider
NSXPCListenerDelegate
MTAgent
MTSystemStateDelegate
MTAlarmDataSource
MTStateMachineState
MTStateMachine
MTSleepMetrics
MTTimerManagerProviding
MTTimerScheduler
MTAlarmServer
MTXPCServer
MTTimerServer
MTAdditions
MTDeviceListener
MTTimer
MTMutableTimer
MTTimerIntentHandler
MTTrigger
MTSleepCoordinatorStateMachineAwakeState
MTCFUserNotification
MTCFUserNotificationPoster
MTTimerIntentSupport
MTXPCClientInfo
MTSleepCoordinatorStateMachine
MTCreateAlarmIntent
MTCreateAlarmIntentResponse
MTUpdateAlarmIntent
MTUpdateAlarmIntentResponse
MTEnableAlarmIntent
MTEnableAlarmIntentResponse
MTDisableAlarmIntent
MTDisableAlarmIntentResponse
MTToggleAlarmIntent
MTToggleAlarmIntentResponse
MTGetAlarmsIntent
MTGetAlarmsIntentResponse
MTAlarmStateResolutionResult
MTAlarmOperationResolutionResult
MTIntentAlarm
MTIntentAlarmResolutionResult
MTIntentRepeatDay
MTIntentRepeatDayResolutionResult
targetTimer
_timerFromIntentTargetTimer:defaultState:
numberWithUnsignedInteger:
arrayWithObjects:count:
setWithArray:
pauseMultiple
boolValue
successWithResolvedTimer:
_genericallyResolveTargetTimer:multiple:allowedTimerStatesForFollowup:completion:
successWithResolvedValue:
_handlePauseTimer:dryRun:completion:
state
setState:
_responseToPauseTimerIntent:withPausedTimers:error:dryRun:
_updateTimer:dryRun:allowMultiple:excludeStoppedTimers:filterBlock:updateBlock:completion:
setWithObjects:
resumeMultiple
_handleResumeTimer:dryRun:completion:
_responseToResumeTimerIntent:withResumedTimers:error:dryRun:
domain
isEqualToString:
code
initWithCode:userActivity:
stringWithFormat:
setPausedTimers:
setResumedTimers:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
handlePauseTimer:completion:
confirmPauseTimer:completion:
resolveTargetTimerForPauseTimer:withCompletion:
resolvePauseMultipleForPauseTimer:withCompletion:
handleResumeTimer:completion:
confirmResumeTimer:completion:
resolveTargetTimerForResumeTimer:withCompletion:
resolveResumeMultipleForResumeTimer:withCompletion:
initWithStartDate:endDate:intervals:endReason:metadata:
init
startDate
encodeObject:forKey:
endDate
intervals
endReason
encodeInteger:forKey:
metadata
needsAdditionalProcessing
encodeBool:forKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decodeIntegerForKey:
decodeBoolForKey:
count
timeInBedSessionWithStartDate:endDate:intervals:endReason:metadata:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
sampleType
setNeedsAdditionalProcessing:
setStartDate:
setEndDate:
setIntervals:
setEndReason:
setMetadata:
.cxx_destruct
_needsAdditionalProcessing
_startDate
_endDate
_intervals
_endReason
_metadata
unsignedLongLongValue
numberWithLongLong:
stringValue
initWithSettings:
distantPast
applySettings:
numberWithInt:
numberWithBool:
numberWithInteger:
numberWithUnsignedInt:
dictionaryWithObjects:forKeys:count:
mutableCopy
objectForKey:
setObject:forKey:
unsignedIntValue
setHour:
setMinute:
setAllowsSnooze:
intValue
setSound:ofType:
setSoundVolume:
setVibrationID:
setTitle:
setDaySetting:
setIsSleepAlarm:
setBedtimeReminderMinutes:
integerValue
setBedtimeHour:
setBedtimeMinute:
dropEditingProxy
settings
isActive
setAlarmID:
alarmID
setAlarmIDURL:
hour
minute
daySetting
allowsSnooze
sound
soundType
vibrationID
title
addObject:
length
initWithCapacity:
verifyIdSetting:withMessageList:
verifyHourSetting:withMessageList:
verifyMinuteSetting:withMessageList:
verifyDaySetting:withMessageList:
countByEnumeratingWithState:objects:count:
date
defaultTimeZone
setYear:
setMonth:
setWeekdayOrdinal:
setWeekday:
alarmDidUpdate:
timeComparator
stringByAppendingString:
initWithString:
copy
hasPrefix:
removeObjectForKey:
initWithArray:
floatValue
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
objectForKeyedSubscript:
sharedVibrationManager
defaultVibrationIdentifierForAlertType:
vibrationWithIdentifierIsValid:
bundleForClass:
localizedStringForKey:value:table:
soundVolume
verifySettings:
prepareEditingProxy
applyChangesFromEditingProxy
nowDateForOffsetCalculation
timeZoneForOffsetCalculation
_newBaseDateComponentsForDay:
refreshActiveState
markModified
compareTime:
alarmIDURL
bedtimeReminderMinutes
bedtimeHour
bedtimeMinute
repeats
repeatDays
uiTitle
alarmSoundIdentifier
alarmSoundType
setAlarmSoundIdentifier:ofType:
alarmSoundVolume
setAlarmSoundVolume:
editingProxy
isSnoozed
isSleepAlarm
lastModified
revision
delegate
setDelegate:
forceActiveForMigration
setForceActiveForMigration:
_hour
_minute
_daySetting
_allowsSnooze
_lastModified
_revision
_editingProxy
_pretendActiveIfProxy
_settings
_repeatDays
_vibrationID
_snoozed
_isSleepAlarm
_forceActiveForMigration
_soundType
_sound
_title
_delegate
_alarmID
_alarmIDURL
infoForMachServiceName:remoteObjectInterface:exportedObject:exportedObjectInterface:lifecycleNotification:requiredEntitlement:options:
alloc
initWithMachServiceName:remoteObjectInterface:exportedObject:exportedObjectInterface:lifecycleNotification:requiredEntitlement:options:
protocol
machServiceName
infoForMachServiceName:remoteObjectInterface:options:
setMachServiceName:
remoteObjectInterface
setRemoteObjectInterface:
exportedObject
setExportedObject:
exportedObjectInterface
setExportedObjectInterface:
lifecycleNotification
setLifecycleNotification:
requiredEntitlement
setRequiredEntitlement:
options
setOptions:
_machServiceName
_remoteObjectInterface
_exportedObject
_exportedObjectInterface
_lifecycleNotification
_requiredEntitlement
_options
_alarmUserActivityWithEnableIntent:
_alarmUserActivityWithDisableIntent:
identifier
_toggleAlarm:alarmIDString:completion:
alarm
needsValue
alarmManager
alarmsIncludingSleepAlarm:
unsupported
addFailureBlock:
alarmIDString
na_firstObjectPassingTest:
intentAlarm
successWithResolvedAlarm:
addSuccessBlock:
successWithResolvedAlarmState:
operation
notRequired
na_map:
setAlarm:
successWithResolvedAlarmOperation:
UUIDString
errorWithDomain:code:userInfo:
futureWithError:
getEnableStateForAlarm:
futureWithNoResult
updateEnableStateForAlarm:enabled:
updateAlarm:
flatMap:
isEnabled
sleepSchedule
setEnabled:
setSleepSchedule:
mtUserActivityWithActivityType:
createUserInfoWithIntentName:alarmIDString:time:label:
setUserInfo:
confirmEnableAlarm:completion:
handleEnableAlarm:completion:
confirmDisableAlarm:completion:
handleDisableAlarm:completion:
handleToggleAlarm:completion:
resolveOperationForToggleAlarm:withCompletion:
resolveStateForToggleAlarm:withCompletion:
resolveAlarmForToggleAlarm:withCompletion:
provideAlarmOptionsForToggleAlarm:withCompletion:
confirmToggleAlarm:completion:
defaultAlarmForToggleAlarm:
confirmMTEnableAlarm:completion:
handleMTEnableAlarm:completion:
confirmMTDisableAlarm:completion:
handleMTDisableAlarm:completion:
liveDarwinNotifications
na_any:
_languageChangeNotification
_handleLanguageChanged
handlesNotification:ofType:
handleNotification:ofType:completion:
assertionTimeOutForNotification:ofType:
initWithDelegate:
array
sortUsingComparator:
_scheduledObjectComparator
trigger
triggerDate
isEqualToDate:
triggerType
compare:
arrayWithArray:
addObjectsFromArray:
_sort:
scheduledAlertsAndNotifications
scheduledObjects
mtIsBeforeOrSameAsDate:
_filterScheduledObjects:withBlock:
_dateIntervalFilter:
containsDate:
na_filter:
firstObject
_nextScheduledObjectInSets:
mtIsBeforeDate:
_scheduledListForTriggerType:
scheduledTypeForTriggerType:
removeAllObjects
_unschedule:
_performScheduleChangingBlock:withCompletion:
allValues
_unscheduleObject:
shouldBeScheduled
upcomingTriggersAfterDate:
scheduledObjectForScheduleable:trigger:
_scheduleObject:
na_each:
scheduleable
setObject:forKeyedSubscript:
nextScheduledAlertOrNotification
scheduledListDidChange:withCompletion:
removeObject:
orderedScheduledAlerts
orderedScheduledNotifications
orderedScheduledEvents
numberOfScheduledAlerts
numberOfScheduledAlertsAndNotifications
scheduledAlerts
scheduledObjectsToFireBeforeDate:
scheduledObjectsToFireInInterval:
nextScheduledAlert
nextScheduledObject
nextScheduledObjectWithTriggerType:
reset
unschedule:
schedule:afterDate:withCompletion:
isScheduled:
setOrderedScheduledAlerts:
setOrderedScheduledNotifications:
setOrderedScheduledEvents:
scheduledAlertMap
setScheduledAlertMap:
_orderedScheduledAlerts
_orderedScheduledNotifications
_orderedScheduledEvents
_scheduledAlertMap
stateMachine
disabledState
stateMachineUserWentToBed:
didEnterWithPreviousState:
storage
numberWithFloat:
objectForKey:defaultValue:
floatForKey:
setFloat:forKey:
setStorage:
_storage
mainBundle
bundleIdentifier
sharedUserDefaults
initWithPersistence:
serialDispatchQueueSchedulerWithName:
mtMainThreadScheduler
initWithPersistence:migrator:serializer:callbackScheduler:currentDateProvider:
initWithCallbackScheduler:
dealloc
_loadTimersWithCompletion:
serializer
persistence
migrateFromOldStorage
timer
initForReadingFromData:error:
initWithEncodedDictionary:
decodeObjectForKey:
_queue_setAllTimers:source:persist:notify:
removeFromOldStorage
valueForKey:
performBlock:
currentTimerFromTimers:
defaultDuration
initWithState:duration:currentDateProvider:
_queue_addTimer:withCompletion:source:
scheduler
nextTimer
addObserver:
_queue_setAllTimers:source:
orderedTimers
_queue_persistTimers
_queue_sortTimers
_queue_notifyObserversForTimerRemoval:source:
_queue_notifyObserversForTimerAdd:source:
timerID
_createDefaultTimerIfNeededWithCompletion:
_queue_updateTimer:withCompletion:source:
_queue_removeTimer:withCompletion:source:
_queue_dismissTimerWithIdentifier:withCompletion:source:
_queue_repeatTimerWithIdentifier:withCompletion:source:
_queue_hasMatchingTimer:
timerIDString
_queue_timerMatchingTimerIdentifier:
stateChangeIsAllowableFromState:toState:
_queuePersistTimer:replacingTimer:
_queue_notifyObserversForTimerUpdate:source:
descriptionForState:
setDismissedDate:
_queue_notifyObserversForTimerDismiss:source:
timerByRestarting
_applyNecessaryChangesFromOldTimer:currentTimer:
setLastModifiedDate:
setFiredDate:
enumerateObserversWithBlock:
source:didAddTimers:
_queue_notifyObserversWithBlock:
source:didUpdateTimers:
source:didRemoveTimers:
source:didDismissTimer:
source:didFireTimer:
nextTimerDidChange:
encodedDictionary
_diagnosticTimerDictionary
lastModifiedDate
_diagnosticDictionaryForTimer:
firedDate
toneIdentifier
mediaItemIdentifier
vibrationIdentifier
_queue_notifyObserversForNextTimerChange:source:
_queue_notifyObserversForTimerFire:source:
scheduler:didChangeNextTimer:
scheduler:didFireTimer:
printDiagnostics
gatherDiagnostics
registerObserver:
getTimersWithCompletion:
addTimer:withCompletion:source:
updateTimer:withCompletion:source:
removeTimer:withCompletion:source:
dismissTimerWithIdentifier:withCompletion:source:
repeatTimerWithIdentifier:withCompletion:source:
setAllTimers:source:
timers
loadTimers
loadTimersSync
setScheduler:
_queue_removeAllTimersForSource:
handleF5Reset
handleMigrationFinish
setOrderedTimers:
currentDateProvider
migrator
setMigrator:
setSerializer:
observers
setObservers:
setPersistence:
_scheduler
_orderedTimers
_lastModifiedDate
_currentDateProvider
_migrator
_serializer
_observers
_persistence
listeners
_registerForLiveDarwinNotification:
_registerForDistributedNotifications
_registerForDarwinNotifications
_registerForAlarmNotifications
_registerForXPCStream:notificationType:
UTF8String
stringWithCString:encoding:
_handleNotificationWithName:type:
defaultAssertionTimeOutForNotification:type:
notificationWithType:name:powerAssertionTimeout:
releaseAssertion
_schedulingAssertionTimeout
integerForKey:isValid:defaultValue:
registerListener:
beginListening
setListeners:
_listeners
arrayWithObject:
lastObject
_encodeObject:forKey:
numberWithDouble:
_serializingProtocol
_dictionaryForProtocolObject:
dictionary
_encodeProtocolObject:forKey:
copyWithZone:
removeLastObject
mtType
mtCoder
encodeInt:forKey:
encodeInt32:forKey:
encodeInt64:forKey:
encodeFloat:forKey:
encodeDouble:forKey:
stack
setStack:
_stack
longLongValue
doubleValue
_decodeObject:
_dictionaryIsForSerializableObject:
_objectForDictionary:
allKeys
substringFromIndex:
_unwrap:
allowsKeyedCoding
decodeIntForKey:
decodeInt32ForKey:
decodeInt64ForKey:
decodeFloatForKey:
decodeDoubleForKey:
initWithBundleID:
shouldScheduleSnapshotForAlarms:
scheduleSnapshot
source:didAddAlarms:
source:didUpdateAlarms:
source:didRemoveAlarms:
source:didSnoozeAlarm:snoozeAction:
source:didFireAlarm:triggerType:
source:didDismissAlarm:dismissAction:
source:didChangeNextAlarm:
initWithStorage:
sleepAlarm
updateStateForSleepAlarm:
determineNextStateForSleepAlarm:
enterState:
currentDate
isFiring
asleepState
nextTriggersAfterDate:includeBedtime:
mtIsAfterDate:
awakeState
confirmedLastBedtimeReminder
bedtimeDismissedDate
updateState
stateMachine:dismissWakeUpAlarm:dismissAction:
sleepTimeOutMinutes
stateMachine:shouldScheduleAlarmTimeoutForSecondsFromNow:
userWentToBed
userWokeUp
userBedTimeReached:
userWakeTimeReached:
userWakeUpAlarmFired
wakeUpAlarmTimedOut
currentNotificationCenter
request
content
categoryIdentifier
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
notificationCenter
setNotificationCenter:
_notificationCenter
initWithConnectionInfo:errorHandler:reconnectHandler:
serialSchedulerForObject:
defaultCenter
didReceiveLifecycleNotification
addObserver:selector:name:object:
removeObserver:name:object:
info
initWithMachServiceName:options:
_didInterruptConnection
setInterruptionHandler:
_didInvalidateConnection
setInvalidationHandler:
setExportedInterface:
resume
_connectionRebuildingIfNecessary
finishWithResult:
performSyncBlock:
errorHandler
timeIntervalSinceDate:
_retryConnectionWithRecover:
reconnectHandler
finishWithError:
performRemoteBlock:withErrorHandler:
_retryConnection
recover:
addCompletionBlock:
performRemoteBlock:withErrorHandler:isSynchronous:
_syncRemoteObjectProxyWithErrorHandler:
_asyncRemoteObjectProxyWithErrorHandler:
connectionFuture
remoteObjectProxyWithErrorHandler:
_remoteObjectProxyWithXPCConnectionProvider:remoteObjectProxyProvider:errorHandler:
connection
futureWithResult:
synchronousRemoteObjectProxyWithErrorHandler:
invalidate
providerWithConnectionInfo:errorHandler:
providerWithConnectionInfo:reconnectHandler:
performRemoteBlock:
setInfo:
setErrorHandler:
setReconnectHandler:
callbackScheduler
setCallbackScheduler:
lastLifecycleNotification
setLastLifecycleNotification:
_connection
_info
_errorHandler
_reconnectHandler
_callbackScheduler
_lastLifecycleNotification
initWithStateMachine:
keepOffUntilDate
isEqualToState:
stateMachine:disengageBedtimeDNDUserRequested:
inUserDefinedSleepWindow
stateMachine:keepBedtimeDNDOffUntilDate:
updateModeKeepOffUntilDateIfNecessary
updateState:
initWithKeepOffUntilDate:stateMachine:
setKeepOffUntilDate:
_keepOffUntilDate
loadUserPreferences
saveAndNotifyForUserPreferences:localNotifications:
localeIdentifier
setNumberStyle:
stringByReplacingOccurrencesOfString:withString:
setPositiveFormat:
stringFromNumber:
currentLocale
initWithLocaleIdentifier:
addTimer:
updateTimer:
removeTimer:
sleepTimersWithState:
initWithAlarmStorage:sleepCoordinator:currentDateProvider:
mtSerialSchedulerForObject:
serviceForClientIdentifier:
addAssertionUpdateListener:withCompletionHandler:
initWithDelegate:infoProvider:
removeAssertionUpdateListener:
invalidateActiveModeAssertionWithError:
isBedtimeDNDEnabled:error:
activeModeAssertionWithError:
details
integerForKey:defaultValue:
assertionService
bedtimeDNDTimeoutMinutes
dateByAddingTimeInterval:
initWithStartDate:endDate:
lifetimeWithDateInterval:
lifetime
detailsWithIdentifier:modeIdentifier:lifetime:
setUserVisibleEndDate:
takeModeAssertionWithDetails:error:
isBedtimeDNDEnabled:
userDisengagedBedtimeDNDOnDate:
bedtimeDNDEnabled:userRequested:date:
reason
updateMonitorState
invalidationDate
modeAssertionService:didUpdateActiveModeAssertion:
modeAssertionService:didReceiveModeAssertionInvalidation:
stateMachine:engageBedtimeDNDUntilDate:userEngaged:
stateMachineClearKeepBedtimeDNDOff:
stateMachine:scheduleUpdateForSecondsFromNow:
sleepCoordinator:userWentToBed:sleepAlarm:
sleepCoordinator:userWokeUp:sleepAlarm:
sleepCoordinator:bedtimeReminderDidFire:sleepAlarm:
sleepCoordinator:bedtimeReminderWasConfirmed:sleepAlarm:
sleepCoordinator:bedtimeReminderWasSnoozed:sleepAlarm:
sleepCoordinator:bedtimeWasReached:sleepAlarm:
sleepCoordinator:waketimeWasReached:sleepAlarm:
sleepCoordinator:wakeUpAlarmDidFire:sleepAlarm:
sleepCoordinator:wakeUpAlarmWasDismissed:dismissAction:sleepAlarm:
sleepCoordinator:wakeUpAlarmWasSnoozed:sleepAlarm:
sleepCoordinator:bedtimeDNDManuallyExited:sleepAlarm:
sleepCoordinator:bedtimeSessionEnded:reason:sleepAlarm:
sleepCoordinator:sleepAlarmDidChange:
timeListener:didDetectSignificantTimeChangeWithCompletionBlock:
initWithAlarmStorage:sleepCoordinator:
bedtimeDoNotDisturb:
userDisengagedBedtimeDND
alarmStorage
setAlarmStorage:
sleepCoordinator
setSleepCoordinator:
setCurrentDateProvider:
setStateMachine:
setAssertionService:
_alarmStorage
_sleepCoordinator
_stateMachine
_assertionService
initWithBedtimeDNDEndDate:stateMachine:
currentState
infoProvider
onStateWithBedtimeDNDEndDate:
userRequestedOffStateWithKeepOffUntilDate:
stateMachineLog
initialState
offState
waitingState
_initialState
_offState
_waitingState
_reloadLocaleInfo
_loadLocaleInfo
_clearLocaleDependentState
postNotificationName:object:
dateFormatFromTemplate:options:locale:
rangeOfString:
rangeOfString:options:
setLocale:
setDateStyle:
setTimeStyle:
setLocalizedDateFormatFromTemplate:
_dateOnlyFormatter
AMSymbol
PMSymbol
localizedTimeStringFromDate:forTimeZone:timeDesignator:
_timeOnlyFormatter
timeZone
isEqualToTimeZone:
setTimeZone:
timeDesignatorForDate:timeZone:
stringFromDate:
currentCalendar
component:fromDate:
amString
pmString
sharedInstance
localizedTimeStringFromDate:timeDesignator:
timeDesignatorForDate:
use24HourTime
timeDesignatorAppearsBeforeTime
_amString
_pmString
_use24HourTime
_timeDesignatorAppearsBeforeTime
label
successWithResolvedString:
time
dateComponents
dateWithTimeIntervalSinceReferenceDate:
calendarWithIdentifier:
setCalendar:
setDateComponents:
successWithResolvedDateComponents:
repeatSchedule
successWithResolvedRepeatDay:
firstWeekday
subarrayWithRange:
arrayByAddingObjectsFromArray:
_alarmUserActivityWithIntent:
value
alarmWithHour:minute:
setRepeatSchedule:
addAlarm:
displayString
handleMTCreateAlarm:completion:
resolveLabelForMTCreateAlarm:withCompletion:
resolveDateComponentsForMTCreateAlarm:withCompletion:
resolveRepeatScheduleForMTCreateAlarm:withCompletion:
provideRepeatScheduleOptionsForMTCreateAlarm:withCompletion:
confirmMTCreateAlarm:completion:
defaultRepeatScheduleForMTCreateAlarm:
_withLock:
_trackingEnabledForSleepAlarm:
setCachedAlarm:
trackingEnabled
startSession
endSessionWithDate:reason:
sessionClass
bedtimeSessionTrackerDelegate
setBedtimeSessionTrackerDelegate:
processedSessionForSession:
initWithAlarmStorage:
prepare
cachedAlarm
alarmLock
setAlarmLock:
_alarmLock
_bedtimeSessionTrackerDelegate
_cachedAlarm
notification
_handleAlarmNotificationResponse:withCompletionHandler:
_handleTimerNotificationResponse:withCompletionHandler:
actionIdentifier
_alarmNotificationActionForUserNotificationAction:category:
handleAlarmNotificationIdentifier:action:category:completionHandler:
mtStringByRemovingNotificationPrefixes
snoozeAlarmWithIdentifier:snoozeAction:withCompletion:source:
metrics
logAlarmSnoozeAction:
dismissAlarmWithIdentifier:dismissAction:withCompletion:source:
logAlarmDismissAction:
_timerNotificationActionForUserNotificationAction:
timerStorage
logTimerDismissed
logTimerRepeated
initWithAlarmStorage:timerStorage:
setTimerStorage:
setMetrics:
_timerStorage
_metrics
confirmUpdateAlarm:completion:
handleUpdateAlarm:completion:
confirmMTUpdateAlarm:completion:
handleMTUpdateAlarm:completion:
snoozeFireDate
setSnoozeFireDate:
initWithSound:usingVolume:
setSound:
sharedToneManager
setCurrentToneIdentifier:forAlertType:topic:
setCurrentVibrationIdentifier:forAlertType:topic:
_loadAlarmsWithCompletion:
alarms
cleanUpOldNotifications
_cleanUpForInternalBuild:
_cleanUpSnoozeFireDate:
cleanDeliveredNotifications
_cleanUpSleepAlarmRepeat:
_queue_setAllAlarms:sleepAlarm:source:persist:notify:
_queue_allAlarms
na_safeAddObject:
nextAlarm
_queue_addAlarm:withCompletion:source:
_queue_updateAlarm:withCompletion:source:
_queue_updateAlarmWithIdentifier:changeSet:withCompletion:source:
_queue_removeAlarm:withCompletion:source:
_queue_removeAlarmWithIdentifier:withCompletion:source:
_queue_removeAllAlarmsForSource:
_queue_setAllAlarms:sleepAlarm:source:
snoozeAlarmWithIdentifier:snoozeDate:snoozeAction:withCompletion:source:
_queue_snoozeAlarmWithIdentifier:snoozeDate:snoozeAction:withCompletion:source:
dismissAlarmWithIdentifier:dismissDate:dismissAction:withCompletion:source:
_queue_dismissAlarmWithIdentifier:dismissDate:dismissAction:withCompletion:source:
_queue_alarmMatchingAlarmIdentifier:
_queue_hasMatchingAlarm:
_queuePersistAlarm:replacingAlarm:
_notifyObserversForAlarmAdd:source:
applyChangesFromChangeSet:
_queue_alarmMatchingAlarm:
dismissedDate
_queue_dismissMutableAlarm:dismissDate:dismissAction:
changeSetWithChangesFromObject:toObject:
propertiesAffectingNotification
hasChangesInProperties:
_notifyObserversForAlarmChange:source:
_notifyObserversForAlarmDismiss:dismissAction:source:
_queue_actuallyRemoveAlarm:withCompletion:source:
_notifyObserversForAlarmRemoval:source:
_applyNecessaryChangesFromExistingAlarm:updatedAlarm:
_queue_persistAlarms
_queue_sortAlarms
changes
isBedtimeSnoozed
propertiesAffectingSnooze
setDismissedAction:
setBedtimeSnoozeFireDate:
setBedtimeDismissedDate:
setBedtimeDismissedAction:
_queue_resetAlarmsTo:sleepAlarm:
arrayByAddingObject:
isEqualToAlarm:
earlierDate:
bedtimeSnoozeFireDate
_notifyObserversForAlarmSnooze:snoozeAction:source:
dontNotify
_notifyObserversWithBlock:
_notifyObserversForNextAlarmChange:source:
_notifyObserversForAlarmFire:triggerType:source:
bedtimeFiredDate
setBedtimeFiredDate:
rescheduleAlarmsWithCompletion:
removeAllAlarmsForSource:
_diagnosticAlarmDictionary
_diagnosticDictionaryForAlarm:
scheduler:didChangeNextAlarm:
scheduler:didFireAlarm:
getAlarmsWithCompletion:
addAlarm:withCompletion:source:
updateAlarm:withCompletion:source:
updateAlarmWithIdentifier:changeSet:withCompletion:source:
removeAlarm:withCompletion:source:
removeAlarmWithIdentifier:withCompletion:source:
setAllAlarms:sleepAlarm:source:
alarmWithIdentifier:withCompletion:
allAlarms
loadAlarms
loadAlarmsSync
orderedAlarms
setOrderedAlarms:
setSleepAlarm:
_orderedAlarms
_sleepAlarm
_checkSpringBoardStarted
_stopMonitoring
addObserver:wasFirst:
_startMonitoringWithQueue:
removeObserver:wasLast:
didReceiveSpringboardStarted:
springboardStartMonitor:didReceiveStarted:
enumerateObservers:
removeObserver:
isSpringboardStarted
_notifyToken
_isSpringBoardStarted
_queue
_timerManager
duration
initWithState:duration:
type
spokenPhrase
setSiriContext:
_timer:conflictsWithRunningTimersInTimers:
confirmationRequiredWithStringToConfirm:
resolutionResultUnsupportedWithReason:
initWithSpokenPhrase:
_checkNowPlayingMediaState:
toneSoundWithIdentifier:vibrationIdentifer:volume:
successWithResolvedTimeInterval:
successWithResolvedTimerType:
initWithLabel:duration:remainingTime:identifier:state:type:
confirmationRequiredWithTimerTypeToConfirm:
_matchTimersFromIntentsTimer:excludeStoppedTimers:completion:
_createTimerWithIntent:dryRun:completion:
_isPlayingMediaFromMRPlaybackState:
_responseToCreateTimerIntent:withCreatedTimer:error:dryRun:
setCreatedTimer:
indexOfObjectPassingTest:
handleCreateTimer:completion:
confirmCreateTimer:completion:
resolveLabelForCreateTimer:withCompletion:
resolveDurationForCreateTimer:withCompletion:
resolveTypeForCreateTimer:withCompletion:
unSoundForCategory:
descriptionForCategory:
_alertTypeForCategory:
soundWithAlertType:
setShouldRepeat:
setAlertTopic:
setShouldIgnoreRingerSwitch:
setMaximumDuration:
setAudioVolume:
setVibrationIdentifier:
setToneIdentifier:
setToneMediaLibraryItemIdentifier:
mt_Description
unSound
audioVolume
toneMediaLibraryItemIdentifier
numberWithUnsignedLongLong:
songSoundWithIdentifier:vibrationIdentifier:volume:
alertTopic
alertType
defaultSoundForCategory:
mtSound
initWithStorage:notificationCenter:scheduler:defaults:
xpcSchedulerWithEvent:
initWithStorage:notificationCenter:scheduler:defaults:schedulingDelegate:taskScheduler:currentDateProvider:
_rescheduleAlarmsWithCompletion:
removeAllDeliveredNotifications
_scheduleAlarms:withCompletion:
_lastAlarmTriggerDate
_setLastAlarmTriggerDate:
scheduledAlarms
_unscheduleAlarms:
_queue_updateNextAlarmTimerWithCompletion:
_nextTriggerDateForScheduling
scheduleTimerForSeconds:
_queue_fireTriggeredAlarmsWithCompletionBlock:
_queue_unregisterTimer
unscheduleTimer
isVisible
dismissRelatedNotificationsForScheduledAlarm:
_shouldPostNotificationForScheduledAlarm:
postNotificationForScheduledAlarm:completionBlock:
isBedtimeRelated
isForSnooze
isForGoToBed
_intervalToCheckForAlarmsToFireBeforeDate:
_fireScheduledAlarm:firedDate:completionBlock:
taskWithIdentifier:delay:completableBlock:
taskWithIdentifier:completableBlock:
scheduleTask:
taskGroupWithTasks:completionBlock:
scheduleTaskGroup:
nextAlarmIncludingBedtimeNotification:
nextScheduledAlarmIncludingBedtimeNotification:
nextTriggerDateIncludingBedtimeNotification:
_nextScheduledAlertIncludingBedtimeNotification:
scheduleAlarms:
dismissNotificationsWithIdentifiers:
_snoozeCountdownIdentifier:
unscheduleAlarms:
dismissNotificationsForAlarm:
dismissNotificationsForAlarm:includeSnooze:
triggerWithDate:triggerType:
dismissNotificationsForAlarm:dismissAction:
_queue_triggerDidFireForAlarmWithCompletionBlock:
initWithStorage:notificationCenter:
nextTriggerDate
sourceIdentifier
schedulingDelegate
taskScheduler
defaults
setDefaults:
_scheduledAlarms
_schedulingDelegate
_taskScheduler
_defaults
initWithScheduleable:trigger:
isEqualToScheduledObject:
setScheduleable:
setTrigger:
_scheduleable
_trigger
isForAlert
nextTriggerAfterDate:
timerWithInitialTime:backoffFactor:fireBlock:
timerWithInitialTime:backoffFactor:fireBlock:queue:
initWithInitialTime:backoffFactor:fireBlock:queue:
timerFinished
_cancel
timerWithInitialTime:fireBlock:
start
stop
setTimer:
block
setBlock:
queue
setQueue:
initialTime
setInitialTime:
currentBackoff
setCurrentBackoff:
backoffFactor
setBackoffFactor:
_timer
_block
_initialTime
_currentBackoff
_backoffFactor
_setExtensionBundleId:
_setLaunchId:
mt_nanoAlarmBundleIDForAlarm:
_setNanoLaunchId:
intentLabel
setLabel:
alarmIDIntentObject
setOperation:
displayTitle
na_safeSetObject:forKey:
initWithDomain:verb:parametersByName:
defaultSearchableIndex
deleteInteractionsWithGroupIdentifiers:bundleID:protectionClass:completionHandler:
mt_initWithAlarm:verb:
mt_intentForAlarmCreate:
mt_intentForAlarmUpdate:
mt_intentForAlarmEnable:
mt_intentForAlarmDisable:
mt_deleteDonationsForAlarm:completion:
deferredLocalizedIntentsStringWithFormat:fromTable:bundle:
dateBySettingHour:minute:second:ofDate:options:
localizedStringFromDate:dateStyle:timeStyle:
alarmIntentDisplayString
initWithIdentifier:displayString:
timeIntervalSinceReferenceDate
timeObject
setValue:
_addStateHandler
dataWithPropertyList:format:options:error:
bytes
timeInBedTracking
bedtimeDismissedAction
bedtimeComponents
mtPreviousDateBeforeDate:matchingComponents:
mtNextDateAfterDate:matchingComponents:
_createBedtimeSessionWithUserWakeTime:endReason:
bedtimeSessionTracker:sessionDidComplete:
_shouldUseBedtimeDismissedDateForAlarm:
mtDateNearestMatchingComponents:
systemTimeZone
name
assistantUILocalizedStringForKey:table:
string
appendString:
serialQueue
alarmStatesByAlarmID
_queue_writeCurrentStateToContextStore
updateStateForAlarms:
_queue_clearPreviouslyDismissedAlarmStates
removeObjectsForKeys:
keyPathForCurrentAlarms
userContext
handleSystemReady
_serialQueue
_alarmStatesByAlarmID
schedulerWithDispatchQueue:
donatesIntent
_queue_donateCreateTimerIntent:source:
containsObject:
hasDefaultTitle
initWithLabel:duration:type:
initWithIntent:response:
mtSetIntentDonorFromSource:
donateInteractionWithCompletion:
donatedTimerIDs
_donatedTimerIDs
_isUpdateNeeded
_getCachedAlarmsWithCompletion:doSynchronous:
initWithUpdateBlock:
markNeedsUpdate
getCachedAlarmsWithCompletion:
getCachedAlarmsSyncWithCompletion:
updateBlock
setUpdateBlock:
setNextAlarm:
needsUpdate
setNeedsUpdate:
cacheLock
setCacheLock:
_needsUpdate
_cacheLock
_updateBlock
_nextAlarm
_shouldNotifyForTrigger:
postNotificationName:object:userInfo:deliverImmediately:
postNotificationForScheduledTimer:completionBlock:
dismissNotificationsForTimer:
_checkIfRestoreDone
isSystemRestoreDone
_handleRestoreDone
restoreDoneHandled
_restoreNotification
restoreDidFinish
setRestoreDoneHandled:
checkSystemReady
_verifyRestoreDone
_handleF5Reset
_restoreDoneHandled
sharedManagerWithPreferences:
initWithPreferences:
setLastModified:
cities
addDefaultCitiesIfNeeded
objectAtIndex:
worldClockCityFromPersistenceRepresentation:
replaceObjectAtIndex:withObject:
removeObjectAtIndex:
pushCityPropertiesToPreferences
synchronize
_notifyNano
worldClockCityFromPersistenceDictionary:
worldClockCityFromPersistenceArray:
sharedManager
bestCityForLegacyCity:
initWithALCity:
fixUpCityProperties:
isWorldClockCityProperties:
initWithProperties:
defaultCitiesAdded
defaultCitiesShownInWorldClock
defaultCitiesForLocaleCode:options:
setDefaultCitiesAdded:
saveCities
properties
setCities:
isCachedLanguageStaleForProperties:
dictionaryWithDictionary:
idUrl
canAddCity
indexOfObject:
insertObject:atIndex:
standardUserDefaults
boolForKey:
dictionaryWithContentsOfFile:
writeToFile:atomically:
defaultsKeys
synchronizeUserDefaultsDomain:keys:
loadCities
checkIfCitiesModified
cityWithIdUrl:
addCity:
removeCity:
removeCityAtIndex:
removeAllCities
moveCityFromIndex:toIndex:
_dirty
_cities
initWithAlarmStorage:currentDateProvider:
updateSleepStateWithSleepAlarm:
finishWithNoResult
mtSynchronousResult:
notifyObserversForSleepAlarmChange:
notifyObserversForSleepAlarmChangeIfNecessary:
_notifyObserversForSleepAlarmChange:
handleBedtimeForAlarm:date:
handleBedtimeReminderForAlarm:date:
handleWakeUpAlarmForAlarm:date:
handleWakeUpTimeForAlarm:date:
handleSnoozeOfGoToBedNotificationForAlarm:date:
handleSnoozeForAlarm:date:
handleConfirmationOfGoToBedNotificationForAlarm:date:
handleDismissForAlarm:dismissAction:date:
handleBedtimeSessionEndedForAlarm:date:reason:
updateSleepState
isFromOtherDevice
stateMachineUserWokeUp:
setBedtimeDNDMonitor:
isBedtimeDNDOn
pairedDevicePreferencesChanged:
cachedSleepAlarm
setCachedSleepAlarm:
sleepStateResolved
setSleepStateResolved:
alarmTimeoutScheduler
setAlarmTimeoutScheduler:
bedtimeDNDMonitor
_cachedSleepAlarm
_sleepStateResolved
_alarmTimeoutScheduler
_bedtimeDNDMonitor
nextTriggersAfterDate:inclusionOptions:
sortedArrayUsingSelector:
mtIsAfterOrSameAsDate:
nextExpectedWakeUpDateAfterDate:
nextExpectedBedtimeDateAfterDate:
transactionWithDescription:timeout:
transactionWithDescription:timeout:timeoutBlock:
initWithDescription:timeout:timeoutBlock:
transaction
transactionWithDescription:
setTransaction:
_transaction
deleteMultiple
_responseToDeleteTimerIntent:withDeletedTimers:error:dryRun:
_deleteTimer:multiple:dryRun:completion:
setDeletedTimers:
_onlyUnnamedTimerInTimers:forTargetTimer:allowMultiple:
remainingTime
handleDeleteTimer:completion:
confirmDeleteTimer:completion:
resolveTargetTimerForDeleteTimer:withCompletion:
resolveDeleteMultipleForDeleteTimer:withCompletion:
toDuration
toLabel
_responseToSetTimerAttributeIntent:withUpdatedTimer:error:dryRun:
_updateTimer:toDuration:toLabel:dryRun:completion:
initWithTimerResolutionResult:
unsupportedForReason:
setUpdatedTimer:
lowercaseString
setDuration:
_updateTimer:dryRun:updateBlock:completion:
handleSetTimerAttribute:completion:
confirmSetTimerAttribute:completion:
resolveTargetTimerForSetTimerAttribute:withCompletion:
resolveToDurationForSetTimerAttribute:withCompletion:
resolveToLabelForSetTimerAttribute:withCompletion:
_loadDefaultAlarmSound
_loadDefaultTimerSound
_saveDefaultAlarmSound:
_saveDefaultTimerSound:
initWithToneIdentifier:vibrationIdentifer:volume:
initWithMediaItemIdentifier:vibrationIdentifier:volume:
unsignedIntegerValue
defaultToneIdentifierForAlertType:
isEqualToSound:
isSilent
initWithType:
setTopic:
setForPreview:
alertWithConfiguration:
playWithCompletionHandler:
_updateAudioVolumeDynamicallyToValue:
setDefaultSound:forCategory:
soundByUpdatingVibrationIdentifier:
soundByUpdatingVolume:
interruptAudio
previewWithCompletionHandler:
updatePreview:
_toneIdentifier
_mediaItemIdentifier
_vibrationIdentifier
_soundVolume
initWithAlarmManager:
_alarmManager
timeIntervalForKey:isValid:defaultValue:
_quiescingWindow
_performScheduleSnapshot
_bundleID
setAlarms:
loadLegacyData
alarmFromOldAlarm:
purgeLegacyData
cancelNotifications
_alarms
initWithHour:minute:
defaultPlayOptionsIsSleepAlarm:
setPlayOptions:
defaultBedtimeDoNotDisturbOptions
setBedtimeDoNotDisturbOptions:
sleepAlarmWithHour:minute:
_initCommon
initWithCurrentTimeFromCurrentDateProvider:
components:fromDate:
initWithHour:minute:currentDateProvider:
UUID
defaultPlayOptions
setSecond:
URLWithString:
sleepDurationSeconds
mtTimeIntervalSinceComponents:now:
nextTrigger
nextFireDateAfterDate:includeBedtimeNotification:
nextTriggerAfterDate:includeBedtimeNotification:
nextTriggerAfterDate:includeSnooze:includeBedtimeNotification:
nextTriggersAfterDate:includeSnooze:includeBedtimeNotification:
_earliestTriggerDateForDate:
_nextDateHelperWithDate:calendar:
_nextBedtimeTriggersHelperWithDate:wakeUpDate:inclusionOptions:calendar:
bedtimeReminder
dateByAddingUnit:value:toDate:options:
mtLatest:
distantFuture
_date:isOnDay:calendar:
dateFromComponents:
mtNextDateAfterDate:matchingUnit:value:
_isEqualToAlarm:checkLastModified:
bedtimeDoNotDisturb
bedtimeDoNotDisturbOptions
playOptions
onboardingVersion
dismissedAction
allocWithZone:
initWithIdentifier:
_copyStateOntoAlarm:
setBedtimeReminder:
setBedtimeDoNotDisturb:
setTimeInBedTracking:
setOnboardingVersion:
initFromDeserializer:
_updatePropertiesFromDeserializer:
initWithUUIDString:
serializeWithSerializer:
descriptionForPlayOptions:
sleepAlarmWithHour:minute:bedtimeHour:bedtimeMinute:
_isInternalBuild
mostRecentlyUpdatedAlarmForAlarms:
mutableCopyWithZone:
playsOnThisDevice
alarmURL
setFiring:
sleepDuration
nextFireDate
nextFireDateAfterDate:
nextTriggerAfterDate:ofType:
nextTriggersAfterDate:
isEqualIgnoringLastModifiedDate:
_sleepSchedule
_bedtimeDoNotDisturb
_timeInBedTracking
_enabled
_bedtimeHour
_bedtimeMinute
_bedtimeReminder
_bedtimeDoNotDisturbOptions
_repeatSchedule
_playOptions
_snoozeFireDate
_bedtimeSnoozeFireDate
_firedDate
_dismissedDate
_dismissedAction
_bedtimeFiredDate
_bedtimeDismissedDate
_bedtimeDismissedAction
_onboardingVersion
platformSpecificSourceBundleIdentifier
setSourceBundleIdentifier:
stringByAppendingPathComponent:
writeSession:
bedtimeSessionTracker
hasBeenUnlockedSinceBoot
archiveSession:
waitForUnlock
_unprocessedSessions
defaultManager
archivedSessionDataPath
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
initRequiringSecureCoding:
finishEncoding
encodedData
archivedSessionDataFile
_writeSessions:
mtFinishWithFuture:
_hasUnprocessedSessions
_writeSessionData
deviceFirstUnlocked
fileExistsAtPath:isDirectory:
initWithContentsOfFile:
_removeSessionDataFile
finishDecoding
removeItemAtPath:error:
categoryTypeForIdentifier:
authorizationStatusForType:
na_genericError
globalAsyncScheduler
combineAllFutures:ignoringErrors:scheduler:
maximumAllowedDuration
localDevice
categorySampleWithType:value:startDate:endDate:device:metadata:
sleepSampleWithInterval:sampleType:metadata:
initWithAlarmStorage:sleepCoordinator:bedtimeSessionTracker:
saveSessionData
healthStore
setHealthStore:
setArchivedSessionDataPath:
setArchivedSessionDataFile:
setBedtimeSessionTracker:
_healthStore
_archivedSessionDataPath
_archivedSessionDataFile
_bedtimeSessionTracker
_sharedPublicMetrics
logAlarmAdded:
logAlarmDeleted:
logAlarmUpdated:
logTimerAdded
logTimerDeleted
logTimerUpdated
logSyncCompleted
logSyncFailedWithError:
operationStartTime
setOperationStartTime:
_operationStartTime
relayFrameworkNotification:
userInfo
refreshManagers
refreshManagersForPreferences:localNotifications:
sharedRelay
setRefreshManagers:
_refreshManagers
initWithUserDefaults:
initWithSuiteName:
setFloat:forKey:notification:
setObject:forKey:notification:
floatForKey:exists:
setBool:forKey:notification:
boolForKey:exists:
setInteger:forKey:notification:
integerForKey:exists:
setTimeInterval:forKey:notification:
timeIntervalForKey:exists:
_postNotification:
_distributedNotificationForLocalNotification:
distributedNotificationPosted:
weakObjectsHashTable
_localNotificationForDistributedNotification:
_cleanupObserversForNotification:
notificationObject
allObjects
setBool:forKey:
setInteger:forKey:
setTimeInterval:forKey:
timeIntervalForKey:defaultValue:
registerNotification:observer:
unregisterNotification:observer:
userDefaults
setUserDefaults:
_userDefaults
registerForNotifications
unregisterForNotifications
sensitiveUIStateChanged
_isVendorRelease
_hideSensitiveUI
sharedMonitor
_handleNotification
addSensitiveUIObserver:
removeSensitiveUIObserver:
shouldHideForSensitivity:
notifyToken
setNotifyToken:
hideSensitiveUI
setHideSensitiveUI:
needPrefsUpdate
setNeedPrefsUpdate:
lock
setLock:
_needPrefsUpdate
_lock
laterDate:
mtNow
mtEarliest:
_mtNextDateAfterDate:matchingComponents:backwards:
_optionsForBackwards:
nextDateAfterDate:matchingComponents:options:
_nextDateHelperAfterDate:nextDateBlock:
_mtNextDateAfterDate:matchingUnit:value:backwards:
nextDateAfterDate:matchingUnit:value:options:
daylightSavingTimeOffsetForDate:
locale
mtIsIn24HourTime
mtPreviousDateBeforeDate:matchingUnit:value:
mtDateRequiresSingularTimeString:
mtGregorianCalendar
mtTimeIntervalSinceComponents:
mtURLForClockAppSection:timerManager:
currentTimer
mtURLForScheme:
scheme
host
path
mtClockAppSection
mtIsList
mtIsForLastTimer
mtID
mtURLForClockAppSection:
mtUserActivityWithActivityType:title:
mtUserActivityWithActivityType:title:keywords:
initWithActivityType:
setEligibleForHandoff:
setEligibleForSearch:
setEligibleForPublicIndexing:
setKeywords:
processName
_setDonatedBySiri:
performCancelableBlock:
afterDelay:performBlock:
initWithQueue:
internalScheduler
internalQueue
_internalScheduler
_internalQueue
serialSchedulerWithName:
mtContainsDate:
mtDateIntervalWithEndDate:duration:
mtTimeOnlyFormatter
finishWithResult:error:
isFinished
na_timeoutError
initWithTimeout:
isCachedLanguageStaleForProperties:systemLanguage:
initWithTimeZone:countryCode:name:countryName:unlocalizedName:unlocalizedCountryName:
initWithFormat:
initWithObjects:
citiesWithIdentifiers:
initWithInt:
countryName
unlocalizedName
unlocalizedCountryName
localeCode
appendFormat:
unlocalizedExampleCity
initWithALCityIdentifier:
alCityId
unlocalizedCityName
countryCode
alCity
_alCity
_timeZone
_name
_countryName
_countryCode
_unlocalizedName
_unlocalizedCountryName
fireDate
clockAppSectionURL
setFireDate:
setIdentifier:
_fireDate
_identifier
setNextAlarms:
setAlarmManager:
calculateNextAlarms
_handleAlarmsDidChange
alarmsSyncIncludingSleepAlarm:
updateHandler
nextAlarms
setUpdateHandler:
_nextAlarms
_updateHandler
initWithBundleIdentifier:
notificationCategories
setNotificationCategories:
setWantsNotificationResponsesDelivered
localizedUserNotificationStringForKey:arguments:cfBundle:defaultValue:
actionWithIdentifier:title:options:
categoryWithIdentifier:actions:intentIdentifiers:options:
setListPriority:
alarmCategories
unionSet:
timerCategories
bedtimeCategories
contentForScheduledAlarm:
postNotificationForScheduledAlarm:content:completionBlock:
requestIdentifierForScheduledAlarm:
requestWithIdentifier:content:trigger:destinations:
isForNotification
_notificationCenterForScheduledAlarm:
addNotificationRequest:withCompletionHandler:
dismissNotificationsForAlarm:includeMainIdentifier:
isWakeUpRelated
_goToBedIdentifier:
_allIdentifiersForAlarm:includeMainIdentifier:
_allIdentifiersForAlarm:includeMainIdentifier:includeSnooze:
dismissNotificationsForAlarm:includeMainIdentifier:includeSnooze:
_allIdentifiersForAlarm:
removeDeliveredNotificationsWithIdentifiers:
cancelNotificationsWithIdentifiers:
interruptAudioAndLockDeviceWithCompletionBlock:
contentForScheduledTimer:
_notificationCenterForScheduledTimer
currentCallCount
incomingCall
_mutableContentForScheduledAlarmWithCommonSettings:
_setSpecificContent:forScheduledAlarm:
categoryForScheduledAlarm:
setCategoryIdentifier:
launchURLForScheme:
setDefaultActionURL:
userInfoForAlarm:
_setSpecificContent:forGoToBedNotification:
_setSpecificContent:forSnoozeCountdownNotification:
_setSpecificContent:forNormalScheduledAlarm:
_setGoToBedTitleAndBody:forGoToBedNotification:
dateWithTimeIntervalSinceNow:
setExpirationDate:
_setSnoozeCountdownTitleAndBody:forSnoozeCountdownNotification:
setShouldSuppressScreenLightUp:
setShouldPreventNotificationDismissalAfterDefaultAction:
setShouldIgnoreDoNotDisturb:
setBody:
setShouldBackgroundDefaultAction:
setShouldPreemptSTAR:
setShouldPreemptPresentedNotification:
setUnitsStyle:
setAllowedUnits:
_wakeUpAlarmStringForAlarm:bundle:
_timeFormatter
categoryForScheduledTimer:
userInfoForTimer:
isScheduled
notificationCenters
notificationPrefixes
_durationComponentsFormatter
setupNotificationCenter
registerActionHandler:
postBedtimeNotificationForAlarm:date:
setNotificationCenters:
actionHandler
setActionHandler:
_notificationCenters
_actionHandler
setDefaultDuration:
defaultSound
initWithProperty:changedValue:originalValue:
property
setProperty:
changedValue
setChangedValue:
originalValue
setOriginalValue:
_property
_changedValue
_originalValue
dictionaryFromChanges:
initWithChangeDictionary:
changeDictionary
isEqualToDictionary:
changedProperties
isEqualToSet:
na_all:
_isEqualToChangeSet:checkOriginalValues:
addEntriesFromDictionary:
changeSetWithChangesFromObject:toObject:inProperties:
initWithChanges:
intersectsSet:
changedValueForProperty:hasProperty:
na_dictionaryByMappingValues:
isEquivalentToChangeSet:
changeSetByAddingChangeSet:
hasChangeForProperty:
hasChangesInCommonWithChangeSet:
deserializedChangedValueForProperty:hasProperty:
_deserializer
setChangedProperties:
setChangeDictionary:
_changedProperties
_changeDictionary
bedtimeDNDEndDate
_bedtimeDNDEndDate
resetSystemTimeZone
confirmationRequiredWithTimeIntervalToConfirm:
postNotificationForUserPreferences:localNotifications:
postNotificationForAlarmsEdited
postNotificationForAlarmActiveChanged
cancelTimer
initWithName:assertionTimeout:
takeAssertion
startTimer:block:
_powerAssertion
delay
completableBlock
_scheduleTask:withCompletion:
tasks
completionBlock
setDelay:
setCompletableBlock:
_delay
_completableBlock
setTasks:
setCompletionBlock:
_tasks
_completionBlock
initWithType:name:powerAssertionTimeout:
notificationWithType:name:
setType:
setName:
powerAssertion
setPowerAssertion:
_type
handleGetAlarms:completion:
confirmGetAlarms:completion:
initWithName:
assertionTimeout
_assertionTimeout
_getCachedTimersWithCompletion:doSynchronous:
getCachedTimersWithCompletion:
getCachedTimersSyncWithCompletion:
setNextTimer:
_nextTimer
isEqualToTime:
initWithTimeInterval:
_remainingTime
initWithDate:currentDateProvider:
initWithDate:
setDate:
_date
initWithMetrics:
reconnect
_initWithConnectionProvidingBlock:metrics:
_initWithConnectionProvidingBlock:metrics:notificationCenter:
callStackSymbols
initWithTimerManager:
connectionProvider
cache
checkIn
_getCachedTimersWithFuture:finishBlock:
enumerateObjectsUsingBlock:
errorOnlyCompletionHandlerAdapter
addTimer:withCompletion:
updateTimer:withCompletion:
_updateTimer:doSynchronous:
removeTimer:withCompletion:
dismissTimerWithIdentifier:withCompletion:
repeatTimerWithIdentifier:withCompletion:
timerByUpdatingWithState:
_updateCurrentTimerWithState:
_validateCanStartTimer:
_runningTimerFromCurrentTimer:withDuration:
timersSync
getCurrentTimerSync
_updateCurrentTimerWithStateSync:
warmUp
initWithConnectionProvider:metrics:
initWithConnectionProvider:metrics:notificationCenter:
nextTimersForDate:maxCount:
dismissTimerWithIdentifier:
repeatTimerWithIdentifier:
stopCurrentTimer
pauseCurrentTimer
resumeCurrentTimer
startCurrentTimerWithDuration:
startCurrentTimerWithDurationSync:
stopCurrentTimerSync
pauseCurrentTimerSync
resumeCurrentTimerSync
setCache:
_connectionProvider
_cache
_didReceiveTimerServerReadyNotification:
timerManager
dictionaryWithObject:forKey:
postNotificationName:object:userInfo:
timersAdded:
timersUpdated:
timersRemoved:
timerFired:
timerDismissed:
nextTimerChanged:
resetMultiple
_responseToResetTimerIntent:withResetTimers:error:dryRun:
_handleResetTimer:dryRun:completion:
setResetTimers:
handleResetTimer:completion:
confirmResetTimer:completion:
resolveTargetTimerForResetTimer:withCompletion:
resolveResetMultipleForResetTimer:withCompletion:
containsObserver:
observersLock
setObserversLock:
_observersLock
initWithEvent:
scheduleActivityWithCriteria:activityHandler:performImmediately:
scheduleActivityWithCriteria:activityHandler:
unscheduleActivity
eventName
setEventName:
_eventName
_getCachedAlarmsWithFuture:finishBlock:
_alarmsIncludingSleepAlarm:doSynchronous:
nextAlarmsForDate:maxCount:includeSleepAlarm:
nextAlarmsForDate:maxCount:includeSleepAlarm:includeBedtimeNotification:
_nextAlarmsForDate:maxCount:includeSleepAlarm:includeBedtimeNotification:doSynchronous:
_sortedNextAlarmsAfterDate:includeSleepAlarm:includeBedtimeNotification:doSynchronous:
_filteredAlarms:afterDate:maxCount:filter:
nextAlarmsInRange:maxCount:includeSleepAlarm:includeBedtimeNotification:
_nextAlarmsInRange:maxCount:includeSleepAlarm:includeBedtimeNotification:doSynchronous:
sortedArrayUsingComparator:
nextAlarmsForDateSync:maxCount:includeSleepAlarm:
nextAlarmsForDateSync:maxCount:includeSleepAlarm:includeBedtimeNotification:
nextAlarmsInRangeSync:maxCount:includeSleepAlarm:includeBedtimeNotification:
alarmsSync
objectAtIndexedSubscript:
alarmCountIncludingSleepAlarm:
addAlarm:withCompletion:
assistantSyncNotificationName
cStringUsingEncoding:
updateAlarm:withCompletion:
removeAlarm:withCompletion:
snoozeAlarmWithIdentifier:snoozeAction:
snoozeAlarmWithIdentifier:snoozeAction:withCompletion:
dismissAlarmWithIdentifier:dismissAction:
dismissAlarmWithIdentifier:dismissAction:withCompletion:
firingAlarmCount
nextAlarmsForDate:maxCount:
nextAlarmsForDate:maxCount:includeBedtimeNotification:
nextAlarmsInRange:maxCount:includeSleepAlarm:
_sortedNextAlarmsAfterDate:includeSleepAlarm:includeBedtimeNotification:
nextAlarmsForDateSync:maxCount:
nextAlarmsForDateSync:maxCount:includeBedtimeNotification:
nextAlarmsInRangeSync:maxCount:includeSleepAlarm:
sleepAlarmSync
nextAlarmSync
alarmWithIDString:
indexForAlarm:
alarmAtIndex:
alarmCount
removeAlarm:
snoozeAlarmWithIdentifier:
dismissAlarmWithIdentifier:
_didReceiveAlarmServerReadyNotification:
mtNotifiyingQueue
alarmsAdded:
alarmsUpdated:
alarmsRemoved:
alarmSnoozed:
alarmDismissed:
alarmFired:
nextAlarmChanged:
indexesOfObjectsPassingTest:
objectsAtIndexes:
arrayWithCapacity:
immediateScheduler
combineAllFutures:scheduler:
_alternateTimersForTargetTimerState:type:inTimers:allowedTimerStates:
setMatchedTimers:
setUnmatchedTimers:
handleSearchForTimers:completion:
confirmSearchForTimers:completion:
resolveLabelForSearchForTimers:withCompletion:
resolveDurationForSearchForTimers:withCompletion:
resolveStateForSearchForTimers:withCompletion:
resolveTypeForSearchForTimers:withCompletion:
determineNextState:
nextBedtimeDNDStartDateAfterDate:
nextBedtimeDNDEndDate
nextBedtimeDNDEndDateAfterDate:
nextBedtimeDNDStartDate
setGroupIdentifier:
prepareAlarms
alarmsByID
_alarmsByID
_bundleIDForUNSchedule
_loadUserPreferences
_loadScheduledNotifications
_upgradeFromSpringboardDefaults
_loadAlarms
_reconcileAlarmsAndNotifications
_loadTimerDefaults
getPendingNotificationRequestsWithCompletionHandler:
_upgradeIfNeverAttempted
_discardOldVersion
_upgrade
_upgradeAlarms
_upgradeTimers
_copyLegacyAlarmsFromPreferences
sortUsingSelector:
_discardOldAlarms
_discardOldTimers
_copyLegacySleepAlarmFromPreferences
_purgeAlarmsAndTimers
_cancelNotifications
removeAllPendingNotificationRequests
repeatScheduleFromOldAlarm:
soundFromOldAlarm:
_numberFromString:
numberFromString:
setDefaultSound:
scheduledNotifications
setScheduledNotifications:
loaded
setLoaded:
purged
setPurged:
_loaded
_purged
_defaultDuration
_defaultSound
_scheduledNotifications
initWithConnectionInfo:errorHandler:
initWithMachServiceName:
valueForEntitlement:
_didInvalidateConnection:
addClientConnection:clientLink:
removeClientConnection:
processInfo
processIdentifier
clientInfoForConnection:clientLink:
clients
_connectedClients
currentConnection
_currentClientForConnection:
clientLink
performBlockOnAllClients:excludingCurrent:
performBlockOnClientInfos:excludeCurrent:
_performBlockOnClientInfos:excludingClient:
suspend
listener:shouldAcceptNewConnection:
startListening
connectedClients
currentClient
performBlockOnCurrentClient:
performBlockOnAllClients:
performBlockOnAllClients:excludingClient:
stopListening
setClients:
connectionListener
setConnectionListener:
_clients
_connectionListener
_setupNotificationCenter
_setupAlarms
_setupTimers
_setupInitialListeners
rescheduleTimers
_setupSecondaryListeners
sharedDeviceListener
systemStateListener
alarmServer
alarmScheduler
timerServer
timerScheduler
launchDate
_diagnosticProviders
agent
setLaunchDate:
systemReady
setSystemReady:
notificationManager
setNotificationManager:
setSystemStateListener:
languageChangeListener
setLanguageChangeListener:
diagnostics
setDiagnostics:
timeListener
setTimeListener:
setAlarmServer:
setAlarmScheduler:
alarmSnapshot
setAlarmSnapshot:
setTimerServer:
setTimerScheduler:
timerSnapshot
setTimerSnapshot:
alarmIntentDonor
setAlarmIntentDonor:
timerIntentDonor
setTimerIntentDonor:
coreDuetMonitor
setCoreDuetMonitor:
bedtimeSessionManager
setBedtimeSessionManager:
_systemReady
_launchDate
_notificationManager
_systemStateListener
_languageChangeListener
_diagnostics
_timeListener
_alarmServer
_alarmScheduler
_alarmSnapshot
_timerServer
_timerScheduler
_timerSnapshot
_alarmIntentDonor
_timerIntentDonor
_coreDuetMonitor
_bedtimeSessionManager
_registerForNotifications
mainQueue
dataSource:didAddAlarms:
_iterateObserversWithBlock:
_handleAlarmNotification:block:
addObserverForName:object:queue:usingBlock:
dataSource:didRemoveAlarms:
dataSource:didUpdateAlarms:
_stateReset
reloadAlarms
reschedule:
dataSourceDidReload:
rowForAlarmWithID:
rowForAlarm:
setObject:atIndexedSubscript:
unregisterObserver:
numberOfAlarms
alarmAtRow:
willExitWithNextState:
willEnterWithPreviousState:
didExitWithNextState:
stateMachineName
setCurrentState:
deleteCharactersInRange:
setInfoProvider:
_currentState
_infoProvider
registerSleepDataObserver:
sleepDataObservers
healthObserver
sleepDataDidChange
initWithSampleType:predicate:updateHandler:
setHealthObserver:
executeQuery:
unregisterSleepDataObserver:
stopQuery:
sleepDataForPastWeekRequestAuthorization:
sleepDataForPastWeekRequestAuthorization:dataSource:
sleepDateIntervalForThePastWeekWithCalendar:
sleepDataForRange:requestAuthorization:dataSource:
sleepDataForRange:
setDay:
sleepDataForRange:intervalComponents:requestAuthorization:dataSource:
_sourcePredicate:
sleepQueryWithStartDate:endDate:intervalComponents:calendar:predicate:healthStore:completion:
_executeSleepQuery:requestAuthorization:future:
lastSleepDayRequestAuthorization:
lastSleepDayRequestAuthorization:dataSource:
startOfDayForDate:
hk_dateByAddingDays:toDate:
sleepDaysForRange:requestAuthorization:dataSource:
sleepDaysForRange:requestAuthorization:
sleepDaysQueryWithStartDate:endDate:calendar:predicate:healthStore:completion:
_predicateForObjectsFromAppleWatches
orPredicateWithSubpredicates:
setWithObject:
requestAuthorizationToShareTypes:readTypes:completion:
sleepDataForPastWeek
lastSleepDay
sleepDaysForRange:
setSleepDataObservers:
_healthObserver
_sleepDataObservers
_queue_nextTimer
_queue_nextScheduledTimer
rescheduleTimersWithCompletion:
_queue_rescheduleTimersWithCompletion:
_queue_scheduleTimers:withCompletion:
_queue_unscheduleTimers:
_queue_lastTimerTriggerDate
_queue_setLastTimerTriggerDate:
fireTime
scheduledTimers
_queue_updatePersistentTimerForNextTimerWithCompletion:
_queue_fireTriggeredTimersWithCompletionBlock:
_intervalToCheckForTimersToFireBeforeDate:
_fireScheduledTimer:firedDate:completionBlock:
_queue_triggerDidFireForTimerWithCompletionBlock:
scheduleTimers:
unscheduleTimers:
_scheduledTimers
handleFailureInFunction:file:lineNumber:description:
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
secondsFromGMTForDate:
stringFromDate:withRelativeToTimeZone:
workScheduler
_latestKeyBagValueForHasBeenUnlockedSinceBoot
setInternalHasBeenUnlockedSinceBoot:
_hasBeenUnlockedSinceBoot
internalHasBeenUnlockedSinceBoot
setWorkScheduler:
_internalHasBeenUnlockedSinceBoot
_workScheduler
_timerTimeForState:remainingTime:currentDateProvider:
isCurrentTimer
siriContext
setFireTime:
_setDuration:
isEqualToTimer:
_isEqualToTimer:checkLastModified:
_copyStateOntoTimer:
dateWithTimeInterval:sinceDate:
timerURL
_timerID
_state
_duration
_fireTime
_siriContext
initWithStorage:connectionListenerProvider:
_isSystemReady
_systemNotReadyError
connectionListenerProvider
_notifyClientsForTriggerType:
componentsJoinedByString:
isSystemReady
_connectionListenerProvider
timerManagerProvider
_isDefaultTimer:
disambiguationWithTimersToDisambiguate:
confirmationRequiredWithTimerToConfirm:
firstIndex
setTimerManagerProvider:
setTimerManager:
_timerManagerProvider
initWithDate:type:
isEqualToTrigger:
_stringForType:
isEvent
setTriggerType:
setTriggerDate:
_triggerType
_triggerDate
propertiesAffectingWaketime
propertiesAffectingBedtime
handler
setHandler:
setNotification:
_handler
_notification
notifications
postNotificationWithIdentifier:title:message:defaultButtonTitle:otherButtonTitle:bypassDND:handler:
setNotifications:
_notifications
caseInsensitiveCompare:
localizedCaseInsensitiveContainsString:
initWithConnection:clientLink:
processID
connectedDate
setConnection:
setClientLink:
setConnectedDate:
_clientLink
_connectedDate
setAsleepState:
setAwakeState:
setDisabledState:
_asleepState
_awakeState
_disabledState
setUserActivity:
successIntentResponseWithAlarm:
setCode:
_code
unspecifiedIntentResponseWithState:
readyIntentResponseWithState:
continueInAppIntentResponseWithState:
inProgressIntentResponseWithState:
successIntentResponseWithState:alarm:
failureRequiringAppLaunchIntentResponseWithState:
successIntentResponseWithAlarms:
confirmationRequiredWithValueToConfirm:
confirmationRequiredWithAlarmStateToConfirm:
confirmationRequiredWithAlarmOperationToConfirm:
successWithResolvedObject:
disambiguationWithObjectsToDisambiguate:
confirmationRequiredWithObjectToConfirm:
disambiguationWithAlarmsToDisambiguate:
confirmationRequiredWithAlarmToConfirm:
disambiguationWithRepeatDaysToDisambiguate:
confirmationRequiredWithRepeatDayToConfirm:
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v32@0:8@"INPauseTimerIntent"16@?<v@?@"INPauseTimerIntentResponse">24
v32@0:8@"INPauseTimerIntent"16@?<v@?@"INTimerResolutionResult">24
v32@0:8@"INPauseTimerIntent"16@?<v@?@"INBooleanResolutionResult">24
v32@0:8@"INResumeTimerIntent"16@?<v@?@"INResumeTimerIntentResponse">24
v32@0:8@"INResumeTimerIntent"16@?<v@?@"INTimerResolutionResult">24
v32@0:8@"INResumeTimerIntent"16@?<v@?@"INBooleanResolutionResult">24
v36@0:8@16B24@?28
@44@0:8@16@24@32B40
@56@0:8@16@24@32Q40@48
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
q16@0:8
@"NSDate"16@0:8
@"NSArray"16@0:8
@"NSDictionary"16@0:8
v20@0:8B16
v24@0:8Q16
v16@0:8
@"NSDate"
@"NSArray"
@"NSDictionary"
B32@0:8@16@24
@?16@0:8
@24@0:8q16
q24@0:8@16
v20@0:8I16
v24@0:8q16
v32@0:8@16q24
I16@0:8
@"Alarm"
@"NSMutableDictionary"
@"NSString"
@"<AlarmDelegate>"
@"NSURL"
@40@0:8@16@24Q32
@72@0:8@16@24@32@40@48@56Q64
@"NSXPCInterface"
v32@0:8@"MTEnableAlarmIntent"16@?<v@?@"MTEnableAlarmIntentResponse">24
v32@0:8@"MTDisableAlarmIntent"16@?<v@?@"MTDisableAlarmIntentResponse">24
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"MTToggleAlarmIntentResponse">24
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"MTAlarmOperationResolutionResult">24
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"MTAlarmStateResolutionResult">24
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"MTIntentAlarmResolutionResult">24
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"NSArray"@"NSError">24
@"MTIntentAlarm"24@0:8@"MTToggleAlarmIntent"16
v40@0:8@16@24@?32
@28@0:8@16B24
B32@0:8@16q24
v40@0:8@16q24@?32
d32@0:8@16q24
B32@0:8@"NSString"16q24
v40@0:8@"NSString"16q24@?<v@?>32
d32@0:8@"NSString"16q24
@?24@0:8@16
@32@0:8@16@?24
@24@0:8Q16
v32@0:8@?16@?24
@"<MTScheduledListDelegate>"
@"NSMutableOrderedSet"
@32@0:8@16@24
f24@0:8@16
v32@0:8@16@24
v28@0:8f16@20
@24@0:8@"NSString"16
@32@0:8@"NSString"16@24
f24@0:8@"NSString"16
v32@0:8@16@"NSString"24
v28@0:8f16@"NSString"20
v32@0:8@"MTTimerScheduler"16@"MTTimer"24
v32@0:8@"MTTimerScheduler"16@"MTScheduledObject"24
v24@0:8@?16
v40@0:8@16@?24@32
v24@0:8@"<MTTimerObserver>"16
v24@0:8@?<v@?@"NSArray"@"MTTimer"@"NSError">16
v40@0:8@"MTTimer"16@?<v@?@"NSError">24@"<MTSource>"32
v40@0:8@"NSString"16@?<v@?@"NSError">24@"<MTSource>"32
v32@0:8@"NSArray"16@"<MTSource>"24
@"MTTimer"16@0:8
@56@0:8@16@24@32@40@?48
v40@0:8@16@24B32B36
@40@0:8@16@?24@32
@"MTTimerScheduler"
@"NSMutableArray"
@"MTTimerMigrator"
@"<NAScheduler>"
@"MTObserverStore"
@"<MTPersistence>"
d16@0:8
@24@0:8^{_NSZone=}16
@"NSCoder"16@0:8
v28@0:8B16@20
v32@0:8q16@24
v28@0:8i16@20
v32@0:8d16@24
i24@0:8@16
d24@0:8@16
v40@0:8@16@24Q32
v32@0:8@"<MTSource>"16@"NSArray"24
v40@0:8@"<MTSource>"16@"MTAlarm"24Q32
v32@0:8@"<MTSource>"16@"MTAlarm"24
@"MTAlarmStorage"
v24@0:8@"NSDate"16
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
@"UNUserNotificationCenter"
@40@0:8@16@?24@?32
v36@0:8@?16@?24B32
@24@0:8@?16
@40@0:8@?16@?24@?32
@"NSXPCConnection"
@"MTXPCConnectionInfo"
@"<MTScheduler>"
v24@0:8B16B20
@"NAFuture"16@0:8
@"NAFuture"24@0:8@"NSObject<MTTimerIntentSupport>"16
@"NAFuture"24@0:8Q16
v32@0:8@"DNDModeAssertionService"16@"DNDModeAssertion"24
v32@0:8@"DNDModeAssertionService"16@"DNDModeAssertionInvalidation"24
B24@0:8^B16
@"MTAlarm"16@0:8
B36@0:8@16@24B32
B28@0:8@16B24
v32@0:8@16d24
B36@0:8@"MTBedtimeDNDStateMachine"16@"NSDate"24B32
B28@0:8@"MTBedtimeDNDStateMachine"16B24
v32@0:8@"MTBedtimeDNDStateMachine"16@"NSDate"24
v24@0:8@"MTBedtimeDNDStateMachine"16
v32@0:8@"MTBedtimeDNDStateMachine"16d24
v40@0:8@16@24@32
v48@0:8@16@24Q32@40
v40@0:8@"MTSleepCoordinator"16@"NSDate"24@"MTAlarm"32
v48@0:8@"MTSleepCoordinator"16@"NSDate"24Q32@"MTAlarm"40
v32@0:8@"MTSleepCoordinator"16@"MTAlarm"24
v32@0:8@"MTTimeListener"16@?<v@?>24
@40@0:8@16@24@?32
B32@0:8^B16^@24
B24@0:8^@16
@"<MTAlarmStorage>"
@"MTSleepCoordinator"
@"MTBedtimeDNDStateMachine"
@"DNDModeAssertionService"
v32@0:8B16B20@24
v32@0:8B16B20@"NSDate"24
@"MTBedtimeDNDStateMachineInitialState"
@"MTBedtimeDNDStateMachineOffState"
@"MTBedtimeDNDStateMachineWaitingState"
@32@0:8@16o^@24
@40@0:8@16@24o^@32
@"NSDateFormatter"
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"MTCreateAlarmIntentResponse">24
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"INStringResolutionResult">24
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"INDateComponentsResolutionResult">24
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"NSArray">24
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"NSArray"@"NSError">24
@"NSArray"24@0:8@"MTCreateAlarmIntent"16
v32@0:8@16Q24
v32@0:8@"NSDate"16Q24
@"<MTBedtimeSessionTrackerDelegate>"16@0:8
v24@0:8@"<MTBedtimeSessionTrackerDelegate>"16
B24@0:8@"MTAlarm"16
@"<MTBedtimeSession>"24@0:8@"<MTBedtimeSession>"16
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"<MTBedtimeSessionTrackerDelegate>"
@"MTAlarm"
Q32@0:8@16@24
Q24@0:8@16
v48@0:8@16Q24@32@?40
@"MTTimerStorage"
@"MTMetrics"
v32@0:8@"MTUpdateAlarmIntent"16@?<v@?@"MTUpdateAlarmIntentResponse">24
v32@0:8@"MTAlarmScheduler"16@"MTScheduledObject"24
v48@0:8@16@24@?32@40
v48@0:8@16Q24@?32@40
v56@0:8@16@24Q32@?40@48
v24@0:8@"<MTAlarmObserver>"16
v24@0:8@?<v@?@"NSArray"@"MTAlarm"@"MTAlarm"@"NSError">16
v40@0:8@"MTAlarm"16@?<v@?@"NSError">24@"<MTSource>"32
v48@0:8@"NSString"16@"MTChangeSet"24@?<v@?@"NSError">32@"<MTSource>"40
v24@0:8@"<MTSource>"16
v40@0:8@"NSArray"16@"MTAlarm"24@"<MTSource>"32
v48@0:8@"NSString"16Q24@?<v@?@"NSError">32@"<MTSource>"40
v56@0:8@"NSString"16@"NSDate"24Q32@?<v@?@"NSError">40@"<MTSource>"48
v32@0:8@"NSString"16@?<v@?@"MTAlarm">24
v48@0:8@16@24@32B40B44
v40@0:8@16Q24@32
@"MTAlarmScheduler"
@"MTAlarmMigrator"
@"NSObject<OS_dispatch_queue>"
v32@0:8@"INCreateTimerIntent"16@?<v@?@"INCreateTimerIntentResponse">24
v32@0:8@"INCreateTimerIntent"16@?<v@?@"INCreateTimerLabelResolutionResult">24
v32@0:8@"INCreateTimerIntent"16@?<v@?@"INTimeIntervalResolutionResult">24
v32@0:8@"INCreateTimerIntent"16@?<v@?@"INTimerTypeResolutionResult">24
B20@0:8I16
q24@0:8Q16
v32@0:8@"MTScheduledList"16@?<v@?>24
@48@0:8@16@24@32@40
@72@0:8@16@24@32@40@48@56@?64
@20@0:8B16
@"<MTAlarmScheduleDelegate>"
@"MTScheduledList"
@"<MTNotificationCenter>"
@"<MTSchedulingDelegate>"
@"<MTTaskScheduler>"
Q24@0:8Q16
@"<MTScheduleable>"
@"MTTrigger"
@"NSArray"24@0:8@"NSDate"16
@32@0:8d16@?24
@40@0:8d16Q24@?32
@48@0:8d16Q24@?32@40
v24@0:8d16
@"NSObject<OS_dispatch_source>"
@"<MTAgentDiagnosticDelegate>"
@32@0:8@16Q24
v32@0:8@"<MTSource>"16@"MTTimer"24
v24@0:8@"MTTimer"16
@"NSMutableSet"
v28@0:8@?16B24
v28@0:8@16B24
v32@0:8@"MTScheduledObject"16@?<v@?>24
v24@0:8@"MTAlarm"16
v24@0:8@"MTScheduledObject"16
v32@0:8@"MTAlarm"16Q24
v28@0:8@"MTAlarm"16B24
v24@0:8@"NSArray"16
@"<MTSystemStateDelegate>"
v32@0:8Q16Q24
@"WorldClockPreferences"
v24@0:8@"MTSleepCoordinatorStateMachine"16
v40@0:8@"MTSleepCoordinatorStateMachine"16@"NSDate"24Q32
v32@0:8@"MTSleepCoordinatorStateMachine"16d24
@"MTSleepCoordinatorStateMachine"
@"NAFuture"
@"MTXPCScheduler"
@"MTBedtimeDNDMonitor"
@32@0:8@16d24
@40@0:8@16d24@?32
@"NSObject<OS_os_transaction>"
v32@0:8@"INDeleteTimerIntent"16@?<v@?@"INDeleteTimerIntentResponse">24
v32@0:8@"INDeleteTimerIntent"16@?<v@?@"INTimerResolutionResult">24
v32@0:8@"INDeleteTimerIntent"16@?<v@?@"INBooleanResolutionResult">24
v40@0:8@16B24B28@?32
@32@0:8@16q24
v32@0:8@"INSetTimerAttributeIntent"16@?<v@?@"INSetTimerAttributeIntentResponse">24
v32@0:8@"INSetTimerAttributeIntent"16@?<v@?@"INSetTimerAttributeTargetTimerResolutionResult">24
v32@0:8@"INSetTimerAttributeIntent"16@?<v@?@"INTimeIntervalResolutionResult">24
v32@0:8@"INSetTimerAttributeIntent"16@?<v@?@"INSpeakableStringResolutionResult">24
v52@0:8@16d24@32B40@?44
@40@0:8@16@24@32
@"NSNumber"
@"MTAlarmManager"
@32@0:8Q16Q24
@32@0:8q16q24
@48@0:8q16q24q32q40
Q20@0:8B16
B40@0:8@16q24@32
v24@0:8@"<MTSerializer>"16
@24@0:8@"<MTSerializer>"16
@40@0:8Q16Q24@?32
@32@0:8@16B24B28
@48@0:8@16@24Q32@40
@"NSUUID"
@"MTSound"
@40@0:8@16q24@32
v32@0:8@"<MTBedtimeSessionTracker>"16@"<MTBedtimeSession>"24
@"HKHealthStore"
@"<MTBedtimeSessionTracker>"
v36@0:8f16@20@28
f32@0:8@16^B24
v36@0:8B16@20@28
B32@0:8@16^B24
v40@0:8q16@24@32
q32@0:8@16^B24
q32@0:8@16q24
q40@0:8@16@?24q32
v40@0:8d16@24@32
d32@0:8@16^B24
d32@0:8@16d24
d40@0:8@16@?24d32
@"NSUserDefaults"
B24@0:8q16
i16@0:8
v20@0:8i16
@36@0:8@16@24B32
@40@0:8@16Q24q32
@44@0:8@16Q24q32B40
d32@0:8@16@24
@20@0:8i16
@28@0:8i16@20
v24@0:8@?<v@?>16
@"<NACancelable>"24@0:8@?<v@?@"NACancelationToken">16
@"<NACancelable>"32@0:8d16@?<v@?>24
@24@0:8^@16
@24@0:8d16
@64@0:8@16@24@32@40@48@56
@"ALCity"
@"NSSet"
@32@0:8@16^{__CFBundle=}24
v32@0:8@16B24B28
@"MTUserNotificationActionDispatcher"
@"MTTimer"
@32@0:8@16^B24
v32@0:8d16@?24
@"MTPowerAssertion"
v24@0:8@"MTTask"16
v24@0:8@"MTTaskGroup"16
@"MTGCDTimer"
@32@0:8q16@24
@40@0:8q16@24d32
v32@0:8@"MTGetAlarmsIntent"16@?<v@?@"MTGetAlarmsIntentResponse">24
B24@0:8@"<MTTimerTime>"16
q24@0:8@"<MTTimerTime>"16
@"NSNotificationCenter"16@0:8
@32@0:8@?16@24
@40@0:8@?16@24@32
B24@0:8d16
B24@0:8Q16
@"MTTimerManagerExportedObject"
@"MTXPCConnectionProvider"
@"MTTimerCache"
@"NSNotificationCenter"
@"MTTimerManager"
v32@0:8@"INResetTimerIntent"16@?<v@?@"INResetTimerIntentResponse">24
v32@0:8@"INResetTimerIntent"16@?<v@?@"INTimerResolutionResult">24
v32@0:8@"INResetTimerIntent"16@?<v@?@"INBooleanResolutionResult">24
v32@0:8@16^B24
@"NSHashTable"
v36@0:8@16@?24B32
@48@0:8@16@24Q32@?40
@24@0:8B16B20
@36@0:8@16Q24B32
@40@0:8@16Q24B32B36
@44@0:8@16Q24B32B36B40
@36@0:8@16B24B28B32
@"MTAlarmManagerExportedObject"
@"MTAlarmCache"
v44@0:8@16B24@?28@?36
v60@0:8@16B24B28B32@?36@?44@?52
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INSearchForTimersIntentResponse">24
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INSpeakableStringResolutionResult">24
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INTimeIntervalResolutionResult">24
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INTimerStateResolutionResult">24
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INTimerTypeResolutionResult">24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8@?16@24
@"NSXPCListener"
@"MTAgentNotificationManager"
@"MTSystemStateListener"
@"MTLanguageChangeListener"
@"MTAgentDiagnosticListener"
@"MTTimeListener"
@"MTAlarmServer"
@"MTAlarmSnapshot"
@"MTTimerServer"
@"MTTimerSnapshot"
@"MTAlarmIntentDonor"
@"MTTimerIntentDonor"
@"MTCoreDuetMonitor"
@"MTBedtimeSessionManager"
@"MTBedtimeSessionTracker"
@"MTStateMachine"
@"MTStateMachineState"
@"<MTStateMachineDelegate>"
@"<MTStateMachineInfoProvider>"
@28@0:8B16Q20
@36@0:8@16B24Q28
@44@0:8@16@24B32Q36
v36@0:8@16B24@28
@"HKObserverQuery"
@"<MTTimerManagerIntentSupport>"16@0:8
@"<MTTimerSchedulerDelegate>"
@"<MTTimerStorage>"
v40@0:8@16Q24@?32
v32@0:8@"MTAlarm"16@?<v@?@"NSError">24
v40@0:8@"NSString"16Q24@?<v@?@"NSError">32
v32@0:8@"MTTimer"16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
B32@0:8Q16Q24
@40@0:8Q16d24@?32
@32@0:8Q16d24
@"<MTTimerTime>"
@"MTXPCConnectionListenerProvider"
v44@0:8@16B24@28@?36
@48@0:8q16q24@32@40
@"<MTTimerManagerProviding>"
@"<MTTimerManagerIntentSupport>"
^{__CFUserNotification=}16@0:8
v24@0:8^{__CFUserNotification=}16
@"MTOSTransaction"
^{__CFUserNotification=}
v68@0:8@16@24@32@40@48B56@?60
@"NSUUID"16@0:8
@"MTSleepCoordinatorStateMachineAsleepState"
@"MTSleepCoordinatorStateMachineAwakeState"
@"MTSleepCoordinatorStateMachineDisabledState"
