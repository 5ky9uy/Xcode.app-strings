%s %@
%s Failed to %@ pause timer intent %@%@
%s Successfully %@ pause timer attribute intent %@ with response %@
%s Failed to %@ resume timer intent %@%@
%s Successfully %@ resume timer attribute intent %@ with response %@
exportedObject: %{public}@ must conform to protocol: %{public}@
%s intent:%@
%{public}@ alarm fetch returned alarms: %{public}@
%{public}@ found no alarm to enable
%{public}@ Alarm being modified: %{public}@. Enabled state from intent: %{public}@, current alarm enable state: %i
%{public}@ alarm state already matches intent state : %{public}@
%{public}@ Updating enable state to %i for alarm: %{public}@
%{public}@ error reading into widgets config: %{public}@
%{public}@ read widget intent ClocksIntent
%{public}@ read widget intent ClocksSingleIntent
%{public}@ read clock widget timezones: %{public}@
%{public}@ reloading widget timeline
mobiletimerd - System language changed, terminating daemon
Initializing %{public}@
%{public}@ loading timers
%{public}@ migration needed
%{public}@ migrated timer is %{public}@
%{public}@ no timer created during migration.
%{public}@ has no timers
%{public}@ binary data storage version detected.  Using old reader.
%{public}@ unexpected error reading data %{public}@
%{public}@ loaded %{public}@
%{public}@ setting all timers %{public}@
%{public}@ setting all timers
%{public}@ received request for timers
%{public}@ returning timers: %{public}@, next timer: %{public}@
%{public}@ adding timer %{public}@
MTTimerStorage - Adding Timer
%{public}@ updating timer %{public}@
MTTimerStorage - Updating Timer
%{public}@ removing timer %{public}@
MTTimerStorage - Removing Timer
%{public}@ dismissing timer with ID %{public}@
MTTimerStorage - Dismissing Timer
%{public}@ repeating timer with ID %{public}@
MTTimerStorage - Repeating Timer
Timer already exists
MTTimerStorage - Failed Adding Timer
MTTimerStorage - Finished Adding Timer
MTTimerStorage - Finished Updating Timer
MTTimerStorage - Failed Updating Timer
%{public}@
MTTimerStorage - Finished Removing Timer
Timer doesn't exist
MTTimerStorage - Failed Removing Timer
Dismissed timer %{public}@ at %{public}@
MTTimerStorage - Finished Dismissing Timer
%{public}@ couldn't find matching timer to dismiss for %{public}@
MTTimerStorage - Failed Dismissing Timer
Repeated timer %{public}@
MTTimerStorage - Finished Repeating Timer
MTTimerStorage - Failed Repeating Timer
%{public}@ notifying observers for timer addition
%{public}@ notifying observers for timer update
%{public}@ notifying observers for timer removal
%{public}@ notifying observers for timer dismissal
%{public}@ notifying observers for timer firing
%{public}@ notifying observers for next timer change
-----MTTimerStorage-----
Timers: %{public}@
Last Modified: %{public}@
MTTimerStorage - Next Timer Changed
MTTimerStorage - Fired Timer
%{public}@ removing all timers
%{public}@ registered %{public}@
%{public}@ is registering for distributed notifications
%{public}@ is registering for darwin notifications
%{public}@ is registering for alarm notifications
%{public}@ is registering for darwin notification %{public}@
%{public}@ received notification %{public}@
%{public}@ Using a scheduling power assertion timeout of %{public}d
%{public}@ Alarm added - Request snapshot
%{public}@ Alarm updated - Request snapshot
%{public}@ Alarm removed - Request snapshot
%{public}@ has no sync manager.
MTAlarmSyncDataModel - Syncing Alarm Dismiss
MTAlarmSyncDataModel - Syncing Alarm Snooze
%{public}@ performing action %{public}@
MTAlarmSyncDataModel - Applying Alarm Dismiss
MTAlarmSyncDataModel - Applying Alarm Snooze
-----%{public}@-----
Alarm Sync Manager: %{public}@
%{public}@ no sleep alarm, sleep disabled
%{public}@ sleep schedule disabled
%{public}@ haven't dismissed morning alarm yet so we're sleeping
%{public}@ wake up alarm was snoozed (%{public}@) so we're sleeping
%{public}@ next trigger is for wake up (%{public}@) so we're sleeping
%{public}@ bedtime reminder was snoozed (%{public}@) for after the bedtime: (%{public}@). it is currently before bedtime and the snooze date
%{public}@ bedtime reminder was snoozed (%{public}@) for after the bedtime. it is currently past bedtime but before the snooze date.
%{public}@ user confirmed go to bed notification (%{public}@) so we're sleeping until %{public}@
%{public}@ haven't seen go to bed reminder yet (%{public}@)
%{public}@ not bedtime yet (%{public}@)
%{public}@ bedtime reached, checking state
%{public}@ waketime reached but alarm not enabled, dismissing
%{public}@ scheduling alarm timeout
%{public}@ alarm timeout occurred, dismissing
%{public}@ received %{public}@
%{public}@ Active Paired Device: %{public}@ (version: %{public}@)
%{public}@ no paired device detected
%{public}@ paired watch version is too old for sync
%{public}@ has active paired watch%{public}@
-----MTPairedDeviceListener-----
Paired Device: %{public}@ - %{public}@ - %{public}@
Paired Device Active: %{public}d
%{public}@ received willPresentNotification
%{public}@ completing with UNNotificationPresentationOptionAlert for %{public}@
%{public}@ completing with UNNotificationPresentationOptionAlert|UNNotificationPresentationOptionSound for %{public}@
Connection info must be non-nil
Initializing %{public}@ with info %{public}@
%{public}@ deallocing...
%{public}@ rebuilding connection
%{public}@ connection interrupted
%{public}@ connection invalidated
%{public}@ will retry connection because the response to the lifecycle notification failed
%{public}@ connection invalidated.  Retrying
%{public}@ not retrying invalidated connection
%{public}@ received lifecycle darwin notification. Reestablishing connection.
%{public}@ received lifecycle darwin notification.  Reconnecting.
%{public}@ received lifecycle darwin notification but does not have a reconnection handler.
Failed to reconnect for provider %{public}@ with error %{public}@.
%{public}@ retrying failed reconnect
%{public}@ attempting to reconnect.
%{public}@ failed to reconnect too many times
%{public}@ received a remote proxy error: %{public}@
%{public}@ expected non-nil proxy@
%{public}@ expected non-nil connection
%{public}@ invalidating
%{public}@ Handling manual %{public}@ invalidation
%{public}@ Keeping off until: %{public}@
%{public}@ Not in user sleep window
%{public}@ We are past keepOffUntilDate: %{public}@
%{public}@ ignoring updateState until keepOffUntilDate: %{public}@
%{public}@ Failed adding assertion update listener: %@
%{public}@ Added assertion update listener
%{public}@ engageUntilDate:userEngaged
%{public}@ already have assertion
%{public}@ updating active assertion with new end date %{public}@, isUserRequested %d
%{public}@ acquiring assertion with details %{public}@
%{public}@ Failed to acquire assertion with %{public}@
%{public}@ Successfully acquired assertion
%{public}@ clearKeepOff:
%{public}@ disengage:
%{public}@ there is no assertion
%{public}@ Failed to release assertion with %{public}@
%{public}@ Successfully released assertion
%{public}@ keepOffUntilDate: %{public}@
%{public}@ scheduleUpdateForSecondsFromNow: %f
%{public}@ re-checking %{public}@
%{public}@ user manually turning off %{public}@ (%{public}@)
%{public}@ didReceiveModeAssertionInvalidation %{public}@
%{public}@ user woke up, turning off %{public}@ if it's on
%{public}@ user went to bed, checking %{public}@
%{public}@ bedtime reminder fired, checking %{public}@
%{public}@ it's the user's bedtime, checking %{public}@
%{public}@ wake up alarm fired, checking %{public}@
%{public}@ wake up alarm snoozed, checking %{public}@
%{public}@ user %{public}@ sleep alarm, checking %{public}@
%{public}@ significant time change detected, checking %{public}@
-----%@-----
isEnabled: %d, isUserRequested: %d
%{public}@ resuming sync service
%{public}@ sync currently disabled, not starting, and removing any pending changes.
%{public}@ stopping sync service
%{public}@ removing pending changes
%{public}@ still has changes
%{public}@ no pending changes
%{public}@ syncing %{public}@
%{public}@ ignoring sync because we're not started
%{public}@ applying change %{public}@
%{public}@ nothing to apply
%{public}@ resetting data store
%{public}@ successfully sent %lu changes
%{public}@ incremental sync requested
%{public}@ sync isn't disabled.
%{public}@ sync is disabled.
Sync Service: %@
Sync Status: %lu
Pending Changes: %lu
%{public}@ createAlarm requested without time
%{public}@ no alarm, disabling
%{public}@ feature not enabled
%{public}@ user confirmed bedtime reminder (%{public}@).  Starting session.
%{public}@ user woke up at %@ (%{public}@)
%{public}@ received notification response
%{public}@ received response for category %{public}@ and action %{public}@
Unexpected alarm notification action: %{public}@
%{public}@ calling completion
%{public}@ received snooze action for %{public}@
%{public}@ received go to bed action for bedtime notification %{public}@
%{public}@ received dismiss action for wakeup alarm %{public}@
%{public}@ received dismiss action for bedtime notification %{public}@
%{public}@ received dismiss action for snooze countdown notification %{public}@
%{public}@ received dismiss action for alarm %{public}@
%{public}@ received response for action %{public}@
Unexpected timer notification action: %{public}@
%{public}@ received dismiss action for timer %{public}@
%{public}@ received repeat action for timer %{public}@
Initializing %{public}@ with persistence %{public}@ and migrator %{public}@
%{public}@ cleaning up snooze fire date for sleep alarm %{public}@
%{public}@ cleaning up repeat schedule for sleep alarm %{public}@
%{public}@ loading alarms
%{public}@ To set as a marker we are hitting here with updated root
%{public}@ has no alarms
%{public}@ clean-up needed
%{public}@ Migrating sleep alarm: %{public}@ 
%{public}@ Donate signal for existing bedtime
%{public}@ Don't donate signal because no existing bedtime
%{public}@ Failed to release assertion with %{public}@, failure error:%{public}@
%{public}@ Migrating sleep alarm: %{public}@ to regular: %{public}@
%{public}@ loaded %{public}@, sleep alarms %{public}@
%{public}@ loaded %{public}ld alarms, %{public}ld sleep alarms
%{public}@ persistence is nil
%{public}@ ignoring misplaced sleep alarm %{public}@
%{public}@ ignoring misplaced regular alarm %{public}@
%{public}@ received request for alarms
%{public}@ returning ordered alarms: %{public}@, sleep alarms: %{public}@, next alarm: %{public}@
%{public}@ calling completion block with alarms %@
%{public}@ adding alarm %{public}@
MTAlarmStorage - Adding Alarm
%{public}@ updating alarm %{public}@
MTAlarmStorage - Updating Alarm
%{public}@ updating %{public}@ with changes %{public}@
%{public}@ removing alarm %{public}@
MTAlarmStorage - Removing Alarm
%{public}@ removing alarm with ID %{public}@
%{public}@ removing all alarms
%{public}@ setting all alarms %{public}@, sleep alarms %{public}@
%{public}@ setting all alarms
%{public}@ setting sleep alarms %{public}@
%{public}@ transferring metadata from existing sleep alarms %{public}@
%{public}@ snoozing for %{public}lu minutes
%{public}@ snoozing alarm with ID %{public}@ and action %ld
MTAlarmStorage - Snoozing Alarm
%{public}@ dismissing alarm with ID %{public}@ and action %{public}@
MTAlarmStorage - Dismissing Alarm
Alarm already exists
MTAlarmStorage - Failed Adding Alarm
MTAlarmStorage - Finished Adding Alarm
Alarm doesn't exist
MTAlarmStorage - Failed Updating Alarm
%{public}@ Alarm %{public}@ disabled while firing (%{public}@).  Dismissing: %{public}@ (last dismissed: %{public}@)
%{public}@ Alarm %{public}@ modified during save.  Notifying everyone.
%{public}@ Changes: %{public}@
MTAlarmStorage - Finished Updating Alarm
MTAlarmStorage - Finished Removing Alarm
MTAlarmStorage - Failed Removing Alarm
%{public}@ was snoozed and isn't enabled anywhere. Cancelling.
%{public}@ was snoozed but had relevant changes. Cancelling.
%{public}@ was snoozed but early wake up was confirmed (%{public}@). Cancelling.
%{public}@ setting alarms:%{public}@, sleep alarms: %{public}@, persist: %i, notify %i, override: %i
%{public}@ setting alarms - needs update: %i
%{public}@ has a snooze fire date of %{public}@ and we want to snooze until %{public}@.  Picking later date
%{public}@ has a bed-time snooze fire date of %{public}@ and we want to snooze until %{public}@.  Picking later date
MTAlarmStorage - Finished Snoozing Alarm
%{public}@ couldn't find matching alarm to snooze for %{public}@
MTAlarmStorage - Failed Snoozing Alarm
%{public}@ Setting non-repeating alarm %{public}@ to disabled
%{public}@ dismissed alarm %{public}@ at %{public}@
MTAlarmStorage - Finished Dismissing Alarm
%{public}@ couldn't find matching alarm to dismiss for %{public}@
MTAlarmStorage - Failed Dismissing Alarm
%{public}@ notifying observers for alarm addition
%{public}@ notifying observers for alarm change
%{public}@ notifying observers for alarm removal
%{public}@ notifying observers for alarm snooze
%{public}@ notifying observers for alarm dismissal
%{public}@ notifying observers for alarm fire
%{public}@ notifying observers for next alarm change
MTAlarmStorage - Next Alarm Changed
MTAlarmStorage - Fired Alarm
%{public}@ significant time change detected, rescheduling alarms
%{public}@ resetting firedDate on %{public}@ because it's in the future
%{public}@ resetting dismissedDate on %{public}@ because it's in the future
%{public}@ resetting bedtimeFiredDate on %{public}@ because it's in the future
%{public}@ resetting bedtimeDismissedDate on %{public}@ because it's in the future
%{public}@ resetting lastModifiedDate on %{public}@ because it's in the future
%{public}@ handling notification %{public}@
-----MTAlarmStorage-----
Alarms: %{public}@
Sleep Alarms: %{public}@
%{public}@ removing all alarms (sans sleep)
Start monitoring : Springboard/Carousel start
Cannot start monitoring Springboard/Carousel start because it was already started
Stop monitoring : Springboard/Carousel start
Springboard/Carousel started = %{public}@
%s Handled resolve label for intent: %@ with result: %@
%s Failed to fetch timers for intent: %@, error: %@
%s Handled resolve duration for intent: %@ with result: %@
%s Handled resolve type for intent: %@ with result: %@
%s Attempting to remove conflicting timer: %@
%s Successfully removed conflicting timer: %@
%s Failed to remove conflicting timer: %@ with error: %@
%s Successfully %@ create timer intent %@ with response %@
%s Failed to %@ create timer intent %@ with response: %@, error: %@
[Sound] Converting %{public}@ to UNNotificationSound for category %{public}@
[Sound] Made %@
[Sound] Converting %@ to MTSound
%{public}@ rescheduling %{public}ld alarms
%{public}@ scheduling %{public}ld alarms
%{public}@ scheduling %{public}ld additional alarms
%{public}@ fired last alarm more than %d minutes ago.  Seeing if we have to fire any alarms we missed since %{public}@
%{public}@ the last alarm fire date is ahead of the current date (probably because we went back in time).
%{public}@ fired last alarm less than %d minutes ago.  Seeing if we have to fire any alarms we missed since %{public}@
%{public}@ Setting really old snoozed alarm %{public}@ to disabled
%{public}@ Clearing fire date for really old snoozed alarm %{public}@
%{public}@ Clearing fire date for really old firing alarm %{public}@
%{public}@ scheduling %{public}lu alarms
%{public}@ scheduled alarms: %{public}@
%{public}@ unscheduling %{public}lu alarms
%{public}@ next alarm changed: %{public}@
MTAlarmScheduler - Changing Next Alarm
%{public}@ has %{public}ld scheduled alerts and notifications
%{public}@ Scheduling persistent timer for next alert at %{public}@
%{public}@ Timer will fire %f minutes from now
%{public}@ Timer will fire %f seconds from now
%{public}@ Timer should have fired.  Triggering it now
%{public}@ Unscheduling persistent timer.
%{public}@ Alarm timer fired
%{public}@ Alarm %{public}@ is for non-visible event %{public}@
%{public}@ Alarm %{public}@ doesn't play on this device
MTAlarmScheduler - Firing Alarm
%{public}@ %{public}@ fired (scheduled fire date: %{public}@)
%{public}@ first dismissing related notifications for %{public}@
%{public}@ post notification for %{public}@
%{public}@ not posting notification for %{public}@
%{public}@ no next alarm
%{public}@ Alarm %{public}@ was supposed to fire but is no longer scheduled
%{public}@ Scheduled alarms: %{public}@
%{public}@ Find notifications with current trigger date in range %{public}@
%{public}@ Alarm %{public}@ should actually fire in %f seconds
%{public}@ fired all alarms.  Rescheduling.
%{public}@ Setting last alarm trigger date to %{public}@
%{public}@ received update of alarms %{public}@.  Rescheduling them.
%{public}@ posting snooze countdown notification for snoozed alarm %{public}@
-----MTAlarmScheduler-----
Scheduled Alarms: %{public}@
Not scheduling %{public}@ because sleep schedule is disabled
Not scheduling alarm %{public}@ because it's disabled
Not scheduling bedtime triggers
Failed to reload alarm widget timeline %{public}@, error: %{public}@
%{public}@: didAddAlarms
%{public}@: didRemoveAlarms
%{public}@: didDismissAlarm
%{public}@: didFireAlarm
%{public}@: didSnoozeAlarm
%{public}@: didUpdateAlarms
%{public}@: alarm %{public}@ requested reload bypass
Dropping undecodeable sync data from %{public}@
%{public}@ Processing os_state handler
State: %{public}@
%{public}@ Error serializing state data: %{public}@
%{public}@ Ignoring user bedtime %@.
%{public}@ stopping session with reason %{public}@
%{public}@ User bed time unset.  Using: %@
%{public}@ User bed time was: %@
%{public}@ User wake time was: %@
[Triggers] %{public}@ handleSystemReadyWithAlarmStorage %lu alarms
[Triggers] %{public}@ didAddAlarms: %{public}@
[Triggers] %{public}@ didUpdateAlarms: %{public}@
[Triggers] %{public}@ didChangeNextAlarm: %{public}@
[Triggers] %{public}@ didSnoozeAlarm: %{public}@, snoozeAction: %{public}@
[Triggers] %{public}@ Telling context store and knowledge store that alarm (%{public}@) has snoozed
[Triggers] %{public}@ didDismissAlarm: %{public}@, dismissAction: %{public}@
[Triggers] %{public}@ Telling context store and knowledge store that alarm (%{public}@) has been dismissed
[Triggers] %{public}@ Ignoring dismissAction (%{public}@)
[Triggers] %{public}@ didFireAlarm: %{public}@, triggerType: %{public}@
[Triggers] %{public}@ Telling context store and knowledge store that alarm (%{public}@) has fired
[Triggers] %{public}@ Ignoring triggerType (%{public}@)
[Triggers] %{public}@ didRemoveAlarms: %{public}@
%{public}@ could not save objects to knowledge store with error: %{public}@
[Triggers writeAlarmUpdatedEventForAlarms] set isEnableDisableModification for alarm %@
[Triggers writeAlarmUpdatedEventForAlarms] set isTimeDifferenceModification for alarm %@
[Triggers writeAlarmUpdatedEventForAlarms] could not find old alarm
[Triggers writeAlarmUpdatedEventForAlarms] isTimeDifferenceModification and isEnableDisableModification are false
Did NOT save alarm biome event of type: %@ because device is class c locked
%{public}@ didAddTimers %{public}@
%{public}@ didUpdateTimers %{public}@
%{public}@ didFireTimer %{public}@
%{public}@ Donating intent: %{public}@
Error donating timer create intent: %{public}@
%@ donated successfully
%@ - Cache Miss
%{public}@ - Error getting alarms: %{public}@
%{public}@ posting distributed notification for alarm: %{public}@
%{public}@ posting distributed notification for timer: %{public}@
%{public}@ System is ready.
Restore is done or not needed.
Restore isn't done.
%{public}@ verifying restore is done
%{public}@ has been notified that restore is done (received %{public}@) or not needed.
%{public}@ restore already handled
%{public}@ has been notified of F5 demo
-----MTSystemStateListener-----
Restore done: %{public}d
%{public}@ loading cities, needs city data update: %d
%{public}@ userWentToBed
%{public}@ telling observers user went to bed
%{public}@ userWokeUp
%{public}@ telling observers user woke up
%{public}@ dismissWakeUpAlarm (%{public}@)
%{public}@ shouldScheduleAlarmTimeoutForSecondsFromNow
%{public}@ telling observers about added sleep alarm
%{public}@ telling observers about removed sleep alarm
%{public}@ sleep alarm changes: %@
%{public}@ telling observers about modified sleep alarm
%{public}@ sleep alarm changes unimportant.
%{public}@ sleep alarm dismissed: (%{public}@)
%{public}@ telling observers bedtime reminder fired at %{public}@
%{public}@ telling observers bedtime reminder was confirmed at %{public}@
%{public}@ telling observers bedtime reminder was snoozed until %{public}@
%{public}@ telling observers bedtime was reached at %{public}@
%{public}@ telling observers waketime time was reached at %{public}@
%{public}@ telling observers wake up alarm fired at %{public}@
%{public}@ telling observers wake up alarm was snoozed until %{public}@
%{public}@ telling observers wake up alarm was dismissed at %{public}@ (%{public}@)
%{public}@ telling observers %{public}@ ended at %{public}@
%{public}@ significant time change detected
%{public}@ pairedDevicePreferencesChanged
-----MTSleepCoordinator-----
%@: %d
%s Failed to %@ delete timer intent %@ %@, response: %@
%s Successfully %@ delete timer attribute intent %@ with response %@
%s Deleting%@ timer %@ from timer manager %@
%s Failed to delete%@ timer %@ from timer manager %@ due to error %@
%s Filtering timer for delete to single unnamed timer: %@
%s Failed to %@ set timer attribute intent %@%@
%s Successfully %@ set timer attribute intent %@ with response %@
[Sound] No tone ID is specified in defaults. Fall back to the ToneLibrary default
[Sound] No media item ID is specified in defaults. Switch to the tone type and use the ToneLibrary default
[Sound] Alarm sound from stored defaults (toneID: %@, mediaItemID: %@)
[Sound] No vibration ID is specified in defaults. Use the ToneLibrary default
[Sound] Alarm vibration from stored defaults (vibrationID: %@)
[Sound] Default alarm sound is %@
[Sound] Default timer sound is %@
[Sound] Storing Alarm Defaults (soundTypeKey: %@, toneIDKey: %@, mediaItemIDKey: %@, vibrationIDKey: %@)
[Sound] Storing Timer Defaults (toneIDKey: %@)
%{public}@ Using snapshot quiescing window of %{public}f
%{public}@ skipping migration from old storage, as this device doesn't support the old storage
%{public}@ migrating old alarms and notifications to storage
%{public}@ need to migrate alarms: %{public}@ and sleep alarm: %{public}@
%{public}@ need to migrate %{public}ld alarms and sleep alarm %{public}d
%{public}@ migrated alarm %{public}@ (enabled: %{public}d)
%{public}@ migrated sleep alarm %{public}@ (enabled: %{public}d)
%{public}@ migrated to alarms: %{public}@ and sleep alarm: %{public}@
%{public}@ skipping migration removal, as this device doesn't support the old storage
%{public}@ removing old alarms and notifications from storage
%{public}@ notification cleanup, as this device doesn't support the old storage
%{public}@ cleaning up old notifications
Date before computing earlierst trigger date for %{public}@: %{public}@
Computing next fire date for %{public}@ after %{public}@
Alarm %{public}@ is snoozed:%d, repeats: %d
Alarm %{public}@ override alarm date: %{public}@
Alarm %{public}@ next alarm date: %{public}@
Alarm %{public}@ alarm trigger: %{public}@
%{public}@ has next fire date %{public}@ after %{public}@
Alarm %{public}@ include snooze: %d
Snooze hasn't fired yet (%{public}@) for alert %{public}@
Snooze has already fired (%{public}@) for alert %{public}@
Alarm %{public}@ candidate triggers after sorting: %{public}@
%{public}@ has next trigger %{public}@
%{public}@ %{public}@ after %{public}@ (%{public}@)
%{public}@ %{public}@ %{public}@
%{public}@ %{public}@ %{public}@ is nil
%{public}@ earliest trigger date: %{public}@
[Migration] (1.8) pushAlertsEnabled: %d
[Migration] (1.8) playOptions: %lu
[Migration] (2.6) old enabled: %d, sleepSchedule: %d
[Migration] (2.6) new enabled: %d, sleepSchedule: %d
Initializing %{public}@ with tracker: %{public}@
%{public}@ sessionDidComplete: %{public}@
%{public}@ writing session
%{public}@ notifying %{public}@
%{public}@ session has nothing to write
%{public}@ session is ready to write
%{public}@ session needs additional processing
%{public}@ failed to process session
%{public}@ archiving session
%{public}@ archiveSession: %{public}@
%{public}@ creating %{public}@ directory at %{public}@
%{public}@ failed to create directory at %{public}@
%{public}@ wrote sessions to file %{public}@
%{public}@ failed to write sessions file %{public}@
%{public}@ writeSession: %{public}@
%{public}@ can write session data
%{public}@ no unprocessed in bed intervals to save
%{public}@ device hasn't been unlocked since boot.  Waiting for unlock...
%{public}@ device has been unlocked.  Writing samples to HealthKit
%{public}@ device has been unlocked but no unprocessed intervals to save
%{public}@ caught exception %{public}@ when trying to read sessions
%{public}@ unarchiving failed with error %{public}@
%{public}@ no data found in file %{public}@
%{public}@ failed to remove session data file error %{public}@
%{public}@ doesn't have write access for HKCategoryTypeIdentifierSleepAnalysis
%{public}@ Processing session: %@
%{public}@ Skipping session due to missing bedtime or wake time: %@
%{public}@ Interval is nil.
%{public}@ sleep interval: %f greater than allowed: %f. Will not be used
%{public}@ Timer added - Request snapshot
%{public}@ Timer updated - Request snapshot
%{public}@ Timer removed - Request snapshot
%{public}@ initializing...
%{public}@ broadcasting %{public}@
%{public}@ registering %{public}@ for %{public}@
%{public}@ posting %{public}@ for %{public}@
%{public}@ unregistering %{public}@ for %{public}@
%{public}@ sensitiveUIStateChanged
%{public}@: %{public}@
%{public}@: Returning widget URL: %{public}@
%{public}@: widget override date: %{public}@
Initializing %{public}@...
%{public}@ calling update handler with %{public}@
%{public}@ _handleAlarmsDidChange
%{public}@ setting up notification centers
%{public}@ setting %lu categories for %{public}@
%{public}@ handling responses with %{public}@
%{public}@ firing %{public}@
%{public}@ adding request %{public}@
%{public}@ failed to fire %{public}@ with error %{public}@
%{public}@ fired %{public}@
%{public}@ dismissing related notifications for %{public}@
%{public}@ dismissing any notifications for %{public}@
%{public}@ alarm is nil
%{public}@ dismissing notifications for %{public}@ (%{public}@)
%{public}@ dismissing notifications with identifiers %{public}@
%{public}@ tearDownNotificationsForEventIdentifiers %{public}@
%{public}@ Tearing down %{public}@
%{public}@ not interrupting audio or locking device because we're in a call
%{public}@ interrupting audio
%{public}@ locking device
%{public}@ dismissing %{public}@
%{public}@ timer is nil
%{public}@ removing all delivered notifications.
%{public}@ migrating old timers to storage
%{public}@ removing old timers and notifications from storage
%{public}@ received significant time change notification. Notifying observers
%{public}@ timeZone: %{public}@
Add Alarm
Update Alarm
Dismiss Alarm
Snooze Alarm
Sync Update Alarm
Sync Remove Alarm
Sync Dismiss Alarm
Sync Snooze Alarm
Fire Alarm
Schedule Alarm
Add Timer
Update Timer
Remove Timer
Dismiss Timer
Repeat Timer
Schedule Timer
Fire Timer
Remove Alarm
Sync Add Alarm
%{public}@ executing %{public}@ immediately
%{public}@ scheduling %{public}@
%{public}@ opening transaction for %{public}@
%{public}@ closing transaction for %{public}@
%{public}@ %{public}@ completed
%{public}@ %{public}@ has no tasks
%{public}@ Not taking power assert for %{public}@ because assertion timeout is 0.
%{public}@ - Error getting timers: %{public}@
%{public}@ warming...
%{public}@ setting default duration to %f
%{public}@ Error getting timers:%{public}@
%{public}@ addTimer:%{public}@
MTTimerManager - Adding Timer
%{public}@ updateTimer:%{public}@
MTTimerManager - Updating Timer
%{public}@ removeTimer:%{public}@
MTTimerManager - Removing Timer
%{public}@ dismissTimerWithIdentifier:%{public}@
MTTimerManager - Dismissing Timer
%{public}@ repeatTimerWithIdentifier:%{public}@
MTTimerManager - Repeating Timer
%{public}@ received MTTimerServerReadyNotification
%{public}@ notified timers added: %{public}@
MTTimerManager - Timer Added
%{public}@ notified timers update: %{public}@
MTTimerManager - Timer Updated
%{public}@ notified timers removed: %{public}@
MTTimerManager - Timer Removed
%{public}@ notified timer fired: %{public}@
MTTimerManager - Timer Fired
%{public}@ notified timer dismissed: %{public}@
MTTimerManager - Timer Dismissed
%{public}@ notified next timer changed: %{public}@
MTTimerManager - Next Timer Changed
%s Failed to %@ reset timer intent %@ %@, response: %@
%s Successfully %@ reset timer intent %@ with response %@
%{public}@ checking in...
%{public}@ reconnecting...
%{public}@ updating cache %{public}@
%{public}@ calling connection provider %{public}@
%{public}@ remote block being called on connection provider %{public}@...
%{public}@ error while reconnecting: %{public}@
%{public}@ finish block called for next alarm
%{public}@ finish block called with no next alarm
%{public}@ finish block called with next alarm: %{public}@, error: %{public}@
%{public}@ addAlarm:%{public}@
MTAlarmManager - Adding Alarm
%{public}@ updateAlarm:%{public}@
MTAlarmManager - Updating Alarm
%{public}@ removeAlarm:%{public}@
MTAlarmManager - Removing Alarm
%{public}@ snoozeAlarmWithIdentifier:%{public}@
MTAlarmManager - Snoozing Alarm
%{public}@ dismissAlarmWithIdentifier:%{public}@ (%{public}@)
MTAlarmManager - Dismissing Alarm
%{public}@ received MTAlarmServerReadyNotification
%{public}@ received MTAlarmServerReadyNotification, posting MTAlarmManagerStateReset
%{public}@ notified alarms added: %{public}@
MTAlarmManager - Alarm Added
%{public}@ notified alarms updated: %{public}@
MTAlarmManager - Alarm Updated
%{public}@ notified alarms removed: %{public}@
MTAlarmManager - Alarm Removed
%{public}@ notified alarm snoozed: %{public}@
MTAlarmManager - Alarm Snoozed
%{public}@ notified alarm fired: %{public}@
MTAlarmManager - Alarm Fired
%{public}@ notified alarm dismissed: %{public}@
MTAlarmManager - Alarm Dismissed
%{public}@ notifying next alarm changed: %{public}@
MTAlarmManager - Next Alarm Changed
%{public}@ notified next alarm changed: %{public}@
%{public}@ notified alarms changed: %{public}@
MTAlarmManager - Refreshing Sleep Alarms
MTAlarmManager - Resetting Sleep Alarms Snooze State
%{public}@ handleSystemReady, has active timer session, processing update
%{public}@ handleSystemReady, no active session found
%{public}@ did add timers, starting sessions
%{public}@ did fire timer, finishing session
%{public}@ did update timer, updating session
%{public}@ didUpdateTimers inside serializer
%{public}@ didUpdateTimers inside na each
%{public}@ processTimerUpdate
%{public}@ starting/resuming timer
%{public}@ pausing timer
%{public}@ stopping timer
%{public}@ cannot process timer state change: %{public}@
%{public}@ activating BSServiceConnection
%{public}@ created connection: %{public}@
%{public}@ launch angel connection activated to bundle id: %{public}@
%{public}@ launch angel connection interrupted to bundle id: %{public}@
%{public}@ launch angel connection invalidated to bundle id: %{public}@
%{public}@ calling connection activate
%{public}@ no server connection, rebuilding
%{public}@ server connection created
%{public}@ server not created for connection: %{public}@
%{public}@ resuming timer
%{public}@ resending timer data entry
%{public}@ updating timer to state %lu
%{public}@ error pausing timer from widget listerener: %{public}@
%{public}@ updated timer state to %lu successfully
%s Updating%@ timer %@ from timer manager %@
%s Failed to update%@ timer %@ from timer manager %@ due to error %@
%s Filtering timer for update to single unnamed timer: %@
%s Successfully handled search timers intent: %@ with response %@
%s Failed to handle search timers with intent: %@ due to error %@
%{public}@ Updating keep off until date: %{public}@
%{public}@ We are before keep off until date: %{public}@, turning off %{public}@ if it's on
%{public}@ no sleep alarm, turning off %{public}@ if it's on
%{public}@ sleep schedule for %{public}@ not enabled, turning off %{public}@ if it's on
%{public}@ %{public}@ not enabled for alarm %{public}@, turning off %{public}@ if it's on
%{public}@ waiting 60 seconds before turning on %{public}@ for alarm %{public}@
%{public}@ turning on %{public}@ if it's not on for alarm %{public}@
%{public}@ not in sleep window for alarm %{public}@, turning off %{public}@ if it's on
%{public}@ ignoring user requested off because it's for previous sleep window
%{public}@ Alarm added - Donating intent: %{public}@
Error donating alarm create intent: %{public}@
Error deleting donations for update: %{public}@
%{public}@ Interactions for updated alarm %@ deleted successfully
%{public}@ Updated alarm - Donating intent: %{public}@
%{public}@ Updated Alarm %@ donated successfully
Error donating alarm enable intent: %{public}@
%{public}@ Alarm updated - Donating intent: %{public}@
Error donating alarm update intent: %{public}@
Error deleting donations: %{public}@
Interactions for %@ deleted successfully
%{public}@ loading legacy data
%{public}@ loading user preferences
%{public}@ loading scheduled notifications
%{public}@ found %lu scheduled notifications
%{public}@ migrated from springboard defaults
%{public}@ upgrading alarms
%{public}@ found %ld alarms to upgrade
%{public}@ Old alarms being upgraded: %@
%{public}@ New alarms already present: %@
%{public}@ No alarms found to upgrade
%{public}@ upgrading timer
%{public}@ setting current sound: %@
%{public}@ setting current sound: Stop Playing
%{public}@ Removing AlarmList
%{public}@ Removing SBCountdownTimerSoundIdentifier
%{public}@ Removing SBCountdownTimerTimeIdentifier
%{public}@ Reading alarms from preferences: %@
%{public}@ Invalid alarm found in preferences :: %@
%{public}@ Reading sleep alarm from preferences: %@
%{public}@ reconiling alarms with notifications
%{public}@ found scheduled notification matching alarm %{public}@.  Forcing active for migration.
%{public}@ finished reconiling alarms with notifications
%{public}@ loading timer defaults
%{public}@ purging legacy data
%{public}@ deleting defaults
%{public}@ cancelling notifications
%{public}@ resuming connection
Listener %{public}@ posting lifecycle darwin notification %{public}@
%{public}@ invalidation handler called for connection %{public}@...
Connection %{public}@ not entitled
Connection to server via %{public}@ mach port was interrupted.
Connection to server via %{public}@ mach port was invalidated. Removing server side connection
%{public}@: Adding XPC client: %{public}@
%{public}@: Already has XPC client: %{public}@
%{public}@: Current XPC clients: %{public}@
%{public}@: Removing XPC client: %{public}@
%{public}@ has launched
%{public}@ supports sessions, setting up coordinator
%{public}@ does not support sessions
%{public}@ system is ready
%{public}@ migration finished
Launched: %{public}@
------------------------
%{public}@ removing user defaults
%{public}@ initializing
%{public}@ received %{public}@ notification for %d alarms.
%{public}@ received MTAlarmManagerStateReset notification.
%{public}@ asynchronously reloading alarms
%{public}@ calling reload block
%{public}@ finished reloading
%{public}@ failed reloading: %{public}@
%{public}@ creating sync directory at %{public}@
%{public}@ failed to write create directory at %{public}@
%{public}@ wrote pending changes %{public}@ to file %{public}@
%{public}@ failed to write pending changes to file %{public}@
%{public}@ stored sync version is too old
%{public}@ read pending changes %{public}@ from file %{public}@
%{public}@ got nil pending changes.
%{public}@ caught exception %{public}@ when trying to read pending changes
%{public}@ had no pending changes in file %{public}@
%{public}@ failed to remove bogus pending changes with error %{public}@
[%{public}@] Will enter state %@ with previous state %{public}@
[%{public}@] Did enter state %{public}@ with previous state %{public}@
%{public}@ _handlePrefsChanged: pushAlertsEnabled = %d
%{public}@ unexpected error getting bundle identifier for %{public}@: %{public}@
%{public}@ rescheduling %{public}ld timers
%{public}@ fired last timer more than %d minutes ago.  Seeing if we have to fire any timers we missed since %{public}@
%{public}@ the last timer fire date is ahead of the current date (probably because we went back in time).
%{public}@ fired last timer less than %d minutes ago.  Seeing if we have to fire any timers we missed since %{public}@
%{public}@ Setting really old running timer %{public}@ to stopped
%{public}@ scheduling %{public}lu timers
%{public}@ scheduled timers: %{public}@
%{public}@ unscheduling %{public}lu timers
%{public}@ next timer changed: %{public}@
MTTimerScheduler - Changing Next Timer
%{public}@ Updating persistent timer for %{public}ld scheduled timers
%{public}@ Scheduling persistent timer for next timer at %{public}@
%{public}@ Timer should have fired. Triggering it now
%{public}@ Timer timer fired
MTTimerScheduler - Firing Timer
%{public}@ no next timer
%{public}@ Timer %{public}@ was supposed to fire but is no longer scheduled
%{public}@ Scheduled timers: %{public}@
%{public}@ Timer %{public}@ should actually fire in %f seconds
%{public}@ fired all timers.  Rescheduling.
%{public}@ Setting last timer trigger date to %{public}@
-----MTTimerScheduler-----
Scheduled Timers: %{public}@
%{public}@ Dismissing notifications for timer: %{public}@
Initializing %{public}@ with delegate %{public}@
%{public}@ will enqueue changes %{public}@
%{public}@ ready to enqueue changes
%{public}@ enqueued %{public}@
%{public}@ stopped enqueing at %{public}@
%{public}@ continuing session...
%{public}@ enqueued all %lu changes
%{public}@ has %lu changes to apply
%{public}@ applying %{public}@
%{public}@ skipping invalid change %{public}@
%{public}@ finished applying %lu changes
%{public}@ session %{public}@ wants to reset data store
%{public}@ completed succesfully
%{public}@ failed with error %{public}@
%{public}@ received notification
%{public}@ device has been unlocked
%{public}@ device hasn't been unlocked
%{public}@ posting MTDeviceHasBeenUnlockedForFirstTime notification
%{public}@ Found initial hasBeenUnlockedSinceBoot value of [%d]
-----MTDeviceListener-----
Unlocked since boot: %{public}d
%{public}@ sleep manager initialized
%{public}@ updateSleepAlarms
%{public}@ retrieving sleep schedule model
%{public}@ failed to retrieve sleep schedule model with error: %{public}@
%{public}@ retrieved sleep schedule model: %{public}@
%{public}@ sleep schedule is nil before completing onboarding
%{public}@ sleep schedule is nil after completing onboarding.
%{public}@ mapping sleep model to alarms
%{public}@ setting mapped alarms to storage
%{public}@ completed sleep onboarding check with result: %{public}@, error: %{public}@ 
%{public}@ resetSleepAlarmSnoozeState
%{public}@ needs sleep migration, fetching watchSleepFeaturesEnabled async
%{public}@ failed to get sleep settings, error: %{public}@ 
%{public}@ fetching sleep alarm from health
%{public}@ failed to retrieve upcoming sleep occurrence with error: %{public}@
%{public}@ failed to retrieve sleep schedule with error: %{public}@
%{public}@ no upcoming sleep schedule occurrence
%{public}@ not informing sleep store of alarm dismiss: %{public}@, action: %{public}@
%{public}@ informing sleep store of alarm dismiss: %{public}@, dismiss date:%{public}@ action: %{public}@
%{public}@ sleep store sleepAlarmWasDismissedOnDate completed for alarm id: %{public}@ with status: %d, error: %{public}@
%{public}@ sleep store sleepAlarmWasSnoozedUntilDate completed for alarm id: %{public}@ with status: %d, error: %{public}@
%{public}@ sleep store sleepAlarmWasModified completed with status: %d, error: %{public}@
%{public}@ no active paired device supporting syncing.  Syncing is disabled
%{public}@ this device doesn't support syncing.
%{public}@ active paired device changed.
%{public}@ modified after %{public}@ (%{public}@)
%{public}@ already fired after %{public}@ (%{public}@)
%{public}@ already dismissed after %{public}@ (%{public}@)
Next trigger date %{public}@ is prior to requested date %{public}@
%{public}@ read data version: %f
Illegal fire time class %{public}@
Starting %{public}@
Stopping %{public}@
System is ready: %{public}@.  Will post MTAlarmServerReadyNotification.
System isn't ready...
MTAlarmServer - Adding Alarm
MTAlarmServer - Updating Alarm
MTAlarmServer - Removing Alarm
MTAlarmServer - Snoozing Alarm
MTAlarmServer - Dismissing Alarm
%{public}@ calling to refresh sleep alarms
%{public}@ could not refresh sleep alarms:%{public}@
%{public}@ calling to reset sleep alarms snooze state
%{public}@ could not reset sleep alarms snooze state:%{public}@
-----MTAlarmServer-----
System Ready: %@
Clients: %{public}@
%s Failed to retrieve timers from timer manager %@: %@
%s Failed to resolve timer %@ from timer manager %@ due to error %@
%s Filtering matched timers for allowedTimerStatesForFollowup:%@ to: %@
%s Filtering resolved timer matches to single unnamed timer: %@
%s Found %ld matching timers for multi target timer: %@
%s Disambiguating %ld matching timers for single target timer: %@
%s Found no matching timers but 1 alternate timer: %@ for target timer: %@
%s Found no matching timers for target timer: %@
%s Found matching timer: %@ for target timer: %@
System is ready: %{public}@.  Will post MTTimerServerReadyNotification.
MTTimerServer - Adding Timer
MTTimerServer - Updating Timer
MTTimerServer - Removing Timer
MTTimerServer - Dismissing Timer
MTTimerServer - Repeating Timer
-----MTTimerServer-----
%{public}@ posting CFUserNotification for %{public}@
%{public}@ failed to post CFUserNotification
%{public}@ cancelling CFUserNotification for %{public}@
%{public}@ calling handler for %{public}@
%{public}@ couldn't find callback for notification %{public}@
%{public}@ loading changes
%{public}@ loaded %lu changes
%{public}@ unsupported change type %{public}@
%{public}@ enqueuing action %{public}@
%{public}@ jumping over pending change %{public}@
%{public}@ unable to merge %{public}@ into %{public}@
%{public}@ dequeing changes %{public}@
%{public}@ resolving incoming change %{public}@
%{public}@ incoming change %{public}@ conflicts with pending change %{public}@
%{public}@ dropping conflicting pending change %{public}@
%{public}@ dropping conflicting incoming change %{public}@
%{public}@ retry timer fired (%{public}@)
Initialized %{public}@
%{public}@ resuming service
%{public}@ suspending service
%{public}@ requests sync %{public}@
%{public}@ setHasChangesAvailable
%{public}@ wants to start sending session %{public}@ for request %{public}@
%{public}@ starting sending session %{public}@
%{public}@ not ok to sync yet
%{public}@ starting receiving session %{public}@
%{public}@ finished sending session %{public}@
%{public}@ finished sending session %{public}@ with error %{public}@
%{public}@ finished request %{public}@ with error %{public}@
%{public}@ finished receiving session %{public}@
%{public}@ finished receiving session %{public}@ with error %{public}@
%{public}@ had a conflict between %{public}@ (preferred) and %{public}@ (rejected)
%{public}@ retrying %{public}@
%{public}@ told it's ok to sync from %{public}@.
-[MTPauseResumeTimerIntentHandler resolveTargetTimerForPauseTimer:withCompletion:]
v24@?0@"INTimerResolutionResult"8@"NSError"16
-[MTPauseResumeTimerIntentHandler resolvePauseMultipleForPauseTimer:withCompletion:]
-[MTPauseResumeTimerIntentHandler confirmPauseTimer:completion:]
-[MTPauseResumeTimerIntentHandler handlePauseTimer:completion:]
B16@?0@"<MTTimerIntentSupport>"8
@"NSError"16@?0@"MTMutableTimer"8
v24@?0@"NSArray"8@"NSError"16
-[MTPauseResumeTimerIntentHandler resolveTargetTimerForResumeTimer:withCompletion:]
-[MTPauseResumeTimerIntentHandler resolveResumeMultipleForResumeTimer:withCompletion:]
-[MTPauseResumeTimerIntentHandler confirmResumeTimer:completion:]
-[MTPauseResumeTimerIntentHandler handleResumeTimer:completion:]
-[MTPauseResumeTimerIntentHandler _responseToPauseTimerIntent:withPausedTimers:error:dryRun:]
confirm
handle
due to error %@
confirmed
handled
-[MTPauseResumeTimerIntentHandler _responseToResumeTimerIntent:withResumedTimers:error:dryRun:]
StartDate
EndDate
EndReason
Intervals
MetaData
NeedsAdditionalProcessing
needsAdditionalProcessing: %d
intervals: %lu
<%@ %p start: %@ end: %@ %@ reason: %@ metadata: %@>
AlarmDismissal
WakeTimeReached
ConfigurationChanged
ManualExit
Error
MTSyncSnooze+ProtoBuffer.m
Unsupported class for action %@
Unexpected codeable: %@
data
alarmId
hour
minute
allowsSnooze
isSleepAlarm
bedtimeReminderMinutes
bedtimeHour
bedtimeMinute
daySetting
repeatDay
totalRepeatCount
remainingRepeatCount
title
soundType
sound
soundVolume
soundSongId
lastModified
revision
vibe
AlarmFiredNotificationNamePrefix
AlarmSnoozedNotificationNamePrefix
AlarmEditingProxyID
ALARM_DEFAULT_TITLE
%@::%@
Settings :: ID is wrong type
Settings :: ID is invalid
Settings :: hour is wrong type
Settings :: hour is invalid
Settings :: minute is wrong type
Settings :: minute is invalid
Settings :: day setting is wrong type
Settings :: day setting is invalid
Settings :: settings %@
Settings is nil
Alarms
q24@?0@"Alarm"8@"Alarm"16
x-apple-clock:alarm?id=
Alarm.m
Invalid parameter not satisfying: %@
volumeIsValid
%@ %d:%02d 0x%04X "%@" %@ <%@ #%i> %@
MTXPCConnectionInfo.m
exportedObject: %@ must conform to protocol: %@
<%@:%p %@>
-[MTToggleAlarmIntentHandler handleEnableAlarm:completion:]
v20@?0B8q12
-[MTToggleAlarmIntentHandler handleDisableAlarm:completion:]
v16@?0@"NSError"8
B16@?0@"MTAlarm"8
v16@?0@"NSArray"8
@"MTIntentAlarm"16@?0@"MTAlarm"8
-[MTToggleAlarmIntentHandler handleToggleAlarm:completion:]
Found no alarm to enable/disable
@"NAFuture"16@?0@"NSArray"8
v16@?0@"NSNull"8
com.apple.clock.alarm
cities
@16@?0@"MTCity"8
com.apple.mobiletimer.WorldClockWidget
com.apple.mobiletimer.alarm
alarm update
CHSWidgetConfigurationReader
Class getCHSWidgetConfigurationReaderClass(void)_block_invoke
MTWidgetUtilities.m
Unable to find class %s
v8@?0
void *ChronoServicesLibrary(void)
CHSTimelineController
Class getCHSTimelineControllerClass(void)_block_invoke
B16@?0@"NSString"8
com.apple.language.changed
MTScheduledList.m
Not a mutable ordered collection
v32@?0@"MTScheduledObject"8Q16^B24
q24@?0@"MTScheduledObject"8@"MTScheduledObject"16
B16@?0@"MTScheduledObject"8
@"MTScheduledObject"16@?0@"MTTrigger"8
v16@?0@"MTScheduledObject"8
Alerts: %@, Notifications: %@, Events: %@
MTTimers
MTTimerModifiedDate
MTTimerStorageVersion
com.apple.mobiletimerd.MTTimerStorage
com.apple.MTTimerStorage.access-queue
timerID
Timer already exists!
Can't update timer from %@ to %@
Timer storage: %@
Timer doesn't exist
Timer storage - trying to update timer that does not exist
Timer does not exist!
Timer storage - trying to remove timer that does not exist
Timer storage - trying to dismiss timer that does not exist
Timer storage - trying to repeat timer that does not exist
v16@?0@"<MTTimerObserver>"8
B16@?0@"MTTimer"8
q24@?0@"MTTimer"8@"MTTimer"16
Timers
Timers Last Modified
state
None
fired
modified
toneID: %@, mediaItemID: %@, vibeID: %@, volume: %@
com.apple.MTNotificationManager.serialqueue
com.apple.distnoted.matching
com.apple.notifyd.matching
com.apple.alarm
v16@?0@"NSObject<OS_xpc_object>"8
SchedulingAssertionTimeout
%@%@
com.apple.MTAlarmSyncDataModel
@"MTSyncServiceManager"16@?0@"MTAlarmSyncDataModel"8
AlarmSync.data
Alarm Sync Managers
B16@?0@"MTTrigger"8
MTSleepCoordinatorStateMachineState.m
Unhandled sleep window case!
com.apple.MTPairedDeviceListener.access-queue
v16@?0@"<MTPairedDeviceObserver>"8
C0F3C2C3-0CDE-4DF9-A95A-789AC9A0348B
 with sync capability
%@ %@
alarmProperties
MTXPCConnectionProvider.m
Connection info must be non-nil
Provider XPC connection invalidated
v16@?0@8
@"NAFuture"16@?0@"NSError"8
v24@?0@"NSNumber"8@"NSError"16
@"NAFuture"8@?0
@24@?0@"NSXPCConnection"8@?<v@?@"NSError">16
@"NAFuture"16@?0@"NSXPCConnection"8
sleep mode
MTAlarmCategory
MTAlarmNoSnoozeCategory
MTBedtimeAlarmCategory
MTWakeUpAlarmCategory
MTWakeUpAlarmNoSnoozeCategory
AlarmSnoozeCountdown
MTAlarmDismissAction
MTAlarmSnoozeAction
MTAlarmGoToBedAction
MTBedtimeAlarm
MTSnoozeCountdown
MTScheduledFireDate
MTSnoozeable
MTPlaysOn
MTPresentGoodMorningAlert
MTDismissGoodMorningAlert
com.apple.mobiletimer
com.apple.mobiletimer.user-preferences-and-local-notifications-changed
com.apple.mobiletimer.user-preferences-changed
com.apple.mobiletimer.local-notifications-changed
com.apple.mobiletimer.user-preferences-dirty
com.apple.MobileTimer.critical
MTCriticalEventMessage
@"NSDictionary"8@?0
com.apple.MobileTimer.numberOfAlarms
com.apple.MobileTimer.numberOfActiveAlarms
com.apple.MobileTimer.numberOfRepeatingAlarms
com.apple.MobileTimer.numberOfNamedAlarms
com.apple.MobileTimer.alarmNameLength
com.apple.MobileTimer.Clock.Alarm.adds
com.apple.MobileTimer.Clock.Alarm.removes
com.apple.MobileTimer.Clock.Alarm.activations
com.apple.MobileTimer.Clock.Alarm.deactivations
com.apple.MobileTimer.SleepAlarm.Onboarding.start-views
com.apple.MobileTimer.SleepAlarm.Onboarding.end-views
com.apple.MobileTimer.SleepAlarm.views
com.apple.MobileTimer.SleepAlarm.WakeTime.edits
com.apple.MobileTimer.SleepAlarm.Bedtime.edits
com.apple.MobileTimer.SleepAlarm.activations
com.apple.MobileTimer.SleepAlarm.deactivations
com.apple.MobileTimer.SleepAlarm.History.views
com.apple.MobileTimer.SleepAlarm.sleepalarm
com.apple.MobileTimer.SleepAlarm.wakealarm
com.apple.MobileTimer.SleepAlarm.cycles
com.apple.MobileTimer.SleepAlarm.enabled
com.apple.MobileTimer.SleepAlarm.enabled-days
com.apple.MobileTimer.SleepAlarm.active-days
com.apple.MobileTimer.SleepAlarm.duration
com.apple.MobileTimer.SleepAlarm.enabled-duration
com.apple.MobileTimer.WorldClock.adds
com.apple.MobileTimer.WorldClock.removes
com.apple.MobileTimer.Stopwatch.starts
com.apple.MobileTimer.Stopwatch.resets
com.apple.MobileTimer.Stopwatch.laps
com.apple.MobileTimer.Stopwatch.pauses
com.apple.MobileTimer.Timer.starts
com.apple.MobileTimer.Timer.pauses
com.apple.MobileTimer.Timer.resumes
com.apple.MobileTimer.Timer.cancels
com.apple.MobileTimer.MultipleTimers.running
multipleTimersCount
com.apple.MobileTimer.Siri.Alarm.adds
com.apple.MobileTimer.Siri.Alarm.removes
com.apple.MobileTimer.Siri.Alarm.searches
com.apple.MobileTimer.Siri.Alarm.activations
com.apple.MobileTimer.Siri.Alarm.deactivations
com.apple.MobileTimer.Siri.Alarm.snoozes
com.apple.MobileTimer.Siri.Alarm.dismisses
com.apple.MobileTimer.Siri.Timer.searches
com.apple.MobileTimer.Siri.Timer.sets
com.apple.MobileTimer.Siri.Timer.cancels
com.apple.MobileTimer.Siri.Timer.pauses
com.apple.MobileTimer.Siri.Timer.resumes
com.apple.MobileTimer.Siri.Timer.dismisses
com.apple.MobileTimer.Sync.Error
com.apple.MobileTimer.Sync.success
com.apple.MobileTimer.Sync.failure
com.apple.MobileTimer.Alarm.add
com.apple.MobileTimer.Alarm.delete
com.apple.MobileTimer.Alarm.update
com.apple.MobileTimer.SleepAlarm.add
com.apple.MobileTimer.SleepAlarm.delete
com.apple.MobileTimer.SleepAlarm.update
com.apple.MobileTimer.Alarm.dismiss
com.apple.MobileTimer.Alarm.snooze
com.apple.MobileTimer.Alarm.snooze.stop
com.apple.MobileTimer.Bedtime.dismiss
com.apple.MobileTimer.Bedtime.snooze
com.apple.MobileTimer.Bedtime.confirm
com.apple.MobileTimer.WakeUp.dismiss
com.apple.MobileTimer.WakeUp.snooze
com.apple.MobileTimer.Timer.add
com.apple.MobileTimer.Timer.delete
com.apple.MobileTimer.Timer.update
com.apple.MobileTimer.Timer.dismiss
com.apple.MobileTimer.Timer.repeat
HHmmssSS
HHmmss
mmssSS
mmss
HH%@
%1$@
%2$@
%3$@
%4$@
MTKeepDndOffUntilDate
com.apple.mobiletimer.bedtime-mode
com.apple.mobiletimer.sleep-mode.automatic
v20@?0B8@"NSError"12
removed
isEnabled
isUserRequested
MTDateFormattingLocaleDidChangeNotification
com.apple.MTSyncServiceManager.serialqueue
Sync Service
Sync Status
Pending Changes
@16@?0@"MTIntentRepeatDay"8
Unexpected alert for go to bed action
Unexpected action type: %ld
com.apple.mobiletimerd.reset
MTAlarms
MTSleepAlarm
MTSleepAlarms
MTAlarmModifiedDate
MTAlarmStorageVersion
MTAlarmSnoozeDuration
MTBedtimeSnoozeDuration
com.apple.mobiletimerd.MTAlarmStorage
com.apple.mobiletimer.bedtime.migration.done
com.apple.MTAlarmStorage.access-queue
BED_TIME
Localizable
MTDefaultTimerVibrationID
alarmID
@"<NSCopying>"16@?0@"MTAlarm"8
@"MTAlarm"16@?0@"MTAlarm"8
@16@?0@"MTAlarm"8
Alarm already exists!
Alarm does not exist!
Alarm storage - trying to update alarm that does not exist
Alarm storage - trying to remove alarm that does not exist
v16@?0@"MTAlarm"8
Alarm storage - trying to snooze alarm that does not exist
Alarm storage - trying to dismiss alarm that does not exist
v16@?0@"<MTAlarmObserver>"8
Sleep Alarms
Alarms Last Modified
enabled
firing
snoozed
BMDiscoverabilitySignalEvent
Class getBMDiscoverabilitySignalEventClass(void)_block_invoke
MTAlarmStorage.m
void *BiomeStreamsLibrary(void)
BMStreams
Class getBMStreamsClass(void)_block_invoke
Serial MTSpringboardStartMonitor queue
v12@?0i8
v16@?0@"<MTSpringboardStartMonitorObserver>"8
com.apple.springboard.finishedstartup
-[MTCreateTimerIntentHandler resolveLabelForCreateTimer:withCompletion:]
-[MTCreateTimerIntentHandler resolveLabelForCreateTimer:withCompletion:]_block_invoke_2
-[MTCreateTimerIntentHandler resolveLabelForCreateTimer:withCompletion:]_block_invoke
v12@?0B8
-[MTCreateTimerIntentHandler resolveDurationForCreateTimer:withCompletion:]
-[MTCreateTimerIntentHandler resolveTypeForCreateTimer:withCompletion:]
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
-[MTCreateTimerIntentHandler confirmCreateTimer:completion:]
-[MTCreateTimerIntentHandler handleCreateTimer:completion:]
v12@?0I8
@"NAFuture"16@?0@"NSNull"8
B16@?0@"NSObject<MTTimerIntentSupport>"8
-[MTCreateTimerIntentHandler _createTimerWithIntent:dryRun:completion:]_block_invoke
v16@?0@"NSObject<MTTimerIntentSupport>"8
v28@?0@"INCreateTimerIntent"8B16@?<v@?@"INCreateTimerIntentResponse">20
-[MTCreateTimerIntentHandler _responseToCreateTimerIntent:withCreatedTimer:error:dryRun:]
B32@?0@"NSObject<MTTimerIntentSupport>"8Q16^B24
void _MRMediaRemoteGetNowPlayingApplicationPlaybackState(__strong dispatch_queue_t, void (^__strong)(MRPlaybackState))
MTCreateTimerIntentHandler.m
MRMediaRemoteGetNowPlayingApplicationPlaybackState
void *MediaRemoteLibrary(void)
toneID
mediaID
vibeID
MTAlertSoundDuration
<%@:%p alertTopic: %@, toneID: %@, mediaItemID: %llu, vibeID: %@, volume: %@
MTAlarmLastTriggerDate
com.apple.MTAlarmScheduler.alarm-event
com.apple.MTAlarmTask.fire
com.apple.MTAlarmTask.reschedule
com.apple.MTAlarmScheduler.access-queue
v16@?0@?<v@?>8
MTAlarmScheduler
Scheduled alarms
alarm
<%@:%p %@, Trigger: %@>
com.apple.MTExponentialBackOffTimer.serial
<%@: %p backoff: %ld>
com.apple.mobiletimerd.MTWidgetProvider
Widget Provider - failed to reload alarm widget timeline
MTCompanionSyncSerializer.m
%@ not protobuffer serializable
Create
Update
Enable
Disable
Delete
time
label
identifier
repeat
com.apple.mobiletimer-framework.MobileTimerIntents
v16@?0q8
Alarm
CSSearchableIndex
Class getCSSearchableIndexClass(void)_block_invoke
MTAlarmIntent.m
void *CoreSpotlightLibrary(void)
com.apple.mobiletimerd.diagnostics
com.apple.mobiletimerd
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
Unexpected nil userBedtime
Wake times don't agree
NSString *getHKMetadataKeyTimeZone(void)
MTTimeInBedSessionTracker.m
HKMetadataKeyTimeZone
void *HealthKitLibrary(void)
NSString *get_HKPrivateMetadataKeySleepAlarmUserSetBedtime(void)
_HKPrivateMetadataKeySleepAlarmUserSetBedtime
NSString *get_HKPrivateMetadataKeySleepAlarmUserWakeTime(void)
_HKPrivateMetadataKeySleepAlarmUserWakeTime
ALARM_DETAIL_EVERY_MONDAY
ALARM_DETAIL_EVERY_TUESDAY
ALARM_DETAIL_EVERY_WEDNESDAY
ALARM_DETAIL_EVERY_THURSDAY
ALARM_DETAIL_EVERY_FRIDAY
ALARM_DETAIL_EVERY_SATURDAY
ALARM_DETAIL_EVERY_SUNDAY
ALARM_DETAIL_EVERY_DAY
ALARM_DETAIL_WEEKDAYS
ALARM_DETAIL_WEEKENDS
ALARM_SHORT_MONDAY
ALARM_SHORT_TUESDAY
ALARM_SHORT_WEDNESDAY
ALARM_SHORT_THURSDAY
ALARM_SHORT_FRIDAY
ALARM_SHORT_SATURDAY
ALARM_SHORT_SUNDAY
@"NSString"24@?0@"NSString"8@"NSString"16
@"NSString"32@?0@"NSString"8@"NSString"16@"NSString"24
ALARM_REPEAT_NEVER
ALARM_DETAIL_REPEAT_NEVER
ALARM_EVERY_MONDAY
ALARM_MONDAY
ALARM_EVERY_TUESDAY
ALARM_TUESDAY
ALARM_EVERY_WEDNESDAY
ALARM_WEDNESDAY
ALARM_EVERY_THURSDAY
ALARM_THURSDAY
ALARM_EVERY_FRIDAY
ALARM_FRIDAY
ALARM_EVERY_SATURDAY
ALARM_SATURDAY
ALARM_EVERY_SUNDAY
ALARM_SUNDAY
ALARM_EVERY_DAY
ALARM_WEEKDAYS
ALARM_WEEKENDS
com.apple.mobiletimerd.MTCoreDuetMonitor
transition
com.apple.MTTimerIntentDonor.serialqueue
com.apple.clock.timer
duration
v40@?0@"NSArray"8@"NSArray"16@"MTAlarm"24@"NSError"32
Restore done
MTTimerDataVersion
MTTimerID
MTTimerState
MTTimerDuration
MTTimerFireTimerClass
MTTimerFireTime
MTTimerTitle
MTTimerLastModifiedDate
MTTimerFiredDate
MTTimerDismissedDate
MTTimerSound
MTTimerSiriContext
v32@?0@"ALCity"8Q16^B24
DeviceClass
iPad
PerformanceTestingEnabled
/tmp/WorldClock-performance_test.plist
cityAddTest
timestamp
citySent
q24@?0@"ALCity"8@"ALCity"16
NPSManager
Class getNPSManagerClass(void)_block_invoke
WorldClockManager.m
void *NanoPreferencesSyncLibrary(void)
com.apple.MTSleepCoordinator.wakeupalarmtimeout-event
MTSleepTimeOutMinutesKey
com.apple.MTSleepCoordinator.access-queue
@"NAFuture"16@?0@8
v16@?0@"<MTSleepObserver>"8
sleep session
MTSleepCoordinator
isUserAsleep
com.apple.MTOSTransaction.serial
MTDeleteTimerIntentHandlerErrorDomain
-[MTDeleteTimerIntentHandler resolveTargetTimerForDeleteTimer:withCompletion:]
-[MTDeleteTimerIntentHandler resolveDeleteMultipleForDeleteTimer:withCompletion:]
-[MTDeleteTimerIntentHandler confirmDeleteTimer:completion:]
-[MTDeleteTimerIntentHandler handleDeleteTimer:completion:]
-[MTDeleteTimerIntentHandler _responseToDeleteTimerIntent:withDeletedTimers:error:dryRun:]
-[MTDeleteTimerIntentHandler _deleteTimer:multiple:dryRun:completion:]
 (dry-run)
-[MTDeleteTimerIntentHandler _deleteTimer:multiple:dryRun:completion:]_block_invoke
@16@?0@"NSObject<MTTimerIntentSupport>"8
Failed to delete%@ timer %@ from timer manager %@ due to ambiguity between timers %@
-[MTSetTimerAttributeIntentHandler handleSetTimerAttribute:completion:]
v24@?0@"INTimer"8@"NSError"16
-[MTSetTimerAttributeIntentHandler confirmSetTimerAttribute:completion:]
-[MTSetTimerAttributeIntentHandler resolveToDurationForSetTimerAttribute:withCompletion:]
-[MTSetTimerAttributeIntentHandler resolveTargetTimerForSetTimerAttribute:withCompletion:]
-[MTSetTimerAttributeIntentHandler _responseToSetTimerAttributeIntent:withUpdatedTimer:error:dryRun:]
Failed to update%@ timer %@ from timer manager %@ - renaming from %@ to %@ is not supported.
Failed to update%@ timer %@ from timer manager %@ due to invalid duration %f
snoozeAction
dismissAction
syncDate
syncID
syncVersion
MTSoundType
MTSoundToneID
MTSoundMediaItemID
MTSoundVibrationID
MTSoundVolume
MTDefaultAlarmSoundType
MTDefaultAlarmToneID
MTDefaultAlarmMediaItemID
MTDefaultAlarmVibrationID
MTDefaultTimerToneID
Unexpected MTSoundCategory: %lu
Sound must be nonnull!
Timer
GoToSleep
WakeUp
Generic
Sound type integer value out of bounds: %lu
Unexpected sound type: %lu
Timers only support tones
<%@:%p toneID: %@, mediaItemID: %@, vibeID: %@, volume: %@
v24@?0q8@"NSError"16
citiesLastModified
DefaultCityAdded
LatestUpdateVersion
<%@:%p %@ %@ dismissDate: %@ (%@)>
com.apple.mobiletimer.alarmintent
SnapshotWindow
v16@?0@"Alarm"8
com.apple.mobiletimer.MTAlarmDidFireNotification
MTAlarmID
com.apple.mobiletimer.mode.sleep
Every Day
Weekdays
Weekends
q24@?0@"MTAlarm"8@"MTAlarm"16
apple-internal-install
q24@?0@"MTTrigger"8@"MTTrigger"16
v24@?0@"NSString"8@"NSDate"16
dismissed
bedtime dismissed
bedtime fired
keep off until
overriden for date
MTAlarm.m
Must be a single time override
sleep
month
year
schedule
isSnoozed
isFiring
siriContext
bypassReload
DismissAlarm
DismissGoToBedNotification
ConfirmGoToBedNotification
DismissWakeUpAlarm
DismissSnoozeCountdownNotification
DismissWakeUpAlarmTimeOut
AlarmConfigurationChanged
WakeUpAlarmConfigurationChanged
SnoozeAlarm
SnoozeWakeUpAlarm
SnoozeGoToBedNotification
MTUnprocessedSessions
SleepSession.data
v16@?0@"<MTSleepSession>"8
v24@?0@8@"NSError"16
@"<MTSleepSession>"16@?0@"<MTSleepSession>"8
HKHealthStore
Class getHKHealthStoreClass(void)_block_invoke
MTSleepSessionManager.m
HKObjectType
Class getHKObjectTypeClass(void)_block_invoke
HKCategoryTypeIdentifier getHKCategoryTypeIdentifierSleepAnalysis(void)
HKCategoryTypeIdentifierSleepAnalysis
HKCategorySample
Class getHKCategorySampleClass(void)_block_invoke
HKDevice
Class getHKDeviceClass(void)_block_invoke
com.apple.MTMetrics.serialqueue
%@.%@
com.apple.mobiletimer-framework.preferences-and-notifications-changed
com.apple.mobiletimer-framework.preferences-changed
com.apple.mobiletimer-framework.local-notifications-changed
bundleIdentifier
B16@?0q8
B16@?0d8
com.apple.mobiletimer.MTUserDefaults
Distributed
ReleaseType
Vendor
v16@?0@"<MTSensitiveUIStateObserver>"8
com.apple.NanoAlarm
com.apple.private.NanoTimer
com.apple.private.OldNanoTimer
assistant_service
ForceClock
@"NSDate"8@?0
MTUtilities.m
date can't be nil
en_US
@"NSDate"16@?0@"NSDate"8
clock-worldclock
clock-alarm
clock-sleep-alarm
clock-stopwatch
clock-timer-running
clock-timer
v16@?0@"MTTimer"8
@"NAFuture"16@?0@"NSString"8
%@:%@
default
list
lastTimer
com.apple.%@.serial
HOURS_MINUTES_AHEAD
HOURS_MINUTES_BEHIND
DAY_FORMAT_HOURS_MINUTES_AHEAD
DAY_FORMAT_HOURS_MINUTES_BEHIND
DAY_FORMAT_HOURS_AHEAD
HOURS_AHEAD
DAY_FORMAT_MINUTES_AHEAD
DAY_FORMAT_MINUTES_BEHIND
MINUTES_AHEAD
MINUTES_BEHIND
DAY_FORMAT_ONE_HOUR_AHEAD
DAY_FORMAT_ONE_HOUR_BEHIND
ONE_HOUR_AHEAD
ONE_HOUR_BEHIND
DAY_FORMAT_HOURS_BEHIND
HOURS_BEHIND
_SPACE
clock-worldclock:default
yyyy:MM:dd:HH:mm
type
city
languageCode
timeZone
countryCode
name
unlocalizedName
countryName
unlocalizedCountryName
America/Los_Angeles
Cupertino
%@ %@, %@ || %@ %@ || %@, %@
x-apple-clock:world-clock?
alcid=%d
ccid=
[%@] title: [%@] fireDate: [%@] identifier: [%@] clockAppSectionURL: [%@]
com.apple.MTNextAlarmManager.accessqueue
MTBedtimeExpirationDuration
v16@?0@"UNUserNotificationCenter"8
ALARM_STOP_ACTION
ALARM_SNOOZE_ACTION
stop.circle
SNOOZE_STOP
TIMER_STOP_ACTION
TIMER_REPEAT_ACTION
BEDTIME_GO_TO_BED_ACTION
BEDTIME_SNOOZE_ACTION
Failed to post alarm user notifiation
B16@?0@"UNNotification"8
@16@?0@"UNNotification"8
Failed to post timer user notifiation
TIME_FOR_BED_TITLE
TIME_FOR_BED_ALARM_ON_MESSAGE_FORMAT
_SINGULAR
TIME_FOR_BED_ALARM_OFF_MESSAGE
ALARM_SNOOZING_TITLE
Unexpected trigger type %ld for scheduled alarm %@
Unexpected trigger type %ld for scheduled timer %@
TUCallCenter
Class getTUCallCenterClass(void)_block_invoke
MTUserNotificationCenter.m
void *TelephonyUtilitiesLibrary(void)
Boolean MTMRMediaRemoteSendCommand(MRMediaRemoteCommand, CFDictionaryRef)
MRMediaRemoteSendCommand
MTTimerCategory
MTTimerDismissAction
MTTimerRepeatAction
com.apple.mobiletimer.start-timer
com.apple.mobiletimer.stop-timer
MTTimerUserTitle
fromObject
toObject
<%@:%p %@ = %@ (was %@)>
v16@?0@"MTChange"8
@24@?0@"NSString"8@"MTChange"16
<%@:%p %@ >
SignificantTimeChange
com.apple.MTTimeListener.access-queue
v16@?0@"<MTTimeObserver>"8
MobileTimer
Agent
Sync
Sleep
Activity
com.apple.mobiletimer.logging
dismissDate
-[MTCreateSingleTimerIntentHandler resolveLabelForCreateTimer:withCompletion:]
-[MTCreateSingleTimerIntentHandler resolveDurationForCreateTimer:withCompletion:]
-[MTCreateSingleTimerIntentHandler resolveDurationForCreateTimer:withCompletion:]_block_invoke
-[MTCreateSingleTimerIntentHandler confirmCreateTimer:completion:]
-[MTCreateSingleTimerIntentHandler handleCreateTimer:completion:]
-[MTCreateSingleTimerIntentHandler _responseToCreateTimerIntent:withCreatedTimer:error:dryRun:]
com.apple.mobiletimer-framework.preferences-and-notifications-changed-externally
com.apple.mobiletimer-framework.preferences-changed-externally
com.apple.mobiletimer-framework.local-notifications-changed-externally
com.apple.MTGCDTimer
kMTScheduleTaskOSTransactionId
kMTScheduleTaskGroupOSTransactionId
<%@:%p %@ delay:%f>
<%@:%p tasks: %@>
v32@?0@"NSArray"8@"MTTimer"16@"NSError"24
MTTimerTimeInterval
MTTimerTimeDate
MTTimerManagerTimersAdded
MTTimerManagerTimersUpdated
MTTimerManagerTimersRemoved
MTTimerManagerTimerFired
MTTimerManagerFiringTimerChanged
MTTimerManagerFiringTimerDismissed
MTTimerManagerNextTimerChanged
MTTimerManagerTimersChanged
MTTimerManagerStateReset
MTTimerManagerPreferencesChanged
NextTimer
com.apple.mobiletimerd.MTTimerManager
@"MTXPCConnectionProvider"16@?0@"MTTimerManager"8
v16@?0@"<MTTimerServer>"8
v20@?0@?<v@?@"NSArray"@"MTTimer"@"NSError">8B16
Timer is running but doesn't have a next trigger.
v32@?0@"MTTimer"8Q16^B24
MTTimerManager.m
State can't be unknown
@"NAFuture"16@?0@"MTTimer"8
%@ cannot restart a timer (%@) that isn't stopped.
Start timer isn't finished, but expected it to be
v24@?0@"NSNull"8@"NSError"16
Update Timer isn't finished, but expected it to be
-[MTResetTimerIntentHandler resolveTargetTimerForResetTimer:withCompletion:]
-[MTResetTimerIntentHandler confirmResetTimer:completion:]
-[MTResetTimerIntentHandler handleResetTimer:completion:]
-[MTResetTimerIntentHandler _responseToResetTimerIntent:withResetTimers:error:dryRun:]
MTObserverStore.m
observer cannot be nil
Date
UserVisible
MTAlarmManagerAlarmsAdded
MTAlarmManagerAlarmsUpdated
MTAlarmManagerAlarmsRemoved
MTAlarmManagerNextAlarmChanged
MTAlarmManagerAlarmFired
MTAlarmManagerFiringAlarmDismissed
MTAlarmManagerFiringAlarmChanged
MTAlarmManagerAlarmsChanged
MTAlarmManagerStateReset
NextAlarm
com.apple.mobiletimer.MTAlarmManager
.siri_data_changed
com.apple.alarm.label
@"MTXPCConnectionProvider"16@?0@"MTAlarmManager"8
v16@?0@"<MTAlarmServer>"8
v20@?0@?<v@?@"NSArray"@"NSArray"@"MTAlarm"@"NSError">8B16
@"NSArray"40@?0@"NSArray"8@"NSArray"16@"MTAlarm"24@"NSError"32
MTAlarmManager.m
Expected alarm future to be finished.
Expected next alarm future to be finished.
B32@?0@"MTAlarm"8Q16^B24
v24@?0@"MTAlarm"8@"NSError"16
@"NAFuture"16@?0@"MTAlarm"8
com.apple.MTTimerSessionsCoordinator.serialqueue
com.apple.mobiletimer.launchAngelConnection
com.apple.ClockAngel.mach
com.apple.ClockAngel-service
Clock Angel Connection
v16@?0@"BSServiceConnection<BSServiceConnectionContext>"8
v16@?0@"<BSServiceConnectionConfiguring>"8
com.apple.common
BasicAngelIPC
MTWidgetEventListener
MTSessionsManager
Class getMTSessionsManagerClass(void)_block_invoke
MTTimerSessionsCoordinator.m
void *MobileTimerSupportLibrary(void)
en_US_POSIX
yyyy-MM-dd-HH-mm
DND_BEDTIME_MORNING_GREETING
DND_BEDTIME_MORNING_GREETING_LOWERCASE
DND_BEDTIME_AFTERNOON_GREETING
DND_BEDTIME_AFTERNOON_GREETING_LOWERCASE
DND_BEDTIME_EVENING_GREETING
DND_BEDTIME_EVENING_GREETING_LOWERCASE
com.apple.mobiletimer-framework
Localizable_Burrito
alarms
-[MTUpdateTimerIntentHandler _updateTimer:dryRun:allowMultiple:excludeStoppedTimers:filterBlock:updateBlock:completion:]
-[MTUpdateTimerIntentHandler _updateTimer:dryRun:allowMultiple:excludeStoppedTimers:filterBlock:updateBlock:completion:]_block_invoke
B32@?0@"<MTTimerIntentSupport>"8Q16^B24
Failed to update%@ timer %@ from timer manager %@ due to ambiguity between timers %@
v32@?0@"NSObject<MTTiming>"8Q16^B24
-[MTSearchTimerIntentHandler handleSearchForTimers:completion:]
@16@?0@"<MTTimerIntentSupport>"8
-[MTSearchTimerIntentHandler handleSearchForTimers:completion:]_block_invoke_2
-[MTSearchTimerIntentHandler handleSearchForTimers:completion:]_block_invoke
com.apple.MTAlarmIntentDonor.access-queue
com.apple.MTLegacyManager
com.apple.springboard
UpgradeAttempted
SBCountdownTimerSoundIdentifier
AlarmList
allows snooze
sound path
setting
active
SBCountdownTimerTimeIdentifier
timerSleepiPod
timerSound
SleepAlarm
TIMER_INTERVAL
AlarmsLastModified
void MTGSSendAppPreferencesChanged(CFStringRef, CFStringRef)
MTLegacyManager.m
GSSendAppPreferencesChanged
void *GraphicsServicesLibrary(void)
MTXPCConnectionListenerProvider.m
com.apple.MTXPCConnectionListenerProvider.serialqueue
Listener XPC Connection interrupted
v16@?0@"MTXPCClientInfo"8
com.apple.MTAgent
Launched
v16@?0@"NSObject<MTAlarmDataSourceObserver>"8
v16@?0@"NSNotification"8
MTSyncStoragePendingChanges
MTSyncStorageVersion
com.apple.MTSyncStore.archive-queue
; currentState: %@>
MTPairedDevicePreferencesChanged
BulletinDistributorBBSectionsDidChangeNotification
com.apple.bulletinboard.apps
BPSNanoBulletinShowsAlerts
com.apple.MobileTimer.MTApplicationWorkspaceObserverQueue
v32@?0@"NSString"8@"NSHashTable"16^B24
MTTimerLastTriggerDate
com.apple.MTTimerScheduler.timer-event
com.apple.MTTimerTask.fire
com.apple.MTTimerTask.reschedule
com.apple.MTTimerScheduler.access-queue
Scheduled timers
MTTimerScheduler
id  _Nullable NAAssertCast(Class  _Nonnull __unsafe_unretained, id  _Nonnull __strong)
NSObject+NAAdditions.h
Expected class of %@ but was %@
<%@: %p %@ >
SEND
RECV
com.apple.private.mobiletimerd
com.apple.MobileTimer.alarmserver
com.apple.MobileTimer.timerserver
com.apple.mobile.keybagd.first_unlock
MTDeviceHasBeenUnlockedForFirstTime
com.apple.MTDeviceUtilities.work-queue
Unlocked since boot
MTSleepManagerSettingsDidChange
MTNeedsSleepMigration
@"HKSPSleepStore"24@?0@"NSString"8@"HKHealthStore"16
@"HKSPFeatureAvailabilityStore"16@?0@"HKSPSleepStore"8
%@-updateSleepAlarms
@16@?0@"HKSPSleepScheduleOccurrence"8
v16@?0@"MTMutableAlarm"8
v24@?0@"HKSPSleepSettings"8@"NSError"16
MTSleepManager.m
HKFeatureIdentifier getHKFeatureIdentifierSleepCoaching(void)
HKFeatureIdentifierSleepCoaching
watch-companion
CURRENT_TIMER
MTTimerDefaultDuration
com.apple.mobiletimer.MTTimerDidFireNotification
x-apple-clock:timer?id=
TIMER_DEFAULT_TITLE
<%@:%p TimerID: %@, Title: %@, state:%@, duration:%d, firedDate: %@, dismissedDate: %@, sound: %@, siriContext: %@>
Stopped
Running
Paused
Unknown
Timer duration can only be modified while stopped.
Timer duration must be positive.
Unexpected timer state: %ld
com.apple.MTAlarmServer.wakeup
com.apple.MTAlarmServer.ready
com.apple.mobiletimerd.MTAlarmServer
com.apple.MTAlarmServer.ready-queue
v16@?0@"<MTAlarmClient>"8
Alarm system ready
Alarm clients
processName
MTTimerIntentHandlerErrorDomain
v32@?0@"<MTTimerIntentSupport>"8Q16^B24
-[MTTimerIntentHandler _matchTimersFromIntentsTimer:excludeStoppedTimers:completion:]_block_invoke
-[MTTimerIntentHandler _genericallyResolveTargetTimer:multiple:allowedTimerStatesForFollowup:completion:]_block_invoke
-[MTTimerIntentHandler _genericallyResolveTargetTimer:multiple:allowedTimerStatesForFollowup:completion:]_block_invoke_2
q24@?0@"NSObject<MTTimerIntentSupport>"8@"NSObject<MTTimerIntentSupport>"16
com.apple.MTCompanionSyncRequest.serialqueue
v16@?0@?<v@?@"NSError">8
DELTA
MTTriggerType
MTTriggerDate
Alert
Snoozed
Go To Bed
Snoozed Go To Bed
Wake Up
Snoozed Wake Up
Snooze Countdown
Bedtime
Waketime
trigger
date
isPastOverride
com.apple.MTTimerServer.wakeup
com.apple.MTTimerServer.ready
com.apple.mobiletimerd.MTTimerServer
com.apple.MTTimerServer.ready-queue
v16@?0@"<MTTimerClient>"8
Timer system ready
Timer clients
<%@:%p %@ snoozeDate: %@ (%@)>
snoozeDate
MTSyncDismiss+ProtoBuffer.m
MTAlarmDataVersion
MTAlarmHour
MTAlarmMinute
MTAlarmBedtimeHour
MTAlarmBedtimeMinute
MTAlarmBedtimeReminderMinutes
MTAlarmBedtimeDoNotDisturb
MTAlarmBedtimeDoNotDisturbOptions
MTAlarmSleepModeDetectionKey
MTAlarmSleepTrackingKey
MTAlarmDay
MTAlarmMonth
MTAlarmYear
MTAlarmOverriddenForDate
MTAlarmTimeInBedTrackingKey
MTAlarmSleepScheduleKey
MTAlarmBedtimeForSleepTracking
MTAlarmWakeupForSleepTracking
MTAlarmRepeatSchedule
MTAlarmEnabled
MTAlarmActive
MTAlarmPlayOptions
MTAlarmFiring
MTAlarmIsSleep
MTAlarmAllowsSnooze
MTAlarmSnoozeFireDate
MTAlarmBedtimeSnoozeFireDate
MTAlarmFireDate
MTAlarmDismissDate
MTAlarmLastModifiedDate
MTAlarmBedtimeFireDate
MTAlarmBedtimeDismissDate
MTAlarmBedtimeDismissAction
MTAlarmKeepOffUntilDate
MTAlarmTitle
MTAlarmSound
MTAlarmIsNew
MTAlarmOnboardingVersion
MTAlarmSiriContext
MTAlarmBypassReload
v16@?0@"NSString"8
B16@?0@"MTCFUserNotification"8
MTTimerIntentSupportSiriContextTimerTypeKey
com.apple.MTSyncChangeQueue.serial
Q16@?0@"<MTSyncable>"8
MTSyncChangeQueue.m
Undetermined enqueue result returned
Q24@?0@"<MTSyncable>"8@"<MTSyncable>"16
Invalid conflict result returned
com.apple.private.alloy.mobiletimersync
com.apple.MTCompanionSyncService.serialqueue
Companion sync sending session failed
<%@: %p master: %d >
SYService
Class getSYServiceClass(void)_block_invoke
MTCompanionSyncService.m
void *CompanionSyncLibrary(void)
SYServiceOption getSYServiceOptionDiskBufferProtectionClass(void)
SYServiceOptionDiskBufferProtectionClass
NSString *getIDSSendMessageOptionBypassDuetKey(void)
IDSSendMessageOptionBypassDuetKey
void *IDSLibrary(void)
<%@:%p ProcessName: %@ ProcessID: %@ Connected: %@ Connection: %@>
%@-%d
lastModifiedDate
snoozeFireDate
bedtimeSnoozeFireDate
firedDate
dismissedDate
playOptions
sleepMode
sleepTracking
sleepSchedule
onboardingVersion
sleepModeOptions
timeInBedTracking
dismissedAction
bedtimeFiredDate
bedtimeDismissedDate
bedtimeDismissedAction
keepOffUntilDate
@33
 @ff&@
,@ffF@
L@33S@
softlink:r:path:/System/Library/PrivateFrameworks/ChronoServices.framework/ChronoServices
softlink:r:path:/System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams
softlink:r:path:/System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
softlink:r:path:/System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight
softlink:r:path:/System/Library/Frameworks/HealthKit.framework/HealthKit
softlink:r:path:/System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync
softlink:r:path:/System/Library/Frameworks/HealthKit.framework/HealthKit
softlink:r:path:/System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities
softlink:r:path:/System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
softlink:r:path:/System/Library/PrivateFrameworks/MobileTimerSupport.framework/MobileTimerSupport
softlink:r:path:/System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
softlink:r:path:/System/Library/Frameworks/HealthKit.framework/HealthKit
softlink:r:path:/System/Library/PrivateFrameworks/CompanionSync.framework/CompanionSync
softlink:r:path:/System/Library/PrivateFrameworks/IDS.framework/IDS
MTPauseResumeTimerIntentHandler
INPauseTimerIntentHandling
NSObject
INResumeTimerIntentHandling
MTTimeInBedSession
MTSleepSession
NSSecureCoding
NSCoding
ProtoBuffer
MTProtoBufferSerializable
MTSerializable
Alarm
MTXPCConnectionInfo
MTToggleAlarmIntentHandler
MTEnableAlarmIntentHandling
MTDisableAlarmIntentHandling
MTToggleAlarmIntentHandling
MTWidgetUtilities
MTLanguageChangeListener
MTAgentNotificationListener
MTScheduledList
MTSleepCoordinatorStateMachineAsleepState
MTInMemoryDefaults
MTPersistence
ClocksIntent
ClocksIntentResponse
MTTimerStorage
MTTimerSchedulerDelegate
MTApplicationWorkspaceObserverProtocol
MTAgentDiagnosticDelegate
MTAgentNotificationManager
MTDictionarySerializable
NSCopying
MTStorageWriter
MTSerializer
MTStorageReader
MTStorageReaderV1
MTAlarmSnapshot
MTAlarmObserver
MTAlarmSyncDataModel
MTSource
MTSyncDataModel
MTSleepCoordinatorStateMachineState
MTSleepCoordinatorStateMachineEventHandler
MTStateMachineEventHandler
MTPairedDeviceListener
MTUserNotificationAppDelegate
UNUserNotificationCenterDelegate
MTPBAlarm
MTXPCConnectionProvider
MTSleepModeStateMachineUserRequestedOffState
ClockManager
MTAnalytics
IntentsSupport
MTTimerManagerIntentSupport
MTSleepModeMonitor
DNDModeAssertionUpdateListener
MTSleepModeStateMachineInfoProvider
MTStateMachineInfoProvider
MTSleepModeStateMachineDelegate
MTStateMachineDelegate
MTSleepObserver
MTTimeObserver
MTSleepModeManager
MTSleepModeStateMachine
MTSleepModeStateMachineEventHandler
MTDateFormatting
MTSyncServiceManager
MTSyncStatusProviderDelegate
MTSyncServiceDelegate
MTSyncManager
MTCreateAlarmIntentHandler
MTCreateAlarmIntentHandling
MTSleepSessionTracker
MTUserNotificationActionDispatcher
MTPBAlarmDelete
MTUpdateAlarmIntentHandler
MTUpdateAlarmIntentHandling
MTSleepModeStateMachineInitialState
ClocksSingleIntent
ClocksSingleIntentResponse
MTAlarmStorage
MTAlarmScheduleDelegate
MTSpringboardStartMonitor
MTCreateTimerIntentHandler
INCreateTimerIntentHandling
MTPBSound
MTSound_Notifications
MTAlarmScheduler
MTScheduledListDelegate
MTPBAlarmAdd
MTScheduledObject
NAEquatable
NAHashable
MTScheduling
MTScheduleable
MTExponentialBackOffTimer
MTWidgetProvider
MTCompanionSyncSerializer
SYChangeSerializer
MTAlarmIntent
MTAgentDiagnosticListener
MTTimeInBedSessionTracker
MTCoreDuetMonitor
MTTimerIntentDonor
MTTimerObserver
MTAlarmCache
MTDistributedNotificationPoster
MTNotificationCenter
MTSleepModeStateMachineOffState
MTSystemStateListener
Properties
MTSyncChangeArchiver
MTSyncChangeUnarchiver
WorldClockManager
MTSleepCoordinator
MTSleepCoordinatorStateMachineDelegate
MTSleepCoordinatorStateMachineInfoProvider
SleepCoordinator
MTOSTransaction
CompanionSync
SYChange
MTDeleteTimerIntentHandler
INDeleteTimerIntentHandling
MTSetTimerAttributeIntentHandler
INSetTimerAttributeIntentHandling
MTPBSyncMessage
MTSound
WorldClockPreferences
MTSyncDismiss
MTSyncable
MTSyncableObject
MTAlarmIntentHandler
MTSnapshotScheduler
MTAlarmMigrator
MTAlarm
BSDescriptionProviding
NSMutableCopying
MTMutableAlarm
MTSleepSessionManager
MTSleepSessionTrackerDelegate
MTMetrics
NotificationRelay
MTTimerSnapshot
MTUserDefaults
MTSensitiveUIMonitor
MTUtilities
_MTSerialQueueScheduler
MTScheduler
NAScheduler
MTExpiringFuture
WorldClockCity
MTNextAlarm
MTNextAlarmManager
MTWorldClock
MTWorldClockResolutionResult
MTUserNotificationCenter
MTTimerMigrator
MTChange
MTChangeSet
ChangeSet
MTSleepModeStateMachineOnState
MTDictionarySerializer
MTDictionaryDeserializer
MTTimeListener
MTSleepCoordinatorStateMachineDisabledState
MTPBDismissAction
MTCreateSingleTimerIntentHandler
DistributedNotificationPoster
MTGCDTimer
MTGCDTaskScheduler
MTTaskScheduler
MTTask
MTTaskGroup
MTAgentNotification
MTSleepModeStateMachineWaitingState
MTGetAlarmsIntentHandler
MTGetAlarmsIntentHandling
MTPowerAssertion
MTTimerCache
MTTimerTime
MTTimerTimeInterval
MTTimerDate
MTTimerManager
MTUserDefaultNotificationObserver
MTTimerManagerExportedObject
MTTimerClient
MTResetTimerIntentHandler
INResetTimerIntentHandling
MTObserverStore
MTXPCScheduler
MTSchedulingDelegate
MTAlarmManager
MTAlarmManagerExportedObject
MTAlarmClient
MTNotifiying
Sleep
ClockAngelServer
ClockAngelClient
MTTimerSessionsCoordinator
Notification
MTPBAlarmState
MTUpdateTimerIntentHandler
MTSearchTimerIntentHandler
INSearchForTimersIntentHandling
MTSleepModeStateMachineState
MTAlarmIntentDonor
MTLegacyManager
MTXPCConnectionListenerProvider
NSXPCListenerDelegate
MTAgent
MTSystemStateDelegate
MTAlarmDataSource
MTPersistentSyncChangeStore
MTSyncChangeStore
MTInMemorySyncChangeStore
MTStateMachineState
MTCity
MTCityResolutionResult
MTStateMachine
MTPairedDevicePreferences
MTApplicationWorkspaceObserver
LSApplicationWorkspaceObserverProtocol
MTTimerManagerProviding
MTSleepUtilities
MTTimerScheduler
MTCompanionSyncSession
SYSessionDelegate
MTAlarmServer
MTXPCServer
MTTimerServer
MTAdditions
MTDeviceListener
MTPBAlarmUpdate
MTSleepManager
HKSPSleepStoreObserver
MTCompanionSyncStatusProvider
MTPairedDeviceObserver
MTSyncStatusProvider
MTTimer
MTMutableTimer
MTTimerIntentHandler
MTCompanionSyncRequest
MTSyncToken
MTTrigger
MTSleepCoordinatorStateMachineAwakeState
MTSyncSnooze
MTPBSnoozeAction
MTCFUserNotification
MTCFUserNotificationPoster
MTTimerIntentSupport
MTSyncChangeQueue
MTCompanionSyncService
SYServiceDelegate
MTSyncService
MTXPCClientInfo
MTPBAlarmProperties
MTSleepCoordinatorStateMachine
MTCreateAlarmIntent
MTCreateAlarmIntentResponse
MTUpdateAlarmIntent
MTUpdateAlarmIntentResponse
MTEnableAlarmIntent
MTEnableAlarmIntentResponse
MTDisableAlarmIntent
MTDisableAlarmIntentResponse
MTToggleAlarmIntent
MTToggleAlarmIntentResponse
MTGetAlarmsIntent
MTGetAlarmsIntentResponse
MTAlarmStateResolutionResult
MTAlarmOperationResolutionResult
MTIntentAlarm
MTIntentAlarmResolutionResult
MTIntentRepeatDay
MTIntentRepeatDayResolutionResult
targetTimer
_timerFromIntentTargetTimer:defaultState:
setWithArray:
pauseMultiple
boolValue
successWithResolvedTimer:
_genericallyResolveTargetTimer:multiple:allowedTimerStatesForFollowup:completion:
successWithResolvedValue:
_handlePauseTimer:dryRun:completion:
state
setState:
_responseToPauseTimerIntent:withPausedTimers:error:dryRun:
_updateTimer:dryRun:allowMultiple:excludeStoppedTimers:filterBlock:updateBlock:completion:
setWithObjects:
resumeMultiple
_handleResumeTimer:dryRun:completion:
_responseToResumeTimerIntent:withResumedTimers:error:dryRun:
domain
isEqualToString:
code
initWithCode:userActivity:
stringWithFormat:
setPausedTimers:
setResumedTimers:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
handlePauseTimer:completion:
confirmPauseTimer:completion:
resolveTargetTimerForPauseTimer:withCompletion:
resolvePauseMultipleForPauseTimer:withCompletion:
handleResumeTimer:completion:
confirmResumeTimer:completion:
resolveTargetTimerForResumeTimer:withCompletion:
resolveResumeMultipleForResumeTimer:withCompletion:
initWithStartDate:endDate:intervals:endReason:metadata:
init
startDate
encodeObject:forKey:
endDate
intervals
endReason
encodeInteger:forKey:
metadata
needsAdditionalProcessing
encodeBool:forKey:
decodeObjectOfClass:forKey:
arrayWithObjects:count:
decodeObjectOfClasses:forKey:
decodeIntegerForKey:
decodeBoolForKey:
count
timeInBedSessionWithStartDate:endDate:intervals:endReason:metadata:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
sampleType
T@"NSDate",R,N
T@"NSArray",R,N
Tq,R,N
T@"NSDictionary",R,N
TQ,R,N
TB,R,N
setNeedsAdditionalProcessing:
setStartDate:
setEndDate:
setIntervals:
setEndReason:
setMetadata:
.cxx_destruct
_needsAdditionalProcessing
_startDate
_endDate
_intervals
_endReason
_metadata
T@"NSDate",&,N,V_startDate
T@"NSDate",&,N,V_endDate
T@"NSArray",&,N,V_intervals
TQ,N,V_endReason
T@"NSDictionary",&,N,V_metadata
TB,N,V_needsAdditionalProcessing
syncDate
timeIntervalSinceReferenceDate
setSyncDate:
syncIdentifier
setSyncID:
syncVersion
setSyncVersion:
snoozeDate
setSnoozeDate:
setSnoozeAction:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
hasSnoozeAction
snoozeAction
syncID
dateWithTimeIntervalSinceReferenceDate:
syncSnoozeOfObjectWithIdentifier:snoozeDate:date:version:
initFromDeserializer:
mtCoder
initWithData:
deserialize:
serializeWithSerializer:
serialize
data
unsignedLongLongValue
numberWithLongLong:
stringValue
initWithSettings:
distantPast
applySettings:
numberWithUnsignedInt:
dictionaryWithObjects:forKeys:count:
mutableCopy
objectForKey:
setObject:forKey:
unsignedIntValue
setHour:
setMinute:
setAllowsSnooze:
numberWithInt:
intValue
setSound:ofType:
setSoundVolume:
setVibrationID:
setTitle:
setDaySetting:
setIsSleepAlarm:
setBedtimeReminderMinutes:
integerValue
setBedtimeHour:
setBedtimeMinute:
dropEditingProxy
settings
isActive
setAlarmID:
alarmID
setAlarmIDURL:
hour
minute
daySetting
allowsSnooze
sound
soundType
vibrationID
title
addObject:
length
initWithCapacity:
verifyIdSetting:withMessageList:
verifyHourSetting:withMessageList:
verifyMinuteSetting:withMessageList:
verifyDaySetting:withMessageList:
countByEnumeratingWithState:objects:count:
date
defaultTimeZone
setYear:
setMonth:
setWeekdayOrdinal:
setWeekday:
alarmDidUpdate:
timeComparator
stringByAppendingString:
initWithString:
copy
hasPrefix:
numberWithBool:
removeObjectForKey:
numberWithInteger:
initWithArray:
floatValue
objectForKeyedSubscript:
sharedVibrationManager
defaultVibrationIdentifierForAlertType:
vibrationWithIdentifierIsValid:
bundleForClass:
localizedStringForKey:value:table:
soundVolume
verifySettings:
prepareEditingProxy
applyChangesFromEditingProxy
nowDateForOffsetCalculation
timeZoneForOffsetCalculation
_newBaseDateComponentsForDay:
refreshActiveState
markModified
compareTime:
alarmIDURL
bedtimeReminderMinutes
bedtimeHour
bedtimeMinute
repeats
repeatDays
uiTitle
alarmSoundIdentifier
alarmSoundType
setAlarmSoundIdentifier:ofType:
alarmSoundVolume
setAlarmSoundVolume:
editingProxy
isSnoozed
isSleepAlarm
lastModified
revision
delegate
setDelegate:
forceActiveForMigration
setForceActiveForMigration:
_hour
_minute
_daySetting
_allowsSnooze
_lastModified
_revision
_editingProxy
_pretendActiveIfProxy
_settings
_repeatDays
_vibrationID
_snoozed
_isSleepAlarm
_forceActiveForMigration
_soundType
_sound
_title
_delegate
_alarmID
_alarmIDURL
T@"NSString",&,N,V_alarmID
T@"NSURL",&,N,V_alarmIDURL
T@"Alarm",R,N,V_editingProxy
active
TB,R,N,GisActive
snoozed
TB,R,N,GisSnoozed,V_snoozed
TB,N,V_isSleepAlarm
T@"NSNumber",C,N
TI,N,V_hour
TI,N,V_minute
Tq,N
TI,N,V_daySetting
TB,N,V_allowsSnooze
Tq,R,N,V_soundType
T@"NSString",R,N,V_sound
T@"NSString",R,N
T@"NSString",&,N,V_title
T@"NSString",&,N
T@"NSDate",R,N,V_lastModified
TI,R,N,V_revision
T@"<AlarmDelegate>",W,N,V_delegate
TB,N,V_forceActiveForMigration
infoForMachServiceName:remoteObjectInterface:exportedObject:exportedObjectInterface:lifecycleNotification:requiredEntitlement:options:
initWithMachServiceName:remoteObjectInterface:exportedObject:exportedObjectInterface:lifecycleNotification:requiredEntitlement:options:
protocol
machServiceName
infoForMachServiceName:remoteObjectInterface:options:
setMachServiceName:
remoteObjectInterface
setRemoteObjectInterface:
exportedObject
setExportedObject:
exportedObjectInterface
setExportedObjectInterface:
lifecycleNotification
setLifecycleNotification:
requiredEntitlement
setRequiredEntitlement:
options
setOptions:
_machServiceName
_remoteObjectInterface
_exportedObject
_exportedObjectInterface
_lifecycleNotification
_requiredEntitlement
_options
T@"NSString",C,N,V_machServiceName
T@"NSXPCInterface",&,N,V_remoteObjectInterface
T@,&,N,V_exportedObject
T@"NSXPCInterface",&,N,V_exportedObjectInterface
T@"NSString",C,N,V_lifecycleNotification
T@"NSString",C,N,V_requiredEntitlement
TQ,N,V_options
_alarmUserActivityWithEnableIntent:
_alarmUserActivityWithDisableIntent:
identifier
_toggleAlarm:alarmIDString:completion:
alarm
needsValue
alarmManager
alarmsIncludingSleepAlarm:
unsupported
addFailureBlock:
alarmIDString
na_firstObjectPassingTest:
intentAlarm
successWithResolvedAlarm:
addSuccessBlock:
successWithResolvedAlarmState:
operation
notRequired
na_map:
setAlarm:
successWithResolvedAlarmOperation:
UUIDString
errorWithDomain:code:userInfo:
futureWithError:
getEnableStateForAlarm:
futureWithNoResult
updateEnableStateForAlarm:enabled:
updateAlarm:
flatMap:
isEnabled
sleepSchedule
setEnabled:
setSleepSchedule:
mtUserActivityWithActivityType:
createUserInfoWithIntentName:alarmIDString:time:label:
setUserInfo:
confirmEnableAlarm:completion:
handleEnableAlarm:completion:
confirmDisableAlarm:completion:
handleDisableAlarm:completion:
handleToggleAlarm:completion:
resolveStateForToggleAlarm:withCompletion:
resolveAlarmForToggleAlarm:withCompletion:
provideAlarmOptionsCollectionForToggleAlarm:withCompletion:
confirmToggleAlarm:completion:
defaultAlarmForToggleAlarm:
provideAlarmOptionsForToggleAlarm:withCompletion:
resolveOperationForToggleAlarm:withCompletion:
confirmMTEnableAlarm:completion:
handleMTEnableAlarm:completion:
confirmMTDisableAlarm:completion:
handleMTDisableAlarm:completion:
finishWithError:
widgetConfigurations
widget
intent
_className
valueForKey:
timeZoneFromCities:
finishWithResult:
allConfiguredWidgetsWithCompletion:
timeZoneName
initWithExtensionBundleIdentifier:kind:
reloadTimelineWithReason:
timeZonesForCurrentClockWidgets
reloadAlarmWidgetTimeline
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
liveDarwinNotifications
na_any:
_languageChangeNotification
_handleLanguageChanged
handlesNotification:ofType:
handleNotification:ofType:completion:
assertionTimeOutForNotification:ofType:
initWithDelegate:
array
sortUsingComparator:
_scheduledObjectComparator
_sortAndFilter:objectsToScheduleAhead:
trigger
triggerType
scheduleable
isSleepItem
isSingleTime
isItemEnabled
enumerateObjectsUsingBlock:
firstObject
mtGregorianCalendar
overridesScheduledObject:calendar:
triggerDate
upcomingTriggersAfterDate:
scheduledObjectForScheduleable:trigger:
scheduleOverridenForDate:
startOfDayForDate:
dateByAddingUnit:value:toDate:options:
isPastOverrideEvent
removeObjectsInArray:
isEqualToDate:
compare:
arrayWithArray:
addObjectsFromArray:
_sortAndFilter:
scheduledAlertsAndNotifications
scheduledObjects
mtIsBeforeOrSameAsDate:
_filterScheduledObjects:withBlock:
_dateIntervalFilter:
containsDate:
na_filter:
_nextScheduledObjectInSets:
mtIsBeforeDate:
_scheduledListForTriggerType:
scheduledTypeForTriggerType:
removeAllObjects
_unschedule:
_performScheduleChangingBlock:withCompletion:
allValues
_unscheduleObject:
shouldBeScheduled
_scheduleObject:
na_each:
setObject:forKeyedSubscript:
numberWithUnsignedInteger:
nextScheduledAlertOrNotification
_sort:
scheduledListDidChange:withCompletion:
removeObject:
orderedScheduledAlerts
orderedScheduledNotifications
orderedScheduledEvents
numberOfScheduledAlerts
numberOfScheduledAlertsAndNotifications
scheduledAlerts
scheduledObjectsToFireBeforeDate:
scheduledObjectsToFireInInterval:
nextScheduledAlert
nextScheduledObject
nextScheduledObjectWithTriggerType:
reset
unschedule:
schedule:afterDate:withCompletion:
isScheduled:
setOrderedScheduledAlerts:
setOrderedScheduledNotifications:
setOrderedScheduledEvents:
scheduledAlertMap
setScheduledAlertMap:
_orderedScheduledAlerts
_orderedScheduledNotifications
_orderedScheduledEvents
_scheduledAlertMap
T@"<MTScheduledListDelegate>",W,N,V_delegate
T@"NSMutableOrderedSet",&,N,V_orderedScheduledAlerts
T@"NSMutableOrderedSet",&,N,V_orderedScheduledNotifications
T@"NSMutableOrderedSet",&,N,V_orderedScheduledEvents
T@"NSMutableDictionary",&,N,V_scheduledAlertMap
stateMachine
disabledState
stateMachineUserWentToBed:
didEnterWithPreviousState:
storage
numberWithFloat:
objectForKey:defaultValue:
floatForKey:
setFloat:forKey:
setStorage:
_storage
T@"NSMutableDictionary",&,N,V_storage
mainBundle
bundleIdentifier
cities
T@"NSArray",C,D,N
setUserActivity:
setCode:
_code
Tq,N,V_code
clocks
sharedUserDefaults
initWithPersistence:
serialDispatchQueueSchedulerWithName:
mtMainThreadScheduler
initWithPersistence:migrator:serializer:callbackScheduler:currentDateProvider:
initWithCallbackScheduler:
sharedWorkspaceObserver
addObserver:forBundleIdentifier:
removeObserver:
dealloc
_loadTimersWithCompletion:
serializer
persistence
migrateFromOldStorage
timer
initForReadingFromData:error:
initWithEncodedDictionary:
decodeObjectForKey:
_queue_setAllTimers:source:persist:notify:
removeFromOldStorage
performBlock:
currentTimerFromTimers:
defaultDuration
initWithState:duration:currentDateProvider:
_queue_addTimer:withCompletion:source:
scheduler
nextTimer
addObserver:
_queue_setAllTimers:source:
orderedTimers
_queue_persistTimers
_queue_sortTimers
_queue_notifyObserversForTimerRemoval:source:
_queue_notifyObserversForTimerAdd:source:
timerID
_createDefaultTimerIfNeededWithCompletion:
_queue_updateTimer:withCompletion:source:
_queue_removeTimer:withCompletion:source:
_queue_dismissTimerWithIdentifier:withCompletion:source:
_queue_repeatTimerWithIdentifier:withCompletion:source:
_queue_hasMatchingTimer:
timerIDString
_queue_timerMatchingTimerIdentifier:
stateChangeIsAllowableFromState:toState:
_queuePersistTimer:replacingTimer:
_queue_notifyObserversForTimerUpdate:source:
descriptionForState:
sendCriticalEvent:
setDismissedDate:
_queue_notifyObserversForTimerDismiss:source:
timerByRestarting
_applyNecessaryChangesFromOldTimer:currentTimer:
setLastModifiedDate:
setFiredDate:
enumerateObserversWithBlock:
source:didAddTimers:
_queue_notifyObserversWithBlock:
source:didUpdateTimers:
source:didRemoveTimers:
source:didDismissTimer:
source:didFireTimer:
nextTimerDidChange:
encodedDictionary
_removeTimerDataIfNecessary:
_diagnosticTimerDictionary
lastModifiedDate
_diagnosticDictionaryForTimer:
firedDate
toneIdentifier
mediaItemIdentifier
vibrationIdentifier
_queue_notifyObserversForNextTimerChange:source:
_queue_notifyObserversForTimerFire:source:
isApplicationInstalledForBundleIdentifier:
_queue_removeAllTimersForSource:
scheduler:didChangeNextTimer:
scheduler:didFireTimer:
observedApplicationDidInstallForBundleIdentifier:
observedApplicationDidUninstallForBundleIdentifier:
printDiagnostics
gatherDiagnostics
registerObserver:
getTimersWithCompletion:
addTimer:withCompletion:source:
updateTimer:withCompletion:source:
removeTimer:withCompletion:source:
dismissTimerWithIdentifier:withCompletion:source:
repeatTimerWithIdentifier:withCompletion:source:
setAllTimers:source:
timers
T@"MTTimer",R,N
loadTimers
loadTimersSync
setScheduler:
handleF5Reset
handleMigrationFinish
setOrderedTimers:
currentDateProvider
migrator
setMigrator:
setSerializer:
observers
setObservers:
setPersistence:
_metrics
_scheduler
_orderedTimers
_lastModifiedDate
_currentDateProvider
_migrator
_serializer
_observers
_persistence
T@"NSMutableArray",&,N,V_orderedTimers
T@"NSDate",C,N,V_lastModifiedDate
T@?,R,C,N,V_currentDateProvider
T@"MTTimerMigrator",&,N,V_migrator
T@"<NAScheduler>",&,N,V_serializer
T@"MTObserverStore",&,N,V_observers
T@"<MTPersistence>",&,N,V_persistence
T@"MTTimerScheduler",W,N,V_scheduler
listeners
_registerForLiveDarwinNotification:
_registerForDistributedNotifications
_registerForDarwinNotifications
_registerForAlarmNotifications
_registerForXPCStream:notificationType:
UTF8String
stringWithCString:encoding:
_handleNotificationWithName:type:
defaultAssertionTimeOutForNotification:type:
notificationWithType:name:powerAssertionTimeout:
releaseAssertion
_schedulingAssertionTimeout
integerForKey:isValid:defaultValue:
registerListener:
beginListening
setListeners:
_listeners
T@"NSMutableArray",&,N,V_listeners
arrayWithObject:
lastObject
_encodeObject:forKey:
numberWithDouble:
_serializingProtocol
_dictionaryForProtocolObject:
dictionary
_encodeProtocolObject:forKey:
copyWithZone:
removeLastObject
mtType
T@"NSCoder",R,N
encodeInt:forKey:
encodeInt32:forKey:
encodeInt64:forKey:
encodeFloat:forKey:
encodeDouble:forKey:
stack
setStack:
_stack
T@"NSMutableArray",&,N,V_stack
longLongValue
doubleValue
_decodeObject:
_dictionaryIsForSerializableObject:
_objectForDictionary:
allKeys
substringFromIndex:
_unwrap:
allowsKeyedCoding
decodeIntForKey:
decodeInt32ForKey:
decodeInt64ForKey:
decodeFloatForKey:
decodeDoubleForKey:
initWithBundleID:
shouldScheduleSnapshotForAlarms:
scheduleSnapshot
source:didAddAlarms:
source:didUpdateAlarms:
source:didRemoveAlarms:
source:didSnoozeAlarm:snoozeAction:
source:didFireAlarm:triggerType:
source:didDismissAlarm:dismissAction:
source:didChangeNextAlarm:
initWithStorage:
T@"MTAlarmStorage",R,N,V_storage
schedulerWithDispatchQueue:
defaultBlock
initWithAlarmStorage:syncMetrics:syncServiceManagerBlock:serializer:serialQueue:
_setupSyncManagerWithBlock:
deviceSupportsSyncing
initWithSyncStatusProvider:
syncMetrics
initWithSyncService:syncStatusProvider:syncDataModel:syncMetrics:
startSyncService
stopSyncService
sourceIdentifier
dismissedDate
syncDismissOfObjectWithIdentifier:dismissDate:date:
syncChange:
snoozeFireDate
syncSnoozeOfObjectWithIdentifier:snoozeDate:date:
syncType
_performAction:
_performDismiss:
_performSnooze:
alarmStorage
dismissDate
dismissAlarmWithIdentifier:dismissDate:dismissAction:withCompletion:source:
snoozeAlarmWithIdentifier:snoozeDate:snoozeAction:withCompletion:source:
syncServiceManager
addEntriesFromDictionary:
isFromOtherDevice
donatesIntent
dontNotify
dataFileName
applyChange:
resetDataStore
initWithAlarmStorage:syncMetrics:
startSyncServices
stopSyncServices
setSyncServiceManager:
setAlarmStorage:
serialQueue
setSerialQueue:
setSyncMetrics:
_syncServiceManager
_alarmStorage
_serialQueue
_syncMetrics
T@"MTSyncServiceManager",&,N,V_syncServiceManager
T@"MTAlarmStorage",&,N,V_alarmStorage
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
T@"MTMetrics",&,N,V_syncMetrics
sleepAlarm
updateStateForSleepAlarm:
determineNextStateForSleepAlarm:
enterState:
currentDate
isFiring
asleepState
nextTriggersAfterDate:includeBedtime:
mtIsAfterDate:
awakeState
confirmedLastBedtimeReminder
bedtimeDismissedDate
updateState
stateMachine:dismissWakeUpAlarm:dismissAction:
sleepTimeOutMinutes
stateMachine:shouldScheduleAlarmTimeoutForSecondsFromNow:
userWentToBed
userWokeUp
userBedTimeReached:
userWakeTimeReached:
userWakeUpAlarmFired
wakeUpAlarmTimedOut
_registerForLocalNotifications
updateActiveDeviceInfo
defaultCenter
didReceiveNotification:
addObserver:selector:name:object:
_handledNotifications
containsObject:
didReceiveNotificationNamed:
name
activePairedDeviceDidChange
notifyObserversWithBlock:
sharedInstance
getActivePairedDevice
setPairedDevice:
pairedDevice
valueForProperty:
hasActivePairedDeviceCheckSyncing:
initWithUUIDString:
supportsCapability:
sharedListener
T@"MTPairedDeviceListener",R
pairedDeviceVersion
hasActivePairedDevice
hasActivePairedDeviceSupportingSyncing
serializerQueue
setSerializerQueue:
sleepEnabled
setSleepEnabled:
_sleepEnabled
_serializerQueue
_pairedDevice
T@"NSObject<OS_dispatch_queue>",&,N,V_serializerQueue
TB,N,V_sleepEnabled
T@"NRDevice",&,N,V_pairedDevice
T@"NSString",R
currentNotificationCenter
request
content
categoryIdentifier
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
notificationCenter
setNotificationCenter:
_notificationCenter
T@"UNUserNotificationCenter",&,N,V_notificationCenter
dictionaryRepresentation
setAlarmProperties:
allocWithZone:
mergeFrom:
readFrom:
writeTo:
copyTo:
alarmProperties
_alarmProperties
T@"MTPBAlarmProperties",&,N,V_alarmProperties
initWithConnectionInfo:errorHandler:reconnectHandler:
invalidate
info
initWithMachServiceName:options:
_didInterruptConnection
setInterruptionHandler:
_didInvalidateConnection
setInvalidationHandler:
setExportedInterface:
resume
_connectionRebuildingIfNecessary
errorHandler
timeIntervalSinceDate:
_retryConnectionWithRecover:
reconnectHandler
performRemoteBlock:withErrorHandler:
_retryConnection
recover:
addCompletionBlock:
performRemoteBlock:withErrorHandler:isSynchronous:
_syncRemoteObjectProxyWithErrorHandler:
_asyncRemoteObjectProxyWithErrorHandler:
connection
futureWithResult:
remoteObjectProxyWithErrorHandler:
_remoteObjectProxyWithXPCConnectionProvider:remoteObjectProxyProvider:errorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
providerWithConnectionInfo:errorHandler:
providerWithConnectionInfo:reconnectHandler:
didReceiveLifecycleNotification
performRemoteBlock:
setInfo:
setErrorHandler:
setReconnectHandler:
callbackScheduler
setCallbackScheduler:
lastLifecycleNotification
setLastLifecycleNotification:
connectionLock
_connection
_alive
_connectionLock
_info
_errorHandler
_reconnectHandler
_callbackScheduler
_lastLifecycleNotification
T@"<NAScheduler>",&,N,V_callbackScheduler
T@"MTXPCConnectionInfo",&,N,V_info
T@?,C,N,V_errorHandler
T@?,C,N,V_reconnectHandler
T@"NSDate",&,N,V_lastLifecycleNotification
T{os_unfair_lock_s=I},R,N,V_connectionLock
initWithStateMachine:
keepOffUntilDate
isEqualToState:
stateMachine:disengageSleepModeUserRequested:
isUserAsleep
stateMachine:keepSleepModeOffUntilDate:
updateModeKeepOffUntilDateIfNecessary
updateState:
initWithKeepOffUntilDate:stateMachine:
setKeepOffUntilDate:
_keepOffUntilDate
T@"NSDate",&,N,V_keepOffUntilDate
loadUserPreferences
saveAndNotifyForUserPreferences:localNotifications:
submitEvent:eventParameters:
incrementEventCount:
localeIdentifier
setNumberStyle:
stringByReplacingOccurrencesOfString:withString:
setPositiveFormat:
stringFromNumber:
currentLocale
initWithLocaleIdentifier:
addTimer:
updateTimer:
removeTimer:
sleepTimersWithState:
initWithAlarmStorage:sleepCoordinator:currentDateProvider:
mtSerialSchedulerForObject:
serviceForClientIdentifier:
addAssertionUpdateListener:withCompletionHandler:
initWithDelegate:infoProvider:
removeAssertionUpdateListener:
invalidateActiveModeAssertionWithError:
isSleepModeEnabled:error:
activeModeAssertionWithError:
details
integerForKey:defaultValue:
assertionService
sleepModeTimeoutMinutes
dateByAddingTimeInterval:
initWithStartDate:endDate:
lifetimeWithDateInterval:
lifetime
detailsWithIdentifier:modeIdentifier:lifetime:
setUserVisibleEndDate:
takeModeAssertionWithDetails:error:
isSleepModeEnabled:
userDisengagedSleepModeOnDate:
sleepModeEnabled:userRequested:date:
reason
updateMonitorState
invalidationDate
modeAssertionService:didUpdateActiveModeAssertion:
modeAssertionService:didReceiveModeAssertionInvalidation:
T@"MTAlarm",R,N
stateMachine:engageSleepModeUntilDate:userEngaged:
stateMachineClearKeepSleepModeOff:
stateMachine:scheduleUpdateForSecondsFromNow:
sleepCoordinator:userWentToBed:sleepAlarm:
sleepCoordinator:userWokeUp:sleepAlarm:
sleepCoordinator:bedtimeReminderDidFire:sleepAlarm:
sleepCoordinator:bedtimeReminderWasConfirmed:sleepAlarm:
sleepCoordinator:bedtimeReminderWasSnoozed:sleepAlarm:
sleepCoordinator:bedtimeWasReached:sleepAlarm:
sleepCoordinator:waketimeWasReached:sleepAlarm:
sleepCoordinator:wakeUpAlarmDidFire:sleepAlarm:
sleepCoordinator:wakeUpAlarmWasDismissed:dismissAction:sleepAlarm:
sleepCoordinator:wakeUpAlarmWasSnoozed:sleepAlarm:
sleepCoordinator:sleepModeManuallyExited:sleepAlarm:
sleepCoordinator:sleepSessionEnded:reason:sleepAlarm:
sleepCoordinator:sleepAlarmDidChange:
timeListener:didDetectSignificantTimeChangeWithCompletionBlock:
initWithAlarmStorage:sleepCoordinator:
sleepMode:
userDisengagedSleepMode
sleepCoordinator
setSleepCoordinator:
setCurrentDateProvider:
setStateMachine:
setAssertionService:
_sleepCoordinator
_stateMachine
_assertionService
T@"<MTAlarmStorage>",&,N,V_alarmStorage
T@"MTSleepCoordinator",W,N,V_sleepCoordinator
T@?,C,N,V_currentDateProvider
T@"MTSleepModeStateMachine",&,N,V_stateMachine
T@"DNDModeAssertionService",&,N,V_assertionService
initWithDelegate:isSynchronous:
checkIn
reconnect
setEnabled:valueDidChangeBlock:
_enabled
enabled
TB,N,GisEnabled
initWithSleepModeEndDate:stateMachine:
currentState
infoProvider
onStateWithSleepModeEndDate:
userRequestedOffStateWithKeepOffUntilDate:
stateMachineLog
initialState
offState
waitingState
_initialState
_offState
_waitingState
T@"MTSleepModeStateMachineInitialState",R,N,V_initialState
T@"MTSleepModeStateMachineOffState",R,N,V_offState
T@"MTSleepModeStateMachineWaitingState",R,N,V_waitingState
_reloadLocaleInfo
_loadLocaleInfo
_clearLocaleDependentState
postNotificationName:object:
dateFormatFromTemplate:options:locale:
rangeOfString:
rangeOfString:options:
setLocale:
setDateStyle:
setTimeStyle:
setLocalizedDateFormatFromTemplate:
_dateOnlyFormatter
AMSymbol
PMSymbol
localizedTimeStringFromDate:forTimeZone:timeDesignator:
_timeOnlyFormatter
timeZone
isEqualToTimeZone:
setTimeZone:
timeDesignatorForDate:timeZone:
stringFromDate:
currentCalendar
component:fromDate:
amString
pmString
localizedTimeStringFromDate:timeDesignator:
timeDesignatorForDate:
use24HourTime
timeDesignatorAppearsBeforeTime
_amString
_pmString
_use24HourTime
_timeDesignatorAppearsBeforeTime
T@"NSString",R,W,N
TB,R,N,V_use24HourTime
TB,R,N,V_timeDesignatorAppearsBeforeTime
persistentStoreForDataModel:
initWithSyncService:syncStatusProvider:syncDataModel:syncMetrics:syncChangeStore:
setSyncStatusProviderDelegate:
initWithChangeStore:
loadChanges
syncStatus
resume:
checkForPendingChanges
removePendingChanges
suspend
hasPendingChanges
requestSync:
enqueueChange:
pendingChanges
resolveChange:
syncDataModel
dequeueChanges:
logSyncFailedWithError:
logSyncCompleted
syncService
syncStatusProvider
syncChangeQueue
syncStatusProvider:didChangeSyncStatus:
pendingChangesSent:
setSyncService:
setSyncStatusProvider:
setSyncDataModel:
setSyncChangeQueue:
started
setStarted:
_started
_syncService
_syncStatusProvider
_syncDataModel
_syncChangeQueue
T@"<MTSyncService>",&,N,V_syncService
T@"<MTSyncStatusProvider>",&,N,V_syncStatusProvider
T@"<MTSyncDataModel>",W,N,V_syncDataModel
T@"MTSyncChangeQueue",&,N,V_syncChangeQueue
TB,N,V_started
label
successWithResolvedString:
time
dateComponents
calendarWithIdentifier:
setCalendar:
setDateComponents:
successWithResolvedDateComponents:
repeatSchedule
successWithResolvedRepeatDay:
firstWeekday
subarrayWithRange:
arrayByAddingObjectsFromArray:
_alarmUserActivityWithIntent:
value
alarmWithHour:minute:
setRepeatSchedule:
addAlarm:
displayString
handleMTCreateAlarm:completion:
resolveLabelForMTCreateAlarm:withCompletion:
resolveDateComponentsForMTCreateAlarm:withCompletion:
resolveRepeatScheduleForMTCreateAlarm:withCompletion:
provideRepeatScheduleOptionsCollectionForMTCreateAlarm:withCompletion:
confirmMTCreateAlarm:completion:
defaultRepeatScheduleForMTCreateAlarm:
provideRepeatScheduleOptionsForMTCreateAlarm:withCompletion:
_withLock:
_trackingEnabledForSleepAlarm:
setCachedAlarm:
trackingEnabled
startSession
endSessionWithDate:reason:
sessionClass
sleepSessionTrackerDelegate
setSleepSessionTrackerDelegate:
processedSessionForSession:
T@"<MTSleepSessionTrackerDelegate>",W,N
initWithAlarmStorage:
prepare
cachedAlarm
alarmLock
setAlarmLock:
_alarmLock
_sleepSessionTrackerDelegate
_cachedAlarm
T@"MTAlarm",&,N,V_cachedAlarm
T{os_unfair_lock_s=I},N,V_alarmLock
T@"<MTSleepSessionTrackerDelegate>",W,N,V_sleepSessionTrackerDelegate
notification
_handleAlarmNotificationResponse:withCompletionHandler:
_handleTimerNotificationResponse:withCompletionHandler:
actionIdentifier
_alarmNotificationActionForUserNotificationAction:category:
handleAlarmNotificationIdentifier:action:category:completionHandler:
mtStringByRemovingNotificationPrefixes
snoozeAlarmWithIdentifier:snoozeAction:withCompletion:source:
metrics
logAlarmSnoozeAction:
dismissAlarmWithIdentifier:dismissAction:withCompletion:source:
logAlarmDismissAction:
_timerNotificationActionForUserNotificationAction:
timerStorage
logTimerDismissed
logTimerRepeated
initWithAlarmStorage:timerStorage:
setTimerStorage:
setMetrics:
_timerStorage
T@"MTTimerStorage",&,N,V_timerStorage
T@"MTMetrics",&,N,V_metrics
confirmUpdateAlarm:completion:
handleUpdateAlarm:completion:
confirmMTUpdateAlarm:completion:
handleMTUpdateAlarm:completion:
setSnoozeFireDate:
toneSoundWithIdentifier:vibrationIdentifer:volume:
setSound:
initWithSound:usingVolume:
_resetCurrentToneIdentifier
sharedToneManager
setCurrentToneIdentifier:forAlertType:topic:
setCurrentVibrationIdentifier:forAlertType:topic:
_loadAlarmsWithCompletion:
alarms
cleanUpOldNotifications
_cleanUpForInternalBuild:
_cleanUpSnoozeFireDate:
cleanDeliveredNotifications
_cleanUpSleepAlarmRepeat:
initWithIdentifier:bundleID:context:
discoverabilitySignal
source
sendEvent:
_convertSleepAlarmToRegular:
arrayByAddingObject:
_queue_setAllAlarms:sleepAlarms:source:persist:notify:
_queue_allSleepAlarms
_queue_allAlarms
nextAlarm
_queue_addAlarm:withCompletion:source:
_queue_updateAlarm:withCompletion:source:
_queue_updateAlarmWithIdentifier:changeSet:withCompletion:source:
_queue_removeAlarm:withCompletion:source:
_queue_removeAlarmWithIdentifier:withCompletion:source:
_queue_removeAllAlarmsForSource:
_queue_setAllAlarms:sleepAlarms:source:
_queue_updateSleepAlarmsFromExistingAlarms:
_queue_setAllAlarms:sleepAlarms:source:persist:notify:override:
na_dictionaryWithKeyGenerator:
transferMetadataForSleepAlarm:fromPrevious:
dismissedAction
setDismissedAction:
bedtimeFiredDate
setBedtimeFiredDate:
setBedtimeDismissedDate:
bedtimeDismissedAction
setBedtimeDismissedAction:
bedtimeSnoozeFireDate
setBedtimeSnoozeFireDate:
_applyNecessaryChangesFromExistingAlarm:updatedAlarm:
sleepAlarms
_queue_snoozeAlarmWithIdentifier:snoozeDate:snoozeAction:withCompletion:source:
_queue_dismissAlarmWithIdentifier:dismissDate:dismissAction:withCompletion:source:
_queue_alarmMatchingAlarmIdentifier:
_queue_hasMatchingAlarm:
_queuePersistAlarm:replacingAlarm:
_notifyObserversForAlarmAdd:source:
applyChangesFromChangeSet:
_queue_alarmMatchingAlarm:
_queue_dismissMutableAlarm:dismissDate:dismissAction:
changeSetWithChangesFromObject:toObject:
propertiesAffectingNotification
hasChangesInProperties:
_notifyObserversForAlarmChange:source:
_notifyObserversForAlarmDismiss:dismissAction:source:
_queue_actuallyRemoveAlarm:withCompletion:source:
_notifyObserversForAlarmRemoval:source:
_queue_persistAlarms
_queue_sortSleepAlarms
_queue_sortAlarms
changes
isBedtimeSnoozed
propertiesAffectingSnooze
mtIsAfterOrSameAsDate:
resetSnoozeFireDate
_queue_resetAlarmsTo:sleepAlarms:
isEqualToAlarm:
laterDate:
_notifyObserversForAlarmSnooze:snoozeAction:source:
_notifyObserversWithBlock:
_notifyObserversForNextAlarmChange:source:
_notifyObserversForAlarmFire:triggerType:source:
_removeAlarmDataIfNecessary:
rescheduleAlarmsWithCompletion:
removeAllAlarmsForSource:
_diagnosticDictionaryForAlarms:
_diagnosticDictionaryForAlarm:
scheduler:didChangeNextAlarm:
scheduler:didFireAlarm:
getAlarmsWithCompletion:
addAlarm:withCompletion:source:
updateAlarm:withCompletion:source:
updateAlarmWithIdentifier:changeSet:withCompletion:source:
removeAlarm:withCompletion:source:
removeAlarmWithIdentifier:withCompletion:source:
setAllAlarms:sleepAlarms:source:
updateSleepAlarms:source:
updateSleepAlarmsWithBlock:source:
alarmWithIdentifier:withCompletion:
allAlarms
loadAlarms
loadAlarmsSync
activeSleepAlarm
orderedAlarms
setOrderedAlarms:
setSleepAlarms:
_orderedAlarms
_sleepAlarms
T@"NSMutableArray",&,N,V_orderedAlarms
T@"NSMutableArray",&,N,V_sleepAlarms
T@"NSDate",&,N,V_lastModifiedDate
T@"MTAlarmMigrator",&,N,V_migrator
T@"MTAlarmScheduler",W,N,V_scheduler
_checkSpringBoardStarted
_stopMonitoring
addObserver:wasFirst:
_startMonitoringWithQueue:
removeObserver:wasLast:
didReceiveSpringboardStarted:
springboardStartMonitor:didReceiveStarted:
enumerateObservers:
isSpringboardStarted
_notifyToken
_isSpringBoardStarted
_queue
_timerManager
duration
initWithState:duration:
type
spokenPhrase
setSiriContext:
_timer:conflictsWithRunningTimersInTimers:
confirmationRequiredWithStringToConfirm:
resolutionResultUnsupportedWithReason:
initWithSpokenPhrase:
_checkNowPlayingMediaState:
successWithResolvedTimeInterval:
successWithResolvedTimerType:
initWithLabel:duration:remainingTime:identifier:state:type:
confirmationRequiredWithTimerTypeToConfirm:
_matchTimersFromIntentsTimer:excludeStoppedTimers:completion:
_createTimerWithIntent:dryRun:completion:
_isPlayingMediaFromMRPlaybackState:
_responseToCreateTimerIntent:withCreatedTimer:error:dryRun:
setCreatedTimer:
indexOfObjectPassingTest:
handleCreateTimer:completion:
confirmCreateTimer:completion:
resolveLabelForCreateTimer:withCompletion:
resolveDurationForCreateTimer:withCompletion:
resolveTypeForCreateTimer:withCompletion:
setToneID:
setVibeID:
hasToneID
setMediaID:
setHasMediaID:
hasMediaID
hasVibeID
setHasSoundVolume:
hasSoundVolume
setSoundType:
toneID
mediaID
vibeID
_mediaID
_soundVolume
_toneID
_vibeID
_has
TI,N,V_soundType
T@"NSString",&,N,V_toneID
TB,N
Td,N,V_mediaID
T@"NSString",&,N,V_vibeID
Tf,N,V_soundVolume
unSoundForCategory:
descriptionForCategory:
_alertTypeForCategory:
soundWithAlertType:
setShouldRepeat:
setAlertTopic:
setShouldIgnoreRingerSwitch:
setMaximumDuration:
setAudioVolume:
setVibrationIdentifier:
setToneIdentifier:
setToneMediaLibraryItemIdentifier:
mt_Description
unSound
audioVolume
toneMediaLibraryItemIdentifier
numberWithUnsignedLongLong:
songSoundWithIdentifier:vibrationIdentifier:volume:
alertTopic
alertType
defaultSoundForCategory:
mtSound
initWithStorage:notificationCenter:scheduler:defaults:
xpcSchedulerWithEvent:
initWithStorage:notificationCenter:scheduler:defaults:schedulingDelegate:taskScheduler:currentDateProvider:
_rescheduleAlarmsWithCompletion:
removeAllDeliveredNotifications
_scheduleAlarms:withCompletion:
_additionalAlarmsToScheduleForAlarms:
isSingleTimeAlarm
_lastAlarmTriggerDate
_setLastAlarmTriggerDate:
scheduledAlarms
_unscheduleAlarms:
_queue_updateNextAlarmTimerWithCompletion:
_nextTriggerDateForScheduling
scheduleTimerForSeconds:
_queue_fireTriggeredAlarmsWithCompletionBlock:
_queue_unregisterTimer
unscheduleTimer
isVisible
isForAlert
playsOnThisDevice
dismissRelatedNotificationsForScheduledAlarm:
_shouldPostNotificationForScheduledAlarm:
postNotificationForScheduledAlarm:completionBlock:
isBedtimeRelated
isForSnooze
isForGoToBed
_intervalToCheckForAlarmsToFireBeforeDate:
_fireScheduledAlarm:firedDate:completionBlock:
taskWithIdentifier:delay:completableBlock:
taskWithIdentifier:completableBlock:
scheduleTask:
taskGroupWithTasks:completionBlock:
scheduleTaskGroup:
nextAlarmIncludingBedtimeNotification:
nextScheduledAlarmIncludingBedtimeNotification:
nextTriggerDateIncludingBedtimeNotification:
_nextScheduledAlertIncludingBedtimeNotification:
scheduleAlarms:
dismissNotificationsWithIdentifiers:
_snoozeCountdownIdentifier:
unscheduleAlarms:
dismissNotificationsForAlarm:
dismissNotificationsForAlarm:includeSnooze:
triggerWithDate:triggerType:
dismissNotificationsForAlarm:dismissAction:
_queue_triggerDidFireForAlarmWithCompletionBlock:
initWithStorage:notificationCenter:
nextTriggerDate
schedulingDelegate
taskScheduler
defaults
setDefaults:
_scheduledAlarms
_schedulingDelegate
_taskScheduler
_defaults
T@"<MTAlarmStorage>",R,N,V_storage
T@"MTScheduledList",R,N,V_scheduledAlarms
T@"<NAScheduler>",R,N,V_serializer
T@"<MTNotificationCenter>",R,N,V_notificationCenter
T@"<MTSchedulingDelegate>",R,N,V_schedulingDelegate
T@"<MTTaskScheduler>",R,N,V_taskScheduler
T@"<MTPersistence>",&,N,V_defaults
T@"<MTAlarmScheduleDelegate>",W,N,V_delegate
_alarm
T@"MTPBAlarm",&,N,V_alarm
initWithScheduleable:trigger:
isEqualToScheduledObject:
setScheduleable:
setTrigger:
_scheduleable
_trigger
T@"<MTScheduleable>",C,N,V_scheduleable
T@"MTTrigger",C,N,V_trigger
overridesAlarm:trigger:calendar:
setOverriddenDate:
nextTriggerAfterDate:
timerWithInitialTime:backoffFactor:fireBlock:
timerWithInitialTime:backoffFactor:fireBlock:queue:
initWithInitialTime:backoffFactor:fireBlock:queue:
timerFinished
_cancel
timerWithInitialTime:fireBlock:
start
stop
setTimer:
block
setBlock:
queue
setQueue:
initialTime
setInitialTime:
currentBackoff
setCurrentBackoff:
backoffFactor
setBackoffFactor:
_timer
_block
_initialTime
_currentBackoff
_backoffFactor
T@"NSObject<OS_dispatch_source>",&,N,V_timer
T@?,C,N,V_block
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
Td,N,V_initialTime
TQ,N,V_currentBackoff
TQ,N,V_backoffFactor
reloadTimeline
bypassReloadForAlarms:
bypassReloadForAlarm:
bypassReload
handleSystemReady
reloadTimer
setReloadTimer:
_reloadTimer
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
T@"<MTAlarmStorage>",R,N,V_alarmStorage
T@"NSTimer",&,N,V_reloadTimer
hasDismissAction
dataFromChange:
changeFromData:ofType:
dataWithSYObject:
SYObjectWithData:
encodeSYChangeForBackwardCompatibility:protocolVersion:
decodeChangeData:fromProtocolVersion:ofType:
_setExtensionBundleId:
_setLaunchId:
mt_nanoAlarmBundleIDForAlarm:
_setNanoLaunchId:
intentLabel
setLabel:
alarmIDIntentObject
setOperation:
displayTitle
na_safeSetObject:forKey:
initWithDomain:verb:parametersByName:
defaultSearchableIndex
deleteInteractionsWithGroupIdentifiers:bundleID:protectionClass:completionHandler:
mt_initWithAlarm:verb:
mt_intentForAlarmCreate:
mt_intentForAlarmUpdate:
mt_intentForAlarmEnable:
mt_intentForAlarmDisable:
mt_deleteDonationsForAlarm:completion:
deferredLocalizedIntentsStringWithFormat:fromTable:bundle:
dateBySettingHour:minute:second:ofDate:options:
localizedStringFromDate:dateStyle:timeStyle:
alarmIntentDisplayString
initWithIdentifier:displayString:
timeObject
T@"MTIntentAlarm",R,N
setValue:
_addStateHandler
dataWithPropertyList:format:options:error:
bytes
T@"<MTAgentDiagnosticDelegate>",W,N,V_delegate
timeInBedTracking
bedtimeComponents
mtPreviousDateBeforeDate:matchingComponents:
mtNextDateAfterDate:matchingComponents:
_createSleepSessionWithUserWakeTime:endReason:
sleepSessionTracker:sessionDidComplete:
_shouldUseBedtimeDismissedDateForAlarm:
mtDateNearestMatchingComponents:
systemTimeZone
assistantUILocalizedStringForKey:table:
string
appendString:
userContext
knowledgeStore
updateStateForNextAlarm:
updateAlarmCaches:
writeAlarmEventsToBiome:ofType:
updateLastModifiedDateForAlarms:
writeAlarmUpdatedEventForAlarms:
updateStateForAlarm:alarmEvent:
writeAlarmToKnowledgeStore:alarmEvent:
writeAlarmEventToBiome:ofType:
alarmStatesByAlarmID
alarmsByID
_queue_writeCurrentStateToContextStore
modifiedDateKey
setValue:forKey:
_queue_writeNextAlarmStateToContextStore:
keyPathForCurrentAlarms
keyPathForNextAlarm
firing
_queue_writeAlarmToKnowledgeStore:category:
stopped
alarmStream
metadataForAlarm:
eventWithStream:startDate:endDate:value:metadata:
saveObjects:error:
isSleep
hasChangeForProperty:
hasBeenUnlockedSinceBoot
initWithEventType:alarmID:isSleepAlarm:
context
_alarmStatesByAlarmID
_alarmsByID
_context
_knowledgeStore
T@"NSMutableDictionary",R,N,V_alarmStatesByAlarmID
T@"NSMutableDictionary",R,N,V_alarmsByID
T@"_CDClientContext",R,N,V_context
T@"_DKKnowledgeStore",R,N,V_knowledgeStore
alarmIDKey
stateKey
expectedFireDateKey
nextFireDate
distantFuture
_queue_donateCreateTimerIntent:source:
hasDefaultTitle
initWithLabel:duration:type:
initWithIntent:response:
mtSetIntentDonorFromSource:
donateInteractionWithCompletion:
donatedTimerIDs
_donatedTimerIDs
T@"MTTimerStorage",R,N,V_storage
T@"NSMutableSet",R,N,V_donatedTimerIDs
_isUpdateNeeded
_getCachedAlarmsWithCompletion:doSynchronous:
initWithUpdateBlock:
markNeedsUpdate
getCachedAlarmsWithCompletion:
getCachedAlarmsSyncWithCompletion:
updateBlock
setUpdateBlock:
setNextAlarm:
needsUpdate
setNeedsUpdate:
cacheLock
setCacheLock:
_needsUpdate
_cacheLock
_updateBlock
_nextAlarm
T@?,C,N,V_updateBlock
T@"MTAlarm",&,N,V_nextAlarm
TB,N,V_needsUpdate
T{os_unfair_lock_s=I},N,V_cacheLock
_shouldNotifyForTrigger:
postNotificationName:object:userInfo:deliverImmediately:
postNotificationForScheduledTimer:completionBlock:
dismissNotificationsForTimer:
serialSchedulerForObject:
_checkIfRestoreDone
isSystemRestoreDone
_handleRestoreDone
restoreDoneHandled
_restoreNotification
restoreDidFinish
setRestoreDoneHandled:
checkSystemReady
_verifyRestoreDone
_handleF5Reset
_restoreDoneHandled
T@"<MTSystemStateDelegate>",W,N,V_delegate
TB,N,V_restoreDoneHandled
T@"<MTScheduler>",&,N,V_serializer
sharedManagerWithPreferences:
initWithPreferences:
setLastModified:
cityDataNeedsUpdate
addDefaultCitiesIfNeeded
objectAtIndex:
worldClockCityFromPersistenceRepresentation:
updateALDataWithCity:
replaceObjectAtIndex:withObject:
removeObjectAtIndex:
pushCityPropertiesToPreferences
cityDataUpdated
alCityId
arrayWithObjects:
citiesMatchingIdentifiers:
synchronize
_notifyNano
sharedManager
allCities
initWithALCity:
worldClockCityFromPersistenceDictionary:
worldClockCityFromPersistenceArray:
bestCityForLegacyCity:
fixUpCityProperties:
isWorldClockCityProperties:
initWithProperties:
defaultCitiesAdded
defaultCitiesShownInWorldClock
defaultCitiesForLocaleCode:options:
setDefaultCitiesAdded:
saveCities
properties
setCities:
isCachedLanguageStaleForProperties:
dictionaryWithDictionary:
idUrl
canAddCity
indexOfObject:
insertObject:atIndex:
standardUserDefaults
boolForKey:
dictionaryWithContentsOfFile:
writeToFile:atomically:
defaultsKeys
synchronizeUserDefaultsDomain:keys:
citiesWithIdentifiers:
citiesMatchingName:
sortedArrayUsingComparator:
loadCities
updatedTimezoneForCityWithID:
checkIfCitiesModified
cityWithIdUrl:
addCity:
removeCity:
removeCityAtIndex:
removeAllCities
moveCityFromIndex:toIndex:
_dirty
_cities
T@"NSDate",&,N,VlastModified
T@"NSArray",R,N,V_cities
initWithAlarmStorage:currentDateProvider:
updateSleepStateWithSleepAlarm:
finishWithNoResult
mtSynchronousResult:
notifyObserversForSleepAlarmChange:
notifyObserversForSleepAlarmChangeIfNecessary:
_notifyObserversForSleepAlarmChange:
handleBedtimeForAlarm:date:
handleBedtimeReminderForAlarm:date:
handleWakeUpAlarmForAlarm:date:
handleWakeUpTimeForAlarm:date:
handleSnoozeOfGoToBedNotificationForAlarm:date:
handleSnoozeForAlarm:date:
handleConfirmationOfGoToBedNotificationForAlarm:date:
handleDismissForAlarm:dismissAction:date:
handleSleepSessionEndedForAlarm:date:reason:
updateSleepState
stateMachineUserWokeUp:
setSleepModeMonitor:
isSleepModeOn
pairedDevicePreferencesChanged:
cachedSleepAlarm
setCachedSleepAlarm:
sleepStateResolved
setSleepStateResolved:
alarmTimeoutScheduler
setAlarmTimeoutScheduler:
sleepModeMonitor
_cachedSleepAlarm
_sleepStateResolved
_alarmTimeoutScheduler
_sleepModeMonitor
T@"MTSleepCoordinatorStateMachine",&,N,V_stateMachine
T@"MTAlarm",&,N,V_cachedSleepAlarm
T@"NAFuture",&,N,V_sleepStateResolved
T@"<MTAlarmStorage>",C,N,V_alarmStorage
T@"MTXPCScheduler",&,N,V_alarmTimeoutScheduler
T@"MTSleepModeMonitor",&,N,V_sleepModeMonitor
nextExpectedWakeUpDateAfterDate:
nextExpectedBedtimeDateAfterDate:
transactionWithDescription:timeout:
transactionWithDescription:timeout:timeoutBlock:
initWithDescription:timeout:timeoutBlock:
transaction
transactionWithDescription:
setTransaction:
_transaction
T@"NSObject<OS_os_transaction>",&,N,V_transaction
objectIdentifier
sequencer
changeType
deleteMultiple
_responseToDeleteTimerIntent:withDeletedTimers:error:dryRun:
_deleteTimer:multiple:dryRun:completion:
setDeletedTimers:
_onlyUnnamedTimerInTimers:forTargetTimer:allowMultiple:
remainingTime
handleDeleteTimer:completion:
confirmDeleteTimer:completion:
resolveTargetTimerForDeleteTimer:withCompletion:
resolveDeleteMultipleForDeleteTimer:withCompletion:
toDuration
toLabel
_responseToSetTimerAttributeIntent:withUpdatedTimer:error:dryRun:
_updateTimer:toDuration:toLabel:dryRun:completion:
initWithTimerResolutionResult:
unsupportedForReason:
setUpdatedTimer:
lowercaseString
setDuration:
_updateTimer:dryRun:updateBlock:completion:
handleSetTimerAttribute:completion:
confirmSetTimerAttribute:completion:
resolveTargetTimerForSetTimerAttribute:withCompletion:
resolveToDurationForSetTimerAttribute:withCompletion:
resolveToLabelForSetTimerAttribute:withCompletion:
setDismissAction:
dismissAction
_syncDate
_syncVersion
_dismissAction
_snoozeAction
_syncID
T@"MTPBSnoozeAction",&,N,V_snoozeAction
T@"MTPBDismissAction",&,N,V_dismissAction
Td,N,V_syncDate
T@"NSString",&,N,V_syncID
Td,N,V_syncVersion
_loadDefaultAlarmSound
_loadDefaultTimerSound
_saveDefaultAlarmSound:
_saveDefaultTimerSound:
initWithToneIdentifier:vibrationIdentifer:volume:
initWithMediaItemIdentifier:vibrationIdentifier:volume:
unsignedIntegerValue
defaultToneIdentifierForAlertType:
isEqualToSound:
isSilent
initWithType:
setTopic:
setForPreview:
alertWithConfiguration:
playWithCompletionHandler:
_updateAudioVolumeDynamicallyToValue:
setDefaultSound:forCategory:
soundByUpdatingVibrationIdentifier:
soundByUpdatingVolume:
interruptAudio
previewWithCompletionHandler:
updatePreview:
_toneIdentifier
_mediaItemIdentifier
_vibrationIdentifier
TQ,R,N,V_soundType
T@"NSString",R,N,V_toneIdentifier
T@"NSNumber",R,N,V_mediaItemIdentifier
T@"NSString",R,N,V_vibrationIdentifier
T@"NSNumber",R,N,V_soundVolume
processInfo
operatingSystemVersionString
clearOutCityUpdatePref
syncDismissOfObjectWithIdentifier:dismissDate:date:version:
initWithDismissedObjectIdentifier:dismissDate:date:version:
merge:
conflicts:
preferred:
Tf,R,N
setDismissDate:
setIdentifier:
setDate:
_dismissDate
_identifier
_date
T@"NSString",&,N,V_identifier
T@"NSDate",&,N,V_dismissDate
T@"NSDate",&,N,V_date
Tf,N,V_syncVersion
initWithAlarmManager:
_alarmManager
T@"MTAlarmManager",R,N,V_alarmManager
timeIntervalForKey:isValid:defaultValue:
_quiescingWindow
_performScheduleSnapshot
_bundleID
setAlarms:
loadLegacyData
alarmFromOldAlarm:
setSleepAlarm:
purgeLegacyData
cancelNotifications
_alarms
_sleepAlarm
T@"NSMutableArray",&,N,V_alarms
T@"MTAlarm",&,N,V_sleepAlarm
initWithHour:minute:
sleepAlarmWithSchedule:
sleepScheduleString:
sleepAlarmWithId:
defaultPlayOptionsIsSleepAlarm:
setPlayOptions:
defaultSleepModeOptions
setSleepModeOptions:
sleepAlarmWithHour:minute:
setDay:
sleepAlarmWithHour:minute:bedtimeHour:bedtimeMinute:
_initCommon
initWithCurrentTimeFromCurrentDateProvider:
components:fromDate:
initWithHour:minute:currentDateProvider:
UUID
defaultPlayOptions
pushAlertsEnabled
setOverriddenForDate:
overriddenForDate
month
year
setSecond:
URLWithString:
sleepDurationSeconds
mtTimeIntervalSinceComponents:now:
nextTrigger
nextFireDateAfterDate:includeBedtimeNotification:
nextTriggerAfterDate:includeBedtimeNotification:
nextTriggerAfterDate:includeSnooze:includeBedtimeNotification:
nextTriggersAfterDate:includeSnooze:includeBedtimeNotification:
nextTriggersAfterDate:inclusionOptions:
_earliestTriggerDateForDate:
singleTimeOverrideDateInCalendar:
triggerWithDate:triggerType:isPastOverrideEvent:
_nextDateHelperWithDate:calendar:
mtLatest:
_date:isOnDay:calendar:
dateFromComponents:
mtNextDateAfterDate:matchingUnit:value:
earlierDate:
nextTriggerAfterDate:ofType:
_isEqualToAlarm:checkLastModified:
bedtimeReminder
sleepMode
sleepModeOptions
sleepTracking
playOptions
onboardingVersion
siriContext
initWithIdentifier:
_copyStateOntoAlarm:
setBedtimeReminder:
setSleepMode:
setSleepTracking:
setTimeInBedTracking:
setOnboardingVersion:
setBypassReload:
_updatePropertiesFromDeserializer:
isValidDateComponent:
descriptionWithMultilinePrefix:
succinctDescriptionBuilder
build
builderWithObject:
appendObject:withName:
appendBool:withName:ifEqualTo:
appendBool:withName:
descriptionBuilderWithMultilinePrefix:
appendInteger:withName:
appendString:withName:skipIfEmpty:
appendObject:withName:skipIfNil:
sleepAlarmWithHour:minute:year:month:day:bedtimeHour:bedtimeMinute:
_isInternalBuild
mostRecentlyUpdatedAlarmForAlarms:
succinctDescription
mutableCopyWithZone:
getOverriddenDate
alarmURL
setFiring:
sleepDuration
nextFireDateAfterDate:
nextTriggersAfterDate:
overridesNextAlarm:date:calendar:
isEqualIgnoringLastModifiedDate:
_sleepSchedule
_sleepMode
_sleepTracking
_timeInBedTracking
_bypassReload
_day
_month
_year
_bedtimeHour
_bedtimeMinute
_bedtimeReminder
_sleepModeOptions
_repeatSchedule
_playOptions
_overriddenForDate
_snoozeFireDate
_bedtimeSnoozeFireDate
_firedDate
_dismissedDate
_dismissedAction
_bedtimeFiredDate
_bedtimeDismissedDate
_bedtimeDismissedAction
_onboardingVersion
_siriContext
TQ,N,V_hour
TQ,N,V_minute
TQ,N,V_bedtimeHour
TQ,N,V_day
TQ,N,V_month
TQ,N,V_year
TQ,N,V_bedtimeMinute
TQ,N
T@"NSNumber",C,N,V_bedtimeReminder
TB,N,V_sleepMode
TQ,N,V_sleepModeOptions
TB,N,V_sleepTracking
T@"NSDate",C,N,V_overriddenForDate
TB,N,V_timeInBedTracking
TB,N,V_sleepSchedule
TQ,N,V_repeatSchedule
TB,N,GisEnabled,V_enabled
TQ,N,V_playOptions
TB,N,GisSleepAlarm,V_sleepAlarm
T@"NSDate",C,N,V_snoozeFireDate
T@"NSDate",C,N,V_bedtimeSnoozeFireDate
T@"NSDate",C,N,V_firedDate
T@"NSDate",C,N,V_dismissedDate
TQ,N,V_dismissedAction
T@"NSDate",C,N,V_bedtimeFiredDate
T@"NSDate",C,N,V_bedtimeDismissedDate
TQ,N,V_bedtimeDismissedAction
T@"NSDate",C,N,V_keepOffUntilDate
T@"NSString",C,N,V_title
T@"MTSound",C,N,V_sound
TQ,N,V_onboardingVersion
T@"NSDictionary",C,N,V_siriContext
TB,N,V_bypassReload
T@"NSUUID",R,N,V_alarmID
T@"NSURL",R,N
TB,R,N,GisFiring
TB,R,N,GisSnoozed
T@"NSDictionary",C,D,N
TB,D,N
TQ,D,N
T@"NSNumber",C,D,N
TB,D,N,GisEnabled
T@"NSString",C,D,N
T@"MTSound",C,D,N
platformSpecificSourceBundleIdentifier
setSourceBundleIdentifier:
stringByAppendingPathComponent:
writeSession:
sleepSessionTracker
archiveSession:
waitForUnlock
_unprocessedSessions
defaultManager
archivedSessionDataPath
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
initRequiringSecureCoding:
finishEncoding
encodedData
archivedSessionDataFile
_writeSessions:
mtFinishWithFuture:
_hasUnprocessedSessions
_writeSessionData
deviceFirstUnlocked
removeObserver:name:object:
fileExistsAtPath:isDirectory:
initWithContentsOfFile:
_removeSessionDataFile
finishDecoding
removeItemAtPath:error:
categoryTypeForIdentifier:
authorizationStatusForType:
na_genericError
globalAsyncScheduler
combineAllFutures:ignoringErrors:scheduler:
maximumAllowedDuration
localDevice
categorySampleWithType:value:startDate:endDate:device:metadata:
sleepSampleWithInterval:sampleType:metadata:
initWithAlarmStorage:sleepCoordinator:sleepSessionTracker:
saveSessionData
healthStore
setHealthStore:
setArchivedSessionDataPath:
setArchivedSessionDataFile:
setSleepSessionTracker:
_healthStore
_archivedSessionDataPath
_archivedSessionDataFile
_sleepSessionTracker
T@"HKHealthStore",&,N,V_healthStore
T@"NSString",C,N,V_archivedSessionDataPath
T@"NSString",C,N,V_archivedSessionDataFile
T@"<MTSleepSessionTracker>",&,N,V_sleepSessionTracker
_sharedPublicMetrics
logAlarmAdded:
logAlarmDeleted:
logAlarmUpdated:
logTimerAdded
logMultipleTimersAdded:
logTimerDeleted
logTimerUpdated
relayFrameworkNotification:
userInfo
refreshManagers
refreshManagersForPreferences:localNotifications:
sharedRelay
setRefreshManagers:
_refreshManagers
TB,N,V_refreshManagers
initWithUserDefaults:
initWithSuiteName:
setFloat:forKey:notification:
setObject:forKey:notification:
floatForKey:exists:
setBool:forKey:notification:
boolForKey:exists:
setInteger:forKey:notification:
integerForKey:exists:
setTimeInterval:forKey:notification:
timeIntervalForKey:exists:
_postNotification:
_distributedNotificationForLocalNotification:
distributedNotificationPosted:
weakObjectsHashTable
_localNotificationForDistributedNotification:
_cleanupObserversForNotification:
notificationObject
allObjects
setBool:forKey:
setInteger:forKey:
setTimeInterval:forKey:
timeIntervalForKey:defaultValue:
registerNotification:observer:
unregisterNotification:observer:
userDefaults
setUserDefaults:
_userDefaults
T@"NSUserDefaults",&,N,V_userDefaults
T@"NSMutableDictionary",&,N,V_observers
registerForNotifications
unregisterForNotifications
sensitiveUIStateChanged
_isVendorRelease
_hideSensitiveUI
sharedMonitor
_handleNotification
addSensitiveUIObserver:
removeSensitiveUIObserver:
shouldHideForSensitivity:
notifyToken
setNotifyToken:
hideSensitiveUI
setHideSensitiveUI:
needPrefsUpdate
setNeedPrefsUpdate:
lock
setLock:
_needPrefsUpdate
_lock
Ti,N,V_notifyToken
TB,N,V_hideSensitiveUI
TB,N,V_needPrefsUpdate
T{os_unfair_lock_s=I},N,V_lock
localeWithLocaleIdentifier:
descriptionWithLocale:
mtMidnightForDate
mtDescription
mtNow
mtEarliest:
_mtNextDateAfterDate:matchingComponents:backwards:
_optionsForBackwards:
nextDateAfterDate:matchingComponents:options:
_nextDateHelperAfterDate:nextDateBlock:
_mtNextDateAfterDate:matchingUnit:value:backwards:
nextDateAfterDate:matchingUnit:value:options:
daylightSavingTimeOffsetForDate:
locale
mtIsIn24HourTime
mtPreviousDateBeforeDate:matchingUnit:value:
mtDateRequiresSingularTimeString:
mtTimeIntervalSinceComponents:
mtURLForClockAppSection:timerManager:
currentTimer
mtURLForScheme:
scheme
host
path
mtClockAppSection
mtIsList
mtIsForLastTimer
mtID
mtURLForClockAppSection:
Ti,R,N
mtUserActivityWithActivityType:title:
mtUserActivityWithActivityType:title:keywords:
initWithActivityType:
setEligibleForHandoff:
setEligibleForSearch:
setEligibleForPublicIndexing:
setKeywords:
processName
_setDonatedBySiri:
performCancelableBlock:
afterDelay:performBlock:
performSyncBlock:
initWithQueue:
internalScheduler
internalQueue
_internalScheduler
_internalQueue
T@"<NAScheduler>",R,N,V_internalScheduler
T@"NSObject<OS_dispatch_queue>",R,N,V_internalQueue
serialSchedulerWithName:
null
mtContainsDate:
mtDateIntervalWithEndDate:duration:
mtTimeOnlyFormatter
finishWithResult:error:
isFinished
na_timeoutError
initWithTimeout:
setDoesRelativeDateFormatting:
setFormattingContext:
setUnitsStyle:
dateWithTimeIntervalSinceNow:
numberWithLong:
stringFromDateComponents:
setDateFormat:
dateFromString:
dayAndTimeZoneOffsetStringFromDate:withTimeZoneOffset:timeZoneAbbreviation:spaceBeforeTimeDesignator:hoursOnly:numericOnly:
logMessage:
widgetURL
widgetOverrideDate
isCachedLanguageStaleForProperties:systemLanguage:
initWithTimeZone:countryCode:name:countryName:unlocalizedName:unlocalizedCountryName:
initWithFormat:
initWithObjects:
initWithInt:
countryName
unlocalizedName
unlocalizedCountryName
localeCode
appendFormat:
unlocalizedExampleCity
initWithALCityIdentifier:
unlocalizedCityName
countryCode
alCity
_alCity
_timeZone
_name
_countryName
_countryCode
_unlocalizedName
_unlocalizedCountryName
T@"ALCity",R,N,V_alCity
T@"NSNumber",R,N
fireDate
clockAppSectionURL
setFireDate:
_fireDate
T@"NSDate",C,N,V_fireDate
T@"NSString",C,N,V_identifier
T@"NSURL",R,C,N
setNextAlarms:
setAlarmManager:
calculateNextAlarms
_handleAlarmsDidChange
alarmsSyncIncludingSleepAlarm:
updateHandler
nextAlarms
setUpdateHandler:
_nextAlarms
_updateHandler
T@"NSSet",&,N,V_nextAlarms
T@"MTAlarmManager",&,N,V_alarmManager
T@?,C,N,V_updateHandler
T@"NSDateComponents",C,D,N
currentTime
city
timeZoneDisplayName
timeZoneAbbreviation
timeZoneOffset
timeZoneOffsetFromGMT
isDaylightSavingTime
successWithResolvedObject:
disambiguationWithObjectsToDisambiguate:
confirmationRequiredWithObjectToConfirm:
successWithResolvedMTWorldClock:
disambiguationWithMTWorldClocksToDisambiguate:
confirmationRequiredWithMTWorldClockToConfirm:
initWithBundleIdentifier:
notificationCategories
setNotificationCategories:
setWantsNotificationResponsesDelivered
iconWithSystemImageName:
actionWithIdentifier:title:options:icon:
categoryWithIdentifier:actions:intentIdentifiers:options:
setListPriority:
actionWithIdentifier:title:options:
alarmCategories
unionSet:
timerCategories
bedtimeCategories
contentForScheduledAlarm:
postNotificationForScheduledAlarm:content:completionBlock:
requestIdentifierForScheduledAlarm:
requestWithIdentifier:content:trigger:destinations:
isForNotification
_notificationCenterForScheduledAlarm:
addNotificationRequest:withCompletionHandler:
dismissNotificationsForAlarm:includeMainIdentifier:
isWakeUpRelated
_goToBedIdentifier:
_allIdentifiersForAlarm:includeMainIdentifier:
_allIdentifiersForAlarm:includeMainIdentifier:includeSnooze:
dismissNotificationsForAlarm:includeMainIdentifier:includeSnooze:
_allIdentifiersForAlarm:
tearDownNotificationsForEventIdentifiers:
cancelNotificationsWithIdentifiers:
mtStringByRemovingNotificationDate
removeDeliveredNotificationsWithIdentifiers:
getDeliveredNotificationsWithCompletionHandler:
interruptAudioAndLockDeviceWithCompletionBlock:
contentForScheduledTimer:
_notificationCenterForScheduledTimer
currentCallCount
incomingCall
mtStringByAppendingNotificationDate:
_mutableContentForScheduledAlarmWithCommonSettings:
_setSpecificContent:forScheduledAlarm:
categoryForScheduledAlarm:
setCategoryIdentifier:
launchURLForScheme:
setDefaultActionURL:
userInfoForAlarm:
_setSpecificContent:forGoToBedNotification:
_setSpecificContent:forSnoozeCountdownNotification:
_setSpecificContent:forNormalScheduledAlarm:
_setGoToBedTitleAndBody:forGoToBedNotification:
setExpirationDate:
_setSnoozeCountdownTitleAndBody:forSnoozeCountdownNotification:
setShouldSuppressScreenLightUp:
setShouldPreventNotificationDismissalAfterDefaultAction:
setShouldIgnoreDoNotDisturb:
setBody:
setShouldBackgroundDefaultAction:
setShouldPreemptPresentedNotification:
setAllowedUnits:
_wakeUpAlarmStringForAlarm:
_timeFormatter
categoryForScheduledTimer:
userInfoForTimer:
isScheduled
notificationCenters
notificationPrefixes
_durationComponentsFormatter
setupNotificationCenter
registerActionHandler:
postBedtimeNotificationForAlarm:date:
setNotificationCenters:
actionHandler
setActionHandler:
_notificationCenters
_actionHandler
T@"NSDictionary",&,N,V_notificationCenters
T@"MTUserNotificationActionDispatcher",&,N,V_actionHandler
setDefaultDuration:
defaultSound
T@"MTTimer",&,N,V_timer
initWithProperty:changedValue:originalValue:
property
setProperty:
changedValue
setChangedValue:
originalValue
setOriginalValue:
_property
_changedValue
_originalValue
T@"NSString",C,N,V_property
T@,&,N,V_changedValue
T@,&,N,V_originalValue
dictionaryFromChanges:
initWithChangeDictionary:
changeDictionary
isEqualToDictionary:
changedProperties
isEqualToSet:
na_all:
_isEqualToChangeSet:checkOriginalValues:
changeSetWithChangesFromObject:toObject:inProperties:
initWithChanges:
intersectsSet:
changedValueForProperty:hasProperty:
na_dictionaryByMappingValues:
isEquivalentToChangeSet:
changeSetByAddingChangeSet:
hasChangesInCommonWithChangeSet:
deserializedChangedValueForProperty:hasProperty:
_deserializer
setChangedProperties:
setChangeDictionary:
_changedProperties
_changeDictionary
T@"NSSet",&,N,V_changedProperties
T@"NSDictionary",&,N,V_changeDictionary
sleepModeEndDate
_sleepModeEndDate
T@"NSDate",R,N,V_sleepModeEndDate
resetSystemTimeZone
Td,N,V_dismissDate
confirmationRequiredWithTimeIntervalToConfirm:
postNotificationForUserPreferences:localNotifications:
postNotificationForAlarmsEdited
postNotificationForAlarmActiveChanged
cancelTimer
initWithName:assertionTimeout:
takeAssertion
startTimer:block:
_powerAssertion
delay
completableBlock
_scheduleTask:withCompletion:
tasks
completionBlock
setDelay:
setCompletableBlock:
_delay
_completableBlock
Td,N,V_delay
T@?,C,N,V_completableBlock
T@"MTGCDTimer",&,N,V_timer
setTasks:
setCompletionBlock:
_tasks
_completionBlock
T@"NSArray",C,N,V_tasks
T@?,C,N,V_completionBlock
initWithType:name:powerAssertionTimeout:
notificationWithType:name:
setType:
setName:
powerAssertion
setPowerAssertion:
_type
Tq,N,V_type
T@"NSString",C,N,V_name
T@"MTPowerAssertion",&,N,V_powerAssertion
handleGetAlarms:completion:
confirmGetAlarms:completion:
initWithName:
assertionTimeout
_assertionTimeout
Td,R,N,V_assertionTimeout
T@"NSString",R,N,V_name
_getCachedTimersWithCompletion:doSynchronous:
getCachedTimersWithCompletion:
getCachedTimersSyncWithCompletion:
setNextTimer:
_nextTimer
T@"MTTimer",&,N,V_nextTimer
isEqualToTime:
Td,R,N
initWithTimeInterval:
_remainingTime
Td,R,N,V_remainingTime
initWithDate:currentDateProvider:
initWithDate:
T@"NSDate",C,N,V_date
initWithMetrics:
_initWithConnectionProvidingBlock:metrics:
_initWithConnectionProvidingBlock:metrics:notificationCenter:
initWithTimerManager:
connectionProvider
cache
_getCachedTimersWithFuture:finishBlock:
errorOnlyCompletionHandlerAdapter
addTimer:withCompletion:
updateTimer:withCompletion:
_updateTimer:doSynchronous:
removeTimer:withCompletion:
dismissTimerWithIdentifier:withCompletion:
repeatTimerWithIdentifier:withCompletion:
timerByUpdatingWithState:
_updateCurrentTimerWithState:
_validateCanStartTimer:
_runningTimerFromCurrentTimer:withDuration:
timersSync
getCurrentTimerSync
_updateCurrentTimerWithStateSync:
warmUp
T@,R,N
T@"NSNotificationCenter",R,N
initWithConnectionProvider:metrics:
initWithConnectionProvider:metrics:notificationCenter:
nextTimersForDate:maxCount:
dismissTimerWithIdentifier:
repeatTimerWithIdentifier:
stopCurrentTimer
pauseCurrentTimer
resumeCurrentTimer
startCurrentTimerWithDuration:
startCurrentTimerWithDurationSync:
stopCurrentTimerSync
pauseCurrentTimerSync
resumeCurrentTimerSync
setCache:
_connectionProvider
_cache
T@"MTTimerManagerExportedObject",&,N,V_exportedObject
T@"MTXPCConnectionProvider",R,N,V_connectionProvider
T@"MTTimerCache",&,N,V_cache
T@"NSNotificationCenter",&,N,V_notificationCenter
_didReceiveTimerServerReadyNotification:
timerManager
dictionaryWithObject:forKey:
postNotificationName:object:userInfo:
timersAdded:
timersUpdated:
timersRemoved:
timerFired:
timerDismissed:
nextTimerChanged:
T@"MTTimerManager",R,W,N,V_timerManager
resetMultiple
_responseToResetTimerIntent:withResetTimers:error:dryRun:
_handleResetTimer:dryRun:completion:
setResetTimers:
handleResetTimer:completion:
confirmResetTimer:completion:
resolveTargetTimerForResetTimer:withCompletion:
resolveResetMultipleForResetTimer:withCompletion:
containsObserver:
observersLock
setObserversLock:
_observersLock
T{os_unfair_lock_s=I},N,V_observersLock
T@"NSHashTable",&,N,V_observers
initWithEvent:
scheduleActivityWithCriteria:activityHandler:performImmediately:
scheduleActivityWithCriteria:activityHandler:
unscheduleActivity
eventName
setEventName:
_eventName
T@"NSString",C,N,V_eventName
na_safeAddObjectsFromArray:
_getCachedAlarmsWithFuture:finishBlock:
_alarmsIncludingSleepAlarm:doSynchronous:
nextAlarmsForDate:maxCount:includeSleepAlarm:
nextAlarmsForDate:maxCount:includeSleepAlarm:includeBedtimeNotification:
_nextAlarmsForDate:maxCount:includeSleepAlarm:includeBedtimeNotification:doSynchronous:
_sortedNextAlarmsAfterDate:includeSleepAlarm:includeBedtimeNotification:doSynchronous:
_filteredAlarms:afterDate:maxCount:filter:
nextAlarmsInRange:maxCount:includeSleepAlarm:includeBedtimeNotification:
_nextAlarmsInRange:maxCount:includeSleepAlarm:includeBedtimeNotification:doSynchronous:
_filterSleepAlarmOverrides:date:
_sortedAlarms:date:includeBedtimeNotification:
nextAlarmsForDateSync:maxCount:includeSleepAlarm:
nextAlarmsForDateSync:maxCount:includeSleepAlarm:includeBedtimeNotification:
nextAlarmsInRangeSync:maxCount:includeSleepAlarm:includeBedtimeNotification:
alarmWithIDString:includeSleep:
alarmsSync
objectAtIndexedSubscript:
alarmCountIncludingSleepAlarm:
nextSleepAlarmWithCompletion:
addAlarm:withCompletion:
assistantSyncNotificationName
cStringUsingEncoding:
updateAlarm:withCompletion:
removeAlarm:withCompletion:
_alarmWithIDStringAsync:
snoozeAlarmWithIdentifier:snoozeAction:
snoozeAlarmWithIdentifier:snoozeAction:withCompletion:
dismissAlarmWithIdentifier:dismissAction:
dismissAlarmWithIdentifier:dismissAction:withCompletion:
firingAlarmCount
nextAlarmsForDate:maxCount:
nextAlarmsForDate:maxCount:includeBedtimeNotification:
nextAlarmsInRange:maxCount:includeSleepAlarm:
_sortedNextAlarmsAfterDate:includeSleepAlarm:includeBedtimeNotification:
nextAlarmsForDateSync:maxCount:
nextAlarmsForDateSync:maxCount:includeBedtimeNotification:
nextAlarmsInRangeSync:maxCount:includeSleepAlarm:
sleepAlarmSync
sleepAlarmsSync
nextAlarmSync
alarmWithIDString:
indexForAlarm:
alarmAtIndex:
alarmCount
nextSleepAlarm
removeAlarm:
snoozeAlarmWithIdentifier:
dismissAlarmWithIdentifier:
T@"MTAlarmManagerExportedObject",&,N,V_exportedObject
T@"MTAlarmCache",&,N,V_cache
_didReceiveAlarmServerReadyNotification:
mtNotifiyingQueue
alarmsAdded:
alarmsUpdated:
alarmsRemoved:
alarmSnoozed:
alarmDismissed:
alarmFired:
nextAlarmChanged:
T@"MTAlarmManager",R,W,N,V_alarmManager
updateSleepAlarmsWithCompletion:
resetSleepAlarmSnoozeStateWithCompletion:
updateSleepAlarms
resetSleepAlarmSnoozeState
buildConnection
supportsSessions
sessionsManager
hasActiveTimerSession
processTimerUpdate:
server
stopSession
finishSessionWithTimer:
startSessionWithEstimatedEndDate:
createSessionWithTimer:
normalizedTimeString:state:
pauseSessionWithTimeRemainingString:
setupInterface
endpointForMachName:service:instance:
connectionWithEndpoint:
userInitiated
setServiceQuality:
setInterface:
setInterfaceTarget:
remoteProcess
setActivationHandler:
activate
setConnection:
setTargetQueue:
configureConnection:
interfaceWithIdentifier:
protocolForProtocol:
setServer:
pauseTimer
resumeTimer
stopTimer
resendTimerDataEntry
setClient:
setClientMessagingExpectation:
attributeWithDomain:name:
remoteTargetWithLaunchingAssertionAttributes:
updateTimerWithState:
setSessionsManager:
connectionQueue
setConnectionQueue:
_sessionsManager
_connectionQueue
T@"MTSessionsManager",&,N,V_sessionsManager
T@"BSServiceConnection<BSServiceConnectionClient>",&,N,V_connection
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionQueue
componentsSeparatedByString:
timeZoneForSecondsFromGMT:
stringByAppendingFormat:
bs_dayPeriodForDate:inLocale:
bundleWithIdentifier:
mtGreetingString:
addAlarms:
alarmsCount
clearAlarms
alarmsAtIndex:
alarmsType
indexesOfObjectsPassingTest:
objectsAtIndexes:
arrayWithCapacity:
immediateScheduler
combineAllFutures:scheduler:
_alternateTimersForTargetTimerState:type:inTimers:allowedTimerStates:
setMatchedTimers:
setUnmatchedTimers:
handleSearchForTimers:completion:
confirmSearchForTimers:completion:
resolveLabelForSearchForTimers:withCompletion:
resolveDurationForSearchForTimers:withCompletion:
resolveStateForSearchForTimers:withCompletion:
resolveTypeForSearchForTimers:withCompletion:
determineNextState:
nextSleepModeStartDateAfterDate:
nextSleepModeEndDate
nextSleepModeEndDateAfterDate:
nextSleepModeStartDate
setGroupIdentifier:
prepareAlarms
_bundleIDForUNSchedule
_loadUserPreferences
_loadScheduledNotifications
_upgradeFromSpringboardDefaults
_loadAlarms
_reconcileAlarmsAndNotifications
_loadTimerDefaults
getPendingNotificationRequestsWithCompletionHandler:
_upgradeIfNeverAttempted
_discardOldVersion
_upgrade
_upgradeAlarms
_upgradeTimers
_copyLegacyAlarmsFromPreferences
sortUsingSelector:
_discardOldAlarms
_discardOldTimers
_copyLegacySleepAlarmFromPreferences
_purgeAlarmsAndTimers
_cancelNotifications
removeAllPendingNotificationRequests
repeatScheduleFromOldAlarm:
soundFromOldAlarm:
_numberFromString:
numberFromString:
setDefaultSound:
scheduledNotifications
setScheduledNotifications:
loaded
setLoaded:
purged
setPurged:
_loaded
_purged
_defaultDuration
_defaultSound
_scheduledNotifications
T@"NSObject<OS_dispatch_queue>",&,N,V_serializer
T@"NSArray",&,N,V_scheduledNotifications
T@"NSArray",&,N,V_alarms
T@"Alarm",&,N,V_sleepAlarm
Td,N,V_defaultDuration
T@"NSString",C,N,V_defaultSound
TB,N,V_loaded
TB,N,V_purged
initWithConnectionInfo:errorHandler:
initWithMachServiceName:
valueForEntitlement:
_didInvalidateConnection:
addClientConnection:clientLink:
removeClientConnection:
processIdentifier
clientInfoForConnection:clientLink:
clients
_connectedClients
currentConnection
_currentClientForConnection:
clientLink
performBlockOnAllClients:excludingCurrent:
performBlockOnClientInfos:excludeCurrent:
_performBlockOnClientInfos:excludingClient:
listener:shouldAcceptNewConnection:
startListening
connectedClients
currentClient
performBlockOnCurrentClient:
performBlockOnAllClients:
performBlockOnAllClients:excludingClient:
stopListening
setClients:
connectionListener
setConnectionListener:
_clients
_connectionListener
T@"NSMutableSet",&,N,V_clients
T@"NSXPCListener",&,N,V_connectionListener
_setupNotificationCenter
_setupAlarms
_setupTimers
_setupSync
_setupInitialListeners
rescheduleTimers
_setupSecondaryListeners
sharedDeviceListener
systemStateListener
alarmServer
alarmScheduler
timerServer
timerScheduler
launchDate
_diagnosticProviders
_removeUserDefaultsDataIfNecessary:
_removeUserDefaultsData
agent
sleepManager
setLaunchDate:
systemReady
setSystemReady:
notificationManager
setNotificationManager:
setSystemStateListener:
languageChangeListener
setLanguageChangeListener:
diagnostics
setDiagnostics:
timeListener
setTimeListener:
setAlarmServer:
setAlarmScheduler:
alarmSnapshot
setAlarmSnapshot:
setTimerServer:
setTimerScheduler:
timerSnapshot
setTimerSnapshot:
alarmIntentDonor
setAlarmIntentDonor:
timerIntentDonor
setTimerIntentDonor:
coreDuetMonitor
setCoreDuetMonitor:
widgetProvider
setWidgetProvider:
timerSessionsCoordinator
setTimerSessionsCoordinator:
sleepSessionManager
setSleepSessionManager:
alarmSyncDataModel
setAlarmSyncDataModel:
_systemReady
_sleepManager
_launchDate
_notificationManager
_systemStateListener
_languageChangeListener
_diagnostics
_timeListener
_alarmServer
_alarmScheduler
_alarmSnapshot
_timerServer
_timerScheduler
_timerSnapshot
_alarmIntentDonor
_timerIntentDonor
_coreDuetMonitor
_widgetProvider
_timerSessionsCoordinator
_sleepSessionManager
_alarmSyncDataModel
T@"NSDate",&,N,V_launchDate
TB,N,V_systemReady
T@"MTAgentNotificationManager",&,N,V_notificationManager
T@"MTSystemStateListener",&,N,V_systemStateListener
T@"MTLanguageChangeListener",&,N,V_languageChangeListener
T@"MTAgentDiagnosticListener",&,N,V_diagnostics
T@"MTTimeListener",&,N,V_timeListener
T@"MTAlarmServer",&,N,V_alarmServer
T@"MTAlarmScheduler",&,N,V_alarmScheduler
T@"MTAlarmSnapshot",&,N,V_alarmSnapshot
T@"MTTimerServer",&,N,V_timerServer
T@"MTTimerScheduler",&,N,V_timerScheduler
T@"MTTimerSnapshot",&,N,V_timerSnapshot
T@"<MTNotificationCenter>",&,N,V_notificationCenter
T@"MTAlarmIntentDonor",&,N,V_alarmIntentDonor
T@"MTTimerIntentDonor",&,N,V_timerIntentDonor
T@"MTCoreDuetMonitor",&,N,V_coreDuetMonitor
T@"MTWidgetProvider",&,N,V_widgetProvider
T@"MTTimerSessionsCoordinator",&,N,V_timerSessionsCoordinator
T@"MTSleepCoordinator",&,N,V_sleepCoordinator
T@"MTSleepSessionManager",&,N,V_sleepSessionManager
T@"MTSleepSessionTracker",&,N,V_sleepSessionTracker
T@"MTAlarmSyncDataModel",&,N,V_alarmSyncDataModel
T@"MTSleepManager",R,N,V_sleepManager
_registerForNotifications
mainQueue
dataSource:didAddAlarms:
_iterateObserversWithBlock:
_handleAlarmNotification:block:
addObserverForName:object:queue:usingBlock:
dataSource:didRemoveAlarms:
dataSource:didUpdateAlarms:
_stateReset
reloadAlarms
reschedule:
dataSourceDidReload:
rowForAlarmWithID:
rowForAlarm:
setObject:atIndexedSubscript:
unregisterObserver:
numberOfAlarms
alarmAtRow:
hasSleepAlarmMatchingAlarmIDString:
setupSyncDataFileForDataModel:
setSyncDataPath:
syncDataPath
setSyncDataFile:
archiverScheduler
syncDataFile
_removeSyncDataFile
persistChanges:
initWithDataModel:
_archiverScheduler
_syncDataPath
_syncDataFile
T@"<NAScheduler>",R,N,V_archiverScheduler
T@"NSString",C,N,V_syncDataPath
T@"NSString",C,N,V_syncDataFile
setChanges:
_changes
T@"NSMutableArray",&,N,V_changes
inMemoryStore
willExitWithNextState:
willEnterWithPreviousState:
didExitWithNextState:
T@"MTStateMachine",W,N,V_stateMachine
latitude
abbreviation
longditude
cityName
successWithResolvedMTCity:
disambiguationWithMTCitysToDisambiguate:
confirmationRequiredWithMTCityToConfirm:
stateMachineName
setCurrentState:
deleteCharactersInRange:
setInfoProvider:
_currentState
_infoProvider
T@"MTStateMachineState",&,N,V_currentState
T@"<MTStateMachineDelegate>",W,N,V_delegate
T@"<MTStateMachineInfoProvider>",W,N,V_infoProvider
_isPushAlertsEnabledInPreferences
initWithDomain:
dictionaryForKey:
_notifyClientsOfChange
isPushAlertsEnabled
_handlePrefsChanged
npsManager
setNpsManager:
_pushAlertsEnabled
_npsManager
T@"NPSManager",&,N,V_npsManager
TB,R,N,V_pushAlertsEnabled
observerQueue
observersForBundleID
isObserving
defaultWorkspace
setObserving:
enumerateKeysAndObjectsUsingBlock:
initWithBundleIdentifier:allowPlaceholder:error:
applicationState
isValid
isInstalled
isPlaceholder
isApplicationInstalledForBundleIdentifier:allowPlaceholder:
objectEnumerator
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
deviceManagementPolicyDidChange:
applicationsDidChangePersonas:
databaseWasRebuilt
T@"MTApplicationWorkspaceObserver",R,N
setObserverQueue:
setObserversForBundleID:
_observing
_observerQueue
_observersForBundleID
T@"NSObject<OS_dispatch_queue>",&,N,V_observerQueue
T@"NSMutableDictionary",&,N,V_observersForBundleID
observing
TB,N,GisObserving,V_observing
T@"<MTTimerManagerIntentSupport>",R,N
weekdays
alarmRepeatScheduleFrom:
wakeUpComponents
isSingleDayOverride
alarmConfiguration
playOptionsForOccurrence:
alarmFromSleepOccurrence:scheduleEnabled:keepOffUntilDate:
_queue_nextTimer
_queue_nextScheduledTimer
rescheduleTimersWithCompletion:
_queue_rescheduleTimersWithCompletion:
_queue_scheduleTimers:withCompletion:
_queue_unscheduleTimers:
_queue_lastTimerTriggerDate
_queue_setLastTimerTriggerDate:
fireTime
scheduledTimers
_queue_updatePersistentTimerForNextTimerWithCompletion:
_queue_fireTriggeredTimersWithCompletionBlock:
_intervalToCheckForTimersToFireBeforeDate:
_fireScheduledTimer:firedDate:completionBlock:
_queue_triggerDidFireForTimerWithCompletionBlock:
scheduleTimers:
unscheduleTimers:
_scheduledTimers
T@"<MTTimerStorage>",&,N,V_storage
T@"MTScheduledList",R,N,V_scheduledTimers
T@"<MTTimerSchedulerDelegate>",W,N,V_delegate
initWithSession:request:delegate:
isSending
sessionDescription
session
syncSession:enqueueChanges:error:
syncSession:applyChanges:completion:
syncSession:didEndWithError:
syncSession:resetDataStoreWithError:
resetDataStoreForSyncSession:completion:
syncSession:rollbackChangesWithError:
syncSession:restartChanges:
syncSession:successfullySynced:
initWithSession:delegate:
processedChanges
setProcessedChanges:
setRequest:
setSession:
setPendingChanges:
lastIndex
setLastIndex:
_processedChanges
_request
_session
_pendingChanges
_lastIndex
T@"SYSession",&,N,V_session
T@"MTCompanionSyncRequest",&,N,V_request
T@"NSArray",&,N,V_pendingChanges
T@"NSMutableArray",&,N,V_processedChanges
TQ,N,V_lastIndex
T@"<MTSyncServiceDelegate>",W,N,V_delegate
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
setWithObject:
secondsFromGMTForDate:
stringFromDate:withRelativeToTimeZone:
workScheduler
_latestKeyBagValueForHasBeenUnlockedSinceBoot
setInternalHasBeenUnlockedSinceBoot:
_hasBeenUnlockedSinceBoot
internalHasBeenUnlockedSinceBoot
setWorkScheduler:
_internalHasBeenUnlockedSinceBoot
_workScheduler
T@"<NAScheduler>",&,N,V_workScheduler
TB,N,V_internalHasBeenUnlockedSinceBoot
initWithIdentifier:healthStore:
initWithFeatureIdentifier:sleepStore:
initWithAlarmStorage:sleepStoreProvider:featureStoreProvider:healthStore:persistence:
setSleepStoreProvider:
sleepStoreProvider
setSleepStore:
sleepStore
setFeatureStore:
markSleepMigrationComplete
sleepScheduleModelWithError:
_didCompleteSleepOnboarding
occurrences
sleepEventRecord
wakeUpConfirmedUntilDate
featureStore
isCurrentOnboardingVersionCompletedWithError:
currentSleepSettingsWithCompletion:
currentSleepSettingsWithError:
watchSleepFeaturesEnabled
initWithHealthStore:
upcomingScheduleOccurrenceAfterDate:error:
currentSleepScheduleWithError:
sleepAlarmWasDismissedOnDate:source:completion:
sleepAlarmWasSnoozedUntilDate:source:completion:
sleepAlarmWasModifiedFromSource:completion:
sleepStore:sleepScheduleDidChange:
sleepStore:sleepSettingsDidChange:
sleepStore:sleepEventDidOccur:
sleepStore:sleepScheduleStateDidChange:
sleepStore:sleepModeOnDidChange:
_sleepStoreProvider
_sleepStore
_featureStore
T@?,C,N,V_sleepStoreProvider
T@"HKSPSleepStore",&,N,V_sleepStore
T@"HKSPFeatureAvailabilityStore",&,N,V_featureStore
syncStatusProviderDelegate
T@"<MTSyncStatusProviderDelegate>",W,N
_syncStatusProviderDelegate
T@"<MTSyncStatusProviderDelegate>",W,N,V_syncStatusProviderDelegate
_timerTimeForState:remainingTime:currentDateProvider:
isCurrentTimer
setFireTime:
_setDuration:
isEqualToTimer:
_isEqualToTimer:checkLastModified:
_copyStateOntoTimer:
dateWithTimeInterval:sinceDate:
timerURL
_timerID
_state
_duration
_fireTime
T@"<MTTimerTime>",C,N,V_fireTime
TQ,N,V_state
Td,N,V_duration
T@"NSUUID",R,N,V_timerID
T@"NSDate",C,D,N
Td,D,N
initWithStorage:connectionListenerProvider:
_isSystemReady
_systemNotReadyError
connectionListenerProvider
_notifyClientsForTriggerType:
componentsJoinedByString:
isSystemReady
_connectionListenerProvider
T@"MTXPCConnectionListenerProvider",R,N,V_connectionListenerProvider
TB,R,N,GisSystemReady,V_systemReady
timerManagerProvider
_isDefaultTimer:
disambiguationWithTimersToDisambiguate:
confirmationRequiredWithTimerToConfirm:
firstIndex
setTimerManagerProvider:
setTimerManager:
_timerManagerProvider
T@"<MTTimerManagerIntentSupport>",&,N,V_timerManager
T@"<MTTimerManagerProviding>",W,N,V_timerManagerProvider
initWithRequestType:
requestDescription
requestWithType:
complete:
requestType
setRequestType:
completed
setCompleted:
error
setError:
completionBlocks
setCompletionBlocks:
_completed
_requestType
_error
_completionBlocks
TQ,N,V_requestType
TB,N,V_completed
T@"NSError",&,N,V_error
T@"NSMutableArray",&,N,V_completionBlocks
initWithDate:type:
initWithDate:type:isPastOverrideEvent:
isEqualToTrigger:
isEvent
_stringForType:
appendString:withName:
setTriggerType:
setTriggerDate:
_isPastOverrideEvent
_triggerType
_triggerDate
TQ,N,V_triggerType
T@"NSDate",C,N,V_triggerDate
TB,R,N,V_isPastOverrideEvent
initWithSnoozedObjectIdentifier:snoozeDate:date:version:
_snoozeDate
T@"NSDate",&,N,V_snoozeDate
Td,N,V_snoozeDate
setWithSet:
propertiesAffectingWaketime
propertiesAffectingBedtime
propertiesAffectingSync
handler
setHandler:
setNotification:
_handler
_notification
T@?,C,N,V_handler
T@"MTOSTransaction",&,N,V_transaction
T^{__CFUserNotification=},N,V_notification
notifications
postNotificationWithIdentifier:title:message:defaultButtonTitle:otherButtonTitle:bypassDND:handler:
setNotifications:
_notifications
T@"NSMutableDictionary",&,N,V_notifications
T@"NSUUID",R,N
caseInsensitiveCompare:
localizedCaseInsensitiveContainsString:
performBlockOnceChangesAreLoaded:async:
_enqueueAction:
persistChanges
_enqueueChange:changeCompareBlock:
reverseObjectEnumerator
_resolveChange:
_resolveChange:resolutionHandler:
changesLoaded
setChangesLoaded:
changeStore
setChangeStore:
changeQueue
setChangeQueue:
_changesLoaded
_changeStore
_changeQueue
T@"NSObject<OS_dispatch_group>",&,N,V_changesLoaded
T@"<MTSyncChangeStore>",&,N,V_changeStore
T@"NSMutableArray",&,N,V_changeQueue
initWithService:priority:asMasterStore:options:
setDelegate:queue:
retryTimer
_retryRequest
_requestSync:
service
setHasChangesAvailable
service:startSendingSession:error:
service:startReceivingSession:error:
setSendingSession:
sendingSession
setReceivingSession:
service:sendingSessionEnded:error:
service:receivingSessionEnded:error:
shouldRetryForError:
isMasterStore
service:startSession:error:
service:sessionEnded:error:
service:incomingData:completion:
service:incomingStream:metadata:completion:
service:encounteredError:context:
service:willPreferSession:overSession:
service:willSwitchFromPairingID:toPairingID:
service:didSwitchFromPairingID:toPairingID:
service:targetDeviceProximityChanged:
service:targetDeviceConnectionChanged:
serviceDidPairDevice:
serviceDidUnpairDevice:
T@"<MTSyncServiceDelegate>",W,N
setService:
receivingSession
pendingRequests
setPendingRequests:
setRetryTimer:
_service
_sendingSession
_receivingSession
_pendingRequests
_retryTimer
T@"SYService",&,N,V_service
T@"MTCompanionSyncSession",&,N,V_sendingSession
T@"MTCompanionSyncSession",&,N,V_receivingSession
T@"NSMutableDictionary",&,N,V_pendingRequests
T@"MTExponentialBackOffTimer",&,N,V_retryTimer
initWithConnection:clientLink:
processID
connectedDate
setClientLink:
setConnectedDate:
_clientLink
_connectedDate
T@"NSXPCConnection",&,N,V_connection
T@,&,N,V_clientLink
T@"NSDate",&,N,V_connectedDate
T@"NSString",R,C,N
hasAlarmID
setHasHour:
hasHour
setHasMinute:
hasMinute
hasTitle
setHasAllowsSnooze:
hasAllowsSnooze
setHasDaySetting:
hasDaySetting
hasSound
setHasIsSleepAlarm:
hasIsSleepAlarm
setHasBedtimeHour:
hasBedtimeHour
setHasBedtimeMinute:
hasBedtimeMinute
setHasBedtimeReminderMinutes:
hasBedtimeReminderMinutes
setRevision:
setHasRevision:
hasRevision
setHasLastModifiedDate:
hasLastModifiedDate
setHasSnoozeFireDate:
hasSnoozeFireDate
setHasBedtimeSnoozeFireDate:
hasBedtimeSnoozeFireDate
setIsEnabled:
setHasIsEnabled:
hasIsEnabled
setHasFiredDate:
hasFiredDate
setHasDismissedDate:
hasDismissedDate
setHasPlayOptions:
hasPlayOptions
setHasSleepMode:
hasSleepMode
setHasSleepTracking:
hasSleepTracking
setHasSleepSchedule:
hasSleepSchedule
setHasOnboardingVersion:
hasOnboardingVersion
setHasSleepModeOptions:
hasSleepModeOptions
setHasTimeInBedTracking:
hasTimeInBedTracking
setHasDismissedAction:
hasDismissedAction
setHasBedtimeFiredDate:
hasBedtimeFiredDate
setHasBedtimeDismissedDate:
hasBedtimeDismissedDate
setHasBedtimeDismissedAction:
hasBedtimeDismissedAction
setHasKeepOffUntilDate:
hasKeepOffUntilDate
_bedtimeReminderMinutes
_isEnabled
T@"MTPBSound",&,N,V_sound
TI,N,V_bedtimeHour
TI,N,V_bedtimeMinute
TI,N,V_bedtimeReminderMinutes
TI,N,V_revision
Td,N,V_lastModifiedDate
Td,N,V_snoozeFireDate
Td,N,V_bedtimeSnoozeFireDate
TB,N,V_isEnabled
Td,N,V_firedDate
Td,N,V_dismissedDate
TI,N,V_playOptions
TI,N,V_onboardingVersion
TI,N,V_sleepModeOptions
TI,N,V_dismissedAction
Td,N,V_bedtimeFiredDate
Td,N,V_bedtimeDismissedDate
TI,N,V_bedtimeDismissedAction
Td,N,V_keepOffUntilDate
setAsleepState:
setAwakeState:
setDisabledState:
_asleepState
_awakeState
_disabledState
T@"MTSleepCoordinatorStateMachineAsleepState",&,N,V_asleepState
T@"MTSleepCoordinatorStateMachineAwakeState",&,N,V_awakeState
T@"MTSleepCoordinatorStateMachineDisabledState",&,N,V_disabledState
T@"INObject",C,D,N
requiresAppLaunch
Tq,D,N
successIntentResponseWithAlarm:
T@"MTIntentAlarm",C,D,N
unspecifiedIntentResponseWithState:
readyIntentResponseWithState:
continueInAppIntentResponseWithState:
inProgressIntentResponseWithState:
successIntentResponseWithState:alarm:
failureRequiringAppLaunchIntentResponseWithState:
successIntentResponseWithAlarms:
confirmationRequiredWithValueToConfirm:
confirmationRequiredWithAlarmStateToConfirm:
confirmationRequiredWithAlarmOperationToConfirm:
disambiguationWithAlarmsToDisambiguate:
confirmationRequiredWithAlarmToConfirm:
disambiguationWithRepeatDaysToDisambiguate:
confirmationRequiredWithRepeatDayToConfirm:
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v32@0:8@"INPauseTimerIntent"16@?<v@?@"INPauseTimerIntentResponse">24
v32@0:8@"INPauseTimerIntent"16@?<v@?@"INTimerResolutionResult">24
v32@0:8@"INPauseTimerIntent"16@?<v@?@"INBooleanResolutionResult">24
v32@0:8@"INResumeTimerIntent"16@?<v@?@"INResumeTimerIntentResponse">24
v32@0:8@"INResumeTimerIntent"16@?<v@?@"INTimerResolutionResult">24
v32@0:8@"INResumeTimerIntent"16@?<v@?@"INBooleanResolutionResult">24
v36@0:8@16B24@?28
@44@0:8@16@24@32B40
@56@0:8@16@24@32Q40@48
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
q16@0:8
@"NSDate"16@0:8
@"NSArray"16@0:8
@"NSDictionary"16@0:8
v20@0:8B16
v24@0:8Q16
v16@0:8
@"NSDate"
@"NSArray"
@"NSDictionary"
@"PBCodable"16@0:8
@24@0:8@"PBCodable"16
v24@0:8@"<MTSerializer>"16
@24@0:8@"<MTSerializer>"16
B32@0:8@16@24
@?16@0:8
@24@0:8q16
q24@0:8@16
v20@0:8I16
v24@0:8q16
v32@0:8@16q24
I16@0:8
@"Alarm"
@"NSMutableDictionary"
@"NSString"
@"<AlarmDelegate>"
@"NSURL"
@40@0:8@16@24Q32
@72@0:8@16@24@32@40@48@56Q64
@"NSXPCInterface"
v32@0:8@"MTEnableAlarmIntent"16@?<v@?@"MTEnableAlarmIntentResponse">24
v32@0:8@"MTDisableAlarmIntent"16@?<v@?@"MTDisableAlarmIntentResponse">24
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"MTToggleAlarmIntentResponse">24
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"MTAlarmStateResolutionResult">24
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"MTIntentAlarmResolutionResult">24
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"INObjectCollection"@"NSError">24
@"MTIntentAlarm"24@0:8@"MTToggleAlarmIntent"16
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@16@24@?32
@28@0:8@16B24
B32@0:8@16q24
v40@0:8@16q24@?32
d32@0:8@16q24
B32@0:8@"NSString"16q24
v40@0:8@"NSString"16q24@?<v@?>32
d32@0:8@"NSString"16q24
v32@0:8@16@24
@?24@0:8@16
@32@0:8@16@?24
@24@0:8Q16
v32@0:8@?16@?24
@"<MTScheduledListDelegate>"
@"NSMutableOrderedSet"
@32@0:8@16@24
f24@0:8@16
v28@0:8f16@20
@24@0:8@"NSString"16
@32@0:8@"NSString"16@24
f24@0:8@"NSString"16
v32@0:8@16@"NSString"24
v28@0:8f16@"NSString"20
@32@0:8q16@24
v32@0:8@"MTTimerScheduler"16@"MTTimer"24
v32@0:8@"MTTimerScheduler"16@"MTScheduledObject"24
v24@0:8@"NSString"16
v24@0:8@?16
v40@0:8@16@?24@32
v24@0:8@"<MTTimerObserver>"16
v24@0:8@?<v@?@"NSArray"@"MTTimer"@"NSError">16
v40@0:8@"MTTimer"16@?<v@?@"NSError">24@"<MTSource>"32
v40@0:8@"NSString"16@?<v@?@"NSError">24@"<MTSource>"32
v32@0:8@"NSArray"16@"<MTSource>"24
@"MTTimer"16@0:8
@56@0:8@16@24@32@40@?48
v40@0:8@16@24B32B36
@40@0:8@16@?24@32
@"MTMetrics"
@"MTTimerScheduler"
@"NSMutableArray"
@"MTTimerMigrator"
@"<NAScheduler>"
@"MTObserverStore"
@"<MTPersistence>"
d16@0:8
@24@0:8^{_NSZone=}16
@"NSCoder"16@0:8
v28@0:8B16@20
v32@0:8q16@24
v28@0:8i16@20
v32@0:8d16@24
i24@0:8@16
d24@0:8@16
v40@0:8@16@24Q32
v32@0:8@"<MTSource>"16@"NSArray"24
v40@0:8@"<MTSource>"16@"MTAlarm"24Q32
v32@0:8@"<MTSource>"16@"MTAlarm"24
@"MTAlarmStorage"
v24@0:8@"<MTSyncable>"16
@56@0:8@16@24@?32@40@48
@"MTSyncServiceManager"
@"NSObject<OS_dispatch_queue>"
v24@0:8@"NSDate"16
B20@0:8B16
@"NRDevice"
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
@"UNUserNotificationCenter"
@"MTPBAlarmProperties"
@40@0:8@16@?24@?32
v36@0:8@?16@?24B32
@24@0:8@?16
@40@0:8@?16@?24@?32
{os_unfair_lock_s=I}16@0:8
@"NSXPCConnection"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"MTXPCConnectionInfo"
v24@0:8B16B20
@"NAFuture"16@0:8
@"NAFuture"24@0:8@"NSObject<MTTimerIntentSupport>"16
@"NAFuture"24@0:8Q16
v32@0:8@"DNDModeAssertionService"16@"DNDModeAssertion"24
v32@0:8@"DNDModeAssertionService"16@"DNDModeAssertionInvalidation"24
B24@0:8^B16
@"MTAlarm"16@0:8
B36@0:8@16@24B32
B28@0:8@16B24
v32@0:8@16d24
B36@0:8@"MTSleepModeStateMachine"16@"NSDate"24B32
B28@0:8@"MTSleepModeStateMachine"16B24
v32@0:8@"MTSleepModeStateMachine"16@"NSDate"24
v24@0:8@"MTSleepModeStateMachine"16
v32@0:8@"MTSleepModeStateMachine"16d24
v40@0:8@16@24@32
v48@0:8@16@24Q32@40
v40@0:8@"MTSleepCoordinator"16@"NSDate"24@"MTAlarm"32
v48@0:8@"MTSleepCoordinator"16@"NSDate"24Q32@"MTAlarm"40
v32@0:8@"MTSleepCoordinator"16@"MTAlarm"24
v32@0:8@"MTTimeListener"16@?<v@?>24
@40@0:8@16@24@?32
B32@0:8^B16^@24
B24@0:8^@16
@"<MTAlarmStorage>"
@"MTSleepCoordinator"
@"MTSleepModeStateMachine"
@"DNDModeAssertionService"
v28@0:8B16@?20
v32@0:8B16B20@24
v32@0:8B16B20@"NSDate"24
@"MTSleepModeStateMachineInitialState"
@"MTSleepModeStateMachineOffState"
@"MTSleepModeStateMachineWaitingState"
@32@0:8@16o^@24
@40@0:8@16@24o^@32
@"NSDateFormatter"
v32@0:8@16Q24
v32@0:8@"<MTSyncStatusProvider>"16Q24
v24@0:8@"NSArray"16
@"<MTSyncToken>"24@0:8Q16
@48@0:8@16@24@32@40
@56@0:8@16@24@32@40@48
@"<MTSyncService>"
@"<MTSyncStatusProvider>"
@"<MTSyncDataModel>"
@"MTSyncChangeQueue"
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"MTCreateAlarmIntentResponse">24
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"INStringResolutionResult">24
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"INDateComponentsResolutionResult">24
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"NSArray">24
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"INObjectCollection"@"NSError">24
@"NSArray"24@0:8@"MTCreateAlarmIntent"16
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSDate"16Q24
@"<MTSleepSessionTrackerDelegate>"16@0:8
v24@0:8@"<MTSleepSessionTrackerDelegate>"16
B24@0:8@"MTAlarm"16
@"<MTSleepSession>"24@0:8@"<MTSleepSession>"16
v20@0:8{os_unfair_lock_s=I}16
@"<MTSleepSessionTrackerDelegate>"
@"MTAlarm"
Q32@0:8@16@24
Q24@0:8@16
v48@0:8@16Q24@32@?40
@"MTTimerStorage"
v32@0:8@"MTUpdateAlarmIntent"16@?<v@?@"MTUpdateAlarmIntentResponse">24
v32@0:8@"MTAlarmScheduler"16@"MTScheduledObject"24
v48@0:8@16@24@?32@40
v32@0:8@?16@24
v48@0:8@16Q24@?32@40
v56@0:8@16@24Q32@?40@48
v24@0:8@"<MTAlarmObserver>"16
v24@0:8@?<v@?@"NSArray"@"NSArray"@"MTAlarm"@"NSError">16
v40@0:8@"MTAlarm"16@?<v@?@"NSError">24@"<MTSource>"32
v48@0:8@"NSString"16@"MTChangeSet"24@?<v@?@"NSError">32@"<MTSource>"40
v24@0:8@"<MTSource>"16
v40@0:8@"NSArray"16@"NSArray"24@"<MTSource>"32
v32@0:8@?<v@?@"MTMutableAlarm">16@"<MTSource>"24
v48@0:8@"NSString"16Q24@?<v@?@"NSError">32@"<MTSource>"40
v56@0:8@"NSString"16@"NSDate"24Q32@?<v@?@"NSError">40@"<MTSource>"48
v32@0:8@"NSString"16@?<v@?@"MTAlarm">24
v48@0:8@16@24@32B40B44
v52@0:8@16@24@32B40B44B48
v40@0:8@16Q24@32
@"MTAlarmScheduler"
@"MTAlarmMigrator"
v32@0:8@"INCreateTimerIntent"16@?<v@?@"INCreateTimerIntentResponse">24
v32@0:8@"INCreateTimerIntent"16@?<v@?@"INCreateTimerLabelResolutionResult">24
v32@0:8@"INCreateTimerIntent"16@?<v@?@"INTimeIntervalResolutionResult">24
v32@0:8@"INCreateTimerIntent"16@?<v@?@"INTimerTypeResolutionResult">24
B20@0:8I16
v24@0:8d16
v20@0:8f16
f16@0:8
{?="mediaID"b1"soundVolume"b1}
q24@0:8Q16
v32@0:8@"MTScheduledList"16@?<v@?>24
@72@0:8@16@24@32@40@48@56@?64
@20@0:8B16
@"<MTAlarmScheduleDelegate>"
@"MTScheduledList"
@"<MTNotificationCenter>"
@"<MTSchedulingDelegate>"
@"<MTTaskScheduler>"
@"MTPBAlarm"
Q24@0:8Q16
@"<MTScheduleable>"
@"MTTrigger"
@"NSArray"24@0:8@"NSDate"16
B32@0:8@"MTScheduledObject"16@"NSCalendar"24
@32@0:8d16@?24
@40@0:8d16Q24@?32
@48@0:8d16Q24@?32@40
@"NSObject<OS_dispatch_source>"
@"NSTimer"
@32@0:8@16q24
@40@0:8@16q24q32
@"NSData"24@0:8@"<SYChange>"16
@"<SYChange>"32@0:8@"NSData"16q24
@"NSData"24@0:8@"<SYObject>"16
@"<SYObject>"24@0:8@"NSData"16
@"NSData"32@0:8@"<SYChange>"16q24
@"<SYChange>"40@0:8@"NSData"16q24q32
@"<MTAgentDiagnosticDelegate>"
@32@0:8@16Q24
@"_CDClientContext"
@"_DKKnowledgeStore"
v32@0:8@"<MTSource>"16@"MTTimer"24
v24@0:8@"MTTimer"16
@"NSMutableSet"
v28@0:8@?16B24
v28@0:8@16B24
v32@0:8@"MTScheduledObject"16@?<v@?>24
v24@0:8@"MTAlarm"16
v24@0:8@"MTScheduledObject"16
v32@0:8@"MTAlarm"16Q24
v28@0:8@"MTAlarm"16B24
@"<MTSystemStateDelegate>"
@"<MTScheduler>"
v32@0:8Q16Q24
@"WorldClockPreferences"
v24@0:8@"MTSleepCoordinatorStateMachine"16
v40@0:8@"MTSleepCoordinatorStateMachine"16@"NSDate"24Q32
v32@0:8@"MTSleepCoordinatorStateMachine"16d24
@"MTSleepCoordinatorStateMachine"
@"NAFuture"
@"MTXPCScheduler"
@"MTSleepModeMonitor"
@32@0:8@16d24
@40@0:8@16d24@?32
@"NSObject<OS_os_transaction>"
v32@0:8@"INDeleteTimerIntent"16@?<v@?@"INDeleteTimerIntentResponse">24
v32@0:8@"INDeleteTimerIntent"16@?<v@?@"INTimerResolutionResult">24
v32@0:8@"INDeleteTimerIntent"16@?<v@?@"INBooleanResolutionResult">24
v40@0:8@16B24B28@?32
v32@0:8@"INSetTimerAttributeIntent"16@?<v@?@"INSetTimerAttributeIntentResponse">24
v32@0:8@"INSetTimerAttributeIntent"16@?<v@?@"INSetTimerAttributeTargetTimerResolutionResult">24
v32@0:8@"INSetTimerAttributeIntent"16@?<v@?@"INTimeIntervalResolutionResult">24
v32@0:8@"INSetTimerAttributeIntent"16@?<v@?@"INSpeakableStringResolutionResult">24
v52@0:8@16d24@32B40@?44
@"MTPBDismissAction"
@"MTPBSnoozeAction"
@40@0:8@16@24@32
@"NSNumber"
@44@0:8@16@24@32f40
@"<MTSyncableObject>"24@0:8@"<MTSyncableObject>"16
B24@0:8@"<MTSyncableObject>"16
@"MTAlarmManager"
@32@0:8Q16Q24
@32@0:8q16q24
@48@0:8q16q24q32q40
@72@0:8q16q24q32q40q48q56q64
Q20@0:8B16
B40@0:8@16q24@32
@"NSString"24@0:8@"NSString"16
@"BSDescriptionBuilder"24@0:8@"NSString"16
@"BSDescriptionBuilder"16@0:8
@40@0:8Q16Q24@?32
@32@0:8@16B24B28
B40@0:8@16@24@32
B24@0:8q16
@"NSUUID"
@"MTSound"
@40@0:8@16q24@32
v32@0:8@"<MTSleepSessionTracker>"16@"<MTSleepSession>"24
@"HKHealthStore"
@"<MTSleepSessionTracker>"
v36@0:8f16@20@28
f32@0:8@16^B24
v36@0:8B16@20@28
B32@0:8@16^B24
v40@0:8q16@24@32
q32@0:8@16^B24
q32@0:8@16q24
q40@0:8@16@?24q32
v40@0:8d16@24@32
d32@0:8@16^B24
d32@0:8@16d24
d40@0:8@16@?24d32
@"NSUserDefaults"
i16@0:8
v20@0:8i16
@36@0:8@16@24B32
@40@0:8@16Q24q32
@44@0:8@16Q24q32B40
d32@0:8@16@24
@20@0:8i16
@28@0:8i16@20
v24@0:8@?<v@?>16
@"<NACancelable>"24@0:8@?<v@?@"NACancelationToken">16
@"<NACancelable>"32@0:8d16@?<v@?>24
@24@0:8^@16
@24@0:8d16
@52@0:8@16q24@32B40B44B48
@64@0:8@16@24@32@40@48@56
@"ALCity"
@"NSSet"
v32@0:8@16B24B28
@"MTUserNotificationActionDispatcher"
@"MTTimer"
@32@0:8@16^B24
v32@0:8d16@?24
@"MTPowerAssertion"
v24@0:8@"MTTask"16
v24@0:8@"MTTaskGroup"16
@"MTGCDTimer"
@40@0:8q16@24d32
v32@0:8@"MTGetAlarmsIntent"16@?<v@?@"MTGetAlarmsIntentResponse">24
B24@0:8@"<MTTimerTime>"16
q24@0:8@"<MTTimerTime>"16
@"NSNotificationCenter"16@0:8
@32@0:8@?16@24
@40@0:8@?16@24@32
B24@0:8d16
B24@0:8Q16
@"MTTimerManagerExportedObject"
@"MTXPCConnectionProvider"
@"MTTimerCache"
@"NSNotificationCenter"
@"MTTimerManager"
v32@0:8@"INResetTimerIntent"16@?<v@?@"INResetTimerIntentResponse">24
v32@0:8@"INResetTimerIntent"16@?<v@?@"INTimerResolutionResult">24
v32@0:8@"INResetTimerIntent"16@?<v@?@"INBooleanResolutionResult">24
v32@0:8@16^B24
@"NSHashTable"
v36@0:8@16@?24B32
@48@0:8@16@24Q32@?40
@24@0:8B16B20
@36@0:8@16Q24B32
@40@0:8@16Q24B32B36
@44@0:8@16Q24B32B36B40
@36@0:8@16B24B28B32
@"MTAlarmManagerExportedObject"
@"MTAlarmCache"
@32@0:8d16Q24
@"MTSessionsManager"
@"BSServiceConnection<BSServiceConnectionClient>"
v44@0:8@16B24@?28@?36
v60@0:8@16B24B28B32@?36@?44@?52
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INSearchForTimersIntentResponse">24
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INSpeakableStringResolutionResult">24
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INTimeIntervalResolutionResult">24
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INTimerStateResolutionResult">24
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INTimerTypeResolutionResult">24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
@"MTSleepManager"
@"MTAgentNotificationManager"
@"MTSystemStateListener"
@"MTLanguageChangeListener"
@"MTAgentDiagnosticListener"
@"MTTimeListener"
@"MTAlarmServer"
@"MTAlarmSnapshot"
@"MTTimerServer"
@"MTTimerSnapshot"
@"MTAlarmIntentDonor"
@"MTTimerIntentDonor"
@"MTCoreDuetMonitor"
@"MTWidgetProvider"
@"MTTimerSessionsCoordinator"
@"MTSleepSessionManager"
@"MTSleepSessionTracker"
@"MTAlarmSyncDataModel"
@"MTStateMachine"
@"MTStateMachineState"
@"<MTStateMachineDelegate>"
@"<MTStateMachineInfoProvider>"
@"NPSManager"
v32@0:8@"NSArray"16@"NSArray"24
@"<MTTimerManagerIntentSupport>"16@0:8
@36@0:8@16B24@28
@"<MTTimerSchedulerDelegate>"
@"<MTTimerStorage>"
I40@0:8@16@?24^@32
B32@0:8@16^@24
I40@0:8@"SYSession"16@?<B@?@"<SYChange>">24^@32
v40@0:8@"SYSession"16@"NSArray"24@?<v@?B@"NSError">32
v32@0:8@"SYSession"16@"NSError"24
B32@0:8@"SYSession"16^@24
v32@0:8@"SYSession"16@?<v@?B@"NSError">24
v32@0:8@"SYSession"16@"NSSet"24
@"MTCompanionSyncRequest"
@"SYSession"
@"<MTSyncServiceDelegate>"
v40@0:8@16Q24@?32
v32@0:8@"MTAlarm"16@?<v@?@"NSError">24
v40@0:8@"NSString"16Q24@?<v@?@"NSError">32
v24@0:8@?<v@?@"MTAlarm"@"NSError">16
v24@0:8@?<v@?@"NSError">16
v32@0:8@"MTTimer"16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepSchedule"24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepSettings"24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepEvent"24
v32@0:8@"HKSPSleepStore"16Q24
v28@0:8@"HKSPSleepStore"16B24
@56@0:8@16@?24@?32@40@48
@"HKSPSleepStore"
@"HKSPFeatureAvailabilityStore"
@"<MTSyncStatusProviderDelegate>"16@0:8
v24@0:8@"<MTSyncStatusProviderDelegate>"16
@"<MTSyncStatusProviderDelegate>"
B32@0:8Q16Q24
@40@0:8Q16d24@?32
@32@0:8Q16d24
@"<MTTimerTime>"
@"MTXPCConnectionListenerProvider"
v44@0:8@16B24@28@?36
@48@0:8q16q24@32@40
@"<MTTimerManagerProviding>"
@"<MTTimerManagerIntentSupport>"
@"NSError"
^{__CFUserNotification=}16@0:8
v24@0:8^{__CFUserNotification=}16
@"MTOSTransaction"
^{__CFUserNotification=}
v68@0:8@16@24@32@40@48B56@?60
@"NSUUID"16@0:8
@"NSObject<OS_dispatch_group>"
@"<MTSyncChangeStore>"
B40@0:8@16@24^@32
v48@0:8@16@24@32@?40
B40@0:8@"SYService"16@"SYSession"24^@32
v40@0:8@"SYService"16@"SYSession"24@"NSError"32
v40@0:8@"SYService"16@"NSData"24@?<v@?B@"NSError">32
v48@0:8@"SYService"16@"NSInputStream"24@"NSDictionary"32@?<v@?B@"NSError">40
v40@0:8@"SYService"16@"NSError"24@"NSDictionary"32
@"SYSession"40@0:8@"SYService"16@"SYSession"24@"SYSession"32
v40@0:8@"SYService"16@"NSUUID"24@"NSUUID"32
v28@0:8@"SYService"16B24
v24@0:8@"SYService"16
@"<MTSyncServiceDelegate>"16@0:8
v24@0:8@"<MTSyncServiceDelegate>"16
@"SYService"
@"MTCompanionSyncSession"
@"MTExponentialBackOffTimer"
@"MTPBSound"
{?="bedtimeDismissedDate"b1"bedtimeFiredDate"b1"bedtimeSnoozeFireDate"b1"dismissedDate"b1"firedDate"b1"keepOffUntilDate"b1"lastModifiedDate"b1"snoozeFireDate"b1"bedtimeDismissedAction"b1"bedtimeHour"b1"bedtimeMinute"b1"bedtimeReminderMinutes"b1"daySetting"b1"dismissedAction"b1"hour"b1"minute"b1"onboardingVersion"b1"playOptions"b1"revision"b1"sleepModeOptions"b1"allowsSnooze"b1"isEnabled"b1"isSleepAlarm"b1"sleepMode"b1"sleepSchedule"b1"sleepTracking"b1"timeInBedTracking"b1}
@"MTSleepCoordinatorStateMachineAsleepState"
@"MTSleepCoordinatorStateMachineAwakeState"
@"MTSleepCoordinatorStateMachineDisabledState"
@33
@ff&@
,@ffF@
L@33S@
.:C
&/8AJS\enw
%s %@
%s Failed to %@ pause timer intent %@%@
%s Successfully %@ pause timer attribute intent %@ with response %@
%s Failed to %@ resume timer intent %@%@
%s Successfully %@ resume timer attribute intent %@ with response %@
exportedObject: %{public}@ must conform to protocol: %{public}@
%s intent:%@
%{public}@ alarm fetch returned alarms: %{public}@
%{public}@ found no alarm to enable
%{public}@ Alarm being modified: %{public}@. Enabled state from intent: %{public}@, current alarm enable state: %i
%{public}@ alarm state already matches intent state : %{public}@
%{public}@ Updating enable state to %i for alarm: %{public}@
%{public}@ error reading into widgets config: %{public}@
%{public}@ read widget intent ClocksIntent
%{public}@ read widget intent ClocksSingleIntent
%{public}@ read clock widget timezones: %{public}@
%{public}@ reloading widget timeline
mobiletimerd - System language changed, terminating daemon
Initializing %{public}@
%{public}@ loading timers
%{public}@ migration needed
%{public}@ migrated timer is %{public}@
%{public}@ no timer created during migration.
%{public}@ has no timers
%{public}@ binary data storage version detected.  Using old reader.
%{public}@ unexpected error reading data %{public}@
%{public}@ loaded %{public}@
%{public}@ setting all timers %{public}@
%{public}@ setting all timers
%{public}@ received request for timers
%{public}@ returning timers: %{public}@, next timer: %{public}@
%{public}@ adding timer %{public}@
MTTimerStorage - Adding Timer
%{public}@ updating timer %{public}@
MTTimerStorage - Updating Timer
%{public}@ removing timer %{public}@
MTTimerStorage - Removing Timer
%{public}@ dismissing timer with ID %{public}@
MTTimerStorage - Dismissing Timer
%{public}@ repeating timer with ID %{public}@
MTTimerStorage - Repeating Timer
Timer already exists
MTTimerStorage - Failed Adding Timer
MTTimerStorage - Finished Adding Timer
MTTimerStorage - Finished Updating Timer
MTTimerStorage - Failed Updating Timer
%{public}@
MTTimerStorage - Finished Removing Timer
Timer doesn't exist
MTTimerStorage - Failed Removing Timer
Dismissed timer %{public}@ at %{public}@
MTTimerStorage - Finished Dismissing Timer
%{public}@ couldn't find matching timer to dismiss for %{public}@
MTTimerStorage - Failed Dismissing Timer
Repeated timer %{public}@
MTTimerStorage - Finished Repeating Timer
MTTimerStorage - Failed Repeating Timer
%{public}@ notifying observers for timer addition
%{public}@ notifying observers for timer update
%{public}@ notifying observers for timer removal
%{public}@ notifying observers for timer dismissal
%{public}@ notifying observers for timer firing
%{public}@ notifying observers for next timer change
-----MTTimerStorage-----
Timers: %{public}@
Last Modified: %{public}@
MTTimerStorage - Next Timer Changed
MTTimerStorage - Fired Timer
%{public}@ removing all timers
%{public}@ registered %{public}@
%{public}@ is registering for distributed notifications
%{public}@ is registering for darwin notifications
%{public}@ is registering for alarm notifications
%{public}@ is registering for darwin notification %{public}@
%{public}@ received notification %{public}@
%{public}@ Using a scheduling power assertion timeout of %{public}d
%{public}@ Alarm added - Request snapshot
%{public}@ Alarm updated - Request snapshot
%{public}@ Alarm removed - Request snapshot
%{public}@ has no sync manager.
MTAlarmSyncDataModel - Syncing Alarm Dismiss
MTAlarmSyncDataModel - Syncing Alarm Snooze
%{public}@ performing action %{public}@
MTAlarmSyncDataModel - Applying Alarm Dismiss
MTAlarmSyncDataModel - Applying Alarm Snooze
-----%{public}@-----
Alarm Sync Manager: %{public}@
%{public}@ no sleep alarm, sleep disabled
%{public}@ sleep schedule disabled
%{public}@ haven't dismissed morning alarm yet so we're sleeping
%{public}@ wake up alarm was snoozed (%{public}@) so we're sleeping
%{public}@ next trigger is for wake up (%{public}@) so we're sleeping
%{public}@ bedtime reminder was snoozed (%{public}@) for after the bedtime: (%{public}@). it is currently before bedtime and the snooze date
%{public}@ bedtime reminder was snoozed (%{public}@) for after the bedtime. it is currently past bedtime but before the snooze date.
%{public}@ user confirmed go to bed notification (%{public}@) so we're sleeping until %{public}@
%{public}@ haven't seen go to bed reminder yet (%{public}@)
%{public}@ not bedtime yet (%{public}@)
%{public}@ bedtime reached, checking state
%{public}@ waketime reached but alarm not enabled, dismissing
%{public}@ scheduling alarm timeout
%{public}@ alarm timeout occurred, dismissing
%{public}@ received %{public}@
%{public}@ Active Paired Device: %{public}@ (version: %{public}@)
%{public}@ no paired device detected
%{public}@ paired watch version is too old for sync
%{public}@ has active paired watch%{public}@
-----MTPairedDeviceListener-----
Paired Device: %{public}@ - %{public}@ - %{public}@
Paired Device Active: %{public}d
%{public}@ received willPresentNotification
%{public}@ completing with UNNotificationPresentationOptionAlert for %{public}@
%{public}@ completing with UNNotificationPresentationOptionAlert|UNNotificationPresentationOptionSound for %{public}@
Connection info must be non-nil
Initializing %{public}@ with info %{public}@
%{public}@ deallocing...
%{public}@ rebuilding connection
%{public}@ connection interrupted
%{public}@ connection invalidated
%{public}@ will retry connection because the response to the lifecycle notification failed
%{public}@ connection invalidated.  Retrying
%{public}@ not retrying invalidated connection
%{public}@ received lifecycle darwin notification. Reestablishing connection.
%{public}@ received lifecycle darwin notification.  Reconnecting.
%{public}@ received lifecycle darwin notification but does not have a reconnection handler.
Failed to reconnect for provider %{public}@ with error %{public}@.
%{public}@ retrying failed reconnect
%{public}@ attempting to reconnect.
%{public}@ failed to reconnect too many times
%{public}@ received a remote proxy error: %{public}@
%{public}@ expected non-nil proxy@
%{public}@ expected non-nil connection
%{public}@ invalidating
%{public}@ Handling manual %{public}@ invalidation
%{public}@ Keeping off until: %{public}@
%{public}@ Not in user sleep window
%{public}@ We are past keepOffUntilDate: %{public}@
%{public}@ ignoring updateState until keepOffUntilDate: %{public}@
%{public}@ Failed adding assertion update listener: %@
%{public}@ Added assertion update listener
%{public}@ engageUntilDate:userEngaged
%{public}@ already have assertion
%{public}@ updating active assertion with new end date %{public}@, isUserRequested %d
%{public}@ acquiring assertion with details %{public}@
%{public}@ Failed to acquire assertion with %{public}@
%{public}@ Successfully acquired assertion
%{public}@ clearKeepOff:
%{public}@ disengage:
%{public}@ there is no assertion
%{public}@ Failed to release assertion with %{public}@
%{public}@ Successfully released assertion
%{public}@ keepOffUntilDate: %{public}@
%{public}@ scheduleUpdateForSecondsFromNow: %f
%{public}@ re-checking %{public}@
%{public}@ user manually turning off %{public}@ (%{public}@)
%{public}@ didReceiveModeAssertionInvalidation %{public}@
%{public}@ user woke up, turning off %{public}@ if it's on
%{public}@ user went to bed, checking %{public}@
%{public}@ bedtime reminder fired, checking %{public}@
%{public}@ it's the user's bedtime, checking %{public}@
%{public}@ wake up alarm fired, checking %{public}@
%{public}@ wake up alarm snoozed, checking %{public}@
%{public}@ user %{public}@ sleep alarm, checking %{public}@
%{public}@ significant time change detected, checking %{public}@
-----%@-----
isEnabled: %d, isUserRequested: %d
%{public}@ resuming sync service
%{public}@ sync currently disabled, not starting, and removing any pending changes.
%{public}@ stopping sync service
%{public}@ removing pending changes
%{public}@ still has changes
%{public}@ no pending changes
%{public}@ syncing %{public}@
%{public}@ ignoring sync because we're not started
%{public}@ applying change %{public}@
%{public}@ nothing to apply
%{public}@ resetting data store
%{public}@ successfully sent %lu changes
%{public}@ incremental sync requested
%{public}@ sync isn't disabled.
%{public}@ sync is disabled.
Sync Service: %@
Sync Status: %lu
Pending Changes: %lu
%{public}@ createAlarm requested without time
%{public}@ no alarm, disabling
%{public}@ feature not enabled
%{public}@ user confirmed bedtime reminder (%{public}@).  Starting session.
%{public}@ user woke up at %@ (%{public}@)
%{public}@ received notification response
%{public}@ received response for category %{public}@ and action %{public}@
Unexpected alarm notification action: %{public}@
%{public}@ calling completion
%{public}@ received snooze action for %{public}@
%{public}@ received go to bed action for bedtime notification %{public}@
%{public}@ received dismiss action for wakeup alarm %{public}@
%{public}@ received dismiss action for bedtime notification %{public}@
%{public}@ received dismiss action for snooze countdown notification %{public}@
%{public}@ received dismiss action for alarm %{public}@
%{public}@ received response for action %{public}@
Unexpected timer notification action: %{public}@
%{public}@ received dismiss action for timer %{public}@
%{public}@ received repeat action for timer %{public}@
Initializing %{public}@ with persistence %{public}@ and migrator %{public}@
%{public}@ cleaning up snooze fire date for sleep alarm %{public}@
%{public}@ cleaning up repeat schedule for sleep alarm %{public}@
%{public}@ loading alarms
%{public}@ To set as a marker we are hitting here with updated root
%{public}@ has no alarms
%{public}@ clean-up needed
%{public}@ Migrating sleep alarm: %{public}@ 
%{public}@ Donate signal for existing bedtime
%{public}@ Don't donate signal because no existing bedtime
%{public}@ Failed to release assertion with %{public}@, failure error:%{public}@
%{public}@ Migrating sleep alarm: %{public}@ to regular: %{public}@
%{public}@ loaded %{public}@, sleep alarms %{public}@
%{public}@ loaded %{public}ld alarms, %{public}ld sleep alarms
%{public}@ persistence is nil
%{public}@ ignoring misplaced sleep alarm %{public}@
%{public}@ ignoring misplaced regular alarm %{public}@
%{public}@ received request for alarms
%{public}@ returning ordered alarms: %{public}@, sleep alarms: %{public}@, next alarm: %{public}@
%{public}@ calling completion block with alarms %@
%{public}@ adding alarm %{public}@
MTAlarmStorage - Adding Alarm
%{public}@ updating alarm %{public}@
MTAlarmStorage - Updating Alarm
%{public}@ updating %{public}@ with changes %{public}@
%{public}@ removing alarm %{public}@
MTAlarmStorage - Removing Alarm
%{public}@ removing alarm with ID %{public}@
%{public}@ removing all alarms
%{public}@ setting all alarms %{public}@, sleep alarms %{public}@
%{public}@ setting all alarms
%{public}@ setting sleep alarms %{public}@
%{public}@ transferring metadata from existing sleep alarms %{public}@
%{public}@ snoozing for %{public}lu minutes
%{public}@ snoozing alarm with ID %{public}@ and action %ld
MTAlarmStorage - Snoozing Alarm
%{public}@ dismissing alarm with ID %{public}@ and action %{public}@
MTAlarmStorage - Dismissing Alarm
Alarm already exists
MTAlarmStorage - Failed Adding Alarm
MTAlarmStorage - Finished Adding Alarm
Alarm doesn't exist
MTAlarmStorage - Failed Updating Alarm
%{public}@ Alarm %{public}@ disabled while firing (%{public}@).  Dismissing: %{public}@ (last dismissed: %{public}@)
%{public}@ Alarm %{public}@ modified during save.  Notifying everyone.
%{public}@ Changes: %{public}@
MTAlarmStorage - Finished Updating Alarm
MTAlarmStorage - Finished Removing Alarm
MTAlarmStorage - Failed Removing Alarm
%{public}@ was snoozed and isn't enabled anywhere. Cancelling.
%{public}@ was snoozed but had relevant changes. Cancelling.
%{public}@ was snoozed but early wake up was confirmed (%{public}@). Cancelling.
%{public}@ setting alarms:%{public}@, sleep alarms: %{public}@, persist: %i, notify %i, override: %i
%{public}@ setting alarms - needs update: %i
%{public}@ has a snooze fire date of %{public}@ and we want to snooze until %{public}@.  Picking later date
%{public}@ has a bed-time snooze fire date of %{public}@ and we want to snooze until %{public}@.  Picking later date
MTAlarmStorage - Finished Snoozing Alarm
%{public}@ couldn't find matching alarm to snooze for %{public}@
MTAlarmStorage - Failed Snoozing Alarm
%{public}@ Setting non-repeating alarm %{public}@ to disabled
%{public}@ dismissed alarm %{public}@ at %{public}@
MTAlarmStorage - Finished Dismissing Alarm
%{public}@ couldn't find matching alarm to dismiss for %{public}@
MTAlarmStorage - Failed Dismissing Alarm
%{public}@ notifying observers for alarm addition
%{public}@ notifying observers for alarm change
%{public}@ notifying observers for alarm removal
%{public}@ notifying observers for alarm snooze
%{public}@ notifying observers for alarm dismissal
%{public}@ notifying observers for alarm fire
%{public}@ notifying observers for next alarm change
MTAlarmStorage - Next Alarm Changed
MTAlarmStorage - Fired Alarm
%{public}@ significant time change detected, rescheduling alarms
%{public}@ resetting firedDate on %{public}@ because it's in the future
%{public}@ resetting dismissedDate on %{public}@ because it's in the future
%{public}@ resetting bedtimeFiredDate on %{public}@ because it's in the future
%{public}@ resetting bedtimeDismissedDate on %{public}@ because it's in the future
%{public}@ resetting lastModifiedDate on %{public}@ because it's in the future
%{public}@ handling notification %{public}@
-----MTAlarmStorage-----
Alarms: %{public}@
Sleep Alarms: %{public}@
%{public}@ removing all alarms (sans sleep)
Start monitoring : Springboard/Carousel start
Cannot start monitoring Springboard/Carousel start because it was already started
Stop monitoring : Springboard/Carousel start
Springboard/Carousel started = %{public}@
%s Handled resolve label for intent: %@ with result: %@
%s Failed to fetch timers for intent: %@, error: %@
%s Handled resolve duration for intent: %@ with result: %@
%s Handled resolve type for intent: %@ with result: %@
%s Attempting to remove conflicting timer: %@
%s Successfully removed conflicting timer: %@
%s Failed to remove conflicting timer: %@ with error: %@
%s Successfully %@ create timer intent %@ with response %@
%s Failed to %@ create timer intent %@ with response: %@, error: %@
[Sound] Converting %{public}@ to UNNotificationSound for category %{public}@
[Sound] Made %@
[Sound] Converting %@ to MTSound
%{public}@ rescheduling %{public}ld alarms
%{public}@ scheduling %{public}ld alarms
%{public}@ scheduling %{public}ld additional alarms
%{public}@ fired last alarm more than %d minutes ago.  Seeing if we have to fire any alarms we missed since %{public}@
%{public}@ the last alarm fire date is ahead of the current date (probably because we went back in time).
%{public}@ fired last alarm less than %d minutes ago.  Seeing if we have to fire any alarms we missed since %{public}@
%{public}@ Setting really old snoozed alarm %{public}@ to disabled
%{public}@ Clearing fire date for really old snoozed alarm %{public}@
%{public}@ Clearing fire date for really old firing alarm %{public}@
%{public}@ scheduling %{public}lu alarms
%{public}@ scheduled alarms: %{public}@
%{public}@ unscheduling %{public}lu alarms
%{public}@ next alarm changed: %{public}@
MTAlarmScheduler - Changing Next Alarm
%{public}@ has %{public}ld scheduled alerts and notifications
%{public}@ Scheduling persistent timer for next alert at %{public}@
%{public}@ Timer will fire %f minutes from now
%{public}@ Timer will fire %f seconds from now
%{public}@ Timer should have fired.  Triggering it now
%{public}@ Unscheduling persistent timer.
%{public}@ Alarm timer fired
%{public}@ Alarm %{public}@ is for non-visible event %{public}@
%{public}@ Alarm %{public}@ doesn't play on this device
MTAlarmScheduler - Firing Alarm
%{public}@ %{public}@ fired (scheduled fire date: %{public}@)
%{public}@ first dismissing related notifications for %{public}@
%{public}@ post notification for %{public}@
%{public}@ not posting notification for %{public}@
%{public}@ no next alarm
%{public}@ Alarm %{public}@ was supposed to fire but is no longer scheduled
%{public}@ Scheduled alarms: %{public}@
%{public}@ Find notifications with current trigger date in range %{public}@
%{public}@ Alarm %{public}@ should actually fire in %f seconds
%{public}@ fired all alarms.  Rescheduling.
%{public}@ Setting last alarm trigger date to %{public}@
%{public}@ received update of alarms %{public}@.  Rescheduling them.
%{public}@ posting snooze countdown notification for snoozed alarm %{public}@
-----MTAlarmScheduler-----
Scheduled Alarms: %{public}@
Not scheduling %{public}@ because sleep schedule is disabled
Not scheduling alarm %{public}@ because it's disabled
Not scheduling bedtime triggers
Failed to reload alarm widget timeline %{public}@, error: %{public}@
%{public}@: didAddAlarms
%{public}@: didRemoveAlarms
%{public}@: didDismissAlarm
%{public}@: didFireAlarm
%{public}@: didSnoozeAlarm
%{public}@: didUpdateAlarms
%{public}@: alarm %{public}@ requested reload bypass
Dropping undecodeable sync data from %{public}@
%{public}@ Processing os_state handler
State: %{public}@
%{public}@ Error serializing state data: %{public}@
%{public}@ Ignoring user bedtime %@.
%{public}@ stopping session with reason %{public}@
%{public}@ User bed time unset.  Using: %@
%{public}@ User bed time was: %@
%{public}@ User wake time was: %@
[Triggers] %{public}@ handleSystemReadyWithAlarmStorage %lu alarms
[Triggers] %{public}@ didAddAlarms: %{public}@
[Triggers] %{public}@ didUpdateAlarms: %{public}@
[Triggers] %{public}@ didChangeNextAlarm: %{public}@
[Triggers] %{public}@ didSnoozeAlarm: %{public}@, snoozeAction: %{public}@
[Triggers] %{public}@ Telling context store and knowledge store that alarm (%{public}@) has snoozed
[Triggers] %{public}@ didDismissAlarm: %{public}@, dismissAction: %{public}@
[Triggers] %{public}@ Telling context store and knowledge store that alarm (%{public}@) has been dismissed
[Triggers] %{public}@ Ignoring dismissAction (%{public}@)
[Triggers] %{public}@ didFireAlarm: %{public}@, triggerType: %{public}@
[Triggers] %{public}@ Telling context store and knowledge store that alarm (%{public}@) has fired
[Triggers] %{public}@ Ignoring triggerType (%{public}@)
[Triggers] %{public}@ didRemoveAlarms: %{public}@
%{public}@ could not save objects to knowledge store with error: %{public}@
[Triggers writeAlarmUpdatedEventForAlarms] set isEnableDisableModification for alarm %@
[Triggers writeAlarmUpdatedEventForAlarms] set isTimeDifferenceModification for alarm %@
[Triggers writeAlarmUpdatedEventForAlarms] could not find old alarm
[Triggers writeAlarmUpdatedEventForAlarms] isTimeDifferenceModification and isEnableDisableModification are false
Did NOT save alarm biome event of type: %@ because device is class c locked
%{public}@ didAddTimers %{public}@
%{public}@ didUpdateTimers %{public}@
%{public}@ didFireTimer %{public}@
%{public}@ Donating intent: %{public}@
Error donating timer create intent: %{public}@
%@ donated successfully
%@ - Cache Miss
%{public}@ - Error getting alarms: %{public}@
%{public}@ posting distributed notification for alarm: %{public}@
%{public}@ posting distributed notification for timer: %{public}@
%{public}@ System is ready.
Restore is done or not needed.
Restore isn't done.
%{public}@ verifying restore is done
%{public}@ has been notified that restore is done (received %{public}@) or not needed.
%{public}@ restore already handled
%{public}@ has been notified of F5 demo
-----MTSystemStateListener-----
Restore done: %{public}d
%{public}@ loading cities, needs city data update: %d
%{public}@ userWentToBed
%{public}@ telling observers user went to bed
%{public}@ userWokeUp
%{public}@ telling observers user woke up
%{public}@ dismissWakeUpAlarm (%{public}@)
%{public}@ shouldScheduleAlarmTimeoutForSecondsFromNow
%{public}@ telling observers about added sleep alarm
%{public}@ telling observers about removed sleep alarm
%{public}@ sleep alarm changes: %@
%{public}@ telling observers about modified sleep alarm
%{public}@ sleep alarm changes unimportant.
%{public}@ sleep alarm dismissed: (%{public}@)
%{public}@ telling observers bedtime reminder fired at %{public}@
%{public}@ telling observers bedtime reminder was confirmed at %{public}@
%{public}@ telling observers bedtime reminder was snoozed until %{public}@
%{public}@ telling observers bedtime was reached at %{public}@
%{public}@ telling observers waketime time was reached at %{public}@
%{public}@ telling observers wake up alarm fired at %{public}@
%{public}@ telling observers wake up alarm was snoozed until %{public}@
%{public}@ telling observers wake up alarm was dismissed at %{public}@ (%{public}@)
%{public}@ telling observers %{public}@ ended at %{public}@
%{public}@ significant time change detected
%{public}@ pairedDevicePreferencesChanged
-----MTSleepCoordinator-----
%@: %d
%s Failed to %@ delete timer intent %@ %@, response: %@
%s Successfully %@ delete timer attribute intent %@ with response %@
%s Deleting%@ timer %@ from timer manager %@
%s Failed to delete%@ timer %@ from timer manager %@ due to error %@
%s Filtering timer for delete to single unnamed timer: %@
%s Failed to %@ set timer attribute intent %@%@
%s Successfully %@ set timer attribute intent %@ with response %@
[Sound] No tone ID is specified in defaults. Fall back to the ToneLibrary default
[Sound] No media item ID is specified in defaults. Switch to the tone type and use the ToneLibrary default
[Sound] Alarm sound from stored defaults (toneID: %@, mediaItemID: %@)
[Sound] No vibration ID is specified in defaults. Use the ToneLibrary default
[Sound] Alarm vibration from stored defaults (vibrationID: %@)
[Sound] Default alarm sound is %@
[Sound] Default timer sound is %@
[Sound] Storing Alarm Defaults (soundTypeKey: %@, toneIDKey: %@, mediaItemIDKey: %@, vibrationIDKey: %@)
[Sound] Storing Timer Defaults (toneIDKey: %@)
%{public}@ Using snapshot quiescing window of %{public}f
%{public}@ skipping migration from old storage, as this device doesn't support the old storage
%{public}@ migrating old alarms and notifications to storage
%{public}@ need to migrate alarms: %{public}@ and sleep alarm: %{public}@
%{public}@ need to migrate %{public}ld alarms and sleep alarm %{public}d
%{public}@ migrated alarm %{public}@ (enabled: %{public}d)
%{public}@ migrated sleep alarm %{public}@ (enabled: %{public}d)
%{public}@ migrated to alarms: %{public}@ and sleep alarm: %{public}@
%{public}@ skipping migration removal, as this device doesn't support the old storage
%{public}@ removing old alarms and notifications from storage
%{public}@ notification cleanup, as this device doesn't support the old storage
%{public}@ cleaning up old notifications
Date before computing earlierst trigger date for %{public}@: %{public}@
Computing next fire date for %{public}@ after %{public}@
Alarm %{public}@ is snoozed:%d, repeats: %d
Alarm %{public}@ override alarm date: %{public}@
Alarm %{public}@ next alarm date: %{public}@
Alarm %{public}@ alarm trigger: %{public}@
%{public}@ has next fire date %{public}@ after %{public}@
Alarm %{public}@ include snooze: %d
Snooze hasn't fired yet (%{public}@) for alert %{public}@
Snooze has already fired (%{public}@) for alert %{public}@
Alarm %{public}@ candidate triggers after sorting: %{public}@
%{public}@ has next trigger %{public}@
%{public}@ %{public}@ after %{public}@ (%{public}@)
%{public}@ %{public}@ %{public}@
%{public}@ %{public}@ %{public}@ is nil
%{public}@ earliest trigger date: %{public}@
[Migration] (1.8) pushAlertsEnabled: %d
[Migration] (1.8) playOptions: %lu
[Migration] (2.6) old enabled: %d, sleepSchedule: %d
[Migration] (2.6) new enabled: %d, sleepSchedule: %d
Initializing %{public}@ with tracker: %{public}@
%{public}@ sessionDidComplete: %{public}@
%{public}@ writing session
%{public}@ notifying %{public}@
%{public}@ session has nothing to write
%{public}@ session is ready to write
%{public}@ session needs additional processing
%{public}@ failed to process session
%{public}@ archiving session
%{public}@ archiveSession: %{public}@
%{public}@ creating %{public}@ directory at %{public}@
%{public}@ failed to create directory at %{public}@
%{public}@ wrote sessions to file %{public}@
%{public}@ failed to write sessions file %{public}@
%{public}@ writeSession: %{public}@
%{public}@ can write session data
%{public}@ no unprocessed in bed intervals to save
%{public}@ device hasn't been unlocked since boot.  Waiting for unlock...
%{public}@ device has been unlocked.  Writing samples to HealthKit
%{public}@ device has been unlocked but no unprocessed intervals to save
%{public}@ caught exception %{public}@ when trying to read sessions
%{public}@ unarchiving failed with error %{public}@
%{public}@ no data found in file %{public}@
%{public}@ failed to remove session data file error %{public}@
%{public}@ doesn't have write access for HKCategoryTypeIdentifierSleepAnalysis
%{public}@ Processing session: %@
%{public}@ Skipping session due to missing bedtime or wake time: %@
%{public}@ Interval is nil.
%{public}@ sleep interval: %f greater than allowed: %f. Will not be used
%{public}@ Timer added - Request snapshot
%{public}@ Timer updated - Request snapshot
%{public}@ Timer removed - Request snapshot
%{public}@ initializing...
%{public}@ broadcasting %{public}@
%{public}@ registering %{public}@ for %{public}@
%{public}@ posting %{public}@ for %{public}@
%{public}@ unregistering %{public}@ for %{public}@
%{public}@ sensitiveUIStateChanged
%{public}@: %{public}@
%{public}@: Returning widget URL: %{public}@
%{public}@: widget override date: %{public}@
Initializing %{public}@...
%{public}@ calling update handler with %{public}@
%{public}@ _handleAlarmsDidChange
%{public}@ setting up notification centers
%{public}@ setting %lu categories for %{public}@
%{public}@ handling responses with %{public}@
%{public}@ firing %{public}@
%{public}@ adding request %{public}@
%{public}@ failed to fire %{public}@ with error %{public}@
%{public}@ fired %{public}@
%{public}@ dismissing related notifications for %{public}@
%{public}@ dismissing any notifications for %{public}@
%{public}@ alarm is nil
%{public}@ dismissing notifications for %{public}@ (%{public}@)
%{public}@ dismissing notifications with identifiers %{public}@
%{public}@ tearDownNotificationsForEventIdentifiers %{public}@
%{public}@ Tearing down %{public}@
%{public}@ not interrupting audio or locking device because we're in a call
%{public}@ interrupting audio
%{public}@ locking device
%{public}@ dismissing %{public}@
%{public}@ timer is nil
%{public}@ removing all delivered notifications.
%{public}@ migrating old timers to storage
%{public}@ removing old timers and notifications from storage
%{public}@ received significant time change notification. Notifying observers
%{public}@ timeZone: %{public}@
Add Alarm
Update Alarm
Remove Alarm
Dismiss Alarm
Snooze Alarm
Sync Add Alarm
Sync Update Alarm
Sync Remove Alarm
Sync Dismiss Alarm
Sync Snooze Alarm
Fire Alarm
Schedule Alarm
Add Timer
Update Timer
Remove Timer
Dismiss Timer
Repeat Timer
Schedule Timer
Fire Timer
%{public}@ executing %{public}@ immediately
%{public}@ scheduling %{public}@
%{public}@ opening transaction for %{public}@
%{public}@ closing transaction for %{public}@
%{public}@ %{public}@ completed
%{public}@ %{public}@ has no tasks
%{public}@ Not taking power assert for %{public}@ because assertion timeout is 0.
%{public}@ - Error getting timers: %{public}@
%{public}@ warming...
%{public}@ setting default duration to %f
%{public}@ Error getting timers:%{public}@
%{public}@ addTimer:%{public}@
MTTimerManager - Adding Timer
%{public}@ updateTimer:%{public}@
MTTimerManager - Updating Timer
%{public}@ removeTimer:%{public}@
MTTimerManager - Removing Timer
%{public}@ dismissTimerWithIdentifier:%{public}@
MTTimerManager - Dismissing Timer
%{public}@ repeatTimerWithIdentifier:%{public}@
MTTimerManager - Repeating Timer
%{public}@ received MTTimerServerReadyNotification
%{public}@ notified timers added: %{public}@
MTTimerManager - Timer Added
%{public}@ notified timers update: %{public}@
MTTimerManager - Timer Updated
%{public}@ notified timers removed: %{public}@
MTTimerManager - Timer Removed
%{public}@ notified timer fired: %{public}@
MTTimerManager - Timer Fired
%{public}@ notified timer dismissed: %{public}@
MTTimerManager - Timer Dismissed
%{public}@ notified next timer changed: %{public}@
MTTimerManager - Next Timer Changed
%s Failed to %@ reset timer intent %@ %@, response: %@
%s Successfully %@ reset timer intent %@ with response %@
%{public}@ checking in...
%{public}@ reconnecting...
%{public}@ updating cache %{public}@
%{public}@ calling connection provider %{public}@
%{public}@ remote block being called on connection provider %{public}@...
%{public}@ error while reconnecting: %{public}@
%{public}@ finish block called for next alarm
%{public}@ finish block called with no next alarm
%{public}@ finish block called with next alarm: %{public}@, error: %{public}@
%{public}@ addAlarm:%{public}@
MTAlarmManager - Adding Alarm
%{public}@ updateAlarm:%{public}@
MTAlarmManager - Updating Alarm
%{public}@ removeAlarm:%{public}@
MTAlarmManager - Removing Alarm
%{public}@ snoozeAlarmWithIdentifier:%{public}@
MTAlarmManager - Snoozing Alarm
%{public}@ dismissAlarmWithIdentifier:%{public}@ (%{public}@)
MTAlarmManager - Dismissing Alarm
%{public}@ received MTAlarmServerReadyNotification
%{public}@ received MTAlarmServerReadyNotification, posting MTAlarmManagerStateReset
%{public}@ notified alarms added: %{public}@
MTAlarmManager - Alarm Added
%{public}@ notified alarms updated: %{public}@
MTAlarmManager - Alarm Updated
%{public}@ notified alarms removed: %{public}@
MTAlarmManager - Alarm Removed
%{public}@ notified alarm snoozed: %{public}@
MTAlarmManager - Alarm Snoozed
%{public}@ notified alarm fired: %{public}@
MTAlarmManager - Alarm Fired
%{public}@ notified alarm dismissed: %{public}@
MTAlarmManager - Alarm Dismissed
%{public}@ notifying next alarm changed: %{public}@
MTAlarmManager - Next Alarm Changed
%{public}@ notified next alarm changed: %{public}@
%{public}@ notified alarms changed: %{public}@
MTAlarmManager - Refreshing Sleep Alarms
MTAlarmManager - Resetting Sleep Alarms Snooze State
%{public}@ handleSystemReady, has active timer session, processing update
%{public}@ handleSystemReady, no active session found
%{public}@ did add timers, starting sessions
%{public}@ did fire timer, finishing session
%{public}@ did update timer, updating session
%{public}@ didUpdateTimers inside serializer
%{public}@ didUpdateTimers inside na each
%{public}@ processTimerUpdate
%{public}@ starting/resuming timer
%{public}@ pausing timer
%{public}@ stopping timer
%{public}@ cannot process timer state change: %{public}@
%{public}@ activating BSServiceConnection
%{public}@ created connection: %{public}@
%{public}@ launch angel connection activated to bundle id: %{public}@
%{public}@ launch angel connection interrupted to bundle id: %{public}@
%{public}@ launch angel connection invalidated to bundle id: %{public}@
%{public}@ calling connection activate
%{public}@ no server connection, rebuilding
%{public}@ server connection created
%{public}@ server not created for connection: %{public}@
%{public}@ resuming timer
%{public}@ resending timer data entry
%{public}@ updating timer to state %lu
%{public}@ error pausing timer from widget listerener: %{public}@
%{public}@ updated timer state to %lu successfully
%s Updating%@ timer %@ from timer manager %@
%s Failed to update%@ timer %@ from timer manager %@ due to error %@
%s Filtering timer for update to single unnamed timer: %@
%s Successfully handled search timers intent: %@ with response %@
%s Failed to handle search timers with intent: %@ due to error %@
%{public}@ Updating keep off until date: %{public}@
%{public}@ We are before keep off until date: %{public}@, turning off %{public}@ if it's on
%{public}@ no sleep alarm, turning off %{public}@ if it's on
%{public}@ sleep schedule for %{public}@ not enabled, turning off %{public}@ if it's on
%{public}@ %{public}@ not enabled for alarm %{public}@, turning off %{public}@ if it's on
%{public}@ waiting 60 seconds before turning on %{public}@ for alarm %{public}@
%{public}@ turning on %{public}@ if it's not on for alarm %{public}@
%{public}@ not in sleep window for alarm %{public}@, turning off %{public}@ if it's on
%{public}@ ignoring user requested off because it's for previous sleep window
%{public}@ Alarm added - Donating intent: %{public}@
Error donating alarm create intent: %{public}@
Error deleting donations for update: %{public}@
%{public}@ Interactions for updated alarm %@ deleted successfully
%{public}@ Updated alarm - Donating intent: %{public}@
%{public}@ Updated Alarm %@ donated successfully
Error donating alarm enable intent: %{public}@
%{public}@ Alarm updated - Donating intent: %{public}@
Error donating alarm update intent: %{public}@
Error deleting donations: %{public}@
Interactions for %@ deleted successfully
%{public}@ loading legacy data
%{public}@ loading user preferences
%{public}@ loading scheduled notifications
%{public}@ found %lu scheduled notifications
%{public}@ migrated from springboard defaults
%{public}@ upgrading alarms
%{public}@ found %ld alarms to upgrade
%{public}@ Old alarms being upgraded: %@
%{public}@ New alarms already present: %@
%{public}@ No alarms found to upgrade
%{public}@ upgrading timer
%{public}@ setting current sound: %@
%{public}@ setting current sound: Stop Playing
%{public}@ Removing AlarmList
%{public}@ Removing SBCountdownTimerSoundIdentifier
%{public}@ Removing SBCountdownTimerTimeIdentifier
%{public}@ Reading alarms from preferences: %@
%{public}@ Invalid alarm found in preferences :: %@
%{public}@ Reading sleep alarm from preferences: %@
%{public}@ reconiling alarms with notifications
%{public}@ found scheduled notification matching alarm %{public}@.  Forcing active for migration.
%{public}@ finished reconiling alarms with notifications
%{public}@ loading timer defaults
%{public}@ purging legacy data
%{public}@ deleting defaults
%{public}@ cancelling notifications
%{public}@ resuming connection
Listener %{public}@ posting lifecycle darwin notification %{public}@
%{public}@ invalidation handler called for connection %{public}@...
Connection %{public}@ not entitled
Connection to server via %{public}@ mach port was interrupted.
Connection to server via %{public}@ mach port was invalidated. Removing server side connection
%{public}@: Adding XPC client: %{public}@
%{public}@: Already has XPC client: %{public}@
%{public}@: Current XPC clients: %{public}@
%{public}@: Removing XPC client: %{public}@
%{public}@ has launched
%{public}@ supports sessions, setting up coordinator
%{public}@ does not support sessions
%{public}@ system is ready
%{public}@ migration finished
Launched: %{public}@
------------------------
%{public}@ removing user defaults
%{public}@ initializing
%{public}@ received %{public}@ notification for %d alarms.
%{public}@ received MTAlarmManagerStateReset notification.
%{public}@ asynchronously reloading alarms
%{public}@ calling reload block
%{public}@ finished reloading
%{public}@ failed reloading: %{public}@
%{public}@ creating sync directory at %{public}@
%{public}@ failed to write create directory at %{public}@
%{public}@ wrote pending changes %{public}@ to file %{public}@
%{public}@ failed to write pending changes to file %{public}@
%{public}@ stored sync version is too old
%{public}@ read pending changes %{public}@ from file %{public}@
%{public}@ got nil pending changes.
%{public}@ caught exception %{public}@ when trying to read pending changes
%{public}@ had no pending changes in file %{public}@
%{public}@ failed to remove bogus pending changes with error %{public}@
[%{public}@] Will enter state %@ with previous state %{public}@
[%{public}@] Did enter state %{public}@ with previous state %{public}@
%{public}@ _handlePrefsChanged: pushAlertsEnabled = %d
%{public}@ unexpected error getting bundle identifier for %{public}@: %{public}@
%{public}@ rescheduling %{public}ld timers
%{public}@ fired last timer more than %d minutes ago.  Seeing if we have to fire any timers we missed since %{public}@
%{public}@ the last timer fire date is ahead of the current date (probably because we went back in time).
%{public}@ fired last timer less than %d minutes ago.  Seeing if we have to fire any timers we missed since %{public}@
%{public}@ Setting really old running timer %{public}@ to stopped
%{public}@ scheduling %{public}lu timers
%{public}@ scheduled timers: %{public}@
%{public}@ unscheduling %{public}lu timers
%{public}@ next timer changed: %{public}@
MTTimerScheduler - Changing Next Timer
%{public}@ Updating persistent timer for %{public}ld scheduled timers
%{public}@ Scheduling persistent timer for next timer at %{public}@
%{public}@ Timer should have fired. Triggering it now
%{public}@ Timer timer fired
MTTimerScheduler - Firing Timer
%{public}@ no next timer
%{public}@ Timer %{public}@ was supposed to fire but is no longer scheduled
%{public}@ Scheduled timers: %{public}@
%{public}@ Timer %{public}@ should actually fire in %f seconds
%{public}@ fired all timers.  Rescheduling.
%{public}@ Setting last timer trigger date to %{public}@
-----MTTimerScheduler-----
Scheduled Timers: %{public}@
%{public}@ Dismissing notifications for timer: %{public}@
Initializing %{public}@ with delegate %{public}@
%{public}@ will enqueue changes %{public}@
%{public}@ ready to enqueue changes
%{public}@ enqueued %{public}@
%{public}@ stopped enqueing at %{public}@
%{public}@ continuing session...
%{public}@ enqueued all %lu changes
%{public}@ has %lu changes to apply
%{public}@ applying %{public}@
%{public}@ skipping invalid change %{public}@
%{public}@ finished applying %lu changes
%{public}@ session %{public}@ wants to reset data store
%{public}@ completed succesfully
%{public}@ failed with error %{public}@
%{public}@ received notification
%{public}@ device has been unlocked
%{public}@ device hasn't been unlocked
%{public}@ posting MTDeviceHasBeenUnlockedForFirstTime notification
%{public}@ Found initial hasBeenUnlockedSinceBoot value of [%d]
-----MTDeviceListener-----
Unlocked since boot: %{public}d
%{public}@ sleep manager initialized
%{public}@ updateSleepAlarms
%{public}@ retrieving sleep schedule model
%{public}@ failed to retrieve sleep schedule model with error: %{public}@
%{public}@ retrieved sleep schedule model: %{public}@
%{public}@ sleep schedule is nil before completing onboarding
%{public}@ sleep schedule is nil after completing onboarding.
%{public}@ mapping sleep model to alarms
%{public}@ setting mapped alarms to storage
%{public}@ completed sleep onboarding check with result: %{public}@, error: %{public}@ 
%{public}@ resetSleepAlarmSnoozeState
%{public}@ needs sleep migration, fetching watchSleepFeaturesEnabled async
%{public}@ failed to get sleep settings, error: %{public}@ 
%{public}@ fetching sleep alarm from health
%{public}@ failed to retrieve upcoming sleep occurrence with error: %{public}@
%{public}@ failed to retrieve sleep schedule with error: %{public}@
%{public}@ no upcoming sleep schedule occurrence
%{public}@ not informing sleep store of alarm dismiss: %{public}@, action: %{public}@
%{public}@ informing sleep store of alarm dismiss: %{public}@, dismiss date:%{public}@ action: %{public}@
%{public}@ sleep store sleepAlarmWasDismissedOnDate completed for alarm id: %{public}@ with status: %d, error: %{public}@
%{public}@ sleep store sleepAlarmWasSnoozedUntilDate completed for alarm id: %{public}@ with status: %d, error: %{public}@
%{public}@ sleep store sleepAlarmWasModified completed with status: %d, error: %{public}@
%{public}@ no active paired device supporting syncing.  Syncing is disabled
%{public}@ this device doesn't support syncing.
%{public}@ active paired device changed.
%{public}@ modified after %{public}@ (%{public}@)
%{public}@ already fired after %{public}@ (%{public}@)
%{public}@ already dismissed after %{public}@ (%{public}@)
Next trigger date %{public}@ is prior to requested date %{public}@
%{public}@ read data version: %f
Illegal fire time class %{public}@
Starting %{public}@
Stopping %{public}@
System is ready: %{public}@.  Will post MTAlarmServerReadyNotification.
System isn't ready...
MTAlarmServer - Adding Alarm
MTAlarmServer - Updating Alarm
MTAlarmServer - Removing Alarm
MTAlarmServer - Snoozing Alarm
MTAlarmServer - Dismissing Alarm
%{public}@ calling to refresh sleep alarms
%{public}@ could not refresh sleep alarms:%{public}@
%{public}@ calling to reset sleep alarms snooze state
%{public}@ could not reset sleep alarms snooze state:%{public}@
-----MTAlarmServer-----
System Ready: %@
Clients: %{public}@
%s Failed to retrieve timers from timer manager %@: %@
%s Failed to resolve timer %@ from timer manager %@ due to error %@
%s Filtering matched timers for allowedTimerStatesForFollowup:%@ to: %@
%s Filtering resolved timer matches to single unnamed timer: %@
%s Found %ld matching timers for multi target timer: %@
%s Disambiguating %ld matching timers for single target timer: %@
%s Found no matching timers but 1 alternate timer: %@ for target timer: %@
%s Found no matching timers for target timer: %@
%s Found matching timer: %@ for target timer: %@
System is ready: %{public}@.  Will post MTTimerServerReadyNotification.
MTTimerServer - Adding Timer
MTTimerServer - Updating Timer
MTTimerServer - Removing Timer
MTTimerServer - Dismissing Timer
MTTimerServer - Repeating Timer
-----MTTimerServer-----
%{public}@ posting CFUserNotification for %{public}@
%{public}@ failed to post CFUserNotification
%{public}@ cancelling CFUserNotification for %{public}@
%{public}@ calling handler for %{public}@
%{public}@ couldn't find callback for notification %{public}@
%{public}@ loading changes
%{public}@ loaded %lu changes
%{public}@ unsupported change type %{public}@
%{public}@ enqueuing action %{public}@
%{public}@ jumping over pending change %{public}@
%{public}@ unable to merge %{public}@ into %{public}@
%{public}@ dequeing changes %{public}@
%{public}@ resolving incoming change %{public}@
%{public}@ incoming change %{public}@ conflicts with pending change %{public}@
%{public}@ dropping conflicting pending change %{public}@
%{public}@ dropping conflicting incoming change %{public}@
%{public}@ retry timer fired (%{public}@)
Initialized %{public}@
%{public}@ resuming service
%{public}@ suspending service
%{public}@ requests sync %{public}@
%{public}@ setHasChangesAvailable
%{public}@ wants to start sending session %{public}@ for request %{public}@
%{public}@ starting sending session %{public}@
%{public}@ not ok to sync yet
%{public}@ starting receiving session %{public}@
%{public}@ finished sending session %{public}@
%{public}@ finished sending session %{public}@ with error %{public}@
%{public}@ finished request %{public}@ with error %{public}@
%{public}@ finished receiving session %{public}@
%{public}@ finished receiving session %{public}@ with error %{public}@
%{public}@ had a conflict between %{public}@ (preferred) and %{public}@ (rejected)
%{public}@ retrying %{public}@
%{public}@ told it's ok to sync from %{public}@.
-[MTPauseResumeTimerIntentHandler resolveTargetTimerForPauseTimer:withCompletion:]
v24@?0@"INTimerResolutionResult"8@"NSError"16
-[MTPauseResumeTimerIntentHandler resolvePauseMultipleForPauseTimer:withCompletion:]
-[MTPauseResumeTimerIntentHandler confirmPauseTimer:completion:]
-[MTPauseResumeTimerIntentHandler handlePauseTimer:completion:]
B16@?0@"<MTTimerIntentSupport>"8
@"NSError"16@?0@"MTMutableTimer"8
v24@?0@"NSArray"8@"NSError"16
-[MTPauseResumeTimerIntentHandler resolveTargetTimerForResumeTimer:withCompletion:]
-[MTPauseResumeTimerIntentHandler resolveResumeMultipleForResumeTimer:withCompletion:]
-[MTPauseResumeTimerIntentHandler confirmResumeTimer:completion:]
-[MTPauseResumeTimerIntentHandler handleResumeTimer:completion:]
-[MTPauseResumeTimerIntentHandler _responseToPauseTimerIntent:withPausedTimers:error:dryRun:]
confirm
handle
due to error %@
confirmed
handled
-[MTPauseResumeTimerIntentHandler _responseToResumeTimerIntent:withResumedTimers:error:dryRun:]
StartDate
EndDate
EndReason
Intervals
MetaData
NeedsAdditionalProcessing
needsAdditionalProcessing: %d
intervals: %lu
<%@ %p start: %@ end: %@ %@ reason: %@ metadata: %@>
AlarmDismissal
WakeTimeReached
ConfigurationChanged
ManualExit
Error
MTSyncSnooze+ProtoBuffer.m
Unsupported class for action %@
Unexpected codeable: %@
data
alarmId
hour
minute
allowsSnooze
isSleepAlarm
bedtimeReminderMinutes
bedtimeHour
bedtimeMinute
daySetting
repeatDay
totalRepeatCount
remainingRepeatCount
title
soundType
sound
soundVolume
soundSongId
lastModified
revision
vibe
AlarmFiredNotificationNamePrefix
AlarmSnoozedNotificationNamePrefix
AlarmEditingProxyID
ALARM_DEFAULT_TITLE
%@::%@
Settings :: ID is wrong type
Settings :: ID is invalid
Settings :: hour is wrong type
Settings :: hour is invalid
Settings :: minute is wrong type
Settings :: minute is invalid
Settings :: day setting is wrong type
Settings :: day setting is invalid
Settings :: settings %@
Settings is nil
Alarms
q24@?0@"Alarm"8@"Alarm"16
x-apple-clock:alarm?id=
Alarm.m
Invalid parameter not satisfying: %@
volumeIsValid
%@ %d:%02d 0x%04X "%@" %@ <%@ #%i> %@
MTXPCConnectionInfo.m
exportedObject: %@ must conform to protocol: %@
<%@:%p %@>
-[MTToggleAlarmIntentHandler handleEnableAlarm:completion:]
v20@?0B8q12
-[MTToggleAlarmIntentHandler handleDisableAlarm:completion:]
v16@?0@"NSError"8
B16@?0@"MTAlarm"8
v16@?0@"NSArray"8
@"MTIntentAlarm"16@?0@"MTAlarm"8
-[MTToggleAlarmIntentHandler handleToggleAlarm:completion:]
Found no alarm to enable/disable
@"NAFuture"16@?0@"NSArray"8
v16@?0@"NSNull"8
com.apple.clock.alarm
cities
@16@?0@"MTCity"8
com.apple.mobiletimer.WorldClockWidget
com.apple.mobiletimer.alarm
alarm update
CHSWidgetConfigurationReader
Class getCHSWidgetConfigurationReaderClass(void)_block_invoke
MTWidgetUtilities.m
Unable to find class %s
v8@?0
void *ChronoServicesLibrary(void)
CHSTimelineController
Class getCHSTimelineControllerClass(void)_block_invoke
B16@?0@"NSString"8
com.apple.language.changed
MTScheduledList.m
Not a mutable ordered collection
v32@?0@"MTScheduledObject"8Q16^B24
q24@?0@"MTScheduledObject"8@"MTScheduledObject"16
B16@?0@"MTScheduledObject"8
@"MTScheduledObject"16@?0@"MTTrigger"8
v16@?0@"MTScheduledObject"8
Alerts: %@, Notifications: %@, Events: %@
MTTimers
MTTimerModifiedDate
MTTimerStorageVersion
com.apple.mobiletimerd.MTTimerStorage
com.apple.MTTimerStorage.access-queue
timerID
Timer already exists!
Can't update timer from %@ to %@
Timer storage: %@
Timer doesn't exist
Timer storage - trying to update timer that does not exist
Timer does not exist!
Timer storage - trying to remove timer that does not exist
Timer storage - trying to dismiss timer that does not exist
Timer storage - trying to repeat timer that does not exist
v16@?0@"<MTTimerObserver>"8
B16@?0@"MTTimer"8
q24@?0@"MTTimer"8@"MTTimer"16
Timers
Timers Last Modified
state
None
fired
modified
toneID: %@, mediaItemID: %@, vibeID: %@, volume: %@
com.apple.MTNotificationManager.serialqueue
com.apple.distnoted.matching
com.apple.notifyd.matching
com.apple.alarm
v16@?0@"NSObject<OS_xpc_object>"8
SchedulingAssertionTimeout
%@%@
com.apple.MTAlarmSyncDataModel
@"MTSyncServiceManager"16@?0@"MTAlarmSyncDataModel"8
AlarmSync.data
Alarm Sync Managers
B16@?0@"MTTrigger"8
MTSleepCoordinatorStateMachineState.m
Unhandled sleep window case!
com.apple.MTPairedDeviceListener.access-queue
v16@?0@"<MTPairedDeviceObserver>"8
C0F3C2C3-0CDE-4DF9-A95A-789AC9A0348B
 with sync capability
%@ %@
alarmProperties
MTXPCConnectionProvider.m
Connection info must be non-nil
Provider XPC connection invalidated
v16@?0@8
@"NAFuture"16@?0@"NSError"8
v24@?0@"NSNumber"8@"NSError"16
@"NAFuture"8@?0
@24@?0@"NSXPCConnection"8@?<v@?@"NSError">16
@"NAFuture"16@?0@"NSXPCConnection"8
sleep mode
MTAlarmCategory
MTAlarmNoSnoozeCategory
MTBedtimeAlarmCategory
MTWakeUpAlarmCategory
MTWakeUpAlarmNoSnoozeCategory
AlarmSnoozeCountdown
MTAlarmDismissAction
MTAlarmSnoozeAction
MTAlarmGoToBedAction
MTBedtimeAlarm
MTSnoozeCountdown
MTScheduledFireDate
MTSnoozeable
MTPlaysOn
MTPresentGoodMorningAlert
MTDismissGoodMorningAlert
com.apple.mobiletimer
com.apple.mobiletimer.user-preferences-and-local-notifications-changed
com.apple.mobiletimer.user-preferences-changed
com.apple.mobiletimer.local-notifications-changed
com.apple.mobiletimer.user-preferences-dirty
com.apple.MobileTimer.critical
MTCriticalEventMessage
@"NSDictionary"8@?0
com.apple.MobileTimer.numberOfAlarms
com.apple.MobileTimer.numberOfActiveAlarms
com.apple.MobileTimer.numberOfRepeatingAlarms
com.apple.MobileTimer.numberOfNamedAlarms
com.apple.MobileTimer.alarmNameLength
com.apple.MobileTimer.Clock.Alarm.adds
com.apple.MobileTimer.Clock.Alarm.removes
com.apple.MobileTimer.Clock.Alarm.activations
com.apple.MobileTimer.Clock.Alarm.deactivations
com.apple.MobileTimer.SleepAlarm.Onboarding.start-views
com.apple.MobileTimer.SleepAlarm.Onboarding.end-views
com.apple.MobileTimer.SleepAlarm.views
com.apple.MobileTimer.SleepAlarm.WakeTime.edits
com.apple.MobileTimer.SleepAlarm.Bedtime.edits
com.apple.MobileTimer.SleepAlarm.activations
com.apple.MobileTimer.SleepAlarm.deactivations
com.apple.MobileTimer.SleepAlarm.History.views
com.apple.MobileTimer.SleepAlarm.sleepalarm
com.apple.MobileTimer.SleepAlarm.wakealarm
com.apple.MobileTimer.SleepAlarm.cycles
com.apple.MobileTimer.SleepAlarm.enabled
com.apple.MobileTimer.SleepAlarm.enabled-days
com.apple.MobileTimer.SleepAlarm.active-days
com.apple.MobileTimer.SleepAlarm.duration
com.apple.MobileTimer.SleepAlarm.enabled-duration
com.apple.MobileTimer.WorldClock.adds
com.apple.MobileTimer.WorldClock.removes
com.apple.MobileTimer.Stopwatch.starts
com.apple.MobileTimer.Stopwatch.resets
com.apple.MobileTimer.Stopwatch.laps
com.apple.MobileTimer.Stopwatch.pauses
com.apple.MobileTimer.Timer.starts
com.apple.MobileTimer.Timer.pauses
com.apple.MobileTimer.Timer.resumes
com.apple.MobileTimer.Timer.cancels
com.apple.MobileTimer.MultipleTimers.running
multipleTimersCount
com.apple.MobileTimer.Siri.Alarm.adds
com.apple.MobileTimer.Siri.Alarm.removes
com.apple.MobileTimer.Siri.Alarm.searches
com.apple.MobileTimer.Siri.Alarm.activations
com.apple.MobileTimer.Siri.Alarm.deactivations
com.apple.MobileTimer.Siri.Alarm.snoozes
com.apple.MobileTimer.Siri.Alarm.dismisses
com.apple.MobileTimer.Siri.Timer.searches
com.apple.MobileTimer.Siri.Timer.sets
com.apple.MobileTimer.Siri.Timer.cancels
com.apple.MobileTimer.Siri.Timer.pauses
com.apple.MobileTimer.Siri.Timer.resumes
com.apple.MobileTimer.Siri.Timer.dismisses
com.apple.MobileTimer.Sync.Error
com.apple.MobileTimer.Sync.success
com.apple.MobileTimer.Sync.failure
com.apple.MobileTimer.Alarm.add
com.apple.MobileTimer.Alarm.delete
com.apple.MobileTimer.Alarm.update
com.apple.MobileTimer.SleepAlarm.add
com.apple.MobileTimer.SleepAlarm.delete
com.apple.MobileTimer.SleepAlarm.update
com.apple.MobileTimer.Alarm.dismiss
com.apple.MobileTimer.Alarm.snooze
com.apple.MobileTimer.Alarm.snooze.stop
com.apple.MobileTimer.Bedtime.dismiss
com.apple.MobileTimer.Bedtime.snooze
com.apple.MobileTimer.Bedtime.confirm
com.apple.MobileTimer.WakeUp.dismiss
com.apple.MobileTimer.WakeUp.snooze
com.apple.MobileTimer.Timer.add
com.apple.MobileTimer.Timer.delete
com.apple.MobileTimer.Timer.update
com.apple.MobileTimer.Timer.dismiss
com.apple.MobileTimer.Timer.repeat
HHmmssSS
HHmmss
mmssSS
mmss
HH%@
%1$@
%2$@
%3$@
%4$@
MTKeepDndOffUntilDate
com.apple.mobiletimer.bedtime-mode
com.apple.mobiletimer.sleep-mode.automatic
v20@?0B8@"NSError"12
removed
isEnabled
isUserRequested
MTDateFormattingLocaleDidChangeNotification
com.apple.MTSyncServiceManager.serialqueue
Sync Service
Sync Status
Pending Changes
@16@?0@"MTIntentRepeatDay"8
Unexpected alert for go to bed action
Unexpected action type: %ld
com.apple.mobiletimerd.reset
MTAlarms
MTSleepAlarm
MTSleepAlarms
MTAlarmModifiedDate
MTAlarmStorageVersion
MTAlarmSnoozeDuration
MTBedtimeSnoozeDuration
com.apple.mobiletimerd.MTAlarmStorage
com.apple.mobiletimer.bedtime.migration.done
com.apple.MTAlarmStorage.access-queue
BED_TIME
Localizable
MTDefaultTimerVibrationID
alarmID
@"<NSCopying>"16@?0@"MTAlarm"8
@"MTAlarm"16@?0@"MTAlarm"8
@16@?0@"MTAlarm"8
Alarm already exists!
Alarm does not exist!
Alarm storage - trying to update alarm that does not exist
Alarm storage - trying to remove alarm that does not exist
v16@?0@"MTAlarm"8
Alarm storage - trying to snooze alarm that does not exist
Alarm storage - trying to dismiss alarm that does not exist
v16@?0@"<MTAlarmObserver>"8
Sleep Alarms
Alarms Last Modified
enabled
firing
snoozed
BMDiscoverabilitySignalEvent
Class getBMDiscoverabilitySignalEventClass(void)_block_invoke
MTAlarmStorage.m
void *BiomeStreamsLibrary(void)
BMStreams
Class getBMStreamsClass(void)_block_invoke
Serial MTSpringboardStartMonitor queue
v12@?0i8
v16@?0@"<MTSpringboardStartMonitorObserver>"8
com.apple.springboard.finishedstartup
-[MTCreateTimerIntentHandler resolveLabelForCreateTimer:withCompletion:]
-[MTCreateTimerIntentHandler resolveLabelForCreateTimer:withCompletion:]_block_invoke_2
-[MTCreateTimerIntentHandler resolveLabelForCreateTimer:withCompletion:]_block_invoke
v12@?0B8
-[MTCreateTimerIntentHandler resolveDurationForCreateTimer:withCompletion:]
-[MTCreateTimerIntentHandler resolveTypeForCreateTimer:withCompletion:]
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
-[MTCreateTimerIntentHandler confirmCreateTimer:completion:]
-[MTCreateTimerIntentHandler handleCreateTimer:completion:]
v12@?0I8
@"NAFuture"16@?0@"NSNull"8
B16@?0@"NSObject<MTTimerIntentSupport>"8
-[MTCreateTimerIntentHandler _createTimerWithIntent:dryRun:completion:]_block_invoke_5
-[MTCreateTimerIntentHandler _createTimerWithIntent:dryRun:completion:]_block_invoke
v16@?0@"NSObject<MTTimerIntentSupport>"8
v28@?0@"INCreateTimerIntent"8B16@?<v@?@"INCreateTimerIntentResponse">20
-[MTCreateTimerIntentHandler _responseToCreateTimerIntent:withCreatedTimer:error:dryRun:]
B32@?0@"NSObject<MTTimerIntentSupport>"8Q16^B24
void _MRMediaRemoteGetNowPlayingApplicationPlaybackState(__strong dispatch_queue_t, void (^__strong)(MRPlaybackState))
MTCreateTimerIntentHandler.m
MRMediaRemoteGetNowPlayingApplicationPlaybackState
void *MediaRemoteLibrary(void)
toneID
mediaID
vibeID
MTAlertSoundDuration
<%@:%p alertTopic: %@, toneID: %@, mediaItemID: %llu, vibeID: %@, volume: %@
MTAlarmLastTriggerDate
com.apple.MTAlarmScheduler.alarm-event
com.apple.MTAlarmTask.fire
com.apple.MTAlarmTask.reschedule
com.apple.MTAlarmScheduler.access-queue
v16@?0@?<v@?>8
MTAlarmScheduler
Scheduled alarms
alarm
<%@:%p %@, Trigger: %@>
com.apple.MTExponentialBackOffTimer.serial
<%@: %p backoff: %ld>
com.apple.mobiletimerd.MTWidgetProvider
Widget Provider - failed to reload alarm widget timeline
MTCompanionSyncSerializer.m
%@ not protobuffer serializable
Create
Update
Enable
Disable
Delete
time
label
identifier
repeat
com.apple.mobiletimer-framework.MobileTimerIntents
v16@?0q8
Alarm
CSSearchableIndex
Class getCSSearchableIndexClass(void)_block_invoke
MTAlarmIntent.m
void *CoreSpotlightLibrary(void)
com.apple.mobiletimerd.diagnostics
com.apple.mobiletimerd
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
Unexpected nil userBedtime
Wake times don't agree
NSString *getHKMetadataKeyTimeZone(void)
MTTimeInBedSessionTracker.m
HKMetadataKeyTimeZone
void *HealthKitLibrary(void)
NSString *get_HKPrivateMetadataKeySleepAlarmUserSetBedtime(void)
_HKPrivateMetadataKeySleepAlarmUserSetBedtime
NSString *get_HKPrivateMetadataKeySleepAlarmUserWakeTime(void)
_HKPrivateMetadataKeySleepAlarmUserWakeTime
ALARM_DETAIL_EVERY_MONDAY
ALARM_DETAIL_EVERY_TUESDAY
ALARM_DETAIL_EVERY_WEDNESDAY
ALARM_DETAIL_EVERY_THURSDAY
ALARM_DETAIL_EVERY_FRIDAY
ALARM_DETAIL_EVERY_SATURDAY
ALARM_DETAIL_EVERY_SUNDAY
ALARM_DETAIL_EVERY_DAY
ALARM_DETAIL_WEEKDAYS
ALARM_DETAIL_WEEKENDS
ALARM_SHORT_MONDAY
ALARM_SHORT_TUESDAY
ALARM_SHORT_WEDNESDAY
ALARM_SHORT_THURSDAY
ALARM_SHORT_FRIDAY
ALARM_SHORT_SATURDAY
ALARM_SHORT_SUNDAY
@"NSString"24@?0@"NSString"8@"NSString"16
@"NSString"32@?0@"NSString"8@"NSString"16@"NSString"24
ALARM_REPEAT_NEVER
ALARM_DETAIL_REPEAT_NEVER
ALARM_EVERY_MONDAY
ALARM_MONDAY
ALARM_EVERY_TUESDAY
ALARM_TUESDAY
ALARM_EVERY_WEDNESDAY
ALARM_WEDNESDAY
ALARM_EVERY_THURSDAY
ALARM_THURSDAY
ALARM_EVERY_FRIDAY
ALARM_FRIDAY
ALARM_EVERY_SATURDAY
ALARM_SATURDAY
ALARM_EVERY_SUNDAY
ALARM_SUNDAY
ALARM_EVERY_DAY
ALARM_WEEKDAYS
ALARM_WEEKENDS
com.apple.mobiletimerd.MTCoreDuetMonitor
transition
com.apple.MTTimerIntentDonor.serialqueue
com.apple.clock.timer
duration
v40@?0@"NSArray"8@"NSArray"16@"MTAlarm"24@"NSError"32
Restore done
MTTimerDataVersion
MTTimerID
MTTimerState
MTTimerDuration
MTTimerFireTimerClass
MTTimerFireTime
MTTimerTitle
MTTimerLastModifiedDate
MTTimerFiredDate
MTTimerDismissedDate
MTTimerSound
MTTimerSiriContext
v32@?0@"ALCity"8Q16^B24
DeviceClass
iPad
PerformanceTestingEnabled
/tmp/WorldClock-performance_test.plist
cityAddTest
timestamp
citySent
q24@?0@"ALCity"8@"ALCity"16
NPSManager
Class getNPSManagerClass(void)_block_invoke
WorldClockManager.m
void *NanoPreferencesSyncLibrary(void)
com.apple.MTSleepCoordinator.wakeupalarmtimeout-event
MTSleepTimeOutMinutesKey
com.apple.MTSleepCoordinator.access-queue
@"NAFuture"16@?0@8
v16@?0@"<MTSleepObserver>"8
sleep session
MTSleepCoordinator
isUserAsleep
com.apple.MTOSTransaction.serial
MTDeleteTimerIntentHandlerErrorDomain
-[MTDeleteTimerIntentHandler resolveTargetTimerForDeleteTimer:withCompletion:]
-[MTDeleteTimerIntentHandler resolveDeleteMultipleForDeleteTimer:withCompletion:]
-[MTDeleteTimerIntentHandler confirmDeleteTimer:completion:]
-[MTDeleteTimerIntentHandler handleDeleteTimer:completion:]
-[MTDeleteTimerIntentHandler _responseToDeleteTimerIntent:withDeletedTimers:error:dryRun:]
-[MTDeleteTimerIntentHandler _deleteTimer:multiple:dryRun:completion:]
 (dry-run)
-[MTDeleteTimerIntentHandler _deleteTimer:multiple:dryRun:completion:]_block_invoke
@16@?0@"NSObject<MTTimerIntentSupport>"8
Failed to delete%@ timer %@ from timer manager %@ due to ambiguity between timers %@
-[MTSetTimerAttributeIntentHandler handleSetTimerAttribute:completion:]
v24@?0@"INTimer"8@"NSError"16
-[MTSetTimerAttributeIntentHandler confirmSetTimerAttribute:completion:]
-[MTSetTimerAttributeIntentHandler resolveToDurationForSetTimerAttribute:withCompletion:]
-[MTSetTimerAttributeIntentHandler resolveTargetTimerForSetTimerAttribute:withCompletion:]
-[MTSetTimerAttributeIntentHandler _responseToSetTimerAttributeIntent:withUpdatedTimer:error:dryRun:]
Failed to update%@ timer %@ from timer manager %@ - renaming from %@ to %@ is not supported.
Failed to update%@ timer %@ from timer manager %@ due to invalid duration %f
snoozeAction
dismissAction
syncDate
syncID
syncVersion
MTSoundType
MTSoundToneID
MTSoundMediaItemID
MTSoundVibrationID
MTSoundVolume
MTDefaultAlarmSoundType
MTDefaultAlarmToneID
MTDefaultAlarmMediaItemID
MTDefaultAlarmVibrationID
MTDefaultTimerToneID
Unexpected MTSoundCategory: %lu
Sound must be nonnull!
Timer
GoToSleep
WakeUp
Generic
Sound type integer value out of bounds: %lu
Unexpected sound type: %lu
Timers only support tones
<%@:%p toneID: %@, mediaItemID: %@, vibeID: %@, volume: %@
v24@?0q8@"NSError"16
citiesLastModified
DefaultCityAdded
LatestUpdateVersion
<%@:%p %@ %@ dismissDate: %@ (%@)>
com.apple.mobiletimer.alarmintent
SnapshotWindow
v16@?0@"Alarm"8
com.apple.mobiletimer.MTAlarmDidFireNotification
MTAlarmID
com.apple.mobiletimer.mode.sleep
Every Day
Weekdays
Weekends
q24@?0@"MTAlarm"8@"MTAlarm"16
apple-internal-install
q24@?0@"MTTrigger"8@"MTTrigger"16
v24@?0@"NSString"8@"NSDate"16
dismissed
bedtime dismissed
bedtime fired
keep off until
overriden for date
MTAlarm.m
Must be a single time override
sleep
month
year
schedule
isSnoozed
isFiring
siriContext
bypassReload
DismissAlarm
DismissGoToBedNotification
ConfirmGoToBedNotification
DismissWakeUpAlarm
DismissSnoozeCountdownNotification
DismissWakeUpAlarmTimeOut
AlarmConfigurationChanged
WakeUpAlarmConfigurationChanged
SnoozeAlarm
SnoozeWakeUpAlarm
SnoozeGoToBedNotification
MTUnprocessedSessions
SleepSession.data
v16@?0@"<MTSleepSession>"8
v24@?0@8@"NSError"16
@"<MTSleepSession>"16@?0@"<MTSleepSession>"8
HKHealthStore
Class getHKHealthStoreClass(void)_block_invoke
MTSleepSessionManager.m
HKObjectType
Class getHKObjectTypeClass(void)_block_invoke
HKCategoryTypeIdentifier getHKCategoryTypeIdentifierSleepAnalysis(void)
HKCategoryTypeIdentifierSleepAnalysis
HKCategorySample
Class getHKCategorySampleClass(void)_block_invoke
HKDevice
Class getHKDeviceClass(void)_block_invoke
com.apple.MTMetrics.serialqueue
%@.%@
com.apple.mobiletimer-framework.preferences-and-notifications-changed
com.apple.mobiletimer-framework.preferences-changed
com.apple.mobiletimer-framework.local-notifications-changed
bundleIdentifier
B16@?0q8
B16@?0d8
com.apple.mobiletimer.MTUserDefaults
Distributed
ReleaseType
Vendor
v16@?0@"<MTSensitiveUIStateObserver>"8
com.apple.NanoAlarm
com.apple.private.NanoTimer
com.apple.private.OldNanoTimer
assistant_service
ForceClock
@"NSDate"8@?0
MTUtilities.m
date can't be nil
en_US
@"NSDate"16@?0@"NSDate"8
clock-worldclock
clock-alarm
clock-sleep-alarm
clock-stopwatch
clock-timer-running
clock-timer
v16@?0@"MTTimer"8
@"NAFuture"16@?0@"NSString"8
%@:%@
default
list
lastTimer
com.apple.%@.serial
HOURS_MINUTES_AHEAD
HOURS_MINUTES_BEHIND
DAY_FORMAT_HOURS_MINUTES_AHEAD
DAY_FORMAT_HOURS_MINUTES_BEHIND
DAY_FORMAT_HOURS_AHEAD
HOURS_AHEAD
DAY_FORMAT_MINUTES_AHEAD
DAY_FORMAT_MINUTES_BEHIND
MINUTES_AHEAD
MINUTES_BEHIND
DAY_FORMAT_ONE_HOUR_AHEAD
DAY_FORMAT_ONE_HOUR_BEHIND
ONE_HOUR_AHEAD
ONE_HOUR_BEHIND
DAY_FORMAT_HOURS_BEHIND
HOURS_BEHIND
_SPACE
clock-worldclock:default
yyyy:MM:dd:HH:mm
type
city
languageCode
timeZone
countryCode
name
unlocalizedName
countryName
unlocalizedCountryName
America/Los_Angeles
Cupertino
%@ %@, %@ || %@ %@ || %@, %@
x-apple-clock:world-clock?
alcid=%d
ccid=
[%@] title: [%@] fireDate: [%@] identifier: [%@] clockAppSectionURL: [%@]
com.apple.MTNextAlarmManager.accessqueue
MTBedtimeExpirationDuration
v16@?0@"UNUserNotificationCenter"8
ALARM_STOP_ACTION
ALARM_SNOOZE_ACTION
stop.circle
SNOOZE_STOP
TIMER_STOP_ACTION
TIMER_REPEAT_ACTION
BEDTIME_GO_TO_BED_ACTION
BEDTIME_SNOOZE_ACTION
Failed to post alarm user notifiation
B16@?0@"UNNotification"8
@16@?0@"UNNotification"8
Failed to post timer user notifiation
TIME_FOR_BED_TITLE
TIME_FOR_BED_ALARM_ON_MESSAGE_FORMAT
_SINGULAR
TIME_FOR_BED_ALARM_OFF_MESSAGE
ALARM_SNOOZING_TITLE
Unexpected trigger type %ld for scheduled alarm %@
Unexpected trigger type %ld for scheduled timer %@
TUCallCenter
Class getTUCallCenterClass(void)_block_invoke
MTUserNotificationCenter.m
void *TelephonyUtilitiesLibrary(void)
Boolean MTMRMediaRemoteSendCommand(MRMediaRemoteCommand, CFDictionaryRef)
MRMediaRemoteSendCommand
MTTimerCategory
MTTimerDismissAction
MTTimerRepeatAction
com.apple.mobiletimer.start-timer
com.apple.mobiletimer.stop-timer
MTTimerUserTitle
fromObject
toObject
<%@:%p %@ = %@ (was %@)>
v16@?0@"MTChange"8
@24@?0@"NSString"8@"MTChange"16
<%@:%p %@ >
SignificantTimeChange
com.apple.MTTimeListener.access-queue
v16@?0@"<MTTimeObserver>"8
MobileTimer
Agent
Sync
Sleep
Activity
com.apple.mobiletimer.logging
dismissDate
-[MTCreateSingleTimerIntentHandler resolveLabelForCreateTimer:withCompletion:]
-[MTCreateSingleTimerIntentHandler resolveDurationForCreateTimer:withCompletion:]
-[MTCreateSingleTimerIntentHandler resolveDurationForCreateTimer:withCompletion:]_block_invoke
-[MTCreateSingleTimerIntentHandler confirmCreateTimer:completion:]
-[MTCreateSingleTimerIntentHandler handleCreateTimer:completion:]
-[MTCreateSingleTimerIntentHandler _responseToCreateTimerIntent:withCreatedTimer:error:dryRun:]
com.apple.mobiletimer-framework.preferences-and-notifications-changed-externally
com.apple.mobiletimer-framework.preferences-changed-externally
com.apple.mobiletimer-framework.local-notifications-changed-externally
com.apple.MTGCDTimer
kMTScheduleTaskOSTransactionId
kMTScheduleTaskGroupOSTransactionId
<%@:%p %@ delay:%f>
<%@:%p tasks: %@>
v32@?0@"NSArray"8@"MTTimer"16@"NSError"24
MTTimerTimeInterval
MTTimerTimeDate
MTTimerManagerTimersAdded
MTTimerManagerTimersUpdated
MTTimerManagerTimersRemoved
MTTimerManagerTimerFired
MTTimerManagerFiringTimerChanged
MTTimerManagerFiringTimerDismissed
MTTimerManagerNextTimerChanged
MTTimerManagerTimersChanged
MTTimerManagerStateReset
MTTimerManagerPreferencesChanged
NextTimer
com.apple.mobiletimerd.MTTimerManager
@"MTXPCConnectionProvider"16@?0@"MTTimerManager"8
v16@?0@"<MTTimerServer>"8
v20@?0@?<v@?@"NSArray"@"MTTimer"@"NSError">8B16
Timer is running but doesn't have a next trigger.
v32@?0@"MTTimer"8Q16^B24
MTTimerManager.m
State can't be unknown
@"NAFuture"16@?0@"MTTimer"8
%@ cannot restart a timer (%@) that isn't stopped.
Start timer isn't finished, but expected it to be
v24@?0@"NSNull"8@"NSError"16
Update Timer isn't finished, but expected it to be
-[MTResetTimerIntentHandler resolveTargetTimerForResetTimer:withCompletion:]
-[MTResetTimerIntentHandler confirmResetTimer:completion:]
-[MTResetTimerIntentHandler handleResetTimer:completion:]
-[MTResetTimerIntentHandler _responseToResetTimerIntent:withResetTimers:error:dryRun:]
MTObserverStore.m
observer cannot be nil
Date
UserVisible
MTAlarmManagerAlarmsAdded
MTAlarmManagerAlarmsUpdated
MTAlarmManagerAlarmsRemoved
MTAlarmManagerNextAlarmChanged
MTAlarmManagerAlarmFired
MTAlarmManagerFiringAlarmDismissed
MTAlarmManagerFiringAlarmChanged
MTAlarmManagerAlarmsChanged
MTAlarmManagerStateReset
NextAlarm
com.apple.mobiletimer.MTAlarmManager
.siri_data_changed
com.apple.alarm.label
@"MTXPCConnectionProvider"16@?0@"MTAlarmManager"8
v16@?0@"<MTAlarmServer>"8
v20@?0@?<v@?@"NSArray"@"NSArray"@"MTAlarm"@"NSError">8B16
@"NSArray"40@?0@"NSArray"8@"NSArray"16@"MTAlarm"24@"NSError"32
MTAlarmManager.m
Expected alarm future to be finished.
Expected next alarm future to be finished.
B32@?0@"MTAlarm"8Q16^B24
v24@?0@"MTAlarm"8@"NSError"16
@"NAFuture"16@?0@"MTAlarm"8
com.apple.MTTimerSessionsCoordinator.serialqueue
com.apple.mobiletimer.launchAngelConnection
com.apple.ClockAngel.mach
com.apple.ClockAngel-service
Clock Angel Connection
v16@?0@"BSServiceConnection<BSServiceConnectionContext>"8
v16@?0@"<BSServiceConnectionConfiguring>"8
com.apple.common
BasicAngelIPC
MTWidgetEventListener
MTSessionsManager
Class getMTSessionsManagerClass(void)_block_invoke
MTTimerSessionsCoordinator.m
void *MobileTimerSupportLibrary(void)
en_US_POSIX
yyyy-MM-dd-HH-mm
DND_BEDTIME_MORNING_GREETING
DND_BEDTIME_MORNING_GREETING_LOWERCASE
DND_BEDTIME_AFTERNOON_GREETING
DND_BEDTIME_AFTERNOON_GREETING_LOWERCASE
DND_BEDTIME_EVENING_GREETING
DND_BEDTIME_EVENING_GREETING_LOWERCASE
com.apple.mobiletimer-framework
Localizable_Burrito
alarms
-[MTUpdateTimerIntentHandler _updateTimer:dryRun:allowMultiple:excludeStoppedTimers:filterBlock:updateBlock:completion:]
-[MTUpdateTimerIntentHandler _updateTimer:dryRun:allowMultiple:excludeStoppedTimers:filterBlock:updateBlock:completion:]_block_invoke
B32@?0@"<MTTimerIntentSupport>"8Q16^B24
Failed to update%@ timer %@ from timer manager %@ due to ambiguity between timers %@
v32@?0@"NSObject<MTTiming>"8Q16^B24
-[MTSearchTimerIntentHandler handleSearchForTimers:completion:]
@16@?0@"<MTTimerIntentSupport>"8
-[MTSearchTimerIntentHandler handleSearchForTimers:completion:]_block_invoke_2
-[MTSearchTimerIntentHandler handleSearchForTimers:completion:]_block_invoke
com.apple.MTAlarmIntentDonor.access-queue
com.apple.MTLegacyManager
com.apple.springboard
UpgradeAttempted
SBCountdownTimerSoundIdentifier
AlarmList
allows snooze
sound path
setting
active
SBCountdownTimerTimeIdentifier
timerSleepiPod
timerSound
SleepAlarm
TIMER_INTERVAL
AlarmsLastModified
void MTGSSendAppPreferencesChanged(CFStringRef, CFStringRef)
MTLegacyManager.m
GSSendAppPreferencesChanged
void *GraphicsServicesLibrary(void)
MTXPCConnectionListenerProvider.m
com.apple.MTXPCConnectionListenerProvider.serialqueue
Listener XPC Connection interrupted
v16@?0@"MTXPCClientInfo"8
com.apple.MTAgent
Launched
v16@?0@"NSObject<MTAlarmDataSourceObserver>"8
v16@?0@"NSNotification"8
MTSyncStoragePendingChanges
MTSyncStorageVersion
com.apple.MTSyncStore.archive-queue
; currentState: %@>
MTPairedDevicePreferencesChanged
BulletinDistributorBBSectionsDidChangeNotification
com.apple.bulletinboard.apps
BPSNanoBulletinShowsAlerts
com.apple.MobileTimer.MTApplicationWorkspaceObserverQueue
v32@?0@"NSString"8@"NSHashTable"16^B24
MTTimerLastTriggerDate
com.apple.MTTimerScheduler.timer-event
com.apple.MTTimerTask.fire
com.apple.MTTimerTask.reschedule
com.apple.MTTimerScheduler.access-queue
Scheduled timers
MTTimerScheduler
id  _Nullable NAAssertCast(Class  _Nonnull __unsafe_unretained, id  _Nonnull __strong)
NSObject+NAAdditions.h
Expected class of %@ but was %@
<%@: %p %@ >
SEND
RECV
com.apple.private.mobiletimerd
com.apple.MobileTimer.alarmserver
com.apple.MobileTimer.timerserver
com.apple.mobile.keybagd.first_unlock
MTDeviceHasBeenUnlockedForFirstTime
com.apple.MTDeviceUtilities.work-queue
Unlocked since boot
MTSleepManagerSettingsDidChange
MTNeedsSleepMigration
@"HKSPSleepStore"24@?0@"NSString"8@"HKHealthStore"16
@"HKSPFeatureAvailabilityStore"16@?0@"HKSPSleepStore"8
%@-updateSleepAlarms
@16@?0@"HKSPSleepScheduleOccurrence"8
v16@?0@"MTMutableAlarm"8
v24@?0@"HKSPSleepSettings"8@"NSError"16
MTSleepManager.m
HKFeatureIdentifier getHKFeatureIdentifierSleepCoaching(void)
HKFeatureIdentifierSleepCoaching
watch-companion
CURRENT_TIMER
MTTimerDefaultDuration
com.apple.mobiletimer.MTTimerDidFireNotification
x-apple-clock:timer?id=
TIMER_DEFAULT_TITLE
<%@:%p TimerID: %@, Title: %@, state:%@, duration:%d, firedDate: %@, dismissedDate: %@, sound: %@, siriContext: %@>
Stopped
Running
Paused
Unknown
Timer duration can only be modified while stopped.
Timer duration must be positive.
Unexpected timer state: %ld
com.apple.MTAlarmServer.wakeup
com.apple.MTAlarmServer.ready
com.apple.mobiletimerd.MTAlarmServer
com.apple.MTAlarmServer.ready-queue
v16@?0@"<MTAlarmClient>"8
Alarm system ready
Alarm clients
processName
MTTimerIntentHandlerErrorDomain
v32@?0@"<MTTimerIntentSupport>"8Q16^B24
-[MTTimerIntentHandler _matchTimersFromIntentsTimer:excludeStoppedTimers:completion:]_block_invoke_3
-[MTTimerIntentHandler _genericallyResolveTargetTimer:multiple:allowedTimerStatesForFollowup:completion:]_block_invoke
-[MTTimerIntentHandler _genericallyResolveTargetTimer:multiple:allowedTimerStatesForFollowup:completion:]_block_invoke_2
q24@?0@"NSObject<MTTimerIntentSupport>"8@"NSObject<MTTimerIntentSupport>"16
com.apple.MTCompanionSyncRequest.serialqueue
v16@?0@?<v@?@"NSError">8
DELTA
MTTriggerType
MTTriggerDate
Alert
Snoozed
Go To Bed
Snoozed Go To Bed
Wake Up
Snoozed Wake Up
Snooze Countdown
Bedtime
Waketime
trigger
date
isPastOverride
com.apple.MTTimerServer.wakeup
com.apple.MTTimerServer.ready
com.apple.mobiletimerd.MTTimerServer
com.apple.MTTimerServer.ready-queue
v16@?0@"<MTTimerClient>"8
Timer system ready
Timer clients
<%@:%p %@ snoozeDate: %@ (%@)>
snoozeDate
MTSyncDismiss+ProtoBuffer.m
MTAlarmDataVersion
MTAlarmHour
MTAlarmMinute
MTAlarmBedtimeHour
MTAlarmBedtimeMinute
MTAlarmBedtimeReminderMinutes
MTAlarmBedtimeDoNotDisturb
MTAlarmBedtimeDoNotDisturbOptions
MTAlarmSleepModeDetectionKey
MTAlarmSleepTrackingKey
MTAlarmDay
MTAlarmMonth
MTAlarmYear
MTAlarmOverriddenForDate
MTAlarmTimeInBedTrackingKey
MTAlarmSleepScheduleKey
MTAlarmBedtimeForSleepTracking
MTAlarmWakeupForSleepTracking
MTAlarmRepeatSchedule
MTAlarmEnabled
MTAlarmActive
MTAlarmPlayOptions
MTAlarmFiring
MTAlarmIsSleep
MTAlarmAllowsSnooze
MTAlarmSnoozeFireDate
MTAlarmBedtimeSnoozeFireDate
MTAlarmFireDate
MTAlarmDismissDate
MTAlarmLastModifiedDate
MTAlarmBedtimeFireDate
MTAlarmBedtimeDismissDate
MTAlarmBedtimeDismissAction
MTAlarmKeepOffUntilDate
MTAlarmTitle
MTAlarmSound
MTAlarmIsNew
MTAlarmOnboardingVersion
MTAlarmSiriContext
MTAlarmBypassReload
v16@?0@"NSString"8
B16@?0@"MTCFUserNotification"8
MTTimerIntentSupportSiriContextTimerTypeKey
com.apple.MTSyncChangeQueue.serial
Q16@?0@"<MTSyncable>"8
MTSyncChangeQueue.m
Undetermined enqueue result returned
Q24@?0@"<MTSyncable>"8@"<MTSyncable>"16
Invalid conflict result returned
com.apple.private.alloy.mobiletimersync
com.apple.MTCompanionSyncService.serialqueue
Companion sync sending session failed
<%@: %p master: %d >
SYService
Class getSYServiceClass(void)_block_invoke
MTCompanionSyncService.m
void *CompanionSyncLibrary(void)
SYServiceOption getSYServiceOptionDiskBufferProtectionClass(void)
SYServiceOptionDiskBufferProtectionClass
NSString *getIDSSendMessageOptionBypassDuetKey(void)
IDSSendMessageOptionBypassDuetKey
void *IDSLibrary(void)
<%@:%p ProcessName: %@ ProcessID: %@ Connected: %@ Connection: %@>
%@-%d
lastModifiedDate
snoozeFireDate
bedtimeSnoozeFireDate
firedDate
dismissedDate
playOptions
sleepMode
sleepTracking
sleepSchedule
onboardingVersion
sleepModeOptions
timeInBedTracking
dismissedAction
bedtimeFiredDate
bedtimeDismissedDate
bedtimeDismissedAction
keepOffUntilDate
softlink:r:path:/System/Library/PrivateFrameworks/ChronoServices.framework/ChronoServices
softlink:r:path:/System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams
softlink:r:path:/System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
softlink:r:path:/System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight
softlink:r:path:/System/Library/Frameworks/HealthKit.framework/HealthKit
softlink:r:path:/System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync
softlink:r:path:/System/Library/Frameworks/HealthKit.framework/HealthKit
softlink:r:path:/System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities
softlink:r:path:/System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
softlink:r:path:/System/Library/PrivateFrameworks/MobileTimerSupport.framework/MobileTimerSupport
softlink:r:path:/System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
softlink:r:path:/System/Library/Frameworks/HealthKit.framework/HealthKit
softlink:r:path:/System/Library/PrivateFrameworks/CompanionSync.framework/CompanionSync
softlink:r:path:/System/Library/PrivateFrameworks/IDS.framework/IDS
MTPauseResumeTimerIntentHandler
INPauseTimerIntentHandling
NSObject
INResumeTimerIntentHandling
MTTimeInBedSession
MTSleepSession
NSSecureCoding
NSCoding
ProtoBuffer
MTProtoBufferSerializable
MTSerializable
Alarm
MTXPCConnectionInfo
MTToggleAlarmIntentHandler
MTEnableAlarmIntentHandling
MTDisableAlarmIntentHandling
MTToggleAlarmIntentHandling
MTWidgetUtilities
MTLanguageChangeListener
MTAgentNotificationListener
MTScheduledList
MTSleepCoordinatorStateMachineAsleepState
MTInMemoryDefaults
MTPersistence
ClocksIntent
ClocksIntentResponse
MTTimerStorage
MTTimerSchedulerDelegate
MTApplicationWorkspaceObserverProtocol
MTAgentDiagnosticDelegate
MTAgentNotificationManager
MTDictionarySerializable
NSCopying
MTStorageWriter
MTSerializer
MTStorageReader
MTStorageReaderV1
MTAlarmSnapshot
MTAlarmObserver
MTAlarmSyncDataModel
MTSource
MTSyncDataModel
MTSleepCoordinatorStateMachineState
MTSleepCoordinatorStateMachineEventHandler
MTStateMachineEventHandler
MTPairedDeviceListener
MTUserNotificationAppDelegate
UNUserNotificationCenterDelegate
MTPBAlarm
MTXPCConnectionProvider
MTSleepModeStateMachineUserRequestedOffState
ClockManager
MTAnalytics
IntentsSupport
MTTimerManagerIntentSupport
MTSleepModeMonitor
DNDModeAssertionUpdateListener
MTSleepModeStateMachineInfoProvider
MTStateMachineInfoProvider
MTSleepModeStateMachineDelegate
MTStateMachineDelegate
MTSleepObserver
MTTimeObserver
MTSleepModeManager
MTSleepModeStateMachine
MTSleepModeStateMachineEventHandler
MTDateFormatting
MTSyncServiceManager
MTSyncStatusProviderDelegate
MTSyncServiceDelegate
MTSyncManager
MTCreateAlarmIntentHandler
MTCreateAlarmIntentHandling
MTSleepSessionTracker
MTUserNotificationActionDispatcher
MTPBAlarmDelete
MTUpdateAlarmIntentHandler
MTUpdateAlarmIntentHandling
MTSleepModeStateMachineInitialState
ClocksSingleIntent
ClocksSingleIntentResponse
MTAlarmStorage
MTAlarmScheduleDelegate
MTSpringboardStartMonitor
MTCreateTimerIntentHandler
INCreateTimerIntentHandling
MTPBSound
MTSound_Notifications
MTAlarmScheduler
MTScheduledListDelegate
MTPBAlarmAdd
MTScheduledObject
NAEquatable
NAHashable
MTScheduling
MTScheduleable
MTExponentialBackOffTimer
MTWidgetProvider
MTCompanionSyncSerializer
SYChangeSerializer
MTAlarmIntent
MTAgentDiagnosticListener
MTTimeInBedSessionTracker
MTCoreDuetMonitor
MTTimerIntentDonor
MTTimerObserver
MTAlarmCache
MTDistributedNotificationPoster
MTNotificationCenter
MTSleepModeStateMachineOffState
MTSystemStateListener
Properties
MTSyncChangeArchiver
MTSyncChangeUnarchiver
WorldClockManager
MTSleepCoordinator
MTSleepCoordinatorStateMachineDelegate
MTSleepCoordinatorStateMachineInfoProvider
SleepCoordinator
MTOSTransaction
CompanionSync
SYChange
MTDeleteTimerIntentHandler
INDeleteTimerIntentHandling
MTSetTimerAttributeIntentHandler
INSetTimerAttributeIntentHandling
MTPBSyncMessage
MTSound
WorldClockPreferences
MTSyncDismiss
MTSyncable
MTSyncableObject
MTAlarmIntentHandler
MTSnapshotScheduler
MTAlarmMigrator
MTAlarm
BSDescriptionProviding
NSMutableCopying
MTMutableAlarm
MTSleepSessionManager
MTSleepSessionTrackerDelegate
MTMetrics
NotificationRelay
MTTimerSnapshot
MTUserDefaults
MTSensitiveUIMonitor
MTUtilities
_MTSerialQueueScheduler
MTScheduler
NAScheduler
MTExpiringFuture
WorldClockCity
MTNextAlarm
MTNextAlarmManager
MTWorldClock
MTWorldClockResolutionResult
MTUserNotificationCenter
MTTimerMigrator
MTChange
MTChangeSet
ChangeSet
MTSleepModeStateMachineOnState
MTDictionarySerializer
MTDictionaryDeserializer
MTTimeListener
MTSleepCoordinatorStateMachineDisabledState
MTPBDismissAction
MTCreateSingleTimerIntentHandler
DistributedNotificationPoster
MTGCDTimer
MTGCDTaskScheduler
MTTaskScheduler
MTTask
MTTaskGroup
MTAgentNotification
MTSleepModeStateMachineWaitingState
MTGetAlarmsIntentHandler
MTGetAlarmsIntentHandling
MTPowerAssertion
MTTimerCache
MTTimerTime
MTTimerTimeInterval
MTTimerDate
MTTimerManager
MTUserDefaultNotificationObserver
MTTimerManagerExportedObject
MTTimerClient
MTResetTimerIntentHandler
INResetTimerIntentHandling
MTObserverStore
MTXPCScheduler
MTSchedulingDelegate
MTAlarmManager
MTAlarmManagerExportedObject
MTAlarmClient
MTNotifiying
Sleep
ClockAngelServer
ClockAngelClient
MTTimerSessionsCoordinator
Notification
MTPBAlarmState
MTUpdateTimerIntentHandler
MTSearchTimerIntentHandler
INSearchForTimersIntentHandling
MTSleepModeStateMachineState
MTAlarmIntentDonor
MTLegacyManager
MTXPCConnectionListenerProvider
NSXPCListenerDelegate
MTAgent
MTSystemStateDelegate
MTAlarmDataSource
MTPersistentSyncChangeStore
MTSyncChangeStore
MTInMemorySyncChangeStore
MTStateMachineState
MTCity
MTCityResolutionResult
MTStateMachine
MTPairedDevicePreferences
MTApplicationWorkspaceObserver
LSApplicationWorkspaceObserverProtocol
MTTimerManagerProviding
MTSleepUtilities
MTTimerScheduler
MTCompanionSyncSession
SYSessionDelegate
MTAlarmServer
MTXPCServer
MTTimerServer
MTAdditions
MTDeviceListener
MTPBAlarmUpdate
MTSleepManager
HKSPSleepStoreObserver
MTCompanionSyncStatusProvider
MTPairedDeviceObserver
MTSyncStatusProvider
MTTimer
MTMutableTimer
MTTimerIntentHandler
MTCompanionSyncRequest
MTSyncToken
MTTrigger
MTSleepCoordinatorStateMachineAwakeState
MTSyncSnooze
MTPBSnoozeAction
MTCFUserNotification
MTCFUserNotificationPoster
MTTimerIntentSupport
MTSyncChangeQueue
MTCompanionSyncService
SYServiceDelegate
MTSyncService
MTXPCClientInfo
MTPBAlarmProperties
MTSleepCoordinatorStateMachine
MTCreateAlarmIntent
MTCreateAlarmIntentResponse
MTUpdateAlarmIntent
MTUpdateAlarmIntentResponse
MTEnableAlarmIntent
MTEnableAlarmIntentResponse
MTDisableAlarmIntent
MTDisableAlarmIntentResponse
MTToggleAlarmIntent
MTToggleAlarmIntentResponse
MTGetAlarmsIntent
MTGetAlarmsIntentResponse
MTAlarmStateResolutionResult
MTAlarmOperationResolutionResult
MTIntentAlarm
MTIntentAlarmResolutionResult
MTIntentRepeatDay
MTIntentRepeatDayResolutionResult
enumerateObjectsUsingBlock:
setTopic:
supportsCapability:
addObserver:selector:name:object:
defaultToneIdentifierForAlertType:
_setExtensionBundleId:
immediateScheduler
assistantUILocalizedStringForKey:table:
setKeywords:
isInstalled
defaultVibrationIdentifierForAlertType:
setActivationHandler:
confirmationRequiredWithStringToConfirm:
setUnitsStyle:
incomingCall
setLabel:
attributeWithDomain:name:
modifiedDateKey
addObserverForName:object:queue:usingBlock:
replaceObjectAtIndex:withObject:
defaultWorkspace
confirmationRequiredWithTimeIntervalToConfirm:
audioVolume
setUnmatchedTimers:
errorOnlyCompletionHandlerAdapter
addSuccessBlock:
isMasterStore
_setLaunchId:
indexOfObject:
setUpdatedTimer:
initWithService:priority:asMasterStore:options:
unionSet:
errorWithDomain:code:userInfo:
confirmationRequiredWithTimerToConfirm:
playWithCompletionHandler:
authorizationStatusForType:
deferredLocalizedIntentsStringWithFormat:fromTable:bundle:
setUserActivity:
confirmationRequiredWithTimerTypeToConfirm:
indexOfObjectPassingTest:
_setNanoLaunchId:
eventWithStream:startDate:endDate:value:metadata:
setListPriority:
writeToFile:atomically:
setUserInfo:
unlocalizedName
setLocale:
indexesOfObjectsPassingTest:
expectedFireDateKey
sortUsingSelector:
setUserVisibleEndDate:
setLocalizedDateFormatFromTemplate:
sortedArrayUsingComparator:
isPlaceholder
deleteCharactersInRange:
setValue:
setAlertTopic:
setMatchedTimers:
deleteInteractionsWithGroupIdentifiers:bundleID:protectionClass:completionHandler:
setValue:forKey:
requestWithIdentifier:content:trigger:destinations:
setMaximumDuration:
deleteMultiple
setAllowedUnits:
fileExistsAtPath:
isSending
initWithSpokenPhrase:
initForReadingFromData:error:
postNotificationName:object:
initWithStartDate:endDate:
fileExistsAtPath:isDirectory:
setAudioVolume:
unsignedIntValue
setVibrationIdentifier:
reschedule:
finishDecoding
postNotificationName:object:userInfo:
notRequired
isSingleDayOverride
soundWithAlertType:
alarmConfiguration
unsignedIntegerValue
initRequiringSecureCoding:
setWantsNotificationResponsesDelivered
postNotificationName:object:userInfo:deliverImmediately:
source
finishEncoding
unsignedLongLongValue
setWeekday:
connectionWithEndpoint:
finishSessionWithTimer:
alarmDidUpdate:
setWeekdayOrdinal:
unsupported
containsDate:
initWithActivityType:
finishWithError:
isSleep
descriptionWithLocale:
setWithArray:
containsObject:
unsupportedForReason:
finishWithNoResult
setNotificationCategories:
content
finishWithResult:
setWithObject:
setNumberStyle:
upcomingScheduleOccurrenceAfterDate:error:
bestCityForLegacyCity:
setWithObjects:
finishWithResult:error:
resetMultiple
setObject:atIndexedSubscript:
details
setWithSet:
processIdentifier
detailsWithIdentifier:modeIdentifier:lifetime:
copy
boolValue
processInfo
setBody:
_className
setObject:forKeyedSubscript:
initWithString:
bs_dayPeriodForDate:inLocale:
alarmIDKey
resetSystemTimeZone
build
countByEnumeratingWithState:objects:count:
initWithSuiteName:
resolutionResultUnsupportedWithReason:
isValid
dictionary
firstIndex
firstObject
setOperation:
synchronizeUserDefaultsDomain:keys:
setCalendar:
builderWithObject:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
dictionaryForKey:
bundleForClass:
synchronousRemoteObjectProxyWithErrorHandler:
firstWeekday
null
setCategoryIdentifier:
initWithArray:
bundleIdentifier
createSessionWithTimer:
numberFromString:
resume
flatMap:
initWithBundleIdentifier:
systemTimeZone
spokenPhrase
dictionaryWithContentsOfFile:
bundleWithIdentifier:
currentCalendar
setClasses:forSelector:argumentIndex:ofReply:
setPausedTimers:
protocol
initWithBundleIdentifier:allowPlaceholder:error:
dictionaryWithDictionary:
setClient:
resumeMultiple
takeModeAssertionWithDetails:error:
keyPathForCurrentAlarms
currentCallCount
protocolForProtocol:
numberWithBool:
standardUserDefaults
initWithTimerResolutionResult:
dictionaryWithObject:forKey:
setClientMessagingExpectation:
initWithCapacity:
targetTimer
floatValue
keyPathForNextAlarm
numberWithDouble:
dictionaryWithObjects:forKeys:count:
sharedToneManager
currentConnection
futureWithError:
setPositiveFormat:
bytes
reverseObjectEnumerator
numberWithFloat:
alarmStream
initWithType:
futureWithNoResult
cStringUsingEncoding:
numberWithInt:
sharedVibrationManager
futureWithResult:
numberWithInteger:
startOfDayForDate:
initWithUUIDString:
setCreatedTimer:
currentHandler
numberWithLong:
currentLocale
lastObject
getActivePairedDevice
rangeOfString:
numberWithLongLong:
setResetTimers:
currentNotificationCenter
saveObjects:error:
rangeOfString:options:
calendarWithIdentifier:
laterDate:
numberWithUnsignedInt:
setCurrentToneIdentifier:forAlertType:topic:
insertObject:atIndex:
setResumedTimers:
reason
currentSleepScheduleWithError:
intValue
numberWithUnsignedInteger:
setCurrentVibrationIdentifier:forAlertType:topic:
disambiguationWithTimersToDisambiguate:
currentSleepSettingsWithCompletion:
setDateComponents:
discoverabilitySignal
numberWithUnsignedLongLong:
initWithContentsOfFile:
length
currentSleepSettingsWithError:
setSecond:
objectAtIndex:
setDateFormat:
recover:
setDateStyle:
initWithData:
objectAtIndexedSubscript:
lifetime
integerValue
caseInsensitiveCompare:
stateKey
objectEnumerator
getDeliveredNotificationsWithCompletionHandler:
setServer:
lifetimeWithDateInterval:
intent
sleepAlarmWasDismissedOnDate:source:completion:
mutableCopy
data
timeIntervalSinceDate:
sleepAlarmWasModifiedFromSource:completion:
setServiceQuality:
setDefaultActionURL:
na_all:
timeIntervalSinceReferenceDate
categoryIdentifier
setShouldBackgroundDefaultAction:
sleepAlarmWasSnoozedUntilDate:source:completion:
objectForKeyedSubscript:
getPendingNotificationRequestsWithCompletionHandler:
na_any:
categorySampleWithType:value:startDate:endDate:device:metadata:
setShouldIgnoreDoNotDisturb:
alertTopic
interfaceWithIdentifier:
objectsAtIndexes:
userContext
URLWithString:
na_dictionaryByMappingValues:
setShouldIgnoreRingerSwitch:
globalAsyncScheduler
categoryTypeForIdentifier:
alertType
interfaceWithProtocol:
na_dictionaryWithKeyGenerator:
_updateAudioVolumeDynamicallyToValue:
categoryWithIdentifier:actions:intentIdentifiers:options:
setShouldPreemptPresentedNotification:
timeZoneForSecondsFromGMT:
alertWithConfiguration:
na_each:
userInfo
setShouldPreventNotificationDismissalAfterDefaultAction:
dataSourceDidReload:
na_filter:
setDelegate:queue:
dataWithPropertyList:format:options:error:
setShouldRepeat:
setDeletedTimers:
na_firstObjectPassingTest:
localDevice
setShouldSuppressScreenLightUp:
allConfiguredWidgetsWithCompletion:
intersectsSet:
dateByAddingTimeInterval:
na_genericError
userInitiated
locale
allKeys
occurrences
na_map:
dateByAddingUnit:value:toDate:options:
reloadTimelineWithReason:
localeCode
initWithDomain:
allObjects
initWithDomain:verb:parametersByName:
dateBySettingHour:minute:second:ofDate:options:
localeIdentifier
na_safeAddObjectsFromArray:
allValues
invalidateActiveModeAssertionWithError:
na_safeSetObject:forKey:
localeWithLocaleIdentifier:
allocWithZone:
invalidationDate
setDoesRelativeDateFormatting:
dateFormatFromTemplate:options:locale:
na_timeoutError
handleFailureInFunction:file:lineNumber:description:
remoteObjectProxyWithErrorHandler:
localizedCaseInsensitiveContainsString:
operatingSystemVersionString
initWithEventType:alarmID:isSleepAlarm:
dateFromComponents:
handleFailureInMethod:object:file:lineNumber:description:
localizedStringForKey:value:table:
remoteProcess
initWithExtensionBundleIdentifier:kind:
AMSymbol
setEligibleForHandoff:
dateFromString:
localizedStringFromDate:dateStyle:timeStyle:
remoteTargetWithLaunchingAssertionAttributes:
displayString
stopped
appendBool:withName:
setEligibleForPublicIndexing:
needsValue
valueForEntitlement:
initWithFeatureIdentifier:sleepStore:
dateWithTimeInterval:sinceDate:
appendBool:withName:ifEqualTo:
valueForKey:
setEligibleForSearch:
dateWithTimeIntervalSinceNow:
initWithFormat:
string
distantFuture
dateWithTimeIntervalSinceReferenceDate:
valueForProperty:
appendFormat:
initWithHealthStore:
distantPast
appendInteger:withName:
setExpirationDate:
schedulerWithDispatchQueue:
stringByAppendingFormat:
domain
setExportedInterface:
appendObject:withName:
stringByAppendingPathComponent:
scheme
citiesWithIdentifiers:
stringByAppendingString:
donateInteractionWithCompletion:
appendObject:withName:skipIfNil:
isCurrentOnboardingVersionCompletedWithError:
daylightSavingTimeOffsetForDate:
secondsFromGMTForDate:
stringByReplacingOccurrencesOfString:withString:
appendString:
initWithIdentifier:bundleID:context:
sleepEventRecord
stringFromDate:
removeAllPendingNotificationRequests
actionIdentifier
sendEvent:
initWithIdentifier:displayString:
appendString:withName:
removeAssertionUpdateListener:
doubleValue
appendString:withName:skipIfEmpty:
stringFromDateComponents:
actionWithIdentifier:title:options:
initWithIdentifier:healthStore:
stringFromNumber:
applicationState
setSourceBundleIdentifier:
removeDeliveredNotificationsWithIdentifiers:
actionWithIdentifier:title:options:icon:
stringValue
isEqualToDate:
vibrationWithIdentifierIsValid:
serialDispatchQueueSchedulerWithName:
initWithInt:
activate
stringWithCString:encoding:
earlierDate:
path
decodeObjectOfClass:forKey:
activeModeAssertionWithError:
isEqualToDictionary:
initWithIntent:response:
nextDateAfterDate:matchingComponents:options:
removeItemAtPath:error:
pauseMultiple
stringWithFormat:
decodeObjectOfClasses:forKey:
setForPreview:
removeLastObject
PMSymbol
nextDateAfterDate:matchingUnit:value:options:
hasActiveTimerSession
stringWithUTF8String:
isEqualToSet:
initWithLabel:duration:remainingTime:identifier:state:type:
removeObject:
longLongValue
subarrayWithRange:
setFormattingContext:
initWithLabel:duration:type:
wakeUpComponents
removeObjectAtIndex:
toDuration
lowercaseString
setGroupIdentifier:
defaultCenter
initWithLocaleIdentifier:
sleepScheduleModelWithError:
wakeUpConfirmedUntilDate
toLabel
combineAllFutures:ignoringErrors:scheduler:
substringFromIndex:
isEqualToString:
UTF8String
removeObjectsInArray:
mainBundle
initWithMachServiceName:
array
combineAllFutures:scheduler:
initWithMachServiceName:options:
addAssertionUpdateListener:withCompletionHandler:
setHasChangesAvailable
defaultCitiesForLocaleCode:options:
toneMediaLibraryItemIdentifier
setTargetQueue:
isEqualToTimeZone:
arrayByAddingObject:
mainQueue
encodedData
defaultCitiesShownInWorldClock
weakObjectsHashTable
removeObserver:name:object:
UUIDString
arrayByAddingObjectsFromArray:
hasPrefix:
weekdays
arrayWithArray:
successWithResolvedDateComponents:
widget
defaultManager
arrayWithCapacity:
widgetConfigurations
addEntriesFromDictionary:
setTimeStyle:
component:fromDate:
maximumAllowedDuration
arrayWithObject:
successWithResolvedString:
isFinished
addFailureBlock:
setInterface:
initWithObjects:
setTimeZone:
components:fromDate:
successWithResolvedTimeInterval:
arrayWithObjects:
endpointForMachName:service:instance:
serviceForClientIdentifier:
defaultSearchableIndex
setInterfaceTarget:
addNotificationRequest:withCompletionHandler:
host
componentsJoinedByString:
arrayWithObjects:count:
successWithResolvedTimer:
UUID
addObject:
componentsSeparatedByString:
successWithResolvedTimerType:
setInterruptionHandler:
addObjectsFromArray:
configureConnection:
setToneIdentifier:
setInvalidationHandler:
iconWithSystemImageName:
enumerateKeysAndObjectsUsingBlock:
setToneMediaLibraryItemIdentifier:
_setDonatedBySiri:
defaultTimeZone
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
handlePauseTimer:completion:
confirmPauseTimer:completion:
resolveTargetTimerForPauseTimer:withCompletion:
resolvePauseMultipleForPauseTimer:withCompletion:
handleResumeTimer:completion:
confirmResumeTimer:completion:
resolveTargetTimerForResumeTimer:withCompletion:
resolveResumeMultipleForResumeTimer:withCompletion:
_handlePauseTimer:dryRun:completion:
_handleResumeTimer:dryRun:completion:
_responseToPauseTimerIntent:withPausedTimers:error:dryRun:
_responseToResumeTimerIntent:withResumedTimers:error:dryRun:
init
timeInBedSessionWithStartDate:endDate:intervals:endReason:metadata:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
startDate
endDate
intervals
sampleType
metadata
endReason
needsAdditionalProcessing
T@"NSDate",R,N
T@"NSArray",R,N
Tq,R,N
T@"NSDictionary",R,N
TQ,R,N
TB,R,N
initWithStartDate:endDate:intervals:endReason:metadata:
setNeedsAdditionalProcessing:
setStartDate:
setEndDate:
setIntervals:
setEndReason:
setMetadata:
.cxx_destruct
_needsAdditionalProcessing
_startDate
_endDate
_intervals
_endReason
_metadata
T@"NSDate",&,N,V_startDate
T@"NSDate",&,N,V_endDate
T@"NSArray",&,N,V_intervals
TQ,N,V_endReason
T@"NSDictionary",&,N,V_metadata
TB,N,V_needsAdditionalProcessing
serialize
initFromDeserializer:
serializeWithSerializer:
deserialize:
verifyIdSetting:withMessageList:
verifyHourSetting:withMessageList:
verifyMinuteSetting:withMessageList:
verifyDaySetting:withMessageList:
verifySettings:
timeComparator
initWithSettings:
applySettings:
prepareEditingProxy
applyChangesFromEditingProxy
dropEditingProxy
nowDateForOffsetCalculation
timeZoneForOffsetCalculation
_newBaseDateComponentsForDay:
refreshActiveState
markModified
compareTime:
alarmID
alarmIDURL
settings
setHour:
setMinute:
isActive
setIsSleepAlarm:
bedtimeReminderMinutes
setBedtimeReminderMinutes:
bedtimeHour
setBedtimeHour:
bedtimeMinute
setBedtimeMinute:
repeats
repeatDays
setDaySetting:
setAllowsSnooze:
setSound:ofType:
setSoundVolume:
soundVolume
vibrationID
setVibrationID:
uiTitle
setTitle:
alarmSoundIdentifier
alarmSoundType
setAlarmSoundIdentifier:ofType:
alarmSoundVolume
setAlarmSoundVolume:
editingProxy
isSnoozed
isSleepAlarm
hour
minute
daySetting
allowsSnooze
soundType
sound
title
lastModified
revision
delegate
setDelegate:
forceActiveForMigration
setForceActiveForMigration:
setAlarmID:
setAlarmIDURL:
_hour
_minute
_daySetting
_allowsSnooze
_lastModified
_revision
_editingProxy
_pretendActiveIfProxy
_settings
_repeatDays
_vibrationID
_snoozed
_isSleepAlarm
_forceActiveForMigration
_soundType
_sound
_title
_delegate
_alarmID
_alarmIDURL
T@"NSString",&,N,V_alarmID
T@"NSURL",&,N,V_alarmIDURL
T@"Alarm",R,N,V_editingProxy
active
TB,R,N,GisActive
snoozed
TB,R,N,GisSnoozed,V_snoozed
TB,N,V_isSleepAlarm
T@"NSNumber",C,N
TI,N,V_hour
TI,N,V_minute
Tq,N
TI,N,V_daySetting
TB,N,V_allowsSnooze
Tq,R,N,V_soundType
T@"NSString",R,N,V_sound
T@"NSString",R,N
T@"NSString",&,N,V_title
T@"NSString",&,N
T@"NSDate",R,N,V_lastModified
TI,R,N,V_revision
T@"<AlarmDelegate>",W,N,V_delegate
TB,N,V_forceActiveForMigration
infoForMachServiceName:remoteObjectInterface:options:
infoForMachServiceName:remoteObjectInterface:exportedObject:exportedObjectInterface:lifecycleNotification:requiredEntitlement:options:
initWithMachServiceName:remoteObjectInterface:exportedObject:exportedObjectInterface:lifecycleNotification:requiredEntitlement:options:
machServiceName
setMachServiceName:
remoteObjectInterface
setRemoteObjectInterface:
exportedObject
setExportedObject:
exportedObjectInterface
setExportedObjectInterface:
lifecycleNotification
setLifecycleNotification:
requiredEntitlement
setRequiredEntitlement:
options
setOptions:
_machServiceName
_remoteObjectInterface
_exportedObject
_exportedObjectInterface
_lifecycleNotification
_requiredEntitlement
_options
T@"NSString",C,N,V_machServiceName
T@"NSXPCInterface",&,N,V_remoteObjectInterface
T@,&,N,V_exportedObject
T@"NSXPCInterface",&,N,V_exportedObjectInterface
T@"NSString",C,N,V_lifecycleNotification
T@"NSString",C,N,V_requiredEntitlement
TQ,N,V_options
handleEnableAlarm:completion:
confirmEnableAlarm:completion:
handleDisableAlarm:completion:
confirmDisableAlarm:completion:
handleToggleAlarm:completion:
resolveStateForToggleAlarm:withCompletion:
resolveAlarmForToggleAlarm:withCompletion:
provideAlarmOptionsCollectionForToggleAlarm:withCompletion:
confirmToggleAlarm:completion:
defaultAlarmForToggleAlarm:
provideAlarmOptionsForToggleAlarm:withCompletion:
resolveOperationForToggleAlarm:withCompletion:
_toggleAlarm:alarmIDString:completion:
getEnableStateForAlarm:
updateEnableStateForAlarm:enabled:
_alarmUserActivityWithEnableIntent:
_alarmUserActivityWithDisableIntent:
confirmMTEnableAlarm:completion:
handleMTEnableAlarm:completion:
confirmMTDisableAlarm:completion:
handleMTDisableAlarm:completion:
timeZonesForCurrentClockWidgets
timeZoneFromCities:
reloadAlarmWidgetTimeline
_languageChangeNotification
handlesNotification:ofType:
handleNotification:ofType:completion:
assertionTimeOutForNotification:ofType:
liveDarwinNotifications
_handleLanguageChanged
sortUsingComparator:
scheduleOverridenForDate:
_sort:
_sortAndFilter:
_sortAndFilter:objectsToScheduleAhead:
_scheduledObjectComparator
_dateIntervalFilter:
_filterScheduledObjects:withBlock:
_nextScheduledObjectInSets:
initWithDelegate:
numberOfScheduledAlerts
numberOfScheduledAlertsAndNotifications
scheduledAlerts
scheduledAlertsAndNotifications
scheduledObjects
scheduledObjectsToFireBeforeDate:
scheduledObjectsToFireInInterval:
nextScheduledAlert
nextScheduledAlertOrNotification
nextScheduledObject
nextScheduledObjectWithTriggerType:
_scheduledListForTriggerType:
reset
unschedule:
_unschedule:
schedule:afterDate:withCompletion:
_scheduleObject:
_performScheduleChangingBlock:withCompletion:
isScheduled:
_unscheduleObject:
orderedScheduledAlerts
setOrderedScheduledAlerts:
orderedScheduledNotifications
setOrderedScheduledNotifications:
orderedScheduledEvents
setOrderedScheduledEvents:
scheduledAlertMap
setScheduledAlertMap:
_orderedScheduledAlerts
_orderedScheduledNotifications
_orderedScheduledEvents
_scheduledAlertMap
T@"<MTScheduledListDelegate>",W,N,V_delegate
T@"NSMutableOrderedSet",&,N,V_orderedScheduledAlerts
T@"NSMutableOrderedSet",&,N,V_orderedScheduledNotifications
T@"NSMutableOrderedSet",&,N,V_orderedScheduledEvents
T@"NSMutableDictionary",&,N,V_scheduledAlertMap
didEnterWithPreviousState:
objectForKey:
objectForKey:defaultValue:
floatForKey:
setObject:forKey:
setFloat:forKey:
storage
setStorage:
_storage
T@"NSMutableDictionary",&,N,V_storage
cities
T@"NSArray",C,D,N
initWithCode:userActivity:
code
setCode:
_code
Tq,N,V_code
clocks
dealloc
_diagnosticDictionaryForTimer:
scheduler:didChangeNextTimer:
scheduler:didFireTimer:
observedApplicationDidInstallForBundleIdentifier:
observedApplicationDidUninstallForBundleIdentifier:
printDiagnostics
gatherDiagnostics
registerObserver:
getTimersWithCompletion:
addTimer:withCompletion:source:
updateTimer:withCompletion:source:
removeTimer:withCompletion:source:
dismissTimerWithIdentifier:withCompletion:source:
repeatTimerWithIdentifier:withCompletion:source:
setAllTimers:source:
timers
nextTimer
lastModifiedDate
T@"MTTimer",R,N
initWithPersistence:
initWithPersistence:migrator:serializer:callbackScheduler:currentDateProvider:
loadTimers
loadTimersSync
_loadTimersWithCompletion:
_createDefaultTimerIfNeededWithCompletion:
setScheduler:
_queue_setAllTimers:source:
_queue_setAllTimers:source:persist:notify:
_queue_addTimer:withCompletion:source:
_queue_updateTimer:withCompletion:source:
_queue_removeTimer:withCompletion:source:
_queue_dismissTimerWithIdentifier:withCompletion:source:
_queue_repeatTimerWithIdentifier:withCompletion:source:
_queue_removeAllTimersForSource:
_queuePersistTimer:replacingTimer:
_applyNecessaryChangesFromOldTimer:currentTimer:
_queue_notifyObserversWithBlock:
_queue_notifyObserversForTimerAdd:source:
_queue_notifyObserversForTimerUpdate:source:
_queue_notifyObserversForTimerRemoval:source:
_queue_notifyObserversForTimerDismiss:source:
_queue_notifyObserversForTimerFire:source:
_queue_notifyObserversForNextTimerChange:source:
_queue_timerMatchingTimerIdentifier:
_queue_hasMatchingTimer:
_queue_persistTimers
_queue_sortTimers
handleF5Reset
handleMigrationFinish
_diagnosticTimerDictionary
_removeTimerDataIfNecessary:
scheduler
orderedTimers
setOrderedTimers:
setLastModifiedDate:
currentDateProvider
migrator
setMigrator:
serializer
setSerializer:
observers
setObservers:
persistence
setPersistence:
_metrics
_scheduler
_orderedTimers
_lastModifiedDate
_currentDateProvider
_migrator
_serializer
_observers
_persistence
T@"NSMutableArray",&,N,V_orderedTimers
T@"NSDate",C,N,V_lastModifiedDate
T@?,R,C,N,V_currentDateProvider
T@"MTTimerMigrator",&,N,V_migrator
T@"<NAScheduler>",&,N,V_serializer
T@"MTObserverStore",&,N,V_observers
T@"<MTPersistence>",&,N,V_persistence
T@"MTTimerScheduler",W,N,V_scheduler
defaultAssertionTimeOutForNotification:type:
_schedulingAssertionTimeout
registerListener:
beginListening
_registerForDistributedNotifications
_registerForDarwinNotifications
_registerForAlarmNotifications
_registerForLiveDarwinNotification:
_registerForXPCStream:notificationType:
_handleNotificationWithName:type:
listeners
setListeners:
_listeners
T@"NSMutableArray",&,N,V_listeners
copyWithZone:
mtType
mtCoder
T@"NSCoder",R,N
_encodeObject:forKey:
encodeBool:forKey:
encodeInteger:forKey:
encodeInt:forKey:
encodeInt32:forKey:
encodeInt64:forKey:
encodeFloat:forKey:
encodeDouble:forKey:
encodeObject:forKey:
_encodeProtocolObject:forKey:
_serializingProtocol
_dictionaryForProtocolObject:
encodedDictionary
stack
setStack:
_stack
T@"NSMutableArray",&,N,V_stack
_dictionaryIsForSerializableObject:
_unwrap:
initWithEncodedDictionary:
allowsKeyedCoding
decodeBoolForKey:
decodeIntegerForKey:
decodeIntForKey:
decodeInt32ForKey:
decodeInt64ForKey:
decodeFloatForKey:
decodeDoubleForKey:
decodeObjectForKey:
_decodeObject:
_objectForDictionary:
initWithBundleID:
shouldScheduleSnapshotForAlarms:
source:didAddAlarms:
source:didUpdateAlarms:
source:didRemoveAlarms:
source:didSnoozeAlarm:snoozeAction:
source:didFireAlarm:triggerType:
source:didDismissAlarm:dismissAction:
source:didChangeNextAlarm:
initWithStorage:
T@"MTAlarmStorage",R,N,V_storage
defaultBlock
sourceIdentifier
isFromOtherDevice
donatesIntent
dontNotify
dataFileName
applyChange:
resetDataStore
initWithAlarmStorage:syncMetrics:
initWithAlarmStorage:syncMetrics:syncServiceManagerBlock:serializer:serialQueue:
_setupSyncManagerWithBlock:
startSyncServices
stopSyncServices
_performAction:
_performDismiss:
_performSnooze:
syncServiceManager
setSyncServiceManager:
alarmStorage
setAlarmStorage:
serialQueue
setSerialQueue:
syncMetrics
setSyncMetrics:
_syncServiceManager
_alarmStorage
_serialQueue
_syncMetrics
T@"MTSyncServiceManager",&,N,V_syncServiceManager
T@"MTAlarmStorage",&,N,V_alarmStorage
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
T@"MTMetrics",&,N,V_syncMetrics
updateState
userWentToBed
userWokeUp
userBedTimeReached:
userWakeTimeReached:
userWakeUpAlarmFired
wakeUpAlarmTimedOut
updateStateForSleepAlarm:
determineNextStateForSleepAlarm:
didReceiveNotification:
sharedListener
_handledNotifications
T@"MTPairedDeviceListener",R
_registerForLocalNotifications
didReceiveNotificationNamed:
updateActiveDeviceInfo
pairedDeviceVersion
hasActivePairedDevice
hasActivePairedDeviceSupportingSyncing
hasActivePairedDeviceCheckSyncing:
notifyObserversWithBlock:
serializerQueue
setSerializerQueue:
sleepEnabled
setSleepEnabled:
pairedDevice
setPairedDevice:
_sleepEnabled
_serializerQueue
_pairedDevice
T@"NSObject<OS_dispatch_queue>",&,N,V_serializerQueue
TB,N,V_sleepEnabled
T@"NRDevice",&,N,V_pairedDevice
T@"NSString",R
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
notificationCenter
setNotificationCenter:
_notificationCenter
T@"UNUserNotificationCenter",&,N,V_notificationCenter
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
mergeFrom:
alarmProperties
setAlarmProperties:
_alarmProperties
T@"MTPBAlarmProperties",&,N,V_alarmProperties
providerWithConnectionInfo:errorHandler:
providerWithConnectionInfo:reconnectHandler:
initWithConnectionInfo:errorHandler:reconnectHandler:
_connectionRebuildingIfNecessary
connection
_didInterruptConnection
_didInvalidateConnection
didReceiveLifecycleNotification
_retryConnection
_retryConnectionWithRecover:
performRemoteBlock:
performRemoteBlock:withErrorHandler:
performRemoteBlock:withErrorHandler:isSynchronous:
_asyncRemoteObjectProxyWithErrorHandler:
_syncRemoteObjectProxyWithErrorHandler:
_remoteObjectProxyWithXPCConnectionProvider:remoteObjectProxyProvider:errorHandler:
invalidate
info
setInfo:
errorHandler
setErrorHandler:
reconnectHandler
setReconnectHandler:
callbackScheduler
setCallbackScheduler:
lastLifecycleNotification
setLastLifecycleNotification:
connectionLock
_connection
_alive
_connectionLock
_info
_errorHandler
_reconnectHandler
_callbackScheduler
_lastLifecycleNotification
T@"<NAScheduler>",&,N,V_callbackScheduler
T@"MTXPCConnectionInfo",&,N,V_info
T@?,C,N,V_errorHandler
T@?,C,N,V_reconnectHandler
T@"NSDate",&,N,V_lastLifecycleNotification
T{os_unfair_lock_s=I},R,N,V_connectionLock
initWithStateMachine:
updateState:
initWithKeepOffUntilDate:stateMachine:
isEqualToState:
keepOffUntilDate
setKeepOffUntilDate:
_keepOffUntilDate
T@"NSDate",&,N,V_keepOffUntilDate
loadUserPreferences
saveAndNotifyForUserPreferences:localNotifications:
submitEvent:eventParameters:
incrementEventCount:
sendCriticalEvent:
addTimer:
updateTimer:
removeTimer:
sleepTimersWithState:
modeAssertionService:didUpdateActiveModeAssertion:
modeAssertionService:didReceiveModeAssertionInvalidation:
isSleepModeEnabled:
sleepAlarm
currentDate
isUserAsleep
T@"MTAlarm",R,N
stateMachine:engageSleepModeUntilDate:userEngaged:
stateMachine:disengageSleepModeUserRequested:
stateMachine:keepSleepModeOffUntilDate:
stateMachineClearKeepSleepModeOff:
stateMachine:scheduleUpdateForSecondsFromNow:
sleepCoordinator:userWentToBed:sleepAlarm:
sleepCoordinator:userWokeUp:sleepAlarm:
sleepCoordinator:bedtimeReminderDidFire:sleepAlarm:
sleepCoordinator:bedtimeReminderWasConfirmed:sleepAlarm:
sleepCoordinator:bedtimeReminderWasSnoozed:sleepAlarm:
sleepCoordinator:bedtimeWasReached:sleepAlarm:
sleepCoordinator:waketimeWasReached:sleepAlarm:
sleepCoordinator:wakeUpAlarmDidFire:sleepAlarm:
sleepCoordinator:wakeUpAlarmWasDismissed:dismissAction:sleepAlarm:
sleepCoordinator:wakeUpAlarmWasSnoozed:sleepAlarm:
sleepCoordinator:sleepModeManuallyExited:sleepAlarm:
sleepCoordinator:sleepSessionEnded:reason:sleepAlarm:
sleepCoordinator:sleepAlarmDidChange:
timeListener:didDetectSignificantTimeChangeWithCompletionBlock:
initWithAlarmStorage:sleepCoordinator:
initWithAlarmStorage:sleepCoordinator:currentDateProvider:
updateMonitorState
isSleepModeEnabled:error:
sleepModeTimeoutMinutes
isEnabled
sleepMode:
userDisengagedSleepMode
userDisengagedSleepModeOnDate:
sleepCoordinator
setSleepCoordinator:
setCurrentDateProvider:
stateMachine
setStateMachine:
assertionService
setAssertionService:
_sleepCoordinator
_stateMachine
_assertionService
T@"<MTAlarmStorage>",&,N,V_alarmStorage
T@"MTSleepCoordinator",W,N,V_sleepCoordinator
T@?,C,N,V_currentDateProvider
T@"MTSleepModeStateMachine",&,N,V_stateMachine
T@"DNDModeAssertionService",&,N,V_assertionService
initWithDelegate:isSynchronous:
checkIn
reconnect
setEnabled:
setEnabled:valueDidChangeBlock:
_enabled
enabled
TB,N,GisEnabled
initWithDelegate:infoProvider:
sleepModeEnabled:userRequested:date:
onStateWithSleepModeEndDate:
userRequestedOffStateWithKeepOffUntilDate:
stateMachineLog
initialState
offState
waitingState
_initialState
_offState
_waitingState
T@"MTSleepModeStateMachineInitialState",R,N,V_initialState
T@"MTSleepModeStateMachineOffState",R,N,V_offState
T@"MTSleepModeStateMachineWaitingState",R,N,V_waitingState
_reloadLocaleInfo
sharedInstance
_clearLocaleDependentState
_loadLocaleInfo
_dateOnlyFormatter
_timeOnlyFormatter
amString
pmString
localizedTimeStringFromDate:timeDesignator:
localizedTimeStringFromDate:forTimeZone:timeDesignator:
timeDesignatorForDate:
timeDesignatorForDate:timeZone:
use24HourTime
timeDesignatorAppearsBeforeTime
_amString
_pmString
_use24HourTime
_timeDesignatorAppearsBeforeTime
T@"NSString",R,W,N
TB,R,N,V_use24HourTime
TB,R,N,V_timeDesignatorAppearsBeforeTime
syncStatusProvider:didChangeSyncStatus:
pendingChanges
pendingChangesSent:
requestSync:
initWithSyncService:syncStatusProvider:syncDataModel:syncMetrics:
initWithSyncService:syncStatusProvider:syncDataModel:syncMetrics:syncChangeStore:
startSyncService
stopSyncService
checkForPendingChanges
syncChange:
syncService
setSyncService:
syncStatusProvider
setSyncStatusProvider:
syncDataModel
setSyncDataModel:
syncChangeQueue
setSyncChangeQueue:
started
setStarted:
_started
_syncService
_syncStatusProvider
_syncDataModel
_syncChangeQueue
T@"<MTSyncService>",&,N,V_syncService
T@"<MTSyncStatusProvider>",&,N,V_syncStatusProvider
T@"<MTSyncDataModel>",W,N,V_syncDataModel
T@"MTSyncChangeQueue",&,N,V_syncChangeQueue
TB,N,V_started
handleMTCreateAlarm:completion:
resolveLabelForMTCreateAlarm:withCompletion:
resolveDateComponentsForMTCreateAlarm:withCompletion:
resolveRepeatScheduleForMTCreateAlarm:withCompletion:
provideRepeatScheduleOptionsCollectionForMTCreateAlarm:withCompletion:
confirmMTCreateAlarm:completion:
defaultRepeatScheduleForMTCreateAlarm:
provideRepeatScheduleOptionsForMTCreateAlarm:withCompletion:
_alarmUserActivityWithIntent:
_trackingEnabledForSleepAlarm:
sessionClass
startSession
endSessionWithDate:reason:
sleepSessionTrackerDelegate
setSleepSessionTrackerDelegate:
trackingEnabled
processedSessionForSession:
T@"<MTSleepSessionTrackerDelegate>",W,N
initWithAlarmStorage:
_withLock:
prepare
cachedAlarm
setCachedAlarm:
alarmLock
setAlarmLock:
_alarmLock
_sleepSessionTrackerDelegate
_cachedAlarm
T@"MTAlarm",&,N,V_cachedAlarm
T{os_unfair_lock_s=I},N,V_alarmLock
T@"<MTSleepSessionTrackerDelegate>",W,N,V_sleepSessionTrackerDelegate
_alarmNotificationActionForUserNotificationAction:category:
_timerNotificationActionForUserNotificationAction:
initWithAlarmStorage:timerStorage:
_handleAlarmNotificationResponse:withCompletionHandler:
handleAlarmNotificationIdentifier:action:category:completionHandler:
_handleTimerNotificationResponse:withCompletionHandler:
timerStorage
setTimerStorage:
metrics
setMetrics:
_timerStorage
T@"MTTimerStorage",&,N,V_timerStorage
T@"MTMetrics",&,N,V_metrics
handleUpdateAlarm:completion:
confirmUpdateAlarm:completion:
confirmMTUpdateAlarm:completion:
handleMTUpdateAlarm:completion:
_diagnosticDictionaryForAlarm:
scheduler:didChangeNextAlarm:
scheduler:didFireAlarm:
getAlarmsWithCompletion:
addAlarm:withCompletion:source:
updateAlarm:withCompletion:source:
updateAlarmWithIdentifier:changeSet:withCompletion:source:
removeAlarm:withCompletion:source:
removeAlarmWithIdentifier:withCompletion:source:
removeAllAlarmsForSource:
setAllAlarms:sleepAlarms:source:
updateSleepAlarms:source:
updateSleepAlarmsWithBlock:source:
snoozeAlarmWithIdentifier:snoozeAction:withCompletion:source:
snoozeAlarmWithIdentifier:snoozeDate:snoozeAction:withCompletion:source:
dismissAlarmWithIdentifier:dismissAction:withCompletion:source:
dismissAlarmWithIdentifier:dismissDate:dismissAction:withCompletion:source:
alarmWithIdentifier:withCompletion:
alarms
sleepAlarms
nextAlarm
allAlarms
_cleanUpSnoozeFireDate:
_cleanUpSleepAlarmRepeat:
_convertSleepAlarmToRegular:
_cleanUpForInternalBuild:
_resetCurrentToneIdentifier
loadAlarms
loadAlarmsSync
_loadAlarmsWithCompletion:
_queue_resetAlarmsTo:sleepAlarms:
_queue_allAlarms
_queue_allSleepAlarms
_queue_updateSleepAlarmsFromExistingAlarms:
transferMetadataForSleepAlarm:fromPrevious:
activeSleepAlarm
_queue_addAlarm:withCompletion:source:
_queue_updateAlarmWithIdentifier:changeSet:withCompletion:source:
_queue_updateAlarm:withCompletion:source:
_queue_removeAlarm:withCompletion:source:
_queue_removeAlarmWithIdentifier:withCompletion:source:
_queue_actuallyRemoveAlarm:withCompletion:source:
_queuePersistAlarm:replacingAlarm:
_applyNecessaryChangesFromExistingAlarm:updatedAlarm:
_queue_removeAllAlarmsForSource:
_queue_setAllAlarms:sleepAlarms:source:
_queue_setAllAlarms:sleepAlarms:source:persist:notify:
_queue_setAllAlarms:sleepAlarms:source:persist:notify:override:
_queue_snoozeAlarmWithIdentifier:snoozeDate:snoozeAction:withCompletion:source:
_queue_dismissMutableAlarm:dismissDate:dismissAction:
_queue_dismissAlarmWithIdentifier:dismissDate:dismissAction:withCompletion:source:
_queue_sortAlarms
_queue_sortSleepAlarms
_notifyObserversWithBlock:
_notifyObserversForAlarmAdd:source:
_notifyObserversForAlarmChange:source:
_notifyObserversForAlarmRemoval:source:
_notifyObserversForAlarmSnooze:snoozeAction:source:
_notifyObserversForAlarmDismiss:dismissAction:source:
_notifyObserversForAlarmFire:triggerType:source:
_notifyObserversForNextAlarmChange:source:
_queue_alarmMatchingAlarm:
_queue_alarmMatchingAlarmIdentifier:
_queue_hasMatchingAlarm:
_queue_persistAlarms
_diagnosticDictionaryForAlarms:
_removeAlarmDataIfNecessary:
orderedAlarms
setOrderedAlarms:
setSleepAlarms:
_orderedAlarms
_sleepAlarms
T@"NSMutableArray",&,N,V_orderedAlarms
T@"NSMutableArray",&,N,V_sleepAlarms
T@"NSDate",&,N,V_lastModifiedDate
T@"MTAlarmMigrator",&,N,V_migrator
T@"MTAlarmScheduler",W,N,V_scheduler
springboardStartMonitor:didReceiveStarted:
addObserver:
removeObserver:
enumerateObservers:
_startMonitoringWithQueue:
_stopMonitoring
didReceiveSpringboardStarted:
isSpringboardStarted
_checkSpringBoardStarted
_notifyToken
_isSpringBoardStarted
_queue
handleCreateTimer:completion:
confirmCreateTimer:completion:
resolveLabelForCreateTimer:withCompletion:
resolveDurationForCreateTimer:withCompletion:
resolveTypeForCreateTimer:withCompletion:
_checkNowPlayingMediaState:
_createTimerWithIntent:dryRun:completion:
_responseToCreateTimerIntent:withCreatedTimer:error:dryRun:
_timer:conflictsWithRunningTimersInTimers:
_isPlayingMediaFromMRPlaybackState:
hasToneID
setMediaID:
setHasMediaID:
hasMediaID
hasVibeID
setHasSoundVolume:
hasSoundVolume
setSoundType:
toneID
setToneID:
mediaID
vibeID
setVibeID:
_mediaID
_soundVolume
_toneID
_vibeID
_has
TI,N,V_soundType
T@"NSString",&,N,V_toneID
TB,N
Td,N,V_mediaID
T@"NSString",&,N,V_vibeID
Tf,N,V_soundVolume
unSound
unSoundForCategory:
_alertTypeForCategory:
mtSound
mt_Description
removeAllDeliveredNotifications
dismissRelatedNotificationsForScheduledAlarm:
dismissNotificationsWithIdentifiers:
dismissNotificationsForAlarm:includeSnooze:
dismissNotificationsForAlarm:dismissAction:
_intervalToCheckForAlarmsToFireBeforeDate:
scheduledListDidChange:withCompletion:
initWithStorage:notificationCenter:
initWithStorage:notificationCenter:scheduler:defaults:
initWithStorage:notificationCenter:scheduler:defaults:schedulingDelegate:taskScheduler:currentDateProvider:
rescheduleAlarmsWithCompletion:
cleanDeliveredNotifications
_rescheduleAlarmsWithCompletion:
scheduleAlarms:
_additionalAlarmsToScheduleForAlarms:
_scheduleAlarms:withCompletion:
unscheduleAlarms:
_unscheduleAlarms:
_queue_updateNextAlarmTimerWithCompletion:
_queue_unregisterTimer
_queue_triggerDidFireForAlarmWithCompletionBlock:
_shouldPostNotificationForScheduledAlarm:
_fireScheduledAlarm:firedDate:completionBlock:
_queue_fireTriggeredAlarmsWithCompletionBlock:
_lastAlarmTriggerDate
_setLastAlarmTriggerDate:
nextAlarmIncludingBedtimeNotification:
nextTriggerDate
nextTriggerDateIncludingBedtimeNotification:
nextScheduledAlarmIncludingBedtimeNotification:
_nextScheduledAlertIncludingBedtimeNotification:
_nextTriggerDateForScheduling
scheduledAlarms
schedulingDelegate
taskScheduler
defaults
setDefaults:
_scheduledAlarms
_schedulingDelegate
_taskScheduler
_defaults
T@"<MTAlarmStorage>",R,N,V_storage
T@"MTScheduledList",R,N,V_scheduledAlarms
T@"<NAScheduler>",R,N,V_serializer
T@"<MTNotificationCenter>",R,N,V_notificationCenter
T@"<MTSchedulingDelegate>",R,N,V_schedulingDelegate
T@"<MTTaskScheduler>",R,N,V_taskScheduler
T@"<MTPersistence>",&,N,V_defaults
T@"<MTAlarmScheduleDelegate>",W,N,V_delegate
alarm
setAlarm:
_alarm
T@"MTPBAlarm",&,N,V_alarm
scheduledObjectForScheduleable:trigger:
scheduledTypeForTriggerType:
initWithScheduleable:trigger:
type
isVisible
isEqualToScheduledObject:
scheduleable
setScheduleable:
trigger
setTrigger:
_scheduleable
_trigger
T@"<MTScheduleable>",C,N,V_scheduleable
T@"MTTrigger",C,N,V_trigger
identifier
shouldBeScheduled
upcomingTriggersAfterDate:
isSingleTime
isSleepItem
isItemEnabled
overridesScheduledObject:calendar:
timerWithInitialTime:fireBlock:
timerWithInitialTime:backoffFactor:fireBlock:
timerWithInitialTime:backoffFactor:fireBlock:queue:
initWithInitialTime:backoffFactor:fireBlock:queue:
start
timerFinished
stop
_cancel
timer
setTimer:
block
setBlock:
queue
setQueue:
initialTime
setInitialTime:
currentBackoff
setCurrentBackoff:
backoffFactor
setBackoffFactor:
_timer
_block
_initialTime
_currentBackoff
_backoffFactor
T@"NSObject<OS_dispatch_source>",&,N,V_timer
T@?,C,N,V_block
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
Td,N,V_initialTime
TQ,N,V_currentBackoff
TQ,N,V_backoffFactor
handleSystemReady
reloadTimeline
bypassReloadForAlarms:
bypassReloadForAlarm:
reloadTimer
setReloadTimer:
_reloadTimer
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
T@"<MTAlarmStorage>",R,N,V_alarmStorage
T@"NSTimer",&,N,V_reloadTimer
dataFromChange:
changeFromData:ofType:
dataWithSYObject:
SYObjectWithData:
encodeSYChangeForBackwardCompatibility:protocolVersion:
decodeChangeData:fromProtocolVersion:ofType:
mt_initWithAlarm:verb:
mt_intentForAlarmCreate:
mt_intentForAlarmUpdate:
mt_intentForAlarmEnable:
mt_intentForAlarmDisable:
mt_deleteDonationsForAlarm:completion:
mt_nanoAlarmBundleIDForAlarm:
alarmIntentDisplayString
alarmIDIntentObject
intentLabel
timeObject
intentAlarm
T@"MTIntentAlarm",R,N
_addStateHandler
T@"<MTAgentDiagnosticDelegate>",W,N,V_delegate
_shouldUseBedtimeDismissedDateForAlarm:
_createSleepSessionWithUserWakeTime:endReason:
updateStateForAlarm:alarmEvent:
updateAlarmCaches:
updateLastModifiedDateForAlarms:
updateStateForNextAlarm:
_queue_writeCurrentStateToContextStore
_queue_writeNextAlarmStateToContextStore:
writeAlarmToKnowledgeStore:alarmEvent:
_queue_writeAlarmToKnowledgeStore:category:
metadataForAlarm:
writeAlarmUpdatedEventForAlarms:
writeAlarmEventToBiome:ofType:
writeAlarmEventsToBiome:ofType:
alarmStatesByAlarmID
alarmsByID
context
knowledgeStore
_alarmStatesByAlarmID
_alarmsByID
_context
_knowledgeStore
T@"NSMutableDictionary",R,N,V_alarmStatesByAlarmID
T@"NSMutableDictionary",R,N,V_alarmsByID
T@"_CDClientContext",R,N,V_context
T@"_DKKnowledgeStore",R,N,V_knowledgeStore
source:didAddTimers:
source:didUpdateTimers:
source:didRemoveTimers:
source:didFireTimer:
source:didDismissTimer:
nextTimerDidChange:
_queue_donateCreateTimerIntent:source:
donatedTimerIDs
_donatedTimerIDs
T@"MTTimerStorage",R,N,V_storage
T@"NSMutableSet",R,N,V_donatedTimerIDs
initWithUpdateBlock:
markNeedsUpdate
_isUpdateNeeded
_getCachedAlarmsWithCompletion:doSynchronous:
getCachedAlarmsWithCompletion:
getCachedAlarmsSyncWithCompletion:
updateBlock
setUpdateBlock:
setNextAlarm:
needsUpdate
setNeedsUpdate:
cacheLock
setCacheLock:
_needsUpdate
_cacheLock
_updateBlock
_nextAlarm
T@?,C,N,V_updateBlock
T@"MTAlarm",&,N,V_nextAlarm
TB,N,V_needsUpdate
T{os_unfair_lock_s=I},N,V_cacheLock
_shouldNotifyForTrigger:
postNotificationForScheduledAlarm:completionBlock:
dismissNotificationsForAlarm:
postNotificationForScheduledTimer:completionBlock:
dismissNotificationsForTimer:
isSystemRestoreDone
_restoreNotification
checkSystemReady
_checkIfRestoreDone
_verifyRestoreDone
_handleRestoreDone
_handleF5Reset
restoreDoneHandled
setRestoreDoneHandled:
_restoreDoneHandled
T@"<MTSystemStateDelegate>",W,N,V_delegate
TB,N,V_restoreDoneHandled
T@"<MTScheduler>",&,N,V_serializer
sharedManager
sharedManagerWithPreferences:
initWithPreferences:
loadCities
updateALDataWithCity:
updatedTimezoneForCityWithID:
saveCities
allCities
worldClockCityFromPersistenceRepresentation:
worldClockCityFromPersistenceArray:
worldClockCityFromPersistenceDictionary:
addDefaultCitiesIfNeeded
pushCityPropertiesToPreferences
fixUpCityProperties:
checkIfCitiesModified
cityWithIdUrl:
canAddCity
addCity:
removeCity:
removeCityAtIndex:
removeAllCities
moveCityFromIndex:toIndex:
_notifyNano
citiesMatchingIdentifiers:
citiesMatchingName:
setLastModified:
_dirty
_cities
T@"NSDate",&,N,VlastModified
T@"NSArray",R,N,V_cities
stateMachineUserWokeUp:
stateMachineUserWentToBed:
stateMachine:dismissWakeUpAlarm:dismissAction:
stateMachine:shouldScheduleAlarmTimeoutForSecondsFromNow:
sleepTimeOutMinutes
initWithAlarmStorage:currentDateProvider:
setSleepModeMonitor:
updateSleepState
updateSleepStateWithSleepAlarm:
isSleepModeOn
notifyObserversForSleepAlarmChange:
_notifyObserversForSleepAlarmChange:
notifyObserversForSleepAlarmChangeIfNecessary:
sleepSessionTracker:sessionDidComplete:
handleBedtimeReminderForAlarm:date:
handleConfirmationOfGoToBedNotificationForAlarm:date:
handleSnoozeOfGoToBedNotificationForAlarm:date:
handleBedtimeForAlarm:date:
handleWakeUpTimeForAlarm:date:
handleWakeUpAlarmForAlarm:date:
handleSnoozeForAlarm:date:
handleDismissForAlarm:dismissAction:date:
handleSleepSessionEndedForAlarm:date:reason:
pairedDevicePreferencesChanged:
cachedSleepAlarm
setCachedSleepAlarm:
sleepStateResolved
setSleepStateResolved:
alarmTimeoutScheduler
setAlarmTimeoutScheduler:
sleepModeMonitor
_cachedSleepAlarm
_sleepStateResolved
_alarmTimeoutScheduler
_sleepModeMonitor
T@"MTSleepCoordinatorStateMachine",&,N,V_stateMachine
T@"MTAlarm",&,N,V_cachedSleepAlarm
T@"NAFuture",&,N,V_sleepStateResolved
T@"<MTAlarmStorage>",C,N,V_alarmStorage
T@"MTXPCScheduler",&,N,V_alarmTimeoutScheduler
T@"MTSleepModeMonitor",&,N,V_sleepModeMonitor
nextExpectedWakeUpDateAfterDate:
nextExpectedBedtimeDateAfterDate:
confirmedLastBedtimeReminder
transactionWithDescription:
transactionWithDescription:timeout:
transactionWithDescription:timeout:timeoutBlock:
initWithDescription:timeout:timeoutBlock:
transaction
setTransaction:
_transaction
T@"NSObject<OS_os_transaction>",&,N,V_transaction
objectIdentifier
sequencer
changeType
handleDeleteTimer:completion:
confirmDeleteTimer:completion:
resolveTargetTimerForDeleteTimer:withCompletion:
resolveDeleteMultipleForDeleteTimer:withCompletion:
_responseToDeleteTimerIntent:withDeletedTimers:error:dryRun:
_deleteTimer:multiple:dryRun:completion:
_timerFromIntentTargetTimer:defaultState:
handleSetTimerAttribute:completion:
confirmSetTimerAttribute:completion:
resolveTargetTimerForSetTimerAttribute:withCompletion:
resolveToDurationForSetTimerAttribute:withCompletion:
resolveToLabelForSetTimerAttribute:withCompletion:
_responseToSetTimerAttributeIntent:withUpdatedTimer:error:dryRun:
_updateTimer:toDuration:toLabel:dryRun:completion:
hasSnoozeAction
hasDismissAction
snoozeAction
setSnoozeAction:
dismissAction
setDismissAction:
syncDate
setSyncDate:
syncID
setSyncID:
syncVersion
setSyncVersion:
_syncDate
_syncVersion
_dismissAction
_snoozeAction
_syncID
T@"MTPBSnoozeAction",&,N,V_snoozeAction
T@"MTPBDismissAction",&,N,V_dismissAction
Td,N,V_syncDate
T@"NSString",&,N,V_syncID
Td,N,V_syncVersion
defaultSoundForCategory:
setDefaultSound:forCategory:
descriptionForCategory:
toneSoundWithIdentifier:vibrationIdentifer:volume:
songSoundWithIdentifier:vibrationIdentifier:volume:
_loadDefaultAlarmSound
_loadDefaultTimerSound
_saveDefaultAlarmSound:
_saveDefaultTimerSound:
initWithToneIdentifier:vibrationIdentifer:volume:
initWithMediaItemIdentifier:vibrationIdentifier:volume:
initWithSound:usingVolume:
soundByUpdatingVibrationIdentifier:
soundByUpdatingVolume:
isEqualToSound:
interruptAudio
isSilent
previewWithCompletionHandler:
updatePreview:
toneIdentifier
mediaItemIdentifier
vibrationIdentifier
_toneIdentifier
_mediaItemIdentifier
_vibrationIdentifier
TQ,R,N,V_soundType
T@"NSString",R,N,V_toneIdentifier
T@"NSNumber",R,N,V_mediaItemIdentifier
T@"NSString",R,N,V_vibrationIdentifier
T@"NSNumber",R,N,V_soundVolume
defaultCitiesAdded
defaultsKeys
setCities:
setDefaultCitiesAdded:
synchronize
cityDataNeedsUpdate
cityDataUpdated
clearOutCityUpdatePref
syncDismissOfObjectWithIdentifier:dismissDate:date:
syncDismissOfObjectWithIdentifier:dismissDate:date:version:
merge:
conflicts:
preferred:
syncIdentifier
syncType
Tf,R,N
initWithDismissedObjectIdentifier:dismissDate:date:version:
dismissDate
setDismissDate:
setIdentifier:
date
setDate:
_dismissDate
_identifier
_date
T@"NSString",&,N,V_identifier
T@"NSDate",&,N,V_dismissDate
T@"NSDate",&,N,V_date
Tf,N,V_syncVersion
createUserInfoWithIntentName:alarmIDString:time:label:
initWithAlarmManager:
alarmManager
_alarmManager
T@"MTAlarmManager",R,N,V_alarmManager
_quiescingWindow
_performScheduleSnapshot
scheduleSnapshot
_bundleID
migrateFromOldStorage
removeFromOldStorage
cleanUpOldNotifications
setAlarms:
setSleepAlarm:
_alarms
_sleepAlarm
T@"NSMutableArray",&,N,V_alarms
T@"MTAlarm",&,N,V_sleepAlarm
alarmWithHour:minute:
sleepAlarmWithSchedule:
sleepAlarmWithId:
sleepAlarmWithHour:minute:
sleepAlarmWithHour:minute:bedtimeHour:bedtimeMinute:
sleepAlarmWithHour:minute:year:month:day:bedtimeHour:bedtimeMinute:
defaultPlayOptions
defaultPlayOptionsIsSleepAlarm:
defaultSleepModeOptions
_isInternalBuild
sleepScheduleString:
_date:isOnDay:calendar:
mostRecentlyUpdatedAlarmForAlarms:
descriptionWithMultilinePrefix:
descriptionBuilderWithMultilinePrefix:
succinctDescription
succinctDescriptionBuilder
mutableCopyWithZone:
initWithIdentifier:
initWithCurrentTimeFromCurrentDateProvider:
_initCommon
initWithHour:minute:
initWithHour:minute:currentDateProvider:
playsOnThisDevice
alarmIDString
setOverriddenDate:
getOverriddenDate
dateComponents
bedtimeComponents
alarmURL
isBedtimeSnoozed
resetSnoozeFireDate
isFiring
setFiring:
displayTitle
sleepDuration
sleepDurationSeconds
compare:
nextFireDate
nextFireDateAfterDate:
nextFireDateAfterDate:includeBedtimeNotification:
nextTrigger
nextTriggerAfterDate:
nextTriggerAfterDate:includeBedtimeNotification:
nextTriggerAfterDate:includeSnooze:includeBedtimeNotification:
nextTriggerAfterDate:ofType:
nextTriggersAfterDate:
nextTriggersAfterDate:includeBedtime:
nextTriggersAfterDate:includeSnooze:includeBedtimeNotification:
nextTriggersAfterDate:inclusionOptions:
_earliestTriggerDateForDate:
_nextDateHelperWithDate:calendar:
isSingleTimeAlarm
singleTimeOverrideDateInCalendar:
overridesNextAlarm:date:calendar:
overridesAlarm:trigger:calendar:
isEqualIgnoringLastModifiedDate:
isEqualToAlarm:
_isEqualToAlarm:checkLastModified:
_copyStateOntoAlarm:
_updatePropertiesFromDeserializer:
isValidDateComponent:
setDay:
month
setMonth:
year
setYear:
bedtimeReminder
setBedtimeReminder:
sleepSchedule
setSleepSchedule:
sleepMode
setSleepMode:
sleepModeOptions
setSleepModeOptions:
sleepTracking
setSleepTracking:
timeInBedTracking
setTimeInBedTracking:
repeatSchedule
setRepeatSchedule:
playOptions
setPlayOptions:
setSound:
overriddenForDate
setOverriddenForDate:
snoozeFireDate
setSnoozeFireDate:
bedtimeSnoozeFireDate
setBedtimeSnoozeFireDate:
firedDate
setFiredDate:
dismissedDate
setDismissedDate:
dismissedAction
setDismissedAction:
bedtimeFiredDate
setBedtimeFiredDate:
bedtimeDismissedDate
setBedtimeDismissedDate:
bedtimeDismissedAction
setBedtimeDismissedAction:
onboardingVersion
setOnboardingVersion:
siriContext
setSiriContext:
bypassReload
setBypassReload:
_sleepSchedule
_sleepMode
_sleepTracking
_timeInBedTracking
_bypassReload
_day
_month
_year
_bedtimeHour
_bedtimeMinute
_bedtimeReminder
_sleepModeOptions
_repeatSchedule
_playOptions
_overriddenForDate
_snoozeFireDate
_bedtimeSnoozeFireDate
_firedDate
_dismissedDate
_dismissedAction
_bedtimeFiredDate
_bedtimeDismissedDate
_bedtimeDismissedAction
_onboardingVersion
_siriContext
TQ,N,V_hour
TQ,N,V_minute
TQ,N,V_bedtimeHour
TQ,N,V_day
TQ,N,V_month
TQ,N,V_year
TQ,N,V_bedtimeMinute
TQ,N
T@"NSNumber",C,N,V_bedtimeReminder
TB,N,V_sleepMode
TQ,N,V_sleepModeOptions
TB,N,V_sleepTracking
T@"NSDate",C,N,V_overriddenForDate
TB,N,V_timeInBedTracking
TB,N,V_sleepSchedule
TQ,N,V_repeatSchedule
TB,N,GisEnabled,V_enabled
TQ,N,V_playOptions
TB,N,GisSleepAlarm,V_sleepAlarm
T@"NSDate",C,N,V_snoozeFireDate
T@"NSDate",C,N,V_bedtimeSnoozeFireDate
T@"NSDate",C,N,V_firedDate
T@"NSDate",C,N,V_dismissedDate
TQ,N,V_dismissedAction
T@"NSDate",C,N,V_bedtimeFiredDate
T@"NSDate",C,N,V_bedtimeDismissedDate
TQ,N,V_bedtimeDismissedAction
T@"NSDate",C,N,V_keepOffUntilDate
T@"NSString",C,N,V_title
T@"MTSound",C,N,V_sound
TQ,N,V_onboardingVersion
T@"NSDictionary",C,N,V_siriContext
TB,N,V_bypassReload
T@"NSUUID",R,N,V_alarmID
T@"NSURL",R,N
firing
TB,R,N,GisFiring
TB,R,N,GisSnoozed
T@"NSDictionary",C,D,N
TB,D,N
TQ,D,N
T@"NSNumber",C,D,N
TB,D,N,GisEnabled
T@"NSString",C,D,N
T@"MTSound",C,D,N
deviceFirstUnlocked
platformSpecificSourceBundleIdentifier
sleepSampleWithInterval:sampleType:metadata:
initWithAlarmStorage:sleepCoordinator:sleepSessionTracker:
archiveSession:
writeSession:
saveSessionData
waitForUnlock
_hasUnprocessedSessions
_unprocessedSessions
_removeSessionDataFile
_writeSessionData
_writeSessions:
healthStore
setHealthStore:
archivedSessionDataPath
setArchivedSessionDataPath:
archivedSessionDataFile
setArchivedSessionDataFile:
sleepSessionTracker
setSleepSessionTracker:
_healthStore
_archivedSessionDataPath
_archivedSessionDataFile
_sleepSessionTracker
T@"HKHealthStore",&,N,V_healthStore
T@"NSString",C,N,V_archivedSessionDataPath
T@"NSString",C,N,V_archivedSessionDataFile
T@"<MTSleepSessionTracker>",&,N,V_sleepSessionTracker
_sharedPublicMetrics
logAlarmAdded:
logAlarmDeleted:
logAlarmUpdated:
logAlarmSnoozeAction:
logAlarmDismissAction:
logTimerAdded
logMultipleTimersAdded:
logTimerDeleted
logTimerUpdated
logTimerDismissed
logTimerRepeated
logSyncCompleted
logSyncFailedWithError:
relayFrameworkNotification:
sharedRelay
refreshManagersForPreferences:localNotifications:
refreshManagers
setRefreshManagers:
_refreshManagers
TB,N,V_refreshManagers
distributedNotificationPosted:
notificationObject
sharedUserDefaults
_distributedNotificationForLocalNotification:
_localNotificationForDistributedNotification:
initWithUserDefaults:
setFloat:forKey:notification:
floatForKey:exists:
setBool:forKey:
setBool:forKey:notification:
boolForKey:
boolForKey:exists:
setInteger:forKey:
setInteger:forKey:notification:
integerForKey:exists:
integerForKey:defaultValue:
integerForKey:isValid:defaultValue:
setTimeInterval:forKey:
setTimeInterval:forKey:notification:
timeIntervalForKey:exists:
timeIntervalForKey:defaultValue:
timeIntervalForKey:isValid:defaultValue:
setObject:forKey:notification:
removeObjectForKey:
removeAllObjects
_postNotification:
registerNotification:observer:
unregisterNotification:observer:
_cleanupObserversForNotification:
userDefaults
setUserDefaults:
_userDefaults
T@"NSUserDefaults",&,N,V_userDefaults
T@"NSMutableDictionary",&,N,V_observers
sensitiveUIStateChanged
sharedMonitor
_isVendorRelease
registerForNotifications
unregisterForNotifications
_handleNotification
_hideSensitiveUI
addSensitiveUIObserver:
removeSensitiveUIObserver:
shouldHideForSensitivity:
notifyToken
setNotifyToken:
hideSensitiveUI
setHideSensitiveUI:
needPrefsUpdate
setNeedPrefsUpdate:
lock
setLock:
_needPrefsUpdate
_lock
Ti,N,V_notifyToken
TB,N,V_hideSensitiveUI
TB,N,V_needPrefsUpdate
T{os_unfair_lock_s=I},N,V_lock
mtIsBeforeDate:
mtIsBeforeOrSameAsDate:
mtIsAfterDate:
mtIsAfterOrSameAsDate:
mtDateNearestMatchingComponents:
mtMidnightForDate
mtDescription
mtNow
mtLatest:
mtEarliest:
mtNextDateAfterDate:matchingComponents:
mtPreviousDateBeforeDate:matchingComponents:
_mtNextDateAfterDate:matchingComponents:backwards:
mtNextDateAfterDate:matchingUnit:value:
mtPreviousDateBeforeDate:matchingUnit:value:
_mtNextDateAfterDate:matchingUnit:value:backwards:
_nextDateHelperAfterDate:nextDateBlock:
mtDateRequiresSingularTimeString:
mtGregorianCalendar
_optionsForBackwards:
mtIsIn24HourTime
mtTimeIntervalSinceComponents:
mtTimeIntervalSinceComponents:now:
mtClockAppSection
mtIsList
mtIsForLastTimer
mtID
mtURLForClockAppSection:
mtURLForClockAppSection:timerManager:
mtURLForScheme:
Ti,R,N
mtUserActivityWithActivityType:
mtUserActivityWithActivityType:title:
mtUserActivityWithActivityType:title:keywords:
mtSetIntentDonorFromSource:
performBlock:
performCancelableBlock:
afterDelay:performBlock:
performSyncBlock:
initWithQueue:
internalScheduler
internalQueue
_internalScheduler
_internalQueue
T@"<NAScheduler>",R,N,V_internalScheduler
T@"NSObject<OS_dispatch_queue>",R,N,V_internalQueue
serialSchedulerWithName:
serialSchedulerForObject:
mtMainThreadScheduler
mtSerialSchedulerForObject:
mtContainsDate:
mtDateIntervalWithEndDate:duration:
mtTimeOnlyFormatter
mtFinishWithFuture:
mtSynchronousResult:
initWithTimeout:
dayAndTimeZoneOffsetStringFromDate:withTimeZoneOffset:timeZoneAbbreviation:spaceBeforeTimeDesignator:hoursOnly:numericOnly:
logMessage:
widgetURL
widgetOverrideDate
isWorldClockCityProperties:
isCachedLanguageStaleForProperties:
isCachedLanguageStaleForProperties:systemLanguage:
unlocalizedExampleCity
initWithALCity:
initWithALCityIdentifier:
initWithTimeZone:countryCode:name:countryName:unlocalizedName:unlocalizedCountryName:
initWithProperties:
properties
alCityId
timeZone
name
countryName
unlocalizedCityName
unlocalizedCountryName
countryCode
idUrl
alCity
_alCity
_timeZone
_name
_countryName
_countryCode
_unlocalizedName
_unlocalizedCountryName
T@"ALCity",R,N,V_alCity
T@"NSNumber",R,N
clockAppSectionURL
fireDate
setFireDate:
_fireDate
T@"NSDate",C,N,V_fireDate
T@"NSString",C,N,V_identifier
T@"NSURL",R,C,N
_handleAlarmsDidChange
calculateNextAlarms
nextAlarms
setNextAlarms:
updateHandler
setUpdateHandler:
setAlarmManager:
_nextAlarms
_updateHandler
T@"NSSet",&,N,V_nextAlarms
T@"MTAlarmManager",&,N,V_alarmManager
T@?,C,N,V_updateHandler
timeZoneName
T@"NSDateComponents",C,D,N
currentTime
city
timeZoneDisplayName
timeZoneAbbreviation
timeZoneOffset
timeZoneOffsetFromGMT
isDaylightSavingTime
successWithResolvedObject:
disambiguationWithObjectsToDisambiguate:
confirmationRequiredWithObjectToConfirm:
successWithResolvedMTWorldClock:
disambiguationWithMTWorldClocksToDisambiguate:
confirmationRequiredWithMTWorldClockToConfirm:
_allIdentifiersForAlarm:
_allIdentifiersForAlarm:includeMainIdentifier:
_allIdentifiersForAlarm:includeMainIdentifier:includeSnooze:
requestIdentifierForScheduledAlarm:
_goToBedIdentifier:
_snoozeCountdownIdentifier:
notificationPrefixes
contentForScheduledAlarm:
_mutableContentForScheduledAlarmWithCommonSettings:
_setSpecificContent:forScheduledAlarm:
_setSpecificContent:forGoToBedNotification:
_setSpecificContent:forSnoozeCountdownNotification:
_setSpecificContent:forNormalScheduledAlarm:
_durationComponentsFormatter
_timeFormatter
_setGoToBedTitleAndBody:forGoToBedNotification:
_wakeUpAlarmStringForAlarm:
_setSnoozeCountdownTitleAndBody:forSnoozeCountdownNotification:
contentForScheduledTimer:
categoryForScheduledAlarm:
categoryForScheduledTimer:
userInfoForAlarm:
userInfoForTimer:
launchURLForScheme:
setupNotificationCenter
registerActionHandler:
alarmCategories
timerCategories
bedtimeCategories
notificationCategories
_notificationCenterForScheduledAlarm:
postNotificationForScheduledAlarm:content:completionBlock:
dismissNotificationsForAlarm:includeMainIdentifier:
dismissNotificationsForAlarm:includeMainIdentifier:includeSnooze:
tearDownNotificationsForEventIdentifiers:
_notificationCenterForScheduledTimer
interruptAudioAndLockDeviceWithCompletionBlock:
postBedtimeNotificationForAlarm:date:
notificationCenters
setNotificationCenters:
actionHandler
setActionHandler:
_notificationCenters
_actionHandler
T@"NSDictionary",&,N,V_notificationCenters
T@"MTUserNotificationActionDispatcher",&,N,V_actionHandler
T@"MTTimer",&,N,V_timer
initWithProperty:changedValue:originalValue:
property
setProperty:
changedValue
setChangedValue:
originalValue
setOriginalValue:
_property
_changedValue
_originalValue
T@"NSString",C,N,V_property
T@,&,N,V_changedValue
T@,&,N,V_originalValue
dictionaryFromChanges:
changeSetWithChangesFromObject:toObject:
changeSetWithChangesFromObject:toObject:inProperties:
initWithChanges:
initWithChangeDictionary:
_isEqualToChangeSet:checkOriginalValues:
isEquivalentToChangeSet:
changeSetByAddingChangeSet:
changes
hasChangesInProperties:
hasChangeForProperty:
hasChangesInCommonWithChangeSet:
changedValueForProperty:hasProperty:
deserializedChangedValueForProperty:hasProperty:
_deserializer
changedProperties
setChangedProperties:
changeDictionary
setChangeDictionary:
_changedProperties
_changeDictionary
T@"NSSet",&,N,V_changedProperties
T@"NSDictionary",&,N,V_changeDictionary
applyChangesFromChangeSet:
initWithSleepModeEndDate:stateMachine:
sleepModeEndDate
_sleepModeEndDate
T@"NSDate",R,N,V_sleepModeEndDate
initWithCallbackScheduler:
Td,N,V_dismissDate
postNotificationForAlarmsEdited
postNotificationForAlarmActiveChanged
postNotificationForUserPreferences:localNotifications:
startTimer:block:
cancelTimer
_powerAssertion
scheduleTask:
scheduleTaskGroup:
_scheduleTask:withCompletion:
taskWithIdentifier:completableBlock:
taskWithIdentifier:delay:completableBlock:
delay
setDelay:
completableBlock
setCompletableBlock:
_delay
_completableBlock
Td,N,V_delay
T@?,C,N,V_completableBlock
T@"MTGCDTimer",&,N,V_timer
taskGroupWithTasks:completionBlock:
tasks
setTasks:
completionBlock
setCompletionBlock:
_tasks
_completionBlock
T@"NSArray",C,N,V_tasks
T@?,C,N,V_completionBlock
notificationWithType:name:
notificationWithType:name:powerAssertionTimeout:
initWithType:name:powerAssertionTimeout:
releaseAssertion
setType:
setName:
powerAssertion
setPowerAssertion:
_type
Tq,N,V_type
T@"NSString",C,N,V_name
T@"MTPowerAssertion",&,N,V_powerAssertion
handleGetAlarms:completion:
confirmGetAlarms:completion:
initWithName:
initWithName:assertionTimeout:
takeAssertion
assertionTimeout
_assertionTimeout
Td,R,N,V_assertionTimeout
T@"NSString",R,N,V_name
_getCachedTimersWithCompletion:doSynchronous:
getCachedTimersWithCompletion:
getCachedTimersSyncWithCompletion:
setNextTimer:
_nextTimer
T@"MTTimer",&,N,V_nextTimer
isEqualToTime:
remainingTime
Td,R,N
initWithTimeInterval:
_remainingTime
Td,R,N,V_remainingTime
initWithDate:
initWithDate:currentDateProvider:
T@"NSDate",C,N,V_date
warmUp
defaultDuration
setDefaultDuration:
T@,R,N
T@"NSNotificationCenter",R,N
initWithMetrics:
initWithConnectionProvider:metrics:
initWithConnectionProvider:metrics:notificationCenter:
_initWithConnectionProvidingBlock:metrics:
_initWithConnectionProvidingBlock:metrics:notificationCenter:
_getCachedTimersWithFuture:finishBlock:
timersSync
nextTimersForDate:maxCount:
_updateTimer:doSynchronous:
dismissTimerWithIdentifier:
repeatTimerWithIdentifier:
currentTimer
_updateCurrentTimerWithState:
stopCurrentTimer
pauseCurrentTimer
resumeCurrentTimer
_validateCanStartTimer:
_runningTimerFromCurrentTimer:withDuration:
startCurrentTimerWithDuration:
getCurrentTimerSync
startCurrentTimerWithDurationSync:
_updateCurrentTimerWithStateSync:
stopCurrentTimerSync
pauseCurrentTimerSync
resumeCurrentTimerSync
connectionProvider
cache
setCache:
_connectionProvider
_cache
T@"MTTimerManagerExportedObject",&,N,V_exportedObject
T@"MTXPCConnectionProvider",R,N,V_connectionProvider
T@"MTTimerCache",&,N,V_cache
T@"NSNotificationCenter",&,N,V_notificationCenter
_didReceiveTimerServerReadyNotification:
timersAdded:
timersUpdated:
timersRemoved:
timerFired:
timerDismissed:
nextTimerChanged:
initWithTimerManager:
timerManager
_timerManager
T@"MTTimerManager",R,W,N,V_timerManager
handleResetTimer:completion:
confirmResetTimer:completion:
resolveTargetTimerForResetTimer:withCompletion:
resolveResetMultipleForResetTimer:withCompletion:
_handleResetTimer:dryRun:completion:
_responseToResetTimerIntent:withResetTimers:error:dryRun:
addObserver:wasFirst:
removeObserver:wasLast:
enumerateObserversWithBlock:
containsObserver:
count
observersLock
setObserversLock:
_observersLock
T{os_unfair_lock_s=I},N,V_observersLock
T@"NSHashTable",&,N,V_observers
xpcSchedulerWithEvent:
scheduleTimerForSeconds:
unscheduleTimer
initWithEvent:
scheduleActivityWithCriteria:activityHandler:
scheduleActivityWithCriteria:activityHandler:performImmediately:
unscheduleActivity
eventName
setEventName:
_eventName
T@"NSString",C,N,V_eventName
assistantSyncNotificationName
_filterSleepAlarmOverrides:date:
_sortedAlarms:date:includeBedtimeNotification:
_filteredAlarms:afterDate:maxCount:filter:
_getCachedAlarmsWithFuture:finishBlock:
_alarmsIncludingSleepAlarm:doSynchronous:
alarmsIncludingSleepAlarm:
alarmCountIncludingSleepAlarm:
firingAlarmCount
alarmsSync
alarmsSyncIncludingSleepAlarm:
nextAlarmsForDate:maxCount:
nextAlarmsForDate:maxCount:includeSleepAlarm:
nextAlarmsForDate:maxCount:includeBedtimeNotification:
nextAlarmsForDate:maxCount:includeSleepAlarm:includeBedtimeNotification:
_nextAlarmsForDate:maxCount:includeSleepAlarm:includeBedtimeNotification:doSynchronous:
nextAlarmsInRange:maxCount:includeSleepAlarm:
nextAlarmsInRange:maxCount:includeSleepAlarm:includeBedtimeNotification:
_nextAlarmsInRange:maxCount:includeSleepAlarm:includeBedtimeNotification:doSynchronous:
_sortedNextAlarmsAfterDate:includeSleepAlarm:includeBedtimeNotification:
_sortedNextAlarmsAfterDate:includeSleepAlarm:includeBedtimeNotification:doSynchronous:
nextAlarmsForDateSync:maxCount:
nextAlarmsForDateSync:maxCount:includeSleepAlarm:
nextAlarmsForDateSync:maxCount:includeBedtimeNotification:
nextAlarmsForDateSync:maxCount:includeSleepAlarm:includeBedtimeNotification:
nextAlarmsInRangeSync:maxCount:includeSleepAlarm:
nextAlarmsInRangeSync:maxCount:includeSleepAlarm:includeBedtimeNotification:
sleepAlarmSync
sleepAlarmsSync
nextAlarmSync
alarmWithIDString:
alarmWithIDString:includeSleep:
_alarmWithIDStringAsync:
indexForAlarm:
alarmAtIndex:
alarmCount
nextSleepAlarm
addAlarm:
updateAlarm:
removeAlarm:
snoozeAlarmWithIdentifier:
snoozeAlarmWithIdentifier:snoozeAction:
dismissAlarmWithIdentifier:
dismissAlarmWithIdentifier:dismissAction:
T@"MTAlarmManagerExportedObject",&,N,V_exportedObject
T@"MTAlarmCache",&,N,V_cache
_didReceiveAlarmServerReadyNotification:
alarmsAdded:
alarmsUpdated:
alarmsRemoved:
alarmSnoozed:
alarmDismissed:
alarmFired:
nextAlarmChanged:
T@"MTAlarmManager",R,W,N,V_alarmManager
mtNotifiyingQueue
updateSleepAlarms
resetSleepAlarmSnoozeState
startSessionWithEstimatedEndDate:
pauseSessionWithTimeRemainingString:
stopSession
pauseTimer
resumeTimer
stopTimer
resendTimerDataEntry
supportsSessions
processTimerUpdate:
normalizedTimeString:state:
buildConnection
setupInterface
server
updateTimerWithState:
sessionsManager
setSessionsManager:
setConnection:
connectionQueue
setConnectionQueue:
_sessionsManager
_connectionQueue
T@"MTSessionsManager",&,N,V_sessionsManager
T@"BSServiceConnection<BSServiceConnectionClient>",&,N,V_connection
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionQueue
mtStringByRemovingNotificationPrefixes
mtStringByRemovingNotificationDate
mtStringByAppendingNotificationDate:
mtGreetingString:
alarmsType
clearAlarms
addAlarms:
alarmsCount
alarmsAtIndex:
_updateTimer:dryRun:updateBlock:completion:
_updateTimer:dryRun:allowMultiple:excludeStoppedTimers:filterBlock:updateBlock:completion:
handleSearchForTimers:completion:
confirmSearchForTimers:completion:
resolveLabelForSearchForTimers:withCompletion:
resolveDurationForSearchForTimers:withCompletion:
resolveStateForSearchForTimers:withCompletion:
resolveTypeForSearchForTimers:withCompletion:
updateModeKeepOffUntilDateIfNecessary
determineNextState:
nextSleepModeEndDate
nextSleepModeEndDateAfterDate:
nextSleepModeStartDate
nextSleepModeStartDateAfterDate:
prepareAlarms
_bundleIDForUNSchedule
alarmFromOldAlarm:
repeatScheduleFromOldAlarm:
soundFromOldAlarm:
_numberFromString:
loadLegacyData
_loadUserPreferences
_loadScheduledNotifications
_upgradeFromSpringboardDefaults
_upgradeIfNeverAttempted
_upgrade
_upgradeAlarms
_upgradeTimers
_discardOldVersion
_discardOldAlarms
_discardOldTimers
_copyLegacyAlarmsFromPreferences
_copyLegacySleepAlarmFromPreferences
_loadAlarms
_reconcileAlarmsAndNotifications
_loadTimerDefaults
purgeLegacyData
_purgeAlarmsAndTimers
cancelNotifications
_cancelNotifications
defaultSound
setDefaultSound:
scheduledNotifications
setScheduledNotifications:
loaded
setLoaded:
purged
setPurged:
_loaded
_purged
_defaultDuration
_defaultSound
_scheduledNotifications
T@"NSObject<OS_dispatch_queue>",&,N,V_serializer
T@"NSArray",&,N,V_scheduledNotifications
T@"NSArray",&,N,V_alarms
T@"Alarm",&,N,V_sleepAlarm
Td,N,V_defaultDuration
T@"NSString",C,N,V_defaultSound
TB,N,V_loaded
TB,N,V_purged
listener:shouldAcceptNewConnection:
initWithConnectionInfo:errorHandler:
startListening
_didInvalidateConnection:
addClientConnection:clientLink:
removeClientConnection:
connectedClients
_connectedClients
currentClient
_currentClientForConnection:
performBlockOnCurrentClient:
performBlockOnAllClients:
performBlockOnAllClients:excludingCurrent:
performBlockOnClientInfos:excludeCurrent:
performBlockOnAllClients:excludingClient:
_performBlockOnClientInfos:excludingClient:
stopListening
clients
setClients:
connectionListener
setConnectionListener:
_clients
_connectionListener
T@"NSMutableSet",&,N,V_clients
T@"NSXPCListener",&,N,V_connectionListener
agent
restoreDidFinish
_setupNotificationCenter
_setupAlarms
_setupTimers
_setupSync
_setupInitialListeners
_setupSecondaryListeners
_diagnosticProviders
_removeUserDefaultsDataIfNecessary:
_removeUserDefaultsData
sleepManager
launchDate
setLaunchDate:
systemReady
setSystemReady:
notificationManager
setNotificationManager:
systemStateListener
setSystemStateListener:
languageChangeListener
setLanguageChangeListener:
diagnostics
setDiagnostics:
timeListener
setTimeListener:
alarmServer
setAlarmServer:
alarmScheduler
setAlarmScheduler:
alarmSnapshot
setAlarmSnapshot:
timerServer
setTimerServer:
timerScheduler
setTimerScheduler:
timerSnapshot
setTimerSnapshot:
alarmIntentDonor
setAlarmIntentDonor:
timerIntentDonor
setTimerIntentDonor:
coreDuetMonitor
setCoreDuetMonitor:
widgetProvider
setWidgetProvider:
timerSessionsCoordinator
setTimerSessionsCoordinator:
sleepSessionManager
setSleepSessionManager:
alarmSyncDataModel
setAlarmSyncDataModel:
_systemReady
_sleepManager
_launchDate
_notificationManager
_systemStateListener
_languageChangeListener
_diagnostics
_timeListener
_alarmServer
_alarmScheduler
_alarmSnapshot
_timerServer
_timerScheduler
_timerSnapshot
_alarmIntentDonor
_timerIntentDonor
_coreDuetMonitor
_widgetProvider
_timerSessionsCoordinator
_sleepSessionManager
_alarmSyncDataModel
T@"NSDate",&,N,V_launchDate
TB,N,V_systemReady
T@"MTAgentNotificationManager",&,N,V_notificationManager
T@"MTSystemStateListener",&,N,V_systemStateListener
T@"MTLanguageChangeListener",&,N,V_languageChangeListener
T@"MTAgentDiagnosticListener",&,N,V_diagnostics
T@"MTTimeListener",&,N,V_timeListener
T@"MTAlarmServer",&,N,V_alarmServer
T@"MTAlarmScheduler",&,N,V_alarmScheduler
T@"MTAlarmSnapshot",&,N,V_alarmSnapshot
T@"MTTimerServer",&,N,V_timerServer
T@"MTTimerScheduler",&,N,V_timerScheduler
T@"MTTimerSnapshot",&,N,V_timerSnapshot
T@"<MTNotificationCenter>",&,N,V_notificationCenter
T@"MTAlarmIntentDonor",&,N,V_alarmIntentDonor
T@"MTTimerIntentDonor",&,N,V_timerIntentDonor
T@"MTCoreDuetMonitor",&,N,V_coreDuetMonitor
T@"MTWidgetProvider",&,N,V_widgetProvider
T@"MTTimerSessionsCoordinator",&,N,V_timerSessionsCoordinator
T@"MTSleepCoordinator",&,N,V_sleepCoordinator
T@"MTSleepSessionManager",&,N,V_sleepSessionManager
T@"MTSleepSessionTracker",&,N,V_sleepSessionTracker
T@"MTAlarmSyncDataModel",&,N,V_alarmSyncDataModel
T@"MTSleepManager",R,N,V_sleepManager
dataSource:didAddAlarms:
dataSource:didRemoveAlarms:
dataSource:didUpdateAlarms:
unregisterObserver:
_iterateObserversWithBlock:
_registerForNotifications
_handleAlarmNotification:block:
_stateReset
reloadAlarms
numberOfAlarms
alarmAtRow:
rowForAlarm:
rowForAlarmWithID:
hasSleepAlarmMatchingAlarmIDString:
persistChanges:
loadChanges
initWithDataModel:
setupSyncDataFileForDataModel:
_removeSyncDataFile
archiverScheduler
syncDataPath
setSyncDataPath:
syncDataFile
setSyncDataFile:
_archiverScheduler
_syncDataPath
_syncDataFile
T@"<NAScheduler>",R,N,V_archiverScheduler
T@"NSString",C,N,V_syncDataPath
T@"NSString",C,N,V_syncDataFile
setChanges:
_changes
T@"NSMutableArray",&,N,V_changes
persistentStoreForDataModel:
inMemoryStore
willExitWithNextState:
willEnterWithPreviousState:
didExitWithNextState:
T@"MTStateMachine",W,N,V_stateMachine
latitude
abbreviation
longditude
cityName
successWithResolvedMTCity:
disambiguationWithMTCitysToDisambiguate:
confirmationRequiredWithMTCityToConfirm:
enterState:
stateMachineName
currentState
setCurrentState:
infoProvider
setInfoProvider:
_currentState
_infoProvider
T@"MTStateMachineState",&,N,V_currentState
T@"<MTStateMachineDelegate>",W,N,V_delegate
T@"<MTStateMachineInfoProvider>",W,N,V_infoProvider
isPushAlertsEnabled
_isPushAlertsEnabledInPreferences
_handlePrefsChanged
_notifyClientsOfChange
pushAlertsEnabled
npsManager
setNpsManager:
_pushAlertsEnabled
_npsManager
T@"NPSManager",&,N,V_npsManager
TB,R,N,V_pushAlertsEnabled
sharedWorkspaceObserver
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
deviceManagementPolicyDidChange:
applicationsDidChangePersonas:
databaseWasRebuilt
T@"MTApplicationWorkspaceObserver",R,N
addObserver:forBundleIdentifier:
isApplicationInstalledForBundleIdentifier:allowPlaceholder:
isApplicationInstalledForBundleIdentifier:
observerQueue
setObserverQueue:
observersForBundleID
setObserversForBundleID:
isObserving
setObserving:
_observing
_observerQueue
_observersForBundleID
T@"NSObject<OS_dispatch_queue>",&,N,V_observerQueue
T@"NSMutableDictionary",&,N,V_observersForBundleID
observing
TB,N,GisObserving,V_observing
T@"<MTTimerManagerIntentSupport>",R,N
alarmFromSleepOccurrence:scheduleEnabled:keepOffUntilDate:
alarmRepeatScheduleFrom:
playOptionsForOccurrence:
_intervalToCheckForTimersToFireBeforeDate:
rescheduleTimers
rescheduleTimersWithCompletion:
_queue_rescheduleTimersWithCompletion:
scheduleTimers:
unscheduleTimers:
_queue_nextTimer
_queue_scheduleTimers:withCompletion:
_queue_unscheduleTimers:
_queue_updatePersistentTimerForNextTimerWithCompletion:
_queue_triggerDidFireForTimerWithCompletionBlock:
_fireScheduledTimer:firedDate:completionBlock:
_queue_fireTriggeredTimersWithCompletionBlock:
_queue_nextScheduledTimer
_queue_lastTimerTriggerDate
_queue_setLastTimerTriggerDate:
scheduledTimers
_scheduledTimers
T@"<MTTimerStorage>",&,N,V_storage
T@"MTScheduledList",R,N,V_scheduledTimers
T@"<MTTimerSchedulerDelegate>",W,N,V_delegate
syncSession:enqueueChanges:error:
syncSession:applyChanges:completion:
syncSession:didEndWithError:
syncSession:resetDataStoreWithError:
resetDataStoreForSyncSession:completion:
syncSession:rollbackChangesWithError:
syncSession:restartChanges:
syncSession:successfullySynced:
initWithSession:delegate:
initWithSession:request:delegate:
sessionDescription
processedChanges
setProcessedChanges:
request
setRequest:
session
setSession:
setPendingChanges:
lastIndex
setLastIndex:
_processedChanges
_request
_session
_pendingChanges
_lastIndex
T@"SYSession",&,N,V_session
T@"MTCompanionSyncRequest",&,N,V_request
T@"NSArray",&,N,V_pendingChanges
T@"NSMutableArray",&,N,V_processedChanges
TQ,N,V_lastIndex
T@"<MTSyncServiceDelegate>",W,N,V_delegate
addAlarm:withCompletion:
updateAlarm:withCompletion:
removeAlarm:withCompletion:
snoozeAlarmWithIdentifier:snoozeAction:withCompletion:
dismissAlarmWithIdentifier:dismissAction:withCompletion:
nextSleepAlarmWithCompletion:
updateSleepAlarmsWithCompletion:
resetSleepAlarmSnoozeStateWithCompletion:
addTimer:withCompletion:
updateTimer:withCompletion:
removeTimer:withCompletion:
dismissTimerWithIdentifier:withCompletion:
repeatTimerWithIdentifier:withCompletion:
stringFromDate:withRelativeToTimeZone:
sharedDeviceListener
hasBeenUnlockedSinceBoot
_latestKeyBagValueForHasBeenUnlockedSinceBoot
_hasBeenUnlockedSinceBoot
workScheduler
setWorkScheduler:
internalHasBeenUnlockedSinceBoot
setInternalHasBeenUnlockedSinceBoot:
_internalHasBeenUnlockedSinceBoot
_workScheduler
T@"<NAScheduler>",&,N,V_workScheduler
TB,N,V_internalHasBeenUnlockedSinceBoot
sleepStore:sleepScheduleDidChange:
sleepStore:sleepSettingsDidChange:
sleepStore:sleepEventDidOccur:
sleepStore:sleepScheduleStateDidChange:
sleepStore:sleepModeOnDidChange:
initWithAlarmStorage:sleepStoreProvider:featureStoreProvider:healthStore:persistence:
_didCompleteSleepOnboarding
watchSleepFeaturesEnabled
markSleepMigrationComplete
sleepStoreProvider
setSleepStoreProvider:
sleepStore
setSleepStore:
featureStore
setFeatureStore:
_sleepStoreProvider
_sleepStore
_featureStore
T@?,C,N,V_sleepStoreProvider
T@"HKSPSleepStore",&,N,V_sleepStore
T@"HKSPFeatureAvailabilityStore",&,N,V_featureStore
deviceSupportsSyncing
activePairedDeviceDidChange
syncStatus
syncStatusProviderDelegate
setSyncStatusProviderDelegate:
T@"<MTSyncStatusProviderDelegate>",W,N
_syncStatusProviderDelegate
T@"<MTSyncStatusProviderDelegate>",W,N,V_syncStatusProviderDelegate
currentTimerFromTimers:
descriptionForState:
stateChangeIsAllowableFromState:toState:
_timerTimeForState:remainingTime:currentDateProvider:
initWithState:duration:
initWithState:duration:currentDateProvider:
isCurrentTimer
timerURL
hasDefaultTitle
timerByRestarting
timerByUpdatingWithState:
timerIDString
setState:
setDuration:
_setDuration:
isEqualToTimer:
_isEqualToTimer:checkLastModified:
_copyStateOntoTimer:
timerID
state
duration
fireTime
setFireTime:
_timerID
_state
_duration
_fireTime
T@"<MTTimerTime>",C,N,V_fireTime
TQ,N,V_state
Td,N,V_duration
T@"NSUUID",R,N,V_timerID
T@"NSDate",C,D,N
Td,D,N
_notifyClientsForTriggerType:
initWithStorage:connectionListenerProvider:
_systemNotReadyError
_isSystemReady
connectionListenerProvider
isSystemReady
_connectionListenerProvider
T@"MTXPCConnectionListenerProvider",R,N,V_connectionListenerProvider
TB,R,N,GisSystemReady,V_systemReady
_matchTimersFromIntentsTimer:excludeStoppedTimers:completion:
_genericallyResolveTargetTimer:multiple:allowedTimerStatesForFollowup:completion:
_onlyUnnamedTimerInTimers:forTargetTimer:allowMultiple:
_alternateTimersForTargetTimerState:type:inTimers:allowedTimerStates:
_isDefaultTimer:
timerManagerProvider
setTimerManagerProvider:
setTimerManager:
_timerManagerProvider
T@"<MTTimerManagerIntentSupport>",&,N,V_timerManager
T@"<MTTimerManagerProviding>",W,N,V_timerManagerProvider
requestWithType:
addCompletionBlock:
initWithRequestType:
complete:
requestDescription
requestType
setRequestType:
completed
setCompleted:
error
setError:
completionBlocks
setCompletionBlocks:
_completed
_requestType
_error
_completionBlocks
TQ,N,V_requestType
TB,N,V_completed
T@"NSError",&,N,V_error
T@"NSMutableArray",&,N,V_completionBlocks
triggerWithDate:triggerType:
triggerWithDate:triggerType:isPastOverrideEvent:
_stringForType:
initWithDate:type:isPastOverrideEvent:
initWithDate:type:
isEqualToTrigger:
isForSnooze
isForNotification
isForGoToBed
isForAlert
isScheduled
isEvent
isBedtimeRelated
isWakeUpRelated
triggerType
setTriggerType:
triggerDate
setTriggerDate:
isPastOverrideEvent
_isPastOverrideEvent
_triggerType
_triggerDate
TQ,N,V_triggerType
T@"NSDate",C,N,V_triggerDate
TB,R,N,V_isPastOverrideEvent
syncSnoozeOfObjectWithIdentifier:snoozeDate:date:
syncSnoozeOfObjectWithIdentifier:snoozeDate:date:version:
initWithSnoozedObjectIdentifier:snoozeDate:date:version:
snoozeDate
setSnoozeDate:
_snoozeDate
T@"NSDate",&,N,V_snoozeDate
Td,N,V_snoozeDate
propertiesAffectingWaketime
propertiesAffectingBedtime
propertiesAffectingSnooze
propertiesAffectingNotification
propertiesAffectingSync
handler
setHandler:
notification
setNotification:
_handler
_notification
T@?,C,N,V_handler
T@"MTOSTransaction",&,N,V_transaction
T^{__CFUserNotification=},N,V_notification
postNotificationWithIdentifier:title:message:defaultButtonTitle:otherButtonTitle:bypassDND:handler:
cancelNotificationsWithIdentifiers:
notifications
setNotifications:
_notifications
T@"NSMutableDictionary",&,N,V_notifications
T@"NSUUID",R,N
initWithChangeStore:
performBlockOnceChangesAreLoaded:async:
persistChanges
enqueueChange:
_enqueueAction:
_enqueueChange:changeCompareBlock:
dequeueChanges:
hasPendingChanges
removePendingChanges
resolveChange:
_resolveChange:
_resolveChange:resolutionHandler:
changesLoaded
setChangesLoaded:
changeStore
setChangeStore:
changeQueue
setChangeQueue:
_changesLoaded
_changeStore
_changeQueue
T@"NSObject<OS_dispatch_group>",&,N,V_changesLoaded
T@"<MTSyncChangeStore>",&,N,V_changeStore
T@"NSMutableArray",&,N,V_changeQueue
shouldRetryForError:
service:startSession:error:
service:sessionEnded:error:
service:incomingData:completion:
service:incomingStream:metadata:completion:
service:encounteredError:context:
service:willPreferSession:overSession:
service:willSwitchFromPairingID:toPairingID:
service:didSwitchFromPairingID:toPairingID:
service:targetDeviceProximityChanged:
service:targetDeviceConnectionChanged:
serviceDidPairDevice:
serviceDidUnpairDevice:
resume:
suspend
T@"<MTSyncServiceDelegate>",W,N
initWithSyncStatusProvider:
_requestSync:
service:startSendingSession:error:
service:startReceivingSession:error:
service:sendingSessionEnded:error:
service:receivingSessionEnded:error:
_retryRequest
service
setService:
sendingSession
setSendingSession:
receivingSession
setReceivingSession:
pendingRequests
setPendingRequests:
retryTimer
setRetryTimer:
_service
_sendingSession
_receivingSession
_pendingRequests
_retryTimer
T@"SYService",&,N,V_service
T@"MTCompanionSyncSession",&,N,V_sendingSession
T@"MTCompanionSyncSession",&,N,V_receivingSession
T@"NSMutableDictionary",&,N,V_pendingRequests
T@"MTExponentialBackOffTimer",&,N,V_retryTimer
clientInfoForConnection:clientLink:
initWithConnection:clientLink:
processName
processID
clientLink
setClientLink:
connectedDate
setConnectedDate:
_clientLink
_connectedDate
T@"NSXPCConnection",&,N,V_connection
T@,&,N,V_clientLink
T@"NSDate",&,N,V_connectedDate
T@"NSString",R,C,N
hasAlarmID
setHasHour:
hasHour
setHasMinute:
hasMinute
hasTitle
setHasAllowsSnooze:
hasAllowsSnooze
setHasDaySetting:
hasDaySetting
hasSound
setHasIsSleepAlarm:
hasIsSleepAlarm
setHasBedtimeHour:
hasBedtimeHour
setHasBedtimeMinute:
hasBedtimeMinute
setHasBedtimeReminderMinutes:
hasBedtimeReminderMinutes
setRevision:
setHasRevision:
hasRevision
setHasLastModifiedDate:
hasLastModifiedDate
setHasSnoozeFireDate:
hasSnoozeFireDate
setHasBedtimeSnoozeFireDate:
hasBedtimeSnoozeFireDate
setIsEnabled:
setHasIsEnabled:
hasIsEnabled
setHasFiredDate:
hasFiredDate
setHasDismissedDate:
hasDismissedDate
setHasPlayOptions:
hasPlayOptions
setHasSleepMode:
hasSleepMode
setHasSleepTracking:
hasSleepTracking
setHasSleepSchedule:
hasSleepSchedule
setHasOnboardingVersion:
hasOnboardingVersion
setHasSleepModeOptions:
hasSleepModeOptions
setHasTimeInBedTracking:
hasTimeInBedTracking
setHasDismissedAction:
hasDismissedAction
setHasBedtimeFiredDate:
hasBedtimeFiredDate
setHasBedtimeDismissedDate:
hasBedtimeDismissedDate
setHasBedtimeDismissedAction:
hasBedtimeDismissedAction
setHasKeepOffUntilDate:
hasKeepOffUntilDate
_bedtimeReminderMinutes
_isEnabled
T@"MTPBSound",&,N,V_sound
TI,N,V_bedtimeHour
TI,N,V_bedtimeMinute
TI,N,V_bedtimeReminderMinutes
TI,N,V_revision
Td,N,V_lastModifiedDate
Td,N,V_snoozeFireDate
Td,N,V_bedtimeSnoozeFireDate
TB,N,V_isEnabled
Td,N,V_firedDate
Td,N,V_dismissedDate
TI,N,V_playOptions
TI,N,V_onboardingVersion
TI,N,V_sleepModeOptions
TI,N,V_dismissedAction
Td,N,V_bedtimeFiredDate
Td,N,V_bedtimeDismissedDate
TI,N,V_bedtimeDismissedAction
Td,N,V_keepOffUntilDate
asleepState
setAsleepState:
awakeState
setAwakeState:
disabledState
setDisabledState:
_asleepState
_awakeState
_disabledState
T@"MTSleepCoordinatorStateMachineAsleepState",&,N,V_asleepState
T@"MTSleepCoordinatorStateMachineAwakeState",&,N,V_awakeState
T@"MTSleepCoordinatorStateMachineDisabledState",&,N,V_disabledState
time
T@"INObject",C,D,N
label
requiresAppLaunch
Tq,D,N
successIntentResponseWithAlarm:
T@"MTIntentAlarm",C,D,N
operation
unspecifiedIntentResponseWithState:
readyIntentResponseWithState:
continueInAppIntentResponseWithState:
inProgressIntentResponseWithState:
successIntentResponseWithState:alarm:
failureRequiringAppLaunchIntentResponseWithState:
successIntentResponseWithAlarms:
successWithResolvedValue:
confirmationRequiredWithValueToConfirm:
successWithResolvedAlarmState:
confirmationRequiredWithAlarmStateToConfirm:
successWithResolvedAlarmOperation:
confirmationRequiredWithAlarmOperationToConfirm:
successWithResolvedAlarm:
disambiguationWithAlarmsToDisambiguate:
confirmationRequiredWithAlarmToConfirm:
value
successWithResolvedRepeatDay:
disambiguationWithRepeatDaysToDisambiguate:
confirmationRequiredWithRepeatDayToConfirm:
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v32@0:8@"INPauseTimerIntent"16@?<v@?@"INPauseTimerIntentResponse">24
v32@0:8@"INPauseTimerIntent"16@?<v@?@"INTimerResolutionResult">24
v32@0:8@"INPauseTimerIntent"16@?<v@?@"INBooleanResolutionResult">24
v32@0:8@"INResumeTimerIntent"16@?<v@?@"INResumeTimerIntentResponse">24
v32@0:8@"INResumeTimerIntent"16@?<v@?@"INTimerResolutionResult">24
v32@0:8@"INResumeTimerIntent"16@?<v@?@"INBooleanResolutionResult">24
v36@0:8@16B24@?28
@44@0:8@16@24@32B40
@56@0:8@16@24@32Q40@48
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
q16@0:8
@"NSDate"16@0:8
@"NSArray"16@0:8
@"NSDictionary"16@0:8
v20@0:8B16
v24@0:8Q16
v16@0:8
@"NSDate"
@"NSArray"
@"NSDictionary"
@"PBCodable"16@0:8
@24@0:8@"PBCodable"16
v24@0:8@"<MTSerializer>"16
@24@0:8@"<MTSerializer>"16
B32@0:8@16@24
@?16@0:8
@24@0:8q16
q24@0:8@16
v20@0:8I16
v24@0:8q16
v32@0:8@16q24
I16@0:8
@"Alarm"
@"NSMutableDictionary"
@"NSString"
@"<AlarmDelegate>"
@"NSURL"
@40@0:8@16@24Q32
@72@0:8@16@24@32@40@48@56Q64
@"NSXPCInterface"
v32@0:8@"MTEnableAlarmIntent"16@?<v@?@"MTEnableAlarmIntentResponse">24
v32@0:8@"MTDisableAlarmIntent"16@?<v@?@"MTDisableAlarmIntentResponse">24
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"MTToggleAlarmIntentResponse">24
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"MTAlarmStateResolutionResult">24
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"MTIntentAlarmResolutionResult">24
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"INObjectCollection"@"NSError">24
@"MTIntentAlarm"24@0:8@"MTToggleAlarmIntent"16
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@16@24@?32
@28@0:8@16B24
B32@0:8@16q24
v40@0:8@16q24@?32
d32@0:8@16q24
B32@0:8@"NSString"16q24
v40@0:8@"NSString"16q24@?<v@?>32
d32@0:8@"NSString"16q24
v32@0:8@16@24
@?24@0:8@16
@32@0:8@16@?24
@24@0:8Q16
v32@0:8@?16@?24
@"<MTScheduledListDelegate>"
@"NSMutableOrderedSet"
@32@0:8@16@24
f24@0:8@16
v28@0:8f16@20
@24@0:8@"NSString"16
@32@0:8@"NSString"16@24
f24@0:8@"NSString"16
v32@0:8@16@"NSString"24
v28@0:8f16@"NSString"20
@32@0:8q16@24
v32@0:8@"MTTimerScheduler"16@"MTTimer"24
v32@0:8@"MTTimerScheduler"16@"MTScheduledObject"24
v24@0:8@"NSString"16
v24@0:8@?16
v40@0:8@16@?24@32
v24@0:8@"<MTTimerObserver>"16
v24@0:8@?<v@?@"NSArray"@"MTTimer"@"NSError">16
v40@0:8@"MTTimer"16@?<v@?@"NSError">24@"<MTSource>"32
v40@0:8@"NSString"16@?<v@?@"NSError">24@"<MTSource>"32
v32@0:8@"NSArray"16@"<MTSource>"24
@"MTTimer"16@0:8
@56@0:8@16@24@32@40@?48
v40@0:8@16@24B32B36
@40@0:8@16@?24@32
@"MTMetrics"
@"MTTimerScheduler"
@"NSMutableArray"
@"MTTimerMigrator"
@"<NAScheduler>"
@"MTObserverStore"
@"<MTPersistence>"
d16@0:8
@24@0:8^{_NSZone=}16
@"NSCoder"16@0:8
v28@0:8B16@20
v32@0:8q16@24
v28@0:8i16@20
v32@0:8d16@24
i24@0:8@16
d24@0:8@16
v40@0:8@16@24Q32
v32@0:8@"<MTSource>"16@"NSArray"24
v40@0:8@"<MTSource>"16@"MTAlarm"24Q32
v32@0:8@"<MTSource>"16@"MTAlarm"24
@"MTAlarmStorage"
v24@0:8@"<MTSyncable>"16
@56@0:8@16@24@?32@40@48
@"MTSyncServiceManager"
@"NSObject<OS_dispatch_queue>"
v24@0:8@"NSDate"16
B20@0:8B16
@"NRDevice"
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
@"UNUserNotificationCenter"
@"MTPBAlarmProperties"
@40@0:8@16@?24@?32
v36@0:8@?16@?24B32
@24@0:8@?16
@40@0:8@?16@?24@?32
{os_unfair_lock_s=I}16@0:8
@"NSXPCConnection"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"MTXPCConnectionInfo"
v24@0:8B16B20
@"NAFuture"16@0:8
@"NAFuture"24@0:8@"NSObject<MTTimerIntentSupport>"16
@"NAFuture"24@0:8Q16
v32@0:8@"DNDModeAssertionService"16@"DNDModeAssertion"24
v32@0:8@"DNDModeAssertionService"16@"DNDModeAssertionInvalidation"24
B24@0:8^B16
@"MTAlarm"16@0:8
B36@0:8@16@24B32
B28@0:8@16B24
v32@0:8@16d24
B36@0:8@"MTSleepModeStateMachine"16@"NSDate"24B32
B28@0:8@"MTSleepModeStateMachine"16B24
v32@0:8@"MTSleepModeStateMachine"16@"NSDate"24
v24@0:8@"MTSleepModeStateMachine"16
v32@0:8@"MTSleepModeStateMachine"16d24
v40@0:8@16@24@32
v48@0:8@16@24Q32@40
v40@0:8@"MTSleepCoordinator"16@"NSDate"24@"MTAlarm"32
v48@0:8@"MTSleepCoordinator"16@"NSDate"24Q32@"MTAlarm"40
v32@0:8@"MTSleepCoordinator"16@"MTAlarm"24
v32@0:8@"MTTimeListener"16@?<v@?>24
@40@0:8@16@24@?32
B32@0:8^B16^@24
B24@0:8^@16
@"<MTAlarmStorage>"
@"MTSleepCoordinator"
@"MTSleepModeStateMachine"
@"DNDModeAssertionService"
v28@0:8B16@?20
v32@0:8B16B20@24
v32@0:8B16B20@"NSDate"24
@"MTSleepModeStateMachineInitialState"
@"MTSleepModeStateMachineOffState"
@"MTSleepModeStateMachineWaitingState"
@32@0:8@16o^@24
@40@0:8@16@24o^@32
@"NSDateFormatter"
v32@0:8@16Q24
v32@0:8@"<MTSyncStatusProvider>"16Q24
v24@0:8@"NSArray"16
@"<MTSyncToken>"24@0:8Q16
@48@0:8@16@24@32@40
@56@0:8@16@24@32@40@48
@"<MTSyncService>"
@"<MTSyncStatusProvider>"
@"<MTSyncDataModel>"
@"MTSyncChangeQueue"
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"MTCreateAlarmIntentResponse">24
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"INStringResolutionResult">24
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"INDateComponentsResolutionResult">24
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"NSArray">24
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"INObjectCollection"@"NSError">24
@"NSArray"24@0:8@"MTCreateAlarmIntent"16
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSDate"16Q24
@"<MTSleepSessionTrackerDelegate>"16@0:8
v24@0:8@"<MTSleepSessionTrackerDelegate>"16
B24@0:8@"MTAlarm"16
@"<MTSleepSession>"24@0:8@"<MTSleepSession>"16
v20@0:8{os_unfair_lock_s=I}16
@"<MTSleepSessionTrackerDelegate>"
@"MTAlarm"
Q32@0:8@16@24
Q24@0:8@16
v48@0:8@16Q24@32@?40
@"MTTimerStorage"
v32@0:8@"MTUpdateAlarmIntent"16@?<v@?@"MTUpdateAlarmIntentResponse">24
v32@0:8@"MTAlarmScheduler"16@"MTScheduledObject"24
v48@0:8@16@24@?32@40
v32@0:8@?16@24
v48@0:8@16Q24@?32@40
v56@0:8@16@24Q32@?40@48
v24@0:8@"<MTAlarmObserver>"16
v24@0:8@?<v@?@"NSArray"@"NSArray"@"MTAlarm"@"NSError">16
v40@0:8@"MTAlarm"16@?<v@?@"NSError">24@"<MTSource>"32
v48@0:8@"NSString"16@"MTChangeSet"24@?<v@?@"NSError">32@"<MTSource>"40
v24@0:8@"<MTSource>"16
v40@0:8@"NSArray"16@"NSArray"24@"<MTSource>"32
v32@0:8@?<v@?@"MTMutableAlarm">16@"<MTSource>"24
v48@0:8@"NSString"16Q24@?<v@?@"NSError">32@"<MTSource>"40
v56@0:8@"NSString"16@"NSDate"24Q32@?<v@?@"NSError">40@"<MTSource>"48
v32@0:8@"NSString"16@?<v@?@"MTAlarm">24
v48@0:8@16@24@32B40B44
v52@0:8@16@24@32B40B44B48
v40@0:8@16Q24@32
@"MTAlarmScheduler"
@"MTAlarmMigrator"
v32@0:8@"INCreateTimerIntent"16@?<v@?@"INCreateTimerIntentResponse">24
v32@0:8@"INCreateTimerIntent"16@?<v@?@"INCreateTimerLabelResolutionResult">24
v32@0:8@"INCreateTimerIntent"16@?<v@?@"INTimeIntervalResolutionResult">24
v32@0:8@"INCreateTimerIntent"16@?<v@?@"INTimerTypeResolutionResult">24
B20@0:8I16
v24@0:8d16
v20@0:8f16
f16@0:8
{?="mediaID"b1"soundVolume"b1}
q24@0:8Q16
v32@0:8@"MTScheduledList"16@?<v@?>24
@72@0:8@16@24@32@40@48@56@?64
@20@0:8B16
@"<MTAlarmScheduleDelegate>"
@"MTScheduledList"
@"<MTNotificationCenter>"
@"<MTSchedulingDelegate>"
@"<MTTaskScheduler>"
@"MTPBAlarm"
Q24@0:8Q16
@"<MTScheduleable>"
@"MTTrigger"
@"NSArray"24@0:8@"NSDate"16
B32@0:8@"MTScheduledObject"16@"NSCalendar"24
@32@0:8d16@?24
@40@0:8d16Q24@?32
@48@0:8d16Q24@?32@40
@"NSObject<OS_dispatch_source>"
@"NSTimer"
@32@0:8@16q24
@40@0:8@16q24q32
@"NSData"24@0:8@"<SYChange>"16
@"<SYChange>"32@0:8@"NSData"16q24
@"NSData"24@0:8@"<SYObject>"16
@"<SYObject>"24@0:8@"NSData"16
@"NSData"32@0:8@"<SYChange>"16q24
@"<SYChange>"40@0:8@"NSData"16q24q32
@"<MTAgentDiagnosticDelegate>"
@32@0:8@16Q24
@"_CDClientContext"
@"_DKKnowledgeStore"
v32@0:8@"<MTSource>"16@"MTTimer"24
v24@0:8@"MTTimer"16
@"NSMutableSet"
v28@0:8@?16B24
v28@0:8@16B24
v32@0:8@"MTScheduledObject"16@?<v@?>24
v24@0:8@"MTAlarm"16
v24@0:8@"MTScheduledObject"16
v32@0:8@"MTAlarm"16Q24
v28@0:8@"MTAlarm"16B24
@"<MTSystemStateDelegate>"
@"<MTScheduler>"
v32@0:8Q16Q24
@"WorldClockPreferences"
v24@0:8@"MTSleepCoordinatorStateMachine"16
v40@0:8@"MTSleepCoordinatorStateMachine"16@"NSDate"24Q32
v32@0:8@"MTSleepCoordinatorStateMachine"16d24
@"MTSleepCoordinatorStateMachine"
@"NAFuture"
@"MTXPCScheduler"
@"MTSleepModeMonitor"
@32@0:8@16d24
@40@0:8@16d24@?32
@"NSObject<OS_os_transaction>"
v32@0:8@"INDeleteTimerIntent"16@?<v@?@"INDeleteTimerIntentResponse">24
v32@0:8@"INDeleteTimerIntent"16@?<v@?@"INTimerResolutionResult">24
v32@0:8@"INDeleteTimerIntent"16@?<v@?@"INBooleanResolutionResult">24
v40@0:8@16B24B28@?32
v32@0:8@"INSetTimerAttributeIntent"16@?<v@?@"INSetTimerAttributeIntentResponse">24
v32@0:8@"INSetTimerAttributeIntent"16@?<v@?@"INSetTimerAttributeTargetTimerResolutionResult">24
v32@0:8@"INSetTimerAttributeIntent"16@?<v@?@"INTimeIntervalResolutionResult">24
v32@0:8@"INSetTimerAttributeIntent"16@?<v@?@"INSpeakableStringResolutionResult">24
v52@0:8@16d24@32B40@?44
@"MTPBDismissAction"
@"MTPBSnoozeAction"
@40@0:8@16@24@32
@"NSNumber"
@44@0:8@16@24@32f40
@"<MTSyncableObject>"24@0:8@"<MTSyncableObject>"16
B24@0:8@"<MTSyncableObject>"16
@"MTAlarmManager"
@32@0:8Q16Q24
@32@0:8q16q24
@48@0:8q16q24q32q40
@72@0:8q16q24q32q40q48q56q64
Q20@0:8B16
B40@0:8@16q24@32
@"NSString"24@0:8@"NSString"16
@"BSDescriptionBuilder"24@0:8@"NSString"16
@"BSDescriptionBuilder"16@0:8
@40@0:8Q16Q24@?32
@32@0:8@16B24B28
B40@0:8@16@24@32
B24@0:8q16
@"NSUUID"
@"MTSound"
@40@0:8@16q24@32
v32@0:8@"<MTSleepSessionTracker>"16@"<MTSleepSession>"24
@"HKHealthStore"
@"<MTSleepSessionTracker>"
v36@0:8f16@20@28
f32@0:8@16^B24
v36@0:8B16@20@28
B32@0:8@16^B24
v40@0:8q16@24@32
q32@0:8@16^B24
q32@0:8@16q24
q40@0:8@16@?24q32
v40@0:8d16@24@32
d32@0:8@16^B24
d32@0:8@16d24
d40@0:8@16@?24d32
@"NSUserDefaults"
i16@0:8
v20@0:8i16
@36@0:8@16@24B32
@40@0:8@16Q24q32
@44@0:8@16Q24q32B40
d32@0:8@16@24
@20@0:8i16
@28@0:8i16@20
v24@0:8@?<v@?>16
@"<NACancelable>"24@0:8@?<v@?@"NACancelationToken">16
@"<NACancelable>"32@0:8d16@?<v@?>24
@24@0:8^@16
@24@0:8d16
@52@0:8@16q24@32B40B44B48
@64@0:8@16@24@32@40@48@56
@"ALCity"
@"NSSet"
v32@0:8@16B24B28
@"MTUserNotificationActionDispatcher"
@"MTTimer"
@32@0:8@16^B24
v32@0:8d16@?24
@"MTPowerAssertion"
v24@0:8@"MTTask"16
v24@0:8@"MTTaskGroup"16
@"MTGCDTimer"
@40@0:8q16@24d32
v32@0:8@"MTGetAlarmsIntent"16@?<v@?@"MTGetAlarmsIntentResponse">24
B24@0:8@"<MTTimerTime>"16
q24@0:8@"<MTTimerTime>"16
@"NSNotificationCenter"16@0:8
@32@0:8@?16@24
@40@0:8@?16@24@32
B24@0:8d16
B24@0:8Q16
@"MTTimerManagerExportedObject"
@"MTXPCConnectionProvider"
@"MTTimerCache"
@"NSNotificationCenter"
@"MTTimerManager"
v32@0:8@"INResetTimerIntent"16@?<v@?@"INResetTimerIntentResponse">24
v32@0:8@"INResetTimerIntent"16@?<v@?@"INTimerResolutionResult">24
v32@0:8@"INResetTimerIntent"16@?<v@?@"INBooleanResolutionResult">24
v32@0:8@16^B24
@"NSHashTable"
v36@0:8@16@?24B32
@48@0:8@16@24Q32@?40
@24@0:8B16B20
@36@0:8@16Q24B32
@40@0:8@16Q24B32B36
@44@0:8@16Q24B32B36B40
@36@0:8@16B24B28B32
@"MTAlarmManagerExportedObject"
@"MTAlarmCache"
@32@0:8d16Q24
@"MTSessionsManager"
@"BSServiceConnection<BSServiceConnectionClient>"
v44@0:8@16B24@?28@?36
v60@0:8@16B24B28B32@?36@?44@?52
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INSearchForTimersIntentResponse">24
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INSpeakableStringResolutionResult">24
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INTimeIntervalResolutionResult">24
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INTimerStateResolutionResult">24
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INTimerTypeResolutionResult">24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
@"MTSleepManager"
@"MTAgentNotificationManager"
@"MTSystemStateListener"
@"MTLanguageChangeListener"
@"MTAgentDiagnosticListener"
@"MTTimeListener"
@"MTAlarmServer"
@"MTAlarmSnapshot"
@"MTTimerServer"
@"MTTimerSnapshot"
@"MTAlarmIntentDonor"
@"MTTimerIntentDonor"
@"MTCoreDuetMonitor"
@"MTWidgetProvider"
@"MTTimerSessionsCoordinator"
@"MTSleepSessionManager"
@"MTSleepSessionTracker"
@"MTAlarmSyncDataModel"
@"MTStateMachine"
@"MTStateMachineState"
@"<MTStateMachineDelegate>"
@"<MTStateMachineInfoProvider>"
@"NPSManager"
v32@0:8@"NSArray"16@"NSArray"24
@"<MTTimerManagerIntentSupport>"16@0:8
@36@0:8@16B24@28
@"<MTTimerSchedulerDelegate>"
@"<MTTimerStorage>"
I40@0:8@16@?24^@32
B32@0:8@16^@24
I40@0:8@"SYSession"16@?<B@?@"<SYChange>">24^@32
v40@0:8@"SYSession"16@"NSArray"24@?<v@?B@"NSError">32
v32@0:8@"SYSession"16@"NSError"24
B32@0:8@"SYSession"16^@24
v32@0:8@"SYSession"16@?<v@?B@"NSError">24
v32@0:8@"SYSession"16@"NSSet"24
@"MTCompanionSyncRequest"
@"SYSession"
@"<MTSyncServiceDelegate>"
v40@0:8@16Q24@?32
v32@0:8@"MTAlarm"16@?<v@?@"NSError">24
v40@0:8@"NSString"16Q24@?<v@?@"NSError">32
v24@0:8@?<v@?@"MTAlarm"@"NSError">16
v24@0:8@?<v@?@"NSError">16
v32@0:8@"MTTimer"16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepSchedule"24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepSettings"24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepEvent"24
v32@0:8@"HKSPSleepStore"16Q24
v28@0:8@"HKSPSleepStore"16B24
@56@0:8@16@?24@?32@40@48
@"HKSPSleepStore"
@"HKSPFeatureAvailabilityStore"
@"<MTSyncStatusProviderDelegate>"16@0:8
v24@0:8@"<MTSyncStatusProviderDelegate>"16
@"<MTSyncStatusProviderDelegate>"
B32@0:8Q16Q24
@40@0:8Q16d24@?32
@32@0:8Q16d24
@"<MTTimerTime>"
@"MTXPCConnectionListenerProvider"
v44@0:8@16B24@28@?36
@48@0:8q16q24@32@40
@"<MTTimerManagerProviding>"
@"<MTTimerManagerIntentSupport>"
@"NSError"
^{__CFUserNotification=}16@0:8
v24@0:8^{__CFUserNotification=}16
@"MTOSTransaction"
^{__CFUserNotification=}
v68@0:8@16@24@32@40@48B56@?60
@"NSUUID"16@0:8
@"NSObject<OS_dispatch_group>"
@"<MTSyncChangeStore>"
B40@0:8@16@24^@32
v48@0:8@16@24@32@?40
B40@0:8@"SYService"16@"SYSession"24^@32
v40@0:8@"SYService"16@"SYSession"24@"NSError"32
v40@0:8@"SYService"16@"NSData"24@?<v@?B@"NSError">32
v48@0:8@"SYService"16@"NSInputStream"24@"NSDictionary"32@?<v@?B@"NSError">40
v40@0:8@"SYService"16@"NSError"24@"NSDictionary"32
@"SYSession"40@0:8@"SYService"16@"SYSession"24@"SYSession"32
v40@0:8@"SYService"16@"NSUUID"24@"NSUUID"32
v28@0:8@"SYService"16B24
v24@0:8@"SYService"16
@"<MTSyncServiceDelegate>"16@0:8
v24@0:8@"<MTSyncServiceDelegate>"16
@"SYService"
@"MTCompanionSyncSession"
@"MTExponentialBackOffTimer"
@"MTPBSound"
{?="bedtimeDismissedDate"b1"bedtimeFiredDate"b1"bedtimeSnoozeFireDate"b1"dismissedDate"b1"firedDate"b1"keepOffUntilDate"b1"lastModifiedDate"b1"snoozeFireDate"b1"bedtimeDismissedAction"b1"bedtimeHour"b1"bedtimeMinute"b1"bedtimeReminderMinutes"b1"daySetting"b1"dismissedAction"b1"hour"b1"minute"b1"onboardingVersion"b1"playOptions"b1"revision"b1"sleepModeOptions"b1"allowsSnooze"b1"isEnabled"b1"isSleepAlarm"b1"sleepMode"b1"sleepSchedule"b1"sleepTracking"b1"timeInBedTracking"b1}
@"MTSleepCoordinatorStateMachineAsleepState"
@"MTSleepCoordinatorStateMachineAwakeState"
@"MTSleepCoordinatorStateMachineDisabledState"
