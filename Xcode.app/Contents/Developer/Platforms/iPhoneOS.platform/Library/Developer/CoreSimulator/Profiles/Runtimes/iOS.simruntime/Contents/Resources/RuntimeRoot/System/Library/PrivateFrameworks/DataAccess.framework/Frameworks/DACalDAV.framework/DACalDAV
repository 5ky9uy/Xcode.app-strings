CalDAVAccountVersion
CalDAVHostKey
CalDAVSchemeKey
CalDAVPortKey
CalDAVMobileAccountCollectionSetName
CalDAVMobileAccountSearchPropertySet
CalDAVMobileAccountSearchPropertySetKey_CoreDAV
CalDAVMobileAccountIsWritable
CalDAVMobileAccountServerVersion
CalDAVMobileAccountOverriddenServer
CalDAVMobileAccountOverriddenPort
CalDAVMobileAccountOverriddenScheme
CalDAVMobileAccountDelegatePrincipalPath
WasUpgradedFromLegacy
v8@?0
CalDAVHTTPTraffic
MobileCalDAVAccount.m
Nothing to see here, buddy. Just turn around and leave quietly.
Account was deallocated while still refreshing. Ouch
absoluteString
%@://%@:%ld
http
subscribed 
VTODO
VEVENT
event
task
I didn't order a refresh, so why is there one on my menu?
We should have an actor at this point
v32@?0@"NSNumber"8@"CalDAVMove"16^B24
migration 
 (calendars only)
v32@?0@"NSString"8@"MobileCalDAVDelegateUserInfo"16^B24
backingAccountInfo
v20@?0B8@"NSError"12
/calendar/dav/%@/user/
/.well-known/caldav
/principals/
_caldav._tcp.
_caldavs._tcp.
calendar-access
ACCOUNT_UNIQUE_CONSTRAINT_FAILED_BODY_FORMAT_CALDAV
DataAccess
INVALID_PASSWORD_BODY_CALDAV
mailto:%@
v32@?0@8@"MobileCalDAVPrincipal"16^B24
REMStore
Class getREMStoreClass(void)_block_invoke
Unable to find class %s
void *ReminderKitLibrary(void)
PrincipalURL
MobileCalDAVPrincipal.m
Cannot create a principal with a nil account
v24@?0@"NSDictionary"8^B16
v32@?0@"NSString"8@"NSSet"16^B24
CardDAViCloudDaemonAccount
v24@?0@"CalDAVCalendarUserAddress"8^B16
v32@?0@8@16^B24
AUDIO
Cannot create a calendar without a URL
DEFAULT_CALENDAR_NAME
DEFAULT_TASK_CALENDAR_NAME
APSD
PRODUCTION
production
SANDBOX
DEVELOPMENT
development
demo
mailto
v24@?0q8@"NSError"16
MobileCalUserAddressAddressURL
EventRef
ChangeID
ChangeRowid
ExternalID
UniqueIdentifier
SignificantAttributeChange
OldCalendarID
EntityType
CalDBIsClosing
%@ [%@] "%@"
CalDiagCalendarCollectionSync
CalDiagCalendarItemSync
?isJunk=true
events
tasks
q24@?0@"DACalDAViCalItem"8@"DACalDAViCalItem"16
n add
 modify
modify
-//Apple Inc.//iOS %@//EN
Can't create path: %@ (%@)
.ics
CalDiagStore
mailto:
MobileCalDAVAccountRefreshActor.m
There should not be any active task groups when the actor is deallocated
There should not be any active tasks when the actor is deallocated
CalDiagAccountSync
There should not be any active task groups at a state transition
There should not be any active tasks at a state transition
MobileCalDAVAccountRefreshActor tried to transition out of the finished state. What does that even mean?
We were told to refresh, but we already started a refresh!
v32@?0@"NSString"8@"CalDAVMove"16^B24
v16@?0@"<CalDAVCalendar>"8
B24@?0@8@"NSDictionary"16
application/zip;x-mac-auto-archive=yes
application/octet-stream
We should have only finished once
cancelled
complete
ACTION
ATTACH
ATTENDEE
CALSCALE
CATEGORIES
CLASS
COMMENT
COMPLETED
CONTACT
CREATED
DESCRIPTION
DTEND
DTSTAMP
DTSTART
DURATION
EXDATE
EXRULE
FREEBUSY
LAST-MODIFIED
LOCATION
METHOD
ORGANIZER
PERCENT-COMPLETE
PRIORITY
PRODID
RDATE
RECURRENCE-ID
RELATED-TO
REPEAT
REQUEST-STATUS
RESOURCES
RRULE
SEQUENCE
STATUS
SUMMARY
TRANSP
TRIGGER
TZID
TZNAME
TZOFFSETFROM
TZOFFSETTO
TZURL
VERSION
SCOPE
MAXRESULTS
MAXRESULTSSIZE
QUERY
QUERYNAME
TARGET
X-CALENDARSERVER-MASK-UID
ALTREP
CUTYPE
DELEGATED-FROM
DELEGATED-TO
ENCODING
FMTTYPE
FBTYPE
LANGUAGE
MEMBER
PARTSTAT
SCHEDULE-STATUS
RANGE
RELATED
RELTYPE
ROLE
RSVP
SCHEDULE-FORCE-SEND
SENT-BY
VALUE
UNTIL
COUNT
INTERVAL
BYMONTH
BYWEEKNO
BYYEARDAY
BYMONTHDAY
BYDAY
BYHOUR
BYMINUTE
BYSECOND
BYSETPOS
WKST
X-APPLE-DROPBOX
X-WR-ATTENDEE
X-WR-LANG
X-WR-RELCALID
X-WR-CALNAME
X-WR-CALDESC
X-WR-CALTYPE
X-WR-EXPIRATION
X-WR-TIMEZONE
X-WR-TEMPLATE
X-WR-ICONINFO
X-WR-PARENT
X-WR-UNTIL
X-WR-COUNT
X-WR-INTERVAL
X-WR-BYMONTH
X-WR-BYWEEKNO
X-WR-BYYEARDAY
X-WR-BYMONTHDAY
X-WR-BYDAY
X-WR-BYHOUR
X-WR-BYMINUTE
X-WR-BYSECOND
X-WR-BYSETPOS
X-WR-WEEKSTART
X-WR-CACHEDENDDATE
X-WR-ITIPSTATUSML
X-WR-ITIPSTATUSATTENDEEML
X-WR-ITIPALREADYSENT
X-WR-RSVPNEEDED
X-WR-DONTSCHEDULE
X-CALENDARSERVER-ACCESS
X-WR-ALARMUID
X-WR-OCCTRIGGER
X-WR-OCCDATEID
X-WR-CANCELID
X-WR-INVITATIONID
X-APPLE-SORT-ORDER
X-APPLE-FILENAME
X-APPLE-AUTOARCHIVED
X-APPLE-ATTACHMENTID
X-APPLE-CALENDAR-COLOR
X-APPLE-AUTO-REFRESH
X-APPLE-IGNORE-ON-RESTORE
X-APPLE-NEEDS-REPLY
X-CALENDARSERVER-ATTENDEE-COMMENT
X-CALENDARSERVER-ATTENDEE-REF
X-CALENDARSERVER-DTSTAMP
X-CALENDARSERVER-PRIVATE-COMMENT
EMAIL
X-APPLE-NEEDS-SERVER-CONFIRMATION
X-APPLE-EWS-ITEMID
X-APPLE-EWS-PERMISSION
X-APPLE-CHANGEKEY
X-APPLE-SELF-INVITED
X-NUM-GUESTS
v44@?0i8^{__CFArray=}12^{__CFArray=}20^{__CFArray=}28^{__CFArray=}36
CalDAVChangeEvent
CalDAVChangeTask
CalDAVChangeAlarm
CalDAVChangeAttendee
CalDAVChangeOrganizer
CalDAVChangeAttachment
CalDAVChangeRecurrence
%@ - (path: %@)
DACalDAViCalItem.m
You should be calling the calendar specific version of this call
Sync
CalDAV
DTEND corruption
Inbox
CalDiagInboxCollectionSync
MobileCalDAVInboxCalendar.m
Cannot set etag for an invitation without a unique identifier
Cannot insert a nil url to the invitation etag cache
Cannot insert a nil etag to the invitation etag cache
v32@?0@"CaliTIPMessage"8@"NSString"16@"ICSEvent"24
INDIVIDUAL
GROUP
RESOURCE
ROOM
UNKNOWN
@"CoreDAVItem"12@?0i8
Unexpected parsing of calendar-user-address-set: %@
urn:uuid:
%@ <%@> (%@)
CalDiagNotificationCollectionSync
MobileCalDAVNotificationCalendar.m
Woah buddy- we shouldn't be setting a schedule tag on a notification item!
CalDiagNotificationSync
MobileCalDAVDelegateUserInfo   displayName: %@ allowWrite: %d, uid: %@, principalPath: %@
No main principal found in the account properties for "%@" (%{public}@). Creating a new one.
Upgrading principal URL from %@
New principal URL is %@
Upgrading account "%@" (%{public}@); stripping username "%@" from subcal URLs.
Stripping url: %@ -> %@
CalDAV URL in subscribed calendars for account %{public}@ wasn't actually a URL: %@
Updated CalDAV subscribed calendar key: %@ -> %@
Couldn't get path from URL on account %{public}@: %@
Adding %@calendar %p with url %@
Removing %@calendar %p at url %@
Removing calendar with url %@
Loaded calendar %p with URL %@
Ignoring calendar %d because it isn't a type we care about.
Caught an exception while trying to get the calendars for account %@: %@
Duplicate Calendar: [rowid=%i, title=%@, external_id=%@, external_mod_tag=%{public}@, external_id_tag=%{public}@, UUID=%{public}@, sync_token=%{public}@]
Duplicate calendar doesn't have a calendar ref!
Found %i duplicate calendars
Setting CalDAV server version to '%@' (currently '%@')
Updating calendar store and saving account properties since CalDAV server version changed
Could not parse the ics containing the default alarms. ICS: %@
Date based default alarms are not a thing. ICS: %@
Setting calendar store constraints plist path to '%@'
ACCOUNTDCOERROR Couldn't find an existing calendar store, so creating a new one.
Couldn't update the calendar store because one doesn't exist in the database
syncEndedWithError: called with an error while a sync is not in progress. Recording the error anyway. error = %@
Canceling MobileCalDAVAccount refresh for account "%@" (%{public}@)
CalDAV task manager has been shut down.
Couldn't get a calendar store to clear orphaned calendar item changes
Searching for orhpaned %@ changes
Found an orphaned calendar item change at index %ld
Found %ld orphaned calendar item changes
Couldn't get a calendar store to clear orphaned changes
Searching for orhpaned changes
Found an orphaned change at index %ld
Found %ld orphaned changes
Couldn't get a calendar store to clear orphaned store changes
Existing subscribed calendars are: %@
Subscribed calendar %p at %@ is dirty
Subscribed calendar has no URL so its properties cannot be saved: %@
Subscribed calendar at %@ was deleted
Subscribed calendars were modified. New calendars are %@
Principal %@ is dirty
Principal %@ was deleted.
Principals changed
Subscribed calendars changed
Saving accounts to update push information from an upgrade
Saving accounts to update push information
The refresh actor says we should save accounts
==== CalDAV refresh completed successfully (but some calendars failed to sync) for "%@" (%{public}@)
==== CalDAV refresh completed successfully for "%@" (%{public}@)
CalDAV refresh finished for account "%@" (%{public}@): Total sync time: %0.2f seconds. Number of downloaded items: %lu
Some calendars failed to sync. Keeping the migration flag around so that we attempt a merge sync the next time
Clearing migrated flag on the calendar store
==== CalDAV refresh FAILED for "%@" (%{public}@): %@. [Error Domain:%{public}@ Code:%{public}@]
Not saving our account properties because the refresh was canceled.
Saving our account properties
DataAccess has determined via a push notification that reminders need syncing. Telling remindd to sync account %{public}@
DataAccess has determined via a push notification that reminders need syncing, but cannot notify remindd because the necessary SPI is not available in this build.
Found a move for item %d from container %d
Ignoring move change for detached event %@
_addChange for move of calendarItem id %@, changeId %@ calendarItemIdsToMoveActions %@, calendarItemChangeIdsToClear %@
Clearing change index %d
Ignoring refresh request because we're already in the middle of a refresh
==== Beginning %@refresh for CalDAV account%@ "%@" (%@)
Our store has %lu items in it.
We're already refreshing or a refresh is pending, so we're going to ignore this refresh request.
No delegate user infos in updateDelegates for account with identifier: %{public}@
Updating delegates for account %{public}@
Failed to find child account with identifier %{public}@
Failed to get main principal path for child account with identifier %{public}@
Adding delegate account with principal path %@
Updating delegate account with principal path %@ and account ID %{public}@
Account properties changed for delegate account with principal path %@ and account ID %{public}@. Will save the account.
Failed to save ACAccount for delegate with principal path %@: %@
Updating DB properties for delegate account with principal path %@ and account ID %{public}@
DB properties changed for delegate account with principal path %@ and account ID %{public}@. Will save the DB.
Removing delegate account with identifier %{public}@
Delegate with account ID %@ was successfully removed
Delegate with account ID %@ failed to be removed
Finished updating delegates for account %{public}@
Search task %p was cancelled
CalDAV search query %p returning results
An unknown task just finished. What just happened? %@
Refusing to send out search query because the server doesn't support searching
CalDAV search query "%@" (%p) enqueuing
Dropping search query %@ because it is not the right type
cancelling search query %@
_reallyCancelAllSearchQueries is complete. All search queries have been cancelled.
DiscoveryTaskGroup %@ got account info %@ with error %@
Autodiscover called on account %@, but that account does not have a host set, and one could not be inferred from the username. Ignoring autodiscovery request
Autodiscover called on account %@, but that account does not have a host. Ignoring autodiscovery request
account %@ is checking validity with group %@ on behalf of %@
Dropping power assertion release for %@ since the retain count isn't positive
Principal configuration UID (%{public}@) doesn't match provided UID (%{public}@). Using the provided UID.
Asked to create a calendar of a type we don't know about: %d
Marking principal as dirty: %@
Asked to handle a trust challenge, but the account is gone. No point in continuing without an account, so we'll cancel.
Deleting calendar with uid %d
Couldn't find calendar with guid %@
Marking calendar "%@" as dirty.
Couldn't find a calendar with uid %@ to set the new guid on
Could not find a calendar to set a URL on
Empty calendar title received. Setting calendar title to %@. Calendar URL: %@
Updating sharee %@ to calendar "%@"
Removing sharee %@ from calendar "%@" 
Adding sharee %@ to calendar "%@"
Couldn't get a calendar for %@
Could not find a calendar that matched %@
Couldn't set url for the event %@ because it doesn't exist in our database
Couldn't set etag for the item at %@ because it doesn't exist in our database
Couldn't set schedule tag for the item at %@ because it doesn't exist in our database
Dropping server change for %@ on the floor because we have a move change for it
Dropping server change for %@ on the floor because we have a delete change for it
The event at %@ was modified locally. Forcing it to the server.
Saved resource from %@ to the database. Etag is %@
Removing event with url %@
Couldn't get a calendar item to remove with url %@
******Creating calendar with url %@ %{public}@
Could not get a calendar store. Cowardly refusing to create a calendar with UID %@
Merged calendar titled %@ with calDAV
Couldn't get a database ref. This isn't the time to create a calendar
Found a cached calendar uid (%d) for url %@ %@
Couldn't find calendar with url %@.
Could not find a calendar store with id %@
CalDatabaseCopyCalendarChangesInStore returned no changeTableIDs.
Got a change for calendar with UID %d, but couldn't find that calendar. Most likely it no longer exists. Ignoring change.
There's an change for calendar with guid %@ (UID %d) but it isn't in the cached calendars. Keeping the change for it until next time.
+gatherCalendarChangesInPrincipal %@: found %lu added calendars, %lu modified calendars, and %lu deleted calendars
+shouldSkipCalendar:withChangeType: Unexpected change type: %i
Could not find a calendar with that matched %@
Ignoring change of type %@ for change row id %d on item with uid %d because it's now in calendar %d and this is %d
Ignoring change of type %@ for change row id %d on item with uid %d because it is self organized with a client schedule agent
Ignoring change of type %@ for change row id %d on item with uid %d because it does not have a calendar
Adding change of type %@ for change row id %d on item with uid %d
Could not get an owning item with uid %d
Gathering added %@. Change index is %d
%ld added events found
%ld added tasks found
Gathering modified events. Change index is %d
Gathering modified tasks. Change index is %d
Gathering added recurrence split events. Change index is %d
%ld added recurrence split items found
Gathering deleted items. Change index is %d
Found a really interesting move. We're going to steal the filename from the move action: %@
Found a delete of the item at row %d (change row is %d) for filename %@
No filename exists for the deleted item with guid %@
Found an owning event: %d
The calendar store had a delete we don't have a mapping for: %d
Clearing change at index %d
Clearing %lu %{public}@ in %@
No %{public}@ to clear in %@
Clearing %@ changes at indices %@
Saving %@ changes at indices %@
Couldn't find an event ref for an added event: %@
Couldn't find split origin for event: %@
Encountered error %@ when putting item to %@
Received a 409 conflict for the event at %@. Creating a new UUID and trying again.
Marking calendar as dirty because we just received a 409 conflict error
Put of item at %@ succeeded without error
Clearing local changes for the item at %@
Saving local changes to try again later for the item at %@
Encountered error %@ when deleting item from %@
Delete of item at %@ succeeded without error
Clearing local delete change for item at %@
Keeping delete change to try again later for item at %@
Split action for item at URL %@ failed with error %@. Error appears to be transient; we will try again next time.
Split action for item at URL %@ failed with error %@. Clearing recurrence-set.
Unable to find the item we were trying to split with URL %@.
Could not get an owning sharee with uid %d
Gathering modified sharees; found %li modified sharees
Found a%@ for sharee %@
Skipping %@ for record %@ because we've already seen a delete for it
Couldn't get a URL for the deleted sharee at %d, so we're going to skip it
Sending up a delete for the item at URL %@
Couldn't get a URL for the delete of "%@"
Found %lu deleted items
Found %lu split items
Found %lu added items
Found %lu modified items
Found %lu deleted event actions
Creating a delete for the invitation at %@
Preparing merge sync actions...
Found %@ which exists on the server at %@
Found %@ which does not exist on the server
Skipping add for item %@ because it is self organized with a client schedule agent
Found %lu adds for our merge sync
Found %lu mods for our merge sync
DATransaction starting, ID: %@
Refresh actor starting up. (forced: %s)
CalDAV actor was told to cancel
There weren't any outstanding tasks, so we're going to call our cancel completion block now.
Refresh actor tearing down...
Checking if we should continue before transitioning from state %d
Ignoring calendar refresh task because we have no password.
Bailing out of refresh because we were told to cancel
Encountered an error while refreshing. Bailing out of the refresh. The error was %@
Waiting to make state transition from state %d with %lu outstanding task groups and %lu outstanding tasks
%@ refreshCalendarsOnly : begin
Refreshing properties for account with CoreDAV
Error refreshing properties for principal: %@
Properties were refreshed for principal "%@" on account "%@" (%{public}@)
Getting delegates for account with CoreDAV
%@: This server does not support delegates.
Error refreshing delegates for account "%@" (%{public}@): %@
Delegates were refreshed for account "%@" (%{public}@)
Missing calendar home; not trying to refresh calendar properties
Scheduling calendar refresh operation
Received 403 performing mkcalendar at %@. Going to retry with new URL of %@
Ignoring 403 performing mkcalendar because the URL already looks like one we generated.
Pausing calendar refresh before sending caledar deletes to send any outstanding moves we have
Clearing move change at index %d
Saving move change for next time at index %d
Error moving event from %@ to %@: %@
move task included new schedule tag %@ and/or new etag %@
No new etag included in move task; we'll need to PROPFIND to get it
Couldn't find a moved item in the database with id %d
Moved item with id %d has no external ID (%@) or couldn't construct full URL from it
Error propfinding after a move for item %i to URL %@: %@
Got new schedule tag %@ and/or new etag %@ in propfind after move for item %i
Got neither etag nor schedule tag in propind after move for item id %i to %@
Got neither an etag nor a schedule tag for item with ID %i
Couldn't get a calendar URL for the moved event %d
Couldn't find an owning calendar for a moved event (%d).
Moving an event that has an external id set. Preferring that external ID (%@) to the one tombstoned on the move record (%@)
Sending a move request from %@ to %@
The source and destination URLs are equal. This could happen if you moved an event twice. We're just going to pretend we didn't see that.
Can't move event because we don't have both a source URL and destination URL. source is null = %{BOOL}d, dest is null = %{BOOL}d
Couldn't find a calendar item with uid %d to process a move operation.
No paused property refresh operation to continue
Error refreshing calendar properties for account %{public}@ error %@
Calendars properties were refreshed for account "%@" (%{public}@)
Calendar properties were updated. Saving the database
Preparing sync actions for calendar "%@"
Calendar "%@" needs to be synced (needsResync: %d, hasSyncActions: %d, hasItemsToReportJunk: %d, hasRecurrenceSplitActions: %d, isMergeSync: %d, hadSyncError: %d)
Calendars to refresh in this sync are: %@
Unexpected number of items in duplicate pair: %lu
Calendar ref is NULL for original calendar "%@" with URL %@. Will not attempt to remove duplicate.
Calendar ref is NULL for duplicate calendar "%@" with URL %@. Will not attempt to remove duplicate.
No store when removing duplicate calendar with UID %i ("%@" with URL %@). Will not attempt to remove duplicate.
Removing duplicate calendar with rowid %i and title %@; clearing ctag and synctoken for original calendar
Event put to server during this sync appears to have been deleted. Original row id = %i. external_id = %@
Removing event with external_id %@ and row id %i because it has the same external ID as an event that was put and subsequently deleted during this sync. (Original row id = %i)
Moved item has been deleted, but that moved item didn't have a new external ID, so we won't amend the change table for it. (eventID = %i, uniqueIdentier = %@, oldExternalID = %@)
Skipping refresh of inbox because this server doesn't support automatic scheduling
Syncing calendars: %@
Starting a calendar sync for "%@"
Error refreshing the calendar at %@: %@
Hit a precondition error while performing a bulk upload of events. Attempting a resync of the calendar
Hit a precondition error on our second bulk upload attempt. Waiting a bit before retrying again
We've backed off for too long. We're just giving up for now.
Calendar "%@" requested a resync, so we're going to sync it again
Found %lu events with modified attachments
Couldn't find event with UID %i even though it had attachment changes. Maybe it was deleted?
No attachments to upload for event %i
event %i has attachments to upload, but no calendar, so there's nothing we can do about that.
event %i has attachments to upload, its calendar (%i) isn't being refreshed so we can't do that right now
Couldn't get a URL for event %i, so its attachments won't be uploaded
All attachments to upload for event %i are already pending upload
Uploading (%ld) attachments, owner url = %{public}@, sync key = %{public}@, schedule tag = %{public}@
Unable to load file data for attachment %i (%@) from path %@. (%@) Attachment will not be uploaded.
Attachment %i (%@) has no local URL and will not be uploaded.
Attachment %i has no filename and will not be uploaded.
Not actually uploading any attachments (gathered %lu attachments with %lu types)
Attachment upload %p complete for %lu attachments with error = %@
Could not get an event for completed attachment upload %p.
Could not get updated etag for completed attachment upload %p. Updated schedule tag = %{public}@
Setting updated etag and schedule tag if needed for event due to completed attachment upload %p, etag = %{public}@, schedule tag = %{public}@, event external id = %{public}@
Not downloading attachments because the account is requires opening attachment as link %{public}@, %{public}@
Unable to get store; won't be able to download attachments.
Unable to get attachments without local files; won't be able to download attachments.
Kicking off a download of attachment with uuid %{public}@
Calendar collections were refreshed for account "%@" (%{public}@)
Cleaning out old calendar items
Removing events older than %@
Removing preferred calendar user addresses for calendar no longer in local store (%{public}@)
Failed to get a store. Will not clean up preferred user addresses per calendar
Error clearing calendar changes for account "%@" (%{public}@)
CalDAV refresh task failed with error %@
Refresh actor %s. Invoking result callback
Dispatching result callback on the main queue...
Result sent to actor. No cancellation completion block was set, so we're done here.
Error downloading an attachment %{public}@: %@
Completed download of attachment %{public}@
Clearing %li leftover changes of type %{public}@ for %{public}@.
Removing detachment (ROWID = %d) with duplicate UID (%{public}@)
There were no local items for this first time sync, so we're not going to match anything locally
Adding or modifying event with guid %@
ICSEvent has %lu detached events
Setting %d as the original event for %d
%d is already the original event for %d
Encountered an unknown ICSComponent in the subcomponents for: %@
Could not create CalEvent for %@.
Could not find local CalDAV calendar %@ for the account "%@" (%{public}@). Refusing to add event.
Adding or modifying todo with guid %@
Could not create CalTask for %@.
Could not find local CalDAV calendar %@ for the account "%@" (%{public}@). Refusing to add todo.
Could not create an ICSDocument from the data from the server: %@. Data: %@
Processing component %@
Event %@ can't be found in the same store since we PUT it. Don't save it when syncing.
Event %@ changed calendars in the same store since we PUT it. Updating event on new calendar
The event %@ already exists locally, so we're going to update it regardless of its start time
Error adding or modifying event with uid %@
Not applying event at %@ because it is outside of our time filter
component passed to processComponent: is NULL or not ICSEvent
******Database unlock requested. Saving the database to give a higher priority app a chance
Couldn't create a calendar for the event with uid %@
Removing event %@
Removing todo %@
Couldn't set an etag for the event action with url %@
Handling iTIP message at %@
The invite at %@ doesn't have a UID. Ignoring it, but we'll download it again later.
Setting Etag %@ for ServerID %@ and inviteUID %@
Could not find a store in the database with uid %@
Removing item action with url %@
Couldn't get a calendar action item to remove with url %@
Removing notification item with url %@
Couldn't get a calendar notification to remove with url %@
Gathering deleted notifications. Found %lu
Sending up a delete for the notification at URL %@
softlink:r:path:/System/Library/PrivateFrameworks/ReminderKit.framework/ReminderKit
MobileCalDAVAccount
CDBAccountInfo
NSObject
DACalDAVAccount
MobileCalDAVPrincipal
CoreDAVAccountInfoProvider
CoreDAVOAuthInfoProvider
CalDAVPrincipal
MobileCalUserAddress
MobileCalDAVDeletedItemContext
MobileCalDAVCalendar
CalDAVCalendar
CDBRecordIDMap
CalNSStringEmailAddressAdditions
DASearch
CalDAVDBHelper
CalDAVHTTPTrafficLog
MobileCalDAVAttachmentUploadInfo
MobileCalDAVAccountRefreshActor
CalDAVAccountPropertyRefreshDelegate
CoreDAVTaskGroupDelegate
CalDAVCalendarPropertyRefreshDelegate
CalDAVCalendarSyncDelegate
CalDAVAccountDelegatesRefreshDelegate
MobileCalDAVAccountRefreshActorAttachmentDownloadDelegate
DAEventsAttachmentDownloadConsumer
CalDAVRefreshContext
CalDAVDBChangeTrackingHelper
DACalDAViCalItem
ICSDocumentParseDelegate
CoreDAVLeafDataPayload
DADataElement
CalDAVCalendarItemProtocol
MobileCalDAVInboxCalendar
MobileCalDAVSubscribedCalendar
CalDAVSubscribedCalendar
CalDAVPrincipalResult
CalDAVMove
MobileCalDAVNotificationCalendar
CalDAVAccountDelegatesRefreshOperation
ShareeConversion
MobileCalDAVPollCalendar
MobileCalDAVDelegateUserInfo
setMPrincipals:
mainPrincipal
setMainPrincipal:
objectForKeyedSubscript:
intValue
setIsWritable:
allKeys
countByEnumeratingWithState:objects:count:
valueForKey:
initWithConfiguration:principalUID:account:
mPrincipals
setObject:forKeyedSubscript:
isEqualToString:
backingAccountInfo
accountDescription
publicDescription
addPrincipal:
setWithArray:
initWithStringProperties:
setSearchPropertySet:
versionWithPropertyValue:
setServerVersion:
setNeedsAccountPropertyRefresh:
initWithBackingAccountInfo:
sharedLogger
registerWithiCalendar
registerDefaultLoggerWithCoreDAV
filenameWithBasename:
initWithFilename:
setCoreDAVLogger:
setSearchTaskSet:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
teardown
_setSpinning:
releasePowerAssertion
cancelTaskGroup
dealloc
accountIntPropertyForKey:
legacy_principalURL
setPrincipalURL:
principalURL
username
subscribedCalendars
count
dictionaryWithCapacity:
mutableCopy
SubCalSubscriptionURLKey
URLWithString:
password
user
da_urlByRemovingUsername
absoluteString
setSubscribedCalendars:
accountID
path
da_appendSlashIfNeeded
removeObjectForKey:
setAccountIntProperty:forKey:
saveModifiedPropertiesOnBackingAccount
upgradeAccount
CalDAVSubscribedCalendarsKey
isEqualToDictionary:
setSubscribedCalendarsChanged:
calendarUserAddresses
allObjects
preferredCalendarUserAddresses
preferredAddress:
setParentAccount:
host
setHost:
setAuthenticationType:
boolValue
numberWithBool:
overriddenServer
overriddenPort
numberWithInt:
overriddenScheme
principalPath
setPrincipalPath:
hasPrefix:
scheme
port
stringWithFormat:
setUseSSL:
integerValue
setPort:
setShouldDoInitialAutodiscovery:
saveAccountProperties
setAccountDescription:
_updateCalendarStore:
searchPropertySet
stringProperties
compare:
sortedArrayUsingSelector:
copyCalStore
isSubscribed
calendarURLString
properties
calendars
addObject:
deleteCalendar
removeObject:
copy
calendarURL
removeCalendar:
mCalendars
sharedInstance
changeTrackingID
calOpenDatabaseForAccountID:clientID:
objectAtIndexedSubscript:
calendarWithCalCalendar:principal:
hasSuffix:
stringByAppendingString:
_foundDuplicateCalendar:ofCalendar:
setMCalendars:
calCloseDatabaseForAccountID:save:
_foundDuplicateCalendars:
calCalendar
_logDuplicateCalendarDetails:
arrayWithObjects:count:
setAccount:
configuration
serverVersion
isEqual:
propertyValue
supportsTimeRangeFilter
preferredEventDaysToSync
shouldFilterEventSyncTimeRange
supportsTimeRangeFilterOnInbox
calDAVRemindersForAll
type
supportedCalendarComponentSets
allowedCalendars:contains:
initWithAccount:
supportsCalendarHomeSync
alwaysUseCalendarHomeSync
calRefreshInterval
setCalRefreshInterval:
calPushDisabled
setCalPushDisabled:
supportsTimeRangeFilterWithoutEndDate
supportsAutoSchedule
supportsPrivateComments
calDatabaseForAccountID:
calendarHomeSyncToken
isDelegateAccount
fullName
length
parseableDocumentFromICS:
calendar
components
trigger
isDurationBased
value
timeInterval
persistentUUID
_calendarConstraintsName
supportsReminders
isEnabledForDataclass:
supportsEvents
canCreateCalendars
supportsSharing
supportsPrivateEvents
isDelegate
parentAccount
identifier
supportsFreebusy
supportsInboxAvailability
supportsCalendarAudit
supportsTelephone
supportsManagedAttachments
requiresOpeningAttachmentAsLink
shouldUseDeleteAndAddInsteadOfMoveBetweenCalendars
supportsCalendarProxy
isWritable
supportsSubscriptionCalendars
supportsManagedSubscriptionCalendars
supportsSubscriptionMirroring
supportsParticipantRoles
accountType
supportsCalendarRecurrenceSplit
supportsPush
alarmsDirty
defaultTimedAlarms
defaultAlarmOffsetFromICSString:
defaultAllDayAlarms
setAlarmsDirty:
externalInfoDictionary
updatePropertiesFromCalStore:
_updateCalendarStoreProperties:
refreshContext
setIsDisabledAccount:
_updateCalendarStoreWithAlreadyOpenDBShouldCreate:syncingThisAccount:
numberWithInteger:
useSSL
dictionaryWithObjects:forKeys:count:
emailAddresses
preferredAddress
isSpinning
setIsSpinning:
syncStartedForStoreWithExternalID:
syncEndedForStoreWithExternalID:withError:
shutdown
actor
cancelWithCompletion:
containsObject:
setShouldSave:
_clearOrphanedCalendarItemChangesOfType:withContext:goodCalendarIds:
_clearOrphanedChangesWithChangesCall:entityType:withContext:
isDirty
principals
allValues
_saveModifiedPrincipalsOnBackingAccount
isRefreshing
subscribedCalendarsChanged
APSTopic
setSupportsPush:
shouldUpdatePushDelegate
setShouldUpdatePushDelegate:
_saveModifiedSubscribedCalendarsOnBackingAccount
context
shouldSaveAccounts
wasMigrated
calendarFailedToSync
startTime
numDownloadedElements
isCalendarsOnly
setWasMigrated:
domain
code
flushCaches
isDisabledAccount
_clearOrphanedChangesWithContext:
changeTracker
clearUnconsumedAndUnsavedChanges
shouldSave
calSaveDatabaseForAccountID:
setIsDirty:
setCalendarsAreDirty:
mItemIDsToMoveActions
removeAllObjects
mMovedItemURLStrings
setRefreshContext:
setIsRefreshing:
setActor:
wasDueToPush
needsRemindersSync
triggerSyncForDataAccessAccountsWithAccountIDs:
instancesRespondToSelector:
initWithSourceCalendarID:itemID:oldExternalID:changeID:objectType:uniqueIdentifier:
setMItemIDsToMoveActions:
setMMovedItemURLStrings:
_collectActionsFromMoveDictionary:forDataclass:outShouldSave:
addEntriesFromDictionary:
oldExternalID
enumerateKeysAndObjectsUsingBlock:
setStartTime:
setLocalItems:
_collectMoveActions
setIsCalendarsOnly:
localItems
retainPowerAssertion
initWithAccount:context:
refresh
delegateUserInfos
childAccountsWithAccountTypeIdentifier:
childAccountWithIdentifier:
accountPropertyForKey:
accountTypeWithAccountTypeIdentifier:
initWithAccountType:
setActive:
_setParentAccount:
setIsDelegateAccount:
allowWrite
setIsDelegate:
displayName
setFullName:
setCanCreateCalendars:
setDelegatePrincipalPath:
saveAccountPropertiesWithError:
addObjectsFromArray:
removeAccount:withDeleteSync:completion:
searchContext
consumerForTask:
array
multiStatus
responses
resultFromResponse:
convertToDAContactSearchResultElement
searchQuery:returnedResults:
searchQuery:finishedWithError:
searchTaskSet
removeConsumerForTask:
supportsPropertySearch
supportsWellKnownType:
consumer
errorWithDomain:code:userInfo:
searchString
setShouldUseOpportunisticSockets:
setWithObject:
collectionSetURL
initWithSearchStrings:searchTypes:serverSupportSet:atURL:
setDelegate:
setAccountInfoProvider:
setSearchContext:
taskManager
submitIndependentCoreDAVTask:
setConsumer:forTask:
cancelTask:
checkValidityTaskGroup
shouldDoInitialAutodiscovery
setUsername:
serverHeaders
versionWithHTTPHeaders:
retryDiscoveryTask:
account:isValid:validationError:
setCheckValidityTaskGroup:
arrayWithObjects:
insertObject:atIndex:
cdvArrayWithIntegers:
portListByInsertingUserEnteredPort:
performDiscoveryWithHostname:username:consumer:
resemblesEmailAddress
hostFromEmail
userFromEmail
wellKnownPaths
httpPorts
httpsPorts
initWithAccountInfoProvider:taskManager:httpPorts:httpsPorts:httpServiceString:httpsServiceString:wellKnownPaths:requiredComplianceClass:
setTimeoutInterval:
startTaskGroup
sharedPowerAssertionManager
_powerAssertionContext
_powerAssertionGroupIdentifier
retainPowerAssertion:withGroupIdentifier:
powerAssertionRetainCount:
releasePowerAssertion:
dropPowerAssertionsForGroupIdentifier:
reattainPowerAssertionsForGroupIdentifier:
delegatePrincipalPath
accountHasSignificantPropertyChangesWithChangeInfo:
oldAccountProperties
setCalendarHomeSyncToken:
bundleForClass:
localizedStringForKey:value:table:
sharedLogging
addLogDelegate:forAccountInfoProvider:
removeLogDelegate:forAccountInfoProvider:
enabled
coreDAVLogger
logSnippet:
calendarUserAddressIsEquivalentToURL:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
addressIsAccountOwner:
T@"<CalDAVPrincipal>",&,N
T@"NSDictionary",&,N
ingestBackingAccountInfoProperties
init
movedItemURLStrings
itemIDsToMoveActions
useKerberos
setUseKerberos:
setOverriddenServer:
setOverriddenPort:
setOverriddenScheme:
serverBaseURL
noteHomeSetOnDifferentHost:
setCollectionSetURL:
addCalendar:
removeCalendarWithURL:
duplicateCalendars
reloadCalendars
removePrincipal:
viewedTimeZone
shouldFilterSyncTimeRangeForInbox
shouldUseCalendarHomeSyncReport
refreshInterval
setRefreshInterval:
pushDisabled
setPushDisabled:
spinnerIdentifiers
syncStarted
syncEndedWithError:
cancelRefreshWithCompletion:
refreshActor:didCompleteWithError:
refreshWithContext:
updateDelegates
task:didFinishWithError:
_reallyPerformSearchQuery:
_reallyCancelSearchQuery:
_reallyCancelAllSearchQueries
_reallySearchQueriesRunning
discoveryTask:gotAccountInfo:error:
discoverInitialPropertiesWithConsumer:
dropPowerAssertions
reattainPowerAssertions
isCalDAVAccount
isEqualToAccount:
calendarsDataclassModified
localizedIdenticalAccountFailureMessage
localizedInvalidPasswordMessage
onBehalfOfBundleIdentifier
addToCoreDAVLoggingDelegates
removeFromCoreDAVLoggingDelegates
logHandle
shouldLogTransmittedData
coreDAVLogTransmittedDataPartial:
coreDAVTransmittedDataFinished
setPreferredEventDaysToSync:
preferredToDoDaysToSync
setPreferredToDoDaysToSync:
setDelegateUserInfos:
needsAccountPropertyRefresh
searchQueriesShouldCancel
setSearchQueriesShouldCancel:
.cxx_destruct
_wasMigrated
_principals
_itemIDsToMoveActions
_mMovedItemURLStrings
_calendars
_duplicateCalendars
_serverVersion
_usernameForDiscovery
_hostForDiscovery
_syncInProgress
_needsAccountPropertyRefresh
_isRefreshing
_searchQueriesShouldCancel
_isSpinning
_subscribedCalendarsChanged
_preferredEventDaysToSync
_preferredToDoDaysToSync
_movedItemURLStrings
_mainPrincipal
_delegateUserInfos
_searchPropertySet
_refreshContext
_checkValidityTaskGroup
_actor
_searchTaskSet
_coreDAVLogger
T@"CoreDAVDiscoveryTaskGroup",&,N,V_checkValidityTaskGroup
T@"MobileCalDAVAccountRefreshActor",&,N,V_actor
TB,N,V_isSpinning
T@"NSMutableSet",&,N,V_searchTaskSet
T@"DACoreDAVLogger",&,N,V_coreDAVLogger
T@"NSMutableDictionary",&,N,V_principals
T@"NSMutableDictionary",&,N,V_itemIDsToMoveActions
T@"NSMutableSet",&,N,V_movedItemURLStrings
T@"NSMutableSet",&,N,V_calendars
TB,N,V_subscribedCalendarsChanged
T@"MobileCalDAVPrincipal<CalDAVPrincipal>",&,N,V_mainPrincipal
T@"NSDictionary",R,N
T@"NSDictionary",&,N,V_delegateUserInfos
T@"DACoreDAVTaskManager",R,N
T@"NSURL",&,N
T@"CalDAVPrincipalSearchPropertySet",&,N,V_searchPropertySet
T@"NSString",&,N
Ti,N
Td,N
TB,N
TB,N,V_needsAccountPropertyRefresh
TB,N,V_isRefreshing
T@"NSSet",R,N
T@"NSString",C,N
T@"CalDAVServerVersion",&,N,V_serverVersion
Ti,N,V_preferredEventDaysToSync
Ti,N,V_preferredToDoDaysToSync
T@"NSTimeZone",R,N
TB,R,N
T@"CalDAVRefreshContext",&,N,V_refreshContext
T@"NSURL",R,N
T@"NSArray",R,N
TB,N,V_searchQueriesShouldCancel
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
compareAddressURL:localString:
da_newGUID
unpackCalDAVUserAdress:
enumerateObjectsUsingBlock:
initWithIdentifier:
setObject:forKey:
packCalDAVUserAdress:
calendarHomeURL
defaultCalendarURL
notificationCollectionURL
notificationCollectionCTag
inboxURL
inboxCTag
outboxURL
dropBoxURL
notificationURLString
pushTransports
calendarHomePushKey
isEnabled
isExpandPropertyReportSupported
supportsCalendarUserSearch
supportsSyncToken
quotaFreeBytes
account
address
da_isEqualToDAVURL:
preferred
_userAddressSet:isEqualToSet:
setPreferredCalendarUserAddress:
setPreferredCalendarEmailAddress:
setPreferredCalendarPhoneNumber:
daAccount
addUsernameToURL:
da_urlBySettingPath:
supportsExtendedCalendarQuery
initWithCalendarIdentifier:
timeZoneWithName:
setTimeZone:
date
dateWithTimeInterval:sinceDate:
components:fromDate:
setDay:
dateByAddingComponents:toDate:options:
_startDateFromDaysToSync:
_eventSyncEndDate
createNoneAlarm
setX_apple_default_alarm:
initWithWeeks:days:hours:minutes:seconds:
initWithDuration:
setTrigger:
actionFromICSString:
setAction:
makeUID
setUid:
ICSStringWithOptions:
alarmICSStringFromOffset:
deletedCalendarURLs
setDeletedCalendarURLs:
guid
gatherCalendarChangesInPrincipal:calendars:adds:modifies:deletes:changeTracker:
updateAddedOrModifiedSubscribedCalendars:
calendarChangesToClear
setCalendarChangesToClear:
setAddedCalendars:
setModifiedCalendars:
da_absoluteURLForChildLeastInfoRepresentationRelativeToParentURL:
updatePropertiesFromCalCalendar
clearCalendarChanges:forPrincipal:changeTrackingClient:
initWithCalendarURL:principal:
initWithCalendarURL:calendar:properties:principal:
objectForKey:
calendarUserAddressesPerCalendar
uppercaseString
preferredCalendarUserAddress
resourceSpecifier
da_removeSlashIfNeeded
lowercaseString
identityPersist
additionalHeaderValues
customConnectionProperties
oauth2Token
isValidating
dropAssertionsAndRenewCredentialsInQueue:withHandler:
clientToken
clientTokenRequestedByServer
webLoginRequestedAtURL:reasonString:inQueue:completionBlock:
handleTrustChallenge:completionHandler:
shouldFailAllTasks
copyStorageSession
shouldSendClientInfoHeaderForURL:
compressRequests
supportsRequestCompression
shouldUseOpportunisticSockets
statusReport
noteSuccessfulRequestWithNumDownloadedElements:numUploadedElements:
noteFailedNetworkRequest
noteFailedProtocolRequest
noteTimeSpentInNetworking:
serverRoot
serverComplianceClasses
userAgentHeader
promptUserForNewCoreDAVPasswordWithCompletionBlock:
handleCertificateError:
clientCertificateInfoProvider
oauthInfoProvider
handleAuthenticateAgainstProtectionSpace:
shouldRetryUnauthorizedTask:
handleShouldUseCredentialStorage
shouldHandleHTTPCookiesForURL:
shouldTurnModalOnBadPassword
shouldTryRenewingCredential
renewCredential
noteSuccessfulRequestWithNumDownloadedElements:forTask:
noteFailedNetworkRequestForTask:
noteFailedProtocolRequestForTask:
noteTimeSpentInNetworking:forTask:
noteSuccessfulRequestWithNumDownloadedElements:
shouldCompressRequests
getAppleIDSession
newOAuth1CredentialForChallenge:
oauthVariant
calendarOfType:atURL:withOptions:
removecalendarWithURL:
setPreferredCalendarUserAddresses:
setCalendarHomeURL:
setDefaultCalendarURL:
setNotificationCollectionURL:
setNotificationCollectionCTag:
setInboxURL:
setInboxCTag:
setOutboxURL:
setDropBoxURL:
setNotificationURLString:
setPushTransports:
setCalendarHomePushKey:
setQuotaFreeBytes:
setSupportedCalendarComponentSets:
setIsEnabled:
isMergeSync
isEnabledForEvents
isEnabledForTodos
eventFilterStartDate
eventFilterEndDate
setIsExpandPropertyReportSupported:
setSupportsFreebusy:
setSupportsCalendarUserSearch:
addedCalendars
modifiedCalendars
prepareCalendarsForSyncWithCompletionBlock:
defaultEventCalendarTitle
defaultTodoCalendarTitle
setDefaultTimedAlarms:
setDefaultAllDayAlarms:
needsDefaultTimedAlarmUpdate
setNeedsDefaultTimedAlarmUpdate:
needsDefaultAllDayAlarmUpdate
setNeedsDefaultAllDayAlarmUpdate:
T@"NSString",R,N
T@"<CalDAVAccount>",R,N
T@"<CoreDAVTaskManager>",R,N
T@"NSSet",&,N
T@"NSNumber",&,N
T@"NSDateComponents",R,N
subCalPropertiesByURL
setSupportsSyncToken:
clearCalendarChanges
preferredCalendarUserAddressesForCalendar:
removePreferredCalendarUserAddressesForCalendarWithIdentifier:
setPreferredCalendarUserAddresses:forCalendar:
calendarsAreDirty
APSSubscriptionURL
APSEnv
preferredCalendarEmailAddress
preferredCalendarPhoneNumber
hasCalendarUserAddress:
isManuallyConfigured
setIsManuallyConfigured:
shouldRefreshPrincipalSearchProperties
setShouldRefreshPrincipalSearchProperties:
setLegacy_principalURL:
appleIDSession
setAppleIDSession:
_calendarUserAddressesPerCalendar
_calendarsAreDirty
_needsDefaultTimedAlarmUpdate
_needsDefaultAllDayAlarmUpdate
_alarmsDirty
_isDelegate
_isWritable
_isEnabled
_canCreateCalendars
_isManuallyConfigured
_isExpandPropertyReportSupported
_supportsCalendarUserSearch
_supportsFreebusy
_supportsSyncToken
_supportsPush
_shouldRefreshPrincipalSearchProperties
_shouldUpdatePushDelegate
_isDirty
_calendarHomeURL
_deletedCalendarURLs
_notificationCollectionURL
_notificationCollectionCTag
_inboxURL
_outboxURL
_dropBoxURL
_defaultCalendarURL
_defaultTimedAlarms
_defaultAllDayAlarms
_uid
_account
_preferredCalendarUserAddresses
_fullName
_principalPath
_inboxCTag
_notificationURLString
_pushTransports
_calendarHomePushKey
_quotaFreeBytes
_supportedCalendarComponentSets
_preferredCalendarUserAddress
_preferredCalendarEmailAddress
_preferredCalendarPhoneNumber
_addedCalendars
_modifiedCalendars
_calendarChangesToClear
_legacy_principalURL
_appleIDSession
T@"NSString",&,N,V_uid
T@"<CalDAVAccount>",W,N,V_account
T@"MobileCalDAVAccount",R,N
T@"NSURL",&,N,V_preferredCalendarUserAddress
T@"NSString",&,N,V_preferredCalendarEmailAddress
T@"NSString",&,N,V_preferredCalendarPhoneNumber
T@"NSMutableSet",&,N,V_deletedCalendarURLs
T@"NSSet",&,N,V_addedCalendars
T@"NSSet",&,N,V_modifiedCalendars
T@"NSArray",&,N,V_calendarChangesToClear
T@"NSURL",&,N,V_legacy_principalURL
T@"AKAppleIDSession",&,N,V_appleIDSession
T@"NSSet",&,N,V_preferredCalendarUserAddresses
T@"NSString",&,N,V_fullName
T@"NSURL",&,N,V_calendarHomeURL
T@"NSString",&,N,V_principalPath
T@"NSURL",&,N,V_defaultCalendarURL
T@"NSURL",&,N,V_notificationCollectionURL
T@"NSString",&,N,V_notificationCollectionCTag
T@"NSURL",&,N,V_inboxURL
T@"NSString",&,N,V_inboxCTag
T@"NSURL",&,N,V_outboxURL
T@"NSURL",&,N,V_dropBoxURL
T@"NSString",&,N,V_notificationURLString
T@"NSDictionary",&,N,V_pushTransports
T@"NSString",&,N,V_calendarHomePushKey
T@"NSNumber",&,N,V_quotaFreeBytes
T@"NSString",&,N,V_supportedCalendarComponentSets
TB,N,V_isDelegate
TB,N,V_isWritable
TB,N,V_isEnabled
TB,N,V_canCreateCalendars
TB,N,V_isManuallyConfigured
TB,N,V_isExpandPropertyReportSupported
TB,N,V_supportsCalendarUserSearch
TB,N,V_supportsFreebusy
TB,N,V_supportsSyncToken
TB,N,V_supportsPush
T@"NSString",&,N,V_defaultTimedAlarms
T@"NSString",&,N,V_defaultAllDayAlarms
TB,N,V_shouldRefreshPrincipalSearchProperties
TB,N,V_shouldUpdatePushDelegate
TB,N,V_isDirty
TB,N,V_calendarsAreDirty
TB,N,V_alarmsDirty
TB,N,V_needsDefaultTimedAlarmUpdate
TB,N,V_needsDefaultAllDayAlarmUpdate
setAddress:
initWithAddress:account:
setValue:forKey:
userAddress:forAccount:
userAddressFromDictionaryRepresentation:forAccount:
dictionaryRepresentation
_address
T@"NSURL",C,N,V_address
T@"MobileCalDAVAccount",W,N,V_account
rowid
setRowid:
entityType
setEntityType:
_entityType
_rowid
T@"NSNumber",&,N,V_rowid
Ti,N,V_entityType
initWithCalendarURL:calendar:principal:title:
setPrincipal:
principal
da_leastInfoStringRepresentationRelativeToParentURL:
defaultCenter
_dropCalStoreContext
addObserver:selector:name:object:
getCalCalendar
initCalCalendarWithTitle:
_updateCalendarInfo
setGuid:
cacheCalendarUID:forCalendarURLString:
setUniqueIdentifierToRecordIDMap:
setURLToRecordIDMap:
setURLToEtagMap:
calURLToUIDCache
title
removeUIDCacheEntryForCalendarURLString:
setCalendarURLString:
isEventContainer
_setSupportsEvents:supportsTodos:
isTaskContainer
notes
pushKey
bulkRequests
owner
canBePublished
canBeShared
isFamilyCalendar
isMarkedUndeletable
isMarkedImmutableSharees
maxAttendees
isPublished
isAffectingAvailability
publishURL
ownerDisplayName
_preferredAddress
daPrincipal
systemTimeZone
order
sharingStatus
supportsSharingNoScheduling
acceptedURL
href
payloadAsFullURL
updateCalSharee:
commonName
payloadAsString
createCalShareeInDatabase:andCalendar:
initWithCalSharee:
isEditable
isRenameable
isForced
ctag
syncToken
recordIDForUniqueIdentifier:
setUniqueIdentifier:forRecordID:
uniqueIdentifierToRecordIDMap
URLToRecordIDMap
_copyCalItemWithUniqueIdentifier:inCalendar:orStore:
syncActions
action
uniqueIdentifier
setServerID:
_copyCalItemWithExternalID:
serverID
_isDeleted:
saveToContainer:shouldMergeProperties:outMergeDidChooseLocalProperties:account:mobileCalendar:outRecurrenceSets:
unionSet:
document
componentKeys
componentForKey:
summary
setTitle:
scheduleTag
setScheduleTag:
syncKey
setSyncKey:
dataPayload
setDownloadedData:
setEtag:forItemAtURL:
setNumDownloadedElements:
calSaveDatabaseAndFlushCachesForAccountID:
calendarCollectionSyncDiagnostics
addCalendarItemSync:
correctLocationPredictionStateForRecurrenceSets:calDB:
copyDeletedItems
_removeCalendarItemWithURL:
mustCalendarBeReadOnly
shouldCalendarBeHidden
isScheduleInbox
isNotification
ownerEmailAddress
ownerPhoneNumber
callStackSymbols
cachedCalendarUIDForURLString:
removeObserver:name:object:
propertyListFromData:mutabilityOption:format:errorDescription:
shouldSkipAddedCalendar:
processAddedCalendar:
shouldSkipCalendar:withChangeType:
processModifiedCalendar:oldFlags:newFlags:
saveChange:forEntityType:
shouldSkipModifiedCalendar:
setNeedsPublishUpdate:
setWasModifiedLocally:
setNeedsIsAffectingAvailabilityUpdate:
initWithCalRecord:inContainer:accountID:
clientID
addChangeOfType:forChangeRowid:
_addCalendarItemWithRowID:toArrayIfNeeded:withChangeRowid:changeType:
_addAddedItemsOfType:toArray:
_gatherModifiedItemsFromCalChangesCall:forType:inArray:
_gatherModifiedTasksInArray:
_gatherModifiedEventsInArray:
null
_addAddedRecurrenceSplitItemsToArray:
_itemPropertyDictForItemAtIndex:withChangedIDs:withChangedRowids:withExternalIDs:uniqueIdentifiers:significantAttributeChanges:oldCalendarIDs:entityType:
_gatherDeletedChanges:inDictionary:
dictionary
addChangesToBeCleared:forEntityType:
clearChangesForEntityType:
setDeletedCalendarItems:
DACompactDescription
longValue
_clearChangesFromItem:shouldClearAttachmentChanges:
originatingChangeItems
_clearChangesAtIndices:forType:
_saveChangesAtIndices:forType:
calItem
_isItemJunk:
_clearChangesFromItem:
sortedArrayUsingComparator:
initWithTimeIntervalSinceReferenceDate:
initWithResourceURL:recurrenceDate:uidForCreatedSeries:floating:allday:
setOriginatingChangeItems:
prohibitLocalCreationOfServerID
filename
URLByAppendingPathComponent:
initWithAction:context:
_clearExistingHTTPErrorForCalItem:
_shouldRecordError:
cal_serializableError
hasCalendarErrorOfType:
numUploadedElements
setNumUploadedElements:
_recordError:forCalItem:
_forceRefreshNextSync
_saveChangesForItem:
resourceURL
setScheduleTag:forItemAtURL:
uidForCreatedSeries
setURL:forResourceWithUUID:
_collectShareeActions
setShareeActions:
_addShareeWithRowID:toDictionaryIfNeeded:
stringAddingMailto
initWithHREF:commonName:inviteStatus:access:
createSyncActions
generateICSForActions
copyRecurrenseSplitItems
_recurrenceSplitActionsForItems:alreadySentItems:
recurrenceDate
copyAddedItems
_createActionsForItems:withAction:alreadySentItems:createServerIDs:shouldSave:
minusSet:
copyModifiedItems
setProhibitLocalCreationOfServerID:
_resourceURLsForJunkItemsInModifiedItems:alreadySentItems:
statusChanged
invitationStatusCleared
removeInvitationsForItemWithUniqueIdentifier:
_copyDeletedEventActions
cacheDataPayload
copyAllItems
loadLocalItemWithAccount:
setIsMigrate:
setUuidsToAddActions:
setHrefsToModDeleteActions:
addCalendarCollectionSync:
URLToEtagMap
setSyncActions:
clearCalendarUIDCache
clearCalendarErrorOfType:
recordCalendarError:ofType:
setCalendarTitle:
setCalendarExternalIdentifier:
etagsForItemURLs:
updateResourcesFromServer:
deleteResourcesAtURLs:
hasCalendarUserAddressEquivalentToURL:
setCalendarURL:
setNotes:
color
setColor:
symbolicColorName
setSymbolicColorName:
setPushKey:
setOwner:
setOwnerDisplayName:
setPublishURL:
prePublishURL
setPrePublishURL:
timeZone
setBulkRequests:
setOrder:
setSharingStatus:
sharees
setSharees:
setIsTaskContainer:
setIsEventContainer:
setIsSubscribed:
isManagedByServer
setIsManagedByServer:
setIsScheduleInbox:
isScheduleOutbox
setIsScheduleOutbox:
setIsNotification:
isPoll
setIsPoll:
setIsEditable:
setIsRenameable:
setIsPublished:
setIsAffectingAvailability:
setCanBePublished:
setCanBeShared:
setIsFamilyCalendar:
setIsMarkedUndeletable:
setIsMarkedImmutableSharees:
wasModifiedLocally
needsResync
setNeedsResync:
setCtag:
setSyncToken:
needsPublishUpdate
shareeActions
itemsToReportAsJunk
uuidsToAddActions
hrefsToModDeleteActions
allItemURLs
appSpecificCalendarItemClass
prepareMergeSyncActionsWithCompletionBlock:
clearShareeActions
syncDidFinishWithError:
putAction:completedWithError:
deleteAction:completedWithError:
recurrenceSplitAction:completedWithUpdatedETag:updatedScheduleTag:createdURL:createdETag:createdScheduleTag:
recurrenceSplitAction:failedWithError:
recurrenceSplitActionsCompletedWithError:
recurrenceSplitActions
setMaxAttendees:
needsIsAffectingAvailabilityUpdate
lastSyncTitle
setLastSyncTitle:
T@"<CalDAVPrincipal>",R,N
T@"NSTimeZone",&,N
Tq,N
setExternalIdentifier:forRecordID:
recordIDForExternalIdentifier:
initWithCalendarURL:principal:title:
hasEvents
isHidden
displayColor
newlyAddedItems
setNewlyAddedItems:
_calExternalRep
clearEventChanges
prepareSyncActionsWithCompletionBlock:
recordDiagnosticsForAccountSync:
didResync
setDidResync:
setChangeTracker:
setCalendarCollectionSyncDiagnostics:
deletedCalendarItems
setItemsToReportAsJunk:
setRecurrenceSplitActions:
_principal
_calCalendar
_changesToClear
_deletedExternalIDs
_calendarURLString
_newlyAddedItems
_isScheduleOutbox
_wasModifiedLocally
_needsResync
_didResync
_needsPublishUpdate
_needsIsAffectingAvailabilityUpdate
_guid
_lastSyncTitle
_numDownloadedElements
_numUploadedElements
_changeTracker
_calendarCollectionSyncDiagnostics
_deletedCalendarItems
_syncActions
_shareeActions
_itemsToReportAsJunk
_recurrenceSplitActions
_hrefsToModDeleteActions
_uuidsToAddActions
_uniqueIdentifierToRecordIDMap
_URLToRecordIDMap
_URLToEtagMap
T@"MobileCalDAVPrincipal",R,N
T@"CalDiagCalendarCollectionSync",&,N,V_calendarCollectionSyncDiagnostics
T@"<CalDAVPrincipal>",W,N
T^v,R,N
T@"NSString",&,N,V_calendarURLString
T@"NSMutableDictionary",&,N,V_deletedCalendarItems
T@"NSArray",&,N,V_syncActions
T@"NSArray",&,N,V_shareeActions
T@"NSArray",&,N,V_itemsToReportAsJunk
T@"NSArray",&,N,V_recurrenceSplitActions
T@"NSDictionary",&,N,V_hrefsToModDeleteActions
T@"NSDictionary",&,N,V_uuidsToAddActions
T@"NSMutableDictionary",&,N,V_uniqueIdentifierToRecordIDMap
T@"NSMutableDictionary",&,N,V_URLToRecordIDMap
T@"NSMutableDictionary",&,N,V_URLToEtagMap
T@"NSString",&,N,V_guid
T@"NSString",&,N,V_lastSyncTitle
TB,N,V_isScheduleOutbox
TB,N,V_wasModifiedLocally
TB,N,V_needsResync
TB,N,V_didResync
TB,N,V_needsPublishUpdate
TQ,N,V_numDownloadedElements
TQ,N,V_numUploadedElements
T@"CalDAVDBChangeTrackingHelper",&,N,V_changeTracker
T@"NSArray",&,N
TB,N,V_needsIsAffectingAvailabilityUpdate
substringFromIndex:
initWithFormat:
defaultManager
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
stringByExpandingTildeInPath
isWritableFileAtPath:
stringByDeletingLastPathComponent
da_hasPrefixCaseInsensitive:
rangeOfString:
rangeOfString:options:range:
hasMailto
stringRemovingMailto
firstName
setFirstName:
lastName
setLastName:
setDisplayName:
emailAddress
setEmailAddress:
preferredCUAddress
setPreferredUserAddress:
cuAddresses
setCuAddresses:
preferredUserAddress
setIdentifierOnServer:
sharedInstanceForAccountType:creatingClass:
setCurLogger:
curLogger
dataUsingEncoding:
initWithFormat:arguments:
logString:
instance
finishSnippets
logStringWithFormat:
logData:
_curLogger
T@"DACoreDAVLogger",&,N,V_curLogger
itemURL
setItemURL:
calAttachmentsToUpload
setCalAttachmentsToUpload:
_itemURL
_syncKey
_scheduleTag
_calAttachmentsToUpload
T@"NSURL",&,N,V_itemURL
T@"NSString",&,N,V_syncKey
T@"NSString",&,N,V_scheduleTag
T@"NSArray",&,N,V_calAttachmentsToUpload
transactionId
setContext:
setOutstandingTaskGroups:
setOutstandingTasks:
setOutstandingOperationGroup:
outstandingTaskGroups
outstandingTasks
initWithDomain:code:userInfo:
finishEarlyWithError:
setShouldCancel:
state
setCompletionBlock:
_teardownAllOutstandingOperations
completionBlock
setError:
_sendResultToAccount
shouldCancel
error
_refreshShouldContinue
setState:
_refreshCalendarProperties
_refreshDelegateAccountProperties
_sendMoveTasks
_continuePrincipalRefresh
_gatherAttachmentChanges
_refreshRegularCalendars
_uploadAttachments
_refreshSpecialCalendars
enableAutomaticAttachmentDownloads
_downloadAttachments
_calendarCollectionsWereRefreshed
outstandingOperationGroup
sharedRunLoop
getCFRunLoop
refreshing
setRefreshing:
_refreshAccountProperties
_waitForStateTransition
initWithPrincipal:
setFetchPrincipalSearchProperties:
refreshProperties
setShouldSaveAccounts:
setMdelegate:
refreshDelegates
setUseCalendarHomeSyncReport:
refreshCalendarProperties
lastPathComponent
UUID
UUIDString
CDVURLByDeletingLastPathComponent
CDVfixedURLByAppendingPathComponent:
_sendMoveForItem:
changeID
objectType
destinationURL
responseHeaders
CDVObjectForKeyCaseInsensitive:
itemID
_finishMoveForItemWithID:withEtag:scheduleTag:
_propFindForNewEtagFollowingMoveOfItem:
_clearMoveChange:
_saveMoveChange:
initWithNameSpace:name:parseClass:
setWithObjects:
initWithPropertiesToFind:atURL:withDepth:
orderedResponses
successfulPropertiesToValues
CDVObjectForKeyWithNameSpace:andName:
setUpdatedExternalID:
da_urlBySettingUsername:
initWithSourceURL:destinationURL:
_handleMoveTaskComplete:moveItem:
continueRefreshFromSendingDeletes
setRefreshFoundUpdatedTaskContainer:
setRefreshFoundUpdatedSpecialCalendar:
setRefreshFoundDeletedContainerURL:
setPathsToCTags:
setPathsToSyncTokens:
_cleanUpDuplicateCalendars
calendarSyncForPrincipal:calendar:completedWithError:
setCalendarsToRefresh:
calendarsToRefresh
_cleanUpDuplicateCalendar:ofCalendar:
_amendChangeRecordAndCleanUpAfterDeletedEventWithID:externalID:database:
updatedExternalID
_syncCalendar:
pathsToCTags
pathsToSyncTokens
_refreshedCtagForCalendar:
_refreshedSyncTokenForCalendar:
initWithPrincipal:calendar:nextCtag:nextSyncToken:
syncCalendar
setCalendarFailedToSync:
retryTime
setRetryTime:
setShouldRetry:
accountSyncDiagnostics
numberWithLong:
setEventUIDsWithAttachmentChanges:
_prepareAttachmentsForUpload
_uploadAttachments:
eventUIDsWithAttachmentChanges
initWithCapacity:
predicateWithBlock:
filterUsingPredicate:
_uploadAttachments:forOwnerURL:syncKey:scheduleTag:
dataWithContentsOfURL:options:error:
pathExtension
stringByAppendingPathExtension:
initWithAccountInfoProvider:resourceURL:attachments:contentTypes:taskManager:
setPreviousETag:
setPreviousScheduleTag:
_handleAttachmentUploadsComplete:attachments:
filenamesToServerLocation
updatedETag
updatedScheduleTag
_beginAttachmentDownloads
timeIntervalSinceNow
initWithAttachmentUUID:
beginDownload
beginDownloadingAttachmentWithUUID:consumer:
localTimeZone
dateFromComponents:
_cleanUpOrphanedPreferredUserAddressesPerCalendar
_guidsOfExistingCalendars
setWithCapacity:
_checkForNewOrMovedItemsDeletedSinceSyncStartedInCalendars:database:moves:
refreshFoundUpdatedTaskContainer
refreshFoundUpdatedSpecialCalendar
refreshFoundDeletedContainerURL
taskGroup:didFinishWithError:
propertyRefreshForPrincipal:completedWithError:
calendarRefreshForPrincipal:completedWithNewCTags:newSyncTokens:calendarHomeSyncToken:updatedCalendars:error:
calendarRefreshShouldRetryMkCalendarForPrincipal:calendar:error:
calendarRefreshFoundUpdatedContainerWithIgnoredEntityType:
calendarRefreshFoundUpdatedSpecialContainer:
calendarRefreshFoundDeletedContainerURL:
calendarRefreshWillRefreshCalendar:
calendarRefreshPropPatchFinishedWithError:forCalendar:
calendarRefreshWillSendCalendarDeletes:
delegateRefreshForPrincipal:completedWithError:
didFinish
setDidFinish:
setAccountSyncDiagnostics:
_transaction
_pausedPropertyRefreshOperation
_shouldCancel
_didFinish
_refreshing
_refreshFoundUpdatedTaskContainer
_refreshFoundUpdatedSpecialCalendar
_refreshFoundDeletedContainerURL
_state
_context
_completionBlock
_pathsToCTags
_pathsToSyncTokens
_calendarsToRefresh
_outstandingOperationGroup
_outstandingTaskGroups
_outstandingTasks
_calendarHomeSyncToken
_accountSyncDiagnostics
_eventUIDsWithAttachmentChanges
T@"CalDAVRefreshContext",&,N,V_context
TB,N,V_shouldCancel
TB,N,V_didFinish
TB,N,V_refreshing
T@?,C,N,V_completionBlock
T@"NSMutableDictionary",&,N,V_pathsToCTags
T@"NSMutableDictionary",&,N,V_pathsToSyncTokens
T@"NSMutableArray",&,N,V_calendarsToRefresh
TB,N,V_refreshFoundUpdatedTaskContainer
TB,N,V_refreshFoundUpdatedSpecialCalendar
TB,N,V_refreshFoundDeletedContainerURL
T@"NSObject<OS_dispatch_group>",&,N,V_outstandingOperationGroup
T@"NSMutableSet",&,N,V_outstandingTaskGroups
T@"NSMutableSet",&,N,V_outstandingTasks
Ti,N,V_state
T@"NSString",&,N,V_calendarHomeSyncToken
T@"CalDiagAccountSync",&,N,V_accountSyncDiagnostics
T@"NSSet",&,N,V_eventUIDsWithAttachmentChanges
downloadProgressDownloadedByteCount:totalByteCount:
downloadFinishedError:
_retainedSelf
_uuid
initWithUUIDString:
defaultContext
setIsForced:
wasUserRequested
setWasUserRequested:
setWasDueToPush:
didDownloadEvents
setDidDownloadEvents:
didSaveDatabase
setDidSaveDatabase:
shouldRetry
_isForced
_wasUserRequested
_wasDueToPush
_isDisabledAccount
_isCalendarsOnly
_didDownloadEvents
_didSaveDatabase
_shouldSave
_shouldSaveAccounts
_calendarFailedToSync
_shouldRetry
_retryTime
_startTime
_error
_localItems
TB,N,V_isForced
TB,N,V_wasUserRequested
TB,N,V_wasDueToPush
TB,N,V_isDisabledAccount
TB,N,V_isCalendarsOnly
TB,N,V_didDownloadEvents
TB,N,V_didSaveDatabase
TB,N,V_shouldSave
TB,N,V_shouldSaveAccounts
TB,N,V_calendarFailedToSync
Td,N,V_startTime
TB,N,V_shouldRetry
Ti,N,V_retryTime
T@"NSError",&,N,V_error
TQ,N,V_localItems
initWithDatabase:clientIdentifier:
_database
_clientIdentifier
_initialSequenceNumber
_savedChanges
setDataPayload:
setAccountID:
setLocalItem:
stringByAddingPercentEscapesUsingEncoding:
stringByReplacingOccurrencesOfString:withString:
dtstamp
initWithValue:
_getDetachedEventUniqueIdentifiersAndCleanupDuplicatesForCalEvent:
_setModificationInfoOnItem:
componentOccurrencesForKey:
_removeCalEvent:fromUniqueIdentifiersSet:
_removeDetachedEventsWithUniqueIdentifiers:fromEvent:withContainer:inMobileCalendar:
dtend
setCalendar:
tzid
dtstart
timeIntervalSinceDate:
dateByAddingTimeInterval:
duration
hasTimeComponent
rrule
until
interval
freq
dateByAddingUnit:value:toDate:options:
distantFuture
_shouldApplyEvent:instanceWithStartDate:startRange:endRange:
_checkOccurrencesForEvent:fromDate:toDate:
initWithData:encoding:options:delegate:error:
setDocument:
setComponents:options:
propertiesForName:
firstObject
_shouldApplyEventFromSyncReport:startDate:endDate:
_addOrModifyEvent:inICSCalendar:withContainer:shouldMergeProperties:outMergeDidChooseLocalProperties:inMobileCalendar:
recurrenceSetsForICSCalendar:
relatedTo
parameterValueForName:
setProdid:
isMigrate
attendee
setScheduleagent:
organizer
_fixUpCalendarForServer:
initWithCalendar:
ICSDataWithOptions:
setClientID:
fixEndDates:
initWithType:subtype:context:
report
documentParsedCalendar:
initWithURL:eTag:dataPayload:inContainerWithURL:withAccountInfoProvider:
childrenOrder
sourceURL
setSourceURL:
setDestinationURL:
T@"NSData",R,N
saveWithLocalObject:toContainer:shouldMergeProperties:outMergeDidChooseLocalProperties:account:
saveServerIDToExistingItem
deleteFromContainer:
scheduleChanges
setScheduleChanges:
createdBy
setCreatedBy:
updatedBy
setUpdatedBy:
T@"CalDAVCalendarServerScheduleChangesItem",&,N
T@"CalDAVUpdateOwnerItem",&,N
_addOrModifyTask:inICSCalendar:withContainer:shouldMergeProperties:outMergeDidChooseLocalProperties:inMobileCalendar:
localItem
setStatusChanged:
setUniqueIdentifier:
setFilename:
_originatingChangeItems
_dataPayload
_isMigrate
_prohibitLocalCreationOfServerID
_statusChanged
_scheduleChanges
_serverID
_clientID
_calItem
_document
_createdBy
_updatedBy
_uniqueIdentifier
_filename
_accountID
T@"NSData",&,N,V_dataPayload
T@"ICSDocument",&,N,V_document
TB,N,V_statusChanged
T@"NSString",&,N,V_uniqueIdentifier
T@"NSString",&,N,V_filename
T@"NSString",C,N,V_accountID
T@"NSURL",&,N,V_serverID
T@"NSNumber",&,N,V_clientID
T^v,R,N,V_calItem
T@"CalDAVCalendarServerScheduleChangesItem",&,N,V_scheduleChanges
T@"CalDAVUpdateOwnerItem",&,N,V_createdBy
T@"CalDAVUpdateOwnerItem",&,N,V_updatedBy
T@"NSMutableDictionary",C,N
TB,N,V_isMigrate
TB,N,V_prohibitLocalCreationOfServerID
_copyEventActionWithURL:forCalItemWithUniqueIdentifier:
propertyWithItem:
initWithData:filename:scheduleChanges:
event
setETag:forInvitationAtURL:uniqueIdentifier:
setDirection:
processMessages:withDatabase:calStore:accountInfo:handledEventCallback:cancellationToken:
inboxCollectionSyncDiagnostics
_removeInvitationWithURL:
setInboxCollectionSync:
setInboxCollectionSyncDiagnostics:
_inboxCollectionSyncDiagnostics
T@"CalDiagInboxCollectionSync",&,N,V_inboxCollectionSyncDiagnostics
SubCalTitleKey
subscriptionURL
SubCalFilterAlarmsKey
hasAlarmFilter
hasAttachmentFilter
hasTaskFilter
doubleValue
numberWithDouble:
setSubscriptionURL:
setHasAlarmFilter:
setHasAttachmentFilter:
setHasTaskFilter:
autoprovisioned
setAutoprovisioned:
locationCode
setLocationCode:
languageCode
setLanguageCode:
shouldCalendarBeReadOnly
_properties
setResultType:
setMCUAddresses:
setMEmailAddresses:
namespaceAndNameForWellKnownType:
firstHref
payloadAsOriginalURL
da_pathWithoutTrailingRemovingSlash
da_trimWhiteSpace
resultTypeForRecordType:
addEmail:
hrefs
addCUAddress:
initWithResponse:
mCUAddresses
mEmailAddresses
resultType
setEmailAddresses:
_firstName
_lastName
_displayName
_resultType
_emailAddresses
_mCUAddresses
_mEmailAddresses
T@"NSMutableArray",&,N,V_mCUAddresses
T@"NSMutableArray",&,N,V_mEmailAddresses
T@"NSString",&,N,V_firstName
T@"NSString",&,N,V_lastName
T@"NSString",&,N,V_displayName
T@"NSString",&,N,V_resultType
T@"NSArray",&,N,V_emailAddresses
setSourceCalendarID:
setItemID:
setOldExternalID:
setChangeID:
setObjectType:
sourceCalendarID
_sourceCalendarID
_itemID
_changeID
_oldExternalID
_objectType
_updatedExternalID
Ti,N,V_sourceCalendarID
Ti,N,V_itemID
T@"NSString",&,N,V_oldExternalID
Ti,N,V_changeID
Tq,N,V_objectType
T@"NSString",&,N,V_updatedExternalID
_copyNotificationWithExternalID:
_copyNotificationWithUniqueIdentifier:inCalendar:orStore:
defaultProvider
processNotificationWithData:serverURL:syncKey:database:notificationCalendar:store:calendarHomeURL:notificationCalendarURL:contactsProvider:recordIDMap:
setUrl:
notificationCollectionSyncDiagnostics
addNotificationSync:
setNotificationCollectionSync:
setNotificationCollectionSyncDiagnostics:
_notificationCollectionSyncDiagnostics
T@"CalDiagNotificationCollectionSync",&,N,V_notificationCollectionSyncDiagnostics
initWithAccountInfoProvider:principalURL:taskManager:
setServerSupportsExpandPropertyReport:
readWritePrincipalDetails
relativePath
infoFromCalDAVDetails:allowWrite:
readOnlyPrincipalDetails
dictionaryWithDictionary:
mdelegate
finishCoreDAVTaskGroupWithError:delegateCallbackBlock:
_mdelegate
T@"<CalDAVAccountDelegatesRefreshDelegate>",N,V_mdelegate
inviteStatus
name
access
accessLevel
setAllowWrite:
initWithPrincipalPath:displayName:allowWrite:
_allowWrite
TB,N,V_allowWrite
@24@0:8@16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B24@0:8@"NSString"16
v24@0:8@16
@"<CalDAVPrincipal>"16@0:8
v24@0:8@"<CalDAVPrincipal>"16
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
v16@0:8
v20@0:8B16
v20@0:8i16
i16@0:8
v32@0:8@16@24
v24@0:8^v16
d16@0:8
v24@0:8d16
^v16@0:8
B24@0:8^v16
B24@0:8B16B20
v24@0:8@?16
v36@0:8i16@20@28
v36@0:8^?16i24@28
@40@0:8^{__CFDictionary=}16@24^B32
v40@0:8@16@24@32
@"NSMutableDictionary"
@"NSMutableSet"
@"NSMutableArray"
@"CalDAVServerVersion"
@"NSString"
@"MobileCalDAVPrincipal<CalDAVPrincipal>"
@"NSDictionary"
@"CalDAVPrincipalSearchPropertySet"
@"CalDAVRefreshContext"
@"CoreDAVDiscoveryTaskGroup"
@"MobileCalDAVAccountRefreshActor"
@"DACoreDAVLogger"
B32@0:8@16@24
@24@0:8q16
q16@0:8
B32@0:8@16@?24
v32@0:8q16@24
v32@0:8d16@24
v24@0:8q16
^{__CFURLStorageSession=}16@0:8
v48@0:8@16@24@32@?40
@"NSData"16@0:8
@"NSURL"16@0:8
@"NSSet"16@0:8
v24@0:8@?<v@?i>16
B24@0:8@"NSError"16
@"<CoreDAVClientCertificateInfoProvider>"16@0:8
@"<CoreDAVOAuthInfoProvider>"16@0:8
B32@0:8@"NSURLAuthenticationChallenge"16@?<v@?q@"NSURLCredential">24
B24@0:8@"NSURLProtectionSpace"16
B24@0:8@"NSURLSessionTask"16
v24@0:8@"NSURL"16
B24@0:8@"NSURL"16
v32@0:8q16@"CoreDAVTask"24
v24@0:8@"CoreDAVTask"16
v32@0:8d16@"CoreDAVTask"24
v48@0:8@"NSURL"16@"NSString"24@"NSObject<OS_dispatch_queue>"32@?<v@?i>40
@"AKAppleIDSession"16@0:8
^{_CFURLCredential=}24@0:8@16
^{_CFURLCredential=}24@0:8@"NSURLAuthenticationChallenge"16
@36@0:8i16@20@28
@"<CalDAVCalendar>"36@0:8i16@"NSURL"20@"NSDictionary"28
v24@0:8@"<CalDAVCalendar>"16
@"<CalDAVAccount>"16@0:8
@"<CoreDAVTaskManager>"16@0:8
v24@0:8@"NSSet"16
v24@0:8@"NSString"16
@"NSNumber"16@0:8
v24@0:8@"NSNumber"16
@"NSDateComponents"16@0:8
v24@0:8@?<v@?@"<CalDAVPrincipal>">16
@40@0:8@16@24@32
@20@0:8i16
v32@0:8q16q24
@"NSURL"
@"<CalDAVAccount>"
@"NSSet"
@"NSNumber"
@"NSArray"
@"AKAppleIDSession"
@32@0:8@16@24
@"MobileCalDAVAccount"
@32@0:8^v16@24
v28@0:8i16@20
i24@0:8@16
^{__CFArray=}64@0:8@16@24^@32^@40^@48@56
B28@0:8^v16i24
v32@0:8@16I24I28
B40@0:8^{__CFArray=}16@24@32
v64@0:8@16@24@32@40@48@56
@"NSDictionary"24@0:8@"NSArray"16
B32@0:8@"NSString"16@"NSURL"24
B32@0:8@"NSURL"16@"NSString"24
B24@0:8@"NSSet"16
@"NSTimeZone"16@0:8
v24@0:8@"NSTimeZone"16
@"NSArray"16@0:8
v24@0:8@?<v@?@"<CalDAVCalendar>">16
v24@0:8@"NSError"16
v32@0:8@"CoreDAVAction"16@"NSError"24
v64@0:8@"CalDAVRecurrenceSplitAction"16@"NSString"24@"NSString"32@"NSURL"40@"NSString"48@"NSString"56
v32@0:8@"CalDAVRecurrenceSplitAction"16@"NSError"24
v32@0:8@16r^{CalRecordID=}24
r^{CalRecordID=}24@0:8@16
v32@0:8@"NSString"16r^{CalRecordID=}24
r^{CalRecordID=}24@0:8@"NSString"16
@48@0:8@16^v24@32@40
v24@0:8B16B20
^v40@0:8@16^v24^v32
^v24@0:8@16
v32@0:8@16^{CalRecordID=}24
v32@0:8@16^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24
@76@0:8q16^{__CFArray=}24^{__CFArray=}32^{__CFArray=}40^{__CFArray=}48^{__CFArray=}56^{__CFArray=}64i72
v40@0:8i16@20i28@32
v40@0:8^?16@24@32
v32@0:8^?16@24
v28@0:8^{__CFArray=}16i24
v28@0:8@16i24
v28@0:8@16B24
@48@0:8@16i24@28B36^B40
v32@0:8@16^v24
B24@0:8Q16
v24@0:8Q16
v32@0:8@16Q24
@"MobileCalDAVPrincipal"
@"CalDAVDBChangeTrackingHelper"
@"CalDiagCalendarCollectionSync"
v32@0:8@"CoreDAVTaskGroup"16@"NSError"24
v32@0:8@"<CalDAVPrincipal>"16@"NSError"24
B40@0:8@16@24@32
v64@0:8@"<CalDAVPrincipal>"16@"NSDictionary"24@"NSDictionary"32@"NSString"40@"NSSet"48@"NSError"56
B40@0:8@"<CalDAVPrincipal>"16@"<CalDAVCalendar>"24@"NSError"32
v24@0:8@"CalDAVContainer"16
v32@0:8@"NSError"16@"<CalDAVCalendar>"24
v24@0:8@"CalDAVCalendarPropertyRefreshOperation"16
v40@0:8@"<CalDAVPrincipal>"16@"<CalDAVCalendar>"24@"NSError"32
B36@0:8i16@20^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}28
B40@0:8@16^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24@32
v48@0:8@16@24@32@40
@?16@0:8
@"DATransaction"
@"CalDAVCalendarPropertyRefreshOperation"
@"NSObject<OS_dispatch_group>"
@"CalDiagAccountSync"
@"NSError"
@32@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16@24
v24@0:8i16i20
^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}
B48@0:8@16@24@32@40
@"ICSCalendar"24@0:8@"ICSCalendar"16
@56@0:8@16@24@32@40@48
@56@0:8@"NSURL"16@"NSString"24@"NSData"32@"NSURL"40@"<CoreDAVAccountInfoProvider>"48
B52@0:8^v16^v24B32^B36@44
B52@0:8^v16^v24B32^B36@"DAAccount"44
B24@0:8@"DAAccount"16
@"CalDAVCalendarServerScheduleChangesItem"16@0:8
v24@0:8@"CalDAVCalendarServerScheduleChangesItem"16
@"CalDAVUpdateOwnerItem"16@0:8
v24@0:8@"CalDAVUpdateOwnerItem"16
@40@0:8^v16@24@32
@24@0:8^v16
v32@0:8^v16@24
v48@0:8@16^v24^v32@40
B60@0:8@16@24^v32B40^B44@52
B60@0:8^v16B24^B28@36@44^@52
@"NSData"
@"CalDAVCalendarServerScheduleChangesItem"
@"ICSDocument"
@"CalDAVUpdateOwnerItem"
^v32@0:8@16@24
@"CalDiagInboxCollectionSync"
@52@0:8i16i20@24i32q36@44
@"CalDiagNotificationCollectionSync"
@"<CalDAVAccountDelegatesRefreshDelegate>"
^v32@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16^v24
@28@0:8@16B24
@36@0:8@16@24B32
#,=IR_h
CalDAVAccountVersion
CalDAVHostKey
CalDAVSchemeKey
CalDAVPortKey
CalDAVMobileAccountCollectionSetName
CalDAVMobileAccountSearchPropertySet
CalDAVMobileAccountSearchPropertySetKey_CoreDAV
CalDAVMobileAccountIsWritable
CalDAVMobileAccountServerVersion
CalDAVMobileAccountOverriddenServer
CalDAVMobileAccountOverriddenPort
CalDAVMobileAccountOverriddenScheme
CalDAVMobileAccountDelegatePrincipalPath
WasUpgradedFromLegacy
v8@?0
CalDAVHTTPTraffic
MobileCalDAVAccount.m
Nothing to see here, buddy. Just turn around and leave quietly.
Account was deallocated while still refreshing. Ouch
absoluteString
%@://%@:%ld
http
subscribed 
VTODO
VEVENT
event
task
I didn't order a refresh, so why is there one on my menu?
We should have an actor at this point
v32@?0@"NSNumber"8@"CalDAVMove"16^B24
migration 
 (calendars only)
v32@?0@"NSString"8@"MobileCalDAVDelegateUserInfo"16^B24
backingAccountInfo
v20@?0B8@"NSError"12
/calendar/dav/%@/user/
/.well-known/caldav
/principals/
_caldav._tcp.
_caldavs._tcp.
calendar-access
ACCOUNT_UNIQUE_CONSTRAINT_FAILED_BODY_FORMAT_CALDAV
DataAccess
INVALID_PASSWORD_BODY_CALDAV
mailto:%@
v32@?0@8@"MobileCalDAVPrincipal"16^B24
REMStore
Class getREMStoreClass(void)_block_invoke
Unable to find class %s
void *ReminderKitLibrary(void)
PrincipalURL
MobileCalDAVPrincipal.m
Cannot create a principal with a nil account
v24@?0@"NSDictionary"8^B16
v32@?0@"NSString"8@"NSSet"16^B24
CardDAViCloudDaemonAccount
v24@?0@"CalDAVCalendarUserAddress"8^B16
v32@?0@8@16^B24
AUDIO
Cannot create a calendar without a URL
DEFAULT_CALENDAR_NAME
DEFAULT_TASK_CALENDAR_NAME
APSD
PRODUCTION
production
SANDBOX
DEVELOPMENT
development
demo
mailto
v24@?0q8@"NSError"16
MobileCalUserAddressAddressURL
EventRef
ChangeID
ChangeRowid
ExternalID
UniqueIdentifier
SignificantAttributeChange
OldCalendarID
EntityType
CalDBIsClosing
%@ [%@] "%@"
CalDiagCalendarCollectionSync
CalDiagCalendarItemSync
?isJunk=true
events
tasks
q24@?0@"DACalDAViCalItem"8@"DACalDAViCalItem"16
n add
 modify
modify
-//Apple Inc.//iOS %@//EN
Can't create path: %@ (%@)
.ics
CalDiagStore
mailto:
MobileCalDAVAccountRefreshActor.m
There should not be any active task groups when the actor is deallocated
There should not be any active tasks when the actor is deallocated
CalDiagAccountSync
There should not be any active task groups at a state transition
There should not be any active tasks at a state transition
MobileCalDAVAccountRefreshActor tried to transition out of the finished state. What does that even mean?
We were told to refresh, but we already started a refresh!
v32@?0@"NSString"8@"CalDAVMove"16^B24
v16@?0@"<CalDAVCalendar>"8
B24@?0@8@"NSDictionary"16
application/zip;x-mac-auto-archive=yes
application/octet-stream
We should have only finished once
cancelled
complete
ACTION
ATTACH
ATTENDEE
CALSCALE
CATEGORIES
CLASS
COMMENT
COMPLETED
CONTACT
CREATED
DESCRIPTION
DTEND
DTSTAMP
DTSTART
DURATION
EXDATE
EXRULE
FREEBUSY
LAST-MODIFIED
LOCATION
METHOD
ORGANIZER
PERCENT-COMPLETE
PRIORITY
PRODID
RDATE
RECURRENCE-ID
RELATED-TO
REPEAT
REQUEST-STATUS
RESOURCES
RRULE
SEQUENCE
STATUS
SUMMARY
TRANSP
TRIGGER
TZID
TZNAME
TZOFFSETFROM
TZOFFSETTO
TZURL
VERSION
SCOPE
MAXRESULTS
MAXRESULTSSIZE
QUERY
QUERYNAME
TARGET
X-CALENDARSERVER-MASK-UID
ALTREP
CUTYPE
DELEGATED-FROM
DELEGATED-TO
ENCODING
FMTTYPE
FBTYPE
LANGUAGE
MEMBER
PARTSTAT
SCHEDULE-STATUS
RANGE
RELATED
RELTYPE
ROLE
RSVP
SCHEDULE-FORCE-SEND
SENT-BY
VALUE
UNTIL
COUNT
INTERVAL
BYMONTH
BYWEEKNO
BYYEARDAY
BYMONTHDAY
BYDAY
BYHOUR
BYMINUTE
BYSECOND
BYSETPOS
WKST
X-APPLE-DROPBOX
X-WR-ATTENDEE
X-WR-LANG
X-WR-RELCALID
X-WR-CALNAME
X-WR-CALDESC
X-WR-CALTYPE
X-WR-EXPIRATION
X-WR-TIMEZONE
X-WR-TEMPLATE
X-WR-ICONINFO
X-WR-PARENT
X-WR-UNTIL
X-WR-COUNT
X-WR-INTERVAL
X-WR-BYMONTH
X-WR-BYWEEKNO
X-WR-BYYEARDAY
X-WR-BYMONTHDAY
X-WR-BYDAY
X-WR-BYHOUR
X-WR-BYMINUTE
X-WR-BYSECOND
X-WR-BYSETPOS
X-WR-WEEKSTART
X-WR-CACHEDENDDATE
X-WR-ITIPSTATUSML
X-WR-ITIPSTATUSATTENDEEML
X-WR-ITIPALREADYSENT
X-WR-RSVPNEEDED
X-WR-DONTSCHEDULE
X-CALENDARSERVER-ACCESS
X-WR-ALARMUID
X-WR-OCCTRIGGER
X-WR-OCCDATEID
X-WR-CANCELID
X-WR-INVITATIONID
X-APPLE-SORT-ORDER
X-APPLE-FILENAME
X-APPLE-AUTOARCHIVED
X-APPLE-ATTACHMENTID
X-APPLE-CALENDAR-COLOR
X-APPLE-AUTO-REFRESH
X-APPLE-IGNORE-ON-RESTORE
X-APPLE-NEEDS-REPLY
X-CALENDARSERVER-ATTENDEE-COMMENT
X-CALENDARSERVER-ATTENDEE-REF
X-CALENDARSERVER-DTSTAMP
X-CALENDARSERVER-PRIVATE-COMMENT
EMAIL
X-APPLE-NEEDS-SERVER-CONFIRMATION
X-APPLE-EWS-ITEMID
X-APPLE-EWS-PERMISSION
X-APPLE-CHANGEKEY
X-APPLE-SELF-INVITED
X-NUM-GUESTS
v44@?0i8^{__CFArray=}12^{__CFArray=}20^{__CFArray=}28^{__CFArray=}36
CalDAVChangeEvent
CalDAVChangeTask
CalDAVChangeAlarm
CalDAVChangeAttendee
CalDAVChangeOrganizer
CalDAVChangeAttachment
CalDAVChangeRecurrence
%@ - (path: %@)
DACalDAViCalItem.m
You should be calling the calendar specific version of this call
Sync
CalDAV
DTEND corruption
Inbox
CalDiagInboxCollectionSync
MobileCalDAVInboxCalendar.m
Cannot set etag for an invitation without a unique identifier
Cannot insert a nil url to the invitation etag cache
Cannot insert a nil etag to the invitation etag cache
v32@?0@"CaliTIPMessage"8@"NSString"16@"ICSEvent"24
INDIVIDUAL
GROUP
RESOURCE
ROOM
UNKNOWN
@"CoreDAVItem"12@?0i8
Unexpected parsing of calendar-user-address-set: %@
urn:uuid:
%@ <%@> (%@)
CalDiagNotificationCollectionSync
MobileCalDAVNotificationCalendar.m
Woah buddy- we shouldn't be setting a schedule tag on a notification item!
CalDiagNotificationSync
MobileCalDAVDelegateUserInfo   displayName: %@ allowWrite: %d, uid: %@, principalPath: %@
No main principal found in the account properties for "%@" (%{public}@). Creating a new one.
Upgrading principal URL from %@
New principal URL is %@
Upgrading account "%@" (%{public}@); stripping username "%@" from subcal URLs.
Stripping url: %@ -> %@
CalDAV URL in subscribed calendars for account %{public}@ wasn't actually a URL: %@
Updated CalDAV subscribed calendar key: %@ -> %@
Couldn't get path from URL on account %{public}@: %@
Adding %@calendar %p with url %@
Removing %@calendar %p at url %@
Removing calendar with url %@
Loaded calendar %p with URL %@
Ignoring calendar %d because it isn't a type we care about.
Caught an exception while trying to get the calendars for account %@: %@
Duplicate Calendar: [rowid=%i, title=%@, external_id=%@, external_mod_tag=%{public}@, external_id_tag=%{public}@, UUID=%{public}@, sync_token=%{public}@]
Duplicate calendar doesn't have a calendar ref!
Found %i duplicate calendars
Setting CalDAV server version to '%@' (currently '%@')
Updating calendar store and saving account properties since CalDAV server version changed
Could not parse the ics containing the default alarms. ICS: %@
Date based default alarms are not a thing. ICS: %@
Setting calendar store constraints plist path to '%@'
ACCOUNTDCOERROR Couldn't find an existing calendar store, so creating a new one.
Couldn't update the calendar store because one doesn't exist in the database
syncEndedWithError: called with an error while a sync is not in progress. Recording the error anyway. error = %@
Canceling MobileCalDAVAccount refresh for account "%@" (%{public}@)
CalDAV task manager has been shut down.
Couldn't get a calendar store to clear orphaned calendar item changes
Searching for orhpaned %@ changes
Found an orphaned calendar item change at index %ld
Found %ld orphaned calendar item changes
Couldn't get a calendar store to clear orphaned changes
Searching for orhpaned changes
Found an orphaned change at index %ld
Found %ld orphaned changes
Couldn't get a calendar store to clear orphaned store changes
Existing subscribed calendars are: %@
Subscribed calendar %p at %@ is dirty
Subscribed calendar has no URL so its properties cannot be saved: %@
Subscribed calendar at %@ was deleted
Subscribed calendars were modified. New calendars are %@
Principal %@ is dirty
Principal %@ was deleted.
Principals changed
Subscribed calendars changed
Saving accounts to update push information from an upgrade
Saving accounts to update push information
The refresh actor says we should save accounts
==== CalDAV refresh completed successfully (but some calendars failed to sync) for "%@" (%{public}@)
==== CalDAV refresh completed successfully for "%@" (%{public}@)
CalDAV refresh finished for account "%@" (%{public}@): Total sync time: %0.2f seconds. Number of downloaded items: %lu
Some calendars failed to sync. Keeping the migration flag around so that we attempt a merge sync the next time
Clearing migrated flag on the calendar store
==== CalDAV refresh FAILED for "%@" (%{public}@): %@. [Error Domain:%{public}@ Code:%{public}@]
Not saving our account properties because the refresh was canceled.
Saving our account properties
DataAccess has determined via a push notification that reminders need syncing. Telling remindd to sync account %{public}@
DataAccess has determined via a push notification that reminders need syncing, but cannot notify remindd because the necessary SPI is not available in this build.
Found a move for item %d from container %d
Ignoring move change for detached event %@
_addChange for move of calendarItem id %@, changeId %@ calendarItemIdsToMoveActions %@, calendarItemChangeIdsToClear %@
Clearing change index %d
Ignoring refresh request because we're already in the middle of a refresh
==== Beginning %@refresh for CalDAV account%@ "%@" (%@)
Our store has %lu items in it.
We're already refreshing or a refresh is pending, so we're going to ignore this refresh request.
No delegate user infos in updateDelegates for account with identifier: %{public}@
Updating delegates for account %{public}@
Failed to find child account with identifier %{public}@
Failed to get main principal path for child account with identifier %{public}@
Adding delegate account with principal path %@
Updating delegate account with principal path %@ and account ID %{public}@
Account properties changed for delegate account with principal path %@ and account ID %{public}@. Will save the account.
Failed to save ACAccount for delegate with principal path %@: %@
Updating DB properties for delegate account with principal path %@ and account ID %{public}@
DB properties changed for delegate account with principal path %@ and account ID %{public}@. Will save the DB.
Removing delegate account with identifier %{public}@
Delegate with account ID %@ was successfully removed
Delegate with account ID %@ failed to be removed
Finished updating delegates for account %{public}@
Search task %p was cancelled
CalDAV search query %p returning results
An unknown task just finished. What just happened? %@
Refusing to send out search query because the server doesn't support searching
CalDAV search query "%@" (%p) enqueuing
Dropping search query %@ because it is not the right type
cancelling search query %@
_reallyCancelAllSearchQueries is complete. All search queries have been cancelled.
DiscoveryTaskGroup %@ got account info %@ with error %@
Autodiscover called on account %@, but that account does not have a host set, and one could not be inferred from the username. Ignoring autodiscovery request
Autodiscover called on account %@, but that account does not have a host. Ignoring autodiscovery request
account %@ is checking validity with group %@ on behalf of %@
Dropping power assertion release for %@ since the retain count isn't positive
Principal configuration UID (%{public}@) doesn't match provided UID (%{public}@). Using the provided UID.
Asked to create a calendar of a type we don't know about: %d
Marking principal as dirty: %@
Asked to handle a trust challenge, but the account is gone. No point in continuing without an account, so we'll cancel.
Deleting calendar with uid %d
Couldn't find calendar with guid %@
Marking calendar "%@" as dirty.
Couldn't find a calendar with uid %@ to set the new guid on
Could not find a calendar to set a URL on
Empty calendar title received. Setting calendar title to %@. Calendar URL: %@
Updating sharee %@ to calendar "%@"
Removing sharee %@ from calendar "%@" 
Adding sharee %@ to calendar "%@"
Couldn't get a calendar for %@
Could not find a calendar that matched %@
Couldn't set url for the event %@ because it doesn't exist in our database
Couldn't set etag for the item at %@ because it doesn't exist in our database
Couldn't set schedule tag for the item at %@ because it doesn't exist in our database
Dropping server change for %@ on the floor because we have a move change for it
Dropping server change for %@ on the floor because we have a delete change for it
The event at %@ was modified locally. Forcing it to the server.
Saved resource from %@ to the database. Etag is %@
Removing event with url %@
Couldn't get a calendar item to remove with url %@
******Creating calendar with url %@ %{public}@
Could not get a calendar store. Cowardly refusing to create a calendar with UID %@
Merged calendar titled %@ with calDAV
Couldn't get a database ref. This isn't the time to create a calendar
Found a cached calendar uid (%d) for url %@ %@
Couldn't find calendar with url %@.
Could not find a calendar store with id %@
CalDatabaseCopyCalendarChangesInStore returned no changeTableIDs.
Got a change for calendar with UID %d, but couldn't find that calendar. Most likely it no longer exists. Ignoring change.
There's an change for calendar with guid %@ (UID %d) but it isn't in the cached calendars. Keeping the change for it until next time.
+gatherCalendarChangesInPrincipal %@: found %lu added calendars, %lu modified calendars, and %lu deleted calendars
+shouldSkipCalendar:withChangeType: Unexpected change type: %i
Could not find a calendar with that matched %@
Ignoring change of type %@ for change row id %d on item with uid %d because it's now in calendar %d and this is %d
Ignoring change of type %@ for change row id %d on item with uid %d because it is self organized with a client schedule agent
Ignoring change of type %@ for change row id %d on item with uid %d because it does not have a calendar
Adding change of type %@ for change row id %d on item with uid %d
Could not get an owning item with uid %d
Gathering added %@. Change index is %d
%ld added events found
%ld added tasks found
Gathering modified events. Change index is %d
Gathering modified tasks. Change index is %d
Gathering added recurrence split events. Change index is %d
%ld added recurrence split items found
Gathering deleted items. Change index is %d
Found a really interesting move. We're going to steal the filename from the move action: %@
Found a delete of the item at row %d (change row is %d) for filename %@
No filename exists for the deleted item with guid %@
Found an owning event: %d
The calendar store had a delete we don't have a mapping for: %d
Clearing change at index %d
Clearing %lu %{public}@ in %@
No %{public}@ to clear in %@
Clearing %@ changes at indices %@
Saving %@ changes at indices %@
Couldn't find an event ref for an added event: %@
Couldn't find split origin for event: %@
Encountered error %@ when putting item to %@
Received a 409 conflict for the event at %@. Creating a new UUID and trying again.
Marking calendar as dirty because we just received a 409 conflict error
Put of item at %@ succeeded without error
Clearing local changes for the item at %@
Saving local changes to try again later for the item at %@
Encountered error %@ when deleting item from %@
Delete of item at %@ succeeded without error
Clearing local delete change for item at %@
Keeping delete change to try again later for item at %@
Split action for item at URL %@ failed with error %@. Error appears to be transient; we will try again next time.
Split action for item at URL %@ failed with error %@. Clearing recurrence-set.
Unable to find the item we were trying to split with URL %@.
Could not get an owning sharee with uid %d
Gathering modified sharees; found %li modified sharees
Found a%@ for sharee %@
Skipping %@ for record %@ because we've already seen a delete for it
Couldn't get a URL for the deleted sharee at %d, so we're going to skip it
Sending up a delete for the item at URL %@
Couldn't get a URL for the delete of "%@"
Found %lu deleted items
Found %lu split items
Found %lu added items
Found %lu modified items
Found %lu deleted event actions
Creating a delete for the invitation at %@
Preparing merge sync actions...
Found %@ which exists on the server at %@
Found %@ which does not exist on the server
Skipping add for item %@ because it is self organized with a client schedule agent
Found %lu adds for our merge sync
Found %lu mods for our merge sync
DATransaction starting, ID: %@
Refresh actor starting up. (forced: %s)
CalDAV actor was told to cancel
There weren't any outstanding tasks, so we're going to call our cancel completion block now.
Refresh actor tearing down...
Checking if we should continue before transitioning from state %d
Ignoring calendar refresh task because we have no password.
Bailing out of refresh because we were told to cancel
Encountered an error while refreshing. Bailing out of the refresh. The error was %@
Waiting to make state transition from state %d with %lu outstanding task groups and %lu outstanding tasks
%@ refreshCalendarsOnly : begin
Refreshing properties for account with CoreDAV
Error refreshing properties for principal: %@
Properties were refreshed for principal "%@" on account "%@" (%{public}@)
Getting delegates for account with CoreDAV
%@: This server does not support delegates.
Error refreshing delegates for account "%@" (%{public}@): %@
Delegates were refreshed for account "%@" (%{public}@)
Missing calendar home; not trying to refresh calendar properties
Scheduling calendar refresh operation
Received 403 performing mkcalendar at %@. Going to retry with new URL of %@
Ignoring 403 performing mkcalendar because the URL already looks like one we generated.
Pausing calendar refresh before sending caledar deletes to send any outstanding moves we have
Clearing move change at index %d
Saving move change for next time at index %d
Error moving event from %@ to %@: %@
move task included new schedule tag %@ and/or new etag %@
No new etag included in move task; we'll need to PROPFIND to get it
Couldn't find a moved item in the database with id %d
Moved item with id %d has no external ID (%@) or couldn't construct full URL from it
Error propfinding after a move for item %i to URL %@: %@
Got new schedule tag %@ and/or new etag %@ in propfind after move for item %i
Got neither etag nor schedule tag in propind after move for item id %i to %@
Got neither an etag nor a schedule tag for item with ID %i
Couldn't get a calendar URL for the moved event %d
Couldn't find an owning calendar for a moved event (%d).
Moving an event that has an external id set. Preferring that external ID (%@) to the one tombstoned on the move record (%@)
Sending a move request from %@ to %@
The source and destination URLs are equal. This could happen if you moved an event twice. We're just going to pretend we didn't see that.
Can't move event because we don't have both a source URL and destination URL. source is null = %{BOOL}d, dest is null = %{BOOL}d
Couldn't find a calendar item with uid %d to process a move operation.
No paused property refresh operation to continue
Error refreshing calendar properties for account %{public}@ error %@
Calendars properties were refreshed for account "%@" (%{public}@)
Calendar properties were updated. Saving the database
Preparing sync actions for calendar "%@"
Calendar "%@" needs to be synced (needsResync: %d, hasSyncActions: %d, hasItemsToReportJunk: %d, hasRecurrenceSplitActions: %d, isMergeSync: %d, hadSyncError: %d)
Calendars to refresh in this sync are: %@
Unexpected number of items in duplicate pair: %lu
Calendar ref is NULL for original calendar "%@" with URL %@. Will not attempt to remove duplicate.
Calendar ref is NULL for duplicate calendar "%@" with URL %@. Will not attempt to remove duplicate.
No store when removing duplicate calendar with UID %i ("%@" with URL %@). Will not attempt to remove duplicate.
Removing duplicate calendar with rowid %i and title %@; clearing ctag and synctoken for original calendar
Event put to server during this sync appears to have been deleted. Original row id = %i. external_id = %@
Removing event with external_id %@ and row id %i because it has the same external ID as an event that was put and subsequently deleted during this sync. (Original row id = %i)
Moved item has been deleted, but that moved item didn't have a new external ID, so we won't amend the change table for it. (eventID = %i, uniqueIdentier = %@, oldExternalID = %@)
Skipping refresh of inbox because this server doesn't support automatic scheduling
Syncing calendars: %@
Starting a calendar sync for "%@"
Error refreshing the calendar at %@: %@
Hit a precondition error while performing a bulk upload of events. Attempting a resync of the calendar
Hit a precondition error on our second bulk upload attempt. Waiting a bit before retrying again
We've backed off for too long. We're just giving up for now.
Calendar "%@" requested a resync, so we're going to sync it again
Found %lu events with modified attachments
Couldn't find event with UID %i even though it had attachment changes. Maybe it was deleted?
No attachments to upload for event %i
event %i has attachments to upload, but no calendar, so there's nothing we can do about that.
event %i has attachments to upload, its calendar (%i) isn't being refreshed so we can't do that right now
Couldn't get a URL for event %i, so its attachments won't be uploaded
All attachments to upload for event %i are already pending upload
Uploading (%ld) attachments, owner url = %{public}@, sync key = %{public}@, schedule tag = %{public}@
Unable to load file data for attachment %i (%@) from path %@. (%@) Attachment will not be uploaded.
Attachment %i (%@) has no local URL and will not be uploaded.
Attachment %i has no filename and will not be uploaded.
Not actually uploading any attachments (gathered %lu attachments with %lu types)
Attachment upload %p complete for %lu attachments with error = %@
Could not get an event for completed attachment upload %p.
Could not get updated etag for completed attachment upload %p. Updated schedule tag = %{public}@
Setting updated etag and schedule tag if needed for event due to completed attachment upload %p, etag = %{public}@, schedule tag = %{public}@, event external id = %{public}@
Not downloading attachments because the account is requires opening attachment as link %{public}@, %{public}@
Unable to get store; won't be able to download attachments.
Unable to get attachments without local files; won't be able to download attachments.
Kicking off a download of attachment with uuid %{public}@
Calendar collections were refreshed for account "%@" (%{public}@)
Cleaning out old calendar items
Removing events older than %@
Removing preferred calendar user addresses for calendar no longer in local store (%{public}@)
Failed to get a store. Will not clean up preferred user addresses per calendar
Error clearing calendar changes for account "%@" (%{public}@)
CalDAV refresh task failed with error %@
Refresh actor %s. Invoking result callback
Dispatching result callback on the main queue...
Result sent to actor. No cancellation completion block was set, so we're done here.
Error downloading an attachment %{public}@: %@
Completed download of attachment %{public}@
Clearing %li leftover changes of type %{public}@ for %{public}@.
Removing detachment (ROWID = %d) with duplicate UID (%{public}@)
There were no local items for this first time sync, so we're not going to match anything locally
Adding or modifying event with guid %@
ICSEvent has %lu detached events
Setting %d as the original event for %d
%d is already the original event for %d
Encountered an unknown ICSComponent in the subcomponents for: %@
Could not create CalEvent for %@.
Could not find local CalDAV calendar %@ for the account "%@" (%{public}@). Refusing to add event.
Adding or modifying todo with guid %@
Could not create CalTask for %@.
Could not find local CalDAV calendar %@ for the account "%@" (%{public}@). Refusing to add todo.
Could not create an ICSDocument from the data from the server: %@. Data: %@
Processing component %@
Event %@ can't be found in the same store since we PUT it. Don't save it when syncing.
Event %@ changed calendars in the same store since we PUT it. Updating event on new calendar
The event %@ already exists locally, so we're going to update it regardless of its start time
Error adding or modifying event with uid %@
Not applying event at %@ because it is outside of our time filter
component passed to processComponent: is NULL or not ICSEvent
******Database unlock requested. Saving the database to give a higher priority app a chance
Couldn't create a calendar for the event with uid %@
Removing event %@
Removing todo %@
Couldn't set an etag for the event action with url %@
Handling iTIP message at %@
The invite at %@ doesn't have a UID. Ignoring it, but we'll download it again later.
Setting Etag %@ for ServerID %@ and inviteUID %@
Could not find a store in the database with uid %@
Removing item action with url %@
Couldn't get a calendar action item to remove with url %@
Removing notification item with url %@
Couldn't get a calendar notification to remove with url %@
Gathering deleted notifications. Found %lu
Sending up a delete for the notification at URL %@
softlink:r:path:/System/Library/PrivateFrameworks/ReminderKit.framework/ReminderKit
MobileCalDAVAccount
CDBAccountInfo
NSObject
DACalDAVAccount
MobileCalDAVPrincipal
CoreDAVAccountInfoProvider
CoreDAVOAuthInfoProvider
CalDAVPrincipal
MobileCalUserAddress
MobileCalDAVDeletedItemContext
MobileCalDAVCalendar
CalDAVCalendar
CDBRecordIDMap
CalNSStringEmailAddressAdditions
DASearch
CalDAVDBHelper
CalDAVHTTPTrafficLog
MobileCalDAVAttachmentUploadInfo
MobileCalDAVAccountRefreshActor
CalDAVAccountPropertyRefreshDelegate
CoreDAVTaskGroupDelegate
CalDAVCalendarPropertyRefreshDelegate
CalDAVCalendarSyncDelegate
CalDAVAccountDelegatesRefreshDelegate
MobileCalDAVAccountRefreshActorAttachmentDownloadDelegate
DAEventsAttachmentDownloadConsumer
CalDAVRefreshContext
CalDAVDBChangeTrackingHelper
DACalDAViCalItem
ICSDocumentParseDelegate
CoreDAVLeafDataPayload
DADataElement
CalDAVCalendarItemProtocol
MobileCalDAVInboxCalendar
MobileCalDAVSubscribedCalendar
CalDAVSubscribedCalendar
CalDAVPrincipalResult
CalDAVMove
MobileCalDAVNotificationCalendar
CalDAVAccountDelegatesRefreshOperation
ShareeConversion
MobileCalDAVPollCalendar
MobileCalDAVDelegateUserInfo
initWithWeeks:days:hours:minutes:seconds:
accountPropertyForKey:
filterUsingPredicate:
path
insertObject:atIndex:
report
setWithArray:
versionWithPropertyValue:
changeTrackingID
syncCalendar
isWritableFileAtPath:
count
requiresOpeningAttachmentAsLink
finishCoreDAVTaskGroupWithError:delegateCallbackBlock:
setNotificationCollectionSync:
syncEndedForStoreWithExternalID:withError:
instancesRespondToSelector:
initWithAccountInfoProvider:principalURL:taskManager:
pathExtension
rangeOfString:
setServerSupportsExpandPropertyReport:
finishEarlyWithError:
stringWithFormat:
countByEnumeratingWithState:objects:count:
accountType
setWithCapacity:
intValue
setAuthenticationType:
initWithAccountInfoProvider:resourceURL:attachments:contentTypes:taskManager:
setWithObject:
CDVfixedURLByAppendingPathComponent:
accountTypeWithAccountTypeIdentifier:
initWithAccountInfoProvider:taskManager:httpPorts:httpsPorts:httpServiceString:httpsServiceString:wellKnownPaths:requiredComplianceClass:
stringWithUTF8String:
rangeOfString:options:range:
resourceSpecifier
firstHref
integerValue
syncStartedForStoreWithExternalID:
childAccountsWithAccountTypeIdentifier:
setWithObjects:
initWithAccountType:
setObject:forKey:
action
readOnlyPrincipalDetails
resourceURL
setCalPushDisabled:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
payloadAsFullURL
setX_apple_default_alarm:
setFetchPrincipalSearchProperties:
interval
firstObject
setObject:forKeyedSubscript:
submitIndependentCoreDAVTask:
actionFromICSString:
createNoneAlarm
initWithAction:context:
readWritePrincipalDetails
responseHeaders
setShouldDoInitialAutodiscovery:
calCloseDatabaseForAccountID:save:
setCalRefreshInterval:
systemTimeZone
reattainPowerAssertionsForGroupIdentifier:
payloadAsOriginalURL
responses
CDVURLByDeletingLastPathComponent
fixEndDates:
calDAVRemindersForAll
payloadAsString
dictionary
setCalendar:
sharedLogger
inviteStatus
lastPathComponent
CDVObjectForKeyCaseInsensitive:
dictionaryWithCapacity:
calDatabaseForAccountID:
sharedLogging
null
freq
timeInterval
persistentUUID
setCalendarExternalIdentifier:
length
sharedPowerAssertionManager
dictionaryWithDictionary:
substringFromIndex:
addCalendarCollectionSync:
calOpenDatabaseForAccountID:clientID:
SubCalFilterAlarmsKey
dictionaryWithObjects:forKeys:count:
resultTypeForRecordType:
recurrenceDate
sharedRunLoop
timeIntervalSinceDate:
currentHandler
SubCalSubscriptionURLKey
addCalendarItemSync:
calPushDisabled
successfulPropertiesToValues
setHost:
ICSStringWithOptions:
numberWithBool:
retainPowerAssertion:withGroupIdentifier:
timeIntervalSinceNow
summary
calRefreshInterval
initWithCalendar:
setShouldUseOpportunisticSockets:
powerAssertionRetainCount:
SubCalTitleKey
timeZoneWithName:
setCalendarTitle:
getCFRunLoop
setParentAccount:
initWithCalendarIdentifier:
localTimeZone
calSaveDatabaseAndFlushCachesForAccountID:
URLByAppendingPathComponent:
predicateWithBlock:
numberWithDouble:
distantFuture
localizedStringForKey:value:table:
setIdentifierOnServer:
numberWithInt:
supportsAutoSchedule
isDurationBased
calSaveDatabaseForAccountID:
preferred
shouldDoInitialAutodiscovery
logSnippet:
transactionId
supportsCalendarAudit
numberWithInteger:
addEntriesFromDictionary:
setInboxCollectionSync:
da_absoluteURLForChildLeastInfoRepresentationRelativeToParentURL:
trigger
domain
code
handleFailureInFunction:file:lineNumber:description:
refreshCalendarProperties
supportsCalendarHomeSync
setPort:
da_appendSlashIfNeeded
URLWithString:
addLogDelegate:forAccountInfoProvider:
preferredAddress:
numberWithLong:
rrule
cal_serializableError
handleFailureInMethod:object:file:lineNumber:description:
doubleValue
saveAccountProperties
supportsCalendarProxy
longValue
da_hasPrefixCaseInsensitive:
UUID
type
calendar
initWithCapacity:
isEnabledForDataclass:
addNotificationSync:
dropAssertionsAndRenewCredentialsInQueue:withHandler:
lowercaseString
commonName
DACompactDescription
addObject:
objectAtIndexedSubscript:
supportsCalendarRecurrenceSplit
saveAccountPropertiesWithError:
da_isEqualToDAVURL:
UUIDString
tzid
addObjectsFromArray:
objectForKey:
da_leastInfoStringRepresentationRelativeToParentURL:
dropPowerAssertionsForGroupIdentifier:
initWithData:encoding:options:delegate:error:
objectForKeyedSubscript:
da_newGUID
addObserver:selector:name:object:
initWithData:filename:scheduleChanges:
uidForCreatedSeries
dtend
setPreferredUserAddress:
isEqualToDictionary:
initWithDomain:code:userInfo:
unionSet:
da_pathWithoutTrailingRemovingSlash
componentForKey:
dtstamp
initWithDuration:
da_removeSlashIfNeeded
oldAccountProperties
addUsernameToURL:
setPreviousETag:
isEqualToString:
componentKeys
dtstart
initWithFilename:
supportsInboxAvailability
refreshProperties
setPreviousScheduleTag:
da_trimWhiteSpace
hasPrefix:
setComponents:options:
da_urlByRemovingUsername
supportsManagedAttachments
componentOccurrencesForKey:
setConsumer:forTask:
unpackCalDAVUserAdress:
initWithFormat:
preferredUserAddress
registerDefaultLoggerWithCoreDAV
hasSuffix:
components
duration
supportsManagedSubscriptionCalendars
searchContext
da_urlBySettingPath:
initWithFormat:arguments:
orderedResponses
setTimeoutInterval:
registerWithiCalendar
components:fromDate:
makeUID
until
supportsParticipantRoles
initWithHREF:commonName:inviteStatus:access:
da_urlBySettingUsername:
organizer
shouldUseDeleteAndAddInsteadOfMoveBetweenCalendars
compressRequests
hasTimeComponent
supportsPrivateComments
relatedTo
searchQuery:finishedWithError:
initWithIdentifier:
setTrigger:
setProdid:
enableAutomaticAttachmentDownloads
relativePath
allKeys
supportsPrivateEvents
searchQuery:returnedResults:
dataUsingEncoding:
initWithNameSpace:name:parseClass:
setCuAddresses:
shutdown
consumer
minusSet:
allObjects
searchString
supportsPropertySearch
initWithPrincipal:
dataWithContentsOfURL:options:error:
consumerForTask:
hostFromEmail
releasePowerAssertion:
sortedArrayUsingComparator:
allValues
date
enumerateKeysAndObjectsUsingBlock:
initWithPrincipal:calendar:nextCtag:nextSyncToken:
sortedArrayUsingSelector:
containsObject:
multiStatus
href
serverHeaders
dateByAddingComponents:toDate:options:
enumerateObjectsUsingBlock:
setDay:
updatedETag
removeAccount:withDeleteSync:completion:
startTaskGroup
processMessages:withDatabase:calStore:accountInfo:handledEventCallback:cancellationToken:
allowedCalendars:contains:
supportsRequestCompression
hrefs
initWithPropertiesToFind:atURL:withDepth:
setDelegate:
dateByAddingTimeInterval:
mutableCopy
removeAllObjects
continueRefreshFromSendingDeletes
alwaysUseCalendarHomeSync
supportsSharing
initWithResourceURL:recurrenceDate:uidForCreatedSeries:floating:allday:
errorWithDomain:code:userInfo:
dateByAddingUnit:value:toDate:options:
updatedScheduleTag
processNotificationWithData:serverURL:syncKey:database:notificationCalendar:store:calendarHomeURL:notificationCalendarURL:contactsProvider:recordIDMap:
array
supportsSharingNoScheduling
name
dateFromComponents:
uppercaseString
ICSDataWithOptions:
callStackSymbols
absoluteString
copy
identifier
event
supportsSubscriptionCalendars
initWithSearchStrings:searchTypes:serverSupportSet:atURL:
namespaceAndNameForWellKnownType:
arrayWithObjects:
dateWithTimeInterval:sinceDate:
removeConsumerForTask:
statusReport
acceptedURL
arrayWithObjects:count:
supportsSubscriptionMirroring
propertiesForName:
setUrl:
setAccountInfoProvider:
access
initWithSourceURL:destinationURL:
propertyListFromData:mutabilityOption:format:errorDescription:
attendee
setUseCalendarHomeSyncReport:
removeLogDelegate:forAccountInfoProvider:
CDVObjectForKeyWithNameSpace:andName:
stringByAddingPercentEscapesUsingEncoding:
initWithStringProperties:
supportsTelephone
setAccountIntProperty:forKey:
accessLevel
backingAccountInfo
setUseSSL:
propertyValue
cancelTask:
removeObject:
setDirection:
supportsTimeRangeFilter
packCalDAVUserAdress:
stringByAppendingPathExtension:
setAction:
defaultCenter
initWithTimeIntervalSinceReferenceDate:
cancelTaskGroup
setUsername:
userFromEmail
fileExistsAtPath:isDirectory:
removeObjectForKey:
stringByAppendingString:
account:isValid:validationError:
propertyWithItem:
supportsTimeRangeFilterOnInbox
setActive:
defaultManager
beginDownloadingAttachmentWithUUID:consumer:
parameterValueForName:
publicDescription
setScheduleagent:
initWithType:subtype:context:
removeObserver:name:object:
stringByDeletingLastPathComponent
boolValue
supportsTimeRangeFilterWithoutEndDate
parentAccount
setSearchContext:
filenameWithBasename:
value
cdvArrayWithIntegers:
initWithUUIDString:
setValue:forKey:
defaultProvider
setDownloadedData:
stringByExpandingTildeInPath
parseableDocumentFromICS:
supportsWellKnownType:
valueForKey:
isValidating
initWithValue:
initWithAccount:
accountIntPropertyForKey:
filenamesToServerLocation
stringByReplacingOccurrencesOfString:withString:
bundleForClass:
CalDAVSubscribedCalendarsKey
setEmailAddress:
versionWithHTTPHeaders:
stringProperties
initWithBackingAccountInfo:
dealloc
upgradeAccount
setPrincipalURL:
setAccountDescription:
compare:
host
username
accountDescription
triggerSyncForDataAccessAccountsWithAccountIDs:
accountHasSignificantPropertyChangesWithChangeInfo:
defaultAlarmOffsetFromICSString:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
addressIsAccountOwner:
mainPrincipal
setMainPrincipal:
subscribedCalendars
setSubscribedCalendars:
T@"<CalDAVPrincipal>",&,N
T@"NSDictionary",&,N
ingestBackingAccountInfoProperties
init
principals
movedItemURLStrings
itemIDsToMoveActions
emailAddresses
preferredAddress
_setParentAccount:
delegatePrincipalPath
setDelegatePrincipalPath:
useKerberos
setUseKerberos:
setOverriddenServer:
overriddenServer
setOverriddenPort:
overriddenPort
setOverriddenScheme:
overriddenScheme
principalPath
setPrincipalPath:
serverBaseURL
noteHomeSetOnDifferentHost:
collectionSetURL
setCollectionSetURL:
setSearchPropertySet:
isWritable
setIsWritable:
wasMigrated
setWasMigrated:
addCalendar:
removeCalendar:
removeCalendarWithURL:
calendars
_foundDuplicateCalendar:ofCalendar:
_logDuplicateCalendarDetails:
_foundDuplicateCalendars:
duplicateCalendars
reloadCalendars
addPrincipal:
removePrincipal:
serverVersion
setServerVersion:
viewedTimeZone
shouldFilterEventSyncTimeRange
shouldFilterSyncTimeRangeForInbox
supportsReminders
supportsEvents
taskManager
shouldUseCalendarHomeSyncReport
refreshInterval
setRefreshInterval:
pushDisabled
setPushDisabled:
_calendarConstraintsName
copyCalStore
calendarHomeSyncToken
setCalendarHomeSyncToken:
_updateCalendarStoreProperties:
_updateCalendarStoreWithAlreadyOpenDBShouldCreate:syncingThisAccount:
_updateCalendarStore:
externalInfoDictionary
spinnerIdentifiers
_setSpinning:
syncStarted
syncEndedWithError:
cancelRefreshWithCompletion:
_clearOrphanedCalendarItemChangesOfType:withContext:goodCalendarIds:
_clearOrphanedChangesWithChangesCall:entityType:withContext:
_clearOrphanedChangesWithContext:
_saveModifiedSubscribedCalendarsOnBackingAccount
_saveModifiedPrincipalsOnBackingAccount
saveModifiedPropertiesOnBackingAccount
refreshActor:didCompleteWithError:
_collectActionsFromMoveDictionary:forDataclass:outShouldSave:
_collectMoveActions
refreshWithContext:
childAccountWithIdentifier:
updateDelegates
task:didFinishWithError:
_reallyPerformSearchQuery:
_reallyCancelSearchQuery:
_reallyCancelAllSearchQueries
_reallySearchQueriesRunning
discoveryTask:gotAccountInfo:error:
wellKnownPaths
httpPorts
httpsPorts
portListByInsertingUserEnteredPort:
retryDiscoveryTask:
discoverInitialPropertiesWithConsumer:
performDiscoveryWithHostname:username:consumer:
_powerAssertionContext
_powerAssertionGroupIdentifier
retainPowerAssertion
releasePowerAssertion
dropPowerAssertions
reattainPowerAssertions
isCalDAVAccount
isDelegateAccount
setIsDelegateAccount:
isEqualToAccount:
calendarsDataclassModified
localizedIdenticalAccountFailureMessage
localizedInvalidPasswordMessage
onBehalfOfBundleIdentifier
addToCoreDAVLoggingDelegates
removeFromCoreDAVLoggingDelegates
logHandle
shouldLogTransmittedData
coreDAVLogTransmittedDataPartial:
coreDAVTransmittedDataFinished
mPrincipals
setMPrincipals:
mItemIDsToMoveActions
setMItemIDsToMoveActions:
mMovedItemURLStrings
setMMovedItemURLStrings:
mCalendars
setMCalendars:
preferredEventDaysToSync
setPreferredEventDaysToSync:
preferredToDoDaysToSync
setPreferredToDoDaysToSync:
delegateUserInfos
setDelegateUserInfos:
searchPropertySet
needsAccountPropertyRefresh
setNeedsAccountPropertyRefresh:
isRefreshing
setIsRefreshing:
refreshContext
setRefreshContext:
searchQueriesShouldCancel
setSearchQueriesShouldCancel:
checkValidityTaskGroup
setCheckValidityTaskGroup:
actor
setActor:
isSpinning
setIsSpinning:
searchTaskSet
setSearchTaskSet:
coreDAVLogger
setCoreDAVLogger:
subscribedCalendarsChanged
setSubscribedCalendarsChanged:
.cxx_destruct
_wasMigrated
_principals
_itemIDsToMoveActions
_mMovedItemURLStrings
_calendars
_duplicateCalendars
_serverVersion
_usernameForDiscovery
_hostForDiscovery
_syncInProgress
_needsAccountPropertyRefresh
_isRefreshing
_searchQueriesShouldCancel
_isSpinning
_subscribedCalendarsChanged
_preferredEventDaysToSync
_preferredToDoDaysToSync
_movedItemURLStrings
_mainPrincipal
_delegateUserInfos
_searchPropertySet
_refreshContext
_checkValidityTaskGroup
_actor
_searchTaskSet
_coreDAVLogger
T@"CoreDAVDiscoveryTaskGroup",&,N,V_checkValidityTaskGroup
T@"MobileCalDAVAccountRefreshActor",&,N,V_actor
TB,N,V_isSpinning
T@"NSMutableSet",&,N,V_searchTaskSet
T@"DACoreDAVLogger",&,N,V_coreDAVLogger
T@"NSMutableDictionary",&,N,V_principals
T@"NSMutableDictionary",&,N,V_itemIDsToMoveActions
T@"NSMutableSet",&,N,V_movedItemURLStrings
T@"NSMutableSet",&,N,V_calendars
TB,N,V_subscribedCalendarsChanged
T@"MobileCalDAVPrincipal<CalDAVPrincipal>",&,N,V_mainPrincipal
T@"NSDictionary",R,N
T@"NSDictionary",&,N,V_delegateUserInfos
T@"DACoreDAVTaskManager",R,N
T@"NSURL",&,N
T@"CalDAVPrincipalSearchPropertySet",&,N,V_searchPropertySet
T@"NSString",&,N
Ti,N
Td,N
TB,N
TB,N,V_needsAccountPropertyRefresh
TB,N,V_isRefreshing
T@"NSSet",R,N
T@"NSString",C,N
T@"CalDAVServerVersion",&,N,V_serverVersion
Ti,N,V_preferredEventDaysToSync
Ti,N,V_preferredToDoDaysToSync
T@"NSTimeZone",R,N
TB,R,N
T@"CalDAVRefreshContext",&,N,V_refreshContext
T@"NSURL",R,N
T@"NSArray",R,N
TB,N,V_searchQueriesShouldCancel
shouldSendClientInfoHeaderForURL:
compareAddressURL:localString:
alarmICSStringFromOffset:
scheme
port
serverRoot
user
password
identityPersist
principalURL
accountID
serverComplianceClasses
userAgentHeader
promptUserForNewCoreDAVPasswordWithCompletionBlock:
handleCertificateError:
shouldFailAllTasks
additionalHeaderValues
customConnectionProperties
clientCertificateInfoProvider
oauthInfoProvider
handleTrustChallenge:completionHandler:
handleAuthenticateAgainstProtectionSpace:
shouldRetryUnauthorizedTask:
handleShouldUseCredentialStorage
shouldHandleHTTPCookiesForURL:
shouldTurnModalOnBadPassword
shouldTryRenewingCredential
renewCredential
noteSuccessfulRequestWithNumDownloadedElements:forTask:
noteFailedNetworkRequestForTask:
noteFailedProtocolRequestForTask:
noteTimeSpentInNetworking:forTask:
noteSuccessfulRequestWithNumDownloadedElements:
noteFailedNetworkRequest
noteFailedProtocolRequest
noteTimeSpentInNetworking:
copyStorageSession
shouldUseOpportunisticSockets
shouldCompressRequests
clientTokenRequestedByServer
clientToken
webLoginRequestedAtURL:reasonString:inQueue:completionBlock:
getAppleIDSession
newOAuth1CredentialForChallenge:
oauth2Token
oauthVariant
calendarOfType:atURL:withOptions:
removecalendarWithURL:
account
preferredCalendarUserAddresses
setPreferredCalendarUserAddresses:
fullName
setFullName:
calendarHomeURL
setCalendarHomeURL:
defaultCalendarURL
setDefaultCalendarURL:
notificationCollectionURL
setNotificationCollectionURL:
notificationCollectionCTag
setNotificationCollectionCTag:
inboxURL
setInboxURL:
inboxCTag
setInboxCTag:
outboxURL
setOutboxURL:
dropBoxURL
setDropBoxURL:
notificationURLString
setNotificationURLString:
pushTransports
setPushTransports:
calendarHomePushKey
setCalendarHomePushKey:
quotaFreeBytes
setQuotaFreeBytes:
supportedCalendarComponentSets
setSupportedCalendarComponentSets:
isDelegate
setIsDelegate:
canCreateCalendars
setCanCreateCalendars:
isEnabled
setIsEnabled:
isMergeSync
isEnabledForEvents
isEnabledForTodos
eventFilterStartDate
eventFilterEndDate
isExpandPropertyReportSupported
setIsExpandPropertyReportSupported:
supportsFreebusy
setSupportsFreebusy:
supportsCalendarUserSearch
setSupportsCalendarUserSearch:
supportsExtendedCalendarQuery
addedCalendars
modifiedCalendars
deletedCalendarURLs
prepareCalendarsForSyncWithCompletionBlock:
defaultEventCalendarTitle
defaultTodoCalendarTitle
defaultTimedAlarms
setDefaultTimedAlarms:
defaultAllDayAlarms
setDefaultAllDayAlarms:
alarmsDirty
setAlarmsDirty:
needsDefaultTimedAlarmUpdate
setNeedsDefaultTimedAlarmUpdate:
needsDefaultAllDayAlarmUpdate
setNeedsDefaultAllDayAlarmUpdate:
T@"NSString",R,N
T@"<CalDAVAccount>",R,N
T@"<CoreDAVTaskManager>",R,N
T@"NSSet",&,N
T@"NSNumber",&,N
T@"NSDateComponents",R,N
initWithConfiguration:principalUID:account:
configuration
daAccount
_userAddressSet:isEqualToSet:
calendarUserAddresses
subCalPropertiesByURL
_eventSyncEndDate
_startDateFromDaysToSync:
setSupportsSyncToken:
updatePropertiesFromCalStore:
updateAddedOrModifiedSubscribedCalendars:
clearCalendarChanges
calendarUserAddressesPerCalendar
preferredCalendarUserAddressesForCalendar:
removePreferredCalendarUserAddressesForCalendarWithIdentifier:
setPreferredCalendarUserAddresses:forCalendar:
setSupportsPush:
setCalendarsAreDirty:
calendarsAreDirty
setIsDirty:
APSTopic
APSSubscriptionURL
APSEnv
preferredCalendarUserAddress
preferredCalendarEmailAddress
preferredCalendarPhoneNumber
hasCalendarUserAddress:
calendarUserAddressIsEquivalentToURL:
useSSL
noteSuccessfulRequestWithNumDownloadedElements:numUploadedElements:
setDeletedCalendarURLs:
setUid:
setAccount:
isManuallyConfigured
setIsManuallyConfigured:
supportsSyncToken
supportsPush
shouldRefreshPrincipalSearchProperties
setShouldRefreshPrincipalSearchProperties:
shouldUpdatePushDelegate
setShouldUpdatePushDelegate:
isDirty
setPreferredCalendarUserAddress:
setPreferredCalendarEmailAddress:
setPreferredCalendarPhoneNumber:
setAddedCalendars:
setModifiedCalendars:
calendarChangesToClear
setCalendarChangesToClear:
legacy_principalURL
setLegacy_principalURL:
appleIDSession
setAppleIDSession:
_calendarUserAddressesPerCalendar
_calendarsAreDirty
_needsDefaultTimedAlarmUpdate
_needsDefaultAllDayAlarmUpdate
_alarmsDirty
_isDelegate
_isWritable
_isEnabled
_canCreateCalendars
_isManuallyConfigured
_isExpandPropertyReportSupported
_supportsCalendarUserSearch
_supportsFreebusy
_supportsSyncToken
_supportsPush
_shouldRefreshPrincipalSearchProperties
_shouldUpdatePushDelegate
_isDirty
_calendarHomeURL
_deletedCalendarURLs
_notificationCollectionURL
_notificationCollectionCTag
_inboxURL
_outboxURL
_dropBoxURL
_defaultCalendarURL
_defaultTimedAlarms
_defaultAllDayAlarms
_uid
_account
_preferredCalendarUserAddresses
_fullName
_principalPath
_inboxCTag
_notificationURLString
_pushTransports
_calendarHomePushKey
_quotaFreeBytes
_supportedCalendarComponentSets
_preferredCalendarUserAddress
_preferredCalendarEmailAddress
_preferredCalendarPhoneNumber
_addedCalendars
_modifiedCalendars
_calendarChangesToClear
_legacy_principalURL
_appleIDSession
T@"NSString",&,N,V_uid
T@"<CalDAVAccount>",W,N,V_account
T@"MobileCalDAVAccount",R,N
T@"NSURL",&,N,V_preferredCalendarUserAddress
T@"NSString",&,N,V_preferredCalendarEmailAddress
T@"NSString",&,N,V_preferredCalendarPhoneNumber
T@"NSMutableSet",&,N,V_deletedCalendarURLs
T@"NSSet",&,N,V_addedCalendars
T@"NSSet",&,N,V_modifiedCalendars
T@"NSArray",&,N,V_calendarChangesToClear
T@"NSURL",&,N,V_legacy_principalURL
T@"AKAppleIDSession",&,N,V_appleIDSession
T@"NSSet",&,N,V_preferredCalendarUserAddresses
T@"NSString",&,N,V_fullName
T@"NSURL",&,N,V_calendarHomeURL
T@"NSString",&,N,V_principalPath
T@"NSURL",&,N,V_defaultCalendarURL
T@"NSURL",&,N,V_notificationCollectionURL
T@"NSString",&,N,V_notificationCollectionCTag
T@"NSURL",&,N,V_inboxURL
T@"NSString",&,N,V_inboxCTag
T@"NSURL",&,N,V_outboxURL
T@"NSURL",&,N,V_dropBoxURL
T@"NSString",&,N,V_notificationURLString
T@"NSDictionary",&,N,V_pushTransports
T@"NSString",&,N,V_calendarHomePushKey
T@"NSNumber",&,N,V_quotaFreeBytes
T@"NSString",&,N,V_supportedCalendarComponentSets
TB,N,V_isDelegate
TB,N,V_isWritable
TB,N,V_isEnabled
TB,N,V_canCreateCalendars
TB,N,V_isManuallyConfigured
TB,N,V_isExpandPropertyReportSupported
TB,N,V_supportsCalendarUserSearch
TB,N,V_supportsFreebusy
TB,N,V_supportsSyncToken
TB,N,V_supportsPush
T@"NSString",&,N,V_defaultTimedAlarms
T@"NSString",&,N,V_defaultAllDayAlarms
TB,N,V_shouldRefreshPrincipalSearchProperties
TB,N,V_shouldUpdatePushDelegate
TB,N,V_isDirty
TB,N,V_calendarsAreDirty
TB,N,V_alarmsDirty
TB,N,V_needsDefaultTimedAlarmUpdate
TB,N,V_needsDefaultAllDayAlarmUpdate
userAddress:forAccount:
userAddressFromDictionaryRepresentation:forAccount:
initWithAddress:account:
dictionaryRepresentation
address
setAddress:
_address
T@"NSURL",C,N,V_address
T@"MobileCalDAVAccount",W,N,V_account
rowid
setRowid:
entityType
setEntityType:
_entityType
_rowid
T@"NSNumber",&,N,V_rowid
Ti,N,V_entityType
_dropCalStoreContext
calendarWithCalCalendar:principal:
calURLToUIDCache
cacheCalendarUID:forCalendarURLString:
removeUIDCacheEntryForCalendarURLString:
cachedCalendarUIDForURLString:
clearCalendarUIDCache
gatherCalendarChangesInPrincipal:calendars:adds:modifies:deletes:changeTracker:
shouldSkipCalendar:withChangeType:
shouldSkipAddedCalendar:
shouldSkipModifiedCalendar:
processAddedCalendar:
processModifiedCalendar:oldFlags:newFlags:
clearCalendarChanges:forPrincipal:changeTrackingClient:
etagsForItemURLs:
setEtag:forItemAtURL:
setScheduleTag:forItemAtURL:
setURL:forResourceWithUUID:
updateResourcesFromServer:
deleteResourcesAtURLs:
hasCalendarUserAddressEquivalentToURL:
principal
guid
setGuid:
calendarURL
setCalendarURL:
title
setTitle:
notes
setNotes:
color
setColor:
symbolicColorName
setSymbolicColorName:
pushKey
setPushKey:
owner
setOwner:
ownerDisplayName
setOwnerDisplayName:
publishURL
setPublishURL:
prePublishURL
setPrePublishURL:
timeZone
setTimeZone:
bulkRequests
setBulkRequests:
order
setOrder:
sharingStatus
setSharingStatus:
sharees
setSharees:
isTaskContainer
setIsTaskContainer:
isEventContainer
setIsEventContainer:
isSubscribed
setIsSubscribed:
isManagedByServer
setIsManagedByServer:
isScheduleInbox
setIsScheduleInbox:
isScheduleOutbox
setIsScheduleOutbox:
isNotification
setIsNotification:
isPoll
setIsPoll:
isEditable
setIsEditable:
isRenameable
setIsRenameable:
isPublished
setIsPublished:
isAffectingAvailability
setIsAffectingAvailability:
canBePublished
setCanBePublished:
canBeShared
setCanBeShared:
isFamilyCalendar
setIsFamilyCalendar:
isMarkedUndeletable
setIsMarkedUndeletable:
isMarkedImmutableSharees
setIsMarkedImmutableSharees:
wasModifiedLocally
setWasModifiedLocally:
needsResync
setNeedsResync:
ctag
setCtag:
syncToken
setSyncToken:
needsPublishUpdate
syncActions
shareeActions
itemsToReportAsJunk
uuidsToAddActions
hrefsToModDeleteActions
allItemURLs
appSpecificCalendarItemClass
prepareMergeSyncActionsWithCompletionBlock:
clearShareeActions
syncDidFinishWithError:
putAction:completedWithError:
deleteAction:completedWithError:
recurrenceSplitAction:completedWithUpdatedETag:updatedScheduleTag:createdURL:createdETag:createdScheduleTag:
recurrenceSplitAction:failedWithError:
recurrenceSplitActionsCompletedWithError:
recurrenceSplitActions
maxAttendees
setMaxAttendees:
needsIsAffectingAvailabilityUpdate
lastSyncTitle
setLastSyncTitle:
T@"<CalDAVPrincipal>",R,N
T@"NSTimeZone",&,N
Tq,N
setUniqueIdentifier:forRecordID:
recordIDForUniqueIdentifier:
setExternalIdentifier:forRecordID:
recordIDForExternalIdentifier:
initWithCalendarURL:calendar:principal:title:
initWithCalendarURL:principal:title:
initWithCalendarURL:principal:
deleteCalendar
daPrincipal
setPrincipal:
_setSupportsEvents:supportsTodos:
_preferredAddress
ownerEmailAddress
ownerPhoneNumber
_forceRefreshNextSync
calendarCollectionSyncDiagnostics
_copyCalItemWithUniqueIdentifier:inCalendar:orStore:
_copyCalItemWithExternalID:
removeInvitationsForItemWithUniqueIdentifier:
correctLocationPredictionStateForRecurrenceSets:calDB:
_isDeleted:
_removeCalendarItemWithURL:
hasEvents
isHidden
displayColor
newlyAddedItems
setNewlyAddedItems:
_updateCalendarInfo
initCalCalendarWithTitle:
calCalendar
getCalCalendar
_calExternalRep
mustCalendarBeReadOnly
shouldCalendarBeHidden
_itemPropertyDictForItemAtIndex:withChangedIDs:withChangedRowids:withExternalIDs:uniqueIdentifiers:significantAttributeChanges:oldCalendarIDs:entityType:
copyAllItems
_addCalendarItemWithRowID:toArrayIfNeeded:withChangeRowid:changeType:
_addAddedItemsOfType:toArray:
copyAddedItems
_gatherModifiedItemsFromCalChangesCall:forType:inArray:
_gatherModifiedEventsInArray:
_gatherModifiedTasksInArray:
copyModifiedItems
_addAddedRecurrenceSplitItemsToArray:
copyRecurrenseSplitItems
_gatherDeletedChanges:inDictionary:
copyDeletedItems
_copyDeletedEventActions
clearEventChanges
clearChangesForEntityType:
addChangesToBeCleared:forEntityType:
_clearChangesAtIndices:forType:
_clearChangesFromItem:
_clearChangesFromItem:shouldClearAttachmentChanges:
_saveChangesAtIndices:forType:
_saveChangesForItem:
_isItemJunk:
_resourceURLsForJunkItemsInModifiedItems:alreadySentItems:
_recurrenceSplitActionsForItems:alreadySentItems:
_createActionsForItems:withAction:alreadySentItems:createServerIDs:shouldSave:
_shouldRecordError:
_clearExistingHTTPErrorForCalItem:
_recordError:forCalItem:
hasCalendarErrorOfType:
clearCalendarErrorOfType:
recordCalendarError:ofType:
_addShareeWithRowID:toDictionaryIfNeeded:
_collectShareeActions
prepareSyncActionsWithCompletionBlock:
createSyncActions
generateICSForActions
recordDiagnosticsForAccountSync:
flushCaches
calendarURLString
setCalendarURLString:
didResync
setDidResync:
setNeedsPublishUpdate:
numDownloadedElements
setNumDownloadedElements:
numUploadedElements
setNumUploadedElements:
changeTracker
setChangeTracker:
setNeedsIsAffectingAvailabilityUpdate:
setCalendarCollectionSyncDiagnostics:
deletedCalendarItems
setDeletedCalendarItems:
setSyncActions:
setShareeActions:
setItemsToReportAsJunk:
setRecurrenceSplitActions:
setHrefsToModDeleteActions:
setUuidsToAddActions:
uniqueIdentifierToRecordIDMap
setUniqueIdentifierToRecordIDMap:
URLToRecordIDMap
setURLToRecordIDMap:
URLToEtagMap
setURLToEtagMap:
_principal
_calCalendar
_changesToClear
_deletedExternalIDs
_calendarURLString
_newlyAddedItems
_isScheduleOutbox
_wasModifiedLocally
_needsResync
_didResync
_needsPublishUpdate
_needsIsAffectingAvailabilityUpdate
_guid
_lastSyncTitle
_numDownloadedElements
_numUploadedElements
_changeTracker
_calendarCollectionSyncDiagnostics
_deletedCalendarItems
_syncActions
_shareeActions
_itemsToReportAsJunk
_recurrenceSplitActions
_hrefsToModDeleteActions
_uuidsToAddActions
_uniqueIdentifierToRecordIDMap
_URLToRecordIDMap
_URLToEtagMap
T@"MobileCalDAVPrincipal",R,N
T@"CalDiagCalendarCollectionSync",&,N,V_calendarCollectionSyncDiagnostics
T@"<CalDAVPrincipal>",W,N
T^v,R,N
T@"NSString",&,N,V_calendarURLString
T@"NSMutableDictionary",&,N,V_deletedCalendarItems
T@"NSArray",&,N,V_syncActions
T@"NSArray",&,N,V_shareeActions
T@"NSArray",&,N,V_itemsToReportAsJunk
T@"NSArray",&,N,V_recurrenceSplitActions
T@"NSDictionary",&,N,V_hrefsToModDeleteActions
T@"NSDictionary",&,N,V_uuidsToAddActions
T@"NSMutableDictionary",&,N,V_uniqueIdentifierToRecordIDMap
T@"NSMutableDictionary",&,N,V_URLToRecordIDMap
T@"NSMutableDictionary",&,N,V_URLToEtagMap
T@"NSString",&,N,V_guid
T@"NSString",&,N,V_lastSyncTitle
TB,N,V_isScheduleOutbox
TB,N,V_wasModifiedLocally
TB,N,V_needsResync
TB,N,V_didResync
TB,N,V_needsPublishUpdate
TQ,N,V_numDownloadedElements
TQ,N,V_numUploadedElements
T@"CalDAVDBChangeTrackingHelper",&,N,V_changeTracker
T@"NSArray",&,N
TB,N,V_needsIsAffectingAvailabilityUpdate
hasMailto
resemblesEmailAddress
stringAddingMailto
stringRemovingMailto
convertToDAContactSearchResultElement
sharedInstanceForAccountType:creatingClass:
sharedInstance
instance
enabled
logString:
finishSnippets
logStringWithFormat:
logData:
curLogger
setCurLogger:
_curLogger
T@"DACoreDAVLogger",&,N,V_curLogger
itemURL
setItemURL:
syncKey
setSyncKey:
scheduleTag
setScheduleTag:
calAttachmentsToUpload
setCalAttachmentsToUpload:
_itemURL
_syncKey
_scheduleTag
_calAttachmentsToUpload
T@"NSURL",&,N,V_itemURL
T@"NSString",&,N,V_syncKey
T@"NSString",&,N,V_scheduleTag
T@"NSArray",&,N,V_calAttachmentsToUpload
taskGroup:didFinishWithError:
propertyRefreshForPrincipal:completedWithError:
calendarRefreshForPrincipal:completedWithNewCTags:newSyncTokens:calendarHomeSyncToken:updatedCalendars:error:
calendarRefreshShouldRetryMkCalendarForPrincipal:calendar:error:
calendarRefreshFoundUpdatedContainerWithIgnoredEntityType:
calendarRefreshFoundUpdatedSpecialContainer:
calendarRefreshFoundDeletedContainerURL:
calendarRefreshWillRefreshCalendar:
calendarRefreshPropPatchFinishedWithError:forCalendar:
calendarRefreshWillSendCalendarDeletes:
calendarSyncForPrincipal:calendar:completedWithError:
delegateRefreshForPrincipal:completedWithError:
initWithAccount:context:
_teardownAllOutstandingOperations
cancelWithCompletion:
teardown
accountSyncDiagnostics
_refreshShouldContinue
_waitForStateTransition
refresh
_refreshAccountProperties
_refreshDelegateAccountProperties
_refreshCalendarProperties
_sendMoveTasks
_clearMoveChange:
_saveMoveChange:
_handleMoveTaskComplete:moveItem:
_propFindForNewEtagFollowingMoveOfItem:
_finishMoveForItemWithID:withEtag:scheduleTag:
_sendMoveForItem:
_continuePrincipalRefresh
_cleanUpDuplicateCalendars
_cleanUpDuplicateCalendar:ofCalendar:
_amendChangeRecordAndCleanUpAfterDeletedEventWithID:externalID:database:
_checkForNewOrMovedItemsDeletedSinceSyncStartedInCalendars:database:moves:
_refreshSpecialCalendars
_refreshRegularCalendars
_refreshedCtagForCalendar:
_refreshedSyncTokenForCalendar:
_syncCalendar:
_gatherAttachmentChanges
_uploadAttachments
_prepareAttachmentsForUpload
_uploadAttachments:
_uploadAttachments:forOwnerURL:syncKey:scheduleTag:
_handleAttachmentUploadsComplete:attachments:
_downloadAttachments
_beginAttachmentDownloads
_calendarCollectionsWereRefreshed
_cleanUpOrphanedPreferredUserAddressesPerCalendar
_guidsOfExistingCalendars
_sendResultToAccount
needsRemindersSync
context
setContext:
shouldCancel
setShouldCancel:
didFinish
setDidFinish:
refreshing
setRefreshing:
completionBlock
setCompletionBlock:
pathsToCTags
setPathsToCTags:
pathsToSyncTokens
setPathsToSyncTokens:
calendarsToRefresh
setCalendarsToRefresh:
refreshFoundUpdatedTaskContainer
setRefreshFoundUpdatedTaskContainer:
refreshFoundUpdatedSpecialCalendar
setRefreshFoundUpdatedSpecialCalendar:
refreshFoundDeletedContainerURL
setRefreshFoundDeletedContainerURL:
outstandingOperationGroup
setOutstandingOperationGroup:
outstandingTaskGroups
setOutstandingTaskGroups:
outstandingTasks
setOutstandingTasks:
state
setState:
setAccountSyncDiagnostics:
eventUIDsWithAttachmentChanges
setEventUIDsWithAttachmentChanges:
_transaction
_pausedPropertyRefreshOperation
_shouldCancel
_didFinish
_refreshing
_refreshFoundUpdatedTaskContainer
_refreshFoundUpdatedSpecialCalendar
_refreshFoundDeletedContainerURL
_state
_context
_completionBlock
_pathsToCTags
_pathsToSyncTokens
_calendarsToRefresh
_outstandingOperationGroup
_outstandingTaskGroups
_outstandingTasks
_calendarHomeSyncToken
_accountSyncDiagnostics
_eventUIDsWithAttachmentChanges
T@"CalDAVRefreshContext",&,N,V_context
TB,N,V_shouldCancel
TB,N,V_didFinish
TB,N,V_refreshing
T@?,C,N,V_completionBlock
T@"NSMutableDictionary",&,N,V_pathsToCTags
T@"NSMutableDictionary",&,N,V_pathsToSyncTokens
T@"NSMutableArray",&,N,V_calendarsToRefresh
TB,N,V_refreshFoundUpdatedTaskContainer
TB,N,V_refreshFoundUpdatedSpecialCalendar
TB,N,V_refreshFoundDeletedContainerURL
T@"NSObject<OS_dispatch_group>",&,N,V_outstandingOperationGroup
T@"NSMutableSet",&,N,V_outstandingTaskGroups
T@"NSMutableSet",&,N,V_outstandingTasks
Ti,N,V_state
T@"NSString",&,N,V_calendarHomeSyncToken
T@"CalDiagAccountSync",&,N,V_accountSyncDiagnostics
T@"NSSet",&,N,V_eventUIDsWithAttachmentChanges
downloadProgressDownloadedByteCount:totalByteCount:
downloadFinishedError:
initWithAttachmentUUID:
beginDownload
_retainedSelf
_uuid
defaultContext
isForced
setIsForced:
wasUserRequested
setWasUserRequested:
wasDueToPush
setWasDueToPush:
isDisabledAccount
setIsDisabledAccount:
isCalendarsOnly
setIsCalendarsOnly:
didDownloadEvents
setDidDownloadEvents:
didSaveDatabase
setDidSaveDatabase:
shouldSave
setShouldSave:
shouldSaveAccounts
setShouldSaveAccounts:
calendarFailedToSync
setCalendarFailedToSync:
startTime
setStartTime:
shouldRetry
setShouldRetry:
retryTime
setRetryTime:
error
setError:
localItems
setLocalItems:
_isForced
_wasUserRequested
_wasDueToPush
_isDisabledAccount
_isCalendarsOnly
_didDownloadEvents
_didSaveDatabase
_shouldSave
_shouldSaveAccounts
_calendarFailedToSync
_shouldRetry
_retryTime
_startTime
_error
_localItems
TB,N,V_isForced
TB,N,V_wasUserRequested
TB,N,V_wasDueToPush
TB,N,V_isDisabledAccount
TB,N,V_isCalendarsOnly
TB,N,V_didDownloadEvents
TB,N,V_didSaveDatabase
TB,N,V_shouldSave
TB,N,V_shouldSaveAccounts
TB,N,V_calendarFailedToSync
Td,N,V_startTime
TB,N,V_shouldRetry
Ti,N,V_retryTime
T@"NSError",&,N,V_error
TQ,N,V_localItems
initWithDatabase:clientIdentifier:
saveChange:forEntityType:
clearUnconsumedAndUnsavedChanges
_database
_clientIdentifier
_initialSequenceNumber
_savedChanges
_shouldApplyEvent:instanceWithStartDate:startRange:endRange:
_checkOccurrencesForEvent:fromDate:toDate:
_shouldApplyEventFromSyncReport:startDate:endDate:
documentParsedCalendar:
initWithURL:eTag:dataPayload:inContainerWithURL:withAccountInfoProvider:
serverID
setServerID:
dataPayload
childrenOrder
sourceURL
setSourceURL:
destinationURL
setDestinationURL:
T@"NSData",R,N
saveWithLocalObject:toContainer:shouldMergeProperties:outMergeDidChooseLocalProperties:account:
setLocalItem:
loadLocalItemWithAccount:
saveServerIDToExistingItem
deleteFromContainer:
scheduleChanges
setScheduleChanges:
createdBy
setCreatedBy:
updatedBy
setUpdatedBy:
T@"CalDAVCalendarServerScheduleChangesItem",&,N
T@"CalDAVUpdateOwnerItem",&,N
initWithCalRecord:inContainer:accountID:
uniqueIdentifier
filename
setOriginatingChangeItems:
originatingChangeItems
addChangeOfType:forChangeRowid:
_setModificationInfoOnItem:
_getDetachedEventUniqueIdentifiersAndCleanupDuplicatesForCalEvent:
_removeCalEvent:fromUniqueIdentifiersSet:
_removeDetachedEventsWithUniqueIdentifiers:fromEvent:withContainer:inMobileCalendar:
_addOrModifyEvent:inICSCalendar:withContainer:shouldMergeProperties:outMergeDidChooseLocalProperties:inMobileCalendar:
_addOrModifyTask:inICSCalendar:withContainer:shouldMergeProperties:outMergeDidChooseLocalProperties:inMobileCalendar:
saveToContainer:shouldMergeProperties:outMergeDidChooseLocalProperties:account:mobileCalendar:outRecurrenceSets:
recurrenceSetsForICSCalendar:
_fixUpCalendarForServer:
setDataPayload:
cacheDataPayload
statusChanged
invitationStatusCleared
localItem
clientID
setClientID:
calItem
document
setDocument:
isMigrate
setIsMigrate:
prohibitLocalCreationOfServerID
setProhibitLocalCreationOfServerID:
setStatusChanged:
setUniqueIdentifier:
setFilename:
setAccountID:
_originatingChangeItems
_dataPayload
_isMigrate
_prohibitLocalCreationOfServerID
_statusChanged
_scheduleChanges
_serverID
_clientID
_calItem
_document
_createdBy
_updatedBy
_uniqueIdentifier
_filename
_accountID
T@"NSData",&,N,V_dataPayload
T@"ICSDocument",&,N,V_document
TB,N,V_statusChanged
T@"NSString",&,N,V_uniqueIdentifier
T@"NSString",&,N,V_filename
T@"NSString",C,N,V_accountID
T@"NSURL",&,N,V_serverID
T@"NSNumber",&,N,V_clientID
T^v,R,N,V_calItem
T@"CalDAVCalendarServerScheduleChangesItem",&,N,V_scheduleChanges
T@"CalDAVUpdateOwnerItem",&,N,V_createdBy
T@"CalDAVUpdateOwnerItem",&,N,V_updatedBy
T@"NSMutableDictionary",C,N
TB,N,V_isMigrate
TB,N,V_prohibitLocalCreationOfServerID
inboxCollectionSyncDiagnostics
_copyEventActionWithURL:forCalItemWithUniqueIdentifier:
setETag:forInvitationAtURL:uniqueIdentifier:
_removeInvitationWithURL:
setInboxCollectionSyncDiagnostics:
_inboxCollectionSyncDiagnostics
T@"CalDiagInboxCollectionSync",&,N,V_inboxCollectionSyncDiagnostics
subscriptionURL
setSubscriptionURL:
hasAlarmFilter
setHasAlarmFilter:
hasAttachmentFilter
setHasAttachmentFilter:
hasTaskFilter
setHasTaskFilter:
autoprovisioned
setAutoprovisioned:
locationCode
setLocationCode:
languageCode
setLanguageCode:
initWithCalendarURL:calendar:properties:principal:
properties
shouldCalendarBeReadOnly
updatePropertiesFromCalCalendar
_properties
resultFromResponse:
initWithResponse:
cuAddresses
addCUAddress:
addEmail:
preferredCUAddress
emailAddress
firstName
setFirstName:
lastName
setLastName:
displayName
setDisplayName:
resultType
setResultType:
setEmailAddresses:
mCUAddresses
setMCUAddresses:
mEmailAddresses
setMEmailAddresses:
_firstName
_lastName
_displayName
_resultType
_emailAddresses
_mCUAddresses
_mEmailAddresses
T@"NSMutableArray",&,N,V_mCUAddresses
T@"NSMutableArray",&,N,V_mEmailAddresses
T@"NSString",&,N,V_firstName
T@"NSString",&,N,V_lastName
T@"NSString",&,N,V_displayName
T@"NSString",&,N,V_resultType
T@"NSArray",&,N,V_emailAddresses
initWithSourceCalendarID:itemID:oldExternalID:changeID:objectType:uniqueIdentifier:
sourceCalendarID
setSourceCalendarID:
itemID
setItemID:
oldExternalID
setOldExternalID:
changeID
setChangeID:
objectType
setObjectType:
updatedExternalID
setUpdatedExternalID:
_sourceCalendarID
_itemID
_changeID
_oldExternalID
_objectType
_updatedExternalID
Ti,N,V_sourceCalendarID
Ti,N,V_itemID
T@"NSString",&,N,V_oldExternalID
Ti,N,V_changeID
Tq,N,V_objectType
T@"NSString",&,N,V_updatedExternalID
notificationCollectionSyncDiagnostics
_copyNotificationWithUniqueIdentifier:inCalendar:orStore:
_copyNotificationWithExternalID:
setNotificationCollectionSyncDiagnostics:
_notificationCollectionSyncDiagnostics
T@"CalDiagNotificationCollectionSync",&,N,V_notificationCollectionSyncDiagnostics
refreshDelegates
mdelegate
setMdelegate:
_mdelegate
T@"<CalDAVAccountDelegatesRefreshDelegate>",N,V_mdelegate
initWithCalSharee:
createCalShareeInDatabase:andCalendar:
updateCalSharee:
infoFromCalDAVDetails:allowWrite:
initWithPrincipalPath:displayName:allowWrite:
allowWrite
setAllowWrite:
_allowWrite
TB,N,V_allowWrite
@24@0:8@16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B24@0:8@"NSString"16
v24@0:8@16
@"<CalDAVPrincipal>"16@0:8
v24@0:8@"<CalDAVPrincipal>"16
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
v16@0:8
v20@0:8B16
v20@0:8i16
i16@0:8
v32@0:8@16@24
v24@0:8^v16
d16@0:8
v24@0:8d16
^v16@0:8
B24@0:8^v16
B24@0:8B16B20
v24@0:8@?16
v36@0:8i16@20@28
v36@0:8^?16i24@28
@40@0:8^{__CFDictionary=}16@24^B32
v40@0:8@16@24@32
@"NSMutableDictionary"
@"NSMutableSet"
@"NSMutableArray"
@"CalDAVServerVersion"
@"NSString"
@"MobileCalDAVPrincipal<CalDAVPrincipal>"
@"NSDictionary"
@"CalDAVPrincipalSearchPropertySet"
@"CalDAVRefreshContext"
@"CoreDAVDiscoveryTaskGroup"
@"MobileCalDAVAccountRefreshActor"
@"DACoreDAVLogger"
B32@0:8@16@24
@24@0:8q16
q16@0:8
B32@0:8@16@?24
v32@0:8q16@24
v32@0:8d16@24
v24@0:8q16
^{__CFURLStorageSession=}16@0:8
v48@0:8@16@24@32@?40
@"NSData"16@0:8
@"NSURL"16@0:8
@"NSSet"16@0:8
v24@0:8@?<v@?i>16
B24@0:8@"NSError"16
@"<CoreDAVClientCertificateInfoProvider>"16@0:8
@"<CoreDAVOAuthInfoProvider>"16@0:8
B32@0:8@"NSURLAuthenticationChallenge"16@?<v@?q@"NSURLCredential">24
B24@0:8@"NSURLProtectionSpace"16
B24@0:8@"NSURLSessionTask"16
v24@0:8@"NSURL"16
B24@0:8@"NSURL"16
v32@0:8q16@"CoreDAVTask"24
v24@0:8@"CoreDAVTask"16
v32@0:8d16@"CoreDAVTask"24
v48@0:8@"NSURL"16@"NSString"24@"NSObject<OS_dispatch_queue>"32@?<v@?i>40
@"AKAppleIDSession"16@0:8
^{_CFURLCredential=}24@0:8@16
^{_CFURLCredential=}24@0:8@"NSURLAuthenticationChallenge"16
@36@0:8i16@20@28
@"<CalDAVCalendar>"36@0:8i16@"NSURL"20@"NSDictionary"28
v24@0:8@"<CalDAVCalendar>"16
@"<CalDAVAccount>"16@0:8
@"<CoreDAVTaskManager>"16@0:8
v24@0:8@"NSSet"16
v24@0:8@"NSString"16
@"NSNumber"16@0:8
v24@0:8@"NSNumber"16
@"NSDateComponents"16@0:8
v24@0:8@?<v@?@"<CalDAVPrincipal>">16
@40@0:8@16@24@32
@20@0:8i16
v32@0:8q16q24
@"NSURL"
@"<CalDAVAccount>"
@"NSSet"
@"NSNumber"
@"NSArray"
@"AKAppleIDSession"
@32@0:8@16@24
@"MobileCalDAVAccount"
@32@0:8^v16@24
v28@0:8i16@20
i24@0:8@16
^{__CFArray=}64@0:8@16@24^@32^@40^@48@56
B28@0:8^v16i24
v32@0:8@16I24I28
B40@0:8^{__CFArray=}16@24@32
v64@0:8@16@24@32@40@48@56
@"NSDictionary"24@0:8@"NSArray"16
B32@0:8@"NSString"16@"NSURL"24
B32@0:8@"NSURL"16@"NSString"24
B24@0:8@"NSSet"16
@"NSTimeZone"16@0:8
v24@0:8@"NSTimeZone"16
@"NSArray"16@0:8
v24@0:8@?<v@?@"<CalDAVCalendar>">16
v24@0:8@"NSError"16
v32@0:8@"CoreDAVAction"16@"NSError"24
v64@0:8@"CalDAVRecurrenceSplitAction"16@"NSString"24@"NSString"32@"NSURL"40@"NSString"48@"NSString"56
v32@0:8@"CalDAVRecurrenceSplitAction"16@"NSError"24
v32@0:8@16r^{CalRecordID=}24
r^{CalRecordID=}24@0:8@16
v32@0:8@"NSString"16r^{CalRecordID=}24
r^{CalRecordID=}24@0:8@"NSString"16
@48@0:8@16^v24@32@40
v24@0:8B16B20
^v40@0:8@16^v24^v32
^v24@0:8@16
v32@0:8@16^{CalRecordID=}24
v32@0:8@16^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24
@76@0:8q16^{__CFArray=}24^{__CFArray=}32^{__CFArray=}40^{__CFArray=}48^{__CFArray=}56^{__CFArray=}64i72
v40@0:8i16@20i28@32
v40@0:8^?16@24@32
v32@0:8^?16@24
v28@0:8^{__CFArray=}16i24
v28@0:8@16i24
v28@0:8@16B24
@48@0:8@16i24@28B36^B40
v32@0:8@16^v24
B24@0:8Q16
v24@0:8Q16
v32@0:8@16Q24
@"MobileCalDAVPrincipal"
@"CalDAVDBChangeTrackingHelper"
@"CalDiagCalendarCollectionSync"
v32@0:8@"CoreDAVTaskGroup"16@"NSError"24
v32@0:8@"<CalDAVPrincipal>"16@"NSError"24
B40@0:8@16@24@32
v64@0:8@"<CalDAVPrincipal>"16@"NSDictionary"24@"NSDictionary"32@"NSString"40@"NSSet"48@"NSError"56
B40@0:8@"<CalDAVPrincipal>"16@"<CalDAVCalendar>"24@"NSError"32
v24@0:8@"CalDAVContainer"16
v32@0:8@"NSError"16@"<CalDAVCalendar>"24
v24@0:8@"CalDAVCalendarPropertyRefreshOperation"16
v40@0:8@"<CalDAVPrincipal>"16@"<CalDAVCalendar>"24@"NSError"32
B36@0:8i16@20^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}28
B40@0:8@16^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24@32
v48@0:8@16@24@32@40
@?16@0:8
@"DATransaction"
@"CalDAVCalendarPropertyRefreshOperation"
@"NSObject<OS_dispatch_group>"
@"CalDiagAccountSync"
@"NSError"
@32@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16@24
v24@0:8i16i20
^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}
B48@0:8@16@24@32@40
@"ICSCalendar"24@0:8@"ICSCalendar"16
@56@0:8@16@24@32@40@48
@56@0:8@"NSURL"16@"NSString"24@"NSData"32@"NSURL"40@"<CoreDAVAccountInfoProvider>"48
B52@0:8^v16^v24B32^B36@44
B52@0:8^v16^v24B32^B36@"DAAccount"44
B24@0:8@"DAAccount"16
@"CalDAVCalendarServerScheduleChangesItem"16@0:8
v24@0:8@"CalDAVCalendarServerScheduleChangesItem"16
@"CalDAVUpdateOwnerItem"16@0:8
v24@0:8@"CalDAVUpdateOwnerItem"16
@40@0:8^v16@24@32
@24@0:8^v16
v32@0:8^v16@24
v48@0:8@16^v24^v32@40
B60@0:8@16@24^v32B40^B44@52
B60@0:8^v16B24^B28@36@44^@52
@"NSData"
@"CalDAVCalendarServerScheduleChangesItem"
@"ICSDocument"
@"CalDAVUpdateOwnerItem"
^v32@0:8@16@24
@"CalDiagInboxCollectionSync"
@52@0:8i16i20@24i32q36@44
@"CalDiagNotificationCollectionSync"
@"<CalDAVAccountDelegatesRefreshDelegate>"
^v32@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16^v24
@28@0:8@16B24
@36@0:8@16@24B32
