initWithMachServiceName:
setDelegate:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
listener:shouldAcceptNewConnection:
initWithXPCConnection:
getAuthorizationHintsWithURL:responseCode:completion:
performAuthorizationWithRequestParameters:completion:
beginAuthorizationWithRequestParameters:completion:
cancelAuthorizationWithCompletion:
configurationWithCompletion:
realmsWithCompletion:
debugHintsWithCompletion:
finishAuthorizationWithCompletion:
isExtensionProcessWithAuditToken:completion:
profilesWithExtensionBundleIdentifier:completion:
interfaceWithInternalProtocol:
setExportedInterface:
setExportedObject:
resume
connectionInvalidated
setInvalidationHandler:
invalidationHandler
init
defaultCenter
configurationChanged:
addObserver:selector:name:object:
removeObserver:
dealloc
saveKerberosValuesForPlugins
createKerberosSettingsCache
profilesWithExtensionBundleIdentifier:
countByEnumeratingWithState:objects:count:
saveKerberosValuesForProfile:
initWithConfigurationHost:settingsManager:
listenForConfigurationChanges
.cxx_destruct
_configurationHost
_settingsManager
_observingConfigurationChanges
sharedInstance
loadExtensions
beginMatchingExtensions
defaultManager
invalidate
currentRunLoop
sharedConnection
isAppManaged:
applicationProxyForIdentifier:placeholder:
localizedName
localizedShortName
bundleIdentifier
length
numberWithInt:
processNameForPID:
isAppManagedWithBundleIdentifier:
localizedAppNameWithBundleIdentifier:pid:
_closeRemoteUIWithError:
useInternalExtensions
anonymousListener
_queue
_setQueue:
absoluteString
httpHeaders
httpBody
extensionBundleIdentifier
extensionTeamIdentifier
extensionData
dictionary
realm
callerBundleIdentifier
auditTokenData
data
requestedOperation
authorizationOptions
numberWithBool:
isCFNetworkInterception
isCallerManaged
callerTeamIdentifier
localizedCallerDisplayName
isUserInteractionEnabled
impersonationBundleIdentifier
screenLockedBehavior
numberWithInteger:
dictionaryWithObjects:forKeys:count:
errorWithCode:
initWithServiceName:viewControllerClassName:
setUserInfo:
endpoint
_endpoint
setXpcEndpoint:
setActivatingForSiri:
newHandleWithDefinition:configurationContext:
registerObserver:
activateWithContext:
authorizationDidCompleteWithCredential:error:completion:
internalErrorWithMessage:
unregisterObserver:
extensionCleanupWithCompletion:
setRemoteObjectInterface:
silentInternalErrorWithMessage:
remoteObjectProxyWithErrorHandler:
remoteAlertHandleDidActivate:
remoteAlertHandleDidDeactivate:
remoteAlertHandle:didInvalidateWithError:
beginAuthorizationWithRequestParameters:profile:error:
cancelAuthorizationWithError:
delegate
_remoteAlertHandle
_uiListener
_isInternalExtension
_uiServiceConnection
_invalidationHandler
_delegate
T@?,C,V_invalidationHandler
T@"<SODaemonUIProtocol>",W,N,V_delegate
service
requestParameters
completionBlock
code
removeAllRequestsWithBlock:
processNextRequest
_performAuthorizationWithRequestParameters:completion:
_doGetAuthorizationHintsWithURL:responseCode:completion:
_doAKshouldProcessURL:
loadedInternalExtension
profileForURL:responseCode:
invalidURLError:
loadedExtensionWithBundleIdentifer:
localizedExtensionDisplayName
initWithLocalizedExtensionBundleDisplayName:
initWithAuthorizationRequestParametersCore:
_updateUsageOfInternalExtensionsInParameters:
_updateCallerPropertiesFromAuditTokenInParameters:
objectForKeyedSubscript:
internalExtensionBundleIdentifier
responseCode
parameterErrorWithMessage:
isEqualToString:
checkEntitlementFromXPC:entitlement:
missingEntitlementError:
willHandleURL:responseCode:callerBundleIdentifier:
doNotHandleBreakingRecursionWithCallerBundleIdentifier:
deniedBundleIdentifier:
extensionRequestsMode
initWithService:requestParameters:completionBlock:
requestQueueWithIdentifier:
processItemBlock
_processRequestBlock
setProcessItemBlock:
enqueueRequest:
mutableCopy
removeObjectForKey:
setAuthorizationOptions:
removedProfileForExtensionBundleIdentifier:
setExtensionData:
setRealm:
_doPerformAuthorizationWithRequestParameters:profile:completion:
loadInternalExtension
loadExtensionWithBundleIdentifier:
authorizationDidCompleteWithCredential:error:
setExtensionDelegate:
setupNonUISessionWithCompletion:
shouldProcessURL:
configurationForClientWithError:
realms
queueCount
_extensionCleanup
pidFromAuditToken:
bundleIdentifierFromAuditToken:
initWithAuthorizationCredential:
beginAuthorizationWithCompletion:
setUseInternalExtensions:
auditTokenFromData:auditToken:
auditToken
dataWithBytes:length:
setAuditTokenData:
setCallerBundleIdentifier:
setCallerManaged:
teamIdentifierFromAuditToken:
setCallerTeamIdentifier:
setLocalizedCallerDisplayName:
unload
presentAuthorizationViewControllerWithHints:completion:
requestReauthenticationWithCompletion:
_authenticateCompletion
_daemonUIManager
_requestQueueIdentifier
_extension
_requestParameters
_extensionXpcListener
_xpcConnection
SODaemonListener
NSXPCListenerDelegate
NSObject
SOServiceProtocol
SOAppSSOListener
SODaemonKerberosSettingsManager
SODaemonUtils
SODaemonUIProtocol
SOUIServiceProtocol
SODaemonUIManager
SBSRemoteAlertHandleObserver
SORemoteExtensionServiceProtocol
SOExtensionServiceProtocol
SODaemon
SOExtensionDelegate
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@24@0:8@16
v40@0:8@16q24@?32
v32@0:8@16@?24
v24@0:8@?16
v56@0:8{?=[8I]}16@?48
v40@0:8@"NSURL"16q24@?<v@?@"SOAuthorizationHintsCore"@"NSError">32
v32@0:8@"SOAuthorizationRequestParametersCore"16@?<v@?@"SOAuthorizationCredentialCore"@"NSError">24
v32@0:8@"SOAuthorizationRequestParametersCore"16@?<v@?@"NSString"@"NSXPCListenerEndpoint"@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v24@0:8@?<v@?@"SOConfiguration"@"NSError">16
v24@0:8@?<v@?@"NSArray"@"NSError">16
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v56@0:8{?=[8I]}16@?<v@?B@"NSError">48
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
@32@0:8@16@24
v16@0:8
v24@0:8@16
@"SOConfigurationHost"
@"SOKerberosSettingsManager"
@28@0:8@16i24
v40@0:8@16@24@?32
v40@0:8@"SOAuthorizationCredential"16@"NSError"24@?<v@?B@"NSError">32
v32@0:8@16@24
v24@0:8@"SBSRemoteAlertHandle"16
v32@0:8@"SBSRemoteAlertHandle"16@"NSError"24
B40@0:8@16@24^@32
B24@0:8^@16
@?16@0:8
@"SBSRemoteAlertHandle"
@"NSXPCListener"
@"NSXPCConnection"
@"<SODaemonUIProtocol>"
v24@0:8@?<v@?@"SOAuthorizationRequestParameters"@"NSError">16
v32@0:8@"SOAuthorizationCredential"16@"NSError"24
v32@0:8@"NSDictionary"16@?<v@?B@"NSError">24
v24@0:8@?<v@?Q>16
@"SODaemonUIManager"
@"NSString"
@"SOExtension"
@"SOAuthorizationRequestParameters"
com.apple.AppSSO.service-xpc
v8@?0
com.apple.AppSSO
SOAgentListener
SOInternalProtocols
Unable to find class %s
-[SODaemonKerberosSettingsManager configurationChanged:]
-[SODaemonKerberosSettingsManager saveKerberosValuesForPlugins]
com.apple.AppSSOKerberos.KerberosExtension
SODaemonKerberosSettingsManager
AppSSODaemon
MCProfileConnection
SODaemonUtils
SOUtils
com.apple.AppSSO.daemon-ui-queue
-[SODaemonUIManager init]
-[SODaemonUIManager dealloc]
-[SODaemonUIManager beginAuthorizationWithRequestParameters:profile:error:]
@"NSDictionary"24@?0@"SOAuthorizationRequestParameters"8@"SOFullProfile"16
httpHeaders
httpBody
extensionBundleIdentifier
teamIdentifier
extensionData
realm
callerBundleIdentifier
auditTokenData
requestedOperation
authorizationOptions
useInternalExtensions
cfNetworkInterception
callerManaged
callerTeamIdentifier
localizedCallerDisplayName
enableUserInteraction
impersonationBundleIdentifier
screenLockedBehavior
com.apple.AppSSOUIService
SOUIServiceViewController
-[SODaemonUIManager cancelAuthorizationWithError:]
-[SODaemonUIManager remoteAlertHandleDidActivate:]
-[SODaemonUIManager remoteAlertHandleDidDeactivate:]
-[SODaemonUIManager remoteAlertHandle:didInvalidateWithError:]
-[SODaemonUIManager _closeRemoteUIWithError:]
SBSRemoteAlertHandle is nil
-[SODaemonUIManager listener:shouldAcceptNewConnection:]
-[SODaemonUIManager connectionInvalidated]
-[SODaemonUIManager authorizationDidCompleteWithCredential:error:completion:]
authorization already finished => ignoring complete request
-[SODaemonUIManager finishAuthorizationWithCompletion:]
no uiServiceConnection
v16@?0@"NSError"8
v20@?0B8@"NSError"12
-[SODaemonUIManager extensionCleanupWithCompletion:]
SODaemonUIManager
SOErrorHelper
-[SODaemon initWithXPCConnection:]
v24@?0@"SORequestQueue"8@"SORequestQueueItem"16
v24@?0@"SOAuthorizationCredentialCore"8@"NSError"16
-[SODaemon getAuthorizationHintsWithURL:responseCode:completion:]
No AppSSO IdP extension found (internal extension)
No AppSSO IdP extension found
-[SODaemon performAuthorizationWithRequestParameters:completion:]
profile has no extension bundle identifier
com.apple.private.AppSSO.FetchNetworkCredentials
com.apple.private.network.socket-delegate
-[SODaemon _performAuthorizationWithRequestParameters:completion:]
-[SODaemon beginAuthorizationWithRequestParameters:completion:]
No active AppSSO IdP extension
-[SODaemon _doAKshouldProcessURL:]
-[SODaemon cancelAuthorizationWithCompletion:]
v24@?0@"SOAuthorizationCredential"8@"NSError"16
-[SODaemon configurationWithCompletion:]
-[SODaemon realmsWithCompletion:]
-[SODaemon debugHintsWithCompletion:]
-[SODaemon finishAuthorizationWithCompletion:]
-[SODaemon isExtensionProcessWithAuditToken:completion:]
-[SODaemon authorizationDidCompleteWithCredential:error:completion:]
-[SODaemon listener:shouldAcceptNewConnection:]
-[SODaemon connectionInvalidated]
-[SODaemon beginAuthorizationWithCompletion:]
-[SODaemon _extensionCleanup]
-[SODaemon authorizationDidCompleteWithCredential:error:]
SODaemon
SOAuthorizationCredential
SOAuthorizationHintsCore
SOAuthorizationCredentialCore
%{public}@, %{public}@
starting daemon
Got SIGTERM, shutting down
running NSRunLoop
%{public}@ is managed: %{public}@
%{public}@: %{public}@ failed to get localized app name => using process name
%{public}@: %{public}@ localized app name: %{public}@
%s  on %@
device screen is locked => authorization request not handled
device screen is locked => canceling authorization request
failed to get SBSRemoteAlertHandle
activating SBSRemoteAlertHandle %{public}@
%s _remoteAlertHandle = %{public}@, handle = %{public}@ on %@
%s _remoteAlertHandle = %{public}@, handle = %{public}@, isInternalExtension = %{public}@ on %@
%s _remoteAlertHandle = %{public}@, handle = %{public}@, error = %{public}@ on %@
%s _remoteAlertHandle = %{public}@ on %@
%s delegate = %{public}@, credential = %{public}@, error = %{public}@ on %@
authorization already finished => ignoring complete request
%s uiServiceConnection = %{public}@ on %@
AppSSO UI Service XPC error: %{public}@
%s url: %{sensitive, mask.hash}@, responseCode: %d on %@
%s %{public}@ on %@
%{public}@ extension requests mode = %{public}@
%s %@ on %@
loadedExtensionWithBundleIdentifer: extension = %{public}@
extension id: %@, endpoint: %@
setupNonUISessionWithCompletion: success = %{public}@, error = %{public}@
beginAuthorizationWithRequestParameters: %{public}d, %{public}@
%s URL = %{sensitive, mask.hash}@, result = %@ on %@
%s extension = %{public}@, queue = %{public}@ on %@
finishAuthorizationWithCompletion: request queue count = %d
extensionCleanupWithCompletion finished, success = %d, %{public}@
%{private}@(%u) isExtensionProcess = %{public}@
%s authenticateCompletion = %@ on %@
PID: %u has auditToken: %@, callerBundleIdentifier: %@, callerManaged: %@, callerTeamIdentifier: %@, localizedCallerDisplayName: %@
%s extension = %{public}@ on %@
%s credential: %{public}@, %{public}@ on %@
%@ did finish completion: success = %{public}@, error = %{public}@
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>AppSSODaemon</string>
<key>CFBundleIdentifier</key>
<string>com.apple.AppSSODaemon</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>AppSSODaemon</string>
<key>CFBundlePackageType</key>
<string>XPC!</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>20B5043s</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.1</string>
<key>DTSDKBuild</key>
<string>20B5043s</string>
<key>DTSDKName</key>
<string>iphonesimulator16.1.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A5270i</string>
<key>MinimumOSVersion</key>
<string>16.1</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
<key>XPCService</key>
<dict>
<key>ServiceType</key>
<string>Application</string>
</dict>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.private.associated-domains</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.gssapi.allowwildcardacl</key>
<true/>
<key>com.apple.private.sandbox.profile:embedded</key>
<string>appsso</string>
<key>com.apple.rootless.storage.ExtensibleSSO</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.GSSCred</string>
<string>com.apple.AppSSO.service-xpc</string>
<string>com.apple.springboard.services</string>
</array>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>platform-application</key>
<true/>
</dict>
</plist>
numberWithInt:
shouldProcessURL:
numberWithBool:
loadInternalExtension
setUserInfo:
applicationProxyForIdentifier:placeholder:
remoteObjectProxyWithErrorHandler:
countByEnumeratingWithState:objects:count:
setUseInternalExtensions:
interfaceWithInternalProtocol:
requestParameters
dataWithBytes:length:
bundleIdentifier
initWithAuthorizationRequestParametersCore:
isEqualToString:
setCallerTeamIdentifier:
profilesWithExtensionBundleIdentifier:
localizedExtensionDisplayName
dictionaryWithObjects:forKeys:count:
setExtensionDelegate:
anonymousListener
_endpoint
removedProfileForExtensionBundleIdentifier:
unregisterObserver:
setActivatingForSiri:
newHandleWithDefinition:configurationContext:
registerObserver:
parameterErrorWithMessage:
extensionTeamIdentifier
extensionBundleIdentifier
loadExtensions
localizedCallerDisplayName
initWithAuthorizationCredential:
sharedInstance
realms
_setQueue:
invalidate
auditTokenFromData:auditToken:
beginMatchingExtensions
resume
profileForURL:responseCode:
mutableCopy
setCallerManaged:
service
setRemoteObjectInterface:
configurationForClientWithError:
unload
dictionary
isCallerManaged
addObserver:selector:name:object:
loadExtensionWithBundleIdentifier:
objectForKeyedSubscript:
initWithServiceName:viewControllerClassName:
setRealm:
errorWithCode:
sharedConnection
removeObserver:
setExtensionData:
missingEntitlementError:
extensionRequestsMode
responseCode
deniedBundleIdentifier:
setCallerBundleIdentifier:
data
invalidURLError:
processNextRequest
isCFNetworkInterception
setupNonUISessionWithCompletion:
callerTeamIdentifier
impersonationBundleIdentifier
removeObjectForKey:
teamIdentifierFromAuditToken:
screenLockedBehavior
activateWithContext:
realm
initWithService:requestParameters:completionBlock:
queueCount
enqueueRequest:
auditTokenData
internalExtensionBundleIdentifier
numberWithInteger:
completionBlock
loadedInternalExtension
setProcessItemBlock:
extensionData
requestedOperation
willHandleURL:responseCode:callerBundleIdentifier:
defaultCenter
isAppManaged:
pidFromAuditToken:
doNotHandleBreakingRecursionWithCallerBundleIdentifier:
localizedName
checkEntitlementFromXPC:entitlement:
useInternalExtensions
createKerberosSettingsCache
setExportedInterface:
authorizationOptions
setAuditTokenData:
httpBody
internalErrorWithMessage:
silentInternalErrorWithMessage:
initWithLocalizedExtensionBundleDisplayName:
setXpcEndpoint:
endpoint
loadedExtensionWithBundleIdentifer:
isUserInteractionEnabled
length
bundleIdentifierFromAuditToken:
removeAllRequestsWithBlock:
localizedShortName
saveKerberosValuesForProfile:
defaultManager
processItemBlock
code
callerBundleIdentifier
setLocalizedCallerDisplayName:
httpHeaders
setAuthorizationOptions:
requestQueueWithIdentifier:
absoluteString
setExportedObject:
currentRunLoop
processNameForPID:
auditToken
initWithMachServiceName:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
listener:shouldAcceptNewConnection:
getAuthorizationHintsWithURL:responseCode:completion:
performAuthorizationWithRequestParameters:completion:
beginAuthorizationWithRequestParameters:completion:
cancelAuthorizationWithCompletion:
configurationWithCompletion:
realmsWithCompletion:
debugHintsWithCompletion:
finishAuthorizationWithCompletion:
isExtensionProcessWithAuditToken:completion:
profilesWithExtensionBundleIdentifier:completion:
init
configurationChanged:
dealloc
initWithConfigurationHost:settingsManager:
listenForConfigurationChanges
saveKerberosValuesForPlugins
.cxx_destruct
_configurationHost
_settingsManager
_observingConfigurationChanges
isAppManagedWithBundleIdentifier:
localizedAppNameWithBundleIdentifier:pid:
authorizationDidCompleteWithCredential:error:completion:
extensionCleanupWithCompletion:
_queue
remoteAlertHandleDidActivate:
remoteAlertHandleDidDeactivate:
remoteAlertHandle:didInvalidateWithError:
beginAuthorizationWithRequestParameters:profile:error:
cancelAuthorizationWithError:
_closeRemoteUIWithError:
connectionInvalidated
invalidationHandler
setInvalidationHandler:
delegate
setDelegate:
_remoteAlertHandle
_uiListener
_isInternalExtension
_uiServiceConnection
_invalidationHandler
_delegate
T@?,C,V_invalidationHandler
T@"<SODaemonUIProtocol>",W,N,V_delegate
beginAuthorizationWithCompletion:
_processRequestBlock
authorizationDidCompleteWithCredential:error:
presentAuthorizationViewControllerWithHints:completion:
requestReauthenticationWithCompletion:
initWithXPCConnection:
_doGetAuthorizationHintsWithURL:responseCode:completion:
_performAuthorizationWithRequestParameters:completion:
_doPerformAuthorizationWithRequestParameters:profile:completion:
_doAKshouldProcessURL:
_updateUsageOfInternalExtensionsInParameters:
_updateCallerPropertiesFromAuditTokenInParameters:
_extensionCleanup
_authenticateCompletion
_daemonUIManager
_requestQueueIdentifier
_extension
_requestParameters
_extensionXpcListener
_xpcConnection
SODaemonListener
NSXPCListenerDelegate
NSObject
SOServiceProtocol
SOAppSSOListener
SODaemonKerberosSettingsManager
SODaemonUtils
SODaemonUIProtocol
SOUIServiceProtocol
SODaemonUIManager
SBSRemoteAlertHandleObserver
SORemoteExtensionServiceProtocol
SOExtensionServiceProtocol
SODaemon
SOExtensionDelegate
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@24@0:8@16
v40@0:8@16q24@?32
v32@0:8@16@?24
v24@0:8@?16
v56@0:8{?=[8I]}16@?48
v40@0:8@"NSURL"16q24@?<v@?@"SOAuthorizationHintsCore"@"NSError">32
v32@0:8@"SOAuthorizationRequestParametersCore"16@?<v@?@"SOAuthorizationCredentialCore"@"NSError">24
v32@0:8@"SOAuthorizationRequestParametersCore"16@?<v@?@"NSString"@"NSXPCListenerEndpoint"@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v24@0:8@?<v@?@"SOConfiguration"@"NSError">16
v24@0:8@?<v@?@"NSArray"@"NSError">16
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v56@0:8{?=[8I]}16@?<v@?B@"NSError">48
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
@32@0:8@16@24
v16@0:8
v24@0:8@16
@"SOConfigurationHost"
@"SOKerberosSettingsManager"
@28@0:8@16i24
v40@0:8@16@24@?32
v40@0:8@"SOAuthorizationCredential"16@"NSError"24@?<v@?B@"NSError">32
v32@0:8@16@24
v24@0:8@"SBSRemoteAlertHandle"16
v32@0:8@"SBSRemoteAlertHandle"16@"NSError"24
B40@0:8@16@24^@32
B24@0:8^@16
@?16@0:8
@"SBSRemoteAlertHandle"
@"NSXPCListener"
@"NSXPCConnection"
@"<SODaemonUIProtocol>"
v24@0:8@?<v@?@"SOAuthorizationRequestParameters"@"NSError">16
v32@0:8@"SOAuthorizationCredential"16@"NSError"24
v32@0:8@"NSDictionary"16@?<v@?B@"NSError">24
v24@0:8@?<v@?Q>16
@"SODaemonUIManager"
@"NSString"
@"SOExtension"
@"SOAuthorizationRequestParameters"
com.apple.AppSSO.service-xpc
v8@?0
com.apple.AppSSO
SOAgentListener
SOInternalProtocols
Unable to find class %s
-[SODaemonKerberosSettingsManager configurationChanged:]
-[SODaemonKerberosSettingsManager saveKerberosValuesForPlugins]
com.apple.AppSSOKerberos.KerberosExtension
SODaemonKerberosSettingsManager
AppSSODaemon
MCProfileConnection
SODaemonUtils
SOUtils
com.apple.AppSSO.daemon-ui-queue
-[SODaemonUIManager init]
-[SODaemonUIManager dealloc]
-[SODaemonUIManager beginAuthorizationWithRequestParameters:profile:error:]
@"NSDictionary"24@?0@"SOAuthorizationRequestParameters"8@"SOFullProfile"16
httpHeaders
httpBody
extensionBundleIdentifier
teamIdentifier
extensionData
realm
callerBundleIdentifier
auditTokenData
requestedOperation
authorizationOptions
useInternalExtensions
cfNetworkInterception
callerManaged
callerTeamIdentifier
localizedCallerDisplayName
enableUserInteraction
impersonationBundleIdentifier
screenLockedBehavior
com.apple.AppSSOUIService
SOUIServiceViewController
-[SODaemonUIManager cancelAuthorizationWithError:]
-[SODaemonUIManager remoteAlertHandleDidActivate:]
-[SODaemonUIManager remoteAlertHandleDidDeactivate:]
-[SODaemonUIManager remoteAlertHandle:didInvalidateWithError:]
-[SODaemonUIManager _closeRemoteUIWithError:]
SBSRemoteAlertHandle is nil
-[SODaemonUIManager listener:shouldAcceptNewConnection:]
-[SODaemonUIManager connectionInvalidated]
-[SODaemonUIManager authorizationDidCompleteWithCredential:error:completion:]
authorization already finished => ignoring complete request
-[SODaemonUIManager finishAuthorizationWithCompletion:]
no uiServiceConnection
v16@?0@"NSError"8
v20@?0B8@"NSError"12
-[SODaemonUIManager extensionCleanupWithCompletion:]
SODaemonUIManager
SOErrorHelper
-[SODaemon initWithXPCConnection:]
v24@?0@"SORequestQueue"8@"SORequestQueueItem"16
v24@?0@"SOAuthorizationCredentialCore"8@"NSError"16
-[SODaemon getAuthorizationHintsWithURL:responseCode:completion:]
No AppSSO IdP extension found (internal extension)
No AppSSO IdP extension found
-[SODaemon performAuthorizationWithRequestParameters:completion:]
profile has no extension bundle identifier
com.apple.private.AppSSO.FetchNetworkCredentials
com.apple.private.network.socket-delegate
-[SODaemon _performAuthorizationWithRequestParameters:completion:]
-[SODaemon beginAuthorizationWithRequestParameters:completion:]
No active AppSSO IdP extension
-[SODaemon _doAKshouldProcessURL:]
-[SODaemon cancelAuthorizationWithCompletion:]
v24@?0@"SOAuthorizationCredential"8@"NSError"16
-[SODaemon configurationWithCompletion:]
-[SODaemon realmsWithCompletion:]
-[SODaemon debugHintsWithCompletion:]
-[SODaemon finishAuthorizationWithCompletion:]
-[SODaemon isExtensionProcessWithAuditToken:completion:]
-[SODaemon authorizationDidCompleteWithCredential:error:completion:]
-[SODaemon listener:shouldAcceptNewConnection:]
-[SODaemon connectionInvalidated]
-[SODaemon beginAuthorizationWithCompletion:]
-[SODaemon _extensionCleanup]
-[SODaemon authorizationDidCompleteWithCredential:error:]
SODaemon
SOAuthorizationCredential
SOAuthorizationHintsCore
SOAuthorizationCredentialCore
%{public}@, %{public}@
%s  on %@
starting daemon
Got SIGTERM, shutting down
running NSRunLoop
%{public}@ is managed: %{public}@
%{public}@: %{public}@ failed to get localized app name => using process name
%{public}@: %{public}@ localized app name: %{public}@
device screen is locked => authorization request not handled
device screen is locked => canceling authorization request
failed to get SBSRemoteAlertHandle
activating SBSRemoteAlertHandle %{public}@
%s _remoteAlertHandle = %{public}@, handle = %{public}@ on %@
%s _remoteAlertHandle = %{public}@, handle = %{public}@, isInternalExtension = %{public}@ on %@
%s _remoteAlertHandle = %{public}@, handle = %{public}@, error = %{public}@ on %@
%s _remoteAlertHandle = %{public}@ on %@
%s delegate = %{public}@, credential = %{public}@, error = %{public}@ on %@
authorization already finished => ignoring complete request
%s uiServiceConnection = %{public}@ on %@
AppSSO UI Service XPC error: %{public}@
%s url: %{sensitive, mask.hash}@, responseCode: %d on %@
%s %{public}@ on %@
%{public}@ extension requests mode = %{public}@
%s %@ on %@
loadedExtensionWithBundleIdentifer: extension = %{public}@
extension id: %@, endpoint: %@
setupNonUISessionWithCompletion: success = %{public}@, error = %{public}@
beginAuthorizationWithRequestParameters: %{public}d, %{public}@
%s URL = %{sensitive, mask.hash}@, result = %@ on %@
%s extension = %{public}@, queue = %{public}@ on %@
finishAuthorizationWithCompletion: request queue count = %d
extensionCleanupWithCompletion finished, success = %d, %{public}@
%{private}@(%u) isExtensionProcess = %{public}@
%s authenticateCompletion = %@ on %@
PID: %u has auditToken: %@, callerBundleIdentifier: %@, callerManaged: %@, callerTeamIdentifier: %@, localizedCallerDisplayName: %@
%s extension = %{public}@ on %@
%s credential: %{public}@, %{public}@ on %@
%@ did finish completion: success = %{public}@, error = %{public}@
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>AppSSODaemon</string>
<key>CFBundleIdentifier</key>
<string>com.apple.AppSSODaemon</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>AppSSODaemon</string>
<key>CFBundlePackageType</key>
<string>XPC!</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>20B5043s</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.1</string>
<key>DTSDKBuild</key>
<string>20B5043s</string>
<key>DTSDKName</key>
<string>iphonesimulator16.1.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A5270i</string>
<key>MinimumOSVersion</key>
<string>16.1</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
<key>XPCService</key>
<dict>
<key>ServiceType</key>
<string>Application</string>
</dict>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.private.associated-domains</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.gssapi.allowwildcardacl</key>
<true/>
<key>com.apple.private.sandbox.profile:embedded</key>
<string>appsso</string>
<key>com.apple.rootless.storage.ExtensibleSSO</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.GSSCred</string>
<string>com.apple.AppSSO.service-xpc</string>
<string>com.apple.springboard.services</string>
</array>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>platform-application</key>
<true/>
</dict>
</plist>
