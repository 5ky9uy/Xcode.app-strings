initWithMachServiceName:
setDelegate:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
listener:shouldAcceptNewConnection:
initWithXPCConnection:
getAuthorizationHintsWithURL:responseCode:completion:
performAuthorizationWithRequestParameters:completion:
beginAuthorizationWithRequestParameters:completion:
cancelAuthorizationWithCompletion:
configurationWithCompletion:
realmsWithCompletion:
debugHintsWithCompletion:
isExtensionProcessWithAuditToken:completion:
interfaceWithInternalProtocol:
setExportedInterface:
setExportedObject:
resume
connectionInvalidated
setInvalidationHandler:
invalidationHandler
sharedInstance
loadExtensions
beginMatchingExtensions
currentRunLoop
init
_closeRemoteAlert
dealloc
initWithServiceName:viewControllerClassName:
absoluteString
httpHeaders
httpBody
extensionBundleIdentifier
extensionTeamIdentifier
extensionData
dictionary
realm
callerBundleIdentifier
requestedOperation
authorizationOptions
useInternalExtensions
numberWithBool:
dictionaryWithObjects:forKeys:count:
setUserInfo:
anonymousListener
_queue
_setQueue:
endpoint
_endpoint
setXpcEndpoint:
setActivatingForSiri:
errorWithCode:
newHandleWithDefinition:configurationContext:
addObserver:
activateWithContext:
authorizationDidCompleteWithCredential:error:completion:
removeObserver:
invalidate
silentInternalErrorWithMessage:
remoteAlertHandleDidActivate:
remoteAlertHandleDidDeactivate:
remoteAlertHandle:didInvalidateWithError:
beginAuthorizationWithRequestParameters:profile:error:
cancelAuthorization
.cxx_destruct
delegate
_remoteAlertHandle
_uiListener
_isInternalExtension
_invalidationHandler
_delegate
service
requestParameters
completionBlock
code
removeAllRequestsWithBlock:
processNextRequest
_performAuthorizationWithRequestParameters:completion:
_doGetAuthorizationHintsWithURL:responseCode:completion:
_doAKshouldProcessURL:
loadedInternalExtension
defaultManager
profileForURL:responseCode:
invalidURLError:
loadedExtensionWithBundleIdentifer:
alloc
localizedExtensionDisplayName
initWithLocalizedExtensionBundleDisplayName:
internalErrorWithMessage:
initWithAuthorizationRequestParametersCore:
_updateUsageOfInternalExtensionsInParameters:
_udpateCallerBundleIdentifierFromAuditTokenInParameters:
responseCode
willHandleURL:responseCode:callerBundleIdentifier:
doNotHandleBreakingRecursionWithCallerBundleIdentifier:
internalExtensionBundleIdentifier
initWithService:requestParameters:completionBlock:
requestQueueWithIdentifier:
processItemBlock
_processRequestBlock
setProcessItemBlock:
enqueueRequest:
setExtensionData:
setRealm:
_doPerformAuthorizationWithRequestParameters:profile:completion:
shouldProcessURL:
configurationForClientWithError:
realms
pidFromAuditToken:
bundleIdentifierFromAuditToken:
initWithAuthorizationCredential:
beginAuthorizationWithCompletion:
setUseInternalExtensions:
auditTokenData
auditTokenFromData:auditToken:
auditToken
setCallerBundleIdentifier:
_authenticateCompletion
_daemonUIManager
_requestParameters
_extensionXpcListener
_xpcConnection
ListenerWithDelegate
NSXPCListenerDelegate
NSObject
SOServiceProtocol
SOClientListener
SODaemonUIProtocol
SODaemonUIManager
SBSRemoteAlertHandleObserver
SORemoteExtensionServiceProtocol
SOExtensionServiceProtocol
SODaemon
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@24@0:8@16
v40@0:8@16q24@?32
v32@0:8@16@?24
v24@0:8@?16
v56@0:8{?=[8I]}16@?48
v40@0:8@"NSURL"16q24@?<v@?@"SOAuthorizationHintsCore"@"NSError">32
v32@0:8@"SOAuthorizationRequestParametersCore"16@?<v@?@"SOAuthorizationCredentialCore"@"NSError">24
v32@0:8@"SOAuthorizationRequestParametersCore"16@?<v@?@"NSString"@"NSXPCListenerEndpoint"@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v24@0:8@?<v@?@"SOConfiguration"@"NSError">16
v24@0:8@?<v@?@"NSArray"@"NSError">16
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v56@0:8{?=[8I]}16@?<v@?B@"NSError">48
v40@0:8@16@24@?32
v40@0:8@"SOAuthorizationCredential"16@"NSError"24@?<v@?B@"NSError">32
v24@0:8@16
v32@0:8@16@24
v24@0:8@"SBSRemoteAlertHandle"16
v32@0:8@"SBSRemoteAlertHandle"16@"NSError"24
v16@0:8
B40@0:8@16@24^@32
@?16@0:8
@"SBSRemoteAlertHandle"
@"NSXPCListener"
@"<SODaemonUIProtocol>"
v24@0:8@?<v@?@"SOAuthorizationRequestParameters"@"NSError">16
@"SODaemonUIManager"
@"SOAuthorizationRequestParameters"
@"NSXPCConnection"
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v8@?0
com.apple.AppSSO.service-xpc
com.apple.AppSSO
AppSSODaemon
SOInternalProtocols
Unable to find class %s
/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
com.apple.AppSSO.daemon-ui-queue
-[SODaemonUIManager init]
-[SODaemonUIManager dealloc]
-[SODaemonUIManager beginAuthorizationWithRequestParameters:profile:error:]
com.apple.AppSSOUIService
SOUIServiceViewController
httpHeaders
httpBody
extensionBundleIdentifier
teamIdentifier
extensionData
realm
callerBundleIdentifier
requestedOperation
authorizationOptions
useInternalExtensions
-[SODaemonUIManager cancelAuthorization]
-[SODaemonUIManager remoteAlertHandleDidActivate:]
-[SODaemonUIManager remoteAlertHandleDidDeactivate:]
-[SODaemonUIManager remoteAlertHandle:didInvalidateWithError:]
-[SODaemonUIManager _closeRemoteAlert]
-[SODaemonUIManager listener:shouldAcceptNewConnection:]
-[SODaemonUIManager connectionInvalidated]
-[SODaemonUIManager authorizationDidCompleteWithCredential:error:completion:]
authorization already finished => ignoring complete request
invalidationHandler
T@?,C,V_invalidationHandler
delegate
T@"<SODaemonUIProtocol>",W,N,V_delegate
SODaemonUIManager
SOErrorHelper
-[SODaemon initWithXPCConnection:]
v24@?0@"SORequestQueue"8@"SORequestQueueItem"16
v24@?0@"SOAuthorizationCredentialCore"8@"NSError"16
-[SODaemon getAuthorizationHintsWithURL:responseCode:completion:]
No AppSSO IdP extension found (internal extension)
No AppSSO IdP extension found
-[SODaemon performAuthorizationWithRequestParameters:completion:]
-[SODaemon _performAuthorizationWithRequestParameters:completion:]
-[SODaemon beginAuthorizationWithRequestParameters:completion:]
-[SODaemon _doAKshouldProcessURL:]
-[SODaemon cancelAuthorizationWithCompletion:]
-[SODaemon configurationWithCompletion:]
-[SODaemon realmsWithCompletion:]
-[SODaemon debugHintsWithCompletion:]
-[SODaemon isExtensionProcessWithAuditToken:completion:]
-[SODaemon authorizationDidCompleteWithCredential:error:completion:]
-[SODaemon listener:shouldAcceptNewConnection:]
-[SODaemon connectionInvalidated]
-[SODaemon beginAuthorizationWithCompletion:]
SODaemon
SOAuthorizationCredential
SOAuthorizationHintsCore
SOUtils
SOAuthorizationCredentialCore
%{public}@, %{public}@
starting daemon
running NSRunLoop
%s  on %@
device screen is locked => canceling authorization request
activating SBSRemoteAlertHandle %{public}@
%s handle = %{public}@ on %@
%s _remoteAlertHandle = %{public}@, handle = %{public}@, isInternalExtension = %{public}@ on %@
%s _remoteAlertHandle = %{public}@, handle = %{public}@, error = %{public}@ on %@
%s _remoteAlertHandle = %{public}@ on %@
%s delegate = %{public}@, credential = %{public}@, error = %{public}@ on %@
authorization already finished => ignoring complete request
%s url: %{public}@, responseCode: %d on %@
%s %{public}@ on %@
%s %@ on %@
loadedExtensionWithBundleIdentifer: extension = %{public}@
extension id: %@, endpoint: %@
%s URL = %@, result = %@ on %@
%{private}@(%u) isExtensionProcess = %{public}@
%s authenticateCompletion = %@ on %@
PID: %u has auditToken: %@, callerBundleIdentifier: %@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>18A391012</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>AppSSODaemon</string>
<key>CFBundleIdentifier</key>
<string>com.apple.AppSSODaemon</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>AppSSODaemon</string>
<key>CFBundlePackageType</key>
<string>XPC!</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string></string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>17C33x</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>13.3</string>
<key>DTSDKBuild</key>
<string>17C33x</string>
<key>DTSDKName</key>
<string>iphonesimulator13.3.internal</string>
<key>DTXcode</key>
<string>1100</string>
<key>DTXcodeBuild</key>
<string>11M392v</string>
<key>MinimumOSVersion</key>
<string>13.3</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
<key>XPCService</key>
<dict>
<key>ServiceType</key>
<string>Application</string>
</dict>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.private.associated-domains</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.rootless.storage.ExtensibleSSO</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.springboard.services</string>
</array>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>appsso</string>
</array>
</dict>
</plist>
