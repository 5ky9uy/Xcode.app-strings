@(#)PROGRAM:AppSSOKerberos  PROJECT:AppSSO-1
%s  on %@
%s evaluateAccessControl was successful on %@
%s retrieving identity failed with error %d on %@
%s evaluateAccessControl failed with error %ld on %@
%s User cancelled PIN prompt on %@
%s Problem reading the SmartCard on %@
%s Some other problem occurred on %@
%s finished on %@
Error querying SmartCards %d
unexpected type for SmartCard query
Error getting persistientref %d
Error retrieving certificate %d
Retrieving Kerberos names from certificate
Saving values for profile: %@
error deserializing extension data: %{private}@
need to save: %d
error when saving plugin settings: %@
error when creating settings cache: %@
setting up ldap connection: %@, %d, %{public}@
LDAP TLS support is enabled
LDAP closed connection to server
setting up ldap connection: %@, %{public}@
tcp state: %u
tcp error: %@
connection closed or cancelled
Connecting to server
Failed to negotiate a TLS connection with the LDAP server
Query Response received
Failed to create LDAP query
LDAP disconnecting received
invalid input length
host contains invalid characters: %@
port contains invalid characters: %@
path contains invalid characters: %@
Start of discoverADInfoWithCompletion: %{public}@
responses for LDAP: %@
received new site code: %@, from server: %@
all LDAP operations complete
using site code: %@
Start of performLDAPPingUsingSite: %{public}@
Start of ldap operation for service: %{public}@
response from service: %{public}@
response from ldap: %{public}@
netlogon response: %{public}@
error with netlogon ping for service: %{public}@, %{public}@
error with ldap connection for service: %@, %@
connection cancelled
notify_cancel() failed with %u
notify_register_check() failed with %u
notify_get_state() failed with error %u
invalid notify token
notify_set_state() failed with error %u
notify_post() failed with error %u
notify_register_dispatch failed: %u
caching site code: %@
found cached site code: %@
Defaults updated: %@, %@
Creating sem: %@
signaling sem: %@
Error deserializing plist: %{public}@
Error archiving site code cache: error: %{public}@
Unable to resolve persistient reference %@
SecItemCopyMatching returned: %d for uuid: %@
%s service %@ on %@
%s requireUserPresence is enabled on %@
%s requireUserPresence is disabled on %@
Could not create ACL for adding credentials to keychain.
%s Could not add credentials to keychain. Invalid parameters on %@
Removing keychain entry returned %d
Finding keychain entry for service %@
%s Could not find credentials in keychain. Invalid parameters on %@
Finding keychain entry failed with %d
Checking if keychain entry existis for service %@
Deleting keychain entry for service %@
%s Could not delete credentials from keychain. Invalid parameters on %@
Deleting keychain entry failed with %d
user principal name is set in saved settings: %@
user name is set in extensiondata: %@
user principal name is set in request: %@
user name is read only
*************** starting request: %@
*************** request already started: %@
*************** finishing request: %@
*************** request already finished: %@
*************** waitForCompletion: %@
*************** waitForCompletion Finished: %@
*************** canceling request: %@
*************** completeRequest: %@
*************** completeRequestWithHeaders: %{private}@
*************** completeRequesWithHTTPBody: %{private}@
*************** completeRequesWithHTTPResponse: %{private}@
*************** completeRequestWithError: %{public}@
completeRequestWithDoNotHandle: %{public}@
*************** presentAuthorizationViewControllerWithCompletion: %{public}@
Start of ldap operation for host: %{public}@
connected to host: %{public}@
error with netlogon ping for host: %{public}@, %{public}@
error with ldap connection for host: %@, %@
%s Stored version: %d on %@
******************* beginAuthorizationWithRequest: %@, realm: %@, operation: %@
cancelAuthorizationWithRequest: %{public}@
request count: %lu
canceling context: %@
handleKerberosOperations: %{public}@
creating new kerberosAuthentication for realm: %{public}@
Result error: %{public}@
timeout waiting for platform sso login: %{public}@
showing login view controller: %{public}@
handleGetSiteCode: %{public}@
requesting a new sitecode
timeout waiting for sitecode, proceeding
******************* end handleGetSiteCode
handleRemoveRealm: %{public}@
******************* end handleRemoveRealm
Removing Realm: %{public}@
error when deleting plugin settings: %@
handleLogout: %@, removeRealm: %@
******************* end handleLogout
destroyCredentialsWithContext
destroy credential with UUID: %@
destroy credential with upn: %@
handleResetKeychainChoice: %{public}@
******************* end handleResetKeychainChoice
handleGetRealmInfo: %{public}@
completing request with data: %{private}@
******************* end handleGetRealmInfo
checking bundle id: %@ is in ACL: %@
checking bundle id check passed
createContextForRequest: %{public}@
retrieving principalname from certificate
using principalname %@
certificate not found
attemptKerberos
Received token, completing
Received cred UUID, completing
Received error: %@
Unsupported Encryption: %@
Server Principal Unknown: %@
Result unhandled: %lu
completing request with token: %{private}@
Password change error code: %@
Password change error: %{public}@
returning currentCredential: %@
error encoding currentCredential for realm: %{public}@
returning siteCode: %@
error encoding siteCode for realm: %{public}@
error encoding settings for realm: %{public}@
createOrSaveSettings: %@, realm: %@
settings cache entry missing
createSettingCacheEntryIfNeededWithError
creating settings cache
creating settings cache failed
settings cache created
settings cache already exists
More than one cache entry
createCacheEntry
Error creating cache entry: %@
More than one entry for: %{public}@
retrieveCurrentSettingsForRealm: %@
returning settings: %@
error with settings: %@, %@
retrieveAllCurrentSettings: %@
deleteSettingsForRealm: %@
deleteAllSettings
Start of attemptKerberos
using credential from cache: %@
using sitecode: %@
starting site code discovery
found existing credential received: %@
UUID nil after find credential for calling app: %{public}@
response for find existing credential: %lu
requireUserPresence is required for MDM certificate
new credential received: %@
UUID nil after authentication for calling app: %{public}@
response for new credential: %lu
error for new credential: %{public}@
Next pac refresh: %@
password last changed: %@, at login: %@
using credential: %{public}@
token received: %lu bytes
saveValuesForPlugins
siteCodeForCurrentNetworkAndRealmUsingContext
checking sitecode cache
using cached sitecode: %@
sitecode not found in cache
calling discoverADInfo
received sitecode: %@
sitecode saved
createNewCredentialUsingContext
using upn: %@
using pkinit
using certificate: %@ for uuid: %@
certificate not found for uuid: %@
certificate not found for token id: %@
error retrieving identity for persistient ref
using certificate: %@ for token id: %@
using LAContext: %@
Could not get a SecIdentityRef for token id: %@
password is missing
using cache: %@
complete bundleIdACL: %{public}@
using impersonation source app signing identifier: %{public}@
using source app signing identifier: %{public}@
findExistingCredentialUsingContext
%s using upn: %{public}@ on %@
changePasswordForUPN result: %{public}@
error during changePasswordForUPN: %{public}@
Error retreiving new TGT after password change: %lu, %@
%s login: %d on %@
Received Pac Data: %@
Error refreshing pac
evaluate vpn path: %{public}@
using audit token
vpn path: %{public}@
start of determineNetworkFingerprint
using bundleIdentifier: %{public}@
path: %{public}@
path is satisfied
path is not satisfied, return nil
vpn config uuid: %02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x
Per App VPN
On Demand VPN
vpn path: %@
On Demand VPN path not satisfied
VPN signature: %{private}@
this is cellular, return nil
Direct signature: %@
Network signature could not be created
VPN IP address: %{private}s
begin getInterfaceSignature
IPv4 signature
IPv6 signature
Dynamic interface signature
Using key: %{public}@, Router: %@
no matching entry found for %{public}s
archiving to file: %@
Error archiving file: %{public}@, error: %{public}@
Error writing file: %{public}@, error: %{public}@
loading from file: %@
Error reading plist file: %{public}@, message: %{public}@
Error using cached credential: %{public}@
createGSSName failed with: %{public}@
kerbGetTGTForUser: User entered a UPN in the username field.
kerbGetTGTForUser: User entered a standard username in the username field.
kerbValidatePassword: krb5_init_context failed with error: %d - %s
kerbValidatePassword: krb5_parse_name failed with error: %d - %s
kerbValidatePassword: krb5_get_init_creds_password failed with error: %d - %s
error parsing krb5 principal
error importing krb5 principal
GSSCreateName failed with: %{public}@
gss_aapl_initial_cred failed with: %{public}@
destroyCredentialForUPN - no UPN
failed to import %@: %{public}@
gss_init_sec_context failed server: %@, maj_stat: %d, min_stat: %d, %{public}@
have a buffer of length: %d, success
gsscred is not specified
Error initializing context: %d
Error copying cred uuid
Error resolving cache by uuid: %d
Error retrieving principal from cache: %d
Error creating TGT principal: %d
Error retrieving TGT from cache: %d
Error allocating cred opts: %d
Error decoding ticket: %d
Error setting second ticket: %d
Error completing delegation to self: %d
Error decoding delegation ticket: %d
Error decrypting ticket: %d
Error parsing pac: %d
Error verifying pac: %d
Error getting logon info from pac: %d
Error retrieving pac: %d
timeout waiting for srv data, proceeding
Starting SRV query: %@
adding result: %@
error receiving srv data
Starting host query: %@
error receiving dns data
+[SOSmartcard getLocalAuthIdentityForCert:withLAContext:]
com.apple.AppSSOKerberos
SIGN_IN_LOWERCASE_TEXT
+[SOSmartcard pollSmartcardForIdentityWithPersistentRef:tokenID:]
labl
+[SOSmartcard searchForCachedIdentityWithSerial:withIssuer:withTokenID:]
+[SOSmartcard searchForCachedIdentityPersistentRef:tokenID:]
v8@?0
com.apple.AppSSO
SOSmartcard
-[SOKerberosSettingsManager createKerberosSettingsCache]
SOKerberosSettingsManager
v20@?0@"NSObject<OS_ldap_connection>"8i16
Already connected to server
There is already an ldap connection
Waiting for connection: %@
Failed to connect to server: %@
connection closed or cancelled
v20@?0i8@"NSObject<OS_nw_error>"12
Connected to server
Failed to connect to server: %d
v28@?0@"NSObject<OS_ldap_connection>"8^{__CFString=}16i24
v24@?0@"NSObject<OS_ldap_operation>"8^{__CFDictionary=}16
LDAP Connection Error: %@
v20@?0@"NSObject<OS_ldap_operation>"8i16
LDAP Failed to create query
SOLDAPHelper
host: %@, port: %d
tcp/
udp/
http://
http
http/
kkdcp://
kkdcp
host://
SOKerberosServer
No gss credentials or errors found during authentication
Password change is not enabled
Service principal name is missing
Invalid Kerberos operation
Host name missing
Kerberos result unhandled
Source app not allowed
Password sync is not enabled
useKeychain
useSmartCard
userSetKeychainChoice
com.apple.appsso.Kerberos.ldap.%@
_ldap._tcp.%@
v20@?0B8@"NSString"12
v16@?0@"NSArray"8
_ldap._tcp.%@._sites.%@
(&(DnsDomain=%@)(NtVer=\06\00\00\00))
netlogon
v28@?0B8@"NSString"12@"NSDictionary"20
SOADSiteDiscovery
%@, %@, %@
-[SOKerberosRealmSettings initWithRealm:]
siteCodeCache
com.apple.Kerberos.%@
userPrincipalName
userName
credentialUUID
pkinitPersistientRef
smartCardTokenID
dateLastLogin
datePasswordLastChanged
datePasswordLastChangedAtLogin
dateNextPacRefresh
datePasswordCanChange
dateLocalPasswordLastChanged
dateADPasswordLastChangedWhenSynced
dateLocalPasswordLastChangedWhenSynced
datePasswordExpires
passwordNeverExpires
dateExpirationNotificationSent
dateExpirationChecked
networkHomeDirectory
delayUserSetupCleared
networkAvailable
userCancelledLogin
dateLoginCancelled
passwordChangeInProgress
dateUserSignedOut
v12@?0i8
platformSSOLoginInProgress
SOKerberosRealmSettings
-[SOKeychainHelper addCredentialsToKeychainWithService:withUsername:withPassword:requireUserPresence:]
-[SOKeychainHelper retrieveCredentialsFromKeychainWithContext:service:returnedUsername:returnedPassword:]
-[SOKeychainHelper hasCredentialsInKeychainWithService:]
-[SOKeychainHelper removeCredentialsFromKeychainWithService:]
SOKeychainHelper
kerberosDefault
whenNotSpecified
always
%@@%@
Kerberos:%@
com.apple.KerberosExtension.requestFinished
HTTP/1.1
SOKerberosContext
SOAsynchronousLDAPOperation
com.apple.AppSSOKerberos.version
-[SOKerberosExtensionProcess handleMigration]_block_invoke
-[SOKerberosExtensionProcess removeSettingFile:]
realmSettings.plist
rememberKeychainChoice
profile
realm
HTTP@%@
Negotiate %@
Authorization
kGSSMinorErrorCode
PASSWORD_CHANGE_PASSWORD_CHANGE_FAILED_OLD_PASSWORD_ALERT_TEXT
PASSWORD_CHANGE_PASSWORD_CHANGE_FAILED_SERVER_ALERT_TEXT
KDC_UNREACHABLE
REALM_CASE_MISMATCH
DEFAULT_REALM_MISSING
NSDescription
SOKerberosExtensionProcess
ASAuthorizationOperationLogout
ASAuthorizationProviderAuthorizationOperationConfigurationRemoved
ASAuthorizationOperationLogin
login
logout
get_credential_uuid
get_site_code
remove_realm
change_password
get_realm_info
reset_keychain_preference
site_code
gss_cred_uuid
is_default_realm
host_name
host_suffix_length
user_name
force
login_date
password_changed_date
local_password_changed_date
password_expires_date
home_directory
verbose
site_code_cache
refresh
no site code
com.apple.KerberosPlugin.ConnectionCompleted
com.apple.KerberosPlugin.ADPasswordChanged
com.apple.KerberosPlugin.LocalPasswordSynced
com.apple.KerberosPlugin.InternalNetworkAvailable
com.apple.KerberosPlugin.InternalNetworkNotAvailable
com.apple.KerberosExtension.gotNewCredential
com.apple.KerberosExtension.foundExistingCredential
com.apple.KerberosExtension.passwordChangedWithPasswordSync
com.apple.KerberosExtension.userSignedOut
com.apple.KerberosExtension.configRemoved
group.com.apple.KerberosExtension
com.apple.AppSSOAgent
com.apple.KerberosMenuExtra
com.apple.app-sso
com.apple.kcc
com.apple.kdestroy
com.apple.ticketviewer
com.apple.AppSSO.Kerberos.CurrentCredential
com.apple.AppSSO.Kerberos.SiteCode
com.apple.AppSSO.Kerberos.Cache
<%@: %p> Realm: %@, isDefaultRealm: %@, domainRealmMapping: %@, hosts: %@, kdcs: %@, credentialUseMode: %@
isDefaultRealm
domainRealmMapping
hosts
kdcs
siteCode
currentCredential
credentialUseMode
com.apple.AppSSO.Kerberos.Configuration
SOKerberosHeimdalPluginSettings
v16@?0@"NSString"8
kGSSICCertificate
Kerberos
kGSSICAuthenticationContext
kGSSICPassword
API:%@
kGSSICKerberosCacheName
kGSSICSiteName
com.apple.private.gssapi.allowmanagedapps
kGSSICAppIdentifierACL
kGSSICAppleSourceAppSigningIdentity
kGSSICAppleSourceApp
-[SOKerberosAuthentication changePasswordWithContext:withError:]
-[SOKerberosAuthentication refreshPacValuesWithContext:atLogin:error:]
-[SOKerberosAuthentication refreshPacValuesWithContext:credential:atLogin:]
kGSSMechanism
SPNEGO
SOKerberosAuthentication
passwordLastSet: %@, passwordCanChange: %@, passwordMustChange: %@, passwordNeverExpires: %@, homeDirectory: %@
true
false
_kerberos._tcp.%@
NetworkExtension
NoSignature
com.apple.KerberosExtension
v32@?0@8@16^B24
SONetworkIdentity
SOKerberosFileManager
-[SOKerberosHelper acquireCredentialForUUID:]
failed to find credential: %@
-[SOKerberosHelper acquireCredentialForUPN:]
-[SOKerberosHelper changePasswordForUPN:realm:withOldPassword:withNewPassword:withError:]
kGSSChangePasswordOldPassword
kGSSChangePasswordNewPassword
-[SOKerberosHelper validatePassword:forUser:]
Enterprise Connect
-[SOKerberosHelper createGSSName:gname:error:]
-[SOKerberosHelper createCredential:withOptions:andError:]
-[SOKerberosHelper destroyAllCredentials]
v24@?0^{gss_OID_desc_struct=I^v}8^{gss_cred_id_t_desc_struct=}16
-[SOKerberosHelper destroyCredential:]
failed to find credential to destroy: %@
-[SOKerberosHelper destroyCredentialForUPN:]
-[SOKerberosHelper authenticate:toServer:returningToken:andError:]
-[SOKerberosHelper getPACForCred:pac:]
krbtgt
SOKerberosHelper
com.apple.AppSSO.wrapper
B24@?0Q8@"NSObject<OS_nw_object>"16
v20@?0i8@"NSObject<OS_nw_array>"12
SODNSSRVQuery
com.apple.kerberosextension.%@.network
com.apple.kerberosextension.%@.kerberos
isExecuting
isFinished
softlink:r:path:/System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
SOSmartcardEntry
SOSmartcard
SOKerberosSettingsManager
SOLDAPHelper
SODNSSRVResponse
SOKerberosServer
AppSSOKerberos
SOKerberosExtensionUserData
SOADSiteDiscovery
SOSiteCode
NSSecureCoding
NSCoding
SOKerberosRealmSettings
SOKeychainHelper
SOAsynchronousBlockOperation
SOKerberosExtensionData
SOKerberosContext
SOAsynchronousLDAPOperation
SOKerberosExtensionProcess
SONetLogonParser
SOKerberosCredential
SOKerberosHeimdalPluginSettings
SOKerberosAuthentication
SOKerberosPacData
SONetworkIdentity
SOKerberosFileManager
SOKerberosHelper
SOAuthorizationWrapper
SOAuthorizationCoreDelegate
NSObject
SODNSSRVQuery
SOKerberosAgentContext
SOAsynchronousOperation
setUpn:
certName
setCertName:
tokenID
setTokenID:
attributes
setAttributes:
identity
setIdentity:
persistientRef
setPersistientRef:
.cxx_destruct
_upn
_certName
_tokenID
_attributes
_identity
_persistientRef
T@"NSString",&,V_upn
T@"NSString",&,V_certName
T@"NSString",&,V_tokenID
T@"NSDictionary",&,V_attributes
T^{__SecIdentity=},V_identity
T@"NSData",&,V_persistientRef
numberWithInt:
bundleWithIdentifier:
localizedStringForKey:value:table:
dictionaryWithObjects:forKeys:count:
objectForKeyedSubscript:
evaluateAccessControl:operation:options:error:
code
searchForCachedIdentityPersistentRef:tokenID:
objectForKey:
length
dictionary
tokenIDs
countByEnumeratingWithState:objects:count:
getIdentityForPersistentRef:identityToReturn:
objectAtIndex:
addObject:
getLocalAuthIdentityForCert:withLAContext:
pollSmartcardForIdentityWithPersistentRef:tokenID:
searchForCachedIdentityWithSerial:withIssuer:withTokenID:
availableSmartCards
init
realm
retrieveCurrentSettingsForRealm:error:
initWithRealm:
hosts
isEqualToArray:
copy
setHosts:
extensionData
initWithDictionary:
isDefaultRealm
setDefaultRealm:
domainRealmMapping
isEqualToDictionary:
setDomainRealmMapping:
credentialUseMode
setCredentialUseMode:
useSiteAutoDiscovery
siteCode
setSiteCode:
kdcs
preferredKDCs
setKdcs:
saveWithError:
createSettingCacheEntryIfNeededWithError:
saveKerberosValuesForProfile:
createKerberosSettingsCache
isConnected
disconnect
dealloc
ldap
isEqualToString:
UTF8String
setIsConnected:
setLdap:
setupLDAPconnection:andPort:andRequireTLSForLDAP:andBundleIdentifier:
connectToLDAPWithCompletion:
setCompletionCalled:
setConnection:
connection
completionCalled
stringWithFormat:
stringWithCString:encoding:
startLDAPWithCompletion:
setValue:forKey:
connectToLDAPServer:andPort:andBundleIdentifier:andRequireTLSForLDAP:completion:
connectToLDAPService:requireTLSForLDAP:bundleIdentifier:inBackground:completion:
queryforBaseDN:andScope:andAttributes:withFilter:completion:
useDigestMD5Auth:andPassword:
useKerberosAuth:forSPN:
_isConnected
_completionCalled
_ldap
_connection
T@"NSObject<OS_ldap_connection>",&,N,V_ldap
T@"NSObject<OS_nw_connection>",&,V_connection
TB,V_completionCalled
TB,N,V_isConnected
host
port
description
setHost:
setPort:
_port
_host
T@"NSString",&,N,V_host
TS,N,V_port
lowercaseString
hasPrefix:
containsString:
substringFromIndex:
stringByAppendingString:
initWithString:
hasSuffix:
substringWithRange:
stringValue
path
URLHostAllowedCharacterSet
invertedSet
rangeOfCharacterFromSet:
decimalDigitCharacterSet
URLPathAllowedCharacterSet
initWithHost:port:protocol:path:
serverWithString:
protocol
_protocol
_path
T@"NSString",R,V_host
T@"NSString",R,V_protocol
T@"NSString",R,V_port
T@"NSString",R,V_path
kerberosErrorWithCode:withDescription:
initWithDomain:code:userInfo:
credentialMissing
passwordChangeNotEnabled
servicePrincipalNameMissing
invalidKerberosOperation
hostNameMissing
unhandledKerberosResult
sourceAppNotAllowed
passwordSyncNotEnabled
standardUserDefaults
registerDefaults:
boolForKey:
setBool:forKey:
useKeychain
setUseKeychain:
userSetKeychainChoice
setUserSetKeychainChoice:
useSmartCard
setUseSmartCard:
TB,N
setName:
setMaxConcurrentOperationCount:
queue
cancelAllOperations
initWithRealm:andHost:andPort:andBundleIdentifier:andRequireTLSForLDAP:andCompletion:
addOperation:
waitUntilAllOperationsAreFinished
lookupSRVWithQuery:bundleIdentifier:auditTokenData:completion:
firstObject
base64EncodedStringWithOptions:
parseNetLoginUsingData:
numberWithShort:
discoverADInfoUsingSourceAppBundleIdentifier:auditTokenData:requireTLSForLDAP:withCompletion:
performLDAPPingUsingSite:bundleIdentifier:auditTokenData:requireTLSForLDAP:inBackground:completion:
performNetworkConnectionUsingService:orHost:port:inBackground:completion:
setRealm:
setQueue:
setDns:
_realm
_queue
_dns
T@"NSString",&,N,V_realm
T@"NSOperationQueue",&,N,V_queue
T@"SODNSSRVQuery",&,V_dns
date
setFormatOptions:
timeStamp
stringFromDate:
networkFingerprint
timeIntervalSinceDate:
containsValueForKey:
decodeObjectOfClass:forKey:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithSiteCode:forNetworkFingerprint:
_code
_timeStamp
_networkFingerprint
T@"NSString",R,N,V_code
T@"NSDate",R,N,V_timeStamp
T@"NSString",R,N,V_networkFingerprint
realmKey:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:
stringByAppendingFormat:
defaults
dictionaryRepresentation
allKeys
removeObjectForKey:
setObject:forKey:
initWithUUIDString:
UUIDString
datePasswordExpires
timeIntervalSinceNow
numberWithDouble:
numberWithUnsignedLongLong:
boolValue
platformSSOLoginInProgress
siteCodeCache
removeObject:
saveSiteCodes
loadSiteCodes
platformSSOLoginSemaphore
dataForKey:
arrayWithObjects:count:
setWithArray:
unarchivedObjectOfClasses:fromData:error:
mutableCopy
setSiteCodeCache:
archivedDataWithRootObject:requiringSecureCoding:error:
removeAllValues
save
userPrincipalName
setUserPrincipalName:
userName
setUserName:
credentialUUID
setCredentialUUID:
pkinitPersistientRef
setPkinitPersistientRef:
smartCardTokenID
setSmartCardTokenID:
dateLastLogin
setDateLastLogin:
datePasswordLastChanged
setDatePasswordLastChanged:
datePasswordLastChangedAtLogin
setDatePasswordLastChangedAtLogin:
dateNextPacRefresh
setDateNextPacRefresh:
dateADPasswordCanChange
setDateADPasswordCanChange:
dateLocalPasswordLastChanged
setDateLocalPasswordLastChanged:
dateADPasswordLastChangedWhenSynced
setDateADPasswordLastChangedWhenSynced:
dateLocalPasswordLastChangedWhenSynced
setDateLocalPasswordLastChangedWhenSynced:
setDatePasswordExpires:
passwordNeverExpires
setPasswordNeverExpires:
dateExpirationNotificationSent
setDateExpirationNotificationSent:
dateExpirationChecked
setDateExpirationChecked:
daysUntilExpiration
networkHomeDirectory
setNetworkHomeDirectory:
delayUserSetupCleared
setDelayUserSetupCleared:
networkAvailable
setNetworkAvailable:
userCancelledLogin
setUserCancelledLogin:
dateLoginCancelled
setDateLoginCancelled:
passwordChangeInProgress
setPasswordChangeInProgress:
dateUserSignedOut
setDateUserSignedOut:
setPlatformSSOLoginInProgress:
startListeningForPlatformSSOTGTChanges
dumpSiteCodeCache
cacheSiteCode:
siteCodeForNetworkFingerprint:
observeValueForKeyPath:ofObject:change:context:
setDefaults:
notifyToken
setNotifyToken:
notificationName
setNotificationName:
_notifyToken
_platformSSOLoginSemaphore
_siteCodeCache
_defaults
_notificationName
T@"NSMutableArray",&,N,V_siteCodeCache
T@"NSUserDefaults",&,V_defaults
T@"NSString",&,V_realm
Ti,V_notifyToken
T@"NSString",&,N,V_notificationName
T@"NSString",&,D,N
T@"NSUUID",&,D,N
T@"NSData",&,D,N
T@"NSDate",&,D,N
T@"NSDate",&,N
TB,D,N
T@"NSNumber",R,D,N
T@"NSObject<OS_dispatch_semaphore>",R,V_platformSSOLoginSemaphore
dataUsingEncoding:
setObject:forKeyedSubscript:
initWithData:encoding:
setInteractionNotAllowed:
identityForPersistientRef:
identityForUUIDString:
addCredentialsToKeychainWithService:withUsername:withPassword:requireUserPresence:
retrieveCredentialsFromKeychainWithContext:service:returnedUsername:returnedPassword:
hasCredentialsInKeychainWithService:
removeCredentialsFromKeychainWithService:
block
finish
initWithBlock:
main
setBlock:
_block
T@?,C,V_block
pwReqComplexity
syncLocalPassword
pwNotificationDays
numberWithInteger:
pwExpireOverride
pwChangeURL
pwReqLength
pwReqMinAge
pwReqHistory
pwReqText
helpText
customUsernameLabel
cacheName
principalName
certificateUUID
allowAutomaticLogin
requireUserPresence
monitorCredentialsCache
replicationTime
credentialBundleIdACL
array
count
allowPasswordChange
delayUserSetup
requireTLSForLDAP
includeManagedAppsInBundleIdACL
includeKerberosAppsInBundleIdACL
isInternalBuild
password
usePlatformSSOTGT
allowPlatformSSOAuthFallback
performKerberosOnly
setCacheName:
setPrincipalName:
setCertificateUUID:
setUseSiteAutoDiscovery:
setCredentialBundleIdACL:
setIncludeManagedAppsInBundleIdACL:
setIncludeKerberosAppsInBundleIdACL:
setIsDefaultRealm:
setAllowPasswordChange:
setAllowAutomaticLogin:
setRequireUserPresence:
setPwChangeURL:
setPwExpireOverride:
setPwNotificationDays:
setPwReqComplexity:
setPwReqLength:
setPwReqMinAge:
setPwReqHistory:
setPwReqText:
setHelpText:
setCustomUsernameLabel:
setReplicationTime:
setSyncLocalPassword:
setMonitorCredentialsCache:
setDelayUserSetup:
setRequireTLSForLDAP:
setPassword:
setPreferredKDCs:
setUsePlatformSSOTGT:
setAllowPlatformSSOAuthFallback:
setPerformKerberosOnly:
_useSiteAutoDiscovery
_includeManagedAppsInBundleIdACL
_includeKerberosAppsInBundleIdACL
_isDefaultRealm
_allowPasswordChange
_allowAutomaticLogin
_requireUserPresence
_pwReqComplexity
_syncLocalPassword
_monitorCredentialsCache
_delayUserSetup
_requireTLSForLDAP
_usePlatformSSOTGT
_allowPlatformSSOAuthFallback
_performKerberosOnly
_cacheName
_principalName
_siteCode
_certificateUUID
_credentialBundleIdACL
_domainRealmMapping
_pwChangeURL
_pwExpireOverride
_pwNotificationDays
_pwReqLength
_pwReqMinAge
_pwReqHistory
_pwReqText
_helpText
_customUsernameLabel
_replicationTime
_credentialUseMode
_password
_preferredKDCs
T@"NSString",&,N,V_cacheName
T@"NSString",&,N,V_principalName
T@"NSString",&,N,V_siteCode
T@"NSString",&,N,V_certificateUUID
TB,N,V_useSiteAutoDiscovery
T@"NSArray",&,N,V_credentialBundleIdACL
TB,N,V_includeManagedAppsInBundleIdACL
TB,N,V_includeKerberosAppsInBundleIdACL
T@"NSDictionary",&,N,V_domainRealmMapping
TB,N,V_isDefaultRealm
TB,N,V_allowPasswordChange
TB,N,V_allowAutomaticLogin
TB,N,V_requireUserPresence
T@"NSString",&,N,V_pwChangeURL
T@"NSNumber",&,N,V_pwExpireOverride
T@"NSNumber",&,N,V_pwNotificationDays
TB,V_pwReqComplexity
T@"NSNumber",&,N,V_pwReqLength
T@"NSNumber",&,N,V_pwReqMinAge
T@"NSNumber",&,N,V_pwReqHistory
T@"NSString",&,N,V_pwReqText
T@"NSString",&,N,V_helpText
T@"NSString",&,N,V_customUsernameLabel
T@"NSNumber",&,N,V_replicationTime
TB,V_syncLocalPassword
TB,V_monitorCredentialsCache
TB,V_delayUserSetup
Tq,N,V_credentialUseMode
TB,V_requireTLSForLDAP
T@"NSString",&,N,V_password
T@"NSArray",&,N,V_preferredKDCs
TB,N,V_usePlatformSSOTGT
TB,N,V_allowPlatformSSOAuthFallback
TB,N,V_performKerberosOnly
localizedCallerDisplayName
uppercaseString
callerBundleIdentifier
authorizationRequest
impersonationBundleIdentifier
isCallerManaged
auditTokenData
httpHeaders
stringByReplacingOccurrencesOfString:withString:options:range:
requestStarted
setRequestStarted:
dispatchGroup
defaultCenter
postNotificationName:object:
cancelRequest:
setRequestCancelled:
finishRequest
cancel
complete
completeWithHTTPAuthorizationHeaders:
initWithURL:statusCode:HTTPVersion:headerFields:
completeRequestWithHTTPResponse:httpBody:
completeWithHTTPResponse:httpBody:
completeWithError:
doNotHandle
presentAuthorizationViewControllerWithHints:completion:
initWithRequest:extensionData:
serviceName
setUserPrincipalNameAfterAuth:
startRequest
waitForCompletion
cancelRequest
completeRequest
completeRequestWithHeaders:
completeRequestWithHTTPResponseHeaders:
completeRequestWithError:
completeRequestWithDoNotHandle
presentAuthorizationViewControllerWithCompletion:
currentSettings
setExtensionData:
extensionUserData
setExtensionUserData:
hostName
setHostName:
servicePrincipalName
setServicePrincipalName:
setServiceName:
changedPassword
setChangedPassword:
userNameIsReadOnly
setUserNameIsReadOnly:
certificateTokenID
setCertificateTokenID:
pkinitIdentity
setPkinitIdentity:
smartCardLAContext
setSmartCardLAContext:
keychainLAContext
setKeychainLAContext:
useKerberosPasswordInsteadOfMDMIdentity
setUseKerberosPasswordInsteadOfMDMIdentity:
returnCredentialOnly
setReturnCredentialOnly:
refreshCredential
setRefreshCredential:
setCallerBundleIdentifier:
setImpersonationBundleIdentifier:
callerLocalizedName
setCallerLocalizedName:
credsCameFromKeychain
setCredsCameFromKeychain:
requestCancelled
attemptedToGetCredsFromKeychain
setAttemptedToGetCredsFromKeychain:
laContextFailureCount
setLaContextFailureCount:
forceLoginViewController
setForceLoginViewController:
loginTimeStamp
setLoginTimeStamp:
siteCodeGroup
setSiteCodeGroup:
networkIdentity
setNetworkIdentity:
auditToken
setAuditToken:
isManagedApp
setIsManagedApp:
smartCardNeedsInsert
setSmartCardNeedsInsert:
pacData
setPacData:
setAuthorizationRequest:
setDispatchGroup:
_userNameIsReadOnly
_useKerberosPasswordInsteadOfMDMIdentity
_returnCredentialOnly
_refreshCredential
_credsCameFromKeychain
_requestCancelled
_attemptedToGetCredsFromKeychain
_forceLoginViewController
_isManagedApp
_smartCardNeedsInsert
_requestStarted
_laContextFailureCount
_userPrincipalName
_userName
_currentSettings
_extensionData
_extensionUserData
_hostName
_servicePrincipalName
_serviceName
_changedPassword
_credentialUUID
_certificateTokenID
_pkinitIdentity
_pkinitPersistientRef
_smartCardLAContext
_keychainLAContext
_callerBundleIdentifier
_impersonationBundleIdentifier
_callerLocalizedName
_loginTimeStamp
_siteCodeGroup
_networkIdentity
_auditToken
_pacData
_authorizationRequest
_dispatchGroup
T@"ASAuthorizationProviderExtensionAuthorizationRequest",&,N,V_authorizationRequest
T@"NSObject<OS_dispatch_group>",&,V_dispatchGroup
TB,N,V_requestStarted
TB,N,V_requestCancelled
T@"NSData",&,N,V_auditToken
TB,N,V_isManagedApp
T@"SOKerberosExtensionData",&,N,V_extensionData
T@"SOKerberosExtensionUserData",&,N,V_extensionUserData
T@"NSString",&,N,V_hostName
T@"NSString",&,N,V_servicePrincipalName
T@"NSString",&,N,V_serviceName
T@"NSString",&,N,V_changedPassword
TB,N,V_userNameIsReadOnly
T@"NSString",&,N,V_userPrincipalName
T@"NSString",&,N,V_userName
T@"NSUUID",&,N,V_credentialUUID
T@"NSString",&,N,V_certificateTokenID
T^{__SecIdentity=},V_pkinitIdentity
T@"NSData",&,V_pkinitPersistientRef
T@"LAContext",&,V_smartCardLAContext
T@"LAContext",&,V_keychainLAContext
TB,N,V_useKerberosPasswordInsteadOfMDMIdentity
T@"SOSiteCode",&,N,V_siteCode
TB,N,V_returnCredentialOnly
TB,N,V_refreshCredential
T@"SOKerberosRealmSettings",R,N,V_currentSettings
T@"NSString",&,N,V_callerBundleIdentifier
T@"NSString",&,N,V_impersonationBundleIdentifier
T@"NSString",&,N,V_callerLocalizedName
TB,N,V_credsCameFromKeychain
TB,N,V_attemptedToGetCredsFromKeychain
Ti,N,V_laContextFailureCount
TB,N,V_forceLoginViewController
T@"NSDate",&,N,V_loginTimeStamp
T@"NSObject<OS_dispatch_group>",&,N,V_siteCodeGroup
T@"SONetworkIdentity",&,N,V_networkIdentity
TB,N,V_smartCardNeedsInsert
T@"SOKerberosPacData",&,N,V_pacData
setCompletion:
setBundleIdentifier:
bundleIdentifier
completion
_completion
_bundleIdentifier
T@?,C,V_completion
TB,N,V_requireTLSForLDAP
T@"NSString",&,N,V_bundleIdentifier
weakToWeakObjectsMapTable
intValue
removeSettingFile:
documentsDirectoryURLForFileName:
defaultManager
removeItemAtURL:error:
requestedOperation
handleMigration
handleLogout:removeRealm:
handleGetSiteCode:
handleRemoveRealm:
handleResetKeychainChoice:
handleGetRealmInfo:
requestContextMapping
kerberosByRealm
createContextForRequest:
checkSourceAppACLWithContext:
handleResult:context:error:
attemptKerberosWithContext:andDelegate:
determineNetworkFingerprint
determineSiteCodeUsingContext:
retrieveCachedSiteCodeFromCacheForBundleIdentifier:networkFingerprint:
kerberosHelper
destroyCredential:
keychainHelper
deleteSettingsForRealm:error:
saveValuesForPlugins:
handleLogoutWithContext:removeRealm:
destroyCredentialForUPN:
synchronize
settingsForContext:includeSiteCodeCache:
initForRealm:bundleIdentifier:auditToken:
scheme
attemptKerberosWithContext:returningToken:orError:
completeRequestWithToken:andContext:
completeRequestWithHTTPResponseFromContext:
localizedDescription
saveValuesAfterSuccessfulAuthentication:
handleAddKeychainCreds:
userInfo
numberWithLong:
isEqualToNumber:
mainBundle
beginAuthorizationWithRequest:
cancelAuthorizationWithRequest:
handleKerberosOperations:andDelegate:
destroyCredentialsWithContext:
saveValuesAfterSuccessfulPasswordSync:
mapKnownPasswordErrorToString:
kerberosForRealm:
setKerberosByRealm:
setRequestContextMapping:
setKerberosHelper:
setKeychainHelper:
_kerberosByRealm
_requestContextMapping
_kerberosHelper
_keychainHelper
T@"NSMutableDictionary",&,N,V_kerberosByRealm
T@"NSMapTable",&,N,V_requestContextMapping
T@"SOKerberosHelper",&,V_kerberosHelper
T@"SOKeychainHelper",&,N,V_keychainHelper
getBytes:length:
dataWithBytes:length:
setLifetime:
setUuid:
name
lifetime
uuid
_lifetime
_name
_uuid
T@"NSString",&,V_name
TI,V_lifetime
T@"NSString",&,V_uuid
retrieveSetting:forRealm:
unarchivedObjectOfClass:fromData:error:
saveSetting:data:withError:
stringWithCredentialUseMode:
numberWithBool:
currentCredential
retrieveCacheEntry
createCacheEntryWithError:
appSSOKerberosCacheName
objectAtIndexedSubscript:
decodeBoolForKey:
decodeObjectOfClasses:forKey:
decodeIntegerForKey:
encodeBool:forKey:
encodeInteger:forKey:
setAppSSOKerberosCacheName:
retrieveCurrentSettingsForRealm:
retrieveAllCurrentSettings
deleteAllSettings
T@"NSString",&
setCurrentCredential:
_defaultRealm
_hosts
_kdcs
T@"NSString",R,N,V_realm
defaultRealm
TB,N,GisDefaultRealm,V_defaultRealm
T@"NSArray",&,N,V_hosts
T@"NSArray",&,N,V_kdcs
T@"NSString",&,N
T@"NSUUID",&,N
triggerVPNIfNeededUsingRealm:bundleIdentifier:auditToken:
acquireCredentialForUUID:
findExistingCredentialUsingContext:returningCredential:orError:
setSiteCodeUsingContext:
createNewCredentialUsingContext:returningCredential:orError:
refreshPacValuesWithContext:credential:atLogin:
isEqualToDate:
authenticate:toServer:returningToken:andError:
mapErrorToKnownError:
passwordMustChange
passwordLastSet
passwordCanChange
homeDirectory
dateWithTimeIntervalSinceNow:
_determineSiteCodeUsingDispatchGroup:bundleIdentifier:auditTokenData:networkFingerprint:requireTLSForLDAP:
siteDiscoveryInProgress
setSiteDiscoveryInProgress:
siteDiscovery
setOptionCallerName:
addObjectsFromArray:
createCredential:withOptions:andError:
acquireCredentialForUPN:
changePasswordForUPN:realm:withOldPassword:withNewPassword:withError:
getPACForCred:pac:
savePacValues:atLogin:
dateWithTimeIntervalSince1970:
changePasswordWithContext:withError:
refreshPacValuesWithContext:atLogin:error:
setSiteDiscovery:
_siteDiscoveryInProgress
_siteDiscovery
TB,V_siteDiscoveryInProgress
T@"SOKeychainHelper",&,V_keychainHelper
T@"SOADSiteDiscovery",&,V_siteDiscovery
convertFromFileTime:
initWithCharacters:length:
initWithValidationInfo:
setPasswordLastSet:
setPasswordCanChange:
setPasswordMustChange:
setHomeDirectory:
effectiveName
setEffectiveName:
fullName
setFullName:
_passwordNeverExpires
_passwordLastSet
_passwordCanChange
_passwordMustChange
_homeDirectory
_effectiveName
_fullName
T@"NSDate",&,V_passwordLastSet
T@"NSDate",&,V_passwordCanChange
T@"NSDate",&,V_passwordMustChange
TB,V_passwordNeverExpires
T@"NSString",&,V_homeDirectory
T@"NSString",&,V_effectiveName
T@"NSString",&,V_fullName
evaluateVPNPath:
auditTokenFromData:auditToken:
setPerAppVPN:
setNetworkFingerprint:
getVPNServerSignature:
setLastpath:
stringWithUTF8String:
getInterfaceSignature:
appendBytes:length:
getInterfaceFingerprintForDynamicInterface:
enumerateKeysAndObjectsUsingBlock:
isPerAppVPN
evaluateVPNPathForHost:port:
evaluateVPNPath
lastpath
_perAppVPN
_lastpath
T@"NSString",&,N,V_networkFingerprint
perAppVPN
TB,N,GisPerAppVPN,V_perAppVPN
T@"NSObject<OS_nw_path>",&,N,V_lastpath
writeToURL:options:error:
dataWithContentsOfURL:options:error:
URLsForDirectory:inDomains:
URLByAppendingPathComponent:
archiveDictionary:toFile:
loadDictionaryFromFile:
createGSSName:gname:error:
regularExpressionWithPattern:options:error:
numberOfMatchesInString:options:range:
_testForUPNForUser:
componentsSeparatedByString:
initWithBytes:length:
validatePassword:forUser:
destroyAllCredentials
listCredentials
setDelegateDispatchQueue:
setDelegate:
beginAuthorizationWithOperation:url:httpHeaders:httpBody:
canPerformAuthorizationWithURL:responseCode:
allHeaderFields
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
authorizationDidNotHandle:
authorizationDidCancel:
authorizationDidComplete:
authorization:didCompleteWithHTTPAuthorizationHeaders:
authorization:didCompleteWithHTTPResponse:httpBody:
authorization:didCompleteWithAuthorizationResult:
authorization:didCompleteWithError:
beginAuthorizationWithOperation:url:httpHeaders:httpBody:andCompletion:
authorizationCompletion
setAuthorizationCompletion:
_authorization
_authorizationCompletion
T@?,C,V_authorizationCompletion
substringToIndex:
lookupSRVWithQuery:bundleIdentifier:auditTokenData:
lookupHost:port:bundleIdentifier:auditTokenData:completion:
setSuspended:
initWithProfile:
authRequestPending
setAuthRequestPending:
contextNetworkWorkQueue
contextKerberosWorkQueue
profile
setProfile:
settings
setSettings:
authWrapper
setAuthWrapper:
receivedTGTAuthWrapper
setReceivedTGTAuthWrapper:
passwordSyncAuthWrapper
setPasswordSyncAuthWrapper:
passwordChangeAuthWrapper
setPasswordChangeAuthWrapper:
discoveryInProgress
setDiscoveryInProgress:
_authRequestPending
_discoveryInProgress
_contextNetworkWorkQueue
_contextKerberosWorkQueue
_profile
_settings
_authWrapper
_receivedTGTAuthWrapper
_passwordSyncAuthWrapper
_passwordChangeAuthWrapper
T@"SOFullProfile",&,V_profile
T@"SOKerberosRealmSettings",&,V_settings
T@"SOKerberosExtensionData",&,V_extensionData
T@"SONetworkIdentity",&,V_identity
T@"SOAuthorizationWrapper",&,V_authWrapper
T@"SOAuthorizationWrapper",&,V_receivedTGTAuthWrapper
T@"SOAuthorizationWrapper",&,V_passwordSyncAuthWrapper
T@"SOAuthorizationWrapper",&,V_passwordChangeAuthWrapper
T@"NSOperationQueue",R,V_contextNetworkWorkQueue
T@"NSOperationQueue",R,V_contextKerberosWorkQueue
TB,V_authRequestPending
TB,V_discoveryInProgress
setState:
state
isReady
isCancelled
willChangeValueForKey:
didChangeValueForKey:
isFinished
isExecuting
isAsynchronous
start
_state
TQ,N,V_state
@16@0:8
v24@0:8@16
^{__SecIdentity=}16@0:8
v24@0:8^{__SecIdentity=}16
v16@0:8
@"NSString"
@"NSDictionary"
^{__SecIdentity=}
@"NSData"
^{__SecIdentity=}32@0:8@16@24
i32@0:8^{__CFData=}16^^{__SecIdentity}24
B32@0:8@16@24
@40@0:8^{__CFData=}16^{__CFData=}24@32
@32@0:8@16@24
B16@0:8
v40@0:8@16S24B28@32
v48@0:8@16S24@28B36@?40
v48@0:8@16B24@28B36@?40
v24@0:8@?16
v52@0:8@16i24@28@36@?44
v32@0:8@16@24
v32@0:8^{gss_cred_id_t_desc_struct=}16@24
v20@0:8B16
@"NSObject<OS_ldap_connection>"
@"NSObject<OS_nw_connection>"
S16@0:8
v20@0:8S16
@24@0:8@16
@48@0:8@16@24@32@40
@32@0:8q16@24
v44@0:8@16@24B32@?36
v56@0:8@16@24@32B40B44@?48
v48@0:8@16@24S32B36@?40
@"NSOperationQueue"
@"SODNSSRVQuery"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
d16@0:8
@"NSDate"
v48@0:8@16@24@32^v40
i16@0:8
v20@0:8i16
@"NSObject<OS_dispatch_semaphore>"
@"NSMutableArray"
@"NSUserDefaults"
^{__SecIdentity=}24@0:8@16
i44@0:8@16@24@32B40
i48@0:8@16@24^@32^@40
B24@0:8@16
i24@0:8@16
@24@0:8@?16
@?16@0:8
q16@0:8
v24@0:8q16
@"NSArray"
@"NSNumber"
@"SOKerberosRealmSettings"
@"SOKerberosExtensionData"
@"SOKerberosExtensionUserData"
@"NSUUID"
@"LAContext"
@"SOSiteCode"
@"NSObject<OS_dispatch_group>"
@"SONetworkIdentity"
@"SOKerberosPacData"
@"ASAuthorizationProviderExtensionAuthorizationRequest"
@56@0:8@16@24S32@36B44@?48
v28@0:8@16B24
@28@0:8@16B24
@"NSMutableDictionary"
@"NSMapTable"
@"SOKerberosHelper"
@"SOKeychainHelper"
I16@0:8
v20@0:8I16
@24@0:8q16
B24@0:8^@16
^{HeimCred_s=}16@0:8
^{HeimCred_s=}24@0:8^@16
^{HeimCred_s=}24@0:8@16
^{HeimCred_s=}32@0:8@16@24
@32@0:8@16^@24
B32@0:8@16^@24
B40@0:8@16@24^@32
Q40@0:8@16^@24^@32
v52@0:8@16@24@32@40B48
Q40@0:8@16^^{gss_cred_id_t_desc_struct}24^@32
B36@0:8@16B24^@28
B36@0:8@16^{gss_cred_id_t_desc_struct=}24B32
Q24@0:8@16
v40@0:8@16@24@32
@"SOADSiteDiscovery"
@24@0:8^{?=QQQQQQ{?=SSIIII^S}{?=SSIIII^S}{?=SSIIII^S}{?=SSIIII^S}{?=SSIIII^S}{?=SSIIII^S}SSIIII^{?}{?=SSIIII^S}{?=SSIIII^S}I{?=CC[6C][16I]}}16
@24@0:8Q16
@40@0:8@16@24@32
@24@0:8r*16
@"NSObject<OS_nw_path>"
^{gss_cred_id_t_desc_struct=}24@0:8@16
B56@0:8@16@24@32@40^@48
I40@0:8@16^^{gss_name_t_desc_struct}24^@32
^{gss_cred_id_t_desc_struct=}40@0:8@16@24^@32
B48@0:8^{gss_cred_id_t_desc_struct=}16@24^@32^@40
B32@0:8^{gss_cred_id_t_desc_struct=}16^@24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"SOAuthorizationCore"16
v32@0:8@"SOAuthorizationCore"16@"NSDictionary"24
v40@0:8@"SOAuthorizationCore"16@"NSHTTPURLResponse"24@"NSData"32
v32@0:8@"SOAuthorizationCore"16@"SOAuthorizationResultCore"24
v32@0:8@"SOAuthorizationCore"16@"NSError"24
v56@0:8@16@24@32@40@?48
B32@0:8@16q24
@"SOAuthorizationCore"
v48@0:8@16@24@32@?40
@"SOFullProfile"
@"SOAuthorizationWrapper"
v24@0:8Q16
@(#)PROGRAM:AppSSOKerberos  PROJECT:AppSSO-1
%s  on %@
%s evaluateAccessControl was successful on %@
%s retrieving identity failed with error %d on %@
%s evaluateAccessControl failed with error %ld on %@
%s User cancelled PIN prompt on %@
%s Problem reading the SmartCard on %@
%s Some other problem occurred on %@
%s finished on %@
Error querying SmartCards %d
unexpected type for SmartCard query
Error getting persistientref %d
Error retrieving certificate %d
Retrieving Kerberos names from certificate
Saving values for profile: %@
error deserializing extension data: %{private}@
need to save: %d
error when saving plugin settings: %@
error when creating settings cache: %@
setting up ldap connection: %@, %d, %{public}@
LDAP TLS support is enabled
LDAP closed connection to server
setting up ldap connection: %@, %{public}@
tcp state: %u
tcp error: %@
connection closed or cancelled
Connecting to server
Failed to negotiate a TLS connection with the LDAP server
Query Response received
Failed to create LDAP query
LDAP disconnecting received
invalid input length
host contains invalid characters: %@
port contains invalid characters: %@
path contains invalid characters: %@
Start of discoverADInfoWithCompletion: %{public}@
responses for LDAP: %@
received new site code: %@, from server: %@
all LDAP operations complete
using site code: %@
Start of performLDAPPingUsingSite: %{public}@
Start of ldap operation for service: %{public}@
response from service: %{public}@
response from ldap: %{public}@
netlogon response: %{public}@
error with netlogon ping for service: %{public}@, %{public}@
error with ldap connection for service: %@, %@
connection cancelled
notify_cancel() failed with %u
notify_register_check() failed with %u
notify_get_state() failed with error %u
invalid notify token
notify_set_state() failed with error %u
notify_post() failed with error %u
notify_register_dispatch failed: %u
caching site code: %@
found cached site code: %@
Defaults updated: %@, %@
Creating sem: %@
signaling sem: %@
Error deserializing plist: %{public}@
Error archiving site code cache: error: %{public}@
Unable to resolve persistient reference %@
SecItemCopyMatching returned: %d for uuid: %@
%s service %@ on %@
%s requireUserPresence is enabled on %@
%s requireUserPresence is disabled on %@
Could not create ACL for adding credentials to keychain.
%s Could not add credentials to keychain. Invalid parameters on %@
Removing keychain entry returned %d
Finding keychain entry for service %@
%s Could not find credentials in keychain. Invalid parameters on %@
Finding keychain entry failed with %d
Checking if keychain entry existis for service %@
Deleting keychain entry for service %@
%s Could not delete credentials from keychain. Invalid parameters on %@
Deleting keychain entry failed with %d
user principal name is set in saved settings: %@
user name is set in extensiondata: %@
user principal name is set in request: %@
user name is read only
*************** starting request: %@
*************** request already started: %@
*************** finishing request: %@
*************** request already finished: %@
*************** waitForCompletion: %@
*************** waitForCompletion Finished: %@
*************** canceling request: %@
*************** completeRequest: %@
*************** completeRequestWithHeaders: %{private}@
*************** completeRequesWithHTTPBody: %{private}@
*************** completeRequesWithHTTPResponse: %{private}@
*************** completeRequestWithError: %{public}@
completeRequestWithDoNotHandle: %{public}@
*************** presentAuthorizationViewControllerWithCompletion: %{public}@
Start of ldap operation for host: %{public}@
connected to host: %{public}@
error with netlogon ping for host: %{public}@, %{public}@
error with ldap connection for host: %@, %@
%s Stored version: %d on %@
******************* beginAuthorizationWithRequest: %@, realm: %@, operation: %@
cancelAuthorizationWithRequest: %{public}@
request count: %lu
canceling context: %@
handleKerberosOperations: %{public}@
creating new kerberosAuthentication for realm: %{public}@
Result error: %{public}@
timeout waiting for platform sso login: %{public}@
showing login view controller: %{public}@
handleGetSiteCode: %{public}@
requesting a new sitecode
timeout waiting for sitecode, proceeding
******************* end handleGetSiteCode
handleRemoveRealm: %{public}@
******************* end handleRemoveRealm
Removing Realm: %{public}@
error when deleting plugin settings: %@
handleLogout: %@, removeRealm: %@
******************* end handleLogout
destroyCredentialsWithContext
destroy credential with UUID: %@
destroy credential with upn: %@
handleResetKeychainChoice: %{public}@
******************* end handleResetKeychainChoice
handleGetRealmInfo: %{public}@
completing request with data: %{private}@
******************* end handleGetRealmInfo
checking bundle id: %@ is in ACL: %@
checking bundle id check passed
createContextForRequest: %{public}@
retrieving principalname from certificate
using principalname %@
certificate not found
attemptKerberos
Received token, completing
Received cred UUID, completing
Received error: %@
Unsupported Encryption: %@
Server Principal Unknown: %@
Result unhandled: %lu
completing request with token: %{private}@
Password change error code: %@
Password change error: %{public}@
returning currentCredential: %@
error encoding currentCredential for realm: %{public}@
returning siteCode: %@
error encoding siteCode for realm: %{public}@
error encoding settings for realm: %{public}@
createOrSaveSettings: %@, realm: %@
settings cache entry missing
createSettingCacheEntryIfNeededWithError
creating settings cache
creating settings cache failed
settings cache created
settings cache already exists
More than one cache entry
createCacheEntry
Error creating cache entry: %@
More than one entry for: %{public}@
retrieveCurrentSettingsForRealm: %@
returning settings: %@
error with settings: %@, %@
retrieveAllCurrentSettings: %@
deleteSettingsForRealm: %@
deleteAllSettings
Start of attemptKerberos
using credential from cache: %@
using sitecode: %@
starting site code discovery
found existing credential received: %@
UUID nil after find credential for calling app: %{public}@
response for find existing credential: %lu
requireUserPresence is required for MDM certificate
new credential received: %@
UUID nil after authentication for calling app: %{public}@
response for new credential: %lu
error for new credential: %{public}@
Next pac refresh: %@
password last changed: %@, at login: %@
using credential: %{public}@
token received: %lu bytes
saveValuesForPlugins
siteCodeForCurrentNetworkAndRealmUsingContext
checking sitecode cache
using cached sitecode: %@
sitecode not found in cache
calling discoverADInfo
received sitecode: %@
sitecode saved
createNewCredentialUsingContext
using upn: %@
using pkinit
using certificate: %@ for uuid: %@
certificate not found for uuid: %@
certificate not found for token id: %@
error retrieving identity for persistient ref
using certificate: %@ for token id: %@
using LAContext: %@
Could not get a SecIdentityRef for token id: %@
password is missing
using cache: %@
complete bundleIdACL: %{public}@
using impersonation source app signing identifier: %{public}@
using source app signing identifier: %{public}@
findExistingCredentialUsingContext
%s using upn: %{public}@ on %@
changePasswordForUPN result: %{public}@
error during changePasswordForUPN: %{public}@
Error retreiving new TGT after password change: %lu, %@
%s login: %d on %@
Received Pac Data: %@
Error refreshing pac
evaluate vpn path: %{public}@
using audit token
vpn path: %{public}@
start of determineNetworkFingerprint
using bundleIdentifier: %{public}@
path: %{public}@
path is satisfied
path is not satisfied, return nil
vpn config uuid: %02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x
Per App VPN
On Demand VPN
vpn path: %@
On Demand VPN path not satisfied
VPN signature: %{private}@
this is cellular, return nil
Direct signature: %@
Network signature could not be created
VPN IP address: %{private}s
begin getInterfaceSignature
IPv4 signature
IPv6 signature
Dynamic interface signature
Using key: %{public}@, Router: %@
no matching entry found for %{public}s
archiving to file: %@
Error archiving file: %{public}@, error: %{public}@
Error writing file: %{public}@, error: %{public}@
loading from file: %@
Error reading plist file: %{public}@, message: %{public}@
Error using cached credential: %{public}@
createGSSName failed with: %{public}@
kerbGetTGTForUser: User entered a UPN in the username field.
kerbGetTGTForUser: User entered a standard username in the username field.
kerbValidatePassword: krb5_init_context failed with error: %d - %s
kerbValidatePassword: krb5_parse_name failed with error: %d - %s
kerbValidatePassword: krb5_get_init_creds_password failed with error: %d - %s
error parsing krb5 principal
error importing krb5 principal
GSSCreateName failed with: %{public}@
gss_aapl_initial_cred failed with: %{public}@
destroyCredentialForUPN - no UPN
failed to import %@: %{public}@
gss_init_sec_context failed server: %@, maj_stat: %d, min_stat: %d, %{public}@
have a buffer of length: %d, success
gsscred is not specified
Error initializing context: %d
Error copying cred uuid
Error resolving cache by uuid: %d
Error retrieving principal from cache: %d
Error creating TGT principal: %d
Error retrieving TGT from cache: %d
Error allocating cred opts: %d
Error decoding ticket: %d
Error setting second ticket: %d
Error completing delegation to self: %d
Error decoding delegation ticket: %d
Error decrypting ticket: %d
Error parsing pac: %d
Error verifying pac: %d
Error getting logon info from pac: %d
Error retrieving pac: %d
timeout waiting for srv data, proceeding
Starting SRV query: %@
adding result: %@
error receiving srv data
Starting host query: %@
error receiving dns data
+[SOSmartcard getLocalAuthIdentityForCert:withLAContext:]
com.apple.AppSSOKerberos
SIGN_IN_LOWERCASE_TEXT
+[SOSmartcard pollSmartcardForIdentityWithPersistentRef:tokenID:]
labl
+[SOSmartcard searchForCachedIdentityWithSerial:withIssuer:withTokenID:]
+[SOSmartcard searchForCachedIdentityPersistentRef:tokenID:]
v8@?0
com.apple.AppSSO
SOSmartcard
-[SOKerberosSettingsManager createKerberosSettingsCache]
SOKerberosSettingsManager
v20@?0@"NSObject<OS_ldap_connection>"8i16
Already connected to server
There is already an ldap connection
Waiting for connection: %@
Failed to connect to server: %@
connection closed or cancelled
v20@?0i8@"NSObject<OS_nw_error>"12
Connected to server
Failed to connect to server: %d
v28@?0@"NSObject<OS_ldap_connection>"8^{__CFString=}16i24
v24@?0@"NSObject<OS_ldap_operation>"8^{__CFDictionary=}16
LDAP Connection Error: %@
v20@?0@"NSObject<OS_ldap_operation>"8i16
LDAP Failed to create query
SOLDAPHelper
host: %@, port: %d
tcp/
udp/
http://
http
http/
kkdcp://
kkdcp
host://
SOKerberosServer
No gss credentials or errors found during authentication
Password change is not enabled
Service principal name is missing
Invalid Kerberos operation
Host name missing
Kerberos result unhandled
Source app not allowed
Password sync is not enabled
useKeychain
useSmartCard
userSetKeychainChoice
com.apple.appsso.Kerberos.ldap.%@
_ldap._tcp.%@
v20@?0B8@"NSString"12
v16@?0@"NSArray"8
_ldap._tcp.%@._sites.%@
(&(DnsDomain=%@)(NtVer=\06\00\00\00))
netlogon
v28@?0B8@"NSString"12@"NSDictionary"20
SOADSiteDiscovery
%@, %@, %@
-[SOKerberosRealmSettings initWithRealm:]
siteCodeCache
com.apple.Kerberos.%@
userPrincipalName
userName
credentialUUID
pkinitPersistientRef
smartCardTokenID
dateLastLogin
datePasswordLastChanged
datePasswordLastChangedAtLogin
dateNextPacRefresh
datePasswordCanChange
dateLocalPasswordLastChanged
dateADPasswordLastChangedWhenSynced
dateLocalPasswordLastChangedWhenSynced
datePasswordExpires
passwordNeverExpires
dateExpirationNotificationSent
dateExpirationChecked
networkHomeDirectory
delayUserSetupCleared
networkAvailable
userCancelledLogin
dateLoginCancelled
passwordChangeInProgress
dateUserSignedOut
v12@?0i8
platformSSOLoginInProgress
SOKerberosRealmSettings
-[SOKeychainHelper addCredentialsToKeychainWithService:withUsername:withPassword:requireUserPresence:]
-[SOKeychainHelper retrieveCredentialsFromKeychainWithContext:service:returnedUsername:returnedPassword:]
-[SOKeychainHelper hasCredentialsInKeychainWithService:]
-[SOKeychainHelper removeCredentialsFromKeychainWithService:]
SOKeychainHelper
kerberosDefault
whenNotSpecified
always
%@@%@
Kerberos:%@
com.apple.KerberosExtension.requestFinished
HTTP/1.1
SOKerberosContext
SOAsynchronousLDAPOperation
com.apple.AppSSOKerberos.version
-[SOKerberosExtensionProcess handleMigration]_block_invoke
-[SOKerberosExtensionProcess removeSettingFile:]
realmSettings.plist
rememberKeychainChoice
profile
realm
HTTP@%@
Negotiate %@
Authorization
kGSSMinorErrorCode
PASSWORD_CHANGE_PASSWORD_CHANGE_FAILED_OLD_PASSWORD_ALERT_TEXT
PASSWORD_CHANGE_PASSWORD_CHANGE_FAILED_SERVER_ALERT_TEXT
KDC_UNREACHABLE
REALM_CASE_MISMATCH
DEFAULT_REALM_MISSING
NSDescription
SOKerberosExtensionProcess
ASAuthorizationOperationLogout
ASAuthorizationProviderAuthorizationOperationConfigurationRemoved
ASAuthorizationOperationLogin
login
logout
get_credential_uuid
get_site_code
remove_realm
change_password
get_realm_info
reset_keychain_preference
site_code
gss_cred_uuid
is_default_realm
host_name
host_suffix_length
user_name
force
login_date
password_changed_date
local_password_changed_date
password_expires_date
home_directory
verbose
site_code_cache
refresh
no site code
com.apple.KerberosPlugin.ConnectionCompleted
com.apple.KerberosPlugin.ADPasswordChanged
com.apple.KerberosPlugin.LocalPasswordSynced
com.apple.KerberosPlugin.InternalNetworkAvailable
com.apple.KerberosPlugin.InternalNetworkNotAvailable
com.apple.KerberosExtension.gotNewCredential
com.apple.KerberosExtension.foundExistingCredential
com.apple.KerberosExtension.passwordChangedWithPasswordSync
com.apple.KerberosExtension.userSignedOut
com.apple.KerberosExtension.configRemoved
group.com.apple.KerberosExtension
com.apple.AppSSOAgent
com.apple.KerberosMenuExtra
com.apple.app-sso
com.apple.kcc
com.apple.kdestroy
com.apple.ticketviewer
com.apple.AppSSO.Kerberos.CurrentCredential
com.apple.AppSSO.Kerberos.SiteCode
com.apple.AppSSO.Kerberos.Cache
<%@: %p> Realm: %@, isDefaultRealm: %@, domainRealmMapping: %@, hosts: %@, kdcs: %@, credentialUseMode: %@
isDefaultRealm
domainRealmMapping
hosts
kdcs
siteCode
currentCredential
credentialUseMode
com.apple.AppSSO.Kerberos.Configuration
SOKerberosHeimdalPluginSettings
v16@?0@"NSString"8
kGSSICCertificate
Kerberos
kGSSICAuthenticationContext
kGSSICPassword
API:%@
kGSSICKerberosCacheName
kGSSICSiteName
com.apple.private.gssapi.allowmanagedapps
kGSSICAppIdentifierACL
kGSSICAppleSourceAppSigningIdentity
kGSSICAppleSourceApp
-[SOKerberosAuthentication changePasswordWithContext:withError:]
-[SOKerberosAuthentication refreshPacValuesWithContext:atLogin:error:]
-[SOKerberosAuthentication refreshPacValuesWithContext:credential:atLogin:]
kGSSMechanism
SPNEGO
SOKerberosAuthentication
passwordLastSet: %@, passwordCanChange: %@, passwordMustChange: %@, passwordNeverExpires: %@, homeDirectory: %@
true
false
_kerberos._tcp.%@
NetworkExtension
NoSignature
com.apple.KerberosExtension
v32@?0@8@16^B24
SONetworkIdentity
SOKerberosFileManager
-[SOKerberosHelper acquireCredentialForUUID:]
failed to find credential: %@
-[SOKerberosHelper acquireCredentialForUPN:]
-[SOKerberosHelper changePasswordForUPN:realm:withOldPassword:withNewPassword:withError:]
kGSSChangePasswordOldPassword
kGSSChangePasswordNewPassword
-[SOKerberosHelper validatePassword:forUser:]
Enterprise Connect
-[SOKerberosHelper createGSSName:gname:error:]
-[SOKerberosHelper createCredential:withOptions:andError:]
-[SOKerberosHelper destroyAllCredentials]
v24@?0^{gss_OID_desc_struct=I^v}8^{gss_cred_id_t_desc_struct=}16
-[SOKerberosHelper destroyCredential:]
failed to find credential to destroy: %@
-[SOKerberosHelper destroyCredentialForUPN:]
-[SOKerberosHelper authenticate:toServer:returningToken:andError:]
-[SOKerberosHelper getPACForCred:pac:]
krbtgt
SOKerberosHelper
com.apple.AppSSO.wrapper
B24@?0Q8@"NSObject<OS_nw_object>"16
v20@?0i8@"NSObject<OS_nw_array>"12
SODNSSRVQuery
com.apple.kerberosextension.%@.network
com.apple.kerberosextension.%@.kerberos
isExecuting
isFinished
softlink:r:path:/System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
SOSmartcardEntry
SOSmartcard
SOKerberosSettingsManager
SOLDAPHelper
SODNSSRVResponse
SOKerberosServer
AppSSOKerberos
SOKerberosExtensionUserData
SOADSiteDiscovery
SOSiteCode
NSSecureCoding
NSCoding
SOKerberosRealmSettings
SOKeychainHelper
SOAsynchronousBlockOperation
SOKerberosExtensionData
SOKerberosContext
SOAsynchronousLDAPOperation
SOKerberosExtensionProcess
SONetLogonParser
SOKerberosCredential
SOKerberosHeimdalPluginSettings
SOKerberosAuthentication
SOKerberosPacData
SONetworkIdentity
SOKerberosFileManager
SOKerberosHelper
SOAuthorizationWrapper
SOAuthorizationCoreDelegate
NSObject
SODNSSRVQuery
SOKerberosAgentContext
SOAsynchronousOperation
writeToURL:options:error:
willChangeValueForKey:
weakToWeakObjectsMapTable
waitUntilAllOperationsAreFinished
userInfo
uppercaseString
unarchivedObjectOfClasses:fromData:error:
unarchivedObjectOfClass:fromData:error:
tokenIDs
timeIntervalSinceNow
timeIntervalSinceDate:
synchronize
substringWithRange:
substringToIndex:
substringFromIndex:
stringWithUTF8String:
stringWithFormat:
stringWithCString:encoding:
stringValue
stringFromDate:
stringByReplacingOccurrencesOfString:withString:options:range:
stringByAppendingString:
stringByAppendingFormat:
standardUserDefaults
setWithArray:
setValue:forKey:
setSuspended:
setOptionCallerName:
setObject:forKeyedSubscript:
setObject:forKey:
setMaxConcurrentOperationCount:
setInteractionNotAllowed:
setFormatOptions:
setDelegateDispatchQueue:
setDelegate:
setBool:forKey:
scheme
requestedOperation
removeObserver:forKeyPath:
removeObjectForKey:
removeObject:
removeItemAtURL:error:
regularExpressionWithPattern:options:error:
registerDefaults:
rangeOfCharacterFromSet:
presentAuthorizationViewControllerWithHints:completion:
postNotificationName:object:
objectForKeyedSubscript:
objectForKey:
objectAtIndexedSubscript:
objectAtIndex:
numberWithUnsignedLongLong:
numberWithShort:
numberWithLong:
numberWithInteger:
numberWithInt:
numberWithDouble:
numberWithBool:
numberOfMatchesInString:options:range:
mutableCopy
mainBundle
lowercaseString
localizedStringForKey:value:table:
localizedDescription
localizedCallerDisplayName
length
isInternalBuild
isEqualToString:
isEqualToNumber:
isEqualToDictionary:
isEqualToDate:
isEqualToArray:
isCancelled
isCallerManaged
invertedSet
intValue
initWithUUIDString:
initWithURL:statusCode:HTTPVersion:headerFields:
initWithString:
initWithDomain:code:userInfo:
initWithData:encoding:
initWithCharacters:length:
initWithBytes:length:
httpHeaders
hasSuffix:
hasPrefix:
handleResult:context:error:
getBytes:length:
firstObject
evaluateAccessControl:operation:options:error:
enumerateKeysAndObjectsUsingBlock:
encodeObject:forKey:
encodeInteger:forKey:
encodeBool:forKey:
doNotHandle
didChangeValueForKey:
dictionaryWithObjects:forKeys:count:
dictionary
defaultManager
defaultCenter
decodeObjectOfClasses:forKey:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
decodeBoolForKey:
decimalDigitCharacterSet
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSince1970:
date
dataWithContentsOfURL:options:error:
dataWithBytes:length:
dataUsingEncoding:
dataForKey:
countByEnumeratingWithState:objects:count:
count
copy
containsValueForKey:
containsString:
componentsSeparatedByString:
completeWithHTTPResponse:httpBody:
completeWithHTTPAuthorizationHeaders:
completeWithError:
complete
cancelAllOperations
cancel
bundleWithIdentifier:
boolValue
boolForKey:
beginAuthorizationWithOperation:url:httpHeaders:httpBody:
base64EncodedStringWithOptions:
auditTokenFromData:auditToken:
auditTokenData
addObjectsFromArray:
addObject:
UUIDString
UTF8String
URLsForDirectory:inDomains:
arrayWithObjects:count:
array
archivedDataWithRootObject:requiringSecureCoding:error:
appendBytes:length:
allKeys
allHeaderFields
addOperation:
addObserver:forKeyPath:options:context:
URLByAppendingPathComponent:
URLPathAllowedCharacterSet
URLHostAllowedCharacterSet
setUpn:
certName
setCertName:
tokenID
setTokenID:
attributes
setAttributes:
identity
setIdentity:
persistientRef
setPersistientRef:
.cxx_destruct
_upn
_certName
_tokenID
_attributes
_identity
_persistientRef
T@"NSString",&,V_upn
T@"NSString",&,V_certName
T@"NSString",&,V_tokenID
T@"NSDictionary",&,V_attributes
T^{__SecIdentity=},V_identity
T@"NSData",&,V_persistientRef
getLocalAuthIdentityForCert:withLAContext:
getIdentityForPersistentRef:identityToReturn:
pollSmartcardForIdentityWithPersistentRef:tokenID:
searchForCachedIdentityWithSerial:withIssuer:withTokenID:
searchForCachedIdentityPersistentRef:tokenID:
availableSmartCards
init
saveKerberosValuesForProfile:
createKerberosSettingsCache
dealloc
setupLDAPconnection:andPort:andRequireTLSForLDAP:andBundleIdentifier:
connectToLDAPServer:andPort:andBundleIdentifier:andRequireTLSForLDAP:completion:
connectToLDAPService:requireTLSForLDAP:bundleIdentifier:inBackground:completion:
connectToLDAPWithCompletion:
startLDAPWithCompletion:
queryforBaseDN:andScope:andAttributes:withFilter:completion:
disconnect
useDigestMD5Auth:andPassword:
useKerberosAuth:forSPN:
isConnected
setIsConnected:
ldap
setLdap:
connection
setConnection:
completionCalled
setCompletionCalled:
_isConnected
_completionCalled
_ldap
_connection
T@"NSObject<OS_ldap_connection>",&,N,V_ldap
T@"NSObject<OS_nw_connection>",&,V_connection
TB,V_completionCalled
TB,N,V_isConnected
description
host
setHost:
port
setPort:
_port
_host
T@"NSString",&,N,V_host
TS,N,V_port
serverWithString:
initWithHost:port:protocol:path:
protocol
path
_protocol
_path
T@"NSString",R,V_host
T@"NSString",R,V_protocol
T@"NSString",R,V_port
T@"NSString",R,V_path
credentialMissing
passwordChangeNotEnabled
servicePrincipalNameMissing
invalidKerberosOperation
hostNameMissing
unhandledKerberosResult
sourceAppNotAllowed
kerberosErrorWithCode:withDescription:
passwordSyncNotEnabled
useKeychain
setUseKeychain:
userSetKeychainChoice
setUserSetKeychainChoice:
useSmartCard
setUseSmartCard:
TB,N
initWithRealm:
discoverADInfoUsingSourceAppBundleIdentifier:auditTokenData:requireTLSForLDAP:withCompletion:
performLDAPPingUsingSite:bundleIdentifier:auditTokenData:requireTLSForLDAP:inBackground:completion:
performNetworkConnectionUsingService:orHost:port:inBackground:completion:
realm
setRealm:
queue
setQueue:
setDns:
_realm
_queue
_dns
T@"NSString",&,N,V_realm
T@"NSOperationQueue",&,N,V_queue
T@"SODNSSRVQuery",&,V_dns
code
timeStamp
networkFingerprint
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithSiteCode:forNetworkFingerprint:
_code
_timeStamp
_networkFingerprint
T@"NSString",R,N,V_code
T@"NSDate",R,N,V_timeStamp
T@"NSString",R,N,V_networkFingerprint
realmKey:
removeAllValues
save
userPrincipalName
setUserPrincipalName:
userName
setUserName:
credentialUUID
setCredentialUUID:
pkinitPersistientRef
setPkinitPersistientRef:
smartCardTokenID
setSmartCardTokenID:
dateLastLogin
setDateLastLogin:
datePasswordLastChanged
setDatePasswordLastChanged:
datePasswordLastChangedAtLogin
setDatePasswordLastChangedAtLogin:
dateNextPacRefresh
setDateNextPacRefresh:
dateADPasswordCanChange
setDateADPasswordCanChange:
dateLocalPasswordLastChanged
setDateLocalPasswordLastChanged:
dateADPasswordLastChangedWhenSynced
setDateADPasswordLastChangedWhenSynced:
dateLocalPasswordLastChangedWhenSynced
setDateLocalPasswordLastChangedWhenSynced:
datePasswordExpires
setDatePasswordExpires:
passwordNeverExpires
setPasswordNeverExpires:
dateExpirationNotificationSent
setDateExpirationNotificationSent:
dateExpirationChecked
setDateExpirationChecked:
daysUntilExpiration
networkHomeDirectory
setNetworkHomeDirectory:
delayUserSetupCleared
setDelayUserSetupCleared:
networkAvailable
setNetworkAvailable:
userCancelledLogin
setUserCancelledLogin:
dateLoginCancelled
setDateLoginCancelled:
passwordChangeInProgress
setPasswordChangeInProgress:
dateUserSignedOut
setDateUserSignedOut:
platformSSOLoginSemaphore
platformSSOLoginInProgress
setPlatformSSOLoginInProgress:
startListeningForPlatformSSOTGTChanges
dumpSiteCodeCache
cacheSiteCode:
siteCodeForNetworkFingerprint:
observeValueForKeyPath:ofObject:change:context:
loadSiteCodes
saveSiteCodes
siteCodeCache
setSiteCodeCache:
defaults
setDefaults:
notifyToken
setNotifyToken:
notificationName
setNotificationName:
_notifyToken
_platformSSOLoginSemaphore
_siteCodeCache
_defaults
_notificationName
T@"NSMutableArray",&,N,V_siteCodeCache
T@"NSUserDefaults",&,V_defaults
T@"NSString",&,V_realm
Ti,V_notifyToken
T@"NSString",&,N,V_notificationName
T@"NSString",&,D,N
T@"NSUUID",&,D,N
T@"NSData",&,D,N
T@"NSDate",&,D,N
T@"NSDate",&,N
TB,D,N
T@"NSNumber",R,D,N
T@"NSObject<OS_dispatch_semaphore>",R,V_platformSSOLoginSemaphore
identityForPersistientRef:
identityForUUIDString:
addCredentialsToKeychainWithService:withUsername:withPassword:requireUserPresence:
retrieveCredentialsFromKeychainWithContext:service:returnedUsername:returnedPassword:
hasCredentialsInKeychainWithService:
removeCredentialsFromKeychainWithService:
initWithBlock:
main
block
setBlock:
_block
T@?,C,V_block
pwReqComplexity
syncLocalPassword
pwNotificationDays
pwExpireOverride
pwChangeURL
pwReqLength
pwReqMinAge
pwReqHistory
pwReqText
helpText
customUsernameLabel
cacheName
principalName
siteCode
certificateUUID
useSiteAutoDiscovery
allowAutomaticLogin
requireUserPresence
monitorCredentialsCache
replicationTime
credentialBundleIdACL
domainRealmMapping
isDefaultRealm
allowPasswordChange
delayUserSetup
requireTLSForLDAP
includeManagedAppsInBundleIdACL
includeKerberosAppsInBundleIdACL
credentialUseMode
password
preferredKDCs
usePlatformSSOTGT
allowPlatformSSOAuthFallback
performKerberosOnly
initWithDictionary:
setCacheName:
setPrincipalName:
setSiteCode:
setCertificateUUID:
setUseSiteAutoDiscovery:
setCredentialBundleIdACL:
setIncludeManagedAppsInBundleIdACL:
setIncludeKerberosAppsInBundleIdACL:
setDomainRealmMapping:
setIsDefaultRealm:
setAllowPasswordChange:
setAllowAutomaticLogin:
setRequireUserPresence:
setPwChangeURL:
setPwExpireOverride:
setPwNotificationDays:
setPwReqComplexity:
setPwReqLength:
setPwReqMinAge:
setPwReqHistory:
setPwReqText:
setHelpText:
setCustomUsernameLabel:
setReplicationTime:
setSyncLocalPassword:
setMonitorCredentialsCache:
setDelayUserSetup:
setCredentialUseMode:
setRequireTLSForLDAP:
setPassword:
setPreferredKDCs:
setUsePlatformSSOTGT:
setAllowPlatformSSOAuthFallback:
setPerformKerberosOnly:
_useSiteAutoDiscovery
_includeManagedAppsInBundleIdACL
_includeKerberosAppsInBundleIdACL
_isDefaultRealm
_allowPasswordChange
_allowAutomaticLogin
_requireUserPresence
_pwReqComplexity
_syncLocalPassword
_monitorCredentialsCache
_delayUserSetup
_requireTLSForLDAP
_usePlatformSSOTGT
_allowPlatformSSOAuthFallback
_performKerberosOnly
_cacheName
_principalName
_siteCode
_certificateUUID
_credentialBundleIdACL
_domainRealmMapping
_pwChangeURL
_pwExpireOverride
_pwNotificationDays
_pwReqLength
_pwReqMinAge
_pwReqHistory
_pwReqText
_helpText
_customUsernameLabel
_replicationTime
_credentialUseMode
_password
_preferredKDCs
T@"NSString",&,N,V_cacheName
T@"NSString",&,N,V_principalName
T@"NSString",&,N,V_siteCode
T@"NSString",&,N,V_certificateUUID
TB,N,V_useSiteAutoDiscovery
T@"NSArray",&,N,V_credentialBundleIdACL
TB,N,V_includeManagedAppsInBundleIdACL
TB,N,V_includeKerberosAppsInBundleIdACL
T@"NSDictionary",&,N,V_domainRealmMapping
TB,N,V_isDefaultRealm
TB,N,V_allowPasswordChange
TB,N,V_allowAutomaticLogin
TB,N,V_requireUserPresence
T@"NSString",&,N,V_pwChangeURL
T@"NSNumber",&,N,V_pwExpireOverride
T@"NSNumber",&,N,V_pwNotificationDays
TB,V_pwReqComplexity
T@"NSNumber",&,N,V_pwReqLength
T@"NSNumber",&,N,V_pwReqMinAge
T@"NSNumber",&,N,V_pwReqHistory
T@"NSString",&,N,V_pwReqText
T@"NSString",&,N,V_helpText
T@"NSString",&,N,V_customUsernameLabel
T@"NSNumber",&,N,V_replicationTime
TB,V_syncLocalPassword
TB,V_monitorCredentialsCache
TB,V_delayUserSetup
Tq,N,V_credentialUseMode
TB,V_requireTLSForLDAP
T@"NSString",&,N,V_password
T@"NSArray",&,N,V_preferredKDCs
TB,N,V_usePlatformSSOTGT
TB,N,V_allowPlatformSSOAuthFallback
TB,N,V_performKerberosOnly
initWithRequest:extensionData:
serviceName
setUserPrincipalNameAfterAuth:
startRequest
finishRequest
waitForCompletion
cancelRequest
cancelRequest:
completeRequest
completeRequestWithHeaders:
completeRequestWithHTTPResponseHeaders:
completeRequestWithHTTPResponse:httpBody:
completeRequestWithError:
completeRequestWithDoNotHandle
presentAuthorizationViewControllerWithCompletion:
currentSettings
extensionData
setExtensionData:
extensionUserData
setExtensionUserData:
hostName
setHostName:
servicePrincipalName
setServicePrincipalName:
setServiceName:
changedPassword
setChangedPassword:
userNameIsReadOnly
setUserNameIsReadOnly:
certificateTokenID
setCertificateTokenID:
pkinitIdentity
setPkinitIdentity:
smartCardLAContext
setSmartCardLAContext:
keychainLAContext
setKeychainLAContext:
useKerberosPasswordInsteadOfMDMIdentity
setUseKerberosPasswordInsteadOfMDMIdentity:
returnCredentialOnly
setReturnCredentialOnly:
refreshCredential
setRefreshCredential:
callerBundleIdentifier
setCallerBundleIdentifier:
impersonationBundleIdentifier
setImpersonationBundleIdentifier:
callerLocalizedName
setCallerLocalizedName:
credsCameFromKeychain
setCredsCameFromKeychain:
requestCancelled
setRequestCancelled:
attemptedToGetCredsFromKeychain
setAttemptedToGetCredsFromKeychain:
laContextFailureCount
setLaContextFailureCount:
forceLoginViewController
setForceLoginViewController:
loginTimeStamp
setLoginTimeStamp:
siteCodeGroup
setSiteCodeGroup:
networkIdentity
setNetworkIdentity:
auditToken
setAuditToken:
isManagedApp
setIsManagedApp:
smartCardNeedsInsert
setSmartCardNeedsInsert:
pacData
setPacData:
authorizationRequest
setAuthorizationRequest:
dispatchGroup
setDispatchGroup:
requestStarted
setRequestStarted:
_userNameIsReadOnly
_useKerberosPasswordInsteadOfMDMIdentity
_returnCredentialOnly
_refreshCredential
_credsCameFromKeychain
_requestCancelled
_attemptedToGetCredsFromKeychain
_forceLoginViewController
_isManagedApp
_smartCardNeedsInsert
_requestStarted
_laContextFailureCount
_userPrincipalName
_userName
_currentSettings
_extensionData
_extensionUserData
_hostName
_servicePrincipalName
_serviceName
_changedPassword
_credentialUUID
_certificateTokenID
_pkinitIdentity
_pkinitPersistientRef
_smartCardLAContext
_keychainLAContext
_callerBundleIdentifier
_impersonationBundleIdentifier
_callerLocalizedName
_loginTimeStamp
_siteCodeGroup
_networkIdentity
_auditToken
_pacData
_authorizationRequest
_dispatchGroup
T@"ASAuthorizationProviderExtensionAuthorizationRequest",&,N,V_authorizationRequest
T@"NSObject<OS_dispatch_group>",&,V_dispatchGroup
TB,N,V_requestStarted
TB,N,V_requestCancelled
T@"NSData",&,N,V_auditToken
TB,N,V_isManagedApp
T@"SOKerberosExtensionData",&,N,V_extensionData
T@"SOKerberosExtensionUserData",&,N,V_extensionUserData
T@"NSString",&,N,V_hostName
T@"NSString",&,N,V_servicePrincipalName
T@"NSString",&,N,V_serviceName
T@"NSString",&,N,V_changedPassword
TB,N,V_userNameIsReadOnly
T@"NSString",&,N,V_userPrincipalName
T@"NSString",&,N,V_userName
T@"NSUUID",&,N,V_credentialUUID
T@"NSString",&,N,V_certificateTokenID
T^{__SecIdentity=},V_pkinitIdentity
T@"NSData",&,V_pkinitPersistientRef
T@"LAContext",&,V_smartCardLAContext
T@"LAContext",&,V_keychainLAContext
TB,N,V_useKerberosPasswordInsteadOfMDMIdentity
T@"SOSiteCode",&,N,V_siteCode
TB,N,V_returnCredentialOnly
TB,N,V_refreshCredential
T@"SOKerberosRealmSettings",R,N,V_currentSettings
T@"NSString",&,N,V_callerBundleIdentifier
T@"NSString",&,N,V_impersonationBundleIdentifier
T@"NSString",&,N,V_callerLocalizedName
TB,N,V_credsCameFromKeychain
TB,N,V_attemptedToGetCredsFromKeychain
Ti,N,V_laContextFailureCount
TB,N,V_forceLoginViewController
T@"NSDate",&,N,V_loginTimeStamp
T@"NSObject<OS_dispatch_group>",&,N,V_siteCodeGroup
T@"SONetworkIdentity",&,N,V_networkIdentity
TB,N,V_smartCardNeedsInsert
T@"SOKerberosPacData",&,N,V_pacData
initWithRealm:andHost:andPort:andBundleIdentifier:andRequireTLSForLDAP:andCompletion:
completion
setCompletion:
bundleIdentifier
setBundleIdentifier:
_completion
_bundleIdentifier
T@?,C,V_completion
TB,N,V_requireTLSForLDAP
T@"NSString",&,N,V_bundleIdentifier
handleMigration
removeSettingFile:
beginAuthorizationWithRequest:
cancelAuthorizationWithRequest:
handleKerberosOperations:andDelegate:
handleGetSiteCode:
handleRemoveRealm:
handleLogoutWithContext:removeRealm:
handleLogout:removeRealm:
destroyCredentialsWithContext:
handleResetKeychainChoice:
handleGetRealmInfo:
settingsForContext:includeSiteCodeCache:
checkSourceAppACLWithContext:
createContextForRequest:
attemptKerberosWithContext:andDelegate:
completeRequestWithToken:andContext:
completeRequestWithHTTPResponseFromContext:
saveValuesAfterSuccessfulAuthentication:
saveValuesAfterSuccessfulPasswordSync:
handleAddKeychainCreds:
mapKnownPasswordErrorToString:
kerberosForRealm:
kerberosByRealm
setKerberosByRealm:
requestContextMapping
setRequestContextMapping:
kerberosHelper
setKerberosHelper:
keychainHelper
setKeychainHelper:
_kerberosByRealm
_requestContextMapping
_kerberosHelper
_keychainHelper
T@"NSMutableDictionary",&,N,V_kerberosByRealm
T@"NSMapTable",&,N,V_requestContextMapping
T@"SOKerberosHelper",&,V_kerberosHelper
T@"SOKeychainHelper",&,N,V_keychainHelper
parseNetLoginUsingData:
name
setName:
lifetime
setLifetime:
uuid
setUuid:
_lifetime
_name
_uuid
T@"NSString",&,V_name
TI,V_lifetime
T@"NSString",&,V_uuid
hosts
kdcs
appSSOKerberosCacheName
setAppSSOKerberosCacheName:
stringWithCredentialUseMode:
createSettingCacheEntryIfNeededWithError:
retrieveCacheEntry
createCacheEntryWithError:
retrieveCurrentSettingsForRealm:
retrieveSetting:forRealm:
retrieveCurrentSettingsForRealm:error:
retrieveAllCurrentSettings
deleteSettingsForRealm:error:
deleteAllSettings
T@"NSString",&
currentCredential
setCurrentCredential:
dictionaryRepresentation
saveWithError:
saveSetting:data:withError:
setDefaultRealm:
setHosts:
setKdcs:
_defaultRealm
_hosts
_kdcs
T@"NSString",R,N,V_realm
defaultRealm
TB,N,GisDefaultRealm,V_defaultRealm
T@"NSArray",&,N,V_hosts
T@"NSArray",&,N,V_kdcs
T@"NSString",&,N
T@"NSUUID",&,N
saveValuesForPlugins:
savePacValues:atLogin:
attemptKerberosWithContext:returningToken:orError:
setSiteCodeUsingContext:
retrieveCachedSiteCodeFromCacheForBundleIdentifier:networkFingerprint:
determineSiteCodeUsingContext:
_determineSiteCodeUsingDispatchGroup:bundleIdentifier:auditTokenData:networkFingerprint:requireTLSForLDAP:
createNewCredentialUsingContext:returningCredential:orError:
findExistingCredentialUsingContext:returningCredential:orError:
changePasswordWithContext:withError:
refreshPacValuesWithContext:atLogin:error:
refreshPacValuesWithContext:credential:atLogin:
mapErrorToKnownError:
triggerVPNIfNeededUsingRealm:bundleIdentifier:auditToken:
siteDiscoveryInProgress
setSiteDiscoveryInProgress:
siteDiscovery
setSiteDiscovery:
_siteDiscoveryInProgress
_siteDiscovery
TB,V_siteDiscoveryInProgress
T@"SOKeychainHelper",&,V_keychainHelper
T@"SOADSiteDiscovery",&,V_siteDiscovery
initWithValidationInfo:
convertFromFileTime:
passwordLastSet
setPasswordLastSet:
passwordCanChange
setPasswordCanChange:
passwordMustChange
setPasswordMustChange:
homeDirectory
setHomeDirectory:
effectiveName
setEffectiveName:
fullName
setFullName:
_passwordNeverExpires
_passwordLastSet
_passwordCanChange
_passwordMustChange
_homeDirectory
_effectiveName
_fullName
T@"NSDate",&,V_passwordLastSet
T@"NSDate",&,V_passwordCanChange
T@"NSDate",&,V_passwordMustChange
TB,V_passwordNeverExpires
T@"NSString",&,V_homeDirectory
T@"NSString",&,V_effectiveName
T@"NSString",&,V_fullName
initForRealm:bundleIdentifier:auditToken:
isPerAppVPN
setPerAppVPN:
evaluateVPNPathForHost:port:
evaluateVPNPath
evaluateVPNPath:
determineNetworkFingerprint
getVPNServerSignature:
getInterfaceSignature:
getInterfaceFingerprintForDynamicInterface:
setNetworkFingerprint:
lastpath
setLastpath:
_perAppVPN
_lastpath
T@"NSString",&,N,V_networkFingerprint
perAppVPN
TB,N,GisPerAppVPN,V_perAppVPN
T@"NSObject<OS_nw_path>",&,N,V_lastpath
archiveDictionary:toFile:
loadDictionaryFromFile:
documentsDirectoryURLForFileName:
acquireCredentialForUUID:
acquireCredentialForUPN:
_testForUPNForUser:
changePasswordForUPN:realm:withOldPassword:withNewPassword:withError:
validatePassword:forUser:
createGSSName:gname:error:
createCredential:withOptions:andError:
destroyAllCredentials
destroyCredential:
destroyCredentialForUPN:
authenticate:toServer:returningToken:andError:
listCredentials
getPACForCred:pac:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
authorizationDidNotHandle:
authorizationDidCancel:
authorizationDidComplete:
authorization:didCompleteWithHTTPAuthorizationHeaders:
authorization:didCompleteWithHTTPResponse:httpBody:
authorization:didCompleteWithAuthorizationResult:
authorization:didCompleteWithError:
beginAuthorizationWithOperation:url:httpHeaders:httpBody:andCompletion:
canPerformAuthorizationWithURL:responseCode:
authorizationCompletion
setAuthorizationCompletion:
_authorization
_authorizationCompletion
T@?,C,V_authorizationCompletion
lookupSRVWithQuery:bundleIdentifier:auditTokenData:
lookupSRVWithQuery:bundleIdentifier:auditTokenData:completion:
lookupHost:port:bundleIdentifier:auditTokenData:completion:
initWithProfile:
authRequestPending
setAuthRequestPending:
contextNetworkWorkQueue
contextKerberosWorkQueue
profile
setProfile:
settings
setSettings:
authWrapper
setAuthWrapper:
receivedTGTAuthWrapper
setReceivedTGTAuthWrapper:
passwordSyncAuthWrapper
setPasswordSyncAuthWrapper:
passwordChangeAuthWrapper
setPasswordChangeAuthWrapper:
discoveryInProgress
setDiscoveryInProgress:
_authRequestPending
_discoveryInProgress
_contextNetworkWorkQueue
_contextKerberosWorkQueue
_profile
_settings
_authWrapper
_receivedTGTAuthWrapper
_passwordSyncAuthWrapper
_passwordChangeAuthWrapper
T@"SOFullProfile",&,V_profile
T@"SOKerberosRealmSettings",&,V_settings
T@"SOKerberosExtensionData",&,V_extensionData
T@"SONetworkIdentity",&,V_identity
T@"SOAuthorizationWrapper",&,V_authWrapper
T@"SOAuthorizationWrapper",&,V_receivedTGTAuthWrapper
T@"SOAuthorizationWrapper",&,V_passwordSyncAuthWrapper
T@"SOAuthorizationWrapper",&,V_passwordChangeAuthWrapper
T@"NSOperationQueue",R,V_contextNetworkWorkQueue
T@"NSOperationQueue",R,V_contextKerberosWorkQueue
TB,V_authRequestPending
TB,V_discoveryInProgress
isReady
isFinished
isExecuting
isAsynchronous
start
finish
state
setState:
_state
TQ,N,V_state
@16@0:8
v24@0:8@16
^{__SecIdentity=}16@0:8
v24@0:8^{__SecIdentity=}16
v16@0:8
@"NSString"
@"NSDictionary"
^{__SecIdentity=}
@"NSData"
^{__SecIdentity=}32@0:8@16@24
i32@0:8^{__CFData=}16^^{__SecIdentity}24
B32@0:8@16@24
@40@0:8^{__CFData=}16^{__CFData=}24@32
@32@0:8@16@24
B16@0:8
v40@0:8@16S24B28@32
v48@0:8@16S24@28B36@?40
v48@0:8@16B24@28B36@?40
v24@0:8@?16
v52@0:8@16i24@28@36@?44
v32@0:8@16@24
v32@0:8^{gss_cred_id_t_desc_struct=}16@24
v20@0:8B16
@"NSObject<OS_ldap_connection>"
@"NSObject<OS_nw_connection>"
S16@0:8
v20@0:8S16
@24@0:8@16
@48@0:8@16@24@32@40
@32@0:8q16@24
v44@0:8@16@24B32@?36
v56@0:8@16@24@32B40B44@?48
v48@0:8@16@24S32B36@?40
@"NSOperationQueue"
@"SODNSSRVQuery"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
d16@0:8
@"NSDate"
v48@0:8@16@24@32^v40
i16@0:8
v20@0:8i16
@"NSObject<OS_dispatch_semaphore>"
@"NSMutableArray"
@"NSUserDefaults"
^{__SecIdentity=}24@0:8@16
i44@0:8@16@24@32B40
i48@0:8@16@24^@32^@40
B24@0:8@16
i24@0:8@16
@24@0:8@?16
@?16@0:8
q16@0:8
v24@0:8q16
@"NSArray"
@"NSNumber"
@"SOKerberosRealmSettings"
@"SOKerberosExtensionData"
@"SOKerberosExtensionUserData"
@"NSUUID"
@"LAContext"
@"SOSiteCode"
@"NSObject<OS_dispatch_group>"
@"SONetworkIdentity"
@"SOKerberosPacData"
@"ASAuthorizationProviderExtensionAuthorizationRequest"
@56@0:8@16@24S32@36B44@?48
v28@0:8@16B24
@28@0:8@16B24
@"NSMutableDictionary"
@"NSMapTable"
@"SOKerberosHelper"
@"SOKeychainHelper"
I16@0:8
v20@0:8I16
@24@0:8q16
B24@0:8^@16
^{HeimCred_s=}16@0:8
^{HeimCred_s=}24@0:8^@16
^{HeimCred_s=}24@0:8@16
^{HeimCred_s=}32@0:8@16@24
@32@0:8@16^@24
B32@0:8@16^@24
B40@0:8@16@24^@32
Q40@0:8@16^@24^@32
v52@0:8@16@24@32@40B48
Q40@0:8@16^^{gss_cred_id_t_desc_struct}24^@32
B36@0:8@16B24^@28
B36@0:8@16^{gss_cred_id_t_desc_struct=}24B32
Q24@0:8@16
v40@0:8@16@24@32
@"SOADSiteDiscovery"
@24@0:8^{?=QQQQQQ{?=SSIIII^S}{?=SSIIII^S}{?=SSIIII^S}{?=SSIIII^S}{?=SSIIII^S}{?=SSIIII^S}SSIIII^{?}{?=SSIIII^S}{?=SSIIII^S}I{?=CC[6C][16I]}}16
@24@0:8Q16
@40@0:8@16@24@32
@24@0:8r*16
@"NSObject<OS_nw_path>"
^{gss_cred_id_t_desc_struct=}24@0:8@16
B56@0:8@16@24@32@40^@48
I40@0:8@16^^{gss_name_t_desc_struct}24^@32
^{gss_cred_id_t_desc_struct=}40@0:8@16@24^@32
B48@0:8^{gss_cred_id_t_desc_struct=}16@24^@32^@40
B32@0:8^{gss_cred_id_t_desc_struct=}16^@24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"SOAuthorizationCore"16
v32@0:8@"SOAuthorizationCore"16@"NSDictionary"24
v40@0:8@"SOAuthorizationCore"16@"NSHTTPURLResponse"24@"NSData"32
v32@0:8@"SOAuthorizationCore"16@"SOAuthorizationResultCore"24
v32@0:8@"SOAuthorizationCore"16@"NSError"24
v56@0:8@16@24@32@40@?48
B32@0:8@16q24
@"SOAuthorizationCore"
v48@0:8@16@24@32@?40
@"SOFullProfile"
@"SOAuthorizationWrapper"
v24@0:8Q16
