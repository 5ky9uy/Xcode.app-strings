@(#)PROGRAM:AppSSOKerberos  PROJECT:AppSSO-1
%s  on %@
%s evaluateAccessControl was successful on %@
%s retrieving identity failed with error %d on %@
%s evaluateAccessControl failed with error %ld on %@
%s User cancelled PIN prompt on %@
%s Problem reading the SmartCard on %@
%s Screen may be locked, retry %{public}d on %@
%s Some other problem occurred on %@
%s finished on %@
Error querying SmartCards %d
unexpected type for SmartCard query
Error getting persistientref %d
Error retrieving certificate %d
Retrieving Kerberos names from certificate
Saving values for profile: %@
error deserializing extension data: %{private}@
need to save: %d
error when saving plugin settings: %@
error when creating settings cache: %@
setting up ldap connection: %@, %d, %{public}@
LDAP TLS support is enabled
LDAP closed connection to server
setting up ldap connection: %@, %{public}@
tcp state: %u
tcp error: %@
connection closed or cancelled
Connecting to server
Failed to negotiate a TLS connection with the LDAP server
Query Response received
Failed to create LDAP query
LDAP disconnecting received
invalid input length
host contains invalid characters: %@
port contains invalid characters: %@
path contains invalid characters: %@
Start of discoverADInfoWithCompletion: %{public}@
responses for LDAP: %@
received new site code: %@, from server: %@
all LDAP operations complete
using site code: %@
Start of performLDAPPingUsingSite: %{public}@
Start of ldap operation for service: %{public}@
response from service: %{public}@
response from ldap: %{public}@
netlogon response: %{public}@
error with netlogon ping for service: %{public}@, %{public}@
error with ldap connection for service: %@, %@
connection cancelled
notify_cancel() failed with %u
notify_register_check() failed with %u
notify_get_state() failed with error %u
invalid notify token
notify_set_state() failed with error %u
notify_post() failed with error %u
notify_register_dispatch failed: %u
caching site code: %@
found cached site code: %@
Defaults updated: %@, %@
Creating sem: %@
signaling sem: %@
Error deserializing plist: %{public}@
Error archiving site code cache: error: %{public}@
Unable to resolve persistient reference %@
SecItemCopyMatching returned: %d for uuid: %@
%s service %@ on %@
%s requireUserPresence is enabled on %@
%s requireUserPresence is disabled on %@
Could not create ACL for adding credentials to keychain.
%s Could not add credentials to keychain. Invalid parameters on %@
Removing keychain entry returned %d
Finding keychain entry for service %@
%s Could not find credentials in keychain. Invalid parameters on %@
Finding keychain entry failed with %d
Checking if keychain entry existis for service %@
Deleting keychain entry for service %@
%s Could not delete credentials from keychain. Invalid parameters on %@
Deleting keychain entry failed with %d
user principal name is set in saved settings: %@
user name is set in extensiondata: %@
user principal name is set in request: %@
user name is read only
*************** starting request: %@
*************** request already started: %@
*************** finishing request: %@
*************** request already finished: %@
*************** waitForCompletion: %@
*************** waitForCompletion Finished: %@
*************** canceling request: %@
*************** completeRequest: %@
*************** completeRequestWithHeaders: %{private}@
*************** completeRequesWithHTTPBody: %{private}@
*************** completeRequesWithHTTPResponse: %{private}@
*************** completeRequestWithError: %{public}@
completeRequestWithDoNotHandle: %{public}@
*************** presentAuthorizationViewControllerWithCompletion: %{public}@
Start of ldap operation for host: %{public}@
connected to host: %{public}@
error with netlogon ping for host: %{public}@, %{public}@
error with ldap connection for host: %@, %@
%s Stored version: %d on %@
******************* beginAuthorizationWithRequest: %@, realm: %@, operation: %@
cancelAuthorizationWithRequest: %{public}@
request count: %lu
canceling context: %@
handleKerberosOperations: %{public}@
creating new kerberosAuthentication for realm: %{public}@
Result error: %{public}@
timeout waiting for platform sso login: %{public}@
showing login view controller: %{public}@
handleGetSiteCode: %{public}@
requesting a new sitecode
timeout waiting for sitecode, proceeding
******************* end handleGetSiteCode
handleRemoveRealm: %{public}@
******************* end handleRemoveRealm
Removing Realm: %{public}@
error when deleting plugin settings: %@
handleLogout: %@, removeRealm: %@
******************* end handleLogout
destroyCredentialsWithContext
destroy credential with UUID: %@
destroy credential with upn: %@
handleResetKeychainChoice: %{public}@
******************* end handleResetKeychainChoice
handleGetRealmInfo: %{public}@
completing request with data: %{private}@
******************* end handleGetRealmInfo
checking bundle id: %@ is in ACL: %@
checking bundle id check passed
createContextForRequest: %{public}@
retrieving principalname from certificate
using principalname %@
certificate not found
attemptKerberos
Received token, completing
Received cred UUID, completing
Received error: %@
Unsupported Encryption: %@
Server Principal Unknown: %@
Result unhandled: %lu
completing request with token: %{private}@
Password change error code: %@
Password change error: %{public}@
returning currentCredential: %@
error encoding currentCredential for realm: %{public}@
returning siteCode: %@
error encoding siteCode for realm: %{public}@
error encoding settings for realm: %{public}@
createOrSaveSettings: %@, realm: %@
settings cache entry missing
createSettingCacheEntryIfNeededWithError
creating settings cache
creating settings cache failed
settings cache created
settings cache already exists
More than one cache entry
createCacheEntry
Error creating cache entry: %@
More than one entry for: %{public}@
retrieveCurrentSettingsForRealm: %@
returning settings: %@
error with settings: %@, %@
retrieveAllCurrentSettings: %@
deleteSettingsForRealm: %@
deleteAllSettings
Start of attemptKerberos
using credential from cache: %@
using sitecode: %@
starting site code discovery
found existing credential received: %@
UUID nil after find credential for calling app: %{public}@
response for find existing credential: %lu
requireUserPresence is required for MDM certificate
new credential received: %@
UUID nil after authentication for calling app: %{public}@
response for new credential: %lu
error for new credential: %{public}@
Next pac refresh: %@
password last changed: %@, at login: %@
using credential: %{public}@
token received: %lu bytes
saveValuesForPlugins
siteCodeForCurrentNetworkAndRealmUsingContext
checking sitecode cache
using cached sitecode: %@
sitecode not found in cache
calling discoverADInfo
received sitecode: %@
sitecode saved
createNewCredentialUsingContext
using upn: %@
using pkinit
using certificate: %@ for uuid: %@
certificate not found for uuid: %@
certificate not found for token id: %@
error retrieving identity for persistient ref
using certificate: %@ for token id: %@
using LAContext: %@
Could not get a SecIdentityRef for token id: %@
password is missing
using cache: %@
complete bundleIdACL: %{public}@
using impersonation source app signing identifier: %{public}@
using source app signing identifier: %{public}@
findExistingCredentialUsingContext
%s using upn: %{public}@ on %@
changePasswordForUPN result: %{public}@
error during changePasswordForUPN: %{public}@
Error retreiving new TGT after password change: %lu, %@
%s login: %d on %@
Received Pac Data: %@
Error refreshing pac
evaluate vpn path: %{public}@
using audit token
vpn path: %{public}@
start of determineNetworkFingerprint
using bundleIdentifier: %{public}@
path: %{public}@
path is satisfied
path is not satisfied, return nil
vpn config uuid: %02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x
Per App VPN
On Demand VPN
vpn path: %@
On Demand VPN path not satisfied
VPN signature: %{private}@
this is cellular, return nil
Direct signature: %@
Network signature could not be created
VPN IP address: %{private}s
begin getInterfaceSignature
IPv4 signature
IPv6 signature
Dynamic interface signature
Using key: %{public}@, Router: %@
no matching entry found for %{public}s
archiving to file: %@
Error archiving file: %{public}@, error: %{public}@
Error writing file: %{public}@, error: %{public}@
loading from file: %@
Error reading plist file: %{public}@, message: %{public}@
Error using cached credential: %{public}@
createGSSName failed with: %{public}@
kerbGetTGTForUser: User entered a UPN in the username field.
kerbGetTGTForUser: User entered a standard username in the username field.
kerbValidatePassword: krb5_init_context failed with error: %d - %s
kerbValidatePassword: krb5_parse_name failed with error: %d - %s
kerbValidatePassword: krb5_get_init_creds_password failed with error: %d - %s
error parsing krb5 principal
error importing krb5 principal
GSSCreateName failed with: %{public}@
gss_aapl_initial_cred failed with: %{public}@
destroyCredentialForUPN - no UPN
failed to import %@: %{public}@
gss_init_sec_context failed server: %@, maj_stat: %d, min_stat: %d, %{public}@
have a buffer of length: %d, success
gsscred is not specified
Error initializing context: %d
Error copying cred uuid
Error resolving cache by uuid: %d
Error retrieving principal from cache: %d
Error creating TGT principal: %d
Error retrieving TGT from cache: %d
Error allocating cred opts: %d
Error decoding ticket: %d
Error setting second ticket: %d
Error completing delegation to self: %d
Error decoding delegation ticket: %d
Error decrypting ticket: %d
Error parsing pac: %d
Error verifying pac: %d
Error getting logon info from pac: %d
Error retrieving pac: %d
timeout waiting for srv data, proceeding
Starting SRV query: %@
adding result: %@
error receiving srv data
Starting host query: %@
error receiving dns data
+[SOSmartcard getLocalAuthIdentityForCert:withLAContext:]
com.apple.AppSSOKerberos
SIGN_IN_LOWERCASE_TEXT
+[SOSmartcard pollSmartcardForIdentityWithPersistentRef:tokenID:]
labl
+[SOSmartcard searchForCachedIdentityWithSerial:withIssuer:withTokenID:]
+[SOSmartcard searchForCachedIdentityPersistentRef:tokenID:]
v8@?0
com.apple.AppSSO
SOSmartcard
-[SOKerberosSettingsManager createKerberosSettingsCache]
SOKerberosSettingsManager
v20@?0@"NSObject<OS_ldap_connection>"8i16
Already connected to server
There is already an ldap connection
Waiting for connection: %@
Failed to connect to server: %@
connection closed or cancelled
v20@?0i8@"NSObject<OS_nw_error>"12
Connected to server
Failed to connect to server: %d
v28@?0@"NSObject<OS_ldap_connection>"8^{__CFString=}16i24
v24@?0@"NSObject<OS_ldap_operation>"8^{__CFDictionary=}16
LDAP Connection Error: %@
v20@?0@"NSObject<OS_ldap_operation>"8i16
LDAP Failed to create query
SOLDAPHelper
host: %@, port: %d
tcp/
udp/
http://
http
http/
kkdcp://
kkdcp
host://
SOKerberosServer
No gss credentials or errors found during authentication
Password change is not enabled
Service principal name is missing
Invalid Kerberos operation
Host name missing
Kerberos result unhandled
Source app not allowed
KDC unreachable
Password sync is not enabled
useKeychain
useSmartCard
userSetKeychainChoice
com.apple.appsso.Kerberos.ldap.%@
_ldap._tcp.%@
v20@?0B8@"NSString"12
v16@?0@"NSArray"8
_ldap._tcp.%@._sites.%@
(&(DnsDomain=%@)(NtVer=\06\00\00\00))
netlogon
v28@?0B8@"NSString"12@"NSDictionary"20
SOADSiteDiscovery
%@, %@, %@
-[SOKerberosRealmSettings initWithRealm:]
siteCodeCache
com.apple.Kerberos.%@
userPrincipalName
userName
credentialUUID
pkinitPersistientRef
smartCardTokenID
dateLastLogin
datePasswordLastChanged
datePasswordLastChangedAtLogin
dateNextPacRefresh
datePasswordCanChange
dateLocalPasswordLastChanged
dateADPasswordLastChangedWhenSynced
dateLocalPasswordLastChangedWhenSynced
datePasswordExpires
passwordNeverExpires
dateExpirationNotificationSent
dateExpirationChecked
networkHomeDirectory
delayUserSetupCleared
networkAvailable
userCancelledLogin
dateLoginCancelled
passwordChangeInProgress
dateUserSignedOut
v12@?0i8
platformSSOLoginInProgress
SOKerberosRealmSettings
-[SOKeychainHelper addCredentialsToKeychainWithService:withUsername:withPassword:requireUserPresence:]
-[SOKeychainHelper retrieveCredentialsFromKeychainWithContext:service:returnedUsername:returnedPassword:]
-[SOKeychainHelper hasCredentialsInKeychainWithService:]
-[SOKeychainHelper removeCredentialsFromKeychainWithService:]
SOKeychainHelper
kerberosDefault
whenNotSpecified
always
%@@%@
Kerberos:%@
com.apple.KerberosExtension.requestFinished
HTTP/1.1
SOKerberosContext
SOAsynchronousLDAPOperation
com.apple.AppSSOKerberos.version
-[SOKerberosExtensionProcess handleMigration]_block_invoke
-[SOKerberosExtensionProcess removeSettingFile:]
realmSettings.plist
rememberKeychainChoice
profile
realm
HTTP@%@
Negotiate %@
Authorization
kGSSMinorErrorCode
PASSWORD_CHANGE_PASSWORD_CHANGE_FAILED_OLD_PASSWORD_ALERT_TEXT
PASSWORD_CHANGE_PASSWORD_CHANGE_FAILED_SERVER_ALERT_TEXT
KDC_UNREACHABLE
REALM_CASE_MISMATCH
DEFAULT_REALM_MISSING
NSDescription
SOKerberosExtensionProcess
ASAuthorizationOperationLogout
ASAuthorizationProviderAuthorizationOperationConfigurationRemoved
ASAuthorizationOperationLogin
login
logout
get_credential_uuid
get_site_code
remove_realm
change_password
get_realm_info
reset_keychain_preference
site_code
gss_cred_uuid
is_default_realm
host_name
host_suffix_length
user_name
force
login_date
password_changed_date
local_password_changed_date
password_expires_date
home_directory
verbose
site_code_cache
refresh
no site code
com.apple.KerberosPlugin.ConnectionCompleted
com.apple.KerberosPlugin.ADPasswordChanged
com.apple.KerberosPlugin.LocalPasswordSynced
com.apple.KerberosPlugin.InternalNetworkAvailable
com.apple.KerberosPlugin.InternalNetworkNotAvailable
com.apple.KerberosExtension.gotNewCredential
com.apple.KerberosExtension.foundExistingCredential
com.apple.KerberosExtension.passwordChangedWithPasswordSync
com.apple.KerberosExtension.userSignedOut
com.apple.KerberosExtension.configRemoved
group.com.apple.KerberosExtension
com.apple.AppSSOAgent
com.apple.KerberosMenuExtra
com.apple.app-sso
com.apple.kcc
com.apple.kdestroy
com.apple.ticketviewer
com.apple.AppSSO.Kerberos.CurrentCredential
com.apple.AppSSO.Kerberos.SiteCode
com.apple.AppSSO.Kerberos.Cache
<%@: %p> Realm: %@, isDefaultRealm: %@, domainRealmMapping: %@, hosts: %@, kdcs: %@, credentialUseMode: %@
isDefaultRealm
domainRealmMapping
hosts
kdcs
siteCode
currentCredential
credentialUseMode
com.apple.AppSSO.Kerberos.Configuration
SOKerberosHeimdalPluginSettings
v16@?0@"NSString"8
kGSSICCertificate
Kerberos
kGSSICAuthenticationContext
kGSSICPassword
API:%@
kGSSICKerberosCacheName
kGSSICSiteName
com.apple.private.gssapi.allowmanagedapps
kGSSICAppIdentifierACL
kGSSICAppleSourceAppSigningIdentity
kGSSICAppleSourceApp
-[SOKerberosAuthentication changePasswordWithContext:withError:]
-[SOKerberosAuthentication refreshPacValuesWithContext:atLogin:error:]
-[SOKerberosAuthentication refreshPacValuesWithContext:credential:atLogin:]
kGSSMechanism
SPNEGO
SOKerberosAuthentication
passwordLastSet: %@, passwordCanChange: %@, passwordMustChange: %@, passwordNeverExpires: %@, homeDirectory: %@
true
false
_kerberos._tcp.%@
NetworkExtension
NoSignature
com.apple.KerberosExtension
v32@?0@8@16^B24
SONetworkIdentity
SOKerberosFileManager
-[SOKerberosHelper acquireCredentialForUUID:]
failed to find credential: %@
-[SOKerberosHelper acquireCredentialForUPN:]
-[SOKerberosHelper changePasswordForUPN:realm:withOldPassword:withNewPassword:withError:]
kGSSChangePasswordOldPassword
kGSSChangePasswordNewPassword
-[SOKerberosHelper validatePassword:forUser:]
Enterprise Connect
-[SOKerberosHelper createGSSName:gname:error:]
-[SOKerberosHelper createCredential:withOptions:andError:]
-[SOKerberosHelper destroyAllCredentials]
v24@?0^{gss_OID_desc_struct=I^v}8^{gss_cred_id_t_desc_struct=}16
-[SOKerberosHelper destroyCredential:]
failed to find credential to destroy: %@
-[SOKerberosHelper destroyCredentialForUPN:]
-[SOKerberosHelper authenticate:toServer:returningToken:andError:]
-[SOKerberosHelper getPACForCred:pac:]
krbtgt
SOKerberosHelper
com.apple.AppSSO.wrapper
B24@?0Q8@"NSObject<OS_nw_object>"16
v20@?0i8@"NSObject<OS_nw_array>"12
SODNSSRVQuery
com.apple.kerberosextension.%@.network
com.apple.kerberosextension.%@.kerberos
isExecuting
isFinished
softlink:r:path:/System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
SOSmartcardEntry
SOSmartcard
SOKerberosSettingsManager
SOLDAPHelper
SODNSSRVResponse
SOKerberosServer
AppSSOKerberos
SOKerberosExtensionUserData
SOADSiteDiscovery
SOSiteCode
NSSecureCoding
NSCoding
SOKerberosRealmSettings
SOKeychainHelper
SOAsynchronousBlockOperation
SOKerberosExtensionData
SOKerberosContext
SOAsynchronousLDAPOperation
SOKerberosExtensionProcess
SONetLogonParser
SOKerberosCredential
SOKerberosHeimdalPluginSettings
SOKerberosAuthentication
SOKerberosPacData
SONetworkIdentity
SOKerberosFileManager
SOKerberosHelper
SOAuthorizationWrapper
SOAuthorizationCoreDelegate
NSObject
SODNSSRVQuery
SOKerberosAgentContext
SOAsynchronousOperation
T@"NSArray",&,N,V_preferredKDCs
KDCUnreachable
T@"NSDictionary",&,V_attributes
T@"ASAuthorizationProviderExtensionAuthorizationRequest",&,N,V_authorizationRequest
T@"NSUUID",&,N,V_credentialUUID
T@"LAContext",&,V_smartCardLAContext
T@?,C,V_authorizationCompletion
T@"NSArray",&,N,V_hosts
_credentialUUID
T@"NSData",&,D,N
_isDefaultRealm
T@"NSData",&,V_persistientRef
_keychainHelper
T@"NSDate",&,D,N
_persistientRef
T@"NSDate",&,V_passwordCanChange
_requestStarted
T@"NSDate",&,V_passwordMustChange
allHeaderFields
T@"NSDictionary",&,N,V_domainRealmMapping
attemptedToGetCredsFromKeychain
T@"NSMutableArray",&,N,V_siteCodeCache
cancelAuthorizationWithRequest:
T@"NSNumber",&,N,V_pwExpireOverride
changedPassword
T@"NSNumber",&,N,V_pwReqLength
containsString:
T@"NSNumber",&,N,V_replicationTime
dealloc
T@"NSObject<OS_dispatch_group>",&,N,V_siteCodeGroup
evaluateVPNPath
T@"NSObject<OS_dispatch_semaphore>",R,V_platformSSOLoginSemaphore
handleMigration
T@"NSObject<OS_nw_connection>",&,V_connection
includeManagedAppsInBundleIdACL
T@"NSOperationQueue",&,N,V_queue
isCallerManaged
T@"NSOperationQueue",R,V_contextNetworkWorkQueue
isInternalBuild
T@"NSString",&,D,N
isReady
T@"NSString",&,N,V_bundleIdentifier
listCredentials
T@"NSString",&,N,V_callerBundleIdentifier
networkIdentity
T@"NSString",&,N,V_certificateTokenID
numberWithLong:
T@"NSString",&,N,V_changedPassword
passwordLastSet
T@"NSString",&,N,V_helpText
pwReqComplexity
T@"NSString",&,N,V_hostName
removeAllValues
T@"NSString",&,N,V_networkFingerprint
setAuthWrapper:
T@"NSString",&,N,V_password
setDns:
T@"NSString",&,N,V_pwChangeURL
setMaxConcurrentOperationCount:
T@"NSString",&,N,V_realm
setPwChangeURL:
T@"NSString",&,N,V_servicePrincipalName
setPwReqMinAge:
T@"NSString",&,N,V_userName
setUpn:
T@"NSString",&,V_certName
stringFromDate:
T@"NSString",&,V_fullName
T@"NSString",&,V_name
.cxx_destruct
T@"NSDate",&,N,V_loginTimeStamp
T#,R
T@"NSNumber",&,N,V_pwReqHistory
T@"LAContext",&,V_keychainLAContext
T@"NSUserDefaults",&,V_defaults
T@"NSArray",&,N,V_credentialBundleIdACL
TB,N,V_forceLoginViewController
T@"NSArray",&,N,V_kdcs
_delayUserSetup
T@"NSData",&,N,V_auditToken
_kerberosHelper
T@"NSData",&,V_pkinitPersistientRef
_loginTimeStamp
T@"NSDate",&,N
_pkinitIdentity
T@"NSDate",&,V_passwordLastSet
T@"NSDate",R,N,V_timeStamp
allKeys
T@"NSMapTable",&,N,V_requestContextMapping
base64EncodedStringWithOptions:
T@"NSMutableDictionary",&,N,V_kerberosByRealm
certificateUUID
T@"NSNumber",&,N,V_pwNotificationDays
completeRequest
T@"NSNumber",&,N,V_pwReqMinAge
currentSettings
T@"NSNumber",R,D,N
T@"NSObject<OS_dispatch_group>",&,V_dispatchGroup
findExistingCredentialUsingContext:returningCredential:orError:
T@"NSObject<OS_ldap_connection>",&,N,V_ldap
hostNameMissing
T@"NSObject<OS_nw_path>",&,N,V_lastpath
initWithString:
T@"NSOperationQueue",R,V_contextKerberosWorkQueue
isEqualToArray:
T@"NSString",&
isProxy
T@"NSString",&,N
kerberosByRealm
T@"NSString",&,N,V_cacheName
lowercaseString
T@"NSString",&,N,V_callerLocalizedName
numberWithBool:
T@"NSString",&,N,V_certificateUUID
pacData
T@"NSString",&,N,V_customUsernameLabel
profile
T@"NSString",&,N,V_host
release
T@"NSString",&,N,V_impersonationBundleIdentifier
replicationTime
T@"NSString",&,N,V_notificationName
setBool:forKey:
T@"NSString",&,N,V_principalName
setIsConnected:
T@"NSString",&,N,V_pwReqText
setNotifyToken:
T@"NSString",&,N,V_serviceName
setPwReqLength:
T@"NSString",&,N,V_siteCode
setServiceName:
T@"NSString",&,N,V_userPrincipalName
setUseKeychain:
T@"NSString",&,V_effectiveName
tokenID
T@"NSString",&,V_homeDirectory
uppercaseString
T@"NSString",&,V_realm
T@"NSString",&,V_tokenID
T@"NSString",&,V_upn
T@"NSString",&,V_uuid
T@"NSString",R,C
T@"NSString",R,N,V_code
T@"NSString",R,N,V_networkFingerprint
T@"NSString",R,N,V_realm
T@"NSString",R,V_host
T@"NSString",R,V_path
T@"NSString",R,V_port
T@"NSString",R,V_protocol
T@"NSUUID",&,D,N
T@"NSUUID",&,N
T@"SOADSiteDiscovery",&,V_siteDiscovery
T@"SOAuthorizationWrapper",&,V_authWrapper
T@"SOAuthorizationWrapper",&,V_passwordChangeAuthWrapper
T@"SOAuthorizationWrapper",&,V_passwordSyncAuthWrapper
T@"SOAuthorizationWrapper",&,V_receivedTGTAuthWrapper
T@"SODNSSRVQuery",&,V_dns
T@"SOFullProfile",&,V_profile
T@"SOKerberosExtensionData",&,N,V_extensionData
T@"SOKerberosExtensionData",&,V_extensionData
T@"SOKerberosExtensionUserData",&,N,V_extensionUserData
T@"SOKerberosHelper",&,V_kerberosHelper
T@"SOKerberosPacData",&,N,V_pacData
T@"SOKerberosRealmSettings",&,V_settings
T@"SOKerberosRealmSettings",R,N,V_currentSettings
T@"SOKeychainHelper",&,N,V_keychainHelper
T@"SOKeychainHelper",&,V_keychainHelper
T@"SONetworkIdentity",&,N,V_networkIdentity
T@"SONetworkIdentity",&,V_identity
T@"SOSiteCode",&,N,V_siteCode
T@?,C,V_block
T@?,C,V_completion
TB,D,N
TB,N
TB,N,GisDefaultRealm,V_defaultRealm
TB,N,GisPerAppVPN,V_perAppVPN
TB,N,V_allowAutomaticLogin
TB,N,V_allowPasswordChange
TB,N,V_allowPlatformSSOAuthFallback
TB,N,V_attemptedToGetCredsFromKeychain
TB,N,V_credsCameFromKeychain
TB,N,V_includeKerberosAppsInBundleIdACL
TB,N,V_includeManagedAppsInBundleIdACL
TB,N,V_isConnected
TB,N,V_isDefaultRealm
TB,N,V_isManagedApp
TB,N,V_performKerberosOnly
TB,N,V_refreshCredential
TB,N,V_requestCancelled
TB,N,V_requestStarted
TB,N,V_requireTLSForLDAP
TB,N,V_requireUserPresence
TB,N,V_returnCredentialOnly
TB,N,V_smartCardNeedsInsert
TB,N,V_useKerberosPasswordInsteadOfMDMIdentity
TB,N,V_usePlatformSSOTGT
TB,N,V_useSiteAutoDiscovery
TB,N,V_userNameIsReadOnly
TB,R
TB,V_authRequestPending
TB,V_completionCalled
TB,V_delayUserSetup
TB,V_discoveryInProgress
TB,V_monitorCredentialsCache
TB,V_passwordNeverExpires
TB,V_pwReqComplexity
TB,V_requireTLSForLDAP
TB,V_siteDiscoveryInProgress
TB,V_syncLocalPassword
TI,V_lifetime
TQ,N,V_state
TQ,R
TS,N,V_port
T^{__SecIdentity=},V_identity
T^{__SecIdentity=},V_pkinitIdentity
Ti,N,V_laContextFailureCount
Ti,V_notifyToken
Tq,N,V_credentialUseMode
URLByAppendingPathComponent:
URLHostAllowedCharacterSet
URLPathAllowedCharacterSet
URLsForDirectory:inDomains:
UTF8String
UUIDString
_allowAutomaticLogin
_allowPasswordChange
_allowPlatformSSOAuthFallback
_attemptedToGetCredsFromKeychain
_attributes
_auditToken
_authRequestPending
_authWrapper
_authorization
_authorizationCompletion
_authorizationRequest
_block
_bundleIdentifier
_cacheName
_callerBundleIdentifier
_callerLocalizedName
_certName
_certificateTokenID
_certificateUUID
_changedPassword
_code
_completion
_completionCalled
_connection
_contextKerberosWorkQueue
_contextNetworkWorkQueue
_credentialBundleIdACL
_credentialUseMode
_credsCameFromKeychain
_currentSettings
_customUsernameLabel
_defaultRealm
_defaults
_determineSiteCodeUsingDispatchGroup:bundleIdentifier:auditTokenData:networkFingerprint:requireTLSForLDAP:
_discoveryInProgress
_dispatchGroup
_dns
_domainRealmMapping
_effectiveName
_extensionData
_extensionUserData
_forceLoginViewController
_fullName
_helpText
_homeDirectory
_host
_hostName
_hosts
_identity
_impersonationBundleIdentifier
_includeKerberosAppsInBundleIdACL
_includeManagedAppsInBundleIdACL
_isConnected
_isManagedApp
_kdcs
_kerberosByRealm
_keychainLAContext
_laContextFailureCount
_lastpath
_ldap
_lifetime
_monitorCredentialsCache
_name
_networkFingerprint
_networkIdentity
_notificationName
_notifyToken
_pacData
_password
_passwordCanChange
_passwordChangeAuthWrapper
_passwordLastSet
_passwordMustChange
_passwordNeverExpires
_passwordSyncAuthWrapper
_path
_perAppVPN
_performKerberosOnly
_pkinitPersistientRef
_platformSSOLoginSemaphore
_port
_preferredKDCs
_principalName
_profile
_protocol
_pwChangeURL
_pwExpireOverride
_pwNotificationDays
_pwReqComplexity
_pwReqHistory
_pwReqLength
_pwReqMinAge
_pwReqText
_queue
_realm
_receivedTGTAuthWrapper
_refreshCredential
_replicationTime
_requestCancelled
_requestContextMapping
_requireTLSForLDAP
_requireUserPresence
_returnCredentialOnly
_serviceName
_servicePrincipalName
_settings
_siteCode
_siteCodeCache
_siteCodeGroup
_siteDiscovery
_siteDiscoveryInProgress
_smartCardLAContext
_smartCardNeedsInsert
_state
_syncLocalPassword
_testForUPNForUser:
_timeStamp
_tokenID
_upn
_useKerberosPasswordInsteadOfMDMIdentity
_usePlatformSSOTGT
_useSiteAutoDiscovery
_userName
_userNameIsReadOnly
_userPrincipalName
_uuid
acquireCredentialForUPN:
acquireCredentialForUUID:
addCredentialsToKeychainWithService:withUsername:withPassword:requireUserPresence:
addObject:
addObjectsFromArray:
addObserver:forKeyPath:options:context:
addOperation:
allowAutomaticLogin
allowPasswordChange
allowPlatformSSOAuthFallback
appSSOKerberosCacheName
appendBytes:length:
archiveDictionary:toFile:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayWithObjects:count:
attemptKerberosWithContext:andDelegate:
attemptKerberosWithContext:returningToken:orError:
attributes
auditToken
auditTokenData
auditTokenFromData:auditToken:
authRequestPending
authWrapper
authenticate:toServer:returningToken:andError:
authorization:didCompleteWithAuthorizationResult:
authorization:didCompleteWithError:
authorization:didCompleteWithHTTPAuthorizationHeaders:
authorization:didCompleteWithHTTPResponse:httpBody:
authorizationCompletion
authorizationDidCancel:
authorizationDidComplete:
authorizationDidNotHandle:
authorizationRequest
autorelease
availableSmartCards
beginAuthorizationWithOperation:url:httpHeaders:httpBody:
beginAuthorizationWithOperation:url:httpHeaders:httpBody:andCompletion:
beginAuthorizationWithRequest:
block
boolForKey:
boolValue
bundleIdentifier
bundleWithIdentifier:
cacheName
cacheSiteCode:
callerBundleIdentifier
callerLocalizedName
canPerformAuthorizationWithURL:responseCode:
cancel
cancelAllOperations
cancelRequest
cancelRequest:
certName
certificateTokenID
changePasswordForUPN:realm:withOldPassword:withNewPassword:withError:
changePasswordWithContext:withError:
checkSourceAppACLWithContext:
class
code
complete
completeRequestWithDoNotHandle
completeRequestWithError:
completeRequestWithHTTPResponse:httpBody:
completeRequestWithHTTPResponseFromContext:
completeRequestWithHTTPResponseHeaders:
completeRequestWithHeaders:
completeRequestWithToken:andContext:
completeWithError:
completeWithHTTPAuthorizationHeaders:
completeWithHTTPResponse:httpBody:
completion
completionCalled
componentsSeparatedByString:
conformsToProtocol:
connectToLDAPServer:andPort:andBundleIdentifier:andRequireTLSForLDAP:completion:
connectToLDAPService:requireTLSForLDAP:bundleIdentifier:inBackground:completion:
connectToLDAPWithCompletion:
connection
containsValueForKey:
contextKerberosWorkQueue
contextNetworkWorkQueue
convertFromFileTime:
copy
count
countByEnumeratingWithState:objects:count:
createCacheEntryWithError:
createContextForRequest:
createCredential:withOptions:andError:
createGSSName:gname:error:
createKerberosSettingsCache
createNewCredentialUsingContext:returningCredential:orError:
createSettingCacheEntryIfNeededWithError:
credentialBundleIdACL
credentialMissing
credentialUUID
credentialUseMode
credsCameFromKeychain
currentCredential
customUsernameLabel
dataForKey:
dataUsingEncoding:
dataWithBytes:length:
dataWithContentsOfURL:options:error:
date
dateADPasswordCanChange
dateADPasswordLastChangedWhenSynced
dateExpirationChecked
dateExpirationNotificationSent
dateLastLogin
dateLocalPasswordLastChanged
dateLocalPasswordLastChangedWhenSynced
dateLoginCancelled
dateNextPacRefresh
datePasswordExpires
datePasswordLastChanged
datePasswordLastChangedAtLogin
dateUserSignedOut
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
daysUntilExpiration
debugDescription
decimalDigitCharacterSet
decodeBoolForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultCenter
defaultManager
defaultRealm
defaults
delayUserSetup
delayUserSetupCleared
deleteAllSettings
deleteSettingsForRealm:error:
description
destroyAllCredentials
destroyCredential:
destroyCredentialForUPN:
destroyCredentialsWithContext:
determineNetworkFingerprint
determineSiteCodeUsingContext:
dictionary
dictionaryRepresentation
dictionaryWithObjects:forKeys:count:
didChangeValueForKey:
disconnect
discoverADInfoUsingSourceAppBundleIdentifier:auditTokenData:requireTLSForLDAP:withCompletion:
discoveryInProgress
dispatchGroup
doNotHandle
documentsDirectoryURLForFileName:
domainRealmMapping
dumpSiteCodeCache
effectiveName
encodeBool:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
enumerateKeysAndObjectsUsingBlock:
evaluateAccessControl:operation:options:error:
evaluateVPNPath:
evaluateVPNPathForHost:port:
extensionData
extensionUserData
finish
finishRequest
firstObject
forceLoginViewController
fullName
getBytes:length:
getIdentityForPersistentRef:identityToReturn:
getInterfaceFingerprintForDynamicInterface:
getInterfaceSignature:
getLocalAuthIdentityForCert:withLAContext:
getPACForCred:pac:
getVPNServerSignature:
handleAddKeychainCreds:
handleGetRealmInfo:
handleGetSiteCode:
handleKerberosOperations:andDelegate:
handleLogout:removeRealm:
handleLogoutWithContext:removeRealm:
handleRemoveRealm:
handleResetKeychainChoice:
handleResult:context:error:
hasCredentialsInKeychainWithService:
hasPrefix:
hasSuffix:
hash
helpText
homeDirectory
host
hostName
hosts
httpHeaders
identity
identityForPersistientRef:
identityForUUIDString:
impersonationBundleIdentifier
includeKerberosAppsInBundleIdACL
init
initForRealm:bundleIdentifier:auditToken:
initWithBlock:
initWithBytes:length:
initWithCharacters:length:
initWithCoder:
initWithData:encoding:
initWithDictionary:
initWithDomain:code:userInfo:
initWithHost:port:protocol:path:
initWithProfile:
initWithRealm:
initWithRealm:andHost:andPort:andBundleIdentifier:andRequireTLSForLDAP:andCompletion:
initWithRequest:extensionData:
initWithSiteCode:forNetworkFingerprint:
initWithURL:statusCode:HTTPVersion:headerFields:
initWithUUIDString:
initWithValidationInfo:
intValue
invalidKerberosOperation
invertedSet
isAsynchronous
isCancelled
isConnected
isDefaultRealm
isEqual:
isEqualToDate:
isEqualToDictionary:
isEqualToNumber:
isEqualToString:
isExecuting
isFinished
isKindOfClass:
isManagedApp
isMemberOfClass:
isPerAppVPN
kdcs
kerberosErrorWithCode:withDescription:
kerberosForRealm:
kerberosHelper
keychainHelper
keychainLAContext
laContextFailureCount
lastpath
ldap
length
lifetime
loadDictionaryFromFile:
loadSiteCodes
localizedCallerDisplayName
localizedDescription
localizedStringForKey:value:table:
loginTimeStamp
lookupHost:port:bundleIdentifier:auditTokenData:completion:
lookupSRVWithQuery:bundleIdentifier:auditTokenData:
lookupSRVWithQuery:bundleIdentifier:auditTokenData:completion:
main
mainBundle
mapErrorToKnownError:
mapKnownPasswordErrorToString:
monitorCredentialsCache
mutableCopy
name
networkAvailable
networkFingerprint
networkHomeDirectory
notificationName
notifyToken
numberOfMatchesInString:options:range:
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithShort:
numberWithUnsignedLongLong:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
observeValueForKeyPath:ofObject:change:context:
parseNetLoginUsingData:
password
passwordCanChange
passwordChangeAuthWrapper
passwordChangeInProgress
passwordChangeNotEnabled
passwordMustChange
passwordNeverExpires
passwordSyncAuthWrapper
passwordSyncNotEnabled
path
perAppVPN
performKerberosOnly
performLDAPPingUsingSite:bundleIdentifier:auditTokenData:requireTLSForLDAP:inBackground:completion:
performNetworkConnectionUsingService:orHost:port:inBackground:completion:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
persistientRef
pkinitIdentity
pkinitPersistientRef
platformSSOLoginInProgress
platformSSOLoginSemaphore
pollSmartcardForIdentityWithPersistentRef:tokenID:
port
postNotificationName:object:
preferredKDCs
presentAuthorizationViewControllerWithCompletion:
presentAuthorizationViewControllerWithHints:completion:
principalName
protocol
pwChangeURL
pwExpireOverride
pwNotificationDays
pwReqHistory
pwReqLength
pwReqMinAge
pwReqText
queryforBaseDN:andScope:andAttributes:withFilter:completion:
queue
rangeOfCharacterFromSet:
realm
realmKey:
receivedTGTAuthWrapper
refreshCredential
refreshPacValuesWithContext:atLogin:error:
refreshPacValuesWithContext:credential:atLogin:
registerDefaults:
regularExpressionWithPattern:options:error:
removeCredentialsFromKeychainWithService:
removeItemAtURL:error:
removeObject:
removeObjectForKey:
removeObserver:forKeyPath:
removeSettingFile:
requestCancelled
requestContextMapping
requestStarted
requestedOperation
requireTLSForLDAP
requireUserPresence
respondsToSelector:
retain
retainCount
retrieveAllCurrentSettings
retrieveCacheEntry
retrieveCachedSiteCodeFromCacheForBundleIdentifier:networkFingerprint:
retrieveCredentialsFromKeychainWithContext:service:returnedUsername:returnedPassword:
retrieveCurrentSettingsForRealm:
retrieveCurrentSettingsForRealm:error:
retrieveSetting:forRealm:
returnCredentialOnly
save
saveKerberosValuesForProfile:
savePacValues:atLogin:
saveSetting:data:withError:
saveSiteCodes
saveValuesAfterSuccessfulAuthentication:
saveValuesAfterSuccessfulPasswordSync:
saveValuesForPlugins:
saveWithError:
scheme
searchForCachedIdentityPersistentRef:tokenID:
searchForCachedIdentityWithSerial:withIssuer:withTokenID:
self
serverWithString:
serviceName
servicePrincipalName
servicePrincipalNameMissing
setAllowAutomaticLogin:
setAllowPasswordChange:
setAllowPlatformSSOAuthFallback:
setAppSSOKerberosCacheName:
setAttemptedToGetCredsFromKeychain:
setAttributes:
setAuditToken:
setAuthRequestPending:
setAuthorizationCompletion:
setAuthorizationRequest:
setBlock:
setBundleIdentifier:
setCacheName:
setCallerBundleIdentifier:
setCallerLocalizedName:
setCertName:
setCertificateTokenID:
setCertificateUUID:
setChangedPassword:
setCompletion:
setCompletionCalled:
setConnection:
setCredentialBundleIdACL:
setCredentialUUID:
setCredentialUseMode:
setCredsCameFromKeychain:
setCurrentCredential:
setCustomUsernameLabel:
setDateADPasswordCanChange:
setDateADPasswordLastChangedWhenSynced:
setDateExpirationChecked:
setDateExpirationNotificationSent:
setDateLastLogin:
setDateLocalPasswordLastChanged:
setDateLocalPasswordLastChangedWhenSynced:
setDateLoginCancelled:
setDateNextPacRefresh:
setDatePasswordExpires:
setDatePasswordLastChanged:
setDatePasswordLastChangedAtLogin:
setDateUserSignedOut:
setDefaultRealm:
setDefaults:
setDelayUserSetup:
setDelayUserSetupCleared:
setDelegate:
setDelegateDispatchQueue:
setDiscoveryInProgress:
setDispatchGroup:
setDomainRealmMapping:
setEffectiveName:
setExtensionData:
setExtensionUserData:
setForceLoginViewController:
setFormatOptions:
setFullName:
setHelpText:
setHomeDirectory:
setHost:
setHostName:
setHosts:
setIdentity:
setImpersonationBundleIdentifier:
setIncludeKerberosAppsInBundleIdACL:
setIncludeManagedAppsInBundleIdACL:
setInteractionNotAllowed:
setIsDefaultRealm:
setIsManagedApp:
setKdcs:
setKerberosByRealm:
setKerberosHelper:
setKeychainHelper:
setKeychainLAContext:
setLaContextFailureCount:
setLastpath:
setLdap:
setLifetime:
setLoginTimeStamp:
setMonitorCredentialsCache:
setName:
setNetworkAvailable:
setNetworkFingerprint:
setNetworkHomeDirectory:
setNetworkIdentity:
setNotificationName:
setObject:forKey:
setObject:forKeyedSubscript:
setOptionCallerName:
setPacData:
setPassword:
setPasswordCanChange:
setPasswordChangeAuthWrapper:
setPasswordChangeInProgress:
setPasswordLastSet:
setPasswordMustChange:
setPasswordNeverExpires:
setPasswordSyncAuthWrapper:
setPerAppVPN:
setPerformKerberosOnly:
setPersistientRef:
setPkinitIdentity:
setPkinitPersistientRef:
setPlatformSSOLoginInProgress:
setPort:
setPreferredKDCs:
setPrincipalName:
setProfile:
setPwExpireOverride:
setPwNotificationDays:
setPwReqComplexity:
setPwReqHistory:
setPwReqText:
setQueue:
setRealm:
setReceivedTGTAuthWrapper:
setRefreshCredential:
setReplicationTime:
setRequestCancelled:
setRequestContextMapping:
setRequestStarted:
setRequireTLSForLDAP:
setRequireUserPresence:
setReturnCredentialOnly:
setServicePrincipalName:
setSettings:
setSiteCode:
setSiteCodeCache:
setSiteCodeGroup:
setSiteCodeUsingContext:
setSiteDiscovery:
setSiteDiscoveryInProgress:
setSmartCardLAContext:
setSmartCardNeedsInsert:
setSmartCardTokenID:
setState:
setSuspended:
setSyncLocalPassword:
setTokenID:
setUseKerberosPasswordInsteadOfMDMIdentity:
setUsePlatformSSOTGT:
setUseSiteAutoDiscovery:
setUseSmartCard:
setUserCancelledLogin:
setUserName:
setUserNameIsReadOnly:
setUserPrincipalName:
setUserPrincipalNameAfterAuth:
setUserSetKeychainChoice:
setUuid:
setValue:forKey:
setWithArray:
settings
settingsForContext:includeSiteCodeCache:
setupLDAPconnection:andPort:andRequireTLSForLDAP:andBundleIdentifier:
siteCode
siteCodeCache
siteCodeForNetworkFingerprint:
siteCodeGroup
siteDiscovery
siteDiscoveryInProgress
sleepForTimeInterval:
smartCardLAContext
smartCardNeedsInsert
smartCardTokenID
sourceAppNotAllowed
standardUserDefaults
start
startLDAPWithCompletion:
startListeningForPlatformSSOTGTChanges
startRequest
state
stringByAppendingFormat:
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:options:range:
stringValue
stringWithCString:encoding:
stringWithCredentialUseMode:
stringWithFormat:
stringWithUTF8String:
substringFromIndex:
substringToIndex:
substringWithRange:
superclass
supportsSecureCoding
syncLocalPassword
synchronize
timeIntervalSinceDate:
timeIntervalSinceNow
timeStamp
tokenIDs
triggerVPNIfNeededUsingRealm:bundleIdentifier:auditToken:
unarchivedObjectOfClass:fromData:error:
unarchivedObjectOfClasses:fromData:error:
unhandledKerberosResult
useDigestMD5Auth:andPassword:
useKerberosAuth:forSPN:
useKerberosPasswordInsteadOfMDMIdentity
useKeychain
usePlatformSSOTGT
useSiteAutoDiscovery
useSmartCard
userCancelledLogin
userInfo
userName
userNameIsReadOnly
userPrincipalName
userSetKeychainChoice
uuid
validatePassword:forUser:
waitForCompletion
waitUntilAllOperationsAreFinished
weakToWeakObjectsMapTable
willChangeValueForKey:
writeToURL:options:error:
zone
@16@0:8
v24@0:8@16
^{__SecIdentity=}16@0:8
v24@0:8^{__SecIdentity=}16
v16@0:8
@"NSString"
@"NSDictionary"
^{__SecIdentity=}
@"NSData"
^{__SecIdentity=}32@0:8@16@24
i32@0:8^{__CFData=}16^^{__SecIdentity}24
B32@0:8@16@24
@40@0:8^{__CFData=}16^{__CFData=}24@32
@32@0:8@16@24
B16@0:8
v40@0:8@16S24B28@32
v48@0:8@16S24@28B36@?40
v48@0:8@16B24@28B36@?40
v24@0:8@?16
v52@0:8@16i24@28@36@?44
v32@0:8@16@24
v32@0:8^{gss_cred_id_t_desc_struct=}16@24
v20@0:8B16
@"NSObject<OS_ldap_connection>"
@"NSObject<OS_nw_connection>"
S16@0:8
v20@0:8S16
@24@0:8@16
@48@0:8@16@24@32@40
@32@0:8q16@24
v44@0:8@16@24B32@?36
v56@0:8@16@24@32B40B44@?48
v48@0:8@16@24S32B36@?40
@"NSOperationQueue"
@"SODNSSRVQuery"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
d16@0:8
@"NSDate"
v48@0:8@16@24@32^v40
i16@0:8
v20@0:8i16
@"NSObject<OS_dispatch_semaphore>"
@"NSMutableArray"
@"NSUserDefaults"
^{__SecIdentity=}24@0:8@16
i44@0:8@16@24@32B40
i48@0:8@16@24^@32^@40
B24@0:8@16
i24@0:8@16
@24@0:8@?16
@?16@0:8
q16@0:8
v24@0:8q16
@"NSArray"
@"NSNumber"
@"SOKerberosRealmSettings"
@"SOKerberosExtensionData"
@"SOKerberosExtensionUserData"
@"NSUUID"
@"LAContext"
@"SOSiteCode"
@"NSObject<OS_dispatch_group>"
@"SONetworkIdentity"
@"SOKerberosPacData"
@"ASAuthorizationProviderExtensionAuthorizationRequest"
@56@0:8@16@24S32@36B44@?48
v28@0:8@16B24
@28@0:8@16B24
@"NSMutableDictionary"
@"NSMapTable"
@"SOKerberosHelper"
@"SOKeychainHelper"
I16@0:8
v20@0:8I16
@24@0:8q16
B24@0:8^@16
^{HeimCred_s=}16@0:8
^{HeimCred_s=}24@0:8^@16
^{HeimCred_s=}24@0:8@16
^{HeimCred_s=}32@0:8@16@24
@32@0:8@16^@24
B32@0:8@16^@24
B40@0:8@16@24^@32
Q40@0:8@16^@24^@32
v52@0:8@16@24@32@40B48
Q40@0:8@16^^{gss_cred_id_t_desc_struct}24^@32
B36@0:8@16B24^@28
B36@0:8@16^{gss_cred_id_t_desc_struct=}24B32
Q24@0:8@16
v40@0:8@16@24@32
@"SOADSiteDiscovery"
@24@0:8^{?=QQQQQQ{?=SSIIII^S}{?=SSIIII^S}{?=SSIIII^S}{?=SSIIII^S}{?=SSIIII^S}{?=SSIIII^S}SSIIII^{?}{?=SSIIII^S}{?=SSIIII^S}I{?=CC[6C][16I]}}16
@24@0:8Q16
@40@0:8@16@24@32
@24@0:8r*16
@"NSObject<OS_nw_path>"
^{gss_cred_id_t_desc_struct=}24@0:8@16
B56@0:8@16@24@32@40^@48
I40@0:8@16^^{gss_name_t_desc_struct}24^@32
^{gss_cred_id_t_desc_struct=}40@0:8@16@24^@32
B48@0:8^{gss_cred_id_t_desc_struct=}16@24^@32^@40
B32@0:8^{gss_cred_id_t_desc_struct=}16^@24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"SOAuthorizationCore"16
v32@0:8@"SOAuthorizationCore"16@"NSDictionary"24
v40@0:8@"SOAuthorizationCore"16@"NSHTTPURLResponse"24@"NSData"32
v32@0:8@"SOAuthorizationCore"16@"SOAuthorizationResultCore"24
v32@0:8@"SOAuthorizationCore"16@"NSError"24
v56@0:8@16@24@32@40@?48
B32@0:8@16q24
@"SOAuthorizationCore"
v48@0:8@16@24@32@?40
@"SOFullProfile"
@"SOAuthorizationWrapper"
v24@0:8Q16
@(#)PROGRAM:AppSSOKerberos  PROJECT:AppSSO-1
%s  on %@
%s evaluateAccessControl was successful on %@
%s retrieving identity failed with error %d on %@
%s evaluateAccessControl failed with error %ld on %@
%s User cancelled PIN prompt on %@
%s Problem reading the SmartCard on %@
%s Screen may be locked, retry %{public}d on %@
%s Some other problem occurred on %@
%s finished on %@
Error querying SmartCards %d
unexpected type for SmartCard query
Error getting persistientref %d
Error retrieving certificate %d
Retrieving Kerberos names from certificate
Saving values for profile: %@
error deserializing extension data: %{private}@
need to save: %d
error when saving plugin settings: %@
error when creating settings cache: %@
setting up ldap connection: %@, %d, %{public}@
LDAP TLS support is enabled
LDAP closed connection to server
setting up ldap connection: %@, %{public}@
tcp state: %u
tcp error: %@
connection closed or cancelled
Connecting to server
Failed to negotiate a TLS connection with the LDAP server
Query Response received
Failed to create LDAP query
LDAP disconnecting received
invalid input length
host contains invalid characters: %@
port contains invalid characters: %@
path contains invalid characters: %@
Start of discoverADInfoWithCompletion: %{public}@
responses for LDAP: %@
received new site code: %@, from server: %@
all LDAP operations complete
using site code: %@
Start of performLDAPPingUsingSite: %{public}@
Start of ldap operation for service: %{public}@
response from service: %{public}@
response from ldap: %{public}@
netlogon response: %{public}@
error with netlogon ping for service: %{public}@, %{public}@
error with ldap connection for service: %@, %@
connection cancelled
notify_cancel() failed with %u
notify_register_check() failed with %u
notify_get_state() failed with error %u
invalid notify token
notify_set_state() failed with error %u
notify_post() failed with error %u
notify_register_dispatch failed: %u
caching site code: %@
found cached site code: %@
Defaults updated: %@, %@
Creating sem: %@
signaling sem: %@
Error deserializing plist: %{public}@
Error archiving site code cache: error: %{public}@
Unable to resolve persistient reference %@
SecItemCopyMatching returned: %d for uuid: %@
%s service %@ on %@
%s requireUserPresence is enabled on %@
%s requireUserPresence is disabled on %@
Could not create ACL for adding credentials to keychain.
%s Could not add credentials to keychain. Invalid parameters on %@
Removing keychain entry returned %d
Finding keychain entry for service %@
%s Could not find credentials in keychain. Invalid parameters on %@
Finding keychain entry failed with %d
Checking if keychain entry existis for service %@
Deleting keychain entry for service %@
%s Could not delete credentials from keychain. Invalid parameters on %@
Deleting keychain entry failed with %d
user principal name is set in saved settings: %@
user name is set in extensiondata: %@
user principal name is set in request: %@
user name is read only
*************** starting request: %@
*************** request already started: %@
*************** finishing request: %@
*************** request already finished: %@
*************** waitForCompletion: %@
*************** waitForCompletion Finished: %@
*************** canceling request: %@
*************** completeRequest: %@
*************** completeRequestWithHeaders: %{private}@
*************** completeRequesWithHTTPBody: %{private}@
*************** completeRequesWithHTTPResponse: %{private}@
*************** completeRequestWithError: %{public}@
completeRequestWithDoNotHandle: %{public}@
*************** presentAuthorizationViewControllerWithCompletion: %{public}@
Start of ldap operation for host: %{public}@
connected to host: %{public}@
error with netlogon ping for host: %{public}@, %{public}@
error with ldap connection for host: %@, %@
%s Stored version: %d on %@
******************* beginAuthorizationWithRequest: %@, realm: %@, operation: %@
cancelAuthorizationWithRequest: %{public}@
request count: %lu
canceling context: %@
handleKerberosOperations: %{public}@
creating new kerberosAuthentication for realm: %{public}@
Result error: %{public}@
timeout waiting for platform sso login: %{public}@
showing login view controller: %{public}@
handleGetSiteCode: %{public}@
requesting a new sitecode
timeout waiting for sitecode, proceeding
******************* end handleGetSiteCode
handleRemoveRealm: %{public}@
******************* end handleRemoveRealm
Removing Realm: %{public}@
error when deleting plugin settings: %@
handleLogout: %@, removeRealm: %@
******************* end handleLogout
destroyCredentialsWithContext
destroy credential with UUID: %@
destroy credential with upn: %@
handleResetKeychainChoice: %{public}@
******************* end handleResetKeychainChoice
handleGetRealmInfo: %{public}@
completing request with data: %{private}@
******************* end handleGetRealmInfo
checking bundle id: %@ is in ACL: %@
checking bundle id check passed
createContextForRequest: %{public}@
retrieving principalname from certificate
using principalname %@
certificate not found
attemptKerberos
Received token, completing
Received cred UUID, completing
Received error: %@
Unsupported Encryption: %@
Server Principal Unknown: %@
Result unhandled: %lu
completing request with token: %{private}@
Password change error code: %@
Password change error: %{public}@
returning currentCredential: %@
error encoding currentCredential for realm: %{public}@
returning siteCode: %@
error encoding siteCode for realm: %{public}@
error encoding settings for realm: %{public}@
createOrSaveSettings: %@, realm: %@
settings cache entry missing
createSettingCacheEntryIfNeededWithError
creating settings cache
creating settings cache failed
settings cache created
settings cache already exists
More than one cache entry
createCacheEntry
Error creating cache entry: %@
More than one entry for: %{public}@
retrieveCurrentSettingsForRealm: %@
returning settings: %@
error with settings: %@, %@
retrieveAllCurrentSettings: %@
deleteSettingsForRealm: %@
deleteAllSettings
Start of attemptKerberos
using credential from cache: %@
using sitecode: %@
starting site code discovery
found existing credential received: %@
UUID nil after find credential for calling app: %{public}@
response for find existing credential: %lu
requireUserPresence is required for MDM certificate
new credential received: %@
UUID nil after authentication for calling app: %{public}@
response for new credential: %lu
error for new credential: %{public}@
Next pac refresh: %@
password last changed: %@, at login: %@
using credential: %{public}@
token received: %lu bytes
saveValuesForPlugins
siteCodeForCurrentNetworkAndRealmUsingContext
checking sitecode cache
using cached sitecode: %@
sitecode not found in cache
calling discoverADInfo
received sitecode: %@
sitecode saved
createNewCredentialUsingContext
using upn: %@
using pkinit
using certificate: %@ for uuid: %@
certificate not found for uuid: %@
certificate not found for token id: %@
error retrieving identity for persistient ref
using certificate: %@ for token id: %@
using LAContext: %@
Could not get a SecIdentityRef for token id: %@
password is missing
using cache: %@
complete bundleIdACL: %{public}@
using impersonation source app signing identifier: %{public}@
using source app signing identifier: %{public}@
findExistingCredentialUsingContext
%s using upn: %{public}@ on %@
changePasswordForUPN result: %{public}@
error during changePasswordForUPN: %{public}@
Error retreiving new TGT after password change: %lu, %@
%s login: %d on %@
Received Pac Data: %@
Error refreshing pac
evaluate vpn path: %{public}@
using audit token
vpn path: %{public}@
start of determineNetworkFingerprint
using bundleIdentifier: %{public}@
path: %{public}@
path is satisfied
path is not satisfied, return nil
vpn config uuid: %02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x
Per App VPN
On Demand VPN
vpn path: %@
On Demand VPN path not satisfied
VPN signature: %{private}@
this is cellular, return nil
Direct signature: %@
Network signature could not be created
VPN IP address: %{private}s
begin getInterfaceSignature
IPv4 signature
IPv6 signature
Dynamic interface signature
Using key: %{public}@, Router: %@
no matching entry found for %{public}s
archiving to file: %@
Error archiving file: %{public}@, error: %{public}@
Error writing file: %{public}@, error: %{public}@
loading from file: %@
Error reading plist file: %{public}@, message: %{public}@
Error using cached credential: %{public}@
createGSSName failed with: %{public}@
kerbGetTGTForUser: User entered a UPN in the username field.
kerbGetTGTForUser: User entered a standard username in the username field.
kerbValidatePassword: krb5_init_context failed with error: %d - %s
kerbValidatePassword: krb5_parse_name failed with error: %d - %s
kerbValidatePassword: krb5_get_init_creds_password failed with error: %d - %s
error parsing krb5 principal
error importing krb5 principal
GSSCreateName failed with: %{public}@
gss_aapl_initial_cred failed with: %{public}@
destroyCredentialForUPN - no UPN
failed to import %@: %{public}@
gss_init_sec_context failed server: %@, maj_stat: %d, min_stat: %d, %{public}@
have a buffer of length: %d, success
gsscred is not specified
Error initializing context: %d
Error copying cred uuid
Error resolving cache by uuid: %d
Error retrieving principal from cache: %d
Error creating TGT principal: %d
Error retrieving TGT from cache: %d
Error allocating cred opts: %d
Error decoding ticket: %d
Error setting second ticket: %d
Error completing delegation to self: %d
Error decoding delegation ticket: %d
Error decrypting ticket: %d
Error parsing pac: %d
Error verifying pac: %d
Error getting logon info from pac: %d
Error retrieving pac: %d
timeout waiting for srv data, proceeding
Starting SRV query: %@
adding result: %@
error receiving srv data
Starting host query: %@
error receiving dns data
+[SOSmartcard getLocalAuthIdentityForCert:withLAContext:]
com.apple.AppSSOKerberos
SIGN_IN_LOWERCASE_TEXT
+[SOSmartcard pollSmartcardForIdentityWithPersistentRef:tokenID:]
labl
+[SOSmartcard searchForCachedIdentityWithSerial:withIssuer:withTokenID:]
+[SOSmartcard searchForCachedIdentityPersistentRef:tokenID:]
v8@?0
com.apple.AppSSO
SOSmartcard
-[SOKerberosSettingsManager createKerberosSettingsCache]
SOKerberosSettingsManager
v20@?0@"NSObject<OS_ldap_connection>"8i16
Already connected to server
There is already an ldap connection
Waiting for connection: %@
Failed to connect to server: %@
connection closed or cancelled
v20@?0i8@"NSObject<OS_nw_error>"12
Connected to server
Failed to connect to server: %d
v28@?0@"NSObject<OS_ldap_connection>"8^{__CFString=}16i24
v24@?0@"NSObject<OS_ldap_operation>"8^{__CFDictionary=}16
LDAP Connection Error: %@
v20@?0@"NSObject<OS_ldap_operation>"8i16
LDAP Failed to create query
SOLDAPHelper
host: %@, port: %d
tcp/
udp/
http://
http
http/
kkdcp://
kkdcp
host://
SOKerberosServer
No gss credentials or errors found during authentication
Password change is not enabled
Service principal name is missing
Invalid Kerberos operation
Host name missing
Kerberos result unhandled
Source app not allowed
KDC unreachable
Password sync is not enabled
useKeychain
useSmartCard
userSetKeychainChoice
com.apple.appsso.Kerberos.ldap.%@
_ldap._tcp.%@
v20@?0B8@"NSString"12
v16@?0@"NSArray"8
_ldap._tcp.%@._sites.%@
(&(DnsDomain=%@)(NtVer=\06\00\00\00))
netlogon
v28@?0B8@"NSString"12@"NSDictionary"20
SOADSiteDiscovery
%@, %@, %@
-[SOKerberosRealmSettings initWithRealm:]
siteCodeCache
com.apple.Kerberos.%@
userPrincipalName
userName
credentialUUID
pkinitPersistientRef
smartCardTokenID
dateLastLogin
datePasswordLastChanged
datePasswordLastChangedAtLogin
dateNextPacRefresh
datePasswordCanChange
dateLocalPasswordLastChanged
dateADPasswordLastChangedWhenSynced
dateLocalPasswordLastChangedWhenSynced
datePasswordExpires
passwordNeverExpires
dateExpirationNotificationSent
dateExpirationChecked
networkHomeDirectory
delayUserSetupCleared
networkAvailable
userCancelledLogin
dateLoginCancelled
passwordChangeInProgress
dateUserSignedOut
v12@?0i8
platformSSOLoginInProgress
SOKerberosRealmSettings
-[SOKeychainHelper addCredentialsToKeychainWithService:withUsername:withPassword:requireUserPresence:]
-[SOKeychainHelper retrieveCredentialsFromKeychainWithContext:service:returnedUsername:returnedPassword:]
-[SOKeychainHelper hasCredentialsInKeychainWithService:]
-[SOKeychainHelper removeCredentialsFromKeychainWithService:]
SOKeychainHelper
kerberosDefault
whenNotSpecified
always
%@@%@
Kerberos:%@
com.apple.KerberosExtension.requestFinished
HTTP/1.1
SOKerberosContext
SOAsynchronousLDAPOperation
com.apple.AppSSOKerberos.version
-[SOKerberosExtensionProcess handleMigration]_block_invoke
-[SOKerberosExtensionProcess removeSettingFile:]
realmSettings.plist
rememberKeychainChoice
profile
realm
HTTP@%@
Negotiate %@
Authorization
kGSSMinorErrorCode
PASSWORD_CHANGE_PASSWORD_CHANGE_FAILED_OLD_PASSWORD_ALERT_TEXT
PASSWORD_CHANGE_PASSWORD_CHANGE_FAILED_SERVER_ALERT_TEXT
KDC_UNREACHABLE
REALM_CASE_MISMATCH
DEFAULT_REALM_MISSING
NSDescription
SOKerberosExtensionProcess
ASAuthorizationOperationLogout
ASAuthorizationProviderAuthorizationOperationConfigurationRemoved
ASAuthorizationOperationLogin
login
logout
get_credential_uuid
get_site_code
remove_realm
change_password
get_realm_info
reset_keychain_preference
site_code
gss_cred_uuid
is_default_realm
host_name
host_suffix_length
user_name
force
login_date
password_changed_date
local_password_changed_date
password_expires_date
home_directory
verbose
site_code_cache
refresh
no site code
com.apple.KerberosPlugin.ConnectionCompleted
com.apple.KerberosPlugin.ADPasswordChanged
com.apple.KerberosPlugin.LocalPasswordSynced
com.apple.KerberosPlugin.InternalNetworkAvailable
com.apple.KerberosPlugin.InternalNetworkNotAvailable
com.apple.KerberosExtension.gotNewCredential
com.apple.KerberosExtension.foundExistingCredential
com.apple.KerberosExtension.passwordChangedWithPasswordSync
com.apple.KerberosExtension.userSignedOut
com.apple.KerberosExtension.configRemoved
group.com.apple.KerberosExtension
com.apple.AppSSOAgent
com.apple.KerberosMenuExtra
com.apple.app-sso
com.apple.kcc
com.apple.kdestroy
com.apple.ticketviewer
com.apple.AppSSO.Kerberos.CurrentCredential
com.apple.AppSSO.Kerberos.SiteCode
com.apple.AppSSO.Kerberos.Cache
<%@: %p> Realm: %@, isDefaultRealm: %@, domainRealmMapping: %@, hosts: %@, kdcs: %@, credentialUseMode: %@
isDefaultRealm
domainRealmMapping
hosts
kdcs
siteCode
currentCredential
credentialUseMode
com.apple.AppSSO.Kerberos.Configuration
SOKerberosHeimdalPluginSettings
v16@?0@"NSString"8
kGSSICCertificate
Kerberos
kGSSICAuthenticationContext
kGSSICPassword
API:%@
kGSSICKerberosCacheName
kGSSICSiteName
com.apple.private.gssapi.allowmanagedapps
kGSSICAppIdentifierACL
kGSSICAppleSourceAppSigningIdentity
kGSSICAppleSourceApp
-[SOKerberosAuthentication changePasswordWithContext:withError:]
-[SOKerberosAuthentication refreshPacValuesWithContext:atLogin:error:]
-[SOKerberosAuthentication refreshPacValuesWithContext:credential:atLogin:]
kGSSMechanism
SPNEGO
SOKerberosAuthentication
passwordLastSet: %@, passwordCanChange: %@, passwordMustChange: %@, passwordNeverExpires: %@, homeDirectory: %@
true
false
_kerberos._tcp.%@
NetworkExtension
NoSignature
com.apple.KerberosExtension
v32@?0@8@16^B24
SONetworkIdentity
SOKerberosFileManager
-[SOKerberosHelper acquireCredentialForUUID:]
failed to find credential: %@
-[SOKerberosHelper acquireCredentialForUPN:]
-[SOKerberosHelper changePasswordForUPN:realm:withOldPassword:withNewPassword:withError:]
kGSSChangePasswordOldPassword
kGSSChangePasswordNewPassword
-[SOKerberosHelper validatePassword:forUser:]
Enterprise Connect
-[SOKerberosHelper createGSSName:gname:error:]
-[SOKerberosHelper createCredential:withOptions:andError:]
-[SOKerberosHelper destroyAllCredentials]
v24@?0^{gss_OID_desc_struct=I^v}8^{gss_cred_id_t_desc_struct=}16
-[SOKerberosHelper destroyCredential:]
failed to find credential to destroy: %@
-[SOKerberosHelper destroyCredentialForUPN:]
-[SOKerberosHelper authenticate:toServer:returningToken:andError:]
-[SOKerberosHelper getPACForCred:pac:]
krbtgt
SOKerberosHelper
com.apple.AppSSO.wrapper
B24@?0Q8@"NSObject<OS_nw_object>"16
v20@?0i8@"NSObject<OS_nw_array>"12
SODNSSRVQuery
com.apple.kerberosextension.%@.network
com.apple.kerberosextension.%@.kerberos
isExecuting
isFinished
softlink:r:path:/System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
SOSmartcardEntry
SOSmartcard
SOKerberosSettingsManager
SOLDAPHelper
SODNSSRVResponse
SOKerberosServer
AppSSOKerberos
SOKerberosExtensionUserData
SOADSiteDiscovery
SOSiteCode
NSSecureCoding
NSCoding
SOKerberosRealmSettings
SOKeychainHelper
SOAsynchronousBlockOperation
SOKerberosExtensionData
SOKerberosContext
SOAsynchronousLDAPOperation
SOKerberosExtensionProcess
SONetLogonParser
SOKerberosCredential
SOKerberosHeimdalPluginSettings
SOKerberosAuthentication
SOKerberosPacData
SONetworkIdentity
SOKerberosFileManager
SOKerberosHelper
SOAuthorizationWrapper
SOAuthorizationCoreDelegate
NSObject
SODNSSRVQuery
SOKerberosAgentContext
SOAsynchronousOperation
T@"NSArray",&,N,V_preferredKDCs
KDCUnreachable
T@"NSDictionary",&,V_attributes
T@"ASAuthorizationProviderExtensionAuthorizationRequest",&,N,V_authorizationRequest
T@"NSUUID",&,N,V_credentialUUID
T@"LAContext",&,V_smartCardLAContext
T@?,C,V_authorizationCompletion
T@"NSArray",&,N,V_hosts
_credentialUUID
T@"NSData",&,D,N
_isDefaultRealm
T@"NSData",&,V_persistientRef
_keychainHelper
T@"NSDate",&,D,N
_persistientRef
T@"NSDate",&,V_passwordCanChange
_requestStarted
T@"NSDate",&,V_passwordMustChange
allHeaderFields
T@"NSDictionary",&,N,V_domainRealmMapping
attemptedToGetCredsFromKeychain
T@"NSMutableArray",&,N,V_siteCodeCache
cancelAuthorizationWithRequest:
T@"NSNumber",&,N,V_pwExpireOverride
changedPassword
T@"NSNumber",&,N,V_pwReqLength
containsString:
T@"NSNumber",&,N,V_replicationTime
dealloc
T@"NSObject<OS_dispatch_group>",&,N,V_siteCodeGroup
evaluateVPNPath
T@"NSObject<OS_dispatch_semaphore>",R,V_platformSSOLoginSemaphore
handleMigration
T@"NSObject<OS_nw_connection>",&,V_connection
includeManagedAppsInBundleIdACL
T@"NSOperationQueue",&,N,V_queue
isCallerManaged
T@"NSOperationQueue",R,V_contextNetworkWorkQueue
isInternalBuild
T@"NSString",&,D,N
isReady
T@"NSString",&,N,V_bundleIdentifier
listCredentials
T@"NSString",&,N,V_callerBundleIdentifier
networkIdentity
T@"NSString",&,N,V_certificateTokenID
numberWithLong:
T@"NSString",&,N,V_changedPassword
passwordLastSet
T@"NSString",&,N,V_helpText
pwReqComplexity
T@"NSString",&,N,V_hostName
removeAllValues
T@"NSString",&,N,V_networkFingerprint
setAuthWrapper:
T@"NSString",&,N,V_password
setDns:
T@"NSString",&,N,V_pwChangeURL
setMaxConcurrentOperationCount:
T@"NSString",&,N,V_realm
setPwChangeURL:
T@"NSString",&,N,V_servicePrincipalName
setPwReqMinAge:
T@"NSString",&,N,V_userName
setUpn:
T@"NSString",&,V_certName
stringFromDate:
T@"NSString",&,V_fullName
T@"NSString",&,V_name
.cxx_destruct
T@"NSDate",&,N,V_loginTimeStamp
T#,R
T@"NSNumber",&,N,V_pwReqHistory
T@"LAContext",&,V_keychainLAContext
T@"NSUserDefaults",&,V_defaults
T@"NSArray",&,N,V_credentialBundleIdACL
TB,N,V_forceLoginViewController
T@"NSArray",&,N,V_kdcs
_delayUserSetup
T@"NSData",&,N,V_auditToken
_kerberosHelper
T@"NSData",&,V_pkinitPersistientRef
_loginTimeStamp
T@"NSDate",&,N
_pkinitIdentity
T@"NSDate",&,V_passwordLastSet
T@"NSDate",R,N,V_timeStamp
allKeys
T@"NSMapTable",&,N,V_requestContextMapping
base64EncodedStringWithOptions:
T@"NSMutableDictionary",&,N,V_kerberosByRealm
certificateUUID
T@"NSNumber",&,N,V_pwNotificationDays
completeRequest
T@"NSNumber",&,N,V_pwReqMinAge
currentSettings
T@"NSNumber",R,D,N
T@"NSObject<OS_dispatch_group>",&,V_dispatchGroup
findExistingCredentialUsingContext:returningCredential:orError:
T@"NSObject<OS_ldap_connection>",&,N,V_ldap
hostNameMissing
T@"NSObject<OS_nw_path>",&,N,V_lastpath
initWithString:
T@"NSOperationQueue",R,V_contextKerberosWorkQueue
isEqualToArray:
T@"NSString",&
isProxy
T@"NSString",&,N
kerberosByRealm
T@"NSString",&,N,V_cacheName
lowercaseString
T@"NSString",&,N,V_callerLocalizedName
numberWithBool:
T@"NSString",&,N,V_certificateUUID
pacData
T@"NSString",&,N,V_customUsernameLabel
profile
T@"NSString",&,N,V_host
release
T@"NSString",&,N,V_impersonationBundleIdentifier
replicationTime
T@"NSString",&,N,V_notificationName
setBool:forKey:
T@"NSString",&,N,V_principalName
setIsConnected:
T@"NSString",&,N,V_pwReqText
setNotifyToken:
T@"NSString",&,N,V_serviceName
setPwReqLength:
T@"NSString",&,N,V_siteCode
setServiceName:
T@"NSString",&,N,V_userPrincipalName
setUseKeychain:
T@"NSString",&,V_effectiveName
tokenID
T@"NSString",&,V_homeDirectory
uppercaseString
T@"NSString",&,V_realm
T@"NSString",&,V_tokenID
T@"NSString",&,V_upn
T@"NSString",&,V_uuid
T@"NSString",R,C
T@"NSString",R,N,V_code
T@"NSString",R,N,V_networkFingerprint
T@"NSString",R,N,V_realm
T@"NSString",R,V_host
T@"NSString",R,V_path
T@"NSString",R,V_port
T@"NSString",R,V_protocol
T@"NSUUID",&,D,N
T@"NSUUID",&,N
T@"SOADSiteDiscovery",&,V_siteDiscovery
T@"SOAuthorizationWrapper",&,V_authWrapper
T@"SOAuthorizationWrapper",&,V_passwordChangeAuthWrapper
T@"SOAuthorizationWrapper",&,V_passwordSyncAuthWrapper
T@"SOAuthorizationWrapper",&,V_receivedTGTAuthWrapper
T@"SODNSSRVQuery",&,V_dns
T@"SOFullProfile",&,V_profile
T@"SOKerberosExtensionData",&,N,V_extensionData
T@"SOKerberosExtensionData",&,V_extensionData
T@"SOKerberosExtensionUserData",&,N,V_extensionUserData
T@"SOKerberosHelper",&,V_kerberosHelper
T@"SOKerberosPacData",&,N,V_pacData
T@"SOKerberosRealmSettings",&,V_settings
T@"SOKerberosRealmSettings",R,N,V_currentSettings
T@"SOKeychainHelper",&,N,V_keychainHelper
T@"SOKeychainHelper",&,V_keychainHelper
T@"SONetworkIdentity",&,N,V_networkIdentity
T@"SONetworkIdentity",&,V_identity
T@"SOSiteCode",&,N,V_siteCode
T@?,C,V_block
T@?,C,V_completion
TB,D,N
TB,N
TB,N,GisDefaultRealm,V_defaultRealm
TB,N,GisPerAppVPN,V_perAppVPN
TB,N,V_allowAutomaticLogin
TB,N,V_allowPasswordChange
TB,N,V_allowPlatformSSOAuthFallback
TB,N,V_attemptedToGetCredsFromKeychain
TB,N,V_credsCameFromKeychain
TB,N,V_includeKerberosAppsInBundleIdACL
TB,N,V_includeManagedAppsInBundleIdACL
TB,N,V_isConnected
TB,N,V_isDefaultRealm
TB,N,V_isManagedApp
TB,N,V_performKerberosOnly
TB,N,V_refreshCredential
TB,N,V_requestCancelled
TB,N,V_requestStarted
TB,N,V_requireTLSForLDAP
TB,N,V_requireUserPresence
TB,N,V_returnCredentialOnly
TB,N,V_smartCardNeedsInsert
TB,N,V_useKerberosPasswordInsteadOfMDMIdentity
TB,N,V_usePlatformSSOTGT
TB,N,V_useSiteAutoDiscovery
TB,N,V_userNameIsReadOnly
TB,R
TB,V_authRequestPending
TB,V_completionCalled
TB,V_delayUserSetup
TB,V_discoveryInProgress
TB,V_monitorCredentialsCache
TB,V_passwordNeverExpires
TB,V_pwReqComplexity
TB,V_requireTLSForLDAP
TB,V_siteDiscoveryInProgress
TB,V_syncLocalPassword
TI,V_lifetime
TQ,N,V_state
TQ,R
TS,N,V_port
T^{__SecIdentity=},V_identity
T^{__SecIdentity=},V_pkinitIdentity
Ti,N,V_laContextFailureCount
Ti,V_notifyToken
Tq,N,V_credentialUseMode
URLByAppendingPathComponent:
URLHostAllowedCharacterSet
URLPathAllowedCharacterSet
URLsForDirectory:inDomains:
UTF8String
UUIDString
_allowAutomaticLogin
_allowPasswordChange
_allowPlatformSSOAuthFallback
_attemptedToGetCredsFromKeychain
_attributes
_auditToken
_authRequestPending
_authWrapper
_authorization
_authorizationCompletion
_authorizationRequest
_block
_bundleIdentifier
_cacheName
_callerBundleIdentifier
_callerLocalizedName
_certName
_certificateTokenID
_certificateUUID
_changedPassword
_code
_completion
_completionCalled
_connection
_contextKerberosWorkQueue
_contextNetworkWorkQueue
_credentialBundleIdACL
_credentialUseMode
_credsCameFromKeychain
_currentSettings
_customUsernameLabel
_defaultRealm
_defaults
_determineSiteCodeUsingDispatchGroup:bundleIdentifier:auditTokenData:networkFingerprint:requireTLSForLDAP:
_discoveryInProgress
_dispatchGroup
_dns
_domainRealmMapping
_effectiveName
_extensionData
_extensionUserData
_forceLoginViewController
_fullName
_helpText
_homeDirectory
_host
_hostName
_hosts
_identity
_impersonationBundleIdentifier
_includeKerberosAppsInBundleIdACL
_includeManagedAppsInBundleIdACL
_isConnected
_isManagedApp
_kdcs
_kerberosByRealm
_keychainLAContext
_laContextFailureCount
_lastpath
_ldap
_lifetime
_monitorCredentialsCache
_name
_networkFingerprint
_networkIdentity
_notificationName
_notifyToken
_pacData
_password
_passwordCanChange
_passwordChangeAuthWrapper
_passwordLastSet
_passwordMustChange
_passwordNeverExpires
_passwordSyncAuthWrapper
_path
_perAppVPN
_performKerberosOnly
_pkinitPersistientRef
_platformSSOLoginSemaphore
_port
_preferredKDCs
_principalName
_profile
_protocol
_pwChangeURL
_pwExpireOverride
_pwNotificationDays
_pwReqComplexity
_pwReqHistory
_pwReqLength
_pwReqMinAge
_pwReqText
_queue
_realm
_receivedTGTAuthWrapper
_refreshCredential
_replicationTime
_requestCancelled
_requestContextMapping
_requireTLSForLDAP
_requireUserPresence
_returnCredentialOnly
_serviceName
_servicePrincipalName
_settings
_siteCode
_siteCodeCache
_siteCodeGroup
_siteDiscovery
_siteDiscoveryInProgress
_smartCardLAContext
_smartCardNeedsInsert
_state
_syncLocalPassword
_testForUPNForUser:
_timeStamp
_tokenID
_upn
_useKerberosPasswordInsteadOfMDMIdentity
_usePlatformSSOTGT
_useSiteAutoDiscovery
_userName
_userNameIsReadOnly
_userPrincipalName
_uuid
acquireCredentialForUPN:
acquireCredentialForUUID:
addCredentialsToKeychainWithService:withUsername:withPassword:requireUserPresence:
addObject:
addObjectsFromArray:
addObserver:forKeyPath:options:context:
addOperation:
allowAutomaticLogin
allowPasswordChange
allowPlatformSSOAuthFallback
appSSOKerberosCacheName
appendBytes:length:
archiveDictionary:toFile:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayWithObjects:count:
attemptKerberosWithContext:andDelegate:
attemptKerberosWithContext:returningToken:orError:
attributes
auditToken
auditTokenData
auditTokenFromData:auditToken:
authRequestPending
authWrapper
authenticate:toServer:returningToken:andError:
authorization:didCompleteWithAuthorizationResult:
authorization:didCompleteWithError:
authorization:didCompleteWithHTTPAuthorizationHeaders:
authorization:didCompleteWithHTTPResponse:httpBody:
authorizationCompletion
authorizationDidCancel:
authorizationDidComplete:
authorizationDidNotHandle:
authorizationRequest
autorelease
availableSmartCards
beginAuthorizationWithOperation:url:httpHeaders:httpBody:
beginAuthorizationWithOperation:url:httpHeaders:httpBody:andCompletion:
beginAuthorizationWithRequest:
block
boolForKey:
boolValue
bundleIdentifier
bundleWithIdentifier:
cacheName
cacheSiteCode:
callerBundleIdentifier
callerLocalizedName
canPerformAuthorizationWithURL:responseCode:
cancel
cancelAllOperations
cancelRequest
cancelRequest:
certName
certificateTokenID
changePasswordForUPN:realm:withOldPassword:withNewPassword:withError:
changePasswordWithContext:withError:
checkSourceAppACLWithContext:
class
code
complete
completeRequestWithDoNotHandle
completeRequestWithError:
completeRequestWithHTTPResponse:httpBody:
completeRequestWithHTTPResponseFromContext:
completeRequestWithHTTPResponseHeaders:
completeRequestWithHeaders:
completeRequestWithToken:andContext:
completeWithError:
completeWithHTTPAuthorizationHeaders:
completeWithHTTPResponse:httpBody:
completion
completionCalled
componentsSeparatedByString:
conformsToProtocol:
connectToLDAPServer:andPort:andBundleIdentifier:andRequireTLSForLDAP:completion:
connectToLDAPService:requireTLSForLDAP:bundleIdentifier:inBackground:completion:
connectToLDAPWithCompletion:
connection
containsValueForKey:
contextKerberosWorkQueue
contextNetworkWorkQueue
convertFromFileTime:
copy
count
countByEnumeratingWithState:objects:count:
createCacheEntryWithError:
createContextForRequest:
createCredential:withOptions:andError:
createGSSName:gname:error:
createKerberosSettingsCache
createNewCredentialUsingContext:returningCredential:orError:
createSettingCacheEntryIfNeededWithError:
credentialBundleIdACL
credentialMissing
credentialUUID
credentialUseMode
credsCameFromKeychain
currentCredential
customUsernameLabel
dataForKey:
dataUsingEncoding:
dataWithBytes:length:
dataWithContentsOfURL:options:error:
date
dateADPasswordCanChange
dateADPasswordLastChangedWhenSynced
dateExpirationChecked
dateExpirationNotificationSent
dateLastLogin
dateLocalPasswordLastChanged
dateLocalPasswordLastChangedWhenSynced
dateLoginCancelled
dateNextPacRefresh
datePasswordExpires
datePasswordLastChanged
datePasswordLastChangedAtLogin
dateUserSignedOut
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
daysUntilExpiration
debugDescription
decimalDigitCharacterSet
decodeBoolForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultCenter
defaultManager
defaultRealm
defaults
delayUserSetup
delayUserSetupCleared
deleteAllSettings
deleteSettingsForRealm:error:
description
destroyAllCredentials
destroyCredential:
destroyCredentialForUPN:
destroyCredentialsWithContext:
determineNetworkFingerprint
determineSiteCodeUsingContext:
dictionary
dictionaryRepresentation
dictionaryWithObjects:forKeys:count:
didChangeValueForKey:
disconnect
discoverADInfoUsingSourceAppBundleIdentifier:auditTokenData:requireTLSForLDAP:withCompletion:
discoveryInProgress
dispatchGroup
doNotHandle
documentsDirectoryURLForFileName:
domainRealmMapping
dumpSiteCodeCache
effectiveName
encodeBool:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
enumerateKeysAndObjectsUsingBlock:
evaluateAccessControl:operation:options:error:
evaluateVPNPath:
evaluateVPNPathForHost:port:
extensionData
extensionUserData
finish
finishRequest
firstObject
forceLoginViewController
fullName
getBytes:length:
getIdentityForPersistentRef:identityToReturn:
getInterfaceFingerprintForDynamicInterface:
getInterfaceSignature:
getLocalAuthIdentityForCert:withLAContext:
getPACForCred:pac:
getVPNServerSignature:
handleAddKeychainCreds:
handleGetRealmInfo:
handleGetSiteCode:
handleKerberosOperations:andDelegate:
handleLogout:removeRealm:
handleLogoutWithContext:removeRealm:
handleRemoveRealm:
handleResetKeychainChoice:
handleResult:context:error:
hasCredentialsInKeychainWithService:
hasPrefix:
hasSuffix:
hash
helpText
homeDirectory
host
hostName
hosts
httpHeaders
identity
identityForPersistientRef:
identityForUUIDString:
impersonationBundleIdentifier
includeKerberosAppsInBundleIdACL
init
initForRealm:bundleIdentifier:auditToken:
initWithBlock:
initWithBytes:length:
initWithCharacters:length:
initWithCoder:
initWithData:encoding:
initWithDictionary:
initWithDomain:code:userInfo:
initWithHost:port:protocol:path:
initWithProfile:
initWithRealm:
initWithRealm:andHost:andPort:andBundleIdentifier:andRequireTLSForLDAP:andCompletion:
initWithRequest:extensionData:
initWithSiteCode:forNetworkFingerprint:
initWithURL:statusCode:HTTPVersion:headerFields:
initWithUUIDString:
initWithValidationInfo:
intValue
invalidKerberosOperation
invertedSet
isAsynchronous
isCancelled
isConnected
isDefaultRealm
isEqual:
isEqualToDate:
isEqualToDictionary:
isEqualToNumber:
isEqualToString:
isExecuting
isFinished
isKindOfClass:
isManagedApp
isMemberOfClass:
isPerAppVPN
kdcs
kerberosErrorWithCode:withDescription:
kerberosForRealm:
kerberosHelper
keychainHelper
keychainLAContext
laContextFailureCount
lastpath
ldap
length
lifetime
loadDictionaryFromFile:
loadSiteCodes
localizedCallerDisplayName
localizedDescription
localizedStringForKey:value:table:
loginTimeStamp
lookupHost:port:bundleIdentifier:auditTokenData:completion:
lookupSRVWithQuery:bundleIdentifier:auditTokenData:
lookupSRVWithQuery:bundleIdentifier:auditTokenData:completion:
main
mainBundle
mapErrorToKnownError:
mapKnownPasswordErrorToString:
monitorCredentialsCache
mutableCopy
name
networkAvailable
networkFingerprint
networkHomeDirectory
notificationName
notifyToken
numberOfMatchesInString:options:range:
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithShort:
numberWithUnsignedLongLong:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
observeValueForKeyPath:ofObject:change:context:
parseNetLoginUsingData:
password
passwordCanChange
passwordChangeAuthWrapper
passwordChangeInProgress
passwordChangeNotEnabled
passwordMustChange
passwordNeverExpires
passwordSyncAuthWrapper
passwordSyncNotEnabled
path
perAppVPN
performKerberosOnly
performLDAPPingUsingSite:bundleIdentifier:auditTokenData:requireTLSForLDAP:inBackground:completion:
performNetworkConnectionUsingService:orHost:port:inBackground:completion:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
persistientRef
pkinitIdentity
pkinitPersistientRef
platformSSOLoginInProgress
platformSSOLoginSemaphore
pollSmartcardForIdentityWithPersistentRef:tokenID:
port
postNotificationName:object:
preferredKDCs
presentAuthorizationViewControllerWithCompletion:
presentAuthorizationViewControllerWithHints:completion:
principalName
protocol
pwChangeURL
pwExpireOverride
pwNotificationDays
pwReqHistory
pwReqLength
pwReqMinAge
pwReqText
queryforBaseDN:andScope:andAttributes:withFilter:completion:
queue
rangeOfCharacterFromSet:
realm
realmKey:
receivedTGTAuthWrapper
refreshCredential
refreshPacValuesWithContext:atLogin:error:
refreshPacValuesWithContext:credential:atLogin:
registerDefaults:
regularExpressionWithPattern:options:error:
removeCredentialsFromKeychainWithService:
removeItemAtURL:error:
removeObject:
removeObjectForKey:
removeObserver:forKeyPath:
removeSettingFile:
requestCancelled
requestContextMapping
requestStarted
requestedOperation
requireTLSForLDAP
requireUserPresence
respondsToSelector:
retain
retainCount
retrieveAllCurrentSettings
retrieveCacheEntry
retrieveCachedSiteCodeFromCacheForBundleIdentifier:networkFingerprint:
retrieveCredentialsFromKeychainWithContext:service:returnedUsername:returnedPassword:
retrieveCurrentSettingsForRealm:
retrieveCurrentSettingsForRealm:error:
retrieveSetting:forRealm:
returnCredentialOnly
save
saveKerberosValuesForProfile:
savePacValues:atLogin:
saveSetting:data:withError:
saveSiteCodes
saveValuesAfterSuccessfulAuthentication:
saveValuesAfterSuccessfulPasswordSync:
saveValuesForPlugins:
saveWithError:
scheme
searchForCachedIdentityPersistentRef:tokenID:
searchForCachedIdentityWithSerial:withIssuer:withTokenID:
self
serverWithString:
serviceName
servicePrincipalName
servicePrincipalNameMissing
setAllowAutomaticLogin:
setAllowPasswordChange:
setAllowPlatformSSOAuthFallback:
setAppSSOKerberosCacheName:
setAttemptedToGetCredsFromKeychain:
setAttributes:
setAuditToken:
setAuthRequestPending:
setAuthorizationCompletion:
setAuthorizationRequest:
setBlock:
setBundleIdentifier:
setCacheName:
setCallerBundleIdentifier:
setCallerLocalizedName:
setCertName:
setCertificateTokenID:
setCertificateUUID:
setChangedPassword:
setCompletion:
setCompletionCalled:
setConnection:
setCredentialBundleIdACL:
setCredentialUUID:
setCredentialUseMode:
setCredsCameFromKeychain:
setCurrentCredential:
setCustomUsernameLabel:
setDateADPasswordCanChange:
setDateADPasswordLastChangedWhenSynced:
setDateExpirationChecked:
setDateExpirationNotificationSent:
setDateLastLogin:
setDateLocalPasswordLastChanged:
setDateLocalPasswordLastChangedWhenSynced:
setDateLoginCancelled:
setDateNextPacRefresh:
setDatePasswordExpires:
setDatePasswordLastChanged:
setDatePasswordLastChangedAtLogin:
setDateUserSignedOut:
setDefaultRealm:
setDefaults:
setDelayUserSetup:
setDelayUserSetupCleared:
setDelegate:
setDelegateDispatchQueue:
setDiscoveryInProgress:
setDispatchGroup:
setDomainRealmMapping:
setEffectiveName:
setExtensionData:
setExtensionUserData:
setForceLoginViewController:
setFormatOptions:
setFullName:
setHelpText:
setHomeDirectory:
setHost:
setHostName:
setHosts:
setIdentity:
setImpersonationBundleIdentifier:
setIncludeKerberosAppsInBundleIdACL:
setIncludeManagedAppsInBundleIdACL:
setInteractionNotAllowed:
setIsDefaultRealm:
setIsManagedApp:
setKdcs:
setKerberosByRealm:
setKerberosHelper:
setKeychainHelper:
setKeychainLAContext:
setLaContextFailureCount:
setLastpath:
setLdap:
setLifetime:
setLoginTimeStamp:
setMonitorCredentialsCache:
setName:
setNetworkAvailable:
setNetworkFingerprint:
setNetworkHomeDirectory:
setNetworkIdentity:
setNotificationName:
setObject:forKey:
setObject:forKeyedSubscript:
setOptionCallerName:
setPacData:
setPassword:
setPasswordCanChange:
setPasswordChangeAuthWrapper:
setPasswordChangeInProgress:
setPasswordLastSet:
setPasswordMustChange:
setPasswordNeverExpires:
setPasswordSyncAuthWrapper:
setPerAppVPN:
setPerformKerberosOnly:
setPersistientRef:
setPkinitIdentity:
setPkinitPersistientRef:
setPlatformSSOLoginInProgress:
setPort:
setPreferredKDCs:
setPrincipalName:
setProfile:
setPwExpireOverride:
setPwNotificationDays:
setPwReqComplexity:
setPwReqHistory:
setPwReqText:
setQueue:
setRealm:
setReceivedTGTAuthWrapper:
setRefreshCredential:
setReplicationTime:
setRequestCancelled:
setRequestContextMapping:
setRequestStarted:
setRequireTLSForLDAP:
setRequireUserPresence:
setReturnCredentialOnly:
setServicePrincipalName:
setSettings:
setSiteCode:
setSiteCodeCache:
setSiteCodeGroup:
setSiteCodeUsingContext:
setSiteDiscovery:
setSiteDiscoveryInProgress:
setSmartCardLAContext:
setSmartCardNeedsInsert:
setSmartCardTokenID:
setState:
setSuspended:
setSyncLocalPassword:
setTokenID:
setUseKerberosPasswordInsteadOfMDMIdentity:
setUsePlatformSSOTGT:
setUseSiteAutoDiscovery:
setUseSmartCard:
setUserCancelledLogin:
setUserName:
setUserNameIsReadOnly:
setUserPrincipalName:
setUserPrincipalNameAfterAuth:
setUserSetKeychainChoice:
setUuid:
setValue:forKey:
setWithArray:
settings
settingsForContext:includeSiteCodeCache:
setupLDAPconnection:andPort:andRequireTLSForLDAP:andBundleIdentifier:
siteCode
siteCodeCache
siteCodeForNetworkFingerprint:
siteCodeGroup
siteDiscovery
siteDiscoveryInProgress
sleepForTimeInterval:
smartCardLAContext
smartCardNeedsInsert
smartCardTokenID
sourceAppNotAllowed
standardUserDefaults
start
startLDAPWithCompletion:
startListeningForPlatformSSOTGTChanges
startRequest
state
stringByAppendingFormat:
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:options:range:
stringValue
stringWithCString:encoding:
stringWithCredentialUseMode:
stringWithFormat:
stringWithUTF8String:
substringFromIndex:
substringToIndex:
substringWithRange:
superclass
supportsSecureCoding
syncLocalPassword
synchronize
timeIntervalSinceDate:
timeIntervalSinceNow
timeStamp
tokenIDs
triggerVPNIfNeededUsingRealm:bundleIdentifier:auditToken:
unarchivedObjectOfClass:fromData:error:
unarchivedObjectOfClasses:fromData:error:
unhandledKerberosResult
useDigestMD5Auth:andPassword:
useKerberosAuth:forSPN:
useKerberosPasswordInsteadOfMDMIdentity
useKeychain
usePlatformSSOTGT
useSiteAutoDiscovery
useSmartCard
userCancelledLogin
userInfo
userName
userNameIsReadOnly
userPrincipalName
userSetKeychainChoice
uuid
validatePassword:forUser:
waitForCompletion
waitUntilAllOperationsAreFinished
weakToWeakObjectsMapTable
willChangeValueForKey:
writeToURL:options:error:
zone
@16@0:8
v24@0:8@16
^{__SecIdentity=}16@0:8
v24@0:8^{__SecIdentity=}16
v16@0:8
@"NSString"
@"NSDictionary"
^{__SecIdentity=}
@"NSData"
^{__SecIdentity=}32@0:8@16@24
i32@0:8^{__CFData=}16^^{__SecIdentity}24
B32@0:8@16@24
@40@0:8^{__CFData=}16^{__CFData=}24@32
@32@0:8@16@24
B16@0:8
v40@0:8@16S24B28@32
v48@0:8@16S24@28B36@?40
v48@0:8@16B24@28B36@?40
v24@0:8@?16
v52@0:8@16i24@28@36@?44
v32@0:8@16@24
v32@0:8^{gss_cred_id_t_desc_struct=}16@24
v20@0:8B16
@"NSObject<OS_ldap_connection>"
@"NSObject<OS_nw_connection>"
S16@0:8
v20@0:8S16
@24@0:8@16
@48@0:8@16@24@32@40
@32@0:8q16@24
v44@0:8@16@24B32@?36
v56@0:8@16@24@32B40B44@?48
v48@0:8@16@24S32B36@?40
@"NSOperationQueue"
@"SODNSSRVQuery"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
d16@0:8
@"NSDate"
v48@0:8@16@24@32^v40
i16@0:8
v20@0:8i16
@"NSObject<OS_dispatch_semaphore>"
@"NSMutableArray"
@"NSUserDefaults"
^{__SecIdentity=}24@0:8@16
i44@0:8@16@24@32B40
i48@0:8@16@24^@32^@40
B24@0:8@16
i24@0:8@16
@24@0:8@?16
@?16@0:8
q16@0:8
v24@0:8q16
@"NSArray"
@"NSNumber"
@"SOKerberosRealmSettings"
@"SOKerberosExtensionData"
@"SOKerberosExtensionUserData"
@"NSUUID"
@"LAContext"
@"SOSiteCode"
@"NSObject<OS_dispatch_group>"
@"SONetworkIdentity"
@"SOKerberosPacData"
@"ASAuthorizationProviderExtensionAuthorizationRequest"
@56@0:8@16@24S32@36B44@?48
v28@0:8@16B24
@28@0:8@16B24
@"NSMutableDictionary"
@"NSMapTable"
@"SOKerberosHelper"
@"SOKeychainHelper"
I16@0:8
v20@0:8I16
@24@0:8q16
B24@0:8^@16
^{HeimCred_s=}16@0:8
^{HeimCred_s=}24@0:8^@16
^{HeimCred_s=}24@0:8@16
^{HeimCred_s=}32@0:8@16@24
@32@0:8@16^@24
B32@0:8@16^@24
B40@0:8@16@24^@32
Q40@0:8@16^@24^@32
v52@0:8@16@24@32@40B48
Q40@0:8@16^^{gss_cred_id_t_desc_struct}24^@32
B36@0:8@16B24^@28
B36@0:8@16^{gss_cred_id_t_desc_struct=}24B32
Q24@0:8@16
v40@0:8@16@24@32
@"SOADSiteDiscovery"
@24@0:8^{?=QQQQQQ{?=SSIIII^S}{?=SSIIII^S}{?=SSIIII^S}{?=SSIIII^S}{?=SSIIII^S}{?=SSIIII^S}SSIIII^{?}{?=SSIIII^S}{?=SSIIII^S}I{?=CC[6C][16I]}}16
@24@0:8Q16
@40@0:8@16@24@32
@24@0:8r*16
@"NSObject<OS_nw_path>"
^{gss_cred_id_t_desc_struct=}24@0:8@16
B56@0:8@16@24@32@40^@48
I40@0:8@16^^{gss_name_t_desc_struct}24^@32
^{gss_cred_id_t_desc_struct=}40@0:8@16@24^@32
B48@0:8^{gss_cred_id_t_desc_struct=}16@24^@32^@40
B32@0:8^{gss_cred_id_t_desc_struct=}16^@24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"SOAuthorizationCore"16
v32@0:8@"SOAuthorizationCore"16@"NSDictionary"24
v40@0:8@"SOAuthorizationCore"16@"NSHTTPURLResponse"24@"NSData"32
v32@0:8@"SOAuthorizationCore"16@"SOAuthorizationResultCore"24
v32@0:8@"SOAuthorizationCore"16@"NSError"24
v56@0:8@16@24@32@40@?48
B32@0:8@16q24
@"SOAuthorizationCore"
v48@0:8@16@24@32@?40
@"SOFullProfile"
@"SOAuthorizationWrapper"
v24@0:8Q16
