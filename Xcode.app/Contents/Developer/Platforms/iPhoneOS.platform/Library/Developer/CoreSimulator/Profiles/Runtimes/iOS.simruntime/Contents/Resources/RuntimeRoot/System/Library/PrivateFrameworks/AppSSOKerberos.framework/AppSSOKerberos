@(#)PROGRAM:AppSSOKerberos  PROJECT:AppSSO-1
%s  on %@
%s evaluateAccessControl was successful on %@
%s retrieving identity failed with error %d on %@
%s evaluateAccessControl failed with error %ld on %@
%s User cancelled PIN prompt on %@
%s Problem reading the smart card on %@
%s Some other problem occurred on %@
%s finished on %@
error when creating settings cache: %@
error deserializing extension data: %{private}@
need to save: %d
error when saving plugin settings: %@
setting up ldap connection: %@, %d, %{public}@
LDAP TLS support is enabled
LDAP closed connection to server
Connecting to server
Failed to negotiate a TLS connection with the LDAP server
Query Response received
Failed to create LDAP query
LDAP disconnecting received
creating realm settings for realm: %{public}@
removing realm settings for realm: %{public}@
loaded %lu items from file
successfully saved realm settings
failed to save realm settings
Start of discoverADInfoWithCompletion: %{public}@
responses for LDAP: %@
received new site code: %@, from server: %@
all LDAP operations complete
using site code: %@
caching site code: %@
found cached site code: %@
SecItemCopyMatching returned: %d for uuid: %@
%s requireUserPresence is enabled on %@
%s requireUserPresence is disabled on %@
Could not create ACL for adding credentials to keychain.
%s Could not add credentials to keychain. Invalid parameters on %@
Finding keychain entry for service %@
%s Could not find credentials in keychain. Invalid parameters on %@
Finding keychain entry failed with %d
Deleting keychain entry for service %@
%s Could not delete credentials from keychain. Invalid parameters on %@
Deleting keychain entry failed with %d
user principal name is set in saved settings: %@
user name is set in extensiondata: %@
user principal name is set in request: %@
*************** starting request: %@
*************** request already started: %@
*************** finishing request: %@
*************** request already finished: %@
*************** waitForCompletion: %@
*************** waitForCompletion Finished: %@
*************** canceling request: %@
*************** completeRequest: %@
*************** completeRequestWithHeaders: %{private}@
*************** completeRequesWithHTTPBody: %{private}@
*************** completeRequesWithHTTPResponse: %{private}@
*************** completeRequestWithError: %{public}@
completeRequestWithDoNotHandle: %{public}@
*************** presentAuthorizationViewControllerWithCompletion: %{public}@
Start of ldap operation for host: %{public}@
connected to host: %{public}@
response from ldap: %{public}@
netlogon response: %{public}@
error with netlogon ping for host: %{public}@, %{public}@
error with ldap connection for host: %@, %@
returning currentCredential: %@
error encoding currentCredential for realm: %{public}@
returning siteCode: %@
error encoding siteCode for realm: %{public}@
error encoding settings for realm: %{public}@
createOrSaveSettings: %@, realm: %@
settings cache entry missing
createSettingCacheEntryIfNeededWithError
creating settings cache
creating settings cache failed
settings cache created
settings cache already exists
More than one cache entry
createCacheEntry
Error creating cache entry: %@
More than one entry for: %{public}@
retrieveCurrentSettingsForRealm: %@
returning settings: %@
error with settings: %@, %@
retrieveAllCurrentSettings: %@
deleteSettingsForRealm: %@
deleteAllSettings
Start of attemptKerberos
using credential from cache: %@
using sitecode: %@
starting site code discovery
found existing credential received: %@
UUID nil after find credential for calling app: %{public}@
response for find existing credential: %lu
new credential received: %@
UUID nil after authentication for calling app: %{public}@
response for new credential: %lu
error for new credential: %{public}@
using credential: %{public}@
token received: %lu bytes
saveValuesForPlugins
siteCodeForCurrentNetworkAndRealmUsingContext
timeout waiting for sitecode, proceeding
checking sitecode cache
using cached sitecode: %@
sitecode not found in cache
calling discoverADInfo
received sitecode: %@
sitecode saved
createNewCredentialUsingContext
using upn: %@
using pkinit
using certificate: %@ for uuid: %@
certificate not found for uuid: %@
certificate not found for token id: %@
using certificate: %@ for token id: %@
Could not get a SecIdentityRef for token id: %@
password is missing
using cache: %@
complete bundleIdACL: %{public}@
using source app signing identifier: %{public}@
findExistingCredentialUsingContext
%s using upn: %{public}@ on %@
changePasswordForUPN result: %{public}@
error during changePasswordForUPN: %{public}@
start of determineNetworkFingerprint
using bundleIdentifier: %{public}@
using audit token
path has not changed
path is not satisfied, return nil
vpn config uuid: %02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x
Per App VPN
On Demand VPN
On Demand VPN path not satisfied
VPN signature: %@
this is cellular, return nil
Direct signature: %@
Network signature could not be created
VPN IP address: %{public}s
begin getInterfaceSignature
IPv4 signature
IPv6 signature
Dynamic interface signature
Using key: %{public}@, Router: %@
no matching entry found for %{public}s
archiving to file: %@
Error archiving file: %{public}@, error: %{public}@
Error writing file: %{public}@, error: %{public}@
loading from file: %@
Error reading plist file: %{public}@, message: %{public}@
Error deserializing plist: %{public}@
Error using cached credential: %{public}@
createGSSName failed with: %{public}@
removing expired credential: %@
kerbGetTGTForUser: User entered a UPN in the username field.
kerbGetTGTForUser: User entered a standard username in the username field.
kerbValidatePassword: krb5_init_context failed with error: %d - %s
kerbValidatePassword: krb5_parse_name failed with error: %d - %s
kerbValidatePassword: krb5_get_init_creds_password failed with error: %d - %s
error parsing krb5 principal
error importing krb5 principal
GSSCreateName failed with: %{public}@
gss_aapl_initial_cred failed with: %{public}@
destroyCredentialForUPN - no UPN
failed to import %@: %{public}@
gss_init_sec_context failed server: %@, maj_stat: %d, min_stat: %d, %{public}@
have a buffer of length: %d, success
timeout waiting for srv data, proceeding
+[SOSmartcard getLocalAuthIdentityForCert:withLAContext:]
com.apple.AppSSOKerberos
SIGN_IN_LOWERCASE_TEXT
+[SOSmartcard pollSmartcardForIdentityWithSerialNumber:withIssuer:withTokenID:]
labl
+[SOSmartcard searchForCachedIdentityWithSerial:withIssuer:withTokenID:]
v8@?0
com.apple.AppSSO
SOSmartcard
-[SOKerberosSettingsManager configurationChanged:]
-[SOKerberosSettingsManager saveKerberosValuesForPlugins]
com.apple.AppSSOKerberos.KerberosExtension
SOKerberosSettingsManager
v20@?0@"NSObject<OS_ldap_connection>"8i16
Already connected to server
Connected to server
Failed to connect to server: %d
v28@?0@"NSObject<OS_ldap_connection>"8^{__CFString=}16i24
v24@?0@"NSObject<OS_ldap_operation>"8^{__CFDictionary=}16
LDAP Connection Error: %@
v20@?0@"NSObject<OS_ldap_operation>"8i16
LDAP Failed to create query
SOLDAPHelper
realmSettings.plist
com.apple.AppSSO.realmSettings
SORealmSettingManager
host: %@, port: %d
No gss credentials or errors found during authentication
Password change is not enabled
Service principal name is missing
Invalid Kerberos operation
Host name missing
Kerberos result unhandled
Source app not allowed
useKeychain
userSetKeychainChoice
com.apple.appsso.Kerberos.ldap.%@
_ldap._tcp.%@
v16@?0@"NSString"8
SOADSiteDiscovery
%@, %@, %@
-[SOKerberosRealmSettings init]
SOKerberosRealmSettings
+[SOKeychainHelper addCredentialsToKeychainWithService:withUsername:withPassword:requireUserPresence:]
+[SOKeychainHelper retrieveCredentialsFromKeychainWithService:returnedUsername:returnedPassword:]
Kerberos
+[SOKeychainHelper removeCredentialsFromKeychainWithService:]
SOKeychainHelper
kerberosDefault
whenNotSpecified
always
%@@%@
Kerberos:%@
HTTP/1.1
SOKerberosContext
(&(DnsDomain=%@)(NtVer=\06\00\00\00))
netlogon
v28@?0B8@"NSString"12@"NSDictionary"20
v20@?0B8@"NSString"12
SOAsynchronousLDAPOperation
login
logout
get_credential_uuid
save_site_code
get_site_code
remove_realm
get_realm_for_host
get_default_realm
change_password
get_realm_info
reset_keychain_preference
site_code
gss_cred_uuid
is_default_realm
realm
host_name
host_suffix_length
user_name
force
login_date
password_changed_date
local_password_changed_date
password_expires_date
home_directory
verbose
site_code_cache
delayUserSetupCleared
networkAvailable
userCancelledLogin
no site code
com.apple.KerberosPlugin.ConnectionCompleted
com.apple.KerberosPlugin.ADPasswordChanged
com.apple.KerberosPlugin.LocalPasswordSynced
com.apple.KerberosPlugin.InternalNetworkAvailable
com.apple.KerberosPlugin.InternalNetworkNotAvailable
com.apple.KerberosExtension.gotNewCredential
com.apple.KerberosExtension.foundExistingCredential
com.apple.KerberosExtension.passwordChangedWithPasswordSync
com.apple.KerberosExtension.userSignedOut
com.apple.KerberosExtension.configRemoved
com.apple.AppSSO.Kerberos.CurrentCredential
com.apple.AppSSO.Kerberos.SiteCode
com.apple.AppSSO.Kerberos.Cache
<%@: %p> Realm: %@, isDefaultRealm: %@, domainRealmMapping: %@, hosts: %@, credentialUseMode: %@
isDefaultRealm
domainRealmMapping
hosts
siteCode
currentCredential
credentialUseMode
com.apple.AppSSO.Kerberos.Configuration
SOKerberosHeimdalPluginSettings
kGSSICCertificate
kGSSICPassword
API:%@
kGSSICKerberosCacheName
kGSSICSiteName
com.apple.private.gssapi.allowmanagedapps
kGSSICAppIdentifierACL
kGSSICAppleSourceAppSigningIdentity
kGSSICAppleSourceApp
-[SOKerberosAuthentication changePasswordWithContext:withError:]
kGSSMinorErrorCode
SOKerberosAuthentication
NetworkExtension
NoSignature
com.apple.KerberosExtension
v32@?0@8@16^B24
SONetworkIdentity
SOKerberosFileManager
failed to find credential: %@
kGSSChangePasswordOldPassword
kGSSChangePasswordNewPassword
Enterprise Connect
v24@?0^{gss_OID_desc_struct=I^v}8^{gss_cred_id_t_desc_struct=}16
failed to find credential to destroy: %@
http
SOKerberosHelper
com.apple.AppSSO.wrapper
B24@?0Q8@"NSObject<OS_nw_object>"16
v20@?0i8@"NSObject<OS_nw_array>"12
SODNSSRVQuery
isExecuting
isFinished
SOSmartcard
SOKerberosSettingsManager
SOLDAPHelper
SORealmSettingManager
SODNSSRVResponse
AppSSOKerberos
SOKerberosExtensionUserData
SOADSiteDiscovery
SOSiteCode
NSSecureCoding
NSCoding
SOKerberosRealmSettings
SOKeychainHelper
SOKerberosExtensionData
SOKerberosContext
SOAsynchronousLDAPOperation
SONetLogonParser
SOKerberosCredential
SOKerberosHeimdalPluginSettings
SOKerberosAuthentication
SONetworkIdentity
SOKerberosFileManager
SOKerberosHelper
SOAuthorizationWrapper
SOAuthorizationDelegate
NSObject
SODNSSRVQuery
SOAsynchronousOperation
numberWithInt:
bundleWithIdentifier:
localizedStringForKey:value:table:
dictionaryWithObjects:forKeys:count:
objectForKeyedSubscript:
evaluateAccessControl:operation:options:error:
code
searchForCachedIdentityWithSerial:withIssuer:withTokenID:
objectForKey:
length
dictionary
getLocalAuthIdentityForCert:withLAContext:
getIdentityForPersistentRef:identityToReturn:
pollSmartcardForIdentityWithSerialNumber:withIssuer:withTokenID:
init
defaultCenter
removeObserver:
dealloc
configurationChanged:
addObserver:selector:name:object:
saveKerberosValuesForPlugins
createSettingCacheEntryIfNeededWithError:
defaultManager
profilesWithExtensionBundleIdentifier:
countByEnumeratingWithState:objects:count:
realm
retrieveCurrentSettingsForRealm:error:
initWithRealm:
hosts
isEqualToArray:
copy
setHosts:
extensionData
initWithDictionary:
isDefaultRealm
setDefaultRealm:
domainRealmMapping
isEqualToDictionary:
setDomainRealmMapping:
credentialUseMode
setCredentialUseMode:
useSiteAutoDiscovery
siteCode
setSiteCode:
saveWithError:
listenForConfigurationChanges
observingConfigurationChanges
setIsConnected:
isConnected
disconnect
ldap
isEqualToString:
UTF8String
setLdap:
setupLDAPconnection:andPort:andRequireTLSForLDAP:andBundleIdentifier:
connectToLDAPWithCompletion:
stringWithFormat:
setValue:forKey:
connectToLDAPServer:andPort:andBundleIdentifier:andRequireTLSForLDAP:completion:
queryforBaseDN:andScope:andAttributes:withFilter:completion:
useDigestMD5Auth:andPassword:
useKerberosAuth:forSPN:
.cxx_destruct
_isConnected
_ldap
T@"NSObject<OS_ldap_connection>",&,N,V_ldap
TB,N,V_isConnected
setSettingsQueue:
setRealmSettings:
loadRealmSettings
saveRealmSettings
realmSettings
allKeys
uppercaseString
containsObject:
setObject:forKeyedSubscript:
removeObjectForKey:
settingsQueue
loadDictionaryFromFile:
mutableCopy
count
archiveDictionary:toFile:
settingsForRealm:
removeRealm:
_realmSettings
_settingsQueue
T@"NSMutableDictionary",&,N,V_realmSettings
T@"NSObject<OS_dispatch_queue>",&,N,V_settingsQueue
host
port
description
setHost:
setPort:
_port
_host
T@"NSString",&,N,V_host
TS,N,V_port
kerberosErrorWithCode:withDescription:
initWithDomain:code:userInfo:
credentialMissing
passwordChangeNotEnabled
servicePrincipalNameMissing
invalidKerberosOperation
hostNameMissing
unhandledKerberosResult
sourceAppNotAllowed
standardUserDefaults
boolForKey:
setBool:forKey:
useKeychain
setUseKeychain:
userSetKeychainChoice
setUserSetKeychainChoice:
TB,N
setRealm:
setRequireTLSForLDAP:
setQueue:
queue
setName:
setMaxConcurrentOperationCount:
lookupSRVWithQuery:bundleIdentifier:auditTokenData:
requireTLSForLDAP
cancelAllOperations
initWithRealm:andHost:andPort:andBundleIdentifier:andRequireTLSForLDAP:andCompletion:
addOperation:
waitUntilAllOperationsAreFinished
initWithRealm:requireTLSForLDAP:
discoverADInfoUsingSourceAppBundleIdentifier:auditTokenData:withCompletion:
_requireTLSForLDAP
_realm
_queue
T@"NSString",&,N,V_realm
T@"NSOperationQueue",&,N,V_queue
TB,N,V_requireTLSForLDAP
date
setFormatOptions:
timeStamp
stringFromDate:
networkFingerprint
timeIntervalSinceDate:
containsValueForKey:
decodeObjectOfClass:forKey:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithSiteCode:forNetworkFingerprint:
_code
_timeStamp
_networkFingerprint
T@"NSString",R,N,V_code
T@"NSDate",R,N,V_timeStamp
T@"NSString",R,N,V_networkFingerprint
siteCodeCache
removeObject:
addObject:
userPrincipalName
userName
credentialUUID
cacheName
smartCardIssuer
smartCardSerialNumber
smartCardTokenID
dateLastLogin
datePasswordLastChanged
dateLocalPasswordLastChanged
datePasswordExpires
networkHomeDirectory
delayUserSetupCleared
networkAvailable
userCancelledLogin
arrayWithObjects:count:
setWithArray:
decodeObjectOfClasses:forKey:
dumpSiteCodeCache
cacheSiteCode:
siteCodeForNetworkFingerprint:
setUserPrincipalName:
setUserName:
setCredentialUUID:
setCacheName:
setSmartCardIssuer:
setSmartCardSerialNumber:
setSmartCardTokenID:
setDateLastLogin:
setDatePasswordLastChanged:
setDateLocalPasswordLastChanged:
setDatePasswordExpires:
setNetworkHomeDirectory:
setDelayUserSetupCleared:
setNetworkAvailable:
setUserCancelledLogin:
setSiteCodeCache:
_userPrincipalName
_userName
_credentialUUID
_cacheName
_smartCardIssuer
_smartCardSerialNumber
_smartCardTokenID
_dateLastLogin
_datePasswordLastChanged
_dateLocalPasswordLastChanged
_datePasswordExpires
_networkHomeDirectory
_delayUserSetupCleared
_networkAvailable
_userCancelledLogin
_siteCodeCache
T@"NSMutableArray",&,N,V_siteCodeCache
T@"NSString",&,N,V_userPrincipalName
T@"NSString",&,N,V_userName
T@"NSUUID",&,N,V_credentialUUID
T@"NSString",&,N,V_cacheName
T@"NSData",&,N,V_smartCardIssuer
T@"NSData",&,N,V_smartCardSerialNumber
T@"NSString",&,N,V_smartCardTokenID
T@"NSDate",&,N,V_dateLastLogin
T@"NSString",&,N,V_datePasswordLastChanged
T@"NSString",&,N,V_dateLocalPasswordLastChanged
T@"NSString",&,N,V_datePasswordExpires
T@"NSString",&,N,V_networkHomeDirectory
T@"NSNumber",&,N,V_delayUserSetupCleared
T@"NSNumber",&,N,V_networkAvailable
T@"NSNumber",&,N,V_userCancelledLogin
dataUsingEncoding:
lowercaseString
setOptionCallerName:
initWithData:encoding:
identityForUUIDString:
addCredentialsToKeychainWithService:withUsername:withPassword:requireUserPresence:
retrieveCredentialsFromKeychainWithService:returnedUsername:returnedPassword:
removeCredentialsFromKeychainWithService:
sharedInstance
loadExtensions
objectAtIndex:
pwReqComplexity
boolValue
syncLocalPassword
pwNotificationDays
numberWithInteger:
pwExpireOverride
pwChangeURL
pwReqLength
pwReqMinAge
pwReqHistory
pwReqText
helpText
customUsernameLabel
principalName
certificateUUID
allowAutomaticLogin
requireUserPresence
monitorCredentialsCache
replicationTime
numberWithDouble:
credentialBundleIdACL
array
allowPasswordChange
delayUserSetup
includeManagedAppsInBundleIdACL
initAndPopulateExtensionData
setPrincipalName:
setCertificateUUID:
setUseSiteAutoDiscovery:
setCredentialBundleIdACL:
setIncludeManagedAppsInBundleIdACL:
setIsDefaultRealm:
setAllowPasswordChange:
setAllowAutomaticLogin:
setRequireUserPresence:
setPwChangeURL:
setPwExpireOverride:
setPwNotificationDays:
setPwReqComplexity:
setPwReqLength:
setPwReqMinAge:
setPwReqHistory:
setPwReqText:
setHelpText:
setCustomUsernameLabel:
setReplicationTime:
setSyncLocalPassword:
setMonitorCredentialsCache:
setDelayUserSetup:
_useSiteAutoDiscovery
_includeManagedAppsInBundleIdACL
_isDefaultRealm
_allowPasswordChange
_allowAutomaticLogin
_requireUserPresence
_pwReqComplexity
_syncLocalPassword
_monitorCredentialsCache
_delayUserSetup
_principalName
_siteCode
_certificateUUID
_credentialBundleIdACL
_domainRealmMapping
_pwChangeURL
_pwExpireOverride
_pwNotificationDays
_pwReqLength
_pwReqMinAge
_pwReqHistory
_pwReqText
_helpText
_customUsernameLabel
_replicationTime
_credentialUseMode
T@"NSString",&,N,V_principalName
T@"NSString",&,N,V_siteCode
T@"NSString",&,N,V_certificateUUID
TB,N,V_useSiteAutoDiscovery
T@"NSArray",&,N,V_credentialBundleIdACL
TB,N,V_includeManagedAppsInBundleIdACL
T@"NSDictionary",&,N,V_domainRealmMapping
TB,N,V_isDefaultRealm
TB,N,V_allowPasswordChange
TB,N,V_allowAutomaticLogin
TB,N,V_requireUserPresence
T@"NSString",&,N,V_pwChangeURL
T@"NSNumber",&,N,V_pwExpireOverride
T@"NSNumber",&,N,V_pwNotificationDays
TB,V_pwReqComplexity
T@"NSNumber",&,N,V_pwReqLength
T@"NSNumber",&,N,V_pwReqMinAge
T@"NSNumber",&,N,V_pwReqHistory
T@"NSString",&,N,V_pwReqText
T@"NSString",&,N,V_helpText
T@"NSString",&,N,V_customUsernameLabel
T@"NSNumber",&,N,V_replicationTime
TB,V_syncLocalPassword
TB,V_monitorCredentialsCache
TB,V_delayUserSetup
Tq,N,V_credentialUseMode
TB,V_requireTLSForLDAP
authorizationRequest
localizedCallerDisplayName
callerBundleIdentifier
isCallerManaged
auditTokenData
httpHeaders
hasSuffix:
stringByReplacingOccurrencesOfString:withString:options:range:
requestStarted
setRequestStarted:
dispatchGroup
cancelRequest:
setRequestCancelled:
cancel
finishRequest
complete
completeWithHTTPAuthorizationHeaders:
initWithURL:statusCode:HTTPVersion:headerFields:
completeRequestWithHTTPResponse:httpBody:
completeWithHTTPResponse:httpBody:
completeWithError:
doNotHandle
presentAuthorizationViewControllerWithCompletion:
settingsManager
initWithRequest:extensionData:settingsManager:
serviceName
setUserPrincipalNameAfterAuth:
startRequest
waitForCompletion
cancelRequest
completeRequest
completeRequestWithHeaders:
completeRequestWithHTTPResponseHeaders:
completeRequestWithError:
completeRequestWithDoNotHandle
currentSettings
setExtensionData:
extensionUserData
setExtensionUserData:
hostName
setHostName:
servicePrincipalName
setServicePrincipalName:
setServiceName:
password
setPassword:
changedPassword
setChangedPassword:
userNameIsReadOnly
setUserNameIsReadOnly:
certificateSerialNumber
setCertificateSerialNumber:
certificateIssuer
setCertificateIssuer:
certificateTokenID
setCertificateTokenID:
returnCredentialOnly
setReturnCredentialOnly:
setCallerBundleIdentifier:
callerLocalizedName
setCallerLocalizedName:
credsCameFromKeychain
setCredsCameFromKeychain:
requestCancelled
attemptedToGetCredsFromKeychain
setAttemptedToGetCredsFromKeychain:
forceLoginViewController
setForceLoginViewController:
loginTimeStamp
setLoginTimeStamp:
siteCodeGroup
setSiteCodeGroup:
networkIdentity
setNetworkIdentity:
auditToken
isManagedApp
smartCardNeedsInsert
setSmartCardNeedsInsert:
setAuthorizationRequest:
setDispatchGroup:
setSettingsManager:
_userNameIsReadOnly
_returnCredentialOnly
_credsCameFromKeychain
_requestCancelled
_attemptedToGetCredsFromKeychain
_forceLoginViewController
_isManagedApp
_smartCardNeedsInsert
_requestStarted
_extensionData
_extensionUserData
_hostName
_servicePrincipalName
_serviceName
_password
_changedPassword
_certificateSerialNumber
_certificateIssuer
_certificateTokenID
_callerBundleIdentifier
_callerLocalizedName
_loginTimeStamp
_siteCodeGroup
_networkIdentity
_auditToken
_authorizationRequest
_dispatchGroup
_settingsManager
T@"ASAuthorizationProviderExtensionAuthorizationRequest",&,N,V_authorizationRequest
T@"NSObject<OS_dispatch_group>",&,V_dispatchGroup
T@"SORealmSettingManager",&,N,V_settingsManager
TB,N,V_requestStarted
TB,N,V_requestCancelled
T@"SOKerberosExtensionData",&,N,V_extensionData
T@"SOKerberosExtensionUserData",&,N,V_extensionUserData
T@"NSString",&,N,V_hostName
T@"NSString",&,N,V_servicePrincipalName
T@"NSString",&,N,V_serviceName
T@"NSString",&,N,V_password
T@"NSString",&,N,V_changedPassword
TB,N,V_userNameIsReadOnly
T@"NSData",&,N,V_certificateSerialNumber
T@"NSData",&,N,V_certificateIssuer
T@"NSString",&,N,V_certificateTokenID
T@"SOSiteCode",&,N,V_siteCode
TB,N,V_returnCredentialOnly
T@"SOKerberosRealmSettings",R,N
T@"NSString",&,N,V_callerBundleIdentifier
T@"NSString",&,N,V_callerLocalizedName
TB,N,V_credsCameFromKeychain
TB,N,V_attemptedToGetCredsFromKeychain
TB,N,V_forceLoginViewController
T@"NSDate",&,N,V_loginTimeStamp
T@"NSObject<OS_dispatch_group>",&,N,V_siteCodeGroup
T@"SONetworkIdentity",&,N,V_networkIdentity
T@"NSData",R,N,V_auditToken
TB,R,N,V_isManagedApp
TB,N,V_smartCardNeedsInsert
setCompletion:
setBundleIdentifier:
bundleIdentifier
firstObject
base64EncodedStringWithOptions:
parseNetLoginUsingData:
numberWithShort:
completion
finish
main
_completion
_bundleIdentifier
T@?,C,V_completion
T@"NSString",&,N,V_bundleIdentifier
getBytes:length:
stringByAppendingString:
dataWithBytes:length:
setLifetime:
setUuid:
name
lifetime
uuid
_lifetime
_name
_uuid
T@"NSString",&,V_name
TI,V_lifetime
T@"NSString",&,V_uuid
retrieveSetting:forRealm:
unarchivedObjectOfClass:fromData:error:
archivedDataWithRootObject:requiringSecureCoding:error:
saveSetting:data:withError:
stringWithCredentialUseMode:
numberWithBool:
currentCredential
UUIDString
retrieveCacheEntry
createCacheEntryWithError:
appSSOKerberosCacheName
objectAtIndexedSubscript:
unarchivedObjectOfClasses:fromData:error:
decodeBoolForKey:
decodeIntegerForKey:
encodeBool:forKey:
encodeInteger:forKey:
setAppSSOKerberosCacheName:
retrieveCurrentSettingsForRealm:
retrieveAllCurrentSettings
deleteSettingsForRealm:error:
deleteAllSettings
T@"NSString",&
setCurrentCredential:
dictionaryRepresentation
_defaultRealm
_hosts
T@"NSString",R,N,V_realm
defaultRealm
TB,N,GisDefaultRealm,V_defaultRealm
T@"NSArray",&,N,V_hosts
T@"NSString",&,N
T@"NSUUID",&,N
triggerVPNIfNeededUsingRealm:bundleIdentifier:auditToken:
acquireCredentialForUUID:
determineNetworkFingerprint
retrieveCachedSiteCodeFromCacheForBundleIdentifier:networkFingerprint:
determineSiteCodeUsingContext:
findExistingCredentialUsingContext:returningCredential:orError:
initWithUUIDString:
setSiteCodeUsingContext:
createNewCredentialUsingContext:returningCredential:orError:
saveValuesForPlugins:
authenticate:toServer:returningToken:andError:
mapErrorToKnownError:
_determineSiteCodeUsingDispatchGroup:bundleIdentifier:auditTokenData:networkFingerprint:requireTLSForLDAP:
siteDiscoveryInProgress
setSiteDiscoveryInProgress:
smartcardLAContext
setSmartcardLAContext:
addObjectsFromArray:
createCredential:withOptions:andError:
acquireCredentialForUPN:
changePasswordForUPN:realm:withOldPassword:withNewPassword:withError:
localizedDescription
userInfo
numberWithLong:
isEqualToNumber:
initWithRealm:andSettingsManager:
attemptKerberosWithContext:returningToken:orError:
changePasswordWithContext:withError:
_siteDiscoveryInProgress
_smartcardLAContext
TB,V_siteDiscoveryInProgress
T@"LAContext",&,N,V_smartcardLAContext
auditTokenFromData:auditToken:
lastpath
setLastpath:
setNetworkFingerprint:
getVPNServerSignature:
stringWithUTF8String:
getInterfaceSignature:
appendBytes:length:
getInterfaceFingerprintForDynamicInterface:
stringWithCString:encoding:
enumerateKeysAndObjectsUsingBlock:
substringWithRange:
initForRealm:bundleIdentifier:auditToken:
setAuditToken:
_lastpath
T@"NSString",&,N,V_networkFingerprint
T@"NSObject<OS_nw_path>",&,N,V_lastpath
T@"NSData",&,N,V_auditToken
documentsDirectoryURLForFileName:
writeToURL:options:error:
dataWithContentsOfURL:options:error:
URLsForDirectory:inDomains:
URLByAppendingPathComponent:
createGSSName:gname:error:
regularExpressionWithPattern:options:error:
numberOfMatchesInString:options:range:
_testForUPNForUser:
componentsSeparatedByString:
hasPrefix:
initWithBytes:length:
validatePassword:forUser:
destroyAllCredentials
destroyCredential:
destroyCredentialForUPN:
listCredentials
setDelegateDispatchQueue:
setDelegate:
beginAuthorizationWithOperation:url:httpHeaders:httpBody:
allHeaderFields
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
authorizationDidNotHandle:
authorizationDidCancel:
authorizationDidComplete:
authorization:didCompleteWithHTTPAuthorizationHeaders:
authorization:didCompleteWithHTTPResponse:httpBody:
authorization:didCompleteWithError:
authorization:presentViewController:withCompletion:
beginAuthorizationWithOperation:url:httpHeaders:httpBody:andCompletion:
authorizationCompletion
setAuthorizationCompletion:
_authorization
_authorizationCompletion
T@?,C,V_authorizationCompletion
substringToIndex:
setState:
state
isReady
isCancelled
willChangeValueForKey:
didChangeValueForKey:
isFinished
isExecuting
isAsynchronous
start
_state
TQ,N,V_state
^{__SecIdentity=}32@0:8@16@24
i32@0:8^{__CFData=}16^^{__SecIdentity}24
B40@0:8@16@24@32
@40@0:8^{__CFData=}16^{__CFData=}24@32
@16@0:8
v16@0:8
v24@0:8@16
v40@0:8@16S24B28@32
v48@0:8@16S24@28B36@?40
v24@0:8@?16
v52@0:8@16i24@28@36@?44
v32@0:8@16@24
v32@0:8^{gss_cred_id_t_desc_struct=}16@24
B16@0:8
v20@0:8B16
@"NSObject<OS_ldap_connection>"
@24@0:8@16
@"NSMutableDictionary"
@"NSObject<OS_dispatch_queue>"
S16@0:8
v20@0:8S16
@"NSString"
@32@0:8q16@24
@28@0:8@16B24
v40@0:8@16@24@?32
@"NSOperationQueue"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8@16@24
d16@0:8
@"NSDate"
@"NSUUID"
@"NSData"
@"NSNumber"
@"NSMutableArray"
^{__SecIdentity=}24@0:8@16
i44@0:8@16@24@32B40
i40@0:8@16^@24^@32
i24@0:8@16
q16@0:8
v24@0:8q16
@"NSArray"
@"NSDictionary"
@40@0:8@16@24@32
@"SOKerberosExtensionData"
@"SOKerberosExtensionUserData"
@"SOSiteCode"
@"NSObject<OS_dispatch_group>"
@"SONetworkIdentity"
@"ASAuthorizationProviderExtensionAuthorizationRequest"
@"SORealmSettingManager"
@56@0:8@16@24S32@36B44@?48
@?16@0:8
I16@0:8
v20@0:8I16
@24@0:8q16
B24@0:8^@16
^{HeimCred_s=}16@0:8
^{HeimCred_s=}24@0:8^@16
^{HeimCred_s=}24@0:8@16
^{HeimCred_s=}32@0:8@16@24
@32@0:8@16^@24
B32@0:8@16^@24
B40@0:8@16@24^@32
Q40@0:8@16^@24^@32
v52@0:8@16@24@32@40B48
Q40@0:8@16^^{gss_cred_id_t_desc_struct}24^@32
Q24@0:8@16
v40@0:8@16@24@32
@"LAContext"
@24@0:8r*16
@"NSObject<OS_nw_path>"
B32@0:8@16@24
^{gss_cred_id_t_desc_struct=}24@0:8@16
B24@0:8@16
B56@0:8@16@24@32@40^@48
I40@0:8@16^^{gss_name_t_desc_struct}24^@32
^{gss_cred_id_t_desc_struct=}40@0:8@16@24^@32
B48@0:8^{gss_cred_id_t_desc_struct=}16@24^@32^@40
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"SOAuthorization"16
v32@0:8@"SOAuthorization"16@"NSDictionary"24
v40@0:8@"SOAuthorization"16@"NSHTTPURLResponse"24@"NSData"32
v32@0:8@"SOAuthorization"16@"NSError"24
v40@0:8@"SOAuthorization"16@"UIViewController"24@?<v@?B@"NSError">32
v56@0:8@16@24@32@40@?48
@"SOAuthorization"
v24@0:8Q16
