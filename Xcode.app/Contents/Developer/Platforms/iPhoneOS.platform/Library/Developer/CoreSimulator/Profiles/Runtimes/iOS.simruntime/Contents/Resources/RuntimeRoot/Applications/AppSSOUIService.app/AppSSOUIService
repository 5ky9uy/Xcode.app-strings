starting UI service
missing daemon XPC endpoint
%{public}@: XPC connection already exists
%{public}@: failed to create XPC connection
%{public}@: XPC connection invalidated
%{public}@: XPC connection interrupted
%{public}@: new XPC connection
Failed to connect to AppSSO daemon
AppSSO daemon XPC error: %{public}@
%s  on %@
%s extensionViewController = %{public}@ on %@
%s context: %{public}@ on %@
%s xpcEndpoint: %{public}@, requestInfo: %{sensitive, mask.hash}@ on %@
no daemon connection
loadedExtensionWithBundleIdentifer: extension = %{public}@
requestAuthorizationViewControllerWithCompletion: remoteViewController = %{public}@, error = %{public}@
beginAuthorizationWithRequestParameters: %{public}d, %{public}@
device screen is locked => authorization request not handled
device screen is locked => canceling authorization request
%s extension = %{public}@ on %@
%s extension = %@ on %@
%s %{public}@ on %@
%s extension viewController = %{public}@, hints = %{public}@ on %@
device screen is locked => cannot present extension view controller
timed out presenting extension view controller: %{public}@
%s credential: %{public}@, %{public}@ on %@
%@ did finish completion: success = %{public}@, error = %{public}@
v8@?0
com.apple.AppSSO
AppSSOUIService
com.apple.AppSSO.ui-queue
Failed to connect to AppSSO daemon
v16@?0@"NSError"8
SOUIDaemonConnection
SOInternalProtocols
Unable to find class %s
SOErrorHelper
-[SOUIServiceAppDelegate application:didFinishLaunchingWithOptions:]
-[SOUIServiceAppDelegate applicationWillResignActive:]
-[SOUIServiceAppDelegate applicationDidEnterBackground:]
-[SOUIServiceAppDelegate applicationWillEnterForeground:]
-[SOUIServiceAppDelegate applicationDidBecomeActive:]
-[SOUIServiceAppDelegate applicationWillTerminate:]
SOUIServiceAppDelegate
-[SOUIServiceViewController init]
-[SOUIServiceViewController viewWillAppear:]
-[SOUIServiceViewController viewDidAppear:]
-[SOUIServiceViewController viewWillDisappear:]
-[SOUIServiceViewController viewDidDisappear:]
-[SOUIServiceViewController prepareForActivationWithContext:completion:]
-[SOUIServiceViewController configureWithContext:completion:]
-[SOUIServiceViewController connectToDaemonWithXpcEndpoint:requestInfo:]
no requestInfo for UI service
extensionBundleIdentifier
httpHeaders
httpBody
realm
extensionData
callerBundleIdentifier
auditTokenData
requestedOperation
authorizationOptions
useInternalExtensions
cfNetworkInterception
callerManaged
callerTeamIdentifier
localizedCallerDisplayName
enableUserInteraction
impersonationBundleIdentifier
screenLockedBehavior
No active AppSSO IdP extension
v20@?0B8@"NSError"12
v24@?0@"SORemoteExtensionViewController"8@"NSError"16
-[SOUIServiceViewController viewDidLoad]
-[SOUIServiceViewController _dismiss]
-[SOUIServiceViewController _extensionCleanup]
-[SOUIServiceViewController _cancelAuthorization]
v24@?0@"SOAuthorizationCredential"8@"NSError"16
-[SOUIServiceViewController handleButtonActions:]
-[SOUIServiceViewController presentAuthorizationViewControllerWithHints:completion:]
presentation of authorization view controller was denied because the device screen is locked
no extension authorization view controller
extension authorization view controller already presented
timed out presenting extension view controller
v16@?0@"NSTimer"8
-[SOUIServiceViewController authorizationDidCompleteWithCredential:error:]
-[SOUIServiceViewController viewControllerDidCancel:]
-[SOUIServiceViewController viewServiceDidTerminateWithError:]
connection to extension interrupted
-[SOUIServiceViewController finishAuthorizationWithCompletion:]
-[SOUIServiceViewController extensionCleanupWithCompletion:]
SOUIServiceViewController
init
xpcDaemonEndpoint
_connectToDaemon
xpcConnection
_setEndpoint:
initWithListenerEndpoint:
setXpcConnection:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
finishAuthorizationWithCompletion:
extensionCleanupWithCompletion:
interfaceWithInternalProtocol:
setExportedInterface:
setExportedObject:
authorizationDidCompleteWithCredential:error:completion:
setRemoteObjectInterface:
setInvalidationHandler:
setInterruptionHandler:
_queue
_setQueue:
resume
internalErrorWithMessage:
synchronousRemoteObjectProxyWithErrorHandler:
initWithViewController:
.cxx_destruct
_viewController
_xpcConnection
T@"NSXPCConnection",&,V_xpcConnection
sharedInstance
unloadExtensions
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handlerForIntent:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
applicationShouldAutomaticallyLocalizeKeyCommands:
window
setWindow:
T@"UIWindow",&,N
_window
T@"UIWindow",&,N,V_window
viewWillAppear:
viewDidAppear:
viewWillDisappear:
viewDidDisappear:
_cancelAuthorization
_checkScreenLockStatus
xpcEndpoint
userInfo
connectToDaemonWithXpcEndpoint:requestInfo:
_remoteViewControllerProxy
setDesiredHardwareButtonEvents:
setDismissalAnimationStyle:
setAllowsAlertStacking:
view
windowScene
interfaceOrientation
setLaunchingInterfaceOrientation:
configureWithContext:completion:
parameterErrorWithMessage:
authorizationDidCompleteWithCredential:error:
valueForKey:
URLWithString:
boolValue
integerValue
loadInternalExtension
loadExtensionWithBundleIdentifier:
localizedExtensionDisplayName
setExtensionDelegate:
setUrl:
setHttpHeaders:
setHttpBody:
setRealm:
setExtensionData:
setCallerBundleIdentifier:
setRequestedOperation:
setAuthorizationOptions:
setCfNetworkInterception:
setCallerManaged:
setCallerTeamIdentifier:
setLocalizedCallerDisplayName:
setAuditTokenData:
setEnableUserInteraction:
setImpersonationBundleIdentifier:
setDelegate:
beginAuthorizationWithRequestParameters:completion:
requestAuthorizationViewControllerWithCompletion:
viewDidLoad
clearColor
setBackgroundColor:
setHidden:
errorWithCode:
dismiss
dismissViewControllerAnimated:completion:
unload
cancelAuthorizationWithCompletion:
errorWithCode:subcode:message:
childViewControllers
lastObject
initWithExtensionViewController:hints:
timerWithTimeInterval:repeats:block:
mainRunLoop
addTimer:forMode:
invalidate
presentViewController:animated:completion:
_dismiss
errorWithCode:message:
_extensionCleanup
presentAuthorizationViewControllerWithHints:completion:
requestReauthenticationWithCompletion:
viewControllerDidCancel:
viewServiceDidTerminateWithError:
shouldAutorotate
supportedInterfaceOrientations
prepareForActivationWithContext:completion:
_preferredStatusBarVisibility
preferredStatusBarStyle
idleTimerDisable:
handleButtonActions:
setXpcDaemonEndpoint:
_daemonConnection
_extension
_extensionViewController
_screenLockedBehavior
_xpcDaemonEndpoint
T@"NSObject<OS_xpc_object>",&,N,V_xpcDaemonEndpoint
currentDevice
userInterfaceIdiom
SOUIServiceProtocol
NSObject
SODaemonUIProtocol
SOUIDaemonConnection
SOUIServiceAppDelegate
UIApplicationDelegate
SOUIServiceViewController
SOExtensionDelegate
SOUIAuthorizationViewControllerDelegate
SORemoteExtensionViewControllerDelegate
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v24@0:8@?<v@?B@"NSError">16
v40@0:8@16@24@?32
v40@0:8@"SOAuthorizationCredential"16@"NSError"24@?<v@?B@"NSError">32
@24@0:8@16
v24@0:8@16
v16@0:8
@"SOUIServiceViewController"
@"NSXPCConnection"
B32@0:8@16@24
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@16@24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v32@0:8@16@?24
@32@0:8@16@24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
B24@0:8@"UIApplication"16
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
@"UIWindow"
v32@0:8@"SOAuthorizationCredential"16@"NSError"24
v32@0:8@"NSDictionary"16@?<v@?B@"NSError">24
v24@0:8@?<v@?Q>16
v24@0:8@"SOUIAuthorizationViewController"16
v24@0:8@"NSError"16
v20@0:8B16
i16@0:8
q16@0:8
@"SOUIDaemonConnection"
@"SOExtension"
@"SORemoteExtensionViewController"
@"NSObject<OS_xpc_object>"
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.accessibility.AXSBServer.assertions</key>
<true/>
<key>com.apple.private.hid.client.service-protected</key>
<true/>
<key>com.apple.private.security.container-required</key>
<true/>
<key>com.apple.security.exception.iokit-user-client-class</key>
<array>
<string>RootDomainUserClient</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.springboard.services</string>
<string>com.apple.accessibility.AXSpringBoardServer</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.AppSSO</string>
</array>
<key>platform-application</key>
<true/>
</dict>
</plist>
starting UI service
missing daemon XPC endpoint
%{public}@: XPC connection already exists
%{public}@: failed to create XPC connection
%{public}@: XPC connection invalidated
%{public}@: XPC connection interrupted
%{public}@: new XPC connection
Failed to connect to AppSSO daemon
AppSSO daemon XPC error: %{public}@
%s  on %@
%s extensionViewController = %{public}@ on %@
%s context: %{public}@ on %@
%s xpcEndpoint: %{public}@, requestInfo: %{sensitive, mask.hash}@ on %@
no daemon connection
loadedExtensionWithBundleIdentifer: extension = %{public}@
requestAuthorizationViewControllerWithCompletion: remoteViewController = %{public}@, error = %{public}@
beginAuthorizationWithRequestParameters: %{public}d, %{public}@
device screen is locked => authorization request not handled
device screen is locked => canceling authorization request
%s extension = %{public}@ on %@
%s extension = %@ on %@
%s %{public}@ on %@
%s extension viewController = %{public}@, hints = %{public}@ on %@
device screen is locked => cannot present extension view controller
timed out presenting extension view controller: %{public}@
%s credential: %{public}@, %{public}@ on %@
%@ did finish completion: success = %{public}@, error = %{public}@
v8@?0
com.apple.AppSSO
AppSSOUIService
com.apple.AppSSO.ui-queue
Failed to connect to AppSSO daemon
v16@?0@"NSError"8
SOUIDaemonConnection
SOInternalProtocols
Unable to find class %s
SOErrorHelper
-[SOUIServiceAppDelegate application:didFinishLaunchingWithOptions:]
-[SOUIServiceAppDelegate applicationWillResignActive:]
-[SOUIServiceAppDelegate applicationDidEnterBackground:]
-[SOUIServiceAppDelegate applicationWillEnterForeground:]
-[SOUIServiceAppDelegate applicationDidBecomeActive:]
-[SOUIServiceAppDelegate applicationWillTerminate:]
SOUIServiceAppDelegate
-[SOUIServiceViewController init]
-[SOUIServiceViewController viewWillAppear:]
-[SOUIServiceViewController viewDidAppear:]
-[SOUIServiceViewController viewWillDisappear:]
-[SOUIServiceViewController viewDidDisappear:]
-[SOUIServiceViewController prepareForActivationWithContext:completion:]
-[SOUIServiceViewController configureWithContext:completion:]
-[SOUIServiceViewController connectToDaemonWithXpcEndpoint:requestInfo:]
no requestInfo for UI service
extensionBundleIdentifier
httpHeaders
httpBody
realm
extensionData
callerBundleIdentifier
auditTokenData
requestedOperation
authorizationOptions
useInternalExtensions
cfNetworkInterception
callerManaged
callerTeamIdentifier
localizedCallerDisplayName
enableUserInteraction
impersonationBundleIdentifier
screenLockedBehavior
No active AppSSO IdP extension
v20@?0B8@"NSError"12
v24@?0@"SORemoteExtensionViewController"8@"NSError"16
-[SOUIServiceViewController viewDidLoad]
-[SOUIServiceViewController _dismiss]
-[SOUIServiceViewController _extensionCleanup]
-[SOUIServiceViewController _cancelAuthorization]
v24@?0@"SOAuthorizationCredential"8@"NSError"16
-[SOUIServiceViewController handleButtonActions:]
-[SOUIServiceViewController presentAuthorizationViewControllerWithHints:completion:]
presentation of authorization view controller was denied because the device screen is locked
no extension authorization view controller
extension authorization view controller already presented
timed out presenting extension view controller
v16@?0@"NSTimer"8
-[SOUIServiceViewController authorizationDidCompleteWithCredential:error:]
-[SOUIServiceViewController viewControllerDidCancel:]
-[SOUIServiceViewController viewServiceDidTerminateWithError:]
connection to extension interrupted
-[SOUIServiceViewController finishAuthorizationWithCompletion:]
-[SOUIServiceViewController extensionCleanupWithCompletion:]
SOUIServiceViewController
setRealm:
interfaceWithInternalProtocol:
errorWithCode:
loadExtensionWithBundleIdentifier:
invalidate
setEnableUserInteraction:
_remoteViewControllerProxy
boolValue
presentViewController:animated:completion:
setInvalidationHandler:
setExportedObject:
clearColor
localizedExtensionDisplayName
setAllowsAlertStacking:
sharedInstance
view
setHttpHeaders:
setExtensionDelegate:
setCallerManaged:
errorWithCode:subcode:message:
xpcEndpoint
setAuthorizationOptions:
userInfo
dismissViewControllerAnimated:completion:
_setQueue:
setRequestedOperation:
setLocalizedCallerDisplayName:
childViewControllers
currentDevice
setDismissalAnimationStyle:
beginAuthorizationWithRequestParameters:completion:
windowScene
valueForKey:
parameterErrorWithMessage:
interfaceOrientation
resume
errorWithCode:message:
URLWithString:
setHttpBody:
setInterruptionHandler:
initWithListenerEndpoint:
setExportedInterface:
integerValue
setCfNetworkInterception:
setCallerBundleIdentifier:
loadInternalExtension
internalErrorWithMessage:
mainRunLoop
setRemoteObjectInterface:
setAuditTokenData:
lastObject
_setEndpoint:
unloadExtensions
setDesiredHardwareButtonEvents:
cancelAuthorizationWithCompletion:
initWithExtensionViewController:hints:
addTimer:forMode:
unload
setExtensionData:
synchronousRemoteObjectProxyWithErrorHandler:
setLaunchingInterfaceOrientation:
userInterfaceIdiom
dismiss
setBackgroundColor:
setUrl:
setCallerTeamIdentifier:
setHidden:
setDelegate:
setImpersonationBundleIdentifier:
timerWithTimeInterval:repeats:block:
requestAuthorizationViewControllerWithCompletion:
init
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
finishAuthorizationWithCompletion:
extensionCleanupWithCompletion:
authorizationDidCompleteWithCredential:error:completion:
_queue
initWithViewController:
_connectToDaemon
xpcConnection
setXpcConnection:
.cxx_destruct
_viewController
_xpcConnection
T@"NSXPCConnection",&,V_xpcConnection
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handlerForIntent:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
applicationShouldAutomaticallyLocalizeKeyCommands:
window
setWindow:
T@"UIWindow",&,N
_window
T@"UIWindow",&,N,V_window
viewWillAppear:
viewDidAppear:
viewWillDisappear:
viewDidDisappear:
configureWithContext:completion:
viewDidLoad
authorizationDidCompleteWithCredential:error:
presentAuthorizationViewControllerWithHints:completion:
requestReauthenticationWithCompletion:
viewControllerDidCancel:
viewServiceDidTerminateWithError:
shouldAutorotate
supportedInterfaceOrientations
prepareForActivationWithContext:completion:
connectToDaemonWithXpcEndpoint:requestInfo:
_preferredStatusBarVisibility
preferredStatusBarStyle
idleTimerDisable:
_checkScreenLockStatus
_dismiss
_extensionCleanup
_cancelAuthorization
handleButtonActions:
xpcDaemonEndpoint
setXpcDaemonEndpoint:
_daemonConnection
_extension
_extensionViewController
_screenLockedBehavior
_xpcDaemonEndpoint
T@"NSObject<OS_xpc_object>",&,N,V_xpcDaemonEndpoint
SOUIServiceProtocol
NSObject
SODaemonUIProtocol
SOUIDaemonConnection
SOUIServiceAppDelegate
UIApplicationDelegate
SOUIServiceViewController
SOExtensionDelegate
SOUIAuthorizationViewControllerDelegate
SORemoteExtensionViewControllerDelegate
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v24@0:8@?<v@?B@"NSError">16
v40@0:8@16@24@?32
v40@0:8@"SOAuthorizationCredential"16@"NSError"24@?<v@?B@"NSError">32
@24@0:8@16
v24@0:8@16
v16@0:8
@"SOUIServiceViewController"
@"NSXPCConnection"
B32@0:8@16@24
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@16@24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v32@0:8@16@?24
@32@0:8@16@24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
B24@0:8@"UIApplication"16
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
@"UIWindow"
v32@0:8@"SOAuthorizationCredential"16@"NSError"24
v32@0:8@"NSDictionary"16@?<v@?B@"NSError">24
v24@0:8@?<v@?Q>16
v24@0:8@"SOUIAuthorizationViewController"16
v24@0:8@"NSError"16
v20@0:8B16
i16@0:8
q16@0:8
@"SOUIDaemonConnection"
@"SOExtension"
@"SORemoteExtensionViewController"
@"NSObject<OS_xpc_object>"
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.accessibility.AXSBServer.assertions</key>
<true/>
<key>com.apple.private.hid.client.service-protected</key>
<true/>
<key>com.apple.private.security.container-required</key>
<true/>
<key>com.apple.security.exception.iokit-user-client-class</key>
<array>
<string>RootDomainUserClient</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.springboard.services</string>
<string>com.apple.accessibility.AXSpringBoardServer</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.AppSSO</string>
</array>
<key>platform-application</key>
<true/>
</dict>
</plist>
