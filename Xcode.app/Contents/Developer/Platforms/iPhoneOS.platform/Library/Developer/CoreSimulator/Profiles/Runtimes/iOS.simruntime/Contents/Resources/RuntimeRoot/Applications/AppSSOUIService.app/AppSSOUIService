init
_connectToDaemon
xpcConnection
_setEndpoint:
initWithListenerEndpoint:
setXpcConnection:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
authorizationDidCompleteWithCredential:error:
interfaceWithInternalProtocol:
setRemoteObjectInterface:
setInvalidationHandler:
setInterruptionHandler:
_setQueue:
resume
synchronousRemoteObjectProxyWithErrorHandler:
initWithListenerEndpoint:queue:
.cxx_destruct
_queue
_endpoint
_xpcConnection
sharedInstance
unloadExtensions
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
window
setWindow:
_window
viewWillAppear:
_remoteViewControllerProxy
setDesiredHardwareButtonEvents:
setDismissalAnimationStyle:
setAllowsAlertStacking:
viewDidAppear:
viewWillDisappear:
viewDidDisappear:
currentDevice
userInterfaceIdiom
xpcEndpoint
userInfo
valueForKey:
URLWithString:
boolValue
loadInternalExtension
loadExtensionWithBundleIdentifier:
localizedExtensionDisplayName
internalErrorWithMessage:
configureWithContext:completion:
setExtensionDelegate:
setUrl:
setHttpHeaders:
setHttpBody:
setRealm:
setExtensionData:
setCallerBundleIdentifier:
setRequestedOperation:
setAuthorizationOptions:
beginAuthorizationWithRequestParameters:completion:
requestAuthorizationViewControllerWithCompletion:
viewDidLoad
clearColor
view
setBackgroundColor:
setHidden:
dismiss
dismissViewControllerAnimated:completion:
unload
cancelAuthorizationWithCompletion:
_cancelAuthorization
childViewControllers
lastObject
initWithExtensionViewController:hints:
setDelegate:
presentViewController:animated:completion:
_dismiss
_extensionCleanup
presentAuthorizationViewControllerWithHints:completion:
viewControllerDidCancel:
supportedInterfaceOrientations
prefersStatusBarHidden
preferredStatusBarStyle
idleTimerDisable:
handleButtonActions:
_daemonConnection
_extension
_extensionViewController
missing XPC endpoint
%{public}@: XPC connection already exists
%{public}@: failed to create XPC connection
%{public}@: XPC connection invalidated
%{public}@: XPC connection interrupted
%{public}@: new XPC connection
Failed to connect to AppSSO daemon
AppSSO daemon XPC error: %{public}@
%s  on %@
%s context: %{public}@ on %@
loadedExtensionWithBundleIdentifer: extension = %{public}@
requestAuthorizationViewControllerWithCompletion: remoteViewController = %{public}@, error = %{public}@
beginAuthorizationWithRequestParameters: %{public}d, %{public}@
%s extension = %{public}@, extensionViewController = %{public}@ on %@
%s extension = %@ on %@
%s %{public}@ on %@
%s extension viewController = %{public}@, hints = %{public}@ on %@
%s credential: %{public}@, %{public}@ on %@
%s %@ on %@
SODaemonUIProtocol
NSObject
SOUIDaemonConnection
SOUIServiceAppDelegate
UIApplicationDelegate
SOUIServiceViewController
SOExtensionDelegate
SOUIAuthorizationViewControllerDelegate
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v32@0:8@"SOAuthorizationCredential"16@"NSError"24
@32@0:8@16@24
v16@0:8
v24@0:8@16
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_xpc_object>"
@"NSXPCConnection"
B32@0:8@16@24
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
v32@0:8@16@?24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
@"UIWindow"
v32@0:8@"NSDictionary"16@?<v@?B@"NSError">24
v24@0:8@"SOUIAuthorizationViewController"16
v20@0:8B16
q16@0:8
@"SOUIDaemonConnection"
@"SOExtension"
@"SORemoteExtensionViewController"
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v8@?0
v16@?0@"NSError"8
xpcConnection
T@"NSXPCConnection",&,V_xpcConnection
com.apple.AppSSO
SOUIDaemonConnection
SOInternalProtocols
Unable to find class %s
/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
-[SOUIServiceAppDelegate application:didFinishLaunchingWithOptions:]
-[SOUIServiceAppDelegate applicationWillResignActive:]
-[SOUIServiceAppDelegate applicationDidEnterBackground:]
-[SOUIServiceAppDelegate applicationWillEnterForeground:]
-[SOUIServiceAppDelegate applicationDidBecomeActive:]
-[SOUIServiceAppDelegate applicationWillTerminate:]
window
T@"UIWindow",&,N
T@"UIWindow",&,N,V_window
SOUIServiceAppDelegate
com.apple.AppSSO.ui-queue
-[SOUIServiceViewController init]
-[SOUIServiceViewController viewWillAppear:]
-[SOUIServiceViewController viewDidAppear:]
-[SOUIServiceViewController viewWillDisappear:]
-[SOUIServiceViewController viewDidDisappear:]
-[SOUIServiceViewController configureWithContext:completion:]
extensionBundleIdentifier
httpHeaders
httpBody
realm
extensionData
callerBundleIdentifier
requestedOperation
authorizationOptions
useInternalExtensions
No active AppSSO IdP extension
v20@?0B8@"NSError"12
v24@?0@"SORemoteExtensionViewController"8@"NSError"16
-[SOUIServiceViewController viewDidLoad]
-[SOUIServiceViewController _dismiss]
-[SOUIServiceViewController _extensionCleanup]
-[SOUIServiceViewController _cancelAuthorization]
v24@?0@"SOAuthorizationCredential"8@"NSError"16
-[SOUIServiceViewController handleButtonActions:]
-[SOUIServiceViewController presentAuthorizationViewControllerWithHints:completion:]
No extension authorization view controller
Extension authorization view controller already presented
-[SOUIServiceViewController authorizationDidCompleteWithCredential:error:]
-[SOUIServiceViewController viewControllerDidCancel:]
SOUIServiceViewController
SOErrorHelper
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.accessibility.AXSBServer.assertions</key>
<true/>
<key>com.apple.private.hid.client.service-protected</key>
<true/>
<key>com.apple.private.security.container-required</key>
<true/>
<key>com.apple.security.exception.iokit-user-client-class</key>
<array>
<string>RootDomainUserClient</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.accessibility.AXSpringBoardServer</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.AppSSO</string>
</array>
<key>platform-application</key>
<true/>
</dict>
</plist>
