starting UI service
missing daemon XPC endpoint
%{public}@: XPC connection already exists
%{public}@: failed to create XPC connection
%{public}@: XPC connection invalidated
%{public}@: XPC connection interrupted
%{public}@: new XPC connection
Failed to connect to AppSSO daemon
AppSSO daemon XPC error: %{public}@
%s  on %@
%s extensionViewController = %{public}@ on %@
%s context: %{public}@ on %@
%s xpcEndpoint: %{public}@, requestInfo: %{sensitive, mask.hash}@ on %@
no daemon connection
loadedExtensionWithBundleIdentifer: extension = %{public}@
requestAuthorizationViewControllerWithCompletion: remoteViewController = %{public}@, error = %{public}@
beginAuthorizationWithRequestParameters: %{public}d, %{public}@
device screen is locked => authorization request not handled
device screen is locked => canceling authorization request
%s extension = %{public}@ on %@
%s extension = %@ on %@
%s %{public}@ on %@
%s extension viewController = %{public}@, hints = %{public}@ on %@
device screen is locked => cannot present extension view controller
timed out presenting extension view controller: %{public}@
%s credential: %{public}@, %{public}@ on %@
%@ did finish completion: success = %{public}@, error = %{public}@
v8@?0
com.apple.AppSSO
AppSSOUIService
com.apple.AppSSO.ui-queue
Failed to connect to AppSSO daemon
v16@?0@"NSError"8
SOUIDaemonConnection
SOInternalProtocols
Unable to find class %s
SOErrorHelper
-[SOUIServiceAppDelegate application:didFinishLaunchingWithOptions:]
-[SOUIServiceAppDelegate applicationWillResignActive:]
-[SOUIServiceAppDelegate applicationDidEnterBackground:]
-[SOUIServiceAppDelegate applicationWillEnterForeground:]
-[SOUIServiceAppDelegate applicationDidBecomeActive:]
-[SOUIServiceAppDelegate applicationWillTerminate:]
SOUIServiceAppDelegate
-[SOUIServiceViewController init]
-[SOUIServiceViewController viewWillAppear:]
-[SOUIServiceViewController viewDidAppear:]
-[SOUIServiceViewController viewWillDisappear:]
-[SOUIServiceViewController viewDidDisappear:]
-[SOUIServiceViewController prepareForActivationWithContext:completion:]
-[SOUIServiceViewController configureWithContext:completion:]
-[SOUIServiceViewController connectToDaemonWithXpcEndpoint:requestInfo:]
no requestInfo for UI service
extensionBundleIdentifier
httpHeaders
httpBody
realm
extensionData
callerBundleIdentifier
auditTokenData
requestedOperation
authorizationOptions
useInternalExtensions
cfNetworkInterception
callerManaged
callerTeamIdentifier
localizedCallerDisplayName
enableUserInteraction
impersonationBundleIdentifier
screenLockedBehavior
identifier
No active AppSSO IdP extension
v20@?0B8@"NSError"12
v24@?0@"SORemoteExtensionViewController"8@"NSError"16
-[SOUIServiceViewController viewDidLoad]
-[SOUIServiceViewController _dismiss]
-[SOUIServiceViewController _extensionCleanup]
-[SOUIServiceViewController _cancelAuthorization]
v24@?0@"SOAuthorizationCredential"8@"NSError"16
-[SOUIServiceViewController handleButtonActions:]
-[SOUIServiceViewController presentAuthorizationViewControllerWithHints:requestIdentifier:completion:]
presentation of authorization view controller was denied because the device screen is locked
no extension authorization view controller
extension authorization view controller already presented
timed out presenting extension view controller
v16@?0@"NSTimer"8
-[SOUIServiceViewController authorization:didCompleteWithCredential:error:]
-[SOUIServiceViewController viewControllerDidCancel:]
-[SOUIServiceViewController viewServiceDidTerminateWithError:]
connection to extension interrupted
-[SOUIServiceViewController finishAuthorization:completion:]
-[SOUIServiceViewController extensionCleanupWithCompletion:]
SOUIServiceViewController
_viewController
T#,R
applicationWillEnterForeground:
T@"NSString",R,C
dismiss
T@"UIWindow",&,N
finishAuthorization:completion:
TQ,R
release
_cancelAuthorization
setHttpHeaders:
_connectToDaemon
viewWillAppear:
.cxx_destruct
_window
T@"NSObject<OS_xpc_object>",&,N,V_xpcDaemonEndpoint
cancelAuthorization:completion:
T@"NSXPCConnection",&,V_xpcConnection
extensionCleanupWithCompletion:
T@"UIWindow",&,N,V_window
isProxy
URLWithString:
setDesiredHardwareButtonEvents:
_checkScreenLockStatus
setUrl:
_daemonConnection
_dismiss
_extension
_extensionCleanup
_extensionViewController
_preferredStatusBarVisibility
_queue
_remoteViewControllerProxy
_requestThatPresentedViewController
_screenLockedBehavior
_setEndpoint:
_setQueue:
_xpcConnection
_xpcDaemonEndpoint
addTimer:forMode:
application:configurationForConnectingSceneSession:options:
application:continueUserActivity:restorationHandler:
application:didChangeStatusBarFrame:
application:didChangeStatusBarOrientation:
application:didDecodeRestorableStateWithCoder:
application:didDiscardSceneSessions:
application:didFailToContinueUserActivityWithType:error:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didFinishLaunchingWithOptions:
application:didReceiveLocalNotification:
application:didReceiveRemoteNotification:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didRegisterUserNotificationSettings:
application:didUpdateUserActivity:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleIntent:completionHandler:
application:handleOpenURL:
application:handleWatchKitExtensionRequest:reply:
application:handlerForIntent:
application:openURL:options:
application:openURL:sourceApplication:annotation:
application:performActionForShortcutItem:completionHandler:
application:performFetchWithCompletionHandler:
application:shouldAllowExtensionPointIdentifier:
application:shouldRestoreApplicationState:
application:shouldRestoreSecureApplicationState:
application:shouldSaveApplicationState:
application:shouldSaveSecureApplicationState:
application:supportedInterfaceOrientationsForWindow:
application:userDidAcceptCloudKitShareWithMetadata:
application:viewControllerWithRestorationIdentifierPath:coder:
application:willChangeStatusBarFrame:
application:willChangeStatusBarOrientation:duration:
application:willContinueUserActivityWithType:
application:willEncodeRestorableStateWithCoder:
application:willFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationDidEnterBackground:
applicationDidFinishLaunching:
applicationDidReceiveMemoryWarning:
applicationProtectedDataDidBecomeAvailable:
applicationProtectedDataWillBecomeUnavailable:
applicationShouldAutomaticallyLocalizeKeyCommands:
applicationShouldRequestHealthAuthorization:
applicationSignificantTimeChange:
applicationWillResignActive:
applicationWillTerminate:
authorization:didCompleteWithCredential:error:
authorizationDidCompleteWithCredential:error:completion:
autorelease
beginAuthorizationWithRequestParameters:completion:
boolValue
childViewControllers
class
clearColor
configureWithContext:completion:
conformsToProtocol:
connectToDaemonWithXpcEndpoint:requestInfo:
currentDevice
debugDescription
description
dismissViewControllerAnimated:completion:
errorWithCode:
errorWithCode:message:
errorWithCode:subcode:message:
handleButtonActions:
hash
identifier
idleTimerDisable:
init
initWithExtensionViewController:hints:
initWithListenerEndpoint:
initWithViewController:
integerValue
interfaceOrientation
interfaceWithInternalProtocol:
internalErrorWithMessage:
invalidate
isEqual:
isKindOfClass:
isMemberOfClass:
lastObject
loadExtensionWithBundleIdentifier:
loadInternalExtension
localizedExtensionDisplayName
mainRunLoop
parameterErrorWithMessage:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
preferredStatusBarStyle
prepareForActivationWithContext:completion:
presentAuthorizationViewControllerWithHints:requestIdentifier:completion:
presentViewController:animated:completion:
requestAuthorizationViewControllerWithCompletion:
requestReauthenticationWithCompletion:
respondsToSelector:
resume
retain
retainCount
saveDelegate:forRequestIdentifier:
self
setAllowsAlertStacking:
setAuditTokenData:
setAuthorizationOptions:
setBackgroundColor:
setCallerBundleIdentifier:
setCallerManaged:
setCallerTeamIdentifier:
setCfNetworkInterception:
setDelegate:
setDismissalAnimationStyle:
setEnableUserInteraction:
setExportedInterface:
setExportedObject:
setExtensionData:
setHidden:
setHttpBody:
setIdentifier:
setImpersonationBundleIdentifier:
setInterruptionHandler:
setInvalidationHandler:
setLaunchingInterfaceOrientation:
setLocalizedCallerDisplayName:
setRealm:
setRemoteObjectInterface:
setRequestedOperation:
setWindow:
setXpcConnection:
setXpcDaemonEndpoint:
sharedInstance
shouldAutorotate
superclass
supportedInterfaceOrientations
synchronousRemoteObjectProxyWithErrorHandler:
timerWithTimeInterval:repeats:block:
unload
unloadExtensions
userInfo
userInterfaceIdiom
valueForKey:
view
viewControllerDidCancel:
viewDidAppear:
viewDidDisappear:
viewDidLoad
viewServiceDidTerminateWithError:
viewWillDisappear:
window
windowScene
xpcConnection
xpcDaemonEndpoint
xpcEndpoint
zone
SOUIServiceProtocol
NSObject
SODaemonUIProtocol
SOUIDaemonConnection
SOUIServiceAppDelegate
UIApplicationDelegate
SOUIServiceViewController
SOExtensionDelegate
SOUIAuthorizationViewControllerDelegate
SORemoteExtensionViewControllerDelegate
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v24@0:8@?16
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v40@0:8@16@24@?32
v40@0:8@"SOAuthorizationCredential"16@"NSError"24@?<v@?B@"NSError">32
@24@0:8@16
v24@0:8@16
v16@0:8
@"SOUIServiceViewController"
@"NSXPCConnection"
B32@0:8@16@24
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@16@24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
@32@0:8@16@24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
B24@0:8@"UIApplication"16
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
@"UIWindow"
v40@0:8@"NSString"16@"SOAuthorizationCredential"24@"NSError"32
v40@0:8@"NSDictionary"16@"NSString"24@?<v@?B@"NSError">32
v24@0:8@?<v@?Q>16
v24@0:8@"SOUIAuthorizationViewController"16
v24@0:8@"NSError"16
v20@0:8B16
i16@0:8
q16@0:8
@"SOUIDaemonConnection"
@"SOExtension"
@"SORemoteExtensionViewController"
@"NSString"
@"NSObject<OS_xpc_object>"
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.accessibility.AXSBServer.assertions</key>
<true/>
<key>com.apple.private.hid.client.service-protected</key>
<true/>
<key>com.apple.private.security.container-required</key>
<true/>
<key>com.apple.security.exception.iokit-user-client-class</key>
<array>
<string>RootDomainUserClient</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.springboard.services</string>
<string>com.apple.accessibility.AXSpringBoardServer</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.AppSSO</string>
</array>
<key>platform-application</key>
<true/>
</dict>
</plist>
0(#com.apple.UIKit.vends-view-services
02-com.apple.accessibility.AXSBServer.assertions
03.com.apple.private.hid.client.service-protected
02-com.apple.private.security.container-required
0N4com.apple.security.exception.iokit-user-client-class0
RootDomainUserClient0
4com.apple.security.exception.mach-lookup.global-name0M
com.apple.springboard.services+com.apple.accessibility.AXSpringBoardServer0N8com.apple.security.exception.shared-preference.read-only0
com.apple.AppSSO0
platform-application
starting UI service
missing daemon XPC endpoint
%{public}@: XPC connection already exists
%{public}@: failed to create XPC connection
%{public}@: XPC connection invalidated
%{public}@: XPC connection interrupted
%{public}@: new XPC connection
Failed to connect to AppSSO daemon
AppSSO daemon XPC error: %{public}@
%s  on %@
%s extensionViewController = %{public}@ on %@
%s context: %{public}@ on %@
%s xpcEndpoint: %{public}@, requestInfo: %{sensitive, mask.hash}@ on %@
no daemon connection
loadedExtensionWithBundleIdentifer: extension = %{public}@
requestAuthorizationViewControllerWithCompletion: remoteViewController = %{public}@, error = %{public}@
beginAuthorizationWithRequestParameters: %{public}d, %{public}@
device screen is locked => authorization request not handled
device screen is locked => canceling authorization request
%s extension = %{public}@ on %@
%s extension = %@ on %@
%s %{public}@ on %@
%s extension viewController = %{public}@, hints = %{public}@ on %@
device screen is locked => cannot present extension view controller
timed out presenting extension view controller: %{public}@
%s credential: %{public}@, %{public}@ on %@
%@ did finish completion: success = %{public}@, error = %{public}@
v8@?0
com.apple.AppSSO
AppSSOUIService
com.apple.AppSSO.ui-queue
Failed to connect to AppSSO daemon
v16@?0@"NSError"8
SOUIDaemonConnection
SOInternalProtocols
Unable to find class %s
SOErrorHelper
-[SOUIServiceAppDelegate application:didFinishLaunchingWithOptions:]
-[SOUIServiceAppDelegate applicationWillResignActive:]
-[SOUIServiceAppDelegate applicationDidEnterBackground:]
-[SOUIServiceAppDelegate applicationWillEnterForeground:]
-[SOUIServiceAppDelegate applicationDidBecomeActive:]
-[SOUIServiceAppDelegate applicationWillTerminate:]
SOUIServiceAppDelegate
-[SOUIServiceViewController init]
-[SOUIServiceViewController viewWillAppear:]
-[SOUIServiceViewController viewDidAppear:]
-[SOUIServiceViewController viewWillDisappear:]
-[SOUIServiceViewController viewDidDisappear:]
-[SOUIServiceViewController prepareForActivationWithContext:completion:]
-[SOUIServiceViewController configureWithContext:completion:]
-[SOUIServiceViewController connectToDaemonWithXpcEndpoint:requestInfo:]
no requestInfo for UI service
extensionBundleIdentifier
httpHeaders
httpBody
realm
extensionData
callerBundleIdentifier
auditTokenData
requestedOperation
authorizationOptions
useInternalExtensions
cfNetworkInterception
callerManaged
callerTeamIdentifier
localizedCallerDisplayName
enableUserInteraction
impersonationBundleIdentifier
screenLockedBehavior
identifier
No active AppSSO IdP extension
v20@?0B8@"NSError"12
v24@?0@"SORemoteExtensionViewController"8@"NSError"16
-[SOUIServiceViewController viewDidLoad]
-[SOUIServiceViewController _dismiss]
-[SOUIServiceViewController _extensionCleanup]
-[SOUIServiceViewController _cancelAuthorization]
v24@?0@"SOAuthorizationCredential"8@"NSError"16
-[SOUIServiceViewController handleButtonActions:]
-[SOUIServiceViewController presentAuthorizationViewControllerWithHints:requestIdentifier:completion:]
presentation of authorization view controller was denied because the device screen is locked
no extension authorization view controller
extension authorization view controller already presented
timed out presenting extension view controller
v16@?0@"NSTimer"8
-[SOUIServiceViewController authorization:didCompleteWithCredential:error:]
-[SOUIServiceViewController viewControllerDidCancel:]
-[SOUIServiceViewController viewServiceDidTerminateWithError:]
connection to extension interrupted
-[SOUIServiceViewController finishAuthorization:completion:]
-[SOUIServiceViewController extensionCleanupWithCompletion:]
SOUIServiceViewController
_viewController
T#,R
applicationWillEnterForeground:
T@"NSString",R,C
dismiss
T@"UIWindow",&,N
finishAuthorization:completion:
TQ,R
release
_cancelAuthorization
setHttpHeaders:
_connectToDaemon
viewWillAppear:
.cxx_destruct
_window
T@"NSObject<OS_xpc_object>",&,N,V_xpcDaemonEndpoint
cancelAuthorization:completion:
T@"NSXPCConnection",&,V_xpcConnection
extensionCleanupWithCompletion:
T@"UIWindow",&,N,V_window
isProxy
URLWithString:
setDesiredHardwareButtonEvents:
_checkScreenLockStatus
setUrl:
_daemonConnection
_dismiss
_extension
_extensionCleanup
_extensionViewController
_preferredStatusBarVisibility
_queue
_remoteViewControllerProxy
_requestThatPresentedViewController
_screenLockedBehavior
_setEndpoint:
_setQueue:
_xpcConnection
_xpcDaemonEndpoint
addTimer:forMode:
application:configurationForConnectingSceneSession:options:
application:continueUserActivity:restorationHandler:
application:didChangeStatusBarFrame:
application:didChangeStatusBarOrientation:
application:didDecodeRestorableStateWithCoder:
application:didDiscardSceneSessions:
application:didFailToContinueUserActivityWithType:error:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didFinishLaunchingWithOptions:
application:didReceiveLocalNotification:
application:didReceiveRemoteNotification:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didRegisterUserNotificationSettings:
application:didUpdateUserActivity:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleIntent:completionHandler:
application:handleOpenURL:
application:handleWatchKitExtensionRequest:reply:
application:handlerForIntent:
application:openURL:options:
application:openURL:sourceApplication:annotation:
application:performActionForShortcutItem:completionHandler:
application:performFetchWithCompletionHandler:
application:shouldAllowExtensionPointIdentifier:
application:shouldRestoreApplicationState:
application:shouldRestoreSecureApplicationState:
application:shouldSaveApplicationState:
application:shouldSaveSecureApplicationState:
application:supportedInterfaceOrientationsForWindow:
application:userDidAcceptCloudKitShareWithMetadata:
application:viewControllerWithRestorationIdentifierPath:coder:
application:willChangeStatusBarFrame:
application:willChangeStatusBarOrientation:duration:
application:willContinueUserActivityWithType:
application:willEncodeRestorableStateWithCoder:
application:willFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationDidEnterBackground:
applicationDidFinishLaunching:
applicationDidReceiveMemoryWarning:
applicationProtectedDataDidBecomeAvailable:
applicationProtectedDataWillBecomeUnavailable:
applicationShouldAutomaticallyLocalizeKeyCommands:
applicationShouldRequestHealthAuthorization:
applicationSignificantTimeChange:
applicationWillResignActive:
applicationWillTerminate:
authorization:didCompleteWithCredential:error:
authorizationDidCompleteWithCredential:error:completion:
autorelease
beginAuthorizationWithRequestParameters:completion:
boolValue
childViewControllers
class
clearColor
configureWithContext:completion:
conformsToProtocol:
connectToDaemonWithXpcEndpoint:requestInfo:
currentDevice
debugDescription
description
dismissViewControllerAnimated:completion:
errorWithCode:
errorWithCode:message:
errorWithCode:subcode:message:
handleButtonActions:
hash
identifier
idleTimerDisable:
init
initWithExtensionViewController:hints:
initWithListenerEndpoint:
initWithViewController:
integerValue
interfaceOrientation
interfaceWithInternalProtocol:
internalErrorWithMessage:
invalidate
isEqual:
isKindOfClass:
isMemberOfClass:
lastObject
loadExtensionWithBundleIdentifier:
loadInternalExtension
localizedExtensionDisplayName
mainRunLoop
parameterErrorWithMessage:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
preferredStatusBarStyle
prepareForActivationWithContext:completion:
presentAuthorizationViewControllerWithHints:requestIdentifier:completion:
presentViewController:animated:completion:
requestAuthorizationViewControllerWithCompletion:
requestReauthenticationWithCompletion:
respondsToSelector:
resume
retain
retainCount
saveDelegate:forRequestIdentifier:
self
setAllowsAlertStacking:
setAuditTokenData:
setAuthorizationOptions:
setBackgroundColor:
setCallerBundleIdentifier:
setCallerManaged:
setCallerTeamIdentifier:
setCfNetworkInterception:
setDelegate:
setDismissalAnimationStyle:
setEnableUserInteraction:
setExportedInterface:
setExportedObject:
setExtensionData:
setHidden:
setHttpBody:
setIdentifier:
setImpersonationBundleIdentifier:
setInterruptionHandler:
setInvalidationHandler:
setLaunchingInterfaceOrientation:
setLocalizedCallerDisplayName:
setRealm:
setRemoteObjectInterface:
setRequestedOperation:
setWindow:
setXpcConnection:
setXpcDaemonEndpoint:
sharedInstance
shouldAutorotate
superclass
supportedInterfaceOrientations
synchronousRemoteObjectProxyWithErrorHandler:
timerWithTimeInterval:repeats:block:
unload
unloadExtensions
userInfo
userInterfaceIdiom
valueForKey:
view
viewControllerDidCancel:
viewDidAppear:
viewDidDisappear:
viewDidLoad
viewServiceDidTerminateWithError:
viewWillDisappear:
window
windowScene
xpcConnection
xpcDaemonEndpoint
xpcEndpoint
zone
SOUIServiceProtocol
NSObject
SODaemonUIProtocol
SOUIDaemonConnection
SOUIServiceAppDelegate
UIApplicationDelegate
SOUIServiceViewController
SOExtensionDelegate
SOUIAuthorizationViewControllerDelegate
SORemoteExtensionViewControllerDelegate
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v24@0:8@?16
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v40@0:8@16@24@?32
v40@0:8@"SOAuthorizationCredential"16@"NSError"24@?<v@?B@"NSError">32
@24@0:8@16
v24@0:8@16
v16@0:8
@"SOUIServiceViewController"
@"NSXPCConnection"
B32@0:8@16@24
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@16@24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
@32@0:8@16@24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
B24@0:8@"UIApplication"16
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
@"UIWindow"
v40@0:8@"NSString"16@"SOAuthorizationCredential"24@"NSError"32
v40@0:8@"NSDictionary"16@"NSString"24@?<v@?B@"NSError">32
v24@0:8@?<v@?Q>16
v24@0:8@"SOUIAuthorizationViewController"16
v24@0:8@"NSError"16
v20@0:8B16
i16@0:8
q16@0:8
@"SOUIDaemonConnection"
@"SOExtension"
@"SORemoteExtensionViewController"
@"NSString"
@"NSObject<OS_xpc_object>"
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.accessibility.AXSBServer.assertions</key>
<true/>
<key>com.apple.private.hid.client.service-protected</key>
<true/>
<key>com.apple.private.security.container-required</key>
<true/>
<key>com.apple.security.exception.iokit-user-client-class</key>
<array>
<string>RootDomainUserClient</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.springboard.services</string>
<string>com.apple.accessibility.AXSpringBoardServer</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.AppSSO</string>
</array>
<key>platform-application</key>
<true/>
</dict>
</plist>
0(#com.apple.UIKit.vends-view-services
02-com.apple.accessibility.AXSBServer.assertions
03.com.apple.private.hid.client.service-protected
02-com.apple.private.security.container-required
0N4com.apple.security.exception.iokit-user-client-class0
RootDomainUserClient0
4com.apple.security.exception.mach-lookup.global-name0M
com.apple.springboard.services+com.apple.accessibility.AXSpringBoardServer0N8com.apple.security.exception.shared-preference.read-only0
com.apple.AppSSO0
platform-application
