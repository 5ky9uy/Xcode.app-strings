com.apple.AuthenticationServices.AuthorizationError
ASAuthorizationAppleIDCredentialRevokedNotification
v24@?0q8@"NSError"16
ASAccountAuthenticationModificationServiceViewController
com.apple.SafariViewService
square.and.arrow.up
{square.and.arrow.up}
ASAuthorizationControllerContinueButton
v8@?0
AuthKit
WatchProxAuth
Sign Up Not Completed
Continue
v20@?0B8@"LAContext"12
v24@?0@"NSDictionary"8@"NSError"16
exclamationmark.circle
Continue with Passcode
Continue with Password
Done
Signing in
person.badge.key.fill
A more secure alternative to passwords for signing in to online accounts.
A passkey is a more secure sign-in method than a traditional password. Passkeys use iCloud to sync across your devices. @about-passkeys-link@
@about-passkeys-link@
v12@?0B8
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
credentialID
<%@: %p; isEnabled=%@; supportsIncrementalUpdates=%@>
@"ASCPlatformPublicKeyCredentialLoginChoice"16@?0@"_WKWebAuthenticationAssertionResponse"8
v16@?0@"_WKWebAuthenticationAssertionResponse"8
@"ASCSecurityKeyPublicKeyCredentialLoginChoice"16@?0@"_WKWebAuthenticationAssertionResponse"8
@"_WKPublicKeyCredentialRequestOptions"16@?0@"ASCPublicKeyCredentialAssertionOptions"8
https://
v24@?0@"_WKAuthenticatorAssertionResponse"8@"NSError"16
@"_WKPublicKeyCredentialParameters"16@?0@"NSNumber"8
@"_WKPublicKeyCredentialDescriptor"16@?0@"ASCPublicKeyCredentialDescriptor"8
v24@?0@"_WKAuthenticatorAttestationResponse"8@"NSError"16
@"NSNumber"16@?0@"NSString"8
Did not find a valid extension for request.
v24@?0@"NSExtension"8@"NSError"16
Did not find Account Authentication Modification extension.
v16@?0@"NSExtension"8
iCloud Keychain must be enabled to perform strong password upgrades.
Discovered extension %@ does not support strong password upgrades.
Calling process is not entitled
com.apple.AuthenticationServicesCore.AuthorizationErrorAlertQueue
Use Security Key
Save on Another Device
Sign In with Another Device
Other Options
Other Sign In Options
Manually enter password
B16@?0@"<ASCLoginChoiceProtocol>"8
v24@?0@"<ASCCredentialProtocol>"8@"NSError"16
Select an account to continue
rawClientDataJSON
baseCredential
rawAttestationObject
ASExtensionErrorDomain
ASExtensionLocalizedFailureReasonErrorKey
Sign In (Manual password entry view controller)
Enter a PIN to unlock your security key.
User
Password
AuthenticationServicesIncorrectPinEntryAnimation
DeviceClassNumber
Insert and activate your security key, or bring it near the top of your iPhone.
Insert and activate your security key.
transform
provideCredentialWithoutUserInteraction(for:)
-provideCredentialWithoutUserInteractionForIdentity:
CABLEQRCodeContentsColor
ASCredentialIdentityStoreErrorDomain
v20@?0B8@"NSError"12
v16@?0@"SFCredentialProviderExtensionState"8
algorithm
v16@?0@"NSError"8
state
access_token
id_token
v32@?0@"NSString"8@16^B24
<%@: %p, state: %@, accessToken: %@, identityToken: %@, authorizedScopes: %@, authenticatedResponse: %@, privateKeys: %@>
rawAuthenticatorData
userID
signature
v16@?0@"NSTimer"8
Make sure both devices are connected to the internet and have Bluetooth turned on.
full_name
email
<%@: %p { provider: %@ }>
<%@: %p { provider: %@, credential: %@ }>
v16@?0@"NSString"8
No view controller specified for request.
Unable to sign in
The operation could not be completed. Please try again.
apple-internal-install
(Internal only: %@)
v24@?0@"ASCAuthorizationPresentationContext"8@"NSError"16
Sign In
KeyIcon-60
ASAuthorizationAppleIDCredential.m
Invalid parameter not satisfying: %@
user
authorizedScopes
<%@: %p { userIdentifier: %@, authorizedScopes: %@ }>
_user
_state
_authorizedScopes
_authorizationCode
_identityToken
_email
_fullName
_realUserStatus
v16@?0@"<_ASAccountAuthenticationModificationExtensionContextProtocol>"8
Cannot request Sign in with Apple authorization in the middle of a strong password upgrade.
Couldn't get application record while fetching authorization.
application-identifier
Host view controller deallocated.
v24@?0@"AKAuthorization"8@"NSError"16
User tapped cancel on Sign in with Apple sheet.
EnableSFAppAccountAuthenticationModificationExtension
com.apple.AuthenticationServices.%@.%p
com.apple.AuthenticationServices.ReadOnly.%@.%p
v16@?0@"NSArray"8
v24@?0@"NSArray"8@"NSError"16
apple.com
com.apple.AuthenticationServices.WebAuthenticationSession
The provided scheme is not valid. A scheme should not include special characters such as ":" or "/".
v24@?0@"NSURL"8@"NSError"16
Cannot start ASWebAuthenticationSession without providing presentation context. Set presentationContextProvider before calling -start.
The UIWindowScene for the returned window was not in the foreground active state.
com.apple.
SFAuthenticationSession
Class getSFAuthenticationSessionClass(void)_block_invoke
ASWebAuthenticationSessionIOS.m
Unable to find class %s
void *SafariServicesLibrary(void)
transports
v32@?0@"<NSCopying>"8@"UIViewController"16@"NSError"24
Your iPad needs to connect to this device in order to save a passkey.
Your iPod touch needs to connect to this device in order to save a passkey.
Your iPhone needs to connect to this device in order to save a passkey.
Your iPad needs to connect to this device in order to sign in with a passkey.
Your iPod touch needs to connect to this device in order to sign in with a passkey.
Your iPhone needs to connect to this device in order to sign in with a passkey.
Your iPad needs to connect to this device in order to sign in with or save a passkey.
Your iPod touch needs to connect to this device in order to sign in with or save a passkey.
Your iPhone needs to connect to this device in order to sign in with or save a passkey.
v16@?0@"<_ASCredentialProviderExtensionContextProtocol>"8
com.apple.AuthenticationServices
AuthenticationSession
Authorization
CredentialProviderExtension
Keychain
Passkeys
AccountAuthenticationModificationExtension
No user name
iCloud Keychain
Synced across your Apple devices
Security key
Use an external security key
iPhone, iPad, or Android device
Save a passkey on a device with a camera
Use passkey from a device with a camera
Credential (%@)
For this app
For this website
qrcode.viewfinder
mediastick
circle
checkmark.circle.fill
v32@?0@"NSUUID"8@"UIViewController"16@"NSError"24
get-task-allow
ASCredentialServiceIdentifierValue
ASCredentialServiceIdentifierType
domain
<%@: %p; type=%@; identifier=%@>
@"ASCPublicKeyCredentialDescriptor"16@?0@"ASAuthorizationPlatformPublicKeyCredentialDescriptor"8
_UIViewServiceHostDidEnterBackgroundNotification
@16@?0@"NSDictionary"8
_WKLocalAuthenticatorCredentialUserHandleKey
preferred
required
discouraged
none
direct
indirect
enterprise
configuration_removed
direct_request
_type
_style
highlightFilter
inputColor
filters.highlightFilter.inputColor
Continue with Apple
Sign up with Apple
Sign in with Apple
void _ASAuthorizationButtonInitialize(ASAuthorizationAppleIDButton *__strong)
ASAuthorizationAppleIDButton.m
self
ASAuthorizationController.m
authorizationRequests.count
B16@?0@"ASAuthorizationRequest"8
Unexpected failure.
"%@" does not support AutoFill assistance.
v32@?0@"ASAuthorizationRequest"8Q16^B24
nonce
scope
v32@?0@"NSString"8Q16^B24
HTTP/1.1
Passkeys do not support attestation.
No algorithms specified for ASAuthorizationSecurityKeyPublicKeyCredentialRegistrationRequest.
All Public Key Credential requests must use the same relyingPartyIdentifier.
Proxy sheet overrides are only available for security key requests.
Found duplicate requests. Only one of each type of request is currently supported.
Registration requests cannot be used with other types of requests.
com.apple.AuthenticationServicesUI.AccountAuthenticationModificationExtensionHelper
Cannot start another Account Authentication Modification request until the current request finishes.
Received request is not a valid ASAccountAuthenticationModificationRequest subclass.
v24@?0@"UIViewController"8@"NSError"16
ASDebugASAccountAuthenticationModificationControllerUsesSafariViewService
v24@?0@"_ASAccountAuthenticationModificationRemoteViewController"8@"NSError"16
The new password will be saved to your iCloud Keychain and will AutoFill on all of your devices. You can view and remove saved passwords in Settings > Passwords, or by asking Siri.
Change to Strong Password
v16@?0@"UIAlertAction"8
Not Now
No presentation anchor provided to show strong password upgrade UI.
No presentation anchor provided to show extension UI.
convertAccountToSignInWithAppleWithoutUserInteractionForServiceIdentifier(for:existingCredential:userInfo:)
-convertAccountToSignInWithAppleWithoutUserInteractionForServiceIdentifier:existingCredential:userInfo:
prepareInterfaceToConvertAccountToSignInWithAppleForServiceIdentifier(serviceIdentifier:existingCredential:userInfo:)
-prepareInterfaceToConvertAccountToSignInWithAppleForServiceIdentifier:existingCredential:userInfo:
changePasswordWithoutUserInteraction(serviceIdentifier:credential:newPassword:userInfo:)
-changePasswordWithoutUserInteractionForServiceIdentifier:existingCredential:newPassword:userInfo:
prepareInterfaceToChangePasswordForServiceIdentifier(serviceIdentifier:credential:newPassword:userInfo:)
-prepareInterfaceToChangePasswordForServiceIdentifier:existingCredential:newPassword:userInfo:
Delete Password
Delete Passkey
Delete Verification Code
Delete Password (alert title)
Delete Verification Code (alert title)
Delete Passkey (alert title)
Delete Password and Passkey
Delete Passwords and Passkeys
Delete Passkeys
Delete Passwords
Before deleting this password, visit the associated website to turn off the verification code. Otherwise, you may no longer be able to sign in.
Before deleting these %zu passwords, visit the associated websites to turn off verification codes. Otherwise, you may no longer be able to sign in.
Delete
Delete %zu Passkeys
Delete %zu Passwords
@"ASCPublicKeyCredentialDescriptor"16@?0@"ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor"8
serviceIdentifier
recordIdentifier
rank
credentialIdentityStoreIdentifier
<%@: %p; user=%@; serviceIdentifier=%@>
@"NSNumber"16@?0@"ASAuthorizationPublicKeyCredentialParameters"8
Bluetooth Off
Turn on Bluetooth
To sign in to another device using a passkey, your iPad needs to have Bluetooth turned on.
To sign in to another device using a passkey, your iPod touch needs to have Bluetooth turned on.
To sign in to another device using a passkey, your iPhone needs to have Bluetooth turned on.
To save a passkey on another device, your iPad needs to have Bluetooth turned on.
To save a passkey on another device, your iPod touch needs to have Bluetooth turned on.
To save a passkey on another device, your iPhone needs to have Bluetooth turned on.
To save a passkey on another device, your Mac needs to have Bluetooth turned on.
To sign in with a passkey from another device, your iPad needs to have Bluetooth turned on.
To sign in with a passkey from another device, your iPod touch needs to have Bluetooth turned on.
To sign in with a passkey from another device, your iPhone needs to have Bluetooth turned on.
To sign in with a passkey from another device, your Mac needs to have Bluetooth turned on.
implicit
login
refresh
logout
.@333333
0@ffffff
*@333333
@ffffff
?333333
D@ffffff
@333333
Error enabling biometrics in credential picker: %{public}@
Biometric authentication not available. Falling back to passcode.
Passcode authentication in ASAuthorizationController credential picker failed with error: %{public}@
Asked to show biometric view without any biometrics available.
Error disabling biometrics UI: %{public}@
ASCredentialRequestConfirmButtonSubPane already in processing state, ignoring attempt.
Biometric auth failed or locked out. Switching to passcode authentication.
Biometric auth failed with error: %{public}@
Exclude credentials matched.
Dismissing operation %{public}@ with result %ld.
Operation for panel %p already dismissed.
Providing LAContext %p for operation %{public}@.
Requesting PIN for security key for operation %{public}@.
Received unexpected assertion options.
Assertion completed: %ld.
Assertion failed: %{public}@
Replacing error %{public}@ with %{public}@
Not requesting platform credentials.
Platform authenticator not available.
Passkey AutoFill request for invalid frame identifier: %{public}@
Asked to present caBLE for AutoFill operation %{public}@
Could not find operation.
Could not find assertion for identifier: %{public}@
Asked to cancel operation %{public}@, override error: %{public}@
Completion registration: %lu.
Creating panel %p for %{public}@.
Beginning operation %{public}@ for %{public}@.
Tearing down operation %{public}@.
Unexpectedly tried to read operation for unknown panel: %p
Unexpectedly tried to read operation for unknown UUID: %{public}@
Found unknown resident key preference: %ld
Ignoring unknown attestation preference "%{public}@"
Ignoring unknown user verification preference "%{public}@"
Failed to get bundle record for host application due to error: %{public}@
The caller is not entitled to coordinate account authentication modification extension requests
Deleted credential from Keychain after upgrading to Sign in with Apple.
Use Security Key button tapped but no security key login choice is available. Failing request.
Use caBLE button tapped but no caBLE login choice is available. Failing request.
Failed to get application name with error: %{public}@
authenticated for external password login choice but no credential is available
No credential provider extension available
Did not receive any external password credential because user canceled
Did not receive any external password credential because of error: %@
Biometric authentication in ASAuthorizationController credential picker failed.
Password authentication button pressed but selected login choice is not a Sign in with Apple login choice
Showing alert (%@) failed, user notification is nil!. Error: %d
Authentication provider tried to pop view controller but it was not the top view controller in the navigation stack
Asked to present unsupported error: %{public}@.
Class %{public}s must override %{public}s. Canceling extension request.
Class %{public}s's implementation of %{public}s should not call super. Canceling extension request.
Found credential of unexpected type: %{private}@
Rejecting update with no login choices.
Couldn't update interface because a new request view controller could not be created for the new login choices.
No request view controller specified for credential request.
Starting caBLE client: bluetoothEnabled: %{bool}d
Enabling Bluetooth
Starting caBLE authenticator: bluetoothEnabled: %{bool}d
Could not get bundle record to get icon for credential with error: %{public}@.
Could not get icon for password provider
Failed to get application record to revoke authorization with error: %{public}@
Authorization controller successfully revoked the upgrade authorization.
Authorization controller attempted to revoke upgrade authorization and failed with error: %@
Failed to get application record to request authorization due to error: %{public}@
Error when creating Sign in with Apple Authorization: %{public}@
Could not retrieve bundle identifier from %@
The provided scheme is not valid. A scheme should not include special characters such as ":" or "/".
Sending request direct to SSO extension.
%{public}@ Please adopt the new API as soon as possible (rdar://50384281).
Attempted to set ASNavigationItem on iOS. ASNavigationItem is UINavigationItem on iOS and is a readonly property.
Device does not support transport: %{public}@. Ignoring.
Could not get bundle record to fetch password manager name error: %{public}@.
Failed to get remote view controller: %{public}@
Extension would ordinarily be killed due to timeout, but is kept alive for debugging
Killing extension due to timeout during non-UI request
Extension requires user interaction - re-running with UI
Failed to export passkey (%{private}@): %@
Failed to import passkey: %{public}@
Timed out presenting SSO authorization view controller.
ASAuthorizationController credential request failed with error: %{public}@
Rejecting invalid requests.
Found request for unexpected type: %{private}@
Failed to find helper extension to perform Account Authentication Modification Extension requests with error %{public}@.
Failed to get remote view controller from helper extension: %{public}@
No presentation anchor provided to strong password upgrade UI.
No presentation anchor provided to show extension UI.
Refusing to send credential identity with store identifier [%{public}@] to to extension with store identifier [%{public}@]
Extension did not find a credential corresponding the identity. Invalidating the identity store.
Failed to remove credential identity store with error: %{public}@
softlink:r:path:/System/Library/Frameworks/SafariServices.framework/SafariServices
ASCredentialRequestButtonContinue
ASNSLayoutConstraintExtras
ASAuthorizationAppleIDProvider
AKAuthorizationNotificationHandler
AKAdaptiveServiceInterface
ASAuthorizationProvider
NSObject
ASAccountAuthenticationModificationRemoteViewControllerProtocol
_ASAccountAuthenticationModificationRemoteViewController
ASAuthorizationProviderExtensionAuthorizationResult
_ASPasskeysLearnMoreContentViewController
ASCredentialRequestConfirmButtonSubPane
LAUIAuthenticationDelegate
ASCredentialRequestInfoLabelSubPane
_ASPasskeysLearnMoreContent
ASCredentialRequestContainerViewControllerAnimator
UIViewControllerAnimatedTransitioning
ASCredentialRequestContainerViewController
UIViewControllerTransitioningDelegate
UINavigationControllerDelegate
ASAuthorizationPlatformPublicKeyCredentialDescriptor
ASAuthorizationPublicKeyCredentialDescriptor
NSSecureCoding
NSCoding
NSCopying
ASCredentialIdentityStoreState
ASPublicKeyCredentialManager
_WKWebAuthenticationPanelDelegate
ASPublicKeyCredentialManagerInterface
ASAccountAuthenticationModificationServiceViewControllerProtocol
ASAccountAuthenticationModificationServiceViewController
_ASAccountAuthenticationModificationHostViewControllerDelegate
ASCredentialPickerPaneViewController
SFCredentialProviderExtensionManagerObserver
_ASPasswordCredentialAuthenticationViewControllerDelegate
_ASAuthenticationPresentationProvider
ASCredentialRequestSubPaneConfirmButtonDelegate
UITableViewDataSource
_ASIncomingCallObserver
CXCallObserverDelegate
ASPublicKeyCredentialBase
ASPublicKeyCredential
ASAuthorizationCredential
ASAuthorizationSecurityKeyPublicKeyCredentialRegistration
ASAuthorizationPublicKeyCredentialRegistration
_ASInsetTextField
ASPasswordAuthenticationPaneViewController
ASCredentialProviderViewController
AuthenticationServicesExtras
ASCredentialRequestPaneContext
ASCredentialRequestCABLEClientViewController
_ASCABLEQRCodeView
_ASCABLEQRCodeImageView
_ASCABLEQRCodeBadgeView
_ASCABLEQRCodeBadgePlatterView
ASAuthorizationSecurityKeyPublicKeyCredentialProvider
ASCredentialIdentityStore
ASAuthorizationPublicKeyCredentialParameters
ASAccountAuthenticationModificationExtensionContext
_ASAccountAuthenticationModificationExtensionContextProtocol
ASAuthorizationSingleSignOnCredential
ASAuthorizationSecurityKeyPublicKeyCredentialAssertion
ASAuthorizationPublicKeyCredentialAssertion
ASCredentialRequestCABLEConnectingViewController
ASAuthorization
ASAuthorizationViewController
ASCredentialRequestPaneViewControllerDelegate
ASCredentialRequestContainerViewControllerDelegate
ASPasswordAuthenticationPaneViewControllerDelegate
ASCredentialRequestIconGenerator
ASAuthorizationAppleIDCredential
_ASAccountAuthenticationModificationHostViewController
_ASAccountAuthenticationModificationExtensionHostContextDelegate
_ASExtensionHostContextDelegate
ASAuthorizationRequest
_ASAccountAuthenticationModificationExtensionManager
ASAuthorizationSingleSignOnProvider
ASWebAuthenticationSession
ASAuthorizationControllerDelegate
ASAuthorizationControllerPresentationContextProviding
ASCredentialRequestImageSubPane
ASAuthorizationAppleIDRequest
_ASCredentialProviderExtensionHostContext
_ASCredentialProviderExtensionHostContextProtocol
_ASExtensionHostContext
ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor
ASCredentialRequestPaneViewController
UITableViewDelegate
UIScrollViewDelegate
_ASNavigationTitleView
ASCredentialRequestBasicPaneViewController
ASImageExtras
ASPasswordCredential
_ASCredentialProviderExtensionContextProtocol
ASCredentialRequestCABLEConsentViewController
ASNSBundleExtras
_ASCredentialProviderExtensionConfigurationViewController
_ASCredentialProviderExtensionHostContextDelegate
ASAuthorizationPlatformPublicKeyCredentialProvider
ASCredentialRequestLoginChoiceCell
ASAccountAuthenticationModificationRequest
ASAuthorizationPlatformPublicKeyCredentialAssertion
_ASExtensionViewController
ASCredentialServiceIdentifier
ASCredentialRequestSubPane
_ASAccountAuthenticationModificationExtensionHostContext
_ASAccountAuthenticationModificationExtensionHostContextProtocol
ASAuthorizationPlatformPublicKeyCredentialAssertionRequest
ASAuthorizationPublicKeyCredentialAssertionRequest
ASBackgroundObserver
ASAuthorizationPlatformPublicKeyCredentialRegistration
PasskeyExtras
WBSSavedAccountStorePasskeyExtras
ASNavigationController
ASAccountAuthenticationModificationUpgradePasswordToStrongPasswordRequest
ASAuthorizationProviderExtensionAuthorizationRequest
ASAuthorizationAppleIDButton
ASAuthorizationController
SOAuthorizationDelegate
ASAccountAuthenticationModificationController
_ASAccountAuthenticationModificationRemoteViewControllerDelegate
ASCredentialRequestSecondaryButton
ASAccountAuthenticationModificationReplacePasswordWithSignInWithAppleRequest
ASAuthorizationPasswordRequest
ASAccountAuthenticationModificationViewController
ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest
ASAuthorizationPublicKeyCredentialRegistrationRequest
_ASPasswordCredentialAuthenticationViewController
_ASPasswordManagerDeleteAlertConfiguration
ASAuthorizationSecurityKeyPublicKeyCredentialAssertionRequest
ASViewServiceInterfaceUtilities
ASPublicKeyCredentialOperation
ASCredentialProviderExtensionContext
ASAuthorizationPasswordProvider
ASPasswordCredentialIdentity
ASAuthorizationSecurityKeyPublicKeyCredentialRegistrationRequest
ASCredentialRequestEnableBluetoothViewController
ASCredentialRequestButton
_ASCredentialListViewController
ASAuthorizationOpenIDRequest
ASAuthorizationSingleSignOnRequest
initWithFrame:
_commonInit
initWithCoder:
continueButtonBackgroundColor
setBackgroundColor:
continueButtonCornerRadius
_setContinuousCornerRadius:
setTextAlignment:
setAdjustsFontForContentSizeCategory:
setAdjustsFontSizeToFitWidth:
continueButtonTitleFont
setFont:
continueButtonTitleColor
setTextColor:
setTranslatesAutoresizingMaskIntoConstraints:
setMaximumContentSizeCategory:
setTitleLabel:
titleLabel
addSubview:
centerYAnchor
constraintEqualToAnchor:
leadingAnchor
continueButtonTitleMargin
constraintEqualToAnchor:constant:
trailingAnchor
arrayWithObjects:count:
activateConstraints:
setHighlighted:
_backgroundColorForCurrentControlState
setEnabled:
isEnabled
continueButtonDisabledBackgroundColor
isHighlighted
continueButtonHighlightedBackgroundColor
as_constraintsMatchingFrameOfView:withFrameOfView:edgeInsets:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
as_constraintsMatchingFrameOfView:withFrameOfView:
initialize
startServiceWithNotificationHandler:
initWithProvider:
setUserID:
errorWithDomain:code:userInfo:
getCredentialStateForRequest:completion:
defaultCenter
postNotificationName:object:
activate
credentialStateDidChange:completion:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
createRequest
getCredentialStateForUserID:completion:
requestViewController:fromServiceWithBundleIdentifier:connectionHandler:
_plugIn
uuid
serviceViewControllerProxy
upgradeCredentialToSignInWithApple:forServiceIdentifier:userInfo:extensionUUID:
updateCredential:forServiceIdentifier:userInfo:extensionUUID:
accountModificationRemoteViewControllerDidFinishUpgradeToSignInWithApple:userInfo:completion:
accountModificationRemoteViewController:didFinishWithCredential:userInfo:completion:
accountModificationRemoteViewController:requestCanceledWithError:completion:
presentAccountModificationRemoteViewController:
dismissAccountModificationRemoteViewController:
requestToUpgradeToSignInWithAppleDidFinishWithUserInfo:completion:
requestDidFinishWithCredential:userInfo:completion:
requestDidFailWithError:completion:
presentAccountModificationRemoteViewController
dismissAccountModificationRemoteViewController
interfaceWithProtocol:
setWithObject:
setClasses:forSelector:argumentIndex:ofReply:
_exportedInterface
accountModificationRemoteViewController:viewServiceDidTerminateWithError:
requestViewControllerWithConnectionHandler:
exportedInterface
serviceViewControllerInterface
upgradeCredentialToSignInWithApple:forServiceIdentifier:userInfo:extension:
updateCredential:forServiceIdentifier:userInfo:extension:
viewServiceDidTerminateWithError:
delegate
setDelegate:
.cxx_destruct
_delegate
T@"<_ASAccountAuthenticationModificationRemoteViewControllerDelegate>",W,N,V_delegate
init
array
setPrivateKeys:
initWithHTTPAuthorizationHeaders:
initWithHTTPResponse:httpBody:
httpAuthorizationHeaders
setHttpAuthorizationHeaders:
httpResponse
setHttpResponse:
httpBody
setHttpBody:
privateKeys
authorizationResult
_authorizationResult
T@"SOAuthorizationResult",R,N,V_authorizationResult
T@"NSDictionary",&,N
T@"NSHTTPURLResponse",C,N
T@"NSData",&,N
T@"NSArray",&,N
titleString
subtitleString
initWithTitle:detailText:symbolName:
viewDidLoad
_setUpContentBodyText
headerView
_passkeySymbolHeaderImage
setIcon:accessibilityLabel:
systemImageName
configurationWithScale:
systemImageNamed:withConfiguration:
blackColor
imageWithTintColor:renderingMode:
contentView
_contentBodyAttributedString
setAttributedText:
preferredFontDescriptorWithTextStyle:
fontWithDescriptor:size:
setNumberOfLines:
topAnchor
bottomAnchor
systemImageNamed:
imageWithConfiguration:
imageWithRenderingMode:
tintColor
textAttachmentWithImage:
attributedStringWithAttachment:
bodyString
initWithString:
dictionaryWithObjects:forKeys:count:
safari_replaceCharactersWithStringBindings:
_createMainStackView
initWithView:
setContentCompressionResistancePriority:forAxis:
isBiometricAuthenticationAvailable
_initializeAuthorizationButton
_windowDidBecomeKey:
addObserver:selector:name:object:
authorizationButton
buttonText
setButtonText:
removeObserver:
dealloc
setAccessibilityIdentifier:
setSpacing:
setAlignment:
setAxis:
setDistribution:
clearColor
addArrangedSubview:
centerXAnchor
widthAnchor
heightAnchor
continueButtonHeight
constraintEqualToConstant:
isMechanismEnabled:
_enableLAUIAuthenticationMechanism
_authenticationMechanism
enableMechanism:error:
safari_privacyPreservingDescription
biometryType
_switchToBiometricsView:withAuthenticationMechanismEnabled:showAlert:alertString:
_switchToAppleAccountPassword
_passcodeOrPasswordButtonTitle
_authorizeAppleAccountWithPasswordButtonSelected:
addTarget:action:
_authorizationButtonBioSelected:
_authorizationWithPasscodeOrPasswordButtonSelected:
stackView
showContinueButtonWithTitle:
_continueButtonTapped
performAuthorization:withAuthenticatedLAContext:
_performPasscodeOrPasswordValidation:
_isDelegateReadyForAuthorization
performPasswordAuthentication:
userTappedContinueButton
evaluatePolicy:options:reply:
validateReadyForAuthorization:
subviews
copy
countByEnumeratingWithState:objects:count:
removeFromSuperview
_disableBiometricView
_addArrangedSpaceToMainStackView:
_setUpAlertImageWithConstraints
_setupLabelWithTitle:animated:
_setupBiometricButtonWithConstraints:
disableMechanism:error:
_verticalSpacerWithConstant:
addConstraint:
redColor
setTintColor:
configurationWithPointSize:weight:
setPreferredSymbolConfiguration:
setImage:
setContentMode:
setFrame:
view
defaultMetrics
systemFontOfSize:weight:
scaledFontForFont:
setText:
setCustomSpacing:afterView:
_updateLabelAnimatedWithTitle:
animation
functionWithName:
setTimingFunction:
setType:
setDuration:
layer
addAnimation:forKey:
initWithFrame:mechanisms:
addObjectsFromArray:
_passwordAuthenticationButtonTitle
_setGlyphViewGestureRecognizerEnabled:
firstObject
gestureRecognizers
_waitForTimeInterval:withGroup:
invalidateProcessingState
confirmButtonSubPaneDidEnterProcessingState:withAuthenticatedContext:
code
domain
isEqualToString:
_switchToPasscodeOrPassword
confirmButtonSubPaneDidFailBiometry:
_enterProcessingStateWithCompletionHandler:
addToStackView:withCustomSpacingAfter:context:
authenticationResult:error:context:
biometricNoMatch
localizedSubTitleForMechanisms:
processBiometricMatchWithCompletionHandler:
processAuthenticationSuccessWithCompletionHandler:
callerIconBundlePath
localizedCallerName
localizedAuthWatchPrompt
setAuthorizationCapabilityEnabled:
authorizationCapabilityEnabled
showContinueWithPasswordButton
showAlertContinuingWithPassword:
setUpButtonInPaneContext:
showContinueButton
showAuthenticationMechanismForExternalPasswordCredential
biometricAuthenticationFailureWithAlertString:
finishProcessingWithCompletionHandler:
_mainStackView
_containerView
_canPerformBiometricAuthentication
_authorizationButtonContainerView
_biometricsView
_paneContext
_biometricLabel
_processingStateCompletionHandler
_processingStateGroup
_authorizationButton
T@"NSString",C,N
T@"ASCredentialRequestButton",R,N,V_authorizationButton
T@"<ASCredentialRequestSubPaneConfirmButtonDelegate>",W,N,V_delegate
TB,N
_infoLabelWithString:labelType:
_infoLabelMarginInset
_fontForLabelType:
_textColorForLabelType:
headerTitleFont
headerMessageFont
headerTitleColor
headerMessageColor
isPad
marginInset
text
initWithString:labelType:
setMarginInset:
_infoLabel
_marginInset
Td,N,V_marginInset
T@"NSString",&,N
deviceClass
footerString
footerLearnMoreLinkBindingString
footerLearnMoreLinkString
T@"NSString",R,C,N
initWithPresenting:
isPresenting
viewControllerForKey:
_viewControllerForTransitionContext:
containerView
bounds
layoutIfNeeded
performWithoutAnimation:
completeTransition:
_animateUsingDefaultTimingWithOptions:animations:completion:
transitionDuration:
animateTransition:
interruptibleAnimatorForTransition:
animationEnded:
_presenting
presenting
TB,R,N,GisPresenting,V_presenting
initWithNibName:bundle:
setModalPresentationStyle:
setModalInPresentation:
setTransitioningDelegate:
_handleTapGesture:
initWithTarget:action:
setCancelsTouchesInView:
addGestureRecognizer:
addChildViewController:
setAutoresizingMask:
didMoveToParentViewController:
preferredContentSize
setPreferredContentSize:
setPriority:
viewWillAppear:
isBeingPresented
transitionCoordinator
setActive:
effectWithStyle:
setEffect:
colorWithWhite:alpha:
animateAlongsideTransition:completion:
viewWillDisappear:
isBeingDismissed
locationInView:
rootViewController
frame
_shouldDismiss
requestContainerViewControllerDidDismiss:
requestContainerViewControllerShouldDismiss:
_setPaneDelegateForTopViewController
topViewController
_setPaneDelegateForViewController:
paneDelegate
_setPaneDelegate:forViewController:
_clearPaneDelegateForViewController:
preferredContentSizeDidChangeForChildContentContainer:
sheetPresentationController
animateChanges:
setConstant:
viewForKey:
animationControllerForPresentedController:presentingController:sourceController:
animationControllerForDismissedController:
interactionControllerForPresentation:
interactionControllerForDismissal:
presentationControllerForPresentedViewController:presentingViewController:sourceViewController:
navigationController:willShowViewController:animated:
navigationController:didShowViewController:animated:
navigationControllerSupportedInterfaceOrientations:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationController:interactionControllerForAnimationController:
navigationController:animationControllerForOperation:fromViewController:toViewController:
initWithRootViewController:
supportedInterfaceOrientations
setPaneDelegate:
blurBackgroundView
setBlurBackgroundView:
_tapGestureRecognizer
_sheetHeightConstraint
_sheetPresentedConstraint
_rootViewController
_paneDelegate
_blurBackgroundView
T@"UIVisualEffectView",&,N,V_blurBackgroundView
T@"UIViewController",R,N,V_rootViewController
T@"<ASCredentialRequestContainerViewControllerDelegate>",W,N,V_delegate
T@"<ASCredentialRequestPaneViewControllerDelegate>",W,N,V_paneDelegate
initWithCredentialID:transports:
credentialID
initWithCredentialID:
decodeObjectOfClass:forKey:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
TB,R
copyWithZone:
setCredentialID:
T@"NSData",C,N
coreDescriptor
_credentialID
T@"ASCPublicKeyCredentialDescriptor",R,N
T@"NSData",C,N,V_credentialID
numberWithBool:
stringWithFormat:
initWithEnabledState:supportsIncrementalUpdates:
supportsIncrementalUpdates
_enabled
_supportsIncrementalUpdates
enabled
TB,R,N,GisEnabled,V_enabled
TB,R,N,V_supportsIncrementalUpdates
dictionary
strongToWeakObjectsMapTable
_operationForPanel:
didReceiveError:
didFetchPlatformLoginChoices:
count
dictionaryWithCapacity:
setObject:forKeyedSubscript:
name
displayName
relyingPartyIdentifier
initWithName:displayName:identifier:relyingPartyIdentifier:publicKeyCredentialOperationUUID:
safari_mapObjectsUsingBlock:
mergeIdentifiersToAssertionResponses:
setPlatformAssertionSelectionCallback:
sourceApplicationIdentifier
newPasskeysAvailableForApplicationIdentifier:
initWithName:displayName:identifier:publicKeyCredentialOperationUUID:
safari_mapAndFilterObjectsUsingBlock:
setSecurityKeyAssertionSelectionCallback:
didFetchSecurityKeyLoginChoices:
_operationForPanelIfExists:
cancelOperationIfNecessaryWithUUID:overrideError:
authenticatedLAContext
requestPINWithRemainingRetries:completionHandler:
_asToWKCredentialAssertionOptions:
objectAtIndexedSubscript:
_newOperationWithRelyingPartyIdentifier:delegate:sourceApplicationIdentifier:webFrameIdentifier:
authenticatorAttachment
allowCredentials
safari_addObjectsFromArrayUnlessNil:
setAuthenticatorAttachment:
setAllowCredentials:
challenge
stringByAppendingString:
getClientDataJSONForAuthenticationType:challenge:origin:
attachment
overrideError
didCompleteAssertionWithCredential:error:
_newPanelForOperation:
clientDataHash
dataWithLength:
bytes
length
mutableBytes
setClientDataHash:
getAssertionWithMediationRequirement:clientDataHash:options:completionHandler:
getAssertionWithClientDataHash:options:completionHandler:
isUserVerifyingPlatformAuthenticatorAvailable
_createCredentialOfKind:withOptions:authenticatedLAContext:delegate:webFrameIdentifier:
publicKeyCredentialOperationUUID
identifier
_finishAssertionForOperationWithUUID:identifier:authenticatedContext:
_operationForUUID:
identifiersToAssertionResponses
objectForKeyedSubscript:
setLAContext:
selectPlatformAssertion:
_operationForApplicationIdentifierIfExists:
_operationForWebFrameIdentifier:
_operationForUUIDIfExists:
initWithFirst:second:
isCABLEClient
initWithOperationUUID:
presentCABLESheetWithCompletionHandler:
selectSecurityKeyAssertion:
clearAllLocalAuthenticatorCredentials
setOverrideError:
_tearDownOperationWithUUID:
_asToWKCredentialCreationOptions:forCredentialKind:
encodeMakeCredentialCommandWithClientDataHash:options:userVerificationAvailability:
encodeMakeCredentialCommandWithClientDataJSON:options:userVerificationAvailability:
encodeGetAssertionCommandWithClientDataHash:options:userVerificationAvailability:
encodeGetAssertionCommandWithClientDataJSON:options:userVerificationAvailability:
supportedAlgorithmIdentifiers
initWithAlgorithm:
initWithName:
setIdentifier:
userName
userIdentifier
userDisplayName
initWithName:identifier:displayName:
initWithRelyingParty:user:publicKeyCredentialParamaters:
setResidentKey:
residentKeyPreference
setRequireResidentKey:
attestationPreference
setAttestation:
excludedCredentials
setExcludeCredentials:
userVerificationPreference
setUserVerification:
setAuthenticatorSelection:
timeout
setTimeout:
extensions
setExtensions:
extensionsCBOR
setExtensionsCBOR:
setRelyingPartyIdentifier:
credentialKind
_allowedCredentialsForAssertionOptions:
allowedCredentials
setAuthenticatedLAContext:
didCompleteRegistrationWithCredential:error:
makeCredentialWithMediationRequirement:clientDataHash:options:completionHandler:
makeCredentialWithClientDataHash:options:completionHandler:
setPanel:
setObject:forKey:
initWithRelyingPartyIdentifier:delegate:
setSourceApplicationIdentifier:
tearDownIfNecessary
objectForKey:
panel:updateWebAuthenticationPanel:
panel:requestPINWithRemainingRetries:completionHandler:
panel:selectAssertionResponse:source:completionHandler:
panel:requestLAContextForUserVerificationWithCompletionHandler:
panel:decidePolicyForLocalAuthenticatorWithCompletionHandler:
panel:dismissWebAuthenticationPanelWithResult:
beginAssertionsWithOptions:forProcessWithApplicationIdentifier:delegate:requestStyle:webFrameIdentifier:
createNewPlatformCredentialWithOptions:authenticatedContext:delegate:webFrameIdentifier:
assertUsingPlatformCredentialForLoginChoice:authenticatedContext:
autoFillOperationUUIDForApplicationIdentifier:
autoFillOperationUUIDForWebFrameIdentifier:
autoFillPasskeysForOperationUUID:
assertUsingAutoFillPasskeyWithIdentifier:authenticatedContext:forOperationUUID:
presentCABLESheetForOperationUUID:withCompletionHandler:
beginCreatingNewSecurityKeyCredentialIfAvailableWithOptions:delegate:webFrameIdentifier:
assertUsingSecurityKeyCredentialForLoginChoice:
clearAllCredentials
encodeMakeCredentialCommandWithOptions:authenticatorUserVerificationAvailability:
encodeGetAssertionCommandWithOptions:authenticatorUserVerificationAvailability:
passkeyAutoFillManagerDelegate
setPasskeyAutoFillManagerDelegate:
T@"<ASPasskeyAutoFillManagerDelegate>",&,N
_operationsLock
_uuidToOperation
_panelToWeakOperation
_applicationIdentifierToWeakOperation
_webFrameIdentifierToWeakOperationForBrowser
_passkeyAutoFillManagerDelegate
T@"<ASPasskeyAutoFillManagerDelegate>",&,N,V_passkeyAutoFillManagerDelegate
base64EncodedStringWithOptions:
extensionOutputsCBOR
authenticatorData
signature
userHandle
rawId
initWithRelyingPartyIdentifier:authenticatorData:signature:userHandle:rawClientDataJSON:credentialID:extensionOutputsCBOR:attachment:
arrayWithCapacity:
initWithUsername:relyingPartyIdentifier:identifier:operationUUID:
addObject:
initWithIdentifier:
setTransports:
transports
appID
setAppid:
isGoogleLegacyAppIDSupport
setGoogleLegacyAppidSupport:
attestationObject
initWithRelyingPartyIdentifier:attestationObject:rawClientDataJSON:credentialID:transports:extensionOutputsCBOR:attachment:
_ensureHostHasAccountModificationEntitlement
extensionPointIdentifier
_remoteViewControllerProxy
_upgradeCredentialToSignInWithApple:forServiceIdentifier:userInfo:extension:
extensionWithUUID:completion:
_findExtensionSupportingUpgrade:withCompletionHandler:
initWithExtension:serviceIdentifier:
upgradeCredentialToSignInWithApple:userInfo:
_updateCredential:forServiceIdentifier:userInfo:extension:
_isKeychainSyncEnabled
attributes
safari_stringForKey:
parsePasswordRules:error:
requirementsForPasswordRuleSet:respectingMinLength:maxLength:
initWithPasswordRequirementsByDomain:
generatedPasswordMatchingRequirements:
updateCredential:withNewPassword:userInfo:
_hostAuditToken
bundleRecordForAuditToken:error:
path
extensionsWithMatchingAttributes:error:
safari_boolForKey:
safari_highLevelDomainFromHost
sharedStore
savedAccountsWithPasswords
user
highLevelDomain
removeCredentialTypes:forSavedAccount:
password
changeSavedAccount:toUser:password:
initWithHost:port:protocol:realm:authenticationMethod:
saveUser:password:forProtectionSpace:highLevelDomain:
_deleteExistingKeychainCredentialIfPossible
_updateKeychainWithNewCredential:
_remoteViewControllerInterface
accountModificationHostViewControllerDidCompleteUpgradeToSignInWithApple:userInfo:completion:
accountModificationHostViewController:didFinishWithCredential:userInfo:completion:
presentUIForAccountModificationHostViewController:
dismissUIForAccountModificationHostViewController:
accountModificationHostViewController:requestCanceledWithError:completion:
_accountModificationHostViewController
_isPerformingAppInitiatedUpgrade
_existingCredential
_serviceIdentifierForUpgrade
_addSpacerView
initRequiringTableView:
_updateCachedLoginChoices
requestTypes
_serviceName
teamIdentifier
bundleIdentifier
appleIDAuthorizationRequest
initWithAppName:teamIdentifier:bundleIdentifier:authorizationRequest:
setPresentationProvider:
_selectInitialLoginChoice
sharedManager
addObserver:
initWithPresentationContext:shouldExpandOtherLoginChoices:
tableView
indexSetWithIndex:
reloadSections:withRowAnimation:
reloadData
sizeToFitPaneContent
_localizedInfoString
_selectPreviouslySelectedLoginChoiceIfPossible:
indexOfObject:
indexPathForRow:inSection:
selectRowAtIndexPath:animated:scrollPosition:
_updateSelectedRow:
_setUpView
isRegistrationRequest
_configureAuthenticationPaneForSelectedLoginChoice:
viewDidDisappear:
setDataSource:
paneHeaderStackView
_setUpIconViewIfNecessary
_setUpInfoLabel
footerPaneContext
_addAuthorizationButtonToPaneContext:
_addOtherLoginChoicesButtonIfNeeded
_addManuallyEnterPasswordButtonIfNeeded
paneFooterStackView
_iconImage
headerPaneContext
addEmptyViewWithSpacing:
initWithImage:
addSubPane:withCustomSpacingAfter:
isCombinedPublicKeyCredentialRegistrationRequest
loginChoiceKind
_useSecurityKeyButtonTapped
buttonWithTitle:target:action:
_useCABLEButtonTapped
_otherLoginChoicesButtonTapped
_secondaryButtonBottomMargin
isProxiedRequest
_manuallyEnterPasswordButtonTapped
requestPaneViewControllerPresentExpandedLoginChoiceInterface:
loginChoices
safari_firstObjectPassingTest:
requestPaneViewController:dismissWithCredential:error:
requestPaneViewController:didRequestCredentialForLoginChoice:authenticatedContext:completionHandler:
requestPaneViewControllerPresentManualPasswordEntryInterface:
_shouldShowLoginChoicesInTableView
setUserInteractionEnabled:
_infoLabelStringForPlatformPublicKeyCredentialRegistration
_infoLabelStringForPassword
_infoLabelStringForSignInWithApple
_infoLabelStringForPlatformPublicKeyCredentialAssertion
_infoLabelStringForSecurityKeyCredentialAssertion
destinationSiteForCrossSiteAssertion
serviceName
proxiedOriginDeviceName
localAccountLoginChoices
appIdentifier
bundleRecordWithApplicationIdentifier:error:
localizedName
shouldUseAlternateCredentialStore
isCABLEAuthenticatorRequest
userVisibleName
username
loginRowData
loginRowPaneTitleText
loginRowAuthenticationType
isExternal
shouldRequireLocalAuthenticationForPasswords
platformUserVerificationPreference
shouldRequireLocalAuthenticationForPlatformCredentials
as_navigationItem
rightBarButtonItem
initWithAuthorization:
performAuthorizationWithCompletionHandler:
_getPrimaryLoginChoices:otherLoginChoices:
passwordManagerIcon
headerIconForPresentationContext:
primaryExtension
externalCredentialIdentity
_initWithFoundationCredentialIdentity:
initWithExtension:credentialIdentity:
presentViewController:animated:completion:
dismissViewControllerAnimated:completion:
setHandler:
presentingViewController
site
date
initWithUser:password:site:creationDate:
numberOfTableRows
_cellForRow:
initWithLoginChoice:presentationContext:authorizationProvider:
setIsSelectedLoginChoice:
isMovingToParentViewController
cellForRowAtIndexPath:
_setCancelButtonEnabled:
_errorIsPINRequiredError:
requestPaneViewControllerRequiresPINEntryInterface:
_performAuthorizationWithAuthenticatedContext:completionHandler:
ak_isUserCancelError
_userTappedContinueButtonForPasswordLoginChoice:
_userTappedContinueButtonForPasskeyLoginChoice:
_userTappendContinueButtonForSecurityKeyLoginChoice:
_userTappedContinueButtonForCABLELoginChoice:
_userSelectedExternalPasswordCredential
_presentAlert:primaryAction:alternateAction:
navigationController
pushViewController:animated:
popViewControllerAnimated:
window
credentialProviderExtensionManagerExtensionListDidChange:
presentUIForPasswordCredentialAuthenticationViewController:
passwordCredentialAuthenticationViewController:didFinishWithCredential:error:completion:
authenticationProvider:showViewController:
authenticationProvider:hideViewController:
authenticationProvider:presentAlert:primaryAction:alternateAction:
presentationAnchor
T@"UIWindow",R,N
tableView:numberOfRowsInSection:
tableView:cellForRowAtIndexPath:
numberOfSectionsInTableView:
tableView:titleForHeaderInSection:
tableView:titleForFooterInSection:
tableView:canEditRowAtIndexPath:
tableView:canMoveRowAtIndexPath:
sectionIndexTitlesForTableView:
tableView:sectionForSectionIndexTitle:atIndex:
tableView:commitEditingStyle:forRowAtIndexPath:
tableView:moveRowAtIndexPath:toIndexPath:
initWithPresentationContext:
reloadLoginChoices
tableView:didSelectRowAtIndexPath:
_presentationContext
_imageSubPane
_confirmButtonSubPane
_currentlySelectedRow
_previouslySelectedLoginChoice
_shouldExpandOtherLoginChoices
_tableViewLoginChoices
_otherLoginChoices
_authKitAuthorizationProvider
_alertQueue
_credentialProviderViewController
_externalPasswordCredentialForSelectedLoginChoice
_infoLabelPane
_initWithBlock:
setDelegate:queue:
hasConnected
callObserverWithBlock:
callObserver:callChanged:
_callObserver
_incomingCallHandler
initWithCredentialID:rawClientDataJSON:
rawClientDataJSON
T@"NSData",R,C,N
_rawClientDataJSON
T@"NSData",R,C,N,V_rawClientDataJSON
T@"NSData",R,C,N,V_credentialID
_initWithBaseCredential:rawAttestationObject:
rawAttestationObject
initWithCoreCredential:
_baseCredential
_rawAttestationObject
T@"NSData",R,C,N,V_rawAttestationObject
textRectForBounds:
editingRectForBounds:
leftViewRectForBounds:
rightViewRectForBounds:
insetSize
setInsetSize:
_insetSize
T{CGSize=dd},N,V_insetSize
_createViews
_setConstraints
keyboardDidShow:
_titleLabelText
_setUpSubtitleLabel
_setUpUsernameLabel
colorWithRed:green:blue:alpha:
setCornerRadius:
_secureTextFieldPlaceholderText
setPlaceholder:
setSecureTextEntry:
setReturnKeyType:
setTextContentType:
_textFieldChanged:
addTarget:action:forControlEvents:
_signInButtonTapped
_topViewMargin
_setUpAndAddIconImage
_containerViewHorizontalMargin
constraintGreaterThanOrEqualToAnchor:
_secureTextFieldInsetMargin
constraintGreaterThanOrEqualToConstant:
defaultFontForTextStyle:
overrideTitle
_securityKeyTitleLabelText
_manualPasswordEntryTitleLabelText
allowedCredentialsForSecurityKeyAssertion
_completeManualPasswordCredentialEntry
_startAnimatingActivityIndicator
_activateSecurityKeySubtitleText
_stopAnimatingActivityIndicator
_pinValidationFailedWithError:
passwordAuthenticationViewController:validateUserEnteredPIN:completionHandler:
_subtitleTextForPINValidationError:
initWithActivityIndicatorStyle:
startAnimating
setRightView:
setRightViewMode:
stopAnimating
systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:
proxiedAssociatedDomains
passwordAuthenticationViewController:completedWithManuallyEnteredPasswordCredential:
animateWithDuration:animations:
userInfo
CGRectValue
safeAreaInsets
sizeToFitPaneContentAnimated:
becomeFirstResponder
resignFirstResponder
canBecomeFirstResponder
initWithPersona:presentationContext:
_signInButtonInsetMargin
_intrinsicContentHeight
authenticationDelegate
setAuthenticationDelegate:
_keyboardHeight
_persona
_titleLabel
_subtitleLabel
_usernameField
_secureTextField
_signInButtonActivityIndicator
_signInButton
_paneHeaderStackViewBottomKeyboardConstraint
_authenticationDelegate
T@"<ASPasswordAuthenticationPaneViewControllerDelegate>",W,N,V_authenticationDelegate
setMass:
setStiffness:
setDamping:
setVelocity:
setFillMode:
numberWithFloat:
setFromValue:
setToValue:
setValueFunction:
functionWithControlPoints::::
setKeyPath:
extensionContext
instanceMethodForSelector:
methodForSelector:
containsString:
cancelRequestWithError:
prepareCredentialListForServiceIdentifiers:
provideCredentialWithoutUserInteractionForIdentity:
prepareInterfaceToProvideCredentialForIdentity:
prepareInterfaceForExtensionConfiguration
T@"ASCredentialProviderExtensionContext",R,N
_credentialScopes
initWithUser:authorizedScopes:
identityToken
setIdentityToken:
authorizationCode
setAuthorizationCode:
state
setState:
userInformation
selectedEmail
setEmail:
familyName
setFamilyName:
givenName
setGivenName:
setFullName:
isLikelyRealUser
setRealUserStatus:
authorizedScopes
initWithCapacity:
authenticationServicesCredential
initWithPaneViewController:stackView:
paneViewController
_paneViewController
_stackView
T@"ASCredentialRequestPaneViewController",R,W,N,V_paneViewController
T@"UIStackView",R,N,V_stackView
_addAboveIconSpacerView
_setUpIconView
_setUpTitleView
_setUpQRCodeView
_addBelowQRCodeSpacerView
_titleText
_qrCodeMessage
initWithMessage:
_marginBelowQRCode
localizedStringWithFormat:
_marginAboveIcon
qrCodeURL
absoluteString
initWithPresentationContext:loginChoice:
_loginChoice
whiteColor
setCornerCurve:
constraintEqualToAnchor:multiplier:
_updatePlatterBorderStyle
_updateQRCodeImage
traitCollectionDidChange:
_qrCodeCIImage
extent
context
createCGImage:fromRect:
imageWithCGImage:
QRCodeGenerator
dataUsingEncoding:
setMessage:
outputImage
blendWithMaskFilter
_qrCodeColor
imageWithColor:
setBackgroundImage:
setInputImage:
setMaskImage:
imageByCroppingToRect:
_qrCodeASImage
traitCollection
displayScale
setBorderWidth:
separatorColor
CGColor
setBorderColor:
colorWithCGColor:
intrinsicContentSize
_message
_imageView
_platterView
_badgeView
setContentsGravity:
setMagnificationFilter:
CGImage
setContents:
image
_image
T@"UIImage",&,N,V_image
_passkeyIcon
layoutSubviews
_updateLayoutMetricsWithFrameSize:
imageWithAlignmentRectInsets:
configurationWithPointSize:
_iconView
_iconOffsetXConstraint
_iconOffsetYConstraint
setOpaque:
bezierPathWithRoundedRect:cornerRadius:
setLineWidth:
addClip
setFill
fill
setStroke
stroke
drawRect:
as_authenticationServicesBundle
colorNamed:inBundle:compatibleWithTraitCollection:
_initWithProvider:relyingPartyIdentifier:challenge:displayName:name:userID:
_initWithProvider:relyingPartyIdentifier:challenge:
initWithRelyingPartyIdentifier:
createCredentialRegistrationRequestWithChallenge:displayName:name:userID:
createCredentialAssertionRequestWithChallenge:
_relyingPartyIdentifier
T@"NSString",R,C,N,V_relyingPartyIdentifier
_initCredentialIdentityStore
replaceCredentialIdentitiesWithIdentities:completion:
getCredentialProviderExtensionStateWithCompletion:
saveCredentialIdentities:completion:
removeCredentialIdentities:completion:
removeAllCredentialIdentitiesWithCompletion:
T@"ASCredentialIdentityStore",R,N
getCredentialIdentityStoreStateWithCompletion:
_helperProxy
serviceIdentifier
type
recordIdentifier
rank
initWithServiceIdentifier:serviceIdentifierType:externalRecordIdentifier:user:rank:
algorithm
integerValue
numberWithInteger:
_algorithm
Tq,R,N,V_algorithm
_as_accountModificationHostInterface
_as_accountModificationExtensionInterface
_auxiliaryConnection
remoteObjectProxyWithErrorHandler:
getSignInWithAppleAuthorizationWithState:nonce:completion:
completeRequestReturningItems:completionHandler:
prepareToCompleteUpgradeToSignInWithAppleWithUserInfo:completion:
prepareToCompleteRequestWithUpdatedCredential:userInfo:completion:
prepareToCancelRequestWithError:completion:
_principalObject
prepareToConvertAccountToSignInWithAppleWithoutUserInteractionForServiceIdentifier:existingCredential:
convertAccountToSignInWithAppleWithoutUserInteractionForServiceIdentifier:existingCredential:
convertAccountToSignInWithAppleWithoutUserInteractionForServiceIdentifier:existingCredential:userInfo:
prepareInterfaceToConvertAccountToSignInWithAppleForServiceIdentifier:existingCredential:
prepareInterfaceToConvertAccountToSignInWithAppleForServiceIdentifier:existingCredential:userInfo:
changePasswordWithoutUserInteractionForServiceIdentifier:existingCredential:newPassword:userInfo:
prepareInterfaceToChangePasswordForServiceIdentifier:existingCredential:newPassword:userInfo:
cancelRequest
dismissRequestUI
_extensionAuxiliaryHostProtocol
_extensionAuxiliaryVendorProtocol
upgradeCredentialToSignInWithApple:serviceIdentifier:userInfo:
prepareInterfaceToUpgradeCredentialToSignInWithApple:serviceIdentifier:userInfo:completion:
updatePasswordForServiceIdentifier:existingCredential:newPassword:userInfo:
prepareInterfaceToUpdatePasswordForServiceIdentifier:existingCredential:newPassword:userInfo:completion:
getSignInWithAppleUpgradeAuthorizationWithState:nonce:completionHandler:
completeUpgradeToSignInWithAppleWithUserInfo:
completeChangePasswordRequestWithUpdatedCredential:userInfo:
initWithAuthenticatedResponse:
doesNotRecognizeSelector:
_initWithAuthenticatedResponse:
allHeaderFields
enumerateKeysAndObjectsUsingBlock:
emptyCredential
initWithAuthenticatedResponse:privateKeys:
accessToken
authenticatedResponse
_state
_accessToken
_identityToken
_authorizedScopes
_authenticatedResponse
_privateKeys
T@"NSString",R,C,N,V_state
T@"NSData",R,C,N,V_accessToken
T@"NSData",R,C,N,V_identityToken
T@"NSArray",R,C,N,V_authorizedScopes
T@"NSHTTPURLResponse",R,C,N,V_authenticatedResponse
T@"NSArray",R,N,V_privateKeys
_initWithBaseCredential:userID:signature:rawAuthenticatorData:
rawAuthenticatorData
userID
_rawAuthenticatorData
_userID
_signature
T@"NSData",R,C,N,V_rawAuthenticatorData
T@"NSData",R,C,N,V_userID
T@"NSData",R,C,N,V_signature
_connectingText
initWithArrangedSubviews:
safeAreaLayoutGuide
lastBaselineAnchor
viewDidAppear:
_startInformativeTextTimerIfNeeded
invalidate
_showInformativeText
scheduledTimerWithTimeInterval:repeats:block:
_setUpInformativeTextLabel
setAlpha:
_informativeText
secondaryLabelColor
_informativeTextFont
layoutMarginsGuide
constraintEqualToSystemSpacingAfterAnchor:multiplier:
constraintGreaterThanOrEqualToSystemSpacingBelowAnchor:multiplier:
preferredFontForTextStyle:
_informativeTextTimer
_activityIndicator
_informativeTextLabel
initWithProvider:credential:
initWithUser:password:
authorization
credential
authorizationFromCredential:
initWithCorePlatformKeyCredentialAssertion:
initWithCorePlatformKeyCredentialRegistration:
provider
_provider
_credential
T@"<ASAuthorizationProvider>",R,N,V_provider
T@"<ASAuthorizationCredential>",R,N,V_credential
updateLoginChoices:
_initialViewControllerForPresentationContext:expandingOtherLoginChoices:
setViewControllers:
_presentPINEntryInterface
_updateOrPushSecurityKeyViewControllerWithSubtitle:
_updateOrPushPlatformKeyViewControllerWithSubtitle:
_pushCABLEConnectingViewController
_pushCABLEAuthenticatingViewController
_setUpInitialViewController
authorizationViewControllerDidCompleteInitialPresentation:
_startCABLEClientForSingleLoginChoiceIfNeeded
_startCABLEAuthenticatorOnInitialPresentationIfNeeded
overrideHeader
initWithCustomView:
_initialViewControllerForPresentationContext:
authorizationViewController:didCompleteWithCredential:error:
_setUpContainerViewControllerWithCredentialRequestViewController:
cableAuthenticatorURL
shouldRequireCABLEAuthenticatorConsent
_cancelBarButtonItem
setRightBarButtonItem:
_signInBarButtonItem
setLeftBarButtonItem:
_securityKeyRequestViewController
navigationItem
_securityKeyRequestViewControllerWithOverrideSubtitle:
overrideSubtitle
_securityKeyTitleText
initWithTitle:subtitle:icon:
_cancelButtonSelected:
initWithBarButtonSystemItem:target:action:
_pushSecurityKeyViewControllerWithOverrideSubtitle:
visibleViewController
updateSubtitle:
_cableClientViewControllerWithLoginChoice:
setViewControllers:animated:
isBluetoothEnabled
_showEnableBluetoothViewControllerForCABLEClientWithLoginChoice:
authorizationViewController:didRequestCredentialForLoginChoice:authenticatedContext:completionHandler:
_startCABLEClientWithLoginChoice:
_enableBluetoothAndShowCABLEClientViewControllerWithLoginChoice:
setEnableBluetoothHandler:
setBluetoothEnabled:
_startCABLEAuthenticator
_showEnableBluetoothViewControllerForCABLEAuthenticator
_pushCABLEAuthenticatorCredentialPickerViewControllerWithPresentationContext:
_showCABLEAuthenticatorError:
authorizationViewController:startCABLEAuthenticationWithCompletionHandler:
_enableBluetoothAndShowCABLEConnectingViewController
_pushSecurityKeyViewController
_pushCABLEClientViewControllerForCABLELoginChoice:
_presentManualPasswordEntryInterface
authorizationViewController:validateUserEnteredPIN:completionHandler:
requestPaneViewControllerStartCABLEAuthentication:
updateInterfaceWithLoginChoices:
presentPINEntryInterface
pushOrUpdateBasicPaneViewControllerWithError:
cableClientWillConnect
cableClientWillAuthenticate
modalPresentationStyle
_navigationController
_wirelessSettingsController
T@"<ASAuthorizationViewControllerDelegate>",W,N,V_delegate
headerIconSize
_iconForPresentationContext:size:
hasExternalPasswords
_providerIconForPasswordLoginChoice:
cellIconSize
_keychainIcon
proxiedIconData
proxiedIconScale
doubleValue
_iconForData:scale:size:
_iconApplicationIdentifierForApplicationIdentifier:
_iconForApplicationIdentifier:size:
initWithBundleIdentifier:
_imageForIcon:size:
imageWithData:scale:
scale
initWithCGImage:scale:
initWithImages:
size
mainScreen
initWithSize:scale:
setShouldApplyMask:
setShape:
prepareImagesForImageDescriptors:
imageForImageDescriptor:
imageWithCGImage:scale:orientation:
providerBundleIdentifier
_iconForPasswordProviderBundleIdentifier:
imageNamed:inBundle:
_applicationIconImageForBundleIdentifier:format:scale:
iconForPasswordLoginChoice:presentationContext:
iconForPublicKeyCredentialLoginChoiceWithPresentationContext:
T@"UIImage",R,N
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
encodeInteger:forKey:
setWithObjects:
decodeObjectOfClasses:forKey:
decodeIntegerForKey:
email
fullName
realUserStatus
setAccessToken:
refreshToken
setRefreshToken:
_user
_authorizationCode
_email
_fullName
_realUserStatus
_refreshToken
T@"NSData",C,N,V_accessToken
T@"NSData",C,N,V_refreshToken
T@"NSData",C,N,V_identityToken
T@"NSData",C,N,V_authorizationCode
T@"NSString",C,N,V_state
T@"NSString",C,N,V_email
T@"NSPersonNameComponents",C,N,V_fullName
Tq,N,V_realUserStatus
T@"NSString",R,C,N,V_user
initWithExtension:
_cancelButtonPressed
extension
localizedContainingName
setTitle:
_beginNonUIRequest:connectionHandler:
_beginRequestWithConnectionHandler:
systemBackgroundColor
navigationBar
setTranslucent:
prepareToCancelRequestWithHostContext:error:completion:
containingUrl
initWithURL:allowPlaceholder:error:
authorizedRequest
requestIdentifier
UUIDString
setTransactionID:
setBundleID:
setTeamID:
revokeAuthorizationWithContext:completion:
setNonce:
entitlements
objectForKey:ofClass:
setAppID:
initWithUpgradeContext:
performAuthorizationWithContext:completion:
prepareToCompleteUpgradeToSignInWithAppleRequestWithHostContext:userInfo:completion:
prepareToCompleteRequestWithHostContext:updatedCredential:userInfo:completion:
dismissRequestUI:
_nonUIRequestDidRequireUserInteraction
_shouldUseNonUIRequestTimer
_requestDidFailWithError:completion:
willMoveToParentViewController:
_serviceIdentifier
_newPassword
_accountModificationOperation
_signInWithAppleAuthorization
_accountModificationExtensionContextProxy
_userInfo
T@"<_ASAccountAuthenticationModificationHostViewControllerDelegate>",W,N,V_delegate
supportsStyle:
UTF8String
orderedSet
safari_browserDefaults
endMatchingExtensions:
_endExtensionDiscovery
_buildDomainToExtensionDictionaryWithSharedWebCredentialsDatabaseEntries:
getAllApprovedSharedWebCredentialsEntries:
beginMatchingExtensionsWithAttributes:completion:
domainByStrippingSubdomainWildcardPrefixIfNecessary:
domainIsProhibitedForSavingCredentials:
highLevelDomainHasSuiteOfAssociatedApps:
service
applicationProxyForBundleURL:
_notifyObservers:
boolForKey:
_beginExtensionDiscovery
removeObject:
accountModificationExtensionManagerExtensionListDidChange:
extensionForDomain:completionHandler:
addChangeObserver:
removeChangeObserver:
_dataConstructionQueue
_readOnlyQueue
_extensionMatchingToken
_domainToExtension
_extensions
_observers
_errorEncounteredDuringLastExtensionDiscovery
_mobileSafariUserDefaults
initWithURL:
canPerformAuthorizationWithURL:responseCode:useInternalExtensions:
authorizationProviderWithIdentityProviderURL:
canPerformAuthorization
_url
T@"NSURL",R,N,V_url
TB,R,N
initWithURL:callbackURLScheme:usingEphemeralSession:completionHandler:
initWithURL:callbackURLScheme:usingEphemeralSession:jitEnabled:completionHandler:
exceptionWithName:reason:userInfo:
safari_isEligibleforDirectSSO
setRequestedOperation:
initWithAuthorizationRequests:
setPresentationContextProvider:
_invalidate
_startDryRun:
setPrefersEphemeralWebBrowserSession:
presentationAnchorForWebAuthenticationSession:
windowScene
activationState
mainBundle
hasPrefix:
performRequests
startASWebAuthenticationSessionInWindow:dryRun:
cancel
isSessionStarted
performSelectorOnMainThread:withObject:waitUntilDone:
scheme
lowercaseString
setOriginatorBundleIdentifier:
isExtensionProcessWithAuditToken:completion:
handleSSOExtensionIdentifier:
resetSSOExtensionIdentifier
authorizationController:didCompleteWithAuthorization:
authorizationController:didCompleteWithError:
authorizationController:didCompleteWithCustomMethod:
presentationAnchorForAuthorizationController:
initWithURL:callbackURLScheme:completionHandler:
canStart
start
presentationContextProvider
prefersEphemeralWebBrowserSession
_authorizationController
_ssoProvider
_callbackURLScheme
_authenticationSession
_originalCompletionHandler
_referenceToSelf
_prefersEphemeralWebBrowserSession
_presentationContextProvider
T@"<ASWebAuthenticationPresentationContextProviding>",W,N,V_presentationContextProvider
TB,N,V_prefersEphemeralWebBrowserSession
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
setAs_navigationItem:
T@"UINavigationItem",&,N
_imageViewWithImage:
headerIconCornerRadius
setClipsToBounds:
iconBorderColor
iconBorderWidth
imageView
T@"UIImageView",R,N,V_imageView
setUser:
T@"NSString",C,N,V_user
_as_credentialProviderHostInterface
_as_credentialProviderExtensionInterface
prepareToCompleteRequestWithHostContext:credential:completion:
prepareToCompleteExtensionConfigurationRequestWithHost:completion:
prepareToCompleteRequestWithSelectedCredential:completion:
prepareToCompleteExtensionConfigurationRequestWithCompletion:
T@"<_ASExtensionHostContextDelegate>",W,N
T@"<_ASCredentialProviderExtensionHostContextDelegate>",W,N,V_delegate
_transports
T@"NSArray",&,N,V_transports
setTitleView:
_newStackView
_navigationBarHeaderHeight
constraintGreaterThanOrEqualToAnchor:constant:
constraintLessThanOrEqualToAnchor:
_setUpContexts
tableViewStyle
initWithFrame:style:
setAlwaysBounceVertical:
setShowsVerticalScrollIndicator:
tableViewRowHeight
setEstimatedRowHeight:
setSeparatorInsetReference:
_newContainerView
setTableHeaderView:
tableHeaderView
initWithEffect:
priority
_blurryTrayMinimumHeight
constraintLessThanOrEqualToSystemSpacingBelowAnchor:multiplier:
setNeedsLayout
_adjustForPositionOfScrollView:
viewSafeAreaInsetsDidChange
setNeedsUpdateConstraints
viewWillLayoutSubviews
viewDidLayoutSubviews
_setCompressedHeightForView:
_updateBlurForTray
systemLayoutSizeFittingSize:
_maximumContentHeight
setScrollEnabled:
preferredContentSizeCategory
contentOffset
setBackgroundEffects:
_isContentUnderTray
_indexPathForLastRow
rectForRowAtIndexPath:
convertRect:toView:
numberOfSections
_safeIndexWithCount:
numberOfRowsInSection:
navigationBarHeight
rectForSection:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
tableView:willDisplayCell:forRowAtIndexPath:
tableView:willDisplayHeaderView:forSection:
tableView:willDisplayFooterView:forSection:
tableView:didEndDisplayingCell:forRowAtIndexPath:
tableView:didEndDisplayingHeaderView:forSection:
tableView:didEndDisplayingFooterView:forSection:
tableView:heightForRowAtIndexPath:
tableView:heightForHeaderInSection:
tableView:heightForFooterInSection:
tableView:estimatedHeightForRowAtIndexPath:
tableView:estimatedHeightForHeaderInSection:
tableView:estimatedHeightForFooterInSection:
tableView:viewForHeaderInSection:
tableView:viewForFooterInSection:
tableView:accessoryTypeForRowWithIndexPath:
tableView:accessoryButtonTappedForRowWithIndexPath:
tableView:shouldHighlightRowAtIndexPath:
tableView:didHighlightRowAtIndexPath:
tableView:didUnhighlightRowAtIndexPath:
tableView:willSelectRowAtIndexPath:
tableView:willDeselectRowAtIndexPath:
tableView:didDeselectRowAtIndexPath:
tableView:canPerformPrimaryActionForRowAtIndexPath:
tableView:performPrimaryActionForRowAtIndexPath:
tableView:editingStyleForRowAtIndexPath:
tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:
tableView:editActionsForRowAtIndexPath:
tableView:leadingSwipeActionsConfigurationForRowAtIndexPath:
tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:
tableView:shouldIndentWhileEditingRowAtIndexPath:
tableView:willBeginEditingRowAtIndexPath:
tableView:didEndEditingRowAtIndexPath:
tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:
tableView:indentationLevelForRowAtIndexPath:
tableView:shouldShowMenuForRowAtIndexPath:
tableView:canPerformAction:forRowAtIndexPath:withSender:
tableView:performAction:forRowAtIndexPath:withSender:
tableView:canFocusRowAtIndexPath:
tableView:shouldUpdateFocusInContext:
tableView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInTableView:
tableView:selectionFollowsFocusForRowAtIndexPath:
tableView:shouldSpringLoadRowAtIndexPath:withContext:
tableView:shouldBeginMultipleSelectionInteractionAtIndexPath:
tableView:didBeginMultipleSelectionInteractionAtIndexPath:
tableViewDidEndMultipleSelectionInteraction:
tableView:contextMenuConfigurationForRowAtIndexPath:point:
tableView:previewForHighlightingContextMenuWithConfiguration:
tableView:previewForDismissingContextMenuWithConfiguration:
tableView:willPerformPreviewActionForMenuWithConfiguration:animator:
tableView:willDisplayContextMenuWithConfiguration:animator:
tableView:willEndContextMenuInteractionWithConfiguration:animator:
setTableView:
_isTableViewRequired
_blurryTray
_headerWidthConstraint
_footerWidthConstraint
_paneHeaderStackView
_paneFooterStackView
_headerPaneContext
_footerPaneContext
_tableView
T@"<ASCredentialRequestPaneViewControllerDelegate>",W,N,V_delegate
T@"UIStackView",R,N,V_paneHeaderStackView
T@"UIStackView",R,N,V_paneFooterStackView
T@"ASCredentialRequestPaneContext",R,N,V_headerPaneContext
T@"ASCredentialRequestPaneContext",R,N,V_footerPaneContext
T@"UITableView",&,N,V_tableView
Tq,R,N
setHeight:
setPreferredContentAlignment:
_setUpTitleLabel
_addBottomFillerView
_addTopFillerViewWithMargin:
_title
_subtitle
_icon
_subtitleSubPane
initWithPublicKeyCredentialManager:
imageNamed:inBundle:withConfiguration:
as_imageNamed:
credentialWithUser:password:
_password
T@"NSString",R,C,N,V_password
instantiateViewControllerWithInputItems:connectionHandler:
_extensionContextForUUID:
remoteObjectProxy
prepareCredentialListForServiceIdentifiers:completionHandler:
prepareInterfaceToProvideCredentialForIdentity:completionHandler:
_as_instantiateViewControllerWithConnectionHandler:
_as_auxiliaryRemoteObjectWithRequestID:
setSeparatorStyle:
_addHeaderSpacerViewWithCustomSpacingAfter:
_setUpContinueButton
_continueButtonPressed
_passkeyURLType
presentationContext
T@"ASCAuthorizationPresentationContext",R,N,V_presentationContext
bundleForClass:
T@"NSBundle",R,N
_finishWithSuccess:completion:
credentialProviderExtensionConfigurationViewControllerDidFinish:completion:
beginConfiguringExtension
T@"<_ASCredentialProviderExtensionConfigurationViewControllerDelegate>",W,N,V_delegate
_initWithProvider:relyingPartyIdentifier:challenge:name:userID:
createCredentialRegistrationRequestWithChallenge:name:userID:
initWithStyle:reuseIdentifier:
_setUpFormat
_setUpContent
_setUpAccessoryImageView
cellBackgroundConfiguration
setBackgroundConfiguration:
setSelectionStyle:
cellTitleColor
cellTitleFont
setMinimumScaleFactor:
cellSubtitleColor
cellSubtitleFont
cellIconTintColor
cellIconCornerRadius
cellIconSymbolConfiguration
_updateLayoutForCurrentContentSizeCategory
cellIconBackgroundColor
_configureImageViewForAppIcon
loginRowText
loginRowDetailText
setDetailText:
loginRowIconImage
setIconImage:
tertiaryLabelColor
_detailTextForPasswordLoginChoice:
_defaultPasskeyIcon
_publicKeyCredentialImageForPresentationContext:
_titleForPublicKeyCredentialAssertionWithName:identifier:
_defaultSecurityKeyIcon
_subtitleForPublicKeyCredentialAssertion
_cableIcon
substringWithRange:
_updateAccessoryImageView
_detailTextForPasswordLoginChoiceFromKeychain:
_detailTextForExternalPasswordLoginChoice:
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
_configureImageViewForSymbolImage
_emptyRadioButtonImage
sizeToFit
setAccessoryView:
accessoryView
_selectedRadioButtonImage
systemFillColor
cellIconMarginTrailing
_additionalLeadingSeparatorInset
setSeparatorInset:
iconImage
title
detailText
isSelectedLoginChoice
_authorizationProvider
_detailLabel
_iconImageView
_iconAndTextStackView
_isSelectedLoginChoice
T@"UIImage",&,N
TB,N,V_isSelectedLoginChoice
_invalidateNonUIRequestTimerIfNeeded
_endDelayingPresentation
leftAnchor
rightAnchor
_kill:
_as_setApplicationBackgroundBlock:
_beginDelayingPresentation:cancellationHandler:
_extensionRequestDidFinish:
_sf_addHandlerForRequestIdentifier:withBlock:
_setRemoteViewController:
setDismissOnBackground:
_nonUIRequestTimedOut
childViewControllerForHomeIndicatorAutoHidden
childViewControllerForScreenEdgesDeferringSystemGestures
childViewControllerForStatusBarHidden
childViewControllerForStatusBarStyle
childViewControllerForWhitePointAdaptivityStyle
dismissOnBackground
nonUIHostContext
_remoteViewController
_nonUIHostContext
_nonUIRequestTimer
_allowRequestingUIFromNonUIRequest
_dismissOnBackground
_extension
T@"NSExtension",R,N,V_extension
T@"NSExtensionContext",R,N,V_nonUIHostContext
TB,N,V_dismissOnBackground
decodeInt64ForKey:
initWithIdentifier:type:
encodeInt64:forKey:
_identifier
_type
T@"NSString",R,C,N,V_identifier
Tq,R,N,V_type
setCustomSpacingAfter:
superview
customSpacingAfter
_view
_customSpacingAfter
T@"UIView",R,N,V_view
Td,N,V_customSpacingAfter
T@"<_ASAccountAuthenticationModificationExtensionHostContextDelegate>",W,N,V_delegate
initWithKind:relyingPartyIdentifier:challenge:userVerificationPreference:allowedCredentials:
setChallenge:
setAllowedCredentials:
setUserVerificationPreference:
T@"NSArray",C,N
coreCredentialAssertionOptions
_challenge
_userVerificationPreference
_allowedCredentials
T@"ASCPublicKeyCredentialAssertionOptions",R,N
T@"NSArray",C,N,V_allowedCredentials
T@"NSData",C,N,V_challenge
T@"NSString",C,N,V_relyingPartyIdentifier
T@"NSString",&,N,V_userVerificationPreference
_sceneDidEnterBackground:
_hostDidEnterBackground:
viewIfLoaded
object
parentViewController
initWithViewController:block:
viewController
block
_viewController
_block
T@"UIViewController",R,W,N,V_viewController
T@?,R,N,V_block
presentedViewController
_as_applicationBackgroundBlock
_as_viewControllerToPresentFrom
T@?,C,N,S_as_setApplicationBackgroundBlock:
_passkeyDataForPasskeyCredentialID:
getAllLocalAuthenticatorCredentialsWithCredentialID:
getAllLocalAuthenticatorCredentials
boolValue
initWithBase64EncodedString:options:
deleteLocalAuthenticatorCredentialWithID:
setNameForLocalCredentialWithGroupAndID:credential:name:
exportLocalAuthenticatorCredentialWithID:error:
first
second
importLocalAuthenticatorCredential:error:
allPasskeysData
passkeyDataForPasskeyCredentialID:
deletePasskeyWithIdentifier:
updateUserVisibleName:forPasskeyWithIdentifier:
exportPasskeyCredentialWithID:
importPasskeyCredential:
T@"NSArray",R,C,N
_setBuiltinTransitionStyle:
setBackgroundImage:forBarMetrics:
paneBackgroundBlurEffect
insertSubview:atIndex:
setMaskedCorners:
_adjustedContentSizeForPopover:
_backdropView
initWithUser:serviceIdentifier:userInfo:
initWithUser:password:extension:serviceIdentifier:userInfo:
T@"NSString",R,N,V_password
T@"NSString",R,N,V_user
T@"ASCredentialServiceIdentifier",R,N,V_serviceIdentifier
T@"NSDictionary",R,N,V_userInfo
doNotHandle
complete
completeWithHTTPAuthorizationHeaders:
completeWithHTTPResponse:httpBody:
completeWithError:
completeWithAuthorizationResult:
presentAuthorizationViewControllerWithCompletion:
requestedOperation
httpHeaders
realm
extensionData
callerBundleIdentifier
authorizationOptions
isCallerManaged
callerTeamIdentifier
localizedCallerDisplayName
isUserInteractionEnabled
initWithAuthorizationRequest:
isUserInterfaceEnabled
authorizationRequest
_authorizationRequest
T@"SOAuthorizationRequest",R,N,V_authorizationRequest
T@"NSURL",R,N
T@"NSString",R,N
T@"NSDictionary",R,N
T@"NSData",R,N
callerManaged
TB,R,N,GisCallerManaged
userInterfaceEnabled
TB,R,N,GisUserInterfaceEnabled
initWithAuthorizationButtonType:authorizationButtonStyle:
defaultCornerRadius
setNeedsDisplay
_drawRect:inView:
_screen
_ak_buttonType
_ak_buttonStyle
initWithType:
setName:
setValue:forKey:
setFilters:
_createHighlightFilterIfNecessary
valueForKeyPath:
setValue:forKeyPath:
animationWithKeyPath:
ak_addAdditiveAnimation:
_performAnimationToSetHighlighted:
buttonWithType:style:
layerClass
Td,R
isAccessibilityElement
accessibilityTraits
accessibilityLabel
cornerRadius
_style
_highlightFilter
_cornerRadius
Td,N,V_cornerRadius
constraintLessThanOrEqualToConstant:
_performRequestsWithStyle:options:
safari_filterObjectsUsingBlock:
_authorizationRequestsHandledByAuthenticationServicesDaemon:
_shouldPerformRequestsWithAuthKit:
_authKitRequests
_performAuthKitRequests:options:
_performAuthorizationRequests:requestStyle:requestOptions:
enumerateObjectsUsingBlock:
value
nonce
requestedScopes
componentsJoinedByString:
setOperation:
setUrl:
setHttpHeaders:
setUseInternalExtensions:
setAuthorizationOptions:
setEnableUserInteraction:
setEnableEmbeddedAuthorizationViewController:
beginAuthorizationWithParameters:
setCredentialRequests:
setRequestOptions:
_authorizationFromAuthKitResult:
_publicErrorFromAuthKitError:
_authenticationServicesAgentProxy
cancelCurrentRequest
_authKitRequestFromAppleIDRequest:
setUserIdentifier:
setRequestedScopes:
JSONObjectWithData:options:error:
addEntriesFromDictionary:
statusCode
initWithURL:statusCode:HTTPVersion:headerFields:
_finishAppSSO
_authenticatedResponseFromHTTPResponse:httpBody:
_viewControllerForFullScreenPresentationFromView:
timerWithTimeInterval:repeats:block:
mainRunLoop
addTimer:forMode:
_presentViewController:sendingView:animated:
_onlyHasAppleIDRequest:
_convertCoreErrorToPublicError:
_requestContextWithRequests:error:
setRequestStyle:
performAuthorizationRequestsForContext:withCompletionHandler:
coreCredentialCreationOptions
initWithRequestTypes:
setAppleIDAuthorizationRequest:
setPlatformKeyCredentialCreationOptions:
setPlatformKeyCredentialAssertionOptions:
setSecurityKeyCredentialCreationOptions:
setSecurityKeyCredentialAssertionOptions:
setProxiedAppName:
setProxiedAppIdentifier:
setProxiedBundleIdentifier:
setProxiedTeamIdentifier:
setProxiedAssociatedDomains:
setProxiedIconData:
setProxiedIconScale:
setProxiedOriginDeviceName:
setProxySheetHeaderOverride:
setProxySheetTitleOverride:
setProxySheetSubtitleOverride:
authorizationDidNotHandle:
authorizationDidCancel:
authorizationDidComplete:
authorization:didCompleteWithHTTPAuthorizationHeaders:
authorization:didCompleteWithHTTPResponse:httpBody:
authorization:didCompleteWithAuthorizationResult:
authorization:didCompleteWithError:
authorization:presentViewController:withCompletion:
performAutoFillAssistedRequests
performRequestsWithOptions:
authorizationRequests
customAuthorizationMethods
setCustomAuthorizationMethods:
proxiedAppName
proxiedAppIdentifier
proxiedBundleIdentifier
proxiedTeamIdentifier
proxySheetHeaderOverride
proxySheetTitleOverride
proxySheetSubtitleOverride
_appSSOAuthorization
_appSSORequestURL
_appSSOPresentationAnchor
_appSSOViewController
_authorizationRequests
_customAuthorizationMethods
_proxiedAppName
_proxiedAppIdentifier
_proxiedBundleIdentifier
_proxiedTeamIdentifier
_proxiedAssociatedDomains
_proxiedIconData
_proxiedIconScale
_proxiedOriginDeviceName
_proxySheetHeaderOverride
_proxySheetTitleOverride
_proxySheetSubtitleOverride
T@"NSString",C,N,V_proxiedAppName
T@"NSString",C,N,V_proxiedAppIdentifier
T@"NSString",C,N,V_proxiedBundleIdentifier
T@"NSString",C,N,V_proxiedTeamIdentifier
T@"NSArray",C,N,V_proxiedAssociatedDomains
T@"NSData",C,N,V_proxiedIconData
T@"NSNumber",C,N,V_proxiedIconScale
T@"NSString",C,N,V_proxiedOriginDeviceName
T@"NSString",C,N,V_proxySheetHeaderOverride
T@"NSString",C,N,V_proxySheetTitleOverride
T@"NSString",C,N,V_proxySheetSubtitleOverride
T@"NSArray",R,N,V_authorizationRequests
T@"<ASAuthorizationControllerDelegate>",W,N,V_delegate
T@"<ASAuthorizationControllerPresentationContextProviding>",W,N,V_presentationContextProvider
T@"NSArray",C,N,V_customAuthorizationMethods
accountAuthenticationModificationController:didFailRequest:withError:
_performReplacePasswordWithSignInWithAppleRequest:
_showUpgradeToStrongPasswordPromptForRequest:
standardUserDefaults
_failRequestWithError:
_requestRemoteViewController:
applicationProxyForIdentifier:
alertControllerWithTitle:message:preferredStyle:
_performUpgradePasswordToStrongPasswordRequest:
actionWithTitle:style:handler:
addAction:
_viewControllerToPresentFrom
presentationAnchorForAccountAuthenticationModificationController:
accountAuthenticationModificationController:didSuccessfullyCompleteRequest:withUserInfo:
performRequest:
_accountAuthenticationModificationRemoteViewController
_request
_helperExtension
T@"<ASAccountAuthenticationModificationControllerDelegate>",W,N,V_delegate
T@"<ASAccountAuthenticationModificationControllerPresentationContextProviding>",W,N,V_presentationContextProvider
buttonWithType:
setTitle:forState:
T@"ASAccountAuthenticationModificationExtensionContext",R,N
setUserName:
setUserDisplayName:
setSupportedAlgorithmIdentifiers:
setAttestationPreference:
setDisplayName:
_displayName
_name
_attestationPreference
T@"ASCPublicKeyCredentialCreationOptions",R,N
T@"NSData",C,N,V_userID
T@"NSString",C,N,V_name
T@"NSString",C,N,V_displayName
T@"NSString",&,N,V_attestationPreference
credentialIdentityStoreIdentifier
sf_bundleIdentifierForContainingApp
removeCredentialIdentityStoreForApplication:completion:
_finishWithCredential:error:completion:
_credentialIdentity
T@"<_ASPasswordCredentialAuthenticationViewControllerDelegate>",W,N,V_delegate
_configurationForAlertToDeletePasswordFromSavedAccount:
_configurationForAlertToDeleteVerificationCodeFromSavedAccount:
_configurationForAlertToDeletePasskeyFromSavedAccount:
_titleStringForAlertToDeletePasswordFromSavedAccount:
_subtitleStringForAlertToDeletePasswordFromSavedAccount:
_initWithTitle:subtitle:buttonTitle:
_titleStringForAlertToDeletePasskeyFromSavedAccount:
_subtitleStringForAlertToDeletePasskeyFromSavedAccount:
_titleStringForAlertToDeleteVerificationCodeFromSavedAccount:
_subtitleStringForAlertToDeleteVerificationCodeFromSavedAccount:
_getInformationForSavedAccountsToDelete:numberOfPasswords:numberOfPasskeys:isDeletingVerificationCodes:
_titleStringForAlertToDeleteNumberOfPasswords:numberOfPasskeys:
_subtitleStringForAlertToDeleteNumberOfPasswords:numberOfPasskeys:isDeletingVerificationCodes:
_buttonTitleStringForAlertToDeleteNumberOfPasswords:numberOfPasskeys:
totpGenerators
_credentialDeletionStringForAlertToDeleteNumberOfPasswords:numberOfPasskeys:
_subtitleForDeletingNumberOfPasswordsWithVerificationCodes:
credentialTypes
configurationForDeleting:fromSavedAccount:
configurationForDeletingSavedAccounts:
subtitle
buttonTitle
_buttonTitle
T@"NSString",R,C,N,V_title
T@"NSString",R,C,N,V_subtitle
T@"NSString",R,C,N,V_buttonTitle
systemGray2Color
labelColor
_iconCornerRadiusForSize:
listGroupedCellConfiguration
tertiarySystemGroupedBackgroundColor
systemBlueColor
traitCollectionWithUserInterfaceStyle:
resolvedColorWithTraitCollection:
systemGrayColor
colorWithAlphaComponent:
_preferredFontForTextStyle:variant:
continuousCornerRadius
cellIconMarginLeading
T^{CGColor=},R,N
Td,R,N
T@"UIBlurEffect",R,N
T@"UIFont",R,N
T@"UIColor",R,N
T{CGSize=dd},R,N
T@"UIBackgroundConfiguration",R,N
T@"UIImageSymbolConfiguration",R,N
UUID
mutableCopy
hasTornDown
panel
_internalSemaphore
_identifiersToAssertionResponses
_selectPlatformAssertionCallback
_selectSecurityKeyAssertionCallback
_hasTornDown
_uuid
_panel
_sourceApplicationIdentifier
_authenticatedLAContext
_overrideError
T@"NSUUID",R,C,N,V_uuid
T@"<ASPublicKeyCredentialManagerDelegate>",W,N,V_delegate
T@"_WKWebAuthenticationPanel",&,N,V_panel
T@"NSString",C,N,V_sourceApplicationIdentifier
T@"NSDictionary",R,C,N
T@"LAContext",&,N,V_authenticatedLAContext
T@"NSError",C,N,V_overrideError
TB,R,N,V_hasTornDown
addCommitHandler:forPhase:
completeRequestWithSelectedCredential:completionHandler:
completeExtensionConfigurationRequest
initWithServiceIdentifier:user:recordIdentifier:
serviceIdentifierType
externalRecordIdentifier
owningExtensionState
allocWithZone:
setRank:
identityWithServiceIdentifier:user:recordIdentifier:
_recordIdentifier
_rank
_credentialIdentityStoreIdentifier
T@"SFExternalCredentialIdentityStoreIdentifier",R,N,V_credentialIdentityStoreIdentifier
T@"NSString",R,C,N,V_recordIdentifier
Tq,N,V_rank
setResidentKeyPreference:
setExcludedCredentials:
credentialParameters
setCredentialParameters:
_credentialParameters
_excludedCredentials
_residentKeyPreference
T@"NSArray",C,N,V_credentialParameters
T@"NSArray",C,N,V_excludedCredentials
T@"NSString",&,N,V_residentKeyPreference
_setUpTitlePane
_setUpMessagePane
_setUpButtonPane
_preferredFontForTextStyle:weight:
_enableBluetooth
enableBluetoothHandler
_enableBluetoothHandler
T@?,C,N,V_enableBluetoothHandler
removeTarget:action:forControlEvents:
T@"UILabel",&,N,V_titleLabel
credentialListViewControllerDidPrepareInterface:
_finishWithCredential:completion:
credentialListViewController:didFinishWithCredential:completion:
initWithExtension:serviceIdentifiers:
T@"<_ASCredentialListViewControllerDelegate>",W,N,V_delegate
_requestedScopes
_nonce
_requestedOperation
T@"NSArray",C,N,V_requestedScopes
T@"NSString",C,N,V_nonce
T@"NSString",C,N,V_requestedOperation
setUserInterfaceEnabled:
_userInterfaceEnabled
_authorizationOptions
T@"NSArray",C,N,V_authorizationOptions
TB,N,GisUserInterfaceEnabled,V_userInterfaceEnabled
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@24@0:8@16
v16@0:8
v20@0:8B16
@16@0:8
@32@0:8@16@24
@64@0:8@16@24{UIEdgeInsets=dddd}32
v32@0:8q16@?24
v32@0:8q16@?<v@?B@"NSError">24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v40@0:8@16@24@?32
v32@0:8@"NSDictionary"16@?<v@?>24
v40@0:8@"ASPasswordCredential"16@"NSDictionary"24@?<v@?>32
v32@0:8@"NSError"16@?<v@?>24
@24@0:8@?16
v48@0:8@16@24@32@40
v24@0:8@16
@"<_ASAccountAuthenticationModificationRemoteViewControllerDelegate>"
@"SOAuthorizationResult"
v40@0:8@16@24@32
@24@0:8Q16
v24@0:8@?16
v40@0:8@"NSDictionary"16@"NSError"24@"LAContext"32
@"NSString"24@0:8Q16
v24@0:8@?<v@?>16
v36@0:8B16B20B24@28
v24@0:8d16
@24@0:8d16
v28@0:8@16B24
v32@0:8d16@24
v40@0:8@16d24@32
@"UIStackView"
@"UIView"
@"LAUIAuthenticationView"
@"ASCredentialRequestPaneContext"
@"UILabel"
@"NSObject<OS_dispatch_group>"
@"ASCredentialRequestButton"
@"<ASCredentialRequestSubPaneConfirmButtonDelegate>"
@32@0:8@16Q24
d16@0:8
d24@0:8@16
d24@0:8@"<UIViewControllerContextTransitioning>"16
v24@0:8@"<UIViewControllerContextTransitioning>"16
@"<UIViewImplicitlyAnimating>"24@0:8@"<UIViewControllerContextTransitioning>"16
@20@0:8B16
@40@0:8@16@24@32
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
@"<UIViewControllerAnimatedTransitioning>"24@0:8@"UIViewController"16
@"<UIViewControllerInteractiveTransitioning>"24@0:8@"<UIViewControllerAnimatedTransitioning>"16
@"UIPresentationController"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
v36@0:8@16@24B32
Q24@0:8@16
q24@0:8@16
@48@0:8@16q24@32@40
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
v32@0:8@16@24
@"UITapGestureRecognizer"
@"NSLayoutConstraint"
@"UIViewController"
@"<ASCredentialRequestContainerViewControllerDelegate>"
@"<ASCredentialRequestPaneViewControllerDelegate>"
@"UIVisualEffectView"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@"NSData"16@0:8
v24@0:8@"NSData"16
@"NSData"
@24@0:8B16B20
v32@0:8@16q24
v40@0:8@16Q24@?32
v48@0:8@16@24q32@?40
v32@0:8@"_WKWebAuthenticationPanel"16q24
v40@0:8@"_WKWebAuthenticationPanel"16Q24@?<v@?@"NSString">32
v48@0:8@"_WKWebAuthenticationPanel"16@"NSArray"24q32@?<v@?@"_WKWebAuthenticationAssertionResponse">40
v32@0:8@"_WKWebAuthenticationPanel"16@?<v@?@"LAContext">24
v32@0:8@"_WKWebAuthenticationPanel"16@?<v@?q>24
@56@0:8@16@24@32q40@48
@48@0:8@16@24@32@40
@"NSUUID"56@0:8@"NSArray"16@"NSString"24@"<ASPublicKeyCredentialManagerDelegate>"32q40@"ASGlobalFrameIdentifier"48
@"NSUUID"48@0:8@"ASCPublicKeyCredentialCreationOptions"16@"LAContext"24@"<ASPublicKeyCredentialManagerDelegate>"32@"ASGlobalFrameIdentifier"40
v32@0:8@"ASCPlatformPublicKeyCredentialLoginChoice"16@"LAContext"24
@"NSUUID"24@0:8@"NSString"16
@"NSUUID"24@0:8@"ASGlobalFrameIdentifier"16
@"WBSPair"24@0:8@"NSUUID"16
v40@0:8@"WBSPublicKeyCredentialIdentifier"16@"LAContext"24@"NSUUID"32
v32@0:8@"NSUUID"16@?<v@?B>24
@"NSUUID"40@0:8@"ASCPublicKeyCredentialCreationOptions"16@"<ASPublicKeyCredentialManagerDelegate>"24@"ASGlobalFrameIdentifier"32
v24@0:8@"ASCSecurityKeyPublicKeyCredentialLoginChoice"16
v32@0:8@"NSUUID"16@"NSError"24
@"WBSPair"32@0:8@"ASCPublicKeyCredentialCreationOptions"16Q24
@"WBSPair"32@0:8@"ASCPublicKeyCredentialAssertionOptions"16Q24
@"<ASPasskeyAutoFillManagerDelegate>"16@0:8
v24@0:8@"<ASPasskeyAutoFillManagerDelegate>"16
@56@0:8Q16@24@32@40@48
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableDictionary"
@"NSMapTable"
@"<ASPasskeyAutoFillManagerDelegate>"
v48@0:8@"ASPasswordCredential"16@"ASCredentialServiceIdentifier"24@"NSDictionary"32@"NSUUID"40
v48@0:8@16@24@32@?40
v40@0:8@"_ASAccountAuthenticationModificationHostViewController"16@"NSDictionary"24@?<v@?>32
v48@0:8@"_ASAccountAuthenticationModificationHostViewController"16@"ASPasswordCredential"24@"NSDictionary"32@?<v@?>40
v24@0:8@"_ASAccountAuthenticationModificationHostViewController"16
v40@0:8@"_ASAccountAuthenticationModificationHostViewController"16@"NSError"24@?<v@?>32
@"_ASAccountAuthenticationModificationHostViewController"
@"ASPasswordCredential"
@"ASCredentialServiceIdentifier"
v24@0:8@"SFCredentialProviderExtensionManager"16
v24@0:8@"_ASPasswordCredentialAuthenticationViewController"16
v48@0:8@"_ASPasswordCredentialAuthenticationViewController"16@"ASPasswordCredential"24@"NSError"32@?<v@?>40
v48@0:8@16@24@?32@?40
v32@0:8@"<_ASAuthenticationProvider>"16@"UIViewController"24
v48@0:8@"<_ASAuthenticationProvider>"16@"NSDictionary"24@?<v@?>32@?<v@?>40
@"UIWindow"16@0:8
v32@0:8@"ASCredentialRequestConfirmButtonSubPane"16@"LAContext"24
v24@0:8@"ASCredentialRequestConfirmButtonSubPane"16
B24@0:8@"ASCredentialRequestConfirmButtonSubPane"16
q32@0:8@16q24
@32@0:8@16q24
B32@0:8@16@24
q40@0:8@16@24q32
v40@0:8@16q24@32
q32@0:8@"UITableView"16q24
@"UITableViewCell"32@0:8@"UITableView"16@"NSIndexPath"24
q24@0:8@"UITableView"16
@"NSString"32@0:8@"UITableView"16q24
B32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"24@0:8@"UITableView"16
q40@0:8@"UITableView"16@"NSString"24q32
v40@0:8@"UITableView"16q24@"NSIndexPath"32
v40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
@28@0:8@16B24
q16@0:8
@24@0:8q16
v24@0:8q16
v40@0:8@16@?24@?32
@"ASCAuthorizationPresentationContext"
@"ASCredentialRequestImageSubPane"
@"ASCredentialRequestConfirmButtonSubPane"
@"<ASCLoginChoiceProtocol>"
@"NSArray"
@"AKASAuthorizationProvider"
@"NSObject<OS_dispatch_queue>"
@"_ASPasswordCredentialAuthenticationViewController"
@"ASCPasswordCredential"
@"ASCredentialRequestInfoLabelSubPane"
v32@0:8@"CXCallObserver"16@"CXCall"24
@"CXCallObserver"
@"ASPublicKeyCredentialBase"
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
{CGSize="width"d"height"d}
@32@0:8Q16@24
@"UITextField"
@"UIActivityIndicatorView"
@"ASCredentialRequestButtonContinue"
@"<ASPasswordAuthenticationPaneViewControllerDelegate>"
v32@0:8@16d24
@"ASCredentialRequestPaneViewController"
@"ASCABLELoginChoice"
@"NSString"
@"_ASCABLEQRCodeImageView"
@"_ASCABLEQRCodeBadgeView"
@"UIImage"
@"UIImageView"
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"SFCredentialProviderExtensionHelperProxy"
v56@0:8@16@24@32@40@?48
v40@0:8@"ASPasswordCredential"16@"ASCredentialServiceIdentifier"24@"NSDictionary"32
v48@0:8@"ASPasswordCredential"16@"ASCredentialServiceIdentifier"24@"NSDictionary"32@?<v@?>40
v48@0:8@"ASCredentialServiceIdentifier"16@"ASPasswordCredential"24@"NSString"32@"NSDictionary"40
v56@0:8@"ASCredentialServiceIdentifier"16@"ASPasswordCredential"24@"NSString"32@"NSDictionary"40@?<v@?>48
@"NSHTTPURLResponse"
@"NSTimer"
@"<ASAuthorizationProvider>"
@"<ASAuthorizationCredential>"
v40@0:8@"ASCredentialRequestPaneViewController"16@"<ASCCredentialProtocol>"24@"NSError"32
v48@0:8@"ASCredentialRequestPaneViewController"16@"<ASCLoginChoiceProtocol>"24@"LAContext"32@?<v@?@"<ASCCredentialProtocol>"@"NSError">40
v24@0:8@"ASCredentialRequestPaneViewController"16
B24@0:8@"ASCredentialRequestContainerViewController"16
v24@0:8@"ASCredentialRequestContainerViewController"16
v40@0:8@"ASPasswordAuthenticationPaneViewController"16@"NSString"24@?<v@?@"<ASCCredentialProtocol>"@"NSError">32
v32@0:8@"ASPasswordAuthenticationPaneViewController"16@"ASCPasswordCredential"24
@"ASNavigationController"
@"SFWirelessSettingsController"
@"<ASAuthorizationViewControllerDelegate>"
@40@0:8@16{CGSize=dd}24
@48@0:8@16d24{CGSize=dd}32
@"NSPersonNameComponents"
v40@0:8@"NSExtensionContext<_ASExtensionHostContext>"16@"NSError"24@?<v@?>32
v40@0:8@"_ASAccountAuthenticationModificationExtensionHostContext"16@"NSDictionary"24@?<v@?>32
v48@0:8@"_ASAccountAuthenticationModificationExtensionHostContext"16@"ASPasswordCredential"24@"NSDictionary"32@?<v@?>40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"ASAuthorizationAppleIDCredential"@"NSError">32
v24@0:8@"_ASAccountAuthenticationModificationExtensionHostContext"16
@"AKAuthorization"
@"<_ASAccountAuthenticationModificationExtensionContextProtocol>"
@"NSDictionary"
@"<_ASAccountAuthenticationModificationHostViewControllerDelegate>"
B24@0:8q16
@"NSMutableOrderedSet"
@"NSUserDefaults"
@"NSURL"
v48@0:8{?=[8I]}16
v32@0:8@"ASAuthorizationController"16@"ASAuthorization"24
v32@0:8@"ASAuthorizationController"16@"NSError"24
v32@0:8@"ASAuthorizationController"16@"NSString"24
@"UIWindow"24@0:8@"ASAuthorizationController"16
@40@0:8@16@24@?32
@44@0:8@16@24B32@?36
@48@0:8@16@24B32B36@?40
B20@0:8B16
@"ASAuthorizationController"
@"ASAuthorizationSingleSignOnProvider"
@"SFAuthenticationSession"
@"ASWebAuthenticationSession"
@"<ASWebAuthenticationPresentationContextProviding>"
v32@0:8@"ASPasswordCredential"16@?<v@?>24
@"<_ASExtensionHostContextDelegate>"16@0:8
v24@0:8@"<_ASExtensionHostContextDelegate>"16
@"<_ASCredentialProviderExtensionHostContextDelegate>"
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
v40@0:8@16@24q32
d32@0:8@16@24
d32@0:8@16q24
q32@0:8@16@24
B48@0:8@16:24@32@40
v48@0:8@16:24@32@40
B40@0:8@16@24@32
@48@0:8@16@24{CGPoint=dd}32
v40@0:8@"UITableView"16@"UITableViewCell"24@"NSIndexPath"32
v40@0:8@"UITableView"16@"UIView"24q32
d32@0:8@"UITableView"16@"NSIndexPath"24
d32@0:8@"UITableView"16q24
@"UIView"32@0:8@"UITableView"16q24
q32@0:8@"UITableView"16@"NSIndexPath"24
v32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSString"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"32@0:8@"UITableView"16@"NSIndexPath"24
@"UISwipeActionsConfiguration"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
B48@0:8@"UITableView"16:24@"NSIndexPath"32@40
v48@0:8@"UITableView"16:24@"NSIndexPath"32@40
B32@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24
v40@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UITableView"16
B40@0:8@"UITableView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
v24@0:8@"UITableView"16
@"UIContextMenuConfiguration"48@0:8@"UITableView"16@"NSIndexPath"24{CGPoint=dd}32
@"UITargetedPreview"32@0:8@"UITableView"16@"UIContextMenuConfiguration"24
v40@0:8@"UITableView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionCommitAnimating>"32
v40@0:8@"UITableView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionAnimating>"32
q24@0:8q16
@"UITableView"
v32@0:8@"NSArray"16@?<v@?>24
v24@0:8@"ASPasswordCredentialIdentity"16
v32@0:8@"ASPasswordCredentialIdentity"16@?<v@?>24
v40@0:8@"_ASCredentialProviderExtensionHostContext"16@"ASPasswordCredential"24@?<v@?>32
v32@0:8@"_ASCredentialProviderExtensionHostContext"16@?<v@?>24
v28@0:8B16@?20
@"<_ASCredentialProviderExtensionConfigurationViewControllerDelegate>"
@"NSExtensionContext<_ASExtensionHostContext>"
@"NSExtension"
@"<_ASAccountAuthenticationModificationExtensionHostContextDelegate>"
v24@0:8@"NSString"16
@"NSArray"16@0:8
v24@0:8@"NSArray"16
@32@0:8@16@?24
@?16@0:8
@"NSArray"24@0:8@"NSData"16
v32@0:8@"NSString"16@"WBSPublicKeyCredentialIdentifier"24
v24@0:8@"WBSPublicKeyCredentialIdentifier"16
@"WBSPair"24@0:8@"NSString"16
@"NSString"24@0:8@"WBSPair"16
{CGSize=dd}32@0:8{CGSize=dd}16
@56@0:8@16@24@32@40@48
@"SOAuthorizationRequest"
@32@0:8q16q24
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@"CAFilter"
v24@0:8@"SOAuthorization"16
v32@0:8@"SOAuthorization"16@"NSDictionary"24
v40@0:8@"SOAuthorization"16@"NSHTTPURLResponse"24@"NSData"32
v32@0:8@"SOAuthorization"16@"SOAuthorizationResult"24
v32@0:8@"SOAuthorization"16@"NSError"24
v40@0:8@"SOAuthorization"16@"UIViewController"24@?<v@?B@"NSError">32
v32@0:8q16Q24
v32@0:8@16Q24
v24@0:8Q16
v40@0:8@16q24Q32
@32@0:8@16^@24
@"SOAuthorization"
@"UIWindow"
@"ASCAgentProxy"
@"<ASAuthorizationControllerDelegate>"
@"<ASAuthorizationControllerPresentationContextProviding>"
@"NSNumber"
v40@0:8@"_ASAccountAuthenticationModificationRemoteViewController"16@"NSDictionary"24@?<v@?>32
v48@0:8@"_ASAccountAuthenticationModificationRemoteViewController"16@"ASPasswordCredential"24@"NSDictionary"32@?<v@?>40
v24@0:8@"_ASAccountAuthenticationModificationRemoteViewController"16
v40@0:8@"_ASAccountAuthenticationModificationRemoteViewController"16@"NSError"24@?<v@?>32
v32@0:8@"_ASAccountAuthenticationModificationRemoteViewController"16@"NSError"24
@"_ASAccountAuthenticationModificationRemoteViewController"
@"ASAccountAuthenticationModificationRequest"
@"ASAccountAuthenticationModificationController"
@"<ASAccountAuthenticationModificationControllerDelegate>"
@"<ASAccountAuthenticationModificationControllerPresentationContextProviding>"
@40@0:8@16@24:32
@"ASPasswordCredentialIdentity"
@"<_ASPasswordCredentialAuthenticationViewControllerDelegate>"
@32@0:8Q16Q24
@36@0:8Q16Q24B32
v48@0:8@16^Q24^Q32^B40
^{CGColor=}16@0:8
d32@0:8{CGSize=dd}16
@"NSObject<OS_dispatch_semaphore>"
@"NSUUID"
@"<ASPublicKeyCredentialManagerDelegate>"
@"_WKWebAuthenticationPanel"
@"LAContext"
@"NSError"
@"SFExternalCredentialIdentityStoreIdentifier"
@64@0:8@16@24@32@40@48@56
v32@0:8@16:24
@"_ASIncomingCallObserver"
@"<_ASCredentialListViewControllerDelegate>"
com.apple.AuthenticationServices.AuthorizationError
ASAuthorizationAppleIDCredentialRevokedNotification
v24@?0q8@"NSError"16
ASAccountAuthenticationModificationServiceViewController
com.apple.SafariViewService
square.and.arrow.up
{square.and.arrow.up}
ASAuthorizationControllerContinueButton
v8@?0
AuthKit
WatchProxAuth
Sign Up Not Completed
Continue
v20@?0B8@"LAContext"12
v24@?0@"NSDictionary"8@"NSError"16
exclamationmark.circle
Continue with Passcode
Continue with Password
Done
Signing in
person.badge.key.fill
A more secure alternative to passwords for signing in to online accounts.
A passkey is a more secure sign-in method than a traditional password. Passkeys use iCloud to sync across your devices. @about-passkeys-link@
@about-passkeys-link@
v12@?0B8
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
credentialID
<%@: %p; isEnabled=%@; supportsIncrementalUpdates=%@>
@"ASCPlatformPublicKeyCredentialLoginChoice"16@?0@"_WKWebAuthenticationAssertionResponse"8
v16@?0@"_WKWebAuthenticationAssertionResponse"8
@"ASCSecurityKeyPublicKeyCredentialLoginChoice"16@?0@"_WKWebAuthenticationAssertionResponse"8
@"_WKPublicKeyCredentialRequestOptions"16@?0@"ASCPublicKeyCredentialAssertionOptions"8
https://
v24@?0@"_WKAuthenticatorAssertionResponse"8@"NSError"16
@"_WKPublicKeyCredentialParameters"16@?0@"NSNumber"8
@"_WKPublicKeyCredentialDescriptor"16@?0@"ASCPublicKeyCredentialDescriptor"8
v24@?0@"_WKAuthenticatorAttestationResponse"8@"NSError"16
@"NSNumber"16@?0@"NSString"8
Did not find a valid extension for request.
v24@?0@"NSExtension"8@"NSError"16
Did not find Account Authentication Modification extension.
v16@?0@"NSExtension"8
iCloud Keychain must be enabled to perform strong password upgrades.
Discovered extension %@ does not support strong password upgrades.
Calling process is not entitled
com.apple.AuthenticationServicesCore.AuthorizationErrorAlertQueue
Use Security Key
Save on Another Device
Sign In with Another Device
Other Options
Other Sign In Options
Manually enter password
B16@?0@"<ASCLoginChoiceProtocol>"8
v24@?0@"<ASCCredentialProtocol>"8@"NSError"16
Select an account to continue
rawClientDataJSON
baseCredential
rawAttestationObject
ASExtensionErrorDomain
ASExtensionLocalizedFailureReasonErrorKey
Sign In (Manual password entry view controller)
Enter a PIN to unlock your security key.
User
Password
AuthenticationServicesIncorrectPinEntryAnimation
DeviceClassNumber
Insert and activate your security key, or bring it near the top of your iPhone.
Insert and activate your security key.
transform
provideCredentialWithoutUserInteraction(for:)
-provideCredentialWithoutUserInteractionForIdentity:
CABLEQRCodeContentsColor
ASCredentialIdentityStoreErrorDomain
v20@?0B8@"NSError"12
v16@?0@"SFCredentialProviderExtensionState"8
algorithm
v16@?0@"NSError"8
state
access_token
id_token
v32@?0@"NSString"8@16^B24
<%@: %p, state: %@, accessToken: %@, identityToken: %@, authorizedScopes: %@, authenticatedResponse: %@, privateKeys: %@>
rawAuthenticatorData
userID
signature
v16@?0@"NSTimer"8
Make sure both devices are connected to the internet and have Bluetooth turned on.
full_name
email
<%@: %p { provider: %@ }>
<%@: %p { provider: %@, credential: %@ }>
v16@?0@"NSString"8
No view controller specified for request.
Unable to sign in
The operation could not be completed. Please try again.
apple-internal-install
(Internal only: %@)
v24@?0@"ASCAuthorizationPresentationContext"8@"NSError"16
Sign In
KeyIcon-60
ASAuthorizationAppleIDCredential.m
Invalid parameter not satisfying: %@
user
authorizedScopes
<%@: %p { userIdentifier: %@, authorizedScopes: %@ }>
_user
_state
_authorizedScopes
_authorizationCode
_identityToken
_email
_fullName
_realUserStatus
v16@?0@"<_ASAccountAuthenticationModificationExtensionContextProtocol>"8
Cannot request Sign in with Apple authorization in the middle of a strong password upgrade.
Couldn't get application record while fetching authorization.
application-identifier
Host view controller deallocated.
v24@?0@"AKAuthorization"8@"NSError"16
User tapped cancel on Sign in with Apple sheet.
EnableSFAppAccountAuthenticationModificationExtension
com.apple.AuthenticationServices.%@.%p
com.apple.AuthenticationServices.ReadOnly.%@.%p
v16@?0@"NSArray"8
v24@?0@"NSArray"8@"NSError"16
apple.com
com.apple.AuthenticationServices.WebAuthenticationSession
The provided scheme is not valid. A scheme should not include special characters such as ":" or "/".
v24@?0@"NSURL"8@"NSError"16
Cannot start ASWebAuthenticationSession without providing presentation context. Set presentationContextProvider before calling -start.
The UIWindowScene for the returned window was not in the foreground active state.
com.apple.
SFAuthenticationSession
Class getSFAuthenticationSessionClass(void)_block_invoke
ASWebAuthenticationSessionIOS.m
Unable to find class %s
void *SafariServicesLibrary(void)
transports
v32@?0@"<NSCopying>"8@"UIViewController"16@"NSError"24
Your iPad needs to connect to this device in order to save a passkey.
Your iPod touch needs to connect to this device in order to save a passkey.
Your iPhone needs to connect to this device in order to save a passkey.
Your iPad needs to connect to this device in order to sign in with a passkey.
Your iPod touch needs to connect to this device in order to sign in with a passkey.
Your iPhone needs to connect to this device in order to sign in with a passkey.
Your iPad needs to connect to this device in order to sign in with or save a passkey.
Your iPod touch needs to connect to this device in order to sign in with or save a passkey.
Your iPhone needs to connect to this device in order to sign in with or save a passkey.
v16@?0@"<_ASCredentialProviderExtensionContextProtocol>"8
com.apple.AuthenticationServices
AuthenticationSession
Authorization
CredentialProviderExtension
Keychain
Passkeys
AccountAuthenticationModificationExtension
No user name
iCloud Keychain
Synced across your Apple devices
Security key
Use an external security key
iPhone, iPad, or Android device
Save a passkey on a device with a camera
Use passkey from a device with a camera
Credential (%@)
For this app
For this website
qrcode.viewfinder
mediastick
circle
checkmark.circle.fill
v32@?0@"NSUUID"8@"UIViewController"16@"NSError"24
get-task-allow
ASCredentialServiceIdentifierValue
ASCredentialServiceIdentifierType
domain
<%@: %p; type=%@; identifier=%@>
@"ASCPublicKeyCredentialDescriptor"16@?0@"ASAuthorizationPlatformPublicKeyCredentialDescriptor"8
_UIViewServiceHostDidEnterBackgroundNotification
@16@?0@"NSDictionary"8
_WKLocalAuthenticatorCredentialUserHandleKey
preferred
required
discouraged
none
direct
indirect
enterprise
configuration_removed
direct_request
_type
_style
highlightFilter
inputColor
filters.highlightFilter.inputColor
Continue with Apple
Sign up with Apple
Sign in with Apple
void _ASAuthorizationButtonInitialize(ASAuthorizationAppleIDButton *__strong)
ASAuthorizationAppleIDButton.m
self
ASAuthorizationController.m
authorizationRequests.count
B16@?0@"ASAuthorizationRequest"8
Unexpected failure.
"%@" does not support AutoFill assistance.
v32@?0@"ASAuthorizationRequest"8Q16^B24
nonce
scope
v32@?0@"NSString"8Q16^B24
HTTP/1.1
Passkeys do not support attestation.
No algorithms specified for ASAuthorizationSecurityKeyPublicKeyCredentialRegistrationRequest.
All Public Key Credential requests must use the same relyingPartyIdentifier.
Proxy sheet overrides are only available for security key requests.
Found duplicate requests. Only one of each type of request is currently supported.
Registration requests cannot be used with other types of requests.
com.apple.AuthenticationServicesUI.AccountAuthenticationModificationExtensionHelper
Cannot start another Account Authentication Modification request until the current request finishes.
Received request is not a valid ASAccountAuthenticationModificationRequest subclass.
v24@?0@"UIViewController"8@"NSError"16
ASDebugASAccountAuthenticationModificationControllerUsesSafariViewService
v24@?0@"_ASAccountAuthenticationModificationRemoteViewController"8@"NSError"16
The new password will be saved to your iCloud Keychain and will AutoFill on all of your devices. You can view and remove saved passwords in Settings > Passwords, or by asking Siri.
Change to Strong Password
v16@?0@"UIAlertAction"8
Not Now
No presentation anchor provided to show strong password upgrade UI.
No presentation anchor provided to show extension UI.
convertAccountToSignInWithAppleWithoutUserInteractionForServiceIdentifier(for:existingCredential:userInfo:)
-convertAccountToSignInWithAppleWithoutUserInteractionForServiceIdentifier:existingCredential:userInfo:
prepareInterfaceToConvertAccountToSignInWithAppleForServiceIdentifier(serviceIdentifier:existingCredential:userInfo:)
-prepareInterfaceToConvertAccountToSignInWithAppleForServiceIdentifier:existingCredential:userInfo:
changePasswordWithoutUserInteraction(serviceIdentifier:credential:newPassword:userInfo:)
-changePasswordWithoutUserInteractionForServiceIdentifier:existingCredential:newPassword:userInfo:
prepareInterfaceToChangePasswordForServiceIdentifier(serviceIdentifier:credential:newPassword:userInfo:)
-prepareInterfaceToChangePasswordForServiceIdentifier:existingCredential:newPassword:userInfo:
Delete Password
Delete Passkey
Delete Verification Code
Delete Password (alert title)
Delete Verification Code (alert title)
Delete Passkey (alert title)
Delete Password and Passkey
Delete Passwords and Passkeys
Delete Passkeys
Delete Passwords
Before deleting this password, visit the associated website to turn off the verification code. Otherwise, you may no longer be able to sign in.
Before deleting these %zu passwords, visit the associated websites to turn off verification codes. Otherwise, you may no longer be able to sign in.
Delete
Delete %zu Passkeys
Delete %zu Passwords
@"ASCPublicKeyCredentialDescriptor"16@?0@"ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor"8
serviceIdentifier
recordIdentifier
rank
credentialIdentityStoreIdentifier
<%@: %p; user=%@; serviceIdentifier=%@>
@"NSNumber"16@?0@"ASAuthorizationPublicKeyCredentialParameters"8
Bluetooth Off
Turn on Bluetooth
To sign in to another device using a passkey, your iPad needs to have Bluetooth turned on.
To sign in to another device using a passkey, your iPod touch needs to have Bluetooth turned on.
To sign in to another device using a passkey, your iPhone needs to have Bluetooth turned on.
To save a passkey on another device, your iPad needs to have Bluetooth turned on.
To save a passkey on another device, your iPod touch needs to have Bluetooth turned on.
To save a passkey on another device, your iPhone needs to have Bluetooth turned on.
To save a passkey on another device, your Mac needs to have Bluetooth turned on.
To sign in with a passkey from another device, your iPad needs to have Bluetooth turned on.
To sign in with a passkey from another device, your iPod touch needs to have Bluetooth turned on.
To sign in with a passkey from another device, your iPhone needs to have Bluetooth turned on.
To sign in with a passkey from another device, your Mac needs to have Bluetooth turned on.
implicit
login
refresh
logout
333333
@ffffff
V@333333
@ffffff
?333333
?ffffff
pw@333333
Error enabling biometrics in credential picker: %{public}@
Biometric authentication not available. Falling back to passcode.
Passcode authentication in ASAuthorizationController credential picker failed with error: %{public}@
Asked to show biometric view without any biometrics available.
Error disabling biometrics UI: %{public}@
ASCredentialRequestConfirmButtonSubPane already in processing state, ignoring attempt.
Biometric auth failed or locked out. Switching to passcode authentication.
Biometric auth failed with error: %{public}@
Exclude credentials matched.
Dismissing operation %{public}@ with result %ld.
Operation for panel %p already dismissed.
Providing LAContext %p for operation %{public}@.
Requesting PIN for security key for operation %{public}@.
Received unexpected assertion options.
Assertion completed: %ld.
Assertion failed: %{public}@
Replacing error %{public}@ with %{public}@
Not requesting platform credentials.
Platform authenticator not available.
Could not find assertion for identifier: %{public}@
Passkey AutoFill request for invalid frame identifier: %{public}@
Asked to present caBLE for AutoFill operation %{public}@
Could not find operation.
Asked to cancel operation %{public}@, override error: %{public}@
Completion registration: %lu.
Creating panel %p for %{public}@.
Beginning operation %{public}@ for %{public}@.
Tearing down operation %{public}@.
Unexpectedly tried to read operation for unknown panel: %p
Unexpectedly tried to read operation for unknown UUID: %{public}@
Found unknown resident key preference: %ld
Ignoring unknown attestation preference "%{public}@"
Ignoring unknown user verification preference "%{public}@"
Failed to get bundle record for host application due to error: %{public}@
The caller is not entitled to coordinate account authentication modification extension requests
Deleted credential from Keychain after upgrading to Sign in with Apple.
Use Security Key button tapped but no security key login choice is available. Failing request.
Use caBLE button tapped but no caBLE login choice is available. Failing request.
Failed to get application name with error: %{public}@
authenticated for external password login choice but no credential is available
No credential provider extension available
Did not receive any external password credential because user canceled
Did not receive any external password credential because of error: %@
Biometric authentication in ASAuthorizationController credential picker failed.
Password authentication button pressed but selected login choice is not a Sign in with Apple login choice
Showing alert (%@) failed, user notification is nil!. Error: %d
Authentication provider tried to pop view controller but it was not the top view controller in the navigation stack
Asked to present unsupported error: %{public}@.
Class %{public}s must override %{public}s. Canceling extension request.
Class %{public}s's implementation of %{public}s should not call super. Canceling extension request.
Found credential of unexpected type: %{private}@
Rejecting update with no login choices.
Couldn't update interface because a new request view controller could not be created for the new login choices.
No request view controller specified for credential request.
Starting caBLE client: bluetoothEnabled: %{bool}d
Enabling Bluetooth
Starting caBLE authenticator: bluetoothEnabled: %{bool}d
Could not get bundle record to get icon for credential with error: %{public}@.
Could not get icon for password provider
Failed to get application record to revoke authorization with error: %{public}@
Authorization controller successfully revoked the upgrade authorization.
Authorization controller attempted to revoke upgrade authorization and failed with error: %@
Failed to get application record to request authorization due to error: %{public}@
Error when creating Sign in with Apple Authorization: %{public}@
Could not retrieve bundle identifier from %@
The provided scheme is not valid. A scheme should not include special characters such as ":" or "/".
Sending request direct to SSO extension.
%{public}@ Please adopt the new API as soon as possible (rdar://50384281).
Attempted to set ASNavigationItem on iOS. ASNavigationItem is UINavigationItem on iOS and is a readonly property.
Device does not support transport: %{public}@. Ignoring.
Could not get bundle record to fetch password manager name error: %{public}@.
Failed to get remote view controller: %{public}@
Extension would ordinarily be killed due to timeout, but is kept alive for debugging
Killing extension due to timeout during non-UI request
Extension requires user interaction - re-running with UI
Failed to export passkey (%{private}@): %@
Failed to import passkey: %{public}@
Timed out presenting SSO authorization view controller.
ASAuthorizationController credential request failed with error: %{public}@
Rejecting invalid requests.
Found request for unexpected type: %{private}@
Failed to find helper extension to perform Account Authentication Modification Extension requests with error %{public}@.
Failed to get remote view controller from helper extension: %{public}@
No presentation anchor provided to strong password upgrade UI.
No presentation anchor provided to show extension UI.
Refusing to send credential identity with store identifier [%{public}@] to to extension with store identifier [%{public}@]
Extension did not find a credential corresponding the identity. Invalidating the identity store.
Failed to remove credential identity store with error: %{public}@
softlink:r:path:/System/Library/Frameworks/SafariServices.framework/SafariServices
ASCredentialRequestButtonContinue
ASNSLayoutConstraintExtras
ASAuthorizationAppleIDProvider
AKAuthorizationNotificationHandler
AKAdaptiveServiceInterface
ASAuthorizationProvider
NSObject
ASAccountAuthenticationModificationRemoteViewControllerProtocol
_ASAccountAuthenticationModificationRemoteViewController
ASAuthorizationProviderExtensionAuthorizationResult
_ASPasskeysLearnMoreContentViewController
ASCredentialRequestConfirmButtonSubPane
LAUIAuthenticationDelegate
ASCredentialRequestInfoLabelSubPane
_ASPasskeysLearnMoreContent
ASCredentialRequestContainerViewControllerAnimator
UIViewControllerAnimatedTransitioning
ASCredentialRequestContainerViewController
UIViewControllerTransitioningDelegate
UINavigationControllerDelegate
ASAuthorizationPlatformPublicKeyCredentialDescriptor
ASAuthorizationPublicKeyCredentialDescriptor
NSSecureCoding
NSCoding
NSCopying
ASCredentialIdentityStoreState
ASPublicKeyCredentialManager
_WKWebAuthenticationPanelDelegate
ASPublicKeyCredentialManagerInterface
ASAccountAuthenticationModificationServiceViewControllerProtocol
ASAccountAuthenticationModificationServiceViewController
_ASAccountAuthenticationModificationHostViewControllerDelegate
ASCredentialPickerPaneViewController
SFCredentialProviderExtensionManagerObserver
_ASPasswordCredentialAuthenticationViewControllerDelegate
_ASAuthenticationPresentationProvider
ASCredentialRequestSubPaneConfirmButtonDelegate
UITableViewDataSource
_ASIncomingCallObserver
CXCallObserverDelegate
ASPublicKeyCredentialBase
ASPublicKeyCredential
ASAuthorizationCredential
ASAuthorizationSecurityKeyPublicKeyCredentialRegistration
ASAuthorizationPublicKeyCredentialRegistration
_ASInsetTextField
ASPasswordAuthenticationPaneViewController
ASCredentialProviderViewController
AuthenticationServicesExtras
ASCredentialRequestPaneContext
ASCredentialRequestCABLEClientViewController
_ASCABLEQRCodeView
_ASCABLEQRCodeImageView
_ASCABLEQRCodeBadgeView
_ASCABLEQRCodeBadgePlatterView
ASAuthorizationSecurityKeyPublicKeyCredentialProvider
ASCredentialIdentityStore
ASAuthorizationPublicKeyCredentialParameters
ASAccountAuthenticationModificationExtensionContext
_ASAccountAuthenticationModificationExtensionContextProtocol
ASAuthorizationSingleSignOnCredential
ASAuthorizationSecurityKeyPublicKeyCredentialAssertion
ASAuthorizationPublicKeyCredentialAssertion
ASCredentialRequestCABLEConnectingViewController
ASAuthorization
ASAuthorizationViewController
ASCredentialRequestPaneViewControllerDelegate
ASCredentialRequestContainerViewControllerDelegate
ASPasswordAuthenticationPaneViewControllerDelegate
ASCredentialRequestIconGenerator
ASAuthorizationAppleIDCredential
_ASAccountAuthenticationModificationHostViewController
_ASAccountAuthenticationModificationExtensionHostContextDelegate
_ASExtensionHostContextDelegate
ASAuthorizationRequest
_ASAccountAuthenticationModificationExtensionManager
ASAuthorizationSingleSignOnProvider
ASWebAuthenticationSession
ASAuthorizationControllerDelegate
ASAuthorizationControllerPresentationContextProviding
ASCredentialRequestImageSubPane
ASAuthorizationAppleIDRequest
_ASCredentialProviderExtensionHostContext
_ASCredentialProviderExtensionHostContextProtocol
_ASExtensionHostContext
ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor
ASCredentialRequestPaneViewController
UITableViewDelegate
UIScrollViewDelegate
_ASNavigationTitleView
ASCredentialRequestBasicPaneViewController
ASImageExtras
ASPasswordCredential
_ASCredentialProviderExtensionContextProtocol
ASCredentialRequestCABLEConsentViewController
ASNSBundleExtras
_ASCredentialProviderExtensionConfigurationViewController
_ASCredentialProviderExtensionHostContextDelegate
ASAuthorizationPlatformPublicKeyCredentialProvider
ASCredentialRequestLoginChoiceCell
ASAccountAuthenticationModificationRequest
ASAuthorizationPlatformPublicKeyCredentialAssertion
_ASExtensionViewController
ASCredentialServiceIdentifier
ASCredentialRequestSubPane
_ASAccountAuthenticationModificationExtensionHostContext
_ASAccountAuthenticationModificationExtensionHostContextProtocol
ASAuthorizationPlatformPublicKeyCredentialAssertionRequest
ASAuthorizationPublicKeyCredentialAssertionRequest
ASBackgroundObserver
ASAuthorizationPlatformPublicKeyCredentialRegistration
PasskeyExtras
WBSSavedAccountStorePasskeyExtras
ASNavigationController
ASAccountAuthenticationModificationUpgradePasswordToStrongPasswordRequest
ASAuthorizationProviderExtensionAuthorizationRequest
ASAuthorizationAppleIDButton
ASAuthorizationController
SOAuthorizationDelegate
ASAccountAuthenticationModificationController
_ASAccountAuthenticationModificationRemoteViewControllerDelegate
ASCredentialRequestSecondaryButton
ASAccountAuthenticationModificationReplacePasswordWithSignInWithAppleRequest
ASAuthorizationPasswordRequest
ASAccountAuthenticationModificationViewController
ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest
ASAuthorizationPublicKeyCredentialRegistrationRequest
_ASPasswordCredentialAuthenticationViewController
_ASPasswordManagerDeleteAlertConfiguration
ASAuthorizationSecurityKeyPublicKeyCredentialAssertionRequest
ASViewServiceInterfaceUtilities
ASPublicKeyCredentialOperation
ASCredentialProviderExtensionContext
ASAuthorizationPasswordProvider
ASPasswordCredentialIdentity
ASAuthorizationSecurityKeyPublicKeyCredentialRegistrationRequest
ASCredentialRequestEnableBluetoothViewController
ASCredentialRequestButton
_ASCredentialListViewController
ASAuthorizationOpenIDRequest
ASAuthorizationSingleSignOnRequest
presentingViewController
makeCredentialWithClientDataHash:options:completionHandler:
didReceiveError:
topAnchor
setType:
isEqualToString:
initWithBase64EncodedString:options:
setNeedsLayout
attributedStringWithAttachment:
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
safari_stringForKey:
mainScreen
extensions
mainRunLoop
startAnimating
didMoveToParentViewController:
_screen
removeFromSuperview
widthAnchor
setNeedsDisplay
setExcludeCredentials:
heightAnchor
startASWebAuthenticationSessionInWindow:dryRun:
setRequireResidentKey:
addClip
continuousCornerRadius
setEstimatedRowHeight:
extensionWithUUID:completion:
setTranslucent:
initWithRelyingParty:user:publicKeyCredentialParamaters:
colorWithWhite:alpha:
safari_replaceCharactersWithStringBindings:
initWithBarButtonSystemItem:target:action:
standardUserDefaults
whiteColor
removeCredentialIdentityStoreForApplication:completion:
bundleRecordWithApplicationIdentifier:error:
removeCredentialTypes:forSavedAccount:
didFetchSecurityKeyLoginChoices:
headerView
initWithPublicKeyCredentialManager:
mainBundle
attestationObject
colorWithRed:green:blue:alpha:
visibleViewController
extensionPointIdentifier
setEnableUserInteraction:
addChildViewController:
safari_privacyPreservingDescription
bundleRecordForAuditToken:error:
didFetchPlatformLoginChoices:
setTranslatesAutoresizingMaskIntoConstraints:
isCombinedPublicKeyCredentialRegistrationRequest
viewIfLoaded
setAuthenticatorSelection:
attachment
colorWithCGColor:
tintColor
setRequestStyle:
lowercaseString
parsePasswordRules:error:
timerWithTimeInterval:repeats:block:
safari_mapObjectsUsingBlock:
addArrangedSubview:
colorWithAlphaComponent:
bundleIdentifier
didCompleteRegistrationWithCredential:error:
setTransitioningDelegate:
_animateUsingDefaultTimingWithOptions:animations:completion:
setEnableEmbeddedAuthorizationViewController:
parentViewController
setAuthenticatorAttachment:
loginRowText
safari_mapAndFilterObjectsUsingBlock:
bundleForClass:
setModalPresentationStyle:
addAnimation:forKey:
setTransactionID:
addAction:
initWithAuthorization:
didCompleteAssertionWithCredential:error:
viewForKey:
timeout
safari_isEligibleforDirectSSO
isCABLEClient
colorNamed:inBundle:compatibleWithTraitCollection:
remoteObjectProxyWithErrorHandler:
setModalInPresentation:
setToValue:
setMinimumScaleFactor:
loginRowPaneTitleText
isCABLEAuthenticatorRequest
activationState
bounds
viewControllerForKey:
dictionaryWithObjects:forKeys:count:
loginRowIconImage
textAttachmentWithImage:
remoteObjectProxy
setTitleView:
safari_highLevelDomainFromHost
_remoteViewControllerProxy
code
isBluetoothEnabled
sizeToFit
dictionaryWithCapacity:
bottomAnchor
valueForKeyPath:
setMessage:
boolValue
setAttributedText:
arrayWithObjects:count:
safari_firstObjectPassingTest:
actionWithTitle:style:handler:
loginRowDetailText
tertiarySystemGroupedBackgroundColor
clientDataHash
activateConstraints:
safari_filterObjectsUsingBlock:
initWithArrangedSubviews:
setTitle:forState:
dictionary
setEffect:
value
exportLocalAuthenticatorCredentialWithID:error:
size
arrayWithCapacity:
isBiometricAuthenticationAvailable
boolForKey:
tertiaryLabelColor
clearColor
setMaximumContentSizeCategory:
owningExtensionState
loginRowData
reloadSections:withRowAnimation:
safari_browserDefaults
initWithAppName:teamIdentifier:bundleIdentifier:authorizationRequest:
deviceClass
setDuration:
setAttestation:
isBeingPresented
array
setMass:
applicationProxyForIdentifier:
site
setAppleIDAuthorizationRequest:
clearAllLocalAuthenticatorCredentials
loginRowAuthenticationType
destinationSiteForCrossSiteAssertion
setMaskedCorners:
setDistribution:
exceptionWithName:reason:userInfo:
isBeingDismissed
overrideTitle
initWithActivityIndicatorStyle:
changeSavedAccount:toUser:password:
safari_boolForKey:
loginChoices
initWithPasswordRequirementsByDomain:
deleteLocalAuthenticatorCredentialWithID:
reloadData
hasPrefix:
setTintColor:
applicationProxyForBundleURL:
context
blendWithMaskFilter
overrideSubtitle
setDelegate:queue:
teamIdentifier
setAppid:
setMaskImage:
username
loginChoiceKind
safari_addObjectsFromArrayUnlessNil:
evaluatePolicy:options:reply:
setTimingFunction:
setAppID:
redColor
hasExternalPasswords
rectForSection:
overrideHeader
invalidate
setMagnificationFilter:
appleIDAuthorizationRequest
contentView
_applicationIconImageForBundleIdentifier:format:scale:
initWithOperationUUID:
userVisibleName
errorWithDomain:code:userInfo:
enumerateObjectsUsingBlock:
contentOffset
locationInView:
setAlwaysBounceVertical:
blackColor
setTimeout:
rectForRowAtIndexPath:
setLineWidth:
hasConnected
appIdentifier
interfaceWithProtocol:
localizedStringWithFormat:
initWithName:identifier:displayName:
setTextContentType:
centerYAnchor
setDataSource:
indexSetWithIndex:
handleFailureInMethod:object:file:lineNumber:description:
defaultMetrics
biometryType
setLeftBarButtonItem:
setAlpha:
integerValue
enumerateKeysAndObjectsUsingBlock:
containsString:
appID
outputImage
animationWithKeyPath:
setDamping:
defaultFontForTextStyle:
instantiateViewControllerWithInputItems:connectionHandler:
rightBarButtonItem
initWithName:displayName:identifier:relyingPartyIdentifier:publicKeyCredentialOperationUUID:
centerXAnchor
rightAnchor
tableHeaderView
localizedName
indexPathForRow:inSection:
setTextColor:
handleFailureInFunction:file:lineNumber:description:
orderedSet
containingUrl
entitlements
JSONObjectWithData:options:error:
CGColor
setAllowCredentials:
setLAContext:
initWithName:displayName:identifier:publicKeyCredentialOperationUUID:
localizedContainingName
bezierPathWithRoundedRect:cornerRadius:
givenName
indexOfObject:
userName
setTextAlignment:
instanceMethodForSelector:
endMatchingExtensions:
systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:
containerView
revokeAuthorizationWithContext:completion:
animation
setAlignment:
insertSubview:atIndex:
importLocalAuthenticatorCredential:error:
CGRectValue
setKeyPath:
beginMatchingExtensionsWithAttributes:completion:
shouldUseAlternateCredentialStore
initWithName:
objectForKeyedSubscript:
resolvedColorWithTraitCollection:
systemLayoutSizeFittingSize:
userInformation
rawId
UUIDString
defaultCenter
setCustomSpacing:afterView:
animateWithDuration:animations:
setCredentialRequests:
setAdjustsFontSizeToFitWidth:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
beginAuthorizationWithParameters:
objectForKey:ofClass:
setTeamID:
shouldRequireLocalAuthenticationForPlatformCredentials
encodeObject:forKey:
decodeObjectOfClasses:forKey:
constraintLessThanOrEqualToSystemSpacingBelowAnchor:multiplier:
localAccountLoginChoices
imageWithTintColor:renderingMode:
listGroupedCellConfiguration
_hostAuditToken
animateChanges:
setInputImage:
systemImageNamed:withConfiguration:
getCredentialStateForRequest:completion:
setAdjustsFontForContentSizeCategory:
setTableHeaderView:
shouldRequireLocalAuthenticationForPasswords
objectForKey:
encodeMakeCredentialCommandWithClientDataJSON:options:userVerificationAvailability:
constraintLessThanOrEqualToConstant:
initWithKind:relyingPartyIdentifier:challenge:userVerificationPreference:allowedCredentials:
userIdentifier
decodeObjectOfClass:forKey:
imageWithRenderingMode:
accessoryView
getCredentialProviderExtensionStateWithCompletion:
_getPrimaryLoginChoices:otherLoginChoices:
setActive:
animateAlongsideTransition:completion:
systemImageNamed:
setAccessoryView:
setSupportedAlgorithmIdentifiers:
shouldRequireCABLEAuthenticatorConsent
decodeIntegerForKey:
constraintLessThanOrEqualToAnchor:
encodeMakeCredentialCommandWithClientDataHash:options:userVerificationAvailability:
objectAtIndexedSubscript:
imageWithData:scale:
setCornerCurve:
qrCodeURL
object
length
base64EncodedStringWithOptions:
allowedCredentialsForSecurityKeyAssertion
decodeInt64ForKey:
initWithUsername:relyingPartyIdentifier:identifier:operationUUID:
encodeInteger:forKey:
_kill:
getClientDataJSONForAuthenticationType:challenge:origin:
initWithImages:
systemGrayColor
leftAnchor
_principalObject
absoluteString
requirementsForPasswordRuleSet:respectingMinLength:maxLength:
sheetPresentationController
setStroke
setContentsGravity:
_presentViewController:sendingView:animated:
pushViewController:animated:
userHandle
imageWithConfiguration:
setPriority:
constraintGreaterThanOrEqualToSystemSpacingBelowAnchor:multiplier:
initWithUser:password:site:creationDate:
encodeInt64:forKey:
authorizedRequest
setAccessibilityIdentifier:
systemGray2Color
setStiffness:
setIdentifier:
numberWithInteger:
date
userDisplayName
publicKeyCredentialOperationUUID
prepareImagesForImageDescriptors:
leadingAnchor
setContents:
imageWithColor:
imageWithCGImage:scale:orientation:
constraintGreaterThanOrEqualToConstant:
setPresentationProvider:
authorizationViewControllerDidCompleteInitialPresentation:
getAssertionWithClientDataHash:options:completionHandler:
allowCredentials
serviceViewControllerProxy
allocWithZone:
layoutMarginsGuide
numberWithFloat:
encodeGetAssertionCommandWithClientDataJSON:options:userVerificationAvailability:
sf_bundleIdentifierForContainingApp
dataWithLength:
setContentMode:
constraintGreaterThanOrEqualToAnchor:constant:
serviceName
systemFontOfSize:weight:
numberWithBool:
authorizationViewController:validateUserEnteredPIN:completionHandler:
setIcon:accessibilityLabel:
serviceIdentifierType
initWithIdentifier:
encodeGetAssertionCommandWithClientDataHash:options:userVerificationAvailability:
dataUsingEncoding:
_viewControllerForFullScreenPresentationFromView:
imageWithCGImage:
layoutIfNeeded
getAllLocalAuthenticatorCredentials
setSpacing:
setContentCompressionResistancePriority:forAxis:
systemFillColor
setWithObjects:
initWithUpgradeContext:
allHeaderFields
constraintGreaterThanOrEqualToAnchor:
systemBlueColor
currentHandler
initWithHost:port:protocol:realm:authenticationMethod:
initWithURL:statusCode:HTTPVersion:headerFields:
enableMechanism:error:
requestViewController:fromServiceWithBundleIdentifier:connectionHandler:
authorizationViewController:startCABLEAuthenticationWithCompletionHandler:
_preferredFontForTextStyle:weight:
getAllApprovedSharedWebCredentialsEntries:
imageWithAlignmentRectInsets:
preferredFontForTextStyle:
setConstant:
layer
constraintEqualToSystemSpacingAfterAnchor:multiplier:
credentialTypes
setHttpHeaders:
numberOfSections
setPreferredSymbolConfiguration:
cellForRowAtIndexPath:
alertControllerWithTitle:message:preferredStyle:
imageNamed:inBundle:withConfiguration:
requestTypes
setShowsVerticalScrollIndicator:
setWithObject:
setClipsToBounds:
_preferredFontForTextStyle:variant:
service
authorizationViewController:didRequestCredentialForLoginChoice:authenticatedContext:completionHandler:
lastBaselineAnchor
systemBackgroundColor
labelColor
numberOfRowsInSection:
setPreferredContentSize:
setViewControllers:animated:
gestureRecognizers
constraintEqualToConstant:
preferredFontDescriptorWithTextStyle:
imageNamed:inBundle:
setPreferredContentAlignment:
effectWithStyle:
providerBundleIdentifier
preferredContentSizeCategory
setShouldApplyMask:
authorizationViewController:didCompleteWithCredential:error:
setClientDataHash:
separatorColor
initWithFrame:style:
constraintEqualToAnchor:multiplier:
ak_isUserCancelError
doubleValue
generatedPasswordMatchingRequirements:
setViewControllers:
setPlatformKeyCredentialCreationOptions:
_plugIn
ak_addAdditiveAnimation:
setShape:
imageForImageDescriptor:
initWithURL:allowPlaceholder:error:
setHeight:
isUserVerifyingPlatformAuthenticatorAvailable
setClasses:forSelector:argumentIndex:ofReply:
domainIsProhibitedForSavingCredentials:
selectedEmail
preferredContentSize
functionWithName:
constraintEqualToAnchor:constant:
_setContinuousCornerRadius:
setPlatformKeyCredentialAssertionOptions:
setVelocity:
initWithFrame:mechanisms:
setSeparatorStyle:
imageByCroppingToRect:
functionWithControlPoints::::
isUserInteractionEnabled
supportedAlgorithmIdentifiers
domainByStrippingSubdomainWildcardPrefixIfNecessary:
postNotificationName:object:
constraintEqualToAnchor:
setValueFunction:
addTimer:forMode:
setSeparatorInsetReference:
cancelCurrentRequest
setHandler:
initWithType:
superview
_extensionContextForUUID:
setValue:forKeyPath:
credentialKind
setCancelsTouchesInView:
popViewControllerAnimated:
selectRowAtIndexPath:animated:scrollPosition:
frame
setSeparatorInset:
setGoogleLegacyAppidSupport:
priority
setPlaceholder:
initWithFirst:second:
newPasskeysAvailableForApplicationIdentifier:
domain
isSessionStarted
addTarget:action:forControlEvents:
setValue:forKey:
updateLoginChoices:
platformUserVerificationPreference
subviews
navigationItem
_setBuiltinTransitionStyle:
doesNotRecognizeSelector:
setGivenName:
setSelectionStyle:
secondaryLabelColor
setBundleID:
primaryExtension
isRegistrationRequest
fontWithDescriptor:size:
setSecurityKeyCredentialCreationOptions:
canPerformAuthorizationWithURL:responseCode:useInternalExtensions:
initWithTarget:action:
performWithoutAnimation:
second
substringWithRange:
performSelectorOnMainThread:withObject:waitUntilDone:
setBorderWidth:
highLevelDomain
isProxiedRequest
firstObject
setSecurityKeyCredentialAssertionOptions:
configurationWithScale:
addSubview:
displayScale
first
presentedViewController
setFromValue:
setUserVerification:
requestPINWithRemainingRetries:completionHandler:
setUserName:
scheme
setBorderColor:
initWithEffect:
strongToWeakObjectsMapTable
configurationWithPointSize:weight:
initWithString:
requestIdentifier
setOriginatorBundleIdentifier:
navigationBar
setBluetoothEnabled:
setFrame:
initWithSize:scale:
createCGImage:fromRect:
scheduledTimerWithTimeInterval:repeats:block:
isPad
stroke
setBackgroundImage:forBarMetrics:
_beginDelayingPresentation:cancellationHandler:
configurationWithPointSize:
initWithCustomView:
addObserver:selector:name:object:
presentationAnchorForWebAuthenticationSession:
dismissViewControllerAnimated:completion:
setUserInteractionEnabled:
componentsJoinedByString:
setFont:
authorization
mutableCopy
setOperation:
setSecureTextEntry:
isMovingToParentViewController
_endDelayingPresentation
setUserIdentifier:
countByEnumeratingWithState:objects:count:
stringWithUTF8String:
performAuthorizationWithContext:completion:
fill
setFilters:
setScrollEnabled:
addObserver:
scaledFontForFont:
setBackgroundImage:
scale
traitCollectionWithUserInterfaceStyle:
authenticatorData
initWithServiceIdentifier:serviceIdentifierType:externalRecordIdentifier:user:rank:
count
transitionCoordinator
isMechanismEnabled:
setOpaque:
presentationAnchorForAccountAuthenticationModificationController:
_auxiliaryConnection
familyName
performAuthorizationWithCompletionHandler:
stringWithFormat:
addObjectsFromArray:
setFillMode:
externalRecordIdentifier
mutableBytes
setBackgroundEffects:
performAuthorizationRequestsForContext:withCompletionHandler:
UTF8String
setUserDisplayName:
setRightViewMode:
authenticatorAttachment
savedAccountsWithPasswords
_passkeyURLType
addObject:
stringByAppendingString:
setObject:forKeyedSubscript:
cableAuthenticatorURL
initWithRequestTypes:
setBackgroundConfiguration:
setFill
methodForSelector:
traitCollection
setRightView:
setUseInternalExtensions:
presentViewController:animated:completion:
isHighlighted
stopAnimating
externalCredentialIdentity
saveUser:password:forProtectionSpace:highLevelDomain:
_sf_addHandlerForRequestIdentifier:withBlock:
setObject:forKey:
addGestureRecognizer:
setFamilyName:
addEntriesFromDictionary:
bytes
removeTarget:action:forControlEvents:
setRightBarButtonItem:
statusCode
totpGenerators
buttonWithType:
CGImage
isGoogleLegacyAppIDSupport
setBackgroundColor:
trailingAnchor
setUrl:
extent
windowScene
setReturnKeyType:
path
setNumberOfLines:
isExternal
initWithCapacity:
safeAreaLayoutGuide
setExtensionsCBOR:
initWithCGImage:scale:
QRCodeGenerator
copy
window
setAxis:
UUID
convertRect:toView:
extensionsWithMatchingAttributes:error:
initWithRelyingPartyIdentifier:authenticatorData:signature:userHandle:rawClientDataJSON:credentialID:extensionOutputsCBOR:attachment:
completeTransition:
isExtensionProcessWithAuditToken:completion:
setExtensions:
highLevelDomainHasSuiteOfAssociatedApps:
setNeedsUpdateConstraints
disableMechanism:error:
removeObserver:
attributes
presentCABLESheetWithCompletionHandler:
safeAreaInsets
topViewController
addCommitHandler:forPhase:
setAutoresizingMask:
removeObject:
initWithRelyingPartyIdentifier:attestationObject:rawClientDataJSON:credentialID:transports:extensionOutputsCBOR:attachment:
extensionsCBOR
initWithBundleIdentifier:
addConstraint:
startServiceWithNotificationHandler:
initWithFrame:
initWithCoder:
setHighlighted:
setEnabled:
_commonInit
_backgroundColorForCurrentControlState
as_constraintsMatchingFrameOfView:withFrameOfView:
as_constraintsMatchingFrameOfView:withFrameOfView:edgeInsets:
initialize
activate
credentialStateDidChange:completion:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
createRequest
getCredentialStateForUserID:completion:
accountModificationRemoteViewControllerDidFinishUpgradeToSignInWithApple:userInfo:completion:
accountModificationRemoteViewController:didFinishWithCredential:userInfo:completion:
accountModificationRemoteViewController:requestCanceledWithError:completion:
presentAccountModificationRemoteViewController:
dismissAccountModificationRemoteViewController:
requestToUpgradeToSignInWithAppleDidFinishWithUserInfo:completion:
requestDidFinishWithCredential:userInfo:completion:
requestDidFailWithError:completion:
presentAccountModificationRemoteViewController
dismissAccountModificationRemoteViewController
accountModificationRemoteViewController:viewServiceDidTerminateWithError:
requestViewControllerWithConnectionHandler:
exportedInterface
serviceViewControllerInterface
upgradeCredentialToSignInWithApple:forServiceIdentifier:userInfo:extension:
updateCredential:forServiceIdentifier:userInfo:extension:
viewServiceDidTerminateWithError:
delegate
setDelegate:
.cxx_destruct
_delegate
T@"<_ASAccountAuthenticationModificationRemoteViewControllerDelegate>",W,N,V_delegate
init
initWithHTTPAuthorizationHeaders:
initWithHTTPResponse:httpBody:
httpAuthorizationHeaders
setHttpAuthorizationHeaders:
httpResponse
setHttpResponse:
httpBody
setHttpBody:
privateKeys
setPrivateKeys:
authorizationResult
_authorizationResult
T@"SOAuthorizationResult",R,N,V_authorizationResult
T@"NSDictionary",&,N
T@"NSHTTPURLResponse",C,N
T@"NSData",&,N
T@"NSArray",&,N
initWithTitle:detailText:symbolName:
viewDidLoad
_passkeySymbolHeaderImage
_setUpContentBodyText
_contentBodyAttributedString
initWithView:
_windowDidBecomeKey:
dealloc
_authorizeAppleAccountWithPasswordButtonSelected:
_authorizationButtonBioSelected:
_authorizationWithPasscodeOrPasswordButtonSelected:
_continueButtonTapped
validateReadyForAuthorization:
addToStackView:withCustomSpacingAfter:context:
_createMainStackView
authenticationResult:error:context:
biometricNoMatch
localizedSubTitleForMechanisms:
processBiometricMatchWithCompletionHandler:
processAuthenticationSuccessWithCompletionHandler:
callerIconBundlePath
localizedCallerName
localizedAuthWatchPrompt
buttonText
setButtonText:
_initializeAuthorizationButton
_enableLAUIAuthenticationMechanism
_authenticationMechanism
setAuthorizationCapabilityEnabled:
authorizationCapabilityEnabled
showContinueWithPasswordButton
showAlertContinuingWithPassword:
setUpButtonInPaneContext:
showContinueButton
showContinueButtonWithTitle:
showAuthenticationMechanismForExternalPasswordCredential
_performPasscodeOrPasswordValidation:
_isDelegateReadyForAuthorization
_switchToBiometricsView:withAuthenticationMechanismEnabled:showAlert:alertString:
_disableBiometricView
_addArrangedSpaceToMainStackView:
_verticalSpacerWithConstant:
_setUpAlertImageWithConstraints
_setupLabelWithTitle:animated:
_updateLabelAnimatedWithTitle:
_setupBiometricButtonWithConstraints:
_switchToPasscodeOrPassword
_switchToAppleAccountPassword
_passcodeOrPasswordButtonTitle
_passwordAuthenticationButtonTitle
_enterProcessingStateWithCompletionHandler:
_waitForTimeInterval:withGroup:
_setGlyphViewGestureRecognizerEnabled:
biometricAuthenticationFailureWithAlertString:
finishProcessingWithCompletionHandler:
invalidateProcessingState
authorizationButton
_mainStackView
_containerView
_canPerformBiometricAuthentication
_authorizationButtonContainerView
_biometricsView
_paneContext
_biometricLabel
_processingStateCompletionHandler
_processingStateGroup
_authorizationButton
T@"NSString",C,N
T@"ASCredentialRequestButton",R,N,V_authorizationButton
T@"<ASCredentialRequestSubPaneConfirmButtonDelegate>",W,N,V_delegate
TB,N
_infoLabelWithString:labelType:
_fontForLabelType:
_textColorForLabelType:
_infoLabelMarginInset
initWithString:labelType:
text
setText:
marginInset
setMarginInset:
_infoLabel
_marginInset
Td,N,V_marginInset
T@"NSString",&,N
systemImageName
titleString
subtitleString
bodyString
footerString
footerLearnMoreLinkBindingString
footerLearnMoreLinkString
T@"NSString",R,C,N
transitionDuration:
animateTransition:
interruptibleAnimatorForTransition:
animationEnded:
initWithPresenting:
_viewControllerForTransitionContext:
isPresenting
_presenting
presenting
TB,R,N,GisPresenting,V_presenting
initWithNibName:bundle:
_handleTapGesture:
viewWillAppear:
viewWillDisappear:
requestContainerViewControllerDidDismiss:
requestContainerViewControllerShouldDismiss:
preferredContentSizeDidChangeForChildContentContainer:
animationControllerForPresentedController:presentingController:sourceController:
animationControllerForDismissedController:
interactionControllerForPresentation:
interactionControllerForDismissal:
presentationControllerForPresentedViewController:presentingViewController:sourceViewController:
navigationController:willShowViewController:animated:
navigationController:didShowViewController:animated:
navigationControllerSupportedInterfaceOrientations:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationController:interactionControllerForAnimationController:
navigationController:animationControllerForOperation:fromViewController:toViewController:
initWithRootViewController:
supportedInterfaceOrientations
_shouldDismiss
setPaneDelegate:
_setPaneDelegateForTopViewController
_setPaneDelegateForViewController:
_clearPaneDelegateForViewController:
_setPaneDelegate:forViewController:
rootViewController
paneDelegate
blurBackgroundView
setBlurBackgroundView:
_tapGestureRecognizer
_sheetHeightConstraint
_sheetPresentedConstraint
_rootViewController
_paneDelegate
_blurBackgroundView
T@"UIVisualEffectView",&,N,V_blurBackgroundView
T@"UIViewController",R,N,V_rootViewController
T@"<ASCredentialRequestContainerViewControllerDelegate>",W,N,V_delegate
T@"<ASCredentialRequestPaneViewControllerDelegate>",W,N,V_paneDelegate
supportsSecureCoding
encodeWithCoder:
TB,R
copyWithZone:
credentialID
setCredentialID:
T@"NSData",C,N
initWithCredentialID:
coreDescriptor
_credentialID
T@"ASCPublicKeyCredentialDescriptor",R,N
T@"NSData",C,N,V_credentialID
initWithEnabledState:supportsIncrementalUpdates:
isEnabled
supportsIncrementalUpdates
_enabled
_supportsIncrementalUpdates
enabled
TB,R,N,GisEnabled,V_enabled
TB,R,N,V_supportsIncrementalUpdates
getAssertionWithMediationRequirement:clientDataHash:options:completionHandler:
setResidentKey:
makeCredentialWithMediationRequirement:clientDataHash:options:completionHandler:
panel:updateWebAuthenticationPanel:
panel:requestPINWithRemainingRetries:completionHandler:
panel:selectAssertionResponse:source:completionHandler:
panel:requestLAContextForUserVerificationWithCompletionHandler:
panel:decidePolicyForLocalAuthenticatorWithCompletionHandler:
panel:dismissWebAuthenticationPanelWithResult:
beginAssertionsWithOptions:forProcessWithApplicationIdentifier:delegate:requestStyle:webFrameIdentifier:
createNewPlatformCredentialWithOptions:authenticatedContext:delegate:webFrameIdentifier:
assertUsingPlatformCredentialForLoginChoice:authenticatedContext:
autoFillOperationUUIDForApplicationIdentifier:
autoFillOperationUUIDForWebFrameIdentifier:
autoFillPasskeysForOperationUUID:
assertUsingAutoFillPasskeyWithIdentifier:authenticatedContext:forOperationUUID:
presentCABLESheetForOperationUUID:withCompletionHandler:
beginCreatingNewSecurityKeyCredentialIfAvailableWithOptions:delegate:webFrameIdentifier:
assertUsingSecurityKeyCredentialForLoginChoice:
clearAllCredentials
cancelOperationIfNecessaryWithUUID:overrideError:
encodeMakeCredentialCommandWithOptions:authenticatorUserVerificationAvailability:
encodeGetAssertionCommandWithOptions:authenticatorUserVerificationAvailability:
passkeyAutoFillManagerDelegate
setPasskeyAutoFillManagerDelegate:
T@"<ASPasskeyAutoFillManagerDelegate>",&,N
_finishAssertionForOperationWithUUID:identifier:authenticatedContext:
_asToWKCredentialCreationOptions:forCredentialKind:
_asToWKCredentialAssertionOptions:
_allowedCredentialsForAssertionOptions:
_createCredentialOfKind:withOptions:authenticatedLAContext:delegate:webFrameIdentifier:
_newPanelForOperation:
_newOperationWithRelyingPartyIdentifier:delegate:sourceApplicationIdentifier:webFrameIdentifier:
_tearDownOperationWithUUID:
_operationForPanelIfExists:
_operationForPanel:
_operationForUUIDIfExists:
_operationForUUID:
_operationForApplicationIdentifierIfExists:
_operationForWebFrameIdentifier:
_operationsLock
_uuidToOperation
_panelToWeakOperation
_applicationIdentifierToWeakOperation
_webFrameIdentifierToWeakOperationForBrowser
_passkeyAutoFillManagerDelegate
T@"<ASPasskeyAutoFillManagerDelegate>",&,N,V_passkeyAutoFillManagerDelegate
extensionOutputsCBOR
setTransports:
upgradeCredentialToSignInWithApple:forServiceIdentifier:userInfo:extensionUUID:
updateCredential:forServiceIdentifier:userInfo:extensionUUID:
_exportedInterface
_remoteViewControllerInterface
accountModificationHostViewControllerDidCompleteUpgradeToSignInWithApple:userInfo:completion:
accountModificationHostViewController:didFinishWithCredential:userInfo:completion:
presentUIForAccountModificationHostViewController:
dismissUIForAccountModificationHostViewController:
accountModificationHostViewController:requestCanceledWithError:completion:
_upgradeCredentialToSignInWithApple:forServiceIdentifier:userInfo:extension:
_updateCredential:forServiceIdentifier:userInfo:extension:
_findExtensionSupportingUpgrade:withCompletionHandler:
_ensureHostHasAccountModificationEntitlement
_deleteExistingKeychainCredentialIfPossible
_updateKeychainWithNewCredential:
_isKeychainSyncEnabled
_accountModificationHostViewController
_isPerformingAppInitiatedUpgrade
_existingCredential
_serviceIdentifierForUpgrade
_addSpacerView
initRequiringTableView:
viewDidDisappear:
_useSecurityKeyButtonTapped
_useCABLEButtonTapped
_otherLoginChoicesButtonTapped
_manuallyEnterPasswordButtonTapped
credentialProviderExtensionManagerExtensionListDidChange:
presentUIForPasswordCredentialAuthenticationViewController:
passwordCredentialAuthenticationViewController:didFinishWithCredential:error:completion:
authenticationProvider:showViewController:
authenticationProvider:hideViewController:
authenticationProvider:presentAlert:primaryAction:alternateAction:
presentationAnchor
T@"UIWindow",R,N
confirmButtonSubPaneDidEnterProcessingState:withAuthenticatedContext:
confirmButtonSubPaneDidFailBiometry:
userTappedContinueButton
performPasswordAuthentication:
performAuthorization:withAuthenticatedLAContext:
tableView:numberOfRowsInSection:
tableView:cellForRowAtIndexPath:
numberOfSectionsInTableView:
tableView:titleForHeaderInSection:
tableView:titleForFooterInSection:
tableView:canEditRowAtIndexPath:
tableView:canMoveRowAtIndexPath:
sectionIndexTitlesForTableView:
tableView:sectionForSectionIndexTitle:atIndex:
tableView:commitEditingStyle:forRowAtIndexPath:
tableView:moveRowAtIndexPath:toIndexPath:
initWithPresentationContext:shouldExpandOtherLoginChoices:
initWithPresentationContext:
reloadLoginChoices
_selectPreviouslySelectedLoginChoiceIfPossible:
_setUpView
_setUpIconViewIfNecessary
_setUpInfoLabel
_addAuthorizationButtonToPaneContext:
_addOtherLoginChoicesButtonIfNeeded
_addManuallyEnterPasswordButtonIfNeeded
_secondaryButtonBottomMargin
_selectInitialLoginChoice
_localizedInfoString
_serviceName
_infoLabelStringForPlatformPublicKeyCredentialRegistration
_infoLabelStringForPlatformPublicKeyCredentialAssertion
_infoLabelStringForSecurityKeyCredentialAssertion
_infoLabelStringForPassword
_infoLabelStringForSignInWithApple
_configureAuthenticationPaneForSelectedLoginChoice:
_setCancelButtonEnabled:
_performAuthorizationWithAuthenticatedContext:completionHandler:
_shouldShowLoginChoicesInTableView
_updateCachedLoginChoices
_iconImage
_userSelectedExternalPasswordCredential
numberOfTableRows
_cellForRow:
tableView:didSelectRowAtIndexPath:
_updateSelectedRow:
_errorIsPINRequiredError:
_userTappedContinueButtonForPasskeyLoginChoice:
_userTappedContinueButtonForPasswordLoginChoice:
_userTappendContinueButtonForSecurityKeyLoginChoice:
_userTappedContinueButtonForCABLELoginChoice:
_presentAlert:primaryAction:alternateAction:
_presentationContext
_imageSubPane
_confirmButtonSubPane
_currentlySelectedRow
_previouslySelectedLoginChoice
_shouldExpandOtherLoginChoices
_tableViewLoginChoices
_otherLoginChoices
_authKitAuthorizationProvider
_alertQueue
_credentialProviderViewController
_externalPasswordCredentialForSelectedLoginChoice
_infoLabelPane
callObserverWithBlock:
callObserver:callChanged:
_initWithBlock:
_callObserver
_incomingCallHandler
rawClientDataJSON
T@"NSData",R,C,N
initWithCredentialID:rawClientDataJSON:
_rawClientDataJSON
T@"NSData",R,C,N,V_rawClientDataJSON
T@"NSData",R,C,N,V_credentialID
rawAttestationObject
_initWithBaseCredential:rawAttestationObject:
initWithCoreCredential:
_baseCredential
_rawAttestationObject
T@"NSData",R,C,N,V_rawAttestationObject
textRectForBounds:
editingRectForBounds:
leftViewRectForBounds:
rightViewRectForBounds:
insetSize
setInsetSize:
_insetSize
T{CGSize=dd},N,V_insetSize
keyboardDidShow:
_textFieldChanged:
_signInButtonTapped
resignFirstResponder
initWithPersona:presentationContext:
_createViews
_setConstraints
_setUpAndAddIconImage
_setUpSubtitleLabel
_setUpUsernameLabel
_titleLabelText
_securityKeyTitleLabelText
_manualPasswordEntryTitleLabelText
_secureTextFieldPlaceholderText
_topViewMargin
_containerViewHorizontalMargin
_signInButtonInsetMargin
_secureTextFieldInsetMargin
_pinValidationFailedWithError:
_subtitleTextForPINValidationError:
_activateSecurityKeySubtitleText
_startAnimatingActivityIndicator
_stopAnimatingActivityIndicator
_intrinsicContentHeight
_completeManualPasswordCredentialEntry
sizeToFitPaneContentAnimated:
becomeFirstResponder
canBecomeFirstResponder
authenticationDelegate
setAuthenticationDelegate:
_keyboardHeight
_persona
_titleLabel
_subtitleLabel
_usernameField
_secureTextField
_signInButtonActivityIndicator
_signInButton
_paneHeaderStackViewBottomKeyboardConstraint
_authenticationDelegate
T@"<ASPasswordAuthenticationPaneViewControllerDelegate>",W,N,V_authenticationDelegate
extensionContext
prepareCredentialListForServiceIdentifiers:
provideCredentialWithoutUserInteractionForIdentity:
prepareInterfaceToProvideCredentialForIdentity:
prepareInterfaceForExtensionConfiguration
T@"ASCredentialProviderExtensionContext",R,N
isLikelyRealUser
authenticationServicesCredential
_credentialScopes
initWithPaneViewController:stackView:
addSubPane:withCustomSpacingAfter:
addEmptyViewWithSpacing:
paneViewController
stackView
_paneViewController
_stackView
T@"ASCredentialRequestPaneViewController",R,W,N,V_paneViewController
T@"UIStackView",R,N,V_stackView
initWithPresentationContext:loginChoice:
_setUpIconView
_setUpTitleView
_setUpQRCodeView
_titleText
_marginBelowQRCode
_marginAboveIcon
_addAboveIconSpacerView
_addBelowQRCodeSpacerView
_qrCodeMessage
_loginChoice
traitCollectionDidChange:
initWithMessage:
intrinsicContentSize
_qrCodeASImage
_qrCodeCIImage
_updateQRCodeImage
_updatePlatterBorderStyle
_qrCodeColor
_message
_imageView
_platterView
_badgeView
setImage:
image
_image
T@"UIImage",&,N,V_image
layoutSubviews
_passkeyIcon
_updateLayoutMetricsWithFrameSize:
_iconView
_iconOffsetXConstraint
_iconOffsetYConstraint
drawRect:
initWithRelyingPartyIdentifier:
createCredentialRegistrationRequestWithChallenge:displayName:name:userID:
createCredentialAssertionRequestWithChallenge:
relyingPartyIdentifier
_relyingPartyIdentifier
T@"NSString",R,C,N,V_relyingPartyIdentifier
sharedStore
T@"ASCredentialIdentityStore",R,N
_initCredentialIdentityStore
replaceCredentialIdentitiesWithIdentities:completion:
getCredentialIdentityStoreStateWithCompletion:
saveCredentialIdentities:completion:
removeCredentialIdentities:completion:
removeAllCredentialIdentitiesWithCompletion:
_helperProxy
initWithAlgorithm:
algorithm
_algorithm
Tq,R,N,V_algorithm
cancelRequestWithError:
prepareToConvertAccountToSignInWithAppleWithoutUserInteractionForServiceIdentifier:existingCredential:
convertAccountToSignInWithAppleWithoutUserInteractionForServiceIdentifier:existingCredential:
prepareInterfaceToConvertAccountToSignInWithAppleForServiceIdentifier:existingCredential:
_extensionAuxiliaryHostProtocol
_extensionAuxiliaryVendorProtocol
upgradeCredentialToSignInWithApple:serviceIdentifier:userInfo:
prepareInterfaceToUpgradeCredentialToSignInWithApple:serviceIdentifier:userInfo:completion:
updatePasswordForServiceIdentifier:existingCredential:newPassword:userInfo:
prepareInterfaceToUpdatePasswordForServiceIdentifier:existingCredential:newPassword:userInfo:completion:
cancelRequest
getSignInWithAppleUpgradeAuthorizationWithState:nonce:completionHandler:
completeUpgradeToSignInWithAppleWithUserInfo:
completeChangePasswordRequestWithUpdatedCredential:userInfo:
emptyCredential
initWithAuthenticatedResponse:
initWithAuthenticatedResponse:privateKeys:
_initWithAuthenticatedResponse:
state
accessToken
identityToken
authorizedScopes
authenticatedResponse
_state
_accessToken
_identityToken
_authorizedScopes
_authenticatedResponse
_privateKeys
T@"NSString",R,C,N,V_state
T@"NSData",R,C,N,V_accessToken
T@"NSData",R,C,N,V_identityToken
T@"NSArray",R,C,N,V_authorizedScopes
T@"NSHTTPURLResponse",R,C,N,V_authenticatedResponse
T@"NSArray",R,N,V_privateKeys
rawAuthenticatorData
userID
signature
_initWithBaseCredential:userID:signature:rawAuthenticatorData:
_rawAuthenticatorData
_userID
_signature
T@"NSData",R,C,N,V_rawAuthenticatorData
T@"NSData",R,C,N,V_userID
T@"NSData",R,C,N,V_signature
viewDidAppear:
_connectingText
_startInformativeTextTimerIfNeeded
_showInformativeText
_setUpInformativeTextLabel
_informativeText
_informativeTextFont
_informativeTextTimer
_activityIndicator
_informativeTextLabel
authorizationFromCredential:
initWithProvider:credential:
initWithCorePlatformKeyCredentialAssertion:
initWithCorePlatformKeyCredentialRegistration:
provider
credential
_provider
_credential
T@"<ASAuthorizationProvider>",R,N,V_provider
T@"<ASAuthorizationCredential>",R,N,V_credential
_cancelButtonSelected:
requestPaneViewController:dismissWithCredential:error:
requestPaneViewController:didRequestCredentialForLoginChoice:authenticatedContext:completionHandler:
requestPaneViewControllerRequiresPINEntryInterface:
requestPaneViewControllerPresentManualPasswordEntryInterface:
requestPaneViewControllerPresentExpandedLoginChoiceInterface:
requestPaneViewControllerStartCABLEAuthentication:
passwordAuthenticationViewController:validateUserEnteredPIN:completionHandler:
passwordAuthenticationViewController:completedWithManuallyEnteredPasswordCredential:
updateInterfaceWithLoginChoices:
presentPINEntryInterface
pushOrUpdateBasicPaneViewControllerWithError:
navigationController
cableClientWillConnect
cableClientWillAuthenticate
_signInBarButtonItem
modalPresentationStyle
_setUpInitialViewController
_initialViewControllerForPresentationContext:
_initialViewControllerForPresentationContext:expandingOtherLoginChoices:
_securityKeyRequestViewController
_securityKeyRequestViewControllerWithOverrideSubtitle:
_securityKeyTitleText
_presentPINEntryInterface
_presentManualPasswordEntryInterface
_cancelBarButtonItem
_setUpContainerViewControllerWithCredentialRequestViewController:
_pushSecurityKeyViewController
_pushSecurityKeyViewControllerWithOverrideSubtitle:
_updateOrPushSecurityKeyViewControllerWithSubtitle:
_updateOrPushPlatformKeyViewControllerWithSubtitle:
_cableClientViewControllerWithLoginChoice:
_pushCABLEClientViewControllerForCABLELoginChoice:
_pushCABLEConnectingViewController
_pushCABLEAuthenticatingViewController
_startCABLEClientWithLoginChoice:
_startCABLEClientForSingleLoginChoiceIfNeeded
_showEnableBluetoothViewControllerForCABLEClientWithLoginChoice:
_enableBluetoothAndShowCABLEClientViewControllerWithLoginChoice:
_pushCABLEAuthenticatorCredentialPickerViewControllerWithPresentationContext:
_showCABLEAuthenticatorError:
_startCABLEAuthenticatorOnInitialPresentationIfNeeded
_startCABLEAuthenticator
_showEnableBluetoothViewControllerForCABLEAuthenticator
_enableBluetoothAndShowCABLEConnectingViewController
_navigationController
_wirelessSettingsController
T@"<ASAuthorizationViewControllerDelegate>",W,N,V_delegate
headerIconForPresentationContext:
iconForPasswordLoginChoice:presentationContext:
passwordManagerIcon
iconForPublicKeyCredentialLoginChoiceWithPresentationContext:
_iconForPresentationContext:size:
_iconForApplicationIdentifier:size:
_iconForData:scale:size:
_imageForIcon:size:
_providerIconForPasswordLoginChoice:
_keychainIcon
_iconForPasswordProviderBundleIdentifier:
_iconApplicationIdentifierForApplicationIdentifier:
T@"UIImage",R,N
initWithUser:authorizedScopes:
user
setState:
authorizationCode
setAuthorizationCode:
setIdentityToken:
email
setEmail:
fullName
setFullName:
realUserStatus
setRealUserStatus:
setAccessToken:
refreshToken
setRefreshToken:
_user
_authorizationCode
_email
_fullName
_realUserStatus
_refreshToken
T@"NSData",C,N,V_accessToken
T@"NSData",C,N,V_refreshToken
T@"NSData",C,N,V_identityToken
T@"NSData",C,N,V_authorizationCode
T@"NSString",C,N,V_state
T@"NSString",C,N,V_email
T@"NSPersonNameComponents",C,N,V_fullName
Tq,N,V_realUserStatus
T@"NSString",R,C,N,V_user
initWithExtension:
_cancelButtonPressed
prepareToCancelRequestWithHostContext:error:completion:
prepareToCompleteUpgradeToSignInWithAppleRequestWithHostContext:userInfo:completion:
prepareToCompleteRequestWithHostContext:updatedCredential:userInfo:completion:
getSignInWithAppleAuthorizationWithState:nonce:completion:
dismissRequestUI:
initWithExtension:serviceIdentifier:
upgradeCredentialToSignInWithApple:userInfo:
updateCredential:withNewPassword:userInfo:
_nonUIRequestDidRequireUserInteraction
_shouldUseNonUIRequestTimer
_requestDidFailWithError:completion:
willMoveToParentViewController:
_serviceIdentifier
_newPassword
_accountModificationOperation
_signInWithAppleAuthorization
_accountModificationExtensionContextProxy
_userInfo
T@"<_ASAccountAuthenticationModificationHostViewControllerDelegate>",W,N,V_delegate
initWithProvider:
supportsStyle:
accountModificationExtensionManagerExtensionListDidChange:
sharedManager
_beginExtensionDiscovery
_endExtensionDiscovery
_buildDomainToExtensionDictionaryWithSharedWebCredentialsDatabaseEntries:
extensionForDomain:completionHandler:
addChangeObserver:
removeChangeObserver:
_notifyObservers:
_dataConstructionQueue
_readOnlyQueue
_extensionMatchingToken
_domainToExtension
_extensions
_observers
_errorEncounteredDuringLastExtensionDiscovery
_mobileSafariUserDefaults
authorizationProviderWithIdentityProviderURL:
initWithURL:
canPerformAuthorization
_url
T@"NSURL",R,N,V_url
TB,R,N
_startDryRun:
handleSSOExtensionIdentifier:
resetSSOExtensionIdentifier
authorizationController:didCompleteWithAuthorization:
authorizationController:didCompleteWithError:
authorizationController:didCompleteWithCustomMethod:
presentationAnchorForAuthorizationController:
initWithURL:callbackURLScheme:completionHandler:
initWithURL:callbackURLScheme:usingEphemeralSession:completionHandler:
initWithURL:callbackURLScheme:usingEphemeralSession:jitEnabled:completionHandler:
canStart
start
cancel
setPrefersEphemeralWebBrowserSession:
_invalidate
presentationContextProvider
setPresentationContextProvider:
prefersEphemeralWebBrowserSession
_authorizationController
_ssoProvider
_callbackURLScheme
_authenticationSession
_originalCompletionHandler
_referenceToSelf
_prefersEphemeralWebBrowserSession
_presentationContextProvider
T@"<ASWebAuthenticationPresentationContextProviding>",W,N,V_presentationContextProvider
TB,N,V_prefersEphemeralWebBrowserSession
as_navigationItem
setAs_navigationItem:
T@"UINavigationItem",&,N
_imageViewWithImage:
initWithImage:
imageView
T@"UIImageView",R,N,V_imageView
setUser:
T@"NSString",C,N,V_user
prepareToCompleteRequestWithHostContext:credential:completion:
prepareToCompleteExtensionConfigurationRequestWithHost:completion:
prepareToCompleteRequestWithSelectedCredential:completion:
prepareToCompleteExtensionConfigurationRequestWithCompletion:
prepareToCancelRequestWithError:completion:
T@"<_ASExtensionHostContextDelegate>",W,N
T@"<_ASCredentialProviderExtensionHostContextDelegate>",W,N,V_delegate
initWithCredentialID:transports:
transports
_transports
T@"NSArray",&,N,V_transports
viewSafeAreaInsetsDidChange
viewWillLayoutSubviews
viewDidLayoutSubviews
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
tableView:willDisplayCell:forRowAtIndexPath:
tableView:willDisplayHeaderView:forSection:
tableView:willDisplayFooterView:forSection:
tableView:didEndDisplayingCell:forRowAtIndexPath:
tableView:didEndDisplayingHeaderView:forSection:
tableView:didEndDisplayingFooterView:forSection:
tableView:heightForRowAtIndexPath:
tableView:heightForHeaderInSection:
tableView:heightForFooterInSection:
tableView:estimatedHeightForRowAtIndexPath:
tableView:estimatedHeightForHeaderInSection:
tableView:estimatedHeightForFooterInSection:
tableView:viewForHeaderInSection:
tableView:viewForFooterInSection:
tableView:accessoryTypeForRowWithIndexPath:
tableView:accessoryButtonTappedForRowWithIndexPath:
tableView:shouldHighlightRowAtIndexPath:
tableView:didHighlightRowAtIndexPath:
tableView:didUnhighlightRowAtIndexPath:
tableView:willSelectRowAtIndexPath:
tableView:willDeselectRowAtIndexPath:
tableView:didDeselectRowAtIndexPath:
tableView:canPerformPrimaryActionForRowAtIndexPath:
tableView:performPrimaryActionForRowAtIndexPath:
tableView:editingStyleForRowAtIndexPath:
tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:
tableView:editActionsForRowAtIndexPath:
tableView:leadingSwipeActionsConfigurationForRowAtIndexPath:
tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:
tableView:shouldIndentWhileEditingRowAtIndexPath:
tableView:willBeginEditingRowAtIndexPath:
tableView:didEndEditingRowAtIndexPath:
tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:
tableView:indentationLevelForRowAtIndexPath:
tableView:shouldShowMenuForRowAtIndexPath:
tableView:canPerformAction:forRowAtIndexPath:withSender:
tableView:performAction:forRowAtIndexPath:withSender:
tableView:canFocusRowAtIndexPath:
tableView:shouldUpdateFocusInContext:
tableView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInTableView:
tableView:selectionFollowsFocusForRowAtIndexPath:
tableView:shouldSpringLoadRowAtIndexPath:withContext:
tableView:shouldBeginMultipleSelectionInteractionAtIndexPath:
tableView:didBeginMultipleSelectionInteractionAtIndexPath:
tableViewDidEndMultipleSelectionInteraction:
tableView:contextMenuConfigurationForRowAtIndexPath:point:
tableView:previewForHighlightingContextMenuWithConfiguration:
tableView:previewForDismissingContextMenuWithConfiguration:
tableView:willPerformPreviewActionForMenuWithConfiguration:animator:
tableView:willDisplayContextMenuWithConfiguration:animator:
tableView:willEndContextMenuInteractionWithConfiguration:animator:
_setCompressedHeightForView:
sizeToFitPaneContent
_blurryTrayMinimumHeight
_newStackView
_newContainerView
_setUpContexts
_adjustForPositionOfScrollView:
_updateBlurForTray
_isContentUnderTray
_indexPathForLastRow
_safeIndexWithCount:
_navigationBarHeaderHeight
_maximumContentHeight
paneHeaderStackView
paneFooterStackView
headerPaneContext
footerPaneContext
tableView
setTableView:
_isTableViewRequired
_blurryTray
_headerWidthConstraint
_footerWidthConstraint
_paneHeaderStackView
_paneFooterStackView
_headerPaneContext
_footerPaneContext
_tableView
T@"<ASCredentialRequestPaneViewControllerDelegate>",W,N,V_delegate
T@"UIStackView",R,N,V_paneHeaderStackView
T@"UIStackView",R,N,V_paneFooterStackView
T@"ASCredentialRequestPaneContext",R,N,V_headerPaneContext
T@"ASCredentialRequestPaneContext",R,N,V_footerPaneContext
T@"UITableView",&,N,V_tableView
Tq,R,N
initWithTitle:subtitle:icon:
updateSubtitle:
_addTopFillerViewWithMargin:
_setUpTitleLabel
_addBottomFillerView
_title
_subtitle
_icon
_subtitleSubPane
as_imageNamed:
credentialWithUser:password:
initWithUser:password:
password
_password
T@"NSString",R,C,N,V_password
prepareCredentialListForServiceIdentifiers:completionHandler:
prepareInterfaceToProvideCredentialForIdentity:completionHandler:
_as_instantiateViewControllerWithConnectionHandler:
_as_auxiliaryRemoteObjectWithRequestID:
_continueButtonPressed
_setUpContinueButton
_addHeaderSpacerViewWithCustomSpacingAfter:
presentationContext
T@"ASCAuthorizationPresentationContext",R,N,V_presentationContext
as_authenticationServicesBundle
T@"NSBundle",R,N
credentialProviderExtensionConfigurationViewControllerDidFinish:completion:
beginConfiguringExtension
_finishWithSuccess:completion:
T@"<_ASCredentialProviderExtensionConfigurationViewControllerDelegate>",W,N,V_delegate
createCredentialRegistrationRequestWithChallenge:name:userID:
initWithStyle:reuseIdentifier:
initWithLoginChoice:presentationContext:authorizationProvider:
_setUpFormat
iconImage
setIconImage:
_configureImageViewForSymbolImage
_configureImageViewForAppIcon
_setUpContent
_publicKeyCredentialImageForPresentationContext:
_titleForPublicKeyCredentialAssertionWithName:identifier:
_subtitleForPublicKeyCredentialAssertion
title
setTitle:
detailText
setDetailText:
setIsSelectedLoginChoice:
_detailTextForPasswordLoginChoice:
_detailTextForPasswordLoginChoiceFromKeychain:
_detailTextForExternalPasswordLoginChoice:
_cableIcon
_defaultPasskeyIcon
_defaultSecurityKeyIcon
_setUpAccessoryImageView
_updateAccessoryImageView
_emptyRadioButtonImage
_selectedRadioButtonImage
_updateLayoutForCurrentContentSizeCategory
_additionalLeadingSeparatorInset
isSelectedLoginChoice
_authorizationProvider
_detailLabel
_iconImageView
_iconAndTextStackView
_isSelectedLoginChoice
T@"UIImage",&,N
TB,N,V_isSelectedLoginChoice
_extensionRequestDidFinish:
_setRemoteViewController:
setDismissOnBackground:
_beginRequestWithConnectionHandler:
_beginNonUIRequest:connectionHandler:
_invalidateNonUIRequestTimerIfNeeded
_nonUIRequestTimedOut
childViewControllerForHomeIndicatorAutoHidden
childViewControllerForScreenEdgesDeferringSystemGestures
childViewControllerForStatusBarHidden
childViewControllerForStatusBarStyle
childViewControllerForWhitePointAdaptivityStyle
dismissOnBackground
extension
nonUIHostContext
_remoteViewController
_nonUIHostContext
_nonUIRequestTimer
_allowRequestingUIFromNonUIRequest
_dismissOnBackground
_extension
T@"NSExtension",R,N,V_extension
T@"NSExtensionContext",R,N,V_nonUIHostContext
TB,N,V_dismissOnBackground
initWithIdentifier:type:
identifier
type
_identifier
_type
T@"NSString",R,C,N,V_identifier
Tq,R,N,V_type
setCustomSpacingAfter:
view
customSpacingAfter
_view
_customSpacingAfter
T@"UIView",R,N,V_view
Td,N,V_customSpacingAfter
prepareToCompleteUpgradeToSignInWithAppleWithUserInfo:completion:
prepareToCompleteRequestWithUpdatedCredential:userInfo:completion:
dismissRequestUI
T@"<_ASAccountAuthenticationModificationExtensionHostContextDelegate>",W,N,V_delegate
challenge
setChallenge:
setRelyingPartyIdentifier:
allowedCredentials
setAllowedCredentials:
userVerificationPreference
setUserVerificationPreference:
T@"NSArray",C,N
_initWithProvider:relyingPartyIdentifier:challenge:
coreCredentialAssertionOptions
_challenge
_userVerificationPreference
_allowedCredentials
T@"ASCPublicKeyCredentialAssertionOptions",R,N
T@"NSArray",C,N,V_allowedCredentials
T@"NSData",C,N,V_challenge
T@"NSString",C,N,V_relyingPartyIdentifier
T@"NSString",&,N,V_userVerificationPreference
_sceneDidEnterBackground:
_hostDidEnterBackground:
initWithViewController:block:
viewController
block
_viewController
_block
T@"UIViewController",R,W,N,V_viewController
T@?,R,N,V_block
_as_applicationBackgroundBlock
_as_setApplicationBackgroundBlock:
_as_viewControllerToPresentFrom
T@?,C,N,S_as_setApplicationBackgroundBlock:
getAllLocalAuthenticatorCredentialsWithCredentialID:
setNameForLocalCredentialWithGroupAndID:credential:name:
allPasskeysData
passkeyDataForPasskeyCredentialID:
_passkeyDataForPasskeyCredentialID:
deletePasskeyWithIdentifier:
updateUserVisibleName:forPasskeyWithIdentifier:
exportPasskeyCredentialWithID:
importPasskeyCredential:
T@"NSArray",R,C,N
_adjustedContentSizeForPopover:
_backdropView
initWithUser:serviceIdentifier:userInfo:
initWithUser:password:extension:serviceIdentifier:userInfo:
serviceIdentifier
userInfo
T@"NSString",R,N,V_password
T@"NSString",R,N,V_user
T@"ASCredentialServiceIdentifier",R,N,V_serviceIdentifier
T@"NSDictionary",R,N,V_userInfo
initWithAuthorizationRequest:
doNotHandle
complete
completeWithHTTPAuthorizationHeaders:
completeWithHTTPResponse:httpBody:
completeWithError:
completeWithAuthorizationResult:
presentAuthorizationViewControllerWithCompletion:
requestedOperation
httpHeaders
realm
extensionData
callerBundleIdentifier
authorizationOptions
isCallerManaged
callerTeamIdentifier
localizedCallerDisplayName
isUserInterfaceEnabled
authorizationRequest
_authorizationRequest
T@"SOAuthorizationRequest",R,N,V_authorizationRequest
T@"NSURL",R,N
T@"NSString",R,N
T@"NSDictionary",R,N
T@"NSData",R,N
callerManaged
TB,R,N,GisCallerManaged
userInterfaceEnabled
TB,R,N,GisUserInterfaceEnabled
buttonWithType:style:
defaultCornerRadius
layerClass
Td,R
initWithAuthorizationButtonType:authorizationButtonStyle:
setCornerRadius:
_drawRect:inView:
_createHighlightFilterIfNecessary
_performAnimationToSetHighlighted:
_ak_buttonType
_ak_buttonStyle
isAccessibilityElement
accessibilityTraits
accessibilityLabel
cornerRadius
_style
_highlightFilter
_cornerRadius
Td,N,V_cornerRadius
setRequestOptions:
authorizationDidNotHandle:
authorizationDidCancel:
authorizationDidComplete:
authorization:didCompleteWithHTTPAuthorizationHeaders:
authorization:didCompleteWithHTTPResponse:httpBody:
authorization:didCompleteWithAuthorizationResult:
authorization:didCompleteWithError:
authorization:presentViewController:withCompletion:
initWithAuthorizationRequests:
performRequests
_performRequestsWithStyle:options:
_performAuthKitRequests:options:
_publicErrorFromAuthKitError:
performAutoFillAssistedRequests
_authKitRequests
_authKitRequestFromAppleIDRequest:
_authorizationFromAuthKitResult:
_finishAppSSO
_authenticatedResponseFromHTTPResponse:httpBody:
performRequestsWithOptions:
_shouldPerformRequestsWithAuthKit:
_onlyHasAppleIDRequest:
_authorizationRequestsHandledByAuthenticationServicesDaemon:
_performAuthorizationRequests:requestStyle:requestOptions:
_authenticationServicesAgentProxy
_requestContextWithRequests:error:
_convertCoreErrorToPublicError:
authorizationRequests
customAuthorizationMethods
setCustomAuthorizationMethods:
proxiedAppName
setProxiedAppName:
proxiedAppIdentifier
setProxiedAppIdentifier:
proxiedBundleIdentifier
setProxiedBundleIdentifier:
proxiedTeamIdentifier
setProxiedTeamIdentifier:
proxiedAssociatedDomains
setProxiedAssociatedDomains:
proxiedIconData
setProxiedIconData:
proxiedIconScale
setProxiedIconScale:
proxiedOriginDeviceName
setProxiedOriginDeviceName:
proxySheetHeaderOverride
setProxySheetHeaderOverride:
proxySheetTitleOverride
setProxySheetTitleOverride:
proxySheetSubtitleOverride
setProxySheetSubtitleOverride:
_appSSOAuthorization
_appSSORequestURL
_appSSOPresentationAnchor
_appSSOViewController
_authorizationRequests
_customAuthorizationMethods
_proxiedAppName
_proxiedAppIdentifier
_proxiedBundleIdentifier
_proxiedTeamIdentifier
_proxiedAssociatedDomains
_proxiedIconData
_proxiedIconScale
_proxiedOriginDeviceName
_proxySheetHeaderOverride
_proxySheetTitleOverride
_proxySheetSubtitleOverride
T@"NSString",C,N,V_proxiedAppName
T@"NSString",C,N,V_proxiedAppIdentifier
T@"NSString",C,N,V_proxiedBundleIdentifier
T@"NSString",C,N,V_proxiedTeamIdentifier
T@"NSArray",C,N,V_proxiedAssociatedDomains
T@"NSData",C,N,V_proxiedIconData
T@"NSNumber",C,N,V_proxiedIconScale
T@"NSString",C,N,V_proxiedOriginDeviceName
T@"NSString",C,N,V_proxySheetHeaderOverride
T@"NSString",C,N,V_proxySheetTitleOverride
T@"NSString",C,N,V_proxySheetSubtitleOverride
T@"NSArray",R,N,V_authorizationRequests
T@"<ASAuthorizationControllerDelegate>",W,N,V_delegate
T@"<ASAuthorizationControllerPresentationContextProviding>",W,N,V_presentationContextProvider
T@"NSArray",C,N,V_customAuthorizationMethods
accountAuthenticationModificationController:didFailRequest:withError:
accountAuthenticationModificationController:didSuccessfullyCompleteRequest:withUserInfo:
performRequest:
_requestRemoteViewController:
_performReplacePasswordWithSignInWithAppleRequest:
_showUpgradeToStrongPasswordPromptForRequest:
_performUpgradePasswordToStrongPasswordRequest:
_failRequestWithError:
_viewControllerToPresentFrom
_accountAuthenticationModificationRemoteViewController
_request
_helperExtension
T@"<ASAccountAuthenticationModificationControllerDelegate>",W,N,V_delegate
T@"<ASAccountAuthenticationModificationControllerPresentationContextProviding>",W,N,V_presentationContextProvider
buttonWithTitle:target:action:
convertAccountToSignInWithAppleWithoutUserInteractionForServiceIdentifier:existingCredential:userInfo:
prepareInterfaceToConvertAccountToSignInWithAppleForServiceIdentifier:existingCredential:userInfo:
changePasswordWithoutUserInteractionForServiceIdentifier:existingCredential:newPassword:userInfo:
prepareInterfaceToChangePasswordForServiceIdentifier:existingCredential:newPassword:userInfo:
T@"ASAccountAuthenticationModificationExtensionContext",R,N
setUserID:
name
setName:
displayName
setDisplayName:
attestationPreference
setAttestationPreference:
_initWithProvider:relyingPartyIdentifier:challenge:name:userID:
coreCredentialCreationOptions
_displayName
_name
_attestationPreference
T@"ASCPublicKeyCredentialCreationOptions",R,N
T@"NSData",C,N,V_userID
T@"NSString",C,N,V_name
T@"NSString",C,N,V_displayName
T@"NSString",&,N,V_attestationPreference
initWithExtension:credentialIdentity:
_finishWithCredential:error:completion:
_credentialIdentity
T@"<_ASPasswordCredentialAuthenticationViewControllerDelegate>",W,N,V_delegate
configurationForDeleting:fromSavedAccount:
_configurationForAlertToDeletePasswordFromSavedAccount:
_configurationForAlertToDeletePasskeyFromSavedAccount:
_configurationForAlertToDeleteVerificationCodeFromSavedAccount:
configurationForDeletingSavedAccounts:
_titleStringForAlertToDeletePasswordFromSavedAccount:
_titleStringForAlertToDeleteVerificationCodeFromSavedAccount:
_titleStringForAlertToDeletePasskeyFromSavedAccount:
_subtitleStringForAlertToDeletePasswordFromSavedAccount:
_subtitleStringForAlertToDeleteVerificationCodeFromSavedAccount:
_subtitleStringForAlertToDeletePasskeyFromSavedAccount:
_titleStringForAlertToDeleteNumberOfPasswords:numberOfPasskeys:
_subtitleStringForAlertToDeleteNumberOfPasswords:numberOfPasskeys:isDeletingVerificationCodes:
_credentialDeletionStringForAlertToDeleteNumberOfPasswords:numberOfPasskeys:
_subtitleForDeletingNumberOfPasswordsWithVerificationCodes:
_buttonTitleStringForAlertToDeleteNumberOfPasswords:numberOfPasskeys:
_getInformationForSavedAccountsToDelete:numberOfPasswords:numberOfPasskeys:isDeletingVerificationCodes:
_initWithTitle:subtitle:buttonTitle:
subtitle
buttonTitle
_buttonTitle
T@"NSString",R,C,N,V_title
T@"NSString",R,C,N,V_subtitle
T@"NSString",R,C,N,V_buttonTitle
iconBorderColor
iconBorderWidth
tableViewStyle
tableViewRowHeight
paneBackgroundBlurEffect
navigationBarHeight
headerTitleFont
headerTitleColor
headerMessageFont
headerMessageColor
headerIconSize
headerIconCornerRadius
cellTitleFont
cellTitleColor
cellSubtitleFont
cellSubtitleColor
cellIconSize
cellIconTintColor
cellBackgroundConfiguration
cellIconCornerRadius
cellIconMarginLeading
cellIconMarginTrailing
cellIconBackgroundColor
cellIconSymbolConfiguration
continueButtonBackgroundColor
continueButtonDisabledBackgroundColor
continueButtonHighlightedBackgroundColor
continueButtonTitleFont
continueButtonTitleColor
continueButtonTitleMargin
continueButtonCornerRadius
continueButtonHeight
_iconCornerRadiusForSize:
T^{CGColor=},R,N
Td,R,N
T@"UIBlurEffect",R,N
T@"UIFont",R,N
T@"UIColor",R,N
T{CGSize=dd},R,N
T@"UIBackgroundConfiguration",R,N
T@"UIImageSymbolConfiguration",R,N
initWithRelyingPartyIdentifier:delegate:
identifiersToAssertionResponses
mergeIdentifiersToAssertionResponses:
setPlatformAssertionSelectionCallback:
setSecurityKeyAssertionSelectionCallback:
selectPlatformAssertion:
selectSecurityKeyAssertion:
hasTornDown
tearDownIfNecessary
uuid
panel
setPanel:
sourceApplicationIdentifier
setSourceApplicationIdentifier:
authenticatedLAContext
setAuthenticatedLAContext:
overrideError
setOverrideError:
_internalSemaphore
_identifiersToAssertionResponses
_selectPlatformAssertionCallback
_selectSecurityKeyAssertionCallback
_hasTornDown
_uuid
_panel
_sourceApplicationIdentifier
_authenticatedLAContext
_overrideError
T@"NSUUID",R,C,N,V_uuid
T@"<ASPublicKeyCredentialManagerDelegate>",W,N,V_delegate
T@"_WKWebAuthenticationPanel",&,N,V_panel
T@"NSString",C,N,V_sourceApplicationIdentifier
T@"NSDictionary",R,C,N
T@"LAContext",&,N,V_authenticatedLAContext
T@"NSError",C,N,V_overrideError
TB,R,N,V_hasTornDown
completeRequestReturningItems:completionHandler:
completeRequestWithSelectedCredential:completionHandler:
completeExtensionConfigurationRequest
identityWithServiceIdentifier:user:recordIdentifier:
initWithServiceIdentifier:user:recordIdentifier:
_initWithFoundationCredentialIdentity:
recordIdentifier
rank
setRank:
credentialIdentityStoreIdentifier
_recordIdentifier
_rank
_credentialIdentityStoreIdentifier
T@"SFExternalCredentialIdentityStoreIdentifier",R,N,V_credentialIdentityStoreIdentifier
T@"NSString",R,C,N,V_recordIdentifier
Tq,N,V_rank
_initWithProvider:relyingPartyIdentifier:challenge:displayName:name:userID:
credentialParameters
setCredentialParameters:
excludedCredentials
setExcludedCredentials:
residentKeyPreference
setResidentKeyPreference:
_credentialParameters
_excludedCredentials
_residentKeyPreference
T@"NSArray",C,N,V_credentialParameters
T@"NSArray",C,N,V_excludedCredentials
T@"NSString",&,N,V_residentKeyPreference
_enableBluetooth
_setUpTitlePane
_setUpMessagePane
_setUpButtonPane
enableBluetoothHandler
setEnableBluetoothHandler:
_enableBluetoothHandler
T@?,C,N,V_enableBluetoothHandler
addTarget:action:
titleLabel
setTitleLabel:
T@"UILabel",&,N,V_titleLabel
credentialListViewControllerDidPrepareInterface:
credentialListViewController:didFinishWithCredential:completion:
initWithExtension:serviceIdentifiers:
_finishWithCredential:completion:
T@"<_ASCredentialListViewControllerDelegate>",W,N,V_delegate
requestedScopes
setRequestedScopes:
nonce
setNonce:
setRequestedOperation:
_requestedScopes
_nonce
_requestedOperation
T@"NSArray",C,N,V_requestedScopes
T@"NSString",C,N,V_nonce
T@"NSString",C,N,V_requestedOperation
setAuthorizationOptions:
setUserInterfaceEnabled:
_userInterfaceEnabled
_authorizationOptions
T@"NSArray",C,N,V_authorizationOptions
TB,N,GisUserInterfaceEnabled,V_userInterfaceEnabled
_as_credentialProviderHostInterface
_as_credentialProviderExtensionInterface
_as_accountModificationHostInterface
_as_accountModificationExtensionInterface
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@24@0:8@16
v16@0:8
v20@0:8B16
@16@0:8
@32@0:8@16@24
@64@0:8@16@24{UIEdgeInsets=dddd}32
v32@0:8q16@?24
v32@0:8q16@?<v@?B@"NSError">24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v40@0:8@16@24@?32
v32@0:8@"NSDictionary"16@?<v@?>24
v40@0:8@"ASPasswordCredential"16@"NSDictionary"24@?<v@?>32
v32@0:8@"NSError"16@?<v@?>24
@24@0:8@?16
v48@0:8@16@24@32@40
v24@0:8@16
@"<_ASAccountAuthenticationModificationRemoteViewControllerDelegate>"
@"SOAuthorizationResult"
v40@0:8@16@24@32
@24@0:8Q16
v24@0:8@?16
v40@0:8@"NSDictionary"16@"NSError"24@"LAContext"32
@"NSString"24@0:8Q16
v24@0:8@?<v@?>16
v36@0:8B16B20B24@28
v24@0:8d16
@24@0:8d16
v28@0:8@16B24
v32@0:8d16@24
v40@0:8@16d24@32
@"UIStackView"
@"UIView"
@"LAUIAuthenticationView"
@"ASCredentialRequestPaneContext"
@"UILabel"
@"NSObject<OS_dispatch_group>"
@"ASCredentialRequestButton"
@"<ASCredentialRequestSubPaneConfirmButtonDelegate>"
@32@0:8@16Q24
d16@0:8
d24@0:8@16
d24@0:8@"<UIViewControllerContextTransitioning>"16
v24@0:8@"<UIViewControllerContextTransitioning>"16
@"<UIViewImplicitlyAnimating>"24@0:8@"<UIViewControllerContextTransitioning>"16
@20@0:8B16
@40@0:8@16@24@32
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
@"<UIViewControllerAnimatedTransitioning>"24@0:8@"UIViewController"16
@"<UIViewControllerInteractiveTransitioning>"24@0:8@"<UIViewControllerAnimatedTransitioning>"16
@"UIPresentationController"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
v36@0:8@16@24B32
Q24@0:8@16
q24@0:8@16
@48@0:8@16q24@32@40
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
v32@0:8@16@24
@"UITapGestureRecognizer"
@"NSLayoutConstraint"
@"UIViewController"
@"<ASCredentialRequestContainerViewControllerDelegate>"
@"<ASCredentialRequestPaneViewControllerDelegate>"
@"UIVisualEffectView"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@"NSData"16@0:8
v24@0:8@"NSData"16
@"NSData"
@24@0:8B16B20
v32@0:8@16q24
v40@0:8@16Q24@?32
v48@0:8@16@24q32@?40
v32@0:8@"_WKWebAuthenticationPanel"16q24
v40@0:8@"_WKWebAuthenticationPanel"16Q24@?<v@?@"NSString">32
v48@0:8@"_WKWebAuthenticationPanel"16@"NSArray"24q32@?<v@?@"_WKWebAuthenticationAssertionResponse">40
v32@0:8@"_WKWebAuthenticationPanel"16@?<v@?@"LAContext">24
v32@0:8@"_WKWebAuthenticationPanel"16@?<v@?q>24
@56@0:8@16@24@32q40@48
@48@0:8@16@24@32@40
@"NSUUID"56@0:8@"NSArray"16@"NSString"24@"<ASPublicKeyCredentialManagerDelegate>"32q40@"ASGlobalFrameIdentifier"48
@"NSUUID"48@0:8@"ASCPublicKeyCredentialCreationOptions"16@"LAContext"24@"<ASPublicKeyCredentialManagerDelegate>"32@"ASGlobalFrameIdentifier"40
v32@0:8@"ASCPlatformPublicKeyCredentialLoginChoice"16@"LAContext"24
@"NSUUID"24@0:8@"NSString"16
@"NSUUID"24@0:8@"ASGlobalFrameIdentifier"16
@"WBSPair"24@0:8@"NSUUID"16
v40@0:8@"WBSPublicKeyCredentialIdentifier"16@"LAContext"24@"NSUUID"32
v32@0:8@"NSUUID"16@?<v@?B>24
@"NSUUID"40@0:8@"ASCPublicKeyCredentialCreationOptions"16@"<ASPublicKeyCredentialManagerDelegate>"24@"ASGlobalFrameIdentifier"32
v24@0:8@"ASCSecurityKeyPublicKeyCredentialLoginChoice"16
v32@0:8@"NSUUID"16@"NSError"24
@"WBSPair"32@0:8@"ASCPublicKeyCredentialCreationOptions"16Q24
@"WBSPair"32@0:8@"ASCPublicKeyCredentialAssertionOptions"16Q24
@"<ASPasskeyAutoFillManagerDelegate>"16@0:8
v24@0:8@"<ASPasskeyAutoFillManagerDelegate>"16
@56@0:8Q16@24@32@40@48
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableDictionary"
@"NSMapTable"
@"<ASPasskeyAutoFillManagerDelegate>"
v48@0:8@"ASPasswordCredential"16@"ASCredentialServiceIdentifier"24@"NSDictionary"32@"NSUUID"40
v48@0:8@16@24@32@?40
v40@0:8@"_ASAccountAuthenticationModificationHostViewController"16@"NSDictionary"24@?<v@?>32
v48@0:8@"_ASAccountAuthenticationModificationHostViewController"16@"ASPasswordCredential"24@"NSDictionary"32@?<v@?>40
v24@0:8@"_ASAccountAuthenticationModificationHostViewController"16
v40@0:8@"_ASAccountAuthenticationModificationHostViewController"16@"NSError"24@?<v@?>32
@"_ASAccountAuthenticationModificationHostViewController"
@"ASPasswordCredential"
@"ASCredentialServiceIdentifier"
v24@0:8@"SFCredentialProviderExtensionManager"16
v24@0:8@"_ASPasswordCredentialAuthenticationViewController"16
v48@0:8@"_ASPasswordCredentialAuthenticationViewController"16@"ASPasswordCredential"24@"NSError"32@?<v@?>40
v48@0:8@16@24@?32@?40
v32@0:8@"<_ASAuthenticationProvider>"16@"UIViewController"24
v48@0:8@"<_ASAuthenticationProvider>"16@"NSDictionary"24@?<v@?>32@?<v@?>40
@"UIWindow"16@0:8
v32@0:8@"ASCredentialRequestConfirmButtonSubPane"16@"LAContext"24
v24@0:8@"ASCredentialRequestConfirmButtonSubPane"16
B24@0:8@"ASCredentialRequestConfirmButtonSubPane"16
q32@0:8@16q24
@32@0:8@16q24
B32@0:8@16@24
q40@0:8@16@24q32
v40@0:8@16q24@32
q32@0:8@"UITableView"16q24
@"UITableViewCell"32@0:8@"UITableView"16@"NSIndexPath"24
q24@0:8@"UITableView"16
@"NSString"32@0:8@"UITableView"16q24
B32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"24@0:8@"UITableView"16
q40@0:8@"UITableView"16@"NSString"24q32
v40@0:8@"UITableView"16q24@"NSIndexPath"32
v40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
@28@0:8@16B24
q16@0:8
@24@0:8q16
v24@0:8q16
v40@0:8@16@?24@?32
@"ASCAuthorizationPresentationContext"
@"ASCredentialRequestImageSubPane"
@"ASCredentialRequestConfirmButtonSubPane"
@"<ASCLoginChoiceProtocol>"
@"NSArray"
@"AKASAuthorizationProvider"
@"NSObject<OS_dispatch_queue>"
@"_ASPasswordCredentialAuthenticationViewController"
@"ASCPasswordCredential"
@"ASCredentialRequestInfoLabelSubPane"
v32@0:8@"CXCallObserver"16@"CXCall"24
@"CXCallObserver"
@"ASPublicKeyCredentialBase"
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
{CGSize="width"d"height"d}
@32@0:8Q16@24
@"UITextField"
@"UIActivityIndicatorView"
@"ASCredentialRequestButtonContinue"
@"<ASPasswordAuthenticationPaneViewControllerDelegate>"
v32@0:8@16d24
@"ASCredentialRequestPaneViewController"
@"ASCABLELoginChoice"
@"NSString"
@"_ASCABLEQRCodeImageView"
@"_ASCABLEQRCodeBadgeView"
@"UIImage"
@"UIImageView"
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"SFCredentialProviderExtensionHelperProxy"
v56@0:8@16@24@32@40@?48
v40@0:8@"ASPasswordCredential"16@"ASCredentialServiceIdentifier"24@"NSDictionary"32
v48@0:8@"ASPasswordCredential"16@"ASCredentialServiceIdentifier"24@"NSDictionary"32@?<v@?>40
v48@0:8@"ASCredentialServiceIdentifier"16@"ASPasswordCredential"24@"NSString"32@"NSDictionary"40
v56@0:8@"ASCredentialServiceIdentifier"16@"ASPasswordCredential"24@"NSString"32@"NSDictionary"40@?<v@?>48
@"NSHTTPURLResponse"
@"NSTimer"
@"<ASAuthorizationProvider>"
@"<ASAuthorizationCredential>"
v40@0:8@"ASCredentialRequestPaneViewController"16@"<ASCCredentialProtocol>"24@"NSError"32
v48@0:8@"ASCredentialRequestPaneViewController"16@"<ASCLoginChoiceProtocol>"24@"LAContext"32@?<v@?@"<ASCCredentialProtocol>"@"NSError">40
v24@0:8@"ASCredentialRequestPaneViewController"16
B24@0:8@"ASCredentialRequestContainerViewController"16
v24@0:8@"ASCredentialRequestContainerViewController"16
v40@0:8@"ASPasswordAuthenticationPaneViewController"16@"NSString"24@?<v@?@"<ASCCredentialProtocol>"@"NSError">32
v32@0:8@"ASPasswordAuthenticationPaneViewController"16@"ASCPasswordCredential"24
@"ASNavigationController"
@"SFWirelessSettingsController"
@"<ASAuthorizationViewControllerDelegate>"
@40@0:8@16{CGSize=dd}24
@48@0:8@16d24{CGSize=dd}32
@"NSPersonNameComponents"
v40@0:8@"NSExtensionContext<_ASExtensionHostContext>"16@"NSError"24@?<v@?>32
v40@0:8@"_ASAccountAuthenticationModificationExtensionHostContext"16@"NSDictionary"24@?<v@?>32
v48@0:8@"_ASAccountAuthenticationModificationExtensionHostContext"16@"ASPasswordCredential"24@"NSDictionary"32@?<v@?>40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"ASAuthorizationAppleIDCredential"@"NSError">32
v24@0:8@"_ASAccountAuthenticationModificationExtensionHostContext"16
@"AKAuthorization"
@"<_ASAccountAuthenticationModificationExtensionContextProtocol>"
@"NSDictionary"
@"<_ASAccountAuthenticationModificationHostViewControllerDelegate>"
B24@0:8q16
@"NSMutableOrderedSet"
@"NSUserDefaults"
@"NSURL"
v48@0:8{?=[8I]}16
v32@0:8@"ASAuthorizationController"16@"ASAuthorization"24
v32@0:8@"ASAuthorizationController"16@"NSError"24
v32@0:8@"ASAuthorizationController"16@"NSString"24
@"UIWindow"24@0:8@"ASAuthorizationController"16
@40@0:8@16@24@?32
@44@0:8@16@24B32@?36
@48@0:8@16@24B32B36@?40
B20@0:8B16
@"ASAuthorizationController"
@"ASAuthorizationSingleSignOnProvider"
@"SFAuthenticationSession"
@"ASWebAuthenticationSession"
@"<ASWebAuthenticationPresentationContextProviding>"
v32@0:8@"ASPasswordCredential"16@?<v@?>24
@"<_ASExtensionHostContextDelegate>"16@0:8
v24@0:8@"<_ASExtensionHostContextDelegate>"16
@"<_ASCredentialProviderExtensionHostContextDelegate>"
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
v40@0:8@16@24q32
d32@0:8@16@24
d32@0:8@16q24
q32@0:8@16@24
B48@0:8@16:24@32@40
v48@0:8@16:24@32@40
B40@0:8@16@24@32
@48@0:8@16@24{CGPoint=dd}32
v40@0:8@"UITableView"16@"UITableViewCell"24@"NSIndexPath"32
v40@0:8@"UITableView"16@"UIView"24q32
d32@0:8@"UITableView"16@"NSIndexPath"24
d32@0:8@"UITableView"16q24
@"UIView"32@0:8@"UITableView"16q24
q32@0:8@"UITableView"16@"NSIndexPath"24
v32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSString"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"32@0:8@"UITableView"16@"NSIndexPath"24
@"UISwipeActionsConfiguration"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
B48@0:8@"UITableView"16:24@"NSIndexPath"32@40
v48@0:8@"UITableView"16:24@"NSIndexPath"32@40
B32@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24
v40@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UITableView"16
B40@0:8@"UITableView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
v24@0:8@"UITableView"16
@"UIContextMenuConfiguration"48@0:8@"UITableView"16@"NSIndexPath"24{CGPoint=dd}32
@"UITargetedPreview"32@0:8@"UITableView"16@"UIContextMenuConfiguration"24
v40@0:8@"UITableView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionCommitAnimating>"32
v40@0:8@"UITableView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionAnimating>"32
q24@0:8q16
@"UITableView"
v32@0:8@"NSArray"16@?<v@?>24
v24@0:8@"ASPasswordCredentialIdentity"16
v32@0:8@"ASPasswordCredentialIdentity"16@?<v@?>24
v40@0:8@"_ASCredentialProviderExtensionHostContext"16@"ASPasswordCredential"24@?<v@?>32
v32@0:8@"_ASCredentialProviderExtensionHostContext"16@?<v@?>24
v28@0:8B16@?20
@"<_ASCredentialProviderExtensionConfigurationViewControllerDelegate>"
@"NSExtensionContext<_ASExtensionHostContext>"
@"NSExtension"
@"<_ASAccountAuthenticationModificationExtensionHostContextDelegate>"
v24@0:8@"NSString"16
@"NSArray"16@0:8
v24@0:8@"NSArray"16
@32@0:8@16@?24
@?16@0:8
@"NSArray"24@0:8@"NSData"16
v32@0:8@"NSString"16@"WBSPublicKeyCredentialIdentifier"24
v24@0:8@"WBSPublicKeyCredentialIdentifier"16
@"WBSPair"24@0:8@"NSString"16
@"NSString"24@0:8@"WBSPair"16
{CGSize=dd}32@0:8{CGSize=dd}16
@56@0:8@16@24@32@40@48
@"SOAuthorizationRequest"
@32@0:8q16q24
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@"CAFilter"
v24@0:8@"SOAuthorization"16
v32@0:8@"SOAuthorization"16@"NSDictionary"24
v40@0:8@"SOAuthorization"16@"NSHTTPURLResponse"24@"NSData"32
v32@0:8@"SOAuthorization"16@"SOAuthorizationResult"24
v32@0:8@"SOAuthorization"16@"NSError"24
v40@0:8@"SOAuthorization"16@"UIViewController"24@?<v@?B@"NSError">32
v32@0:8q16Q24
v32@0:8@16Q24
v24@0:8Q16
v40@0:8@16q24Q32
@32@0:8@16^@24
@"SOAuthorization"
@"UIWindow"
@"ASCAgentProxy"
@"<ASAuthorizationControllerDelegate>"
@"<ASAuthorizationControllerPresentationContextProviding>"
@"NSNumber"
v40@0:8@"_ASAccountAuthenticationModificationRemoteViewController"16@"NSDictionary"24@?<v@?>32
v48@0:8@"_ASAccountAuthenticationModificationRemoteViewController"16@"ASPasswordCredential"24@"NSDictionary"32@?<v@?>40
v24@0:8@"_ASAccountAuthenticationModificationRemoteViewController"16
v40@0:8@"_ASAccountAuthenticationModificationRemoteViewController"16@"NSError"24@?<v@?>32
v32@0:8@"_ASAccountAuthenticationModificationRemoteViewController"16@"NSError"24
@"_ASAccountAuthenticationModificationRemoteViewController"
@"ASAccountAuthenticationModificationRequest"
@"ASAccountAuthenticationModificationController"
@"<ASAccountAuthenticationModificationControllerDelegate>"
@"<ASAccountAuthenticationModificationControllerPresentationContextProviding>"
@40@0:8@16@24:32
@"ASPasswordCredentialIdentity"
@"<_ASPasswordCredentialAuthenticationViewControllerDelegate>"
@32@0:8Q16Q24
@36@0:8Q16Q24B32
v48@0:8@16^Q24^Q32^B40
^{CGColor=}16@0:8
d32@0:8{CGSize=dd}16
@"NSObject<OS_dispatch_semaphore>"
@"NSUUID"
@"<ASPublicKeyCredentialManagerDelegate>"
@"_WKWebAuthenticationPanel"
@"LAContext"
@"NSError"
@"SFExternalCredentialIdentityStoreIdentifier"
@64@0:8@16@24@32@40@48@56
v32@0:8@16:24
@"_ASIncomingCallObserver"
@"<_ASCredentialListViewControllerDelegate>"
