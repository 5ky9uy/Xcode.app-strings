@(#)PROGRAM:AXTapToSpeakTime  PROJECT:Accessibility-1
333?
ffffff
v8@?0
TripleClickOptions
Localizable
TAPTIC_CHIMES_TITLE
TAPTIC_CHIMES_ON_THE_HOUR_DESCRIPTION
TAPTIC_CHIMES_ON_THE_HALF_HOUR_DESCRIPTION
TAPTIC_CHIMES_ON_THE_QUARTER_HOUR_DESCRIPTION
TAPTIC_CHIMES_SCHEDULE_TITLE
TAPTIC_CHIMES_SOUNDS_TITLE
TAPTIC_CHIMES_ON_THE_HOUR_LABEL
TAPTIC_CHIMES_ON_THE_HALF_HOUR_LABEL
TAPTIC_CHIMES_ON_THE_QUARTER_HOUR_LABEL
TAPTIC_CHIMES_SOUND_BELLS_LABEL
TAPTIC_CHIMES_SOUND_BIRDS_LABEL
TAP_TO_SPEAK_TITLE
TAP_TO_SPEAK_DESCRIPTION
TAP_TO_SPEAK_RESPECT_MUTE_LABEL
TAP_TO_SPEAK_ALWAYS_LABEL
TAPTIC_TIME_TITLE
TAPTIC_TIME_UNAVAILABLE_DESCRIPTION
TAPTIC_TIME_DISABLED_DESCRIPTION
TAPTIC_TIME_MUTE_DESCRIPTION
TAPTIC_TIME_ALWAYS_DESCRIPTION
TAPTIC_TIME_VOICEOVER_DESCRIPTION
TAPTIC_TIME_DISABLED
TAPTIC_TIME_ENCODING_DECIMAL_DESCRIPTION
TAPTIC_TIME_ENCODING_TERSE_DESCRIPTION
TAPTIC_TIME_ENCODING_MORSE_DESCRIPTION
TAPTIC_TIME_ENCODING_DECIMAL_LABEL
TAPTIC_TIME_ENCODING_TERSE_LABEL
TAPTIC_TIME_ENCODING_MORSE_LABEL
com.apple.accessibility.AXTapticChimesScheduler.ChimeFire
com.apple.accessibility.AXTapticChimesScheduler
com.apple.accessibility.TapticChimesScheduler-%@
v16@?0@"NSNotification"8
NanoTimeKitFaceDefaultsChangedDarwinNotification
TapticChimesPreWakeOverride
TapticChimesPrePlayAudioOverride
com.apple.NanoTimeKit.face
NTKFacePreferencesTimeOffsetKey
chime-wake-fired
AssertType
PreventUserIdleSystemSleep
AssertName
FrameworkBundleID
com.apple.AXTapToSpeakTime.TapticChimesScheduler
TimeoutAction
TimeoutActionRelease
TimeoutSeconds
StartTime
chime-playback
expected_chime_to_actual_chime_start_time
wake_vs_expected_wake_time
wake_to_chime_start_time
chime_start_to_end_time
AXFlashScreenUIServices
Unable to find class %s
com.apple.accessibility.AXTapToSpeakTimeManager
jjmm
v12@?0i8
Accessibility
TapToSpeakTime_AVSpeechSynthesizer
PTQ+ABwag03BwO/CKvIK/A
Default
Compact
Premium
Mickey
Minnie
Two Finger Hold
One Finger Tap
com.apple.springboard.ringerstate
ChimeAssets
Bells
Birds
Bell.caf
Bell.plist
Bird%02d.caf
Bird%02d.plist
QuarterBell.caf
QuarterBell.plist
QuarterBird.caf
QuarterBird.plist
Atoms
<%@: %p; audioFilePath = "%@", volume = "%f", prePlayTimeInterval = "%f" hapticDictionary = "%@">
unexpected nil preference key!
unexpected object type! is=%@, expected=%@
unexpected nil domainAccessor!
unexpected empty domain!
Taptic Chimes frequency changed, will re-schedule chimes
Taptic Chimes sound type changed, will preview chimes
VoiceOver status changed!
Taptic Chimes enabled, will begin scheduling chimes
Taptic Chimes disabled, will stop scheduling chimes
Buddy not yet complete! suppresing chime
ClockFace not scheduling chimes because VoiceOver is enabled
Using PreWakeOverride value: %f
Using PrePlayAudioOverride value: %f
Using face display time for current date: %@, with time offset=%f
Previewing chimes
Clearing chime timer
failed to deactivate audio session due to: %@
failed to reset audio category (%@) due to: %@
Scheduling chime timer
Scheduling wake!! Wake time: %@ (%f seconds), Chime time: %@ (%f seconds)
chime wake timer fired: %@
scheduling NEXT chime in %f seconds
created power assertion with name: %@, timeout: %f, ID: %d
releasing power assertion with ID: %d
cannot activate taptic chimes
chime starting: %@, isRingerMuted=%@
ringer NOT muted, setting up audio session
Using VoiceOver's current audio session
failed to set audio session category (%@) due to: %@
failed to set audio session active due to: %@
[START] prewarming audio player: (%f seconds away)
failed to prepare audio player
[END] prewarming audio player: (%f seconds away)
[START] schedule chime time: %@ (%f seconds away)
failed to schedule chime playback
[END] schedule chime time: (%f seconds away)
expected haptic time: %@ (%f seconds away)
haptics completed!
ringer IS muted, not waiting for audio player callback
TapticChime-Output
chimeAsset: %@, for chime date: %@
TapticChime-Complete
chime event: %@
wake to chime start took over %f seconds! actual time: %f seconds. wake delta: %f seconds
chime did complete
audioPlayerDidFinishPlaying: successfully: %@
chime failed to play successfully
NTK defaults changed
tap to speak time is disabled
availability = always. ignoring ringer state
availability = respect mute, ringerIsMuted = %@
ringer is muted, will NOT speak time
tapticTimeEnabled = %@
Attempting to start time output: %@, for preferredVoice: %@, with gesture: %@
Stopping (any) existing output
Tap to speak time - voice services
Speaking time: %@
speechRequest: %@
failed to speak time due to %@
canOutputPremiumVoice: %@
Setting up audio session for %@
Speech output did complete
did start AVSpeechUtterance: %@
did finish AVSpeechUtterance: %@
did cancel AVSpeechUtterance: %@
did start VSSpeechRequest: %@
did finish VSSpeechRequest: %@, successfully: %@, phonemesSpoken: %@, error: %@
did pause VSSpeechRequest: %@
did continue VSSpeechRequest: %@
will speak range: %@ for request %@
failed to find asset for sound type: %li, hour: %lu
failed to find quarter hour asset for sound type: %li
empty haptic dictionary at path: %@
created system sound id: %u, with haptic dictionary: %@
softlink:o:path:/System/Library/../../AppleInternal/Library/Frameworks/AXFlashScreenUIServices.framework/AXFlashScreenUIServices
AXTimeOutputPreferences
AXTapticChimesScheduler
AVAudioPlayerDelegate
NSObject
AXTapToSpeakTimeManager
AVSpeechSynthesizerDelegate
VSSpeechSynthesizerDelegate
AXTapticChimeAsset
sharedInstance
initWithDomain:
_npsValueForPreferenceKey:expectedClass:
accessibilityDomainAccessor
synchronize
objectForKey:
domain
length
setObject:forKey:
arrayWithObjects:count:
setWithArray:
synchronizeNanoDomain:keys:
_npsValueForPreferenceKey:
boolValue
integerValue
_npsBoolValueForPreferenceKey:defaultValue:
tapToSpeakTimeEnabled
preferenceKeyForSelector:
numberWithBool:
_setNPSValue:preferenceKey:
tapToSpeakTimeAvailability
_npsIntegerValueForPreferenceKey:defaultValue:
numberWithInteger:
voiceOverTapticTimeMode
_voiceOverIsEnabled
voiceOverTapticTimeEncoding
voiceOverTapticChimesEnabled
voiceOverTapticChimesFrequencyEncoding
voiceOverTapticChimesSoundType
bundleForClass:
localizedStringForKey:value:table:
localizedStringForKey:
localizedStringForTapticChimesFrequencyEncoding:
localizedStringForTapticChimesSoundType:
tapticTimeIsAvailable
array
addObject:
_voiceOverIsInTripleClick
componentsJoinedByString:
localizedStringForTapticTimeEncoding:
setTapToSpeakTimeEnabled:
setTapToSpeakTimeAvailability:
setVoiceOverTapticTimeMode:
setVoiceOverTapticTimeEncoding:
setVoiceOverTapticChimesEnabled:
setVoiceOverTapticChimesFrequencyEncoding:
setVoiceOverTapticChimesSoundType:
tapticChimesFrequencyOptions
tapticChimesSoundsOptions
tapToSpeakAvailabilityOptions
tapticTimeEncodingOptions
tapticChimesLocalizedTitle
tapticChimesLocalizedDescription
tapticChimesLocalizedCurrentFrequency
tapticChimesLocalizedCurrentSounds
tapticChimesScheduleLocalizedTitle
tapticChimesSoundsLocalizedTitle
tapToSpeakTimeLocalizedTitle
tapToSpeakTimeLocalizedDescription
localizedStringForTapToSpeakTimeAvailability:
tapticTimeLocalizedTitle
tapticTimeLocalizedDescription
tapticTimeLocalizedCurrentMode
tapticTimeModeLocalizedDescription
_init
init
processIsAllowedToScheduleChimes
stringWithFormat:
_tapticChimesStateDidChange:
registerUpdateBlock:forRetrieveSelector:withListener:
_scheduleChimeTimer
canPlayScheduledTapticChime
_previewChimes
defaultCenter
mainQueue
addObserverForName:object:queue:usingBlock:
_unregisterForNotifications
_clearChimeTimer
dealloc
_registerForNotifications
canPlayTapticChime
canScheduleTapticChimes
floatValue
date
dateByAddingTimeInterval:
_currentDate
dateWithTimeInterval:sinceDate:
_previewChimesForStartDate:chimeDate:frequency:soundType:
nextChimeAssetForStartDate:frequency:soundType:timeIntervalUntilChime:
_outputTapticChime:atDate:
_releasePowerAssertionIfPossible:
stop
setActive:withOptions:error:
setCategory:error:
_denormalizeVolumeIfNecessary
invalidate
_preWakeTimeInterval
dateWithTimeIntervalSinceNow:
_prePlayAudioTimeInterval
_chimeWakeTimerFired:
initWithTimeInterval:serviceIdentifier:target:selector:userInfo:
setUserVisible:
mainRunLoop
scheduleInRunLoop:
_createPowerAssertionWithName:timeout:
numberWithDouble:
dictionaryWithObjects:forKeys:count:
volume
category
_normalizeVolumeIfNecessary
setActive:error:
audioFilePath
URLWithString:
initWithContentsOfURL:error:
setDelegate:
setVolume:
timeIntervalSinceNow
prepareToPlay
deviceCurrentTime
playAtTime:
createSystemSoundIDForStartTime:
tapticTimeInternalFlashScreenEnabled
hide
_chimeDidFinishPlaying
show
hapticAtomEntries
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
doubleValue
flashWithDuration:
currentCalendar
components:fromDate:
dateFromComponents:
earlierDate:
hour
minute
quarterHourAssetForType:
hourAssetForType:hour:
timeIntervalSinceDate:
prePlayTimeInterval
processIsAllowedToInterfaceWithNanoMediaRemote
initializeIfNeeded
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
audioPlayerDidFinishPlaying:successfully:
audioPlayerDecodeErrorDidOccur:error:
audioPlayerBeginInterruption:
audioPlayerEndInterruption:withOptions:
audioPlayerEndInterruption:withFlags:
audioPlayerEndInterruption:
lastMediaVolume
setLastMediaVolume:
.cxx_destruct
_pcServiceIdentifier
_chimeTimer
_audioPlayer
_previousAudioSessionCategory
_currentChimeAsset
_audioPlaybackPowerAssertionID
_lastExpectedWakeTime
_lastActualWakeTime
_lastExpectedChimeTime
_lastActualChimeTime
_mediaQueue
_lastMediaVolume
Tf,N,V_lastMediaVolume
avSpeechMode
autoupdatingCurrentLocale
dateFormatFromTemplate:options:locale:
setDateFormat:
_ringerStateChanged
isSpeaking
vsSpeechSynthesizer
tapticTimeManager
isCurrentlyOutputting
outputTime:preferredVoice:
outputTime:preferredVoice:withGesture:
_canSpeakTimeForVoice:andGesture:
_speakTime:preferredVoice:
_canTapticTime
_outputTapticTime:
avSpeechSynthesizer
stopSpeakingAtBoundary:
stopSpeakingAtNextBoundary:synchronously:error:
stopCurrentOutput
_setupAudioSessionForVoice:
_currentLanguageCode
dateFormatter
stringFromDate:
speechUtteranceWithString:
voiceWithLanguage:
setVoice:
speakUtterance:
setText:
setLanguageCode:
setGender:
setFootprint:
setVoiceType:
startSpeakingRequest:
sharedPreferences
assistantIsEnabled
inProgressOutputVoice
outputVoice
languageCode
VSVoiceAsset
outputHoursAndMinutes:
localeIdentifier
setCategory:withOptions:error:
speechOutputDidComplete
speechSynthesizer:didStartSpeechUtterance:
speechSynthesizer:didFinishSpeechUtterance:
speechSynthesizer:didPauseSpeechUtterance:
speechSynthesizer:didContinueSpeechUtterance:
speechSynthesizer:didCancelSpeechUtterance:
speechSynthesizer:willSpeakRangeOfSpeechString:utterance:
speechSynthesizer:didStartSpeakingRequest:
speechSynthesizer:withRequest:didReceiveTimingInfo:
speechSynthesizer:didFinishSpeakingRequest:successfully:phonemesSpoken:withError:
speechSynthesizer:didFinishSpeakingRequest:withInstrumentMetrics:
speechSynthesizer:didPauseSpeakingRequest:
speechSynthesizer:didContinueSpeakingRequest:
speechSynthesizer:willSpeakRangeOfSpeechString:forRequest:
speechSynthesizer:withSynthesisRequest:didGenerateAudioChunk:
speechSynthesizer:didFinishSynthesisRequest:withInstrumentMetrics:error:
speechSynthesizer:didStartPresynthesizedAudioRequest:
speechSynthesizer:didStopPresynthesizedAudioRequest:atEnd:error:
speechSynthesizer:didFinishPresynthesizedAudioRequest:withInstrumentMetrics:error:
speechSynthesizer:didFinishPrewarmRequest:withError:
speechSynthesizer:didStartPlayingPreviewRequest:
canOutputTime
outputTime:
stopOutput
_getPremiumVoiceAsset
_speakTime:withCharacterVoiceIdentifier:
_canOutputPremiumVoice
_ringerStateNotifyToken
_cachedRingerIsMuted
_queue
_vsSpeechSynthesizer
_avSpeechSynthesizer
_dateFormatter
_tapticTimeManager
T@"VSSpeechSynthesizer",R,N,V_vsSpeechSynthesizer
T@"AVSpeechSynthesizer",R,N,V_avSpeechSynthesizer
T@"NSDateFormatter",R,N,V_dateFormatter
T@"AXTapticTimeManager",R,N,V_tapticTimeManager
bundlePath
stringByAppendingPathComponent:
_assetPathForChimeSoundType:fileName:
_initWithChimeSoundType:audioFilePath:hapticsFilePath:
dictionaryWithContentsOfFile:
lastObject
hapticDictionary
dictionaryWithDictionary:
setObject:forKeyedSubscript:
_volume
_audioFilePath
_prePlayTimeInterval
_hapticDictionary
T@"NSDictionary",R,N,V_hapticDictionary
T@"NSString",R,N,V_audioFilePath
Td,R,N,V_prePlayTimeInterval
Tf,R,N,V_volume
T@"NSArray",R,N
@16@0:8
@24@0:8@16
@32@0:8@16#24
v32@0:8@16@24
B28@0:8@16B24
q32@0:8@16q24
B16@0:8
v20@0:8B16
q16@0:8
v24@0:8q16
@24@0:8q16
v16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v28@0:8@16B24
v24@0:8@16
v32@0:8@16Q24
v28@0:8@"AVAudioPlayer"16B24
v32@0:8@"AVAudioPlayer"16@"NSError"24
v24@0:8@"AVAudioPlayer"16
v32@0:8@"AVAudioPlayer"16Q24
d16@0:8
v48@0:8@16@24q32q40
I32@0:8@16d24
v20@0:8I16
B32@0:8@16@24
@48@0:8@16q24q32^d40
f16@0:8
v20@0:8f16
@"NSString"
@"PCSimpleTimer"
@"AVAudioPlayer"
@"AXTapticChimeAsset"
@"NSDate"
@"NSObject<OS_dispatch_queue>"
v48@0:8@16{_NSRange=QQ}24@40
v32@0:8@"AVSpeechSynthesizer"16@"AVSpeechUtterance"24
v48@0:8@"AVSpeechSynthesizer"16{_NSRange=QQ}24@"AVSpeechUtterance"40
v40@0:8@16@24@32
v52@0:8@16@24B32@36@44
v48@0:8@16@24@32@40
v44@0:8@16@24B32@36
v32@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24
v40@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"NSArray"32
v52@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24B32@"NSString"36@"NSError"44
v40@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"VSInstrumentMetrics"32
v48@0:8@"VSSpeechSynthesizer"16{_NSRange=QQ}24@"VSSpeechRequest"40
v40@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"VSAudioData"32
v48@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"VSInstrumentMetrics"32@"NSError"40
v32@0:8@"VSSpeechSynthesizer"16@"VSPresynthesizedAudioRequest"24
v44@0:8@"VSSpeechSynthesizer"16@"VSPresynthesizedAudioRequest"24B32@"NSError"36
v48@0:8@"VSSpeechSynthesizer"16@"VSPresynthesizedAudioRequest"24@"VSInstrumentMetrics"32@"NSError"40
v40@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"NSError"32
v32@0:8@"VSSpeechSynthesizer"16@"VSPreviewRequest"24
B32@0:8Q16Q24
v40@0:8@16Q24Q32
v24@0:8Q16
@"VSSpeechSynthesizer"
@"AVSpeechSynthesizer"
@"NSDateFormatter"
@"AXTapticTimeManager"
@32@0:8q16@24
@32@0:8q16Q24
@40@0:8q16@24@32
I24@0:8d16
@"NSDictionary"
@(#)PROGRAM:AXTapToSpeakTime  PROJECT:Accessibility-1
@ffffff
v8@?0
TripleClickOptions
Localizable
TAPTIC_CHIMES_TITLE
TAPTIC_CHIMES_ON_THE_HOUR_DESCRIPTION
TAPTIC_CHIMES_ON_THE_HALF_HOUR_DESCRIPTION
TAPTIC_CHIMES_ON_THE_QUARTER_HOUR_DESCRIPTION
TAPTIC_CHIMES_SCHEDULE_TITLE
TAPTIC_CHIMES_SOUNDS_TITLE
TAPTIC_CHIMES_ON_THE_HOUR_LABEL
TAPTIC_CHIMES_ON_THE_HALF_HOUR_LABEL
TAPTIC_CHIMES_ON_THE_QUARTER_HOUR_LABEL
TAPTIC_CHIMES_SOUND_BELLS_LABEL
TAPTIC_CHIMES_SOUND_BIRDS_LABEL
TAP_TO_SPEAK_TITLE
TAP_TO_SPEAK_DESCRIPTION
TAP_TO_SPEAK_RESPECT_MUTE_LABEL
TAP_TO_SPEAK_ALWAYS_LABEL
TAPTIC_TIME_TITLE
TAPTIC_TIME_UNAVAILABLE_DESCRIPTION
TAPTIC_TIME_DISABLED_DESCRIPTION
TAPTIC_TIME_MUTE_DESCRIPTION
TAPTIC_TIME_ALWAYS_DESCRIPTION
TAPTIC_TIME_VOICEOVER_DESCRIPTION
TAPTIC_TIME_DISABLED
TAPTIC_TIME_ENCODING_DECIMAL_DESCRIPTION
TAPTIC_TIME_ENCODING_TERSE_DESCRIPTION
TAPTIC_TIME_ENCODING_MORSE_DESCRIPTION
TAPTIC_TIME_ENCODING_DECIMAL_LABEL
TAPTIC_TIME_ENCODING_TERSE_LABEL
TAPTIC_TIME_ENCODING_MORSE_LABEL
com.apple.accessibility.AXTapticChimesScheduler.ChimeFire
com.apple.accessibility.AXTapticChimesScheduler
com.apple.accessibility.TapticChimesScheduler-%@
v16@?0@"NSNotification"8
NanoTimeKitFaceDefaultsChangedDarwinNotification
TapticChimesPreWakeOverride
TapticChimesPrePlayAudioOverride
com.apple.NanoTimeKit.face
NTKFacePreferencesTimeOffsetKey
chime-wake-fired
AssertType
PreventUserIdleSystemSleep
AssertName
FrameworkBundleID
com.apple.AXTapToSpeakTime.TapticChimesScheduler
TimeoutAction
TimeoutActionRelease
TimeoutSeconds
StartTime
chime-playback
expected_chime_to_actual_chime_start_time
wake_vs_expected_wake_time
wake_to_chime_start_time
chime_start_to_end_time
AXFlashScreenUIServices
Unable to find class %s
com.apple.accessibility.AXTapToSpeakTimeManager
jjmm
v12@?0i8
Accessibility
TapToSpeakTime_AVSpeechSynthesizer
PTQ+ABwag03BwO/CKvIK/A
Default
Compact
Premium
Mickey
Minnie
Two Finger Hold
One Finger Tap
com.apple.springboard.ringerstate
ChimeAssets
Bells
Birds
Bell.caf
Bell.plist
Bird%02d.caf
Bird%02d.plist
QuarterBell.caf
QuarterBell.plist
QuarterBird.caf
QuarterBird.plist
Atoms
<%@: %p; audioFilePath = "%@", volume = "%f", prePlayTimeInterval = "%f" hapticDictionary = "%@">
unexpected nil preference key!
unexpected object type! is=%@, expected=%@
unexpected nil domainAccessor!
unexpected empty domain!
Taptic Chimes frequency changed, will re-schedule chimes
Taptic Chimes sound type changed, will preview chimes
VoiceOver status changed!
Taptic Chimes enabled, will begin scheduling chimes
Taptic Chimes disabled, will stop scheduling chimes
Buddy not yet complete! suppresing chime
ClockFace not scheduling chimes because VoiceOver is enabled
Using PreWakeOverride value: %f
Using PrePlayAudioOverride value: %f
Using face display time for current date: %@, with time offset=%f
Previewing chimes
Clearing chime timer
failed to deactivate audio session due to: %@
failed to reset audio category (%@) due to: %@
Scheduling chime timer
Scheduling wake!! Wake time: %@ (%f seconds), Chime time: %@ (%f seconds)
chime wake timer fired: %@
scheduling NEXT chime in %f seconds
created power assertion with name: %@, timeout: %f, ID: %d
releasing power assertion with ID: %d
cannot activate taptic chimes
chime starting: %@, isRingerMuted=%@
ringer NOT muted, setting up audio session
Using VoiceOver's current audio session
failed to set audio session category (%@) due to: %@
failed to set audio session active due to: %@
[START] prewarming audio player: (%f seconds away)
failed to prepare audio player
[END] prewarming audio player: (%f seconds away)
[START] schedule chime time: %@ (%f seconds away)
failed to schedule chime playback
[END] schedule chime time: (%f seconds away)
expected haptic time: %@ (%f seconds away)
haptics completed!
ringer IS muted, not waiting for audio player callback
TapticChime-Output
chimeAsset: %@, for chime date: %@
TapticChime-Complete
chime event: %@
wake to chime start took over %f seconds! actual time: %f seconds. wake delta: %f seconds
chime did complete
audioPlayerDidFinishPlaying: successfully: %@
chime failed to play successfully
NTK defaults changed
tap to speak time is disabled
availability = always. ignoring ringer state
availability = respect mute, ringerIsMuted = %@
ringer is muted, will NOT speak time
tapticTimeEnabled = %@
Attempting to start time output: %@, for preferredVoice: %@, with gesture: %@
Stopping (any) existing output
Tap to speak time - voice services
Speaking time: %@
speechRequest: %@
failed to speak time due to %@
canOutputPremiumVoice: %@
Setting up audio session for %@
Speech output did complete
did start AVSpeechUtterance: %@
did finish AVSpeechUtterance: %@
did cancel AVSpeechUtterance: %@
did start VSSpeechRequest: %@
did finish VSSpeechRequest: %@, successfully: %@, phonemesSpoken: %@, error: %@
did pause VSSpeechRequest: %@
did continue VSSpeechRequest: %@
will speak range: %@ for request %@
failed to find asset for sound type: %li, hour: %lu
failed to find quarter hour asset for sound type: %li
empty haptic dictionary at path: %@
created system sound id: %u, with haptic dictionary: %@
softlink:o:path:/System/Library/../../AppleInternal/Library/Frameworks/AXFlashScreenUIServices.framework/AXFlashScreenUIServices
AXTimeOutputPreferences
AXTapticChimesScheduler
AVAudioPlayerDelegate
NSObject
AXTapToSpeakTimeManager
AVSpeechSynthesizerDelegate
VSSpeechSynthesizerDelegate
AXTapticChimeAsset
speechUtteranceWithString:
setText:
initWithTimeInterval:serviceIdentifier:target:selector:userInfo:
earlierDate:
setUserVisible:
objectForKey:
stopSpeakingAtNextBoundary:synchronously:error:
setFootprint:
arrayWithObjects:count:
setActive:withOptions:error:
timeIntervalSinceDate:
isSpeaking
mainRunLoop
hide
doubleValue
localizedStringForKey:value:table:
URLWithString:
countByEnumeratingWithState:objects:count:
initWithDomain:
deviceCurrentTime
setActive:error:
setObject:forKeyedSubscript:
setWithArray:
synchronizeNanoDomain:keys:
stopSpeakingAtBoundary:
numberWithInteger:
array
initWithContentsOfURL:error:
localeIdentifier
dateFormatFromTemplate:options:locale:
prepareToPlay
setDelegate:
bundlePath
speakUtterance:
setVolume:
defaultCenter
inProgressOutputVoice
mainQueue
numberWithDouble:
VSVoiceAsset
autoupdatingCurrentLocale
scheduleInRunLoop:
setVoiceType:
addObserverForName:object:queue:usingBlock:
setDateFormat:
stopCurrentOutput
componentsJoinedByString:
domain
synchronize
setObject:forKey:
preferenceKeyForSelector:
components:fromDate:
tapticTimeIsAvailable
dateByAddingTimeInterval:
dictionaryWithObjects:forKeys:count:
setCategory:withOptions:error:
dateWithTimeIntervalSinceNow:
setLanguageCode:
outputHoursAndMinutes:
invalidate
dictionaryWithDictionary:
stringWithFormat:
registerUpdateBlock:forRetrieveSelector:withListener:
addObject:
numberWithBool:
floatValue
voiceWithLanguage:
date
lastObject
length
setVoice:
tapticTimeInternalFlashScreenEnabled
show
stop
stringFromDate:
dateWithTimeInterval:sinceDate:
assistantIsEnabled
bundleForClass:
sharedPreferences
dictionaryWithContentsOfFile:
category
currentCalendar
setGender:
integerValue
flashWithDuration:
stringByAppendingPathComponent:
startSpeakingRequest:
objectForKeyedSubscript:
setCategory:error:
dateFromComponents:
minute
hour
outputVoice
playAtTime:
languageCode
timeIntervalSinceNow
boolValue
tapToSpeakTimeEnabled
tapToSpeakTimeAvailability
voiceOverTapticTimeMode
voiceOverTapticTimeEncoding
voiceOverTapticChimesEnabled
voiceOverTapticChimesFrequencyEncoding
voiceOverTapticChimesSoundType
sharedInstance
accessibilityDomainAccessor
_npsValueForPreferenceKey:
_npsValueForPreferenceKey:expectedClass:
_setNPSValue:preferenceKey:
_npsBoolValueForPreferenceKey:defaultValue:
_npsIntegerValueForPreferenceKey:defaultValue:
_voiceOverIsEnabled
_voiceOverIsInTripleClick
setTapToSpeakTimeEnabled:
setTapToSpeakTimeAvailability:
setVoiceOverTapticTimeMode:
setVoiceOverTapticTimeEncoding:
setVoiceOverTapticChimesEnabled:
setVoiceOverTapticChimesFrequencyEncoding:
setVoiceOverTapticChimesSoundType:
tapticChimesFrequencyOptions
tapticChimesSoundsOptions
tapToSpeakAvailabilityOptions
tapticTimeEncodingOptions
localizedStringForKey:
tapticChimesLocalizedTitle
tapticChimesLocalizedDescription
tapticChimesLocalizedCurrentFrequency
tapticChimesLocalizedCurrentSounds
tapticChimesScheduleLocalizedTitle
tapticChimesSoundsLocalizedTitle
localizedStringForTapticChimesFrequencyEncoding:
localizedStringForTapticChimesSoundType:
tapToSpeakTimeLocalizedTitle
tapToSpeakTimeLocalizedDescription
localizedStringForTapToSpeakTimeAvailability:
tapticTimeLocalizedTitle
tapticTimeLocalizedDescription
tapticTimeLocalizedCurrentMode
tapticTimeModeLocalizedDescription
localizedStringForTapticTimeEncoding:
init
dealloc
_chimeWakeTimerFired:
initializeIfNeeded
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
audioPlayerDidFinishPlaying:successfully:
audioPlayerDecodeErrorDidOccur:error:
audioPlayerBeginInterruption:
audioPlayerEndInterruption:withOptions:
audioPlayerEndInterruption:withFlags:
audioPlayerEndInterruption:
_init
_registerForNotifications
_unregisterForNotifications
_tapticChimesStateDidChange:
canPlayTapticChime
processIsAllowedToScheduleChimes
processIsAllowedToInterfaceWithNanoMediaRemote
canScheduleTapticChimes
canPlayScheduledTapticChime
_preWakeTimeInterval
_prePlayAudioTimeInterval
_currentDate
_previewChimes
_previewChimesForStartDate:chimeDate:frequency:soundType:
_clearChimeTimer
_scheduleChimeTimer
_createPowerAssertionWithName:timeout:
_releasePowerAssertionIfPossible:
_outputTapticChime:atDate:
nextChimeAssetForStartDate:frequency:soundType:timeIntervalUntilChime:
_normalizeVolumeIfNecessary
_denormalizeVolumeIfNecessary
_chimeDidFinishPlaying
lastMediaVolume
setLastMediaVolume:
.cxx_destruct
_pcServiceIdentifier
_chimeTimer
_audioPlayer
_previousAudioSessionCategory
_currentChimeAsset
_audioPlaybackPowerAssertionID
_lastExpectedWakeTime
_lastActualWakeTime
_lastExpectedChimeTime
_lastActualChimeTime
_mediaQueue
_lastMediaVolume
Tf,N,V_lastMediaVolume
speechSynthesizer:didStartSpeechUtterance:
speechSynthesizer:didFinishSpeechUtterance:
speechSynthesizer:didPauseSpeechUtterance:
speechSynthesizer:didContinueSpeechUtterance:
speechSynthesizer:didCancelSpeechUtterance:
speechSynthesizer:willSpeakRangeOfSpeechString:utterance:
speechSynthesizer:didStartSpeakingRequest:
speechSynthesizer:withRequest:didReceiveTimingInfo:
speechSynthesizer:didFinishSpeakingRequest:successfully:phonemesSpoken:withError:
speechSynthesizer:didFinishSpeakingRequest:withInstrumentMetrics:
speechSynthesizer:didPauseSpeakingRequest:
speechSynthesizer:didContinueSpeakingRequest:
speechSynthesizer:willSpeakRangeOfSpeechString:forRequest:
speechSynthesizer:withSynthesisRequest:didGenerateAudioChunk:
speechSynthesizer:didFinishSynthesisRequest:withInstrumentMetrics:error:
speechSynthesizer:didStartPresynthesizedAudioRequest:
speechSynthesizer:didStopPresynthesizedAudioRequest:atEnd:error:
speechSynthesizer:didFinishPresynthesizedAudioRequest:withInstrumentMetrics:error:
speechSynthesizer:didFinishPrewarmRequest:withError:
speechSynthesizer:didStartPlayingPreviewRequest:
_ringerStateChanged
_canSpeakTimeForVoice:andGesture:
canOutputTime
avSpeechMode
isCurrentlyOutputting
_canTapticTime
outputTime:
outputTime:preferredVoice:
outputTime:preferredVoice:withGesture:
stopOutput
_speakTime:preferredVoice:
_getPremiumVoiceAsset
_speakTime:withCharacterVoiceIdentifier:
_outputTapticTime:
_currentLanguageCode
_canOutputPremiumVoice
_setupAudioSessionForVoice:
speechOutputDidComplete
vsSpeechSynthesizer
avSpeechSynthesizer
dateFormatter
tapticTimeManager
_ringerStateNotifyToken
_cachedRingerIsMuted
_queue
_vsSpeechSynthesizer
_avSpeechSynthesizer
_dateFormatter
_tapticTimeManager
T@"VSSpeechSynthesizer",R,N,V_vsSpeechSynthesizer
T@"AVSpeechSynthesizer",R,N,V_avSpeechSynthesizer
T@"NSDateFormatter",R,N,V_dateFormatter
T@"AXTapticTimeManager",R,N,V_tapticTimeManager
_assetPathForChimeSoundType:fileName:
hourAssetForType:hour:
quarterHourAssetForType:
_initWithChimeSoundType:audioFilePath:hapticsFilePath:
hapticAtomEntries
createSystemSoundIDForStartTime:
audioFilePath
prePlayTimeInterval
volume
hapticDictionary
_volume
_audioFilePath
_prePlayTimeInterval
_hapticDictionary
T@"NSDictionary",R,N,V_hapticDictionary
T@"NSString",R,N,V_audioFilePath
Td,R,N,V_prePlayTimeInterval
Tf,R,N,V_volume
T@"NSArray",R,N
@16@0:8
@24@0:8@16
@32@0:8@16#24
v32@0:8@16@24
B28@0:8@16B24
q32@0:8@16q24
B16@0:8
v20@0:8B16
q16@0:8
v24@0:8q16
@24@0:8q16
v16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v28@0:8@16B24
v24@0:8@16
v32@0:8@16Q24
v28@0:8@"AVAudioPlayer"16B24
v32@0:8@"AVAudioPlayer"16@"NSError"24
v24@0:8@"AVAudioPlayer"16
v32@0:8@"AVAudioPlayer"16Q24
d16@0:8
v48@0:8@16@24q32q40
I32@0:8@16d24
v20@0:8I16
B32@0:8@16@24
@48@0:8@16q24q32^d40
f16@0:8
v20@0:8f16
@"NSString"
@"PCSimpleTimer"
@"AVAudioPlayer"
@"AXTapticChimeAsset"
@"NSDate"
@"NSObject<OS_dispatch_queue>"
v48@0:8@16{_NSRange=QQ}24@40
v32@0:8@"AVSpeechSynthesizer"16@"AVSpeechUtterance"24
v48@0:8@"AVSpeechSynthesizer"16{_NSRange=QQ}24@"AVSpeechUtterance"40
v40@0:8@16@24@32
v52@0:8@16@24B32@36@44
v48@0:8@16@24@32@40
v44@0:8@16@24B32@36
v32@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24
v40@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"NSArray"32
v52@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24B32@"NSString"36@"NSError"44
v40@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"VSInstrumentMetrics"32
v48@0:8@"VSSpeechSynthesizer"16{_NSRange=QQ}24@"VSSpeechRequest"40
v40@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"VSAudioData"32
v48@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"VSInstrumentMetrics"32@"NSError"40
v32@0:8@"VSSpeechSynthesizer"16@"VSPresynthesizedAudioRequest"24
v44@0:8@"VSSpeechSynthesizer"16@"VSPresynthesizedAudioRequest"24B32@"NSError"36
v48@0:8@"VSSpeechSynthesizer"16@"VSPresynthesizedAudioRequest"24@"VSInstrumentMetrics"32@"NSError"40
v40@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"NSError"32
v32@0:8@"VSSpeechSynthesizer"16@"VSPreviewRequest"24
B32@0:8Q16Q24
v40@0:8@16Q24Q32
v24@0:8Q16
@"VSSpeechSynthesizer"
@"AVSpeechSynthesizer"
@"NSDateFormatter"
@"AXTapticTimeManager"
@32@0:8q16@24
@32@0:8q16Q24
@40@0:8q16@24@32
I24@0:8d16
@"NSDictionary"
