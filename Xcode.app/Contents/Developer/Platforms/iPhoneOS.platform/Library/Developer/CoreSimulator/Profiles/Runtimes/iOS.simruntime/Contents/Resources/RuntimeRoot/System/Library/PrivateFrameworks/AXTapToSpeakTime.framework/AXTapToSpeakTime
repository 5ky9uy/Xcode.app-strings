@(#)PROGRAM:AXTapToSpeakTime  PROJECT:Accessibility-1
333?
ffffff
v8@?0
TripleClickOptions
Localizable
TAPTIC_CHIMES_TITLE
TAPTIC_CHIMES_ON_THE_HOUR_DESCRIPTION
TAPTIC_CHIMES_ON_THE_HALF_HOUR_DESCRIPTION
TAPTIC_CHIMES_ON_THE_QUARTER_HOUR_DESCRIPTION
TAPTIC_CHIMES_SCHEDULE_TITLE
TAPTIC_CHIMES_SOUNDS_TITLE
TAPTIC_CHIMES_ON_THE_HOUR_LABEL
TAPTIC_CHIMES_ON_THE_HALF_HOUR_LABEL
TAPTIC_CHIMES_ON_THE_QUARTER_HOUR_LABEL
TAPTIC_CHIMES_SOUND_BELLS_LABEL
TAPTIC_CHIMES_SOUND_BIRDS_LABEL
TAP_TO_SPEAK_TITLE
TAP_TO_SPEAK_DESCRIPTION
TAP_TO_SPEAK_RESPECT_MUTE_LABEL
TAP_TO_SPEAK_ALWAYS_LABEL
TAPTIC_TIME_TITLE
TAPTIC_TIME_UNAVAILABLE_DESCRIPTION
TAPTIC_TIME_DISABLED_DESCRIPTION
TAPTIC_TIME_MUTE_DESCRIPTION
TAPTIC_TIME_ALWAYS_DESCRIPTION
TAPTIC_TIME_VOICEOVER_DESCRIPTION
TAPTIC_TIME_DISABLED
TAPTIC_TIME_ENCODING_DECIMAL_DESCRIPTION
TAPTIC_TIME_ENCODING_TERSE_DESCRIPTION
TAPTIC_TIME_ENCODING_MORSE_DESCRIPTION
TAPTIC_TIME_ENCODING_DECIMAL_LABEL
TAPTIC_TIME_ENCODING_TERSE_LABEL
TAPTIC_TIME_ENCODING_MORSE_LABEL
com.apple.accessibility.AXTapticChimesScheduler.ChimeFire
com.apple.accessibility.AXTapticChimesScheduler
com.apple.accessibility.TapticChimesScheduler-%@
v16@?0@"NSNotification"8
NanoTimeKitFaceDefaultsChangedDarwinNotification
TapticChimesPreWakeOverride
TapticChimesPrePlayAudioOverride
com.apple.NanoTimeKit.face
NTKFacePreferencesTimeOffsetKey
chime-wake-fired
AssertType
PreventUserIdleSystemSleep
AssertName
FrameworkBundleID
com.apple.AXTapToSpeakTime.TapticChimesScheduler
TimeoutAction
TimeoutActionRelease
TimeoutSeconds
chime-playback
expected_chime_to_actual_chime_start_time
wake_vs_expected_wake_time
wake_to_chime_start_time
chime_start_to_end_time
com.apple.accessibility.AXTapToSpeakTimeManager
jjmm
v12@?0i8
Accessibility
TapToSpeakTime_AVSpeechSynthesizer
PTQ+ABwag03BwO/CKvIK/A
Default
Compact
Premium
Mickey
Minnie
Two Finger Hold
One Finger Tap
com.apple.springboard.ringerstate
ChimeAssets
Bells
Birds
Bell.caf
Bell.plist
Bird%02d.caf
Bird%02d.plist
QuarterBell.caf
QuarterBell.plist
QuarterBird.caf
QuarterBird.plist
StartTime
Atoms
<%@: %p; audioFilePath = "%@", volume = "%f", prePlayTimeInterval = "%f" hapticDictionary = "%@">
unexpected nil preference key!
unexpected object type! is=%@, expected=%@
unexpected nil domainAccessor!
unexpected empty domain!
Taptic Chimes frequency changed, will re-schedule chimes
Taptic Chimes sound type changed, will preview chimes
VoiceOver status changed!
Taptic Chimes enabled, will begin scheduling chimes
Taptic Chimes disabled, will stop scheduling chimes
Buddy not yet complete! suppresing chime
ClockFace not scheduling chimes because VoiceOver is enabled
Using PreWakeOverride value: %f
Using PrePlayAudioOverride value: %f
Using face display time for current date: %@, with time offset=%f
Previewing chimes
Clearing chime timer
failed to deactivate audio session due to: %@
failed to reset audio category (%@) due to: %@
Scheduling chime timer
Scheduling wake!! Wake time: %@ (%f seconds), Chime time: %@ (%f seconds)
chime wake timer fired: %@
scheduling NEXT chime in %f seconds
created power assertion with name: %@, timeout: %f, ID: %d
releasing power assertion with ID: %d
cannot activate taptic chimes
chime starting: %@, isRingerMuted=%@
ringer NOT muted, setting up audio session
Using VoiceOver's current audio session
failed to set audio session category (%@) due to: %@
failed to set audio session active due to: %@
[START] prewarming audio player: (%f seconds away)
failed to prepare audio player
[END] prewarming audio player: (%f seconds away)
[START] schedule chime time: %@ (%f seconds away)
failed to schedule chime playback
[END] schedule chime time: (%f seconds away)
expected haptic time: %@ (%f seconds away)
haptics completed!
ringer IS muted, not waiting for audio player callback
TapticChime-Output
chimeAsset: %@, for chime date: %@
TapticChime-Complete
chime event: %@
wake to chime start took over %f seconds! actual time: %f seconds. wake delta: %f seconds
chime did complete
audioPlayerDidFinishPlaying: successfully: %@
chime failed to play successfully
NTK defaults changed
tap to speak time is disabled
availability = always. ignoring ringer state
availability = respect mute, ringerIsMuted = %@
ringer is muted, will NOT speak time
tapticTimeEnabled = %@
Attempting to start time output: %@, for preferredVoice: %@, with gesture: %@
Stopping (any) existing output
AFPreferences outputVoice: %@
System general language: %@
Siri voice language: %@ does not match system general language: %@. Will default to current locale system voice.
Siri TTS voice identifier: %@
Tap to speak time - voice services
Speaking time: %@
speechRequest: %@
failed to speak time due to %@
TTSSupportsNeuralVoices: %d
Neural voice not found for name: %@. Will try looking for Gryphon voice.
TTSSiriAssetManager installedAssetsForLanguage: %@ voiceType: %ld
TTSSiriAssetManager installedAssetForLanguage:%@ gender:%ld footprint:%ld voiceName:%@ voiceType:%ld
canOutputPremiumVoice: %@
Setting up audio session for %@
Speech output did complete
did start AVSpeechUtterance: %@
did finish AVSpeechUtterance: %@
did cancel AVSpeechUtterance: %@
did start VSSpeechRequest: %@
did finish VSSpeechRequest: %@, successfully: %@, phonemesSpoken: %@, error: %@
did pause VSSpeechRequest: %@
did continue VSSpeechRequest: %@
will speak range: %@ for request %@
failed to find asset for sound type: %li, hour: %lu
failed to find quarter hour asset for sound type: %li
empty haptic dictionary at path: %@
created system sound id: %u, with haptic dictionary: %@
AXTimeOutputPreferences
AXTapticChimesScheduler
AVAudioPlayerDelegate
NSObject
AXTapToSpeakTimeManager
AVSpeechSynthesizerDelegate
VSSpeechSynthesizerDelegate
AXTapticChimeAsset
T@"NSArray",R,N
T#,R
_volume
T@"AXTapticTimeManager",R,N,V_tapticTimeManager
currentCalendar
T@"NSDictionary",R,N,V_hapticDictionary
dealloc
T@"NSString",R,N,V_audioFilePath
installedAssetForLanguage:gender:footprint:voiceName:voiceType:
TQ,R
lastMediaVolume
Tf,N,V_lastMediaVolume
release
VSVoiceAsset
setVoiceOverTapticTimeEncoding:
_audioFilePath
stringByAppendingPathComponent:
_audioPlayer
.cxx_destruct
Tf,R,N,V_volume
T@"AVSpeechSynthesizer",R,N,V_avSpeechSynthesizer
bundleForClass:
T@"NSDateFormatter",R,N,V_dateFormatter
dateWithTimeInterval:sinceDate:
T@"NSString",R,C
initWithDomain:
T@"VSSpeechSynthesizer",R,N,V_vsSpeechSynthesizer
isProxy
Td,R,N,V_prePlayTimeInterval
numberWithBool:
URLWithString:
setUserVisible:
_assetPathForChimeSoundType:fileName:
speakUtterance:
_audioPlaybackPowerAssertionID
stringFromDate:
_avSpeechSynthesizer
_cachedRingerIsMuted
_canOutputPremiumVoice
_canSpeakTimeForVoice:andGesture:
_canTapticTime
_chimeDidFinishPlaying
_chimeTimer
_chimeWakeTimerFired:
_clearChimeTimer
_createPowerAssertionWithName:timeout:
_currentChimeAsset
_currentDate
_currentLanguageCode
_dateFormatter
_denormalizeVolumeIfNecessary
_getPremiumVoiceAsset
_hapticDictionary
_init
_initWithChimeSoundType:audioFilePath:hapticsFilePath:
_lastActualChimeTime
_lastActualWakeTime
_lastExpectedChimeTime
_lastExpectedWakeTime
_lastMediaVolume
_mediaQueue
_normalizeVolumeIfNecessary
_npsBoolValueForPreferenceKey:defaultValue:
_npsIntegerValueForPreferenceKey:defaultValue:
_npsValueForPreferenceKey:
_npsValueForPreferenceKey:expectedClass:
_outputTapticChime:atDate:
_outputTapticTime:
_pcServiceIdentifier
_prePlayAudioTimeInterval
_prePlayTimeInterval
_preWakeTimeInterval
_previewChimes
_previewChimesForStartDate:chimeDate:frequency:soundType:
_previousAudioSessionCategory
_queue
_registerForNotifications
_releasePowerAssertionIfPossible:
_ringerStateChanged
_ringerStateNotifyToken
_scheduleChimeTimer
_setNPSValue:preferenceKey:
_setupAudioSessionForVoice:
_speakTime:preferredVoice:
_speakTime:withCharacterVoiceIdentifier:
_tapticChimesStateDidChange:
_tapticTimeManager
_ttsSiriVoiceAssetForAFVoice:language:
_unregisterForNotifications
_voiceFromInternalVoiceListWithIdentifier:
_voiceOverIsEnabled
_voiceOverIsInTripleClick
_vsSpeechSynthesizer
accessibilityDomainAccessor
addObject:
addObserverForName:object:queue:usingBlock:
array
arrayWithObjects:count:
assistantIsEnabled
audioFilePath
audioPlayerBeginInterruption:
audioPlayerDecodeErrorDidOccur:error:
audioPlayerDidFinishPlaying:successfully:
audioPlayerEndInterruption:
audioPlayerEndInterruption:withFlags:
audioPlayerEndInterruption:withOptions:
autorelease
autoupdatingCurrentLocale
avSpeechMode
avSpeechSynthesizer
boolValue
bundlePath
canOutputTime
canPlayScheduledTapticChime
canPlayTapticChime
canScheduleTapticChimes
category
class
components:fromDate:
componentsJoinedByString:
conformsToProtocol:
countByEnumeratingWithState:objects:count:
createSystemSoundIDForStartTime:
date
dateByAddingTimeInterval:
dateFormatFromTemplate:options:locale:
dateFormatter
dateFromComponents:
dateWithTimeIntervalSinceNow:
debugDescription
defaultCenter
description
deviceCurrentTime
dictionaryWithContentsOfFile:
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
domain
doubleValue
earlierDate:
floatValue
footprint
hapticAtomEntries
hapticDictionary
hasPrefix:
hash
hour
hourAssetForType:hour:
identifier
inProgressOutputVoice
init
initWithContentsOfURL:error:
initWithTimeInterval:serviceIdentifier:target:selector:userInfo:
initializeIfNeeded
installedAssetsForLanguage:voiceType:
integerValue
invalidate
isCurrentlyOutputting
isEqual:
isKindOfClass:
isMemberOfClass:
isSpeaking
languageCode
lastObject
length
localeIdentifier
localizedStringForKey:
localizedStringForKey:value:table:
localizedStringForTapToSpeakTimeAvailability:
localizedStringForTapticChimesFrequencyEncoding:
localizedStringForTapticChimesSoundType:
localizedStringForTapticTimeEncoding:
mainQueue
mainRunLoop
minute
name
nextChimeAssetForStartDate:frequency:soundType:timeIntervalUntilChime:
numberWithDouble:
numberWithInteger:
objectForKey:
objectForKeyedSubscript:
outputHoursAndMinutes:
outputTime:
outputTime:preferredVoice:
outputTime:preferredVoice:withGesture:
outputVoice
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
playAtTime:
prePlayTimeInterval
preferenceKeyForSelector:
prepareToPlay
processIsAllowedToInterfaceWithNanoMediaRemote
processIsAllowedToScheduleChimes
quarterHourAssetForType:
registerUpdateBlock:forRetrieveSelector:withListener:
respondsToSelector:
retain
retainCount
scheduleInRunLoop:
self
setActive:error:
setActive:withOptions:error:
setCategory:error:
setCategory:withOptions:error:
setDateFormat:
setDelegate:
setFootprint:
setGender:
setIsInternalSynth:
setLanguageCode:
setLastMediaVolume:
setObject:forKey:
setObject:forKeyedSubscript:
setTapToSpeakTimeAvailability:
setTapToSpeakTimeEnabled:
setText:
setVoice:
setVoiceOverTapticChimesEnabled:
setVoiceOverTapticChimesFrequencyEncoding:
setVoiceOverTapticChimesSoundType:
setVoiceOverTapticTimeMode:
setVoiceType:
setVolume:
setWithArray:
sharedInstance
sharedPreferences
speechOutputDidComplete
speechSynthesizer:didCancelSpeechUtterance:
speechSynthesizer:didContinueSpeakingRequest:
speechSynthesizer:didContinueSpeechUtterance:
speechSynthesizer:didFinishPresynthesizedAudioRequest:withInstrumentMetrics:error:
speechSynthesizer:didFinishPrewarmRequest:withError:
speechSynthesizer:didFinishSpeakingRequest:successfully:phonemesSpoken:withError:
speechSynthesizer:didFinishSpeakingRequest:withInstrumentMetrics:
speechSynthesizer:didFinishSpeechUtterance:
speechSynthesizer:didFinishSynthesisRequest:withInstrumentMetrics:error:
speechSynthesizer:didPauseSpeakingRequest:
speechSynthesizer:didPauseSpeechUtterance:
speechSynthesizer:didStartPlayingPreviewRequest:
speechSynthesizer:didStartPresynthesizedAudioRequest:
speechSynthesizer:didStartSpeakingRequest:
speechSynthesizer:didStartSpeechUtterance:
speechSynthesizer:didStopPresynthesizedAudioRequest:atEnd:error:
speechSynthesizer:willSpeakRangeOfSpeechString:forRequest:
speechSynthesizer:willSpeakRangeOfSpeechString:utterance:
speechSynthesizer:withRequest:didReceiveTimingInfo:
speechSynthesizer:withSynthesisRequest:didGenerateAudioChunk:
speechUtteranceWithString:
startSpeakingRequest:
stop
stopCurrentOutput
stopOutput
stopSpeakingAtBoundary:
stopSpeakingAtNextBoundary:synchronously:error:
stringWithFormat:
superclass
synchronize
synchronizeNanoDomain:keys:
systemLanguageID
tapToSpeakAvailabilityOptions
tapToSpeakTimeAvailability
tapToSpeakTimeEnabled
tapToSpeakTimeLocalizedDescription
tapToSpeakTimeLocalizedTitle
tapticChimesFrequencyOptions
tapticChimesLocalizedCurrentFrequency
tapticChimesLocalizedCurrentSounds
tapticChimesLocalizedDescription
tapticChimesLocalizedTitle
tapticChimesScheduleLocalizedTitle
tapticChimesSoundsLocalizedTitle
tapticChimesSoundsOptions
tapticTimeEncodingOptions
tapticTimeIsAvailable
tapticTimeLocalizedCurrentMode
tapticTimeLocalizedDescription
tapticTimeLocalizedTitle
tapticTimeManager
tapticTimeModeLocalizedDescription
timeIntervalSinceDate:
timeIntervalSinceNow
voiceOverTapticChimesEnabled
voiceOverTapticChimesFrequencyEncoding
voiceOverTapticChimesSoundType
voiceOverTapticTimeEncoding
voiceOverTapticTimeMode
voiceWithLanguage:
volume
vsSpeechSynthesizer
zone
@16@0:8
@24@0:8@16
@32@0:8@16#24
v32@0:8@16@24
B28@0:8@16B24
q32@0:8@16q24
B16@0:8
v20@0:8B16
q16@0:8
v24@0:8q16
@24@0:8q16
v16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v28@0:8@16B24
v24@0:8@16
v32@0:8@16Q24
v28@0:8@"AVAudioPlayer"16B24
v32@0:8@"AVAudioPlayer"16@"NSError"24
v24@0:8@"AVAudioPlayer"16
v32@0:8@"AVAudioPlayer"16Q24
d16@0:8
v48@0:8@16@24q32q40
I32@0:8@16d24
v20@0:8I16
B32@0:8@16@24
@48@0:8@16q24q32^d40
f16@0:8
v20@0:8f16
@"NSString"
@"PCSimpleTimer"
@"AVAudioPlayer"
@"AXTapticChimeAsset"
@"NSDate"
@"NSObject<OS_dispatch_queue>"
v48@0:8@16{_NSRange=QQ}24@40
v32@0:8@"AVSpeechSynthesizer"16@"AVSpeechUtterance"24
v48@0:8@"AVSpeechSynthesizer"16{_NSRange=QQ}24@"AVSpeechUtterance"40
v40@0:8@16@24@32
v52@0:8@16@24B32@36@44
v48@0:8@16@24@32@40
v44@0:8@16@24B32@36
v32@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24
v40@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"NSArray"32
v52@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24B32@"NSString"36@"NSError"44
v40@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"VSInstrumentMetrics"32
v48@0:8@"VSSpeechSynthesizer"16{_NSRange=QQ}24@"VSSpeechRequest"40
v40@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"VSAudioData"32
v48@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"VSInstrumentMetrics"32@"NSError"40
v32@0:8@"VSSpeechSynthesizer"16@"VSPresynthesizedAudioRequest"24
v44@0:8@"VSSpeechSynthesizer"16@"VSPresynthesizedAudioRequest"24B32@"NSError"36
v48@0:8@"VSSpeechSynthesizer"16@"VSPresynthesizedAudioRequest"24@"VSInstrumentMetrics"32@"NSError"40
v40@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"NSError"32
v32@0:8@"VSSpeechSynthesizer"16@"VSPreviewRequest"24
B32@0:8Q16Q24
v40@0:8@16Q24Q32
@32@0:8@16@24
v24@0:8Q16
@"VSSpeechSynthesizer"
@"AVSpeechSynthesizer"
@"NSDateFormatter"
@"AXTapticTimeManager"
@32@0:8q16@24
@32@0:8q16Q24
@40@0:8q16@24@32
I24@0:8d16
@"NSDictionary"
@(#)PROGRAM:AXTapToSpeakTime  PROJECT:Accessibility-1
@ffffff
v8@?0
TripleClickOptions
Localizable
TAPTIC_CHIMES_TITLE
TAPTIC_CHIMES_ON_THE_HOUR_DESCRIPTION
TAPTIC_CHIMES_ON_THE_HALF_HOUR_DESCRIPTION
TAPTIC_CHIMES_ON_THE_QUARTER_HOUR_DESCRIPTION
TAPTIC_CHIMES_SCHEDULE_TITLE
TAPTIC_CHIMES_SOUNDS_TITLE
TAPTIC_CHIMES_ON_THE_HOUR_LABEL
TAPTIC_CHIMES_ON_THE_HALF_HOUR_LABEL
TAPTIC_CHIMES_ON_THE_QUARTER_HOUR_LABEL
TAPTIC_CHIMES_SOUND_BELLS_LABEL
TAPTIC_CHIMES_SOUND_BIRDS_LABEL
TAP_TO_SPEAK_TITLE
TAP_TO_SPEAK_DESCRIPTION
TAP_TO_SPEAK_RESPECT_MUTE_LABEL
TAP_TO_SPEAK_ALWAYS_LABEL
TAPTIC_TIME_TITLE
TAPTIC_TIME_UNAVAILABLE_DESCRIPTION
TAPTIC_TIME_DISABLED_DESCRIPTION
TAPTIC_TIME_MUTE_DESCRIPTION
TAPTIC_TIME_ALWAYS_DESCRIPTION
TAPTIC_TIME_VOICEOVER_DESCRIPTION
TAPTIC_TIME_DISABLED
TAPTIC_TIME_ENCODING_DECIMAL_DESCRIPTION
TAPTIC_TIME_ENCODING_TERSE_DESCRIPTION
TAPTIC_TIME_ENCODING_MORSE_DESCRIPTION
TAPTIC_TIME_ENCODING_DECIMAL_LABEL
TAPTIC_TIME_ENCODING_TERSE_LABEL
TAPTIC_TIME_ENCODING_MORSE_LABEL
com.apple.accessibility.AXTapticChimesScheduler.ChimeFire
com.apple.accessibility.AXTapticChimesScheduler
com.apple.accessibility.TapticChimesScheduler-%@
v16@?0@"NSNotification"8
NanoTimeKitFaceDefaultsChangedDarwinNotification
TapticChimesPreWakeOverride
TapticChimesPrePlayAudioOverride
com.apple.NanoTimeKit.face
NTKFacePreferencesTimeOffsetKey
chime-wake-fired
AssertType
PreventUserIdleSystemSleep
AssertName
FrameworkBundleID
com.apple.AXTapToSpeakTime.TapticChimesScheduler
TimeoutAction
TimeoutActionRelease
TimeoutSeconds
chime-playback
expected_chime_to_actual_chime_start_time
wake_vs_expected_wake_time
wake_to_chime_start_time
chime_start_to_end_time
com.apple.accessibility.AXTapToSpeakTimeManager
jjmm
v12@?0i8
Accessibility
TapToSpeakTime_AVSpeechSynthesizer
PTQ+ABwag03BwO/CKvIK/A
Default
Compact
Premium
Mickey
Minnie
Two Finger Hold
One Finger Tap
com.apple.springboard.ringerstate
ChimeAssets
Bells
Birds
Bell.caf
Bell.plist
Bird%02d.caf
Bird%02d.plist
QuarterBell.caf
QuarterBell.plist
QuarterBird.caf
QuarterBird.plist
StartTime
Atoms
<%@: %p; audioFilePath = "%@", volume = "%f", prePlayTimeInterval = "%f" hapticDictionary = "%@">
unexpected nil preference key!
unexpected object type! is=%@, expected=%@
unexpected nil domainAccessor!
unexpected empty domain!
Taptic Chimes frequency changed, will re-schedule chimes
Taptic Chimes sound type changed, will preview chimes
VoiceOver status changed!
Taptic Chimes enabled, will begin scheduling chimes
Taptic Chimes disabled, will stop scheduling chimes
Buddy not yet complete! suppresing chime
ClockFace not scheduling chimes because VoiceOver is enabled
Using PreWakeOverride value: %f
Using PrePlayAudioOverride value: %f
Using face display time for current date: %@, with time offset=%f
Previewing chimes
Clearing chime timer
failed to deactivate audio session due to: %@
failed to reset audio category (%@) due to: %@
Scheduling chime timer
Scheduling wake!! Wake time: %@ (%f seconds), Chime time: %@ (%f seconds)
chime wake timer fired: %@
scheduling NEXT chime in %f seconds
created power assertion with name: %@, timeout: %f, ID: %d
releasing power assertion with ID: %d
cannot activate taptic chimes
chime starting: %@, isRingerMuted=%@
ringer NOT muted, setting up audio session
Using VoiceOver's current audio session
failed to set audio session category (%@) due to: %@
failed to set audio session active due to: %@
[START] prewarming audio player: (%f seconds away)
failed to prepare audio player
[END] prewarming audio player: (%f seconds away)
[START] schedule chime time: %@ (%f seconds away)
failed to schedule chime playback
[END] schedule chime time: (%f seconds away)
expected haptic time: %@ (%f seconds away)
haptics completed!
ringer IS muted, not waiting for audio player callback
TapticChime-Output
chimeAsset: %@, for chime date: %@
TapticChime-Complete
chime event: %@
wake to chime start took over %f seconds! actual time: %f seconds. wake delta: %f seconds
chime did complete
audioPlayerDidFinishPlaying: successfully: %@
chime failed to play successfully
NTK defaults changed
tap to speak time is disabled
availability = always. ignoring ringer state
availability = respect mute, ringerIsMuted = %@
ringer is muted, will NOT speak time
tapticTimeEnabled = %@
Attempting to start time output: %@, for preferredVoice: %@, with gesture: %@
Stopping (any) existing output
AFPreferences outputVoice: %@
System general language: %@
Siri voice language: %@ does not match system general language: %@. Will default to current locale system voice.
Siri TTS voice identifier: %@
Tap to speak time - voice services
Speaking time: %@
speechRequest: %@
failed to speak time due to %@
TTSSupportsNeuralVoices: %d
Neural voice not found for name: %@. Will try looking for Gryphon voice.
TTSSiriAssetManager installedAssetsForLanguage: %@ voiceType: %ld
TTSSiriAssetManager installedAssetForLanguage:%@ gender:%ld footprint:%ld voiceName:%@ voiceType:%ld
canOutputPremiumVoice: %@
Setting up audio session for %@
Speech output did complete
did start AVSpeechUtterance: %@
did finish AVSpeechUtterance: %@
did cancel AVSpeechUtterance: %@
did start VSSpeechRequest: %@
did finish VSSpeechRequest: %@, successfully: %@, phonemesSpoken: %@, error: %@
did pause VSSpeechRequest: %@
did continue VSSpeechRequest: %@
will speak range: %@ for request %@
failed to find asset for sound type: %li, hour: %lu
failed to find quarter hour asset for sound type: %li
empty haptic dictionary at path: %@
created system sound id: %u, with haptic dictionary: %@
AXTimeOutputPreferences
AXTapticChimesScheduler
AVAudioPlayerDelegate
NSObject
AXTapToSpeakTimeManager
AVSpeechSynthesizerDelegate
VSSpeechSynthesizerDelegate
AXTapticChimeAsset
T@"NSArray",R,N
T#,R
_volume
T@"AXTapticTimeManager",R,N,V_tapticTimeManager
currentCalendar
T@"NSDictionary",R,N,V_hapticDictionary
dealloc
T@"NSString",R,N,V_audioFilePath
installedAssetForLanguage:gender:footprint:voiceName:voiceType:
TQ,R
lastMediaVolume
Tf,N,V_lastMediaVolume
release
VSVoiceAsset
setVoiceOverTapticTimeEncoding:
_audioFilePath
stringByAppendingPathComponent:
_audioPlayer
.cxx_destruct
Tf,R,N,V_volume
T@"AVSpeechSynthesizer",R,N,V_avSpeechSynthesizer
bundleForClass:
T@"NSDateFormatter",R,N,V_dateFormatter
dateWithTimeInterval:sinceDate:
T@"NSString",R,C
initWithDomain:
T@"VSSpeechSynthesizer",R,N,V_vsSpeechSynthesizer
isProxy
Td,R,N,V_prePlayTimeInterval
numberWithBool:
URLWithString:
setUserVisible:
_assetPathForChimeSoundType:fileName:
speakUtterance:
_audioPlaybackPowerAssertionID
stringFromDate:
_avSpeechSynthesizer
_cachedRingerIsMuted
_canOutputPremiumVoice
_canSpeakTimeForVoice:andGesture:
_canTapticTime
_chimeDidFinishPlaying
_chimeTimer
_chimeWakeTimerFired:
_clearChimeTimer
_createPowerAssertionWithName:timeout:
_currentChimeAsset
_currentDate
_currentLanguageCode
_dateFormatter
_denormalizeVolumeIfNecessary
_getPremiumVoiceAsset
_hapticDictionary
_init
_initWithChimeSoundType:audioFilePath:hapticsFilePath:
_lastActualChimeTime
_lastActualWakeTime
_lastExpectedChimeTime
_lastExpectedWakeTime
_lastMediaVolume
_mediaQueue
_normalizeVolumeIfNecessary
_npsBoolValueForPreferenceKey:defaultValue:
_npsIntegerValueForPreferenceKey:defaultValue:
_npsValueForPreferenceKey:
_npsValueForPreferenceKey:expectedClass:
_outputTapticChime:atDate:
_outputTapticTime:
_pcServiceIdentifier
_prePlayAudioTimeInterval
_prePlayTimeInterval
_preWakeTimeInterval
_previewChimes
_previewChimesForStartDate:chimeDate:frequency:soundType:
_previousAudioSessionCategory
_queue
_registerForNotifications
_releasePowerAssertionIfPossible:
_ringerStateChanged
_ringerStateNotifyToken
_scheduleChimeTimer
_setNPSValue:preferenceKey:
_setupAudioSessionForVoice:
_speakTime:preferredVoice:
_speakTime:withCharacterVoiceIdentifier:
_tapticChimesStateDidChange:
_tapticTimeManager
_ttsSiriVoiceAssetForAFVoice:language:
_unregisterForNotifications
_voiceFromInternalVoiceListWithIdentifier:
_voiceOverIsEnabled
_voiceOverIsInTripleClick
_vsSpeechSynthesizer
accessibilityDomainAccessor
addObject:
addObserverForName:object:queue:usingBlock:
array
arrayWithObjects:count:
assistantIsEnabled
audioFilePath
audioPlayerBeginInterruption:
audioPlayerDecodeErrorDidOccur:error:
audioPlayerDidFinishPlaying:successfully:
audioPlayerEndInterruption:
audioPlayerEndInterruption:withFlags:
audioPlayerEndInterruption:withOptions:
autorelease
autoupdatingCurrentLocale
avSpeechMode
avSpeechSynthesizer
boolValue
bundlePath
canOutputTime
canPlayScheduledTapticChime
canPlayTapticChime
canScheduleTapticChimes
category
class
components:fromDate:
componentsJoinedByString:
conformsToProtocol:
countByEnumeratingWithState:objects:count:
createSystemSoundIDForStartTime:
date
dateByAddingTimeInterval:
dateFormatFromTemplate:options:locale:
dateFormatter
dateFromComponents:
dateWithTimeIntervalSinceNow:
debugDescription
defaultCenter
description
deviceCurrentTime
dictionaryWithContentsOfFile:
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
domain
doubleValue
earlierDate:
floatValue
footprint
hapticAtomEntries
hapticDictionary
hasPrefix:
hash
hour
hourAssetForType:hour:
identifier
inProgressOutputVoice
init
initWithContentsOfURL:error:
initWithTimeInterval:serviceIdentifier:target:selector:userInfo:
initializeIfNeeded
installedAssetsForLanguage:voiceType:
integerValue
invalidate
isCurrentlyOutputting
isEqual:
isKindOfClass:
isMemberOfClass:
isSpeaking
languageCode
lastObject
length
localeIdentifier
localizedStringForKey:
localizedStringForKey:value:table:
localizedStringForTapToSpeakTimeAvailability:
localizedStringForTapticChimesFrequencyEncoding:
localizedStringForTapticChimesSoundType:
localizedStringForTapticTimeEncoding:
mainQueue
mainRunLoop
minute
name
nextChimeAssetForStartDate:frequency:soundType:timeIntervalUntilChime:
numberWithDouble:
numberWithInteger:
objectForKey:
objectForKeyedSubscript:
outputHoursAndMinutes:
outputTime:
outputTime:preferredVoice:
outputTime:preferredVoice:withGesture:
outputVoice
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
playAtTime:
prePlayTimeInterval
preferenceKeyForSelector:
prepareToPlay
processIsAllowedToInterfaceWithNanoMediaRemote
processIsAllowedToScheduleChimes
quarterHourAssetForType:
registerUpdateBlock:forRetrieveSelector:withListener:
respondsToSelector:
retain
retainCount
scheduleInRunLoop:
self
setActive:error:
setActive:withOptions:error:
setCategory:error:
setCategory:withOptions:error:
setDateFormat:
setDelegate:
setFootprint:
setGender:
setIsInternalSynth:
setLanguageCode:
setLastMediaVolume:
setObject:forKey:
setObject:forKeyedSubscript:
setTapToSpeakTimeAvailability:
setTapToSpeakTimeEnabled:
setText:
setVoice:
setVoiceOverTapticChimesEnabled:
setVoiceOverTapticChimesFrequencyEncoding:
setVoiceOverTapticChimesSoundType:
setVoiceOverTapticTimeMode:
setVoiceType:
setVolume:
setWithArray:
sharedInstance
sharedPreferences
speechOutputDidComplete
speechSynthesizer:didCancelSpeechUtterance:
speechSynthesizer:didContinueSpeakingRequest:
speechSynthesizer:didContinueSpeechUtterance:
speechSynthesizer:didFinishPresynthesizedAudioRequest:withInstrumentMetrics:error:
speechSynthesizer:didFinishPrewarmRequest:withError:
speechSynthesizer:didFinishSpeakingRequest:successfully:phonemesSpoken:withError:
speechSynthesizer:didFinishSpeakingRequest:withInstrumentMetrics:
speechSynthesizer:didFinishSpeechUtterance:
speechSynthesizer:didFinishSynthesisRequest:withInstrumentMetrics:error:
speechSynthesizer:didPauseSpeakingRequest:
speechSynthesizer:didPauseSpeechUtterance:
speechSynthesizer:didStartPlayingPreviewRequest:
speechSynthesizer:didStartPresynthesizedAudioRequest:
speechSynthesizer:didStartSpeakingRequest:
speechSynthesizer:didStartSpeechUtterance:
speechSynthesizer:didStopPresynthesizedAudioRequest:atEnd:error:
speechSynthesizer:willSpeakRangeOfSpeechString:forRequest:
speechSynthesizer:willSpeakRangeOfSpeechString:utterance:
speechSynthesizer:withRequest:didReceiveTimingInfo:
speechSynthesizer:withSynthesisRequest:didGenerateAudioChunk:
speechUtteranceWithString:
startSpeakingRequest:
stop
stopCurrentOutput
stopOutput
stopSpeakingAtBoundary:
stopSpeakingAtNextBoundary:synchronously:error:
stringWithFormat:
superclass
synchronize
synchronizeNanoDomain:keys:
systemLanguageID
tapToSpeakAvailabilityOptions
tapToSpeakTimeAvailability
tapToSpeakTimeEnabled
tapToSpeakTimeLocalizedDescription
tapToSpeakTimeLocalizedTitle
tapticChimesFrequencyOptions
tapticChimesLocalizedCurrentFrequency
tapticChimesLocalizedCurrentSounds
tapticChimesLocalizedDescription
tapticChimesLocalizedTitle
tapticChimesScheduleLocalizedTitle
tapticChimesSoundsLocalizedTitle
tapticChimesSoundsOptions
tapticTimeEncodingOptions
tapticTimeIsAvailable
tapticTimeLocalizedCurrentMode
tapticTimeLocalizedDescription
tapticTimeLocalizedTitle
tapticTimeManager
tapticTimeModeLocalizedDescription
timeIntervalSinceDate:
timeIntervalSinceNow
voiceOverTapticChimesEnabled
voiceOverTapticChimesFrequencyEncoding
voiceOverTapticChimesSoundType
voiceOverTapticTimeEncoding
voiceOverTapticTimeMode
voiceWithLanguage:
volume
vsSpeechSynthesizer
zone
@16@0:8
@24@0:8@16
@32@0:8@16#24
v32@0:8@16@24
B28@0:8@16B24
q32@0:8@16q24
B16@0:8
v20@0:8B16
q16@0:8
v24@0:8q16
@24@0:8q16
v16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v28@0:8@16B24
v24@0:8@16
v32@0:8@16Q24
v28@0:8@"AVAudioPlayer"16B24
v32@0:8@"AVAudioPlayer"16@"NSError"24
v24@0:8@"AVAudioPlayer"16
v32@0:8@"AVAudioPlayer"16Q24
d16@0:8
v48@0:8@16@24q32q40
I32@0:8@16d24
v20@0:8I16
B32@0:8@16@24
@48@0:8@16q24q32^d40
f16@0:8
v20@0:8f16
@"NSString"
@"PCSimpleTimer"
@"AVAudioPlayer"
@"AXTapticChimeAsset"
@"NSDate"
@"NSObject<OS_dispatch_queue>"
v48@0:8@16{_NSRange=QQ}24@40
v32@0:8@"AVSpeechSynthesizer"16@"AVSpeechUtterance"24
v48@0:8@"AVSpeechSynthesizer"16{_NSRange=QQ}24@"AVSpeechUtterance"40
v40@0:8@16@24@32
v52@0:8@16@24B32@36@44
v48@0:8@16@24@32@40
v44@0:8@16@24B32@36
v32@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24
v40@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"NSArray"32
v52@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24B32@"NSString"36@"NSError"44
v40@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"VSInstrumentMetrics"32
v48@0:8@"VSSpeechSynthesizer"16{_NSRange=QQ}24@"VSSpeechRequest"40
v40@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"VSAudioData"32
v48@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"VSInstrumentMetrics"32@"NSError"40
v32@0:8@"VSSpeechSynthesizer"16@"VSPresynthesizedAudioRequest"24
v44@0:8@"VSSpeechSynthesizer"16@"VSPresynthesizedAudioRequest"24B32@"NSError"36
v48@0:8@"VSSpeechSynthesizer"16@"VSPresynthesizedAudioRequest"24@"VSInstrumentMetrics"32@"NSError"40
v40@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"NSError"32
v32@0:8@"VSSpeechSynthesizer"16@"VSPreviewRequest"24
B32@0:8Q16Q24
v40@0:8@16Q24Q32
@32@0:8@16@24
v24@0:8Q16
@"VSSpeechSynthesizer"
@"AVSpeechSynthesizer"
@"NSDateFormatter"
@"AXTapticTimeManager"
@32@0:8q16@24
@32@0:8q16Q24
@40@0:8q16@24@32
I24@0:8d16
@"NSDictionary"
