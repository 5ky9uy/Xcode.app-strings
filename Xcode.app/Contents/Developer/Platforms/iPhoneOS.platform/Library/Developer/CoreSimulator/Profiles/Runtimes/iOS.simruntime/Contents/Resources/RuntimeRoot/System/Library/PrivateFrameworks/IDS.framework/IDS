Instantiating %{public}@ from daemon -- returning nil
%s is deprecated, please use startTrackingPeer:forType:
%s is deprecated, please use stopTrackingPeer:forType:
Exception returned from daemon: %@
Sending down new services %@ commands %@ capabilities %d. sendServices %@ sendCommands %@ sendCaps %@
Sending down new services %@ commands %@ capabilities %d
Set services: %@  (Previous: %@)
Set commands: %@  (Previous: %@)
Updating capabilities: %d  (Previous: %d)
Disconnecting from daemon - no listeners
%s: adding delegate on service %@ _notificationServices %@
Adding listener with ID: %@    services: %@   commands %@
Removing listener with ID: %@    services (count): %@   commands (count): %@   capabilities %@
Tried to remove non existent listener with ID: %@
Set %@: %@  for listener ID: %@
setCapabilities %d for listenerID %@ has no ID
setCapabilities %d for listenerID %@ is not a valid listener
setCapabilities %d for listenerID %@ - listener map already contains our capabilities
Set caps: %d  for listener ID: %@
Cleaning up daemonConnectedGroup %p
Cleaning up LOCAL object
Cleaning up REMOTE object
Disconnected from agent (local)...
 ... disconnection from agent (local) being handled by ivarQueue
Disconnected from agent (remote)...
 ... disconnection from agent (remote) being handled by ivarQueue
Will auto reconnect...
 ...auto reconnecting
System application did suspend
System application did enter background
System application did enter foreground
System application did resume
Received call to roll encryption keys
IDSLocalSetupStart
IDSLocalSetupCompleted
IDSLocalSetupStop
IDSLocalSetupUnpair
IDSLocalSetupUnpairStart
IDSAddPairedDevice %@
Asked to pair device with cbuuid: %@
IDSConnectPairedDevice %@
%s %@
%s %@ %p %p
%s is DEPRECATED! Please use IDSGetPairedDevicesWithCompletionBlock
%s is DEPRECATED! Please use IDSInitialLocalSyncStartedForServices
%s is DEPRECATED! Please use IDSInitialLocalSyncCompletedForServices
Local setup - received incoming sync message
%s: invalid device %@
Invalidating _IDSGroupSession { self: %p, _internal: %p }
IDSGroupSession method invoked without a valid internal session! { self: %p, _internal: %p }
IDSReportiMessageSpam - %@  (toURI: %@)
IDSReportiMessageUnknownSender - %@, %@, %@  (toURI: %@)
IDSCheckiMessageUnknownSender (toURI: %@ Count: %@)
%@ posting availability change notification (%@) - available: %d
%@ creating monitor for service: %@
%@ adding listener `%@` for service: %@
%@ removing listener `%@` for service: %@
%@ no more listeners for service: %@
Exception: %@ in handler: %@ while executing a block
IDSDaemonListener _removeAccountOnIvarQueue %@ was told of an account without a unique id or service name: %@
IDSDaemonListener accountAdded %@ was told of an account without a unique id or service name: %@
%s: %@
IDSDaemonListener accountRemoved %@ was told of an account without a unique id or service name: %@
IDSDaemonListener accountEnabled was told of an account without a unique id %@ or service %@
Incoming account enabled: %@
IDSDaemonListener accountDisabled was told of an account without a unique id %@ or service %@
Incoming account disabled: %@
Account info changed %@
IDSDaemonListener accountInfoChanged %@ was told of an account without a unique id or service name: %@
Found active device in dependent devices update, updating activeDevice ID to %@ for %@
Dependent devices updated, setting %@ to (isActive: %@)
Current devices for account %@: %@
Found existing local device, removing %@
Local device added %@, we'll trigger didSwitchActivePairedDevice callback since we already have an active device %@
Local device added %@, we'll trigger didSwitchActivePairedDevice callback since we already had a locally paired device
Local device added, updating activeDevice ID to %@
New devices for account %@: %@
Active device was removed, clearing active uniqueID %@
Refresh registration for account %@
No device ID can't update nsuuid, bailing...
Device unique ID %@
We found a match ! %@
Did get identities {identities: %@, error: %@}
Calling didSwitch for topic %@
DidSwitch callback for %@ (handler %@) was handled %@
Unhandled didSwitch callback for topic %@
Updating isActive state for all accounts %@
New active unique ID is nil
Account unique ID is nil, can't switch active device ID
Switching active device to %@ for account %@
Active paired device switched, updating activeDevice ID to %@
Unsetting active device unique ID due to quick switch or new pairing start
Setup complete with info
Deferred setup on ivar queue, got accounts %@
Services all disappeared, removing all accounts
Deferred setup on ivar queue, got enabled accounts %@
Notified account enabled %@ for service %@
Enabled accounts all disappeared, removing all enabled accounts
Deferred setup on ivar queue, got %lu dependent devices
Dependent devices all disappeared, removing all dependent devices
Device identifier from daemon: %@
Active device uniqueID from daemon: %@ account map %@ service map %@
Setup info is not complete, waiting...
Connection is not complete, waiting...
Connection complete, notifying
Connection complete
XPC object received %@:%@
Exception: %@ in handler: %@ while executing: %@
Device identifier changing from %@ to %@
Unnecessary invocation of deviceIdentifierDidChange:
Setting up delegate %p
Sending the real-time media prekey of this device to the group %@
the delegate object %@ doesn't respond to the selector didReceivePublickeys:
the delegate object %@ doesn't respond to the selector didReceiveMasterKeyMaterials:
unknown object type %@
Did receive registration identity update {delegates: %{public}@}
Setting delegate {service: %@, delegate: %p, status: %@}
Removing delegate {service: %@}
%s called with nil completion - returning
Enable user on service {userType: %llu, service: %@}
Already enabled
Enabling apple id - starting machine
Enabling phone number - completed
No matching account {error: %@}
Disable user on service {userType: %llu, service: %@}
Already disabled
No account found -- completing {userType: %llu, service: %@}
Checking user statuses {service: %@}
Finished checking user statuses {status: %@, service: %@}
Provided credential {credential: %p, user: %@, service: %@}
Invalid params {error: %@}
Set for account password {username: %@, error: %@}
Sign in user {user: %@, service: %@}
Sign in user with provided credential {user: %@, credential: %p, service: %@}
Sign out service {service: %@}
Calling sign in controller's client completion block {completion: %@, error: %@}
Periodic validation fired {delay: %f, allowFuzz: %@}
No account to validate {accountID: %@, description: %@}
Validating state {stateNumber: %@, account: %@}
Completed {errorCode: %llu, account: %@}
Transitioning to registering
Validating delegate state {changes: %@, current: %@, cached: %@}
Added interesting account {account: %@}
Account disabled {account: %@}
Account removed {account: %@}
IDSSession dealloced
Received invalid options %@, bailing
Received IDQueryCompletedWithFromURI %@ idStatusUpdates %@ service %@ success %@ error %@
Updated local cache to %@
Notifying delegate %@ about ID status update
addListener:forService:
ListenerID is empty, bailing...
Service name is empty, bailing...
%@ -> %@
Final map after add %@
removeListenerID:forService:
Final map after remove %@
%s  (simulatorDeviceID: %@)
Failed to soft link IDSSimulatorLocalPairingAddPairedDevice
Failed to soft link IDSSimulatorLocalPairingDeletePairedDevice
Failed to soft link IDSSimulatorLocalPairingSwitchActivePairedDevice
%s: received new traffic classifiers %@
Cannot save invalid device info: %@
Received paired device info, sending to daemon for saving
Cannot delete empty CBUUID {cbuuid: %{private}@}
%s: device CBUUID: %@
%s: Empty completion block/queue
Querying local device info from IDSD asynchronously
XPC Connection Error - Failed to get localDeviceInfo {error: %{public}@}
Received local device info from daemon, device: %@
getLocalDeviceInfoFailed {error: %{public}@}
Querying paired device info from IDSD asynchronously
XPC Connection error - Failed to get pairedDeviceInfo {error: %{public}@}
Received paired device info from daemon, device: %@
getPairedDeviceInfo error {error: %{public}@}
Received pairing removed notification from daemon, device: %@, deleted: %@
Invoking pairingDelete completion block
XPC Connection error - Failed to constuct RA response dictionary {error: %{public}@}
Failed to create IDSAuthenticationSigningResult due to a mismatch between subscription identifiers and authentication certificates! {subscriptionIdentifiers: %@, authenticationCertificates: %@}
Client requested authenticate phone on an unsupported platform -- failing request {clientError: %@}
Client request to authenticate phone {uuid: %@}
Client requested phone authentication signature on an unsupported platform -- failing request {clientError: %@}
Client request to generate phone authentication signature over data {uuid: %@}
Client requested carrier token on an unsupported platform -- failing request {clientError: %@}
Client request for carrier token {uuid: %@}
Received authenticate phone response from daemon {uuid: %@, phoneCertificateData: %@, handler: %@, completion: %@, clientError: %@}
Received phone authentication signature response from daemon {uuid: %@, signature: %@, signingResult: %@, handler: %@, completion: %@, clientError: %@}
Received carrier token response from daemon {uuid: %@, carrierToken: %@, handler: %@, completion: %@, clientError: %@}
Timed out phone authentication signature request -- calling completion block with timeout error {completionBlock: %@}
Timed out phone authentication certificate request -- calling completion block with timeout error {completionBlock: %@}
Timed out phone carrier token operation -- calling completion block with timeout error {completionBlock: %@}
Client requested to set current phone user subscription source on an unsupported platform -- failing request {clientError: %@}
Client request to set current phone subscription source {uuid: %@}
Client requested current phone user subscription source on an unsupported platform -- failing request {clientError: %@}
Client request for current phone subscription source {uuid: %@}
Failed to weak link FTSelectedPNRSubscription from FTServices for synchronous fetch of phone user subscription source
Unable to determine selected phone user subscription source synchronously {subscriptionSource: %ld, selectedContext: %@, subscriptionError: %@}
Returning current phone user subscription source synchronously {subscriptionSource: %ld, clientError: %@}
Timed out phone subscription source operation -- calling completion block with timeout error {completionBlock: %@}
Received response after setting current phone user subscription from daemon {uuid: %@, subscriptionSource: %@, handler: %@, completion: %@, clientError: %@}
Received current phone user subscription response from daemon {uuid: %@, subscriptionSource: %@, handler: %@, completion: %@, clientError: %@}
Alloc'ing IDSXPCConnectionRemoteObjectPromise {pointer: %p}
Dealloc'ing IDSXPCConnectionRemoteObjectPromise {target: %{public}@, pointer: %p}
Failing xpc connection promise {pendingInvocations: %{public}@, error: %{public}@}
Failing xpcRemoteObjectPromise with no pending invocations {error: %{public}@}
Found existing IDSAccountController %@ for service %@
Tried to create IDSAccountController with empty service, ignoring...
Couldn't find existing IDSAccountController adding new one %@
    %@ -> %p
Deallocing IDSAccountController %@
%p will be removed from account controller map automatically
* Request to setup account with aliases: %@ and parameters:
  => password : REDACTED
  => %@ : %@
* Request to add account: %@   service: %@
* Request to remove account: %@   service: %@
* Request to enable account: %@   service: %@
* Request to disable account: %@   service: %@
Initializing _IDSGroupSession { self: %p, uniqueID: %@, instanceID: %@ }
Conference server at: %s:%d
No conference server support, cannot connect to server at %s:%d
Invalidating _IDSGroupSession { self: %p, uniqueID: %@, instanceID: %@ }
Deallocating _IDSGroupSession { self: %p, uniqueID: %@, instanceID: %@ }
_IDSGroupSession was deallocated without being invalidated -- this may indicate an orphaned daemon session! { self: %p, uniqueID: %@, instanceID: %@ }
Disconnected from daemon, notifying client of groupSession %@
Empty unique ID
Empty instance ID
Empty account ID
Setting up session delegate %p
Cannot join a session that is already ended, ignoring...
joinWithOptions: %@
Cannot join a session without the participant data information.
cfs_client_send_join_request, _cfs_requestID: %d, clientID: %d, groupID: %s, data: %@, result: %d
cfs_client_send_leave_request, result: %d
Session %@ received the report: %@
Ignoring didReceiveReport, session doesn't match %@ vs. %@
Ignoring group session termination, session doesn't match %@ vs. %@
Group session %@ was terminated
Group session ended %@ with reason %d error %@
Ignoring group session ended, session doesn't match %@ vs. %@
Did join group session %@, existing participants %@
Ignoring didJoin, group session doesn't match %@ vs. %@
Did join group session %@, participantInfo %@
Did join group session %@, participantUpdate %@
Did leave group session %@
Ignoring didLeave, group session doesn't match %@ vs. %@
ParticipantDidJoin group session %@, participantInfo %@
Ignoring participantDidJoin, group session doesn't match %@ vs. %@
ParticipantDidLeave group session %@, participantInfo %@
Ignoring participantDidLeave, group session doesn't match %@ vs. %@
didReceiveActiveParticipants: %@ for group session: %@
Ignoring didReceiveActiveParticipants, group session doesn't match %@ vs. %@
xpc object: [%@] context: [%@]
Ignoring socket, session doesn't match %@ vs. %@
Received XPC Response Error: %@
Request type %d failed with error code %d, make sure to set the participant info.
No conference server support, lost connection to server!
Request type %d succeeded
REPLY_TYPE_JOIN_REPLY
cfs_client left group session
Number of clients broadcasted: %u
REPLY_TYPE_JOIN_NOTIFICATION
Client %u left
REPLY_TYPE_BROADCAST_NOTIFICATION
Unknown reply type: %d
process_cfs_client_blob_set: client count: %u
process_cfs_client_blob: clientid: %u, datasz: %u
Fetching groups from groupIDs {groupIDs.count: %ld}
Failed to fetch groups {error: %{public}@, groupIDs: %{private}@}
Fetched groups with success {groups.count: %ld}
Fetch groupds {groups: %{private}@}
Fetching transport log messages
Fetched messages from transport log
Account identity for task handler - failed to get content - fail {error: %{public}@}
Registration identities updated - clearing client cache
Group Context Created %@
Faied to get address in FixedQuickRelayServerAddress defaults
Decoded relay-server-address %@:%u
Decoded base64 relay-session-id %@
Decoded base64 relay-session-token %@
Decoded base64 relay-session-key %@
Using preallocated tokens from user defaults
Missing a defaults for hardcoded QR session info
Account delegate has been cleaned up via weak references %p
setCapabilities %u  %@, result = %@
!setState guid=%@
Downgrading priority of message with GUID %@ to Default from Urgent, The client %@ is not in the Urgent whitelist
Client %@ is forcing QR for Cloud Message with GUID %@
QueueOneIdentifier not a string! [%@]
callstack %@
OutgoingMessage
!setState traceIdentifier=%@
OUTGOING-CLIENT_REQUEST:%@ SERVICE:%@
Client request to send %@ on service: %{public}@   guid: %{public}@   to destinations: %@   options: %@    size: %d] (%lu pending)
5 {curProtocol: %hhu, prevProtocol: %hhu, prevBundleID: %@, curUUID: %{public,uuid_t}.16P, curPktLen: %u, logSeqn: %hhu}
START %@
SendToDaemon
sendPayload - could not find account uniqueID! self: %@ account: %@
%@ unable to plist-serialize dictionary %@ !!
Client request to send %{public}@ message (dictionary) service: %{public}@  to destinations: %@   options: %@]
sendPayload - could not plist serialize dictionary.
%@ asked to send server message %@ with command %@ - invalid value!
%@ not connecting to identityservicesd - no serviceName for account %@
Failed to connect to identityservicesd; %@ %@
%@ resending %@ alternate %@ due to daemon disconnection.
OUTGOING-UPDATE:%@ CODE:%ld LASTCALL:%@
%@ outgoing message guid response: %{public}@  callbackID: %@  response code: %ld   error: %{public}@  WiProx error: Error Domain=%{public}@ Code=%{public}@ %{public}@  lastCall: %@
%@ outgoing message guid response: %{public}@  callbackID: %@  response code: %ld   error: %{public}@   lastCall: %@
Server Timestamp for UpdatedWithResponseCode?%@
IDS sending success is NO though error is unset
  => <%@:%p> finished handling message guid: %@  (connection:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:)
  => <%@:%p> finished handling message guid: %@  (connection:identifier:didSendWithSuccess:error:context:)
%@ identifier %@ callbackID %@ willSendToDests count %@ skipped count %@  map count %@
  => <%@:%p> finished handling message guid: %@  (connection:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:)
%@ received app-level ack with identifier %@ context %@
Recieved did send opportunistic data {connection: %@, identifier: %@, accountID: %@, toIDs: %@}
Ignoring %@ for topic %@ my topic is %@
Ignoring %@ to: %@ it is not to my aliases: %@ account uuid: %@
Ignoring %@, account is not configured: %@    isActive: %@  isRegistered: %@  isLocal: %@  serviceIdentifier: %@  registrationStatus: %ld  registrationCert: %@
Ignoring %@ for topic %@ because fromID %@ is a suppressed IDSDevice.
Connection recieved message
%@ received message: %@  topic %@  from: %@  to: %@   payload items: %d
INCOMING-CLIENT_MESSAGE:%@ SERVICE:%@
9 {curProtocol: %hhu, nextProtocol: %hhu, curUUID: %{public,uuid_t}.16P, curPktLen: %u, logSeqn: %hhu}
Warning! Message with guid %@ exceeds size limitations of MPKL_UUID_NEXT macro.
%@ received data: %@ topic %@  from: %@  to: %@
INCOMING-CLIENT_DATA:%@ SERVICE:%@
%@ received Engram Dict: %@ topic %@  from: %@  to: %@
Accessory data commands are only supported on AppleID accounts, This one is not for me.
%@ received Accessory data: %@ topic %@  from: %@  to: %@
%@ received Accessory Report Message: %@ topic %@  from: %@  to: %@
INCOMING-CLIENT_PROTOBUF:%@ SERVICE:%@
Client received protobuf from daemon %@ for topic: %@  messageID: %@  fromID: %@
 => Handed protobuf ID %@ to delegate: %@
Ack'ing message %@ to daemon that client got it
Client received notification that cache was flushed { service: %@, remoteURI: %@, fromURI: %@, guid: %@ }
INCOMING-CLIENT_PENDING:%@ SERVICE:%@
Client received pending incoming message from daemon %@ for topic: %@  messageID: %@  fromID: %@
Received incoming invitation %@ forTopic %@ sessionID %@ toIdentifier %@ fromID %@ transportType %@
Received incoming group session participant update forTopic %@
Received incoming group session participant data update forTopic %@
Incoming Group Share
Incoming Registered Identities
checkTransportLog {reason: %ld}
Client has set export object %@
Invalidation Handled
Interruption Handled
%@ %s  (serviceDelegate: %@)
%@ %s  (delegateIdentifier: %@)
%@ %s
Unacknowledged IDSServiceDelegate objects: %@
%s (%s: %@)   (%s: %p)   (%s: %p)
%s (%s: %p)   (%s: %p)
Failed to get pairing records {error: %{public}@}
Failed to get pairing collaborator {error: %{public}@}
%s (%s: %@)   (%s: %@)   (%s: %p)   (%s: %p)
About to call local pairing completion block { block: %p, error: %@ }
Calling local pairing completion block %p
_IDSDeviceConnection was created without an IDSDevice %@ or service %@
<%p> The client passed the smaller timeout %@ than the default value. IDSDeviceConnection will use the default value.
<%p> Init connection socket %d with options: %@  device: %@  (%@)  (name %@) service %@ connectionUUID %@ timeout %@
<%p> _IDSDeviceConnection has timed out waiting for a socket.
<%p> Updating stream pair: %@:%@
<%p> Updated socket traffic class: %d
<%p> Closing socket: %d (name %@)
<%p> Closing socket: skipped, a new connection for this %@
<%p> World, id[%@] !=? id[%@]
<%p> xpc object: [%@] context: [%@]
Received XPC Response/Socket: %d    Error: %@
Received XPC Response/Socket: %d
<%p> Opened socket: %d (Success: %@ ) %@ (%@)
Open socket request already timed out, closing %d.
Daemon died, closing socket: %d
IDSAccountController created with service %@ serviceToken %@
Adding listener with ID %@ topics %@
Daemon disconnected, we'll need to reload accounts for service: %@
Updating delegates of account changes
Re-loading cached accounts for service: %@ with dictionaries %@
Account loaded was of unknown account type %d, ignoring...
Old account set %@
New account set %@
New enabled accounts set %@
Requesting setup of account: %@   service: %@  transaction: %@  accountConfig: %@
We have a real account registered, hiding local account
We don't have a real account registered, adding and enabling local account
Client request to enable account ID: %@
Client request to disable account ID: %@
Account added was of unknown account type %d, bailing...
**** Account added has no uniqueID **** %@
Received account removed %@ for topic %@
Did not find an existing account to remove with unique ID %@
**** Account removed has no uniqueID **** %@
Received account updated %@ for topic %@
Did not find an existing account to update with unique ID %@, creating one
Account updated was of unknown account type %d, ignoring...
**** Account updated has no uniqueID **** %@
Received accounts changed %@ for topic %@  service: %@  (Cached: %@)
No uniqueID for account %@, ignoring...
Did not find an existing account to update with unique ID %@
Account changed was of unknown account type %d, ignoring...
Could not create IDSAccount with info %@
Original accounts %@
Accounts Modified %@
Removing accounts %@
Setup complete - no transaction ID, bailing...
SetupCompleteForAccount %@ transactionID %@ setupError %@
Setup handler block %p for transactionID %@
Account setup completed but we don't have an account, ignoring...
Setup completed for account %@ isActive %@ setupError %@
Account enabled - no unique ID, bailing...
Account enabled - no service, bailing...
Received account enabled %@ on service %@
Adding enabled account %@
Did not find an existing account to enable with unique ID %@
Account disabled - no unique ID, bailing...
Account disabled - no service, bailing...
Received account disabled %@ on service %@
Removing enabled account %@
Did not find an existing account to disable with unique ID %@
Hard deregistering, %@
Triggering final deregister, %@
Alloc'ing IDSXPCDaemonController {pointer: %p}
IDSXPCDaemonController connection interrupted -- Dropping collaborators {collaborators: %{public}@, pointer: %p}
Dealloc'ing IDSXPCDaemonController {pointer: %p}
Activating daemon controller
Get collaborator {identifier: %{public}@, timeout: %f}
Creating collaborator promise {identifier: %{public}@}
Got collaborator {identifier: %{public}@, proxy: %{public}@}
Failed to get collaborator {identifier: %{public}@, error: %{public}@}
Get sync collaborator
Failed to get data for publicIdentity {dataProtectionClass: %{public}@, error: %{public}@}
Failed to get data for fullIdentity {dataProtectionClass: %{public}@, error: %{public}@}
Creating new IDSAccount %p with config %@ uniqueID %@ serviceName %@
Created new IDSAccount %p with loginID %@ uniqueID %@ serviceName %@
Framework register account
Client requesting to register account: %@
Framework unregister account
Client requesting to unregister account: %@
Framework reregister account
Client requesting to reregister (with reidentify %@) account: %@
Framework deactivate account
Client requesting to deactivate and purge identify account: %@
Framework activate alias
Client request to activate alias { alias: %@ }
Framework deactivate alias
Client request to deactivate alias { alias: %@ }
iCloud sign in hack with userName %@ password %@
iCloud sign out hack
Kicking get dependent
Client request for IDSCopyLocalDeviceUniqueID: %@
Tried to create an account with empty service name, bailing...
Tried to create an account with unknown account type %d, bailing...
No account type specified, setting to Apple ID
New account info %@ for %@
Account setting regionID {regionID: %@, account: %@}
Account setting regionBasePhoneNumber {regionBasePhoneNumber: %@, account: %@}
Adding IDSDevice %@
Devices updated %d
Devices before %@
Devices after %@
Local account, ignoring request for keychain registration
Registered URIs for %@ with service type %@ account type %d
Registration cert for %@ with service type %@ account type %d
Push token for %@ with service type %@ account type %d
%@ not connecting to identityservicesd - no serviceName for config %@
Account %@ received registration status changed: %@
Account %@ received aliases changed: %@
Account received %@ vetted aliases changed
Account received %@ profile changed: %@
Account %@ received login changed: %@
Account received %@ displayName changed: %@
Account received %@ dependentDevicesUpdated %@
Account received %@ dependentDevicesUpdatedUponReconnect (devices count: %@)
Account received %@ localDeviceAdded %@
Devices updated %@
Account received %@ localDeviceRemoved %@
Account %@ received request to refresh registration
Call made to deprecated IDSService API with service domain %{public}@
iCloud sign in with userName %@ authToken %@ password %@ accountInfo %@ status %@ and handles %@
iCloud sign out
iCloud update for userName %@ accountInfo %@
iCloud modify for userName %@
iTunes sign in with userName %@ authToken %@ password %@ accountInfo %@ status %@ and handles %@
iTunes sign out
IDS update user { oldUserName: %@, newUserName: %@ }
Client received event %s on service %@
Framework init with service, commands
!setState service=%@
Framework init with service commands
IDSConnection/IDSAccountController delegates have been cleaned up via weak references %p
IDSService deallocating with serviceName %@
Added delegate for service %p serviceName %@ listenerCaps %ld
Framework Daemon Connected
%@: OTRTestCallback: token is %@, setupTime is %.6f, error==nil is %d
%@ Switched active paired device for service name %@. deviceUniqueID: %@
Ignoring didSwitch callback for %@, mine is %@
%@ Update cache with active device
%@ Pre didSwitch call back block
%@ Notifying delegate %p of active device switch to %@ (delegateIdentifier %@)
%@ Pre devicesChanged call back block
%@ Notifying delegate %p of devices changing (devices %@)
%@ Group notify
Stopped suspending traffic to the daemon.
Connection map:
   %@ => %@
Tearing down connection for %@
activeAccountsChanged, oldSet: %@  newSet: %@
Calling active accounts changed %@ with delegate %p
*** dropping devicesChanged callback!
incomingOpportunisticData on connection guid %@ using engram %@ delegateCount %ld
Calling out to IDSService delegate %p for incomingOpportunisticData if it responds.
Done for IDSService delegate %p for incomingOpportunisticData - doesRespondToSelector? %@
incomingData on connection guid %@ using engram %@ delegateCount %ld
incomingData of size %lu on connection %@ account %@ from ID %@ sender-side-identifier %@
Calling out to IDSService delegate %p for incomingData if it responds.
Done for IDSService delegate %p for incomingData - doesRespondToSelector? %@
Context %@ WantsAppAck %@ AppAckGuid %@ storageGuid %@
Sending app-level ack dispatch called for message %@
incomingGroupData on connection guid %@ using engram %@ delegateCount %ld
incomingGroupData of size %lu on connection %@ account %@ from ID %@ sender-side-identifier %@
Error converting Group Data to ENGroup %@
No error returned however unable to create group from data (timeout?) %@, Original Data: %@
Received sentAhead group {groupID: %{public}@}
Group Share Persisted %@
Calling out to IDSService delegate %p for incomingAccessoryData if it responds.
Done for IDSService delegate %p for incomingAccessoryData - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingAccessoryReportMessage if it responds.
Done for IDSService delegate %p for incomingAccessoryReportMessage - doesRespondToSelector? %@
Service recieved message
incomingMessage on connection %@ account %@ from ID %@  from device: %@  sender-side-identifier: %@
incomingMessage on connection guid %@ using engram %@ delegateCount %ld
Consumed sandbox extension [%@] handle [%lld] for resource [%@]
Failed to consume sandbox extension! {errno: %d}
No sandbox extension for received resource [%@]
Given resource URL appears unacceptable! [%@]
Remove file success: %@, error: %@ (accessed %d)
Calling out to IDSService delegate %p for incomingResource if it responds.
Done for IDSService delegate %p for incomingResource - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingResource with metadata if it responds.
Done for IDSService delegate %p for incomingResource with metadata - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingMessage if it responds.
Done for IDSService delegate %p for incomingMessage - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingMessage with context if it responds.
Done for IDSService delegate %p for incomingMessage with context - doesRespondToSelector? %@
Service finished calling out
Incoming protobuf %@, routing to selector/delegate. sender-side-identifier %@
Incoming protobuf on connection guid %@ using engram %@ delegateCount %ld
Found selector %@ fullSelector %@ for key 0x%x
 => Delgate %p responds to: %@, passing along protobuf: %p
   * Done handling
No selector for key 0x%x = type(%u) isResponse(%@), notifying delegates
 => Delgate %p responds unhandled protobuf passing along protobuf: %p
No delegate was registered that could handle protobuf %@
incomingTopLevelMessage on connection guid %@ using engram %@ delegateCount %ld
No delegates for incoming madrid message. Sending 115 for guid %@
Calling out to IDSService delegate %p for incomingTopLevelMessage if it responds.
Done for IDSService delegate %p for incomingTopLevelMessage - doesRespondToSelector? %@ guid: %@
Calling out to IDSService delegate %p for incomingPendingMessage if it responds.
Done for IDSService delegate %p for incomingPendingMessage - doesRespondToSelector? %@
DecryptedEngramData %@ %@
  {decryptedData.length: %{public}@}
Decrypting Engram Message, Org Payload %@
Failed decrypting Engram {error: %@, serviceName: %@}
isActiveChanged on connection %@ isActive %@
devicesChanged on connection %@ account %@ all devices %@ num delegates: %lu
connectedDevicesChanged on connection %@ account %@ devices %@
%@ got messageIdentifier %@ callbackID %@ updatedWithResponseCode: %ld error %@ lastCall %@
%@ got messageIdentifier %@ callbackID %@ updatedWithResponseCode: %ld error %@ lastCall %@ sentBytes %@ totalBytes %@
%@ got identifier %@ callbackID %@ willSendToDestinations %@ skippedDests %@ regPropsToDests (count) %@
%@ got identifier %@ didSendWithSuccess %@  error %@ num delegates: %lu
%@ got identifier %@ hasBeenDeliveredWithContext %@
%@ didFlushCacheForRemoteURI %@ fromURI %@ guid %@
Sending up options to client: %@
Recieved did send opportunistic data {service: %@, identifier: %@, toIDs: %@}
Filtering account %@ with aliases %@  isActive? %@  canSend? %@
Ignoring sub-services update, couldn't find active device
Ignoring sub-services update, couldn't find uniqueID for device %@
Triggering Internal resend of Sub Services to daemon
Framework Set Protobuf Action
Framework Get Protobuf Action
Attempting To Send message from account %@ to destinations %@
Attempting to send on a non local account, this message is allowed to progress
Attempting to send to more than 1 destination, this message will fail in the daemon if necessary
Attempting to send to a remote destination from a local account, this is permited if proxy is permitted and will fail in the daemon if not
Client request to send opportunistic data {identifier: %@, options: %@, dataLength: %llu}
Client request to cancel opportunistic data {identifier: %@, serviceName: %@}
Framework Send Protobuf
!setState priority=%@
!setState destination=%@
Framework Send Data
Framework Send Accessory Data
!setState accessoryID=%@
Sending AccessoryData Now
sendAccessoryData - Could not find connection for account %@
sendAccessoryData - All accounts %@
sendServerMessage - Could not find connection for account %@
sendServerMessage - All accounts %@
FromID %@, strippedURI %@, token %@
Comparing device token %@ to token %@
Did not find a device matching the token %@
setPreferInfraWiFi: %@
setLinkPreferences: %{public}@
Received invalid link preferences
forceOTRNegotiation
Framework Send Resource At URL
!setState ResourceURL=%@
!setState serviceName=%@
sendResourceAtURL - resourceURL not a file %@
Attempted to link or copy file %@ destination %@ (%s to %@)
sendResourceAtURL - unable to link or copy file %@
sendResourceAtURL - resourceURL %@  isFileURL %@  localDelivery %@
Issued sandbox extension [%s] for file [%@]
Failed to issue sandbox extension for linked/copied file [%@]
Issued sandbox extension [%s] for original file [%@]
Failed to issue sandbox extension for original file [%@]
Sending Ahead group {groupID: %{public}@}
sendMessage - Could not find connection for account %@
sendMessage - All accounts %@
sendMessage - Unable to send message to this destination from this account %@
Call made to manually ack a message, however this service does not support manually acking of messages
sendCertifiedDeliveryReceipt passing context to daemon { context: %@ }
sendCertifiedDeliveryReceipt context passed to incorrect service { context.service: %@, service: %@ }
sendCertifiedDeliveryReceipt given nil certified delivery context
Creating datagram channel with destination %@ => %@
Creating datagram channel with socket %d => %@
Failed to send group ahead {group: %@, error: %@}
Did send group ahead {group: %@ identifier: %@}
sendResourceAtURL - can't allocate %ld bytes for new file path
sendResourceAtURL - failed to clone file %@ => %@ (error %d). Will try hard link.
sendResourceAtURL - failed to link and failed to copy file %@ => %@ (error %@)
Clearing out _connection, we're disconnecting
Forcing a disconnect, terminating connection
No service %@, bailing...
No block %p, bailing...
Cache request for service %@
transactionID map after ADD %@
Sending cache request for service %@ transactionID %@
transactionID map after REMOVE %@
Could not create message for cache query
No listenerID %@, bailing...
Cached ID status request (destinations: %@)  (service: %@)  (listenerID: %@)  (transactionID: %@)
No destinations, not issuing query...
Received cached id status {destinations: %@, service: %@, error: %@}
ID status renewal request (destinations: %@)  (service: %@)  (listenerID: %@)  (transactionID: %@)
Received id status {destinations: %@, service: %@, error: %@}
ID remote device request (destination: %@)  (service: %@)  (listenerID: %@)  (transactionID: %@)
No message to send %@, ignoring...
Query service disconnected
Error requesting client: %@
No connection to send message on
%s called with a nil completion -- returning
Requesting selected subscriptions with completion
%s called with nil subscription -- returning
Selecting subscription with completion {subscription: %@}
Unselecting subscription with completion {subscription: %@}
Setting selected subscriptions with completion {subscriptions: %@}
Requesting selected subscriptions synchronously
Selecting subscription synchronously
Unselecting subscription synchronously
Setting selected subscriptions synchronously
Error fetching sync registration collaborator {err: %@}
Error fetching registration collaborator {error: %@}
Alloc'ing IDSXPCConnection {remoteObject: %{public}@, pointer: %p}
IDSXPCConnection interrupted
IDSXPCConnection invalidated
Dealloc'ing IDSXPCConnection {remoteObject: %{public}@, pointer: %p}
transaction finished -- calling invoke {selector: %{public}@, uuid: %{public}@}
TransactionUUID missing from pendingTransactions --  Skipping invoke {selector: %{public}@, uuid: %{public}@}
Dropping all pending transactions {pendingTransaction: %{public}@, remoteObject: %{public}@, pointer: %p}
Alloc'ing IDSXPCConnectionTimeoutProxy {target: %{public}@, connection: %{public}@, pointer: %p}
Dealloc'ing IDSXPCConnectionTimeoutProxy {target: %{public}@, connection: %{public}@, pointer: %p}
xpc message timed out -- calling error {selector: %{public}@, uuid: %{public}@, timeout: %{public}@}
Clearing transaction timeout timer {selector: %{public}@, uuid: %{public}@}
Starting timeout for xpc message {selector: %{public}@, uuid: %{public}@, timeout: %{public}@}
Received device state note {uniqueID: %@, weakSelf: %p}
Device note -- old: {isNearby: %d, isConnected: %d, isCloudConnected: %d} new: {isNearby: %d, isConnected: %d, isCloudConnected: %d}
Client request to set uuid %@ on device %@
  => Device doesn't support it, ignoring
Nearby triggering nearbyDevicesChanged on account %p %@
Connected triggering connectedDevicesChanged on account %p %@
Cloud connected triggering cloudConnectedDevicesChanged on service %p %@
Purging idStatusCache
Sending ID status update (%d) for service %@ destination %@
No destinations, bailing...
No service, bailing...
No listenerID, bailing...
No query complete block, bailing...
Received results for service: %@  updates %@
No completion block, bailing...
No queue, bailing...
No listener ID, bailing...
_warmupQueryCacheForService:  (service: %@)
No service name, bailing...
Received cache for service %@, %d count
_flushQueryCacheForService:  (service: %@)
addDelegate:forService:listenerID:queue:  (delegate: %p)   (service: %@)   (listenerID: %@)   (queue: %p)
Invalid add delegate params -- bailing...
Listeners after ADD %@
removeDelegate:forService:listenerID:  (delegate: %p)   (service: %@)   (listenerID: %@)
Invalid remove delegate params -- bailing...
Listeners after REMOVE %@
<%p> Creating with socket %d
<%p> Creating with destination %@
-dealloc called for %@
<%@> sent the first data packet (size: %lu)
<%@> TX %f bytes/s
<%@> received the first data packet (size: %lu)
<%@> RX %f bytes/s
-underlyingFileDescriptor called for %@
<%@> first read, will send dummy link information
<%@> dummy link information
<%@>  removeIDSDataChannelLinkContext:%u, linkContexts %@
<%@> Can't find the linkContext of linkID %u, linkContexts %@
<%@> sent IDSDataChannelEventDisconnected, linkID %u, linkContexts %@
invalid link attribute size (%u), too small.
Got relay server provider:%d, session token:%dB, session key:%dB.
<%@> got connectedLinkID %d (link family:%u) (mtu:%u) (l-conn:%u) (l-RAT:%u) (r-conn:%u) (r-RAT:%u) (l-flags:0x%x) (r-flags:0x%x), Current LinkContexts %@
<%@> sent IDSDataChannelEventConnected, current link contexts %@
can't find link %d for the default
<%@> sendMediaEncryptionEventInfo MKM:%{private}@, MKS:%{private}@, MKI:%{private}@ locally generated:%{private}@
<%@> there is no report yet for the first packet of this MKI %{private}@.
<%@> sendMediaMembershipChangedInfo membershipChanged:%u
got PacketLinkID %d
kClientChannelMetadataType_PacketLinkID should be 1 byte, not %u bytes, field: %u
got trafficClass %u
kClientChannelMetadataType_TrafficClassKey should be %d bytes, not %u bytes, field: %u
got arrivalTime %f
kClientChannelMetadataType_PacketArrivalTime should be %d bytes, not %u bytes, field: %u
got invalid streamIDCount %u
got streamIDCount %u
got streamID bytes:%@
kClientChannelMetadataType_StreamIDsKey: size mismatch (%u != %u), ignore.
got Channel Priority %u
kClientChannelMetadataType_PriorityKey should be 1 byte, not %u bytes, field: %u
got CT(packet counting) option
kClientChannelMetadataType_CountPacketKey  should be 1 byte, not %u bytes, field: %u
kClientChannelMetadataType_GenerationCounterLSBKey should be 1 byte, not %u bytes, field: %u
got probeGroupID %u
kClientChannelMetadataType_ProbeGroupIDKey should be 2 bytes, not %u bytes, field: %u
got Participant ID %llu
error: we received Participant ID %llu
kClientChannelMetadataType_ParticipantID should be 8 byte, not %u bytes, field: %u
got disconnectedLinkID %d, linkUUID %@
kClientChannelMetadataType_LinkDisconnected should be %d byte, not %u bytes, field: %u
got defaultLinkID %d
kClientChannelMetadataType_DefaultLinkID should be 1 byte, not %u bytes, field: %u
got ratType %u
kClientChannelMetadataType_RATChanged requires the cellular link. something is wrong...
kClientChannelMetadataType_RATChanged should be 1 bytes, not %u bytes, field: %u
got preConnectionDataSize %u
kClientChannelMetadataType_PreConnectionDataSizeKey should be 1 bytes, not %u bytes, field: %u
got preConnectionData, called IDSDataChannelEventPreConnectionData event
kClientChannelMetadataType_PreConnectionDataKey should know its size
<%@> sent IDSDataChannelEventRSSI (%u, %u, %u)
kClientChannelMetadataType_QueryRSSI should be %u, not %u bytes, field: %u
kClientChannelMetadataType_MaxBitrateKey should be %u, not %u bytes, field: %u
got MTU %u
kClientChannelMetadataType_CellularMTUChanged requires the cellular link. something is wrong...
kClientChannelMetadataType_CellularMTUChanged should be %u bytes, not %u bytes, field: %u
kClientChannelMetadataType_InfoReportKey report %@
kClientChannelMetadataType_InfoReportKey should be bigger than %u bytes.
kClientChannelMetadataType_EncryptionMKMKey got MKM %@ size %u
kClientChannelMetadataType_EncryptionMKSKey got MKS %@ size %u
kClientChannelMetadataType_EncryptionMKMKey got MKI %@ size %u
kClientChannelMetadataType_EncryptionLocallyGeneratedInfoKey should be 1 byte, not %u
kClientChannelMetadataType_EncryptionMembershipChangedKey should be 1 byte, not %u
kClientChannelMetadataType_SessionReinitiated - IDSDSession is reinitiated
kClientChannelMetadataType_SessionReinitiated should be 1 byte, not %d
kClientChannelMetadataType_SessionInfoKey - Couldn't get NSData from fieldBytes
kClientChannelMetadataType_SessionInfoKey - Couldn't decode NSData %@ (error: %@)
kClientChannelMetadataType_SessionInfoKey - %@
kClientChannelMetadataType_SessionInfoResponseErrorKey should be %u byte, not %u
kClientChannelMetadataType_StatsKey - Couldn't get NSData from fieldBytes
kClientChannelMetadataType_StatsKey - Couldn't decode NSData %@
kClientChannelMetadataType_StatsKey - %@
kClientChannelMetadataType_StatsID should be %u byte, not %u
kClientChannelMetadataType_StatsServerTimeStamp should be %u byte, not %u
kClientChannelMetadataType_StatsServerPacketInterval should be %u byte, not %u
kClientChannelMetadataType_StatsTotalServerPacketReceived should be %u byte, not %u
kClientChannelMetadataType_StatsTotalServerPacketSent should be %u byte, not %u
kClientChannelMetadataType_StatsUplinkBandwidth should be %u byte, not %u
kClientChannelMetadataType_DebugDataTransferTypeKey should be 1 byte, not %u
kClientChannelMetadataType_OptOutPriorityFilter should be 1 byte, not %u bytes, field: %u
kClientChannelMetadataType_TransitionPacketFlag should be 1 byte, not %u bytes, field: %u
kClientChannelMetadataType_DebugDataTransferKey got data size %u
Unknown metadata type: %u
readDatagramWithCompletionHandler: _internal->_connection: Only has statsID: %x
<%@> read details: datagramSize %ld metadataSize %ld dataOffset %ld [%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x ...]
<%@> read details: datagramSize %ld metadataSize %ld dataOffset %ld
<%@> read sanity check failed: datagramSize %ld metadataSize %ld dataOffset %ld
<%@> read failed %d due to datagram_count 0 - calling event handler %p
<%@> read nonfatal failure errno %d
<%@> read failed errno %d calling event handler %p
<%@> read returned 0 bytes calling event handler %p
readDatagramsWithCompletionHandler: _internal->_connection: Only has statsID: %x
-invalidate called for %@
-start called for %@
<%@> nw_connection_create_with_connected_socket failed. socketDescriptor %d might be invalid.
<%@> got connected and calls event handler %p
<%@> does not have readHandler!
<%@> got error %@ and calls event handler %p
<%@> got disconnected with error %@ and calls event handler %p
<%@> write details: datagramSize %ld metadataSize %ld
<%@> write error_number %d calling completion handler %p dataCreateTime %0.6lf writeTime %0.6lf [%013.6lf]
<%@> write failed error_number %d calling completion handler %p
<%@> attempt to write with no connection, calling completion handler %p
<%@> write failed to send all bytes %d < %d
<%@> write returned 0 - connection terminated
<%@> write nonfatal failure errno %d
<%@> write failed errno %d
-setEventHandler called for %@
-setReadHandler called for %@
-setReadHandlerWithOptions called for %@
<%@> write details: metadataSize %ld
<%@> write error_number %d calling setChannelPreferences
<%@> write failed error_number %d calling setChannelPreferences
<%@> write done for setChannelPreferences
<%@> setChannelPreferences dictionary: %@
<%@> IDSDataChannelPreferencePreConnectionDataKey - %@, _waitForPreConnectionDataForConnected? %@
<%@> client channel connection is not ready. Wait to send preConnectionData
<%@> IDSDataChannelPreferenceDefaultLinkSelectionKey - linkID:%d
<%@> IDSDataChannelPreferenceBasebandRegistrationKey - linkID:%d, reg_key:%u registerOperation:%u
<%@> IDSDataChannelPreferenceBasebandQueueFlushKey - %@
<%@> IDSDataChannelPreferenceDiscardLinkIDsKey - %@
<%@> IDSDataChannelPreferenceUpdateQualityOfServiceKey - LinkID: %d, %@
<%@> IDSDataChannelPreferenceQueryInformationKey - queryType: %d
<%@> IDSDataChannelPreferenceSetMaxBitrateKey - maxBitrate: %u for LinkID: %d
<%@> kClientChannelMetadataType_ProcessIDKey - %d
<%@> kClientChannelMetadataType_BasebandQueueFlushPayloadSizeKey %u
<%@> kClientChannelMetadataType_DiscardLinkIDsKey the maximum of links is %d
<%@> kClientChannelMetadataType_PreConnectionDataSizeKey %u
<%@> kClientChannelMetadataType_PreConnectionDataKey %@
<%@> kClientChannelMetadataType_UpdateQoSIsGoodKey IsGood:%@ LinkID:%d
<%@> kClientChannelMetadataType_QueryRSSI
<%@> kClientChannelMetadataType_MaxBitrateKey maxBitrate:%u LinkID:%d
<%@> IDSDataChannelPreferenceNeedsEncryptionInfoKey - we'll request the encryption info
<%@> kClientChannelMetadataType_ForceUpdateEncryptionInfoKey - we'll update the encryption info.
%@: requestSessionInfoWithOptions: %{private}@ size: %lu
%@: reportFirstPacketForMKI: first packet arrival: %f for MKI: %{private}@
%@: reportFirstPacketForMKI: MKI %{private}@ has not arriaved yet. report later when it arrives.
%@: _reportFirstPacketForMKI: one of values is nil: MKIArrivalTime %@, firstPacketForMKIArrivalTime %@
%@: _reportFirstPacketForMKI: first packet arrival: %@, MKI arrival: %@
Adding listener ID: %@   for service: %@
Removing listener ID: %@   for service: %@
Client ID status to refresh ID status for destinations %@  on service: %@   from listenerID: %@
Client %@ is attempting to send more than a reasonable amount of URI's in a query {count: %lu}
Client ID status to force refresh ID status for destinations %@  on service: %@   from listenerID: %@
Client ID status to refresh ID status for destination %@  on service: %@   from listenerID: %@
Client requesting to warmup the query cache for service: %@
Client requesting to flush the query cache for service: %@
** BLOCKING Client ID status to refresh ID status for destination %@  on service: %@   from listenerID: %@
** BLOCKING Client ID status to refresh ID status for destinations %@  on service: %@   from listenerID: %@
  => Done: %f
** BLOCKING Client ID status cache request for destination %@  on service: %@   from listenerID: %@
** BLOCKING Client ID status cache request for destinations %@  on service: %@   from listenerID: %@
Client Remote Device Request
Client ID status request for destinations %@  on service: %@   from listenerID: %@
Client ID status request for destination %@  on service: %@   from listenerID: %@
Disconnected from daemon, notifying client of session %@
%@: Empty unique ID
%@: Empty account ID
%@: Empty destinations set
%@ - existing socket pair, ignoring request to create
Setting up socket pair to daemon
%@ - %@ %d (%s)
Sending allocation request with options %@
Sending Session Invitation with options %@
Sending Session Invitation with data (%lu bytes), declineOnError %@
Sending Session Invitation Cancel
Sending Session Invitation Cancel with data (%lu bytes)
Sending Session Invitation Cancel with Reason %u
Sending Session Invitation Accept
Sending Session Invitation Accept with data (%lu bytes)
Sending Session Invitation Decline
Sending Session Invitation Decline with data (%lu bytes)
Skipping destination %{private}@, which is not in this session's list of destinations: %{private}@
Asked if shouldUseSocketForTransport %@
%@ - Session not connected can't send data yet, ignoring...
%@ - No socket pair connection setup, ignoring...
%@ - No data to send, ignoring...
Sending data Client -> Daemon  (hash: %lu)  (length: %lu)
Session accept received fromID %@ sessionID %@ with data %@
Ignoring accept, session doesn't match %@ vs. %@
Session decline received fromID %@ sessionID %@ with data %@
Ignoring decline, session doesn't match %@ vs. %@
Session cancel received fromID %@ sessionID %@ with data %@
Ignoring cancel, session doesn't match %@ vs. %@
Session message received fromID %@ sessionID %@ with data %@
Ignoring message, session doesn't match %@ vs. %@
Session end received fromID %@ sessionID %@ with data %@
Ignoring end, session doesn't match %@ vs. %@
Session %@ invitation sent to tokens %@ shouldBreakBeforeMake %@
Ignoring session:invitationSentToTokens:, session doesn't match %@ vs. %@
Ignoring session started, session doesn't match %@ vs. %@
Session started for IDSSessionID: %@
Session ended %@ with reason %d error %@
Ignoring session ended, session doesn't match %@ vs. %@
Session audio enabled ? %@
Ignoring audioEnabled, session doesn't match %@ vs. %@
Session muted ? %@
Ignoring muted, session doesn't match %@ vs. %@
Ignoring xpc object, session doesn't match %@ vs. %@
Received initial link type %d for session %@ with error %@.
Received invalid initial link type xpc object for session %@ with error %@.
Received invalid xpc object type: %@.
UNRL: Received data Daemon -> Client  (data hash: %lu)  (length: %lu)
Daemon Interfaced Group context controller starting up
IDSInternalQueue - assertQueueIsCurrent failed %@. The only acceptable callstack includes dealloc.
IDSInternalQueue - assertQueueIsNotCurrent failed %@. The only acceptable callstack includes dealloc.
No delegate, bailing...
Client request to invalidate: %@
Scheduling next batch in %f
setDestinations %@
We're dead, bailing
Destinations are the same, bailing
Setting time of death to %@
Received cached results %@
Received 0 cached results, query all destinations
 * Next query timer hit: %@
We're dead, not querying: %@
We've reached the max number of queries for this batch, not adding anymore: %@
We've reached the max number of queries, not adding anymore: %@
Received results %@
We've reached the max number of queries, possibly deferring queries: %@ %@
Invalidating next query timer: %@
Calling out to old delegate %p
Calling out to old delegate %p for service %@
Returning results to delegate %p
No delegate %p or queue %p
IDSTransactionLogSync
Got token
!setState Token=%@
failed to get token {error: %@}
Fetching messages
!addState moreComing=%@
Persisted token
moreComing -- continue
No more coming -- done
Failed to persist token {token: %@, error: %@}
Failed to ingest messages {error: %@}
Failed to fetch messages {error: %@}
got transaction messages from transport messages {transactionMessages.count: %ld, transportMessages.count: %ld}
Failed to get transaction messages from transport messges {transportMessages: %{private}@, participants: %{private}@, groups: %{private}@, error: %{public}@}
Failed to get groups or participants {error: %{public}@}
Failed to get account information {error: %{public}@}
Fetching participants/groups for deviceMessges {deviceMessages.count: %ld, groupMessages.count: %ld}
Got participants {participants.count: %ld, destinations: %ld}
Error getting participants from device messages {error: %{public}@, participants: %{private}@, deviceMessages: %{private}@}
Got groups {groups.count: %ld, groupIDs.count: %ld}
Error getting groups from group messages {error: %{public}@, groups: %{private}@, groupMessages: %{private}@}
Error getting groups or participants {error: %{public}@}
Failed to decrypt device message {error: %{public}@}
Failed to get account for recipient alias {alias: %{private}@, accounts: %{private}@, message: %{private}@}
Message missing sender/recipient alias {senderAlias: %{private}@, recipientAlias: %{private}@, message: %{private}@, senderAlias==nil: %{public}@, recipientAlias==nil: %{public}@}
v8@?0
-[IDSContinuity startTrackingPeer:]
-[IDSContinuity stopTrackingPeer:]
state
Tq,R
__kIDSDaemonDidConnectNotification
__kIDSDaemonWillConnectNotification
__kIDSDaemonDidDisconnectNotification
__k_IDSDaemonDidConnectNotification
__kIDSDaemonConnectionLostNotification
IDSDaemonControllerContext
com.apple.IDSDaemonControllerIvarQueue
com.apple.IDSDaemonControllerQueue
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
com.apple.private.alloy.pbbridge
com.apple.private.alloy.accountssync
v32@?0@8@16^B24
-[IDSDaemonController addedDelegateForService:withCompletion:]_block_invoke
services
commands
xpc-object
object
object-context
_autoReconnect
TB,S_setAutoReconnect:,V_autoReconnect
_remoteMessageQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_remoteMessageQueue
delegate
T@,W,N,V_delegate
isConnecting
TB,R,N
remoteObject
T@"IMRemoteObject<IDSDaemonProtocol>",&,N,V_remoteObject
listenerID
T@"NSString",R,N,V_listenerID
listener
T@"IDSDaemonListener",R,N,V_daemonListener
curXPCMessagePriority
Ti,N,V_curXPCMessagePriority
com.apple.identityservices.xpc
accountsd
priority
Ti,N,V_priority
completion
T@?,R,N,V_completion
protocol
T@"NSProtocolChecker",R,N,V_protocol
ivarQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_ivarQueue
remoteMessageQueue
__kIDSKeyRollingCompleteNotification
IDSSecurityKeyRollingRollKeys
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IdentityServices_Sim/IdentityServices-1559/IDS/Client/IDSSecurityKeyRolling.m
!_IDSRunningInDaemon()
IDSSecurityKeyRollingRegenerateRegisteredIdentity
socket failed, errno: %d
gethostbyname failed, errno: %d
connect failed, errno: %d
IDSLocalSetupStart
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IdentityServices_Sim/IdentityServices-1559/IDS/Client/IDSLocalSetup.m
IDSLocalSetupCompleted
IDSLocalSetupStop
IDSLocalSetupUnpair
IDSLocalSetupUnpairStart
IDSAddPairedDevice
IDSConfigureDemoMode
DemoModeConfig
12345678-0000-DADA-DADA-DEADBEEEEEEE
IDSConnectPairedDevice
IDSDeletePairedDevice
IDSDeletePairedDeviceWithCompletion
v16@?0@"NSDictionary"8
IDSDeletePairedDeviceWithCompletionBlock
IDSGetPairedDevicesWithCompletionBlock
IDSGetPairedDevices
IDSGetDeliveryStatsWithCompletionBlock
IDSInitialLocalSyncStarted
IDSInitialLocalSyncCompleted
IDSInitialLocalSyncStartedForServices
IDSInitialLocalSyncCompletedForServices
IDSIncomingAccountSyncMessage
IDSSetAllowedTrafficClassifiersForDevice
IDSGetAllowedTrafficClassifiersForDevice
IDSDropAllMessagesWithoutAnyAllowedTrafficClassifier
com.apple.madrid
com.apple.ess
com.apple.private.ac
com.apple.private.alloy.facetime.video
com.apple.private.alloy.facetime.audio
com.apple.private.alloy.facetime.mw
com.apple.private.alloy.facetime.multi
com.apple.private.alloy.bulletinboard
com.apple.private.alloy.photostream
com.apple.private.alloy.maps
com.apple.private.alloy.screensharing
com.apple.private.alloy.sms
com.apple.private.alloy.multiplex1
com.apple.private.alloy.biz
session:
sessionID
T@"NSString",R,N
destination
sessionEndedReason
TI,R,N
IDSReportiMessageSpam
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IdentityServices_Sim/IdentityServices-1559/IDS/Client/IDSReportiMessageSpam.m
IDSReportiMessageUnknownSender
IDSCheckiMessageUnknownSender
_IDSScheduleTimeoutForReportiMessageSpamCheckUnkownCompletionBlock
_IDSScheduleTimeoutForAnyCompletionBlock
_IDSListenForReportiMessageSpamResponses
__IDSServiceAvailabilityDidChangeNotification
availability
service
monitor
T@"IDSServiceMonitor",&,N,V_monitor
listeners
T@"NSMutableSet",R,N,V_listeners
IDSDaemonListener-ivarQueue: %@
IDSDaemonListenerContext
v16@?0@"<IDSDaemonListenerProtocol>"8
v32@?0@8Q16^B24
-[IDSDaemonListener accountAdded:]
-[IDSDaemonListener accountRemoved:]
com.apple.private.alloy.voicemailsync
v32@?0@"NSDictionary"8Q16^B24
serviceInfo
enabledAccountsInfo
dependentDevices
deviceIdentifier
activeDeviceUniqueID
isSetupComplete
hasPostedSetupComplete
_hidingDisconnect
TB,N,S_setHidingDisconnect:
object-type
public-keys
master-key-materials
delegates
T@"NSMutableSet",&,N,V_delegates
IDSRegistrationControlDisableRegistrationType
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IdentityServices_Sim/IdentityServices-1559/IDS/IDSRegistrationControl.m
IDSRegistrationControlEnableRegistrationType
IDSRegistrationControlGetStateForRegistrationType
_IDSScheduleTimeoutForRegistrtionControlActionCompletionBlock
_IDSListenForRegistrationControlResponses
_IDSScheduleTimeoutForRegistrtionControlStateCompletionBlock
IDSSignInControllerErrorDomain
IDSSignInControllerInternalErrorDomain
IDSSignInControllerErrorAccountKey
<%@: %p> Type: %@ Status: %@
type
TQ,R,N,V_type
status
TQ,R,N,V_status
<%@: %p> Service: %@ Infos: %@
serviceType
TQ,R,N,V_serviceType
serviceUserInfos
T@"NSArray",R,N,V_serviceUserInfos
phoneUserStatus
TQ,R,N
appleIDUserStatus
serviceName
T@"NSString",&,N,V_serviceName
T@"NSNumber",&,N,V_state
T@?,C,N,V_completion
com.apple.identityservices.IDSSignInController
-[IDSSignInController enableUserType:onService:completion:]
v24@?0@"IDSAccount"8@"IDSAccountController"16
-[IDSSignInController disableUserType:onService:completion:]
@16@?0@"IDSAccount"8
-[IDSSignInController statusOfUsersOnService:withCompletion:]
-[IDSSignInController provideCredential:forUser:onService:withCompletion:]
FaceTime
iMessage
v28@?0@"NSString"8@"NSString"16B24
-[IDSSignInController signInUsername:onService:waitUntilRegistered:withCompletion:]
-[IDSSignInController signInUsername:withProvidedCredential:onService:waitUntilRegistered:completion:]
v16@?0@"NSError"8
-[IDSSignInController signOutService:completion:]
B16@?0@"IDSSignInControllerAccountDescription"8
v24@?0q8q16
@"NSCountedSet"16@?0@"NSArray"8
%llu,%llu
serviceNameAccountControllerMap
T@"NSMutableDictionary",&,N,V_serviceNameAccountControllerMap
accountIDDescriptionMap
T@"NSMutableDictionary",&,N,V_accountIDDescriptionMap
delegateByServiceType
T@"NSMapTable",&,N,V_delegateByServiceType
initialStateByService
T@"NSMutableDictionary",&,N,V_initialStateByService
signInQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_signInQueue
passwordManager
T@"<_IDSPasswordManager>",&,N,V_passwordManager
CTAdapter
T@"IDSCTAdapter",&,N,V_CTAdapter
signInTimeout
Td,N,V_signInTimeout
signInFuzz
Td,N,V_signInFuzz
Phone
AppleID
SignedOut
Disabled
Enabled
Pending
direction
uniqueID
T@"NSString",&,N,V_uniqueID
socket
Ti,R,N
isAudioEnabled
TB,N
isMuted
invitationTimeOut
Tq,N
v32@?0@"NSString"8@"NSDictionary"16^B24
v16@?0@"<IDSIDQueryControllerDelegate>"8
void IDSSimulatedLocalPairingAddPairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSSimulatorLocalPairingAddPairedDevice
IDSSimulatorSupport
void IDSSimulatedLocalPairingDeletePairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSSimulatorLocalPairingDeletePairedDevice
void IDSSimulatedLocalPairingSwitchActivePairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSSimulatorLocalPairingSwitchActivePairedDevice
IDSIDQueryControllerErrorDomain
destinations
IDSBatchIDQueryControllerQueue
v16@?0@"NSObject<OS_xpc_object>"8
IDSSendMessageOptionTimeout
IDSSendMessageOptionSkipPayloadCheck
IDSSendMessageOptionTopLevelDictionary
IDSSendMessageOptionDataToEncrypt
IDSSendMessageOptionWantsResponse
IDSSendMessageOptionFromID
IDSSendMessageOptionCommand
IDSSendMessageOptionWantsDeliveryStatus
IDSSendMessageOptionWantsCertifiedDelivery
IDSSendMessageOptionDeliveryStatusContext
IDSSendMessageOptionUUID
IDSSendMessageOptionAlternateCallbackIdentifier
IDSSendMessageOptionEncryptPayload
IDSSendMessageOptionCompressPayload
IDSSendMessageOptionFireAndForget
IDSSendMessageOptionWantsClientAcknowledgement
IDSSendMessageOptionLocalDelivery
IDSSendMessageOptionForceLocalDelivery
IDSSendMessageOptionRequireBluetooth
IDSSendMessageOptionRequireLocalWiFi
IDSSendMessageOptionDuet
IDSSendMessageOptionExpectsPeerResponse
IDSSendMessageOptionPeerResponseIdentifier
IDSSendMessageOptionOpportunisticDuet
IDSSendMessageOptionTethering
IDSSendMessageOptionActivityContinuation
IDSSendMessageOptionNSURLSession
IDSSendMessageOptionMapTile
IDSSendMessageOptionNonWaking
IDSSendMessageOptionBypassDuet
IDSSendMessageOptionFakeMessage
IDSSendMessageOptionRequireAllRegistrationProperties
IDSSendMessageOptionRequireLackOfRegistrationProperties
IDSSendMessageOptionInterestingRegistrationProperties
IDSSendMessageOptionQueueOneIdentifier
IDSSendMessageOptionDuetIdentifiersOverride
IDSSendMessageOptionSockPuppet
IDSSendMessageOptionEnforceRemoteTimeouts
IDSSendMessageOptionAccessToken
IDSSendMessageOptionHomeKitMessage
IDSSendMessageOptionDisableAliasValidation
IDSSendMessageOptionForceEncryptionOff
IDSSendMessageOptionSubServiceKey
IDSSendMessageOptionAllowCloudDeliveryKey
IDSSendMessageOptionAlwaysSkipSelfKey
IDSSendMessageOptionNonCloudWakingKey
IDSSendMessageOptionMetricReportIdentifier
IDSSendMessageOptionLiveMessageDelivery
IDSSendMessageOptionWantsProgress
IDSSendMessageOptionDropMessageIndicator
IDSSendMessageOptionOriginalTimestampKey
_internal
T@"_IDSConnection",R,N
account
T@"IDSAccount",R,N
isActive
Error
%F %T 
%-6u %p %s 
block
T@,R,N,V_block
queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
IDSTransactionLogErrorDomain
completionBlock
T@?,C,N,V_completionBlock
batchProcessingBlock
T@?,C,N,V_batchProcessingBlock
knownRecordIDsFromList
T@?,C,N,V_knownRecordIDsFromList
shouldContinueFromLastSyncPoint
TB,N,V_shouldContinueFromLastSyncPoint
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IdentityServices_Sim/IdentityServices-1559/IDS/_IDSPasswordManager.m
<Unknown File>
This method should only be run on clients
supportsSecureCoding
TB,R
groupSessionID
T@"NSString",R,N,V_groupSessionID
participantID
TQ,R,N,V_participantID
connectionIndex
TQ,R,N,V_connectionIndex
dataMode
Tq,R,N,V_dataMode
com.apple.identityservicesd.nsxpc
handler
T@?,C,N,V_handler
-[IDSPairedDeviceManager setAllowedTrafficClassifiers:]_block_invoke
-[IDSPairedDeviceManager deletePairedDevice:withCompletionBlock:queue:]_block_invoke
v16@?0@"IDSXPCDaemonController"8
-[IDSPairedDeviceManager getLocalDeviceInfoWithCompletionBlock:queue:]
v24@?0@"NSDictionary"8@"NSError"16
-[IDSPairedDeviceManager getPairedDeviceInfoWithCompletionBlock:queue:]
-[IDSPairedDeviceManager getDeliveryStatsWithCompletionBlock:queue:]
xpcDaemonController
T@"IDSXPCDaemonController",&,N,V_xpcDaemonController
allowedTrafficClassifiers
T@"NSSet",&,N
IDSPhoneCertificateVendorErrorDomain
subscriptionSource
Tq,R,N,V_subscriptionSource
IMEI
T@"NSString",R,N,V_IMEI
carrierNonce
T@"NSString",R,N,V_carrierNonce
tokenString
T@"NSString",R,N,V_tokenString
<%@: %p subscriptionIdentifier: %@, serverVerifiableEncodingHash: %@>
subscriptionIdentifier
T@"NSString",R,N,V_subscriptionIdentifier
serverVerifiableEncoding
T@"NSString",R,N,V_serverVerifiableEncoding
authenticationCertificate
T@"IDSAuthenticationCertificate",R,N,V_authenticationCertificate
signature
T@"NSData",R,N,V_signature
%ld:%@:%@:%@
<%@: %p authenticationCertificateSignatures: %@>
authenticationCertificateSignatures
T@"NSArray",R,N,V_authenticationCertificateSignatures
inputData
T@"NSData",R,N,V_inputData
nonce
T@"NSData",R,N,V_nonce
com.apple.IDS.IDSPhoneCertificateVendor
An unknown error occurred
Failed to fetch local phone authentication certificate
Failed to fetch carrier token
Failed to generate phone authentication signature
Request timed out waiting for response from daemon
The requested operation is not supported on this platform
Unknown phone certificate error
@16@?0@"NSData"8
strongSelfReference
T@"IDSPhoneCertificateVendor",&,N,V_strongSelfReference
daemonRequestTimer
T@"IDSDaemonRequestTimer",R,N,V_daemonRequestTimer
TEST_IMEI
TEST_NONCE
v24@?0@"IDSCarrierToken"8@"NSError"16
FTSelectedPNRSubscription
FTServices
cfs_client_blob_set_get_blob
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IdentityServices_Sim/IdentityServices-1559/IDS/Client/IDSCFSClient.c
index < set->count
cfs_client_create
callback != NULL
tcp_connect failed, errno: %d
pthread_create failed, errno: %d
cfs_client_destroy
client->fd >= 0
client->isrunning
shutdown failed, errno: %d
pthread_join failed, errno: %d
start
size > 0
read failed, errno: %d
n == DESERIALIZER_SUCCESS
bad reply type: %d
connection closed
DESERIALIZER_BAD_DATA
deserialize failed
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IdentityServices_Sim/IdentityServices-1559/IDS/IDSXPCConnectionRemoteObjectPromise.m
IDSXPCConnectionRemoteObjectPromise can only be fulfilled once
XPC methods must have void return values {selector: %@}
interface
T@"NSXPCInterface",&,N,V_interface
pendingInvocations
T@"NSMutableArray",&,N,V_pendingInvocations
target
T@,&,N,V_target
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
accounts
T@"NSSet",R,N
com.apple.ids
FixedConferenceServerAddress
joinGroupSessionError
Cannot join a session that is already ended.
Cannot join a session without the participant data information.
v16@?0@"<IDSGroupSessionDelegate>"8
session-device-socket
error
TI,R,N,V_state
boostContext
T@,&,N,V_boostContext
kIDSGroupContextControllerPersistedToken
kIDSGroupContextControllerListenerID
v24@?0@"IDSGroupContextControllerContent"8@"NSError"16
v24@?0@"ENGroup"8@"NSError"16
v16@?0@"CUTAsyncReducerState"8
v16@?0@"CUTResult"8
v24@?0@"ENGroupContext"8@"NSError"16
v16@?0@"NSArray"8
v36@?0@"NSArray"8B16@"IDSCloudKitTransportLogChangeToken"20@"NSError"28
v16@?0@"ENGroup"8
T@"<IDSGroupContextControllerDelegate>",N,V_delegate
seal
T@"CUTPromiseSeal",&,N,V_seal
cloudKitContainer
T@"IDSCloudKitContainer",&,N,V_cloudKitContainer
groupContext
T@"ENGroupContext",&,N,V_groupContext
accountIdentity
T@"ENAccountIdentity",&,N,V_accountIdentity
FixedQuickRelayServerAddress
FixedQuickRelaySessionID
FixedQuickRelaySessionToken
FixedQuickRelaySessionKey
Warning, missing %@ to add to %s
sessionInfo
relayIP
T@"NSData",C,V_relayIP
relayIPv6
T@"NSData",C,V_relayIPv6
relayPort
T@"NSNumber",C,V_relayPort
relaySessionToken
T@"NSData",C,V_relaySessionToken
relaySessionKey
T@"NSData",C,V_relaySessionKey
relaySessionID
T@"NSData",C,V_relaySessionID
relayCombinedSoftwareID
T@"NSNumber",C,V_relayCombinedSoftwareID
appleID
T@"NSData",C,V_appleID
v16@?0@?<v@?>8
IDSConnection
whitelistedidsservices
IDSClientBringsUpCloudMessaging
IDSActivityContinuationIdentifier
IDSOpportunisticDuetIdentifier
q24@?0@"NSString"8@"NSString"16
OutgoingMessage
unknown type
SendToDaemon
Cannot send to empty destination set
Cannot send with an inactive account
Cannot send payload of this size
Invalid address: %@
protobuf
Could not find account uniqueID!
Cannot send empty message
URGENT
Default
Sync
message (dictionary)
Could not plist serialize dictionary or otherwise empty payload
data
v16@?0@"<IDSConnectionDelegate>"8
Unknown error
app-level ack
message
accessoryReportMessage
(unknown)
flush cache notification
pending
session invitation
group session participant update
group session participant data update
com.apple.private.alloy.appsyncconduit
com.apple.private.alloy.audiocontrol.music
com.apple.private.alloy.bluetooth.audio
com.apple.private.alloy.bluetoothregistry
com.apple.private.alloy.bluetoothregistry.cloud
com.apple.private.alloy.bluetoothregistryclassa
com.apple.private.alloy.bluetoothregistryclassc
com.apple.private.alloy.bulletindistributor
com.apple.private.alloy.bulletindistributor.settings
com.apple.private.alloy.camera.proxy
com.apple.private.alloy.cmsession
com.apple.private.alloy.continuity.activity
com.apple.private.alloy.continuity.auth
com.apple.private.alloy.continuity.auth.classa
com.apple.private.alloy.continuity.encryption
com.apple.private.alloy.continuity.tethering
com.apple.private.alloy.continuity.unlock
com.apple.private.alloy.coreduet
com.apple.private.alloy.ct.commcenter.p2w.settings
com.apple.private.alloy.findmylocaldevice
com.apple.private.alloy.idscredentials
com.apple.private.alloy.idsremoteurlconnection
com.apple.private.alloy.idstool.testservice.1
com.apple.private.alloy.idstool.testservice.2
com.apple.private.alloy.idstool.testservice.3
com.apple.private.alloy.idstool.testservice.4
com.apple.private.alloy.idstool.testservice.classAcloud
com.apple.private.alloy.idstool.testservice.classAoverC
com.apple.private.alloy.idstool.testservice.classC
com.apple.private.alloy.idstool.testservice.classD
com.apple.private.alloy.idstransfers
com.apple.private.alloy.location.auth
com.apple.private.alloy.location.motion
com.apple.private.alloy.location.stream
com.apple.private.alloy.location.usage
com.apple.private.alloy.maps.proxy
com.apple.private.alloy.mediaremote
com.apple.private.alloy.nsurlsessionproxy
com.apple.private.alloy.otaupdate
com.apple.private.alloy.pairedunlock
com.apple.private.alloy.phonecontinuity
com.apple.private.alloy.proxiedcrashcopier
com.apple.private.alloy.pushproxy
com.apple.private.alloy.remotemediaservices
com.apple.private.alloy.sharing.paireddevice
com.apple.private.alloy.siri.device
com.apple.private.alloy.siri.location
com.apple.private.alloy.siri.proxy
com.apple.private.alloy.sms.watch
com.apple.private.alloy.ssh
com.apple.private.alloy.sysdiagnose
com.apple.private.alloy.systemsettings
com.apple.private.alloy.tccd.msg
com.apple.private.alloy.tccd.sync
com.apple.private.alloy.timesync
com.apple.private.alloy.timezonesync
com.apple.private.alloy.willow.proxy
com.apple.private.alloy.wifi.networksync
com.apple.private.alloy.fmf
com.apple.identityservicesd.nsxpc.auth
connection
T@"NSXPCConnection",&,N,V_connection
groupContextDataSource
T@"<IDSGroupContextDataSourceDaemonProtocol>",R,N
groupContextCacheMiddleware
T@"<IDSGroupContextCacheMiddlewareDaemonProtocol>",R,N
observer
T@"IDSGroupContextNotifyingObserver",&,N,V_observer
v16@?0@"NSMutableSet"8
-[IDSQuickSwitchAcknowledgementTracker awaitAcknowledgementFromServiceDelegate:]
Registration
-[IDSQuickSwitchAcknowledgementTracker identifierForServiceDelegate:]
%@ (%p)
-[IDSQuickSwitchAcknowledgementTracker stopAwaitingAcknowledgementFromServiceDelegateWithIdentifier:]
-[IDSQuickSwitchAcknowledgementTracker stopAwaitingAcknowledgementFromAllServiceDelegates]
isAwaitingAcknowledgement
IDSLocalPairingAddPairedDevice
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IdentityServices_Sim/IdentityServices-1559/IDS/Client/IDSLocalPairing.m
void IDSLocalPairingAddPairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
cbuuid
v16@?0@"<IDSXPCPairing>"8
IDSLocalPairingAddPairedDeviceWithInfo
void IDSLocalPairingAddPairedDeviceWithInfo(IDSLocalPairingAddPairedDeviceInfo *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
info
IDSLocalPairingConnectPairedDevice
void IDSLocalPairingConnectPairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingSetupCompletedForPairedDevice
void IDSLocalPairingSetupCompletedForPairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingSwitchActivePairedDevice
void IDSLocalPairingSwitchActivePairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingDisconnectActivePairedDevice
void IDSLocalPairingDisconnectActivePairedDevice(__strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingRedeliverMessages
void IDSLocalPairingRedeliverMessages(IDSDevice *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
deviceUniqueID
IDSLocalPairingDeletePairedDevice
void IDSLocalPairingDeletePairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingUnpairStartForDevice
void IDSLocalPairingUnpairStartForDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingStopForDevice
void IDSLocalPairingStopForDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingUnpairForDevice
void IDSLocalPairingUnpairForDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingForgetPairedDevice
void IDSLocalPairingForgetPairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingGetPairingDevicesWithCompletionBlock
void IDSLocalPairingGetPairingDevicesWithCompletionBlock(__strong IDSLocalPairingPairedDevicesCompletionBlock, __strong dispatch_queue_t)
v24@?0@"NSArray"8@"NSError"16
IDSLocalPairingGetPairedDevicesWithCompletionBlock
void IDSLocalPairingGetPairedDevicesWithCompletionBlock(__strong IDSLocalPairingPairedDevicesCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingGetPairingRecordsWithCompletionBlock
void IDSLocalPairingGetPairingRecordsWithCompletionBlock(__strong IDSLocalPairingPairingRecordsCompletionBlock, __strong dispatch_queue_t)
v32@?0@"IDSLocalPairingLocalDeviceRecord"8@"NSDictionary"16@"NSError"24
IDSLocalPairingSetAllowedTrafficClassifiersForDevice
void IDSLocalPairingSetAllowedTrafficClassifiersForDevice(NSSet *__strong, IDSDevice *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
classifiers
IDSLocalPairingGetAllowedTrafficClassifiersForDevice
void IDSLocalPairingGetAllowedTrafficClassifiersForDevice(IDSDevice *__strong, __strong IDSLocalPairingTrafficClassifiersCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingDropAllMessagesWithoutAnyAllowedTrafficClassifier
void IDSLocalPairingDropAllMessagesWithoutAnyAllowedTrafficClassifier(IDSDevice *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingReunionSyncStartedForServices
void IDSLocalPairingReunionSyncStartedForServices(NSArray *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingReunionSyncCompletedForServices
void IDSLocalPairingReunionSyncCompletedForServices(NSArray *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
kcbuuid
kPairingProtocolVersion
kBTOutOfBandKey
kSupportsIPsecWithSPPLink
kBluetoothMACAddress
<%@: %p cbuuid: %@, pairingProtocolVersion: %ld, BTOutOfBandKey.length: %ld, supportsIPsecWithSPPLink: %ld, bluetoothMACAddress.length: %ld>
T@"NSUUID",R,N,V_cbuuid
pairingProtocolVersion
Tq,R,N,V_pairingProtocolVersion
BTOutOfBandKey
T@"NSData",R,N,V_BTOutOfBandKey
supportsIPsecWithSPPLink
TB,N,V_supportsIPsecWithSPPLink
bluetoothMACAddress
T@"NSData",&,N,V_bluetoothMACAddress
completionHandlerID
Socket open timed out
Cannot change priority when not connected
Could not set traffic class for underlying socket
Invalid priority level specified
Options dictionary contains no valid options
device-socket
metrics
Error: %@
%@_%@
T@"NSDictionary",R,N
inputStream
T@"NSInputStream",R,N
outputStream
T@"NSOutputStream",R,N
deserialize failed, bad magic number2
group name length is 0
group name is not 0-terminated
client blob size too big: %u
deserialize failed, bad magic number3
v16@?0@"<IDSAccountControllerDelegate>"8
@16@?0@8
v24@?0@8^B16
IDSAccountController-setupCompleteQueue
internalAccounts
enabledAccounts
IDSHardDeregister
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IdentityServices_Sim/IdentityServices-1559/IDS/Client/IDSRegistrationReset.m
IDSTriggerFinalDeregister
pairing
v24@?0@"<IDSXPCDaemon>"8@?<v@?@@"NSError">16
pairedDeviceManager
reunionSync
opportunistic
registration
internalTesting
v24@?0@8@"NSError"16
T@"IDSXPCConnection",&,N,V_connection
collaboratorPromiseDictionary
T@"NSMutableDictionary",&,N,V_collaboratorPromiseDictionary
syncCollaboratorDictionary
T@"NSMutableDictionary",&,N,V_syncCollaboratorDictionary
kIdentityData
kError
identityData
T@"NSData",&,N,V_identityData
T@"NSError",&,N,V_error
kIdentityDataMap
Missing identity for class-%@
protectionClassIdentityDataMap
T@"NSDictionary",&,N,V_protectionClassIdentityDataMap
kCBUUID
<%@: %p cbuuid: %@ classA: %@, errorClassA: %@, classC: %@, errorClassC: %@, classD: %@, errorClassD: %@>
<%@: %p classA: %@, errorClassA: %@, classC: %@, errorClassC: %@, classD: %@, errorClassD: %@>
%@: %p [Service: %@  User: %@  ID: %@  Type: %@  Active: %@  Registration Status: %@]
activeAliases
userUniqueIdentifier
T@"_IDSAccount",R,&,N
isEnabled
_isEnabled
TB,N,S_setIsEnabled:
isUsableForOuterMessaging
aliasesToRegister
T@"NSArray",R,N
aliases
aliasStrings
vettedAliases
handles
profileInfo
accountInfo
T@"NSDictionary",&,N
accountType
registrationStatus
registrationError
registrationAlertInfo
profileValidationStatus
Tq,R,N
profileValidationErrorReason
registeredURIs
accountRegisteredURIs
registrationCertificate
T@"NSData",R,N
dateRegistered
T@"NSDate",R,N
nextRegistrationDate
pushToken
regionServerContext
profileID
primaryServiceName
isUserDisabled
regionID
T@"NSString",&,N
regionBasePhoneNumber
displayName
loginID
T@"NSString",&,N,V_loginID
canSend
devices
nearbyDevices
IDSiCloudSignInHack
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IdentityServices_Sim/IdentityServices-1559/IDS/Client/IDSiCloudSignInHack.m
IDSiCloudSignOutHack
IDSKickGetDependent
IDSReRegister
IDSRepairAccounts
device:%@
guest-device:%@
No cloudID Provided
urn:ck:%@
Required Field Is Empty
A required Field Is Empty
ServiceUserID and AdminID can not be the same
com.apple.private.alloy.icloudpairing
com.apple.private.alloy.thumper.keys
B16@?0@8
inbox.appleid.apple.com
v16@?0@"<IDSAccountDelegate>"8
next-registration-date
registration-date
uris
@16@?0@"NSString"8
ids-registration-cert
push-token
<%p:%@:%@:%@:%@:%@:%@>
v16@?0@"<IDSAccountRegistrationDelegate>"8
pushTopic
isInTransientRegistrationState
isTransientWhitelistedAccount
suppressedDevices
T@"NSArray",R,W,N
T@"NSData",R,W,N
T@"NSDate",R,W,N
T@"NSDictionary",R,W,N
T@"NSString",R,W,N
B24@?0@"IDSAccount"8^B16
T@"_IDSService",R,N
T@"NSSet",R,C,N
T@"NSArray",R,C,N
LinkType
PacketsPerSecond
InputBytesPerSecond
OutputBytesPerSecond
Intent
Timestamp
IDSAppleCareSignIDSIn
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IdentityServices_Sim/IdentityServices-1559/IDS/Client/IDSAppleCareSignIn.m
IDSAppleCareSignIDSOut
IDSAppleCareSetDaemonDisconnectedBlock
com.apple.registration
saveviewRegTimeout
IDSiCloudSignIn
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IdentityServices_Sim/IdentityServices-1559/IDS/Client/IDSiCloudSignIn.m
IDSiCloudSignOut
IDSiCloudUpdate
IDSiCloudModify
IDSiTunesSignIn
IDSiTunesSignOut
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IdentityServices_Sim/IdentityServices-1559/IDS/Client/IDSDaemonRequestTimer.m
The request context map should be empty after canceling all countdowns.
%@-idswake
v24@?0@"NSObject<OS_xpc_object>"8@"NSObject<OS_xpc_object>"16
_IDSService
IDSSimulatorSupportRegisterDataHandler
v32@?0@"NSString"8@"NSData"16@"NSString"24
Couldn't soft link IDSSimulatorSupportRegisterDataHandler(). Just failing here
IDSSimulatorSupportUnregisterDataHandler
Couldn't soft link IDSSimulatorSupportUnregisterDataHandler(). Just failing here
Failed to deserialize data %p. error: %@
options
senderDeviceID
pbType
pbIsResponse
Failed to create IDSProtobuf from data %p
fileData
fileName
fileAttrs
Failed to create staging directory at %@ from data %p:%@
Failed to write file data to %@ from data %@: %@
Failed to set file attributes for %@ to %@ from data %p: %@
ackedMsgID
ackedSubService
v16@?0@"<IDSServiceDelegate>"8
IDSSimulatorSupportSendDataWithOptions
Failed to to archive ack dict %@ for message %@ on service %@ subservice %@
Failed to send ack for message %@ on service %@ subservice %@
v36@?0B8@"NSString"12@"NSError"20@"NSDictionary"28
Couldn't soft link IDSSimulatorSupportSendData(). Just failing here
v32@?0@8@"IDSConnection"16^B24
v16@?0@"<IDSServiceDelegatePrivate>"8
v16@?0@"NSString"8
v12@?0B8
v32@?0@"NSString"8@"IDSConnection"16^B24
/Library/IdentityServices/files/
/Library/IdentityServices/incomingfiles/
v16@?0q8
service:account:fromID:context:
IDSIncomingMessageDecryptedData
v36@?0@"NSData"8@"ENGroup"16@"NSError"24B32
com.apple.private.alloy.maps.eta
com.apple.private.alloy.nearby
com.apple.private.alloy.willow
B16@?0@"IDSAccount"8
q24@?0@"IDSAccount"8@"IDSAccount"16
device:
Failed to delete file at %@ after sending
simID
originalSimDestination
IDSSimulatorSupportGetCurrentConnectedSimulatorID
Out of space
Could not find valid account
Sending non-file resource unsupported
Unable to link or copy file
resourceTransferMessageDict
com.apple.identityservices.send
Destination device is not active for this account
v24@?0@"NSData"8@"NSError"16
Unable to create stream connection with destination
Unable to create datagram channel with destination
Unable to create datagram channel with socket descriptor
groupContextController
T@"IDSGroupContextController",R,&,N,V_groupContextController
iCloudAccount
serviceDomain
T@"NSString",R,C,N
pretendingToBeFull
TB,N,GisPretendingToBeFull
manuallyAckMessages
TB,N,V_manuallyAckMessages
IDSSimulatorSupportErrorDomain
IDSSimulatorSupportOptionSetMessageIdentifier
_idsSimulatorSupportOptionsFromIDSSendOptions()
Failed to decode data of %lu bytes to a uuid string
.XXXX
IDSTransactionLogMessageAccountUniqueIDKey
IDSTransactionLogMessageFromIDKey
IDSTransactionLogMessageLoginIDKey
IDSTransactionLogMessageServiceNameKey
IDSTransactionLogMessageDictionaryValueKey
IDSTransactionLogMessageDataValueKey
fromID
T@"NSString",R,N,V_fromID
T@"NSString",R,N,V_loginID
accountUniqueID
T@"NSString",R,N,V_accountUniqueID
T@"NSString",R,N,V_serviceName
dataValue
T@"NSData",R,N,V_dataValue
dictionaryValue
T@"NSDictionary",R,N,V_dictionaryValue
com.apple.springboard
service-cache-request
transactionID
is-springboard
cache
cached-id-status-query
id-status-query
force
remote-device-status-query
IDSPhoneSubscriptionSelectorErrorDomain
subSlot
<%@: %p; slot: %d>
subscriptionSlot
Tq,R,N,V_subscriptionSlot
@"IDSXPCDaemonController"16@?0@"NSObject<OS_dispatch_queue>"8
-[IDSPhoneSubscriptionSelector requestSelectedSubscriptionsWithCompletion:]
v16@?0@"<IDSXPCRegistration>"8
-[IDSPhoneSubscriptionSelector selectSubscription:withCompletion:]
Subscription info is nil
-[IDSPhoneSubscriptionSelector unselectSubscription:withCompletion:]
-[IDSPhoneSubscriptionSelector setSelectedSubscriptions:withCompletion:]
Subscription infos is nil
v24@?0@"<IDSXPCRegistration>"8@"NSError"16
-[IDSPhoneSubscriptionSelector selectSubscription:withError:]
-[IDSPhoneSubscriptionSelector unselectSubscription:withError:]
-[IDSPhoneSubscriptionSelector setSelectedSubscriptions:withError:]
syncDaemonController
T@"IDSXPCDaemonController",&,N,V_syncDaemonController
syncDaemonControllerBuilder
T@?,C,N,V_syncDaemonControllerBuilder
Unknown account type
Unknown service
Empty user name
Empty service name
Process not entitled
Component disconnected
Component crashed
Remote user isn't registered
Attachment send failed
Encryption failed
Message send failed
Invalid caller id
Payload is too big to send
Unknown exception
Timed out
The destination device for this message was not connected before the timeout fired
Replaced
Device Unpaired
Bluetooth required
No space
Cannot read resource
Data protection class unavailable
Database filled up
Revision lock forced failure
Service version not compatible
Destination device is no longer the active device
Destination device for this message was inactive for an extended period
A over C encryption is not available at this time
Class A encryption keys are not available at this time
No error
Invalid state
Operation failed
com.apple.Transport
IDSService
QRAllocator
IDSDeviceConnection
IDSDataChannels
IDSLocalSetup
IDSReportSpam
NRPairing
T@"NSObject<OS_os_log>",R
com.apple.IDS
transactionLog
DaemonController
DaemonListener
Connection
continuity
IDSSession
_IDSGroupSession
_IDSGroupSession-oversize
DaemonProxy
GUIDTRACE
Accounts
IDSAccountController
IDSDevice
ServiceAvailability
IDSRealTimeEncryptionProxy
IDQuery
_IDSSession
general
_IDSGroupSession_oversize
IDSXPCConnectionErrorDomain
IDSXPCConnectionTransactionUUID
Missing entitlement "%@"
v32@?0@"NSUUID"8@?<v@?>16^B24
pendingTransactions
T@"NSMutableDictionary",&,N,V_pendingTransactions
rootConnection
T@"IDSXPCConnection",&,N,V_rootConnection
T@"<NSXPCProxyCreating>",&,N,V_remoteObject
invalidationHandler
T@?,C,N,V_invalidationHandler
forSyncMessaging
TB,N,V_forSyncMessaging
Timed-out expecting response for @selector(%@)
timeout
Td,N,V_timeout
errorHandler
T@?,C,N,V_errorHandler
%@-%@
com.apple._IDSDevice.notification
v20@?0i8Q12
[%@ %p:   Name: %@   Model: %@   UniqueID: %@   UniqueID Override: %@   Push Token: %@   Service: %@   Handles: %@   linkedUserURIs: %@   nsuuid: %@    supportsSMSRelay: %@   supportsMMSRelay: %@   supportsPhoneCalls: %@   deviceColor: %@   enclosureColor: %@  local: %@   defaultPairedDevice: %@   isNearby: %@  isConnected: %@  isCloudConnected: %@  isActive: %@  isLocallyPaired: %@  build: %@   pairing protocol: %lu   min compatibility version: %lu   max compatibility version: %lu]
[%@ %p:   Name: %@    Model: %@   UniqueID: %@   UniqueID Override: %@   Push Token: %@   Service: %@   nsuuid: %@    supportsSMSRelay: %@   supportsMMSRelay: %@   supportsPhoneCalls: %@   deviceColor: %@   enclosureColor: %@  local: %@   defaultPairedDevice: %@   isNearby: %@  isConnected: %@  isActive: %@  isLocallyPaired: %@  isHSATrusted: %@  build: %@   pairing protocol: %lu   min compatibility version: %lu   max compatibility version: %lu]
all 0s
modelIdentifier
productName
productVersion
productBuildVersion
name
nearby
TB,R,N,GisNearby
connected
TB,R,N,GisConnected
cloudConnected
TB,R,N,GisCloudConnected
locallyPresent
isDefaultPairedDevice
isLocallyPaired
minCompatibilityVersion
maxCompatibilityVersion
serviceMinCompatibilityVersion
supportsiCloudPairing
supportsTethering
supportsHandoff
supportsApplePay
identities
nsuuid
T@"NSUUID",&,N,SsetNSUUID:
supportsSMSRelay
supportsMMSRelay
supportsPhoneCalls
deviceColor
enclosureColor
linkedUserURIs
isHSATrusted
lastActivityDate
uniqueIDOverride
_IDSIDQueryControllerConnectionQueue
_IDSIDQueryControllerQueue
set-id-status
v40@?0@"NSDictionary"8@"NSString"16@"NSString"24@"NSError"32
isCloudConnected
operatingSystemVersion
T{?=qqq},R,N
T@"IDSDestination",R,N
event-type
connected-link
disconnected-link
disconnected-link-ids
disconnected-link-uuids
rat-changed
default-link
default-link-id
rssi-key
preconnection-data-key
mtu-changed
info-report-events-key
error-key
encryption-info-key
membership-changed-reason-key
stat-response-key
session-info-response-key
probing-response-key
debug-data-type-key
debug-data-key
preference-default-link-selection
preference-baseband-registration
preference-baseband-queue-flush-payload
preference-baseband-queue-flush
preference-pre-connection-data
preference-wait-for-pre-connection-data
preference-update-qos
preference-update-qos-is-good
preference-discard-link-ids
preference-query-information
preference-max-bitrate
preference-needs-encryption-info
preference-needs-force-update-encryption-info
preference-set-debugdata-type-key
preference-set-debugdata-key
baseband-registration-key
baseband-notification-operation-key
max-bitrate-key
<LinkContext %p> linkID %d (UUID:%@, QRSessionID:%@) networkType %u connectionType %ld maxMTU %u RATType %lu maxBitrate %u (remote networkType %u connectionType %ld RATType %lu), relay(provider:%d, token:%dB) serverIsDegraded: %@ localLinkFlags 0x%x remoteLinkFlags 0x%x
linkID
Tc,R
linkUUID
T@"NSUUID",R
QRSessionID
networkType
TC,R
connectionType
RATType
TI,R
maxMTU
TS,R
relayServerProvider
T@"NSData",R
remoteNetworkType
remoteConnectionType
remoteRATType
maxBitrate
serverIsDegraded
localLinkFlags
remoteLinkFlags
DatagramChannelFunctionalLogging
IDSRealTime
%@%u
<%p> channelFD %d connected %@ eventHandler %p readHandler %p withOptions %p auto %@
<%p> socket %d connected %@ eventHandler %p readHandler %p withOptions %p connetion %@
<%p> socket %d connected %@ eventHandler %p readHandler %p withOptions %p
_internal->_MKIArrivalTime
IDSFoundation
got CT(packet counting) option
kClientChannelMetadataType_CountPacketKey  should be 1 byte, not %u bytes, field: %u
kClientChannelMetadataType_GenerationCounterLSBKey should be 1 byte, not %u bytes, field: %u
got probeGroupID %u
kClientChannelMetadataType_ProbeGroupIDKey should be 2 bytes, not %u bytes, field: %u
IDS couldn't receive the response for the session info request.
read sanity check failed: datagramSize %ld metadataSize %ld dataOffset %ld
v24@?0^@8I16i20
-[IDSDatagramChannel start]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IdentityServices_Sim/IdentityServices-1559/IDS/Client/IDSDataChannels.m
_internal->_readHandler
_internal->_eventHandler
v20@?0i8@"NSObject<OS_nw_error>"12
Failed to send write bytes (%d)
v16@?0@"NSObject<OS_nw_error>"8
No connection
Failed to send all bytes (%d < %d)
Connection terminated
Failed to send (errno %d)
-[IDSDatagramChannel readyToRead]
Could not serialize provided metadata.
The serialized metadata was greater than the max slot size allowed to send over the channel
_internal->_firstPacketArrivalTimeForMKI
connectedLinks
T@"NSArray",R
defaultLink
T@"IDSDataChannelLinkContext",R
IDSDataChannelsQueue
Unable to create input and output stream
v20@?0i8@"NSError"12
T@"_IDSDeviceConnection",R,N
FTPasswordManager
IDSGetServiceUserIDsWithCompletionBlock
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IdentityServices_Sim/IdentityServices-1559/IDS/Client/IDSHomeKit.m
IDSGetAdminAccessTokensWithCompletionBlock
IDSGetConsentTokensWithCompletionBlock
IDSGetUserAccessTokensWithCompletionBlock
IDSRefreshUserAccessTokensWithCompletionBlock
IDSIDQueryControllerQueue
v16@?0@"<IDSContinuityDelegate>"8
Tq,R,V_state
nbuffer_append
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IdentityServices_Sim/IdentityServices-1559/IDS/Client/IDSNBuffer.c
nbuffer_get_free_space(buf) >= size
nbuffer_ensure_freespace
v16@?0@"<IDSSessionDelegate>"8
Error creating socketpair
Error getting socket flags from socketFD[0]
Error setting O_NONBLOCK flag on socketFD[0]
Error getting socket flags from socketFD[1]
Error setting O_NONBLOCK flag on socketFD[1]
Error setting SO_NOSIGPIPE on socketFD[0]
Error setting SO_NOSIGPIPE on socketFD[1]
Error setting SO_SNDBUF size on socketFD[0]
Error setting SO_SNDBUF size on socketFD[1]
Error setting SO_RCVBUF size on socketFD[0]
Error setting SO_RCVBUF size on socketFD[1]
session-socket
socket-type
raw-socket
session-initial-link-type
initialLinkType
TQ,R,N,V_initialLinkType
inviteTimeout
v20@?0@"NSArray"8B16
v20@?0B8@"NSError"12
IDSInternalQueue
IDSInternalQueueControllerContext
com.apple.identityservices.error
TTLItem
batch-query-limit
batch-query-time-limit
batch-query-use-death-timer
batch-query-time-to-live
batch-query-interval
batch-query-first-interval
batch-query-size
batch-query-max
__kIDSServiceMonitorAvailabilityDidChangeNotification
kiMessageChangedNotification
kFaceTimeChangedNotification
kCallingChangedNotification
kScreenSharingChangedNotification
T@"ENAccountIdentity",R,N,V_accountIdentity
aliasToAccountsMap
T@"NSDictionary",R,N,V_aliasToAccountsMap
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IdentityServices_Sim/IdentityServices-1559/IDS/IDSTransactionLogTaskHandler.m
Unexpected task type
Abstract method
task
T@"IDSTransactionLogTask",&,N,V_task
v24@?0@"IDSCloudKitTransportLogChangeToken"8@"NSError"16
v24@?0q8@"NSError"16
v36@?0@"NSArray"8@"IDSCloudKitTransportLogChangeToken"16B24@"NSError"28
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v24@?0@"IDSTransactionLogTaskHandlerAccountInfo"8@"NSError"16
Invalid parameter not satisfying: %@
_delegate
syncTask
T@"IDSTransactionLogSyncTask",&,N,V_syncTask
T@"<IDSTransactionLogTaskHandlerDelegate>",W,N,V_delegate
@(#)PROGRAM:IDS  PROJECT:IDS-
IDSContinuity
IDSDaemonProtocol
NSObject
IDSDaemonController
IDSDaemonControllerForwarder
IDSXPCInternalTesting
IDSXPCInternalTestingInterface
IDSXPCReunionSync
IDSXPCReunionSyncInterface
IDSGroupSession
IDSXPCRegistration
IDSXPCRegistrationInterface
IDSServiceAvailabilityController
IDSServiceContainer
IDSDaemonListenerProtocol
IDSDaemonListener
_IDSRealTimeEncryptionProxy
IDSGroupContextNotifyingObserver
IDSGroupContextObserverDaemonProtocol
IDSSignInServiceUserInfo
IDSSignInServiceUserStatus
IDSSignInControllerAccountDescription
IDSSignInController
IDSAccountRegistrationDelegate
IDSAccountControllerDelegate
FaceTimeSupport
IDSSession
IDSCT
IDSAppleCareDaemonResponseListener
IDSBatchIDQueryController
IDSConnection
Deprecated
IDSXPCPairing
IDSXPCPairingInterface
IDSDaemonResponseHandler
IDSTransactionLogTask
IDSTransactionLogSyncTask
_IDSPasswordManager
IDSGroupSessionUnicastParameter
NSSecureCoding
NSCoding
IDSXPCDaemon
IDSXPCDaemonInterface
IDSXPCDaemonClient
IDSXPCDaemonClientInterface
_IDSCompletionHandler
IDSPairedDeviceManager
IDSCarrierTokenRequestParameters
IDSCarrierToken
IDSAuthenticationCertificateSignature
IDSAuthenticationSigningResult
IDSPhoneCertificateVendor
IDSRegistrationControlDaemonResponseListener
IDSXPCConnectionRemoteObjectPromise
IDSAccountController
_IDSGroupSession
IDSBaseSocketPairConnectionDelegate
IDSGroupContextController
IDSTransactionLogTaskHandlerDelegate
IDSGroupContextNotifyingObserverDelegate
IDSGroupContextControllerContent
IDSQuickRelayFixedTokenAllocator
_IDSConnection
IDSAccountDelegate
IDSGroupContextDaemonProtocol
IDSGroupContextDataSourceDaemonProtocol
IDSGroupContextCacheMiddlewareDaemonProtocol
IDSDaemonProtocolController
IDSQuickSwitchAcknowledgementTracker
IDSLocalPairingAddPairedDeviceInfo
_IDSDeviceConnectionActiveMap
_IDSDeviceConnection
_IDSAccountController
IDSXPCDaemonController
IDSLocalPairingIdentityDataErrorPair
IDSLocalPairingRecord
IDSLocalPairingPairedDeviceRecord
IDSLocalPairingLocalDeviceRecord
IDSAccount
_IDSGenericCompletionHandler
IDSHomeKitManager
IDSReportiMessageSpamDaemonResponseListener
_IDSAccount
IDSXPCPairedDeviceManager
IDSXPCPairedDeviceManagerInterface
IDSService
IDSDaemonRequestContext
IDSDaemonRequestTimer
IDSAutoCleanup
_IDSService
IDSGroupContextControllerDelegate
IDSConnectionDelegatePrivate
IDSConnectionDelegate
IDSTransactionLogMessage
IDSTransactionLogDataMessage
IDSTransactionLogDictionaryMessage
IDSPhoneSubscription
NSCopying
IDSPhoneSubscriptionSelector
IDSTransportLog
IDSLogging
IDSXPCConnection
NSXPCConnectionDelegate
IDSXPCConnectionTimeoutProxy
_IDSDevice
_IDSIDQueryController
IDSXPCOpportunistic
IDSXPCOpportunisticInterface
IDSDevice
_IDSDataChannelLinkContext
IDSDataChannelLinkContext
_IDSDatagramChannel
IDSDatagramChannel
IDSDeviceConnection
IDSIDQueryController
_IDSContinuity
_IDSSession
Additions
IDSGroupContextDataSource
ENGroupContextDataSource
ENGroupContextCacheMiddleware
ENGroupContextMiddleware
IDSInternalQueueController
_IDSBatchIDQueryController
IDSIDQueryControllerDelegate
IDSRealTimeEncryptionProxy
IDSServiceMonitor
IDSTransactionLogTaskHandlerAccountInfo
IDSTransactionLogTaskHandler
IDSTransactionLogBaseTaskHandler
IDSTransactionLogSyncTaskHandler
sharedInstance
assertQueueIsNotCurrent
init
initWithDelegate:queue:delegateContext:
performBlock:
performBlock:waitUntilDone:
dealloc
state
startAdvertisingOfType:withData:withOptions:
stopAdvertisingOfType:
startScanningForType:withData:mask:peers:withOptions:
startScanningForType:withData:mask:withOptions:
startScanningForType:withData:mask:peers:
startScanningForType:withData:mask:
startScanningForType:withData:mask:peers:withOptions:boostedScan:duplicates:
startScanningForType:withData:mask:withOptions:boostedScan:duplicates:
startScanningForType:withData:mask:peers:boostedScan:duplicates:
startScanningForType:withData:mask:boostedScan:duplicates:
stopScanningForType:
initWithDelegate:queue:
startScanningForType:withData:peers:withOptions:
startScanningForType:withData:withOptions:
startScanningForType:withData:mask:peers:withOptions:boostedScan:
startScanningForType:withData:mask:withOptions:boostedScan:
connectToPeer:
disconnectFromPeer:
startTrackingPeer:
stopTrackingPeer:
startTrackingPeer:forType:
stopTrackingPeer:forType:
.cxx_destruct
_internal
continuity
_performBlock:wait:
_setAutoReconnect:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
setupAccountWithLoginID:serviceName:accountType:accountConfig:authToken:password:transactionID:
addAccountWithLoginID:serviceName:uniqueID:accountType:accountInfo:
_removeAccount:
_removeAndDeregisterAccount:
updateAccount:withAccountInfo:
enableAccount:
disableAccount:
authTokenChanged:forAccount:
passwordChanged:forAccount:
authenticationChangedForAccount:
authenticateAccount:
passwordUpdatedForAccount:
updateAuthorizationCredentials:token:forAccount:
validateProfileForAccount:
addAliases:toAccount:
removeAliases:fromAccount:
validateAliases:forAccount:
unvalidateAliases:forAccount:
activateAlias:onAccount:
deactivateAlias:onAccount:
registerAccount:
unregisterAccount:
_reregisterAndReidentify:account:
deactivateAndPurgeIdentifyForAccount:
hardDeregister
triggerFinalDeregister
iCloudSignInHackWithUserName:password:
iCloudSignOutHack
iCloudSignInWithUserName:authToken:password:accountInfo:accountStatus:handles:
iCloudUpdateForUserName:accountInfo:
iCloudModifyForUserName:
iCloudSignOut
iTunesSignInWithUserName:authToken:password:accountInfo:accountStatus:handles:
iTunesSignOut
updateUserWithOldUserName:newUserName:
kickGetDependentForAccount:
reRegisterWithUserID:action:service:
repairAccounts
getRegisteredIdentities
setPassword:forUsername:onService:
authenticatePhoneWithRequestUUID:
generatePhoneAuthenticationSignatureOverData:withRequestUUID:
requestCarrierTokenForSubscriptionSource:IMEI:carrierNonce:requestUUID:
setPhoneUserSubscriptionSource:withRequestUUID:
fetchPhoneUserSubscriptionSourceWithRequestUUID:
startLocalSetup
stopLocalSetup
localSetupUnpair
localSetupUnpairStart
localSetupCompleted
addPairedDevice:
connectPairedDevice:
deletePairedDevice:
getDeliveryStats
initialLocalSyncStartedForServices:
initialLocalSyncCompletedForServices:
setAllowedTrafficClasses:
dropAllMessagesWithoutAnyAllowedClassifier
reunionSyncStartedForServices:requestID:
reunionSyncCompletedForServices:requestID:
updateSubServices:forService:deviceUniqueID:
setPairedDeviceInfo:
incomingAccountSyncMessage:
regenerateRegisteredIdentity
sendOpportunisticData:onService:usingAccountWithUniqueID:withIdentifier:options:
cancelOpportunisticDataOnService:withIdentifier:
sendCertifiedDeliveryReceipt:serviceName:
sendMessageWithSendParameters:
cancelItemWithIdentifier:service:
getProgressUpdateForIdentifier:service:
sendPersistedFile:userInfo:toDestinations:usingAccountWithUniqueID:identifier:
sendServerMessage:command:usingAccountWithUniqueID:
setPreferInfraWiFi:service:
setLinkPreferences:service:
startOTRTest:priority:
testCloudQRConnection:
failedDecryptingMessage:reason:forGroupID:onService:
acknowledgeOutgoingMessageWithGUID:alternateCallbackID:forAccountWithUniqueID:
acknowledgeMessageWithGUID:forAccountWithUniqueID:broadcastTime:messageSize:priority:
acknowledgeMessageWithStorageGUID:realGUID:forAccountWithUniqueID:broadcastTime:messageSize:priority:broadcastID:connectionType:
sendAppAckWithGUID:toDestination:forAccountWithUniqueID:connectionType:
setListenerServices:commands:capabilities:
registerForNotificationsOnServices:
xpcObject:objectContext:
openSocketWithOptions:
closeSocketWithOptions:
setNSUUID:onDeviceWithUniqueID:forService:
setupNewSessionWithConfiguration:
cleanupSession:
cleanupSessionWithInstanceID:
sendInvitation:withOptions:
sendInvitation:withData:declineOnError:
cancelInvitation:
cancelInvitation:withData:
cancelInvitation:withRemoteEndedReasonOverride:
acceptInvitation:
acceptInvitation:withData:
declineInvitation:
declineInvitation:withData:
reconnectSessionWithUniqueID:
endSession:
endSession:withData:
sendSessionMessage:toDestinations:forSessionWithUniqueID:
setAudioEnabled:forSessionWithUniqueID:
setMuted:forSessionWithUniqueID:
setPreferences:forSessionWithUniqueID:
setInviteTimetout:forSessionWithUniqueID:
acknowledgeSessionID:clientID:
sendAllocationRequest:options:
updateMembers:forGroup:sessionID:withContext:triggeredLocally:
updateParticipantData:forGroup:sessionID:withContext:
joinGroupSession:withOptions:
leaveGroupSession:participantInfo:
requestActiveParticipantsForGroupSession:
setupRealtimeEncryptionController:forAccountWithID:
sendRealTimeMediaPrekey:toGroup:
requestPublicKeysForRealTimeEncryption:forAccountWithID:
sendRealTimeEncryptionMasterKeyMaterial:toGroup:
sendRealTimeEncryptionMKMRecoveryRequest:toGroup:
requestRealTimeEncryptionMasterKeyMaterial:forGroup:
resetRealTimeEncryptionKeys:forGroup:
continuityClientInstanceCreated
continuityStartAdvertisingOfType:withData:withOptions:
continuityStopAdvertisingOfType:
continuityStartScanningForType:withData:mask:
continuityStartScanningForType:withData:mask:peers:
continuityStartScanningForType:withData:mask:boostedScan:duplicates:
continuityStartScanningForType:withData:mask:peers:boostedScan:duplicates:
continuityStopScanningForType:
continuityConnectToPeer:
continuityDisconnectFromPeer:
continuityStartTrackingPeer:forType:
continuityStopTrackingPeer:forType:
reportiMessageSpam:toURI:
reportiMessageUnknownSender:messageID:messageServerTimestamp:toURI:
reportiMessageSpamCheckUnknown:count:requestID:
homeKitGetServiceUserIDs
homeKitGetAdminAccessTokensWithServiceUserID:accessoryID:pairingToken:
homeKitGetConsentTokensWithServiceUserID:accessoryIDs:adminID:
homeKitGetUserAccessTokensWithServiceUserID:userID:userHandle:accessoryRequests:
homeKitRefreshUserAccessTokensWithServiceUserID:userID:accessoryRequests:
appleCareSignInUserName:DSID:authToken:requestID:
appleCareSignOutUserWithRequestID:
registrationControlSetRegistrationStateForRegistrationType:toState:requestID:
registrationControlGetRegistrationStateForRegistrationType:requestID:
initWithProtocol:
initWithProtocol:ivarQueue:remoteMessageQueue:
length
stringGUID
copy
removeListener:
defaultCenter
removeObserver:name:object:
_localObjectCleanup
_remoteObjectCleanup
isNonUIInstall
_blockUntilSendQueueIsEmpty
services
commands
capabilities
_connectToDaemonWithLaunch:services:commands:capabilities:
connectToDaemonWithLaunch:
_setServices:
_setCommands:
_setCapabilities:
containsObject:
registration
count
setByAddingObjectsFromSet:
unionSet:
enumerateKeysAndObjectsUsingBlock:
isEqualToSet:
unsignedIntValue
assertQueueIsCurrent
connectToDaemonWithLaunch:services:commands:capabilities:
disconnectFromDaemon
addObject:
forwarderWithCompletion:
setWithObject:
hasListenerForID:
setServices:forListenerID:
setCommands:forListenerID:
setObject:forKey:
numberWithUnsignedInt:
_listenerSetUpdated
addListenerID:services:commands:
objectForKey:
numberWithUnsignedInteger:
removeObjectForKey:
_performBlock:
servicesForListenerID:
commandsForListenerID:
capabilitiesForListenerID:
numberWithInt:
isValid
listener
isSetupComplete
_noteDisconnected
setTarget:
invalidate
_disconnectFromDaemonWithForce:
connectToDaemon
systemIsShuttingDown
_autoReconnect
defaultBroadcaster
broadcastProxyForTarget:messageContext:protocol:
sendXPCObject:
initWithProtocol:ivarQueue:remoteMessageQueue:completion:
isQueueCurrent
curXPCMessagePriority
setPriority:
setCurXPCMessagePriority:
_applicationWillTerminate
_setApplicationWillTerminate
_handleDaemonException:
_makeConnectionWithLaunch:completionBlock:
_setServices:commands:capabilities:
addedDelegateForService:withCompletion:
addListenerID:services:
removeListenerID:
setCapabilities:forListenerID:shouldLog:
listenerID
isConnecting
isConnected
blockUntilConnected
_noteSetupComplete
remoteObjectExists
localObjectExists
localObject
_agentDidLaunchNotification:
localObjectDiedNotification:
remoteObjectDiedNotification:
sendXPCObject:objectContext:
forwardingTargetForSelector:
systemApplicationDidSuspend
systemApplicationDidEnterBackground
systemApplicationWillEnterForeground
systemApplicationDidResume
_remoteMessageQueue
delegate
setDelegate:
remoteObject
setRemoteObject:
_delegate
_remoteObject
_forwarder
_localObject
_daemonListener
_protocol
_listenerID
_ivarQueue
_daemonConnectedGroup
_connectionID
_listenerServices
_services
_cachedServices
_listenerCommands
_commands
_cachedCommands
_listenerCapabilities
_cachedCapabilities
_lastUpdateCaps
_hasCheckedForDaemon
_preventReconnect
_acquiringDaemonConnection
_hasBeenSuspended
_fatalErrorOccured
_curXPCMessagePriority
_notificationServices
_imMethodSignatureForSelector:
processInfo
processName
isEqualToString:
broadcastProxyForTarget:messageContext:protocol:priority:completion:
invokeWithTarget:
retainArguments
methodSignatureForSelector:
forwardInvocation:
protocol
completion
ivarQueue
remoteMessageQueue
priority
_completion
_priority
DaemonController
oneToOneECCQuicktestEncryptionWithData:completion:
registeredIdentityTimestampsWithBlock:
triggerKeyRollWithCompletion:
setForceKeyRoll:withCompletion:
currentECVersionWithBlock:
setECVersion:withCompletion:
checkServerStorageForService:withCompletion:
tapToRadarWithTitle:message:completion:
autoBugCaptureWithCompletion:
fetchEndpointCacheStateForServiceIdentifier:localURI:remoteURI:completion:
fetchTransparentEndpointsForServiceIdentifier:localURI:remoteURI:verifyAgainstTrustCircle:completion:
performOutstandingKeyTransparencyVerificationWithCompletion:
kickVerificationForServiceIdentifier:localURI:remoteURI:completion:
fetchVerifierTrustedDevicesWithCompletion:
fetchVerifierCloudKitTrustedDevicesWithCompletion:
fetchVerifierAccountKeyTrustedDevicesWithCompletion:
fetchVerifierAccountKeyPublicDataWithCompletion:
fetchCloudKitTransparencyStateWithCompletion:
nukeCloudKitTransparencyStateWithCompletion:
nukeTransparencyStateWithCompletion:
removeConnectionWithConnectionName:completionHandler:
fetchStoredUserDescriptions:
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
interface
reunionSyncStartedForServices:withCompletion:
reunionSyncCompletedForServices:withCompletion:
NRPairing
deletePairedDevice:withCompletionBlock:queue:
initWithObjects:
getPairedDeviceInfoWithCompletionBlock:queue:
getDeliveryStatsWithCompletionBlock:queue:
accountSync
isDefaultPairedDevice
setAllowedTrafficClassifiers:
allowedTrafficClassifiers
IDSLocalSetup
initWithAccount:destinations:options:delegateContext:
objectForKeyedSubscript:
setWithArray:
_IDSGroupSession
uniqueID
stringByAppendingString:
sessionEndedReason
_internal_sessionWithValidityCheck
setDelegate:queue:
updateMembers:withContext:triggeredLocally:
updateParticipantData:withContext:
setParticipantInfo:
joinWithOptions:
leaveGroupSession
setPreferences:
requestActiveParticipants
initWithGroupSessionID:participantID:dataMode:connectionIndex:
initWithAccount:destinations:options:
initWithAccount:options:
sessionID
destination
unicastParameterForParticipantID:dataMode:connectionIndex:
requestSelectedSubscriptionsWithCompletion:
selectSubscription:withCompletion:
unselectSubscription:withCompletion:
setSelectedSubscriptions:withCompletion:
constructRAResponseDictionaryForServices:completionHandler:
IDSReportSpam
initWithDomain:code:userInfo:
initWithBlock:queue:
scheduleTimeoutWithResponseHandler:timeoutInterval:timeoutBlock:
initWithRequestTimer:
addHandler:
initWithInteger:
initWithObjectsAndKeys:
__mainThreadPostNotificationName:object:userInfo:
object
userInfo
service
integerValue
_postNotificationForService:availability:
_handleServiceMonitorNotification:
addObserver:selector:name:object:
_isValidServiceType:
initWithService:
monitor
_startListeningToMonitor:
containerForService:create:
hasListenerID:
addListenerID:
listeners
_stopListeningToMonitor:
serviceAvailability
hasListenerID:forService:
addListenerID:forService:
removeListenerID:forService:
availabilityForListenerID:forService:
_availabilityHandlers
removeObject:
setMonitor:
_monitor
_listeners
ServiceAvailability
stringWithFormat:
UTF8String
initWithQueueController:ivarQueue:
connectionComplete:
setupCompleteWithInfo:
daemonConnected
daemonDisconnected
opportunisticDataReceived:withIdentifier:fromID:context:
messageReceived:withGUID:withPayload:forTopic:toIdentifier:fromID:context:
dataReceived:withGUID:forTopic:toIdentifier:fromID:context:
accessoryDataReceived:withGUID:forTopic:toIdentifier:fromID:context:
accessoryReportMessageReceived:accessoryID:controllerID:withGUID:forTopic:toIdentifier:fromID:context:
messageIdentifier:alternateCallbackID:forAccount:updatedWithResponseCode:error:lastCall:context:
messageIdentifier:alternateCallbackID:forAccount:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:
didSendOpportunisticDataWithIdentifier:onAccount:toIDs:
messageIdentifier:forTopic:toIdentifier:fromIdentifier:hasBeenDeliveredWithContext:
protobufReceived:withGUID:forTopic:toIdentifier:fromID:context:
pendingIncomingMessageWithGUID:forTopic:toIdentifier:fromID:context:
OTRTestCallback:time:error:
groupShareReceived:withGUID:forTopic:toIdentifier:fromID:context:
engramDataReceived:withGUID:forTopic:toIdentifier:fromID:context:
checkTransportLogWithReason:
accountAdded:
accountRemoved:
accountUpdated:
accountsChanged:forTopic:
accountEnabled:onService:
accountDisabled:onService:
setupCompleteForAccount:transactionID:setupError:
account:accountInfoChanged:
account:registrationStatusInfoChanged:
account:aliasesChanged:
account:vettedAliasesChanged:
account:profileChanged:
account:loginChanged:
account:displayNameChanged:
registrationFailedForAccount:needsDeletion:
refreshRegistrationForAccount:
updateDeviceIdentity:error:
account:dependentDevicesUpdated:
account:dependentDevicesUpdatedUponReconnect:
account:localDeviceAdded:
account:localDeviceRemoved:
didAuthenticatePhoneWithAuthenticationCertificateData:requestUUID:error:
didGeneratePhoneAuthenticationSignature:nonce:certificates:labelIDs:inputData:requestUUID:error:
didRequestCarrierTokenString:requestUUID:error:
didSetPhoneUserSubscriptionSource:requestUUID:error:
didFetchPhoneUserSubscriptionSource:requestUUID:error:
IDQueryCompletedWithFromURI:idStatusUpdates:service:success:error:
didFlushCacheForService:remoteURI:fromURI:guid:
sessionInvitationReceivedWithPayload:forTopic:sessionID:toIdentifier:fromID:transportType:
sessionAcceptReceived:fromID:withData:
sessionDeclineReceived:fromID:withData:
sessionCancelReceived:fromID:withData:
sessionMessageReceived:fromID:withData:
sessionEndReceived:fromID:withData:
sessionStarted:
sessionEnded:withReason:error:
groupSessionDidTerminate:
groupSessionEnded:withReason:error:
session:invitationSentToTokens:shouldBreakBeforeMake:
session:audioEnabled:
session:muted:
session:didReceiveReport:
sessionDidJoinGroup:participantsInfo:error:
sessionDidJoinGroup:participantInfo:error:
sessionDidJoinGroup:participantUpdateDictionary:error:
sessionDidLeaveGroup:error:
session:participantDidJoinGroupWithInfo:
session:participantDidLeaveGroupWithInfo:
session:didReceiveActiveParticipants:success:
receivedGroupSessionParticipantUpdate:forTopic:toIdentifier:fromID:
receivedGroupSessionParticipantDataUpdate:forTopic:toIdentifier:fromID:
allocationDone:sessionInfo:
openedSocket:forHandlerID:error:
deliveryStats:
device:nsuuidChanged:
continuityDidUpdateStateToState:
continuityDidLosePeer:
continuityDidLosePeer:forType:
continuityDidStartTrackingPeer:error:
continuityDidStartTrackingPeer:forType:error:
continuityDidStopTrackingPeer:
continuityDidStopTrackingPeer:forType:
continuityDidStartAdvertisingOfType:
continuityDidStopAdvertisingOfType:
continuityDidStopAdvertisingOfType:withError:
continuityDidFailToStartAdvertisingOfType:withError:
continuityDidStartScanningForType:
continuityDidStopScanningForType:
continuityDidFailToStartScanningForType:withError:
continuityDidDiscoverType:withData:fromPeer:
continuityDidDiscoverPeerWithData:fromPeer:
continuityDidConnectToPeer:withError:
continuityDidDisconnectFromPeer:withError:
serviceUserIDs:error:
adminAccessTokens:error:
consentTokens:error:
userAccessTokens:error:
refreshUserAccessTokens:error:
deviceIdentifierDidChange:
didSwitchActivePairedDevice:
didSwitchActivePairedDevice:forService:wasHandled:
deactivatePairedDevices
localPairingResponseForRequestID:withError:
localPairingResponseForRequestID:withError:pairedDevices:
applecareResponseForRequestID:withError:
registrationControlResponseForRequestID:withError:
registrationControlStatusResponseForRequestID:requestID:withError:
iMessageReportSpamCheckUnknownResponseForRequestID:status:abusive:delay:withError:
_callHandlersWithBlockOnIvarQueue:
_performSyncBlock:
weakObjectsHashTable
countByEnumeratingWithState:objects:count:
_callHandlersWithBlockOnIvarQueue:cleanup:
mutableCopy
enumerateObjectsUsingBlock:
removeObjectAtIndex:
_removeAccountOnIvarQueue:
_callHandlersWithBlock:
isEqualToIgnoringCase:
voicemailSync
_stringForKey:
initWithDictionary:
_uniqueIDForDevice:
boolValue
activeID
numberWithBool:
initWithArray:
warning
_internalDidSwitchActivePairedDevice:forService:
addIndex:
removeObjectsAtIndexes:
flushCache
NSUUID
allKeys
IDSService_oversized
_callHandlersAsyncWithBlock:
isActive
_internalSwitchActivePairedDevice:forAccount:
removeAllObjects
accountEnabled
__postSetupComplete
_currentMessageContext
allObjects
_copyForEnumerating
selector
invocationWithMethodSignature:
setSelector:
_setTemporaryMessageContext:
hasPostedSetupComplete
deviceIdentifier
_hidingDisconnect
_setHidingDisconnect:
removeHandler:
accountDictionariesForService:
enabledAccountsForService:
dependentDevicesForAccount:
didGetIdentities:error:
switchActivePairedDevice:forAccount:
_internalQueueController
_handlers
_topicToAccountDictionaries
_topicToEnabledAccounts
_accountToDevices
_accountToActiveDeviceUniqueID
_serviceToActiveDeviceUniqueID
_deviceIdentifier
_setupComplete
_postedSetupComplete
_setupInfoComplete
_connectionComplete
DaemonListener
weakRefWithObject:
didReceivePublickeys:
didReceiveMasterKeyMaterials:
initWithAccount:
sendPrekeyToGroup:
requestPublicKeys
sendMasterKeyMaterialToGroup:
requestMasterKeyMaterialForGroup:
sendMKMRecoveryRequestToGroup:
resetKeysForGroup:
_uniqueID
_accountID
_queue
IDSRealTimeEncryptionProxy
didCreateGroup:completion:
didCacheGroup:completion:
didUpdateGroup:withNewGroup:completion:
didReceiveDecryptionFailureForGroup:completion:
didReceiveRegistrationIdentityUpdateWithCompletion:
addDelegate:
removeDelegate:
delegates
setDelegates:
_delegates
groupContext
initWithUserType:status:
status
type
_type
_status
initWithServiceType:userInfos:
phoneUserStatus
appleIDUserStatus
serviceType
serviceUserInfos
_serviceType
_serviceUserInfos
serviceName
setServiceName:
setState:
setCompletion:
_serviceName
_state
initWithPasswordManager:CTAdapter:signInTimeout:signInFuzz:queue:
initWithQueue:
delegateByServiceType
strongToWeakObjectsMapTable
setDelegateByServiceType:
setInitialStateByService:
_statusOfUsersOnService:
initialStateByService
_serviceNameForType:
_accountControllerForName:
accounts
signInQueue
addRegistrationDelegate:queue:
accountIDDescriptionMap
setServiceNameAccountControllerMap:
isEnabled
accountType
registerAccount
_initializeStateMachineForAccountID:service:state:completion:
_actionOnAccountOfType:onService:actionBlock:
errorWithDomain:code:userInfo:
signInController
addDelegate:queue:
_statusOfAccount:
__imArrayByApplyingBlock:
setObject:forKeyedSubscript:
_cleanupStateForAccountID:
passwordManager
dictionaryWithObjects:forKeys:count:
setPassword:forUsername:onService:completionBlock:
_createAccountWithDictionary:accountID:serviceName:
addAccount:
authenticateAccount
signInUsername:onService:waitUntilRegistered:withCompletion:
provideCredential:forUser:onService:withCompletion:
removeAccount:
_scheduleValidationAfter:forAccountID:allowFuzz:
_validateStateForAccountID:timeoutMode:
allValues
__imArrayByFilteringWithBlock:
_serviceTypeForName:
_accountWithUniqueID:
registrationStatus
unsignedIntegerValue
aliasesToRegister
CTAdapter
supportsIdentification
arrayByAddingObject:
addAliases:
initWithDictionary:uniqueID:serviceName:
_createAccountControllerForService:
accountWithUniqueID:
signInController:service:didChangeStatus:
_validateDelegateState
accountController:accountAdded:
accountController:accountUpdated:
accountController:accountRemoved:
accountController:accountEnabled:
accountController:accountDisabled:
setDelegate:forService:
removeDelegateForService:
enableUserType:onService:completion:
disableUserType:onService:completion:
statusOfUsersOnService:withCompletion:
signInUsername:withProvidedCredential:onService:waitUntilRegistered:completion:
signOutService:completion:
serviceNameAccountControllerMap
setAccountIDDescriptionMap:
setSignInQueue:
setPasswordManager:
signInTimeout
setSignInTimeout:
signInFuzz
setSignInFuzz:
setCTAdapter:
_serviceNameAccountControllerMap
_accountIDDescriptionMap
_delegateByServiceType
_initialStateByService
_signInQueue
_passwordManager
_signInTimeout
_signInFuzz
_CTAdapter
_isServiceCurrentlyEnabled:
isFaceTimeEnabled
isiMessageEnabled
initWithAccount:destinations:transportType:delegateContext:
initWithAccount:destinations:transportType:uniqueID:delegateContext:
IDSSession
socket
initialLinkType
sendInvitationWithOptions:
initWithBool:
sendInvitationWithData:declineOnError:
getPreferences
cancelInvitationWithRemoteEndedReasonOverride:
cancelInvitationWithData:
acceptInvitationWithData:
declineInvitationWithData:
cancelInvitation
acceptInvitation
declineInvitation
endSession
endSessionWithData:
sendSessionMessage:
sendSessionMessage:toDestinations:
sendAllocationRequest:
setAudioEnabled:
getAudioEnabled
setMuted:
getMuted
sendData:error:
setInviteTimeout:
inviteTimeout
reconnectSession
shouldUseSocketForTransport
MTUForAddressFamily:
initWithAccount:destinations:transportType:
_initWithAccount:destinations:transportType:uniqueID:
sendInvitation
sendInvitationWithData:
setStreamPreferences:
_streamPreferences
setIsAudioEnabled:
isAudioEnabled
setIsMuted:
isMuted
setInvitationTimeOut:
invitationTimeOut
setUniqueID:
_uniqueIDLock
_IDSService
slot
phoneSubscriptionWithSubscriptionSlot:
matchingSim
CTSIMSFromPhoneSubscriptions:
phoneSubscriptionsFromCTSIMs:
phoneSubscriptionWithSIM:
userUniqueIdentifier
SIMForIdentifier:
SIMIdentifier
accountMatchingSimIdentifier:
accountMatchingSim:
currentSIMsWithError:
subscriptionSlot
weakToStrongObjectsMapTable
setQueue:
queue
_cacheForService:
addEntriesFromDictionary:
idStatusUpdatedForDestinations:service:
_callDelegatesWithBlock:
_purgeIDStatusCache
___oldDealloc
_connect
IDQuery
watchPairing
invalidateTimeoutAndReturnHandlerForRequestID:
block
initWithDisconnectedBlockAndNoTimeout:
_requestTimer
_disconnectedBlock
initWithService:delegate:queue:parent:
setDestinations:
initWithService:delegate:queue:
Connection
alloc
_initWithAccount:commands:indirectDelegateCallouts:
initWithAccount:commands:indirectDelegateCallouts:delegateContext:
account
sendProtobuf:toDestinations:priority:options:identifier:error:
sendMessage:toDestinations:priority:options:identifier:error:
sendData:toDestinations:priority:options:identifier:error:
_connectionWithAccount:commands:indirectDelegateCallouts:
initWithAccount:commands:
sendMessage:toDestinations:options:identifier:error:
IDSConnection
addPairedDevice:completion:
addPairedDeviceWithInfo:completion:
connectPairedDeviceWithID:completion:
setupCompletedForPairedDeviceWithID:completion:
getPairingDevicesWithCompletion:
getPairedDevicesWithCompletion:
getPairingRecordsWithCompletion:
updatePairedDeviceWithID:supportIPsec:completion:
deletePairedDeviceWithID:completion:
unpairStartForDeviceWithID:completion:
stopLocalPairingForDeviceWithID:completion:
unpairDeviceWithID:completion:
forgetDeviceWithID:completion:
switchActivePairedDeviceWithID:completion:
disconnectActivePairedDevice:
redeliverMessagesForDevice:completion:
setAllowedTrafficClassifiersForDevice:classifiers:completion:
dropAllMessagesWithoutAnyAllowedClassifierForDevice:completion:
pairedDevicesInfo:
_block
completionBlock
setCompletionBlock:
_completeWithError:
_completionBlock
batchProcessingBlock
setBatchProcessingBlock:
knownRecordIDsFromList
setKnownRecordIDsFromList:
shouldContinueFromLastSyncPoint
setShouldContinueFromLastSyncPoint:
_batchProcessingBlock
_knownRecordIDsFromList
_shouldContinueFromLastSyncPoint
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
groupSessionID
participantID
connectionIndex
dataMode
_groupSessionID
_participantID
_connectionIndex
_dataMode
activateWithCompletion:
pairingCollaboratorWithCompletion:
pairedDeviceManagerCollaboratorWithCompletion:
reunionSyncCollaboratorForClientProcessName:withCompletion:
opportunisticCollaboratorWithCompletion:
registrationCollaboratorWithCompletion:
interalTestingCollaboratorWithCompletion:
setInterface:forSelector:argumentIndex:ofReply:
initWithHandler:queue:
handler
setHandler:
_handler
weakSharedInstance
initWithSet:copyItems:
initWithUUIDString:
xpcDaemonController
pairingCollaboratorWithErrorHandler:
performTask:
pairedDeviceManagerCollaboratorWithErrorHandler:
getLocalDeviceInfoWithCompletion:
getPairedDeviceInfoWithCompletion:
registrationCollaboratorWithErrorHandler:
getLocalDeviceInfoWithCompletionBlock:queue:
device:pairingDeleted:
constructRAResponseDictionary:completionHandler:
setXpcDaemonController:
_deleteCompletion
_localCompletion
_pairedCompletion
_deliveryStatsCompletion
_xpcDaemonController
_allowedTrafficClassifiers
initWithSubscriptionSource:IMEI:carrierNonce:
subscriptionSource
IMEI
carrierNonce
_subscriptionSource
_IMEI
_carrierNonce
initWithTokenString:
tokenString
_tokenString
subscriptionIdentifier
serverVerifiableEncoding
initWithSubscriptionIdentifier:authenticationCertificate:signature:serverVerifiableEncoding:
authenticationCertificate
signature
_subscriptionIdentifier
_authenticationCertificate
_signature
_serverVerifiableEncoding
nonce
base64EncodedStringWithOptions:
objectAtIndexedSubscript:
dataRepresentation
authenticationCertificateSignatures
initWithSubscriptionIdentifiers:authenticationCertificates:inputData:nonce:signature:
inputData
_authenticationCertificateSignatures
_inputData
_nonce
firstObject
_isPhoneCertificateVendorSupported
_clientErrorForCode:underlyingError:
_scheduleTimeoutForPhoneAuthenticationCertificateRequestCompletionBlock:
_scheduleTimeoutForPhoneAuthenticationSignatureRequestCompletionBlock:
_scheduleTimeoutForCarrierTokenCompletionBlock:
numberWithInteger:
daemonRequestTimer
inFlightRequestCount
setStrongSelfReference:
_debugDescriptionForErrorCode:
initWithDataRepresentation:
_updateSelfRetentionBasedOnInFlightRequestCount
slotID
authenticatePhoneWithCompletion:
generatePhoneAuthenticationSignatureOverData:withCompletion:
requestCarrierTokenWithParameters:completion:
_subscriptionSourceFromIntegerValue:
_subscriptionSourceForContext:
strongSelfReference
_strongSelfReference
_daemonRequestTimer
__imDataWithHexString:
_scheduleTimeoutForPhoneSubscriptionSourceCompletionBlock:
selectedPhoneNumberRegistrationSubscriptionWithError:
requestCarrierTokenWithMessageBody:completion:
setCurrentPhoneUserSubscriptionSource:completion:
requestCurrentPhoneUserSubscriptionSourceWithCompletion:
currentPhoneUserSubscriptionSourceWithError:
general
target
initWithCapacity:
_respondsToRemoteSelector:
_methodSignatureForRemoteSelector:
_assertVoidReturnValueInInvocation:
pendingInvocations
methodSignature
methodReturnType
methodReturnLength
raise:format:
initWithInterface:queue:
fulfillWithRemoteObject:
failWithError:
remoteObjectProxy
setInterface:
setPendingInvocations:
_interface
_pendingInvocations
_target
initWithService:delegateContext:
_initWithService:onIDSQueue:
enabledAccounts
accountWithLoginID:service:
setupAccountWithLoginID:aliases:password:completionHandler:
setupAccountWithLoginID:password:completionHandler:
setupAccountWithSetupParameters:aliases:completionHandler:
_enableAccount:
_disableAccount:
_initWithService:
IDSAccountController
componentsSeparatedByString:
objectAtIndex:
intValue
_broadcastNewSessionToDaemon
_cleanupSocketPairConnections
_IDSGroupSession_oversize
bytes
_callDelegateWithBlock:
initWithDictionaryRepresentation:
sessionDidJoinGroup:participantUpdate:error:
participantIdentifier
participantData
relaySessionID
array
connection:didReceiveData:
connectionDidClose:
boostContext
setBoostContext:
_delegateContext
_boostContext
_instanceID
_destinations
_fromID
_unreliableSocketPairConnection
_isInvalidated
_transportType
_connectionCountHint
_needsToWaitForPreConnectionData
_disallowCellularInterface
_disallowWifiInterface
_preferredAddressFamily
_preferCellularForCallSetup
_clientUUID
_alwaysSkipSelf
_sessionEndedReason
_preferences
_sessionConfig
_useConfServer
_stableGroupID
_groupID
_participantInfo
_cfs_client
_cfs_requestID
_cfsJoinReply
_didJoinCallback
_cfsLeaveReply
_didLeaveCallback
_existingParticipants
_joinLeaveError
_qrReason
_previousError
dictionaryWithDictionary:
arrayWithArray:
dataWithBytes:length:
observer
_contentWithCompletion:
handlerWithTask:delegate:queue:
perform
initWithInput:initialValue:
currentItem
currentResult
continueWithResult:
fetchGroupWithGroupID:completion:
setReducerBlock:
error
value
reduceWithCompletion:
groupContextWithCompletion:
participantsForDestinations:service:listenerID:queue:completionBlock:
cloudKitContainer
transportLog
fetchChangesSinceToken:completion:
archivedDataWithRootObject:requiringSecureCoding:error:
standardUserDefaults
groupContextController:accountsForAlises:
accountIdentity
initWithAccountIdentity:aliasToAccountsMap:serviceName:
_didCreateGroup:completion:
_didCacheGroup:completion:
_didUpdateGroup:withNewGroup:completion:
_didReceiveDecryptionFailureForGroup:completion:
setSeal:
initWithAccountKey:deviceKey:
initWithAccountIdentity:dataSource:queue:
groupContextController:didCreateGroup:
setOnGroupCreate:
appendMiddleware:
setGroupContext:
setAccountIdentity:
seal
fulfillWithValue:
qSetupSeal
promise
registerResultBlock:
taskHandler:groupsWithGroupIDs:completion:
taskHandler:participantsWithDestinations:completion:
taskHandler:messagesFromToken:completion:
taskHandler:persistToken:completion:
persistedTokenForTaskHandler:completion:
taskHandler:accountInfoForAliases:completion:
initWithServiceName:queue:delegate:
scheduleTransactionLogTask:
qGroupContextWithDeviceIdentity:completion:
_seal
setCloudKitContainer:
_cloudKitContainer
_groupContext
_accountIdentity
_isSessionInfoValid:
_setAllValuesFromDictionary:
_parseQuickRelayDefaults
setRelayIP:
setRelayPort:
setRelaySessionToken:
setRelaySessionKey:
setRelaySessionID:
setRelayCombinedSoftwareID:
setAppleID:
arrayWithObjects:count:
initWithBytes:length:
initWithBase64EncodedString:options:
initWithUUIDBytes:
UUIDString
numberWithUnsignedShort:
initWithDefaults
relayIP
relayPort
relaySessionKey
relaySessionToken
relayCombinedSoftwareID
appleID
relayIPv6
setRelayIPv6:
_relayIP
_relayPort
_relaySessionToken
_relaySessionKey
_relaySessionID
_relayCombinedSoftwareID
_appleID
_relayIPv6
QRAllocator
copyStringGUIDForObject:
daemonListener
daemonController
devices
addDelegate:queue:completion:
_callDelegatesWithBlock:group:
_callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:group:
setDataToEncrypt:
setWantsResponse:
setWantsProgress:
setFromID:
doubleValue
setTimeout:
pushTopic
destinations
_isDestinationSingleLocalAddress:
setEnforceRemoteTimeouts:
setAccessToken:
setHomeKitPayload:
setSubService:
setFakeMessage:
setDisableAliasValidation:
setCommand:
setWantsAppAck:
setWantsDeliveryStatus:
setWantsCertifiedDelivery:
setDeliveryStatusContext:
setMessageUUID:
setAlternateCallbackID:
setOriginalTimestamp:
setEncryptPayload:
setCompressPayload:
setLocalDelivery:
setAllowCloudDelivery:
setRequireBluetooth:
setRequireLocalWiFi:
setUseDictAsTopLevel:
setExpectsPeerResponse:
setPeerResponseIdentifier:
setAlwaysSkipSelf:
_activeDevice
isCloudConnected
setBypassDuet:
setNonWaking:
setNonCloudWaking:
setLiveMessageDelivery:
setDropMessageIndicatorCommand:
setFireAndForget:
setBypassStorage:
callStackSymbols
setActivityContinuation:
setQueueOneIdentifier:
setForceEncryptionOff:
setDuetIdentifiersOverride:
caseInsensitiveCompare:
sortedArrayUsingComparator:
setMetricReportIdentifier:
setInterestingRegistrationProperties:
setRequireAllRegistrationProperties:
setRequireLackOfRegistrationProperties:
setIdentifier:
setAccountUUID:
command
initWithGuid:service:command:priority:
_verifyMatchingName:
shouldLogTouches
name
_touchStartDate
signpostID
uniqueIdentifier
setCheckpointTrace:
destinationURIs
_replaceSentinelInSendParameters:withCurrentActiveDevice:
setGroupData:
alternateCallbackID
identifier
setOrderedObject:forKey:
GUIDTRACE
getUUIDBytes:
CrossLayerLogging
sendToDaemon
dictionaryRepresentationIncludingTrace:
initWithSet:
destinationWithStrings:
data
dictionaryRepresentation
setProtobuf:
_sendWithParameters:options:loggingType:loggingDataSize:
dataWithPropertyList:format:options:error:
setMessage:
setData:
connection:isActiveChanged:
connection:devicesChanged:
connection:nearbyDevicesChanged:
connection:connectedDevicesChanged:
removeOrderedObjectForKey:
setDaemonDeathResend:
_resendPendingSends
_handleLastCallForPendingIdentifier:callbackID:
initWithDictionary:boostContext:
serverReceivedTime
serverTimestamp
connection:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:messageContext:
connection:identifier:didSendWithSuccess:error:context:
connection:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:
outgoingResponseIdentifier
_shouldAcceptIncomingType:forTopic:localURI:remoteURI:validateAliases:guid:
connection:identifier:fromID:hasBeenDeliveredWithContext:
storageGuid
broadcastTime
timeIntervalSinceReferenceDate
numberWithDouble:
broadcastID
connectionType
opportunistic
connection:didSendOpportunisticDataWithIdentifier:toIDs:
handles
unprefixedURI
_stripFZIDPrefix
_isAccountInValidRegistrationStateToAcceptMessages
primaryServiceName
registrationCertificate
initWithReason:guid:service:additionalInformation:
_sendMissingMessageMetric:
_stripPotentialTokenURIWithToken:
suppressedDevices
pushToken
isEqualToData:
isInTransientRegistrationState
_canServiceNameAcceptMessagesInTransientRegistrationState:
connection:incomingOpportunisticData:withIdentifier:fromID:context:
incomingResponseIdentifier
connection:incomingMessage:fromID:
connection:incomingMessage:fromID:context:
connection:incomingTopLevelMessage:fromID:messageContext:
wantsAppAck
connection:incomingData:fromID:context:
originalCommand
connection:incomingEngramMessage:fromID:context:
connection:incomingAccessoryData:fromID:context:
connection:incomingAccessoryReportMessage:accessoryID:controllerID:context:
setContext:
totalBytes
longValue
connection:incomingProtobuf:fromID:context:
connection:didFlushCacheForRemoteURI:fromURI:guid:
setOriginalGUID:
connection:incomingPendingMessageFromID:context:
connection:account:sessionInviteReceived:fromID:transportType:options:context:messageContext:
connection:account:receivedGroupSessionParticipantUpdate:
connection:account:receivedGroupSessionParticipantDataUpdate:
connection:incomingGroupData:fromID:context:
unarchivedObjectOfClass:fromData:error:
connection:didUpdateDeviceIdentity:error:context:
connection:didHintCheckingTransportLogWithReason:
shouldReportMetric
payload
sendServerMessage:command:
account:isActiveChanged:
account:devicesChanged:
account:nearbyDevicesChanged:
account:connectedDevicesChanged:
_init
_callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:
setDelegateCapabilities:
_messageContext
_incomingMessageLoggingSequence
_outgoingMessageLoggingSequence
_delegateToInfo
_account
_serviceToken
_pendingSends
_delegateCapabilities
_indirectDelegateCallouts
initWithMachServiceName:options:
upsertGroupWithInfo:previousGroup:completion:
fetchGroupWithID:completion:
publicDataRepresentationForGroup:completion:
groupFromPublicDataRepresentation:completion:
participantsForCypher:completion:
validateCachedGroup:isParentOfGroup:completion:
latestCachedGroupWithStableID:completion:
fetchAllKnownGroups:
deleteAllKnownGroupsWithCompletion:
deleteAllCachedValuesForGroupWithID:WithCompletion:
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
setConnection:
setInvalidationHandler:
setInterruptionHandler:
resume
connection
groupContextDataSource
groupContextCacheMiddleware
setObserver:
_connection
_observer
DaemonProxy
_accessDelegateIdentifiersInCriticalSectionWithBlock:
identifierForServiceDelegate:
isAwaitingAcknowledgement
awaitAcknowledgementFromServiceDelegate:
stopAwaitingAcknowledgementFromServiceDelegateWithIdentifier:
stopAwaitingAcknowledgementFromAllServiceDelegates
_delegateIdentifiers
_delegateIdentifiersMutex
uniqueIDOverride
reunionSyncCollaboratorWithErrorHandler:
performDaemonControllerTask:
cbuuid
pairingProtocolVersion
BTOutOfBandKey
supportsIPsecWithSPPLink
bluetoothMACAddress
decodeObjectOfClass:forKey:
decodeIntegerForKey:
initWithCBUUID:pairingProtocolVersion:BTOutOfBandKey:
decodeBoolForKey:
setSupportsIPsecWithSPPLink:
setBluetoothMACAddress:
encodeObject:forKey:
encodeInteger:forKey:
encodeBool:forKey:
_cbuuid
_BTOutOfBandKey
_bluetoothMACAddress
_pairingProtocolVersion
_supportsIPsecWithSPPLink
pairingCollaboratorWithTimeout:errorHandler:
setActiveConnection:forKey:
hasActiveConnection:forKey:
removeActiveConnection:forKey:
_activeConnectionMap
_writeLock
_daemonDied:
IDSDeviceConnection
nsuuid
deviceConnectionKey
_cleanupCompletionBlock
_close
numberWithLongLong:
dictionaryWithObjectsAndKeys:
close
open
initWithDevice:options:completionHandler:queue:
inputStream
outputStream
metrics
setStreamPairWithInputStream:outputStream:
updateConnectionWithOptions:error:
_nsuuid
_isDefaultPairedDevice
_service
_streamName
_connectionUUID
_socket
_mtu
_openSocketCompletionHandler
_openSocketCompletionHandlerQueue
_openSocketCompletionHandlerID
_inputStreamForSocket
_outputStreamForSocket
_hasTimedOut
_clientTimeout
_awdMetrics
_loadCachedAccounts
_updateLocalAccountVisibility
minusSet:
intersectSet:
Accounts
_initWithDictionary:uniqueID:serviceName:
setAccountInfo:
_setIsEnabled:
__imSetByApplyingBlock:
_loadCachedAccountsWithDictionaries:
addObjectsFromArray:
_updateDelegatesWithOldAccounts:newAccounts:
internalAccounts
loginID
lowercaseString
arrayByApplyingSelector:
_setupAccountWithLoginID:accountConfig:authToken:password:completionHandler:
accountInfo
_isEnabled
aliases
_cachedAccounts
_enabledAccounts
_transactionIDToHandlersMap
_accountsLoaded
_isLocalAccountVisible
_initWithQueue:isSync:
collaboratorPromiseDictionary
syncCollaboratorDictionary
initForSyncMessagingWithQueue:takingOverAndResumingConnection:
initWithQueue:takingOverAndResumingConnection:
_daemonProxyWithErrorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
_collaboratorWithIdentifier:interface:timeout:errorHandler:resolverBlock:
remoteObjectProxyWithErrorHandler:
remoteObjectProxyWithTimeoutInSeconds:errorHandler:
_sync_collaboratorWithIdentifier:errorHandler:resolverBlock:
_timingOutDaemonProxyWithTimeout:errorHandler:
initWithRemoteObject:rootConnection:
initSyncControllerWithQueue:
opportunisticCollaboratorWithErrorHandler:
interalTestingCollaboratorWithErrorHandler:
setCollaboratorPromiseDictionary:
setSyncCollaboratorDictionary:
_collaboratorPromiseDictionary
_sync
_syncCollaboratorDictionary
initWithIdentityData:error:
identityData
initWithIdentityData:
initWithError:
setIdentityData:
setError:
_identityData
_error
protectionClassIdentityDataMap
decodeObjectOfClasses:forKey:
identityDataForDataProtectionClass:error:
initWithIdentityDataClassA:classC:classD:
setProtectionClassIdentityDataMap:
_protectionClassIdentityDataMap
publicIdentityClassA:
publicIdentityClassC:
publicIdentityClassD:
identityWithData:error:
_publicIdenityForDataProtectionClass:error:
initWithCBUUID:publicIdentityDataClassA:classC:classD:
fullIdentityClassA:
fullIdentityClassC:
fullIdentityClassD:
_fullIdenityForDataProtectionClass:error:
initWithWithFullIdentityDataClassA:classC:classD:
initWithDictionary:uniqueID:serviceName:delegateContext:
initWithLoginID:uniqueID:serviceName:delegateContext:
isUserDisabled
canSend
nearbyDevices
profileInfo
aliasStrings
vettedAliases
setPassword:
setAuthToken:
isUsableForOuterMessaging
updateAccountWithAccountInfo:
registrationError
registrationAlertInfo
profileValidationStatus
profileValidationErrorReason
nextRegistrationDate
dateRegistered
registeredURIs
accountRegisteredURIs
regionServerContext
profileID
removeRegistrationDelegate:
regionID
setRegionID:
regionBasePhoneNumber
setRegionBasePhoneNumber:
displayName
setDisplayName:
passwordUpdated
updateAuthorizationCredentials:token:
validateProfile
removeAliases:
validateAliases:
unvalidateAliases:
unregisterAccount
_reregisterAndReidentify:
deactivateAndPurgeIdentify
_callNearbyDevicesChanged
_reloadCachedDevices
activeAliases
activateAlias:
deactivateAlias:
initWithLoginID:uniqueID:serviceName:
setLoginID:
_loginID
IDSiCloudSignInHack
initWithString:
isLocallyPaired
initWithFormat:
identities
getServiceUserIDsWithCompletionBlock:queue:
getAdminAccessTokensWithWithServiceUserID:accessoryID:pairingToken:completionBlock:queue:
getConsentTokensWithServiceUserID:accessoryIDs:adminID:completionBlock:queue:
getUserAccessTokensWithServiceUserID:userID:userHandle:accessoryRequests:completionBlock:queue:
refreshUserAccessTokensWithServiceUserID:userID:accessoryRequests:completionBlock:queue:
_getServiceUserIDsCompletion
_getAdminAccessTokensCompletion
_getConsentTokensCompletion
_getUserAccessTokensCompletion
_refreshUserAccessTokensCompletion
_loadCachedDevices
_isiCloudPairingService
_isThumperService
_objectForKey:
isUserVisible
_isInvisibleAlias:
hasSuffix:
initWithUnprefixedURI:
initWithURI:isUserVisible:validationStatus:
registrationInfo
dictionary
null
_initWithDictionary:
_setAccount:
supportsiCloudPairing
_updateDependentDevicesWithDevicesInfo:
reloadAccounts
isNearby
_callDevicesChanged
connectedDevices
registrationWithServiceType:accountType:value:
_keychainRegistration
arrayWithObject:
_registeredURIs
initWithPrefixedURI:
_callRegistrationDelegatesWithBlock:
_setObject:forKey:
isTransientWhitelistedAccount
_callConnectedDevicesChanged
_callCloudConnectedDevicesChanged
_accountConfig
_devices
_suppressedDevices
_registrationDelegateToInfo
_devicesLoaded
initWithService:commands:manuallyAckMessages:delegateContext:
initWithService:commands:manuallyAckMessages:
performGroupTask:
setProtobufAction:forProtobufType:isResponse:
protobufActionForType:isResponse:
sendProtobuf:fromAccount:toDestinations:priority:options:identifier:error:
sendOpportunisticData:options:identifier:error:
cancelOpportunisticDataWithIdentifier:error:
sendMessage:fromAccount:toDestinations:priority:options:identifier:error:
sendData:fromAccount:toDestinations:priority:options:identifier:error:
sendAccessoryData:toAccessoryID:accessToken:options:identifier:error:
sendData:priority:options:identifier:error:
sendResourceAtURL:metadata:fromAccount:toDestinations:priority:options:identifier:error:
getProgressUpdateForIdentifier:error:
sendAheadGroup:priority:options:identifier:completion:
sendAckForMessageWithContext:
sendCertifiedDeliveryReceipt:
cancelIdentifier:error:
sendServerMessage:command:fromAccount:
serviceDomain
iCloudAccount
deviceForFromID:
firstRoutableInternetDestinationForSelf
deviceForUniqueID:
devicesForBTUUID:
uriForFromID:
setPreferInfraWiFi:
setLinkPreferences:
startOTRTest:
setPretendingToBeFull:
isPretendingToBeFull
testCloudQRConnection
updateSubServices:forDevice:
datagramConnectionForSessionDestination:error:
datagramConnectionForSessionDestination:uid:error:
datagramConnectionForSocketDescriptor:error:
streamConnectionForSessionDestination:error:
streamConnectionForSocketDescriptor:error:
datagramChannelForSessionDestination:error:
datagramChannelForSocketDescriptor:error:
removeSentinelFromAliases:
_accountWithAlias:
objectsPassingTest:
anyObject
checkMessageSize:priority:
internal
initWithService:serviceDomain:
initWithService:commands:
initWithService:manuallyAckMessages:
addDelegate:withDelegateProperties:queue:
setProtobufAction:forIncomingRequestsOfType:
setProtobufAction:forIncomingResponsesOfType:
protobufActionForIncomingRequestsOfType:
protobufActionForIncomingResponsesOfType:
sendMessage:fromAccount:toDestinations:options:identifier:error:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
sendAheadGroup:priority:options:identifier:error:
maxHomeKitPayloadSize
updateSubServices:
requestConnectionForUnicastParameter:completionHandler:
activateAliases:
deactivateAliases:
IDSService
iCloud
initWithResponseHandler:timeoutBlock:systemTimer:
responseHandler
timeoutBlock
systemTimer
killSystemTimer
_responseHandler
_timeoutBlock
_systemTimer
_accessRequestContextMapInCriticalSectionWithBlock:
_criticalFindRequestContextWithResponseHandler:
_handleSystemTimerFired:
initWithTimeInterval:name:shouldWake:target:selector:userInfo:
_criticalInvokeTimeoutBlockForRequestID:
_criticalInvalidateTimeoutAndReturnHandlerForRequestID:
invalidateTimeoutsAndReturnHandlersForAllRequests
_requestContextMap
_requestContextMapLock
initWithBlock:
incrementAccessCount
_cleanupBlock
_accessCount
receivedIDSSimulatorSupportData:serviceName:messageIdentifier:
unarchivedObjectOfClasses:fromData:error:
initWithProtobufData:type:isResponse:
UUID
stringByAppendingPathComponent:
defaultManager
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
writeToFile:options:error:
setAttributes:ofItemAtPath:error:
service:account:identifier:hasBeenDeliveredWithContext:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:account:incomingTopLevelMessage:fromID:messageContext:
service:account:incomingMessage:fromID:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingAccessoryData:fromAccessoryID:context:
service:account:incomingAccessoryReportMessage:controllerID:accessoryID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
service:account:incomingUnhandledProtobuf:fromID:context:
service:didHintCheckingTransportLogWithReason:
service:account:incomingPendingMessageOfType:fromID:context:
_setupIDSWakeListenerIfNeeded
_stopAwaitingQuickSwitchAcknowledgementFromDelegateWithIdentifier:
serviceAllowedTrafficClassifiersDidReset:
resendSubServicesToDaemonForCurrentDevice
service:token:time:error:
ACKTracker
lock
unlock
_activeDeviceForUniqueID:
_acknowledgementBlockWithDelegateIdentifier:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:devicesChanged:
_isDroppingMessages
_logConnectionMap
service:activeAccountsChanged:
_callDelegatesForDevicesChanged
_setupNewConnectionForAccount:
_callIsActiveChanged
_tearDownConnectionForUniqueID:
usedEngram
setWantsManualAck:
groupCrypto
groupID
cacheIncomingGroup:completion:
_groupFromPublicDataRepresentation:completion:
resourceTransferURLString
fileSystemRepresentation
resourceTransferMetadata
resourceTransferSandboxExtension
containsString:
fileURLWithPath:
removeItemAtURL:error:
isResponse
keyRepresentationForType:isResponse:
pointerValue
setArgument:atIndex:
_messageTypeForCommand:
_FTOptionallyDecompressData
engramGroupID
_payloadFromDecryptedData:
setUsedEngram:
_FTDataFromBase64String
participants
verifyAndRevealData:sendingDevice:cypherIdentifier:error:
code
_fetchGroupWithGroupID:skipCache:completion:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
bytesSent
setTotalUnitCount:
setCompletedUnitCount:
service:account:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:messageContext:
service:account:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:didFlushCacheForRemoteURI:fromURI:guid:
serviceSpaceDidBecomeAvailable:
_filteredAccountsFrom:
_addIdentity:
isEqualToArray:
valueWithPointer:
__imFirstObject
_appearsToBeEmail
_appearsToBePhoneNumber
_sendingAccountForAccount:destination:
compare:
hasPrefix:
_sendingAccountForAccount:
_sendSimulatorMessage:fromAccount:toDestinations:priority:options:identifier:error:
dataWithContentsOfFile:options:error:
attributesOfItemAtPath:error:
lastPathComponent
removeItemAtPath:error:
_sendSimulatorProtobuf:fromAccount:toDestinations:priority:options:identifier:error:
_sendSimulatorData:fromAccount:toDestinations:priority:options:identifier:error:
destinationWithDestinations:
currentProgress
progressWithTotalUnitCount:
deviceForFromID:fromDevices:
_handlePretendingToBeFullWithIdentifier:
isFileURL
absoluteString
path
canSendMessageWithAccount:toDestination:
_publicDataRepresentationForGroup:completion:
fromID
initWithDestination:
initWithSocketDescriptor:
groupContextController
connection:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:
_initWithDelegateContext:
_processAccountSet:
manuallyAckMessages
setManuallyAckMessages:
_accountController
_uniqueIDToConnection
_protobufSelectors
_lastIsActiveSet
_subServices
_pretendingToBeFull
_everHadDelegate
_manuallyAckMessages
_hasSetupWakeListener
_listenerCaps
_groupContextController
_idsSimulatorSupportDataHandlerToken
_uniqueIDToProgress
_acknowledgementTracker
_pendingRegisteredIdentitiesBlock
domain
getFileSystemRepresentation:maxLength:
stringWithFileSystemRepresentation:length:
cStringUsingEncoding:
linkItemAtPath:toPath:error:
copyItemAtPath:toPath:error:
_initWithAccountUniqueID:fromID:loginID:serviceName:
dictionaryWithCapacity:
accountUniqueID
_dictionaryRepresentation
transactionLogMessageFromDictionaryRepresentation:
_accountUniqueID
dataValue
initWithData:accountUniqueID:fromID:loginID:serviceName:
_dataValue
dictionaryValue
initWithDictionary:accountUniqueID:fromID:loginID:serviceName:
_dictionaryValue
__sendMessage:queue:reply:failBlock:waitForReply:
_disconnectFromQueryService
_requestCacheForService:completionBlock:
_requestCachedStatusForDestinations:service:waitForReply:listenerID:completionBlock:
_requestStatusForDestinations:service:waitForReply:forceRefresh:listenerID:completionBlock:
_requestRemoteDevicesForDestination:service:listenerID:completionBlock:
initialize
initWithSubscriptionSlot:
isEqualToPhoneSubscription:
copyWithZone:
_subscriptionSlot
initWithSyncDaemonControllerBuilder:
_performSyncAction:
selectedSubscriptionsWithError:
selectSubscription:withError:
unselectSubscription:withError:
setSelectedSubscriptions:withError:
syncDaemonController
setSyncDaemonController:
syncDaemonControllerBuilder
setSyncDaemonControllerBuilder:
_syncDaemonController
_syncDaemonControllerBuilder
mainBundle
bundleIdentifier
executablePath
IDSDataChannels
transactionLog
IDSDevice
_IDSSession
_initWithQueue:takingOverAndResumingConnection:forSyncMessaging:
_setQueue:
interruptionHandler
_cleanupAllPendingTransactions
invalidationHandler
initWithQueue:remoteObject:
setRootConnection:
rootConnection
initWithTarget:connection:timeoutInSeconds:errorHandler:
valueForEntitlement:
pendingTransactions
invoke
errorForMissingEntitlement:
replacementObjectForXPCConnection:encoder:object:
connection:handleInvocation:isReply:
hasEntitlement:
setPendingTransactions:
forSyncMessaging
setForSyncMessaging:
_pendingTransactions
_rootConnection
_invalidationHandler
_forSyncMessaging
_invocationHasBlock:
timeout
errorHandler
remoteObjectProxyWithUserInfo:errorHandler:
numberOfArguments
getArgumentTypeAtIndex:
setErrorHandler:
_timeout
_errorHandler
_nearbyStateChanged
_connectedStateChanged
_cloudConnectedStateChanged
modelIdentifier
linkedUserURIs
supportsSMSRelay
supportsMMSRelay
supportsPhoneCalls
deviceColor
enclosureColor
locallyPresent
productBuildVersion
minCompatibilityVersion
maxCompatibilityVersion
isHSATrusted
supportsHandoff
supportsTethering
productName
productVersion
fullDescription
lastActivityDate
serviceMinCompatibilityVersion
setNSUUID:
supportsApplePay
_setService:
_info
_serviceReference
_nearbyToken
_nearby
_connected
_immutableCloudConnected
_cloudConnected
_purgeIDStatusCacheAfter:
_cachedStatusForDestination:service:
initWithSuccess:
_updateCacheWithDictionary:service:
_delegateMapForListenerID:service:
_callDelegatesWithBlock:delegateMap:
_idStatusForDestinations:service:listenerID:allowRenew:waitForReply:forceRefresh:completionBlock:
_refreshIDStatusForDestinations:service:listenerID:allowRefresh:waitForReply:forceRefresh:queue:completionBlock:
refreshIDStatusForDestinations:service:listenerID:forceRefresh:queue:completionBlock:
currentIDStatusForDestinations:service:listenerID:queue:completionBlock:
_currentRemoteDevicesForDestinations:service:listenerID:queue:completionBlock:
initWithDelegateContext:queueController:
_isListenerWithID:listeningToService:
_setCurrentIDStatus:forDestination:service:
_sync_refreshIDStatusForDestinations:service:listenerID:completionBlock:
_sync_currentIDStatusForDestinations:service:listenerID:completionBlock:
refreshIDStatusForDestination:service:listenerID:queue:completionBlock:
currentIDStatusForDestination:service:listenerID:queue:completionBlock:
currentRemoteDevicesForDestinations:service:listenerID:queue:completionBlock:
_hasCacheForService:
_currentCachedIDStatusForDestination:service:listenerID:
_warmupQueryCacheForService:
_flushQueryCacheForService:
addDelegate:forService:listenerID:queue:
removeDelegate:forService:listenerID:
_idStatusCache
_transactionIDToBlockMap
_connectionQueue
_listenerIDToServicesMap
copyOpportunisticCacheWithBlock:
destinationWithDevice:
operatingSystemVersion
_linkID
_networkType
_connectionType
_RATType
_maxMTU
_remoteNetworkType
_remoteConnectionType
_remoteRATType
_maxBitrate
_linkUUID
_QRSessionID
_relayServerProvider
_serverIsDegraded
_localLinkFlags
_remoteLinkFlags
initWithDummyInformation
initWithLinkID:linkUUID:QRSessionID:networkType:connectionType:RATType:MTU:remoteNetworkType:remoteConnectionType:remoteRATType:maxBitrate:relayServerProvider:relaySessionToken:relaySessionKey:serverIsDegraded:
initWithAttributes:maxBitrate:relayServerProvider:relaySessionToken:relaySessionKey:
linkID
linkUUID
QRSessionID
networkType
RATType
maxMTU
maxBitrate
remoteNetworkType
remoteConnectionType
remoteRATType
relayServerProvider
serverIsDegraded
setRATType:
setMTU:
setMaxBitrate:
remoteLinkFlags
localLinkFlags
_verboseFunctionalLogging
_socketDescriptor
_eventHandler
_readHandler
_readHandlerWithOptions
_readLock
_hasMetadata
_sentFirstReadLinkInfo
_receivedPreConnectionData
_waitForPreConnectionDataForConnected
_startCalled
_startAutomatically
_osChannelFD
_pathEvaluator
_cellularLink
_linkContexts
_defaultLinkID
_preConnectionData
_sendingMetadata
_needsMediaEncryptionInfo
_outgoingBytes
_incomingBytes
_lastOutgoingStatReport
_lastIncomingStatReport
_MKIArrivalTime
_firstPacketArrivalTimeForMKI
numberWithChar:
realTimeContext
numberWithUnsignedChar:
_reportFirstPacketTimeForMKI:
addNewIDSDataChannelLinkWithAttributes:linkAttributesLength:
removeIDSDataChannelLinkContext:linkUUID:
selectDefaultLink:
_strictlyUnarchivedObjectOfClasses:fromData:error:
sendMediaEncryptionInfoWithMKM:MKS:MKI:isLocallyGenerated:
sendMediaMembershipChangedInfo:
processMetadataForDatagram:size:datagramInfo:options:
_logReceivingStats:
readDatagramWithCompletionHandler:
readDatagramsWithCompletionHandler:
sendEventConnectedWithDummyLinkInfo
setChannelPreferences:
writeDatagrams:datagramSizes:datagramInfo:datagramCount:options:completionHandler:
generateMetadataWithDatagramInfo:options:currentDatagramCount:totalDatagramCount:byteBuffer:
_logSendingStats:
_writeDatagram:datagramSize:datagramInfo:options:completionHandler:
removeObjectsInRange:
isInternalInstall
_buildPacketBufferMetaData:
sendMetadata
_setWiFiAssist:
serializeSessionInfoMetadata:
connectedLinks
defaultLink
cachedMetadata
underlyingFileDescriptor
start
writeDatagrams:datagramsSize:datagramsInfo:datagramsCount:options:completionHandler:
writeDatagram:datagramSize:flags:completionHandler:
writeDatagram:datagramSize:datagramInfo:options:completionHandler:
setEventHandler:
setReadHandler:
setReadHandlerWithOptions:
readyToRead
setWiFiAssist:
startActiveProbingOnLinks:interval:timeout:
stopActiveProbingOnLinks:
requestSessionInfoWithOptions:
reportFirstPacketTimeForMKI:
osChannelInfoLog
initSocketWithDevice:options:completionHandler:queue:
initStreamWithDevice:options:completionHandler:queue:
acAccountWithProfileID:username:accountStore:
initWithName:contextKey:
timeIntervalSinceNow
participantsFromEndpoints:
refreshIDStatusForDestinations:service:listenerID:queue:completionBlock:
forceRefreshIDStatusForDestinations:service:listenerID:queue:completionBlock:
refreshIDStatusForDestinations:service:listenerID:queue:errorCompletionBlock:
_refreshIDStatusForDestination:service:listenerID:
_refreshIDStatusForDestinations:service:listenerID:
_currentIDStatusForDestination:service:listenerID:
_currentIDStatusForDestinations:service:listenerID:
requestIDStatusForDestinations:service:listenerID:queue:completionBlock:
requestIDStatusForDestination:service:listenerID:queue:completionBlock:
_queueController
continuityDidUpdateState:
_handleReconnect
continuity:didStartAdvertisingOfType:
continuity:didStopAdvertisingOfType:
continuity:didStopAdvertisingOfType:withError:
continuity:didFailToStartAdvertisingOfType:withError:
continuity:didStartScanningForType:
continuity:didStopScanningForType:
continuity:didFailToStartScanningForType:withError:
continuity:didDiscoverType:withData:fromPeer:
continuity:didLosePeer:type:
continuity:didStartTrackingPeer:type:error:
continuity:didStopTrackingPeer:type:
_initWithAccount:destinations:options:delegateContext:
sessionEnded:
_setupSocketPairToDaemon
initWithSocket:queue:delegate:
session:didReceiveData:
sendData:
session:receivedInvitationAcceptFromID:withData:
session:receivedInvitationAcceptFromID:
session:receivedInvitationDeclineFromID:withData:
session:receivedInvitationDeclineFromID:
session:receivedInvitationCancelFromID:withData:
session:receivedInvitationCancelFromID:
session:receivedSessionMessageFromID:withData:
session:receivedSessionEndFromID:withData:
session:invitationSentToTokens:
_initWithAccount:destinations:transportType:connectionCountHint:needsToWaitForPreConnectionData:uniqueID:delegateContext:
_setupUnreliableSocketPairConnection
_initialLinkType
_isAudioEnabled
_isMuted
_isLegacy
_inviteTimeout
_disableEncryption
_shouldUseSocketForTransport
_enableSingleChannelDirectMode
destinationWithDeviceURI:
destinationWithRapportPublicIdentifierURI:
destinationWithRapportPublicIdentifier:
_groupContextDataSource
_groupContextCacheMiddleware
groupContext:upsertGroupWithInfo:previousGroup:completion:
groupContext:fetchGroupWithID:completion:
publicDataRepresentationForGroup:inContext:completion:
groupFromPublicDataRepresentation:inContext:completion:
middlewareCacheCostForContext:
groupContext:cacheGroup:completion:
groupContext:cachedGroupWithID:completion:
groupContext:latestCachedGroupWithStableID:completion:
groupContext:fetchAllKnownGroups:
deleteAllKnownGroupsForGroupContext:completion:
deleteCachedValueForForGroupContext:withGroupID:completion:
utilities
_contextKey
initWithLimit:timeLimit:
_invalidateNextQueryTimer
_nextQuery:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
initWithTimeIntervalSinceNow:
_calloutToDelegateWithResult:error:
_scheduleNextQuery:
date
timeIntervalSinceDate:
underLimit
noteItem:
removeObjectsInArray:
timeToUnderLimit:
idStatusUpdatedForDestinations:
batchQueryController:updatedDestinationsStatus:onService:error:
underLimitForItem:
_destinationsToQuery
_nextQueryTimer
_timeOfDeath
_rateLimiter
_parent
_numberOfQueriesDone
_isDead
sharedInstanceForBagType:
updateAvailability
_updateAvailability
_postAvailability:
_availability
_token
aliasToAccountsMap
accountForAlias:
_aliasToAccountsMap
initWithTask:delegate:queue:
task
setTask:
_task
qPerformWithToken:
qIngestMessages:completion:
recipientAlias
syncTask
_transactionMessagesFromTransportMessages:withParticipants:groups:accountInfo:completion:
qFetchParticipantsFromDeviceMessges:andGroupsFromGroupMessages:completion:
_destinationsInMessages:
_groupIDsFromMessages:
_groupsByGroupIDFromGroups:
_participantsByAliasFromParticipants:
_transactionMessageFromTransportMessage:groups:participants:accountInfo:
_transactionMessageFromTransportMessage:withGroupID:groups:accountInfo:
_transactionMessageFromTransportMessage:withParticipants:accountInfo:
alias
deviceWithIdentifier:
encryptedPayload
cypherIdentifier
verifyAndRevealData:withReceipient:cypherIdentifier:error:
_transactionMessageFromTransportMessage:withDecryptedPayload:accountInfo:
senderAlias
setSyncTask:
_syncTask
@32@0:8@16@24
v16@0:8
q16@0:8
v40@0:8q16@24@32
v24@0:8q16
v48@0:8q16@24@32@40
v56@0:8q16@24@32@40@48
v60@0:8q16@24@32@40@48B56
v52@0:8q16@24@32@40B48
v64@0:8q16@24@32@40@48B56B60
v56@0:8q16@24@32@40B48B52
v24@0:8@16
v32@0:8@16q24
@"_IDSContinuity"
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v68@0:8@16@24i32@36@44@52@60
v52@0:8@16@24@32i40@44
v32@0:8@16@24
v40@0:8@16@24@32
v64@0:8@16@24@32@40@48@56
v48@0:8@16@24@32@40
v56@0:8@16@24@32@40@48
v28@0:8B16@20
v48@0:8@16q24@32@40
v80@0:8@16@24@32@40@48@56q64q72
v48@0:8@16@24@32q40
v36@0:8@16@24I32
v36@0:8@16@24B32
v28@0:8@16I24
v32@0:8q16@24
v52@0:8@16@24@32@40B48
v48@0:8q16@24@32B40B44
v40@0:8q16q24@32
v68@0:8@"NSString"16@"NSString"24i32@"NSDictionary"36@"NSString"44@"NSString"52@"NSString"60
v52@0:8@"NSString"16@"NSString"24@"NSString"32i40@"NSDictionary"44
v24@0:8@"NSString"16
v32@0:8@"NSString"16@"NSDictionary"24
v32@0:8@"NSString"16@"NSString"24
v40@0:8@"NSString"16@"NSString"24@"NSString"32
v32@0:8@"NSArray"16@"NSString"24
v32@0:8@"NSNumber"16@"NSString"24
v64@0:8@"NSString"16@"NSString"24@"NSString"32@"NSDictionary"40@"NSNumber"48@"NSArray"56
v40@0:8@"NSString"16@"NSNumber"24@"NSString"32
v32@0:8@"NSData"16@"NSString"24
v48@0:8@"NSNumber"16@"NSString"24@"NSString"32@"NSString"40
v24@0:8@"NSArray"16
v24@0:8@"NSSet"16
v40@0:8@"NSArray"16@"NSString"24@"NSString"32
v24@0:8@"NSDictionary"16
v56@0:8@"NSData"16@"NSString"24@"NSString"32@"NSString"40@"NSDictionary"48
v32@0:8@"NSDictionary"16@"NSString"24
v56@0:8@"NSURL"16@"NSDictionary"24@"NSArray"32@"NSString"40@"NSString"48
v40@0:8@"NSDictionary"16@"NSNumber"24@"NSString"32
v28@0:8B16@"NSString"20
v32@0:8@"NSString"16q24
v48@0:8@"NSDictionary"16q24@"ENGroupID"32@"NSString"40
v56@0:8@"NSString"16@"NSString"24@"NSNumber"32@"NSNumber"40@"NSNumber"48
v80@0:8@"NSString"16@"NSString"24@"NSString"32@"NSNumber"40@"NSNumber"48@"NSNumber"56q64q72
v48@0:8@"NSString"16@"NSString"24@"NSString"32q40
v36@0:8@"NSSet"16@"NSSet"24I32
v32@0:8@"NSObject<OS_xpc_object>"16@"NSDictionary"24
v36@0:8@"NSString"16@"NSData"24B32
v32@0:8@"NSString"16@"NSData"24
v28@0:8@"NSString"16I24
v40@0:8@"NSData"16@"NSSet"24@"NSString"32
v32@0:8q16@"NSString"24
v52@0:8@"NSArray"16@"NSString"24@"NSString"32@"NSData"40B48
v48@0:8@"NSData"16@"NSString"24@"NSString"32@"NSData"40
v40@0:8q16@"NSData"24@"NSDictionary"32
v40@0:8q16@"NSData"24@"NSData"32
v48@0:8q16@"NSData"24@"NSData"32@"NSArray"40
v48@0:8q16@"NSData"24@"NSData"32B40B44
v56@0:8q16@"NSData"24@"NSData"32@"NSArray"40B48B52
v48@0:8@"NSString"16@"NSString"24@"NSNumber"32@"NSString"40
v40@0:8@"NSString"16@"NSString"24@"NSData"32
v40@0:8@"NSString"16@"NSArray"24@"NSString"32
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"NSArray"40
v40@0:8@"NSString"16@"NSString"24@"NSArray"32
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40
v40@0:8q16q24@"NSString"32
v28@0:8@?16B24
v24@0:8@?16
B28@0:8B16@?20
v20@0:8B16
v40@0:8B16@20@28I36
B20@0:8B16
B40@0:8B16@20@28I36
I16@0:8
B20@0:8I16
v20@0:8i16
i16@0:8
v32@0:8@16@?24
B40@0:8@16@24@32
B32@0:8@16@24
@24@0:8@16
I24@0:8@16
B32@0:8I16@20B28
@24@0:8@?16
@"IMRemoteObject<IDSDaemonProtocol>"
@"IDSDaemonControllerForwarder"
@"IMLocalObject"
@"IDSDaemonListener"
@"NSProtocolChecker"
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_group>"
@"NSMutableDictionary"
@"NSSet"
@"NSMutableSet"
@40@0:8@16@24@32
@48@0:8@16@24@32@?40
@?16@0:8
v28@0:8B16@?20
v28@0:8I16@?20
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
v52@0:8@16@24@32B40@?44
v32@0:8@"NSData"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"NSArray">16
v28@0:8B16@?<v@?>20
v24@0:8@?<v@?I>16
v28@0:8I16@?<v@?>20
v32@0:8@"NSString"16@?<v@?>24
v40@0:8@"NSString"16@"NSString"24@?<v@?>32
v24@0:8@?<v@?@"NSError">16
v48@0:8@"NSString"16@"IDSURI"24@"IDSURI"32@?<v@?@"IDSQueryKeyTransparencyContext"@"NSArray"@"NSError">40
v52@0:8@"NSString"16@"IDSURI"24@"IDSURI"32B40@?<v@?@"NSArray"@"NSError">44
v48@0:8@"NSString"16@"IDSURI"24@"IDSURI"32@?<v@?@"NSError">40
v24@0:8@?<v@?@"NSArray"@"NSError">16
v24@0:8@?<v@?@"NSData"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSString">16
v32@0:8@"NSArray"16@?<v@?@"NSError">24
@40@0:8Q16q24Q32
@"_IDSGroupSession"
v32@0:8@"IDSPhoneSubscription"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSDictionary">24
@28@0:8@16B24
q32@0:8@16@24
@"IDSServiceMonitor"
v72@0:8@16@24@32@40@48@56@64
v80@0:8@16@24@32@40@48@56@64@72
v68@0:8@16@24@32q40@48B56@60
v40@0:8@16d24@32
v52@0:8@16@24@32B40@44
v36@0:8@16I24@28
v28@0:8@16B24
v40@0:8@16q24@32
v40@0:8@16@24^B32
v52@0:8@16q24B32d36@44
v48@0:8@"NSData"16@"NSString"24@"NSString"32@"NSDictionary"40
v72@0:8@"NSDictionary"16@"NSString"24@"NSDictionary"32@"NSString"40@"NSString"48@"NSString"56@"NSDictionary"64
v64@0:8@"NSData"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSDictionary"56
v80@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSString"56@"NSString"64@"NSDictionary"72
v68@0:8@"NSString"16@"NSString"24@"NSString"32q40@"NSError"48B56@"NSDictionary"60
v64@0:8@"NSString"16@"NSString"24@"NSString"32@"NSArray"40@"NSArray"48@"NSDictionary"56
v56@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSDictionary"48
v64@0:8@"NSDictionary"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSDictionary"56
v40@0:8@"NSString"16d24@"NSError"32
v40@0:8@"NSString"16@"NSString"24@"NSError"32
v32@0:8@"NSString"16@"NSArray"24
v32@0:8@"NSString"16@"NSNumber"24
v32@0:8@"NSData"16@"NSError"24
v40@0:8@"NSData"16@"NSString"24@"NSError"32
v72@0:8@"NSData"16@"NSData"24@"NSArray"32@"NSArray"40@"NSData"48@"NSString"56@"NSError"64
v40@0:8@"NSNumber"16@"NSString"24@"NSError"32
v52@0:8@"NSString"16@"NSDictionary"24@"NSString"32B40@"NSError"44
v64@0:8@"NSDictionary"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSNumber"56
v36@0:8@"NSString"16I24@"NSError"28
v36@0:8@"NSString"16@"NSSet"24B32
v28@0:8@"NSString"16B24
v40@0:8@"NSString"16@"NSArray"24@"NSError"32
v40@0:8@"NSString"16@"NSDictionary"24@"NSError"32
v32@0:8@"NSString"16@"NSError"24
v36@0:8@"NSString"16@"NSArray"24B32
v48@0:8@"NSDictionary"16@"NSString"24@"NSString"32@"NSString"40
v40@0:8@"NSObject<OS_xpc_object>"16@"NSString"24@"NSError"32
v40@0:8@"NSString"16q24@"NSError"32
v32@0:8q16@"NSError"24
v40@0:8q16@"NSData"24@"NSString"32
v32@0:8@"NSArray"16@"NSError"24
v40@0:8@"NSString"16@"NSString"24^B32
v40@0:8@"NSString"16@"NSError"24@"NSArray"32
v40@0:8q16@"NSString"24@"NSError"32
v52@0:8@"NSString"16q24B32d36@"NSError"44
v32@0:8@?16@?24
@"IDSInternalQueueController"
@"NSHashTable"
@"CUTWeakReference"
v32@0:8@"ENGroup"16@?<v@?@"NSError">24
v40@0:8@"ENGroup"16@"ENGroup"24@?<v@?@"NSError">32
@32@0:8Q16Q24
@32@0:8Q16@24
@"NSArray"
@"NSNumber"
v32@0:8@"IDSAccountController"16@"IDSAccount"24
@56@0:8@16@24d32d40@48
v32@0:8@16Q24
v24@0:8Q16
v40@0:8Q16Q24@?32
@24@0:8Q16
v32@0:8Q16@?24
v48@0:8@16@24Q32@?40
v44@0:8@16Q24B32@?36
v52@0:8@16@24Q32B40@?44
v36@0:8d16@24B32
Q24@0:8@16
B40@0:8Q16Q24@?32
d16@0:8
v24@0:8d16
@"NSMapTable"
@"IDSCTAdapter"
@40@0:8@16@24q32
@48@0:8@16@24q32@40
v20@0:8I16
B32@0:8@16^@24
Q24@0:8Q16
@"_IDSSession"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"IDSDaemonRequestTimer"
@"_IDSBatchIDQueryController"
@36@0:8@16@24B32
B64@0:8@16@24q32@40^@48^@56
@"_IDSConnection"
B56@0:8@16@24@32^@40^@48
v36@0:8@16B24@?28
v32@0:8@"NSUUID"16@?<v@?@"NSError">24
v32@0:8@"IDSLocalPairingAddPairedDeviceInfo"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"IDSLocalPairingLocalDeviceRecord"@"NSDictionary"@"NSError">16
v36@0:8@"NSUUID"16B24@?<v@?@"NSError">28
v40@0:8@"NSString"16@"NSSet"24@?<v@?@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSString"@"NSString"B>40
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@48@0:8@16Q24q32Q40
v24@0:8@?<v@?@"<IDSXPCPairing>"@"NSError">16
v24@0:8@?<v@?@"<IDSXPCPairedDeviceManager>"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"<IDSXPCReunionSync>"@"NSError">24
v24@0:8@?<v@?@"<IDSXPCOpportunistic>"@"NSError">16
v24@0:8@?<v@?@"<IDSXPCRegistration>"@"NSError">16
v24@0:8@?<v@?@"<IDSXPCInternalTesting>"@"NSError">16
@32@0:8@?16@24
v40@0:8@16@?24@32
v32@0:8@?16@24
@"_IDSCompletionHandler"
@"IDSXPCDaemonController"
@40@0:8q16@24@32
@48@0:8@16@24@32@40
@"IDSAuthenticationCertificate"
@"NSData"
@56@0:8@16@24@32@40@48
@24@0:8q16
@32@0:8q16@24
q24@0:8q16
q24@0:8@16
@"IDSPhoneCertificateVendor"
v32@0:8q16@?24
q24@0:8^@16
@"NSXPCInterface"
@"NSMutableArray"
@"_IDSAccountController"
v32@0:8@"IDSBaseSocketPairConnection"16@"NSData"24
v24@0:8@"IDSBaseSocketPairConnection"16
@"IDSBaseSocketPairConnection"
@"NSDictionary"
^{cfs_client_s=}
@"NSError"
v40@0:8@"IDSTransactionLogTaskHandler"16@"NSArray"24@?<v@?@"NSArray"@"NSError">32
v40@0:8@"IDSTransactionLogTaskHandler"16@"<NSSecureCoding>"24@?<v@?@"NSArray"@"<NSSecureCoding>"B@"NSError">32
v40@0:8@"IDSTransactionLogTaskHandler"16@"<NSSecureCoding>"24@?<v@?@"NSError">32
v32@0:8@"IDSTransactionLogTaskHandler"16@?<v@?@"<NSSecureCoding>"@"NSError">24
v40@0:8@"IDSTransactionLogTaskHandler"16@"NSSet"24@?<v@?@"IDSTransactionLogTaskHandlerAccountInfo"@"NSError">32
@"<IDSGroupContextControllerDelegate>"
@"CUTPromiseSeal"
@"IDSCloudKitContainer"
@"ENGroupContext"
@"ENAccountIdentity"
v28@0:8@"IDSAccount"16B24
v32@0:8@"IDSAccount"16@"NSArray"24
@44@0:8@16@24B32@36
v48@0:8:16@?24@?32@?40
v56@0:8:16@?24@?32@?40@48
@48@0:8@16@24@32Q40
B60@0:8@16@24@32@40B48@52
@"IDSAccount"
@"IMOrderedMutableDictionary"
v40@0:8@"_ENGroupInfo"16@"ENGroup"24@?<v@?@"ENGroup"@"NSError">32
v32@0:8@"ENGroupID"16@?<v@?@"ENGroup"@"NSError">24
v32@0:8@"ENGroup"16@?<v@?@"NSData"@"NSError">24
v32@0:8@"NSData"16@?<v@?@"ENGroup"@"NSError">24
v32@0:8@"<ENCypher>"16@?<v@?@"NSArray"B>24
v40@0:8@"ENGroup"16@"ENGroup"24@?<v@?B@"NSError">32
v32@0:8@"ENStableGroupID"16@?<v@?@"ENGroup">24
v24@0:8@?<v@?>16
v32@0:8@"ENGroupID"16@?<v@?>24
@"NSXPCConnection"
@"IDSGroupContextNotifyingObserver"
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
@40@0:8@16q24@32
@"NSUUID"
@48@0:8@16@24@?32@40
@"NSInputStream"
@"NSOutputStream"
v56@0:8@16@24@32@40@?48
@32@0:8d16@?24
@56@0:8@16@24d32@?40@?48
@40@0:8@16@?24@?32
@"IDSXPCConnection"
@28@0:8I16^@20
@24@0:8^@16
@"_IDSAccount"
v56@0:8@16@24@32@?40@48
v64@0:8@16@24@32@40@?48@56
@"_IDSGenericCompletionHandler"
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
B32@0:8Q16q24
v28@0:8:16S24
:20@0:8S16
B72@0:8@16@24@32q40@48^@56^@64
B48@0:8@16@24@32^@40
B64@0:8@16@24@32@40^@48^@56
B56@0:8@16q24@32^@40^@48
@32@0:8@16^@24
@36@0:8@16I24^@28
@28@0:8i16^@20
@"_IDSService"
@40@0:8@16@?24@32
@"IDSDaemonResponseHandler"
@"IMTimer"
@40@0:8@16d24@?32
v32@0:8@"IDSGroupContextController"16@"ENGroup"24
@"NSDictionary"32@0:8@"IDSGroupContextController"16@"NSSet"24
v52@0:8@16@24B32@36@44
v56@0:8@"IDSConnection"16@"NSData"24@"NSString"32@"NSString"40@"IDSMessageContext"48
v48@0:8@"IDSConnection"16@"NSDictionary"24@"NSString"32@"IDSMessageContext"40
v48@0:8@"IDSConnection"16@"NSData"24@"NSString"32@"IDSMessageContext"40
v48@0:8@"IDSConnection"16@"IDSDeviceIdentity"24@"NSError"32@"IDSMessageContext"40
v56@0:8@"IDSConnection"16@"NSString"24@"NSString"32@"NSString"40@"IDSMessageContext"48
v40@0:8@"IDSConnection"16@"NSString"24@"IDSMessageContext"32
v48@0:8@"IDSConnection"16@"IDSProtobuf"24@"NSString"32@"IDSMessageContext"40
v28@0:8@"IDSConnection"16B24
v32@0:8@"IDSConnection"16@"NSArray"24
v52@0:8@"IDSConnection"16@"NSString"24B32@"NSError"36@"IDSMessageContext"44
v48@0:8@"IDSConnection"16@"NSString"24@"NSString"32@40
v32@0:8@"IDSConnection"16q24
v40@0:8@"IDSConnection"16@"NSDictionary"24@"NSString"32
v40@0:8@"IDSConnection"16@"NSString"24@"NSArray"32
v60@0:8@16@24@32q40@48B56
v60@0:8@"IDSConnection"16@"NSString"24@"NSString"32q40@"NSError"48B56
v68@0:8@"IDSConnection"16@"NSString"24@"NSString"32q40@"NSError"48B56@60
v64@0:8@"IDSConnection"16@"NSString"24@"NSString"32@"NSArray"40@"NSArray"48@"NSDictionary"56
v48@0:8@"IDSConnection"16@"NSDictionary"24@"NSString"32@40
v48@0:8@"IDSConnection"16@"NSString"24@"NSString"32@"NSString"40
v80@0:8@"IDSConnection"16@"IDSAccount"24@"NSString"32@"NSString"40@"NSNumber"48@"NSDictionary"56@"NSData"64@72
v40@0:8@"IDSConnection"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
@?24@0:8@16
v32@0:8:16S24B28
:24@0:8S16B20
v24@0:8^@16
B80@0:8@16@24@32@40q48@56^@64^@72
B56@0:8@16q24@32^@40@?48
@"IDSAccountController"
@"NSObject<OS_xpc_object>"
@"IDSGroupContextController"
@"IDSQuickSwitchAcknowledgementTracker"
v52@0:8@16@24B32@36@?44
v56@0:8@16@24B32B36@40@?48
@52@0:8@16@24@?32@?40B48
@24@0:8^{_NSZone=}16
@"<NSSecureCoding>"40@0:8@"NSXPCConnection"16@"NSXPCCoder"24@32
v36@0:8@"NSXPCConnection"16@"NSInvocation"24B32
@"<NSXPCProxyCreating>"
@48@0:8@16@24d32@?40
v60@0:8@16@24@32B40B44B48@?52
B68@0:8@16@24@32B40B44B48@52@?60
B48@0:8@16@24@32@?40
B60@0:8@16@24@32B40@44@?52
B56@0:8@16@24@32@40@?48
q40@0:8@16@24@32
v24@0:8@?<v@?@"NSDictionary">16
{?=qqq}16@0:8
@"_IDSDevice"
@104@0:8c16@20@28C36q40I48S52C56q60I68I72q76@84@92B100
@52@0:8^{?=CCCCSCCC[16C][16C]CSS[3C]}16I24q28@36@44
c16@0:8
C16@0:8
S16@0:8
v20@0:8S16
@"_IDSDataChannelLinkContext"
@"NSObject<OS_nw_connection>"
@"NSObject<OS_nw_path_evaluator>"
@"IDSDataChannelLinkContext"
@20@0:8i16
v28@0:8c16@20
v28@0:8*16S24
v20@0:8c16
v44@0:8@16@24@32B40
v20@0:8C16
v48@0:8*16Q24^{?=cSSC}32^{?=IQSCc[12S]CS{?=SSSSS}dQ}40
v60@0:8r^^v16^I24^{?=cSSC}32i40^^{?}44@?52
v60@0:8r^^v16^I24{?=cSSC}32i40^{?=IQSCc[12S]CS{?=SSSSS}dQ}44@?52
v52@0:8r^v16I24{?=cSSC}28^{?=IQSCc[12S]CS{?=SSSSS}dQ}36@?44
v44@0:8r^v16I24{?=cSSC}28@?36
v24@0:8^{?=*QqqIBBBBBBI{sockaddr_storage=CC[6c]q[112c]}{sockaddr_storage=CC[6c]q[112c]}Si[8{?=*Si[12S]qCSCBBS{?=SSSSS}BI}]ccidQ[0C]}16
^{?=*QqqIBBBBBBI{sockaddr_storage=CC[6c]q[112c]}{sockaddr_storage=CC[6c]q[112c]}Si[8{?=*Si[12S]qCSCBBS{?=SSSSS}BI}]ccidQ[0C]}20@0:8B16
v32@0:8@16I24I28
v48@0:8{?=cSSC}16^{?=IQSCc[12S]CS{?=SSSSS}dQ}24C32C36^{?=****B}40
@"_IDSDatagramChannel"
@"_IDSDeviceConnection"
@"_IDSIDQueryController"
@68@0:8@16@24q32Q40B48@52@60
@56@0:8@16@24q32@40@48
v48@0:8@"ENGroupContext"16@"_ENGroupInfo"24@"ENGroup"32@?<v@?@"ENGroup"@"NSError">40
v40@0:8@"ENGroupContext"16@"ENGroupID"24@?<v@?@"ENGroup"@"NSError">32
v40@0:8@"ENGroup"16@"ENGroupContext"24@?<v@?@"NSData"@"NSError">32
v40@0:8@"NSData"16@"ENGroupContext"24@?<v@?@"ENGroup"@"NSError">32
q24@0:8@"ENGroupContext"16
v40@0:8@"ENGroupContext"16@"ENGroup"24@?<v@?>32
v40@0:8@"ENGroupContext"16@"ENGroupID"24@?<v@?@"ENGroup">32
v40@0:8@"ENGroupContext"16@"ENStableGroupID"24@?<v@?@"ENGroup">32
v32@0:8@"ENGroupContext"16@?<v@?@"NSArray">24
v32@0:8@"ENGroupContext"16@?<v@?>24
v40@0:8@"ENGroupContext"16@"ENGroupID"24@?<v@?>32
@32@0:8*16^v24
@"NSTimer"
@"NSDate"
@"_IDSRealTimeEncryptionProxy"
@"IDSTransactionLogTask"
@"IDSTransactionLogSyncTask"
@"<IDSTransactionLogTaskHandlerDelegate>"
